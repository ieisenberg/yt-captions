[
  {
    "start": "0",
    "end": "59000"
  },
  {
    "text": "[Music]",
    "start": "3500",
    "end": "7820"
  },
  {
    "text": "hello everyone welcome to my talk on driving organizational sustainability with uh platform engineering um so",
    "start": "12360",
    "end": "18800"
  },
  {
    "text": "before I continue just a little bit about me um so right now I'm currently on Leaf but normally I'm a Staff engineer uh for the New York Times",
    "start": "18800",
    "end": "24640"
  },
  {
    "text": "operations engineering um organization um most recently focused on Election Readiness and observable which sits",
    "start": "24640",
    "end": "30800"
  },
  {
    "text": "under our wider platform engineering organization and so as someone who's responsible for the direction of my team",
    "start": "30800",
    "end": "36360"
  },
  {
    "text": "and um is a leader across all of the times I spent a lot of my time thinking about the function of our platform and",
    "start": "36360",
    "end": "42120"
  },
  {
    "text": "reliability engineering story and how we can facilitate success across all of the New York Times and ultimately what that",
    "start": "42120",
    "end": "48039"
  },
  {
    "text": "looks like is coming from the perspective of enabling our department to work in a way that ensures long-term organizational sustainability and so",
    "start": "48039",
    "end": "55280"
  },
  {
    "text": "we'll start off by talking about what we even mean when we say organizational sustainability and we specifically I",
    "start": "55280",
    "end": "60640"
  },
  {
    "start": "59000",
    "end": "142000"
  },
  {
    "text": "Define sustainability as the continuous practice of operating in a way that um enables short-term growth opportunities",
    "start": "60640",
    "end": "67280"
  },
  {
    "text": "while ensuring long-term success and so there's a lot to unpack here so I'm going to just break it down a little and",
    "start": "67280",
    "end": "72640"
  },
  {
    "text": "so first sustainability is a continuous practice and so even if we spend a lot of upfront time thinking about how we",
    "start": "72640",
    "end": "78200"
  },
  {
    "text": "can ensure long-term sustainability circumstances change often quickly especially uh these past few years in",
    "start": "78200",
    "end": "84240"
  },
  {
    "text": "Tech so we need those continuous Avenues to ensure long-term success secondly enbl short-term growth",
    "start": "84240",
    "end": "91119"
  },
  {
    "text": "opportunities sometimes those risky short-term growth opportunities are what lead to our long-term success um the",
    "start": "91119",
    "end": "97040"
  },
  {
    "text": "emergence of bundles of tools for example has worked really well for some companies including the the times I'm",
    "start": "97040",
    "end": "102399"
  },
  {
    "text": "sure at least a few of us here love verle or New York Times cooking or wire cutter and whatnot right and like so do",
    "start": "102399",
    "end": "108240"
  },
  {
    "text": "we because those were ultimately revolutionary decisions for us and so we don't want to give those kind of opportunities up but putting on my",
    "start": "108240",
    "end": "114759"
  },
  {
    "text": "reliability management hat we also need to prepare for the risk of those opportunities which which leads us to",
    "start": "114759",
    "end": "120320"
  },
  {
    "text": "the component of enabling long-term success we frequently see companies take their Core Business for granted right in",
    "start": "120320",
    "end": "126759"
  },
  {
    "text": "the name of growth um but for every successful growth opportunity most opportunities do fail and so preparation",
    "start": "126759",
    "end": "132959"
  },
  {
    "text": "for this type of risk is essential and so now that I've defined the goal which is um organizational sustainability",
    "start": "132959",
    "end": "138959"
  },
  {
    "text": "let's define the strategy which is platform engineering and so as much as I hate",
    "start": "138959",
    "end": "144000"
  },
  {
    "start": "142000",
    "end": "277000"
  },
  {
    "text": "repeating words on a slide I'm going to do it if only for emphasis um so using my definition of platform engineering",
    "start": "144000",
    "end": "149879"
  },
  {
    "text": "platform engineering drives organizational sustainability by practicing soot technical principles that provide a community-driven support",
    "start": "149879",
    "end": "156360"
  },
  {
    "text": "system for application developers using our standardized shared platform architecture and so these three uh",
    "start": "156360",
    "end": "163000"
  },
  {
    "text": "components form the basis of what I what I think it means to provide a platform and so one theme throughout",
    "start": "163000",
    "end": "169720"
  },
  {
    "text": "this talk will be about how our platform about how platform engineering can enable us to scale our organizations to",
    "start": "169720",
    "end": "175440"
  },
  {
    "text": "enable the growth that our businesses demand and as part of that we'll need to ask ourselves like at what point is this platform engineering framework even",
    "start": "175440",
    "end": "182080"
  },
  {
    "text": "necessary and so we frequently talk about scaling uh software but what does it actually mean to scale an organization and the answer is",
    "start": "182080",
    "end": "188360"
  },
  {
    "text": "ultimately that our ability to scale our organization is directly tied to our ability to scale our software and when",
    "start": "188360",
    "end": "193920"
  },
  {
    "text": "we think about scaling our software we have to be intentional about addressing the inevitable complexity that comes with that growth and to address this",
    "start": "193920",
    "end": "199560"
  },
  {
    "text": "complexity we have to bring this attention to how our architecture can enable those needs and complexity makes development",
    "start": "199560",
    "end": "206080"
  },
  {
    "text": "so much harder right it's made things so much harder that we as a collective industry have evolved the ways that we Even build applications so for example",
    "start": "206080",
    "end": "212040"
  },
  {
    "text": "the modular monolith has become an increasingly popular architecture style especially as an intermediate step",
    "start": "212040",
    "end": "217439"
  },
  {
    "text": "between um uh model ethic architectures and distributed architectures um that",
    "start": "217439",
    "end": "222840"
  },
  {
    "text": "enable us to work on and scale our applications so just like we've evolved the ways that we build applications to",
    "start": "222840",
    "end": "229599"
  },
  {
    "text": "embrace new architectural patterns like microservices um we must also evolve the delivery strategies that we use to build",
    "start": "229599",
    "end": "235959"
  },
  {
    "text": "those new architectural patterns so if these architectural patterns are a solution to the technical",
    "start": "235959",
    "end": "242159"
  },
  {
    "text": "complexity of scaling our applications platform engineering is a soot technical solution to the organizational",
    "start": "242159",
    "end": "248239"
  },
  {
    "text": "complexity of scaling our applications and so to summarize it concisely platform engineering is a soot technical",
    "start": "248239",
    "end": "255040"
  },
  {
    "text": "solution to the organizational complexity of scaling our",
    "start": "255040",
    "end": "259919"
  },
  {
    "text": "applications and so we'll spend the rest of this talk um decomposing each of these components even further the principles that guide us the Community",
    "start": "261400",
    "end": "267840"
  },
  {
    "text": "Driven support that enables application developers and the architecture that we use along the",
    "start": "267840",
    "end": "273960"
  },
  {
    "text": "way so first we have the principles that guide the rest of our platform having focus on reliability management the",
    "start": "276320",
    "end": "283039"
  },
  {
    "start": "277000",
    "end": "313000"
  },
  {
    "text": "principles that we'll review are heavily influenced by devops particularly because devops principles take a strong consideration for both the technical and",
    "start": "283039",
    "end": "289759"
  },
  {
    "text": "social components of what it means to build and operate software and so let's held into those principles so some of us",
    "start": "289759",
    "end": "296240"
  },
  {
    "text": "might have heard of the coms framework um which is basically a framework of principles that should be the core of",
    "start": "296240",
    "end": "301759"
  },
  {
    "text": "devops organizations and now while all five could easily be easily be applicable here I'm just going to focus",
    "start": "301759",
    "end": "307280"
  },
  {
    "text": "on three more specifically culture Automation and measurement so starting",
    "start": "307280",
    "end": "312680"
  },
  {
    "text": "off with culture uh the comms framework tells us that devops stries a culture of continuous Improvement and reduces silos",
    "start": "312680",
    "end": "318800"
  },
  {
    "start": "313000",
    "end": "433000"
  },
  {
    "text": "by intentionally sharing knowledge and feedback and the same is true here for platform engineering but we'll talk about it more directly by putting it in",
    "start": "318800",
    "end": "325199"
  },
  {
    "text": "the context of community so in devops right we often talk about breaking down s and the way that we um bridge that is by",
    "start": "325199",
    "end": "332240"
  },
  {
    "text": "sharing knowledge and to share knowledge ultimately means to connect connection and communication are key for preventing",
    "start": "332240",
    "end": "337720"
  },
  {
    "text": "the silos that would in hinder our ability to make continuous progress and when we're talking about organizations",
    "start": "337720",
    "end": "343039"
  },
  {
    "text": "especially as our organizations grow the most effective way to Manifest this culture of sharing is to think about how",
    "start": "343039",
    "end": "349160"
  },
  {
    "text": "we can cultivate a strong community that Fosters this culture at scale because ultimately the opposite of isolation is",
    "start": "349160",
    "end": "355759"
  },
  {
    "text": "to be in community with other people and the reason that that is so important is because because more than anything right learning is our most sustainable",
    "start": "355759",
    "end": "362520"
  },
  {
    "text": "advantage and so this quote is by Andrew Clay Schaefer who is often known for being the co-founder of puppet and he",
    "start": "362520",
    "end": "368800"
  },
  {
    "text": "said this in his talk about soot Technical Systems at devop dayss Amsterdam I think 2023 and the way I",
    "start": "368800",
    "end": "375360"
  },
  {
    "text": "interpreted this to mean is that because our industry is always changing being able to keep up with this change is the",
    "start": "375360",
    "end": "380400"
  },
  {
    "text": "biggest advantage that we can give ourselves but to do that learning needs to be part of our organization's DNA and",
    "start": "380400",
    "end": "386080"
  },
  {
    "text": "so while I agree with him uh I'd like to modify this a little bit to emphasize that communal learning is the most sustainable Advantage because while our",
    "start": "386080",
    "end": "393599"
  },
  {
    "text": "individual growth is important if this knowledge isn't being shared intentionally we risk introducing singular points of knowledge and so just",
    "start": "393599",
    "end": "400240"
  },
  {
    "text": "like our Technical Systems right humans are not supposed to be 100% reliable and so we shouldn't put be putting anyone in",
    "start": "400240",
    "end": "406280"
  },
  {
    "text": "the position to be singular points of knowledge this is ultimately how those silos get created and this is ultimately how silos become an organizational",
    "start": "406280",
    "end": "413240"
  },
  {
    "text": "pattern that hinders sustainability in other words Community communal learning is what provides the",
    "start": "413240",
    "end": "419639"
  },
  {
    "text": "knowledge Rundy needed to sustain both ourselves and the",
    "start": "419639",
    "end": "424280"
  },
  {
    "text": "business next we have automation which improves our software delivery process by reducing Human air",
    "start": "429160",
    "end": "435919"
  },
  {
    "start": "433000",
    "end": "486000"
  },
  {
    "text": "improving our efficiency and enabling faster delivery this means thinking critically about the type of work that",
    "start": "435919",
    "end": "441639"
  },
  {
    "text": "doesn't require business specific knowledge and figuring out whether that's work that can be Consolidated into software that's managed primarily",
    "start": "441639",
    "end": "448479"
  },
  {
    "text": "by centralized platform teams in this way we can reduce the required cognitive flow that product Engineers often have",
    "start": "448479",
    "end": "454319"
  },
  {
    "text": "to indulge in by managing all aspects of their software and the type of work that's important but can be Consolidated",
    "start": "454319",
    "end": "460160"
  },
  {
    "text": "in an automated or centralized way is work that's repeatable or manual which is what SRE might often refer to as toil",
    "start": "460160",
    "end": "466319"
  },
  {
    "text": "and what product Engineers might refer to as boiler plate software another aspect of platform",
    "start": "466319",
    "end": "471479"
  },
  {
    "text": "engineering is how we should be explicit about improving efficiency by leading into Solutions built by Third parties",
    "start": "471479",
    "end": "477479"
  },
  {
    "text": "whether through vendor Solutions or open source ones and the reason for this is because we need to reduce our own cognitive load and maintenance burden",
    "start": "477479",
    "end": "484400"
  },
  {
    "text": "just as much as product Engineers do and lastly we have measurement first let's talk about the function of measurement",
    "start": "484400",
    "end": "490720"
  },
  {
    "start": "486000",
    "end": "536000"
  },
  {
    "text": "which is Ultimate to have feedback loops for when your work is actually having its intended impact and these feedback loops consist of both qualitative and",
    "start": "490720",
    "end": "497360"
  },
  {
    "text": "quantitative feedback loops for continuous Improvement and so the way that this",
    "start": "497360",
    "end": "503479"
  },
  {
    "text": "principle ends up connecting to sustainability is Again by eliminating the spent the time spent on work that doesn't ultimately lead to our business",
    "start": "503479",
    "end": "509840"
  },
  {
    "text": "goals so for example right if a tool that we've spent many weeks on isn't actually serving our product engineering",
    "start": "509840",
    "end": "515279"
  },
  {
    "text": "users which leads to lack of adoption we've now wasted time that could have actually directly served our payn users",
    "start": "515279",
    "end": "521039"
  },
  {
    "text": "right and so we end up missing the ultimate goal of building applications that age well with our evolving product growth opportunities and so in other",
    "start": "521039",
    "end": "527519"
  },
  {
    "text": "words these feedback loops just keep us on the right path towards the continuous Improvement that enables us to build new",
    "start": "527519",
    "end": "532560"
  },
  {
    "text": "features while maintaining our existing software so now that we've defined our principles we'll shift over to thinking",
    "start": "532560",
    "end": "538399"
  },
  {
    "start": "536000",
    "end": "766000"
  },
  {
    "text": "about the support strategy for application developers integrating with our platform so we'll speak to both scalable and flexible strategies and put",
    "start": "538399",
    "end": "545519"
  },
  {
    "text": "that in the context of the ways that we measure success consolidate efforts and cultivate a culture that values",
    "start": "545519",
    "end": "550800"
  },
  {
    "text": "sustainability now the first is the most scalable strategy of all which is to make building sustainable software easy",
    "start": "550800",
    "end": "557680"
  },
  {
    "text": "so we'll deep we'll Deep dive into this a little bit more in the next section when we talk about our platform architecture but to get to set the stage",
    "start": "557680",
    "end": "564519"
  },
  {
    "text": "for that let's remember from earlier that sustainable organizations are directly tied to their ability to build sustainable software and so I'm sure",
    "start": "564519",
    "end": "571839"
  },
  {
    "text": "we've all worked with uh software that clearly wasn't built with much foresight right is usually what we refer to as a",
    "start": "571839",
    "end": "577440"
  },
  {
    "text": "tech debt or something um and Tech debt is ultimately inevitable right but we can mitigate its Risk by being",
    "start": "577440",
    "end": "583000"
  },
  {
    "text": "intentional strategic about when and where we inject that Tech debt it should have a function right usually for the",
    "start": "583000",
    "end": "588839"
  },
  {
    "text": "purposes of growth opportunities and tools that are easy to that aren't easy to integrate with are type of technical",
    "start": "588839",
    "end": "593959"
  },
  {
    "text": "debt that typically doesn't pay off in the long term so it's especially our duty as platform Engineers to build easy",
    "start": "593959",
    "end": "599399"
  },
  {
    "text": "to use tools to minimize the time that we uh spend needing to support application",
    "start": "599399",
    "end": "604600"
  },
  {
    "text": "developers now that isn't to say that we shouldn't be willing to support developers right in fact the opposite is",
    "start": "604600",
    "end": "609760"
  },
  {
    "text": "true um just because platform engineer is supposed to make uh domain boundaries clearer and decouple product development",
    "start": "609760",
    "end": "615600"
  },
  {
    "text": "from supportive tools doesn't mean that we get to stop talking to each other or working with each other either and I",
    "start": "615600",
    "end": "620680"
  },
  {
    "text": "know as Engineers right we can often have an aversion to social interaction but people are supposed to interact with",
    "start": "620680",
    "end": "625800"
  },
  {
    "text": "each other and I think the pursuit to make everything self uh service is often more harmful than it is",
    "start": "625800",
    "end": "631279"
  },
  {
    "text": "helpful what we really need to do is be intentional about the right time when the right time to support is and how we can leverage a culture of communal",
    "start": "631279",
    "end": "637720"
  },
  {
    "text": "learning and support so that platform Engineers are not the singular points of failure or knowledge that I mentioned earlier not only does this alleviate",
    "start": "637720",
    "end": "644399"
  },
  {
    "text": "some tension on us but sorry about that but it enables us to be community-driven in the way that we support product",
    "start": "644399",
    "end": "649920"
  },
  {
    "text": "Engineers so we talked about measurement as a principle earlier and an important measurement of our Effectiveness is the",
    "start": "649920",
    "end": "655360"
  },
  {
    "text": "adoption of our developer platform so what intention looks like there is defining the ways that you approach",
    "start": "655360",
    "end": "660480"
  },
  {
    "text": "support and clearly communicating it to avoid mismatched expectations that will ultimately degrade trust between platform and product engineers and so in",
    "start": "660480",
    "end": "668160"
  },
  {
    "text": "this of time I'll only provide one example of this which is to provide an easy um decision framework driven by the",
    "start": "668160",
    "end": "673200"
  },
  {
    "text": "status of your tool for example I don't have time review but feel free to take a",
    "start": "673200",
    "end": "679440"
  },
  {
    "text": "picture so a common Pitfall for platform Engineers is to take on too much platform um integration work rather so",
    "start": "683920",
    "end": "691360"
  },
  {
    "text": "like the last slide showed uh there is some room for that right in the early experimental mode but that's not scalable and therefore it's not",
    "start": "691360",
    "end": "697480"
  },
  {
    "text": "sustainable um nor are we often even the right people to be integrating our tools with applications that we have uh no",
    "start": "697480",
    "end": "703360"
  },
  {
    "text": "contacts with right so relatable example here might be like testing right platform Engineers can certainly create",
    "start": "703360",
    "end": "708920"
  },
  {
    "text": "or recommend testing tools or methods um but we can't be the ones who are actually writing the unit test for a",
    "start": "708920",
    "end": "714079"
  },
  {
    "text": "service um that requires domain knowledge and luckily if we're doing our jobs right um",
    "start": "714079",
    "end": "719760"
  },
  {
    "text": "all the time that we spend or that we save them by providing support frees the product engineering team to take on that actual application specific work and",
    "start": "719760",
    "end": "727519"
  },
  {
    "text": "lastly driving a sustainable culture sustainability doesn't just apply to software it applies to people and the",
    "start": "727519",
    "end": "732800"
  },
  {
    "text": "two are very closely tied referencing um accelerate uh it talks about self- sustainability and the different types",
    "start": "732800",
    "end": "739120"
  },
  {
    "text": "of burnout to look out for whether that's physical or emotional um Etc because platform engineering work",
    "start": "739120",
    "end": "745519"
  },
  {
    "text": "naturally touches many if not all parts of our organization we have a unique opportunity to show um to show what it",
    "start": "745519",
    "end": "751600"
  },
  {
    "text": "looks like to operate in a way that achieves Excellence without sacrificing people along the way and so our work is",
    "start": "751600",
    "end": "756800"
  },
  {
    "text": "naturally collaborative and can impact so many parts of our organization so we should drive a culture of intentionality",
    "start": "756800",
    "end": "762279"
  },
  {
    "text": "forward with everything that we do and lastly we have our platform architecture which is the architecture",
    "start": "762279",
    "end": "768279"
  },
  {
    "start": "766000",
    "end": "791000"
  },
  {
    "text": "that platform Engineers are building to support application development and again the function of this architecture",
    "start": "768279",
    "end": "773560"
  },
  {
    "text": "ties directly to the first support strategies we talked about which is to make building sustainable software Easy",
    "start": "773560",
    "end": "778839"
  },
  {
    "text": "by reasonably consolidating efforts and cognitive load and so we already talked um about",
    "start": "778839",
    "end": "784720"
  },
  {
    "text": "our high level principles next we'll review a few architectural design principles now the first is to embrace",
    "start": "784720",
    "end": "791360"
  },
  {
    "start": "791000",
    "end": "902000"
  },
  {
    "text": "uh design driven architecture as a core set of uh best practices and so intentionality should be an important",
    "start": "791360",
    "end": "797560"
  },
  {
    "text": "attribute of the ways that we build um technology and collaborate with others and this intention should manifest in",
    "start": "797560",
    "end": "802760"
  },
  {
    "text": "the way that we design platform systems whether that's to use abstraction or modularity to separate to separate",
    "start": "802760",
    "end": "808440"
  },
  {
    "text": "different functional concerns um this principle can be broken",
    "start": "808440",
    "end": "813480"
  },
  {
    "text": "down into many many pieces but I'm going to admit that for now because we'll talk about design tensions um and how to leave them in a few minutes secondly our",
    "start": "813480",
    "end": "821040"
  },
  {
    "text": "architecture uh should be complimentary to those of our users now that doesn't mean we shouldn't try to anticipate",
    "start": "821040",
    "end": "826720"
  },
  {
    "text": "developer needs right there's a value in thinking about where our platform architecture might be heading but to the",
    "start": "826720",
    "end": "831800"
  },
  {
    "text": "last principle on uh intentional design we need to design with the future in mind not build for it immediately much",
    "start": "831800",
    "end": "837639"
  },
  {
    "text": "in the same way that we might design a monolith application in a way that would enable us to decompose it into a distributed architecture in the",
    "start": "837639",
    "end": "844560"
  },
  {
    "text": "future so when we prioritize our work we should be driven by the needs of our application developers of our organization whose architecture should",
    "start": "844560",
    "end": "851199"
  },
  {
    "text": "be a reflection of our pain and users now that might mean to prioritizing and deprioritizing certain domains whether",
    "start": "851199",
    "end": "857800"
  },
  {
    "text": "that's cicd or observability or runtime language support um this is why we um",
    "start": "857800",
    "end": "863480"
  },
  {
    "text": "actually had an observability Focus team at the times at the times when I wrote this but um we actually don't anymore",
    "start": "863480",
    "end": "869759"
  },
  {
    "text": "um I says but I don't expect this to always be the case and I was right um so you know even within those domains or",
    "start": "869759",
    "end": "876440"
  },
  {
    "text": "problems you're trying to solve um you also need to build in a way that's responsive to evolving architecture and developer needs so for example right if",
    "start": "876440",
    "end": "883320"
  },
  {
    "text": "we want to improve the runtime experience of developers we should prioritize the languages that are actually used by them not the ones that",
    "start": "883320",
    "end": "889240"
  },
  {
    "text": "we just want to support first and so ultimately this is because we're not here to tell other developers what to do we're here to support them",
    "start": "889240",
    "end": "895680"
  },
  {
    "text": "and what they need to do and another reason this is important is because our platform architecture can easily lead to",
    "start": "895680",
    "end": "900800"
  },
  {
    "text": "what I would call platform chaos and so I really hate this slide um every time I see it but um the my point here is like",
    "start": "900800",
    "end": "907880"
  },
  {
    "start": "902000",
    "end": "1031000"
  },
  {
    "text": "we don't want that right we don't want to live in a world where we have 10 tools or platforms or whatever nonsense",
    "start": "907880",
    "end": "912959"
  },
  {
    "text": "you want to call this um for any given thing that we uh need to do right unnecessary drift is really",
    "start": "912959",
    "end": "920440"
  },
  {
    "text": "painful and over overwhelming number of tools especially custom ones it's just not the goal right tools are just",
    "start": "920959",
    "end": "926360"
  },
  {
    "text": "enablers of our goal to build successful engineering organizations and so instead right we as platform Engineers often",
    "start": "926360",
    "end": "932000"
  },
  {
    "text": "have to be managers of chaos and the way that we do that is by aligning the components of our developer platform",
    "start": "932000",
    "end": "937360"
  },
  {
    "text": "with specific domain use cases and so this enables us to design our platforms so that we see similar benefits of",
    "start": "937360",
    "end": "943959"
  },
  {
    "text": "concrete separations of concerns that we see in our enduser facing uh architectures and this is where I'll",
    "start": "943959",
    "end": "949880"
  },
  {
    "text": "talk I'll take a little bit of or a moment to talk about a common Pitfall that we see within platform engineering",
    "start": "949880",
    "end": "955040"
  },
  {
    "text": "um which is that platform engineering is not equal to infrastructure platforms and I think this is why we see a lot of",
    "start": "955040",
    "end": "960279"
  },
  {
    "text": "naive conversations happening about uh devops being dead in L of platform engineering and that's because too many",
    "start": "960279",
    "end": "965920"
  },
  {
    "text": "of us are operating on the assumption that uh the only shared platform that companies need is those limited to",
    "start": "965920",
    "end": "971120"
  },
  {
    "text": "infrastructure but for example we should also be thinking about how platforms can Aid the service or future development",
    "start": "971120",
    "end": "977000"
  },
  {
    "text": "cycle during the actual development phase that might mean having language runtime platforms that support the",
    "start": "977000",
    "end": "982319"
  },
  {
    "text": "development of standardized nodejs services for example and each of these can be decomposed even further though",
    "start": "982319",
    "end": "988639"
  },
  {
    "text": "again tying to principle number two the deom the decomposition should only happen if there's a genuine need for it",
    "start": "988639",
    "end": "994800"
  },
  {
    "text": "so for example if your organization decides to introduce a new standard language then that's a good moment to",
    "start": "994800",
    "end": "999839"
  },
  {
    "text": "decompose your runtime platform and in the infrastructure platform context you might see that",
    "start": "999839",
    "end": "1005440"
  },
  {
    "text": "further broken up into domains like Cloud infrastructure cicd or observability and the same technique",
    "start": "1005440",
    "end": "1010720"
  },
  {
    "text": "that we have um that we see in domain driven designs are the ones that we reuse in the platform context too now to",
    "start": "1010720",
    "end": "1016399"
  },
  {
    "text": "complicate it even further there are even product platforms which might refer to specific end user product domains or",
    "start": "1016399",
    "end": "1022440"
  },
  {
    "text": "a core platform um though you might see this as core Services depending on what your organiz organization decides to use",
    "start": "1022440",
    "end": "1028480"
  },
  {
    "text": "as a word um and lastly choose boring technology so this ties back um to when",
    "start": "1028480",
    "end": "1034760"
  },
  {
    "start": "1031000",
    "end": "1117000"
  },
  {
    "text": "I spoke about not building tools from scratch um and we can prevent that by being by not leaning into every Cutting",
    "start": "1034760",
    "end": "1040360"
  },
  {
    "text": "Edge opportunity so some years ago um a blog post named choosing uh choose",
    "start": "1040360",
    "end": "1046160"
  },
  {
    "text": "boring technology by Dan McKinley went sort of tech and he talked about this idea of innovation tokens and how uh we need to",
    "start": "1046160",
    "end": "1052960"
  },
  {
    "text": "be intentional about where we spend those Engineers love to play with new toys right but for every but every proof",
    "start": "1052960",
    "end": "1059320"
  },
  {
    "text": "of concept shouldn't necessarily be making it to production and I acknowledge that this is attempting especially because of cool organizations",
    "start": "1059320",
    "end": "1065640"
  },
  {
    "text": "like cntf um we're always building cool new standards and tools but recency bias shouldn't be driving our decision",
    "start": "1065640",
    "end": "1071679"
  },
  {
    "text": "criteria it should just be informing it and one of the most uh seen as boring",
    "start": "1071679",
    "end": "1077200"
  },
  {
    "text": "Technologies are Docs um and so this may be a hot take but too many internal developer platforms can be replaced by",
    "start": "1077200",
    "end": "1084039"
  },
  {
    "text": "good best practices and standards documentation and no it's not as exciting right but it's still work that",
    "start": "1084039",
    "end": "1089960"
  },
  {
    "text": "enables us to learn and mature how we build technology and even if months or years later you decide you do not end up",
    "start": "1089960",
    "end": "1096600"
  },
  {
    "text": "needing um to build you do end up needing to build a tool um it's still often not wasted effort because they",
    "start": "1096600",
    "end": "1101799"
  },
  {
    "text": "often end up being pretty good start for design and requirements Gathering anyway now I mentioned earlier about",
    "start": "1101799",
    "end": "1108240"
  },
  {
    "text": "some design tensions related to architecture best practices and so we'll review those next including a framework of how to address those primary uh those",
    "start": "1108240",
    "end": "1114760"
  },
  {
    "text": "four primary tensions so first we have what I think is the hardest tension to balance which is standardization versus",
    "start": "1114760",
    "end": "1121320"
  },
  {
    "start": "1117000",
    "end": "1261000"
  },
  {
    "text": "flexibility the shared nature of a developer platform is an awesome opportunity to reduce the risk of drift right but we have to hold that intention",
    "start": "1121320",
    "end": "1128080"
  },
  {
    "text": "with the flexibility that developers might need especially as our organization grows and the number of technical needs grows with it for",
    "start": "1128080",
    "end": "1134200"
  },
  {
    "text": "example um right now the uh the times is facing the consequences of building tens of services with an opinionated",
    "start": "1134200",
    "end": "1140320"
  },
  {
    "text": "framework that has not since aged well um so now not only do we have to revisit how we approach runtime support but we",
    "start": "1140320",
    "end": "1146400"
  },
  {
    "text": "also have to reconcile the tech de that manifested from this decision many years ago and that said reflecting on where we",
    "start": "1146400",
    "end": "1151799"
  },
  {
    "text": "went wrong but what we're doing now is to engage with our users and um communities of practice more and so I",
    "start": "1151799",
    "end": "1158039"
  },
  {
    "text": "started off by saying um this talk by saying the opposite of isolation is community and so again now we're approaching it from a standpoint of",
    "start": "1158039",
    "end": "1164000"
  },
  {
    "text": "driving standards with actual teams and our learning communities of practice next next we have the tension of",
    "start": "1164000",
    "end": "1169799"
  },
  {
    "text": "Simplicity and complexity as you respond to the evolving needs of your users complexity becomes harder to manage",
    "start": "1169799",
    "end": "1175480"
  },
  {
    "text": "because the architecture that supports them is likely subject to change whether that's to begin using event driven uh",
    "start": "1175480",
    "end": "1180720"
  },
  {
    "text": "communication Styles or begin embracing client uh side rendered fund ends for example and so this becomes another area",
    "start": "1180720",
    "end": "1188080"
  },
  {
    "text": "that we need to be intentional about like Tech de complexity was inevitable but we can compartmentalize it somewhat",
    "start": "1188080",
    "end": "1193320"
  },
  {
    "text": "by making sure that the developer facing interfaces are simple which leads us to the most common source of complexity in",
    "start": "1193320",
    "end": "1198400"
  },
  {
    "text": "soft engineering which is Integrations so we know the common principle of reducing coupling between",
    "start": "1198400",
    "end": "1204400"
  },
  {
    "text": "Services right um and the same applies to our work Integrations are high risk because avoiding coupling is incredibly",
    "start": "1204400",
    "end": "1211120"
  },
  {
    "text": "difficult right this is why a huge selling point for our vendors is their Integrations it's so that we don't have",
    "start": "1211120",
    "end": "1216600"
  },
  {
    "text": "to think about that anymore and So speaking of vendors remember our automation principle from earlier so",
    "start": "1216600",
    "end": "1222679"
  },
  {
    "text": "even though I just spent uh some time talking through design principles for building platforms I'm also here to say give yourself permission to not build at",
    "start": "1222679",
    "end": "1229159"
  },
  {
    "text": "all decision to build versus buy versus contribute should be our bread and butter and deciding that you don't want",
    "start": "1229159",
    "end": "1235039"
  },
  {
    "text": "to take on the work of building and maintaining a tool is a very valid one because as one of my brilliant mentors",
    "start": "1235039",
    "end": "1240520"
  },
  {
    "text": "once told me every line of code that we write is a liability and so code isn't supposed to",
    "start": "1240520",
    "end": "1245640"
  },
  {
    "text": "necessarily be the bread and butter of our platform of platform engineering research design and Technical decisions",
    "start": "1245640",
    "end": "1251480"
  },
  {
    "text": "are engineering is a craft and we should be treating it as one and so holding all",
    "start": "1251480",
    "end": "1256600"
  },
  {
    "text": "these tensions in mind let's talk through what I'll refer to to as the platform framework so this framework is",
    "start": "1256600",
    "end": "1261760"
  },
  {
    "start": "1261000",
    "end": "1393000"
  },
  {
    "text": "a reusable framework uh with four pillars um and these allow us to enable compartmentalize or communicate the",
    "start": "1261760",
    "end": "1267360"
  },
  {
    "text": "trade-offs of the tensions that I just talked about and so I'll let's briefly review each of these pillars and then",
    "start": "1267360",
    "end": "1273120"
  },
  {
    "text": "provide some examples so first we have the parts of our architecture that provide",
    "start": "1273120",
    "end": "1278600"
  },
  {
    "text": "standardization two examples of how we might do that is through templates or pent Frameworks secondly we have the",
    "start": "1278600",
    "end": "1284840"
  },
  {
    "text": "parts of our architecture that provide more flexibility so for example we might V we might design our framework to be",
    "start": "1284840",
    "end": "1289880"
  },
  {
    "text": "more modular so that developers can pick and choose based on their context thirdly we have uh the parts of our",
    "start": "1289880",
    "end": "1295880"
  },
  {
    "text": "architectures that compartmentalize complex complexity through integration since the first two pillars reflect the",
    "start": "1295880",
    "end": "1301120"
  },
  {
    "text": "simple interfaces that I mentioned earlier and so this might be apis that tie the first two pillars uh together or",
    "start": "1301120",
    "end": "1306960"
  },
  {
    "text": "FL uh plugins to frontend interfaces that developers use to provide visibility that they",
    "start": "1306960",
    "end": "1312400"
  },
  {
    "text": "exist now these tools are often not uh used directly by developers in development and instead ones that we use",
    "start": "1312400",
    "end": "1318679"
  },
  {
    "text": "to support um developers in a more automated way so for example the tools that pull our Technologies together to",
    "start": "1318679",
    "end": "1324799"
  },
  {
    "text": "support on demand um environments right Engineers will certainly use those environments um but the technical",
    "start": "1324799",
    "end": "1330600"
  },
  {
    "text": "details of how we implemented those should be abstracted away so that they can focus on product development lastly we have the parts of",
    "start": "1330600",
    "end": "1337039"
  },
  {
    "text": "our architecture that communicate our design decisions along the way whether that's API docs or decision records for when you decide to build buy or",
    "start": "1337039",
    "end": "1343720"
  },
  {
    "text": "contribute it might feel a little bit strange to have this be considered part of your architecture but as I've emphasize uh throughout this talk right",
    "start": "1343720",
    "end": "1350120"
  },
  {
    "text": "touch points between platform and product Engineers is essential documentation is the first",
    "start": "1350120",
    "end": "1355480"
  },
  {
    "text": "obvious um is a first obvious one right with support channels as a complimentary um there's also a potential need for",
    "start": "1355480",
    "end": "1360960"
  },
  {
    "text": "automating certain aspects of our support as we scale up the number of Engineers we're supporting um I think we're seeing a lot of like AI",
    "start": "1360960",
    "end": "1367039"
  },
  {
    "text": "development exploratory um work happening here so I'm curious how that's going to um end up shaking out but",
    "start": "1367039",
    "end": "1372640"
  },
  {
    "text": "that's an example of what um it might mean to uh have this be incorporated into your platform",
    "start": "1372640",
    "end": "1378559"
  },
  {
    "text": "in the Integrations pillar I mentioned plugins as an example to provide visibility of what tools exist um and",
    "start": "1378559",
    "end": "1383760"
  },
  {
    "text": "that's an that's an essential question to answer because visibility is needed to drive adoption and so let's answer",
    "start": "1383760",
    "end": "1389120"
  },
  {
    "text": "that question how to provide visibility into our architecture so especially with the mergence of Backstage um which is an",
    "start": "1389120",
    "end": "1395600"
  },
  {
    "start": "1393000",
    "end": "1446000"
  },
  {
    "text": "open source project created by Spotify uh developer portals have become a way to provide centralized uh visibility",
    "start": "1395600",
    "end": "1401360"
  },
  {
    "text": "into the developer platform ecosystem and the concept of a developer platform uh portal is a compelling one right",
    "start": "1401360",
    "end": "1407799"
  },
  {
    "text": "because it ultimately tells the story of what it means to develop software at your company and so by providing a unified view not only does our platform",
    "start": "1407799",
    "end": "1414520"
  },
  {
    "text": "become visible but it also facilitates visibility into any service that's using that portal since they often have service cataloges and",
    "start": "1414520",
    "end": "1420880"
  },
  {
    "text": "whatnot Integrations are crucial part of our developer portals but because it's a centralized entry point we do have to",
    "start": "1420880",
    "end": "1426799"
  },
  {
    "text": "consider the risk of a singular point of failure and so this is why it Embraces the idea of plugins um which are",
    "start": "1426799",
    "end": "1432960"
  },
  {
    "text": "basically designed to be easily added or removed um to the host application without that total coupling and so in",
    "start": "1432960",
    "end": "1438520"
  },
  {
    "text": "other words right just like we saw in our principles it provides similar benefits that we see um with microservices by having concrete",
    "start": "1438520",
    "end": "1444039"
  },
  {
    "text": "separations of concerns so now that we've covered some of the fundamentals um let's move on to",
    "start": "1444039",
    "end": "1449840"
  },
  {
    "start": "1446000",
    "end": "1496000"
  },
  {
    "text": "more concrete examples um that I've worked on in the past so in the spirit of showing that platform engineering is not just about infrastructure we'll talk",
    "start": "1449840",
    "end": "1456200"
  },
  {
    "text": "through three examples that reflect the story I mentioned earlier the story of what it means to develop software at your company and what that story looks",
    "start": "1456200",
    "end": "1462799"
  },
  {
    "text": "like is ultimately that around the future development cycle so in the interest of time I'm not going to go through each of these steps",
    "start": "1462799",
    "end": "1468919"
  },
  {
    "text": "um all you really need to know here is that this is the highle story that we're telling the one about our future development",
    "start": "1468919",
    "end": "1474640"
  },
  {
    "text": "cycle and the ones that are most important to us today are the development production Readiness and delivery stages so those are the ones",
    "start": "1474640",
    "end": "1480399"
  },
  {
    "text": "that I'll be focusing on and again in the spirit of not showing of showing that platform engineering is not just about infrastructure the three examples",
    "start": "1480399",
    "end": "1486559"
  },
  {
    "text": "that we'll um review will include one about uh language runtime platforms the second on infrastructure runtime",
    "start": "1486559",
    "end": "1492559"
  },
  {
    "text": "platforms and the Third on full stack observability now starting with development which the endtoend product",
    "start": "1492559",
    "end": "1500279"
  },
  {
    "start": "1496000",
    "end": "1845000"
  },
  {
    "text": "development cycle particularly runtime and uh architecture needs so this phase usually manifests in language runtime",
    "start": "1500279",
    "end": "1507120"
  },
  {
    "text": "support um platforms rather so we'll focus one that's based off of node.js um run times so for this for the first part",
    "start": "1507120",
    "end": "1514039"
  },
  {
    "text": "of our framework we Embrace standardization through runtime language templates which minimize repeatable or",
    "start": "1514039",
    "end": "1519760"
  },
  {
    "text": "bowler plate uh code by centralizing it into a template what this looks like practically might be a simple server",
    "start": "1519760",
    "end": "1525679"
  },
  {
    "text": "file like this and so this template file not only Prov provides a reusable file but also acts as a standardization",
    "start": "1525679",
    "end": "1531080"
  },
  {
    "text": "technique by including our organizational framework of choice which is Express from this uh developers not",
    "start": "1531080",
    "end": "1536679"
  },
  {
    "text": "only need would only need to modify the the parts that need actual service context which I highlighted here now",
    "start": "1536679",
    "end": "1543159"
  },
  {
    "text": "over time right we can extend these templates to include standards for other tools and dependencies like package managers linters testing Frameworks um",
    "start": "1543159",
    "end": "1550720"
  },
  {
    "text": "which would be reflected in like Json config files and when beginning to build out these templates right we should",
    "start": "1550720",
    "end": "1556279"
  },
  {
    "text": "start our we should start simple and build our way out rushing into their development too quickly can also lead us",
    "start": "1556279",
    "end": "1561559"
  },
  {
    "text": "down to towards a path of building developer story and targeted paths that don't actually serve the needs of our",
    "start": "1561559",
    "end": "1567000"
  },
  {
    "text": "users alternatively right we might decide to build a runtime framework that codifies organizational standards and so",
    "start": "1567000",
    "end": "1573640"
  },
  {
    "text": "you can imagine that as your organization grows um its standards a server file template might quickly become overwhelming right for example we",
    "start": "1573640",
    "end": "1579600"
  },
  {
    "text": "might need to extend our functionality to include middleware um to standardize how we write apis and we can add more",
    "start": "1579600",
    "end": "1586200"
  },
  {
    "text": "and as we add more and more of this code to template files it might become impossible for developers to figure out what's even being provided for them all",
    "start": "1586200",
    "end": "1592840"
  },
  {
    "text": "right and like sure comments can help but there's a reason that we use abstractions in software engineering and so in an effort to keep that template",
    "start": "1592840",
    "end": "1599640"
  },
  {
    "text": "simple we can abstract the details away and replace the express code with our own framework now here's what that",
    "start": "1599640",
    "end": "1605200"
  },
  {
    "text": "package code um might look like as well as a simpler ter um server TS file that we'd now be",
    "start": "1605200",
    "end": "1611399"
  },
  {
    "text": "providing now there are of course many downsides to this right this is a fairly large dependency introduction right we",
    "start": "1611399",
    "end": "1617880"
  },
  {
    "text": "now have to maintain this code for years and so it's a commitment that can't be made lightly um and it requires a huge",
    "start": "1617880",
    "end": "1623520"
  },
  {
    "text": "amount of intentional design but it does address um drift a lot more effectively because templates are easier to change",
    "start": "1623520",
    "end": "1629440"
  },
  {
    "text": "right versus Frameworks actually abstract implementation from inter um from interfaces and that's the part that",
    "start": "1629440",
    "end": "1635799"
  },
  {
    "text": "really makes a difference between whether your framework ends up being a sustainable solution is the implementation of your framework genuinely abstracted from its interface",
    "start": "1635799",
    "end": "1643200"
  },
  {
    "text": "because that abstraction is what provides us um is what enables us to iterate on unforeseen pain points and",
    "start": "1643200",
    "end": "1648279"
  },
  {
    "text": "avoid praking changes or deprecations now I've seen Frameworks uh",
    "start": "1648279",
    "end": "1653399"
  },
  {
    "text": "primarily work for organizations that adopt platform engineering on the earlier side um more specifically during",
    "start": "1653399",
    "end": "1658679"
  },
  {
    "text": "that like transition period where they've decided um that a monolithic application isn't working for them quite",
    "start": "1658679",
    "end": "1664360"
  },
  {
    "text": "um quite much anymore and that decomposition does need to be a reality and this is because once you already um",
    "start": "1664360",
    "end": "1670960"
  },
  {
    "text": "are too far down the distributed systems Journey addressing drift with the framework is really hard to justify with",
    "start": "1670960",
    "end": "1676720"
  },
  {
    "text": "service owners um because at this point right like their service was probably already built in an opinionated way and so reconciling the drift in software and",
    "start": "1676720",
    "end": "1684519"
  },
  {
    "text": "people's opinions is often a tedious process that ends up not really working",
    "start": "1684519",
    "end": "1689559"
  },
  {
    "text": "out in the long term but if we start to build a platform before we're too far down that distributed uh systems uh",
    "start": "1689559",
    "end": "1695960"
  },
  {
    "text": "Rabbit Hole it can actually set us up pretty well for successfully decomposing a monolith since the repeatable tasks",
    "start": "1695960",
    "end": "1701960"
  },
  {
    "text": "like making um your systems uh observable with automatic instrumentation um that you would have",
    "start": "1701960",
    "end": "1707880"
  },
  {
    "text": "to do for each service can be abstracted into that framework now when Frameworks or templates aren't the right path forward",
    "start": "1707880",
    "end": "1714519"
  },
  {
    "text": "for your organization's needs but you want to provide some flexible options runtime packages are a great tool in our",
    "start": "1714519",
    "end": "1719880"
  },
  {
    "text": "framework and so here we still have a lot of decisions to make right including where on the spectrum of flexible we want to be since these packages can",
    "start": "1719880",
    "end": "1726519"
  },
  {
    "text": "still be an Avenue where we inject standardization so to ground this an example we might have this very naive",
    "start": "1726519",
    "end": "1732480"
  },
  {
    "text": "function in a package um this header might indicate something related to authorization that we want to have a standard for um this is a very naive",
    "start": "1732480",
    "end": "1739120"
  },
  {
    "text": "example on purpose um and the standard here is that we just want the header value to be all uppercase for some",
    "start": "1739120",
    "end": "1744440"
  },
  {
    "text": "reason and while this function is opinionated unlike a template or a runtime framework this functionality is",
    "start": "1744440",
    "end": "1749799"
  },
  {
    "text": "opt in meaning that while we want to incentivize developers to use it we can't actually require them",
    "start": "1749799",
    "end": "1755799"
  },
  {
    "text": "to an additional benefit of modules is that if we ever need to revisit the possibility of building a um centralized",
    "start": "1755799",
    "end": "1762399"
  },
  {
    "text": "framework we've already have some of the building blocks that we can use to assemble an ultimate framework so for",
    "start": "1762399",
    "end": "1767640"
  },
  {
    "text": "organization that are outside of that sort of I need to stop doing that um initial transition period between a",
    "start": "1767640",
    "end": "1773679"
  },
  {
    "text": "monolith and distributed architecture that I mentioned earlier building modules is often a great firststep um",
    "start": "1773679",
    "end": "1778960"
  },
  {
    "text": "when adopting platform engineering because it allows you to incrementally build for the needs of your developers without investing the huge amount of",
    "start": "1778960",
    "end": "1784760"
  },
  {
    "text": "time that Frameworks might require Now we move on to our next pillar of our framework Integrations and",
    "start": "1784760",
    "end": "1791080"
  },
  {
    "text": "plugins extending on our example as our organization grows and our architecture evolves so might the number of our",
    "start": "1791080",
    "end": "1797240"
  },
  {
    "text": "packages and so this was our second package uh or architecture principle from earlier developers will ultimately",
    "start": "1797240",
    "end": "1803080"
  },
  {
    "text": "need visibility into the different package um packages available so naturally we'll probably decide to integrate with a package manager and",
    "start": "1803080",
    "end": "1809080"
  },
  {
    "text": "repository which should be managed centrally so that it has clear ownership and so that it doesn't become too bloated with packages or artifacts like",
    "start": "1809080",
    "end": "1815960"
  },
  {
    "text": "our templates and conveniently this might even there might even be a plugin available for our developer portal so",
    "start": "1815960",
    "end": "1821159"
  },
  {
    "text": "that's even more visible and along the way we'll need to document our work so that we can so that",
    "start": "1821159",
    "end": "1826200"
  },
  {
    "text": "our users can use our tools smoothly and combining this with the second principle from earlier finding ways to automate",
    "start": "1826200",
    "end": "1831919"
  },
  {
    "text": "this will make our lives much easier and set up our docks to be less stale and so for no. JS for example this might mean",
    "start": "1831919",
    "end": "1837720"
  },
  {
    "text": "integrating with type doc to automatically generate them which might then plug into your developer portal to render the docs",
    "start": "1837720",
    "end": "1843559"
  },
  {
    "text": "there next we'll focus on platform use cases related to infrastructure runtimes",
    "start": "1843559",
    "end": "1848720"
  },
  {
    "start": "1845000",
    "end": "1952000"
  },
  {
    "text": "and more specifically I'll focus on the container runtime experience reflecting back on our floor pillars uh we Embrace",
    "start": "1848720",
    "end": "1854799"
  },
  {
    "text": "standardization here the first part of our framework through base templates and images which minimize repeatable code",
    "start": "1854799",
    "end": "1860279"
  },
  {
    "text": "and configuration by centralizing it into a versioned template or image and here versioning is critical especially",
    "start": "1860279",
    "end": "1866360"
  },
  {
    "text": "for templates because it's very easy to fall back into the Trap of uh drift now when these first options",
    "start": "1866360",
    "end": "1872440"
  },
  {
    "text": "aren't the right path forward but you want to provide more flexible options standard image artifacts are a great tool in our framework again here we have",
    "start": "1872440",
    "end": "1879600"
  },
  {
    "text": "a lot of decisions to make including where on the spectrum of flexible we want um these artifacts to be or what or",
    "start": "1879600",
    "end": "1886000"
  },
  {
    "text": "which we want to require versus just recommend recommend using next the Integrations pillar which",
    "start": "1886000",
    "end": "1891880"
  },
  {
    "text": "represents Integrations between components in this platform or Integrations between multiple platforms",
    "start": "1891880",
    "end": "1897919"
  },
  {
    "text": "so what this might look like here is template generators for Docker file or Docker composed files versus the",
    "start": "1897919",
    "end": "1903320"
  },
  {
    "text": "integration between a container runtime platform and a kubernetes platform and lastly all these different",
    "start": "1903320",
    "end": "1909240"
  },
  {
    "text": "components and decisions can quickly get overwhelming even when we're designing with a lot of intent and so not only do",
    "start": "1909240",
    "end": "1914919"
  },
  {
    "text": "these decisions need to be reflected somewhere we need to understand that infrastructure incidents are ours too",
    "start": "1914919",
    "end": "1920159"
  },
  {
    "text": "and that the process of Incident Management should be one that Fosters collaboration and knowledge sharing a value that should be reflected in our",
    "start": "1920159",
    "end": "1926240"
  },
  {
    "text": "principles now what this looks like can be a little tricky depending on whether you have an SRE org um and their specific operating mod model but",
    "start": "1926240",
    "end": "1933320"
  },
  {
    "text": "regardless of organizational structure um driving Clarity over what incident support looks like is crucial to",
    "start": "1933320",
    "end": "1938440"
  },
  {
    "text": "avoiding broken trust when our platforms inevitably fail and part of that is making sure that product Engineers are",
    "start": "1938440",
    "end": "1943960"
  },
  {
    "text": "set up to effectively uh differentiate uh when a production issue is due to infrastructure versus application issues",
    "start": "1943960",
    "end": "1949840"
  },
  {
    "text": "versus platform um issues lastly we have a more specific domain use case for a platform which is",
    "start": "1949840",
    "end": "1956320"
  },
  {
    "start": "1952000",
    "end": "2186000"
  },
  {
    "text": "observability so when it comes to production Readiness support this work often Builds on top of um this work",
    "start": "1956320",
    "end": "1961600"
  },
  {
    "text": "often to Builds on top of existing platforms rather and so this is what you're going to see uh today as well so",
    "start": "1961600",
    "end": "1967200"
  },
  {
    "text": "going back to the build by contribute tension um let's say that we use open Telemetry standard after considering the",
    "start": "1967200",
    "end": "1973440"
  },
  {
    "text": "trade-offs of defining our own standard God forbid to doing that using one from open Source or using a vendor specific",
    "start": "1973440",
    "end": "1979559"
  },
  {
    "text": "um standard now given this decision we choose to embrace standardization further by adding new config into our",
    "start": "1979559",
    "end": "1985279"
  },
  {
    "text": "values yam file to support the standard and an important thing to note",
    "start": "1985279",
    "end": "1991840"
  },
  {
    "text": "here is that this technical decision reuses a technical decision made by the infrastructure platform team to avoid",
    "start": "1991840",
    "end": "1997240"
  },
  {
    "text": "introducing unnecessary drifts so really what we're doing here is extending their platform to support reliability and",
    "start": "1997240",
    "end": "2002679"
  },
  {
    "text": "observability needs so the impact of that is that developers don't have to worry about managing the config needed",
    "start": "2002679",
    "end": "2008120"
  },
  {
    "text": "to um use the theoretical open Telemetry collector that we decided to provide instead we can focus on we can have them",
    "start": "2008120",
    "end": "2014159"
  },
  {
    "text": "focus on instrumenting their applications for Telemetry that requires service context Switching gears into more",
    "start": "2014159",
    "end": "2020240"
  },
  {
    "text": "flexible offerings we choose to extend our runtime platform to include modules that provide features relevant to",
    "start": "2020240",
    "end": "2026080"
  },
  {
    "text": "Telemetry collection that might mean providing an optional uh middleware function to enable Telemetry collection",
    "start": "2026080",
    "end": "2032559"
  },
  {
    "text": "um so like in this very naive example we see a similar tension that um as earlier where we standardize the key of",
    "start": "2032559",
    "end": "2037880"
  },
  {
    "text": "attribute but provide flexibility by managing the values through something like environment variables or whatever",
    "start": "2037880",
    "end": "2043080"
  },
  {
    "text": "option you want to choose now I mentioned that our work needs to align with those of our uh product engineering",
    "start": "2043080",
    "end": "2048240"
  },
  {
    "text": "peers right and so now let's say that our product has become really successful we are solidly in the distributed",
    "start": "2048240",
    "end": "2053919"
  },
  {
    "text": "architecture space and now some of our product teams have new technical requirements that require them to become",
    "start": "2053919",
    "end": "2059839"
  },
  {
    "text": "very cautious about any performance implication and they need strong um concurrency support So now our",
    "start": "2059839",
    "end": "2065358"
  },
  {
    "text": "organization decides to introduce a new standard um language into our organization go now this does make our",
    "start": "2065359",
    "end": "2072158"
  },
  {
    "text": "lives as platform Engineers more difficult right now we have to support another wrong time language but we shouldn't be meeting them with uh",
    "start": "2072159",
    "end": "2078599"
  },
  {
    "text": "resistance from the beginning right we can absolutely provide fe uh feedback as peers um perhaps the perhaps the",
    "start": "2078599",
    "end": "2084638"
  },
  {
    "text": "decision does need a lot of push back right but being dogmatic about our targeted path um two isn't also a",
    "start": "2084639",
    "end": "2090440"
  },
  {
    "text": "solution for Success either so now we have to start thinking about go development and so using the",
    "start": "2090440",
    "end": "2095919"
  },
  {
    "text": "observability example that means we need to think about what our Telemetry collection looks like for go and we already use open Telemetry so we want to",
    "start": "2095919",
    "end": "2102520"
  },
  {
    "text": "reuse that um decision for the sake of consistency except then we run into this",
    "start": "2102520",
    "end": "2108240"
  },
  {
    "text": "darn currently work in progress this is a plug for you to help them out um so",
    "start": "2108240",
    "end": "2114440"
  },
  {
    "text": "what do we do right we know telemetric collection is important right how are we going to debug our our production systems now do we rely on older methods",
    "start": "2114440",
    "end": "2121839"
  },
  {
    "text": "of collection um manual instrumentation vendor specific agents um that's one valid conclusion and probably the most",
    "start": "2121839",
    "end": "2127960"
  },
  {
    "text": "practical if I'm being honest but I'm still going to take the opportunity to give a nod to the open source and so our",
    "start": "2127960",
    "end": "2133280"
  },
  {
    "text": "principle um our second principle from earlier talked about the role of Automation in our work and how one form",
    "start": "2133280",
    "end": "2138440"
  },
  {
    "text": "of that is to reduce the duplicate work that often comes in engineering right and more specifically I offered the solution of um deciding when to build",
    "start": "2138440",
    "end": "2144720"
  },
  {
    "text": "buy or use SL contribute to existing open source Solutions and part of the reason that that is not only um and that",
    "start": "2144720",
    "end": "2151880"
  },
  {
    "text": "part of that reason is for that is not only because we'll end up spending necessarily unnecessary time Reinventing",
    "start": "2151880",
    "end": "2157040"
  },
  {
    "text": "the wheel but also because we have to admit to ourselves sometimes that like other people are might do it better than",
    "start": "2157040",
    "end": "2162440"
  },
  {
    "text": "us right and admitting that doesn't make us any less of an engineer um in fact it shows humiliation and um humiliation",
    "start": "2162440",
    "end": "2171160"
  },
  {
    "text": "humility um and appreciation for the work of our peers and it provides an opportunity to learn from one another",
    "start": "2171160",
    "end": "2177880"
  },
  {
    "text": "and we ultimately can't be experts at everything and so engineering Rays it can be an underrated way to build community and it doesn't have to be",
    "start": "2177880",
    "end": "2183800"
  },
  {
    "text": "isolated to just our company either and so bringing me back to the observability example we know that there are really",
    "start": "2183800",
    "end": "2189280"
  },
  {
    "start": "2186000",
    "end": "2251000"
  },
  {
    "text": "smart people already thinking about this and there's still so much to learn and work on right community-driven support",
    "start": "2189280",
    "end": "2195599"
  },
  {
    "text": "was essential deemed to my previous section and so don't try to learn and build in silos right learn and",
    "start": "2195599",
    "end": "2201440"
  },
  {
    "text": "contribute to the communities that are doing this work already because as much as the sustainability of our organization is about our ability to",
    "start": "2201440",
    "end": "2207280"
  },
  {
    "text": "build sustainable software the sustainability of our organization is also about our industry's Collective ability to learn together and make",
    "start": "2207280",
    "end": "2212960"
  },
  {
    "text": "progress together now moving on to the third part of the platform framework we choose to extend our cicd platform",
    "start": "2212960",
    "end": "2220200"
  },
  {
    "text": "Integrations to use application metrics that will allow us to automate rollbacks that minimize the risk of change and",
    "start": "2220200",
    "end": "2226839"
  },
  {
    "text": "again this is an example of how reliability management work is often complimentary to existing platforms and lastly best practices and",
    "start": "2226839",
    "end": "2233960"
  },
  {
    "text": "guidance stocks especially because observability is such a full stack problem everyone is going to need to think about telemetric collection and we",
    "start": "2233960",
    "end": "2241040"
  },
  {
    "text": "need to leverage that Collective uh knowledge put in the context of our work and then communicate what that looks",
    "start": "2241040",
    "end": "2246359"
  },
  {
    "text": "like back to our other engineers so that they aligned with how we approach the problem space all right so now that we've walked",
    "start": "2246359",
    "end": "2252960"
  },
  {
    "start": "2251000",
    "end": "2406000"
  },
  {
    "text": "through these three components of the platform um let's put them all together by Framing it through the lens of the feature development cycle from earlier",
    "start": "2252960",
    "end": "2259359"
  },
  {
    "text": "and more specifically we'll approach this from the lens of the life cycle of a service focusing on the flow that looks um on what it looks like to build",
    "start": "2259359",
    "end": "2265640"
  },
  {
    "text": "a new service in an organization so starting from the left here let's say as a product engineer",
    "start": "2265640",
    "end": "2271200"
  },
  {
    "text": "you're building a new backend service in an organization with a fairly mature platform um which is why you see some",
    "start": "2271200",
    "end": "2276240"
  },
  {
    "text": "components here that I didn't men mentioned um earlier now to get started you enter the developer portal",
    "start": "2276240",
    "end": "2281680"
  },
  {
    "text": "integrated with an artifact manager uh select a bundled standardized service template enter details like service name",
    "start": "2281680",
    "end": "2288280"
  },
  {
    "text": "and then an API integration that platform engineering teams owns generates that service using an",
    "start": "2288280",
    "end": "2293800"
  },
  {
    "text": "integration with GitHub now you're ready to develop your service depending on your development",
    "start": "2293800",
    "end": "2298880"
  },
  {
    "text": "needs you utilize even more modules or use framework features from there we'll continue to use GitHub either directly",
    "start": "2298880",
    "end": "2305079"
  },
  {
    "text": "but now also through the developer portal if we so please until the pr approval process is done from there we",
    "start": "2305079",
    "end": "2311599"
  },
  {
    "text": "enter our more delivery focused part of the platform um so that bundled service template that we use to generate a",
    "start": "2311599",
    "end": "2317000"
  },
  {
    "text": "service also includes config uh templates that the CI stage can use to build test perform static code analysis",
    "start": "2317000",
    "end": "2323560"
  },
  {
    "text": "Etc so now we only have to worry about choosing good values and modifying a value EXO file or some other solution",
    "start": "2323560",
    "end": "2331000"
  },
  {
    "text": "and since our portal includes a drone drone integration we can easily gain visibility into each of those steps",
    "start": "2331000",
    "end": "2337119"
  },
  {
    "text": "which is is especially useful for when they fail and as a best practice here right platform Engineers should be very intentional about making it clear when",
    "start": "2337119",
    "end": "2342960"
  },
  {
    "text": "cicd pipelines are failing because of our tools versus when they're failing because of an application bug and if the CI stage passes a CI",
    "start": "2342960",
    "end": "2350800"
  },
  {
    "text": "integration then pushes build artifacts um that we're generated in the CI stage providing access for the rest of uh the",
    "start": "2350800",
    "end": "2356839"
  },
  {
    "text": "stages in our Pipeline and again the developer portal can also provide um visibility through its artifact uh repo",
    "start": "2356839",
    "end": "2362560"
  },
  {
    "text": "manager and drone Integrations now those artifacts should be used during continuous deployment to",
    "start": "2362560",
    "end": "2367960"
  },
  {
    "text": "perform things like infrastructure management pre-production testing Etc and now using GitHub or the PTO",
    "start": "2367960",
    "end": "2373960"
  },
  {
    "text": "integration we move on to tasks related to release management like approvals release tagging documentation",
    "start": "2373960",
    "end": "2379560"
  },
  {
    "text": "Etc now after successful testing and approvals the service is deployed to production using similar mechanisms as a",
    "start": "2379560",
    "end": "2386000"
  },
  {
    "text": "CD stage but with additional safeguards like automatic rollback features that we mentioned the production Readiness",
    "start": "2386000",
    "end": "2391520"
  },
  {
    "text": "example and finally we concluded the delivery process and head into maintenance mode which is supported by",
    "start": "2391520",
    "end": "2396880"
  },
  {
    "text": "the tools that use to observe and monitor our systems all right so I uh brief through that last section but",
    "start": "2396880",
    "end": "2403280"
  },
  {
    "text": "before I conclude I want to bring us back to where we began so to wrap this up I've made parallels between devops",
    "start": "2403280",
    "end": "2408920"
  },
  {
    "start": "2406000",
    "end": "2441000"
  },
  {
    "text": "and platform engineering throughout this talk and I hope it's obvious um how important devops has been for this discipline much in the way that in the",
    "start": "2408920",
    "end": "2415000"
  },
  {
    "text": "same way that it has been for SRE our systems are complicated because people are complicated and much like",
    "start": "2415000",
    "end": "2420599"
  },
  {
    "text": "architecture design this type of culture doesn't just happen it requires intent and the most compelling part of devops",
    "start": "2420599",
    "end": "2426800"
  },
  {
    "text": "is ultimately the way that it transforms our culture to be one that Fosters exactly that intent and so I started off",
    "start": "2426800",
    "end": "2432560"
  },
  {
    "text": "this talk by saying platform engineering is a solution to building sustainable organizations but perhaps the solution",
    "start": "2432560",
    "end": "2437599"
  },
  {
    "text": "that we all actually really need is just intent thank you",
    "start": "2437599",
    "end": "2444318"
  }
]