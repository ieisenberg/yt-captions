[
  {
    "text": "okay hopefully this is what you're here for you were just here for the",
    "start": "1920",
    "end": "9360"
  },
  {
    "text": "cartoons uh okay so this a double session um we're going to it's just one",
    "start": "9360",
    "end": "16480"
  },
  {
    "text": "continuous set of slides when I gave it last week I ran out of time so I'll try",
    "start": "16480",
    "end": "21600"
  },
  {
    "text": "and go a little bit faster at the beginning this time and um there's a little bit of audience participation",
    "start": "21600",
    "end": "28119"
  },
  {
    "text": "coming up so don't all fall asleep uh I'm I'm Adrian ccraft I was previously with Netflix and I was in uh Aus two",
    "start": "28119",
    "end": "36200"
  },
  {
    "text": "years ago presenting about the Netflix architecture and open source and things uh didn't come last year we sent um I",
    "start": "36200",
    "end": "43760"
  },
  {
    "text": "think it was Ben Christensen who talked about reactive and RX Java and things uh",
    "start": "43760",
    "end": "49320"
  },
  {
    "text": "Roslin meshenberg would come and talk about the Netflix Open Source tools but he couldn't leave uh probably something",
    "start": "49320",
    "end": "55120"
  },
  {
    "text": "to do with launching Netflix in Germany Austria France Belgium Luxembourg and",
    "start": "55120",
    "end": "60920"
  },
  {
    "text": "Lin or something um which happened last week I think they got a bit too busy so",
    "start": "60920",
    "end": "66760"
  },
  {
    "text": "uh I offered to give this so this is a extended version of a talk that was originally given at the Amazon reinvent",
    "start": "66760",
    "end": "72520"
  },
  {
    "text": "conference last fall which is why the background is black because that's the template that Amazon gave us um and I'm",
    "start": "72520",
    "end": "80240"
  },
  {
    "text": "going to go through the different open- Source projects that Netflix has put up",
    "start": "80240",
    "end": "86320"
  },
  {
    "text": "and try and explain what they are and how they fit together and you'll sort of get get some idea of the Netflix Cloud",
    "start": "86320",
    "end": "92040"
  },
  {
    "text": "native architecture from just looking at all these projects and I can talk a bit about why they are the way they are and",
    "start": "92040",
    "end": "98320"
  },
  {
    "text": "some of the non-obvious things but you know this is all code that's on GitHub all right so to start with I'm going to",
    "start": "98320",
    "end": "105560"
  },
  {
    "text": "assume that you you've started off when you you had an architecture sort of Ruby on Rails running on a single Amazon Zone",
    "start": "105560",
    "end": "111399"
  },
  {
    "text": "you've got a mic SQL Server you've got a middle tier machine maybe a handful of front ends and a handful of customers",
    "start": "111399",
    "end": "117960"
  },
  {
    "text": "okay so that's a typical starting point we see this a lot uh I know work for a venture capital company and we see lots",
    "start": "117960",
    "end": "123840"
  },
  {
    "text": "of companies that have just done they've got the first product out and they're starting to get some revenue and they",
    "start": "123840",
    "end": "129000"
  },
  {
    "text": "come and they say okay we've got customers look we have 10 customers and we have revenue and we give us some more",
    "start": "129000",
    "end": "135120"
  },
  {
    "text": "money and so we give them some more money you get funded now they say okay",
    "start": "135120",
    "end": "141360"
  },
  {
    "text": "now you're going to get more developers more customers you know you need it to be more highly available you need to be",
    "start": "141360",
    "end": "146760"
  },
  {
    "text": "globally distributed instead of in one place and uh your old architecture doesn't work anymore because your growth",
    "start": "146760",
    "end": "153280"
  },
  {
    "text": "is now growing exponentially so one of the things I do for battery Ventures as I work with companies that are going",
    "start": "153280",
    "end": "159519"
  },
  {
    "text": "through this problem and I help them sort of as sort of a Consulting Cloud architect scalability architect that",
    "start": "159519",
    "end": "165640"
  },
  {
    "text": "kind of thing so what they'd like it to look like is this and this is a sort of",
    "start": "165640",
    "end": "171159"
  },
  {
    "text": "rough version of the way the Netflix architecture works you have lots of different customers in lots of different",
    "start": "171159",
    "end": "176200"
  },
  {
    "text": "regions they come into a regional load balancer they get track routed to the different places and then you have these",
    "start": "176200",
    "end": "183120"
  },
  {
    "text": "microservices in zones uh replicated in one region and then replicated across to",
    "start": "183120",
    "end": "189519"
  },
  {
    "text": "another region and in Netflix case using Cassandra to replicate everything underneath so pretty much all of the",
    "start": "189519",
    "end": "195159"
  },
  {
    "text": "data that moves cross zone is moved there using Cassandra um you can do this also with Rea uh which has similar",
    "start": "195159",
    "end": "202159"
  },
  {
    "text": "functionality but you Netflix for various reasons just used Cassandra to do this so that's a fairly different",
    "start": "202159",
    "end": "208360"
  },
  {
    "text": "architecture from that so how do we get there um inside each of the Ser inside",
    "start": "208360",
    "end": "216480"
  },
  {
    "text": "each of the availability zones which you think of that as a data center so that's Netflix runs actually out of nine data",
    "start": "216480",
    "end": "222400"
  },
  {
    "text": "centers every day uh three on the east coast and three on the west coast of the US that run in parallel redundantly so",
    "start": "222400",
    "end": "229439"
  },
  {
    "text": "it can switch between them and one in Europe um one set in Europe which is",
    "start": "229439",
    "end": "235040"
  },
  {
    "text": "Europe's you know something more like 10% of Netflix traffic so it's a relative smaller system so within each",
    "start": "235040",
    "end": "242000"
  },
  {
    "text": "Zone let me think I've got lasers here yeah there we go um requests come in and then because this is all based on",
    "start": "242000",
    "end": "248280"
  },
  {
    "text": "microservices there's lots of requests that go out and then they hit all these things and bounce around and it comes back and then the homepage gets returned",
    "start": "248280",
    "end": "255239"
  },
  {
    "text": "so that's for a single API call or a single request to the homepage and this is actually an old simplified diagram",
    "start": "255239",
    "end": "261919"
  },
  {
    "text": "from about 3 years ago because when I tried to update it it was so complicated I couldn't draw it anymore so yeah",
    "start": "261919",
    "end": "268759"
  },
  {
    "text": "you've got all these different services that you've put together and you need to stitch them together and form it into",
    "start": "268759",
    "end": "274560"
  },
  {
    "text": "this kind of architecture so Netflix is a Apache licensed open",
    "start": "274560",
    "end": "282720"
  },
  {
    "text": "source platform that does this and you can download it and quite a few people have um and I'm going to go through and",
    "start": "282720",
    "end": "291080"
  },
  {
    "text": "ask you if you know what any pieces of this platform and if any of you have used it and I have a special prize um it",
    "start": "291080",
    "end": "298600"
  },
  {
    "text": "looked originally like that but some pieces got taken when I was in Copenhagen and the most deserving people",
    "start": "298600",
    "end": "305280"
  },
  {
    "text": "in the audience get laptop stickers and this is the latest Netflix Open Source logo the kind of the black the red on",
    "start": "305280",
    "end": "311120"
  },
  {
    "text": "white one instead of the old crummy logo that Netflix had so parts of this are here available and I think there are",
    "start": "311120",
    "end": "317000"
  },
  {
    "text": "five stickers in total one big one and four little ones so if somebody wants a laptop sticker you have to kind of show",
    "start": "317000",
    "end": "323840"
  },
  {
    "text": "that you actually are interested or you know something all right so this is the beginning of the quiz uh what do these",
    "start": "323840",
    "end": "332039"
  },
  {
    "text": "do what do we got here historics anyone know what hiss",
    "start": "332039",
    "end": "338319"
  },
  {
    "text": "does was anyone here a year ago yeah the circuit breaker code yeah",
    "start": "338319",
    "end": "344639"
  },
  {
    "text": "cool excellent so that's actually what Ben Christensen was talking about last year it's part of his talk talking about",
    "start": "344639",
    "end": "350800"
  },
  {
    "text": "circuit breakers so historics is a circuit breaker system I'll talk about that later but it's the if you think",
    "start": "350800",
    "end": "356199"
  },
  {
    "text": "about Michael nygard's book release it there's a pattern in there called circuit breaker it's a Java implementation of that semon",
    "start": "356199",
    "end": "365400"
  },
  {
    "text": "Army yeah atast chos monke",
    "start": "365400",
    "end": "371680"
  },
  {
    "text": "dis yeah yeah so Simeon Army includes all the different monkeys that Netflix has",
    "start": "372440",
    "end": "378759"
  },
  {
    "text": "got and the best way of thinking about that if you think about a Unix operating system there's a bunch of demons that",
    "start": "378759",
    "end": "383919"
  },
  {
    "text": "run around and do things auton you know within it but we have monkeys in the cloud and you have demons it's a demon",
    "start": "383919",
    "end": "389360"
  },
  {
    "text": "any anyway Demon's a silly name as well okay but we just got used to it because they've been using it for 40 years right",
    "start": "389360",
    "end": "395280"
  },
  {
    "text": "so another 30 Years it'll be common to call things monkeys if they run around autonomously and fix things in your",
    "start": "395280",
    "end": "400560"
  },
  {
    "text": "Cloud so just think of them as the autonomous services that rumage around in the cloud and do administrative",
    "start": "400560",
    "end": "406039"
  },
  {
    "text": "things including the chaos monkey which kills things for you to prove that you can survive having things",
    "start": "406039",
    "end": "411720"
  },
  {
    "text": "die um turbine anyone know what that does so there's a there's a dash it",
    "start": "411720",
    "end": "418720"
  },
  {
    "text": "probably won't it's part it's really used with hich hich is is a circuit breaker for a single machine and it has",
    "start": "418720",
    "end": "425440"
  },
  {
    "text": "a a console that you can view in a web browser and if you need to aggregate across an entire tier of machines of the",
    "start": "425440",
    "end": "431560"
  },
  {
    "text": "same type then that's what turbine does it gathers them together so it's a sort of a streaming map reduce thing all",
    "start": "431560",
    "end": "438240"
  },
  {
    "text": "right well I've got a whole page on each of these later on um next ice anyone",
    "start": "438240",
    "end": "444800"
  },
  {
    "text": "here use ice anyone here use AWS",
    "start": "444800",
    "end": "450160"
  },
  {
    "text": "would you like your bill to be smaller maybe okay that's what ice is for you",
    "start": "450160",
    "end": "455240"
  },
  {
    "text": "put your bill on ice and it shrinks and gets cold shrivels up um that's I'm not quite sure why it's called ice um except",
    "start": "455240",
    "end": "462199"
  },
  {
    "text": "that it's one of the most pronounceable and spell um names in this thing as you'll see we have some very complicated",
    "start": "462199",
    "end": "468000"
  },
  {
    "text": "names but this is one of the easy ones um it's a dashboard for looking at all",
    "start": "468000",
    "end": "473120"
  },
  {
    "text": "the cost so it's extremely sophisticated tool for monitoring your AWS billing and it's what Netflix developed in order to",
    "start": "473120",
    "end": "479840"
  },
  {
    "text": "manage Netflix's uh Amazon bill which is one of the largest on on AWS so that's",
    "start": "479840",
    "end": "485440"
  },
  {
    "text": "quite yeah it's a good tool Asgard kind we're in it's a Norse name",
    "start": "485440",
    "end": "491960"
  },
  {
    "text": "what is what is Asgard in nor Norse mythology do you",
    "start": "491960",
    "end": "497800"
  },
  {
    "text": "remember it's the home of the Gods so uh this is the console that's used to",
    "start": "497800",
    "end": "503159"
  },
  {
    "text": "control the clouds because we figured that that's where the gods would live so it's the developer console that replaces",
    "start": "503159",
    "end": "509960"
  },
  {
    "text": "the AWS console we'll look at that later friger is a I'm not quite sure what",
    "start": "509960",
    "end": "515518"
  },
  {
    "text": "friger is in mythology but it's it's actually a subset of Asgard it's a if you want to interact with some of the",
    "start": "515519",
    "end": "521839"
  },
  {
    "text": "objects that the asgard's managing programmatically it's just a little helper library glissen is a a groovy based",
    "start": "521839",
    "end": "530240"
  },
  {
    "text": "domain specific language which is used for writing workflow applications so there's a tool from AWS called swf",
    "start": "530240",
    "end": "538800"
  },
  {
    "text": "Simple work work flow it's an a it's a rest API for building workflows for",
    "start": "538800",
    "end": "544760"
  },
  {
    "text": "things that must happen once and only once in a guaranteed manner in a very very resilient way in a distributed",
    "start": "544760",
    "end": "550800"
  },
  {
    "text": "system which is actually a fairly hard problem to solve it's actually quite a hard computer science problem to build a",
    "start": "550800",
    "end": "555880"
  },
  {
    "text": "workflow engine there's a the basic guts of one is available on AWS as an API and",
    "start": "555880",
    "end": "561480"
  },
  {
    "text": "this is a groovy based DSL that makes it easy to use and again it's used by Asgard to sequence um deployment",
    "start": "561480",
    "end": "569440"
  },
  {
    "text": "operations around the world and things like that all right next stnx okay we're on",
    "start": "569440",
    "end": "576600"
  },
  {
    "text": "Greek mythology now anyone use this anybody here use",
    "start": "576600",
    "end": "582560"
  },
  {
    "text": "Cassandra okay that's probably why you're not using it all right so this is a Java client library for Cassandra the",
    "start": "582560",
    "end": "589640"
  },
  {
    "text": "Cassandra database it's a very powerful flexible Library uh we'll come up to Why",
    "start": "589640",
    "end": "595399"
  },
  {
    "text": "c eston x is the son of Hector and Hector was Cassandra was the first Java",
    "start": "595399",
    "end": "602600"
  },
  {
    "text": "client library for Cassandra was called Hector which who is Cassandra's boyfriend so lot of Greek um cast jmeter",
    "start": "602600",
    "end": "610800"
  },
  {
    "text": "is a jmeter plug-in for testing Cassandra so if somebody's thinking about trying Cassandra and you're used",
    "start": "610800",
    "end": "616120"
  },
  {
    "text": "to using jmeter you download this and it's got all of the right hooks for just load testing Cassandra clusters to make",
    "start": "616120",
    "end": "622000"
  },
  {
    "text": "sure everything's working right very simple I think this was actually um",
    "start": "622000",
    "end": "627959"
  },
  {
    "text": "clickbait for QA engine CU we want people at Netflix that know how to use J meter to load test things",
    "start": "627959",
    "end": "634560"
  },
  {
    "text": "and we were trying to hire people and we say where should we hire these people well let's go on GitHub and see who's forked this project and give them a",
    "start": "634560",
    "end": "641320"
  },
  {
    "text": "call and then we go hire them it's a trick because the whole GitHub site on N",
    "start": "641320",
    "end": "646680"
  },
  {
    "text": "Netflix is really just a big honey part for developers that's the best way of thinking about it and that's the way you should think about your GitHub",
    "start": "646680",
    "end": "653320"
  },
  {
    "text": "site uh and it works really well uh anybody anybody know what curator is",
    "start": "653320",
    "end": "659519"
  },
  {
    "text": "it's a top level Apache project it's not even just a Netflix project now it's a real Apache",
    "start": "659519",
    "end": "665399"
  },
  {
    "text": "project part of the part of the uh Hadoop hbas ecosystem it's a library for",
    "start": "665399",
    "end": "672639"
  },
  {
    "text": "uh making zookeeper much easier to program from java zookeeper has a fairly annoying API it's kind of a pain the",
    "start": "672639",
    "end": "679600"
  },
  {
    "text": "neck to deal with so this is a cleaned up layer that makes it much nicer for handling zookeeper so if you're in using",
    "start": "679600",
    "end": "686600"
  },
  {
    "text": "anything in the Java ecosystem you know Java or scalar whatever um you should",
    "start": "686600",
    "end": "691680"
  },
  {
    "text": "probably be using curator to talk to zookeeper rather than talking to it directly yourself it was so good that",
    "start": "691680",
    "end": "697040"
  },
  {
    "text": "the hbas guys decided they wanted to rewrite hbas to use it and so they had",
    "start": "697040",
    "end": "702200"
  },
  {
    "text": "they forced you know basically they said please will you make it a top level project so we've you have to give up your babies for adoption sometimes so",
    "start": "702200",
    "end": "708760"
  },
  {
    "text": "this is the one where Netflix no longer controls this project and the guy there were two committers from Netflix and one",
    "start": "708760",
    "end": "714920"
  },
  {
    "text": "from outside the primary guy that wrote this no longer works for Netflix he decided did he wanted to live in Panama",
    "start": "714920",
    "end": "720600"
  },
  {
    "text": "in Central America Netflix doesn't support remote working very well so he now lives in Panama um and he still",
    "start": "720600",
    "end": "727480"
  },
  {
    "text": "fixes bugs for us we don't pay him it's brilliant so I encourage you to open",
    "start": "727480",
    "end": "733600"
  },
  {
    "text": "source all your key software so that when the people that wrote it leave your company they continue to write code for you it's an excellent way of working um",
    "start": "733600",
    "end": "743360"
  },
  {
    "text": "EVC people here use mcash D yeah so if you use mcash D for from",
    "start": "743360",
    "end": "749399"
  },
  {
    "text": "java this is a library that wraps up that um and it's really used for",
    "start": "749399",
    "end": "755760"
  },
  {
    "text": "spreading it's used for coordinating multiple mcash DS across availability zone so it gives you a replicated mcash",
    "start": "755760",
    "end": "762279"
  },
  {
    "text": "D um it doesn't claim to be um consistent at all so it's The Eccentric",
    "start": "762279",
    "end": "768760"
  },
  {
    "text": "volatile cache it it's it is sometimes somewhat consistent but has no guarantees",
    "start": "768760",
    "end": "775800"
  },
  {
    "text": "whatsoever so it's just a volatile cach time use it for session and time things out really quickly um exhibitor is a uh",
    "start": "775800",
    "end": "785480"
  },
  {
    "text": "system for managing curators and zookeepers so apparently there's all these zoo zoo related things so you have",
    "start": "785480",
    "end": "791360"
  },
  {
    "text": "a curator of a zoo and there's an exhibitor in a zoo so if you're trying to manage a whole lot of uh zookeepers",
    "start": "791360",
    "end": "797360"
  },
  {
    "text": "and keep them all running automatically you need some automation to do that and that's what exhibit is",
    "start": "797360",
    "end": "802800"
  },
  {
    "text": "for okay so all the zoo related ones are something to do with zookeeper then",
    "start": "802800",
    "end": "808920"
  },
  {
    "text": "Prett PR anyone know who prum is Greek mythology again this is a quiz",
    "start": "808920",
    "end": "816519"
  },
  {
    "text": "right okay PRI was Cassandra's father right so this is what you used to",
    "start": "816519",
    "end": "821959"
  },
  {
    "text": "look after Cassandra do backups up make sure you know no you can't go out",
    "start": "821959",
    "end": "827760"
  },
  {
    "text": "wearing that and come back by 10:00 kind of stuff right um so think of a paternal kind of thing so prum you is a Java",
    "start": "827760",
    "end": "836160"
  },
  {
    "text": "Tomcat process that you run on a AWS instance and you that's the thing that",
    "start": "836160",
    "end": "842120"
  },
  {
    "text": "comes up also on that instance there's a copy of Cassandra but it's not running to start with PRI comes up and figures",
    "start": "842120",
    "end": "848480"
  },
  {
    "text": "out what state everything's in it will do backups restores it will bootstrap a Cassandra cluster from nothing into a",
    "start": "848480",
    "end": "854680"
  },
  {
    "text": "running cluster in a few minutes so you just start a whole load of machines running prium and they will",
    "start": "854680",
    "end": "860639"
  },
  {
    "text": "self-organize into a Cassandra cluster that you can write to immediately it's trivial to create Cassandra clusters at",
    "start": "860639",
    "end": "866480"
  },
  {
    "text": "Netflix and all of the automation required to do that on AWS is done using",
    "start": "866480",
    "end": "872120"
  },
  {
    "text": "PRI so the Bas Cassandra code doesn't assume it's running in the cloud it can run anywhere so all the code that knew",
    "start": "872120",
    "end": "878000"
  },
  {
    "text": "of add AWS had to be in a separate place that's that's what PR is um if you ever",
    "start": "878000",
    "end": "883920"
  },
  {
    "text": "built a service that has a database behind it and just to give rest access to a database right um so what you want",
    "start": "883920",
    "end": "891120"
  },
  {
    "text": "to do is you want to build a storage tier um what was it storage tier as a",
    "start": "891120",
    "end": "897959"
  },
  {
    "text": "service over HT TTP stash right stash",
    "start": "897959",
    "end": "903360"
  },
  {
    "text": "with two A's storage tier as a service over htps so it's a it's a data access layer prototype this particular",
    "start": "903360",
    "end": "910680"
  },
  {
    "text": "implementation knows how to talk to my SQL and to Cassandra in the same code base it has all the drivers for both so",
    "start": "910680",
    "end": "917759"
  },
  {
    "text": "you can actually use it as a part of trying to get off of my SQL if you want to split some code off you can put it in",
    "start": "917759",
    "end": "923480"
  },
  {
    "text": "front of my SQL start using HTTP to talk to it then you can actually plug Cassandra in and start",
    "start": "923480",
    "end": "929519"
  },
  {
    "text": "using the same type of accesses it also contains a bunch of Cassandra client",
    "start": "929519",
    "end": "935240"
  },
  {
    "text": "side patterns which make using Cassandra much more much easier which we'll look at a bit",
    "start": "935240",
    "end": "940800"
  },
  {
    "text": "later all right halfway through these Aras which sounds like a Greek god but",
    "start": "940800",
    "end": "947440"
  },
  {
    "text": "it's actually the Latin name for some kind of lizard and I have no idea why they we use that it's a property",
    "start": "947440",
    "end": "953560"
  },
  {
    "text": "management system start if you start off with s Apache properties and you keep tinkering with it and adding layers of",
    "start": "953560",
    "end": "958600"
  },
  {
    "text": "comp it and trying to deal with all the problems you're going to have that's what you end up with so it's a fully",
    "start": "958600",
    "end": "963639"
  },
  {
    "text": "distributed property management system for configuring large scale systems look at more of that later uh anyone here use",
    "start": "963639",
    "end": "972079"
  },
  {
    "text": "DNS hopefully anyone here like programming DNS anyone here tried to script and automate DNS it's it's did it",
    "start": "972079",
    "end": "979839"
  },
  {
    "text": "work reliably for you no no we spent six months beating our head against that",
    "start": "979839",
    "end": "985399"
  },
  {
    "text": "problem I think this is a DNS automation Library I think we debugged the DNS",
    "start": "985399",
    "end": "990880"
  },
  {
    "text": "vendors solidly for 6 months uh and at the end of it decided that none of them worked except Route 53 so AWS is DNS you",
    "start": "990880",
    "end": "999160"
  },
  {
    "text": "can automate it you can script it you can ask it to do anything and it will reliably do the thing you asked it to do",
    "start": "999160",
    "end": "1005040"
  },
  {
    "text": "like you thought that all the other apis were like that too we were kind of naive turns out the others will break horribly",
    "start": "1005040",
    "end": "1010079"
  },
  {
    "text": "if you try and ask them to do things more than one at a time and wait a while and then one at a time and wait a while",
    "start": "1010079",
    "end": "1015240"
  },
  {
    "text": "so be very very careful it's a Java Library plus it's a command line script",
    "start": "1015240",
    "end": "1020600"
  },
  {
    "text": "and it's pluggable and if you have other DNS vendors we have open stack and uh",
    "start": "1020600",
    "end": "1026558"
  },
  {
    "text": "rack space DNS support in there and then there's a mock DNS so you can actually do testing against it so it's a very",
    "start": "1026559",
    "end": "1033160"
  },
  {
    "text": "very nice library that this this is a beautiful piece of Standalone code built into it is an HTTP client that's used to",
    "start": "1033160",
    "end": "1040280"
  },
  {
    "text": "drive all the other vendors and that client is actually Fain which these two were written by Adrian Cole you might",
    "start": "1040280",
    "end": "1046400"
  },
  {
    "text": "have heard of jcloud Cloud's Library quite a lot of things are built on jclouds he worked for Netflix for about",
    "start": "1046400",
    "end": "1051799"
  },
  {
    "text": "nine months and mostly what he produced was these two things um okay so when you're creating",
    "start": "1051799",
    "end": "1058919"
  },
  {
    "text": "microservices you want to start with a basic microservice right and you want it to be just like a prototype with all the",
    "start": "1058919",
    "end": "1064600"
  },
  {
    "text": "stuff already hooked up so that's what carryon is it's an elementary particle for a micros service you basically have",
    "start": "1064600",
    "end": "1072520"
  },
  {
    "text": "a it's a tomcat server or they're working on nety based servers for it as an upgrade um it has has all of it's",
    "start": "1072520",
    "end": "1079559"
  },
  {
    "text": "basically an HTTP client HTTP server base server L with all of the bits and pieces that you need to instrument that",
    "start": "1079559",
    "end": "1085960"
  },
  {
    "text": "monitor it and all of the other all the stuff we'll get to that later what it's got in it but it's the thing you usually",
    "start": "1085960",
    "end": "1091520"
  },
  {
    "text": "start with and then when you want to make a call from into a microservice Between microservices You Want To Be",
    "start": "1091520",
    "end": "1097559"
  },
  {
    "text": "Clever about how you distribute your requests and you want to be um do you",
    "start": "1097559",
    "end": "1103120"
  },
  {
    "text": "know load balancing in ways that are very robust and that's what ribbon is so ribbon is the client side light library",
    "start": "1103120",
    "end": "1109080"
  },
  {
    "text": "for making it's a wrapper around HTTP client but it's much more sophisticated and aware of all the other",
    "start": "1109080",
    "end": "1115559"
  },
  {
    "text": "things okay anyone have used any of those no okay",
    "start": "1115559",
    "end": "1120840"
  },
  {
    "text": "Servo this is uh you use this for collecting data about a system it's a",
    "start": "1120840",
    "end": "1127000"
  },
  {
    "text": "little bit like uh what's the thing called yamama metrics everyone use metrics yeah so it's it's we we're",
    "start": "1127000",
    "end": "1134240"
  },
  {
    "text": "actually looking at one point at merging it with metrics but the apis were just a little bit different use Cas a little bit different so we we didn't we think",
    "start": "1134240",
    "end": "1141159"
  },
  {
    "text": "we probably should have but required two egos to come into alignment and it didn't work merging open source projects",
    "start": "1141159",
    "end": "1148000"
  },
  {
    "text": "is a pain anyway it's a it's the mon it basically you can plug some mbans and",
    "start": "1148000",
    "end": "1153840"
  },
  {
    "text": "things into it you can collect business metrics and you can export them directly into AWS and use that to drive uh use",
    "start": "1153840",
    "end": "1160400"
  },
  {
    "text": "the business metric to drive aut scaling roles so we'll look at that a bit more later now uh who uses log for J from",
    "start": "1160400",
    "end": "1167840"
  },
  {
    "text": "java code or jvms right what happens if you push too much logging information into it you ever tried that your systems",
    "start": "1167840",
    "end": "1176480"
  },
  {
    "text": "gradually lock up and the logging system starts stealing all the threads from the work things that we're trying to get",
    "start": "1176480",
    "end": "1181559"
  },
  {
    "text": "work and then your system actually collapses in a sort of a uh runaway um",
    "start": "1181559",
    "end": "1187000"
  },
  {
    "text": "snowballing effect of just too much logging causes additional logging causes more star resource starvation and you",
    "start": "1187000",
    "end": "1192919"
  },
  {
    "text": "can tip a machine over to the point where it can't do anything except be a sort of in this constipated logging",
    "start": "1192919",
    "end": "1198200"
  },
  {
    "text": "state it can't do anything except try and log things and it can't even log things anymore so to get away from that",
    "start": "1198200",
    "end": "1204159"
  },
  {
    "text": "and because Netflix likes logging lots of data really really really fast um Blitz for J is built as a non-blocking",
    "start": "1204159",
    "end": "1211600"
  },
  {
    "text": "front end uh to all of the log forj kind of API so it's very has similar functionality for log for J to log for J",
    "start": "1211600",
    "end": "1218600"
  },
  {
    "text": "but it doesn't block that's the that's its basic reason for existing and it uses a separate thread pole so it",
    "start": "1218600",
    "end": "1223919"
  },
  {
    "text": "doesn't steal your threads either and they can log 10 times as much stuff um",
    "start": "1223919",
    "end": "1229280"
  },
  {
    "text": "um people here use uh dependency injection as a problem when you've got lots and lots of libraries you have to",
    "start": "1229280",
    "end": "1235280"
  },
  {
    "text": "assemble them all in the right order and make sure and you initialize each of them once and in the right order big pain in the neck to figure out we had",
    "start": "1235280",
    "end": "1241600"
  },
  {
    "text": "this ad hoc way of doing it that got very messy so some point we decided to use Google juice for that some of you",
    "start": "1241600",
    "end": "1247880"
  },
  {
    "text": "may use juice and we wrapped a whole bunch of extra stuff around juice and that's what governator it so it's a it's",
    "start": "1247880",
    "end": "1253880"
  },
  {
    "text": "an extension to Google juice which um lets you do the dependency injection in",
    "start": "1253880",
    "end": "1259559"
  },
  {
    "text": "a very standardized way and the other components of Netflix ESS mostly use governator to do that",
    "start": "1259559",
    "end": "1265880"
  },
  {
    "text": "now all right what have we got to now Eder Eda is another um Norse word does",
    "start": "1265880",
    "end": "1275520"
  },
  {
    "text": "anyone okay who speaks Norwegian Viking whatever okay I thought this would be",
    "start": "1275520",
    "end": "1281440"
  },
  {
    "text": "the one place where you'd know we have one vaguely Norwegian guy at Netflix for a while and he named a whole bunch of",
    "start": "1281440",
    "end": "1286760"
  },
  {
    "text": "things um it's this it's the stories of the Norse gods so um do you remember when the you",
    "start": "1286760",
    "end": "1294400"
  },
  {
    "text": "know every time a Malaysian airliner disappears in the sea they go looking for that black box right and they",
    "start": "1294400",
    "end": "1301440"
  },
  {
    "text": "they're still looking for that particular black box but if when you find the black box after an aircraft crashes it's got a full history of",
    "start": "1301440",
    "end": "1307440"
  },
  {
    "text": "everything that happened to that plane in it and you can figure out what happened what you know what was being",
    "start": "1307440",
    "end": "1312600"
  },
  {
    "text": "said on the flight deck what all the state of all the system was right now wouldn't it be cool if you had a flat",
    "start": "1312600",
    "end": "1318679"
  },
  {
    "text": "blackbox for your data center and your applications and your Cloud right that's what it is it's incredibly simple",
    "start": "1318679",
    "end": "1324919"
  },
  {
    "text": "concept it's a fairly simple application it's a little Scala process but it can",
    "start": "1324919",
    "end": "1330000"
  },
  {
    "text": "you basically the first thing you do when you start an Amazon account is you start a copy of Eder and it does it records everything that ever happened in",
    "start": "1330000",
    "end": "1336520"
  },
  {
    "text": "that account and if you want to go back and look at what the state of it was in the past then you can actually find out",
    "start": "1336520",
    "end": "1343240"
  },
  {
    "text": "very powerful um now when you're building microservices you have all these",
    "start": "1343240",
    "end": "1348640"
  },
  {
    "text": "services and they have to be able to find each other so you have to have some kind of service registry where everyone says hey I'm here and some way to find",
    "start": "1348640",
    "end": "1356520"
  },
  {
    "text": "out where everybody is right so you can make calls between them um Netflix",
    "start": "1356520",
    "end": "1361679"
  },
  {
    "text": "architect uses direct calls between Services there's no message bus layer that's doing routing for you um so",
    "start": "1361679",
    "end": "1369520"
  },
  {
    "text": "Eureka is the library that's where no it's the service that basically builds a",
    "start": "1369520",
    "end": "1375760"
  },
  {
    "text": "a service registry a distributed service registry very highly available um you could use zookeeper or console or",
    "start": "1375760",
    "end": "1382600"
  },
  {
    "text": "whatever to do this but there there are things that will take zookeeper down that will not take this down so it's not",
    "start": "1382600",
    "end": "1389240"
  },
  {
    "text": "necessarily the cleanest nicest piece of code it's because it's one of the first things Netflix wrote and it's been beaten on for a long time but is one of",
    "start": "1389240",
    "end": "1396000"
  },
  {
    "text": "the most robust pieces of code because every time your service registry goes down you go down you go down really",
    "start": "1396000",
    "end": "1401919"
  },
  {
    "text": "badly so every time this has broken Netflix we fixed it um",
    "start": "1401919",
    "end": "1408640"
  },
  {
    "text": "okay zul anyone knew what zul was where the name comes from H Ghostbusters",
    "start": "1408640",
    "end": "1413679"
  },
  {
    "text": "Ghostbusters yeah we have a Ghostbusters fan um so zul is the gatekeeper I think",
    "start": "1413679",
    "end": "1419559"
  },
  {
    "text": "for z ghost Castle so there some monster that anyway so it's a API proxy layer you put it in front of all of your",
    "start": "1419559",
    "end": "1425919"
  },
  {
    "text": "systems and you create an API uh sort of a set of API requests that map into",
    "start": "1425919",
    "end": "1432559"
  },
  {
    "text": "whatever you want at the back so if you have a whole lot of microservices and you want them to look like one unified API like they were a single monolithic",
    "start": "1432559",
    "end": "1439520"
  },
  {
    "text": "service you put Z in front and it's a very thin programmable layer that routes and modifies traffic so you can",
    "start": "1439520",
    "end": "1446520"
  },
  {
    "text": "manipulate uh things so it was used to replace um the what's it called apog",
    "start": "1446520",
    "end": "1452520"
  },
  {
    "text": "apog have a product that's also an API proxy that does different things to this but it was used to replace what what",
    "start": "1452520",
    "end": "1459400"
  },
  {
    "text": "previously we were using apog for all right anyone here use jbm's garbage",
    "start": "1459400",
    "end": "1465600"
  },
  {
    "text": "collection how do you visualize your garbage collection hey garbage collection visualization",
    "start": "1465600",
    "end": "1471720"
  },
  {
    "text": "there you go it's a little Standalone tool you just feed your logs to it and it will visualize what was going on and",
    "start": "1471720",
    "end": "1477640"
  },
  {
    "text": "confuse you more probably um I don't think there's only two people in the world I know who actually know how",
    "start": "1477640",
    "end": "1483360"
  },
  {
    "text": "garbage collection works one of them wrote it and the other one is a friend of mine who was sharing an office with",
    "start": "1483360",
    "end": "1489080"
  },
  {
    "text": "him for five years and who works on Netflix um pyus is a okay so everyone",
    "start": "1489080",
    "end": "1497640"
  },
  {
    "text": "has all of these machines and then they end up building dashboards for their software right everyone just ends up",
    "start": "1497640",
    "end": "1502679"
  },
  {
    "text": "building dashboards and it's a pain in the neck building dashboards um so somebody once over a weekend at Netflix",
    "start": "1502679",
    "end": "1510159"
  },
  {
    "text": "decided to assemble together all the parts that everyone always used to build dashboards and put together a dashboard building framework built out of all of",
    "start": "1510159",
    "end": "1516520"
  },
  {
    "text": "the other Frameworks it's so it's got bootstrap and I don't know like free marker and things like that in it it's",
    "start": "1516520",
    "end": "1522559"
  },
  {
    "text": "just all of those jQuery whatever it's all the stuff you would need to build a dashboard glued together into a sort of",
    "start": "1522559",
    "end": "1528399"
  },
  {
    "text": "of a framework where you insert a few bits of code and a few ples and a big dashboard appears it's got D3 in it and",
    "start": "1528399",
    "end": "1533919"
  },
  {
    "text": "stuff like that all right getting there",
    "start": "1533919",
    "end": "1540760"
  },
  {
    "text": "amator any clues so the Netflix container been used",
    "start": "1540760",
    "end": "1548120"
  },
  {
    "text": "for several years as an Ami an Amazon Amazon machine image so you have to you",
    "start": "1548120",
    "end": "1553559"
  },
  {
    "text": "know like if you've been playing with Docker recently you have to build Docker containers right and then you ship the container off to somebody to run it or",
    "start": "1553559",
    "end": "1560320"
  },
  {
    "text": "fire it up so eminator is the bakery that Netflix uses to take code and bake",
    "start": "1560320",
    "end": "1566120"
  },
  {
    "text": "it into Amis so think of it as a very sort of early crude prototype for what Docker has currently become Netflix is",
    "start": "1566120",
    "end": "1573679"
  },
  {
    "text": "now trying to figure out how to use Docker whatever all right Big Data people here play around with her doop",
    "start": "1573679",
    "end": "1580039"
  },
  {
    "text": "get a big data people no no big day to people no one like no one likes her doop here what are you guys do all",
    "start": "1580039",
    "end": "1587240"
  },
  {
    "text": "day def find some technologies all right um aisus is the person in Greek",
    "start": "1587240",
    "end": "1592919"
  },
  {
    "text": "mythology that killed Cassandra which is why there's a sword there uh and it's used to scrape data out of a dead",
    "start": "1592919",
    "end": "1598720"
  },
  {
    "text": "Cassandra cluster and feed it into Hadoop so you can process it uh Genie is",
    "start": "1598720",
    "end": "1603960"
  },
  {
    "text": "a way of magically creating lots of Cassandra clusters and keeping track of all of them because Netflix has I don't",
    "start": "1603960",
    "end": "1609960"
  },
  {
    "text": "know 50 or 60 Cassandra clusters um people heard of a language called Pig",
    "start": "1609960",
    "end": "1616120"
  },
  {
    "text": "it's a work data flow language it's a kind of a pain to use that's really hard to debug well it was until we put",
    "start": "1616120",
    "end": "1622159"
  },
  {
    "text": "lipstick on it so it's lipstick on the pig see was a phrase in America meaning you",
    "start": "1622159",
    "end": "1628559"
  },
  {
    "text": "made something look extra shiny right you got a really old crappy car and like put a really big shiny you know bumper",
    "start": "1628559",
    "end": "1634880"
  },
  {
    "text": "on it or something uh it's a v a realtime visualizer for pig jobs that show shows them in run runtime as",
    "start": "1634880",
    "end": "1641080"
  },
  {
    "text": "they're flowing you can debug and it's so good that there's a company building a a uh system a real a big data system",
    "start": "1641080",
    "end": "1650279"
  },
  {
    "text": "platform called madata and madata adopted this tool as the visualizer for",
    "start": "1650279",
    "end": "1655440"
  },
  {
    "text": "their platform so this is effectively now jointly being developed by Netflix and mad data and madata are putting a",
    "start": "1655440",
    "end": "1661960"
  },
  {
    "text": "lot more effort into it because they're trying to make sell it for money and we're happy that it's getting better um any closure programmers",
    "start": "1661960",
    "end": "1670360"
  },
  {
    "text": "here come on we got to have a closure programmer oh who's no one all right",
    "start": "1670360",
    "end": "1675919"
  },
  {
    "text": "where's where's David Nolan when you need him all right um pig pen is map reduce written en closure that compiles",
    "start": "1675919",
    "end": "1683000"
  },
  {
    "text": "down to Pig I'll show you what it looks like later I have some code um Seer Seer is Latin for truth I think",
    "start": "1683000",
    "end": "1693039"
  },
  {
    "text": "something like that so S3 is a storage system and if you write something to it",
    "start": "1693039",
    "end": "1699200"
  },
  {
    "text": "from one place and you read from the other place eventually you see what was written right but when you've got your",
    "start": "1699200",
    "end": "1705240"
  },
  {
    "text": "big data system writing lots of data over here and the next step in your processing pipelines trying to figure",
    "start": "1705240",
    "end": "1711000"
  },
  {
    "text": "out whether it's it's in sync yet or not you have to basically delay to wait for",
    "start": "1711000",
    "end": "1716279"
  },
  {
    "text": "the system to become consistent so simper is a system for tracking the consistency and what it does is it",
    "start": "1716279",
    "end": "1722840"
  },
  {
    "text": "delays jobs it's a listing service that tracks indexes of S3 buckets so a little",
    "start": "1722840",
    "end": "1729120"
  },
  {
    "text": "bit geeky but what it's really doing is p papering over the fact that this is a very distributed",
    "start": "1729120",
    "end": "1735640"
  },
  {
    "text": "system all right got a few more um if you ever tried to store extremely",
    "start": "1735640",
    "end": "1742200"
  },
  {
    "text": "large graphs in memory uh like these movies are related to these other movies",
    "start": "1742200",
    "end": "1747760"
  },
  {
    "text": "in these complicated ways and there's lots of movies and you end up with multiple gigabytes of data just trying",
    "start": "1747760",
    "end": "1753519"
  },
  {
    "text": "to store that as a data structure so S3 Netflix graph is a very compressed",
    "start": "1753519",
    "end": "1758960"
  },
  {
    "text": "format for storing these types of uh metadata linked highly linked",
    "start": "1758960",
    "end": "1764880"
  },
  {
    "text": "metadata and Zeno is a system for propagating that kind of metadata around",
    "start": "1764880",
    "end": "1770159"
  },
  {
    "text": "system so if you're doing metadata propagation and compression this is a useful piece of",
    "start": "1770159",
    "end": "1776640"
  },
  {
    "text": "technology all right who cares about security here we any security all right we got a few more hands all right cool",
    "start": "1776640",
    "end": "1783519"
  },
  {
    "text": "so if you're running security if you're running on AWS and you run security monkey it's a standalone python app",
    "start": "1783519",
    "end": "1790799"
  },
  {
    "text": "doesn't relate to anything else here you can just run it on its own it looks at all of the configuration of your AWS",
    "start": "1790799",
    "end": "1796120"
  },
  {
    "text": "account if that had to look at multiple AWS accounts and it will tell you if anything looks wide open and insecure",
    "start": "1796120",
    "end": "1802360"
  },
  {
    "text": "like you have security groups set to allow every access or S3 bucket set to",
    "start": "1802360",
    "end": "1807960"
  },
  {
    "text": "provide too much access so very useful tool so basically the way Netflix Security Group works is they have the",
    "start": "1807960",
    "end": "1813679"
  },
  {
    "text": "monkey watching over the system they let the developers do anything they want and when one of them does something stupid",
    "start": "1813679",
    "end": "1818919"
  },
  {
    "text": "they get notified to then go talk to that developer and shut it down so that's the",
    "start": "1818919",
    "end": "1824200"
  },
  {
    "text": "approach all right um let's see this is kind of more like",
    "start": "1824200",
    "end": "1829279"
  },
  {
    "text": "Tim Bray's talk for the next little bit so Tim Bray was talking about all these bad people out on the internet that are off doing nasty things right um so there",
    "start": "1829279",
    "end": "1839640"
  },
  {
    "text": "scumbled the internet and you're sort of searching for them um the idea is that",
    "start": "1839640",
    "end": "1846960"
  },
  {
    "text": "uh every online brand there were people trying to break that brand trying to break into it trying to set up dossa tax",
    "start": "1846960",
    "end": "1853760"
  },
  {
    "text": "uh harvesting um harvesting accounts uh you providing YouTube videos on how",
    "start": "1853760",
    "end": "1860799"
  },
  {
    "text": "to uh steal Netflix for free uh all that kind of stuff so from Netflix point of",
    "start": "1860799",
    "end": "1866320"
  },
  {
    "text": "view there's a lot of the security team deals a lot of things which are actually related to Brand management so what scum",
    "start": "1866320",
    "end": "1872880"
  },
  {
    "text": "does is a search engine you it will go look on pce bin and and Twitter and",
    "start": "1872880",
    "end": "1878519"
  },
  {
    "text": "YouTube and all it's got plugins for all these different places even eBay because people post try and sell sell stuff on",
    "start": "1878519",
    "end": "1885200"
  },
  {
    "text": "eBay that's maybe you don't want to do with your brand um it finds all of those and then it",
    "start": "1885200",
    "end": "1891279"
  },
  {
    "text": "builds a workflow for people to deal with them so like say a YouTube video that says this is how you steal Netflix",
    "start": "1891279",
    "end": "1897080"
  },
  {
    "text": "and keep getting a new every month you know three months forever um so we'll go get a takedown notice and we send it off",
    "start": "1897080",
    "end": "1903720"
  },
  {
    "text": "to Google to shut down that that YouTube video so that is a workflow that would be attached to a certain type of query",
    "start": "1903720",
    "end": "1909919"
  },
  {
    "text": "right so it automates all of that now when you're rumaging around the dark corners of the internet people lay",
    "start": "1909919",
    "end": "1915360"
  },
  {
    "text": "little traps and bombs for you so if you go and rummage around and you keep following links to fairly sort of people",
    "start": "1915360",
    "end": "1920960"
  },
  {
    "text": "discussing dodgy things you'll probably pick up some viruses and other nasty things and they'll take over your",
    "start": "1920960",
    "end": "1926000"
  },
  {
    "text": "machine and if they see you always coming from the same IP address they'll get unhappy right and they might get",
    "start": "1926000",
    "end": "1931720"
  },
  {
    "text": "even more unhappy so sketchy anonymizes the IP address you're coming from and",
    "start": "1931720",
    "end": "1937960"
  },
  {
    "text": "acts as a sa a Sandbox so it can't get infected by it so it's a safe way to go",
    "start": "1937960",
    "end": "1945200"
  },
  {
    "text": "and rumage around in the dark corners of the internet where the umbers live and and pick out things and what it does is",
    "start": "1945200",
    "end": "1950880"
  },
  {
    "text": "it gathers screenshots of you know discussions in chat sessions and products and whatever people are doing",
    "start": "1950880",
    "end": "1956799"
  },
  {
    "text": "and bits of websites and saves them in an S3 bucket for you so you safely collect all of the evidence you need to",
    "start": "1956799",
    "end": "1963360"
  },
  {
    "text": "go and clean up whatever you're trying to clean up right so this came out a month or two ago the Netflix security",
    "start": "1963360",
    "end": "1969200"
  },
  {
    "text": "team has finally got enough bandwidth to start open sourcing some of its tools so this sound useful you want think there",
    "start": "1969200",
    "end": "1975559"
  },
  {
    "text": "was a c there a few people in Copenhagen who thought this was useful enough they were going to go off and try and install it pretty much that day",
    "start": "1975559",
    "end": "1982799"
  },
  {
    "text": "um there's a very large scale intrusion detection system at Netflix that's built",
    "start": "1982799",
    "end": "1988000"
  },
  {
    "text": "using Z and a bunch of other things it's called speed bump I think that one I'm expecting to come out fairly soon so",
    "start": "1988000",
    "end": "1995559"
  },
  {
    "text": "really really big most intrusion detection systems can't handle the kind of traffic Netflix has and don't understand Cloud so this is a",
    "start": "1995559",
    "end": "2001919"
  },
  {
    "text": "interesting one all right so to tie it all together there's a whole bunch of recipes there",
    "start": "2001919",
    "end": "2008159"
  },
  {
    "text": "there's several recipe apps but um this is basically Google Reader remember good old Google Reader used to be your RSS",
    "start": "2008159",
    "end": "2014240"
  },
  {
    "text": "reader and then they shut it down everyone got really unhappy well about the same time we built a go a Google",
    "start": "2014240",
    "end": "2019279"
  },
  {
    "text": "Reader replacement using Netflix OSS which you can which is uh it shows you",
    "start": "2019279",
    "end": "2024960"
  },
  {
    "text": "how to glue it all together then there's a few other things here um there's a web",
    "start": "2024960",
    "end": "2030519"
  },
  {
    "text": "cryptography there's a series of Standards around web cryptography and we published a piece of one of those as",
    "start": "2030519",
    "end": "2035880"
  },
  {
    "text": "this is a a series of cryptograph graic functions that you want to embed in your web browser to to perform B lowlevel um",
    "start": "2035880",
    "end": "2043679"
  },
  {
    "text": "security protocols it's not really a standlone thing and brutal is a little weird it's a um if you use sort of chat",
    "start": "2043679",
    "end": "2051158"
  },
  {
    "text": "Bots it's a system for um it's it's related to sort of think of chat Ops or",
    "start": "2051159",
    "end": "2057158"
  },
  {
    "text": "whatever you call it where you basically you have things that are looking at chat sessions and feeding responding and chat",
    "start": "2057159",
    "end": "2063960"
  },
  {
    "text": "botting so it's in that general area if if you're into that space go look at what it does I forget the exact details",
    "start": "2063960",
    "end": "2070000"
  },
  {
    "text": "all right so that's roughly 40 Projects I'm going to go through the ones you",
    "start": "2070000",
    "end": "2075158"
  },
  {
    "text": "know some of some of them now and there's one extra one that's not on that list",
    "start": "2075159",
    "end": "2080878"
  },
  {
    "text": "um okay so let's look at how how we put",
    "start": "2080879",
    "end": "2087919"
  },
  {
    "text": "this together first of all you got to set up some AWS accounts and Netflix has a particular pattern for doing that so",
    "start": "2087919",
    "end": "2094398"
  },
  {
    "text": "I'll talk through why we do it that way I mean you don't have to copy it understand why we do it that way then",
    "start": "2094399",
    "end": "2100800"
  },
  {
    "text": "use uh Asgard to deploy things and ice for cost monitoring so we set up those",
    "start": "2100800",
    "end": "2106480"
  },
  {
    "text": "um you can set up all your security tools then you want to automate a build",
    "start": "2106480",
    "end": "2111599"
  },
  {
    "text": "system set up a service registry and your blackbox recorder then configuration property",
    "start": "2111599",
    "end": "2119240"
  },
  {
    "text": "system is all the foundational pieces you need to run a run a large scale thing then you're going to put some storage in so you want to put candra put",
    "start": "2119240",
    "end": "2126079"
  },
  {
    "text": "all the layering on top of that the me cach DS then you can deploy some code to it um so you deploy The Code by",
    "start": "2126079",
    "end": "2133640"
  },
  {
    "text": "modifying lots of carryon creating a whole bunch of forks of carryon basically using ribbon to chat to them",
    "start": "2133640",
    "end": "2139720"
  },
  {
    "text": "use all to basically mock your apis as you plug in or the the tools underneath",
    "start": "2139720",
    "end": "2144760"
  },
  {
    "text": "them and then route all the traffic amongst them and denominator to Route customers via DNS to the particular",
    "start": "2144760",
    "end": "2151640"
  },
  {
    "text": "Services okay then you've got to make sure it stays up so you're going to run some Simi and Army against it and use",
    "start": "2151640",
    "end": "2158319"
  },
  {
    "text": "historics and turbine to monitor it uh and then just to speed up make developers uh work a bit better there's",
    "start": "2158319",
    "end": "2165280"
  },
  {
    "text": "you know non-blocking logging garbage collection visualization building d uh",
    "start": "2165280",
    "end": "2170440"
  },
  {
    "text": "dashboards and using RX Java RX Java isn't on that previous list",
    "start": "2170440",
    "end": "2176079"
  },
  {
    "text": "because I think that's also now an external project um okay and then you're going to be big",
    "start": "2176079",
    "end": "2183560"
  },
  {
    "text": "build your big data once you're up and running you're going to use a big data system to track everything and monitor it",
    "start": "2183560",
    "end": "2190000"
  },
  {
    "text": "um and I forgot suro oops",
    "start": "2190000",
    "end": "2195400"
  },
  {
    "text": "anyway there's another one there we've got a slide front there's a log logging",
    "start": "2195440",
    "end": "2200480"
  },
  {
    "text": "pipeline system that's uh that you want set up as well and then some sample apps and as well as RSS reader I'll Point",
    "start": "2200480",
    "end": "2207960"
  },
  {
    "text": "people up Acme air and flux capacitor everyone needs a flux capacitor so this is the way that um we",
    "start": "2207960",
    "end": "2216040"
  },
  {
    "text": "think about setting up Amazon accounts so you have you start by building this",
    "start": "2216040",
    "end": "2222000"
  },
  {
    "text": "development test build account that's a single AWS account there's no production traffic to it it's just used to support",
    "start": "2222000",
    "end": "2227960"
  },
  {
    "text": "development right the build system delivers code into that account only right that's the way Netflix sets it up",
    "start": "2227960",
    "end": "2235240"
  },
  {
    "text": "so everything that ever runs in production has to run in test first and then there's a there's a simple command",
    "start": "2235240",
    "end": "2240839"
  },
  {
    "text": "which takes it and it copies the Ami of something that's been tested and puts that into production and then you",
    "start": "2240839",
    "end": "2247760"
  },
  {
    "text": "autoscale that and you create this is sort of cattle versus pet so you can have pets here but you always have",
    "start": "2247760",
    "end": "2253400"
  },
  {
    "text": "cattle up here you always have herds of machines you never have any individual machines and you can kill any individual",
    "start": "2253400",
    "end": "2259240"
  },
  {
    "text": "machine in production and it doesn't take the site down that's that's the pattern we've got here now the",
    "start": "2259240",
    "end": "2265760"
  },
  {
    "text": "production account has maybe 20 or 30,000 machines in it um and uh",
    "start": "2265760",
    "end": "2271480"
  },
  {
    "text": "developers all have root to it and they can do whatever they want to it um but occasionally you've got stuff that has",
    "start": "2271480",
    "end": "2277520"
  },
  {
    "text": "to be audited for security purposes so there's a separate account which has got a few hundred machines and a much",
    "start": "2277520",
    "end": "2283800"
  },
  {
    "text": "smaller number of developers and this is for things like socks compliance and PCI",
    "start": "2283800",
    "end": "2289119"
  },
  {
    "text": "compliance and any anything like that so that those are stored in separate accounts and then traffic is sort of",
    "start": "2289119",
    "end": "2295119"
  },
  {
    "text": "routed between them but all this information is held here and you need to be in a different um sort of ldap group",
    "start": "2295119",
    "end": "2301520"
  },
  {
    "text": "or whatever different you need different permissions to get into it so the backups from these these production",
    "start": "2301520",
    "end": "2308480"
  },
  {
    "text": "accounts are all stored into an archive account and the archive account is an",
    "start": "2308480",
    "end": "2313800"
  },
  {
    "text": "AWS account which only has S3 in it there's no running code you put it in a",
    "start": "2313800",
    "end": "2319960"
  },
  {
    "text": "different region you home the buckets in a different region so when you copy something to it it gets copied out of your region and you can put timeouts on",
    "start": "2319960",
    "end": "2327880"
  },
  {
    "text": "S3 so it gets deleted automatically after 30 days or something like that right um every weekend you copy from the",
    "start": "2327880",
    "end": "2336680"
  },
  {
    "text": "archive to the test account which proves that you have backups and it refreshes",
    "start": "2336680",
    "end": "2342440"
  },
  {
    "text": "the the test account with a full copy of all the data that was in production as of last week so the so the test account",
    "start": "2342440",
    "end": "2349359"
  },
  {
    "text": "has real data in it um the data from the auditing account if it's more sensitive",
    "start": "2349359",
    "end": "2355400"
  },
  {
    "text": "as you do this process as you do this this loadup process you you scramble the data so you tokenize it so things like",
    "start": "2355400",
    "end": "2361640"
  },
  {
    "text": "credit cards there are things that look like credit cards in the dev account but they are scrambled versions of credit",
    "start": "2361640",
    "end": "2367880"
  },
  {
    "text": "cards they're tokenized right so and then uh the data science account can do",
    "start": "2367880",
    "end": "2374440"
  },
  {
    "text": "daily rollup sort of ETL loads by also pulling from the archive um there's some continuous streaming data science stuff",
    "start": "2374440",
    "end": "2381040"
  },
  {
    "text": "but the bulk stuff that's done once a day is done by pulling from the archives right so all nicely decoupled",
    "start": "2381040",
    "end": "2389960"
  },
  {
    "text": "um and uh so this is the way it's been working for quite a while the more",
    "start": "2389960",
    "end": "2396480"
  },
  {
    "text": "upto-date way of doing it would be to use Docker instead of Amis but it's basically the same architecture you're",
    "start": "2396480",
    "end": "2401839"
  },
  {
    "text": "just generating Docker images and you're spitting them in here and then once they work you move them over here or down",
    "start": "2401839",
    "end": "2407079"
  },
  {
    "text": "here so that's just you know you just take seconds instead of minutes and you know Docker has some different",
    "start": "2407079",
    "end": "2413480"
  },
  {
    "text": "properties but most of the work going on or some of the work going at Netflix right now is to kind of extend that and",
    "start": "2413480",
    "end": "2419520"
  },
  {
    "text": "I'd create a separate infos saac account for running security monkey because security monkey running here can monitor",
    "start": "2419520",
    "end": "2426240"
  },
  {
    "text": "all of these other accounts right and so you want your security team probably want their own account to run a",
    "start": "2426240",
    "end": "2431560"
  },
  {
    "text": "few things in so you sort of separate everything out that way all right anyone",
    "start": "2431560",
    "end": "2437960"
  },
  {
    "text": "here heard of a company called codes spaces they don't exist anymore so this",
    "start": "2437960",
    "end": "2443720"
  },
  {
    "text": "is what happened um they had they built a console it was",
    "start": "2443720",
    "end": "2449280"
  },
  {
    "text": "a to like a web hosting company with subversion repos for the stuff you wanted buil and then PE customers",
    "start": "2449280",
    "end": "2456640"
  },
  {
    "text": "dropped websites and things like that into subversion and then they put it up on a website and they hosted it right so",
    "start": "2456640",
    "end": "2463560"
  },
  {
    "text": "what happened was that somebody took somebody hacked into the console they' built that let customers access the",
    "start": "2463560",
    "end": "2471359"
  },
  {
    "text": "their accounts and that console had the top level keys for their Amazon account",
    "start": "2471359",
    "end": "2476920"
  },
  {
    "text": "in it right just the top level the ones you get back with all permissions so",
    "start": "2476920",
    "end": "2482240"
  },
  {
    "text": "that hacker then used that to try and extort money from them and when they",
    "start": "2482240",
    "end": "2487599"
  },
  {
    "text": "went in and tried to change the passwords on the account the hacker has the keys he just he could he already",
    "start": "2487599",
    "end": "2493000"
  },
  {
    "text": "created a whole bunch of extra accounts with root permission so he went in and deleted everything they had right and",
    "start": "2493000",
    "end": "2499319"
  },
  {
    "text": "everything they had was in a single account so it deleted all the EBS volumes all the instances all the attach",
    "start": "2499319",
    "end": "2505599"
  },
  {
    "text": "so all the attached storage all the S3 buckets that with all their archives uh and after a few hours there was nothing",
    "start": "2505599",
    "end": "2511960"
  },
  {
    "text": "left of the company nothing at all so they just shut down said sorry we're out of business we have nothing left",
    "start": "2511960",
    "end": "2518040"
  },
  {
    "text": "right so don't do that toad space is goes tits up forever",
    "start": "2518040",
    "end": "2523640"
  },
  {
    "text": "this is a British technical term after attack and nukes its Hammers and hosted data source sharing site to",
    "start": "2523640",
    "end": "2530200"
  },
  {
    "text": "close following total Cloud apocalypse which is I think another technical term um so and this is a car off the edge of",
    "start": "2530200",
    "end": "2538000"
  },
  {
    "text": "a in a river or something so not good how do you not do that well I'd been talking about this is a slide i' I'd",
    "start": "2538000",
    "end": "2544760"
  },
  {
    "text": "been using for about 3 years so obviously the code's bases people didn't see my presentation um first thing the",
    "start": "2544760",
    "end": "2551319"
  },
  {
    "text": "top level account your security team should have two Factor authentication and they should be the people who create",
    "start": "2551319",
    "end": "2556800"
  },
  {
    "text": "new top level accounts and they should be immediate you know use the authentication keys they all you know",
    "start": "2556800",
    "end": "2563559"
  },
  {
    "text": "RSA token things um to do that so you can't do anything uh without that and",
    "start": "2563559",
    "end": "2569760"
  },
  {
    "text": "then what what you do is you create delegated minimum privilege account sub accounts that that have things taken",
    "start": "2569760",
    "end": "2574880"
  },
  {
    "text": "away from them like the ability to delete accounts delete things and stuff uh so when you if you're creating a",
    "start": "2574880",
    "end": "2580880"
  },
  {
    "text": "console for your customers you can put uh you can put some some you can set it",
    "start": "2580880",
    "end": "2586200"
  },
  {
    "text": "up so that it can only do the things it absolutely has to do and can't do anything else so you can basically",
    "start": "2586200",
    "end": "2591240"
  },
  {
    "text": "create safe things and that's you I am right identity and access management",
    "start": "2591240",
    "end": "2597599"
  },
  {
    "text": "it's a very powerful hierarchical system where you can go and create these things and then the other thing is to use",
    "start": "2597599",
    "end": "2603480"
  },
  {
    "text": "security groups correctly so that only to control who can get where within your system so let's look at",
    "start": "2603480",
    "end": "2611000"
  },
  {
    "text": "that so this is how you log into the system because you got to be able to log into machines occasionally to rummage",
    "start": "2611640",
    "end": "2618280"
  },
  {
    "text": "around and see why they're not working so here's a bunch of developers here's a Bastion host so you typically want a",
    "start": "2618280",
    "end": "2624160"
  },
  {
    "text": "pair of Bastion hosts I I've got like the H this is Kings Cross Station in London they have Platform 9 and 3/4s and",
    "start": "2624160",
    "end": "2631480"
  },
  {
    "text": "there's a little shopping you know cart pushed halfway into the wall for all of",
    "start": "2631480",
    "end": "2637160"
  },
  {
    "text": "the people that want to go to Hogwarts um this is the you know Harry Potter",
    "start": "2637160",
    "end": "2642400"
  },
  {
    "text": "thing anyway so it's a Bastion you got to be able to get through this wall um",
    "start": "2642400",
    "end": "2648720"
  },
  {
    "text": "people go there and take pictures of it including me which is why I have a picture of it so then to get so you log",
    "start": "2648720",
    "end": "2654319"
  },
  {
    "text": "into the Bastion and this has a script which basically pudos you to the right",
    "start": "2654319",
    "end": "2659520"
  },
  {
    "text": "user ID to log into any particular machine and logs that you did that right",
    "start": "2659520",
    "end": "2664559"
  },
  {
    "text": "so now you have an audit log of some to the Bastion and then they logged into the dubdub duub server and when they did",
    "start": "2664559",
    "end": "2672040"
  },
  {
    "text": "now once you're on one of these you can't actually log into any because the security groups say that Port 22 is only",
    "start": "2672040",
    "end": "2679480"
  },
  {
    "text": "permitted from the Bastion right the Bastion security group contains how many Bastion machines you have probably two",
    "start": "2679480",
    "end": "2685920"
  },
  {
    "text": "of them so that you one of them can go down and you can use the other one um but that means that they are in the they",
    "start": "2685920",
    "end": "2692440"
  },
  {
    "text": "are that Security Group means that from the Bastion you can log into anything",
    "start": "2692440",
    "end": "2697480"
  },
  {
    "text": "but to get to another instance you have to come back to here and come back here so if you want to copy files from machine to machine for example you have",
    "start": "2697480",
    "end": "2704000"
  },
  {
    "text": "to copy them back here copy them back out so it enforces an audit an auditable control point right there's not a huge",
    "start": "2704000",
    "end": "2710760"
  },
  {
    "text": "amount of work going on through this some people automate scripts that sort of trampoline through here but you can",
    "start": "2710760",
    "end": "2715960"
  },
  {
    "text": "log all of the what's happening so there's all stop sign things here so you",
    "start": "2715960",
    "end": "2721200"
  },
  {
    "text": "can't log in between these but however what you want to be able to do is the web server wants to be able to call the",
    "start": "2721200",
    "end": "2726359"
  },
  {
    "text": "stash which is the the data access layer service and then that one to be able to call Cassandra so there's a dubdub duub",
    "start": "2726359",
    "end": "2734240"
  },
  {
    "text": "security group here on Port 80 which lets people connect to it and there's there's a stash server let's say it's on",
    "start": "2734240",
    "end": "2740680"
  },
  {
    "text": "Port 7,000 or something um and this service will be a member of this",
    "start": "2740680",
    "end": "2746640"
  },
  {
    "text": "Security Group the security group is named after the service and then when you you look at this and there'll be a",
    "start": "2746640",
    "end": "2752760"
  },
  {
    "text": "list of machines here which be all the all of these Services which are allowed to call this service so you're",
    "start": "2752760",
    "end": "2758079"
  },
  {
    "text": "programming the firewall so you can only get certain types of requests so the the only way you can get into this is from",
    "start": "2758079",
    "end": "2763760"
  },
  {
    "text": "the Bastion of a port 22 or from permitted services on on that Port",
    "start": "2763760",
    "end": "2769040"
  },
  {
    "text": "everything's locked down think of this as a really soft gooey candy bar with hard nuts in it that's the security",
    "start": "2769040",
    "end": "2775400"
  },
  {
    "text": "model as opposed to the sort of the hard crunchy thing with a soft Center which is the way most data centers are built",
    "start": "2775400",
    "end": "2780680"
  },
  {
    "text": "so if you get through a Data Center perimeter you can usually do just about anything maybe layers of security but",
    "start": "2780680",
    "end": "2786240"
  },
  {
    "text": "individual machine maches aren't hardened the way this work this setup Works individual instances are hardened",
    "start": "2786240",
    "end": "2793119"
  },
  {
    "text": "to minimum privilege they they can they will only let you do what they're allowed to do okay so",
    "start": "2793119",
    "end": "2800800"
  },
  {
    "text": "that's it's almost break time",
    "start": "2800800",
    "end": "2805160"
  },
  {
    "text": "right want to go grab a coffee and come back so next thing I'm going to do is go",
    "start": "2808000",
    "end": "2813559"
  },
  {
    "text": "through I've got a slide on each of them individually to into a bit more detail but we're just going to sort of go over",
    "start": "2813559",
    "end": "2819280"
  },
  {
    "text": "the same set so if you've heard enough happy for you to come back you know go and see some other talk um and uh if you",
    "start": "2819280",
    "end": "2827319"
  },
  {
    "text": "want want to dig into each of these in a lot more detail and look at the process",
    "start": "2827319",
    "end": "2832520"
  },
  {
    "text": "required to install all of them I've got sort of the walk through um which is easy by the way it's just cloud",
    "start": "2832520",
    "end": "2838119"
  },
  {
    "text": "formation templates then we can look at that so that's what I'll be doing after the break so like 20 minutes for coffee",
    "start": "2838119",
    "end": "2844559"
  },
  {
    "text": "something like that through all of the individual projects um sort of one slide",
    "start": "2844559",
    "end": "2850040"
  },
  {
    "text": "at a time so it's I mentioned a little bit about security monkey what you can see here is uh you you this popup here",
    "start": "2850040",
    "end": "2859760"
  },
  {
    "text": "you add a whole list of different Amazon accounts and then over here there's a bunch of different ways of searching",
    "start": "2859760",
    "end": "2865920"
  },
  {
    "text": "through things and here you've got all the different things that found and what",
    "start": "2865920",
    "end": "2871440"
  },
  {
    "text": "sort of level of uh um sort worriness you should have on them if you click on one of those you get get this pop up so",
    "start": "2871440",
    "end": "2878119"
  },
  {
    "text": "this is a the following issues have been raised and need to be fixed or Justified",
    "start": "2878119",
    "end": "2884480"
  },
  {
    "text": "and this is a security group containing 000000 which means it's wide open to the",
    "start": "2884480",
    "end": "2889640"
  },
  {
    "text": "world this anybody in the world can connect to this machine right or this Security Group whatever is in that",
    "start": "2889640",
    "end": "2895559"
  },
  {
    "text": "security group so you can justify it if you want to and then say okay it's sort of Whit listed as an okay thing if you",
    "start": "2895559",
    "end": "2902640"
  },
  {
    "text": "meant to do that but you have to but you know it's got all the rules here here and there's a bunch of stuff so that's",
    "start": "2902640",
    "end": "2909359"
  },
  {
    "text": "that's what that does anyone that useful I'm going to run home and Implement",
    "start": "2909359",
    "end": "2914559"
  },
  {
    "text": "that maybe um",
    "start": "2914559",
    "end": "2919960"
  },
  {
    "text": "scbl so is mixed up with the thing um so it",
    "start": "2919960",
    "end": "2925440"
  },
  {
    "text": "has built in searches you you put in a search for something that you think would be an interesting search query and",
    "start": "2925440",
    "end": "2931440"
  },
  {
    "text": "it automatically has built-in apis for driving Google being eBay P Twitter and if you other places like YouTube I think",
    "start": "2931440",
    "end": "2938799"
  },
  {
    "text": "was another one so it it will you know automatically go and continuously search",
    "start": "2938799",
    "end": "2944760"
  },
  {
    "text": "using that query or you know what a set of queries against a lot of different search engine",
    "start": "2944760",
    "end": "2950359"
  },
  {
    "text": "places um and then look for all of this kind of stuff and build a workflow to",
    "start": "2950359",
    "end": "2955520"
  },
  {
    "text": "notify respond to this so your team can deal with it and then you can use sketchy uh to as a it's a sketchy is",
    "start": "2955520",
    "end": "2962000"
  },
  {
    "text": "actually a standalone project product you can use if you want to go and capture things from dodgy parts of the internet or URLs you don't trust it",
    "start": "2962000",
    "end": "2969000"
  },
  {
    "text": "actually is useful for that but scum uses it to drive it so I think uh",
    "start": "2969000",
    "end": "2974319"
  },
  {
    "text": "security monkey I think by the way is python with a post grow underneath it uh",
    "start": "2974319",
    "end": "2980680"
  },
  {
    "text": "scum I believe is a Ruby on Rails app I think we just you Netflix just hired a bunch of develop Engineers recently who",
    "start": "2980680",
    "end": "2987480"
  },
  {
    "text": "randomly use different things and I figure out what sketch is written written in but I don't think it's Ruby I",
    "start": "2987480",
    "end": "2992760"
  },
  {
    "text": "think it's maybe python as well okay",
    "start": "2992760",
    "end": "2998599"
  },
  {
    "text": "let's look at the tooling then so to start with you're going to want to stand up a whole bunch of services and it's",
    "start": "2998599",
    "end": "3005280"
  },
  {
    "text": "kind of a pain to have to go to GitHub and compile them and download them and figure out how to build them so they've",
    "start": "3005280",
    "end": "3010720"
  },
  {
    "text": "all been pre-built there are pre-built Amis you can just go and use the Camas and console to fire them up um for",
    "start": "3010720",
    "end": "3017520"
  },
  {
    "text": "Asgard aminat Eda Eureka Simeon army siman army is a single service that that",
    "start": "3017520",
    "end": "3022880"
  },
  {
    "text": "is basically a framework for building monkeys and three of the personalities",
    "start": "3022880",
    "end": "3027960"
  },
  {
    "text": "it has are janitor chaos and Conformity so these are Java based monkeys that sit in the Simeon Army",
    "start": "3027960",
    "end": "3034000"
  },
  {
    "text": "framework uh Peter sancas Built This sort of built all these Amis and",
    "start": "3034000",
    "end": "3039760"
  },
  {
    "text": "whatever as as a contribution to the Netflix Cloud prize that I was running last year now you can't don't just need",
    "start": "3039760",
    "end": "3045480"
  },
  {
    "text": "an Ami you have to configure them correctly you have to have the right security groups and a few other bits and",
    "start": "3045480",
    "end": "3050520"
  },
  {
    "text": "pieces so the other thing that Peter did was put cloud formation templates around that so that's all of the information",
    "start": "3050520",
    "end": "3056640"
  },
  {
    "text": "information metadata information you need to launch an Ami so that makes it really easy and I'm just going to do a",
    "start": "3056640",
    "end": "3063160"
  },
  {
    "text": "walk through for Asgard and you'd repeat this for different accounts and you'd repeat this for other tools too so",
    "start": "3063160",
    "end": "3071839"
  },
  {
    "text": "there's a URL to these templates um you do get clone blah blah",
    "start": "3071839",
    "end": "3077480"
  },
  {
    "text": "blah to get it they're all written using anable um you create the stack you read",
    "start": "3077480",
    "end": "3084480"
  },
  {
    "text": "it on there so basically you Cate quick click create a new stack oops where is",
    "start": "3084480",
    "end": "3089760"
  },
  {
    "text": "it push this button you click create a new stack you create a stack you give it a name",
    "start": "3089760",
    "end": "3095799"
  },
  {
    "text": "Asgard you upload a template file you browse and you get the Asgard Json that was provided from git right very",
    "start": "3095799",
    "end": "3105000"
  },
  {
    "text": "simple and then you have to give it your IP address so that that machine has",
    "start": "3105000",
    "end": "3110559"
  },
  {
    "text": "permissions for you to connect to it but nobody else so that's a secure way of starting up an instance that lets you",
    "start": "3110559",
    "end": "3116559"
  },
  {
    "text": "browse to it so you need to give it an IP address that's either the Gateway or your own",
    "start": "3116559",
    "end": "3122400"
  },
  {
    "text": "machine um what the from would look like and a key pair name and instance type to",
    "start": "3122400",
    "end": "3128520"
  },
  {
    "text": "do it on uh and then you say continue you don't need to set up any",
    "start": "3128520",
    "end": "3134480"
  },
  {
    "text": "tags and then confirm and then you sit back and wait and these little yellow dots turn into",
    "start": "3134480",
    "end": "3141799"
  },
  {
    "text": "little green dots eventually and everything gets created and all the resources get created and a minute or",
    "start": "3141799",
    "end": "3147319"
  },
  {
    "text": "two later you have a running instance now one of the things that this instance",
    "start": "3147319",
    "end": "3153400"
  },
  {
    "text": "has is a public I DNS name here right so",
    "start": "3153400",
    "end": "3158839"
  },
  {
    "text": "this is what your browser will browse to to find it so you have to cut that out just cut and paste it out of there stick",
    "start": "3158839",
    "end": "3165480"
  },
  {
    "text": "it in the browser and there is Asgard this is the first setup so that that's it there's no build you just go and run",
    "start": "3165480",
    "end": "3172359"
  },
  {
    "text": "through that template two or three minutes after you started you have a running copy of Asgard now Asgard",
    "start": "3172359",
    "end": "3178319"
  },
  {
    "text": "manages your Amazon account so you need to use one of the you need to give it a an access key and a secret quick key and",
    "start": "3178319",
    "end": "3184920"
  },
  {
    "text": "the account number and all that stuff remember to use I am to do you know take",
    "start": "3184920",
    "end": "3190119"
  },
  {
    "text": "some permissions away from your thing don't put your top level Amazon account in there you know create some sub",
    "start": "3190119",
    "end": "3195319"
  },
  {
    "text": "accounts uh next thing is once you've done that this is the standard console for for Asgard so you've got a bunch of",
    "start": "3195319",
    "end": "3202520"
  },
  {
    "text": "icons here for creating things you want to create a database RDS is up here uh",
    "start": "3202520",
    "end": "3208000"
  },
  {
    "text": "there's simple DB there's ec2 and Autos scale groups and Amis and all the",
    "start": "3208000",
    "end": "3213640"
  },
  {
    "text": "different bits and pieces uh and this is this scales they use this tool to manage accounts with you know 10,000 plus",
    "start": "3213640",
    "end": "3220520"
  },
  {
    "text": "machines in it so when you say give me show me all the instances it it's kind",
    "start": "3220520",
    "end": "3225599"
  },
  {
    "text": "of slow but it doesn't fall over right it it's got some uh actually if it gets",
    "start": "3225599",
    "end": "3231359"
  },
  {
    "text": "to be big it's got a little button that says do you want to populate the search term you click that button otherwise",
    "start": "3231359",
    "end": "3236559"
  },
  {
    "text": "just to save it so this is a this is what all the developers use at Netflix for deploying things when you're",
    "start": "3236559",
    "end": "3242440"
  },
  {
    "text": "actually working with it this is the normal thing you'd be doing um you got to deploy some code you fire it up for",
    "start": "3242440",
    "end": "3250559"
  },
  {
    "text": "the cluster called Obi-Wan which is the name of an application uh and you see these two things this is the previous",
    "start": "3250559",
    "end": "3257280"
  },
  {
    "text": "version of the application and there are instances here but they're out of service uh and there's a version 64",
    "start": "3257280",
    "end": "3263359"
  },
  {
    "text": "which is in service and if you wanted to shut this down and switch back because",
    "start": "3263359",
    "end": "3268400"
  },
  {
    "text": "there was a problem you'd hit enable here and you'd hit disable here then all",
    "start": "3268400",
    "end": "3274359"
  },
  {
    "text": "of the traffic would go to this version right so that's very it's like continuous versions red black push this",
    "start": "3274359",
    "end": "3281680"
  },
  {
    "text": "is that's what this automates and it's something that the Amazon console doesn't really do a good job of automating when you want to start",
    "start": "3281680",
    "end": "3287799"
  },
  {
    "text": "version 65 you go find the Ami the amator built for you that contains the new version of the code you say what",
    "start": "3287799",
    "end": "3294480"
  },
  {
    "text": "instance type you want to start it on how many you want for the autoscale group click that button it'll fire up",
    "start": "3294480",
    "end": "3300359"
  },
  {
    "text": "when they're all up and running you can connect to one directly if you want to just check it's okay uh once it looks",
    "start": "3300359",
    "end": "3305680"
  },
  {
    "text": "like it's working you enable it then you disable the old one and then you have to delete this one because it only allows",
    "start": "3305680",
    "end": "3312599"
  },
  {
    "text": "three versions right just a rolling set you got one back and one forward and one in the middle that's really all you need",
    "start": "3312599",
    "end": "3319319"
  },
  {
    "text": "so the last four years this is how Netflix has been provisioned except nowadays it's actually this is M manual",
    "start": "3319319",
    "end": "3325520"
  },
  {
    "text": "provisioning now the there automated provisioning that pushes pushes things in but anyway quite a few people using",
    "start": "3325520",
    "end": "3332440"
  },
  {
    "text": "this it's one of the most popular Netflix Open Source projects all right so that's the first",
    "start": "3332440",
    "end": "3338039"
  },
  {
    "text": "thing you want next thing you want to know is how much you spent so this is a the cost optim cost tracking there's all",
    "start": "3338039",
    "end": "3344200"
  },
  {
    "text": "kinds of slice and dice stuff up here and you can get uh you can see on demand",
    "start": "3344200",
    "end": "3350960"
  },
  {
    "text": "reserved all those kinds of things you this is you know different applications firing up and coming and going and Order",
    "start": "3350960",
    "end": "3357240"
  },
  {
    "text": "scaling and whatever so it's a extremely powerful tool um it's better in some",
    "start": "3357240",
    "end": "3363440"
  },
  {
    "text": "ways than some of the commercial projects that are out there and it actually predates some of them in terms of when we started building it problem",
    "start": "3363440",
    "end": "3370880"
  },
  {
    "text": "is it includes High charts and you can't uh deploy the the license terms for high",
    "start": "3370880",
    "end": "3376880"
  },
  {
    "text": "chart say that you can't do a pre-built Ami because you have to have a license so you have to go through a bill process",
    "start": "3376880",
    "end": "3382280"
  },
  {
    "text": "for it um unless eventually we'll take High charts out and put something else in and if you care enough about that",
    "start": "3382280",
    "end": "3389599"
  },
  {
    "text": "then you could help because this is open source right but High charts there's a is free for non-commercial use so um or",
    "start": "3389599",
    "end": "3397200"
  },
  {
    "text": "it's actually fairly cheap it doesn't cost much to buy a license for it you may already have one because it's a nice",
    "start": "3397200",
    "end": "3402680"
  },
  {
    "text": "P graphing package so that's the next thing um you also want to build um you want to",
    "start": "3402680",
    "end": "3411319"
  },
  {
    "text": "automate your build pipeline so on GitHub there's this nice tool",
    "start": "3411319",
    "end": "3417200"
  },
  {
    "text": "called cloudbees it's a service which is Jenkins as a service so it's a it's a build automation system as a service one",
    "start": "3417200",
    "end": "3424000"
  },
  {
    "text": "of the nice things about cloudbees is that any open- source project they would build it for free normally you have to",
    "start": "3424000",
    "end": "3429200"
  },
  {
    "text": "pay them and have an account but if you have an open source account on GitHub you can configure cloudbees to just do",
    "start": "3429200",
    "end": "3436000"
  },
  {
    "text": "builds for you so whenever you contribute code or whenever you do anything on your open source project",
    "start": "3436000",
    "end": "3441119"
  },
  {
    "text": "cloudbees will just all the builds for you and yeah they generate your code and you can then go and stick it in um an",
    "start": "3441119",
    "end": "3447240"
  },
  {
    "text": "Ami so unless you want to run your own Jenkins server cloudbees is probably a good place to run one as as",
    "start": "3447240",
    "end": "3452720"
  },
  {
    "text": "any so once you've done the build with with Jenkins you've got you know a bunch",
    "start": "3452720",
    "end": "3457920"
  },
  {
    "text": "of um bunch of code that you want to deploy um use a bakery for that so this",
    "start": "3457920",
    "end": "3464960"
  },
  {
    "text": "is conceptually similar to what Docker does you've got a base image um there's",
    "start": "3464960",
    "end": "3470720"
  },
  {
    "text": "a base Ami which is basically a a build of a of a Linux machine um this will",
    "start": "3470720",
    "end": "3476799"
  },
  {
    "text": "actually work for other things but then you do a snapshot on it and you build a volume and then you take the code then",
    "start": "3476799",
    "end": "3484000"
  },
  {
    "text": "you put it on from the package um and you build all these bits and pieces together and it basically it mounts it",
    "start": "3484000",
    "end": "3490359"
  },
  {
    "text": "it choots to it it does all of the installations or the RPMs or whatever you've got and and then it uh basically",
    "start": "3490359",
    "end": "3497400"
  },
  {
    "text": "snapshots and turns that into an Ami with some API calls to AWS so what comes",
    "start": "3497400",
    "end": "3502720"
  },
  {
    "text": "out of it is an application Ami that includes all your your code pre-baked in",
    "start": "3502720",
    "end": "3507880"
  },
  {
    "text": "now the nice thing with Docker is you can actually see the layers and after you've built it it sort of it's like a series of translucent layers that has",
    "start": "3507880",
    "end": "3514559"
  },
  {
    "text": "metadata this is all built in but you know you can go look at the base so think of it as a prototype for what",
    "start": "3514559",
    "end": "3520880"
  },
  {
    "text": "ended up as being Docker now uh Eureka is the service",
    "start": "3520880",
    "end": "3526240"
  },
  {
    "text": "registry so here's an entry in it you've got a name of the of the service you've got a few instances running it different",
    "start": "3526240",
    "end": "3533079"
  },
  {
    "text": "versions of it uh of that in different places some of them in Us East some of in Us East two different zones in Us",
    "start": "3533079",
    "end": "3539359"
  },
  {
    "text": "East and it tells you that all four of them are up and gives you clickable links you can go look at them so",
    "start": "3539359",
    "end": "3545799"
  },
  {
    "text": "basically the idea here is that you you ask for services by name and it says well these are all the ones I can find",
    "start": "3545799",
    "end": "3552359"
  },
  {
    "text": "and they're all in these locations and the key thing here is that you've got it tells you what the Ami is so you know",
    "start": "3552359",
    "end": "3558640"
  },
  {
    "text": "what version it is what instance it is what zone it's in so you can do Zone aware routing you can go to the one",
    "start": "3558640",
    "end": "3563839"
  },
  {
    "text": "that's in the same Zone that you're in because that's lower latency and a little more highly available it also",
    "start": "3563839",
    "end": "3570039"
  },
  {
    "text": "gives the IP address URLs and ports keeps track of the uh things like it's not just DNS it's got other things in it",
    "start": "3570039",
    "end": "3577440"
  },
  {
    "text": "like where is the health check uh where is the status URL all of those kinds of",
    "start": "3577440",
    "end": "3583520"
  },
  {
    "text": "things and it tells you this life cycle it says I'm healthy I'm unhealthy but I'm still here and I'm initializing",
    "start": "3583520",
    "end": "3590240"
  },
  {
    "text": "don't send me traffic yet I've come up I'm here but I'm not ready to take traffic so you can have Services",
    "start": "3590240",
    "end": "3595480"
  },
  {
    "text": "instances which are out of traffic uh that's also very hard to do with some other similar kinds of tools so there's",
    "start": "3595480",
    "end": "3603039"
  },
  {
    "text": "an Ami and a cloudformation template same process for launching Asgard it's trivial to set up um you want one of",
    "start": "3603039",
    "end": "3609599"
  },
  {
    "text": "these in each zone so let's look at that so here's the typical way you'd want to run this is three availability zones a c",
    "start": "3609599",
    "end": "3618280"
  },
  {
    "text": "you run a Eureka server they talk to each other to replicate their data so if an application here registers with this",
    "start": "3618280",
    "end": "3625240"
  },
  {
    "text": "Eureka server it will be discovered across all three of them right it gets copied",
    "start": "3625240",
    "end": "3630760"
  },
  {
    "text": "sideways so there's two calls there's a there's a a call that says I'm here",
    "start": "3630760",
    "end": "3636119"
  },
  {
    "text": "register and then there's renew we call renew every 30 seconds so this thing if you don't call renew it'll basically put",
    "start": "3636119",
    "end": "3642400"
  },
  {
    "text": "you in an unhealthy state so people will know not to try and call you uh and then cancel and then there's get registry so",
    "start": "3642400",
    "end": "3649240"
  },
  {
    "text": "everyone else is basically doing get registry and finding out that this application service is here so clients",
    "start": "3649240",
    "end": "3655559"
  },
  {
    "text": "and Serv are both the same really but the in terms of Eureka but this one here",
    "start": "3655559",
    "end": "3660760"
  },
  {
    "text": "did get registry discovered this service here and can call it yeah so that's basically how it works hopefully that",
    "start": "3660760",
    "end": "3667640"
  },
  {
    "text": "makes some kind of sense um like I say it's you can build things like this with zookeeper or console or Etc D the",
    "start": "3667640",
    "end": "3676839"
  },
  {
    "text": "problem then is that if you get a partition let's say this this network here gets lost then you don't actually",
    "start": "3676839",
    "end": "3684039"
  },
  {
    "text": "know if this one here died or whether this one side died but if you get a partition both sides will keep running",
    "start": "3684039",
    "end": "3690440"
  },
  {
    "text": "if you're into cap theorem this is a AP system it's it's available when it's",
    "start": "3690440",
    "end": "3695680"
  },
  {
    "text": "partitioned and since the services that are in here are mostly just registering with their local system and the most of",
    "start": "3695680",
    "end": "3701520"
  },
  {
    "text": "the calls happen within a Zone it actually keeps working quite nicely because you only really need consistency",
    "start": "3701520",
    "end": "3708119"
  },
  {
    "text": "within a region within a Zone um and eventually if the partition mends it",
    "start": "3708119",
    "end": "3713279"
  },
  {
    "text": "will send traffic back and forth and get itself back in sync if you delete all three of these machines and Chaos monkey",
    "start": "3713279",
    "end": "3720000"
  },
  {
    "text": "does kill individual ones and to test it sometimes you kill all three everything keeps working there's a cache copy of",
    "start": "3720000",
    "end": "3726680"
  },
  {
    "text": "all the data in all the apps and it doesn't throw it away because you learned not to do that after you've had",
    "start": "3726680",
    "end": "3733039"
  },
  {
    "text": "one outage um and then when you fire these back up again they don't populate",
    "start": "3733039",
    "end": "3738640"
  },
  {
    "text": "the world with an empty registry because that happened that calls another outage",
    "start": "3738640",
    "end": "3744119"
  },
  {
    "text": "um there's many thing and then you can lose a third of them and it basically understands that losing a",
    "start": "3744119",
    "end": "3750079"
  },
  {
    "text": "third of your instances is actually something that might happen so it's sort of okay but if you lose more than the third it goes hang on a minute something",
    "start": "3750079",
    "end": "3756440"
  },
  {
    "text": "might be broken so the code here has everything that ever bad that ever happened at Netflix has been fixed in it",
    "start": "3756440",
    "end": "3763119"
  },
  {
    "text": "it is an incredibly robust piece of software it's not terribly sort of um architecturally tidy because it's one of",
    "start": "3763119",
    "end": "3769240"
  },
  {
    "text": "the first things we wrote but it's uh very robust",
    "start": "3769240",
    "end": "3775480"
  },
  {
    "text": "um okay I was talking about that blackbox Eder service so Eder is a think of it as a timestamp Delta cache you've",
    "start": "3776000",
    "end": "3783160"
  },
  {
    "text": "got AWS and every entity on AWS you can say give me a list of all the instances",
    "start": "3783160",
    "end": "3788240"
  },
  {
    "text": "give me a list of all of the N you whatever the things are and then you can get a describe call against all of them",
    "start": "3788240",
    "end": "3794720"
  },
  {
    "text": "and you get back a big Json object that describes that thing right so what Eda",
    "start": "3794720",
    "end": "3800119"
  },
  {
    "text": "does is it walks you know just walks these things continuously sort of scraping your Amazon account or fairly",
    "start": "3800119",
    "end": "3806480"
  },
  {
    "text": "you know standard rate and every time it gets one of these Json objects it looks",
    "start": "3806480",
    "end": "3813200"
  },
  {
    "text": "in its database to see if it already had it if it had it already and it matches then it does nothing if it's different",
    "start": "3813200",
    "end": "3820880"
  },
  {
    "text": "then it stores the new data in the database with a time stamp and the old data is still there with a different",
    "start": "3820880",
    "end": "3826160"
  },
  {
    "text": "time stamp so now you've just got this Delta cache of every Json object that ever came back that describes your Cloud",
    "start": "3826160",
    "end": "3833640"
  },
  {
    "text": "it just harvests the whole thing it doesn't get too big this is just Json there there's two versions of this two",
    "start": "3833640",
    "end": "3839799"
  },
  {
    "text": "implementations one uses mongodb which is reasonably well compressed the other one used is elastic search um I forget",
    "start": "3839799",
    "end": "3846960"
  },
  {
    "text": "which one whether the elastic search one was developed later and I'm not sure if it's got updated in the thing but you",
    "start": "3846960",
    "end": "3853400"
  },
  {
    "text": "both options are there um so that's the Amazon information but",
    "start": "3853400",
    "end": "3859599"
  },
  {
    "text": "then you've got Eureka with all this information about these are the versions of the services that I'm running and all their metadata well that's a Json object",
    "start": "3859599",
    "end": "3866839"
  },
  {
    "text": "too so Eda pulls from Eureka the complete set of what's there and when it",
    "start": "3866839",
    "end": "3873359"
  },
  {
    "text": "changes it does the same thing so now you don't just have a black box for what Amazon did you have a black box for",
    "start": "3873359",
    "end": "3878799"
  },
  {
    "text": "everything your application did and at any point in time you can say which version of everything what was the state",
    "start": "3878799",
    "end": "3884079"
  },
  {
    "text": "of the universe at any point in time going back to when you started Eda and",
    "start": "3884079",
    "end": "3889279"
  },
  {
    "text": "yeah it's amazing how useful that is and if you ever play around if youever if you get used to it and then it's not",
    "start": "3889279",
    "end": "3895000"
  },
  {
    "text": "there you go is insane you know why wouldn't you know that you can also feed your own custom state in it you if",
    "start": "3895000",
    "end": "3900920"
  },
  {
    "text": "you've got other services or other Frameworks that you want to monitor that have similar kinds of characteristics",
    "start": "3900920",
    "end": "3906680"
  },
  {
    "text": "you can go out and suck data from them like if you're running on on say eucalyptus or open stack in your own",
    "start": "3906680",
    "end": "3912200"
  },
  {
    "text": "data center you can actually pull the state of the underlying eucalyptus services or openstack services that are",
    "start": "3912200",
    "end": "3919680"
  },
  {
    "text": "under the hood you know the physical hardware and the state of the actual switches and you know machines that you",
    "start": "3919680",
    "end": "3924880"
  },
  {
    "text": "wouldn't normally be able to see on AWS and you can suck that in and now you can actually see start correlating this",
    "start": "3924880",
    "end": "3931039"
  },
  {
    "text": "switch failed which took out these networks which caused this partition so whenever you're in an incident review",
    "start": "3931039",
    "end": "3936720"
  },
  {
    "text": "you know the week after something went wrong and somebody says what was the IP address of that machine again you don't",
    "start": "3936720",
    "end": "3942119"
  },
  {
    "text": "know because it changed right it's not there anymore so this is what the query syntax looks like the monkeys all talk",
    "start": "3942119",
    "end": "3949000"
  },
  {
    "text": "to this but uh you can generate it yourself it's just a rest API so this",
    "start": "3949000",
    "end": "3954079"
  },
  {
    "text": "says this is an IP address since the dawn of time get me them and this says",
    "start": "3954079",
    "end": "3960200"
  },
  {
    "text": "these are the three instances that have ever had that IP address right very simple and here's one saying I want the",
    "start": "3960200",
    "end": "3966760"
  },
  {
    "text": "to difference limit two of this Security Group so this says there's two Security",
    "start": "3966760",
    "end": "3971799"
  },
  {
    "text": "Group versions here at two different times and this is the a difference of the um Json right in this case you can",
    "start": "3971799",
    "end": "3979720"
  },
  {
    "text": "see it changeed from 103 to 104 A Plus and a minus here right so very powerful",
    "start": "3979720",
    "end": "3986240"
  },
  {
    "text": "so what the um security monkey is doing is queries like this looking for",
    "start": "3986240",
    "end": "3991279"
  },
  {
    "text": "anything changed and then no defying you that there's a SL Zer or something bad in there um and what uh anyway it's it's",
    "start": "3991279",
    "end": "4001640"
  },
  {
    "text": "incredibly useful and it's not again it's a standalone project it's written in Scala it has no other dependencies",
    "start": "4001640",
    "end": "4008480"
  },
  {
    "text": "across the Netflix tool so you can fire it up without using the rest of the architecture so if you're running AWS",
    "start": "4008480",
    "end": "4013880"
  },
  {
    "text": "there's no reason not to have that um AWS themselves have a logging capability",
    "start": "4013880",
    "end": "4019160"
  },
  {
    "text": "for the apis that are used to configure it and you can actually get an archive now but they only added this I think",
    "start": "4019160",
    "end": "4025319"
  },
  {
    "text": "within the last year that you can actually get a complete Archive of the state of AWS but that doesn't give you a",
    "start": "4025319",
    "end": "4032000"
  },
  {
    "text": "state of your application and it's not all correlated and it has about a 5 minute 10 minute delay um so this is a",
    "start": "4032000",
    "end": "4038680"
  },
  {
    "text": "little bit more up to date okay properties um you want to set",
    "start": "4038680",
    "end": "4044640"
  },
  {
    "text": "a a fast property to turn on a feature um you want to do it or or set a URL",
    "start": "4044640",
    "end": "4050680"
  },
  {
    "text": "let's say you want to use S3 buckets for one for an application you want to set it up so in Europe it uses buckets that",
    "start": "4050680",
    "end": "4056559"
  },
  {
    "text": "are in Europe and you have a different S3 path in the US so you want that to resolve to the US codes the same",
    "start": "4056559",
    "end": "4062400"
  },
  {
    "text": "everything else about the app's the same same Ami right but you want to have them behave differently in different regions",
    "start": "4062400",
    "end": "4068880"
  },
  {
    "text": "so you've got over you've got overrides here so this changed and then it's got this nice impact view it's impacts two",
    "start": "4068880",
    "end": "4074960"
  },
  {
    "text": "instances and it's got this Zone and this app and it changes this value to",
    "start": "4074960",
    "end": "4080200"
  },
  {
    "text": "something or other we're creating a new Fast property here and you can select it and skip it",
    "start": "4080200",
    "end": "4085760"
  },
  {
    "text": "anyway exactly what the property is um it's a stack of configurations",
    "start": "4085760",
    "end": "4091640"
  },
  {
    "text": "you've got your container configuration your library configurations your application properties your persisted",
    "start": "4091640",
    "end": "4099040"
  },
  {
    "text": "database and then the runtime configuration and they all hook into here uh there's a little database behind",
    "start": "4099040",
    "end": "4105040"
  },
  {
    "text": "this that use Simple DB or Dynamo DB um and to do multi- region with very high",
    "start": "4105040",
    "end": "4110640"
  },
  {
    "text": "availability Netflix uses a Cassandra based version of that but multi- Regent Cassandra is a bit more than most people",
    "start": "4110640",
    "end": "4116920"
  },
  {
    "text": "need okay um data storage so RDS that works",
    "start": "4116920",
    "end": "4124238"
  },
  {
    "text": "fine Asgard you just push the buttons you get a cluster it's very easy Dynamo DB I don't think we don't actually have",
    "start": "4124239",
    "end": "4129920"
  },
  {
    "text": "support for that but it gives you a nice scalable way to get started with a with a database in the cloud and then Cassandra lets you go beyond that it",
    "start": "4129920",
    "end": "4136560"
  },
  {
    "text": "lets you run your own services and give you something a bit like Dynamo DB but with very large scale and with multi-",
    "start": "4136560",
    "end": "4143040"
  },
  {
    "text": "region support it's very important for particularly for large scale distributed systems um the storage model for",
    "start": "4143040",
    "end": "4150000"
  },
  {
    "text": "Cassandra um has immutable backups in it so basically whenever Cassandra writes",
    "start": "4150000",
    "end": "4155080"
  },
  {
    "text": "to dis it always writes a very large immutable file sequentially which is great for solid state discs you know",
    "start": "4155080",
    "end": "4160960"
  },
  {
    "text": "always run Cassandra on solid state discs don't even think about running it on boring bits of spinning rust you'll",
    "start": "4160960",
    "end": "4166440"
  },
  {
    "text": "be much happier that way just about everybody that ever had a bad experience with Cassandra was trying to make it run",
    "start": "4166440",
    "end": "4171480"
  },
  {
    "text": "on spinning rust it's just not worth it all the happy people are running on SSD um because it's doing large",
    "start": "4171480",
    "end": "4179278"
  },
  {
    "text": "immutable rights you can pick them up and copy them to S3 and do your backups and that's buil PRI does that for you so",
    "start": "4179279",
    "end": "4187040"
  },
  {
    "text": "here's prum it runs alongside Cassandra it starts it up um it's fully",
    "start": "4187040",
    "end": "4192920"
  },
  {
    "text": "distributed it uses the data store underneath simple DB or whatever to coordinate itself so that everybody",
    "start": "4192920",
    "end": "4198440"
  },
  {
    "text": "claims a different key token so if you start a collection of of nodes they will form themselves into a Cassandra cluster",
    "start": "4198440",
    "end": "4205159"
  },
  {
    "text": "by claiming all the right tokens to do that uh it's completely automated um S3",
    "start": "4205159",
    "end": "4211719"
  },
  {
    "text": "for backups and recovery so you can tell PRI I want to restore this Cassandra to a point in time and it will go and pull",
    "start": "4211719",
    "end": "4218360"
  },
  {
    "text": "in all of the S3 data all the archive files from S3 up to that point in time and get you as close as it can",
    "start": "4218360",
    "end": "4226120"
  },
  {
    "text": "um it gives you uh a rest interface to prium that actually is hooked up to the underlying metrics within Cassandra so",
    "start": "4226120",
    "end": "4232960"
  },
  {
    "text": "it gives you a way to collect those that's a bit cleaner all right client",
    "start": "4232960",
    "end": "4240800"
  },
  {
    "text": "from ason X client so this is a very efficient uh nice client for using Java",
    "start": "4240800",
    "end": "4246239"
  },
  {
    "text": "for accessing Cassandra from java rather than the sort of slicing and dicing text strings you know select blah blah blah",
    "start": "4246239",
    "end": "4252760"
  },
  {
    "text": "kind of stuff um it B basically uses a fluent API natively to generate it so",
    "start": "4252760",
    "end": "4258320"
  },
  {
    "text": "it's very efficient there's no text handling there's no messing about with converting things to and from and",
    "start": "4258320",
    "end": "4263760"
  },
  {
    "text": "slicing and dicing so it's very clean API uh it's a little bit like you know if you've used Apache spark or something",
    "start": "4263760",
    "end": "4269960"
  },
  {
    "text": "like that this got this API we just keep adding thing dot thing dot thing dot thing um it's got nice retries it's",
    "start": "4269960",
    "end": "4276480"
  },
  {
    "text": "token aware um as was in the talk earlier about react Rea you just when you make a request you call you make the",
    "start": "4276480",
    "end": "4282480"
  },
  {
    "text": "request to an arbitrary node in the cluster and it's us the wrong one and then it has to go sideways to find the",
    "start": "4282480",
    "end": "4287719"
  },
  {
    "text": "actual data so there's two hops to get data once once your cluster gets any size at all you're very unlikely to",
    "start": "4287719",
    "end": "4294640"
  },
  {
    "text": "guess correctly um this is a client that's token aware it knows the it knows the topology of the ring and so it knows",
    "start": "4294640",
    "end": "4302400"
  },
  {
    "text": "exactly when you're making a request exactly which node to go to and it'll go directly there so it's a single hop and",
    "start": "4302400",
    "end": "4307960"
  },
  {
    "text": "that saves a network yeah you've only one one network Transit instead of two it's also aware of the cluster so it",
    "start": "4307960",
    "end": "4315239"
  },
  {
    "text": "it'll call the node that's in the same Zone as you so it's lower latency usually sub millisecond to make a call",
    "start": "4315239",
    "end": "4321840"
  },
  {
    "text": "within Zone usually a handful of milliseconds to go cross Zone and it's got all these",
    "start": "4321840",
    "end": "4327280"
  },
  {
    "text": "recipes this is uh some of the recipes so if you wanted to do a distributed row",
    "start": "4327280",
    "end": "4332560"
  },
  {
    "text": "lock or multi- region lock or have a uniqueness constraint or this one's actually one of the best ones chunked in",
    "start": "4332560",
    "end": "4338639"
  },
  {
    "text": "multi-threaded large file storage if you go to a big distributed cluster or database and say I want to write a",
    "start": "4338639",
    "end": "4344800"
  },
  {
    "text": "gigaby of data to it most of them will fall over because when you try and write a gigabyte it times out because you",
    "start": "4344800",
    "end": "4350159"
  },
  {
    "text": "can't write that much data in any reasonable amount of time and whichever machine you actually hit will blow up",
    "start": "4350159",
    "end": "4356000"
  },
  {
    "text": "because it runs out of RAM and when you try and read it back you'll have the same problem what this does is it takes",
    "start": "4356000",
    "end": "4361239"
  },
  {
    "text": "it chunks it into usually 256 kilobyte chunks or whatever the the nice chunk",
    "start": "4361239",
    "end": "4366520"
  },
  {
    "text": "size is and sprinkles them over the entire ring so it's an it it'll take an",
    "start": "4366520",
    "end": "4372000"
  },
  {
    "text": "arbitrary large file and completely evenly spread it and then multi-thread all the reads and wres so it writes in",
    "start": "4372000",
    "end": "4377760"
  },
  {
    "text": "parallel to as many nodes as you have and you can if you want to write a bigger file or you want to write bigger",
    "start": "4377760",
    "end": "4383920"
  },
  {
    "text": "and bigger things quicker and quicker you just make your ring bigger put more the big the more Cassandra nodes in the",
    "start": "4383920",
    "end": "4389400"
  },
  {
    "text": "cluster the bigger thing you can write and the more faster you can write it just well it just happens faster very",
    "start": "4389400",
    "end": "4396120"
  },
  {
    "text": "nice tool very nice thing it's so S3 has an option to do something similar um you know if you ever need to store big",
    "start": "4396120",
    "end": "4402000"
  },
  {
    "text": "things in S3 the reverse index searches is uh is sort of a tricky thing and then",
    "start": "4402000",
    "end": "4408159"
  },
  {
    "text": "there's a high cardinality reverse index as well they're kind of getting around some of the problems that you have when",
    "start": "4408159",
    "end": "4413639"
  },
  {
    "text": "you've got a distributed data store and then the all rows query and message cue it's just like there are naive ways of",
    "start": "4413639",
    "end": "4419800"
  },
  {
    "text": "doing this which tend to blow up and make people really unhappy and um we had",
    "start": "4419800",
    "end": "4424960"
  },
  {
    "text": "enough developers trying to do these problems over and over again to just okay let's make a pattern no don't do it",
    "start": "4424960",
    "end": "4430840"
  },
  {
    "text": "that way here's the standard way of doing it and it's very easy that way",
    "start": "4430840",
    "end": "4435920"
  },
  {
    "text": "okay so um evach this is mcash D so there's a bunch of mcash D's and you've",
    "start": "4435920",
    "end": "4442800"
  },
  {
    "text": "got a client and the client wants to write some data so instead of writing to",
    "start": "4442800",
    "end": "4447960"
  },
  {
    "text": "one MCD it writes to three because you want one in each Zone and then when",
    "start": "4447960",
    "end": "4453120"
  },
  {
    "text": "another client wants to come in and read it sees the new data so if you've got something that's like a session cache",
    "start": "4453120",
    "end": "4458920"
  },
  {
    "text": "you got a series of web requests that form a session for a customer and you want to remember something for a few minutes you use this pattern so you",
    "start": "4458920",
    "end": "4466360"
  },
  {
    "text": "store it in your mcache and then it it comes back in the others um it's doesn't",
    "start": "4466360",
    "end": "4472080"
  },
  {
    "text": "guarantee that all the rights complete like I said it's The Eccentric volatile cache and it's ephemeral um",
    "start": "4472080",
    "end": "4479679"
  },
  {
    "text": "and yeah but it works really well and it ties into Eureka to find and locate everything and then it'll actually you",
    "start": "4479679",
    "end": "4485719"
  },
  {
    "text": "can have multiple mem caches in each Zone as well so it'll scale up Netflix has some ridiculous amount of some huge",
    "start": "4485719",
    "end": "4492480"
  },
  {
    "text": "number of terabytes of MCD running all right so we need to Route customers",
    "start": "4492480",
    "end": "4498120"
  },
  {
    "text": "to code so remember I said at the beginning you were going to have an architecture that looks like this here's where your Cassandras with prium here's",
    "start": "4498120",
    "end": "4504719"
  },
  {
    "text": "all your microservices these are the Amazon Regional load balancers the elbs but your customers this is is east coast",
    "start": "4504719",
    "end": "4511560"
  },
  {
    "text": "this is West Coast us You' got to connect them so you have route DNS to",
    "start": "4511560",
    "end": "4517840"
  },
  {
    "text": "Route them and you got three different options within this environment and denominator is the library that uh gives",
    "start": "4517840",
    "end": "4525639"
  },
  {
    "text": "you a single API which can talk to any of these and you can actually switch",
    "start": "4525639",
    "end": "4531199"
  },
  {
    "text": "back and forth between them quite cleanly and they'll have these have ridiculously Bad apis Route 53 is quite",
    "start": "4531199",
    "end": "4537159"
  },
  {
    "text": "nice this one is soap or xmlrpc that's your two",
    "start": "4537159",
    "end": "4542639"
  },
  {
    "text": "choices this one is rest and it's worse than this this is the worst rest",
    "start": "4542639",
    "end": "4547760"
  },
  {
    "text": "interface ever anyone has ever encountered there was a series of there was an email from Adrian Cole that wrote",
    "start": "4547760",
    "end": "4553679"
  },
  {
    "text": "this and he was listing what had to go through to get this thing to produce something and the last step was pull the",
    "start": "4553679",
    "end": "4559199"
  },
  {
    "text": "forks back out of your eyes it was just that bad uh won't go",
    "start": "4559199",
    "end": "4564360"
  },
  {
    "text": "into it anymore but we can have a long rant about bad DNS apis if you want um so if something goes wrong oh oh the",
    "start": "4564360",
    "end": "4571920"
  },
  {
    "text": "other thing we have is zul the API router so behind these load balances is a layer of API proxies they have a",
    "start": "4571920",
    "end": "4580120"
  },
  {
    "text": "tunnel which connects across here so if some traffic lands in this region and you go like you know what that customer",
    "start": "4580120",
    "end": "4587560"
  },
  {
    "text": "we just saw them in this region and for some reason we really just you know maybe they flew out to California but",
    "start": "4587560",
    "end": "4593920"
  },
  {
    "text": "they're usually in the east coast just to kind of keep them consistent because the guy's wife is or you know spouse is",
    "start": "4593920",
    "end": "4599320"
  },
  {
    "text": "still here playing Netflix and they're playing Netflix and they want to keep the account roughly a little bit more",
    "start": "4599320",
    "end": "4604800"
  },
  {
    "text": "coherent they're going to Route them through this pipe and just a few people so if people that are misrouted you just",
    "start": "4604800",
    "end": "4610960"
  },
  {
    "text": "route them back and forth so the Z pipe here can actually call instance over here and vice versa but none of the",
    "start": "4610960",
    "end": "4617520"
  },
  {
    "text": "instances here can see any of the instances here so there's no other direct calls going on so you've got one",
    "start": "4617520",
    "end": "4623040"
  },
  {
    "text": "layer at the top that can route requests back and forth and you've got a layer underneath that moves data back and",
    "start": "4623040",
    "end": "4628679"
  },
  {
    "text": "forth and it's an incredibly clean architecture this is very very scalable very clean very architecturally nice um",
    "start": "4628679",
    "end": "4637159"
  },
  {
    "text": "and we had a lot of arguments about how this would work but in the end this this this did work well so if something goes",
    "start": "4637159",
    "end": "4642440"
  },
  {
    "text": "wrong let's say Amazon decides that they shutting down a whole Zone because a aircraft landed on it or a hurricane hit",
    "start": "4642440",
    "end": "4649199"
  },
  {
    "text": "it or something or you know generator blew up um the system just keeps working",
    "start": "4649199",
    "end": "4654320"
  },
  {
    "text": "that's basically a no up right there will be no errors anywhere there might be sort of 20 or 30 seconds of a few",
    "start": "4654320",
    "end": "4661360"
  },
  {
    "text": "timeouts here where customers retry over to here and that's it it's designed to",
    "start": "4661360",
    "end": "4666719"
  },
  {
    "text": "do that in fact there's a chaos gorilla at Netflix who takes out a whole Zone",
    "start": "4666719",
    "end": "4672800"
  },
  {
    "text": "because bigger than a monkey monkeys take out an instant a gorilla takes out a whole Zone um and they run it once a",
    "start": "4672800",
    "end": "4678360"
  },
  {
    "text": "quarter in production and it uses a random python random call to choose",
    "start": "4678360",
    "end": "4683600"
  },
  {
    "text": "which zone is going to kill every time they run it so they don't know in advance which of the three is going to",
    "start": "4683600",
    "end": "4688760"
  },
  {
    "text": "be killed they just they they get everyone in a room when they're about to do it right but they but it picks one at",
    "start": "4688760",
    "end": "4693880"
  },
  {
    "text": "random and every now and again it finds something that's sck in so if you lose a whole whole region though it's kind of a",
    "start": "4693880",
    "end": "4701159"
  },
  {
    "text": "bit more difficult so half the customers are still completely happy because they're they're routed this way so what",
    "start": "4701159",
    "end": "4707400"
  },
  {
    "text": "you want to do is shut down this load balancer and send all the traffic this way and that's a relatively manual",
    "start": "4707400",
    "end": "4714239"
  },
  {
    "text": "operation so there's chaos Kong right really really big gorilla King Kong uh",
    "start": "4714239",
    "end": "4721080"
  },
  {
    "text": "that does this too and they they've actually run chaos Kong they do a they do actually a planned thing where they",
    "start": "4721080",
    "end": "4726280"
  },
  {
    "text": "just route everything over to here and run the entire of Netflix out of one zone out of East and then they run it",
    "start": "4726280",
    "end": "4732120"
  },
  {
    "text": "all out of West so it's normally running 50/50 but every now and again they prove that they can switch all the traffic",
    "start": "4732120",
    "end": "4737679"
  },
  {
    "text": "over they do it in a more controlled fashion they don't actually kill everything um and if you lose a DNS vendor let's",
    "start": "4737679",
    "end": "4746080"
  },
  {
    "text": "say Ultra DNS blew up one day and it was being used for something you can just switch to one of the other vendors all",
    "start": "4746080",
    "end": "4751920"
  },
  {
    "text": "of the data these apis are so bad that you can't actually read back what you wrote right it should be a basic",
    "start": "4751920",
    "end": "4758800"
  },
  {
    "text": "property of an API is the ability to if you put data in you should be able to get get it back that don't work like",
    "start": "4758800",
    "end": "4764400"
  },
  {
    "text": "that so um denominator maintains uh a complete set of State outside the apis",
    "start": "4764400",
    "end": "4769880"
  },
  {
    "text": "which it can apply to any vendor so you can actually take the state that denominator is managing and push it into",
    "start": "4769880",
    "end": "4775840"
  },
  {
    "text": "a different uh different DNS vendor and make it work so one of the reasons for going",
    "start": "4775840",
    "end": "4781679"
  },
  {
    "text": "with these two vendors is that they had a feature that Route 53 did not have which is the ability to Route traffic by",
    "start": "4781679",
    "end": "4788239"
  },
  {
    "text": "state geographically so about three or four months ago Route 53 added that",
    "start": "4788239",
    "end": "4793400"
  },
  {
    "text": "feature I now see no reason to use these vendors whatsoever really we spent six",
    "start": "4793400",
    "end": "4799000"
  },
  {
    "text": "months filing bugs against these two and this stuff just worked I think you know Amazon Route 53 is probably just going",
    "start": "4799000",
    "end": "4805080"
  },
  {
    "text": "to clean up the DNS world as far as I can see actually works you can automate against it so all of this you know large",
    "start": "4805080",
    "end": "4811600"
  },
  {
    "text": "scale distribut systems automation you'd like to do actually works reliably it's amazing but it's amazing how bad the",
    "start": "4811600",
    "end": "4818120"
  },
  {
    "text": "others are actually rather than how good rape 53 is it just finally caught up with all the features that we needed and",
    "start": "4818120",
    "end": "4824760"
  },
  {
    "text": "anyway so the zul layer um this is what it looks like you've got a HTTP request",
    "start": "4824760",
    "end": "4830400"
  },
  {
    "text": "coming in there's all zul serlet there's a filter Runner then there's a bunch of groovy filters you know groovy language",
    "start": "4830400",
    "end": "4836520"
  },
  {
    "text": "so these are little functional groovy plugins that just do one step and it's a completely functional environment you just stack together these little plugins",
    "start": "4836520",
    "end": "4844159"
  },
  {
    "text": "the filters that's the pre- routing filters that you can use to transform your your URLs or whatever you feel like",
    "start": "4844159",
    "end": "4851480"
  },
  {
    "text": "uh you can do security in here like you can do your o authentic or whatever you feel like check your cookies are good",
    "start": "4851480",
    "end": "4858040"
  },
  {
    "text": "look up the incoming IP address uh do a Doss attack filtering for somebody",
    "start": "4858040",
    "end": "4863480"
  },
  {
    "text": "that's scraping your site that's what you can put here then there's a routing filter which could actually decide not",
    "start": "4863480",
    "end": "4869280"
  },
  {
    "text": "to Route anything or it can route it to whichever layer you want behind so based on what type of request it is it can",
    "start": "4869280",
    "end": "4874639"
  },
  {
    "text": "pick which service to send it to and then on the way back once you get a request coming back it can be post",
    "start": "4874639",
    "end": "4880679"
  },
  {
    "text": "routing so it can be filtered on the way out so this is a this is a response and you can rewrite the response to look the",
    "start": "4880679",
    "end": "4887360"
  },
  {
    "text": "way that this way the outside wants it to look these are all dynamically",
    "start": "4887360",
    "end": "4892560"
  },
  {
    "text": "loadable so it's a filter publisher persistence poll it takes about 30 seconds to update these groovy filters",
    "start": "4892560",
    "end": "4898880"
  },
  {
    "text": "and it's all completely programmable and uh there's quite sophisticated um",
    "start": "4898880",
    "end": "4904199"
  },
  {
    "text": "Tooling in there this is a reasonably efficient system it's in use it's it's in front of everything else and one of",
    "start": "4904199",
    "end": "4911000"
  },
  {
    "text": "the things that Netflix had was that the web server part of Netflix kept getting bigger and bigger and fatter and after a few years it just had too much stuff in",
    "start": "4911000",
    "end": "4917639"
  },
  {
    "text": "it but it has a single entry point that everyone expects to see so what they did was they put this in front of the entry",
    "start": "4917639",
    "end": "4923880"
  },
  {
    "text": "in front of it so what you're actually talking to now is the proxy and behind that proxy it actually routes different",
    "start": "4923880",
    "end": "4930320"
  },
  {
    "text": "pieces of the website to different underlying Services we've able to start breaking up that web server in a",
    "start": "4930320",
    "end": "4936360"
  },
  {
    "text": "horizontal way so that there's a server now for a different page in in the website right but it still looks like",
    "start": "4936360",
    "end": "4942400"
  },
  {
    "text": "one integrated uh front end cuz you're still hitting that front end this service is not restarted very often it's",
    "start": "4942400",
    "end": "4949120"
  },
  {
    "text": "a very long-term persistent service and it sits just behind the Amazon elb um",
    "start": "4949120",
    "end": "4954639"
  },
  {
    "text": "and then all of the dynamic traffic is behind it right make sense any questions on that",
    "start": "4954639",
    "end": "4963719"
  },
  {
    "text": "well um I don't know actually um we did have some we had a prototype in Eder of",
    "start": "4975159",
    "end": "4982600"
  },
  {
    "text": "some that was collecting the routing information through the site there the separate systems that are actually",
    "start": "4982600",
    "end": "4988159"
  },
  {
    "text": "collecting all the routes that are going through um but I think Eder you'd fill",
    "start": "4988159",
    "end": "4993760"
  },
  {
    "text": "it up too quickly because the individual routes change too much it become the the logging data for tracking",
    "start": "4993760",
    "end": "5001080"
  },
  {
    "text": "routes just fills up a big hi data store and whereas Eder is more slowly changing",
    "start": "5001080",
    "end": "5008719"
  },
  {
    "text": "stuff generally about the state of the system so it's more think of Eder as the sort of the dynamically changing",
    "start": "5008719",
    "end": "5015120"
  },
  {
    "text": "configuration rather than the traffic flow traffic flow is a much higher level thing um we'll get to that I think so",
    "start": "5015120",
    "end": "5023199"
  },
  {
    "text": "this is the ribbon Library um you come into the front end you go to an edge",
    "start": "5023199",
    "end": "5029360"
  },
  {
    "text": "service and you want to call one of the middle tier services so you come into the the client within your code base",
    "start": "5029360",
    "end": "5035520"
  },
  {
    "text": "this is a tomcat server um you have your Ribbon client which is basically hdp client and it calls a bunch of it'll",
    "start": "5035520",
    "end": "5042639"
  },
  {
    "text": "hash it'll talk to this Zone ABC uh if it's just a regular load",
    "start": "5042639",
    "end": "5048639"
  },
  {
    "text": "balancer it's just round rining across the three machines uh and this one is coming in and it's saying this a Zone",
    "start": "5048639",
    "end": "5054159"
  },
  {
    "text": "aware so it knows whether it should be T to go Zone a or Zone B you see you can control it's got a bunch of different",
    "start": "5054159",
    "end": "5060520"
  },
  {
    "text": "options um and then you're using the Eureka service to populate the information in here about where all",
    "start": "5060520",
    "end": "5066040"
  },
  {
    "text": "these machines are okay uh this is a very boring and",
    "start": "5066040",
    "end": "5072760"
  },
  {
    "text": "slow GIF which automatically updates to show you something or other about it so I'm just going to skip this um so carry",
    "start": "5072760",
    "end": "5080040"
  },
  {
    "text": "On's the server container it's got all this life cycle Management in it it's",
    "start": "5080040",
    "end": "5085440"
  },
  {
    "text": "service registry Property Management it's got hooks for the latency monkey who latency monkey injects delays and",
    "start": "5085440",
    "end": "5091400"
  },
  {
    "text": "errors into the system to simulate errors and then it preconfigured it has a status page and a health check so",
    "start": "5091400",
    "end": "5098679"
  },
  {
    "text": "almost all of the services at Netflix started out as this and then you just add your own code in the back end to it",
    "start": "5098679",
    "end": "5104400"
  },
  {
    "text": "of it uh the status page console has all the jmx it has all of the",
    "start": "5104400",
    "end": "5111520"
  },
  {
    "text": "um all of the jars that you were built with so you can introspect the exact version of all of the code that's in the",
    "start": "5111520",
    "end": "5117320"
  },
  {
    "text": "system at runtime and that's useful and it has all the eure",
    "start": "5117320",
    "end": "5122600"
  },
  {
    "text": "information as well and the current state of all of the uh configuration variables that were set using um",
    "start": "5122600",
    "end": "5130760"
  },
  {
    "text": "pytheas and the sample one just says hello world and when you send it it just says hello right that's all it does as",
    "start": "5130760",
    "end": "5138280"
  },
  {
    "text": "usual right the biggest most complicated way to say hello a world with you know megabytes of java code all",
    "start": "5138280",
    "end": "5145719"
  },
  {
    "text": "right uh chaos monkey Simeon Army so you can use uh the chaos monkey to hit your",
    "start": "5145719",
    "end": "5152119"
  },
  {
    "text": "system there's also a janitor monkey key which works against the Eda history to",
    "start": "5152119",
    "end": "5157520"
  },
  {
    "text": "find unused Amazon entities which it then deletes and tidies up after a time delay so it's when Asgard runs it's",
    "start": "5157520",
    "end": "5164560"
  },
  {
    "text": "creating new New Order Scala groups and things like that and it tends to leave stuff behind so janit monkey sort of",
    "start": "5164560",
    "end": "5171280"
  },
  {
    "text": "works alongside that to to keep everything tidy then Conformity monkey",
    "start": "5171280",
    "end": "5176440"
  },
  {
    "text": "so remember I said that uh we have status pages and those status Pages can be discovered using Eureka and they can",
    "start": "5176440",
    "end": "5183119"
  },
  {
    "text": "be logged in Eda um Conformity monkey you can have rules so think of this like find bugs at runtime like you can put a",
    "start": "5183119",
    "end": "5189960"
  },
  {
    "text": "you can put a rule in your build system that says this version of this jar should never run should never be built with because it's know broken and then",
    "start": "5189960",
    "end": "5196880"
  },
  {
    "text": "you can add that same rule to Conformity monkey to say everyone in production who's running that needs to stop right",
    "start": "5196880",
    "end": "5202960"
  },
  {
    "text": "so you could use this if you've got a security alert you want to track who's got round to updating against the latest",
    "start": "5202960",
    "end": "5208679"
  },
  {
    "text": "blah heart bleed or whatever bash thing blug right who if you want to impose a",
    "start": "5208679",
    "end": "5214600"
  },
  {
    "text": "version level you can use this and it will just run continuously and it will send people annoying emails until they",
    "start": "5214600",
    "end": "5220560"
  },
  {
    "text": "stop running the wrong thing again right uh historics I we had someone here",
    "start": "5220560",
    "end": "5226960"
  },
  {
    "text": "that was playing around with his historics so you have lots of you have a service coming in and then it has all",
    "start": "5226960",
    "end": "5234119"
  },
  {
    "text": "these dependencies so this is a this is a service and these are all the jars it was built with and each of those has",
    "start": "5234119",
    "end": "5239560"
  },
  {
    "text": "dependencies on lots of services when a service fails it tends to block this dependency and break it and you don't",
    "start": "5239560",
    "end": "5245960"
  },
  {
    "text": "want to take out your whole system because of that so what you want to do is wrap this in a circuit breaker that",
    "start": "5245960",
    "end": "5251360"
  },
  {
    "text": "says if this dependency is broken I'm going to wrap this Library that's used to talk to it in a in a future and wrap",
    "start": "5251360",
    "end": "5258679"
  },
  {
    "text": "it in its own little threadpool and if anything goes wrong um I can just ignore it and stop calling it and it's very",
    "start": "5258679",
    "end": "5265320"
  },
  {
    "text": "unlikely to sort of take over all my threads and break everything else so it's got a nice simple State",
    "start": "5265320",
    "end": "5271880"
  },
  {
    "text": "diagram for doing that to we walk through okay it's getting late in the afternoon for this um you come in here and you go",
    "start": "5271880",
    "end": "5279320"
  },
  {
    "text": "through and if the circuit's open everything's fine and you run it and everything's happy and you come back here",
    "start": "5279320",
    "end": "5286040"
  },
  {
    "text": "and if it's broken you you basically if you're short circuiting it you just return immediately and you get a",
    "start": "5286040",
    "end": "5293000"
  },
  {
    "text": "fallback um and then there's a thing here that says you're too slow um and",
    "start": "5293000",
    "end": "5298600"
  },
  {
    "text": "you report latency errors and calculate the health and then you FL this thing so if the system is too too slow for too",
    "start": "5298600",
    "end": "5304840"
  },
  {
    "text": "long or too broken for too long it'll flip the circuit breaker like overloading a circuit electrical circuit",
    "start": "5304840",
    "end": "5310560"
  },
  {
    "text": "and then somebody has to push the switch every now and again to see if it's got better that's the basic platin",
    "start": "5310560",
    "end": "5315920"
  },
  {
    "text": "here um this is what hisy implements this is once you have hyic in your",
    "start": "5315920",
    "end": "5321239"
  },
  {
    "text": "service it exposes on an extra port a websockets interface you connect your",
    "start": "5321239",
    "end": "5326880"
  },
  {
    "text": "browser to it no other things in between and you get a window it looks like this your browser downloads some Json from it",
    "start": "5326880",
    "end": "5334480"
  },
  {
    "text": "and builds out um this whole dashboard that is changing continuously so it's a it's a websocket so it's a long lift",
    "start": "5334480",
    "end": "5340920"
  },
  {
    "text": "connection you've got Json pumping into your browser and it's continuously updating this thing it's I know what it",
    "start": "5340920",
    "end": "5346760"
  },
  {
    "text": "was built with D3 or something like that um you can see this is a large number of",
    "start": "5346760",
    "end": "5353480"
  },
  {
    "text": "uh dependencies that the API server has and the circle tells you how much traffic there is",
    "start": "5353480",
    "end": "5358960"
  },
  {
    "text": "relatively and um hav none of these fail but they go red and this stuff gets",
    "start": "5358960",
    "end": "5364679"
  },
  {
    "text": "failed and these percentages go to 99% I don't have that on this particular slide",
    "start": "5364679",
    "end": "5369960"
  },
  {
    "text": "so very nice system um hisis or",
    "start": "5369960",
    "end": "5375119"
  },
  {
    "text": "turbine puts Aggregates across multiple servers to give you an aggregated view",
    "start": "5375119",
    "end": "5380840"
  },
  {
    "text": "because if you got 100 machines or running these circuit breakers you want to get an aggregated view of them so so turbine sort of hooks it all together",
    "start": "5380840",
    "end": "5387280"
  },
  {
    "text": "for you all right these developer things Blitz for J like I mentioned better",
    "start": "5387280",
    "end": "5392760"
  },
  {
    "text": "handling of log messages it will drop messages during a storm rather than killing your logging system or killing your service which blog for J will",
    "start": "5392760",
    "end": "5400000"
  },
  {
    "text": "happily do for you um again this is one of the ones where after repeated outages",
    "start": "5400000",
    "end": "5405639"
  },
  {
    "text": "at Netflix we built something that wouldn't break right it's one of those ones right it's not particularly clean",
    "start": "5405639",
    "end": "5412440"
  },
  {
    "text": "or nice it's just like we had to do this because log login kept killing the",
    "start": "5412440",
    "end": "5417960"
  },
  {
    "text": "service and then this garbage collection visualization this takes huge log files",
    "start": "5417960",
    "end": "5423239"
  },
  {
    "text": "of garbage colle ction and shows you what's going on and visualizes it um and",
    "start": "5423239",
    "end": "5430679"
  },
  {
    "text": "can't read all these things but yeah like I said there's very few people in the world that really understand garbage",
    "start": "5430679",
    "end": "5438119"
  },
  {
    "text": "collection so this is pyus this is the dashboard building tool so uses juice",
    "start": "5438320",
    "end": "5444000"
  },
  {
    "text": "and Jersey and free marker and jQuery and data tables and D3 J career UI and",
    "start": "5444000",
    "end": "5449040"
  },
  {
    "text": "bootstrap right puts that all in one big bundle so you download this and then it says there's some instructions that says",
    "start": "5449040",
    "end": "5455239"
  },
  {
    "text": "go to this bit and like edit a few lines of code in here and then you add another few lines of code in here and a few",
    "start": "5455239",
    "end": "5462159"
  },
  {
    "text": "lines of code in here and stand back and then an enormously sophisticated um display appears for you it's just it",
    "start": "5462159",
    "end": "5469400"
  },
  {
    "text": "does all of the scaffolding to build the whole thing together is done so think of this as a scaffolding that that contains",
    "start": "5469400",
    "end": "5476920"
  },
  {
    "text": "all of these entities that that is that the right way of talking about it I don't know maybe using the right wrong terminology but this is um a dashboard",
    "start": "5476920",
    "end": "5484679"
  },
  {
    "text": "we use to monitor Cassandra so these are Cassandra clusters there's a six node cluster here's a large number of nodes",
    "start": "5484679",
    "end": "5491040"
  },
  {
    "text": "cluster and uh you can't really see one here but",
    "start": "5491040",
    "end": "5496280"
  },
  {
    "text": "these if if a if a node was offline it would go a different color and you can Mouse over this to see all the",
    "start": "5496280",
    "end": "5501400"
  },
  {
    "text": "individual nodes and what's going on so we're trying to Cassandra clusters generally visualized as rings so that's",
    "start": "5501400",
    "end": "5506920"
  },
  {
    "text": "just one of the ones we built um RX Java um the best thing here",
    "start": "5506920",
    "end": "5513360"
  },
  {
    "text": "is the go back to last year's go to Aus and re watch Ben christensen's",
    "start": "5513360",
    "end": "5518960"
  },
  {
    "text": "presentation because that's much you get a whole 50 minutes of everything to do",
    "start": "5518960",
    "end": "5524000"
  },
  {
    "text": "with this um the key thing I think about RX Java is that it's simplifies",
    "start": "5524000",
    "end": "5530520"
  },
  {
    "text": "concurrency for the people trying to write the code and and this observable layer is a very nice abstraction so I",
    "start": "5530520",
    "end": "5537719"
  },
  {
    "text": "have the problem here is that you come into a service and you want to you've",
    "start": "5537719",
    "end": "5543320"
  },
  {
    "text": "got all these service I have to call 10 or 20 or 50 services to get my response and I don't know what order to call them",
    "start": "5543320",
    "end": "5549159"
  },
  {
    "text": "in and I need to do it in parallel and I could multi threadit or have call backs all that I'm just going to declare them",
    "start": "5549159",
    "end": "5554440"
  },
  {
    "text": "all to be observable and then I'm just going to map them together right and",
    "start": "5554440",
    "end": "5560159"
  },
  {
    "text": "this layer basically automatically deals with it and hides the implementation so underneath that observable anyone",
    "start": "5560159",
    "end": "5567719"
  },
  {
    "text": "dependency could be built as a cash return it could block it could use multiple threads it could be non- block",
    "start": "5567719",
    "end": "5574040"
  },
  {
    "text": "iio it can do anything it wants but you all you see is an observable and it's a very clean interface for writing you",
    "start": "5574040",
    "end": "5580639"
  },
  {
    "text": "know for assembling your know data in sort of the very nice functional programming kind of",
    "start": "5580639",
    "end": "5587678"
  },
  {
    "text": "model all right Big Data bit I guess we didn't have that many people here that care about this but if you want to if",
    "start": "5588040",
    "end": "5594400"
  },
  {
    "text": "you're running Hadoop clusters Amazon makes it trivial to start Hadoop clusters um by just calling the elastic",
    "start": "5594400",
    "end": "5601560"
  },
  {
    "text": "map reduce service and so netlix ended up with a large number of them and then needed a tool to kind of wrangle them",
    "start": "5601560",
    "end": "5608000"
  },
  {
    "text": "back into a manageable place so this is a service for managing large numbers of",
    "start": "5608000",
    "end": "5613719"
  },
  {
    "text": "Hadoop clusters that has two sides there's an admin side that you used for provisioning clusters and then there's",
    "start": "5613719",
    "end": "5620320"
  },
  {
    "text": "an end user side where you basically submit a job to the cluster and it finds a cluster that's got capacity and the",
    "start": "5620320",
    "end": "5626159"
  },
  {
    "text": "right data and goes and processes it uh if you're running lots of Hadoop",
    "start": "5626159",
    "end": "5631280"
  },
  {
    "text": "um you want to monitor the behavior of it this is a that was announced last Thursday night I think yeah because I",
    "start": "5631280",
    "end": "5638080"
  },
  {
    "text": "had to update my slides from Friday morning to include it so this is a a you",
    "start": "5638080",
    "end": "5643320"
  },
  {
    "text": "know tra What's this called uh swim Lane diagram of the different nodes in a or",
    "start": "5643320",
    "end": "5649639"
  },
  {
    "text": "tasks that are being attempted and different things happening this is a like a a plot showing all the different",
    "start": "5649639",
    "end": "5656840"
  },
  {
    "text": "behaviors in the system and you get a list of all of the jobs and you can click on a job and drill in and get all",
    "start": "5656840",
    "end": "5662560"
  },
  {
    "text": "this stuff so it's a fairly nice nice way to monitor large numbers of Hado",
    "start": "5662560",
    "end": "5667760"
  },
  {
    "text": "jobs Seer S3 updates take a while to propagate so you want to track state",
    "start": "5667760",
    "end": "5674000"
  },
  {
    "text": "this uses Dynamo DB to build an index cache of the eventual consistency of S3",
    "start": "5674000",
    "end": "5680080"
  },
  {
    "text": "uh Dynamo DB has calls which uh enforce consistency but including the delay so",
    "start": "5680080",
    "end": "5685239"
  },
  {
    "text": "you can use the consistency model of Dynamo DB to actually make sure your S3",
    "start": "5685239",
    "end": "5690560"
  },
  {
    "text": "works well and then it tracks on a Gra s how many of these uh updates are",
    "start": "5690560",
    "end": "5697600"
  },
  {
    "text": "inconsistent or delayed that's what lipstick looks like this is a visualization of a pig",
    "start": "5697600",
    "end": "5705600"
  },
  {
    "text": "pipeline um this is pig pen look some code I'm",
    "start": "5705600",
    "end": "5711360"
  },
  {
    "text": "I'm a developer conference I've had some code in here Dave Nolan isn't here to tell you what he thinks of this anyway",
    "start": "5711360",
    "end": "5717440"
  },
  {
    "text": "um so some closure code so this is map reduce this is word count which is the standard map reduce thing everyone does",
    "start": "5717440",
    "end": "5723320"
  },
  {
    "text": "and you you can do two things with this code you can run it locally in your laptop in closure to prove that your",
    "start": "5723320",
    "end": "5729480"
  },
  {
    "text": "logic is correct on a little sample program once you've got that logic correct then you compile this using pig",
    "start": "5729480",
    "end": "5737159"
  },
  {
    "text": "pen and what you get is actually a pig program which you run on a Hadoop cluster it's not actually inclosure",
    "start": "5737159",
    "end": "5743159"
  },
  {
    "text": "anymore right but it translates this closure thing that you can do rapid development and prototyping on your",
    "start": "5743159",
    "end": "5748600"
  },
  {
    "text": "laptop and get the analytics the way you want it and then you can spit that out and run it and a fully distributed large",
    "start": "5748600",
    "end": "5754880"
  },
  {
    "text": "scale uh calculation so it's quite a nice tool all right putting it all together",
    "start": "5754880",
    "end": "5761760"
  },
  {
    "text": "and then we'll wrap up this is the RSS Reader application so you have your clients they Connect into the edge",
    "start": "5761760",
    "end": "5769080"
  },
  {
    "text": "service it's built out of carryon it uses Blitz for logging it's got a Eureka client so it tells Eureka hey I'm here",
    "start": "5769080",
    "end": "5776679"
  },
  {
    "text": "um and it discovers that there's a backend service so it can call that so it uses historics to call there and it",
    "start": "5776679",
    "end": "5784000"
  },
  {
    "text": "generates logs Blitz for J generates logs so they will come in here uh carry",
    "start": "5784000",
    "end": "5789280"
  },
  {
    "text": "On's managing them there we are so this is registering itself into here and then",
    "start": "5789280",
    "end": "5794719"
  },
  {
    "text": "at the back end it has a bunch of RSS Publishers and it has a Cassandra cluster so if you have ason X client and",
    "start": "5794719",
    "end": "5801320"
  },
  {
    "text": "you have the ribbon client and then Servo to monitor metrics so it pulls",
    "start": "5801320",
    "end": "5806679"
  },
  {
    "text": "together a fair amount of the system so that's you can just Fork this",
    "start": "5806679",
    "end": "5812560"
  },
  {
    "text": "and play with it and use it as a starting point or you can use it as an RSS reader if you're really desperate uh",
    "start": "5812560",
    "end": "5818719"
  },
  {
    "text": "it has no authentication or multi-user capabilities so that's that's what you get so the next one is flux capacitor",
    "start": "5818719",
    "end": "5825920"
  },
  {
    "text": "the flux capacitor is very very complicated and doesn't really do anything because that's what real FX capacitors do um it's got all of these",
    "start": "5825920",
    "end": "5835480"
  },
  {
    "text": "different tools from Netflix plus it integrates graphite Jersey Jetty Netty",
    "start": "5835480",
    "end": "5841320"
  },
  {
    "text": "and and some Tom Cat stuff so it's a much more uh Complete because it's including there's no graphing tools in the Netflix",
    "start": "5841320",
    "end": "5847600"
  },
  {
    "text": "environment currently because the thing they built internally is too big and complicated to open source and they haven't got around to it yet um but if",
    "start": "5847600",
    "end": "5854159"
  },
  {
    "text": "you want to use graphite for graphing it's built in here this was all built by um Chris fley who used to work at",
    "start": "5854159",
    "end": "5861239"
  },
  {
    "text": "Netflix and he learned how to do all this stuff and then he left and he's been working as a consultant and bouncing around different places so he",
    "start": "5861239",
    "end": "5867880"
  },
  {
    "text": "just built this as a sort of a demo app and also to try and help himself get work so if you want to hire a Netflix",
    "start": "5867880",
    "end": "5873679"
  },
  {
    "text": "Guru Chris frle is kicking around um then IBM came by and said hey",
    "start": "5873679",
    "end": "5880239"
  },
  {
    "text": "this stuff looks interesting we want to figure out how to do Cloud native and we went",
    "start": "5880239",
    "end": "5885800"
  },
  {
    "text": "really you're RBM um and then they said yeah really really it's interesting so we had a",
    "start": "5885800",
    "end": "5891880"
  },
  {
    "text": "whole bunch of people from IBM come by and they really did figure out how to use it and they became probably the most",
    "start": "5891880",
    "end": "5897199"
  },
  {
    "text": "sophisticated user of of the Netflix OSS currently and what they've been doing",
    "start": "5897199",
    "end": "5902440"
  },
  {
    "text": "the first thing they did was they built an example app well they took an example app theyd built as a websphere demo",
    "start": "5902440",
    "end": "5907679"
  },
  {
    "text": "called acere that was just a standalone web spere app and they rebuilt it using using Netflix OSS so there's a historic",
    "start": "5907679",
    "end": "5915119"
  },
  {
    "text": "it's got like you know Asgard it's got I forget what that is that's probably Ure or Eder or something they had all the",
    "start": "5915119",
    "end": "5921760"
  },
  {
    "text": "bits and pieces running and you could go and out schedule flights on this imaginary Airline um and they won a",
    "start": "5921760",
    "end": "5928239"
  },
  {
    "text": "prize in the Netflix open source project contest because they were the best exam new example app",
    "start": "5928239",
    "end": "5934520"
  },
  {
    "text": "um and the you know there's a bunch of Engineers here um probably not sure if",
    "start": "5934520",
    "end": "5941840"
  },
  {
    "text": "it's quite public yet but the engineer that built this has apparently left IBM and not quite sure where he's turning up",
    "start": "5941840",
    "end": "5947960"
  },
  {
    "text": "but I think he's moving to the Bay Area I think we' probably just sto there I don't think he's quite admitted where he's where he's going to go anyway so",
    "start": "5947960",
    "end": "5956159"
  },
  {
    "text": "yet again open source projects work for",
    "start": "5956159",
    "end": "5960360"
  },
  {
    "text": "hiring this is the current version of the page as of last week so a few companies that are using a Netflix OSS",
    "start": "5961880",
    "end": "5969599"
  },
  {
    "text": "uh Yelp we using Asgard hotels.com are using uh Zol um suncorp are using quite",
    "start": "5969599",
    "end": "5976440"
  },
  {
    "text": "a lot of it uh there's a few companies that aren't on here Nike has been using a lot of Netflix OSS recently for the",
    "start": "5976440",
    "end": "5982800"
  },
  {
    "text": "back end to all their internet of things you people R literally running around the world generating data has to go",
    "start": "5982800",
    "end": "5988239"
  },
  {
    "text": "somewhere and they're looking at using sort of cassette the sort of cassette Netflix model for",
    "start": "5988239",
    "end": "5995080"
  },
  {
    "text": "that okay so you can use Netflix osss to scale",
    "start": "5995080",
    "end": "6002000"
  },
  {
    "text": "your startup or to reinvent your Enterprise and there was this was at the reinvent content conference so I a",
    "start": "6002000",
    "end": "6007599"
  },
  {
    "text": "little pun there um and you can add existing projects or start your own so there are a few projects around Netflix",
    "start": "6007599",
    "end": "6014360"
  },
  {
    "text": "OSS that aren't actually that were spawned up by other people now and this is what the team looks like most of them",
    "start": "6014360",
    "end": "6020960"
  },
  {
    "text": "anyway um and that's my last slide so any",
    "start": "6020960",
    "end": "6026199"
  },
  {
    "text": "questions or does any okay I've got some more stickers here so if anybody feel sufficiently inspired that they want to",
    "start": "6026199",
    "end": "6032599"
  },
  {
    "text": "take away a sticker put it on their laptop and promise to install",
    "start": "6032599",
    "end": "6038400"
  },
  {
    "text": "something that look useful",
    "start": "6038400",
    "end": "6042158"
  },
  {
    "text": "y oh you want the sticker sure which what what which which tool",
    "start": "6043719",
    "end": "6049920"
  },
  {
    "text": "will you download",
    "start": "6049920",
    "end": "6053480"
  },
  {
    "text": "which one oh the dashboard historics oh pyus yes pyus good yeah all",
    "start": "6056000",
    "end": "6064719"
  },
  {
    "text": "right anyone else any other",
    "start": "6064719",
    "end": "6069440"
  },
  {
    "text": "questions oh yeah I forgot to mention the application ISD probably just missed the",
    "start": "6073639",
    "end": "6081639"
  },
  {
    "text": "explanation rdd oh RDS",
    "start": "6081639",
    "end": "6086679"
  },
  {
    "text": "probably well RDS is the relational database service that is MySQL and you",
    "start": "6089040",
    "end": "6094599"
  },
  {
    "text": "can fire that up on AWS rdd is a graphing thing like it's for doing plots",
    "start": "6094599",
    "end": "6103480"
  },
  {
    "text": "but I didn't think I mentioned that today last question is there any",
    "start": "6103480",
    "end": "6110639"
  },
  {
    "text": "noticeable performance using",
    "start": "6110639",
    "end": "6115239"
  },
  {
    "text": "okay random questions deep data deep dive into Big",
    "start": "6121800",
    "end": "6128119"
  },
  {
    "text": "Data I shall answer questions on that yes of course there is a overhead no I don't know what the answer is I",
    "start": "6128119",
    "end": "6134880"
  },
  {
    "text": "question yeah isit our we do a lot of differents",
    "start": "6134880",
    "end": "6143679"
  },
  {
    "text": "is",
    "start": "6143679",
    "end": "6146080"
  },
  {
    "text": "is uh so if you're putting T typically there's a an instance of Asgard for each",
    "start": "6151880",
    "end": "6158480"
  },
  {
    "text": "AWS account okay right so depending on how you slice up your AWS accounts you",
    "start": "6158480",
    "end": "6165080"
  },
  {
    "text": "would have that number of Asgard you know serice because it's it's really designed to tell you everything",
    "start": "6165080",
    "end": "6171480"
  },
  {
    "text": "about an AWS account everything that's in it right and then it does have some",
    "start": "6171480",
    "end": "6176800"
  },
  {
    "text": "user authentication so you could actually control who gets into it and some things like that but that's gener",
    "start": "6176800",
    "end": "6183920"
  },
  {
    "text": "that's pretty much how it's used so Netflix spread splits concerns using account so the data science team has",
    "start": "6183920",
    "end": "6188960"
  },
  {
    "text": "their own account with her own copy of as Garden test has its own copy of Asgard production has its own copy and",
    "start": "6188960",
    "end": "6194880"
  },
  {
    "text": "the people doing uh the secure audited stuff have their own copy",
    "start": "6194880",
    "end": "6202320"
  },
  {
    "text": "s different well it's you know there's hundreds of different applications running in the account yeah each group",
    "start": "6203800",
    "end": "6211159"
  },
  {
    "text": "uses it so there's probably 500 Engineers using Asgard each lots of",
    "start": "6211159",
    "end": "6216639"
  },
  {
    "text": "different teams there's actually multiple applications in there so for example the customer service team have",
    "start": "6216639",
    "end": "6221880"
  },
  {
    "text": "their own set of applications which are really totally separate from everyone else and they just find their apps um",
    "start": "6221880",
    "end": "6228360"
  },
  {
    "text": "Asgard records the owner of every app so you have a email address for everything",
    "start": "6228360",
    "end": "6234440"
  },
  {
    "text": "um so that you can call Page of Duty when it breaks and wake them up at",
    "start": "6234440",
    "end": "6239480"
  },
  {
    "text": "night right so that's that's an important thing in fact you you could set up chaos monkey to say that if an",
    "start": "6239480",
    "end": "6246520"
  },
  {
    "text": "application doesn't have an owner then it shouldn't be running in production so it'll just keep killing it so if you try",
    "start": "6246520",
    "end": "6252840"
  },
  {
    "text": "and launch an app with no owner it would just keep killing it until you admitted that you were the owner and we we",
    "start": "6252840",
    "end": "6257920"
  },
  {
    "text": "discussed doing that I don't think anyone ever really did that but um you can you know from as a as a mental model",
    "start": "6257920",
    "end": "6264360"
  },
  {
    "text": "I think that's useful",
    "start": "6264360",
    "end": "6268040"
  },
  {
    "text": "yeah Cassandra is a little different the Cassandra servers are deployed using",
    "start": "6278400",
    "end": "6284080"
  },
  {
    "text": "Asgard you deploy them you have to deploy Zone separately so you have to",
    "start": "6284080",
    "end": "6289360"
  },
  {
    "text": "use Asgard three times to deploy separate order scale groups because you don't want Amazon rebalancing across",
    "start": "6289360",
    "end": "6296000"
  },
  {
    "text": "zones because the data is specific so it's a it's a little different to deploy um it's trivial to create a uh",
    "start": "6296000",
    "end": "6306119"
  },
  {
    "text": "a in test anybody can create a Cassandra cluster I've created Cassandra clusters",
    "start": "6306119",
    "end": "6311599"
  },
  {
    "text": "it's it's I did it live on stage once as a demo I actually had a Jenkins job create two Cassandra clusters and",
    "start": "6311599",
    "end": "6317000"
  },
  {
    "text": "Benchmark them during my talk and in a in a 1H hour presentation we we started the cluster we ran benchmark marks we",
    "start": "6317000",
    "end": "6323280"
  },
  {
    "text": "doubled the size of both clusters and then shut them down and looked at the results within an hour um I had 48 nodes",
    "start": "6323280",
    "end": "6330599"
  },
  {
    "text": "running at the end of that um so anyone can do that now in production the way",
    "start": "6330599",
    "end": "6335639"
  },
  {
    "text": "Netflix has it there's a team that looks after Cassandra and that's because there's real data in there and you want to make sure that it's being bit more",
    "start": "6335639",
    "end": "6342040"
  },
  {
    "text": "carefully managed and then the other thing is that the version of Cassandra keeps changing and they're managing that",
    "start": "6342040",
    "end": "6349080"
  },
  {
    "text": "version so the version of the code of Cassandra is sort of a separate concern from the data that's in it so every team",
    "start": "6349080",
    "end": "6355119"
  },
  {
    "text": "has its own Cassandra cluster with its own data in it but the Cassandra man the Cassandra team updates your Cassandra",
    "start": "6355119",
    "end": "6362719"
  },
  {
    "text": "cluster for you and puts new versions of Cassandra in underneath so you don't have to worry about the version of",
    "start": "6362719",
    "end": "6368159"
  },
  {
    "text": "Cassandra you're running you just worry about your data so there's a little bit of a cross cutting set up there and the",
    "start": "6368159",
    "end": "6374239"
  },
  {
    "text": "way Cassandra nodes run they are Amazon instances the same as everything else with onboard disc the dis is inside it",
    "start": "6374239",
    "end": "6381400"
  },
  {
    "text": "and it has solid state disc and they're on a 10 gabit Network so when they die",
    "start": "6381400",
    "end": "6387000"
  },
  {
    "text": "um when a node gets killed it gets replaced by a new node and then the data",
    "start": "6387000",
    "end": "6392599"
  },
  {
    "text": "gets sucked in automatically and replaced and then the thing keeps going so it's sort of bit like REM mirroring a",
    "start": "6392599",
    "end": "6398560"
  },
  {
    "text": "a broken mirror on a dis subsystem except it's data between nodes so resers",
    "start": "6398560",
    "end": "6404800"
  },
  {
    "text": "it and it's a three-way version there's a lot of I've done a lot of",
    "start": "6404800",
    "end": "6410000"
  },
  {
    "text": "presentations I go into a lot more detail about how Cassandra works but the nice thing is you have three copies of",
    "start": "6410000",
    "end": "6415599"
  },
  {
    "text": "the data in each in a copy of the data in each Zone and then you have multiple",
    "start": "6415599",
    "end": "6420719"
  },
  {
    "text": "copies in each region so and then there's no internal mirroring and the discs are really cheap because they're",
    "start": "6420719",
    "end": "6426440"
  },
  {
    "text": "inside the instances there's no attached storage to worry about there's no contention in the storage subsystem and",
    "start": "6426440",
    "end": "6432239"
  },
  {
    "text": "you get the lowest possible latency because the machine has got the disc in it and solid state disc reads from a",
    "start": "6432239",
    "end": "6438199"
  },
  {
    "text": "local disc or very very fast so that's the that's the came that's my favorite",
    "start": "6438199",
    "end": "6444679"
  },
  {
    "text": "way to run storage nowadays um there's all these marketing terms like converged",
    "start": "6444679",
    "end": "6449800"
  },
  {
    "text": "storage and hypercon converg storage have you heard those have you've been dealing with storage tier operations",
    "start": "6449800",
    "end": "6455440"
  },
  {
    "text": "people do I have what's called Vapor converged storage which is I put it in the cloud and I don't need any storage",
    "start": "6455440",
    "end": "6460599"
  },
  {
    "text": "people anymore develop so the the the administrator for a Cassandra system is",
    "start": "6460599",
    "end": "6467239"
  },
  {
    "text": "a Java distributed systems developer and there's no storage people involved that's it like the entire storage team",
    "start": "6467239",
    "end": "6474080"
  },
  {
    "text": "goes away all those backup and sand engineers and all those people yeah they don't have any of those at Netflix",
    "start": "6474080",
    "end": "6480159"
  },
  {
    "text": "anymore it's we have some developers and that's it yeah the Storage storage people don't",
    "start": "6480159",
    "end": "6486440"
  },
  {
    "text": "like hearing that story I didn't coin the k noops no",
    "start": "6486440",
    "end": "6492239"
  },
  {
    "text": "somebody from Forester did but I I commented on the blog post hey that sounds like what Netflix does um and",
    "start": "6492239",
    "end": "6499320"
  },
  {
    "text": "then everyone got very upset and it's yeah but then and then Pap said",
    "start": "6499320",
    "end": "6506800"
  },
  {
    "text": "stop using that you're making people grumpy but if it's kind of I was trying",
    "start": "6506800",
    "end": "6512480"
  },
  {
    "text": "to explain what it was like to not have an operations department or an operations team but still run you know",
    "start": "6512480",
    "end": "6518119"
  },
  {
    "text": "large scale distributed system um there are what's left of the Ops Team at",
    "start": "6518119",
    "end": "6524199"
  },
  {
    "text": "Netflix reports into development and they basically it's a site reliability engineering team that does owns the",
    "start": "6524199",
    "end": "6531520"
  },
  {
    "text": "incident life cycles they build tools to detect that something's gone wrong call the developers to change their code in",
    "start": "6531520",
    "end": "6538040"
  },
  {
    "text": "production because the Ops Team doesn't touch code in production well there is no up team developers operate their own",
    "start": "6538040",
    "end": "6544199"
  },
  {
    "text": "code in production they they're entirely responsible for the state of their app",
    "start": "6544199",
    "end": "6549639"
  },
  {
    "text": "uh and you say their code is done your code is your coding is done when you've removed your code from production right",
    "start": "6549639",
    "end": "6556280"
  },
  {
    "text": "you know because there's this thing oh you're not done until it's running in production in this case you're not done until it's no longer running in",
    "start": "6556280",
    "end": "6562199"
  },
  {
    "text": "production because well if you some of your code is running in production you're on call so you're not done like",
    "start": "6562199",
    "end": "6568280"
  },
  {
    "text": "if you can delete it from production and it's not running anymore then you can go or if you can make somebody else responsible for it then you can leave",
    "start": "6568280",
    "end": "6575239"
  },
  {
    "text": "right go on vacation something like that so that's that's the way it works um so",
    "start": "6575239",
    "end": "6580639"
  },
  {
    "text": "the incident life cycle from for the site reliability engineering team they own the availability metric you know how",
    "start": "6580639",
    "end": "6587760"
  },
  {
    "text": "many nines or whatever the up time is and they own detecting that something's gone wrong or organizing the response",
    "start": "6587760",
    "end": "6594040"
  },
  {
    "text": "getting people on a call and then they schedule the incident review at the end of it and make sure the actions are",
    "start": "6594040",
    "end": "6600800"
  },
  {
    "text": "taken on it and that's their responsibility and it's a very different to a typical Ops Team or Adis admin",
    "start": "6600800",
    "end": "6608040"
  },
  {
    "text": "team they also work with the other noock kind of environments because Netflix works with the Xbox Microsoft Xbox noock",
    "start": "6608040",
    "end": "6615880"
  },
  {
    "text": "because or the PlayStation knock or whatever because every now and again you know PlayStation deci Sony decides to",
    "start": "6615880",
    "end": "6621880"
  },
  {
    "text": "update all the play stations in the world with some push thing and it might break and then Netflix starts getting",
    "start": "6621880",
    "end": "6627639"
  },
  {
    "text": "calls because PlayStations are broken whatever so all those kinds of coordinations happen or occasionally we",
    "start": "6627639",
    "end": "6634159"
  },
  {
    "text": "push a bug that breaks Xbox only or something and we call them and say hey we've broken you sorry those kinds of",
    "start": "6634159",
    "end": "6640560"
  },
  {
    "text": "things so it's it's an interesting team but it's got a very different Focus",
    "start": "6640560",
    "end": "6645719"
  },
  {
    "text": "everything else is an API that goes down into AWS or out into a SAS fendor like",
    "start": "6645719",
    "end": "6651159"
  },
  {
    "text": "page of Duty right that's the model any more",
    "start": "6651159",
    "end": "6658400"
  },
  {
    "text": "questions I'm R all day tomorrow if you want to add about something or you think",
    "start": "6658400",
    "end": "6663960"
  },
  {
    "text": "that there there are gaps in this package set of packages this is probably two-thirds of what Netflix built",
    "start": "6663960",
    "end": "6669440"
  },
  {
    "text": "internally there's a whole pile more stuff that they are going to open source one day they haven't got around to so",
    "start": "6669440",
    "end": "6676599"
  },
  {
    "text": "you have to keep watching the blog all right well thanks very much everyone",
    "start": "6676599",
    "end": "6683880"
  }
]