[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "cool uh lately I go by the the title of founder but that doesn't really say anything I've been a technical agile",
    "start": "12900",
    "end": "18240"
  },
  {
    "text": "coach for a couple of years uh and and that's what I am really in my heart so that's what this talk is about",
    "start": "18240",
    "end": "23939"
  },
  {
    "text": "I'm talking a little bit fast I'll try to figure out the the right uh well the right speed for this uh I call myself a",
    "start": "23939",
    "end": "30779"
  },
  {
    "text": "coach because I love working with people and with humans and I'm very human-centric in my approach to to a",
    "start": "30779",
    "end": "35940"
  },
  {
    "text": "code and tour factoring into software quality uh agile is in the title obviously because I like the agile",
    "start": "35940",
    "end": "41520"
  },
  {
    "text": "Manifesto and a technical part is if there's the thing most people over here and think I'm just an agile coach I'm",
    "start": "41520",
    "end": "47280"
  },
  {
    "text": "not at all like an agile coach because technological coaches concern themselves with specifically this principle from",
    "start": "47280",
    "end": "52739"
  },
  {
    "text": "the agile Manifesto that says that continuous attention to technical excellence and good design enhances agility right so it's technical",
    "start": "52739",
    "end": "59340"
  },
  {
    "text": "Excellence it's about all of these practices right test automation clean code pair programming software",
    "start": "59340",
    "end": "64860"
  },
  {
    "text": "architecture and branching strategies and all this really nitty-gritty stuff that's uh that's super I think it's the",
    "start": "64860",
    "end": "70799"
  },
  {
    "text": "most fun part of of tech building cool pipelines and stuff like that uh in this talk I want to tell you a",
    "start": "70799",
    "end": "77820"
  },
  {
    "text": "story um from from my own life my first well my second experience as a tech lead and",
    "start": "77820",
    "end": "83640"
  },
  {
    "text": "it started as a most stories from a from a previous consultant with a new project",
    "start": "83640",
    "end": "88799"
  },
  {
    "start": "85000",
    "end": "211000"
  },
  {
    "text": "right that's where I came to somewhere new and everything was uh was it was",
    "start": "88799",
    "end": "94439"
  },
  {
    "text": "chaos as it usually was so it was an unknown technology that I've never worked with before it was a huge code",
    "start": "94439",
    "end": "101220"
  },
  {
    "text": "base very scary right nobody knew all of it it was constantly breaking in all",
    "start": "101220",
    "end": "106259"
  },
  {
    "text": "these weird sorts of ways and we also had a legendary bus factor that there was only one person on the team who",
    "start": "106259",
    "end": "114060"
  },
  {
    "text": "could deploy this code it was just amazing right it was a manual process so only one person could do it",
    "start": "114060",
    "end": "119939"
  },
  {
    "text": "um we had a bunch of tests surprisingly Unfortunately they were all red",
    "start": "119939",
    "end": "125520"
  },
  {
    "text": "um and and the architecture was a jumbled mess we were the third consultancy to",
    "start": "125520",
    "end": "131220"
  },
  {
    "text": "get this code base and whenever a new consultancy gets a code base they're like oh the previous one is bad we're",
    "start": "131220",
    "end": "136440"
  },
  {
    "text": "gonna do redo it and this time it's going to be better and then they get like one third finished with it and you",
    "start": "136440",
    "end": "141959"
  },
  {
    "text": "know they never get around to the rest of the stuff so it was sort of like this you know it didn't make any sense and",
    "start": "141959",
    "end": "147540"
  },
  {
    "text": "anytime we had to go and make some changes to it we'd be like I really don't want to touch that part of the code right it's uh all of the parts are",
    "start": "147540",
    "end": "154260"
  },
  {
    "text": "bad we can't really do anything with this I was put on this project I was put",
    "start": "154260",
    "end": "159480"
  },
  {
    "text": "there as a developer with no special powers whatsoever I was just like all of the other Consultants on the on the",
    "start": "159480",
    "end": "165780"
  },
  {
    "text": "project but what made me different uh was that I had a vision I had an idea I wanted to make this team the team that",
    "start": "165780",
    "end": "171840"
  },
  {
    "text": "all the other people wanted to be on all the other Consultants right I just wanted to make the best experience for",
    "start": "171840",
    "end": "176940"
  },
  {
    "text": "everyone because I figured if this was a t a team that you wanted to fight to be on then probably I'll get the best",
    "start": "176940",
    "end": "183120"
  },
  {
    "text": "Consultants right on this project I've later learned that it's not about the best consultant it's it's more about",
    "start": "183120",
    "end": "189360"
  },
  {
    "text": "the uh feeling psychologically psychologically safe but that was a side effect of this anyway so so that works",
    "start": "189360",
    "end": "195659"
  },
  {
    "text": "still uh I asked the team if I could if they they wanted to take a chance in this uh this idea I had and and they",
    "start": "195659",
    "end": "203340"
  },
  {
    "text": "agreed to humor me they were like okay fine Christian here is the keys to the kingdom uh do your worst",
    "start": "203340",
    "end": "208980"
  },
  {
    "text": "and now got fun right uh the first thing I did was get rid of all of the Dead weight that we had so that meant I",
    "start": "208980",
    "end": "215519"
  },
  {
    "start": "211000",
    "end": "296000"
  },
  {
    "text": "deleted all of the comments and all the red tests gone we're just wasting time on those anyway trying to understand",
    "start": "215519",
    "end": "220680"
  },
  {
    "text": "them would take longer than just writing new stuff right especially out commented code it had a bunch of outcome of the",
    "start": "220680",
    "end": "226379"
  },
  {
    "text": "code I don't understand why people do it git is invented right you don't need out commented code so delete all that stuff",
    "start": "226379",
    "end": "232819"
  },
  {
    "text": "Second Step was we had a huge issue with the customers calling the Consultants to",
    "start": "232819",
    "end": "239040"
  },
  {
    "text": "get a demo of something some feature or whatever and then they would say oh that's fine also we need and also we",
    "start": "239040",
    "end": "244860"
  },
  {
    "text": "need and also could you change this thing and so they would make all these extra requests so I said from now on no",
    "start": "244860",
    "end": "250920"
  },
  {
    "text": "more you can't talk to the developers directly you have I can be I have to be present at all meetings that the customer is at and then I would stop",
    "start": "250920",
    "end": "257220"
  },
  {
    "text": "them at any time they try to make new suggestions and stuff like that because then I would take all of that waste upon",
    "start": "257220",
    "end": "263340"
  },
  {
    "text": "myself but at least I would know how much waste was in this in this process currently",
    "start": "263340",
    "end": "268560"
  },
  {
    "text": "I also did a bit of a controversial action I took out the bus factor and said you're not on the team anymore",
    "start": "268560",
    "end": "275820"
  },
  {
    "text": "um and it's because the person had a tendency of making himself a boss Factor right if it was something that happened",
    "start": "275820",
    "end": "282060"
  },
  {
    "text": "incidentally that would be fine we could fix that but this guy was like he was sort of proud that he was the only one who'd do this he was sort of special and",
    "start": "282060",
    "end": "288180"
  },
  {
    "text": "stuff and while I understand why he wanted to feel that it's too dangerous for the team and so what I said is from",
    "start": "288180",
    "end": "295199"
  },
  {
    "text": "now on uh you can't touch the keyboard anymore all of your ideas have to go through somebody else's hands right so",
    "start": "295199",
    "end": "301740"
  },
  {
    "start": "296000",
    "end": "326000"
  },
  {
    "text": "the William Falco calls this strong style pairing which is super awesome right from head into code an idea must",
    "start": "301740",
    "end": "307500"
  },
  {
    "text": "go through someone else's hands so that way we got all of the knowledge that he had transferred into someone else before",
    "start": "307500",
    "end": "313080"
  },
  {
    "text": "he left and then yeah he was out of the door good that was the waste part then I",
    "start": "313080",
    "end": "319560"
  },
  {
    "text": "figured okay what's the biggest problem with this project why is it always burning well I figured it's because uh",
    "start": "319560",
    "end": "324720"
  },
  {
    "text": "we're missing safety right the code is the code quality is low so people are scared of changing anything and I wanted",
    "start": "324720",
    "end": "329940"
  },
  {
    "start": "326000",
    "end": "412000"
  },
  {
    "text": "to to bring that up and being the being mad with power I almost want to say I",
    "start": "329940",
    "end": "336720"
  },
  {
    "text": "just said okay from now on all new code has to be tested boom I've said it so obviously that happened",
    "start": "336720",
    "end": "342360"
  },
  {
    "text": "except nothing happened actually it turns out you can't just tell people that now they should test their code and",
    "start": "342360",
    "end": "348479"
  },
  {
    "text": "then they'll do it because they're in the same context everything's still the same and the code is like uh really uh",
    "start": "348479",
    "end": "354660"
  },
  {
    "text": "it's not necessarily easy to start testing code that might be a very big upfront investment in fact we had this",
    "start": "354660",
    "end": "361320"
  },
  {
    "text": "uh this silly situation where I just said all the new code needs to be tested and stopped saying that you're done with",
    "start": "361320",
    "end": "367740"
  },
  {
    "text": "stuff if it's not tested I don't want to look at it and the customer can't look at it either and two days after the",
    "start": "367740",
    "end": "373620"
  },
  {
    "text": "customer calls me and says hey we have this released on Thursday in in two more days uh can you uh are we gonna be ready",
    "start": "373620",
    "end": "381240"
  },
  {
    "text": "do you have this feature is that included in the release and I look over at the developer and says hey can this",
    "start": "381240",
    "end": "386280"
  },
  {
    "text": "the release be or can this feature be ready for for the release and he said yes if I skip testing",
    "start": "386280",
    "end": "393780"
  },
  {
    "text": "and I'm like no then you say no it can't be ready we just talked about it right",
    "start": "393780",
    "end": "400259"
  },
  {
    "text": "but the problem is that to do a testing you need refactoring but you also need",
    "start": "400259",
    "end": "405479"
  },
  {
    "text": "to do refactoring you need testing and so you sort of have an infinite Loop there it's very hard to get started with",
    "start": "405479",
    "end": "410639"
  },
  {
    "text": "so then I figured okay then maybe the code is the problem maybe that's where we should look and so",
    "start": "410639",
    "end": "415800"
  },
  {
    "start": "412000",
    "end": "464000"
  },
  {
    "text": "I uh I I had already studied a lot with code quality and stuff so I decided to every two weeks I would introduce a new",
    "start": "415800",
    "end": "423360"
  },
  {
    "text": "code smell that we would work with for two weeks and then I figured that smell would be out of the code base and then we'd move on",
    "start": "423360",
    "end": "429539"
  },
  {
    "text": "um and uh nothing happened um because uh well coat smells aren't",
    "start": "429539",
    "end": "437220"
  },
  {
    "text": "immediately uh like easy to apply either whenever people were about to refactor",
    "start": "437220",
    "end": "442860"
  },
  {
    "text": "the code or supposed to be refactoring the code they would sit down and start reading it right and in a bad code base",
    "start": "442860",
    "end": "448319"
  },
  {
    "text": "it takes forever to read stuff right it's just it yeah and it gets worse the",
    "start": "448319",
    "end": "454380"
  },
  {
    "text": "worse the code is and the more it needs refactoring and then you're back in in another infinite Loop where you can never actually improve anything which",
    "start": "454380",
    "end": "461460"
  },
  {
    "text": "was super annoying so then I figured maybe it's the environment right I just started hearing",
    "start": "461460",
    "end": "466680"
  },
  {
    "start": "464000",
    "end": "777000"
  },
  {
    "text": "back then it's a while ago now I just started hearing about this guy called Woody Sewell and he had this awesome saying he said the object is not to",
    "start": "466680",
    "end": "473880"
  },
  {
    "text": "create great software but to create an environment where great software is inevitable and I was like that sounds",
    "start": "473880",
    "end": "480060"
  },
  {
    "text": "like the key he has solved software development and so I introduced a concept that I've",
    "start": "480060",
    "end": "486660"
  },
  {
    "text": "also since then introduced in many places because it is actually hugely beneficial",
    "start": "486660",
    "end": "491699"
  },
  {
    "text": "um uh it's we call it Improvement Monday I would give the developers just time to work on whatever they wanted uh and the",
    "start": "491699",
    "end": "498300"
  },
  {
    "text": "thing is developers are super creative right they're really really brilliant people and if there is a problem they'll",
    "start": "498300",
    "end": "503879"
  },
  {
    "text": "solve it themselves if they're allowed to right if you create like an environment where they're super busy and they don't have time to fix anything of",
    "start": "503879",
    "end": "510479"
  },
  {
    "text": "course they won't solve anything because they'll try to try to do what they're supposed to but if you let them they'll",
    "start": "510479",
    "end": "516060"
  },
  {
    "text": "they'll solve all their own problems I figured and so the way that we do this is we have a every Monday we set aside",
    "start": "516060",
    "end": "521940"
  },
  {
    "text": "something like this where we start the day with a pitch and recruit everybody says something that they've thought about working on something that annoys",
    "start": "521940",
    "end": "528000"
  },
  {
    "text": "them uh that class that was bad last week a process they've discovered something like that everybody pitches",
    "start": "528000",
    "end": "533399"
  },
  {
    "text": "their idea for what you could work on and then the recruitment part is everybody also uh is goes together and",
    "start": "533399",
    "end": "539880"
  },
  {
    "text": "works on the same tickets or decides which which tickets they want to work on and so we pick in this case it's just a",
    "start": "539880",
    "end": "546480"
  },
  {
    "text": "document the process and refactor the code then the next step is to define a goal you have to define something that",
    "start": "546480",
    "end": "552180"
  },
  {
    "text": "you can do that day something you can finish right and refactor the code is too General you can't that's not a thing",
    "start": "552180",
    "end": "557279"
  },
  {
    "text": "you can you can say that you're done with but refactor class that Java is more specific in it and it's something",
    "start": "557279",
    "end": "562500"
  },
  {
    "text": "that you can actually do and then we have the focus time the big block up here where we use something called whoops where we use something called uh",
    "start": "562500",
    "end": "570120"
  },
  {
    "text": "Mob programming or ensembler programming as it's more known now where we have one big screen and one",
    "start": "570120",
    "end": "575760"
  },
  {
    "text": "keyboard that's sort of the premise and then we have a guy at the keyboard he's called a driver",
    "start": "575760",
    "end": "580920"
  },
  {
    "text": "um who is the person we're using a version of Louisville and Falco Strong Style pairing again so uh he's had the",
    "start": "580920",
    "end": "587100"
  },
  {
    "text": "keyboard another person is the programmer or the Navigator decides what's supposed to be done and the driver can only do what the Navigator",
    "start": "587100",
    "end": "593399"
  },
  {
    "text": "tells them to nothing else which is the hard part because we have such a strong tendency to like scroll a little bit up",
    "start": "593399",
    "end": "599519"
  },
  {
    "text": "and down check something oh I saw a spelling mistake I'll just fix it don't right you only do what the Navigator",
    "start": "599519",
    "end": "605000"
  },
  {
    "text": "tells you to and then finally we have what gives name to the to the method The Ensemble the extra brains that help you",
    "start": "605000",
    "end": "612480"
  },
  {
    "text": "keep track of all the things that are going on right now and all the other parts of the code because when we're coding we need to have a model of the",
    "start": "612480",
    "end": "618120"
  },
  {
    "text": "code in our head and these extra brains can really help with that um especially if the team is",
    "start": "618120",
    "end": "623519"
  },
  {
    "text": "cross-functional and have slightly different specialization and then we switch every",
    "start": "623519",
    "end": "628560"
  },
  {
    "text": "three to six minutes and that sounds immediately insane if you've never tried it but it turns out that three men this is actually that bad because also you're",
    "start": "628560",
    "end": "635640"
  },
  {
    "text": "not stuck for very long right there is always You're always moving on to the next person and then we just rotate",
    "start": "635640",
    "end": "640760"
  },
  {
    "text": "teams who are more mature with this method can use longer periods like 15 minutes I've heard of people doing an",
    "start": "640760",
    "end": "646800"
  },
  {
    "text": "hour but I can't imagine that won't be a lot of context switching in and out",
    "start": "646800",
    "end": "652200"
  },
  {
    "text": "um shorter periods are usually better for this especially in the beginning so then after we've done some work we go",
    "start": "652200",
    "end": "657720"
  },
  {
    "text": "to lunch of course and then when we're back from lunch we do a touch base just to check are we still working on the thing we said we were do we need someone",
    "start": "657720",
    "end": "663540"
  },
  {
    "text": "to join us or switch the groups around is there something that sounds more fun that's fine we do all that stuff and",
    "start": "663540",
    "end": "668940"
  },
  {
    "text": "then by the end of the day after another Focus session we we just check off did",
    "start": "668940",
    "end": "674160"
  },
  {
    "text": "we do the thing we said we were and in the beginning the answer is no but over time people learn to sort of Judge how",
    "start": "674160",
    "end": "679680"
  },
  {
    "text": "much you can do in a day and then it's usually yes and and then we do a retro and I always do them in in the style of",
    "start": "679680",
    "end": "685680"
  },
  {
    "text": "love learned and lacked and that's also another way you can hear I'm not an agile coach because I only do one type",
    "start": "685680",
    "end": "691260"
  },
  {
    "text": "of retro and this one um and if these are just some typical tickets that we get every",
    "start": "691260",
    "end": "697560"
  },
  {
    "text": "single time I've held this we get these on the first time it's nice working together uh it's by the way it's sad",
    "start": "697560",
    "end": "703740"
  },
  {
    "text": "that people need to say this they should be working together every day obviously uh somebody learned some new shortcuts",
    "start": "703740",
    "end": "709260"
  },
  {
    "text": "people get really a lot more efficient with their tooling when they see other people from the same team just using the same tools and then there are too many",
    "start": "709260",
    "end": "715320"
  },
  {
    "text": "interruptions it's very difficult to make time uh for a whole day of not doing Feature work especially in some",
    "start": "715320",
    "end": "721560"
  },
  {
    "text": "organizations where they're very focused on output instead of impact",
    "start": "721560",
    "end": "727019"
  },
  {
    "text": "good um so I'd introduced Improvement Mondays and obviously then the code got fixed right",
    "start": "727019",
    "end": "733620"
  },
  {
    "text": "no nothing happened um the issue here is that code smells are",
    "start": "733620",
    "end": "740040"
  },
  {
    "text": "really difficult to understand themselves right you can't just learn a code smell and then you can sit down and do it because it's abstract it's sort of",
    "start": "740040",
    "end": "747180"
  },
  {
    "text": "it's based on gut feeling I like to say but that's really difficult to transfer to other people what gut feeling is like",
    "start": "747180",
    "end": "753420"
  },
  {
    "text": "when is this code good enough we can sort of argue about it and especially in a team where people are a bit timid",
    "start": "753420",
    "end": "759779"
  },
  {
    "text": "nobody will want to sit down and say what is the actual limit um and so it requires practice you need",
    "start": "759779",
    "end": "766200"
  },
  {
    "text": "practice to do refactoring well that's just how it is refactoring is a is a thing your fingers do not uh not so much",
    "start": "766200",
    "end": "773040"
  },
  {
    "text": "just something that you can do with your brain entirely good so I figured maybe the smells are broken",
    "start": "773040",
    "end": "778320"
  },
  {
    "start": "777000",
    "end": "967000"
  },
  {
    "text": "right and so I sat down and I again researched all of the smells I could find and all of a bunch of different",
    "start": "778320",
    "end": "784380"
  },
  {
    "text": "resources and then I was like okay all of these are two abstract I need to come up with new rules rules instead of",
    "start": "784380",
    "end": "792120"
  },
  {
    "text": "smells that sounds already better for me and and I wanted them to have three criteria the first one is they should be",
    "start": "792120",
    "end": "798120"
  },
  {
    "text": "easy to remember because if I add more stuff to people's head then again I'm I'm doing the exact",
    "start": "798120",
    "end": "804660"
  },
  {
    "text": "same mistake of the of the smells I can't rely on people thinking but remembering is sort of okay they should",
    "start": "804660",
    "end": "810720"
  },
  {
    "text": "also be syntactic that means you can see it by just looking at the code with no brain right you just look at the code",
    "start": "810720",
    "end": "816360"
  },
  {
    "text": "and you can say oh that one spray that one's bad that one's good uh um so it's cognitive light again we're trying to",
    "start": "816360",
    "end": "822779"
  },
  {
    "text": "take things out of the head of the developers because they're already full up uh and then they should also be safe to",
    "start": "822779",
    "end": "830160"
  },
  {
    "text": "execute even if you don't understand the code right we need to be safe all the time but I don't want safety to come",
    "start": "830160",
    "end": "837000"
  },
  {
    "text": "from a person read it and understood it because again that's a thing that's really hard to do",
    "start": "837000",
    "end": "842639"
  },
  {
    "text": "that also means I had a problem with all the existing refactoring patterns because all of them that I could find",
    "start": "842639",
    "end": "848820"
  },
  {
    "text": "rely on testing and so I had to come up with new ones new tools that don't rely on testing",
    "start": "848820",
    "end": "854639"
  },
  {
    "text": "because as I said I deleted all the tests and they were red anyway so they wouldn't have helped us so um what are",
    "start": "854639",
    "end": "861000"
  },
  {
    "text": "some of I had to think about what are some operations that I can ask my developers to do that are low risk and",
    "start": "861000",
    "end": "866040"
  },
  {
    "text": "will still that I can still compose into interesting refactoring patterns and the first one is copy and paste if there's",
    "start": "866040",
    "end": "871320"
  },
  {
    "text": "something most developers are good at it's copy and paste it's also pre-practiced so that's really good it's",
    "start": "871320",
    "end": "877980"
  },
  {
    "text": "very unlikely that you are going to mess something up by copying it and pasting it right that's not when the danger",
    "start": "877980",
    "end": "883079"
  },
  {
    "text": "happens the other thing is doing really small steps and now that I've used it",
    "start": "883079",
    "end": "889199"
  },
  {
    "text": "for a while I I can confidently say this is probably the most dangerous thing that I'm asking people to do is go slow",
    "start": "889199",
    "end": "895199"
  },
  {
    "text": "because that's so hard to do like we want to go fast right we want to refactor all this code and once we think",
    "start": "895199",
    "end": "901320"
  },
  {
    "text": "we see the next five steps we try to do them in one right I can just do all of these things but it's this is where it",
    "start": "901320",
    "end": "907139"
  },
  {
    "text": "breaks in practice it's because people are not patient enough um the the final uh thing that I want",
    "start": "907139",
    "end": "913980"
  },
  {
    "text": "that I felt I could rely on was the compiler and that's because I uh I always work within type languages and so",
    "start": "913980",
    "end": "920579"
  },
  {
    "text": "the compiler has a type system and that means I can it can catch a lot of mistakes at runtime or compile time",
    "start": "920579",
    "end": "926220"
  },
  {
    "text": "sorry uh and it's it's it's a super powerful tool and it can do so many things and I was like if I can design",
    "start": "926220",
    "end": "932459"
  },
  {
    "text": "these rules in a way that that or these were factorings in a way that relies on the compiler so that you know when",
    "start": "932459",
    "end": "938339"
  },
  {
    "text": "you're in a green State and in a red State because the compiler will tell you that will be super powerful also because",
    "start": "938339",
    "end": "943560"
  },
  {
    "text": "it is it is constantly there right it's not something we need to maintain over time it's not like testing where we need",
    "start": "943560",
    "end": "949260"
  },
  {
    "text": "to put something in it it's just it once you put in some types they're true forever you never need to change them",
    "start": "949260",
    "end": "954899"
  },
  {
    "text": "probably and something started started to happen like uh between these new things people",
    "start": "954899",
    "end": "961680"
  },
  {
    "text": "the code base actually started to move and uh and so let's talk a little bit about uh how how I uh how this journey",
    "start": "961680",
    "end": "968699"
  },
  {
    "start": "967000",
    "end": "997000"
  },
  {
    "text": "from smells to rules sort of Give an example and look at some code and stuff I know I know you're here for the code",
    "start": "968699",
    "end": "974639"
  },
  {
    "text": "um good so if we look back and see this is a this is an exceptional book of course by Martin Fowler refactoring this",
    "start": "974639",
    "end": "981240"
  },
  {
    "text": "is the second edition the first one was also great uh where he says don't have long methods which is a good piece of advice I mean I don't disagree but also",
    "start": "981240",
    "end": "988920"
  },
  {
    "text": "I can't sit down and use this right I can't put it into code because I don't know what it means what is what is too",
    "start": "988920",
    "end": "994680"
  },
  {
    "text": "long so what I did was I replaced this rule with something like this five lines boom if it's more than five lines it's",
    "start": "994680",
    "end": "1000920"
  },
  {
    "start": "997000",
    "end": "1499000"
  },
  {
    "text": "too long easy you can look at some code and you can immediately see oh also I count them of course in in the way that",
    "start": "1000920",
    "end": "1006920"
  },
  {
    "text": "makes sense I don't count braces and blank lines but yeah this five lines easy I can see that it's fine we can do",
    "start": "1006920",
    "end": "1012980"
  },
  {
    "text": "this um there's a little bit of leeway in the concrete rules there's more more description and a little bit more Nuance",
    "start": "1012980",
    "end": "1019040"
  },
  {
    "text": "but in general this is the this is the part I want people to remember first um and so if we look at how to apply",
    "start": "1019040",
    "end": "1025280"
  },
  {
    "text": "something like this uh we can have a some code here uh this is just a traffic light sort of simulation on a very small",
    "start": "1025280",
    "end": "1031579"
  },
  {
    "text": "scale also if you're not Danish you need to know that in Denmark the light",
    "start": "1031579",
    "end": "1036620"
  },
  {
    "text": "switches from red to yellow red where it's like you can almost drive and then it becomes green and then yellow again",
    "start": "1036620",
    "end": "1044120"
  },
  {
    "text": "uh I think that's maybe only the Mac but yeah so this is just a small small thing and it's more than five lines of code",
    "start": "1044120",
    "end": "1050419"
  },
  {
    "text": "it's easy to see uh we don't need to think about it uh so then we go through a few of the refactoring patterns now",
    "start": "1050419",
    "end": "1056660"
  },
  {
    "text": "the first one is we replace the switch with mdfl's chain like this so the code is the same and it's doing the same it's",
    "start": "1056660",
    "end": "1063020"
  },
  {
    "text": "just we're using this thing instead because there's also a rule against using switched obviously even Martin Fowler has that that one down don't use",
    "start": "1063020",
    "end": "1070460"
  },
  {
    "text": "switch ever good um so after we've replaced it with the with the fl's chain I'll try to go a",
    "start": "1070460",
    "end": "1077299"
  },
  {
    "text": "little bit slower with this code because I know some of you are trying to read it and listen and it's very unfair of me to",
    "start": "1077299",
    "end": "1083480"
  },
  {
    "text": "just click through it so now we want to get rid of this uh enum that we have here enums and",
    "start": "1083480",
    "end": "1089480"
  },
  {
    "text": "switches go together and since switches go out of the code base so do enums and so in this case we want to replace it",
    "start": "1089480",
    "end": "1096380"
  },
  {
    "text": "with the with classes instead and the way that we do this remember I wanted it to be safe so we start by renaming the",
    "start": "1096380",
    "end": "1102740"
  },
  {
    "text": "enum to something like delete me or something because now the compiler will tell us everywhere we use that one which",
    "start": "1102740",
    "end": "1110120"
  },
  {
    "text": "is amazing right now I don't have to think about it I don't have to be sure if I hit all of them because the compiler will tell me if I hit all of",
    "start": "1110120",
    "end": "1115760"
  },
  {
    "text": "them uh there is the caveat though that this doesn't work if you use a reflection or third-party libraries that",
    "start": "1115760",
    "end": "1121520"
  },
  {
    "text": "use reflection or don't use reflection obviously uh cool so uh once we've done this we",
    "start": "1121520",
    "end": "1128780"
  },
  {
    "text": "can start uh we can start eliminating them so we take that little small enum",
    "start": "1128780",
    "end": "1134299"
  },
  {
    "text": "up there and then we make a new class for each of the values and each of those classes has a method for each of the",
    "start": "1134299",
    "end": "1140480"
  },
  {
    "text": "values so we sort of do an N squared thing right and for the yellow class here you can see all of the methods",
    "start": "1140480",
    "end": "1147080"
  },
  {
    "text": "return false except is yellow and I hope that makes sense to everyone and then down here where I have the",
    "start": "1147080",
    "end": "1154039"
  },
  {
    "text": "equals equals I now just has have a call to the new is methods and then everything works the same right and the",
    "start": "1154039",
    "end": "1160580"
  },
  {
    "text": "compiler stops complaining and so so everything is good we're now in a green state right so the compiler tells us",
    "start": "1160580",
    "end": "1167000"
  },
  {
    "text": "whether we're in the middle of something or whether we're in we're in a safe space so um next step is uh to take this code",
    "start": "1167000",
    "end": "1174500"
  },
  {
    "text": "that we have here that still has ifs and Analysis and stuff and there's another rule saying you can't have else again",
    "start": "1174500",
    "end": "1180559"
  },
  {
    "text": "easy to see there's an else boom I know this is bad cool so if you can't have",
    "start": "1180559",
    "end": "1185720"
  },
  {
    "text": "else the thing is we need to push this code into the classes so we start by copying it and giving it a new name in",
    "start": "1185720",
    "end": "1192200"
  },
  {
    "text": "the interface because when we put it in an interface with the wrong name the compiler will tell us that all of the",
    "start": "1192200",
    "end": "1198320"
  },
  {
    "text": "classes now don't comply with the thing right and we've just pasted in the code we've removed function because that's",
    "start": "1198320",
    "end": "1203960"
  },
  {
    "text": "just some syntax we've also replaced the light parameter with this because we are now inside of a light",
    "start": "1203960",
    "end": "1210799"
  },
  {
    "text": "right cool uh and so we can now go through these pieces of code here yellow",
    "start": "1210799",
    "end": "1215840"
  },
  {
    "text": "still doesn't compile us you can see it's red up there and then we can inline all of the constant methods the methods",
    "start": "1215840",
    "end": "1222860"
  },
  {
    "text": "that only return a constant we might as well just put the constant this one is weird",
    "start": "1222860",
    "end": "1228320"
  },
  {
    "text": "uh here so it's false in these two cases and then the next step as you might imagine is to just remove all of the",
    "start": "1228320",
    "end": "1235280"
  },
  {
    "text": "stuff that isn't executed anymore and once we've done that we can also put in the the naming thing that now signals we",
    "start": "1235280",
    "end": "1242720"
  },
  {
    "text": "are done with this method and the class steps compile starts compiling again right so once we've gone through all of",
    "start": "1242720",
    "end": "1248539"
  },
  {
    "text": "the classes we'll know that the code base compiles so again when the compiler is happy we're in a green State we're in",
    "start": "1248539",
    "end": "1253640"
  },
  {
    "text": "a safe space cool we can take all of these yeah so because",
    "start": "1253640",
    "end": "1259760"
  },
  {
    "text": "we've put this temporary suffix on the name we obviously need to go back and just rename that away you can either do",
    "start": "1259760",
    "end": "1266120"
  },
  {
    "text": "that just using a refactoring tool like your editors will usually do that for you or again if you want if you want to",
    "start": "1266120",
    "end": "1272480"
  },
  {
    "text": "rely only on your own two hands and compiler you can just remove it from the interface and again you'll get errors",
    "start": "1272480",
    "end": "1278840"
  },
  {
    "text": "everywhere you use it and you can do Safeway like that too cool",
    "start": "1278840",
    "end": "1284179"
  },
  {
    "text": "um over time these methods or not over time in this case immediately but over time",
    "start": "1284179",
    "end": "1289940"
  },
  {
    "text": "these will become unused right because the if disappeared and the ifs were the only thing that we're using these",
    "start": "1289940",
    "end": "1296059"
  },
  {
    "text": "methods and since there are no more ifs in the code these ones also just disappear",
    "start": "1296059",
    "end": "1301700"
  },
  {
    "text": "um which is nice because it feels like we've added a lot of boilerplate and usually the first step in refactoring an",
    "start": "1301700",
    "end": "1307700"
  },
  {
    "text": "email away like this is you explode the code up to be like 10 times as long which feels counter-intuitive but then",
    "start": "1307700",
    "end": "1313580"
  },
  {
    "text": "after a short while it just is flushed out again automatically which is a super",
    "start": "1313580",
    "end": "1319340"
  },
  {
    "text": "nice um yeah so over time let's say that we actually needed some of these we have",
    "start": "1319340",
    "end": "1325520"
  },
  {
    "text": "some other methods we've introduced these are not the same as before because these are controls for an actual traffic",
    "start": "1325520",
    "end": "1330799"
  },
  {
    "text": "light or something like that where you can see that both yellow and yellow red has the yellow light turned on but",
    "start": "1330799",
    "end": "1335840"
  },
  {
    "text": "yellow red obviously also has the red light turned on uh and so in that case we might want to say uh We've split it",
    "start": "1335840",
    "end": "1343820"
  },
  {
    "text": "up too much I like these two to be one class right I just want one class representing these two and uh and we can",
    "start": "1343820",
    "end": "1349820"
  },
  {
    "text": "we can discuss whether that philosophically makes sense but for the exam for the uh in the interest of",
    "start": "1349820",
    "end": "1355340"
  },
  {
    "text": "showing you some cool refactorings we're gonna we're gonna unify the message called so the first step is that we need",
    "start": "1355340",
    "end": "1361280"
  },
  {
    "text": "to figure out what is the basis what what are a collection of constant methods that uniquely identify each of",
    "start": "1361280",
    "end": "1367580"
  },
  {
    "text": "the classes that we wanna we wanna unify in this case we can pick for instance the red light right is red light on is a",
    "start": "1367580",
    "end": "1374900"
  },
  {
    "text": "good identifier for which of these two we're in and so then we put in an if in",
    "start": "1374900",
    "end": "1380299"
  },
  {
    "text": "each of the methods that just says well in this one it has to be on and then the other one it has to be off so we've",
    "start": "1380299",
    "end": "1386419"
  },
  {
    "text": "inline if true or we've added if true which should be fine it's still it's still legal it does the same thing it's",
    "start": "1386419",
    "end": "1392600"
  },
  {
    "text": "just a bit boilerplaty but then the next step is to take that code and then add",
    "start": "1392600",
    "end": "1397760"
  },
  {
    "text": "it to the body of the other one right so the not red light cast up goes up there",
    "start": "1397760",
    "end": "1403400"
  },
  {
    "text": "and the other one goes down here so we've just crossed it I think of this sort of in the same way that we divide fractions right you just cross them over",
    "start": "1403400",
    "end": "1411500"
  },
  {
    "text": "if that's something you think about often um yeah so we just crossed them and we now",
    "start": "1411500",
    "end": "1416960"
  },
  {
    "text": "have uh these two are now entirely identical which means that we can just",
    "start": "1416960",
    "end": "1422600"
  },
  {
    "text": "uh oh yeah in the else case it's either do the thing or the other thing so we can",
    "start": "1422600",
    "end": "1428600"
  },
  {
    "text": "simplify it a little bit we don't need the the if down on the second one but yes now they're uh",
    "start": "1428600",
    "end": "1434679"
  },
  {
    "text": "these methods are identical so the only place that that disagrees is the",
    "start": "1434679",
    "end": "1440419"
  },
  {
    "text": "is the constant method and so instead of having that constant method there we now",
    "start": "1440419",
    "end": "1446059"
  },
  {
    "text": "take a parameter and in typescript that looks a little bit funky because we can do we can do an immediate initialization",
    "start": "1446059",
    "end": "1453080"
  },
  {
    "text": "of the of a private variable a field variable with a parameter by just putting private up there but it just",
    "start": "1453080",
    "end": "1459080"
  },
  {
    "text": "means we have a field variable and then we're using that instead that should hope hopefully also be fine",
    "start": "1459080",
    "end": "1465200"
  },
  {
    "text": "and once we've done that to the to the two classes these two are entirely identical now right whereas before they",
    "start": "1465200",
    "end": "1471860"
  },
  {
    "text": "were sort of similar now they're entirely identical and so we can just remove one of them in this case we just",
    "start": "1471860",
    "end": "1477320"
  },
  {
    "text": "keep the yellow one good cool",
    "start": "1477320",
    "end": "1483880"
  },
  {
    "text": "what do you want to do here yeah oh yeah and now if we look back into the yellow one uh we're sort of back where we were",
    "start": "1484760",
    "end": "1491240"
  },
  {
    "text": "earlier right where we started we now have a type code again because we because booleans are another example of type codes just like enums are and so we",
    "start": "1491240",
    "end": "1499220"
  },
  {
    "start": "1499000",
    "end": "1922000"
  },
  {
    "text": "can go through the entire process again and this is like a sort of a flow that once you work with discover work with",
    "start": "1499220",
    "end": "1505880"
  },
  {
    "text": "refactoring a lot you discover that there are these patterns in The Meta layer like a patterns of refactoring",
    "start": "1505880",
    "end": "1511760"
  },
  {
    "text": "patterns that you're using and so I I've used this one so many times where we start by extracting some code so the DF",
    "start": "1511760",
    "end": "1517820"
  },
  {
    "text": "is isolated then we remove the switch with if else then we take the if else with some equals and replace it with the",
    "start": "1517820",
    "end": "1524059"
  },
  {
    "text": "type code thing and then we use the if if methods is methods disappear when we",
    "start": "1524059",
    "end": "1529100"
  },
  {
    "text": "push the code into classes and then by the end we inline the method this is a common flow that we go through all of",
    "start": "1529100",
    "end": "1534140"
  },
  {
    "text": "the time um so yeah so it's uh so so there are so there are a couple of these flows and",
    "start": "1534140",
    "end": "1541520"
  },
  {
    "text": "yeah and they show up everywhere super powerful let's talk a little bit about why this is actually interesting why",
    "start": "1541520",
    "end": "1547400"
  },
  {
    "text": "this code is better the one we ended with compared to the one we started with because it might not be immediately obvious there are two things that make",
    "start": "1547400",
    "end": "1554120"
  },
  {
    "text": "code problematic to work with in a in an intra team setting so when for",
    "start": "1554120",
    "end": "1559760"
  },
  {
    "text": "individuals right and for for teams um the first one is invariance it and my",
    "start": "1559760",
    "end": "1565220"
  },
  {
    "text": "definition is something that I the developer knows but the compiler doesn't know I haven't told it right I'm keeping it secret basically it's something like",
    "start": "1565220",
    "end": "1572059"
  },
  {
    "text": "the array that length cannot be negative I know that you all know that but the compiler just sees an integer and for",
    "start": "1572059",
    "end": "1579559"
  },
  {
    "text": "for it it can be negative right this is a pretty safe invariant but I'll get back to him to to other invariants in a",
    "start": "1579559",
    "end": "1586940"
  },
  {
    "text": "second the other thing is coupling right which things are connected to which things because when I'm working with some code",
    "start": "1586940",
    "end": "1592760"
  },
  {
    "text": "and I need to make a change I need to keep track of all of the other things that might be impacted by this uh by",
    "start": "1592760",
    "end": "1598640"
  },
  {
    "text": "this change so the more things that are reused the harder it is in in my case I defined it as shared by multiple teams",
    "start": "1598640",
    "end": "1605059"
  },
  {
    "text": "and that's to also further offend people uh that where everybody on a team works",
    "start": "1605059",
    "end": "1610220"
  },
  {
    "text": "as individuals and don't work in sort of an ensemble way if you're in different flows I call you different teams even if",
    "start": "1610220",
    "end": "1617120"
  },
  {
    "text": "you're sitting next to each other right co-location is not enough to be a team you need to be in the same flow it's",
    "start": "1617120",
    "end": "1622520"
  },
  {
    "text": "typical for stuff like utility glasses and data classes and stuff that are commonly owned or owned by no one and uh",
    "start": "1622520",
    "end": "1628820"
  },
  {
    "text": "and yeah it just it's impossible to change cool so if we look at just a small piece",
    "start": "1628820",
    "end": "1634820"
  },
  {
    "text": "of code an example here we have actually evidence of both couplings and invariants in a very small piece of code",
    "start": "1634820",
    "end": "1641059"
  },
  {
    "text": "and if you were a smaller group I would sort of ask you when we do like can you spot what they are and stuff but I'll",
    "start": "1641059",
    "end": "1646820"
  },
  {
    "text": "just tell you because there's so many people uh the first thing we can see is what is",
    "start": "1646820",
    "end": "1652940"
  },
  {
    "text": "the type of uh ARR right most of you will have a pretty good idea about",
    "start": "1652940",
    "end": "1658580"
  },
  {
    "text": "something that you can't see on the screen right because it is coupled to the implementation so you can see that",
    "start": "1658580",
    "end": "1664100"
  },
  {
    "text": "this is probably some sort of a numeric array that would make sense right otherwise it doesn't compile at least",
    "start": "1664100",
    "end": "1670039"
  },
  {
    "text": "so we can already see that so we'll couple to the to the type of the uh to the type of the array",
    "start": "1670039",
    "end": "1676159"
  },
  {
    "text": "um we can also we have also an invariant we have the one I talked about before of course where a rated length cannot be it",
    "start": "1676159",
    "end": "1682460"
  },
  {
    "text": "has to be well defined even here or it has to be well behaved there is a great book called The Java puzzlers where",
    "start": "1682460",
    "end": "1688520"
  },
  {
    "text": "there's a whole section of the book dedicated to looking at Loops that look completely normal and then they say you",
    "start": "1688520",
    "end": "1694220"
  },
  {
    "text": "have to find a way to make it an infinite Loop if you had the power to overwrite this method you could make this an infinite Loop right in this case",
    "start": "1694220",
    "end": "1700700"
  },
  {
    "text": "it'd be fairly easy you just return float that infinity or something right boom infinite Loop so it has to be well",
    "start": "1700700",
    "end": "1707000"
  },
  {
    "text": "behaved that's the that's the first invariant there's a second invariant though and that is that this thing doesn't cost overflow we're not checking",
    "start": "1707000",
    "end": "1714559"
  },
  {
    "text": "for it so surely the developer has thought about it and figured there is no danger here for the Overflow",
    "start": "1714559",
    "end": "1719900"
  },
  {
    "text": "these are things we need to keep track of while we're coding um there's a final coupling and I think",
    "start": "1719900",
    "end": "1725360"
  },
  {
    "text": "this is mostly for fun but you can actually say what language this is even by looking at it because at least for me",
    "start": "1725360",
    "end": "1731720"
  },
  {
    "text": "the only language I know that has the length with a capital l is C Sharp so it's probably C sharp",
    "start": "1731720",
    "end": "1738440"
  },
  {
    "text": "which is also fun um that you can see things we can contrast that to another way of writing",
    "start": "1738440",
    "end": "1743600"
  },
  {
    "text": "the same piece of code which would be r dot map and then fed Arrow plus two",
    "start": "1743600",
    "end": "1748760"
  },
  {
    "text": "um in this case we still have the invariant that this could cause overflow and we can still see that it's C sharp",
    "start": "1748760",
    "end": "1755480"
  },
  {
    "text": "but we've eliminated at least two of the couplings we can't say anything about what type R is anymore right it can be",
    "start": "1755480",
    "end": "1761779"
  },
  {
    "text": "any type it can be a custom type that implements the right interface and it also doesn't depend on length",
    "start": "1761779",
    "end": "1768140"
  },
  {
    "text": "cool uh the reason this is important is that when we're coding in our traffic light",
    "start": "1768140",
    "end": "1774500"
  },
  {
    "text": "example as here when we have an enum we have the the dependency point in the",
    "start": "1774500",
    "end": "1780860"
  },
  {
    "text": "wrong direction we end up Distributing our invariance throughout the code base right because I know that these come in",
    "start": "1780860",
    "end": "1787700"
  },
  {
    "text": "a specific order and there are other things I need to keep track of about the data type and these I need to keep I",
    "start": "1787700",
    "end": "1794840"
  },
  {
    "text": "need to remember whenever I put my switch in my traffic lights in my car and in my whatever that thing is called",
    "start": "1794840",
    "end": "1801200"
  },
  {
    "text": "where you put your hand right all of these now need to know all of these invariants and so I distribute them all",
    "start": "1801200",
    "end": "1807799"
  },
  {
    "text": "across the code base right they're made non-local and uh this",
    "start": "1807799",
    "end": "1813980"
  },
  {
    "text": "is especially bad if you don't have exhaustiveness check because then when somebody invents a blue color right below the red one it's going to be very",
    "start": "1813980",
    "end": "1820940"
  },
  {
    "text": "difficult for me to go back and add that and then check that I've remembered to put it in all the places because I have",
    "start": "1820940",
    "end": "1826159"
  },
  {
    "text": "no mechanism for knowing right especially if you use default or something like that it's terrible contrast that to the classes where",
    "start": "1826159",
    "end": "1833059"
  },
  {
    "text": "instead everything points towards the data right the functionality is right next to the data and I have to keep",
    "start": "1833059",
    "end": "1839240"
  },
  {
    "text": "track of only what's in the current file that I'm looking at right the invariants are localized they're isolated so they",
    "start": "1839240",
    "end": "1845960"
  },
  {
    "text": "can't leak out to all these different places and that makes it way easier to move uh to to uh to do stuff with and",
    "start": "1845960",
    "end": "1852140"
  },
  {
    "text": "you can be way more comfortable that you'll either have spotted it with your own eyes or the compiler will catch it right you can still have invariants you",
    "start": "1852140",
    "end": "1859340"
  },
  {
    "text": "can still have all these bad things but the scope is a lot smaller than the entire code base now they're just this",
    "start": "1859340",
    "end": "1864740"
  },
  {
    "text": "file at least and then you can make more files smaller files smaller packages and then you can slowly isolate these out",
    "start": "1864740",
    "end": "1870799"
  },
  {
    "text": "and uh as I said getting back to the story we we did actually make the",
    "start": "1870799",
    "end": "1875899"
  },
  {
    "text": "happiest team the then there turned up to be a bunch of other problems um but but that's the story for for",
    "start": "1875899",
    "end": "1882020"
  },
  {
    "text": "another time it was talked about for a long time as the team that we all missed uh when it was disbanded because it was",
    "start": "1882020",
    "end": "1888799"
  },
  {
    "text": "just so fun to work work on you could be productive right you could sit down and do your work every day and you felt like",
    "start": "1888799",
    "end": "1894020"
  },
  {
    "text": "you did something and there was actual Improvement and we started from the absolute worst code base right it was",
    "start": "1894020",
    "end": "1899539"
  },
  {
    "text": "notoriously bad so this was a huge pat on the back for me and when I also when I decided that I wanted to work more",
    "start": "1899539",
    "end": "1905480"
  },
  {
    "text": "with people than my code um because I I find thinking about these things is more impactful and and it made",
    "start": "1905480",
    "end": "1912799"
  },
  {
    "text": "more sense to me to uh to have happy colleagues than to have a um big bills",
    "start": "1912799",
    "end": "1918500"
  },
  {
    "text": "to the client that didn't motivate me at all actually okay if I had to do it again how would I do",
    "start": "1918500",
    "end": "1924140"
  },
  {
    "start": "1922000",
    "end": "2091000"
  },
  {
    "text": "it because the order is a little bit wrong as I said many of the things I tried first didn't actually work so here",
    "start": "1924140",
    "end": "1930380"
  },
  {
    "text": "are the things that I would actually do now and has done when I when I go and visit organizations as a as a digital",
    "start": "1930380",
    "end": "1936559"
  },
  {
    "text": "transformation lead uh the first thing is we need technical Vision in the team it has to be embedded it has to be out",
    "start": "1936559",
    "end": "1942620"
  },
  {
    "text": "on all levels actually we need it also in management but we also need it on the team somebody has to care about code",
    "start": "1942620",
    "end": "1947899"
  },
  {
    "text": "quality and about the code and about how we do our work and want to make it better",
    "start": "1947899",
    "end": "1953299"
  },
  {
    "text": "um and that turns out to be a probably a bigger problem than than I initially thought it would be because I thought",
    "start": "1953299",
    "end": "1959299"
  },
  {
    "text": "everybody was like me and just wanted to do everything as as cool as possible that's not always the case so we need to",
    "start": "1959299",
    "end": "1965539"
  },
  {
    "text": "have some sort of technical leadership in the team second part is we need to have the environment for excellence that I described to you we need to have a",
    "start": "1965539",
    "end": "1971659"
  },
  {
    "text": "space where we can work together and where we can learn what are each other's strengths and how can we sort of uh",
    "start": "1971659",
    "end": "1977059"
  },
  {
    "text": "improve and build on each upon each other's to cool things so that's pair programming and it's Ensemble programming it is not",
    "start": "1977059",
    "end": "1983740"
  },
  {
    "text": "asynchronous code review right don't do that I'm sure somebody else is more",
    "start": "1983740",
    "end": "1989899"
  },
  {
    "text": "qualified to talk about that but that doesn't work for other reasons cool then remove waste comments interruptions bus",
    "start": "1989899",
    "end": "1997279"
  },
  {
    "text": "factors all of these things get it out because the longer you have it you're just postponing a bigger pain when you",
    "start": "1997279",
    "end": "2003159"
  },
  {
    "text": "then have to remove it just take it up front even though it's scary and it's it hurts it's an important step and it's",
    "start": "2003159",
    "end": "2009100"
  },
  {
    "text": "necessary then we need to prioritize safety and I think a lot of people think I just mean",
    "start": "2009100",
    "end": "2015460"
  },
  {
    "text": "testing here I don't mean testing necessarily testing is a way to do this and that's fine if you're good at that but really just use the tools that you",
    "start": "2015460",
    "end": "2023019"
  },
  {
    "text": "already have right if you have someone on the team who's an expert in something use that if you have static analyzers",
    "start": "2023019",
    "end": "2028539"
  },
  {
    "text": "they're so easy to set up and you get a positive benefit from them immediately also you get 5 000 warnings that you now",
    "start": "2028539",
    "end": "2036279"
  },
  {
    "text": "need to pay off right which has its own conversations with it and localizing invariants in my experience this is the",
    "start": "2036279",
    "end": "2043539"
  },
  {
    "text": "most uh impactful thing to work on speed for a code basis how distributed are the",
    "start": "2043539",
    "end": "2048878"
  },
  {
    "text": "invariants right how easy is it to move here without being being afraid and then uh the final thing reduce the",
    "start": "2048879",
    "end": "2056200"
  },
  {
    "text": "cognitive overhead and I think that's going to be the the currency of the future is going to be cognitive overhead",
    "start": "2056200",
    "end": "2061300"
  },
  {
    "text": "how simple can I make this uh code and how simple can I make the way of working here because when we're solving a",
    "start": "2061300",
    "end": "2068500"
  },
  {
    "text": "problem for a customer or ourselves we fill up our our head and all of our cognitive capacity with the problem and",
    "start": "2068500",
    "end": "2075460"
  },
  {
    "text": "the model and the world right developers try to take in the entire part of the world that's relevant for their problem",
    "start": "2075460",
    "end": "2081158"
  },
  {
    "text": "and if we keep doing that there is just no space for anything else and so the more cognitive currency we have the more",
    "start": "2081159",
    "end": "2088000"
  },
  {
    "text": "productive we can be and the better software we can make thank you all very much for listening",
    "start": "2088000",
    "end": "2094980"
  }
]