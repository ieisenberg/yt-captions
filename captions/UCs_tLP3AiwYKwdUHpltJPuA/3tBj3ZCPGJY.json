[
  {
    "start": "0",
    "end": "221000"
  },
  {
    "text": "[Music]",
    "start": "4310",
    "end": "7840"
  },
  {
    "text": "good morning everyone Thanks for uh choosing to come to my talk it's an honor to be here and I am looking",
    "start": "12240",
    "end": "19080"
  },
  {
    "text": "forward to teaching you some of the secrets I've learned about how to operate and scale platform engineering",
    "start": "19080",
    "end": "26599"
  },
  {
    "text": "so today I'm going to be sharing with you n different lessons about how your teams can be more productive and happier",
    "start": "26599",
    "end": "32719"
  },
  {
    "text": "and more comfortable in production so how did we get to this point where I'm needing to give lectures",
    "start": "32719",
    "end": "40120"
  },
  {
    "text": "about how to you know as it were do devops correctly right devops says you know here are the five aspirational",
    "start": "40120",
    "end": "46360"
  },
  {
    "text": "things that you're supposed to do right you're supposed to focus on a positive culture you're supposed to automate things you're supposed to have fast",
    "start": "46360",
    "end": "52600"
  },
  {
    "text": "feedback Cycles supposed to measure and you're supposed to have a culture of sharing within your team right and if",
    "start": "52600",
    "end": "58480"
  },
  {
    "text": "you just do these five magical things everything get better right well unfortunately it's not really specific",
    "start": "58480",
    "end": "65840"
  },
  {
    "text": "enough so let's talk about measurement then and let's use some of the lessons of the Dora Team that uh that went to",
    "start": "65840",
    "end": "72840"
  },
  {
    "text": "Google so what the Dora Team says is that we really should focus on how often do we",
    "start": "72840",
    "end": "78720"
  },
  {
    "text": "deploy what's our lead time to push chaines out if things break how quickly can we",
    "start": "78720",
    "end": "84880"
  },
  {
    "text": "get the service running again and if things fail to go out correctly how long",
    "start": "84880",
    "end": "90280"
  },
  {
    "text": "does it take us to uh to get it fixed and what percentage of changes are",
    "start": "90280",
    "end": "95600"
  },
  {
    "text": "successful and there are of course some categories for what constitutes low medium or high performance but why did I",
    "start": "95600",
    "end": "102479"
  },
  {
    "text": "use the word generative at the start because to me a generative team is a team that's focused on self-improvement",
    "start": "102479",
    "end": "108040"
  },
  {
    "text": "a team that's willing and able to criticize itself and that matters to me a lot more than whether you're a low",
    "start": "108040",
    "end": "113560"
  },
  {
    "text": "medium or high performer what I care about is can you get to the next category are you always looking to improve yourself",
    "start": "113560",
    "end": "121119"
  },
  {
    "text": "but knowing what the measurements are is not sufficient to improve there are a",
    "start": "121119",
    "end": "126560"
  },
  {
    "text": "couple of different reasons why number one because none of these things say here's what you do to improve number two",
    "start": "126560",
    "end": "133760"
  },
  {
    "text": "you can't really figure out like you know what am I supposed to do at each incremental step and when you do measure",
    "start": "133760",
    "end": "140360"
  },
  {
    "text": "how do I know whether a regression in my build times is the team doing the right thing or whether it is that our metrics",
    "start": "140360",
    "end": "147440"
  },
  {
    "text": "have actually regressed so that brings to good Hearts law which is any measure that is used as a uh as as as something",
    "start": "147440",
    "end": "155120"
  },
  {
    "text": "that you're actually grading people on winds up being GED and we also have this kind of idea",
    "start": "155120",
    "end": "161879"
  },
  {
    "text": "that if if we're at the top top of the maturity model we can stop improving right we're good enough right but that's",
    "start": "161879",
    "end": "168680"
  },
  {
    "text": "not really true we always should be aspiring to do better so how do we do",
    "start": "168680",
    "end": "174239"
  },
  {
    "text": "that well one thing that I think is pretty clear is teams are getting stuck",
    "start": "174239",
    "end": "179800"
  },
  {
    "text": "even when measured according to the door metrics even when we have these metrics that people you know could be gaming",
    "start": "179800",
    "end": "185560"
  },
  {
    "text": "what the Google team has found is over the years that the number of high performing teams stays about the same or",
    "start": "185560",
    "end": "193360"
  },
  {
    "text": "even perhaps people have regressed a little bit Google speculates it's because of the pandemic and people",
    "start": "193360",
    "end": "198480"
  },
  {
    "text": "having kind of coordination barriers but in either case there's this group of performers who are struggling with",
    "start": "198480",
    "end": "205200"
  },
  {
    "text": "software delivery who are not quite able to get software out reply and reliably",
    "start": "205200",
    "end": "211879"
  },
  {
    "text": "so I think that that means that it's important to continue to share these lessons about how to advance our teams",
    "start": "211879",
    "end": "218319"
  },
  {
    "text": "and scale them and make them work so if measuring the door metrics doesn't help people improve in and of",
    "start": "218319",
    "end": "225200"
  },
  {
    "start": "221000",
    "end": "311000"
  },
  {
    "text": "itself what does help teams improve so today I'm going to be sharing with you the nine secrets for a",
    "start": "225200",
    "end": "231120"
  },
  {
    "text": "generative culture that enables you to enhance your software development practices and move safer and quick",
    "start": "231120",
    "end": "237239"
  },
  {
    "text": "quicker in production so I'll go through all of these of course during the talk but I",
    "start": "237239",
    "end": "242560"
  },
  {
    "text": "just figured that I would give you a quick guide post as to where I'm going and how I'm going to get your teams kind",
    "start": "242560",
    "end": "250040"
  },
  {
    "text": "of through those initial building blocks and into having a a practice that is fully systematized that is fully rolled",
    "start": "250040",
    "end": "257479"
  },
  {
    "text": "out across all of your teams I see people taking slide uh pictures of the slides so I'll just hold",
    "start": "257479",
    "end": "262840"
  },
  {
    "text": "it there for a second all",
    "start": "262840",
    "end": "268360"
  },
  {
    "text": "right this the fun of live talks right cool um so as I was just",
    "start": "268360",
    "end": "274840"
  },
  {
    "text": "introduced um I've been the field CTO of honeycomb for about a year now and prior to that I was a developer Advocate at",
    "start": "274840",
    "end": "281360"
  },
  {
    "text": "honeycomb for three years and then before that I worked at Google um for about 11 years as a site reliability",
    "start": "281360",
    "end": "288160"
  },
  {
    "text": "engineer and one of the things I consistently saw was that many of the teams I worked with across the industry",
    "start": "288160",
    "end": "294759"
  },
  {
    "text": "in trying to help them develop site reliability practices and here's a secret Google even doesn't do all these",
    "start": "294759",
    "end": "300280"
  },
  {
    "text": "things consistently right so I think that there's a lot of Education that needs to be done about how to improve",
    "start": "300280",
    "end": "307840"
  },
  {
    "text": "teams and the first thing is you have to be able to deploy your infrastructure",
    "start": "307840",
    "end": "314240"
  },
  {
    "start": "311000",
    "end": "488000"
  },
  {
    "text": "and deploy your code repeatably if it isn't in Git it doesn't",
    "start": "314240",
    "end": "319280"
  },
  {
    "text": "exist so we really have to have a solid building base of hermetic",
    "start": "319280",
    "end": "324440"
  },
  {
    "text": "infrastructure which is infrastructure that is self-contained can be stood up from code and that doesn't have any",
    "start": "324440",
    "end": "331880"
  },
  {
    "text": "tricky external dependencies or kind of monkey patching or anything weird where you are sing onto individual machines so",
    "start": "331880",
    "end": "339440"
  },
  {
    "text": "I personally don't care whether you're using Docker whether you're using raw ec2 images right like what I care about",
    "start": "339440",
    "end": "345400"
  },
  {
    "text": "is you have some mechanism of always being able to boot a new machine and having it come up in the in the same",
    "start": "345400",
    "end": "351199"
  },
  {
    "text": "clean state which probably means that you're going to need some combination of Chef Packer and Docker in order to get",
    "start": "351199",
    "end": "356919"
  },
  {
    "text": "that done and you're going to want to have the ability to repeatedly roll out",
    "start": "356919",
    "end": "362639"
  },
  {
    "text": "new machines to adjust your configuration and yes I'm very much aware of the uh recent spat over",
    "start": "362639",
    "end": "369360"
  },
  {
    "text": "terraform I don't really care which one of these things you use terraform open tofu as long as you're using something",
    "start": "369360",
    "end": "374560"
  },
  {
    "text": "that enables you to control your infrastructure and production and orchestration is important right but you",
    "start": "374560",
    "end": "380800"
  },
  {
    "text": "don't have to use kubernetes for it necessarily you can just push out tballs and have them pushed out to machines",
    "start": "380800",
    "end": "386680"
  },
  {
    "text": "because that's actually a secret about honeycomb until about 2 years ago we weren't using kubernetes at all um so",
    "start": "386680",
    "end": "392759"
  },
  {
    "text": "you can get surprising far without it but if you do choose to use it it is useful so why does this matter why does",
    "start": "392759",
    "end": "399759"
  },
  {
    "text": "it matter to have repeatable infrastructure I think it boils down to get Ops enables you to treat your",
    "start": "399759",
    "end": "406680"
  },
  {
    "text": "infrastructure as code and really have that reproducibility to have code review to have all these wonderful software",
    "start": "406680",
    "end": "413160"
  },
  {
    "text": "development practices and kind of apply those methodologies to what was traditionally you know the domain of an",
    "start": "413160",
    "end": "419720"
  },
  {
    "text": "operations team and this means that you have the ability not just to move forward more safely but also to roll",
    "start": "419720",
    "end": "426160"
  },
  {
    "text": "back more quickly and roll back more safely because you always have a known good state that you can restore to and",
    "start": "426160",
    "end": "432800"
  },
  {
    "text": "this means that your teams are no longer clobbering each other or otherwise causing problems for each other with",
    "start": "432800",
    "end": "438240"
  },
  {
    "text": "making uh colliding changes and when you get rid of Click Ops of you know show hands how many of",
    "start": "438240",
    "end": "445759"
  },
  {
    "text": "you you know go into the Amazon or the Azure or the gcp console to make",
    "start": "445759",
    "end": "450919"
  },
  {
    "text": "changes okay that's actually surprisingly low um how many of you uh do it",
    "start": "450919",
    "end": "458440"
  },
  {
    "text": "regularly okay that's much better right so I think it's really important to make sure that the right thing is the fast",
    "start": "458440",
    "end": "464599"
  },
  {
    "text": "thing that it is always going to be faster in addition to more correct uh to deploy things via making pool requests",
    "start": "464599",
    "end": "471840"
  },
  {
    "text": "rather than uh clicking around in the console and this means that you can have continuous integration you can test",
    "start": "471840",
    "end": "477560"
  },
  {
    "text": "things before they roll out you can have feature Flags right you can control what percentage of the fleet gets an upgrade",
    "start": "477560",
    "end": "483280"
  },
  {
    "text": "and you can just take it step by step and apply unit tests along the way so that's kind of the first layer is",
    "start": "483280",
    "end": "489879"
  },
  {
    "start": "488000",
    "end": "688000"
  },
  {
    "text": "can we roll out base images but the second part is how do we roll out new application deploys so this is where",
    "start": "489879",
    "end": "496360"
  },
  {
    "text": "going quickly really really enhances the velocity of your teams so when we wind up uh having tools",
    "start": "496360",
    "end": "504560"
  },
  {
    "text": "like circleci GitHub actions uh build kite you know there's any number of options here but the point is that some",
    "start": "504560",
    "end": "511280"
  },
  {
    "text": "degree of templating and reproducibility of builds and not only that but enabling",
    "start": "511280",
    "end": "517880"
  },
  {
    "text": "you to just say I want to throw more money at this in order to make it go faster if you have the tooling to do",
    "start": "517880",
    "end": "524279"
  },
  {
    "text": "that it can enable you to make your builds really really Lightning Fast why does this matter because chances are if",
    "start": "524279",
    "end": "531560"
  },
  {
    "text": "you're developing software your time as a software developer is going to be far more valuable than the cost of throwing",
    "start": "531560",
    "end": "537720"
  },
  {
    "text": "one or two more machines at doing the buiness build So the faster you can make the build the faster your feedback loop",
    "start": "537720",
    "end": "543200"
  },
  {
    "text": "and the less tempted you'll be to push something out without passing CI the less tempted you'll be to go and get a",
    "start": "543200",
    "end": "549040"
  },
  {
    "text": "coffee and dump all that state out of your brain while you're waiting for the build so at honeycomb where I work we",
    "start": "549040",
    "end": "556000"
  },
  {
    "text": "aim to have a 10-minute build and we track that performance over time and we actually set objectives to make sure",
    "start": "556000",
    "end": "562279"
  },
  {
    "text": "that we never regress past 15minute builds so in practice this is our actual",
    "start": "562279",
    "end": "568240"
  },
  {
    "text": "uh this is our actual build time and you can see that we are broadly speaking meeting our goal of 15 minutes although",
    "start": "568240",
    "end": "575120"
  },
  {
    "text": "there's a little bit of room for improvement to get it back down to the Target of 10-minute build times so we",
    "start": "575120",
    "end": "580920"
  },
  {
    "text": "have a few advantages here right we're using a monor repo but we're also using",
    "start": "580920",
    "end": "586920"
  },
  {
    "text": "circleci again you know again it doesn't have to be Circle C but this is the tool that I know best we're able to evaluate",
    "start": "586920",
    "end": "593880"
  },
  {
    "text": "what's the performance of this and in particular anytime one of the steps gets too slow we're going to either split it",
    "start": "593880",
    "end": "600640"
  },
  {
    "text": "into two concurrent steps that can run side by side and try to break that dependency as much as possible or if",
    "start": "600640",
    "end": "607959"
  },
  {
    "text": "it's something that's paralyzable for instance running the full test Suite we might choose to run the test Suite in",
    "start": "607959",
    "end": "614160"
  },
  {
    "text": "thirds and run each third in parallel but of course be mindful of omal law right you might have to set up a",
    "start": "614160",
    "end": "619880"
  },
  {
    "text": "database if setting up the database takes 3 minutes you're never going to make your test Suite run faster than 3 and a half or four minutes right the",
    "start": "619880",
    "end": "627040"
  },
  {
    "text": "other really crucial thing here is C your dependencies and otherwise making it so that adding new dependencies",
    "start": "627040",
    "end": "632959"
  },
  {
    "text": "doesn't create this fence painting problem of now I have n plus1 dependencies now I have to n pack and install them all right it's just much",
    "start": "632959",
    "end": "639399"
  },
  {
    "text": "much faster to have everything pre canned ready to go ready to run test the",
    "start": "639399",
    "end": "644720"
  },
  {
    "text": "instant that the uh build tree initializes when you do these builds in containers it means that you can bin",
    "start": "644720",
    "end": "651160"
  },
  {
    "text": "pack them onto resizable compute noes you can say I want to change from an xar instance to a 2X large instance or I",
    "start": "651160",
    "end": "658040"
  },
  {
    "text": "want to run these on two different instances but as much as I've talked",
    "start": "658040",
    "end": "663519"
  },
  {
    "text": "about the C piece the CD piece is also really key that you have to make the roll outs quick you have to make sure",
    "start": "663519",
    "end": "668720"
  },
  {
    "text": "that if you have a new build artifact you know what the procedure is for getting that build artifact out into",
    "start": "668720",
    "end": "674079"
  },
  {
    "text": "production as quickly as possible and maybe in your infrastructure maybe it's not you know 1 hour maybe it's one day",
    "start": "674079",
    "end": "680440"
  },
  {
    "text": "or two days right like that's fine but the important piece is that you're focusing on continuous Improvement how",
    "start": "680440",
    "end": "686440"
  },
  {
    "text": "do I make this go faster so this is where having some visibility",
    "start": "686440",
    "end": "691600"
  },
  {
    "start": "688000",
    "end": "954000"
  },
  {
    "text": "comes in and speaking of visibility let's talk about observability so my boss charity Majors",
    "start": "691600",
    "end": "698160"
  },
  {
    "text": "says often that you shouldn't you know get out of get out of the house in the morning get into your car and just drive",
    "start": "698160",
    "end": "703519"
  },
  {
    "text": "off with snow on the windshield right you might crash into something or you might have snow fall off fly off of your",
    "start": "703519",
    "end": "708720"
  },
  {
    "text": "roof and hit someone else right that's no fun so the point of observability is to",
    "start": "708720",
    "end": "714120"
  },
  {
    "text": "enable us to debug things that we didn't think about in advance because no no one",
    "start": "714120",
    "end": "719760"
  },
  {
    "text": "deliberately says I want to go out there and write a bug that's going to crash or delete all of the data in production",
    "start": "719760",
    "end": "725320"
  },
  {
    "text": "right no one wants to do that everyone is a conscientious software developer here and we try to write unit tests we",
    "start": "725320",
    "end": "732839"
  },
  {
    "text": "try to debug things we try to make sure that things are in solid shape before they go out to production but no matter",
    "start": "732839",
    "end": "739760"
  },
  {
    "text": "what there's always going to be some kind of unknown unknowns things that we can't predict that wind up going wrong",
    "start": "739760",
    "end": "746160"
  },
  {
    "text": "as part of the inherent complexity of our software systems so this means that we have to be able to",
    "start": "746160",
    "end": "751839"
  },
  {
    "text": "figure out what's going on in production that we didn't anticipate when we wrote the code and we can't just go ahead and",
    "start": "751839",
    "end": "758120"
  },
  {
    "text": "say you know I want to take two weeks to reproduce this in staging like that",
    "start": "758120",
    "end": "763399"
  },
  {
    "text": "doesn't fly with their customers their customers expect us to be able to fix issues within hours rather than fix",
    "start": "763399",
    "end": "768720"
  },
  {
    "text": "issues within days or weeks so the key insight about observability is that we have to be able",
    "start": "768720",
    "end": "775680"
  },
  {
    "text": "to form and test hypotheses we can't just be constrain trained to query only",
    "start": "775680",
    "end": "781120"
  },
  {
    "text": "preexisting dashboards pre-existing fields we have to think about here's the state of the entire system how do I make",
    "start": "781120",
    "end": "787880"
  },
  {
    "text": "that System model fit the model that's in my head so the best way to do that is to be able to think of questions that",
    "start": "787880",
    "end": "794639"
  },
  {
    "text": "will help reconcile that state and to help us really figure out how does the state not conform to what I think is",
    "start": "794639",
    "end": "801079"
  },
  {
    "text": "going on and how do I bring it into a state of working so for instance I might want to",
    "start": "801079",
    "end": "807639"
  },
  {
    "text": "say okay you know I want to figure out what are the slowest customers by team name that are using",
    "start": "807639",
    "end": "815279"
  },
  {
    "text": "this particular endpoint and that's something that you know I happen to dog food honeycomb to do this but you could",
    "start": "815279",
    "end": "821959"
  },
  {
    "text": "do this in a number of similar observability tools the key element here is being able to ask arbitrary questions",
    "start": "821959",
    "end": "829079"
  },
  {
    "text": "and to get answers to those questions and in particular to figure out what distinguishes a slow or failing request",
    "start": "829079",
    "end": "835880"
  },
  {
    "text": "from a successful request what distinguishes a happy customer from an endha customer but beyond break fix we also",
    "start": "835880",
    "end": "843560"
  },
  {
    "text": "have to think about how do we debug things across the entire life cycle where debugging is more generally",
    "start": "843560",
    "end": "849880"
  },
  {
    "text": "defined we might want to have things like making sure their unit tests run predictably making sure that our CA",
    "start": "849880",
    "end": "855480"
  },
  {
    "text": "processes run smoothly enough making sure that customers are actually using the features that we build so that we're",
    "start": "855480",
    "end": "861240"
  },
  {
    "text": "not wasting time building features that our customers are not actually using we also have to think about",
    "start": "861240",
    "end": "867360"
  },
  {
    "text": "observability as this overall process it's not just about collecting you know",
    "start": "867360",
    "end": "872399"
  },
  {
    "text": "uh logs traces metrics they're not Pokemon you don't have to collect them all the important thing is being able to",
    "start": "872399",
    "end": "880800"
  },
  {
    "text": "really really dig in and understand and that starts with being able to add instrumentation to",
    "start": "880800",
    "end": "887199"
  },
  {
    "text": "ergonomically develop the uh fields and values and kind of infrastructure and Scaffolding so that you can see what's",
    "start": "887199",
    "end": "893519"
  },
  {
    "text": "going on inside of your applications even if you didn't predict what questions you might be asking and yes",
    "start": "893519",
    "end": "899320"
  },
  {
    "text": "you have to be able to store that data somewhere that's economical enough and then we have to most importantly be able",
    "start": "899320",
    "end": "905320"
  },
  {
    "text": "to query that data to ask arbitrary questions broken down by arbitrary fields or values in order to get to the",
    "start": "905320",
    "end": "911279"
  },
  {
    "text": "bottom of what's going on so the outcome is what matters and",
    "start": "911279",
    "end": "916880"
  },
  {
    "text": "teams have to be able to feel curious about what's going on in production in order to really achieve a state of good",
    "start": "916880",
    "end": "925240"
  },
  {
    "text": "observability similar to testability it's not like you know do you have testability or not yes or no right like",
    "start": "925240",
    "end": "930880"
  },
  {
    "text": "that that's not a meaningful question right so similarly observability is this state of being in sync with your systems",
    "start": "930880",
    "end": "938000"
  },
  {
    "text": "and no matter what tooling you're using you should do the instrumentation bit with open Telemetry because that's kind",
    "start": "938000",
    "end": "944519"
  },
  {
    "text": "of the common standard that everyone is using across our industry in order to ensure portability vendor neutrality and",
    "start": "944519",
    "end": "951800"
  },
  {
    "text": "Rich instrumentation okay so the fourth secret feature flagging so a lot of us",
    "start": "951800",
    "end": "960120"
  },
  {
    "start": "954000",
    "end": "1145000"
  },
  {
    "text": "may have fear of exploding all of production right if you explode all of production then you've created a giant",
    "start": "960120",
    "end": "965680"
  },
  {
    "text": "mess everyone is you know maybe wondering what's going on with that team what's going on with that service so how",
    "start": "965680",
    "end": "971839"
  },
  {
    "text": "do we make it so that we're not afraid of moving in production how do we make it so that we're not afraid that you",
    "start": "971839",
    "end": "977319"
  },
  {
    "text": "know anywhere I go stepping I'm going to step on a land mine and everything's going to explode right so the secret",
    "start": "977319",
    "end": "982959"
  },
  {
    "text": "here is that was weird uh the secret here is",
    "start": "982959",
    "end": "989560"
  },
  {
    "text": "we have to be able to limit the blast radius by user and by component you know that was funny I",
    "start": "989560",
    "end": "996680"
  },
  {
    "text": "didn't plan that but actually I'm going to point out here the blast radius was relatively small right like my laptop",
    "start": "996680",
    "end": "1002800"
  },
  {
    "text": "didn't crash I just accidentally blinked the screen so I think I'm going to roll with that um so when you make it that",
    "start": "1002800",
    "end": "1008720"
  },
  {
    "text": "failures are smaller and more incremental it makes you less afraid that you might make a mistake that blows",
    "start": "1008720",
    "end": "1013920"
  },
  {
    "text": "everything up so in order to practice uh feature flagging you are going to need some",
    "start": "1013920",
    "end": "1020399"
  },
  {
    "text": "automation or some code so it is possible to write rent feature flags and",
    "start": "1020399",
    "end": "1025918"
  },
  {
    "text": "say you know just roll a die if the D if the die is two ones then you're going to serve the user uh some more experimental",
    "start": "1025919",
    "end": "1032600"
  },
  {
    "text": "code but it turns out that that has a lot of pitfalls and Dragons so over time people wind up",
    "start": "1032600",
    "end": "1040438"
  },
  {
    "text": "gravitating towards uh more professional Solutions like launch sharly or optimizely again the important thing",
    "start": "1040439",
    "end": "1046400"
  },
  {
    "text": "here is you defined feature Flags can you control them at runtime can you make",
    "start": "1046400",
    "end": "1052600"
  },
  {
    "text": "sure that there's a reliable infrastructure for delivering safe defaults in the event that service is not available and can you see the",
    "start": "1052600",
    "end": "1059679"
  },
  {
    "text": "results of your experiments and actually cross check them and look in fact at your observability tooling to see maybe",
    "start": "1059679",
    "end": "1066600"
  },
  {
    "text": "there's some combination of feature flags that is causing more users to experience pain than than",
    "start": "1066600",
    "end": "1072120"
  },
  {
    "text": "others so we really really happen to like that ability to flag things on my",
    "start": "1072120",
    "end": "1077640"
  },
  {
    "text": "team ID that way can run smaller experiments just on our internal teams or maybe roll it out to a subset of",
    "start": "1077640",
    "end": "1083120"
  },
  {
    "text": "customers and that way we can kind of more incrementally roll things out without fearing that this new code that",
    "start": "1083120",
    "end": "1088720"
  },
  {
    "text": "we released might break 100% production the other element that really really helps in feature flagging is kind",
    "start": "1088720",
    "end": "1095159"
  },
  {
    "text": "of developing a sense for when is it safe to do an experiment and when should we a on the side of caution or how",
    "start": "1095159",
    "end": "1101960"
  },
  {
    "text": "quickly should we roll through from 0% to 1% to 5% to 10% right like how",
    "start": "1101960",
    "end": "1107640"
  },
  {
    "text": "quickly should we we be rolling through in order to get to 100% coverage of the flag in",
    "start": "1107640",
    "end": "1113640"
  },
  {
    "text": "production so I'll tell you a little bit more about this this afternoon if you choose to join me at the closing uh talk",
    "start": "1113640",
    "end": "1119760"
  },
  {
    "text": "but this is an experiment that we ran where we rolled it out to uh 50% of users and it broke rather horribly so we",
    "start": "1119760",
    "end": "1127280"
  },
  {
    "text": "had to roll it back to 1% of users right so the good news is we were able to do it very very quickly and we didn't break",
    "start": "1127280",
    "end": "1133880"
  },
  {
    "text": "production for very long but that was something where I learned the lesson that if we had have the option to roll",
    "start": "1133880",
    "end": "1139039"
  },
  {
    "text": "it to 5 or 10% before 50% maybe don't skip those steps from 1% to",
    "start": "1139039",
    "end": "1144960"
  },
  {
    "text": "50% so future flagging really gives you that power to feel more in control of",
    "start": "1144960",
    "end": "1150120"
  },
  {
    "start": "1145000",
    "end": "1313000"
  },
  {
    "text": "your code So speaking of being in control of your code let's talk about the fifth secret which is code",
    "start": "1150120",
    "end": "1156640"
  },
  {
    "text": "ownership now a lot of people have talked about this idea of you build it you run it and I think that it's valid",
    "start": "1156640",
    "end": "1163760"
  },
  {
    "text": "to say that teams ought to run their own code in production but I think one of the things that we've gotten wrong in",
    "start": "1163760",
    "end": "1170320"
  },
  {
    "text": "terms of this messaging is being way too prescriptive about it and saying you know Thou shalt carry a pager for thy",
    "start": "1170320",
    "end": "1176159"
  },
  {
    "text": "code right like I don't think that that's necessarily quite as helpful if teams are not able to develop that",
    "start": "1176159",
    "end": "1182919"
  },
  {
    "text": "chared understanding of what's going on in production if you're afraid of production as it is because it's",
    "start": "1182919",
    "end": "1189240"
  },
  {
    "text": "unreliable and it's breaking all the time and you don't have the right mental model of what's going on to feel safe making",
    "start": "1189240",
    "end": "1194760"
  },
  {
    "text": "changes I'm not going to hand you a hot pag and say say congratulations have fun",
    "start": "1194760",
    "end": "1200159"
  },
  {
    "text": "feedback loops will just make you fix it better right like that's not actually how this works when you give people a",
    "start": "1200159",
    "end": "1206320"
  },
  {
    "text": "hot pager and they're not prepared to deal with it then you're going to wind up having engineers get woken up all the",
    "start": "1206320",
    "end": "1213000"
  },
  {
    "text": "time they're going to eventually shut off the pager they might resign from the team that's not a situation that benefits",
    "start": "1213000",
    "end": "1219679"
  },
  {
    "text": "anyone and even if you have one person on a team who says yes I feel",
    "start": "1219679",
    "end": "1224840"
  },
  {
    "text": "comfortable charging ahead and running production that doesn't mean everyone else on the team has been brought along",
    "start": "1224840",
    "end": "1229960"
  },
  {
    "text": "with them so how do we ensure that that knowledge is better spread out how do we make sure that people are able to safely",
    "start": "1229960",
    "end": "1237320"
  },
  {
    "text": "move in production make smaller changes and feel like they own their software well one answer is start with you know",
    "start": "1237320",
    "end": "1243840"
  },
  {
    "text": "making your deploy more predictable start by making it so that every engineer who's working on the team is",
    "start": "1243840",
    "end": "1250080"
  },
  {
    "text": "comfortable rather than just that one hero because otherwise you're going to end up in a state of operational",
    "start": "1250080",
    "end": "1255960"
  },
  {
    "text": "overload or of too much technical debt where people feel like they have to maintain this system that they're barely",
    "start": "1255960",
    "end": "1263320"
  },
  {
    "text": "holding on to so we have to equip people to have the right models in their head",
    "start": "1263320",
    "end": "1269159"
  },
  {
    "text": "and to gather Knowledge from each other and to level up that skill set so they can feel comfortable working in",
    "start": "1269159",
    "end": "1275720"
  },
  {
    "text": "production and this is more of an investment in the people culture and process than in any one piece of",
    "start": "1275720",
    "end": "1282559"
  },
  {
    "text": "technology so when we slow down a bit and before hand hot pag asked the",
    "start": "1282559",
    "end": "1288600"
  },
  {
    "text": "question of have we satisfied some of these earlier constraints first right can people ship changes in a smaller",
    "start": "1288600",
    "end": "1295600"
  },
  {
    "text": "more blast radius uh friendly friendly manner can we make it so that people have more of a safe generative culture",
    "start": "1295600",
    "end": "1303080"
  },
  {
    "text": "then we can encourage knowledge hearing and get the team to be able to operate the service as an entire entity and not",
    "start": "1303080",
    "end": "1309840"
  },
  {
    "text": "just with one hero propping everyone up so that brings us to the six secret",
    "start": "1309840",
    "end": "1315240"
  },
  {
    "start": "1313000",
    "end": "1514000"
  },
  {
    "text": "which is about blameless culture right how do we make sure that we're developing a culture where we continuously learn lessons every time",
    "start": "1315240",
    "end": "1322200"
  },
  {
    "text": "something goes wrong it does not sense to shame people right I can't go and say",
    "start": "1322200",
    "end": "1327320"
  },
  {
    "text": "you know bente like how how dare you have have have broken production right do do you think she's she's going to you",
    "start": "1327320",
    "end": "1333679"
  },
  {
    "text": "know be be nice to me after that do you think that she's going to own up to you know her code breaking breaking",
    "start": "1333679",
    "end": "1339039"
  },
  {
    "text": "production probably not so we have to really build up everyone's confidence and make sure that people feel",
    "start": "1339039",
    "end": "1344799"
  },
  {
    "text": "comfortable engaging in asking questions to expand their knowledge right it's",
    "start": "1344799",
    "end": "1350440"
  },
  {
    "text": "okay to not know things as a relatively senior engineer in my company I think",
    "start": "1350440",
    "end": "1355559"
  },
  {
    "text": "that one of the best things I can do to model humility is to always feel comfortable asking the so-called stupid",
    "start": "1355559",
    "end": "1362080"
  },
  {
    "text": "questions because there are genuinely areas of the codebase that I don't know well and if I don't know them well right",
    "start": "1362080",
    "end": "1369080"
  },
  {
    "text": "no one else should be expected to know them and therefore doesn't make sense to have people feel ashamed to ask like hey",
    "start": "1369080",
    "end": "1375520"
  },
  {
    "text": "what's that service for or how does that work or can you you walk me through how you do this",
    "start": "1375520",
    "end": "1380679"
  },
  {
    "text": "process we also have to rehearse right we have to do game days we have to do disaster drills we have to make sure",
    "start": "1380679",
    "end": "1386520"
  },
  {
    "text": "that we are continuously practicing things before we put them into production so we need to make sure that",
    "start": "1386520",
    "end": "1393039"
  },
  {
    "text": "we understand how does the instant management process at my company work or what happens if this particular class of",
    "start": "1393039",
    "end": "1400520"
  },
  {
    "text": "uh Services goes down and how do we make sure that we are evenly Distributing this knowledge among",
    "start": "1400520",
    "end": "1406120"
  },
  {
    "text": "the team how do we make sure that people are comfortable escalating when they need to but also to gradually over time",
    "start": "1406120",
    "end": "1413279"
  },
  {
    "text": "minimize the number of escalations by making that everything that people need to know is either discoverable from",
    "start": "1413279",
    "end": "1419559"
  },
  {
    "text": "observability or something that's written down in the playbooks so that means that we have to",
    "start": "1419559",
    "end": "1425559"
  },
  {
    "text": "solve this problem where people feel like you know their job security is tied up in the number of people who are queued up outside their door waiting to",
    "start": "1425559",
    "end": "1431799"
  },
  {
    "text": "ask them a question right in fact we are doing a better job as staff and",
    "start": "1431799",
    "end": "1437080"
  },
  {
    "text": "principal engineers if we're sharing that knowledge out so that anyone on our team feels comfortable making changes on",
    "start": "1437080",
    "end": "1442360"
  },
  {
    "text": "their own without having to consult us right we shouldn't be gatekeeping production or gatekeeping",
    "start": "1442360",
    "end": "1448080"
  },
  {
    "text": "architecture so this means that we have to have a culture of thinking people for",
    "start": "1448080",
    "end": "1453120"
  },
  {
    "text": "asking questions for really rewarding people for their curiosity and for working together rather than kind of",
    "start": "1453120",
    "end": "1458840"
  },
  {
    "text": "being the lone cowboy who goes out and fixes production and yes tooling can help",
    "start": "1458840",
    "end": "1464840"
  },
  {
    "text": "after culture is solid but you're not going to tooling to fix a broken team right so when you're learning from your",
    "start": "1464840",
    "end": "1472279"
  },
  {
    "text": "incidents you know yes you could you should start by first making sure that people even feel safe talk speaking up",
    "start": "1472279",
    "end": "1478799"
  },
  {
    "text": "and raising their hands and saying you know yes I triggered that outage and then you can start writing down those",
    "start": "1478799",
    "end": "1485000"
  },
  {
    "text": "lessons there are templates from the Google S3 book for instance about how to do a manual retrospective and then in",
    "start": "1485000",
    "end": "1490919"
  },
  {
    "text": "order to systematize it there are plenty of tools that are out there that will help you learn from incidence at scale",
    "start": "1490919",
    "end": "1496240"
  },
  {
    "text": "tools like blameless or jelly or fire hydrant really help you with that process of getting those insights out of",
    "start": "1496240",
    "end": "1502840"
  },
  {
    "text": "people's heads and onto paper where you can understand how to improve your systems based off of what went wrong during incidents and not just improve",
    "start": "1502840",
    "end": "1510320"
  },
  {
    "text": "your Technical Systems but improve the way that your teams collaborate so the seven secret that I",
    "start": "1510320",
    "end": "1516520"
  },
  {
    "start": "1514000",
    "end": "1896000"
  },
  {
    "text": "have for you is about service Lev objectives how do we make sure that we are appropriately measuring the level of",
    "start": "1516520",
    "end": "1524880"
  },
  {
    "text": "reliability that our customers are seeing how are we making sure that our customers are having a good experience",
    "start": "1524880",
    "end": "1530080"
  },
  {
    "text": "in production so that's what the uh shirt says if you if you liked it you should have put an SLO on it uh shout out to",
    "start": "1530080",
    "end": "1537320"
  },
  {
    "text": "Beyonce um so the the point here is that we have to think about what are the",
    "start": "1537320",
    "end": "1542559"
  },
  {
    "text": "critical user Journeys right what are customers trying to do with our software and how do we know if they're being",
    "start": "1542559",
    "end": "1549039"
  },
  {
    "text": "successful so service level indicators and service level objectives are this tool that helps us get on the same page",
    "start": "1549039",
    "end": "1554960"
  },
  {
    "text": "with our customers and our product managers about what's going on with our user happiness so in order to measure a",
    "start": "1554960",
    "end": "1561480"
  },
  {
    "text": "service level objective we have to think about how do we you know what how do we identify those critical user Journey",
    "start": "1561480",
    "end": "1567799"
  },
  {
    "text": "events right how does that turn up in the Telemetry in our observability tooling and then what are the relevant",
    "start": "1567799",
    "end": "1574240"
  },
  {
    "text": "elements of context around them right user IDs uh build IDs uh latency baby uh",
    "start": "1574240",
    "end": "1581120"
  },
  {
    "text": "request ID right like these are all important things that we need to know in order to be able to both measure and debug our service level objectives",
    "start": "1581120",
    "end": "1589440"
  },
  {
    "text": "and at the end of the day we need to know you know is this event good or bad right like is this transaction something",
    "start": "1589440",
    "end": "1594880"
  },
  {
    "text": "that met the users expectations or is it something that maybe might have disappointed them so for instance maybe",
    "start": "1594880",
    "end": "1601000"
  },
  {
    "text": "you know if I were to click next slide right now and it took 500 milliseconds or a th000 milliseconds maybe that's not",
    "start": "1601000",
    "end": "1607080"
  },
  {
    "text": "such a good thing right that's a sign that my expectations of a customer are not being met so we have to think about",
    "start": "1607080",
    "end": "1614039"
  },
  {
    "text": "you know what is the critical thing that causes a user to feel like yes I had a smooth experience or that was a little",
    "start": "1614039",
    "end": "1620960"
  },
  {
    "text": "bit too slow so when we think about that threshold right like that's something",
    "start": "1620960",
    "end": "1626279"
  },
  {
    "text": "where user research can really help us to understand you know if it's an e-commerce site you might expect that",
    "start": "1626279",
    "end": "1632200"
  },
  {
    "text": "paying with a credit card might take significantly longer than adding an item",
    "start": "1632200",
    "end": "1637240"
  },
  {
    "text": "to a shopping cart where you you want adding an item to a shopping cart to be very fast but people have an expectation",
    "start": "1637240",
    "end": "1642760"
  },
  {
    "text": "that payments are not instantaneous so kind of figuring out for each event what makes it successful",
    "start": "1642760",
    "end": "1649679"
  },
  {
    "text": "or not and then calculating the availability based off of that what's the number of good events divided by the number of eligible events side note why",
    "start": "1649679",
    "end": "1657000"
  },
  {
    "text": "did I say eligible events and not all events the answer is all events are going to be too inclusive it'll include",
    "start": "1657000",
    "end": "1663440"
  },
  {
    "text": "things that are out of scope it might include things like uh traffic from your",
    "start": "1663440",
    "end": "1668840"
  },
  {
    "text": "uh load testing tools uh traffic from health checks traffic from your local Friendly Neighborhood botnet those are",
    "start": "1668840",
    "end": "1674840"
  },
  {
    "text": "things that you want to exclude from your service level objective you only want want to include the things that are relevant customer Journeys that are",
    "start": "1674840",
    "end": "1681320"
  },
  {
    "text": "actual real customer Journeys so once we have those metrics and we can say okay how long are we",
    "start": "1681320",
    "end": "1687960"
  },
  {
    "text": "measuring them over and what Target percentage should should we be aiming for so when we're talking about a window",
    "start": "1687960",
    "end": "1695880"
  },
  {
    "text": "um you know my customers would laugh at me right if I came if I came to you and I said guess what honeycom was 100% down",
    "start": "1695880",
    "end": "1702600"
  },
  {
    "text": "yesterday don't worry we're 100% up today right like you'd laugh me out of the room right so we have to think about",
    "start": "1702600",
    "end": "1709000"
  },
  {
    "text": "that kind of longer time scale of how do we measure reliability availability and so forth over a period of weeks if not",
    "start": "1709000",
    "end": "1716080"
  },
  {
    "text": "months right so 30 days is not a bad default in terms of people will",
    "start": "1716080",
    "end": "1721200"
  },
  {
    "text": "generally forgive you for having an outage 30 days ago but they're not going to forgive you having an outage every",
    "start": "1721200",
    "end": "1726720"
  },
  {
    "text": "other day so pick an appropriate window and also pick an appropriate Target",
    "start": "1726720",
    "end": "1732760"
  },
  {
    "text": "percentage so why do I say you know appropriate targets per percentage why",
    "start": "1732760",
    "end": "1737840"
  },
  {
    "text": "not 100% and the answer is that uh 100% is just not realistic right like we have",
    "start": "1737840",
    "end": "1743039"
  },
  {
    "text": "to pick something that's actually meaningful and relevant to our users uh so for instance my cell phone",
    "start": "1743039",
    "end": "1749480"
  },
  {
    "text": "was just sitting right there somewhere um my cell phone is probably about only",
    "start": "1749480",
    "end": "1754799"
  },
  {
    "text": "99.95% available right like it sometimes doesn't get service like I turned my phone on yesterday when I got into the",
    "start": "1754799",
    "end": "1761120"
  },
  {
    "text": "into the Copenhagen airport and it took about you know half an hour or so to establish service right so it turns out",
    "start": "1761120",
    "end": "1767799"
  },
  {
    "text": "that users do not anticipate that every single service is going to be 100% available and even if they did they'd be",
    "start": "1767799",
    "end": "1773880"
  },
  {
    "text": "wrong because they have other dependencies in the chain that are going to be less than 100% available so you",
    "start": "1773880",
    "end": "1779760"
  },
  {
    "text": "can only be as reliable as you know the connection that a user is connecting to you on so don't aim for 100% pick",
    "start": "1779760",
    "end": "1786440"
  },
  {
    "text": "something that's cheaper to run and what is having a Target that's less than 100% let you do it lets you",
    "start": "1786440",
    "end": "1793360"
  },
  {
    "text": "have an error budget it lets you say this is the amount of allowed and availability that I'm allowed to have",
    "start": "1793360",
    "end": "1799279"
  },
  {
    "text": "and how long is it until I run out so for instance if I have a million",
    "start": "1799279",
    "end": "1804440"
  },
  {
    "text": "requests that are coming in per week and I'm aiming for 99.9% availability that",
    "start": "1804440",
    "end": "1811039"
  },
  {
    "text": "means one and a thousand of those are allowed to fail which means that I'm allowed to have a thousand bad requests",
    "start": "1811039",
    "end": "1817080"
  },
  {
    "text": "out of the million per week so if I'm burning through 100 bad requests per",
    "start": "1817080",
    "end": "1823320"
  },
  {
    "text": "hour that means that I'm going to run through my error budget in a matter of hours if I'm only having 10 bad requests",
    "start": "1823320",
    "end": "1830600"
  },
  {
    "text": "per hour I have I have 100 hours until I run out of my error budget right so this lets me have a sense of urgency of",
    "start": "1830600",
    "end": "1836799"
  },
  {
    "text": "prioritization and that enables me to no longer treat every single error as a",
    "start": "1836799",
    "end": "1842000"
  },
  {
    "text": "paging emergency instead it lets me say I want to have a little bit more",
    "start": "1842000",
    "end": "1847200"
  },
  {
    "text": "sophisticated of an idea of how to measure and fix my",
    "start": "1847200",
    "end": "1852240"
  },
  {
    "text": "services so observability works really well with this because you're Gathering",
    "start": "1852240",
    "end": "1857919"
  },
  {
    "text": "the data from your services about what the performance is about kind of what what makes your services more or less",
    "start": "1857919",
    "end": "1864720"
  },
  {
    "text": "reliable so it's best to align your observability and your service level objectives in the same tooling or at",
    "start": "1864720",
    "end": "1870960"
  },
  {
    "text": "least to have the two tools talking to each other so many folks that I know wind up using a tool like noble n or",
    "start": "1870960",
    "end": "1877080"
  },
  {
    "text": "blameless um but many of the observability tooling including uh Yours Truly we support kind of measuring",
    "start": "1877080",
    "end": "1883240"
  },
  {
    "text": "service level objectives in the tooling itself so that you can really kind of get to okay my service level objec is",
    "start": "1883240",
    "end": "1889240"
  },
  {
    "text": "burning why what events are most correlated with that service level objec",
    "start": "1889240",
    "end": "1894399"
  },
  {
    "text": "going off okay so let's talk about the eth secret which is chaos engineering so",
    "start": "1894399",
    "end": "1901159"
  },
  {
    "start": "1896000",
    "end": "2128000"
  },
  {
    "text": "once we have a solid grass on those first seven things one of the things that we can do is really start testing",
    "start": "1901159",
    "end": "1906320"
  },
  {
    "text": "our assumptions about what holds true about our system and I alluded to that earlier in terms of safe uh what I was",
    "start": "1906320",
    "end": "1912080"
  },
  {
    "text": "talking about feature Flags right if your blast radius is smaller you can test smaller parts of your your system",
    "start": "1912080",
    "end": "1918279"
  },
  {
    "text": "without running the risk of breaking everything so when we have sufficient",
    "start": "1918279",
    "end": "1923399"
  },
  {
    "text": "error budget left right obviously if your system is already so on fire that you're breaking your service level",
    "start": "1923399",
    "end": "1929720"
  },
  {
    "text": "objectives all the time you have plenty to work on right like fix those things first before you move on to doing cast",
    "start": "1929720",
    "end": "1935840"
  },
  {
    "text": "engineering but once your system is reliably and repeatedly running better than your target then use that leftover",
    "start": "1935840",
    "end": "1942760"
  },
  {
    "text": "Target either to speed up your Innovation or to make sure that to invest to make sure that you're going to",
    "start": "1942760",
    "end": "1948279"
  },
  {
    "text": "be able to achieve that reliability the next month and the next month after that so how do we do that we run careful",
    "start": "1948279",
    "end": "1955080"
  },
  {
    "text": "targeted and controlled experiments with learning objectives in mind and psychological safety right it has to be",
    "start": "1955080",
    "end": "1961919"
  },
  {
    "text": "safe to break production and to learn from it and roll it back rather than have people ask you like why did you",
    "start": "1961919",
    "end": "1968159"
  },
  {
    "text": "break production right if you break production but only to a small extent that means that you're still within your",
    "start": "1968159",
    "end": "1974000"
  },
  {
    "text": "surface level objective and you've learned something before it broke broke 100% of production sometime down the",
    "start": "1974000",
    "end": "1979840"
  },
  {
    "text": "road that's not to say that you should just go around breaking things at random right it's important to make sure that",
    "start": "1979840",
    "end": "1985519"
  },
  {
    "text": "you have a hypothesis in mind something that you want to test and some kind of success or failure Criterion for the",
    "start": "1985519",
    "end": "1993600"
  },
  {
    "text": "experiment so safety comes in two parts as I was just saying right it's the psychological safety of knowing that if",
    "start": "1993600",
    "end": "1999240"
  },
  {
    "text": "your experiment goes wrong that's success as well right you've learned something that you need to fix before you can try again and also there's a",
    "start": "1999240",
    "end": "2007360"
  },
  {
    "text": "technical Safeguard right like we need to make sure that we have containments that we can quickly turn off misbehaving",
    "start": "2007360",
    "end": "2012880"
  },
  {
    "text": "experiments and make sure that they're contained to a smaller area of production so the best way I recommend",
    "start": "2012880",
    "end": "2018639"
  },
  {
    "text": "to get started with chaos engineering is to restart one server and one service at a time right so don't necessarily move",
    "start": "2018639",
    "end": "2024919"
  },
  {
    "text": "immediately to I want to try failing 50% of requests in this availability zone",
    "start": "2024919",
    "end": "2030159"
  },
  {
    "text": "right start by just saying can we tolerate having kubernetes replace one node right can we actually test whether",
    "start": "2030159",
    "end": "2036559"
  },
  {
    "text": "that works without dropping any requests and better yet we should be doing this when everyone is at work",
    "start": "2036559",
    "end": "2043200"
  },
  {
    "text": "rather than when people are asleep because if you do it when people are asleep there's fewer hands around to",
    "start": "2043200",
    "end": "2048720"
  },
  {
    "text": "help out in case of a problem and the more knowledge you're able to bring to bear on a problem and the more that",
    "start": "2048720",
    "end": "2055280"
  },
  {
    "text": "everyone can participate in experiment and learn together the more that you're going to wind up learning from it rather",
    "start": "2055280",
    "end": "2061440"
  },
  {
    "text": "than having the lessons evaporate in The Ether and when things do go wrong or",
    "start": "2061440",
    "end": "2067079"
  },
  {
    "text": "something goes unexpectedly that's fine because if you've invested in observability that means that you'll be",
    "start": "2067079",
    "end": "2072320"
  },
  {
    "text": "able to figure out why did the experiment not go according to plan and how can I repeat it next time and be",
    "start": "2072320",
    "end": "2077480"
  },
  {
    "text": "sure that it's going to work correctly so one thing that you can do",
    "start": "2077480",
    "end": "2083000"
  },
  {
    "text": "after you've kind of run those simple experiments of for instance restarting one server one service at a time",
    "start": "2083000",
    "end": "2088599"
  },
  {
    "text": "manually is then you can start asking questions like okay how do I make my service resilient to being disrupted up",
    "start": "2088599",
    "end": "2095158"
  },
  {
    "text": "to 10 times per hour how do I actually verify that if I restart my service 8",
    "start": "2095159",
    "end": "2100359"
  },
  {
    "text": "times per hour that it works correctly so this is where kind of design and Automation and tooling can really help",
    "start": "2100359",
    "end": "2105560"
  },
  {
    "text": "us so there are tools such as Gremlin and Vera that offer chaos as a service",
    "start": "2105560",
    "end": "2111079"
  },
  {
    "text": "but it's important to only do those things after you've first done manual game days after you've first verified",
    "start": "2111079",
    "end": "2118240"
  },
  {
    "text": "that you can run those manual experiments and then start continuously rolling them out through the fleet or",
    "start": "2118240",
    "end": "2124480"
  },
  {
    "text": "rolling them out in a more programmatic way so the first eight things I think are",
    "start": "2124480",
    "end": "2130839"
  },
  {
    "start": "2128000",
    "end": "2531000"
  },
  {
    "text": "lessons that you can take and apply to your own engineering team but wouldn't it be nice if every team at your company",
    "start": "2130839",
    "end": "2138040"
  },
  {
    "text": "didn't have to reinvent and relearn all eight of those things each time on their own so this is where I think the role of",
    "start": "2138040",
    "end": "2145320"
  },
  {
    "text": "platform engineering and platform teams really really comes in because it is important for software",
    "start": "2145320",
    "end": "2152040"
  },
  {
    "text": "developers to write and own their code in production that is 100% true but they don't have to do that entirely on their",
    "start": "2152040",
    "end": "2159079"
  },
  {
    "text": "own you can offer them support and options to really help them figure out",
    "start": "2159079",
    "end": "2164240"
  },
  {
    "text": "what's the best way of doing things and to advance that state of practice across the entire company just as I was saying",
    "start": "2164240",
    "end": "2170680"
  },
  {
    "text": "earlier that you know you should bring the uh least uh experienced engineer on your team up to up to the level of the",
    "start": "2170680",
    "end": "2177319"
  },
  {
    "text": "best engineer on your team right to spread that knowledge out across across the engineers on one team we also should be thinking about",
    "start": "2177319",
    "end": "2184280"
  },
  {
    "text": "how do we spread those lessons out across multiple teams so that each team is learning from the other teams in the",
    "start": "2184280",
    "end": "2191000"
  },
  {
    "text": "business so what we do in platform engineering is to enable software development teams to write and own their",
    "start": "2191000",
    "end": "2197119"
  },
  {
    "text": "code in production and really Force multiplying them to give them a smoother development experience that is a little",
    "start": "2197119",
    "end": "2203280"
  },
  {
    "text": "bit more paved so that everyone is not having to to choose their own path through the",
    "start": "2203280",
    "end": "2209079"
  },
  {
    "text": "Wilderness so how is platform engineering different from Ops or devops or",
    "start": "2209079",
    "end": "2215040"
  },
  {
    "text": "SRE well you know back in the day operations engineering was the set of people who were carrying this Burning",
    "start": "2215040",
    "end": "2221359"
  },
  {
    "text": "pager right who who were responsible for running the production",
    "start": "2221359",
    "end": "2227079"
  },
  {
    "text": "operations but when we think about not just Ops but operations engineering as a",
    "start": "2227079",
    "end": "2232119"
  },
  {
    "text": "whole right like then maybe it relates to this idea of everyone on a team should be responsible for operational",
    "start": "2232119",
    "end": "2238400"
  },
  {
    "text": "excellence right that we're all doing engineering here so maybe we're all doing Ops but as it turns out as as we",
    "start": "2238400",
    "end": "2244640"
  },
  {
    "text": "just learned right like leaving teams to learn these lessons the hard way on their own it's like telling people you",
    "start": "2244640",
    "end": "2249800"
  },
  {
    "text": "know what I'm going to teach you to uh walk across coals have fun here's a bed of burning coals right like we don't do",
    "start": "2249800",
    "end": "2255960"
  },
  {
    "text": "that right like we need to make sure that we're offering people a smoother path so devops like I open the talk with",
    "start": "2255960",
    "end": "2263960"
  },
  {
    "text": "right like it's a set of cultur cultural philosophies and tools right like it's a set of mechanisms that tell us how",
    "start": "2263960",
    "end": "2270440"
  },
  {
    "text": "should we Aspire in terms of cultural values to be running teams to enable developers to self-improve Pro but again",
    "start": "2270440",
    "end": "2278920"
  },
  {
    "text": "it kind of doesn't really offer a paved path so this is where we had uh these",
    "start": "2278920",
    "end": "2284760"
  },
  {
    "text": "kind of two convergent movements right we had the devops movement that was kind of championed by some of the folks from",
    "start": "2284760",
    "end": "2289880"
  },
  {
    "text": "Etsy some of the folks who attended some of the uh ear when O'Reilly was running conferences some of the O'Reilly web",
    "start": "2289880",
    "end": "2295520"
  },
  {
    "text": "development conferences so that was devops and then in parallel s was this group of folks at Google who got",
    "start": "2295520",
    "end": "2302119"
  },
  {
    "text": "together to kind of imagine what it would be like to run a sofware systems",
    "start": "2302119",
    "end": "2307200"
  },
  {
    "text": "with software to really develop uh develop that software engineering",
    "start": "2307200",
    "end": "2312280"
  },
  {
    "text": "expertise and to bring it to operations and when we finally kind of",
    "start": "2312280",
    "end": "2317359"
  },
  {
    "text": "had this open exchange of ideas between the S and devops ecosystem in the mid-20s we really were able to",
    "start": "2317359",
    "end": "2323119"
  },
  {
    "text": "crystalize that s was one very opinionated implementation of devops that it aspired to all the principles",
    "start": "2323119",
    "end": "2328359"
  },
  {
    "text": "that devops did but had very specific prescriptive mechanisms instead of saying generally you should measure things we said you must have slos you",
    "start": "2328359",
    "end": "2335560"
  },
  {
    "text": "must measure the amount of toil or break fix work on your team but s is not",
    "start": "2335560",
    "end": "2340640"
  },
  {
    "text": "necessarily the only way of doing these things and today I wouldn't necessarily tell people you know go pick up the S",
    "start": "2340640",
    "end": "2346599"
  },
  {
    "text": "book and thumb through it and you know copy paste it onto your teams right like that doesn't really work that doesn't work even at Google to kind of copy",
    "start": "2346599",
    "end": "2352839"
  },
  {
    "text": "paste the Google s way so crucially I think all of these things assumed some",
    "start": "2352839",
    "end": "2358760"
  },
  {
    "text": "kind of split between development and operations right even at Google right like you know the S sure we said you",
    "start": "2358760",
    "end": "2365200"
  },
  {
    "text": "know the amount of s oil is capped at 50% and anything that exceeds that goes to the devs but there are still kind of",
    "start": "2365200",
    "end": "2371839"
  },
  {
    "text": "more Dev more Dev Focus teams and more s operationally focused teams right like there there's kind of this split across",
    "start": "2371839",
    "end": "2377720"
  },
  {
    "text": "a divide so what if we didn't have that divide so it's important to emphasize",
    "start": "2377720",
    "end": "2383960"
  },
  {
    "text": "that platform engineering should not just be another rename of the op so why is this well platform teams",
    "start": "2383960",
    "end": "2391760"
  },
  {
    "text": "what we do is we work higher up the stack than operations or or devop schams",
    "start": "2391760",
    "end": "2396800"
  },
  {
    "text": "right what we're focusing on doing is to bring together the right set of tooling",
    "start": "2396800",
    "end": "2401920"
  },
  {
    "text": "some of it may be implemented inhouse some of it brought in from open source and some of it brought in from vendors right the key thing here is to develop",
    "start": "2401920",
    "end": "2409920"
  },
  {
    "text": "this kind of default stack of how do we Implement those first eight things",
    "start": "2409920",
    "end": "2415079"
  },
  {
    "text": "what's our standard way in the organization how do we make it as easy as possible for people to",
    "start": "2415079",
    "end": "2420720"
  },
  {
    "text": "adopt and one implementation of that for instance is when we talk about observability right maybe instead of",
    "start": "2420720",
    "end": "2427079"
  },
  {
    "text": "saying you know what the platform team is responsible for running our Prometheus and running gra maybe instead",
    "start": "2427079",
    "end": "2433520"
  },
  {
    "text": "the observability team should focus on figuring out what are instrumentation standards what are semantic conventions",
    "start": "2433520",
    "end": "2440160"
  },
  {
    "text": "what are these fields named how do we make sure that observability automatic instrumentation is built into the",
    "start": "2440160",
    "end": "2445920"
  },
  {
    "text": "libraries that everyone builds with so instead of just you being the sync where people send whatever logging data they",
    "start": "2445920",
    "end": "2452319"
  },
  {
    "text": "have and you're you know fighting people off with a stick telling them no don't log that no don't log that it's going to C to much maybe instead the right thing",
    "start": "2452319",
    "end": "2459760"
  },
  {
    "text": "for a plat team that's do aint on observability to do is to figure out",
    "start": "2459760",
    "end": "2466160"
  },
  {
    "text": "okay how do we make this integrate with our vendors as smoothly as possible and give teams good standards and guard",
    "start": "2466160",
    "end": "2471880"
  },
  {
    "text": "rails so they can achieve appropriate observability on their own in general right like our goal is to",
    "start": "2471880",
    "end": "2478319"
  },
  {
    "text": "make it easy and fast to do the right stuff and hard to do the wrong stuff so",
    "start": "2478319",
    "end": "2483560"
  },
  {
    "text": "the more friction that we take away from our teams the less temp they're going to be to kind of develop their own inhouse",
    "start": "2483560",
    "end": "2490280"
  },
  {
    "text": "it so when you do this higher order work and force multiplying this doesn't only",
    "start": "2490280",
    "end": "2495920"
  },
  {
    "text": "extend to reliability this also means that you can have security and compliance be part of your platform team",
    "start": "2495920",
    "end": "2502560"
  },
  {
    "text": "that you can start to take on things like you know hey we'd like to make sure that you know we're handling our",
    "start": "2502560",
    "end": "2507880"
  },
  {
    "text": "patching across the board right or let's let's make sure that we are all running the same version of react or we're all",
    "start": "2507880",
    "end": "2514160"
  },
  {
    "text": "running the same version of of nodejs right right and we can focus on performance engineering the more",
    "start": "2514160",
    "end": "2519760"
  },
  {
    "text": "performance critical parts of our stack and otherwise identifying which teams need the most help and then going out",
    "start": "2519760",
    "end": "2525839"
  },
  {
    "text": "and helping them so that our entire organization is leveling up at the same time so that's how you build a winning",
    "start": "2525839",
    "end": "2533280"
  },
  {
    "start": "2531000",
    "end": "2559000"
  },
  {
    "text": "team is these eight initial things plus adopting platform uh engineering teams",
    "start": "2533280",
    "end": "2539680"
  },
  {
    "text": "to help us tie it all together and develop paved paths and systematizing everything so entire or organization has",
    "start": "2539680",
    "end": "2547440"
  },
  {
    "text": "a stable platform to build on and everyone knows exactly what they should be doing to own their own software and",
    "start": "2547440",
    "end": "2554000"
  },
  {
    "text": "production enabled by the platform so that's what I have for you today thank you very much and feel free",
    "start": "2554000",
    "end": "2560680"
  },
  {
    "start": "2559000",
    "end": "2587000"
  },
  {
    "text": "to check out uh this blog post written by my uh colleague Jessica care which talks about how platform engineering and",
    "start": "2560680",
    "end": "2567680"
  },
  {
    "text": "observability relate to the Dora metrics thank you very [Applause]",
    "start": "2567680",
    "end": "2575160"
  },
  {
    "text": "much",
    "start": "2575160",
    "end": "2578160"
  }
]