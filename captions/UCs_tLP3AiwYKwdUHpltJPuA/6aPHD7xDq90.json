[
  {
    "start": "0",
    "end": "68000"
  },
  {
    "text": "I want to talk to you today about real time Cassandra so I'm gonna start off",
    "start": "10320",
    "end": "17779"
  },
  {
    "text": "from a completely abstract beginning thinking about real time what is real",
    "start": "17779",
    "end": "24660"
  },
  {
    "text": "time what our people want house in real time what do they mean not until my Cassandra at all just what we might want",
    "start": "24660",
    "end": "31169"
  },
  {
    "text": "and I'm gonna think what that means for your database how are you how do you store your data how should your your",
    "start": "31169",
    "end": "37890"
  },
  {
    "text": "database perform to give you those aspects of real time and then I'm gonna",
    "start": "37890",
    "end": "43890"
  },
  {
    "text": "show how I Cassandra has a lot of those properties for real time waste we built",
    "start": "43890",
    "end": "49980"
  },
  {
    "text": "for real time applications or concrete talked about a little bit about some of",
    "start": "49980",
    "end": "56160"
  },
  {
    "text": "the internals of Cassandra and why it's really good choice for a real time application and then yeah a bit about",
    "start": "56160",
    "end": "62940"
  },
  {
    "text": "how you actually write a real time application on top of Cassandra so yeah",
    "start": "62940",
    "end": "69180"
  },
  {
    "start": "68000",
    "end": "155000"
  },
  {
    "text": "I almost start by asking the question what is real time everyone uses the word",
    "start": "69180",
    "end": "74400"
  },
  {
    "text": "or what the hell does it mean so I googled it as you do and you've got you",
    "start": "74400",
    "end": "80159"
  },
  {
    "text": "there's there some sort of different kind of answers there's some that give you a time like me seconds or",
    "start": "80159",
    "end": "86600"
  },
  {
    "text": "microseconds there's some that say immediately don't know what that means",
    "start": "86600",
    "end": "91860"
  },
  {
    "text": "but presumably that's fairly quick someone says it should be predictable yeah you probably wanted to be",
    "start": "91860",
    "end": "97200"
  },
  {
    "text": "reasonably predictable no maybe you know it's going to be less than a second and that's all you care about but you can never be more than a second yeah that's",
    "start": "97200",
    "end": "104610"
  },
  {
    "text": "useful too so yeah one of these things actually me so just before I try and",
    "start": "104610",
    "end": "112380"
  },
  {
    "text": "answer that question just sort of what what things mean you may be familiar with one real time so one is this sort",
    "start": "112380",
    "end": "118799"
  },
  {
    "text": "of web analytics thing where you're looking at who's on your site now what does now me know you're not gonna find",
    "start": "118799",
    "end": "124710"
  },
  {
    "text": "this someone's access to your site you know in nanosecond ago in Australia because it's speed of light doesn't even",
    "start": "124710",
    "end": "129989"
  },
  {
    "text": "let you let you find that out so it's not sort of now it's maybe in the last second another thing is stock prices so",
    "start": "129989",
    "end": "136890"
  },
  {
    "text": "if your trader sitting in the bin let's knock each danger somewhere you want to know what the price is now you",
    "start": "136890",
    "end": "142019"
  },
  {
    "text": "don't want that to be old because then you'll make a bad decision but of course it's not now maybe in the city maybe",
    "start": "142019",
    "end": "147629"
  },
  {
    "text": "it's like a few microseconds old that's that's pretty quick so maybe that's what maybe in very real time matters and what",
    "start": "147629",
    "end": "156180"
  },
  {
    "start": "155000",
    "end": "205000"
  },
  {
    "text": "sort of what sort of queries do we actually do so I'll talk about how these queries actually work later they're just",
    "start": "156180",
    "end": "162360"
  },
  {
    "text": "some sort of query that you may want the answer to in real time is give me something his is a key give me a value or you know",
    "start": "162360",
    "end": "169860"
  },
  {
    "text": "give me the stock price okay you want that to happen quickly or you may want a range of things give me",
    "start": "169860",
    "end": "175530"
  },
  {
    "text": "everything between a and D versus a or you may want to know stuff about something like how many of these things",
    "start": "175530",
    "end": "182549"
  },
  {
    "text": "are there give me that answer quickly what is the top ten people visiting my",
    "start": "182549",
    "end": "187680"
  },
  {
    "text": "website or top 10 countries visiting my website now give me that answer or how",
    "start": "187680",
    "end": "192900"
  },
  {
    "text": "many unique visitors have I had in the last hour give me that answer quickly questions like this are things that",
    "start": "192900",
    "end": "197970"
  },
  {
    "text": "people want to know quick okay so now I'm going to go and answer what I mean",
    "start": "197970",
    "end": "203069"
  },
  {
    "text": "by real time it's on a mathematician by the way I'm sorry about formality of",
    "start": "203069",
    "end": "208440"
  },
  {
    "start": "205000",
    "end": "315000"
  },
  {
    "text": "this is not going to be fall for the rest of it so so what I think we all time people mean by real time is how",
    "start": "208440",
    "end": "216030"
  },
  {
    "text": "long it takes you to get the answer so if you're asking for something enormous like a movie you want it to",
    "start": "216030",
    "end": "225569"
  },
  {
    "text": "start downloading quickly and then it downloads a two megabytes a second then you get it in half an hour",
    "start": "225569",
    "end": "231169"
  },
  {
    "text": "I'd say that's real time for my movie if it took like six months to get it and that's pretty slow okay so if you asked",
    "start": "231169",
    "end": "237510"
  },
  {
    "text": "for a stock price that means it's gonna have to come really quickly so the reason why I'm saying I'm making this",
    "start": "237510",
    "end": "242579"
  },
  {
    "text": "definition like that it's so that so the more you ask all along is going to take",
    "start": "242579",
    "end": "248730"
  },
  {
    "text": "if he wants me for the stock price history for every single stop in for the last ten years you still want to know",
    "start": "248730",
    "end": "255900"
  },
  {
    "text": "that quickly because I'm going to make some calculation based on it but I can't give it to you in a microsecond because",
    "start": "255900",
    "end": "260970"
  },
  {
    "text": "it's just gonna take my beauty than that so let's limit it by the network which is the thing that's",
    "start": "260970",
    "end": "266880"
  },
  {
    "text": "actually you've got to be limited by the network so let's let's use that as our",
    "start": "266880",
    "end": "271950"
  },
  {
    "text": "limiting thing and if we much slower than that then we're in trouble so so so",
    "start": "271950",
    "end": "279240"
  },
  {
    "text": "yeah so the the real time the sort of time scales were talking about is how long it takes me to get a network so",
    "start": "279240",
    "end": "285900"
  },
  {
    "text": "there's so for small things there's a sort of there's a round-trip time there's a pain of like a few milliseconds maybe if it's over the",
    "start": "285900",
    "end": "292050"
  },
  {
    "text": "Internet and yet this thing no query can take less time than it takes you to receive",
    "start": "292050",
    "end": "298020"
  },
  {
    "text": "it which is just office so I'm not really saying very much if it's reasonably obvious but I'm just trying to sort of formalize it to actually give",
    "start": "298020",
    "end": "305340"
  },
  {
    "text": "you a time scale and we're going to use this to deduce some some aspects of the",
    "start": "305340",
    "end": "312810"
  },
  {
    "text": "real-time solution must-have so some other reasons why I think this works",
    "start": "312810",
    "end": "319470"
  },
  {
    "text": "quite well is if you're on a faster network you probably expect a faster response so if you think back to the",
    "start": "319470",
    "end": "326190"
  },
  {
    "text": "first time you ever went online you're probably using a and a 14 point 4 K modem dial-up and in in your exec you a",
    "start": "326190",
    "end": "333990"
  },
  {
    "text": "minute to connect and then you go to a web page and live and the graphics come really slowly have these progressive jpg",
    "start": "333990",
    "end": "339210"
  },
  {
    "text": "thing as that gradually get better and better than it takes in 30 seconds just to get a small picture and like the",
    "start": "339210",
    "end": "344250"
  },
  {
    "text": "minutes load a webpage the first time you did that you probably thought wow that's really quick because before you",
    "start": "344250",
    "end": "349740"
  },
  {
    "text": "know you we've had to go and buy a book or whatever you know something that's very slow to find out something so then",
    "start": "349740",
    "end": "356100"
  },
  {
    "text": "you would have thought yeah that's pretty quick but now if you go to a web page and it takes you five seconds to download you think that's really",
    "start": "356100",
    "end": "362580"
  },
  {
    "text": "something they give up I'm not good at not getting useless so if you're in if you if you pay for space in the London",
    "start": "362580",
    "end": "369210"
  },
  {
    "text": "Stock Exchange just to get that microsecond pain then if it takes you a me second storm at much time you'll be",
    "start": "369210",
    "end": "375840"
  },
  {
    "text": "very upset to manual so so yes so so I think this is the sort of captures captures this",
    "start": "375840",
    "end": "381550"
  },
  {
    "text": "sort of growing towards real-time getting faster so let's have a look at",
    "start": "381550",
    "end": "389139"
  },
  {
    "start": "386000",
    "end": "461000"
  },
  {
    "text": "some implications of this and with an example so this is the question I want",
    "start": "389139",
    "end": "395439"
  },
  {
    "text": "to ask I want to get back the arm say in real time so how many page views have I had from France in the last 24 hours",
    "start": "395439",
    "end": "402840"
  },
  {
    "text": "okay so I want a number number say it's",
    "start": "402840",
    "end": "409900"
  },
  {
    "text": "like a medium it's not a very big map with some overhead some packet flow",
    "start": "409900",
    "end": "415479"
  },
  {
    "text": "information whatever maybe states a kilobyte of data or what I'm asking for and I've got a reasonably fast internet",
    "start": "415479",
    "end": "421300"
  },
  {
    "text": "connection so I didn't like my round-trip time is amazing yeah 10",
    "start": "421300",
    "end": "426969"
  },
  {
    "text": "megabit connection I can download kilobyte in about me something as well so the network traffic should take 2",
    "start": "426969",
    "end": "432729"
  },
  {
    "text": "milliseconds so the the database has got of the order of two milliseconds to",
    "start": "432729",
    "end": "437830"
  },
  {
    "text": "answer this question maybe it's gonna take five maybe ten but not 100 you know everybody had that constant that you",
    "start": "437830",
    "end": "443050"
  },
  {
    "text": "need to have that concert in there but that's less you probably want it to be smaller",
    "start": "443050",
    "end": "448080"
  },
  {
    "text": "certainly it's constant so if my traffic to my website goes up and up over you",
    "start": "448080",
    "end": "454180"
  },
  {
    "text": "know make it grows exponentially then in ten years time I ask this question it still needs to take two milliseconds that's a really important thing so let's",
    "start": "454180",
    "end": "462279"
  },
  {
    "start": "461000",
    "end": "507000"
  },
  {
    "text": "try and design a solution to do this so let's say I've got some log files let's",
    "start": "462279",
    "end": "467860"
  },
  {
    "text": "prep them for fr that work so say I mean",
    "start": "467860",
    "end": "475089"
  },
  {
    "text": "it's an hour something that means I've got about seven gigs of logs a day and I've got say one disk storing them on",
    "start": "475089",
    "end": "481569"
  },
  {
    "text": "it's gonna take seventy seconds to read that in so if I need to solve this in two milliseconds I don't have to have",
    "start": "481569",
    "end": "487120"
  },
  {
    "text": "all this in memory and a super fasty for you or a lot of disks or something and yes as my hit rate keeps on going up I",
    "start": "487120",
    "end": "494589"
  },
  {
    "text": "need to have more and more balance for my disk Morrible memories answer this question in a few",
    "start": "494589",
    "end": "500060"
  },
  {
    "text": "it's not gonna work place the solution just is not a real-time solution so",
    "start": "500060",
    "end": "507669"
  },
  {
    "start": "507000",
    "end": "556000"
  },
  {
    "text": "second solution is let's maintain a counter so every time this all goes to",
    "start": "507669",
    "end": "513680"
  },
  {
    "text": "our website I increment a counter so I say I have a counter per country hmm so",
    "start": "513680",
    "end": "518719"
  },
  {
    "text": "guess on UK comes in and that want to go for France Tom believe in that one and then what I want to find out how many",
    "start": "518719",
    "end": "525140"
  },
  {
    "text": "people from France through our just read the counter I get back an answer maybe I have to do a disappea a little bit of",
    "start": "525140",
    "end": "531860"
  },
  {
    "text": "computation but I can do it distinct in a few milliseconds so I can I can get the answer in a few milliseconds and I",
    "start": "531860",
    "end": "538310"
  },
  {
    "text": "can I can satisfy my my constraint for real time and yeah as the traffic goes",
    "start": "538310",
    "end": "544850"
  },
  {
    "text": "off my character doesn't get bigger so take up more space we're using more space so it works it works so this is a",
    "start": "544850",
    "end": "553700"
  },
  {
    "text": "this is a real time solution so to sort of generalize that a little bit a real",
    "start": "553700",
    "end": "560540"
  },
  {
    "start": "556000",
    "end": "651000"
  },
  {
    "text": "time solution can only read about as much data as it's going to send it's",
    "start": "560540",
    "end": "566870"
  },
  {
    "text": "breeding significantly more then it's just gonna take too long on a scale nastily with the amount of data so it",
    "start": "566870",
    "end": "573200"
  },
  {
    "text": "doesn't work so that means you need to pre compute some of these answers so that sounds bad because it means I mean",
    "start": "573200",
    "end": "580820"
  },
  {
    "text": "I don't know what question I want to ask well if you don't tell if you don't tell the database anything about the question",
    "start": "580820",
    "end": "586220"
  },
  {
    "text": "you want to ask then you just can't answer in real time and it's like if you don't remember to add your index into",
    "start": "586220",
    "end": "591410"
  },
  {
    "text": "Oracle then it's gonna do a table scan a fundamental fact he's got it's got to do",
    "start": "591410",
    "end": "596570"
  },
  {
    "text": "that so you any database you have to tell it something about the sort of queries you want to do and if you do",
    "start": "596570",
    "end": "602540"
  },
  {
    "text": "something outside of that it's going to be perfectly slow so yes you need to say something about putting them using the",
    "start": "602540",
    "end": "608240"
  },
  {
    "text": "answers but not everything you know you don't say I want to know the hits from France in the last 24 hours maybe you",
    "start": "608240",
    "end": "614240"
  },
  {
    "text": "maybe you say I just want to know the hits from any country in any time bucket",
    "start": "614240",
    "end": "621470"
  },
  {
    "text": "so then you could ask actually what was it what was it in the last minutes so you're not you not just maintain that",
    "start": "621470",
    "end": "627020"
  },
  {
    "text": "one number it's in the UN you have multiple ones you sort of have a versatile pattern for your queries maybe",
    "start": "627020",
    "end": "632390"
  },
  {
    "text": "you would do so it's not it's not a disaster but you do need to know something so yeah I see what you're",
    "start": "632390",
    "end": "639230"
  },
  {
    "text": "storing your your data how you're going to read it not how you write it that's the sort of shift from like",
    "start": "639230",
    "end": "646610"
  },
  {
    "text": "traditional databases to to to real-time things okay so the form you want to",
    "start": "646610",
    "end": "654200"
  },
  {
    "start": "651000",
    "end": "736000"
  },
  {
    "text": "twosies you just want to clarify a point that people get look a little people get confused back to this there's sort of",
    "start": "654200",
    "end": "659900"
  },
  {
    "text": "two times here one is how long does it take me to get the answer and one is how",
    "start": "659900",
    "end": "666410"
  },
  {
    "text": "old is the data that is being queried so so so maybe with those stock prices I",
    "start": "666410",
    "end": "672920"
  },
  {
    "text": "want to get the value now quickly you see there's two times there or maybe you",
    "start": "672920",
    "end": "678620"
  },
  {
    "text": "you want to get historical data maybe you want to say what was the price 24 hours ago you still want to get the",
    "start": "678620",
    "end": "685700"
  },
  {
    "text": "answer that quickly but it's old data so there's these two different times here and then people say real time they",
    "start": "685700",
    "end": "691910"
  },
  {
    "text": "generally mean both but it's not necessarily in the case so if it's if it's historical data for example you",
    "start": "691910",
    "end": "697190"
  },
  {
    "text": "could you could pre compute these answers you know you could you could run a Hadoop job every night to give you the answers to these things and then and",
    "start": "697190",
    "end": "705320"
  },
  {
    "text": "then you sort of query this summary which is that you that you could do that if you if you only want to read old data",
    "start": "705320",
    "end": "711020"
  },
  {
    "text": "but in general if you're if getting a quick response to a question is valuable",
    "start": "711020",
    "end": "716060"
  },
  {
    "text": "then then the value probably decays over time so you probably want to you",
    "start": "716060",
    "end": "721730"
  },
  {
    "text": "probably have some value in getting our answers about the current data as well so I'm gonna assume both aspects of the",
    "start": "721730",
    "end": "729140"
  },
  {
    "text": "real time here a valuable current data and getting a quick response for current and historical days okay so what are",
    "start": "729140",
    "end": "738470"
  },
  {
    "start": "736000",
    "end": "785000"
  },
  {
    "text": "some solutions to this you know we saw one solution the counters but let's let's talk a little bit more generally like that because",
    "start": "738470",
    "end": "744230"
  },
  {
    "text": "there's other sort of questions that we want to ask so the fundamental thing",
    "start": "744230",
    "end": "750200"
  },
  {
    "text": "I've constraints as you don't want to read more data than you have to do to get the ice so here's",
    "start": "750200",
    "end": "756320"
  },
  {
    "text": "his three things that you want to make sure you do so denormalization that basically means store the data in",
    "start": "756320",
    "end": "763280"
  },
  {
    "text": "the order that you're going to read it organization of data yet make sure your",
    "start": "763280",
    "end": "768770"
  },
  {
    "text": "data is organized indexed in the right way so that you don't have to go to a",
    "start": "768770",
    "end": "773840"
  },
  {
    "text": "table scan or whatever and use counters that we saw we sorted the counters as an",
    "start": "773840",
    "end": "779180"
  },
  {
    "text": "example there's other things too but these are sort of some some well-known techniques so the idea of",
    "start": "779180",
    "end": "787280"
  },
  {
    "text": "denormalization well it's most relevant for spinning discs but it's also rather",
    "start": "787280",
    "end": "792830"
  },
  {
    "text": "than for SSDs as well and even even memory because it's you know even random access in memory is not as quick as just",
    "start": "792830",
    "end": "799220"
  },
  {
    "text": "doing a big mental copy so that let's let's use disk because that's when it's when it's most obvious",
    "start": "799220",
    "end": "804980"
  },
  {
    "text": "so yeah this can read say 100 megabytes a second but they can only do 100 random",
    "start": "804980",
    "end": "810170"
  },
  {
    "text": "reads a second so if you've got your data I just spent randomly across the disk",
    "start": "810170",
    "end": "816050"
  },
  {
    "text": "you can only read 100 things a second which means effectively if you're gonna read a little bit of data you may as",
    "start": "816050",
    "end": "822890"
  },
  {
    "text": "well read a megabyte because it doesn't you've already you already see to that point so you may have what we need and",
    "start": "822890",
    "end": "829400"
  },
  {
    "text": "megabyte of data approximately 132 second so if you if you if you steep to",
    "start": "829400",
    "end": "835820"
  },
  {
    "text": "a point on the disk then you effectively read a megabyte so even if you're just reading one byte of data you've actually",
    "start": "835820",
    "end": "842000"
  },
  {
    "text": "better make one so that's gonna violate my constraint I've read much more data than I'm going to send out so seeking is",
    "start": "842000",
    "end": "848480"
  },
  {
    "text": "not allowed and not allowed to see very much receipt one once or twice but not per thing that we're going to send out",
    "start": "848480",
    "end": "855020"
  },
  {
    "text": "that's not gonna be real-time so so you",
    "start": "855020",
    "end": "860120"
  },
  {
    "text": "use the normalization which means the things that you want to read in anyone within one query is stored next to each",
    "start": "860120",
    "end": "866210"
  },
  {
    "text": "other on disk so the in general that means you have to copy the data because maybe you want to read in some other",
    "start": "866210",
    "end": "871670"
  },
  {
    "text": "order for a different sort of query so often yet often you do you do copy your",
    "start": "871670",
    "end": "878030"
  },
  {
    "text": "data but let's not be scared about copying it you you can buy this like $1 a terabyte this",
    "start": "878030",
    "end": "885630"
  },
  {
    "text": "this cost nothing for the capacity but for IO you know I'm buying 100 iOS a",
    "start": "885630",
    "end": "891000"
  },
  {
    "text": "second for $100 and I'm paying $1.00 per IO for a second that's quite a lot so let's let's try",
    "start": "891000",
    "end": "897390"
  },
  {
    "text": "and let's do some blocking so a related",
    "start": "897390",
    "end": "903630"
  },
  {
    "start": "902000",
    "end": "996000"
  },
  {
    "text": "thing is well if I guess it's a bit more general than than the demonization is",
    "start": "903630",
    "end": "909780"
  },
  {
    "text": "making sure the data is laid out in the right using the right index on on disk so yes so we're not doing the access so",
    "start": "909780",
    "end": "918570"
  },
  {
    "text": "one one aspect of this so remember one of the queries as I said people might want to do is get a range of data maybe",
    "start": "918570",
    "end": "924480"
  },
  {
    "text": "this is a time range or like a range of strings or something",
    "start": "924480",
    "end": "929940"
  },
  {
    "text": "so a very common thing you want to do is this range query you don't know the key",
    "start": "929940",
    "end": "936720"
  },
  {
    "text": "exactly that you want but you know it was in the last you know it was this time range between you know 24 hours ago",
    "start": "936720",
    "end": "942750"
  },
  {
    "text": "in today so let's do this range query great okay let's get the keys from E to",
    "start": "942750",
    "end": "948330"
  },
  {
    "text": "I but then when someone doesn't update we have these extra keys these red ones",
    "start": "948330",
    "end": "956370"
  },
  {
    "text": "and they're gonna be keys that have been added so we have some new keys well if you just stick them on the top then",
    "start": "956370",
    "end": "962760"
  },
  {
    "text": "they're not stored in order anymore I'm now going to have to seek around to read it so that's that's gonna violate my",
    "start": "962760",
    "end": "969030"
  },
  {
    "text": "constraint it's not gonna real-time so I have to have a method of getting from the left to the right I have to maintain",
    "start": "969030",
    "end": "974280"
  },
  {
    "text": "this order the thing in a way that doesn't involve seeking when I insert",
    "start": "974280",
    "end": "979320"
  },
  {
    "text": "stop what I could do is you know insert G oh let's let's find out where it is on disk or let's put it there but that's",
    "start": "979320",
    "end": "984870"
  },
  {
    "text": "gonna involve a seat on the right as well that's not that's not allowed so how do we how do we get from there to",
    "start": "984870",
    "end": "990060"
  },
  {
    "text": "there so I'm gonna tell you later on how Cassandra solves that problem very well",
    "start": "990060",
    "end": "996440"
  },
  {
    "start": "996000",
    "end": "1017000"
  },
  {
    "text": "and yet the final thing is catalyst between which we've seen so yeah if",
    "start": "996860",
    "end": "1002780"
  },
  {
    "text": "you're if the query that you're asking is counting something then yes just maintaining so we want some something in our",
    "start": "1002780",
    "end": "1010050"
  },
  {
    "text": "database that we can increments and decrements and we're going to have multiple counters for those of different",
    "start": "1010050",
    "end": "1015329"
  },
  {
    "text": "things okay so these techniques let's",
    "start": "1015329",
    "end": "1020519"
  },
  {
    "start": "1017000",
    "end": "1077000"
  },
  {
    "text": "talk about Cassandra little bit so I'm so we're going to introduce features of Cassandra as we need them to say how it",
    "start": "1020519",
    "end": "1026938"
  },
  {
    "text": "solves these of these problems so the three three features right away are its",
    "start": "1026939",
    "end": "1033058"
  },
  {
    "text": "write optimized what that really means is it's super fast for rights and the",
    "start": "1033059",
    "end": "1039780"
  },
  {
    "text": "same speed as any other database for reads the reads are tiny bit slower in some cases but you wouldn't notice it so",
    "start": "1039780",
    "end": "1046918"
  },
  {
    "text": "it's a basically super fast writes very memories and yet does this fast merging",
    "start": "1046919",
    "end": "1053520"
  },
  {
    "text": "so if you when you insert your keys they end up in order pretty quickly with not",
    "start": "1053520",
    "end": "1059070"
  },
  {
    "text": "very much I owe and Cassandra has a distribution counter support",
    "start": "1059070",
    "end": "1064919"
  },
  {
    "text": "I guess the distribution that means you can scale properly but I'm not talking about scaling here but you assume that",
    "start": "1064919",
    "end": "1071970"
  },
  {
    "text": "most people want to scale their database so yes I think this Arbor has as distributed capsules as well so the",
    "start": "1071970",
    "end": "1079169"
  },
  {
    "start": "1077000",
    "end": "1094000"
  },
  {
    "text": "right optimization in in Sandra is because all the rights are sequential so",
    "start": "1079169",
    "end": "1087360"
  },
  {
    "text": "you write whatever you want in any order they end up in order on disk without any seeks so it's not magic but it does",
    "start": "1087360",
    "end": "1095850"
  },
  {
    "start": "1094000",
    "end": "1137000"
  },
  {
    "text": "involve writing things multiple times so the the thing that you're trying to do",
    "start": "1095850",
    "end": "1102780"
  },
  {
    "text": "is get that slide I had before you've got some keys and you want to insert them in all about how do you get left to",
    "start": "1102780",
    "end": "1109049"
  },
  {
    "text": "right so let's talk about some of the data structures in Cassandra to see how",
    "start": "1109049",
    "end": "1114690"
  },
  {
    "text": "this works so basically you insert some",
    "start": "1114690",
    "end": "1120720"
  },
  {
    "text": "data we've got a memory disk we've got two",
    "start": "1120720",
    "end": "1126660"
  },
  {
    "text": "different storage which have very different properties you can do random",
    "start": "1126660",
    "end": "1131820"
  },
  {
    "text": "stuff memory nice where does that want this so let's use those properties to do what we want so we've got some data on",
    "start": "1131820",
    "end": "1138750"
  },
  {
    "start": "1137000",
    "end": "1168000"
  },
  {
    "text": "disk that's that's happy that's for that last bit and then we get some rights so",
    "start": "1138750",
    "end": "1145140"
  },
  {
    "text": "we get used to Keys gene cube let's put them in memory there is a commit log in",
    "start": "1145140",
    "end": "1151320"
  },
  {
    "text": "Cassandra that just writes them out in cases because if we've lost power now that we lose those two values but",
    "start": "1151320",
    "end": "1156600"
  },
  {
    "text": "there's a commit log to make sure that doesn't happen it can it can then reapply it but you don't want to be",
    "start": "1156600",
    "end": "1161760"
  },
  {
    "text": "reading from that because they're not storing the order there so don't worry about losing data if the power goes off",
    "start": "1161760",
    "end": "1167460"
  },
  {
    "text": "at this point um okay so we've got we've got those two let's insert some more so",
    "start": "1167460",
    "end": "1174330"
  },
  {
    "start": "1168000",
    "end": "1272000"
  },
  {
    "text": "in this case when we get six keys we say right six is too big I'm not going to store that in the memory anymore I'm going to flush that",
    "start": "1174330",
    "end": "1180780"
  },
  {
    "text": "out to this so I've I've created this sorted list in memory and then I write",
    "start": "1180780",
    "end": "1187470"
  },
  {
    "text": "it out to disk so now everything I've got on disk is still in order but now I've got two files here rather than",
    "start": "1187470",
    "end": "1193110"
  },
  {
    "text": "rather than one so if I kept on doing this and it would just carry on building up at these files that's still no good",
    "start": "1193110",
    "end": "1199380"
  },
  {
    "text": "I'm just thing and after that was secret file which is still still not allowed so I actually didn't need to merge these",
    "start": "1199380",
    "end": "1205860"
  },
  {
    "text": "together so there's this process of merging also known as compassion in Cassandra that doesn't happen so so",
    "start": "1205860",
    "end": "1213830"
  },
  {
    "text": "these are these two things are then version two one in the background so you only ever end up with a few of these",
    "start": "1213830",
    "end": "1220260"
  },
  {
    "text": "files on disk so so yes notes that the",
    "start": "1220260",
    "end": "1225300"
  },
  {
    "text": "keys were written well like these keys were written twice to disk rather than",
    "start": "1225300",
    "end": "1231390"
  },
  {
    "text": "rather than once that's okay it doesn't matter too much because they're all written sequentially you know we're",
    "start": "1231390",
    "end": "1237750"
  },
  {
    "text": "doing this merging like 100 megabytes a second we're doing you know the million keys a second or something in this",
    "start": "1237750",
    "end": "1242970"
  },
  {
    "text": "learning is really fast so if we write it out a few times it really doesn't matter but what this gives us is a",
    "start": "1242970",
    "end": "1248460"
  },
  {
    "text": "we better bio for writing is sequential great and the reads well I've got this",
    "start": "1248460",
    "end": "1254310"
  },
  {
    "text": "sorted thing I just go and find it in here or I can do my range query there's no seeking in and as I might",
    "start": "1254310",
    "end": "1260340"
  },
  {
    "text": "want to seek to Poe read as well so everything's great this means I can solve line for my queries like get me",
    "start": "1260340",
    "end": "1267030"
  },
  {
    "text": "something or get me a range of something very quickly and in real time so how",
    "start": "1267030",
    "end": "1272970"
  },
  {
    "start": "1272000",
    "end": "1338000"
  },
  {
    "text": "fast can we actually do this well I Assessors and stuff and you need a certain level fifty thousand keys a",
    "start": "1272970",
    "end": "1279300"
  },
  {
    "text": "second pretty good and this is this is another this is why um cuz I'm just",
    "start": "1279300",
    "end": "1286110"
  },
  {
    "text": "great for doing denormalization because you get your one insert then goes to ten or something and then because you can do",
    "start": "1286110",
    "end": "1294030"
  },
  {
    "text": "fish thousand things a second whoa okay you know maybe I've got ten things or whatever question what was the what was",
    "start": "1294030",
    "end": "1300600"
  },
  {
    "text": "the kid who did that on this is a a call",
    "start": "1300600",
    "end": "1309270"
  },
  {
    "text": "box 20:42 round eight disks cost about two thousand pounds or something nothing",
    "start": "1309270",
    "end": "1317480"
  },
  {
    "text": "this wouldn't this wouldn't carry on for forever I mean obviously it's gonna drop",
    "start": "1318080",
    "end": "1323910"
  },
  {
    "text": "off bus yeah I mean at the moment is just showing by the CPU cost of for processing the inserts are $50 that's",
    "start": "1323910",
    "end": "1333570"
  },
  {
    "text": "just Cassandra out the box no January",
    "start": "1333570",
    "end": "1337399"
  },
  {
    "start": "1338000",
    "end": "1402000"
  },
  {
    "text": "okay so those those are the sort of data storage requirements that that we have",
    "start": "1339020",
    "end": "1345420"
  },
  {
    "text": "from real-time and Cassandra has it has pretty good properties there there's a few other requirements which I think",
    "start": "1345420",
    "end": "1353850"
  },
  {
    "text": "they're also important so so just to sort of throw thoughts here so we're",
    "start": "1353850",
    "end": "1359190"
  },
  {
    "text": "doing real-time analytics that means we've said we've got high value in getting a quick response if we get a",
    "start": "1359190",
    "end": "1365280"
  },
  {
    "text": "slow response then you know it's gonna cost us something we've said we want in too fast so that means if the service is",
    "start": "1365280",
    "end": "1371310"
  },
  {
    "text": "unavailable we're losing money we're not we're not doing our quick queries anymore it's gonna it's effectively like",
    "start": "1371310",
    "end": "1376800"
  },
  {
    "text": "it's gonna take and how to do the query if it takes someone else bring the service back up so there's a high cost",
    "start": "1376800",
    "end": "1382140"
  },
  {
    "text": "of the service being down so we need to high availability so Cassandra gives you high availability with replication",
    "start": "1382140",
    "end": "1389640"
  },
  {
    "text": "multi-day sis and support and all that stuff so so yeah I think there's no",
    "start": "1389640",
    "end": "1395100"
  },
  {
    "text": "point in building a real-time system that doesn't have high availability and",
    "start": "1395100",
    "end": "1402780"
  },
  {
    "start": "1402000",
    "end": "1447000"
  },
  {
    "text": "a related thing is yeah we want to quick response which means we need low latency and in particular a lot of people are",
    "start": "1402780",
    "end": "1410310"
  },
  {
    "text": "building application that queried worldwide so Sandra has multi dates and support so so that the date is going to",
    "start": "1410310",
    "end": "1418440"
  },
  {
    "text": "get replicated around to one state your datacenters so you can have one in Australia and one in Hong Kong one and",
    "start": "1418440",
    "end": "1423960"
  },
  {
    "text": "under whatever close enough to people so that they don't have to go you know halfway around the world to get to get the answer so I",
    "start": "1423960",
    "end": "1431130"
  },
  {
    "text": "think yeah I think having having that having data geographically closer is important for some application indeed",
    "start": "1431130",
    "end": "1437150"
  },
  {
    "text": "there are people who use Cassandra just for this feature just so that they can replicate the data around the globe",
    "start": "1437150",
    "end": "1446150"
  },
  {
    "text": "um so I guess how does Cassandra achieve",
    "start": "1446990",
    "end": "1453570"
  },
  {
    "text": "these things so so there's no single point failure in Sandra pattern that's necessary for high availability you can",
    "start": "1453570",
    "end": "1463130"
  },
  {
    "text": "sort of any unique feature of Cassandra that I think is pretty useful is you can choose your point on the consistency and",
    "start": "1463130",
    "end": "1469409"
  },
  {
    "text": "an availability curve you don't you can trade off your assistance II prefer availability if you want so so a lot of",
    "start": "1469409",
    "end": "1476370"
  },
  {
    "text": "these analytics that people do actually it doesn't matter if it's not quite right you know if I ask if I know that there's",
    "start": "1476370",
    "end": "1482880"
  },
  {
    "text": "a million approximately a million visitors from France and it was like 900,000 last month that's what I care",
    "start": "1482880",
    "end": "1489240"
  },
  {
    "text": "about a ton of characters like a million children a 7,000 whatever so if the if",
    "start": "1489240",
    "end": "1494340"
  },
  {
    "text": "the value is not quite consistent I probably don't care but if I can't get the answer it says Arndt's not available",
    "start": "1494340",
    "end": "1499559"
  },
  {
    "text": "then I'm very unhappy so so for a lot of analytics I think people are prepared to trade off some consistency for higher",
    "start": "1499559",
    "end": "1506159"
  },
  {
    "text": "availability but for all the things you can't but the great thing about casandra's you can choose that with each",
    "start": "1506159",
    "end": "1511289"
  },
  {
    "text": "query you know if I want to get this value and I want to make sure it's the latest value then I can say make sure",
    "start": "1511289",
    "end": "1516419"
  },
  {
    "text": "you read from all of the replicas but then if it noticed down obviously I'm gonna drop oh yeah then what is what is",
    "start": "1516419",
    "end": "1522960"
  },
  {
    "text": "it so a little bit more about low latency so you get the the most a sense",
    "start": "1522960",
    "end": "1530789"
  },
  {
    "start": "1524000",
    "end": "1553000"
  },
  {
    "text": "support gives you gives you low latency but then there's the other things with the caches that you can you can say oh I",
    "start": "1530789",
    "end": "1536970"
  },
  {
    "text": "want this particular bit of data to be stored in cache preferentially over something else to decrease the latency",
    "start": "1536970",
    "end": "1543210"
  },
  {
    "text": "there you can you can do your reason parallel across disks and whatever okay",
    "start": "1543210",
    "end": "1554130"
  },
  {
    "start": "1553000",
    "end": "1643000"
  },
  {
    "text": "so that's Cassandra stuff let's talk a bit about writing out actually how do",
    "start": "1554130",
    "end": "1560549"
  },
  {
    "text": "you write these applications so I think",
    "start": "1560549",
    "end": "1565860"
  },
  {
    "text": "actually this is the weakest part of Cassandra is actually writing something on top of it the the interface the",
    "start": "1565860",
    "end": "1572549"
  },
  {
    "text": "client interface to isn't great so it used to be really bad",
    "start": "1572549",
    "end": "1578290"
  },
  {
    "text": "this thrift interface that was very hard to program against then someone wrote some client libraries made a bit easier",
    "start": "1578290",
    "end": "1583929"
  },
  {
    "text": "that's it still is still a bit painful and foreign now there's cql Cassandra query language which again is better but",
    "start": "1583929",
    "end": "1590980"
  },
  {
    "text": "you still have to write quite a lot of code to get things working and in general your code is quite ties to your",
    "start": "1590980",
    "end": "1598000"
  },
  {
    "text": "data model so if you if you decide to change how you'd ages of it you've got to change code which is it's a little",
    "start": "1598000",
    "end": "1603280"
  },
  {
    "text": "bit painful so so it would be be nice not to do that so I mean it'll be little tiny little",
    "start": "1603280",
    "end": "1608950"
  },
  {
    "text": "bit about what hakuna does to solve this so in something between your holistic",
    "start": "1608950",
    "end": "1616000"
  },
  {
    "text": "that sits on top of Cassandra which we",
    "start": "1616000",
    "end": "1621250"
  },
  {
    "text": "hope for bites a good programmer interface to Sanger if you're doing these sort of real-time queries so it's",
    "start": "1621250",
    "end": "1628450"
  },
  {
    "text": "a it's a restful HTTP interface you post JSON events to it and you post to do",
    "start": "1628450",
    "end": "1634120"
  },
  {
    "text": "some queries and you get back answers so to sort of code you need to write is is pretty much non-existent and to do those",
    "start": "1634120",
    "end": "1641530"
  },
  {
    "text": "things so what it does is you get you",
    "start": "1641530",
    "end": "1646570"
  },
  {
    "start": "1643000",
    "end": "1711000"
  },
  {
    "text": "get events coming in and you you feed them into kinetics which then works out",
    "start": "1646570",
    "end": "1652900"
  },
  {
    "text": "what it needs to do to be able to answer your questions so you tell it a little",
    "start": "1652900",
    "end": "1659230"
  },
  {
    "text": "bit about what you want to do so I want to answer get number of counts per",
    "start": "1659230",
    "end": "1664300"
  },
  {
    "text": "country or something or or here I'm I'm worried about those times and I've got",
    "start": "1664300",
    "end": "1671740"
  },
  {
    "text": "I've got I want to know how many people access certain pages so you say something like this you say these are",
    "start": "1671740",
    "end": "1677650"
  },
  {
    "text": "the sorts of queries I want to answer in real-time and then when an event comes",
    "start": "1677650",
    "end": "1684220"
  },
  {
    "text": "in the cocoon around the six works out which things need updating to maintain this query so so you don't have to write",
    "start": "1684220",
    "end": "1691390"
  },
  {
    "text": "this code so I think read this counter thirteen really fast calculating around the 2012 counter let's increment this",
    "start": "1691390",
    "end": "1696730"
  },
  {
    "text": "one because it's not that hard to do that stuff but it's very fiddly to pass",
    "start": "1696730",
    "end": "1702100"
  },
  {
    "text": "the dates and remember to get the time zone to correct and and and not get off by ones and whatever so",
    "start": "1702100",
    "end": "1708040"
  },
  {
    "text": "so this this this does it plus it for you so yeah what sort of stuff does it",
    "start": "1708040",
    "end": "1715840"
  },
  {
    "start": "1711000",
    "end": "1763000"
  },
  {
    "text": "do um yeah incremental analytics the work is done on the ingest which I said",
    "start": "1715840",
    "end": "1721180"
  },
  {
    "text": "it's what you need to do do real-time sort of stuff it does hear some counts",
    "start": "1721180",
    "end": "1726670"
  },
  {
    "text": "distinct stuff average stuff the bit statistic standard deviations min and",
    "start": "1726670",
    "end": "1732550"
  },
  {
    "text": "Max are some of these things you can do proximately as well so if you want to",
    "start": "1732550",
    "end": "1737950"
  },
  {
    "text": "know the number of unique visitors to your website to do that exactly you actually have to store all the visitors",
    "start": "1737950",
    "end": "1744580"
  },
  {
    "text": "you need to know if they unique or not so you can't actually do that sort of query in real time but you can do it",
    "start": "1744580",
    "end": "1751240"
  },
  {
    "text": "approximately in real time where maybe the answer you're going to get is a little bit wrong but you probably don't",
    "start": "1751240",
    "end": "1756910"
  },
  {
    "text": "care so so yeah there's some approximation stuff there to actually make this stuff real time um yeah you",
    "start": "1756910",
    "end": "1764410"
  },
  {
    "text": "can do grouping and stuff so that it's it's a little bit more powerful just getting a single number out you can get",
    "start": "1764410",
    "end": "1770470"
  },
  {
    "text": "like groups per country or whatever and yeah this works on top of Apache Cassandra so that's the end what do I",
    "start": "1770470",
    "end": "1780160"
  },
  {
    "text": "say oh so I told you what I think we old time means and work talent what that",
    "start": "1780160",
    "end": "1787270"
  },
  {
    "text": "means the storing data yeah we don't have a choice about how we store this data if we want it in real time so yeah",
    "start": "1787270",
    "end": "1793390"
  },
  {
    "text": "what must we do how much do store our data um so then",
    "start": "1793390",
    "end": "1798670"
  },
  {
    "text": "why how does Cassandra give us those properties the super fast rice the",
    "start": "1798670",
    "end": "1804130"
  },
  {
    "text": "merging the counters high availability low latency so Cassandra is pretty good",
    "start": "1804130",
    "end": "1809410"
  },
  {
    "text": "choice if you want if you want a little time and then yeah told you about there we go thank you please ask me any",
    "start": "1809410",
    "end": "1817030"
  },
  {
    "text": "question [Applause]",
    "start": "1817030",
    "end": "1825069"
  },
  {
    "start": "1825000",
    "end": "1848000"
  },
  {
    "text": "yes that is into memory before",
    "start": "1825270",
    "end": "1831130"
  },
  {
    "text": "eventually flushing to dis yes and there's also a situation you said where",
    "start": "1831130",
    "end": "1836290"
  },
  {
    "text": "there's a lot fathers really to allow you to replay those events back into around if no goes down yes often other",
    "start": "1836290",
    "end": "1845320"
  },
  {
    "text": "events written to the log and if they're written often enough why couldn't you",
    "start": "1845320",
    "end": "1851860"
  },
  {
    "start": "1848000",
    "end": "1919000"
  },
  {
    "text": "just blossom straight to death right what's the balance between those two so the default is to write every 10 seconds",
    "start": "1851860",
    "end": "1859000"
  },
  {
    "text": "obviously yeah if you wrote it off to everyone then you're all essentially writing it in yeah so yeah the default",
    "start": "1859000",
    "end": "1865180"
  },
  {
    "text": "is every 10 seconds the sort of rationale behind lies and you've got some replicas as well so within the 10",
    "start": "1865180",
    "end": "1872620"
  },
  {
    "text": "seconds of writing it to lose it you've got to lose power to all of the replicas I see so when it writes to unwrap on",
    "start": "1872620",
    "end": "1879820"
  },
  {
    "text": "OneNote is it disproving to that right across to the replicas to disk and it",
    "start": "1879820",
    "end": "1885100"
  },
  {
    "text": "knows to flush those two discs are separate no no it's in it's in RAM on all of them but it's also in the law on",
    "start": "1885100",
    "end": "1890980"
  },
  {
    "text": "all of them and then the log gets flushed every 10 seconds on all of them yeah so if you're going to lose it then",
    "start": "1890980",
    "end": "1898420"
  },
  {
    "text": "you have to lose power to all of the replicas within 10 seconds of it being written so yeah if you've got it all in",
    "start": "1898420",
    "end": "1905020"
  },
  {
    "text": "one data center and you just make a right then you couldn't lose it but you can't do anything about that unless you're gonna sleep on every single right",
    "start": "1905020",
    "end": "1911530"
  },
  {
    "text": "yeah so you can't you can't make you do that if you want but most people don't want that for tea",
    "start": "1911530",
    "end": "1917580"
  },
  {
    "text": "yeah you know sorry the question I forgot to ask you about your your benchmark was how big were the rights",
    "start": "1924980",
    "end": "1932370"
  },
  {
    "text": "that you were doing 50,000 per second they were like I can't remember over there but they were small order of like",
    "start": "1932370",
    "end": "1939000"
  },
  {
    "text": "you might know like 10 bytes per body or something probably like 10 by Keys ten",
    "start": "1939000",
    "end": "1944370"
  },
  {
    "text": "by five because it is breathable but we're just kind of a single event type things yeah yeah and if you are doing",
    "start": "1944370",
    "end": "1950640"
  },
  {
    "text": "counters in the way through time you've subsequent talked about encounters then",
    "start": "1950640",
    "end": "1955710"
  },
  {
    "text": "those would be multiple there be further rights you'll be doing so yeah I'd like",
    "start": "1955710",
    "end": "1961800"
  },
  {
    "text": "to encounters so counters the rights are the same but the problem is the replication of the counter so so when I",
    "start": "1961800",
    "end": "1969120"
  },
  {
    "text": "when I increment a counter I just write that increment so it's just 1 right but then the way that's replicated around is",
    "start": "1969120",
    "end": "1975300"
  },
  {
    "text": "actually to make sure it can stay cement stay consistent exactly exactly so so could counts unfortunate enough to read",
    "start": "1975300",
    "end": "1981450"
  },
  {
    "text": "them to replicate them around so if the counter in cash it's not so bad if they were on disk then yeah you have to do",
    "start": "1981450",
    "end": "1987780"
  },
  {
    "text": "some seats but in general you're incrementing more recent counters so",
    "start": "1987780",
    "end": "1993630"
  },
  {
    "text": "lots of emotional engrams will be in cash that's an unfortunate property of Cassandras counter",
    "start": "1993630",
    "end": "2000200"
  },
  {
    "text": "patience right and how do you guarantee a consistency of the counter with the",
    "start": "2000200",
    "end": "2007039"
  },
  {
    "text": "current writers so it's reasonably complicated but the",
    "start": "2007039",
    "end": "2017520"
  },
  {
    "start": "2010000",
    "end": "2092000"
  },
  {
    "text": "summary is when you there's actually a counter replica so you talked to one of",
    "start": "2017520",
    "end": "2023429"
  },
  {
    "text": "the replicas and then you increment that one and that that that knows knows those you know those that this that increment",
    "start": "2023429",
    "end": "2030659"
  },
  {
    "text": "him that oh there's another one going on over here but these these are treated separately and then and then when you read they're actually sums together so",
    "start": "2030659",
    "end": "2038880"
  },
  {
    "text": "so that's that's how you can you can avoid any sort of distributed locking because it's done like replicas okay but",
    "start": "2038880",
    "end": "2046289"
  },
  {
    "text": "that that means you can only do one right to that node one counter are they do that though at that time you could do",
    "start": "2046289",
    "end": "2052980"
  },
  {
    "text": "another counter update to another node but if you do them to the same node how do you guarantee so remember how that",
    "start": "2052980",
    "end": "2064290"
  },
  {
    "text": "works basically it's I mean you could do it by",
    "start": "2064290",
    "end": "2070740"
  },
  {
    "text": "doing a lock on that load but it doesn't work like that it stores it stores the the increments and then merges them down",
    "start": "2070740",
    "end": "2079108"
  },
  {
    "text": "to two just to just the one value yes is",
    "start": "2079109",
    "end": "2085169"
  },
  {
    "text": "it's very point in this log structure if you take this if you want solid state",
    "start": "2085169",
    "end": "2093750"
  },
  {
    "start": "2092000",
    "end": "2195000"
  },
  {
    "text": "disks yes there is still a pointer to it because you know your your block size on",
    "start": "2093750",
    "end": "2101550"
  },
  {
    "text": "the so let's say this is a like 4k or something so you store don't want to be seeking around too much you know you who",
    "start": "2101550",
    "end": "2106800"
  },
  {
    "text": "install you can still do get more megabytes per second doing sequential reads on an SSD that you can doing",
    "start": "2106800",
    "end": "2113220"
  },
  {
    "text": "random freeze so there's still a benefit but obviously much much less so yeah so",
    "start": "2113220",
    "end": "2121080"
  },
  {
    "text": "so Cassandra was designed to run on spinning disks that's for sure but it still worked it's still benefits",
    "start": "2121080",
    "end": "2127290"
  },
  {
    "text": "on all neces but not not so much you have any sex when you've got my",
    "start": "2127290",
    "end": "2132700"
  },
  {
    "text": "tiered so I'm guessing well with RAM or solid state is it in between buffer and",
    "start": "2132700",
    "end": "2140710"
  },
  {
    "text": "then writing this so time doesn't have any support for that I guess you could",
    "start": "2140710",
    "end": "2147040"
  },
  {
    "text": "you could fairly easily do it where more recent stuff would be on the SSD and all",
    "start": "2147040",
    "end": "2152380"
  },
  {
    "text": "the stuff would be on on disks you could do that point is if you want anything more complicating you're like most more",
    "start": "2152380",
    "end": "2157690"
  },
  {
    "text": "of an access stuff then that would be reasonably hard what you can do though is say certain bits of data should be on",
    "start": "2157690",
    "end": "2163930"
  },
  {
    "text": "an SSD in certain bits should be on another disk so you can say I really care about these cats but I don't care",
    "start": "2163930",
    "end": "2170530"
  },
  {
    "text": "about this historical data here you can do that",
    "start": "2170530",
    "end": "2174840"
  },
  {
    "text": "more questions",
    "start": "2177549",
    "end": "2180700"
  }
]