[
  {
    "text": "[Music]",
    "start": "2540",
    "end": "9840"
  },
  {
    "text": "welcome to this session My name is Stefan Fil I'm going to talk about rest I've said that a few times So um I",
    "start": "9840",
    "end": "17680"
  },
  {
    "text": "gathered up some stuff that I found occurs again and again in discussions about REST Um my plan for this session",
    "start": "17680",
    "end": "24320"
  },
  {
    "text": "is to start off with a pretty brief introduction but I'll only do that if some of you think it's worth your time",
    "start": "24320",
    "end": "30640"
  },
  {
    "text": "So how many of you have actually been doing REST in practice building some systems and stuff like that okay Who",
    "start": "30640",
    "end": "38079"
  },
  {
    "text": "hasn't ever done anything with REST and has only the faintest idea what it might be about",
    "start": "38079",
    "end": "43640"
  },
  {
    "text": "okay So everybody else Yeah So who considers themselves an",
    "start": "43640",
    "end": "49840"
  },
  {
    "text": "expert oh that's a funny question Yeah not even Ian raises his hand which is weird Okay so we're going we're going to",
    "start": "49840",
    "end": "56480"
  },
  {
    "text": "talk about REST Um let's start with this intro and get it over with pretty quickly So this is what REST is It's all",
    "start": "56480",
    "end": "63520"
  },
  {
    "text": "actually pretty easy Um it's a a number of things Oh sorry miss messed up messed",
    "start": "63520",
    "end": "69680"
  },
  {
    "text": "up my animation here So what you can see up top that's essentially the definition of REST Um it's all very easy Um it's a",
    "start": "69680",
    "end": "76960"
  },
  {
    "text": "number of constraints and architectural style That's all Thanks uh have a nice day",
    "start": "76960",
    "end": "82080"
  },
  {
    "text": "So obviously in this in this dissertation this PhD thesis there is a lot of stuff there are a lot of",
    "start": "82080",
    "end": "87920"
  },
  {
    "text": "definitions there are a lot of things that cross reference each other and actually there is nowhere in this",
    "start": "87920",
    "end": "93000"
  },
  {
    "text": "dissertation can you find a single sentence that says this is what rest actually is right I think it's a pretty",
    "start": "93000",
    "end": "100159"
  },
  {
    "text": "good paper it's a pretty good document and it has uh has excellent value and it has the the great benefit of being um",
    "start": "100159",
    "end": "108000"
  },
  {
    "text": "the one answer giving the the one answer on any question you might have Uh everything that Roy Fielding the",
    "start": "108000",
    "end": "114240"
  },
  {
    "text": "inventor of REST has has answered in this paper is an authoritative answer That's there's no arguing with that",
    "start": "114240",
    "end": "120560"
  },
  {
    "text": "Unfortunately he doesn't answer everything or at least he doesn't answer it in an easy to access way And many",
    "start": "120560",
    "end": "127040"
  },
  {
    "text": "people uh keep wondering uh whether uh REST is as illdefined as other things",
    "start": "127040",
    "end": "132560"
  },
  {
    "text": "that we're dealing with for example S SOA or components or object orientation",
    "start": "132560",
    "end": "138879"
  },
  {
    "text": "or microservices and it's not actually rest is pretty well defined because it",
    "start": "138879",
    "end": "144000"
  },
  {
    "text": "has this definition because it has a set of architectural constraints So what that means is that you define a set of",
    "start": "144000",
    "end": "150480"
  },
  {
    "text": "rules and if something adhere toes adheres to those rules then it can claim to be an instance of this particular",
    "start": "150480",
    "end": "156720"
  },
  {
    "text": "particular architectural style Right so an architectural style is to an architecture as a design pattern is to",
    "start": "156720",
    "end": "163760"
  },
  {
    "text": "an implementation right it's it's it's a bit more abstract It it captures certain things about about the about how you",
    "start": "163760",
    "end": "170480"
  },
  {
    "text": "might want to approach something And if you follow these particular rules then you can claim to have built an instance",
    "start": "170480",
    "end": "176239"
  },
  {
    "text": "of this You don't have to do that And there are as Roy would be the first one to point out uh disadvantages to some of",
    "start": "176239",
    "end": "182800"
  },
  {
    "text": "those things For example stateless communication means that you don't uh uh that you don't gather up session state",
    "start": "182800",
    "end": "189280"
  },
  {
    "text": "on the server side So that has a cost It means you have to either make stuff explicit on the server side as as as",
    "start": "189280",
    "end": "195360"
  },
  {
    "text": "something stored there or transfer it transfer it with each request right you have choices to make and that's what all",
    "start": "195360",
    "end": "201599"
  },
  {
    "text": "this is about So to to give you some sort of of uh of introduction here to give you some sort of identification I",
    "start": "201599",
    "end": "208400"
  },
  {
    "text": "picked one sentence uh from from the from Royy's PhD thesis which uh talks",
    "start": "208400",
    "end": "213519"
  },
  {
    "text": "about a number of things So the first thing it talks about is identification of resources Identification of resources is",
    "start": "213519",
    "end": "220480"
  },
  {
    "text": "something that we see on the web all the time right it's what we're it's what we're using all the time Every time we",
    "start": "220480",
    "end": "225920"
  },
  {
    "text": "see a bus going by on the street that has a URI has a URL on its side we use this concept because we can take that",
    "start": "225920",
    "end": "231920"
  },
  {
    "text": "URL and put it into our browser's address bar hit enter and get back a page that tells us something right so",
    "start": "231920",
    "end": "237760"
  },
  {
    "text": "identification of resources on the web means use a use a URI for everything",
    "start": "237760",
    "end": "243040"
  },
  {
    "text": "that you that you think is worth it right everything that you think has has value should have its own URI so that",
    "start": "243040",
    "end": "249439"
  },
  {
    "text": "you can reference it so that you can access it directly One of the great values of this of this REST idea is that",
    "start": "249439",
    "end": "257040"
  },
  {
    "text": "we all agree on a way to identify stuff right so we make this kind of identity concept universal It doesn't matter",
    "start": "257040",
    "end": "262720"
  },
  {
    "text": "whether it's my application or your application or Josh's or Ian's who whoever has built that stuff If they all",
    "start": "262720",
    "end": "268560"
  },
  {
    "text": "use the same concept if they all use URIs then we have a a unified idea of",
    "start": "268560",
    "end": "273840"
  },
  {
    "text": "how to identify things which means they become targets for links right we can link to them If they don't have a URI we",
    "start": "273840",
    "end": "280560"
  },
  {
    "text": "can't do that um they become something that you can bookmark so that you so that you can go",
    "start": "280560",
    "end": "286160"
  },
  {
    "text": "back to it later They become entry points to your application If your application has a single URI it has a",
    "start": "286160",
    "end": "293040"
  },
  {
    "text": "single entry point In fact that's the case with many web applications that are built in in big companies Many of the",
    "start": "293040",
    "end": "298400"
  },
  {
    "text": "applications I deal with are built this way And that's sad It it offers this concept or it sacrifices the idea of",
    "start": "298400",
    "end": "305479"
  },
  {
    "text": "identifiability to some some weird idea of programmer happiness Um and I don't",
    "start": "305479",
    "end": "311759"
  },
  {
    "text": "really understand why people who program JSF talk about programmer happiness But some some of those applications built",
    "start": "311759",
    "end": "317840"
  },
  {
    "text": "this way lack this simple concept of giving everything that's important its own URI So the first thing is just that",
    "start": "317840",
    "end": "325199"
  },
  {
    "text": "Note also that I'm not talking about um about web services here right i'm talking about anything that's on the web",
    "start": "325199",
    "end": "331600"
  },
  {
    "text": "Doesn't matter whether it's something something that you might call a web service something that that offers you",
    "start": "331600",
    "end": "337280"
  },
  {
    "text": "JSON over HTTP for some programmatic interchange or something that is a UI",
    "start": "337280",
    "end": "342320"
  },
  {
    "text": "application that gives you some HTML It doesn't matter In fact this distinction was never important to to somebody like",
    "start": "342320",
    "end": "348000"
  },
  {
    "text": "Roy to to the people who actually came up with these whole ideas It's all just the same",
    "start": "348000",
    "end": "353160"
  },
  {
    "text": "thing Now once we have those things those identifiable things we have to somehow interact with them The way to",
    "start": "353160",
    "end": "359360"
  },
  {
    "text": "interact with them is by means of representations So they can they can become represented in some data format",
    "start": "359360",
    "end": "365840"
  },
  {
    "text": "and that actually gives us some some aspects that you're that we're all familiar with as well There is a certain",
    "start": "365840",
    "end": "371840"
  },
  {
    "text": "amount of metadata We know something about the stuff that we exchange with a server There's something like a content type and there's an accept header",
    "start": "371840",
    "end": "378479"
  },
  {
    "text": "allowing us to do content negotiation We have a a in fact a separation of of",
    "start": "378479",
    "end": "383919"
  },
  {
    "text": "separation of concerns of certain things we have a separation of concerns of the actual data that we send um the um the",
    "start": "383919",
    "end": "392400"
  },
  {
    "text": "identity that this data has and the location where it's at So this is these are all separated parts Um identity is",
    "start": "392400",
    "end": "400160"
  },
  {
    "text": "something that's far more constant in in in your application's life cycle or in your systems life cycle than the actual",
    "start": "400160",
    "end": "405919"
  },
  {
    "text": "data that's being exchanged If you think about that for a while if you come up with all the things that are worth being",
    "start": "405919",
    "end": "412080"
  },
  {
    "text": "identified in your system like for example your customers and your orders",
    "start": "412080",
    "end": "417360"
  },
  {
    "text": "and the steps in approving something or whatever it is that you find uh find of",
    "start": "417360",
    "end": "424240"
  },
  {
    "text": "being worth of having having its own URI those identities are very very stable",
    "start": "424240",
    "end": "429680"
  },
  {
    "text": "The data might change the format might change but what has an identity today will probably have an identity next year",
    "start": "429680",
    "end": "436080"
  },
  {
    "text": "as well Right so if we separate those things if we make a if if we introduce a separation of concerns we can actually",
    "start": "436080",
    "end": "442319"
  },
  {
    "text": "have multiple representations at the same time So we have the same thing represented in in various different ways",
    "start": "442319",
    "end": "448720"
  },
  {
    "text": "at the same time or different representations over the course of time So uh these might actually be if you",
    "start": "448720",
    "end": "454720"
  },
  {
    "text": "want to call them that versions although we'll get to that in a moment So um if a",
    "start": "454720",
    "end": "459919"
  },
  {
    "text": "customer gets five new attributes that's perfectly fine They get five new attributes but it's still the same",
    "start": "459919",
    "end": "465280"
  },
  {
    "text": "customer right still the same entity the same identity that was there before Using this concept we reduce",
    "start": "465280",
    "end": "473280"
  },
  {
    "text": "dependency on implementation details We have this URI this thing that identifies something It doesn't matter in which",
    "start": "473280",
    "end": "479599"
  },
  {
    "text": "system it resides It doesn't matter whether you move it somewhere As long as you have a URI to it you can connect to",
    "start": "479599",
    "end": "485039"
  },
  {
    "text": "it connecting to something by means of its URI is probably the the most well",
    "start": "485039",
    "end": "490879"
  },
  {
    "text": "the the most loosely is that a word the least coupled way to access to connect",
    "start": "490879",
    "end": "495919"
  },
  {
    "text": "to something right you connect to something if you only know its URI by means of the assumption that it's going",
    "start": "495919",
    "end": "502800"
  },
  {
    "text": "to have something that'll serve uh data over HTTP right it's a very weak",
    "start": "502800",
    "end": "508680"
  },
  {
    "text": "assumption resource manipulation representations also enables a pro processing model it's typically",
    "start": "508680",
    "end": "514000"
  },
  {
    "text": "connected to the type of data that you exchange For example if you use HTML as a as a data format then there is a then",
    "start": "514000",
    "end": "520719"
  },
  {
    "text": "there is a certain processing model connected to that the one you're all familiar with right forms and links and",
    "start": "520719",
    "end": "525760"
  },
  {
    "text": "you submit something you get back something you get a redirect whatever it is that's actually HTTP The the format itself defines the way the",
    "start": "525760",
    "end": "532160"
  },
  {
    "text": "representations that are sent back and forth between client and server which is a general principle that you can as as",
    "start": "532160",
    "end": "537920"
  },
  {
    "text": "you can with many things see embodied in HTML but can can and should also strive for in your own designs So second thing",
    "start": "537920",
    "end": "545519"
  },
  {
    "text": "we have those things and they have representations The third one is that we have hypermedia as the engine of",
    "start": "545519",
    "end": "551600"
  },
  {
    "text": "application state I won't make an acronym of that because it's stupid So um hypermedia as the engine of",
    "start": "551600",
    "end": "557839"
  },
  {
    "text": "application state essentially means that once you have all of those things you link them together in a meaningful fashion right they're connected in some",
    "start": "557839",
    "end": "564560"
  },
  {
    "text": "way and those connections between things are something that you want to surface in your API or in your system in your in",
    "start": "564560",
    "end": "571680"
  },
  {
    "text": "the surface of your service service design right so the the primary thing that people people talk about when they",
    "start": "571680",
    "end": "578640"
  },
  {
    "text": "when they talk about um about connecting hyperdia is links right many people talk",
    "start": "578640",
    "end": "584560"
  },
  {
    "text": "about links by the way there are seats left in the front if you don't want to stand in the back um so links is the",
    "start": "584560",
    "end": "590560"
  },
  {
    "text": "first thing but there are not only links there are also forms um so that you can actually build up a new request based on data coming to you",
    "start": "590560",
    "end": "596959"
  },
  {
    "text": "from the server We'll get to that as well There is a certain flow idea here right so we have hypermedia as the",
    "start": "596959",
    "end": "603200"
  },
  {
    "text": "engine of application state with the sense that you actually navigate through an application by means of the of the",
    "start": "603200",
    "end": "609279"
  },
  {
    "text": "responses that you get from a server You don't have a predetermined path that you have hardcoded in your client that goes from one step to the next you have",
    "start": "609279",
    "end": "616160"
  },
  {
    "text": "something that is that is done based on the on the on the amount of information that you get or the kind of information",
    "start": "616160",
    "end": "621360"
  },
  {
    "text": "that you get from the server Actually I'm repeating myself but if you look at HTML in the browser that's a great",
    "start": "621360",
    "end": "627760"
  },
  {
    "text": "example of a restful system Now somebody will complain but the browser doesn't do put and delete Screw it I don't care in",
    "start": "627760",
    "end": "635040"
  },
  {
    "text": "terms of HTML and hypermedia and the responses and the kind of hard the low",
    "start": "635040",
    "end": "640160"
  },
  {
    "text": "amount of hard-coded um assumptions in the in the browser The browser is an excellent example of a very great",
    "start": "640160",
    "end": "645680"
  },
  {
    "text": "restful client Finally we get to decide where to put status right we can we can put state",
    "start": "645680",
    "end": "652880"
  },
  {
    "text": "in the in the responses and have them have it sent back to us in in the next request or we can put the state on the",
    "start": "652880",
    "end": "659120"
  },
  {
    "text": "server have it addressed by by URI These are all aspects of the decisions that I make when I design my hyperdia uh my",
    "start": "659120",
    "end": "666320"
  },
  {
    "text": "hyperdia system So three things we have identified things we give them a URI we",
    "start": "666320",
    "end": "673040"
  },
  {
    "text": "exchange representation So we separate identity and the actual data that represents what's what's identified by",
    "start": "673040",
    "end": "679120"
  },
  {
    "text": "this by this thing and then we use a hypermedia as a thing to control our flow Finally we have self-descriptive",
    "start": "679120",
    "end": "685519"
  },
  {
    "text": "messages And self-descriptive messages essentially just means that you should be able to make sense of something if",
    "start": "685519",
    "end": "691680"
  },
  {
    "text": "you look at the actual message right so this is sort of a manifest against metadata I shouldn't have a",
    "start": "691680",
    "end": "699240"
  },
  {
    "text": "documentation to read to make lots of assumptions unless unless that documentation is standardized and part",
    "start": "699240",
    "end": "705519"
  },
  {
    "text": "of an RFC That's fine I'm not supposed to take a look at a message for which I",
    "start": "705519",
    "end": "710560"
  },
  {
    "text": "do do not know the protocol or the format and then magically in sort of some sort of AI way make sense of that",
    "start": "710560",
    "end": "717120"
  },
  {
    "text": "That's not what this is talking about Rather we're talking about using standardized formats wherever possible",
    "start": "717120",
    "end": "723360"
  },
  {
    "text": "using well-defined formats where I can actually from the message conclude where",
    "start": "723360",
    "end": "728399"
  },
  {
    "text": "I can find more information about what's happening Right so um again we have the",
    "start": "728399",
    "end": "734480"
  },
  {
    "text": "metadata aspect within the message Right so the message itself for example might contain a content type There's a header",
    "start": "734480",
    "end": "740000"
  },
  {
    "text": "called content type that says this is the identifier for this content type so that I can go to the Ayanna and look up",
    "start": "740000",
    "end": "746240"
  },
  {
    "text": "in the content type registry which RFC defines that thing and then find out what it actually means that I'm looking",
    "start": "746240",
    "end": "751440"
  },
  {
    "text": "at Right so there's a there's a standardized way of addressing that Um so standardization plays a very",
    "start": "751440",
    "end": "758320"
  },
  {
    "text": "important role here Um another aspect is that you get from this is provider independence Right i'm not I'm not",
    "start": "758320",
    "end": "764880"
  },
  {
    "text": "accessing something that is specific to this particular instance of a service or to this particular machine I'm talking",
    "start": "764880",
    "end": "770480"
  },
  {
    "text": "to I'm not using Amazon's HTML If I talk to Amazon to buy a book I'm using the",
    "start": "770480",
    "end": "776240"
  },
  {
    "text": "same HTML that I'm using when I talk to Google right it's the same format It's the same thing I'm ideally at least uh",
    "start": "776240",
    "end": "783040"
  },
  {
    "text": "formats are independent of particular entities that actually use them right um",
    "start": "783040",
    "end": "788560"
  },
  {
    "text": "this whole idea of having all of this standardized information all of these headers uh enables us to produce very",
    "start": "788560",
    "end": "795839"
  },
  {
    "text": "very useful intermediaries So we can put a machine between a client and a server without knowing which client and which",
    "start": "795839",
    "end": "801760"
  },
  {
    "text": "server that's going to be right there's a there's a box there that will just take a look at the messages and do",
    "start": "801760",
    "end": "806959"
  },
  {
    "text": "something useful with them My favorite example is always the the caching intermediary Something like a reverse",
    "start": "806959",
    "end": "813120"
  },
  {
    "text": "proxy cache that'll sit somewhere and look at the messages and based on the metadata that tells you something about",
    "start": "813120",
    "end": "818320"
  },
  {
    "text": "the about the freshness requirements will intelligently put this information",
    "start": "818320",
    "end": "823680"
  },
  {
    "text": "in memory and serve it to you from there Right this is all something that you can only do because the message itself is so",
    "start": "823680",
    "end": "829800"
  },
  {
    "text": "descriptive In fact if you come from an S SOA background and many people have done S SOA before they discovered REST",
    "start": "829800",
    "end": "837600"
  },
  {
    "text": "which is sort of tragic because it was originally the other way around So many many people who have discovered rest",
    "start": "837600",
    "end": "843920"
  },
  {
    "text": "after SOA find a similarity here between the vision uh that was in in this in",
    "start": "843920",
    "end": "849040"
  },
  {
    "text": "this uh web services world in terms of SOAP headers right but that's not a coincidence It is exactly the same thing",
    "start": "849040",
    "end": "855600"
  },
  {
    "text": "In fact one of the people who wrote the SOAP spec was earlier a member of the HTTP working group and helped write the",
    "start": "855600",
    "end": "861760"
  },
  {
    "text": "HTTP spec right so of course you can see similarities here Um but in contrast to",
    "start": "861760",
    "end": "866959"
  },
  {
    "text": "the web services world this one actually took off in a big way So we have this",
    "start": "866959",
    "end": "872720"
  },
  {
    "text": "theoretical definition We have a PhD thesis We have lots of talk about architectural styles And many people",
    "start": "872720",
    "end": "878399"
  },
  {
    "text": "freely admit that they have never actually managed to read the thesis But I can tell you it's actually not that hard I'm not a good thesis reader Not at",
    "start": "878399",
    "end": "885279"
  },
  {
    "text": "all But I could I could manage So probably you can as well So who who here has read the thesis that's that's",
    "start": "885279",
    "end": "892240"
  },
  {
    "text": "impressive That's about five That's that's a better number than I usually get So maybe you should do that on a",
    "start": "892240",
    "end": "897600"
  },
  {
    "text": "rainy Sunday afternoon Phrased differently If we really if you really boil it down if we",
    "start": "897600",
    "end": "903199"
  },
  {
    "text": "really try to distill the essence of all of this then it's nothing more than what we see in the web right we have this web",
    "start": "903199",
    "end": "909360"
  },
  {
    "text": "thing that we're working with all day And the web is exactly that It's lots of",
    "start": "909360",
    "end": "914959"
  },
  {
    "text": "things with URIs or URLs if you prefer right lots of things that have a URL and",
    "start": "914959",
    "end": "920240"
  },
  {
    "text": "they're all connected by means of hypermedia So you can link to something directly you can post to something you",
    "start": "920240",
    "end": "926240"
  },
  {
    "text": "can share something on Twitter or whatever it is they they do on Facebook So you can do that and it's governed by",
    "start": "926240",
    "end": "932639"
  },
  {
    "text": "standard formats right so that your generic client can actually understand that Still today that's the case We can",
    "start": "932639",
    "end": "940399"
  },
  {
    "text": "hope it'll stay so for a while And we're not all going to be using whatever Facebook's successor to HTML is going to",
    "start": "940399",
    "end": "947279"
  },
  {
    "text": "be called So this is this is sort of the groundwork right we have this we have this idea It's very important to notice",
    "start": "947279",
    "end": "953680"
  },
  {
    "text": "this is not something just for web services This is not the not the thing that um is supposed to replace SOAP",
    "start": "953680",
    "end": "961120"
  },
  {
    "text": "right it's a completely different um level that we're talking about here we're talking about this abstract architectural thing um that has certain",
    "start": "961120",
    "end": "968160"
  },
  {
    "text": "constraints and that actually governs um actually tells you when you can claim",
    "start": "968160",
    "end": "973279"
  },
  {
    "text": "that something is restful or not Now I've been doing this for a while and um despite my efforts uh it has",
    "start": "973279",
    "end": "980720"
  },
  {
    "text": "actually become u more widespread I'm sorry Um so it has actually been quite",
    "start": "980720",
    "end": "986320"
  },
  {
    "text": "successful this whole rest thing because people noticed that there is a lot of value especially opposed to to",
    "start": "986320",
    "end": "992399"
  },
  {
    "text": "alternatives that are out there But there are some common misconceptions some things that people think and I've",
    "start": "992399",
    "end": "997839"
  },
  {
    "text": "listed a few I would love to get more from you Assumptions or misconceptions or things that you strongly believe",
    "start": "997839",
    "end": "1004160"
  },
  {
    "text": "where I'm wrong or where you have seen others uh call something rest that you think is not and I'd love some",
    "start": "1004160",
    "end": "1010079"
  },
  {
    "text": "discussion on that So let me get quickly through this and we can see how many of those you have run into and how many of",
    "start": "1010079",
    "end": "1016240"
  },
  {
    "text": "those you agree or disagree with Right so this one is probably my my favorite",
    "start": "1016240",
    "end": "1021360"
  },
  {
    "text": "one Right so rest is about pretty URIs right we",
    "start": "1021360",
    "end": "1026880"
  },
  {
    "text": "have the we we have a nice restful URL or a nice restful URI Um and that's just",
    "start": "1026880",
    "end": "1033760"
  },
  {
    "text": "totally it's it's totally broken This whole concept is totally broken So let's let's take a look at why that is the",
    "start": "1033760",
    "end": "1039360"
  },
  {
    "text": "case I've I've present you some URIs right let's take a look at this one Who",
    "start": "1039360",
    "end": "1044400"
  },
  {
    "text": "would say that's a restful URI who's who thinks this is restful",
    "start": "1044400",
    "end": "1049440"
  },
  {
    "text": "okay let me phrase it different Who thinks it's not restful that's a significant number of",
    "start": "1049440",
    "end": "1054880"
  },
  {
    "text": "you Okay Why not any idea why not the format why why is format a",
    "start": "1054880",
    "end": "1061120"
  },
  {
    "text": "problem in that URI sounds instructive Destructive Oh okay",
    "start": "1061120",
    "end": "1066679"
  },
  {
    "text": "Destructive Any other thing seems to be mixing different entities It's mixing",
    "start": "1066679",
    "end": "1072480"
  },
  {
    "text": "different entities back there It has a query parameter Okay",
    "start": "1072480",
    "end": "1079679"
  },
  {
    "text": "Looks like a command It looks like a command Okay Anything else noification Good Sorry No identification No",
    "start": "1079679",
    "end": "1086559"
  },
  {
    "text": "identification Okay What about this one is this a restful URI who thinks this is",
    "start": "1086559",
    "end": "1091840"
  },
  {
    "text": "a restful URI four Five Who thinks it's not h It's a few more So why do you",
    "start": "1091840",
    "end": "1099840"
  },
  {
    "text": "think it's not a restful URI it has get details It sounds like a verb",
    "start": "1099840",
    "end": "1106080"
  },
  {
    "text": "right anything else query parameter somebody said right so that will reply as well anything else",
    "start": "1106080",
    "end": "1115480"
  },
  {
    "text": "the customer doesn't have a unique unique ID or URI for customer",
    "start": "1119280",
    "end": "1126679"
  },
  {
    "text": "okay okay so the customer can actually be identified good what about this one",
    "start": "1127640",
    "end": "1134000"
  },
  {
    "text": "who thinks this is not restful why",
    "start": "1134000",
    "end": "1139279"
  },
  {
    "text": "It contains a verb again Okay Anything else",
    "start": "1139919",
    "end": "1145520"
  },
  {
    "text": "sorry It's repeating what you should actually do with with HTTP It's repeating what we should do with HTTP",
    "start": "1145520",
    "end": "1151600"
  },
  {
    "text": "verbs How so there's a delete There's a delete in there Anything anybody else any other comment on",
    "start": "1151600",
    "end": "1158600"
  },
  {
    "text": "that what if I use a delete to do to invoke that",
    "start": "1158600",
    "end": "1163679"
  },
  {
    "text": "is it then restful or not deletes the delete command Deletes the delete command Okay Okay Okay What about this",
    "start": "1163679",
    "end": "1170640"
  },
  {
    "text": "one who thinks this is a restful URI who thinks it's",
    "start": "1170640",
    "end": "1175880"
  },
  {
    "text": "not who abstains okay final one What about this",
    "start": "1175880",
    "end": "1182520"
  },
  {
    "text": "one is it restful some people think why is it",
    "start": "1182520",
    "end": "1187919"
  },
  {
    "text": "restful id It has an ID Okay Who thinks it's not",
    "start": "1187919",
    "end": "1195400"
  },
  {
    "text": "restful why not sorry",
    "start": "1195400",
    "end": "1202400"
  },
  {
    "text": "I didn't catch that I'm sorry It's got a verb in it again Okay So what if this",
    "start": "1202400",
    "end": "1207520"
  },
  {
    "text": "returns an edit form is it then restful people you are crazy I don't",
    "start": "1207520",
    "end": "1215039"
  },
  {
    "text": "know why this happens all the time It's now think about what we just did I showed this slide",
    "start": "1215039",
    "end": "1221840"
  },
  {
    "text": "this slide right to everyone in this room I showed it to everyone I made a point of saying there is no such thing",
    "start": "1221840",
    "end": "1228000"
  },
  {
    "text": "as a restful URI And the very next second I put up this slide right and nobody except Ian Well that's probably",
    "start": "1228000",
    "end": "1235200"
  },
  {
    "text": "not true Some people did never never raised their hands and I I I just assumed they didn't want to spoil my stupid joke right so essentially you can",
    "start": "1235200",
    "end": "1242400"
  },
  {
    "text": "make no assumption whatsoever from the letters that from the characters that make up a URI You have no idea what",
    "start": "1242400",
    "end": "1248960"
  },
  {
    "text": "these things do I didn't even tell you what verb I use right so maybe if I do a delete on this uh URI number three",
    "start": "1248960",
    "end": "1256400"
  },
  {
    "text": "that's exactly what I want That's a it's a particular URI that I expose from the server so that somebody can do a delete",
    "start": "1256400",
    "end": "1262000"
  },
  {
    "text": "on that Why why would that not be restful why would a query parameter not",
    "start": "1262000",
    "end": "1267120"
  },
  {
    "text": "be restful there's it's just characters right nobody cares about the characters in the URI Yet everybody argues about",
    "start": "1267120",
    "end": "1274559"
  },
  {
    "text": "them all the time This happens all the time People decide they want to build something in a restful fashion So they",
    "start": "1274559",
    "end": "1279919"
  },
  {
    "text": "spend all of their time arguing about where the slashes go Now that's a that's a good discussion I like discussing",
    "start": "1279919",
    "end": "1286159"
  },
  {
    "text": "pretty URIs and I really really like pretty URIs But it's got nothing to do with REST because if you look at it from",
    "start": "1286159",
    "end": "1292559"
  },
  {
    "text": "a REST perspective there is no such thing as a restful URI All the separation into different parts that you",
    "start": "1292559",
    "end": "1298000"
  },
  {
    "text": "can look at it's all true but from a REST perspective this is just one big single thing You shouldn't be worrying",
    "start": "1298000",
    "end": "1305120"
  },
  {
    "text": "about the characters in the URI because what you should care about is not that",
    "start": "1305120",
    "end": "1310720"
  },
  {
    "text": "It's not the letters it's not the characters You should be caring about the context in which they appear right",
    "start": "1310720",
    "end": "1316000"
  },
  {
    "text": "you have something returned to you from the server There's some context That's what you should be parsing or reacting",
    "start": "1316000",
    "end": "1321280"
  },
  {
    "text": "to That's actually what your browser does right at least most of the time your browser unless it's Google's",
    "start": "1321280",
    "end": "1326640"
  },
  {
    "text": "browser talking to Google but that's not something we want to imitate right people don't want should not be looking",
    "start": "1326640",
    "end": "1332159"
  },
  {
    "text": "at the URI should not be looking at the characters because then I can change this to something like that and it'll still work right that's a hypermedia",
    "start": "1332159",
    "end": "1339200"
  },
  {
    "text": "context it's the first litmos test for your rest API whether you depend on on",
    "start": "1339200",
    "end": "1344880"
  },
  {
    "text": "characters on specific characters in your in your URIs for things to work",
    "start": "1344880",
    "end": "1350559"
  },
  {
    "text": "right now I'm not talking about a server a server is for a server it's perfectly fine to um to decompose the URI to",
    "start": "1350559",
    "end": "1358000"
  },
  {
    "text": "somehow dispatch this to code How how else would it work i'm specifically talking about clients If you ever find",
    "start": "1358000",
    "end": "1364480"
  },
  {
    "text": "yourself within your client connecting things you know you you know using string concatenation something is really",
    "start": "1364480",
    "end": "1371120"
  },
  {
    "text": "really wrong because you have not applied a hypermedia cont aspect to the",
    "start": "1371120",
    "end": "1376559"
  },
  {
    "text": "whole thing Make any sense okay So next time somebody asks you is this URI restful just be smug and tell them",
    "start": "1376559",
    "end": "1383679"
  },
  {
    "text": "you're you're stupid Don't do that It's it's a risk it's a risky thing So you should be really",
    "start": "1383679",
    "end": "1389480"
  },
  {
    "text": "careful Okay So the next one that I see is this one Now this a set of URI",
    "start": "1389480",
    "end": "1395120"
  },
  {
    "text": "patterns with get put post delete and the effects that has um I actually I I",
    "start": "1395120",
    "end": "1400880"
  },
  {
    "text": "have to admit I advocated something like that for a long long time as the perfect way to do rest I I like to give myself",
    "start": "1400880",
    "end": "1408159"
  },
  {
    "text": "and the benefit of doubt I I talked about the hypermedia thing too right i I did that but I didn't talk about it as",
    "start": "1408159",
    "end": "1414880"
  },
  {
    "text": "as as strongly as I do today Actually these guys Ian and Jim and Savas did it a lot more strongly in their book um",
    "start": "1414880",
    "end": "1421360"
  },
  {
    "text": "because they made hyperdia a very very important thing from the very beginning always claimed there's no such thing as a restful API without hypermedia Now",
    "start": "1421360",
    "end": "1429039"
  },
  {
    "text": "this is much much better than what people did five years ago because five",
    "start": "1429039",
    "end": "1434240"
  },
  {
    "text": "years ago you could shut down a server using a get Hopefully everybody these",
    "start": "1434240",
    "end": "1439520"
  },
  {
    "text": "days understands why that's not a good idea right because the Google crawler assumes that they can do a get because",
    "start": "1439520",
    "end": "1446720"
  },
  {
    "text": "that's not supposed to do anything destructive and if you shut down a server when somebody issues a get then",
    "start": "1446720",
    "end": "1451919"
  },
  {
    "text": "it's your fault not theirs right so um there's a there's a lot of there's a lot of positive things going on here people",
    "start": "1451919",
    "end": "1458799"
  },
  {
    "text": "actually um built things and that's better but it's still not what you could",
    "start": "1458799",
    "end": "1464320"
  },
  {
    "text": "actually label restful these things look like this who who here has an API that looks somewhat like",
    "start": "1464320",
    "end": "1471520"
  },
  {
    "text": "So my guess is most of you right in fact most of the people who actually expose",
    "start": "1471520",
    "end": "1476880"
  },
  {
    "text": "an API on the web have something like that Even the even the big companies do something like this Why what so what",
    "start": "1476880",
    "end": "1484159"
  },
  {
    "text": "what's wrong with this what what would you what would you imagine is wrong with this thing anything version numbers",
    "start": "1484159",
    "end": "1490720"
  },
  {
    "text": "Version numbers Okay I agree Anything else discoverability Discoverability Why",
    "start": "1490720",
    "end": "1497279"
  },
  {
    "text": "lack of discoverability Lack of discoverability Okay that's a good point Anything else you see this",
    "start": "1497279",
    "end": "1504840"
  },
  {
    "text": "thing who Who thinks there's nothing wrong with this admit it It's It's fine",
    "start": "1504840",
    "end": "1510240"
  },
  {
    "text": "I I'm not I'm not insulting I'm I'll try not to insult you later I'll do the",
    "start": "1510240",
    "end": "1516559"
  },
  {
    "text": "insulting later on later So the the the m the major problem in my view is we",
    "start": "1516559",
    "end": "1522320"
  },
  {
    "text": "make the URIs the API right the URIs are now what people will code against right",
    "start": "1522320",
    "end": "1528799"
  },
  {
    "text": "that's there's a description It says this is what the URI looks like This is what their code is going to look like It's going to plug those things together",
    "start": "1528799",
    "end": "1535200"
  },
  {
    "text": "It's going to follow those templates and maybe maybe they'll put those templates those URI templates you know with a with",
    "start": "1535200",
    "end": "1541840"
  },
  {
    "text": "a curly curly braces into their code somewhere But maybe they won't maybe they'll just use it as a you know as a",
    "start": "1541840",
    "end": "1548400"
  },
  {
    "text": "as a way to uh to uh tell them how to construct their string concatenation",
    "start": "1548400",
    "end": "1554640"
  },
  {
    "text": "code right that's what this is going to do it's it's separate from the actual implementation because it's a separate",
    "start": "1554640",
    "end": "1559760"
  },
  {
    "text": "document this maybe in a well if you're if you work in an enterprise this is in a docx file right in a word file that",
    "start": "1559760",
    "end": "1567120"
  },
  {
    "text": "you can download from SharePoint if you're if you're on the web it's a PDF right if you're if you're really on the",
    "start": "1567120",
    "end": "1573360"
  },
  {
    "text": "web it's an HTML file which is great great thing if you really rest it's part of your app right so this documented URI",
    "start": "1573360",
    "end": "1581200"
  },
  {
    "text": "thing is the first first thing the next one is immediately related to to that which is the there are assumptions that",
    "start": "1581200",
    "end": "1587200"
  },
  {
    "text": "now become effect so for example what do I have in this example I have customers and orders right so the orders are a",
    "start": "1587200",
    "end": "1595080"
  },
  {
    "text": "subresource under the customer which is from a pretty URI design standpoint",
    "start": "1595080",
    "end": "1600960"
  },
  {
    "text": "maybe the right thing to do because the slash implies hierarchy Am I talking about anything restful here",
    "start": "1600960",
    "end": "1606400"
  },
  {
    "text": "no I'm not Just pretty URIs right so maybe there's some hierarchy you want to express So that's why you put the orders",
    "start": "1606400",
    "end": "1611679"
  },
  {
    "text": "under the customer But maybe a year from now you want to put the orders into a separate system Now everybody will",
    "start": "1611679",
    "end": "1618720"
  },
  {
    "text": "assume that they can take the customer URI and append slash orders to get to",
    "start": "1618720",
    "end": "1624320"
  },
  {
    "text": "the orders which is bad That is not what should be happening What should be happening is that in some response from",
    "start": "1624320",
    "end": "1629840"
  },
  {
    "text": "the server there's a link to the orders that you follow to do that right so you make it way more",
    "start": "1629840",
    "end": "1635240"
  },
  {
    "text": "dynamic And of course Josh is right because there are version numbers and URIs and version numbers and URIs just",
    "start": "1635240",
    "end": "1641159"
  },
  {
    "text": "suck right everybody does it which doesn't make it any less sucky It's just a stupid idea Don't do that Anybody want",
    "start": "1641159",
    "end": "1648799"
  },
  {
    "text": "to talk about versioning in there is actually just the",
    "start": "1648799",
    "end": "1653840"
  },
  {
    "text": "API You're right It's exactly the point The version number is in the URI because the URI is the API right that's part of",
    "start": "1653840",
    "end": "1661520"
  },
  {
    "text": "it So if I change the API obviously the rules for constructing the URIs change right",
    "start": "1661520",
    "end": "1667559"
  },
  {
    "text": "now what what's the alternative what could we do so let me let's address this just very briefly because otherwise",
    "start": "1667559",
    "end": "1673120"
  },
  {
    "text": "somebody will ask it first thing what so when we talk about versioning the first thing the first question we have to ask",
    "start": "1673120",
    "end": "1678559"
  },
  {
    "text": "is what is it that we're talking about what are we versioning here are we versioning the actual data you know is",
    "start": "1678559",
    "end": "1684960"
  },
  {
    "text": "it maybe this version of the customer you know this is the version before George edited the customer record and",
    "start": "1684960",
    "end": "1691840"
  },
  {
    "text": "this is the one after he edited it that's a that's a version of the data that we're talking about maybe it's a it's a confluence document or the",
    "start": "1691840",
    "end": "1698880"
  },
  {
    "text": "version of a file or whatever right if you do that then that's perfectly fine It's actually the one case where I don't",
    "start": "1698880",
    "end": "1705200"
  },
  {
    "text": "even object to having a version number in the URI because that is then just part of the pretty URI thing Again maybe",
    "start": "1705200",
    "end": "1710880"
  },
  {
    "text": "if you want to express I don't care Just do that if you want If it makes you happy just do it But that's the only occasion where you should be putting a",
    "start": "1710880",
    "end": "1717440"
  },
  {
    "text": "version number in the URI because it identifies the data that this URI points to right if you make every version",
    "start": "1717440",
    "end": "1723279"
  },
  {
    "text": "number a separate thing with its own URI then maybe you want to relate them somehow so that people can see that",
    "start": "1723279",
    "end": "1729240"
  },
  {
    "text": "immediately The same is true logically by deduction for documentation because documentation is just data as well Right",
    "start": "1729240",
    "end": "1735600"
  },
  {
    "text": "that's one of the nice things in a restful scenario Everything that you can express as a resource is now part of the",
    "start": "1735600",
    "end": "1741520"
  },
  {
    "text": "same same set of concepts So every documentation page that you have can be its own resource that you can link to",
    "start": "1741520",
    "end": "1748399"
  },
  {
    "text": "from the other pieces sent back and forth as you know formats if you want to",
    "start": "1748399",
    "end": "1753520"
  },
  {
    "text": "although I'm not a fan version your formats I don't think versioning your formats means much but if you're happy",
    "start": "1753520",
    "end": "1760159"
  },
  {
    "text": "to do that then just call your media types if you if you dare to invent your own give them a version number suffix or",
    "start": "1760159",
    "end": "1767919"
  },
  {
    "text": "something I again I think that if text/html got by for for 20 years and",
    "start": "1767919",
    "end": "1773200"
  },
  {
    "text": "you can probably too but if you if you for some reason don't want to do that then just put a put a version number in",
    "start": "1773200",
    "end": "1778559"
  },
  {
    "text": "there The one thing where I really have a problem is an API because I don't even know what that is If I'm if I'm a if I'm",
    "start": "1778559",
    "end": "1786320"
  },
  {
    "text": "a big company that offers lots of stuff to my to my clients what's the what's the boundary of my API is it everything",
    "start": "1786320",
    "end": "1793600"
  },
  {
    "text": "I do is it the Google API how often is the Google API going to change its",
    "start": "1793600",
    "end": "1799919"
  },
  {
    "text": "version right if they introduce a new service is that is it a compatible change or something no it's not It isn't",
    "start": "1799919",
    "end": "1806799"
  },
  {
    "text": "changing anything specifically It's not it's not changing the identity of anything How stupid would that be if it",
    "start": "1806799",
    "end": "1813200"
  },
  {
    "text": "did right there's identity is supposed the most long living thing that you have there right so should be stable over",
    "start": "1813200",
    "end": "1819320"
  },
  {
    "text": "years Cool URIs don't change and all that right that was written 15 years ago",
    "start": "1819320",
    "end": "1824480"
  },
  {
    "text": "So those things should be stable Putting a version number in the URI means you have to change the URIs all the time",
    "start": "1824480",
    "end": "1830320"
  },
  {
    "text": "with no reason at all It's not a good idea right so what I recommend is actually um use different media types",
    "start": "1830320",
    "end": "1837360"
  },
  {
    "text": "not for versioning Use them for different things Kind of obvious right use the version number in the URI if you",
    "start": "1837360",
    "end": "1843200"
  },
  {
    "text": "want to version the thing itself right you know that particular document I'm fine with that Um build new resources if",
    "start": "1843200",
    "end": "1849679"
  },
  {
    "text": "you have new aspects It's kind of a standard versioning strategy right you have to have some new thing that you",
    "start": "1849679",
    "end": "1855520"
  },
  {
    "text": "want to say about this stuff So well build that new thing and link it to the other one That's what the web is really",
    "start": "1855520",
    "end": "1860559"
  },
  {
    "text": "great at right new things that are connected to existing things which means of course that you",
    "start": "1860559",
    "end": "1867039"
  },
  {
    "text": "have to reserve space for links right so you have to be able to within that existing representation have some place",
    "start": "1867039",
    "end": "1874320"
  },
  {
    "text": "where you can put links to additional stuff right and that has to be designed into your formats from the very",
    "start": "1874320",
    "end": "1879840"
  },
  {
    "text": "beginning That's a very important thing and to keep people happy because some architect is going to tell you you have",
    "start": "1879840",
    "end": "1886399"
  },
  {
    "text": "to have versions Version your docs works amazingly well right just make a",
    "start": "1886399",
    "end": "1891520"
  },
  {
    "text": "document that says this is the documentation of our API and give it version 2.1 That's that's cool Now everybody has",
    "start": "1891520",
    "end": "1898799"
  },
  {
    "text": "a version which is just just the version of that document and you can apply any versioning logic that you like It",
    "start": "1898799",
    "end": "1904480"
  },
  {
    "text": "doesn't have anything to do it does not belong at all into your actual exchanges It doesn't have anything to do with your",
    "start": "1904480",
    "end": "1910880"
  },
  {
    "text": "identities doesn't have anything to do with your formats It's just a document that you version right so yeah I'm actually telling you you should not be",
    "start": "1910880",
    "end": "1916720"
  },
  {
    "text": "versioning And I'm really happy that Josh said the same thing this morning So apparently some people can do that and",
    "start": "1916720",
    "end": "1922080"
  },
  {
    "text": "are kind of happy with it Any questions regarding that any disagreements here come on people you",
    "start": "1922080",
    "end": "1929679"
  },
  {
    "text": "have to disagree Somebody has to do that Yes please I'm not disagreeing but",
    "start": "1929679",
    "end": "1938360"
  },
  {
    "text": "So you were saying there is a spec that puts a version number in into the HTTP header Yeah I'm not aware of header with",
    "start": "1943600",
    "end": "1951200"
  },
  {
    "text": "Oh of course you can Sure you can invent custom headers as much as you like with the same uh pros and cons that that that",
    "start": "1951200",
    "end": "1957279"
  },
  {
    "text": "apply if you invent your own HTTP verbs right you can do that You attach semantics to something that is not",
    "start": "1957279",
    "end": "1963440"
  },
  {
    "text": "standardized Now that actually may be fine sort of ties back to the self-descriptiveness constraint right so",
    "start": "1963440",
    "end": "1969200"
  },
  {
    "text": "maybe self-descriptive for you means it's well defined within your company or",
    "start": "1969200",
    "end": "1974799"
  },
  {
    "text": "well- definfined within your organization and the peers that interact with that That's that's fine It's like a",
    "start": "1974799",
    "end": "1980559"
  },
  {
    "text": "it's like a local standard that you have established If everybody does that then then that's fine You won't find any",
    "start": "1980559",
    "end": "1985840"
  },
  {
    "text": "standard infrastructure that will do anything meaningful with that You might you are at risk that somebody will drop",
    "start": "1985840",
    "end": "1990880"
  },
  {
    "text": "that header for example because some proxy will filter out all the headers it doesn't know So there are some risks but",
    "start": "1990880",
    "end": "1996320"
  },
  {
    "text": "maybe you derive benefit from it What I object to is that you actually have to",
    "start": "1996320",
    "end": "2001519"
  },
  {
    "text": "do that because what I think is the the is a general rule right so this is",
    "start": "2001519",
    "end": "2006720"
  },
  {
    "text": "actually uh this particular thing here right do you know this one pastel's law it's a kind of the the robustness",
    "start": "2006720",
    "end": "2012080"
  },
  {
    "text": "principle things that make stuff stuff simple right which essentially means we all should be nice to each other so if",
    "start": "2012080",
    "end": "2018640"
  },
  {
    "text": "everybody does that right if everybody is is liberal when they accept something and and rigid when they send something",
    "start": "2018640",
    "end": "2024159"
  },
  {
    "text": "than if you connect stuff blah blah blah you'll build up with a more resilient network of things right that's that's",
    "start": "2024159",
    "end": "2030640"
  },
  {
    "text": "kind of the idea Every time you you make you're very very strict about the stuff that you accept on the incoming side you",
    "start": "2030640",
    "end": "2037039"
  },
  {
    "text": "you introduce a potential breakage that shouldn't be there because you're really just being an ass right you're just",
    "start": "2037039",
    "end": "2042559"
  },
  {
    "text": "looking at that and saying \"Well I sure I could I could do it but I won't It",
    "start": "2042559",
    "end": "2047600"
  },
  {
    "text": "doesn't follow the the spec I I I refuse to process this sir it doesn't sound you",
    "start": "2047600",
    "end": "2053358"
  },
  {
    "text": "know that doesn't sound like something that you actually want to do in a system that's supposed to work as opposed to one that's supposed to satisfy some",
    "start": "2053359",
    "end": "2059358"
  },
  {
    "text": "architectural rule So but that's just my that's just my view of things right so",
    "start": "2059359",
    "end": "2064720"
  },
  {
    "text": "there's some rules um that actually say what you should and shouldn't be doing to enable this right to enable this this",
    "start": "2064720",
    "end": "2071040"
  },
  {
    "text": "this kind of communication You're kind of um should actually say receiving side",
    "start": "2071040",
    "end": "2076158"
  },
  {
    "text": "on the left um should support unknown links ignore unknown content And that's a general principle right you don't fall",
    "start": "2076159",
    "end": "2082398"
  },
  {
    "text": "apart if somebody sends you a field that you didn't that you didn't expect If you're not using it so what just pass it",
    "start": "2082399",
    "end": "2088638"
  },
  {
    "text": "along or ignore it but don't just complain about it right of course you shouldn't be just breaking URI",
    "start": "2088639",
    "end": "2094800"
  },
  {
    "text": "structures although I've seen people do that as part of their of their build right they occasionally they break all the URI structures on the server to see",
    "start": "2094800",
    "end": "2102640"
  },
  {
    "text": "which clients fail which is kind of a funny approach that you can only do in a in a scenario where where where you have",
    "start": "2102640",
    "end": "2109680"
  },
  {
    "text": "power over your clients Don't don't do that if you're a web API and just it's not a good way right so uh back from",
    "start": "2109680",
    "end": "2117280"
  },
  {
    "text": "from versioning right if we have this idea about hyperdia you remember this table that I had with these things what",
    "start": "2117280",
    "end": "2122960"
  },
  {
    "text": "what what's what's a possible step and one thing that you can do if you have a REST API and want to make it more hypermedia aware is introduce something",
    "start": "2122960",
    "end": "2130480"
  },
  {
    "text": "that I call a service document which is a stolen term Right so service document is like like a homepage Right this is a",
    "start": "2130480",
    "end": "2138079"
  },
  {
    "text": "homepage for my order management service It has links to reasonable things that",
    "start": "2138079",
    "end": "2143280"
  },
  {
    "text": "you might want to access from there And of course you could uh encode that in XML um or another machine readable",
    "start": "2143280",
    "end": "2150800"
  },
  {
    "text": "format And then essentially your client does the same thing that you and a user would do if you looked at that page",
    "start": "2150800",
    "end": "2156240"
  },
  {
    "text": "Right here the client is no longer hardcoded against the URI It's hardcoded against the value of this real thing",
    "start": "2156240",
    "end": "2163839"
  },
  {
    "text": "Right so if you look for example at the canceled or the fulfilled link relation",
    "start": "2163839",
    "end": "2169359"
  },
  {
    "text": "then this one says well here if you if you want to take a look at the the at the orders that are already done um then",
    "start": "2169359",
    "end": "2174640"
  },
  {
    "text": "you follow this link relation If I change the URI to to point to some archive system nobody cares right",
    "start": "2174640",
    "end": "2180800"
  },
  {
    "text": "because it's just one level of indirection It's not not magic It's not AI or anything It's just simple a simple",
    "start": "2180800",
    "end": "2186560"
  },
  {
    "text": "adding of one level of indirection which might be exactly what you want to do If you have a device like this right that's",
    "start": "2186560",
    "end": "2193280"
  },
  {
    "text": "that that's a pain a pain to update right it really sucks to have to have to",
    "start": "2193280",
    "end": "2198800"
  },
  {
    "text": "update an application one of these Then you can actually do it this way and this thing becomes magically aware of new",
    "start": "2198800",
    "end": "2204240"
  },
  {
    "text": "stuff or new locations or things That's that's you pay for it with this extra interaction which you can alleviate a",
    "start": "2204240",
    "end": "2209760"
  },
  {
    "text": "bit by caching but you gain benefit because you now have this extra level right pretty obvious and of course XML",
    "start": "2209760",
    "end": "2216320"
  },
  {
    "text": "is totally uncool so I put in the JSON variant as well there are some standards covering this right there's something",
    "start": "2216320",
    "end": "2222400"
  },
  {
    "text": "called JSON home which is a draft thing but it's by Mark Nottingham so it'll be a standard soon and it's actually um a somewhat",
    "start": "2222400",
    "end": "2231119"
  },
  {
    "text": "standardized version of that so that's the first step a service document still is something that is a separate thing",
    "start": "2231119",
    "end": "2237599"
  },
  {
    "text": "from your actual from your actual resource right it's still it's somewhat meta data like but it's at least in your",
    "start": "2237599",
    "end": "2245280"
  },
  {
    "text": "application right because I get it from the application The idea here being that my client needs a single URI You give it",
    "start": "2245280",
    "end": "2251200"
  },
  {
    "text": "one URI and that's it From there on it can just discover everything else Solving that discoverability problem",
    "start": "2251200",
    "end": "2257440"
  },
  {
    "text": "right now that's that's a that's a lot better than having it in a word or PDF document right because now you're",
    "start": "2257440",
    "end": "2264000"
  },
  {
    "text": "putting that into the actual runtime The server when it starts up will start serving the service document with the right links maybe even the right",
    "start": "2264000",
    "end": "2270359"
  },
  {
    "text": "capabilities But obviously you have resources in the first place right so if you have resources why not add links to",
    "start": "2270359",
    "end": "2276960"
  },
  {
    "text": "them from the very beginning right so if I if I do something if I get an order I can get back an order and that order can",
    "start": "2276960",
    "end": "2283520"
  },
  {
    "text": "have the links that point me to other things It they it should have the links that point me to other interesting stuff",
    "start": "2283520",
    "end": "2289839"
  },
  {
    "text": "right so um this the syntax really doesn't matter right i used something uh with a with an",
    "start": "2289839",
    "end": "2296480"
  },
  {
    "text": "array here Um that's that's a good thing if you're programming Java or have people who do that and this one is a bit",
    "start": "2296480",
    "end": "2302560"
  },
  {
    "text": "better If you have a more dynamic language it doesn't really matter The important point is that you have a place where you can put in links and that you",
    "start": "2302560",
    "end": "2308560"
  },
  {
    "text": "leave in um the placeholder for uh for way where to which to put more of them",
    "start": "2308560",
    "end": "2313680"
  },
  {
    "text": "right so you can evolve this thing over the course of time and add more interesting stuff to it So that's the second thing The first one is a separate",
    "start": "2313680",
    "end": "2319520"
  },
  {
    "text": "document The second one is we add it to the resources The third one is to actually use it for its original purpose",
    "start": "2319520",
    "end": "2325760"
  },
  {
    "text": "which is to drive the interaction to give the clients opportunities to choose from Right so if I have some sort of",
    "start": "2325760",
    "end": "2332079"
  },
  {
    "text": "state machine some flow that's encoded in my server right certain things in the",
    "start": "2332079",
    "end": "2337920"
  },
  {
    "text": "life cycle in this case of an order that tell it when to move from which state to which next state then um then you can",
    "start": "2337920",
    "end": "2345680"
  },
  {
    "text": "express those possible transitions in the hypermedia response So when the server returns an answer to the client",
    "start": "2345680",
    "end": "2351520"
  },
  {
    "text": "that answer will include only the links that make sense and the client can then only do that because it can only follow",
    "start": "2351520",
    "end": "2357520"
  },
  {
    "text": "those things Make any sense right so we we sort of control the flow of a client",
    "start": "2357520",
    "end": "2362560"
  },
  {
    "text": "by means of the responses that we return from the server Again it's just like a browserbased HTML app which is no",
    "start": "2362560",
    "end": "2369119"
  },
  {
    "text": "coincidence because that's just the web right this whole rest thing is not a services thing It's the architecture of",
    "start": "2369119",
    "end": "2374880"
  },
  {
    "text": "the web So again does this make the client super smart is it now is it now",
    "start": "2374880",
    "end": "2381040"
  },
  {
    "text": "intelligent is it now a human of course not That's not the goal right nobody nobody in this REST space not in the",
    "start": "2381040",
    "end": "2387839"
  },
  {
    "text": "rest space maybe in the SEM web space but nobody in the rest space actually believes in in systems that become",
    "start": "2387839",
    "end": "2393599"
  },
  {
    "text": "magically intelligent This just means you're not depending on a specific URI You're depending on something that",
    "start": "2393599",
    "end": "2400640"
  },
  {
    "text": "redirects you to that URI Right that's the only that's the and that gives you certain certain flexibility here Now",
    "start": "2400640",
    "end": "2407119"
  },
  {
    "text": "that's a nice thing but it's still not not the complete misconception because many people do that right but they still",
    "start": "2407119",
    "end": "2414160"
  },
  {
    "text": "think this right hypermedia is responses with links right so that's all that I",
    "start": "2414160",
    "end": "2419359"
  },
  {
    "text": "talked about It all makes sense I don't regret any of it but it's not the whole story right because links is just one",
    "start": "2419359",
    "end": "2424960"
  },
  {
    "text": "part of hypermedia Links are really a cool thing It's a very cool thing And if you have a REST API that uses links to control the",
    "start": "2424960",
    "end": "2433359"
  },
  {
    "text": "client to make the client more dynamic then you've built something pretty neat But you can go further than that The",
    "start": "2433359",
    "end": "2440000"
  },
  {
    "text": "next thing you can do is you can actually take a look at um at um more interesting hyperdia controls So the",
    "start": "2440000",
    "end": "2446320"
  },
  {
    "text": "first rule that we talked about is you don't want to have clients build URIs using string concatenation right that's",
    "start": "2446320",
    "end": "2451839"
  },
  {
    "text": "why we moved from the descriptive API in that HTML document to something that's contained in the responses that you",
    "start": "2451839",
    "end": "2458079"
  },
  {
    "text": "return from the server Right but the problem is you cannot always enumerate all the possible URIs How would you do",
    "start": "2458079",
    "end": "2465520"
  },
  {
    "text": "that if it's if it can be one of 20 million customers how are you going to make return a list of that doesn't make",
    "start": "2465520",
    "end": "2471920"
  },
  {
    "text": "any sense right so you have to somehow give the client a way to come up with the next request with the including the",
    "start": "2471920",
    "end": "2479359"
  },
  {
    "text": "URI you know all the stuff that they need to have for the next request with some sort of recipe right which is",
    "start": "2479359",
    "end": "2484560"
  },
  {
    "text": "perfectly fine as well So you can provide a recipe to the client It's also hypermedia Actually you're doing that",
    "start": "2484560",
    "end": "2490319"
  },
  {
    "text": "all the time with this example right this is somewhat similar to what the Google homepage looks like right it has",
    "start": "2490319",
    "end": "2496880"
  },
  {
    "text": "a bit more stuff in it but essentially it's what it used to look like what it should look like but it doesn't right it",
    "start": "2496880",
    "end": "2502160"
  },
  {
    "text": "has just a search box and that search box allows you to enter a query and from a rest perspective you can view this as",
    "start": "2502160",
    "end": "2509760"
  },
  {
    "text": "a URI construction form right you return this from the server to the client and",
    "start": "2509760",
    "end": "2515520"
  },
  {
    "text": "now the client will enter a query and when they hit submit because it's a get form a new URI will be built it actually",
    "start": "2515520",
    "end": "2523200"
  },
  {
    "text": "the way how it's built is actually in the HTML spec not the URI spec or the HTTP spec HTML spec tells you how a form",
    "start": "2523200",
    "end": "2531119"
  },
  {
    "text": "is turned into a URI when you have a get form So what's built is a new query and",
    "start": "2531119",
    "end": "2536240"
  },
  {
    "text": "that query has uh what they use here query equals something with a with a",
    "start": "2536240",
    "end": "2541280"
  },
  {
    "text": "text that you have put into the search field So you provide the client with a recipe for constructing any number of of",
    "start": "2541280",
    "end": "2546640"
  },
  {
    "text": "useful URIs And you can do the same thing using a machine readable format It's not as if HTML weren't machine",
    "start": "2546640",
    "end": "2553119"
  },
  {
    "text": "readable but people don't want to use that So um let's just use JSON here And I have a a URI template which is by now",
    "start": "2553119",
    "end": "2559839"
  },
  {
    "text": "also a standard And that actually tells you is the exact same thing right it gives you a URI that looks like hard",
    "start": "2559839",
    "end": "2565119"
  },
  {
    "text": "coding but you're not hard- coding the the the characters in the URI You are just uh saying that you want to you",
    "start": "2565119",
    "end": "2572319"
  },
  {
    "text": "expect to find a query parameter in there Once you have that query parameter you can you can put your your query into",
    "start": "2572319",
    "end": "2579359"
  },
  {
    "text": "that slot and then make a new URL right so that's what you actually depend on",
    "start": "2579359",
    "end": "2584800"
  },
  {
    "text": "And you can do it even you can do even more than that which is give the client a form that maybe contains some default",
    "start": "2584800",
    "end": "2591040"
  },
  {
    "text": "data Right this is like a this is like an HTML form that which is not shown here could have some hidden fields Right",
    "start": "2591040",
    "end": "2597200"
  },
  {
    "text": "it's a it's a form actually I'm telling the client how to build the next request",
    "start": "2597200",
    "end": "2602319"
  },
  {
    "text": "the next post request right it's a hypermedia control that in this particular case tells the",
    "start": "2602319",
    "end": "2608400"
  },
  {
    "text": "client well if you want to post something to me this is the this is the format that I expect with some values",
    "start": "2608400",
    "end": "2614319"
  },
  {
    "text": "with some type information right it's all dynamic it's all at runtime you have the information that this is a text",
    "start": "2614319",
    "end": "2620000"
  },
  {
    "text": "field and this is with new HTML 5 controls this is a an email field this is a date field and then you can fill",
    "start": "2620000",
    "end": "2626480"
  },
  {
    "text": "that in and send it to the server Which essentially means that you can tell the client to send you a request that the",
    "start": "2626480",
    "end": "2632400"
  },
  {
    "text": "client didn't know how to build when it was built Right so you dynamically extend the client's capabilities of",
    "start": "2632400",
    "end": "2639200"
  },
  {
    "text": "sending a request You can do the same thing with JSON as well Right you return something to the client Format doesn't",
    "start": "2639200",
    "end": "2644800"
  },
  {
    "text": "matter You return something to the client and the client then is able to use that to build the next request",
    "start": "2644800",
    "end": "2650160"
  },
  {
    "text": "There's a very very powerful mechanism to build stuff like that Okay",
    "start": "2650160",
    "end": "2656680"
  },
  {
    "text": "Any questions regarding that so the question is how much information can I can I send to the",
    "start": "2656680",
    "end": "2662880"
  },
  {
    "text": "client right can I let them know what exactly I expect here not in HTML not",
    "start": "2662880",
    "end": "2667920"
  },
  {
    "text": "not right now It's better It's becoming better over the time over time And there are certain ways you can do that with your own more or less proprietary format",
    "start": "2667920",
    "end": "2674880"
  },
  {
    "text": "So you could have you could have something like JSON and and link that to a JSON schema Use something like JSON LD",
    "start": "2674880",
    "end": "2680480"
  },
  {
    "text": "Lots of things that allow you to do some of that none of them which allows you to do that in a in a perfect fashion Right",
    "start": "2680480",
    "end": "2687359"
  },
  {
    "text": "so form includes type which totally format Okay So form includes the ENC",
    "start": "2687359",
    "end": "2692880"
  },
  {
    "text": "type Of course you're limited whether you depending on whether you expect this to work in the browser which then means it's a fixed set or whether you're",
    "start": "2692880",
    "end": "2698480"
  },
  {
    "text": "willing to extend that to something else that you mean yourself That's a good point Yes So you have more more ways to say how the how the actual information",
    "start": "2698480",
    "end": "2705839"
  },
  {
    "text": "should be encoded when it's sent from the client to the server Anything else",
    "start": "2705839",
    "end": "2713799"
  },
  {
    "text": "so let me leave you with a final one um which is something that I think uh not",
    "start": "2714160",
    "end": "2719280"
  },
  {
    "text": "many people including myself do Um so most of the time when we think",
    "start": "2719280",
    "end": "2724720"
  },
  {
    "text": "about rest we're talking about um services which is this is wrong but it's",
    "start": "2724720",
    "end": "2731040"
  },
  {
    "text": "a different kind of discussion I'm not talking about the way we could build web UIs unless you're willing to spend extra",
    "start": "2731040",
    "end": "2736480"
  },
  {
    "text": "time sometime later I'll talk to you for hours That's not what I'm talking about What I'm talking about is even when we're talking about machine to machine",
    "start": "2736480",
    "end": "2742079"
  },
  {
    "text": "interaction we typically have this view um of building a service interface right",
    "start": "2742079",
    "end": "2747920"
  },
  {
    "text": "we're building an interface to some capability right and and somehow that's not really what we should be doing right",
    "start": "2747920",
    "end": "2753760"
  },
  {
    "text": "we are we're obviously not doing that That would be you know some pointto-point integration kind of thing",
    "start": "2753760",
    "end": "2758880"
  },
  {
    "text": "but we believe we're doing this We believe we're building an API to a server that will be used by many clients",
    "start": "2758880",
    "end": "2765200"
  },
  {
    "text": "And we can do that in ways that are more or less restful right but what we really",
    "start": "2765200",
    "end": "2770240"
  },
  {
    "text": "should be doing if we really want to do things by the book and get the full seal of approval of the rest high church or",
    "start": "2770240",
    "end": "2776880"
  },
  {
    "text": "something then we should be building hyperdia types that are independent of a particular server Right we shouldn't be",
    "start": "2776880",
    "end": "2784079"
  },
  {
    "text": "building something like a Twitter API We shouldn't be doing that We shouldn't be building a Confluence or a",
    "start": "2784079",
    "end": "2790880"
  },
  {
    "text": "Jira API We should be building a tracker hypermedia format because that tracker",
    "start": "2790880",
    "end": "2796240"
  },
  {
    "text": "hypermedia format would enable me to connect any client that knows the hyperdia format to any server that",
    "start": "2796240",
    "end": "2802160"
  },
  {
    "text": "supports that Right in fact it would allow me to connect any client to any number of servers that support that",
    "start": "2802160",
    "end": "2808520"
  },
  {
    "text": "simultaneously Think about what your browser actually is Your browser is a client that will talk to a lot of",
    "start": "2808520",
    "end": "2814160"
  },
  {
    "text": "machines at the same time right it's it's a it's almost magic It's almost as",
    "start": "2814160",
    "end": "2819359"
  },
  {
    "text": "if you could have a client that could post your status to both Twitter and Facebook Imagine how crazy innovative",
    "start": "2819359",
    "end": "2825280"
  },
  {
    "text": "that would be I mean there are obviously ideas obviously reasons why neither Twitter or Facebook wants you to to have",
    "start": "2825280",
    "end": "2832000"
  },
  {
    "text": "that but that doesn't mean that it's not technically the right thing And maybe we should be building stuff that way Maybe we should be designing our own fancy",
    "start": "2832000",
    "end": "2838560"
  },
  {
    "text": "hyperdia formats Except that's a that's really a lot of work It's really hard to",
    "start": "2838560",
    "end": "2843680"
  },
  {
    "text": "do So maybe we should just use some right this is one of those things application plus atom XML That's",
    "start": "2843680",
    "end": "2849760"
  },
  {
    "text": "actually a standardized format There's a there's a publishing protocol There's a syndication format that you can use to",
    "start": "2849760",
    "end": "2855760"
  },
  {
    "text": "build stuff Or we could use something like open search Or we could use one of",
    "start": "2855760",
    "end": "2860800"
  },
  {
    "text": "those upcoming new fancy things like collection plus JSON or help plus JSON",
    "start": "2860800",
    "end": "2866240"
  },
  {
    "text": "This frantic searching is really funny Help plus JSON or siren plus JSON Lots",
    "start": "2866240",
    "end": "2871599"
  },
  {
    "text": "of existing formats that you could use to do that Or that's the final thought You could just go with text and h text",
    "start": "2871599",
    "end": "2877640"
  },
  {
    "text": "HTML right i mean that's a very very widespread format Why not use that for machine to machine communication right",
    "start": "2877640",
    "end": "2884480"
  },
  {
    "text": "that would be a really nice aspect because after all if you look at this why is this completely acceptable and",
    "start": "2884480",
    "end": "2891520"
  },
  {
    "text": "this not there's really no reason why one kind of XML thing is okay and the",
    "start": "2891520",
    "end": "2897760"
  },
  {
    "text": "other one isn't So you know concluding with the benefits of using HTML as your hyperdia format you get this ubiquity",
    "start": "2897760",
    "end": "2903280"
  },
  {
    "text": "and well-known supported hyperdia controls a pretty good standard client lots of programming tools and",
    "start": "2903280",
    "end": "2908400"
  },
  {
    "text": "essentially as Ian told me uh this this noon uh UIS is a nice side effect right",
    "start": "2908400",
    "end": "2913680"
  },
  {
    "text": "your API magically becomes usable from a browser if it just uses HTML as its format But we all know that's crazy talk",
    "start": "2913680",
    "end": "2920480"
  },
  {
    "text": "because you would never do that right you would never use HTML Just wait a year It's going to it's sounding just as",
    "start": "2920480",
    "end": "2926000"
  },
  {
    "text": "crazy as REST did 10 years ago and maybe it's going to be the thing of the future",
    "start": "2926000",
    "end": "2931200"
  },
  {
    "text": "That's all I have right now as well So the the the comment was in no none of my examples did I talk about how these",
    "start": "2931200",
    "end": "2937520"
  },
  {
    "text": "links should be accessed right i didn't never I did not say use a get here in the hyper media format somewhere you",
    "start": "2937520",
    "end": "2942720"
  },
  {
    "text": "could use a get or a post You except in the HTML example In the HTML example I actually had a form that either had a",
    "start": "2942720",
    "end": "2948800"
  },
  {
    "text": "get or a post in it Right so there are two ways you can do that Either you hardcoded in your in your format's",
    "start": "2948800",
    "end": "2953920"
  },
  {
    "text": "description So if you invent the format then it's your it could be your choice like HTML does with the img tag to say I",
    "start": "2953920",
    "end": "2961200"
  },
  {
    "text": "have a tag It has src equals something and you're only ever supposed to do a get and that's what it says in the spec",
    "start": "2961200",
    "end": "2966640"
  },
  {
    "text": "of your hyperdia format Or you could make it explicit like atom does or like HTML does with the form element and just",
    "start": "2966640",
    "end": "2973359"
  },
  {
    "text": "have a type or action or method um attribute that tells the client to do that The question is how much does it",
    "start": "2973359",
    "end": "2979599"
  },
  {
    "text": "actually give you that's why I tend to not put it in because I I just assume the client to be not as smart to do that",
    "start": "2979599",
    "end": "2986400"
  },
  {
    "text": "at runtime I assume that the client is smart enough to to deter to have the the URI determined at runtime I don't think",
    "start": "2986400",
    "end": "2993599"
  },
  {
    "text": "it has much benefit to provide it that flexibility but maybe I'm wrong It just very much depends on your use case and",
    "start": "2993599",
    "end": "2998960"
  },
  {
    "text": "it would be perfectly fine to include that method as well Query Yeah Ian because I actually see forms as a way of",
    "start": "2998960",
    "end": "3005359"
  },
  {
    "text": "programming the client Forms are a way of programming the client I will fully agree with that Yes So it depends The browser obviously is a very very uh",
    "start": "3005359",
    "end": "3012559"
  },
  {
    "text": "dynamic very gen generic thing the browser doesn't know that you're ordering a book And if you're building a",
    "start": "3012559",
    "end": "3018160"
  },
  {
    "text": "client at that level of of generosity is that a word at that level of being generic right then um then uh it makes",
    "start": "3018160",
    "end": "3025680"
  },
  {
    "text": "perfect sense to have more information in the hyperdia controls The less generic the more specific your client",
    "start": "3025680",
    "end": "3031119"
  },
  {
    "text": "becomes the the the fewer information items the fewer aspects of that you need",
    "start": "3031119",
    "end": "3036319"
  },
  {
    "text": "to specify in the hyperdia format So there are there are many ways to specify the actions that you can do with a",
    "start": "3036319",
    "end": "3041839"
  },
  {
    "text": "document One of the most common things is to include the link relations and have those signify that to the client So",
    "start": "3041839",
    "end": "3048000"
  },
  {
    "text": "if I have a document that I can edit then there's a link relation that allows me to edit it That might actually be a",
    "start": "3048000",
    "end": "3054319"
  },
  {
    "text": "good example for not having to specify whether it's a get or a put So if I include a link link re equals edit then",
    "start": "3054319",
    "end": "3061440"
  },
  {
    "text": "in my documentation I would say whenever you find that link you can do a get to become an edit form or you can just put",
    "start": "3061440",
    "end": "3068160"
  },
  {
    "text": "the new content Then that would be the semantics of this particular type of link you know and I could see that this",
    "start": "3068160",
    "end": "3074000"
  },
  {
    "text": "is a semantic because the edit link relation would be documented that way In fact it is documented exactly that way",
    "start": "3074000",
    "end": "3079599"
  },
  {
    "text": "and you could you could just uh you could just use that Excellent question Do I use do I know any examples of",
    "start": "3079599",
    "end": "3085440"
  },
  {
    "text": "widely used public APIs that fully follow this model no There are some things like there's a new Amazon API",
    "start": "3085440",
    "end": "3091839"
  },
  {
    "text": "forgot for which purpose it was that uses hell and does some hypermedia aspects There is the GitHub pull request",
    "start": "3091839",
    "end": "3096960"
  },
  {
    "text": "API that does some of that but most of the most of those who do um really major",
    "start": "3096960",
    "end": "3102880"
  },
  {
    "text": "things um don't have much hyper media I think Facebook has some but I'm not a Facebook user so I wouldn't know Sorry",
    "start": "3102880",
    "end": "3109040"
  },
  {
    "text": "Tim Ray did a cloud API for Sun right but that's Sun unfortunately So we don't have much of that left Um again but but",
    "start": "3109040",
    "end": "3117200"
  },
  {
    "text": "I'm I'm I'm sort of optimistic about the whole thing If it has value I believe it has then it'll it'll appear in more and",
    "start": "3117200",
    "end": "3122640"
  },
  {
    "text": "more public APIs unless they have a reason that's not technical but rather you know Walt Garden like to not enable",
    "start": "3122640",
    "end": "3129040"
  },
  {
    "text": "that type of stuff So thanks a lot for your attention I'm around if you want to ask questions Have fun at the conference",
    "start": "3129040",
    "end": "3136680"
  },
  {
    "text": "[Music]",
    "start": "3141840",
    "end": "3146619"
  }
]