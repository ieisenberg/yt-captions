[
  {
    "start": "0",
    "end": "132000"
  },
  {
    "text": "yes we thought it might be fun we've had a lot of interested microservices we are in a big room for the big reason there",
    "start": "9550",
    "end": "15889"
  },
  {
    "text": "are lots of people been coming along and we have a bunch of people from different backgrounds and have different",
    "start": "15889",
    "end": "21289"
  },
  {
    "text": "viewpoints on micro-services some people here do not agree with me that's Fred and so that's why you know I like having",
    "start": "21289",
    "end": "28220"
  },
  {
    "text": "this it's good to have enough conflicts of interest to be nice so we're gonna get some questions coming in from the",
    "start": "28220",
    "end": "33829"
  },
  {
    "text": "audience you should be able to go and ask questions on the app although we've had a couple of little niggles with the",
    "start": "33829",
    "end": "39770"
  },
  {
    "text": "app for the last couple of sessions but I'm going to kick things off in a minute but before we get going with the",
    "start": "39770",
    "end": "45410"
  },
  {
    "text": "questions from the audience I thought maybe asked people to briefly introduce themselves and sort of what their",
    "start": "45410",
    "end": "52940"
  },
  {
    "text": "exposure to micro services has been so maybe we'll start with you Fred thank",
    "start": "52940",
    "end": "57980"
  },
  {
    "text": "you hello yes so my name is Fred George",
    "start": "57980",
    "end": "68030"
  },
  {
    "text": "I've been playing with micro-services off and on for about ten years I've made",
    "start": "68030",
    "end": "75740"
  },
  {
    "text": "a lot of mistakes in the process and so I'm very very precious of how I do them now I'm brought Johnson I guess I partly",
    "start": "75740",
    "end": "86990"
  },
  {
    "text": "got into micro services through spring not because micro services and spring",
    "start": "86990",
    "end": "94429"
  },
  {
    "text": "synonymous because obviously micro services much more than any specific language or any specific framework but",
    "start": "94429",
    "end": "101840"
  },
  {
    "text": "because really micro services is actually the architecture that spring always wanted to be like back in the",
    "start": "101840",
    "end": "108679"
  },
  {
    "text": "early days of spring OERs felt that the big fat monolithic application server was not the way to go that the way to go",
    "start": "108679",
    "end": "115819"
  },
  {
    "text": "with small pieces of functionality that were coupled through well-defined",
    "start": "115819",
    "end": "122689"
  },
  {
    "text": "contracts and you know micro services totally fit with that vision and I'm very excited to be trying to play a role",
    "start": "122689",
    "end": "129709"
  },
  {
    "text": "in that future good morning I'm Jessica Kerr have been a developer for 15 years",
    "start": "129709",
    "end": "136070"
  },
  {
    "start": "132000",
    "end": "310000"
  },
  {
    "text": "and I've been fascinated by micro services since I saw since I heard Fred talk about them for you",
    "start": "136070",
    "end": "141230"
  },
  {
    "text": "years ago at our dev and at the time I was like lots of languages itty-bitty little things that we can throw away and",
    "start": "141230",
    "end": "148090"
  },
  {
    "text": "over time you know I'm not so keen on the lots of languages or the super small size or they're throwing them away but I",
    "start": "148090",
    "end": "154519"
  },
  {
    "text": "am still really keen on micro-services because they represent a form of system evolution and I'm fascinated by the",
    "start": "154519",
    "end": "161660"
  },
  {
    "text": "evolution of the complex systems that are our software today hi I'm Mike",
    "start": "161660",
    "end": "168110"
  },
  {
    "text": "Nygaard developer architect operations and author my particular focus is on",
    "start": "168110",
    "end": "174379"
  },
  {
    "text": "building software that survives production in the real world I spend my day job doing two different things",
    "start": "174379",
    "end": "180440"
  },
  {
    "text": "developing really small loosely coupled parts enclosure and consulting to very",
    "start": "180440",
    "end": "185629"
  },
  {
    "text": "large companies that wish they could move faster so I have this sort of whiplash when I go from one gig to",
    "start": "185629",
    "end": "193010"
  },
  {
    "text": "another gig so I'm constantly looking at ways of evolving things faster and",
    "start": "193010",
    "end": "198230"
  },
  {
    "text": "dealing with complex systems but I'm also always wary of the production overhead and burden and performance",
    "start": "198230",
    "end": "204920"
  },
  {
    "text": "implications and stability implications and so on so I look at things with a",
    "start": "204920",
    "end": "210109"
  },
  {
    "text": "jaundiced eye if I can just bite in here if you haven't read Michael's book you",
    "start": "210109",
    "end": "215120"
  },
  {
    "text": "really should thanks we you get a cut on sales for the anyway we I am now obliged",
    "start": "215120",
    "end": "222680"
  },
  {
    "text": "to agree with everything rod says so maybe just to start a question for me",
    "start": "222680",
    "end": "227690"
  },
  {
    "text": "and we'll start taking it for the audience why is there an interesting market services now what's what's been",
    "start": "227690",
    "end": "233299"
  },
  {
    "text": "different over the last couple years why is it the buzzword is your I think first",
    "start": "233299",
    "end": "238519"
  },
  {
    "text": "of all we had a big architectural enabler through the in fact we're using virtual machines and now containers and so it's",
    "start": "238519",
    "end": "244970"
  },
  {
    "text": "now easy to build and package very small pieces of code and deploy it versus you know allocating an entire machine for a",
    "start": "244970",
    "end": "250549"
  },
  {
    "text": "process I think that's been the key enabler that I've seen yeah I'll let on",
    "start": "250549",
    "end": "256099"
  },
  {
    "text": "to that that the other enabler was sort of motivated by virtualization which was all the automated operations tools and",
    "start": "256099",
    "end": "262400"
  },
  {
    "text": "particularly automated operations that was open source so you didn't have to",
    "start": "262400",
    "end": "267410"
  },
  {
    "text": "commit two million dollars to implement HP openview for your company yeah I think there's also been a broader",
    "start": "267410",
    "end": "275020"
  },
  {
    "text": "move towards using larger number of smaller boxes that's been going on for a",
    "start": "275020",
    "end": "280330"
  },
  {
    "text": "very long time but you know I think that micro services and containers really make that a very feasible thing and I",
    "start": "280330",
    "end": "289900"
  },
  {
    "text": "think actually one of the major drivers is doing it the old way is becoming increasingly problematic",
    "start": "289900",
    "end": "295270"
  },
  {
    "text": "we've got more client types you know there's such we need to deliver business",
    "start": "295270",
    "end": "300639"
  },
  {
    "text": "functionality faster although there are challenges in adopting micro-services I think we'd learnt that the old",
    "start": "300639",
    "end": "306340"
  },
  {
    "text": "monolithic way was kind of getting toward the end of the road I agree our",
    "start": "306340",
    "end": "311560"
  },
  {
    "start": "310000",
    "end": "380000"
  },
  {
    "text": "systems are getting so big now that we just have to break them up or they grind completely to a halt and we can't change",
    "start": "311560",
    "end": "318130"
  },
  {
    "text": "them because change is too risky so we've had to find a way to be able to make changes at a smaller scale to",
    "start": "318130",
    "end": "325120"
  },
  {
    "text": "decouple the work of one team from the 18 other teams in the department so",
    "start": "325120",
    "end": "331900"
  },
  {
    "text": "we've had a question in thank you audience I like these things coming in it's a bit impersonal someone so Jessica",
    "start": "331900",
    "end": "340060"
  },
  {
    "text": "alluded to the size of microservices some authors have suggested micro-services should be replaceable in",
    "start": "340060",
    "end": "346300"
  },
  {
    "text": "a single sprint is there a right size for a micro service now I might start",
    "start": "346300",
    "end": "351969"
  },
  {
    "text": "with Fred on this one because I know Fred you have views one of these we we",
    "start": "351969",
    "end": "357909"
  },
  {
    "text": "sort of settled on in Berlin some of the micro service conferences is we kind of all agree that if it's if it's more than",
    "start": "357909",
    "end": "363250"
  },
  {
    "text": "one programmer to develop and design and maintain it it's not a micro service mine tend to be smaller a tenant will",
    "start": "363250",
    "end": "369520"
  },
  {
    "text": "have 30 or 40 micro services for a team of five or six people so generally they are quite small in my world but it's",
    "start": "369520",
    "end": "376539"
  },
  {
    "text": "more than one programmer can sort of get their head around you're probably not in the micro world I think you get a whole",
    "start": "376539",
    "end": "382449"
  },
  {
    "start": "380000",
    "end": "658000"
  },
  {
    "text": "team and a team could be ideally like fewer than six and then it has but",
    "start": "382449",
    "end": "389860"
  },
  {
    "text": "that's just to be an independent service and to me a micro service is I don't care about the size what I care about it",
    "start": "389860",
    "end": "395469"
  },
  {
    "text": "does it represents like one business concept and capability and that it keeps",
    "start": "395469",
    "end": "400539"
  },
  {
    "text": "its data to itself yeah I tend to agree with Jessica I think that one of the",
    "start": "400539",
    "end": "406839"
  },
  {
    "text": "major dry is the data and you know so to whatever",
    "start": "406839",
    "end": "414250"
  },
  {
    "text": "size is appropriate to be self-contained for that data obviously you don't want to have a god database like obviously",
    "start": "414250",
    "end": "420910"
  },
  {
    "text": "you don't want to have you know an Oracle RAC database that's trying to scale out massively and have your whole",
    "start": "420910",
    "end": "427090"
  },
  {
    "text": "enterprise data model but you know if there is some distinct piece of data that needs to be managed for your",
    "start": "427090",
    "end": "433330"
  },
  {
    "text": "business that I think often indicates the appropriate size of the service in front of it I view things on a little",
    "start": "433330",
    "end": "441490"
  },
  {
    "text": "bit of a different axis I like to see all of our code being disposable code so",
    "start": "441490",
    "end": "447040"
  },
  {
    "text": "if something starts to get big enough that you view it as an asset that's worth preserving then it's too big and",
    "start": "447040",
    "end": "453220"
  },
  {
    "text": "you should target it for destruction I think once we start viewing code as an asset where we're stepping down the dark",
    "start": "453220",
    "end": "459280"
  },
  {
    "text": "path yeah I won I think echoing things that both Fred and Michael have said one",
    "start": "459280",
    "end": "466870"
  },
  {
    "text": "thing that I think about is whether or not you could re implement it so micro-services should be small enough",
    "start": "466870",
    "end": "473530"
  },
  {
    "text": "that the risks of experimentation are reasonable so let's suppose you want to write a micro service in Julia or some other",
    "start": "473530",
    "end": "480550"
  },
  {
    "text": "language or framework that might be perceived as risky in you know in the bad old days that's like our",
    "start": "480550",
    "end": "487170"
  },
  {
    "text": "architecture is eg B's that run on WebSphere you can't use anything that doesn't fit this architecture the micro",
    "start": "487170",
    "end": "494200"
  },
  {
    "text": "services world is very different you should be able to try experimentation and you know what if it doesn't work out",
    "start": "494200",
    "end": "499900"
  },
  {
    "text": "you should be able to reimplemented micro service without you know a massive amount of time being involved sort of",
    "start": "499900",
    "end": "507220"
  },
  {
    "text": "moving on from that I mean Jessica talked earlier about this idea which you heard about micro services like great we",
    "start": "507220",
    "end": "513400"
  },
  {
    "text": "can experiment with all these different languages and that's changed over time so what are you know what do you think",
    "start": "513400",
    "end": "519280"
  },
  {
    "text": "about polyglots in this world and maybe just for fun we can start with Mike just",
    "start": "519280",
    "end": "526240"
  },
  {
    "text": "for fun because I work for the company that backs closure yeah I thought that'd be fun I mean so so do you do you buy",
    "start": "526240",
    "end": "532840"
  },
  {
    "text": "into the whole idea that we should be polyglots with our Marko's architectures so I definitely view Polly it as a",
    "start": "532840",
    "end": "541120"
  },
  {
    "text": "benefit that micro services allow you to be polyglot I don't hold it",
    "start": "541120",
    "end": "546250"
  },
  {
    "text": "as a goal to be polyglot but allowing diversity in the tech stacks and and reducing the cost of changing a decision",
    "start": "546250",
    "end": "553690"
  },
  {
    "text": "in each of those implementation points is really valuable I've been at a lot of companies where well I'll give you a",
    "start": "553690",
    "end": "561070"
  },
  {
    "text": "concrete example I was working with a company that had their own implementation of JDO that dated back",
    "start": "561070",
    "end": "566290"
  },
  {
    "text": "from like the first dot-com crash the Java you don't want to know really but",
    "start": "566290",
    "end": "575320"
  },
  {
    "text": "this thing had had been a good idea at one point in time and now it was the foundation for their entire business",
    "start": "575320",
    "end": "581290"
  },
  {
    "text": "they had thousands of objects being mapped through this thing it was their own implementation it had diverged from",
    "start": "581290",
    "end": "587620"
  },
  {
    "text": "the beta of the standard you know there were a lot of ways in which they wanted to get off of it but couldn't because",
    "start": "587620",
    "end": "594430"
  },
  {
    "text": "absolutely everything used it so the the idea that you enable polyglot languages",
    "start": "594430",
    "end": "601720"
  },
  {
    "text": "and frameworks and tech stacks is great because then you can do piecewise change",
    "start": "601720",
    "end": "606790"
  },
  {
    "text": "and let people experiment with the different text ax and say yes this is a good one we should talk about it amongst",
    "start": "606790",
    "end": "613090"
  },
  {
    "text": "ourselves and maybe spread it further but it doesn't mean everyone then builds into that it means you know you still",
    "start": "613090",
    "end": "619240"
  },
  {
    "text": "have the ability to change point wise Fred I know you had a lot of stuff going on yeah I feel it just polyglots an",
    "start": "619240",
    "end": "626380"
  },
  {
    "text": "aspect of environment like to create which is just an aspect of innovation which you want to turn your programmers",
    "start": "626380",
    "end": "631510"
  },
  {
    "text": "loose without constraints and so the fewer rules you have to put in place the better off you are in most cases they",
    "start": "631510",
    "end": "637540"
  },
  {
    "text": "tend to you know choose a couple of different languages to work in maybe two at most",
    "start": "637540",
    "end": "642910"
  },
  {
    "text": "so they settle on it but having not having to tell them which one to use gives them some ability to innovate in",
    "start": "642910",
    "end": "649060"
  },
  {
    "text": "that space and lots of other things like that are key to innovation it's just get rid of the rules turn them loose with",
    "start": "649060",
    "end": "654250"
  },
  {
    "text": "the problems i I think what Michael said",
    "start": "654250",
    "end": "661360"
  },
  {
    "start": "658000",
    "end": "906000"
  },
  {
    "text": "about the decoupling that is necessarily happens when you support polyglot is",
    "start": "661360",
    "end": "666520"
  },
  {
    "text": "really important and so I like not using all the same language just because it forces you to not in mesh in this giant",
    "start": "666520",
    "end": "674530"
  },
  {
    "text": "framework that is dependent on that however I'm I'm not",
    "start": "674530",
    "end": "680589"
  },
  {
    "text": "really impressed with the you should use the right tool for the job but I think",
    "start": "680589",
    "end": "685899"
  },
  {
    "text": "we've emphasized that that you should like pick the language that perfectly fits the problem that can get really",
    "start": "685899",
    "end": "691779"
  },
  {
    "text": "painful switching from one language to another having forbid you have 40 or 50 micro services on your team and you're going",
    "start": "691779",
    "end": "698230"
  },
  {
    "text": "from language to language all day I do that at work I work in too many languages already and it's painful so",
    "start": "698230",
    "end": "704649"
  },
  {
    "text": "when you're picking the right tool for the job that job is not just the business problem you're solving it's the",
    "start": "704649",
    "end": "710470"
  },
  {
    "text": "ecosystem you're working in it's the deployment tools you have it's the languages that you and your team are familiar with you are part of",
    "start": "710470",
    "end": "717370"
  },
  {
    "text": "the system that is the problem you're solving so what you happen to know already that",
    "start": "717370",
    "end": "722440"
  },
  {
    "text": "matters I think it also comes down to what are the operational and contract",
    "start": "722440",
    "end": "731200"
  },
  {
    "text": "requirements of the individual services so for example I certainly wouldn't advocate write all services in Java or",
    "start": "731200",
    "end": "738160"
  },
  {
    "text": "or closure or Python or any other single standard language I think that is a mistake and I think that does crush",
    "start": "738160",
    "end": "744310"
  },
  {
    "text": "innovation as fred has mentioned however I do think it is reasonable to impose",
    "start": "744310",
    "end": "750100"
  },
  {
    "text": "certain standards that might be agreed by the overall organization like you know what if you're going to expose a",
    "start": "750100",
    "end": "755980"
  },
  {
    "text": "restful interface maybe you need to provide a swagger description of that or",
    "start": "755980",
    "end": "761290"
  },
  {
    "text": "you know rental or whatever your preferred lingua franca is I do think it's quite reasonable to say you can",
    "start": "761290",
    "end": "768130"
  },
  {
    "text": "write it in the language of your choice but it has to behave in certain ways maybe it needs to provide certain health",
    "start": "768130",
    "end": "774579"
  },
  {
    "text": "check endpoints to enable it to be managed I don't think you can have it a completely black box where you know god",
    "start": "774579",
    "end": "781089"
  },
  {
    "text": "help you what you're going to get when you invoke it because there's no way you can know yeah so if it's a 12 factor app",
    "start": "781089",
    "end": "786820"
  },
  {
    "text": "it doesn't matter what it is inside because you can operate it and monitor it the same way I wanted to represent",
    "start": "786820",
    "end": "792699"
  },
  {
    "text": "another point of view that that Fred and I got to hear from Chad Fowler from wonder list where he talked about being",
    "start": "792699",
    "end": "799600"
  },
  {
    "text": "in he talked about enforcing polyglot through his team specifically so they",
    "start": "799600",
    "end": "805750"
  },
  {
    "text": "would not create reusable libraries he wanted to make sure nobody was sharing code and making reusable",
    "start": "805750",
    "end": "812370"
  },
  {
    "text": "libraries that would be a point of coupling across the different services now that's a pretty radical perspective",
    "start": "812370",
    "end": "817710"
  },
  {
    "text": "I wouldn't necessarily advocate it everywhere but it's a point of view that that's succeeded for them I do think also that there is no",
    "start": "817710",
    "end": "825510"
  },
  {
    "text": "one-size-fits-all answer I mean micro-services architectures are",
    "start": "825510",
    "end": "830940"
  },
  {
    "text": "inherently linked to the organizations that develop them and you know different organizations have different cultures",
    "start": "830940",
    "end": "837210"
  },
  {
    "text": "not every organization wants to have the same culture so you know I think it's appropriate to consider that and I an",
    "start": "837210",
    "end": "843440"
  },
  {
    "text": "organization may come down on a continuum you know between point a and point B in a different but quite valid",
    "start": "843440",
    "end": "850140"
  },
  {
    "text": "place to other organizations sort of related to that extreme chad fowler",
    "start": "850140",
    "end": "855960"
  },
  {
    "text": "example chad does like being extreme his concern there is driven about coupling",
    "start": "855960",
    "end": "861240"
  },
  {
    "text": "you know that those libraries are coupling how do you manage coupling and",
    "start": "861240",
    "end": "867600"
  },
  {
    "text": "also point actually how do you manage contracts evolution how do you avoid breaking other services and and what",
    "start": "867600",
    "end": "873810"
  },
  {
    "text": "what techniques have you seen work or of course I advocated techniques associated",
    "start": "873810",
    "end": "880320"
  },
  {
    "text": "with event busses and asynchronous services and the coupling level is basically at the messageformat levels but we practice very permissive",
    "start": "880320",
    "end": "887340"
  },
  {
    "text": "structures in that structure we learned our lessons with XML so it just has not",
    "start": "887340",
    "end": "892680"
  },
  {
    "text": "been really an issue relative that in fact we had over 300 micro services and zero documentation of our message",
    "start": "892680",
    "end": "899220"
  },
  {
    "text": "formats didn't need it I was a bit surprised by that but that's that's",
    "start": "899220",
    "end": "904470"
  },
  {
    "text": "actually how it turned out if you get the coupling between services",
    "start": "904470",
    "end": "909480"
  },
  {
    "start": "906000",
    "end": "1229000"
  },
  {
    "text": "level there's there's a there's a spectrum here there's a trade-off at one extreme you have backwards compatibility",
    "start": "909480",
    "end": "915960"
  },
  {
    "text": "like the stripe external API is fully backwards compatible not only a read backwards compatible but whatever",
    "start": "915960",
    "end": "922110"
  },
  {
    "text": "version of the API you receive when you first call it you will magically get that forever so extreme lengths to",
    "start": "922110",
    "end": "929850"
  },
  {
    "text": "backwards compatibility is a technical solution to a problem on the other side you have what we do more of internally",
    "start": "929850",
    "end": "936240"
  },
  {
    "text": "which is coordination which is you're actually working with a team to say okay we're gonna change this for",
    "start": "936240",
    "end": "941970"
  },
  {
    "text": "backwards compatible and then you're gonna do the release and then we're gonna drop the old one and that's less",
    "start": "941970",
    "end": "947100"
  },
  {
    "text": "code and more people interaction so I think I think you've got a you've got a trade out there I think this is an",
    "start": "947100",
    "end": "955199"
  },
  {
    "text": "important area where there's significantly more work to do because I think that essentially you",
    "start": "955199",
    "end": "961290"
  },
  {
    "text": "very often get services that are coupled by something either it's a message format or actually a contract and I do",
    "start": "961290",
    "end": "969629"
  },
  {
    "text": "think that people need to be very mindful about that I think I think they should be explicit which is why I really",
    "start": "969629",
    "end": "977509"
  },
  {
    "text": "like any form of you know strong documentation whether it's swagger or whatever it is or in message formats you",
    "start": "977509",
    "end": "985860"
  },
  {
    "text": "know it it will differ but I do think that it's pretty important to be explicit I think it can help developers",
    "start": "985860",
    "end": "991379"
  },
  {
    "text": "it can help testing it can help automation and it can also help you spot things that might break before they",
    "start": "991379",
    "end": "997980"
  },
  {
    "text": "actually break yeah I'm I'm with rod on this one and not just because he plucked",
    "start": "997980",
    "end": "1003110"
  },
  {
    "text": "my book earlier but but truly with him on on it we've actually been developing",
    "start": "1003110",
    "end": "1008209"
  },
  {
    "text": "some tooling that would take a swagger specification and apply a derivative of",
    "start": "1008209",
    "end": "1013519"
  },
  {
    "text": "our simulation testing techniques so we can exercise an interface and say look your your protocol states that you allow",
    "start": "1013519",
    "end": "1019699"
  },
  {
    "text": "these inputs we gave you an activity sequence that included these inputs and look at the way you barfed all over our",
    "start": "1019699",
    "end": "1025548"
  },
  {
    "text": "shoes by using that kind of technique and generative testing we get a lot more",
    "start": "1025549",
    "end": "1033558"
  },
  {
    "text": "bang for our buck than we would with any kind of unit or integration testing and then also by having that specification",
    "start": "1033559",
    "end": "1040308"
  },
  {
    "text": "we can apply mechanical tools to say your new version is only expanding the",
    "start": "1040309",
    "end": "1046909"
  },
  {
    "text": "contract therefore it's backwards compatible or we can say mmm you're now requiring something you did not require",
    "start": "1046909",
    "end": "1053179"
  },
  {
    "text": "before that's a contraction in your contract not allowed that's a breaking change and and by doing that we can",
    "start": "1053179",
    "end": "1060260"
  },
  {
    "text": "apply rules locally at the levels of individual services that make them better citizens in the ecosystem yeah I",
    "start": "1060260",
    "end": "1066049"
  },
  {
    "text": "I strongly agree because I think the reality is that complexity never goes",
    "start": "1066049",
    "end": "1071480"
  },
  {
    "text": "away we're in an essentially hopeless industry fighting a hope spero no matter what we do better than",
    "start": "1071480",
    "end": "1079280"
  },
  {
    "text": "we did last year or yesterday people come up with new requirements that it",
    "start": "1079280",
    "end": "1084530"
  },
  {
    "text": "make life harder right they want stuff that's more complex they want stuff faster so we're always fighting entropy",
    "start": "1084530",
    "end": "1091340"
  },
  {
    "text": "and the reality is if you get rid of the monolith some of the entropy moves to the kind of joins and contracts or lack",
    "start": "1091340",
    "end": "1098870"
  },
  {
    "text": "thereof between your micro-services and that really is very likely in my experience to bite you unless you're",
    "start": "1098870",
    "end": "1106100"
  },
  {
    "text": "actually very mindful of it I'll give for the politic whirl on this book so no he does not agree oh yeah I don't agree",
    "start": "1106100",
    "end": "1112549"
  },
  {
    "text": "with these guys it's nonsense but the so degree my environments have been different we've been developing",
    "start": "1112549",
    "end": "1117740"
  },
  {
    "text": "applications for internal consumption within my companies so we're not trying to publish api's we're not trying to",
    "start": "1117740",
    "end": "1123470"
  },
  {
    "text": "make contracts with outside world we're don't have extra outside users trying to use our system we've got to figure out who to blame those are not",
    "start": "1123470",
    "end": "1129980"
  },
  {
    "text": "issues I had to wrestle with all I do is build systems for an internal client to make them happy they were sitting with",
    "start": "1129980",
    "end": "1136220"
  },
  {
    "text": "me we have those dialogues there I didn't need to write the documentation so I would I don't subscribe to",
    "start": "1136220",
    "end": "1142520"
  },
  {
    "text": "constantly you always need a document because it makes it better or your sponsors complicated I don't want to spend the time doing that when it's not",
    "start": "1142520",
    "end": "1148610"
  },
  {
    "text": "necessary I got more things to do with my money and so I want to go faster and that will slow me down training track a",
    "start": "1148610",
    "end": "1156080"
  },
  {
    "text": "bit someone's asked a question about how do you manage the front door when you've got say a hundred microservices what do",
    "start": "1156080",
    "end": "1163460"
  },
  {
    "text": "you do in terms of having a facade to the outside world is this where you'd use an API gateway or what experiences",
    "start": "1163460",
    "end": "1171110"
  },
  {
    "text": "of you guys had of solving these sorts of problems eventually they all come",
    "start": "1171110",
    "end": "1176179"
  },
  {
    "text": "down to something that looks like a gateway slash router slash throttle so",
    "start": "1176179",
    "end": "1182570"
  },
  {
    "text": "that you know the the discovery and location and naming is one very important aspect but there's also the",
    "start": "1182570",
    "end": "1188690"
  },
  {
    "text": "operational aspect of saying at some point your clients are going to go berserk and try to kill your system in",
    "start": "1188690",
    "end": "1195049"
  },
  {
    "text": "fact sometimes you even do it to yourselves I had a client that was working with a channel intelligence type",
    "start": "1195049",
    "end": "1200929"
  },
  {
    "text": "of outfit and told them to go start indexing every document they had at",
    "start": "1200929",
    "end": "1206480"
  },
  {
    "text": "which point they ddos themselves through their channel partner and if you don't have some means",
    "start": "1206480",
    "end": "1212040"
  },
  {
    "text": "of throttling that down you're just dead so there's always some kind of a boundary oh and put a boundary on your",
    "start": "1212040",
    "end": "1218550"
  },
  {
    "text": "outcalls as well because sometimes your suppliers malfunction - have you got any",
    "start": "1218550",
    "end": "1224490"
  },
  {
    "text": "technology or any advice of stuff in that space one thing that I heard in the",
    "start": "1224490",
    "end": "1231390"
  },
  {
    "start": "1229000",
    "end": "1445000"
  },
  {
    "text": "question and this is a little outside of the technology because yeah I mean at some point you have load balancing that",
    "start": "1231390",
    "end": "1237390"
  },
  {
    "text": "is hitting certain services but if you have a hundred micro services I hope those aren't all talking to the outside",
    "start": "1237390",
    "end": "1244290"
  },
  {
    "text": "world because at some point you still need a level of organization above the process so hopefully these micro",
    "start": "1244290",
    "end": "1251670"
  },
  {
    "text": "services are operating in little ecosystems which themselves expose certain api's that are more intended for",
    "start": "1251670",
    "end": "1258720"
  },
  {
    "text": "calls from either the outside world or maybe from other parts of the organization and it and some of these",
    "start": "1258720",
    "end": "1265110"
  },
  {
    "text": "hundred micro services are just little aggregators that are like okay there's these three internal services I'm gonna",
    "start": "1265110",
    "end": "1270780"
  },
  {
    "text": "put this stuff together and give it to you in a format that is legible outside this team I agree with Jessica's point",
    "start": "1270780",
    "end": "1278700"
  },
  {
    "text": "there I think there's stuff that we learnt in the old world of writing very large monolithic applications it can",
    "start": "1278700",
    "end": "1284610"
  },
  {
    "text": "still be valuable one is like if you've got a number of subsystems in a large monolithic application you want to limit",
    "start": "1284610",
    "end": "1290430"
  },
  {
    "text": "the coupling between them right you want each subsystem to provide a surface area that is manageable to other subsystems",
    "start": "1290430",
    "end": "1297930"
  },
  {
    "text": "and I see that is pretty much the same issue as Jessica outlined except that",
    "start": "1297930",
    "end": "1304920"
  },
  {
    "text": "obviously it's with the different set of technologies I think honestly if you let your external clients at all your",
    "start": "1304920",
    "end": "1311760"
  },
  {
    "text": "hundreds of micro services and then you you might as well give up because bad things will happen they will happen yeah",
    "start": "1311760",
    "end": "1319320"
  },
  {
    "text": "I think the situation's kind of analogous to if you're building a large monolithic system and giving excess to everybody to every class you have with",
    "start": "1319320",
    "end": "1326010"
  },
  {
    "text": "every public method available no there's just a few of those outs to the outside world a few gateways into the system the",
    "start": "1326010",
    "end": "1331500"
  },
  {
    "text": "system turns on itself and spits the answers back out and I do the same thing when I build micro server systems sort",
    "start": "1331500",
    "end": "1338250"
  },
  {
    "text": "of sort of related to this in a way how should micro sources talk to each other",
    "start": "1338250",
    "end": "1344240"
  },
  {
    "text": "should they should they only ever use asynchronous message buses should they",
    "start": "1344240",
    "end": "1349730"
  },
  {
    "text": "just talk via HTTP protocol 50 what's the right answer",
    "start": "1349730",
    "end": "1355530"
  },
  {
    "text": "I I think there's no right answer to this it I think it depends upon a lot of the problem but I think there's it is",
    "start": "1355530",
    "end": "1361860"
  },
  {
    "text": "sort of an architectural decision to be made quite early are you going to go sort of a synchronous restful like registration process or are you going to",
    "start": "1361860",
    "end": "1368850"
  },
  {
    "text": "try to you know decouple even further and I think type of problem you're trying to solve drivers that answer",
    "start": "1368850",
    "end": "1373950"
  },
  {
    "text": "I think typical systems will end up having some cases of both but you know I",
    "start": "1373950",
    "end": "1380970"
  },
  {
    "text": "mean obviously stacking up synchronous calls he's not going to work so you know",
    "start": "1380970",
    "end": "1385980"
  },
  {
    "text": "I don't I don't think that you can build a system of any complexity purely through synchronous operation you can",
    "start": "1385980",
    "end": "1391950"
  },
  {
    "text": "build a system of any complexity using a synchronous invocation but in some cases",
    "start": "1391950",
    "end": "1398700"
  },
  {
    "text": "that will probably end up being more complex than something that involves some synchronous usage I mean I think",
    "start": "1398700",
    "end": "1405830"
  },
  {
    "text": "ideally we should look to technologies that actually make it relatively easy to",
    "start": "1405830",
    "end": "1413100"
  },
  {
    "text": "make that choice so for example if I was implementing a micro service I would want to implement as much of the",
    "start": "1413100",
    "end": "1418740"
  },
  {
    "text": "functionality as possible so it could be behind different styles of invocation so",
    "start": "1418740",
    "end": "1427350"
  },
  {
    "text": "for example I wouldn't want to you know say if you're writing in any technology that has web controllers some kind of",
    "start": "1427350",
    "end": "1435390"
  },
  {
    "text": "restful controller I mean obviously you don't want to bake your business logic in there because that's going to be a problem if you ever realize that perhaps",
    "start": "1435390",
    "end": "1442040"
  },
  {
    "text": "a messaging approach was better I will say that consider maybe not doing",
    "start": "1442040",
    "end": "1449190"
  },
  {
    "start": "1445000",
    "end": "1796000"
  },
  {
    "text": "everything over HTTP and JSON that is like the first thing and it's the easiest thing and part of the reason is",
    "start": "1449190",
    "end": "1455460"
  },
  {
    "text": "because it's kind of like human understandable and one of the problems with micro services is traceability",
    "start": "1455460",
    "end": "1460830"
  },
  {
    "text": "is how do you know what went where and how do you follow the bits and if you've got the JSON printing to the logs like",
    "start": "1460830",
    "end": "1465990"
  },
  {
    "text": "we do at every request then is that helps with debugging and it helps with",
    "start": "1465990",
    "end": "1471270"
  },
  {
    "text": "human understanding it does not help with speed so at the point where that gets too slow you know can",
    "start": "1471270",
    "end": "1476700"
  },
  {
    "text": "that r0m queue or something faster I don't not not a protocol person but then",
    "start": "1476700",
    "end": "1482610"
  },
  {
    "text": "consider how you're going to implement traceability and how are you going to add legibility to this system especially",
    "start": "1482610",
    "end": "1488790"
  },
  {
    "text": "as it grows and gets more complicated so how should micro services talk to each",
    "start": "1488790",
    "end": "1494520"
  },
  {
    "text": "other why through circuit breakers of course well that there is a resiliency",
    "start": "1494520",
    "end": "1500700"
  },
  {
    "text": "conversation to be had here isn't there mic I mean there some of the protocols we pick don't always lend themselves to",
    "start": "1500700",
    "end": "1507980"
  },
  {
    "text": "yeah I'm being a little tongue in cheek of course but but in my workshops and in my sessions I definitely point out that",
    "start": "1507980",
    "end": "1514590"
  },
  {
    "text": "you know most of the operational problems we we incur come from synchronous requests reply type of",
    "start": "1514590",
    "end": "1520860"
  },
  {
    "text": "protocols so it's not enough just to introduce an event bus if you're gonna",
    "start": "1520860",
    "end": "1526020"
  },
  {
    "text": "do event style communication don't send an event and then demand to get back",
    "start": "1526020",
    "end": "1532290"
  },
  {
    "text": "exactly one event you know sort of announce what you have to announce and listen for what others have to announce",
    "start": "1532290",
    "end": "1538920"
  },
  {
    "text": "and then synthesize your result but don't just reinvent RPC over a message bus yeah I actually think in terms of I",
    "start": "1538920",
    "end": "1547020"
  },
  {
    "text": "agree with Jessica's point that obviously Jason serialization is",
    "start": "1547020",
    "end": "1552840"
  },
  {
    "text": "potentially very inefficient but I think that as we all know premature",
    "start": "1552840",
    "end": "1559200"
  },
  {
    "text": "optimization is the root of all evil very often I think it's actually a pretty good starting point it's very",
    "start": "1559200",
    "end": "1564450"
  },
  {
    "text": "traceable as she said you know I I'm always wary of saying well this won't be fast enough so let's make it more opaque",
    "start": "1564450",
    "end": "1570990"
  },
  {
    "text": "no let's see let's see what happens because it may well be that the opacity",
    "start": "1570990",
    "end": "1576780"
  },
  {
    "text": "is more dangerous than the latency somewhat related to this area is a",
    "start": "1576780",
    "end": "1581940"
  },
  {
    "text": "cushion here around caching so can you comment on caching between microservices",
    "start": "1581940",
    "end": "1587550"
  },
  {
    "text": "have you used reverse proxy layers or do you only use caching inside the service with things like Redis maybe Fred ID",
    "start": "1587550",
    "end": "1598620"
  },
  {
    "text": "we're definitely fans of caching probably because we don't need we can work with eventual consistency and the",
    "start": "1598620",
    "end": "1604320"
  },
  {
    "text": "problems we tend to solve so the fact I'm a little bit out of date with everybody else is kind of okay in the domains I tend to work yet",
    "start": "1604320",
    "end": "1610800"
  },
  {
    "text": "and so I'm probably okay with caching but it's it's something I don't tend to put in there unless performance says",
    "start": "1610800",
    "end": "1616110"
  },
  {
    "text": "it's necessary and provide some value to me I'm very lazy about what could I decide to write because I rather write",
    "start": "1616110",
    "end": "1621600"
  },
  {
    "text": "new functionality then then make the old work a little better yeah I mean coming",
    "start": "1621600",
    "end": "1626760"
  },
  {
    "text": "back to my point about premature optimization and opacity if you really want to make a system harder to",
    "start": "1626760",
    "end": "1632160"
  },
  {
    "text": "understand just sprinkle sprinkle some magic caching pixie dust and you'll make",
    "start": "1632160",
    "end": "1637680"
  },
  {
    "text": "it very hard to figure out what's going on obviously having said that caching is very very important to making many",
    "start": "1637680",
    "end": "1644190"
  },
  {
    "text": "applications work and of course we also have the option frequently of caching on the client which can actually be really",
    "start": "1644190",
    "end": "1650160"
  },
  {
    "text": "good because it can avoid sending a message or making a network call and often it is the client that really",
    "start": "1650160",
    "end": "1656190"
  },
  {
    "text": "understands its need for updated information so often the client understands the tolerance for staleness",
    "start": "1656190",
    "end": "1663120"
  },
  {
    "text": "much more than something that the serving content took the words right out of my mouth this sort of outlines some",
    "start": "1663120",
    "end": "1672360"
  },
  {
    "text": "of the challenges there's lots of questions to be answered here about how to sort of talk how do you do handle",
    "start": "1672360",
    "end": "1679380"
  },
  {
    "text": "performance that's a lot to take in as a question here was how do you know if micro services are right for you I mean",
    "start": "1679380",
    "end": "1686220"
  },
  {
    "text": "is there any is there any organization you wouldn't suggest micro services for I've definitely walked away from clients",
    "start": "1686220",
    "end": "1692670"
  },
  {
    "text": "that said they went to micro services and and generally I'm looking for the enablers in place to be successful I'm",
    "start": "1692670",
    "end": "1699480"
  },
  {
    "text": "looking for an organization that if maybe they don't have one-click deployment but darn close to one-click if they're not there if they've got",
    "start": "1699480",
    "end": "1705510"
  },
  {
    "text": "three weeks deployment process it's like go fix that then call me I'll also push pretty hard to make sure",
    "start": "1705510",
    "end": "1711360"
  },
  {
    "text": "that they have a problem that needs to be solved with micro services that they have a real problem that just just",
    "start": "1711360",
    "end": "1716940"
  },
  {
    "text": "doesn't is worth to a retraining the program is refocusing our organization resources and if you haven't got support",
    "start": "1716940",
    "end": "1723510"
  },
  {
    "text": "for almost from the top-level CIO level that says I'm gonna make the sort of transition because there is social implications to how we're doing things",
    "start": "1723510",
    "end": "1729900"
  },
  {
    "text": "you're not ready for that you know again walk away and come back when you're ready Mike",
    "start": "1729900",
    "end": "1734970"
  },
  {
    "text": "yeah I definitely agree with all of that you know moving to this style requires a very high degree of trust in the",
    "start": "1734970",
    "end": "1741120"
  },
  {
    "text": "individual developers and and their ability to be responsible for the things that they create and just most organizations",
    "start": "1741120",
    "end": "1748770"
  },
  {
    "text": "are antithetical to that kind of trust especially the bigger and the older ones I think it also depends on whether or",
    "start": "1748770",
    "end": "1755370"
  },
  {
    "text": "not the organization has a problem I mean there exist organizations who are successfully deploying monolithic",
    "start": "1755370",
    "end": "1762360"
  },
  {
    "text": "applications and you know I think one of the dangers that can cause any",
    "start": "1762360",
    "end": "1768000"
  },
  {
    "text": "technology to get a bad name is when people start to adopt it because they feel they should adopt it rather than",
    "start": "1768000",
    "end": "1774240"
  },
  {
    "text": "because it really provides value for them in particular so you know I think",
    "start": "1774240",
    "end": "1780720"
  },
  {
    "text": "that if an organization is perfectly happy with their monolithic style maybe",
    "start": "1780720",
    "end": "1786690"
  },
  {
    "text": "maybe they should stay that I suspect that most organizations are not but you",
    "start": "1786690",
    "end": "1792150"
  },
  {
    "text": "know I think we should be very careful of just running after shiny objects my",
    "start": "1792150",
    "end": "1799590"
  },
  {
    "start": "1796000",
    "end": "2047000"
  },
  {
    "text": "first reaction is do you have to I mean we're talking here about well how do they talk to each other do we need",
    "start": "1799590",
    "end": "1805350"
  },
  {
    "text": "caching oh we definitely need circuit breakers there's a lot of decisions and oh and then there's there's",
    "start": "1805350",
    "end": "1811800"
  },
  {
    "text": "documentation and then there's the tracking who depends on what and then there's the traceability these are a lot of problems that you just don't have",
    "start": "1811800",
    "end": "1818220"
  },
  {
    "text": "when something runs in a single process do you need to take that on and I would",
    "start": "1818220",
    "end": "1824010"
  },
  {
    "text": "say you probably do at the point where the coordination among people with",
    "start": "1824010",
    "end": "1829440"
  },
  {
    "text": "deploying in the monolith and they're getting in each other's way but this is not an all-or-nothing either you can say",
    "start": "1829440",
    "end": "1836330"
  },
  {
    "text": "this team is particularly on a different deployment schedule than this team and",
    "start": "1836330",
    "end": "1841380"
  },
  {
    "text": "they're getting in each other's way we need to draw a line here and separate those pieces we need more disagreement",
    "start": "1841380",
    "end": "1849240"
  },
  {
    "text": "on this panel so I'm going to disagree partially because I think and I'm going",
    "start": "1849240",
    "end": "1855630"
  },
  {
    "text": "to give another plug for Michael's book because Michael's book actually gives some great examples of where you can't",
    "start": "1855630",
    "end": "1861990"
  },
  {
    "text": "ignore things like circuit breakers and monolithic applications so it may well be that some of the complexity that we",
    "start": "1861990",
    "end": "1868410"
  },
  {
    "text": "talked about in micro services it may well be that you know some of that complexity is still gonna bite you if",
    "start": "1868410",
    "end": "1873810"
  },
  {
    "text": "you don't address it even in a monolithic world so it's not like all these in you one more",
    "start": "1873810",
    "end": "1882020"
  },
  {
    "text": "add-on we were talking just before the panel about how there's there's a very",
    "start": "1882020",
    "end": "1887580"
  },
  {
    "text": "strong correspondence between a certain style of OO development that we mostly saw in the small talk world and the way",
    "start": "1887580",
    "end": "1894930"
  },
  {
    "text": "that micro services ought to work the notion of you know sending messages describing things in terms of the",
    "start": "1894930",
    "end": "1901680"
  },
  {
    "text": "behavior that they offer or not the data that they contain having things that are fairly large grained and fairly",
    "start": "1901680",
    "end": "1907710"
  },
  {
    "text": "responsible for their own their own activities all of those traits can be true in an oo world ie a monolith and",
    "start": "1907710",
    "end": "1916410"
  },
  {
    "text": "they can be true in a micro-services world so if you're going down the monolith first then microservices path",
    "start": "1916410",
    "end": "1922500"
  },
  {
    "text": "just make sure that you do practice you know good sound design don't automatically create a layered structure",
    "start": "1922500",
    "end": "1930630"
  },
  {
    "text": "where every domain concept appears at every layer except suffixed with table",
    "start": "1930630",
    "end": "1935910"
  },
  {
    "text": "and DTO and domain and what-have-you all the way up through definitely think",
    "start": "1935910",
    "end": "1942330"
  },
  {
    "text": "about the horizontal isolation between different parts of your monolith and look for those subsystem boundaries",
    "start": "1942330",
    "end": "1948120"
  },
  {
    "text": "where you can put a facade object that acts as an internal API in front of a",
    "start": "1948120",
    "end": "1953640"
  },
  {
    "text": "bunch of objects and you'll find that that's a very natural transition then to microservices later almost isomorphic",
    "start": "1953640",
    "end": "1960620"
  },
  {
    "text": "read my journey to micro services actually started with billing in monolithic object apps and and seeing",
    "start": "1960620",
    "end": "1967920"
  },
  {
    "text": "those and what the phenomena I saw was after a few years the glorious structure",
    "start": "1967920",
    "end": "1973590"
  },
  {
    "text": "we put together gets you know completely crippled and destroyed to some degree my journey into micro services is trying to",
    "start": "1973590",
    "end": "1979950"
  },
  {
    "text": "build a defense that makes it harder for the casual programmer who goes into a your monolith and destroys it for the",
    "start": "1979950",
    "end": "1986700"
  },
  {
    "text": "same thing in another system if you go in to go into a micro service and destroy the micro service okay I got a",
    "start": "1986700",
    "end": "1992400"
  },
  {
    "text": "heartlines could be right I can do that but you're not destroying 45 other micro services as you used to be able to do in",
    "start": "1992400",
    "end": "1997710"
  },
  {
    "text": "a monolith one interesting benefit of micro services is I think that it can",
    "start": "1997710",
    "end": "2004340"
  },
  {
    "text": "prevent people trying to be too clever so one of the things you can do if you've got a really large monolithic",
    "start": "2004340",
    "end": "2010119"
  },
  {
    "text": "codebase and you're writing in a language with an advanced type system for example you can do some amazing",
    "start": "2010119",
    "end": "2015939"
  },
  {
    "text": "stuff you can like say for example if you've got the Scala type system you can create things of wonder and the problem",
    "start": "2015939",
    "end": "2023919"
  },
  {
    "text": "is that they can actually become rather difficult to work on whereas I think once you break the functionality into",
    "start": "2023919",
    "end": "2029919"
  },
  {
    "text": "these relatively small things and they talk to get to each other in relatively",
    "start": "2029919",
    "end": "2035019"
  },
  {
    "text": "dumb ways you are actually prevented from raising you know magnificent intellectual edifices that may haunt",
    "start": "2035019",
    "end": "2042639"
  },
  {
    "text": "generations of programmers Jessica did you wanna I wanted to add to Michael's",
    "start": "2042639",
    "end": "2050289"
  },
  {
    "text": "point that yes practice like isolated object-oriented design and that takes",
    "start": "2050289",
    "end": "2055539"
  },
  {
    "text": "care and and exactly not having anyone come in and mess it up in the name of",
    "start": "2055539",
    "end": "2060549"
  },
  {
    "text": "removing duplication that is really just code that happens to look the same but be careful on the database side because",
    "start": "2060549",
    "end": "2068470"
  },
  {
    "text": "if if code from this object is reaching through to the database for something",
    "start": "2068470",
    "end": "2074259"
  },
  {
    "text": "that was actually maintained over here you are screwed because changing code is hard but migrating data is immensely",
    "start": "2074259",
    "end": "2081279"
  },
  {
    "text": "harder I think I'd also point out that Fred name drops upon us earlier today",
    "start": "2081279",
    "end": "2087628"
  },
  {
    "text": "he's the person that kind of invented modules and many programmers have never even read his papers so I think a lot of",
    "start": "2087629",
    "end": "2094539"
  },
  {
    "text": "people who create bad non-listed maybe just learn about what a module is I just like quickly to echo Jessica's point",
    "start": "2094539",
    "end": "2101619"
  },
  {
    "text": "about not exposing the database if you have my presentation today I said lots of nice things about spring I think",
    "start": "2101619",
    "end": "2107619"
  },
  {
    "text": "they're doing some really cool stuff but one thing that they've done recently that I don't think is cool is Auto",
    "start": "2107619",
    "end": "2113079"
  },
  {
    "text": "magically exposing your data store using rest I think that's a truly horrible",
    "start": "2113079",
    "end": "2118509"
  },
  {
    "text": "idea obviously it's not unique to spring many technologies have made that very easy to do it is really really dangerous",
    "start": "2118509",
    "end": "2125739"
  },
  {
    "text": "if you want to do that view yourself is writing something that is gonna be throwaway because your chance of",
    "start": "2125739",
    "end": "2131739"
  },
  {
    "text": "evolving that is nil basically we did get a question on that actually was you know do you have to hide your data",
    "start": "2131739",
    "end": "2138039"
  },
  {
    "text": "afraid your talk was all about that earlier today really know many ways Ivy gives you the robustness to hide the",
    "start": "2138039",
    "end": "2144310"
  },
  {
    "text": "I think when services give their data away they're just begging for somebody else to do the calculations for them and now you got you know 45 places of change",
    "start": "2144310",
    "end": "2151240"
  },
  {
    "text": "I mean the codebase I worked in India we were I to write a unit test",
    "start": "2151240",
    "end": "2156310"
  },
  {
    "text": "I wanted to allocate an object in get you know make sure it's not nil that's all I was trying to do to be seven hours",
    "start": "2156310",
    "end": "2161680"
  },
  {
    "text": "write that test because it just pulled in this code in this code in this code in this code because those boundaries",
    "start": "2161680",
    "end": "2166810"
  },
  {
    "text": "were broken so yeah I'm huge on keeping those boundaries strict sometimes you",
    "start": "2166810",
    "end": "2173260"
  },
  {
    "text": "like really need the data in two places maybe for performance reasons okay one service is in charge of that data and",
    "start": "2173260",
    "end": "2179380"
  },
  {
    "text": "you could replicate it from one place to the other if you need that for performance reasons or something that's still code that's under your control and",
    "start": "2179380",
    "end": "2186610"
  },
  {
    "text": "if the structure the data needs to change there's code that you can change to accommodate that so fred was talking",
    "start": "2186610",
    "end": "2197140"
  },
  {
    "text": "about the entity services trap earlier and I was actually hoping he would rant",
    "start": "2197140",
    "end": "2202450"
  },
  {
    "text": "even more in his talk but if he didn't see the talk he should watch the video one of the things that I always think",
    "start": "2202450",
    "end": "2209020"
  },
  {
    "text": "about with micro service designs is for any given type of request at the edge",
    "start": "2209020",
    "end": "2215670"
  },
  {
    "text": "what are the set of services that get activated during processing that requests so if you think about your",
    "start": "2215670",
    "end": "2222550"
  },
  {
    "text": "tracing framework you say you know request comes in here and it lights up this service and these nodes and these",
    "start": "2222550",
    "end": "2227980"
  },
  {
    "text": "services and so on you can draw an activation graph for every kind of request and what I find when people",
    "start": "2227980",
    "end": "2234160"
  },
  {
    "text": "implement entity services is all of their activation graphs end up with this bottom layer entirely lit up for all the",
    "start": "2234160",
    "end": "2242170"
  },
  {
    "text": "entity services what this means is all of their features have common mode",
    "start": "2242170",
    "end": "2247960"
  },
  {
    "text": "dependencies on those entity services and if there's a problem with one of them or if there's a downtime or an",
    "start": "2247960",
    "end": "2253060"
  },
  {
    "text": "outage or a release happening all features are damaged simultaneously and so I always like to draw these",
    "start": "2253060",
    "end": "2259260"
  },
  {
    "text": "activation graphs and sort of intersect them and see you know are there is the",
    "start": "2259260",
    "end": "2264790"
  },
  {
    "text": "intersection of all of them empty that's great because then you can have some of your stuff down and other parts of your",
    "start": "2264790",
    "end": "2270600"
  },
  {
    "text": "enterprise don't even care is the intersection all of your entity services",
    "start": "2270600",
    "end": "2276130"
  },
  {
    "text": "then you might as well not there might as well yeah so changing",
    "start": "2276130",
    "end": "2283270"
  },
  {
    "text": "track a little bit what about user interfaces I think we've been talking about services talking to",
    "start": "2283270",
    "end": "2288880"
  },
  {
    "text": "other services a lot here what about how the human beings talk to all those services yeah so I've got one counter",
    "start": "2288880",
    "end": "2296440"
  },
  {
    "text": "example and one pro example that I'd like to offer I talked to a company that had done a big micro services migration",
    "start": "2296440",
    "end": "2303119"
  },
  {
    "text": "they were financial services company they work in many different geographies and the requirements for creating an",
    "start": "2303119",
    "end": "2310390"
  },
  {
    "text": "account in each geography were a little bit different and so they had created an account service for each geography and",
    "start": "2310390",
    "end": "2317190"
  },
  {
    "text": "the UI needed to know what to feed each geography so the UI was built to know",
    "start": "2317190",
    "end": "2323710"
  },
  {
    "text": "the requirements of each service in each geography I think pretty clearly this is an example of doing it wrong right they",
    "start": "2323710",
    "end": "2329829"
  },
  {
    "text": "got through this big migration they found they couldn't change anything any faster than before on the flip side",
    "start": "2329829",
    "end": "2335109"
  },
  {
    "text": "we're seeing more interest in these demand driven architectures Falkor is 1 ohm dot next is another good",
    "start": "2335109",
    "end": "2342400"
  },
  {
    "text": "one where where the the client side actually gets to tell some entity hey these are",
    "start": "2342400",
    "end": "2349059"
  },
  {
    "text": "all the things I need to know about give them to me and that makes a good query interface and it's up to the the thing",
    "start": "2349059",
    "end": "2356170"
  },
  {
    "text": "on the other end to go and fetch the entities from wherever it needs to be that one service a proxy in front of",
    "start": "2356170",
    "end": "2362500"
  },
  {
    "text": "many or whatever it doesn't matter and then the the change side of things is not just like a put or a post in a",
    "start": "2362500",
    "end": "2369640"
  },
  {
    "text": "restful interface but we're actually seeing the change being encapsulated as an action and posted as a transaction as",
    "start": "2369640",
    "end": "2377260"
  },
  {
    "text": "a unit of work and that's a pattern that we're finding to be very effective where you you query based on a demand driven",
    "start": "2377260",
    "end": "2382930"
  },
  {
    "text": "style and you apply a transaction as one unit yeah I would like to echo that I",
    "start": "2382930",
    "end": "2388119"
  },
  {
    "text": "think graph QL and Falkor are very interesting cool now I guess a question",
    "start": "2388119",
    "end": "2398220"
  },
  {
    "text": "another question has come in here is arguments about scalability it seems to",
    "start": "2398220",
    "end": "2404740"
  },
  {
    "text": "ignore other techniques like plug-in architectures they didn't say OSGi but I'm",
    "start": "2404740",
    "end": "2410880"
  },
  {
    "text": "softly conversation I've had with people is okay we why have separate processes",
    "start": "2410880",
    "end": "2416160"
  },
  {
    "text": "why not just have a runtime I jot different components on to I mean it's kind of how Erlang works it's what SGI",
    "start": "2416160",
    "end": "2422130"
  },
  {
    "text": "try to do so one of the brother the pros and cons of those approaches versus micro-services I actually think that",
    "start": "2422130",
    "end": "2429390"
  },
  {
    "text": "there should not necessarily be a be a one-to-one mapping between a micro",
    "start": "2429390",
    "end": "2435330"
  },
  {
    "text": "service and a container I think that is a very very good deployment choice in probably the majority of situations but",
    "start": "2435330",
    "end": "2443340"
  },
  {
    "text": "I think that potentially and infrastructure should be capable of providing choice there so but",
    "start": "2443340",
    "end": "2450180"
  },
  {
    "text": "nevertheless I think that given that the cost of containerization is now so low",
    "start": "2450180",
    "end": "2455630"
  },
  {
    "text": "you wouldn't necessarily you know choose to scale out your system entirely within process I mean when you had to rack up a",
    "start": "2455630",
    "end": "2462480"
  },
  {
    "text": "new server that was a different case so in my view it's it's all about proper",
    "start": "2462480",
    "end": "2468690"
  },
  {
    "text": "isolation so when we used to deploy things into Java containers the idea was that the the Java server could properly",
    "start": "2468690",
    "end": "2476670"
  },
  {
    "text": "isolate the applications from each other never worked we always had class path tables tables",
    "start": "2476670",
    "end": "2483050"
  },
  {
    "text": "operating systems are supposed to completely isolate applications from each other yeah except that they depend",
    "start": "2483050",
    "end": "2489360"
  },
  {
    "text": "on things like network configuration and TCP settings so we're still trying to find the right way to separate these",
    "start": "2489360",
    "end": "2495540"
  },
  {
    "text": "concerns of packaging the application delivering the application and isolating them from each other right now the",
    "start": "2495540",
    "end": "2502170"
  },
  {
    "text": "excitement is containers and yoonah kernels but that may not be the final story yeah I as I said I think there",
    "start": "2502170",
    "end": "2507960"
  },
  {
    "text": "should be the potential to have a mapping where you're not automatically just container container izing so for",
    "start": "2507960",
    "end": "2514230"
  },
  {
    "text": "example in particular environments that may be in some test environments you don't care that much about isolation you",
    "start": "2514230",
    "end": "2520140"
  },
  {
    "text": "just care about reducing footprint this came up in the keynote this morning he talked about the vs code and instead of",
    "start": "2520140",
    "end": "2528570"
  },
  {
    "start": "2522000",
    "end": "2802000"
  },
  {
    "text": "a plug-in architecture there were like extension hosts so that each of those hosts could be a separate process it",
    "start": "2528570",
    "end": "2533820"
  },
  {
    "text": "could run in whatever language so you could write your c-sharp stuff in c-sharp and so there there's the",
    "start": "2533820",
    "end": "2539370"
  },
  {
    "text": "polyglot really helping and also that isolation you're not gonna run a my process out of",
    "start": "2539370",
    "end": "2545370"
  },
  {
    "text": "memory probably got time for one last question what about testing like tech because",
    "start": "2545370",
    "end": "2551430"
  },
  {
    "text": "testing seems difficult anyway and with marco services it just seems more complicated so any tips from the panel",
    "start": "2551430",
    "end": "2558450"
  },
  {
    "text": "around how to test your shiny new micro service architecture well i already alluded to our generative",
    "start": "2558450",
    "end": "2566370"
  },
  {
    "text": "testing for individual services and i'll say the reason that we're we're moving in that direction is because we've been",
    "start": "2566370",
    "end": "2571950"
  },
  {
    "text": "talking about and promoting and implementing simulation testing for quite a while and simulation testing is",
    "start": "2571950",
    "end": "2577470"
  },
  {
    "text": "an end-to-end approach that can exercise all of your services and to end and",
    "start": "2577470",
    "end": "2582980"
  },
  {
    "text": "actually one of the things we found is our clients are all moving away from",
    "start": "2582980",
    "end": "2588080"
  },
  {
    "text": "centralized QA teams and there's actually nobody responsible for end-to-end testing and and to end QA any",
    "start": "2588080",
    "end": "2594990"
  },
  {
    "text": "more interestingly one of the ones that sort of told us that story about six",
    "start": "2594990",
    "end": "2601950"
  },
  {
    "text": "months ago has come back and said well we're kind of thinking about a central QA team to to check the end-to-end",
    "start": "2601950",
    "end": "2607530"
  },
  {
    "text": "behavior so I think it's a pendulum that that keeps moving personally I prefer to",
    "start": "2607530",
    "end": "2614610"
  },
  {
    "text": "explore a lot of the state space as much as possible for my my automated testing",
    "start": "2614610",
    "end": "2621030"
  },
  {
    "text": "but then I also do a style of contract testing where if I have things I depend on from another service I write tests",
    "start": "2621030",
    "end": "2628200"
  },
  {
    "text": "that exercise the things I need specifically from they're not the comprehensive API just the stuff I need",
    "start": "2628200",
    "end": "2633770"
  },
  {
    "text": "and and it then if that breaks I know that they've done something wrong and I can go yell at them right so obviously",
    "start": "2633770",
    "end": "2641400"
  },
  {
    "text": "I'm on the other end of the spectrum from this and the other the panel from that yeah environments I've tended to",
    "start": "2641400",
    "end": "2647700"
  },
  {
    "text": "work in again we're developing for internal users we don't do unit testing we don't do integration testing we don't",
    "start": "2647700",
    "end": "2653790"
  },
  {
    "text": "do staging testing in fact we basically deploy from notebook to production what",
    "start": "2653790",
    "end": "2658920"
  },
  {
    "text": "we have done is because our production environments have been heavily instrumented themselves and we're going",
    "start": "2658920",
    "end": "2664110"
  },
  {
    "text": "to see basically all the key performance indicators for our business are basically available to us as well we",
    "start": "2664110",
    "end": "2670380"
  },
  {
    "text": "deploy and see what happens to our real metrics or getting more logins or getting more sales",
    "start": "2670380",
    "end": "2675790"
  },
  {
    "text": "are we getting longer page retention times whatever the metric is we're measuring that and we're deploying to",
    "start": "2675790",
    "end": "2681460"
  },
  {
    "text": "live environments and see what happens if we deploy something is not reacting very well we take it back off",
    "start": "2681460",
    "end": "2686830"
  },
  {
    "text": "no that said we are working in environments where we do get that fast customer feedback and that has",
    "start": "2686830",
    "end": "2692290"
  },
  {
    "text": "eliminated the need for the integration testing Jessica so I don't I don't think",
    "start": "2692290",
    "end": "2699370"
  },
  {
    "text": "this is a solve problem I know what I like to do which is when I'm testing my service I want to be able to test it",
    "start": "2699370",
    "end": "2705010"
  },
  {
    "text": "without accessing the real dependency whatever it is and it could be the database as well as another service so I",
    "start": "2705010",
    "end": "2711640"
  },
  {
    "text": "wind up making a fake that lets me unit tests and generative tests and run a",
    "start": "2711640",
    "end": "2717160"
  },
  {
    "text": "whole ton of tests on mine what I wish is if that other service would give me a client library that included a fake mode",
    "start": "2717160",
    "end": "2724090"
  },
  {
    "text": "and then all I have to do is test the fake once-in-a-while against the real service like if I had a",
    "start": "2724090",
    "end": "2730450"
  },
  {
    "text": "fake github then I could just test that against fake github to make sure it's consistent and meanwhile run all my tests superfast it's what it's what I",
    "start": "2730450",
    "end": "2737440"
  },
  {
    "text": "wind up creating in the small anyway and it's it's a lot of work I have more",
    "start": "2737440",
    "end": "2742570"
  },
  {
    "text": "tests code than real code if I'm doing it well this is one of the reasons that I'm a fan at least for the synchronous",
    "start": "2742570",
    "end": "2747730"
  },
  {
    "text": "case in Java of using things like Netflix final square retrofit because they make it really really easy to test",
    "start": "2747730",
    "end": "2755470"
  },
  {
    "text": "how you're using that service with mocks or fakes of whatever but I mean I'm",
    "start": "2755470",
    "end": "2761020"
  },
  {
    "text": "going to come back to the point that I think it's pretty important that something has a contract if you know if",
    "start": "2761020",
    "end": "2766960"
  },
  {
    "text": "I want to test something I want to know what it's supposed to do and I agree with Michael in terms of the value of",
    "start": "2766960",
    "end": "2773050"
  },
  {
    "text": "that approach and I think leaving on a disagreement is a good place to end a",
    "start": "2773050",
    "end": "2778600"
  },
  {
    "text": "panel so I want to say thank you to our panel members and thank you very much for all the questions I'm so dang a",
    "start": "2778600",
    "end": "2784540"
  },
  {
    "text": "chance to get to all them but they're all around tomorrow as well so feel free to corner them and pepper them for the",
    "start": "2784540",
    "end": "2791410"
  },
  {
    "text": "place later at the party there's gonna be beer so thank you very much",
    "start": "2791410",
    "end": "2797430"
  },
  {
    "text": "you",
    "start": "2797460",
    "end": "2799520"
  }
]