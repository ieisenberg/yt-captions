[
  {
    "start": "0",
    "end": "150000"
  },
  {
    "text": "(calm piano music)",
    "start": "748",
    "end": "3665"
  },
  {
    "text": "- This is a short tour of\nvisualizing, documenting, and exploring software architecture.",
    "start": "10130",
    "end": "16056"
  },
  {
    "text": "And we're gonna start here. Sorry, imagine we've invented teleporters and I teleport you here, where are you?",
    "start": "16057",
    "end": "24115"
  },
  {
    "text": "France? Close, but not quite. So yeah, it says La Rue de something. This is what happens\nwhen we drop new joiners",
    "start": "25104",
    "end": "31378"
  },
  {
    "text": "into a code base. We kind of drop them straight\ninto the middle of it and they're a bit lost. How do we solve this problem? How do we figure out where we are?",
    "start": "31378",
    "end": "38792"
  },
  {
    "text": "We zoom out, we use technology, we open up the maps on our phone\nand start zooming out.",
    "start": "38792",
    "end": "45614"
  },
  {
    "text": "Any better? Not zoomed out enough. Well, you can now see\nthe name of the road,",
    "start": "45614",
    "end": "52284"
  },
  {
    "text": "but we're not quite\nsure still where we are. We zoom out one more time. Yeah, there we go. So that shows you that's where I live.",
    "start": "52284",
    "end": "59736"
  },
  {
    "text": "There's a lot of cluttering\non this map, isn't there? It's not very, very clear\nto see what's going on.",
    "start": "59736",
    "end": "65524"
  },
  {
    "text": "So with things like\nGoogle Maps, we can reduce the amount of information. Like that.",
    "start": "65524",
    "end": "70455"
  },
  {
    "text": "Gets a bit clearer,\nnow we can start to see some of the place names and where some of the bits and pieces are. If you've never heard of Jersey before,",
    "start": "71644",
    "end": "77891"
  },
  {
    "text": "this is still kind of useless so you have to pinch to zoom out one more time. And again.",
    "start": "77891",
    "end": "84251"
  },
  {
    "text": "And again. So now there you go, there's Jersey. It's a small island just\noff the coast of France.",
    "start": "84251",
    "end": "91743"
  },
  {
    "text": "Now, if you come and visit\nJersey, which you should because it's lovely, when\nyou come through the airport you'll get a map.",
    "start": "91743",
    "end": "97682"
  },
  {
    "text": "And this is a traditional\nVisitor Map thing and it shows you information like this.",
    "start": "97682",
    "end": "104045"
  },
  {
    "text": "The map's broken up into four quarters and it kind of tells you enough\ninformation to get around.",
    "start": "104045",
    "end": "110182"
  },
  {
    "text": "It tells you enough\ninformation to go and find the major sites and that sort of thing. It doesn't tell you everything though.",
    "start": "110182",
    "end": "116443"
  },
  {
    "text": "It's not listing every\nstreet, it's not listing every building on every street either.",
    "start": "116443",
    "end": "121665"
  },
  {
    "text": "There's a zoomed in part\nfor town, the main city, and we've got a little\nbit more detail on it, but it's a representations,\nit's not quite accurate.",
    "start": "121665",
    "end": "130985"
  },
  {
    "text": "So this thing here, this blue bit, the tide actually goes out there. So if you pull into Jersey and\nyou boat and you park there,",
    "start": "130986",
    "end": "138147"
  },
  {
    "text": "you will find it dry at some point. And also, this bathing pool here. It looks like it never\ngets refreshed with water,",
    "start": "138147",
    "end": "145203"
  },
  {
    "text": "but it does, which is\nuseful because I'm sure kids pee in it in the\nsummer. (audience laughs) The thing these maps have in common",
    "start": "145203",
    "end": "151017"
  },
  {
    "start": "150000",
    "end": "170000"
  },
  {
    "text": "is that they show points of interest. So what do I really want to go\nand see when I visit Jersey? Contrast this with like\nan ordnance survey map.",
    "start": "151018",
    "end": "157808"
  },
  {
    "text": "This is a very, very detailed\nrepresentation of Jersey. We've got contours and\ndifferent types of land",
    "start": "157808",
    "end": "163011"
  },
  {
    "text": "and all sorts of things going on here. And you need a bit of\nintelligence and some help",
    "start": "163011",
    "end": "168374"
  },
  {
    "text": "to get started interpreting this thing. Both maps are showing\nselected highlights as well.",
    "start": "168374",
    "end": "175200"
  },
  {
    "start": "170000",
    "end": "250000"
  },
  {
    "text": "And that's a really\ninteresting thing here, selected highlights. So when you come to Jersey next\nyear on your summer holiday,",
    "start": "175201",
    "end": "181017"
  },
  {
    "text": "you'll probably drive\npast this big castle. It's called Elizabeth Castle, it's on",
    "start": "181017",
    "end": "186239"
  },
  {
    "text": "the south coast from the sea. And it's a 16th century castle,",
    "start": "186239",
    "end": "190879"
  },
  {
    "text": "some beautiful granite blockwork, and it was basically built to stop the French and English taking Jersey over.",
    "start": "191789",
    "end": "198896"
  },
  {
    "text": "And when you walk around this castle, you kind of get to the top in the middle and things start to change.",
    "start": "198896",
    "end": "205427"
  },
  {
    "text": "And you've got this\nbeautiful granite stone thing with this weird concrete thing\nstuck on top for some reason.",
    "start": "206902",
    "end": "214422"
  },
  {
    "text": "And you're like, \"That looks really weird. \"What's all that about?\" And history's important\nhere, so when you're walking",
    "start": "214423",
    "end": "220532"
  },
  {
    "text": "around the castle, it tells you that in World War Two when the\nGermans occupied Jersey, they refortified some of\nthe existing fortifications.",
    "start": "220532",
    "end": "227821"
  },
  {
    "text": "So that's what that big\nconcrete thing is on the top and those sorts of gun replacements and so on and so forth.",
    "start": "227822",
    "end": "233170"
  },
  {
    "text": "Of course, all of this stuff\nis described in guide books and there are lots of them out there",
    "start": "233170",
    "end": "238765"
  },
  {
    "text": "and of course, if you\nwant to be a bit hipster, you can use the website. We have the Internet now.",
    "start": "238765",
    "end": "245019"
  },
  {
    "text": "So that's my quick\nintroduction and sales pitch for Jersey, I guess.",
    "start": "245019",
    "end": "250709"
  },
  {
    "start": "250000",
    "end": "282000"
  },
  {
    "text": "I'm gonna come back to the same thing. Right, so visualization. One of the things I do with software teams",
    "start": "250709",
    "end": "255793"
  },
  {
    "text": "around the world is I run\na visualization workshop and we give some people some requirements.",
    "start": "255793",
    "end": "261517"
  },
  {
    "text": "So we say, \"Right, you\nhave 90 minutes in groups \"to go draw some pictures.\" And these are the types of\npictures people actually draw.",
    "start": "261517",
    "end": "266604"
  },
  {
    "text": "I promise I have not made any of these up. I'm not sure I could make these things up.",
    "start": "266604",
    "end": "274276"
  },
  {
    "text": "Do these look like diagrams\nyou see on your whiteboards? Yes.",
    "start": "274277",
    "end": "278251"
  },
  {
    "text": "(audience laughs) I have another 15\ngigabytes I could show you, but I won't.",
    "start": "280814",
    "end": "286963"
  },
  {
    "text": "Sometimes when I'm running this workshop, I actually hear people say this. Right, so they're drawing a\nbox or a shape and they say,",
    "start": "286963",
    "end": "292323"
  },
  {
    "text": "\"This doesn't make sense,\nbut we'll explain it later \"when we do our\npresentation or something.\"",
    "start": "292324",
    "end": "297909"
  },
  {
    "text": "And that's fine, but\nwe don't always present our diagrams, do we? Now, if we're drawing a\npicture out of our system, we don't always stand\nthere and present it.",
    "start": "297909",
    "end": "304989"
  },
  {
    "text": "And a nasty trick I like to do is I like to have two teams swap diagrams.",
    "start": "304989",
    "end": "309779"
  },
  {
    "text": "And guess what happens? Because they weren't\npart of that conversation creating those diagrams, they have no idea what's going on and they're at this",
    "start": "312198",
    "end": "318233"
  },
  {
    "text": "kind of Wat moment. (audience laughs) And they're mad about the color coding and the shapes and the lines and basically",
    "start": "318233",
    "end": "324756"
  },
  {
    "text": "none of the notations on it\nmakes any sense whatsoever. When you ask people, \"Was\nthis an easy exercise?\",",
    "start": "324756",
    "end": "331917"
  },
  {
    "start": "329000",
    "end": "345000"
  },
  {
    "text": "they say, \"Well, actually yeah it was.\" And then you say, \"Well, why\nare your diagrams such a mess?\" and they go \"Oh yeah, good point.\"",
    "start": "331917",
    "end": "338744"
  },
  {
    "text": "We don't really know what\nto draw, we're not sure what sort of diagrams we should draw, the levels of details, shapes, notations,",
    "start": "338744",
    "end": "344862"
  },
  {
    "text": "should we use UML? Who here uses UML? That's a really small number,\nlike four or five people.",
    "start": "344862",
    "end": "352013"
  },
  {
    "start": "345000",
    "end": "357000"
  },
  {
    "text": "So what's everybody else doing? Something else. (laughs) I've asked this question around the world",
    "start": "352013",
    "end": "358017"
  },
  {
    "start": "357000",
    "end": "407000"
  },
  {
    "text": "and UML is massively\nfalling out of fashion. I have no evidence to back any of this up,",
    "start": "358018",
    "end": "364130"
  },
  {
    "text": "this is all completely\nanecdotal, but I'm seeing more and more teams who have no UML skills",
    "start": "364131",
    "end": "369289"
  },
  {
    "text": "in the teams anymore. I do use UML, but I use is sparingly for small parts for a software system.",
    "start": "369289",
    "end": "376205"
  },
  {
    "text": "What I want to show are very small parts of say, a class hierarchy or something.",
    "start": "376205",
    "end": "382017"
  },
  {
    "text": "Google doesn't help. If you go to Google and\nask it what it thinks a software architecture diagram\nlooks like, you get this.",
    "start": "383244",
    "end": "389543"
  },
  {
    "text": "Page after page after page of essentially pretty-colored block pictures, the sorts of things you can\ndo in a Visio or PowerPoint.",
    "start": "389543",
    "end": "396517"
  },
  {
    "text": "And we laugh at these\nthings, but these are exactly the types of diagrams I see when I go and visit organizations.",
    "start": "396517",
    "end": "401717"
  },
  {
    "text": "You open up their conference\npages or whatever, bang, you get this sort of stuff. And half the pictures just\ndon't make any sense at all.",
    "start": "401717",
    "end": "408126"
  },
  {
    "start": "407000",
    "end": "439000"
  },
  {
    "text": "This is hard. I think I've run this workshop\nfor about 10,000 people now,",
    "start": "408126",
    "end": "413144"
  },
  {
    "text": "all around the world, and nobody does it sufficiently well the first\ntime around, believe it or not.",
    "start": "413144",
    "end": "418682"
  },
  {
    "text": "And the irony here is Agile. So one of the great things Agile has done is it's made us more visual.",
    "start": "418682",
    "end": "423820"
  },
  {
    "text": "Whenever I go and visit\nAgile organizations, you've got their camera\nboards and the storywalls and the information dashboards.",
    "start": "423820",
    "end": "429887"
  },
  {
    "text": "So we've gotten awesome at visualizing, essentially processing the way we work. We've totally forgotten\nhow to draw pictures",
    "start": "429887",
    "end": "436985"
  },
  {
    "text": "of the things we're building. And this is just about good communication. If you want to move fast as a team,",
    "start": "436985",
    "end": "443759"
  },
  {
    "start": "439000",
    "end": "499000"
  },
  {
    "text": "if you want business agility, then you need to\ncommunicate well, that's it.",
    "start": "443759",
    "end": "449042"
  },
  {
    "text": "So there's some really simple tips here around notation that I could give you. And just stuff like put\ntitles and pictures,",
    "start": "449042",
    "end": "455927"
  },
  {
    "text": "make sure your arrows are annotated, make sure your arrows point one way, and so on and so forth.",
    "start": "455928",
    "end": "461188"
  },
  {
    "text": "And the notation around\ndrawing architecture diagrams is really, really easy to fix. One of my key points is this\none here, responsibilities.",
    "start": "461188",
    "end": "469171"
  },
  {
    "text": "We often joke that naming\nis hard in software, so it doesn't make sense that most of our architecture\ndiagrams are essentially",
    "start": "469171",
    "end": "475267"
  },
  {
    "text": "just a collection of named boxes because the diagrams contain\na huge amount of ambiguity.",
    "start": "475267",
    "end": "480412"
  },
  {
    "text": "So my simple tip is add\nmore text to your diagrams. And here's a really simple example.",
    "start": "480412",
    "end": "485707"
  },
  {
    "text": "This is the same diagram, the version on the right has more text. And that additional text\nallows us to see things",
    "start": "485707",
    "end": "491910"
  },
  {
    "text": "like the responsibilities\nof those building blocks. There's a lot more information there.",
    "start": "491911",
    "end": "499546"
  },
  {
    "text": "In terms of content, when we're drawing architecture diagrams\nyou can't show everything on a single picture.",
    "start": "500401",
    "end": "507514"
  },
  {
    "text": "And this is why people\ndo talk about things like views and viewpoints\nand perspectives. And there are lots and lots\nof different ways to do this.",
    "start": "507515",
    "end": "513802"
  },
  {
    "text": "I would mention Philippe\nKruchten's 4 + 1 model as a book that details a\nwhole bunch of ways to do this",
    "start": "513803",
    "end": "521393"
  },
  {
    "text": "and there are more. The thing is all of those view catalogs",
    "start": "521394",
    "end": "528521"
  },
  {
    "text": "have this logical view of a system separate to the development\nview of the system.",
    "start": "529701",
    "end": "536210"
  },
  {
    "text": "So the logical view is often either the functional, logical,\nconceptual building blocks and then there's something\nelse that refers to",
    "start": "536210",
    "end": "542529"
  },
  {
    "text": "how we're building these things. Why? Why do we do this? I don't get it.",
    "start": "542529",
    "end": "548456"
  },
  {
    "start": "543000",
    "end": "556000"
  },
  {
    "text": "Because whenever I go to organizations and I see their nice, fluffy\nlogical architecture diagrams, they never match the code.",
    "start": "548456",
    "end": "554970"
  },
  {
    "text": "And that's kind of the point here. If I'm drawing architecture diagrams, I need them to match the code. Otherwise, they're just lying to me.",
    "start": "554970",
    "end": "562912"
  },
  {
    "start": "556000",
    "end": "592000"
  },
  {
    "text": "George Fairbanks is sitting in the back. He calls this the model-code\ngap in his awesome book.",
    "start": "562912",
    "end": "568785"
  },
  {
    "text": "When we're having architecture discussion, we're using abstract concepts like modules and components and services,",
    "start": "568785",
    "end": "574420"
  },
  {
    "text": "but we don't have those same things in our programming languages. Quick show of hands, who's\na Java developer here?",
    "start": "574421",
    "end": "580464"
  },
  {
    "text": "Right, so in Java is\nthere a layer keyword? No. In Java is there a component keyword?",
    "start": "580464",
    "end": "586593"
  },
  {
    "text": "No, but we create components and layers by assembling classes and\ninterfaces and packages and things together.",
    "start": "586593",
    "end": "593073"
  },
  {
    "start": "592000",
    "end": "777000"
  },
  {
    "text": "So what I'm trying to get\nto is a set of diagrams that actually reflect the code there. That's my ultimate goal.",
    "start": "593073",
    "end": "599071"
  },
  {
    "text": "Before we can even attempt\nto solve this problem, we have a bigger problem. And that is a lack of any sort",
    "start": "599071",
    "end": "604960"
  },
  {
    "text": "of consistent standard language. Yeah, even in 2016 we don't\nhave a consistent vocabulary",
    "start": "604960",
    "end": "612110"
  },
  {
    "text": "to talk about software architecture. We think we do, but I don't think we do.",
    "start": "612110",
    "end": "619448"
  },
  {
    "text": "Quiz time, what's this? It's a map of London, right?",
    "start": "619448",
    "end": "625313"
  },
  {
    "text": "What's the blue thing? It's a river, it's the River Thames. What is a river?",
    "start": "625313",
    "end": "631103"
  },
  {
    "text": "Body of water flowing one\nor other direction, perfect. So we know what a river\nis and we can go and find",
    "start": "633006",
    "end": "638076"
  },
  {
    "text": "other rivers using our knowledge. What's that?",
    "start": "638076",
    "end": "641406"
  },
  {
    "text": "It's a floor plan for a bathroom. What's this thing here? That's a toilet.",
    "start": "643735",
    "end": "649081"
  },
  {
    "text": "What is a toilet? Right, you know what a toilet is. And again, we could use our knowledge",
    "start": "649081",
    "end": "655746"
  },
  {
    "text": "of what a toilet is to\ngo and find more toilets. Any electrical people here? Electrical engineers?",
    "start": "655746",
    "end": "661734"
  },
  {
    "text": "A couple of ways to refer\nto circuit diagrams. You've got a funny cartoon pictorial thing or a schematic version.",
    "start": "661734",
    "end": "668432"
  },
  {
    "text": "What's that squiggly\nline there at the bottom? It's a resistor, what's a resistor?",
    "start": "668432",
    "end": "674779"
  },
  {
    "text": "It resists stuff, it\nslows currents down, yeah. If I had a box of\nelectrical components here at the front with capacitors\nand switches and resistors,",
    "start": "676231",
    "end": "683212"
  },
  {
    "text": "could you come to the front and find me a resistor in that box? Right, so you know how\nto identify a resistor",
    "start": "683212",
    "end": "688856"
  },
  {
    "text": "and if you know the color\ncoding, you can work at how strong it is. Right, this quiz is too easy. Let's ramp up the complexity\non an exponential scale.",
    "start": "688856",
    "end": "696524"
  },
  {
    "text": "What's that? (audience laughs)",
    "start": "696524",
    "end": "700441"
  },
  {
    "text": "So we have two UML component diagrams. One is a 1.x version and\none is a 2.x version.",
    "start": "702477",
    "end": "708784"
  },
  {
    "text": "Don't ask me which one's\nwhich, I've forgotten. What are the boxes on these diagrams?",
    "start": "708784",
    "end": "714917"
  },
  {
    "text": "They are components, correct. What is a component?",
    "start": "714917",
    "end": "718270"
  },
  {
    "text": "I don't know. It's a logical, abstract,\nfunctional building block thing.",
    "start": "720096",
    "end": "726495"
  },
  {
    "text": "And these components\nare all very different, so this one down here is\na stereotyped database",
    "start": "726495",
    "end": "731623"
  },
  {
    "text": "and there's a JDBC interface. So that sounds like a database component.",
    "start": "731623",
    "end": "736836"
  },
  {
    "text": "These ones are UIs, or applications. What's the stuff in the middle?",
    "start": "736836",
    "end": "742321"
  },
  {
    "text": "Business components, where do they run? In the database as part of the app? Are they micro services?",
    "start": "743409",
    "end": "749311"
  },
  {
    "text": "This diagram is open to lots\nand lots of interpretation. Look, more text on diagram.",
    "start": "749311",
    "end": "755697"
  },
  {
    "text": "If this diagram had more\ntext, at least we'd know what these things were. To put this very, very\nsimply, imagine we're building",
    "start": "755697",
    "end": "761724"
  },
  {
    "text": "a really simple system consisting of a web app and a database. The word component means part of.",
    "start": "761724",
    "end": "767087"
  },
  {
    "text": "For some people, the\nweb app is a component of the entire system. For others, something\nlike a logging component",
    "start": "767087",
    "end": "773657"
  },
  {
    "text": "is a component of the web app. Same word, different\nlevels of abstraction. It's the ubiquitous language thing.",
    "start": "773657",
    "end": "781093"
  },
  {
    "start": "777000",
    "end": "792000"
  },
  {
    "text": "Now, we've been going\non for years about DDD and having this ubiquitous language between us and the business people.",
    "start": "781093",
    "end": "786615"
  },
  {
    "text": "We don't have that ubiquitous\nlanguage for ourselves and that's the problem\nthat we need to solve here.",
    "start": "786616",
    "end": "793470"
  },
  {
    "start": "792000",
    "end": "815000"
  },
  {
    "text": "UML tried to do too much. It was a standard notation\nand a standard abstraction and it kind of failed on both counts.",
    "start": "793470",
    "end": "800381"
  },
  {
    "text": "And I think for where we are\ncurrently in the industry, we need that standard set of abstractions.",
    "start": "800381",
    "end": "806047"
  },
  {
    "text": "I would like to get to something\nlike electrical engineering in the future so we have a standard set of funny symbols to represent things,",
    "start": "806047",
    "end": "812551"
  },
  {
    "text": "but let's get the language nailed first. And the thing here is that\nthe language we create need to reflect the\ntechnology that we're using.",
    "start": "812551",
    "end": "820575"
  },
  {
    "start": "815000",
    "end": "893000"
  },
  {
    "text": "So I want to merge the logical\nand developmental views back together again and collapse them so we have real terminology\nthat maps to real technology.",
    "start": "820575",
    "end": "829336"
  },
  {
    "text": "Now, I don't know how we\ndo this on a global scale, but what we can do within\nthe boundaries of this room",
    "start": "829336",
    "end": "834454"
  },
  {
    "text": "is I can show you how I do this. And for me very simply,\nwhen I'm discussing a software system, that software system",
    "start": "834454",
    "end": "840304"
  },
  {
    "text": "is made up of containers. A container is just something\nthat stores data or runs code.",
    "start": "840304",
    "end": "845334"
  },
  {
    "text": "In real terms, it's a\nweb app, a mobile app, a standalone app, a Windows service, a database schema, and so on.",
    "start": "845335",
    "end": "852032"
  },
  {
    "text": "If you open up the containers, they are made up of components. So I want to use the word\ncomponents to mean something running inside a run-time\nenvironment, essentially.",
    "start": "852033",
    "end": "859553"
  },
  {
    "text": "It's a nice cohesive grouping of stuff with a nice, clear\ninterface and we're done. And because I mostly\ndeal with Java and C#,",
    "start": "859553",
    "end": "866055"
  },
  {
    "text": "my components are built from classes. That's it.",
    "start": "866055",
    "end": "868958"
  },
  {
    "text": "It's a really simple\nhierarchical tree structure to describe the static\nstructure of software system. If you're using JavaScript,\nthis makes no sense.",
    "start": "871083",
    "end": "878355"
  },
  {
    "text": "So maybe it's modules and objects or modules and functions. Same with functional languages, modules and functions.",
    "start": "878355",
    "end": "884345"
  },
  {
    "text": "If you're using a database technology, maybe it's components\nand stored procedures. So again, you have to take\nthe same hierarchical approach",
    "start": "884345",
    "end": "890827"
  },
  {
    "text": "and map it to the tech that you're using. And this is really about creating a single, simple static\nmodel of a software system.",
    "start": "890827",
    "end": "897646"
  },
  {
    "start": "893000",
    "end": "987000"
  },
  {
    "text": "From the system as a\nblack box down to the code with a couple of levels in between.",
    "start": "897646",
    "end": "904047"
  },
  {
    "text": "So that's the language defined. Once you define a language, you can draw some diagrams really simply. And this is what I like to\nrefer to as my C4 model.",
    "start": "904047",
    "end": "911907"
  },
  {
    "text": "It's a context diagram, you\nzoom in to see the containers, you zoom in to see the components,",
    "start": "911908",
    "end": "917649"
  },
  {
    "text": "and you can go down to\ncode if you want to, but I don't normally do this,\nespecially if I'm trying to describe an existing\ncode base for example.",
    "start": "917649",
    "end": "926832"
  },
  {
    "text": "Really quick example. I created this site called Tech Tribes when I moved back to Jersey and it's just a simple content aggregated\nfor the local tech industry.",
    "start": "926832",
    "end": "934560"
  },
  {
    "text": "This is a context diagram for Tech Tribes. The thing with the monkey\nis the system I built.",
    "start": "934560",
    "end": "939800"
  },
  {
    "text": "There are different types of users and different system dependencies. If this was an interactive Google Map,",
    "start": "939800",
    "end": "944951"
  },
  {
    "text": "we could select, pinch to zoom in. We see the containers\ninside the system boundary.",
    "start": "944951",
    "end": "952561"
  },
  {
    "text": "We select a container,\nwe pinch to zoom in, we show the components inside\nit, and so on and so forth.",
    "start": "952561",
    "end": "957749"
  },
  {
    "text": "It's just a really simple\nhierarchical diagram that map onto that language. And ultimately we get to the code.",
    "start": "957749",
    "end": "964044"
  },
  {
    "text": "And ultimately, ideally\nthere's a nice, clean mapping between all of these\nlayers and this actually",
    "start": "964044",
    "end": "969575"
  },
  {
    "text": "does reflect what the code looks like. For me, diagrams are maps.",
    "start": "969575",
    "end": "975869"
  },
  {
    "text": "Right, that's the summary\nof all of this stuff. Basically, diagrams are maps and you need different types of maps\ndepending on how much information",
    "start": "975869",
    "end": "983209"
  },
  {
    "text": "you have about the thing\nyou want to learn about or the audience that you're speaking to. So business people, non-technical people,",
    "start": "983209",
    "end": "990530"
  },
  {
    "start": "987000",
    "end": "1026000"
  },
  {
    "text": "a nice high-level view works well. Me as a developer, something low-level. Maybe some operations people,\nsomething in the middle.",
    "start": "990530",
    "end": "999092"
  },
  {
    "text": "I don't want you to take away\nany tips around notation. This is the notation that I use just because it's very simple.",
    "start": "999092",
    "end": "1005878"
  },
  {
    "text": "And I tend to use things\nlike color coding and shapes to supplement an existing\ndiagram that already makes sense.",
    "start": "1005879",
    "end": "1013852"
  },
  {
    "text": "So this is the same diagram. One version has some shapes,\nwhich one do you prefer?",
    "start": "1013853",
    "end": "1019685"
  },
  {
    "text": "Probably the one with the shapes. But fundamentally, there's\nno more information on either diagram, it's\njust an aesthetic thing.",
    "start": "1019685",
    "end": "1027134"
  },
  {
    "start": "1026000",
    "end": "1042000"
  },
  {
    "text": "I also think it's worth\njust pointing out that there are lots of other things\nyou might want to consider when you're describing\nyour software architecture.",
    "start": "1027134",
    "end": "1034235"
  },
  {
    "text": "And this is where all of\nthe views and viewpoints and perspectives stuff comes into play and I will point you to\nPhilippe Kruchten's work as well",
    "start": "1034235",
    "end": "1040745"
  },
  {
    "text": "and Eoin Woods's book. This C4 thing is not a design process, it's just a set of diagrams.",
    "start": "1040745",
    "end": "1047036"
  },
  {
    "text": "And it's a set of\ndiagrams that you can use during an up front design\nexercise or even retrospectively,",
    "start": "1047036",
    "end": "1052150"
  },
  {
    "text": "so if you have an existing code base with no documentation, this is\na really good starting point.",
    "start": "1052150",
    "end": "1057973"
  },
  {
    "text": "Yes. (laughs) I get this question a lot. What tool do you recommend?",
    "start": "1059523",
    "end": "1065811"
  },
  {
    "text": "Please don't say Visio again. Because this is just a\nset of boxes and lines,",
    "start": "1065811",
    "end": "1071557"
  },
  {
    "text": "any general purpose\ndiagramming tool will do. Visio, OmniGraffle, Gliffy,\nwhatever you choose.",
    "start": "1071557",
    "end": "1079913"
  },
  {
    "text": "But come on, this is 2016. There was an interesting plea\nfor help on Twitter recently.",
    "start": "1079913",
    "end": "1087547"
  },
  {
    "text": "What tools are there for\ncreating architecture slides? Nobody responded with a modeling tool.",
    "start": "1087547",
    "end": "1093919"
  },
  {
    "text": "It was all general\npurpose diagramming tools, which I think is just nuts. And if you look at the building industry,",
    "start": "1093919",
    "end": "1100232"
  },
  {
    "text": "the building industry does not use Visio. The building industry creates\na three dimensional model of that building and they\nsurface different views from it.",
    "start": "1100232",
    "end": "1107909"
  },
  {
    "text": "The irony again of course\nis we build these tools for the building sector. (laughs) And we can't do this ourselves.",
    "start": "1107909",
    "end": "1114154"
  },
  {
    "text": "So I'm trying to solve\nlots of problems here and one of my approaches is a set of tooling called Structurizr.",
    "start": "1114155",
    "end": "1121279"
  },
  {
    "text": "Structurizr is part kind of\nSass product, part Open Source. In its very simplest form, you can write",
    "start": "1121279",
    "end": "1127545"
  },
  {
    "text": "a simple, demanding specific language to create some diagrams. So this is really just an implementation",
    "start": "1127545",
    "end": "1133275"
  },
  {
    "text": "of the people, software\nsystems, containers, components thing I briefly showed you before.",
    "start": "1133275",
    "end": "1138403"
  },
  {
    "text": "It's like Wes Ethan's\ndiagrams if you've seen that. This is great for sketching\nup something small and simple,",
    "start": "1138403",
    "end": "1146081"
  },
  {
    "text": "a single diagram at a time, but it's not really where we want to go. If I have an existing code base, why can't",
    "start": "1146081",
    "end": "1152236"
  },
  {
    "start": "1149000",
    "end": "1222000"
  },
  {
    "text": "I just auto-generate diagrams? Has anybody tried this? (laughs) What happened?",
    "start": "1152236",
    "end": "1158169"
  },
  {
    "text": "You just get chaos. Is that because your code base is chaos? Sometimes, but often not.",
    "start": "1158169",
    "end": "1163734"
  },
  {
    "text": "Often it's just showing too much detail. So one of the things I've done\nrecently with Structurizr,",
    "start": "1163734",
    "end": "1169463"
  },
  {
    "text": "so Structurizr's all cloud-based and lots of my potential\ncustomers like it, but they don't want to send",
    "start": "1169463",
    "end": "1174522"
  },
  {
    "text": "their software architecture\nmodels up to the cloud. So I built a very simple on-premise API because Structurizr is\nessentially a JavaScript app",
    "start": "1174522",
    "end": "1183630"
  },
  {
    "text": "running in the browser. If you install an API that\nyou can reach locally, you can store the data locally.",
    "start": "1183630",
    "end": "1190867"
  },
  {
    "text": "It's about less than 1,000 lines of code. And this is what that code looks like if you auto-generate a UML\nclass diagram in instantly.",
    "start": "1190867",
    "end": "1199914"
  },
  {
    "text": "It's not particularly useful is it? It's showing us all of\nthe code level elements and all of the relationships between them",
    "start": "1201103",
    "end": "1206896"
  },
  {
    "text": "and it's hard to really pick\nout what the important parts of this code base are. And this is a really, really small app,",
    "start": "1206896",
    "end": "1213710"
  },
  {
    "text": "like less than 1,000 lines of code. What happens if you point this at 100,000 or one million lines of code?",
    "start": "1213710",
    "end": "1218926"
  },
  {
    "text": "You just get crazy, crazy diagrams. And the reason is that\nthese diagramming tools see code, not components.",
    "start": "1218926",
    "end": "1225666"
  },
  {
    "start": "1222000",
    "end": "1259000"
  },
  {
    "text": "These diagramming tools are usually unable to zoom up to show you\nbigger abstractions.",
    "start": "1225666",
    "end": "1231283"
  },
  {
    "text": "It's essentially the\nmodel-code gap thing again. And we can trace this\nproblem right back in time.",
    "start": "1231283",
    "end": "1237512"
  },
  {
    "text": "There was a paper about\nthis problem in the 90s. The first two opening\nparagraphs basically say",
    "start": "1237512",
    "end": "1243393"
  },
  {
    "text": "if you ask an engineer to draw a picture of their software system, you\nget a nice high-level view. If you reverse engineer\na diagram from the code,",
    "start": "1243394",
    "end": "1250746"
  },
  {
    "text": "you get something totally,\ntotally different. The reverse engineered diagram\nis super accurate, of course,",
    "start": "1250746",
    "end": "1255974"
  },
  {
    "text": "but it's not how the engineer\nthinks about the world. And it all comes back to this question.",
    "start": "1255974",
    "end": "1261386"
  },
  {
    "start": "1259000",
    "end": "1300000"
  },
  {
    "text": "Well, what is a component? If I want to draw a component diagram, I need to understand what a component is.",
    "start": "1261386",
    "end": "1267261"
  },
  {
    "text": "And if we go back to my\nlittle class diagram here, these two boxes I've\nhighlighted are really what I consider to be the components",
    "start": "1267261",
    "end": "1273019"
  },
  {
    "text": "in this little API app I've built. There's a Java server\nhandling API requests and there's a workspace\ncomponent that's dealing",
    "start": "1273019",
    "end": "1279799"
  },
  {
    "text": "with these structure of the workspaces. You've heard of server-less,\nthis is framework-less.",
    "start": "1279799",
    "end": "1285197"
  },
  {
    "text": "(laughs) This is like the\nsimplest implementation you could possibly write. And all of these other\ncode things are just parts",
    "start": "1285197",
    "end": "1291428"
  },
  {
    "text": "of those two components. And again, this is what the\ncode structure looks like. So I've got two major\ncomponents with a bunch",
    "start": "1291428",
    "end": "1298306"
  },
  {
    "text": "of helper code, essentially. Now, we have to say that the code is the single point of truth, the code",
    "start": "1298306",
    "end": "1304413"
  },
  {
    "start": "1300000",
    "end": "1395000"
  },
  {
    "text": "is the final embodiment of\nall the architectural ideas. Can we get that information back out of an existing code base?",
    "start": "1304413",
    "end": "1309944"
  },
  {
    "text": "And the answer is not really. So if you were to give me your code base, could I generate something like",
    "start": "1309944",
    "end": "1314950"
  },
  {
    "text": "a context diagram automatically by looking for references to people and software systems in your code base?",
    "start": "1314951",
    "end": "1321278"
  },
  {
    "text": "And the answer is no because\nthey don't really exist. We don't have this\ninformation in our code base much of the time.",
    "start": "1321279",
    "end": "1327461"
  },
  {
    "text": "The same with containers. Can I get a list of the containers just by scraping data from your code base?",
    "start": "1327461",
    "end": "1333934"
  },
  {
    "text": "There's some information\nin there, but it's kind of hard to find. When I get down to the component level,",
    "start": "1333934",
    "end": "1339026"
  },
  {
    "text": "this is really the level I\nwant to generate automatically because it's the most volatile and it changes the most frequently.",
    "start": "1339026",
    "end": "1346042"
  },
  {
    "text": "George Fairbanks to the rescue. George Fairbanks says we should adopt an architecturally-evident coding style.",
    "start": "1347111",
    "end": "1353773"
  },
  {
    "text": "Anybody doing this? You should, it's really\na tool that's fantastic.",
    "start": "1353773",
    "end": "1359189"
  },
  {
    "text": "So it's a really, really simple technique and it's simply about\nembedding information into your code base so that your code base",
    "start": "1359189",
    "end": "1365955"
  },
  {
    "text": "reflects your architectural\nideas and intent. This sounds kind of high-level and wobbly.",
    "start": "1365955",
    "end": "1371533"
  },
  {
    "text": "In concrete terms, it's just\nstuff like naming conventions. So if you have a logging component on your architectural diagram,\nmake sure there's something",
    "start": "1371533",
    "end": "1378543"
  },
  {
    "text": "in your code base called\nlogging component. Maybe it's about a namespacing\nor packaging convention.",
    "start": "1378543",
    "end": "1384113"
  },
  {
    "text": "One fold or one namespace, one package per box on the diagram. Or maybe it's machine-readable metadata,",
    "start": "1384114",
    "end": "1391315"
  },
  {
    "text": "annotating stuff to be this is important, this is a component for example. And by using this we can then extract",
    "start": "1391315",
    "end": "1398132"
  },
  {
    "start": "1395000",
    "end": "1457000"
  },
  {
    "text": "really useful information from a code base and supplement it where that\ninformation's not possible.",
    "start": "1398133",
    "end": "1405879"
  },
  {
    "text": "And I want to move away from\ndrawing diagrams in Visio. There's something called",
    "start": "1405879",
    "end": "1411047"
  },
  {
    "text": "an architecture description language. I'm guessing no one's ever heard of it and no one's ever used it.",
    "start": "1411047",
    "end": "1416560"
  },
  {
    "text": "And that's because it's never really entered mainstream industry, but an architecture description language is essentially a textual\ndescription of say,",
    "start": "1416560",
    "end": "1424212"
  },
  {
    "text": "the static structure of a software system. There are a bunch of them out there, Darwin or Koala for example,",
    "start": "1424213",
    "end": "1430150"
  },
  {
    "text": "but the syntaxes are horrible and you have to teach developers another weird looking language\njust so they can describe",
    "start": "1432547",
    "end": "1439677"
  },
  {
    "text": "the piece of software\nthat they're building. But this is a fantastic concept\nbecause we're not dealing",
    "start": "1439677",
    "end": "1445621"
  },
  {
    "text": "with pictures, we're dealing with text. And as developers we like text.",
    "start": "1445621",
    "end": "1450670"
  },
  {
    "text": "We can diff text, we have\ntooling to support text. So let's take all of these\nthings, chuck 'em in a pot,",
    "start": "1450671",
    "end": "1455744"
  },
  {
    "text": "stir it around, and come up with an architecture\ndescription language using code, using general purpose code,",
    "start": "1455744",
    "end": "1461908"
  },
  {
    "start": "1457000",
    "end": "1548000"
  },
  {
    "text": "the same code we're using\nto build our systems. And that's the other piece of Structurizr, so there were two Open Source libraries",
    "start": "1461908",
    "end": "1468328"
  },
  {
    "text": "and basically they are a\nvery small implementation of the C4 stuff. Again, there's a bunch of classes in both,",
    "start": "1468328",
    "end": "1474372"
  },
  {
    "text": "one for Java and one for .NET, and they let you create\npeople and software systems and containers and components\nand wind them together",
    "start": "1474372",
    "end": "1480686"
  },
  {
    "text": "to describe your software architecture. So that's how we got using this for describing my little API thing.",
    "start": "1480687",
    "end": "1488238"
  },
  {
    "text": "So as a user, a person. The person, the software developer's using my Structurizr product\nand Structurizr uses",
    "start": "1489228",
    "end": "1495877"
  },
  {
    "text": "the API to store information locally. So again, we can just write up some code to create that little model.",
    "start": "1495877",
    "end": "1502874"
  },
  {
    "text": "And then I can create\na system context view by adding the appropriate\nthings to my diagram.",
    "start": "1504957",
    "end": "1510858"
  },
  {
    "text": "And the net result is very\nsimply you get a picture like this from code like this.",
    "start": "1510858",
    "end": "1515908"
  },
  {
    "text": "This is a very, very\nsimple way to describe the high-level structures\nof a software system. We go down to containers,\nit's just the same deal.",
    "start": "1515908",
    "end": "1522918"
  },
  {
    "text": "So from a container perspective,\nessentially all I have is a little API server, it's\na web app, it's a Java web app",
    "start": "1522918",
    "end": "1529350"
  },
  {
    "text": "storing information on a file system. So again, we can create\na couple of containers,",
    "start": "1529350",
    "end": "1534416"
  },
  {
    "text": "we wind them together just\nusing some method calls, and we can create some diagrams.",
    "start": "1534416",
    "end": "1540101"
  },
  {
    "text": "So basically you write\ncode, you get pictures. This is great for the high-level stuff. Once you get down to\ncomponents, you don't want",
    "start": "1541003",
    "end": "1547294"
  },
  {
    "text": "to have to do that. So this is why the Open Source libraries have some component finder things in it. And the component finders find components.",
    "start": "1547294",
    "end": "1555115"
  },
  {
    "start": "1548000",
    "end": "1757000"
  },
  {
    "text": "See, naming's not hard after all. Now, the question becomes\nhow do you find components and the answer is it's up to you",
    "start": "1555115",
    "end": "1561133"
  },
  {
    "text": "because every code base is different. And this comes back to the\narchitecturally evident coding style thing.",
    "start": "1561133",
    "end": "1566908"
  },
  {
    "text": "So if you have a naming convention that your team's adopted, you\ncan go and find components based upon that naming convention.",
    "start": "1566908",
    "end": "1573264"
  },
  {
    "text": "If you use a framework like Spring, you can go and find Spring annotations and call them components",
    "start": "1573264",
    "end": "1578976"
  },
  {
    "text": "and so on and so forth. So lots of different\nstrategies you can plug in to find components. This is the code I use\nto find the components",
    "start": "1578976",
    "end": "1586933"
  },
  {
    "text": "in my little API application. Got a couple of different strategies here. I want to find the things\nending with the word servlet",
    "start": "1586933",
    "end": "1595193"
  },
  {
    "text": "and I want to find the\nthings that I've annotated with my own special app\ncomponent annotation.",
    "start": "1595193",
    "end": "1601132"
  },
  {
    "text": "Find them, wind them together. And actually there's some\nlogic behind the scenes in the framework that goes and finds",
    "start": "1601132",
    "end": "1607079"
  },
  {
    "text": "the inter-component dependencies. And that's the sort of\ndiagram you get from that.",
    "start": "1607079",
    "end": "1614056"
  },
  {
    "text": "So that's the API servlet\ncomponent that it found and that's the workspace component",
    "start": "1614056",
    "end": "1619733"
  },
  {
    "text": "and it's identified the\nrelationship between them. You might be wondering how\ndid that text get on there?",
    "start": "1619733",
    "end": "1625555"
  },
  {
    "text": "And the answer is you have\nto add some more metadata to your code base to do that.",
    "start": "1625555",
    "end": "1630184"
  },
  {
    "text": "This is really about creating a model, so I want to get people\naway from using diagrams and back to using modeling as an approach",
    "start": "1631408",
    "end": "1637765"
  },
  {
    "text": "for describing software. And because once you\nhave a model, you can do lots of really interesting things like generate diagram keys\nautomatically. (cheers)",
    "start": "1637765",
    "end": "1644916"
  },
  {
    "text": "No more horrible notation\nwe don't understand. Because this is a model, we can do things like hyperlink the model to the code.",
    "start": "1644916",
    "end": "1652419"
  },
  {
    "text": "So if you go online and\nyou find these diagrams, you can double-click any of the components and it takes you right to GitHub,",
    "start": "1652420",
    "end": "1657905"
  },
  {
    "text": "it takes you to the exact\nimplementation of that thing. And again, it comes\nback to the maps thing.",
    "start": "1657905",
    "end": "1663311"
  },
  {
    "text": "Diagrams are maps.",
    "start": "1663311",
    "end": "1664811"
  },
  {
    "text": "This is a funny tweet. 388,000 pixel wide picture.",
    "start": "1669626",
    "end": "1674265"
  },
  {
    "text": "My reason for including this tweet is basically, does such an approach scale? And the answer is no\nif you use it naively.",
    "start": "1676618",
    "end": "1683225"
  },
  {
    "text": "So this is what happened\nwhen I threw my own tooling at one of my own web apps. All of these things\nare web app controllers",
    "start": "1683225",
    "end": "1688817"
  },
  {
    "text": "and these things are components. My goodness, it's horrible. I don't think the code's\nhorrible, the diagram's horrible,",
    "start": "1688817",
    "end": "1694589"
  },
  {
    "text": "and of course making the\ndiagram canvas larger does not help one bit because you still have the message, just spread out.",
    "start": "1694589",
    "end": "1702023"
  },
  {
    "text": "But because this is a\nmodel, you can do some interesting things like\ndon't show me everything, show me a slice through the system.",
    "start": "1702024",
    "end": "1708955"
  },
  {
    "text": "For example, we can say what's a slice? Well, maybe it's a slice starting\nfrom a web app controller, an entry point to your system.",
    "start": "1708956",
    "end": "1715132"
  },
  {
    "text": "And show me that slice until you drop out of the bottom of the app. So basically you can\ncreate a larger number",
    "start": "1715132",
    "end": "1721113"
  },
  {
    "text": "of much, much simpler pictures. So that's my approach for\ndealing with complexity in scale.",
    "start": "1721113",
    "end": "1727930"
  },
  {
    "text": "Once you have a model, you can throw it into lots of other types of tooling. So if you're a Graphvis fan,",
    "start": "1727931",
    "end": "1733788"
  },
  {
    "text": "part of the Java Open Source library is a Graphvis exporter so it creates a DOC file, you put the\nDOC file into Graphvis,",
    "start": "1733788",
    "end": "1740346"
  },
  {
    "text": "it auto-generates diagrams for you. If you hook all of this stuff\nup to your build process, guess what happens?",
    "start": "1740347",
    "end": "1745815"
  },
  {
    "text": "Your documentation, your\ndiagrams remain up to date when your code changes\nand that's ultimately what I'm trying to get to here.",
    "start": "1745815",
    "end": "1753288"
  },
  {
    "text": "So the title of this talk was Visualize, Document, Explore so we should talk about\ndocumentation really quickly.",
    "start": "1753288",
    "end": "1760649"
  },
  {
    "start": "1757000",
    "end": "1952000"
  },
  {
    "text": "A lot of people are no\nlonger documenting anything. I know that sounds a bit extremist. We have our friend, the Agile\nManifesto to thank for that.",
    "start": "1760649",
    "end": "1768328"
  },
  {
    "text": "It people's misinterpretation\nof what the Agile Manifesto says about documentation. And of course, if I did\ndrop you into a project",
    "start": "1768328",
    "end": "1776628"
  },
  {
    "text": "that's unfamiliar to you, a code base that you've never seen before, you do get that kind of, \"Where\nam I on this leafy lane?\"",
    "start": "1776628",
    "end": "1783081"
  },
  {
    "text": "and you have to start\nzooming around exploring and try to figure out where you are. And this takes time.",
    "start": "1783082",
    "end": "1788647"
  },
  {
    "text": "That lane I dropped you\nin right at the start, you could keep walking\nuntil you met somebody and asked them, \"Where am I?",
    "start": "1789616",
    "end": "1795757"
  },
  {
    "text": "\"Where's the nearest X?\" for example. But it's just gonna take some time. Of course, once you're\nexploring the code base,",
    "start": "1795757",
    "end": "1802094"
  },
  {
    "text": "the code base actually\ndoesn't tell you everything you want to know. The code doesn't tell\nyou the entire story, especially around things\nlike rational and intent.",
    "start": "1802094",
    "end": "1810455"
  },
  {
    "text": "Why were these decisions made? That's often missing from the code base. And often, teams have\nlots of tribal knowledge",
    "start": "1810455",
    "end": "1816473"
  },
  {
    "text": "kicking around as well,\nspecialists and experts in particular parts of the code base.",
    "start": "1816473",
    "end": "1821627"
  },
  {
    "text": "And that's fine until those people leave or they get run over by\nthe proverbial London bus.",
    "start": "1821628",
    "end": "1828103"
  },
  {
    "text": "The thing is, the bus\nfactor as we call it, is not just about buses. Imagine you have a small team here, one does get run over by a\ndouble-decker bus, bye-bye.",
    "start": "1828103",
    "end": "1836276"
  },
  {
    "text": "Someone goes into sabbatical for a year and we have to fire somebody\nbecause they're useless. And now we have a smaller\nteam and the smaller team",
    "start": "1836276",
    "end": "1842421"
  },
  {
    "text": "starts saying things like,\n\"You know that thing there \"that we have to run\nevery week, what is it?\" Oh, and again, that's a\nkind of extreme thing,",
    "start": "1842421",
    "end": "1850005"
  },
  {
    "text": "but I have seen situations\nlike that occur. So how do we fix our\ndocumentation problems?",
    "start": "1850005",
    "end": "1855302"
  },
  {
    "text": "Well, we write some documentation. And this is where the SAD comes into play.",
    "start": "1855302",
    "end": "1861562"
  },
  {
    "text": "And it's called the SAD\nbecause it makes you sad. And there are lots of templates out there for this sort of thing.",
    "start": "1861562",
    "end": "1867464"
  },
  {
    "text": "Every consulting company\nI have ever worked at has created their own. Rupp has one, there's\nlots of them out there.",
    "start": "1867464",
    "end": "1873328"
  },
  {
    "text": "And these sort of software\narchitecture documents normally include some really interesting,\ninsightful information.",
    "start": "1873328",
    "end": "1879615"
  },
  {
    "text": "How do we get to the design,\nwhat were the design decisions, what is the architecture,\nhow do we look after it?",
    "start": "1879615",
    "end": "1886859"
  },
  {
    "text": "These documents tend to be just horrible. Hundreds of pages.",
    "start": "1886859",
    "end": "1891747"
  },
  {
    "text": "Out-of-date totally, useless. So how do we fix this? Well, it turns out naming is our friend.",
    "start": "1894195",
    "end": "1902182"
  },
  {
    "text": "What I do is I just rename the document and all the problems go\naway. (audience laughs) And I call it a guidebook.",
    "start": "1902182",
    "end": "1909808"
  },
  {
    "text": "Like the Jersey guidebook thing\nI talked about at the start. If you come to Jersey,\nyou buy a guidebook,",
    "start": "1909808",
    "end": "1915528"
  },
  {
    "text": "it has a bunch of maps\nto help you navigate an unfamiliar environment,\nit shows you the sites and the itineraries,\nthe points of interest,",
    "start": "1915528",
    "end": "1922090"
  },
  {
    "text": "the things you really should come and see. It talks about the\nhistory and the culture. How did Jersey get to where it is today?",
    "start": "1922090",
    "end": "1927969"
  },
  {
    "text": "And there's all the practical stuff. Again, if you take that\nmetaphor and apply it to a software system, you get\na really, really interesting",
    "start": "1927969",
    "end": "1933537"
  },
  {
    "text": "set of documentation. So maps, the diagrams, show\nme what the code looks like,",
    "start": "1933537",
    "end": "1938615"
  },
  {
    "text": "how do we explore the code base, which parts of the code base\nare useful to understand, which parts are important\nbecause most stuff isn't.",
    "start": "1938615",
    "end": "1945955"
  },
  {
    "text": "How did the code base\nevolve to where it is today and how do we look after it?",
    "start": "1945955",
    "end": "1951497"
  },
  {
    "text": "This is my single tip for documentation, just describe what you can't\nget from the code base.",
    "start": "1951497",
    "end": "1956601"
  },
  {
    "start": "1952000",
    "end": "1973000"
  },
  {
    "text": "That's it, it's as simple as that. Knock it up a level of abstraction.",
    "start": "1956601",
    "end": "1962612"
  },
  {
    "text": "And make these things small. Don't have hundreds and\nhundreds of pages of stuff that becomes out-of-date.",
    "start": "1962612",
    "end": "1968266"
  },
  {
    "text": "Make these things as\nsmall, lean as possible. They're really kind of living, breathing,\nevolving style documents.",
    "start": "1968266",
    "end": "1975615"
  },
  {
    "text": "This isn't the big up front design, we must create a SAD up front approach. This is a supplementary\npiece of documentation",
    "start": "1975615",
    "end": "1981413"
  },
  {
    "text": "that sits alongside the code base. And it's a product-related document.",
    "start": "1981413",
    "end": "1987229"
  },
  {
    "start": "1985000",
    "end": "2002000"
  },
  {
    "text": "A software system, a document,\na supplementary document. This doesn't mean you can't\ndo product documentation",
    "start": "1990461",
    "end": "1995949"
  },
  {
    "text": "as well, but every software system should have a user guide essentially. How does the software work?",
    "start": "1995949",
    "end": "2002418"
  },
  {
    "start": "2002000",
    "end": "2094000"
  },
  {
    "text": "(sighs) You choose, I don't care. It's the tooling thing and what tooling do you recommend for documents?",
    "start": "2003718",
    "end": "2009381"
  },
  {
    "text": "A lot of people still\nuse Word, that's fine. SharePoint if you really have to. Lots of people using Conference,",
    "start": "2009381",
    "end": "2014641"
  },
  {
    "text": "but I'm seeing more and more teams at tops of things that I\nask to dock a mark down. And they're creating a nice\nlittle documentation files",
    "start": "2014641",
    "end": "2022101"
  },
  {
    "text": "and they're sticking\nthe documentation files next to the source code\nin source code control. And then they do stuff at build time,",
    "start": "2022102",
    "end": "2028308"
  },
  {
    "text": "generate HTML, uploading to\nwebsites and Wikis and so on. So there's a lot of\nopportunities for using",
    "start": "2028308",
    "end": "2034966"
  },
  {
    "text": "different tooling here. Again, that's something I'm\ntrying to do with Structurizr. I want to create a\nsoftware architecture model",
    "start": "2034967",
    "end": "2040116"
  },
  {
    "text": "that contains both the model,\nthe visualization stuff, and the documentation. So this is the code I wrote to document",
    "start": "2040116",
    "end": "2046520"
  },
  {
    "text": "my little API application. It's a bunch of simple mark down files, you upload it as part of the model,",
    "start": "2046520",
    "end": "2052157"
  },
  {
    "text": "and some documentation's\nbasically generated for you, that's it. So again, I'm trying to keep\nall of this stuff in one place.",
    "start": "2052157",
    "end": "2057917"
  },
  {
    "text": "And you can also embed\ndiagrams in your documentation. So again, these things are\ntogether where they belong.",
    "start": "2057917",
    "end": "2064921"
  },
  {
    "text": "There are some other\napproaches to documentation. So this guy's saying lots\nof really interesting stuff",
    "start": "2064922",
    "end": "2070117"
  },
  {
    "text": "around living documentation,\nhe's got a whole bunch of little tools, Open Source and GitHub,",
    "start": "2070117",
    "end": "2075326"
  },
  {
    "text": "that you can use for\ncreating documentation from code, for example. And these guys in Germany have",
    "start": "2075327",
    "end": "2080780"
  },
  {
    "text": "a software architecture\ndocument they call arc42 and it's a really, really nice,\nlightweight, lean approach",
    "start": "2080780",
    "end": "2086277"
  },
  {
    "text": "to documenting software systems. It's very similar to the\napproach I particularly take. And there's lots of content,\nlots of free content",
    "start": "2086277",
    "end": "2092981"
  },
  {
    "text": "that you can grab on arc42. People say, \"How long\nshould a document be?\" and that's the wrong question to ask.",
    "start": "2092982",
    "end": "2100151"
  },
  {
    "start": "2094000",
    "end": "2118000"
  },
  {
    "text": "How many pages is the\nwrong question to ask. If I join your team,\nwhat I'm really looking",
    "start": "2100151",
    "end": "2105421"
  },
  {
    "text": "for is a document I can consume in like one or two hours\nover a coffee or two to get a good jump-off point into the code",
    "start": "2105421",
    "end": "2112472"
  },
  {
    "text": "so that I can go and explore\nin a much more structured way, much more structured manner.",
    "start": "2112472",
    "end": "2118205"
  },
  {
    "start": "2118000",
    "end": "2201000"
  },
  {
    "text": "To speak of exploring,\nonce you start to model your software, you can do\nsome really interesting",
    "start": "2119289",
    "end": "2124957"
  },
  {
    "text": "stuff with it. So you can do things like\ncreate a JavaScript D3 visualization of the static elements,",
    "start": "2124957",
    "end": "2131901"
  },
  {
    "text": "it's just a tree structure. So this is a model that one\nof the sample applications from the Spring Team, it's\ncalled the Spring Pet Clinic,",
    "start": "2131902",
    "end": "2138951"
  },
  {
    "text": "and this is just the software\nsystem container's components.",
    "start": "2138951",
    "end": "2143118"
  },
  {
    "text": "You can do things like let's\nfind all of the interesting component dependencies, incoming\nand outgoing dependencies.",
    "start": "2144115",
    "end": "2149701"
  },
  {
    "text": "You can do things like\nlet's rate our components based on size and complexity. So again, once you have\na model, you can do",
    "start": "2149701",
    "end": "2154744"
  },
  {
    "text": "some cool stuff with it. You can throw it into Neo4j\nif you really want to. Why not?",
    "start": "2154744",
    "end": "2159812"
  },
  {
    "text": "The software architecture model\nis just a directive graph. You throw it into Neo4j and\nyou can query it or cypher.",
    "start": "2159812",
    "end": "2164932"
  },
  {
    "text": "People are actually doing this. There's a whole set of\ntooling called jQAssistant that let's you do this.",
    "start": "2164932",
    "end": "2170440"
  },
  {
    "text": "You run it, it gets your source code, you set up some rules and basically it pops it into Neo behind\nthe scenes, it's awesome.",
    "start": "2170440",
    "end": "2176956"
  },
  {
    "text": "And these guys, Empear, they've\ncreated a set of tooling that runs against your\nsource code repositories",
    "start": "2176956",
    "end": "2182593"
  },
  {
    "text": "and not only are they\ndoing static analysis, but they're also super\nimposing the human aspects",
    "start": "2182593",
    "end": "2187595"
  },
  {
    "text": "on top as well. So they can look for things like, we have this one thing here\nand it's always changed by these two different teams, why is that?",
    "start": "2187595",
    "end": "2195087"
  },
  {
    "text": "Maybe we've got the component\nboundaries incorrect in this particular instance. So again, there's really\ncool technology there.",
    "start": "2195087",
    "end": "2202631"
  },
  {
    "start": "2201000",
    "end": "2248000"
  },
  {
    "text": "In summary, there's a virtual panel",
    "start": "2202631",
    "end": "2207691"
  },
  {
    "text": "about software architecture\ndocumentation from 2009. Some people you might now on\nhere, Eoin Woods of course,",
    "start": "2207691",
    "end": "2214688"
  },
  {
    "text": "and it says things like we should be able to see the architecture in the code. We should be able to embed\nthis information in the code.",
    "start": "2214688",
    "end": "2222463"
  },
  {
    "text": "We should be able to get the documentation from a click of a button for example. It's really about automating as much",
    "start": "2222463",
    "end": "2227763"
  },
  {
    "text": "of this documentation as possible. I don't think we're there yet, but I think",
    "start": "2227763",
    "end": "2233434"
  },
  {
    "text": "we can get there and we are\nstarting to get there of course. My summary is really\nthat diagrams are maps.",
    "start": "2233434",
    "end": "2241238"
  },
  {
    "text": "Treat your software architecture diagrams as a set of simple maps\nto describe your code based on different levels of abstraction.",
    "start": "2241238",
    "end": "2247682"
  },
  {
    "text": "Any documentation you\ncreate should describe what the code doesn't,\nit's as simple as that.",
    "start": "2247682",
    "end": "2252839"
  },
  {
    "start": "2248000",
    "end": "2296000"
  },
  {
    "text": "And yeah, the 1990s called and\nthey want their tooling back. (laughs) So stop using Visio,\nplease stop using Visio.",
    "start": "2252840",
    "end": "2259173"
  },
  {
    "text": "And if you're gonna\nsay, we don't use Visio, we use Gliffy, it's the same thing. Stop using that as well. Stop manually drawing boxes and lines",
    "start": "2259174",
    "end": "2265956"
  },
  {
    "text": "to describe software architecture. All of the tooling aside,\nmy final closing comment",
    "start": "2265956",
    "end": "2272101"
  },
  {
    "text": "is very, very simple. Whenever you're describing\nsoftware, make sure within your team you have a\nubiquitous language to do so.",
    "start": "2272101",
    "end": "2280510"
  },
  {
    "text": "That's me, thank you very much. (audience applauds)",
    "start": "2281578",
    "end": "2287152"
  }
]