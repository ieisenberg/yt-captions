[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "thank you so welcome everyone today i will yeah show you how to migrate your java 8",
    "start": "11840",
    "end": "19199"
  },
  {
    "text": "or 11th surface to another very great great",
    "start": "19199",
    "end": "24480"
  },
  {
    "text": "jvm language at least in my perspective most of the java services are still",
    "start": "24480",
    "end": "29599"
  },
  {
    "text": "written in java 8 more and more services are migrated to java 11.",
    "start": "29599",
    "end": "34960"
  },
  {
    "text": "but i think this is a really great alternative to to implement in your backend services",
    "start": "34960",
    "end": "40160"
  },
  {
    "text": "kotlin is known for in the android world but i think it should get some more traction on the back end side so we'll show that",
    "start": "40160",
    "end": "46960"
  },
  {
    "text": "to you today so my story with kotlin a few years it started a few years ago",
    "start": "46960",
    "end": "53120"
  },
  {
    "start": "48000",
    "end": "167000"
  },
  {
    "text": "uh where in my team we were really really really happy about java 8 and its functional",
    "start": "53120",
    "end": "60719"
  },
  {
    "text": "programming implementations at least with sprint so the code base was filled with",
    "start": "60719",
    "end": "69040"
  },
  {
    "text": "such change of collection manipulation where we had a lot of filter statement",
    "start": "69040",
    "end": "74159"
  },
  {
    "text": "and reproducing and actually this example would be a very short example of what we had in the",
    "start": "74159",
    "end": "79840"
  },
  {
    "text": "code base and after a while this became unmaintainable because well we had too long change",
    "start": "79840",
    "end": "87759"
  },
  {
    "text": "of uh collection manipulation and well that was a problem which we should have reflected it by",
    "start": "87759",
    "end": "93759"
  },
  {
    "text": "then but um we wanted to achieve something a bit bigger than refactoring extracting",
    "start": "93759",
    "end": "100079"
  },
  {
    "text": "functions and stuff we wanted to go to some code looking like this where actually these filter",
    "start": "100079",
    "end": "107920"
  },
  {
    "text": "statements filtering out the board games allowed suitable for a minimal number of",
    "start": "107920",
    "end": "114880"
  },
  {
    "text": "two players would be expressed in a function called more than two players",
    "start": "114880",
    "end": "120560"
  },
  {
    "text": "and the next filtering statement instead of seeing filtering again i would have liked to have a method",
    "start": "120560",
    "end": "127680"
  },
  {
    "text": "called older than 10 to play and the same with the mapreduce statement just re",
    "start": "127680",
    "end": "133040"
  },
  {
    "text": "yeah confine and they want to function and actually back then we found that into kotlin",
    "start": "133040",
    "end": "138800"
  },
  {
    "text": "it was kotlin 1.2 i think back then and it had already",
    "start": "138800",
    "end": "144000"
  },
  {
    "text": "the extension functions and we could actually refactor our code base using those extension function",
    "start": "144000",
    "end": "149840"
  },
  {
    "text": "we didn't do that right away because this is a pretty advanced feature of the language",
    "start": "149840",
    "end": "154879"
  },
  {
    "text": "we started with all migration planned to achieve uh to having a code base which was more",
    "start": "154879",
    "end": "160640"
  },
  {
    "text": "readable and more maintainable than we had in java 8. so this is a bit about my story with",
    "start": "160640",
    "end": "166560"
  },
  {
    "text": "kotlin so who am i uh pauline uh just mentioned i'm a polyphenols i'm working from for",
    "start": "166560",
    "end": "173760"
  },
  {
    "start": "167000",
    "end": "214000"
  },
  {
    "text": "open value we are a small company uh helping out companies to innovate their software",
    "start": "173760",
    "end": "179360"
  },
  {
    "text": "engineering i'm also hosting a podcast about software engineering called",
    "start": "179360",
    "end": "184480"
  },
  {
    "text": "barcoding you can find us on barcoding.dev on twitter spotify apple podcast google",
    "start": "184480",
    "end": "191440"
  },
  {
    "text": "podcast in my free time i like to play board games so this is a theme of the",
    "start": "191440",
    "end": "196800"
  },
  {
    "text": "application that we're going to migrate today so it explains a bit and yeah you can find me on twitter as",
    "start": "196800",
    "end": "204080"
  },
  {
    "text": "well if you want to and since a month i'm also a google developer expert in kotlin focusing on",
    "start": "204080",
    "end": "211200"
  },
  {
    "text": "kotlin back-ends so a small and quick recap about the new",
    "start": "211200",
    "end": "218080"
  },
  {
    "start": "214000",
    "end": "283000"
  },
  {
    "text": "java versions since java 8 java is really trying to",
    "start": "218080",
    "end": "224560"
  },
  {
    "text": "innovate and listening to the community and bring some awesome features in like switch statements type",
    "start": "224560",
    "end": "230879"
  },
  {
    "text": "interference the g-show you can finally program",
    "start": "230879",
    "end": "236239"
  },
  {
    "text": "java in your terminal if you want to try something out convenient methods for collections are",
    "start": "236239",
    "end": "242879"
  },
  {
    "text": "added and the release cadence has been increased so every six months there's a new release",
    "start": "242879",
    "end": "248720"
  },
  {
    "text": "but the lts version versions are still every now and then um which is a great",
    "start": "248720",
    "end": "256160"
  },
  {
    "text": "improvement this release anyway so that's really cool um and they added",
    "start": "256160",
    "end": "262639"
  },
  {
    "text": "i think since java 14 records which are confined classes for your domain",
    "start": "262639",
    "end": "269840"
  },
  {
    "text": "object so this is really cool in java but so why even look at kotlin",
    "start": "269840",
    "end": "275680"
  },
  {
    "text": "well because i think golden is even better and improving itself in another way which",
    "start": "275680",
    "end": "281440"
  },
  {
    "text": "can be really interesting as well so some reasons to switch to kotlin",
    "start": "281440",
    "end": "286960"
  },
  {
    "start": "283000",
    "end": "499000"
  },
  {
    "text": "well it has regular updates they're using the semantic versioning uh like a lot of libraries and",
    "start": "286960",
    "end": "293199"
  },
  {
    "text": "frameworks frameworks out there so there are patch releases there are minor updates",
    "start": "293199",
    "end": "298320"
  },
  {
    "text": "not yet major updates but still so that's uh i think something",
    "start": "298320",
    "end": "305680"
  },
  {
    "text": "that's very valuable the interoperability with the java ecosystem is",
    "start": "305680",
    "end": "311440"
  },
  {
    "text": "enormous they rely highly on it which makes it easy to integrate coupling into your java service",
    "start": "311440",
    "end": "318050"
  },
  {
    "text": "[Music] if you're working on a mobile first application the multi-platform",
    "start": "318050",
    "end": "326080"
  },
  {
    "text": "release of kotlin is a great advantage as well because you can use the code base for",
    "start": "326080",
    "end": "331199"
  },
  {
    "text": "your ios code your android code and your web code your web code in yeah you can just",
    "start": "331199",
    "end": "338479"
  },
  {
    "text": "have that in one repository so it's just one single code base so that can be a good reason to switch",
    "start": "338479",
    "end": "346560"
  },
  {
    "text": "to kotlin as well but where for the backend functionality of complaints so then",
    "start": "346560",
    "end": "354160"
  },
  {
    "text": "readability can be a great argument kotlin language features are really designed to",
    "start": "354160",
    "end": "359600"
  },
  {
    "text": "have more readable and more business-oriented go so it's a really big advantage less",
    "start": "359600",
    "end": "366400"
  },
  {
    "text": "boilerplate and when you're saying readability you're saying yeah uh more yeah maintenance that's",
    "start": "366400",
    "end": "373440"
  },
  {
    "text": "easier to do less boilerplate again less maintenance and safe programming and what you should",
    "start": "373440",
    "end": "381039"
  },
  {
    "text": "know is that uh having a null point exception in kotlin is very hard you should really do your best to",
    "start": "381039",
    "end": "387280"
  },
  {
    "text": "to trigger no pointer exception so safe programming is a really easy coupling as well",
    "start": "387280",
    "end": "395120"
  },
  {
    "text": "another thing is that spring spring is used a lot in the java community for",
    "start": "395120",
    "end": "400560"
  },
  {
    "text": "backend services and spring is really hopping on the train of kotlin for the next spring boot release 2.4 uh",
    "start": "400560",
    "end": "409360"
  },
  {
    "text": "there will be even dsls domain specific languages for at least the web",
    "start": "409360",
    "end": "416400"
  },
  {
    "text": "site of your application so for your endpoints webflux is already",
    "start": "416400",
    "end": "421599"
  },
  {
    "text": "proposing that co-routines if you want to do multi-trading programming in kotlin then routines are",
    "start": "421599",
    "end": "428960"
  },
  {
    "text": "the way to go and here on this part again this is the part where kotlin distinguishes itself",
    "start": "428960",
    "end": "435360"
  },
  {
    "text": "from java [Music] supporting the java ecosystem a lot of",
    "start": "435360",
    "end": "442400"
  },
  {
    "text": "java libraries are moving towards supporting kotlin as well and",
    "start": "442400",
    "end": "447680"
  },
  {
    "text": "the number of those libraries and frameworks are really growing and the cotton ecosystem is becoming",
    "start": "447680",
    "end": "454400"
  },
  {
    "text": "bigger and bigger as well with cotton ecosystem i mean frameworks and libraries that are",
    "start": "454400",
    "end": "460639"
  },
  {
    "text": "designed for kotlin by coupling programmers so no influence of the java ecosystem",
    "start": "460639",
    "end": "467280"
  },
  {
    "text": "there one example is skater for example which is a back-end framework",
    "start": "467280",
    "end": "472479"
  },
  {
    "text": "kind of uh equivalent to spring spring but more focused on the multi-threading",
    "start": "472479",
    "end": "477840"
  },
  {
    "text": "programming spring reflex is already supporting kotlin in a great way and um",
    "start": "477840",
    "end": "486240"
  },
  {
    "text": "micronaut and quarkus forgot the logo there but quarkis as well are supporting kotlin so if you're",
    "start": "486240",
    "end": "494240"
  },
  {
    "text": "looking to to those kind of frameworks kotlin can be a way to go so",
    "start": "494240",
    "end": "500000"
  },
  {
    "start": "499000",
    "end": "603000"
  },
  {
    "text": "so what to keep in mind yeah it's a downside as well",
    "start": "500000",
    "end": "506720"
  },
  {
    "text": "the interoperability with the java ecosystem ever since i'm learning kotlin i'm also",
    "start": "506720",
    "end": "512080"
  },
  {
    "text": "learning about java and its frameworks in this ecosystem as",
    "start": "512080",
    "end": "517518"
  },
  {
    "text": "kotlin has some features which make interoperability with the java ecosystem a bit awkward i would say",
    "start": "517519",
    "end": "526800"
  },
  {
    "text": "because while you still have notable types in your java libraries java library is highly depend on",
    "start": "526959",
    "end": "533839"
  },
  {
    "text": "reflection and on proxy and classes",
    "start": "533839",
    "end": "539040"
  },
  {
    "text": "where kotlin prefers final classes immutability and non-nullable types",
    "start": "539040",
    "end": "547519"
  },
  {
    "text": "i will show that during the code demo the idioms of kotlin are something you really should understand before starting",
    "start": "547519",
    "end": "554959"
  },
  {
    "text": "writing your code base of kotlin because otherwise you will write java equivalent codes and not",
    "start": "554959",
    "end": "560320"
  },
  {
    "text": "proper kotlin code it's not a magic problem solver at my team you thought it would solve our",
    "start": "560320",
    "end": "566560"
  },
  {
    "text": "problems of course not if you have a messy code base it will remain messy if you write it",
    "start": "566560",
    "end": "571600"
  },
  {
    "text": "into coupling of course but it will definitely help you to refactor your code at least that's my",
    "start": "571600",
    "end": "578320"
  },
  {
    "text": "experience so just to make a statement here kotlin",
    "start": "578320",
    "end": "584480"
  },
  {
    "text": "is not just a better java version it's not a synthetic checker around java it's really",
    "start": "584480",
    "end": "592560"
  },
  {
    "text": "also promoting new new cool features in the language which are technically",
    "start": "592560",
    "end": "600480"
  },
  {
    "text": "very good so let's start to have a look at our application uh the",
    "start": "600800",
    "end": "607279"
  },
  {
    "start": "603000",
    "end": "680000"
  },
  {
    "text": "application that we are going to migrate today is a surface proposing two endpoints one",
    "start": "607279",
    "end": "613360"
  },
  {
    "text": "of them will enable us to rate games board games so for instance assign",
    "start": "613360",
    "end": "621600"
  },
  {
    "text": "8 out of 10 to gain dominion and another endpoint where we can",
    "start": "621600",
    "end": "627600"
  },
  {
    "text": "retrieve all the games that were rated higher than an 8 for instance and then we will retrieve some popular",
    "start": "627600",
    "end": "634800"
  },
  {
    "text": "board games such as the minion and ticker to right",
    "start": "634800",
    "end": "639279"
  },
  {
    "text": "i went a bit faster there on my animation so let me get click through it so here you have another overview of the surface",
    "start": "640240",
    "end": "648480"
  },
  {
    "text": "the technical details it's a spring boot 2 surface",
    "start": "648480",
    "end": "654079"
  },
  {
    "text": "yeah so nothing special there it's pretty standard in the java world and a memory database because that's a",
    "start": "654160",
    "end": "660399"
  },
  {
    "text": "bit easier for the demo and it's tested through unit test and integration test",
    "start": "660399",
    "end": "666160"
  },
  {
    "text": "i'm also using maven and i'm doing that on purpose because a lot of examples in the kotlin world are done",
    "start": "666160",
    "end": "673760"
  },
  {
    "text": "with gradle so i wanted to show you an alternative from that part",
    "start": "673760",
    "end": "679440"
  },
  {
    "start": "680000",
    "end": "758000"
  },
  {
    "text": "the migration plan that i want to show you um what we did back then was starting with setting up the",
    "start": "680800",
    "end": "686399"
  },
  {
    "text": "dependencies that you need to work with kotlin and that's already one big part to see",
    "start": "686399",
    "end": "692000"
  },
  {
    "text": "if you don't have conflicts on your dependencies then the second step",
    "start": "692000",
    "end": "697200"
  },
  {
    "text": "that i would like to propose to you would be to migrate your plain java objects",
    "start": "697200",
    "end": "702399"
  },
  {
    "text": "to describe your domain uh yeah your your functional domain and you will already gain a lot by doing this step",
    "start": "702399",
    "end": "709680"
  },
  {
    "text": "actually and i will show you later on why [Music] the first step would be to rewrite your",
    "start": "709680",
    "end": "715519"
  },
  {
    "text": "unit test there you can already learn a bit more about kotlin",
    "start": "715519",
    "end": "721600"
  },
  {
    "text": "and get yourself a bit more familiar to the language fourth step would be to attack the core",
    "start": "721600",
    "end": "727600"
  },
  {
    "text": "logics if your tests are great you can refactor your core logic and you would already have learned a lot",
    "start": "727600",
    "end": "734240"
  },
  {
    "text": "about kotlin to do that properly and last but not least of course your spring configuration",
    "start": "734240",
    "end": "742000"
  },
  {
    "text": "now let's start your code so what i'm going to do is stop sharing this application and go back to my zoom call",
    "start": "742880",
    "end": "751440"
  },
  {
    "text": "and share my intellij view",
    "start": "751440",
    "end": "758160"
  },
  {
    "start": "758000",
    "end": "2140000"
  },
  {
    "text": "so this is the application let me put on the presentation mode so you can see it the application that",
    "start": "758160",
    "end": "765440"
  },
  {
    "text": "we're going to refactor here is a application holding two packages one for the api description",
    "start": "765440",
    "end": "771839"
  },
  {
    "text": "describing a board game and one surface package which holds the endpoints the surface",
    "start": "771839",
    "end": "779760"
  },
  {
    "text": "and yeah well repositories that you need to access your database",
    "start": "779760",
    "end": "786800"
  },
  {
    "text": "it has some tests actually two tests not a proper test permit but",
    "start": "786800",
    "end": "792959"
  },
  {
    "text": "all right a unit test and an integration test the integration test is just checking if the endpoints are still",
    "start": "792959",
    "end": "800399"
  },
  {
    "text": "working and returning the values properly it will also fire up the application so um",
    "start": "800399",
    "end": "807200"
  },
  {
    "text": "if i am going to do a maven verify this is my alias for maven",
    "start": "807200",
    "end": "812839"
  },
  {
    "text": "verify i hope it will work now yes of course",
    "start": "812839",
    "end": "817760"
  },
  {
    "text": "here you will see that it's compiling proper java code and nothing very unusual there it will",
    "start": "818079",
    "end": "824720"
  },
  {
    "text": "run the test as well a lot of spring logging which is good because it means it's booting my",
    "start": "824720",
    "end": "830000"
  },
  {
    "text": "application in a test and at the end you will see that the four tests have been run",
    "start": "830000",
    "end": "835360"
  },
  {
    "text": "uh during this cycle of maven so here you see it test run four",
    "start": "835360",
    "end": "842399"
  },
  {
    "text": "so great we're good to go application is fine we can now uh start with the first step",
    "start": "842399",
    "end": "849279"
  },
  {
    "text": "which would be to set up the dependencies and i've already prepared that for you because",
    "start": "849279",
    "end": "855600"
  },
  {
    "text": "that's a bit easier and it didn't",
    "start": "855600",
    "end": "862720"
  },
  {
    "text": "yeah there we are so to set up the dependencies",
    "start": "862720",
    "end": "869279"
  },
  {
    "text": "i will scroll back to my pond.xml what you see here is that i",
    "start": "869279",
    "end": "874639"
  },
  {
    "text": "specified the kotlin version",
    "start": "874639",
    "end": "878160"
  },
  {
    "text": "bit but you also need to add them of course in your problem is some",
    "start": "883519",
    "end": "890720"
  },
  {
    "text": "libraries to have at least access to the code library for the unit test and then",
    "start": "890720",
    "end": "898000"
  },
  {
    "text": "if i scroll back to my build cycle i am here using the kotlin maven plugin",
    "start": "898000",
    "end": "904160"
  },
  {
    "text": "and then some complicated execution configuration you can find it on the cotton website",
    "start": "904160",
    "end": "911680"
  },
  {
    "text": "that is needed um because i'm here combining java code and coupling code",
    "start": "911680",
    "end": "917440"
  },
  {
    "text": "into one repository so i need to tell the compiler you can find all my source code over there and it's fine you can compile my",
    "start": "917440",
    "end": "924880"
  },
  {
    "text": "java code and later on my coupling code and they are able to talk with each other as well",
    "start": "924880",
    "end": "931199"
  },
  {
    "text": "so when once i've done that it will again",
    "start": "931199",
    "end": "936380"
  },
  {
    "text": "[Music] i will verify if my application is still starting uh",
    "start": "936380",
    "end": "941839"
  },
  {
    "text": "i would advise to do that this in a single step a single commute actually the spring boot parent that i'm using",
    "start": "941839",
    "end": "949920"
  },
  {
    "text": "here has a coupling bomb so it's good to check if no versions conflicts are are happening",
    "start": "949920",
    "end": "957199"
  },
  {
    "text": "over there what you can see here is that spring is uh started [Music]",
    "start": "957199",
    "end": "962959"
  },
  {
    "text": "in the login here i see that it's also connecting to the database so as you see my four tests are successful",
    "start": "962959",
    "end": "969440"
  },
  {
    "text": "my build is successful so no versions conflicts here my second step in my migration plan was",
    "start": "969440",
    "end": "977120"
  },
  {
    "text": "to migrate my plain java objects so let's go to the api package",
    "start": "977120",
    "end": "982720"
  },
  {
    "text": "i have here my home my my domain description my board game",
    "start": "982720",
    "end": "989680"
  },
  {
    "text": "class is the most important one in my repository of course because that's my main entity which is described over here and i will",
    "start": "989680",
    "end": "996720"
  },
  {
    "text": "start to refactor that to kotlin actually so what i will do is to make a file",
    "start": "996720",
    "end": "1002639"
  },
  {
    "text": "called board game just a coupling file that's okay",
    "start": "1002639",
    "end": "1011040"
  },
  {
    "text": "and i'm a lazy programmer right so i will just do some copy pasting why not and here",
    "start": "1011040",
    "end": "1018240"
  },
  {
    "text": "uh intellij is really awesome it will say okay you're lazy you're doing copy pasting i",
    "start": "1018240",
    "end": "1024240"
  },
  {
    "text": "will even do the work for you so of course i will say yes i'm still lazy and uh it's compiling uh it's now",
    "start": "1024240",
    "end": "1032079"
  },
  {
    "text": "rewriting my code too kotlin um what do i see here i see here java a",
    "start": "1032079",
    "end": "1037520"
  },
  {
    "text": "coupling code which is java equivalent it doesn't respect any idioms of coupling yet so i need to do some",
    "start": "1037520",
    "end": "1043839"
  },
  {
    "text": "reflection i'm not done intelligent i didn't do all the work as",
    "start": "1043839",
    "end": "1049600"
  },
  {
    "text": "many java code bases i'm relying on the third party library lombok to avoid a lot of boilerplate",
    "start": "1049600",
    "end": "1056880"
  },
  {
    "text": "code in my in my code base i'm going to remove that because i don't need it anymore as i'm",
    "start": "1056880",
    "end": "1063360"
  },
  {
    "text": "using copying i can declare here a data class which is almost the same as records",
    "start": "1063360",
    "end": "1069520"
  },
  {
    "text": "in java 14. the thing with data classes is that you",
    "start": "1069520",
    "end": "1074880"
  },
  {
    "text": "can declare your entity with its fields and you will then have a copy method a two-string method",
    "start": "1074880",
    "end": "1080799"
  },
  {
    "text": "a hashgraph method an equals method the copy method is is there on purpose it's a big",
    "start": "1080799",
    "end": "1086480"
  },
  {
    "text": "difference with java as scotland embraces immutability so it will enable you to have immutable",
    "start": "1086480",
    "end": "1093039"
  },
  {
    "text": "objects there now it's not compiling now why because a data class express",
    "start": "1093039",
    "end": "1098559"
  },
  {
    "text": "expects a direct declaration of the constructor so i need to replace the curly brackets",
    "start": "1098559",
    "end": "1104720"
  },
  {
    "text": "with rounded brackets to starting declare my uh my constructor so",
    "start": "1104720",
    "end": "1110960"
  },
  {
    "text": "now it's all messed up but that's fine let's pick this uh fix this i don't need private here because i don't need to get",
    "start": "1110960",
    "end": "1117280"
  },
  {
    "text": "this i'm fine with it they can access my my members directly",
    "start": "1117280",
    "end": "1124640"
  },
  {
    "text": "the other thing is that java really likes no or only accepts notable types so um what the",
    "start": "1124799",
    "end": "1131120"
  },
  {
    "text": "deer here did here is that it declares nullable types in association and the fields are",
    "start": "1131120",
    "end": "1136960"
  },
  {
    "text": "instantiated with nil and i'm removing that as well because i want to have that mill safety which cotton has to offer",
    "start": "1136960",
    "end": "1145200"
  },
  {
    "text": "now let's remove the java entity",
    "start": "1145200",
    "end": "1150559"
  },
  {
    "text": "non-safety and what you will see now is that i remove the java entity and replace it by a coupling entity",
    "start": "1150559",
    "end": "1157360"
  },
  {
    "text": "and let's now check if my code base is not even not only compiling but also still my",
    "start": "1157360",
    "end": "1164000"
  },
  {
    "text": "application is still running right because i have some great integration tests that will spin up my application",
    "start": "1164000",
    "end": "1169919"
  },
  {
    "text": "and if this is working this means that also my api didn't broke",
    "start": "1169919",
    "end": "1174960"
  },
  {
    "text": "so this is something that's very valuable um you can see now in the logging of",
    "start": "1174960",
    "end": "1181520"
  },
  {
    "text": "maven is that the kotlin maven compile is now doing its job it has some mornings",
    "start": "1181520",
    "end": "1189919"
  },
  {
    "text": "that's for now for this presentation all right you can see that my spring upper",
    "start": "1189919",
    "end": "1195679"
  },
  {
    "text": "location is started again and hopefully my tests are green of",
    "start": "1195679",
    "end": "1202000"
  },
  {
    "text": "course my four tests are run so what i was the result here is that all my",
    "start": "1202000",
    "end": "1207039"
  },
  {
    "text": "code is java except with one entity which is scotland and it's already working",
    "start": "1207039",
    "end": "1212880"
  },
  {
    "text": "so that's great let's just stash this and go forward to the end result",
    "start": "1212880",
    "end": "1221840"
  },
  {
    "text": "and something wrong let's go to the branch which has",
    "start": "1224720",
    "end": "1231520"
  },
  {
    "text": "all the api migrated to kotlin",
    "start": "1231520",
    "end": "1236080"
  },
  {
    "text": "this is the final result of my api migrated to coupling another great feature in kotlin is that",
    "start": "1238000",
    "end": "1244559"
  },
  {
    "text": "i can group data classes in one file that will work fine in java that's not",
    "start": "1244559",
    "end": "1249600"
  },
  {
    "text": "not possible another so this enables me to really gather the",
    "start": "1249600",
    "end": "1255200"
  },
  {
    "text": "objects that belong together another great feature here is default",
    "start": "1255200",
    "end": "1260799"
  },
  {
    "text": "values in the constructor so a lot of board games have a maximum age from 99 never",
    "start": "1260799",
    "end": "1266960"
  },
  {
    "text": "understood why so if you don't want to implement that in your",
    "start": "1266960",
    "end": "1272400"
  },
  {
    "text": "business logic you can use the constructor holding only one parameter if you want to override it you",
    "start": "1272400",
    "end": "1279440"
  },
  {
    "text": "can use the constructor with two parameters but you only have to declare one constructor in such a way",
    "start": "1279440",
    "end": "1286720"
  },
  {
    "text": "so that is it so going from a lot of files declaring java objects i only have",
    "start": "1286720",
    "end": "1292240"
  },
  {
    "text": "one file uh having cotton objects for the sake of time i won't run the maven verify here except that",
    "start": "1292240",
    "end": "1299840"
  },
  {
    "text": "this is working we will continue with this code in the second exam second step",
    "start": "1299840",
    "end": "1304960"
  },
  {
    "text": "uh the third step i'm sorry the third step would be to implement my unit test",
    "start": "1304960",
    "end": "1312799"
  },
  {
    "text": "uh i will just quick show you the unit test as early as it is this is the",
    "start": "1312799",
    "end": "1321120"
  },
  {
    "text": "unit test in java it is using mojito to mock my dependencies of my bean",
    "start": "1321120",
    "end": "1327200"
  },
  {
    "text": "and it will just use mojito with the expectations",
    "start": "1327200",
    "end": "1332320"
  },
  {
    "text": "often box obstacles and then here the call that is tested and some assertions",
    "start": "1332320",
    "end": "1340080"
  },
  {
    "text": "so let's have a look at how it looks like when i'm writing this down in kotlin because this",
    "start": "1340080",
    "end": "1346240"
  },
  {
    "text": "is interesting here kotlin doesn't really like",
    "start": "1346240",
    "end": "1351759"
  },
  {
    "text": "how do you say it proxying and non-final stuff",
    "start": "1352000",
    "end": "1358880"
  },
  {
    "text": "so i can still use mojito as i did here this is the kotlin equivalent code it's a unit test where",
    "start": "1358880",
    "end": "1367039"
  },
  {
    "text": "i'm using mokito to make to mock the classes but it's using here java classes so i'm",
    "start": "1367039",
    "end": "1373440"
  },
  {
    "text": "still living in the java world but already i have some huge improvements i'm using backticks",
    "start": "1373440",
    "end": "1379600"
  },
  {
    "text": "to declare my functions really nice language feature that should only be used in testcode",
    "start": "1379600",
    "end": "1386000"
  },
  {
    "text": "actually so it makes it more readable to return scenarios",
    "start": "1386000",
    "end": "1391600"
  },
  {
    "text": "i need to use here backticks as well because when it's a reserved keyword and coupling but then to make it a bit more readable",
    "start": "1391600",
    "end": "1398559"
  },
  {
    "text": "i used extension functions to declare the the return values of the",
    "start": "1398559",
    "end": "1405600"
  },
  {
    "text": "mock-in call another feature that i use here from kotlin is to use a",
    "start": "1405600",
    "end": "1410799"
  },
  {
    "text": "destruction of the return value i only want to assert on the rating value so i can just",
    "start": "1410799",
    "end": "1416320"
  },
  {
    "text": "destructure it like this another way to do this is to go more",
    "start": "1416320",
    "end": "1422640"
  },
  {
    "text": "into the coupling world and to use another framework which is called but then with two cases a bit confusing",
    "start": "1422640",
    "end": "1430559"
  },
  {
    "text": "here i don't need to cast my my my mock to a java moc i can just stay in the kotlin",
    "start": "1430559",
    "end": "1437919"
  },
  {
    "text": "world still using the backticks to declare the function but now i'm using the dsl that",
    "start": "1437919",
    "end": "1446000"
  },
  {
    "text": "mock is uh offering so every call to the repository should return with",
    "start": "1446000",
    "end": "1451360"
  },
  {
    "text": "this value should return this optional value and and search",
    "start": "1451360",
    "end": "1456720"
  },
  {
    "text": "so let's see if this still is running now i've added two tests because i'm showing you uh",
    "start": "1456720",
    "end": "1465039"
  },
  {
    "text": "both uh both versions of the coupling code and at the end you",
    "start": "1465039",
    "end": "1471200"
  },
  {
    "text": "will see that sixes have been run which means that also my dependencies are set",
    "start": "1471200",
    "end": "1476799"
  },
  {
    "text": "set up correctly as it is including java code java test code and kotlin test code",
    "start": "1476799",
    "end": "1486559"
  },
  {
    "text": "so now it's already running the integration test so yeah we can assume that the unit tests",
    "start": "1486559",
    "end": "1492880"
  },
  {
    "text": "have been run as well let's just i'd like to deliver some proof",
    "start": "1492880",
    "end": "1498840"
  },
  {
    "text": "so in a few minutes it won't oh no it's running after it that's fine as well so as you can see",
    "start": "1498840",
    "end": "1505520"
  },
  {
    "text": "here the six uh tests have been run yeah so java and kotlin tests still",
    "start": "1505520",
    "end": "1511600"
  },
  {
    "text": "running together in the build that's great my hybrid solution is working so",
    "start": "1511600",
    "end": "1518158"
  },
  {
    "text": "the we are now arrived on the fourth step would be to",
    "start": "1519279",
    "end": "1524640"
  },
  {
    "text": "implement a business logic and in the same time i will show you the end",
    "start": "1524640",
    "end": "1530400"
  },
  {
    "text": "result already before migrating my business logic in",
    "start": "1530400",
    "end": "1536400"
  },
  {
    "text": "my spring spring components i will show you the",
    "start": "1536400",
    "end": "1542400"
  },
  {
    "text": "dependencies that i need to do to make spring work with cotton in a proper way",
    "start": "1542400",
    "end": "1548640"
  },
  {
    "text": "let me go to the dependencies section of my pom file i need to include the kotlin",
    "start": "1548640",
    "end": "1554640"
  },
  {
    "text": "reflect dependency because uh kotlin is not really comfortable with reflection so",
    "start": "1554640",
    "end": "1560880"
  },
  {
    "text": "you need a compil a dependency to make that work so this is the part where my",
    "start": "1560880",
    "end": "1567039"
  },
  {
    "text": "presentation has set sometimes the interoperability is a bit awkward you need to add some",
    "start": "1567039",
    "end": "1572320"
  },
  {
    "text": "dependencies to make it all work another thing is that i'm using here",
    "start": "1572320",
    "end": "1578640"
  },
  {
    "text": "a coupling login framework which is a wrapper around glock4j",
    "start": "1578640",
    "end": "1583760"
  },
  {
    "text": "to make the string in interpolation work correctly in a performance point of view",
    "start": "1583760",
    "end": "1591760"
  },
  {
    "text": "let me scroll back i hope i'm not scrolling too fast for you um",
    "start": "1591760",
    "end": "1599520"
  },
  {
    "text": "let's go to the build plugins there we are i remember this very big",
    "start": "1599520",
    "end": "1607600"
  },
  {
    "text": "execution configuration here well here it is the dependencies of my kotlin",
    "start": "1607600",
    "end": "1612799"
  },
  {
    "text": "making plugin i had to add some configuration there first of all i'm accessing",
    "start": "1612799",
    "end": "1618960"
  },
  {
    "text": "the database with my kotlin code with my sorry with spring data which",
    "start": "1618960",
    "end": "1625600"
  },
  {
    "text": "means uh that i need a compiler plugin for a jpa the this one and another one is the",
    "start": "1625600",
    "end": "1633200"
  },
  {
    "text": "dependency of the kotlin maven no arc [Music]",
    "start": "1633200",
    "end": "1638840"
  },
  {
    "text": "library and the reason for that is that spring data is instantiating my",
    "start": "1638840",
    "end": "1645279"
  },
  {
    "text": "java objects as empty objects and then injecting the values from the database into the fields",
    "start": "1645279",
    "end": "1651760"
  },
  {
    "text": "so that means that no arc constructor is needed for the database entities however",
    "start": "1651760",
    "end": "1657840"
  },
  {
    "text": "data classes in kotlin only have full arc constructors so in that regard you need a dependency",
    "start": "1657840",
    "end": "1664559"
  },
  {
    "text": "to do that for you to declare know our constructors and a compiler plugin to be able to inject those values",
    "start": "1664559",
    "end": "1671440"
  },
  {
    "text": "into your entities again a bit awkward",
    "start": "1671440",
    "end": "1676720"
  },
  {
    "text": "now let's go to the code that has been migrated already",
    "start": "1676720",
    "end": "1683360"
  },
  {
    "text": "this is the surface that i've migrated from java to kotlin and let's see how it looks",
    "start": "1683360",
    "end": "1690320"
  },
  {
    "text": "like it's a spring beam so it has a surface annotation and then i need to do something special",
    "start": "1690320",
    "end": "1696960"
  },
  {
    "text": "is to add the open keyword to the class why do i need to do that well classes are final in kotlin",
    "start": "1696960",
    "end": "1704640"
  },
  {
    "text": "spring wants to proxy the classes so final classes are not really working",
    "start": "1704640",
    "end": "1710000"
  },
  {
    "text": "there so you need to declare them open there is a maven plugin that will do that for you i'm not really a fan of that i want",
    "start": "1710000",
    "end": "1716720"
  },
  {
    "text": "people i want to have an explicit code base where my also my teammates understand what is",
    "start": "1716720",
    "end": "1722240"
  },
  {
    "text": "happening there so i'm using the open keyword there i'm using my copying logo",
    "start": "1722240",
    "end": "1728320"
  },
  {
    "text": "then the first method has been is the client here i start with the keyword fun",
    "start": "1728320",
    "end": "1733360"
  },
  {
    "text": "the name of the method the input parameters and the type",
    "start": "1733360",
    "end": "1740240"
  },
  {
    "text": "um the return type is declared over here i start with declaring here a rate",
    "start": "1740240",
    "end": "1746960"
  },
  {
    "text": "entity that's fine uh i do that with the val keyboard there is also a var keyword in kotlin",
    "start": "1746960",
    "end": "1753760"
  },
  {
    "text": "like this with where you indicate that it's a variable which can be mutated with val i indicated some immutable",
    "start": "1753760",
    "end": "1761450"
  },
  {
    "text": "[Music] fields here i'm using string",
    "start": "1761450",
    "end": "1767039"
  },
  {
    "text": "manipulation and that's another awesome feature in kotlin i think is that finally you can",
    "start": "1767039",
    "end": "1772159"
  },
  {
    "text": "be safe how on where the the values are injected",
    "start": "1772159",
    "end": "1777440"
  },
  {
    "text": "into your string especially for logging that's very valuable this logging framework will enable you",
    "start": "1777440",
    "end": "1784960"
  },
  {
    "text": "to do that string installation only when the the logging level is is correct",
    "start": "1784960",
    "end": "1792159"
  },
  {
    "text": "and then let's go to the last line of code um here my uh",
    "start": "1792159",
    "end": "1798720"
  },
  {
    "text": "entity returned by the repository which is an optional is directly mapped",
    "start": "1798720",
    "end": "1804080"
  },
  {
    "text": "towards another entity which is built up by this function and i don't",
    "start": "1804080",
    "end": "1810720"
  },
  {
    "text": "need to use the syntax oh",
    "start": "1810720",
    "end": "1815600"
  },
  {
    "text": "like this which is a bit longer i can just",
    "start": "1817120",
    "end": "1824320"
  },
  {
    "text": "remove the the parameter declaration and use the keyword it which is",
    "start": "1824320",
    "end": "1830640"
  },
  {
    "text": "referring to that's that is the iterators",
    "start": "1830640",
    "end": "1835760"
  },
  {
    "text": "entity you will you can do this the same way for for instance in the",
    "start": "1835760",
    "end": "1843120"
  },
  {
    "text": "second method where i'm returning a collection and where i'm mapping all the elements of the",
    "start": "1843120",
    "end": "1848480"
  },
  {
    "text": "collections to another type of entities i can again use the sk",
    "start": "1848480",
    "end": "1854080"
  },
  {
    "text": "keyword and the biggest difference with java is that i don't need to collect this back to",
    "start": "1854080",
    "end": "1859679"
  },
  {
    "text": "a list or map or whatever collection i want to it will just return a collection right away one thing it says this",
    "start": "1859679",
    "end": "1867200"
  },
  {
    "text": "is either there is a subtitle difference between eager and lazy evaluation",
    "start": "1867200",
    "end": "1872880"
  },
  {
    "text": "to have a lazy evaluation you can use a sequence so that's a big difference with java you",
    "start": "1872880",
    "end": "1878960"
  },
  {
    "text": "need to be aware of that now it will return a sequence instead of a list so something to be conscious there",
    "start": "1878960",
    "end": "1888960"
  },
  {
    "text": "um let me just i see that i have some changes",
    "start": "1889120",
    "end": "1895200"
  },
  {
    "text": "left side to stash it which you now can see if i go to my",
    "start": "1895200",
    "end": "1900399"
  },
  {
    "text": "classes here is that i have migrated my surface before my core logic to kotlin my endpoint here has also been",
    "start": "1900399",
    "end": "1908880"
  },
  {
    "text": "moved it's also a rest controller an upper class using the proper annotations of",
    "start": "1908880",
    "end": "1917519"
  },
  {
    "text": "spring that's fine i'm here using steel spring 2.3.5 with spring boot 2.4.0 i would be able",
    "start": "1917519",
    "end": "1925200"
  },
  {
    "text": "to use here the dsl of spring and spring web",
    "start": "1925200",
    "end": "1931440"
  },
  {
    "text": "but yeah it's not a release version yet so i didn't feel comfortable to do that so it still",
    "start": "1931440",
    "end": "1936799"
  },
  {
    "text": "looks a bit like java actually the only part that is still",
    "start": "1936799",
    "end": "1943039"
  },
  {
    "text": "java like is the repositories here and the application so",
    "start": "1943039",
    "end": "1950720"
  },
  {
    "text": "let's see is if that's uh if now it's running having just java",
    "start": "1951200",
    "end": "1957600"
  },
  {
    "text": "repositories and with the rest of the code base being",
    "start": "1957600",
    "end": "1963440"
  },
  {
    "text": "coupled you can see here that the maven plugin is supplying the jpa plugin",
    "start": "1963440",
    "end": "1970799"
  },
  {
    "text": "and i hope it will turn out fine yeah",
    "start": "1974840",
    "end": "1980640"
  },
  {
    "text": "it's uh the compilation works now let's see if my endpoints haven't",
    "start": "1980640",
    "end": "1985919"
  },
  {
    "text": "changed because my integration test uh yeah well my i still want my endpoints to work right i don't want my",
    "start": "1985919",
    "end": "1993279"
  },
  {
    "text": "clients to have noticed that i'm doing this all at least my integration test worked and",
    "start": "1993279",
    "end": "1999200"
  },
  {
    "text": "my uh for uh unit test work here as well so my validation is it's going well here",
    "start": "1999200",
    "end": "2008000"
  },
  {
    "text": "now last but not least is that i need to",
    "start": "2008159",
    "end": "2014720"
  },
  {
    "text": "migrate my spring configuration the last part is that i want to rewrite my uh spring",
    "start": "2014960",
    "end": "2022240"
  },
  {
    "text": "boot application well it's still an open class but with no declaration into the class that's",
    "start": "2022240",
    "end": "2028399"
  },
  {
    "text": "right important that's fully acceptable and my booty function is lying in the same file of the",
    "start": "2028399",
    "end": "2034080"
  },
  {
    "text": "application and a declaration but it's a separate method on file level and not in the scope of",
    "start": "2034080",
    "end": "2041200"
  },
  {
    "text": "the class and uh this is how then the spring data",
    "start": "2041200",
    "end": "2047519"
  },
  {
    "text": "reports stories look like it's a repos it's annotated with repository",
    "start": "2047519",
    "end": "2052560"
  },
  {
    "text": "it's just an interface uh inheriting from the thread repository instead of using the keyword inherits i",
    "start": "2052560",
    "end": "2059679"
  },
  {
    "text": "can just use a semicolon and then it will work fine",
    "start": "2059679",
    "end": "2065280"
  },
  {
    "text": "so yeah let's have a look is it still working the point that i",
    "start": "2065280",
    "end": "2072720"
  },
  {
    "text": "want to prove here is whether my boots the booting of the application still works because this is the part",
    "start": "2072720",
    "end": "2078079"
  },
  {
    "text": "that i have migrated here while it's running i can show you the entities closet that look like this",
    "start": "2078079",
    "end": "2085760"
  },
  {
    "text": "in kotlin it's i'm using their data class again because i'm right with that and",
    "start": "2085760",
    "end": "2092638"
  },
  {
    "text": "then in the constructor i will just declare the fields the id is available type indicated by",
    "start": "2092639",
    "end": "2098320"
  },
  {
    "text": "question mark and that's it actually um [Music]",
    "start": "2098320",
    "end": "2103920"
  },
  {
    "text": "the build is running now and let's see if the application is",
    "start": "2103920",
    "end": "2111119"
  },
  {
    "text": "starting properly well it looks like it's still a lot of spring logging",
    "start": "2111119",
    "end": "2118800"
  },
  {
    "text": "and i guess we're there yet yes so my integration test worked",
    "start": "2120640",
    "end": "2127119"
  },
  {
    "text": "which is something i wanted to prove to you so i will stop sharing now because we",
    "start": "2127119",
    "end": "2132960"
  },
  {
    "text": "migrated the whole application from java to kotlin and i will come back to my presentation",
    "start": "2132960",
    "end": "2141359"
  },
  {
    "start": "2140000",
    "end": "2160000"
  },
  {
    "text": "so we did the coding so what did we do in recap we set up the dependencies we",
    "start": "2141359",
    "end": "2147680"
  },
  {
    "text": "migrated the java objects we really wrote the unit test we rebuilt",
    "start": "2147680",
    "end": "2152800"
  },
  {
    "text": "the core logic of the application the configuration was rewritten as well so that was a",
    "start": "2152800",
    "end": "2159359"
  },
  {
    "text": "successful migration so welcome on board everyone you just rewrote your application from java to kotlin",
    "start": "2159359",
    "end": "2167200"
  },
  {
    "start": "2160000",
    "end": "2185000"
  },
  {
    "text": "that's it so if there are any questions please share",
    "start": "2167920",
    "end": "2173839"
  }
]