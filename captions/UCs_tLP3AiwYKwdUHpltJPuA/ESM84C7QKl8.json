[
  {
    "text": "well thank you for that um I didn't pay them a whole lot that was really cheap it cost me like 20 bucks or something for those reviews so",
    "start": "6839",
    "end": "13200"
  },
  {
    "text": "if you ever need them I've got some contacts um also everyone should just look next to",
    "start": "13200",
    "end": "18600"
  },
  {
    "text": "them on the chair there should be like a little green pouch of lollies or something there you can't eat them now but after the session you can so a",
    "start": "18600",
    "end": "25800"
  },
  {
    "text": "little tip from is it Katarina or Katarina anyway um all right I'll stop my lame jokes",
    "start": "25800",
    "end": "33439"
  },
  {
    "text": "okay me um my name is Matt flows thanks for the introduction I am a principal product",
    "start": "33600",
    "end": "39120"
  },
  {
    "text": "manager at smart bear um I did co-found Pack Flow which is a startup we'll be talking a little bit",
    "start": "39120",
    "end": "45180"
  },
  {
    "text": "about today my other startup if it was jobs find you is that what you're looking at yeah I didn't go very far",
    "start": "45180",
    "end": "50700"
  },
  {
    "text": "learned lots of lessons there oh terrible but I'm also co-maintainer of pact which",
    "start": "50700",
    "end": "57300"
  },
  {
    "text": "is an open source tool um and Pack Flow was a was a commercial offering around that that was acquired",
    "start": "57300",
    "end": "62760"
  },
  {
    "text": "by smart bear back in in April and we're part of that family now",
    "start": "62760",
    "end": "67519"
  },
  {
    "text": "I'm gonna start refusing this article from a long time ago and I think you know I think it's",
    "start": "68159",
    "end": "73320"
  },
  {
    "text": "really appropriate to be at this conference because you know Dave and the our team have been very supportive of this of this tool ever since it was",
    "start": "73320",
    "end": "79200"
  },
  {
    "text": "started I think there's been three or four talks there but the idea of consumer-driven contracts",
    "start": "79200",
    "end": "85860"
  },
  {
    "text": "um it was about this time 16 years ago that a guy named Ian Robinson uh penned this article on",
    "start": "85860",
    "end": "92880"
  },
  {
    "text": "Martin Fowler's blog and it was called consumer driven Contracting is basically",
    "start": "92880",
    "end": "98159"
  },
  {
    "text": "talking about a time where or I guess you know an old architectural landscape",
    "start": "98159",
    "end": "103500"
  },
  {
    "text": "where you know the state of the art was this solar soap based you know architecture",
    "start": "103500",
    "end": "110340"
  },
  {
    "text": "and you know this this just new or this more common way of doing things wasn't",
    "start": "110340",
    "end": "116159"
  },
  {
    "text": "living up to the standards or that it had purported to solve right the problems I was trying to solve and I'll read you a couple of quotes",
    "start": "116159",
    "end": "122340"
  },
  {
    "text": "just because I think it's really apt to set this whole scene up he said Chief among the benefits of",
    "start": "122340",
    "end": "127380"
  },
  {
    "text": "service enabling and Enterprises application landscape are increased organizational agility reduced overall",
    "start": "127380",
    "end": "133620"
  },
  {
    "text": "cost of implementing change an SOA increases organizational agility by placing high value business functions",
    "start": "133620",
    "end": "139920"
  },
  {
    "text": "you know in discrete usable services and then connecting and orchestrating these services to satisfy Core Business",
    "start": "139920",
    "end": "145800"
  },
  {
    "text": "processes and it reduces the cost of Change by reducing the dependencies between those services and allowing them to be rapidly",
    "start": "145800",
    "end": "151739"
  },
  {
    "text": "recomposed you know and tuned in response to unplanned events which I think just sounds really",
    "start": "151739",
    "end": "157860"
  },
  {
    "text": "familiar especially after the talk of serverless as well today but he does continue he says a business",
    "start": "157860",
    "end": "164340"
  },
  {
    "text": "can only fully realize these benefits if the SOA enables sorry enable services to",
    "start": "164340",
    "end": "170099"
  },
  {
    "text": "evolve independently of one another and to increase those Service Independence we build services that share contracts",
    "start": "170099",
    "end": "176879"
  },
  {
    "text": "as opposed to types or objects contracts here he's referring to you in this case wisdell back in the soap days",
    "start": "176879",
    "end": "183660"
  },
  {
    "text": "and xsd and XML and all those constituents as part of that that technology at the time and he calls us",
    "start": "183660",
    "end": "189180"
  },
  {
    "text": "provider contracts right because they only reflect what the provider sees of the world not not everything else",
    "start": "189180",
    "end": "195120"
  },
  {
    "text": "and he goes and described many of the reasons to why these benefits weren't fully realized in practice and he talks",
    "start": "195120",
    "end": "200400"
  },
  {
    "text": "about hidden coupling and versioning and a whole bunch of things in this space that that means they couldn't get that",
    "start": "200400",
    "end": "205560"
  },
  {
    "text": "any talks he goes on to talk about this alternative strategy which is what he called consumer-driven contracts and how",
    "start": "205560",
    "end": "211980"
  },
  {
    "text": "it can help you evolve your services independently over time you know let's fast forward you know a",
    "start": "211980",
    "end": "217860"
  },
  {
    "text": "generation of technology and restful services are really the new the new thing right and microservices are becoming this",
    "start": "217860",
    "end": "223860"
  },
  {
    "text": "you know fast becoming the architecture and however it of course had challenges as well",
    "start": "223860",
    "end": "229920"
  },
  {
    "text": "and so in 2014 at Yao this conference in Melbourne my colleague alongside Evan botcher and I think one of the speaker",
    "start": "229920",
    "end": "236040"
  },
  {
    "text": "as well unveiled a tool called Pact now pact was was built in 2013 at",
    "start": "236040",
    "end": "242239"
  },
  {
    "text": "realestate.com.eu where they were embarking on this microservices journey and were um you know I guess enjoying",
    "start": "242239",
    "end": "248519"
  },
  {
    "text": "the benefits of this this new architectural approach but we're finding it very difficult to test and release that system and they realize the",
    "start": "248519",
    "end": "255599"
  },
  {
    "text": "insights from this article actually applied equally to restful Services as equally as it does to as it did to to",
    "start": "255599",
    "end": "262260"
  },
  {
    "text": "soap and they subsequently open source that tool and and made that available to the world and that's kind of where my story",
    "start": "262260",
    "end": "268440"
  },
  {
    "text": "with this with pact begins it was 2014 it was my first Consulting client at my previous job",
    "start": "268440",
    "end": "274020"
  },
  {
    "text": "and I saw a packed rolled out and I was part of this rollout on a project there and it was it was just transformational",
    "start": "274020",
    "end": "279540"
  },
  {
    "text": "and I got really excited I got involved and and became a contributor at that point in time",
    "start": "279540",
    "end": "285500"
  },
  {
    "text": "so you know as a consultant I was very lucky I got to work at a lot of Australia's largest well-known companies",
    "start": "285780",
    "end": "291840"
  },
  {
    "text": "and sort of see their architectures evolve over time and you know I guess there's been a lot",
    "start": "291840",
    "end": "298199"
  },
  {
    "text": "of technological change in just my career which is 15 years or so and I've seen soap architectures on SOA",
    "start": "298199",
    "end": "304500"
  },
  {
    "text": "to rest and microservices you know to the rise of public cloud um you know iot event driven event",
    "start": "304500",
    "end": "310860"
  },
  {
    "text": "streaming all this and of course serverless architectures as well and I found in many of these organizations",
    "start": "310860",
    "end": "316440"
  },
  {
    "text": "that the practices and principles from contract testing Still Supply still applies to those types of architectures",
    "start": "316440",
    "end": "323300"
  },
  {
    "text": "however you know we would and we'll roll out contract testing I guess in a lot of these projects as well and during the",
    "start": "323300",
    "end": "330780"
  },
  {
    "text": "rollout however I'd often be on the other end of some snarky comment saying if we just used over here",
    "start": "330780",
    "end": "338580"
  },
  {
    "text": "if we just used insert some blank technology then we wouldn't need contract testing right",
    "start": "338580",
    "end": "344759"
  },
  {
    "text": "you know is the rest the problem is what he's trying to say is it true and so today we're going to examine this statement we're going to see is it rest",
    "start": "344759",
    "end": "352380"
  },
  {
    "text": "really the problem um and could we save ourselves a trouble of having to write contract tests for",
    "start": "352380",
    "end": "357960"
  },
  {
    "text": "example by just using you know more Superior technology we'll look at what contract testing is",
    "start": "357960",
    "end": "365340"
  },
  {
    "text": "what problem it solves and and why it exists and then we'll also look to see if history is repeating itself you know are",
    "start": "365340",
    "end": "371460"
  },
  {
    "text": "these newer Technologies actually solving the problem or are they still are they really not and they're solving other challenges and other problems we",
    "start": "371460",
    "end": "377220"
  },
  {
    "text": "need to solve but they're still having to solve this this exact issue specifically we'll look at three types",
    "start": "377220",
    "end": "382620"
  },
  {
    "text": "or three classes of Technologies we'll look at specifications so things like OAS or async and of course soap we'll",
    "start": "382620",
    "end": "389520"
  },
  {
    "text": "look at idls so things like Proto Buffs and Avro and Thrift and then we'll look at graphql which is",
    "start": "389520",
    "end": "395100"
  },
  {
    "text": "kind of in between and of course there's other Technologies as well but by and large all these are definitely",
    "start": "395100",
    "end": "401039"
  },
  {
    "text": "the most um common suggestions from these other Consultants maybe who who suggest that",
    "start": "401039",
    "end": "407400"
  },
  {
    "text": "the contract testing you know could be replaced and of course we'll also see how pact",
    "start": "407400",
    "end": "412560"
  },
  {
    "text": "has evolved over the course of eight or nine years since we since we unveiled that",
    "start": "412560",
    "end": "418919"
  },
  {
    "text": "so I'm clicking on the keyboard I've got a thing okay so let's start with um modern architecture and and try to understand",
    "start": "418919",
    "end": "425039"
  },
  {
    "text": "why contract testing came to be and and how it you know in which context it operates",
    "start": "425039",
    "end": "431400"
  },
  {
    "text": "and I want to start with a customer quote here and this is this is a Pack Flow Prospect from from last year or so",
    "start": "431400",
    "end": "437940"
  },
  {
    "text": "and I think it really helps set the scene for the kinds of challenges that we we face as engineering leaders today",
    "start": "437940",
    "end": "443699"
  },
  {
    "text": "and you can sort of read through the quote in the background but I won't particularly listen I won't say his name but I will call him Bill and",
    "start": "443699",
    "end": "450240"
  },
  {
    "text": "Bill is in charge of about 40 teams in a large banking Institution",
    "start": "450240",
    "end": "455400"
  },
  {
    "text": "and he's you know you can see here he's looking for a way to test and release",
    "start": "455400",
    "end": "460740"
  },
  {
    "text": "what is very much a complicated environment you can see he's working inside a volatile set of integrated",
    "start": "460740",
    "end": "465780"
  },
  {
    "text": "environments he's finding it really challenging to give themselves confidence he's looking at things like contract testing to help him solve that",
    "start": "465780",
    "end": "472440"
  },
  {
    "text": "and he says between direct calls to restful or graphql apis or messages on",
    "start": "472440",
    "end": "477599"
  },
  {
    "text": "an event bridge and and Kafka and third-party Integrations he's like it's just difficult to manage",
    "start": "477599",
    "end": "483180"
  },
  {
    "text": "and I think what you can take away from this is that you know this is what we're facing today it's very complex large",
    "start": "483180",
    "end": "488400"
  },
  {
    "text": "architectures distribute architectures you know and really honestly when I spoke to this guy I felt like a psychologist and he was like lying on a",
    "start": "488400",
    "end": "494940"
  },
  {
    "text": "couch psychiatrist and he was just kind of just had to get it off his chest and I just felt like I had to somehow",
    "start": "494940",
    "end": "500580"
  },
  {
    "text": "console him and I felt like so probably not going to help you but um yeah and I really couldn't reassure",
    "start": "500580",
    "end": "507419"
  },
  {
    "text": "him but but I did obviously um and if this sounds a bit like what you",
    "start": "507419",
    "end": "512940"
  },
  {
    "text": "you know you guys are up to or your your organization is or architecture is you're not alone",
    "start": "512940",
    "end": "518279"
  },
  {
    "text": "um research from from Smart Bears state of quality report recently",
    "start": "518279",
    "end": "523800"
  },
  {
    "text": "highlights a whole bunch of issues here so the first one is we see that API grows from microservices is going to be",
    "start": "523800",
    "end": "529200"
  },
  {
    "text": "over the next few years the largest source of apis going forward so 61 said",
    "start": "529200",
    "end": "534480"
  },
  {
    "text": "that and 81 said they operate in a multi-protocol environment and 60 of thereabouts so they do three",
    "start": "534480",
    "end": "541500"
  },
  {
    "text": "or more protocols similar story from Postman state of API report",
    "start": "541500",
    "end": "547260"
  },
  {
    "text": "where in addition to that they found that internal micro services are being created so not for external use but",
    "start": "547260",
    "end": "553800"
  },
  {
    "text": "literally for sharing data and use cases internally which I think really reflects that",
    "start": "553800",
    "end": "559140"
  },
  {
    "text": "that shift you know assembly we've had with public apis over the last decade or so where there was a big shift to start",
    "start": "559140",
    "end": "564180"
  },
  {
    "text": "producing public apis to put you know to to power ecosystems externally I think we're seeing that same shift internally",
    "start": "564180",
    "end": "570360"
  },
  {
    "text": "for internal microservices so there's a lot going on beneath the",
    "start": "570360",
    "end": "575399"
  },
  {
    "text": "iceberg maybe maybe there's another mullet version of that",
    "start": "575399",
    "end": "580459"
  },
  {
    "text": "um of course so there are some challenges and both reports show that there's there's a big issue with experience or skills around building",
    "start": "580920",
    "end": "587459"
  },
  {
    "text": "micro Services as well as um the complexity of those I think about 35 said the complexity of services were",
    "start": "587459",
    "end": "593580"
  },
  {
    "text": "starting to become a challenge for them and one in two said the increasing demands on speed of delivery as well as",
    "start": "593580",
    "end": "600300"
  },
  {
    "text": "a limited time to actually do that testing is becoming an issue so cycle times and you know lead time for change",
    "start": "600300",
    "end": "606720"
  },
  {
    "text": "are becoming issues and what I found really interesting was that the mature organizations",
    "start": "606720",
    "end": "612240"
  },
  {
    "text": "were the ones who are feeling this the most so the ones who reported already being pretty mature with writing apis",
    "start": "612240",
    "end": "618000"
  },
  {
    "text": "were the ones who are experiencing the most pain when it comes to that which might sound a little bit counter-intuitive but I do think",
    "start": "618000",
    "end": "625140"
  },
  {
    "text": "the reasons for this were actually pretty well known and one of the reasons for this is kind",
    "start": "625140",
    "end": "630300"
  },
  {
    "text": "of how we test microservices today and I guess why it doesn't scale and the",
    "start": "630300",
    "end": "636180"
  },
  {
    "text": "way most people do this or most organizations do this is what they call what we call end-to-end Integrated tests",
    "start": "636180",
    "end": "641880"
  },
  {
    "text": "so what that basically is is involves deploying everything you know whole application stack into it into a staging",
    "start": "641880",
    "end": "647880"
  },
  {
    "text": "environment which we just heard about right and then running a battery of tests right through the whole through the whole thing and of course requests",
    "start": "647880",
    "end": "654360"
  },
  {
    "text": "have to pass through all the different layers you know send emails talk to systems whatever it is right and that",
    "start": "654360",
    "end": "660660"
  },
  {
    "text": "takes time and but if you get to the end of it you're going to feel pretty confident your system is working as expected right because you've tested the",
    "start": "660660",
    "end": "666120"
  },
  {
    "text": "thing hopefully um of course it comes with a bunch of downsides and one of those downsides is that this kind of testing is slow it's",
    "start": "666120",
    "end": "673920"
  },
  {
    "text": "very fragile so it just takes you one element of this test setup for it to all",
    "start": "673920",
    "end": "678959"
  },
  {
    "text": "fall apart with the wrong data you might have had the wrong config in a test environment Joe might have walked past the CI server when it was running and",
    "start": "678959",
    "end": "685140"
  },
  {
    "text": "that just you know this is the kind of flakiness that comes in these kinds of tests right um they're hard to debug so when",
    "start": "685140",
    "end": "691200"
  },
  {
    "text": "something falls apart let's say a fell apart in microservice B well you're",
    "start": "691200",
    "end": "696480"
  },
  {
    "text": "going to use your encapsulation here and information hiding so that error is not going to Bubble Up to the inside outside so someone's gonna have to go debugging",
    "start": "696480",
    "end": "702899"
  },
  {
    "text": "through Splunk or Sumo or what have you to try and find out what went wrong you need these production level debugging",
    "start": "702899",
    "end": "708120"
  },
  {
    "text": "skills to fix this that obviously takes time and of course if you test everything this way you",
    "start": "708120",
    "end": "713700"
  },
  {
    "text": "deploy everything into an environment and test it this way then you have to deploy everything together and if you do that you probably don't get the benefits",
    "start": "713700",
    "end": "720240"
  },
  {
    "text": "of microservices you've probably got what we call a distributed monolith and the end result of all this is you",
    "start": "720240",
    "end": "727440"
  },
  {
    "text": "have teams waiting on other teams and as soon as you have that you have cues and we know from agile theory in theory",
    "start": "727440",
    "end": "732480"
  },
  {
    "text": "queuing is going to cause all kinds of problems in terms of Team velocity",
    "start": "732480",
    "end": "737940"
  },
  {
    "text": "and so what happens is as you you know incrementally add teams and applications",
    "start": "737940",
    "end": "743459"
  },
  {
    "text": "and and people into your ecosystem evolve it over time linearly you get a",
    "start": "743459",
    "end": "748560"
  },
  {
    "text": "non-linear response to things like or the cost complexity time or number of environments",
    "start": "748560",
    "end": "754560"
  },
  {
    "text": "build time the risk associated with change and develop idle time",
    "start": "754560",
    "end": "760440"
  },
  {
    "text": "and you can see why Bill's having such a hard time because he's got to 40 teams and however many hundreds of components",
    "start": "760440",
    "end": "765660"
  },
  {
    "text": "and this is such a large gap there at the end of that graph it's just it's got to a point where it's all just too hard",
    "start": "765660",
    "end": "771240"
  },
  {
    "text": "to manage and the systems are falling apart and so what we would say he's got is a",
    "start": "771240",
    "end": "778500"
  },
  {
    "text": "very unbalanced test pyramid I'm sure you're all familiar with the test pyramid things at the top give you",
    "start": "778500",
    "end": "783899"
  },
  {
    "text": "higher confidence but they come at a higher cost and higher fragility and the things at bottom have give you",
    "start": "783899",
    "end": "790019"
  },
  {
    "text": "less confidence in terms of the overall system but they're much they're by much faster they're much cheaper they're much more reliable so you want to try and",
    "start": "790019",
    "end": "796139"
  },
  {
    "text": "find some balance is the point here but what we find is the end-to-end testers took occupy too much of the pyramid so",
    "start": "796139",
    "end": "802019"
  },
  {
    "text": "it's really kind of upside down it's poorly weighted and what this means is we don't have the agility that we we",
    "start": "802019",
    "end": "808200"
  },
  {
    "text": "would like this kind of over investment reduces that ability agility and",
    "start": "808200",
    "end": "814019"
  },
  {
    "text": "increases you know the overall cost of software so paradoxically the architecture that's",
    "start": "814019",
    "end": "819839"
  },
  {
    "text": "supposed to actually give us more freedom will make us more Nimble cost us cost us less make it easy for us to",
    "start": "819839",
    "end": "826380"
  },
  {
    "text": "change is actually making a significantly less Nimble with every single node that we add into the system",
    "start": "826380",
    "end": "833279"
  },
  {
    "text": "and so one of the solutions to this is using contract testing and this is where that comes in so contract testing is an alternative",
    "start": "833279",
    "end": "840420"
  },
  {
    "text": "approach to testing the API communication paths between systems it's not a functional test but it's about",
    "start": "840420",
    "end": "845760"
  },
  {
    "text": "making sure systems can communicate effectively to one another and really what we do is we look at the",
    "start": "845760",
    "end": "851100"
  },
  {
    "text": "integration points you look at an architecture diagram you find the arrows and that's what contract testing aims to solve",
    "start": "851100",
    "end": "857519"
  },
  {
    "text": "and the way it works is essentially you create a unit test on the consumer side and you mock out the back end you run",
    "start": "857519",
    "end": "863519"
  },
  {
    "text": "your test and you turn that into a contract but later on we're going to verify that those mocks are actually real by testing it against the real",
    "start": "863519",
    "end": "869459"
  },
  {
    "text": "provider and we're going to go through that in just a second but what that means is it's much much simpler right you're just testing single integration",
    "start": "869459",
    "end": "875160"
  },
  {
    "text": "point at a time you don't need to deploy into dedicated test environments you can get fast reliable feedback and we get",
    "start": "875160",
    "end": "881760"
  },
  {
    "text": "tests at scale much more linearly and of course because we're testing things independently we can deploy them independently as well",
    "start": "881760",
    "end": "889399"
  },
  {
    "text": "the way it works is we still want to get this benefit of fast reliable deterministic tests",
    "start": "889980",
    "end": "895680"
  },
  {
    "text": "but we don't want the downside to that of course if we're using mocks well mocks can drift from reality which means",
    "start": "895680",
    "end": "901019"
  },
  {
    "text": "that we can't trust them and so that's why we do things like end-to-end tests to validate that our mocks are actually correct right we have these different",
    "start": "901019",
    "end": "907820"
  },
  {
    "text": "types of tests well with contract testing we can we can try to have our cake and eat it too",
    "start": "907820",
    "end": "912959"
  },
  {
    "text": "so what we do is we have two separate unit tests on either side of an integration point and we",
    "start": "912959",
    "end": "918540"
  },
  {
    "text": "now yeah we write the test against a mock but what we do is we serialize that mock essentially into a contract that",
    "start": "918540",
    "end": "924660"
  },
  {
    "text": "captures all the interactions that this consumer needs of a given API and that",
    "start": "924660",
    "end": "929880"
  },
  {
    "text": "that creates our contract which we share and there's various ways to do to do that which we'll talk about in a minute",
    "start": "929880",
    "end": "935880"
  },
  {
    "text": "and then on the flip side of this once the content has been shared we can pull this back down and provide aside use",
    "start": "935880",
    "end": "941279"
  },
  {
    "text": "this information and now we know what all of our consumers are doing with us or need from us and we can replay them against you know the provider and if a",
    "start": "941279",
    "end": "948480"
  },
  {
    "text": "provider responds as expected we now know that there's two Community those two systems are able to communicate",
    "start": "948480",
    "end": "953699"
  },
  {
    "text": "correctly uh obviously pact is an example of a",
    "start": "953699",
    "end": "960899"
  },
  {
    "text": "tool that implements this this framework we won't go too much to this slide but that was kind of the problem it tried to",
    "start": "960899",
    "end": "966360"
  },
  {
    "text": "solve essentially you know eight years ago obviously obviously it's evolved since then um but it's primarily it's used in",
    "start": "966360",
    "end": "972360"
  },
  {
    "text": "things like JavaScript web applications so View and angular and react mobile services service and apis restful",
    "start": "972360",
    "end": "978420"
  },
  {
    "text": "services mq and all these kinds of things so",
    "start": "978420",
    "end": "984420"
  },
  {
    "text": "let's look at some of the key ingredients of a Pac test because it's going to be really important for us then compared to some of these newer",
    "start": "984420",
    "end": "990300"
  },
  {
    "text": "Technologies to see if they're going to be able to help us so here's the ingredients for Pac test",
    "start": "990300",
    "end": "995459"
  },
  {
    "text": "we're going to go for this kind of learn by line quickly the first key element is we have a",
    "start": "995459",
    "end": "1000680"
  },
  {
    "text": "scenario for this so it's kind of a bdds esque kind of setup we're going to give the scenario a name in this case a",
    "start": "1000680",
    "end": "1006800"
  },
  {
    "text": "request to get all the open orders we also specify the preconditions for this test to actually be able to",
    "start": "1006800",
    "end": "1011899"
  },
  {
    "text": "function later on so in this case the precondition is that there are orders to be fulfilled critically we don't specify",
    "start": "1011899",
    "end": "1017779"
  },
  {
    "text": "how that needs to get set up we just specify that it is an important state in the system and we leave it up to the",
    "start": "1017779",
    "end": "1023540"
  },
  {
    "text": "provider later on to work out how they want to do that so it's no it's still some level of coupling but it's way less",
    "start": "1023540",
    "end": "1028579"
  },
  {
    "text": "couple than something like an end-to-end test it would literally need to First create all the orders to be fulfilled",
    "start": "1028579",
    "end": "1033740"
  },
  {
    "text": "and then check later on if they can be fulfilled and do that we then set up the mock so in this case",
    "start": "1033740",
    "end": "1040459"
  },
  {
    "text": "we're mocking out at an endpoint that responds to a get verb and it will return back you know some orders",
    "start": "1040459",
    "end": "1046640"
  },
  {
    "text": "and then of course the really important part is we're actually going to unit test this we're going to write a unit test for this piece of code that makes a",
    "start": "1046640",
    "end": "1052160"
  },
  {
    "text": "call to get the orders and then checks that you know the way the internal model works you know it corrects it all",
    "start": "1052160",
    "end": "1058880"
  },
  {
    "text": "I've got more time than that um and so the goal here is not testing the API provider it's about testing the",
    "start": "1058880",
    "end": "1065120"
  },
  {
    "text": "API client and we call this type of testing specification by example and this is really important",
    "start": "1065120",
    "end": "1071480"
  },
  {
    "text": "if the client doesn't do what it's supposed to do um you know it fails it's a mock it's",
    "start": "1071480",
    "end": "1076700"
  },
  {
    "text": "not a stub and again this is important because we want to be able to create unit tests that are very specific that",
    "start": "1076700",
    "end": "1082039"
  },
  {
    "text": "are targeted and precise as opposed to Broad brush tests that all start to overlap and become very unwieldy to",
    "start": "1082039",
    "end": "1088820"
  },
  {
    "text": "manage once it passes of course we get a Json file in the case of pact and that",
    "start": "1088820",
    "end": "1093919"
  },
  {
    "text": "captures all these Integrations and this is going to be the critical artifact that's going to get shared and used around to be able to help make sure",
    "start": "1093919",
    "end": "1099380"
  },
  {
    "text": "things all work together we can share this thing uh in a case of",
    "start": "1099380",
    "end": "1104539"
  },
  {
    "text": "pact through our packed broker that is going to you know contain you know visualization of the contract but it's",
    "start": "1104539",
    "end": "1110000"
  },
  {
    "text": "going to contain the integration point the test it has and we can also capture metadata so things like diversion or",
    "start": "1110000",
    "end": "1115940"
  },
  {
    "text": "what environment it's been deployed to which will become important later on when it comes to evolving this",
    "start": "1115940",
    "end": "1122720"
  },
  {
    "text": "on the provider side we talked about this before it's going to pull these contracts back down from the broker now",
    "start": "1122720",
    "end": "1128059"
  },
  {
    "text": "we know all the consumers we need to satisfy to get our job done and we're going to practical stand-in for the consumer now replay those interactions",
    "start": "1128059",
    "end": "1134780"
  },
  {
    "text": "against the provider and if it responds as accordingly as expected or as according to the contract we know that",
    "start": "1134780",
    "end": "1142220"
  },
  {
    "text": "the integration is good we know it's safe and again this information is going to go back up to the broker we can see",
    "start": "1142220",
    "end": "1148880"
  },
  {
    "text": "which versions of which applications are compatible with one another so you know version ac1 blah blah blah",
    "start": "1148880",
    "end": "1155240"
  },
  {
    "text": "is compatible and this version which annoying on this diagram has the same version is incompatible right so now we",
    "start": "1155240",
    "end": "1160700"
  },
  {
    "text": "can start to evolve our system safely knowing which which things are and are not compatible",
    "start": "1160700",
    "end": "1166280"
  },
  {
    "text": "and lastly you know we can build up graphs and diagrams and things we know what the ecosystem is we're testing together and we know what the visible",
    "start": "1166280",
    "end": "1173059"
  },
  {
    "text": "surface area has been used foreign",
    "start": "1173059",
    "end": "1180039"
  },
  {
    "text": "hopefully we believe that argument we really need to reduce significant reduce our Reliance on end-to-end testing to be",
    "start": "1181460",
    "end": "1188120"
  },
  {
    "text": "able to be um agile it doesn't mean there's not a place for end-to-end testing doesn't mean it's not useful it's not",
    "start": "1188120",
    "end": "1193400"
  },
  {
    "text": "universally bad or good it just is what it is it's expensive and it can do a certain things really well if we can",
    "start": "1193400",
    "end": "1199160"
  },
  {
    "text": "just reduce the size of the pyramid and to shift those further up it means we can get a lot more feedback far left in",
    "start": "1199160",
    "end": "1206840"
  },
  {
    "text": "the cycle than we are getting currently right now far right of the stlc and we",
    "start": "1206840",
    "end": "1212120"
  },
  {
    "text": "can do that by adding contract tests to replace the kinds of end-to-end tests so we're just trying to work if the apis",
    "start": "1212120",
    "end": "1217280"
  },
  {
    "text": "can communicate and I'd also encourage just a side note in my experience most",
    "start": "1217280",
    "end": "1222440"
  },
  {
    "text": "end-to-end tests that I see tend to do a lot of things and they can probably just be pulled out and put into standard",
    "start": "1222440",
    "end": "1227960"
  },
  {
    "text": "integration test or functional test of those systems and usually those two things alone can significantly speed up",
    "start": "1227960",
    "end": "1233360"
  },
  {
    "text": "your your pipeline",
    "start": "1233360",
    "end": "1236919"
  },
  {
    "text": "I've gone there okay did something okay so now we've got",
    "start": "1242120",
    "end": "1247580"
  },
  {
    "text": "a grasp of kind of the problem and what pact is trying to do and how it solves things let's return back to that original hand waving argument",
    "start": "1247580",
    "end": "1254299"
  },
  {
    "text": "um from my Consulting consultant interlocutor and ask the question is rest really the problem and really could",
    "start": "1254299",
    "end": "1260600"
  },
  {
    "text": "we save ourselves a trouble by using some more sufficiently advanced technology",
    "start": "1260600",
    "end": "1267799"
  },
  {
    "text": "we'll start with open API and and other specifications because this is probably familiar to this audience but also you",
    "start": "1267799",
    "end": "1274760"
  },
  {
    "text": "know a very common argument and it also applies to things like async API and other emerging Tech",
    "start": "1274760",
    "end": "1281380"
  },
  {
    "text": "the way specifications aim to solve this problem and for those who are familiar with them",
    "start": "1281600",
    "end": "1286640"
  },
  {
    "text": "specifications are basically a document usually that both human and a computer can read or the machine readable and",
    "start": "1286640",
    "end": "1293000"
  },
  {
    "text": "they might be domain specifics on the case of OAS you know it's a domain it's an API specific specification",
    "start": "1293000",
    "end": "1299120"
  },
  {
    "text": "in this case it uses Json schema which will basically Define the kinds of inputs and it outputs an API can have so",
    "start": "1299120",
    "end": "1305000"
  },
  {
    "text": "given this shape of data this is the constraints around it and of course because it's machine readable we can use that to our",
    "start": "1305000",
    "end": "1311480"
  },
  {
    "text": "advantage to generate either client code or server code or both and so the obvious question here is you",
    "start": "1311480",
    "end": "1317659"
  },
  {
    "text": "know if we can generate code from specifications how are we ever going to drift are we guaranteed to",
    "start": "1317659",
    "end": "1323419"
  },
  {
    "text": "always have a working system and of course the answer is no and if you're at least as old as I am and",
    "start": "1323419",
    "end": "1330500"
  },
  {
    "text": "you've experienced soap before then you probably have um seen that you know you had all the same ingredients had a specification",
    "start": "1330500",
    "end": "1336140"
  },
  {
    "text": "which was a whistle it had a data format or called XML and xsds to as a schema",
    "start": "1336140",
    "end": "1341539"
  },
  {
    "text": "and we still had the problem we still could generate code but it was still not solve this problem and",
    "start": "1341539",
    "end": "1347179"
  },
  {
    "text": "to be fair even the rest does have a lot better principles built into it it doesn't it still still suffers the same",
    "start": "1347179",
    "end": "1353120"
  },
  {
    "text": "kind of thing the issue is that schemers are kind of abstract and so even Json scheme even",
    "start": "1353120",
    "end": "1359240"
  },
  {
    "text": "Jason schema goes on to talk about if you're going to validate any complex data structure you're going to do it at",
    "start": "1359240",
    "end": "1365179"
  },
  {
    "text": "two levels at the structural level and at a semantic level and Jason schema can do the structural level but it can't do",
    "start": "1365179",
    "end": "1371299"
  },
  {
    "text": "the the semantic level a first class application really needs a language would really need to do that so in the",
    "start": "1371299",
    "end": "1377360"
  },
  {
    "text": "case of soap it had schematron and schematron basically use xslt which are head functions right to solve this",
    "start": "1377360",
    "end": "1383000"
  },
  {
    "text": "problem or to help solve the problem um the aphorism that an API is not",
    "start": "1383000",
    "end": "1389419"
  },
  {
    "text": "incompatible with its spec I think sums this up kind of nicely in that it's easy to say an API is compatible with the",
    "start": "1389419",
    "end": "1396320"
  },
  {
    "text": "spec but it's very difficult to say an API implements a spec and the reason for that is the Spec's",
    "start": "1396320",
    "end": "1402500"
  },
  {
    "text": "actually quite abstract despite it sounding like it's not there's a few classes of problems here",
    "start": "1402500",
    "end": "1407720"
  },
  {
    "text": "that kind of highlight how abstract these things are and that that Twitter quote from a colleague of mine might be",
    "start": "1407720",
    "end": "1414260"
  },
  {
    "text": "helpful the first one is with optional and nullable Fields so if your API does have options in it",
    "start": "1414260",
    "end": "1421159"
  },
  {
    "text": "either on the ends on the request or the response side or both you now have in a situation where you're not sure when",
    "start": "1421159",
    "end": "1427220"
  },
  {
    "text": "they're going to be present or not and oftentimes there can be present and not present in different situations so now",
    "start": "1427220",
    "end": "1432919"
  },
  {
    "text": "you have this unspecified behavior that that's there but we don't know how it's going to work and they might be important to certain users combine that",
    "start": "1432919",
    "end": "1439520"
  },
  {
    "text": "with polymorphic endpoints and Status codes and this this issue what you should get gets really complicated you",
    "start": "1439520",
    "end": "1444740"
  },
  {
    "text": "can see how it'll be very difficult programmatically to say have we implemented all this",
    "start": "1444740",
    "end": "1450820"
  },
  {
    "text": "I'll skip past that the second one is loss of sight of the API surface area so if you're using sdks",
    "start": "1452419",
    "end": "1459620"
  },
  {
    "text": "to generate your code especially your client calling code then",
    "start": "1459620",
    "end": "1464900"
  },
  {
    "text": "you have to assume that your consumers are just using your entire surface area right because you don't know what they're actually using they're just",
    "start": "1464900",
    "end": "1470179"
  },
  {
    "text": "being given this SDK and then you for your for all you know they're using nothing or all of it but you can't tell unless you look at logs",
    "start": "1470179",
    "end": "1476659"
  },
  {
    "text": "or something and so this means you need a mechanism for versioning and to evolve things safely so usually sorry I said",
    "start": "1476659",
    "end": "1483860"
  },
  {
    "text": "Evolution but I meant versioning we'll talk about versioning in just one second but versioning is a standard approach to this evolution",
    "start": "1483860",
    "end": "1490820"
  },
  {
    "text": "and the last one is is around sdks themselves I was talking to one of our solution consultants in Europe and he",
    "start": "1490820",
    "end": "1497120"
  },
  {
    "text": "works with some of the world's largest open API out so I go customers and Swagger Hub customers and he told me",
    "start": "1497120",
    "end": "1502340"
  },
  {
    "text": "that about 90 of the customers who use um code gen will actually only code gen",
    "start": "1502340",
    "end": "1509000"
  },
  {
    "text": "the first time around and then they'll modify the client afterwards and so there's still this opportunity for for",
    "start": "1509000",
    "end": "1514400"
  },
  {
    "text": "drift between what is happening in reality and what they've done in code",
    "start": "1514400",
    "end": "1520059"
  },
  {
    "text": "oh sorry so on versioning very quickly versioning",
    "start": "1520520",
    "end": "1527120"
  },
  {
    "text": "is the most popular strategy for things like OAS as Postman survey shows here",
    "start": "1527120",
    "end": "1532640"
  },
  {
    "text": "the issue with versioning is as a developer I think it's a pain in the butt it's absolute Nightmare and the",
    "start": "1532640",
    "end": "1537980"
  },
  {
    "text": "reason policies you need to build a new service you need to test that new service and then you need to release that new service and then of course you",
    "start": "1537980",
    "end": "1543500"
  },
  {
    "text": "need to maintain that alongside all the other versions indefinitely and then you need to work out all of",
    "start": "1543500",
    "end": "1549260"
  },
  {
    "text": "your consumers who are using that version and over time you need to actually get them off those old versions right and so this all takes",
    "start": "1549260",
    "end": "1554480"
  },
  {
    "text": "communication and collaboration and overhead and really if we could avoid it all together that would just be great",
    "start": "1554480",
    "end": "1561400"
  },
  {
    "text": "okay so let's talk about the second one which is interface definition languages",
    "start": "1562580",
    "end": "1568779"
  },
  {
    "text": "or idls so we're talking about things like protobufs or Thrift or navroe and flat buffers there's a bunch of them and",
    "start": "1569000",
    "end": "1575299"
  },
  {
    "text": "these things are designed they have a bunch of benefits but they're designed with schema evolution in mind so a lot",
    "start": "1575299",
    "end": "1580520"
  },
  {
    "text": "of them actually have schemas built into them so Avro for example when you write to a file system you can actually write the schema with it so when you have a",
    "start": "1580520",
    "end": "1587059"
  },
  {
    "text": "consumer who read it you use a tolerant reader and you can read the data right protobufs has a similar thing built into",
    "start": "1587059",
    "end": "1592520"
  },
  {
    "text": "the wire protocol but they both have these forwards and backwards compatibility built into the protocol",
    "start": "1592520",
    "end": "1597559"
  },
  {
    "text": "itself similar to OAS because it's a it's a machine readable format as well we can",
    "start": "1597559",
    "end": "1603860"
  },
  {
    "text": "generate sdks and we can generate excuse me client code",
    "start": "1603860",
    "end": "1609639"
  },
  {
    "text": "excuse me what have I done here I've got to work out this click it works I've got my other Clicker",
    "start": "1611480",
    "end": "1617240"
  },
  {
    "text": "um if this is the case then why was it that this was literally the number one",
    "start": "1617240",
    "end": "1622340"
  },
  {
    "text": "requested open source feature for packed in our roadmap for about maybe two years and the reason for this is or the answer",
    "start": "1622340",
    "end": "1628580"
  },
  {
    "text": "to this is that colorless green ideas sleep furiously has anyone heard this statement before",
    "start": "1628580",
    "end": "1635000"
  },
  {
    "text": "yep psychology people yeah good no good so this is a quote from the name Chomsky I",
    "start": "1635000",
    "end": "1641779"
  },
  {
    "text": "think 1950 is his dissertation and basically what he's making the point here is that syntactic well-formness doesn't actually mean grammatic you know",
    "start": "1641779",
    "end": "1649760"
  },
  {
    "text": "grammatical well-formness right it's it's a completely grammatically correct statement but it actually is nonsensical",
    "start": "1649760",
    "end": "1655279"
  },
  {
    "text": "it means nothing and so simply being able to communicate is not",
    "start": "1655279",
    "end": "1660380"
  },
  {
    "text": "enough we have to better understand what's actually going on and so it's kind of analogous to TCP right just in HTTP world like just",
    "start": "1660380",
    "end": "1666559"
  },
  {
    "text": "because the bits are making them their way across the wire doesn't mean that the HTTP application could understand what was going on so it's kind of a",
    "start": "1666559",
    "end": "1673039"
  },
  {
    "text": "similar thing here um so the ability for older programmers to be able to parse you know newer data",
    "start": "1673039",
    "end": "1680179"
  },
  {
    "text": "structures and newer programs build up whole Parts older data structures is great except we still need to understand",
    "start": "1680179",
    "end": "1685400"
  },
  {
    "text": "what's actually happening so a really good example of this is let's say we've got an ordering Event Event stream right",
    "start": "1685400",
    "end": "1692179"
  },
  {
    "text": "we've got orders going on to a Kafka topic and we've got a consumer happening on the back of that and it's reading all the orders and it's telling it up based",
    "start": "1692179",
    "end": "1698539"
  },
  {
    "text": "on total right find the total and just telling up the order so we can just get an idea of how much is being ordered",
    "start": "1698539",
    "end": "1704059"
  },
  {
    "text": "every day for example and let's say we needed to change the order message going onto that queue to",
    "start": "1704059",
    "end": "1709940"
  },
  {
    "text": "maybe we'd make the total split the total into multiple fields or we would move into an asset data structure whatever it is total is no longer there",
    "start": "1709940",
    "end": "1717320"
  },
  {
    "text": "just because the consumer can now read that and not explode doesn't mean that total is not an important value right",
    "start": "1717320",
    "end": "1723080"
  },
  {
    "text": "it's still really important so now we're probably going to get you know an incorrect outcome somewhere",
    "start": "1723080",
    "end": "1728840"
  },
  {
    "text": "this gets even worse when you combine it with things like or optional fields",
    "start": "1728840",
    "end": "1735500"
  },
  {
    "text": "so in researching this talk a while ago I spoke with um a guy who worked for a Global Payments",
    "start": "1735500",
    "end": "1741799"
  },
  {
    "text": "company that you would probably all know and they use grpc and product Buffs",
    "start": "1741799",
    "end": "1746960"
  },
  {
    "text": "and he was telling me about this really really weird bug that they ran into where they they put out this new change",
    "start": "1746960",
    "end": "1752900"
  },
  {
    "text": "to a merchant service and this this property would basically added a new property that would say you know enable",
    "start": "1752900",
    "end": "1758120"
  },
  {
    "text": "or disable payments for a merchant so like could you be dispersed as money and what they found was there was these",
    "start": "1758120",
    "end": "1764360"
  },
  {
    "text": "random Merchants being disabled they weren't they weren't being giving any money they were stopped getting payments",
    "start": "1764360",
    "end": "1769460"
  },
  {
    "text": "and after a whole bunch of digging they found that one of the consumers of this service didn't update to you know to",
    "start": "1769460",
    "end": "1775279"
  },
  {
    "text": "improve this and use this new definition so every time it was making a change to update a merchant it was inadvertently",
    "start": "1775279",
    "end": "1780919"
  },
  {
    "text": "disabling the payments for it um it sounds really simple but it was really nefarious to find right because",
    "start": "1780919",
    "end": "1786080"
  },
  {
    "text": "because of this default Behavior it was automatically seeing that value too false and so every time it sent it",
    "start": "1786080",
    "end": "1791360"
  },
  {
    "text": "through it was disabled in these payments and so as you can see it's particularly nefarious it's very hard to find",
    "start": "1791360",
    "end": "1797419"
  },
  {
    "text": "um and it's a good example I think where forwards and backwards incompatibility is is probably not necessarily a good thing I think you'd actually probably",
    "start": "1797419",
    "end": "1803120"
  },
  {
    "text": "prefer an explosion so you'd quickly identify it and nothing bad would have actually happened apart",
    "start": "1803120",
    "end": "1808700"
  },
  {
    "text": "from the system being down presumably um and in the version of three of protobars they've actually gotten rid of",
    "start": "1808700",
    "end": "1815059"
  },
  {
    "text": "required Fields altogether so everything's optional and now you would have server-side validation where you",
    "start": "1815059",
    "end": "1820640"
  },
  {
    "text": "know you'd be you'd still need those things to be required or not in some cases it's going to be useful so you'd put in validation on the server side",
    "start": "1820640",
    "end": "1825799"
  },
  {
    "text": "again you'd now end up with unspecified Behavior where in reality the contract says they're all optional but obviously",
    "start": "1825799",
    "end": "1831919"
  },
  {
    "text": "so in reality they're not all optional but in the specification they are",
    "start": "1831919",
    "end": "1837820"
  },
  {
    "text": "okay so very quickly we just talked about message semantics uh and optionals",
    "start": "1838640",
    "end": "1845179"
  },
  {
    "text": "you still need to think about breaking changes so even with grpc they have these field descriptors and those field descriptors",
    "start": "1845179",
    "end": "1851840"
  },
  {
    "text": "um in theory should be really easy not to change but in reality if you have like",
    "start": "1851840",
    "end": "1857480"
  },
  {
    "text": "Ides and refactoring tools you can actually really easy accidentally refactor an entire system and change the",
    "start": "1857480",
    "end": "1863480"
  },
  {
    "text": "field descriptors and this actually causes very visible braking changes in the case of Proto Buffs over other",
    "start": "1863480",
    "end": "1869179"
  },
  {
    "text": "transports you still need to think about transport safety there as well a lot of these ideals don't have very",
    "start": "1869179",
    "end": "1875419"
  },
  {
    "text": "good type systems there's usually quite abstracts I think of Jason you've got strings and numbers and nulls and whatnot but you don't have things like",
    "start": "1875419",
    "end": "1881659"
  },
  {
    "text": "dates or I think timestamps have been introduced but you don't have this Rich tapestry of types right but you might",
    "start": "1881659",
    "end": "1887000"
  },
  {
    "text": "still need those types um and so you might want to make sure you've got protections around those",
    "start": "1887000",
    "end": "1892399"
  },
  {
    "text": "we talked about a similar problem with with OAS is that if we're using sdks and",
    "start": "1892399",
    "end": "1897440"
  },
  {
    "text": "we lose visibility into real-time real-world client usage and the ability to coordinate those changes is still something you need to",
    "start": "1897440",
    "end": "1903500"
  },
  {
    "text": "think about all right so lastly we'll just briefly talk about graphql and then we'll we'll",
    "start": "1903500",
    "end": "1909559"
  },
  {
    "text": "come back to how we can solve this problem so graphql kind of Builds on some of the things we",
    "start": "1909559",
    "end": "1914779"
  },
  {
    "text": "just talked about particularly around schemas um I think it likes to think of itself as a type system over HTTP it's probably",
    "start": "1914779",
    "end": "1920659"
  },
  {
    "text": "the best way of describing it and that's one of the great benefits I think you know the developer experience around graphql particularly react is one of the",
    "start": "1920659",
    "end": "1927380"
  },
  {
    "text": "main reasons why I think people grow to this type of architecture and particularly around the BFF pattern",
    "start": "1927380",
    "end": "1934159"
  },
  {
    "text": "um it definitely has a better type system than something like product Buffs it also has purportedly built-in",
    "start": "1934159",
    "end": "1940399"
  },
  {
    "text": "deprecation features to show that these fields are no longer deprecated and you know I ideally avoid versioning",
    "start": "1940399",
    "end": "1947000"
  },
  {
    "text": "unfortunately of course it doesn't fully solve the problem I'll just quickly touch on a few of the",
    "start": "1947000",
    "end": "1952460"
  },
  {
    "text": "points which are going to sound really similar now the first one is a graphql it's often used at BFF layer so it still",
    "start": "1952460",
    "end": "1958820"
  },
  {
    "text": "needs to interact with other apis and so you probably still need some mechanism to protect yourself there",
    "start": "1958820",
    "end": "1964880"
  },
  {
    "text": "deprecation is at runtime which is I would imagine too late",
    "start": "1964880",
    "end": "1970360"
  },
  {
    "text": "um versioning is still a thing so if you if you if you have to change or break break types really the only way of doing",
    "start": "1970399",
    "end": "1975679"
  },
  {
    "text": "that is like deprecating it wait for all your consumers to update or you know version it and that's definitely still a thing on um things like the graphical",
    "start": "1975679",
    "end": "1982340"
  },
  {
    "text": "queries and again if you're using sdks for this type of thing you're going to lose side",
    "start": "1982340",
    "end": "1988039"
  },
  {
    "text": "of the surface area that your consumers are actually using it still has default values which we",
    "start": "1988039",
    "end": "1993799"
  },
  {
    "text": "know is a bad thing or can be a bad thing and also see other reasons as to why it doesn't fix it one quick notable shout",
    "start": "1993799",
    "end": "2000399"
  },
  {
    "text": "out though is to Apollo's deprecation features I think it's got a pretty cool stuff in its platform",
    "start": "2000399",
    "end": "2005880"
  },
  {
    "text": "all right let's look at the time there I think we're okay so hopefully you've all started to see I",
    "start": "2006820",
    "end": "2012100"
  },
  {
    "text": "guess a bit of a get a bit of a theme here and you know all these technologies have some great stuff built into them",
    "start": "2012100",
    "end": "2017380"
  },
  {
    "text": "but they don't necessarily solve this problem around the API communication drift",
    "start": "2017380",
    "end": "2023260"
  },
  {
    "text": "and this is no surprise so let's return back to some of the lessons we can draw from all this",
    "start": "2023260",
    "end": "2028840"
  },
  {
    "text": "uh and hopefully understand why consumer-driven contract testing is unique and has this powerful ability to",
    "start": "2028840",
    "end": "2034779"
  },
  {
    "text": "help combat some of this the first thing I want you all to walk away with today is that your provider",
    "start": "2034779",
    "end": "2041140"
  },
  {
    "text": "contract is just one view of your API it is it is not the API right it is just a",
    "start": "2041140",
    "end": "2046899"
  },
  {
    "text": "representation of it and you know of course that's obvious any observable fact or change in the way",
    "start": "2046899",
    "end": "2053858"
  },
  {
    "text": "an API Works will be deem breaking by certain consumers and this observation",
    "start": "2053859",
    "end": "2059080"
  },
  {
    "text": "is called Hiram's law it's not the specifications are bad or",
    "start": "2059080",
    "end": "2064179"
  },
  {
    "text": "wrong but to think that they fully reflect what their product is and what it can do is really just is being naive",
    "start": "2064179",
    "end": "2069760"
  },
  {
    "text": "to be honest it's just a narrow lens on what it can do so while we can't make him's law disappear",
    "start": "2069760",
    "end": "2076000"
  },
  {
    "text": "we can find ways to reduce the ambiguity and one of those ways is bringing that consumer perspective into it and yes for",
    "start": "2076000",
    "end": "2082060"
  },
  {
    "text": "those who are open source or other contributors yeah love this quote happens all the time",
    "start": "2082060",
    "end": "2088020"
  },
  {
    "text": "so returning to contract testing and how it actually addresses this I like to think of as this generalized",
    "start": "2088300",
    "end": "2095080"
  },
  {
    "text": "approach to communication testing API communication testing and the way in particular pact Works which",
    "start": "2095080",
    "end": "2101020"
  },
  {
    "text": "implements this I think is really powerful so the first thing is this record and replay style that we use because it gets all the",
    "start": "2101020",
    "end": "2107980"
  },
  {
    "text": "representations of how consumer is going to use an API we've got this really clear line of sight about what they",
    "start": "2107980",
    "end": "2114520"
  },
  {
    "text": "actually need and what we what if we change we could break but when we actually test that we've now got even",
    "start": "2114520",
    "end": "2119740"
  },
  {
    "text": "better confidence that the provider can actually do it as well and that specification by example that",
    "start": "2119740",
    "end": "2124960"
  },
  {
    "text": "comes for free in this way really reduces the ambiguity in what a provider can and shoulder needs to actually do",
    "start": "2124960",
    "end": "2133060"
  },
  {
    "text": "because we track all these application versions over time and which ones are compatible with one another and the",
    "start": "2133060",
    "end": "2138220"
  },
  {
    "text": "contracts between them you know we can we can evolve our servers much more safely and in fact I like to think of it as time traveling",
    "start": "2138220",
    "end": "2144339"
  },
  {
    "text": "because really you've got this this little you know um I guess we call it events over time with",
    "start": "2144339",
    "end": "2151420"
  },
  {
    "text": "all these mappings of the versions and contracts which are compatible and we can sort of ask the question which ones are compatible with one another and we",
    "start": "2151420",
    "end": "2157420"
  },
  {
    "text": "can go back and look at old events and we can look at we can work if new versions are compatible all these things are possible because of this this",
    "start": "2157420",
    "end": "2164079"
  },
  {
    "text": "interlinked relationships we can think about the transport concerns in the case of product Buffs",
    "start": "2164079",
    "end": "2169960"
  },
  {
    "text": "because we can you know bring that into the contract alongside the content itself we can do you know typed field matching",
    "start": "2169960",
    "end": "2176619"
  },
  {
    "text": "right down to that field level we can narrow the types from strings to an ISO date or a 7ver or whatever it is",
    "start": "2176619",
    "end": "2184839"
  },
  {
    "text": "and of course because we have the the what the consumers are actually using in the API",
    "start": "2184839",
    "end": "2190240"
  },
  {
    "text": "we we know what the surface area is of our system that we need to keep providing and we can this gives us our",
    "start": "2190240",
    "end": "2196000"
  },
  {
    "text": "mechanism to evolve it means we can avoid things like versioning now whilst Pac doesn't have the native",
    "start": "2196000",
    "end": "2202900"
  },
  {
    "text": "capabilities for all the things we talked about today all the Technologies and what we've done is we've we've made",
    "start": "2202900",
    "end": "2208000"
  },
  {
    "text": "it extensible now via plugins so I won't go into the fullback story about sort of why pact has been has been",
    "start": "2208000",
    "end": "2214720"
  },
  {
    "text": "extended this way but um the brief history is that you know as an open source tool one of",
    "start": "2214720",
    "end": "2220900"
  },
  {
    "text": "the main challenges which is one of our main benefits is that we have we support this across multiple languages about 10 or 11 languages so having to implement",
    "start": "2220900",
    "end": "2228099"
  },
  {
    "text": "the logic in every one of those languages for every time you make a change is as you can imagine you know quite difficult and so a few years ago",
    "start": "2228099",
    "end": "2234760"
  },
  {
    "text": "we embarked on a project which is um written in Rust so where's team is over there if you get excited by rust and",
    "start": "2234760",
    "end": "2240099"
  },
  {
    "text": "you're interested in in um motivated by his talk and want to contribute come and talk to me afterwards",
    "start": "2240099",
    "end": "2245560"
  },
  {
    "text": "um but our rust core is going to have all the shared you know uh capability in it and we're rolling that out across our",
    "start": "2245560",
    "end": "2251440"
  },
  {
    "text": "languages now to avoid us having to build the same thing over and over and what we've done is we've extended on that to add a plug-in framework into it",
    "start": "2251440",
    "end": "2257980"
  },
  {
    "text": "which would mean that anybody who's like let's say I want to test you know as2805 or some custom protocol in their",
    "start": "2257980",
    "end": "2264339"
  },
  {
    "text": "organization could build a transport or a protocol or a matching Rule and extend",
    "start": "2264339",
    "end": "2270040"
  },
  {
    "text": "pact to suit their particular needs whether they make it a public thing open source or just build it and use it internally",
    "start": "2270040",
    "end": "2276720"
  },
  {
    "text": "um our first plugin we built was grpc and protobus unsurprisingly because that was the most demanded feature that we",
    "start": "2279880",
    "end": "2285579"
  },
  {
    "text": "had for years because of all those shortcomings we talked about earlier so let's have a quick look",
    "start": "2285579",
    "end": "2291400"
  },
  {
    "text": "um to see how contract tests work of a protobus and grpc and then we'll look to see if we can draw any lessons from this",
    "start": "2291400",
    "end": "2298960"
  },
  {
    "text": "so very briefly for those who haven't seen protobus before this is what a Proto file looks like you can see here",
    "start": "2298960",
    "end": "2305200"
  },
  {
    "text": "I've cut this right back it's from Google's getting started guide It's called route guide you basically",
    "start": "2305200",
    "end": "2310720"
  },
  {
    "text": "punching a lap long and you can get back so there's a feature that get feature you point passing a point which is just",
    "start": "2310720",
    "end": "2316480"
  },
  {
    "text": "a lat long and you might get back a feature which has a name and a location which is also that that long",
    "start": "2316480",
    "end": "2324220"
  },
  {
    "text": "um you can see here what a consumer test for this for this would look like we similarly have the same thing before we",
    "start": "2324220",
    "end": "2329740"
  },
  {
    "text": "have the name of the scenario we have the preconditions required to make this scenario work",
    "start": "2329740",
    "end": "2336700"
  },
  {
    "text": "we have the request and response style the details need to go in there in the case of grpc that can just be request",
    "start": "2336700",
    "end": "2342579"
  },
  {
    "text": "only it can be you know one way async or can actually be streaming so there's a few different things there",
    "start": "2342579",
    "end": "2348280"
  },
  {
    "text": "and then of course we have our unit test which takes the transport and you know runs the actual grpc unit test against",
    "start": "2348280",
    "end": "2354099"
  },
  {
    "text": "that and make sure that our service client works as expected syntax is a little bit different here",
    "start": "2354099",
    "end": "2360099"
  },
  {
    "text": "because it's a plugin interface this is the raw interface but you can imagine looking a bit nicer than this full as we",
    "start": "2360099",
    "end": "2365260"
  },
  {
    "text": "we build on this on the provider side what we do is very straightforward we start the provider up",
    "start": "2365260",
    "end": "2370960"
  },
  {
    "text": "locally so you can see the bottom there we're starting off a grpc server for the the route guide server and the top in",
    "start": "2370960",
    "end": "2377079"
  },
  {
    "text": "our test there we're just starting that process up in the background excuse me we create the plugin verify in",
    "start": "2377079",
    "end": "2384160"
  },
  {
    "text": "this case and then we just tell with the verifier where to find a locally running service and where to go find a pact file and then it does its thing",
    "start": "2384160",
    "end": "2390700"
  },
  {
    "text": "uh if that test passes we're going to get something that looks like this that says yep we can read the get feature",
    "start": "2390700",
    "end": "2396160"
  },
  {
    "text": "thing and the consumer can send the request we could respond to it with the right the right shape data",
    "start": "2396160",
    "end": "2401560"
  },
  {
    "text": "of course it's a provider is incompatible with that contract we're going to get back some form of error",
    "start": "2401560",
    "end": "2406780"
  },
  {
    "text": "here so you can see that if it didn't return back in fact you can actually see it's actually part of the product of our",
    "start": "2406780",
    "end": "2411940"
  },
  {
    "text": "file and is actually outputting some of the product buff stuff there but you can see that it's not returning back a route",
    "start": "2411940",
    "end": "2417220"
  },
  {
    "text": "guide feature and that the matching body is incorrect In this case instead of returning back integers oh",
    "start": "2417220",
    "end": "2424540"
  },
  {
    "text": "yeah it's returning back a string version of that lat right and so this is how we can really narrow those types and also we can see there we're saying we're",
    "start": "2424540",
    "end": "2430359"
  },
  {
    "text": "getting back an empty string so protobuf is actually put in an empty value for that um but we actually needed a non-empty",
    "start": "2430359",
    "end": "2435460"
  },
  {
    "text": "string that's really important to this consumer okay so summering up which I think I'm",
    "start": "2435460",
    "end": "2442839"
  },
  {
    "text": "on time um the key takeaways here so you're stepping right back you know this multi-protocol internal micro Services",
    "start": "2442839",
    "end": "2449140"
  },
  {
    "text": "adoption is really increasing and in fact it's accelerating it's going to be the majority of API work for a lot of",
    "start": "2449140",
    "end": "2455260"
  },
  {
    "text": "organizations over the next few years the lack of standardization for design and test is really contributing to this",
    "start": "2455260",
    "end": "2461500"
  },
  {
    "text": "challenge of what we call microservices sprawl we talked about ethereum's law and",
    "start": "2461500",
    "end": "2466839"
  },
  {
    "text": "really just that you know what your API is is not always what you what it seems and it's much richer than any",
    "start": "2466839",
    "end": "2472839"
  },
  {
    "text": "specification can give us and there's ways we can reduce that ambiguity and that contract testing is one way of",
    "start": "2472839",
    "end": "2478780"
  },
  {
    "text": "doing that of course but it's also an approach that can really reduce the complexity of our API testing",
    "start": "2478780",
    "end": "2484359"
  },
  {
    "text": "and give us reducing ambiguity inherent really in in all these API specifications",
    "start": "2484359",
    "end": "2490900"
  },
  {
    "text": "and of course we talked about pact as a specific example of this kind of pattern and you know how it really can be used",
    "start": "2490900",
    "end": "2496780"
  },
  {
    "text": "as a standardized way to test apis across protocols across transports and",
    "start": "2496780",
    "end": "2502359"
  },
  {
    "text": "um and content types and languages lost my voice somehow but that is the",
    "start": "2502359",
    "end": "2507940"
  },
  {
    "text": "end of my talk thank you so much for listening I know it's getting late in the afternoon",
    "start": "2507940",
    "end": "2513119"
  },
  {
    "text": "[Applause]",
    "start": "2513540",
    "end": "2517239"
  },
  {
    "text": "we do have a few minutes for questions does anyone have any you have to put your hands up big",
    "start": "2518740",
    "end": "2524740"
  },
  {
    "text": "because I'm not wearing my glasses and it is late in the day there we go",
    "start": "2524740",
    "end": "2530338"
  },
  {
    "text": "um so just excuse my ignorance here you use the term API surface area I just",
    "start": "2536859",
    "end": "2541900"
  },
  {
    "text": "would you be able to expand on that a little bit I don't I didn't really interact exactly what you meant by that",
    "start": "2541900",
    "end": "2547180"
  },
  {
    "text": "yeah I've got a good question so let's say you've got an API that's got 10 endpoints and let's say it's an ordering API you've got one to I don't know",
    "start": "2547180",
    "end": "2553480"
  },
  {
    "text": "create an order get an order update in order what have you right uh and let's say further inside that order you've got",
    "start": "2553480",
    "end": "2560020"
  },
  {
    "text": "an order object which has 50 fields on it right from your provider the consumer May in most cases doesn't need to use",
    "start": "2560020",
    "end": "2566920"
  },
  {
    "text": "all those fields and it may not actually use all the apis either so what we're saying by the surface area is everything that the the provider",
    "start": "2566920",
    "end": "2574060"
  },
  {
    "text": "publishes to the real world that's the surface area of the product but a consumer is only ever using usually a subset of that so what we mean",
    "start": "2574060",
    "end": "2581200"
  },
  {
    "text": "by what we mean by the surface area here is we want to capture exactly what all of our consumers are using of in our API",
    "start": "2581200",
    "end": "2586540"
  },
  {
    "text": "because now we know the things that consumers aren't using we can just remove that is not actually required to do our job",
    "start": "2586540",
    "end": "2592720"
  },
  {
    "text": "good question anyone else",
    "start": "2592720",
    "end": "2598300"
  },
  {
    "text": "who he uses versioning as like your standard strategy well not many okay who he hates",
    "start": "2598300",
    "end": "2605680"
  },
  {
    "text": "visioning okay well people who didn't put their hand up the first time yep still hate",
    "start": "2605680",
    "end": "2610780"
  },
  {
    "text": "versioning good well if you do have any other questions feel free to grab me in the foyer I'll be around tomorrow as this afternoon as",
    "start": "2610780",
    "end": "2617440"
  },
  {
    "text": "well oh we have one question here from yep hey as it's getting cheaper to and",
    "start": "2617440",
    "end": "2624099"
  },
  {
    "text": "quicker to stand up uh full environment from like uh you know infrastructure's code and stuff like that",
    "start": "2624099",
    "end": "2629740"
  },
  {
    "text": "um by seeing a lot more of a shift towards integration testing as opposed to unit",
    "start": "2629740",
    "end": "2635440"
  },
  {
    "text": "testing and stuff like that and you said contract testing sort of sits in between um you know the integration test and the",
    "start": "2635440",
    "end": "2642339"
  },
  {
    "text": "unit tests so I know you said uh at the start of the talk it's like oh but if we just use this then you know yeah yeah",
    "start": "2642339",
    "end": "2647859"
  },
  {
    "text": "yeah where do you sort of see uh sort of that future landscape heading do you see it more heading towards integration yeah",
    "start": "2647859",
    "end": "2654099"
  },
  {
    "text": "that's great questions what do you think contract testing yeah like a really good place great one I used to a talk on",
    "start": "2654099",
    "end": "2659200"
  },
  {
    "text": "serverless testing and how do you do that because it's like a lot of it's just yaml right you're not going to write unit tests for gamble just not",
    "start": "2659200",
    "end": "2665260"
  },
  {
    "text": "going to do it it doesn't make sense integration testing would make much more sense to do I think the issue is where",
    "start": "2665260",
    "end": "2671440"
  },
  {
    "text": "you know we talk about cheapness and all that it's actually still the complexity that comes an issue so I used to have a version of a talk that basically had",
    "start": "2671440",
    "end": "2677380"
  },
  {
    "text": "containers right so we can solve it because we just put containers there but eventually a machine locally doesn't run those containers it just explodes",
    "start": "2677380",
    "end": "2684099"
  },
  {
    "text": "um I think it's similar with serverless as well like there's nothing wrong with running in an integrated environment but",
    "start": "2684099",
    "end": "2689140"
  },
  {
    "text": "you have to find a boundary somewhere that makes sense and what we see is organizations not drawing very clear",
    "start": "2689140",
    "end": "2694420"
  },
  {
    "text": "boundaries around that all the boundaries are just way too big and there's too many teams in there and that just it becomes very non-deterministic",
    "start": "2694420",
    "end": "2700540"
  },
  {
    "text": "to be able to build reliable environments whether using Docker or um you know IEC or you know cloud formation",
    "start": "2700540",
    "end": "2707800"
  },
  {
    "text": "yam or whatever it is so I I do think you know taking away the unit testing aspect of all this integration testing",
    "start": "2707800",
    "end": "2714460"
  },
  {
    "text": "is still really important and that's a very broad term as well so are you referring to specifically in the",
    "start": "2714460",
    "end": "2720040"
  },
  {
    "text": "environment or more just generally speaking integration testing where we're making sure multiple things can work",
    "start": "2720040",
    "end": "2725920"
  },
  {
    "text": "together",
    "start": "2725920",
    "end": "2728099"
  },
  {
    "text": "as Things become more and more granular like those boundaries for sure yeah so we're just saying the",
    "start": "2732579",
    "end": "2740020"
  },
  {
    "text": "blurry boundaries between boxes in this in this integrated world yes um I I think I've packed as it we try to",
    "start": "2740020",
    "end": "2746440"
  },
  {
    "text": "make it like a unit test because it's it runs fast and reliable and deterministically for most part but I",
    "start": "2746440",
    "end": "2751720"
  },
  {
    "text": "like to think of it as an integration testing tool because that's really what it's about solving it's about distributed systems that communicate",
    "start": "2751720",
    "end": "2757240"
  },
  {
    "text": "over your network boundaries and we want to give ourselves more confidence we can do that and and Contra testing is one",
    "start": "2757240",
    "end": "2763960"
  },
  {
    "text": "form of integration test obviously there's other types and I think they're still very useful the way I I always I",
    "start": "2763960",
    "end": "2769540"
  },
  {
    "text": "tend to think about it in the general sense of course there's always going to be specifics but I think the idea I love",
    "start": "2769540",
    "end": "2774760"
  },
  {
    "text": "the idea of a um a budget for your CI Pipeline and if your CI pipeline is going past a certain length then all",
    "start": "2774760",
    "end": "2782140"
  },
  {
    "text": "these really bad things start to happen certain times that lead time for Recovery start batching changes all those kind of things kick on I think",
    "start": "2782140",
    "end": "2788440"
  },
  {
    "text": "sometimes the thinking about time is actually one way of helping you get a better balance",
    "start": "2788440",
    "end": "2794819"
  }
]