[
  {
    "start": "0",
    "end": "282000"
  },
  {
    "text": "[Music]",
    "start": "2540",
    "end": "11609"
  },
  {
    "text": "all right how many people know about containers this is the docker track but you always got to check how many people",
    "start": "12240",
    "end": "18520"
  },
  {
    "text": "are comfortable with containers great because I'm not going to dive deep into what a container is um but I will talk",
    "start": "18520",
    "end": "25760"
  },
  {
    "text": "about containers in general um I typically don't like talking about containers because I think they're",
    "start": "25760",
    "end": "31279"
  },
  {
    "text": "really like 1 to 5% of the overall problem um but this talk is pretty interesting I think because we talk",
    "start": "31279",
    "end": "37600"
  },
  {
    "text": "about um the need for things like standards right so um we will talk about",
    "start": "37600",
    "end": "43200"
  },
  {
    "text": "rocket and appy um which is the container spec from coros in an attempt to provide in stre standard guidelines",
    "start": "43200",
    "end": "50640"
  },
  {
    "text": "on what an application container is and the first question we get is why",
    "start": "50640",
    "end": "57000"
  },
  {
    "text": "right so early on um you know maybe even pre- doer um a lot of people had this",
    "start": "57000",
    "end": "63640"
  },
  {
    "text": "Vision that they could use containers to build the perfect infrastructure right so most people their first experience",
    "start": "63640",
    "end": "70439"
  },
  {
    "text": "with a container you go 5 minutes in and things are fantastic right you have this in your mind whatever you whatever your",
    "start": "70439",
    "end": "76920"
  },
  {
    "text": "infrastructure looks like right now your initial belief was you adopt containers",
    "start": "76920",
    "end": "82479"
  },
  {
    "text": "and it's going to be beautiful and then you go to production",
    "start": "82479",
    "end": "87640"
  },
  {
    "text": "and you find out that there's there's a lot of pieces missing right so um you",
    "start": "87640",
    "end": "93479"
  },
  {
    "text": "know you're you're deploying you're deploying but you don't really have like things like service Discovery figured out and then you discover things like",
    "start": "93479",
    "end": "101240"
  },
  {
    "text": "the docker bridge for the first time and you find out that it's not really easy to get your host to communicate uh",
    "start": "101240",
    "end": "107360"
  },
  {
    "text": "between each other and in some cases and some rare cases you actually download a container that actually does care about",
    "start": "107360",
    "end": "114520"
  },
  {
    "text": "what kernel version that's running and now you have no way to address it because there's really no standards",
    "start": "114520",
    "end": "120280"
  },
  {
    "text": "around this stuff it's just new right so you move down that road and what do you do if you're a developer you call your",
    "start": "120280",
    "end": "127000"
  },
  {
    "text": "Ops Team right and your Ops Team sees you kind of wavering and things are looking bad so you bring in your Ops",
    "start": "127000",
    "end": "132480"
  },
  {
    "text": "Team but again there is no standards so unfortunately your Ops Team can't do",
    "start": "132480",
    "end": "137680"
  },
  {
    "text": "very much for you right so unfortunately this is how it's going to end um you",
    "start": "137680",
    "end": "143239"
  },
  {
    "text": "actually have no choice in this matter um the good news is that things are improving",
    "start": "143239",
    "end": "150560"
  },
  {
    "text": "and one of the goals of this talk is mainly to provide an overview of application container spec and we call",
    "start": "150560",
    "end": "157239"
  },
  {
    "text": "it appc for short and then rocket which is rkt um is pronounced rocket and I'm",
    "start": "157239",
    "end": "164319"
  },
  {
    "text": "going to highlight where appc and the docker image format agree so there's a lot of things um people involved in appc",
    "start": "164319",
    "end": "172519"
  },
  {
    "text": "agree that Docker Has Done Right which is provide this idea that we can take an",
    "start": "172519",
    "end": "178840"
  },
  {
    "text": "application and describe it as a single application that we can reason about",
    "start": "178840",
    "end": "184959"
  },
  {
    "text": "that means we stop talking about Java that means we stop talking about ruby and we just talk about applications",
    "start": "184959",
    "end": "190959"
  },
  {
    "text": "right and the other part is there should be a config inside of that image that",
    "start": "190959",
    "end": "196599"
  },
  {
    "text": "tells an Executor what to do with that image right so what we want to do is write that down what does that",
    "start": "196599",
    "end": "202040"
  },
  {
    "text": "mean and then we're going to and I think to really drive the spec home we're actually going to do something with it",
    "start": "202040",
    "end": "207680"
  },
  {
    "text": "so live I'm going to take a set of uh Docker images and we're going to convert them to acis and we're going to see what",
    "start": "207680",
    "end": "214879"
  },
  {
    "text": "that process looks like to so we can see where things are the same and where things differ and then we're going to",
    "start": "214879",
    "end": "220640"
  },
  {
    "text": "talk about how to actually sign and distribute those so one of the goals with appc was we needed a stronger trust",
    "start": "220640",
    "end": "226640"
  },
  {
    "text": "model so if you're pulling random things from the internet first you just not do that don't pull random things from the",
    "start": "226640",
    "end": "232599"
  },
  {
    "text": "internet um but one thing you would like to do is be able to pull something and validate where it came",
    "start": "232599",
    "end": "239480"
  },
  {
    "text": "from right so if you've been managing systems for any amount of time you've been used to this for your whole career right if",
    "start": "239480",
    "end": "246439"
  },
  {
    "text": "you're using a package manager normally those packages are signed from a specific entity that you trust so when",
    "start": "246439",
    "end": "251920"
  },
  {
    "text": "you bring them in you kind of know who you're trusting here we move to the wowwow West these days where there's",
    "start": "251920",
    "end": "257680"
  },
  {
    "text": "just things on the internet and we're just like randomly pull them into our infrastructure and this is especially",
    "start": "257680",
    "end": "262960"
  },
  {
    "text": "dangerous when you start thinking about bringing in things like databases and key services that power your infrastructure this is getting really",
    "start": "262960",
    "end": "269800"
  },
  {
    "text": "really really really dangerous for a lot of people and then we're going to talk about how to actually do something with",
    "start": "269800",
    "end": "276440"
  },
  {
    "text": "rocket like why do we build this and how is it fundamentally different than other container run",
    "start": "276440",
    "end": "283000"
  },
  {
    "start": "282000",
    "end": "400000"
  },
  {
    "text": "times so first at a high level the application uh container spec and the",
    "start": "283600",
    "end": "289840"
  },
  {
    "text": "goals with this is to have something that is Welly specified meaning we've documented every single detail on what",
    "start": "289840",
    "end": "296000"
  },
  {
    "text": "an image is how it should be executed what system calls should be in play and",
    "start": "296000",
    "end": "301120"
  },
  {
    "text": "we wanted to build a community around it so the goals were the spec is no good if there's only one implementation of it so",
    "start": "301120",
    "end": "306960"
  },
  {
    "text": "we're trying to Foster other people to implement and there are actually a couple implementations of the application container spec so the number",
    "start": "306960",
    "end": "314280"
  },
  {
    "text": "one thing is the image format right the image format is called an",
    "start": "314280",
    "end": "319919"
  },
  {
    "text": "ACI second is a discovery mechanism so when you build one of these images you",
    "start": "319919",
    "end": "325199"
  },
  {
    "text": "should be able to host it wherever you want so that means if you have a web server and you want to just throw your",
    "start": "325199",
    "end": "330600"
  },
  {
    "text": "images in there and just serve them to your organization should be able to do that there's no special Registries",
    "start": "330600",
    "end": "336319"
  },
  {
    "text": "there's no default registry so that's good and bad in some ways the bad part is there's no central place to go to",
    "start": "336319",
    "end": "343520"
  },
  {
    "text": "find all the acis in the world the good part is you don't need much tooling to",
    "start": "343520",
    "end": "349039"
  },
  {
    "text": "host any of this stuff everything in app container specification was meant to be simple you",
    "start": "349039",
    "end": "355400"
  },
  {
    "text": "can build an application container spec or image with command line tools right",
    "start": "355400",
    "end": "360759"
  },
  {
    "text": "you can use tar gzip and gpg to assign them and you can just build your own",
    "start": "360759",
    "end": "367479"
  },
  {
    "text": "image no fancy tooling required and then the runtime",
    "start": "367479",
    "end": "372560"
  },
  {
    "text": "environment so once you do have an image and you can find the image the next thing you need to do is",
    "start": "372560",
    "end": "378360"
  },
  {
    "text": "be able to specify how you run the image so if you want to be compatible with application container spec you need to",
    "start": "378360",
    "end": "384319"
  },
  {
    "text": "do a certain set of things so that people can kind of rely on Behavior even across systems",
    "start": "384319",
    "end": "391080"
  },
  {
    "text": "and then a set of tooling to help build validate um and help people just in",
    "start": "391080",
    "end": "396960"
  },
  {
    "text": "general get application implementations correct the first thing I'm going to",
    "start": "396960",
    "end": "402479"
  },
  {
    "start": "400000",
    "end": "525000"
  },
  {
    "text": "talk about is the image format so the image format very similar to the docker image",
    "start": "402479",
    "end": "408080"
  },
  {
    "text": "format here pretty much the starting point for application container spec the ACI needs to contain everything that the",
    "start": "408080",
    "end": "415120"
  },
  {
    "text": "application needs to run and if it doesn't it should at least specify the mount points that need to be",
    "start": "415120",
    "end": "423080"
  },
  {
    "text": "added to make it so so if you think about if you're using Docker and you have an image the image tells you a few",
    "start": "423080",
    "end": "430560"
  },
  {
    "text": "things maybe it's entry point but it doesn't have to tell you all the volumes it requires you're free to just bind",
    "start": "430560",
    "end": "436639"
  },
  {
    "text": "mount in anything and they map wherever they want right so there's some Advantage there there is flexibility but",
    "start": "436639",
    "end": "443720"
  },
  {
    "text": "you can't read the image manifest inside of a Docker format to know the required amount points for an image so if someone",
    "start": "443720",
    "end": "450479"
  },
  {
    "text": "writes really good documentation it'll be really easy to pull it down and mount things in but it' be much better if you",
    "start": "450479",
    "end": "456000"
  },
  {
    "text": "actually ran the image and it said you didn't mount in all the required Mount points this won't run we can do that in",
    "start": "456000",
    "end": "462800"
  },
  {
    "text": "appc because we make it a requirement so there's two main things there's a root file system same thing as docker's image",
    "start": "462800",
    "end": "469280"
  },
  {
    "text": "format and the root file system is just that some people will take an existing",
    "start": "469280",
    "end": "475120"
  },
  {
    "text": "system and you can tar the whole thing up and make that your root file system you you can use Docker Bild to produce a",
    "start": "475120",
    "end": "481840"
  },
  {
    "text": "root file system is probably the most popular way of producing root file systems these days or you can use native system tools Debbie and red hat have",
    "start": "481840",
    "end": "488879"
  },
  {
    "text": "good tools for building full systems in a trot and then you need an image manifest so for a very simple ACI this",
    "start": "488879",
    "end": "496960"
  },
  {
    "text": "is one from a project called kubernetes for managing containers and this is the API server and it's a statically linked",
    "start": "496960",
    "end": "503479"
  },
  {
    "text": "go binary actually this one isn't statically linked I'm going to bind mount in some libraries from The Host",
    "start": "503479",
    "end": "509919"
  },
  {
    "text": "normally you wouldn't do that sometimes you would just say I'm going to build on top of Debian but I'm a big fan of containers that are about 10 Megs I do",
    "start": "509919",
    "end": "517680"
  },
  {
    "text": "not like downloading containers that are like 500 Megs or a gig and there's ways you can get around that on the",
    "start": "517680",
    "end": "525040"
  },
  {
    "text": "Manifest so if you visit the spec it has details on each key that you can find or",
    "start": "525040",
    "end": "530279"
  },
  {
    "text": "describe in a manifest now these manifest are version so this is the 0.5.1 version of this manifest an",
    "start": "530279",
    "end": "537519"
  },
  {
    "text": "Executor can read that version and know what it can find inside that manifest now this is incomplete so I can",
    "start": "537519",
    "end": "544560"
  },
  {
    "text": "fit it on the screen but this tells me the name of the application container",
    "start": "544560",
    "end": "549760"
  },
  {
    "text": "the version is basically similar to a Docker tag and it's up to the executor to reason about what that tag means it",
    "start": "549760",
    "end": "556240"
  },
  {
    "text": "could be a subactive version it could be anything um and we do have the concept of an OS right so one of the goals with",
    "start": "556240",
    "end": "562560"
  },
  {
    "text": "application container spec was to work for multiple operating systems in order to do that the images need to have some",
    "start": "562560",
    "end": "569399"
  },
  {
    "text": "sort of metadata to tell you this will work for FreeBSD and this will work for Linux right containers have a shared",
    "start": "569399",
    "end": "575800"
  },
  {
    "text": "kernel they just won't run anywhere so what we do is we provide some metadata to help the executor understand if it",
    "start": "575800",
    "end": "582320"
  },
  {
    "text": "can actually run that lab run that container or not and then we have an entry point called aec so this is",
    "start": "582320",
    "end": "587920"
  },
  {
    "text": "basically similar to the um entry point you'll find in Docker user and group and then the amount points are specific so",
    "start": "587920",
    "end": "596680"
  },
  {
    "text": "here I'm specifying that I need the SSL search from the host so my statically link binary will try to search his local",
    "start": "596680",
    "end": "603040"
  },
  {
    "text": "file system for Sears but it won't find them so what I'm specifying in my image manifest is that those need to be passed",
    "start": "603040",
    "end": "609680"
  },
  {
    "text": "in at runtime if they're not defined here and someone mounts things in won't work you",
    "start": "609680",
    "end": "616480"
  },
  {
    "text": "have to be very specific about your intention um and application container",
    "start": "616480",
    "end": "622720"
  },
  {
    "start": "622000",
    "end": "789000"
  },
  {
    "text": "spec then a discovery mechanism so one of the goals was we wanted to be easy for anyone to build and host their own r",
    "start": "622720",
    "end": "629480"
  },
  {
    "text": "registry um the docket registry is actually really really really powerful but it's actually complex so",
    "start": "629480",
    "end": "636079"
  },
  {
    "text": "complex that you have to go find one in order to get started there's some good open source ones out there but sometimes",
    "start": "636079",
    "end": "641600"
  },
  {
    "text": "you want something super super simple and in this case we're looking at a ACI",
    "start": "641600",
    "end": "647240"
  },
  {
    "text": "and all aciis by default must have a detached signature when you attempt to install one container run times must",
    "start": "647240",
    "end": "655279"
  },
  {
    "text": "check to see if there is a detach signature and do the verification process this now you can turn it off but",
    "start": "655279",
    "end": "661839"
  },
  {
    "text": "we do make you jump to a flag that says insecure skip verification so that you",
    "start": "661839",
    "end": "667519"
  },
  {
    "text": "know you're doing something that you probably shouldn't be doing so in this case we have these",
    "start": "667519",
    "end": "673000"
  },
  {
    "text": "three artifacts in the public keys so that way an Executor can download those public keys and use those public keys to verify",
    "start": "673000",
    "end": "680279"
  },
  {
    "text": "the image now there's simple Discovery and a simple Discovery you take your artifacts and you put it behind any HTTP",
    "start": "680279",
    "end": "686800"
  },
  {
    "text": "endpoint doesn't matter throw it on engine next put it on S3 uh Google",
    "start": "686800",
    "end": "692000"
  },
  {
    "text": "storage it doesn't matter you refer to the full URL and then what will happen is an Executor will follow a convention",
    "start": "692000",
    "end": "698240"
  },
  {
    "text": "it'll take your url um and fill in the blank so that's a template that we see there so it'll take",
    "start": "698240",
    "end": "703600"
  },
  {
    "text": "the name of the ACI the version or that tag and the extension will be ACI and",
    "start": "703600",
    "end": "709480"
  },
  {
    "text": "then by convention it will look for ASC knowing that that's the actual detached signature and attempt to do the",
    "start": "709480",
    "end": "717440"
  },
  {
    "text": "verification the other option is meta Discovery so let's say that you have an",
    "start": "717440",
    "end": "722560"
  },
  {
    "text": "Executor that may have different capabilities maybe you want to distribute your images via bit torn or",
    "start": "722560",
    "end": "728360"
  },
  {
    "text": "something some other protocol so what you can do is you can give the executor hints and you can also have a different",
    "start": "728360",
    "end": "734639"
  },
  {
    "text": "place where you store your actual images so maybe it's not on the same server that's serving up the metadata on where to find the image so in this case we can",
    "start": "734639",
    "end": "741480"
  },
  {
    "text": "hit an endpoint and all you have to do is return back this HTML header right and the header is only a template to",
    "start": "741480",
    "end": "748639"
  },
  {
    "text": "tell the how to fill in the blanks to find what it wants all right so I hit this endpoint and I get the disc AC",
    "start": "748639",
    "end": "755360"
  },
  {
    "text": "Discovery tag back and it tells me that the content you're looking for so if you match this name use this template to",
    "start": "755360",
    "end": "761959"
  },
  {
    "text": "actually download what you're looking for if the content isn't there then you'll just handle through the normal",
    "start": "761959",
    "end": "768000"
  },
  {
    "text": "htb process that's not found and then down here we get the public key so I have the ability to pull those down",
    "start": "768000",
    "end": "774199"
  },
  {
    "text": "during the discovery process and this was designed because we feel that people will probably want to",
    "start": "774199",
    "end": "779639"
  },
  {
    "text": "do something outside of htdp S3 maybe even something like bitor if you have lots of hosts we want to know um where",
    "start": "779639",
    "end": "786560"
  },
  {
    "text": "we can find the entry point for that stuff then the runtime environment so",
    "start": "786560",
    "end": "792839"
  },
  {
    "start": "789000",
    "end": "930000"
  },
  {
    "text": "the other half of this story is you have an image now you got to run it so appsc defines how AIS are are",
    "start": "792839",
    "end": "801720"
  },
  {
    "text": "executed on a particular host so one thing we need to just talk about is like our file system layout so in appc we",
    "start": "801720",
    "end": "808279"
  },
  {
    "text": "have this concept of a a pod and we'll talk about that a little bit more later but we got this idea from the kubernetes",
    "start": "808279",
    "end": "813800"
  },
  {
    "text": "project of the ability to compose a collection of containers into",
    "start": "813800",
    "end": "819040"
  },
  {
    "text": "a single execution unit now this allows some really interesting patterns you can",
    "start": "819040",
    "end": "824120"
  },
  {
    "text": "take um two distinct apps that need to run together and have them be independent acis and then compose them",
    "start": "824120",
    "end": "831000"
  },
  {
    "text": "into a pod construct and be guaranteed that they'll share the same execution environment meaning that they have",
    "start": "831000",
    "end": "837519"
  },
  {
    "text": "shared name space so they can contact each other or Local Host um they optionally can share Mount points",
    "start": "837519",
    "end": "843160"
  },
  {
    "text": "between each other and they can share their isolators meaning how much CPU and memory the combined unit can have now",
    "start": "843160",
    "end": "849600"
  },
  {
    "text": "once you have a pod concept it makes it really easy to schedule across a cluster you can say these things must go",
    "start": "849600",
    "end": "855560"
  },
  {
    "text": "together and you don't end up in a situation where half of your dependencies land on a host and the",
    "start": "855560",
    "end": "860839"
  },
  {
    "text": "other half may be pending and can't find a home and get scheduled so you resolve that by having a",
    "start": "860839",
    "end": "866839"
  },
  {
    "text": "pod um volumes like we saw earlier in the Manifest how volumes are actually um managed or how they're mounted um",
    "start": "866839",
    "end": "873399"
  },
  {
    "text": "executor's job is to to do that um by default um you need to be able to handle",
    "start": "873399",
    "end": "879320"
  },
  {
    "text": "various networking so we have a networking um implementation or standard won't go into details there but one of",
    "start": "879320",
    "end": "885480"
  },
  {
    "text": "the implementations of appc which is rocket has support for Network plugins so you can do things like ipv Lan or",
    "start": "885480",
    "end": "892279"
  },
  {
    "text": "DHCP something similar to the docker Bridge your choice you bringing your own plug-in and then resource isolator on",
    "start": "892279",
    "end": "899600"
  },
  {
    "text": "Linux that would be cgroups right the ability to specify CPU limitations memory Li limitations dis iio Network",
    "start": "899600",
    "end": "907199"
  },
  {
    "text": "iio all the things that the konel supports you can express those in a form of isolators now isolators will be",
    "start": "907199",
    "end": "913800"
  },
  {
    "text": "different for different operating systems because they mean different things but in the case of Linux you're basically just describing cgroups and",
    "start": "913800",
    "end": "920240"
  },
  {
    "text": "then logging it also specifies that the the uh runtime is responsible for",
    "start": "920240",
    "end": "925360"
  },
  {
    "text": "handling logs for all of the pods and the containers running in",
    "start": "925360",
    "end": "930880"
  },
  {
    "start": "930000",
    "end": "1019000"
  },
  {
    "text": "them then there's a set of tooling so the default tool that ships inside the application spec repository",
    "start": "930880",
    "end": "938279"
  },
  {
    "text": "it's called AC tool and what AC tool will allow you to do is build a container so let's say um you have a CI",
    "start": "938279",
    "end": "944639"
  },
  {
    "text": "system and you're building your application what you can do is line up the uh root file system for your app put",
    "start": "944639",
    "end": "951279"
  },
  {
    "text": "everything in place with just regular move and CP commands and you end up with this directory structure and what you do",
    "start": "951279",
    "end": "957759"
  },
  {
    "text": "is you add in a metadata file describing how that particular application should be executed and you run AC tool build",
    "start": "957759",
    "end": "964240"
  },
  {
    "text": "and it spits out in an ACI or you can do this with just command line tools you can just basically do a tar and gzip on",
    "start": "964240",
    "end": "970839"
  },
  {
    "text": "that and that's the same effect the next thing you can do with the tool is also some ad hoc things",
    "start": "970839",
    "end": "977480"
  },
  {
    "text": "let's say you pull down an ACI and you want to look at it to manifest you can print it out from the command line to see uh what the user's intention was you",
    "start": "977480",
    "end": "985120"
  },
  {
    "text": "can also validate uh these manifest so again standard tools to pull them the Manifest out using tar just to fetch a",
    "start": "985120",
    "end": "990920"
  },
  {
    "text": "single file once I have that single file I can validate that manifest or you can validate your manifest before you build",
    "start": "990920",
    "end": "997000"
  },
  {
    "text": "your ACI you can also uh validate the the actual ACI as you build it and there's other tools for validating",
    "start": "997000",
    "end": "1003519"
  },
  {
    "text": "Discovery end points to make sure you've done it right and finally the AC tool can also be used to validate a",
    "start": "1003519",
    "end": "1009680"
  },
  {
    "text": "implementation of the spec itself right there's a couple aciis we can use to give to an implementation to exercise to",
    "start": "1009680",
    "end": "1016160"
  },
  {
    "text": "see does it actually implement the spec correctly",
    "start": "1016160",
    "end": "1020839"
  },
  {
    "start": "1019000",
    "end": "1099000"
  },
  {
    "text": "another uh piece of toy the last one I'll talk about is Docker to ACI right so docker's ecosystem is vast right",
    "start": "1021199",
    "end": "1027720"
  },
  {
    "text": "that's where the majority of the containers live and there's between docker's image format and appsc they're",
    "start": "1027720",
    "end": "1033600"
  },
  {
    "text": "so similar that we can pull one down on the Fly and convert it so you have multiple options so if you're running uh",
    "start": "1033600",
    "end": "1039520"
  },
  {
    "text": "let's say rocket rocket would take a Docker endpoint grab that container convert it on the Fly and just execute",
    "start": "1039520",
    "end": "1046760"
  },
  {
    "text": "it sometimes you may want to switch things up a little bit so you in my case and we'll see in the demo we can use",
    "start": "1046760",
    "end": "1053160"
  },
  {
    "text": "Docker uh to ACI to download the docker uh container from in this case from the qua IO registry I'm pulling down this",
    "start": "1053160",
    "end": "1059799"
  },
  {
    "text": "container and you notice that my container is pretty tiny it's like 7.8 Megs just a binary and it's compressed",
    "start": "1059799",
    "end": "1065080"
  },
  {
    "text": "form and then it starts converting it to an ACI so it downloads all the layers and the nice thing about this tool it",
    "start": "1065080",
    "end": "1070679"
  },
  {
    "text": "works on any OS where you can you can run this go binary so from my Mac I can actually download all the docker layers",
    "start": "1070679",
    "end": "1077559"
  },
  {
    "text": "and what will happen is it will start start converting things so in your Docker file if you use the volumes",
    "start": "1077559",
    "end": "1083919"
  },
  {
    "text": "directive Docker 2 ACI can pick up on that and actually create all the metadata pieces we need to represent the",
    "start": "1083919",
    "end": "1091200"
  },
  {
    "text": "volumes that you would need in your ACI automatically for you and then it just pops out uh the result and we'll we'll",
    "start": "1091200",
    "end": "1097799"
  },
  {
    "text": "actually go through this so the other part of a or",
    "start": "1097799",
    "end": "1103240"
  },
  {
    "start": "1099000",
    "end": "1227000"
  },
  {
    "text": "application container spec was we wanted to have multiple implementations in order to have a really validated spec",
    "start": "1103240",
    "end": "1108880"
  },
  {
    "text": "you need more than one implementation of it so there's a couple of libraries FC being the one that we use in inside of",
    "start": "1108880",
    "end": "1115120"
  },
  {
    "text": "rocket and there's some C+ plus libraries and there's also some runtime implementation so very shortly after we",
    "start": "1115120",
    "end": "1121679"
  },
  {
    "text": "published a spec someone came through with the FreeBSD jails and ZFS implementation of appc that was really",
    "start": "1121679",
    "end": "1128799"
  },
  {
    "text": "awesome and they did this independently by just following the docks on the site um kruma which is a container",
    "start": "1128799",
    "end": "1135320"
  },
  {
    "text": "management orchestration tool from a company in US called abser and that's pretty interesting they have",
    "start": "1135320",
    "end": "1140840"
  },
  {
    "text": "this container OS that basically runs application containers but was designed",
    "start": "1140840",
    "end": "1146080"
  },
  {
    "text": "to be like this cohesive hole so it's just a clustered OS by default and they just chose to use appc because it was",
    "start": "1146080",
    "end": "1152080"
  },
  {
    "text": "specified enough for them to avoid implementing their own thing and follow standards that were already published",
    "start": "1152080",
    "end": "1158159"
  },
  {
    "text": "and of course rocket one thing about rocket and its runtime implementation a lot of people don't know at a very high",
    "start": "1158159",
    "end": "1164400"
  },
  {
    "text": "level there's some details there but at a high level what rocket does is it takes these root file",
    "start": "1164400",
    "end": "1169840"
  },
  {
    "text": "systems and we have these things called different stages stage zero stage one and stage two with Stage zero our job is",
    "start": "1169840",
    "end": "1177880"
  },
  {
    "text": "to download all of those acis and construct a file system so you can",
    "start": "1177880",
    "end": "1182919"
  },
  {
    "text": "imagine doing this where there's a Java acci that just has your jvm there's another ACI that actually has like your",
    "start": "1182919",
    "end": "1188640"
  },
  {
    "text": "War file your application and maybe some other things that need to run on top and what we can do is we can construct this",
    "start": "1188640",
    "end": "1194159"
  },
  {
    "text": "and lay it out into a final root file system and what we do in rocket is we take that root file system and we give",
    "start": "1194159",
    "end": "1201000"
  },
  {
    "text": "it to systemd Inspa and let it manage us the process for you and the way we make it work with system D Inspa or system D",
    "start": "1201000",
    "end": "1207400"
  },
  {
    "text": "in general is we look at your manifest and we can automatically generate systemd unit files for you and say that",
    "start": "1207400",
    "end": "1214400"
  },
  {
    "text": "here's the execution Point here's the commands you need here's all the buy mounts you need and we can turn it over",
    "start": "1214400",
    "end": "1219640"
  },
  {
    "text": "to the OS to manage your application for you so then you inherit all the benefits of something like system D and we'll see",
    "start": "1219640",
    "end": "1226159"
  },
  {
    "text": "what that looks like all right so before we get to the demo we're going to talk about rocket a",
    "start": "1226159",
    "end": "1231919"
  },
  {
    "text": "little bit and then I'm going to get hands on with this so you guys can feel the actual flow for this so rocket we",
    "start": "1231919",
    "end": "1238039"
  },
  {
    "text": "had to change our name because of name clashes with other projects so we just call it rkt but we still pronounce it",
    "start": "1238039",
    "end": "1246240"
  },
  {
    "start": "1246000",
    "end": "1428000"
  },
  {
    "text": "rocket so rocket is a CLI tool for running app containers on Linux that's",
    "start": "1246240",
    "end": "1253200"
  },
  {
    "text": "specific right there's no plans to make it work on any other platforms but Linux we hope to see other implementations on",
    "start": "1253200",
    "end": "1259760"
  },
  {
    "text": "other platforms using their native constructs but Rocket won't be that Universal tool to do that at least",
    "start": "1259760",
    "end": "1265960"
  },
  {
    "text": "today the important thing to understand that rocket has no Damon at all right so",
    "start": "1265960",
    "end": "1271240"
  },
  {
    "text": "there is no rocket Damon that runs that you interact with you know rocket runs in the foreground and this works well with",
    "start": "1271240",
    "end": "1277880"
  },
  {
    "text": "systems like upstart and system D because they will take over and manage to process going forward so we have to",
    "start": "1277880",
    "end": "1284760"
  },
  {
    "text": "do some really tricky things if you have a command line tool that has um on system store where you're storing all",
    "start": "1284760",
    "end": "1290760"
  },
  {
    "text": "your images once you download them then you have to do things like file system locks and advisory locks to make sure that multiple instances of the CLI don't",
    "start": "1290760",
    "end": "1298120"
  },
  {
    "text": "start colliding and overriding data but we handle that the oldfashioned way with with B file locks now one thing that's",
    "start": "1298120",
    "end": "1305080"
  },
  {
    "text": "unique in rocket is that the execution engine is swappable so what I explained earlier was that we use system D and",
    "start": "1305080",
    "end": "1312080"
  },
  {
    "text": "system D in spawn to take your ACI and run it ideally you could use Li container right from the docker project",
    "start": "1312080",
    "end": "1318039"
  },
  {
    "text": "and do the exact same thing you just have to interpret the metadata and do what you need to or in the case of Intel",
    "start": "1318039",
    "end": "1324840"
  },
  {
    "text": "they actually take your aciis and run them in a very specialized VM that runs in KVM that",
    "start": "1324840",
    "end": "1333080"
  },
  {
    "text": "gives you not twoo bad execution speed they come up in about 150 milliseconds and the nice thing about it",
    "start": "1333080",
    "end": "1340240"
  },
  {
    "text": "is you know people that are worried about container security you probably should be worried about container security because it's not meant as a",
    "start": "1340240",
    "end": "1346600"
  },
  {
    "text": "security boundary it's meant more to kind of give you isolation if you throw it in a VM you kind of inherit that that",
    "start": "1346600",
    "end": "1353640"
  },
  {
    "text": "wall Garden some people are looking for so what Intel does is they take rocket and add a different execution stage one",
    "start": "1353640",
    "end": "1361200"
  },
  {
    "text": "where they just throw it inside of KVM and boot it from there right but the workflow feels exactly the same you have",
    "start": "1361200",
    "end": "1367320"
  },
  {
    "text": "an ACI you give it to executor and the executor just chooses his backend that it wants to run",
    "start": "1367320",
    "end": "1372919"
  },
  {
    "text": "under or you have the option of just running Docker images straight up straight from whatever register you have",
    "start": "1372919",
    "end": "1380120"
  },
  {
    "text": "works just fine in most cases um and it's friendly within it systems and cluster orchestration tools so one thing",
    "start": "1380120",
    "end": "1386720"
  },
  {
    "text": "we wanted to do was make sure rocket was small enough to be something you build platforms on top of the good news is a",
    "start": "1386720",
    "end": "1393279"
  },
  {
    "text": "lot of the work we've done in rocket um and the collaboration that we're doing with the docker team is to try to get",
    "start": "1393279",
    "end": "1400400"
  },
  {
    "text": "some of the same modularity inside of Docker so it would be nice if you can take Docker and run it without the Damon",
    "start": "1400400",
    "end": "1406279"
  },
  {
    "text": "or maybe take Docker and run it with only the bill steps right or have Docker do something where it just runs in the",
    "start": "1406279",
    "end": "1412360"
  },
  {
    "text": "foreground and allows something like system D to take over and then pods are",
    "start": "1412360",
    "end": "1417600"
  },
  {
    "text": "that unique concept again you can run one or more containers in a single execution unit and if you do that those",
    "start": "1417600",
    "end": "1425080"
  },
  {
    "text": "pods get shared name spaces and optionally volumes so we talked about system D and",
    "start": "1425080",
    "end": "1433600"
  },
  {
    "start": "1428000",
    "end": "1515000"
  },
  {
    "text": "here's a little bit more detail um Intel calls their implementation clear containers right int has done a lot of",
    "start": "1433600",
    "end": "1439320"
  },
  {
    "text": "work and investment in getting VMS to be fast with their vxt extensions and all the security that they they've done",
    "start": "1439320",
    "end": "1445360"
  },
  {
    "text": "around it so what they decided to do was to take a lot of the other technology that you find in the kernel and they",
    "start": "1445360",
    "end": "1451360"
  },
  {
    "text": "actually figured out a way to speed things up so most VMS today boot in I don't know seconds sometimes minutes",
    "start": "1451360",
    "end": "1457919"
  },
  {
    "text": "depending on your platform but seconds are really slow in comparison to what you get from a container runtime like",
    "start": "1457919",
    "end": "1463400"
  },
  {
    "text": "Docker or rocket so what they've managed to do was figure out how to build a very",
    "start": "1463400",
    "end": "1468559"
  },
  {
    "text": "thin a West just enough to get you to Docker right even skipping the BIOS boot",
    "start": "1468559",
    "end": "1474919"
  },
  {
    "text": "process because they don't need it right they know that you're not going to be trying to run a full system there so you just skip the whole thing and you go",
    "start": "1474919",
    "end": "1480919"
  },
  {
    "text": "straight into the kernel into Docker and you run the container doing that allows them to get the overhead way down so",
    "start": "1480919",
    "end": "1487960"
  },
  {
    "text": "you're going to have an additional 18 to 20 Megs of overhead of memory but you get all the things that were you used to",
    "start": "1487960",
    "end": "1494279"
  },
  {
    "text": "before so if you have some KVM management tools guess what they just work if you have fancy overlay",
    "start": "1494279",
    "end": "1499399"
  },
  {
    "text": "networking thing that you're using with KVM it works you want to use open stack management tools with with",
    "start": "1499399",
    "end": "1505520"
  },
  {
    "text": "rocket will just work and the same thing can possibly be applied to um Docker by",
    "start": "1505520",
    "end": "1511080"
  },
  {
    "text": "building another execution back end all right so here's how rocket works",
    "start": "1511080",
    "end": "1517399"
  },
  {
    "start": "1515000",
    "end": "1564000"
  },
  {
    "text": "at a very high level so remember I said by default you have to trust the images",
    "start": "1517399",
    "end": "1523399"
  },
  {
    "text": "that you're pulling down now there is a flag where you can skip the verification but we try not to promote that idea we",
    "start": "1523399",
    "end": "1529159"
  },
  {
    "text": "want this idea where in this case if I want to download this kubernetes um set",
    "start": "1529159",
    "end": "1534880"
  },
  {
    "text": "of binaries or aciis I need to trust the public key first right key distribution",
    "start": "1534880",
    "end": "1540679"
  },
  {
    "text": "is a problem trusting keys from people is a problem but once you do trust someone this is how you add it to your",
    "start": "1540679",
    "end": "1546960"
  },
  {
    "text": "store so in this case I'm making this a root key saying you know what anything signed by that key I'm willing to trust",
    "start": "1546960",
    "end": "1553880"
  },
  {
    "text": "now you can scope this down and say you know what I trust that key for a single ACI image that's it or maybe from",
    "start": "1553880",
    "end": "1560799"
  },
  {
    "text": "anything from a specific domain if you want to just download an",
    "start": "1560799",
    "end": "1567279"
  },
  {
    "start": "1564000",
    "end": "1657000"
  },
  {
    "text": "ACI and verify it you run the rocket fetch command and once you've downloaded a few of these things you can call uh",
    "start": "1567279",
    "end": "1574080"
  },
  {
    "text": "the images to see everything that's installed on your system now one thing to keep in mind",
    "start": "1574080",
    "end": "1580799"
  },
  {
    "text": "when rocket downloads an ACI we store it by its hash right so a lot of people are",
    "start": "1580799",
    "end": "1587600"
  },
  {
    "text": "thrown off when you take a container and you call it I don't know 019 and you",
    "start": "1587600",
    "end": "1593520"
  },
  {
    "text": "push that tag up well anyone's free to just overwrite that tag again right and",
    "start": "1593520",
    "end": "1598600"
  },
  {
    "text": "guess what 019 is this new thing it was something else yesterday but it's this new thing um today and that will throw",
    "start": "1598600",
    "end": "1606120"
  },
  {
    "text": "you off because it doesn't behave the same way even though it has the same name so in rocket when you go and fetch",
    "start": "1606120",
    "end": "1611200"
  },
  {
    "text": "a container we take that we get the we make a hash of it um sha 512 and then we",
    "start": "1611200",
    "end": "1617159"
  },
  {
    "text": "store it in a contenter addressable store meaning that when you want to run that thing again we look up the index and we run that hash that's it we're not",
    "start": "1617159",
    "end": "1624399"
  },
  {
    "text": "going to go fetch something because it has the same name if you don't match that hash we're not running it if",
    "start": "1624399",
    "end": "1630640"
  },
  {
    "text": "anything is thrown off with the contents on this it's going to be broken right this gives people a little bit more security and Reliance on what you",
    "start": "1630640",
    "end": "1637000"
  },
  {
    "text": "actually have the great news is in docker's V2 uh spec they're planning to do the exact",
    "start": "1637000",
    "end": "1643480"
  },
  {
    "text": "same thing so if you've seen some of the work in Docker V2 you can actually address containers by their their es now",
    "start": "1643480",
    "end": "1649320"
  },
  {
    "text": "right so this is very key to actually having kind of this immutable infrastructure or something that you can actually trust so that's excellent to",
    "start": "1649320",
    "end": "1657960"
  },
  {
    "start": "1657000",
    "end": "1741000"
  },
  {
    "text": "see now when you want to run a pod when you launch a pod um even though you're in this case I'm running a single",
    "start": "1658080",
    "end": "1664440"
  },
  {
    "text": "container they still run in a pod um here's what you do now this is kind of our Bose rocket does have config files",
    "start": "1664440",
    "end": "1671760"
  },
  {
    "text": "so if you didn't want to specify this on command line you can actually put it in what we call aod manifest so it's basically like ajacent description of",
    "start": "1671760",
    "end": "1678240"
  },
  {
    "text": "all the flags that you need to pass all the volumes and then you can just pass config files to Rocket instead of all",
    "start": "1678240",
    "end": "1683919"
  },
  {
    "text": "these flags but here I'm showing it this way for Simplicity so inside of our ACI",
    "start": "1683919",
    "end": "1689039"
  },
  {
    "text": "we specify that we need some volumes and then at runtime we map those volumes in",
    "start": "1689039",
    "end": "1695120"
  },
  {
    "text": "and we have to be specific the volume comes from the host we can also Mark them read only very similar to the way",
    "start": "1695120",
    "end": "1701039"
  },
  {
    "text": "Docker handles volumes and then here again we're specifying uh the ACI that",
    "start": "1701039",
    "end": "1706320"
  },
  {
    "text": "we want now remember one once we use this name and we do download an ACI future runs will use the hash instead",
    "start": "1706320",
    "end": "1713840"
  },
  {
    "text": "going back out to the internet and then the rest of these are the flag uh pass at the entry point into the Container",
    "start": "1713840",
    "end": "1720760"
  },
  {
    "text": "very similar to what you do in Docker and then if I want to list the things that are running we would run the",
    "start": "1720760",
    "end": "1726120"
  },
  {
    "text": "list command you also have the ability to use the other systemd commands like machine CTL because when we run a rocket",
    "start": "1726120",
    "end": "1732720"
  },
  {
    "text": "container we register with systemd and all the other OS tooling just works Journal everything else in the OS is",
    "start": "1732720",
    "end": "1739799"
  },
  {
    "text": "fully integrated and then finally when you run a lot of containers I don't know how",
    "start": "1739799",
    "end": "1745760"
  },
  {
    "start": "1741000",
    "end": "1815000"
  },
  {
    "text": "many of you run into this you're running containers containers containers they die they come and go they come and go and then you do like Docker ps- a and",
    "start": "1745760",
    "end": "1753440"
  },
  {
    "text": "you're like whoa who did that right and then you're not really sure on which ones you can delete because you might",
    "start": "1753440",
    "end": "1760720"
  },
  {
    "text": "try to delete one that's actually still being used by someone it's hilarious when you do that um so what we do in in",
    "start": "1760720",
    "end": "1766559"
  },
  {
    "text": "rocket we have this we basically took a very simple approach to garbage collecting the containers we're like",
    "start": "1766559",
    "end": "1772600"
  },
  {
    "text": "okay if the container isn't running anymore and it's being referenced by no one else then we just do this one part",
    "start": "1772600",
    "end": "1779320"
  },
  {
    "text": "where we sweep we just say hey we're going to or we Mark all the pods we move them into a different directory on the",
    "start": "1779320",
    "end": "1784880"
  },
  {
    "text": "file system implementation detail but we just mark them and it gives you time to like hey maybe start it again and then",
    "start": "1784880",
    "end": "1792159"
  },
  {
    "text": "we have some policies so by default every 30 minutes we go through everything that has been garbage",
    "start": "1792159",
    "end": "1797519"
  },
  {
    "text": "collected or marked we sweet them they go away and we did it in a way where you",
    "start": "1797519",
    "end": "1803120"
  },
  {
    "text": "can actually run that command inside of a Cron job right so you would mark them on your timetable you sweet them on your",
    "start": "1803120",
    "end": "1809640"
  },
  {
    "text": "timetable or you can just do them manually again there's no damage so you're you're free to figure out how you want to do",
    "start": "1809640",
    "end": "1816399"
  },
  {
    "start": "1815000",
    "end": "1875000"
  },
  {
    "text": "this and then this is how you run rocket with system D up start will look",
    "start": "1816399",
    "end": "1821440"
  },
  {
    "text": "something similar so this is a normal system de unit so instead of running a uh binary Here We Run The Rocket command",
    "start": "1821440",
    "end": "1828240"
  },
  {
    "text": "that we saw on the command line earlier and then you get to use the rest of the systemd process management meaning",
    "start": "1828240",
    "end": "1833440"
  },
  {
    "text": "restart policies all the other error checking and another big one to me that",
    "start": "1833440",
    "end": "1838519"
  },
  {
    "text": "I think is really powerful and most people Overlook is the ability to depend on another service right like do not start this",
    "start": "1838519",
    "end": "1845519"
  },
  {
    "text": "service unless this other service starts right so systemd kind of gives you that for free we're not going to try to",
    "start": "1845519",
    "end": "1850960"
  },
  {
    "text": "implement that in rocket let a better process manager handle it and then you just use your normal system tools right",
    "start": "1850960",
    "end": "1858000"
  },
  {
    "text": "so on the first boot this thing will be downloaded stored in the content addressable store validated if",
    "start": "1858000",
    "end": "1863200"
  },
  {
    "text": "everything checks out it will run if not it will fail and system D will tell you hey here's the error we got from rocket",
    "start": "1863200",
    "end": "1869360"
  },
  {
    "text": "invalid container won't",
    "start": "1869360",
    "end": "1872519"
  },
  {
    "start": "1875000",
    "end": "2001000"
  },
  {
    "text": "run all right so that's the overview of appc and Rocket so what I'm going to try",
    "start": "1875279",
    "end": "1881399"
  },
  {
    "text": "to do now is run through the conversion of some Docker containers we'll look at",
    "start": "1881399",
    "end": "1886600"
  },
  {
    "text": "the docker files and and just see what it takes to make them aciis right and I'm going to try to pick a complex set",
    "start": "1886600",
    "end": "1892399"
  },
  {
    "text": "of things um there's a project called kubernetes by Google that allows you to manage uh containers and",
    "start": "1892399",
    "end": "1899399"
  },
  {
    "text": "scale so what I've done is and I like to use Docker a lot actually so I've made",
    "start": "1899399",
    "end": "1905480"
  },
  {
    "text": "Docker containers for each of these things all right so I did it in a way where I actually use something like composed to spin up a full kubernetes",
    "start": "1905480",
    "end": "1911720"
  },
  {
    "text": "cluster if you're interested in that you can check out those details but what we're going to focus on here is basically I created a bunch of",
    "start": "1911720",
    "end": "1918639"
  },
  {
    "text": "Docker containers that look like this right very simple I do my build in CI because I don't like big Bill containers",
    "start": "1918639",
    "end": "1925240"
  },
  {
    "text": "so I take my artifacts I copy them into place and what I'm doing here is specifying every single volume that I",
    "start": "1925240",
    "end": "1932039"
  },
  {
    "text": "plan to map in in the future I'm doing this to give hints to the ACI tools for conversion all right because without",
    "start": "1932039",
    "end": "1938679"
  },
  {
    "text": "this I will have to do some weird things and I'll show you some of those issues the most complicated Docker file that I",
    "start": "1938679",
    "end": "1944480"
  },
  {
    "text": "have in this whole stack is the kuet the kuet is interesting because it interacts",
    "start": "1944480",
    "end": "1950159"
  },
  {
    "text": "with the host and it needs to do some weird things to the host and it has a little bit of trouble running from a container I need to know the host's",
    "start": "1950159",
    "end": "1957000"
  },
  {
    "text": "release I need to actually be able to inspect things that docker's doing um I also need to run some binaries that live",
    "start": "1957000",
    "end": "1965039"
  },
  {
    "text": "on the host and I need to do some hackery I need to use NS enter to enter the namespace of the host so I can do",
    "start": "1965039",
    "end": "1971519"
  },
  {
    "text": "Mount points there so that way when things are mounted via Docker back in other containers it still works so this",
    "start": "1971519",
    "end": "1976799"
  },
  {
    "text": "is pretty complex um image that when I run it I'm going to have to mount a few things in so I",
    "start": "1976799",
    "end": "1982679"
  },
  {
    "text": "specify all the mounts now you guys know what building Docker images look like so",
    "start": "1982679",
    "end": "1989080"
  },
  {
    "text": "once I have all my images built and this is the part where we'll do a bit of a walk through so what I want to do is",
    "start": "1989080",
    "end": "1995600"
  },
  {
    "text": "take all my aciis that are running in qu. IO and convert them to acis all right so the way we do",
    "start": "1995600",
    "end": "2002080"
  },
  {
    "start": "2001000",
    "end": "2129000"
  },
  {
    "text": "that is we'll use the docker to ACI tool so I've downloaded them in case Wi-Fi",
    "start": "2002080",
    "end": "2007519"
  },
  {
    "text": "doesn't work but we'll try a couple of them so you can see the idea here so we'll start with uh let's do the API",
    "start": "2007519",
    "end": "2016840"
  },
  {
    "text": "server so what we do here is we run the docker to ACI command and we give it",
    "start": "2016840",
    "end": "2021919"
  },
  {
    "text": "this prefix you know Docker colon colon I mean colon SL that knows it needs to go out to Docker and what will happen",
    "start": "2021919",
    "end": "2028880"
  },
  {
    "text": "here uh Wi-Fi please work is we'll start downloading each of the",
    "start": "2028880",
    "end": "2034399"
  },
  {
    "text": "layers and once we have them all on disk we'll go through the conversion process meaning we just want the root file",
    "start": "2034399",
    "end": "2040760"
  },
  {
    "text": "system and if you ever looked inside of a Docker image there's a bunch of other loot root file systems that make up the",
    "start": "2040760",
    "end": "2045960"
  },
  {
    "text": "different layers we take all of those and just combine it and basically flatten the whole thing out we rip out",
    "start": "2045960",
    "end": "2051000"
  },
  {
    "text": "the metadata from Docker look at it it's a Json file and we convert it and map the keys that make sense and then we end",
    "start": "2051000",
    "end": "2057200"
  },
  {
    "text": "up with something like this right so once you have one of those you can use uh AC tool to cat uh",
    "start": "2057200",
    "end": "2067079"
  },
  {
    "text": "the Manifest let's",
    "start": "2067079",
    "end": "2071679"
  },
  {
    "text": "see so there's a couple of commands here we can C the Manifest we can do some validation to make sure the thing that",
    "start": "2072879",
    "end": "2078800"
  },
  {
    "text": "actually converted actually works if we want to we can C the Manifest",
    "start": "2078800",
    "end": "2084760"
  },
  {
    "text": "file come on manifest and then we're going to pry print it so we can actually",
    "start": "2085119",
    "end": "2090240"
  },
  {
    "text": "see what it looks like without um a mess of Jason on my screen",
    "start": "2090240",
    "end": "2095480"
  },
  {
    "text": "and we downloaded the kuet so that's Kelsey Tower and CP API",
    "start": "2095480",
    "end": "2100640"
  },
  {
    "text": "server and that's what the conversion looks like right so the tag we got from",
    "start": "2100640",
    "end": "2105880"
  },
  {
    "text": "Docker ended up being our version uh the name is qu. iio I actually don't like",
    "start": "2105880",
    "end": "2111000"
  },
  {
    "text": "that name so I want to change this right but I don't want to manually go in and rip this thing down and put it back",
    "start": "2111000",
    "end": "2116640"
  },
  {
    "text": "together so what we can do is uh use the patch command so I can",
    "start": "2116640",
    "end": "2123200"
  },
  {
    "text": "actually patch some acis so here and I'll just put this on the terminal so you can see it a little",
    "start": "2123200",
    "end": "2129560"
  },
  {
    "start": "2129000",
    "end": "2181000"
  },
  {
    "text": "better we can call the ACI patch manifest command I can rename the",
    "start": "2129560",
    "end": "2135800"
  },
  {
    "text": "ACI and that's all I really want to do for this one and what's Happening Here is the ACI",
    "start": "2135800",
    "end": "2143000"
  },
  {
    "text": "is being ripped apart the Manifest is being grabbed out updating some values",
    "start": "2143000",
    "end": "2148040"
  },
  {
    "text": "that we want and is being put back together now those are all pretty simple but the one that's a little bit more",
    "start": "2148040",
    "end": "2154160"
  },
  {
    "text": "complex is the actual kuet one mount point that I can't do in ACI or that Docker won't allow you to do",
    "start": "2154160",
    "end": "2160920"
  },
  {
    "text": "is mounting in Etsy resolve. right that's added at runtime by Docker if you try to specify that as a volume Docker",
    "start": "2160920",
    "end": "2167839"
  },
  {
    "text": "won't allow you to build a container so what I have to do is do it after the fact so I'm going to patch that in um",
    "start": "2167839",
    "end": "2173640"
  },
  {
    "text": "using the patch command so for the kuet we'll run this command and we also need",
    "start": "2173640",
    "end": "2179000"
  },
  {
    "text": "to run it as a privilege container now in docker's manifest there's no way to say that this needs to be a pill",
    "start": "2179000",
    "end": "2185440"
  },
  {
    "start": "2181000",
    "end": "2241000"
  },
  {
    "text": "container but in ACI I have to specify this so in order to do that I can",
    "start": "2185440",
    "end": "2191000"
  },
  {
    "text": "specify amounts that I need to get resolve. and I can actually specify a",
    "start": "2191000",
    "end": "2196040"
  },
  {
    "text": "few more capabilities here so once I have that I build my new",
    "start": "2196040",
    "end": "2202280"
  },
  {
    "text": "container and if you notice I'm actually renaming um all of these containers as I go through this right so I'm stripping",
    "start": "2202280",
    "end": "2209040"
  },
  {
    "text": "off my my prefix from uh the registry so I'm going to go through really quickly",
    "start": "2209040",
    "end": "2214200"
  },
  {
    "text": "and convert the rest of these",
    "start": "2214200",
    "end": "2218040"
  },
  {
    "text": "and once I have these done the next thing we have to do we have to sign them right so signing is pretty straight",
    "start": "2220240",
    "end": "2225800"
  },
  {
    "text": "forward you do everything with gpg so if you have experience with gpg what we can do is we're going to export the public",
    "start": "2225800",
    "end": "2232319"
  },
  {
    "text": "key for my signing key and this is so I can host it on my",
    "start": "2232319",
    "end": "2238280"
  },
  {
    "text": "endpoint so that's the public key that we can trust later and then we can go through and",
    "start": "2238280",
    "end": "2245079"
  },
  {
    "text": "start signing our ACI so I'm just going to use this for Loop and we're just going to go through for each ACI we're",
    "start": "2245079",
    "end": "2251720"
  },
  {
    "text": "going to uh output a detached signature for each of those things all right so we're going to sign them all now this",
    "start": "2251720",
    "end": "2257680"
  },
  {
    "text": "may blow up because I haven't converted all of my contain or acis over let's see",
    "start": "2257680",
    "end": "2263160"
  },
  {
    "text": "what happens all right good assign the ones that were in place so now I have",
    "start": "2263160",
    "end": "2269400"
  },
  {
    "text": "detached signatures for all of the acis right so those are all the artifacts I need now once you have those artifacts",
    "start": "2269400",
    "end": "2277599"
  },
  {
    "text": "I'm just going to store them in a file bucket on Google compute right so this",
    "start": "2277599",
    "end": "2282760"
  },
  {
    "text": "is how you distribute them so you build them you sign them and you host them to where you want now rocket does support I",
    "start": "2282760",
    "end": "2289000"
  },
  {
    "text": "think things like basic off so if you want to put them behind some authentication you can do that um and",
    "start": "2289000",
    "end": "2294319"
  },
  {
    "text": "that backend is pluggable so you can add other authentication mechanisms so here I'm hosting everything that I",
    "start": "2294319",
    "end": "2299800"
  },
  {
    "text": "need the next thing we need to do before we can launch these containers is we need to trust the key so what we do is",
    "start": "2299800",
    "end": "2307800"
  },
  {
    "text": "we hop on our machine so here's the machine running rocket and we tell it to trust that particular public key and",
    "start": "2307800",
    "end": "2313839"
  },
  {
    "text": "we're going to make it a root key so it's asking me do you are you sure you want to trust this particular key so",
    "start": "2313839",
    "end": "2319760"
  },
  {
    "text": "this is my rocket science uh signing key and what happens is it gets stored",
    "start": "2319760",
    "end": "2325319"
  },
  {
    "text": "into the keychain that lives on the server again everything can be done with simple command line tools so if you want",
    "start": "2325319",
    "end": "2330880"
  },
  {
    "text": "to know all the keys that live on your system you can LS rocket trusted Keys directory and they're all stored in",
    "start": "2330880",
    "end": "2336880"
  },
  {
    "text": "there by their fingerprint name right so anything that has that fingerprint that key will be used um during the",
    "start": "2336880",
    "end": "2342520"
  },
  {
    "text": "validation process now once you trust these things um you can run rocket on the command",
    "start": "2342520",
    "end": "2349319"
  },
  {
    "start": "2345000",
    "end": "2404000"
  },
  {
    "text": "lineary remember it'll be pinned to the foreground so what you really want to do is create systemd units for all these",
    "start": "2349319",
    "end": "2355119"
  },
  {
    "text": "things and I've ahead of time put the systemd units in place so here I have a",
    "start": "2355119",
    "end": "2360319"
  },
  {
    "text": "systemd unit for all of these Services if you look at it and some of them have dependencies on others U most of the",
    "start": "2360319",
    "end": "2367359"
  },
  {
    "text": "Services here require that this API server be up and running um and here I'm doing the full configuration for",
    "start": "2367359",
    "end": "2374720"
  },
  {
    "text": "kubernetes and what I want to do if you look at the controller manager it also",
    "start": "2374720",
    "end": "2379880"
  },
  {
    "text": "requires uh the API server but we're just going to let system D work that out for us and we're also going to let",
    "start": "2379880",
    "end": "2385119"
  },
  {
    "text": "system D handle the restarts If This Were to fail all right and also running in the foreground which rocket does by",
    "start": "2385119",
    "end": "2391640"
  },
  {
    "text": "default that means the journal is fully integrated so all logs flow through the system djournal rotations hand handled",
    "start": "2391640",
    "end": "2399440"
  },
  {
    "text": "and all of those things we don't have to go look for logs for our actual containers once they start running so at",
    "start": "2399440",
    "end": "2405760"
  },
  {
    "start": "2404000",
    "end": "2444000"
  },
  {
    "text": "this point we can just start these things so let's see where we are okay so",
    "start": "2405760",
    "end": "2411880"
  },
  {
    "text": "we can enable them if you want them to start automatically at boot time or you just call the start command for system D",
    "start": "2411880",
    "end": "2417839"
  },
  {
    "text": "so we'll do this here we'll do the controller manager um it really doesn't matter what",
    "start": "2417839",
    "end": "2423680"
  },
  {
    "text": "order I start these in mainly because um the actual binaries themselves are small smart enough to wait for the dependencies to come up we'll start",
    "start": "2423680",
    "end": "2432040"
  },
  {
    "text": "theuer and then we'll finally start the kuet itself all right now you can from here on out you",
    "start": "2432040",
    "end": "2439520"
  },
  {
    "text": "can actually use systemd commands to figure out things about your processes manage them that way if you want or you",
    "start": "2439520",
    "end": "2444960"
  },
  {
    "start": "2444000",
    "end": "2469000"
  },
  {
    "text": "can use some rocket commands so I can do rocket list and I see that all of my",
    "start": "2444960",
    "end": "2451119"
  },
  {
    "text": "containers are actually running um we also have integration with machine CTL so we can list them and machine CTL",
    "start": "2451119",
    "end": "2459040"
  },
  {
    "text": "rocket does is it registers all of your containers with system D and then you can start using the machine CTL tools",
    "start": "2459040",
    "end": "2464800"
  },
  {
    "text": "and they're all addressed by this hash and once it's up and running if",
    "start": "2464800",
    "end": "2470560"
  },
  {
    "start": "2469000",
    "end": "2515000"
  },
  {
    "text": "everything is working correctly we should be able to see kubernetes actually working and it",
    "start": "2470560",
    "end": "2477280"
  },
  {
    "text": "does we can actually see that one of the nodes uh got registered in the system so",
    "start": "2477280",
    "end": "2482560"
  },
  {
    "text": "what we've done here is we've taken a set of Docker containers we've converted them to ACI",
    "start": "2482560",
    "end": "2487760"
  },
  {
    "text": "we signed them we patched them we put them into an upstream repository we",
    "start": "2487760",
    "end": "2493119"
  },
  {
    "text": "created some system dunit files for them and then we referenced those acis",
    "start": "2493119",
    "end": "2499400"
  },
  {
    "text": "that we built earlier and now we throw them in system D units and we let the system take over",
    "start": "2499400",
    "end": "2506040"
  },
  {
    "text": "and manage our services just like we were doing before for like RPMs or stanic L drro and now we have a full",
    "start": "2506040",
    "end": "2512359"
  },
  {
    "text": "kubernetes single no cluster up and running so with that I like to clude the",
    "start": "2512359",
    "end": "2517760"
  },
  {
    "start": "2515000",
    "end": "2736000"
  },
  {
    "text": "presentation and open it up for questions thank [Applause]",
    "start": "2517760",
    "end": "2528800"
  },
  {
    "text": "you I'll take that first",
    "start": "2528800",
    "end": "2532520"
  },
  {
    "text": "question responsible for is it the person that creates image that signs it",
    "start": "2535000",
    "end": "2540040"
  },
  {
    "text": "or is it the repository that signs the image if you see what I mean so the question was who's responsible for",
    "start": "2540040",
    "end": "2546400"
  },
  {
    "text": "signing the image um you always want the responsibility to be the person that's Distributing and",
    "start": "2546400",
    "end": "2552079"
  },
  {
    "text": "building the image right that's the trust relationship you want to have so not with the repository because who is",
    "start": "2552079",
    "end": "2557599"
  },
  {
    "text": "the repository right a single entity signing all the images number one if",
    "start": "2557599",
    "end": "2562720"
  },
  {
    "text": "they didn't build the image or it didn't originate for them it's really hard for them to be responsible so ideally if you",
    "start": "2562720",
    "end": "2568839"
  },
  {
    "text": "can get it closest to the person that's actually building or compiling or writing the software that's the entity",
    "start": "2568839",
    "end": "2574240"
  },
  {
    "text": "that you want to trust yeah so trust is hard right like if you",
    "start": "2574240",
    "end": "2580880"
  },
  {
    "text": "want to so the question was followup question was then you need a key for every follow-up image so there may be a",
    "start": "2580880",
    "end": "2586680"
  },
  {
    "text": "world where you do have someone that will curate content you know there's nothing stopping someone from becoming the centralized distribution that has",
    "start": "2586680",
    "end": "2593760"
  },
  {
    "text": "some type of qualification process to say hey we vetted these things and we trust them and then you establish trust",
    "start": "2593760",
    "end": "2600000"
  },
  {
    "text": "with those entities since they're detached signatures they can be resigned right so you can have many signatures",
    "start": "2600000",
    "end": "2605680"
  },
  {
    "text": "for them right so since it's not baked into the actual image you're free to go grab these things and resign them for",
    "start": "2605680",
    "end": "2611240"
  },
  {
    "text": "your own entity and say yeah we trusted the person we've downloaded it we validated it now let's move it into our",
    "start": "2611240",
    "end": "2616760"
  },
  {
    "text": "own repository and we'll resign them with our key right and then you trust that key instead good",
    "start": "2616760",
    "end": "2623960"
  },
  {
    "text": "question um I noticed that uh yeah so the question is all the commands that",
    "start": "2624240",
    "end": "2629640"
  },
  {
    "text": "I've been running so far like this rocket list command um require pseudo right and the question is can you run",
    "start": "2629640",
    "end": "2636160"
  },
  {
    "text": "rocket as a non user on the system so we're working on that the main issue is that access to the C where everything is",
    "start": "2636160",
    "end": "2642800"
  },
  {
    "text": "stored so if we look under VAR lib rocket um this is where all the content addressable stuff is so all the blobs",
    "start": "2642800",
    "end": "2650200"
  },
  {
    "text": "all the hashes and that's a secure location and the only person right now that we allow to read that is root so we",
    "start": "2650200",
    "end": "2656559"
  },
  {
    "text": "got to figure out a u you know a way how we can divide these privileges up right so what we want to do is have the",
    "start": "2656559",
    "end": "2661800"
  },
  {
    "text": "ability to download content as any user um view only probably authorized",
    "start": "2661800",
    "end": "2667800"
  },
  {
    "text": "users but then runtime will require the permissions needed to run a binary on the particular system so",
    "start": "2667800",
    "end": "2675400"
  },
  {
    "text": "today right so this is where we're this is what we're getting at if if we can just we can we have to figure out what",
    "start": "2678240",
    "end": "2683480"
  },
  {
    "text": "that model looks like from a ux standpoint it's easier to centralize it all but you can imagine a world where",
    "start": "2683480",
    "end": "2689200"
  },
  {
    "text": "there's like containers that get installed locally into your user directory and they only live there right",
    "start": "2689200",
    "end": "2694920"
  },
  {
    "text": "so since it's file system based there's really nothing stopping us from saying here's one set of trusted Keys here's",
    "start": "2694920",
    "end": "2701559"
  },
  {
    "text": "one set of Cs for all the images and that's just local to your particular home directory and then things launch",
    "start": "2701559",
    "end": "2707400"
  },
  {
    "text": "and live there only right so we set ourselves up to be able to do that right it's just a matter of priority good",
    "start": "2707400",
    "end": "2715079"
  },
  {
    "text": "question any other questions cool well fantastic um thank",
    "start": "2715079",
    "end": "2721760"
  },
  {
    "text": "you guys for attending [Applause]",
    "start": "2721760",
    "end": "2727820"
  },
  {
    "text": "[Music]",
    "start": "2727820",
    "end": "2736889"
  }
]