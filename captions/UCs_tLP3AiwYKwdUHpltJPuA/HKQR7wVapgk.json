[
  {
    "text": "thanks Dave g'day my name is Brendan and I'd like to thank the Yale organizers especially Dave and I know for inviting",
    "start": "7919",
    "end": "14880"
  },
  {
    "text": "me back I'd like to thank you for attending both present and online and",
    "start": "14880",
    "end": "20220"
  },
  {
    "text": "I'd like to acknowledge the traditional owners of the land and pay my respects to the elders past and present",
    "start": "20220",
    "end": "28619"
  },
  {
    "text": "in the past five weeks I've learned about five new startups that are doing",
    "start": "28619",
    "end": "34680"
  },
  {
    "text": "ebpf or flame graphs or both this industry seems to be exploding it's",
    "start": "34680",
    "end": "40860"
  },
  {
    "text": "really exciting it's also very difficult to explain imagine it's 1996 and you're trying to",
    "start": "40860",
    "end": "48539"
  },
  {
    "text": "explain people what JavaScript means and what JavaScript will do to the industry you'll be playing games in your browser",
    "start": "48539",
    "end": "55199"
  },
  {
    "text": "you'll be doing banking in Netscape navigate and Mozilla it's the old browsers that",
    "start": "55199",
    "end": "61500"
  },
  {
    "text": "we used to use so BPF is similar in that we can now Define programs of the kernel runs in a",
    "start": "61500",
    "end": "69119"
  },
  {
    "text": "way that you can Define JavaScript programs that the browser runs but it is quite abstract and so as a way",
    "start": "69119",
    "end": "77100"
  },
  {
    "text": "to explain BPF I'm going to use a concrete example which is flame graphs and how ebpf is helping with flame",
    "start": "77100",
    "end": "83939"
  },
  {
    "text": "graphs hands up if you're already using flame graphs if you know that you are",
    "start": "83939",
    "end": "89939"
  },
  {
    "text": "okay so we we only have a dozen people so hopefully a couple of weeks after",
    "start": "89939",
    "end": "95040"
  },
  {
    "text": "this conference there will be most of you if you're looking after software you'll have created a flame graph for",
    "start": "95040",
    "end": "100860"
  },
  {
    "text": "your product so cover CPU fine graphs ebpf and then",
    "start": "100860",
    "end": "106380"
  },
  {
    "text": "how they fit together",
    "start": "106380",
    "end": "109100"
  },
  {
    "text": "simply flame graphs show a CPU profile so you can understand",
    "start": "111600",
    "end": "117380"
  },
  {
    "text": "what is running on CPU up begun by showing a stack Trace so running jstack on a Java program",
    "start": "117380",
    "end": "124259"
  },
  {
    "text": "you should be familiar with stack traces especially when your program blows up this shows main called function a called",
    "start": "124259",
    "end": "129599"
  },
  {
    "text": "function B called function C to understand what software is doing you",
    "start": "129599",
    "end": "135180"
  },
  {
    "text": "can collect lots of Stack traces that's a CPU profile there's different ways to do it you can do time sampling where I'm",
    "start": "135180",
    "end": "141360"
  },
  {
    "text": "taking a stack Trace every 10 milliseconds or 100 milliseconds or I can instrument function calls or method",
    "start": "141360",
    "end": "147959"
  },
  {
    "text": "calls and then gather information on everything every method called that is often prohibitively expensive in",
    "start": "147959",
    "end": "156300"
  },
  {
    "text": "production especially for back-end servers which I spend most of my time on where you may have 200 CPUs all running",
    "start": "156300",
    "end": "162720"
  },
  {
    "text": "Java threads doing millions of methods per second a more practical way to do CPU profiling",
    "start": "162720",
    "end": "168840"
  },
  {
    "text": "is to do time sampling where every 100 milliseconds or so I take a stack sample",
    "start": "168840",
    "end": "174060"
  },
  {
    "text": "across all of those CPUs now if you look at those stack samples",
    "start": "174060",
    "end": "180239"
  },
  {
    "text": "I've got function a was running and then a called B so the stack is now B and",
    "start": "180239",
    "end": "185519"
  },
  {
    "text": "then a and then we went off CPU we didn't sample while we're off CPU you can sample in your office CPU it's called",
    "start": "185519",
    "end": "191340"
  },
  {
    "text": "bull time profiling but there's other ways to get that done which I'll get to",
    "start": "191340",
    "end": "197340"
  },
  {
    "text": "if I were to draw those stack samples together then it would look like this",
    "start": "197340",
    "end": "204060"
  },
  {
    "text": "so I've got each Tower of rectangles is a stack",
    "start": "204060",
    "end": "210420"
  },
  {
    "text": "and the x-axis is the passage of time I've just picked random warm colors to",
    "start": "210420",
    "end": "216780"
  },
  {
    "text": "help visually differentiate all of these boxes otherwise would be a big screen of boxes of the same color",
    "start": "216780",
    "end": "223519"
  },
  {
    "text": "I can do this as a visualization but when you're looking at a server with",
    "start": "223980",
    "end": "230640"
  },
  {
    "text": "60 CPUs or 200 CPUs I might be profiling it I like to use 49 Hertz so I'm",
    "start": "230640",
    "end": "236519"
  },
  {
    "text": "profiling it 49 times per second not 50 hertz or 100 because I don't want",
    "start": "236519",
    "end": "243540"
  },
  {
    "text": "lockstep sampling with some program programmatic activity where you're waking up every 100 milliseconds and",
    "start": "243540",
    "end": "250620"
  },
  {
    "text": "then that will skew the sample and so we like to put a bit of Jitter into our sampling or just pick some weird number",
    "start": "250620",
    "end": "255959"
  },
  {
    "text": "like 49 or 51 so let's say 49 samples and I've got 60 CPUs you end up with lots and lots of",
    "start": "255959",
    "end": "262019"
  },
  {
    "text": "these so if I was to visualize this they would all end up being so narrow you couldn't",
    "start": "262019",
    "end": "267060"
  },
  {
    "text": "draw the function name on the visualization but there's a way to help fix that",
    "start": "267060",
    "end": "275340"
  },
  {
    "text": "and that's where I can merge together adjacent frames so",
    "start": "275340",
    "end": "280860"
  },
  {
    "text": "I've got frame so I've got DDD in a row why don't I just merge them together",
    "start": "280860",
    "end": "287520"
  },
  {
    "text": "that can happen for a long span of time and so the visualization now becomes a",
    "start": "287520",
    "end": "292979"
  },
  {
    "text": "bit more practical because I have room in a profile to label things now I'll show you a",
    "start": "292979",
    "end": "299880"
  },
  {
    "text": "real one so this is a vertex application and I'm showing the passage of time on",
    "start": "299880",
    "end": "307080"
  },
  {
    "text": "the x-axis and these are all stack samples and if the",
    "start": "307080",
    "end": "313380"
  },
  {
    "text": "adjacent frames have the same name then I can join them together and I've got",
    "start": "313380",
    "end": "318840"
  },
  {
    "text": "more room to put the label so you can see about halfway down the the this thing which I haven't named yet you",
    "start": "318840",
    "end": "325259"
  },
  {
    "text": "start to see the names well that's an improvement otherwise it'd just all be hair",
    "start": "325259",
    "end": "332759"
  },
  {
    "text": "but there's a way to go further If instead of having time on the x-axis",
    "start": "332759",
    "end": "340139"
  },
  {
    "text": "I do the alphabet on the x-axis",
    "start": "340139",
    "end": "346259"
  },
  {
    "text": "then I can merge things much better so I now get longer spans can be merged",
    "start": "346259",
    "end": "354539"
  },
  {
    "text": "the previous visualization which was still mostly hair",
    "start": "354539",
    "end": "360660"
  },
  {
    "text": "now looks like this wow I can now read it I can now understand that complicated profile all",
    "start": "360660",
    "end": "367320"
  },
  {
    "text": "at once it's a bit strange because the excess access is not the passage of time",
    "start": "367320",
    "end": "373740"
  },
  {
    "text": "but the width is proportional to presence in the samples so I can see 80 of the time I'm in this stack I mean",
    "start": "373740",
    "end": "382880"
  },
  {
    "text": "ionetti Channel nio and so on I can read it",
    "start": "382880",
    "end": "388160"
  },
  {
    "text": "I can print this out and it works on paper as well I don't need a computer to be able to zoom in and zoom out which",
    "start": "388259",
    "end": "394380"
  },
  {
    "text": "turns out to be useful property when you want to include these in books and articles and jira tickets as images",
    "start": "394380",
    "end": "400979"
  },
  {
    "text": "screenshots people can tweet them people on on",
    "start": "400979",
    "end": "406199"
  },
  {
    "text": "Twitter this is their plane graph for their software and it just makes sense as a picture you can you can browse it",
    "start": "406199",
    "end": "413280"
  },
  {
    "text": "and do performance analysis just from one PNG or jpeg I see these showing up on GitHub all the time when people are",
    "start": "413280",
    "end": "419460"
  },
  {
    "text": "working on issues here's my performance patch here's the flame graph to help improve performance",
    "start": "419460",
    "end": "426080"
  },
  {
    "text": "I'll talk about the origin of flame graphs it's it's it's interesting nowadays there's so many talks on flame",
    "start": "428880",
    "end": "434819"
  },
  {
    "text": "graphs and ebpf other people are talking about flame graphs and explaining how they work I can talk about why I",
    "start": "434819",
    "end": "440160"
  },
  {
    "text": "invented them it was 2011 and I was doing performance",
    "start": "440160",
    "end": "445500"
  },
  {
    "text": "analysis of MySQL for a production issue between two different operating systems",
    "start": "445500",
    "end": "451979"
  },
  {
    "text": "and on one operating system I had the d-trace profiler and did CPU profiling",
    "start": "451979",
    "end": "457800"
  },
  {
    "text": "it printed out frequency counts of stacks and so I've truncated the output the",
    "start": "457800",
    "end": "464699"
  },
  {
    "text": "last two stacks there I can see we're doing do command dispatch command calculate sum of all",
    "start": "464699",
    "end": "471780"
  },
  {
    "text": "status add to status so I looked at this and I thought okay so maybe there's a why is the",
    "start": "471780",
    "end": "478440"
  },
  {
    "text": "performance different why is the performance different between these two operating systems maybe it's related to",
    "start": "478440",
    "end": "485039"
  },
  {
    "text": "that one we're doing status and it's more expensive than the other one just based on the last stack",
    "start": "485039",
    "end": "491759"
  },
  {
    "text": "but that's just look at the last two stacks it's not looking at the full output so I spent a couple of days digging into",
    "start": "491759",
    "end": "499440"
  },
  {
    "text": "this theory that it was something to do with some of all status and that would",
    "start": "499440",
    "end": "505199"
  },
  {
    "text": "reveal the difference and it was a dead end it was somewhere else in the profile it",
    "start": "505199",
    "end": "510660"
  },
  {
    "text": "wasn't the most frequent stacks the full profile looked like this",
    "start": "510660",
    "end": "516680"
  },
  {
    "text": "and the two stacks I just had on the previous screen are right at the end",
    "start": "517500",
    "end": "524839"
  },
  {
    "text": "and I realized this could take months it could take months for me to understand the profile and we needed to understand",
    "start": "526620",
    "end": "532440"
  },
  {
    "text": "the profile immediately this was a important customer",
    "start": "532440",
    "end": "537440"
  },
  {
    "text": "I thought maybe this is a problem that a visualization can solve",
    "start": "538320",
    "end": "543600"
  },
  {
    "text": "at work it was not a great environment to be mucking around with visualizations when",
    "start": "543600",
    "end": "548700"
  },
  {
    "text": "we had this urgent customer issue and previously people I'd worked with had",
    "start": "548700",
    "end": "554459"
  },
  {
    "text": "been criticized for wasting time on visualizations so I didn't even feel like I could do this on work hours I did",
    "start": "554459",
    "end": "560100"
  },
  {
    "text": "this out of hours I went and tried some profiling visualizations to make better",
    "start": "560100",
    "end": "565920"
  },
  {
    "text": "sense of this output and there was a couple from my former",
    "start": "565920",
    "end": "571080"
  },
  {
    "text": "colleagues at some Microsystems one by real nil and another by Rock Bourbonnais where they were doing that time series",
    "start": "571080",
    "end": "578339"
  },
  {
    "text": "stack Trace that I initially showed and I called it a hair graph and so I tried that",
    "start": "578339",
    "end": "585180"
  },
  {
    "text": "and that was actually based on function tracing since I was doing profiling I",
    "start": "585180",
    "end": "591000"
  },
  {
    "text": "knew I didn't know the passage of time it was a course measurement measurement and so I switched the",
    "start": "591000",
    "end": "597720"
  },
  {
    "text": "x-axis to the alphabet and the same profile looked like this",
    "start": "597720",
    "end": "603540"
  },
  {
    "text": "and wow I can actually understand it uh Rock and real nil their",
    "start": "603540",
    "end": "608940"
  },
  {
    "text": "visualizations which which uh real Niels made his online as open",
    "start": "608940",
    "end": "615420"
  },
  {
    "text": "source they used a completely random color palette to differentiate between",
    "start": "615420",
    "end": "621320"
  },
  {
    "text": "adjacent frames and it kind of looked like an angry fruit salad I restricted it just to be the warm",
    "start": "621320",
    "end": "628380"
  },
  {
    "text": "colors just because I thought it visually looked nicer and it immediately became known as flame graphs",
    "start": "628380",
    "end": "635220"
  },
  {
    "text": "looking at this flame graph the status tout that the status that I was the",
    "start": "635220",
    "end": "641160"
  },
  {
    "text": "stacks that I was investigating earlier are here on the left and you can see that's only five percent of the profile",
    "start": "641160",
    "end": "646860"
  },
  {
    "text": "this is why it was ended up being a dead end most of the time is over here in",
    "start": "646860",
    "end": "652260"
  },
  {
    "text": "join exec and create sort index and file sort",
    "start": "652260",
    "end": "657899"
  },
  {
    "text": "and so that I can immediately just look at it and say oh it's 80 of the time is over here and then",
    "start": "657899",
    "end": "663899"
  },
  {
    "text": "30 is over here just by comparing line lengths by comparing bits so it was awesome it solved the issue",
    "start": "663899",
    "end": "672839"
  },
  {
    "text": "just to show how it looks like using a different profiler this is Linux perf Linux perf does this hierarchy view so",
    "start": "672839",
    "end": "678899"
  },
  {
    "text": "it actually tries to coalesce the output better it's still too much output to read",
    "start": "678899",
    "end": "685140"
  },
  {
    "text": "through and so that's the full perf output and for that example there's the equivalent flame graph",
    "start": "685140",
    "end": "690600"
  },
  {
    "text": "fits on one slide I can print this out I can put it in the book you can still read it",
    "start": "690600",
    "end": "696380"
  },
  {
    "text": "so that was great uh one of my colleagues at the time he",
    "start": "697740",
    "end": "703019"
  },
  {
    "text": "was leading node.js at the time and he looked at it and said oh this is too weird no one's going to use it by doing",
    "start": "703019",
    "end": "710160"
  },
  {
    "text": "the alphabet on the x-axis and then two days later he'd been playing with it and he said I don't know how we ever did",
    "start": "710160",
    "end": "717660"
  },
  {
    "text": "know.js performance before this existed and so it quickly got adopted because it",
    "start": "717660",
    "end": "723060"
  },
  {
    "text": "was it was badly needed so that was at the end of 2011.",
    "start": "723060",
    "end": "727940"
  },
  {
    "text": "in 2013 a Google engineer Ilya tikonovsky",
    "start": "728579",
    "end": "734339"
  },
  {
    "text": "filed a bug on webkit to say this visualization can give developers a",
    "start": "734339",
    "end": "741540"
  },
  {
    "text": "clue what's going on with performance without expanding the entire tree links to my blog post",
    "start": "741540",
    "end": "748100"
  },
  {
    "text": "does the Prototype and then years later it now looks like this",
    "start": "749100",
    "end": "756240"
  },
  {
    "text": "anyone use this visualization in Chrome Dev tools front end lots of people okay so that's become",
    "start": "756240",
    "end": "763440"
  },
  {
    "text": "much more uh used depends on with your back end or front end",
    "start": "763440",
    "end": "769440"
  },
  {
    "text": "but this is different so this is the passage of time and so it ends up being",
    "start": "769440",
    "end": "775560"
  },
  {
    "text": "a bit of a hair graph now I should just email Ilya to ask it may",
    "start": "775560",
    "end": "783120"
  },
  {
    "text": "have been deliberate and notice Ilya called it flame chart not flame graph",
    "start": "783120",
    "end": "789000"
  },
  {
    "text": "and so now whether that's an accident or deliberate I use that as terminology flame chart is",
    "start": "789000",
    "end": "795180"
  },
  {
    "text": "time on the x-axis flame graph is alphabet or something else on the x-axis to show the full population",
    "start": "795180",
    "end": "801839"
  },
  {
    "text": "the hair graph from flame charts is not that bad",
    "start": "801839",
    "end": "807000"
  },
  {
    "text": "because JavaScript V8 is typically single threaded and you",
    "start": "807000",
    "end": "814079"
  },
  {
    "text": "don't have all of these samples from different CPUs at the same time and so it kind of works",
    "start": "814079",
    "end": "821100"
  },
  {
    "text": "so you do get these series that can join together so it's not as bad as my hair grafts earlier",
    "start": "821100",
    "end": "827399"
  },
  {
    "text": "so I feel it may have been deliberate they've changed that they've gone back to time and they have called it flame charts",
    "start": "827399",
    "end": "836459"
  },
  {
    "text": "I have posted bugs a long time ago for both Chrome and Firefox and said that's",
    "start": "836459",
    "end": "842160"
  },
  {
    "text": "great but we want both I want a tab so I can change between flame charts and",
    "start": "842160",
    "end": "847380"
  },
  {
    "text": "Flame graphs so you can basically take your data set and then turn it around and use different visualizations to",
    "start": "847380",
    "end": "853620"
  },
  {
    "text": "understand it and Firefox profiler has done that I just loaded the same profile into file",
    "start": "853620",
    "end": "860700"
  },
  {
    "text": "Firefox profiler and now I can see the it's not so much of a hair graph now",
    "start": "860700",
    "end": "866760"
  },
  {
    "text": "that's the flame graph tab that shows the whole population so you can if you see it it's like well I'm spending 20 of",
    "start": "866760",
    "end": "873839"
  },
  {
    "text": "my time and see yes I'm looking at the Yao Perth website in uh the Firefox",
    "start": "873839",
    "end": "879180"
  },
  {
    "text": "profiler just as an example but uh it's not that interesting and it looks like",
    "start": "879180",
    "end": "884579"
  },
  {
    "text": "it's obfuscated so I've only got It's been passed through one of those obfuscatives I've only got or minimizes so I've only got a couple of character",
    "start": "884579",
    "end": "891180"
  },
  {
    "text": "names for the functions but you get the idea so I get to see the big picture more easily and I can switch between",
    "start": "891180",
    "end": "897779"
  },
  {
    "text": "them so flame graphs x-axis of the population alphabet so it could be another type of",
    "start": "897779",
    "end": "904199"
  },
  {
    "text": "sort like based on call site flame charts x-axis is time",
    "start": "904199",
    "end": "909860"
  },
  {
    "text": "just quickly to go through flame graph interpretation the top Edge shows whom is running on",
    "start": "910440",
    "end": "917279"
  },
  {
    "text": "CPU and how much so you can immediately compare the widths and I look for plateaus because that's",
    "start": "917279",
    "end": "924180"
  },
  {
    "text": "where the CPUs are spending most of their time and that's where I can find optimizations",
    "start": "924180",
    "end": "930500"
  },
  {
    "text": "top down shows the ancestry so G was called by F was called by D and so on",
    "start": "930600",
    "end": "937579"
  },
  {
    "text": "to understand a flame graph you can compare the widths so",
    "start": "938040",
    "end": "943199"
  },
  {
    "text": "how much time is spent in B and its children versus H and its children",
    "start": "943199",
    "end": "948240"
  },
  {
    "text": "looks like it's about three times more more in B than H like 75 25 just",
    "start": "948240",
    "end": "953699"
  },
  {
    "text": "visually so you can make a lot of sense of flying you can Mouse so in the real",
    "start": "953699",
    "end": "959360"
  },
  {
    "text": "visualization you can Mouse over and it'll give you the percentages and it's about time I showed that so here's one",
    "start": "959360",
    "end": "965760"
  },
  {
    "text": "of the flame graphs if I Mouse over it'll give me a pop-up 74 there but I don't even need to Mouse",
    "start": "965760",
    "end": "972779"
  },
  {
    "text": "over because I can I get the bulk of the profile just by comparing it visually which is also",
    "start": "972779",
    "end": "979680"
  },
  {
    "text": "helpful if you print it out it's on paper in the interactive visualization you can also click to zoom",
    "start": "979680",
    "end": "987540"
  },
  {
    "text": "so I can zoom into all the details and importantly I can search",
    "start": "987540",
    "end": "994699"
  },
  {
    "text": "so I typed in the word command and then in the bottom right it says matched 78 I",
    "start": "994800",
    "end": "1000139"
  },
  {
    "text": "use that number all the time because it's a performance engineer my job",
    "start": "1000139",
    "end": "1005180"
  },
  {
    "text": "is a lot about prioritizing it's not about finding a performance issue there's lots of performance issues you",
    "start": "1005180",
    "end": "1010459"
  },
  {
    "text": "can go to an open source repo for some software type performance into the tickets and have like multiple pages of",
    "start": "1010459",
    "end": "1017000"
  },
  {
    "text": "performance bugs that have been known for years it's about prioritizing the performance issues which ones matter for the company",
    "start": "1017000",
    "end": "1022459"
  },
  {
    "text": "which one which one should we fix first and then second and so being able to quantify the time is super important",
    "start": "1022459",
    "end": "1029900"
  },
  {
    "text": "right okay so 7.8 in the right path",
    "start": "1029900",
    "end": "1035959"
  },
  {
    "text": "so use that feature all the time and then the last part for interpretation is colors what do the",
    "start": "1035959",
    "end": "1041959"
  },
  {
    "text": "colors mean they're randomized to different shape frames",
    "start": "1041959",
    "end": "1047140"
  },
  {
    "text": "that's what happens when you don't randomize them to differentiate frames well it's okay but it's the towers can",
    "start": "1048380",
    "end": "1053960"
  },
  {
    "text": "kind of blend into each other visually so maybe I should file a ticket and say just make the colors random",
    "start": "1053960",
    "end": "1061520"
  },
  {
    "text": "so often randomized or varied to different shape frames and I'll use",
    "start": "1061520",
    "end": "1068360"
  },
  {
    "text": "I'll often use the color Hue to show the code type so green for jitted code like",
    "start": "1068360",
    "end": "1073640"
  },
  {
    "text": "Java red for user level orange for kernel and so on come up with whatever color scheme suits",
    "start": "1073640",
    "end": "1079820"
  },
  {
    "text": "you that's fine at Netflix some people some developers would uh permanently",
    "start": "1079820",
    "end": "1085460"
  },
  {
    "text": "highlight their own code in magenta or something so every time they got a flame graph their bits of the flame graph were",
    "start": "1085460",
    "end": "1091940"
  },
  {
    "text": "always highlighted so they could always find it",
    "start": "1091940",
    "end": "1095799"
  },
  {
    "text": "and also use color for other dimensions so if I'm if I want to show cycles per instruction or other metrics in the",
    "start": "1097039",
    "end": "1104120"
  },
  {
    "text": "flame graph as well I can use a color scheme that's flying graph summarized on one",
    "start": "1104120",
    "end": "1110720"
  },
  {
    "text": "slide so visualize there's a collection of Stack traces x-axis population my",
    "start": "1110720",
    "end": "1116480"
  },
  {
    "text": "original version was written in Pearl and I did it like in two hours one night I love Pearl turns out most people don't",
    "start": "1116480",
    "end": "1124220"
  },
  {
    "text": "love Pearl so I was giving a in-person presentation",
    "start": "1124220",
    "end": "1129679"
  },
  {
    "text": "at a major company early on and they said oh we love playing graphs but",
    "start": "1129679",
    "end": "1135620"
  },
  {
    "text": "can you please write it in Python no you're just gonna have to use Pearl now actually I ended up did writing in",
    "start": "1135620",
    "end": "1141620"
  },
  {
    "text": "Python but unfortunately there was an internal project that didn't get published I don't mind people rewriting this and other stuff",
    "start": "1141620",
    "end": "1147860"
  },
  {
    "text": "you prefer other stuff that's totally fine in fact I've been spending a lot of time with a D3 version which was created",
    "start": "1147860",
    "end": "1155660"
  },
  {
    "text": "by my colleague at Netflix Martin spear I was talking to Martin about we want to do more things with flame graphs beyond",
    "start": "1155660",
    "end": "1161240"
  },
  {
    "text": "what my pill version could do and so mine said yeah let's do it in D3 so he's created D3 flame graph and we",
    "start": "1161240",
    "end": "1170179"
  },
  {
    "text": "use that Netflix's internal continuous profiler flame Commander unfortunately both Martin and I left",
    "start": "1170179",
    "end": "1176960"
  },
  {
    "text": "Netflix before we open sourced it so I don't know if the my colleagues who are still there will ever open source it it",
    "start": "1176960",
    "end": "1182120"
  },
  {
    "text": "was a cool tool but at least we did open source the D3 profiler part and so that's now being",
    "start": "1182120",
    "end": "1188780"
  },
  {
    "text": "used by companies to do flame graphs in fact I've had demonstrations from people showing me the D3 flame graph",
    "start": "1188780",
    "end": "1196280"
  },
  {
    "text": "where they say Brendan check this out don't you love this how it's does",
    "start": "1196280",
    "end": "1202940"
  },
  {
    "text": "animations you can zoom in and zoom out so I think I've got one of his flame graphs open oh look at that it",
    "start": "1202940",
    "end": "1211280"
  },
  {
    "text": "moves so D3 does animations yes whip",
    "start": "1211280",
    "end": "1219919"
  },
  {
    "text": "and it's like yes I know this because I was with man when we created this it's people think I only ever did the Pearl",
    "start": "1223039",
    "end": "1229340"
  },
  {
    "text": "version maybe because I love Pearl but no I did work help with this as well so it's great but the point was to do more",
    "start": "1229340",
    "end": "1236299"
  },
  {
    "text": "than just the zoom animations we wanted to be able to change the merge order click on a frame",
    "start": "1236299",
    "end": "1242539"
  },
  {
    "text": "and say merge around this Frame and all sorts of other things of D3 which we still need to get done",
    "start": "1242539",
    "end": "1248740"
  },
  {
    "text": "Linux CP fine graphs in three easy steps just to put in the slide",
    "start": "1250820",
    "end": "1256160"
  },
  {
    "text": "you can use my Perl software but you don't have to you can use the D3 version that's fine you can write your own version doesn't matter",
    "start": "1256160",
    "end": "1263000"
  },
  {
    "text": "there's a version in Rust someone's written here I've got perfect record and then",
    "start": "1263000",
    "end": "1268880"
  },
  {
    "text": "perf script and then we output it and we've got this fig includes embedded JavaScript",
    "start": "1268880",
    "end": "1274520"
  },
  {
    "text": "some runtimes like the jvm require extra steps so you that you get stacks and symbols for this to make sense",
    "start": "1274520",
    "end": "1283299"
  },
  {
    "text": "so that's CP flame graphs so there's Linux 2.6 and and later perfect chord it outputs",
    "start": "1283880",
    "end": "1292100"
  },
  {
    "text": "to the file system to a perfect data file every sample with timestamps",
    "start": "1292100",
    "end": "1297440"
  },
  {
    "text": "that takes overhead takes CPU Cycles it takes file system overhead eventually the block device with the file system",
    "start": "1297440",
    "end": "1304100"
  },
  {
    "text": "and block device layer will flush it to disks so we've now got disk IO then we re-read it again with perf script",
    "start": "1304100",
    "end": "1311360"
  },
  {
    "text": "and then it does simple translation for every single stack Trace hopefully it does some caching and then we feed it",
    "start": "1311360",
    "end": "1317900"
  },
  {
    "text": "into stat collapse which then frequency count stacks and finally we feed it into",
    "start": "1317900",
    "end": "1322940"
  },
  {
    "text": "flame graph which spits out the visualization I said someone rewrote it in Rust and",
    "start": "1322940",
    "end": "1329179"
  },
  {
    "text": "their selling feature was they rewrote stack collapse stop PL and rust and",
    "start": "1329179",
    "end": "1334760"
  },
  {
    "text": "stack collapse Perth and they said it's like 20 times faster in Rust it's like yes that's cool and I should",
    "start": "1334760",
    "end": "1341179"
  },
  {
    "text": "be more excited about this as a performance engineer but the new way of doing this is I'm",
    "start": "1341179",
    "end": "1347059"
  },
  {
    "text": "just getting rid of that stuff like we're not going to do that anyway I'm going to have an ebpf program",
    "start": "1347059",
    "end": "1352960"
  },
  {
    "text": "summarize the stacks in kernel context and do the frequency counts there and just emit the summarized output to user",
    "start": "1352960",
    "end": "1360799"
  },
  {
    "text": "space just for rendering this is the first thing of many that",
    "start": "1360799",
    "end": "1367580"
  },
  {
    "text": "ebpf does to help with flame graphs so what's abpf",
    "start": "1367580",
    "end": "1373720"
  },
  {
    "text": "BPF itself is an Arcane Operating Systems Technology from 1992 that stands",
    "start": "1375440",
    "end": "1381380"
  },
  {
    "text": "for Berkeley Packer filter and if you did TCP dump with a filter expression that would get compiled into this by",
    "start": "1381380",
    "end": "1388940"
  },
  {
    "text": "code and then the kernel would would turn it into the machine code so that it",
    "start": "1388940",
    "end": "1394280"
  },
  {
    "text": "could execute internal space close to the device driver and speed up packet filtering",
    "start": "1394280",
    "end": "1399740"
  },
  {
    "text": "I didn't really know about it even though it worked in performance engineering I guess I sort of knew that the TCP dump had been optimized but it",
    "start": "1399740",
    "end": "1407299"
  },
  {
    "text": "was very obscure one weird detail about it however was",
    "start": "1407299",
    "end": "1413360"
  },
  {
    "text": "the reason it exists by the way is previously if you look at uh performance",
    "start": "1413360",
    "end": "1419659"
  },
  {
    "text": "monitoring there's been a number of companies that are doing Network sniffing and they're doing application performance monitoring by by basically",
    "start": "1419659",
    "end": "1426260"
  },
  {
    "text": "running lib pcap on your interfaces and then looking at all the packets there's big problems with that because",
    "start": "1426260",
    "end": "1433159"
  },
  {
    "text": "at Big sites you can do millions of packets a second and the overhead is just prohibitive so I'm not a fan of",
    "start": "1433159",
    "end": "1439640"
  },
  {
    "text": "sniffing all the packets I want a better way to do this and BPF was was helping",
    "start": "1439640",
    "end": "1445400"
  },
  {
    "text": "with that so so if you so I don't need all the packets I just need the sins TCP sins then I can come up with a filter",
    "start": "1445400",
    "end": "1452059"
  },
  {
    "text": "expression and that would reduce the overhead so user space is only getting things that match that expression but",
    "start": "1452059",
    "end": "1457400"
  },
  {
    "text": "again obscure technology what was interesting about it was it was a virtual machine",
    "start": "1457400",
    "end": "1463940"
  },
  {
    "text": "there had been a number of projects to try to get a virtual machine into the Linux kernel for all sorts of cool",
    "start": "1463940",
    "end": "1470720"
  },
  {
    "text": "reasons someone was trying to get lure into the Linux kernel ktap was trying to get the virtual machines the Linux kernel and",
    "start": "1470720",
    "end": "1476900"
  },
  {
    "text": "they kept getting rejected because it's pretty scary to put a whole virtual machine into the Linux kernel where",
    "start": "1476900",
    "end": "1482360"
  },
  {
    "text": "people can just run stuff an engineer at a startup called Plum",
    "start": "1482360",
    "end": "1488659"
  },
  {
    "text": "grid that's doing software-defined networking he wanted Alexi star Toyo he wanted a way to do software-defined networking",
    "start": "1488659",
    "end": "1496400"
  },
  {
    "text": "in the kernel but to have a virtual machine so that he could Define in user",
    "start": "1496400",
    "end": "1502820"
  },
  {
    "text": "space the rules for software defined networking when the kernel would execute it efficiently",
    "start": "1502820",
    "end": "1508520"
  },
  {
    "text": "and Alexi was very s wise and clever about going about doing this he did not",
    "start": "1508520",
    "end": "1516260"
  },
  {
    "text": "repeat the same problems of the past I've tried like here is an entire virtual machine Linus",
    "start": "1516260",
    "end": "1522860"
  },
  {
    "text": "can you please accept this massive change what Alexi did was broke it up into little parts to feed it in bit by",
    "start": "1522860",
    "end": "1530720"
  },
  {
    "text": "bit and so Alexi realized there's already a virtual machine in the kernel that no one knows about it's called BPF",
    "start": "1530720",
    "end": "1536299"
  },
  {
    "text": "that's the thing for packet filters if I extend that a little bit and then a little bit more and then a little bit",
    "start": "1536299",
    "end": "1542539"
  },
  {
    "text": "more we'll eventually have what he needs for software defined networking and he also thought it can go even beyond that",
    "start": "1542539",
    "end": "1548720"
  },
  {
    "text": "so the year was 2014 and Alexi was had these these very interesting patch sets",
    "start": "1548720",
    "end": "1555320"
  },
  {
    "text": "floating around on the Linux kernel mailing list and I got him to visit Netflix where",
    "start": "1555320",
    "end": "1563120"
  },
  {
    "text": "I had him explain like like where are you taking this and where is it going and",
    "start": "1563120",
    "end": "1568400"
  },
  {
    "text": "he he wanted to get a far beyond software defined networking he said this can be used for tracing as well",
    "start": "1568400",
    "end": "1573799"
  },
  {
    "text": "and it's like well this is pretty interesting but I could see that where other people had failed by doing too",
    "start": "1573799",
    "end": "1579740"
  },
  {
    "text": "much he was being more practical and pragmatic so I made a deal with him I said if you",
    "start": "1579740",
    "end": "1585020"
  },
  {
    "text": "give me the tracing hooks because it didn't even hook to tracing events at that point if you give me the tracing",
    "start": "1585020",
    "end": "1590900"
  },
  {
    "text": "hooks I will write the software the user space the tools to do tracing",
    "start": "1590900",
    "end": "1596539"
  },
  {
    "text": "and so Alexi did I was testing his patches before they got merged they got merged he kept building it and building",
    "start": "1596539",
    "end": "1603140"
  },
  {
    "text": "it Daniel Bachmann got involved he was a red hat engineer and so Lexi and Daniel are the co-maintainers",
    "start": "1603140",
    "end": "1609200"
  },
  {
    "text": "and nowadays it's granted this whole ecosystem where there's conferences it's",
    "start": "1609200",
    "end": "1614419"
  },
  {
    "text": "taken over Linux conferences and kubecon and and everyone's talking about ebpf",
    "start": "1614419",
    "end": "1619520"
  },
  {
    "text": "it has grown into a fully fledged virtual machine in the Linux kernel",
    "start": "1619520",
    "end": "1625640"
  },
  {
    "text": "and you can Define software and use the space that the kernel then runs for SDM",
    "start": "1625640",
    "end": "1631340"
  },
  {
    "text": "was the original use case but DDOS mitigation intrusion detection container Security",
    "start": "1631340",
    "end": "1637659"
  },
  {
    "text": "observability application performance monitoring and so on",
    "start": "1637659",
    "end": "1643000"
  },
  {
    "text": "in the past five weeks I mentioned there's five new startups some of them are doing zero instrumentation",
    "start": "1643279",
    "end": "1648860"
  },
  {
    "text": "application performance monitoring so they're using these event targets like you probes",
    "start": "1648860",
    "end": "1654260"
  },
  {
    "text": "to look at your HTTP calls around your stack or your grpc calls around your stack",
    "start": "1654260",
    "end": "1660380"
  },
  {
    "text": "without you having to modify your code at all so the moment you do application performance monitoring I might take open",
    "start": "1660380",
    "end": "1666860"
  },
  {
    "text": "Telemetry and then I make changes to my code so it's instrumented with the new ones you don't have to change your code",
    "start": "1666860",
    "end": "1672679"
  },
  {
    "text": "at all which might be beneficial if you don't have access to change your code so it can go into the user space address",
    "start": "1672679",
    "end": "1679580"
  },
  {
    "text": "space and then live change those instructions in a safe way we've done this for years you probably existed for",
    "start": "1679580",
    "end": "1685400"
  },
  {
    "text": "a long time life changed those instructions so we can do some instrumentation pretty exciting in fact there's one of",
    "start": "1685400",
    "end": "1691100"
  },
  {
    "text": "the developers from one of those startups uh just met me this morning he's here in Perth",
    "start": "1691100",
    "end": "1696620"
  },
  {
    "text": "firewalls device drivers and there's going to be more use cases Beyond this",
    "start": "1696620",
    "end": "1701779"
  },
  {
    "text": "that are happening as well all of these programs that go into a verifier to make sure the EB ebf program",
    "start": "1701779",
    "end": "1709159"
  },
  {
    "text": "is safe and then it gets turned into eventually gets turned into machine code",
    "start": "1709159",
    "end": "1716059"
  },
  {
    "text": "that gets executed and they attach to event targets so ebpf is an event based",
    "start": "1716059",
    "end": "1722360"
  },
  {
    "text": "program I've got a slide to say I may call it BPF and ebpf interchangeably",
    "start": "1722360",
    "end": "1729080"
  },
  {
    "text": "so early on Alexi wanted to call it ebpf for extended BPF",
    "start": "1729080",
    "end": "1735860"
  },
  {
    "text": "but it's grown into something that's Way Beyond Berkeley packet filters and like",
    "start": "1735860",
    "end": "1741919"
  },
  {
    "text": "every presentation we ever give on BPF we have to explain oh no it does more than packet filters it does all sorts of",
    "start": "1741919",
    "end": "1748220"
  },
  {
    "text": "things so Alexi said I know we'll just say ebpf is no longer an acronym it's",
    "start": "1748220",
    "end": "1753740"
  },
  {
    "text": "just a name a terrible why would you do that well Alexa used to work on llvm compiler",
    "start": "1753740",
    "end": "1760100"
  },
  {
    "text": "which is also just a name these days so I guess there's a bit of history there I guess the real reason is we have not had",
    "start": "1760100",
    "end": "1767480"
  },
  {
    "text": "professional marketing help with evpf because I'm sure in the early days",
    "start": "1767480",
    "end": "1773059"
  },
  {
    "text": "a professional marketing person would say no you have to give it a real name",
    "start": "1773059",
    "end": "1779120"
  },
  {
    "text": "you have to give it a name like Docker or something you just can't make this stuff up but we're stuck with it",
    "start": "1779120",
    "end": "1784880"
  },
  {
    "text": "so it's evpf it's not the acronym it's just a name uh internal engineering",
    "start": "1784880",
    "end": "1790220"
  },
  {
    "text": "though Alexi changed his mind again and said I know I just want to call it BPF because it's also an instruction set and",
    "start": "1790220",
    "end": "1798080"
  },
  {
    "text": "there's a precedent for instruction sets having three characters so x86 and arm and BPF",
    "start": "1798080",
    "end": "1804919"
  },
  {
    "text": "So within kernel internet if you look at the kernel engineering mailing lists we just call it BPF the kernel Engineers but publicly we try to call it ebpf",
    "start": "1804919",
    "end": "1813020"
  },
  {
    "text": "because it's just fractionally more googleable than just BPF",
    "start": "1813020",
    "end": "1818740"
  },
  {
    "text": "it is a huge change though so for 50 years we've had one dominant operating systems model application system calls",
    "start": "1818960",
    "end": "1825799"
  },
  {
    "text": "kernel and Hardware that comes from multix where it had",
    "start": "1825799",
    "end": "1832820"
  },
  {
    "text": "multiple rings of security and you can see we don't have multiple",
    "start": "1832820",
    "end": "1838940"
  },
  {
    "text": "Rings we just have applications and kernel which is used to rings and that's coded into the",
    "start": "1838940",
    "end": "1844159"
  },
  {
    "text": "processors themselves they understand privileged rings and if you do instructions in one ring you're not",
    "start": "1844159",
    "end": "1849799"
  },
  {
    "text": "allowed to you get a fault mod Linux has changed that and it's the",
    "start": "1849799",
    "end": "1857059"
  },
  {
    "text": "first widespread change to that model so now apart from user mode applications that Cisco into the kernel we now have",
    "start": "1857059",
    "end": "1864080"
  },
  {
    "text": "kernel mode applications that use BPF helper calls into the kernel",
    "start": "1864080",
    "end": "1870020"
  },
  {
    "text": "of academic papers over the past 30 years about let's do micro kernels",
    "start": "1870020",
    "end": "1876080"
  },
  {
    "text": "and hybrid kernels and this and that but they've not really seen widespread use like Plan 9 and Inferno",
    "start": "1876080",
    "end": "1882260"
  },
  {
    "text": "micro the Microsoft Windows kernel was the closest to do different things because it's hybrid-ish the way things",
    "start": "1882260",
    "end": "1889580"
  },
  {
    "text": "can be defined differently but this is this is the first real change to Unix or Linux",
    "start": "1889580",
    "end": "1898120"
  },
  {
    "text": "it also changes it provides an alternate process State model here's a process State model we've used forever",
    "start": "1898460",
    "end": "1905059"
  },
  {
    "text": "so I'm on CPU user in kernel space and then I block for some reason",
    "start": "1905059",
    "end": "1910220"
  },
  {
    "text": "maybe I'm waiting on a resource I'm waiting on a lock I'm just sleeping",
    "start": "1910220",
    "end": "1916520"
  },
  {
    "text": "BPF program State model is event based so you enable a program on an event when that event fires you go on CPU",
    "start": "1916520",
    "end": "1924260"
  },
  {
    "text": "you can do kernel other kernel code through helpers only it's sandboxed",
    "start": "1924260",
    "end": "1930260"
  },
  {
    "text": "there are spin lights and in some some cases you can even this is a new addition you can sleep in a BPF program",
    "start": "1930260",
    "end": "1936559"
  },
  {
    "text": "that was added for especially for doing user space memory access when it hasn't",
    "start": "1936559",
    "end": "1942200"
  },
  {
    "text": "been faltered in we need to be able to sleep to allow the fault to happen",
    "start": "1942200",
    "end": "1948039"
  },
  {
    "text": "Alexi has been taking it further and further this is from netconf 2018. he",
    "start": "1948919",
    "end": "1955159"
  },
  {
    "text": "in the early days from 2014 to then we had a Max instruction size of 4 000",
    "start": "1955159",
    "end": "1961520"
  },
  {
    "text": "instructions for BPF so we're all running these mini BPF programs that do this and that and then Alexi said he's going to change",
    "start": "1961520",
    "end": "1968179"
  },
  {
    "text": "the maximum instruction size to a million and he said I want people to be able to",
    "start": "1968179",
    "end": "1973279"
  },
  {
    "text": "write a Rubik's Cube solver in BPF people can write anything in BPF and",
    "start": "1973279",
    "end": "1978740"
  },
  {
    "text": "he's always been Visionary and this is this this is the turning point was like this is going to be huge if we",
    "start": "1978740",
    "end": "1985039"
  },
  {
    "text": "grow it and allow major applications to be coded in BPF",
    "start": "1985039",
    "end": "1991539"
  },
  {
    "text": "he's also shared at Facebook they have 40 BPF programs running by default on every Facebook server",
    "start": "1991940",
    "end": "1999140"
  },
  {
    "text": "and I shared when I was still working at Netflix has 14 BPF programs running by default",
    "start": "1999140",
    "end": "2004899"
  },
  {
    "text": "on every Netflix Cloud instance you may have BPF running you just don't",
    "start": "2004899",
    "end": "2011500"
  },
  {
    "text": "know it so it is starting to get used by lots of things another way to understand it so I've got",
    "start": "2011500",
    "end": "2017140"
  },
  {
    "text": "user mode applications and that calls into kernel mode applications written in",
    "start": "2017140",
    "end": "2022179"
  },
  {
    "text": "BPF where they're faster based on events either kernel events or",
    "start": "2022179",
    "end": "2027460"
  },
  {
    "text": "user space events and it's been said multiple times the modern Linux is becoming micro",
    "start": "2027460",
    "end": "2033340"
  },
  {
    "text": "kernel-ish because we can redefine parts of the Linux kernel you want to have a different TCP stack you want to have a",
    "start": "2033340",
    "end": "2041919"
  },
  {
    "text": "different way of doing routing packets a different CPU scheduler you can Define",
    "start": "2041919",
    "end": "2047140"
  },
  {
    "text": "that in BPF and we've been adding all the hooks so that that can be plugged",
    "start": "2047140",
    "end": "2052179"
  },
  {
    "text": "into the kernel which means ultimately you have a smaller kernel and more of it is user space defined",
    "start": "2052179",
    "end": "2059339"
  },
  {
    "text": "Stephen one of the kernel maintainers said BPF will replace Linux and there was a period of time where all of the",
    "start": "2060940",
    "end": "2068378"
  },
  {
    "text": "Linux maintainer conferences were just overtaken with ebpf",
    "start": "2068379",
    "end": "2075838"
  },
  {
    "text": "also Microsoft are right now adding ebpf to Windows the windows kernel and so I'm on the BPF technical steering committee",
    "start": "2076000",
    "end": "2082599"
  },
  {
    "text": "and I meet with Microsoft every two weeks so they are busy at work doing this and if I thought the ecosystem was",
    "start": "2082599",
    "end": "2090099"
  },
  {
    "text": "going exploding right now on Linux imagine what's what what is in store for us next",
    "start": "2090099",
    "end": "2095980"
  },
  {
    "text": "when it's on Windows as well how does it work internally",
    "start": "2095980",
    "end": "2102040"
  },
  {
    "text": "you have BPF instructions go through a verifier that makes sure it's safe it's secure it doesn't do anything naughty",
    "start": "2102040",
    "end": "2108880"
  },
  {
    "text": "that then goes to a jit compiler that turns it into machine code and it then runs if you want to do other stuff to",
    "start": "2108880",
    "end": "2115000"
  },
  {
    "text": "the kernel like redirect a packet remember it came from software defined networking there are BPF helpers to do",
    "start": "2115000",
    "end": "2120220"
  },
  {
    "text": "that if you want to collect a stack Trace because I'm doing profiling there's a BPF originally there wasn't a",
    "start": "2120220",
    "end": "2125740"
  },
  {
    "text": "BPF Helper and I published the first BPF profiler by doing I manually walk the",
    "start": "2125740",
    "end": "2131680"
  },
  {
    "text": "stack in pure ebpf which is interesting because maybe we do want to do some custom stack Walkers that has been done",
    "start": "2131680",
    "end": "2137740"
  },
  {
    "text": "before uh but there's a helper for that that makes it makes it easier",
    "start": "2137740",
    "end": "2142839"
  },
  {
    "text": "there's map storage and when events fired you get some contact with the event",
    "start": "2142839",
    "end": "2148839"
  },
  {
    "text": "there used to be an interpreter but we compiled it out of the kernel gone everything has to be compiled now and",
    "start": "2148839",
    "end": "2155200"
  },
  {
    "text": "the reason for that was Spectrum meltdown with Spectrum meltdown everyone was busy I was busy doing the",
    "start": "2155200",
    "end": "2161740"
  },
  {
    "text": "performance analysis at Netflix everyone was busy changing their code and deploying new versions but the BPF byte",
    "start": "2161740",
    "end": "2168400"
  },
  {
    "text": "code all we had to do was update the jit compiler to do the mitigations and then all of that byte code was then safe",
    "start": "2168400",
    "end": "2176920"
  },
  {
    "text": "and so after that we realized there's huge benefits for the jet compiler we should just make it everything should",
    "start": "2176920",
    "end": "2182740"
  },
  {
    "text": "have to do the jet compiler because it helps us quickly patch over security vulnerabilities",
    "start": "2182740",
    "end": "2190319"
  },
  {
    "text": "one important part of this diagram is once you're running your machine code and you look like other kernel code",
    "start": "2190720",
    "end": "2199180"
  },
  {
    "text": "previously I used the word virtual machine and so you might start thinking in your head oh it's like a emulation",
    "start": "2199180",
    "end": "2205300"
  },
  {
    "text": "there's layers and there's overhead no no but but it's like a virtual machine",
    "start": "2205300",
    "end": "2210760"
  },
  {
    "text": "but by the time you're running it's literal machine code it looks like other kernel code so it's super fast",
    "start": "2210760",
    "end": "2218160"
  },
  {
    "text": "is BPF during complete I need to delete this slide because it's it's no longer becoming funny because it is getting",
    "start": "2219040",
    "end": "2225760"
  },
  {
    "text": "closer and closer so BF programs have to be bounded they have to complete you can't have an",
    "start": "2225760",
    "end": "2231339"
  },
  {
    "text": "infinite Loop in a BPF program and so that makes it non-turing complete but since I was using that slide we have",
    "start": "2231339",
    "end": "2238599"
  },
  {
    "text": "added bounded loops and all sorts of stuff",
    "start": "2238599",
    "end": "2243820"
  },
  {
    "text": "an idea of why it's different from other software so user space kernel space and BPF user space",
    "start": "2243820",
    "end": "2250980"
  },
  {
    "text": "it has you can compile in any way the failure mode for user space is an abort",
    "start": "2251560",
    "end": "2257140"
  },
  {
    "text": "the failing mode and kernel space is a panic BPF has a safe failure mode you just get an error message",
    "start": "2257140",
    "end": "2262900"
  },
  {
    "text": "so it's a safer environment for doing kernel development because",
    "start": "2262900",
    "end": "2268960"
  },
  {
    "text": "if you want to write a kernel module or do something else and things go wrong you panic become the whole machine stops",
    "start": "2268960",
    "end": "2274560"
  },
  {
    "text": "or depends on your system CDL settings resource access is better than user",
    "start": "2274560",
    "end": "2281020"
  },
  {
    "text": "space you don't have to Sysco or fault to IO but it's not quite as good as the kernel",
    "start": "2281020",
    "end": "2286599"
  },
  {
    "text": "because you have to go through restricted helpers but it's still pretty good it is secure it's verified in git",
    "start": "2286599",
    "end": "2293020"
  },
  {
    "text": "compile that's a big selling feature and it's because of those two columns security and failure mode that",
    "start": "2293020",
    "end": "2298300"
  },
  {
    "text": "previously if a startup came to Netflix and said we have this great new product please",
    "start": "2298300",
    "end": "2303579"
  },
  {
    "text": "run it it's a kernel module say no like the kernel module could",
    "start": "2303579",
    "end": "2309280"
  },
  {
    "text": "Panic at surface actually that doesn't matter so much because Netflix uses um okay the chaos and Chaos engineering and",
    "start": "2309280",
    "end": "2316599"
  },
  {
    "text": "everything's safe fail the problem is there could be security issues",
    "start": "2316599",
    "end": "2322060"
  },
  {
    "text": "because you're basically running as root it's like please run my software as root now with BPF it is verified so there are",
    "start": "2322060",
    "end": "2330160"
  },
  {
    "text": "security assurances and it's not going to panic the servers either so it's much more appetizing for",
    "start": "2330160",
    "end": "2336400"
  },
  {
    "text": "startups to come up with Advanced Technologies and convince companies to use them if they're ebpf based",
    "start": "2336400",
    "end": "2343900"
  },
  {
    "text": "all the other features I would set a another Linux maintainers Summit last week plumbers and Alexi said",
    "start": "2343900",
    "end": "2352780"
  },
  {
    "text": "that BPF should become the environment of choice for kernel",
    "start": "2352780",
    "end": "2358660"
  },
  {
    "text": "engineering and that's really putting it out there that's saying kernel Engineers should prefer to write",
    "start": "2358660",
    "end": "2364720"
  },
  {
    "text": "new things in BPF over sea",
    "start": "2364720",
    "end": "2369240"
  },
  {
    "text": "it's pretty dramatic but he has not been wrong in the past because it has just been this uh",
    "start": "2370900",
    "end": "2377320"
  },
  {
    "text": "huge change in how we're doing everything some of these an example use client case",
    "start": "2377320",
    "end": "2383920"
  },
  {
    "text": "back to some examples so that we can better understand it BPF observability or tracing",
    "start": "2383920",
    "end": "2389200"
  },
  {
    "text": "and Flame graphs is is my main example use case BPF enables a new class of",
    "start": "2389200",
    "end": "2394359"
  },
  {
    "text": "custom efficient production safe tools Linux tracing used to be a mess",
    "start": "2394359",
    "end": "2399940"
  },
  {
    "text": "with cute ponies so when I started Linux in 2014 this F",
    "start": "2399940",
    "end": "2405400"
  },
  {
    "text": "Trace performance system tab ktab lttng d-traceable Linux there was actually 14 different traces for Linux",
    "start": "2405400",
    "end": "2412440"
  },
  {
    "text": "and none of them were really complete and did everything for every environment",
    "start": "2412440",
    "end": "2417640"
  },
  {
    "text": "like worked across all the distributions ebpf",
    "start": "2417640",
    "end": "2423940"
  },
  {
    "text": "has given us the the traces we've been after for a long time and so the main two we're using now is BCC lib BPF and",
    "start": "2425140",
    "end": "2432040"
  },
  {
    "text": "BPF Trace these cute ponies were actually created by my wife who is a professional Tech",
    "start": "2432040",
    "end": "2439000"
  },
  {
    "text": "marketing person she worked she works at Intel as well now and she'd been creating these forever",
    "start": "2439000",
    "end": "2444579"
  },
  {
    "text": "and and used it as part of merchandise but she hasn't officially been working",
    "start": "2444579",
    "end": "2449859"
  },
  {
    "text": "on evpf because I'm sure she could have told us to rename it long ago",
    "start": "2449859",
    "end": "2455880"
  },
  {
    "text": "I've created ebpf Performance Tools these are all open source you can run them they're all online there's also a",
    "start": "2455980",
    "end": "2462099"
  },
  {
    "text": "book if you want to get a book to where I explain the background and how to interpret them my my diagrams people",
    "start": "2462099",
    "end": "2469060"
  },
  {
    "text": "love my arrow diagrams here I've got all my BPF Tools in red with the new ones I did for the book I gained all open",
    "start": "2469060",
    "end": "2475359"
  },
  {
    "text": "source so you can use these to understand your systems just a few concrete examples Julia Evans",
    "start": "2475359",
    "end": "2483339"
  },
  {
    "text": "so I really wish I had a command line tool to give me stats on TCP connection lengths on a given part",
    "start": "2483339",
    "end": "2488740"
  },
  {
    "text": "absolutely and so I created TCP life for that so you just run it and it goes and",
    "start": "2488740",
    "end": "2493839"
  },
  {
    "text": "instruments the kernel it does not instrument per packet like I said I'm not a fan of that I'm just instrumenting",
    "start": "2493839",
    "end": "2500020"
  },
  {
    "text": "TCP State changes because it's low overhead and then I can pull out things like the",
    "start": "2500020",
    "end": "2505119"
  },
  {
    "text": "details the duration and the kilobytes sent and received",
    "start": "2505119",
    "end": "2511660"
  },
  {
    "text": "people have turned this into products and so they just feed this output into graph fears and you do your directed a",
    "start": "2511660",
    "end": "2517540"
  },
  {
    "text": "cyclic graph here we can map your environment they used to do that using packet filtering is too expensive but",
    "start": "2517540",
    "end": "2523300"
  },
  {
    "text": "now you can just do it based on my tool it's basically negligible Netflix runs a version of this 24x7 and sends all the",
    "start": "2523300",
    "end": "2530079"
  },
  {
    "text": "output to S3 for flow accounting did a blog post on it and there's the local you can match on",
    "start": "2530079",
    "end": "2536619"
  },
  {
    "text": "ports like Julia asked for in the first place so my tools in BCC they've got",
    "start": "2536619",
    "end": "2542560"
  },
  {
    "text": "usage messages they've got options another popular tool exactly what",
    "start": "2542560",
    "end": "2547660"
  },
  {
    "text": "processes are launching again it uses this version is using ebpf",
    "start": "2547660",
    "end": "2553140"
  },
  {
    "text": "to efficiently fetch things and I can see it's it's interesting to",
    "start": "2553140",
    "end": "2558400"
  },
  {
    "text": "run it on environments and you'll be surprised at what's running it's like why mkdir is running and like this would",
    "start": "2558400",
    "end": "2564940"
  },
  {
    "text": "run all the time like constantly in a loop on some of the instances I was working on and it was just like a",
    "start": "2564940",
    "end": "2570700"
  },
  {
    "text": "Haywire shell script that no one knew about by a lane see another great example of",
    "start": "2570700",
    "end": "2577240"
  },
  {
    "text": "evpf I want to know the lengthy of disk IO in more detail than just iostat just the",
    "start": "2577240",
    "end": "2583599"
  },
  {
    "text": "system metrics that tells me average latency and so I want a histogram I want to be able to see a power of two",
    "start": "2583599",
    "end": "2589240"
  },
  {
    "text": "histogram where I can see the distribution with the ebpf my program measures the start and end of disk IO",
    "start": "2589240",
    "end": "2597280"
  },
  {
    "text": "does the latency calculation and it does the grouping into buckets all in kernel",
    "start": "2597280",
    "end": "2602920"
  },
  {
    "text": "space and the only thing I admit to use a space is what I've highlighted there an array of like",
    "start": "2602920",
    "end": "2608920"
  },
  {
    "text": "eight numbers so the overhead of this is so small the previous method would do this is we would dump all the disk IO",
    "start": "2608920",
    "end": "2615760"
  },
  {
    "text": "events to a giant file we'd post process them it was very expensive now just do",
    "start": "2615760",
    "end": "2621220"
  },
  {
    "text": "all that processing in the kernel and like the rest of this stuff that the ASCII distribution plot is user space",
    "start": "2621220",
    "end": "2626920"
  },
  {
    "text": "just draws it but you could feed that into uis as well so I can do latency heat Maps",
    "start": "2626920",
    "end": "2632740"
  },
  {
    "text": "that's a prior invention of mine BPF Trace read ahead another nice",
    "start": "2632740",
    "end": "2638440"
  },
  {
    "text": "example of mine for a long time I'm like file systems when they do read ahead are we ever using the pages they read ahead",
    "start": "2638440",
    "end": "2644859"
  },
  {
    "text": "or is it wasteful should we tune it is it polluting the cash and the source code fits on a slide",
    "start": "2644859",
    "end": "2653020"
  },
  {
    "text": "that's the entire source code for read ahead and ppf Trace you don't need to understand all of it but I'm just",
    "start": "2653020",
    "end": "2658420"
  },
  {
    "text": "picking on a couple of Kernel functions pulling out the information I need printing it out done",
    "start": "2658420",
    "end": "2664599"
  },
  {
    "text": "so it's great so you can do this on the fly I can work you can you can have a performance issue no",
    "start": "2664599",
    "end": "2670420"
  },
  {
    "text": "one's seen before somewhere in the kernel or in applications as well and then without even restarting anything",
    "start": "2670420",
    "end": "2676260"
  },
  {
    "text": "you can start instrumenting functions it uses Dynamic instrumentation",
    "start": "2676260",
    "end": "2681819"
  },
  {
    "text": "which has been around for a long time and that can change instruction text live in a safe way we'll pause threads",
    "start": "2681819",
    "end": "2688119"
  },
  {
    "text": "and pause processes do the change unpause them so you can instrument anything",
    "start": "2688119",
    "end": "2694119"
  },
  {
    "text": "in fact the kernel version has optimization so it's not even doing the it's hooking into the F Trace framework",
    "start": "2694119",
    "end": "2699220"
  },
  {
    "text": "but for developers this is all great but as",
    "start": "2699220",
    "end": "2704619"
  },
  {
    "text": "soon as I put a side of source code in I don't want to give you the wrong idea",
    "start": "2704619",
    "end": "2710220"
  },
  {
    "text": "don't know where the background is but for developers I'd like you to think like a sys admin and not like a",
    "start": "2710500",
    "end": "2716680"
  },
  {
    "text": "programmer and to start with just use the tools install the tools and use them don't",
    "start": "2716680",
    "end": "2722380"
  },
  {
    "text": "worry too much about programming this stuff I was around for the big change from",
    "start": "2722380",
    "end": "2727780"
  },
  {
    "text": "telnet and FTP and our login and a few others to SSH it was at the start of my",
    "start": "2727780",
    "end": "2734020"
  },
  {
    "text": "career as a sysadmin and at the time cryptography was new",
    "start": "2734020",
    "end": "2742420"
  },
  {
    "text": "and I got into security and I was doing security Consulting and I got to the point where I could draw a diagrams of",
    "start": "2742420",
    "end": "2750180"
  },
  {
    "text": "cryptographic algorithms like Des on a whiteboard and I was teaching classes on",
    "start": "2750180",
    "end": "2755200"
  },
  {
    "text": "this and I was teaching everyone like is here's how you can Implement dares and this is how you can implement this and that Bluefish reading Bruce nice or",
    "start": "2755200",
    "end": "2763180"
  },
  {
    "text": "played cryptography now looking back on that is what what what were we doing I mean this is how we",
    "start": "2763180",
    "end": "2770319"
  },
  {
    "text": "were learning cryptography back in those early days but nowadays like why would you do that you",
    "start": "2770319",
    "end": "2776680"
  },
  {
    "text": "just use a library use openssl like most people here don't need to write a cryptographic algorithm you just need to",
    "start": "2776680",
    "end": "2782859"
  },
  {
    "text": "know you need to know it exists and you need to use the library the end and so I'm seeing the same pattern with BPF",
    "start": "2782859",
    "end": "2789940"
  },
  {
    "text": "where people like oh yeah this is great I need to learn how to code it it's like hold on you just need to know it exists",
    "start": "2789940",
    "end": "2797020"
  },
  {
    "text": "and then use it like maybe you can code it if you want to but at most companies",
    "start": "2797020",
    "end": "2802240"
  },
  {
    "text": "even big company like Netflix there should be fewer than 10 people out of 3 000 Engineers that would ever write",
    "start": "2802240",
    "end": "2808240"
  },
  {
    "text": "BPF code but the rest of the engineers need to know it exists so they know to go and",
    "start": "2808240",
    "end": "2813700"
  },
  {
    "text": "bug that team and say hey we've got a new issue I bet ebpf can solve it help us out",
    "start": "2813700",
    "end": "2819040"
  },
  {
    "text": "so that's being practical you all need to know it exists but only a few of you will ever really write the code and",
    "start": "2819040",
    "end": "2826240"
  },
  {
    "text": "that's fine think like a system in install it it's all open source and run the tools all",
    "start": "2826240",
    "end": "2833740"
  },
  {
    "text": "right and these are installed by default at Netflix and meta also like exact Snoop anything periodic",
    "start": "2833740",
    "end": "2840220"
  },
  {
    "text": "running from cront tab open Snoop any misconfigurations and so on",
    "start": "2840220",
    "end": "2846420"
  },
  {
    "text": "and you can print my diagram for your office wall and use it as use it as a checklist I know I've",
    "start": "2846940",
    "end": "2852640"
  },
  {
    "text": "got a block device issue try these tools just try them see what they show up",
    "start": "2852640",
    "end": "2857980"
  },
  {
    "text": "anything weird recommended tracing front ends",
    "start": "2857980",
    "end": "2864579"
  },
  {
    "text": "BCC and BPF Trace are the main ones if you just want to",
    "start": "2864579",
    "end": "2871240"
  },
  {
    "text": "run tools to hack up new tools if you want to start doing that it's BPF Trace if you want to spend weeks building a",
    "start": "2871240",
    "end": "2876819"
  },
  {
    "text": "BPF product then you'll get into BCC lib bpfc and other interfaces as well if",
    "start": "2876819",
    "end": "2883420"
  },
  {
    "text": "that seems super weird it's like oh why are there so many different interfaces is analogies in Unix if you want to run",
    "start": "2883420",
    "end": "2889780"
  },
  {
    "text": "tools it's in user bin if you want to hack up new tools it's in bash and awk and if you want to spend weeks",
    "start": "2889780",
    "end": "2895839"
  },
  {
    "text": "developing a product then it's C and C plus and rust and other languages as well",
    "start": "2895839",
    "end": "2902020"
  },
  {
    "text": "off you back out of the Blues Blue slides observability of abpf just to mention this quickly",
    "start": "2902020",
    "end": "2908380"
  },
  {
    "text": "well this is great but it's BPF programs aren't in proc so when you run top on",
    "start": "2908380",
    "end": "2913540"
  },
  {
    "text": "your servers you won't even see them so where it's a work in progress but we're inventing a ways so that there's a whole",
    "start": "2913540",
    "end": "2920079"
  },
  {
    "text": "different ecosystem to find out what BPF programs are running so BPF tool will list things K probes or",
    "start": "2920079",
    "end": "2927160"
  },
  {
    "text": "attach to these kernel functions you can also dump the assembly if you really want to for programs that are on",
    "start": "2927160",
    "end": "2933280"
  },
  {
    "text": "your system analdo has been working on CPU profiling",
    "start": "2933280",
    "end": "2938800"
  },
  {
    "text": "of ppf programs so that you can do performance analysis",
    "start": "2938800",
    "end": "2944819"
  },
  {
    "text": "and at lsfm which is one of the kernel main summits David S Miller the networking maintainer",
    "start": "2944920",
    "end": "2951700"
  },
  {
    "text": "said we should be able to single step execution we should be able to take caught up of a BPF program of all state",
    "start": "2951700",
    "end": "2957819"
  },
  {
    "text": "and there's a new ebpf debugger project to try to do that I was going through my slides it's like",
    "start": "2957819",
    "end": "2964300"
  },
  {
    "text": "why do why do all my conference pictures say 2019 is because I haven't done conferences for the last two years",
    "start": "2964300",
    "end": "2969940"
  },
  {
    "text": "because we've had the pandemic and so I had all these pictures of people giving talks and it's it was a reminder it's",
    "start": "2969940",
    "end": "2977319"
  },
  {
    "text": "been a while I keynoted the start of that conference on BPF and Dave gave the closing keynote",
    "start": "2977319",
    "end": "2985839"
  },
  {
    "text": "on BPF so we had the bookends like I said the BPF has been taking over Linux conferences",
    "start": "2985839",
    "end": "2992520"
  },
  {
    "text": "future predictions more device drivers including USB on",
    "start": "2992560",
    "end": "2998079"
  },
  {
    "text": "evpf monitoring agents this application performance monitoring there's the zero instrumentation performance monitoring",
    "start": "2998079",
    "end": "3004140"
  },
  {
    "text": "where it's just tracing your HTTP calls via the library or grpc calls or",
    "start": "3004140",
    "end": "3009180"
  },
  {
    "text": "whatever so you don't have to change code intrusion detection systems tsp congestion controls there's already been",
    "start": "3009180",
    "end": "3015000"
  },
  {
    "text": "work to do that CPU and container schedules there was work last week at the plumbers conference about that",
    "start": "3015000",
    "end": "3021900"
  },
  {
    "text": "and we're just finding more and more uses for ebpf",
    "start": "3021900",
    "end": "3026960"
  },
  {
    "text": "now finally that's all Grant your CLI tools are awesome but practically people find more",
    "start": "3027660",
    "end": "3034200"
  },
  {
    "text": "performance wins from flame graphs than my Advanced tools",
    "start": "3034200",
    "end": "3040640"
  },
  {
    "text": "so tying them together ebpf flame graphs",
    "start": "3041040",
    "end": "3045500"
  },
  {
    "text": "I've got a tool in BCC profile that does it that's the command line fangraph.pl",
    "start": "3046319",
    "end": "3051839"
  },
  {
    "text": "does have some options so you can customize the output and it gives you lower overhead profile it makes",
    "start": "3051839",
    "end": "3057599"
  },
  {
    "text": "continuous profiling more practical",
    "start": "3057599",
    "end": "3061099"
  },
  {
    "text": "it also makes Ox CPU analysis practical so I mentioned at the start about this",
    "start": "3063000",
    "end": "3068160"
  },
  {
    "text": "idea of all time profiling it's with CPU flame graphs you're only",
    "start": "3068160",
    "end": "3073619"
  },
  {
    "text": "looking at the red circle the pink circles you're only looking at what's on CPU all the performance issues when you",
    "start": "3073619",
    "end": "3079440"
  },
  {
    "text": "block how do you analyze them like I've written books on this it's like well you use this library of these",
    "start": "3079440",
    "end": "3086760"
  },
  {
    "text": "tools and that tool and this to look at disk IO and that to do lock analysis and",
    "start": "3086760",
    "end": "3092040"
  },
  {
    "text": "it's Advanced and there's just it's laborious there's a lot of stuff we've always wanted like one tool to look at",
    "start": "3092040",
    "end": "3098760"
  },
  {
    "text": "it all similar to Flame graphs that does all of those blocking States and that's obviously off CP Time Flame",
    "start": "3098760",
    "end": "3105839"
  },
  {
    "text": "graphs and now the x-axis is instead of samples we're looking at off CPU time but it's",
    "start": "3105839",
    "end": "3112980"
  },
  {
    "text": "still population on the x-axis and then I can drill into bits and say oh I'm blocked on",
    "start": "3112980",
    "end": "3119579"
  },
  {
    "text": "file reads from disk directory reads from disk and I can proportionally see the time here I'm",
    "start": "3119579",
    "end": "3126119"
  },
  {
    "text": "looking at the tar command and so I can quickly analyze off CPU time",
    "start": "3126119",
    "end": "3131460"
  },
  {
    "text": "just like I can quickly analyze CPU time this uses ebpf to make it efficient because the off CPU tracing does have a",
    "start": "3131460",
    "end": "3138720"
  },
  {
    "text": "high overhead because your you need to do stuff on every schedule or event every contact switch",
    "start": "3138720",
    "end": "3145020"
  },
  {
    "text": "and I get a bit nervous about that because that's going to be a million events a second but kernel tracing is very efficient",
    "start": "3145020",
    "end": "3151619"
  },
  {
    "text": "last time I did the benchmarking the the minimum overhead was 69 nanoseconds per",
    "start": "3151619",
    "end": "3157020"
  },
  {
    "text": "event so yeah we can extend the scheduler a little bit and do some some of this",
    "start": "3157020",
    "end": "3162180"
  },
  {
    "text": "tracing with ebpf because the overhead is small enough",
    "start": "3162180",
    "end": "3168599"
  },
  {
    "text": "so CPU flame graphs plus Ox CP flame graphs allow us to see everything",
    "start": "3168599",
    "end": "3174240"
  },
  {
    "text": "they're not widely used yet because there's still a bunch of work to do to get off CPU flame grafts to work",
    "start": "3174240",
    "end": "3181619"
  },
  {
    "text": "so yeah just zooming into the gzip latency one one piece of work that",
    "start": "3181619",
    "end": "3188220"
  },
  {
    "text": "needs to be done the FCP stack often doesn't show the root cause of the latency so in this example gsep was",
    "start": "3188220",
    "end": "3193920"
  },
  {
    "text": "waiting on pipe read was waiting on pipe weight and then waiting on someone else",
    "start": "3193920",
    "end": "3200940"
  },
  {
    "text": "and so I've Been Working On off-wake Time Flame graphs where you put the Waker stack on top of the off CPU stack",
    "start": "3200940",
    "end": "3207660"
  },
  {
    "text": "so you can see who you were blocked on and who they woke up and again it needs eppf to be able to do",
    "start": "3207660",
    "end": "3213900"
  },
  {
    "text": "this in kernel context efficiently and merge these Stacks together and so now this is amazing this example",
    "start": "3213900",
    "end": "3220200"
  },
  {
    "text": "I was just doing like tar gzip to do an archive but you can see how gzep was blocked on a pipe and that was blocked",
    "start": "3220200",
    "end": "3228119"
  },
  {
    "text": "on tar so I've got that weaker stack you can see it all together this is",
    "start": "3228119",
    "end": "3233220"
  },
  {
    "text": "great but there's more work to do",
    "start": "3233220",
    "end": "3239280"
  },
  {
    "text": "so practical FCP flame graphs is work in progress using ebpf other types of flame graphs so you can do if you want to you",
    "start": "3239280",
    "end": "3247140"
  },
  {
    "text": "can go into disk IO separately Network separately malloc flame graph so you can",
    "start": "3247140",
    "end": "3252180"
  },
  {
    "text": "understand memory allocation in applications custom stack walking is another thing we",
    "start": "3252180",
    "end": "3257700"
  },
  {
    "text": "need ebpf for a lot of the flame graphs do have little bits that are broken and it's especially",
    "start": "3257700",
    "end": "3263579"
  },
  {
    "text": "the case of off CPU flame graphs because they often go through libsy and libsy is",
    "start": "3263579",
    "end": "3268680"
  },
  {
    "text": "not compiled with frame pointers by default in fact this I was just seeing this earlier",
    "start": "3268680",
    "end": "3274740"
  },
  {
    "text": "yeah this example down here there is",
    "start": "3274740",
    "end": "3281539"
  },
  {
    "text": "this right path I go into lib C and there should be some bash frames underneath this",
    "start": "3281579",
    "end": "3286800"
  },
  {
    "text": "but you know this these towers on the left should actually be on top of the towers on the right",
    "start": "3286800",
    "end": "3292740"
  },
  {
    "text": "they're actually disconnected they're broken because we got into lib C and libsy broke stack walking and it",
    "start": "3292740",
    "end": "3298319"
  },
  {
    "text": "disconnected the stackwalk if you work in a major company like Netflix or Facebook",
    "start": "3298319",
    "end": "3303780"
  },
  {
    "text": "we compile all the software frame pointers so that stack walking works",
    "start": "3303780",
    "end": "3309839"
  },
  {
    "text": "but I'm I've been trying to work with canonical and other distributions and",
    "start": "3309839",
    "end": "3314940"
  },
  {
    "text": "I've got email I've got to respond to about this so that we can fix it in the other distributions as well so this",
    "start": "3314940",
    "end": "3321300"
  },
  {
    "text": "isn't just a cool thing that the fangs use but everyone gets to use full stack walking because we've done the effort to",
    "start": "3321300",
    "end": "3327720"
  },
  {
    "text": "get this fixed and all the links distros so that's another thing that's needed for off CPU flame graphs",
    "start": "3327720",
    "end": "3334859"
  },
  {
    "text": "doing Customs you can just do custom stack walking as well you don't need frame pointers exactly and I initially",
    "start": "3334859",
    "end": "3340380"
  },
  {
    "text": "wrote the first evpf stack Walker and doing custom stack walking we can include other app contexts like if it's",
    "start": "3340380",
    "end": "3346800"
  },
  {
    "text": "a database what about the database query should stick that as a frame in the flame graph so that may be important",
    "start": "3346800",
    "end": "3354260"
  },
  {
    "text": "I'd say there's two takeaways and one is",
    "start": "3355859",
    "end": "3361020"
  },
  {
    "text": "to print out a CPU flame graph of your environment for your office wall",
    "start": "3361020",
    "end": "3368520"
  },
  {
    "text": "that means you're going to have to use CP flame graphs so it's a good takeaway it's",
    "start": "3368520",
    "end": "3374760"
  },
  {
    "text": "it's the diagram on the left the flame graph at Netflix that's found more performance",
    "start": "3374760",
    "end": "3379920"
  },
  {
    "text": "wins than all my Advanced tools on the right so I do think that is the number one thing to do because this it's just",
    "start": "3379920",
    "end": "3386040"
  },
  {
    "text": "eliminating unnecessary work there's all these things that you discover when you look at it why do I want you to",
    "start": "3386040",
    "end": "3391619"
  },
  {
    "text": "get a CPU flame graph and print it out on your office wall later you will thank me",
    "start": "3391619",
    "end": "3397619"
  },
  {
    "text": "what happens is six months later there's a regression and it's like our performance is",
    "start": "3397619",
    "end": "3402960"
  },
  {
    "text": "terrible you look at a flame graph and you say is this normal do we normally spend time here do we normally spend",
    "start": "3402960",
    "end": "3408599"
  },
  {
    "text": "time there and at Netflix I would print out microservices and put it on my office",
    "start": "3408599",
    "end": "3414240"
  },
  {
    "text": "wall and I could just look at it and be like nope that's different so I know you can also do continuous",
    "start": "3414240",
    "end": "3419760"
  },
  {
    "text": "profiling there's many people did this also open source continuous profilers as well so I'm getting involved in G",
    "start": "3419760",
    "end": "3427200"
  },
  {
    "text": "profiler Which Intel has acquired it's an open source continuous profiler but if you don't have continuous",
    "start": "3427200",
    "end": "3433319"
  },
  {
    "text": "profiling just printing this this out and putting it on your wall gives you a reference to see if anything changed",
    "start": "3433319",
    "end": "3439740"
  },
  {
    "text": "and then the BPF tools uh because that can serve as a type of checklist so that if you know you've got",
    "start": "3439740",
    "end": "3446520"
  },
  {
    "text": "an issue with virtual memory or file systems or something you can try some things out",
    "start": "3446520",
    "end": "3452660"
  },
  {
    "text": "there are books on systems performance and BPF those are my last two books",
    "start": "3452819",
    "end": "3459359"
  },
  {
    "text": "the slides will be online and I have lots of references and I've almost lost my voice from talking to everyone",
    "start": "3459359",
    "end": "3464819"
  },
  {
    "text": "yesterday it's been really exciting to be back in Perth and there's so much technology in Perth now",
    "start": "3464819",
    "end": "3470460"
  },
  {
    "text": "so it's been great but thank you for letting me introduce ebpf and Flame graphs and I hope they",
    "start": "3470460",
    "end": "3477480"
  },
  {
    "text": "find you lots of awesome performance wins and thanks for listening to me",
    "start": "3477480",
    "end": "3483410"
  },
  {
    "text": "[Applause]",
    "start": "3483410",
    "end": "3487390"
  },
  {
    "text": "thank you so much Brendan that was uh it was amazing it's uh really nice to have one of the Pioneers in our industry come",
    "start": "3490440",
    "end": "3496800"
  },
  {
    "text": "all the way over to Perth so really appreciate that we're going to open the floor to speakers we have people online",
    "start": "3496800",
    "end": "3502920"
  },
  {
    "text": "as well so if you're online please jump onto the Q a tab on hop in and start",
    "start": "3502920",
    "end": "3508800"
  },
  {
    "text": "punching your questions in and they'll get routed to us but for now we'll open it up to the floor have we got questions for Brendan",
    "start": "3508800",
    "end": "3517760"
  },
  {
    "text": "that was um very interesting thank you I learned so much um do you think Apple will add ebpf to",
    "start": "3526440",
    "end": "3533460"
  },
  {
    "text": "the Mac OS FreeBSD kernel you know that's surprising because uh Apple work",
    "start": "3533460",
    "end": "3538500"
  },
  {
    "text": "on things privately and they don't tell us so uh Apple added d-trace a long time",
    "start": "3538500",
    "end": "3544740"
  },
  {
    "text": "ago it doesn't fully work now but the but the first I heard about",
    "start": "3544740",
    "end": "3549900"
  },
  {
    "text": "it was when they had already put all of my well no they put 40 of my tools in",
    "start": "3549900",
    "end": "3555000"
  },
  {
    "text": "user bin so and they didn't tell because they work work in secret so it's like",
    "start": "3555000",
    "end": "3560400"
  },
  {
    "text": "surprise I've now got a bunch of my software as in user bin by default on OS X",
    "start": "3560400",
    "end": "3565619"
  },
  {
    "text": "so are they working on it they probably wouldn't tell anyone until it was done Microsoft at least uh uh working with us",
    "start": "3565619",
    "end": "3573299"
  },
  {
    "text": "and Microsoft in particular are Paving the way for other operating systems and so I think their their work is Paving",
    "start": "3573299",
    "end": "3579420"
  },
  {
    "text": "the way for BSD and OS X to follow suit and there's some great people from",
    "start": "3579420",
    "end": "3584760"
  },
  {
    "text": "Microsoft that are making sure that BPF has been separated where when it needs to be from",
    "start": "3584760",
    "end": "3591299"
  },
  {
    "text": "Linux so we have a separate generic byte code and we have the separate foundation",
    "start": "3591299",
    "end": "3597420"
  },
  {
    "text": "and like all of the mechanisms and we have committees to accept changes and so",
    "start": "3597420",
    "end": "3603359"
  },
  {
    "text": "Microsoft are really pushing the way to make sure that this this grows beyond just Linux and that it is possible for",
    "start": "3603359",
    "end": "3610079"
  },
  {
    "text": "other operating systems so yeah Microsoft's work will enable BSD and OS X it's kind of funny because BSD is",
    "start": "3610079",
    "end": "3616920"
  },
  {
    "text": "where BPF comes from in the first place and it's going to be Microsoft is",
    "start": "3616920",
    "end": "3622380"
  },
  {
    "text": "basically Paving the way for BSD to get back to having EB get back to having the latest BPF",
    "start": "3622380",
    "end": "3629960"
  },
  {
    "text": "yes thanks Brendan that was a really great talk really enjoyed it uh you mentioned",
    "start": "3630420",
    "end": "3635940"
  },
  {
    "text": "that uh BPF has a verifier yeah that Gates all the code",
    "start": "3635940",
    "end": "3641520"
  },
  {
    "text": "um I wonder uh what conditions are verified and how you express those",
    "start": "3641520",
    "end": "3646619"
  },
  {
    "text": "conditions like is there a language like a DSL for that",
    "start": "3646619",
    "end": "3652020"
  },
  {
    "text": "it is the main documentation is the verify code itself we need to come up",
    "start": "3652020",
    "end": "3658559"
  },
  {
    "text": "with better documentations for it it's I I have done BPF internal talks where I",
    "start": "3658559",
    "end": "3664079"
  },
  {
    "text": "talk about some of the things it looks for so it looks for backward branches it looks for unreachable instructions",
    "start": "3664079",
    "end": "3670619"
  },
  {
    "text": "programs should have one starting point and one ending point and there's just endless of these rules that have been",
    "start": "3670619",
    "end": "3676079"
  },
  {
    "text": "added it's if you're a BPF developer who's doing BPF by code you are swearing",
    "start": "3676079",
    "end": "3681780"
  },
  {
    "text": "every day at the verifier because it's always rejecting your code and when I first did this in 2014 there weren't",
    "start": "3681780",
    "end": "3688140"
  },
  {
    "text": "even any helpful error messages so like I'd write stuff and it would just be",
    "start": "3688140",
    "end": "3693240"
  },
  {
    "text": "like error it's like great I'll try it differently error it's like I'm just going to mash it and just try it like",
    "start": "3693240",
    "end": "3699180"
  },
  {
    "text": "every different way I can think of and see and see if I can get it through the verifier so people are complaining these",
    "start": "3699180",
    "end": "3704819"
  },
  {
    "text": "days about oh BPF is so hard it's like you think it's hard now when the verifier has like a human error messages",
    "start": "3704819",
    "end": "3711359"
  },
  {
    "text": "like back in the day there's nothing like I could get a stack Overflow there's absolutely nothing at all so it",
    "start": "3711359",
    "end": "3717059"
  },
  {
    "text": "was super hard in the early days unfortunately now you know if there's examples that we do have a stack",
    "start": "3717059",
    "end": "3723480"
  },
  {
    "text": "Overflow for ebpf we can ask questions as well but um but yeah if you run into verify",
    "start": "3723480",
    "end": "3730319"
  },
  {
    "text": "issues you have to read the source code because it explains all of the rules that it's checking",
    "start": "3730319",
    "end": "3735839"
  },
  {
    "text": "hey um you mentioned manually putting these flame graphs up on the wall and and looking at the differences are there",
    "start": "3735839",
    "end": "3742440"
  },
  {
    "text": "some automated tools that would do that and detect regressions things like that I would keep all of my so companies are",
    "start": "3742440",
    "end": "3749819"
  },
  {
    "text": "working on continuous profiling and they're doing flame graphs we did flame Commander at Netflix and we did",
    "start": "3749819",
    "end": "3755460"
  },
  {
    "text": "differential flame graphs so you can compare two different flame graphs it's harder than it sounds because the Java",
    "start": "3755460",
    "end": "3761520"
  },
  {
    "text": "can inline things differently so you've got to do the uninline versions of the stack tracers so that they're Apples to",
    "start": "3761520",
    "end": "3766859"
  },
  {
    "text": "Apples I I don't have a a go-to company recommendation for this stuff but I'd",
    "start": "3766859",
    "end": "3772260"
  },
  {
    "text": "say it's an emerging stuff if you're interested in it you can probably do cool things and open source them that",
    "start": "3772260",
    "end": "3778680"
  },
  {
    "text": "that we will use at Netflix I collected lots and lots of profiles I didn't just have them on mobile I'd have them in a",
    "start": "3778680",
    "end": "3786000"
  },
  {
    "text": "directory and when there were issues I could open the flame graphs up in different tabs and then I'd blink",
    "start": "3786000",
    "end": "3792299"
  },
  {
    "text": "between them like looking for planet Pluto and be like oh that that Tower is moving this is also one of the reasons",
    "start": "3792299",
    "end": "3799079"
  },
  {
    "text": "why I like keeping it alphabetical or keeping it a consistent axis some people change the axis it's like we should sort",
    "start": "3799079",
    "end": "3805500"
  },
  {
    "text": "it based on bigger profile to little to least bigger profile and when you do that things will hop around the ordering",
    "start": "3805500",
    "end": "3812339"
  },
  {
    "text": "will hop around all the time so you can't do this visual comparison and so it's alphabet or call site keeps the",
    "start": "3812339",
    "end": "3820140"
  },
  {
    "text": "ordering consistent from one profile to the next so that's why I do that but um",
    "start": "3820140",
    "end": "3826200"
  },
  {
    "text": "but you know there are companies that are doing stuff in Intel acquired granulate they're taking flame grass and they analyze the flame graph to see what",
    "start": "3826200",
    "end": "3834119"
  },
  {
    "text": "performance wins can be automatically done by AI but I'd say it's an emerging space",
    "start": "3834119",
    "end": "3841099"
  },
  {
    "text": "oh yeah so you mentioned that BPF can't have unbounded loops why is that",
    "start": "3841500",
    "end": "3846900"
  },
  {
    "text": "Ah that's a good question bkf can't have unbounded loops because the BPF program runs with interrupts disabled so if you",
    "start": "3846900",
    "end": "3853200"
  },
  {
    "text": "got into an infinite Loop your system would be bricked you you could you'd have to power cycle",
    "start": "3853200",
    "end": "3859319"
  },
  {
    "text": "it so it's that's because of the context that BPF is running it's it's it's a",
    "start": "3859319",
    "end": "3864960"
  },
  {
    "text": "high level kernel context so BPF programs have to finish in a certain amount of time",
    "start": "3864960",
    "end": "3871859"
  },
  {
    "text": "otherwise bad things happen if you disable interrupts for too long but bad things can queue up and and buffer and",
    "start": "3871859",
    "end": "3880339"
  },
  {
    "text": "and Brendan in the context of um say a microservice architecture say 1700",
    "start": "3880680",
    "end": "3887040"
  },
  {
    "text": "Services um running long term or or a um serverless architecture what kind of",
    "start": "3887040",
    "end": "3893280"
  },
  {
    "text": "time range would you be collecting these uh flame graph data sets for will it be by hour by day so so that you can",
    "start": "3893280",
    "end": "3901140"
  },
  {
    "text": "compare them later does that make sense yeah so it's up to you how do you it's more of a continuous profiling question",
    "start": "3901140",
    "end": "3907680"
  },
  {
    "text": "it's up to you how you want to how you want to do it Google has done binary work in continuous profiling and at some point",
    "start": "3907680",
    "end": "3914520"
  },
  {
    "text": "they were doing like one hurt profiling on everything 24x7 which sounds",
    "start": "3914520",
    "end": "3919859"
  },
  {
    "text": "very gentle if it sounds like too low to be useful but over a period of time it is useful because you've got one Hertz",
    "start": "3919859",
    "end": "3925920"
  },
  {
    "text": "times 60 seconds times 60 Minutes they've got enough samples for flame graph and so when I think about about how do",
    "start": "3925920",
    "end": "3932520"
  },
  {
    "text": "we actually deploy this in our environment it's what is the frequency of continuous profiling",
    "start": "3932520",
    "end": "3937680"
  },
  {
    "text": "that's one model of doing it 24x7 at Netflix we weren't doing that we were",
    "start": "3937680",
    "end": "3943040"
  },
  {
    "text": "generating a flame graph every hour on we'd take a micro service pick an",
    "start": "3943040",
    "end": "3948660"
  },
  {
    "text": "instance just a like a random instance do a flame graph save it into S3 and",
    "start": "3948660",
    "end": "3954720"
  },
  {
    "text": "then do that across the Netflix site and then the flank Commander UI let you uh browse the prior uh flame graphs you",
    "start": "3954720",
    "end": "3963480"
  },
  {
    "text": "could say this is my microservice and it's like okay here's the prior flame graphs that we collected we what about I",
    "start": "3963480",
    "end": "3969359"
  },
  {
    "text": "think you asked like what about expiring how long should we keep it for I don't think Martin and I did any any",
    "start": "3969359",
    "end": "3976020"
  },
  {
    "text": "work on that and so in five years from now Netflix might discover why do we have so many gigabytes of flame graphs",
    "start": "3976020",
    "end": "3982260"
  },
  {
    "text": "it's like oh there's two Engineers who left just left it running like forever so I we just left it running so",
    "start": "3982260",
    "end": "3988980"
  },
  {
    "text": "but yeah I mean I would I would want to keep them for I want to keep representative ones for as long as",
    "start": "3988980",
    "end": "3994680"
  },
  {
    "text": "possible and have some sort of policy for it the flame graphs themselves they're not that big so like you can have a flame graph and it is maybe five",
    "start": "3994680",
    "end": "4002420"
  },
  {
    "text": "megabytes or one megabyte is this fig it's nice to keep the profile as well so that you can regenerate the flying graph",
    "start": "4002420",
    "end": "4009079"
  },
  {
    "text": "or do feed it into sometimes you feed into the Firefox profile or other tools as well",
    "start": "4009079",
    "end": "4015740"
  },
  {
    "text": "uh questions online uh we have not had any questions come through online",
    "start": "4015740",
    "end": "4021140"
  },
  {
    "text": "just double check no so uh thank you everyone for your questions thank you Brendan I appreciate your time today uh",
    "start": "4021140",
    "end": "4027680"
  },
  {
    "text": "we are going to take a break now for 30 minutes uh back at 11 o'clock sharp to",
    "start": "4027680",
    "end": "4033020"
  },
  {
    "text": "hear about Reviving The Art of software design so uh thanks again to Brennan",
    "start": "4033020",
    "end": "4038599"
  },
  {
    "text": "cheers",
    "start": "4038599",
    "end": "4040900"
  }
]