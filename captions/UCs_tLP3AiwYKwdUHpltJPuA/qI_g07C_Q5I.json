[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "so welcome to the track on nosql databases although it seems like we've already had a couple of tracks on nosql",
    "start": "280",
    "end": "7920"
  },
  {
    "text": "databases um my name is Martin Fowler um stenosi has hosted the track he asked me",
    "start": "7920",
    "end": "13120"
  },
  {
    "text": "to kick things off most of this track is going to be about practical experience of people making use of nosql databases",
    "start": "13120",
    "end": "21400"
  },
  {
    "text": "um but this talk is the exception because this is really an introduction to what nosql databases are all about um",
    "start": "21400",
    "end": "28279"
  },
  {
    "text": "I'm going to do my best to cram into 50 minutes as much useful information as I",
    "start": "28279",
    "end": "33280"
  },
  {
    "text": "can that will help you give you a context for understanding a lot of what goes on in the later",
    "start": "33280",
    "end": "40000"
  },
  {
    "text": "talks and the first part of this is I'm going to talk a little bit about the history of nosql databases because as if",
    "start": "40000",
    "end": "47680"
  },
  {
    "start": "42000",
    "end": "471000"
  },
  {
    "text": "with many things to understand why something is the way it is it's useful to know how on Earth it got there in the",
    "start": "47680",
    "end": "53719"
  },
  {
    "text": "first place now when I started in the computer industry in the mid 80s it was just at",
    "start": "53719",
    "end": "60879"
  },
  {
    "text": "the point that relational databases were really coming in and beginning their Rise um it's kind of hard to imagine",
    "start": "60879",
    "end": "68520"
  },
  {
    "text": "that there was a time without relational databases but I remember when they were the new hot thing that was people were",
    "start": "68520",
    "end": "75000"
  },
  {
    "text": "arguing about whether there would be any good or not and they've brought us many benefits obviously they look at the",
    "start": "75000",
    "end": "81520"
  },
  {
    "text": "Persistence of our data and they're also very important in the fact that they manage concurrency through",
    "start": "81520",
    "end": "87799"
  },
  {
    "text": "transactions SQL has become a de facto standard language to talking to these databases it's not entirely standard but",
    "start": "87799",
    "end": "95880"
  },
  {
    "text": "it's standard enough that once you know SQL you can talk to these different tools they've also become very important",
    "start": "95880",
    "end": "102600"
  },
  {
    "text": "for many organizations for integration and Reporting which as we'll see has both its ups and",
    "start": "102600",
    "end": "108920"
  },
  {
    "text": "downsides so SQL databases are a really good thing but they also have some",
    "start": "108920",
    "end": "114119"
  },
  {
    "text": "problems and the most obvious problem is one that most application developers run into um as they're working with them",
    "start": "114119",
    "end": "121680"
  },
  {
    "text": "which is that we assemble structures of objects in memory often in terms of kind",
    "start": "121680",
    "end": "127920"
  },
  {
    "text": "of a cohesive hole of things and then in order to save it off to the database we have to strip out it into bits so that",
    "start": "127920",
    "end": "135000"
  },
  {
    "text": "it goes into those individual rows in individual tables a single logical structure in uh for our user interface",
    "start": "135000",
    "end": "142560"
  },
  {
    "text": "and for our processing in memory ends up being splattered across lots and lots of tables this is referred to as the",
    "start": "142560",
    "end": "151280"
  },
  {
    "text": "impedance mismatch problem right the fact that we have these very two different models of how to look at",
    "start": "151280",
    "end": "157040"
  },
  {
    "text": "things and the fact that we have to match them causes difficulties this is what leads to",
    "start": "157040",
    "end": "162720"
  },
  {
    "text": "object relational mapping Frameworks and all that kind of stuff now the impedence mismatch problem",
    "start": "162720",
    "end": "169080"
  },
  {
    "text": "is sufficiently of awkward problem that in the mid90s people said well we think",
    "start": "169080",
    "end": "175920"
  },
  {
    "text": "relational databases are going to go away object databases are going to come in that way we can take our inmemory",
    "start": "175920",
    "end": "181800"
  },
  {
    "text": "structures and save them directly to disk without any of this mapping between the",
    "start": "181800",
    "end": "187400"
  },
  {
    "text": "two but we know what happened there we didn't see the object databases people",
    "start": "187400",
    "end": "192799"
  },
  {
    "text": "like me who thought that they were going to be a dominant thing in the future we were wrong and you still listen to me",
    "start": "192799",
    "end": "200280"
  },
  {
    "text": "but oh well I guess you're easily taken but we argue endlessly about why",
    "start": "200280",
    "end": "208519"
  },
  {
    "text": "it is object data es didn't actually fulfill that potential and I think at",
    "start": "208519",
    "end": "214080"
  },
  {
    "text": "the heart of it is the fact that SQL databases had become an integration mechanism that many people integrated",
    "start": "214080",
    "end": "221599"
  },
  {
    "text": "different applications through SQL databases and as a result that really made it very hard for any other kind of",
    "start": "221599",
    "end": "228200"
  },
  {
    "text": "technology to come in and that led to relational continuing to be dominant",
    "start": "228200",
    "end": "233879"
  },
  {
    "text": "right through into the 2000s so relational had 20 years of",
    "start": "233879",
    "end": "241560"
  },
  {
    "text": "complete dominance of certainly the Enterprise data space and plenty of other ones as well I mean we saw with",
    "start": "241560",
    "end": "247079"
  },
  {
    "text": "the the science work at the large hon collider they didn't really want to use relational databases and but they had to",
    "start": "247079",
    "end": "254439"
  },
  {
    "text": "to some degree at least what changed really was the rise",
    "start": "254439",
    "end": "260600"
  },
  {
    "text": "of the internet and particularly sites that have lots and lots of traffic the big internet sites such as an Amazon or",
    "start": "260600",
    "end": "268800"
  },
  {
    "text": "a Google or a bet fair or something of that kind as you get large amounts of traffic coming into your data what do",
    "start": "268800",
    "end": "275160"
  },
  {
    "text": "you do well you need to scale things and the one obvious route is to scale things up buy bigger boxes but that approach",
    "start": "275160",
    "end": "282919"
  },
  {
    "text": "has problems you can only it costs a lot and there are real limits as to how far you can go so as I hope you all know a",
    "start": "282919",
    "end": "291199"
  },
  {
    "text": "lot of organizations most famously Google use a completely different approach lots and lots of little boxes",
    "start": "291199",
    "end": "297440"
  },
  {
    "text": "just basically CPU m boards discs commodity Hardware all thrown into these",
    "start": "297440",
    "end": "302520"
  },
  {
    "text": "massive grids but here there's an issue for the data storage SQL was designed to run on",
    "start": "302520",
    "end": "309240"
  },
  {
    "text": "those big boxes designed to run as a single data uh node system it does not",
    "start": "309240",
    "end": "316160"
  },
  {
    "text": "work very well with large clusters of little boxes and several of the Big Data",
    "start": "316160",
    "end": "321880"
  },
  {
    "text": "players understood this um they tried they attempted I've talked to several",
    "start": "321880",
    "end": "327800"
  },
  {
    "text": "people who have attempted to spread relational databases and put run them",
    "start": "327800",
    "end": "333199"
  },
  {
    "text": "across clusters the usual term that comes up in conversation when they describe had I tried to do this was on",
    "start": "333199",
    "end": "339479"
  },
  {
    "text": "natural acts it's very hard to do so a couple of organization said",
    "start": "339479",
    "end": "347160"
  },
  {
    "text": "we've had enough of this we need to do something different and they developed their own data storage systems that were",
    "start": "347160",
    "end": "354280"
  },
  {
    "text": "really quite different from relational databases and they started talking a little bit about them published papers",
    "start": "354280",
    "end": "360199"
  },
  {
    "text": "um that talked about what they were up to and it is this that really inspired a",
    "start": "360199",
    "end": "366160"
  },
  {
    "text": "whole new movement of databases which is the nosql movement now it's important at this",
    "start": "366160",
    "end": "372639"
  },
  {
    "text": "point to talk a little bit about where this term nosql comes from a lot of people complain about it quite",
    "start": "372639",
    "end": "378039"
  },
  {
    "text": "reasonably because they say well it's a really odd term trying to define a movement by something it's not and the",
    "start": "378039",
    "end": "385880"
  },
  {
    "text": "origin is really very simple there was this guy in London Johan Oscar he'd done a lot of work with Hadoop and things",
    "start": "385880",
    "end": "391880"
  },
  {
    "text": "like that he wanted to have a look he had to go to a conference in California",
    "start": "391880",
    "end": "397440"
  },
  {
    "text": "he wanted to take a look at all of these various interesting databases that were poking around at the time and he said",
    "start": "397440",
    "end": "403639"
  },
  {
    "text": "proposed a Meetup a little meeting where people could discuss ideas and of course if you're going to do that in the late",
    "start": "403639",
    "end": "409440"
  },
  {
    "text": "2000s you absolutely need something that's really really important you need",
    "start": "409440",
    "end": "415000"
  },
  {
    "text": "a Twitter hashtag so he asked around well what would be a good #it's got to be short",
    "start": "415000",
    "end": "420759"
  },
  {
    "text": "it's got to be unique um so we can easily sort on it and a guy came up with",
    "start": "420759",
    "end": "426479"
  },
  {
    "text": "uh the hashtag nosql that's all nosql was ever meant to be a Twitter hashtag",
    "start": "426479",
    "end": "433319"
  },
  {
    "text": "to advertise a single meeting one point in time the fact that it has now become",
    "start": "433319",
    "end": "439319"
  },
  {
    "text": "the the the name of the whole movement was completely accidental nobody thought that was going to be the case so you",
    "start": "439319",
    "end": "446039"
  },
  {
    "text": "know this is the way language often goes it's very unpredictable fits starts so there was a whole bunch of",
    "start": "446039",
    "end": "453000"
  },
  {
    "text": "people who turned up to that meeting by the way this is the the list of of people there that's not what we call the",
    "start": "453000",
    "end": "459160"
  },
  {
    "text": "whole set of nosql databases since of a lot of databases who weren't at that meeting are now considered part of that",
    "start": "459160",
    "end": "465960"
  },
  {
    "text": "nosql umbrella so this inevitably leads you to the question of well what is the",
    "start": "465960",
    "end": "471800"
  },
  {
    "start": "471000",
    "end": "576000"
  },
  {
    "text": "definition of nosql and this is something I had to kind of think about writing a book about the subject if you",
    "start": "471800",
    "end": "477759"
  },
  {
    "text": "it's important if you're going to write a book about about something to Define what it is you're writing about my",
    "start": "477759",
    "end": "482800"
  },
  {
    "text": "conclusion is we cannot Define no SQL databases because of this very odd",
    "start": "482800",
    "end": "488120"
  },
  {
    "text": "history what we can do is we can identify some common characteristics of nosql",
    "start": "488120",
    "end": "494440"
  },
  {
    "text": "databases and there's a whole bunch of ease obviously nosql databases are not",
    "start": "494440",
    "end": "500240"
  },
  {
    "text": "relational it's actually more about non-relational than it is about no SQL",
    "start": "500240",
    "end": "505520"
  },
  {
    "text": "obviously as a strong leading towards cluster friendly less the ability to run on large clusters because that's what",
    "start": "505520",
    "end": "512518"
  },
  {
    "text": "the original spark through um Google and Amazon came from but that's not an absolute characteristic there are some",
    "start": "512519",
    "end": "518919"
  },
  {
    "text": "nosql databases that aren't really focused around running on clusters most of these databases rather",
    "start": "518919",
    "end": "525720"
  },
  {
    "text": "interestingly are open source so most of the things we generally call nosql databases are open source there are",
    "start": "525720",
    "end": "533200"
  },
  {
    "text": "commercial tools that like to call themselves nosql databases and maybe over time that will become part of the",
    "start": "533200",
    "end": "540000"
  },
  {
    "text": "that would no longer be a common characteristic but it is still a common characteristic at the",
    "start": "540000",
    "end": "545560"
  },
  {
    "text": "moment perhaps most importantly is they're all things that have come out of a 21st century website culture um there",
    "start": "545560",
    "end": "553440"
  },
  {
    "text": "are plenty of databases out there going back long before relational databases that do not use SQL or the relational",
    "start": "553440",
    "end": "559800"
  },
  {
    "text": "model but we don't call such things as IMS or Ms for those who have heard of either of those things Rel uh no SQL",
    "start": "559800",
    "end": "567880"
  },
  {
    "text": "databases so that's what I see as the common characteristics I'll mention the",
    "start": "567880",
    "end": "572959"
  },
  {
    "text": "last one in a moment so one of the things that's interesting about nosql databases is",
    "start": "572959",
    "end": "580360"
  },
  {
    "start": "576000",
    "end": "604000"
  },
  {
    "text": "they use different data models to the relational model obviously since the name says",
    "start": "580360",
    "end": "586120"
  },
  {
    "text": "that and if we kind of plot a picture of um the most commonly referred to nosql",
    "start": "586120",
    "end": "593120"
  },
  {
    "text": "databases typically what we see is that they get divided into four broad chunks",
    "start": "593120",
    "end": "598160"
  },
  {
    "text": "based on their data model and let's dig into these data models a little bit more so the most",
    "start": "598160",
    "end": "604760"
  },
  {
    "start": "604000",
    "end": "637000"
  },
  {
    "text": "simple data model to talk about is that of the key Value Store the basic idea is",
    "start": "604760",
    "end": "610200"
  },
  {
    "text": "you have a key you go to the database tell me grab me the value of this key the database knows absolutely nothing",
    "start": "610200",
    "end": "616680"
  },
  {
    "text": "about what's in that value it could be a single number it could be some complex uh document uh it could be an image the",
    "start": "616680",
    "end": "625120"
  },
  {
    "text": "database doesn't know doesn't care now you can think of this basic as just a hashmap but persistent in the disk",
    "start": "625120",
    "end": "632839"
  },
  {
    "text": "simple as that another data model that's very common is the document data model now",
    "start": "632839",
    "end": "640320"
  },
  {
    "start": "637000",
    "end": "1056000"
  },
  {
    "text": "the document data model thinks of the database as this um storage of a a whole mass of different documents where each",
    "start": "640320",
    "end": "647600"
  },
  {
    "text": "document is some complex data structure usually um that data structure is",
    "start": "647600",
    "end": "654800"
  },
  {
    "text": "represented in forms of Json because Json is what's fashionable these days I mean you could do it in XML but who",
    "start": "654800",
    "end": "661639"
  },
  {
    "text": "wants to be seen wearing XML in public no one so we have these different documents",
    "start": "661639",
    "end": "668800"
  },
  {
    "text": "that all flash around and the usual document databases will allow you to say give me a document that has these fields",
    "start": "668800",
    "end": "675720"
  },
  {
    "text": "with these those you can query into the document structure and you can usually retrieve portions of a document or",
    "start": "675720",
    "end": "681880"
  },
  {
    "text": "update portions of a document so there's a big difference there to to the key Value Store where it's a very opaque",
    "start": "681880",
    "end": "688519"
  },
  {
    "text": "structure but the document is much more transparent one thing to notice right",
    "start": "688519",
    "end": "694160"
  },
  {
    "text": "away about these databases about document databases and indeed all nosql databases is that they don't tend to",
    "start": "694160",
    "end": "700920"
  },
  {
    "text": "have a set schema with a relational database you can only put the data into the database as long as it fits in the",
    "start": "700920",
    "end": "707639"
  },
  {
    "text": "schema that you've defined for that database we've uh almost all know SQL",
    "start": "707639",
    "end": "712959"
  },
  {
    "text": "databases basically you can shve anything in you like any any stuff you like just go in there and the no people",
    "start": "712959",
    "end": "719360"
  },
  {
    "text": "will talk endlessly about how this increases your flexibility it makes it easier for to migrate data over time",
    "start": "719360",
    "end": "725680"
  },
  {
    "text": "it's all absolutely wonderful and as usual that's not really the entire truth",
    "start": "725680",
    "end": "732079"
  },
  {
    "text": "I mean usually when you're talking to a database you want to get some specific pieces of data out of it you're going to",
    "start": "732079",
    "end": "737800"
  },
  {
    "text": "say I would like the price I would like the quantity I would like the customer as soon as you're doing that what you're",
    "start": "737800",
    "end": "744079"
  },
  {
    "text": "doing is you're setting up a implicit schema you are a assuming that an order",
    "start": "744079",
    "end": "750360"
  },
  {
    "text": "has a price field you are assuming that the order has a quantity field you",
    "start": "750360",
    "end": "756000"
  },
  {
    "text": "you're assuming that it is called price and not um cost or um price to customer",
    "start": "756000",
    "end": "762839"
  },
  {
    "text": "or whatever other thing you could think of what it would be that implicit schema is still in place and you've got to",
    "start": "762839",
    "end": "770199"
  },
  {
    "text": "manage that implicit schema in many ways in a similar approach to the way that you manage the relational um more strict",
    "start": "770199",
    "end": "777639"
  },
  {
    "text": "schema so so schemes is really a bit of a wussy term",
    "start": "777639",
    "end": "783880"
  },
  {
    "text": "here now it by having the no fixed storage schema does give you some",
    "start": "783880",
    "end": "789839"
  },
  {
    "text": "options that you don't get with relational databases and and there is a difference and there are advantages in",
    "start": "789839",
    "end": "795880"
  },
  {
    "text": "terms of flexibilities as well but you can't ignore the fact that you were always dealing with an implicit schema",
    "start": "795880",
    "end": "802120"
  },
  {
    "text": "the only time you don't have to worry about an implicit schema is if you do something like give me all the fields in",
    "start": "802120",
    "end": "807519"
  },
  {
    "text": "this record and throw up on the screen field name value and occasionally you want to do that but most of the time you",
    "start": "807519",
    "end": "814160"
  },
  {
    "text": "actually want to do something more interesting so I've talked about two",
    "start": "814160",
    "end": "820199"
  },
  {
    "text": "data models key value and document data models and I've presented them as two",
    "start": "820199",
    "end": "827120"
  },
  {
    "text": "quite different things but actually the the line between these two is a hell of",
    "start": "827120",
    "end": "833279"
  },
  {
    "text": "a lot more fuzzy than that many key value data stores allow",
    "start": "833279",
    "end": "838600"
  },
  {
    "text": "you to store metadata about the value this allows of course you to have build",
    "start": "838600",
    "end": "844040"
  },
  {
    "text": "more complicated indexes I mean it's if you want to get all the orders for a particular customer you don't want to",
    "start": "844040",
    "end": "849880"
  },
  {
    "text": "search every order in the database to find that the moral equivalent of a table scan you want to index that so key",
    "start": "849880",
    "end": "857720"
  },
  {
    "text": "value databases allow you to store various metadata things typically which kind of makes them feel a bit like",
    "start": "857720",
    "end": "863880"
  },
  {
    "text": "document databases right and then on a document database yeah you can do all",
    "start": "863880",
    "end": "869759"
  },
  {
    "text": "sorts of queries against a thing but often there's an ID and often when you",
    "start": "869759",
    "end": "875160"
  },
  {
    "text": "actually look that up you actually do it by saying give me the thing with that particular ID and that ID is effectively",
    "start": "875160",
    "end": "881000"
  },
  {
    "text": "the same as the key in a key value store so the boundary between a key",
    "start": "881000",
    "end": "887360"
  },
  {
    "text": "value and a document database as I said is somewhat blurry and I've often heard a particular database sometimes",
    "start": "887360",
    "end": "893040"
  },
  {
    "text": "described as key value and sometimes described as document in reality I",
    "start": "893040",
    "end": "898720"
  },
  {
    "text": "wouldn't worry too much about the difference between them think of it as a kind of a first approximation um to work",
    "start": "898720",
    "end": "904399"
  },
  {
    "text": "with but it's not actually that important as it goes on what is important though is that both",
    "start": "904399",
    "end": "911120"
  },
  {
    "text": "key value and document databases have this common notion of you're taking some",
    "start": "911120",
    "end": "917480"
  },
  {
    "text": "complex structure that you can save as a single unit into the",
    "start": "917480",
    "end": "923040"
  },
  {
    "text": "database whether it be an a relatively transparent document or a completely",
    "start": "923040",
    "end": "928120"
  },
  {
    "text": "opaque value that notion still exists and that commonality made me",
    "start": "928120",
    "end": "934399"
  },
  {
    "text": "think well we really need some term to describe databases that work kind of like that and so um for the book I came",
    "start": "934399",
    "end": "941600"
  },
  {
    "text": "up with a term an aggregate oriented database that have that allows you to store these big complex structures and",
    "start": "941600",
    "end": "948800"
  },
  {
    "text": "where did the term aggregate come from it comes from um this book here U",
    "start": "948800",
    "end": "954240"
  },
  {
    "text": "written by Eric Evans domain driven design how many people have read domain driven design hopefully good few of you",
    "start": "954240",
    "end": "960279"
  },
  {
    "text": "excellent book um it really talks about how to think about modeling domains and",
    "start": "960279",
    "end": "965680"
  },
  {
    "text": "one of the key Concepts in the early part of domain driven design is that often when we want to model things we",
    "start": "965680",
    "end": "972519"
  },
  {
    "text": "have to group things together into natural Aggregates because when we're talking to a database even a relational",
    "start": "972519",
    "end": "978800"
  },
  {
    "text": "database it makes sense to think of those Aggregates when we're storing and retrieving data if we're modeling um",
    "start": "978800",
    "end": "986880"
  },
  {
    "text": "orders for instance usually will have separate classes for the orders and the line items that's pretty kind of a",
    "start": "986880",
    "end": "993440"
  },
  {
    "text": "standard object 101 model but we think of the order as a whole thing a single",
    "start": "993440",
    "end": "999399"
  },
  {
    "text": "unit so an aggregate may be many many objects in many classes it may be quite",
    "start": "999399",
    "end": "1004880"
  },
  {
    "text": "a complex structure but when we're talking about persistent it or retrieving it from memory we think of it",
    "start": "1004880",
    "end": "1011639"
  },
  {
    "text": "as one thing to cross back and forth now in a relational database we",
    "start": "1011639",
    "end": "1017920"
  },
  {
    "text": "have to SPL FL of that aggregate across a whole bunch of tables but nice thing about an aggregate",
    "start": "1017920",
    "end": "1023920"
  },
  {
    "text": "oriented database is we can save that aggregate as its single unit in the terms of the database itself so for a",
    "start": "1023920",
    "end": "1031480"
  },
  {
    "text": "key value database the aggregate is the value in a document database the",
    "start": "1031480",
    "end": "1038400"
  },
  {
    "text": "aggregate is the document and that becomes the single unit that we move back and",
    "start": "1038400",
    "end": "1045720"
  },
  {
    "text": "forth and I I certainly find this is a much easier way to think about the commonality um of these classes of",
    "start": "1045720",
    "end": "1054720"
  },
  {
    "text": "databases now the third data model I'm going to briefly describe is that of",
    "start": "1054840",
    "end": "1060640"
  },
  {
    "start": "1056000",
    "end": "1220000"
  },
  {
    "text": "column family databases now this is the more complicated data model um of these",
    "start": "1060640",
    "end": "1066440"
  },
  {
    "text": "it is another aggregate oriented database however the column family database basically says we have some",
    "start": "1066440",
    "end": "1073440"
  },
  {
    "text": "think of it single key they call it a row key and then within that that we can",
    "start": "1073440",
    "end": "1078919"
  },
  {
    "text": "store multiple column families where each column family is a a combination of",
    "start": "1078919",
    "end": "1085200"
  },
  {
    "text": "columns that kind of fit together the column family here is effectively your",
    "start": "1085200",
    "end": "1091120"
  },
  {
    "text": "Aggregate and you address it by a combination of the row key and the column family",
    "start": "1091120",
    "end": "1098400"
  },
  {
    "text": "name now column families can also be kind of different look at the lower one here that is effectively a list of items",
    "start": "1098400",
    "end": "1106200"
  },
  {
    "text": "the the various orders for a customer so that doesn't kind of feel so much like the a typical um record structure",
    "start": "1106200",
    "end": "1113679"
  },
  {
    "text": "that you might know about but it is of course the same as storing an array in a document and and something of that kind",
    "start": "1113679",
    "end": "1120480"
  },
  {
    "text": "so again you get something of that that kind of Rich structure um that you can build in here column family databases",
    "start": "1120480",
    "end": "1127799"
  },
  {
    "text": "give you a slightly more complex data model to work with but the benefit you get is again in terms of the retrieval",
    "start": "1127799",
    "end": "1134320"
  },
  {
    "text": "you can more easily pull individual columns and things of that out of case but again the broad data model is that",
    "start": "1134320",
    "end": "1141880"
  },
  {
    "text": "of an aggregate oriented picture so the great thing about this is",
    "start": "1141880",
    "end": "1149120"
  },
  {
    "text": "that now when you're taking your aggregate in memory instead of spreading it across lots of individual records you",
    "start": "1149120",
    "end": "1156640"
  },
  {
    "text": "get to store the whole thing in the database in one go and the database knows what your aggregate boundaries",
    "start": "1156640",
    "end": "1164039"
  },
  {
    "text": "are now this is interesting where it becomes useful is when we talk about",
    "start": "1164039",
    "end": "1170120"
  },
  {
    "text": "running the system across clusters cuz if you're going to distribute data what you want to do is you want to distribute",
    "start": "1170120",
    "end": "1176440"
  },
  {
    "text": "the data that tends to be accessed together and so the aggregate tells you",
    "start": "1176440",
    "end": "1181520"
  },
  {
    "text": "what data is going to be accessed together so by placing different Aggregates on different nodes across",
    "start": "1181520",
    "end": "1186679"
  },
  {
    "text": "your cluster you know that when somebody says oh give me the details about this particular order you're only going to go",
    "start": "1186679",
    "end": "1192559"
  },
  {
    "text": "to one node on the cluster instead of shooting around godness knows how many to pick up different rows from different",
    "start": "1192559",
    "end": "1197720"
  },
  {
    "text": "tables so aggregate orientation naturally fits in very",
    "start": "1197720",
    "end": "1203679"
  },
  {
    "text": "nicely with storing data on large clusters and that's of course part of",
    "start": "1203679",
    "end": "1209679"
  },
  {
    "text": "the whole thing with big table and Dynamo they both effectively went for um cluster oriented approach um big table",
    "start": "1209679",
    "end": "1215880"
  },
  {
    "text": "very much a column family style approach Dynamo much more A key value store but it makes running on clusters efficiently",
    "start": "1215880",
    "end": "1223200"
  },
  {
    "start": "1220000",
    "end": "1547000"
  },
  {
    "text": "way more straightforward and that's really been as I said the driving Factor here",
    "start": "1223200",
    "end": "1230158"
  },
  {
    "text": "but however nothing is perfect and aggregate orientation isn't always a good",
    "start": "1231520",
    "end": "1237080"
  },
  {
    "text": "think um let's imagine we've got our order system and we want to look at the data like this we want to say given a",
    "start": "1237080",
    "end": "1244320"
  },
  {
    "text": "particular product tell me the revenue tell me a past Revenue we now not care about orders at all we only care about",
    "start": "1244320",
    "end": "1250799"
  },
  {
    "text": "what's going on with individual line items of many orders grouping them together by product effectively what",
    "start": "1250799",
    "end": "1258159"
  },
  {
    "text": "we're doing is we're saying we want to change the aggregation structure from",
    "start": "1258159",
    "end": "1263400"
  },
  {
    "text": "one where orders aggregate line items to ones where products aggregate line items the product now becomes the root of the",
    "start": "1263400",
    "end": "1271360"
  },
  {
    "text": "aggregate now in a relational database this is straightforward we just query the data differently um it's very",
    "start": "1271360",
    "end": "1277679"
  },
  {
    "text": "straightforward to rearrange the data into the structures we might want in different cases with an aggregate",
    "start": "1277679",
    "end": "1283480"
  },
  {
    "text": "oriented database it's a pain in the neck um you can do it and what they'll",
    "start": "1283480",
    "end": "1288720"
  },
  {
    "text": "typically do is they will run map reduce jobs to rearrange all your data into different aggregate forms and and",
    "start": "1288720",
    "end": "1295480"
  },
  {
    "text": "probably keep those um persistent or maybe do even do incremental updates but it's always going to be more",
    "start": "1295480",
    "end": "1301960"
  },
  {
    "text": "complicated so being aggregate oriented is an advantage if most of the time",
    "start": "1301960",
    "end": "1307799"
  },
  {
    "text": "you're using the same aggregate to push data back and forth um into persistence it is a disadvantage if you want to",
    "start": "1307799",
    "end": "1314559"
  },
  {
    "text": "slice and dice your data in different ways",
    "start": "1314559",
    "end": "1320039"
  },
  {
    "text": "so what I've done so far is I've managed to cover some of these models I've",
    "start": "1321039",
    "end": "1327080"
  },
  {
    "text": "basically taken the document column family and key value and lumped them together under this aggregate oriented",
    "start": "1327080",
    "end": "1333679"
  },
  {
    "text": "category and I think that's a useful abstraction at least at the level of what I can say in 50",
    "start": "1333679",
    "end": "1339480"
  },
  {
    "text": "minutes there's one very noticeable outly that you see though and that is graph databases graph databases are not",
    "start": "1339480",
    "end": "1347200"
  },
  {
    "text": "aggregate oriented at all but use a completely different data model um a graph databases data model is",
    "start": "1347200",
    "end": "1354440"
  },
  {
    "text": "basically that of a no and Arc graph structure not a bar chart or anything",
    "start": "1354440",
    "end": "1359520"
  },
  {
    "text": "like that but just nodes and arcs something that hopefully we be familiar um at least from uh a few boring",
    "start": "1359520",
    "end": "1365840"
  },
  {
    "text": "computer science classes the nice thing about storing a graph database is that it's very good at",
    "start": "1365840",
    "end": "1372200"
  },
  {
    "text": "handling moving across relationships between things relational databases you might",
    "start": "1372200",
    "end": "1378440"
  },
  {
    "text": "think with the word relation in there that they're good at handling relationships but of course relation",
    "start": "1378440",
    "end": "1384440"
  },
  {
    "text": "doesn't mean relationship it means something in SE Theory and actually relational databases are not terribly",
    "start": "1384440",
    "end": "1390679"
  },
  {
    "text": "good at jumping across relationships you have to set up foreign Keys um you have to do joins if you do too many joins you",
    "start": "1390679",
    "end": "1398520"
  },
  {
    "text": "can get in a mess if you've modeled a graph structure or a hierarchy which is a special form of graph structure in a",
    "start": "1398520",
    "end": "1404960"
  },
  {
    "text": "relational database you'll have had this experience it's not straightforward relational databases aren't good at this",
    "start": "1404960",
    "end": "1411880"
  },
  {
    "text": "so graph databases come in and say yeah we can handle um jumping around relationships left right and Center we",
    "start": "1411880",
    "end": "1418559"
  },
  {
    "text": "make it easy to do and we optimize to make it fast to do that kind of thing",
    "start": "1418559",
    "end": "1423840"
  },
  {
    "text": "furthermore we can come up with um an interesting query language that is",
    "start": "1423840",
    "end": "1429600"
  },
  {
    "text": "designed around allowing you to query graph structures um this kind of query here",
    "start": "1429600",
    "end": "1436039"
  },
  {
    "text": "this is a a Cipher from NE for J is all about saying well given a certain um",
    "start": "1436039",
    "end": "1442279"
  },
  {
    "text": "graph structure let me use that graph structure to express a more complex query and you can do some very",
    "start": "1442279",
    "end": "1448640"
  },
  {
    "text": "interested graph oriented queries in graph databases things that would be",
    "start": "1448640",
    "end": "1453679"
  },
  {
    "text": "very very difficult to write in terms of SQL as well as a pig to uh u in terms of",
    "start": "1453679",
    "end": "1460760"
  },
  {
    "text": "performance so in many ways you can kind of think of they've gone in opposite directions aggregate oriented databases",
    "start": "1460760",
    "end": "1467880"
  },
  {
    "text": "take a lot of stuff that's scattered around and puts them into bigger lumps while graph oriented databases",
    "start": "1467880",
    "end": "1475320"
  },
  {
    "text": "kind of break things apart into even smaller units and let you play with those um smaller units more carefully I",
    "start": "1475320",
    "end": "1481640"
  },
  {
    "text": "mean you can still model relationships in um aggregate oriented databases just",
    "start": "1481640",
    "end": "1487000"
  },
  {
    "text": "as you can in relational databases you basically refer to IDs in different documents but it's a lot more",
    "start": "1487000",
    "end": "1494279"
  },
  {
    "text": "messy um so part of your decision is as to whether a a nosql database is going",
    "start": "1494279",
    "end": "1500960"
  },
  {
    "text": "to be interesting to you is how do you work with your data do you tend to work with the same Aggregates all the time",
    "start": "1500960",
    "end": "1507399"
  },
  {
    "text": "which would lead you towards an aggregate oriented approach do you want to really break things up and jump across lots and lots of relationships in",
    "start": "1507399",
    "end": "1514080"
  },
  {
    "text": "the complex structure but would leave you to a graph approach or is the tabular structure working well for you",
    "start": "1514080",
    "end": "1519640"
  },
  {
    "text": "in which case you want to stay with a relational approach so no SQL divides into those",
    "start": "1519640",
    "end": "1527279"
  },
  {
    "text": "two c categories all of these are schemes so the graph databases as well",
    "start": "1527279",
    "end": "1533159"
  },
  {
    "text": "allow you to add any bits of data to any node you have all that flexibility but with the same caution about implicit",
    "start": "1533159",
    "end": "1539960"
  },
  {
    "text": "schemas as well so that is kind of half of the picture the data model",
    "start": "1539960",
    "end": "1547159"
  },
  {
    "start": "1547000",
    "end": "2428000"
  },
  {
    "text": "part now I'm going to move on to another issue which is about consistency and effectively dealing with",
    "start": "1547159",
    "end": "1555320"
  },
  {
    "text": "lots of people trying to modify the same data at the same",
    "start": "1555320",
    "end": "1560360"
  },
  {
    "text": "time you've probably heard something like this that relational databases they are",
    "start": "1561080",
    "end": "1568039"
  },
  {
    "text": "acid they do the familiar acid transactions that we all know and love atomic consistant isolated durable no",
    "start": "1568039",
    "end": "1577080"
  },
  {
    "text": "SQL they don't do any of that kind of thing and of course no SQL people will say well we do bass which is an even",
    "start": "1577080",
    "end": "1584640"
  },
  {
    "text": "more contrived and meaningless acronym it is and I won't even attempt to tell",
    "start": "1584640",
    "end": "1589840"
  },
  {
    "text": "you what it is cuz I can only remember what it is on Tuesdays but basically what it boils",
    "start": "1589840",
    "end": "1596720"
  },
  {
    "text": "down to is if you've got a single unit of information and you want to split it",
    "start": "1596720",
    "end": "1603360"
  },
  {
    "text": "across several tables what you don't want to be do is caught in a position where you only get",
    "start": "1603360",
    "end": "1609960"
  },
  {
    "text": "to write half the data and somebody else reads it or you get to write half of data and somebody takes the same order",
    "start": "1609960",
    "end": "1615720"
  },
  {
    "text": "and writes a different half of the data and F get really messy in that kind of situation you need to have this",
    "start": "1615720",
    "end": "1622360"
  },
  {
    "text": "mechanism to control to effectively give you Atomic updates and that's really what transactions are all about Atomic",
    "start": "1622360",
    "end": "1629559"
  },
  {
    "text": "updates so that you either succeed or fail and nobody kind of comes in the middle and messes things",
    "start": "1629559",
    "end": "1635320"
  },
  {
    "text": "up now when it comes to um our nicely organized set of nosql databases the",
    "start": "1635320",
    "end": "1642399"
  },
  {
    "text": "first thing to point out is graph databases do tend to follow acid updates",
    "start": "1642399",
    "end": "1648039"
  },
  {
    "text": "which makes sense they decompose the data even more than relational databases do so they've got even more of a need to",
    "start": "1648039",
    "end": "1654960"
  },
  {
    "text": "make sure they use transactions to wrap things together so if anybody tells you oh no SQL databases they don't do acid",
    "start": "1654960",
    "end": "1662360"
  },
  {
    "text": "you now know an immediate rejoiner ah but graph databases [Music]",
    "start": "1662360",
    "end": "1668880"
  },
  {
    "text": "do now aggregate oriented databases they actually don't need",
    "start": "1668880",
    "end": "1674399"
  },
  {
    "text": "transactions as much because the aggregate is a kind of bigger more richer structure in fact if you read the",
    "start": "1674399",
    "end": "1681840"
  },
  {
    "text": "domain driven design book one of the things they point out is that the Aggregates in domain driven design are",
    "start": "1681840",
    "end": "1687279"
  },
  {
    "text": "transaction boundaries you shouldn't let transactions cross aggregate boundaries because if you do it it'll just be",
    "start": "1687279",
    "end": "1693640"
  },
  {
    "text": "complicated to manage the concurrence of your system so the domain driven design Community from the beginning even before",
    "start": "1693640",
    "end": "1700039"
  },
  {
    "text": "nosql said keep your transactions within a single Aggregate and that's effectively what you do in um the world",
    "start": "1700039",
    "end": "1708320"
  },
  {
    "text": "of aggregate oriented databases any aggregate update is going to be Atomic",
    "start": "1708320",
    "end": "1713399"
  },
  {
    "text": "it's going to be isolated it's going to be consistent within itself it's only when you update multiple documents in a",
    "start": "1713399",
    "end": "1720279"
  },
  {
    "text": "document or in database that you have to worry about the fact that you haven't got acid transactions but that problem",
    "start": "1720279",
    "end": "1726799"
  },
  {
    "text": "occurs much more rarely than you'd think so that's the first line about",
    "start": "1726799",
    "end": "1734320"
  },
  {
    "text": "acidbase think um a some database are fully acid anyway and the aggregate",
    "start": "1734320",
    "end": "1740200"
  },
  {
    "text": "oriented databases that aren't they are acid within their Aggregates which is kind of what really",
    "start": "1740200",
    "end": "1746320"
  },
  {
    "text": "matters but there's also a bit more to thinking about consistency even than that because even in a relational World",
    "start": "1746320",
    "end": "1753600"
  },
  {
    "text": "acid transactions don't mean we get to be completely consistent and don't have to worry about um update anomalies and I",
    "start": "1753600",
    "end": "1760600"
  },
  {
    "text": "will walk you through what hopefully is a very familiar scenario to point this out and also to illustrate how you deal",
    "start": "1760600",
    "end": "1766440"
  },
  {
    "text": "with um some of this so imagine we have some typical multi-layered system we've got a person talking to a browser",
    "start": "1766440",
    "end": "1773240"
  },
  {
    "text": "browser talks to a server server talks to a single database and we're going to have two people talking to the same data",
    "start": "1773240",
    "end": "1779240"
  },
  {
    "text": "in the same database at the same time although through different browsers and servers and here's the basic little",
    "start": "1779240",
    "end": "1786039"
  },
  {
    "text": "scenario we begin with both people left and right taking the same piece of data",
    "start": "1786039",
    "end": "1793200"
  },
  {
    "text": "with a get request essentially they bring it up onto the browser screen and now the human being goes I need to make",
    "start": "1793200",
    "end": "1800120"
  },
  {
    "text": "some changes to this and eventually the guy on the left",
    "start": "1800120",
    "end": "1806559"
  },
  {
    "text": "I always get my left and right confused says okay I've got my updated data let's post some",
    "start": "1806559",
    "end": "1811600"
  },
  {
    "text": "changes and then shortly afterwards the guy on the right says H I've uploaded my data now let's post some",
    "start": "1811600",
    "end": "1818840"
  },
  {
    "text": "changes now of course if we let that happen just like that warning conflict this is a right",
    "start": "1818840",
    "end": "1827039"
  },
  {
    "text": "right conflict two people have updated the same piece of information they weren't aware of each other's update and",
    "start": "1827039",
    "end": "1832640"
  },
  {
    "text": "they've got themselves in trouble acid to the rescue right what do",
    "start": "1832640",
    "end": "1837760"
  },
  {
    "text": "we do well what we' have to do to prevent this conflict is we wrap the entire interaction from getting the data",
    "start": "1837760",
    "end": "1843840"
  },
  {
    "text": "onto the screen and posting it back again in a transaction that way we make",
    "start": "1843840",
    "end": "1849200"
  },
  {
    "text": "sure the database will ensure that we don't get a conflict effectively one of them will be told no you got to do this",
    "start": "1849200",
    "end": "1855519"
  },
  {
    "text": "again retrieve your data again we don't get conflicts problem solved how many people do this on your production",
    "start": "1855519",
    "end": "1863840"
  },
  {
    "text": "systems yeah occasionally you can get away with this most of the time you",
    "start": "1864240",
    "end": "1870440"
  },
  {
    "text": "can't why because holding a transaction open for that length of time while",
    "start": "1870440",
    "end": "1876880"
  },
  {
    "text": "you've got a user looking and updating the data through the UI that's going to really suck your performance out of your",
    "start": "1876880",
    "end": "1884679"
  },
  {
    "text": "system right so and and I want to stress you can do this in some circumstances if",
    "start": "1884679",
    "end": "1891320"
  },
  {
    "text": "your performance needs are are really very minor you know you've only got a handful of people looking using the",
    "start": "1891320",
    "end": "1897080"
  },
  {
    "text": "system at once you might be able to get away with this approach and it and it is advantageous to do so because a whole",
    "start": "1897080",
    "end": "1903399"
  },
  {
    "text": "lot of problems go away if you do this but for most systems you can't afford to",
    "start": "1903399",
    "end": "1909039"
  },
  {
    "text": "you can't afford to hold transactions open that long and in fact most people who write about transa Building Systems",
    "start": "1909039",
    "end": "1915000"
  },
  {
    "text": "like this will tell you never to do this don't hold transactions open for a user",
    "start": "1915000",
    "end": "1920440"
  },
  {
    "text": "interaction what they say instead is you just wrap the transaction around that update that last bit of updating the",
    "start": "1920440",
    "end": "1927840"
  },
  {
    "text": "database and that's a good thing because that stops a collision where one half",
    "start": "1927840",
    "end": "1933960"
  },
  {
    "text": "done update M mixes up with another half done update and you get some tables updated over here and some different",
    "start": "1933960",
    "end": "1940000"
  },
  {
    "text": "tables updated differently over there and the result is an inconsistent mess but you still effectively get a conf",
    "start": "1940000",
    "end": "1948240"
  },
  {
    "text": "because the two people made updates of the same piece of information without knowing the other person did",
    "start": "1948240",
    "end": "1955360"
  },
  {
    "text": "that and this is what typically might happen even in an aggregate Orient aggregate oriented database if",
    "start": "1956000",
    "end": "1962840"
  },
  {
    "text": "you have to modify more than one aggregate because you might find one person modifies the first one and then",
    "start": "1962840",
    "end": "1969480"
  },
  {
    "text": "they go over to the second one the other person does it you have way around and as a result you could lead into an inconsistent between",
    "start": "1969480",
    "end": "1976039"
  },
  {
    "text": "aggregates now if you've come across this which you probably have you'll probably also know",
    "start": "1976039",
    "end": "1982000"
  },
  {
    "text": "how to solve this and basically use a technique which uh in one of my previous books I referred to as an offline lock",
    "start": "1982000",
    "end": "1989679"
  },
  {
    "text": "um basically what that means the usual way of implementing this is that you give each data record or each aggregate",
    "start": "1989679",
    "end": "1997440"
  },
  {
    "text": "at least a version stamp and when you retrieve it you retrieve the version",
    "start": "1997440",
    "end": "2003200"
  },
  {
    "text": "stamp with the aggregate data when you post you provide the version stamp of",
    "start": "2003200",
    "end": "2008799"
  },
  {
    "text": "where you read from and then for the first guy everything works out okay the",
    "start": "2008799",
    "end": "2014080"
  },
  {
    "text": "version stamp gets incremented and then when the second person tries to post um they still got the old version stamp and",
    "start": "2014080",
    "end": "2020960"
  },
  {
    "text": "then you know something's up and you can do whatever conflict resolution approach that you",
    "start": "2020960",
    "end": "2027080"
  },
  {
    "text": "take you use the same basic techniques again with um you working with a nosql",
    "start": "2027080",
    "end": "2033960"
  },
  {
    "text": "database the nice thing is you don't have to worry about transactions about this problem so much because the",
    "start": "2033960",
    "end": "2040600"
  },
  {
    "text": "aggregate gives you that natural unit of update it is your transaction boundary",
    "start": "2040600",
    "end": "2045799"
  },
  {
    "text": "but once you cross Aggregates then you've got to think about juggling version stamps and doing something of that kind but it's not really very",
    "start": "2045799",
    "end": "2052800"
  },
  {
    "text": "different to what you have to do with a relational database because offline locks force you to do this juggling with",
    "start": "2052800",
    "end": "2057878"
  },
  {
    "text": "version stamps anyway so yeah you don't get these um",
    "start": "2057879",
    "end": "2064839"
  },
  {
    "text": "acid transactions to the same degree that do with a relational database but the impact is not as great as some",
    "start": "2064839",
    "end": "2070960"
  },
  {
    "text": "people think because we actually have to deal with this stuff all the time",
    "start": "2070960",
    "end": "2076320"
  },
  {
    "text": "anyway now when we talk about consistency I find it useful to think about actually two kinds of",
    "start": "2077159",
    "end": "2083960"
  },
  {
    "text": "consistency the consistency I've been talking about so far is what I call logical consistency these consistency",
    "start": "2083960",
    "end": "2091240"
  },
  {
    "text": "issues occur whether you're running on a cluster of machines or whether you're running on one single machine you always",
    "start": "2091240",
    "end": "2097480"
  },
  {
    "text": "have to worry about these kinds of consistency issues now when you start spreading data",
    "start": "2097480",
    "end": "2103440"
  },
  {
    "text": "across multiple machines this can introduce more problems when it comes to Distributing",
    "start": "2103440",
    "end": "2110000"
  },
  {
    "text": "data broadly you can talk about it in two different ways one is sharding data",
    "start": "2110000",
    "end": "2115200"
  },
  {
    "text": "taking one copy of the data and putting it on different machines so that each piece of data lives in only one place",
    "start": "2115200",
    "end": "2121640"
  },
  {
    "text": "but you're using lots of machines sharding doesn't really change the picture very much you still get the same",
    "start": "2121640",
    "end": "2127680"
  },
  {
    "text": "logical consistency problems that you do with a single machine they're exacerbated to some degree but the basic",
    "start": "2127680",
    "end": "2133960"
  },
  {
    "text": "problems are still the same another thing however that's common to do with clusters of machines is to",
    "start": "2133960",
    "end": "2139720"
  },
  {
    "text": "replicate data to put the same piece of data in lots of places this can be advantageous in terms",
    "start": "2139720",
    "end": "2146000"
  },
  {
    "text": "of performance because now you've got more nodes handling the same set of requests it can also be very valuable in",
    "start": "2146000",
    "end": "2152000"
  },
  {
    "text": "terms of resilience if one of your nodes goes down the other replicas can still keep going so hence they'll talk a lot",
    "start": "2152000",
    "end": "2158079"
  },
  {
    "text": "about availability and resilience um with uh these cluster oriented",
    "start": "2158079",
    "end": "2163520"
  },
  {
    "text": "approaches however as soon as you replicate data a new class of",
    "start": "2163520",
    "end": "2169280"
  },
  {
    "text": "consistency problems starts coming in then again it the straight with a simp simple example so here we have two",
    "start": "2169280",
    "end": "2176200"
  },
  {
    "text": "people myself and my co-author promode and we both want to book a particular hotel room and so we send in our booking",
    "start": "2176200",
    "end": "2184760"
  },
  {
    "text": "request and we're to we're happen to be on different continents prom modes in India I'm in the US we send our requests",
    "start": "2184760",
    "end": "2192319"
  },
  {
    "text": "to our local processing nodes now the processing nodes at this point need to communicate we need to go",
    "start": "2192319",
    "end": "2199560"
  },
  {
    "text": "oh hang on what's going on here and the system as a whole needs to come up with some kind of decision essentially",
    "start": "2199560",
    "end": "2205720"
  },
  {
    "text": "ensuring that one of us has to sleep on the streets in this case me this is what happens",
    "start": "2205720",
    "end": "2213720"
  },
  {
    "text": "99.99 whatever percent of the time however let's take a kind of variation",
    "start": "2213720",
    "end": "2219640"
  },
  {
    "text": "on this example again we both want to book our hotel room but now the communication line has gone down the two",
    "start": "2219640",
    "end": "2227280"
  },
  {
    "text": "nodes cannot communicate we send in our requests what happens well actually",
    "start": "2227280",
    "end": "2233640"
  },
  {
    "text": "there's two broad Alternatives alternative one is the system says H our communication lines",
    "start": "2233640",
    "end": "2240960"
  },
  {
    "text": "gone down sorry we can't take your hotel bookings at the moment please try again later the alternative is the system says",
    "start": "2240960",
    "end": "2248560"
  },
  {
    "text": "yes we'll accept your booking thank you very much cuz we're really reliable and up to dat in all the rest of it and they",
    "start": "2248560",
    "end": "2253760"
  },
  {
    "text": "proceed to double book the hotel room I'm not that friendly with promode I",
    "start": "2253760",
    "end": "2258839"
  },
  {
    "text": "we're good friends but you know there are limits um we may not want to share that hotel",
    "start": "2258839",
    "end": "2264880"
  },
  {
    "text": "room so basically what we're seeing is a choice it's a choice between",
    "start": "2264880",
    "end": "2270839"
  },
  {
    "text": "consistency which means you know I'm not going to do anything if my communication lines down and availability which says",
    "start": "2270839",
    "end": "2278880"
  },
  {
    "text": "yes I'm going to keep going but at the risk of introducing an inconsistent",
    "start": "2278880",
    "end": "2285640"
  },
  {
    "text": "Behavior now the vital thing here to realize is that this is a",
    "start": "2285640",
    "end": "2291359"
  },
  {
    "text": "choice and it's a choice that can only be made by knowing about the business",
    "start": "2291359",
    "end": "2296400"
  },
  {
    "text": "rules the domain rules that you're working with I mean it may sound really awful to say oh we're going to double",
    "start": "2296400",
    "end": "2302400"
  },
  {
    "text": "book a hotel room possibly with complete strangers I mean that would be bad but",
    "start": "2302400",
    "end": "2308240"
  },
  {
    "text": "actually maybe the hotels have ways of dealing with this maybe they have a block of rooms that they always keep",
    "start": "2308240",
    "end": "2314319"
  },
  {
    "text": "available till the last moment for emergencies they can just use one of them or maybe they just send an",
    "start": "2314319",
    "end": "2319680"
  },
  {
    "text": "apologetic gring letter and some frequent sleeper points out um to try and make me",
    "start": "2319680",
    "end": "2325720"
  },
  {
    "text": "happy there's various ways in business that people will deal with inconsistencies as they crop",
    "start": "2325720",
    "end": "2331960"
  },
  {
    "text": "up now I'm not saying you should always go for availability over a consistency but what is true is that it's always a",
    "start": "2331960",
    "end": "2340520"
  },
  {
    "text": "domain Choice it is the business people who will have to decide what's more important the risk of double booking the",
    "start": "2340520",
    "end": "2347640"
  },
  {
    "text": "last room in the hotel or the fact that we have to bring down the site and say sorry we can't accept any orders at the",
    "start": "2347640",
    "end": "2353319"
  },
  {
    "text": "moment which is kind of bad for business this is one of the things that drove Dynamo they wanted to make sure that the",
    "start": "2353319",
    "end": "2360200"
  },
  {
    "text": "shopping cart was always available you could always put things in shopping cart why is this because it's America what's",
    "start": "2360200",
    "end": "2365680"
  },
  {
    "text": "the most important thing to do in America shopping we must maintain our retail",
    "start": "2365680",
    "end": "2373079"
  },
  {
    "text": "Destiny we must always be able to shop and what happens you look you come",
    "start": "2373079",
    "end": "2380160"
  },
  {
    "text": "to check out and you go why is this item in here twice or I'm sure I put the soand so in here ah computers they make",
    "start": "2380160",
    "end": "2387040"
  },
  {
    "text": "mistakes let me just fix it when the worst could happen you actually send out the order you get duplicate stuff you",
    "start": "2387040",
    "end": "2392440"
  },
  {
    "text": "ring up Amazon sorry sorry sorry and you get it all back you much better than actually",
    "start": "2392440",
    "end": "2399280"
  },
  {
    "text": "someone not being able to shot for a few seconds so the point is it's a business",
    "start": "2399280",
    "end": "2406480"
  },
  {
    "text": "choice so this then ties into something you'll hear endlessly about whenever",
    "start": "2406480",
    "end": "2411560"
  },
  {
    "text": "someone talks about this stuff which is the cap theorem everybody who's heard of the cap theorem how many people",
    "start": "2411560",
    "end": "2418040"
  },
  {
    "text": "understand the cap theorem some of you it's actually pretty straightforward it's described very badly though well no",
    "start": "2418040",
    "end": "2425200"
  },
  {
    "text": "not very badly but I don't think it's terribly useful they say there are these three concepts up here and you get to",
    "start": "2425200",
    "end": "2430400"
  },
  {
    "start": "2428000",
    "end": "2680000"
  },
  {
    "text": "pick any two this is true but I think it's easier to reformulate it um it's a",
    "start": "2430400",
    "end": "2436440"
  },
  {
    "text": "bit clearer if you say if you've got a system that can get a network partition which basically means communication",
    "start": "2436440",
    "end": "2443119"
  },
  {
    "text": "between different nodes in a cluster breaking down and if you have a distributed system by the way you are",
    "start": "2443119",
    "end": "2448520"
  },
  {
    "text": "going to get a network partitions if you get a network partition you have a choice do you want",
    "start": "2448520",
    "end": "2454000"
  },
  {
    "text": "to be consistent or do you want to be available and that's really what the cap theum boils down if you've got a single",
    "start": "2454000",
    "end": "2460599"
  },
  {
    "text": "database running on a single server it's not going to partition you don't have to worry you can be as available as that",
    "start": "2460599",
    "end": "2465880"
  },
  {
    "text": "node is and you're going to be consistent you can maintain everything um but when as soon as you have a",
    "start": "2465880",
    "end": "2472480"
  },
  {
    "text": "distributed system you have to make that choice but that isn't a single binary",
    "start": "2472480",
    "end": "2477800"
  },
  {
    "text": "choice right across your system you actually have a a spectrum you can go for a certain amount you can actually",
    "start": "2477800",
    "end": "2484240"
  },
  {
    "text": "trade off levels of consistency and availability I'm not going to go into how just trust me you can furthermore it",
    "start": "2484240",
    "end": "2491000"
  },
  {
    "text": "can vary depending on a particular operation you want to do certain operations can be highly consistent",
    "start": "2491000",
    "end": "2496680"
  },
  {
    "text": "certain other operations can be highly available any of the databases that do this kind of stuff will give you all the",
    "start": "2496680",
    "end": "2502520"
  },
  {
    "text": "knobs and tweaks to do this and so you're going to learn out how to trade them",
    "start": "2502520",
    "end": "2507800"
  },
  {
    "text": "across and actually most of a time you aren't trading off consistency versus",
    "start": "2507800",
    "end": "2513040"
  },
  {
    "text": "availability it's not availability that's the issue and it's not even dealing with network partitions that's",
    "start": "2513040",
    "end": "2518280"
  },
  {
    "text": "the issue a lot of the time what you're doing is you're trading off consistency versus response time because what's",
    "start": "2518280",
    "end": "2525680"
  },
  {
    "text": "happening is the more you want to have consistency across a cluster of nodes",
    "start": "2525680",
    "end": "2530720"
  },
  {
    "text": "that means the more nodes have to get involved in the conversation again think of that hotel case the two had to",
    "start": "2530720",
    "end": "2536680"
  },
  {
    "text": "communicate that's going to slow down the response time so you might say even if the network is up you know I'm going",
    "start": "2536680",
    "end": "2543319"
  },
  {
    "text": "to let each node book its own hotel stuff and sort it out later even with the network up I'd still get",
    "start": "2543319",
    "end": "2549440"
  },
  {
    "text": "you the faster response time rather than doing all the communication I need to to get the P the consistency and again",
    "start": "2549440",
    "end": "2557119"
  },
  {
    "text": "that's a business decision another thing that Amazon said was we want to always get people shopping fast because what's",
    "start": "2557119",
    "end": "2563680"
  },
  {
    "text": "the most important thing in America shopping so therefore we want",
    "start": "2563680",
    "end": "2568920"
  },
  {
    "text": "really rapid times and even if all the nodes are available and we could give you a completely consistent solution we",
    "start": "2568920",
    "end": "2574000"
  },
  {
    "text": "want to be quick and they also it helps that merging shopping carts dealing with",
    "start": "2574000",
    "end": "2580119"
  },
  {
    "text": "the inconsistency of shopping carts is relatively easy oh they ask for this over here they ask that over there well",
    "start": "2580119",
    "end": "2585760"
  },
  {
    "text": "clearly they want both because this is America everybody wants everything God taking stuff out of",
    "start": "2585760",
    "end": "2592240"
  },
  {
    "text": "shopping carts how why would we want to encourage that and in fact this is a broader",
    "start": "2592240",
    "end": "2597280"
  },
  {
    "text": "tradeoff in terms of computing this is really just another aspect of a general concurrency trade-off between safety and",
    "start": "2597280",
    "end": "2603920"
  },
  {
    "text": "liveness and me if you've gone to comp current classes and you've heard people talk about that really this should",
    "start": "2603920",
    "end": "2609400"
  },
  {
    "text": "actually seem fairly familiar in in in those kinds of",
    "start": "2609400",
    "end": "2614520"
  },
  {
    "text": "terms now what I really wanted to do with this little segment on consistency",
    "start": "2615240",
    "end": "2620640"
  },
  {
    "text": "was focus on giving you a feel for how consistency is different in the",
    "start": "2620640",
    "end": "2628079"
  },
  {
    "text": "particularly the aggregate oriented nosql world as opposed to how you may have thought about consistency so far",
    "start": "2628079",
    "end": "2634920"
  },
  {
    "text": "there's a lot of topics I could have talked about here but I just haven't got time to talk about the important thing",
    "start": "2634920",
    "end": "2640800"
  },
  {
    "text": "to go away with is realizing that you have to think about consistency issues",
    "start": "2640800",
    "end": "2646040"
  },
  {
    "text": "differently essentially because you've got this um different data model and the",
    "start": "2646040",
    "end": "2652280"
  },
  {
    "text": "the possibility of replicated data um and and in particular you have",
    "start": "2652280",
    "end": "2657599"
  },
  {
    "text": "to think a bit about this terms of this consistency availability tradeoff and",
    "start": "2657599",
    "end": "2663119"
  },
  {
    "text": "that it's not up to just us as techies to make that decision it is actually up",
    "start": "2663119",
    "end": "2668400"
  },
  {
    "text": "to the way the business want works as to where we make these tradeoffs and if you want more um well",
    "start": "2668400",
    "end": "2676839"
  },
  {
    "text": "I'm going to tell you to buy my book anyway so you know what to do okay so the last little segment I'm",
    "start": "2676839",
    "end": "2683760"
  },
  {
    "start": "2680000",
    "end": "3052000"
  },
  {
    "text": "going to talk a bit about when and why you might want to use a nosql",
    "start": "2683760",
    "end": "2689800"
  },
  {
    "text": "database and the way I think of it is there are two drivers that push us",
    "start": "2689800",
    "end": "2694960"
  },
  {
    "text": "towards an nosql database the first one is the one that I've already talked about as the real",
    "start": "2694960",
    "end": "2701599"
  },
  {
    "text": "driver for the whole nosql movement itself and that is you've got to deal with large amounts of data if you've got",
    "start": "2701599",
    "end": "2708599"
  },
  {
    "text": "more data than you can comfortably or economically fit onto a single database server you are going to go you're going",
    "start": "2708599",
    "end": "2715160"
  },
  {
    "text": "to have to deal with some pain you can either take the pain of trying to run a relational database across a cluster or",
    "start": "2715160",
    "end": "2721119"
  },
  {
    "text": "you can go into this new nosql stuff and now most of the time I think I'd go than no SQL stuff um because running data",
    "start": "2721119",
    "end": "2729000"
  },
  {
    "text": "relational databases across clusters is still somewhat of a black art so big amounts of data is a big issue now some",
    "start": "2729000",
    "end": "2736559"
  },
  {
    "text": "people have said and for one of the reviews comments on my book was yeah but only very few organizations have to",
    "start": "2736559",
    "end": "2742280"
  },
  {
    "text": "worry about this stuff if you Google and Amazon yes pretty much everybody else no",
    "start": "2742280",
    "end": "2747760"
  },
  {
    "text": "as I read that what I heard in my head was 640k is enough for almost",
    "start": "2747760",
    "end": "2753079"
  },
  {
    "text": "everybody the reality is there is tons T of data coming at us lot and every",
    "start": "2753079",
    "end": "2758480"
  },
  {
    "text": "organization is going to be capturing and processing more and more data so this large scale data problem it's only",
    "start": "2758480",
    "end": "2764839"
  },
  {
    "text": "going to grow and and that is a factor but actually this is not the main",
    "start": "2764839",
    "end": "2770240"
  },
  {
    "text": "reason I think why most people go into no sequel there was a survey I saw in the the track on on Monday that pointed",
    "start": "2770240",
    "end": "2776880"
  },
  {
    "text": "out that most people actually aren't interested in um uh big amounts of data",
    "start": "2776880",
    "end": "2782200"
  },
  {
    "text": "from no CLE databases what they want to do is they want to be able to velop more easily so a good example of this is I",
    "start": "2782200",
    "end": "2790240"
  },
  {
    "text": "have some friends who work um on the Guardian newspaper and website how many people have heard of the Guardian good",
    "start": "2790240",
    "end": "2796359"
  },
  {
    "text": "English language newspaper many of you good and you know they're dealing with articles they're saving articles",
    "start": "2796359",
    "end": "2802680"
  },
  {
    "text": "updating articles pushing articles back and forth the article for them is a natural aggregate spreading that",
    "start": "2802680",
    "end": "2809960"
  },
  {
    "text": "articles data and metadata across relational databases it's a pain in the neck it's awkward but taking it as a",
    "start": "2809960",
    "end": "2816720"
  },
  {
    "text": "single thing a single article and pushing it into the database that's much more straightforward the map the",
    "start": "2816720",
    "end": "2823400"
  },
  {
    "text": "impedance mismatch problem is drastically reduced if you've got a natural Aggregate and many of the",
    "start": "2823400",
    "end": "2829720"
  },
  {
    "text": "projects that that I've talked to in Fort works that have used um a nosql",
    "start": "2829720",
    "end": "2835599"
  },
  {
    "text": "database have gone that route they've said our data model doesn't really fit very well with relational these one of",
    "start": "2835599",
    "end": "2842200"
  },
  {
    "text": "these nosql options is better it might be a natural aggregate in which go have gone the aggregate oriented root or it",
    "start": "2842200",
    "end": "2848200"
  },
  {
    "text": "might be we've got something that feels much like a graph structure so we go to the graph database route and and that I",
    "start": "2848200",
    "end": "2854280"
  },
  {
    "text": "think is the most common reason at the moment why people are using no SQL databases because you've got you get get",
    "start": "2854280",
    "end": "2860079"
  },
  {
    "text": "effectively getting rid of that impedance mismatch problem now of course that raises a",
    "start": "2860079",
    "end": "2866720"
  },
  {
    "text": "question that was of course the promise of object databases they were going to get rid of the impedance mismatch",
    "start": "2866720",
    "end": "2871800"
  },
  {
    "text": "problem but they got clobbered because databases are being used for integration",
    "start": "2871800",
    "end": "2877119"
  },
  {
    "text": "why is that same problem not hitting us now well it is hitting us but it's greatly reduced because now more and",
    "start": "2877119",
    "end": "2883200"
  },
  {
    "text": "more people are saying we don't want to integrate that way we want to hide our databases inside a broader application",
    "start": "2883200",
    "end": "2889720"
  },
  {
    "text": "or service and then we want to use some kind of service oriented interaction between the two which may be web",
    "start": "2889720",
    "end": "2895960"
  },
  {
    "text": "services it can be something as really disgusting as soap on esbs with God",
    "start": "2895960",
    "end": "2901440"
  },
  {
    "text": "knows what thrown in um but the point is applications are now controlling access to",
    "start": "2901440",
    "end": "2907280"
  },
  {
    "text": "data and if if if you're in a scenario where you can do that where you can effectively encapsulate your database",
    "start": "2907280",
    "end": "2913559"
  },
  {
    "text": "then the integration issue becomes a lot less serious and that I think is a very",
    "start": "2913559",
    "end": "2918720"
  },
  {
    "text": "important enabler to make it possible for no SQL databases to thrive that this",
    "start": "2918720",
    "end": "2925119"
  },
  {
    "text": "is a good practice anyway even if you got relational databases you do not want to be integrating through integration",
    "start": "2925119",
    "end": "2931319"
  },
  {
    "text": "databases that cause no end of trouble believe me if you haven't experienced it yourself um so much better to try and",
    "start": "2931319",
    "end": "2938240"
  },
  {
    "text": "encapsulate something like that and if you're going to do that then you've got much more freedom for what database to",
    "start": "2938240",
    "end": "2943960"
  },
  {
    "text": "use and I think that's going to be a very um driving structure towards",
    "start": "2943960",
    "end": "2949280"
  },
  {
    "text": "this um another thing that's encouraging people to use um these databases is to",
    "start": "2949280",
    "end": "2955960"
  },
  {
    "text": "deal with analytics we all know about data warehousing the usual data warehousing project as far as I can tell",
    "start": "2955960",
    "end": "2962480"
  },
  {
    "text": "is that salesman turns up from one of the big companies is and says oh you want to do data warehousing well here's",
    "start": "2962480",
    "end": "2968440"
  },
  {
    "text": "this project plan by which every piece of data you could possibly have in your organization is all put into one place",
    "start": "2968440",
    "end": "2974079"
  },
  {
    "text": "so that everybody can get at it easily and it's a multi-year project we have lots and lots of very diverse",
    "start": "2974079",
    "end": "2981000"
  },
  {
    "text": "stakeholders um we know that story I mean have people come across these big data warehousing projects that they felt",
    "start": "2981000",
    "end": "2986880"
  },
  {
    "text": "have succeeded there's usually one or two no one's prepared to admit it oh you're prepared to admit it um but most",
    "start": "2986880",
    "end": "2994559"
  },
  {
    "text": "of them go badly what we look for instead is a different approach that says um let's particularly",
    "start": "2994559",
    "end": "3002040"
  },
  {
    "text": "focus on one particular problem and see what how do we grab the data from that and the data by the way might not be in",
    "start": "3002040",
    "end": "3008440"
  },
  {
    "text": "well-known relational or even no SQL stores it might be scattered around in log files or you know what truly runs",
    "start": "3008440",
    "end": "3015000"
  },
  {
    "text": "most Enterprises which is Excel spreadsheets well let's get at that data and let's poke it and pull it together",
    "start": "3015000",
    "end": "3021200"
  },
  {
    "text": "and those SQL databases play an important role in this the graph databases allow you to easily do",
    "start": "3021200",
    "end": "3027280"
  },
  {
    "text": "graph-like analytics on the database which is really quite nice the aggregate oriented databases are generally less",
    "start": "3027280",
    "end": "3034079"
  },
  {
    "text": "good at this because they can't slice and dice so well but what they can do is store large quantities of data so if you",
    "start": "3034079",
    "end": "3040280"
  },
  {
    "text": "are pulling stuff off devices or log files or the like then they become very attractive and of course that's what's",
    "start": "3040280",
    "end": "3046359"
  },
  {
    "text": "given a big advantage to the the Amazon because they're able to mine all this",
    "start": "3046359",
    "end": "3051960"
  },
  {
    "text": "information so with all of this does this mean that no SQL is is the future of databases that relational databases",
    "start": "3051960",
    "end": "3059119"
  },
  {
    "start": "3052000",
    "end": "3292000"
  },
  {
    "text": "are going to disappear and we're all going to be doing um no SQL stuff I don't think so I think really",
    "start": "3059119",
    "end": "3066640"
  },
  {
    "text": "the future is something that I refer to as polyglot persistence and what this means is we",
    "start": "3066640",
    "end": "3073400"
  },
  {
    "text": "think that there's going to be room for lots and lots of different kinds of databases with relational databases",
    "start": "3073400",
    "end": "3079640"
  },
  {
    "text": "still playing a big role if you're building an application maybe you'll use",
    "start": "3079640",
    "end": "3085440"
  },
  {
    "text": "lots of different databases as part of your application certainly across an organization you'll use lots of",
    "start": "3085440",
    "end": "3091960"
  },
  {
    "text": "databases and what you doing is you're choosing the appropriate database for the nature of the problem that you're",
    "start": "3091960",
    "end": "3097559"
  },
  {
    "text": "working with and because there are different Natures of problems there are different data stores but what the idea",
    "start": "3097559",
    "end": "3103920"
  },
  {
    "text": "of whatever your problem is the answer is a relational database will go away now this is great it gives us lots",
    "start": "3103920",
    "end": "3111559"
  },
  {
    "text": "of opportunities for the future but as every cynic knows every opportunity is",
    "start": "3111559",
    "end": "3117200"
  },
  {
    "text": "really a problem and there are plenty of them you've now got to think about this kind",
    "start": "3117200",
    "end": "3123240"
  },
  {
    "text": "of stuff you got to decide what is the appropriate nosql database for a problem you got to deal with organizational",
    "start": "3123240",
    "end": "3129520"
  },
  {
    "text": "issues relational dbas are not going to like this in fact for some people that's",
    "start": "3129520",
    "end": "3135040"
  },
  {
    "text": "a big Advantage but let's not go there no SQL databases are immature they don't",
    "start": "3135040",
    "end": "3140079"
  },
  {
    "text": "have the tools and the experience and the knowledge of how to work with them well that we've had from 20 years of relational databases and all of these",
    "start": "3140079",
    "end": "3147400"
  },
  {
    "text": "consistency issues can still end up biting you so when it comes to what kind of",
    "start": "3147400",
    "end": "3154240"
  },
  {
    "text": "project I get I start with a drivers if you want rapid time to Market",
    "start": "3154240",
    "end": "3160760"
  },
  {
    "text": "fast cycle time you need to be quick easier development is really important therefore if you can do that with no SQL",
    "start": "3160760",
    "end": "3167680"
  },
  {
    "text": "databases that's a reason to go with them similarly if you've got a very data intensive project then obviously no",
    "start": "3167680",
    "end": "3173880"
  },
  {
    "text": "sql's ability to deal with large amount of data is very important but I think there's another overriding goal as well",
    "start": "3173880",
    "end": "3180359"
  },
  {
    "text": "which is is your project really important to the competitive advantage of your business what I refer to as a",
    "start": "3180359",
    "end": "3187640"
  },
  {
    "text": "strategic project because if it's a strategic project then it's worth taking on the",
    "start": "3187640",
    "end": "3193760"
  },
  {
    "text": "extra risk the unknowns of dealing with an IM immature and not so well-known technology which is what no sqls are if",
    "start": "3193760",
    "end": "3201760"
  },
  {
    "text": "on the other hand you've got a project that's what I call a utility project it's kind of a straightforward it's not",
    "start": "3201760",
    "end": "3207040"
  },
  {
    "text": "really vital to the business's operation then that may be not the best place to",
    "start": "3207040",
    "end": "3212400"
  },
  {
    "text": "bring in us an unknown like this in that kind of situation you're probably better off with a familiar at least for a few",
    "start": "3212400",
    "end": "3219000"
  },
  {
    "text": "years but there's lots of strategic projects out there and um certainly our",
    "start": "3219000",
    "end": "3224520"
  },
  {
    "text": "experience over the last two or three years at Fort Works has been very positive um with no SQL databases I've",
    "start": "3224520",
    "end": "3230880"
  },
  {
    "text": "heard remarkably few complaints um and for workers always complain about what they're working with",
    "start": "3230880",
    "end": "3236480"
  },
  {
    "text": "so um I certainly am very much convinced that nosql databases have an important",
    "start": "3236480",
    "end": "3242000"
  },
  {
    "text": "part to play in the spectrum of future developments and the rest of the talks in this track will explore different",
    "start": "3242000",
    "end": "3248640"
  },
  {
    "text": "ways in which they've been used so I hope you found that helpful um if you",
    "start": "3248640",
    "end": "3253760"
  },
  {
    "text": "want more depth um the book is very thin my target was 150 pages and I only",
    "start": "3253760",
    "end": "3259559"
  },
  {
    "text": "missed it by two so it's 152 Pages quick overview a bit more than what I just gave you um and I hope that will be",
    "start": "3259559",
    "end": "3266359"
  },
  {
    "text": "handy um if you go to that page on my website I collect together various other things um that I've done or talked about",
    "start": "3266359",
    "end": "3273599"
  },
  {
    "text": "in terms of no Sequel and uh thank you for listening to [Applause]",
    "start": "3273599",
    "end": "3280979"
  },
  {
    "text": "[Applause]",
    "start": "3283870",
    "end": "3288540"
  },
  {
    "text": "me",
    "start": "3290160",
    "end": "3293160"
  }
]