[
  {
    "start": "0",
    "end": "156000"
  },
  {
    "text": "Welcome to another episode of GOTO Unscripted. We \nare here in GOTO in Chicago. It's sort of a windy  ",
    "start": "13920",
    "end": "20080"
  },
  {
    "text": "city. There's a little bit of a breeze behind \nus, but yeah, absolutely beautiful weather and   a fantastic conference here in the Willis \nTower. I'm joined by Tom. Tom Johnson, you  ",
    "start": "20080",
    "end": "29360"
  },
  {
    "text": "have a storied career about making life \nsimple for developers. A long time ago,  ",
    "start": "29360",
    "end": "36360"
  },
  {
    "text": "things were simple and things were more complex. \nSo tell us the story of what you've been doing and   how that translates to what you're doing today.\nSure thing. Thanks for having me. It's great to  ",
    "start": "36360",
    "end": "45800"
  },
  {
    "text": "be here. So, where should I start? So I started \nmy career working in machine learning, and speech  ",
    "start": "45800",
    "end": "53200"
  },
  {
    "text": "recognition, segued into distributed systems and \ntelecom, where I sort of grew a fondness for these  ",
    "start": "53200",
    "end": "61280"
  },
  {
    "text": "complicated systems. But they used to be simple. \nIt used to be a kind of client-server. They were  ",
    "start": "61280",
    "end": "67720"
  },
  {
    "text": "just desktop software. There was one thing.\nOne base, one thing.  One thing. Then there were two things. And then \nwhen the internet came around and the web became  ",
    "start": "67720",
    "end": "75560"
  },
  {
    "text": "a thing, you had your web client and your backend \nsystem maybe at a web server and then a database.  ",
    "start": "75560",
    "end": "81840"
  },
  {
    "text": "And now you have microservices and you have cloud \nprovider services and cloud things. And you're not  ",
    "start": "82600",
    "end": "89960"
  },
  {
    "text": "writing all the code yourself. So it's become \nmuch more complicated to work on these systems,  ",
    "start": "89960",
    "end": "96600"
  },
  {
    "text": "to know what you have, to work with \nother people, because those teams  ",
    "start": "96600",
    "end": "103040"
  },
  {
    "text": "are now distributed as well, your software.\nIt's not just a technical element of having   lots of different microservices and clouds \nbut people having to reason about things in  ",
    "start": "103040",
    "end": "109720"
  },
  {
    "text": "their head and organizational complexity. Yeah.\nYes. So it's just a whole different world than it  ",
    "start": "109720",
    "end": "114880"
  },
  {
    "text": "was when I got started, and it's been interesting \nto watch it evolve. So I started a company called  ",
    "start": "114880",
    "end": "121920"
  },
  {
    "text": "Multiplayer, which the goal is to help teams \nthat work on distributed systems. We provide  ",
    "start": "121920",
    "end": "129800"
  },
  {
    "text": "some tooling for auto-documentation, debugging, \nand, soon, design. So you don't have to be an  ",
    "start": "129800",
    "end": "135400"
  },
  {
    "text": "expert. So you remove a lot of the manual grunt \nwork out of working on distributed systems. And  ",
    "start": "135400",
    "end": "141720"
  },
  {
    "text": "this was sort of born out of my pain working \non projects and just over and over and over  ",
    "start": "141720",
    "end": "147720"
  },
  {
    "text": "having to do a lot of terrible grunt work. And \nfinally, I get to try to solve it, which is fun.",
    "start": "147720",
    "end": "156400"
  },
  {
    "start": "156000",
    "end": "942000"
  },
  {
    "text": "Sounds interesting. So going sort of back to that \nsimplistic to become complex, I mean, the reason  ",
    "start": "156400",
    "end": "161680"
  },
  {
    "text": "things became more complex is because we needed to \ninteract, we needed to connect to APIs and queues  ",
    "start": "161680",
    "end": "166719"
  },
  {
    "text": "and cloud providers and all those kinds of things, \nwhich was a good thing. So technically, that was a  ",
    "start": "166720",
    "end": "172280"
  },
  {
    "text": "good thing, but I keep coming back to the sort of \npeople's story of that. What are the blockers that  ",
    "start": "172280",
    "end": "177440"
  },
  {
    "text": "people have working in a distributed environment? \nAnd you mentioned some things that Multiplayer   does, which you're trying to solve, but where do \npeople get into their journey where they realize  ",
    "start": "177440",
    "end": "187599"
  },
  {
    "text": "they've either done the wrong path or they've \npicked something wrong or they need to retrofit   and re-document or reply? What are the mistakes \npeople make, and what can they avoid, and what  ",
    "start": "187600",
    "end": "197280"
  },
  {
    "text": "should they be doing? I'm using Multiplayer, but \nfor the thought process of somebody thinking about  ",
    "start": "197280",
    "end": "202640"
  },
  {
    "text": "the problem, what should they be thinking about?\nThat's a great question, and I think if you start  ",
    "start": "202640",
    "end": "209160"
  },
  {
    "text": "early with an understanding that your system \nwill get more complex and sort of plan for that,  ",
    "start": "209160",
    "end": "216680"
  },
  {
    "text": "whether it's in the design of your software or \nthe documentation, you'll thank yourself later on. ",
    "start": "217320",
    "end": "224320"
  },
  {
    "text": "Does that not just slow you down? Because you're a \nstartup wanting to go gung-ho and build something.   And if somebody says, \"Oh, we're not releasing \nthat because the documentation is not up to date,\"  ",
    "start": "224320",
    "end": "232159"
  },
  {
    "text": "will the rest of your teammates laugh at you?\nSure.   I'm being sarcastic.\nBut you've hit upon something, like,  ",
    "start": "232160",
    "end": "239080"
  },
  {
    "text": "people end up skipping it because it's manual \nwork and it's not valued in the beginning. Then  ",
    "start": "239080",
    "end": "246800"
  },
  {
    "text": "I find that when you reach about 10-plus people, \nmaybe 10-plus components, your system and your  ",
    "start": "247400",
    "end": "255159"
  },
  {
    "text": "organization is too complex to manage easily. So \nyour system, it's hard to keep in your head all  ",
    "start": "255160",
    "end": "264520"
  },
  {
    "text": "the dependencies. It's hard to then communicate it \nto others if you're growing and you're onboarding  ",
    "start": "264520",
    "end": "269919"
  },
  {
    "text": "somebody. Well, you have to teach them about \nwhat you're...you have to answer, what is your   software? It's a hard question to answer the \nmore complex the system becomes. So tooling  ",
    "start": "269920",
    "end": "285160"
  },
  {
    "text": "should do this. You should have this stuff, more \nof the stuff, automated and automatically done  ",
    "start": "285160",
    "end": "290440"
  },
  {
    "text": "for you. It's part of what we're looking to do. \nBecause everybody makes the same mistakes in the   beginning. They skip these steps of documenting, \nand then you just have to pay for it later, so.",
    "start": "290440",
    "end": "305040"
  },
  {
    "text": "There's an interesting thing that \nI've actually been picking up here   at the conference today about not just the \nauto-generating of documentation after the  ",
    "start": "305040",
    "end": "313120"
  },
  {
    "text": "fact but how some application architectures, in \na way, start with the documentation. A bit of  ",
    "start": "313120",
    "end": "318600"
  },
  {
    "text": "a long-winded intro where people generate \na database schema, for example, in a way,   you are documenting what your database wants to \nlook like and that then drives the architecture,  ",
    "start": "318600",
    "end": "327800"
  },
  {
    "text": "the read-and-write patterns for your database, for \nexample. But at the conference today, I was at a   talk about Deno, which is a very lightweight \nJavaScript runtime, and part of what Deno is  ",
    "start": "327800",
    "end": "337479"
  },
  {
    "text": "coming out is they're saying that NPM as a package \nmanager hasn't had much innovation. And so they've  ",
    "start": "337480",
    "end": "342600"
  },
  {
    "text": "come out with a new package manager called...oh, \nof course, the name is escaping me, but it's   something like JSX or something. I'm sure, on the \nscreen, we'll sort out what the proper name is. ",
    "start": "342600",
    "end": "351360"
  },
  {
    "text": "But part of that was in your TypeScript files, \nyou would just export your functions and all  ",
    "start": "351360",
    "end": "357680"
  },
  {
    "text": "those kind of things. And then when you \nupload your package to the package manager,   it auto-generates the documentation based on what \nthat is. Makes me also think of OpenAPI specs  ",
    "start": "357680",
    "end": "366240"
  },
  {
    "text": "or AsyncAPI specs, where the documentation \nand your architecture are linked together,  ",
    "start": "366240",
    "end": "371599"
  },
  {
    "text": "and it seems to be a way that sort of is an \nobvious thing to have these two things separately  ",
    "start": "371600",
    "end": "376880"
  },
  {
    "text": "rather than having to retrofit everything.\nRight. So anything you can do like that  ",
    "start": "376880",
    "end": "381600"
  },
  {
    "text": "to sort of automate the generation of this very \nimportant information, the better. We're built on  ",
    "start": "382760",
    "end": "389720"
  },
  {
    "text": "open telemetry. So if you're building a system, \nyou probably want to observe it. You want to   treat it as a black box. What we do is we tie \ninto the observability data, and it's the same  ",
    "start": "389720",
    "end": "400039"
  },
  {
    "text": "stuff you're sending out to your APM tools, but \nwe're looking at it for documentation. That's  ",
    "start": "400040",
    "end": "405280"
  },
  {
    "text": "kind of the same thing where you're working \non something important to your system, whether  ",
    "start": "405280",
    "end": "411880"
  },
  {
    "text": "it's the NPM packaging or specs that generates \ndocumentation. But here, it's like, you just want  ",
    "start": "411880",
    "end": "418360"
  },
  {
    "text": "to be able to observe your system, and why not \nuse that same data to help you in another way? ",
    "start": "418360",
    "end": "425919"
  },
  {
    "text": "That's interesting to think of \nobservability-driven documentation, for   want of a term, because your observability in your \nopen telemetry is exactly what your application is  ",
    "start": "425920",
    "end": "435680"
  },
  {
    "text": "doing live today, and you are sending out your \nobservability tool for your metrics and your  ",
    "start": "435680",
    "end": "441680"
  },
  {
    "text": "logging and your dashboards and all these kind of \nthings. But creating documentation like that seems  ",
    "start": "441680",
    "end": "447600"
  },
  {
    "text": "like, thinking now, you're like.\nAll the data is there,  ",
    "start": "447600",
    "end": "452880"
  },
  {
    "text": "and you're already collecting it.\nAnd it's correlated across multiple services...  Exactly.\n...and how this connects to that. We always talk  ",
    "start": "452880",
    "end": "459319"
  },
  {
    "text": "about asynchronous processing and how a producer \nand a consumer never need to know about each   other. But you want to know who's talking to who.\nExactly. And the only way to do that accurately  ",
    "start": "459320",
    "end": "469240"
  },
  {
    "text": "is to have your system tell you what it's doing \nand then discover it and track it. Otherwise,  ",
    "start": "469240",
    "end": "477880"
  },
  {
    "text": "there are other methods. Other projects try to \nsort of reverse engineer from the bottom up,  ",
    "start": "477880",
    "end": "484840"
  },
  {
    "text": "maybe your logical platform from the \ninfrastructure as code or from the source code   itself. But there are so many problems doing it \nthat way. It ultimately comes down to your system  ",
    "start": "485360",
    "end": "497040"
  },
  {
    "text": "as your source of truth. And if you can get it to \ntell you what it's doing, then that's fantastic. ",
    "start": "497040",
    "end": "506680"
  },
  {
    "text": "In fact, even thinking about the sort of \ndefinition of observability as compared   to monitoring is inferring what's going \non in your application from its outputs,  ",
    "start": "506680",
    "end": "516599"
  },
  {
    "text": "and this is exactly documenting what's going \non in your application from its outputs.  Exactly, exactly. And then you add some ability \nto debug and do some other things that are sort  ",
    "start": "516600",
    "end": "524600"
  },
  {
    "text": "of pain points. Anyway, that's what we're trying \nto do. But I find that what's an interesting trend  ",
    "start": "524600",
    "end": "536199"
  },
  {
    "text": "these days is just how complex it is just to get \na \"Hello, World\" application up and running. You  ",
    "start": "536200",
    "end": "544320"
  },
  {
    "text": "need to know Terraform, maybe Kubernetes, or \nother things, or else you have to hack some  ",
    "start": "544320",
    "end": "553360"
  },
  {
    "text": "things together, sort of throw it up, and deal \nwith the consequences later on. But I think that  ",
    "start": "553360",
    "end": "563120"
  },
  {
    "text": "there needs to be a solution for the organization \nof software things that come together when you're  ",
    "start": "563760",
    "end": "569120"
  },
  {
    "text": "working on distributed systems, and I think that's \nleft to be solved. That's a big unsolved problem.  ",
    "start": "569120",
    "end": "579360"
  },
  {
    "text": "I think that AI will come into play a little bit, \nbut it's not going to be...I think you need data  ",
    "start": "582280",
    "end": "589640"
  },
  {
    "text": "about your distributed system in one place in \norder to be able to apply AI for things like  ",
    "start": "589640",
    "end": "596480"
  },
  {
    "text": "asking questions about your distributed system, \nunderstanding it, changing it, and all of that. So  ",
    "start": "596480",
    "end": "602760"
  },
  {
    "text": "there's still a lot we need to do, I think, to be \nable to effectively work on these complex systems. ",
    "start": "602760",
    "end": "609200"
  },
  {
    "text": "Julian Wood:  In terms of the sort of insights \nthat come out of it, is it a graphical   representation or text representation? Because \nyou're obviously talking about AI. You know, GenAI  ",
    "start": "609200",
    "end": "617519"
  },
  {
    "text": "is great at creating documentation. What does \nsomeone see? Is it just a page of documentation  ",
    "start": "617520",
    "end": "625560"
  },
  {
    "text": "about this kind of thing, or what does it look \nlike? So people can sort of visually picture.  I think that people best absorb and communicate \nthis type of information visually. If you think  ",
    "start": "625560",
    "end": "639680"
  },
  {
    "text": "about coming on board at a new company, a new \nteam, the first question you might ask is, what  ",
    "start": "639680",
    "end": "646920"
  },
  {
    "text": "is your software? And typically, that's somebody \ngoing to the whiteboard and drawing some boxes and   dependencies like, \"This talks to this, talks to \nthis. Here's all the software components we have,  ",
    "start": "646920",
    "end": "655840"
  },
  {
    "text": "here's what we use, and here's how they talk \nto each other.\" That's usually the first step. ",
    "start": "655840",
    "end": "662080"
  },
  {
    "text": "So I think there's a big visual element to this \nbecause it's easy. A picture is worth 1,000 words.  ",
    "start": "662080",
    "end": "668720"
  },
  {
    "text": "It's easy to look at a picture rather than read \na lot of text. And with these types of systems,  ",
    "start": "668720",
    "end": "675800"
  },
  {
    "text": "they luckily can be described with \nvisual metaphors pretty easily. I mean,  ",
    "start": "675800",
    "end": "682240"
  },
  {
    "text": "I love things like sequence diagrams and other \nstuff. Hard to do manually. I mean, that's all   the stuff that manually is a real pain.\nAnd they're out of date as soon  ",
    "start": "682240",
    "end": "688880"
  },
  {
    "text": "as you finish taking it.\nExactly. So putting that aside,   if you can get a visual representation of your \ndistributed system, maybe flows, things like that. ",
    "start": "688880",
    "end": "697880"
  },
  {
    "text": "That's also an interesting point. There may \nbe different ways to represent the same data,   and there may be moment diagrams or flows or \nthis kind of thing in even the same data set.  ",
    "start": "697880",
    "end": "707000"
  },
  {
    "text": "You wouldn't manually create multiple views of the \nsame data because it would seem to be duplicating  ",
    "start": "707000",
    "end": "712640"
  },
  {
    "text": "work. But for different parts of your company or \ndifferent people within your company, they may  ",
    "start": "712640",
    "end": "718440"
  },
  {
    "text": "want that visualization, because it's looking at \na different aspect of your software architecture. ",
    "start": "718440",
    "end": "722720"
  },
  {
    "text": "I talk about sometimes how diagramming is not \ndesigned. It's a system design. Diagramming  ",
    "start": "724560",
    "end": "730080"
  },
  {
    "text": "tools are really all you have available, not \nreally built for system architecture and other  ",
    "start": "730080",
    "end": "736120"
  },
  {
    "text": "stuff. But they don't let you do the things you \njust talked about. Have one source of truth about  ",
    "start": "736120",
    "end": "742560"
  },
  {
    "text": "your big architecture. But let me zoom into this, \nor let me have a 10,000-foot view and then zoom  ",
    "start": "742560",
    "end": "748160"
  },
  {
    "text": "into subsystems, or have special views of my \nops-related services and see how things...or  ",
    "start": "748160",
    "end": "754839"
  },
  {
    "text": "my data services, or how authentication works, \nall these questions. You have a lot of questions  ",
    "start": "754840",
    "end": "760000"
  },
  {
    "text": "as a developer, especially when your system gets \ncomplex. And you need tooling to help you slice  ",
    "start": "760000",
    "end": "768520"
  },
  {
    "text": "and dice and visualize things as you want. Because \ndesign is...I also like to say, design is a team  ",
    "start": "768520",
    "end": "775680"
  },
  {
    "text": "sport, too. It's no longer...I mean, in the old \ndays, you had the one enterprise architect or  ",
    "start": "775680",
    "end": "781680"
  },
  {
    "text": "whatever role, the person who would say...\nThis is what you will implement.  Exactly. This is the design. It comes from up high \ndown to who will implement this. But these days,  ",
    "start": "781680",
    "end": "793360"
  },
  {
    "text": "everybody's involved. You've got front end, back \nend, QA, DevOps, your CTO or tech lead, and even,  ",
    "start": "793360",
    "end": "802360"
  },
  {
    "text": "I find, managers who would be maybe using the app \nthat you're developing will have a vested interest  ",
    "start": "802360",
    "end": "809279"
  },
  {
    "text": "in really getting into the development phase, the \ndesign phase. Even if they're just involved in  ",
    "start": "809280",
    "end": "817000"
  },
  {
    "text": "what would ultimately be the sort of data schemas \nfor the application, I find that everybody's more  ",
    "start": "818000",
    "end": "827880"
  },
  {
    "text": "technical these days, less afraid to sort of jump \nin and comment on, ultimately, system design. ",
    "start": "828480",
    "end": "838760"
  },
  {
    "text": "And in fact, you want that.\nAbsolutely.  You want the challenge from other people's \nideas to iterate and have the sort of  ",
    "start": "838760",
    "end": "844880"
  },
  {
    "text": "challenge response of \"Let's try this or try \nthat and try and bubble up to the best idea.\"  Absolutely. Because then you get this feedback \nloop that's quick. So you're not just sort  ",
    "start": "844880",
    "end": "853840"
  },
  {
    "text": "of developing a system and then doing a big \nreveal in three months just to find out that  ",
    "start": "853840",
    "end": "861880"
  },
  {
    "text": "it wasn't quite right, which happens frequently \nif it's quick cycles of, \"This is rough sketches  ",
    "start": "861880",
    "end": "869320"
  },
  {
    "text": "and mock data, and nothing works. But here's \na screen that shows a little bit about what  ",
    "start": "869320",
    "end": "879200"
  },
  {
    "text": "we're trying to do.\" And if that's on \na short feedback loop, then you're more   guaranteed to design and develop the right stuff.\nIt's just making me think about the sort of live  ",
    "start": "879200",
    "end": "890320"
  },
  {
    "text": "element of it, obviously, with an open source \nangle being open telemetry, because I think it's  ",
    "start": "890320",
    "end": "896600"
  },
  {
    "text": "going to get to a future where everyone's going \nto just send open telemetry. That's just going to   become the industry standard.\nRight, I agree with you.  ",
    "start": "896600",
    "end": "901840"
  },
  {
    "text": "So whether your partners or within your company, \nwith external companies, anyone, cloud providers,  ",
    "start": "901840",
    "end": "907280"
  },
  {
    "text": "that kind of thing, you've got a common format \nthat's going to be able to send that data.  I agree with you. And when you have that, then \nyou can break the silos that currently are there  ",
    "start": "907280",
    "end": "915680"
  },
  {
    "text": "right now. So one of the things we're trying to \ndo with our debugger is if you have a partner,   you're both on Multiplayer, you can have \nthe same debug session. They can see their  ",
    "start": "915680",
    "end": "924600"
  },
  {
    "text": "data. You can see your data. So it breaks \nthat silo of their data just over there.  ",
    "start": "924600",
    "end": "929720"
  },
  {
    "text": "Your data is over there. We rely on each \nother. We're in dependencies of each other,  ",
    "start": "929720",
    "end": "937160"
  },
  {
    "text": "but we can't really look too deep into or \ndebug things easily. It's really tough.",
    "start": "937160",
    "end": "942319"
  },
  {
    "start": "942000",
    "end": "1405000"
  },
  {
    "text": "So you mentioned the debugger. That sounds \nlike the world's hardest problem is to   debug things across all these different \nservices. How does the debugger work then? ",
    "start": "942320",
    "end": "949480"
  },
  {
    "text": "So we do some special things with \ntrace IDs to insert a short session ID,  ",
    "start": "949480",
    "end": "956000"
  },
  {
    "text": "which can travel across the traces.\nSort of correlation ID or something. Okay.  Exactly. And that allows us to understand. So \nwith an interaction that's multiple traces,  ",
    "start": "956520",
    "end": "968600"
  },
  {
    "text": "we can pull it together in one place. And we \nhave a front-end component that captures screens  ",
    "start": "968600",
    "end": "974480"
  },
  {
    "text": "and all that. So we've got from the front deep \ninto the back-end. But then, across boundaries,   if you're integrating with somebody else's API, \na partner API, and they're using the debugger  ",
    "start": "974480",
    "end": "986720"
  },
  {
    "text": "as well, well, instead of just saying, \"Hey, \nthere's this issue, your problem, go figure it  ",
    "start": "986720",
    "end": "993439"
  },
  {
    "text": "out. It happened around 3.30 yesterday. I've got \nthis cryptic message. Go look in your APM tools,\"  ",
    "start": "993440",
    "end": "1000480"
  },
  {
    "text": "you could just send them a link, and then they get \na filter of their open telemetry data for the same  ",
    "start": "1000480",
    "end": "1007880"
  },
  {
    "text": "session. So again, it's taking that manual work. \nThere's so much that's manual in what we do as  ",
    "start": "1007880",
    "end": "1014600"
  },
  {
    "text": "software developers. You'd think that we automate \nall sorts of other industries, and I'm surprised  ",
    "start": "1014600",
    "end": "1020880"
  },
  {
    "text": "we haven't solved this problem for ourselves.\nJulian Wood. It seems like an obvious thing.  A long time ago.\nIt's also, I would say,  ",
    "start": "1020880",
    "end": "1028439"
  },
  {
    "text": "over the past 10, even 20 years, there's been a \nhuge amount in terms of software architecture and   diagramming tools. I'm thinking of, like, Simon \nBrown's C4 model, spoken at many GOTO conferences,  ",
    "start": "1028960",
    "end": "1040400"
  },
  {
    "text": "really good. Even Simon Wardley's Wardley mapping \nis about diagramming and user flows and needs and   the evolution of things that are happening. Even \ndomain-driven design or doing event storming is  ",
    "start": "1040400",
    "end": "1052320"
  },
  {
    "text": "ultimately a visual Post-it note on a board to \nvisually put apart your application. This is  ",
    "start": "1052320",
    "end": "1058480"
  },
  {
    "text": "interesting to see how those different approaches \nin the design aspect can be shown in real life  ",
    "start": "1058480",
    "end": "1065280"
  },
  {
    "text": "in a real tool based on your real data.\nI think that some of those specs are very  ",
    "start": "1065280",
    "end": "1073200"
  },
  {
    "text": "important. We export to different formats. \nBut it's the manual part that's the problem.  ",
    "start": "1073200",
    "end": "1078840"
  },
  {
    "text": "And that is ultimately the thing that I \nthink everybody struggles with. It's funny,  ",
    "start": "1080480",
    "end": "1086480"
  },
  {
    "text": "I talk to a lot of companies, and everybody's got \nhorror stories about how they update their stuff,  ",
    "start": "1086480",
    "end": "1095200"
  },
  {
    "text": "how infrequently it happens, when they develop, \nthey're kind of in the dark, the problems of not   knowing what the real dependencies are and what \nthe source of truth is. There's a general fear,  ",
    "start": "1095800",
    "end": "1106320"
  },
  {
    "text": "I think, when your system becomes complex \nenough that, like, \"If I change this,   am I going to break something?\" Because feature \ndevelopment is...you're never changing all of  ",
    "start": "1106320",
    "end": "1115880"
  },
  {
    "text": "your services, you're probably adding a service \nor changing some APIs, adding a few things.  ",
    "start": "1115880",
    "end": "1121520"
  },
  {
    "text": "But they're touchpoints. And so anything \nthat has the word manual in front of it,  ",
    "start": "1121520",
    "end": "1129160"
  },
  {
    "text": "it's going to be out of date quickly.\nIt's always done with good intentions,   even talking about domain-driven design, for \nexample. You're setting up all your context  ",
    "start": "1129160",
    "end": "1140000"
  },
  {
    "text": "and your boundaries and all these kinds of things, \nand that looks all great on paper. Then you hope   the implementation of that is actually correct. \nYou don't know whether your domain boundaries are  ",
    "start": "1140000",
    "end": "1149120"
  },
  {
    "text": "leaked and someone is sending an event from there \nand it's landing up for microservices across and   being consumed. You're like, \"How did that happen? \nThis is all meant to be an in-domain event.\" So  ",
    "start": "1149120",
    "end": "1158040"
  },
  {
    "text": "having something to even catch that or visualize \nthat, because those are the kind of things that   trip you up, when you then do make a change, you \nthink your microservice is isolated, and it isn't. ",
    "start": "1158040",
    "end": "1167600"
  },
  {
    "text": "Then you've got technical debt. And you have to \nchoose. Okay, you're probably not going to fix   it right away. Then you have to live with it for a \nwhile and things pile up. And I think that there's  ",
    "start": "1167600",
    "end": "1179200"
  },
  {
    "text": "going to be a trend toward doing more design \nupfront rather than jumping into implementation.  ",
    "start": "1179200",
    "end": "1186440"
  },
  {
    "text": "And I think that's really important, especially as \nsystems get complex, to socialize an idea, to say,  ",
    "start": "1187240",
    "end": "1192800"
  },
  {
    "text": "\"I'm going to add this service, maybe a couple \nof dependencies, and socialize.\" Some companies  ",
    "start": "1192800",
    "end": "1203920"
  },
  {
    "text": "are formal about their processes. You've got to \nget approval. But many aren't. It's very loose.  ",
    "start": "1203920",
    "end": "1211400"
  },
  {
    "text": "But it should happen. We have PRs for when you're \ndone developing, \"Okay, let's review it when I'm  ",
    "start": "1211960",
    "end": "1217880"
  },
  {
    "text": "done.\" Well, that's kind of too late. It's \na good gate, but there should be sort of a  ",
    "start": "1217880",
    "end": "1225200"
  },
  {
    "text": "design review upfront where you say, \"Okay, I'm \ngoing to make these changes to my system. This   is what I plan on doing, changing these APIs, \nadding these things. Share it with everybody.\" ",
    "start": "1225200",
    "end": "1235679"
  },
  {
    "text": "DevOps needs to know what they're going to \nmanage, the new stuff, and QA, what to test,  ",
    "start": "1235680",
    "end": "1240840"
  },
  {
    "text": "and the front-end, what they're going to consume, \nthe back-end, how you're going to change your  ",
    "start": "1240840",
    "end": "1246760"
  },
  {
    "text": "system. And then you can have those discussions, \nthose philosophical discussions, if you love or   hate microservices. I came across a new term that \nsomebody shared with me last, macroservices. So  ",
    "start": "1246760",
    "end": "1259400"
  },
  {
    "text": "instead of monolith, sort of, like, breaking \nthings apart, but the least cuts, which I think  ",
    "start": "1259400",
    "end": "1265560"
  },
  {
    "text": "is a cool term. But whatever your philosophy is, \nit's like you've got to...if you're not sharing  ",
    "start": "1265560",
    "end": "1273240"
  },
  {
    "text": "what your plan is to implement features, you're \nprobably going to drift from your philosophy.",
    "start": "1274680",
    "end": "1282960"
  },
  {
    "text": "Specifically with monolith macroservice, \na lot of people have completely overdone  ",
    "start": "1283560",
    "end": "1290880"
  },
  {
    "text": "it on microservices and have these little tiny \nthings, which is a management overhead. But the   more distributed you get, it's impossible for \none developer, or even a team of developers,  ",
    "start": "1290880",
    "end": "1299720"
  },
  {
    "text": "to reasonably understand everything that's going \non in these services and put it in their head and   go. Actually, we started off by having these \nmicroservices. Actually, why don't we combine  ",
    "start": "1299720",
    "end": "1308880"
  },
  {
    "text": "three of those together? It would be much better.\nSure. Absolutely.  But how would you pick that or know what to do?\nIt starts with you've got to have a source of  ",
    "start": "1308880",
    "end": "1317840"
  },
  {
    "text": "truth about what your software is. I mean, if \nyou have that, then you can make these sorts   of decisions. If you can trust it, you can put \na plan together and say, \"You know what, let's  ",
    "start": "1317840",
    "end": "1325920"
  },
  {
    "text": "combine these things. Maybe we went overboard,\" \nand be able to make smart decisions about evolving  ",
    "start": "1325920",
    "end": "1333800"
  },
  {
    "text": "your software. But I think that is a change \nthat I'm seeing in the industry where there's  ",
    "start": "1333800",
    "end": "1339400"
  },
  {
    "text": "more care about your platform. The term platform \nengineer is relatively new. To have people who are  ",
    "start": "1339400",
    "end": "1349240"
  },
  {
    "text": "not just thinking about DevOps and sort of running \ninfrastructure but taking a platform perspective. ",
    "start": "1350680",
    "end": "1356600"
  },
  {
    "text": "A product perspective on the platform.\nExactly, exactly. I mean, I think that's   pretty exciting. I think that's a new trend that \nwill bear fruit, I think, over the years where the  ",
    "start": "1356600",
    "end": "1368440"
  },
  {
    "text": "platform is your product. And every company \nthat has software has a distributed system,  ",
    "start": "1368440",
    "end": "1375039"
  },
  {
    "text": "and everybody should think about their \ndistributed system as a platform.  A lot of people are not thinking of it like \na product, and they create these inflexible  ",
    "start": "1375040",
    "end": "1384560"
  },
  {
    "text": "platforms. And then they're surprised when \npeople don't use it, or they're surprised   when people use it in ways they didn't intend. \nThat's not a product. A product needs to evolve  ",
    "start": "1384560",
    "end": "1392680"
  },
  {
    "text": "as well. It needs to have a marketing function \nand evolution and budgeting and all those kinds  ",
    "start": "1392680",
    "end": "1398280"
  },
  {
    "text": "of things. Another whole tangent to go down.\nYes. That's definitely an exciting topic.",
    "start": "1398280",
    "end": "1404840"
  },
  {
    "text": "So circling back to some of the people aspect \nof this, because we're not yet at a stage where  ",
    "start": "1404840",
    "end": "1410320"
  },
  {
    "start": "1405000",
    "end": "1698000"
  },
  {
    "text": "GenAI is going to write all the code for \nus and generate all the documentation for   us and create the perfect service architectures, \nthere's still humans in the loop so far. And so,  ",
    "start": "1410320",
    "end": "1420480"
  },
  {
    "text": "in your learnings, people start with good \nintentions, and maybe even a single person   starting a startup builds something successfully. \nWhat are sort of some of the mistakes they make  ",
    "start": "1420480",
    "end": "1429960"
  },
  {
    "text": "which they should catch early on or avoid doing \nearly on or do things? And surely, it's going  ",
    "start": "1429960",
    "end": "1436600"
  },
  {
    "text": "to be the documentation as well, as you've been \nmentioning, but even some organizational things   or anything, what should people be thinking \nof far earlier than they currently do? ",
    "start": "1436600",
    "end": "1443440"
  },
  {
    "text": "Yeah. So if I were to advise an entrepreneur \nstarting out a small development team, I would say  ",
    "start": "1443440",
    "end": "1452200"
  },
  {
    "text": "keep it simple. Absolutely keep it simple. I mean, \nI won't get into the religious arguments about  ",
    "start": "1452200",
    "end": "1462399"
  },
  {
    "text": "microservices and monoliths, but I would...just \noverall, because systems evolve over time and  ",
    "start": "1462400",
    "end": "1469760"
  },
  {
    "text": "teams evolve, so there's no wrong decision after \na while. It's like what works for you. But when  ",
    "start": "1469760",
    "end": "1477600"
  },
  {
    "text": "you're starting out, just try to keep it simple. \nI would say monolith. I would say monorepo. If you  ",
    "start": "1477600",
    "end": "1485320"
  },
  {
    "text": "can, I would try not to write everything yourself. \nSo when you do that, that might mean bringing in a  ",
    "start": "1485320",
    "end": "1493880"
  },
  {
    "text": "cloud provider service or a SaaS product.\nThat doesn't mean you've got your   application and multiple developers working on \nit. This is using either a managed service or an  ",
    "start": "1493880",
    "end": "1501920"
  },
  {
    "text": "existing library or something else. Okay.\nLike S3 for object store. You're not  ",
    "start": "1501920",
    "end": "1507560"
  },
  {
    "text": "going to try to write that yourself.\nOkay. Yeah. So don't go too low. Use  ",
    "start": "1507560",
    "end": "1512840"
  },
  {
    "text": "something. There's a great talk called \"Standing \non the Shoulders of Giants,\" and it's all about  ",
    "start": "1512840",
    "end": "1518440"
  },
  {
    "text": "Luc van Donkersgoed who works for PostNL. \nAnd it's this great analogy of using other   people's great work and then standing on their \nshoulders to create something even greater. ",
    "start": "1518440",
    "end": "1525720"
  },
  {
    "text": "Right. So, exactly, that's a great way to think \nabout it, where you're composing your platform  ",
    "start": "1526400",
    "end": "1532720"
  },
  {
    "text": "from as much that's out there that's sort of \nbulletproof, tested, try to keep it simple as  ",
    "start": "1532720",
    "end": "1540440"
  },
  {
    "text": "much as you can, but know that your platform will \nevolve, will become more complex, there will be  ",
    "start": "1540440",
    "end": "1549559"
  },
  {
    "text": "more people coming in. Plan for it to break up \na little bit. So even in a monolith, even if you  ",
    "start": "1549560",
    "end": "1557000"
  },
  {
    "text": "have a modular design with some clear points \nto cut, if you need to scale something out,  ",
    "start": "1559760",
    "end": "1569760"
  },
  {
    "text": "not everything sort of scales together, sometimes \nyou need to run things on their own. We have  ",
    "start": "1569760",
    "end": "1575520"
  },
  {
    "text": "real-time collaboration. So our collaboration \nservice needs to scale on its own separately  ",
    "start": "1576120",
    "end": "1581800"
  },
  {
    "text": "from some of the other components in our platform. \nSo try to keep it as much together as possible. ",
    "start": "1581800",
    "end": "1592240"
  },
  {
    "text": "So there is if I'm thinking about it, I \nthink what I'm understanding you saying,   you have a monolithic code base, but within that \ncode base, use good coding practices to separate  ",
    "start": "1592800",
    "end": "1601560"
  },
  {
    "text": "your code out into...\nModules.  ...be it separate modules or those kinds of \nthings. So although you're not prematurely  ",
    "start": "1601560",
    "end": "1607559"
  },
  {
    "text": "optimizing, which is certainly something \nto talk about, good software practice   means that module could go somewhere else.\nYes, exactly. If you needed to break it out  ",
    "start": "1607560",
    "end": "1617480"
  },
  {
    "text": "and put a RESTful API on it or something, it's \nnot a complete rewriting. I mean, it's more of  ",
    "start": "1617480",
    "end": "1623840"
  },
  {
    "text": "a little refactoring. So thinking about APIs, \neven if the API is just a class interface, is,  ",
    "start": "1623840",
    "end": "1635320"
  },
  {
    "text": "I think, important to do in the early phases.\nIs that one of the harder things? Because   sort of AWS, and Werner Vogel had a quote, \n\"APIs are forever,\" and that's the kind of  ",
    "start": "1635320",
    "end": "1645159"
  },
  {
    "text": "thing that really locks you in. People get \nworried about lock-in with things, but the   APIs lock you in because that's how \nyour customers interact with you. ",
    "start": "1645160",
    "end": "1652240"
  },
  {
    "text": "YWell, when it's internal services, you have \na little bit more freedom for refactoring. ",
    "start": "1652240",
    "end": "1658640"
  },
  {
    "text": "If you've well-documented your APIs.\nExactly. But if it's external, oh, boy,  ",
    "start": "1658640",
    "end": "1664480"
  },
  {
    "text": "that is...those are...\nPainful.  Yes, you can change things, but you just don't \nwant to. Because when you have your customers  ",
    "start": "1664480",
    "end": "1672880"
  },
  {
    "text": "or your partners write code that integrates with \nyour APIs, they want to write it once and have it  ",
    "start": "1672880",
    "end": "1680600"
  },
  {
    "text": "run forever. Maybe if you add a new feature, \nthey'll add. But if you say, \"You know what,   you need to change this API method to change \nthe parameters or change this to that,\" they  ",
    "start": "1680600",
    "end": "1690720"
  },
  {
    "text": "will not be happy. So depending on your business, \nyou might not be able to do that kind of stuff.",
    "start": "1690720",
    "end": "1697919"
  },
  {
    "text": "Is there any advice on that kind of \nAPI design of trappings to avoid? ",
    "start": "1697920",
    "end": "1703600"
  },
  {
    "start": "1698000",
    "end": "2222000"
  },
  {
    "text": "Boy, keep it simple. Keep it \nmodular. It's hard to be general. ",
    "start": "1703600",
    "end": "1710476"
  },
  {
    "text": "So keeping it simple, yeah...but, I mean, keeping \nit simple is just having less API routes or having  ",
    "start": "1710477",
    "end": "1716840"
  },
  {
    "text": "a naming thing that is flexible or can...\nSome common things, some built-in versioning.  ",
    "start": "1716840",
    "end": "1723880"
  },
  {
    "text": "I prefer to have the version in the path. \nThere are lots of different approaches.   Do whatever works. But have some versioning. \nThat helps. So if you need to change things,  ",
    "start": "1724640",
    "end": "1734520"
  },
  {
    "text": "you can have the old API active when the \nnew one is there and have a transition,   which is necessary. That alone is important.\nAnd then I think about the different kind of,  ",
    "start": "1734520",
    "end": "1746840"
  },
  {
    "text": "for lack of a better word, objects or things, have \na thing-based approach to your API paths so people  ",
    "start": "1746840",
    "end": "1757120"
  },
  {
    "text": "can read it and it will make sense. You've got \na thing and then actions on that thing. That's  ",
    "start": "1757120",
    "end": "1766520"
  },
  {
    "text": "helpful. I've seen a lot of crazy APIs that \nmake no sense. But the ones that do generally  ",
    "start": "1766520",
    "end": "1771760"
  },
  {
    "text": "follow that kind of approach. And simple, \nsmall, only add the things you really need,  ",
    "start": "1771760",
    "end": "1783120"
  },
  {
    "text": "no more. I also see lots of extra endpoints \nand other things that are maybe rarely used  ",
    "start": "1783120",
    "end": "1791760"
  },
  {
    "text": "or add complexity. So just keep things simple.\nObviously, it's a trade-off to build all the  ",
    "start": "1791760",
    "end": "1799440"
  },
  {
    "text": "things because then people are going to \ncome and use all the things. But I know   in the architectures I've been involved in that \nyou're often quite surprised how your customers  ",
    "start": "1799440",
    "end": "1808480"
  },
  {
    "text": "are going to use your application or going to use \nyour service, and you really need to figure out,   based on usage patterns, which also \nlinks back to the documentation,  ",
    "start": "1808480",
    "end": "1815840"
  },
  {
    "text": "being able to visualize how your application \nis actually being used on what the evolution   is because there may be parts of the application \nthat resonate way more with customers than other  ",
    "start": "1815840",
    "end": "1823440"
  },
  {
    "text": "parts. And if you've prematurely optimized for \nthe wrong path, that's just going to be painful. ",
    "start": "1823440",
    "end": "1828840"
  },
  {
    "text": "Well, it comes back to system design as a team \napproach, where the team includes your partner,  ",
    "start": "1828840",
    "end": "1834240"
  },
  {
    "text": "includes your customer. There's a lot of \ncommunication that needs to happen when  ",
    "start": "1834240",
    "end": "1840400"
  },
  {
    "text": "you're designing systems, developing systems. \nAnd the more you can communicate with your team,  ",
    "start": "1840400",
    "end": "1847360"
  },
  {
    "text": "your partners, and have a quick iteration \ncycle, the better off you'll be for evolving,  ",
    "start": "1847360",
    "end": "1855400"
  },
  {
    "text": "developing your system. As you said, you want to \nknow what's resonating with your customer. Part of   that is watching what they're using. Because \nthey might tell you one thing but sort of do  ",
    "start": "1855400",
    "end": "1866160"
  },
  {
    "text": "another. I found that from time to time. So I also \nlike to recommend to people to design and develop  ",
    "start": "1866160",
    "end": "1876400"
  },
  {
    "text": "as transparently as they can, especially if you \nhave customers and partners relying on your APIs,  ",
    "start": "1876400",
    "end": "1883920"
  },
  {
    "text": "because you want that feedback early, very \nearly. The features you're developing,  ",
    "start": "1884680",
    "end": "1891160"
  },
  {
    "text": "and everything around that, the APIs, or \nwhatever, they help you with choosing how  ",
    "start": "1891160",
    "end": "1896520"
  },
  {
    "text": "to scale your application, what to break out \ninto a service versus adding to your monolith. ",
    "start": "1896520",
    "end": "1902360"
  },
  {
    "text": "So it's funny that we talk so much as \ndevelopers about the coding of these  ",
    "start": "1903360",
    "end": "1911880"
  },
  {
    "text": "systems and the complexity there, but I found \nthat the sort of social parts, the communication,  ",
    "start": "1911880",
    "end": "1919520"
  },
  {
    "text": "is the sort of biggest thing or indicator of \nsuccess. If you do it well, do it transparently  ",
    "start": "1919520",
    "end": "1927440"
  },
  {
    "text": "with your team, with your customers and partners. \nYou're much better off and less likely to develop  ",
    "start": "1927440",
    "end": "1935320"
  },
  {
    "text": "the wrong thing, less likely to have technical \ndebt that piles up, and probably end up being a  ",
    "start": "1935320",
    "end": "1942200"
  },
  {
    "text": "more successful business at the end of the day.\nI mean, that sounds simple, and maybe we would  ",
    "start": "1942200",
    "end": "1949519"
  },
  {
    "text": "try to say, \"Oh, just communicate better.\" But \npractically, how do you do that? Obviously,   within a team, within an office, and \nwe've had a pandemic and remote working,  ",
    "start": "1949520",
    "end": "1958840"
  },
  {
    "text": "and some return to offices, kind of mandates \ngoing on, how does one communicate within your  ",
    "start": "1958840",
    "end": "1964799"
  },
  {
    "text": "own team and then strategies to communicate? \nYou mentioned even customers. How should  ",
    "start": "1964800",
    "end": "1970040"
  },
  {
    "text": "people think about communicating better?\nThat's a great question. And part of our  ",
    "start": "1970040",
    "end": "1978200"
  },
  {
    "text": "tool is to help people communicate. Have your \nsource of truth and have an environment where  ",
    "start": "1978200",
    "end": "1983960"
  },
  {
    "text": "the whole team and your partners can come \nand collaborate on the same documents,   the same source of truth, communicate about \ndesign that's coming up, what the system is now. ",
    "start": "1984600",
    "end": "1994880"
  },
  {
    "text": "So some of that communication is actually \njust the visibility of what you've got.  It's sharing what you have. So having that \nsource of truth of what is your software,  ",
    "start": "1994880",
    "end": "2003159"
  },
  {
    "text": "having a good answer for that that's up to \ndate, and then sharing it with people and having   them work on it in that same place so that they \nknow that they can go to that place to get all the  ",
    "start": "2003160",
    "end": "2017960"
  },
  {
    "text": "information they need about where your system \nis now, where it's been, which is also great,  ",
    "start": "2017960",
    "end": "2024159"
  },
  {
    "text": "to see past versions of your system. It's \ncool to watch a system evolve and say, \"Oh,  ",
    "start": "2024160",
    "end": "2030760"
  },
  {
    "text": "we started here, and then we had these services, \nand then this happened, and the scheme changed.\"  That's interesting, because there is a \nstory in history, and it's very easy to  ",
    "start": "2030760",
    "end": "2037960"
  },
  {
    "text": "look at the current state and go, \"That was \nit,\" without understanding what had been formed. ",
    "start": "2037960",
    "end": "2044260"
  },
  {
    "text": "How did we get here?\nHow do we get there? Because there were decisions   that were made in good intentions, and there \nwere the right decisions at the time, but those  ",
    "start": "2044260",
    "end": "2050159"
  },
  {
    "text": "decisions need to evolve. And having some sort \nof decision record over time that you can easily   look at will help you understand your software.\nThe information is there. With a good tool, you  ",
    "start": "2050160",
    "end": "2064840"
  },
  {
    "text": "can save it for posterity. But it's not going to \nbe looking at the Git logs. It's not going to be  ",
    "start": "2064840",
    "end": "2073679"
  },
  {
    "text": "looking at the Jira tickets. I mean, nobody wants \nto...I don't know who looks at that. Everyone  ",
    "start": "2073680",
    "end": "2081159"
  },
  {
    "text": "wants to get out of Jira as quickly as possible. \nLove it, but hate it too sometimes. And it's not  ",
    "start": "2081160",
    "end": "2088639"
  },
  {
    "text": "code. It's not looking at tickets. It's too low \nlevel. So having a higher level of thinking that  ",
    "start": "2088640",
    "end": "2095039"
  },
  {
    "text": "everybody can collaborate on is pretty important.\nSo I mean, I'm thinking also again back  ",
    "start": "2095040",
    "end": "2103200"
  },
  {
    "text": "to pandemic and teams working remotely and \nseparately. Is this sort of the new equivalent  ",
    "start": "2103200",
    "end": "2108560"
  },
  {
    "text": "of the sort of team whiteboard, but it's a \nsort of live dynamic view of the application?  It's kind of purpose-built. So diagramming is \nnot design. And you need a space for teams to get  ",
    "start": "2108560",
    "end": "2127040"
  },
  {
    "text": "together and collaborate on the things that are \nimportant for design. And then, when you do that,  ",
    "start": "2127040",
    "end": "2134880"
  },
  {
    "text": "you can have the confidence that what you're \ndeveloping is...I mean, ideally you want everybody  ",
    "start": "2134880",
    "end": "2142680"
  },
  {
    "text": "in your team to know what you're building before \nyou start, while you're doing it. So when you get  ",
    "start": "2142680",
    "end": "2149359"
  },
  {
    "text": "to the pull request, it's like you're bright on \nthe money. This is exactly what we talked about.  ",
    "start": "2149360",
    "end": "2155160"
  },
  {
    "text": "And I'm not surprised by what you're doing.\nIt's not, \"Oh, what is this? Let me see.\"  What are you doing? Why did you do it this way? \nWhich is very common. Which is a very common sort  ",
    "start": "2155160",
    "end": "2164160"
  },
  {
    "text": "of thing to face. And then you're always moving on \nto the next thing. So to have design incorporated  ",
    "start": "2164160",
    "end": "2173760"
  },
  {
    "text": "into better incorporating the development \nprocess will let you develop faster, because  ",
    "start": "2173760",
    "end": "2179280"
  },
  {
    "text": "then you can move on to the next thing. Design \nis done. Development done. Matches the design. ",
    "start": "2179280",
    "end": "2186880"
  },
  {
    "text": "Implementation is the design.\nExactly. And then now we can move   on to the next thing. And we don't have to worry \nabout what we just did. We can, with confidence,  ",
    "start": "2186880",
    "end": "2196680"
  },
  {
    "text": "know our system is evolving. Because that's \none of the biggest things. These systems are  ",
    "start": "2196680",
    "end": "2201720"
  },
  {
    "text": "dynamic. They are quickly changing. Teams are \ndynamic, too. So you've got the organization  ",
    "start": "2201720",
    "end": "2210760"
  },
  {
    "text": "and your software kind of, you know...there are \na lot of things in common. Dynamic, complex, and…",
    "start": "2210760",
    "end": "2220680"
  },
  {
    "text": "And many people build software based on their \norganizational boundaries, which is normal,  ",
    "start": "2220680",
    "end": "2226480"
  },
  {
    "start": "2222000",
    "end": "2619000"
  },
  {
    "text": "the common law. So yeah, what would you \neven say to teams in terms of setting up  ",
    "start": "2226480",
    "end": "2231680"
  },
  {
    "text": "teams and setting up the people aspect of writing \neffective software to have better collaboration? ",
    "start": "2231680",
    "end": "2237119"
  },
  {
    "text": "That's a great question. So we're a remote \ncompany, distributed. We have people in Portugal,  ",
    "start": "2237120",
    "end": "2246600"
  },
  {
    "text": "Armenia, Kyrgyzstan, Romania. And I don't know. If \nyou're hiring people, I would recommend you take  ",
    "start": "2246600",
    "end": "2257080"
  },
  {
    "text": "the best people wherever they are. And there are \ngreat tools to have that feeling of camaraderie.  ",
    "start": "2257080",
    "end": "2263600"
  },
  {
    "text": "And even though it's virtual, with Slack and \nZoom or whatever you use for video conferencing,  ",
    "start": "2263600",
    "end": "2274720"
  },
  {
    "text": "I would say that, as long as you're set up \nto communicate, well, I guess it comes back  ",
    "start": "2276120",
    "end": "2284360"
  },
  {
    "text": "to communication, then you can develop software \neffectively, regardless of where you're located. ",
    "start": "2284360",
    "end": "2291000"
  },
  {
    "text": "So in a way, it's sort of actually leaning into \nthe communications part first, which simplifies  ",
    "start": "2291640",
    "end": "2297359"
  },
  {
    "text": "the organizational communication boundaries. \nBecause with rigid organizational structures that  ",
    "start": "2297360",
    "end": "2302960"
  },
  {
    "text": "don't communicate effectively, that seems brittle.\nRight, right. So if you've got the communication  ",
    "start": "2302960",
    "end": "2309000"
  },
  {
    "text": "piece down, short feedback loops, talking to \npeople on your team frequently, have transparency  ",
    "start": "2309000",
    "end": "2317200"
  },
  {
    "text": "about what...I guess, if you're a manager, clear \ngoals, clarity from the top down of what should be  ",
    "start": "2317200",
    "end": "2327160"
  },
  {
    "text": "developed, the features that are in the queue that \nshould go out, and then transparency about design,  ",
    "start": "2329360",
    "end": "2336880"
  },
  {
    "text": "development, then you're set up to move quickly. \nAnd I think the best teams do it that way. ",
    "start": "2336880",
    "end": "2347000"
  },
  {
    "text": "Casting you a bit further into the \nfuture, when either of this is all solved,   and whether using Multiplayer or whatever you're \ndoing, in sort of a few years' time or something,  ",
    "start": "2350880",
    "end": "2360280"
  },
  {
    "text": "if you were looking back, what would people \nhave achieved, and how would the software  ",
    "start": "2361880",
    "end": "2366960"
  },
  {
    "text": "business have evolved and changed to sort of \ncreate or bring to life what you want in it? ",
    "start": "2366960",
    "end": "2376240"
  },
  {
    "text": "We're trying to, like, invent the tools that \nwill be used in the future. So hopefully,   one of the things we have in development is \nwhat we call the platform designer, which is  ",
    "start": "2376240",
    "end": "2384280"
  },
  {
    "text": "a composable interface to take pre-built services \nand SaaS products and then compose a platform and  ",
    "start": "2384280",
    "end": "2391840"
  },
  {
    "text": "click to deploy on different environment types. \nI think the future is infrastructure is going  ",
    "start": "2391840",
    "end": "2398280"
  },
  {
    "text": "to get abstracted away, and we're going to be \ndeveloping software to software, and you're   not going to have to worry about Terraform and \nKubernetes config and all this other stuff that. ",
    "start": "2398280",
    "end": "2407800"
  },
  {
    "text": "I mean, I work for AWS in the serverless product \norg, and that's, like, part of the way of that   journey there of abstracting infrastructure. \nThere's a whole lot of work still to do. Yeah. ",
    "start": "2407800",
    "end": "2415880"
  },
  {
    "text": "Right. And it's just because all these tools are \ngreat, but you have to know so much just to get a  ",
    "start": "2415880",
    "end": "2424400"
  },
  {
    "text": "\"Hello, World\" platform up and running. You can \nhack something together, sure, really quickly,  ",
    "start": "2424400",
    "end": "2431319"
  },
  {
    "text": "but if you want to start right, you have \nto be an expert in too many things now. So  ",
    "start": "2431320",
    "end": "2439400"
  },
  {
    "text": "I think that in the near-ish future, it will \nbe infrastructure abstracted away. You're not  ",
    "start": "2439400",
    "end": "2445760"
  },
  {
    "text": "going to be thinking about virtual machines. \nYou'll think about CPU allocation for services   and memory and things like that.\nAs a resource rather than... ",
    "start": "2445760",
    "end": "2452400"
  },
  {
    "text": "As a resource, exactly. Not where it's going \nto be. Maybe you'll say, keep it close,   or it can be far away, or it can be an object \nsource or whatever, but you'll be thinking  ",
    "start": "2452400",
    "end": "2460600"
  },
  {
    "text": "more about software talking to software. It \nwill be about APIs. It will be about services  ",
    "start": "2460600",
    "end": "2466560"
  },
  {
    "text": "and whether that service is something that \nsomebody else wrote that's open source that   you'll just sort of drag into your platform \nand run as a container, or a SaaS product,  ",
    "start": "2466560",
    "end": "2477160"
  },
  {
    "text": "or a cloud service that's on a cloud provider. \nIt will be cloud agnostic. It will be, you know,  ",
    "start": "2477160",
    "end": "2485319"
  },
  {
    "text": "this kind of infrastructure stuff. You won't \nhave to think about it. And I think it will   be a better world because people will be able \nto move quicker. They won't have to be experts  ",
    "start": "2485320",
    "end": "2499320"
  },
  {
    "text": "to get their startup idea off the ground.\nAnd easy to get into, I think. Ee talk about   the amount of software engineers in the world. \nI mean, it is a tiny proportion of people. And  ",
    "start": "2499320",
    "end": "2507560"
  },
  {
    "text": "the barrier to entry is crazy high to become \na software developer, the amount of time in   coding. And I know GenAI is awesome for helping \nyou explain code and help with that. And I mean,  ",
    "start": "2507560",
    "end": "2515640"
  },
  {
    "text": "I'm not meaning that in a sarcastic way at \nall. Like, learning to code now, I think,   is much easier with GenAI. But if we can lower the \nbarrier and the infrastructure stuff and people  ",
    "start": "2515640",
    "end": "2523280"
  },
  {
    "text": "can just understand how software works, yeah, if \nwe could double the amount of software engineers   in the world, I mean, that would be a great thing.\nYeah, that would be great. And I think that...I  ",
    "start": "2523280",
    "end": "2532480"
  },
  {
    "text": "love GenAI for a number of things, \nbut if you can get it to, for example,  ",
    "start": "2532480",
    "end": "2538960"
  },
  {
    "text": "generate some Terraform for you, but you still \nhave to be a Terraform expert. You have to know...  If something goes wrong, yeah.\nExactly. So there's tooling that has nothing  ",
    "start": "2538960",
    "end": "2547640"
  },
  {
    "text": "to do with AI that can be created, that can help \ncreate this future world where, you know, you can  ",
    "start": "2547640",
    "end": "2558359"
  },
  {
    "text": "just get an idea off the ground really quickly.\nAnd I think there are going to be many   tools as well.\nYes, absolutely.  I think that's probably another whole conversation \nabout how the art of creating tools is going to  ",
    "start": "2558360",
    "end": "2568279"
  },
  {
    "text": "become much better, that you're going to be able \nto have much more targeted, specialized, simpler   tools to create for different use cases. Yeah, \nthat's going to be an exciting thing to create  ",
    "start": "2568280",
    "end": "2577400"
  },
  {
    "text": "this future with smaller, little composable tools.\nTom Johnson:  I think the next 5, 10 years is  ",
    "start": "2577400",
    "end": "2583720"
  },
  {
    "text": "going to be really exciting for distributed \nsystems. And thinking about the evolution   from desktop software to client server to \nmicroservices to all these SaaS products and  ",
    "start": "2583720",
    "end": "2595160"
  },
  {
    "text": "cloud products and these great projects like \nTerraform and Kubernetes for orchestration,   solving some tough problems, suddenly they're \ngoing to be in the background. It's more of, like,  ",
    "start": "2595160",
    "end": "2605359"
  },
  {
    "text": "the plumbing, and you just compose and just think \nabout software. It's going to be a pretty... I've  ",
    "start": "2605360",
    "end": "2613920"
  },
  {
    "text": "always wanted that world. I can't wait for it.\nGetting there, getting there. Tantalizing.  ",
    "start": "2613920",
    "end": "2618359"
  },
  {
    "start": "2619000",
    "end": "2657000"
  },
  {
    "text": "Is there anything we haven't covered today \nthat's top of mind or to think about? ",
    "start": "2619080",
    "end": "2623760"
  },
  {
    "text": "No, I think we've covered quite a bit. Thanks for \nhaving me. It's been a wonderful conversation. ",
    "start": "2624480",
    "end": "2630440"
  },
  {
    "text": "Well, thanks for joining us. And yeah, \nthanks for joining us on GOTO Unscripted   here in lovely Chicago. Being able to speak to \nmany people at the conference is a pleasure. I  ",
    "start": "2630440",
    "end": "2638520"
  },
  {
    "text": "get to learn as well. Thanks for spending \nyour time with us here today. Thank you.  Thanks.",
    "start": "2638520",
    "end": "2656640"
  }
]