[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "Hi there. Welcome to \"GOTO Unscripted.\" I'm Liz \nFong-Jones and I'm the field CTO at Honeycomb,  ",
    "start": "13920",
    "end": "19560"
  },
  {
    "text": "and I'm joined by Marit van Dijk, and we're \nboth here at GOTO Copenhagen 2023. Marit,  ",
    "start": "19560",
    "end": "25160"
  },
  {
    "text": "would you like to introduce yourself?\nYeah, I'm Marit van Dijk van Dijk. I'm from the   Netherlands. I'm currently working as a developer \nadvocate at JetBrains. And before that, I was a  ",
    "start": "25160",
    "end": "33960"
  },
  {
    "text": "backend developer using Java and Kotlin mostly.\nAh, JetBrains, Java, Kotlin. Yep. That sounds  ",
    "start": "33960",
    "end": "40800"
  },
  {
    "text": "like a very compatible combination of things.  Yes.\nAwesome. Well, today we wanted to  ",
    "start": "40800",
    "end": "48000"
  },
  {
    "start": "46000",
    "end": "150000"
  },
  {
    "text": "maybe spend some time talking about developer \nexperience and making for happy developers.  ",
    "start": "48000",
    "end": "53360"
  },
  {
    "text": "So what's to you kind of the most important \nthing for a developer to kind of feel happy? ",
    "start": "53360",
    "end": "59920"
  },
  {
    "text": "Working for a tool company, I wanna say \ntools can help. Tools that, you know,   don't get in your way. Tools that let you do your \njob, maybe even offer helpful suggestions. I know  ",
    "start": "60880",
    "end": "70760"
  },
  {
    "text": "that you mentioned in your talk earlier today a \nbunch of tips on, you know, how to get better as  ",
    "start": "70760",
    "end": "78840"
  },
  {
    "text": "a team in developing software. So maybe you \nwanna share or reiterate some of those tips. ",
    "start": "78840",
    "end": "86520"
  },
  {
    "text": "I think there's no shame in saying you work \nfor a developer tooling company. Certainly,   one of the reasons that I come to work is I \nfeel like our industry deserves so much better,  ",
    "start": "87520",
    "end": "96040"
  },
  {
    "text": "that so many people wind up wasting a lot of their \ntime on doing break-fix work or having their state  ",
    "start": "96040",
    "end": "101360"
  },
  {
    "text": "of flow interrupted. There's the opportunity to \nempower a lot more people to get a lot more done.  ",
    "start": "101360",
    "end": "109640"
  },
  {
    "text": "Yeah. So kind of in that vein, you know, when I \nwas talking earlier today, I spoke about platform  ",
    "start": "109640",
    "end": "115159"
  },
  {
    "text": "engineering and kind of the important role that \ndevelopers can play in not just figuring out  ",
    "start": "115160",
    "end": "121200"
  },
  {
    "text": "best practices for their teams, but also how \nwe think about ensuring that those practices  ",
    "start": "121200",
    "end": "126920"
  },
  {
    "text": "make it out to other teams and that we're not \nreinventing the wheel a whole bunch of times. ",
    "start": "126920",
    "end": "132160"
  },
  {
    "text": "Sharing the knowledge that you have or what \nworked for you and might work for other teams? ",
    "start": "132920",
    "end": "139040"
  },
  {
    "text": "The knowledge and also the kind \nof know-how, the practical kind of   implications for what's our process, what's \nour tooling, as we were just discussing.",
    "start": "139600",
    "end": "149440"
  },
  {
    "text": "So one of the things that you mentioned \nin your talk was you build it, you run it,  ",
    "start": "149440",
    "end": "154480"
  },
  {
    "start": "150000",
    "end": "904000"
  },
  {
    "text": "which I found very interesting. In the \ncompany I worked at before I joined JetBrains,  ",
    "start": "154480",
    "end": "160040"
  },
  {
    "text": "our slogan was, \"You build it, you run it, \nyou love it.\" So, you know, in the DevOps way,  ",
    "start": "160040",
    "end": "165959"
  },
  {
    "text": "you build the code, you deploy it to production, \nbut you also own it in production. If you deploy  ",
    "start": "165960",
    "end": "175080"
  },
  {
    "text": "it and something goes wrong, then it's the \nteam's responsibility primarily to fix that,  ",
    "start": "175080",
    "end": "182480"
  },
  {
    "text": "which is very different from what was happening \nmaybe 10 years ago or more where there was a  ",
    "start": "183080",
    "end": "189960"
  },
  {
    "text": "project organization that would build features \nand then throw it over the wall to ops who would  ",
    "start": "189960",
    "end": "195400"
  },
  {
    "text": "be like, \"We don't wanna deploy anything. It's \nsort of running right now.\" So, do you have any  ",
    "start": "195400",
    "end": "202480"
  },
  {
    "text": "thoughts on that? You know, is that progress \nin the industry? How does that help developers  ",
    "start": "202480",
    "end": "209800"
  },
  {
    "text": "if they're also responsible for production?\nI loved the addition of \"you love it\" to the  ",
    "start": "209800",
    "end": "214880"
  },
  {
    "text": "end of it because I think, you know, for too many \nsoftware developers, they've kind of been forced   into on-call just as part of this, you know, \nyou must own your code. And I think one of the  ",
    "start": "214880",
    "end": "224640"
  },
  {
    "text": "things that I said was, you know, it doesn't make \nsense to make people do something and, like, to  ",
    "start": "224640",
    "end": "230360"
  },
  {
    "text": "give them the wrong tools and to poorly equip them \nand have them continue to be afraid of production   and afraid of what happens if they break things. \nLike, it's much better to empower people, and then  ",
    "start": "230360",
    "end": "239760"
  },
  {
    "text": "over time they will feel a sense of ownership for \nit and they'll develop operational excellence. But  ",
    "start": "239760",
    "end": "246480"
  },
  {
    "text": "as one of the people who came from the ops side, \nyou know I don't want to go back to the old days  ",
    "start": "246480",
    "end": "253000"
  },
  {
    "text": "of having my pager be on fire and not having the \nkind of control to do anything about it, aside  ",
    "start": "253000",
    "end": "258400"
  },
  {
    "text": "from saying, you know, \"No, you can't roll out new \nfeatures.\" No one likes saying no, that's really   what it boils down to. No one likes blocking or \ngatekeeping things from going out to production. ",
    "start": "258400",
    "end": "268520"
  },
  {
    "text": "Okay. But most people also don't \nlike, you know, having their pager   wake them up in the middle of the night.\nThe solution is to have your pager go off less  ",
    "start": "268520",
    "end": "275240"
  },
  {
    "text": "often, right? And, to do that, you kind of have to \nembrace, you know, making sure that your software  ",
    "start": "275240",
    "end": "283639"
  },
  {
    "text": "is well tested, is making progress towards \nreliability, is controllable, is predictable, and,  ",
    "start": "283640",
    "end": "292040"
  },
  {
    "text": "you know, yes, insert obligatory plug here, right? \nLike, you have to have adequate observability.  ",
    "start": "292040",
    "end": "297080"
  },
  {
    "text": "If you can't like, figure out what's going wrong, \nthen it's going to take you a lot longer to figure  ",
    "start": "297080",
    "end": "302280"
  },
  {
    "text": "it out, and it's going to be at 3 a.m. as opposed \nto, kind of, more seamlessly looking after your  ",
    "start": "302280",
    "end": "307639"
  },
  {
    "text": "software, being able to debug it if it breaks.\nOne of the interesting things though is my boss  ",
    "start": "307640",
    "end": "314520"
  },
  {
    "text": "has caught a lot of flack over the years for \nsaying, you know, \"The role of no Friday deploys   is bullshit.\" Am I allowed to say bullshit here? \nYes. Okay. Right. Like, so people have been like,  ",
    "start": "314520",
    "end": "323680"
  },
  {
    "text": "\"You know, oh, but my organization, you know, \ndoesn't deploy on Fridays because we respect   our developers' weekends or whatever,\" right? \nLike, the point that Charity is making, and that  ",
    "start": "323680",
    "end": "333479"
  },
  {
    "text": "I agree with, is that it doesn't matter what day \nof the week it is. You don't push code at times  ",
    "start": "333480",
    "end": "339720"
  },
  {
    "text": "unless you're able to follow it to production, \nright? Regardless of what day of the week it is,  ",
    "start": "339720",
    "end": "346240"
  },
  {
    "text": "I do not push code at 5 p.m. and then walk away \nand leave the pager on fire for my colleagues. ",
    "start": "346240",
    "end": "351639"
  },
  {
    "text": "Exactly. So, we also had discussions...at my \nprevious job, we had discussions on whether  ",
    "start": "351640",
    "end": "357720"
  },
  {
    "text": "we should or shouldn't deploy on production, \nand Charity was quoted on that. So the way I  ",
    "start": "357720",
    "end": "367080"
  },
  {
    "text": "interpret it is you have to make sure that you \nare confident enough that we can deploy this  ",
    "start": "367080",
    "end": "372199"
  },
  {
    "text": "to production. And if you are confident enough \nthat you can deploy this to production and that   you know none of the known things will go wrong, \nand that you're able to deal with what you said,  ",
    "start": "372200",
    "end": "383960"
  },
  {
    "text": "the unknown unknowns, because you have \nobservability in production and you'll   know if something went wrong and you have a way \nof dealing with that, you know, ultimately maybe  ",
    "start": "383960",
    "end": "393720"
  },
  {
    "text": "a revert if you have to. So, it means making sure \nthat you know what you're deploying to production  ",
    "start": "393720",
    "end": "401640"
  },
  {
    "text": "and that you feel in control of that and you feel \nlike you've adequately identified and mitigated  ",
    "start": "401640",
    "end": "407080"
  },
  {
    "text": "risks to be able to confidently deploy any day \nof the week. Of course, we've had issues where  ",
    "start": "407080",
    "end": "416639"
  },
  {
    "text": "we did a postmortem and one of the questions was, \nwhy did you deploy this on a Friday? So, this is  ",
    "start": "416640",
    "end": "422080"
  },
  {
    "text": "still a mindset that is in progress, I think.\nI think one other piece to this is about  ",
    "start": "422080",
    "end": "430599"
  },
  {
    "text": "keeping context, right? That it's not just \nabout can any one developer, you know,  ",
    "start": "430600",
    "end": "436440"
  },
  {
    "text": "understand what another developer wrote, but \nis there kind of this continuity of when it   rolls out that the person who wrote it has a \nsay on what's going on so that they are the  ",
    "start": "436440",
    "end": "446880"
  },
  {
    "text": "first one who's going to look after things if \nthe change did not have the intended effect. ",
    "start": "446880",
    "end": "453520"
  },
  {
    "text": "I've been on teams where the code ownership was \nvery much shared. And even though we didn't do a  ",
    "start": "453520",
    "end": "460599"
  },
  {
    "text": "lot of pair programming or ensemble programming, \nwe did do a lot of collaboration on code,  ",
    "start": "460600",
    "end": "466760"
  },
  {
    "text": "or sometimes...Every person on the \nteam brought their own, I don't know,  ",
    "start": "466760",
    "end": "472120"
  },
  {
    "text": "maybe niche interest or knowledge or background, \nand we would have conversations like, \"Oh, hey,  ",
    "start": "472120",
    "end": "477520"
  },
  {
    "text": "can you help me with this topic that you're good \nat?\" Or, you know, they would come to me with,  ",
    "start": "477520",
    "end": "482759"
  },
  {
    "text": "\"Hey, do you wanna spar with me on how we're gonna \ntest this thing and make sure that it's okay?\" So  ",
    "start": "482760",
    "end": "489120"
  },
  {
    "text": "very much the whole is better than the sum of \nthe parts. A kind of situation where we would  ",
    "start": "489120",
    "end": "495400"
  },
  {
    "text": "do code reviews and make sure that everybody at \nleast understood in general lines the code that's  ",
    "start": "495400",
    "end": "501320"
  },
  {
    "text": "going to production so that we are also able to \nsupport it if it breaks in the future. Of course,  ",
    "start": "501320",
    "end": "506680"
  },
  {
    "text": "unfortunately, sometimes bugs occur when the \nperson who wrote it is on holiday. So we were  ",
    "start": "506680",
    "end": "512520"
  },
  {
    "text": "very mindful of making sure that everybody \nhad sufficient knowledge of the code that we  ",
    "start": "512520",
    "end": "517800"
  },
  {
    "text": "were deploying and was able to support that code \nbuilding, running, and loving it. Or sometimes  ",
    "start": "517800",
    "end": "525360"
  },
  {
    "text": "when we weren't feeling the love, taking a step \nback and needed to show some love to this code  ",
    "start": "525360",
    "end": "533519"
  },
  {
    "text": "base so that we could confidently run it again.\nI love that. That metaphor is gonna stick with me  ",
    "start": "533520",
    "end": "540600"
  },
  {
    "text": "for a while. I think the other useful thing to \nconsider there is when you're doing those code  ",
    "start": "540600",
    "end": "547680"
  },
  {
    "text": "reviews, right, like, to ask those questions, \nright? Like, did you add sufficient testing or   did you add sufficient...? Right? Like, how \nam I going to observe this? And how is it  ",
    "start": "547680",
    "end": "556440"
  },
  {
    "text": "that someone who has no previous exposure \nto this could figure it out from first   principles by looking at the output of the data?\nSo some code comments that have happened over time  ",
    "start": "556440",
    "end": "567680"
  },
  {
    "text": "is we had a new developer who joined our team who \nwasn't a big fan of testing. So the first code  ",
    "start": "567680",
    "end": "574080"
  },
  {
    "text": "review, I was like, \"Maybe give your tests names \nthat cover what they're supposed to do just in  ",
    "start": "574080",
    "end": "580640"
  },
  {
    "text": "case they break in the future.\" You don't wanna on \ntop of, \"Hey, something broke,\" figure also out,  ",
    "start": "580640",
    "end": "586520"
  },
  {
    "text": "or also have to figure out what it's supposed to \nbe doing. If you can encapsulate that in the name,  ",
    "start": "586520",
    "end": "592600"
  },
  {
    "text": "like, you know, in this case, this should happen \nyou can use the given-when-then structure,  ",
    "start": "592600",
    "end": "597680"
  },
  {
    "text": "or actor-range-assert, which is the same thing. \nBut describe the intended behavior in the name  ",
    "start": "597680",
    "end": "602839"
  },
  {
    "text": "of a test that's gonna help you down the road if \nit ever breaks in the future. Things like that.  ",
    "start": "602840",
    "end": "609000"
  },
  {
    "text": "I would often just put code comments like, \ncan you please explain what's going on here   so that I know if anything breaks here what \nit's even about? And some of that would go,  ",
    "start": "609000",
    "end": "618880"
  },
  {
    "text": "like, I don't know, offline, we would just \nhave a conversation about what's going on  ",
    "start": "618880",
    "end": "623960"
  },
  {
    "text": "rather than go through code comments. That's \nwhat happens if you have a good functioning   team where you can just talk to each other.\nAlthough, I imagine that that's kind of  ",
    "start": "623960",
    "end": "634960"
  },
  {
    "text": "changed for a lot of companies over the \npast several years, given that you can't   necessarily sit over each other's shoulders.\nNot anymore. So when the pandemic hit, I was on  ",
    "start": "634960",
    "end": "645680"
  },
  {
    "text": "a team, on this specific team that I'm thinking \nof now, where we had the relationship where we  ",
    "start": "645680",
    "end": "652200"
  },
  {
    "text": "would just ping someone and be like, \"Hey, do \nyou wanna spar with me on this topic?\" And,   because we already had that dynamic, we kind of \ncontinued in a similar vein, of course, it wasn't  ",
    "start": "652200",
    "end": "661240"
  },
  {
    "text": "sitting at someone's physical desk anymore, it \nwas just going over Zoom, or whatever G-meets,  ",
    "start": "661240",
    "end": "667959"
  },
  {
    "text": "or whatever tool you talked...\nYou had kind of this reservoir   of psychological trust and safety built \nup with each other to be able to do that. ",
    "start": "667960",
    "end": "675839"
  },
  {
    "text": "We had the whole team feeling and knowing each \nother well and, you know, kind of making jokes  ",
    "start": "675840",
    "end": "681880"
  },
  {
    "text": "and...So, when you already have that basis, it \nbecomes much easier to work remotely then. And  ",
    "start": "681880",
    "end": "688040"
  },
  {
    "text": "of course, if you're onboarding two teams \nthat are new with people that you don't know,  ",
    "start": "688040",
    "end": "692920"
  },
  {
    "text": "getting there online is more difficult. But \nI've also worked on open source projects where  ",
    "start": "693480",
    "end": "700600"
  },
  {
    "text": "that also happened where I didn't meet the \npeople that I was working with until maybe  ",
    "start": "700600",
    "end": "706040"
  },
  {
    "text": "a year later when there was an event where we \nfinally met in person, which felt very '90s,  ",
    "start": "706040",
    "end": "711279"
  },
  {
    "text": "\"Oh, meeting my online friends in real life.\"\nWe did one of those about eight or nine months  ",
    "start": "711280",
    "end": "717720"
  },
  {
    "text": "ago at Honeycomb, and it was great to meet \ncolleagues that I hadn't had to meet in like two   years of working at the company together. Yeah. \nI think one of the other terms that I think I  ",
    "start": "717720",
    "end": "728920"
  },
  {
    "text": "picked out from what you said earlier that I might \nhave to adopt is the term ensemble programming   rather than mob programming. Mob programming \nalways just struck me as a little bit weird. ",
    "start": "728920",
    "end": "736800"
  },
  {
    "text": "Marit van Dijk:  It's not my term, I'm not sure \nwho came up with it, but yes, it's because the  ",
    "start": "736800",
    "end": "742000"
  },
  {
    "text": "mob sort of triggers the idea of people with \npitchforks and an angry mob, which isn't at  ",
    "start": "742000",
    "end": "748920"
  },
  {
    "text": "all what Woody Zuill intended, but someone came \nup with ensemble, which sounds so much nicer.",
    "start": "748920",
    "end": "756240"
  },
  {
    "text": "And collaborative, right? It is like an ensemble.\nYes. Which I don't make music with anyone,  ",
    "start": "756240",
    "end": "763040"
  },
  {
    "text": "but I kind of...That is a community effort where \neverybody has to do their part to make it sound  ",
    "start": "763040",
    "end": "769600"
  },
  {
    "text": "good, which I think is a good concept to keep \nin mind when building software, which, you know,  ",
    "start": "769600",
    "end": "776839"
  },
  {
    "text": "building software is a team sport, I think.\nAnd it has to be, otherwise, your code winds  ",
    "start": "776840",
    "end": "781880"
  },
  {
    "text": "up being not looked after if you go on vacation.\nOr people,  save tasks for you when you go on  ",
    "start": "781880",
    "end": "788200"
  },
  {
    "text": "your honeymoon and be like, \"Yeah, we \nsaved this job for you, even though we   said we would all do it. But, you know...\"\nKnowledge sharing also seems to be this  ",
    "start": "788200",
    "end": "796840"
  },
  {
    "text": "thing that, you know, different teams and \ndifferent practices on. Some teams wind   up writing kind of exhaustive documents down \ninto a wiki. Other teams, you know, rely on,  ",
    "start": "796840",
    "end": "805480"
  },
  {
    "text": "kind of, this shared state that exists in people's \nheads. But I think, either way, right, like, the   important bit is the communication of that state.\nYe I like to write stuff down because, you know,  ",
    "start": "805480",
    "end": "815680"
  },
  {
    "text": "I'm getting older, and remembering things is \ngetting harder. So, you know, for example,  ",
    "start": "815680",
    "end": "822320"
  },
  {
    "text": "if I join a new team, I see if their code base \nhas READMEs that explain, you know, here's how to  ",
    "start": "822320",
    "end": "827840"
  },
  {
    "text": "run this project, here's how to build it, how to \nrun it locally, how to run the tests. And either  ",
    "start": "827840",
    "end": "833280"
  },
  {
    "text": "there'll be like a standard way. So, for Java \nprojects, if you're using Maven, there'll be   Maven Clean Verify, if that works, great, I don't \nneed to write it down. If there's additional stuff  ",
    "start": "833280",
    "end": "842520"
  },
  {
    "text": "that I need to do, I write it down in the README \nbecause then next time I don't have to go looking   for it, I know where to find that information. \nAnd we had similar things for...So we had an  ",
    "start": "842520",
    "end": "853640"
  },
  {
    "text": "engineer of the day, so, one person on the team, \nwhich was rotating every day, who was responsible  ",
    "start": "853640",
    "end": "860640"
  },
  {
    "text": "for answering questions from other teams about our \napplications or answering questions from business  ",
    "start": "860640",
    "end": "866040"
  },
  {
    "text": "people about our applications, but also, like, \ndoing daily checks of the health of the system. ",
    "start": "866040",
    "end": "872320"
  },
  {
    "text": "We also wrote that down on a wiki page or a \nConfluence page just, you know, \"Look here if this  ",
    "start": "872320",
    "end": "878840"
  },
  {
    "text": "goes wrong.\" You know, there were standard things \nlike maybe...you know, sometimes it goes wrong,   we haven't quite had the time to figure out how to \nproperly fix it. Or you know, sometimes this just  ",
    "start": "878840",
    "end": "889320"
  },
  {
    "text": "happens, you know, just press this button, give \nit a little push, and now it'll work again. Just  ",
    "start": "889320",
    "end": "895320"
  },
  {
    "text": "writing that down helps because then you don't \nhave to remember in case it, you know, happens   again too far in the future where you don't \nremember the details. I found that very helpful.",
    "start": "895320",
    "end": "904000"
  },
  {
    "start": "904000",
    "end": "1326000"
  },
  {
    "text": "I love that your team did that because so \noften I've come on to teams where everything   is getting...we call it kind of the \"spraying the \nfire hose,\" right? Like, every single developer  ",
    "start": "904000",
    "end": "913680"
  },
  {
    "text": "gets wet, right? Like, you wind up with, \nyou know, all these interrupts that come in,   which mean that people can't do them...you \nknow, focus on their day job. Whereas if you,  ",
    "start": "913680",
    "end": "922280"
  },
  {
    "text": "you know, have the on-duty engineer, it kind of \nstreamlines that. And, you know, two teams can  ",
    "start": "922280",
    "end": "927440"
  },
  {
    "text": "have the same amount of toil, you know, whether \nit be [inaudible 00:15:25] work, whether it be   interrupts from other teams, but they can be in \nvastly different states of productivity depending  ",
    "start": "927440",
    "end": "936120"
  },
  {
    "text": "upon how that incoming workload is allocated.\nSo instead of every question interrupting all of  ",
    "start": "936120",
    "end": "942279"
  },
  {
    "text": "the developers, it's one person's responsibility \nto monitor the channel for incoming questions.  ",
    "start": "942280",
    "end": "947680"
  },
  {
    "text": "Of course, if that person happens to be in \na meeting and something urgent comes in,  ",
    "start": "947680",
    "end": "953080"
  },
  {
    "text": "like production is literally on fire, someone \nelse can jump on it, but we have one person   who's primary responsibility for the day or week, \nother teams would do it by week, it is to monitor  ",
    "start": "953080",
    "end": "964480"
  },
  {
    "text": "that channel and limiting interruptions, \nwhich is, you know, also gets in the way   of developer flow, as you mentioned earlier.\nI'm excited about your talk on managing software  ",
    "start": "964480",
    "end": "975280"
  },
  {
    "text": "dependencies. This is something that, at \nleast in my book, is a category of toil,  ",
    "start": "975280",
    "end": "980440"
  },
  {
    "text": "right? Like, it's a category of a \nthing that doesn't advance the system. But it's necessary to not degrade the system as \nwell. So it's one of those things where we know  ",
    "start": "980440",
    "end": "992760"
  },
  {
    "text": "we have to do it. We know we'd rather be doing \nsomething else. So if we can automate the pain   away, it makes our lives easier. I'll be talking \nabout different things that you can do to make  ",
    "start": "992760",
    "end": "1004360"
  },
  {
    "text": "that easier for developers and different tools \nthat you can use. It'll be geared more towards   the Java ecosystem because that's where I live. \nHowever, some of the categories of tools are also  ",
    "start": "1004360",
    "end": "1014840"
  },
  {
    "text": "available for other languages and ecosystems. So \nhopefully, even if you're not a Java or Kotlin  ",
    "start": "1014840",
    "end": "1020200"
  },
  {
    "text": "developer, you'll get something out of it.\nThere's this kind of interesting paradox of  ",
    "start": "1020200",
    "end": "1025439"
  },
  {
    "text": "automation situation going on, I think, in \nthat topic in that, you know, you see these,  ",
    "start": "1025440",
    "end": "1031240"
  },
  {
    "text": "like, scary warnings being like, you know, \"Hey, \nlike, if you automatically apply these updates,  ",
    "start": "1031240",
    "end": "1036920"
  },
  {
    "text": "you might pull in malware. Oh my goodness.\"\nOh, well, that's the other side. So, do I always   update to, like, the latest version of everything? \nNo, because then you run the risk of, you know,  ",
    "start": "1036920",
    "end": "1048480"
  },
  {
    "text": "automatically pulling in malicious software, \nbut also you shouldn't be on, like, the oldest,  ",
    "start": "1048480",
    "end": "1054720"
  },
  {
    "text": "oldest, oldest version, and you should at least \nupdate if there is a known vulnerability in your  ",
    "start": "1054720",
    "end": "1060880"
  },
  {
    "text": "particular version of a dependency that you have, \nand there is a new version available where they  ",
    "start": "1060880",
    "end": "1066040"
  },
  {
    "text": "fix that security vulnerability, then absolutely \nupgrade. Because, you know, once they are known,  ",
    "start": "1066040",
    "end": "1073080"
  },
  {
    "text": "then they become known attack factors, and if \nyou're working for any company that's even a  ",
    "start": "1073080",
    "end": "1078399"
  },
  {
    "text": "remotely interesting target...So I was working \nin an online retail platform in the Netherlands,  ",
    "start": "1078400",
    "end": "1084880"
  },
  {
    "text": "which makes you...Like, a well-known...In \nthe Netherlands, a well-known platform.  ",
    "start": "1084880",
    "end": "1088240"
  },
  {
    "text": "No one wants to get ransomed and \nhave their website held to hostage.  Exactly. So, not how you wanna end up in the \nnews, which is...you know. Which is a question  ",
    "start": "1090280",
    "end": "1100639"
  },
  {
    "text": "I learned from a tester friend. Like, you know, \nif you're thinking about what could go wrong when   building a new feature, one of the questions to \nask yourself is like, what is the worst possible  ",
    "start": "1100640",
    "end": "1109640"
  },
  {
    "text": "headline that could happen if we build this \nfeature or don't build this feature? And I think  ",
    "start": "1109640",
    "end": "1114920"
  },
  {
    "text": "that's something good to consider.\nIn the observability space,   we call that a premortem, where you're kind of \nenumerating your known and knowns, right? Like,  ",
    "start": "1114920",
    "end": "1123960"
  },
  {
    "text": "you're enumerating, \"Here are the risks that \nI think could go wrong. Now how am I going   to design and defend against that?\"\nI haven't heard that term before,  ",
    "start": "1123960",
    "end": "1131440"
  },
  {
    "text": "so I'm gonna take that and...\nAwesome. This is part of the fun of exchanging   these ideas from radically different spheres. \nSo, going back to the software update discussion,  ",
    "start": "1131440",
    "end": "1144080"
  },
  {
    "text": "I think one of the things that I was realizing \nas I was, you know, digesting this question of,   you know, how much time and energy do \nI spend on manually validating updates  ",
    "start": "1144080",
    "end": "1152159"
  },
  {
    "text": "versus automatically applying them? What are \nthe acceptable risks? And then I realized like,   if I'm manually clicking through and approving \nthese things, am I actually doing any meaningful  ",
    "start": "1152160",
    "end": "1161000"
  },
  {
    "text": "oversight or am I just saying yes, right?\nDo you know what this particular update entails to  ",
    "start": "1161000",
    "end": "1168680"
  },
  {
    "text": "properly evaluate it? But, I mean, the same can go \nfor code reviews as well. If you are not the one  ",
    "start": "1168680",
    "end": "1174240"
  },
  {
    "text": "actively developing this feature and thinking \nabout, like, the best way to implement it,   and should I use this pattern or that pattern, \nor this implementation or that implementation,  ",
    "start": "1174240",
    "end": "1183760"
  },
  {
    "text": "how much of that are you gonna get from reading \nthe code during a code review? And I guess the  ",
    "start": "1183760",
    "end": "1191800"
  },
  {
    "text": "same for doing the updates. Like, if you don't \nknow what the updates entail, how are you gonna  ",
    "start": "1191800",
    "end": "1196640"
  },
  {
    "text": "properly evaluate whether we can merge this \ncode or perform this update? So then again,  ",
    "start": "1197600",
    "end": "1205880"
  },
  {
    "text": "maybe pairing and ensembling can be a way to both \nshare the knowledge of how we're implementing this  ",
    "start": "1205880",
    "end": "1213240"
  },
  {
    "text": "feature, but also ask those questions upfront \nrather than, \"Hey, I've written this code,  ",
    "start": "1213240",
    "end": "1218440"
  },
  {
    "text": "I've done my very best...\" Because as you said \nin your talk as well, nobody wakes up and thinks,   \"Okay, what crappy code can I write today?\" \nHonestly, ever. So, you know, if you do that  ",
    "start": "1218440",
    "end": "1230320"
  },
  {
    "text": "upfront or even just think about like, how are we \ngonna implement this, and get all of the stupid  ",
    "start": "1230320",
    "end": "1235399"
  },
  {
    "text": "questions out of the way, then the solution \nthey end up with is gonna be better as well. ",
    "start": "1235400",
    "end": "1243040"
  },
  {
    "text": "I think there's also kind of this element of \nif two people have worked together very closely   for a while, right, like, they might wind up \nrubber-stamping each other's changes because  ",
    "start": "1243040",
    "end": "1250960"
  },
  {
    "text": "they both kind of have the shared model. But \nyou can use that sometimes as an opportunity   to bring in someone newer and have them do \na code review of something that...you know,  ",
    "start": "1250960",
    "end": "1259640"
  },
  {
    "text": "the person who wrote the code knows what they're \ndoing, right, this is fairly routine, but it's an   opportunity to bring someone new up to speed as \nto, like, you know, how does this work? What is  ",
    "start": "1259640",
    "end": "1268200"
  },
  {
    "text": "this doing? Even if it's...You know, the example \nthat I like to use here is infrastructure as code   changes, right? Like, if I'm changing from, you \nknow, trying to saturate our CPs at 80% to 85%,  ",
    "start": "1268200",
    "end": "1278520"
  },
  {
    "text": "right, like, that doesn't necessarily require \na lot of...You know, someone could easily,   like, look at a graph and agree that the same \ngraph that I'm looking at says what it says,  ",
    "start": "1278520",
    "end": "1287320"
  },
  {
    "text": "but it's an opportunity to bring in someone \nnew and teach them and show them how it works.  Yeah. So the whole infrastructure as code is \nwhere I'm maybe also lacking in knowledge.  ",
    "start": "1287320",
    "end": "1296679"
  },
  {
    "text": "So those would be very hard for me to \nevaluate because sometimes, you know,  ",
    "start": "1296680",
    "end": "1302800"
  },
  {
    "text": "you have this big YAML file, you have all \nof these properties. I as a developer don't   necessarily understand the impact of, you know, \nparticular settings or tweaking them or whatnot.  ",
    "start": "1302800",
    "end": "1314640"
  },
  {
    "text": "And that's where maybe having dedicated teams \nor dedicated people who have that knowledge who  ",
    "start": "1314640",
    "end": "1321280"
  },
  {
    "text": "can help the developers understand that or \nwhat works for their particular situation. ",
    "start": "1321280",
    "end": "1326160"
  },
  {
    "start": "1326000",
    "end": "1817000"
  },
  {
    "text": "You mentioned some of that regarding \nSREs. So, do you have some examples  ",
    "start": "1327200",
    "end": "1333639"
  },
  {
    "text": "of how SRE teams can help development teams?\nThis is an evolving topic because there are  ",
    "start": "1333640",
    "end": "1340640"
  },
  {
    "text": "many different models for practicing SRE. The site \nreliability workbook by Google, the kind of second  ",
    "start": "1340640",
    "end": "1349560"
  },
  {
    "text": "Google SRE book goes into some detail as to models \nthat people have tried. So the original Google  ",
    "start": "1349560",
    "end": "1357200"
  },
  {
    "text": "model was an SRE team, essentially an operations \nteam that uses software and is comprised of at  ",
    "start": "1357200",
    "end": "1363760"
  },
  {
    "text": "least half of software developers, but it still \nvery much is the team that owns production. And  ",
    "start": "1363760",
    "end": "1368960"
  },
  {
    "text": "there's a minimal degree of kind of shared \nresponsibility with the software development   team. So, it's kind of how that started. But there \nare other models like embedded SRE where you say,  ",
    "start": "1368960",
    "end": "1381640"
  },
  {
    "text": "you know what, you have a collection of SREs, \nyou just spread the SREs out. You put, like,   one or two on each software development team. \nAnd then there's kind of the consultative SRE  ",
    "start": "1381640",
    "end": "1391120"
  },
  {
    "text": "model where every team is responsible for its \nproduction, but you have SREs who are available  ",
    "start": "1391120",
    "end": "1396480"
  },
  {
    "text": "to answer questions, and that's kind of the \ngenesis of where platform teams come from.  I think it's kind of what can you learn from \nconsulting to kind of give people better practices  ",
    "start": "1396480",
    "end": "1404600"
  },
  {
    "text": "so that you have to answer fewer questions about \nwhat the right way to do things is. But yeah, I  ",
    "start": "1404600",
    "end": "1410120"
  },
  {
    "text": "think the, you know, SREs running the system soup \nto nuts is not a sustainable model, and it kind  ",
    "start": "1410120",
    "end": "1418360"
  },
  {
    "text": "of recreates a lot of those pathologies of, like, \nyou know, knowledge being divorced, of teams not  ",
    "start": "1418360",
    "end": "1424160"
  },
  {
    "text": "having sufficient kinda visibility into the blast \nradius of their changes. The reason why I don't  ",
    "start": "1424160",
    "end": "1431200"
  },
  {
    "text": "particularly love SRE is that you can very easily \nwind up having those one or two people be kind of  ",
    "start": "1431200",
    "end": "1436880"
  },
  {
    "text": "the focal point for all of the operations-focused \nwork of that team. It doesn't percolate as well   to the rest of the team, and then they're...\nBecause you have one dedicated person who is doing  ",
    "start": "1436880",
    "end": "1445640"
  },
  {
    "text": "it, so they might as well be doing it somewhere \nelse, maybe because they're not necessarily   sharing their knowledge with the team, right?\nOr at least it's spreading out more slowly. So,  ",
    "start": "1445640",
    "end": "1455000"
  },
  {
    "text": "you know, those teams do work in that, you \nknow, the SRE is not the only person on call   at all time, so they certainly are the person, you \nknow, writing most of the automation. But yeah,  ",
    "start": "1455000",
    "end": "1463800"
  },
  {
    "text": "I think it tends to work a little bit better when \nit's just, you know, better spread out. The other  ",
    "start": "1463800",
    "end": "1469400"
  },
  {
    "text": "thing about that also is the career development. \nSo, this is kind of the thing where...Facebook  ",
    "start": "1469400",
    "end": "1475800"
  },
  {
    "text": "was the company to kind of practice embedded SRE \nfirst, and they call it production engineering for  ",
    "start": "1476600",
    "end": "1482280"
  },
  {
    "text": "various historical reasons. However one of the \nchallenges that they had was that they wanted  ",
    "start": "1482280",
    "end": "1487600"
  },
  {
    "text": "to have the production engineers all report to \none set of managers. So you would be working for  ",
    "start": "1487600",
    "end": "1493760"
  },
  {
    "text": "one functional lead, but you would be reporting to \nsomeone in the reliability engineer organization,   right? Like, so that kind of creates all \nof these misaligned and weird incentives,  ",
    "start": "1493760",
    "end": "1502440"
  },
  {
    "text": "where your manager is not the person that \nyou're directly working with every day.  I've been in those situations and it is \nno fun. We had several different types  ",
    "start": "1502440",
    "end": "1514160"
  },
  {
    "text": "of platform teams where we had one team that was \nresponsible for, kind of, our internal framework,  ",
    "start": "1514160",
    "end": "1521160"
  },
  {
    "text": "which was spring or spring boot wrapped with \nother dependencies that you'd need to build  ",
    "start": "1521160",
    "end": "1526960"
  },
  {
    "text": "applications in our landscape who were...you \nknow, they spent their time doing that. They  ",
    "start": "1526960",
    "end": "1533919"
  },
  {
    "text": "wrote great documentation also on how to migrate \nto newer versions what to look for and what the  ",
    "start": "1533920",
    "end": "1540760"
  },
  {
    "text": "impact was. And they were very available for \nquestions. And then we had maybe platform teams  ",
    "start": "1540760",
    "end": "1546880"
  },
  {
    "text": "that helped with moving to the cloud and running \napplications on the cloud. And we had, like, a  ",
    "start": "1546880",
    "end": "1552720"
  },
  {
    "text": "custom in-between kind of system. You asked about \nwho's using the console to configure their cloud  ",
    "start": "1552720",
    "end": "1559440"
  },
  {
    "text": "stuff or who's keeping it in their code base.\nSo, we had it in our code base, but there was   a way to also run the configuration elsewhere. And \nthat was the part where I was always confused. I'm  ",
    "start": "1559440",
    "end": "1572320"
  },
  {
    "text": "not too sure about the changes that I'm making and \nwhat their impact is. And then if the people who  ",
    "start": "1572320",
    "end": "1577679"
  },
  {
    "text": "do know have limited availability and don't \nhave the time to help all of the developers  ",
    "start": "1577680",
    "end": "1582480"
  },
  {
    "text": "properly understand that, that's where you get \na bit of friction. Do you have tips maybe for  ",
    "start": "1583000",
    "end": "1589640"
  },
  {
    "text": "how to deal with that from a developer side?\nI think that it's really important for people  ",
    "start": "1589640",
    "end": "1597040"
  },
  {
    "text": "to make sure that there is a sensible default \nway of doing things. And one of the interesting  ",
    "start": "1597040",
    "end": "1606920"
  },
  {
    "text": "points of feedback that comes back is when \nthose defaults don't work for people, right,   like, then you find people who want to, \nyou know, break the glass and press the  ",
    "start": "1606920",
    "end": "1616920"
  },
  {
    "text": "button. And that's an opportunity to say, you \nknow, either we need to change the tooling to   accommodate this use case or, you know, this is \nsufficiently off the beaten path that, you know,  ",
    "start": "1616920",
    "end": "1626960"
  },
  {
    "text": "that team should go off and do things their way.\nIt's when you have that situation that you're  ",
    "start": "1626960",
    "end": "1635880"
  },
  {
    "text": "describing you need to go off the beaten \npath and you're not sure, like, what to do,  ",
    "start": "1635880",
    "end": "1641360"
  },
  {
    "text": "right, like, that's a sign that the platform is \nprobably not providing sufficient guidance or  ",
    "start": "1642120",
    "end": "1647760"
  },
  {
    "text": "is not capturing a key use case where people who \nhave an idea of something that they have a good  ",
    "start": "1647760",
    "end": "1655600"
  },
  {
    "text": "reason to do and don't have kind of a imagine \nthey want to do it. I think that's a sign of,  ",
    "start": "1655600",
    "end": "1661919"
  },
  {
    "text": "okay, we need to design for that use case. You \nknow, assuming it comes up, like, a couple of   times. If it's just a one-off, then, you know, \nthat's just a one-off. But more of the time I  ",
    "start": "1661920",
    "end": "1670720"
  },
  {
    "text": "tend to see...Oh, here's an example for you.\nWe migrated most of our applications to run  ",
    "start": "1670720",
    "end": "1682360"
  },
  {
    "text": "on top of Kubernetes. We just finished \nthat migration a couple of months ago,  ",
    "start": "1682360",
    "end": "1688480"
  },
  {
    "text": "but one of the applications we knew could not run \nin the traditional Kubernetes deployment model  ",
    "start": "1688480",
    "end": "1695640"
  },
  {
    "text": "because it was stateful, it had pairs of workers, \none of which had to be up at any time. So, that  ",
    "start": "1695640",
    "end": "1701600"
  },
  {
    "text": "was a situation of, \"Okay, the standard patterns \nof, you know, just create a Helm chart, you know,  ",
    "start": "1701600",
    "end": "1707039"
  },
  {
    "text": "just use a deployment,\" that was just not going to \nwork. So that team knew that they had to build out  ",
    "start": "1707040",
    "end": "1712920"
  },
  {
    "text": "their custom operator, that was what was going \nto be needed to manage the individual pods. ",
    "start": "1712920",
    "end": "1721400"
  },
  {
    "text": "I'm also...I'm sitting here giggling because \nyou hit the nail on the head. I think I ended   up in several situations where, you know, the \nstandard way of doing things that worked for 80%,  ",
    "start": "1721400",
    "end": "1731080"
  },
  {
    "text": "90% of the cases and 80%, 90% of the teams and \ncode bases, which is definitely what they were  ",
    "start": "1731080",
    "end": "1738679"
  },
  {
    "text": "aiming for, like, automate the basic standard \nuse cases. And then I ended up in teams where  ",
    "start": "1738680",
    "end": "1745040"
  },
  {
    "text": "we had a slightly different use case that wasn't \npart of that 80%, 90%. And then you end up having  ",
    "start": "1745040",
    "end": "1752880"
  },
  {
    "text": "to figure out how to deal with that and with, you \nknow, the options provided by the cloud platform  ",
    "start": "1752880",
    "end": "1758480"
  },
  {
    "text": "that we were using, and also the ones that were \nallowed by the IT department or architects,  ",
    "start": "1758480",
    "end": "1764600"
  },
  {
    "text": "or whatnot. But yeah, then definitely you need \nmore help from the SRE teams or platform teams  ",
    "start": "1764600",
    "end": "1770320"
  },
  {
    "text": "on how to cover that particular use case. And \nit could be like, we are not gonna include   it in our basic or our standard configuration, \nand we need to go look for something else, so. ",
    "start": "1770320",
    "end": "1782800"
  },
  {
    "text": "From the perspective of the platform or SRE \nowner, right, like, that is a useful signal as   to which teams I should spend the most time with, \nright? Like, it's those that are kind of pushing  ",
    "start": "1784160",
    "end": "1792280"
  },
  {
    "text": "the limits of what's possible on the platform.\nI understand why, you know, okay, so we have  ",
    "start": "1792280",
    "end": "1800120"
  },
  {
    "text": "maybe 100 teams, this solution works for 90% \nof them, and then we have, like, these 3 teams  ",
    "start": "1800120",
    "end": "1806600"
  },
  {
    "text": "and they need something else, do you incorporate \nthat into your platform and make it X amount times  ",
    "start": "1806600",
    "end": "1812440"
  },
  {
    "text": "to more complex or do you figure out something \nfor those teams who have a different use case?",
    "start": "1812440",
    "end": "1817720"
  },
  {
    "start": "1817000",
    "end": "1960000"
  },
  {
    "text": "This is such a wonderful question to ask, and \nit's one that I wish I had gotten to in my talk   because, like, it turns out running on a platform \nand writing the software for our platform,  ",
    "start": "1817720",
    "end": "1827640"
  },
  {
    "text": "congratulations, you are creating a product \nfor your internal developers. You need product  ",
    "start": "1827640",
    "end": "1832880"
  },
  {
    "text": "managers, and developer advocates, right? Like, \nit turns out you cannot just set loose about a  ",
    "start": "1832880",
    "end": "1838000"
  },
  {
    "text": "bunch of backend engineers and, you know, tell \nthem, \"You know, you're building a platform,   have fun,\" and then they'll build something \nthat's completely not end-usable. No one's  ",
    "start": "1838000",
    "end": "1844360"
  },
  {
    "text": "going to use it, right? Like, you have to do \nthose...You have to have user research to kind   of understand what are the tradeoffs. What are we \nbuilding? Who are we building it for? What's gonna  ",
    "start": "1844360",
    "end": "1852800"
  },
  {
    "text": "make sense? Because if you don't have a coherent \nproduct management strategy and kind of the input   gathering and the evangelism, like, your only \nlever there then is, kind of, fear of, you know,  ",
    "start": "1852800",
    "end": "1864560"
  },
  {
    "text": "you're going up against the architects rather \nthan building the best thing for your developers. ",
    "start": "1864560",
    "end": "1869480"
  },
  {
    "text": "To do that, you have to understand their needs \nand what their use cases are, etc. And it means,  ",
    "start": "1870080",
    "end": "1876240"
  },
  {
    "text": "again, talking to people because software \ndevelopment is a team sport. So, yeah. ",
    "start": "1876240",
    "end": "1881800"
  },
  {
    "text": "It's really interesting how software \ndevelopers have this reputation, you know,   stereotypically as people who don't like to \ntalk to other people and want to sit in their  ",
    "start": "1881800",
    "end": "1889680"
  },
  {
    "text": "cubicle and write code all day. And like, \nI think that is the antithesis of, like,   what makes for someone who's a great software \ndeveloper. A great software developer is someone  ",
    "start": "1889680",
    "end": "1896960"
  },
  {
    "text": "who communicates well about what they're doing.\nYes. But it's almost as if, you know,   we cultivated this stereotype and then that's what \nwe ended up with. So, maybe we need to cultivate a  ",
    "start": "1896960",
    "end": "1907360"
  },
  {
    "text": "new stereotype of developers who like talking to \nother developers and occasionally business people  ",
    "start": "1907360",
    "end": "1913400"
  },
  {
    "text": "and other people and can explain what we're doing.\nSo yes, kind of less of an arcane priesthood  ",
    "start": "1913400",
    "end": "1920760"
  },
  {
    "text": "as it were of people who understand \nthe code magic and those who don't,   right? Like, no, like, we're here to share it.\nI would much rather work with people who are also  ",
    "start": "1920760",
    "end": "1931559"
  },
  {
    "text": "able to communicate about what they're doing \nthan...You know, sometimes you need someone   to fix the really hard problems, but most of what \nwe're doing isn't rocket science. We're building,  ",
    "start": "1931560",
    "end": "1942000"
  },
  {
    "text": "well, in my case, web services. So, you \nknow, it's been done before. It helps if  ",
    "start": "1942000",
    "end": "1947920"
  },
  {
    "text": "you can explain what you're doing, talk to the \nother teams who are using your application,  ",
    "start": "1947920",
    "end": "1952960"
  },
  {
    "text": "talk to the business about what they need, and \nmake sure that you're building the right thing. ",
    "start": "1952960",
    "end": "1958039"
  },
  {
    "text": "Excellent. Do you have any parting \nthoughts before we wrap up?  It was a great conversation. Thanks so much. ",
    "start": "1959400",
    "end": "1965960"
  },
  {
    "start": "1960000",
    "end": "1986000"
  },
  {
    "text": "Yeah. Thank you for joining us and please \nwatch the talks from GOTO Copenhagen",
    "start": "1965960",
    "end": "1977039"
  }
]