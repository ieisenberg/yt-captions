[
  {
    "text": "all right can you guys hear me in the back everything good cool so as somebody already said the like the the",
    "start": "0",
    "end": "6420"
  },
  {
    "text": "presentation will be Fight Club themed if you've never seen Fight Club that's okay it's not really that important I",
    "start": "6420",
    "end": "11940"
  },
  {
    "text": "tried to phrase everything in there in kind of a way that made it a little bit funny but also I expect probably half",
    "start": "11940",
    "end": "18150"
  },
  {
    "text": "the room maybe has never seen it so it's not a prerequisite you still feel feel free to leave if you hate Fight Club",
    "start": "18150",
    "end": "23369"
  },
  {
    "text": "right now but it's not a prerequisite I'm gonna skip the credentials slide I",
    "start": "23369",
    "end": "29760"
  },
  {
    "text": "assume you guys can look me up if you want to I assume nobody really cares where I've worked or what I've done what you really want to know is how you can",
    "start": "29760",
    "end": "35040"
  },
  {
    "text": "create some better tests so when do we run our tests I don't know maybe some",
    "start": "35040",
    "end": "40050"
  },
  {
    "text": "people run them all the time with auto tests maybe some people run them only in the build as and never run them but a",
    "start": "40050",
    "end": "45750"
  },
  {
    "text": "place that we often run them is after we've just made some changes and it's about time to check in so that's what we're about to do we're about to check",
    "start": "45750",
    "end": "51360"
  },
  {
    "text": "in some code and we see that our tests are running and then we see this and that's not great but what we",
    "start": "51360",
    "end": "57840"
  },
  {
    "text": "actually see is this and the problem with all of this is that with failing tests you only speak using",
    "start": "57840",
    "end": "63120"
  },
  {
    "text": "profanity so what the changes that I made here were I have a movie domain object and then I have a movie test and",
    "start": "63120",
    "end": "69390"
  },
  {
    "text": "I've changed my movie domain object and then I changed my movie test and I ran",
    "start": "69390",
    "end": "74820"
  },
  {
    "text": "everything and everything was great customers should be happy I have new feature ready to put it in production",
    "start": "74820",
    "end": "80869"
  },
  {
    "text": "but then I ran the test and something failed and had what I thought was nothing to do with what I was working on",
    "start": "80869",
    "end": "86580"
  },
  {
    "text": "so now I'm pissed off because I have no choices this point I have zero choices I want to check in but I have to look at a",
    "start": "86580",
    "end": "92610"
  },
  {
    "text": "test that I didn't write that I didn't run that may or may not help me but I have no choice but to go work with it so",
    "start": "92610",
    "end": "99840"
  },
  {
    "text": "this is Bob and Bob has bad tests unfortunately Bob is also your teammate",
    "start": "99840",
    "end": "104990"
  },
  {
    "text": "Bob wants to do well Bob wants to help you write good code Bob wants to write tests that will allow you to refactor",
    "start": "104990",
    "end": "111090"
  },
  {
    "text": "your code base and maintain your code better but Bob doesn't know how to do that because bob is actually a pretty",
    "start": "111090",
    "end": "116490"
  },
  {
    "text": "good programmer that's why he passed your programming test to join your organization Bob knows how to write good code but he doesn't how to write good",
    "start": "116490",
    "end": "122159"
  },
  {
    "text": "tests and unfortunately Bob thinks they're the same thing Bob left you this test this test is not that complicated",
    "start": "122159",
    "end": "128700"
  },
  {
    "text": "but it's significantly more complicated than I would want to be left with Tess is currently failing it's not very",
    "start": "128700",
    "end": "135760"
  },
  {
    "text": "long but before we can really even get into it we have to already look at a loop who wants to look at a loop and a",
    "start": "135760",
    "end": "141070"
  },
  {
    "text": "test bob decided that he was going to dry our code out with a loop in his test so that's what we have and before we can",
    "start": "141070",
    "end": "146590"
  },
  {
    "text": "even really look at the meat of the test we need to figure out what we're looping through so we have customers like it's",
    "start": "146590",
    "end": "152140"
  },
  {
    "text": "not that complicated you know we know what that is or do we I mean at this point we don't we have no idea we have a",
    "start": "152140",
    "end": "158530"
  },
  {
    "text": "failing test and we know that we have customers we have no ability to look at the failing test and figure out what's",
    "start": "158530",
    "end": "164290"
  },
  {
    "text": "going on we have to rely on our IDE which gives us easy enough go to definition and cool we have customers",
    "start": "164290",
    "end": "171430"
  },
  {
    "text": "also not really that complicated there's nothing here that's absolutely terrible but we've already relied on the IDE to",
    "start": "171430",
    "end": "176920"
  },
  {
    "text": "take us somewhere to help us understand what's going on and now we have to rely on the IDE again take us somewhere else",
    "start": "176920",
    "end": "182340"
  },
  {
    "text": "because we don't know what a customer's is actually initialized to you it's initialized in this magic method given",
    "start": "182340",
    "end": "188920"
  },
  {
    "text": "to us by our test framework if we're comfortable with this magic method then that's great",
    "start": "188920",
    "end": "193960"
  },
  {
    "text": "but what if we're not what if we're pairing with someone and we're mentoring them and they say why is this magic",
    "start": "193960",
    "end": "199120"
  },
  {
    "text": "method get' run why don't i don't know because because this is the way we've been writing tests forever and nobody",
    "start": "199120",
    "end": "204640"
  },
  {
    "text": "stopped to say why so here we have a set up method and we're initializing the david customer and the john customer and",
    "start": "204640",
    "end": "211300"
  },
  {
    "text": "the Patt customer and the Steve customer and then we're putting them all on the customers array which you already know",
    "start": "211300",
    "end": "216640"
  },
  {
    "text": "that's what we're going to use in order to loop through so we're not gonna look at the object mother because let's not",
    "start": "216640",
    "end": "223209"
  },
  {
    "text": "dig that far down even though that's kind of the point of this why do we have to dig that far down but we only have 50",
    "start": "223209",
    "end": "229000"
  },
  {
    "text": "minutes so back to the failing test looping through customer instances we can finally get to our expected value so",
    "start": "229000",
    "end": "236200"
  },
  {
    "text": "we have a failing test we've already had to navigate to a Java field and to some special helper method just to get",
    "start": "236200",
    "end": "242140"
  },
  {
    "text": "through the loop and now we're at our expected value and we of course can't tell what our expected value is either",
    "start": "242140",
    "end": "248650"
  },
  {
    "text": "because it's using another helper method so if we're gonna go to a helper method we have to first initialize the args",
    "start": "248650",
    "end": "254770"
  },
  {
    "text": "step one is just figuring out what that argument is again we have to use another go-to definition we can't work with in",
    "start": "254770",
    "end": "261190"
  },
  {
    "text": "this test I mean I hope this is painful for you guys looking looking at as it is for me presenting it these please",
    "start": "261190",
    "end": "267010"
  },
  {
    "text": "so terrible I I rehearse this presentation in front of my wife she's like can you maybe not give this",
    "start": "267010",
    "end": "273280"
  },
  {
    "text": "presentation so angry it's like a kid's recess make me angry so sorry I'm",
    "start": "273280",
    "end": "280120"
  },
  {
    "text": "probably gonna be angry for a little while we have another helper method that we have to go into this helper method",
    "start": "280120",
    "end": "286390"
  },
  {
    "text": "doesn't even do anything that interesting it's doing a little formatting it's taking some strings and rental objects",
    "start": "286390",
    "end": "292000"
  },
  {
    "text": "and it's just putting everything together and we don't even have time to talk about the law of Demeter violation because these tests are so bad so we",
    "start": "292000",
    "end": "298120"
  },
  {
    "text": "just I mean imagine we're working with these tests we just want to check in our movie change and we're down inside two",
    "start": "298120",
    "end": "303430"
  },
  {
    "text": "helper methods looking at a law of Demeter violation basically thinking like alright I might need to look for a",
    "start": "303430",
    "end": "309130"
  },
  {
    "text": "new job I can't work like this that's what I would be thinking anyways so we'll just ignore that for now and",
    "start": "309130",
    "end": "314740"
  },
  {
    "text": "we'll understand that rental info loops over rentals returns a string describing a rental it's not that bad I guess back",
    "start": "314740",
    "end": "323620"
  },
  {
    "text": "to the statement what's next well we have a customer object that we're looping through okay that's not that bad",
    "start": "323620",
    "end": "328750"
  },
  {
    "text": "I mean ignoring the fact that we have no idea for Dave patter Steve but at least we know what this object type is even if",
    "start": "328750",
    "end": "335470"
  },
  {
    "text": "we don't know what instance it is and finally we can get to a concatenated string that's not bad",
    "start": "335470",
    "end": "343120"
  },
  {
    "text": "ish so we go into the expect statement and what does it do it takes the customer takes a few strings and it",
    "start": "343120",
    "end": "350380"
  },
  {
    "text": "format's everything together that's it all it took was all of this code for us",
    "start": "350380",
    "end": "357040"
  },
  {
    "text": "to understand what's going on in that test we had a failing test specifically the movie class changed the movie test",
    "start": "357040",
    "end": "362770"
  },
  {
    "text": "also changed everything worked we knew that our code was working but instead of being able to check in we had to look",
    "start": "362770",
    "end": "369010"
  },
  {
    "text": "through all of this code that's for a customer class does anybody in here",
    "start": "369010",
    "end": "374980"
  },
  {
    "text": "think that's a reasonable thing we shouldn't have to do all that and there's a better way but before we get",
    "start": "374980",
    "end": "382000"
  },
  {
    "text": "into the better way we have to say we'll all right so Bob wants to help us Bob wants us to write better tests Bob Bob",
    "start": "382000",
    "end": "388540"
  },
  {
    "text": "wants to write better tests for us he wants to help us write maintainable code what can we say about what Bob's done well he's set up it's commonly approved",
    "start": "388540",
    "end": "396100"
  },
  {
    "text": "in our industry sadly but you can't really blame Bob for that he read that he should dry his coat out was set",
    "start": "396100",
    "end": "401920"
  },
  {
    "text": "up and Bob dried his coat out and he used object mother so he kind of hid away his object creation somewhere again",
    "start": "401920",
    "end": "407440"
  },
  {
    "text": "just applying dry maybe that's good maybe it's not I'm not here to actually tell you that it is good or it's not I'm",
    "start": "407440",
    "end": "412930"
  },
  {
    "text": "here to ask you why are you doing this so you just blindly applying it or is there a better way so I'd say where it",
    "start": "412930",
    "end": "419110"
  },
  {
    "text": "fails is I would like to quickly understand this test so I'm checking in I want to quickly understand what's",
    "start": "419110",
    "end": "425260"
  },
  {
    "text": "going on with this failing test maybe that failure was actually helpful but going through all of those steps was not",
    "start": "425260",
    "end": "430840"
  },
  {
    "text": "helpful specifically so I had to find the statement test to start with then I had to find the definition of customers",
    "start": "430840",
    "end": "437020"
  },
  {
    "text": "that were iterating through then find the assignment to customers then had to digest the setup then I had to look at",
    "start": "437020",
    "end": "443050"
  },
  {
    "text": "an object mother which I didn't even bother to take you guys through then I had to digest each different customer",
    "start": "443050",
    "end": "448750"
  },
  {
    "text": "instance creation within the object mother I had to do all of that before I understood the first line of the failing",
    "start": "448750",
    "end": "455590"
  },
  {
    "text": "test that is entirely too much complexity for you to have to look through to understand the first line of",
    "start": "455590",
    "end": "461050"
  },
  {
    "text": "a failing test then you have to digest the expected value being created by calling a method with a string a",
    "start": "461050",
    "end": "466600"
  },
  {
    "text": "customer the result of calling rental info to string instances and blah blah blah find the rental info method",
    "start": "466600",
    "end": "473050"
  },
  {
    "text": "determine what its value is digest the rental info method it's creating a string and returning data and now you've",
    "start": "473050",
    "end": "479230"
  },
  {
    "text": "mentally resolved the artist to expect statement you had to do all of that 10 steps 10 steps to simply understand",
    "start": "479230",
    "end": "485890"
  },
  {
    "text": "what's going on in this test and 0 characters that you have read so far help you in production that's zero value",
    "start": "485890",
    "end": "492670"
  },
  {
    "text": "to your customers zero value to your business you have done nothing but resolve the expected value of a test if",
    "start": "492670",
    "end": "500620"
  },
  {
    "text": "this were Fight Club this would be the point in which he says I want you to hit me as hard as you can",
    "start": "500620",
    "end": "505949"
  },
  {
    "text": "no one character that you've digested will run in production not one who spends all this time were eight minutes",
    "start": "506070",
    "end": "512860"
  },
  {
    "text": "into the presentation not looking at one character that would ever be run and help the business in any way aside from",
    "start": "512860",
    "end": "518760"
  },
  {
    "text": "regression it's also practically impossible to fix this test without some",
    "start": "518760",
    "end": "524380"
  },
  {
    "text": "more code more programming how do you how do you know what's failing and what's passing which is also helpful",
    "start": "524380",
    "end": "530080"
  },
  {
    "text": "without looking at the loop and and either putting a debug statement in there to know where things break or",
    "start": "530080",
    "end": "536590"
  },
  {
    "text": "without putting some console.writeline in there you have to write more code or rely on the editor to give you a",
    "start": "536590",
    "end": "542170"
  },
  {
    "text": "breakpoint or something you can't even use this test to figure out what's going wrong so why why do we",
    "start": "542170",
    "end": "548830"
  },
  {
    "text": "do this why do we put ourselves through this we we used to write code without tests and then somebody said hey do you",
    "start": "548830",
    "end": "555340"
  },
  {
    "text": "know you can write these tests and we'll give you confidence and you started going home at night not thinking like everything is going to fall apart and",
    "start": "555340",
    "end": "561430"
  },
  {
    "text": "they're gonna fire me started going home with some confidence and that was great but we just apply the traditional",
    "start": "561430",
    "end": "567070"
  },
  {
    "text": "programming patterns to our tests and we never step back and say is this code different what's different about the",
    "start": "567070",
    "end": "572620"
  },
  {
    "text": "code is is a test really the same thing as production should we dry it in the same way what's our motivation for doing",
    "start": "572620",
    "end": "578140"
  },
  {
    "text": "all of these things we write tests we don't need with time we don't have to satisfy people we don't like what if we",
    "start": "578140",
    "end": "587380"
  },
  {
    "text": "took a step back this is the happy place from a Fight Club what if we took a step back to our happy place where we had no",
    "start": "587380",
    "end": "593290"
  },
  {
    "text": "code and that's all of our happy place when we have no code to worry about take a step back and we say alright what can",
    "start": "593290",
    "end": "599740"
  },
  {
    "text": "we write here to actually help the business every line of code has an ROI a return on investment we only really want",
    "start": "599740",
    "end": "606790"
  },
  {
    "text": "to care about the stuff that's valuable the stuff that actually brings the business some type of value brings the",
    "start": "606790",
    "end": "612610"
  },
  {
    "text": "team some type of value so what if we took a step back and we said you know maybe drying everything in the exact",
    "start": "612610",
    "end": "619090"
  },
  {
    "text": "same way is not the appropriate solution maybe I need to look at my tests in a completely different way so again it",
    "start": "619090",
    "end": "626770"
  },
  {
    "text": "comes down to why what motivates us so let's say for the sake of the talk that what motivates Bob is he wants to enable",
    "start": "626770",
    "end": "632890"
  },
  {
    "text": "refactoring wants immediate feedback and he wants to break the problem up into smaller pieces I would say Bob succeeded",
    "start": "632890",
    "end": "639370"
  },
  {
    "text": "in enabling refactoring Bob gave us some tests that cover the domain and I can change things around and verify that",
    "start": "639370",
    "end": "645460"
  },
  {
    "text": "everything works I get the immediate feedback of the tests fantastic Bob failed absolutely",
    "start": "645460",
    "end": "651010"
  },
  {
    "text": "terribly at breaking up the problem into smaller pieces we have so many things tied together in this test that it took",
    "start": "651010",
    "end": "656920"
  },
  {
    "text": "us ten steps to even figure out the expected value that's a ridiculous amount of coupling Josh Graham you may",
    "start": "656920",
    "end": "664930"
  },
  {
    "text": "know that's his Twitter handle I once send a hit up I once said to him why are you writing",
    "start": "664930",
    "end": "670750"
  },
  {
    "text": "tests why do you even bother write tests and he said I like he said I to create a tiny universe where software exists to",
    "start": "670750",
    "end": "677800"
  },
  {
    "text": "do one thing and do it well I think that's my favorite explanation for why",
    "start": "677800",
    "end": "684310"
  },
  {
    "text": "you write tests you want a tiny tiny universe to work within and you want confidence that whatever you're testing",
    "start": "684310",
    "end": "690550"
  },
  {
    "text": "works as you would expect I mean software systems are large they're complex there's no way that we",
    "start": "690550",
    "end": "695829"
  },
  {
    "text": "can really get confidence around the whole thing with a couple different tests we need to break things down and",
    "start": "695829",
    "end": "701079"
  },
  {
    "text": "test them individually so we're gonna keep that in mind and we're gonna think about how we can still have a tiny",
    "start": "701079",
    "end": "706300"
  },
  {
    "text": "universe but also we can apply dry it's not like we should just throw dry out the window it's valuable but how does it",
    "start": "706300",
    "end": "712510"
  },
  {
    "text": "apply to testing it's maybe not the same as production code so these tests were dry of course we use the helper method",
    "start": "712510",
    "end": "718690"
  },
  {
    "text": "and we repeated as few characters as possible thank God because characters weren't on sale so we had to save as",
    "start": "718690",
    "end": "725440"
  },
  {
    "text": "many as we could did you feel that the album does anyone here feel that the application of DRI helped you quickly",
    "start": "725440",
    "end": "731949"
  },
  {
    "text": "understand the failing test I keep waiting for someone to say yes whenever",
    "start": "731949",
    "end": "737529"
  },
  {
    "text": "I ask that question I mean there must be someone and it's ok that's actually part of this there are three levels that that",
    "start": "737529",
    "end": "743529"
  },
  {
    "text": "you can apply dry and some people want to apply it at all three and that's great if you ask yourself why you're",
    "start": "743529",
    "end": "748600"
  },
  {
    "text": "writing a test and why you're drying it the way that you are and if you come up with good reasons for all of it maybe",
    "start": "748600",
    "end": "753910"
  },
  {
    "text": "you're a two-person team maybe both of you like tests written in that way maybe you don't mind looking through all of",
    "start": "753910",
    "end": "759070"
  },
  {
    "text": "that code before you understand what's going on a test that's fine as long as you consciously make that decision go",
    "start": "759070",
    "end": "764769"
  },
  {
    "text": "for it I think there's a better way personally I strongly suggest you change your approach I recommend applying dry",
    "start": "764769",
    "end": "770740"
  },
  {
    "text": "at the suite level so globally let's say that you want a customer use the test",
    "start": "770740",
    "end": "776260"
  },
  {
    "text": "builder pattern and create your customers with test builders let's say you want to move you use the test builder pattern okay great now in my",
    "start": "776260",
    "end": "782079"
  },
  {
    "text": "customer tests I can I can follow this builder pattern it's a global reuse dried up fantastic I want a movie same",
    "start": "782079",
    "end": "789760"
  },
  {
    "text": "thing so I have this common understanding of code that's going to be used across the test suite instead of",
    "start": "789760",
    "end": "795670"
  },
  {
    "text": "just at the fixture level the problem with Bob's tests were all of his application drivers at the fixture level that rental",
    "start": "795670",
    "end": "801580"
  },
  {
    "text": "info method is never gonna help them elsewhere the expect statement is definitely never going to help them elsewhere so we have all of these helper",
    "start": "801580",
    "end": "807910"
  },
  {
    "text": "methods that aren't really helper methods they're just kind of like hiding your in the closet I'm just gonna put these characters over here and",
    "start": "807910",
    "end": "814420"
  },
  {
    "text": "pretend like everything's fine but it's not fine you've made things worse for your team obviously I don't think I",
    "start": "814420",
    "end": "820900"
  },
  {
    "text": "really even need to get into drying cuz of the test level that just makes sense you want to dry things within an individual test and you want to dry them",
    "start": "820900",
    "end": "827440"
  },
  {
    "text": "throughout the whole suite but maybe don't try to group your tests together I mean so Pat's a customer Steve's a",
    "start": "827440",
    "end": "833110"
  },
  {
    "text": "customer Jon's a customer and yet none of those tests collaborated in any way but all of those tests carried the",
    "start": "833110",
    "end": "839080"
  },
  {
    "text": "conceptual overhead of creating all three customers so you've created all three never used them in any way",
    "start": "839080",
    "end": "844870"
  },
  {
    "text": "whatsoever but you've required maintainer to try to understand that to verify that they're never used it's a",
    "start": "844870",
    "end": "851380"
  },
  {
    "text": "waste it's a better way in my opinion I would approach same tests I would say don't test diverse customers at the same",
    "start": "851380",
    "end": "858100"
  },
  {
    "text": "time if you're not going to test diverse customers then don't create them at the same time don't extract single methods",
    "start": "858100",
    "end": "864970"
  },
  {
    "text": "for a single string return value do create data where it's needed not part of some special framework method there's",
    "start": "864970",
    "end": "871600"
  },
  {
    "text": "no rule that says you have to use setup just in my opinion to stop using completely if you enjoy acronyms and",
    "start": "871600",
    "end": "878920"
  },
  {
    "text": "what programmer doesn't I think you should write tests that are dry at the",
    "start": "878920",
    "end": "884350"
  },
  {
    "text": "suite level and dry within the test but focus on the test itself being damp a descriptive and maintainable phrase or a",
    "start": "884350",
    "end": "892000"
  },
  {
    "text": "descriptive and maintainable procedure whatever you're looking for you want something that you can go to this test",
    "start": "892000",
    "end": "897430"
  },
  {
    "text": "is failing okay ideally everything you need is right there within that test we don't have to rely on an IDE we don't",
    "start": "897430",
    "end": "903459"
  },
  {
    "text": "have to jump around and go anywhere else everything that's failing is right there the next best scenario is everything",
    "start": "903459",
    "end": "908500"
  },
  {
    "text": "that's failing is here except there's a couple global patterns in here that go in this may be factory that creates all",
    "start": "908500",
    "end": "914050"
  },
  {
    "text": "of our objects whatever there's some type of global pattern that you use but it's something that when you go to it's not completely unfamiliar to you it's",
    "start": "914050",
    "end": "920410"
  },
  {
    "text": "not foreign it's something that you've seen before it's a pattern that you already understand within the test suite so how do we go about doing this for Bob",
    "start": "920410",
    "end": "927040"
  },
  {
    "text": "the first thing we do is we replace the loop with the individual test I mean this is as obvious as it gets so we",
    "start": "927040",
    "end": "932740"
  },
  {
    "text": "break the loop break these customers out of the loop and we have more characters here it's fine",
    "start": "932740",
    "end": "938980"
  },
  {
    "text": "each individual test is now become simplified now when things fail we actually have results we can use instead",
    "start": "938980",
    "end": "944920"
  },
  {
    "text": "of one loop with one failure we have three failures and we have one passing test which also gives us some",
    "start": "944920",
    "end": "950110"
  },
  {
    "text": "information on where things have gone wrong so we know which which customers caused problems we know which customers",
    "start": "950110",
    "end": "955720"
  },
  {
    "text": "are not causing problems creating all of this is what some would call duplication I expect there are many people in the",
    "start": "955720",
    "end": "962470"
  },
  {
    "text": "room that probably feel uncomfortable with all of this that's what people would consider duplication but this is",
    "start": "962470",
    "end": "968710"
  },
  {
    "text": "just step one it's only after we've duplicated everything that we're free to dry anything so the next thing you want",
    "start": "968710",
    "end": "976000"
  },
  {
    "text": "to do is expect literals your cell tests look now and you have to ask yourself why the hell we're calling a helper",
    "start": "976000",
    "end": "982270"
  },
  {
    "text": "method to create a string I don't understand why anyone would ever want to",
    "start": "982270",
    "end": "987370"
  },
  {
    "text": "call a parameterised method once that does nothing more than return a string you know what the best representation of",
    "start": "987370",
    "end": "994030"
  },
  {
    "text": "a string is string literal that's it there's no better representation of a string then a string",
    "start": "994030",
    "end": "999910"
  },
  {
    "text": "literal so obviously sorry obviously this is what you're looking for you",
    "start": "999910",
    "end": "1005070"
  },
  {
    "text": "don't need to call the helper method it's okay you can spend more characters I'm here to tell you it's absolutely okay to spend more characters if it",
    "start": "1005070",
    "end": "1012180"
  },
  {
    "text": "makes your tests more readable next thing you want to do as I said is inline a setup so here the test again and",
    "start": "1012180",
    "end": "1018090"
  },
  {
    "text": "they're fine we've saved some characters by shoving everything in start up and set up but they still require us to go",
    "start": "1018090",
    "end": "1025260"
  },
  {
    "text": "to definition and that's kind of a pain I mean what did we really save here we",
    "start": "1025260",
    "end": "1030870"
  },
  {
    "text": "have a shorter test but it requires us to go somewhere else to figure out what's going on that's not a good trade",
    "start": "1030870",
    "end": "1037400"
  },
  {
    "text": "so these are the same tests but everything's in line creating instances of David John Pat and Stephen setup",
    "start": "1037400",
    "end": "1043860"
  },
  {
    "text": "moves characters out of the individual test methods but it also could it also increases our conceptual overhead",
    "start": "1043860",
    "end": "1049230"
  },
  {
    "text": "there's really no valuable reason to do that so here we take out that indirection and we put everything where",
    "start": "1049230",
    "end": "1056160"
  },
  {
    "text": "it belongs and this also gives us the ability to completely delete both the setup and all of the customer fields so",
    "start": "1056160",
    "end": "1062400"
  },
  {
    "text": "deleting code always a good thing less to man less to maintain and manage",
    "start": "1062400",
    "end": "1067490"
  },
  {
    "text": "so setup is clever bob's tests are very clever about applying dry and I'm here asking how is clever working out for you",
    "start": "1067490",
    "end": "1074029"
  },
  {
    "text": "do you feel like the aggressive application of dry is making the test easier to understand or is it making it",
    "start": "1074029",
    "end": "1079860"
  },
  {
    "text": "more complicated I mean we would maybe apply this exact same approach to dry to our production code but if that doesn't",
    "start": "1079860",
    "end": "1085590"
  },
  {
    "text": "mean that it just should be blindly applied to our tests and the interesting thing is that despite replacing the dry",
    "start": "1085590",
    "end": "1091440"
  },
  {
    "text": "tests with the damp tests the overall number of the lines is exactly the same exactly the same the number of lines did",
    "start": "1091440",
    "end": "1098940"
  },
  {
    "text": "not go up once we took dry out of one area and moved it to another area and we made our code more clear we get to",
    "start": "1098940",
    "end": "1105330"
  },
  {
    "text": "delete a bunch of helper methods it didn't change the number of lines is the same so we can create more clear tests",
    "start": "1105330",
    "end": "1111320"
  },
  {
    "text": "without even increasing our character count or the number of lines we have to read it's obviously a good thing so we",
    "start": "1111320",
    "end": "1119700"
  },
  {
    "text": "spoke previously about motivators there are several motivators not all of",
    "start": "1119700",
    "end": "1126539"
  },
  {
    "text": "them good so we want to validate the system this is probably a good thing we want to get feedback from the system we",
    "start": "1126539",
    "end": "1132450"
  },
  {
    "text": "want to prevent regression these are all kind of synonyms maybe we want code coverage some people want a hundred",
    "start": "1132450",
    "end": "1137820"
  },
  {
    "text": "percent I would say that's probably not a great idea but it could be the motivation on your team maybe you want",
    "start": "1137820",
    "end": "1143429"
  },
  {
    "text": "to enable to react refactoring obviously a good good reason to write tests documenting the system I personally have",
    "start": "1143429",
    "end": "1148740"
  },
  {
    "text": "never written a test to document a system but some people love this and that's great if it makes you more effective it's a fantastic motivator go",
    "start": "1148740",
    "end": "1154740"
  },
  {
    "text": "for it as I said not all of them are good reasons but I mean I'm sure somebody in the audience doesn't even",
    "start": "1154740",
    "end": "1161789"
  },
  {
    "text": "really believe in unit testing or has had a lot of pain with unit testing and they have that manager that will not let them get away from it they want to know",
    "start": "1161789",
    "end": "1168390"
  },
  {
    "text": "why DHH and other people are telling them that unit tests are dead and tests should go away and they have so much",
    "start": "1168390",
    "end": "1174779"
  },
  {
    "text": "pain they don't know what to do and their manager won't won't let them let it go this is not a great situation to",
    "start": "1174779",
    "end": "1180059"
  },
  {
    "text": "be in obviously but that doesn't mean that you should just suddenly say like well I'm gonna kind of ignore unit tests",
    "start": "1180059",
    "end": "1185730"
  },
  {
    "text": "or I'm gonna do something different around unit tests or I'm gonna write bad unit tests understand what your motivation is and then how that can",
    "start": "1185730",
    "end": "1191190"
  },
  {
    "text": "impact your unit tests and then write them in a better way I mean realistically if you don't believe in unit tests but your manager requires you",
    "start": "1191190",
    "end": "1197490"
  },
  {
    "text": "to first of all if he's never checking your code he's never checking your code then you",
    "start": "1197490",
    "end": "1202800"
  },
  {
    "text": "can probably not even ever write an assertion and then everything let's just pass and everything's fine right and if they are checking it then it's in",
    "start": "1202800",
    "end": "1209430"
  },
  {
    "text": "your best interests to write the most maintainable unit test you possibly can right if they're checking the code and",
    "start": "1209430",
    "end": "1214920"
  },
  {
    "text": "you don't believe in it and you never want to look at it again right the most maintainable test you can so that it never fails and then you never really",
    "start": "1214920",
    "end": "1221910"
  },
  {
    "text": "have to worry about it TDD is probably the most common reason for writing unit tests you want to break up a problem or",
    "start": "1221910",
    "end": "1228390"
  },
  {
    "text": "improve your design I think those are pretty much synonyms customer acceptance I would never advise anyone to do this",
    "start": "1228390",
    "end": "1233820"
  },
  {
    "text": "but I once worked on a project and we had to have a green test suite before",
    "start": "1233820",
    "end": "1239040"
  },
  {
    "text": "the customer would sign off on a feature so we would go to the customer and say we would like you to sign off on this",
    "start": "1239040",
    "end": "1244440"
  },
  {
    "text": "and she would say okay manually tested perfect looks good okay show me the",
    "start": "1244440",
    "end": "1250530"
  },
  {
    "text": "green screen and you just open or you just go to the to the webpage and say here it's green okay check it off it",
    "start": "1250530",
    "end": "1258570"
  },
  {
    "text": "doesn't make any sense to me but it's it's a motivator it's gonna happen to you possibly at some point in a career so it's worth understanding alright in",
    "start": "1258570",
    "end": "1265140"
  },
  {
    "text": "that case so now if these things ever go red for any silly reason we don't get sign off and we have to talk about it we",
    "start": "1265140",
    "end": "1271920"
  },
  {
    "text": "want to approach our testing differently in that case I suggest talking to the team everybody coming to a shared vision",
    "start": "1271920",
    "end": "1278520"
  },
  {
    "text": "of why you're writing the tests just can be written for many different reasons assuming that test is necessary is not",
    "start": "1278520",
    "end": "1284790"
  },
  {
    "text": "necessarily the right thing either right TDD is a fantastic technique I don't use",
    "start": "1284790",
    "end": "1290280"
  },
  {
    "text": "it all the time I probably use it 20% of the time right now to be honest I'm more of a fan of using tools kind of for",
    "start": "1290280",
    "end": "1296430"
  },
  {
    "text": "where I think they're gonna be the most helpful so I do a lot of experimentation with repla driven development these days and much less TDD if I were still",
    "start": "1296430",
    "end": "1303300"
  },
  {
    "text": "working in Java all the time then I would probably do more TD but apply these things in ways that help you but",
    "start": "1303300",
    "end": "1309990"
  },
  {
    "text": "also ask yourself why again so let's say I'm working in Java and I want to get all of the benefits of doing TDD in Java",
    "start": "1309990",
    "end": "1317520"
  },
  {
    "text": "and so doing my TDD right I got a bunch of tests don't just commit that and walk",
    "start": "1317520",
    "end": "1323130"
  },
  {
    "text": "away you're not asking yourself why at that point I mean why did you write them because you wanted to do TDD and it",
    "start": "1323130",
    "end": "1329220"
  },
  {
    "text": "helped you improve your design it helps you write better code and that's great you had it you had and why but because it helped you write",
    "start": "1329220",
    "end": "1336780"
  },
  {
    "text": "the domain code doesn't mean it will help you maintain the domain code so take a step back and look at every test",
    "start": "1336780",
    "end": "1342780"
  },
  {
    "text": "and say why do we have this test if it helped me design code that is now designed and you have no other motivator",
    "start": "1342780",
    "end": "1348330"
  },
  {
    "text": "than the only correct choice is to delete that code any fool can write",
    "start": "1348330",
    "end": "1355230"
  },
  {
    "text": "assess that helps them today good programmers write tests that help the entire team in the future if you remember anything else from this",
    "start": "1355230",
    "end": "1361320"
  },
  {
    "text": "presentation this is what I would like you to take away it's so easy to write a test that helps you in the moment for",
    "start": "1361320",
    "end": "1368340"
  },
  {
    "text": "your current problem it's one step harder to think about helping yourself in the future you come back in three",
    "start": "1368340",
    "end": "1375600"
  },
  {
    "text": "weeks three months you look at that test again is it written in a way that's gonna help you maintain the code and if",
    "start": "1375600",
    "end": "1381180"
  },
  {
    "text": "the answer is yes great now go on to step two don't stop go on to step two and say if I've never seen this code",
    "start": "1381180",
    "end": "1387240"
  },
  {
    "text": "before and I come to this you know put yourself in your teammates shoes if I",
    "start": "1387240",
    "end": "1392670"
  },
  {
    "text": "come to this test is it helpful don't stop until you can also say yes you know and that means looking at the failure",
    "start": "1392670",
    "end": "1399360"
  },
  {
    "text": "not just the past look at the failure what is the failure message say if it just says you know expected something",
    "start": "1399360",
    "end": "1405390"
  },
  {
    "text": "was false and it's not really helpful that doesn't tell anybody what's going on maybe the string describing the test",
    "start": "1405390",
    "end": "1411360"
  },
  {
    "text": "if you have a test name maybe that's helpful if it's not helpful enough again if if you come to that completely blank",
    "start": "1411360",
    "end": "1417990"
  },
  {
    "text": "as we came to these tests at the beginning of the presentation if it's not helpful change it think about your",
    "start": "1417990",
    "end": "1423450"
  },
  {
    "text": "team so what can we do some specific concrete examples it's pretty much what",
    "start": "1423450",
    "end": "1429390"
  },
  {
    "text": "this presentation is about is concrete examples of all of this this is your",
    "start": "1429390",
    "end": "1434520"
  },
  {
    "text": "career and it's ending one test suite run at a time how fast is your test",
    "start": "1434520",
    "end": "1440280"
  },
  {
    "text": "suite who in here has a test suite that runs in under a second come on really",
    "start": "1440280",
    "end": "1446600"
  },
  {
    "text": "okay I won't ask about ten seconds how long's your test to be taken yeah so",
    "start": "1446600",
    "end": "1454770"
  },
  {
    "text": "that's where it should be if your test suite takes longer than that people aren't gonna run it people aren't gonna run the test suite before they check in",
    "start": "1454770",
    "end": "1461130"
  },
  {
    "text": "because their crew here is attending one test suite run at a time nobody wants to sit there I mean what do you call that",
    "start": "1461130",
    "end": "1466890"
  },
  {
    "text": "time while your test suite is running I call it waste cuz I'm on Twitter or I'm on email or somewhere",
    "start": "1466890",
    "end": "1474120"
  },
  {
    "text": "probably worse be honest I mean we're not working we're wasting our time",
    "start": "1474120",
    "end": "1479190"
  },
  {
    "text": "looking at who knows what on the internet so make your test run faster",
    "start": "1479190",
    "end": "1484740"
  },
  {
    "text": "the easiest way that I know how to do this is to create solitary unit tests so some people just call this a unit test",
    "start": "1484740",
    "end": "1490410"
  },
  {
    "text": "but other people call many other things unit tests so when I was writing a book on all this stuff Martin Fowler said",
    "start": "1490410",
    "end": "1496350"
  },
  {
    "text": "just stop trying to steal the phrase unit test they're never gonna let you steal the",
    "start": "1496350",
    "end": "1501539"
  },
  {
    "text": "name unit test come up with something new and thus solitary unit test it's pretty simple never cross the boundary",
    "start": "1501539",
    "end": "1507980"
  },
  {
    "text": "so your test suites are slow because you're hitting the database you're going over the network you're going to the",
    "start": "1507980",
    "end": "1513750"
  },
  {
    "text": "file system that's really what's slowing everything down it's not like the internal computing is slowing everything down in most cases so stop doing that",
    "start": "1513750",
    "end": "1520440"
  },
  {
    "text": "right solitary unit tests that never cross boundaries but a thing that's also",
    "start": "1520440",
    "end": "1525539"
  },
  {
    "text": "very annoying is cascading failures you change the movie clap the customer test fails that's annoying that that's not",
    "start": "1525539",
    "end": "1532260"
  },
  {
    "text": "that's not going to help me get through my day faster that's not going to motivate me to be excited about being on",
    "start": "1532260",
    "end": "1537960"
  },
  {
    "text": "this team cascading failures take away my motivation to be a software engineer so the class under test should be the",
    "start": "1537960",
    "end": "1544559"
  },
  {
    "text": "only concrete class found in a test that's it this is the full definition of solitary unit test and I actually have",
    "start": "1544559",
    "end": "1550110"
  },
  {
    "text": "no examples of stopping something from going to the file system or stopping something going for the database because",
    "start": "1550110",
    "end": "1555480"
  },
  {
    "text": "I think that's pretty self-explanatory you can write solitary unit tests that don't cost any type of boundaries yeah",
    "start": "1555480",
    "end": "1564289"
  },
  {
    "text": "by concrete here I mean mock or stub yeah we'll have some I have some",
    "start": "1570240",
    "end": "1576669"
  },
  {
    "text": "concrete examples so we need some type of other phrase right we have solitary",
    "start": "1576669",
    "end": "1582759"
  },
  {
    "text": "unit tests we need something to say what the other tests are because those are valuable also and those are social unit tests it's it's that straightforward so",
    "start": "1582759",
    "end": "1590559"
  },
  {
    "text": "as of now we have vastly vastly improved sociable unit tests but we have multiple what I was calling concrete classes we",
    "start": "1590559",
    "end": "1596710"
  },
  {
    "text": "have the customer tests talking to the rental which talks to the movie any change to movie is going to cascade to",
    "start": "1596710",
    "end": "1602980"
  },
  {
    "text": "all of those other classes so what we have is better but we're still entirely",
    "start": "1602980",
    "end": "1607990"
  },
  {
    "text": "sociable we have no solitary unit tests at this point and I believe a good mix of both",
    "start": "1607990",
    "end": "1613269"
  },
  {
    "text": "is really what we're looking for we're looking for some some type of actually",
    "start": "1613269",
    "end": "1618730"
  },
  {
    "text": "as much coverage as we can get from our solitary unit tests because they're fast because they don't go over the network because they're not flaky because they",
    "start": "1618730",
    "end": "1626559"
  },
  {
    "text": "focus with one concrete unit test or one one class under test and some mocks or stubs so this is what we have right now",
    "start": "1626559",
    "end": "1636929"
  },
  {
    "text": "in my opinion this test is already a pretty solid test this is a great test this test fails before I check in and I",
    "start": "1636929",
    "end": "1644019"
  },
  {
    "text": "know that I have a customer with a rental with a movie that is a new release and I can read an expected value",
    "start": "1644019",
    "end": "1649450"
  },
  {
    "text": "without navigating anywhere I mean it's almost heaven compared to what we looked at in the beginning so this is great but",
    "start": "1649450",
    "end": "1655690"
  },
  {
    "text": "the problem is again if a movie changes then this test could fail we don't want this test to fail because this is",
    "start": "1655690",
    "end": "1661750"
  },
  {
    "text": "doesn't say customer test class but this is in the customer test class so we we don't want our movie changes to break",
    "start": "1661750",
    "end": "1667990"
  },
  {
    "text": "things so this is it this is a concrete example of using I would just call this",
    "start": "1667990",
    "end": "1674440"
  },
  {
    "text": "a stub to be honest but I'm working with mockito and they call it a mock I don't think the semantics here are really",
    "start": "1674440",
    "end": "1680740"
  },
  {
    "text": "important but we're working with not our rental class we're just working with a mock and so any change at this point to",
    "start": "1680740",
    "end": "1688840"
  },
  {
    "text": "a rental or to a movie will not cascade back to our customer tests and you may",
    "start": "1688840",
    "end": "1693850"
  },
  {
    "text": "have noticed the null and you may have thrown up in your mouth a little bit to me this is the same thing as",
    "start": "1693850",
    "end": "1699999"
  },
  {
    "text": "Godfather right we have a magic string in there that says Godfather 4 and then we have a magic string in there that",
    "start": "1699999",
    "end": "1705519"
  },
  {
    "text": "says know what's the difference between those characters within the context of this string but I just feel like as",
    "start": "1705519",
    "end": "1711460"
  },
  {
    "text": "programmers we just have this gut reaction if like oh why does he even know oh it must be a mistake I mean I'm",
    "start": "1711460",
    "end": "1717249"
  },
  {
    "text": "sure there are people in this room who definitely looked at that when I put it up and went oh he made a mistake he left",
    "start": "1717249",
    "end": "1722559"
  },
  {
    "text": "a null in there but it's just a magic string it's a magic string on both sides so what's the difference between null",
    "start": "1722559",
    "end": "1728619"
  },
  {
    "text": "and Godfather but okay they're still gonna be people to take exception to that and that's fine because you have a stub and you just add some value in",
    "start": "1728619",
    "end": "1735429"
  },
  {
    "text": "there add Godfather in there and move on I'm just putting this up here so people so the people who feel comfortable with",
    "start": "1735429",
    "end": "1740710"
  },
  {
    "text": "null will get some validation be like it's okay so we also have solitary unit",
    "start": "1740710",
    "end": "1747460"
  },
  {
    "text": "tests that focus exclusively on summing this old test let's go back real quick this first test on the left it has",
    "start": "1747460",
    "end": "1755789"
  },
  {
    "text": "string building it has summing it has a lot of different things happening this test is covering many different things",
    "start": "1755789",
    "end": "1762099"
  },
  {
    "text": "and you don't necessarily need to hear we can focus exclusively on summing so",
    "start": "1762099",
    "end": "1767739"
  },
  {
    "text": "we have a mock rental that were setting the charge for on the left and we have a mock rental that we're setting the",
    "start": "1767739",
    "end": "1773229"
  },
  {
    "text": "charge or the points for on the right and then we set up our customer and we just validate the value these are",
    "start": "1773229",
    "end": "1779049"
  },
  {
    "text": "beautiful tests these are tests that you can come to with never having seen it before none of you have ever seen this",
    "start": "1779049",
    "end": "1784690"
  },
  {
    "text": "test before and if this is failing you know exactly what's going on it's completely straight forward you don't",
    "start": "1784690",
    "end": "1790989"
  },
  {
    "text": "have to navigate anywhere I mean maybe you have to navigate to the Builder if this is your first week on the team",
    "start": "1790989",
    "end": "1796749"
  },
  {
    "text": "first day on the team maybe you've never seen a builder but we use these builders globally throughout all the tests so",
    "start": "1796749",
    "end": "1802269"
  },
  {
    "text": "even if it is your first day you navigate to the Builder you see what we're going what we're doing all we're creating some instances no big deal cool",
    "start": "1802269",
    "end": "1808690"
  },
  {
    "text": "for the life of the project you now know what we're doing when we're creating in citizen tests you know that we're using",
    "start": "1808690",
    "end": "1814059"
  },
  {
    "text": "builders you can reapply this value even if you had to spend that time on this first test you can now apply that across",
    "start": "1814059",
    "end": "1819820"
  },
  {
    "text": "the whole test suite so we lost some coverage you know we had a null in there",
    "start": "1819820",
    "end": "1826629"
  },
  {
    "text": "and we broke out our summing and we we lost the corner case test that we were doing on the movies now we get it back",
    "start": "1826629",
    "end": "1833730"
  },
  {
    "text": "well it's nice about this so now we have confidence in our fine grained customer",
    "start": "1833730",
    "end": "1839530"
  },
  {
    "text": "tests and we have confidence in our movie tests and we have all of the coverage that you had previously seem summing of points is tested summing of",
    "start": "1839530",
    "end": "1847360"
  },
  {
    "text": "charges is tested string building is tested but also all of the the domain",
    "start": "1847360",
    "end": "1852790"
  },
  {
    "text": "cases for the movie class all tested so we have complete confidence in our system but we also gained isolation",
    "start": "1852790",
    "end": "1859120"
  },
  {
    "text": "something that we did not have in any way whatsoever we no longer have cascading failures specifically any change the movie will no longer fail",
    "start": "1859120",
    "end": "1866020"
  },
  {
    "text": "that customer test extremely valuable when we run our tests we know anything that's failing is actually failing",
    "start": "1866020",
    "end": "1871990"
  },
  {
    "text": "because of a change in that domain class as long as we're talking about a solitary test this should be great it",
    "start": "1871990",
    "end": "1877870"
  },
  {
    "text": "should make our lives better but we're missing integration right that's the one thing that we don't have we have great",
    "start": "1877870",
    "end": "1883930"
  },
  {
    "text": "isolation a stick we have speed fantastic but we don't have integration and that's why you should never choose",
    "start": "1883930",
    "end": "1890260"
  },
  {
    "text": "one of these approaches exclusively choose the tools that make you effective and that means a little sum over here",
    "start": "1890260",
    "end": "1895420"
  },
  {
    "text": "and a little sum over here that means for me 20% TDD these days I'm still using it I don't have to make an exclusive choice to TDD everything or",
    "start": "1895420",
    "end": "1902560"
  },
  {
    "text": "nothing the same thing applies here this is a sociable unit test it brings",
    "start": "1902560",
    "end": "1908350"
  },
  {
    "text": "everything together so now we have our tests that don't that don't cascade fail",
    "start": "1908350",
    "end": "1913870"
  },
  {
    "text": "every test that don't take a long time to run and then we have this brings everything together it's got a customer",
    "start": "1913870",
    "end": "1920440"
  },
  {
    "text": "named Pat with a rental with a movie that's a new release and another rental that's Scarface you get the idea we have",
    "start": "1920440",
    "end": "1927040"
  },
  {
    "text": "multiple we have one customer with multiple rentals multiple movies and we can tie the whole thing together and",
    "start": "1927040",
    "end": "1932050"
  },
  {
    "text": "there's no nulls to make anyone uncomfortable so how else can you",
    "start": "1932050",
    "end": "1937360"
  },
  {
    "text": "improve the test suite one assertion for test I know there will be people that take issue with this I'm here to make my",
    "start": "1937360",
    "end": "1943990"
  },
  {
    "text": "case but then ultimately it's up to you on what you think is more appropriate so this is again the movie test that we",
    "start": "1943990",
    "end": "1949330"
  },
  {
    "text": "already saw let's say the second",
    "start": "1949330",
    "end": "1954940"
  },
  {
    "text": "assertion fails this is what you're gonna see I mean I was gonna say what do you think but you know everybody knows",
    "start": "1954940",
    "end": "1961240"
  },
  {
    "text": "this is what you're gonna see one failure by Sion's one failure what's the value of",
    "start": "1961240",
    "end": "1967660"
  },
  {
    "text": "the third fourth and fifth assertion at this point it's zero it's worthless",
    "start": "1967660",
    "end": "1974320"
  },
  {
    "text": "maybe it's passing maybe it's failing we have no idea code didn't execute so you know of one",
    "start": "1974320",
    "end": "1981130"
  },
  {
    "text": "failure and you have zero automatically generated feedback from the other test from the other assertions given a test",
    "start": "1981130",
    "end": "1987760"
  },
  {
    "text": "with multiple assertions when they're all a path when they are all passing they all provide value I mean obviously they're all passing fantastic life is",
    "start": "1987760",
    "end": "1994750"
  },
  {
    "text": "good you wrote that test they all passed and you thought moving on but then that",
    "start": "1994750",
    "end": "1999790"
  },
  {
    "text": "first assertion fails and it has completely voided the value of every other assertion they're just worthless",
    "start": "1999790",
    "end": "2005700"
  },
  {
    "text": "they might as well not even be there they're maybe worse because they're noise providing you know value they're sitting there and they're giving you",
    "start": "2005700",
    "end": "2011640"
  },
  {
    "text": "nothing so in effect they're noise it's negative value when you're faced with a failing",
    "start": "2011640",
    "end": "2017340"
  },
  {
    "text": "test that has multiple assertions your force between two shitty situations the",
    "start": "2017340",
    "end": "2022890"
  },
  {
    "text": "first situation is reading all of the tests and then reading all of the domain and deciding that everything's fine",
    "start": "2022890",
    "end": "2028800"
  },
  {
    "text": "you know assertion to failed all right I mean figure out what's wrong fix it cool all right now three four and five are",
    "start": "2028800",
    "end": "2034830"
  },
  {
    "text": "there what are my choices read everything and make sure it's all right of course not because we're all lazy we",
    "start": "2034830",
    "end": "2040530"
  },
  {
    "text": "just click run again and then four fails and five is worthless and we go fix that and then we run it again and maybe five",
    "start": "2040530",
    "end": "2046620"
  },
  {
    "text": "fails we just go through this sad loop of running fixing running fixing and",
    "start": "2046620",
    "end": "2052110"
  },
  {
    "text": "doesn't have to be that way what if we got all of the data that we needed at the same time what if everything failed",
    "start": "2052110",
    "end": "2057840"
  },
  {
    "text": "when it was supposed to and past when it was supposed to at the same time wouldn't that be more effective well the",
    "start": "2057840",
    "end": "2064169"
  },
  {
    "text": "way that you have to do it is just break these assertions apart just don't use multiple assertions it's not really that complicated but part of",
    "start": "2064170",
    "end": "2070530"
  },
  {
    "text": "this is obviously well I don't want to I don't want to repeat too much code okay cool use builders use some type of",
    "start": "2070530",
    "end": "2077159"
  },
  {
    "text": "global eye application that allows you to quickly create your tests if you can't quickly create your tests like",
    "start": "2077160",
    "end": "2083370"
  },
  {
    "text": "this break things apart into a single responsibility there's another problem it's it's not multiple assertions versus",
    "start": "2083370",
    "end": "2089850"
  },
  {
    "text": "a single assertion there's some type of other problem you can't create your domain classes easily enough or something you have some other problem",
    "start": "2089850",
    "end": "2096020"
  },
  {
    "text": "don't hide that problem by using multiple assertions and said do this so once we have this now we",
    "start": "2096020",
    "end": "2101970"
  },
  {
    "text": "actually see this so this is much better now we have some type of sum we have",
    "start": "2101970",
    "end": "2108180"
  },
  {
    "text": "additional info the exact same assertions but now we have additional info we can see that the first failure",
    "start": "2108180",
    "end": "2113580"
  },
  {
    "text": "is for three day the second failure is for four day the third failure is for five day we can also see by looking at",
    "start": "2113580",
    "end": "2119730"
  },
  {
    "text": "the expected values that everything every single expected is one and a half less than the actual so just having all",
    "start": "2119730",
    "end": "2127200"
  },
  {
    "text": "of that data at the same time would be better but now we also have a pattern that we can work with one assertion per",
    "start": "2127200",
    "end": "2132540"
  },
  {
    "text": "test allows us to get the expected values and the actual values for every single test which is clearly better",
    "start": "2132540",
    "end": "2138360"
  },
  {
    "text": "having all of that data at the same time but now we have a pattern what do we recognize from those failing tests",
    "start": "2138360",
    "end": "2143460"
  },
  {
    "text": "anything above two days was failing everything that was failing was by off by one and a half so the sum of those",
    "start": "2143460",
    "end": "2149520"
  },
  {
    "text": "values are those those failures had more value than the parts so break your test",
    "start": "2149520",
    "end": "2154770"
  },
  {
    "text": "up into multiple assertions wrapping all this up the test you own end up owning",
    "start": "2154770",
    "end": "2160890"
  },
  {
    "text": "you it's another cute little quote from from Fight Club but it couldn't be more true every line of code you write has some",
    "start": "2160890",
    "end": "2168750"
  },
  {
    "text": "type of return on investment it's either positive or negative maybe it's flat but more than likely",
    "start": "2168750",
    "end": "2174150"
  },
  {
    "text": "it's positive or negative you have to own every single line of code in production but also in your tests so",
    "start": "2174150",
    "end": "2179880"
  },
  {
    "text": "look at your tests from an ROI perspective let's say for example you wrote some code TD deed some code and",
    "start": "2179880",
    "end": "2186740"
  },
  {
    "text": "it's gonna change the color of a background on a website this is not crucial to your business but you TDD did",
    "start": "2186740",
    "end": "2193740"
  },
  {
    "text": "it fantastic it helped you create the good design to change this color fantastic you've done everything right",
    "start": "2193740",
    "end": "2199859"
  },
  {
    "text": "but then let's say the test is a little flaky it fails now and then maybe there's a race condition because of the",
    "start": "2199859",
    "end": "2205260"
  },
  {
    "text": "framework that you're using something like that delete that test get rid of that test immediately if that background",
    "start": "2205260",
    "end": "2211109"
  },
  {
    "text": "color doesn't change correctly your business will go on someone will complain at some point and you'll fix",
    "start": "2211109",
    "end": "2216330"
  },
  {
    "text": "the background color and the user experience will be a little off for a little while it'll be a little bit disappointing but business goes on but",
    "start": "2216330",
    "end": "2222990"
  },
  {
    "text": "all of the time you waste on that flaky test that's just making the user experience that much better is a",
    "start": "2222990",
    "end": "2228450"
  },
  {
    "text": "complete waste too to you to your team to your teammates to the business look at your test in terms",
    "start": "2228450",
    "end": "2235110"
  },
  {
    "text": "of ROI another another example that I like to go back to is you have an insurance company and the insurance",
    "start": "2235110",
    "end": "2241290"
  },
  {
    "text": "company needs to look up all of its customers by social security number you should probably have a validation on that social security number you want to",
    "start": "2241290",
    "end": "2247920"
  },
  {
    "text": "get that SSN right you need to be able to look someone up but that person has a first name and you know maybe you put a",
    "start": "2247920",
    "end": "2255300"
  },
  {
    "text": "little test in there to make sure that it's all alpha that comes through because it's nice you know be nice to",
    "start": "2255300",
    "end": "2261390"
  },
  {
    "text": "get the customers name right but you don't need the customers name to be perfect to build them you don't need the customers name to be perfect to contact",
    "start": "2261390",
    "end": "2268800"
  },
  {
    "text": "them you know you can look them up someone calls the call center if I get your name wrong and and you call the",
    "start": "2268800",
    "end": "2274200"
  },
  {
    "text": "call center everything's gonna be okay if there's an extra one in there or something like that so if you can write",
    "start": "2274200",
    "end": "2279720"
  },
  {
    "text": "this test easily and maintain it easily then do it but if this is again a flaky test or a problematic test what's the",
    "start": "2279720",
    "end": "2286560"
  },
  {
    "text": "real value to the business I mean really keeping that one out of someone's first name what's the real value to the",
    "start": "2286560",
    "end": "2291930"
  },
  {
    "text": "business it's not very high stop thinking about your test from the",
    "start": "2291930",
    "end": "2297570"
  },
  {
    "text": "individual point of view stop thinking about them from okay I like TDD I'm gonna write this test and that's it",
    "start": "2297570",
    "end": "2304620"
  },
  {
    "text": "that's the that's the end of what needs to be done commit that's not good enough start thinking about it from your team's",
    "start": "2304620",
    "end": "2310110"
  },
  {
    "text": "point of view you know you wrote that test and it helped you get good looking",
    "start": "2310110",
    "end": "2315120"
  },
  {
    "text": "code and that's great but that's not a good enough reason for it to live on what you need to do is look at it and say okay I came to this with a fresh",
    "start": "2315120",
    "end": "2322050"
  },
  {
    "text": "mind I understand exactly what's going on here it's gonna help me maintain this code that's a good test worth keeping",
    "start": "2322050",
    "end": "2328190"
  },
  {
    "text": "your tests are not special they're not beautiful or unique snowflakes the same decaying text as every other test Fight",
    "start": "2328190",
    "end": "2336090"
  },
  {
    "text": "Club again think about the team that's that's what I want you to leave here",
    "start": "2336090",
    "end": "2341160"
  },
  {
    "text": "with I guess more than anything else think about the team don't think about what you're doing in the moment think",
    "start": "2341160",
    "end": "2346320"
  },
  {
    "text": "about the long-term value of that code think about maintaining that code a year from now so that's really kind of the",
    "start": "2346320",
    "end": "2353880"
  },
  {
    "text": "bringing all the talk together I also I'm clearly passionate if not angry as you can tell about bad tests so I did",
    "start": "2353880",
    "end": "2360630"
  },
  {
    "text": "write a book on it welcome to check it out and I also tried to finish up early so we could all get to lunch early beat",
    "start": "2360630",
    "end": "2367440"
  },
  {
    "text": "everybody else but we have at least ten minutes for questions",
    "start": "2367440",
    "end": "2373039"
  }
]