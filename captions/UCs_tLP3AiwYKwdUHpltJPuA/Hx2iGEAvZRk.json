[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "[Music]",
    "start": "2540",
    "end": "11630"
  },
  {
    "text": "my name is Casper um and I work on uh internet of things but mostly",
    "start": "12000",
    "end": "17080"
  },
  {
    "text": "programable things at at Google um my background is is very much in the",
    "start": "17080",
    "end": "23800"
  },
  {
    "start": "20000",
    "end": "51000"
  },
  {
    "text": "languages space so I um I worked on embedded Small Talk systems JavaScript",
    "start": "23800",
    "end": "29359"
  },
  {
    "text": "engines and recently I worked on dot a um structured programming language for for",
    "start": "29359",
    "end": "34960"
  },
  {
    "text": "the web but clearly this doesn't really match anything that sort of in the title",
    "start": "34960",
    "end": "40879"
  },
  {
    "text": "so we're going to change it a little bit now and focus on something not on this slide not in my sort of usual background",
    "start": "40879",
    "end": "47440"
  },
  {
    "text": "here let's see we get this thing going so the reason why I'm here is uh",
    "start": "47440",
    "end": "54680"
  },
  {
    "start": "51000",
    "end": "217000"
  },
  {
    "text": "that over the last few years we've seen an explosion of devices for what we all refer to as",
    "start": "54680",
    "end": "60559"
  },
  {
    "text": "iot it's a big word actually three words so it's like three big words and it means a lot of different things to a lot",
    "start": "60559",
    "end": "66560"
  },
  {
    "text": "of different people um but we're going to try to focus on one part of it here the most interesting thing here is really like here is an explosion of",
    "start": "66560",
    "end": "72720"
  },
  {
    "text": "devices we're seeing a tremendous growth and it doesn't seem to be slowing down anytime soon um and if you put it in",
    "start": "72720",
    "end": "78560"
  },
  {
    "text": "perspective and think about how many smartphones or cell phones you have today we're around like one estimate is",
    "start": "78560",
    "end": "84320"
  },
  {
    "text": "around like 7.5 billion smartphones but that's very much limited by the amount of people we have like some people may",
    "start": "84320",
    "end": "90360"
  },
  {
    "text": "have two phones or three phones but it's kind of hard to have a 100 probably doesn't make sense whereas in your home",
    "start": "90360",
    "end": "96439"
  },
  {
    "text": "in in sort of cities smart cities and in Enterprise settings you can have lots and lots of devices and we all want to",
    "start": "96439",
    "end": "102720"
  },
  {
    "text": "sort of hook them up together and make them hackable programmable so this term Internet of",
    "start": "102720",
    "end": "109840"
  },
  {
    "text": "Things it really means almost too much I think um it it's about Gathering data",
    "start": "109840",
    "end": "115719"
  },
  {
    "text": "and and sensing surroundings processing these data and transmitting them it's about transport this stuff across networks so this involves switches and",
    "start": "115719",
    "end": "123320"
  },
  {
    "text": "sort of network Hardware it's about storing this information possibly in the cloud it's also about analyzing and",
    "start": "123320",
    "end": "129679"
  },
  {
    "text": "extracting insights from this um this processed and GA gathered data and it's certainly about controlling um devices",
    "start": "129679",
    "end": "137160"
  },
  {
    "text": "and the environment based on alerts or insights gathered um so there's a lot of stuff going on here um and maybe even",
    "start": "137160",
    "end": "144560"
  },
  {
    "text": "more importantly there's also sharing of this data to other systems so it's almost like this means too much much so",
    "start": "144560",
    "end": "150519"
  },
  {
    "text": "I'm going to try to cut it down here and focus on a couple of these things and turn my attention to to the spaces where",
    "start": "150519",
    "end": "156200"
  },
  {
    "text": "the devices are really present and where you can really start talk about programming these devices so certainly",
    "start": "156200",
    "end": "162360"
  },
  {
    "text": "in the in the sense space where you have lots of small devices that are doing monitoring and sensing it makes sense to",
    "start": "162360",
    "end": "168000"
  },
  {
    "text": "talk about um programmable devices but certainly also in the in the control space you can talk about having devices",
    "start": "168000",
    "end": "174560"
  },
  {
    "text": "that are controlled from other systems or or even control other systems so we",
    "start": "174560",
    "end": "179800"
  },
  {
    "text": "if we focus on those things we can sort of narrow a little bit down like this are not the only two devices that fit",
    "start": "179800",
    "end": "184879"
  },
  {
    "text": "this but there's like two two different kinds here there are like smart watches on the uh on the uh left I guess uh on",
    "start": "184879",
    "end": "193920"
  },
  {
    "text": "the right for you guys um that are fairly fairly big I mean it's it's it's not small system we're talking about",
    "start": "193920",
    "end": "199799"
  },
  {
    "text": "they're running like microprocessors they probably have a hundreds of megabytes of ram they're like fairly big",
    "start": "199799",
    "end": "205760"
  },
  {
    "text": "things but they still fit in here uh and uh and usually in the control uh way that they are used to control other",
    "start": "205760",
    "end": "212599"
  },
  {
    "text": "devices uh just like a smartphone would fit in here as well I don't know if you know what this this thing is it's an",
    "start": "212599",
    "end": "218640"
  },
  {
    "start": "217000",
    "end": "290000"
  },
  {
    "text": "Amazon dash button it's a new thing you can buy these for like $5 in the US and",
    "start": "218640",
    "end": "223799"
  },
  {
    "text": "what it does it allows you to have a small button you can put somewhere in your kitchen and when you press this you order more macaroni and cheese it it's",
    "start": "223799",
    "end": "231200"
  },
  {
    "text": "it's pretty clever and they're all sort of branded you can get them for like diapers and uh whatever you want to",
    "start": "231200",
    "end": "237239"
  },
  {
    "text": "right and you can put them where you want to really cheap and they cannot run a big microprocessor they run something",
    "start": "237239",
    "end": "243079"
  },
  {
    "text": "much smaller microcontrollers so we think about this split into two segments and if we look at the hardware",
    "start": "243079",
    "end": "250920"
  },
  {
    "text": "involved like the microprocessor space is way too much to just order macaroni and cheese like one sort of setting here",
    "start": "250920",
    "end": "257160"
  },
  {
    "text": "is or one kind of device here is like the Raspberry Pi like it's really like a a",
    "start": "257160",
    "end": "262360"
  },
  {
    "text": "full-blown um system that has like a quad core processor that runs fairly quickly has a gigabyte of RAM and it's",
    "start": "262360",
    "end": "269720"
  },
  {
    "text": "it's extensible through like external micro cards micro SD cards it's not that expensive and it can runs out of all",
    "start": "269720",
    "end": "276440"
  },
  {
    "text": "almost all systems it runs Windows today it runs Linux it's probably the most commonly used OS on them it can run more",
    "start": "276440",
    "end": "283320"
  },
  {
    "text": "or less everything this is like a small server it's fairly small it's fairly cheap but it's still sort of a server I",
    "start": "283320",
    "end": "289520"
  },
  {
    "text": "find the other kind a little bit more interesting this is a very high-end microcontroller uh fairly new one um it",
    "start": "289520",
    "end": "296800"
  },
  {
    "start": "290000",
    "end": "404000"
  },
  {
    "text": "has an arm cortex M7 core um and like this sort of high-end specs for that space 32bit CPUs uh like a reasonable",
    "start": "296800",
    "end": "304440"
  },
  {
    "text": "amount of of ram like 320 kiloby of ram it's quite a lot and maybe up to a",
    "start": "304440",
    "end": "309720"
  },
  {
    "text": "megabyte of flash um but they still actually cut some Corners in producing this they decided not to have a double",
    "start": "309720",
    "end": "315960"
  },
  {
    "text": "Precision uh floating Point Unit and there is no sort of fancy memory management unit put in there as well so",
    "start": "315960",
    "end": "321560"
  },
  {
    "text": "it really puts some burden on the people developing software for these things to be able to live with those restrictions it's not a full-blown thing so in this",
    "start": "321560",
    "end": "329759"
  },
  {
    "text": "presentation I'm going to focus mostly on these kind of chips uh because I think that's really where the explosive growth is is going to happen because uh",
    "start": "329759",
    "end": "337560"
  },
  {
    "text": "like even though this is a really really highend microcontroller it's still a lot cheaper than the other one and we seeing chips that are way way below a dollar in",
    "start": "337560",
    "end": "344199"
  },
  {
    "text": "in production cost so it's it's it's happening so people really want to run",
    "start": "344199",
    "end": "351160"
  },
  {
    "text": "something like embedded Linux on their really small devices so a good question to ask is like is that even possible",
    "start": "351160",
    "end": "357000"
  },
  {
    "text": "right and people talk about this uh UC Linux which is a Linux that runs on very",
    "start": "357000",
    "end": "363319"
  },
  {
    "text": "small devices without memory management units but it really requires something like four megabytes of RAM and maybe two",
    "start": "363319",
    "end": "369840"
  },
  {
    "text": "three megabytes of flash so it's really really hard to run something like Linux in in that space and that makes a lot of people sad they're really used to",
    "start": "369840",
    "end": "376680"
  },
  {
    "text": "they're used to having this like I just put Linux there then I have my all my tools that I'm used to and it just kind",
    "start": "376680",
    "end": "381919"
  },
  {
    "text": "of works doesn't really work that well in this setting so we need to figure out what we have instead so we we're left",
    "start": "381919",
    "end": "388199"
  },
  {
    "text": "with something like this like uh GCC is an important one or llvm um maybe",
    "start": "388199",
    "end": "394759"
  },
  {
    "text": "you have the some sort of debugging support as well but it's fairly fairly primitive maybe this is a little bit too",
    "start": "394759",
    "end": "400360"
  },
  {
    "text": "much you probably have a bit more than this but I think the best case scenario is something like this where you have",
    "start": "400360",
    "end": "405960"
  },
  {
    "start": "404000",
    "end": "517000"
  },
  {
    "text": "some a way of writing C code um like this is a fairly well structured nice",
    "start": "405960",
    "end": "411240"
  },
  {
    "text": "example from from embed uh produced by arm and then like if you're lucky enough you also have a GDB that runs across uh",
    "start": "411240",
    "end": "418280"
  },
  {
    "text": "some sort of Remote device connection here that allows you to work with the system often GDB is a little bit unaware",
    "start": "418280",
    "end": "423759"
  },
  {
    "text": "of like the threats that running on top of the OS so it's like it's like doing kernel level debugging it's pretty hard",
    "start": "423759",
    "end": "428800"
  },
  {
    "text": "but it's it's still way better than not having it I think this is sort of the best case scenario for development for",
    "start": "428800",
    "end": "434400"
  },
  {
    "text": "these very small devices and to me I kind of like this thing but I know a lot",
    "start": "434400",
    "end": "439879"
  },
  {
    "text": "of developers are not comfortable really writing a lot of code this way and if you work in big teams it's really hard to do anything with a technology stack",
    "start": "439879",
    "end": "447520"
  },
  {
    "text": "like this so what we see today is that there are are not that many developers that are really productive with a setup",
    "start": "447520",
    "end": "452800"
  },
  {
    "text": "like this so I think we need to change that somehow so now is the part where I tell",
    "start": "452800",
    "end": "458560"
  },
  {
    "text": "you well what I really want but also I think what you need really need um let's hope there's some overlap between the",
    "start": "458560",
    "end": "464639"
  },
  {
    "text": "two things uh I guess I think there is and that's the reason why I'm here",
    "start": "464639",
    "end": "470919"
  },
  {
    "text": "so I think it's really important that we get a platform that's much more accessible to a much broader range of",
    "start": "471159",
    "end": "477400"
  },
  {
    "text": "developers um we need something that seems familiar to a lot of people not just uh like say a few few thousand",
    "start": "477400",
    "end": "486120"
  },
  {
    "text": "people around the globe we need something that can reach like a million of developers not uh not that that few",
    "start": "486120",
    "end": "492280"
  },
  {
    "text": "and I think we need it to be based on some sort of high level managed language that makes more people more productive in this space there are a few choices we",
    "start": "492280",
    "end": "498879"
  },
  {
    "text": "can make there and I have a good idea about what we should CH choose but we'll get back to that of course but I think",
    "start": "498879",
    "end": "504280"
  },
  {
    "text": "this is really important to uh to make devices sort of programmable by well I say everyone uh but at least like making",
    "start": "504280",
    "end": "510919"
  },
  {
    "text": "them much more accessible and much easier to to hack on I think we need to change it a little",
    "start": "510919",
    "end": "516159"
  },
  {
    "text": "bit you also need a much more productive environment right now I mean you can build really cool things really cool it",
    "start": "516159",
    "end": "522880"
  },
  {
    "start": "517000",
    "end": "769000"
  },
  {
    "text": "or IO iot gadgets but it's more in sort of in spite of uh of the the tooling",
    "start": "522880",
    "end": "528080"
  },
  {
    "text": "that it is because of it so I think you need a productive environment with like static analysis code completion things you're used to from higher level Stacks",
    "start": "528080",
    "end": "534839"
  },
  {
    "text": "you need that in the space as well and you need a sort of an ecosystem of functional it that you can pull in and",
    "start": "534839",
    "end": "540839"
  },
  {
    "text": "reuse across these devices um and something that's really hard too right with C code it's not necessarily the",
    "start": "540839",
    "end": "546640"
  },
  {
    "text": "most portable code in the world uh so I you can write it in a really nice way where it's it's it's pretty portable H",
    "start": "546640",
    "end": "552320"
  },
  {
    "text": "but you still have to care a lot so we don't see a lot of sharing going on and at least I think we could do way",
    "start": "552320",
    "end": "557360"
  },
  {
    "text": "better and I think this all is needed to make people build these things a lot lot quicker than we've seen in the past um",
    "start": "557360",
    "end": "563160"
  },
  {
    "text": "so I think about how much faster people are developing web apps than they are like building embedded apps if we' somehow Bridge the Gap a little bit and",
    "start": "563160",
    "end": "570160"
  },
  {
    "text": "make embedded developers more or less as productive as people developing for the web today it's",
    "start": "570160",
    "end": "575839"
  },
  {
    "text": "it would be a lot better at least maybe the most important thing that I think we don't have today is is",
    "start": "575839",
    "end": "582480"
  },
  {
    "text": "an open sort of serviceable platform a platform where you can where you can uh upgrade software components in there um",
    "start": "582480",
    "end": "590000"
  },
  {
    "text": "a platform where you can have in independently developed code coexist in the same space with some guarantees um",
    "start": "590000",
    "end": "598279"
  },
  {
    "text": "and something that can really like Propel the devices from being fairly static with a set of firmware with I",
    "start": "598279",
    "end": "603839"
  },
  {
    "text": "guess known Security box and everything to something that's really extensible and configurable something that you can",
    "start": "603839",
    "end": "609200"
  },
  {
    "text": "uh in your home install a bit of software on that will enable some functionality to uh to to come to life I",
    "start": "609200",
    "end": "614880"
  },
  {
    "text": "think this is this is really core and right now there are a few players that are trying to build this thing but they're mostly focusing on",
    "start": "614880",
    "end": "621120"
  },
  {
    "text": "microprocessor and upwards um we see very few that are trying like really hard in the lower in space there are few",
    "start": "621120",
    "end": "627200"
  },
  {
    "text": "but but it's hard so I guess we have a few requests here",
    "start": "627200",
    "end": "632680"
  },
  {
    "text": "we we'd like a lot of things like it has to be managed language and there has to be everything it's it's like libraries",
    "start": "632680",
    "end": "639279"
  },
  {
    "text": "and modulous serviceability changing code and it has to run on really small microcontrollers and it's it seems hard",
    "start": "639279",
    "end": "644839"
  },
  {
    "text": "to to get everything you want uh I know people that really want a pony and they're not having it people that want",
    "start": "644839",
    "end": "650079"
  },
  {
    "text": "like golden toilet seats uh it's not necessarily in the carts either but I think we can actually have a lot of this",
    "start": "650079",
    "end": "656360"
  },
  {
    "text": "maybe not everything but I'll tell you what where we can start and then we can figure out how we can move towards having",
    "start": "656360",
    "end": "662560"
  },
  {
    "text": "everything so one possibility is to start with a high level language like Dart and this is where sort of I come in",
    "start": "662560",
    "end": "668839"
  },
  {
    "text": "um dot is a language I I helped design a few years ago and we started out designing it for a for a web setting but",
    "start": "668839",
    "end": "675480"
  },
  {
    "text": "it's a fairly general purpose and familiar language to most it is a high level managed language object oriented",
    "start": "675480",
    "end": "683120"
  },
  {
    "text": "and it has a syntax that looks a lot like C which I think is a benefit in this in this context there are newer and",
    "start": "683120",
    "end": "688399"
  },
  {
    "text": "cooler languages around I think too that that look way less than c um or way less",
    "start": "688399",
    "end": "694120"
  },
  {
    "text": "like C than than Dart does but in this context I think it's really a strength that you you have something where like",
    "start": "694120",
    "end": "699920"
  },
  {
    "text": "the usual things you do in a in a small embedded setting uh the kind of code snippet you see there will sort of",
    "start": "699920",
    "end": "705079"
  },
  {
    "text": "translate fairly easily to this this thing um if you want to like play around",
    "start": "705079",
    "end": "710320"
  },
  {
    "text": "with dart you can go to our Dart pad. dartlang.org site where you can just try it out in a in a browser context just to",
    "start": "710320",
    "end": "715519"
  },
  {
    "text": "get a feel for what the language is but this is not a presentation about Dart so it's just like enabling technology for doing what I'm going to show",
    "start": "715519",
    "end": "722160"
  },
  {
    "text": "you so the one problem we do have though is that does Dart actually run on these microcontrol at all um and up until now",
    "start": "722160",
    "end": "729600"
  },
  {
    "text": "it's been a uh not really we've been running on microprocessors and in different contexts on smartphones and",
    "start": "729600",
    "end": "735199"
  },
  {
    "text": "smart watches and things like that but on the sort of the lower end of what we usually think of as as device that you",
    "start": "735199",
    "end": "741920"
  },
  {
    "text": "can program we haven't been doing very well so I'm gonna I'm here to tell you that's that's changed uh so I'm going to",
    "start": "741920",
    "end": "747639"
  },
  {
    "text": "give you like a sneak peek of a project we've been running uh for a little while we call it Fletch Fletch is a small part",
    "start": "747639",
    "end": "753560"
  },
  {
    "text": "of a DOT so that's the reason why we chose that name and Fletch is a system that is small and light productive and",
    "start": "753560",
    "end": "760279"
  },
  {
    "text": "and serviceable and and fairly simple and accessible that allows you to write high level in this case dot code for",
    "start": "760279",
    "end": "765680"
  },
  {
    "text": "small microcontrollers so to actually make a",
    "start": "765680",
    "end": "771079"
  },
  {
    "start": "769000",
    "end": "859000"
  },
  {
    "text": "small runtime or small virtual machine for a managed language fit in a in a in a microcontroller setting and we have to",
    "start": "771079",
    "end": "777519"
  },
  {
    "text": "think about what what is usually put in the in these systems and what we can remove so this is not necessarily the",
    "start": "777519",
    "end": "783760"
  },
  {
    "text": "the common definition of a virtual machine but we see the trend right now where people think of a virtual machine is something that executes source code",
    "start": "783760",
    "end": "789279"
  },
  {
    "text": "directly uh so it just takes care of compiling the source code to whatever native code it needs to compile it to",
    "start": "789279",
    "end": "794839"
  },
  {
    "text": "and to run it h it needs to have an execution in that can run that code it has to have a garbage collector and some",
    "start": "794839",
    "end": "800279"
  },
  {
    "text": "way of defining classes and objects and it has to have pretty good debugging support that's that all sort of adds up",
    "start": "800279",
    "end": "806000"
  },
  {
    "text": "and and makes virtual machines today like fairly big if you look at a like V8 from JavaScript that I helped build it's",
    "start": "806000",
    "end": "811360"
  },
  {
    "text": "it's not a small system anymore it probably was the first three months but like you get more demand for new",
    "start": "811360",
    "end": "816720"
  },
  {
    "text": "features and new performance and you sort of it piles up so things we can certainly think of removing is the",
    "start": "816720",
    "end": "821920"
  },
  {
    "text": "source code compiler that will get us back to more common systems where the compiler and the runtime were more",
    "start": "821920",
    "end": "828279"
  },
  {
    "text": "separated like like back in the day and also what you have with GCC and llvm and we can think about whether or",
    "start": "828279",
    "end": "834320"
  },
  {
    "text": "not the debugging support can be made simpler smaller and have like a like a really good protocols that allow to do",
    "start": "834320",
    "end": "841320"
  },
  {
    "text": "like really fancy debugging and and working with the system without these things execution engine object model and",
    "start": "841320",
    "end": "847480"
  },
  {
    "text": "garbage like they're really hard to live without in a managed high level language so what we Tred to do is to build a",
    "start": "847480",
    "end": "852880"
  },
  {
    "text": "system that has basically only those parts on running on the",
    "start": "852880",
    "end": "858000"
  },
  {
    "text": "microcontroller so the way we've split it up is that we have a a compiler usually running on a a developer machine",
    "start": "858000",
    "end": "864199"
  },
  {
    "start": "859000",
    "end": "956000"
  },
  {
    "text": "it doesn't really have to run any anywhere particular it can run anywhere you want to that talks to a time",
    "start": "864199",
    "end": "870000"
  },
  {
    "text": "potentially on another system and the the interface between these two things is kind of interesting so the runtime",
    "start": "870000",
    "end": "876320"
  },
  {
    "text": "needs to be very simple so the interface also has to be simple so what we've built is actually a a runtime that has a",
    "start": "876320",
    "end": "882680"
  },
  {
    "text": "sort of a command driven uh API that allows the system over here the compiler",
    "start": "882680",
    "end": "887720"
  },
  {
    "text": "to ask it to do certain things for it underneath it's a um it's a stack machine so you can you can push new",
    "start": "887720",
    "end": "894240"
  },
  {
    "text": "state onto the stack of this runtime thing and you can manipulate a build new",
    "start": "894240",
    "end": "899639"
  },
  {
    "text": "class structures Define new objects Define new methods through this uh this",
    "start": "899639",
    "end": "904920"
  },
  {
    "text": "API and to let the compiler keep track of which classes end up where in the system and give them sort of symbolic",
    "start": "904920",
    "end": "910959"
  },
  {
    "text": "names we allow the compiler to associate arbitrary IDs with sort of any entity",
    "start": "910959",
    "end": "916800"
  },
  {
    "text": "that's running on the runtime over there the runtime doesn't really care about this mapping so I put it sort of off the side here uh but the compiler may need",
    "start": "916800",
    "end": "924240"
  },
  {
    "text": "to know later on when it gets say an an object back that's an instance of a certain class",
    "start": "924240",
    "end": "929519"
  },
  {
    "text": "so the system needs to be able to communicate that this instance is of class 7,49 and then the compiler will know",
    "start": "929519",
    "end": "936480"
  },
  {
    "text": "what that means so it's basically like taking the symbolic debugging information and putting that off the side it's not unheard of in other",
    "start": "936480",
    "end": "943160"
  },
  {
    "text": "systems as well so it's not super novel but we don't see people building these systems anymore the way they they used",
    "start": "943160",
    "end": "948680"
  },
  {
    "text": "to so we've taken a step back you could say and separate runtime debugging info and the",
    "start": "948680",
    "end": "954959"
  },
  {
    "text": "compiler so the kind of things we do uh we do all this over a y protocol so we can run this remotely um we don't really",
    "start": "954959",
    "end": "961680"
  },
  {
    "start": "956000",
    "end": "1164000"
  },
  {
    "text": "care too much what it is right now it's mostly based on TCP IP but you can go way lower and do something over uarts",
    "start": "961680",
    "end": "967519"
  },
  {
    "text": "and whatnot um but the things you can do with this kind of wire protocol is you can set up the program structure you can",
    "start": "967519",
    "end": "972600"
  },
  {
    "text": "Define new methods and new classes uh but you can also change the program structure um you can change the method",
    "start": "972600",
    "end": "978680"
  },
  {
    "text": "table of a class and say from this point forward I really want this class to also have a method called bar instead of just",
    "start": "978680",
    "end": "985839"
  },
  {
    "text": "having a method called Fu that means you can change the behavior of the code running on your microcontroller while you're developing on it which is",
    "start": "985839",
    "end": "992399"
  },
  {
    "text": "something known from other like more uh like bigger systems this like live or interactive way of working with the",
    "start": "992399",
    "end": "998639"
  },
  {
    "text": "system but it's something we we rarely see in this space you can also change schemas uh this a it's sort of a",
    "start": "998639",
    "end": "1005360"
  },
  {
    "text": "terminology used for describing the the thing that happens when you change the layout of a class by adding new fields",
    "start": "1005360",
    "end": "1010600"
  },
  {
    "text": "for instance uh the difficult part here is that if you have say 100 objects of a",
    "start": "1010600",
    "end": "1016079"
  },
  {
    "text": "certain class in your system and you then go ahead and add another field or remove a field from that class you need",
    "start": "1016079",
    "end": "1021560"
  },
  {
    "text": "to do something to all these objects as well the system supports this it just runs through the objects and manipulates them upgrades them in place uh to make",
    "start": "1021560",
    "end": "1029120"
  },
  {
    "text": "them uh sort of have the new kind of format definition that the class implies we also have a fairly simple",
    "start": "1029120",
    "end": "1036079"
  },
  {
    "text": "protocol for debugging the running program you can start it up you can set break points you can restart the activation but it all happens over this",
    "start": "1036079",
    "end": "1042038"
  },
  {
    "text": "wire protocol and there's a lot of things this debugger cannot do it doesn't know about source code it doesn't know about locations in in your",
    "start": "1042039",
    "end": "1049960"
  },
  {
    "text": "uh text files it doesn't know about any those things it all has to be mapped out from the outside um I'm going to give",
    "start": "1049960",
    "end": "1055679"
  },
  {
    "text": "you a small demo of what how this actually works out in practice in a little while so what you need to remember is",
    "start": "1055679",
    "end": "1062000"
  },
  {
    "text": "just like the runtime is is super small it's focused on doing one thing well and that is being like a a runtime for",
    "start": "1062000",
    "end": "1067880"
  },
  {
    "text": "running programs but it does have a um an API that allow you to manipulate from the outside in this sort of Stack based",
    "start": "1067880",
    "end": "1074360"
  },
  {
    "text": "machine and that's driven from the compiler there's a sort of a an interesting uh",
    "start": "1074360",
    "end": "1079760"
  },
  {
    "text": "side effect of this design is that we we've found sort of historically that people working on Virtual machines they",
    "start": "1079760",
    "end": "1085440"
  },
  {
    "text": "really hate adding new functionalities to make developers life easier for some reason we just want to focus on",
    "start": "1085440",
    "end": "1091360"
  },
  {
    "text": "performance performance performance maybe maybe size as well but those are the things we care about um whereas",
    "start": "1091360",
    "end": "1097600"
  },
  {
    "text": "people that work on the compiler side they may care about good error messages and like and those things so having the split where uh you don't have to",
    "start": "1097600",
    "end": "1105080"
  },
  {
    "text": "convince the team delivering the small runtime to add more functionality to improve the command line debugging",
    "start": "1105080",
    "end": "1111120"
  },
  {
    "text": "interface is actually kind of nice uh it just there is resistance like even in me when I work on the runtime to uh to",
    "start": "1111120",
    "end": "1117720"
  },
  {
    "text": "somehow just keep making it hard for developers to use this system because I want to keep it small so the split makes",
    "start": "1117720",
    "end": "1123159"
  },
  {
    "text": "it makes it much cleaner and you can add more weight to the compiler if that is better for developers so I don't know if",
    "start": "1123159",
    "end": "1130280"
  },
  {
    "text": "that applies to everyone working on VMS but it certainly applies to me one other guy wanted to join",
    "start": "1130280",
    "end": "1136720"
  },
  {
    "text": "too so one thing having said all that about performance I I do actually want to spend a few",
    "start": "1136720",
    "end": "1142200"
  },
  {
    "text": "minutes about talking about performance of these systems and how do you make them fast one thing that a system like",
    "start": "1142200",
    "end": "1147600"
  },
  {
    "text": "Dart does is that every method call is very Dynamic you have very little static information to go by so you need to make",
    "start": "1147600",
    "end": "1153240"
  },
  {
    "text": "that fast it's very nice to work on a system like this but the runtime has to be fast too so this like a super short",
    "start": "1153240",
    "end": "1158880"
  },
  {
    "text": "intute just to explain you a few technical details about how we're doing this system so here is a class hierarchy",
    "start": "1158880",
    "end": "1166640"
  },
  {
    "start": "1164000",
    "end": "1518000"
  },
  {
    "text": "where Class C extends B that extends a and the class D extends the class A so",
    "start": "1166640",
    "end": "1172320"
  },
  {
    "text": "but is not related to B or C there is a bar method in a that is overwritten in C",
    "start": "1172320",
    "end": "1177480"
  },
  {
    "text": "there's a f meth method in B and there's a separate bass method in D um so usually if you wanted to implement uh",
    "start": "1177480",
    "end": "1184200"
  },
  {
    "text": "dispatching that is calling a method on one of these objects or an object sort of derived from one of these classes you",
    "start": "1184200",
    "end": "1190159"
  },
  {
    "text": "you go and look at the class structure and then you Traverse the hierarchy and figure out for instance if you're calling say bar on a b instance then you",
    "start": "1190159",
    "end": "1198240"
  },
  {
    "text": "say well bar doesn't isn't defined in B so let's look in the super class you go there and you find the method and you're",
    "start": "1198240",
    "end": "1203400"
  },
  {
    "text": "happy um often people end up adding a level of caching on top of that to make it faster but that's sort of the the",
    "start": "1203400",
    "end": "1209280"
  },
  {
    "text": "sort of the gist of it we found that these caches on really small devices are hard to control especially in the size",
    "start": "1209280",
    "end": "1214960"
  },
  {
    "text": "of them they have to be fairly big to uh to be hit uh quite frequently and if you",
    "start": "1214960",
    "end": "1220320"
  },
  {
    "text": "don't make them big enough then you end up having to trse the hierarchy too often that makes them slow you really want something more",
    "start": "1220320",
    "end": "1226400"
  },
  {
    "text": "predictable so luckily there is a way of making it more predictable so you can make a big table here with all the",
    "start": "1226400",
    "end": "1232799"
  },
  {
    "text": "classes out here a b c and d and the method names down here Fu bar and bass",
    "start": "1232799",
    "end": "1238080"
  },
  {
    "text": "and then you can say like Fu the fu method is not implemented on a but it's implemented on B and the B version of",
    "start": "1238080",
    "end": "1244280"
  },
  {
    "text": "this is also inherited to to to the C uh class so if you want to call Fu on a B",
    "start": "1244280",
    "end": "1250360"
  },
  {
    "text": "or C or D just look up with the class and you find the right thing right away the same for bar which is inherited to",
    "start": "1250360",
    "end": "1256679"
  },
  {
    "text": "all of them there's a separate version for C but other than that we have a bar in all of them and bass is only on D",
    "start": "1256679",
    "end": "1262919"
  },
  {
    "text": "does that make sense we can build a table like this the problem is that gets really big really quickly like if you",
    "start": "1262919",
    "end": "1268480"
  },
  {
    "text": "have n classes and m method names you get a table of size n * m certainly",
    "start": "1268480",
    "end": "1273679"
  },
  {
    "text": "doesn't fit on small microcontrollers it actually doesn't fit anywhere so we have to do something about that research to the rescue like a long",
    "start": "1273679",
    "end": "1281240"
  },
  {
    "text": "time ago people really worried about these things so we sort of we're returning to that and we're looking at what has um what what's been tried out",
    "start": "1281240",
    "end": "1287720"
  },
  {
    "text": "in this space before and one thing that's really promising is what's called selector based row displacement it",
    "start": "1287720",
    "end": "1293039"
  },
  {
    "text": "sounds very fancy and it sort of is kind of clever the the core notion is that there are holes in here maybe some of",
    "start": "1293039",
    "end": "1299880"
  },
  {
    "text": "the other rows like this row could fit in some of these holes maybe we can overlay them somehow and adjust them and",
    "start": "1299880",
    "end": "1306200"
  },
  {
    "text": "make them all sort of fit in one one row instead of in three rows in this case so",
    "start": "1306200",
    "end": "1312039"
  },
  {
    "text": "how would that look well one way of doing it would be to say we take the bar things as a very long row you could say",
    "start": "1312039",
    "end": "1318279"
  },
  {
    "text": "and put it first then we add the F methods here and then we add bass down",
    "start": "1318279",
    "end": "1324039"
  },
  {
    "text": "there um I'll explain why there is a hole here in in a little while but it's important to notice that there can be",
    "start": "1324039",
    "end": "1330039"
  },
  {
    "text": "holes in a representation like this so the way we actually go about constructing this one big table is that",
    "start": "1330039",
    "end": "1335799"
  },
  {
    "text": "we want the uh we want to associate a an offset with all these method names so",
    "start": "1335799",
    "end": "1341080"
  },
  {
    "text": "that the the offset plus the the class number you could say gives you the right",
    "start": "1341080",
    "end": "1346880"
  },
  {
    "text": "index into this table so for bar I've chosen offset zero so A's index is zero",
    "start": "1346880",
    "end": "1353600"
  },
  {
    "text": "plus offet plus offset zero end ends up here and you hit a bar you hit a bar c",
    "start": "1353600",
    "end": "1358880"
  },
  {
    "text": "bar and a bar that sort of works like before you could say so for Fu it's a",
    "start": "1358880",
    "end": "1363919"
  },
  {
    "text": "little bit more complex we want this beue implemented on the on the first",
    "start": "1363919",
    "end": "1370039"
  },
  {
    "text": "class with index one to be hit um and hit entry four here so we need the",
    "start": "1370039",
    "end": "1375480"
  },
  {
    "text": "offset to be be three so that the B is one one plus these three hits this one",
    "start": "1375480",
    "end": "1381360"
  },
  {
    "text": "and that works out well for the C case as well so we end up here with the five 3 plus 2 so if we were to just add the the bass",
    "start": "1381360",
    "end": "1389880"
  },
  {
    "text": "case right here we would end up having a um a small issue and that is that the",
    "start": "1389880",
    "end": "1395480"
  },
  {
    "text": "bass thing would actually end up having offset three as well like six plus these three here uh or six minus the three",
    "start": "1395480",
    "end": "1403799"
  },
  {
    "text": "here gives us um an offset of three but it's really convenient that they have unique offset so we just push it further",
    "start": "1403799",
    "end": "1410880"
  },
  {
    "text": "out get a hole and give it offset four instead the reason why we need these offsets to be unique is that when you",
    "start": "1410880",
    "end": "1416559"
  },
  {
    "text": "look up here you take the method name in this case let's say bass you take the uh",
    "start": "1416559",
    "end": "1422480"
  },
  {
    "text": "the class ID you have right now when you call something it could be one or two or three or even zero and you add them",
    "start": "1422480",
    "end": "1428440"
  },
  {
    "text": "together and you look up in the table you want to make sure you're not hitting an entry from one of one of the other rows so what we store in the uh in these",
    "start": "1428440",
    "end": "1436760"
  },
  {
    "text": "entries is not just just the method to call it's also something to verify we're hitting the right thing and that's the offset as well so we're storing offset",
    "start": "1436760",
    "end": "1444600"
  },
  {
    "text": "three in here and here and for off the forign here so if we do hit something here based on a selector of bass we will",
    "start": "1444600",
    "end": "1451960"
  },
  {
    "text": "know that it's not applicable otherwise whoops we might end up in trouble so this means that if you do",
    "start": "1451960",
    "end": "1457720"
  },
  {
    "text": "this do it this way you get a guaranteed constant time Dynamic dispatching you look up in the table and you say is this",
    "start": "1457720",
    "end": "1464799"
  },
  {
    "text": "entry correct for me if it is you call it if it isn't then you say to the system this object doesn't implement",
    "start": "1464799",
    "end": "1471320"
  },
  {
    "text": "this method so it's very very simple at runtime we can compute this table before",
    "start": "1471320",
    "end": "1476679"
  },
  {
    "text": "we even start the application and just ship it as part of the application um so it doesn't have any runtime cost to",
    "start": "1476679",
    "end": "1482440"
  },
  {
    "text": "build it um and it it only takes up like 10 to 70% more space than than V tables",
    "start": "1482440",
    "end": "1488480"
  },
  {
    "text": "known from other class-based systems and it's kind of cool like the reason why we cannot use V tables is because we don't have static type annotations everywhere",
    "start": "1488480",
    "end": "1495399"
  },
  {
    "text": "H so it really doesn't work out but we can get the benefits of tables u in this in this different way that was the very",
    "start": "1495399",
    "end": "1502360"
  },
  {
    "text": "short interlude on how we speed things up let's return to something that's a little bit more tangible the programming",
    "start": "1502360",
    "end": "1509159"
  },
  {
    "text": "model so if we have this nice high level language and we want people to develop for small devices based on it um what do",
    "start": "1509159",
    "end": "1515520"
  },
  {
    "text": "we offer them like what do they actually have to write so what we built is a is something",
    "start": "1515520",
    "end": "1521480"
  },
  {
    "start": "1518000",
    "end": "1652000"
  },
  {
    "text": "that fits on top of a small embedded realtime OS um so that's the Fletch runtime um on top of that we we have",
    "start": "1521480",
    "end": "1528559"
  },
  {
    "text": "support for running multiple independent programs um and these programs really don't have to need like they don't need",
    "start": "1528559",
    "end": "1534039"
  },
  {
    "text": "to know about each other they can be upgraded independently and you can sort of install them in the system and and replace them as as you go these programs",
    "start": "1534039",
    "end": "1542600"
  },
  {
    "text": "can actually be running in multiple instances at the same time so there are processes running on top of this and it's very much like a a uni system you",
    "start": "1542600",
    "end": "1549000"
  },
  {
    "text": "could say just built by us in a much smaller space some programs may actually",
    "start": "1549000",
    "end": "1554480"
  },
  {
    "text": "not be running right now others might be executing in with two processes others might be running even more I'll tell you",
    "start": "1554480",
    "end": "1560679"
  },
  {
    "text": "why it's it actually makes sense to consider having a setup where you have in this case what seven processes",
    "start": "1560679",
    "end": "1565799"
  },
  {
    "text": "running on top is because we' made the process um very lightweight so a a a process in this in",
    "start": "1565799",
    "end": "1572760"
  },
  {
    "text": "this space has a small memory footprint right now it's around 4K um that needs to go further down to be really",
    "start": "1572760",
    "end": "1579279"
  },
  {
    "text": "applicable to the smallest devices um but it does mean that you can get a completely separate instance of a",
    "start": "1579279",
    "end": "1584320"
  },
  {
    "text": "program running in around 4K we share all the bite codes and all the things that make the system work all the class",
    "start": "1584320",
    "end": "1590200"
  },
  {
    "text": "structures everything is shared so you only pay for the data per per process it's not a new thing in a in a in an OS",
    "start": "1590200",
    "end": "1596679"
  },
  {
    "text": "setting this is how most operating systems work um but it's it's kind of new in a in a very small OS space where",
    "start": "1596679",
    "end": "1603440"
  },
  {
    "text": "people don't have the luxury of mmus where they can share and have uh read or write only uh well read only segments",
    "start": "1603440",
    "end": "1610600"
  },
  {
    "text": "that are then shared that's harder to get by in those cases one other thing that's kind of neat here is that we can actually allow",
    "start": "1610600",
    "end": "1616559"
  },
  {
    "text": "these system uh processes to be blocked and just waiting for something to happen without it taking up system resources on",
    "start": "1616559",
    "end": "1622320"
  },
  {
    "text": "these small devices often you only have a number of threats that are available to you maybe maybe only one maybe a",
    "start": "1622320",
    "end": "1628880"
  },
  {
    "text": "fixed number um and you really don't want that like to hold up a a native OS level threat to block a process so we",
    "start": "1628880",
    "end": "1635919"
  },
  {
    "text": "made it so that if a process blocks we return that native threat to the system we can do something interesting and and",
    "start": "1635919",
    "end": "1641320"
  },
  {
    "text": "something else in that space if you do have more cores which may not actually apply to microc",
    "start": "1641320",
    "end": "1646880"
  },
  {
    "text": "controls at this point then they actually do run in parallel these things which is kind of neat so here's a a piece of code that",
    "start": "1646880",
    "end": "1654679"
  },
  {
    "start": "1652000",
    "end": "1730000"
  },
  {
    "text": "that sort of shows you how you can use processes to to deal with um incoming connections as separate entities that",
    "start": "1654679",
    "end": "1661480"
  },
  {
    "text": "that interact very uh very little so if you create like a server socket somewhere in a sort of Unix way you can",
    "start": "1661480",
    "end": "1668159"
  },
  {
    "text": "then uh you can accept incoming connections by spawning a new process and then you actually just have the code",
    "start": "1668159",
    "end": "1673679"
  },
  {
    "text": "in here uh as some sort of an inlined uh closure that actually runs in a separate",
    "start": "1673679",
    "end": "1679120"
  },
  {
    "text": "process that can then go ahead and send back something to the to the sucket and close it off when it's done with that in",
    "start": "1679120",
    "end": "1685679"
  },
  {
    "text": "this case it probably doesn't make a whole lot of sense to run that as a separate process but if there was some compute in here or things were having it",
    "start": "1685679",
    "end": "1692320"
  },
  {
    "text": "sandboxed and off to the side not being able to interact with the system not being able to to mess with the server",
    "start": "1692320",
    "end": "1697679"
  },
  {
    "text": "for instance it's kind of neat to be able to to do the separation even the small smallest of of devices this um",
    "start": "1697679",
    "end": "1705120"
  },
  {
    "text": "this spawn accept method is actually a blocking thing it doesn't actually return uh until it's accepted a",
    "start": "1705120",
    "end": "1711720"
  },
  {
    "text": "connection so that that also shows that it's kind of nice you can just reason about the code you just block here until",
    "start": "1711720",
    "end": "1717519"
  },
  {
    "text": "something happens like the latest craze is to do everything async uh which is really nice on a in many ways it's",
    "start": "1717519",
    "end": "1724480"
  },
  {
    "text": "really a nice model it's just really hard to program um in sort of large scale scale",
    "start": "1724480",
    "end": "1730360"
  },
  {
    "start": "1730000",
    "end": "1817000"
  },
  {
    "text": "things so the messages are actually uh always blocking in in in this version of",
    "start": "1730360",
    "end": "1735399"
  },
  {
    "text": "Dart here and we do have a way of communicating between the process that you can set up so you can spawn a process that has access to a port that",
    "start": "1735399",
    "end": "1742640"
  },
  {
    "text": "is actually uh represents a capability to send to a certain Channel if you know go and go routines uh like the the way",
    "start": "1742640",
    "end": "1749720"
  },
  {
    "text": "they use channel to communicate between them it's very similar to what we have here there are differences but this very similar so here you have one process",
    "start": "1749720",
    "end": "1757039"
  },
  {
    "text": "sending messages and one process consistently sort of blocked on receiving the next message and then just",
    "start": "1757039",
    "end": "1763200"
  },
  {
    "text": "printing in a loop not the most interesting thing to run on a small device but it just shows you you can",
    "start": "1763200",
    "end": "1768399"
  },
  {
    "text": "communicate between these things and uh and then build up um a sort of a set of",
    "start": "1768399",
    "end": "1774679"
  },
  {
    "text": "communicating process that that fulfill or or deliver some uh result for you",
    "start": "1774679",
    "end": "1780039"
  },
  {
    "text": "does that make does code make sense uh this is start code uh it the only scary thing here is probably the closure but",
    "start": "1780039",
    "end": "1786440"
  },
  {
    "text": "that's I think that's that's getting sort of that's being put in most languages these days so hopefully you probably have to get used to these kind",
    "start": "1786440",
    "end": "1792399"
  },
  {
    "text": "of things in the future anyway let's see maybe this was a little bit too easy",
    "start": "1792399",
    "end": "1797679"
  },
  {
    "text": "right in this case what you saw here was that that the only things sent between these uh these process was were inures",
    "start": "1797679",
    "end": "1803519"
  },
  {
    "text": "that's fairly easy to do and we found that it's also too limiting uh being a able to only send say primitive values",
    "start": "1803519",
    "end": "1810039"
  },
  {
    "text": "like strings integers it's not really enough to build up a something uh interesting so like we could have",
    "start": "1810039",
    "end": "1817240"
  },
  {
    "start": "1817000",
    "end": "1879000"
  },
  {
    "text": "something like shared State concurrency so you have multiple processes like using the same state and just operating",
    "start": "1817240",
    "end": "1823120"
  },
  {
    "text": "on it um and the way to do that is just allow any object to be sent at a message",
    "start": "1823120",
    "end": "1828399"
  },
  {
    "text": "to someone else without copying it you just get a reference to the object um that means that any at any given time",
    "start": "1828399",
    "end": "1836080"
  },
  {
    "text": "that there could be multiple process that actually have a reference to the same objects and they can just operate on that same object in parallel sounds",
    "start": "1836080",
    "end": "1842720"
  },
  {
    "text": "good um You probably have to have lots of sort of synchronization Primitives in the language to make this work like",
    "start": "1842720",
    "end": "1848039"
  },
  {
    "text": "locks and all the like semaphor and latches and whatnot it's a fairly common",
    "start": "1848039",
    "end": "1853440"
  },
  {
    "text": "model this what we've seen sort of built in Java in many ways uh and other system",
    "start": "1853440",
    "end": "1859000"
  },
  {
    "text": "to I don't like it I think it's too complicated um like so it's kind of nice to be able to send any object between",
    "start": "1859000",
    "end": "1865440"
  },
  {
    "text": "these independent parts of your app um but it's just I think it's too much to say that then suddenly every single",
    "start": "1865440",
    "end": "1871399"
  },
  {
    "text": "object also might be like accessed in parallel by multiple independent threats I think it's too much so what we put in",
    "start": "1871399",
    "end": "1877360"
  },
  {
    "text": "instead is actually shared immutable State cons concurrency so you can do all of what I just said as long as you",
    "start": "1877360",
    "end": "1884120"
  },
  {
    "start": "1879000",
    "end": "2059000"
  },
  {
    "text": "promise and actually show us that the only things you send across are deeply IM mutable objects you can build up",
    "start": "1884120",
    "end": "1890440"
  },
  {
    "text": "arbitrarily large um graphs of these uh well Asic graphs of these deeply mutable",
    "start": "1890440",
    "end": "1896039"
  },
  {
    "text": "structures and pass them as messages between these things so um suddenly it's",
    "start": "1896039",
    "end": "1901480"
  },
  {
    "text": "safe for multiple process to operate on the same things they can only read right they are immutable and you still have no",
    "start": "1901480",
    "end": "1906679"
  },
  {
    "text": "need for explicit synchronization Primitives that means that it's it's possible for say 100 process to",
    "start": "1906679",
    "end": "1912360"
  },
  {
    "text": "orchestrate something by building up State sharing it and working with it",
    "start": "1912360",
    "end": "1918200"
  },
  {
    "text": "so there is one more thing like we've seen so far that a process can block and wait for something to happen but what if",
    "start": "1918200",
    "end": "1924600"
  },
  {
    "text": "you have a process that needs to wait for multiple sort of independent things to happen how how do you deal with that in the async model you just sort of",
    "start": "1924600",
    "end": "1931360"
  },
  {
    "text": "register multiple independent callbacks and say if this this thing happens I'm going to do this if that thing happens",
    "start": "1931360",
    "end": "1936679"
  },
  {
    "text": "I'm going to do that it would be nice to be able to support something like that so what we put in here is is something",
    "start": "1936679",
    "end": "1942880"
  },
  {
    "text": "not completely unheard of another language either fibers uh so a lightweight threading uh model on top of",
    "start": "1942880",
    "end": "1949639"
  },
  {
    "text": "the system that allows you to Fork off new fibers that then end up doing blocking operations like in here so the",
    "start": "1949639",
    "end": "1956919"
  },
  {
    "text": "the case here is that you want to wait until some temperature sensor sensor",
    "start": "1956919",
    "end": "1962000"
  },
  {
    "text": "actually produces a new value for you so you block on the input in here say what's the current value if it's",
    "start": "1962000",
    "end": "1967240"
  },
  {
    "text": "different from the last one we sent some message to someone um and we just keep",
    "start": "1967240",
    "end": "1972399"
  },
  {
    "text": "on going in a loop just like waiting for the next event to happen but if you do have two sensors like a humidity and",
    "start": "1972399",
    "end": "1977960"
  },
  {
    "text": "temperature sensor sensor you need to somehow like be blocked on two different things at the same time and this is",
    "start": "1977960",
    "end": "1983880"
  },
  {
    "text": "where our fiber model comes in and you can just have a an arbitrary amount of of fibers in cuton waiting for something",
    "start": "1983880",
    "end": "1991240"
  },
  {
    "text": "this is very close to what you have with an async programming model except that it's very clear what's going to happen",
    "start": "1991240",
    "end": "1996679"
  },
  {
    "text": "when the uh receive call up here unblocks when a value is produced you can you can read it right here and if",
    "start": "1996679",
    "end": "2002440"
  },
  {
    "text": "you work in a debugger it's much easier to reason about what the next thing is is going to happen often in an async model you you lose uh touch with what's",
    "start": "2002440",
    "end": "2010480"
  },
  {
    "text": "sort of inced in your um in in your event queue and also like like who are",
    "start": "2010480",
    "end": "2015760"
  },
  {
    "text": "going to process these things and how it's going to fit together it's much harder to to reason about in practice at least so this is a different model for",
    "start": "2015760",
    "end": "2022240"
  },
  {
    "text": "it where we allow multiple fibers within one process to to run these fibers are",
    "start": "2022240",
    "end": "2027399"
  },
  {
    "text": "cooperatively scheduled we only change between them uh whenever one of them blocks we change to the next ready one",
    "start": "2027399",
    "end": "2034000"
  },
  {
    "text": "uh so there is no parallelism in here there's no support for that it's it is just just a way of of like logically",
    "start": "2034000",
    "end": "2039799"
  },
  {
    "text": "having independent threats of control uh sort of participating in fulfilling some",
    "start": "2039799",
    "end": "2045120"
  },
  {
    "text": "sort of task so all that and then on a beta",
    "start": "2045120",
    "end": "2050839"
  },
  {
    "text": "device so how do we go about taking a program model that feels like fairly high level to most people and just making it fit in a in a small",
    "start": "2050839",
    "end": "2057679"
  },
  {
    "text": "space well um today we actually uh just announced a very early version of a an",
    "start": "2057679",
    "end": "2064240"
  },
  {
    "start": "2059000",
    "end": "2122000"
  },
  {
    "text": "SDK for doing these things uh in the first version we support devices that are way too big like a Raspberry Pi",
    "start": "2064240",
    "end": "2070320"
  },
  {
    "text": "because they're very available we've seen a lot of people that having fun with that kind of Hardware that want to try out the workflows and try out",
    "start": "2070320",
    "end": "2076000"
  },
  {
    "text": "working with a with a high level language in in context of that so the the setup that we use actually we have a",
    "start": "2076000",
    "end": "2081599"
  },
  {
    "text": "a a developer PC I that's your Mac or Linux box that is connected to a an embedded device in this case a Raspberry",
    "start": "2081599",
    "end": "2088240"
  },
  {
    "text": "Pi um in the in the future this is going to be uh available on on",
    "start": "2088240",
    "end": "2093599"
  },
  {
    "text": "microcontrollers as well uh but we wanted to get started uh well basically today so had something cool to show you",
    "start": "2093599",
    "end": "2098760"
  },
  {
    "text": "guys so the way you run code here is basically you can say I want to run it either on my development SPC or I want",
    "start": "2098760",
    "end": "2104040"
  },
  {
    "text": "to run it on the embedded device and then you get all the feedback back from the system and you can debug and work with it",
    "start": "2104040",
    "end": "2111280"
  },
  {
    "text": "so just I wanted to make sure this was actually in the slide so if people saw this afterwards that they would not be",
    "start": "2111280",
    "end": "2116680"
  },
  {
    "text": "surprised it is very early access it's just to give you a feel for what it is but it's it's usable um the way it works",
    "start": "2116680",
    "end": "2123320"
  },
  {
    "start": "2122000",
    "end": "2336000"
  },
  {
    "text": "is that you can run uh code uh through a the Fletch command and say I want to run",
    "start": "2123320",
    "end": "2128480"
  },
  {
    "text": "this Start program and to change between running it locally and running it remotely on the on the pi all you need",
    "start": "2128480",
    "end": "2134560"
  },
  {
    "text": "to do is to add the a small sort of incantation at the end we're probably going to make that a little bit shorter long term but right now I felt like it",
    "start": "2134560",
    "end": "2140880"
  },
  {
    "text": "was good to be explicit so if you say run it runs locally on my MacBook Pro if",
    "start": "2140880",
    "end": "2146359"
  },
  {
    "text": "you say run it in session remote it means run it on the Raspberry Pi",
    "start": "2146359",
    "end": "2151440"
  },
  {
    "text": "and let's see and I think probably have a little",
    "start": "2151440",
    "end": "2156839"
  },
  {
    "text": "bit of time here to to actually go ahead and show you guys how this works out so here I have the flet command I can just",
    "start": "2156839",
    "end": "2163280"
  },
  {
    "text": "double check that it actually works um and I have the SDK downloaded and I can run these commands I just told you about",
    "start": "2163280",
    "end": "2170200"
  },
  {
    "text": "um locally on this device sorry and it runs on my Mac with",
    "start": "2170200",
    "end": "2177200"
  },
  {
    "text": "the Darwin tag up there but I can also run it on this Raspberry Pi that uh I've",
    "start": "2177200",
    "end": "2182359"
  },
  {
    "text": "got hidden down here somewhere it doesn't really matter that much it's connected with with an Ethernet cable so",
    "start": "2182359",
    "end": "2188280"
  },
  {
    "text": "it should just work when I say run it remotely and so this compiles the code",
    "start": "2188280",
    "end": "2194400"
  },
  {
    "text": "um to bite codes it moves it over it starts it up there it starts a VM instance and it starts communicating",
    "start": "2194400",
    "end": "2199680"
  },
  {
    "text": "with it so in itself this is not super impressive but the nice thing is you can actually start doing more you could say",
    "start": "2199680",
    "end": "2205480"
  },
  {
    "text": "I actually don't want to just run it I want to debug it instead",
    "start": "2205480",
    "end": "2210720"
  },
  {
    "text": "um and that will like move you into the debugger where you can say I want to say",
    "start": "2210720",
    "end": "2215760"
  },
  {
    "text": "put a breakpoint in Main and then run to that and then you're in main you can say I want to see where I'm stuck in this",
    "start": "2215760",
    "end": "2222680"
  },
  {
    "text": "case I'm actually stuck like getting the info from the system before printing it out of course say that's fine just",
    "start": "2222680",
    "end": "2228119"
  },
  {
    "text": "continue and then it prints the things like you so you connect it to the device and you can work with it um next step",
    "start": "2228119",
    "end": "2234160"
  },
  {
    "text": "for us is to make the uh the uh upgrading the code uh very simple to do",
    "start": "2234160",
    "end": "2239280"
  },
  {
    "text": "so that if you change your files on disk and say I actually want to apply those changes over the wire and say let me",
    "start": "2239280",
    "end": "2244599"
  },
  {
    "text": "change the string here and start over in that's method that just works it's not part of what we're sending out today but it's uh it's something we're building so",
    "start": "2244599",
    "end": "2251400"
  },
  {
    "text": "you get to work with the with the code more or less as if it's running on your device and and the promise is to be able",
    "start": "2251400",
    "end": "2257400"
  },
  {
    "text": "to do exactly the same thing for a microcontroller one thing we we uh I sort of told you about but didn't really",
    "start": "2257400",
    "end": "2263880"
  },
  {
    "text": "show you is that uh being able to run lots of processes at the same time is kind of neat um and we can actually do",
    "start": "2263880",
    "end": "2270079"
  },
  {
    "text": "that already today so I have a small program here processes Galore",
    "start": "2270079",
    "end": "2275800"
  },
  {
    "text": "um try that again and it just shows that like you can you can run like a 100,00 process start them",
    "start": "2275800",
    "end": "2282280"
  },
  {
    "text": "up get them to send some messages and uh and and stop it all down again in a fairly",
    "start": "2282280",
    "end": "2288440"
  },
  {
    "text": "quickly and this this is going to show you like we can create these 100,000 processes and send message between them",
    "start": "2288440",
    "end": "2294720"
  },
  {
    "text": "and stop them down in 750 milliseconds we could try that on the the Raspberry",
    "start": "2294720",
    "end": "2300520"
  },
  {
    "text": "Pi clearly if you write this on a on a very small microcontroller the numbers would be very different probably would",
    "start": "2300520",
    "end": "2305640"
  },
  {
    "text": "run out of memory but it's still it's kind of nice to see that even if you do spawn a lot of independent things like",
    "start": "2305640",
    "end": "2311280"
  },
  {
    "text": "these have their own Heap they're garbage collected independently they're very very separate so it works let me return to the presentation",
    "start": "2311280",
    "end": "2319520"
  },
  {
    "text": "so hopefully this gives you an idea of what you kind of what kind of things you can do right it's it's an attempt to build a high level accessible language",
    "start": "2319520",
    "end": "2327960"
  },
  {
    "text": "where the tool chain is also higher level than what you used to but you still get some low of debugging support",
    "start": "2327960",
    "end": "2333960"
  },
  {
    "text": "from the system if we were to actually go ahead and blink some lights on that thing",
    "start": "2333960",
    "end": "2339400"
  },
  {
    "start": "2336000",
    "end": "2879000"
  },
  {
    "text": "clearly you also need access to like the gpio and all that stuff so we built that into the system as a set of packages",
    "start": "2339400",
    "end": "2346000"
  },
  {
    "text": "that you can just install and have fun with and we we believe we can like grow a small ecosystem of support functionality that can do fun stuff for",
    "start": "2346000",
    "end": "2352040"
  },
  {
    "text": "you one interesting thing here is again the model is very simple you just have a loop at some point you say I want to",
    "start": "2352040",
    "end": "2357800"
  },
  {
    "text": "sleep here for 500 milliseconds that means that uh and then you sort of flip the flip the bit on the on the gopo pin",
    "start": "2357800",
    "end": "2365280"
  },
  {
    "text": "um it's very simple model and this doesn't necessarily mean that you're blocking a native threat from the OS",
    "start": "2365280",
    "end": "2370319"
  },
  {
    "text": "underneath you're just saying right now this thing running doesn't have anything else to do so give back the threat and",
    "start": "2370319",
    "end": "2375680"
  },
  {
    "text": "come back later when I have something to do it's just a very simple model if you look at what people write today uh for",
    "start": "2375680",
    "end": "2381839"
  },
  {
    "text": "small os's they write kind of this Co code right but it doesn't really scale well upwards when you start building big",
    "start": "2381839",
    "end": "2387119"
  },
  {
    "text": "things our system will hopefully this code is also like relatively readable and easy to get",
    "start": "2387119",
    "end": "2393520"
  },
  {
    "text": "through so like the the short version of this is um something like this like I think the",
    "start": "2393520",
    "end": "2399640"
  },
  {
    "text": "world really needs more productive embedded developers like the growth in devices is is really impressive um but",
    "start": "2399640",
    "end": "2407680"
  },
  {
    "text": "there are way too sort of few people out there that can really develop something",
    "start": "2407680",
    "end": "2412880"
  },
  {
    "text": "amazing in that space I think we have to change that otherwise it's going to be the same 100 people in the world that needs to Pro produce all the code it",
    "start": "2412880",
    "end": "2419839"
  },
  {
    "text": "doesn't really scale um it's certainly a problem that too many developers they lack the skills to",
    "start": "2419839",
    "end": "2426359"
  },
  {
    "text": "Target EMB bettered devices this is not because of developers that are like it's not because we have bad developers It's really because of the constraint that",
    "start": "2426359",
    "end": "2433800"
  },
  {
    "text": "targeting embedded devices leaves you with I mean it's really hard I'm not saying that having a high level language",
    "start": "2433800",
    "end": "2438839"
  },
  {
    "text": "and having a a managed systems and all that stuff is going to solve all problems because you still have",
    "start": "2438839",
    "end": "2443960"
  },
  {
    "text": "constraints here that you're not used to but it it makes it a lot easier to get started and a lot easier to start reasoning out the hard problems not",
    "start": "2443960",
    "end": "2450359"
  },
  {
    "text": "setting up the tool chain and working with GDP so again we need more developers and",
    "start": "2450359",
    "end": "2456800"
  },
  {
    "text": "right now the it's hard to teach them to use the current offerings for these lowend devices we need to make that",
    "start": "2456800",
    "end": "2464520"
  },
  {
    "text": "easier I think it goes without saying that productivity is higher with with better tools than a managed language um",
    "start": "2464520",
    "end": "2471200"
  },
  {
    "text": "it's really hard to measure this thing it's something that you usually like see in in when you see teams working with better tools they just get sort of",
    "start": "2471200",
    "end": "2477839"
  },
  {
    "text": "enabled by that uh but it's something that we we haven't been able to play a lot within the embedded space before and",
    "start": "2477839",
    "end": "2483000"
  },
  {
    "text": "it's something we'd like to to try to uh to change",
    "start": "2483000",
    "end": "2488318"
  },
  {
    "text": "and maybe the conclusion is really that that managed languages that fit on on microcontrollers will soon include dot",
    "start": "2488880",
    "end": "2494440"
  },
  {
    "text": "um dot is a high level but fairly simple language in many ways it's uh designed",
    "start": "2494440",
    "end": "2500560"
  },
  {
    "text": "originally for a web context but it's designed by a couple of people that uh that really care about performance and",
    "start": "2500560",
    "end": "2506560"
  },
  {
    "text": "uh and and footprint and we've designed the system so it it actually fits in a space like this so it's not a stretch to",
    "start": "2506560",
    "end": "2511680"
  },
  {
    "text": "put it in a microcontroller and it's something that we're actually developing and um maybe your question from all this",
    "start": "2511680",
    "end": "2519280"
  },
  {
    "text": "is like what are you going to hack on next I think all of you in here should like over the next few years find something to work on in that space I",
    "start": "2519280",
    "end": "2525800"
  },
  {
    "text": "think it's going to be massive like we're going to it's going to take off and we're right now we're seeing people targeting mobile phones which is great",
    "start": "2525800",
    "end": "2532160"
  },
  {
    "text": "it's a huge Market but uh if you want to hit a really big Market in like two or three years this is where to go like",
    "start": "2532160",
    "end": "2538960"
  },
  {
    "text": "this is really what you need to be doing so we I think we have a little bit of time for questions which I really",
    "start": "2538960",
    "end": "2545200"
  },
  {
    "text": "like so I hope you have some questions for me and then uh then otherwise you can drop by later and we can I can show",
    "start": "2545200",
    "end": "2550920"
  },
  {
    "text": "you more about what what's running on these devices and then how we are going to move it forward but if you do have questions let me know yeah so uh there's",
    "start": "2550920",
    "end": "2557880"
  },
  {
    "text": "three questions through the application so I'll start with them uh will you support smaller devices like uino or",
    "start": "2557880",
    "end": "2565760"
  },
  {
    "text": "esp8266 if yes when um so right now our Target is really like the 32-bit CPU so",
    "start": "2565760",
    "end": "2571680"
  },
  {
    "text": "there are Arduino uh CPUs out there or Arduino systems that that sort of fit that bill um but we uh right now we've",
    "start": "2571680",
    "end": "2579000"
  },
  {
    "text": "we've not uh wanted to venture into the eight or 16 bit bit space um we we",
    "start": "2579000",
    "end": "2585319"
  },
  {
    "text": "trying to focus on on like a few uh sort of devices at a time Raspberry Pi is",
    "start": "2585319",
    "end": "2590400"
  },
  {
    "text": "like a a bit of a cheat in the sense that it's way too big uh so that's not a real Target for us the first thing is",
    "start": "2590400",
    "end": "2595839"
  },
  {
    "text": "probably going to be a cortex M7 uh thing that we we believe we can roll out fairly soon um next in line will",
    "start": "2595839",
    "end": "2601960"
  },
  {
    "text": "probably be something like the uh the big arduinos Arduino du and and a few others um so I think uh I think the",
    "start": "2601960",
    "end": "2608400"
  },
  {
    "text": "answer is yes we will uh get those those done H and I think sometime next year",
    "start": "2608400",
    "end": "2613760"
  },
  {
    "text": "probably early next year is is a good good bet on that uh can you say something about IDE",
    "start": "2613760",
    "end": "2620160"
  },
  {
    "text": "support IDE support um yeah what I showed you here is like the like really bare metal uh version of this like",
    "start": "2620160",
    "end": "2626880"
  },
  {
    "text": "running everything the from the command line um dot is well supported by a few a",
    "start": "2626880",
    "end": "2633119"
  },
  {
    "text": "few idees today um we're seeing most interest in the intellig sublime and",
    "start": "2633119",
    "end": "2639200"
  },
  {
    "text": "atom space um so there is a way of pluging the dart analyzer and doing static analysis and code completion in",
    "start": "2639200",
    "end": "2644880"
  },
  {
    "text": "that space that you can use uh with Fletch almost a day it's not trivial to set up which is why I was didn't want to",
    "start": "2644880",
    "end": "2651040"
  },
  {
    "text": "brag about it so we we'll try to make it trivial to set up so that if you're using Adam or Sublime um or intellig you",
    "start": "2651040",
    "end": "2658559"
  },
  {
    "text": "will be able to work with the the Fletch offering from within that lastly you showed interaction",
    "start": "2658559",
    "end": "2664520"
  },
  {
    "text": "through gpio uh but can it also inter with python libraries and execute Python",
    "start": "2664520",
    "end": "2669920"
  },
  {
    "text": "scripts um so luckily on something like the the microprocessor based raspber Pi",
    "start": "2669920",
    "end": "2675520"
  },
  {
    "text": "there's almost nothing we cannot do we can call out to uh to the system and start new process so we could we could",
    "start": "2675520",
    "end": "2680760"
  },
  {
    "text": "run python there as well and talk to that I think that would be fairly easy to get going",
    "start": "2680760",
    "end": "2686010"
  },
  {
    "text": "[Music] um when we hit the smaller targets uh the most likely thing you will be able",
    "start": "2686010",
    "end": "2691839"
  },
  {
    "text": "to throw in there with the um with your dot code is probably like lowlevel C libraries that you have from from other",
    "start": "2691839",
    "end": "2697920"
  },
  {
    "text": "settings or things that is just like really hot uh hand tuned code that you just want to make use of um so I think",
    "start": "2697920",
    "end": "2704559"
  },
  {
    "text": "on the mic controllers having something like python is going to be a stretch there is micro python but it's it's a",
    "start": "2704559",
    "end": "2709680"
  },
  {
    "text": "little bit bigger than than what we're targeting so um the the everything here is not really like what you've seen with",
    "start": "2709680",
    "end": "2715599"
  },
  {
    "text": "the GP is not built into the system it's built on top of the system so it's all user level code so you can write the",
    "start": "2715599",
    "end": "2721599"
  },
  {
    "text": "same things yourself if you wanted to I have a question um when you select",
    "start": "2721599",
    "end": "2728440"
  },
  {
    "text": "the microcontroller for a certain application that you're going to make usually what you care about is the iio",
    "start": "2728440",
    "end": "2734400"
  },
  {
    "text": "structure of the device and that is what determines the footprint of what they're going to make and if you look at let's",
    "start": "2734400",
    "end": "2739760"
  },
  {
    "text": "say an example as a company like atmo they have seven different architectures maybe but they approximately 600",
    "start": "2739760",
    "end": "2746319"
  },
  {
    "text": "different models and what differentiate all these models are basically the iio of the device how would you how will you",
    "start": "2746319",
    "end": "2753400"
  },
  {
    "text": "handle that spor of different configurations within that in the system",
    "start": "2753400",
    "end": "2758640"
  },
  {
    "text": "that you're describing will you let that be with the OS level underneath or will you address that in some way it's a very",
    "start": "2758640",
    "end": "2765200"
  },
  {
    "text": "good question uh did everyone hear what the the question was uh it's fairly lengthy question so I'm not going to repeat all of it but it is true that",
    "start": "2765200",
    "end": "2771760"
  },
  {
    "text": "like once you get out there and Target real devices there is a lot of variety and a lot of different devices you can",
    "start": "2771760",
    "end": "2778319"
  },
  {
    "text": "Target and uh the question was really are we going to sort of try to address that at the the realtime OS level or we",
    "start": "2778319",
    "end": "2785839"
  },
  {
    "text": "trying to of paper over difference at a higher level I don't think we've decided that yet it um it's a very good question",
    "start": "2785839",
    "end": "2792559"
  },
  {
    "text": "because it's really hard to to come up with a sort of abstractions that that hide",
    "start": "2792559",
    "end": "2798400"
  },
  {
    "text": "the details or the implementations of of these things and to a certain extent I don't think we should be doing that I think we need to have a way of exposing",
    "start": "2798400",
    "end": "2805000"
  },
  {
    "text": "the low-level stuff as well um but at the same time sometimes you just want to be able to write code that runs across",
    "start": "2805000",
    "end": "2810520"
  },
  {
    "text": "these 600 different devices and make that work uh so our solution to that is make sure that everything we do is uh",
    "start": "2810520",
    "end": "2817000"
  },
  {
    "text": "user level code in a sense so that people can can share these things and they can develop um certain kind of",
    "start": "2817000",
    "end": "2823480"
  },
  {
    "text": "veneers that they can add on top if they want to it's sort of non- enforced abstractions that you can use if they",
    "start": "2823480",
    "end": "2829040"
  },
  {
    "text": "make sense to you I think that's the best bet we have right now it's really hard to come up with any kind of abstraction that covers that that much",
    "start": "2829040",
    "end": "2836359"
  },
  {
    "text": "variety any other",
    "start": "2836359",
    "end": "2839838"
  },
  {
    "text": "questions if there are no other question I'd really just want to like recommend all of you to get hold of of some like",
    "start": "2841480",
    "end": "2848079"
  },
  {
    "text": "microcontrollers or at least microprocessor and play with them it's a lot of fun we have so much so many devices floating around the the office",
    "start": "2848079",
    "end": "2855400"
  },
  {
    "text": "the Google office where I am and people are having a lot of fun working on these things and it's uh having them and working with them really changes your",
    "start": "2855400",
    "end": "2861680"
  },
  {
    "text": "perception on them I think it's it's a it's a very good interesting space to be in cool thank you",
    "start": "2861680",
    "end": "2869880"
  }
]