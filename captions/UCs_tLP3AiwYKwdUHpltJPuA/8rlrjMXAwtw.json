[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "[Music] okay so hello everyone",
    "start": "6990",
    "end": "12370"
  },
  {
    "text": "emergency power and the software developed all right so Gennaro hi everyone and I'm Lea Namba I'm a",
    "start": "12370",
    "end": "19130"
  },
  {
    "text": "solution architect at docker and today we're going to be talking about",
    "start": "19130",
    "end": "28570"
  },
  {
    "start": "33000",
    "end": "166000"
  },
  {
    "text": "configuration management how many people here know about docker yeah all right",
    "start": "33430",
    "end": "39739"
  },
  {
    "text": "how many people use docker in their day-to-day lives okay good well today",
    "start": "39739",
    "end": "46610"
  },
  {
    "text": "we're going to be talking about configuration management you guys have to deal with configuration management -",
    "start": "46610",
    "end": "52809"
  },
  {
    "text": "environment variables that kind of stuff yeah how many of you guys love that yeah",
    "start": "52809",
    "end": "58450"
  },
  {
    "text": "[Laughter] well it's one of those things where you have to it you know nobody talks about",
    "start": "58450",
    "end": "64190"
  },
  {
    "text": "it but everybody has to do it and strategies for how to do it you know",
    "start": "64190",
    "end": "69530"
  },
  {
    "text": "it's it's it's not an exciting topic but once you figure out how to do it correctly it's it's really satisfying",
    "start": "69530",
    "end": "75289"
  },
  {
    "text": "and fulfilling so that's what we want to share with you guys here today we've worked together for the last year on",
    "start": "75289",
    "end": "81560"
  },
  {
    "text": "some on some docker projects at his company so we're gonna hopefully give you guys some good strategies and tips",
    "start": "81560",
    "end": "87649"
  },
  {
    "text": "today how to organize yourself okay so",
    "start": "87649",
    "end": "93009"
  },
  {
    "text": "three topics we're gonna go over today is is what what goes in an image a lot",
    "start": "93009",
    "end": "99619"
  },
  {
    "text": "of questions around that what do I put in what do I keep out doing Mount volumes do i do environment variables",
    "start": "99619",
    "end": "105470"
  },
  {
    "text": "what do i do the second topic is once you've figured all that out how do I",
    "start": "105470",
    "end": "111440"
  },
  {
    "text": "then manage all of those configurations we're gonna give you some strategies",
    "start": "111440",
    "end": "117709"
  },
  {
    "text": "around that and then finally once I have those configurations weirder than I store them do I put them in version",
    "start": "117709",
    "end": "124700"
  },
  {
    "text": "control do I put them in some sort of registry how do I do all of that all of these topics as well are in a reference",
    "start": "124700",
    "end": "133190"
  },
  {
    "text": "architecture that you can find on the docker website it's called development pipeline best practices",
    "start": "133190",
    "end": "139490"
  },
  {
    "text": "using dr. EE now how we're going to do this presentation is what I'll do is",
    "start": "139490",
    "end": "146390"
  },
  {
    "text": "I'll present the general topic and different strategies that you guys can",
    "start": "146390",
    "end": "152390"
  },
  {
    "text": "can adopt and then Jim he'll go through what they actually implemented which",
    "start": "152390",
    "end": "157760"
  },
  {
    "text": "strategy they chose at their company and on their project okay so what I do is I",
    "start": "157760",
    "end": "169040"
  },
  {
    "text": "go into companies and I help them darker eyes their applications and usually we",
    "start": "169040",
    "end": "174290"
  },
  {
    "text": "go in there have a meeting have a simple application and in about 15 to 20",
    "start": "174290",
    "end": "180440"
  },
  {
    "text": "minutes we can get a docker file written run it in a container on somebody's lap top and they're super happy they're like",
    "start": "180440",
    "end": "187130"
  },
  {
    "text": "wow this is amazing it just works just like this baby they're pretty happy about that",
    "start": "187130",
    "end": "192920"
  },
  {
    "text": "and what we're gonna see is once you",
    "start": "192920",
    "end": "198110"
  },
  {
    "text": "have to then push that into you know a real production environment across and",
    "start": "198110",
    "end": "203960"
  },
  {
    "text": "deploy it across several environments development integration UAT staging pre",
    "start": "203960",
    "end": "209510"
  },
  {
    "text": "prod prod whatever I can get a little bit more complicated than that and some",
    "start": "209510",
    "end": "215150"
  },
  {
    "text": "of the decisions that you guys will make along the way can make that journey a little easier or harder so that's what",
    "start": "215150",
    "end": "222020"
  },
  {
    "text": "we want to take you through that today",
    "start": "222020",
    "end": "227830"
  },
  {
    "text": "so Lee is right actually we which has had a meeting and we decided which",
    "start": "228910",
    "end": "236530"
  },
  {
    "text": "service we would my way to docker and at the end of the hour we had we had it up",
    "start": "236530",
    "end": "244220"
  },
  {
    "text": "and running so and this this is what we came up with after like 20 minutes of",
    "start": "244220",
    "end": "249800"
  },
  {
    "text": "work and what most of it actually was spent building that Java 8 image at the",
    "start": "249800",
    "end": "257269"
  },
  {
    "text": "top and but now we are in production and I can tell you that it's quite bit",
    "start": "257270",
    "end": "262700"
  },
  {
    "text": "different than this now before diving into our architecture just let me tell",
    "start": "262700",
    "end": "268970"
  },
  {
    "text": "you a bit more so I work for sister general it's a bank",
    "start": "268970",
    "end": "274330"
  },
  {
    "text": "French bank and so we've built the financing platform for pirate business",
    "start": "274330",
    "end": "280940"
  },
  {
    "text": "of the global finance division and this division it provides solutions to",
    "start": "280940",
    "end": "286210"
  },
  {
    "text": "companies to raise capital to finance the project to hedge their key",
    "start": "286210",
    "end": "292280"
  },
  {
    "text": "transactions against risk and we also do business in a lot of sectors right did",
    "start": "292280",
    "end": "299240"
  },
  {
    "text": "you know for example we helped finance the renovation of the of the Miami Stadium for the Super Bowl back in 2007",
    "start": "299240",
    "end": "306880"
  },
  {
    "text": "so yeah whatever that was us we also finance infrastructure projects like",
    "start": "306880",
    "end": "312860"
  },
  {
    "text": "bridges and universities and so yeah so",
    "start": "312860",
    "end": "318590"
  },
  {
    "text": "let's see now how we architected the platform so it's built around",
    "start": "318590",
    "end": "325850"
  },
  {
    "start": "322000",
    "end": "408000"
  },
  {
    "text": "micro-service architecture because because it's cool okay not only cool but",
    "start": "325850",
    "end": "332660"
  },
  {
    "text": "it's it also provides a lot of benefits so these these micro services there are",
    "start": "332660",
    "end": "337840"
  },
  {
    "text": "business orientated they have basically",
    "start": "337840",
    "end": "342919"
  },
  {
    "text": "there is one per domain that per business domain and if you are familiar with that it's called domain driven",
    "start": "342919",
    "end": "348470"
  },
  {
    "text": "design or dvd for short since since they",
    "start": "348470",
    "end": "354410"
  },
  {
    "text": "have completely different time life cycle you can update any of these guys whenever you want so it provides quite a",
    "start": "354410",
    "end": "362479"
  },
  {
    "text": "lot of agility and another benefit is that these these services there they can",
    "start": "362479",
    "end": "370640"
  },
  {
    "text": "be written in any language and because they just have to to speak the language of the system and and this language it's",
    "start": "370640",
    "end": "377330"
  },
  {
    "text": "just rest and messages so for example we have built most of them in Java but now",
    "start": "377330",
    "end": "384740"
  },
  {
    "text": "a few of these are in Catalan and and hopefully maybe in the future some will",
    "start": "384740",
    "end": "390500"
  },
  {
    "text": "be written in closure with which I heard very much these services they are",
    "start": "390500",
    "end": "395750"
  },
  {
    "text": "stateless and there are spring boots application today and actually we don't",
    "start": "395750",
    "end": "401180"
  },
  {
    "text": "have only these that you can see here but we have more than 30 of these so today",
    "start": "401180",
    "end": "409970"
  },
  {
    "start": "408000",
    "end": "510000"
  },
  {
    "text": "we are in a vm world we deploy in VMs and we want to put all these services in",
    "start": "409970",
    "end": "418280"
  },
  {
    "text": "Dugger and we want the migration to be nice and smooth so we don't want to do Big Bang and also we don't want to",
    "start": "418280",
    "end": "426140"
  },
  {
    "text": "refactor the application to you know adapt and and do something darker",
    "start": "426140",
    "end": "432920"
  },
  {
    "text": "specific and keep the VMS the VM stuff in other branch or something like that",
    "start": "432920",
    "end": "438860"
  },
  {
    "text": "so we chose to to have a lift and shift approach so we we will try to make no",
    "start": "438860",
    "end": "446990"
  },
  {
    "text": "changes in the code and basically no change in no changes in the confirmation and we want refactoring to to happen",
    "start": "446990",
    "end": "455690"
  },
  {
    "text": "later when we are in docker because everything with me will be so much easier so we'll need to do cannery",
    "start": "455690",
    "end": "462890"
  },
  {
    "text": "deployment so that means that we have both darker and VM running side-by-side production and will progressively fly",
    "start": "462890",
    "end": "471560"
  },
  {
    "text": "traffic from VM to darker instances for some users for example and we also have",
    "start": "471560",
    "end": "480200"
  },
  {
    "text": "another challenge that is we have many environments so we have deaf we have",
    "start": "480200",
    "end": "486010"
  },
  {
    "text": "integration or mono geisha UAT production of of course and support also",
    "start": "486010",
    "end": "492980"
  },
  {
    "text": "250 begging purposes and so we had to find a way to to keep track also of",
    "start": "492980",
    "end": "499730"
  },
  {
    "text": "which instances which copy of the code were deployed and to into a summer",
    "start": "499730",
    "end": "506240"
  },
  {
    "text": "environment ok the first topic we're",
    "start": "506240",
    "end": "514099"
  },
  {
    "start": "510000",
    "end": "527000"
  },
  {
    "text": "going to go through now that we know their context a little better is what should go into an image what should go",
    "start": "514100",
    "end": "520969"
  },
  {
    "text": "in what should stay out so the question and the answer is pretty",
    "start": "520970",
    "end": "527690"
  },
  {
    "start": "527000",
    "end": "839000"
  },
  {
    "text": "classic consultant answer is it depends so I want to give you two basic types of",
    "start": "527690",
    "end": "536510"
  },
  {
    "text": "images there's one type of image called the builder image and this could be building",
    "start": "536510",
    "end": "543510"
  },
  {
    "text": "your application compiling it packaging it you know assembling it it could also",
    "start": "543510",
    "end": "549360"
  },
  {
    "text": "be an image that actually builds your docker image as well now on these kinds",
    "start": "549360",
    "end": "555660"
  },
  {
    "text": "of images you can throw everything in there you don't care about size it can",
    "start": "555660",
    "end": "561360"
  },
  {
    "text": "get into the gigs you throw your tooling in there you throw your scripts any type",
    "start": "561360",
    "end": "567870"
  },
  {
    "text": "of you know patching that you need to do I wouldn't worry too much about you know",
    "start": "567870",
    "end": "574170"
  },
  {
    "text": "if it's ugly just because all it needs to do is build something for you this is",
    "start": "574170",
    "end": "579900"
  },
  {
    "text": "a tool that usually is going to run just once as a single instance if you have it",
    "start": "579900",
    "end": "585330"
  },
  {
    "text": "in any type of sea icd pipeline then you",
    "start": "585330",
    "end": "590610"
  },
  {
    "text": "know it'll run continuously but it's not something that's necessarily going to be",
    "start": "590610",
    "end": "596010"
  },
  {
    "text": "going into production and so just like",
    "start": "596010",
    "end": "602220"
  },
  {
    "text": "this you know console you can you can throw you know a bunch of stuff in there now the second type of image this is",
    "start": "602220",
    "end": "610050"
  },
  {
    "text": "your image that will actually be run in production and these are going to be",
    "start": "610050",
    "end": "616470"
  },
  {
    "text": "more long-lived there they'll be out there running you want to be able to scale them sometimes",
    "start": "616470",
    "end": "622800"
  },
  {
    "text": "so have multiple instances of them running for redundancy or for performance reasons and in this case you",
    "start": "622800",
    "end": "630720"
  },
  {
    "text": "probably want to just stick to one component per image so that could be web application server it could be a",
    "start": "630720",
    "end": "637830"
  },
  {
    "text": "database engine but just have one component per image and now with the",
    "start": "637830",
    "end": "647030"
  },
  {
    "text": "multistage builds what you can do is actually combine these two images into one docker file where you have one part",
    "start": "647030",
    "end": "654000"
  },
  {
    "text": "of the docker file doing your build app or your build image and then once you've",
    "start": "654000",
    "end": "659880"
  },
  {
    "text": "created that artifacts for that the build then you can put that into your",
    "start": "659880",
    "end": "666000"
  },
  {
    "text": "run image okay now let's double-click on these run",
    "start": "666000",
    "end": "673800"
  },
  {
    "text": "images types so there's still some questions what what should actually go into these run images I'm going to give",
    "start": "673800",
    "end": "679560"
  },
  {
    "text": "you three different types of images that we categorize so the first one you've",
    "start": "679560",
    "end": "686370"
  },
  {
    "text": "probably all heard of this this is a base image what do we put in the base image it's usually you know your OS and",
    "start": "686370",
    "end": "693389"
  },
  {
    "text": "your middleware so some type of application server or engine and the",
    "start": "693389",
    "end": "701100"
  },
  {
    "text": "things that you externalize that's going to be the actual application itself so",
    "start": "701100",
    "end": "706620"
  },
  {
    "text": "in the Java world let's say that's a war file or jar file or some type of node or PHP s and then the configuration stays",
    "start": "706620",
    "end": "716459"
  },
  {
    "text": "on the outside as well where you you you mount a volume so these are what we'd",
    "start": "716459",
    "end": "722399"
  },
  {
    "text": "call a base image and the other side is",
    "start": "722399",
    "end": "727949"
  },
  {
    "text": "what we would call an environment image now why do we call it an environment",
    "start": "727949",
    "end": "733410"
  },
  {
    "text": "image it's because it's specific to let's say you a tea or it's specific to",
    "start": "733410",
    "end": "740360"
  },
  {
    "text": "pre prod and at this point you bake everything into the image all of the",
    "start": "740360",
    "end": "747060"
  },
  {
    "text": "configuration the actual application everything and one of the advantages of",
    "start": "747060",
    "end": "753649"
  },
  {
    "text": "doing this is it's extremely portable in other words you can take the same image",
    "start": "753649",
    "end": "760019"
  },
  {
    "text": "and you can run it in your production servers you can run it on your laptop",
    "start": "760019",
    "end": "765269"
  },
  {
    "text": "you can run it in the cloud anywhere you want because everything is baked in then",
    "start": "765269",
    "end": "771420"
  },
  {
    "text": "it's completely portable and also since everything is baked in everything within",
    "start": "771420",
    "end": "777209"
  },
  {
    "text": "there is traceable now in between",
    "start": "777209",
    "end": "782910"
  },
  {
    "text": "obviously there's a compromise which is a release image now this is where you",
    "start": "782910",
    "end": "791250"
  },
  {
    "text": "put the actual application or the version of the application that you want",
    "start": "791250",
    "end": "797550"
  },
  {
    "text": "to run into the image and then the only things that you inject inside are",
    "start": "797550",
    "end": "804130"
  },
  {
    "text": "or environment variables and we call this type of image environment agnostic",
    "start": "804130",
    "end": "810660"
  },
  {
    "text": "and so this gives you a nice combination of okay it's still flexible because we",
    "start": "810660",
    "end": "815950"
  },
  {
    "text": "can inject in things for just a particular environment but yet it has",
    "start": "815950",
    "end": "822310"
  },
  {
    "text": "enough traceability and portable nests that you can you know then apply it to",
    "start": "822310",
    "end": "830830"
  },
  {
    "text": "different environments so let's let's take a look now and see what they did",
    "start": "830830",
    "end": "836050"
  },
  {
    "text": "with the financing platform which strategy they chose so this was our",
    "start": "836050",
    "end": "841750"
  },
  {
    "start": "839000",
    "end": "990000"
  },
  {
    "text": "first try so we had an image per environment and we tried to put",
    "start": "841750",
    "end": "848260"
  },
  {
    "text": "everything in that base image in the base the Linux distribution maven to get",
    "start": "848260",
    "end": "856270"
  },
  {
    "text": "GDK no GS you name it so and this kind of a talker price it's",
    "start": "856270",
    "end": "862900"
  },
  {
    "text": "quite difficult to maintain because if you're familiar with the bob martin's solid principle and the first letter S",
    "start": "862900",
    "end": "871200"
  },
  {
    "text": "stands for single responsibility principle and this to occupy it's a",
    "start": "871200",
    "end": "876640"
  },
  {
    "text": "clear violation of this principle because it tries to do too much and besides it's not very reusable if you",
    "start": "876640",
    "end": "884110"
  },
  {
    "text": "build this and you want maybe some of the team to reuse part of it they have to take it all so we tried to put also",
    "start": "884110",
    "end": "892360"
  },
  {
    "text": "the environment configuration files inside the image for what yeah for chess ability like Lee said but but this was a",
    "start": "892360",
    "end": "899380"
  },
  {
    "text": "bad idea because now your image is tied to a particular environment okay second",
    "start": "899380",
    "end": "907960"
  },
  {
    "text": "try we pulled out the environment configuration out and now now it's",
    "start": "907960",
    "end": "913210"
  },
  {
    "text": "better because its environment agnostic but but you still don't get much reuse across teams",
    "start": "913210",
    "end": "921060"
  },
  {
    "text": "so finally we settled on this setup so",
    "start": "921930",
    "end": "927270"
  },
  {
    "text": "the GDS on the far left it's our ops team and they focus on low-level details",
    "start": "927270",
    "end": "935890"
  },
  {
    "text": "like the repair system security patches network settings",
    "start": "935890",
    "end": "942030"
  },
  {
    "text": "and in the - rectangle you have the build only stuff it's it's only used at",
    "start": "942030",
    "end": "949000"
  },
  {
    "text": "built at Build time it's used for building the jars for packaging the GS",
    "start": "949000",
    "end": "955840"
  },
  {
    "text": "applications and it's it's under risk the responsibility of our transversal",
    "start": "955840",
    "end": "961360"
  },
  {
    "text": "architecture team and they also built a gr e Java Runtime image to run in",
    "start": "961360",
    "end": "969880"
  },
  {
    "text": "production and my team it's on the far right and so we built the release images",
    "start": "969880",
    "end": "976930"
  },
  {
    "text": "that you can see on the on the right and also the spring boot micro-service which",
    "start": "976930",
    "end": "982030"
  },
  {
    "text": "is an abstract docker file that we will dive into it a bit later on",
    "start": "982030",
    "end": "989310"
  },
  {
    "text": "alright so now we know we have a basic strategy for what should go into an",
    "start": "991260",
    "end": "997480"
  },
  {
    "text": "image but we still have some questions - where should I put my configuration I'll",
    "start": "997480",
    "end": "1008370"
  },
  {
    "text": "give you an example of that in docker you can set a variable right so let's",
    "start": "1008370",
    "end": "1015600"
  },
  {
    "start": "1011000",
    "end": "1145000"
  },
  {
    "text": "take an example let's let's do a simple one okay so the first one that we usually all learn is in the docker file",
    "start": "1015600",
    "end": "1022820"
  },
  {
    "text": "environment variable foo equals bar it's pretty simple it's in the image that I",
    "start": "1022820",
    "end": "1028438"
  },
  {
    "text": "can live with but now let's say I want to pull it out I don't want it baked in the image so",
    "start": "1028439",
    "end": "1036150"
  },
  {
    "text": "now I'm gonna do it actually in the command line so I can do docker service create pass in an environment variable",
    "start": "1036150",
    "end": "1042120"
  },
  {
    "text": "that's great but now let's say I'm getting sick of typing that in every",
    "start": "1042120",
    "end": "1047160"
  },
  {
    "text": "single time so we'll put that in a compose file or in a stack file show you",
    "start": "1047160",
    "end": "1054510"
  },
  {
    "text": "guys all I've done that and we put that as you know different slightly different syntax environment foo equals bar that's",
    "start": "1054510",
    "end": "1063270"
  },
  {
    "text": "great but imagine now like in their case they had about 200 because this was a",
    "start": "1063270",
    "end": "1068880"
  },
  {
    "text": "legacy application they had about 200 variables that they had to set so in a",
    "start": "1068880",
    "end": "1074040"
  },
  {
    "text": "docker compose file that gets a little unwieldy so we said okay we can actually split",
    "start": "1074040",
    "end": "1080520"
  },
  {
    "text": "that out let's put that in an actual environment file so phuong but there",
    "start": "1080520",
    "end": "1089490"
  },
  {
    "text": "were some as well variables that that",
    "start": "1089490",
    "end": "1095010"
  },
  {
    "text": "they didn't know beforehand and they were they were stored in an external configuration so if that's your case",
    "start": "1095010",
    "end": "1101340"
  },
  {
    "text": "what else can you do well you can you can actually use an entry point script",
    "start": "1101340",
    "end": "1106920"
  },
  {
    "text": "and you can call out let's say with curl or you can do any type of calls outside",
    "start": "1106920",
    "end": "1113150"
  },
  {
    "text": "call out to that external service and then actually set foo equals bar writing",
    "start": "1113150",
    "end": "1118200"
  },
  {
    "text": "your entry point so that's another way of doing it and finally sometimes your",
    "start": "1118200",
    "end": "1124040"
  },
  {
    "text": "configuration is secret right so yet another way of doing it you can use",
    "start": "1124040",
    "end": "1129960"
  },
  {
    "text": "docker secrets to to store these variables so how do i how do you know how do you choose which one of these",
    "start": "1129960",
    "end": "1136710"
  },
  {
    "text": "strategies to take when we want to just set a simple variable like foo equals",
    "start": "1136710",
    "end": "1141900"
  },
  {
    "text": "bar and so my advice to you guys is",
    "start": "1141900",
    "end": "1148740"
  },
  {
    "start": "1145000",
    "end": "1155000"
  },
  {
    "text": "think about the lifecycle of these variables okay what do I mean by that",
    "start": "1148740",
    "end": "1155300"
  },
  {
    "start": "1155000",
    "end": "1307000"
  },
  {
    "text": "let's try to think about buckets so on the first on the first type of variables",
    "start": "1155300",
    "end": "1164040"
  },
  {
    "text": "these are things that are long-lived so stuff that will change you know maybe yearly these could be more like",
    "start": "1164040",
    "end": "1171150"
  },
  {
    "text": "enterprise type tools or policies or",
    "start": "1171150",
    "end": "1176390"
  },
  {
    "text": "libraries that you want to include in more in a base image these could also be",
    "start": "1176390",
    "end": "1182250"
  },
  {
    "text": "things across let's say an application program where you know you're gonna",
    "start": "1182250",
    "end": "1188100"
  },
  {
    "text": "you're going to actually have you know not only your enterprise tools but just for your program it's tools and these",
    "start": "1188100",
    "end": "1193920"
  },
  {
    "text": "are things that everybody across your program is going to use so you can put all of those types of things directly",
    "start": "1193920",
    "end": "1199050"
  },
  {
    "text": "into your docker files they'll get built into your images",
    "start": "1199050",
    "end": "1204610"
  },
  {
    "text": "and they're not going to change that often so you don't have to update them",
    "start": "1204610",
    "end": "1210480"
  },
  {
    "text": "on the bottom part these are things that will change more often so what are these",
    "start": "1212400",
    "end": "1219040"
  },
  {
    "text": "these are things like you know your environment variables which environment",
    "start": "1219040",
    "end": "1224320"
  },
  {
    "text": "you're deploying to as as as we'll see a",
    "start": "1224320",
    "end": "1229420"
  },
  {
    "text": "little bit later they had many different things to configure are they changing",
    "start": "1229420",
    "end": "1234970"
  },
  {
    "text": "weekly are they changing daily are they changing per environment per release of",
    "start": "1234970",
    "end": "1240610"
  },
  {
    "text": "your application those are things you can put in directly into your",
    "start": "1240610",
    "end": "1246600"
  },
  {
    "text": "environment configuration within you know your doctor compose or your or your",
    "start": "1246600",
    "end": "1252690"
  },
  {
    "text": "even on your command line and then at deploy time what you can do there is you",
    "start": "1252690",
    "end": "1261040"
  },
  {
    "text": "can then put things like secrets you can put it in your entry point script you",
    "start": "1261040",
    "end": "1267340"
  },
  {
    "text": "can even mount it as a volume so these are our things that really at deploy time I want to inject in and then",
    "start": "1267340",
    "end": "1274870"
  },
  {
    "text": "finally there's actually runtime things that you might want to change so this is your container that's actually running",
    "start": "1274870",
    "end": "1280540"
  },
  {
    "text": "and then what you want to do is while it's running maybe change some things so",
    "start": "1280540",
    "end": "1285700"
  },
  {
    "text": "that could be service discovery that could even be debugging or profiling or",
    "start": "1285700",
    "end": "1291010"
  },
  {
    "text": "changing your logging configuration so think about things in terms of life",
    "start": "1291010",
    "end": "1296110"
  },
  {
    "text": "cycles and that will help you structure out where you to put different configurations so let's see what let's",
    "start": "1296110",
    "end": "1305350"
  },
  {
    "text": "let's see what they did here okay so let me show you some of the darker files we",
    "start": "1305350",
    "end": "1311320"
  },
  {
    "start": "1307000",
    "end": "1430000"
  },
  {
    "text": "created so this one is from our ops team GTS so they get to decide which base",
    "start": "1311320",
    "end": "1319809"
  },
  {
    "text": "Linux distribution will be used so in this case this is reddit Enterprise nex-7",
    "start": "1319809",
    "end": "1325169"
  },
  {
    "text": "and they also put some some",
    "start": "1325169",
    "end": "1330360"
  },
  {
    "text": "configuration for the yam repositories which will",
    "start": "1330360",
    "end": "1336970"
  },
  {
    "text": "decide which packages can be installed in our island aquifers obviously not all",
    "start": "1336970",
    "end": "1343750"
  },
  {
    "text": "of them are authorized and also which certificate authorities can be trusted",
    "start": "1343750",
    "end": "1350350"
  },
  {
    "text": "and this kind of stuff we don't we don't expect this to change very much over the",
    "start": "1350350",
    "end": "1356440"
  },
  {
    "text": "course of the year next one the Java Runtime environment image so it's",
    "start": "1356440",
    "end": "1364210"
  },
  {
    "text": "maintained by the architecture team and they choose which Java 8 Update is safe",
    "start": "1364210",
    "end": "1372340"
  },
  {
    "text": "to use in production because they know better they run security tests to check the compatibility with the underlying OS",
    "start": "1372340",
    "end": "1379720"
  },
  {
    "text": "and they also check which bugs have been",
    "start": "1379720",
    "end": "1385030"
  },
  {
    "text": "included in the latest latest releases updates and they also install a more",
    "start": "1385030",
    "end": "1393630"
  },
  {
    "text": "stronger encryption policy with than the one which is bundled by default with the",
    "start": "1393630",
    "end": "1399130"
  },
  {
    "text": "JDK which is us specific and this this",
    "start": "1399130",
    "end": "1406840"
  },
  {
    "text": "is our microservice base image the abstract one and we wrote it we choose",
    "start": "1406840",
    "end": "1413770"
  },
  {
    "text": "which user will be used which group they will belong to and which ports also gets",
    "start": "1413770",
    "end": "1420190"
  },
  {
    "text": "to be exposed and please know the entry point shall script at the end because",
    "start": "1420190",
    "end": "1426370"
  },
  {
    "text": "I'll get back to it in a few slides and finally the release images the",
    "start": "1426370",
    "end": "1433450"
  },
  {
    "start": "1430000",
    "end": "1514000"
  },
  {
    "text": "release images are the one that were on the far right and the previous big slide with all the images and actually they",
    "start": "1433450",
    "end": "1440860"
  },
  {
    "text": "don't do anything in particular because well they all these microservices are",
    "start": "1440860",
    "end": "1446860"
  },
  {
    "text": "just look like now so these images they",
    "start": "1446860",
    "end": "1452350"
  },
  {
    "text": "are built by our CI CD pipeline automatically when whenever the source",
    "start": "1452350",
    "end": "1458320"
  },
  {
    "text": "code changes so they get published published to the DTR which is the darker",
    "start": "1458320",
    "end": "1466900"
  },
  {
    "text": "trusted registry this is an excerpt of our darker compass",
    "start": "1466900",
    "end": "1476360"
  },
  {
    "text": "so now we call it dr. stacking instead because dr. introduced the stack concept",
    "start": "1476360",
    "end": "1482670"
  },
  {
    "text": "which is a bit more high-level and you can see how we specify the name of the",
    "start": "1482670",
    "end": "1488360"
  },
  {
    "text": "environment that we want to run this service in we configure also some just a",
    "start": "1488360",
    "end": "1496920"
  },
  {
    "text": "node for collecting metrics and there's",
    "start": "1496920",
    "end": "1502740"
  },
  {
    "text": "also a credential side which actually is a dr. secret and we will source it once",
    "start": "1502740",
    "end": "1508710"
  },
  {
    "text": "we are in inside and our entry point so",
    "start": "1508710",
    "end": "1516900"
  },
  {
    "start": "1514000",
    "end": "1707000"
  },
  {
    "text": "let's have a look at the entry point that I talked about earlier so first we",
    "start": "1516900",
    "end": "1523830"
  },
  {
    "text": "source the credentials file that was in the previous slide and so we can use",
    "start": "1523830",
    "end": "1529350"
  },
  {
    "text": "everything which way which was inside for the rest of the script as I said we",
    "start": "1529350",
    "end": "1536330"
  },
  {
    "text": "use VMs today and we want to migrate to docker so for the VM world we use a",
    "start": "1536330",
    "end": "1543630"
  },
  {
    "text": "deployment tool I don't know if some of you use that kind of of tool also but",
    "start": "1543630",
    "end": "1549170"
  },
  {
    "text": "this tool is also responsible for configuration configuration management",
    "start": "1549170",
    "end": "1554970"
  },
  {
    "text": "so it's called the CMDB and this tool it requires to be",
    "start": "1554970",
    "end": "1560790"
  },
  {
    "text": "configured in a certain way and the data has been certain shape and the",
    "start": "1560790",
    "end": "1566280"
  },
  {
    "text": "application say oath they also have to use some placeholder format so that the",
    "start": "1566280",
    "end": "1571440"
  },
  {
    "text": "CMDB the deployment tool can replace the placeholder when you deploy services",
    "start": "1571440",
    "end": "1578670"
  },
  {
    "text": "onto the target machines so we we have this because we want full traceability",
    "start": "1578670",
    "end": "1586260"
  },
  {
    "text": "we we don't just put stuff in the CMDB and and hoping that the CMDB will keep",
    "start": "1586260",
    "end": "1592710"
  },
  {
    "text": "track of everything automatically branches and so on usually it's not made for that so we have a git repository",
    "start": "1592710",
    "end": "1600740"
  },
  {
    "text": "where we all that confession data and we just upload these data to the CMDB whenever",
    "start": "1600740",
    "end": "1611070"
  },
  {
    "text": "the git repository changes or oncoming time there is a hook and we launch",
    "start": "1611070",
    "end": "1617880"
  },
  {
    "text": "Jenkins job to populate the CMDB right so this format actually it's a era",
    "start": "1617880",
    "end": "1626460"
  },
  {
    "text": "format I don't know another here or family of it it's a ruby gem which is used by puppet and we use puppet to to",
    "start": "1626460",
    "end": "1635760"
  },
  {
    "text": "populate the CMDB so now now in the darker world actually we don't need this develop deployment tool anymore right",
    "start": "1635760",
    "end": "1643280"
  },
  {
    "text": "but we since we wanted to have both running side by side in production we",
    "start": "1643280",
    "end": "1649500"
  },
  {
    "text": "had we had to find a way to continue feeding the CMDB and keep it happy and",
    "start": "1649500",
    "end": "1657140"
  },
  {
    "text": "having some way to pull this configuration and and feed it to the",
    "start": "1657140",
    "end": "1662880"
  },
  {
    "text": "darker to the darker containers right so and this is exactly what this entry",
    "start": "1662880",
    "end": "1669900"
  },
  {
    "text": "point does when we say convert tmdb ya know to properties actually it's just a",
    "start": "1669900",
    "end": "1675690"
  },
  {
    "text": "script behind that and you just pull the configuration out of the git repository",
    "start": "1675690",
    "end": "1681980"
  },
  {
    "text": "converts that into different properties file properties file sorry and it feed",
    "start": "1681980",
    "end": "1690240"
  },
  {
    "text": "that into the Springwood application or we can even maybe and and subst that",
    "start": "1690240",
    "end": "1696510"
  },
  {
    "text": "into our shell script if you want and it works just very very nicely so yeah all",
    "start": "1696510",
    "end": "1709170"
  },
  {
    "text": "right that's a lot of work right from our first 15 minute docker file as a",
    "start": "1709170",
    "end": "1716220"
  },
  {
    "text": "baby wow it works - now it's like whoa we had to break this up into all of",
    "start": "1716220",
    "end": "1721950"
  },
  {
    "text": "these things we got to really think about parallel runs and you know it it",
    "start": "1721950",
    "end": "1729210"
  },
  {
    "text": "took some time to get all of this going properly right so now what we've seen is",
    "start": "1729210",
    "end": "1735450"
  },
  {
    "text": "they know they've broken up all of their configuration into do I put it in docker files in images do I put an environment",
    "start": "1735450",
    "end": "1743250"
  },
  {
    "text": "do I put it as secrets do I do it at entry point at deploy time you know where do I put it so they figured all of",
    "start": "1743250",
    "end": "1749520"
  },
  {
    "text": "that stuff out right but there's still some questions which are I've done all",
    "start": "1749520",
    "end": "1756480"
  },
  {
    "text": "that now how do i how do I put all of this into some type of version control",
    "start": "1756480",
    "end": "1761670"
  },
  {
    "text": "or configuration management and so let's look at that now and the way we think",
    "start": "1761670",
    "end": "1769770"
  },
  {
    "start": "1768000",
    "end": "1890000"
  },
  {
    "text": "about it is it's just like it's just like coding so as Jill mentioned before",
    "start": "1769770",
    "end": "1776160"
  },
  {
    "text": "they had a CMDB and in this view of the world we're looking at configuration as",
    "start": "1776160",
    "end": "1783630"
  },
  {
    "text": "data right I'm gonna take all of my configuration throw it in a big database",
    "start": "1783630",
    "end": "1789540"
  },
  {
    "text": "it'll be running and then when I need it I'll go look for stuff and I'll query",
    "start": "1789540",
    "end": "1795420"
  },
  {
    "text": "the database and it will give me all of my information and what usually happens",
    "start": "1795420",
    "end": "1801630"
  },
  {
    "text": "around that is these are these are big products they're complicated to install and usually only a few people mainly the",
    "start": "1801630",
    "end": "1809820"
  },
  {
    "text": "ops teams sometimes the CI CD teams get involved with that the developers sometimes they touch that sometimes they",
    "start": "1809820",
    "end": "1816660"
  },
  {
    "text": "don't so it's a different tool than developers use now with docker what the",
    "start": "1816660",
    "end": "1826380"
  },
  {
    "text": "way in which we view the world is configuration as code so we can make this you know this vision actually come",
    "start": "1826380",
    "end": "1833550"
  },
  {
    "text": "true the reason why that is is because all of our configuration is simple text files their doctor files their their",
    "start": "1833550",
    "end": "1840450"
  },
  {
    "text": "compose files their stack files their environment files so you guys can treat this just like how you would treat it",
    "start": "1840450",
    "end": "1846200"
  },
  {
    "text": "would treat code and one of the other advantages to that is once it's like",
    "start": "1846200",
    "end": "1853830"
  },
  {
    "text": "code then the Ops guys start use the same tools as the dev guys so let's say",
    "start": "1853830",
    "end": "1861270"
  },
  {
    "text": "in this case get they're both just pushing things in to get and all sudden they're talking the same language and",
    "start": "1861270",
    "end": "1867000"
  },
  {
    "text": "that really helps them to break down that barrier between Devon ops and really get them",
    "start": "1867000",
    "end": "1872019"
  },
  {
    "text": "speaking together so this is just another advantage of thinking about",
    "start": "1872019",
    "end": "1877580"
  },
  {
    "text": "things configuration as code so now once we've said okay all this configuration",
    "start": "1877580",
    "end": "1884840"
  },
  {
    "text": "is just like code we still need to organize it and well what I'll give you",
    "start": "1884840",
    "end": "1893690"
  },
  {
    "text": "here is as far as strategies is still think about the life cycles of all of",
    "start": "1893690",
    "end": "1899659"
  },
  {
    "text": "these different configurations what do I mean by that let's take your your image",
    "start": "1899659",
    "end": "1908539"
  },
  {
    "text": "files so everything you need to build an image that's most likely going to have",
    "start": "1908539",
    "end": "1913879"
  },
  {
    "text": "the same life cycle as your as your application so I'm coming out with a new",
    "start": "1913879",
    "end": "1919879"
  },
  {
    "text": "version of my app got some new code going to compile it create a new version",
    "start": "1919879",
    "end": "1925460"
  },
  {
    "text": "oh I added in a new environment variable that should go into my docker file that",
    "start": "1925460",
    "end": "1931429"
  },
  {
    "text": "might go into an environment variable somewhere I should probably commit that and put it",
    "start": "1931429",
    "end": "1937009"
  },
  {
    "text": "right next to my code so I can have one repository which is more about the build",
    "start": "1937009",
    "end": "1942589"
  },
  {
    "text": "time I can put that right next to my source code now what I would recommend",
    "start": "1942589",
    "end": "1951379"
  },
  {
    "text": "is then putting everything that has to do with actual running of these images",
    "start": "1951379",
    "end": "1958129"
  },
  {
    "text": "anything that you're going to inject at runtime which is environment specific put all of that into a separate",
    "start": "1958129",
    "end": "1965659"
  },
  {
    "text": "repository why because they live a different life cycle one is building",
    "start": "1965659",
    "end": "1972200"
  },
  {
    "text": "images the other one is I'm gonna run something and I might inject different things when I run it then when I build",
    "start": "1972200",
    "end": "1980239"
  },
  {
    "text": "it where I want to kind of keep everything the same and one other pro",
    "start": "1980239",
    "end": "1987769"
  },
  {
    "text": "tip that I'll give you guys is I worked on a project where we put all of our",
    "start": "1987769",
    "end": "1995149"
  },
  {
    "text": "different environments so we had I think ten or eleven environments",
    "start": "1995149",
    "end": "2000679"
  },
  {
    "text": "and we put all of that configuration into one big master branch and we",
    "start": "2000679",
    "end": "2005900"
  },
  {
    "text": "separated out each environment per per folder so we had dev you know all of our",
    "start": "2005900",
    "end": "2012410"
  },
  {
    "text": "testing even performance testing etc and then we were introduced new versions",
    "start": "2012410",
    "end": "2019100"
  },
  {
    "text": "because new versions of our application were coming you know every two weeks and so we say okay we we put it in the new",
    "start": "2019100",
    "end": "2026990"
  },
  {
    "text": "version up in here add a new variable deploy that to this environment but then",
    "start": "2026990",
    "end": "2032000"
  },
  {
    "text": "we're we're a couple versions back in a different environment and trying to port",
    "start": "2032000",
    "end": "2037520"
  },
  {
    "text": "different environment variables in two different versions on different environments in this one gigantic master",
    "start": "2037520",
    "end": "2043730"
  },
  {
    "text": "branch it just became a nightmare and so we tried several configurations and",
    "start": "2043730",
    "end": "2049100"
  },
  {
    "text": "finally what we what we figured out the best way to do is they just put each environment in its own branch and the",
    "start": "2049100",
    "end": "2057740"
  },
  {
    "text": "advantages of that are what it allows you to do is you have in one branch",
    "start": "2057740",
    "end": "2064280"
  },
  {
    "text": "let's say it's it's some type of pre prod you can then start tagging versions",
    "start": "2064280",
    "end": "2069590"
  },
  {
    "text": "and I know every single version that's been deployed in my pre prod and if I",
    "start": "2069590",
    "end": "2075648"
  },
  {
    "text": "want a different version on on a testing platform then I just have a completely",
    "start": "2075649",
    "end": "2081230"
  },
  {
    "text": "different configuration for testing and I can tag and version all of that now you might be saying okay that might get",
    "start": "2081230",
    "end": "2087858"
  },
  {
    "text": "hard to manage as well right because you have all of these branches how do I port one one change throughout all of the",
    "start": "2087859",
    "end": "2095628"
  },
  {
    "text": "different branches well that's where the tool comes in handy and which is why we",
    "start": "2095629",
    "end": "2103310"
  },
  {
    "text": "recommend putting it in some type of real version control like a git you can use the tool then to do all of your your",
    "start": "2103310",
    "end": "2111080"
  },
  {
    "text": "merging or your cherry-picking into different into different branches and it",
    "start": "2111080",
    "end": "2117080"
  },
  {
    "text": "just makes your lives a lot easier so let's see if they actually took that",
    "start": "2117080",
    "end": "2123560"
  },
  {
    "text": "advice or not so as I hinted earlier we",
    "start": "2123560",
    "end": "2129020"
  },
  {
    "start": "2125000",
    "end": "2235000"
  },
  {
    "text": "tried to bake in bake their environment configure to the image so first we just clone the",
    "start": "2129020",
    "end": "2137810"
  },
  {
    "text": "repo into the build directory like I'm Jenkins before building the image and just use the copy directive so as a",
    "start": "2137810",
    "end": "2146090"
  },
  {
    "text": "benefit you get through traceability because everything is in the image but",
    "start": "2146090",
    "end": "2151190"
  },
  {
    "text": "now you just have to make sure - you",
    "start": "2151190",
    "end": "2156380"
  },
  {
    "text": "have to keep track of which image tag has been deployed into each environment",
    "start": "2156380",
    "end": "2161960"
  },
  {
    "text": "especially into production that there are downsides you must you must copy all",
    "start": "2161960",
    "end": "2167480"
  },
  {
    "text": "configuration to environment to be environment thank mistake and and you",
    "start": "2167480",
    "end": "2172550"
  },
  {
    "text": "you have to reveal all images whenever your configuration changes and it's not",
    "start": "2172550",
    "end": "2178400"
  },
  {
    "text": "very big binary only once which is a fundamental concept in the in continuous",
    "start": "2178400",
    "end": "2184790"
  },
  {
    "text": "delivery so in my opinion the best way",
    "start": "2184790",
    "end": "2191270"
  },
  {
    "text": "to to cope with environment configuration it's it's via the the entry point and using this technique the",
    "start": "2191270",
    "end": "2199370"
  },
  {
    "text": "images that and very non elastic so you don't need to rebuild image when the",
    "start": "2199370",
    "end": "2204680"
  },
  {
    "text": "configuration changes you just restore the container and then you go new",
    "start": "2204680",
    "end": "2209960"
  },
  {
    "text": "configuration is here as the downside you need get but and you can lose out of",
    "start": "2209960",
    "end": "2217790"
  },
  {
    "text": "about traceability unless you you log somewhere maybe by some environment",
    "start": "2217790",
    "end": "2224420"
  },
  {
    "text": "variable which confusion come it was used when you deploy the micro service to container and yeah so a few a few",
    "start": "2224420",
    "end": "2238010"
  },
  {
    "start": "2235000",
    "end": "2386000"
  },
  {
    "text": "ideas of where where we are going so we listened very carefully to Julie and as",
    "start": "2238010",
    "end": "2245330"
  },
  {
    "text": "I said we we used for the big big configuration git repository we use the",
    "start": "2245330",
    "end": "2250970"
  },
  {
    "text": "master branch approach and and it was a total mess as I said because when we try",
    "start": "2250970",
    "end": "2257870"
  },
  {
    "text": "to change something refactor some parts of the application etc you can have the previous version working with the",
    "start": "2257870",
    "end": "2265859"
  },
  {
    "text": "newly refactored configuration stuff so it's very very awkward so in the end we",
    "start": "2265859",
    "end": "2271650"
  },
  {
    "text": "just made some branches and we could not avoid this because as you said they",
    "start": "2271650",
    "end": "2277229"
  },
  {
    "text": "sometimes these this environment they have different life cycles maybe you",
    "start": "2277229",
    "end": "2282390"
  },
  {
    "text": "have some training environment and it will stay up and running like for three weeks because you are just training new",
    "start": "2282390",
    "end": "2288569"
  },
  {
    "text": "users you just can't pushing new versions on to it and so we",
    "start": "2288569",
    "end": "2295769"
  },
  {
    "text": "which shows lightly which we chose the run repository approach so we separated",
    "start": "2295769",
    "end": "2304609"
  },
  {
    "text": "separated the the environment into environment configuration into their own",
    "start": "2304609",
    "end": "2310589"
  },
  {
    "text": "repository and this we did we did that for each domain so when we want to",
    "start": "2310589",
    "end": "2316979"
  },
  {
    "text": "change the environment configuration for I know for integration we just check out",
    "start": "2316979",
    "end": "2322769"
  },
  {
    "text": "the NDA run repository and we check out the integration branch make some",
    "start": "2322769",
    "end": "2327989"
  },
  {
    "text": "modification commit push and the CI CD just redeploy everything and just check",
    "start": "2327989",
    "end": "2334499"
  },
  {
    "text": "out shut down these the NDA integration",
    "start": "2334499",
    "end": "2340499"
  },
  {
    "text": "stack and just restart it with with the correct information so it yeah once once",
    "start": "2340499",
    "end": "2347880"
  },
  {
    "text": "you have the tools as we said it's very very easy you don't have to do anything",
    "start": "2347880",
    "end": "2353390"
  },
  {
    "text": "just don't do it by hand for like thirteen microservices because you will",
    "start": "2353390",
    "end": "2358469"
  },
  {
    "text": "die and yeah one last thing is one",
    "start": "2358469",
    "end": "2363749"
  },
  {
    "text": "particular interest that we have is to to do Bluegreen deployment and so we are",
    "start": "2363749",
    "end": "2369150"
  },
  {
    "text": "still invading investigating that and hopefully there is something which is",
    "start": "2369150",
    "end": "2374460"
  },
  {
    "text": "coming in the next version of dr2 to handle that more out of the box you know",
    "start": "2374460",
    "end": "2380729"
  },
  {
    "text": "you know out of the box wait alright",
    "start": "2380729",
    "end": "2386989"
  },
  {
    "start": "2386000",
    "end": "2450000"
  },
  {
    "text": "okay so in conclusion here we looked at the three different topics and they",
    "start": "2386989",
    "end": "2393119"
  },
  {
    "text": "chose to use release images as the nice compromise between flexibility",
    "start": "2393119",
    "end": "2399750"
  },
  {
    "text": "and traceability and portability they went through and they did the exercise",
    "start": "2399750",
    "end": "2405000"
  },
  {
    "text": "of thinking about configuration buckets and life cycles where to put different things put it in images put it in",
    "start": "2405000",
    "end": "2412260"
  },
  {
    "text": "environment variables or as secrets or in an entry point and then finally to",
    "start": "2412260",
    "end": "2419190"
  },
  {
    "text": "store all of that they separated it out all of their build into one build",
    "start": "2419190",
    "end": "2426570"
  },
  {
    "text": "repository and then all of their configuration at runtime into a separate repository once again because they live",
    "start": "2426570",
    "end": "2433830"
  },
  {
    "text": "separate life cycles so we're hope that just some of these tips right here on",
    "start": "2433830",
    "end": "2441240"
  },
  {
    "text": "strategies will help you guys so that you'll be like this baby you'll stay nice and happy and you'll",
    "start": "2441240",
    "end": "2447840"
  },
  {
    "text": "enjoy your journey thank you thank you you guys have any questions yeah so the",
    "start": "2447840",
    "end": "2465030"
  },
  {
    "start": "2450000",
    "end": "2655000"
  },
  {
    "text": "question is how do you handle secrets because you just can't put secrets in",
    "start": "2465030",
    "end": "2471390"
  },
  {
    "text": "plain text into version control actually we did that but we did not put that in",
    "start": "2471390",
    "end": "2476760"
  },
  {
    "text": "plain text we encrypted these with gem which is",
    "start": "2476760",
    "end": "2483540"
  },
  {
    "text": "called yeonil like encrypted ya know and where you can encrypt the values of",
    "start": "2483540",
    "end": "2490580"
  },
  {
    "text": "some-some era key some Yamabuki so this this is",
    "start": "2490580",
    "end": "2497640"
  },
  {
    "text": "what we did for until today actually and",
    "start": "2497640",
    "end": "2505220"
  },
  {
    "text": "these these dot these secrets they were put in plaintext but inside the",
    "start": "2505370",
    "end": "2511920"
  },
  {
    "text": "container so the container we pushed the the decoding key the public and private",
    "start": "2511920",
    "end": "2518370"
  },
  {
    "text": "keys in in darker secret and thus creat",
    "start": "2518370",
    "end": "2523440"
  },
  {
    "text": "just pulled the key and just run the ER mechanism that you saw can",
    "start": "2523440",
    "end": "2529500"
  },
  {
    "text": "IML blah blah blah and it's unencrypted the keys and and spit out the property",
    "start": "2529500",
    "end": "2535410"
  },
  {
    "text": "files and they they have the plane the the the secrets in plaintext but you",
    "start": "2535410",
    "end": "2541020"
  },
  {
    "text": "can't access a container from the outside unless you are authorized so it's secure enough for us now we we are",
    "start": "2541020",
    "end": "2549630"
  },
  {
    "text": "considering maybe migrating this stuff to to vote but the main problem remains",
    "start": "2549630",
    "end": "2556200"
  },
  {
    "text": "that do you want to put that in in vault",
    "start": "2556200",
    "end": "2561360"
  },
  {
    "text": "and just say everything will be will be story involved and nobody can maybe read",
    "start": "2561360",
    "end": "2566850"
  },
  {
    "text": "by this back the secrets and maybe you can't even decode it actually for",
    "start": "2566850",
    "end": "2571860"
  },
  {
    "text": "example in Tucker you can't read a secret if I remember correctly we're not",
    "start": "2571860",
    "end": "2577860"
  },
  {
    "text": "completely we have not completely decided what we want to do with the secrets and it's an ongoing topic also",
    "start": "2577860",
    "end": "2584150"
  },
  {
    "text": "in the docker community because there are a lot of bad practices and people",
    "start": "2584150",
    "end": "2591570"
  },
  {
    "text": "are uncovering new ways to do it but there is no definite answer so we're still investigating",
    "start": "2591570",
    "end": "2597740"
  },
  {
    "text": "I'll follow up on that is if if you're staying just within the darker world so",
    "start": "2597740",
    "end": "2603840"
  },
  {
    "text": "you're using docker secrets the best practice today is to just version those secrets so you'll write in a version my",
    "start": "2603840",
    "end": "2611880"
  },
  {
    "text": "secret you know docker secret create and you know the the name you'll give it give it a version so that",
    "start": "2611880",
    "end": "2617610"
  },
  {
    "text": "could be a date it could be a tag it could be you know any anything version",
    "start": "2617610",
    "end": "2622980"
  },
  {
    "text": "one and then if you want to rotate those secrets then you create a new secret version two and then you adjust and that",
    "start": "2622980",
    "end": "2632070"
  },
  {
    "text": "and that way what it does is your secrets then become traceable as well in other words it's not just you know my",
    "start": "2632070",
    "end": "2639030"
  },
  {
    "text": "MySQL password and it's the same variable every single time you can know exactly which version of that password",
    "start": "2639030",
    "end": "2646800"
  },
  {
    "text": "based on a date or based on you know a shower or or any type of or sequence",
    "start": "2646800",
    "end": "2652710"
  },
  {
    "text": "that you want to use",
    "start": "2652710",
    "end": "2656300"
  },
  {
    "start": "2655000",
    "end": "3151000"
  },
  {
    "text": "okay the question is we use console and how do we use it actually we don't use",
    "start": "2659080",
    "end": "2669290"
  },
  {
    "text": "it for a configuration management right now and but we but we plan to and the",
    "start": "2669290",
    "end": "2677600"
  },
  {
    "text": "question remains do UPS or they have use cancel directly and just cow",
    "start": "2677600",
    "end": "2686290"
  },
  {
    "text": "some some key information into it and that's it but my opinion is that we",
    "start": "2686290",
    "end": "2694040"
  },
  {
    "text": "should for a conversion management especially when it's not secret you should have full traceability so",
    "start": "2694040",
    "end": "2699890"
  },
  {
    "text": "gate is a I'm a my opinion it's the best place to put these because now you can",
    "start": "2699890",
    "end": "2705910"
  },
  {
    "text": "review maybe in a pull request somebody who is trying to do something and we",
    "start": "2705910",
    "end": "2712400"
  },
  {
    "text": "want to do maybe you want to say oh no don't do this because there isn't some better way or no no you're not allowed",
    "start": "2712400",
    "end": "2718130"
  },
  {
    "text": "to do this we are like sixty developers and some of them are engine yeah and and",
    "start": "2718130",
    "end": "2725170"
  },
  {
    "text": "sometimes there is a little like wool of confusion between teams because we don't work very closely and they don't they",
    "start": "2725170",
    "end": "2732410"
  },
  {
    "text": "don't know what we are trying to achieve because of the distance and the future whatever you want and sometimes they did",
    "start": "2732410",
    "end": "2740600"
  },
  {
    "text": "in the in the CMDB is they did modifications and with now we were not aware of and then like two weeks later",
    "start": "2740600",
    "end": "2747050"
  },
  {
    "text": "who did this and we didn't know that they had changed something in summer",
    "start": "2747050",
    "end": "2752990"
  },
  {
    "text": "environment which worked for their environment but not for the other one because they were just responsible for",
    "start": "2752990",
    "end": "2758540"
  },
  {
    "text": "this environment and they felt that it was not the job to update all the environments and that kind of stuff and",
    "start": "2758540",
    "end": "2765080"
  },
  {
    "text": "when it went like crazy and we just spent days to debug problems so let's",
    "start": "2765080",
    "end": "2771590"
  },
  {
    "text": "put everything in gate and let's just use commits and for triggering update in",
    "start": "2771590",
    "end": "2783770"
  },
  {
    "text": "another system so for example console so we use console only for service",
    "start": "2783770",
    "end": "2788990"
  },
  {
    "text": "discovery today so we register services in council and so other",
    "start": "2788990",
    "end": "2795290"
  },
  {
    "text": "services can look up services by a console and also with some we use some",
    "start": "2795290",
    "end": "2801290"
  },
  {
    "text": "of the key value store in console to store some specifics about the service",
    "start": "2801290",
    "end": "2806630"
  },
  {
    "text": "like the contract that they provide mobile there is a debate so we would",
    "start": "2806630",
    "end": "2813380"
  },
  {
    "text": "have these debates with between the devil and the ops teams were where to",
    "start": "2813380",
    "end": "2818810"
  },
  {
    "text": "store and you know console comes up all the time so some of the the advantages of of",
    "start": "2818810",
    "end": "2826579"
  },
  {
    "text": "using or I would say the the main the main thing that comes up is everybody",
    "start": "2826579",
    "end": "2833000"
  },
  {
    "text": "says yeah but forget what if get goes down right and whereas console you can",
    "start": "2833000",
    "end": "2839480"
  },
  {
    "text": "make it you know high availability and disaster recovery and all that so there there's a sort of debate that's going on",
    "start": "2839480",
    "end": "2846849"
  },
  {
    "text": "should you introduce another system there and as you was saying it's you",
    "start": "2846849",
    "end": "2852980"
  },
  {
    "text": "should probably only have one golden source so use git as your golden source that way you trace everything because",
    "start": "2852980",
    "end": "2859640"
  },
  {
    "text": "what happens with if you go to console I would think of it more as a cache of your golden source what happens if you",
    "start": "2859640",
    "end": "2866960"
  },
  {
    "text": "go to console then let's say you need to start rolling back things then all of a sudden you're like oh well let's start versioning things in console and then as",
    "start": "2866960",
    "end": "2874069"
  },
  {
    "text": "you said it's like well who changed what in console okay let's start assigning you know role based access control into",
    "start": "2874069",
    "end": "2880790"
  },
  {
    "text": "console and and then you start doing traceability and diffing and everything you end up redoing get in console right",
    "start": "2880790",
    "end": "2888530"
  },
  {
    "text": "so if that's the case what's the better thing to do is to just make a git and if",
    "start": "2888530",
    "end": "2895640"
  },
  {
    "text": "you have to create a Enterprise get or highly available disaster recovery get",
    "start": "2895640",
    "end": "2902359"
  },
  {
    "text": "just for configuration management for your runtime but as we see today I mean",
    "start": "2902359",
    "end": "2908720"
  },
  {
    "text": "if the developer platform org it goes down you know your company loses so much money anyways that the big trend right",
    "start": "2908720",
    "end": "2915890"
  },
  {
    "text": "now is is is that house it's it's just as valuable as production right it has",
    "start": "2915890",
    "end": "2920990"
  },
  {
    "text": "to be up all the time I just want to add that when we say git actually we say we mean github because we have a github",
    "start": "2920990",
    "end": "2927380"
  },
  {
    "text": "enterprise on-premise yeah so the question is is there there's build apps",
    "start": "2927380",
    "end": "2934460"
  },
  {
    "text": "and there's run apps and what if and the build apps are usually bigger and the run apps you optimize them the question",
    "start": "2934460",
    "end": "2940940"
  },
  {
    "text": "is is what if in your CCI CD pipeline you have a lot of build apps as we do",
    "start": "2940940",
    "end": "2947360"
  },
  {
    "text": "yeah and they actually do so so this is just two ends of the spectrum obviously",
    "start": "2947360",
    "end": "2953990"
  },
  {
    "text": "you can you can then have something in the middle and you can actually start to optimize your build apps as well it all",
    "start": "2953990",
    "end": "2960770"
  },
  {
    "text": "depends on what your frequency is of your CI CD pipeline do you want to add anything to that yeah yeah we actually",
    "start": "2960770",
    "end": "2967790"
  },
  {
    "text": "are running into some problems about the build Abid not so much because the build",
    "start": "2967790",
    "end": "2973310"
  },
  {
    "text": "up are too big it's rather that for",
    "start": "2973310",
    "end": "2979760"
  },
  {
    "text": "example we use we are we are in Java right so we use maven so when we say may",
    "start": "2979760",
    "end": "2985190"
  },
  {
    "text": "even we're a company we use Nexus or active factory or whatever and we have",
    "start": "2985190",
    "end": "2991130"
  },
  {
    "text": "trouble with for example the local repo which will hold all the dependencies",
    "start": "2991130",
    "end": "2998350"
  },
  {
    "text": "thanks to be it tends to be very very large and we are we have run into problems",
    "start": "2998350",
    "end": "3006670"
  },
  {
    "text": "with that because the host can be very",
    "start": "3006670",
    "end": "3013500"
  },
  {
    "text": "there is not too many too much space and it can be a bit and cumbersome to to",
    "start": "3013500",
    "end": "3021340"
  },
  {
    "text": "have all these build images all over the place maybe some team will have that",
    "start": "3021340",
    "end": "3028960"
  },
  {
    "text": "part of these libraries and other team will have like these libraries but you won't you don't want to share these",
    "start": "3028960",
    "end": "3034870"
  },
  {
    "text": "right because you don't want side effects we're doing bills so each one should have his own volume this volume",
    "start": "3034870",
    "end": "3042460"
  },
  {
    "text": "and so on so on so it's it's difficult to to to to decide which strategy do we",
    "start": "3042460",
    "end": "3049210"
  },
  {
    "text": "have a shared volume or volume mounted do we in some days build image do we",
    "start": "3049210",
    "end": "3057760"
  },
  {
    "text": "just pull every dependencies that we can and have that as a layer in the docker image",
    "start": "3057760",
    "end": "3064860"
  },
  {
    "text": "it's difficult to say and also we also had some problem because some bills were",
    "start": "3064860",
    "end": "3071290"
  },
  {
    "text": "running on nodes in the docker swamp where they were not supposed to so we",
    "start": "3071290",
    "end": "3076570"
  },
  {
    "text": "are you know still finding some solutions to that and we are we have some actually yep did that answer your",
    "start": "3076570",
    "end": "3085270"
  },
  {
    "text": "question but but if the problem is the",
    "start": "3085270",
    "end": "3091450"
  },
  {
    "text": "size of the building edge you can apply the same technique techniques then for the the run app obviously you can I",
    "start": "3091450",
    "end": "3097990"
  },
  {
    "text": "don't know if you don't don't need some part of you can obviously there are some",
    "start": "3097990",
    "end": "3103840"
  },
  {
    "text": "techniques you can remove avoid to to to have big zip files or cross layers just",
    "start": "3103840",
    "end": "3110350"
  },
  {
    "text": "remove them whenever you can and so on its own one command that's very helpful",
    "start": "3110350",
    "end": "3115810"
  },
  {
    "text": "for optimizing images is you do a darker history and then you don't you give the name of the image and it'll print out in",
    "start": "3115810",
    "end": "3123970"
  },
  {
    "text": "reverse order all of the the layers basically and all of the commands that go into it you and and also the size",
    "start": "3123970",
    "end": "3130330"
  },
  {
    "text": "that it adds very quickly you can see oh I did like a copy and then unzip whereas",
    "start": "3130330",
    "end": "3136810"
  },
  {
    "text": "I could have just done that in one thing and I can minimize the size of my image",
    "start": "3136810",
    "end": "3142500"
  },
  {
    "text": "okay thank you guys don't forget to vote",
    "start": "3144000",
    "end": "3149160"
  },
  {
    "text": "[Applause]",
    "start": "3149160",
    "end": "3153380"
  }
]