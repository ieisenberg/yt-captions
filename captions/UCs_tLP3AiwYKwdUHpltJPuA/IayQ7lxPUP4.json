[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "[Music]",
    "start": "5870",
    "end": "11370"
  },
  {
    "text": "uh this talk I I was telling somebody yesterday that this talk was actually a lot harder for me to write than I anticipated it being because I've I've",
    "start": "12120",
    "end": "19439"
  },
  {
    "text": "been doing scholar for about four years which really isn't that long but it's really easy to kind of forget all of the",
    "start": "19439",
    "end": "24920"
  },
  {
    "text": "things that you start to take for granted when you do an introduction and so hopefully I've done a pretty good job",
    "start": "24920",
    "end": "30199"
  },
  {
    "text": "of starting at the beginning here but if you don't have any previous knowledge of schola and anything doesn't make sense",
    "start": "30199",
    "end": "36160"
  },
  {
    "text": "please let me know I think one of my big goals for the scholar Community is making it more welcoming to beginners I",
    "start": "36160",
    "end": "41879"
  },
  {
    "text": "think it's a very good language to teach people and unfortunately there's not a ton of resources out there that allow",
    "start": "41879",
    "end": "47559"
  },
  {
    "text": "that right now this talk along with some of the other things that I'll mention in the talk uh are an attempt to bridge",
    "start": "47559",
    "end": "53879"
  },
  {
    "text": "that Gap but again don't be shy uh there is no such thing as a stupid question let me know uh either Twitter Ms come up",
    "start": "53879",
    "end": "60879"
  },
  {
    "text": "to me after if anything doesn't make sense uh I I will take that upon myself to hopefully clarify that for you or",
    "start": "60879",
    "end": "67080"
  },
  {
    "text": "help you find the person that can answer that question uh so this this background",
    "start": "67080",
    "end": "73200"
  },
  {
    "start": "70000",
    "end": "156000"
  },
  {
    "text": "picture here this is lon in Switzerland it's kind of app we're at the Swiss Hotel so I I put this here well one it's",
    "start": "73200",
    "end": "79640"
  },
  {
    "text": "a pretty picture that makes for a good slide but also Lon is where the epfl",
    "start": "79640",
    "end": "85000"
  },
  {
    "text": "university is and this is the University there the creator of schola works and so",
    "start": "85000",
    "end": "90400"
  },
  {
    "text": "he's a man by the name of Martin ODI he created Scola in the early 2000s Scola",
    "start": "90400",
    "end": "95720"
  },
  {
    "text": "has been around since about 2004 and they continue to do a lot of development out of this University in",
    "start": "95720",
    "end": "102600"
  },
  {
    "text": "Lon and so there's academics PhD students and professors that are working on the language and so I'm here today to",
    "start": "102600",
    "end": "109600"
  },
  {
    "text": "kind of translate that into something that's useful for all of you bridge the gap there between Academia and what",
    "start": "109600",
    "end": "116680"
  },
  {
    "text": "might be interesting to you as industry programmers that want to learn a little bit",
    "start": "116680",
    "end": "122759"
  },
  {
    "text": "more so as George mentioned my name is Kelly I lead a team of scholar developers and data scientists at share",
    "start": "122759",
    "end": "129319"
  },
  {
    "text": "through in San Francisco we are an adte company keeping the internet free uh yeah and as a manager mostly",
    "start": "129319",
    "end": "137720"
  },
  {
    "text": "these days I find myself writing less code and often explaining how things",
    "start": "137720",
    "end": "143120"
  },
  {
    "text": "work to other people whether that's other Engineers or product or Executives and so hopefully the demystification is",
    "start": "143120",
    "end": "149480"
  },
  {
    "text": "something that I've had a tiny bit of practice at at this point and I'm going to try to translate to all of you",
    "start": "149480",
    "end": "155080"
  },
  {
    "text": "today all right what are we going to talk about so we're going to provide the what what is Scola provide you a brief",
    "start": "155080",
    "end": "161879"
  },
  {
    "start": "156000",
    "end": "232000"
  },
  {
    "text": "introduction we'll go over some of the syntax here so for people that haven't seen the language before get a little",
    "start": "161879",
    "end": "167720"
  },
  {
    "text": "bit of an intro to what the language is then we'll talk about why people use",
    "start": "167720",
    "end": "173040"
  },
  {
    "text": "Scala and probably why you might not or I don't know this this section might I",
    "start": "173040",
    "end": "178879"
  },
  {
    "text": "might ramble more about about why you shouldn't use schola more than you should we'll see how it goes and then if",
    "start": "178879",
    "end": "184879"
  },
  {
    "text": "you are interested in learning more how you can get started all right so let's start with an introduction to scholet so",
    "start": "184879",
    "end": "191840"
  },
  {
    "text": "this is going to be pretty quick after this session you're probably not going to be an expert scholar developer uh I",
    "start": "191840",
    "end": "198400"
  },
  {
    "text": "give you the tools later on to kind of go around and play with the language if you're interested but if any of this",
    "start": "198400",
    "end": "205400"
  },
  {
    "text": "seems quick or like I mentioned if there's anything that's unclear let me know after hopefully the resources are",
    "start": "205400",
    "end": "211080"
  },
  {
    "text": "there for you to look things up um the goal is to give you some familiarity with the language and some idea of the",
    "start": "211080",
    "end": "217200"
  },
  {
    "text": "things that you might see or hear about so that you can then go and know what to Google later which let's be honest as",
    "start": "217200",
    "end": "222959"
  },
  {
    "text": "software Engineers is our entire job also some warnings of common gotas",
    "start": "222959",
    "end": "230120"
  },
  {
    "text": "which in any language there's going to be a few okay um in order to explain",
    "start": "230120",
    "end": "235360"
  },
  {
    "start": "232000",
    "end": "535000"
  },
  {
    "text": "Scala I need to explain AA Garten who here knows who Ina Garten is okay you're are my new best friends for",
    "start": "235360",
    "end": "242360"
  },
  {
    "text": "everyone that doesn't know who AA Garten is AA Garten is my personal hero uh AA",
    "start": "242360",
    "end": "247400"
  },
  {
    "text": "is a chef on the Food Network she has a show called The Barefoot Contessa what",
    "start": "247400",
    "end": "253079"
  },
  {
    "text": "you might not know about AA is that back in the 1970s AA worked in the white house for the Office of Management and",
    "start": "253079",
    "end": "259280"
  },
  {
    "text": "budget writing nuclear policy budgets and around my age she got bored",
    "start": "259280",
    "end": "264560"
  },
  {
    "text": "with that as one does and said screw this I'm going to go buy a gourmet",
    "start": "264560",
    "end": "269840"
  },
  {
    "text": "grocery store in East Hampton and so she did that and has been cooking and writing cookbooks and",
    "start": "269840",
    "end": "277280"
  },
  {
    "text": "appearing on her Food Network show ever since so I could make some explanation",
    "start": "277280",
    "end": "282440"
  },
  {
    "text": "or metaphor about how Ina Garten represents Scola you know she's creative she's powerful she's successful but",
    "start": "282440",
    "end": "288840"
  },
  {
    "text": "really I just introduce her so that you have some context because I'm going to use her in all of my examples so we're",
    "start": "288840",
    "end": "294000"
  },
  {
    "text": "all on the same page now all right some syntax intro for Scala",
    "start": "294000",
    "end": "301000"
  },
  {
    "text": "so one of the things that you might notice about Scola is there's no parenthesis on method calls so that's",
    "start": "301000",
    "end": "306600"
  },
  {
    "text": "something that you see in a language like Java so you can call is empty which will return a Boolean uh without the",
    "start": "306600",
    "end": "313400"
  },
  {
    "text": "parentheses uh semicolons are optional you can include them most Scala programmers don't uh and Scala is a",
    "start": "313400",
    "end": "321120"
  },
  {
    "text": "language that's statically typed so every return value has a type and that",
    "start": "321120",
    "end": "326400"
  },
  {
    "text": "type doesn't change and it also has Type inference and so you'll see chefs there",
    "start": "326400",
    "end": "333440"
  },
  {
    "text": "you don't have to specify what type that value is the scholar compiler will figure that out for you and so it knows",
    "start": "333440",
    "end": "340600"
  },
  {
    "text": "that that's a list of strings and then elements in a list are indexed by parentheses which is a little",
    "start": "340600",
    "end": "346639"
  },
  {
    "text": "confusing but that's how we do it uh AA is a very practical",
    "start": "346639",
    "end": "353000"
  },
  {
    "text": "Chef this is a catchphrase that she's known for so if you are not somebody that",
    "start": "353000",
    "end": "358520"
  },
  {
    "text": "wants to go through the trouble of figuring out how to grow your own Granny Smith apple trees store bought is fine",
    "start": "358520",
    "end": "365080"
  },
  {
    "text": "and so if we want to write a function to tell us if store bought is fine this is",
    "start": "365080",
    "end": "370280"
  },
  {
    "text": "one of the ways we can do it and so what I'm going to start to get into is there are many ways to write a function which is a common theme to Scola which is",
    "start": "370280",
    "end": "377160"
  },
  {
    "text": "there's many ways to do anything in Scala and so this is one example of how you write a function in Scola you'll",
    "start": "377160",
    "end": "383199"
  },
  {
    "text": "notice that all of the arguments in the method have to have a type and so your",
    "start": "383199",
    "end": "389199"
  },
  {
    "text": "name there as of type string every function also has a return type and the",
    "start": "389199",
    "end": "394960"
  },
  {
    "text": "return value is the last line of the",
    "start": "394960",
    "end": "399479"
  },
  {
    "text": "method this is the same function um because the return value is the last mind of the method you don't have to set",
    "start": "400160",
    "end": "406759"
  },
  {
    "text": "it to a value so this is equivalent to what we saw on the last page and because",
    "start": "406759",
    "end": "412039"
  },
  {
    "text": "this is only now one line you don't have to include the curly braces in the",
    "start": "412039",
    "end": "417639"
  },
  {
    "text": "method this is the same thing again and you don't have to specify the",
    "start": "417639",
    "end": "424520"
  },
  {
    "text": "return value because functions like values also have type inference and so this method will be able to infer that",
    "start": "424520",
    "end": "430319"
  },
  {
    "text": "the return type is a Boolean however types provide safety",
    "start": "430319",
    "end": "435840"
  },
  {
    "text": "this is one of the reason people like statically typed languages and so if you were to write this function and you knew",
    "start": "435840",
    "end": "441720"
  },
  {
    "text": "that this function you wanted it to return a Boolean and you accidentally returned a string value the compiler",
    "start": "441720",
    "end": "447759"
  },
  {
    "text": "would tell you that this was a an error ER and you wouldn't have to write a test for this which is pretty useful and so I",
    "start": "447759",
    "end": "454599"
  },
  {
    "text": "advocate for using types especially in functions and for values when there's a chance that you might mess something up",
    "start": "454599",
    "end": "460919"
  },
  {
    "text": "and let's be honest as programmers we often mess things up I would like the compiler to tell me when I'm wrong instead of having to rely on my",
    "start": "460919",
    "end": "468879"
  },
  {
    "text": "memory uh and then calling a function here is how you can call the function again the compiler will help you here so",
    "start": "468879",
    "end": "475960"
  },
  {
    "text": "uh you know you can feed in a string which is what it's expecting and that will be fine but then if you give it an integer it will throw an error from the",
    "start": "475960",
    "end": "484280"
  },
  {
    "text": "compiler a little bit more of the syntax data is immutable by default and so if",
    "start": "484960",
    "end": "491240"
  },
  {
    "text": "you set Ina Garten's name to the Barefoot contesta you can't change that value later and so unfortunately for me",
    "start": "491240",
    "end": "499000"
  },
  {
    "text": "I cannot become the Barefoot Contessa but it's safer for the overall program and then this is the same thing",
    "start": "499000",
    "end": "505720"
  },
  {
    "text": "if you do any methods on values you can change the value but that's going to return a new value and if you then print",
    "start": "505720",
    "end": "513440"
  },
  {
    "text": "the old value after you do that to uppercase uh call on it it's going to return what you had before so values",
    "start": "513440",
    "end": "520320"
  },
  {
    "text": "remain unchanged that was some syntax now we'll",
    "start": "520320",
    "end": "525839"
  },
  {
    "text": "talk a little bit about uh some of the features of the language and some of the things that",
    "start": "525839",
    "end": "531120"
  },
  {
    "text": "Scola Prides itself on and some of the things that you're going to hear about a lot when people talk about what Scala",
    "start": "531120",
    "end": "536839"
  },
  {
    "start": "535000",
    "end": "570000"
  },
  {
    "text": "is this is probably one of the biggest things that you hear often about Scola I think I put it in the abstract is that",
    "start": "536839",
    "end": "542320"
  },
  {
    "text": "it's some combination of objectoriented meets functional programming when we talk about object oriented you're",
    "start": "542320",
    "end": "548600"
  },
  {
    "text": "thinking objects are values there and that operations on values are method calls this is very similar to things",
    "start": "548600",
    "end": "555200"
  },
  {
    "text": "that you see in Java but it also has functional programming and I think for a",
    "start": "555200",
    "end": "560240"
  },
  {
    "text": "lot of people I think that's the the bigger jump and so I'll talk a little bit about what what functional programming is to me and what I think",
    "start": "560240",
    "end": "566959"
  },
  {
    "text": "you need to know in order to get a base understanding of functional programming in",
    "start": "566959",
    "end": "572000"
  },
  {
    "start": "570000",
    "end": "670000"
  },
  {
    "text": "schola so first of all functional programming is an example of a programming Paradigm it is a style or a",
    "start": "572000",
    "end": "579480"
  },
  {
    "text": "way of doing things it is not something concrete like a language and that's an",
    "start": "579480",
    "end": "584760"
  },
  {
    "text": "important distinction to make because you can do this style this functional programming style object-oriented as a",
    "start": "584760",
    "end": "590800"
  },
  {
    "text": "style imperative as a style you can do this in any language but some languages make it easier to write in this style",
    "start": "590800",
    "end": "597000"
  },
  {
    "text": "Scola makes it easy to write in a functional Style the biggest thing about functional",
    "start": "597000",
    "end": "602800"
  },
  {
    "text": "programming is that everything is an expression and so when we talk about Expressions you can talk about thinking",
    "start": "602800",
    "end": "609160"
  },
  {
    "text": "in values and not side effects you're not causing effects all over your program everything's going to return a",
    "start": "609160",
    "end": "615000"
  },
  {
    "text": "value and a statement in that case so a statement something that would cause a side effect is going to be a method that",
    "start": "615000",
    "end": "623160"
  },
  {
    "text": "has a special return type of unit and so unit is kind of like void it's just basically saying that nothing is",
    "start": "623160",
    "end": "628920"
  },
  {
    "text": "happening there's no return type there and that's indicating that there is some side effect that's happening in the",
    "start": "628920",
    "end": "634200"
  },
  {
    "text": "function excuse me and expressions are useful for functional programming because it helps",
    "start": "634200",
    "end": "640480"
  },
  {
    "text": "us break our programs into smaller pieces and this helps us as programmers reason about our programs and understand",
    "start": "640480",
    "end": "647639"
  },
  {
    "text": "the meaning of our programs functional programming as a discipline came to be",
    "start": "647639",
    "end": "652959"
  },
  {
    "text": "because people were trying to be able to better understand what their programs were doing so if you think about",
    "start": "652959",
    "end": "658320"
  },
  {
    "text": "breaking things into pie you know that this piece over here is doing something and this piece over here is doing",
    "start": "658320",
    "end": "663600"
  },
  {
    "text": "something else and you can combine those together to make more complicated programs but that it's easier to reason",
    "start": "663600",
    "end": "669120"
  },
  {
    "text": "about and test the individual Parts uh wanted to quickly talk about",
    "start": "669120",
    "end": "674880"
  },
  {
    "start": "670000",
    "end": "746000"
  },
  {
    "text": "side effects so when we talk about side effects a reminder side effects are not inherently bad people talk about wanting",
    "start": "674880",
    "end": "682120"
  },
  {
    "text": "to avoid side effects because they do come with some downsides and we say a",
    "start": "682120",
    "end": "687720"
  },
  {
    "text": "function or something in your is side affecting if it modifies State outside of its scope and so that's things like",
    "start": "687720",
    "end": "694959"
  },
  {
    "text": "modifying Global variables something that you see in a lot of languages when you're iterating through a list every",
    "start": "694959",
    "end": "700360"
  },
  {
    "text": "time you do that i++ you're modifying State you're changing something outside of the scope",
    "start": "700360",
    "end": "706680"
  },
  {
    "text": "there uh side effects also occur when you're dealing with the outside world and so anything like um like making an",
    "start": "706680",
    "end": "713959"
  },
  {
    "text": "API request or printing to the console those are also examples of side effects",
    "start": "713959",
    "end": "719000"
  },
  {
    "text": "and so people want to avoid side effects because they're make your program not as predictable when you're dealing with the",
    "start": "719000",
    "end": "725480"
  },
  {
    "text": "outside world you don't know what's going to happen there the API request could fail the console something could happen with your computer you never know",
    "start": "725480",
    "end": "732360"
  },
  {
    "text": "but um again like you need side effects at some point you have to interact with the outside world in order for your program to do anything useful the idea",
    "start": "732360",
    "end": "739240"
  },
  {
    "text": "of functional programming is isolating those to certain parts of your programs the rest of it is easier to reason",
    "start": "739240",
    "end": "747320"
  },
  {
    "start": "746000",
    "end": "875000"
  },
  {
    "text": "about and so when an exp expression has no side effects we call it a pure function and pure functions have this",
    "start": "747320",
    "end": "754120"
  },
  {
    "text": "property called referential transparency and referential transparency is a big word that's the same thing as saying",
    "start": "754120",
    "end": "760320"
  },
  {
    "text": "that a value can replace the function and there's not going to be anything else that happens as a result so you can",
    "start": "760320",
    "end": "767480"
  },
  {
    "text": "replace your your value of like if you're calling an API uh in a in a method then if you replace that with a",
    "start": "767480",
    "end": "774000"
  },
  {
    "text": "value your program State's going to change because then you're not going to have that side effect there and so",
    "start": "774000",
    "end": "779480"
  },
  {
    "text": "referential transparency and pure functions can be used interchangeably and again this makes it",
    "start": "779480",
    "end": "784560"
  },
  {
    "text": "easier to reason about your programs in smaller pieces immutable data is also a huge",
    "start": "784560",
    "end": "792040"
  },
  {
    "text": "bonus for Expressions because if we were modifying State constantly that would detract from that idea of making it",
    "start": "792040",
    "end": "798120"
  },
  {
    "text": "easier to reason about your programs so Expressions wrapping up this",
    "start": "798120",
    "end": "804279"
  },
  {
    "text": "idea of functional programming they most functional programming encourages using",
    "start": "804279",
    "end": "809519"
  },
  {
    "text": "this idea of pure expressions of avoiding side effects for as long as",
    "start": "809519",
    "end": "814680"
  },
  {
    "text": "possible so that you can minimize the amount of unpredictability that there is in your programs I mentioned this earlier but",
    "start": "814680",
    "end": "821760"
  },
  {
    "text": "pure functions are also infinitely easier to unit test and so you can take some of these principles that a language",
    "start": "821760",
    "end": "828160"
  },
  {
    "text": "like Scala makes it easy to do but again this is just a style so you can do this in any language that you're working in",
    "start": "828160",
    "end": "835160"
  },
  {
    "text": "and you can think about some of these benefits of writing small reusable pieces of code that are easier to unit",
    "start": "835160",
    "end": "840360"
  },
  {
    "text": "test long drown out methods that have a lot of side effects are going to require inserting things like testing mocks and",
    "start": "840360",
    "end": "846480"
  },
  {
    "text": "that's going to make it harder to write unit tests for your",
    "start": "846480",
    "end": "851199"
  },
  {
    "text": "code we've introduced some of the paradigms that Scola follows objectoriented and functional and what",
    "start": "852279",
    "end": "858519"
  },
  {
    "text": "are some of the features that Scola then employs to make these paradigms what they are uh this list is ripped directly",
    "start": "858519",
    "end": "865600"
  },
  {
    "text": "from the Scala Lang homepage it's scholar.org which is a weird website title but alas",
    "start": "865600",
    "end": "871440"
  },
  {
    "text": "there you have it and I'm going to talk about a few of them the first one that I wanted to",
    "start": "871440",
    "end": "878199"
  },
  {
    "start": "875000",
    "end": "989000"
  },
  {
    "text": "mention is the interoperability with Java so Scala is a language that runs on the jvm what does that mean so Scala",
    "start": "878199",
    "end": "886079"
  },
  {
    "text": "compiles to Java bite code and the jvm the Java virtual machine is able to run",
    "start": "886079",
    "end": "891680"
  },
  {
    "text": "that and so this is useful because like you have different reasons for different programming languages scull is another",
    "start": "891680",
    "end": "898720"
  },
  {
    "text": "language that gives you some tools that to write software in a slightly different way than Java does but Java is",
    "start": "898720",
    "end": "904680"
  },
  {
    "text": "a tried and tested environment essentially that you can easily deploy",
    "start": "904680",
    "end": "910360"
  },
  {
    "text": "there are a lot of tooling around that and this has been around for three decades or more that you can use a lot",
    "start": "910360",
    "end": "917399"
  },
  {
    "text": "of those tools that Java has made for the community that they've been a part",
    "start": "917399",
    "end": "922680"
  },
  {
    "text": "of to make sure that the the code is is runable on multiple environments it has",
    "start": "922680",
    "end": "928079"
  },
  {
    "text": "the VM so this SCA doesn't have to work on worry about compiling to different",
    "start": "928079",
    "end": "933759"
  },
  {
    "text": "Hardware what else so you can also use Java libraries in Scala because",
    "start": "933759",
    "end": "938839"
  },
  {
    "text": "different stack traces can mix in seamlessly and this is really useful especially helping a language like Scala",
    "start": "938839",
    "end": "944199"
  },
  {
    "text": "gain popularity very quickly I think a lot of languages you know that are only like 13 years old don't get the kind of",
    "start": "944199",
    "end": "951519"
  },
  {
    "text": "popularity that they do unless they play nicely with some existing environment and that's one of the things the scholet",
    "start": "951519",
    "end": "957800"
  },
  {
    "text": "gives you and so you can use Java libraries directly in your scolar code so you don't have to reimplement a lot",
    "start": "957800",
    "end": "963720"
  },
  {
    "text": "of the more complicated things and so there's a lot of like math libraries that do differential equations or things",
    "start": "963720",
    "end": "970440"
  },
  {
    "text": "like that that you might be importing because scholar doesn't have the equivalent and it doesn't need the equivalent because it already",
    "start": "970440",
    "end": "978440"
  },
  {
    "text": "exists yes so then also the virtual machine can run on any platform and there's a lot of tools for for testing",
    "start": "979120",
    "end": "984720"
  },
  {
    "text": "and debugging your environment debugging Java bite code and those things",
    "start": "984720",
    "end": "990720"
  },
  {
    "start": "989000",
    "end": "1045000"
  },
  {
    "text": "all right type inference is another big thing that people like about Scola and so I showed you that before you don't",
    "start": "990720",
    "end": "996160"
  },
  {
    "text": "have to specify every type on every value or function and this is really useful because it helps write more",
    "start": "996160",
    "end": "1002720"
  },
  {
    "text": "expressive code you don't have to take the time or the keystrokes to necessarily type out the type of every",
    "start": "1002720",
    "end": "1009240"
  },
  {
    "text": "single type in your program and this saves you the programmer time but again",
    "start": "1009240",
    "end": "1015120"
  },
  {
    "text": "as we saw in our function example sometimes these are helpful for you and",
    "start": "1015120",
    "end": "1020560"
  },
  {
    "text": "so this is one of the things that you have to learn with Scola is when it's useful to write the type and when it's",
    "start": "1020560",
    "end": "1027720"
  },
  {
    "text": "useful to leave it off and sometimes it can get to verose sometimes it's really useful for you to make sure that that is",
    "start": "1027720",
    "end": "1034079"
  },
  {
    "text": "known it's not only safety and a built-in test for your code be that the compiler will catch but you can think of",
    "start": "1034079",
    "end": "1040959"
  },
  {
    "text": "it as also documentation for the next person that's editing that code",
    "start": "1040959",
    "end": "1047038"
  },
  {
    "start": "1045000",
    "end": "1098000"
  },
  {
    "text": "another thing that Scola has that they like to talk about is the uh the multiple inheritance of traits and so",
    "start": "1049640",
    "end": "1055039"
  },
  {
    "text": "there's very flexible interfaces that you can do with Scala mix in multiple traits to a given class and we can look",
    "start": "1055039",
    "end": "1061080"
  },
  {
    "text": "at an example of this uh so traits can extend other traits and then you can",
    "start": "1061080",
    "end": "1066640"
  },
  {
    "text": "have traits that extend traits that extend traits and so in this example you know you have Ina Garten that's a Food",
    "start": "1066640",
    "end": "1072280"
  },
  {
    "text": "Network star and also a best-selling author but because she's a Food Network star that also makes her a celebrity",
    "start": "1072280",
    "end": "1077880"
  },
  {
    "text": "chef and so you have this type inheritance and this hierarchy that you've defined here and then if you have",
    "start": "1077880",
    "end": "1084360"
  },
  {
    "text": "something like this the idea here is then you have some function that's going to take in a celebrity chef and then you",
    "start": "1084360",
    "end": "1090360"
  },
  {
    "text": "can use Ina Garten and Roy Choy in the same context even though they technically have different top level",
    "start": "1090360",
    "end": "1098120"
  },
  {
    "start": "1098000",
    "end": "1193000"
  },
  {
    "text": "types pattern matching is a really useful uh feature that Scala provides in",
    "start": "1100320",
    "end": "1105720"
  },
  {
    "text": "the language you can think of it as switch on steroids uh you can match against class hierarchy sequences values",
    "start": "1105720",
    "end": "1112720"
  },
  {
    "text": "types anything that you want this is a very basic example of what pattern",
    "start": "1112720",
    "end": "1117880"
  },
  {
    "text": "matching in scolar will do so you'll take in some value and then match on what that value is and return some",
    "start": "1117880",
    "end": "1124000"
  },
  {
    "text": "different value there the underscore is the catchall case in this situation and",
    "start": "1124000",
    "end": "1129159"
  },
  {
    "text": "you want to make sure that you have that because otherwise you will get an error uh uh runtime exception the compiler",
    "start": "1129159",
    "end": "1135799"
  },
  {
    "text": "doesn't necessarily catch this by default you can configure it so it will but you want to make sure that you",
    "start": "1135799",
    "end": "1141720"
  },
  {
    "text": "provide that default case to catch the uh anything else that you might have",
    "start": "1141720",
    "end": "1147960"
  },
  {
    "text": "missed you can get a little bit more complicated with pattern matching and this is where it starts to become really",
    "start": "1147960",
    "end": "1153240"
  },
  {
    "text": "powerful and so skola has this feature of sealed traits and this is a way of",
    "start": "1153240",
    "end": "1158880"
  },
  {
    "text": "saying that anything that extends that trait is going to be the only things that extend that trait and this is",
    "start": "1158880",
    "end": "1165360"
  },
  {
    "text": "useful in a pattern matching situation because then if you're matching on an an ingredient you know that it's either",
    "start": "1165360",
    "end": "1170480"
  },
  {
    "text": "going to be a produce a meat or a dry good it's never going to be anything else and it can't possibly be anything",
    "start": "1170480",
    "end": "1177000"
  },
  {
    "text": "else so that's really useful for you you don't have to then create",
    "start": "1177000",
    "end": "1182760"
  },
  {
    "text": "some catchall case know what to do with the default there you have to build that into the ingredient syntax that you've",
    "start": "1182760",
    "end": "1190200"
  },
  {
    "text": "defined above and then going back to some of the",
    "start": "1190200",
    "end": "1196400"
  },
  {
    "start": "1193000",
    "end": "1226000"
  },
  {
    "text": "functional paradigms that Scala employs the idea of higher order functions is really useful for the scholar language",
    "start": "1196400",
    "end": "1203400"
  },
  {
    "text": "this allows you as the programmer to be expressive and succinct in the way that you're programming",
    "start": "1203400",
    "end": "1208640"
  },
  {
    "text": "your whatever you're working on at the time functions are first class objects",
    "start": "1208640",
    "end": "1213840"
  },
  {
    "text": "that means that they can be assigned to values they can be passed into functions they can be returned from functions and",
    "start": "1213840",
    "end": "1219960"
  },
  {
    "text": "this treats them like a lot of other things in your programs thinking of functions as values is really",
    "start": "1219960",
    "end": "1226760"
  },
  {
    "start": "1226000",
    "end": "1302000"
  },
  {
    "text": "powerful uh here's an example how scolly uses higher order functions so if you have something uh a shelf life on your",
    "start": "1226760",
    "end": "1234159"
  },
  {
    "text": "ingredient trait uh you can basically split this",
    "start": "1234159",
    "end": "1239240"
  },
  {
    "text": "into two groups and so if you want to partition the list of ingredients that you have into two groups you can then",
    "start": "1239240",
    "end": "1246640"
  },
  {
    "text": "use the higher order function of partition to do that uh and we can compare this to the Java code for this",
    "start": "1246640",
    "end": "1253960"
  },
  {
    "text": "example which is a lot more of a Bose you have to define a lot of different uh lists to in order to uh populate these",
    "start": "1253960",
    "end": "1262880"
  },
  {
    "text": "as the eat now or eat later options and we can look a little bit more at that",
    "start": "1262880",
    "end": "1268320"
  },
  {
    "text": "higher order function so partition there is the higher order function and you because it's taking in a function as its",
    "start": "1268320",
    "end": "1276080"
  },
  {
    "text": "argument and the function signature there is indicated by that fat Arrow which is saying that it's a function",
    "start": "1276080",
    "end": "1283159"
  },
  {
    "text": "from int to type of Boolean and so our input there is that Lambda I and then I",
    "start": "1283159",
    "end": "1290880"
  },
  {
    "text": "is compared to the number seven and that Returns the",
    "start": "1290880",
    "end": "1296120"
  },
  {
    "text": "Boolean uh I will come back to this example in a little bit but first let's talk about why people would use Scala",
    "start": "1299720",
    "end": "1307799"
  },
  {
    "start": "1302000",
    "end": "1455000"
  },
  {
    "text": "and why people like this language as it is and so one of the things that I was looking at when I was writing this talk",
    "start": "1307799",
    "end": "1314279"
  },
  {
    "text": "is my company uses Scala we've been using Scala since 2013 I wasn't there",
    "start": "1314279",
    "end": "1319360"
  },
  {
    "text": "when we made the decision to use Scala but this is a case study that we did with a company called typ safe uh back",
    "start": "1319360",
    "end": "1325919"
  },
  {
    "text": "in 2013 about why my company share through decided to use Scala uh to confuse it a little bit more types safe",
    "start": "1325919",
    "end": "1331600"
  },
  {
    "text": "changed their name to light buend which is what's on all of your lanyards today uh typ safe is was created by the",
    "start": "1331600",
    "end": "1337919"
  },
  {
    "text": "founder of Scola and some other people and they do uh Scola and Java Consulting",
    "start": "1337919",
    "end": "1343120"
  },
  {
    "text": "they also work on the scholar compiler and so there's some people there that in addition to the work that people are",
    "start": "1343120",
    "end": "1348279"
  },
  {
    "text": "doing doing at the epfl in Switzerland are actively contributing to the open source project and making the scholar",
    "start": "1348279",
    "end": "1354360"
  },
  {
    "text": "compiler better creating new releases managing the open source Community",
    "start": "1354360",
    "end": "1359760"
  },
  {
    "text": "managing all the uh projects that are in the core Library so anyway this is a case study",
    "start": "1359760",
    "end": "1366200"
  },
  {
    "text": "back from 2013 and the links there if you want to read it all again this was before my",
    "start": "1366200",
    "end": "1371760"
  },
  {
    "text": "time but a lot of the reasons in it are very familiar and things that you hear a lot when you talk to companies about why",
    "start": "1371760",
    "end": "1376919"
  },
  {
    "text": "they decided to choose schola as the language for their company I liked this quote from the case study which says",
    "start": "1376919",
    "end": "1382640"
  },
  {
    "text": "share through developers were quickly productive with Scola which can be attributed to their familiarity with Java scola's expressiveness and lack of",
    "start": "1382640",
    "end": "1389559"
  },
  {
    "text": "boilerplate code which is some of the things that we've already talked about some of the things that we haven't talked about that were reasons that",
    "start": "1389559",
    "end": "1395240"
  },
  {
    "text": "share through wanted to uh use Scala was we needed performance stability and",
    "start": "1395240",
    "end": "1402600"
  },
  {
    "text": "extensibility and share through is adtec so anytime you load up a website you",
    "start": "1402600",
    "end": "1408559"
  },
  {
    "text": "want to make sure that that ad is loading and not slowing down the rest of your browser session something that's very important for an adtech company to",
    "start": "1408559",
    "end": "1415000"
  },
  {
    "text": "be able to do previously we were running on Ruby it's really hard to write an ad server that can return something in 10",
    "start": "1415000",
    "end": "1421480"
  },
  {
    "text": "milliseconds using Ruby we thought about becoming expert Ruby developers but that",
    "start": "1421480",
    "end": "1427320"
  },
  {
    "text": "wasn't going to be productive for anyone so we decided to pick a new language performance was probably the biggest",
    "start": "1427320",
    "end": "1433080"
  },
  {
    "text": "consideration that we made and because the team was more familiar with Java as opposed to C or C++ type languages uh",
    "start": "1433080",
    "end": "1441600"
  },
  {
    "text": "Scola was a natural Contender so we were basically deciding between Java and Scala and I think because Scala was a",
    "start": "1441600",
    "end": "1448080"
  },
  {
    "text": "little bit more expressive at the time and it was new and interesting uh they ended up going with that we lik the jbm",
    "start": "1448080",
    "end": "1454919"
  },
  {
    "text": "we also liked that Twitter had invested a lot of resources into Scala and so",
    "start": "1454919",
    "end": "1459960"
  },
  {
    "start": "1455000",
    "end": "1607000"
  },
  {
    "text": "some of you might remember this from probably I don't know 5 10 years ago when Twitter was having a lot of problems Twitter has a lot of capacity",
    "start": "1459960",
    "end": "1467039"
  },
  {
    "text": "issues and so when you get I don't know 10 million people all tweeting about the Bachelor on Monday",
    "start": "1467039",
    "end": "1472840"
  },
  {
    "text": "nights you have issues where the Twitter starts to go down that was actually a problem that they had the bachelor was",
    "start": "1472840",
    "end": "1478840"
  },
  {
    "text": "taking down Twitter uh and so they invested a ton of time and resources also rewriting a lot of the Twitter",
    "start": "1478840",
    "end": "1484760"
  },
  {
    "text": "backend from Ruby to Scala and in that process they started contributing back to the community they",
    "start": "1484760",
    "end": "1491279"
  },
  {
    "text": "had demonstrated that Scala was a production level language that could be useful for their for their use case and",
    "start": "1491279",
    "end": "1500000"
  },
  {
    "text": "they had written a bunch of libraries that do everything from networking to Json parsing to a lot of like other",
    "start": "1500000",
    "end": "1506640"
  },
  {
    "text": "distributed systems type functions so there's a lot of libraries and resources and educational resources out there that",
    "start": "1506640",
    "end": "1513320"
  },
  {
    "text": "Twitter has contributed back to the Scala community and so in the early 2010s a lot of people that were moving",
    "start": "1513320",
    "end": "1520919"
  },
  {
    "text": "over to Scola did so because they thought it was a good idea because Twitter had demonstrated that they could",
    "start": "1520919",
    "end": "1526399"
  },
  {
    "text": "do it too and so if Twitter can use language in production my tiny startup probably can too which I think is a a",
    "start": "1526399",
    "end": "1533080"
  },
  {
    "text": "good argument so that was kind of shareth throughs reason for wanting to use Scala uh I also took to Twitter to",
    "start": "1533080",
    "end": "1541120"
  },
  {
    "text": "get this answer from people and here are a couple of my favorite responses so Katie mcaffrey who is coincidentally an",
    "start": "1541120",
    "end": "1548320"
  },
  {
    "text": "engineer at Twitter uh said that it's accessible functional programming on the",
    "start": "1548320",
    "end": "1553559"
  },
  {
    "text": "jvm makes sense Shane here uh I like this one it's the most functional",
    "start": "1553559",
    "end": "1559120"
  },
  {
    "text": "easiest to refactor language that I can get paid to write so I think that's important uh there are jobs in schola",
    "start": "1559120",
    "end": "1566200"
  },
  {
    "text": "there are a lot of people hiring in Scala and I think that's important that people will pay you money to write in",
    "start": "1566200",
    "end": "1571480"
  },
  {
    "text": "this language I think there's a lot of other languages out there that people find very expressive and elegant that",
    "start": "1571480",
    "end": "1577080"
  },
  {
    "text": "you're not going to find anybody to pay you to write so that's a good point and then Travis here who is a probably one",
    "start": "1577080",
    "end": "1583520"
  },
  {
    "text": "of the nicest people I've ever met and also a big open source contributor in The Scholar Community he has this",
    "start": "1583520",
    "end": "1589559"
  },
  {
    "text": "interesting point that's because it's a disaster but a disaster that has a lot of the right raw materials lying",
    "start": "1589559",
    "end": "1596360"
  },
  {
    "text": "around all right there's a lot to unpack there so we can talk about a couple of this uh anybody was in a Dan's talk this",
    "start": "1596360",
    "end": "1602960"
  },
  {
    "text": "morning about effective teams yeah so he gave a a quick preview",
    "start": "1602960",
    "end": "1608880"
  },
  {
    "start": "1607000",
    "end": "1648000"
  },
  {
    "text": "of this which is you might have already gotten the sense from this is that you can do anything in Scala in like 14",
    "start": "1608880",
    "end": "1616120"
  },
  {
    "text": "million different ways and that just grows exponentially and so there's all this flexibility that the language gives",
    "start": "1616120",
    "end": "1622039"
  },
  {
    "text": "you to write the language in whatever way you want you can write it as an",
    "start": "1622039",
    "end": "1627240"
  },
  {
    "text": "objectoriented style you can write it as a very functional style you can mix them both together it's really up to you as",
    "start": "1627240",
    "end": "1633440"
  },
  {
    "text": "the programmer and all that flexibility is going to require a lot of discipline on your",
    "start": "1633440",
    "end": "1639559"
  },
  {
    "text": "team it gives you all those materials to go crazy we saw like the traits in the classes from the object-oriented",
    "start": "1639559",
    "end": "1646600"
  },
  {
    "text": "side it just it has everything that you could ever want and this is probably my favorite",
    "start": "1646600",
    "end": "1653799"
  },
  {
    "start": "1648000",
    "end": "1682000"
  },
  {
    "text": "tweet of all time I think about this tweet probably about once a month and I just laugh which maybe says something",
    "start": "1653799",
    "end": "1659640"
  },
  {
    "text": "about my life but if you're not careful your code can end up looking like this",
    "start": "1659640",
    "end": "1664840"
  },
  {
    "text": "Bloody Mary and that's a problem because as delicious as individual pieces in there",
    "start": "1664840",
    "end": "1671720"
  },
  {
    "text": "might be like nobody wants to actually deal with all of that at brunch uh so that brings us to some sad",
    "start": "1671720",
    "end": "1678200"
  },
  {
    "text": "truths about",
    "start": "1678200",
    "end": "1680760"
  },
  {
    "start": "1682000",
    "end": "1761000"
  },
  {
    "text": "Scala there's this spectrum of how you can write your code that I've already talked about so you can write it in the more Java objectoriented type of way or",
    "start": "1683480",
    "end": "1690840"
  },
  {
    "text": "you can bring in some of the influences from functional languages like hasal and you can write your code anywhere along",
    "start": "1690840",
    "end": "1696720"
  },
  {
    "text": "the Spectrum using any combination of ideas along the Spectrum and any single function you can do both of these at",
    "start": "1696720",
    "end": "1704200"
  },
  {
    "text": "once it can be very confusing and there's also a lot of disagreement in the community about how to write your",
    "start": "1704200",
    "end": "1711000"
  },
  {
    "text": "code there is no schola language syntax guide at least not one from anyone",
    "start": "1711000",
    "end": "1716720"
  },
  {
    "text": "official in in the language I mean individual people are very opinionated about how to write Scola but there's not",
    "start": "1716720",
    "end": "1723399"
  },
  {
    "text": "a standard from the community uh also some of the purists on the hasal side can be kind of mean which",
    "start": "1723399",
    "end": "1729799"
  },
  {
    "text": "is another unfortunate thing about it and because a lot of these issues",
    "start": "1729799",
    "end": "1735480"
  },
  {
    "text": "about how you write code often come down to the people on the team that can be really hard to deal",
    "start": "1735480",
    "end": "1742000"
  },
  {
    "text": "with uh as a manager now I can tell you that dealing with people is often a lot harder than dealing with code and some",
    "start": "1742000",
    "end": "1748600"
  },
  {
    "text": "of you are probably familiar with this I have a a friend that's working on AI right now and she always says that she",
    "start": "1748600",
    "end": "1754640"
  },
  {
    "text": "just wants to get people out of the equation and then we won't have any problems",
    "start": "1754640",
    "end": "1759960"
  },
  {
    "text": "anymore oh I just thought this was funny uh yeah if you write hasal you're never going to run it in production so you you",
    "start": "1760559",
    "end": "1768159"
  },
  {
    "start": "1761000",
    "end": "1866000"
  },
  {
    "text": "end up getting a lot of high school people that come to schola because like Shane said you can actually get paid to write Scola um sorry if there's any High",
    "start": "1768159",
    "end": "1775279"
  },
  {
    "text": "School purists in here I'm sure you're lovely people uh another so this is some Scola",
    "start": "1775279",
    "end": "1782880"
  },
  {
    "text": "source code uh the source code in Scola can be really hard to follow uh this is",
    "start": "1782880",
    "end": "1788159"
  },
  {
    "text": "a particularly egregious example from a third party library",
    "start": "1788159",
    "end": "1793519"
  },
  {
    "text": "but it's a demonstration of what you might see if you're looking at the code",
    "start": "1793519",
    "end": "1798600"
  },
  {
    "text": "um fortunately Scala you it has really good um like you might be familiar with if you work in a language like Java it",
    "start": "1798600",
    "end": "1805080"
  },
  {
    "text": "has really good support from idees and so a lot of people use idees don't try",
    "start": "1805080",
    "end": "1810120"
  },
  {
    "text": "to figure out what that says I'll put it back on this um a lot of people use idees to look at",
    "start": "1810120",
    "end": "1817960"
  },
  {
    "text": "their code work through their code bases as you uh would be able to get the overall structure and a lot of the",
    "start": "1817960",
    "end": "1823240"
  },
  {
    "text": "benefits that IDs provide um integrated development environments if any is not",
    "start": "1823240",
    "end": "1828360"
  },
  {
    "text": "familiar uh things like eclipse and intellig both have scol of plugins that are really powerful uh and that means",
    "start": "1828360",
    "end": "1835720"
  },
  {
    "text": "that you can look at the source code which is really useful but at the same time then you sometimes see things like this and that can be really intimidating",
    "start": "1835720",
    "end": "1842399"
  },
  {
    "text": "and it doesn't actually end up helping you at all um so even the standard library has some",
    "start": "1842399",
    "end": "1848600"
  },
  {
    "text": "pretty crazy stuff in it and there's reasons for a lot of the things that are happening in the standard library but",
    "start": "1848600",
    "end": "1854120"
  },
  {
    "text": "sometimes like again I've been doing scholar for four years I don't claim to be any kind of expert in it and there's still like days that I look at some of",
    "start": "1854120",
    "end": "1860159"
  },
  {
    "text": "the scores code and I'm like what the heck is going on here and then I just end up feeling more confused than I was",
    "start": "1860159",
    "end": "1866760"
  },
  {
    "text": "originally uh so going back to this partition example these are equivalent",
    "start": "1866760",
    "end": "1872320"
  },
  {
    "text": "and so this is an example of two ways that you can write something in Scala and there's actually like three more ways that I can think of off the top of",
    "start": "1872320",
    "end": "1878240"
  },
  {
    "text": "my head to do this uh and that underscore there is a convenience",
    "start": "1878240",
    "end": "1884000"
  },
  {
    "text": "function uh that basically does that I fat Arrow to",
    "start": "1884000",
    "end": "1890440"
  },
  {
    "text": "I it's saying that take this like whatever element in my partition in the",
    "start": "1890440",
    "end": "1895799"
  },
  {
    "text": "list and give me it shelf life this can be hard to wrap your head around if you haven't seen something like this before",
    "start": "1895799",
    "end": "1902360"
  },
  {
    "text": "uh I was at a scolar conference a couple weeks ago and somebody asked one of the uh the compiler maintainers what their",
    "start": "1902360",
    "end": "1909000"
  },
  {
    "text": "favorite and least favorite feature of Scola was and their answer for both was the underscore so it's one of those",
    "start": "1909000",
    "end": "1914840"
  },
  {
    "text": "features of Scola that's hotly debated it can be a convenience function but it also loses some of that documentation",
    "start": "1914840",
    "end": "1920960"
  },
  {
    "text": "that you get by writing out things a little bit more explicitly and that can cause a lot of",
    "start": "1920960",
    "end": "1926840"
  },
  {
    "start": "1925000",
    "end": "2017000"
  },
  {
    "text": "confusion everybody's favorite from Scala um Scala has what it calls symbolic operators and so this is valid",
    "start": "1926840",
    "end": "1935000"
  },
  {
    "text": "code I literally just like jammed some things on my computer and came up with that and that will compile uh the reason",
    "start": "1935000",
    "end": "1942200"
  },
  {
    "text": "that that is allowed is for things like this so it allows that so you can write things like the plus function on",
    "start": "1942200",
    "end": "1949399"
  },
  {
    "text": "different types that makes it so you can write that in a convenient way that",
    "start": "1949399",
    "end": "1954679"
  },
  {
    "text": "doesn't require you writing or special casing that operator is something",
    "start": "1954679",
    "end": "1959720"
  },
  {
    "text": "different but there's certain libraries out there that don't have any kind of",
    "start": "1959720",
    "end": "1965519"
  },
  {
    "text": "word Alias for their symbolic operators and again I made that one up but it's",
    "start": "1965519",
    "end": "1971880"
  },
  {
    "text": "not that far off from some of the things that you might see in Scola and if you ever try to like understand what a",
    "start": "1971880",
    "end": "1977519"
  },
  {
    "text": "function is doing and some of the the IDE plugins for this like don't catch some of these compiler plugins you can't",
    "start": "1977519",
    "end": "1983480"
  },
  {
    "text": "see the source code and then you try Googling for like back slash Dash Das",
    "start": "1983480",
    "end": "1989039"
  },
  {
    "text": "parentheses and like you don't get much out of that so that's a problem with",
    "start": "1989039",
    "end": "1994679"
  },
  {
    "text": "Scala there's talk um Martin ODI who's the founder he he wants to build into a",
    "start": "1994679",
    "end": "1999960"
  },
  {
    "text": "next feature a release of the language the idea that every symbolic operator has to also have a word that comes with",
    "start": "1999960",
    "end": "2008159"
  },
  {
    "text": "it and that you know might be descriptive of what that function does which can be helpful for you the",
    "start": "2008159",
    "end": "2013559"
  },
  {
    "text": "programmer but again adding more ways to do things why not uh and this is probably one of my",
    "start": "2013559",
    "end": "2019639"
  },
  {
    "start": "2017000",
    "end": "2128000"
  },
  {
    "text": "biggest issues with schola is that a lot of Scola instruction and I was talking to some people about this at lunch is a",
    "start": "2019639",
    "end": "2027120"
  },
  {
    "text": "lot of uh introductory resources for Scala is very littered with jargon and so you'll I've probably used a lot of",
    "start": "2027120",
    "end": "2033760"
  },
  {
    "text": "jargon here today that you might be thinking like Kelly what are you talking about and I apologize for that please make me aware of that if anything I said",
    "start": "2033760",
    "end": "2040440"
  },
  {
    "text": "doesn't make sense or is unfamiliar I like to check that in myself so that I know when I'm talking about something",
    "start": "2040440",
    "end": "2045600"
  },
  {
    "text": "that I don't share context with with people but you know you'll hear things like closures and lambdas which I",
    "start": "2045600",
    "end": "2051118"
  },
  {
    "text": "definitely talked about monads Pro funter semi- groups like you don't need to know what all of those things are but",
    "start": "2051119",
    "end": "2057800"
  },
  {
    "text": "you end up hearing about that even if you're like a week into Scala because people think it's cool to talk about a",
    "start": "2057800",
    "end": "2063320"
  },
  {
    "text": "lot of this stuff uh this was evident after there was a conference in March a",
    "start": "2063320",
    "end": "2069240"
  },
  {
    "text": "scholar conference in March in New York and there was a software engineer at Twitter that attended the conference and",
    "start": "2069240",
    "end": "2074919"
  },
  {
    "text": "she was baffled by all of the jargon that she heard and couldn't keep up with the conference even though she's a",
    "start": "2074919",
    "end": "2081000"
  },
  {
    "text": "software engineer at Twitter it's not exactly easy to get a job there you've got all these people Twitter probably",
    "start": "2081000",
    "end": "2086638"
  },
  {
    "text": "employs like 25% of all the scholar developers it's probably an exaggeration but they employ a lot of scholar",
    "start": "2086639",
    "end": "2092000"
  },
  {
    "text": "developers that know the language very well and can help somebody like her learn the language",
    "start": "2092000",
    "end": "2098079"
  },
  {
    "text": "but she was still taken AB because all of these people were just dropping all this jargon constantly about all these",
    "start": "2098079",
    "end": "2103680"
  },
  {
    "text": "cool things that they could do and so this comes down to a lot of the uh the major principles in Scola my issues with",
    "start": "2103680",
    "end": "2110000"
  },
  {
    "text": "Scola that I can uh summarize into just because you can doesn't mean you",
    "start": "2110000",
    "end": "2117000"
  },
  {
    "text": "should and that's something that Scola makes it easy to can all those things",
    "start": "2117000",
    "end": "2122480"
  },
  {
    "text": "but uh doesn't give you a lot of restrictions on what you should or should not do",
    "start": "2122480",
    "end": "2129440"
  },
  {
    "start": "2128000",
    "end": "2155000"
  },
  {
    "text": "despite all of that Scola is still pretty awesome uh I think some of the reasons that it's awesome is because",
    "start": "2129680",
    "end": "2135359"
  },
  {
    "text": "it's powerful because it allows you as a programmer to be creative and flexible",
    "start": "2135359",
    "end": "2140440"
  },
  {
    "text": "and there are a lot of jobs learning or using Scala and I read a report recently that said uh learning schola and getting",
    "start": "2140440",
    "end": "2146760"
  },
  {
    "text": "a job in schola can earn you a 22% pay bump so that's pretty cool uh keep that",
    "start": "2146760",
    "end": "2152000"
  },
  {
    "text": "in mind reasons people write in Scala all right so if you are interested",
    "start": "2152000",
    "end": "2157079"
  },
  {
    "start": "2155000",
    "end": "2171000"
  },
  {
    "text": "in this and you you want to get started uh how are you going to go about it there are literally thousands of",
    "start": "2157079",
    "end": "2163119"
  },
  {
    "text": "resources out there I trust everybody in this room knows how to Google but I'm going to give you four I think resources",
    "start": "2163119",
    "end": "2168800"
  },
  {
    "text": "for getting started with the language uh the first one is the BL language repple",
    "start": "2168800",
    "end": "2174800"
  },
  {
    "start": "2171000",
    "end": "2193000"
  },
  {
    "text": "and so you can download that here with the link that I provided I will post these slides immediately after this talk",
    "start": "2174800",
    "end": "2181079"
  },
  {
    "text": "um so all these links are available for you uh play around with the repple play around with the code see what you can",
    "start": "2181079",
    "end": "2187119"
  },
  {
    "text": "and can't do I think that's a really good way in any language to get started with something and so wanted to make",
    "start": "2187119",
    "end": "2192240"
  },
  {
    "text": "that resource available uh the biggest language for teaching uh is going to be this corsera",
    "start": "2192240",
    "end": "2198880"
  },
  {
    "start": "2193000",
    "end": "2296000"
  },
  {
    "text": "course it's put on by a combination of the schola center and corsera and so",
    "start": "2198880",
    "end": "2204240"
  },
  {
    "text": "what is the schola center the schola center is a relatively new initiative it was started last year by some of the",
    "start": "2204240",
    "end": "2210119"
  },
  {
    "text": "people at epfl in Switzerland to be a governing body for the scholar community",
    "start": "2210119",
    "end": "2216000"
  },
  {
    "text": "and so their focus is not on compiler development as much as it is on education and open source initiatives",
    "start": "2216000",
    "end": "2223119"
  },
  {
    "text": "and so some of the stuff that they've been working on is writing these courses making them available these are available for free there's four of these",
    "start": "2223119",
    "end": "2229800"
  },
  {
    "text": "courses to get you started on schola I think at least three of them are available and by the time that you finish all three of those the fourth one",
    "start": "2229800",
    "end": "2235960"
  },
  {
    "text": "will probably be available uh and so they're big on education big on open source and making the community more",
    "start": "2235960",
    "end": "2242240"
  },
  {
    "text": "welcoming some of the stuff that um they worked on in the last year was revamping",
    "start": "2242240",
    "end": "2247960"
  },
  {
    "text": "the code of conduct for schola that was something that had been sitting around for a while and hadn't been touched or enforced for a while and so wanted to",
    "start": "2247960",
    "end": "2255119"
  },
  {
    "text": "basically give that a refresh and make sure the code of conduct we had a way to enforce it what would happen if you were",
    "start": "2255119",
    "end": "2260960"
  },
  {
    "text": "on stack Overflow and someone was being an how do you handle that situation um they also opened up a new",
    "start": "2260960",
    "end": "2268960"
  },
  {
    "text": "Forum discussion and so they use a a tool called discourse now instead of Google Groups and discourse is a very",
    "start": "2268960",
    "end": "2275599"
  },
  {
    "text": "good way of threading discussions and respon so if you have any questions about the language you can post",
    "start": "2275599",
    "end": "2280680"
  },
  {
    "text": "something there and people can start a discussion with you and the code of conduct is enforced",
    "start": "2280680",
    "end": "2286880"
  },
  {
    "text": "there so that's really the best place to get started you can go to corera the first course I've linked to there and",
    "start": "2286880",
    "end": "2293800"
  },
  {
    "text": "then like I mentioned there will be three more that follow that uh the second place that I would",
    "start": "2293800",
    "end": "2299160"
  },
  {
    "start": "2296000",
    "end": "2343000"
  },
  {
    "text": "recommend you heading is if you already have some familiarity with scholar you don't like doing these massive open online courses like the corsera course a",
    "start": "2299160",
    "end": "2306720"
  },
  {
    "text": "company called 37° has put together this website full of Scola exercises and so these are in the browser and the one",
    "start": "2306720",
    "end": "2313599"
  },
  {
    "text": "that I've linked to here is the very basic beginner one for learning the language itself but they also do a lot",
    "start": "2313599",
    "end": "2319079"
  },
  {
    "text": "of these exercises for learning how to work with different libraries that you might encounter and so even if you get",
    "start": "2319079",
    "end": "2324240"
  },
  {
    "text": "to the point where you're using Scola in your job and you want to know how to work with some Json Library you can go",
    "start": "2324240",
    "end": "2331079"
  },
  {
    "text": "here and kind of get a feel for how that Library works by running through some of these exercises and so the 47° people",
    "start": "2331079",
    "end": "2337720"
  },
  {
    "text": "are super great really nice people and they've put together this resource for giving back to the",
    "start": "2337720",
    "end": "2343440"
  },
  {
    "start": "2343000",
    "end": "2445000"
  },
  {
    "text": "community and last but not least is this organization called scholar Bridge uh you might be familiar",
    "start": "2343440",
    "end": "2350560"
  },
  {
    "text": "with the bridge program from other languages uh the bridge program was started about 10 years ago with",
    "start": "2350560",
    "end": "2357280"
  },
  {
    "text": "railsbridge and the idea with railsbridge is to teach introductory programming to underrepresented groups",
    "start": "2357280",
    "end": "2364760"
  },
  {
    "text": "and give people a safe space to learn and a weekend Workshop that they can get together ask questions hack away learn a",
    "start": "2364760",
    "end": "2370920"
  },
  {
    "text": "new language or a skill and there's some great things about this",
    "start": "2370920",
    "end": "2376720"
  },
  {
    "text": "so first of all if you are in an underrepresented group you can attend one of these workshops I was talking to",
    "start": "2376720",
    "end": "2382760"
  },
  {
    "text": "someone in Chicago a couple of weeks ago I think there's going to be a scholar bridge in Chicago in June so stay tuned for that um and also if you're not in an",
    "start": "2382760",
    "end": "2391359"
  },
  {
    "text": "underrepresented group teaching is a really great way to learn and I think some of the most valuable experiences",
    "start": "2391359",
    "end": "2398160"
  },
  {
    "text": "that I have and I can think of when I was learning how to code come from those moments where you go to somebody more",
    "start": "2398160",
    "end": "2403960"
  },
  {
    "text": "senior than you and you're like okay how do I do this and you're expecting an answer and instead of giving an answer",
    "start": "2403960",
    "end": "2410800"
  },
  {
    "text": "that person says I don't know let's figure it out together and that's a really valuable moment for the people",
    "start": "2410800",
    "end": "2416680"
  },
  {
    "text": "and I think most of the people in this room could be at that point already and so you can definitely give back to the",
    "start": "2416680",
    "end": "2422599"
  },
  {
    "text": "community and learn some stuff Yourself by attending one of these workshops and contributing back to people that may be",
    "start": "2422599",
    "end": "2430040"
  },
  {
    "text": "less capable of teaching themselves that kind of stuff or just have le less confidence which is really one of the",
    "start": "2430040",
    "end": "2435960"
  },
  {
    "text": "reasons that workshops like this exist so if you get any Baseline knowledge or even if you don't have any",
    "start": "2435960",
    "end": "2441960"
  },
  {
    "text": "Baseline knowledge you can be a TA and help out all right now you are ready to go",
    "start": "2441960",
    "end": "2448440"
  },
  {
    "start": "2445000",
    "end": "2508000"
  },
  {
    "text": "and learn more about Scala or maybe I've convinced you that you don't want to learn more about Scala either way if you",
    "start": "2448440",
    "end": "2453800"
  },
  {
    "text": "do you have the resources to get started um again I would love any feedback of anything I've talked about is unclear I",
    "start": "2453800",
    "end": "2460119"
  },
  {
    "text": "think that the one of the biggest things that the language needs to work on is making it more welcoming to beginners",
    "start": "2460119",
    "end": "2465319"
  },
  {
    "text": "and there are several initiatives right now that are making that better so things like the Scola Center and schola bridge that were both started in the",
    "start": "2465319",
    "end": "2471440"
  },
  {
    "text": "last year are going to be really big for making this language easier to ramp up from people that are outside of the",
    "start": "2471440",
    "end": "2477160"
  },
  {
    "text": "current Community remember scolar will give you power flexibility and creativity and have fun with that but",
    "start": "2477160",
    "end": "2484319"
  },
  {
    "text": "don't forget that that flexibility comes with a cost remember to be disciplined with the code",
    "start": "2484319",
    "end": "2489640"
  },
  {
    "text": "that you write don't try to do too much bring it back to those ideas of functional programming of making your",
    "start": "2489640",
    "end": "2495760"
  },
  {
    "text": "code easier to understand and I think you can do a lot and that you'll really enjoy diving into",
    "start": "2495760",
    "end": "2502280"
  },
  {
    "text": "Scola once again my name is Kelly Robinson here's my contact information",
    "start": "2502280",
    "end": "2507319"
  },
  {
    "text": "and thank you for",
    "start": "2507319",
    "end": "2509839"
  },
  {
    "start": "2508000",
    "end": "2886000"
  },
  {
    "text": "listening okay thank you Kelly and thank you everyone um if you have not already done so please go into the application",
    "start": "2513720",
    "end": "2520760"
  },
  {
    "text": "and give her a great rating um there were a few questions um so we'll do",
    "start": "2520760",
    "end": "2526280"
  },
  {
    "text": "those and then we'll see if there are any additional questions in the room um let's see uh so what is the best way to",
    "start": "2526280",
    "end": "2533440"
  },
  {
    "text": "find scholar Bridge meetups there is a Twitter account that tweets most of them uh and I would say",
    "start": "2533440",
    "end": "2541400"
  },
  {
    "text": "go to Twitter scridge there's also a website scolar bridge.org okay uh next question uh does it have",
    "start": "2541400",
    "end": "2549160"
  },
  {
    "text": "any testing framework support yes it does it has probably about five testing Frameworks of course um and there's",
    "start": "2549160",
    "end": "2556119"
  },
  {
    "text": "definitely like 70 different ways you can test things in Scala but there's a big one that's called Scala test as it",
    "start": "2556119",
    "end": "2562280"
  },
  {
    "text": "would be and there's pretty good documentation for that and also the uh",
    "start": "2562280",
    "end": "2567359"
  },
  {
    "text": "the maintainer of that is a super super nice human uh which is really great for",
    "start": "2567359",
    "end": "2572440"
  },
  {
    "text": "wanting to understand a testing library and so if you have any questions about how to get started with testing uh you can post on some of those forums and",
    "start": "2572440",
    "end": "2579359"
  },
  {
    "text": "you'll definitely get a lot of help there okay and then the next one is a somewhat related question how would you",
    "start": "2579359",
    "end": "2584559"
  },
  {
    "text": "rate the available tooling for Scola for example things like running unit tests automatically as you save or catching",
    "start": "2584559",
    "end": "2590240"
  },
  {
    "text": "compiler errors as you type any language can do that but a language may or may not lend itself to those uses yeah so",
    "start": "2590240",
    "end": "2597160"
  },
  {
    "text": "there's some things that are built into some of the idees that can do this automatically uh one of the things that",
    "start": "2597160",
    "end": "2603240"
  },
  {
    "text": "Scala has that I didn't talk about um is a build tool called the scolar build tool and that's known as SBT and SBT is",
    "start": "2603240",
    "end": "2611440"
  },
  {
    "text": "probably how you're going to do a lot of your dependency management and also how you're going to run a lot of your tests and so one of the cool things about that",
    "start": "2611440",
    "end": "2618640"
  },
  {
    "text": "is there's a little function in it that you can do like till the test and it",
    "start": "2618640",
    "end": "2623680"
  },
  {
    "text": "will recompile and run your test every time you type a change and save it and you can also do that with like Tilla",
    "start": "2623680",
    "end": "2630440"
  },
  {
    "text": "compile and it will recompile anytime you make a change and so that's built into SBT and it's really useful while",
    "start": "2630440",
    "end": "2636599"
  },
  {
    "text": "you're typing things and if you hit save and you're like oh crap I put the wrong type there oh crap I returned the wrong",
    "start": "2636599",
    "end": "2642920"
  },
  {
    "text": "type there and was expecting the right type and that kind of stuff uh okay what would you say the",
    "start": "2642920",
    "end": "2649280"
  },
  {
    "text": "advantages of Scola over go uh what what would you say are the advantages of scol",
    "start": "2649280",
    "end": "2654640"
  },
  {
    "text": "ever go aside from the existing Java libraries that can be leveraged and object-oriented",
    "start": "2654640",
    "end": "2661119"
  },
  {
    "text": "support I mean they're very different languages uh so a language like go if you're doing any kind of systems program",
    "start": "2661119",
    "end": "2667079"
  },
  {
    "text": "I mean I did go for about a year before this current job um and it's really great for a lot of like you're closer to",
    "start": "2667079",
    "end": "2673079"
  },
  {
    "text": "the metal and go programs are really satisfying to write because I think somebody said like you start at the top",
    "start": "2673079",
    "end": "2678520"
  },
  {
    "text": "you write your code to the bottom and you're done and that's like how you write and that imperative procedural style program scol you can do a lot of",
    "start": "2678520",
    "end": "2686240"
  },
  {
    "text": "different things it can be more exciting for you as the programmer because you get to think about all the ways that you can write your code which we know and",
    "start": "2686240",
    "end": "2692079"
  },
  {
    "text": "love but it's not as opinionated one of the things that I personally love about go is go",
    "start": "2692079",
    "end": "2697960"
  },
  {
    "text": "and Scala is starting to add something like that but it's not as opinionated as something like go so I think the biggest",
    "start": "2697960",
    "end": "2704400"
  },
  {
    "text": "difference for me is there are going to be some differences in the use cases for the types of things that you're doing",
    "start": "2704400",
    "end": "2709800"
  },
  {
    "text": "but go is a much more opinionated language um and so if that works for your team and the stuff that you're",
    "start": "2709800",
    "end": "2715680"
  },
  {
    "text": "trying to accomplish then that might be the best choice for you if you come from a background that has more Java",
    "start": "2715680",
    "end": "2721640"
  },
  {
    "text": "development or Java development expertise or maybe you're in a market that's easier to hire Java developers",
    "start": "2721640",
    "end": "2727119"
  },
  {
    "text": "Scola might be a better choice for you okay what are the shortcomings of other",
    "start": "2727119",
    "end": "2732599"
  },
  {
    "text": "programming languages that Scala is addressing that's a good question be",
    "start": "2732599",
    "end": "2738720"
  },
  {
    "text": "nice be nice no don't be nice I don't know if I have a good",
    "start": "2738720",
    "end": "2744599"
  },
  {
    "text": "answer for that is anybody here familiar enough with Scola to be able to answer",
    "start": "2744599",
    "end": "2750318"
  },
  {
    "text": "that properties yeah I was I was telling",
    "start": "2750440",
    "end": "2757760"
  },
  {
    "text": "George earlier yeah the multiple inheritance that I talked about with traits is pretty cool there are other languages that do that but not a lot of",
    "start": "2757760",
    "end": "2763880"
  },
  {
    "text": "languages do that well um I unfortunately am not a great person to compare Scola to Java because I never",
    "start": "2763880",
    "end": "2769480"
  },
  {
    "text": "actually did any Java development I know how to read Java code because I have to read a lot of the source code but I",
    "start": "2769480",
    "end": "2774520"
  },
  {
    "text": "don't know enough about the language to comment on it too much okay and uh where will the slides",
    "start": "2774520",
    "end": "2781480"
  },
  {
    "text": "be available uh I will tweet them right after this I think that's the last one we have",
    "start": "2781480",
    "end": "2787000"
  },
  {
    "text": "the tool are there any additional questions in the",
    "start": "2787000",
    "end": "2790640"
  },
  {
    "text": "room this is kind of related to one of those previous questions but like I mean when you think about go there's like a",
    "start": "2794440",
    "end": "2800240"
  },
  {
    "text": "reason it was created like why was schola created just because the professor was having",
    "start": "2800240",
    "end": "2806839"
  },
  {
    "text": "fun yeah I think that's why a lot of things in scholar were done was because somebody wanted to have some fun with something",
    "start": "2807040",
    "end": "2813040"
  },
  {
    "text": "um his reasoning for it is he wanted to I mean he's a professor he an academic he wasn't trying to solve any kind of",
    "start": "2813040",
    "end": "2818960"
  },
  {
    "text": "like industry problem with this and he's still not uh really nice guy but like he's a little out of touch with some of",
    "start": "2818960",
    "end": "2824760"
  },
  {
    "text": "the industry use cases and he does a pretty good job of um trying to understand that by like talking to the",
    "start": "2824760",
    "end": "2830440"
  },
  {
    "text": "community but it's still like you then that's one of the reasons that he started typ safe lightbend is to bridge",
    "start": "2830440",
    "end": "2838040"
  },
  {
    "text": "that gap between some of the academic influences of the language and the things that people actually started",
    "start": "2838040",
    "end": "2844359"
  },
  {
    "text": "using it for um those users they always do things you don't intend them to do uh",
    "start": "2844359",
    "end": "2851160"
  },
  {
    "text": "his motivations for it were for to write I think the name schola comes from scalable and so he wanted to write a",
    "start": "2851160",
    "end": "2856920"
  },
  {
    "text": "scalable language and make something that was very expressive I might be putting words in his mouth but that's",
    "start": "2856920",
    "end": "2862119"
  },
  {
    "text": "the impression that I've got based on the some of the stuff that I've heard and read and talked to him about okay any other questions in the",
    "start": "2862119",
    "end": "2871078"
  },
  {
    "text": "room all right thank you everyone for joining us and thank you K thank you",
    "start": "2871359",
    "end": "2878359"
  }
]