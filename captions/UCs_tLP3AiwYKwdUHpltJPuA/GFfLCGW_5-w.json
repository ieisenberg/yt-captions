[
  {
    "start": "0",
    "end": "183000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "Hey [Applause]",
    "start": "12000",
    "end": "19020"
  },
  {
    "text": "yeah ventually get it all working here so welcome home thank you for coming",
    "start": "19020",
    "end": "24300"
  },
  {
    "text": "quick question who's read this paper no",
    "start": "24300",
    "end": "30460"
  },
  {
    "text": "one's read it one you should all read this paper it's a brilliant piece on the",
    "start": "30460",
    "end": "36070"
  },
  {
    "text": "problems that we have in production systems and what causes major outages so there's many different things there's a",
    "start": "36070",
    "end": "42280"
  },
  {
    "text": "great section in this on testing what do we think is the number one cause of production are edges of systems when",
    "start": "42280",
    "end": "50860"
  },
  {
    "text": "systems go die what's the number one cause disks human error that's it",
    "start": "50860",
    "end": "58930"
  },
  {
    "text": "operators what they defined it is by far the most common cause of problems we have in systems this also references",
    "start": "58930",
    "end": "67360"
  },
  {
    "text": "many other pieces of research in this area and quite often this happens",
    "start": "67360",
    "end": "72820"
  },
  {
    "text": "typically when a failure occurs in the system we gotta bring them for backup another system and I've got a personal",
    "start": "72820",
    "end": "78400"
  },
  {
    "text": "story if this coupled about 12 years ago where I was running a team and in the middle of the night we had a system that",
    "start": "78400",
    "end": "83950"
  },
  {
    "text": "failed and the person who was on duty tried to swap over to the backup system in the middle of the night and they made",
    "start": "83950",
    "end": "90609"
  },
  {
    "text": "a mistake and their corrupted the system and there's tried to fix it when they're being tired and half asleep at that time",
    "start": "90609",
    "end": "97329"
  },
  {
    "text": "in the morning and they started making things worse and worse and worse and they didn't call for help as they were in this debt and they kept making even",
    "start": "97329",
    "end": "104619"
  },
  {
    "text": "greater mistakes and eventually it got escalated to the point where other people got involved and we tried to",
    "start": "104619",
    "end": "110350"
  },
  {
    "text": "restore from backups because the primary system was dead the secondary system had been screwed in trying to set it up and",
    "start": "110350",
    "end": "117280"
  },
  {
    "text": "we went to backup tip we had the shock of discovery in the back of didn't work either twice in my career I've gone to",
    "start": "117280",
    "end": "125049"
  },
  {
    "text": "backup tip and twice it hasn't worked they're kind of interesting for that now",
    "start": "125049",
    "end": "130539"
  },
  {
    "text": "we had the ability to feel over in this but it was decided that we would do it manually rather than via some sort of",
    "start": "130539",
    "end": "137860"
  },
  {
    "text": "automated process and but this paper can issues is how things feel but also how humans feel and we feel as much as our",
    "start": "137860",
    "end": "145840"
  },
  {
    "text": "cell formatting much more than our software does so the best thing we do is we need to have a good practice in",
    "start": "145840",
    "end": "152450"
  },
  {
    "text": "place that's well casted that we can do our failover to another system and this",
    "start": "152450",
    "end": "157640"
  },
  {
    "text": "is kind of why we have clusters we have clusters so we can have a new machine takeover in the event of failure and",
    "start": "157640",
    "end": "164080"
  },
  {
    "text": "have that done in a well-tested an automated way and we often use consensus",
    "start": "164080",
    "end": "169670"
  },
  {
    "text": "for this so you can I think what does consensus mean well one of my things I like to do a lot whenever I'm working",
    "start": "169670",
    "end": "176300"
  },
  {
    "text": "with any sort of technology is go to a dictionary definition of something because we're terrible as an industry",
    "start": "176300",
    "end": "182060"
  },
  {
    "text": "for doing this so I can't look at well what does consensus mean well it's actually it's pretty good fit here it's",
    "start": "182060",
    "end": "187940"
  },
  {
    "start": "183000",
    "end": "196000"
  },
  {
    "text": "about having general agreement on something but the primary definition is actually about unanimous agreement which",
    "start": "187940",
    "end": "193910"
  },
  {
    "text": "is not typically what we're after it's actually the secondary definition of consensus is what we're typically going",
    "start": "193910",
    "end": "200870"
  },
  {
    "start": "196000",
    "end": "213000"
  },
  {
    "text": "for is we're trying to get majority or utmost a certain percentage of something",
    "start": "200870",
    "end": "206780"
  },
  {
    "text": "to agree with something I'm not so in the event of failure we can at least choose what we think makes sense not",
    "start": "206780",
    "end": "214160"
  },
  {
    "start": "213000",
    "end": "292000"
  },
  {
    "text": "what are we talking about consensus all in here consensus on what well it can be consensus on a single value like which",
    "start": "214160",
    "end": "221299"
  },
  {
    "text": "is the node that should be open or an alive is the what's the best candidate for doing not you can also just be where",
    "start": "221299",
    "end": "227690"
  },
  {
    "text": "are we in some state or some model so this can be applied to many different things there's a number of interesting",
    "start": "227690",
    "end": "234950"
  },
  {
    "text": "papers and a lot of interesting work this work goes way back now so particularly in the 1980s we had a lot",
    "start": "234950",
    "end": "241519"
  },
  {
    "text": "of advances in this area so people like Leslie Lamport done good work well most people have heard of pact sauces can",
    "start": "241519",
    "end": "248000"
  },
  {
    "text": "become one of the best-known things in this area but there's a lot of simultaneous discovery around this time",
    "start": "248000",
    "end": "253670"
  },
  {
    "text": "so you stop replication virtual synchrony things we doing with atomic broadcast can burn and Barbara",
    "start": "253670",
    "end": "260479"
  },
  {
    "text": "Liskov lots of other people did some great work in this area there's a something that happened around this",
    "start": "260479",
    "end": "266750"
  },
  {
    "text": "period cannot go in forward which is really interesting it's not the theory that we need to care about quite often",
    "start": "266750",
    "end": "272780"
  },
  {
    "text": "it's the implementation some of these approaches well prove and they were",
    "start": "272780",
    "end": "277940"
  },
  {
    "text": "proven to be correct they failed I'm because implementations were incredibly deaf Gault and most people made mistakes",
    "start": "277940",
    "end": "284750"
  },
  {
    "text": "trying to do that so paxos particularly was notorious for this very few people could implement it in a safe way",
    "start": "284750",
    "end": "291620"
  },
  {
    "text": "that spawned an interesting periodic mid-2014 around a thing called raft",
    "start": "291620",
    "end": "298460"
  },
  {
    "start": "292000",
    "end": "323000"
  },
  {
    "text": "which is a new consensus algorithm and the point of raft was to come up with an",
    "start": "298460",
    "end": "304009"
  },
  {
    "text": "algorithm so we can do cluster consensus but do it in a way that's easy to implement and easy to understand so",
    "start": "304009",
    "end": "310909"
  },
  {
    "text": "optimize for the humans not just optimized for the system and it makes a",
    "start": "310909",
    "end": "316310"
  },
  {
    "text": "number of assumptions in this that makes it much easier so I'm gonna talk a bit about how you can implement this",
    "start": "316310",
    "end": "322039"
  },
  {
    "text": "algorithm but a few years later there was another variant on this so a paper",
    "start": "322039",
    "end": "327560"
  },
  {
    "text": "was done of where people had tried implementations and what was kind of learned from that and so there's a lot",
    "start": "327560",
    "end": "333830"
  },
  {
    "text": "in kind of come out of this we realize it we need to automate systems particularly the deal with failure when you want to",
    "start": "333830",
    "end": "340129"
  },
  {
    "text": "have high availability you don't want something being swamped over to you are back up at two o'clock in the morning",
    "start": "340129",
    "end": "346610"
  },
  {
    "text": "when people are half asleep and groggy do or make mistakes we want a machine to do that in a well proven way and do it",
    "start": "346610",
    "end": "352940"
  },
  {
    "text": "fast and particularly the doing it fast becomes something that we need machines for so what is raft we're kind of cover",
    "start": "352940",
    "end": "361069"
  },
  {
    "start": "357000",
    "end": "377000"
  },
  {
    "text": "raft in a nutshell here so Ralph there's an algorithm it's kind of paxos like but",
    "start": "361069",
    "end": "367039"
  },
  {
    "text": "it's got some constraints with they're not and one of the major constraints it focused on was let's keep the state",
    "start": "367039",
    "end": "372740"
  },
  {
    "text": "space as small as possible and from there we can reason about it much more it achieves that by putting all nodes",
    "start": "372740",
    "end": "380360"
  },
  {
    "text": "into one of only three roles so you start a system up all the nodes that are",
    "start": "380360",
    "end": "386210"
  },
  {
    "text": "in the system are designated as followers so they don't know who the leader is yet you're gonna try and",
    "start": "386210",
    "end": "392449"
  },
  {
    "text": "resolve who is the leader of a system and for this they have an election protocol and around that what happens is",
    "start": "392449",
    "end": "400120"
  },
  {
    "text": "at a given point in the startup you'll agree that ok I want to try and become a",
    "start": "400120",
    "end": "406009"
  },
  {
    "text": "candidate and you request votes of the other followers to do that there's an",
    "start": "406009",
    "end": "411440"
  },
  {
    "text": "interesting challenge that how do you decide who becomes the candidate we have no sense control doing this this is resolved by",
    "start": "411440",
    "end": "419660"
  },
  {
    "text": "using randomization and timer so you set a random timer after a period of time one of the potential followers he",
    "start": "419660",
    "end": "427160"
  },
  {
    "text": "believes it can be a candidate will propose themselves to become the leader of the cluster that entered the",
    "start": "427160",
    "end": "432920"
  },
  {
    "text": "candidates did they'll request votes of the other followers if they get a majority they can then become the later",
    "start": "432920",
    "end": "439970"
  },
  {
    "text": "so kind of works in a nice way if we get a conflict at that point you can have",
    "start": "439970",
    "end": "445340"
  },
  {
    "text": "two candidates proposed at the same time we could get a split vote and a field of action what you do is you just go back",
    "start": "445340",
    "end": "451340"
  },
  {
    "text": "and you do it again again with another randomization so eventually it will be resolved and typically you don't get",
    "start": "451340",
    "end": "458360"
  },
  {
    "text": "clashes when the ranges are over a reasonable time period where the range is significantly larger than the",
    "start": "458360",
    "end": "464150"
  },
  {
    "text": "round-trip time between the machines and you've got a reasonably random seed that goes into that that's kind of cool you've now got our",
    "start": "464150",
    "end": "471110"
  },
  {
    "text": "cluster that can run with an elected leader all working quite nicely the",
    "start": "471110",
    "end": "476180"
  },
  {
    "text": "leader can die at some stage you go through exactly the same process again you just elect a new leader from the",
    "start": "476180",
    "end": "482570"
  },
  {
    "text": "current list of followers that are still around and from here we can go forward and progress we don't have the keys of a",
    "start": "482570",
    "end": "489260"
  },
  {
    "text": "two o'clock in the morning someone's pager goes off you've got to go in they gotta start entering commands into a",
    "start": "489260",
    "end": "494360"
  },
  {
    "text": "system and they make a mistake it can be something that's well tried well tested so only three roles three interesting",
    "start": "494360",
    "end": "501290"
  },
  {
    "text": "spirits in the system it's also good to our pcs that are defined one is how do",
    "start": "501290",
    "end": "508850"
  },
  {
    "start": "503000",
    "end": "648000"
  },
  {
    "text": "we deal with the election itself so we request votes so once you become a candidate you can request votes of the",
    "start": "508850",
    "end": "515390"
  },
  {
    "text": "followers and part of the protocol or on this is you ask another follower can I",
    "start": "515390",
    "end": "521630"
  },
  {
    "text": "have your vote become a leader and you provide how much detail you have around your current log so how much state you",
    "start": "521630",
    "end": "528950"
  },
  {
    "text": "currently have so high up to date are you if you are more up to date than the follower you're requesting or at least",
    "start": "528950",
    "end": "535580"
  },
  {
    "text": "up to date with a fault so for all the follower they can vote for you I thought stage if you're behind the candidate",
    "start": "535580",
    "end": "543500"
  },
  {
    "text": "that's proposing they should not get a positive vote at that stage because they don't have the latest version of state",
    "start": "543500",
    "end": "549260"
  },
  {
    "text": "this you negative vote from the follower and not where they'll fail in their attempt the",
    "start": "549260",
    "end": "554750"
  },
  {
    "text": "idea being is we will get the leader being elected who has the greatest among the state are the most recent amount of",
    "start": "554750",
    "end": "561170"
  },
  {
    "text": "see it available in the cluster from the members that are available our point in time that's one of the fundamental",
    "start": "561170",
    "end": "566990"
  },
  {
    "text": "differences between these timer application paxos and route so those",
    "start": "566990",
    "end": "572600"
  },
  {
    "text": "others they allow you to elect a leader with the leader is not ahead of some of",
    "start": "572600",
    "end": "578360"
  },
  {
    "text": "the other followers you then get into a protocol of catching that up know that there are certain advantages to that but",
    "start": "578360",
    "end": "584240"
  },
  {
    "text": "there's also a lot of complexity and in not complexity lies a lot of potential for implementation mistakes that can",
    "start": "584240",
    "end": "591380"
  },
  {
    "text": "cause this to be incorrect once the election is over leaders tell the followers to append",
    "start": "591380",
    "end": "599360"
  },
  {
    "text": "entries to their log so they just call each of the followers in turn as their sequence data that's coming in you add",
    "start": "599360",
    "end": "606170"
  },
  {
    "text": "this to your to your log and they also as part of doing that provide you information on what part of that log you",
    "start": "606170",
    "end": "612740"
  },
  {
    "text": "can now process so the bits that they have received a majority of the cluster saying I have this appended to my log",
    "start": "612740",
    "end": "619730"
  },
  {
    "text": "that can then be processed by those other members I'll get into this in a little bit more detail you see it giving",
    "start": "619730",
    "end": "625280"
  },
  {
    "text": "work died so just to RPC calls and three roles that's the kind of core if they",
    "start": "625280",
    "end": "630530"
  },
  {
    "text": "although nice and simple actually it's quite easy to reason about much much easier than getting with raft",
    "start": "630530",
    "end": "637010"
  },
  {
    "text": "interesting view style replication has become simplified in a very similar way in recent years toast so we're kind of",
    "start": "637010",
    "end": "644300"
  },
  {
    "text": "converging towards much more simple algorithms in this space taking this",
    "start": "644300",
    "end": "649430"
  },
  {
    "start": "648000",
    "end": "693000"
  },
  {
    "text": "approach we get a bunch of nice safety guarantees and these have all been",
    "start": "649430",
    "end": "654500"
  },
  {
    "text": "formally proven were we can guarantee that we will only see if leah lacked one",
    "start": "654500",
    "end": "659900"
  },
  {
    "text": "leader at a time we will make sure that the leader will only have the leaders state the leader is the only one who can",
    "start": "659900",
    "end": "667550"
  },
  {
    "text": "expand all their logs all leaders through the different election cycles will have the logs marching right",
    "start": "667550",
    "end": "673160"
  },
  {
    "text": "through history there's all kind of nice stuff the good thing is it's all been formally proven through quite a simple",
    "start": "673160",
    "end": "679520"
  },
  {
    "text": "model so we get these nice features that come out of the what I find is quite interesting is",
    "start": "679520",
    "end": "685390"
  },
  {
    "text": "think this paper doesn't talk so much about how this works but if you read a",
    "start": "685390",
    "end": "690880"
  },
  {
    "text": "lot of three other papers one of the things that really stands out is a lot of this is actually built on a lot of",
    "start": "690880",
    "end": "696180"
  },
  {
    "start": "693000",
    "end": "734000"
  },
  {
    "text": "functional theory so monotonic functions is what score in a lot of this is we",
    "start": "696180",
    "end": "701380"
  },
  {
    "text": "only go forward with election so you increment the term every time you do a new election you add messages to a log",
    "start": "701380",
    "end": "709060"
  },
  {
    "text": "only ever increasing the log you only ever accrues did you never go back in",
    "start": "709060",
    "end": "714280"
  },
  {
    "text": "history makes it much easier to reason about when you start understanding some the fundamentals behind it you can see",
    "start": "714280",
    "end": "720520"
  },
  {
    "text": "hi some of the the different protocols are related to each other you can actually even steal some nice ideas in",
    "start": "720520",
    "end": "726070"
  },
  {
    "text": "implementation from some and apply them in another kiss and you can reason about it you can be pretty certain you can get",
    "start": "726070",
    "end": "733180"
  },
  {
    "text": "it reasonably correct I like to think about it is you basically versed in all things it becomes an important thing to",
    "start": "733180",
    "end": "739450"
  },
  {
    "start": "734000",
    "end": "751000"
  },
  {
    "text": "think about state as immutable and over time you keep increasing that's did but",
    "start": "739450",
    "end": "744940"
  },
  {
    "text": "you version everything and then from there you know what you're dealing with in an a given stage it becomes nice and easy to reason about so where does Aeron",
    "start": "744940",
    "end": "754390"
  },
  {
    "start": "751000",
    "end": "774000"
  },
  {
    "text": "fit into some of this and kind of like why did we apply it well aaron is a nice",
    "start": "754390",
    "end": "759430"
  },
  {
    "text": "messaging system it runs pretty fast well previs faster than anything else that's right there by quite a bit and",
    "start": "759430",
    "end": "765160"
  },
  {
    "text": "people keep asking as well can you give us better guarantees for messages arriving so they want these different",
    "start": "765160",
    "end": "771790"
  },
  {
    "text": "delivery guarantees we keeps hearing this over and over again and the common one is is it guaranteed delivery I hear",
    "start": "771790",
    "end": "778839"
  },
  {
    "start": "774000",
    "end": "780000"
  },
  {
    "text": "this from many many people usually someone a bit like this there's usually",
    "start": "778839",
    "end": "783850"
  },
  {
    "start": "780000",
    "end": "823000"
  },
  {
    "text": "some architect in some place kind of has opinions on how things should be",
    "start": "783850",
    "end": "789820"
  },
  {
    "text": "often hasn't written code in probably 20 or 30 years maybe didn't even really",
    "start": "789820",
    "end": "795160"
  },
  {
    "text": "write much code in the first place but they demand these features and a product and they don't really know what they're",
    "start": "795160",
    "end": "800560"
  },
  {
    "text": "asking for like if anybody wants to look at some of the histories some of these protocols and different things like president",
    "start": "800560",
    "end": "806920"
  },
  {
    "text": "everyone's heard of two-phase commit these people know that it's been formally proven is incorrect like all",
    "start": "806920",
    "end": "814330"
  },
  {
    "text": "the guarantees that people read the heuristic section of the papers are on dot these people demand this sort of stuff but",
    "start": "814330",
    "end": "820810"
  },
  {
    "text": "they don't know what they're really asking for what do you need to know",
    "start": "820810",
    "end": "826210"
  },
  {
    "start": "823000",
    "end": "846000"
  },
  {
    "text": "around this Lea I find it what's interesting is why these people behave in a certain way is they take a",
    "start": "826210",
    "end": "831820"
  },
  {
    "text": "need-to-know approach they hoard information and they do with their vendors they demand a feature of a",
    "start": "831820",
    "end": "838030"
  },
  {
    "text": "vendor thinking that it's gonna fit into their world rather than what is the overall world and what is the problems",
    "start": "838030",
    "end": "844060"
  },
  {
    "text": "we're trying to address I like to think much more along the lines of I want guarantee processing of something not",
    "start": "844060",
    "end": "851350"
  },
  {
    "start": "846000",
    "end": "909000"
  },
  {
    "text": "guaranteed delivery because the delivery doesn't matter it's the processing of that message to the event at then the",
    "start": "851350",
    "end": "858130"
  },
  {
    "text": "day that really matters if it's delivered more than once that's fine if",
    "start": "858130",
    "end": "863320"
  },
  {
    "text": "what you're delivering to is idempotent and you can tell that because your version dull for things there's lots of",
    "start": "863320",
    "end": "869200"
  },
  {
    "text": "easier ways of reasoning about stuff like even if you take something that would give you guaranteed delivery what",
    "start": "869200",
    "end": "876220"
  },
  {
    "text": "if you consume it from that and then you go to process at you crash before you finish processing it's guaranteed",
    "start": "876220",
    "end": "882810"
  },
  {
    "text": "processing is what really matters and this sort of thing fits a lot",
    "start": "882810",
    "end": "888190"
  },
  {
    "text": "particularly the finance world I spend a good bit of my time in finance and we build interesting systems typically in",
    "start": "888190",
    "end": "894850"
  },
  {
    "text": "memory systems and these in-memory systems have to go particularly fast and because it's purely in memory what",
    "start": "894850",
    "end": "901630"
  },
  {
    "text": "happens to be fits a machine off what happens if it crashes we need to be able to recover things so how do these sort",
    "start": "901630",
    "end": "907900"
  },
  {
    "text": "of systems look well we typically have a number of clients are going to send",
    "start": "907900",
    "end": "913870"
  },
  {
    "start": "909000",
    "end": "1018000"
  },
  {
    "text": "requests to some service somewhere pretty simple typically that service",
    "start": "913870",
    "end": "920230"
  },
  {
    "text": "will want to record things to disk so that if we switch it off and switch it on again we can get back to our current",
    "start": "920230",
    "end": "926230"
  },
  {
    "text": "view of state but if a problem with this what if the disk becomes corrupt what if",
    "start": "926230",
    "end": "932080"
  },
  {
    "text": "the machine bursts into flames with a number of really interesting things so I can give you a real world",
    "start": "932080",
    "end": "937720"
  },
  {
    "text": "example from a few weeks ago were now with method to regulation coming into",
    "start": "937720",
    "end": "943570"
  },
  {
    "text": "fact in Europe people are having to use microsecond time stamps on all orders it",
    "start": "943570",
    "end": "949030"
  },
  {
    "text": "must be applied so there's some friends of mine we're working on a system they're applying",
    "start": "949030",
    "end": "954340"
  },
  {
    "text": "microsecond time stamps to everything they got hardware to do that they happen to have one of the highest volume",
    "start": "954340",
    "end": "960070"
  },
  {
    "text": "systems in the world and the clock that they were on the system they're requesting these time stamps off the",
    "start": "960070",
    "end": "965740"
  },
  {
    "text": "grid was not specified to cope with that the Machine burst into flames because it",
    "start": "965740",
    "end": "972970"
  },
  {
    "text": "was work too hard so things bursting into flames it's really not just a flippin thing it",
    "start": "972970",
    "end": "978550"
  },
  {
    "text": "really happens I've seen it quite a few times so having the single service even",
    "start": "978550",
    "end": "983830"
  },
  {
    "text": "if you're logging it to desk is it really a good approach we need it on more than one location and particularly",
    "start": "983830",
    "end": "990730"
  },
  {
    "text": "if you want to start looking at hot upgrades that's another very common thing with like the trading strategies",
    "start": "990730",
    "end": "996670"
  },
  {
    "text": "and people to be in this space is they want the hot operator system and you're",
    "start": "996670",
    "end": "1002010"
  },
  {
    "text": "not gonna shut the system down and bring it up again to do that you want to do stuff like odd and you know it into a cluster running some of your new code",
    "start": "1002010",
    "end": "1009000"
  },
  {
    "text": "getting it to take over and take the old codes out of the system we want to be able to do those sorts of hot deploys",
    "start": "1009000",
    "end": "1014370"
  },
  {
    "text": "for that we need to have this D it in more than one place so will typically",
    "start": "1014370",
    "end": "1019770"
  },
  {
    "text": "run more than one instance of something and we tend to split the systems off by having consensus modules to manage the",
    "start": "1019770",
    "end": "1027510"
  },
  {
    "text": "cluster state runner services themselves and we're still logging to disk but we're logging to disk in many locations",
    "start": "1027510",
    "end": "1034230"
  },
  {
    "text": "now we've got it in memory in many different locations at any given point in time",
    "start": "1034230",
    "end": "1039329"
  },
  {
    "text": "and ideally you won't have to of something because in the case of two you",
    "start": "1039329",
    "end": "1045300"
  },
  {
    "text": "can't really resolve any sort of disputes and you can't tolerate failures and still have a reliable system so you",
    "start": "1045300",
    "end": "1051810"
  },
  {
    "text": "need typically a minimum of three for this threes and fives is very common for your kind of cluster sizes that we're",
    "start": "1051810",
    "end": "1058410"
  },
  {
    "text": "dealing with it and the majority will be sort of cluster size divided by two plus one now how do we coordinate this and",
    "start": "1058410",
    "end": "1066360"
  },
  {
    "text": "how do we deal with it so Todd and I we spend a lot of time building these sorts of things so one of the things I feel I",
    "start": "1066360",
    "end": "1072600"
  },
  {
    "start": "1071000",
    "end": "1087000"
  },
  {
    "text": "should share is we build these things we offer them out as open source you all get the benefit from it so there's part",
    "start": "1072600",
    "end": "1079230"
  },
  {
    "text": "of benefit from it you should share a little bit in our pan that we have to deal with and dealing with an IO is a",
    "start": "1079230",
    "end": "1085860"
  },
  {
    "text": "little bit of the pain we often deal with I get an interesting question do servers crash yes I think it's pretty",
    "start": "1085860",
    "end": "1092070"
  },
  {
    "start": "1087000",
    "end": "1142000"
  },
  {
    "text": "certain they do crush now if you're gonna be logging to disk and if we're",
    "start": "1092070",
    "end": "1097710"
  },
  {
    "text": "gonna be even f syncing to disk keeping our dealer is there anything we still need to worry about so I'm gonna",
    "start": "1097710",
    "end": "1104700"
  },
  {
    "text": "record the desk I'm gonna write to disk and I'm gonna f sync all of my rights is there anything else I need to worry",
    "start": "1104700",
    "end": "1109800"
  },
  {
    "text": "about flushing well yeah you're gonna",
    "start": "1109800",
    "end": "1115500"
  },
  {
    "text": "have written it out you're gonna flush it now if I've got a file and I'm writing not file to disk and I'm not",
    "start": "1115500",
    "end": "1120929"
  },
  {
    "text": "sinking that file to just kind of lose that file in any other way what if you",
    "start": "1120929",
    "end": "1126990"
  },
  {
    "text": "have not f synced the directory and we're familiar with lost and finds this",
    "start": "1126990",
    "end": "1132690"
  },
  {
    "text": "is where your files going to end up even if you're their sink dot file you've got a sink the directory as well when you",
    "start": "1132690",
    "end": "1138210"
  },
  {
    "text": "create that file in the first list try doing this in Java and we start doing some weird code that looks a bit like",
    "start": "1138210",
    "end": "1144690"
  },
  {
    "start": "1142000",
    "end": "1189000"
  },
  {
    "text": "this so okay this kind of ugly code here at the top I've got a file channel I'm",
    "start": "1144690",
    "end": "1149910"
  },
  {
    "text": "gonna open the file channel note I'm only opening it for the directory and I'm giving it no options this isn't in",
    "start": "1149910",
    "end": "1156870"
  },
  {
    "text": "the documentation as a way of using this and I might get an i/o exception and",
    "start": "1156870",
    "end": "1162360"
  },
  {
    "text": "well in fact if I do that on Windows I will get an i/o exception and I won't get an i/o exception on Linux and then",
    "start": "1162360",
    "end": "1168750"
  },
  {
    "text": "afterwards if it's not no alcohol force on it with true to force the metadata as",
    "start": "1168750",
    "end": "1174120"
  },
  {
    "text": "well as the data itself out to disk this horrible little idiom that I'm applying in these focuses is so that I can f sync",
    "start": "1174120",
    "end": "1181290"
  },
  {
    "text": "my directory to disk not just my file because the Java API has no means of doing this and we have",
    "start": "1181290",
    "end": "1188220"
  },
  {
    "text": "to do evil things like that to make it work it would be really nice if we just had a nice simple call says something",
    "start": "1188220",
    "end": "1193950"
  },
  {
    "text": "like this like files dot force for a directory and force the metadata as well that'll be kind of nice",
    "start": "1193950",
    "end": "1200310"
  },
  {
    "text": "we can't have that but let's face it we have var an eye on Java so we can't have",
    "start": "1200310",
    "end": "1206550"
  },
  {
    "text": "safe directories on disk and make sure our data stares forever through supported things but we have bar so we",
    "start": "1206550",
    "end": "1212429"
  },
  {
    "text": "feel good let's talk a little bit about performance and how does performance fit",
    "start": "1212429",
    "end": "1217880"
  },
  {
    "start": "1213000",
    "end": "1225000"
  },
  {
    "text": "into this particularly let's look at what it means if we design based upon our PC as a way of thinking so if I got",
    "start": "1217880",
    "end": "1227990"
  },
  {
    "start": "1225000",
    "end": "1328000"
  },
  {
    "text": "a request coming in here and I'm now gonna use our PC remote procedure call by its very nature is synchronous now we",
    "start": "1227990",
    "end": "1233900"
  },
  {
    "text": "can do certain things with futures and promises and sort of make it a little bit more stretched out though",
    "start": "1233900",
    "end": "1239600"
  },
  {
    "text": "what happens if we just consider it as basic RPC well request comes into the system it's gonna hit whatever is the",
    "start": "1239600",
    "end": "1246020"
  },
  {
    "text": "designated leader at that point in time the leader then will need to sieve it to",
    "start": "1246020",
    "end": "1251420"
  },
  {
    "text": "its own disk so that's gonna take some time right in the disk take some time especially if you're going to f sync it",
    "start": "1251420",
    "end": "1258100"
  },
  {
    "text": "then the leader has to replicate it to one of its followers this case send it",
    "start": "1258100",
    "end": "1264170"
  },
  {
    "text": "off to another consensus module that will then have to replicate it to disk at that point see if a time F sync it",
    "start": "1264170",
    "end": "1270230"
  },
  {
    "text": "again I think what time is now taking on as we're doing this thing because it's all happening in serial by doing this",
    "start": "1270230",
    "end": "1278050"
  },
  {
    "text": "the consensus module then needs to replicate it to another one at that stage which again has to replicate it to",
    "start": "1278050",
    "end": "1285530"
  },
  {
    "text": "disk or sync it to disk this did we can actually process it by a service because",
    "start": "1285530",
    "end": "1291710"
  },
  {
    "text": "you think about it we now have it on a majority of servers on disk at this point we have it on the leader we have",
    "start": "1291710",
    "end": "1298910"
  },
  {
    "text": "it only one of the followers and I can actually start processing the data at this point now these are gonna layer on",
    "start": "1298910",
    "end": "1306410"
  },
  {
    "text": "top of each other over time whenever you've responded from that call the",
    "start": "1306410",
    "end": "1312110"
  },
  {
    "text": "leader can also execute it against its own state machine at that point and we can start making progress so we can only",
    "start": "1312110",
    "end": "1318410"
  },
  {
    "text": "consume something within the state machine itself once it's safely on disk",
    "start": "1318410",
    "end": "1323750"
  },
  {
    "text": "on a majority of the cluster members and now we can go forward but start thinking",
    "start": "1323750",
    "end": "1329480"
  },
  {
    "start": "1328000",
    "end": "1425000"
  },
  {
    "text": "about like where does concurrency and parallelism come into this I said okay we could have done some of that stuff",
    "start": "1329480",
    "end": "1335150"
  },
  {
    "text": "with futures and promises but we can't do all of the bits down the desk and all",
    "start": "1335150",
    "end": "1340550"
  },
  {
    "text": "quite as well and it's nice so how does things fit together now they've done an excellent talk yesterday and one of the",
    "start": "1340550",
    "end": "1346760"
  },
  {
    "text": "point he made this talk was he's a parolee lured I like to correct him Dave is not a",
    "start": "1346760",
    "end": "1351770"
  },
  {
    "text": "parallel nerd he's a concurrent nerd Dave is a single entity who can time slice but he cannot do the two things at",
    "start": "1351770",
    "end": "1359870"
  },
  {
    "text": "one time that he was talking about he can split his time among them and again we we mix these terms up an awful lot in",
    "start": "1359870",
    "end": "1366050"
  },
  {
    "text": "our industry I like how John Gustafson actually splits these apart and these are distinct and we shouldn't try to",
    "start": "1366050",
    "end": "1372530"
  },
  {
    "text": "interleave them so think of parallel as the opposite of serial concurrent is the",
    "start": "1372530",
    "end": "1377840"
  },
  {
    "text": "opposite of sequential the those are quite distinctly different he actually talks about in many of his papers he",
    "start": "1377840",
    "end": "1384410"
  },
  {
    "text": "will not use the terms concurrent and parallel in this same paper because of the confusion it causes around getting",
    "start": "1384410",
    "end": "1391190"
  },
  {
    "text": "us as an industry to not thinking about stuff I see I really like the Third",
    "start": "1391190",
    "end": "1396770"
  },
  {
    "text": "Point and I'll get into how the benefits something's coming thinking in factors is a really powerful way of dealing with",
    "start": "1396770",
    "end": "1403610"
  },
  {
    "text": "so many problems simple where something that up is watching is really really cool and I'll show you some examples of",
    "start": "1403610",
    "end": "1409730"
  },
  {
    "text": "why it's really cool in a second so we can get much more throughput and much lower latency if we start thinking about",
    "start": "1409730",
    "end": "1416270"
  },
  {
    "text": "what can we do in parallel consider the concurrency but also how do we get",
    "start": "1416270",
    "end": "1421580"
  },
  {
    "text": "things going in factors now one of the places we can learn a lot from it's hard",
    "start": "1421580",
    "end": "1427430"
  },
  {
    "start": "1425000",
    "end": "1488000"
  },
  {
    "text": "work a lot of the stuff has been done in hardware for a long long time so we can get a lot of inspiration from it so if",
    "start": "1427430",
    "end": "1433430"
  },
  {
    "text": "I'm gonna process instructions inside the CPU I'm gonna do it in a pipeline and it's because I can use different",
    "start": "1433430",
    "end": "1440260"
  },
  {
    "text": "electronic circuitry for each of the steps of the process so when you process one of your instructions it doesn't just",
    "start": "1440260",
    "end": "1446750"
  },
  {
    "text": "happen in a single cycle and it's all over it's done in a series of steps so first thing we're gonna do is we've got",
    "start": "1446750",
    "end": "1451880"
  },
  {
    "text": "effect the memory for the instruction itself and that instruction name we can",
    "start": "1451880",
    "end": "1457610"
  },
  {
    "text": "then execute but we can't just execute that instruction because even if we run accidie six-hour accidie 6 assembly",
    "start": "1457610",
    "end": "1465020"
  },
  {
    "text": "instructions are high-level as far as our processor is concerned it needs to decode those instructions down into",
    "start": "1465020",
    "end": "1471320"
  },
  {
    "text": "micro ops and then it can execute the micro ops themselves so that's another step in the process and then we've got",
    "start": "1471320",
    "end": "1478700"
  },
  {
    "text": "these quite complicated CPUs that are known as out of order speculation engines and they need to pull things",
    "start": "1478700",
    "end": "1485600"
  },
  {
    "text": "back and order at the end and they need to write things out to memory so they've got quite a complicated retirement fears",
    "start": "1485600",
    "end": "1490670"
  },
  {
    "start": "1488000",
    "end": "1520000"
  },
  {
    "text": "to that so we end up with these four steps they can subdivide those into even",
    "start": "1490670",
    "end": "1495680"
  },
  {
    "text": "further steps but we typically have these four steps so imagine my theoretical processor took one cycle per",
    "start": "1495680",
    "end": "1502250"
  },
  {
    "text": "step and I wanted to process four different instructions if I was to do those all in serial we will end up with",
    "start": "1502250",
    "end": "1509630"
  },
  {
    "text": "16 cycles to complete it but it's the hard work that can do the factoring",
    "start": "1509630",
    "end": "1514760"
  },
  {
    "text": "starts fetching the next instruction once it's finished and the decoder starts decoding the next instruction once it's finished the previous one we",
    "start": "1514760",
    "end": "1521150"
  },
  {
    "start": "1520000",
    "end": "1536000"
  },
  {
    "text": "can start pipelining these things like that no I I can complete my four instructions in just seven cycles so",
    "start": "1521150",
    "end": "1527960"
  },
  {
    "text": "make use of the pipeline in a fax this is a nice way to have concurrency on par",
    "start": "1527960",
    "end": "1532970"
  },
  {
    "text": "Lausanne working for us in doing this we look at consensus we've got a number of",
    "start": "1532970",
    "end": "1538910"
  },
  {
    "start": "1536000",
    "end": "1554000"
  },
  {
    "text": "steps we've got to deal with first of all we've got to order our inputs we have many different clients sending in",
    "start": "1538910",
    "end": "1545450"
  },
  {
    "text": "requests into the system if we want to create a log not log it's going to be deterministic we have to apply a",
    "start": "1545450",
    "end": "1551390"
  },
  {
    "text": "sequence to that so we need to order the things that are coming in will then log",
    "start": "1551390",
    "end": "1556730"
  },
  {
    "start": "1554000",
    "end": "1586000"
  },
  {
    "text": "them to desk so we cap it for later we need transmitted to the other nodes",
    "start": "1556730",
    "end": "1561830"
  },
  {
    "text": "in the system we can apply a connect protocol so that once we have reached",
    "start": "1561830",
    "end": "1567380"
  },
  {
    "text": "majority of nodes containing those we can commit those changes into our",
    "start": "1567380",
    "end": "1572620"
  },
  {
    "text": "different state machines and that's where they get executed so we pipeline",
    "start": "1572620",
    "end": "1577670"
  },
  {
    "text": "that process now if we can start doing that as a pipeline we can start getting",
    "start": "1577670",
    "end": "1582770"
  },
  {
    "text": "a much greater throughput in our system how some of this gonna play out if we",
    "start": "1582770",
    "end": "1588200"
  },
  {
    "start": "1586000",
    "end": "1685000"
  },
  {
    "text": "look at our example here so if we look at the system and we start running all",
    "start": "1588200",
    "end": "1594230"
  },
  {
    "text": "of these different components on different threads and making communicate in somewhere that's very cheap for the",
    "start": "1594230",
    "end": "1600470"
  },
  {
    "text": "communication to happen but also happens completely sequentially and happens in",
    "start": "1600470",
    "end": "1607210"
  },
  {
    "text": "concurrently with each other we can get a lot more going on in here so what would this look like well if we got a",
    "start": "1607210",
    "end": "1614240"
  },
  {
    "text": "request that comes into her system and hits the consensus module if the consensus module",
    "start": "1614240",
    "end": "1619430"
  },
  {
    "text": "can at the same time send to all of the other components that are interested we",
    "start": "1619430",
    "end": "1625850"
  },
  {
    "text": "see if a lot of time and going through and processing this I'll go through the",
    "start": "1625850",
    "end": "1630950"
  },
  {
    "text": "different components of our own that lets us do this like we can deal with the writing to disk the senator the",
    "start": "1630950",
    "end": "1636680"
  },
  {
    "text": "components the execution and the state machines all of this is happening in a pipeline at the same time and that data",
    "start": "1636680",
    "end": "1643640"
  },
  {
    "text": "is not copied at all it goes through all of this with single operations for dealing with it consensus modules can be",
    "start": "1643640",
    "end": "1651440"
  },
  {
    "text": "responding with positions that they have dealt with up to that point and that can feed into the data that's going on again",
    "start": "1651440",
    "end": "1658220"
  },
  {
    "text": "from replicating where you can consume in the commit position this way we can get through things at a much greater",
    "start": "1658220",
    "end": "1664130"
  },
  {
    "text": "width and that process repeats will get another request in we'll just replicate",
    "start": "1664130",
    "end": "1669320"
  },
  {
    "text": "it out we'll get back the position that's been appended and from here we can distribute the consensus position",
    "start": "1669320",
    "end": "1675680"
  },
  {
    "text": "that's been commit and we just have that go in as a pipeline so back again to an",
    "start": "1675680",
    "end": "1681290"
  },
  {
    "text": "i/o pin what are the things do we need to do in this well we're working a lot",
    "start": "1681290",
    "end": "1686900"
  },
  {
    "start": "1685000",
    "end": "1761000"
  },
  {
    "text": "with binary protocols we're trying to write this data right to network into disk so we're using things like byte",
    "start": "1686900",
    "end": "1693410"
  },
  {
    "text": "buffers a lot so well typically allocate our byte buffers and we'll start writing some data in here so here's a simple",
    "start": "1693410",
    "end": "1699590"
  },
  {
    "text": "example off I'm gonna put an integer into a byte buffer at a given index there is a perfectly good API that lets",
    "start": "1699590",
    "end": "1706910"
  },
  {
    "text": "me do this what's interesting is I can have separate threads doing that because I'm putting my index so there is no",
    "start": "1706910",
    "end": "1714860"
  },
  {
    "text": "relationship between another thread that's putting something by index to a different location in that buffer or",
    "start": "1714860",
    "end": "1720380"
  },
  {
    "text": "reading from the different location in our buffer there's an API that doesn't take the index that uses the position",
    "start": "1720380",
    "end": "1726620"
  },
  {
    "text": "internally of the class that is not thread safe so we can't sure we can't",
    "start": "1726620",
    "end": "1731750"
  },
  {
    "text": "get the par lism I'd have thought now we often want to put bytes into those",
    "start": "1731750",
    "end": "1737420"
  },
  {
    "text": "buffers as well so if I want to put on an array of bytes into there I can well I'm gonna plump it",
    "start": "1737420",
    "end": "1742940"
  },
  {
    "text": "in by index to a given position if I do that my ID gives me a red squiggly line which is quite first",
    "start": "1742940",
    "end": "1748669"
  },
  {
    "text": "well have I got a red squiggly line it turns out we don't have the method implemented to put a byte array in by",
    "start": "1748669",
    "end": "1756259"
  },
  {
    "text": "index or another byte buffer index but we do have for lots of other types this",
    "start": "1756259",
    "end": "1761840"
  },
  {
    "start": "1761000",
    "end": "1777000"
  },
  {
    "text": "bug has been open since 2004 and is still not fixed but we now have our and",
    "start": "1761840",
    "end": "1769820"
  },
  {
    "text": "we can save a little bit of typing but we can't have been safe on desk and we can't have things efficient so how can",
    "start": "1769820",
    "end": "1778190"
  },
  {
    "start": "1777000",
    "end": "1814000"
  },
  {
    "text": "our own help with some of the other stuff well realizing that monotonic",
    "start": "1778190",
    "end": "1783440"
  },
  {
    "text": "functions are key to a lot of consensus algorithms one of the parts of it is we agree message index is the thing that's",
    "start": "1783440",
    "end": "1791299"
  },
  {
    "text": "going to increase over time so I get a new message into the system I audited a log and a new message index there's a",
    "start": "1791299",
    "end": "1798350"
  },
  {
    "text": "lot of assumptions around dot that means that the log has to know about message",
    "start": "1798350",
    "end": "1803989"
  },
  {
    "text": "envelope in the transmission protocol has to know about message envelope in we have coupled a lot of implementations to",
    "start": "1803989",
    "end": "1811940"
  },
  {
    "text": "an implementation what about if we substitute message index for byte index",
    "start": "1811940",
    "end": "1818679"
  },
  {
    "start": "1814000",
    "end": "1872000"
  },
  {
    "text": "it's still a monotonic function it still goes on over time but most things don't",
    "start": "1818679",
    "end": "1825619"
  },
  {
    "text": "need to know so the thing that writes to stuff the desk does it need to know what's in those bytes know it needs to",
    "start": "1825619",
    "end": "1831529"
  },
  {
    "text": "know it's written the bytes to disk written them safely and know how far it's got through the string when it's",
    "start": "1831529",
    "end": "1837409"
  },
  {
    "text": "replicating to other machines did their care about which messages in there no they don't",
    "start": "1837409",
    "end": "1842600"
  },
  {
    "text": "they're just transmitting bytes on the network and then know how many bytes have been transmitted again to which",
    "start": "1842600",
    "end": "1848600"
  },
  {
    "text": "point it seems like consuming within the state machines once you're consumed within the state machines how much the byte stream have",
    "start": "1848600",
    "end": "1855739"
  },
  {
    "text": "you actually consumed that's what matters not the message index itself we can flit",
    "start": "1855739",
    "end": "1861379"
  },
  {
    "text": "to many concerns together and our designs and that limits so many things it limits our implementations it also",
    "start": "1861379",
    "end": "1867769"
  },
  {
    "text": "limits how we could do botching how we can do replication how we can do many other things so I promised earlier that",
    "start": "1867769",
    "end": "1874669"
  },
  {
    "start": "1872000",
    "end": "1983000"
  },
  {
    "text": "I would talk about how we do lots of things at the same time well when we're communicating between the different",
    "start": "1874669",
    "end": "1880639"
  },
  {
    "text": "nodes in the system we a multicast that's kind of nice easy where we can rap like here too many",
    "start": "1880639",
    "end": "1887000"
  },
  {
    "text": "followers at the same time with a single cent some networks we can't multicast so",
    "start": "1887000",
    "end": "1892460"
  },
  {
    "text": "for example if we were in Amazon we don't have access to multicast one of the things we do is we can simulate",
    "start": "1892460",
    "end": "1897860"
  },
  {
    "text": "multicast by using multi unicast dreams but from the programming perspective it's just the same and we will make all",
    "start": "1897860",
    "end": "1905269"
  },
  {
    "text": "of those lengths point the point and because our data structures are immutable data structures and functional",
    "start": "1905269",
    "end": "1911480"
  },
  {
    "text": "in nature we can insure them across the different senders without any additional copying so we get a lot of the benefits",
    "start": "1911480",
    "end": "1918740"
  },
  {
    "text": "of multicast but we still use unicast streams now here's an interesting one if",
    "start": "1918740",
    "end": "1924380"
  },
  {
    "text": "I'm going to send from a leader to a follower the leader needs that dear to",
    "start": "1924380",
    "end": "1929870"
  },
  {
    "text": "themselves the leader needs that data to write it down the desk to log it needs that data at the consumer in the state",
    "start": "1929870",
    "end": "1936620"
  },
  {
    "text": "machine one of the things we have is spy based subscribers so they can spy on an",
    "start": "1936620",
    "end": "1942590"
  },
  {
    "text": "outgoing data stream and without receiving the data back in again can get",
    "start": "1942590",
    "end": "1947960"
  },
  {
    "text": "access to the bytes and again because it's a mutable data structure they can read it without taking any copies no",
    "start": "1947960",
    "end": "1955340"
  },
  {
    "text": "cost to that you're consuming on the other machines when I'm consuming on the other machine I've got the byte stream",
    "start": "1955340",
    "end": "1961460"
  },
  {
    "text": "coming in off the network I need to write at the desk I need a processor by the consensus module to know how far I've got through",
    "start": "1961460",
    "end": "1967610"
  },
  {
    "text": "it and I need a processor by the state machine again we receive it into one buffer that buffers in shared memory",
    "start": "1967610",
    "end": "1973789"
  },
  {
    "text": "across processes they're all using exactly the same data structure the same",
    "start": "1973789",
    "end": "1978889"
  },
  {
    "text": "memory again without copying we can greatly benefit from that and how do we",
    "start": "1978889",
    "end": "1983960"
  },
  {
    "start": "1983000",
    "end": "2018000"
  },
  {
    "text": "do that well we use the whole concept of the monotonic functions and the fact that we use counters to bind all of our",
    "start": "1983960",
    "end": "1991519"
  },
  {
    "text": "consumption because they're just byte streams they're not message streams as far as most of the components the system",
    "start": "1991519",
    "end": "1997669"
  },
  {
    "text": "is concerned it can just work on that nice and simple and so it consumes up to those points we can replicate the data",
    "start": "1997669",
    "end": "2004269"
  },
  {
    "text": "to the state machines but they don't necessarily a consume it yet the consume it based on the commit position that's",
    "start": "2004269",
    "end": "2010240"
  },
  {
    "text": "transmitted by the later and not where we don't have to send anything else again now how does this money",
    "start": "2010240",
    "end": "2016220"
  },
  {
    "text": "Matar for Bochy well if I've cut a piece of work that needs to be done and it's",
    "start": "2016220",
    "end": "2022580"
  },
  {
    "start": "2018000",
    "end": "2102000"
  },
  {
    "text": "gonna take a unit of time so it says 100% of time for doing something if I can do two things in the same operation",
    "start": "2022580",
    "end": "2029870"
  },
  {
    "text": "like right two things the desk in the CIO operation right two things to the network in the sim send/receive two",
    "start": "2029870",
    "end": "2037429"
  },
  {
    "text": "things from the network in the sim send of omelette rice that cost where each of them has only taken 50% of the cost if",
    "start": "2037429",
    "end": "2044030"
  },
  {
    "text": "you look at it from a per item perspective look at how the payback curve in this compares back really",
    "start": "2044030",
    "end": "2049760"
  },
  {
    "text": "quickly the biggest win you get is going from one to two but you start going to four sort of six year 1000 time you",
    "start": "2049760",
    "end": "2056599"
  },
  {
    "text": "reach ten you've got the majority of the pair back based on bocce you don't have to botch thousands of things to get the",
    "start": "2056599",
    "end": "2063470"
  },
  {
    "text": "benefits you get the benefits very very quickly but if you design such that you",
    "start": "2063470",
    "end": "2069080"
  },
  {
    "text": "can put things into the batches you get huge benefits in efficiency queueing",
    "start": "2069080",
    "end": "2075050"
  },
  {
    "text": "Theory comes into a fact here because the service time is not Amma tries to cross those things we get much lower",
    "start": "2075050",
    "end": "2081050"
  },
  {
    "text": "latency much greater throughput and we can apply this the lots of things so our system calls or network round trips are",
    "start": "2081050",
    "end": "2087679"
  },
  {
    "text": "a disc rides expensive computations think about all the first and apply it and this is the nice things when you",
    "start": "2087679",
    "end": "2093500"
  },
  {
    "text": "taken it back to the simplicity of it it's a byte stream and we're agreeing by the index rather message index it",
    "start": "2093500",
    "end": "2100070"
  },
  {
    "text": "becomes easy to deal with what other",
    "start": "2100070",
    "end": "2105950"
  },
  {
    "start": "2102000",
    "end": "2161000"
  },
  {
    "text": "interesting features are we added to this so timers particularly is an interest in one of how to deal with this",
    "start": "2105950",
    "end": "2112280"
  },
  {
    "text": "in a lot of different systems with these deterministic state machines everything",
    "start": "2112280",
    "end": "2118640"
  },
  {
    "text": "that comes in the mute hits the system must come in as a message you can't read the clock you can't go to desk to read",
    "start": "2118640",
    "end": "2125960"
  },
  {
    "text": "anything it must come in this way to be deterministic so high people tend to deal with time is their pulse kind into",
    "start": "2125960",
    "end": "2132650"
  },
  {
    "text": "these systems if you want really low granularity of time that's a lot of",
    "start": "2132650",
    "end": "2137750"
  },
  {
    "text": "messages it's a big log how do we get a run doc we can do other things inside",
    "start": "2137750",
    "end": "2142849"
  },
  {
    "text": "there but so we decided to tackle this head-on and one of the things we're able to prove by high the replication works",
    "start": "2142849",
    "end": "2148640"
  },
  {
    "text": "is we were able to wrap like he had the ability to schedule timers in the system itself and because the",
    "start": "2148640",
    "end": "2154250"
  },
  {
    "text": "sequencers on a busy duty cycle it can work at very low granularity down to nanoseconds if necessary and from here",
    "start": "2154250",
    "end": "2163310"
  },
  {
    "start": "2161000",
    "end": "2173000"
  },
  {
    "text": "we've decided to offer a simple API where if you want to schedule a timer for example place an order into a system",
    "start": "2163310",
    "end": "2169400"
  },
  {
    "text": "you know that if it's not much within a given period of time it must be canceled so we can just tell the cluster to",
    "start": "2169400",
    "end": "2175130"
  },
  {
    "start": "2173000",
    "end": "2192000"
  },
  {
    "text": "schedule a timer and we provide a correlation ID for that timer it's just",
    "start": "2175130",
    "end": "2181250"
  },
  {
    "text": "an opaque identifier for it and a deadline at which that timer should expire so it could be just based upon",
    "start": "2181250",
    "end": "2187790"
  },
  {
    "text": "the current time that we currently have in the cluster then when that timer expires it'll call back with an on-time",
    "start": "2187790",
    "end": "2195290"
  },
  {
    "start": "2192000",
    "end": "2217000"
  },
  {
    "text": "event and from there we don't need to manage time inside the cluster we've got",
    "start": "2195290",
    "end": "2200300"
  },
  {
    "text": "a nice implementation of timer wheel we can store lots of these things very efficiently and process them very",
    "start": "2200300",
    "end": "2206570"
  },
  {
    "text": "efficiently including canceling and because most timers are canceled before they ever expire so there has to be an",
    "start": "2206570",
    "end": "2212930"
  },
  {
    "text": "order one nice efficient implementation so we offered up a really interesting",
    "start": "2212930",
    "end": "2219590"
  },
  {
    "start": "2217000",
    "end": "2256000"
  },
  {
    "text": "one is complexities you get with back pressure and how you deal with work so",
    "start": "2219590",
    "end": "2224770"
  },
  {
    "text": "if you're in a system and you got a little clients than you did in and you're gonna pass the it on to do something you take data of an input and",
    "start": "2224770",
    "end": "2231860"
  },
  {
    "text": "you go to send it to the other side what if the other side isn't ready to deal with it you know I stuck with this",
    "start": "2231860",
    "end": "2237170"
  },
  {
    "text": "dealer so I've read data off a socket and then gotta write it to another soccer to write at the disk but it's too",
    "start": "2237170",
    "end": "2243920"
  },
  {
    "text": "busy what do i do do I start this somewhere do I put it in a temporary variable do I copy it it becomes quite a",
    "start": "2243920",
    "end": "2252410"
  },
  {
    "text": "difficult thing so we want to look at this as a first-class concern so this is an example of real code from a Honda",
    "start": "2252410",
    "end": "2259460"
  },
  {
    "start": "2256000",
    "end": "2274000"
  },
  {
    "text": "inside the system that deals with our ingress of traffic so I'm putting the",
    "start": "2259460",
    "end": "2264560"
  },
  {
    "text": "whole thing on the screen because this is it and it'll actually fit on one slide so I've got a session message",
    "start": "2264560",
    "end": "2270620"
  },
  {
    "text": "coming into a system I'm gonna decide what am I gonna do with this so first thing I want to track is do I have a",
    "start": "2270620",
    "end": "2276680"
  },
  {
    "start": "2274000",
    "end": "2299000"
  },
  {
    "text": "registered session versus just some bogus Theatre of God well if the",
    "start": "2276680",
    "end": "2281720"
  },
  {
    "text": "sessions already been closed or it's just a bogus I can return out of this with a different with a given status and the",
    "start": "2281720",
    "end": "2288350"
  },
  {
    "text": "status here is an action to continue and our continued action means you've consumed this data continue processing",
    "start": "2288350",
    "end": "2295460"
  },
  {
    "text": "over it but don't do anything with it at that stage if that's not the case it's",
    "start": "2295460",
    "end": "2301460"
  },
  {
    "start": "2299000",
    "end": "2364000"
  },
  {
    "text": "actually something that you have so this is a real valid session well let's check",
    "start": "2301460",
    "end": "2306620"
  },
  {
    "text": "now if it's open and if it's open I'm going to append it to the log and depending to the log may apply back",
    "start": "2306620",
    "end": "2313070"
  },
  {
    "text": "pressure but it may also succeed if it succeeds in this case we go into the",
    "start": "2313070",
    "end": "2318680"
  },
  {
    "text": "block and we're gonna update the activity of that client the same way we last it and we'll can will return from",
    "start": "2318680",
    "end": "2325940"
  },
  {
    "text": "this with the continued operation again now the very last section it's quite",
    "start": "2325940",
    "end": "2331130"
  },
  {
    "text": "simple as so if I haven't skipped over it and I haven't processed that I",
    "start": "2331130",
    "end": "2336880"
  },
  {
    "text": "haven't been able to do with them so I want this message teheran we return an abort and that stares in the incoming",
    "start": "2336880",
    "end": "2344660"
  },
  {
    "text": "data structure we don't need to temporarily store it anywhere else it's there and the next time we come in we",
    "start": "2344660",
    "end": "2350420"
  },
  {
    "text": "can just consume it again without requiring any temporary state so just thinking about the flows through a",
    "start": "2350420",
    "end": "2356030"
  },
  {
    "text": "system that you shouldn't have all of this extra states deal with now what",
    "start": "2356030",
    "end": "2362000"
  },
  {
    "text": "about logs and snapshots do we need a distributed file system like we're gonna record logs over time if you've got a",
    "start": "2362000",
    "end": "2370010"
  },
  {
    "start": "2364000",
    "end": "2388000"
  },
  {
    "text": "system like this you need text nap shots occasionally otherwise you'd have to replay the logs from the beginning of time so with the open a file and you",
    "start": "2370010",
    "end": "2377900"
  },
  {
    "text": "write all this data to disk on a phone and inside the file how do I get that to another note how do I read it remotely",
    "start": "2377900",
    "end": "2385370"
  },
  {
    "text": "like we end up with do you need a distributed file system we like the recording of those streams just to be a",
    "start": "2385370",
    "end": "2392270"
  },
  {
    "text": "stream of messages and we write them down to that stream and that can then be read remotely so we effectively get into",
    "start": "2392270",
    "end": "2398840"
  },
  {
    "text": "the ability to have a distributed file system that's pretty fast now how fast is pretty fast",
    "start": "2398840",
    "end": "2404570"
  },
  {
    "text": "Aaron can easily max a 10 gig e network if you have a fast enough SSD we can run",
    "start": "2404570",
    "end": "2411440"
  },
  {
    "text": "at up to about 2 gigabytes now click a bit 2 gigabytes per second we and replay",
    "start": "2411440",
    "end": "2416840"
  },
  {
    "text": "of these and streams so it kind of runs quite nice we can also process these streams",
    "start": "2416840",
    "end": "2423880"
  },
  {
    "start": "2420000",
    "end": "2571000"
  },
  {
    "text": "again this's their going back to applying some functional principles we can have multiple services dealing with",
    "start": "2423880",
    "end": "2429460"
  },
  {
    "text": "the same streams so we've got our keys here we've got our various services consuming this why not just have",
    "start": "2429460",
    "end": "2436630"
  },
  {
    "text": "multiple services running off the same thing actually piggyback all the same infrastructure so for example I've got",
    "start": "2436630",
    "end": "2443440"
  },
  {
    "text": "something doing order marching what if I want to do risk on the same time what if I want to do market surveillance all of",
    "start": "2443440",
    "end": "2449680"
  },
  {
    "text": "these things can run off it completely in parallel and virtually no extra cost",
    "start": "2449680",
    "end": "2454830"
  },
  {
    "text": "so kind of one list last little bit of niño pan inside here we've got byte",
    "start": "2454830",
    "end": "2461590"
  },
  {
    "text": "buffers and we've got map byte buffer and dragged by buffer I guess some people may or may not be familiar with",
    "start": "2461590",
    "end": "2467440"
  },
  {
    "text": "these so I direct byte buffer is one that's not managed by the garbage collector on the Java heap it's off heap",
    "start": "2467440",
    "end": "2474280"
  },
  {
    "text": "it's usually allocated through the likes of Moloch thus under there and we can use that for sending data to network or",
    "start": "2474280",
    "end": "2480820"
  },
  {
    "text": "to disk we need those because we can't use normal hideous data structures for that because they could be moved by the",
    "start": "2480820",
    "end": "2487000"
  },
  {
    "text": "garbage collector as we're actually using them so we have to use these off heap structures we also have memory map",
    "start": "2487000",
    "end": "2494020"
  },
  {
    "text": "files and memory of our files are really nice feature but they've got some additional stuff so they I can force a",
    "start": "2494020",
    "end": "2500859"
  },
  {
    "text": "memory map file to disk I can do some other stuff with it I I mentioned the",
    "start": "2500859",
    "end": "2506050"
  },
  {
    "text": "start some of the people who worked on some these consensus algorithms one of those people is Barbara Liskov who did a",
    "start": "2506050",
    "end": "2511900"
  },
  {
    "text": "lot of the nice work on Beast on replication most people are not a word that she did that they're more familiar",
    "start": "2511900",
    "end": "2517330"
  },
  {
    "text": "with her input to the solid principles including Liskov substitution principle so under a Liskov substitution principle",
    "start": "2517330",
    "end": "2524109"
  },
  {
    "text": "I should be able to if I have one class subclasses another one I should be able",
    "start": "2524109",
    "end": "2529240"
  },
  {
    "text": "to substitute any subclass for the base class because it should behave exactly",
    "start": "2529240",
    "end": "2534670"
  },
  {
    "text": "the right way now these two classes one of them subclasses the other which would",
    "start": "2534670",
    "end": "2541420"
  },
  {
    "text": "be the right way around to do this so should it be side one where a byte",
    "start": "2541420",
    "end": "2547600"
  },
  {
    "text": "buffer will come under I'm not by buffer I should have beside two were I'm up by buffer should come under",
    "start": "2547600",
    "end": "2553690"
  },
  {
    "text": "a direct byte buffer who's for side one",
    "start": "2553690",
    "end": "2559350"
  },
  {
    "text": "good so most people would not feel object-oriented 101 at university post",
    "start": "2559350",
    "end": "2565210"
  },
  {
    "text": "per side to which one you think is really implemented we're actually",
    "start": "2565210",
    "end": "2572770"
  },
  {
    "start": "2571000",
    "end": "2587000"
  },
  {
    "text": "implemented on one so the people who give us this would have field object oriented 101 on any basic computer",
    "start": "2572770",
    "end": "2579520"
  },
  {
    "text": "science course they put them the wrong way around and this breaks let's go substitution principle so I'm",
    "start": "2579520",
    "end": "2588010"
  },
  {
    "start": "2587000",
    "end": "2610000"
  },
  {
    "text": "just about at a time now I saw quickly in closing where we are what's the roadmap we have a working implementation",
    "start": "2588010",
    "end": "2594610"
  },
  {
    "text": "of this we're just finishing up some of the interesting features are on cluster",
    "start": "2594610",
    "end": "2599860"
  },
  {
    "text": "catch up where a node leaves the cluster and comes back in again and has fallen behind state it's looking quite",
    "start": "2599860",
    "end": "2606370"
  },
  {
    "text": "interesting I remember the first time I talked to by there on I used this t-shirt as one of the slides at there no",
    "start": "2606370",
    "end": "2612430"
  },
  {
    "text": "because it's been such a cool thing to work on and I think the cluster stuff that we're currently working on now is",
    "start": "2612430",
    "end": "2618100"
  },
  {
    "text": "kind of equally as cool as some of the base implementation because we're finding if we can do these things very",
    "start": "2618100",
    "end": "2623280"
  },
  {
    "text": "efficient and kind of quite a nice fun wear and all that I'll say thank you",
    "start": "2623280",
    "end": "2628690"
  },
  {
    "text": "very much and I think I'm at a time",
    "start": "2628690",
    "end": "2632640"
  },
  {
    "text": "you",
    "start": "2634480",
    "end": "2636540"
  }
]