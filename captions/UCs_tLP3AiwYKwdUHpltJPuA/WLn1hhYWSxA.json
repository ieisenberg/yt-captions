[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "[Music]",
    "start": "2540",
    "end": "8990"
  },
  {
    "text": "[Applause] uh so knowledge is power understanding git okay so one G one of those things",
    "start": "8990",
    "end": "15799"
  },
  {
    "text": "where you've um you start off you think oh I've got the hang of G and then you do something and it all goes horribly",
    "start": "15799",
    "end": "20960"
  },
  {
    "text": "horribly wrong so this is where the point of git where you have to learn a",
    "start": "20960",
    "end": "26359"
  },
  {
    "text": "bit about how it works underneath the hood to truly understand it it's got very leapy Le abstractions um and you need to sort of",
    "start": "26359",
    "end": "33440"
  },
  {
    "text": "be able to understand those to really get work done um see the problem is there's two ways of learning git one is",
    "start": "33440",
    "end": "39440"
  },
  {
    "start": "38000",
    "end": "71000"
  },
  {
    "text": "from the bottom up and then people will say things like this git is fundamentally a Content addressable file",
    "start": "39440",
    "end": "44480"
  },
  {
    "text": "system yeah that's great but there also bugger all use if you actually just want to get your work done on a day-to-day ba",
    "start": "44480",
    "end": "50000"
  },
  {
    "text": "basis you work you you somebody's come along and said we're moving some subversion we're moving from CVS we're",
    "start": "50000",
    "end": "55239"
  },
  {
    "text": "moving into git and you want to know what do I actually do what is the equivalent of SVA check out and what is",
    "start": "55239",
    "end": "61440"
  },
  {
    "text": "the equivalent of SVN commit things like that um so this content addressable file",
    "start": "61440",
    "end": "66720"
  },
  {
    "text": "system a cyclic graphs all that crap is of no use to you at all when you're trying to get work done now last year I",
    "start": "66720",
    "end": "74200"
  },
  {
    "text": "was at um git merge in France um along",
    "start": "74200",
    "end": "79520"
  },
  {
    "text": "with GitHub who spite May what you may have heard actually last seen GitHub get on quite well at personal level we",
    "start": "79520",
    "end": "85240"
  },
  {
    "text": "certainly go drinking a lot uh so but H merge um Emma James hosin",
    "start": "85240",
    "end": "92079"
  },
  {
    "text": "Westby great speaker if you get the chance to see her uh I recommend it we actually end up pulling her along to all",
    "start": "92079",
    "end": "97920"
  },
  {
    "text": "of our alasan events because she's really really good has interesting insights but she works a lot in",
    "start": "97920",
    "end": "103479"
  },
  {
    "text": "educating people about how to learn about how to learn git not and she she comes from the very much the top- down",
    "start": "103479",
    "end": "110040"
  },
  {
    "text": "point of view people want to get their job done here's how you get started here's how you get um here's you get",
    "start": "110040",
    "end": "116600"
  },
  {
    "text": "your code out here's how you commit here's little gotas like the state staging environment and um stashes and",
    "start": "116600",
    "end": "122759"
  },
  {
    "text": "things like that say the a the about the directed ayc graph is no use to at that point however after a while you start",
    "start": "122759",
    "end": "130599"
  },
  {
    "text": "getting a bit more confident after a while you start building real things in git you start actually seeing oh yeah I can actually do this I've heard about",
    "start": "130599",
    "end": "136800"
  },
  {
    "text": "this G get reset I've heard about this get re rebase that sounds great I'll use that and that's when things start to go",
    "start": "136800",
    "end": "142440"
  },
  {
    "text": "horribly wrong even the simple thing the things that g is really really good at like branching and merging um Can rapid",
    "start": "142440",
    "end": "150160"
  },
  {
    "start": "146000",
    "end": "186000"
  },
  {
    "text": "get out of hand this by the way this is not a nightmare scenario this is actually a recommended workflow I",
    "start": "150160",
    "end": "157040"
  },
  {
    "text": "you not do not do this okay start the bottom very simple one branch one merge",
    "start": "157040",
    "end": "163239"
  },
  {
    "text": "if you need to get more complicated add on top as necessary this is this completely out of control but thing is",
    "start": "163239",
    "end": "168800"
  },
  {
    "text": "you start getting into this sort scenario that kind of Clone versus commit versus um you know stash and all",
    "start": "168800",
    "end": "177239"
  },
  {
    "text": "the rest is not really going to help you very much at some point you're going to have to get untangle this mess and then",
    "start": "177239",
    "end": "182519"
  },
  {
    "text": "there's going to be some guy in the organization who has to understand git so presumably you've all seen this XKCD",
    "start": "182519",
    "end": "189599"
  },
  {
    "start": "186000",
    "end": "211000"
  },
  {
    "text": "com comic from a couple of months ago well probably about a year ago now um it's it's basically true there um this",
    "start": "189599",
    "end": "197920"
  },
  {
    "text": "um basically most people get to this stage where they go I don't understand anymore and they have just blown it away",
    "start": "197920",
    "end": "203239"
  },
  {
    "text": "and start start again because they got into such a complete and utter mess now you're also if you if you know XKCD",
    "start": "203239",
    "end": "211159"
  },
  {
    "text": "there is the hidden text in it as well there's always that one",
    "start": "211159",
    "end": "217840"
  },
  {
    "text": "guy he will not shut up but he's really really useful you you have a look at your oh yeah yeah yeah what you've done",
    "start": "218400",
    "end": "225000"
  },
  {
    "text": "is you've rebased but you have you you haven't reset before you've done that so your working directory is now out of sync you've done a get rebase soft and",
    "start": "225000",
    "end": "231879"
  },
  {
    "text": "risk get rebase hard etc etc you know so resets off reset hard see even I'm doing",
    "start": "231879",
    "end": "237760"
  },
  {
    "text": "it um and eventually you'll guess what you need to do the thing is this guy doesn't know what those commands are the",
    "start": "237760",
    "end": "245239"
  },
  {
    "text": "secret here is the commands that mentioned there he doesn't know that they exist he's assumed they exist",
    "start": "245239",
    "end": "253200"
  },
  {
    "text": "because if you understand the underlying model of git from the bottom up you will know what commands must exist logically",
    "start": "253200",
    "end": "260560"
  },
  {
    "text": "to get you out of trouble you assume if I know that git model works like this",
    "start": "260560",
    "end": "265919"
  },
  {
    "text": "then there must be a command that makes it do that I just go and off and find that command and later I'll show you",
    "start": "265919",
    "end": "272000"
  },
  {
    "text": "literally a real world example of how I I I did that when I show you that that one weird trick that every talk has to",
    "start": "272000",
    "end": "278960"
  },
  {
    "text": "have now so without further Ado we're going to move on to um G inter internals",
    "start": "278960",
    "end": "285000"
  },
  {
    "text": "and hopefully by the end of this talk you will be that really annoying guy in in in your team the one who understands",
    "start": "285000",
    "end": "290720"
  },
  {
    "text": "get and gets people out of trouble which is really good job security by the way so without further Ado get inter",
    "start": "290720",
    "end": "297919"
  },
  {
    "start": "295000",
    "end": "309000"
  },
  {
    "text": "internals let's start right down at the bottom we're going to we're not going to go about about a cyclic graphs yet we're",
    "start": "297919",
    "end": "303520"
  },
  {
    "text": "not going to go on about content addressable file systems I'm going to show ra rather than tell I'll tell you later don't",
    "start": "303520",
    "end": "309000"
  },
  {
    "text": "worry at the bottom of the stack that is git is the",
    "start": "309000",
    "end": "314880"
  },
  {
    "text": "blob that's really it everything is blobs all chained together at the end of the day now what's in the blobs changes",
    "start": "314880",
    "end": "320360"
  },
  {
    "text": "so it's kind of um it's contextual but at the bottom level um everything is a",
    "start": "320360",
    "end": "326960"
  },
  {
    "text": "blob the simplest blob is is the content something that is essentially a binary",
    "start": "326960",
    "end": "333919"
  },
  {
    "start": "327000",
    "end": "449000"
  },
  {
    "text": "blob that git has no idea about now that includes text files it doesn't have no fundamental",
    "start": "333919",
    "end": "339440"
  },
  {
    "text": "awareness of text files at its lowest level higher up when we start looking at",
    "start": "339440",
    "end": "344639"
  },
  {
    "text": "things like merging yes git will will understand that certain things are text files and it will um understand how to",
    "start": "344639",
    "end": "352160"
  },
  {
    "text": "operate on them but it's lowest level it doesn't care everything is just a blob a blob is nothing more than the contents",
    "start": "352160",
    "end": "359759"
  },
  {
    "text": "of a of an object it's compress Z lip compressed it has a header stuck on it",
    "start": "359759",
    "end": "365919"
  },
  {
    "text": "just to help identify it um on the file system if you do come across a a rogue one and then um it is hashed there a sh",
    "start": "365919",
    "end": "374560"
  },
  {
    "text": "one hash and that identifies it that's kind of where the conent Dr F system",
    "start": "374560",
    "end": "380039"
  },
  {
    "text": "comes in but we will get to that don't worry about that the next level up is the tree a tree is also a blob but it's",
    "start": "380039",
    "end": "385720"
  },
  {
    "text": "a blob where git understands what the content is um and in particular tree",
    "start": "385720",
    "end": "390880"
  },
  {
    "text": "points at other blobs and potentially which could be other trees and it gives it additional meta data so say there's",
    "start": "390880",
    "end": "398240"
  },
  {
    "text": "no file names associated with these blobs the tree gives it a file name now trees can point at other trees or they",
    "start": "398240",
    "end": "404599"
  },
  {
    "text": "can point at blobs and they can give them names they can give them additional meta data such as file permissions",
    "start": "404599",
    "end": "410319"
  },
  {
    "text": "whether it's executable or not this looks an awful lot like a Unix recursive",
    "start": "410319",
    "end": "415479"
  },
  {
    "text": "file system um which is not surprising given it's actually written by a Unix",
    "start": "415479",
    "end": "420879"
  },
  {
    "text": "kernel developer um and at the top level we have something called a commit a commit",
    "start": "420879",
    "end": "427639"
  },
  {
    "text": "points at a tree well it can point at a blob usually will point at a tree but we can we can manipulate this anywhere we",
    "start": "427639",
    "end": "433680"
  },
  {
    "text": "want so commit points at a tree and that tree defines a set of",
    "start": "433680",
    "end": "441720"
  },
  {
    "text": "objects now the fact that there's no file names associated with those lowlevel blobs is what we talk about contant address of file system and I'll",
    "start": "441720",
    "end": "447440"
  },
  {
    "text": "show you that now so let's go let's just do this let's show this from the ground up we're going",
    "start": "447440",
    "end": "453000"
  },
  {
    "start": "449000",
    "end": "539000"
  },
  {
    "text": "to just go to the command line and do get init get init gives you an empty git",
    "start": "453000",
    "end": "458560"
  },
  {
    "text": "repository um now it does actually create a bunch of additional boiler plates that isn't important and has no",
    "start": "458560",
    "end": "464680"
  },
  {
    "text": "role initially which I'm not going to you know brush over that now because it's not not important creates a bunch",
    "start": "464680",
    "end": "470960"
  },
  {
    "text": "of dummy hooks that you can Ena enable if you want but we don't worry about that at its core a g a nit creates a",
    "start": "470960",
    "end": "477680"
  },
  {
    "text": "completely empty repository with nothing in it so if we look at the um there's a and as you probably know that inside the git",
    "start": "477680",
    "end": "484120"
  },
  {
    "text": "repository there is a dogit directory and inside there is all of the information about your repository the St",
    "start": "484120",
    "end": "490000"
  },
  {
    "text": "outside of that your actual files what's called a working tree when git looks inside that and rebuilds the working",
    "start": "490000",
    "end": "496560"
  },
  {
    "text": "state of Any Given commit however that is really additional you can wipe all",
    "start": "496560",
    "end": "501800"
  },
  {
    "text": "that out and just tell git to reset and it will pull all that information out again so the real information is stored",
    "start": "501800",
    "end": "508919"
  },
  {
    "text": "inside the git directory inside the dogit directory is a directory called objects and this is where all of our",
    "start": "508919",
    "end": "515240"
  },
  {
    "text": "blobs are stored so let's get in there and let's start manipulating creating some content",
    "start": "515240",
    "end": "520839"
  },
  {
    "text": "for git um by the way I should jump back a bit um so the G ini is obvious but",
    "start": "520839",
    "end": "526560"
  },
  {
    "text": "tree is just a command that is will do a recursive um listing of a directory so",
    "start": "526560",
    "end": "531959"
  },
  {
    "text": "this is just showing you via the coloring that there is nothing in these directories these are two empty",
    "start": "531959",
    "end": "537720"
  },
  {
    "text": "directories info and pack so we're going to do two more commands now we're going to do touch touch in",
    "start": "537720",
    "end": "543640"
  },
  {
    "start": "539000",
    "end": "568000"
  },
  {
    "text": "Unix world could mean two things it um will either update at the timestamp on a",
    "start": "543640",
    "end": "549920"
  },
  {
    "text": "file or it's a convenient way of creating an empty file if one does not exist so we're going to create a",
    "start": "549920",
    "end": "554959"
  },
  {
    "text": "completely empty file called some file and then we're going to add it we're going to say git please track this",
    "start": "554959",
    "end": "561959"
  },
  {
    "text": "file don't commit it yet just be aware that this is something we're going to want changes to be tracked in and then",
    "start": "561959",
    "end": "567720"
  },
  {
    "text": "we can just go back and have a look at our git objects tree as you can see",
    "start": "567720",
    "end": "573440"
  },
  {
    "start": "568000",
    "end": "616000"
  },
  {
    "text": "there is now a single object in there it's Z lip compressed it's sh one hash",
    "start": "573440",
    "end": "579560"
  },
  {
    "text": "and a sh one hash is used as the file name that's not the file's file name the file's file name is some text um or",
    "start": "579560",
    "end": "585640"
  },
  {
    "text": "something I forget what actually said um but as you can see we um it's inside",
    "start": "585640",
    "end": "590920"
  },
  {
    "text": "another directory E6 that's the first two digits of the shaan hash um the rest",
    "start": "590920",
    "end": "596200"
  },
  {
    "text": "of it is is the remainder of the shaan hash the reason it does that is spread the load out across the directory system",
    "start": "596200",
    "end": "602120"
  },
  {
    "text": "rather than having one directory with all the files you have um 255",
    "start": "602120",
    "end": "607440"
  },
  {
    "text": "directories with the file spread out across them that's really just a local file system optimization and not particularly important you could do you",
    "start": "607440",
    "end": "614000"
  },
  {
    "text": "could implement it differently if you so desired that's not important but we're going to do a commit we want to say well",
    "start": "614000",
    "end": "619480"
  },
  {
    "start": "616000",
    "end": "708000"
  },
  {
    "text": "now we've got this state we've put this file in there that's empty and we're going to um commit it so we'll just do a",
    "start": "619480",
    "end": "627640"
  },
  {
    "text": "git commit with the the first commit net now we have three objects in here three",
    "start": "627640",
    "end": "636079"
  },
  {
    "text": "blobs the first one is the is our object our empty file the second one is our",
    "start": "636079",
    "end": "644040"
  },
  {
    "text": "tree and the third one is our commit this is it this is the lowest",
    "start": "644040",
    "end": "650079"
  },
  {
    "text": "level now interesting fact when I talk about um content addressable file systems that blob is of an empty file",
    "start": "650079",
    "end": "657880"
  },
  {
    "text": "now if I go to another completely separate repository and create another empty file what will hash",
    "start": "657880",
    "end": "665639"
  },
  {
    "text": "be it' be the same if I create another repository another file in this",
    "start": "665639",
    "end": "671800"
  },
  {
    "text": "repository that's empty and I I I add it what's going to happen it's going to be the",
    "start": "671800",
    "end": "677120"
  },
  {
    "text": "same anywhere in the known mathematical Universe where the laws of",
    "start": "677120",
    "end": "683040"
  },
  {
    "text": "math apply or laws of physics apply any empty file in a git repository will",
    "start": "683040",
    "end": "688480"
  },
  {
    "text": "always be that and that is what a Content addressable file system means it",
    "start": "688480",
    "end": "693880"
  },
  {
    "text": "means any object anywhere in in the universe that has the same content will have the same hash against it we can add",
    "start": "693880",
    "end": "700560"
  },
  {
    "text": "additional method data on top of it that's all in the trees but the objects are always the same if they had the same",
    "start": "700560",
    "end": "707399"
  },
  {
    "text": "content to them so in summary that is git in a",
    "start": "707399",
    "end": "714880"
  },
  {
    "start": "708000",
    "end": "726000"
  },
  {
    "text": "nutshell at its simplest level so it's not that complicated with one little caveat commits can point at trees",
    "start": "714880",
    "end": "723240"
  },
  {
    "text": "commits can even Point directly at objects they are used sometimes in that way however they can also point at other",
    "start": "723240",
    "end": "730200"
  },
  {
    "start": "726000",
    "end": "782000"
  },
  {
    "text": "commits so what we have here is commits can point to other",
    "start": "730200",
    "end": "737079"
  },
  {
    "text": "commits which point to different trees which point to different objects and this is the content of your direct your",
    "start": "737079",
    "end": "743600"
  },
  {
    "text": "repository changing over time so this really is the core of",
    "start": "743600",
    "end": "749800"
  },
  {
    "text": "git everything else is built on top of these basic abstractions and I'll we in",
    "start": "749800",
    "end": "755519"
  },
  {
    "text": "a minute we'll build our way up that tree and talk about some of the higher level abstractions but this is why that",
    "start": "755519",
    "end": "760839"
  },
  {
    "text": "person can that person in that text file can say oh I know there must be a way to do this because he's looked at this and",
    "start": "760839",
    "end": "767839"
  },
  {
    "text": "reasoned about how these different three different types of objects might be linked to get together and assume there",
    "start": "767839",
    "end": "775079"
  },
  {
    "text": "must be a file a command somewhere that allows you to manipulate and change that relationship ship um just",
    "start": "775079",
    "end": "782440"
  },
  {
    "text": "to show you another little aspect of this we're going to do we're going to",
    "start": "782440",
    "end": "787600"
  },
  {
    "text": "make a minor change to that file we're going to add an empty comment in it or a",
    "start": "787600",
    "end": "793160"
  },
  {
    "text": "very simple comment in it we're going to add that file again and let's have a look at the tree again this is that entirely new blog this is the content",
    "start": "793160",
    "end": "799160"
  },
  {
    "start": "796000",
    "end": "842000"
  },
  {
    "text": "addressable again because that file is no longer empty it is actually a completely separate object",
    "start": "799160",
    "end": "804639"
  },
  {
    "text": "now so this is really at its core",
    "start": "804639",
    "end": "811120"
  },
  {
    "text": "G it's really just objects and objects that points to each other but objects by themselves are just",
    "start": "811160",
    "end": "818480"
  },
  {
    "text": "hashes and hashes aren't hell of a lot of use sure you can you can use the tree to point at the objects and you can use",
    "start": "818480",
    "end": "824040"
  },
  {
    "text": "the commits to point at the trees or the other objects or whatever but then you got to point at the commit and what the hell is that use they're all hashes and",
    "start": "824040",
    "end": "830639"
  },
  {
    "text": "those aren't very practical so we're going to think a little bit more about um what do we want on top of that to",
    "start": "830639",
    "end": "837199"
  },
  {
    "text": "make it a little bit more usable in the real world so we'll jump one level up the tree now and we're going to look at",
    "start": "837199",
    "end": "842880"
  },
  {
    "start": "842000",
    "end": "926000"
  },
  {
    "text": "refs branches and tags so youve probably heard of refs you probably don't know much that much about about them possibly",
    "start": "842880",
    "end": "849120"
  },
  {
    "text": "you do um You probably you've almost certainly definitely heard of of branches and probably tags as well these",
    "start": "849120",
    "end": "856519"
  },
  {
    "text": "are all very much the same the same thing so what is a",
    "start": "856519",
    "end": "862880"
  },
  {
    "text": "rff a ref is just a pointer to an object simple as that that is all it is",
    "start": "862880",
    "end": "869880"
  },
  {
    "text": "it is literally a name given to a hash of an object that object might be a tree",
    "start": "869880",
    "end": "876759"
  },
  {
    "text": "might be a um a blob or it's more likely in Practical terms it's going to be a",
    "start": "876759",
    "end": "882600"
  },
  {
    "text": "commit it's a way of giving a commit a name is nothing more than a v variable now by the way if you see any similarity",
    "start": "882600",
    "end": "889279"
  },
  {
    "text": "to uh programming languages and in particular J jvm is a fairly good model",
    "start": "889279",
    "end": "894800"
  },
  {
    "text": "to actually think about it in some ways there's very very real reason for that ref are basically like V variable",
    "start": "894800",
    "end": "901000"
  },
  {
    "text": "names um and objects are very much like objects stored in memory with relationships to each other so there's",
    "start": "901000",
    "end": "907880"
  },
  {
    "text": "one another way to Bear it in mind as well but a ref is just a point to an object now we don't generally manipulate",
    "start": "907880",
    "end": "912920"
  },
  {
    "text": "refs directly very often we more often use the high level abstractions they're using um refs are just um or branches",
    "start": "912920",
    "end": "920120"
  },
  {
    "text": "and tags are just refs they have some special semantics but there that's convention",
    "start": "920120",
    "end": "927079"
  },
  {
    "start": "926000",
    "end": "964000"
  },
  {
    "text": "but branches and tags are just refs a branch is just a different ref",
    "start": "927079",
    "end": "934600"
  },
  {
    "text": "pointing to a different object now a object can have multiple",
    "start": "934600",
    "end": "940920"
  },
  {
    "text": "children and that is how you create a branch what you do is you have rather than merely moving up along along a",
    "start": "940920",
    "end": "947680"
  },
  {
    "text": "linear path you create a new ref a branch and that takes a different path",
    "start": "947680",
    "end": "954079"
  },
  {
    "text": "the parents are Remains the Same at some point in the history but you are now",
    "start": "954079",
    "end": "959519"
  },
  {
    "text": "gone on a on a Divergent path um briefly what is a tag well a tag is just a",
    "start": "959519",
    "end": "967120"
  },
  {
    "start": "964000",
    "end": "1020000"
  },
  {
    "text": "special ref that's used to Mark a commit in the history um usually this will be the most common one is a release point",
    "start": "967120",
    "end": "973880"
  },
  {
    "text": "so this is the version of the um the code that was out went out with version",
    "start": "973880",
    "end": "979959"
  },
  {
    "text": "1.2 so you can track your that point in history nothing more than a marker there",
    "start": "979959",
    "end": "985240"
  },
  {
    "text": "are special tags you can attach a commit to a tag tag and that tag points at a",
    "start": "985240",
    "end": "991199"
  },
  {
    "text": "another commit that's an object and that gives you the way to annotate a given tag and gives you a way to sign tags but",
    "start": "991199",
    "end": "997759"
  },
  {
    "text": "at simplest level a tag is just a by convention a point in history you can go",
    "start": "997759",
    "end": "1003079"
  },
  {
    "text": "back and actually manipulate those like my like many things and get it diverge from traditional Version Control Systems",
    "start": "1003079",
    "end": "1008519"
  },
  {
    "text": "you can go back in history and modify history you generally shouldn't unless you have a good read reason to but you",
    "start": "1008519",
    "end": "1013680"
  },
  {
    "text": "can go back and manipulate these tags if you need to so let's once again jump down into into the command line have a",
    "start": "1013680",
    "end": "1020360"
  },
  {
    "text": "quick look at this so we're going to create a tag just call it a tag and",
    "start": "1020360",
    "end": "1026640"
  },
  {
    "text": "we're going to attach a message to it which is just a tag we're also going to create a new branch and we're going to",
    "start": "1026640",
    "end": "1032079"
  },
  {
    "text": "look inside a different part of the git dogit repository and you can see what's happened in here is we now have a a",
    "start": "1032079",
    "end": "1038600"
  },
  {
    "text": "directory called git refs and that stores our refs now we split them up into useful into into different parts of",
    "start": "1038600",
    "end": "1045918"
  },
  {
    "text": "it one for the tags which is obvious the other one is heads heads are merely how",
    "start": "1045919",
    "end": "1051360"
  },
  {
    "text": "we refer to branches on the whole um it a head",
    "start": "1051360",
    "end": "1056600"
  },
  {
    "text": "will normally mean a branch will generally point to the end of a stream of development a string a string of",
    "start": "1056600",
    "end": "1063400"
  },
  {
    "text": "commits so these are the heads are our two branches there's a branch and master",
    "start": "1063400",
    "end": "1071000"
  },
  {
    "text": "master is the default Branch but again that's just convention if you don't want Master to be the default Branch you can",
    "start": "1071000",
    "end": "1077559"
  },
  {
    "text": "create your default Branch if you want and Destroy Master git doesn't prescribe anything like that it's just convention",
    "start": "1077559",
    "end": "1084280"
  },
  {
    "text": "and the tags we have the tag in there and if we we do cat if you don't know cat just blasts a file out by by default",
    "start": "1084280",
    "end": "1091600"
  },
  {
    "text": "we'll just display a file as you can see all that is in the branch is the hash",
    "start": "1091600",
    "end": "1098240"
  },
  {
    "text": "this is why branching in G is so incredibly fast it's literally writing a",
    "start": "1098240",
    "end": "1103320"
  },
  {
    "text": "bunch of characters to a file that is all that it is to create a branch that's why it's almost free",
    "start": "1103320",
    "end": "1109960"
  },
  {
    "text": "um so we know a bit about branches and tags now and refs we going talk about",
    "start": "1109960",
    "end": "1115799"
  },
  {
    "text": "one of the things that gen people often screw up um briefly what is a",
    "start": "1115799",
    "end": "1123480"
  },
  {
    "start": "1121000",
    "end": "1266000"
  },
  {
    "text": "reset now there is a reason for me bringing this up in the context of refs",
    "start": "1123480",
    "end": "1128799"
  },
  {
    "text": "and I'll show you in a second but what is is a reset how many people here have used reset in the past how many people",
    "start": "1128799",
    "end": "1136039"
  },
  {
    "text": " it up yeah the rest lying right it's a right of",
    "start": "1136039",
    "end": "1142080"
  },
  {
    "text": "passage in git to do a reset hard and go oh what have I just done we'll get",
    "start": "1142080",
    "end": "1149919"
  },
  {
    "text": "back to that I'll show you how to show you how how to fix that in fact I give you a heavy clue any second now but all G does with reset reset actually is one",
    "start": "1149919",
    "end": "1156720"
  },
  {
    "text": "of those heavily overloaded um commands inside git but it's simplest uh level it does all it does is we'll take a tag a",
    "start": "1156720",
    "end": "1166600"
  },
  {
    "text": "ref a branch usually and change its state so what we're going to do here new git reset",
    "start": "1166600",
    "end": "1173960"
  },
  {
    "text": "hard is one of those the overloaded part when the git does the reset and moves",
    "start": "1173960",
    "end": "1179679"
  },
  {
    "text": "the reference most usually the branch endpoint what it does it it has a choice",
    "start": "1179679",
    "end": "1185200"
  },
  {
    "text": "what's it going to do with the working directory it's changing internal state but you have your checked out copy as",
    "start": "1185200",
    "end": "1190880"
  },
  {
    "text": "well what happens to the checked out copy after you do that move hard is the most extreme one it says forget whatever",
    "start": "1190880",
    "end": "1196640"
  },
  {
    "text": "was in the working tree blow it away reset it to the state that I'm giving you now um the last bit the feature with",
    "start": "1196640",
    "end": "1204039"
  },
  {
    "text": "the up little up tag the little carrot on the end um means parent there's a",
    "start": "1204039",
    "end": "1209600"
  },
  {
    "text": "whole little sublanguage inside git for referencing the relationship between different refs nine times out of 10",
    "start": "1209600",
    "end": "1215640"
  },
  {
    "text": "you're not going to need to know that it's one of those things that's kind of Handy to know if you're really into into the weeds but by then you really should",
    "start": "1215640",
    "end": "1221240"
  },
  {
    "text": "understand what's going on anyway there's a little mini language for saying this commit but two behind it things like that but the carrot means",
    "start": "1221240",
    "end": "1227760"
  },
  {
    "text": "just whatever's is pointing to one back so we're just going to jump back to the parent blow away the last commit and",
    "start": "1227760",
    "end": "1234559"
  },
  {
    "text": "replace it with with whatever was in the last commit so that is that and now it will",
    "start": "1234559",
    "end": "1241400"
  },
  {
    "text": "just move that tag the ref that a simplest level there are different things it could do as a side effect but",
    "start": "1241400",
    "end": "1247039"
  },
  {
    "text": "that's all it really does now because you're doing this Fria you're not going in there and writing these files",
    "start": "1247039",
    "end": "1253320"
  },
  {
    "text": "directly you're telling G I want the ref to move well get going this is kind of",
    "start": "1253320",
    "end": "1258360"
  },
  {
    "text": "high high risk stuff here when you're messing around with this this one of the um least understood Fe features inside",
    "start": "1258360",
    "end": "1265120"
  },
  {
    "text": "git is something called the reflog whenever you manipulate a ref no",
    "start": "1265120",
    "end": "1270919"
  },
  {
    "start": "1266000",
    "end": "1375000"
  },
  {
    "text": "matter how you do it other than if you theoretically can go in and manipulate this FSE directly don't recommend doing that but anytime you manipulate a ref in",
    "start": "1270919",
    "end": "1279240"
  },
  {
    "text": "anyway creating a branch destroying a branch um doing a commit whatever anything that moves a ref git makes an",
    "start": "1279240",
    "end": "1285679"
  },
  {
    "text": "entry in something called The Ref log this is really really useful and we're",
    "start": "1285679",
    "end": "1291159"
  },
  {
    "text": "going to use that later to to get out of trouble this is one of simp the most important ways of getting out of",
    "start": "1291159",
    "end": "1296640"
  },
  {
    "text": "troubling GID if you do something and you don't know what the hell just happened go look in the ref log and you",
    "start": "1296640",
    "end": "1302080"
  },
  {
    "text": "can get back to the previous state now here's a couple of caveats here it's",
    "start": "1302080",
    "end": "1307440"
  },
  {
    "text": "local only to the local to local repository it's not going to get pushed up when you do a push wouldn't make any",
    "start": "1307440",
    "end": "1313440"
  },
  {
    "text": "sense um and it does time out after a certain amount of time 90 days by",
    "start": "1313440",
    "end": "1320159"
  },
  {
    "text": "default um and uh you can manip you can change that there is a a git config file you can in",
    "start": "1320159",
    "end": "1327360"
  },
  {
    "text": "your home directory or inside the git repository itself you can change that you can say I want to be longer shorter",
    "start": "1327360",
    "end": "1332600"
  },
  {
    "text": "whatever but it keeps a reflog for 90 days that's pretty sorry um",
    "start": "1332600",
    "end": "1339320"
  },
  {
    "text": "that's pretty good so I hate these things I go back to",
    "start": "1339320",
    "end": "1345120"
  },
  {
    "text": "bloody text files um so",
    "start": "1345120",
    "end": "1350440"
  },
  {
    "text": "but as you can see as we've made CH changes we've done commits checkouts commits Cherry picks all this stuff you",
    "start": "1350440",
    "end": "1356880"
  },
  {
    "text": "heard about anything that manipulates a ref will get entered in the ref log and it will also show you the hash which",
    "start": "1356880",
    "end": "1363720"
  },
  {
    "text": "gives us the ability to directly manipulate that and get out of trouble and we'll come to that in a bit and show",
    "start": "1363720",
    "end": "1369360"
  },
  {
    "text": "you how you can do do that now there is one other got you here this is where the",
    "start": "1369360",
    "end": "1375000"
  },
  {
    "text": "jvm side of things really does start to show",
    "start": "1375000",
    "end": "1380440"
  },
  {
    "text": "now if you think about it a little bit git creates a lot of these objects and",
    "start": "1381200",
    "end": "1386640"
  },
  {
    "text": "you do um an add an add an add you're changing one character at a time and do an add one character an add one",
    "start": "1386640",
    "end": "1393360"
  },
  {
    "text": "character and an add or one character the commit all of these all of these build up over time a lot of these um if",
    "start": "1393360",
    "end": "1400120"
  },
  {
    "text": "you have a temporary branch that you work on in a thr away what happens to all of those objects now one of the fundamental",
    "start": "1400120",
    "end": "1407240"
  },
  {
    "text": "insights of git in its original form it's changed a little bit since then but in it original form one of the insights",
    "start": "1407240",
    "end": "1413080"
  },
  {
    "text": "of it was that disk space is cheap so the original git had this idea of not",
    "start": "1413080",
    "end": "1419039"
  },
  {
    "text": "storing Deltas in the same way that subversion does subversion will every time you make a commit it looks at the",
    "start": "1419039",
    "end": "1424760"
  },
  {
    "text": "changes and Only Stores the bits that have changed the problem is that makes manipulation of subversion history very",
    "start": "1424760",
    "end": "1430240"
  },
  {
    "text": "very hard subversion thought was a good idea everyone who's ever seen somebody check all the company passwords into the",
    "start": "1430240",
    "end": "1436600"
  },
  {
    "text": "into a public repository will disagree with that slightly been there done that cleaned up the bloody mess it was a",
    "start": "1436600",
    "end": "1444200"
  },
  {
    "text": "nightmare so G has this concept of GC that occurs at certain times and you can",
    "start": "1444200",
    "end": "1449960"
  },
  {
    "start": "1448000",
    "end": "1584000"
  },
  {
    "text": "do it manually so G GC is actually remarkably",
    "start": "1449960",
    "end": "1455080"
  },
  {
    "text": "like GC inside the jvm how many people have familiar with how the jvm or",
    "start": "1455080",
    "end": "1461720"
  },
  {
    "text": "generally any other garbage collected virtual machine language works I'm assuming most people here have had some",
    "start": "1461720",
    "end": "1467399"
  },
  {
    "text": "sort of exposure to it so what happens is generally objects there'll be a root object and a lots of objects point to other objects and then",
    "start": "1467399",
    "end": "1474200"
  },
  {
    "text": "what the GC will do is occasionally go and look at the object if it's over a certain am certain age go okay does do",
    "start": "1474200",
    "end": "1480600"
  },
  {
    "text": "we need this anymore and trace it back through its history and there's some very elaborate algorithms for doing this",
    "start": "1480600",
    "end": "1485679"
  },
  {
    "text": "but that it's the simplest idea so what I've done here and we just replay",
    "start": "1485679",
    "end": "1492120"
  },
  {
    "text": "this so what happens we do get reset we moved our um tag back and we've done a GC well",
    "start": "1495799",
    "end": "1503520"
  },
  {
    "text": "because that object that we've moved from no longer has a parent because it's no longer got a tag so again inside um",
    "start": "1503520",
    "end": "1511960"
  },
  {
    "text": "the jvm if you got a variable pointing to an object that's that keeps it alive it's only when that variable disappears",
    "start": "1511960",
    "end": "1517960"
  },
  {
    "text": "the reference if you like that the object is cleaned up um GC will destroy",
    "start": "1517960",
    "end": "1524080"
  },
  {
    "text": "all of these old objects um now there are some some C some caveat to that the main one is it generally gives you two",
    "start": "1524080",
    "end": "1530360"
  },
  {
    "text": "weeks grace period so if you do a reset and then do a GC it won't actually go",
    "start": "1530360",
    "end": "1537159"
  },
  {
    "text": "and destroy the information straight away it'll wait two weeks I've done it I forced it here the GC prune equals all",
    "start": "1537159",
    "end": "1543880"
  },
  {
    "text": "says forget about that twoe limit destroy everything right now and that's purely for the purposes of this",
    "start": "1543880",
    "end": "1549200"
  },
  {
    "text": "demonstration I wouldn't recommend doing that again the the grace period is tunable inside your git config if you so",
    "start": "1549200",
    "end": "1556720"
  },
  {
    "text": "wish you want a longer Gra race period there is one other thing it does and I almost love to mention this because it's",
    "start": "1556720",
    "end": "1563919"
  },
  {
    "text": "not really important in terms of the git",
    "start": "1563919",
    "end": "1569120"
  },
  {
    "text": "model but it is important if you're going to go poke around inside your git git repositories software should bring",
    "start": "1569120",
    "end": "1575120"
  },
  {
    "text": "it up for you and it is important if you're looking at the um the networking protocols which again you probably don't",
    "start": "1575120",
    "end": "1580200"
  },
  {
    "text": "want to do I'm not going to go into here because elaborating of of itself but the other thing that the git GC does is it",
    "start": "1580200",
    "end": "1588399"
  },
  {
    "start": "1584000",
    "end": "1690000"
  },
  {
    "text": "does a pack now I mentioned that git's fundamental idea in the original days",
    "start": "1588399",
    "end": "1595360"
  },
  {
    "text": "was that every object is kept around all the time we don't go saving deltas and stuff like that turns out that works",
    "start": "1595360",
    "end": "1601640"
  },
  {
    "text": "great on the local far system not so much over the network and not when you have something the size of the Linux",
    "start": "1601640",
    "end": "1606919"
  },
  {
    "text": "kernel as well and you are say Linux tval and constantly merging all these",
    "start": "1606919",
    "end": "1612360"
  },
  {
    "text": "this stuff in that's creating a ton of garbage objects in uh in them so what",
    "start": "1612360",
    "end": "1618520"
  },
  {
    "text": "was introduced early on in git's history was something called the pack file the pack file does what um subversion does",
    "start": "1618520",
    "end": "1626559"
  },
  {
    "text": "UPF front but only does it after the fact and it basically Delta encodes things it says this file here is almost",
    "start": "1626559",
    "end": "1632240"
  },
  {
    "text": "the same as that file here so we're going to only save the differences between them um it does this quite",
    "start": "1632240",
    "end": "1637919"
  },
  {
    "text": "intelligently after the fact um and then does a bunch of extra compression Etc ET",
    "start": "1637919",
    "end": "1644200"
  },
  {
    "text": "Etc this is useful for cleaning up when you got a lot of objects on disk and it's also useful when you're sending",
    "start": "1644200",
    "end": "1649360"
  },
  {
    "text": "stuff across the network which is obviously going to a little bit more constrained than your average disc nowadays um the reason I was almost Lo",
    "start": "1649360",
    "end": "1656640"
  },
  {
    "text": "to talk about this is it's not really important it doesn't change the UN fundamental underlying nature of G that",
    "start": "1656640",
    "end": "1662640"
  },
  {
    "text": "model of objects point to objects Remains the Same and you can take that packfile and explod it back out into",
    "start": "1662640",
    "end": "1669080"
  },
  {
    "text": "that really wasteful huge system again if you wish so it's merely an intermediate compression it's like um",
    "start": "1669080",
    "end": "1676480"
  },
  {
    "text": "pointing out that you know HTM can sometimes be compressed when it comes over the wire it's not really important to understanding HTML so um this is not",
    "start": "1676480",
    "end": "1684399"
  },
  {
    "text": "super important to understanding git but it is important if you're going to poke around inside your git repository and you're curious um if you want have a",
    "start": "1684399",
    "end": "1691080"
  },
  {
    "start": "1690000",
    "end": "1814000"
  },
  {
    "text": "quick look at this this is actually what happens after the git um GC by the way",
    "start": "1691080",
    "end": "1696320"
  },
  {
    "text": "GC will happen at certain times during pushes and pulls and so on obviously when networking involved it does that quite aggressively um so if you actually",
    "start": "1696320",
    "end": "1704840"
  },
  {
    "text": "have any background in database Design This Will look quite familiar to you as well there's two files here a pack file",
    "start": "1704840",
    "end": "1712039"
  },
  {
    "text": "and a an index file that tells is used to look up certain files and explain how to basically rehydrate them from this",
    "start": "1712039",
    "end": "1718960"
  },
  {
    "text": "compressed format this is why you could basically go off and just re exlode the pack file if you so wish now if you're",
    "start": "1718960",
    "end": "1725159"
  },
  {
    "text": "really interested in this stuff um it is documented sort of this is a Linus toile",
    "start": "1725159",
    "end": "1731760"
  },
  {
    "text": "special um it's high the format is highly optimized for spinning discs um",
    "start": "1731760",
    "end": "1738240"
  },
  {
    "text": "in in the format designed to be able to randomly access as fast as possible on Legacy spinning discs um it's",
    "start": "1738240",
    "end": "1745720"
  },
  {
    "text": "documentation is very is basically somebody said what the hell is this packfile and Lind toall when pound pound pound pound Pound on in in an email",
    "start": "1745720",
    "end": "1752519"
  },
  {
    "text": "message and that is then email message was copied into the documentation directory of git and that is basically your documentation for the pack file",
    "start": "1752519",
    "end": "1758799"
  },
  {
    "text": "it's black art um it is fascinating to go and read if you're into binary",
    "start": "1758799",
    "end": "1763919"
  },
  {
    "text": "encoding file system optimization um sectors on diss Etc Etc um this is",
    "start": "1763919",
    "end": "1769799"
  },
  {
    "text": "clearly written by a f systems guy but as I say not important no more it's no more important than understanding um the",
    "start": "1769799",
    "end": "1778320"
  },
  {
    "text": "the format of a HTML file that's come over the network compressed you uncompress it that's that's all it is",
    "start": "1778320",
    "end": "1784279"
  },
  {
    "text": "it's a compression format useful but not super important in our in our mental",
    "start": "1784279",
    "end": "1789399"
  },
  {
    "text": "model so we've talked about um objects and commits and strings of commits and",
    "start": "1789399",
    "end": "1796559"
  },
  {
    "text": "branches which basically just says you you've got a different point and I Divergence in the history of course",
    "start": "1796559",
    "end": "1802960"
  },
  {
    "text": "diverging history is great particularly if it's really cheap to do but at some point you want to pull that history back",
    "start": "1802960",
    "end": "1808320"
  },
  {
    "text": "in and that's where things get a bit more complicated we're going to jump up the next level up which is the",
    "start": "1808320",
    "end": "1815200"
  },
  {
    "start": "1814000",
    "end": "1924000"
  },
  {
    "text": "merge now merges are quite comp complex and I am going to skim over a couple of",
    "start": "1815200",
    "end": "1821080"
  },
  {
    "text": "things here um there are a bunch of Articles we've written on atasan",
    "start": "1821080",
    "end": "1826399"
  },
  {
    "text": "developer. lan.com which is explain some of the details about it I'll introduce you to the core",
    "start": "1826399",
    "end": "1833279"
  },
  {
    "text": "methods of merging and introduce the core ideas but I am going to skip over some bits here because the main system",
    "start": "1833279",
    "end": "1839559"
  },
  {
    "text": "is used for mer merging something called recursive merge which is been optimized for Linux kernal is a very powerful but",
    "start": "1839559",
    "end": "1845799"
  },
  {
    "text": "it is a little bit outside the scope of this uh talk the other thing is um it's",
    "start": "1845799",
    "end": "1851360"
  },
  {
    "text": "also not necess and I'll show you why so what is a",
    "start": "1851360",
    "end": "1856399"
  },
  {
    "text": "merge a merge is the re integration of two diverg",
    "start": "1856399",
    "end": "1861919"
  },
  {
    "text": "points in history this is what you this is what you want when you branch is you do your merge um so you got these two points and",
    "start": "1861919",
    "end": "1870360"
  },
  {
    "text": "they have digressed um someone's plugging away on Master they shouldn't be they should be",
    "start": "1870360",
    "end": "1875880"
  },
  {
    "text": "branching off but let's not worry about that um and someone is working on the feature in parallel they're both making",
    "start": "1875880",
    "end": "1881559"
  },
  {
    "text": "changes and both possibly but not necessarily making changes to the same file how do we resolve that well we use",
    "start": "1881559",
    "end": "1890080"
  },
  {
    "text": "a commit algorithm a merging algorithm ra rather I'll talk about those briefly",
    "start": "1890080",
    "end": "1895919"
  },
  {
    "text": "but that again is a detail what we want is because there is going to have going",
    "start": "1895919",
    "end": "1901360"
  },
  {
    "text": "to resolve these two sets of changes which overlap we are going to create a merge Commit This is going",
    "start": "1901360",
    "end": "1910360"
  },
  {
    "text": "to store any changes necessary to resolve the two sets of changes to cause our text files to go like that g is",
    "start": "1910360",
    "end": "1917320"
  },
  {
    "text": "quite good about doing that and it's then going to store any additional information we need about that one",
    "start": "1917320",
    "end": "1923399"
  },
  {
    "text": "interestingly one of the things it stores this is where commits are quite powerful is commits can have more than",
    "start": "1923399",
    "end": "1929799"
  },
  {
    "start": "1924000",
    "end": "2051000"
  },
  {
    "text": "one parent so we talked a bit about you know each commit has a parent that points back to the previous one that",
    "start": "1929799",
    "end": "1936080"
  },
  {
    "text": "gives you the chain back to the his in history to the original creation of the project at the start but commits can",
    "start": "1936080",
    "end": "1943519"
  },
  {
    "text": "have two parents to them so you can have a point that says well this commit was made out of the joining of two other",
    "start": "1943519",
    "end": "1950679"
  },
  {
    "text": "commits two other branches in gits history now why only two it doesn't have",
    "start": "1950679",
    "end": "1957600"
  },
  {
    "text": "to be two it could be many you're getting crazy then but there are cases where that makes sense I will explain one um but explains the history now this",
    "start": "1957600",
    "end": "1964760"
  },
  {
    "text": "is why incidentally you can delete a branch after a merge and not lose any",
    "start": "1964760",
    "end": "1971200"
  },
  {
    "text": "history very very useful generally speaking certain bit bit bucket does",
    "start": "1971200",
    "end": "1976720"
  },
  {
    "text": "this not get and so so on and stash does as well Sor bit bucket server um what",
    "start": "1976720",
    "end": "1982960"
  },
  {
    "text": "happens is when you close when you do a a pull request and that effectively causes a merge you can optionally say",
    "start": "1982960",
    "end": "1989679"
  },
  {
    "text": "delete the branch afterwards that deletes the branch but it doesn't destroy the branch history because we can walk back through our history to the",
    "start": "1989679",
    "end": "1997679"
  },
  {
    "text": "merge commit and go ah which path we going to go down down the master or we",
    "start": "1997679",
    "end": "2003679"
  },
  {
    "text": "going to g off down the feature Branch because it will actually say that we have mer the branch there so even if you",
    "start": "2003679",
    "end": "2010639"
  },
  {
    "text": "destroy branches which are only just refs the point to the commit you blow that away you'll still keep the Old",
    "start": "2010639",
    "end": "2016760"
  },
  {
    "text": "Branch around because it's been referenced by the merge commit that tells you the diver this history was",
    "start": "2016760",
    "end": "2024159"
  },
  {
    "text": "merged at this point uh now that is not NE necessarily what people want and I'll",
    "start": "2024159",
    "end": "2029720"
  },
  {
    "text": "talk about that in a bit and it's actually not something that will happen in every single case if you consider the",
    "start": "2029720",
    "end": "2036320"
  },
  {
    "text": "concept of well what happened if I created a branch just me and worked on",
    "start": "2036320",
    "end": "2043000"
  },
  {
    "text": "my Fe feature away from master and then do a merge back on to master and nothing's changed on Master what happens",
    "start": "2043000",
    "end": "2049760"
  },
  {
    "text": "then this is where you heard possibly of a fast forward merge a fastforward merge is a handy",
    "start": "2049760",
    "end": "2057679"
  },
  {
    "start": "2051000",
    "end": "2242000"
  },
  {
    "text": "deal optimization um not Everyone likes it um what it does it goes look if I've",
    "start": "2057679",
    "end": "2066720"
  },
  {
    "text": "branched off and I've made a bunch of changes but nothing's changed on the point from the point of branching aren't the two",
    "start": "2066720",
    "end": "2074158"
  },
  {
    "text": "semantically equivalent now and the answer is yes they are so at that point we just do a little hack let's pretend",
    "start": "2074159",
    "end": "2080878"
  },
  {
    "text": "it never happened and we're just going to say We'll replace the BR the master now with",
    "start": "2080879",
    "end": "2087878"
  },
  {
    "text": "or the target Branch with the other branch and you'll never know know what happens now this has has two interesting",
    "start": "2087879",
    "end": "2094440"
  },
  {
    "text": "side effects one if you do as I say delete the bran the branch reference you'll",
    "start": "2094440",
    "end": "2101440"
  },
  {
    "text": "lose that history you'll never know what happened literally will be no no record of that at all even if you do keep it around though you'll never know what",
    "start": "2101440",
    "end": "2107880"
  },
  {
    "text": "which point the branch occurred there's nothing to in there to say that we branched at a certain point and merge at a certain point all you know there's a",
    "start": "2107880",
    "end": "2114480"
  },
  {
    "text": "spare Branch tag Branch reference hanging around so there is a way around",
    "start": "2114480",
    "end": "2121839"
  },
  {
    "text": "that if you prefer to keep a um a history that contains the Full history",
    "start": "2121839",
    "end": "2128079"
  },
  {
    "text": "even if there was effectively a null operation there you can do put a flag in",
    "start": "2128079",
    "end": "2134359"
  },
  {
    "text": "called No FF you go get merge no FF and that will create a dummy merge commit",
    "start": "2134359",
    "end": "2140040"
  },
  {
    "text": "for for you that contains a p the the pointer to the master at the point of",
    "start": "2140040",
    "end": "2146040"
  },
  {
    "text": "Divergence and the end point of your branch and you can basically recreate that it's a way of storing additional",
    "start": "2146040",
    "end": "2151560"
  },
  {
    "text": "meta data things like um uh bit bucket will do that for you",
    "start": "2151560",
    "end": "2160119"
  },
  {
    "text": "automatically um however not everybody likes that some PE people would like a",
    "start": "2160119",
    "end": "2166000"
  },
  {
    "text": "clean history and I'll show you how you can create a clean history and remove all merges from your history um Some",
    "start": "2166000",
    "end": "2172760"
  },
  {
    "text": "people prefer to have a true history one that um contains all of the merge points",
    "start": "2172760",
    "end": "2178520"
  },
  {
    "text": "along the way now whether or not as a idea is entirely up to you atasan we",
    "start": "2178520",
    "end": "2184640"
  },
  {
    "text": "tend towards the truth we have the open company know motto that's a real motto actually um and we it's even",
    "start": "2184640",
    "end": "2191880"
  },
  {
    "text": "the most swear one um so but we always say you should keep the history do do",
    "start": "2191880",
    "end": "2197920"
  },
  {
    "text": "not um destroy that information always do no fast forward and make sure we have",
    "start": "2197920",
    "end": "2204319"
  },
  {
    "text": "a dummy merge commit that shows that a branch emerg Cur we fur the truth some people for various reasons sometimes um",
    "start": "2204319",
    "end": "2211560"
  },
  {
    "text": "legitimate that prefer that they have a clean history does not show the full or",
    "start": "2211560",
    "end": "2216720"
  },
  {
    "text": "expose the full process of the or the full development process sometimes if you're a contractor working for a third",
    "start": "2216720",
    "end": "2222400"
  },
  {
    "text": "party in the management or a bit ify why is all these branches in here well you doing something wrong then you you",
    "start": "2222400",
    "end": "2228079"
  },
  {
    "text": "prefer a clean clean one but last we prefer a um a true history but that is",
    "start": "2228079",
    "end": "2233160"
  },
  {
    "text": "really uh just a matter of us of our personal uh preferences or our",
    "start": "2233160",
    "end": "2239079"
  },
  {
    "text": "philosophy um now when I talked about merges I said I promised I was going to skip over them SL slightly so there are",
    "start": "2239079",
    "end": "2246920"
  },
  {
    "start": "2242000",
    "end": "2703000"
  },
  {
    "text": "a number of Mer merge strategies when you that merge there are different ways that you can resolve the differences as",
    "start": "2246920",
    "end": "2253760"
  },
  {
    "text": "as you see if there's not really any differences we won't do a merge at all and obviously if we if we say no fast",
    "start": "2253760",
    "end": "2260800"
  },
  {
    "text": "forward it's a no op anyway we're just replacing one piece of history with another um resolve though is when you",
    "start": "2260800",
    "end": "2267520"
  },
  {
    "text": "actually come to do a real um sorry when you come to do a real merge you will want to have some method of resolving",
    "start": "2267520",
    "end": "2274480"
  },
  {
    "text": "the differences now what that method is depends entirely on what you're trying",
    "start": "2274480",
    "end": "2280160"
  },
  {
    "text": "to merge there are different strategies for diff um different needs traditionally the one has been resolved",
    "start": "2280160",
    "end": "2286319"
  },
  {
    "text": "which is the normal merge strategy was used I think believe it was used in subers and other ones which probably didn't work very well um that really",
    "start": "2286319",
    "end": "2293839"
  },
  {
    "text": "just looks at the two end points and goes okay let's see if we can get these together without any conflict and if",
    "start": "2293839",
    "end": "2299280"
  },
  {
    "text": "there's conflict goes ah I can't do anything and will dump out your set of files with a bunch of you know noise in",
    "start": "2299280",
    "end": "2306400"
  },
  {
    "text": "them that you don't have to manual clear up um recursive is slightly different recursive is the one that was introduced",
    "start": "2306400",
    "end": "2312319"
  },
  {
    "text": "with the Linux kernel has been battle tested with the Linux kernel what it does is it uses git's history git knows",
    "start": "2312319",
    "end": "2319440"
  },
  {
    "text": "about branching PO is pointing branching points and merge points so what it can",
    "start": "2319440",
    "end": "2325839"
  },
  {
    "text": "do is walk back down the tree rather than just taking the information it has it can go back down to the point where",
    "start": "2325839",
    "end": "2331560"
  },
  {
    "text": "the Divergence occurred and say ah right this is where",
    "start": "2331560",
    "end": "2336599"
  },
  {
    "text": "they chained so only the changes along here are ones we have to worry about not everything and then we'll walk back up",
    "start": "2336599",
    "end": "2342200"
  },
  {
    "text": "the tree creating any intermediate commit merge points and then up to the",
    "start": "2342200",
    "end": "2348160"
  },
  {
    "text": "end this is quite comp complex in itself and I've chosen to skip over this purely for time and introduce some other",
    "start": "2348160",
    "end": "2353440"
  },
  {
    "text": "interesting thing I'd like to go into it um but if you do want to look into it we do have a bunch of uh uh articles on",
    "start": "2353440",
    "end": "2359319"
  },
  {
    "text": "developer. lan.com about the different merge strategies res recursive is the",
    "start": "2359319",
    "end": "2365000"
  },
  {
    "text": "default and it will work for you 90 9 times out of 100 because it's been battle tested on a Linux kernel if it",
    "start": "2365000",
    "end": "2371000"
  },
  {
    "text": "can't resolve something it's probably a good reason for that another interesting one is remember I told you that um a",
    "start": "2371000",
    "end": "2377440"
  },
  {
    "text": "merge commit can have two parents or maybe even more there are cases where that actually",
    "start": "2377440",
    "end": "2383480"
  },
  {
    "text": "does make sense we actually use it on developer. elan.com so we have this um",
    "start": "2383480",
    "end": "2388800"
  },
  {
    "text": "static uh site generator that we use um so Bally speaking lots of people be",
    "start": "2388800",
    "end": "2394200"
  },
  {
    "text": "working on different articles for developer. lan.com at different times times but generally speaking they're not",
    "start": "2394200",
    "end": "2399240"
  },
  {
    "text": "cooperating they are each operating in their own directory each article exists in its own directory and people are all",
    "start": "2399240",
    "end": "2405960"
  },
  {
    "text": "working on that we also have a staging s server that's where we push up all the",
    "start": "2405960",
    "end": "2411079"
  },
  {
    "text": "CH changes now obviously if I make a change to my article and say push and that pushes up to the my Branch gets",
    "start": "2411079",
    "end": "2418680"
  },
  {
    "text": "pushed up to the development uh Ser the staging Ser server um I'm going to stomp",
    "start": "2418680",
    "end": "2425440"
  },
  {
    "text": "over whatever changes other people have made because I haven't Incorporated them into my Branch I'm working in my own feature Branch my own article Branch",
    "start": "2425440",
    "end": "2432800"
  },
  {
    "text": "meanwhile Tim does the same thing D do commit push our bamboo continuous",
    "start": "2432800",
    "end": "2438960"
  },
  {
    "text": "integration server automatically goes off and pushes that up Stomps over mine if you go to the staging serve you'll only see the last commit not all the",
    "start": "2438960",
    "end": "2446359"
  },
  {
    "text": "articles are currently being worked on but because there are very very little",
    "start": "2446359",
    "end": "2452640"
  },
  {
    "text": "or no overlap between the two these branches or these dozens of branches or the articles might be worked on at any",
    "start": "2452640",
    "end": "2458040"
  },
  {
    "text": "given time we use an octopus merge we say take all of the current unmerged branches that have the word blog in the",
    "start": "2458040",
    "end": "2464960"
  },
  {
    "text": "T title and merge them all together octopus merges if you do have conflict",
    "start": "2464960",
    "end": "2470119"
  },
  {
    "text": "or an absolute nightmare to unravel but if you know that you have a bunch of",
    "start": "2470119",
    "end": "2475680"
  },
  {
    "text": "different code that has no o overlap or different branches have no overlap between them maybe some people are",
    "start": "2475680",
    "end": "2480960"
  },
  {
    "text": "working on different module systems and so on you can pull them in and have a a merge commit which has m mulle parents",
    "start": "2480960",
    "end": "2488200"
  },
  {
    "text": "possibly even dozens um there's one called another merge strategy called hours hours is when I I don't know how",
    "start": "2488200",
    "end": "2496440"
  },
  {
    "text": "many people have done this you do see it occasionally we had it once or twice at the last year not not not often you're working on a new version of your tool",
    "start": "2496440",
    "end": "2504560"
  },
  {
    "text": "your application and you've got version two and now you're working on version three meanwhile you're work you're also",
    "start": "2504560",
    "end": "2510960"
  },
  {
    "text": "doing patches and so on fixes on version two but the version 3 is completely different enti new tool set us using",
    "start": "2510960",
    "end": "2517839"
  },
  {
    "text": "something completely different you've gone from iPhone to an uh Android or your you know you've completely you from",
    "start": "2517839",
    "end": "2524640"
  },
  {
    "text": "G gtk to you know what what whatever pure HTML native whatever the two",
    "start": "2524640",
    "end": "2530720"
  },
  {
    "text": "applications that have no relationship to each other when you go to release version three you want it to become the",
    "start": "2530720",
    "end": "2536280"
  },
  {
    "text": "new Master you want to completely replace and O override the previous history you don't destroy the old",
    "start": "2536280",
    "end": "2542359"
  },
  {
    "text": "history you merely want to say I'm going to merge this in but don't even try and do an actual merge just take the this",
    "start": "2542359",
    "end": "2549480"
  },
  {
    "text": "new branch and pretend it's the it's been merged in but don't actually try and do the merge it's like completing",
    "start": "2549480",
    "end": "2555680"
  },
  {
    "text": "basically overlaying one completely different piece of history on top of another so that's what s does it gives",
    "start": "2555680",
    "end": "2561960"
  },
  {
    "text": "you the ability to say create a merge but pretend that we completely destroyed it now you can do that manually you can",
    "start": "2561960",
    "end": "2568200"
  },
  {
    "text": "literally do delete add your file in all your files in and then do a commit but that's not going to tell you very much",
    "start": "2568200",
    "end": "2573720"
  },
  {
    "text": "what you want is that Branch history that tells you the branches occur branches was merged here because we did",
    "start": "2573720",
    "end": "2579160"
  },
  {
    "text": "a release of version 3 and it's completely superseded version two but we want version two's history to remain",
    "start": "2579160",
    "end": "2585160"
  },
  {
    "text": "around as well you want that merge point to occur as well subt Tre is an interesting one I won't go into it too",
    "start": "2585160",
    "end": "2590480"
  },
  {
    "text": "much here um sub verion had extern externals externs that allow you to pull in other subversion repositories into",
    "start": "2590480",
    "end": "2596920"
  },
  {
    "text": "another repository as as the pendencies sub trees closest onto the G has to that you can take",
    "start": "2596920",
    "end": "2603200"
  },
  {
    "text": "another repository and Pull It in as a as a subd directory of your current um",
    "start": "2603200",
    "end": "2608800"
  },
  {
    "text": "repository um it's handy I use it for instance I've got my very complex emex set up and I want to pull in various",
    "start": "2608800",
    "end": "2615119"
  },
  {
    "text": "modules I want to lock them to certain ver versions so what I do is I actually go to the git repository and say pull in",
    "start": "2615119",
    "end": "2621800"
  },
  {
    "text": "this tag of the closure mode um uh tool",
    "start": "2621800",
    "end": "2627520"
  },
  {
    "text": "and put it into the the lib sub subdirectory the lisp sub subdirectory and then later if I want to I can go do",
    "start": "2627520",
    "end": "2633000"
  },
  {
    "text": "a pull from a different tag and pull that down and so get sub Tre understands that it understands that there is a a",
    "start": "2633000",
    "end": "2639480"
  },
  {
    "text": "one repository May rely on other repositories the other thing though is this is as you can see",
    "start": "2639480",
    "end": "2646520"
  },
  {
    "text": "pluggable that's quite interesting um if you've got some",
    "start": "2646520",
    "end": "2652160"
  },
  {
    "text": "proprietary file format it's binary G doesn't understand it it can't mer merge that it'll just replace one one one with",
    "start": "2652160",
    "end": "2658440"
  },
  {
    "text": "the with the other but what if it's internally it's a tree model say it's one would be MKV files if you know those",
    "start": "2658440",
    "end": "2665480"
  },
  {
    "text": "uh matosas essentially binary XML you can actually merge these together you",
    "start": "2665480",
    "end": "2671640"
  },
  {
    "text": "explode them out you look look at two files explode them out look at the end points merge them together XML you could",
    "start": "2671640",
    "end": "2677880"
  },
  {
    "text": "do that XML if you got two if they all generate XML might look complete uh got complete nonsense when",
    "start": "2677880",
    "end": "2685680"
  },
  {
    "text": "you try and merge them because they all different all everything's in different places you try to merge them as text files but if you know the XML files you",
    "start": "2685680",
    "end": "2691440"
  },
  {
    "text": "blow them out into a Dom look at the end points merge on your the B of change and then dump that back out again so so this",
    "start": "2691440",
    "end": "2697559"
  },
  {
    "text": "is possible if you have some proprietary file format you can plug in your own merge system the other I talk about is uh what",
    "start": "2697559",
    "end": "2704400"
  },
  {
    "start": "2703000",
    "end": "2798000"
  },
  {
    "text": "is a re rebase um again this one of those things",
    "start": "2704400",
    "end": "2709839"
  },
  {
    "text": "everyone sort of looked at and gone oh this is great um we're going to do this and then screw",
    "start": "2709839",
    "end": "2715920"
  },
  {
    "text": "up so re rebase is one of those things",
    "start": "2715920",
    "end": "2721119"
  },
  {
    "text": "one of rebase is one of those things in git where um it's very powerful but should be used very carefully indeed",
    "start": "2721119",
    "end": "2728280"
  },
  {
    "text": "what it will do say you want to actually have fast forward m m sorry have a fast",
    "start": "2728280",
    "end": "2734640"
  },
  {
    "text": "forward merge you you want to keep a clean history it look like it's a a linear line how do you do that well what",
    "start": "2734640",
    "end": "2741160"
  },
  {
    "text": "you you can do you can tell get to rebase to a certain point pretend history didn't occur you replay commits",
    "start": "2741160",
    "end": "2747720"
  },
  {
    "text": "on top of each other now it doesn't merge at each step along the way but this is very very",
    "start": "2747720",
    "end": "2754079"
  },
  {
    "text": "powerful and I'll come to this in a bit because if you're replaying history you can change",
    "start": "2754079",
    "end": "2760960"
  },
  {
    "text": "history and I'll show you how to use that in a in a little bit now I'm actually getting a little bit out of",
    "start": "2760960",
    "end": "2766359"
  },
  {
    "text": "time so I'm going to rush forward a bit quickly here um and introduce you a couple of the Core Concepts of how we",
    "start": "2766359",
    "end": "2772480"
  },
  {
    "text": "can use this to get out of trouble this is really sort of the um you know the",
    "start": "2772480",
    "end": "2778400"
  },
  {
    "text": "payoff at the end now is how do you get out of trouble in G using what we've just learned we've shown you how to get",
    "start": "2778400",
    "end": "2784640"
  },
  {
    "text": "into uh trouble as well by the way this is a this is I think in Australia it's actually the the advertisement TV",
    "start": "2784640",
    "end": "2791000"
  },
  {
    "text": "advertisement for the original um Prince of Persia sands of time so you have played that game you'll",
    "start": "2791000",
    "end": "2797880"
  },
  {
    "text": "understand that so quickly I'm going to show you a couple of ways that we can",
    "start": "2797880",
    "end": "2803119"
  },
  {
    "start": "2798000",
    "end": "2878000"
  },
  {
    "text": "get out of the trouble we've managed to get ourselves into I've shown you how to get in let's show you how to get out",
    "start": "2803119",
    "end": "2808240"
  },
  {
    "text": "okay reset hard we've blown away our um our working tree um we've moved our",
    "start": "2808240",
    "end": "2815800"
  },
  {
    "text": "history oh shouldn't have done that I wanted that commit actually how do I get out of it anyone",
    "start": "2815800",
    "end": "2822359"
  },
  {
    "text": "know nope reflog you have a record of what you just did you can see that we reset them",
    "start": "2822640",
    "end": "2831079"
  },
  {
    "text": "um to one step backwards but we can look at what the previous commit was we can see where where we moved from so we can",
    "start": "2831079",
    "end": "2838319"
  },
  {
    "text": "undo that the way to get out of that we just do a different reset we put our",
    "start": "2838319",
    "end": "2844400"
  },
  {
    "text": "reset back to where it used to be so I want to show that again we did a",
    "start": "2844400",
    "end": "2850960"
  },
  {
    "text": "reset hard here that moved the",
    "start": "2850960",
    "end": "2857000"
  },
  {
    "text": "tree move mooved the Riff and that we have no way of getting unless we know",
    "start": "2857000",
    "end": "2862119"
  },
  {
    "text": "what that magic hashes of that object at the end because it no longer has anything pointing to it we need to find",
    "start": "2862119",
    "end": "2867280"
  },
  {
    "text": "out what the hash was to reset it well that's okay because we have it in the ref log and we just do a reset hard",
    "start": "2867280",
    "end": "2873000"
  },
  {
    "text": "again but we use the hash of the one U of that end object cuz we look it up in the ref log level one is if you done um",
    "start": "2873000",
    "end": "2880920"
  },
  {
    "start": "2878000",
    "end": "2914000"
  },
  {
    "text": "done a re rebase and somehow the rebase has broken the build at what point did",
    "start": "2880920",
    "end": "2888359"
  },
  {
    "text": "the breakage occur somewhere along that replayed history something went wrong",
    "start": "2888359",
    "end": "2893400"
  },
  {
    "text": "what went wrong how do we find out where the breakage occurred well we know how",
    "start": "2893400",
    "end": "2898839"
  },
  {
    "text": "to go back to the previous state we were in the pre- rebase state because we got the ref log so we go to ref log and look",
    "start": "2898839",
    "end": "2906000"
  },
  {
    "text": "at what it was before we did the re re rebase what our Branch name a branch tag",
    "start": "2906000",
    "end": "2912440"
  },
  {
    "text": "was pointing at a branch reference so we look it up and then we push it back to",
    "start": "2912440",
    "end": "2918800"
  },
  {
    "start": "2914000",
    "end": "2971000"
  },
  {
    "text": "the past now we can do a re we can try it again but this time we're going to put",
    "start": "2918800",
    "end": "2925839"
  },
  {
    "text": "something into the command it's going to be called exec because G is replaying",
    "start": "2925839",
    "end": "2932880"
  },
  {
    "text": "history we can actually at each point in the history as we replay it we can do",
    "start": "2932880",
    "end": "2938799"
  },
  {
    "text": "anything we want we can merge um different commits together things like that and that's where you want to rebase",
    "start": "2938799",
    "end": "2944880"
  },
  {
    "text": "interactive but we're not going to go into that here we can also do this we can we can execute any command we want",
    "start": "2944880",
    "end": "2950440"
  },
  {
    "text": "as the rebase is playing so one of the things that very useful to do is run all of our tests",
    "start": "2950440",
    "end": "2956240"
  },
  {
    "text": "after each step of the re rebase if our tests fail the rebase will stop and we can go",
    "start": "2956240",
    "end": "2962720"
  },
  {
    "text": "and examine what's happened so that's it so basically it's a way of looking at each merge point and ensuring that the",
    "start": "2962720",
    "end": "2968920"
  },
  {
    "text": "merge point is um same now there's another one I'm going to show you this is not so much used in healthy projects",
    "start": "2968920",
    "end": "2977720"
  },
  {
    "start": "2971000",
    "end": "3051000"
  },
  {
    "text": "however it is used in the the Linux kernel quite extensively not to say it's not unhealthy but Linux kernel has different constraints it has a handle",
    "start": "2977720",
    "end": "2984640"
  },
  {
    "text": "lots of Hardware in it Hardware may change over time it may take months until a regression is noticed so",
    "start": "2984640",
    "end": "2991680"
  },
  {
    "text": "sometimes you have to go back into history and find out what broke we can't replay a thing or we can because it's",
    "start": "2991680",
    "end": "2998319"
  },
  {
    "text": "git and we can go back look at any point in history so get a sign called BCT bisect",
    "start": "2998319",
    "end": "3004240"
  },
  {
    "text": "gives you the ability to say I know that the current this the current um point",
    "start": "3004240",
    "end": "3010480"
  },
  {
    "text": "we're looking at the head is broken but I know back here at version 1.2 there",
    "start": "3010480",
    "end": "3015640"
  },
  {
    "text": "would that regression didn't occur what happened so we tell git this",
    "start": "3015640",
    "end": "3022119"
  },
  {
    "text": "is the good point and this is the bad point please go off and find me the point between these two",
    "start": "3022119",
    "end": "3029319"
  },
  {
    "text": "commits um and now you can do this manually if you're doing the Linux kernel you you can manually go and check",
    "start": "3029319",
    "end": "3035240"
  },
  {
    "text": "these things you pretty much have to if you're doing Hardware regression testing but in the case of you got automated",
    "start": "3035240",
    "end": "3041240"
  },
  {
    "text": "test Suite which I hope you have you can just run that automated test Suite each step along the way and it will do that",
    "start": "3041240",
    "end": "3047000"
  },
  {
    "text": "automatically for you what it will do it'll go back and find the midpoint and say is this midpoint broken well let's",
    "start": "3047000",
    "end": "3053000"
  },
  {
    "start": "3051000",
    "end": "3083000"
  },
  {
    "text": "run run the test and find out no right in that case the breakage must be somewhere in the future let me find the",
    "start": "3053000",
    "end": "3059400"
  },
  {
    "text": "next midpoint between these two points so it's an automated way of doing this of uh doing regression",
    "start": "3059400",
    "end": "3068520"
  },
  {
    "text": "testing so another way of fixing things now I'm going to run through one thing very very quickly so I officially out of",
    "start": "3068520",
    "end": "3075640"
  },
  {
    "text": "time and J is going to come and Shout at me in a bit introduce that one weird trick",
    "start": "3075640",
    "end": "3082000"
  },
  {
    "text": "powers of invisibility now we know about objects and we know",
    "start": "3082000",
    "end": "3087280"
  },
  {
    "start": "3083000",
    "end": "3123000"
  },
  {
    "text": "about trees we know that objects can have can exist inside G repositories why do they have to be part of a tree why",
    "start": "3087280",
    "end": "3093160"
  },
  {
    "text": "can't they be part of another tree why can it just not exist in",
    "start": "3093160",
    "end": "3098359"
  },
  {
    "text": "themselves you can hide files inside git unless you know its name the file is",
    "start": "3098359",
    "end": "3105000"
  },
  {
    "text": "invisible to you it's not part of any history I'll show you how to do that quickly now this is an example of where",
    "start": "3105000",
    "end": "3111160"
  },
  {
    "text": "if you know how git works you must know that this is possible I didn't know any of the commands here that I knew this",
    "start": "3111160",
    "end": "3117799"
  },
  {
    "text": "must be possible and I went out and found what the commands are because I understood the underlying git model how",
    "start": "3117799",
    "end": "3124079"
  },
  {
    "start": "3123000",
    "end": "3223000"
  },
  {
    "text": "do we do something like that well we know that objects have hashes so",
    "start": "3124079",
    "end": "3132640"
  },
  {
    "text": "there must be an hash object command to look up the hash of a file theoretically so we can take any file that's in in",
    "start": "3132640",
    "end": "3139000"
  },
  {
    "text": "here we've got a hidden file I'm going to create it then destroy it afterwards um get hash object and that will tell me",
    "start": "3139000",
    "end": "3145040"
  },
  {
    "text": "the hash of a g a given object or what it would be if I put it into the U into",
    "start": "3145040",
    "end": "3151400"
  },
  {
    "text": "into the repository now there's also a minus W that says actually do that put",
    "start": "3151400",
    "end": "3156480"
  },
  {
    "text": "it into the repository create an object from this file don't bother it file name",
    "start": "3156480",
    "end": "3161720"
  },
  {
    "text": "or anything like that just put the content of this file into the repository and it's just sitting there floating no",
    "start": "3161720",
    "end": "3168839"
  },
  {
    "text": "not part of any chain of commits no trees no nothing now that's not a great amount of",
    "start": "3168839",
    "end": "3174440"
  },
  {
    "text": "use to you because what's going to happen is obviously in two weeks time GC is going to come along and go Ah that's",
    "start": "3174440",
    "end": "3179720"
  },
  {
    "text": "not being pointed to by anything so it's going to destroy it unless we give it a name in this case",
    "start": "3179720",
    "end": "3187400"
  },
  {
    "text": "a tag it could just be a ref but we're going to use a tag seems Seems appropriate to it so when the hash was",
    "start": "3187400",
    "end": "3193760"
  },
  {
    "text": "created we had a the hash when we now Ed the hash to create a tag called",
    "start": "3193760",
    "end": "3199920"
  },
  {
    "text": "hidden and now we go off and we delete that file and we go back we change back",
    "start": "3199920",
    "end": "3205599"
  },
  {
    "text": "to our um main branch or Master branch that fire that object is floating there it'll",
    "start": "3205599",
    "end": "3211440"
  },
  {
    "text": "never be destroyed and it'll have no record in there Beyond being in the ref log",
    "start": "3211440",
    "end": "3217960"
  },
  {
    "text": "there's no commits associated with it no trees no nothing it is a blob of information hidden in in there how do we",
    "start": "3217960",
    "end": "3224200"
  },
  {
    "start": "3223000",
    "end": "3267000"
  },
  {
    "text": "get that out well we've got the tag if we know the name we know that there must be some way",
    "start": "3224200",
    "end": "3231079"
  },
  {
    "text": "of getting this out there I went oh there must be some way one let's look through the through the manuals there",
    "start": "3231079",
    "end": "3236160"
  },
  {
    "text": "you go we've got cat file cat file will take any reference or hash and it will",
    "start": "3236160",
    "end": "3242920"
  },
  {
    "text": "pull out that information and dump it out onto the screen so let's run that and here we've got what what is the the",
    "start": "3242920",
    "end": "3249240"
  },
  {
    "text": "content of that that's the old Smith family recipe for pen um got an Irish",
    "start": "3249240",
    "end": "3254319"
  },
  {
    "text": "background and some of it is highly suspicious which is why my name is Smith now I've I believe that they're on a",
    "start": "3254319",
    "end": "3261640"
  },
  {
    "text": "lamb from the uh the tax man in Ireland now this seems a little theoretical it's interesting of fun however it is",
    "start": "3261640",
    "end": "3267440"
  },
  {
    "start": "3267000",
    "end": "3350000"
  },
  {
    "text": "actually used um fun story when they were um adding",
    "start": "3267440",
    "end": "3273799"
  },
  {
    "text": "git to supports a bit bucket it kept blowing up and they trying to pull in the git repository the reason was",
    "start": "3273799",
    "end": "3279480"
  },
  {
    "text": "someone had hidden a an object in there and they weren't we had no idea about this what happens inside the git",
    "start": "3279480",
    "end": "3285880"
  },
  {
    "text": "repository itself git's own git repository J junio Who's the maintainer",
    "start": "3285880",
    "end": "3291480"
  },
  {
    "text": "has dumped his pgp key so you can actually verify um the repository against his itself um and verify the",
    "start": "3291480",
    "end": "3298240"
  },
  {
    "text": "history it's just hidden in there and it blew up bit bucket when we were trying to add um git support to it um so that's",
    "start": "3298240",
    "end": "3305240"
  },
  {
    "text": "it so I'm well and truly out of time now um please use the app to rate um and there will be a um uh a speakers Clinic",
    "start": "3305240",
    "end": "3313839"
  },
  {
    "text": "up the other end I haven't I'm not sure TI saw where it is but I'll go and find it if I if I can find it I'm sure you can too but just to recap that is git in",
    "start": "3313839",
    "end": "3322319"
  },
  {
    "text": "its fundamental element objects that are trees that that could be commits that point to each other and you can chain",
    "start": "3322319",
    "end": "3328720"
  },
  {
    "text": "your commits together and that gives you history so now we smart go off and um",
    "start": "3328720",
    "end": "3333960"
  },
  {
    "text": "hack on your G repositories go poke around see what happens and do it on your production one as well that's fine don't worry about that so have fun thank",
    "start": "3333960",
    "end": "3341280"
  },
  {
    "text": "you see you later good",
    "start": "3341280",
    "end": "3345920"
  }
]