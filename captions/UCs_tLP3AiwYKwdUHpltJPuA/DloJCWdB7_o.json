[
  {
    "text": "[Applause] thanks very much I'm here this morning to talk about the idea of evolutionary",
    "start": "7880",
    "end": "15080"
  },
  {
    "text": "software architectures it turns out this is one of those problems that has bugged us for a long time in software",
    "start": "15080",
    "end": "21680"
  },
  {
    "text": "architecture is how do you build systems that you can easily change over time in fact for a long time the colloquial",
    "start": "21680",
    "end": "29039"
  },
  {
    "text": "tongue and cheek def defition of software architecture was the stuff that's hard to change later but then we",
    "start": "29039",
    "end": "35040"
  },
  {
    "text": "started building microservices and similar architectures where the concept of change was built into the",
    "start": "35040",
    "end": "41640"
  },
  {
    "text": "architecture and Rebecca Pat and I realized that that's not unique to microservices this is a characteristic",
    "start": "41640",
    "end": "48719"
  },
  {
    "text": "that you can build into architectures uh and that's exactly what this talk is about is how do you build architectures",
    "start": "48719",
    "end": "54399"
  },
  {
    "text": "that you can gracefully change over time so you've got some sort of problem",
    "start": "54399",
    "end": "60399"
  },
  {
    "text": "and you decided to solve it by writing software so you have requirements of some kind we don't really care how you",
    "start": "60399",
    "end": "66720"
  },
  {
    "text": "got these requirements things we're talking about are essentially orthogonal process but this is not the only thing",
    "start": "66720",
    "end": "72560"
  },
  {
    "text": "you have to think about as an architect you also have to think about all these other things like performance and",
    "start": "72560",
    "end": "79360"
  },
  {
    "text": "scalability maybe legality if you're dealing with medical records or sensitive data or something like that",
    "start": "79360",
    "end": "85159"
  },
  {
    "text": "and in fact this is really the craft of software architectures given this set of requirements and all these other",
    "start": "85159",
    "end": "91159"
  },
  {
    "text": "concerns what is the best design that balances or trades off all these things",
    "start": "91159",
    "end": "96720"
  },
  {
    "text": "to the best of our ability this is why you hear the word trade-off so often associated with software architecture",
    "start": "96720",
    "end": "102240"
  },
  {
    "text": "because almost never can you maximize all these things uh for example if I want to increase security I'll almost",
    "start": "102240",
    "end": "108719"
  },
  {
    "text": "certainly decrease performance because I have to do more on the Fly encryption more indirection for secr Tiding and so",
    "start": "108719",
    "end": "114840"
  },
  {
    "text": "this is really the craft of software architectures given all these characteristics how can I create a",
    "start": "114840",
    "end": "119920"
  },
  {
    "text": "design that balances these things the best possible way the other problem of",
    "start": "119920",
    "end": "125920"
  },
  {
    "text": "course is there are lots of these things we could support this is a partial list from Wikipedia but it'll always be a",
    "start": "125920",
    "end": "132959"
  },
  {
    "text": "partial list because uh my co-author Rebecca talks about a system that she worked on several years ago where the",
    "start": "132959",
    "end": "139599"
  },
  {
    "text": "goal was to build a centralized architecture but every time they produced a design the client said but",
    "start": "139599",
    "end": "146160"
  },
  {
    "text": "what happens if we lose Scotland because it turns out several years ago there had been a freak communication accident",
    "start": "146160",
    "end": "152319"
  },
  {
    "text": "where they' lost communication to their Scottish stores so that became one of their overriding concerns on",
    "start": "152319",
    "end": "157599"
  },
  {
    "text": "architecture is communication to the Scottish stores and so they started referring to this as Scotland ility as a",
    "start": "157599",
    "end": "164200"
  },
  {
    "text": "characteristic of their architecture so what happens if we lose Scotland we have to build that into our architecture so",
    "start": "164200",
    "end": "170000"
  },
  {
    "text": "you'll always be able to invent new things to prioritize and software projects these are of course called the",
    "start": "170000",
    "end": "176920"
  },
  {
    "text": "Iles of software architecture because so many of these in in ility what we're",
    "start": "176920",
    "end": "182879"
  },
  {
    "text": "proposing is to add yet another entry to this list which is this idea of",
    "start": "182879",
    "end": "188480"
  },
  {
    "text": "evolvability but what does that really mean to have an evolvable software architecture well let's say that you've",
    "start": "188480",
    "end": "195080"
  },
  {
    "text": "chosen performance is a really important characteristic in your architecture having an evolvable architecture means",
    "start": "195080",
    "end": "202519"
  },
  {
    "text": "that as your system changes performance doesn't change particularly in a negative way and so in",
    "start": "202519",
    "end": "210040"
  },
  {
    "text": "many ways evolvability is sort of a meta characteristic of architecture because it's wrapping all the other important",
    "start": "210040",
    "end": "216080"
  },
  {
    "text": "characteristics and trying to preserve them over time one of the misconceptions",
    "start": "216080",
    "end": "221319"
  },
  {
    "text": "I think Architects have had too long is that we've been treating architecture like an equation to be solved if we can",
    "start": "221319",
    "end": "227439"
  },
  {
    "text": "ever solve the equation one time we'll be done with it can walk away but it's always this thing that's slipping and",
    "start": "227439",
    "end": "233120"
  },
  {
    "text": "sliding through time and we have to accommodate this idea of time and architecture and so of evolvability is",
    "start": "233120",
    "end": "239519"
  },
  {
    "text": "this idea of once we've identified important architectural characteristics how can we preserve the importance of",
    "start": "239519",
    "end": "246760"
  },
  {
    "text": "those characteristics over time as change occurs but change is interesting for us",
    "start": "246760",
    "end": "253599"
  },
  {
    "text": "because we normally think of change as just one big thing but for us particularly in the architectural world",
    "start": "253599",
    "end": "258880"
  },
  {
    "text": "it's really two different related kinds of things it's business-driven change",
    "start": "258880",
    "end": "263919"
  },
  {
    "text": "and it's technology-driven change so business-driven change are things like changing requirements where you build",
    "start": "263919",
    "end": "270080"
  },
  {
    "text": "requirements based on one set of factors and then the market changes or your business changes and you have to change",
    "start": "270080",
    "end": "275560"
  },
  {
    "text": "requirements or maybe you merge with another company and you have to take on all their workflows and all their business concerns and this is in fact",
    "start": "275560",
    "end": "283000"
  },
  {
    "text": "the thing that we've been focusing on for the past 20 years or so in agile software development is how do we get",
    "start": "283000",
    "end": "288120"
  },
  {
    "text": "better and better at managing this kind of business or domain driven change as it occurs and we're gradually getting",
    "start": "288120",
    "end": "294560"
  },
  {
    "text": "better and better at that over time the kind of change we've been less good at",
    "start": "294560",
    "end": "299919"
  },
  {
    "text": "handling is the technology-driven change the kind of change that happens to us whether we want it to or not and part of",
    "start": "299919",
    "end": "307880"
  },
  {
    "text": "the reason that is so difficult for us is because of the nature of the software development",
    "start": "307880",
    "end": "313960"
  },
  {
    "text": "ecosystem so if you think about all the tools and Frameworks and best practices and approaches and all the things that",
    "start": "313960",
    "end": "321160"
  },
  {
    "text": "we know about building software up until about 10 minutes ago that is the software development ecosystem and",
    "start": "321160",
    "end": "327240"
  },
  {
    "text": "that's basically where we all live and work on a regular basis basis and it's an equilibrium meaning it makes sense and the pieces fit together but it's",
    "start": "327240",
    "end": "334560"
  },
  {
    "text": "also extremely Dynamic we characterize this ecosystem in our book is what we",
    "start": "334560",
    "end": "339680"
  },
  {
    "text": "call a dynamic equilibrium meaning that while it's stable it may fundamentally",
    "start": "339680",
    "end": "344919"
  },
  {
    "text": "shift at any time without telling you a great example of this is when Docker hit",
    "start": "344919",
    "end": "350720"
  },
  {
    "text": "our ecosystem a few years ago once Docker hit our ecosystem it fundamentally changed our ecosystem",
    "start": "350720",
    "end": "357680"
  },
  {
    "text": "forever even if you're not using Docker yet it changes the kinds of decisions",
    "start": "357680",
    "end": "363160"
  },
  {
    "text": "you can now make against that ecosystem because this whole new set of capabilities has appeared all of a",
    "start": "363160",
    "end": "369560"
  },
  {
    "text": "sudden and is part of our world and this constantly happens to us over and over again one of the roles I have as the",
    "start": "369560",
    "end": "376599"
  },
  {
    "text": "conference co-chair for the O'Reilly software architecture conference that does three iterations a year at the end",
    "start": "376599",
    "end": "382400"
  },
  {
    "text": "of every one of those conferences the O'Reilly marketing people come to me and say okay Neil tell us what the next big",
    "start": "382400",
    "end": "387759"
  },
  {
    "text": "thing in architecture is going to be next year and I always tell them I have no idea because the way that's going to",
    "start": "387759",
    "end": "393639"
  },
  {
    "text": "come about is one small change will trigger another small change which will trigger another small change and",
    "start": "393639",
    "end": "399520"
  },
  {
    "text": "fractally it'll shift the entire ecosystem in a direction that we probably never could have anticipated",
    "start": "399520",
    "end": "406280"
  },
  {
    "text": "before but this creates some real challenges because it doesn't take a very astute Observer to realize that",
    "start": "406280",
    "end": "412240"
  },
  {
    "text": "everything changes all the time in our world but this creates some real problems for some roles in architecture",
    "start": "412240",
    "end": "418960"
  },
  {
    "text": "who are mandated with doing long-term strategic planning but how is long-term",
    "start": "418960",
    "end": "424560"
  },
  {
    "text": "planning possible when everything in your world can suddenly change in unexpected ways I've literally been",
    "start": "424560",
    "end": "431599"
  },
  {
    "text": "traveling all over the world for the last year or so I've been talking to many of our clients and many of the Enterprise Architects and our clients",
    "start": "431599",
    "end": "438840"
  },
  {
    "text": "and I've been asking them all the same question and none of them have had a good answer for me so maybe today finally someone in this room has a good",
    "start": "438840",
    "end": "445919"
  },
  {
    "text": "answer for this question which is can you tell me with great certainty exactly",
    "start": "445919",
    "end": "451160"
  },
  {
    "text": "what JavaScript web framework you'll be using two years from now and of course you can't because it probably hasn't",
    "start": "451160",
    "end": "457720"
  },
  {
    "text": "been written yet how is long-term planning possible in a world like that",
    "start": "457720",
    "end": "463800"
  },
  {
    "text": "and of course the answer is it's not but why are we trying to do all that longterm planning well you know change",
    "start": "463800",
    "end": "470120"
  },
  {
    "text": "is really expensive and difficult and if we change if we plan just right we can mitigate the expense and difficulty of",
    "start": "470120",
    "end": "476360"
  },
  {
    "text": "that change but what if you built your arch Ure with the notion of change built in",
    "start": "476360",
    "end": "482039"
  },
  {
    "text": "with the expectation that we're probably going to be using a different JavaScript web framework two years from now and",
    "start": "482039",
    "end": "488960"
  },
  {
    "text": "build that awareness into your architecture now you don't have to build a better and better crystal ball you can",
    "start": "488960",
    "end": "495120"
  },
  {
    "text": "adapt to the change that as it happens because you know it's going to",
    "start": "495120",
    "end": "501080"
  },
  {
    "text": "happen so we definitely set out writing the book with this idea of preserving architectural characteristics over time",
    "start": "501080",
    "end": "508360"
  },
  {
    "text": "but it turns out that that it h heavily overlaps another thing that's common in",
    "start": "508360",
    "end": "513839"
  },
  {
    "text": "architecture so one of the things that we wanted to do in our book which has some pretty abstract ideas in it is make them concrete by giving examples all",
    "start": "513839",
    "end": "521000"
  },
  {
    "text": "three of us work professionally as consultants and so we harvested our",
    "start": "521000",
    "end": "526040"
  },
  {
    "text": "examples for our professional life and created a fake company to cast all these examples against called penultimate",
    "start": "526040",
    "end": "533519"
  },
  {
    "text": "widgets this is sort of a a play on the English word penultimate many people think it means awesome because it has",
    "start": "533519",
    "end": "539880"
  },
  {
    "text": "the word ultimate in it but it actually means next to last so I actually knew a company that was called penultimate",
    "start": "539880",
    "end": "545000"
  },
  {
    "text": "Consulting unfortunately calling themselves next to last Consulting uh which was sort of an odd mixed message",
    "start": "545000",
    "end": "551399"
  },
  {
    "text": "but so that's the name of our fake company in our book but this actually happened to me for one of our clients I",
    "start": "551399",
    "end": "556800"
  },
  {
    "text": "met one of our clients who's in the process of repl platforming their system",
    "start": "556800",
    "end": "561959"
  },
  {
    "text": "and they had a bunch of aspirational goals they had identified for the next version of their platform and there were",
    "start": "561959",
    "end": "567880"
  },
  {
    "text": "66 of them and I remember this so well because they showed them to me in a spreadsheet that had 66 rows in it and I",
    "start": "567880",
    "end": "574760"
  },
  {
    "text": "said you know it's awesome that you delineated all these things you want in the next version of your",
    "start": "574760",
    "end": "580640"
  },
  {
    "text": "architecture but when I show up in six months how many of these things are still going to be true and maybe more",
    "start": "580640",
    "end": "587399"
  },
  {
    "text": "importantly how easily can you tell me how many of these 66 things are still",
    "start": "587399",
    "end": "593839"
  },
  {
    "text": "true this is an example of what's referred to as the second order effect we very much set out toward this idea of",
    "start": "593839",
    "end": "600040"
  },
  {
    "text": "protecting architectural characteristics over time but then realize that many of the techniques we were talking about",
    "start": "600040",
    "end": "605839"
  },
  {
    "text": "heavily overlap with this idea of architectural governance and in particularly the ability to automate a",
    "start": "605839",
    "end": "613320"
  },
  {
    "text": "bunch of these architectural governance techniques and so I'll show you a bunch of examples of that as we go",
    "start": "613320",
    "end": "620320"
  },
  {
    "text": "along so let's talk about definitions of things we actually thought quite a bit",
    "start": "620320",
    "end": "625640"
  },
  {
    "text": "about the name of this technique uh we thought thought about continuous architecture but we realize",
    "start": "625640",
    "end": "631760"
  },
  {
    "text": "the world already has too many continuous things in the agal world and we don't need another one of those uh there's certainly an aspect of",
    "start": "631760",
    "end": "638880"
  },
  {
    "text": "incrementalism in the way we talk about uh evolutionary architecture and I'll give you an example of that toward the",
    "start": "638880",
    "end": "644240"
  },
  {
    "text": "end but that's not all that's here that's just one aspect of it so you'll see that actually made it as part of our definition agal architecture is too",
    "start": "644240",
    "end": "651639"
  },
  {
    "text": "broad and in fact you don't have to be doing agile software development to take advantage of these techniques some of",
    "start": "651639",
    "end": "657200"
  },
  {
    "text": "the engineering practi make it easier but it's not a prerequisite at all probably the closest thing that we",
    "start": "657200",
    "end": "663240"
  },
  {
    "text": "thought about didn't quite make the cut was adaptable architecture but there's a really important distinction to be made",
    "start": "663240",
    "end": "669079"
  },
  {
    "text": "here between adaptability versus Evolution when I say the word adaptable",
    "start": "669079",
    "end": "674680"
  },
  {
    "text": "to a software architect what they Envision is the configuration dialogue in eclipse or Visual Studio this idea",
    "start": "674680",
    "end": "682399"
  },
  {
    "text": "that we've created all these different possible Pathways and we've created switches so you can adapt to one",
    "start": "682399",
    "end": "688519"
  },
  {
    "text": "Behavior versus the other this idea that we're GNA take all the existing system and then keep adding to it by just",
    "start": "688519",
    "end": "695040"
  },
  {
    "text": "adapting and adding new adapters and new proxies and that kind of stuff to it that's not what we're talking about in",
    "start": "695040",
    "end": "701440"
  },
  {
    "text": "fact that's an anti-pattern that we talk about in our book this idea of ultimately adaptable software is a big",
    "start": "701440",
    "end": "708480"
  },
  {
    "text": "giant anti pattern that's not what we're talking about here at all we're talking about fundamental change over time",
    "start": "708480",
    "end": "714839"
  },
  {
    "text": "evolving the behavior of your system uh because the world is changing and you need to change fundamental Behavior not",
    "start": "714839",
    "end": "722600"
  },
  {
    "text": "continue to be backwards compatible for the rest of time so let's talk about our",
    "start": "722600",
    "end": "729200"
  },
  {
    "text": "definition an evolutionary architecture supports a guided incremental change across multiple Dimensions I'll talk",
    "start": "729200",
    "end": "736000"
  },
  {
    "text": "about this definition in three parts first part of which is guided this is comes from Rebecca one of",
    "start": "736000",
    "end": "743560"
  },
  {
    "text": "my co-authors Dr Rebecca Parsons who's the thought workk CTO but she also has a background in evolution",
    "start": "743560",
    "end": "749800"
  },
  {
    "text": "Computing and that's really where the evolutionary part of evolutionary architecture comes from so in The",
    "start": "749800",
    "end": "755160"
  },
  {
    "text": "evolutionary Computing world you create genetic algorithms and there are well-known techniques by which these",
    "start": "755160",
    "end": "760399"
  },
  {
    "text": "genetic algorithms will mutate themselves through generations so it'll produce a result mutate itself in",
    "start": "760399",
    "end": "765920"
  },
  {
    "text": "well-known ways and produce a different result if you're trying to design a genetic algorithm to produce some sort",
    "start": "765920",
    "end": "772279"
  },
  {
    "text": "of beneficial outcome every time it produces a result you'd like to guide it",
    "start": "772279",
    "end": "777560"
  },
  {
    "text": "and tell it are you getting closer to the thing that I'd really like for you to create or way far field and far away",
    "start": "777560",
    "end": "783680"
  },
  {
    "text": "from it the mechanism that's used in that world to make that assessment is called a fitness function so in The",
    "start": "783680",
    "end": "791120"
  },
  {
    "text": "evolutionary Computing World a fitness function is an objective way to measure",
    "start": "791120",
    "end": "796639"
  },
  {
    "text": "is this genetic algorithm producing a better or worse result through this generation of its work so for example a",
    "start": "796639",
    "end": "805000"
  },
  {
    "text": "well-known problem in this world is the traveling salesman problem where I have a Salesman I have a group of cities he",
    "start": "805000",
    "end": "810160"
  },
  {
    "text": "needs to visit let's say that I was designing a genetic algorithm to solve the traveling salesman problem the",
    "start": "810160",
    "end": "816480"
  },
  {
    "text": "fitness function here would be the length of the route because that's the thing I'm trying to optimize as much as possible by designing this algorithm if",
    "start": "816480",
    "end": "824600"
  },
  {
    "text": "I had a more complex problem like a genetic algorithm trying to design something like an airplane wing then my",
    "start": "824600",
    "end": "830920"
  },
  {
    "text": "fitness function will be things like aerodynamic lift and materials cost and all these things that let me determine",
    "start": "830920",
    "end": "837000"
  },
  {
    "text": "is this a better airplane wing to design or not that's this idea of an evolutionary",
    "start": "837000",
    "end": "843560"
  },
  {
    "text": "Computing Fitness function we've borrowed this concept and applied it to architecture to create this idea of an",
    "start": "843560",
    "end": "850720"
  },
  {
    "text": "architectural Fitness function this is any mechanism that provides an objective",
    "start": "850720",
    "end": "856399"
  },
  {
    "text": "Integrity assessment of some architectural characteristic or combination of architectural",
    "start": "856399",
    "end": "862320"
  },
  {
    "text": "characteristics and one of the things that people get caught up in is this is some giant new framework that you can",
    "start": "862320",
    "end": "867399"
  },
  {
    "text": "download somewhere this encompasses a whole lot of existing mechanisms and I'll show you lots of examples of these",
    "start": "867399",
    "end": "873399"
  },
  {
    "text": "things in just a second it's really anything that you can use to verify some characteristic of your architecture this",
    "start": "873399",
    "end": "880639"
  },
  {
    "text": "is the answer to the question I posed earlier rather than capturing all these characteristics in a spreadsheet",
    "start": "880639",
    "end": "886320"
  },
  {
    "text": "somewhere if instead you had captured them as Fitness functions you have not only the definition of those",
    "start": "886320",
    "end": "892519"
  },
  {
    "text": "characteristics but also a way to verify to see if they're still true or not I'll",
    "start": "892519",
    "end": "898320"
  },
  {
    "text": "show you lots of examples of these things in just a second but I want to finish my definition first so that's the",
    "start": "898320",
    "end": "903519"
  },
  {
    "text": "guided part of our definition the incremental part of our definition really has two aspects one is how do you",
    "start": "903519",
    "end": "911079"
  },
  {
    "text": "put things live in an incremental way and I'll actually finish up this talk with uh an example tool that allows you",
    "start": "911079",
    "end": "919240"
  },
  {
    "text": "to do this the other is how do you apply these Fitness functions once you've created them and this is where common",
    "start": "919240",
    "end": "925759"
  },
  {
    "text": "agile engineering practices like continuous integration or continuous deployment come in uh this is a great",
    "start": "925759",
    "end": "932240"
  },
  {
    "text": "way to wire in Fitness functions into continuous integration and continuous deployment to make sure that once you've",
    "start": "932240",
    "end": "938920"
  },
  {
    "text": "established these criteria they get run on a regular basis but that's what we mean by incremental change the last part",
    "start": "938920",
    "end": "945480"
  },
  {
    "text": "of our definition talks about multiple dimensions and this is really just the",
    "start": "945480",
    "end": "950639"
  },
  {
    "text": "pragmatic awareness that you can't really talk about evolving a software",
    "start": "950639",
    "end": "955920"
  },
  {
    "text": "system without talking about all the things that are going to be affected and so you see in our definition here common",
    "start": "955920",
    "end": "962639"
  },
  {
    "text": "kinds of architectural concerns like performance and scalability and legality",
    "start": "962639",
    "end": "967759"
  },
  {
    "text": "but also some things that you might not necessarily expect in something purely about architecture like security there",
    "start": "967759",
    "end": "975000"
  },
  {
    "text": "may be some security aspects of the way you design your architecture or the way you deploy your architecture that you",
    "start": "975000",
    "end": "980720"
  },
  {
    "text": "might have to take into account and build Fitness functions for and you'll also notice here relational database design you",
    "start": "980720",
    "end": "988519"
  },
  {
    "text": "can't have have an evolutionary architecture without also being able to evolve the relational database schema",
    "start": "988519",
    "end": "995399"
  },
  {
    "text": "that's attached to it so we have a chapter called evolutionary database design although the really richest",
    "start": "995399",
    "end": "1000880"
  },
  {
    "text": "resource on that is the book refactoring databases by Scott amler and promote",
    "start": "1000880",
    "end": "1006600"
  },
  {
    "text": "selage uh and in fact if you look at the subtitle of that book The subtitle is",
    "start": "1006600",
    "end": "1012360"
  },
  {
    "text": "evolutionary database design and so it turns out it's a perfect companion book to building evolutionary architectures",
    "start": "1012360",
    "end": "1018560"
  },
  {
    "text": "is the book subtitled evolutionary database design because it turns out those two things definitely go hand in",
    "start": "1018560",
    "end": "1024079"
  },
  {
    "text": "hand so that's what we mean we talk about multiple dimensions and so that now gives me",
    "start": "1024079",
    "end": "1030199"
  },
  {
    "text": "enough to talk about the agenda for the rest of this talk first part of which is the definition of evolutionary",
    "start": "1030199",
    "end": "1036280"
  },
  {
    "text": "architecture which you've just lived through now I'm going to give you a bunch more examples of guided change via",
    "start": "1036280",
    "end": "1041558"
  },
  {
    "text": "Fitness functions and also how this overlaps with this idea of architectural",
    "start": "1041559",
    "end": "1047839"
  },
  {
    "text": "governance so here's our definition again of an architectural Fitness function uh this can be really any",
    "start": "1047840",
    "end": "1054720"
  },
  {
    "text": "mechanism that gives you objective Integrity assessment of some combination or single architectural characteristic",
    "start": "1054720",
    "end": "1061240"
  },
  {
    "text": "and we have a bunch of categories of these things that we've defined um which I'll talk about in a second",
    "start": "1061240",
    "end": "1068559"
  },
  {
    "text": "Fitness functions Encompass a lot of different mechanisms some of which have been around for a long time so I'll show",
    "start": "1068559",
    "end": "1074320"
  },
  {
    "text": "you examples today of using Code level metrics to Define Fitness functions we can use unit test there's actually some",
    "start": "1074320",
    "end": "1080799"
  },
  {
    "text": "unit testing libraries that facilitate this techniques like chaos engineering fit nicely into this idea of Fitness",
    "start": "1080799",
    "end": "1086799"
  },
  {
    "text": "functions also tools like a monitors so all these things can be used to create these ideas of Fitness",
    "start": "1086799",
    "end": "1093520"
  },
  {
    "text": "functions for categories of Fitness functions we've identified an atomic Fitness function just looks at one",
    "start": "1093520",
    "end": "1099080"
  },
  {
    "text": "characteristic of architecture whereas holistic looks at a combination of characteristics some of them are triggered meaning they're run like unit",
    "start": "1099080",
    "end": "1105799"
  },
  {
    "text": "test or triggered by continuous integration or deployment pipeline where some just run continuously in your",
    "start": "1105799",
    "end": "1112280"
  },
  {
    "text": "architecture like monitors with threshold set so for example a lot of monitoring tools will let you set",
    "start": "1112280",
    "end": "1117559"
  },
  {
    "text": "threshold so that if a quest takes too long it's start raising alarm that's a fitness function for us if that's an",
    "start": "1117559",
    "end": "1123760"
  },
  {
    "text": "important architectural characteristic we're looking at we would like for most of these to be as automated as possible",
    "start": "1123760",
    "end": "1129720"
  },
  {
    "text": "just like we'd like most tests to be automated but there's a manual aspect to some of these and in fact very often",
    "start": "1129720",
    "end": "1135000"
  },
  {
    "text": "there's a combination of automated manual I'll show you an example one of those and just second one important characteristic of",
    "start": "1135000",
    "end": "1142240"
  },
  {
    "text": "our definition is that it has an objective outcome but it doesn't have to have a",
    "start": "1142240",
    "end": "1147679"
  },
  {
    "text": "static outcome like a pass fail for a unit test it could be dynamic for example if I'm operating a high scale I",
    "start": "1147679",
    "end": "1155240"
  },
  {
    "text": "might be okay with a lower performance number but I want that within a certain threshold I don't want it to fall off a",
    "start": "1155240",
    "end": "1160799"
  },
  {
    "text": "cliff and so I may set up thresholds to say well if scale is at this level I'm okay with performance being lower but",
    "start": "1160799",
    "end": "1167520"
  },
  {
    "text": "within the same the same boundary so it's still objective but it may be dynamic based on context some of these",
    "start": "1167520",
    "end": "1174080"
  },
  {
    "text": "may be time-based Fitness functions to as reminders for important things one",
    "start": "1174080",
    "end": "1179400"
  },
  {
    "text": "question we get is are there any such thing as domain specific Fitness functions and you'll notice here there's a heavy overlap between this idea of",
    "start": "1179400",
    "end": "1187400"
  },
  {
    "text": "Fitness functions and the kind of traditional you unit functional and user",
    "start": "1187400",
    "end": "1192760"
  },
  {
    "text": "acceptance testing that we see in the agile uh development world and there's a",
    "start": "1192760",
    "end": "1198360"
  },
  {
    "text": "really good way to determine which is which here because there is a distinction between",
    "start": "1198360",
    "end": "1204200"
  },
  {
    "text": "these architecture of Fitness functions are designed to check architectural characteristics and so a good example of",
    "start": "1204200",
    "end": "1211120"
  },
  {
    "text": "this is elasticity of users so when a a burst of users comes in I want to spin",
    "start": "1211120",
    "end": "1217880"
  },
  {
    "text": "up more instances of my services to meet that elastic request and then spin them back down when that bursty request goes",
    "start": "1217880",
    "end": "1224640"
  },
  {
    "text": "back down that's commonly called elasticity in architecture so is that a fitness function or is it a unit or",
    "start": "1224640",
    "end": "1231120"
  },
  {
    "text": "functional test if I can describe the problem with no knowledge of the problem domain then it's an architectural",
    "start": "1231120",
    "end": "1237640"
  },
  {
    "text": "characteristic so for example elasticity I don't care if they're catalog users or insurance applications users or",
    "start": "1237640",
    "end": "1244120"
  },
  {
    "text": "streaming video users it's just a last issue of users so that's a fitness function if I have to know anything",
    "start": "1244120",
    "end": "1250480"
  },
  {
    "text": "about the problem domain then it's a traditional unit functional or user acceptance test and so that's the",
    "start": "1250480",
    "end": "1256000"
  },
  {
    "text": "delineation if it's purely about an architectural characteristic and I can state it purely in architectural terms",
    "start": "1256000",
    "end": "1262000"
  },
  {
    "text": "without knowledge of the domain then it's a fitness function not one of these traditional tests so let's look at some",
    "start": "1262000",
    "end": "1268280"
  },
  {
    "text": "examples of these this is probably still a bit abstract so let's make this a little more concrete and show you some",
    "start": "1268280",
    "end": "1273520"
  },
  {
    "text": "examples of these guys the first example I'll look at uh is a triggered Atomic a",
    "start": "1273520",
    "end": "1279440"
  },
  {
    "text": "couple several triggered Atomic Fitness functions Atomic meaning it looks at one characteristic of architecture and",
    "start": "1279440",
    "end": "1284720"
  },
  {
    "text": "triggered means it's run like a unit test and here's a good example example of one so let's say you're an",
    "start": "1284720",
    "end": "1290559"
  },
  {
    "text": "architect and you're building a component based system of some kind one of the things you want to try to avoid",
    "start": "1290559",
    "end": "1296960"
  },
  {
    "text": "in component based systems are cyclic dependencies between your components where one component talks to another",
    "start": "1296960",
    "end": "1302640"
  },
  {
    "text": "component which talks to a third one which talks back to the original one and this is a problem in platforms that have",
    "start": "1302640",
    "end": "1309960"
  },
  {
    "text": "really powerful idees because you're coding along in eclipse or visual studio and you",
    "start": "1309960",
    "end": "1315600"
  },
  {
    "text": "reference some class that you've never referenced before what does the IDE do for",
    "start": "1315600",
    "end": "1320840"
  },
  {
    "text": "you pops up a dialogue says you want me to autoimport that for you and you swat that dialogue away so fast now you never",
    "start": "1320840",
    "end": "1327559"
  },
  {
    "text": "even see it anymore it's like a reflex action like a sneeze when you see that dialogue if I came over five minutes",
    "start": "1327559",
    "end": "1334039"
  },
  {
    "text": "later and said did you just autoimport something you no no no I haven't autoimport anything for hours I swear I wouldn't just autoimport something like",
    "start": "1334039",
    "end": "1340080"
  },
  {
    "text": "that because it's just a reflex but what it creates or tangles in your code base and this creates a headache for",
    "start": "1340080",
    "end": "1345520"
  },
  {
    "text": "Architects because it now makes it harder to reuse any one of those because now they're all connected to one another",
    "start": "1345520",
    "end": "1351720"
  },
  {
    "text": "so as an architect you can wire this Fitness function into your code base this is using actually a very old",
    "start": "1351720",
    "end": "1358000"
  },
  {
    "text": "metrics tool in the Java world called J depend but it's a wear of package structure and you can write a test that",
    "start": "1358000",
    "end": "1364400"
  },
  {
    "text": "says basically tell me if I have any Cycles in my codebase or not and if I do fail this test you can write a similar",
    "start": "1364400",
    "end": "1370880"
  },
  {
    "text": "test in the net World using a tool called independ which is a commercial tool but does the same kind of analysis at the p",
    "start": "1370880",
    "end": "1378520"
  },
  {
    "text": "package or structure level here's another good example let's say that you have a persistence package",
    "start": "1378520",
    "end": "1385799"
  },
  {
    "text": "or name space a web and a util one and it's okay for persistence and web to",
    "start": "1385799",
    "end": "1391360"
  },
  {
    "text": "import util but I never want util to import",
    "start": "1391360",
    "end": "1397480"
  },
  {
    "text": "web as an architect you're can to write a rule that basically defines the semantics of how you want your packages",
    "start": "1397760",
    "end": "1404440"
  },
  {
    "text": "and name spaces to talk to one another once you put this in place if a developer accidentally creates this",
    "start": "1404440",
    "end": "1411240"
  },
  {
    "text": "connection that breaks the semantics and try to check this in it'll fail this unit test and it prevents this bad thing",
    "start": "1411240",
    "end": "1417880"
  },
  {
    "text": "this bad structural Decay from ever entering into your code base so here are",
    "start": "1417880",
    "end": "1422960"
  },
  {
    "text": "two examples of very low level metrics-based Fitness function let's look at one at a higher level of",
    "start": "1422960",
    "end": "1428720"
  },
  {
    "text": "abstraction it's still Atomic meaning it's looking at one thing in architecture and still",
    "start": "1428720",
    "end": "1434720"
  },
  {
    "text": "triggered but the example here is this idea of consumer-driven contracts which is a very popular common practice in",
    "start": "1434720",
    "end": "1442080"
  },
  {
    "text": "architectures like microservices where I have essentially autonomous teams making changes in any way they want to but very",
    "start": "1442080",
    "end": "1449039"
  },
  {
    "text": "often they need to pass information back and forth so the problem I'm trying to protect here is how do I preserve the",
    "start": "1449039",
    "end": "1455240"
  },
  {
    "text": "Integrity of the integration points because if these teams are basically changing in any way they want how do I",
    "start": "1455240",
    "end": "1460760"
  },
  {
    "text": "make sure they don't break how they're integrated with one another the common practice in this world is this idea of",
    "start": "1460760",
    "end": "1466320"
  },
  {
    "text": "consumer-driven contracts so the scenario here is the team on the left is the service provider to all three teams",
    "start": "1466320",
    "end": "1473039"
  },
  {
    "text": "on the right with probably some overlapping bits of information the idea of consumer-driven contracts is each of",
    "start": "1473039",
    "end": "1478760"
  },
  {
    "text": "the teams on the right is going to put together a set of tests and hand to the team on the left and the team on the",
    "start": "1478760",
    "end": "1485000"
  },
  {
    "text": "left promises excuse me I will keep those tests green always and so now it doesn't",
    "start": "1485000",
    "end": "1492000"
  },
  {
    "text": "really matter if these guys change as long as it doesn't break these contracts and everything's okay so if my vetor",
    "start": "1492000",
    "end": "1498039"
  },
  {
    "text": "Chang es and doesn't break anything and nothing's harmed if it does break one of these integration tests and that becomes",
    "start": "1498039",
    "end": "1504360"
  },
  {
    "text": "a placeholder for conversation let's get these teams together again and reestablish this contract so that we can",
    "start": "1504360",
    "end": "1510520"
  },
  {
    "text": "continue basically working without having to think about each other all the time we just get notified when something",
    "start": "1510520",
    "end": "1516120"
  },
  {
    "text": "interesting breaks so those are all examples of triggered Atomic Fitness functions let's",
    "start": "1516120",
    "end": "1522600"
  },
  {
    "text": "look at a triggered holistic Fitness function this is one that looks at more than one architectural characteristic so",
    "start": "1522600",
    "end": "1528559"
  },
  {
    "text": "let's say that you're trying to achieve scale and one of the ways you're doing that is by using caching which allows",
    "start": "1528559",
    "end": "1535039"
  },
  {
    "text": "you to achieve the scalability levels you want and you have Atomic Fitness function that verifies that you can get to a certain level of",
    "start": "1535039",
    "end": "1542840"
  },
  {
    "text": "scale let's say it's a medical system and so you have another Security based",
    "start": "1543279",
    "end": "1548600"
  },
  {
    "text": "Fitness function that looks for staleness of data and how long data remains on the screen and when run and",
    "start": "1548600",
    "end": "1553880"
  },
  {
    "text": "isolation it works okay but when you turn on caching that means that the data stays too long on the screen it starts",
    "start": "1553880",
    "end": "1559880"
  },
  {
    "text": "failing the staleness and so this is the idea of a listic fitness function is one that looks at some combination because",
    "start": "1559880",
    "end": "1566840"
  },
  {
    "text": "very often these architectural characteristics interact with one another and sometimes you want to test that interaction to make sure that they",
    "start": "1566840",
    "end": "1572840"
  },
  {
    "text": "still work the way that you think they do atomic continuous Fitness functions",
    "start": "1572840",
    "end": "1579880"
  },
  {
    "text": "are check one characteristic of architecture but they run continuously all the time and so this is the realm of",
    "start": "1579880",
    "end": "1586159"
  },
  {
    "text": "tools like monitors uh and other devop Centric tools for example nagios is a",
    "start": "1586159",
    "end": "1591399"
  },
  {
    "text": "great example of a monitoring tool where you can set up thresholds a common practice in architectures like",
    "start": "1591399",
    "end": "1596760"
  },
  {
    "text": "microservices is to set up things like synthetic transactions to test performance in production",
    "start": "1596760",
    "end": "1604440"
  },
  {
    "text": "systems excuse me so for example let's say that I was curious about performance",
    "start": "1604440",
    "end": "1609919"
  },
  {
    "text": "of how long transactions take in my production system the idea of a synthetic transaction is let's put let's",
    "start": "1609919",
    "end": "1616279"
  },
  {
    "text": "insert a transaction into our production system with a correlation ID tagged onto it so we can trace and find out all the",
    "start": "1616279",
    "end": "1623200"
  },
  {
    "text": "instances that it goes to you can also set up monitors to do things like well if it takes too long uh then start",
    "start": "1623200",
    "end": "1629760"
  },
  {
    "text": "raising an alarm that's an example of a fitness function uh wired into uh",
    "start": "1629760",
    "end": "1634840"
  },
  {
    "text": "something like a monitor that just runs continuously and looking at some characteristic like that in your",
    "start": "1634840",
    "end": "1641640"
  },
  {
    "text": "architecture the last of these categorized examples like this are holistic continuous Fitness functions",
    "start": "1641640",
    "end": "1647360"
  },
  {
    "text": "they run all the time time they look at multiple characteristics from your architecture and the best example we",
    "start": "1647360",
    "end": "1652399"
  },
  {
    "text": "have of one of these that's already commonly in use out in the world is Netflix is chaos",
    "start": "1652399",
    "end": "1657919"
  },
  {
    "text": "monkey and the eventual creation of the entire Simeon Army from Netflix I'm sure",
    "start": "1657919",
    "end": "1664440"
  },
  {
    "text": "you're all familiar with this mechanism when Netflix moved all their infrastructure to AWS they worried about",
    "start": "1664440",
    "end": "1670240"
  },
  {
    "text": "common problems that AWS introduces like high latency and availability and a",
    "start": "1670240",
    "end": "1675880"
  },
  {
    "text": "bunch of other things so they created the SIM Army to stress test all these different things that can break so that",
    "start": "1675880",
    "end": "1681720"
  },
  {
    "text": "they knew their architecture would be resilient to it there are a couple that I'm particularly interested in though",
    "start": "1681720",
    "end": "1687279"
  },
  {
    "text": "from our standpoint of this idea of Fitness functions uh in fact this guy will show up a little bit later the",
    "start": "1687279",
    "end": "1693679"
  },
  {
    "text": "janitor monkey this guy with a broom uh the janitor monkey is responsible for cleaning up resources that no one's",
    "start": "1693679",
    "end": "1701000"
  },
  {
    "text": "using anymore and he'll make an appearance again late in my talk but the two that are really pertinent to us are",
    "start": "1701000",
    "end": "1707480"
  },
  {
    "text": "the conformity monkey and the subass of the Conformity monkey the security",
    "start": "1707480",
    "end": "1712760"
  },
  {
    "text": "monkey what the Conformity monkey does The Architects at Netflix have defined a bunch of governance rules that they want",
    "start": "1712760",
    "end": "1719360"
  },
  {
    "text": "to be enforced at the architectural level one of those is that every service at Netflix responds correctly to all the",
    "start": "1719360",
    "end": "1726360"
  },
  {
    "text": "restful verbs and so one of the things a Conformity monkey does when a new service shows up and it actually does this continuously is test to make sure",
    "start": "1726360",
    "end": "1733360"
  },
  {
    "text": "it responds correctly to all these restful verbs if it doesn't it kicks it out of production",
    "start": "1733360",
    "end": "1738760"
  },
  {
    "text": "now many of you are architects who have systems that have restful verbs in them",
    "start": "1738760",
    "end": "1744799"
  },
  {
    "text": "can you guarantee me right now that all of your restful endpoints are configured exactly correctly in your",
    "start": "1744799",
    "end": "1751760"
  },
  {
    "text": "architecture you can't can you but you'd like to be able to wouldn't you at",
    "start": "1751760",
    "end": "1757840"
  },
  {
    "text": "Netflix they can because they have a mechanism that checks to make sure all these things are true the same is true",
    "start": "1757840",
    "end": "1763799"
  },
  {
    "text": "with the security monkey the security monkey constantly checks all these services to make sure they're not don't",
    "start": "1763799",
    "end": "1770840"
  },
  {
    "text": "have ports open they're not supposed to have open that they are vulnerable to things like SQL injection and all these",
    "start": "1770840",
    "end": "1776600"
  },
  {
    "text": "possible things that can happen because not because the developer is malicious just because details fall through the",
    "start": "1776600",
    "end": "1783279"
  },
  {
    "text": "cracks unless you automate them and this is the way we've automated that governance around really important",
    "start": "1783279",
    "end": "1790200"
  },
  {
    "text": "things like security and Conformity within the",
    "start": "1790200",
    "end": "1795440"
  },
  {
    "text": "architecture so we also have this concept of a systemwide Fitness function which is the aggregation of all these",
    "start": "1795440",
    "end": "1801279"
  },
  {
    "text": "Fitness functions together it's not like one big giant unit test you can run and get a green or red bar but we're",
    "start": "1801279",
    "end": "1808000"
  },
  {
    "text": "starting to think that we can Define architecture with a lot fewer words and a lot more",
    "start": "1808000",
    "end": "1815679"
  },
  {
    "text": "tests and fitness functions because a fitness function gives you not only the definition but a way to verify that",
    "start": "1815679",
    "end": "1822360"
  },
  {
    "text": "definition at the same time and that of course leads nicely into this overlap",
    "start": "1822360",
    "end": "1827559"
  },
  {
    "text": "area of automating governance and protecting architectural characteristics uh through governance one of the things",
    "start": "1827559",
    "end": "1834440"
  },
  {
    "text": "that we're trying to encourage in our book is to get Architects away from",
    "start": "1834440",
    "end": "1840039"
  },
  {
    "text": "vague meaningless terms like this Architects come down out of the Ivory Tower and they tell the developers we",
    "start": "1840039",
    "end": "1847039"
  },
  {
    "text": "want a maintainable code base and then they drop the Whiteboard marker and walk out of the room all the developers look",
    "start": "1847039",
    "end": "1852320"
  },
  {
    "text": "at each other and go what does that mean because there's nothing testable here",
    "start": "1852320",
    "end": "1857399"
  },
  {
    "text": "you could have a robust debate over drinks as to what does it take to create a maintainable code base but if you",
    "start": "1857399",
    "end": "1863519"
  },
  {
    "text": "drill one level deeper into this and start thinking about what are the objective",
    "start": "1863519",
    "end": "1868919"
  },
  {
    "text": "measures of a maintainable code base you can start thinking about things that are actually objectively testable let's",
    "start": "1868919",
    "end": "1876000"
  },
  {
    "text": "control the complexity of the functions or methods within our code base uh let's control naming conventions throughout",
    "start": "1876000",
    "end": "1881840"
  },
  {
    "text": "our code base let's control in af and eant coupling there are lots of tools we",
    "start": "1881840",
    "end": "1887159"
  },
  {
    "text": "can write around that things like pel's law about how we extend things these are all",
    "start": "1887159",
    "end": "1892679"
  },
  {
    "text": "testable characteristics of code bases so let me give you an example of a fitness function and this actually",
    "start": "1892679",
    "end": "1898559"
  },
  {
    "text": "happened years ago long before we used the term Fitness function but that's exactly what we would describe this as",
    "start": "1898559",
    "end": "1904279"
  },
  {
    "text": "now so I was working with a company that hired a lot of very Junior developers and they were concerned about code",
    "start": "1904279",
    "end": "1910000"
  },
  {
    "text": "quality for these Junior developers this one Junior developer had been given this task to uh there was a Java server side",
    "start": "1910000",
    "end": "1917399"
  },
  {
    "text": "component and a JavaScript browser component this is for an insurance company in the US",
    "start": "1917399",
    "end": "1923519"
  },
  {
    "text": "and this developer was given a task that did something for all 50 states and being a junior inexperienced developer",
    "start": "1923519",
    "end": "1929720"
  },
  {
    "text": "they ended up writing a method in Java that was essentially a state equals Alabama than do something for Alabama",
    "start": "1929720",
    "end": "1935399"
  },
  {
    "text": "else of State Eagles Georgia for all 50 states with this long one big horrible",
    "start": "1935399",
    "end": "1940679"
  },
  {
    "text": "method when they tried to check this code in The Architects had put a fitness function in place to look for overly",
    "start": "1940679",
    "end": "1947919"
  },
  {
    "text": "complex method and they had a threshold set at 50 and I'll tell you exactly how they arrived at 50 for that threshold",
    "start": "1947919",
    "end": "1955120"
  },
  {
    "text": "there used to be a metrics tool in the Java world called crap for J that would try to determine how crappy your Java",
    "start": "1955120",
    "end": "1961720"
  },
  {
    "text": "code was by looking at a combination of code coverage and cyclomatic complexity",
    "start": "1961720",
    "end": "1966880"
  },
  {
    "text": "and if your cyclomatic complexity ever made it to 50 no amount of code coverage would make your code not crappy in the",
    "start": "1966880",
    "end": "1973000"
  },
  {
    "text": "opinion of this tool so that's the threshold they set for the sanity threshold for nothing Beyond this and so",
    "start": "1973000",
    "end": "1979559"
  },
  {
    "text": "this developer tried to check it in it failed my friend Glenn vanderberg has a",
    "start": "1979559",
    "end": "1984760"
  },
  {
    "text": "great quote that bad developers will move Heaven and Earth to do the wrong thing that the amount of Ingenuity that",
    "start": "1984760",
    "end": "1991960"
  },
  {
    "text": "terrible developers would put into creating train wck if they take half that Ingenuity and apply it to solving real problems the world be a better",
    "start": "1991960",
    "end": "1998240"
  },
  {
    "text": "place but that just doesn't happen and so this being a bad developer thought huh won't let me check this code in how",
    "start": "1998240",
    "end": "2005360"
  },
  {
    "text": "can I solve oh I know how to solve this problem I'll just write code in JavaScript instead on the front end",
    "start": "2005360",
    "end": "2010720"
  },
  {
    "text": "bypass that annoying thing that's yelling at me on the back end so that's what they did they rewrote this thing in JavaScript but the Architects outsmarted",
    "start": "2010720",
    "end": "2017440"
  },
  {
    "text": "them because they had a fitness function cycl complexity check on the JavaScript code to and so now this junior developer",
    "start": "2017440",
    "end": "2024120"
  },
  {
    "text": "in great frustration went to the architect said look this stupid codebase won't let me check anything in and",
    "start": "2024120",
    "end": "2029279"
  },
  {
    "text": "that's the day they learned about the strategy design pattern and that you shouldn't write giant huge methods like",
    "start": "2029279",
    "end": "2035039"
  },
  {
    "text": "that in a code base we're not trying to create an architecture police state here",
    "start": "2035039",
    "end": "2040480"
  },
  {
    "text": "where Architects have created all these interlocking conflicting Fitness functions that don't allow anybody to",
    "start": "2040480",
    "end": "2045760"
  },
  {
    "text": "check things in but what we are trying to do is automate at least a baseline of",
    "start": "2045760",
    "end": "2052520"
  },
  {
    "text": "Sanity as Architects what's the most complex code in your code base right now",
    "start": "2052520",
    "end": "2058960"
  },
  {
    "text": "you don't really know do you you don't have a lot of control over that what this allows you to do is a technique",
    "start": "2058960",
    "end": "2066040"
  },
  {
    "text": "that we refer to as hurting governance so let's say a group of Enterprise Architects you get together and you say",
    "start": "2066040",
    "end": "2071599"
  },
  {
    "text": "okay we're going to start tackling complexity and you put this Fitness function in place for 50 uh nothing",
    "start": "2071599",
    "end": "2077800"
  },
  {
    "text": "higher than 50 on every project and out of 100 projects 23 of them fail",
    "start": "2077800",
    "end": "2083679"
  },
  {
    "text": "it now though this is an opportunity of what we call hurting governance so",
    "start": "2083679",
    "end": "2089079"
  },
  {
    "text": "instead of a hard error turn that into a warning and tell those teams look we're",
    "start": "2089079",
    "end": "2094240"
  },
  {
    "text": "going to give you some time to clean this up before we turn it back into a hard error so 3 months or 6 months or",
    "start": "2094240",
    "end": "2100640"
  },
  {
    "text": "heat death of the universe minus 10 years or some number we can give you to clean all this stuff up this finally",
    "start": "2100640",
    "end": "2107440"
  },
  {
    "text": "gives you a good answer to a question that you often get because you go to a project manager and say through no one's",
    "start": "2107440",
    "end": "2114560"
  },
  {
    "text": "fault technical debt has acred in this code base and we need time to clean it up and your project manager says well 6",
    "start": "2114560",
    "end": "2122800"
  },
  {
    "text": "months ago you came to me and said you needed time to clean up technical debt now you're back had in hand again asking",
    "start": "2122800",
    "end": "2128359"
  },
  {
    "text": "me for more time how do I know you're not going to be back in six months asking for even more time and how do I",
    "start": "2128359",
    "end": "2133960"
  },
  {
    "text": "know you're not just playing with shiny things and not actually cleaning stuff up like you say you are this gives you",
    "start": "2133960",
    "end": "2139760"
  },
  {
    "text": "evidence of progress because if you turn this Fitness function on and 23 projects",
    "start": "2139760",
    "end": "2144800"
  },
  {
    "text": "fail it and then six months later only five fail it you can point to that and say look we have demonstrable progress",
    "start": "2144800",
    "end": "2151680"
  },
  {
    "text": "and we'll never have to slay that Dragon again because we're going to leave that",
    "start": "2151680",
    "end": "2157359"
  },
  {
    "text": "Fitness this function in place and so this kind of swell of technical dead and then beat it down and then swell now",
    "start": "2157359",
    "end": "2164319"
  },
  {
    "text": "we're going to put a cap on it forever around that dimension of our code base and the next time we tackle something",
    "start": "2164319",
    "end": "2169640"
  },
  {
    "text": "we'll tackle a different aspect and build a fitness function around that and gradually clean things up and then not",
    "start": "2169640",
    "end": "2175079"
  },
  {
    "text": "let them get out of control again there's some really great tools that allow you to do this sort of stuff",
    "start": "2175079",
    "end": "2180560"
  },
  {
    "text": "there's a great tool in the Java space called Arc unit which is inspired by junit this will let you handle some",
    "start": "2180560",
    "end": "2187079"
  },
  {
    "text": "common headaches in the architecture space like lazy developers who throw generic exceptions now you can tell them they",
    "start": "2187079",
    "end": "2194520"
  },
  {
    "text": "can't anymore because this prevents them from throwing generic exceptions what about the case where you've as an",
    "start": "2194520",
    "end": "2200760"
  },
  {
    "text": "organization decided to use a third-party Lo logging package whats to prevent them from using the built-in",
    "start": "2200760",
    "end": "2207599"
  },
  {
    "text": "Java logging this is what prevents them from using the built-in Java logging you",
    "start": "2207599",
    "end": "2213000"
  },
  {
    "text": "put a fitness function in place that prevents them from using the built-in stuff and forces them to use the uh the",
    "start": "2213000",
    "end": "2218720"
  },
  {
    "text": "standardized stuff here's naming conventions uh for example no interfaces should have names",
    "start": "2218720",
    "end": "2225599"
  },
  {
    "text": "ending with the word interface which is a common annoyance for Architects so you can control things like name and",
    "start": "2225599",
    "end": "2230800"
  },
  {
    "text": "conventions but here's a deeper example let's say that you design a layered architecture like this with a",
    "start": "2230800",
    "end": "2237720"
  },
  {
    "text": "presentation layer and a business layer and a data layer as an architect you design those layers for good",
    "start": "2237720",
    "end": "2243760"
  },
  {
    "text": "reason but when you hand this over to developers to implement how can you make sure that they're not going to cheat for",
    "start": "2243760",
    "end": "2249839"
  },
  {
    "text": "example maybe the reporting team decides ah it's taking too long to make requests do all those layers I'm going to go",
    "start": "2249839",
    "end": "2255880"
  },
  {
    "text": "directly from the presentation layer right to the database that's a disaster architecturally because it invalidates",
    "start": "2255880",
    "end": "2262200"
  },
  {
    "text": "the reason of creating all those layers here's a test oops I one too far",
    "start": "2262200",
    "end": "2269440"
  },
  {
    "text": "let me go back look at this middle test no classes that reside in a package",
    "start": "2269440",
    "end": "2275000"
  },
  {
    "text": "service should access classes that reside in pack package controller this implements that",
    "start": "2275000",
    "end": "2281280"
  },
  {
    "text": "governance Rule now many of you as Architects have written almost exactly",
    "start": "2281280",
    "end": "2286720"
  },
  {
    "text": "that same English sentence in a Wiki or some terrible SharePoint portal",
    "start": "2286720",
    "end": "2292079"
  },
  {
    "text": "somewhere and it was right once read Never by another human",
    "start": "2292079",
    "end": "2297720"
  },
  {
    "text": "being you wrote it there for good reason because this is a principle that we want to implement in our architecture but",
    "start": "2297720",
    "end": "2304880"
  },
  {
    "text": "it's just too hard to remember all these principles as the developers when you write them somewhere in an architecture",
    "start": "2304880",
    "end": "2311680"
  },
  {
    "text": "decision record or a Wiki or somewhere there's no teeth if you write them as",
    "start": "2311680",
    "end": "2317400"
  },
  {
    "text": "tests and wire them into the build then developers can't ignore these things anymore because you codified not only my",
    "start": "2317400",
    "end": "2324839"
  },
  {
    "text": "intent but also the verification of that intent at the same time here's an",
    "start": "2324839",
    "end": "2330520"
  },
  {
    "text": "example of a uh Arc unit building a custom rule that says I can't call this",
    "start": "2330520",
    "end": "2336200"
  },
  {
    "text": "library or this particular class except through a rapper class you can build all kinds of elaborate governance rules here",
    "start": "2336200",
    "end": "2342119"
  },
  {
    "text": "so sometimes this is finding really slick tools like Arch unit but sometimes this is just figuring out ways to wire",
    "start": "2342119",
    "end": "2349280"
  },
  {
    "text": "things together in useful ways and here's a good example I was doing some Consulting work with this financial",
    "start": "2349280",
    "end": "2355400"
  },
  {
    "text": "services company just outside Manhattan and they were using several open- Source libraries and Frameworks and one of the",
    "start": "2355400",
    "end": "2361960"
  },
  {
    "text": "lawyers got worried about viral licenses in open source Frameworks and libraries",
    "start": "2361960",
    "end": "2367200"
  },
  {
    "text": "that if you adopt that license it forces you to adopt a too liberal license and so we chase down all the licenses for",
    "start": "2367200",
    "end": "2373760"
  },
  {
    "text": "all those things and let the lawyers look at to make sure they're okay then one of the lawyers asked a really",
    "start": "2373760",
    "end": "2378920"
  },
  {
    "text": "awkward question what happens if one of these libraries updates their license terms as",
    "start": "2378920",
    "end": "2385400"
  },
  {
    "text": "part of a software update and being a good lawyer he had in his back pocket a case where this had",
    "start": "2385400",
    "end": "2392000"
  },
  {
    "text": "happened in the past the QT user interface Library did a fundamental change to their license during a minor",
    "start": "2392000",
    "end": "2398040"
  },
  {
    "text": "software update and so okay now this is something we have to check for so here's the mechanism we wired up",
    "start": "2398040",
    "end": "2405800"
  },
  {
    "text": "we knew the location for that license file and all those libraries and Frameworks so we took the entire license",
    "start": "2405800",
    "end": "2411240"
  },
  {
    "text": "file hashed it and stuck that value in a database and now anytime one of these",
    "start": "2411240",
    "end": "2416920"
  },
  {
    "text": "libraries updates itself we hash the license file compare that to the value in the database if that's changed we",
    "start": "2416920",
    "end": "2423520"
  },
  {
    "text": "call a lawyer okay come look at this new one make sure it's okay if it is we'll",
    "start": "2423520",
    "end": "2429200"
  },
  {
    "text": "anoint that one we'll hash that one that becomes the latest value in the database so basically what we've done is built a",
    "start": "2429200",
    "end": "2435359"
  },
  {
    "text": "mechanism in our project that's monitoring changes to those license files and anytime one of them changes",
    "start": "2435359",
    "end": "2441800"
  },
  {
    "text": "then it tells you so you can address it but this is common to a lot of these governance things it's really just a",
    "start": "2441800",
    "end": "2449079"
  },
  {
    "text": "heartbeat on your project it's basically going it's okay it's okay it's okay it's",
    "start": "2449079",
    "end": "2456079"
  },
  {
    "text": "okay whoops it's broken conf me okay it's okay it's okay but see the problem",
    "start": "2456079",
    "end": "2461319"
  },
  {
    "text": "with not having that as an architect is your whole life is spent going is it okay is it okay is it okay I gotta go",
    "start": "2461319",
    "end": "2468280"
  },
  {
    "text": "check okay it's okay is it okay is it okay is it I gotta go check okay it's",
    "start": "2468280",
    "end": "2473480"
  },
  {
    "text": "okay there's this constant lowlevel stress because you don't know having that heartbeat there means that if that",
    "start": "2473480",
    "end": "2479359"
  },
  {
    "text": "breaks it'll tell me and I can go fix it but now I don't have to worry about it breaking because it's just there this is",
    "start": "2479359",
    "end": "2485119"
  },
  {
    "text": "the beauty of building something like the semian Army there's a whole class of",
    "start": "2485119",
    "end": "2490280"
  },
  {
    "text": "things that they don't worry about from an architecture standpoint because they know there's a mechanism checking on those things all the time to make sure",
    "start": "2490280",
    "end": "2496760"
  },
  {
    "text": "they don't break excuse me so let's talk about putting this into practice the first",
    "start": "2496760",
    "end": "2503760"
  },
  {
    "text": "step of course is identifying what dimensions now notice I don't say identifying what dimensions you think",
    "start": "2503760",
    "end": "2510040"
  },
  {
    "text": "are going to change because you can't predict what's going to change but what this does allow you to do is do a better",
    "start": "2510040",
    "end": "2516800"
  },
  {
    "text": "job of prioritizing what do we really need to support in our architecture this",
    "start": "2516800",
    "end": "2521839"
  },
  {
    "text": "also gives you a much more concrete way to assern what does it cost to implement",
    "start": "2521839",
    "end": "2527560"
  },
  {
    "text": "and maintain particular architectural characteristics now I can say what does",
    "start": "2527560",
    "end": "2533000"
  },
  {
    "text": "performance cost in this architecture performance cost what it takes for me to implement and maintain the Performance",
    "start": "2533000",
    "end": "2539720"
  },
  {
    "text": "Fitness function because now I know that performance is going to be maintained for the life of this application because",
    "start": "2539720",
    "end": "2546359"
  },
  {
    "text": "I have a realtime check running all the time in my ecosystem this also changes",
    "start": "2546359",
    "end": "2553000"
  },
  {
    "text": "this variable fix it cost that's going to happen at some point in the future to a constant maintenance cost because what",
    "start": "2553000",
    "end": "2558400"
  },
  {
    "text": "happens a lot of times we pick a particular framework because of performance or some characteristic we",
    "start": "2558400",
    "end": "2563480"
  },
  {
    "text": "want and we check it on an ad hoc basis and it gradually degrades over time and then there's a bunch of work that has to",
    "start": "2563480",
    "end": "2568880"
  },
  {
    "text": "be done to retrofit it and fix it again that's that variable fix it cost lurking in the future that changes us to a",
    "start": "2568880",
    "end": "2575640"
  },
  {
    "text": "constant maintenance cost because if you keep that Fitness function maintained then you never get surprised by one of",
    "start": "2575640",
    "end": "2580920"
  },
  {
    "text": "these things falling off a ledge somewhere once you've identified and prioritize the dimensions you want to",
    "start": "2580920",
    "end": "2587040"
  },
  {
    "text": "support in your architecture then you can Define Fitness functions for them fall off um this is the guard rails that",
    "start": "2587040",
    "end": "2593960"
  },
  {
    "text": "you create for your architecture over time to make sure that all those things behave the way you want them to and then",
    "start": "2593960",
    "end": "2600880"
  },
  {
    "text": "use deployment pipelines Andor continuous Fitness functions to wire this up to make sure that things still",
    "start": "2600880",
    "end": "2606559"
  },
  {
    "text": "work correctly this is definitely something that you do initially as you start a project uh",
    "start": "2606559",
    "end": "2613319"
  },
  {
    "text": "because that's when you identify what kind of architectural pattern you want to support but it's also meant to be an",
    "start": "2613319",
    "end": "2618680"
  },
  {
    "text": "ongoing living part of your code base you update these things just like you update unit tests and functional tests",
    "start": "2618680",
    "end": "2625280"
  },
  {
    "text": "this is really the definition of those uh software architectural characteristics and so you update these",
    "start": "2625280",
    "end": "2631760"
  },
  {
    "text": "aggressively just like you do uh any kind of other U verification mechanism",
    "start": "2631760",
    "end": "2637640"
  },
  {
    "text": "like test so last thing I'll talk about is this idea of incremental change uh both",
    "start": "2637640",
    "end": "2644200"
  },
  {
    "text": "at the operational side and the development side uh obviously mechanisms like deployment pipelines are great",
    "start": "2644200",
    "end": "2650520"
  },
  {
    "text": "tools to allow you to automate uh wiring together things like Fitness functions into builds and in fact there's a great",
    "start": "2650520",
    "end": "2657440"
  },
  {
    "text": "benefit here because it allows you to create an an automation a governance",
    "start": "2657440",
    "end": "2663839"
  },
  {
    "text": "platform so here's a question for you guys what happens right now in your",
    "start": "2663839",
    "end": "2670319"
  },
  {
    "text": "organization when there's a zerod day security exploit for one of the Frameworks or libraries you were using",
    "start": "2670319",
    "end": "2676480"
  },
  {
    "text": "to do development this is not an abstract question this happened to a big financial services company in the US and",
    "start": "2676480",
    "end": "2683280"
  },
  {
    "text": "what did they do their security people ran around looking for instances and they found a bunch of them and a bunch",
    "start": "2683280",
    "end": "2690119"
  },
  {
    "text": "of them fell through the cracks and they're still dealing with the exposure",
    "start": "2690119",
    "end": "2695160"
  },
  {
    "text": "that that caused imagine im a war for a second where every one of your projects was running continuous integration or",
    "start": "2695160",
    "end": "2701559"
  },
  {
    "text": "deployment Pipeline and your security team had a slot in every Project's deployment pipeline where they can",
    "start": "2701559",
    "end": "2707920"
  },
  {
    "text": "insert code if they need to probably all they're doing on a regular basis is making sure you're not checking",
    "start": "2707920",
    "end": "2713079"
  },
  {
    "text": "passwords into Version Control and things like that but when that zero day security exploit comes out they can",
    "start": "2713079",
    "end": "2718920"
  },
  {
    "text": "insert a test in everyone's build that says if you're using the affected version of this framework failure build",
    "start": "2718920",
    "end": "2725559"
  },
  {
    "text": "notify the security team let's let you automate these kind of governance activities so they stop",
    "start": "2725559",
    "end": "2732760"
  },
  {
    "text": "falling through the cracks once you've created that level of automation you basically created a platform that you",
    "start": "2732760",
    "end": "2738359"
  },
  {
    "text": "can rely on to handle critical things like this for you so let's talk about the operational",
    "start": "2738359",
    "end": "2745079"
  },
  {
    "text": "side of incremental change and putting things live so let's say that we have a website",
    "start": "2745079",
    "end": "2751800"
  },
  {
    "text": "for penultimate widgets and it has a star rating service that people that other services use to Star rate things",
    "start": "2751800",
    "end": "2757920"
  },
  {
    "text": "and one day we put out a better version of star ratings we don't force anyone to start using it it's just now a new",
    "start": "2757920",
    "end": "2763640"
  },
  {
    "text": "capability in our architecture and so over time others teams that need star",
    "start": "2763640",
    "end": "2768800"
  },
  {
    "text": "ratings will eventually start using the new and improved star rating service until eventually no one's pointing to",
    "start": "2768800",
    "end": "2774400"
  },
  {
    "text": "the old one anymore one of the uh lessons that Netflix taught us about architectures",
    "start": "2774400",
    "end": "2779960"
  },
  {
    "text": "like this is you monitor not only the services but also the routes between services and any service that has been",
    "start": "2779960",
    "end": "2785680"
  },
  {
    "text": "routed to in a set amount amount of time automatically gets disintegrated out of the",
    "start": "2785680",
    "end": "2791000"
  },
  {
    "text": "architecture anybody remember whose job that is it's our friend the janitor",
    "start": "2791000",
    "end": "2796800"
  },
  {
    "text": "monkey that's exactly what he does is get rid of services that we don't need",
    "start": "2796800",
    "end": "2802240"
  },
  {
    "text": "anymore so my last example here is a case study from the GitHub engineering blog called move fast and fix things",
    "start": "2802240",
    "end": "2808520"
  },
  {
    "text": "it's a great example of this idea of incremental uh change at the architectural level these guys are an",
    "start": "2808520",
    "end": "2814839"
  },
  {
    "text": "extremely agile engineering organization they do continuous deployment they average 60 deploys a day and this case",
    "start": "2814839",
    "end": "2821359"
  },
  {
    "text": "stud is about a problem they had with merge it turns out that since day one at GitHub the way they've merged two",
    "start": "2821359",
    "end": "2827440"
  },
  {
    "text": "projects is to Shell out to a shell script have it merge those things and then suck it back into GitHub the",
    "start": "2827440",
    "end": "2833040"
  },
  {
    "text": "problem is that doesn't scale particularly well and so they had to bite the bullet and write their own inmemory version of merge which they",
    "start": "2833040",
    "end": "2840880"
  },
  {
    "text": "did but now here comes the problem they need to put it live but they don't want",
    "start": "2840880",
    "end": "2846079"
  },
  {
    "text": "to create any structural instabilities you can't break merge it's always worked perfectly so they created an open source",
    "start": "2846079",
    "end": "2853480"
  },
  {
    "text": "this tool called scientist and have ported it to a bunch of other languages",
    "start": "2853480",
    "end": "2858839"
  },
  {
    "text": "scientist allows you to conduct experiments so when you hit the scientist block you can set up a threshold they set up 1% for this merge",
    "start": "2858839",
    "end": "2866160"
  },
  {
    "text": "experiment it always executes use which is the old code it returns it to the user but in 1% of the cases it also",
    "start": "2866160",
    "end": "2873520"
  },
  {
    "text": "executed this Tri code randomized the order measures durations swallows and Records exceptions and publishes all",
    "start": "2873520",
    "end": "2879880"
  },
  {
    "text": "this stuff to a dashboard so here's right after they deployed the experiment at 220 they're doing a little over 2,000",
    "start": "2879880",
    "end": "2886240"
  },
  {
    "text": "experiments if you look at the bottom you can see some tiny red tick marks which is where us and tried disagreed so",
    "start": "2886240",
    "end": "2892000"
  },
  {
    "text": "if you zoom in on the bottom you can see here are places where they have bugs in their new code hasn't had impact on",
    "start": "2892000",
    "end": "2897640"
  },
  {
    "text": "users yet because they always get the used part of this block back they were also testing performance and so here is",
    "start": "2897640",
    "end": "2904119"
  },
  {
    "text": "the performance graph the green line is the new code and the blue line is the oil code they ended up running this",
    "start": "2904119",
    "end": "2909599"
  },
  {
    "text": "experiment for 4 days until they had 24 hours with no mismatches or slowc cases",
    "start": "2909599",
    "end": "2914960"
  },
  {
    "text": "over the course of those four days they did more than 10 million comparisons so they had really high confidence that",
    "start": "2914960",
    "end": "2921040"
  },
  {
    "text": "that new code was doing exactly what they wanted when they stripped the old code away and left the new code in place",
    "start": "2921040",
    "end": "2926640"
  },
  {
    "text": "a great example of incremental change at the architectural level making structural changes without creating",
    "start": "2926640",
    "end": "2933880"
  },
  {
    "text": "instabilities around that change so we have the book building Evolution",
    "start": "2933880",
    "end": "2939359"
  },
  {
    "text": "architectures we also have a companion website where we're continuing to add more resources and a bunch of exercises",
    "start": "2939359",
    "end": "2945280"
  },
  {
    "text": "and a bunch of other stuff to illustrate these Concepts uh so we're continuing to add material uh to the website so feel",
    "start": "2945280",
    "end": "2951839"
  },
  {
    "text": "free to go there and get more resources about this thanks very much for coming and I hope you enjoyed",
    "start": "2951839",
    "end": "2958720"
  },
  {
    "text": "it thanks",
    "start": "2958720",
    "end": "2964760"
  }
]