[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "as an instructor and a consultant occasionally it always amazes me how",
    "start": "10849",
    "end": "17960"
  },
  {
    "text": "reluctant is our people to do testing",
    "start": "17960",
    "end": "23939"
  },
  {
    "text": "for the code that they write and I don't know why they write code and they only",
    "start": "23939",
    "end": "32040"
  },
  {
    "text": "tried with their devices and send it to the customer and ask the customer to try",
    "start": "32040",
    "end": "38460"
  },
  {
    "text": "their code it's like asking the customer you go first",
    "start": "38460",
    "end": "44129"
  },
  {
    "text": "you take care of this you tell me how it works and if it works fine and I just",
    "start": "44129",
    "end": "50579"
  },
  {
    "text": "want to know if there is any problem probably some of you would be thinking",
    "start": "50579",
    "end": "55860"
  },
  {
    "start": "54000",
    "end": "88000"
  },
  {
    "text": "that it is not that important to do testing for small things for small apps",
    "start": "55860",
    "end": "62570"
  },
  {
    "text": "because after all what we're doing is just apps for mobile devices they are",
    "start": "62570",
    "end": "69570"
  },
  {
    "text": "not that important well actually they are but even the smallest things that we",
    "start": "69570",
    "end": "75479"
  },
  {
    "text": "used require some testing sometimes we want to be sure that these small things",
    "start": "75479",
    "end": "83670"
  },
  {
    "text": "work perfectly before we use them also we consider ourselves professionals at",
    "start": "83670",
    "end": "90570"
  },
  {
    "start": "88000",
    "end": "169000"
  },
  {
    "text": "least that's what I want to think of myself and if we are professionals we",
    "start": "90570",
    "end": "98130"
  },
  {
    "text": "would like to compare ourselves with companies like NASA like the presentation we had today for the",
    "start": "98130",
    "end": "105090"
  },
  {
    "text": "keynote I mean like they do a lot of testing they were able to put this a",
    "start": "105090",
    "end": "110869"
  },
  {
    "text": "robbery Mars so precisely because they were doing a lot of testing before they",
    "start": "110869",
    "end": "118140"
  },
  {
    "text": "were doing unit testing they were not doing the integration testing because as she explained to us it is not possible",
    "start": "118140",
    "end": "125219"
  },
  {
    "text": "to test everything before sending the stuff to Mars but at least they were",
    "start": "125219",
    "end": "130379"
  },
  {
    "text": "trying to put all the pieces together to have them ready and tested before",
    "start": "130379",
    "end": "135659"
  },
  {
    "text": "sending them to Mars because it's expensive it is also expensive for our companies to create software and to send",
    "start": "135659",
    "end": "142500"
  },
  {
    "text": "them to customers without having tried that somewhere before so I would ask you",
    "start": "142500",
    "end": "149400"
  },
  {
    "text": "to not consider yourself as an artist or a gardener who cannot test the results",
    "start": "149400",
    "end": "156510"
  },
  {
    "text": "of their outcome but to consider some to",
    "start": "156510",
    "end": "161549"
  },
  {
    "text": "consider yourself a professional and try to prove that what you are doing is completely right so today I'm going to",
    "start": "161549",
    "end": "171540"
  },
  {
    "text": "talk to you about TDD and how to do TDD by controlling dependencies and well as",
    "start": "171540",
    "end": "178859"
  },
  {
    "text": "I said my name is Kirk your teeth and this is going to be I talk about how",
    "start": "178859",
    "end": "185370"
  },
  {
    "text": "architecture helped us to do TDD we will",
    "start": "185370",
    "end": "190859"
  },
  {
    "text": "talk about TDD first then how real life gets into TDD and spoils the results of",
    "start": "190859",
    "end": "198299"
  },
  {
    "text": "our good will and then how sweet helped us to have a bear a architecture that",
    "start": "198299",
    "end": "208260"
  },
  {
    "text": "can be fully tested and helped us to do TDD when we are developing for mobile",
    "start": "208260",
    "end": "215549"
  },
  {
    "text": "devices and for OS 10 so let's start with TDD and because I don't want to be",
    "start": "215549",
    "end": "224010"
  },
  {
    "text": "one of these people who starts talking about acronyms without explaining what TDD is I know that probably everybody",
    "start": "224010",
    "end": "231810"
  },
  {
    "text": "here knows what TDD is but let me tell you let me remind you that TDD is",
    "start": "231810",
    "end": "237959"
  },
  {
    "start": "236000",
    "end": "373000"
  },
  {
    "text": "test-driven development and these test-driven development means that we write the tests before we do any actual",
    "start": "237959",
    "end": "246449"
  },
  {
    "text": "coding that means that we know what we want to prove before we write a code and",
    "start": "246449",
    "end": "254030"
  },
  {
    "text": "well that is very important because now we are changing the paradigm and we'll",
    "start": "254030",
    "end": "260039"
  },
  {
    "text": "instead of writing the code and trying to demonstrate that it works perfectly what we do instead is create that",
    "start": "260039",
    "end": "267040"
  },
  {
    "text": "that we know that this code will have to pass and then we will write a code in",
    "start": "267040",
    "end": "274030"
  },
  {
    "text": "order to make it work I don't know how",
    "start": "274030",
    "end": "280030"
  },
  {
    "text": "long all of you have been working in development probably many years for us",
    "start": "280030",
    "end": "286060"
  },
  {
    "text": "there has been a lot of progress and we started with this sensation of writing",
    "start": "286060",
    "end": "293110"
  },
  {
    "text": "something and typing something on a keyboard and write in a small program and it does something okay that is kind",
    "start": "293110",
    "end": "302980"
  },
  {
    "text": "of progress but then we would change to the stage of being able to do what we",
    "start": "302980",
    "end": "311740"
  },
  {
    "text": "wanted to so our programs were not only doing something but we what we expected",
    "start": "311740",
    "end": "318640"
  },
  {
    "text": "them to do the next stage from that is",
    "start": "318640",
    "end": "324010"
  },
  {
    "text": "testing I can prove that the program does what I want it to do but there is",
    "start": "324010",
    "end": "332950"
  },
  {
    "text": "even more you can go and do TDD and then you can say I'm going to say what this",
    "start": "332950",
    "end": "341680"
  },
  {
    "text": "get param is going to do and it will prove that is going to doing that",
    "start": "341680",
    "end": "347470"
  },
  {
    "text": "because it's passing the tests this is the path to Nirvana okay so once you",
    "start": "347470",
    "end": "356590"
  },
  {
    "text": "have gone through all these steps you get to stage where you know that your",
    "start": "356590",
    "end": "363940"
  },
  {
    "text": "code is doing everything that you were planning to because it's passing all the",
    "start": "363940",
    "end": "369910"
  },
  {
    "text": "tests that you have plan in advance how do you do that how do you write the",
    "start": "369910",
    "end": "376750"
  },
  {
    "start": "373000",
    "end": "429000"
  },
  {
    "text": "tests in order to make them pass and to",
    "start": "376750",
    "end": "381910"
  },
  {
    "text": "fully cover the scope of your",
    "start": "381910",
    "end": "387760"
  },
  {
    "text": "application well the first thing that you have to keep in mind is that you only have to test your code and that is",
    "start": "387760",
    "end": "395080"
  },
  {
    "text": "something very important if you're writing a core data",
    "start": "395080",
    "end": "400930"
  },
  {
    "text": "application probably you don't want will probably know surely you don't want to",
    "start": "400930",
    "end": "407350"
  },
  {
    "text": "test that an execute fetch request that is code that Apple has written for us is",
    "start": "407350",
    "end": "414009"
  },
  {
    "text": "working properly you don't want that it is apples business it will work fine you",
    "start": "414009",
    "end": "421750"
  },
  {
    "text": "only want to write a test like that if you want to prove that they are doing something wrong okay but that's not",
    "start": "421750",
    "end": "426910"
  },
  {
    "text": "usually the case usually when you find a bag like 99 percent out of 100 it is",
    "start": "426910",
    "end": "433690"
  },
  {
    "start": "429000",
    "end": "534000"
  },
  {
    "text": "your fault let's assume that okay so here what you want to do is just test",
    "start": "433690",
    "end": "439330"
  },
  {
    "text": "the code that you are going to write only one level of abstraction which means I'm going to focus on the a top",
    "start": "439330",
    "end": "448990"
  },
  {
    "text": "API the level of API that I am serving to other modules so if this is a class",
    "start": "448990",
    "end": "455110"
  },
  {
    "text": "there is a public interface that is offering methods to other classes and this is going to these are the methods",
    "start": "455110",
    "end": "463780"
  },
  {
    "text": "that I am going to try the methods that I'm going to develop tests for only the",
    "start": "463780",
    "end": "469659"
  },
  {
    "text": "public methods people usually think oh this method this is very important I",
    "start": "469659",
    "end": "475000"
  },
  {
    "text": "want to know that it works properly but this is private so how do I try that the",
    "start": "475000",
    "end": "482080"
  },
  {
    "text": "thing that you have to do is to try the public method that uses that one so you exercise that method the private",
    "start": "482080",
    "end": "489550"
  },
  {
    "text": "one but you only have to focus on testing the public ones if a method is",
    "start": "489550",
    "end": "495310"
  },
  {
    "text": "private and you don't access to that you don't have any access to that it makes no point in it's no sense to have that a",
    "start": "495310",
    "end": "502169"
  },
  {
    "text": "trick that tests running for you it even makes no sense to have the private a",
    "start": "502169",
    "end": "508000"
  },
  {
    "text": "method so only public methods one",
    "start": "508000",
    "end": "513159"
  },
  {
    "text": "assertion per test well that's not actually true assertion is what you suspect that the the test to do",
    "start": "513159",
    "end": "520380"
  },
  {
    "text": "sometimes you can have more than one but the thing that you have to keep in mind",
    "start": "520380",
    "end": "525550"
  },
  {
    "text": "is that it if a test fail fails it must fail because of guess one reason so you",
    "start": "525550",
    "end": "532089"
  },
  {
    "text": "you need a test a failing telling you that that something is wrong but guess one thing",
    "start": "532089",
    "end": "539310"
  },
  {
    "start": "534000",
    "end": "587000"
  },
  {
    "text": "because if a test is failing and is offering you a lot of things that it can go wrong then it is harder for you to",
    "start": "539310",
    "end": "546570"
  },
  {
    "text": "find out what was the problem in the first place finally the test must be",
    "start": "546570",
    "end": "553170"
  },
  {
    "text": "independent of sequence and a state if you run the tests in a different order",
    "start": "553170",
    "end": "560579"
  },
  {
    "text": "or if the test the X the class that you're exercising the class that you're",
    "start": "560579",
    "end": "566910"
  },
  {
    "text": "testing has some previous state you will have to inject that a state in the test",
    "start": "566910",
    "end": "573630"
  },
  {
    "text": "that needs to be run not as a result of previous tests ok these are general",
    "start": "573630",
    "end": "581699"
  },
  {
    "text": "rules I think that they are fairly easy to comply but then it starts the TDD",
    "start": "581699",
    "end": "590040"
  },
  {
    "start": "587000",
    "end": "599000"
  },
  {
    "text": "dance and the TDV dance is what you do when you want to develop TDD in TDD you",
    "start": "590040",
    "end": "597810"
  },
  {
    "text": "start by writing as I said the tests so when you write a test you have something",
    "start": "597810",
    "end": "603390"
  },
  {
    "start": "599000",
    "end": "639000"
  },
  {
    "text": "that well it fails I mean it's read then the test a the",
    "start": "603390",
    "end": "612570"
  },
  {
    "text": "code is written to pass the test and then hopefully you get something that is",
    "start": "612570",
    "end": "618120"
  },
  {
    "text": "green the test has passed then you have the chance to improve your code you can",
    "start": "618120",
    "end": "625410"
  },
  {
    "text": "refactor and refactor sorry and refactor means that hope refactor means that the",
    "start": "625410",
    "end": "634440"
  },
  {
    "text": "code will be doing the same and all of the tests should be still passing but",
    "start": "634440",
    "end": "640829"
  },
  {
    "text": "you can do changes to your code that are required that help the readability of",
    "start": "640829",
    "end": "647970"
  },
  {
    "text": "your code that helps the code to be more concise that anything that a fulfills",
    "start": "647970",
    "end": "654660"
  },
  {
    "text": "your purpose and you can refactor in order to have a method that avoids",
    "start": "654660",
    "end": "660660"
  },
  {
    "text": "repetition things like that but every test has to be still passing after",
    "start": "660660",
    "end": "667700"
  },
  {
    "text": "the stage of refactoring what are the process of doing TDD well the processor",
    "start": "667700",
    "end": "675620"
  },
  {
    "start": "671000",
    "end": "854000"
  },
  {
    "text": "the first Pro is that you will have code that is 100% covered which means that",
    "start": "675620",
    "end": "683780"
  },
  {
    "text": "you have code sorry you have tests for every line of your code if you don't get",
    "start": "683780",
    "end": "691100"
  },
  {
    "text": "that when you're doing TDD is because you're cheating on yourself you're saying well I don't need to test that",
    "start": "691100",
    "end": "698450"
  },
  {
    "text": "then that's not covered but if you do TDD properly and you do you refrain",
    "start": "698450",
    "end": "706820"
  },
  {
    "text": "yourself from writing any line of code before having a test for that everything",
    "start": "706820",
    "end": "712670"
  },
  {
    "text": "will be covered because you are thinking about the tests you are more sensitive",
    "start": "712670",
    "end": "719330"
  },
  {
    "text": "to the edge cases you're also more sensitive to things that you were not",
    "start": "719330",
    "end": "726290"
  },
  {
    "text": "planning in advance so what you have is the ability to detect scenarios that if",
    "start": "726290",
    "end": "734210"
  },
  {
    "text": "you don't do the test before you wouldn't notice the progress that you do",
    "start": "734210",
    "end": "740420"
  },
  {
    "text": "when you're doing tivities is can be measured I mean like you know that",
    "start": "740420",
    "end": "745610"
  },
  {
    "text": "you're doing some progress because you have more tests that are passing every time that you're writing and it is",
    "start": "745610",
    "end": "752120"
  },
  {
    "text": "easier to introduce changes because when you introduce a change you know",
    "start": "752120",
    "end": "757250"
  },
  {
    "text": "immediately how it affects to the rest of your code some people complain about",
    "start": "757250",
    "end": "763730"
  },
  {
    "text": "how long it takes to write the tests and I agree that it takes some time to do",
    "start": "763730",
    "end": "769760"
  },
  {
    "text": "testing properly but it is also true that since you are doing the testing",
    "start": "769760",
    "end": "777980"
  },
  {
    "text": "beforehand the time you spend on the bagging is less and that helps you on",
    "start": "777980",
    "end": "784970"
  },
  {
    "text": "your productivity it's also true that you are able to get a more decoupled",
    "start": "784970",
    "end": "791000"
  },
  {
    "text": "code explicit dependencies single responsibility in within the classes you",
    "start": "791000",
    "end": "798350"
  },
  {
    "text": "can do autopilot parameter that it is essential for people that don't sleep much I mean you know that the code",
    "start": "798350",
    "end": "807020"
  },
  {
    "text": "is working properly because you're writing a test and it is passing the test okay also also you get to a simpler",
    "start": "807020",
    "end": "819710"
  },
  {
    "text": "design because one of the things that you try to do when you're doing testing is what is called as jack knee you ain't",
    "start": "819710",
    "end": "827690"
  },
  {
    "text": "gonna need it you don't put things in your program that are not required yet so whatever",
    "start": "827690",
    "end": "833930"
  },
  {
    "text": "you write in your program is something that is required instantly and that's why you test it the truth is that the",
    "start": "833930",
    "end": "842690"
  },
  {
    "text": "things from the right side are not actually true always but they are true",
    "start": "842690",
    "end": "847820"
  },
  {
    "text": "most of the times and they at least they help you to have a to get them easier",
    "start": "847820",
    "end": "853180"
  },
  {
    "text": "okay what are the cons well the cons are people wouldn't they start thinking",
    "start": "853180",
    "end": "860390"
  },
  {
    "start": "854000",
    "end": "879000"
  },
  {
    "text": "about TDD the first time that you tell people our TDD they think that this is",
    "start": "860390",
    "end": "865940"
  },
  {
    "text": "putting the horse before before a cart and now have to think how to test",
    "start": "865940",
    "end": "872180"
  },
  {
    "text": "something that I haven't even written yet so well that is actually not true",
    "start": "872180",
    "end": "878960"
  },
  {
    "text": "because when you want to go to a restaurant and you want to order you",
    "start": "878960",
    "end": "885920"
  },
  {
    "text": "don't know how the food is going to be or how a fool are you going to feel",
    "start": "885920",
    "end": "891980"
  },
  {
    "text": "after eating the food so you go through the menu and you ask for some dishes and",
    "start": "891980",
    "end": "897920"
  },
  {
    "text": "you eat them and hopefully they pass the test okay",
    "start": "897920",
    "end": "904000"
  },
  {
    "text": "another complaints are that it takes longer but as I said before it takes longer initially but it is not true that",
    "start": "904000",
    "end": "911300"
  },
  {
    "text": "it takes longer all the time because you have to take into account the time that you don't spend in the debugger which I",
    "start": "911300",
    "end": "918260"
  },
  {
    "text": "don't know about you but for me spending time in the divider is tiring because",
    "start": "918260",
    "end": "923510"
  },
  {
    "text": "well I mean like sometimes this I run this again yes the problem is there but",
    "start": "923510",
    "end": "929390"
  },
  {
    "text": "I don't know how to solve it so I try again again and again and I don't get",
    "start": "929390",
    "end": "934940"
  },
  {
    "text": "to solve the problem well when I'm writing the test I know why is not passing okay there's an initial",
    "start": "934940",
    "end": "943310"
  },
  {
    "text": "investment I agree on that I think that you have to do more stuff to get a basic",
    "start": "943310",
    "end": "949270"
  },
  {
    "text": "case running but well it pays off",
    "start": "949270",
    "end": "955250"
  },
  {
    "text": "afterwards and I think it's worth spending that time some people and there",
    "start": "955250",
    "end": "961220"
  },
  {
    "text": "was a very nice series of videos in",
    "start": "961220",
    "end": "966740"
  },
  {
    "text": "YouTube with David Hannah Mayer and",
    "start": "966740",
    "end": "972910"
  },
  {
    "text": "Martin folder and came back and that the title is is tdd dead and it is a very",
    "start": "972910",
    "end": "981790"
  },
  {
    "text": "nice series and one of the points was if I'm doing TDD",
    "start": "981790",
    "end": "989900"
  },
  {
    "text": "I don't have a the big-picture mind so my design is not as good as it would be",
    "start": "989900",
    "end": "997130"
  },
  {
    "text": "if I spend some time working on the design and then doing the development",
    "start": "997130",
    "end": "1002140"
  },
  {
    "text": "but the truth is that there's nothing in TDD that tells you not to work in the",
    "start": "1002140",
    "end": "1007630"
  },
  {
    "text": "design me for starting with TDD so I don't think that's an issue either it is",
    "start": "1007630",
    "end": "1016150"
  },
  {
    "text": "true it is actually true that if the requirements change the tests must be",
    "start": "1016150",
    "end": "1021430"
  },
  {
    "text": "reading to not only the code but the tests and this takes longer also it is",
    "start": "1021430",
    "end": "1029500"
  },
  {
    "text": "true that you need more tests that unit tests till it is only about unit tests",
    "start": "1029500",
    "end": "1035260"
  },
  {
    "text": "and there's it you probably will need integration tests you will need a any",
    "start": "1035260",
    "end": "1042188"
  },
  {
    "text": "other kind of test like loading low like performance testing and here you're only",
    "start": "1042189",
    "end": "1049630"
  },
  {
    "text": "a focusing on the unit testing but that's not bad about TDD I mean that's",
    "start": "1049630",
    "end": "1056740"
  },
  {
    "text": "something that you will have to do anyhow finally people say well if I",
    "start": "1056740",
    "end": "1062830"
  },
  {
    "text": "write TDD my code is going to be better well your code is going to be as good as your test I mean if you",
    "start": "1062830",
    "end": "1068680"
  },
  {
    "text": "right code that is not readable and your code is bad your TD your TDD tests are",
    "start": "1068680",
    "end": "1075220"
  },
  {
    "text": "going to be bad that's that's not going to change how well how good your code is",
    "start": "1075220",
    "end": "1081570"
  },
  {
    "text": "so my point is that if you do TDD and",
    "start": "1081570",
    "end": "1087070"
  },
  {
    "text": "you want to and develop these applications that you're working in on",
    "start": "1087070",
    "end": "1093780"
  },
  {
    "text": "in the future in a TDD fashion you will get to a final result by improving",
    "start": "1093780",
    "end": "1101020"
  },
  {
    "text": "continuously the code that you write while do you exercise the tests okay but",
    "start": "1101020",
    "end": "1108370"
  },
  {
    "start": "1107000",
    "end": "1120000"
  },
  {
    "text": "let's go into real-life probably some of",
    "start": "1108370",
    "end": "1113440"
  },
  {
    "text": "you if not how many of you have tried TDD at least once well okay cool so how many of you do TDD",
    "start": "1113440",
    "end": "1122160"
  },
  {
    "start": "1120000",
    "end": "1170000"
  },
  {
    "text": "most of the time well good so what I'm",
    "start": "1122160",
    "end": "1128920"
  },
  {
    "text": "saying is that yes we try we like this is going to be my next break we're",
    "start": "1128920",
    "end": "1135610"
  },
  {
    "text": "starting from scratch I'm going to write the next class and I'm going to write it",
    "start": "1135610",
    "end": "1141010"
  },
  {
    "text": "using TDD but that life gets in the middle of that and you wanted to do the",
    "start": "1141010",
    "end": "1149830"
  },
  {
    "text": "tests but somebody is asking you to have the class ready you have a deadline it",
    "start": "1149830",
    "end": "1156070"
  },
  {
    "text": "doesn't pass the first test you don't know why but it's not working so well okay let's forget about TDD and let's do",
    "start": "1156070",
    "end": "1164950"
  },
  {
    "text": "it as we did before well some of the",
    "start": "1164950",
    "end": "1170470"
  },
  {
    "start": "1170000",
    "end": "1222000"
  },
  {
    "text": "things that are tougher to tests are the",
    "start": "1170470",
    "end": "1180850"
  },
  {
    "text": "UI the visual part of your application and people sometimes start trying to do",
    "start": "1180850",
    "end": "1189670"
  },
  {
    "text": "the testing of the UI and well we think live this is too tough how do I emulate",
    "start": "1189670",
    "end": "1196600"
  },
  {
    "text": "the touches how do I know the information that is required to be",
    "start": "1196600",
    "end": "1202300"
  },
  {
    "text": "test their do I test whether the color is that or not do I test the font do I",
    "start": "1202300",
    "end": "1209020"
  },
  {
    "text": "test the size of the of the view what do I have to test there we will discuss a",
    "start": "1209020",
    "end": "1219580"
  },
  {
    "text": "little bit about that in a moment another thing that might be tough to test is persistence",
    "start": "1219580",
    "end": "1227020"
  },
  {
    "start": "1222000",
    "end": "1279000"
  },
  {
    "text": "at least our relation with persistence most of our applications are using some",
    "start": "1227020",
    "end": "1234280"
  },
  {
    "text": "kind of data that's a fact but then in",
    "start": "1234280",
    "end": "1239770"
  },
  {
    "text": "order to try your business logic you need to have some sets of data you want",
    "start": "1239770",
    "end": "1246760"
  },
  {
    "text": "to know that this data is going to be available and that the data fulfills the",
    "start": "1246760",
    "end": "1252490"
  },
  {
    "text": "requirement to test that part of the logic and then you start having small sets of data and then you start having",
    "start": "1252490",
    "end": "1259630"
  },
  {
    "text": "well what do i do do I leave the data there do I have two pieces of data the",
    "start": "1259630",
    "end": "1266320"
  },
  {
    "text": "one for production and the one that I that I'm using for testing mmm get stuff",
    "start": "1266320",
    "end": "1272860"
  },
  {
    "text": "so we will discuss a little bit about how to solve that finally and this is",
    "start": "1272860",
    "end": "1282090"
  },
  {
    "start": "1279000",
    "end": "1409000"
  },
  {
    "text": "this is for people who have been working with Swift or with other languages how",
    "start": "1282090",
    "end": "1290260"
  },
  {
    "text": "many of you have been using Swift too at least for fun oh okay how many of you",
    "start": "1290260",
    "end": "1297370"
  },
  {
    "text": "have used protocol extensions great okay so protocol extensions are in Scala they",
    "start": "1297370",
    "end": "1305830"
  },
  {
    "text": "are called traits for those of you who have tried Scala too and they provide",
    "start": "1305830",
    "end": "1311590"
  },
  {
    "text": "the classes with additional functionality that can be complementary",
    "start": "1311590",
    "end": "1318100"
  },
  {
    "text": "to the one that you have from inheritance we thought having all the thing that you get from inheritance so",
    "start": "1318100",
    "end": "1324880"
  },
  {
    "text": "it is an advantage it provides with a clean cleaner design pattern for some",
    "start": "1324880",
    "end": "1331420"
  },
  {
    "text": "stuff and he avoids more",
    "start": "1331420",
    "end": "1336820"
  },
  {
    "text": "of the multiple inheritance problems that you have in other languages so",
    "start": "1336820",
    "end": "1342570"
  },
  {
    "text": "trades are very cool the problem is that trades are a protocol extension and a",
    "start": "1342570",
    "end": "1350980"
  },
  {
    "text": "protocol as you already know is something that doesn't have an instance",
    "start": "1350980",
    "end": "1357100"
  },
  {
    "text": "is this yes a declaration of intentions you tell by using a protocol one methods",
    "start": "1357100",
    "end": "1364300"
  },
  {
    "text": "you are committing to a implement but",
    "start": "1364300",
    "end": "1371290"
  },
  {
    "text": "you don't have any code for those methods yet when you add a protocol",
    "start": "1371290",
    "end": "1376510"
  },
  {
    "text": "extension for those you're saying well this is a generic implementation and I'm",
    "start": "1376510",
    "end": "1383440"
  },
  {
    "text": "going to be able to use this generic implementation for these classes you have restrictions in order to apply the",
    "start": "1383440",
    "end": "1390100"
  },
  {
    "text": "protocol but this code is not going to have any instance unless you apply this",
    "start": "1390100",
    "end": "1397600"
  },
  {
    "text": "protocol to an actual class so how do",
    "start": "1397600",
    "end": "1402880"
  },
  {
    "text": "you test something that doesn't have any instance who will discuss also about",
    "start": "1402880",
    "end": "1408550"
  },
  {
    "text": "this one so let's talk about TDD and swift and I put a small - there is",
    "start": "1408550",
    "end": "1416800"
  },
  {
    "start": "1409000",
    "end": "1423000"
  },
  {
    "text": "meaning that the one that I'm telling is not Swift square Swift - so let's talk",
    "start": "1416800",
    "end": "1424270"
  },
  {
    "text": "about how to do the testing of the UI so well probably all of you know that Xcode",
    "start": "1424270",
    "end": "1434230"
  },
  {
    "start": "1429000",
    "end": "1513000"
  },
  {
    "text": "was offering you the ability to write a unit testing so sorry not unit testing",
    "start": "1434230",
    "end": "1441400"
  },
  {
    "text": "UI testing I believe it was scored five",
    "start": "1441400",
    "end": "1446760"
  },
  {
    "text": "can anybody correct me on that you were using javascript now you can use Swift",
    "start": "1446760",
    "end": "1452170"
  },
  {
    "text": "from Xcode 7 on and well this is not",
    "start": "1452170",
    "end": "1457360"
  },
  {
    "text": "unit testing this is integration testing because what you are actually doing is you're running the whole application and",
    "start": "1457360",
    "end": "1463600"
  },
  {
    "text": "you're trying to push that button read that label or swipe on that cell",
    "start": "1463600",
    "end": "1470559"
  },
  {
    "text": "that is completely different from unit testing this is not wrong I'm not saying",
    "start": "1470559",
    "end": "1475600"
  },
  {
    "text": "that this cannot be good for your application I'm just saying that this is not unit testing and this doesn't help",
    "start": "1475600",
    "end": "1482499"
  },
  {
    "text": "us to do TDD okay so we have the same",
    "start": "1482499",
    "end": "1487870"
  },
  {
    "text": "problem with other frameworks for testing we give for calabash or cucumber",
    "start": "1487870",
    "end": "1493570"
  },
  {
    "text": "our integration testing so since TDD is",
    "start": "1493570",
    "end": "1500440"
  },
  {
    "text": "about unit testing about isolation of our module and testing that model the",
    "start": "1500440",
    "end": "1507970"
  },
  {
    "text": "module isolated how do we work with that well if we use an architecture that",
    "start": "1507970",
    "end": "1517139"
  },
  {
    "text": "decouples all of our a logic then it is",
    "start": "1517139",
    "end": "1524799"
  },
  {
    "text": "easier for us to be able to work with the view in a separate way so the view",
    "start": "1524799",
    "end": "1532749"
  },
  {
    "text": "is going to be mostly passive passive and it is only going to accept a",
    "start": "1532749",
    "end": "1540419"
  },
  {
    "text": "commands from the rest of our logic and provide the presenter with the events",
    "start": "1540419",
    "end": "1548649"
  },
  {
    "text": "that happen on the view and well some of",
    "start": "1548649",
    "end": "1554590"
  },
  {
    "text": "you might be thinking well another architecture well this is not mine architecture this isn't not my idea but",
    "start": "1554590",
    "end": "1561940"
  },
  {
    "text": "this is the idea that comes from Uncle Bob's cleaning architecture that also is",
    "start": "1561940",
    "end": "1573600"
  },
  {
    "text": "an improvement on other architectures like the onion architecture or the",
    "start": "1573600",
    "end": "1579179"
  },
  {
    "text": "hexagonal one so what all of these smart people have been thinking about is well",
    "start": "1579179",
    "end": "1587200"
  },
  {
    "text": "we really have to focus on having single responsibilities and having single responsibilities and a good way to",
    "start": "1587200",
    "end": "1593529"
  },
  {
    "text": "communicate things is tough initially but if you do this properly is very much",
    "start": "1593529",
    "end": "1599950"
  },
  {
    "text": "easier to test and if you have this view completely",
    "start": "1599950",
    "end": "1605880"
  },
  {
    "text": "isolated and without any logic in it it",
    "start": "1605880",
    "end": "1611730"
  },
  {
    "text": "is very much easier to test I don't want you to take my word for it I want to",
    "start": "1611730",
    "end": "1619110"
  },
  {
    "start": "1615000",
    "end": "1900000"
  },
  {
    "text": "show you some code of how to do that so this is a say your table cell is a",
    "start": "1619110",
    "end": "1628260"
  },
  {
    "text": "subclass of a UI table cell as you can see here and this is actually an actual",
    "start": "1628260",
    "end": "1634320"
  },
  {
    "text": "so it is a the one that I will be showing at the workshop in two days and",
    "start": "1634320",
    "end": "1641700"
  },
  {
    "text": "as you can see here you have three outlets and the three outlets are for",
    "start": "1641700",
    "end": "1647060"
  },
  {
    "text": "the each of the three labels that are going to be presented in these table",
    "start": "1647060",
    "end": "1653880"
  },
  {
    "text": "cell I have three methods and these three methods are implemented here and",
    "start": "1653880",
    "end": "1662220"
  },
  {
    "text": "they are declared in this protocol that is the protocol that is going to be used by the presenter so these methods are in",
    "start": "1662220",
    "end": "1671940"
  },
  {
    "text": "order to change these three fields the name the title and the date and notice",
    "start": "1671940",
    "end": "1679320"
  },
  {
    "text": "something that is very important here the date I could pass an inner state for",
    "start": "1679320",
    "end": "1685080"
  },
  {
    "text": "example which is the object that provides a date within Coco but I'm not",
    "start": "1685080",
    "end": "1692130"
  },
  {
    "text": "doing that because I don't want my viewcontroller my view to be smart enough to translate the date into",
    "start": "1692130",
    "end": "1700380"
  },
  {
    "text": "something that can be used in a view I only want the view to display text or",
    "start": "1700380",
    "end": "1705990"
  },
  {
    "text": "colors or things that are done enough okay so when I have that is very much",
    "start": "1705990",
    "end": "1714600"
  },
  {
    "text": "easier to test that I don't know how well this reads from back but let me",
    "start": "1714600",
    "end": "1720810"
  },
  {
    "text": "help you with this I have a method here there is the one actually doing the testing and what I do is I create a",
    "start": "1720810",
    "end": "1728580"
  },
  {
    "text": "label that is based on this mock that I have written this is Swift",
    "start": "1728580",
    "end": "1734510"
  },
  {
    "text": "you know that Swift is not as good as objective-c in terms of a",
    "start": "1734510",
    "end": "1740460"
  },
  {
    "text": "dynamic dispatch in so all of the mocking libraries mocking frameworks",
    "start": "1740460",
    "end": "1745889"
  },
  {
    "text": "that we were used to and we loved before can they cannot be used in Swift but",
    "start": "1745889",
    "end": "1752669"
  },
  {
    "text": "that is not a big issue because we can write our own mocks in our test cases",
    "start": "1752669",
    "end": "1757980"
  },
  {
    "text": "and this is what i'm doing here i'm creating a label mock which is a subclass of UI label i'm over ray",
    "start": "1757980",
    "end": "1766639"
  },
  {
    "text": "overriding the text property that is the one that is displayed when you have an a",
    "start": "1766639",
    "end": "1773940"
  },
  {
    "text": "label and here what i'm saying is well if this property said after it has been",
    "start": "1773940",
    "end": "1782429"
  },
  {
    "text": "said i want to set this flag to two to true what i'm saying here is that i want",
    "start": "1782429",
    "end": "1788460"
  },
  {
    "text": "to know if this property has been used has been set okay so that's very easy",
    "start": "1788460",
    "end": "1797480"
  },
  {
    "text": "here what I do is okay I want to use",
    "start": "1797480",
    "end": "1802529"
  },
  {
    "text": "this label mock as the date label notice that is this this is the one that I was mentioning that it has no intelligence",
    "start": "1802529",
    "end": "1809580"
  },
  {
    "text": "to provide any formatting of the of the date but it just displays the text that",
    "start": "1809580",
    "end": "1816809"
  },
  {
    "text": "you provided with what I do here is I",
    "start": "1816809",
    "end": "1822259"
  },
  {
    "text": "exercise I use the method that I want to test which is the display date submitted and I use these which is a constant that",
    "start": "1822259",
    "end": "1830309"
  },
  {
    "text": "I have defined before here then I have gets to check whether the label has been",
    "start": "1830309",
    "end": "1837779"
  },
  {
    "text": "used this the text has been set and well the value is the proper one that's it",
    "start": "1837779",
    "end": "1843330"
  },
  {
    "text": "very easy to test and it works not only",
    "start": "1843330",
    "end": "1849840"
  },
  {
    "text": "with these cells but with a view controller the table view controller can be tested that's hey this and the only",
    "start": "1849840",
    "end": "1856710"
  },
  {
    "text": "requirements that you define the proper protocols in order to abstract the communications between the different",
    "start": "1856710",
    "end": "1861840"
  },
  {
    "text": "classes the persistence same thing here I mean",
    "start": "1861840",
    "end": "1870410"
  },
  {
    "text": "like it is a requirement for the things that we do to have the persistence to have the proper objects available for us",
    "start": "1870410",
    "end": "1878060"
  },
  {
    "text": "there but but we don't actually need the",
    "start": "1878060",
    "end": "1883790"
  },
  {
    "text": "objects to be persisted in order to be able to test that so what we want is to",
    "start": "1883790",
    "end": "1890050"
  },
  {
    "text": "provide an abstract class a protocol that will provide us with the data that",
    "start": "1890050",
    "end": "1896210"
  },
  {
    "text": "we need at that moment in time for that test so this is a little bit more",
    "start": "1896210",
    "end": "1904790"
  },
  {
    "start": "1900000",
    "end": "2147000"
  },
  {
    "text": "elaborated version of the architecture that I show you before this was the view",
    "start": "1904790",
    "end": "1910340"
  },
  {
    "text": "that I was mentioning that is not only the view but the view controller also this is the presenter responsibilities",
    "start": "1910340",
    "end": "1917390"
  },
  {
    "text": "of the presenter as I said is listening to the events that come from the view",
    "start": "1917390",
    "end": "1922730"
  },
  {
    "text": "and doing all the presentation logic as the name implies the presentation logic",
    "start": "1922730",
    "end": "1927980"
  },
  {
    "text": "can be something like the date is formatted like for Europeans or for Americans which is different or it can",
    "start": "1927980",
    "end": "1935510"
  },
  {
    "text": "be even something like the date is formatted formatted in a relative way so",
    "start": "1935510",
    "end": "1940880"
  },
  {
    "text": "for example if you use any Twitter application use sometimes who prefer to",
    "start": "1940880",
    "end": "1947330"
  },
  {
    "text": "have the date represented as 30 seconds ago or two days ago instead of at that",
    "start": "1947330",
    "end": "1954830"
  },
  {
    "text": "moment in time I prefer to have to know how long has passed since this tweet",
    "start": "1954830",
    "end": "1960980"
  },
  {
    "text": "than having something presented to me as the actual time date and time for that",
    "start": "1960980",
    "end": "1967340"
  },
  {
    "text": "event so here you have a presentation logic you can change that behavior and",
    "start": "1967340",
    "end": "1973220"
  },
  {
    "text": "this logic will happen here in the presenter the interactor the interactor",
    "start": "1973220",
    "end": "1978260"
  },
  {
    "text": "is the logic the business logic of our application this is where the use case",
    "start": "1978260",
    "end": "1983990"
  },
  {
    "text": "the use story lists happens and this interactor a is agnostic of the",
    "start": "1983990",
    "end": "1993170"
  },
  {
    "text": "persistence that we use and the presentation that we are going to do",
    "start": "1993170",
    "end": "1998420"
  },
  {
    "text": "with it so it only takes care of the business logic of what we want to do",
    "start": "1998420",
    "end": "2004950"
  },
  {
    "text": "then we have this repository pattern this is a class that obstructs access to",
    "start": "2004950",
    "end": "2012820"
  },
  {
    "text": "our data and it can be using a web service connector so I'm gonna be using",
    "start": "2012820",
    "end": "2019660"
  },
  {
    "text": "an API from somewhere else or it can be used in local persistence here or a",
    "start": "2019660",
    "end": "2025570"
  },
  {
    "text": "combination of both or I can be used a mash-up I can be using a mash-up of many",
    "start": "2025570",
    "end": "2030790"
  },
  {
    "text": "web services these will abstract the information that comes from there let's say that I want",
    "start": "2030790",
    "end": "2038170"
  },
  {
    "text": "to be able to rent a bike if there is Sun in some place so I'm not accessing",
    "start": "2038170",
    "end": "2044500"
  },
  {
    "text": "an API for the bike renting service and another one for the weather service so I",
    "start": "2044500",
    "end": "2050648"
  },
  {
    "text": "can I don't know how mashup these information and send it to the user in a",
    "start": "2050649",
    "end": "2056710"
  },
  {
    "text": "way that is useful to them ok so what I",
    "start": "2056710",
    "end": "2062139"
  },
  {
    "text": "will do in order to test my business logic despite of the persistence is to",
    "start": "2062140",
    "end": "2067179"
  },
  {
    "text": "isolate this interactor which I will do by having protocols that define the",
    "start": "2067179",
    "end": "2072780"
  },
  {
    "text": "abstractions of these two layers and this is how it's done this is a very",
    "start": "2072780",
    "end": "2079450"
  },
  {
    "text": "easy interactor and this is in order to present a list of speakers and what I'm",
    "start": "2079450",
    "end": "2086919"
  },
  {
    "text": "having here is the name of the interactor it has a relationship with",
    "start": "2086919",
    "end": "2092110"
  },
  {
    "text": "the entity gateway and it has another relationship with the presenter and as",
    "start": "2092110",
    "end": "2098830"
  },
  {
    "text": "you can see here I only have an initializer that will take the data the",
    "start": "2098830",
    "end": "2106180"
  },
  {
    "text": "connection to the entity gateway and this is the method that takes care of my",
    "start": "2106180",
    "end": "2112570"
  },
  {
    "text": "business logic what I do here is method says what is going to do is show all the",
    "start": "2112570",
    "end": "2119080"
  },
  {
    "text": "speakers and it gets their entities from the entity gateway by fetching the data",
    "start": "2119080",
    "end": "2124180"
  },
  {
    "text": "from this repository and then it converts this data into something that",
    "start": "2124180",
    "end": "2129820"
  },
  {
    "text": "can be used by the presenter which an abstraction is an abstract is a value",
    "start": "2129820",
    "end": "2135849"
  },
  {
    "text": "that will be passed on to the presenter in order for each to modified and tell",
    "start": "2135849",
    "end": "2141819"
  },
  {
    "text": "it tell the view what it has to do very easy so how do I test that well so",
    "start": "2141819",
    "end": "2149680"
  },
  {
    "start": "2147000",
    "end": "2543000"
  },
  {
    "text": "there's no thing not much that I have to do here I can create a new memory",
    "start": "2149680",
    "end": "2155880"
  },
  {
    "text": "repository that has an object and I can check whether this is passed on to the",
    "start": "2155880",
    "end": "2164710"
  },
  {
    "text": "presenter properly so I have mock for the presenter and then I will be",
    "start": "2164710",
    "end": "2170109"
  },
  {
    "text": "checking whether these data matches the data that I have in there in this fake",
    "start": "2170109",
    "end": "2177150"
  },
  {
    "text": "repository notice here that I ignore the case and this is using a guard statement",
    "start": "2177150",
    "end": "2184059"
  },
  {
    "text": "ignore the case in which both a lists both arrays don't have the same number",
    "start": "2184059",
    "end": "2191470"
  },
  {
    "text": "of elements because it makes no sense I mean if I have three speakers I want to show three speakers to the final",
    "start": "2191470",
    "end": "2199119"
  },
  {
    "text": "presenter very easy to test I don't need anything related to a core data in order",
    "start": "2199119",
    "end": "2207190"
  },
  {
    "text": "or a web service it is crazy to write a unit test that talks to a web service",
    "start": "2207190",
    "end": "2212470"
  },
  {
    "text": "and provides you with the data from the web service in and exercises that",
    "start": "2212470",
    "end": "2219059"
  },
  {
    "text": "because the delays of the web services probably all of you have noticed that running tests in Swift at least for me",
    "start": "2219059",
    "end": "2226390"
  },
  {
    "text": "it takes longer than then it did for objective-c because well the compiling",
    "start": "2226390",
    "end": "2232660"
  },
  {
    "text": "process is well can be better okay then also it is true that it takes a while at",
    "start": "2232660",
    "end": "2241599"
  },
  {
    "text": "least for me to to have this running into the simulator or maybe my machine is getting old but it's only 1/2 years",
    "start": "2241599",
    "end": "2248260"
  },
  {
    "text": "old so I don't know but the thing is that this is not the case that we want",
    "start": "2248260",
    "end": "2257109"
  },
  {
    "text": "to have something that goes to the network brings the data and we exercise",
    "start": "2257109",
    "end": "2262539"
  },
  {
    "text": "this data into the application so what we do want to have is an",
    "start": "2262539",
    "end": "2268280"
  },
  {
    "text": "abstraction of this information that can be fed into this a use case and that we",
    "start": "2268280",
    "end": "2275420"
  },
  {
    "text": "can test properly here finally the testing of the traits and I didn't want",
    "start": "2275420",
    "end": "2286190"
  },
  {
    "text": "to have a protocol that you're not familiar with so and I didn't want to",
    "start": "2286190",
    "end": "2292550"
  },
  {
    "text": "spend a lot of time explaining what protocol extension could be so I decided",
    "start": "2292550",
    "end": "2299270"
  },
  {
    "text": "to use the one that is explained at the WWDC talk of this year the talk is",
    "start": "2299270",
    "end": "2306950"
  },
  {
    "text": "called swift in practice and it allows you to have enumerations for the segways",
    "start": "2306950",
    "end": "2312050"
  },
  {
    "text": "in your view controllers I think it's a nice idea and if you want an explanation",
    "start": "2312050",
    "end": "2318050"
  },
  {
    "text": "of how this protocol station works you can go and view this talk which I think",
    "start": "2318050",
    "end": "2326030"
  },
  {
    "text": "it's a very nice one so the implementation that I have here is",
    "start": "2326030",
    "end": "2332290"
  },
  {
    "text": "straight from this talk and is a protocol that it just defines this type",
    "start": "2332290",
    "end": "2338480"
  },
  {
    "text": "alias is a say segue identifier that it has to be real representable which means",
    "start": "2338480",
    "end": "2344480"
  },
  {
    "text": "that it had in my every case will have a row case a row value and this a these",
    "start": "2344480",
    "end": "2352400"
  },
  {
    "text": "are the two methods that is suffering the one is in order to perform a segue with an identifier by using one of these",
    "start": "2352400",
    "end": "2359510"
  },
  {
    "text": "inin cases and another one here is the segue identifier for this segue case for",
    "start": "2359510",
    "end": "2368540"
  },
  {
    "text": "this enum value that will be used in order to have a switch that goes through",
    "start": "2368540",
    "end": "2375260"
  },
  {
    "text": "the cases instead of the strings of the identifiers so how do you test that well",
    "start": "2375260",
    "end": "2384830"
  },
  {
    "text": "it is quite easy the things that you have to do here are to have a class that",
    "start": "2384830",
    "end": "2391700"
  },
  {
    "text": "uses that code and how do you do that you do a mock that is the class that you",
    "start": "2391700",
    "end": "2397400"
  },
  {
    "text": "want to that will implement that protocol here so here this is the mock class and is",
    "start": "2397400",
    "end": "2405620"
  },
  {
    "text": "not only implemented UAV control which was one of the requirements of the protocol of the local station Suri",
    "start": "2405620",
    "end": "2412520"
  },
  {
    "text": "but it is also implementing these protocols tension that I mentioned so what I have here is these two",
    "start": "2412520",
    "end": "2421340"
  },
  {
    "text": "identifiers for these two segues fictitious ones obviously but I also",
    "start": "2421340",
    "end": "2427520"
  },
  {
    "text": "have a method here that is overridden and that will be a the one that records",
    "start": "2427520",
    "end": "2434270"
  },
  {
    "text": "the the call to this perform segue with",
    "start": "2434270",
    "end": "2440000"
  },
  {
    "text": "identifier you know the difference between mocks and stubs stab is something that tells you what you want",
    "start": "2440000",
    "end": "2446630"
  },
  {
    "text": "to hear and a mock is something that tells you what you want to hear and records what you said okay so this these",
    "start": "2446630",
    "end": "2456830"
  },
  {
    "text": "are called nanny cams in States and I like the ones that you have in a bear",
    "start": "2456830",
    "end": "2462590"
  },
  {
    "text": "that you have a nanny with the babies and you want to see what she's doing with the babies",
    "start": "2462590",
    "end": "2468740"
  },
  {
    "text": "so these nanny cams are closer to mocks okay so this mark here is recording the",
    "start": "2468740",
    "end": "2476870"
  },
  {
    "text": "parameters of the of that have been used with this call and what we do then is to",
    "start": "2476870",
    "end": "2485480"
  },
  {
    "text": "check whether these perform segue with identifier invokes the classic version",
    "start": "2485480",
    "end": "2491930"
  },
  {
    "text": "so it talks to the actual method and whether the parameters are the right",
    "start": "2491930",
    "end": "2497540"
  },
  {
    "text": "ones so it uses this the first segue identifier in first case and uses the second one in the second case very easy",
    "start": "2497540",
    "end": "2505160"
  },
  {
    "text": "then I've been testing my protocol extension besides a I mean in despite it",
    "start": "2505160",
    "end": "2514970"
  },
  {
    "text": "not been applied until it has a class I don't need to have the actual class",
    "start": "2514970",
    "end": "2520070"
  },
  {
    "text": "there I mean I don't have to try this protocol station for every class that it is applied to I instead test the",
    "start": "2520070",
    "end": "2529340"
  },
  {
    "text": "protocol station by itself so that value of the results of these",
    "start": "2529340",
    "end": "2534990"
  },
  {
    "text": "tests can be applied to every other view controller that I apply to this",
    "start": "2534990",
    "end": "2540570"
  },
  {
    "text": "particular station too so let me",
    "start": "2540570",
    "end": "2549270"
  },
  {
    "start": "2543000",
    "end": "2575000"
  },
  {
    "text": "summarize and then I will take as many questions as you wish after all these",
    "start": "2549270",
    "end": "2555960"
  },
  {
    "text": "tests that we have been talking about",
    "start": "2555960",
    "end": "2561230"
  },
  {
    "text": "the thing that you do is that you continuously improve the resource of",
    "start": "2561230",
    "end": "2568710"
  },
  {
    "text": "your application by running a new test a new test that covers more cases more of",
    "start": "2568710",
    "end": "2576600"
  },
  {
    "text": "your use case and that takes you to a higher level and all these tests can be",
    "start": "2576600",
    "end": "2583380"
  },
  {
    "text": "applied to these a different parts of",
    "start": "2583380",
    "end": "2588930"
  },
  {
    "text": "the architecture so if you have an architecture that is define as the one",
    "start": "2588930",
    "end": "2594210"
  },
  {
    "text": "that I showed to you and that differentiates and that isolates each",
    "start": "2594210",
    "end": "2599280"
  },
  {
    "text": "part of the application each responsibility of your application it is",
    "start": "2599280",
    "end": "2605220"
  },
  {
    "text": "easier to write all those tests let me show you because sometimes unlike people when we",
    "start": "2605220",
    "end": "2614130"
  },
  {
    "text": "you do something like that",
    "start": "2614130",
    "end": "2617119"
  },
  {
    "text": "so this is a view controller yes a view controller and as you can see here I",
    "start": "2622640",
    "end": "2629599"
  },
  {
    "text": "don't know if you can read that these are 92 tests okay but notice here",
    "start": "2629599",
    "end": "2640730"
  },
  {
    "text": "that these are the tests for the appdelegate these are the tests for the memory",
    "start": "2640730",
    "end": "2648319"
  },
  {
    "text": "repository here this is a connector I didn't talk about those here the this is",
    "start": "2648319",
    "end": "2657980"
  },
  {
    "text": "the the protocol station that I mentioned the interactor and also the",
    "start": "2657980",
    "end": "2664099"
  },
  {
    "text": "classes that I use for displaying the data so when I run this test suit then I",
    "start": "2664099",
    "end": "2671809"
  },
  {
    "text": "get a very nice message saying test succeeded which means that every one of",
    "start": "2671809",
    "end": "2679609"
  },
  {
    "text": "mine 92 tests have passed and that this",
    "start": "2679609",
    "end": "2686359"
  },
  {
    "text": "view controller is fully tested and don't take my word for that you go here",
    "start": "2686359",
    "end": "2694630"
  },
  {
    "text": "oh yes a second",
    "start": "2705570",
    "end": "2709670"
  },
  {
    "text": "this is to get the go there coverage data and I have to run the test again",
    "start": "2714560",
    "end": "2720050"
  },
  {
    "text": "and for this piece of code that I'm",
    "start": "2720050",
    "end": "2725180"
  },
  {
    "text": "showing to you",
    "start": "2725180",
    "end": "2727869"
  },
  {
    "text": "this is the coverage Oh my class okay so",
    "start": "2732890",
    "end": "2741759"
  },
  {
    "text": "well not bad you can do fully tests of",
    "start": "2741759",
    "end": "2748339"
  },
  {
    "text": "your view controllers you can fully test your persistence you can fully test your",
    "start": "2748339",
    "end": "2756200"
  },
  {
    "text": "business logic okay so let me go back to",
    "start": "2756200",
    "end": "2763160"
  },
  {
    "text": "the presentation",
    "start": "2763160",
    "end": "2765640"
  },
  {
    "start": "2770000",
    "end": "3249000"
  },
  {
    "text": "thank you very much yeah I would love to get questions and I will try to answer",
    "start": "2772780",
    "end": "2779500"
  },
  {
    "text": "them as well as I can in any case if you want to do any tweets afterwards please",
    "start": "2779500",
    "end": "2788050"
  },
  {
    "text": "include this hashtag so I can look for it and try to answer if you think of a question after session and please please do rate",
    "start": "2788050",
    "end": "2798370"
  },
  {
    "text": "this session I would love to know what you think about what I told you thank",
    "start": "2798370",
    "end": "2804100"
  },
  {
    "text": "you well not really I mean like the",
    "start": "2804100",
    "end": "2823150"
  },
  {
    "text": "thoughts about BDD BDD let's start with",
    "start": "2823150",
    "end": "2830470"
  },
  {
    "text": "that BD DS behavior driven development and one of the goals of BDD is to be",
    "start": "2830470",
    "end": "2835840"
  },
  {
    "text": "able to express how the application should behave in terms of something that",
    "start": "2835840",
    "end": "2842650"
  },
  {
    "text": "can be written most of the times in a way that even the user can express clearly most of the times I don't think",
    "start": "2842650",
    "end": "2851590"
  },
  {
    "text": "this really works somewhere like these domain-specific languages are not really",
    "start": "2851590",
    "end": "2858330"
  },
  {
    "text": "that expressive for the common users so",
    "start": "2858330",
    "end": "2863440"
  },
  {
    "text": "we finally end doing something that is like well ok you know that what the use",
    "start": "2863440",
    "end": "2868570"
  },
  {
    "text": "of one so do you translate it to this language and then we use that information in a way that can be used as",
    "start": "2868570",
    "end": "2876760"
  },
  {
    "text": "the definition of the test nothing wrong with that but I don't think that it",
    "start": "2876760",
    "end": "2882490"
  },
  {
    "text": "helps that much if you do want to do testing I mean like I'm all for it I",
    "start": "2882490",
    "end": "2887560"
  },
  {
    "text": "mean if we did is your thing go for it I don't have anything against BDD what I'm",
    "start": "2887560",
    "end": "2893230"
  },
  {
    "text": "just saying is that I don't think that the common user the business people can",
    "start": "2893230",
    "end": "2898630"
  },
  {
    "text": "use these languages to express what the application have to do",
    "start": "2898630",
    "end": "2905220"
  },
  {
    "text": "any more questions are you testing like that do you get like 100% coverage no",
    "start": "2908850",
    "end": "2916740"
  },
  {
    "text": "who do you love - really are you gonna try who's coming to the workshop in",
    "start": "2916740",
    "end": "2923620"
  },
  {
    "text": "today's rate okay so there we will be",
    "start": "2923620",
    "end": "2929530"
  },
  {
    "text": "trying to do TDD and we will be trying to do this improvement of the of the",
    "start": "2929530",
    "end": "2936600"
  },
  {
    "text": "architecture in order to have these tests running sorry if you have",
    "start": "2936600",
    "end": "2943290"
  },
  {
    "text": "something first thing is that well you",
    "start": "2943290",
    "end": "2955120"
  },
  {
    "text": "actually can test the decor data a stack if you want to I've been doing this for",
    "start": "2955120",
    "end": "2963240"
  },
  {
    "text": "some time and I think that is perfectly feasible and what you don't actually",
    "start": "2963240",
    "end": "2969220"
  },
  {
    "text": "have to do is to test the data itself I mean like I don't think it's a good idea to test that they can take the the",
    "start": "2969220",
    "end": "2977260"
  },
  {
    "text": "contents of the database are what you expect it is not also a good idea to do",
    "start": "2977260",
    "end": "2983170"
  },
  {
    "text": "the fetch of the data based on said that",
    "start": "2983170",
    "end": "2988630"
  },
  {
    "text": "you have created and yes check that the fetch is properly done because as I said",
    "start": "2988630",
    "end": "2995350"
  },
  {
    "text": "at the beginning this is Apple's code and you should test apples code the",
    "start": "2995350",
    "end": "3002550"
  },
  {
    "text": "thing that you could do instead is to be able to create some a memory persistent",
    "start": "3002550",
    "end": "3012900"
  },
  {
    "text": "store which is very easily done and what you do then is you pass you create this",
    "start": "3012900",
    "end": "3020310"
  },
  {
    "text": "stack as a fake one the stack that you do you use for testing and then each",
    "start": "3020310",
    "end": "3026760"
  },
  {
    "text": "subclass of a managed object will be run",
    "start": "3026760",
    "end": "3031980"
  },
  {
    "text": "within the this new stack this new stack will be any memory persist",
    "start": "3031980",
    "end": "3038880"
  },
  {
    "text": "and store it will share the the the mom",
    "start": "3038880",
    "end": "3047579"
  },
  {
    "text": "I don't remember the meaning of the letters the the managed object model",
    "start": "3047579",
    "end": "3054900"
  },
  {
    "text": "thank you so the managed object model will be shared by both stacks the only",
    "start": "3054900",
    "end": "3060119"
  },
  {
    "text": "difference the only actual difference will be that for the real one you will be persisting the data in a file or in",
    "start": "3060119",
    "end": "3067890"
  },
  {
    "text": "many while in the data that you use for testing the data is not going to be",
    "start": "3067890",
    "end": "3074430"
  },
  {
    "text": "persistent because it will be created in memory my recommendation is that you create this stack for each of the tests",
    "start": "3074430",
    "end": "3081869"
  },
  {
    "text": "so when you do the setup and the teardown of your test case you create a",
    "start": "3081869",
    "end": "3087809"
  },
  {
    "text": "stack you run your test then you destroy the stack and again it looks like a lot",
    "start": "3087809",
    "end": "3095190"
  },
  {
    "text": "of work it probably is it takes longer than yes a variable but since it's",
    "start": "3095190",
    "end": "3102180"
  },
  {
    "text": "happening in memory it is very fast so I have a lot of tests running core data",
    "start": "3102180",
    "end": "3107730"
  },
  {
    "text": "and I don't think that's an issue you can really run them properly but this what I what I was saying is that these",
    "start": "3107730",
    "end": "3114660"
  },
  {
    "text": "will have to happen at the persistence layer while this is completely unrelated",
    "start": "3114660",
    "end": "3121589"
  },
  {
    "text": "to what happens at the business logic and completely unrelated to what happens",
    "start": "3121589",
    "end": "3127079"
  },
  {
    "text": "at the persistence and the presentation logic you can you must be able to test",
    "start": "3127079",
    "end": "3133109"
  },
  {
    "text": "each one of these layers separately the",
    "start": "3133109",
    "end": "3138269"
  },
  {
    "text": "requirements for writing a good clean architecture is that the layers that you",
    "start": "3138269",
    "end": "3145440"
  },
  {
    "text": "use have a dependency that can only go inwards so in the out outer layer of",
    "start": "3145440",
    "end": "3154259"
  },
  {
    "text": "your a code you have things that you may",
    "start": "3154259",
    "end": "3159630"
  },
  {
    "text": "be willing to change in the future like for example the UI or the database if",
    "start": "3159630",
    "end": "3169230"
  },
  {
    "text": "let's say that now you want to change from core data - real or the other way around or you",
    "start": "3169230",
    "end": "3176430"
  },
  {
    "text": "want to use police because you have realized that you don't need that much power there same thing happens with the",
    "start": "3176430",
    "end": "3183540"
  },
  {
    "text": "UI and probably you say okay I'm using the UI the one that apple provides me with for the mobile phone yeah and now",
    "start": "3183540",
    "end": "3191310"
  },
  {
    "text": "you want to address the Apple TV and now you want to address the watch OS so if",
    "start": "3191310",
    "end": "3199260"
  },
  {
    "text": "you have your views completely separated from your business logic this is going",
    "start": "3199260",
    "end": "3205470"
  },
  {
    "text": "to be very much easier a lot okay because your view layer can be even a",
    "start": "3205470",
    "end": "3213900"
  },
  {
    "text": "different one for each of your targets so your targets will be using a",
    "start": "3213900",
    "end": "3219390"
  },
  {
    "text": "different view depending on whether you are addressing the Watchers or the Apple",
    "start": "3219390",
    "end": "3227460"
  },
  {
    "text": "TV or the mobile phone I'm all set okay so did you solve the old question so",
    "start": "3227460",
    "end": "3235740"
  },
  {
    "text": "thank you very much feel free to calling me any mess",
    "start": "3235740",
    "end": "3241460"
  },
  {
    "text": "you",
    "start": "3247400",
    "end": "3249460"
  }
]