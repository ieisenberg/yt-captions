[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "Hello, everyone. My name is Rebecca \nParsons. And we're here to discuss   software technologies that stand the test of time. \nAnd we have eight panelists who are each going to  ",
    "start": "8480",
    "end": "20720"
  },
  {
    "text": "propose software technology, and then the other \npanelists will weigh in on what they think of that  ",
    "start": "21280",
    "end": "28000"
  },
  {
    "text": "idea. So, Nicki Watt, let's start with you.\nAll right. Thanks very much, Rebecca.  ",
    "start": "28000",
    "end": "32720"
  },
  {
    "start": "29000",
    "end": "300000"
  },
  {
    "text": "So, my humble submission is SQL, \nthe Structured Query Language,   used to access and maintain relational databases \nsince the dawn of time. I think the roots go all  ",
    "start": "33440",
    "end": "42079"
  },
  {
    "text": "the way back to '74, when Chamberlain and Boyce \nactually published their sort of famous paper,  ",
    "start": "42080",
    "end": "47200"
  },
  {
    "text": "and it's, really that language that we have today \nis based on what that was sort of 45 years ago.  So, for me, the sort of three acceptance criteria \nthat I had was what was the original purpose,  ",
    "start": "47200",
    "end": "56800"
  },
  {
    "text": "does it still fulfill that, has it \nactually evolved gracefully over time,   and how prevalent is its usage today? So, I think, \non the first point, when relational databases  ",
    "start": "56800",
    "end": "67600"
  },
  {
    "text": "originally were created by Ted Codd, the \nquery language back then was based on maths.   But they really wanted to do it in a way where it \ncould be more accessible to users that were not  ",
    "start": "67600",
    "end": "78080"
  },
  {
    "text": "trained in mathematics and computer programming.\nToday, you have engineers, data scientists,   your basic sort of Joe Soap, who can \ngenerally write SQL, write SQL to get  ",
    "start": "78080",
    "end": "87920"
  },
  {
    "text": "data out and into the database. Even my dad, who's \na bank manager, can actually write SQL as well.  ",
    "start": "87920",
    "end": "93200"
  },
  {
    "text": "So, I think it ticks that box, hopefully. \nBut it's used across the board, not just to   query the database, but also to maintain it.\nI think in terms of evolution, the language  ",
    "start": "93200",
    "end": "105280"
  },
  {
    "text": "structure and the base syntax have remained the \nsame, although it has had different evolutions.  ",
    "start": "105280",
    "end": "111200"
  },
  {
    "text": "For SQL, I think it was '86, where the very first \nANSI standard had the support for the select,  ",
    "start": "111200",
    "end": "117520"
  },
  {
    "text": "insert, update, and delete statements, \nexactly the same ones that we have today.   SQL 92 then introduced things like outer \njoins, set operations. And even in 2003,  ",
    "start": "117520",
    "end": "127439"
  },
  {
    "text": "there was the introduction of XML querying through \nXQuery and stuff, which you can argue whether  ",
    "start": "127440",
    "end": "133200"
  },
  {
    "text": "that's a good thing or not. But the language \nevolved as more things kind of came along. ",
    "start": "133200",
    "end": "137520"
  },
  {
    "text": "I think whilst I concede that SQL itself doesn't \nhave one sort of standard to rule them all,   the dialects are all kind of different, I \nthink the core has really remained true. And,  ",
    "start": "138400",
    "end": "147680"
  },
  {
    "text": "in terms of its prevalence, I \nthink you really can't escape SQL.   It's used for every single relational database \nthat's out there. It's de facto query standard,  ",
    "start": "147680",
    "end": "156640"
  },
  {
    "text": "so prevalent, maybe, that a whole class of other \ndatabases are named as being not SQL. And so,  ",
    "start": "157200",
    "end": "164720"
  },
  {
    "text": "in my conclusion, I'd just say SELECT * FROM table \nis as well known today as it was back in '86. ",
    "start": "166000",
    "end": "171680"
  },
  {
    "text": "Yep. Rebuttals. Or support.\nI don't have a rebuttal, but I do  ",
    "start": "172560",
    "end": "180640"
  },
  {
    "text": "support that that's a beautiful technology to \nmention. So, kudos for that. In fact, I would  ",
    "start": "180640",
    "end": "187040"
  },
  {
    "text": "say, probably, it goes beyond SQL itself. \nFor example, Microsoft's efforts towards  ",
    "start": "187840",
    "end": "193280"
  },
  {
    "text": "Link were inspired to take that idea into data \nin memory, not just the database itself. Though,  ",
    "start": "193280",
    "end": "199760"
  },
  {
    "text": "I spent my youth with object-oriented \ndatabases. So, I escaped SQL  ",
    "start": "200880",
    "end": "206080"
  },
  {
    "text": "for a number of years until I was thrown back \ninto it. But I can definitely appreciate that. ",
    "start": "207520",
    "end": "212880"
  },
  {
    "text": "My possible rebuttal would come \nfrom the perspective of DBAs.   SQL is a tremendously powerful declarative \nlanguage that allows you to ask almost  ",
    "start": "215200",
    "end": "223520"
  },
  {
    "text": "impossible questions against data structures \nthat they were never designed to answer.   So, it produces a huge abuse of \nperfectly good relational databases.  ",
    "start": "223520",
    "end": "231440"
  },
  {
    "text": "But it is a very powerful language.\nYes That's fair enough. I was torn as to whether  ",
    "start": "231440",
    "end": "239920"
  },
  {
    "text": "to go for a relational database itself, or whether \nto go for SQL, but landed up going for SQL. Good choice.\nVery good choice. ",
    "start": "239920",
    "end": "245599"
  },
  {
    "text": "I might jump in here. I come from statistics \nand data science and more from the education  ",
    "start": "247520",
    "end": "254080"
  },
  {
    "text": "side. I had a professor at Carnegie \nMellon. What I find interesting about   how the use of SQL has changed is that even when \nI was doing my kind of undergraduate degrees,  ",
    "start": "254080",
    "end": "260160"
  },
  {
    "text": "and even maybe the first master's degree, \nyou know, SQL was very much, like,  ",
    "start": "260160",
    "end": "264960"
  },
  {
    "text": "\"Yes, you probably should learn it while you're \nhere, but, like, don't worry about it. You're   not necessarily gonna need it.\" You know, etc.\nIn the last 10, 20 years, watching how important   it's become in our education/training programs, \nall of our students who are graduating with  ",
    "start": "265680",
    "end": "274800"
  },
  {
    "text": "statistics, machine learning, and data science \ndegrees are all getting exposure to SQL.   So it's been around for a long time, \nit's interesting to watch kind of the  ",
    "start": "275760",
    "end": "285280"
  },
  {
    "text": "educational programs are now really focusing \non it as well as other, you know, relational   databases and languages, and stuff. From the \neducation side of things, we are embracing it,  ",
    "start": "285280",
    "end": "296400"
  },
  {
    "text": "as well.\nCool.  Nicki, any closing comments?\nNo, I don't have anything else to close. Let's move on then to Eberhard.\nMy proposal would be NeXTSTEP. NeXTSTEP is  ",
    "start": "296400",
    "end": "308160"
  },
  {
    "start": "300000",
    "end": "540000"
  },
  {
    "text": "an operating system that NeXT built, the company \nthat Steve Jobs did after he was fired from Apple  ",
    "start": "308160",
    "end": "313920"
  },
  {
    "text": "in 1985. Its UNIX-based operating system pioneered \ntechnologies such as Display PostScript for  ",
    "start": "313920",
    "end": "320160"
  },
  {
    "text": "the graphical user interface, object-oriented \ndevelopment with Interface Builder and   Project Builder, and some pretty interesting \napplications were built on NeXTSTEP, such as  ",
    "start": "320160",
    "end": "329280"
  },
  {
    "text": "the game Doom. And also, obviously, \nthe first web browser and the first   web server were created on NeXT at CERN in Geneva.\nThe operating system originally worked on  ",
    "start": "329280",
    "end": "342400"
  },
  {
    "text": "NeXT hardware. Just 50,000 machines were built. At \none point, they quit production, so it seemed like  ",
    "start": "342400",
    "end": "348000"
  },
  {
    "text": "a failure. I think that's the interesting point \nabout technologies that stand the test of time,  ",
    "start": "348000",
    "end": "354080"
  },
  {
    "text": "that they evolve and adapt. So it was then ported \nto other platforms, HP, Sun, and Intel. The API  ",
    "start": "354080",
    "end": "361840"
  },
  {
    "text": "was ported over to Windows with OpenStack for \nWindows. So, sort of write once, run everywhere,  ",
    "start": "361840",
    "end": "368480"
  },
  {
    "text": "and it lost that battle to Java, so again, it had \nto shift, and NeXT was bought by Apple in 1996. ",
    "start": "368480",
    "end": "375760"
  },
  {
    "text": "Nowadays, Xcode, the development environment \non macOS, is based on the interface with their  ",
    "start": "376480",
    "end": "382560"
  },
  {
    "text": "project builder. The dock that we have on macOS \nis originally from NeXTSTEP. Display PDF is  ",
    "start": "382560",
    "end": "389840"
  },
  {
    "text": "an updated version of Display PostScript. And the \nCocoa NS classes... NS is NeXTSTEP, and nowadays,  ",
    "start": "390720",
    "end": "400240"
  },
  {
    "text": "it runs on iOS and Watchaware. So, those are \npretty much-updated versions of NeXTSTEP. So,  ",
    "start": "400240",
    "end": "407680"
  },
  {
    "text": "it runs on hundreds of millions of devices.\nSo, I think it's interesting how such a  ",
    "start": "407680",
    "end": "413919"
  },
  {
    "text": "sort of niche technology that was pretty \nmuch ahead of its time is the center of  ",
    "start": "413920",
    "end": "422480"
  },
  {
    "text": "so many devices nowadays and had such a long \nhistory being ported from the original NeXT  ",
    "start": "422480",
    "end": "429280"
  },
  {
    "text": "hardware over to Power PC, Intel, ARM processors, \nmobile platforms these days. And nowadays,  ",
    "start": "429280",
    "end": "436080"
  },
  {
    "text": "it's probably part of our everyday life, even \nthough it seemed like a failure at first sight. ",
    "start": "436080",
    "end": "440720"
  },
  {
    "text": "Excellent. Responses.\nIf it's possible to make somebody nostalgic  ",
    "start": "441760",
    "end": "448320"
  },
  {
    "text": "by talking about technology, you get the badge \nof merit for that. I'm almost in tears right now.  ",
    "start": "448320",
    "end": "453920"
  },
  {
    "text": "I spent my graduate student life playing with \nNeXT computers late in the night. So, I couldn't  ",
    "start": "453920",
    "end": "460000"
  },
  {
    "text": "agree more. I had a dislike, honestly, for Mac \ncomputers back in time while all my friends would  ",
    "start": "460000",
    "end": "466560"
  },
  {
    "text": "be using it. I was kind of wondering why, until I \nstarted using it when I discovered, \"Oh, my gosh.  ",
    "start": "466560",
    "end": "472639"
  },
  {
    "text": "This is NeXT being reimplemented on the Mac.\" So \nI couldn't agree more on this particular topic. ",
    "start": "472640",
    "end": "479680"
  },
  {
    "text": "And there is a NeXT manual right \nbehind me if you look closely. ",
    "start": "482800",
    "end": "487280"
  },
  {
    "text": "Is that what you were trying to point to? I think your point about evolution is an \nimportant aspect of this technology as  ",
    "start": "488000",
    "end": "500000"
  },
  {
    "text": "standing the test of time is \nan important one. I must admit,   I was quite surprised when you said \nNeXT. It's like, \"Wait a minute.\" ",
    "start": "501600",
    "end": "508640"
  },
  {
    "text": "Yes. I also found the contrast interesting \nconcerning SQL because that's the technology  ",
    "start": "510560",
    "end": "516560"
  },
  {
    "text": "that has been around for quite a long \ntime, and it never really changed,   while this is something where, the market \nchanged, and the whole idea changed from being  ",
    "start": "516560",
    "end": "526080"
  },
  {
    "text": "more like an object-oriented API developer \nfocus. It was a hardware store before that,  ",
    "start": "526080",
    "end": "532160"
  },
  {
    "text": "and now, it is something that, as I said, is the \nfoundation of lots of mobile devices nowadays. ",
    "start": "532160",
    "end": "538319"
  },
  {
    "text": "All right. Well, let's move \non then. Venkat, you're up. Venkat Subramaniam : All right. So, \nI was gonna talk about technology,  ",
    "start": "538320",
    "end": "545680"
  },
  {
    "start": "540000",
    "end": "1012000"
  },
  {
    "text": "but I wanted to broaden that to something a little \nbit more, and then tie that back into technology.   ",
    "start": "545680",
    "end": "550960"
  },
  {
    "text": "I'm gonna say it's our desire to \nsimplify the complex world around us.  ",
    "start": "551760",
    "end": "558320"
  },
  {
    "text": "If you look at everything we do as \nprogrammers and various other things,   we just get into so many complexities. When I look \nat programmers, people trying to solve problems,  ",
    "start": "558880",
    "end": "569040"
  },
  {
    "text": "what beats us down every single day is complexity. \nSo the question I wanna ask is, you know,  ",
    "start": "569600",
    "end": "574800"
  },
  {
    "text": "what can we do to mitigate the complexity?\nAny kind of technology solutions that can help us  ",
    "start": "574800",
    "end": "580959"
  },
  {
    "text": "in getting through our lives, managing all \nthe things we have to build. In that regard,  ",
    "start": "583920",
    "end": "590320"
  },
  {
    "text": "I see functional programming as the one that has \nstood the time for managing complexity. I don't  ",
    "start": "590320",
    "end": "597200"
  },
  {
    "text": "look at functional programming as a tool with \nmonads, as people, you know, threaten everybody  ",
    "start": "597200",
    "end": "602880"
  },
  {
    "text": "else, but I look at functional programming \nas a way to remove accidental complexity. ",
    "start": "602880",
    "end": "609840"
  },
  {
    "text": "Well, in general, when we are working with things, \nwe have to deal with two kinds of complexities, as   we all know, those that are inherent complexity, \nwhich comes from the application and the problem  ",
    "start": "609840",
    "end": "619600"
  },
  {
    "text": "and the domain, and the accidental complexity \nthat often comes from the solution space.  ",
    "start": "619600",
    "end": "624560"
  },
  {
    "text": "While a lot of programmers, I would say, \nprobably most of the programmers are very   familiar with [SP] style of programming, \nhow ironic that something so familiar  ",
    "start": "625920",
    "end": "636959"
  },
  {
    "text": "is yet so complex. And we are that frog \nin the pan being fried and, you know,  ",
    "start": "637520",
    "end": "642800"
  },
  {
    "text": "boiled every day. We have endured this pain, not \nbecause it's simple, it's because it's familiar. ",
    "start": "642800",
    "end": "649600"
  },
  {
    "text": "On the other hand, what is not so familiar \nto us is quite simple because, in functional  ",
    "start": "649600",
    "end": "655759"
  },
  {
    "text": "programming, the code begins to read like the \nproblem statement, and as a result, it becomes a   lot more expressive. In a way, I would say this \nalso, comes back to other activities in human  ",
    "start": "655760",
    "end": "668160"
  },
  {
    "text": "life. You know, if you go back to 1900 and ask \nwhat were the automobiles that were most prominent  ",
    "start": "668160",
    "end": "675279"
  },
  {
    "text": "in the world, those were the electric \ncars that were prominent back in 1900,   which was forgotten, a generation or maybe two \nor three generation of people, who were around  ",
    "start": "675280",
    "end": "686800"
  },
  {
    "text": "were driving gasoline cars, and we are \ngetting excited about electric cars again.",
    "start": "686800",
    "end": "691680"
  },
  {
    "text": "Similarly, it's kind of funny to watch that   a generation of programmers or more have gone \nthrough the imperative style of programming,  ",
    "start": "692240",
    "end": "698959"
  },
  {
    "text": "not even ever getting a taste of functional \nprogramming. And all of a sudden,   just like electric cars, we are excited about \nfunctional programming. So my vote is, first,  ",
    "start": "698960",
    "end": "708720"
  },
  {
    "text": "to reduce accidental complexity, and by way of \ndoing so, is to vote for functional programming. ",
    "start": "708720",
    "end": "716319"
  },
  {
    "text": "So, I'm gonna have a question rather than a \nrebuttal. Do you think that or are you saying that  ",
    "start": "716960",
    "end": "726000"
  },
  {
    "text": "functional programming necessarily creates \nclearer, easier-to-read programs than imperative  ",
    "start": "727200",
    "end": "735040"
  },
  {
    "text": "languages? Or is it perhaps \nmore to do with familiarity and  ",
    "start": "736960",
    "end": "741920"
  },
  {
    "text": "the ability to... You know, you can write \nterrible code that's impenetrable in any language.  ",
    "start": "743120",
    "end": "748400"
  },
  {
    "text": "Do you think it's the case that \nfunctional programming is inherently   clearer and fewer complexities?\nYeah, that's a really good question. I'm  ",
    "start": "750240",
    "end": "758959"
  },
  {
    "text": "gonna say, because of familiarity, the imperative \nstyle is easier to write but harder to read in the  ",
    "start": "758960",
    "end": "767600"
  },
  {
    "text": "long run. And because of unfamiliarity, functional \nis harder to write but easier to read once we get  ",
    "start": "767600",
    "end": "776079"
  },
  {
    "text": "marginally familiar with it. So, fundamentally, \nI do believe that for any given complex problem,  ",
    "start": "776080",
    "end": "783120"
  },
  {
    "text": "imperative style is harder to read. A functional \nstyle, hopefully, well-written, is easier to read. ",
    "start": "783760",
    "end": "789680"
  },
  {
    "text": "Although I will say the scariest program I ever \nsaw was a Lisp program, it was written by somebody  ",
    "start": "789680",
    "end": "796000"
  },
  {
    "text": "who had programmed his entire life in Fortran, \nand so he wrote a Fortran program in Lisp syntax. ",
    "start": "796000",
    "end": "801040"
  },
  {
    "text": "To your point, I had somebody email me a \npiece of code and said, \"I know you're a   big fan of functional programming, so here \nyou go. I wrote one. This is horrible.\"  ",
    "start": "803520",
    "end": "811839"
  },
  {
    "text": "And the person who wrote it said it's \nhorrible. I replied saying, \"I agree.   But here's the refactored code \nif you wanna take a look at it.\" ",
    "start": "812560",
    "end": "818960"
  },
  {
    "text": "It's an interesting point though, as well. \nBecause I think if you look, for example,   at something like Scala, which can do both sorts \nof OO and functional, it's quite interesting to  ",
    "start": "823040",
    "end": "832959"
  },
  {
    "text": "see when an original sort of Java programmer or \nOO programmer, gets hold of Scala. It takes quite  ",
    "start": "832960",
    "end": "839120"
  },
  {
    "text": "a long time before the functional style sometimes \ncomes out and you can get your head around that.  ",
    "start": "839120",
    "end": "843760"
  },
  {
    "text": "So, I think that point is very valid, as well.\nI think I've got one slight rebuttal. I keep  ",
    "start": "844960",
    "end": "850960"
  },
  {
    "text": "coming across people that tell me they love \nfunctional programming. I see lots of practical   functional programming languages. And it's not \nlike we can't learn new stuff. The JavaScript  ",
    "start": "850960",
    "end": "859200"
  },
  {
    "text": "guys learn something new every three months, as \nfar as I can see. And yet, people are still not  ",
    "start": "859200",
    "end": "865040"
  },
  {
    "text": "putting their money where their mouth is \nand betting on functional languages. So,   I don't know. I think something is missing. \nMaybe you need to write another book,  ",
    "start": "865920",
    "end": "873920"
  },
  {
    "text": "Venkat.\nJust a slight remark.   I'm sometimes wondering what the world would \nbe like if, in the '80s, home computers would  ",
    "start": "876800",
    "end": "883120"
  },
  {
    "text": "have shipped with functional programming \nlanguages, like Logo, instead of BASIC.  ",
    "start": "883120",
    "end": "887279"
  },
  {
    "text": "So, then, maybe the world would be very different.\nI think there was one of the early kinds of home  ",
    "start": "888240",
    "end": "896720"
  },
  {
    "text": "PCs, maybe called Oric, that had something like \nLogo or Lisp as its... My memory is failing me. ",
    "start": "896720",
    "end": "907095"
  },
  {
    "text": "I think it was Fog.\nThe SimpleX workstations were native   Lisp machines. They processed the Lisp VM \nin their hardware. So, it has been done. ",
    "start": "907095",
    "end": "915600"
  },
  {
    "text": "But they were quite expensive. I mean, the \nthing is that the kids grew up with imperative  ",
    "start": "917600",
    "end": "923279"
  },
  {
    "text": "programming, so it seems intuitive to us nowadays. \nWhile if they had grown up with functional  ",
    "start": "923280",
    "end": "928560"
  },
  {
    "text": "programming, it would be functional programming \nthat seems to be intuitive for them nowadays.  Could be.\nAny final remarks, Venkat? ",
    "start": "928560",
    "end": "934160"
  },
  {
    "text": "I think you know we should have introduced \nimperative or functional, to begin with.  ",
    "start": "935200",
    "end": "941600"
  },
  {
    "text": "One of the things I do, I moonlight \nand teach part-time at the university.   And I introduced a programming languages course \nmainly with the intention that I want the students  ",
    "start": "942480",
    "end": "951600"
  },
  {
    "text": "to graduate knowing there is no one way to solve \na particular problem. So, I'm not going to say  ",
    "start": "951600",
    "end": "957680"
  },
  {
    "text": "that functional is the right way to do things, \nbut we need to get a taste of different styles   of programming. These are vehicles, and we have \nto choose what's right based on the situation. ",
    "start": "957680",
    "end": "967840"
  },
  {
    "text": "And again, one of the other things I will quickly \nmention is I don't understand why people would pit  ",
    "start": "969600",
    "end": "975440"
  },
  {
    "text": "object-oriented programming, something as opposed \nto functional programming. I don't see them as  ",
    "start": "975440",
    "end": "981040"
  },
  {
    "text": "competing with each other in a lot \nof places. So, I think the real,   you know, enemy to programming is complexity. And \nfunctional programming tries to attack complexity.  ",
    "start": "981040",
    "end": "993120"
  },
  {
    "text": "And that's what I really wanna focus on in terms \nof what we can do with this particular technology,  ",
    "start": "993120",
    "end": "998480"
  },
  {
    "text": "which, surprisingly, has been around for \nsuch a long time. Some of the initial   languages created were functional. And I hope \nin the next few years, we'll come around to  ",
    "start": "998480",
    "end": "1007280"
  },
  {
    "text": "embrace that a lot more than we do today.\nOkay. Thank you. Liz, you're up next.",
    "start": "1007280",
    "end": "1013360"
  },
  {
    "start": "1012000",
    "end": "1240000"
  },
  {
    "text": "All right. So I tried to think of something \nthat I have used recently that I used very  ",
    "start": "1014480",
    "end": "1021760"
  },
  {
    "text": "early on in my kind of programming career. I \nthink it's maybe gonna be a bit controversial   because I don't think it's that great. But \nit's kind of a hammer that a lot of people  ",
    "start": "1021760",
    "end": "1032240"
  },
  {
    "text": "continue to use. And it is the humble Makefile. \nI remember, you know, running make commands  ",
    "start": "1032240",
    "end": "1040480"
  },
  {
    "text": "when I was, you know, a student when I was \nfirst getting into kind of C programming.  Only recently, I've been going back to Makefiles \nbecause I've been doing some work on EBPF.  ",
    "start": "1041120",
    "end": "1051600"
  },
  {
    "text": "Not only am I compiling C, maybe I'm compiling \nsome Go code, as well. Maybe I have, you know,  ",
    "start": "1051600",
    "end": "1057440"
  },
  {
    "text": "targets in different languages. There are \nother tools that you can use to build things,  ",
    "start": "1058560",
    "end": "1064400"
  },
  {
    "text": "but it struck me, I'm using this tool \nthat I first used 30 something years ago.  ",
    "start": "1064400",
    "end": "1070720"
  },
  {
    "text": "I still kind of don't like it in a lot of \nways, but it does the job. So, the Makefile. ",
    "start": "1071360",
    "end": "1079840"
  },
  {
    "text": "I've wasted far too many hours putting \ntabs in the wrong place to ever love Make. ",
    "start": "1081840",
    "end": "1086000"
  },
  {
    "text": "Do you still use it, though?  Not when I can avoid it. But maybe that's what \nLiz was saying, as well. Sometimes, there's a  ",
    "start": "1090480",
    "end": "1096320"
  },
  {
    "text": "Makefile, so you have to just get on with it.\nExactly. I mean, whoever thought that, like,  ",
    "start": "1096320",
    "end": "1101440"
  },
  {
    "text": "different whitespace characters should have, \nlike, different meanings. I remember having   real arguments with PHP in the early days because \na blank line at the end of a file would make  ",
    "start": "1101440",
    "end": "1112559"
  },
  {
    "text": "a difference. So I am not a fan of meaningful \nwhitespace. But I do think Makefiles do the job. ",
    "start": "1112560",
    "end": "1119840"
  },
  {
    "text": "I was gonna say, I wish they had learned from it \nand not go that way to Python. That's one thing   that ticked me off. You know nothing makes \nme madder than significant whitespaces. But,  ",
    "start": "1120960",
    "end": "1131520"
  },
  {
    "text": "Make is such a love-hate relationship. I \nmean, I couldn't agree more with you. Had   you said that you love to Make, we'd have had a \ndifferent conversation, right now, I think. But  ",
    "start": "1132080",
    "end": "1140480"
  },
  {
    "text": "I think we are in violent agreement here.\nI remember spending my youth with Make,   and it's like, \"Who in their right mind would \ndo this stuff?\" But yet, you had to because  ",
    "start": "1141200",
    "end": "1149840"
  },
  {
    "text": "almost everything you did use Make. Not that \nthings that came after made it any better.  ",
    "start": "1149840",
    "end": "1154880"
  },
  {
    "text": "And you kind of have to wonder, is significant \nwhitespace better than angle brackets with Ant?   And that was a disaster for a few years. And I \nwould say the only difference between make and  ",
    "start": "1154880",
    "end": "1164320"
  },
  {
    "text": "Ant is the creator of Ant publicly apologized \nto people for creating such an XML syntax. ",
    "start": "1164320",
    "end": "1170639"
  },
  {
    "text": "But I agree. And, you know, decades later, we \nare still looking for a better way to express  ",
    "start": "1170640",
    "end": "1176720"
  },
  {
    "text": "our dependencies and build. So maybe another 40 \nyears later, we can have this panel again and  ",
    "start": "1176720",
    "end": "1182400"
  },
  {
    "text": "look back at how we're doing with the build \nutilities and how the world has progressed.",
    "start": "1182400",
    "end": "1187120"
  },
  {
    "text": "There are so many other build tools \nthat came and are not used anymore,  ",
    "start": "1190320",
    "end": "1196320"
  },
  {
    "text": "while Make is still there. So, I think \nthat's a very good point. So it's not   about how it's elegant, it's about \nhow it's persistent and still there. ",
    "start": "1196320",
    "end": "1203840"
  },
  {
    "text": "Yes, kind of the definition of standing \nthe test of time really, isn't it?  Exactly.\nThat applies to roaches, as well, but... ",
    "start": "1204640",
    "end": "1212320"
  },
  {
    "text": "The cockroach build system. ",
    "start": "1219280",
    "end": "1221400"
  },
  {
    "text": "So any closing remarks, Liz before we go on?\nI will just say, just reiterate,  ",
    "start": "1224640",
    "end": "1231520"
  },
  {
    "text": "I'm not necessarily a fan, I \njust think they have longevity. ",
    "start": "1231520",
    "end": "1235680"
  },
  {
    "text": "Understood. Rebecca. Oh, sure. Thanks. So, when I \nstarted thinking about this,  ",
    "start": "1238640",
    "end": "1245440"
  },
  {
    "start": "1240000",
    "end": "1697000"
  },
  {
    "text": "I thought very much about the statistics and \ndata science world because that's where I am.  So, the first thing that came to my mind is \nthe community-built or the community-developed  ",
    "start": "1245440",
    "end": "1256080"
  },
  {
    "text": "tools that have evolved and grown, and people are \nstill using after decades. They're using them in  ",
    "start": "1256080",
    "end": "1263600"
  },
  {
    "text": "ways that maybe the original developers didn't \neven kind of imagine. But the principles were   general enough that they could be extended.\nSo, for example, the R language is a really  ",
    "start": "1263600",
    "end": "1272880"
  },
  {
    "text": "good example of that. So, I think S was \ncreated in '76 by John Chambers, I believe,  ",
    "start": "1272880",
    "end": "1280080"
  },
  {
    "text": "at Bell Labs. And then S-Plus came out in a \ncommercial version around '88. But then R came  ",
    "start": "1280080",
    "end": "1285519"
  },
  {
    "text": "along in '93 and sort of grew and became this \nmonster of an ecosystem that's now supported by  ",
    "start": "1285520",
    "end": "1294160"
  },
  {
    "text": "the R Foundation for Statistical Computing.\nThere are so many other languages we use in  ",
    "start": "1294160",
    "end": "1301520"
  },
  {
    "text": "statistics and data science, as well, but this \none keeps coming back to this community-driven   kind of organic growth idea. I have middle \nschool students and high school students,  ",
    "start": "1301520",
    "end": "1313360"
  },
  {
    "text": "who when they're coming to learn about our \nschool, tell us about the R functions they're   building and the packages that they're making.\nSo, somehow, it's accessible enough that  ",
    "start": "1313360",
    "end": "1323360"
  },
  {
    "text": "people can start very young. They can \nfeel confident, they can contribute.  ",
    "start": "1323360",
    "end": "1327200"
  },
  {
    "text": "There are lots of different ways to interface \nwith it, command line, graphical interface, IDEs,  ",
    "start": "1329040",
    "end": "1335040"
  },
  {
    "text": "right through notebooks, and such. So, for me, I \nguess that's one example of software technology,  ",
    "start": "1335040",
    "end": "1343440"
  },
  {
    "text": "I would say, from statistics and data science \nwould be that kind of R programming language.  But I'm referring to the kind of community and the \necosystem that has grown and built over the years.  ",
    "start": "1343440",
    "end": "1354640"
  },
  {
    "text": "So, that would be a good example, I think, \nfor statistics and data science. Happy to   hear what you guys think, if you use those, if \nyou use that one, or if you prefer other tools. ",
    "start": "1355360",
    "end": "1364240"
  },
  {
    "text": "I think it's my responsibility to jump in on this \nand offer the rebuttal. And my first rebuttal  ",
    "start": "1366400",
    "end": "1372720"
  },
  {
    "text": "would be if that's the case, then why \nis R considered to only be used in the  ",
    "start": "1372720",
    "end": "1380240"
  },
  {
    "text": "realm of academia and not in the industry?\nRight. That's a great question. I think it's  ",
    "start": "1380240",
    "end": "1386000"
  },
  {
    "text": "not the only thing that people are using in \nacademia and statistics and data science.  ",
    "start": "1386000",
    "end": "1391120"
  },
  {
    "text": "Thank you for asking that question. I mean, we're \ncertainly teaching Python, we're teaching SQL,   we're teaching all kinds of things.\nI think what people still use R for a lot of  ",
    "start": "1391120",
    "end": "1405200"
  },
  {
    "text": "data analysis, like visualizing things, and \nso, then, using R maybe in conjunction with  ",
    "start": "1406000",
    "end": "1411040"
  },
  {
    "text": "other languages and other tools to do more \nof the more complicated statistical computing  ",
    "start": "1411040",
    "end": "1415840"
  },
  {
    "text": "and things that we need now for today's \nkind of large data science problems.  It's more that R is like a common entry point, I \nthink, for a lot of new people, and then they move  ",
    "start": "1416400",
    "end": "1425600"
  },
  {
    "text": "off kind of into other things or combinations. But \nto your point, I guess I more meant what I like  ",
    "start": "1425600",
    "end": "1435360"
  },
  {
    "text": "about it is... Maybe this isn't that R is standing \nthe test of time, but kind of the idea of building  ",
    "start": "1435360",
    "end": "1441520"
  },
  {
    "text": "an ecosystem that people can contribute to, like \nan open-source community that can grow. I guess I  ",
    "start": "1441520",
    "end": "1446720"
  },
  {
    "text": "mean that aspect of software technology standing \nthe test of time. I think that's powerful. ",
    "start": "1446720",
    "end": "1451840"
  },
  {
    "text": "I'm gonna jump in and sort of agree \nand disagree. So, my experience of R is  ",
    "start": "1452720",
    "end": "1458640"
  },
  {
    "text": "very limited and somewhat dated. \nAnd my recollection of it is that,  ",
    "start": "1459600",
    "end": "1464880"
  },
  {
    "text": "because you get so many community-contributed \nversions of different packages, I guess. You  ",
    "start": "1465600",
    "end": "1473440"
  },
  {
    "text": "might have half a dozen different implementations \nof a very different function. But they'd all have,   like, the parameters in different orders. And \nit would be really hard to kind of, like, \"Oh,  ",
    "start": "1473440",
    "end": "1482880"
  },
  {
    "text": "I needed a different version of this function, \nbut now I've gotta move everything around.\" ",
    "start": "1482880",
    "end": "1486240"
  },
  {
    "text": "That felt to me as if it were something that \nis kind of...it's grown organically, it's been  ",
    "start": "1488720",
    "end": "1496880"
  },
  {
    "text": "community-contributed, and it didn't feel like a \nvery sort of self-organized community. Where, I  ",
    "start": "1496880",
    "end": "1503680"
  },
  {
    "text": "think, particularly, now, the way that open source \nhas become core to so much infrastructure, I'm  ",
    "start": "1503680",
    "end": "1513760"
  },
  {
    "text": "thinking about Kubernetes and other cloud-native \nprojects, where they're incredibly well-organized  ",
    "start": "1513760",
    "end": "1521360"
  },
  {
    "text": "community-driven projects that still have \nthat kind of very rigorous control, and,  ",
    "start": "1522160",
    "end": "1530240"
  },
  {
    "text": "I guess, careful consideration \nof how APIs might change.  So, I guess I'm disagreeing in \nthe sense of I'm not a massive  ",
    "start": "1533600",
    "end": "1541280"
  },
  {
    "text": "lover of R. But I am agreeing that communities \ncan build and that we're seeing the evolution of  ",
    "start": "1541280",
    "end": "1549040"
  },
  {
    "text": "really well-organized community projects.\nYes, and I would say that the development  ",
    "start": "1549040",
    "end": "1556000"
  },
  {
    "text": "of R Studio and the Tidyverse framework, in \nparticular, has moved more in the direction   of what you're talking about. So there is a \nlot of kind of R, kind of going rogue, right,  ",
    "start": "1556000",
    "end": "1567600"
  },
  {
    "text": "and people putting up packages and saying, like, \n\"Use my package,\" and \"Let's upvote that,\" etc. ",
    "start": "1567600",
    "end": "1573280"
  },
  {
    "text": "But there are also a lot of very principled \nframeworks kind of that are coming out now,  ",
    "start": "1573280",
    "end": "1578240"
  },
  {
    "text": "you know, frameworks that, if you ask \nprofessors who were teaching in R 10,   15 years ago, they would be like, \"I've never even \nused that.\" So, you know, it's so new and it's so  ",
    "start": "1580320",
    "end": "1588480"
  },
  {
    "text": "popular now. So, I think a lot o  my current \ncollege students, view R very differently from  ",
    "start": "1589360",
    "end": "1595200"
  },
  {
    "text": "how I viewed R or learned it. I learned far more \nwhat you're kind of describing, that you're trying  ",
    "start": "1595200",
    "end": "1600559"
  },
  {
    "text": "to find a package you want, you're doing a lot of \nweb searching, right, you're trying to do things. ",
    "start": "1600560",
    "end": "1605280"
  },
  {
    "text": "The students who are learning it now are having \na very kind of different experience. Another kind  ",
    "start": "1606000",
    "end": "1611600"
  },
  {
    "text": "of community thing you could bring up is they also \njust believe that you can get everything just on,  ",
    "start": "1611600",
    "end": "1616720"
  },
  {
    "text": "like, Stack Overflow, right, or just, like, \ndiscussion boards. Well, this is maybe taking  ",
    "start": "1616720",
    "end": "1622960"
  },
  {
    "text": "the panel in a different direction, but, like, \nI worry sometimes about how people are learning  ",
    "start": "1622960",
    "end": "1628080"
  },
  {
    "text": "how to debug and solve their problems because \nsome people are thinking, like, \"Well, here's a   principled way to go through this. Thank you.\" And \nthen other people are like, I'm just gonna Google  ",
    "start": "1628080",
    "end": "1637600"
  },
  {
    "text": "this and see if somebody else figured it out and \nthen I'm just gonna cut and paste their solution.\"   There are pros and cons there. But that's kind \nof another feature of the community stuff. ",
    "start": "1637600",
    "end": "1646640"
  },
  {
    "text": "And just with my last 30 seconds, I want to throw \nout to the room that I think something that,  ",
    "start": "1646640",
    "end": "1651920"
  },
  {
    "text": "hopefully, will stand the test of time, but \nit's a little bit newer in our space, is  ",
    "start": "1651920",
    "end": "1657440"
  },
  {
    "text": "things like standard.lib, or, like, libraries for \nJavaScript and Node.js that are allowing us to do  ",
    "start": "1657440",
    "end": "1663840"
  },
  {
    "text": "numerical and scientific computing for \nsome of these large statistical data   science models on the web. So starting to \nbuild interfaces where we can run...and  ",
    "start": "1664480",
    "end": "1672720"
  },
  {
    "text": "I'll throw out for Phil here, reinforcement \nlearning or deep learning or regression models   or all kinds of things. But we're doing it with \nthese, like, standard libraries that are being  ",
    "start": "1673680",
    "end": "1682559"
  },
  {
    "text": "built with JavaScript and Node.js. We see that \na lot more now, and I'm hoping that becomes a  ",
    "start": "1682560",
    "end": "1688160"
  },
  {
    "text": "software technology that stands the test of time \nmaybe in a, you know, in a few decades, etc.  ",
    "start": "1688160",
    "end": "1693040"
  },
  {
    "text": "Thanks.\nOkay. Thank you, Rebecca.  Yes.\nOn to you, Phil. Thank you very much. It was a good lead-in \nthere. I like the link. So, I'm going to  ",
    "start": "1695200",
    "end": "1704240"
  },
  {
    "start": "1697000",
    "end": "2020000"
  },
  {
    "text": "mix Rebecca and Venkat, I think, and produce \nmy answer. When I was thinking of this,  ",
    "start": "1705760",
    "end": "1712320"
  },
  {
    "text": "I was thinking of technology. And I think, \nlike, the generic definition of technology is   scientific knowledge applied or something like \nthat. Then I thought, \"Well, what's the test  ",
    "start": "1712320",
    "end": "1724399"
  },
  {
    "text": "of time? What does that mean? So, I took it to \nmean something that's lasted as long as possible. ",
    "start": "1724400",
    "end": "1731040"
  },
  {
    "text": "Related to my work in RL, and machine learning, \nand stuff like that, I kind of gravitated towards  ",
    "start": "1732880",
    "end": "1740080"
  },
  {
    "text": "just purely machine learning, you know? And I \nknow it's not technically a technology. It's  ",
    "start": "1740080",
    "end": "1745360"
  },
  {
    "text": "more of a technique, I guess. But I think it's \na really good case for this because it's been  ",
    "start": "1745360",
    "end": "1754320"
  },
  {
    "text": "around for such a long time. I think it's gonna \nbe around for such a long time in the future. ",
    "start": "1754320",
    "end": "1759840"
  },
  {
    "text": "So, I mean, generally, using... This idea of being \nable to learn rules, to learn models, to learn  ",
    "start": "1759840",
    "end": "1767840"
  },
  {
    "text": "from data, as opposed to, you know, presupposing \nwhat software should do, and us being,  ",
    "start": "1767840",
    "end": "1774400"
  },
  {
    "text": "as software engineers, assuming that we know \nwhat the right program should be, you know,   we should be learning from the world and learning \nfrom data and developing programs and software and  ",
    "start": "1775200",
    "end": "1785520"
  },
  {
    "text": "models that can take advantage of that learning.\nSo I was gonna talk a bit about RL, reinforcement  ",
    "start": "1785520",
    "end": "1793920"
  },
  {
    "text": "learning, which is the idea of learning \nfrom experience and trying things out,  ",
    "start": "1793920",
    "end": "1799920"
  },
  {
    "text": "and trial and error, and things like that. And \nthat's what my book's on. But I thought it's a  ",
    "start": "1799920",
    "end": "1805040"
  },
  {
    "text": "bit too new. That kind of started around the 90s.\nSo, I stepped back a bit and went back to machine  ",
    "start": "1805040",
    "end": "1810080"
  },
  {
    "text": "learning, because it has been around since, the \n1950s, 1940s. The 50s is when it started to blow  ",
    "start": "1810080",
    "end": "1817840"
  },
  {
    "text": "up. And it's been around for such a long time that \nit peaked in about the 60s and then sort of tailed  ",
    "start": "1817840",
    "end": "1824000"
  },
  {
    "text": "off in the 70s and 80s again. So, you know, died \noff again. And didn't re-emerge until the 90s. ",
    "start": "1824000",
    "end": "1830240"
  },
  {
    "text": "So, I think that is standing the test of time \nwhere it can go in and out of fashion. And I think  ",
    "start": "1830240",
    "end": "1837120"
  },
  {
    "text": "somebody mentioned this earlier, this idea of \ncycles. Machine learning has already been through  ",
    "start": "1837120",
    "end": "1841680"
  },
  {
    "text": "several cycles. And I can envisage it going \nthrough several cycles in the future as well.  ",
    "start": "1842800",
    "end": "1849840"
  },
  {
    "text": "Cycle is a much nicer term than AI \nwinter, which is what I normally hear. ",
    "start": "1851040",
    "end": "1855440"
  },
  {
    "text": "Exactly.\nI also agree, and that resonates  ",
    "start": "1856320",
    "end": "1861440"
  },
  {
    "text": "with me about the cycles. You know, we often \nhear things described as machine learning that  ",
    "start": "1861440",
    "end": "1868159"
  },
  {
    "text": "I think some of us in statistics are like, \"That \nsounds like logistic regression,\" which has been   around forever but somehow, it seems like it's \nnew. But I think that that kind of makes the point  ",
    "start": "1868160",
    "end": "1877679"
  },
  {
    "text": "that you're making, though, is that these ideas \nhave been around for a long time, how to learn  ",
    "start": "1877680",
    "end": "1883840"
  },
  {
    "text": "from data, learn from the world around you. I \ndo certainly think that concept is, of course,  ",
    "start": "1883840",
    "end": "1889520"
  },
  {
    "text": "standing the test of time. I think it'll only \nget stronger and grow larger as we go, yeah.  Yes, exactly. And still, the fact that logistic \nregression, or logistic regression used for  ",
    "start": "1889520",
    "end": "1899679"
  },
  {
    "text": "classification, is always the most confusing thing \nto try and say and explain to people, you know,  ",
    "start": "1899680",
    "end": "1905360"
  },
  {
    "text": "it's been around since, what, 1880 or something?\nOh, yeah. So, it's well over 100 years old now, and \nstill commonly used in many models today. So,  ",
    "start": "1905360",
    "end": "1914880"
  },
  {
    "text": "that's stood the test of time.  ",
    "start": "1914880",
    "end": "1916560"
  },
  {
    "text": "I think we've got a total agreement.\nOkay. Well.  I could throw in one thought there about \nsort of machine learning, in general,  ",
    "start": "1921360",
    "end": "1929760"
  },
  {
    "text": "more how it's used as a marketing term, which I'm \nsure is not really what you're referring to. But  ",
    "start": "1929760",
    "end": "1936240"
  },
  {
    "text": "you do see a lot of companies using the phrase \nmachine learning when I think what they mean is  ",
    "start": "1938880",
    "end": "1944560"
  },
  {
    "text": "storing some data in a database. Remembering \nsome variables, it's not quite the same as  ",
    "start": "1944560",
    "end": "1951200"
  },
  {
    "text": "actually deriving any kind of real learning from \na set of data. And so, I hope that that form of  ",
    "start": "1951760",
    "end": "1960240"
  },
  {
    "text": "marketing-speak around machine \nlearning does not last.  Yes.\nNo, no, I agree with you there. A lot  ",
    "start": "1960960",
    "end": "1968080"
  },
  {
    "text": "of times, machine learning is used as a real sort \nof simple data analysis, right, and thinking about  ",
    "start": "1968080",
    "end": "1973360"
  },
  {
    "text": "extracting insights from data, but it's not really \nhow we might think of as learning, right? Like,  ",
    "start": "1973360",
    "end": "1978160"
  },
  {
    "text": "for example, how Phil just described it, \nthat's not what's happening. But I think   you're right. The phrase is ubiquitous. \nIt's applied to all kinds of scenarios. So,  ",
    "start": "1979440",
    "end": "1988800"
  },
  {
    "text": "we'll see if that changes over time.\nYes. It's such a philosophical problem, though,   that's half the battle. It's like, how do you \ndefine learning, you know? It's a philosophical  ",
    "start": "1988800",
    "end": "1997920"
  },
  {
    "text": "definition. And that's why I specifically didn't \nuse the word artificial intelligence or AI.  ",
    "start": "1998960",
    "end": "2004320"
  },
  {
    "text": "Because I think that that's even worse for \nthat. I think that's overused even more  ",
    "start": "2004320",
    "end": "2010000"
  },
  {
    "text": "by companies. And I particularly don't \nlike that term. But yes, pros and cons. ",
    "start": "2010640",
    "end": "2018160"
  },
  {
    "text": "Okay. Well, let's move on. Hanna, you're up next.",
    "start": "2018160",
    "end": "2023200"
  },
  {
    "start": "2020000",
    "end": "2549000"
  },
  {
    "text": "Thank you, Rebecca. So, I feel like what I \nwill propose is exactly the opposite of what  ",
    "start": "2023200",
    "end": "2028799"
  },
  {
    "text": "people would expect me to propose. And I'm \nthankful for Venkat for mentioning that  ",
    "start": "2028800",
    "end": "2034480"
  },
  {
    "text": "complexity is the enemy of programming \nor, of the things we want to do. So,  ",
    "start": "2034480",
    "end": "2041600"
  },
  {
    "text": "I would propose the monolith or the monolithic \narchitecture or the monolithic deployment   because I wish it will turn out to stand the test \nof time. I feel like we have abandoned this idea  ",
    "start": "2041600",
    "end": "2057280"
  },
  {
    "text": "in favor of many other ideas, and we \nstill haven't figured out solutions  ",
    "start": "2057280",
    "end": "2062720"
  },
  {
    "text": "for the main problems of these new ideas.\nSo, if we think about distributed applications,  ",
    "start": "2062720",
    "end": "2068720"
  },
  {
    "text": "from my perspective, there are far more problems \nthat still exist, that we haven't solved yet. So,  ",
    "start": "2070400",
    "end": "2076799"
  },
  {
    "text": "I've been working on application \ninfrastructure for the last years,  ",
    "start": "2079920",
    "end": "2084240"
  },
  {
    "text": "which is why I was working on the topic of \nthe service mesh, which was interesting to me.  ",
    "start": "2086000",
    "end": "2092320"
  },
  {
    "text": "Because the idea is to make teams more productive, \nright? With many things that are invented now,  ",
    "start": "2092960",
    "end": "2100480"
  },
  {
    "text": "it's meant to make teams more productive. But \nthinking about it, I believe that there are  ",
    "start": "2100480",
    "end": "2106800"
  },
  {
    "text": "more basic things we can decide that will make \nteams more productive. For example, the monolith. ",
    "start": "2106800",
    "end": "2113600"
  },
  {
    "text": "So, what I want to say is if we would \ninvest the same amount of time in improving  ",
    "start": "2115120",
    "end": "2122880"
  },
  {
    "text": "or reinventing ideas just like the \nmonolith, that is technically simple,  ",
    "start": "2122880",
    "end": "2130720"
  },
  {
    "text": "then we would come up with much better solutions \nthan we have right now for distributed systems. ",
    "start": "2132480",
    "end": "2137920"
  },
  {
    "text": "So, maybe just one thing from me. One thing that \nI will agree with, something that we see in our  ",
    "start": "2138720",
    "end": "2148320"
  },
  {
    "text": "sort of consultancy is sometimes, people will \nreach for a far more complex system before they  ",
    "start": "2148320",
    "end": "2153440"
  },
  {
    "text": "go for something more simple. And they'll go for \nmicroservices because it's the flavor of the day,  ",
    "start": "2153440",
    "end": "2158960"
  },
  {
    "text": "and that's just what you do when you build a \nsystem nowadays. And I think that thinking is  ",
    "start": "2158960",
    "end": "2164240"
  },
  {
    "text": "certainly not helpful because, sometimes, that \nis just the wrong architecture for the problem  ",
    "start": "2164240",
    "end": "2169520"
  },
  {
    "text": "at hand. And sometimes, things are simple, and \nI think you should start simpler with something  ",
    "start": "2169520",
    "end": "2174000"
  },
  {
    "text": "like, maybe, a monolith type.\nWhen I think over time, I think there are cases  ",
    "start": "2175200",
    "end": "2180320"
  },
  {
    "text": "where the architecture and the requirements would \ndictate that you might need to go to something   more distributed, just because the requirements \ndictate that. But I think I would agree with you  ",
    "start": "2180320",
    "end": "2190160"
  },
  {
    "text": "that, sometimes, people start at the wrong end \nnow, they start at the sexy microservice end,   when they should start at the more simplistic \nend. My rebuttal would be that I think,  ",
    "start": "2190160",
    "end": "2200080"
  },
  {
    "text": "certainly distributed systems done right does \nstill have a place or does still have a place.. ",
    "start": "2200080",
    "end": "2208160"
  },
  {
    "text": "Yes\nYes. ",
    "start": "2208160",
    "end": "2210400"
  },
  {
    "text": "I feel like we might not have tried to make \nmonoliths done right. This is what I feel.  ",
    "start": "2213600",
    "end": "2222720"
  },
  {
    "text": "But I agree that, of course, there is no \none solution for everyone and everything.  ",
    "start": "2224640",
    "end": "2229839"
  },
  {
    "text": "But it's worth thinking about \ncomplexity, you know, very, very early on  ",
    "start": "2232240",
    "end": "2239840"
  },
  {
    "text": "and choosing the right thing for the situation. \nSo, I feel like I have to come in with a rebuttal  ",
    "start": "2240480",
    "end": "2249840"
  },
  {
    "text": "because I have, you know, books about containers, \nand posters about Docker on the wall behind me.  ",
    "start": "2249840",
    "end": "2255840"
  },
  {
    "text": "And, you know, I'm a big fan of cloud-native. I \nmean, I completely agree that you need the right  ",
    "start": "2256480",
    "end": "2263200"
  },
  {
    "text": "architecture for the job, and, microservices \nis not always it. Functions as a surface  ",
    "start": "2264160",
    "end": "2269200"
  },
  {
    "text": "are not always it. Sometimes maybe the \nmonolith is the straightforward approach.  But I think we see so many advantages in things \nlike the ability to scale things independently,  ",
    "start": "2269200",
    "end": "2280720"
  },
  {
    "text": "the ability to distribute components across, \nyou know, multiple servers, the ability to  ",
    "start": "2280720",
    "end": "2288000"
  },
  {
    "text": "secure individual components and sort of adding \nextra layers of security around those individual  ",
    "start": "2288000",
    "end": "2295600"
  },
  {
    "text": "components, that, although there is a big cultural \nchange to moving from a monolith to moving to  ",
    "start": "2295600",
    "end": "2303760"
  },
  {
    "text": "the kind of cloud-native microservices \napproach, there is a ton of benefit if   you're building a complex distributed system.\nI don't think it's just hype. I think people are  ",
    "start": "2304800",
    "end": "2315359"
  },
  {
    "text": "doing it because it's turning out to be successful \nand allowing people to ship functionality quickly.  ",
    "start": "2315360",
    "end": "2323040"
  },
  {
    "text": "So, I don’t think it is just a flash \nin the pan. Whether in 30-years' time,   we will come back and say, \"Yeah, microservices \nstood the test of time,\" well, we'll find out. ",
    "start": "2323040",
    "end": "2332160"
  },
  {
    "text": "I think distributed systems have stood the test of \ntime, though, in one way. It might be complicated,   but I think the underlying principles and \nthe way that they work are still the same,  ",
    "start": "2333760",
    "end": "2344800"
  },
  {
    "text": "and that hasn't changed. But how we apply \nthem, and whether we apply them correctly,   I think, is where we run into trouble.\nI think the idea that Hanna proposes is  ",
    "start": "2344800",
    "end": "2355520"
  },
  {
    "text": "very controversial because she is saying what a \nlot of us don't want to hear. That's one of the  ",
    "start": "2355520",
    "end": "2361840"
  },
  {
    "text": "complexities of the world we live in.\nI often associate a lot of what we do   with resume-driven development. \"We want \nto do it because everybody else is doing  ",
    "start": "2362640",
    "end": "2371040"
  },
  {
    "text": "it. And how could I not be building another \nmicroservice?\" And I always question this. If,   overnight, 10 million people wake up and say, \n\"I gotta build microservices,\" how could that  ",
    "start": "2371040",
    "end": "2380400"
  },
  {
    "text": "possibly be correct for so many organizations?\nSo, I think there's good merit to asking  ",
    "start": "2380400",
    "end": "2387039"
  },
  {
    "text": "that question, \"Have we understood what's \nwrong with monoliths? Have we understood  ",
    "start": "2387040",
    "end": "2392880"
  },
  {
    "text": "why it is not working for us?\" So, often, \nwe are eager to find a solution, but if  ",
    "start": "2393440",
    "end": "2399440"
  },
  {
    "text": "only we can pause to ask what did not work and \nhow we could improve it, I think can be better.  ",
    "start": "2399440",
    "end": "2405680"
  },
  {
    "text": "Here's one of the fears I have working with a \nlot of organizations looking at architecture   is are they building a microservice, or are they \nbuilding yet another service-oriented architecture  ",
    "start": "2405680",
    "end": "2417520"
  },
  {
    "text": "and calling it microservice?\nSo, that's one of the things   that I want to question:  what problem are you \ntrying to solve before you propose a solution?  ",
    "start": "2417520",
    "end": "2426559"
  },
  {
    "text": "And I think it's a useful question to ask. Let's \nexplain why what you build doesn't work before  ",
    "start": "2426560",
    "end": "2434160"
  },
  {
    "text": "you find an alternative solution. So, taking the \nspirit of that discussion, I think there's really   good value in asking, you know, \"Are monoliths \ndead?\" I don't think monoliths are dead. We  ",
    "start": "2434160",
    "end": "2444800"
  },
  {
    "text": "haven't understood what killed it yet, if at all. \nAnd I think we should spend more time, I think.",
    "start": "2444800",
    "end": "2450800"
  },
  {
    "text": "Absolutely. Lately, I've read a text, and \nthe text was about how the proposal was  ",
    "start": "2450800",
    "end": "2459040"
  },
  {
    "text": "to use microservices.  I experimented. So, \ninstead of reading the word microservice,  ",
    "start": "2459040",
    "end": "2467840"
  },
  {
    "text": "I put it in the word module. And it turned out \nthat the text still worked. So you can have  ",
    "start": "2467840",
    "end": "2474720"
  },
  {
    "text": "interfaces between modules. You can have interface \nnegotiations between modules. You can have modules  ",
    "start": "2474720",
    "end": "2482080"
  },
  {
    "text": "that use different databases. And so on and so on.\nIt turned out that the whole text didn't give  ",
    "start": "2482080",
    "end": "2487200"
  },
  {
    "text": "a reason. It was meant to give a reason why you \nwould use microservices. And actually, it didn't.  ",
    "start": "2487200",
    "end": "2492480"
  },
  {
    "text": "That's why I think a statement that says that \nwe should look at monoliths is very valuable.  ",
    "start": "2493920",
    "end": "2501359"
  },
  {
    "text": "There is another thing that I find \ninteresting because you were talking   about distributed systems. So, I would \nargue, as soon as you have a server that has  ",
    "start": "2501360",
    "end": "2510079"
  },
  {
    "text": "a network plugged into it, it's a distributed \nsystem because it talks to some clients,  ",
    "start": "2510720",
    "end": "2516240"
  },
  {
    "text": "it talks to some database, there is \nsome network equipment attached to it. ",
    "start": "2516240",
    "end": "2521040"
  },
  {
    "text": "So, the decision or the point that you do have \na distributed system is, I think, different from  ",
    "start": "2521600",
    "end": "2530400"
  },
  {
    "text": "the fact that it's a monolith or not. \nWe do have distributed system because,  ",
    "start": "2530400",
    "end": "2536640"
  },
  {
    "text": "unlike the home computer that I had in \nthe '80s, the network is the computer,  ",
    "start": "2536640",
    "end": "2543440"
  },
  {
    "text": "right? So, that's the world we're living in.\nOk. Thank you, everybody. Eoin, you're up next.",
    "start": "2543440",
    "end": "2551440"
  },
  {
    "start": "2549000",
    "end": "2813000"
  },
  {
    "text": "Thank you, Rebecca.\nOkay. So, interestingly,   my suggestion continues the distributed systems \ntheme. When I was preparing for this talk,  ",
    "start": "2551440",
    "end": "2558400"
  },
  {
    "text": "I realize two technologies have been around \nfor a long time which I've used repeatedly,  ",
    "start": "2558400",
    "end": "2563680"
  },
  {
    "text": "successfully to build systems. Luckily, I picked \nthe other one because the first one was the   relational database, which Nicki introduced us \nto in the first step. The second one, though,  ",
    "start": "2563680",
    "end": "2573760"
  },
  {
    "text": "I've been involved, in using these, and also \nbuilding them with system software. And I   just think both of them are brilliant.\nMine is message-oriented middleware,  ",
    "start": "2573760",
    "end": "2581680"
  },
  {
    "text": "which is the kind of product everyone loves to \nhate, and yet nearly everyone's got embedded   right in the middle of their systems, and they're \nrelying on it. When you introduce messaging,  ",
    "start": "2581680",
    "end": "2593280"
  },
  {
    "text": "you're now into distributed systems for grown-ups, \nor maybe growing up distributed systems. Because  ",
    "start": "2593280",
    "end": "2598480"
  },
  {
    "text": "everyone starts with microservices, for example, \nmore services, with everything synchronous,   and then they're trying to build something at \nscale and realize, \"This has just got horrible  ",
    "start": "2598480",
    "end": "2606560"
  },
  {
    "text": "courses.\" And they'll introduce asynchrony, they \nintroduce messaging, only, they realize building   their own messaging is going to be tough, \nbecause it's a lot harder than it looks,  ",
    "start": "2606560",
    "end": "2614560"
  },
  {
    "text": "so, they introduce message-oriented middleware.\nAlthough they claim that they hate it they push  ",
    "start": "2614560",
    "end": "2620400"
  },
  {
    "text": "lots and lots of complexity down into it. And \nwhat do you know? Very quickly, they get magical  ",
    "start": "2620400",
    "end": "2626640"
  },
  {
    "text": "improvements in their systems architecture. It's \nnow more scalable. It's now more resilient. It's   now more transparent as to what's flowing \nthrough it. They can use it for bulk data  ",
    "start": "2626640",
    "end": "2635600"
  },
  {
    "text": "transfer. They can abuse it for all kinds of \nthings it was never intended to work with.  And yet, it's got such a simple model. It's \njust got two concepts. It's got queues and  ",
    "start": "2635600",
    "end": "2645440"
  },
  {
    "text": "it's hot topics. You can explain them to \nalmost any developer in 10 minutes. And yet,  ",
    "start": "2645440",
    "end": "2650560"
  },
  {
    "text": "having a grasp of that, they can then use these \nmagical messaging-oriented middleware products   to completely revolutionize the qualities \nof the architecture of their systems. So,  ",
    "start": "2650560",
    "end": "2660720"
  },
  {
    "text": "I would argue that a lot of development teams \nhave got a lot to thank message-oriented   middleware for, as well as their relational \ndatabases. And it has stood the test of time. ",
    "start": "2660720",
    "end": "2670560"
  },
  {
    "text": "It's not as old as RPCs. It's not as old as \nrelational databases. But I think TIBCO RV,  ",
    "start": "2670560",
    "end": "2676400"
  },
  {
    "text": "which was the first kind of middleware I used, \nI think that was introduced in about '96, '97.  ",
    "start": "2676400",
    "end": "2683200"
  },
  {
    "text": "That was building on top of research prototypes. I \nthink it's been around, what, well over 20 years,   and that, today, it's quite hard to find a \nscalable system that doesn't have message-oriented  ",
    "start": "2683760",
    "end": "2693359"
  },
  {
    "text": "middleware built into it, even if, perhaps, \nnot too many people are using TIBCO RV anymore.  I would say one of the things that we should \nalso be careful about is testability. While the  ",
    "start": "2693360",
    "end": "2705920"
  },
  {
    "text": "technology is really useful, it does increase the \ncomplexity from the point of view of the ability  ",
    "start": "2705920",
    "end": "2711280"
  },
  {
    "text": "to test it. And interacting with certain teams...I \nwouldn't be naming them here, obviously...but  ",
    "start": "2711280",
    "end": "2717280"
  },
  {
    "text": "where they've gone overboard with the event-driven \narchitecture but did not take the care to  ",
    "start": "2717280",
    "end": "2722880"
  },
  {
    "text": "write enough automated tests and audibility.\nI've spent time with teams where the messaging  ",
    "start": "2724160",
    "end": "2732559"
  },
  {
    "text": "layers did not handle the errors properly, \nand there were production problems that led to  ",
    "start": "2732560",
    "end": "2738240"
  },
  {
    "text": "years of, you know, issues.They had to bring \nin a team of people to debug and find out  ",
    "start": "2739440",
    "end": "2745200"
  },
  {
    "text": "what was going on. Tthis is not necessary  \na rebutte against the technology, but more  ",
    "start": "2745200",
    "end": "2751440"
  },
  {
    "text": "of how people get infatuated with it and end up \nusing it, but don't spend enough time on the,  ",
    "start": "2751440",
    "end": "2757440"
  },
  {
    "text": "maybe we should say, engineering practices that \nwould make it sustainable in development, as well.",
    "start": "2758160",
    "end": "2763280"
  },
  {
    "text": "I think you're quite right. Actually, the big \nproblem I've seen, big mistake teams make,   is they assume they run a tiny little broker in \nmemory, inside their IDE, and they test on that,  ",
    "start": "2763280",
    "end": "2773760"
  },
  {
    "text": "and then they hope that when they move on to a \nhundred-node massive enterprise broker, it will   behave in the same way. But what do you know? They \ndon't. And they never quite learned the model. ",
    "start": "2773760",
    "end": "2784480"
  },
  {
    "text": "In particular, there are many promises and \nconstraints, and unpromises that message-oriented  ",
    "start": "2785280",
    "end": "2791840"
  },
  {
    "text": "middleware tends to turn up with. People tend to \nkind of assume it is just magical. Unfortunately,  ",
    "start": "2791840",
    "end": "2797200"
  },
  {
    "text": "it's not quite magical. There are a few tradeoffs. \nPresumably, you've seen lots of problems like  ",
    "start": "2797200",
    "end": "2803359"
  },
  {
    "text": "messages ending up being routed to impossible \ndestinations, and so, never coming out the other   end, that kind of problem. I agree. That sort \nof thing needs good monitoring, lots of testing.",
    "start": "2803360",
    "end": "2811920"
  },
  {
    "start": "2813000",
    "end": "3066000"
  },
  {
    "text": "Hi, I'm Kevlin. The software \ntechnology that stands the test of time  ",
    "start": "2813280",
    "end": "2818720"
  },
  {
    "text": "that I'm going to suggest \nis the programming language.  ",
    "start": "2819440",
    "end": "2822240"
  },
  {
    "text": "Specifically, the concept of a programming \nlanguage is a text-based notation   through which we program our computers \nand create our systems and also the idea  ",
    "start": "2825040",
    "end": "2835119"
  },
  {
    "text": "of specific programming languages in general, \nthat programming languages tend not to die.  ",
    "start": "2835120",
    "end": "2839920"
  },
  {
    "text": "So let me start with our second one first. \nWhenever anybody says a programming language is  ",
    "start": "2841520",
    "end": "2847200"
  },
  {
    "text": "dead, if you look around, you still see that it's \nalive. Perhaps it's not as active as it used to be  ",
    "start": "2847200",
    "end": "2853599"
  },
  {
    "text": "in its use, but normally it's still around. \nThere's normally somewhere running that code.  ",
    "start": "2853600",
    "end": "2860080"
  },
  {
    "text": "There is normally somebody who has created a \ncompiler or interpreter for that or updated  ",
    "start": "2860080",
    "end": "2865120"
  },
  {
    "text": "an old manual. The language is alive. It may not \nbe very lively. It may not be on a growth curve,  ",
    "start": "2865120",
    "end": "2871840"
  },
  {
    "text": "but it's still there and perhaps a better word \nthan death for languages would be that languages  ",
    "start": "2872880",
    "end": "2880160"
  },
  {
    "text": "become moribund, they reach almost the point \nof death, but not quite. And that's a really  ",
    "start": "2880160",
    "end": "2886000"
  },
  {
    "text": "long tail. So whenever people pick a language \nyou normally find - it's not that if they say  ",
    "start": "2886000",
    "end": "2893920"
  },
  {
    "text": "that's just a that's just clickbait. So I'm not \nsuggesting that we immediately all go out and  ",
    "start": "2893920",
    "end": "2898880"
  },
  {
    "text": "find languages like PL/1 and CORAL 66 and things \nlike that and start scaling up in them. But  ",
    "start": "2899440",
    "end": "2906160"
  },
  {
    "text": "there's a difference between not really very \nactive and completely inactive, which is dead.",
    "start": "2906160",
    "end": "2911760"
  },
  {
    "text": "So the first thing is the programming languages \ngenerally do not die, they just linger.   This leads us to this other observation \nthat for almost as long as programming  ",
    "start": "2911760",
    "end": "2920160"
  },
  {
    "text": "languages have existed in the earliest programming \nlanguages that were not just straight assembled,    we kind of conceived of in the 1940s, \nand we have things like Plankalkül dating  ",
    "start": "2920160",
    "end": "2931680"
  },
  {
    "text": "to the late 40s as a notation that was not \nimplemented for many years and never caught  ",
    "start": "2931680",
    "end": "2937920"
  },
  {
    "text": "on but was highly influential. We have languages \nlike ALGOL and Fortran that came from the 1950s.  ",
    "start": "2937920",
    "end": "2944640"
  },
  {
    "text": "ALGOL 60 was the first proper implementation \nthat people started using and that we still live  ",
    "start": "2945760",
    "end": "2952400"
  },
  {
    "text": "in the shadow of and most of the languages \nthat we use in terms of things like scope   We have languages like Lisp that were designed \nin the 50s and were implemented in 1960.  ",
    "start": "2952400",
    "end": "2963200"
  },
  {
    "text": "These still linger. They are still around. Go \nand watch The Martian as a film. The code that  ",
    "start": "2964000",
    "end": "2969280"
  },
  {
    "text": "they show in that is Lisp. If you're using Emacs \nyou are using Lisp. You're using Clojure. Yeah,  ",
    "start": "2969280",
    "end": "2974320"
  },
  {
    "text": "that's a Lisp language. In other words, these \nare still with us. You go and look at the   current jobs. All these languages are mostly \nold. You don't see a lot of people recruiting  ",
    "start": "2974320",
    "end": "2984000"
  },
  {
    "text": "for things that are not languages. Oh, those \nthings happen. They come up every now and then.  There's a visual system and there's normally a bit \nof popularity and excitement around them for a few  ",
    "start": "2984000",
    "end": "2995359"
  },
  {
    "text": "years. People say, oh, you know what, we don't \nneed to code or you can code in English. We've   seen this before and we've seen it arrive and \nwe've seen it leave from the very same platform.  ",
    "start": "2995360",
    "end": "3004160"
  },
  {
    "text": "Of course, there are points of progress. There \nare systems where we don't use code primarily,  ",
    "start": "3005200",
    "end": "3012000"
  },
  {
    "text": "but they have an interesting tendency, perhaps the \nmost widely used programming system that does not   directly use code in the way that most people \nuse. It is Excel, except that it's also got VBA  ",
    "start": "3012000",
    "end": "3023039"
  },
  {
    "text": "and Excel has just recently acquired lambdas. \nSo actually it's a proper programming system  ",
    "start": "3023040",
    "end": "3028240"
  },
  {
    "text": "based on the programming language. It happens to \nhave a convenient grid-based interaction model   that most people are familiar with. \nThe point here is that I'm fully expecting  ",
    "start": "3028240",
    "end": "3039760"
  },
  {
    "text": "that in another few decades, programming \nlanguages will still be there and people   will still be making the same complaints. Perhaps \nwe could do this without programming languages  ",
    "start": "3039760",
    "end": "3046240"
  },
  {
    "text": "and they will discover that it turns out that the \nsystem of writing and the system formalisms that  ",
    "start": "3047040",
    "end": "3052560"
  },
  {
    "text": "humans have created are surprisingly effective, \nunreasonably so. And they're not going to go away.  ",
    "start": "3052560",
    "end": "3058480"
  },
  {
    "text": "That's going to change. So thank you very much \nand I hope you have some thoughts about that.",
    "start": "3059600",
    "end": "3065040"
  },
  {
    "text": "Great. Well, we've had quite a combination of \nideas here, from hardware and languages and  ",
    "start": "3065920",
    "end": "3074000"
  },
  {
    "start": "3066000",
    "end": "3143000"
  },
  {
    "text": "language categories, architecture, \nsystem software. The variety has been  ",
    "start": "3074640",
    "end": "3084480"
  },
  {
    "text": "quite fascinating. I've enjoyed listening \nto all the recommendations. Unfortunately,  ",
    "start": "3085040",
    "end": "3090160"
  },
  {
    "text": "we don't have time to do a closing \nvote, so, you'll all have to decide  ",
    "start": "3090160",
    "end": "3096400"
  },
  {
    "text": "for yourselves if you've made a compelling enough \ncase for your software technology that stood the  ",
    "start": "3096400",
    "end": "3102079"
  },
  {
    "text": "test of time. I'd like to thank all of you \nfor appearing on the panel and thank you.",
    "start": "3102080",
    "end": "3109840"
  }
]