[
  {
    "text": "[Music] welcome to the go-to podcast each",
    "start": "280",
    "end": "7560"
  },
  {
    "text": "episode covers the brightest and boldest ideas from the world's leading experts in software development tune in for",
    "start": "7560",
    "end": "14080"
  },
  {
    "text": "practical lessons compelling theories and plenty of",
    "start": "14080",
    "end": "19240"
  },
  {
    "text": "inspiration go to gathers the brightest Minds in the software Community to help developers tackle projects today plan",
    "start": "19960",
    "end": "26720"
  },
  {
    "text": "for tomorrow and create a better future stay up to dat with the latest in Tech through go-to's top rated events held",
    "start": "26720",
    "end": "33320"
  },
  {
    "text": "online and in person in cities like Amsterdam London Copenhagen and Chicago",
    "start": "33320",
    "end": "39160"
  },
  {
    "text": "and by subscribing to the go-to conferences YouTube channel where you can find thousands more highquality de",
    "start": "39160",
    "end": "44719"
  },
  {
    "text": "talks learn more ecotopia [Music]",
    "start": "44719",
    "end": "51480"
  },
  {
    "text": "dotech hello and welcome to another episode of goto unscripted my name is Ban sker I'm CTO at open value and I'm",
    "start": "51480",
    "end": "59079"
  },
  {
    "text": "here at goto m them together with Alina ureno hi everyone my name is helina and",
    "start": "59079",
    "end": "64119"
  },
  {
    "text": "I work as developer advocate for grow VM at orac Labs so let's talk about grow VM",
    "start": "64119",
    "end": "69360"
  },
  {
    "text": "danina what is growl what is grm can you explain it in maybe 10 sentences 10",
    "start": "69360",
    "end": "74640"
  },
  {
    "text": "sentences okay that will be challenging because grow VM is so many things and in a way it's a nice challenge to have",
    "start": "74640",
    "end": "81360"
  },
  {
    "text": "right but also then it makes it kind of hard to explain to people what is it but",
    "start": "81360",
    "end": "86400"
  },
  {
    "text": "uh I would divide it into three parts so one is GR VM is a high performance jdk",
    "start": "86400",
    "end": "91880"
  },
  {
    "text": "so it's a jdk like any other jdk you might be using like open jdk it has the same hotspot VM but we replace the",
    "start": "91880",
    "end": "98159"
  },
  {
    "text": "compiler with our own grow compiler so that's one part of the story is that you can use it as jdk to run your",
    "start": "98159",
    "end": "104159"
  },
  {
    "text": "applications with the Java command as you normally do then there is another big part of the story and that is native",
    "start": "104159",
    "end": "109240"
  },
  {
    "text": "image and that is this ahead of time compilation of jav applications that produces native executables that can run",
    "start": "109240",
    "end": "115159"
  },
  {
    "text": "without a jvm so that is also grm and last but not least people also Al call it a poly VM because in addition to Java",
    "start": "115159",
    "end": "122600"
  },
  {
    "text": "and all those traditional jvm languages Scala codling it can also run JavaScript python or even your own custom language",
    "start": "122600",
    "end": "130520"
  },
  {
    "text": "so three things but in natural it's a high performance virtual machine for manual languages okay well so I've been",
    "start": "130520",
    "end": "137400"
  },
  {
    "text": "doing Java development for a while I know where I can get my jdk or jvm why should I use grm instead of another",
    "start": "137400",
    "end": "145239"
  },
  {
    "text": "VM there can be so many reasons why you could be using gr VM in of any other VM",
    "start": "145239",
    "end": "151280"
  },
  {
    "text": "so uh one thing is that you can use it as a jdk right so uh just run your code",
    "start": "151280",
    "end": "157319"
  },
  {
    "text": "on a jbm with just in time compilation and the reason to do so is that workloads some workloads many of them",
    "start": "157319",
    "end": "164560"
  },
  {
    "text": "will see speed up just by switching to grbm as a jdk because you have this new compiler it cannot give you a specific",
    "start": "164560",
    "end": "171920"
  },
  {
    "text": "number for the speed up that any random application in the world will see because it highly depends on what the",
    "start": "171920",
    "end": "178560"
  },
  {
    "text": "application does what dependes it's using how it's written Etc but I do recommend always at least check out gr",
    "start": "178560",
    "end": "184799"
  },
  {
    "text": "VM as a jdk so that's one reason to use it over any other jedic but I think area",
    "start": "184799",
    "end": "190680"
  },
  {
    "text": "where we see a lot of interest is native image and the way to build your job applications is n executable that no",
    "start": "190680",
    "end": "197200"
  },
  {
    "text": "longer need jvm to run and uh the reason to do so I mean sometimes people ask us",
    "start": "197200",
    "end": "202400"
  },
  {
    "text": "but you know why give up jbm because it gives us so many benefits and it does but also it's just another way to deploy",
    "start": "202400",
    "end": "209840"
  },
  {
    "text": "and build your J applications so maybe if you care a bit more about startup about memory usage about these kind of",
    "start": "209840",
    "end": "216400"
  },
  {
    "text": "things the na image would be a way to go yeah yeah well I have a lot of questions about Native images I no doubt first",
    "start": "216400",
    "end": "223360"
  },
  {
    "text": "let's let's let's dive into the VM part a bit so could you say that it's a drop in replacement for anym where I'm",
    "start": "223360",
    "end": "228840"
  },
  {
    "text": "running my current Java code on absolutely so migration there is very easy you just replace your jdk with grvm",
    "start": "228840",
    "end": "235360"
  },
  {
    "text": "you point your Java home to grvm distribution and you run the applications as s so you have all your",
    "start": "235360",
    "end": "240920"
  },
  {
    "text": "libraries tools IDs Etc available to you there are some minor limitations I think",
    "start": "240920",
    "end": "246120"
  },
  {
    "text": "most users would not necessarily notice them but for example like implementing additional GC on a new compiler is not",
    "start": "246120",
    "end": "253720"
  },
  {
    "text": "easy because there is this connection between the compiler and the GC so maybe if you want to use some custom GC that",
    "start": "253720",
    "end": "259120"
  },
  {
    "text": "will be not trivial but other than that I would say 99.9% users can easily",
    "start": "259120",
    "end": "265600"
  },
  {
    "text": "migrate in the matter of minutes to grm and you mentioned that well you probably",
    "start": "265600",
    "end": "270720"
  },
  {
    "text": "notice performance improvements right you also mentioned jit just in time compilation so are those improvements",
    "start": "270720",
    "end": "276960"
  },
  {
    "text": "coming from from a better jit and optimization or why is grm faster than an average jdk I like how you said the",
    "start": "276960",
    "end": "285240"
  },
  {
    "text": "gr is faster than the average jdk I mean I I do agree but notice that I did not say that you said that so thank you for",
    "start": "285240",
    "end": "291080"
  },
  {
    "text": "that I'm just making it up for you yeah I appreciate uh yes so those speedups are coming from the compiler itself",
    "start": "291080",
    "end": "297520"
  },
  {
    "text": "indeed because the only thing we are replacing in hotspot VM if you're operating in this just in time compilation mode is the compiler but the",
    "start": "297520",
    "end": "304039"
  },
  {
    "text": "compiler is very good it's brand new it has tons of optimizations that are implemented in it from scratch and",
    "start": "304039",
    "end": "310199"
  },
  {
    "text": "because of all those reasons and because of those aggressive optimizations we see many applications and many workloads",
    "start": "310199",
    "end": "316199"
  },
  {
    "text": "running faster on gr VM even as jet so I think one of the latest such stories at",
    "start": "316199",
    "end": "322240"
  },
  {
    "text": "least that I can recall is from Facebook and they uh moved some of I think it was Data intensive apps to grm and saw",
    "start": "322240",
    "end": "329840"
  },
  {
    "text": "something like I think 10% of speed up just by switching to grow VM so it didn't do Native image didn't do any of",
    "start": "329840",
    "end": "335840"
  },
  {
    "text": "that just switch to grow VM as a jdk okay interesting I think you also read",
    "start": "335840",
    "end": "341039"
  },
  {
    "text": "or heard somewhere that you can also use grow VM in an Oracle database am I correct or did I get full somewhere no",
    "start": "341039",
    "end": "347720"
  },
  {
    "text": "no no that's that's very true and I like this question because I don't get asked about it a lot so as you mentioned you",
    "start": "347720",
    "end": "354039"
  },
  {
    "text": "have a lot of questions about Native image and people usually have a lot of questions about Native image but this use case in a Oracle database is so cool",
    "start": "354039",
    "end": "361160"
  },
  {
    "text": "so the way it works is that we have kind of an embedding of gvm in Oracle database and it can execute other",
    "start": "361160",
    "end": "368199"
  },
  {
    "text": "languages so the languages that we call grvm languages the ones implemented on top of grm and at the moment I think the",
    "start": "368199",
    "end": "375440"
  },
  {
    "text": "only one available is Javascript so you can execute that right in database so",
    "start": "375440",
    "end": "380759"
  },
  {
    "text": "you don't need to kind of extract your data move it somewhere process it put it back and another benefit is that you can",
    "start": "380759",
    "end": "387440"
  },
  {
    "text": "leverage the ecosystem of all those I don't know millions of packages that are available in the JavaScript ecosystem",
    "start": "387440",
    "end": "393680"
  },
  {
    "text": "and you can execute that right in your javascri in your database so for example maybe you want to validate some I don't",
    "start": "393680",
    "end": "400440"
  },
  {
    "text": "know email that it's indeed a valid email and you can use whatever the JavaScript library is being used for",
    "start": "400440",
    "end": "406199"
  },
  {
    "text": "that and the part I really like is that it's a kind of project that shows the kind of value of grm as an ecosystem",
    "start": "406199",
    "end": "413479"
  },
  {
    "text": "because in this case for example it's an implementation of JavaScript so the JavaScript component grm and then it's",
    "start": "413479",
    "end": "419560"
  },
  {
    "text": "built on top of trle which is our language ination framework and the way it is embedded in Oracle database is",
    "start": "419560",
    "end": "426479"
  },
  {
    "text": "through native image so uh the way I understand it n image was used to build a shared library of this uh kind of",
    "start": "426479",
    "end": "434479"
  },
  {
    "text": "execution engine and then it was embedded in Oracle database as as a shared library but it's kind of cool",
    "start": "434479",
    "end": "440400"
  },
  {
    "text": "that gr vmn image is being used to you know embed something like graum in the database I think should I compare this",
    "start": "440400",
    "end": "447479"
  },
  {
    "text": "with um for example having a procedure with SQL in a database and and now being able to run any JavaScript code as a",
    "start": "447479",
    "end": "455319"
  },
  {
    "text": "part of a query or something how would this work to be honest I haven't looked at that in a while I know that you can",
    "start": "455319",
    "end": "461199"
  },
  {
    "text": "you can indeed execute JavaScript code right in there but in terms of other any limitations and how does it compare to",
    "start": "461199",
    "end": "467360"
  },
  {
    "text": "rting sted procedures to be honest I wouldn't know maybe we should write a new blog post and give an update on how",
    "start": "467360",
    "end": "473360"
  },
  {
    "text": "it works at the moment maybe there are some limitations but last time I checked I think it kind of just worked yeah well",
    "start": "473360",
    "end": "479520"
  },
  {
    "text": "it's not something I would Envision doing executing JavaScript in Oracle database right I mean it sounds a bit",
    "start": "479520",
    "end": "484720"
  },
  {
    "text": "crazy I must say but also I think it opens possibility to use all those JavaScript tools and like JavaScript",
    "start": "484720",
    "end": "490840"
  },
  {
    "text": "itself as a language in a database but I think it's nice to just have more options and access to yeah especially if",
    "start": "490840",
    "end": "496159"
  },
  {
    "text": "you can execute logic really close to the data right you don't need to fetch it over Network bound so that sounds",
    "start": "496159",
    "end": "501599"
  },
  {
    "text": "interesting okay so well um before we talk about Native images uh I think I",
    "start": "501599",
    "end": "508400"
  },
  {
    "text": "read there's a Community Edition and Commercial edition of graia what are the difference of those why why would",
    "start": "508400",
    "end": "513880"
  },
  {
    "text": "somebody be inclined to go for the commercial Edition compared to the Community Edition so there are indeed",
    "start": "513880",
    "end": "519518"
  },
  {
    "text": "two additions one is Community Edition and it's open source all of source code is available on GitHub anyone can",
    "start": "519519",
    "end": "525720"
  },
  {
    "text": "contribute everyone is welcome to contribute and a fun fact I don't know how to validate that but somebody said me that uh gr VM might be one of the",
    "start": "525720",
    "end": "533040"
  },
  {
    "text": "biggest Java open source projects out there because it's indeed huge as a project there is uh the compile this",
    "start": "533040",
    "end": "539720"
  },
  {
    "text": "language implementation framework all the language implementation so I don't know if that's true or not but sounds pretty cool that it might be one of the",
    "start": "539720",
    "end": "545839"
  },
  {
    "text": "biggest open source Java projects out there so that is the Community Edition and we have one more uh it used to be",
    "start": "545839",
    "end": "552720"
  },
  {
    "text": "called Enterprise Edition but now with the latest release of grow VM we have a brand new distribution of grow VM called",
    "start": "552720",
    "end": "560279"
  },
  {
    "text": "uh Oracle grow VM and I guess you can compare it to a commercial Edition so",
    "start": "560279",
    "end": "566800"
  },
  {
    "text": "it's a it's available under a free license meaning you can use all the features that are in that addition for",
    "start": "566800",
    "end": "573040"
  },
  {
    "text": "development for production basically all kinds of things uh for free under this",
    "start": "573040",
    "end": "578760"
  },
  {
    "text": "new license and the differences between those additions are well a a license",
    "start": "578760",
    "end": "584560"
  },
  {
    "text": "right so one is open source and another one is this gftc license but also there are features that are available in",
    "start": "584560",
    "end": "589959"
  },
  {
    "text": "Oracle VM that are not available in community and the the features I think",
    "start": "589959",
    "end": "595279"
  },
  {
    "text": "the most interesting of them at least are around performance and and more specifically performance in Native image",
    "start": "595279",
    "end": "601760"
  },
  {
    "text": "so in Native image you now get access to profile guided optimizations and maybe we can stop on that when we talk about",
    "start": "601760",
    "end": "608200"
  },
  {
    "text": "Native image in more detail you get G1 GC in Native image and uh going back to",
    "start": "608200",
    "end": "614519"
  },
  {
    "text": "this jdk jet use case uh outside of n image it can also be interesting for users because the compiler itself has",
    "start": "614519",
    "end": "621800"
  },
  {
    "text": "more optimization phases in this kind of commercial Edition so even if you're",
    "start": "621800",
    "end": "626839"
  },
  {
    "text": "running on a j jet jdk you might see more performance hopefully with this",
    "start": "626839",
    "end": "632160"
  },
  {
    "text": "Edition okay well let's talk about Native images the first time I heard about this was I think know about four",
    "start": "632160",
    "end": "638079"
  },
  {
    "text": "four or five years ago was it from ol or Thomas or yeah probably yeah okay um and",
    "start": "638079",
    "end": "645120"
  },
  {
    "text": "then well what I basically learned then is you can take a piece of java code uh",
    "start": "645120",
    "end": "650720"
  },
  {
    "text": "perform some magic compilation on it to some Target platform and then there's a native biner that runs on this target",
    "start": "650720",
    "end": "656079"
  },
  {
    "text": "platform all right so what is native image comp and and well why should",
    "start": "656079",
    "end": "661160"
  },
  {
    "text": "anyone want to do it yeah it's very interesting and to be honest the first time I read about it my",
    "start": "661160",
    "end": "666399"
  },
  {
    "text": "mind was blown that something like that is even possible right because we all know that Java is so Dynamic and it's so",
    "start": "666399",
    "end": "672639"
  },
  {
    "text": "powerful because it's so Dynamic so how do you compile something like Java ahead of time because it certainly poses",
    "start": "672639",
    "end": "679200"
  },
  {
    "text": "certain limitations because if you're doing things ahead of time you need to know everything in advance so before I",
    "start": "679200",
    "end": "685320"
  },
  {
    "text": "go into this like uh idea behind n image maybe I should explain how it works at",
    "start": "685320",
    "end": "690680"
  },
  {
    "text": "all so uh when you run a n image build command and give it your application",
    "start": "690680",
    "end": "696360"
  },
  {
    "text": "what happens is that n image looks at your application starting from its main entry point and it's trying to find all",
    "start": "696360",
    "end": "703160"
  },
  {
    "text": "the code that is reachable so all the code that will actually be executed when your application runs it tries to find",
    "start": "703160",
    "end": "709360"
  },
  {
    "text": "all of that code and that includes your application code jdk classes your dependencies everything and it's looking",
    "start": "709360",
    "end": "715639"
  },
  {
    "text": "for all the reachable codes so that it can include only that reachable code in the produced executable and then",
    "start": "715639",
    "end": "721959"
  },
  {
    "text": "eliminate everything else so only the things that you actually need at run time only the things that are needed for",
    "start": "721959",
    "end": "728120"
  },
  {
    "text": "your application to do what it's supposed to do only those things will be included in this executable so that is",
    "start": "728120",
    "end": "733839"
  },
  {
    "text": "one part of the N image story and another one as it's doing so it's also preparing Heap for you so you can start",
    "start": "733839",
    "end": "740199"
  },
  {
    "text": "with prated Heap and don't spend time working with that Heap when your application actually",
    "start": "740199",
    "end": "746639"
  },
  {
    "text": "starts but since you're doing this ahead of time it has to happen under closed",
    "start": "746639",
    "end": "751880"
  },
  {
    "text": "World assumption so everything that is to know about your application needs to be known ahead of time when we actually",
    "start": "751880",
    "end": "757920"
  },
  {
    "text": "build a new application because otherwise we just cannot perform this ahead of time compilation because we are",
    "start": "757920",
    "end": "763399"
  },
  {
    "text": "compiling things ahead of time and also we eliminating all of this code loading and execution and profiling",
    "start": "763399",
    "end": "769959"
  },
  {
    "text": "infrastructure from your application so that in the end it's only machine code and only the things that are needed for",
    "start": "769959",
    "end": "775800"
  },
  {
    "text": "your application to run plus tiny slam VM implementation but it's not a",
    "start": "775800",
    "end": "781079"
  },
  {
    "text": "full-blown Cote execution infrastructure anymore and that is so your application is more lightweight and faster to start",
    "start": "781079",
    "end": "788000"
  },
  {
    "text": "and scales better and doesn't use as much memory so this close World assumption poses certain challenges but",
    "start": "788000",
    "end": "794440"
  },
  {
    "text": "another way to look at it is it just it's a different design decision and along with challenges I think it brings",
    "start": "794440",
    "end": "800079"
  },
  {
    "text": "some important benefits so all those startup memory Etc that n image is famous for but also some interesting",
    "start": "800079",
    "end": "807480"
  },
  {
    "text": "Security benefits that may be we can also talk about it more further right sure so yeah ahead of time compilation",
    "start": "807480",
    "end": "813560"
  },
  {
    "text": "on the closeable Assumption yeah so just to to validate that I C right so if I'm",
    "start": "813560",
    "end": "818800"
  },
  {
    "text": "running on traditional Java code I'm I'm compiling my Java code uh to a bite code",
    "start": "818800",
    "end": "824399"
  },
  {
    "text": "and then I'm run this B code on the virtual machine and then just in time compilation translate this bite code to machine code runs on my on my target",
    "start": "824399",
    "end": "830680"
  },
  {
    "text": "platform all right so if I'm building a native image I'm still compiling um probably still compiling my Java code to",
    "start": "830680",
    "end": "837079"
  },
  {
    "text": "bite code first right AB absolutely and that's the part I'm always you know skipping because for me compiler it's",
    "start": "837079",
    "end": "842480"
  },
  {
    "text": "always the optimizing compiler that's my bias because you know I work on grm but indeed uh you need to provide uh your",
    "start": "842480",
    "end": "849639"
  },
  {
    "text": "application toate image in a form of bite code so you need to use Java C to produce the actual bite code because as",
    "start": "849639",
    "end": "855279"
  },
  {
    "text": "input it takes bite code so then the native image compilation process takes the bite code and then do Ahad of time",
    "start": "855279",
    "end": "861160"
  },
  {
    "text": "compilation to create a basically machine code for a specific Target platform right so uh well but if I can",
    "start": "861160",
    "end": "868320"
  },
  {
    "text": "stop that because you brought in very interesting part about how jbm actually executes code right so just to compare",
    "start": "868320",
    "end": "873920"
  },
  {
    "text": "how is it different from native image so the way jvm executes code is that when you run an application it will need to",
    "start": "873920",
    "end": "880480"
  },
  {
    "text": "load all your classes look at them start interpreting start compiling start",
    "start": "880480",
    "end": "885759"
  },
  {
    "text": "collecting profile information and all of that is very impressive work that it does to get your application to that",
    "start": "885759",
    "end": "892240"
  },
  {
    "text": "best PE performance but it also comes with certain challenges around startup",
    "start": "892240",
    "end": "898000"
  },
  {
    "text": "especially if you have have a larger application right because it's a lot of work to be done when jbm starts and",
    "start": "898000",
    "end": "903320"
  },
  {
    "text": "needs to warm up and compile your code and understand everything about your application so over time when worms up",
    "start": "903320",
    "end": "909600"
  },
  {
    "text": "it does come to great big performance but there is a bit of this overhead that you're playing in the beginning when it",
    "start": "909600",
    "end": "915279"
  },
  {
    "text": "has to do all this work and the idea of n0 image is to move all that overhead to",
    "start": "915279",
    "end": "920320"
  },
  {
    "text": "build time so that you can build it once but then start fast as many times as you",
    "start": "920320",
    "end": "926160"
  },
  {
    "text": "need because most likely application will be started more often that it's built so in my opinion kind of makes",
    "start": "926160",
    "end": "931519"
  },
  {
    "text": "sense to move all that to build time and then just start when you actually need to start yeah but it also sounds",
    "start": "931519",
    "end": "936880"
  },
  {
    "text": "difficult right because uh well jit compilation uh analyzes code as it runs over time and then tries to optimize",
    "start": "936880",
    "end": "943519"
  },
  {
    "text": "this code for how it is run or actually being used whereas if you do Ahad of time compilation you don't actually know",
    "start": "943519",
    "end": "948680"
  },
  {
    "text": "yet what the use case for this code are going to be right so so well how is it even possible and how can you get the",
    "start": "948680",
    "end": "954839"
  },
  {
    "text": "same well even better performance compared to analyze in something that's running and then optimizing for the",
    "start": "954839",
    "end": "960920"
  },
  {
    "text": "stuff that's running that's an excellent question and uh yeah the reason why jbm is so powerful is this Dynamic C",
    "start": "960920",
    "end": "968079"
  },
  {
    "text": "execution right so indeed it looks the application on the goal and it adapts to what the application is doing and what",
    "start": "968079",
    "end": "974440"
  },
  {
    "text": "is happening in runtime and it can adapt on the goal so it can make very",
    "start": "974440",
    "end": "979920"
  },
  {
    "text": "aggressive optimizations about your code and then if those uh assumptions that it made about your code are no longer valid",
    "start": "979920",
    "end": "987079"
  },
  {
    "text": "it can de optimized go back to interpret it and if it warms up again go back to compiled but it has this flexibility to",
    "start": "987079",
    "end": "994000"
  },
  {
    "text": "adapt on the goal to what your application does right and this is really fascinating about jbm right so",
    "start": "994000",
    "end": "999519"
  },
  {
    "text": "how it goes from interpreted to compiled and then how it can go back it's really fascinating and indeed n image doesn't",
    "start": "999519",
    "end": "1006519"
  },
  {
    "text": "have that luxury of adapting on the goal or even being aware of what the application does at run time but that's",
    "start": "1006519",
    "end": "1013680"
  },
  {
    "text": "by default so what is very cool about n image is that you can use profile guided",
    "start": "1013680",
    "end": "1018839"
  },
  {
    "text": "optimizations and that is optimization that allows you to uh build an instrumented binary of your app then run",
    "start": "1018839",
    "end": "1026240"
  },
  {
    "text": "it applying relevant workload so that na image can look at your app see what it does collect this profile information",
    "start": "1026240",
    "end": "1033520"
  },
  {
    "text": "and then when you building again an N executable of your app you can use this",
    "start": "1033520",
    "end": "1038558"
  },
  {
    "text": "profile information to kind of get insight into the future so into what your app will actually do at run time",
    "start": "1038559",
    "end": "1044558"
  },
  {
    "text": "and build an application with those profs in mind ah so you basically using runtime profiling information to feed",
    "start": "1044559",
    "end": "1051520"
  },
  {
    "text": "into your add of time compilation to make it smarter and give it more context on because in a way you get B best of",
    "start": "1051520",
    "end": "1058559"
  },
  {
    "text": "the Both Worlds so you have you can optimize your application ahead of time you don't need to spend time on that and",
    "start": "1058559",
    "end": "1064039"
  },
  {
    "text": "run time but also you get insight and understanding into runtime behavior of",
    "start": "1064039",
    "end": "1069120"
  },
  {
    "text": "your app so I think that's pretty cool yeah so with aot you're basically moving whatever the jit is doing on a jvm to",
    "start": "1069120",
    "end": "1076159"
  },
  {
    "text": "compile time right so your compilation will take longer uh but in the end the startup time propably and maybe even run",
    "start": "1076159",
    "end": "1082280"
  },
  {
    "text": "time will take shorter so what are typical benefits of of why why should I want to run my my Java app as a native",
    "start": "1082280",
    "end": "1088280"
  },
  {
    "text": "image um like resource usage or performance or startup time what should",
    "start": "1088280",
    "end": "1095600"
  },
  {
    "text": "I want to do it so the first benefit people usually bring up is startup time because it's indeed much faster orate",
    "start": "1095600",
    "end": "1102360"
  },
  {
    "text": "image so it again depends a lot on the app you have but I don't know how the",
    "start": "1102360",
    "end": "1108400"
  },
  {
    "text": "demon that for example I'm showing like I would say that an average web server",
    "start": "1108400",
    "end": "1114799"
  },
  {
    "text": "application doesn't matter which framework I would say starts about maybe 400 milliseconds on my machine maybe 200",
    "start": "1114799",
    "end": "1121799"
  },
  {
    "text": "milliseconds and then as an at image it starts in I know 30 40 millisecond so it's order of markting to it faster and",
    "start": "1121799",
    "end": "1128760"
  },
  {
    "text": "it's indeed impressive because we don't have to do any of those operations anymore at run time right we are just",
    "start": "1128760",
    "end": "1133840"
  },
  {
    "text": "loading n executable it has all the data it can go uh IM immediately do whatever",
    "start": "1133840",
    "end": "1139600"
  },
  {
    "text": "it is supposed to do so that is start at time and it's indeed really great especially for you know microservices",
    "start": "1139600",
    "end": "1145000"
  },
  {
    "text": "and servess application things like that so that's one big benefit I think everyone always brings that that one",
    "start": "1145000",
    "end": "1150280"
  },
  {
    "text": "first but I would argue startup time is great but I would maybe care a bit more",
    "start": "1150280",
    "end": "1155520"
  },
  {
    "text": "about resources usage especially again if I'm deploying to the cloud and I'm paying for all those resources so CPU",
    "start": "1155520",
    "end": "1161559"
  },
  {
    "text": "memory Etc that I'm using so if I can do the same thing uh have the app do the",
    "start": "1161559",
    "end": "1166880"
  },
  {
    "text": "same thing but use less resources that probably will be preferable because I would pay less maybe I can deploy more",
    "start": "1166880",
    "end": "1174240"
  },
  {
    "text": "apps at the like memory uh usage of the my previous application yeah and that's",
    "start": "1174240",
    "end": "1180960"
  },
  {
    "text": "pretty cool and I think I recall this demo that Josh long did I think it was D Belgium where he had a spring board app",
    "start": "1180960",
    "end": "1187240"
  },
  {
    "text": "running on jvm and then he compiled to Native and he showed the memory res of the process and it went down to I think",
    "start": "1187240",
    "end": "1194240"
  },
  {
    "text": "like 100 megabytes probably and he said like who in the room here ever deployed a jvm app that used one gig of memory",
    "start": "1194240",
    "end": "1201440"
  },
  {
    "text": "you know many people ra their hands and he said okay this shows you that you can deploy 10 such apps for the same memory",
    "start": "1201440",
    "end": "1207720"
  },
  {
    "text": "footprint how cool is that yeah so I would argument that that is more even more important so you can either reduce",
    "start": "1207720",
    "end": "1213480"
  },
  {
    "text": "your resources Cloud infrastructure usage or maybe you can deploy more apps",
    "start": "1213480",
    "end": "1219240"
  },
  {
    "text": "at the runtime impact of your previous app yeah so I guess with the startup",
    "start": "1219240",
    "end": "1224640"
  },
  {
    "text": "time only matters if you're in a scale back to zero situation right like serverless or or whatever and when when",
    "start": "1224640",
    "end": "1230880"
  },
  {
    "text": "the user needs to wait for the app to start up obviously then startup time matters but for typical Enterprise app",
    "start": "1230880",
    "end": "1236440"
  },
  {
    "text": "that runs for weeks or months then the startup time doesn't really matter uh I guess probably not that much probably",
    "start": "1236440",
    "end": "1242600"
  },
  {
    "text": "indeed more for like microservice and sess applications so yeah so so if I",
    "start": "1242600",
    "end": "1248000"
  },
  {
    "text": "have a a JPM based application then I need to uh have a well JRE running on my",
    "start": "1248000",
    "end": "1254480"
  },
  {
    "text": "machine and I need to deploy my code there and then running and we start up start reading my classes and we'll start",
    "start": "1254480",
    "end": "1260360"
  },
  {
    "text": "doing uh start the jet process do I still need a like a jdk on my target machine if I build a native image or is",
    "start": "1260360",
    "end": "1266919"
  },
  {
    "text": "it all packaged in how does this work so you mean if you want to deploy your application as an at image do you need a",
    "start": "1266919",
    "end": "1272240"
  },
  {
    "text": "jdk again or not yeah on the target server I'm deploying to no so the target Server doesn't need to have anything at",
    "start": "1272240",
    "end": "1278360"
  },
  {
    "text": "all so if you are but you need as you mentioned you need to build for the Target platform and architecture right",
    "start": "1278360",
    "end": "1284440"
  },
  {
    "text": "so if you have such an opportunity I don't know if you're building on the Linux machine and you're deploying to a Linux machine that machine that you're",
    "start": "1284440",
    "end": "1290760"
  },
  {
    "text": "deploying to doesn't need to doesn't need to have anything because it's a native app in the end right so you can",
    "start": "1290760",
    "end": "1296120"
  },
  {
    "text": "it just runs fully uh functional on its own and then there are uh ways to build",
    "start": "1296120",
    "end": "1301919"
  },
  {
    "text": "native images in a fully static way where all the dependencies are included",
    "start": "1301919",
    "end": "1307919"
  },
  {
    "text": "in the the static so we still need a jdk for building and compiling but for for developing you probably would need a jdk",
    "start": "1307919",
    "end": "1314960"
  },
  {
    "text": "anyway but in the end since you're going straight to machine code you can deoy the machine code okay so probably that",
    "start": "1314960",
    "end": "1320480"
  },
  {
    "text": "would save you on some disk space as well uh comp so yeah we talked about startup we talked about memory obviously",
    "start": "1320480",
    "end": "1327600"
  },
  {
    "text": "packaging size is another benefit right but like saving disk space per se but also scaling right so if you want to",
    "start": "1327600",
    "end": "1333679"
  },
  {
    "text": "scale your deployments that maybe smaller images would also matter to you",
    "start": "1333679",
    "end": "1338720"
  },
  {
    "text": "and we can probably talk about performance but that will be I guess a big topic so before we go into that",
    "start": "1338720",
    "end": "1343960"
  },
  {
    "text": "there's also very interesting Security benefits around na image and I like talking about it because I think people",
    "start": "1343960",
    "end": "1349720"
  },
  {
    "text": "don't talk about it enough and they are always very surprised when I talk about Security in Native image but it's indeed",
    "start": "1349720",
    "end": "1354960"
  },
  {
    "text": "very interesting so all those things we talked about Native image and the build process and how in a way it can seem",
    "start": "1354960",
    "end": "1361159"
  },
  {
    "text": "limiting I think it shines in a whole different way when we talk about security because a native image",
    "start": "1361159",
    "end": "1367799"
  },
  {
    "text": "eliminates all code that you're not using so let's say you're pulling in tons of dependencies and maybe you're",
    "start": "1367799",
    "end": "1373200"
  },
  {
    "text": "not using them that much or some dependency looks kind of suspicious to you but you still want to use like a",
    "start": "1373200",
    "end": "1378400"
  },
  {
    "text": "fraction of it so n image will eliminate everything you're not using and that's one way how you know it reduces attack",
    "start": "1378400",
    "end": "1385640"
  },
  {
    "text": "surface and also uh for example some Vector attacks around just in time code",
    "start": "1385640",
    "end": "1392240"
  },
  {
    "text": "compilation and not just not possible in N image because there is no longer Cod compilation happening at all and also at",
    "start": "1392240",
    "end": "1399400"
  },
  {
    "text": "run time you cannot execute you cannot load new classes you cannot uh do",
    "start": "1399400",
    "end": "1405760"
  },
  {
    "text": "reflection and calization unless you specifically enabled it and it can be seen as a limitation but also you have a",
    "start": "1405760",
    "end": "1411960"
  },
  {
    "text": "bit more like fine grade control over your app and what it does and what is happening in it because if you want to",
    "start": "1411960",
    "end": "1418799"
  },
  {
    "text": "reflection you would need to specify it or this specification need to be coming from framework Library Etc but there are",
    "start": "1418799",
    "end": "1425559"
  },
  {
    "text": "no kind of sketchy things happening without you being aware of it there are also some interesting benefits around",
    "start": "1425559",
    "end": "1431240"
  },
  {
    "text": "security too yeah so you probably won't have any issues regarding to Dynamic class loading reflection serialization",
    "start": "1431240",
    "end": "1437880"
  },
  {
    "text": "because well it's just not there and right or or it's there but it has been like specifically configured and Allowed",
    "start": "1437880",
    "end": "1445159"
  },
  {
    "text": "by you so you you need to enable those things for them to work so yeah it's not it will not be happening without you",
    "start": "1445159",
    "end": "1450760"
  },
  {
    "text": "being aware so how about reflection let's say I'm dynamically loading some classes uh in my native one in my Java",
    "start": "1450760",
    "end": "1457240"
  },
  {
    "text": "code uh there's probably no dynamic glass loader in the native image right so how do how do you do this uh so",
    "start": "1457240",
    "end": "1463480"
  },
  {
    "text": "reflection Works in a way that I mean there was this huge misconception that grum doesn't support reflection so",
    "start": "1463480",
    "end": "1470200"
  },
  {
    "text": "hopefully we have pass that and everyone knows that it supports reflection but there are things to be aware of so there",
    "start": "1470200",
    "end": "1475679"
  },
  {
    "text": "are multiple ways how reflection can happen in Native image a uh if your",
    "start": "1475679",
    "end": "1480919"
  },
  {
    "text": "framework Library Etc doing something that has to do with reflection they would need to provide configuration for na image to tell na image that hey we",
    "start": "1480919",
    "end": "1488320"
  },
  {
    "text": "want to use reflection in this and that class maybe we want to access for example this field so that has to be spe",
    "start": "1488320",
    "end": "1495279"
  },
  {
    "text": "specified in a config file that is being fed interated image and then it can build an app that is aware of that",
    "start": "1495279",
    "end": "1501840"
  },
  {
    "text": "reflection usage and can uh work with that reflection usage that is one part",
    "start": "1501840",
    "end": "1506880"
  },
  {
    "text": "of how reflection Works in Native image now some of kind of more predictable",
    "start": "1506880",
    "end": "1512120"
  },
  {
    "text": "reflection API calls n image configure out on its own so as it's building application it calls that a bit more",
    "start": "1512120",
    "end": "1519279"
  },
  {
    "text": "like trivial and predictable and makes sense n image can figure out on its own so maybe there would be no long",
    "start": "1519279",
    "end": "1524440"
  },
  {
    "text": "configuration happening from you at all it can just make at work and then the",
    "start": "1524440",
    "end": "1529559"
  },
  {
    "text": "last uh way how this can work is that we have this tracing agent in Native image and you can run your application on the",
    "start": "1529559",
    "end": "1535880"
  },
  {
    "text": "jvm and it will do what it is supposed to do and this tracing agent will look at that and will produce this config for",
    "start": "1535880",
    "end": "1542720"
  },
  {
    "text": "you so you don't need to produce it manually but as a last result if you had to produce it manually maybe you have I",
    "start": "1542720",
    "end": "1548919"
  },
  {
    "text": "know a smaller app or something uh the reflection config is basically a Json file where you specify in the like",
    "start": "1548919",
    "end": "1556080"
  },
  {
    "text": "pre-selected format what and how you want to use reflectively and N image can build an app that is a viral that yeah",
    "start": "1556080",
    "end": "1562840"
  },
  {
    "text": "so basically need to pre-specify whatever you'd like whatever your code does reflectively yes because again",
    "start": "1562840",
    "end": "1569440"
  },
  {
    "text": "close World assumption and it gives you all those benefits but you need to like for all those Dynamic Java features you",
    "start": "1569440",
    "end": "1576120"
  },
  {
    "text": "need to tell n image how you're planning to use them because otherwise it most likely cannot figure it out",
    "start": "1576120",
    "end": "1582039"
  },
  {
    "text": "automatically on the close W assumption because runtime hasn't happened yet basically yeah sure okay so uh let's say",
    "start": "1582039",
    "end": "1589399"
  },
  {
    "text": "that I'm now building um apps that that run on a jvm and I want to go into native images can I take any random Java",
    "start": "1589399",
    "end": "1596760"
  },
  {
    "text": "application and boom create a native image of it and and get all those advantages right away so it",
    "start": "1596760",
    "end": "1603440"
  },
  {
    "text": "depends it depends on what your app does which dependencies it's using and again",
    "start": "1603440",
    "end": "1608600"
  },
  {
    "text": "on your usage of those things like reflection calization resources Etc my",
    "start": "1608600",
    "end": "1613799"
  },
  {
    "text": "recommendation would be is that most likely you're using some kind of framework and there are many and many",
    "start": "1613799",
    "end": "1620120"
  },
  {
    "text": "Frameworks in the Java system that are likely supporting native image out of the box so if you're using something",
    "start": "1620120",
    "end": "1625720"
  },
  {
    "text": "like spring boot Micron not hon uh quirkus and that's I would say a",
    "start": "1625720",
    "end": "1630760"
  },
  {
    "text": "majority of the apps probably uh they have support for Native image so you would just need to check if you are",
    "start": "1630760",
    "end": "1636200"
  },
  {
    "text": "using the version of the framework for example that already introduced support for Native image and then things will be",
    "start": "1636200",
    "end": "1642080"
  },
  {
    "text": "significantly easier for you uh so that is one part of how you can do it make it happen and another part if you are not",
    "start": "1642080",
    "end": "1647960"
  },
  {
    "text": "using those Frameworks uh there there is also a way to approach using dependencies and that is that if you",
    "start": "1647960",
    "end": "1654720"
  },
  {
    "text": "want to use some library and let's say that library is using reflection then It's Tricky for image as we established",
    "start": "1654720",
    "end": "1661080"
  },
  {
    "text": "so you can either provide configuration for reflection that Library yourself but",
    "start": "1661080",
    "end": "1666399"
  },
  {
    "text": "most likely it's challenging because you're not the maintainer of the library so maybe you don't know it that well and in that case it's better if the library",
    "start": "1666399",
    "end": "1673159"
  },
  {
    "text": "is providing configuration for Native image within the library itself kind of embedded and luckily we see a lot of",
    "start": "1673159",
    "end": "1678880"
  },
  {
    "text": "that happening right now so if you go and check manual libraries their source code they already provide configuration for na image for their users which is",
    "start": "1678880",
    "end": "1686080"
  },
  {
    "text": "very nice but also we understand that for some libraries it's may be a bit more challenging to adopt n image or",
    "start": "1686080",
    "end": "1692039"
  },
  {
    "text": "they haven't done it yet so for that we created the centralized repon GI up for",
    "start": "1692039",
    "end": "1697120"
  },
  {
    "text": "library and framework authors but also just uh normal native image users can",
    "start": "1697120",
    "end": "1702679"
  },
  {
    "text": "contribute share and then reuse uh all this configuration of a native image and I think it's very cool because it's",
    "start": "1702679",
    "end": "1708720"
  },
  {
    "text": "indeed maybe you're trying to solve reflection for Library X but somebody else already had the challenge and they",
    "start": "1708720",
    "end": "1714360"
  },
  {
    "text": "had it solved so why not you know share this work in our community so we can all benefit from it so we have the",
    "start": "1714360",
    "end": "1720360"
  },
  {
    "text": "centralized repo and it's also integrated with our M incredible plugins and many Frameworks picked it up as well",
    "start": "1720360",
    "end": "1727200"
  },
  {
    "text": "so at the point it works uh so well that you can for example build a native image app and if you're using those plugins or",
    "start": "1727200",
    "end": "1734399"
  },
  {
    "text": "if you're using one of those Frameworks that config will be picked up uh automatically maybe without you being",
    "start": "1734399",
    "end": "1739760"
  },
  {
    "text": "aware of it if you're not looking carefully at the like n image build command so let's say you're using Okay",
    "start": "1739760",
    "end": "1745480"
  },
  {
    "text": "H2 is not necessary because it provides config but let's say you're using some library that doesn't provide config but",
    "start": "1745480",
    "end": "1751039"
  },
  {
    "text": "it is in this repo so our plugins will pull config from that repo and will produce hopefully a fully functional app",
    "start": "1751039",
    "end": "1758880"
  },
  {
    "text": "so that should help sure okay so would you say it's uh uh it's it's relatively",
    "start": "1758880",
    "end": "1764320"
  },
  {
    "text": "doable to transform a regular Java app to native image nowadays but again depends on where is a regular app right",
    "start": "1764320",
    "end": "1771360"
  },
  {
    "text": "sure yeah I remember looking into this uh years ago and then it was pretty hard but it got bad enough I would not say",
    "start": "1771360",
    "end": "1778200"
  },
  {
    "text": "that like every single Java app in the world will compile to Native you know like as you just take it and compile it",
    "start": "1778200",
    "end": "1785200"
  },
  {
    "text": "so it might or might not it depends so I would not promise you that every single Java app in the world would compile the",
    "start": "1785200",
    "end": "1790880"
  },
  {
    "text": "native just like that but if you're starting a new app like in f f is free",
    "start": "1790880",
    "end": "1797320"
  },
  {
    "text": "and if you're using one of those Frameworks I think I will be optimistic enough to say that it should just work",
    "start": "1797320",
    "end": "1802919"
  },
  {
    "text": "okay good so what if somebody is watching once they get started with gr VM right away what are good resources",
    "start": "1802919",
    "end": "1808760"
  },
  {
    "text": "for them to to get started with yes we have a very nice website gr v.org and",
    "start": "1808760",
    "end": "1814840"
  },
  {
    "text": "there you can find basically all the things you need so we have documentations we have samples uh we",
    "start": "1814840",
    "end": "1820519"
  },
  {
    "text": "have reference manuals for things like n image Etc so probably that would be a good place to start and also we have",
    "start": "1820519",
    "end": "1826840"
  },
  {
    "text": "this VM demos repo on G up where you can just go through am demos and build them",
    "start": "1826840",
    "end": "1832039"
  },
  {
    "text": "and run them so you don't need to create any of that code yourself if you just want to give grm a try but you're not",
    "start": "1832039",
    "end": "1838720"
  },
  {
    "text": "ready yet to compile your own application you can just get our demos from get up and compile them and see how",
    "start": "1838720",
    "end": "1844840"
  },
  {
    "text": "that works for you okay thank you well thanks a lot for your time and your explanations I I well I I have more",
    "start": "1844840",
    "end": "1852200"
  },
  {
    "text": "knowledge now but also more questions I think I need to dive in it myself um well I hope you learned something in",
    "start": "1852200",
    "end": "1858480"
  },
  {
    "text": "this episode of goto unscripted so thanks for watching and maybe see you at the next Edition thank you thanks for",
    "start": "1858480",
    "end": "1865399"
  },
  {
    "text": "listening to this episode of the goto podcast head over to gp. Tech to discover lots more content from the",
    "start": "1865399",
    "end": "1871600"
  },
  {
    "text": "brightest minds and software [Music]",
    "start": "1871600",
    "end": "1884399"
  },
  {
    "text": "development",
    "start": "1884399",
    "end": "1887399"
  }
]