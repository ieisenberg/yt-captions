[
  {
    "text": "for talking about monads who already",
    "start": "400",
    "end": "3200"
  },
  {
    "text": "knows",
    "start": "3200",
    "end": "4359"
  },
  {
    "text": "monads i was hoping like everyone knows",
    "start": "4359",
    "end": "6720"
  },
  {
    "text": "them",
    "start": "6720",
    "end": "9120"
  },
  {
    "text": "so",
    "start": "9160",
    "end": "11320"
  },
  {
    "text": "yeah wasn't the case so what's this this",
    "start": "11320",
    "end": "14960"
  },
  {
    "text": "is a handle right a door handle for for",
    "start": "14960",
    "end": "17880"
  },
  {
    "text": "for this photo uh why is it",
    "start": "17880",
    "end": "22279"
  },
  {
    "text": "interesting because actually once you",
    "start": "22279",
    "end": "24480"
  },
  {
    "text": "look at it you know how to use it right",
    "start": "24480",
    "end": "26960"
  },
  {
    "text": "this is basically an interface an",
    "start": "26960",
    "end": "29039"
  },
  {
    "text": "interface that we all understand and we",
    "start": "29039",
    "end": "31199"
  },
  {
    "text": "all know how to use and once we we see",
    "start": "31199",
    "end": "33680"
  },
  {
    "text": "it somewhere we know how to use it",
    "start": "33680",
    "end": "36239"
  },
  {
    "text": "actually we use it on windows on doors",
    "start": "36239",
    "end": "39440"
  },
  {
    "text": "on refrigerators on other things and",
    "start": "39440",
    "end": "43440"
  },
  {
    "text": "again once we see it we are operational",
    "start": "43440",
    "end": "45440"
  },
  {
    "text": "we know how to use it it's a known",
    "start": "45440",
    "end": "47200"
  },
  {
    "text": "interface it has a shared semantics we",
    "start": "47200",
    "end": "49680"
  },
  {
    "text": "know how to use it no matter what the",
    "start": "49680",
    "end": "51840"
  },
  {
    "text": "mechanics are behind right if uh the",
    "start": "51840",
    "end": "54480"
  },
  {
    "text": "lock is sophisticated if it's a left",
    "start": "54480",
    "end": "57120"
  },
  {
    "text": "side or right side if it's a window it's",
    "start": "57120",
    "end": "59680"
  },
  {
    "text": "a refrigerator all these things we don't",
    "start": "59680",
    "end": "61600"
  },
  {
    "text": "care about it's an interface it has",
    "start": "61600",
    "end": "64478"
  },
  {
    "text": "clearly defined semantics you just swing",
    "start": "64479",
    "end": "66880"
  },
  {
    "text": "this uh you you you turn this handle and",
    "start": "66880",
    "end": "70080"
  },
  {
    "text": "you can open something right that's",
    "start": "70080",
    "end": "72760"
  },
  {
    "text": "interesting so we're talking about an",
    "start": "72760",
    "end": "75080"
  },
  {
    "text": "interface shared semantics it's familiar",
    "start": "75080",
    "end": "78799"
  },
  {
    "text": "it's uh ready to use and uh you're",
    "start": "78799",
    "end": "81360"
  },
  {
    "text": "operational right it's just an interface",
    "start": "81360",
    "end": "84240"
  },
  {
    "text": "now what is an a monad and Mona is",
    "start": "84240",
    "end": "87439"
  },
  {
    "text": "exactly the same thing it's an interface",
    "start": "87439",
    "end": "90400"
  },
  {
    "text": "okay that defines some shared semantics",
    "start": "90400",
    "end": "94479"
  },
  {
    "text": "okay so that if everyone understand",
    "start": "94479",
    "end": "96320"
  },
  {
    "text": "these semantics okay then we will we",
    "start": "96320",
    "end": "98720"
  },
  {
    "text": "will be able to use it no matter what",
    "start": "98720",
    "end": "100720"
  },
  {
    "text": "the mechanics are behind of the",
    "start": "100720",
    "end": "102680"
  },
  {
    "text": "implementation and it has an",
    "start": "102680",
    "end": "104680"
  },
  {
    "text": "implementation so any anyone that tells",
    "start": "104680",
    "end": "107119"
  },
  {
    "text": "you monads are patterns or monads are",
    "start": "107119",
    "end": "109600"
  },
  {
    "text": "whatever else they're wrong monads are",
    "start": "109600",
    "end": "113280"
  },
  {
    "text": "interfaces okay it's an interface with",
    "start": "113280",
    "end": "116000"
  },
  {
    "text": "an implementation in the same sense that",
    "start": "116000",
    "end": "118479"
  },
  {
    "text": "we use also interfaces in Java so just",
    "start": "118479",
    "end": "120640"
  },
  {
    "text": "it's a particular interface that has",
    "start": "120640",
    "end": "122640"
  },
  {
    "text": "some",
    "start": "122640",
    "end": "123719"
  },
  {
    "text": "semantics all right so let's imagine",
    "start": "123719",
    "end": "126320"
  },
  {
    "text": "that we have a container just a",
    "start": "126320",
    "end": "129119"
  },
  {
    "text": "container of something right a container",
    "start": "129119",
    "end": "131760"
  },
  {
    "text": "of an A a be a class of things right",
    "start": "131760",
    "end": "135599"
  },
  {
    "text": "it's it's a container of maybe ins or a",
    "start": "135599",
    "end": "138800"
  },
  {
    "text": "container of strings it's a container",
    "start": "138800",
    "end": "141440"
  },
  {
    "text": "okay that might contain something of",
    "start": "141440",
    "end": "143520"
  },
  {
    "text": "type",
    "start": "143520",
    "end": "145840"
  },
  {
    "text": "A now it could be a list of A's right a",
    "start": "146280",
    "end": "150480"
  },
  {
    "text": "list is a container it could be a list",
    "start": "150480",
    "end": "152480"
  },
  {
    "text": "of ins list of strings a list being the",
    "start": "152480",
    "end": "155760"
  },
  {
    "text": "container okay that we know about right",
    "start": "155760",
    "end": "159040"
  },
  {
    "text": "still simple here it could be an option",
    "start": "159040",
    "end": "161519"
  },
  {
    "text": "of A that's another type of container",
    "start": "161519",
    "end": "163840"
  },
  {
    "text": "okay it's a",
    "start": "163840",
    "end": "165239"
  },
  {
    "text": "window versus a door for the first",
    "start": "165239",
    "end": "168000"
  },
  {
    "text": "example and an option of a meaning like",
    "start": "168000",
    "end": "170879"
  },
  {
    "text": "it's an option is a type that has two",
    "start": "170879",
    "end": "173080"
  },
  {
    "text": "subasses being uh sum or none and it",
    "start": "173080",
    "end": "176160"
  },
  {
    "text": "it's used to represent some something",
    "start": "176160",
    "end": "177760"
  },
  {
    "text": "like nulls we have what we have in Java",
    "start": "177760",
    "end": "180480"
  },
  {
    "text": "nulls but in in a more modular and more",
    "start": "180480",
    "end": "182640"
  },
  {
    "text": "composible way we don't care about this",
    "start": "182640",
    "end": "184239"
  },
  {
    "text": "stuff so an option of a is it's another",
    "start": "184239",
    "end": "187040"
  },
  {
    "text": "kind of uh container could be an option",
    "start": "187040",
    "end": "188800"
  },
  {
    "text": "of int an option of string or whatever",
    "start": "188800",
    "end": "190840"
  },
  {
    "text": "else could be a tree of a yet another",
    "start": "190840",
    "end": "194159"
  },
  {
    "text": "container okay we are talking about",
    "start": "194159",
    "end": "196159"
  },
  {
    "text": "containers of type",
    "start": "196159",
    "end": "198280"
  },
  {
    "text": "a future of A there's a value that",
    "start": "198280",
    "end": "201200"
  },
  {
    "text": "happens in the future I have this",
    "start": "201200",
    "end": "202879"
  },
  {
    "text": "container that will allow me to",
    "start": "202879",
    "end": "204720"
  },
  {
    "text": "subscribe to notification when the thing",
    "start": "204720",
    "end": "206560"
  },
  {
    "text": "comes in it's still a container of a",
    "start": "206560",
    "end": "209120"
  },
  {
    "text": "okay we understand like there's a",
    "start": "209120",
    "end": "210799"
  },
  {
    "text": "container we have just a container okay",
    "start": "210799",
    "end": "214000"
  },
  {
    "text": "now if I have a function okay a",
    "start": "214000",
    "end": "216799"
  },
  {
    "text": "transformation thing that knows how to",
    "start": "216799",
    "end": "218959"
  },
  {
    "text": "transform an A into a B so if an A is",
    "start": "218959",
    "end": "222319"
  },
  {
    "text": "int and I have a transformation a",
    "start": "222319",
    "end": "224640"
  },
  {
    "text": "transformer or a function that can",
    "start": "224640",
    "end": "226560"
  },
  {
    "text": "transform an int into a string okay",
    "start": "226560",
    "end": "229040"
  },
  {
    "text": "that's simple right i just know how to",
    "start": "229040",
    "end": "231120"
  },
  {
    "text": "out of an end do a string together with",
    "start": "231120",
    "end": "234480"
  },
  {
    "text": "a",
    "start": "234480",
    "end": "236200"
  },
  {
    "text": "container it could be interesting",
    "start": "236200",
    "end": "239040"
  },
  {
    "text": "actually and nice from this container to",
    "start": "239040",
    "end": "241040"
  },
  {
    "text": "implement something that can give me a",
    "start": "241040",
    "end": "242640"
  },
  {
    "text": "container of B okay it's very simple if",
    "start": "242640",
    "end": "245920"
  },
  {
    "text": "I have a list of A's okay if I have a",
    "start": "245920",
    "end": "249840"
  },
  {
    "text": "list of ints for instance and I got this",
    "start": "249840",
    "end": "252959"
  },
  {
    "text": "function that can take an I and return a",
    "start": "252959",
    "end": "256079"
  },
  {
    "text": "string wow got a got an I and then it",
    "start": "256079",
    "end": "260160"
  },
  {
    "text": "will be nice from this container to",
    "start": "260160",
    "end": "261759"
  },
  {
    "text": "implement a way a mechanism so that they",
    "start": "261759",
    "end": "264639"
  },
  {
    "text": "can transform it into a container of",
    "start": "264639",
    "end": "266400"
  },
  {
    "text": "string right and basically what will",
    "start": "266400",
    "end": "268560"
  },
  {
    "text": "happen is just go into all the the items",
    "start": "268560",
    "end": "270560"
  },
  {
    "text": "in the list and transform all all of",
    "start": "270560",
    "end": "273280"
  },
  {
    "text": "them using this function right very",
    "start": "273280",
    "end": "275440"
  },
  {
    "text": "simple got a container a list of uh ins",
    "start": "275440",
    "end": "278800"
  },
  {
    "text": "and I and I got a function that",
    "start": "278800",
    "end": "280160"
  },
  {
    "text": "transform ins to string and I would like",
    "start": "280160",
    "end": "282560"
  },
  {
    "text": "to have a container of",
    "start": "282560",
    "end": "284520"
  },
  {
    "text": "string no and I don't want to care about",
    "start": "284520",
    "end": "287120"
  },
  {
    "text": "the structure of the list what is inside",
    "start": "287120",
    "end": "289120"
  },
  {
    "text": "the list how is it implemented how do",
    "start": "289120",
    "end": "292040"
  },
  {
    "text": "they go through the list all of these",
    "start": "292040",
    "end": "294560"
  },
  {
    "text": "things i don't care it's just an",
    "start": "294560",
    "end": "296080"
  },
  {
    "text": "interface i want to use it and I know",
    "start": "296080",
    "end": "298080"
  },
  {
    "text": "how to use it because I got this",
    "start": "298080",
    "end": "299919"
  },
  {
    "text": "interface if I have it of course now if",
    "start": "299919",
    "end": "302160"
  },
  {
    "text": "I got an option of int the same",
    "start": "302160",
    "end": "304400"
  },
  {
    "text": "transformation function I would like to",
    "start": "304400",
    "end": "306639"
  },
  {
    "text": "get an option of string same thing it's",
    "start": "306639",
    "end": "309680"
  },
  {
    "text": "a container of some type okay it's a",
    "start": "309680",
    "end": "312479"
  },
  {
    "text": "function that transforms this this type",
    "start": "312479",
    "end": "314919"
  },
  {
    "text": "inside and I get a container of of the",
    "start": "314919",
    "end": "317840"
  },
  {
    "text": "other type right very very simple",
    "start": "317840",
    "end": "320880"
  },
  {
    "text": "semantics",
    "start": "320880",
    "end": "322120"
  },
  {
    "text": "here and same thing for a future of int",
    "start": "322120",
    "end": "324960"
  },
  {
    "text": "I get the same transformation function",
    "start": "324960",
    "end": "326479"
  },
  {
    "text": "and I want to get this thing so we see",
    "start": "326479",
    "end": "328400"
  },
  {
    "text": "like a some kind of interface right",
    "start": "328400",
    "end": "330320"
  },
  {
    "text": "where we don't want to to care about the",
    "start": "330320",
    "end": "332560"
  },
  {
    "text": "details of how these things are",
    "start": "332560",
    "end": "334240"
  },
  {
    "text": "implemented we just wanted to have it",
    "start": "334240",
    "end": "336000"
  },
  {
    "text": "there and we know how to use it we don't",
    "start": "336000",
    "end": "338000"
  },
  {
    "text": "care about the mechanics how do they",
    "start": "338000",
    "end": "340000"
  },
  {
    "text": "implement it we don't really care Right",
    "start": "340000",
    "end": "341919"
  },
  {
    "text": "it's the container guy that will",
    "start": "341919",
    "end": "343199"
  },
  {
    "text": "implement this interface for me and I I",
    "start": "343199",
    "end": "344960"
  },
  {
    "text": "know once I see it I know how to use it",
    "start": "344960",
    "end": "346960"
  },
  {
    "text": "exactly like the",
    "start": "346960",
    "end": "348600"
  },
  {
    "text": "handle now this is a fun now we just",
    "start": "348600",
    "end": "352400"
  },
  {
    "text": "described what functor is a functor is",
    "start": "352400",
    "end": "355759"
  },
  {
    "text": "just uh this interface where you can you",
    "start": "355759",
    "end": "359120"
  },
  {
    "text": "have a container of something and you",
    "start": "359120",
    "end": "360800"
  },
  {
    "text": "have a transformation transformation",
    "start": "360800",
    "end": "362800"
  },
  {
    "text": "function and you can you can return a",
    "start": "362800",
    "end": "366319"
  },
  {
    "text": "container of the other type that's all",
    "start": "366319",
    "end": "368240"
  },
  {
    "text": "what funter are well that's not Monand",
    "start": "368240",
    "end": "371280"
  },
  {
    "text": "right but we're almost",
    "start": "371280",
    "end": "374120"
  },
  {
    "text": "there so I would like to implement the",
    "start": "374120",
    "end": "376720"
  },
  {
    "text": "funer uh interface now we talk about",
    "start": "376720",
    "end": "378639"
  },
  {
    "text": "code right so it's this is exactly the",
    "start": "378639",
    "end": "382160"
  },
  {
    "text": "same what you're seeing here nothing",
    "start": "382160",
    "end": "384000"
  },
  {
    "text": "more complicated we are saying a funer",
    "start": "384000",
    "end": "386160"
  },
  {
    "text": "is an interface trait is an interface in",
    "start": "386160",
    "end": "388479"
  },
  {
    "text": "Scalum it's like an interface it can",
    "start": "388479",
    "end": "390080"
  },
  {
    "text": "have some implementation but that's we",
    "start": "390080",
    "end": "391680"
  },
  {
    "text": "don't care about here and it has this",
    "start": "391680",
    "end": "393919"
  },
  {
    "text": "container okay a generic container we",
    "start": "393919",
    "end": "396160"
  },
  {
    "text": "don't care about what's inside it's like",
    "start": "396160",
    "end": "398560"
  },
  {
    "text": "it could be an M of int an M of string",
    "start": "398560",
    "end": "401680"
  },
  {
    "text": "we don't care it's just a container and",
    "start": "401680",
    "end": "403919"
  },
  {
    "text": "that the map function okay will take a",
    "start": "403919",
    "end": "406639"
  },
  {
    "text": "container of A and a function that",
    "start": "406639",
    "end": "408960"
  },
  {
    "text": "transforms A to B and gives a container",
    "start": "408960",
    "end": "411280"
  },
  {
    "text": "of B okay that's exactly what this we",
    "start": "411280",
    "end": "414240"
  },
  {
    "text": "described just here right just we wrote",
    "start": "414240",
    "end": "416720"
  },
  {
    "text": "it in in code right now I would like to",
    "start": "416720",
    "end": "419280"
  },
  {
    "text": "implement this interface okay for a list",
    "start": "419280",
    "end": "422160"
  },
  {
    "text": "for instance well that's very simple i",
    "start": "422160",
    "end": "424400"
  },
  {
    "text": "would say okay a list functor extends a",
    "start": "424400",
    "end": "427280"
  },
  {
    "text": "functor of list and list b the container",
    "start": "427280",
    "end": "430080"
  },
  {
    "text": "and now I have to implement it by having",
    "start": "430080",
    "end": "432080"
  },
  {
    "text": "a list of a and a to b and then list to",
    "start": "432080",
    "end": "434960"
  },
  {
    "text": "b right and I have to go through the",
    "start": "434960",
    "end": "436800"
  },
  {
    "text": "list whatever the the what's inside the",
    "start": "436800",
    "end": "438720"
  },
  {
    "text": "me the mechan the mechanics in the",
    "start": "438720",
    "end": "440319"
  },
  {
    "text": "inside the list to transform all the",
    "start": "440319",
    "end": "442400"
  },
  {
    "text": "elements using this",
    "start": "442400",
    "end": "443960"
  },
  {
    "text": "function right now we implemented the",
    "start": "443960",
    "end": "446400"
  },
  {
    "text": "funtor we can implement this functor for",
    "start": "446400",
    "end": "448319"
  },
  {
    "text": "option for futures for whatever else now",
    "start": "448319",
    "end": "451199"
  },
  {
    "text": "of course I'm playing a an API designer",
    "start": "451199",
    "end": "453919"
  },
  {
    "text": "As a developer you don't even care about",
    "start": "453919",
    "end": "456080"
  },
  {
    "text": "these things and how they defined you",
    "start": "456080",
    "end": "457840"
  },
  {
    "text": "just use them it's just an interface",
    "start": "457840",
    "end": "459840"
  },
  {
    "text": "it's map and one no matter where I see a",
    "start": "459840",
    "end": "463280"
  },
  {
    "text": "map I know exactly how can I use it this",
    "start": "463280",
    "end": "465440"
  },
  {
    "text": "is a funtor i said \"Oh this is fun i",
    "start": "465440",
    "end": "467520"
  },
  {
    "text": "know it's a shared semantics we",
    "start": "467520",
    "end": "469599"
  },
  {
    "text": "understand the same things",
    "start": "469599",
    "end": "472280"
  },
  {
    "text": "now so that's what I was saying so I",
    "start": "472280",
    "end": "475759"
  },
  {
    "text": "just want to reason about the container",
    "start": "475759",
    "end": "478240"
  },
  {
    "text": "in terms of what's inside it and not in",
    "start": "478240",
    "end": "480319"
  },
  {
    "text": "terms of what is it i don't want to care",
    "start": "480319",
    "end": "482000"
  },
  {
    "text": "if it's an option or if it's a non i",
    "start": "482000",
    "end": "483919"
  },
  {
    "text": "don't want to test these cases here's a",
    "start": "483919",
    "end": "485759"
  },
  {
    "text": "function just give me a container of the",
    "start": "485759",
    "end": "487840"
  },
  {
    "text": "transformation this transformation",
    "start": "487840",
    "end": "491800"
  },
  {
    "text": "now we until we run into a problem now",
    "start": "491800",
    "end": "494879"
  },
  {
    "text": "of course when we we we're working with",
    "start": "494879",
    "end": "497120"
  },
  {
    "text": "these things then I would like actually",
    "start": "497120",
    "end": "499840"
  },
  {
    "text": "I give you a transformation function",
    "start": "499840",
    "end": "501440"
  },
  {
    "text": "that doesn't return a B but the same",
    "start": "501440",
    "end": "503919"
  },
  {
    "text": "container of B for instance I got a list",
    "start": "503919",
    "end": "506319"
  },
  {
    "text": "of a and I give you list of ints and I",
    "start": "506319",
    "end": "509280"
  },
  {
    "text": "give you uh a function that takes an int",
    "start": "509280",
    "end": "512000"
  },
  {
    "text": "and gives a list of uh something else",
    "start": "512000",
    "end": "514240"
  },
  {
    "text": "list of strings now we are kind of stuck",
    "start": "514240",
    "end": "517200"
  },
  {
    "text": "because this using the funtor it will",
    "start": "517200",
    "end": "519680"
  },
  {
    "text": "produce exactly this it will it will",
    "start": "519680",
    "end": "522000"
  },
  {
    "text": "produce a list of list of things right",
    "start": "522000",
    "end": "524320"
  },
  {
    "text": "the same signature we're using the same",
    "start": "524320",
    "end": "526480"
  },
  {
    "text": "uh functor and we get this and this is",
    "start": "526480",
    "end": "529040"
  },
  {
    "text": "not very nice it's very not very nice",
    "start": "529040",
    "end": "532000"
  },
  {
    "text": "because it's it's complicated as a type",
    "start": "532000",
    "end": "534320"
  },
  {
    "text": "like list of list of ins what does it",
    "start": "534320",
    "end": "535839"
  },
  {
    "text": "mean at all i mean list of list of ins",
    "start": "535839",
    "end": "537519"
  },
  {
    "text": "isn't it list of ints so if we got an",
    "start": "537519",
    "end": "540560"
  },
  {
    "text": "option of option of int which means I",
    "start": "540560",
    "end": "543920"
  },
  {
    "text": "maybe maybe have an int well it means I",
    "start": "543920",
    "end": "546640"
  },
  {
    "text": "maybe have an int right optionally",
    "start": "546640",
    "end": "549600"
  },
  {
    "text": "option I have an int then I can kind of",
    "start": "549600",
    "end": "552240"
  },
  {
    "text": "flatten these things okay and this is",
    "start": "552240",
    "end": "554480"
  },
  {
    "text": "very interesting imagine I got an option",
    "start": "554480",
    "end": "556080"
  },
  {
    "text": "of something and I have an operation",
    "start": "556080",
    "end": "558000"
  },
  {
    "text": "that actually returns another option so",
    "start": "558000",
    "end": "560800"
  },
  {
    "text": "using the funtor I'm stuck i know I need",
    "start": "560800",
    "end": "563120"
  },
  {
    "text": "something more powerful that can also",
    "start": "563120",
    "end": "565040"
  },
  {
    "text": "flatten these things",
    "start": "565040",
    "end": "568320"
  },
  {
    "text": "okay so in in the case of list it gets",
    "start": "569480",
    "end": "572480"
  },
  {
    "text": "list of list of A the same for options",
    "start": "572480",
    "end": "575120"
  },
  {
    "text": "gets an option option of A because I got",
    "start": "575120",
    "end": "577040"
  },
  {
    "text": "an option FA a to option of B gives me",
    "start": "577040",
    "end": "580080"
  },
  {
    "text": "option of option of B that's using the",
    "start": "580080",
    "end": "582160"
  },
  {
    "text": "the earlier signature we're not changing",
    "start": "582160",
    "end": "584000"
  },
  {
    "text": "anything here right now how nice would",
    "start": "584000",
    "end": "586640"
  },
  {
    "text": "it be if someone can implement for me",
    "start": "586640",
    "end": "589920"
  },
  {
    "text": "something that also flattens when I need",
    "start": "589920",
    "end": "592080"
  },
  {
    "text": "right not only uses the transformation",
    "start": "592080",
    "end": "595120"
  },
  {
    "text": "but when I have this signature where I",
    "start": "595120",
    "end": "597600"
  },
  {
    "text": "from A to container of B flattens the",
    "start": "597600",
    "end": "600480"
  },
  {
    "text": "container of container of B the list of",
    "start": "600480",
    "end": "602720"
  },
  {
    "text": "list of A because a list of list of A is",
    "start": "602720",
    "end": "604800"
  },
  {
    "text": "a list of A right it's a list of list of",
    "start": "604800",
    "end": "606880"
  },
  {
    "text": "ends then I can just flatten this list",
    "start": "606880",
    "end": "609440"
  },
  {
    "text": "and I have one list of all the ends",
    "start": "609440",
    "end": "611200"
  },
  {
    "text": "contain all these lists right that's",
    "start": "611200",
    "end": "613519"
  },
  {
    "text": "that's very simple",
    "start": "613519",
    "end": "616079"
  },
  {
    "text": "Okay and that's the monad now you know",
    "start": "616079",
    "end": "618800"
  },
  {
    "text": "exactly what the monad",
    "start": "618800",
    "end": "620760"
  },
  {
    "text": "is so if we look at the interface the",
    "start": "620760",
    "end": "624000"
  },
  {
    "text": "implementation and that's exactly the",
    "start": "624000",
    "end": "626000"
  },
  {
    "text": "code that we were showing exactly we",
    "start": "626000",
    "end": "628240"
  },
  {
    "text": "didn't add anything here we say like a",
    "start": "628240",
    "end": "630480"
  },
  {
    "text": "monad is an interface that takes any",
    "start": "630480",
    "end": "632800"
  },
  {
    "text": "container okay that you can define monad",
    "start": "632800",
    "end": "635360"
  },
  {
    "text": "for any container and I got these two",
    "start": "635360",
    "end": "638000"
  },
  {
    "text": "operations one comes from the funar okay",
    "start": "638000",
    "end": "641200"
  },
  {
    "text": "so a monad is a functor now you know",
    "start": "641200",
    "end": "643760"
  },
  {
    "text": "this you can say or you can tweet about",
    "start": "643760",
    "end": "645839"
  },
  {
    "text": "it like I'm a functor wow how cool is",
    "start": "645839",
    "end": "648760"
  },
  {
    "text": "that and so you have the map function",
    "start": "648760",
    "end": "651680"
  },
  {
    "text": "but you have also the flat map which is",
    "start": "651680",
    "end": "653920"
  },
  {
    "text": "more interesting in some cases where you",
    "start": "653920",
    "end": "655680"
  },
  {
    "text": "need to flatten things so I get flat map",
    "start": "655680",
    "end": "658560"
  },
  {
    "text": "and I got h one container of a and and a",
    "start": "658560",
    "end": "662240"
  },
  {
    "text": "function that takes an a and gives an a",
    "start": "662240",
    "end": "664399"
  },
  {
    "text": "container of b and I get a container of",
    "start": "664399",
    "end": "666560"
  },
  {
    "text": "b instead of getting container of",
    "start": "666560",
    "end": "668160"
  },
  {
    "text": "container of b right that's very simple",
    "start": "668160",
    "end": "670560"
  },
  {
    "text": "you can even implement it yourself now",
    "start": "670560",
    "end": "672480"
  },
  {
    "text": "that that code is the designer of an",
    "start": "672480",
    "end": "675200"
  },
  {
    "text": "implement of a monad it's not the",
    "start": "675200",
    "end": "677200"
  },
  {
    "text": "developer that has to see this code",
    "start": "677200",
    "end": "679200"
  },
  {
    "text": "right it's someone that is designing a a",
    "start": "679200",
    "end": "682160"
  },
  {
    "text": "that implementing a monad for his",
    "start": "682160",
    "end": "683920"
  },
  {
    "text": "particular container right and that's",
    "start": "683920",
    "end": "686560"
  },
  {
    "text": "interesting because from a developer",
    "start": "686560",
    "end": "689240"
  },
  {
    "text": "side all all what I need to know is this",
    "start": "689240",
    "end": "693120"
  },
  {
    "text": "is a monad oh I can use flat map or map",
    "start": "693120",
    "end": "696000"
  },
  {
    "text": "and I can continue using this thing",
    "start": "696000",
    "end": "698320"
  },
  {
    "text": "forever without any problem right i can",
    "start": "698320",
    "end": "700800"
  },
  {
    "text": "completely transform things compose",
    "start": "700800",
    "end": "703440"
  },
  {
    "text": "things and completely like use this",
    "start": "703440",
    "end": "706240"
  },
  {
    "text": "without any any anything stopping me",
    "start": "706240",
    "end": "710360"
  },
  {
    "text": "almost because imagine this handle if",
    "start": "710360",
    "end": "713519"
  },
  {
    "text": "you take this handle as an example and",
    "start": "713519",
    "end": "716560"
  },
  {
    "text": "uh if if for instance that the uh",
    "start": "716560",
    "end": "719200"
  },
  {
    "text": "manufacturer of this handle will tell",
    "start": "719200",
    "end": "721040"
  },
  {
    "text": "you like well you can only turn it three",
    "start": "721040",
    "end": "723360"
  },
  {
    "text": "times and after three the third time you",
    "start": "723360",
    "end": "726160"
  },
  {
    "text": "have to turn it the other way around or",
    "start": "726160",
    "end": "727839"
  },
  {
    "text": "it won't work or you should not turn it",
    "start": "727839",
    "end": "729600"
  },
  {
    "text": "three times or whatever so there are",
    "start": "729600",
    "end": "731360"
  },
  {
    "text": "things that are not captured in the",
    "start": "731360",
    "end": "732959"
  },
  {
    "text": "structure right the structure is not",
    "start": "732959",
    "end": "735040"
  },
  {
    "text": "telling any everything about the handle",
    "start": "735040",
    "end": "737040"
  },
  {
    "text": "there are some laws you need to obey to",
    "start": "737040",
    "end": "739360"
  },
  {
    "text": "be able to use to have a a good",
    "start": "739360",
    "end": "742399"
  },
  {
    "text": "implementation of of a handle right if",
    "start": "742399",
    "end": "744639"
  },
  {
    "text": "some manufacturer gives you a handle",
    "start": "744639",
    "end": "746079"
  },
  {
    "text": "that has some weird characteristics you",
    "start": "746079",
    "end": "749440"
  },
  {
    "text": "lost the shared semantics shared",
    "start": "749440",
    "end": "751440"
  },
  {
    "text": "semantics is very important and you",
    "start": "751440",
    "end": "753279"
  },
  {
    "text": "don't want to lose it and that's why",
    "start": "753279",
    "end": "754560"
  },
  {
    "text": "there's there are some some things that",
    "start": "754560",
    "end": "756000"
  },
  {
    "text": "you can capture you can implement in the",
    "start": "756000",
    "end": "757839"
  },
  {
    "text": "structure in your implementation and",
    "start": "757839",
    "end": "759839"
  },
  {
    "text": "there are few things you need to verify",
    "start": "759839",
    "end": "762399"
  },
  {
    "text": "to be able to to to uh be sure that",
    "start": "762399",
    "end": "765920"
  },
  {
    "text": "everything will will be working",
    "start": "765920",
    "end": "768200"
  },
  {
    "text": "fine so some properties are not",
    "start": "768200",
    "end": "770560"
  },
  {
    "text": "guaranteed with a structure and you need",
    "start": "770560",
    "end": "772560"
  },
  {
    "text": "to validate some laws which are left",
    "start": "772560",
    "end": "775839"
  },
  {
    "text": "identity right identity and associivity",
    "start": "775839",
    "end": "778079"
  },
  {
    "text": "really very simple laws like if you",
    "start": "778079",
    "end": "780560"
  },
  {
    "text": "apply it with ID with with a function",
    "start": "780560",
    "end": "782240"
  },
  {
    "text": "that takes the same and returns the same",
    "start": "782240",
    "end": "784320"
  },
  {
    "text": "returns an argument and returns it then",
    "start": "784320",
    "end": "786399"
  },
  {
    "text": "it will be the same monad and things",
    "start": "786399",
    "end": "788160"
  },
  {
    "text": "like that so very small laws that are",
    "start": "788160",
    "end": "790880"
  },
  {
    "text": "not captured in the structure if as an",
    "start": "790880",
    "end": "793440"
  },
  {
    "text": "implement of a monad as someone that has",
    "start": "793440",
    "end": "795760"
  },
  {
    "text": "a container and wants to implement a",
    "start": "795760",
    "end": "797200"
  },
  {
    "text": "monad you satisfy these laws you're",
    "start": "797200",
    "end": "800000"
  },
  {
    "text": "guaranteed that you'll have a",
    "start": "800000",
    "end": "801360"
  },
  {
    "text": "functioning well functioning monad that",
    "start": "801360",
    "end": "803200"
  },
  {
    "text": "will never break while the user is using",
    "start": "803200",
    "end": "805360"
  },
  {
    "text": "it you know imagine you're chaining at",
    "start": "805360",
    "end": "806880"
  },
  {
    "text": "some point you get some weird uh state",
    "start": "806880",
    "end": "809519"
  },
  {
    "text": "where it tells you no I can't do that",
    "start": "809519",
    "end": "811040"
  },
  {
    "text": "anymore something you get with jQuery",
    "start": "811040",
    "end": "812800"
  },
  {
    "text": "for instance sometimes when you start",
    "start": "812800",
    "end": "814959"
  },
  {
    "text": "using the thing and then it tells you oh",
    "start": "814959",
    "end": "816480"
  },
  {
    "text": "well it's not an array anymore and you",
    "start": "816480",
    "end": "818240"
  },
  {
    "text": "have to rewrap it into a a dollar so",
    "start": "818240",
    "end": "820399"
  },
  {
    "text": "that it gets back to the jQuery and all",
    "start": "820399",
    "end": "822079"
  },
  {
    "text": "of these things you don't want to have",
    "start": "822079",
    "end": "823519"
  },
  {
    "text": "these kind of weird things happening you",
    "start": "823519",
    "end": "825600"
  },
  {
    "text": "want like uh the thing to continue",
    "start": "825600",
    "end": "828560"
  },
  {
    "text": "functioning that's why you obey these",
    "start": "828560",
    "end": "830760"
  },
  {
    "text": "laws and that's it well what about",
    "start": "830760",
    "end": "834639"
  },
  {
    "text": "category theory well category theory is",
    "start": "834639",
    "end": "836800"
  },
  {
    "text": "all there is there just for proving for",
    "start": "836800",
    "end": "838880"
  },
  {
    "text": "you that that this thing it's it's kind",
    "start": "838880",
    "end": "841680"
  },
  {
    "text": "of has the the the foundation that",
    "start": "841680",
    "end": "844000"
  },
  {
    "text": "proves that this thing will continue to",
    "start": "844000",
    "end": "845839"
  },
  {
    "text": "function if you obey the laws and that's",
    "start": "845839",
    "end": "848000"
  },
  {
    "text": "it and you don't need to care about",
    "start": "848000",
    "end": "849760"
  },
  {
    "text": "these things you care about them if",
    "start": "849760",
    "end": "851600"
  },
  {
    "text": "you're interested in the proof why this",
    "start": "851600",
    "end": "853360"
  },
  {
    "text": "thing is functional and why is it",
    "start": "853360",
    "end": "855040"
  },
  {
    "text": "interesting as a developer you see a map",
    "start": "855040",
    "end": "858000"
  },
  {
    "text": "you see a flat map you know it's a monad",
    "start": "858000",
    "end": "859920"
  },
  {
    "text": "you know how to deal with it be it",
    "start": "859920",
    "end": "862000"
  },
  {
    "text": "whatever container it is it could be",
    "start": "862000",
    "end": "863920"
  },
  {
    "text": "option could be future it could be tree",
    "start": "863920",
    "end": "866079"
  },
  {
    "text": "it could be IO it could be anything you",
    "start": "866079",
    "end": "869199"
  },
  {
    "text": "just have a a shared semantics an",
    "start": "869199",
    "end": "871600"
  },
  {
    "text": "interface and you know exactly how to",
    "start": "871600",
    "end": "873600"
  },
  {
    "text": "deal with that as an implement you have",
    "start": "873600",
    "end": "875600"
  },
  {
    "text": "a little bit of work to do is just to",
    "start": "875600",
    "end": "877839"
  },
  {
    "text": "implement this interface which we we saw",
    "start": "877839",
    "end": "879760"
  },
  {
    "text": "very very simple and you can implement",
    "start": "879760",
    "end": "881279"
  },
  {
    "text": "it for your own mechanics of your own",
    "start": "881279",
    "end": "883160"
  },
  {
    "text": "container and to obey obey these three",
    "start": "883160",
    "end": "887320"
  },
  {
    "text": "laws and actually that's it so open for",
    "start": "887320",
    "end": "891040"
  },
  {
    "text": "questions",
    "start": "891040",
    "end": "893360"
  },
  {
    "text": "now so what I want like if you now I I",
    "start": "894600",
    "end": "897920"
  },
  {
    "text": "guess a lot of people didn't know what",
    "start": "897920",
    "end": "899600"
  },
  {
    "text": "monads are i guess it's fairly simple",
    "start": "899600",
    "end": "902000"
  },
  {
    "text": "right like we need we we hear a lot of",
    "start": "902000",
    "end": "903920"
  },
  {
    "text": "definitions that try to complicate them",
    "start": "903920",
    "end": "905760"
  },
  {
    "text": "but just now when you see map or flat",
    "start": "905760",
    "end": "908160"
  },
  {
    "text": "map you know exactly how to deal with",
    "start": "908160",
    "end": "909600"
  },
  {
    "text": "these things right",
    "start": "909600",
    "end": "911839"
  },
  {
    "text": "josh",
    "start": "911839",
    "end": "914079"
  },
  {
    "text": "you talked a lot about putting things",
    "start": "914079",
    "end": "915600"
  },
  {
    "text": "into the container how do you get them",
    "start": "915600",
    "end": "917600"
  },
  {
    "text": "back out of the container yeah uh well",
    "start": "917600",
    "end": "920480"
  },
  {
    "text": "that's that's not part of of the monet",
    "start": "920480",
    "end": "922639"
  },
  {
    "text": "so some containers so some containers",
    "start": "922639",
    "end": "925120"
  },
  {
    "text": "can allow you to to get out things of",
    "start": "925120",
    "end": "928160"
  },
  {
    "text": "the container some won't like the IO",
    "start": "928160",
    "end": "930800"
  },
  {
    "text": "monet will not let you get things out of",
    "start": "930800",
    "end": "932800"
  },
  {
    "text": "it some of them tell you okay you can",
    "start": "932800",
    "end": "934399"
  },
  {
    "text": "get out for in the future you can't get",
    "start": "934399",
    "end": "936800"
  },
  {
    "text": "something out you can subscribe to",
    "start": "936800",
    "end": "938560"
  },
  {
    "text": "notification when it happens to and this",
    "start": "938560",
    "end": "940399"
  },
  {
    "text": "is not part of the mechanics of the of",
    "start": "940399",
    "end": "942320"
  },
  {
    "text": "the of the monad we don't care really",
    "start": "942320",
    "end": "944240"
  },
  {
    "text": "about it when we talk about the monad",
    "start": "944240",
    "end": "946000"
  },
  {
    "text": "it's the container that defines",
    "start": "946000",
    "end": "947279"
  },
  {
    "text": "something else it could be another",
    "start": "947279",
    "end": "949120"
  },
  {
    "text": "abstraction that will define how to",
    "start": "949120",
    "end": "950639"
  },
  {
    "text": "extract things there are some others",
    "start": "950639",
    "end": "952320"
  },
  {
    "text": "like konad there are uh monoids there",
    "start": "952320",
    "end": "954959"
  },
  {
    "text": "are foldable there are a lot of other",
    "start": "954959",
    "end": "956399"
  },
  {
    "text": "things to so that you can extract things",
    "start": "956399",
    "end": "958880"
  },
  {
    "text": "but monet is doesn't happen to be one of",
    "start": "958880",
    "end": "961519"
  },
  {
    "text": "caring about these kind of",
    "start": "961519",
    "end": "964199"
  },
  {
    "text": "aspects",
    "start": "964199",
    "end": "967199"
  },
  {
    "text": "questions okay",
    "start": "967320",
    "end": "971320"
  },
  {
    "text": "so far you've been talking mostly",
    "start": "972720",
    "end": "974639"
  },
  {
    "text": "abstractly about the interface of the",
    "start": "974639",
    "end": "977199"
  },
  {
    "text": "monad can you talk about",
    "start": "977199",
    "end": "979399"
  },
  {
    "text": "more concretely what this gives you is",
    "start": "979399",
    "end": "982560"
  },
  {
    "text": "it just you see this thing and you know",
    "start": "982560",
    "end": "984399"
  },
  {
    "text": "how to use it what are some example",
    "start": "984399",
    "end": "986480"
  },
  {
    "text": "monads you might use i gave you an",
    "start": "986480",
    "end": "988880"
  },
  {
    "text": "example of a list now if in 15 minutes I",
    "start": "988880",
    "end": "992079"
  },
  {
    "text": "can I don't know what how much time I",
    "start": "992079",
    "end": "993759"
  },
  {
    "text": "got but I",
    "start": "993759",
    "end": "995639"
  },
  {
    "text": "can none",
    "start": "995639",
    "end": "999040"
  },
  {
    "text": "four minutes left yeah so it's like I",
    "start": "999040",
    "end": "1001759"
  },
  {
    "text": "showed the list monad and the list monad",
    "start": "1001759",
    "end": "1003600"
  },
  {
    "text": "is very interesting because it's a very",
    "start": "1003600",
    "end": "1004880"
  },
  {
    "text": "simple example of of how you use it you",
    "start": "1004880",
    "end": "1007040"
  },
  {
    "text": "got a list of things you reason about",
    "start": "1007040",
    "end": "1009360"
  },
  {
    "text": "one thing as if it were one thing right",
    "start": "1009360",
    "end": "1011839"
  },
  {
    "text": "and you give a function so you have a",
    "start": "1011839",
    "end": "1013600"
  },
  {
    "text": "list of ints and you say like okay I can",
    "start": "1013600",
    "end": "1015839"
  },
  {
    "text": "transform an int into a string which",
    "start": "1015839",
    "end": "1017600"
  },
  {
    "text": "means like you and the monad will will",
    "start": "1017600",
    "end": "1019440"
  },
  {
    "text": "allow you or the functor for that matter",
    "start": "1019440",
    "end": "1021199"
  },
  {
    "text": "allow you to transform the whole list",
    "start": "1021199",
    "end": "1022560"
  },
  {
    "text": "into a list of strings right this is one",
    "start": "1022560",
    "end": "1025199"
  },
  {
    "text": "case one use case the option was another",
    "start": "1025199",
    "end": "1027360"
  },
  {
    "text": "case but there are a lot of cases you",
    "start": "1027360",
    "end": "1029520"
  },
  {
    "text": "can go through there are a lot of",
    "start": "1029520",
    "end": "1030880"
  },
  {
    "text": "examples of monas but they are exactly",
    "start": "1030880",
    "end": "1032400"
  },
  {
    "text": "the same semantics and you know this uh",
    "start": "1032400",
    "end": "1034880"
  },
  {
    "text": "transforming the what's inside the",
    "start": "1034880",
    "end": "1036678"
  },
  {
    "text": "container and uh reflattening okay but",
    "start": "1036679",
    "end": "1040880"
  },
  {
    "text": "again in the list case you don't care",
    "start": "1040880",
    "end": "1043280"
  },
  {
    "text": "about how the list is implemented it's",
    "start": "1043280",
    "end": "1045839"
  },
  {
    "text": "the mechanics of the implementation of",
    "start": "1045839",
    "end": "1047438"
  },
  {
    "text": "the monad",
    "start": "1047439",
    "end": "1049080"
  },
  {
    "text": "right so since I don't have really much",
    "start": "1049080",
    "end": "1053840"
  },
  {
    "text": "time I will try okay just please",
    "start": "1053840",
    "end": "1056720"
  },
  {
    "text": "Christian tell me when I am you if I",
    "start": "1056720",
    "end": "1060640"
  },
  {
    "text": "don't have any more time it's already",
    "start": "1060640",
    "end": "1062480"
  },
  {
    "text": "the case right and I don't see my",
    "start": "1062480",
    "end": "1064400"
  },
  {
    "text": "console so I wouldn't it wouldn't it",
    "start": "1064400",
    "end": "1065600"
  },
  {
    "text": "wouldn't make it here",
    "start": "1065600",
    "end": "1068600"
  },
  {
    "text": "anyway okay I see something",
    "start": "1068600",
    "end": "1072559"
  },
  {
    "text": "now oh won't build this",
    "start": "1073160",
    "end": "1077600"
  },
  {
    "text": "fast come on come on come on this is",
    "start": "1077880",
    "end": "1083440"
  },
  {
    "text": "BT okay so I want to go to console",
    "start": "1083720",
    "end": "1089400"
  },
  {
    "text": "no that's not going to make me make it",
    "start": "1089600",
    "end": "1091200"
  },
  {
    "text": "it's going to download the",
    "start": "1091200",
    "end": "1093799"
  },
  {
    "text": "internet but anyway that I mean you can",
    "start": "1093799",
    "end": "1096000"
  },
  {
    "text": "you can just search and there are a lot",
    "start": "1096000",
    "end": "1097679"
  },
  {
    "text": "of examples of of uh different kinds of",
    "start": "1097679",
    "end": "1100000"
  },
  {
    "text": "monads but you need to capture the main",
    "start": "1100000",
    "end": "1102400"
  },
  {
    "text": "idea shirt semantics so here I got",
    "start": "1102400",
    "end": "1104880"
  },
  {
    "text": "something if I say like I have a list",
    "start": "1104880",
    "end": "1107600"
  },
  {
    "text": "that got one two three and I say and",
    "start": "1107600",
    "end": "1111760"
  },
  {
    "text": "probably you don't see anything right",
    "start": "1111760",
    "end": "1113760"
  },
  {
    "text": "okay let's try to zoom it",
    "start": "1113760",
    "end": "1117960"
  },
  {
    "text": "dot map and I'm taking an int and",
    "start": "1117960",
    "end": "1121840"
  },
  {
    "text": "returning a string",
    "start": "1121840",
    "end": "1123799"
  },
  {
    "text": "of got",
    "start": "1123799",
    "end": "1126520"
  },
  {
    "text": "a plus i and now I get if it runs it",
    "start": "1126520",
    "end": "1132720"
  },
  {
    "text": "sometime soon yeah so I got the list of",
    "start": "1132720",
    "end": "1135919"
  },
  {
    "text": "got a got a got two get three right and",
    "start": "1135919",
    "end": "1139520"
  },
  {
    "text": "uh okay I I I have a space here and",
    "start": "1139520",
    "end": "1141919"
  },
  {
    "text": "space here now I can I can return a list",
    "start": "1141919",
    "end": "1144799"
  },
  {
    "text": "of things here",
    "start": "1144799",
    "end": "1146799"
  },
  {
    "text": "for each item I'm returning a list",
    "start": "1146799",
    "end": "1148480"
  },
  {
    "text": "another in the same container of another",
    "start": "1148480",
    "end": "1150640"
  },
  {
    "text": "uh another type so I got a list here",
    "start": "1150640",
    "end": "1153799"
  },
  {
    "text": "of got an A",
    "start": "1153799",
    "end": "1156360"
  },
  {
    "text": "and I don't know what",
    "start": "1156360",
    "end": "1160120"
  },
  {
    "text": "wow and here I have to so if I use the",
    "start": "1160120",
    "end": "1163280"
  },
  {
    "text": "the functor here what I will get is a",
    "start": "1163280",
    "end": "1165440"
  },
  {
    "text": "list of list we see the type here we see",
    "start": "1165440",
    "end": "1167679"
  },
  {
    "text": "the type it's a list of list of string",
    "start": "1167679",
    "end": "1169760"
  },
  {
    "text": "that's not very nice right i get a list",
    "start": "1169760",
    "end": "1171840"
  },
  {
    "text": "of list of the first list and the second",
    "start": "1171840",
    "end": "1173600"
  },
  {
    "text": "list and so on if I use flat",
    "start": "1173600",
    "end": "1176039"
  },
  {
    "text": "map then it will go flatten",
    "start": "1176039",
    "end": "1179640"
  },
  {
    "text": "it and I will get something nicer which",
    "start": "1179640",
    "end": "1182799"
  },
  {
    "text": "is one list flattened of of this list",
    "start": "1182799",
    "end": "1185120"
  },
  {
    "text": "and I can apply it to options I can",
    "start": "1185120",
    "end": "1186720"
  },
  {
    "text": "apply to anything right uh and uh of",
    "start": "1186720",
    "end": "1189200"
  },
  {
    "text": "course languages since it's very very uh",
    "start": "1189200",
    "end": "1191440"
  },
  {
    "text": "interesting and like this semantics is",
    "start": "1191440",
    "end": "1193520"
  },
  {
    "text": "very general they provide even syntax",
    "start": "1193520",
    "end": "1195600"
  },
  {
    "text": "for doing that which is for",
    "start": "1195600",
    "end": "1197120"
  },
  {
    "text": "comprehensions or whatever they they",
    "start": "1197120",
    "end": "1198400"
  },
  {
    "text": "they tend to call them in different",
    "start": "1198400",
    "end": "1199919"
  },
  {
    "text": "languages C scala",
    "start": "1199919",
    "end": "1203200"
  },
  {
    "text": "uh whatever the other languages has so",
    "start": "1203200",
    "end": "1208000"
  },
  {
    "text": "thanks okay thank you",
    "start": "1208000",
    "end": "1213160"
  },
  {
    "text": "so see you see you back for",
    "start": "1216240",
    "end": "1220520"
  }
]