[
  {
    "text": "[Music] welcome to the goto podcast each episode",
    "start": "290",
    "end": "7919"
  },
  {
    "text": "covers the brightest and boldest ideas from the world's leading experts in software development tune in for",
    "start": "7919",
    "end": "14200"
  },
  {
    "text": "practical lessons compelling theories and plenty of",
    "start": "14200",
    "end": "19279"
  },
  {
    "text": "inspiration go to gathers the brightest Minds in the software Community to help developers tackle projects today plan",
    "start": "19880",
    "end": "26679"
  },
  {
    "text": "for tomorrow and create a better future stay up to dat with the latest in Tech through go-to's top rated events held",
    "start": "26679",
    "end": "33280"
  },
  {
    "text": "online and in person in cities like Amsterdam London Copenhagen and Chicago",
    "start": "33280",
    "end": "39120"
  },
  {
    "text": "and by subscribing to the goto conferences YouTube channel where you can find thousands more highquality de",
    "start": "39120",
    "end": "44640"
  },
  {
    "text": "talks learn more ecotopia [Music]",
    "start": "44640",
    "end": "50920"
  },
  {
    "text": "dotech I am uh Richard Feldman welcome to this uh Book Club interview uh so I'm",
    "start": "50920",
    "end": "56920"
  },
  {
    "text": "the author of element action which is not what we're discussing here we did a separate book Club on that uh but from the same publisher Manning Publications",
    "start": "56920",
    "end": "63719"
  },
  {
    "text": "um uh Tim is the author of Rus in action you'll meet him in a second and uh this is a totally different book and a much",
    "start": "63719",
    "end": "69840"
  },
  {
    "text": "different audience so we're going to talk all about the book and what motivated him to write it and all sorts of things about the the process and uh",
    "start": "69840",
    "end": "76200"
  },
  {
    "text": "I'm really excited to talk about it because I also am a big fan of rust I I teach a um a course for front-end",
    "start": "76200",
    "end": "81360"
  },
  {
    "text": "Masters called intro to rust I've written a compiler in Rust um big fan of the language and really excited to talk",
    "start": "81360",
    "end": "87200"
  },
  {
    "text": "about it today so Tim do you want to introduce yourself yeah hey thanks Richard uh so my name is Tim magnamar I",
    "start": "87200",
    "end": "92880"
  },
  {
    "text": "am a developer based in New Zealand but in prior to rust I was a python",
    "start": "92880",
    "end": "99680"
  },
  {
    "text": "developer primarily in like the data science space uh and a few years ago I was sort",
    "start": "99680",
    "end": "107880"
  },
  {
    "text": "of like itching scratching around for trying to figure out like how computers actually",
    "start": "107880",
    "end": "113320"
  },
  {
    "text": "work and then I kind of accidentally got asked to write a book",
    "start": "113320",
    "end": "120719"
  },
  {
    "text": "uh and and so in so that's that's kind of the patch for rust in action if you",
    "start": "120719",
    "end": "127720"
  },
  {
    "text": "are uh from sort of a dynamic programming background or even I say a",
    "start": "127720",
    "end": "132879"
  },
  {
    "text": "Java but you've never really encountered these terms systems like this term",
    "start": "132879",
    "end": "138000"
  },
  {
    "text": "systems programming or any of the concepts around that that's really what",
    "start": "138000",
    "end": "143160"
  },
  {
    "text": "Russ the action is trying to provide a little bit of a glimpse in to not so",
    "start": "143160",
    "end": "148800"
  },
  {
    "text": "much teaching you system programming it's primarily there to teach you rust but it uses Concepts like from drawn",
    "start": "148800",
    "end": "155720"
  },
  {
    "text": "from sort of that subfield to really um to really kind of enable you to feel",
    "start": "155720",
    "end": "161879"
  },
  {
    "text": "welcome inside the rust Community nice yeah well so let's talk about that a little bit more so you said your background is kind of a python developer",
    "start": "161879",
    "end": "168840"
  },
  {
    "text": "I actually came to rust from a similar perspective of um not really having done any kind of systems programming like I I",
    "start": "168840",
    "end": "174760"
  },
  {
    "text": "knew C and C++ a long time ago and kind of had a bad experience with them to be honest didn't didn't really have any",
    "start": "174760",
    "end": "180599"
  },
  {
    "text": "interest in getting back into that world but there was this kind of curiosity about you know I I've always for my",
    "start": "180599",
    "end": "186200"
  },
  {
    "text": "whole career up to that point i' always been on top of some sort of virtual machine or interpreter or something like that I never really knew what was going",
    "start": "186200",
    "end": "192360"
  },
  {
    "text": "on under the hood and that was always something intriguing to me it sounds like it was for you too so how did you",
    "start": "192360",
    "end": "198599"
  },
  {
    "text": "actually go about like learning rust yourself you know this book didn't exist right there was no uh we got it right",
    "start": "198599",
    "end": "203720"
  },
  {
    "text": "here R in action right nice and uh I've got my copies down the back I should I",
    "start": "203720",
    "end": "209319"
  },
  {
    "text": "should um but you know it didn't exist obviously because you hadn't written it yet uh but there's all these resources",
    "start": "209319",
    "end": "216200"
  },
  {
    "text": "out there I mean um there's like the official like free Rust book that you can read um other people have written rust books so I'm kind of curious about",
    "start": "216200",
    "end": "224000"
  },
  {
    "text": "you know um what was it about uh that that sort of motivated you to write the book in this way like you know what did",
    "start": "224000",
    "end": "229879"
  },
  {
    "text": "you want to sort of accomplish to to you know present people some something different that what was already out there right so uh the very last very end",
    "start": "229879",
    "end": "238959"
  },
  {
    "text": "of your question kind of hinted at the answer actually so um I intentionally I'm like one of the",
    "start": "238959",
    "end": "246920"
  },
  {
    "text": "last people to learn rust without the book the official the programming language the free one online I actually",
    "start": "246920",
    "end": "253319"
  },
  {
    "text": "intentionally didn't refer to that at all because I was overly uh concerned about like copyright",
    "start": "253319",
    "end": "260639"
  },
  {
    "text": "protection and things like and I didn't want to plagiarize other material oh interesting and same with the O'Reilly",
    "start": "260639",
    "end": "267000"
  },
  {
    "text": "book programming rust so it turns there's like accidental plagiarism",
    "start": "267000",
    "end": "273919"
  },
  {
    "text": "uh we um it turns out that the Russ action as well is programming Rosy O'Reiley uh book",
    "start": "273919",
    "end": "282280"
  },
  {
    "text": "um have like um a a renderer for the Mander BR set my one happens to be",
    "start": "282280",
    "end": "288039"
  },
  {
    "text": "inside the the terminal and and I was like like after the publication I after",
    "start": "288039",
    "end": "293840"
  },
  {
    "text": "my book was published I was like reading through the others and I was like oh wait a minute that was maybe a mistake",
    "start": "293840",
    "end": "299680"
  },
  {
    "text": "um but uh to answer your question I really wanted to produce a",
    "start": "299680",
    "end": "305759"
  },
  {
    "text": "book that was different than every other book I'd ever seen so I kind of and from",
    "start": "305759",
    "end": "311919"
  },
  {
    "text": "like a marketing or like perspective I didn't want to write like a me too book",
    "start": "311919",
    "end": "317000"
  },
  {
    "text": "I couldn't really compete with the official reference so we could or like the official guide so I can't write a",
    "start": "317000",
    "end": "323360"
  },
  {
    "text": "book that just takes you let's say start with integers and then we get to floats and then we get to Strings and then we",
    "start": "323360",
    "end": "328960"
  },
  {
    "text": "like have and we combine them together and then we might talk about traits like I can't write that book again like that",
    "start": "328960",
    "end": "334919"
  },
  {
    "text": "doesn't it's impossible to really compete with free essentially sure program unless you're doing",
    "start": "334919",
    "end": "341240"
  },
  {
    "text": "something different right right exactly and so programming RR O'Reilly was the other one that was coming out and",
    "start": "341240",
    "end": "347000"
  },
  {
    "text": "Manning was really concerned like we really got to get on on this rust space",
    "start": "347000",
    "end": "352440"
  },
  {
    "text": "uh and that was really focused on C++ developers who were kind of like rust",
    "start": "352440",
    "end": "360000"
  },
  {
    "text": "curious let's say like ah shared pointer like or so if you're not familiar with",
    "start": "360000",
    "end": "366000"
  },
  {
    "text": "rust rust is a it's it's really uh protective of data",
    "start": "366000",
    "end": "372400"
  },
  {
    "text": "access C++ in a very broad way is less protective of you the programmer for",
    "start": "372400",
    "end": "379440"
  },
  {
    "text": "when you want to access variables particularly across threads and you end up they collaborate each other it turns",
    "start": "379440",
    "end": "385440"
  },
  {
    "text": "out you don't even need multi-threading threading to cause these kinds of problems um because we have multiple",
    "start": "385440",
    "end": "391800"
  },
  {
    "text": "CPUs that might also want to access the same um variables at the same or roughly",
    "start": "391800",
    "end": "397520"
  },
  {
    "text": "at the same time anyway ignoring all that rust has these kind of really strongly enforced guard rails that you",
    "start": "397520",
    "end": "405880"
  },
  {
    "text": "need to intentionally opt out of whereas in C++ you need to opt into the guard rails",
    "start": "405880",
    "end": "413800"
  },
  {
    "text": "essentially and there are some types and like um that exist in C++ that that uh are ubiquitous in Rust",
    "start": "413800",
    "end": "423960"
  },
  {
    "text": "now the reason why you're a C++ programmer and you might look to say a rust is that C++ is notoriously",
    "start": "423960",
    "end": "433039"
  },
  {
    "text": "difficult to get right and maybe this is what you referring to when you were saying like yeah I mean I I think I have",
    "start": "433039",
    "end": "439840"
  },
  {
    "text": "a concrete example of that is that I remember when I was doing you know many years ago like a little bit of c and C++",
    "start": "439840",
    "end": "445400"
  },
  {
    "text": "is I would all the time get a program crash that would just say segmentation fault meaning that I did some stuff with",
    "start": "445400",
    "end": "452560"
  },
  {
    "text": "some memory somewhere that I wasn't allowed to or I made a mistake somewhere and then figuring out what the actual",
    "start": "452560",
    "end": "458000"
  },
  {
    "text": "problem underlying problem was behind the segmentation fault was often very timeconsuming and painful but when I",
    "start": "458000",
    "end": "463800"
  },
  {
    "text": "moved to you know higher level languages that had automatic memory management if I ever saw a segmentation fault it was",
    "start": "463800",
    "end": "469319"
  },
  {
    "text": "never like oh I made a mistake it's like somebody who implemented something that I'm building on made a mistake somebody else made a mistake I don't know who but",
    "start": "469319",
    "end": "476319"
  },
  {
    "text": "uh and it was super rare and that's also been my experience with Russ is that I I mean there is the whole like unsafe",
    "start": "476319",
    "end": "482199"
  },
  {
    "text": "section where you can you can definitely cause segmentation faults but if you're staying away from that I and and at first I just avoided unsafe keyword",
    "start": "482199",
    "end": "489360"
  },
  {
    "text": "altogether I found that yeah I I can just feel that I will be able to write",
    "start": "489360",
    "end": "494599"
  },
  {
    "text": "my code and maybe the compiler will complain at me and say you can't do what you just tried to do but as long as I",
    "start": "494599",
    "end": "499800"
  },
  {
    "text": "can get everything to compile it's not going to seg faal it's not going to like catastrophically blow up and if it does",
    "start": "499800",
    "end": "505639"
  },
  {
    "text": "it's because somebody else made a mistake rather than me making a mistake and the same with everyone I was writing Python and I hit these jobs that were",
    "start": "505639",
    "end": "512760"
  },
  {
    "text": "running for like 3 or 4 hours and then they would like crash with a name error or like like a type eror I'm like how",
    "start": "512760",
    "end": "519200"
  },
  {
    "text": "did how did this happen like and it's just it just blows up and the exception and then is there and like what I wanted",
    "start": "519200",
    "end": "525680"
  },
  {
    "text": "from a language was like something like Elm that was like de like developer happiness is actually Paramount yeah",
    "start": "525680",
    "end": "533519"
  },
  {
    "text": "like and actually era messages are part of the language and the era like debugging experience is actually part of",
    "start": "533519",
    "end": "541160"
  },
  {
    "text": "the design of the language um and what I kind of got from",
    "start": "541160",
    "end": "546279"
  },
  {
    "text": "like AUST was much closer to an Elm experience versus like a c or a C++",
    "start": "546279",
    "end": "552959"
  },
  {
    "text": "experience where things would just blow up even without it because there in C where I tried to play around oh actually",
    "start": "552959",
    "end": "559560"
  },
  {
    "text": "I tried to write python extensions in this C macro language called scyon which",
    "start": "559560",
    "end": "565640"
  },
  {
    "text": "essentially is C with python right but again it blows up spectacularly and",
    "start": "565640",
    "end": "572200"
  },
  {
    "text": "you like literally don't know what to do it's like okay segmentation fault how do",
    "start": "572200",
    "end": "578880"
  },
  {
    "text": "I what do I do now like is that the end like uh right and so so so I mean what",
    "start": "578880",
    "end": "584800"
  },
  {
    "text": "you're supposed to know is just like well now you need to attach a debugger and go back through and step back into it and then like you know but it's it's",
    "start": "584800",
    "end": "590760"
  },
  {
    "text": "this whole complicated thing and then even once you know how to do it it's still pretty difficult to track down like what was the actual thing that",
    "start": "590760",
    "end": "597079"
  },
  {
    "text": "caused the memory to get in this bad state right a whole different level of pain absolutely so I really so one of the",
    "start": "597079",
    "end": "603800"
  },
  {
    "text": "things that I was really curious about is like what does this term segmentation fault even mean and that's actually one",
    "start": "603800",
    "end": "611959"
  },
  {
    "text": "of the things that I explain in Rustin action we actually and like I think it's chapter five in data we actually talk",
    "start": "611959",
    "end": "618120"
  },
  {
    "text": "about the fact that memory like needs to be translated and your program we talk",
    "start": "618120",
    "end": "624519"
  },
  {
    "text": "about a memory address as an integer so some integer between zero and 2 to 64 -1",
    "start": "624519",
    "end": "631720"
  },
  {
    "text": "like this is what we call our address space but somehow that needs to be translated into something that's like",
    "start": "631720",
    "end": "637560"
  },
  {
    "text": "physical electrons on a chip somewhere now that translation process is complex",
    "start": "637560",
    "end": "643240"
  },
  {
    "text": "and actually involves software which is kind of like a bit of a weird mind Bend but it turns out that the operating",
    "start": "643240",
    "end": "648480"
  },
  {
    "text": "system segments memory or like into 4 kilobyte chunks and the segmentation",
    "start": "648480",
    "end": "655639"
  },
  {
    "text": "fault is a problem caused by when you're attempting to access a memory address",
    "start": "655639",
    "end": "661600"
  },
  {
    "text": "that sort of doesn't actually the operating system doesn't really know how to translate into like physical chip",
    "start": "661600",
    "end": "667600"
  },
  {
    "text": "like it's something actually on RAM it can be more complex than that but or you're not allowed to yeah right right",
    "start": "667600",
    "end": "674440"
  },
  {
    "text": "the operating system will also enforce that there are some parts of the memory address space are actually inaccessible",
    "start": "674440",
    "end": "681920"
  },
  {
    "text": "for you so it turns out that the operating system can Mark some sections of memory as executable some as data and",
    "start": "681920",
    "end": "688240"
  },
  {
    "text": "some as code and like all of this background knowledge that you're supposed to some going to somehow",
    "start": "688240",
    "end": "694000"
  },
  {
    "text": "acquire is kind of what I wanted to eject in inject into the book and part",
    "start": "694000",
    "end": "699200"
  },
  {
    "text": "of the problem that I faced as a writer or as an author was that I was always",
    "start": "699200",
    "end": "705920"
  },
  {
    "text": "late because I was essentially trying to write like two books in one and by the",
    "start": "705920",
    "end": "711720"
  },
  {
    "text": "way uh I also the other thing that I tried to do really differently than most",
    "start": "711720",
    "end": "717079"
  },
  {
    "text": "other books is like pack big like relatively chunky examples but it turns",
    "start": "717079",
    "end": "723519"
  },
  {
    "text": "out that that's hard because you kind of need to debug them and you can only really introduce I remember this one one",
    "start": "723519",
    "end": "730279"
  },
  {
    "text": "new one new language feature at a time because if you try to pack in two Language new two new parts of the",
    "start": "730279",
    "end": "736760"
  },
  {
    "text": "language into a new example well suddenly you've got like five extra pages of writing you need to do to in",
    "start": "736760",
    "end": "743160"
  },
  {
    "text": "order to explain people and people like they have this kind of mental stack and you're only trying to add one at a time",
    "start": "743160",
    "end": "749480"
  },
  {
    "text": "and kind of give us some anyway that's why I thought that providing this sort of extra context around rust would be",
    "start": "749480",
    "end": "757360"
  },
  {
    "text": "helpful I think that's really cool like I you have this cool example in here um there actually I mean there's awesome",
    "start": "757360",
    "end": "762680"
  },
  {
    "text": "examples throughout the book but um like here you have the the title of this section is all of networking in seven",
    "start": "762680",
    "end": "768639"
  },
  {
    "text": "paragraphs and you got like just a diagram it's like look here's here's how your network stack actually works it's",
    "start": "768639",
    "end": "774279"
  },
  {
    "text": "not you know it's not so it's not just a Rust book it's it's like a it's a combin comination of while you're learning Russ",
    "start": "774279",
    "end": "780839"
  },
  {
    "text": "you're also learning about lowl parts of the computer which I love because that I",
    "start": "780839",
    "end": "786160"
  },
  {
    "text": "think for a lot of people who are in the position that you and I were in coming from like high level languages and being like I want to learn about this lowle",
    "start": "786160",
    "end": "791839"
  },
  {
    "text": "stuff but I don't want to deal with segmentation faults as as errors like do I program or or maybe I just like want",
    "start": "791839",
    "end": "797480"
  },
  {
    "text": "to understand them better and you know while also not having to debug them um",
    "start": "797480",
    "end": "802959"
  },
  {
    "text": "that's great and and like that certainly was not a resource that existed when I was getting into rust I want to also just kind of segue lightly into talking",
    "start": "802959",
    "end": "810079"
  },
  {
    "text": "about the cultural differences between programming language communities because",
    "start": "810079",
    "end": "816240"
  },
  {
    "text": "I as a python developer was always told native extensions are difficult this is",
    "start": "816240",
    "end": "823399"
  },
  {
    "text": "for experts I had some encounters with actually a couple of other language communities where I would say things and",
    "start": "823399",
    "end": "830399"
  },
  {
    "text": "I would kind of immediately get pounced upon because like some in retrospect",
    "start": "830399",
    "end": "836600"
  },
  {
    "text": "like the whole like because I didn't have the mental model I didn't use the language in the right way and so",
    "start": "836600",
    "end": "842000"
  },
  {
    "text": "therefore people didn't address the question they addressed the inaccuracies because I use the words wrong um whereas",
    "start": "842000",
    "end": "849160"
  },
  {
    "text": "I feel like and I'm slightly I'm very clouded now like I'm very deeply embedded in the rust space uh and I'm",
    "start": "849160",
    "end": "857360"
  },
  {
    "text": "very hopeful that new entrance to the community still feel this way my experience was that the rust Community",
    "start": "857360",
    "end": "864120"
  },
  {
    "text": "was particularly welcoming and particularly interesting",
    "start": "864120",
    "end": "870600"
  },
  {
    "text": "in uh preventing people from feeling excluded and that's kind of baked in",
    "start": "870600",
    "end": "877079"
  },
  {
    "text": "with the slogan yeah and like empowering everyone is how it starts and you as",
    "start": "877079",
    "end": "885199"
  },
  {
    "text": "someone watching this podcast you as someone who is uh Curious but a little",
    "start": "885199",
    "end": "891120"
  },
  {
    "text": "bit fearful potentially or maybe fearful too strong uh some just just a little",
    "start": "891120",
    "end": "896360"
  },
  {
    "text": "bit hesitant should feel as though you're welcome and part of the book is to say",
    "start": "896360",
    "end": "905000"
  },
  {
    "text": "or at least part of my rationale for creating something new and interesting and different was essentially to say",
    "start": "905000",
    "end": "912240"
  },
  {
    "text": "that is to give people confidence to learn more like I can't teach you all of rust in fact there are some sections",
    "start": "912240",
    "end": "917880"
  },
  {
    "text": "there are some parts of the language that I exclude from the book um people it's a beginner book I mean you can't",
    "start": "917880",
    "end": "924440"
  },
  {
    "text": "you can't simultaneously give a good introduction and also cover absolutely everything there is right right right",
    "start": "924440",
    "end": "930160"
  },
  {
    "text": "right there are typically two complaints like about 90 95% of people are really",
    "start": "930160",
    "end": "936319"
  },
  {
    "text": "really happy but there is like uh there are there are complaints and the two",
    "start": "936319",
    "end": "941720"
  },
  {
    "text": "themes primarily are a why isn't your book like every other",
    "start": "941720",
    "end": "947720"
  },
  {
    "text": "book like this is not something that I'm familiar with I'm used to being able to like pick things apart uh it's like well",
    "start": "947720",
    "end": "955240"
  },
  {
    "text": "I wanted to look up like what an enam is in Russ or like so where is that like I can't",
    "start": "955240",
    "end": "962240"
  },
  {
    "text": "find that in the contents page and I sort of feel like that's slightly",
    "start": "962240",
    "end": "968199"
  },
  {
    "text": "misguided uh I want to say that well you kind of didn't read the first introductory thing or I was like who is",
    "start": "968199",
    "end": "974920"
  },
  {
    "text": "this book for and the other complaint I guess would be that",
    "start": "974920",
    "end": "981319"
  },
  {
    "text": "um it's too introductory like it's like ah this isn't an this isn't a guide to",
    "start": "981319",
    "end": "989399"
  },
  {
    "text": "writing idiomatic high performance zeroc copy rust",
    "start": "989399",
    "end": "996360"
  },
  {
    "text": "and I also feel like that's slightly misguided and so I'm pretty happy with",
    "start": "996360",
    "end": "1002199"
  },
  {
    "text": "with the reception to the to to the text and general well I think I mean if if a if one of the biggest complaints is I",
    "start": "1002199",
    "end": "1008519"
  },
  {
    "text": "wanted you to do even more you know that that kind of tells you that like well you did a good job with what was there they wanted more of it right it almost",
    "start": "1008519",
    "end": "1015680"
  },
  {
    "text": "sounds like what they're asking for is like hey can you do another book you know advance to us how about Tim just",
    "start": "1015680",
    "end": "1022120"
  },
  {
    "text": "well like I should actually say um the decision between do you do a second",
    "start": "1022120",
    "end": "1027839"
  },
  {
    "text": "edition so there are things that are that have changed very slightly um but",
    "start": "1027839",
    "end": "1033038"
  },
  {
    "text": "primarily in the libraries the ecosystem has matured and therefore things",
    "start": "1033039",
    "end": "1038400"
  },
  {
    "text": "essentially I can sand off some edges um and create a second edition or do you",
    "start": "1038400",
    "end": "1044480"
  },
  {
    "text": "essentially do like a second volume or like a another book like a follow",
    "start": "1044480",
    "end": "1050400"
  },
  {
    "text": "on um I told Manning I don't I've got",
    "start": "1050400",
    "end": "1055559"
  },
  {
    "text": "three little girls I don't think I can get you a book on",
    "start": "1055559",
    "end": "1061799"
  },
  {
    "text": "time like let say in the space of a year 18 months that's a new book but I can do",
    "start": "1061799",
    "end": "1067480"
  },
  {
    "text": "a different addition and so very very like within a couple of weeks you should see a an announcement of Rus and action",
    "start": "1067480",
    "end": "1075320"
  },
  {
    "text": "second edition like up here on Manning's um website they uh but I'm also",
    "start": "1075320",
    "end": "1081960"
  },
  {
    "text": "interested in potentially fleshing out some of these next ideas via say my YouTube channel",
    "start": "1081960",
    "end": "1089520"
  },
  {
    "text": "potentially or uh like relatively thorough blog posts that I'm hoping to",
    "start": "1089520",
    "end": "1095559"
  },
  {
    "text": "somehow combine at some stage or kind of distill into a book um over time yeah",
    "start": "1095559",
    "end": "1102039"
  },
  {
    "text": "that makes a lot of sense I think um I think I got a little bit lucky with the uh the the the workshop that I did on to",
    "start": "1102039",
    "end": "1108600"
  },
  {
    "text": "rust because it's very time limited it's like you have like an 8 Hour workshop and like that's it there's no you know",
    "start": "1108600",
    "end": "1114400"
  },
  {
    "text": "hey I wish you could have you know had it be longer because it's like well now it's now it's a multi-day workshop you know this is one day um and I mean uh I",
    "start": "1114400",
    "end": "1122720"
  },
  {
    "text": "I had like way less scope in that than you have here in in Rust in action um first of all I didn't have the like",
    "start": "1122720",
    "end": "1128440"
  },
  {
    "text": "practical examples so much it was more just like okay we got to get through and I mean I'm kind of curious to talk to",
    "start": "1128440",
    "end": "1133559"
  },
  {
    "text": "you a little bit about your your sort of thoughts on you know how to teach rust effectively to beginners because what I",
    "start": "1133559",
    "end": "1139000"
  },
  {
    "text": "found challenging so this is front-end Masters it's a primarily JavaScript audience and a lot of people are interested in Rust because like a lot of",
    "start": "1139000",
    "end": "1144120"
  },
  {
    "text": "JavaScript tooling is moving to rust and there's you know applications of web assembly and things like that um but",
    "start": "1144120",
    "end": "1149559"
  },
  {
    "text": "what I found after doing some practice runs of that was that it was just hard enough to get I I basically paired it",
    "start": "1149559",
    "end": "1156240"
  },
  {
    "text": "down all the way to like okay I have eight hours to get to Lifetime annotations if you can understand",
    "start": "1156240",
    "end": "1161280"
  },
  {
    "text": "lifetime annotations at the end of eight hours starting from no rust knowledge then I I succeeded and I was like traits",
    "start": "1161280",
    "end": "1166919"
  },
  {
    "text": "out the window no time for them you everything else is just all the way building up to that and now if you want to understand lifetime annotations you",
    "start": "1166919",
    "end": "1172960"
  },
  {
    "text": "can at least read the documentation and now you can kind of go off on your own um but you've managed to pack a lot more",
    "start": "1172960",
    "end": "1178039"
  },
  {
    "text": "scope into here but I'm curious what what you thought were you know for me that was like the hardest thing to build",
    "start": "1178039",
    "end": "1183200"
  },
  {
    "text": "up to because it requires all this background understanding um what did you think were the the hardest things to teach in",
    "start": "1183200",
    "end": "1189520"
  },
  {
    "text": "Rust strengths excellent yeah right right so so I've got the so uh I I want",
    "start": "1189520",
    "end": "1196520"
  },
  {
    "text": "to provide a little so I fought really hard with this idea so I was convinced",
    "start": "1196520",
    "end": "1202760"
  },
  {
    "text": "that I don't want to teach teach strings after numbers so the like normally you",
    "start": "1202760",
    "end": "1210799"
  },
  {
    "text": "see a programming language tutorial and they introduce numbers first cuz they're easy Edition so forth we have a little",
    "start": "1210799",
    "end": "1216200"
  },
  {
    "text": "toy calculator and then the next thing we do is text it turns out within rust uh knowing the a you need a",
    "start": "1216200",
    "end": "1223559"
  },
  {
    "text": "distinction between like a string literal is a different type than a string which is kind of super weird uh",
    "start": "1223559",
    "end": "1231640"
  },
  {
    "text": "and by the way like if you had a rust reppel and you put a string letter into it you type it hello world and quotes",
    "start": "1231640",
    "end": "1237159"
  },
  {
    "text": "it's not going to come back and say oh this is a string nope that's right yeah and and there are like there really",
    "start": "1237159",
    "end": "1243320"
  },
  {
    "text": "sound this is going to sound ridiculous there are sound technical reasons why",
    "start": "1243320",
    "end": "1248400"
  },
  {
    "text": "this is the case essentially uh it bubbles up a lot of the under the",
    "start": "1248400",
    "end": "1254360"
  },
  {
    "text": "implementation details about how programming languages and how programed are built so into the programming",
    "start": "1254360",
    "end": "1260960"
  },
  {
    "text": "language because rust always wants to offer you the choice to kind of boil away the abstraction and go right to the",
    "start": "1260960",
    "end": "1268080"
  },
  {
    "text": "depth of what's actually happening so just to kind of Flesh that out so a string",
    "start": "1268080",
    "end": "1273880"
  },
  {
    "text": "conceptually is a like a a list or of",
    "start": "1273880",
    "end": "1280559"
  },
  {
    "text": "characters but it turns out our conception as someone we're probably",
    "start": "1280559",
    "end": "1285760"
  },
  {
    "text": "from like a western Latin script or at least a we we're used to having this",
    "start": "1285760",
    "end": "1291760"
  },
  {
    "text": "conception of uh written language as like one character after another it turns out that there are many scripts in",
    "start": "1291760",
    "end": "1298880"
  },
  {
    "text": "which this doesn't work uh and therefore we need a character encoding which is a",
    "start": "1298880",
    "end": "1305039"
  },
  {
    "text": "way of translating numbers to sort of symbols which we'll call gifs or glyphs",
    "start": "1305039",
    "end": "1310320"
  },
  {
    "text": "um and that particular system uh also",
    "start": "1310320",
    "end": "1315480"
  },
  {
    "text": "needs to be backwards compatible with the way way that people have been using computers for decades and so we have",
    "start": "1315480",
    "end": "1321799"
  },
  {
    "text": "this uh way of encoding what's known as Unicode where we can kind of encapsulate",
    "start": "1321799",
    "end": "1327200"
  },
  {
    "text": "all programming languages ideally inside the computer and we also need to kind of so",
    "start": "1327200",
    "end": "1333000"
  },
  {
    "text": "we got this thing called utf8 which can kind of expand out um so uh but again",
    "start": "1333000",
    "end": "1338279"
  },
  {
    "text": "it's it's one character after another but where does that live so if you are a",
    "start": "1338279",
    "end": "1343679"
  },
  {
    "text": "programming language you need to decide where to put this in memory and it turns that a",
    "start": "1343679",
    "end": "1349320"
  },
  {
    "text": "function is a special kind of uh section of data uh there are your programming",
    "start": "1349320",
    "end": "1357520"
  },
  {
    "text": "I'm trying to get the semantics right the compiler let's say is trying to decide I need to put uh I for technical",
    "start": "1357520",
    "end": "1366240"
  },
  {
    "text": "reasons that relate to the CPU uh your CPU when it calls a function",
    "start": "1366240",
    "end": "1371480"
  },
  {
    "text": "what's happening is that it's jumping to a memory address and then return is kind",
    "start": "1371480",
    "end": "1376720"
  },
  {
    "text": "of popping back off and going into the last place in order for that to happen the function needs to be of exactly the",
    "start": "1376720",
    "end": "1382919"
  },
  {
    "text": "right size and it can't expand or contract that conflicts with our notion of like text now text we can think we",
    "start": "1382919",
    "end": "1390360"
  },
  {
    "text": "can append to the string we can concatenate with other strings we're used to kind of manipulating them so",
    "start": "1390360",
    "end": "1395440"
  },
  {
    "text": "that we actually need to put the string in a different part of memory and what we keep inside the",
    "start": "1395440",
    "end": "1401799"
  },
  {
    "text": "function is a reference to the malleable string so we've got a reference in there",
    "start": "1401799",
    "end": "1408279"
  },
  {
    "text": "uh but then you get into the performance issues right right right right right you put it on the Heap but um it turns out that there's a third",
    "start": "1408279",
    "end": "1416480"
  },
  {
    "text": "spot so we think as programmers there's the Heap and the stack um which is explained again in Russ and action or",
    "start": "1416480",
    "end": "1421799"
  },
  {
    "text": "like you can look up any introductory systems book um on what these terms mean",
    "start": "1421799",
    "end": "1426880"
  },
  {
    "text": "uh it turns out there's like a there there a couple that's right shared",
    "start": "1426880",
    "end": "1432679"
  },
  {
    "text": "libraries for example live in their own sp of part of their dress space but umal yeah yeah yeah yeah Global VAR and",
    "start": "1432679",
    "end": "1440840"
  },
  {
    "text": "we have we have a region of memory called Static uh for kind of weird esoteric",
    "start": "1440840",
    "end": "1446880"
  },
  {
    "text": "reasons um it's like R calls it yeah it's like the read only section of",
    "start": "1446880",
    "end": "1452360"
  },
  {
    "text": "memory right right um and it's part of the like actual compiled executable like",
    "start": "1452360",
    "end": "1458360"
  },
  {
    "text": "when you have it's on dis right yeah like that string if you say hello world and you put that into your program the",
    "start": "1458360",
    "end": "1464159"
  },
  {
    "text": "string hello world the bites for that are actually in your compiled rust program on your disc and then when your",
    "start": "1464159",
    "end": "1469799"
  },
  {
    "text": "operating system loads the contents of that file into memory it's like know it's right there in memory now it's put",
    "start": "1469799",
    "end": "1475559"
  },
  {
    "text": "it from disc moved it into RAM and that's where it is now yeah not the sack not the Heap it's just it was on the",
    "start": "1475559",
    "end": "1480720"
  },
  {
    "text": "disc and now it's in memory that's it so to pull this back to string literals your string literal lives in a different",
    "start": "1480720",
    "end": "1487919"
  },
  {
    "text": "place entirely than most other strings or at least what we think of as like the",
    "start": "1487919",
    "end": "1493640"
  },
  {
    "text": "string type it turns out that they can C of sort of kind of be Unified through a",
    "start": "1493640",
    "end": "1499120"
  },
  {
    "text": "reference to some array let's use that term like some list of characters of",
    "start": "1499120",
    "end": "1506200"
  },
  {
    "text": "bytes that happen to be encoded as utf8 which is this encoding for translating numbers to what we would",
    "start": "1506200",
    "end": "1514679"
  },
  {
    "text": "say is a like a writing script now all of these kind of so got like four or five different forms of translation",
    "start": "1514679",
    "end": "1522039"
  },
  {
    "text": "happening and like this really sucks up people's working memory when they learning something new",
    "start": "1522039",
    "end": "1529640"
  },
  {
    "text": "well I think especially because like hello world is such a canonical you know way to start off a program and because",
    "start": "1529640",
    "end": "1536120"
  },
  {
    "text": "if you're trying to explain the types of things it's not just that the type is not string the type is Ampersand",
    "start": "1536120",
    "end": "1541799"
  },
  {
    "text": "apostrophe static space St all lowercase and then the whole Library uses things",
    "start": "1541799",
    "end": "1548640"
  },
  {
    "text": "called string St r iing capital S no static no essand no apostrophe it's",
    "start": "1548640",
    "end": "1555200"
  },
  {
    "text": "like what's yeah yeah this is your point like well maybe",
    "start": "1555200",
    "end": "1560760"
  },
  {
    "text": "lifetime annotations is enough uh so like then the question is like what on Earth is a lifetime annotation it turns",
    "start": "1560760",
    "end": "1567039"
  },
  {
    "text": "out um like I know kind of maybe conceptually like that variables have a",
    "start": "1567039",
    "end": "1572600"
  },
  {
    "text": "type but a lifetime like that's kind of weird and like the syntax is ugly and",
    "start": "1572600",
    "end": "1578360"
  },
  {
    "text": "weird and by the way this term static is kind of this weird magical term for by the way lives forever or at least from",
    "start": "1578360",
    "end": "1584919"
  },
  {
    "text": "this point on until the rest of um the the the the rust compiler has like a uh like a",
    "start": "1584919",
    "end": "1592600"
  },
  {
    "text": "sidecar part of it or essentially like a really strong linter called the Bor Cher",
    "start": "1592600",
    "end": "1598039"
  },
  {
    "text": "that's a good way to think of it yeah and the Bor Cher's job is",
    "start": "1598039",
    "end": "1605000"
  },
  {
    "text": "to analyze your program and say for all",
    "start": "1605000",
    "end": "1610960"
  },
  {
    "text": "invocations or every single time for all possible invocations of this program is",
    "start": "1610960",
    "end": "1616480"
  },
  {
    "text": "every data access valid and can it ever possibly be inval",
    "start": "1616480",
    "end": "1622440"
  },
  {
    "text": "invalidated and it turns out that if I in my function well let's say I create a",
    "start": "1622440",
    "end": "1629440"
  },
  {
    "text": "variable ref and I'm creating a reference to some other data now the",
    "start": "1629440",
    "end": "1636000"
  },
  {
    "text": "borrow chick and by the four kind of weird esoteric reasons as well um which happened to be slightly historical we",
    "start": "1636000",
    "end": "1642200"
  },
  {
    "text": "call this a borrow I have a reference to some other data that lives outside of my function",
    "start": "1642200",
    "end": "1648720"
  },
  {
    "text": "the compiler guarantees that the data that I'm referring to will sort of never",
    "start": "1648720",
    "end": "1656240"
  },
  {
    "text": "disappear right I will never get a segmentation fault in Rust because I",
    "start": "1656240",
    "end": "1663799"
  },
  {
    "text": "can't accidentally uh what's known as free the memory so I can't actually return it to",
    "start": "1663799",
    "end": "1671000"
  },
  {
    "text": "the operating system and tell the oper system I don't need this anymore and so invalidate my reference this is",
    "start": "1671000",
    "end": "1676039"
  },
  {
    "text": "impossible to do in Rust all of this kind of boils down to a lot of complexity is sort of",
    "start": "1676039",
    "end": "1682360"
  },
  {
    "text": "front-loaded as a learner my job by the way so so I um so",
    "start": "1682360",
    "end": "1687960"
  },
  {
    "text": "rust is so this book rust in action has been really good for my career uhhuh I've I've scored a couple of",
    "start": "1687960",
    "end": "1694679"
  },
  {
    "text": "really neat jobs out of it and not not exclusively but um I am a relatively",
    "start": "1694679",
    "end": "1700039"
  },
  {
    "text": "competent developer as well I work at AWS and uh AWS is kind of",
    "start": "1700039",
    "end": "1707559"
  },
  {
    "text": "doubling down or Amazon broadly is doubling down on Rust and my job this",
    "start": "1707559",
    "end": "1714039"
  },
  {
    "text": "year um is to create like an education program for rust primarily focused on",
    "start": "1714039",
    "end": "1720799"
  },
  {
    "text": "people who are learn or have been used to Java JavaScript typescript python the",
    "start": "1720799",
    "end": "1727960"
  },
  {
    "text": "kind of the other primary languages and so this question about like what people need to know and like where they get",
    "start": "1727960",
    "end": "1734159"
  },
  {
    "text": "tripped up is like really front of mind at the moment for me yeah the uh other",
    "start": "1734159",
    "end": "1739480"
  },
  {
    "text": "so I think that you're right about lifetimes the thing that I'm really",
    "start": "1739480",
    "end": "1745360"
  },
  {
    "text": "struggling with is sort of sequencing so there are that's always hard because there are",
    "start": "1745360",
    "end": "1752880"
  },
  {
    "text": "so many parts to rust and there's also some really really good parts so one of the things that you forget when you hear",
    "start": "1752880",
    "end": "1760120"
  },
  {
    "text": "oh rust is really hard to learn is that actually it has a lot of niceties as well like enums and pattern matching for",
    "start": "1760120",
    "end": "1767679"
  },
  {
    "text": "example is something that I just think are incredible and I really miss when I",
    "start": "1767679",
    "end": "1772799"
  },
  {
    "text": "go back to other languages so for example conceptually if I've ever used an a language of an",
    "start": "1772799",
    "end": "1778919"
  },
  {
    "text": "exception construct Russ doesn't have exceptions and so you kind of get this cultural mismatch like well what do I do",
    "start": "1778919",
    "end": "1785320"
  },
  {
    "text": "if I might get an error it turns out you can just return those as values right",
    "start": "1785320",
    "end": "1791000"
  },
  {
    "text": "well but importantly they they're not cuz I think if I were coming from like a go background or a see back background",
    "start": "1791000",
    "end": "1797720"
  },
  {
    "text": "where errors are returned as values I might think uh oh uh oh this is not this is not going to be good cuz what if I",
    "start": "1797720",
    "end": "1803000"
  },
  {
    "text": "forget to handle it right uh but yeah but the way that Russ does it it's it's not like that at all I mean you you",
    "start": "1803000",
    "end": "1809039"
  },
  {
    "text": "cannot forget to handle it the compiler will be like you forgot to handle this era here you need to do something about that and what's really amazing to me so",
    "start": "1809039",
    "end": "1817440"
  },
  {
    "text": "yeah you will for every for every function that might create an error and",
    "start": "1817440",
    "end": "1822480"
  },
  {
    "text": "so this primarily you'll encounter this when you're learning when you deal with the file system so the",
    "start": "1822480",
    "end": "1829039"
  },
  {
    "text": "essentially you consider like anything saved to dis as flaky like it's could",
    "start": "1829039",
    "end": "1834679"
  },
  {
    "text": "potentially fail uh for many reasons you might not have permissions to open files there's a whole bunch of reasons why",
    "start": "1834679",
    "end": "1839720"
  },
  {
    "text": "things could fail and so might be not enough disck space who knows I mean discs are pretty big these days but um",
    "start": "1839720",
    "end": "1845279"
  },
  {
    "text": "yeah lots of reasons so yeah um or you could be on a on a virtual machine and the virtual machine's disc is is very",
    "start": "1845279",
    "end": "1851720"
  },
  {
    "text": "small and limited interesting oh yeah no that's right it's just virtualized away there might not even be a dis right rust",
    "start": "1851720",
    "end": "1857559"
  },
  {
    "text": "will guarantee it say look by the way that IO function like the function",
    "start": "1857559",
    "end": "1864039"
  },
  {
    "text": "dealing with input output returns something that might fail dear programmer you've only",
    "start": "1864039",
    "end": "1871399"
  },
  {
    "text": "addressed the case where everything is on the happy path I'm going to refuse to",
    "start": "1871399",
    "end": "1876639"
  },
  {
    "text": "compile now what I love about this is that this is actually known and rust as the result type so result is normally",
    "start": "1876639",
    "end": "1884320"
  },
  {
    "text": "going to be okay and everything's going to be fine or it might be and on the error side you might think",
    "start": "1884320",
    "end": "1890639"
  },
  {
    "text": "well this is it it's so fundamental to the rust way of thinking now that uh you",
    "start": "1890639",
    "end": "1897120"
  },
  {
    "text": "kind of think of it as being part of rust but it turns out that result is defined in the standard Library it's",
    "start": "1897120",
    "end": "1902240"
  },
  {
    "text": "actually not part of the rust language it just falls out of enums so part of the uh part of I think",
    "start": "1902240",
    "end": "1910720"
  },
  {
    "text": "the magic of the rust the language is that there are these really powerful constructs that are",
    "start": "1910720",
    "end": "1918480"
  },
  {
    "text": "consistent and uh and embedded in the way like the practice of writing rust",
    "start": "1918480",
    "end": "1924600"
  },
  {
    "text": "and primarily rust uh result but also option which is a similar but different",
    "start": "1924600",
    "end": "1930279"
  },
  {
    "text": "type that encodes the possibility that there is a missing value uh",
    "start": "1930279",
    "end": "1936720"
  },
  {
    "text": "and I think it's just wonderful that instead of just like the python like",
    "start": "1936720",
    "end": "1941760"
  },
  {
    "text": "none or like JavaScript like no or undefined like could be ESS",
    "start": "1941760",
    "end": "1947880"
  },
  {
    "text": "throughout your entire program right and I think it's interesting that some Modern languages are starting to adopt",
    "start": "1947880",
    "end": "1954120"
  },
  {
    "text": "some of these things like uh like Java now has an optional type which works essentially as I understand it the same",
    "start": "1954120",
    "end": "1960240"
  },
  {
    "text": "as rust's uh option type the difference is that rust uses this exclusively it's",
    "start": "1960240",
    "end": "1966600"
  },
  {
    "text": "not like rust has option and they also have null they also have undefined and they also have another way it's like no",
    "start": "1966600",
    "end": "1972559"
  },
  {
    "text": "there's just there's just the one there's option um whereas in Java you do have optional and you also have null which you know for legacy reasons if if",
    "start": "1972559",
    "end": "1979080"
  },
  {
    "text": "you want to argue it that way it's like well you still have to be aware that nulls might happen or R like no you don't you don't have to be aware that",
    "start": "1979080",
    "end": "1984279"
  },
  {
    "text": "nulls might happen that's not a thing in like you know normal rust code now granted if you do specifically have a",
    "start": "1984279",
    "end": "1990200"
  },
  {
    "text": "rust pointer that can be null okay fair enough but now we're already in unsafe territory yeah essentially what you're",
    "start": "1990200",
    "end": "1995519"
  },
  {
    "text": "saying there is well you've kind of yeah if there are ways to kind of unlock the Pandora's box but if you're doing that",
    "start": "1995519",
    "end": "2002600"
  },
  {
    "text": "you it's intentional right it's it's interesting like like you were talking about earlier um like in Python it's",
    "start": "2002600",
    "end": "2008320"
  },
  {
    "text": "sort of culturally a thing that if you're going to do you know interop with another language and drop down the lower level stuff it's like that's kind of for",
    "start": "2008320",
    "end": "2014080"
  },
  {
    "text": "experts and like you know here there be dragons but to me it actually at least when I was getting into rust I felt the",
    "start": "2014080",
    "end": "2020440"
  },
  {
    "text": "same way about unsafe code where it's like well I'm doing lowle stuff in Rust but uh there's still this other level",
    "start": "2020440",
    "end": "2027720"
  },
  {
    "text": "that's deeper and scarier where I get I use the unsafe keyword and now all bets are off we're back in segmentation fault",
    "start": "2027720",
    "end": "2033080"
  },
  {
    "text": "land so it almost feels to me like somewhere in between like a python or a Java or something like that and the",
    "start": "2033080",
    "end": "2039480"
  },
  {
    "text": "lowest level like Assembly Language machine code uh you know C which is just portable assembly as they as they",
    "start": "2039480",
    "end": "2045399"
  },
  {
    "text": "colloquially say rust is somewhere in between like it is definitely lower level a safe rust I should say uh like",
    "start": "2045399",
    "end": "2051480"
  },
  {
    "text": "when you're not using the unsafe keyword it feels a lot more like a python or a Java with within a lot of ways better",
    "start": "2051480",
    "end": "2057878"
  },
  {
    "text": "ergonomics um and a and a higher learning curve uh but but at the same time I get almost all the power of that",
    "start": "2057879",
    "end": "2064480"
  },
  {
    "text": "lowest level stuff there's just this little extra that requires going into unsafe uh if if you really want to get",
    "start": "2064480",
    "end": "2070638"
  },
  {
    "text": "into those things yeah so this is actually one of the things that I intentionally included in the book that",
    "start": "2070639",
    "end": "2078280"
  },
  {
    "text": "I was really actually got I I got quite a lot of push back from reviewers so Manning has this process where they send",
    "start": "2078280",
    "end": "2084800"
  },
  {
    "text": "out your manuscript to say 20 people that anonymously provide feedback and",
    "start": "2084800",
    "end": "2089839"
  },
  {
    "text": "one of the reviewers yeah it's it's like the opposite of fun right no it's it's a",
    "start": "2089839",
    "end": "2096720"
  },
  {
    "text": "good it's it's a really important part of why Manning's books are very high",
    "start": "2096720",
    "end": "2102320"
  },
  {
    "text": "quality and uh one of the things that I stayed quite firm on was exposing",
    "start": "2102320",
    "end": "2109040"
  },
  {
    "text": "readers to unsafe I was like this is a valid part of the language and we",
    "start": "2109040",
    "end": "2114359"
  },
  {
    "text": "shouldn't be kind of intimidated by it uh or at least you know uh it and like",
    "start": "2114359",
    "end": "2122040"
  },
  {
    "text": "there are some really powerful things that this unlocks and one of them uh or at least if we ever like for",
    "start": "2122040",
    "end": "2129320"
  },
  {
    "text": "example one of the examples is like a memory scanner so we actually we want to invoke segmentation and kind of like",
    "start": "2129320",
    "end": "2135920"
  },
  {
    "text": "find out like where things are the and like we kind of need to do silly things like converting integers like raw integers into memory addesses for",
    "start": "2135920",
    "end": "2142240"
  },
  {
    "text": "example and which means we need to kind of Lie to the type system or like lie to the compiler right from like a teaching",
    "start": "2142240",
    "end": "2148839"
  },
  {
    "text": "point of view I I did also want to say that you shouldn't feel as though this isn't something that is learnable I just",
    "start": "2148839",
    "end": "2156839"
  },
  {
    "text": "had a slight flash of a thought which was one of the reasons why you might want to do unsafe actually you probably",
    "start": "2156839",
    "end": "2163359"
  },
  {
    "text": "don't want to do it but one of the things rust does badly by Design essentially is cyclic",
    "start": "2163359",
    "end": "2170880"
  },
  {
    "text": "data structures or oh sure like like like a graph so when you have uh so",
    "start": "2170880",
    "end": "2176800"
  },
  {
    "text": "normally things in Rust land like to be in a tree as soon as you have references",
    "start": "2176800",
    "end": "2183240"
  },
  {
    "text": "from children back to parents you create a cycle and those sorts of Cycles turn",
    "start": "2183240",
    "end": "2188520"
  },
  {
    "text": "out to be quite nasty in languages that don't have a garbage collector like rust that's definitely an interesting I'm",
    "start": "2188520",
    "end": "2195000"
  },
  {
    "text": "surprised first of all that that reviewers would push back on that I mean to me it seems like there's an open",
    "start": "2195000",
    "end": "2200040"
  },
  {
    "text": "question of like should a beginner book get into this or not but it seems worth mentioning at the very least because",
    "start": "2200040",
    "end": "2205560"
  },
  {
    "text": "especially because I think there's a lot of misconceptions out there around unsafe like Steve kabnick wrote that whole blog post about um you can't quote",
    "start": "2205560",
    "end": "2212960"
  },
  {
    "text": "turn off the borrow Checker in Rust which is not what unsafe does it's like the the borrow Checker is still very much there there's just certain",
    "start": "2212960",
    "end": "2218800"
  },
  {
    "text": "operations that are unsafe for potentially other reasons or potentially a lot of reasons um that require the use",
    "start": "2218800",
    "end": "2224640"
  },
  {
    "text": "of the keyword and I think it's helpful you know if you have time to do it to explain to readers here's what unsafe is",
    "start": "2224640",
    "end": "2230800"
  },
  {
    "text": "even if you're not going to you know go on a whole long tangent about here's all the different things you can do with unsafe and here's you know or or",
    "start": "2230800",
    "end": "2237480"
  },
  {
    "text": "especially um you know giving people the wrong cultural impression because certainly from what I've seen in Russ",
    "start": "2237480",
    "end": "2243079"
  },
  {
    "text": "is's a very strong cultural aversion to using unsafe and really people want to",
    "start": "2243079",
    "end": "2248319"
  },
  {
    "text": "uh see that you know a library they're depending on is using it as little as possible right I don't want to give",
    "start": "2248319",
    "end": "2253720"
  },
  {
    "text": "people the impression that like runsafe is essentially unsafe is going to ruin your program and I think what you're",
    "start": "2253720",
    "end": "2259040"
  },
  {
    "text": "trying to say there Richard is that uh it's very easy for tooling to",
    "start": "2259040",
    "end": "2264640"
  },
  {
    "text": "detect the use of unsafe if libraries are known as using this constract it",
    "start": "2264640",
    "end": "2272079"
  },
  {
    "text": "means that it becomes like a very strong Target for like refactoring and this happened with like a very prominent web",
    "start": "2272079",
    "end": "2278280"
  },
  {
    "text": "framework called Atrix which had extremely good benchmarks but right um kind of the E",
    "start": "2278280",
    "end": "2286160"
  },
  {
    "text": "the the immune system of the rust Community kind of came back in some way and said whoa whoa whoa uh you you're",
    "start": "2286160",
    "end": "2294839"
  },
  {
    "text": "faking it well not quite it turns out that that there were good reasons and so forth and it seemed like this big",
    "start": "2294839",
    "end": "2301119"
  },
  {
    "text": "cultural War around like what is a big controversy that it was it was it was",
    "start": "2301119",
    "end": "2307319"
  },
  {
    "text": "quite big I mean it was uh there were like P there are like programming",
    "start": "2307319",
    "end": "2312400"
  },
  {
    "text": "language drama um like course and so but um the I think oh I I I I kind of do",
    "start": "2312400",
    "end": "2320920"
  },
  {
    "text": "feel like explaining a little bit about what safe so there's two uses of the word unsafe so the the keyword itself",
    "start": "2320920",
    "end": "2327880"
  },
  {
    "text": "says not this is inherently unsafe it's more I am able I as the programmer take",
    "start": "2327880",
    "end": "2335960"
  },
  {
    "text": "responsib ability for verifying everything that the compiler would by",
    "start": "2335960",
    "end": "2341040"
  },
  {
    "text": "itself verify so remembered why we had like this very strong linter they called",
    "start": "2341040",
    "end": "2346160"
  },
  {
    "text": "the borrow Checker now essentially you as the programmer take on responsibility",
    "start": "2346160",
    "end": "2352480"
  },
  {
    "text": "for being the borrow Checker that's essentially what unsafe you is used for in the uh",
    "start": "2352480",
    "end": "2359000"
  },
  {
    "text": "primary uh use of that keyword uh it doesn't provide you like a free-for-all",
    "start": "2359000",
    "end": "2365400"
  },
  {
    "text": "to do everything like you know that's what post was was about and it's",
    "start": "2365400",
    "end": "2370839"
  },
  {
    "text": "intentionally ugly so it's actually really hard to just kind of Accidentally In insert um the other use of unsafe is",
    "start": "2370839",
    "end": "2379359"
  },
  {
    "text": "you can define a trait so this is kind of a an interface or an abstract base class uh that is unsafe and what this",
    "start": "2379359",
    "end": "2386079"
  },
  {
    "text": "this is actually subtly different use of the the keyword what this is saying is that people that implement it need to",
    "start": "2386079",
    "end": "2393200"
  },
  {
    "text": "guarantee that their implementation uh sort of complies with a contract that is probably written in",
    "start": "2393200",
    "end": "2400160"
  },
  {
    "text": "the documentation because the type system can't really encode it um right",
    "start": "2400160",
    "end": "2405560"
  },
  {
    "text": "that's kind of my understanding of of of the the the two big reasons of why you might want to use the um keyw yeah so uh",
    "start": "2405560",
    "end": "2413720"
  },
  {
    "text": "one thing I want to make sure to ask you about is uh in the timekeeping chapter you have a photo about a physical device",
    "start": "2413720",
    "end": "2419240"
  },
  {
    "text": "that keeps time uh is there what's the story behind that okay okay so ah you",
    "start": "2419240",
    "end": "2424680"
  },
  {
    "text": "just get me to geek out on like a another one of my like uh big passion projects I suppose so um uh this is from",
    "start": "2424680",
    "end": "2432880"
  },
  {
    "text": "a so I'm quite into uh I guess nature protection",
    "start": "2432880",
    "end": "2439720"
  },
  {
    "text": "broadly um it is from an INF so it's a it's a box and inside so it's a device",
    "start": "2439720",
    "end": "2446839"
  },
  {
    "text": "that takes infrared cameras from a project called cacophony uh it turns out",
    "start": "2446839",
    "end": "2451960"
  },
  {
    "text": "that when European settlers arrived in the 18th century into New Zealand they introduced many over the course of about",
    "start": "2451960",
    "end": "2459400"
  },
  {
    "text": "a century they introduced a lot of species that um were really harmful to a",
    "start": "2459400",
    "end": "2465160"
  },
  {
    "text": "lot of our native birds um things like stes and weasels and rats really like to",
    "start": "2465160",
    "end": "2470680"
  },
  {
    "text": "eat either birds or eggs and turns out that if you're a flightless bird this is bad for you yeah I bet um so it turn so",
    "start": "2470680",
    "end": "2479359"
  },
  {
    "text": "there was some there were some Diaries of explorers um and one of the phrases was",
    "start": "2479359",
    "end": "2486520"
  },
  {
    "text": "that you know at night the forest was just this cacophony of sound uh and the",
    "start": "2486520",
    "end": "2495839"
  },
  {
    "text": "whole forest was just alive with Birds um we didn't have any Predators at all",
    "start": "2495839",
    "end": "2502319"
  },
  {
    "text": "so a lot of our birds are actually nocturnal also so famously the Kiwi um the bird with the long beak that can't",
    "start": "2502319",
    "end": "2508440"
  },
  {
    "text": "fly is actually a nocturnal species didn't know that there are a lot of adaptions that are quite strange by the",
    "start": "2508440",
    "end": "2513720"
  },
  {
    "text": "way so we have birds that pretend to be red we have birds that can't that can hop",
    "start": "2513720",
    "end": "2519079"
  },
  {
    "text": "around trees so they're kind of similar to monkeys or provide the same uh they",
    "start": "2519079",
    "end": "2524520"
  },
  {
    "text": "live in the same ecological niche or provide the same uh function as and as",
    "start": "2524520",
    "end": "2530400"
  },
  {
    "text": "what mammals would and and other biospheres anyway the cacophony project",
    "start": "2530400",
    "end": "2536319"
  },
  {
    "text": "is attempting to use machine learning to identify is this a cat is this a rat is",
    "start": "2536319",
    "end": "2543000"
  },
  {
    "text": "this a weasel and it does it with infrared vision and it turns out so it takes photos or takes videos actually",
    "start": "2543000",
    "end": "2549280"
  },
  {
    "text": "and timestamps them but it turns out that if you're a tiny little device it's",
    "start": "2549280",
    "end": "2554440"
  },
  {
    "text": "really hard for you to tell time you need a clock and then I was like wait a",
    "start": "2554440",
    "end": "2559839"
  },
  {
    "text": "minute so so I'm part of this book was just amazing research and I was like how on Earth do does any computer tell time",
    "start": "2559839",
    "end": "2568160"
  },
  {
    "text": "and it turns out one of the properties of quartz crystals is that when you're",
    "start": "2568160",
    "end": "2573200"
  },
  {
    "text": "they are electrified they oscillate so so they go backwards and forwards at a very specific",
    "start": "2573200",
    "end": "2579720"
  },
  {
    "text": "frequency and that frequency is counted and therefore we know the",
    "start": "2579720",
    "end": "2586000"
  },
  {
    "text": "voltage that is being sent into the crystal we know its rate in which it will oscillate and therefore we can tell",
    "start": "2586000",
    "end": "2592720"
  },
  {
    "text": "time because we say we started at zero and we just start clicking across eventually we will hit some number let's",
    "start": "2592720",
    "end": "2600480"
  },
  {
    "text": "say we have like 16 bits we'll get to like the uh we'll get to 65,000 and we",
    "start": "2600480",
    "end": "2606520"
  },
  {
    "text": "need to wrap around to zero but we might have some way of dealing with that um it turns out they",
    "start": "2606520",
    "end": "2613760"
  },
  {
    "text": "do um but it turns out this this essentially really really primitive a way of keeping time is actually used by",
    "start": "2613760",
    "end": "2620280"
  },
  {
    "text": "essentially every digital computer but then how do they synchronize and this is one of the",
    "start": "2620280",
    "end": "2627599"
  },
  {
    "text": "problems about Distributing Computing so how does everyone say okay I'm currently at let's say clock I'm currently at",
    "start": "2627599",
    "end": "2635280"
  },
  {
    "text": "oscillation 20 5,000 of my current Cycles okay how does that translate to",
    "start": "2635280",
    "end": "2641319"
  },
  {
    "text": "the 6th of March 2023 it's all distributed I'm going to get into a big",
    "start": "2641319",
    "end": "2647200"
  },
  {
    "text": "flame wall but essentially what we have is canonical devices so much more",
    "start": "2647200",
    "end": "2652920"
  },
  {
    "text": "accurate timekeeping devices that are what are known as atomic clocks that use",
    "start": "2652920",
    "end": "2658000"
  },
  {
    "text": "even more specific um and they all kind of agree it turns out that I think",
    "start": "2658000",
    "end": "2664079"
  },
  {
    "text": "there's about half a dozen maybe a of these Atomic Crocs that um they're called tier one devices or tier zero",
    "start": "2664079",
    "end": "2670920"
  },
  {
    "text": "devices inside the network time protocol and they are they agree on what the time",
    "start": "2670920",
    "end": "2676880"
  },
  {
    "text": "is right and then they just tell other people and then just like let's say a",
    "start": "2676880",
    "end": "2684960"
  },
  {
    "text": "DNS system it kind of propagates through it turns out that if you are inside a data center you can get coocks to agree",
    "start": "2684960",
    "end": "2692640"
  },
  {
    "text": "on what the time is without the because it somehow it at some point it kind of becomes irrelevant what the atomic clock",
    "start": "2692640",
    "end": "2699640"
  },
  {
    "text": "thinks the time is what really matters is that the clocks that are really close together um agree because you want say",
    "start": "2699640",
    "end": "2707720"
  },
  {
    "text": "for example logs or messages to be roughly in order it turns out you can't",
    "start": "2707720",
    "end": "2713040"
  },
  {
    "text": "really do this right monotonic ordering yeah like in a distributed system and it",
    "start": "2713040",
    "end": "2719319"
  },
  {
    "text": "turns out by the way like a single multi-core laptop or a single multi multicore phone becomes a distributed",
    "start": "2719319",
    "end": "2726000"
  },
  {
    "text": "system because each CPU operates independently this is kind of like one",
    "start": "2726000",
    "end": "2731160"
  },
  {
    "text": "of the mindbending things about technology like it's just so incredible",
    "start": "2731160",
    "end": "2737000"
  },
  {
    "text": "that like this stuff even works yeah and like I just think about like at",
    "start": "2737000",
    "end": "2743920"
  },
  {
    "text": "every single level you have these examples where",
    "start": "2743920",
    "end": "2749800"
  },
  {
    "text": "uh you at every single level like think about text we started with like plane",
    "start": "2749800",
    "end": "2755240"
  },
  {
    "text": "bites and then we needed so actually we we started with like Morse code and other coding signals for interpreting",
    "start": "2755240",
    "end": "2761040"
  },
  {
    "text": "like binary digits and translating them into letters and and numbers and then we kind of like wrapped around more and",
    "start": "2761040",
    "end": "2766520"
  },
  {
    "text": "more on top so in ESI which is like the encoding system from the 60s there are",
    "start": "2766520",
    "end": "2771839"
  },
  {
    "text": "control characters and we still manag to kind of hold on to those even though like the Bell doesn't mean much",
    "start": "2771839",
    "end": "2779359"
  },
  {
    "text": "today uh and famously operating systems still can't agree on what a new line",
    "start": "2779359",
    "end": "2784599"
  },
  {
    "text": "means but the um but um do we need a carriage",
    "start": "2784599",
    "end": "2791200"
  },
  {
    "text": "return and like where there's no physical Carriage um that's how much operating system you ask that's right",
    "start": "2791200",
    "end": "2796920"
  },
  {
    "text": "and like somehow we've just added on more and more layers and like all again and again and again I love it and like",
    "start": "2796920",
    "end": "2804880"
  },
  {
    "text": "and and that is kind of I was like you know what I am going to spend",
    "start": "2804880",
    "end": "2810119"
  },
  {
    "text": "uh essentially years of my life writing a book so I did some calculations as I",
    "start": "2810119",
    "end": "2815400"
  },
  {
    "text": "was as I was like in the final stages of processing like or publishing about how long this horrible",
    "start": "2815400",
    "end": "2822640"
  },
  {
    "text": "project took um I spent on the average week between",
    "start": "2822640",
    "end": "2829720"
  },
  {
    "text": "10 to 15 hours per week on this thing so three or four hours a night three or four nights a week plus I try to do like",
    "start": "2829720",
    "end": "2837359"
  },
  {
    "text": "a chunk in the weekend uh from the initial",
    "start": "2837359",
    "end": "2842520"
  },
  {
    "text": "conversations with Manning through to publication it was a enally a 4-year project because I needed to like do",
    "start": "2842520",
    "end": "2849400"
  },
  {
    "text": "extensive rewrites and like of both the pros as well as the um as well as the",
    "start": "2849400",
    "end": "2855240"
  },
  {
    "text": "code um and answering lovely questions from from",
    "start": "2855240",
    "end": "2861440"
  },
  {
    "text": "like people reading it as well that was always that was a bit of a Time suck and like writing doing diagrams took weeks",
    "start": "2861440",
    "end": "2867880"
  },
  {
    "text": "and weeks and weeks at some in some of them I remember all the diagrams yeah those those are it's it's like they don't take up that much space on the",
    "start": "2867880",
    "end": "2873839"
  },
  {
    "text": "page relative to how much time they take up to make yeah that's right a lot of cases so I was like so I was like I've probably",
    "start": "2873839",
    "end": "2881000"
  },
  {
    "text": "dropped like 2,000 hours into this thing well that that's a great segue into my final question for you which is uh you",
    "start": "2881000",
    "end": "2888520"
  },
  {
    "text": "know looking back on how much time you spent into it uh you know was it worth it uh are you happy with the result uh",
    "start": "2888520",
    "end": "2894440"
  },
  {
    "text": "you know you mentioned it was good for your career but just as an author like you know what yeah what do you think of the whole process you've picked up from",
    "start": "2894440",
    "end": "2901079"
  },
  {
    "text": "this interview that I learned a tremendous amount through the research process through like the writing process",
    "start": "2901079",
    "end": "2907680"
  },
  {
    "text": "I became uh significantly more skilled at communicating",
    "start": "2907680",
    "end": "2912880"
  },
  {
    "text": "I always had the goal that I would speed up people's Learning Journey by 100",
    "start": "2912880",
    "end": "2920319"
  },
  {
    "text": "hours at this point I know that potentially hundreds of thousands of people have read the book uh",
    "start": "2920319",
    "end": "2928620"
  },
  {
    "text": "[Music] and that is a like if you were to",
    "start": "2928620",
    "end": "2933720"
  },
  {
    "text": "multiply my input versus the output that it's generated I think it's been like a",
    "start": "2933720",
    "end": "2939040"
  },
  {
    "text": "huge win for the industry it's created a whole wave of rust material inside",
    "start": "2939040",
    "end": "2945440"
  },
  {
    "text": "Manning and other Publishers who have said that rust is a viable product uh or",
    "start": "2945440",
    "end": "2950640"
  },
  {
    "text": "like as a w viable ecosystem and I think so the only thing is that I my health",
    "start": "2950640",
    "end": "2957520"
  },
  {
    "text": "suffered quite badly like I used to run marathons I used to lift weights um I",
    "start": "2957520",
    "end": "2962920"
  },
  {
    "text": "used to be able to pull um like 200 kilograms off the ground um I basically",
    "start": "2962920",
    "end": "2969319"
  },
  {
    "text": "put all of that aside and I think that my kids are the people that suffered the",
    "start": "2969319",
    "end": "2975000"
  },
  {
    "text": "most um and because there were times when we could have gone to the park or",
    "start": "2975000",
    "end": "2980799"
  },
  {
    "text": "we could have gone for a walk and I was like writing the book and so I really my message kind of to readers is like I",
    "start": "2980799",
    "end": "2988400"
  },
  {
    "text": "hope that you find the material that's useful for you it might be Rus in action",
    "start": "2988400",
    "end": "2994040"
  },
  {
    "text": "it might be something else but find it like this is a community that is welcoming and accepting of you and there",
    "start": "2994040",
    "end": "3001240"
  },
  {
    "text": "is like a large um there are now like a very rich set of resources to draw from",
    "start": "3001240",
    "end": "3007480"
  },
  {
    "text": "and I think my message to my kids is that like I love you lots and I hope that you forgive",
    "start": "3007480",
    "end": "3013200"
  },
  {
    "text": "me yeah well I think I mean uh I'm glad that I you know if you're going to make",
    "start": "3013200",
    "end": "3018839"
  },
  {
    "text": "a big sacrifice like that in in so many different aspects of your life and and your kids I mean um it's it's great to",
    "start": "3018839",
    "end": "3024799"
  },
  {
    "text": "hear that you know like at least you got a really good book out of it and it's not just uh you know something you look back on as like oh never doing that",
    "start": "3024799",
    "end": "3030440"
  },
  {
    "text": "again uh you know um me for the second edition and the second volume or like",
    "start": "3030440",
    "end": "3036040"
  },
  {
    "text": "the next book I'm like well actually I might say yes and but there are consequences right yeah absolutely yeah",
    "start": "3036040",
    "end": "3044520"
  },
  {
    "text": "awesome um well I think I think that's a good spot to to wrap things up uh Tim thanks so much for talking to me about",
    "start": "3044520",
    "end": "3050880"
  },
  {
    "text": "the book and thanks for writing it it's an excellent book uh and um I'm just glad to had the chance to talk to you",
    "start": "3050880",
    "end": "3056400"
  },
  {
    "text": "about it nice hey thanks so much Rich thanks for listening to this episode of the goto podcast head over to gpia Tech",
    "start": "3056400",
    "end": "3064079"
  },
  {
    "text": "to discover lots more content from the brightest minds and software [Music]",
    "start": "3064079",
    "end": "3072870"
  },
  {
    "text": "[Music] development",
    "start": "3075910",
    "end": "3081680"
  }
]