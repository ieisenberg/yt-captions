[
  {
    "text": "[Applause] cool all right good stuff hi everybody",
    "start": "7460",
    "end": "14880"
  },
  {
    "text": "how are you that's terrible what is the deal hi hello how are you",
    "start": "14880",
    "end": "21240"
  },
  {
    "text": "there we go a little bit better okay we don't have a lot of time friends we don't have a lot of time I was hoping for three hours they gave me 15 minutes",
    "start": "21240",
    "end": "27420"
  },
  {
    "text": "that's not nearly enough so we're gonna get well underway real quick first things first that is the uh the that is",
    "start": "27420",
    "end": "34260"
  },
  {
    "text": "the slides those are the slides uh let me make that bigger there you are those are the sides it contains the most important information that you're going",
    "start": "34260",
    "end": "39840"
  },
  {
    "text": "to need to be able to follow along and Leisure later on uh at your own discussion so take note of if you take a note of one thing this is it this is the",
    "start": "39840",
    "end": "46739"
  },
  {
    "text": "slide you should know take a photo of it uh capture the three most important coordinates there the first and most",
    "start": "46739",
    "end": "52260"
  },
  {
    "text": "first and top most of which is the URL where you can find the code which you can then peruse at your own time if you",
    "start": "52260",
    "end": "58140"
  },
  {
    "text": "have time if you're so willing the second of which is my Twitter handle so should you have questions inelectably",
    "start": "58140",
    "end": "63600"
  },
  {
    "text": "when you have questions don't hesitate to reach out to me find me on the internet I'm happy to answer questions just quick show of hands 2019 how many",
    "start": "63600",
    "end": "70380"
  },
  {
    "text": "of you using Twitter how many of you using Twitter I'm always curious Twitter 2019. okay the rest of you uh what are",
    "start": "70380",
    "end": "75780"
  },
  {
    "text": "you doing what are you doing it's a great place to be it's the new IRC it's one of the developers that drive the open source",
    "start": "75780",
    "end": "80820"
  },
  {
    "text": "that power your business are and you owe it yourself to be there what about email what about email how many of using email",
    "start": "80820",
    "end": "86100"
  },
  {
    "text": "anybody anybody using email email 2019 no I'm not a big fan of email either but",
    "start": "86100",
    "end": "91920"
  },
  {
    "text": "it's an option so you can find me there I've had to soften my position on email in light of slack I have a brand new",
    "start": "91920",
    "end": "98579"
  },
  {
    "text": "Macbook Pro 2019 with 16 inches of of screen space and 64 gigs of RAM and this",
    "start": "98579",
    "end": "106680"
  },
  {
    "text": "my friends is finally finally finally enough to be able to run both slack and Chrome",
    "start": "106680",
    "end": "112920"
  },
  {
    "text": "I'm finally at a place where I can do that it took a long time they announced the Mac Pro a few months ago did you",
    "start": "112920",
    "end": "118619"
  },
  {
    "text": "hear that that 1.5 terabytes of ram terabytes for the T lists under the specifications you can",
    "start": "118619",
    "end": "125700"
  },
  {
    "text": "run both slack and chrome I thought that was a big deal so find me there if I'm in the internet my name is Josh long I",
    "start": "125700",
    "end": "130739"
  },
  {
    "text": "work on the spring team uh before we get underway is it okay if we take a selfie can we take a photo is that okay",
    "start": "130739",
    "end": "136980"
  },
  {
    "text": "who aren't they objects if you don't if you have any of a version let me know now but I'd love to take a selfie and",
    "start": "136980",
    "end": "142500"
  },
  {
    "text": "there's a very important reason you see I have a daughter my daughter's uh 14 she's very very smart very smart very",
    "start": "142500",
    "end": "148620"
  },
  {
    "text": "precocious and I like to take photos of these crowds and then I go home and I take I take the photo and I say see",
    "start": "148620",
    "end": "155040"
  },
  {
    "text": "they listen to me",
    "start": "155040",
    "end": "158299"
  },
  {
    "text": "so when I say everybody pretend like or how to take a photo together one two",
    "start": "162780",
    "end": "168959"
  },
  {
    "text": "three open source good stuff hey bad monitor bad what just",
    "start": "168959",
    "end": "174720"
  },
  {
    "text": "happened there there we are good stuff so moving on uh my name is Josh I work on the spring",
    "start": "174720",
    "end": "181379"
  },
  {
    "text": "team I've been there for the better part of 10 years now going on uh 10 years almost 10 years nine and a half uh I",
    "start": "181379",
    "end": "186780"
  },
  {
    "text": "work on open source I've got videos I've got a book called cognitive Java all about how to build applications that",
    "start": "186780",
    "end": "191940"
  },
  {
    "text": "survive and thrive in the cloud in terms of spring boot spring cloud and Cloud Foundry uh the book is available in a",
    "start": "191940",
    "end": "197280"
  },
  {
    "text": "number of different languages including American including Chinese Korean and Russian there is no Australian version",
    "start": "197280",
    "end": "202620"
  },
  {
    "text": "with all those extra all those extra goofy vows but maybe one day uh I have a",
    "start": "202620",
    "end": "207720"
  },
  {
    "text": "podcast you can find on on all the find pod captures there's that I have a Blog",
    "start": "207720",
    "end": "213000"
  },
  {
    "text": "I do every Tuesday called this week in Spring and I have a vlog a video log I do every Wednesday on YouTube so you can",
    "start": "213000",
    "end": "218879"
  },
  {
    "text": "find all that stuff and today we're going to talk about reactive programming we're going to talk about the subjects of the book on which I'm working right",
    "start": "218879",
    "end": "224580"
  },
  {
    "text": "now this is my sixth book and uh every time I've written a book I've always said I'm never going to do that again",
    "start": "224580",
    "end": "229680"
  },
  {
    "text": "and yet here we are this book is all about how to take advantage of reactive programming and reactive programming is",
    "start": "229680",
    "end": "235560"
  },
  {
    "text": "not a particularly new thing it's not a new problem and it's not a new solution the question that we're trying to solve",
    "start": "235560",
    "end": "242040"
  },
  {
    "text": "here when we work with reactive programming is hey how can I handle more users what can I do to support more",
    "start": "242040",
    "end": "248580"
  },
  {
    "text": "users in my system and there's a lot of reasons for for uh for which we might need this particular solution answered",
    "start": "248580",
    "end": "254760"
  },
  {
    "text": "uh now that we maybe didn't need uh yesterday or yesteryear right a lot of our applications just simply didn't have",
    "start": "254760",
    "end": "261060"
  },
  {
    "text": "these scale problems until more recently and so these problems are more manifest and you know in the era of the sort of",
    "start": "261060",
    "end": "267060"
  },
  {
    "text": "return to client service client service architectures and this is something I've seen kind of get exacerbated uh in light",
    "start": "267060",
    "end": "273479"
  },
  {
    "text": "of the iPhone and Android right as soon as we moved back to the world of Client Services where user interfaces actually",
    "start": "273479",
    "end": "279540"
  },
  {
    "text": "result in a Cascade of calls back to a back-end Service as soon as we did that some very interesting things happened it",
    "start": "279540",
    "end": "285479"
  },
  {
    "text": "was no longer true that one HTTP get request resulted in everything you needed to be able to render the response instead one view resulted in a Cascade",
    "start": "285479",
    "end": "293100"
  },
  {
    "text": "of HTTP gets of HTTP you know calls that in turn have to call other things this",
    "start": "293100",
    "end": "298560"
  },
  {
    "text": "is sort of coincidentally you know arised along with the the rise of microservices so now we have this",
    "start": "298560",
    "end": "304979"
  },
  {
    "text": "conduction of data from one point to another on the network we have movement of data from one place to another in the",
    "start": "304979",
    "end": "310440"
  },
  {
    "text": "network and that has created more demand more HTTP requests more calls and this isn't a problem in of itself scale is",
    "start": "310440",
    "end": "317400"
  },
  {
    "text": "not a problem anybody says otherwise is a is a liar no scales a good problem to have what it is however is it it",
    "start": "317400",
    "end": "324539"
  },
  {
    "text": "challenges the way that we traditionally built software on the jvm think about how a server a web server written in",
    "start": "324539",
    "end": "329820"
  },
  {
    "text": "yesteryear would have worked you would have had a web server parked on Port 88 there's a there's a",
    "start": "329820",
    "end": "335120"
  },
  {
    "text": "java.net.serversocket parked on port 8080 and it has incoming requests come in that service socket is accepting",
    "start": "335120",
    "end": "340979"
  },
  {
    "text": "incoming requests and there's a while loop and it says hey while service socket.accept equals true wait and then",
    "start": "340979",
    "end": "347280"
  },
  {
    "text": "as soon as that request comes in you get an input stream from the input incoming socket and you put out an output stream",
    "start": "347280",
    "end": "352320"
  },
  {
    "text": "and you can conduct information back and forth and that's how you produce a response usually we don't deal with code",
    "start": "352320",
    "end": "358199"
  },
  {
    "text": "at quite that lower level usually there's probably something like a servlet API in between but ultimately",
    "start": "358199",
    "end": "363240"
  },
  {
    "text": "that's what used to happen and that wasn't so bad right the only problem with this the only problem with this",
    "start": "363240",
    "end": "368580"
  },
  {
    "text": "approach was that it eventually becomes a bottleneck it eventually saturates and it's not the actual input and output",
    "start": "368580",
    "end": "374160"
  },
  {
    "text": "that's the problem not on the jvm on the jvm the problem is that we run out of threads right because this approach",
    "start": "374160",
    "end": "379620"
  },
  {
    "text": "requires you to sit there and as you're doing work with these input streams and as you're doing work with these output streams you're waiting you're just",
    "start": "379620",
    "end": "386460"
  },
  {
    "text": "waiting you're waiting for bytes to arrive you're waiting for bytes to go out and this is a problem because one when you're waiting what are you doing",
    "start": "386460",
    "end": "392699"
  },
  {
    "text": "where are you doing the waiting and the jvm you're doing that waiting on a thread and that thread is the problem",
    "start": "392699",
    "end": "397979"
  },
  {
    "text": "that's the way we get into some trouble and then even if we had the ability to create infinite numbers of threads which",
    "start": "397979",
    "end": "403740"
  },
  {
    "text": "we don't but if we even if we did have that we get into another problem which is that API the way we think about data",
    "start": "403740",
    "end": "409979"
  },
  {
    "text": "this idea that we can just ask for the next byte to come around the network that idea isn't very very useful when",
    "start": "409979",
    "end": "415800"
  },
  {
    "text": "you think about distributed systems where failures are almost a certainty where things are going to disappear from out uh out from underneath you right",
    "start": "415800",
    "end": "422520"
  },
  {
    "text": "these are a different way of thinking about the world so we have two kind of big problems here one is we can't afford",
    "start": "422520",
    "end": "428100"
  },
  {
    "text": "to have a program model that requires us to waste threads because threads on the jvm are precious they're very very",
    "start": "428100",
    "end": "433680"
  },
  {
    "text": "expensive and we also can't afford to have an API that just assumes the happy path and makes no provision for the all",
    "start": "433680",
    "end": "440280"
  },
  {
    "text": "too real all too probable failure mode the degradation mode so this is where reactive programming",
    "start": "440280",
    "end": "446039"
  },
  {
    "text": "comes in it gives us a way to do um you know more efficient multi-threading it gives us a way to say",
    "start": "446039",
    "end": "451259"
  },
  {
    "text": "hey I'm asking for data to come in that data is not here yet when it gets here give me a call back very simple idea I'm",
    "start": "451259",
    "end": "458520"
  },
  {
    "text": "describing data as a stream of things that aren't here yet is it here yet no but I'm not wasting time waiting for",
    "start": "458520",
    "end": "465479"
  },
  {
    "text": "that data either I'm asking the operating system the kernel to give me a callback when that data is available now",
    "start": "465479",
    "end": "470580"
  },
  {
    "text": "this is a very very useful thing because it gives us the ability to do other work in the meantime okay",
    "start": "470580",
    "end": "476160"
  },
  {
    "text": "now when we think about reactive programming",
    "start": "476160",
    "end": "481560"
  },
  {
    "text": "when we think about reactive programming what we need is a data type that allows us to model data in this way right",
    "start": "481560",
    "end": "487620"
  },
  {
    "text": "let me see here to do",
    "start": "487620",
    "end": "491780"
  },
  {
    "text": "something's going on go go gadget screen",
    "start": "492960",
    "end": "498300"
  },
  {
    "text": "come on good stuff okay so what we want is a way",
    "start": "498300",
    "end": "504780"
  },
  {
    "text": "to a thing that allows us to model data in this way that to allows us to say hey this data is not here right now but I",
    "start": "504780",
    "end": "511199"
  },
  {
    "text": "want to be able to hold on to something that will give me the data eventually we could use something like a completable future in the jdk but this only deals",
    "start": "511199",
    "end": "517260"
  },
  {
    "text": "with the question of hey I've got one thing that is going to be asynchronously resolved it doesn't allow us to say I've got two or ten or a billion or a",
    "start": "517260",
    "end": "523740"
  },
  {
    "text": "trillion or infinite things so we need something a little different a number of different companies got together uh",
    "start": "523740",
    "end": "528959"
  },
  {
    "text": "several years ago pivotal light Bend Eclipse Foundation Netflix of course all these different organizations got to get",
    "start": "528959",
    "end": "534600"
  },
  {
    "text": "together and we extracted out some common ground interfaces based as based on our understanding of this space and",
    "start": "534600",
    "end": "540120"
  },
  {
    "text": "this Common Ground set of interfaces is called the reactive stream specification it's four very simple very Spartan",
    "start": "540120",
    "end": "545760"
  },
  {
    "text": "interfaces that we can use to build or to describe asynchronous streams of data right on potentially unbounded streams",
    "start": "545760",
    "end": "552480"
  },
  {
    "text": "of data and it has a number of other characteristics which we'll look at in just a second these are very very boring",
    "start": "552480",
    "end": "557700"
  },
  {
    "text": "types however I like to think of them as sort of discontiguous java arrays They Don't Really provide any of the support",
    "start": "557700",
    "end": "563040"
  },
  {
    "text": "that you're going to need to do or higher level processing things like mapping and flat mapping and filtering and you know operating on streams of",
    "start": "563040",
    "end": "569519"
  },
  {
    "text": "data for that we have project reactor we have Netflix's RX Java we have light",
    "start": "569519",
    "end": "574560"
  },
  {
    "text": "bins Aqua streams we have a number of different projects that sit on top or implement or otherwise interoperate with",
    "start": "574560",
    "end": "580140"
  },
  {
    "text": "the reactive stream specification these things give us these operators they allow us to describe pipelines is that",
    "start": "580140",
    "end": "586019"
  },
  {
    "text": "enough are we done yet can we go to a production with just that course not right as good as these types",
    "start": "586019",
    "end": "591720"
  },
  {
    "text": "are as good as reactor is as good as all these things are they're no good if they don't allow us to actually deliver software into production for that we",
    "start": "591720",
    "end": "598080"
  },
  {
    "text": "need to be able to solve the daily sort of bread and butter use cases with which we're on which with which we are all no",
    "start": "598080",
    "end": "603360"
  },
  {
    "text": "doubt familiar things like building web apps things like doing data access and security these are the things that allow",
    "start": "603360",
    "end": "608519"
  },
  {
    "text": "us to ship value to our customers and that at the end of the day is all that matters so suppose that these",
    "start": "608519",
    "end": "613980"
  },
  {
    "text": "Technologies with which you're no doubt familiar things like spring things like hibernate suppose that these things for whatever reason",
    "start": "613980",
    "end": "620100"
  },
  {
    "text": "had no idea about Java util collection types they really really hated them right imagine that for whatever reason",
    "start": "620100",
    "end": "626820"
  },
  {
    "text": "whenever you tried to map a hibernate entity or do a one-dimension relationship with a Java util set",
    "start": "626820",
    "end": "633300"
  },
  {
    "text": "that for whatever reason again hypothetically here friends hypothetically imagine that whenever you tried to map a one-diminate relationship",
    "start": "633300",
    "end": "639360"
  },
  {
    "text": "with hibernate and you use the Javier till set that hibernate didn't just throw an exception imagine that it also",
    "start": "639360",
    "end": "646860"
  },
  {
    "text": "rendered an ASCII art middle finger and then Colonel panicked the machine",
    "start": "646860",
    "end": "654420"
  },
  {
    "text": "would you continue to use hibernate and job util says if you knew that you could continue to expect this kind of abuse of",
    "start": "654420",
    "end": "659700"
  },
  {
    "text": "course not I'm not suggesting you're going to give up on hibernate if the name of the game is to try and map jdbc",
    "start": "659700",
    "end": "664800"
  },
  {
    "text": "data structures to Java objects then that's the best thing there is in a synchronous way anyway right if that's what you're trying to do then that's",
    "start": "664800",
    "end": "670740"
  },
  {
    "text": "that's the best thing you can do you're not going to give up on your your your thing that gets you to production just",
    "start": "670740",
    "end": "676380"
  },
  {
    "text": "because you want to use this clean job util set type you're just going to use whatever you know crazy thing they make",
    "start": "676380",
    "end": "681420"
  },
  {
    "text": "you use the path of least resistance the path that gets you to production so that's the quandary you find ourselves with respect to these reactive streams",
    "start": "681420",
    "end": "687839"
  },
  {
    "text": "types however good they are however obviously useful they are if they're not well integrated into our technology",
    "start": "687839",
    "end": "693420"
  },
  {
    "text": "stack then they don't serve our use cases They don't serve our goals and that's a problem more than a benefit so",
    "start": "693420",
    "end": "699180"
  },
  {
    "text": "the spring team has integrated these reactive types in Spring framework five in 2017 in September we released the",
    "start": "699180",
    "end": "705060"
  },
  {
    "text": "first cut a first release of spring framework five that had a reactive web runtime integrated into the stack on top",
    "start": "705060",
    "end": "711240"
  },
  {
    "text": "of which we have since released spring data case Spring Security five spring boot uh 2.0 and spring Cloud Finchley",
    "start": "711240",
    "end": "717300"
  },
  {
    "text": "and a number of other different technologies that integrate these reactive types and that my friends is the real journey that's the one that",
    "start": "717300",
    "end": "723600"
  },
  {
    "text": "we're going to walk together today and we're going to do that of course we're going to do that of course by doing my absolute favorite thing we're going to",
    "start": "723600",
    "end": "729360"
  },
  {
    "text": "go to my second favorite place on the internet after production I love production you",
    "start": "729360",
    "end": "736740"
  },
  {
    "text": "should love production you should go as early and often as possible bring the kids bring the family the weather's amazing it's the happiest place on Earth",
    "start": "736740",
    "end": "742800"
  },
  {
    "text": "it is better than Disneyland but if you have not been to production you can begin your journey here at start that",
    "start": "742800",
    "end": "748800"
  },
  {
    "text": "spring that I owe if you need inspiration",
    "start": "748800",
    "end": "754860"
  },
  {
    "text": "in the early morning before a cup of tea or coffee start that spring that I own",
    "start": "754860",
    "end": "763279"
  },
  {
    "text": "if your children are restless and they cannot sleep start that spring that I owe",
    "start": "765839",
    "end": "773100"
  },
  {
    "text": "and if you suffer from indigestion after a long night of alcohol abuse and",
    "start": "773100",
    "end": "780600"
  },
  {
    "text": "PHP start that's spring that I owe so we're",
    "start": "780600",
    "end": "787440"
  },
  {
    "text": "gonna build a new application here at start.swing Radio there's a few things that are worth noting first of all foremost we have dark mode that's",
    "start": "787440",
    "end": "792959"
  },
  {
    "text": "awesome uh we're gonna build an application we're going to take advantage of the default mostly I have to specify the name of the artifact I'm",
    "start": "792959",
    "end": "798779"
  },
  {
    "text": "going to call it the reservation hyphen service this is the thing I'm going to build here with you today I have some",
    "start": "798779",
    "end": "803880"
  },
  {
    "text": "options that I want to confront first and foremost the choice of packaging people are often confused by this so let me do my level headed best here not",
    "start": "803880",
    "end": "809459"
  },
  {
    "text": "explain when and where to choose which if by some freak fluke of physics some terrible tragedy of time and space you",
    "start": "809459",
    "end": "815639"
  },
  {
    "text": "should find you have been somehow transported to the distant distant distant past far far far",
    "start": "815639",
    "end": "822200"
  },
  {
    "text": "beyond modern help then choose.war",
    "start": "822200",
    "end": "828740"
  },
  {
    "text": "but if you're here with me in 2019 nay almost 2020.",
    "start": "828740",
    "end": "837000"
  },
  {
    "text": "then choose dot jar this is a big part of my overarching and guiding personal",
    "start": "837000",
    "end": "842220"
  },
  {
    "text": "philosophy of make jar not Warren again lots of things you could do lots of things that you should do but I'm going",
    "start": "842220",
    "end": "847800"
  },
  {
    "text": "to encourage you to accept the defaults here that's a good choice then my friends we have the choice of the jvm",
    "start": "847800",
    "end": "852899"
  },
  {
    "text": "what version of java do you want to run in your code uh today and my friends before you you have three different options of which only two are acceptable",
    "start": "852899",
    "end": "859740"
  },
  {
    "text": "one is not acceptable I'm not going to tell you which one it is I'm gonna give",
    "start": "859740",
    "end": "864839"
  },
  {
    "text": "you a clue when you figured out I don't want you to ruin it for the rest of the gang okay so when you figure it out just be quiet okay I'm gonna give you a",
    "start": "864839",
    "end": "871260"
  },
  {
    "text": "little clue about which one's wrong okay okay don't tell anybody though",
    "start": "871260",
    "end": "877680"
  },
  {
    "text": "don't don't tell anybody so we have two other options that we can consider the first of which is Java 11",
    "start": "877680",
    "end": "883560"
  },
  {
    "text": "Java 11 is the current long-term supportive version of java this is an acceptable solution if you're a coward",
    "start": "883560",
    "end": "888839"
  },
  {
    "text": "if you want to if if you if you want to stay on the oldest version that you can",
    "start": "888839",
    "end": "895019"
  },
  {
    "text": "still consider production supported then that's fine right but if you're on a cloud platform that just sort of conveyor belt you to the next version",
    "start": "895019",
    "end": "900600"
  },
  {
    "text": "automatically anyway then you should really do the right thing and use Java 13. that's what I'm going to do because",
    "start": "900600",
    "end": "906180"
  },
  {
    "text": "hashtag Yolo now my friend Java 11 and Java 13 are both infinitely better in",
    "start": "906180",
    "end": "911820"
  },
  {
    "text": "every way there's Superior they're faster they're more technically secure they're more robust and better supported they're just they have new language",
    "start": "911820",
    "end": "917579"
  },
  {
    "text": "features they're just better choices all around they're technically the right choice but friends also consider that",
    "start": "917579",
    "end": "924839"
  },
  {
    "text": "they're also morally the right choice morally",
    "start": "924839",
    "end": "930660"
  },
  {
    "text": "are you prepared to have that discussion with your children are you prepared to have that discussion about running Java",
    "start": "930660",
    "end": "935880"
  },
  {
    "text": "8 in production in 2019 I think not friends I think not",
    "start": "935880",
    "end": "941699"
  },
  {
    "text": "so we're going to leave those things as they are and then we're going to bring in some of the dependencies that we need to be able to build our application I'm",
    "start": "941699",
    "end": "947100"
  },
  {
    "text": "going to bring in Springs reactive web support we're going to bring in lombok and we're going to bring in reactive uh r2dbc this is a SQL a reactive",
    "start": "947100",
    "end": "954180"
  },
  {
    "text": "sql.access API and we're going to bring in our socket okay now these are these are just my initial selections we could",
    "start": "954180",
    "end": "959820"
  },
  {
    "text": "have selected a number of other things we could have brought in for example uh reactive uh mongodb for example or couch",
    "start": "959820",
    "end": "965160"
  },
  {
    "text": "base or uh redis or you know all sorts of different options but I'm fairly",
    "start": "965160",
    "end": "970380"
  },
  {
    "text": "content with the selections I've made so I'm going to hit generate and that's going to generate a zip file which I am going to open up in my IDE and it",
    "start": "970380",
    "end": "976560"
  },
  {
    "text": "doesn't all that much matter what id you use anything will work so long as it supports in this case Java 13 and Maven",
    "start": "976560",
    "end": "982980"
  },
  {
    "text": "all right so I've got this version of my application unzip and open take some decaf",
    "start": "982980",
    "end": "989760"
  },
  {
    "text": "um Java now anything works just fine anything will",
    "start": "989760",
    "end": "996240"
  },
  {
    "text": "work just fine I I don't really have an opinion here anything's fine uh you can use IntelliJ you can use Eclipse you can",
    "start": "996240",
    "end": "1001940"
  },
  {
    "text": "use netbeans you can use anything you like but I have my new application we're going to go ahead and bring that up I'm going to make the font a little larger",
    "start": "1001940",
    "end": "1007579"
  },
  {
    "text": "for those of you in the back and that means you camera uh here we are 22 22 good stuff can you all see that in",
    "start": "1007579",
    "end": "1013940"
  },
  {
    "text": "the back who can't see that who can not see that okay we're okay good stuff so we're gonna build a new application and",
    "start": "1013940",
    "end": "1019579"
  },
  {
    "text": "we're gonna build an application that saves data to the database so we're going to persist objects of type reservation to my local SQL data store",
    "start": "1019579",
    "end": "1027079"
  },
  {
    "text": "and I've got postgres running in the background here I've got postgres back here you can see orders orders right",
    "start": "1027079",
    "end": "1032298"
  },
  {
    "text": "there's my database okay and I can say show me the scheme I have and I can say show me the information for the",
    "start": "1032299",
    "end": "1037880"
  },
  {
    "text": "reservation table and I can delete the data from the reservation thing there we go and now I have no data in there what",
    "start": "1037880",
    "end": "1043520"
  },
  {
    "text": "I want to do is I want to map my object to this table so monotonically incrementing primary key of type integer",
    "start": "1043520",
    "end": "1049040"
  },
  {
    "text": "so I'll say private integer ID and I'll say I want to have a private string name okay like that and that's the essence of",
    "start": "1049040",
    "end": "1056000"
  },
  {
    "text": "what I want to express but this this my friends is Java so you need Constructors you need to string you need equals and",
    "start": "1056000",
    "end": "1061460"
  },
  {
    "text": "hash code you need to blah blah blah you know so terrible right so just look at",
    "start": "1061460",
    "end": "1067820"
  },
  {
    "text": "that so so Java so 2019 look at all that so instead of doing that I I prefer",
    "start": "1067820",
    "end": "1073039"
  },
  {
    "text": "lumbuck lumbuck's a compile time annotation processor it allows you to synthesize through these annotations at",
    "start": "1073039",
    "end": "1078080"
  },
  {
    "text": "compile time the things that we just specified in code that it code generated my way through and I also want to",
    "start": "1078080",
    "end": "1083840"
  },
  {
    "text": "specify that we have a primary key so I'm going to annotate that particular field with the ID annotation and there my friends is everything we need to be",
    "start": "1083840",
    "end": "1089960"
  },
  {
    "text": "able to map that object to the table now I need some way of persisting it something to manage the tedious Soul",
    "start": "1089960",
    "end": "1096020"
  },
  {
    "text": "annihilatingly oh dear come on soul and highlighting boring read write and update and delete lifecycle the data",
    "start": "1096020",
    "end": "1102679"
  },
  {
    "text": "management lifecycle so I'm going to create a reservation repository which is going to extend the reactive crud",
    "start": "1102679",
    "end": "1108980"
  },
  {
    "text": "repository which is a thing that's going to manage entities of type reservation whose primary key is of type integer now",
    "start": "1108980",
    "end": "1115700"
  },
  {
    "text": "keep in mind this is just an interface I don't actually have to provide the implementation of that spring will do that for me this interface provides a",
    "start": "1115700",
    "end": "1122299"
  },
  {
    "text": "number of different methods some of it should be very straightforward I suspect you can you can suss out based on the",
    "start": "1122299",
    "end": "1127580"
  },
  {
    "text": "names what these things all do you've got save find count delete check if it exists Etc all that is fairly",
    "start": "1127580",
    "end": "1133280"
  },
  {
    "text": "straightforward what may not be so straightforward are the input parameters and the return values the first of which is a publisher a publisher comes from",
    "start": "1133280",
    "end": "1140000"
  },
  {
    "text": "the aforementioned reactive stream specification it's a thing that Pub publishes data asynchronously out of band to something else that consumes it",
    "start": "1140000",
    "end": "1146840"
  },
  {
    "text": "namely a subscriber when the subscriber first subscribes it is given a subscription we're going to double click",
    "start": "1146840",
    "end": "1152419"
  },
  {
    "text": "on that in just a second but let's just leave that for a moment okay when the data eventually arrives one record two",
    "start": "1152419",
    "end": "1158780"
  },
  {
    "text": "records no records a trillion records infinite records whatever each time a new record arise the on next method gets",
    "start": "1158780",
    "end": "1164360"
  },
  {
    "text": "called and you get a call back when there are errors if there are errors the on error method is called and finally",
    "start": "1164360",
    "end": "1170059"
  },
  {
    "text": "when the publisher has produced all the data it's going to produce the on complete method gets called This is the",
    "start": "1170059",
    "end": "1175280"
  },
  {
    "text": "life cycle right the interaction between the producer and the consumer now I mentioned the subscription and the",
    "start": "1175280",
    "end": "1180320"
  },
  {
    "text": "reason I want to sort of return to that to return to this idea of a subscription is because I think it's arguably the",
    "start": "1180320",
    "end": "1185600"
  },
  {
    "text": "most important part of the reactive stream specification it is a link between the producer and the consumer between the publisher and the subscriber",
    "start": "1185600",
    "end": "1192080"
  },
  {
    "text": "is the thing that the subscriber uses to request of the publisher more data this is very important the subscriber the",
    "start": "1192080",
    "end": "1198980"
  },
  {
    "text": "client the consumer the thing that is consuming the data is using this subscription to ask for more data to",
    "start": "1198980",
    "end": "1205280"
  },
  {
    "text": "control the rate of consumption or to control the flow of data this is control",
    "start": "1205280",
    "end": "1210679"
  },
  {
    "text": "flow it's not a new idea ever since we had one computer talking to another on the same network we've had to think",
    "start": "1210679",
    "end": "1216260"
  },
  {
    "text": "about control flow right this is not any idea in any way or flow control rather right not a new idea in any way in the",
    "start": "1216260",
    "end": "1222860"
  },
  {
    "text": "world of reactive programming where we sometimes confuse marketing with technical ideas we've got this new term called back pressure basic same idea we",
    "start": "1222860",
    "end": "1230360"
  },
  {
    "text": "as a consumer control the rate at which we consume data you can't denial of service a consumer that is itself",
    "start": "1230360",
    "end": "1236539"
  },
  {
    "text": "controlling the rate at which it consumes the data okay so this creates more robust Services it gives us the ability to say hey I'm not ready so I'm",
    "start": "1236539",
    "end": "1243440"
  },
  {
    "text": "not going to consume I'm not going to pull down any more than I can handle now I mentioned that there are four types in the reactive stream specification we've",
    "start": "1243440",
    "end": "1249799"
  },
  {
    "text": "mentioned three but there's a fourth one called a processor now a processor is just a bridge a source and sync a",
    "start": "1249799",
    "end": "1255200"
  },
  {
    "text": "publisher and a subscriber and that's it my friends that's it that's the entire reactive stream specification if you understand those four amazingly little",
    "start": "1255200",
    "end": "1261500"
  },
  {
    "text": "types you're ready you're video already leagues ahead of people in Silicon Valley go to Silicon Valley raise",
    "start": "1261500",
    "end": "1267080"
  },
  {
    "text": "millions of dollars create a stupid company and come back a failure in six months you're ready you're way ahead of people in the Valley now",
    "start": "1267080",
    "end": "1274480"
  },
  {
    "text": "these basic types these basic types are foundational they're discontiguous sort",
    "start": "1274480",
    "end": "1280460"
  },
  {
    "text": "of java arrays but they don't give us as I say operators so let's talk about two specialized types from the repository",
    "start": "1280460",
    "end": "1286220"
  },
  {
    "text": "that we kind of skipped over before the first of which is a flux now you may not give a flux but I like this type a flux",
    "start": "1286220",
    "end": "1292820"
  },
  {
    "text": "is a publisher that produces zero to end records zero to n being unbounded okay it has operators lots and lots and lots",
    "start": "1292820",
    "end": "1299780"
  },
  {
    "text": "and lots and lots and lots of operators right these operators support all sorts of different kinds of compositions and",
    "start": "1299780",
    "end": "1304940"
  },
  {
    "text": "iterations and all that kind of stuff right um that's cool that's very convenient we also have a mono a mono is also a",
    "start": "1304940",
    "end": "1312140"
  },
  {
    "text": "publisher but it only produces at most one value so it's zero or one like a completable future but with back",
    "start": "1312140",
    "end": "1318140"
  },
  {
    "text": "pressure and there you go if you've got these two types you've got more semantics you've got the ability to say hey this is a thing that's going to be",
    "start": "1318140",
    "end": "1324679"
  },
  {
    "text": "one record if somebody asks you to render a publisher of type T be it a customer or a reservation or whatever",
    "start": "1324679",
    "end": "1330500"
  },
  {
    "text": "you can say hey is this an overview page in which case it would be a flux of t or is it maybe the details page for a",
    "start": "1330500",
    "end": "1336679"
  },
  {
    "text": "particular record in which case it might be a mono of T they're both Publishers they both have the same semantics but",
    "start": "1336679",
    "end": "1342140"
  },
  {
    "text": "now you know it's probably only give me one or mini okay now now that we've got that out of the way let's write some",
    "start": "1342140",
    "end": "1347480"
  },
  {
    "text": "data to the database so I'm going to create a spring Bean a class that's going to be an initializer okay so we're going to say initializer not a liar and",
    "start": "1347480",
    "end": "1355280"
  },
  {
    "text": "it's going to be a spring bin so it's going to listen for an application ready event and when the application wow I'm",
    "start": "1355280",
    "end": "1360620"
  },
  {
    "text": "so low here I gotta get up higher um when the application uh starts up we're going to get a",
    "start": "1360620",
    "end": "1367460"
  },
  {
    "text": "callback here and we're going to use that callback to write data to the database I'm going to say private final reservation repository I'm going to",
    "start": "1367460",
    "end": "1372980"
  },
  {
    "text": "inject that into the Constructor and I could do this the old-fashioned way I could just say you know code generate the Constructor but again I'm a fan of",
    "start": "1372980",
    "end": "1378679"
  },
  {
    "text": "lombuck at this point so give me that and there we are okay now what I want to do is I want to just write the data to",
    "start": "1378679",
    "end": "1383960"
  },
  {
    "text": "the database so I'm going to create a little publisher of names I'm going to just go through and get some names on the spring team my name is Josh it is so",
    "start": "1383960",
    "end": "1390080"
  },
  {
    "text": "nice to meet y'all uh who else is on the spring team we've got Olga she's amazing we've got to Madura she's amazing we've",
    "start": "1390080",
    "end": "1396500"
  },
  {
    "text": "got Violetta she's amazing we've got uh Ria she's amazing we've got uh Dr sire",
    "start": "1396500",
    "end": "1403520"
  },
  {
    "text": "he's he's pretty cool too we've got Spencer and is that it yet do we do eight I think that's uh one two three",
    "start": "1403520",
    "end": "1410179"
  },
  {
    "text": "four we need one more and we've got Stefan okay",
    "start": "1410179",
    "end": "1416440"
  },
  {
    "text": "two there we are okay missing that okay now we have a publisher of names these",
    "start": "1416440",
    "end": "1422120"
  },
  {
    "text": "are just names in a stream and what I want to do is I want to visit each one and turn it into a new reservation like",
    "start": "1422120",
    "end": "1427460"
  },
  {
    "text": "so so there we are there's the name of there's our stream of reservations and I want to save each one of these to the",
    "start": "1427460",
    "end": "1433400"
  },
  {
    "text": "database I could do map like that I could say hey for each one I want to save by passing that in I can just use a",
    "start": "1433400",
    "end": "1439640"
  },
  {
    "text": "method reference but look what I get when I do that I get a publisher of publisher of reservations and I don't want to do that I want to actually have",
    "start": "1439640",
    "end": "1445340"
  },
  {
    "text": "just one level of Publishers because it gets confusing and it gets hard to manage I want to flatten out that nested",
    "start": "1445340",
    "end": "1451280"
  },
  {
    "text": "publisher so use flat map and flatmap unpacks that intermediate type and allows you just to",
    "start": "1451280",
    "end": "1457340"
  },
  {
    "text": "say that right so there's my saved data there's the saved publisher uh the saved pipeline now if I ran this code AS is",
    "start": "1457340",
    "end": "1463760"
  },
  {
    "text": "right now nothing would happen you see this is called a Cold Stream we've defined the pipes through which data",
    "start": "1463760",
    "end": "1469039"
  },
  {
    "text": "will flow but we've not turned on the the proverbial faucet there's no water flowing through these pipes in order for",
    "start": "1469039",
    "end": "1474080"
  },
  {
    "text": "that to happen we need to say save dot subscribe and you can override or use one of the overwritten methods there's a",
    "start": "1474080",
    "end": "1480080"
  },
  {
    "text": "lot of different options there I can use a consumer here and I can just log out their data but of course this is Java so",
    "start": "1480080",
    "end": "1485179"
  },
  {
    "text": "you can turn that long verbose Anonymous inner class into a Lambda and that could be a method reference and so there we are not bad huh now",
    "start": "1485179",
    "end": "1491960"
  },
  {
    "text": "we're going to run this but if I run this program right now what do you suppose what happened well first of all on the first run we get eight records on",
    "start": "1491960",
    "end": "1498559"
  },
  {
    "text": "the second one we get 16 and third one 24 and so on eventually we just get duplicative data I don't want duplicative data so I suppose what I",
    "start": "1498559",
    "end": "1505400"
  },
  {
    "text": "really want to do is I want to first of all clean this up into a more modern pipeline I'm going to remove all this sort of intermediate uh variables that's",
    "start": "1505400",
    "end": "1512360"
  },
  {
    "text": "fine much better okay I can use Auto inference there good and what I want to",
    "start": "1512360",
    "end": "1517640"
  },
  {
    "text": "do now is I want to say hey let's delete everything first delete all and then I'm",
    "start": "1517640",
    "end": "1522860"
  },
  {
    "text": "gonna I'm gonna write the data to the database and then and only then remember these are asynchronous right so there's",
    "start": "1522860",
    "end": "1528740"
  },
  {
    "text": "no guarantee that the delete all will happen before names the only way you can guarantee that is by using these",
    "start": "1528740",
    "end": "1534679"
  },
  {
    "text": "operators right so I'm saying do everything asynchronously first and then do this and then do that right and then",
    "start": "1534679",
    "end": "1540799"
  },
  {
    "text": "finally as the data comes back I'm going to log it out I'm going to stream out the results and print out the results from this find all operation so let's",
    "start": "1540799",
    "end": "1547640"
  },
  {
    "text": "see if that works let's see if that goes the way it expected it to go now keep in mind this this is nice because this is",
    "start": "1547640",
    "end": "1553400"
  },
  {
    "text": "all asynchronous there's there's a lot of different things happening in here right I have a error it says hey I need",
    "start": "1553400",
    "end": "1558919"
  },
  {
    "text": "a database URL so I'm going to use r2dbc URL I'm going to give it an r2bc database connection string so r2bc",
    "start": "1558919",
    "end": "1565820"
  },
  {
    "text": "postgres uh localhost orders okay I'm going to say uh username",
    "start": "1565820",
    "end": "1572840"
  },
  {
    "text": "equals orders and I'm going to say password equals order say voila okay there's my connection string don't tell",
    "start": "1572840",
    "end": "1578840"
  },
  {
    "text": "anybody about my password that's a that's a that's awkward I did not expect this to happen some things should not be",
    "start": "1578840",
    "end": "1584299"
  },
  {
    "text": "open sourced um let's see did that work unable to create a connection Factory",
    "start": "1584299",
    "end": "1590299"
  },
  {
    "text": "um oh pool driver postgresql",
    "start": "1590299",
    "end": "1596480"
  },
  {
    "text": "r2bc postgresql Maybe let's see I just work here",
    "start": "1596480",
    "end": "1603620"
  },
  {
    "text": "did that URL r2bc [Music] connection Factory driver postgres",
    "start": "1603620",
    "end": "1610940"
  },
  {
    "text": "wait a minute do we have the postgres driver here",
    "start": "1610940",
    "end": "1616340"
  },
  {
    "text": "no okay so the way you fix that is you go back to here you specify hey postgres",
    "start": "1616340",
    "end": "1621620"
  },
  {
    "text": "choose that you can explore okay and you can actually just cheat you can get the build that you would have gotten if you",
    "start": "1621620",
    "end": "1627140"
  },
  {
    "text": "had just generated it correctly for the first time copy and paste that back into your build and ta-da All Is Forgiven",
    "start": "1627140",
    "end": "1633080"
  },
  {
    "text": "okay there we go so there's my r2bc postgres driver implementation add that to the class path I'm pretty sure that I",
    "start": "1633080",
    "end": "1639260"
  },
  {
    "text": "had the actual string right the first time around so it's probably gonna oh that actually did work so let's leave it",
    "start": "1639260",
    "end": "1644960"
  },
  {
    "text": "let's see if it works good good good",
    "start": "1644960",
    "end": "1648880"
  },
  {
    "text": "we run good did it work there we are look at that my friends there we are there are the eight records on the",
    "start": "1650720",
    "end": "1656419"
  },
  {
    "text": "console it's reflected in the output you can see the names have gone to the database they've round trip they've been given a primary key and you can see them",
    "start": "1656419",
    "end": "1662419"
  },
  {
    "text": "reflected in the console here it worked of course it worked it was a it was a",
    "start": "1662419",
    "end": "1668240"
  },
  {
    "text": "demo it was a demo that was always going to work of which of this there is no doubt",
    "start": "1668240",
    "end": "1674299"
  },
  {
    "text": "that's not what I wanted to talk to you about that's not why I'm here what I flew across the planet to talk to you about is this this is the spring boot",
    "start": "1674299",
    "end": "1680779"
  },
  {
    "text": "ASCII artwork now this artwork took a long time to get right but we on the spring team have many people who are",
    "start": "1680779",
    "end": "1686779"
  },
  {
    "text": "doctors phds people who in their previous lives work to nuclear physics star stuff the very celestial bodies on",
    "start": "1686779",
    "end": "1694279"
  },
  {
    "text": "in the heavens above us for their daily bread and butter and so it's for this reason that I want to take just an Ever So brief moment to talk about what I",
    "start": "1694279",
    "end": "1701000"
  },
  {
    "text": "consider to be a glaring and serious deficiency in the IntelliJ jet Branch product for while I'm a fan I consider this to be particularly short-sighted do",
    "start": "1701000",
    "end": "1707659"
  },
  {
    "text": "you see this checkbox right here right there do you see that checkbox that right there that check box right there this one do you see this checkbox that",
    "start": "1707659",
    "end": "1714080"
  },
  {
    "text": "one right there do you see this checkbox this checkbox if you click it",
    "start": "1714080",
    "end": "1720140"
  },
  {
    "text": "do not click it this checkbox once clicked suppresses the output of the ASCII artwork",
    "start": "1720140",
    "end": "1728559"
  },
  {
    "text": "what the hell why is that there that's a dumb feature nobody even asked for that",
    "start": "1730880",
    "end": "1736039"
  },
  {
    "text": "IntelliJ seriously why is that there worst idea ever so I did what anybody would do in that situation I went on the",
    "start": "1736039",
    "end": "1741799"
  },
  {
    "text": "internet and I cried and I was given a message of Hope for my friend Jan sebran this is Jan sebran right here I'm going",
    "start": "1741799",
    "end": "1748220"
  },
  {
    "text": "to show you he's a developer Advocate at jetbrains this is this is yawn right here that's him right here okay that's",
    "start": "1748220",
    "end": "1755419"
  },
  {
    "text": "that's yawn right right there okay right",
    "start": "1755419",
    "end": "1761860"
  },
  {
    "text": "Boop anyway he sent me this message of Hope which I want to share with you today",
    "start": "1765380",
    "end": "1772240"
  },
  {
    "text": "I've known Yan a long time I want to believe him when he says it's going to be fixed post haste and I want to believe him I want to believe him every",
    "start": "1782840",
    "end": "1788419"
  },
  {
    "text": "time there's a new release I say hey is it done yet is it done yet please tell me it's gonna be in the next release and he says relax Josh just chill out Josh",
    "start": "1788419",
    "end": "1795320"
  },
  {
    "text": "just relax it'll be surely fixed in the next release just just relax and you know I've known him for a long time and",
    "start": "1795320",
    "end": "1800600"
  },
  {
    "text": "I really want to believe him but I'm starting to think that just maybe just maybe just maybe just maybe he's not exactly on the level",
    "start": "1800600",
    "end": "1810039"
  },
  {
    "text": "whatever anyhoozle we've got now data in the database we've got amazing ask out",
    "start": "1810320",
    "end": "1815360"
  },
  {
    "text": "Rook the question people often ask at this point is hey can I build an HTTP API and naturally you could there's a lot of different ways to do that but",
    "start": "1815360",
    "end": "1820760"
  },
  {
    "text": "let's let's just build a simple router function router function okay so server response and it's just a functional",
    "start": "1820760",
    "end": "1827360"
  },
  {
    "text": "reactive endpoint that's going to provide a a response when a request predicate is",
    "start": "1827360",
    "end": "1833299"
  },
  {
    "text": "matched so here we are and we'll say build and it's going to be dot get forward slash reservations okay",
    "start": "1833299",
    "end": "1839179"
  },
  {
    "text": "reservations and new Handler function and it's just",
    "start": "1839179",
    "end": "1844279"
  },
  {
    "text": "going to be the response so server.responds and my job is to produce a response in order to do that I am",
    "start": "1844279",
    "end": "1849919"
  },
  {
    "text": "going to inject a collaborating object a reference to type reservation repository I'm going to say hey when somebody makes",
    "start": "1849919",
    "end": "1855260"
  },
  {
    "text": "an HP get request to forward slash reservations this callback this Anonymous inner class which is now a",
    "start": "1855260",
    "end": "1860899"
  },
  {
    "text": "Lambda which is now made sorted by Static Imports that Lambda is going to be invoked to produce the response okay",
    "start": "1860899",
    "end": "1866600"
  },
  {
    "text": "so I can go ahead and restart this and let's see what we get okay it takes longer to compile Java these days than",
    "start": "1866600",
    "end": "1873140"
  },
  {
    "text": "it takes to do anything else so localhost 8084 reservations and voila",
    "start": "1873140",
    "end": "1878899"
  },
  {
    "text": "okay there we are there's our data well reflected in the output of the HTTP endpoint that's good right it's fine now",
    "start": "1878899",
    "end": "1884779"
  },
  {
    "text": "I can all I can hear a collective eh like who cares I just showed you how to do SQL data access and eight records of",
    "start": "1884779",
    "end": "1892399"
  },
  {
    "text": "Json you didn't you didn't need reactive for that what's the point of that that's all I've shown you is that you can do",
    "start": "1892399",
    "end": "1898279"
  },
  {
    "text": "what you could have done yesterday with reactive today okay that's nothing interesting there's nothing novel about that so let's talk about use cases where",
    "start": "1898279",
    "end": "1905059"
  },
  {
    "text": "reactive actually offers a net win as opposed to just being parity or just achieving parity so reactive programming",
    "start": "1905059",
    "end": "1911059"
  },
  {
    "text": "is really useful where you might have otherwise monopolized a thread okay in all those use cases where you might have",
    "start": "1911059",
    "end": "1916580"
  },
  {
    "text": "written code that otherwise monopolized a thread and it's not hard to imagine scenarios or this might have been the case in yesteryear okay suppose you want",
    "start": "1916580",
    "end": "1923179"
  },
  {
    "text": "to do something that required the client or the service to create a ongoing socket connection",
    "start": "1923179",
    "end": "1928580"
  },
  {
    "text": "and the socket connection is what the client uses to get fast updates you want liveliness you want to be sure that",
    "start": "1928580",
    "end": "1934340"
  },
  {
    "text": "you're getting the latest information as fast as possible so what what use cases sort of scream out for this kind of",
    "start": "1934340",
    "end": "1939500"
  },
  {
    "text": "approach in yesteryear well things that require fat you know you know really really quick live updates uh you know um",
    "start": "1939500",
    "end": "1946100"
  },
  {
    "text": "uh stock tickers and chat notifications and presents and uh you know all these",
    "start": "1946100",
    "end": "1951620"
  },
  {
    "text": "kinds of things that approach is problematic because it requires that you create a thread you know in the old",
    "start": "1951620",
    "end": "1957799"
  },
  {
    "text": "approach you'd keep that socket and you'd keep that thread that's where we get into trouble so what I want to do is actually what I'm going to create an",
    "start": "1957799",
    "end": "1963080"
  },
  {
    "text": "endpoint here I'm gonna put an endpoint as a set of web sockets we're just going to create a websocket endpoint and I'm going to",
    "start": "1963080",
    "end": "1968600"
  },
  {
    "text": "create an infinite stream of value so let's go ahead and do that I'm going to go ahead and create a a simple service here uh that will just greet people okay",
    "start": "1968600",
    "end": "1975500"
  },
  {
    "text": "just a greeting service here we are a greeting service and it's going to create an infinite stream of greetings",
    "start": "1975500",
    "end": "1981860"
  },
  {
    "text": "responses given a greeting request so here's that and I'm going to say Greetings request okay now here's my",
    "start": "1981860",
    "end": "1989360"
  },
  {
    "text": "greetings response the response uh will be a message and the request will of",
    "start": "1989360",
    "end": "1995179"
  },
  {
    "text": "course have a name so these are kind of like dtos right I'm going to create the detail by using the lumbuck annotations",
    "start": "1995179",
    "end": "2001360"
  },
  {
    "text": "that we've already been introduced to here we go paste okay now given a",
    "start": "2001360",
    "end": "2006519"
  },
  {
    "text": "request I'm going to return a stream of responses so here we are greet greetings",
    "start": "2006519",
    "end": "2011740"
  },
  {
    "text": "request good now I'm going to say return flux Dot from stream I'm going to create an",
    "start": "2011740",
    "end": "2017260"
  },
  {
    "text": "infinite Java stream of supplier with a new supplier I'm going to create a new um greetings response okay so new",
    "start": "2017260",
    "end": "2024519"
  },
  {
    "text": "greeting response and I'm going to say hello or I suppose a good day there we are uh request dot get name",
    "start": "2024519",
    "end": "2033340"
  },
  {
    "text": "at and we're just going to log the time because you know we can we've got the computers so here we go there's my",
    "start": "2033340",
    "end": "2040360"
  },
  {
    "text": "infinite stream that's going to produce new values in perpetuity right and that's going to be problematic because uh we we can't really just you know",
    "start": "2040360",
    "end": "2046899"
  },
  {
    "text": "it'll just score right off the side of the screen basically so I don't want to do that so what I'm going to do is I'm going to stagger the output I'm going to delay the output of the records just to",
    "start": "2046899",
    "end": "2053618"
  },
  {
    "text": "by one second so we can have have a hope of following it along and I can do that by using this operator on flux called",
    "start": "2053619",
    "end": "2059020"
  },
  {
    "text": "delay element and the reason I have an operator that gives me the ability to control time uh is because reactor",
    "start": "2059020",
    "end": "2066339"
  },
  {
    "text": "ultimately has something called a scheduler a scheduler is one half thread pool and one half clock and that clock",
    "start": "2066339",
    "end": "2073599"
  },
  {
    "text": "is what helps us do some of the most interesting work that needs to be done when you do reactive programming namely",
    "start": "2073599",
    "end": "2078638"
  },
  {
    "text": "it allows us to effortlessly move the uh execution of our program from one thread",
    "start": "2078639",
    "end": "2083858"
  },
  {
    "text": "to another without us having to worry about how that gets done you don't normally need to worry about that right so for example",
    "start": "2083859",
    "end": "2089679"
  },
  {
    "text": "if I were to go back to this original pipeline here I created this pipeline that had these asynchronous uh details",
    "start": "2089679",
    "end": "2095618"
  },
  {
    "text": "these asynchronous things that were happening uh and they're and they're happening on the default scheduler by default the schedule that you get in",
    "start": "2095619",
    "end": "2100960"
  },
  {
    "text": "reactor is a schedule of one thread per core okay so you get one third per quarter and so long as you don't block",
    "start": "2100960",
    "end": "2106359"
  },
  {
    "text": "any of those threads it works out just fine but if you do block the thirds if you do something that blocks the thread and what are some of the things that",
    "start": "2106359",
    "end": "2112119"
  },
  {
    "text": "block a thread if we've moved away from i o what other things can still block threads well you know what can what what",
    "start": "2112119",
    "end": "2118839"
  },
  {
    "text": "kind of what kind of work do you do on the CPU right what what things can pin down our CPU so Fibonacci right that's a",
    "start": "2118839",
    "end": "2124780"
  },
  {
    "text": "thing that will end up blocking the thread uh cryptography Bitcoin mining slack right these are things that eat",
    "start": "2124780",
    "end": "2130780"
  },
  {
    "text": "lots and lots of CPU power so what we want to do is we want to avoid that kind of work right so you can do that if you",
    "start": "2130780",
    "end": "2137500"
  },
  {
    "text": "have something that's going to do this blocking interaction in your code you can Gordon off that particular interaction by saying Hey I want to",
    "start": "2137500",
    "end": "2144220"
  },
  {
    "text": "subscribe on a particular schedule you can say schedulers dot for example elastic right or I can write an Executor",
    "start": "2144220",
    "end": "2150700"
  },
  {
    "text": "base thread puller bound elastic or immediate which will run the code on the client's thread basically public setting",
    "start": "2150700",
    "end": "2156640"
  },
  {
    "text": "void main right so you can do all sorts of things there but you shouldn't know normally need to do that I consider this a code smell that tells me that you're",
    "start": "2156640",
    "end": "2162880"
  },
  {
    "text": "leaking somewhere in your code you've got blocking code in your application and that's problematic right it's",
    "start": "2162880",
    "end": "2168760"
  },
  {
    "text": "problematic because you want to eventually if you can move away from this sort of model right if you find",
    "start": "2168760",
    "end": "2174880"
  },
  {
    "text": "that you're doing this it's very important that you find where this is happening and kind of either isolated or better yet remove it we've created a",
    "start": "2174880",
    "end": "2180700"
  },
  {
    "text": "tool that you can use called block count block count is a Java agent it's part of project reactor you can add it to the",
    "start": "2180700",
    "end": "2186579"
  },
  {
    "text": "class path and if you do anything uh blocking like thread.sleep for example it'll throw an exception it'll help you",
    "start": "2186579",
    "end": "2192280"
  },
  {
    "text": "fare it out to any of these blocking interactions right so this is very very nice we've got this nice API it's",
    "start": "2192280",
    "end": "2198520"
  },
  {
    "text": "asynchronous and it's potentially unbounded and we have all these sort of interesting things happening and yet I",
    "start": "2198520",
    "end": "2203920"
  },
  {
    "text": "didn't have to write a lot of code to get that to work think about what's happening there I have one asynchronous thing after which I want another",
    "start": "2203920",
    "end": "2209800"
  },
  {
    "text": "asynchronous thing to happen after which I have another asynchrist thing that I want to happen think about how you'd have to implement that absent reactive",
    "start": "2209800",
    "end": "2216400"
  },
  {
    "text": "programming by yourself by hand right in 2019 you'd use something like oh I don't",
    "start": "2216400",
    "end": "2221740"
  },
  {
    "text": "know threads and you'd use executors and runnables and phasers and semaphores and countdown latches and stick like barriers and all this kind of stuff",
    "start": "2221740",
    "end": "2228339"
  },
  {
    "text": "that's not for me friends remember there's only one person there's only one person who truly understands",
    "start": "2228339",
    "end": "2235060"
  },
  {
    "text": "how to do multi-threaded programming in Java and it's not you that's the important message here this",
    "start": "2235060",
    "end": "2241540"
  },
  {
    "text": "is not a message of hope you're not good enough nor am I so don't bother use the API right uh",
    "start": "2241540",
    "end": "2247780"
  },
  {
    "text": "good stuff so now we've got this this code and we've got the scheduler and the scheduler is what allows us to talk",
    "start": "2247780",
    "end": "2253359"
  },
  {
    "text": "about things like delay elements so I've got the service and what I want to do is I want to now create a websocket endpoint I'm going to create create a",
    "start": "2253359",
    "end": "2259660"
  },
  {
    "text": "greeting service websocket configuration good stuff",
    "start": "2259660",
    "end": "2266260"
  },
  {
    "text": "websocket configuration we're gonna create a bean of type simple URL Handler mapping it's going to create a mapping",
    "start": "2266260",
    "end": "2272320"
  },
  {
    "text": "it's going to mount the um uh the HTTP URL and then do the upgrade to the",
    "start": "2272320",
    "end": "2278200"
  },
  {
    "text": "websocket endpoint so I have to tell the framework hey Mount the websocket endpoint at forward slash greetings",
    "start": "2278200",
    "end": "2284140"
  },
  {
    "text": "right so it's going to inject a collaborating objective type websocket Handler there we are wsh",
    "start": "2284140",
    "end": "2289599"
  },
  {
    "text": "wsh good I'm going to make it and I'm giving giving it an order of 10. I don't know if I need to do that I do need to",
    "start": "2289599",
    "end": "2295359"
  },
  {
    "text": "do that so there we go now there's the simple URL Handler mapping I'm going to create a websocket Handler adapter",
    "start": "2295359",
    "end": "2301540"
  },
  {
    "text": "that's just pure infrastructure so you can ignore that if you like and then",
    "start": "2301540",
    "end": "2307000"
  },
  {
    "text": "and then we're going to create a websocket Handler and the websocket Handler is the thing that actually uh produces the the response that we're",
    "start": "2307000",
    "end": "2313420"
  },
  {
    "text": "going to send back to the client so in order to do this this is the actual business logic that we're going to create so I'm going to create a new websocket Handler",
    "start": "2313420",
    "end": "2319480"
  },
  {
    "text": "um here as well and this websocket Handler is the actual business logic that's",
    "start": "2319480",
    "end": "2325359"
  },
  {
    "text": "where we do the interesting work that needs to be done so let's see websocket Handler there we are good stuff and in",
    "start": "2325359",
    "end": "2331060"
  },
  {
    "text": "order to do that work I'm going to inject the collaborating object the greetings service here I'm going to make this a configuration class and I'm going",
    "start": "2331060",
    "end": "2338260"
  },
  {
    "text": "to when the application gets a websocket client I'm going to have a websocket session established I'm going to read",
    "start": "2338260",
    "end": "2344380"
  },
  {
    "text": "from the session remember I'm assuming that the session client the websocket client is going to send me a name so I'm",
    "start": "2344380",
    "end": "2350380"
  },
  {
    "text": "going to say session dot receive in which case I'll get a publisher of websocket messages I'll read from each",
    "start": "2350380",
    "end": "2355599"
  },
  {
    "text": "one of those I'll say websocket message.get payload is text I'm going to read from each one of those and that's the name right I'm going to say create a",
    "start": "2355599",
    "end": "2362200"
  },
  {
    "text": "new greetings request passing in the name and from each one of those I'm going to call the greeting service I'll",
    "start": "2362200",
    "end": "2367300"
  },
  {
    "text": "say for each new greetings request call greetingservice.greetpassing that in right and of course that can be that and",
    "start": "2367300",
    "end": "2374200"
  },
  {
    "text": "then from each one of those I have the greetings response right now I've got the message coming back from the the",
    "start": "2374200",
    "end": "2379720"
  },
  {
    "text": "service itself and then for each one of those I want to take the string and turn it into a websocket text message that I",
    "start": "2379720",
    "end": "2386320"
  },
  {
    "text": "can then send back to the client right so I'm actually using that little service that we created earlier to generate an infinite stream of greetings",
    "start": "2386320",
    "end": "2391780"
  },
  {
    "text": "and I'm turning it as these greetings arrive every second I'm turning it into a new websocket message which will be",
    "start": "2391780",
    "end": "2397060"
  },
  {
    "text": "sent back to the to the client the websocket client so here's the entire pipeline if you will there it is right",
    "start": "2397060",
    "end": "2402339"
  },
  {
    "text": "there you go just you know chat or whatever okay I don't like to again VAR for the win okay and now I can say",
    "start": "2402339",
    "end": "2410380"
  },
  {
    "text": "session dot text or sorry session dot send chat okay that's the entire interaction uh this can of course be",
    "start": "2410380",
    "end": "2416800"
  },
  {
    "text": "written as a Lambda that's very nice and there you go that's the entire websocket interaction that's the entire business",
    "start": "2416800",
    "end": "2422020"
  },
  {
    "text": "logic if you will of my websocket example but we are faced with a bit of a pick a a predicament a bit of a pickle",
    "start": "2422020",
    "end": "2428260"
  },
  {
    "text": "my friends I find myself in a situation where I",
    "start": "2428260",
    "end": "2433200"
  },
  {
    "text": "where us works and if I could find a more reasonable way to do this and Pike company believe me believe you me I",
    "start": "2433599",
    "end": "2439060"
  },
  {
    "text": "would but I feel my hands are tied I haven't been able been able to yet find a better way to do this and so I'm going",
    "start": "2439060",
    "end": "2444880"
  },
  {
    "text": "to do something that I'm not proud of something that I wouldn't otherwise do in polite company something that if I had any say in the matter I would",
    "start": "2444880",
    "end": "2450220"
  },
  {
    "text": "definitely definitely not do I would oh I'm gonna I'm gonna write JavaScript",
    "start": "2450220",
    "end": "2456760"
  },
  {
    "text": "so static .w.html HTML body",
    "start": "2456760",
    "end": "2465400"
  },
  {
    "text": "script window dot add event listener load",
    "start": "2465400",
    "end": "2471880"
  },
  {
    "text": "okay RWS equals new websocket WS",
    "start": "2471880",
    "end": "2477520"
  },
  {
    "text": "oh come on come on localhost 8084 WS greetings WS",
    "start": "2477520",
    "end": "2484180"
  },
  {
    "text": "dot add event listener open when the socket first connects to the websocket service I get a call back there and when",
    "start": "2484180",
    "end": "2489220"
  },
  {
    "text": "the new messages arrive I get an on message callback and there we are so now what I want to do is I want to say when the socket connects I'm going to use the",
    "start": "2489220",
    "end": "2495760"
  },
  {
    "text": "websocket that's now ready to use it's initialized I'm going to send a um a message to the service I'll say oh okay",
    "start": "2495760",
    "end": "2501160"
  },
  {
    "text": "the name is Brisbane Brisbane and then as each new record comes back I'm going",
    "start": "2501160",
    "end": "2506320"
  },
  {
    "text": "to log it out okay I'll say log.ev.data okay and there we are there's the the websocket endpoint",
    "start": "2506320",
    "end": "2512200"
  },
  {
    "text": "there's the websocket code JavaScript",
    "start": "2512200",
    "end": "2516220"
  },
  {
    "text": "oh alrighty is it up did it already restart okay let's assume it did localhost",
    "start": "2517980",
    "end": "2524140"
  },
  {
    "text": "8080s.html [Music]",
    "start": "2524140",
    "end": "2529180"
  },
  {
    "text": "and there we are there you go my friends it's gonna go on and on and on and on",
    "start": "2529180",
    "end": "2536020"
  },
  {
    "text": "forever and ever and ever and ever forever producing new values every",
    "start": "2536020",
    "end": "2541540"
  },
  {
    "text": "second in perpetuity for all time it has no end it is endless it is infinite it",
    "start": "2541540",
    "end": "2549579"
  },
  {
    "text": "is without Finn it will go on and on and on and on like the oceans",
    "start": "2549579",
    "end": "2557020"
  },
  {
    "text": "and the skies and the stars and the bugs in your code just infinite infinite",
    "start": "2557020",
    "end": "2564339"
  },
  {
    "text": "so whatever you do my friends whatever you do don't worry it's fine because in Between The Raindrops that",
    "start": "2564339",
    "end": "2571420"
  },
  {
    "text": "code is not going to keep that threat open it's going to repurpose that thread and make sure it's available to other things in the system so while this is",
    "start": "2571420",
    "end": "2577720"
  },
  {
    "text": "not you know this is still a resource strain eventually it's not going to happen anywhere near so as soon as it",
    "start": "2577720",
    "end": "2583119"
  },
  {
    "text": "would if you were limited to one uh client to one thread this is the benefit of reactive programming it's not that",
    "start": "2583119",
    "end": "2588940"
  },
  {
    "text": "we've made any one transaction faster it's that we've managed to make the system uh do the work in such a way that",
    "start": "2588940",
    "end": "2594579"
  },
  {
    "text": "we can handle a good deal many more transactions that's where we gain something here this is not about making it so that we can handle one transaction",
    "start": "2594579",
    "end": "2601180"
  },
  {
    "text": "faster so that we can handle many more transactions now I've been demonstrating this to you using uh things that I think",
    "start": "2601180",
    "end": "2607119"
  },
  {
    "text": "are fairly familiar things like web sockets things like HTTP things like jdb you know things like SQL all these are",
    "start": "2607119",
    "end": "2613060"
  },
  {
    "text": "fairly straightforward and uh you know the websocket thing is pretty interesting but what I commit would I build a high",
    "start": "2613060",
    "end": "2620260"
  },
  {
    "text": "performance microservices a sort of architecture based on HTTP today",
    "start": "2620260",
    "end": "2625599"
  },
  {
    "text": "probably not right there are better options certainly for low latency high performance sort of computing right that",
    "start": "2625599",
    "end": "2631900"
  },
  {
    "text": "kind of stuff and so one option that a Google Pioneer that was kind of interesting is called grpc that's a",
    "start": "2631900",
    "end": "2637060"
  },
  {
    "text": "service framework it's a way for one service to talk to another uh kind of interesting it does it requires that you",
    "start": "2637060",
    "end": "2642579"
  },
  {
    "text": "do code generation and requires that every payload be based on Google protocol Buffs so it's very uh you know",
    "start": "2642579",
    "end": "2648339"
  },
  {
    "text": "it's a it's a round hole square peg kind of thing right you've got a problem if you don't want to describe your services",
    "start": "2648339",
    "end": "2654579"
  },
  {
    "text": "in that way it's not natively reactive either right it's asynchronous you can use a plug-in from Salesforce do you",
    "start": "2654579",
    "end": "2660700"
  },
  {
    "text": "have Salesforce here they're a small company in the states anybody here of Salesforce uh they they have a they they",
    "start": "2660700",
    "end": "2665980"
  },
  {
    "text": "use a reactor right because they want to scale but they built a compiler plug-in for grpc that actually emits reactor",
    "start": "2665980",
    "end": "2673359"
  },
  {
    "text": "Based grpc Services instead of the default one kind of interesting I don't know if I'd use that today but why not uh my for my money though today if I had",
    "start": "2673359",
    "end": "2680859"
  },
  {
    "text": "to build a high performance sort of service architecture today I'd use something like our socket now how many",
    "start": "2680859",
    "end": "2686140"
  },
  {
    "text": "of you have heard of R socket not you Todd you that's this is one of the creators of it so I don't uh I don't",
    "start": "2686140",
    "end": "2692440"
  },
  {
    "text": "want to hear from him at all none of your sass so um our socket is a a service technology",
    "start": "2692440",
    "end": "2697780"
  },
  {
    "text": "so it's a protocol it's a binary sort of payload agnostic uh protocol for communicating data over the network it",
    "start": "2697780",
    "end": "2703839"
  },
  {
    "text": "gets rid of a lot of a lot of the sort of inherent limitations that you get when you use something like uh HTTP",
    "start": "2703839",
    "end": "2709300"
  },
  {
    "text": "right HTTP 2 is pipeline not multiplexed a lot of times when you're doing connections from one service to another",
    "start": "2709300",
    "end": "2714579"
  },
  {
    "text": "you have to connect and then disconnect this creates a drag it's very in performant whereas with our socket you",
    "start": "2714579",
    "end": "2720099"
  },
  {
    "text": "can create a connection and stays open for the life of your application so you get rid of that constant act and disconnect and all that stuff it can do",
    "start": "2720099",
    "end": "2726579"
  },
  {
    "text": "all sorts of different message exchange patterns so request response you can do bi-directional communication there's no such thing as client service in our",
    "start": "2726579",
    "end": "2732760"
  },
  {
    "text": "socket it's actually requester responder so it's just a really nice protocol very nice protocol that I think uh it feels",
    "start": "2732760",
    "end": "2739300"
  },
  {
    "text": "very natural for for sort of these kinds of use cases and as it happens we actually integrated it into spring framework 5.2 so it's actually already",
    "start": "2739300",
    "end": "2746859"
  },
  {
    "text": "here it was originated it originated correct me if I'm wrong by folks who read Netflix and who came then to",
    "start": "2746859",
    "end": "2753099"
  },
  {
    "text": "Facebook and anything else you want to add to that there you go so people that that have",
    "start": "2753099",
    "end": "2759579"
  },
  {
    "text": "been in production they have they have uh stared down the the whites of the eyes of of uh of production uh problems",
    "start": "2759579",
    "end": "2766359"
  },
  {
    "text": "right so uh it's a very useful Pro very useful protocol we have a component",
    "start": "2766359",
    "end": "2772240"
  },
  {
    "text": "model in Spring framework 5.2 which is already available uh which is what I'm using here I'm gonna I'm gonna take my existing greeting service ever so",
    "start": "2772240",
    "end": "2778420"
  },
  {
    "text": "quickly I'm going to turn it into an R socket endpoint I'll say at message mapping greetings",
    "start": "2778420",
    "end": "2784180"
  },
  {
    "text": "okay and there we go now in order to make this a an R socket server I'm going",
    "start": "2784180",
    "end": "2789520"
  },
  {
    "text": "to spin up in our socket server on Port 888 that's good luck in China so that's kind of nice",
    "start": "2789520",
    "end": "2794560"
  },
  {
    "text": "um and uh we're gonna go ahead and restart the application and then very quickly ever so quickly I'm going to go back to start.spring.io the second",
    "start": "2794560",
    "end": "2800920"
  },
  {
    "text": "favorite place on the internet I'm going to build a client reservation hyphen client okay and I'm gonna use the right",
    "start": "2800920",
    "end": "2808180"
  },
  {
    "text": "version of java and I'm gonna bring in our socket uh and I think the reactive web support just so",
    "start": "2808180",
    "end": "2814480"
  },
  {
    "text": "I don't have to create something that keeps the port open uh and there we go and we're going to create a simple client that connects to that service and",
    "start": "2814480",
    "end": "2821200"
  },
  {
    "text": "then consumes the never-ending greetings stream of data okay reservationclient.zip",
    "start": "2821200",
    "end": "2827079"
  },
  {
    "text": "okay good stuff Presto chango download reservation client application",
    "start": "2827079",
    "end": "2833380"
  },
  {
    "text": "and all we're going to do all we're going to do is we're going to start up an application that runs on a separate Port so we don't have a conflict so who",
    "start": "2833380",
    "end": "2839680"
  },
  {
    "text": "cares about the I don't care about the HTTP service I'm just creating that to keep the thread open and then I'm going to create a bean that's going to be a",
    "start": "2839680",
    "end": "2846220"
  },
  {
    "text": "I'm sorry I'm going to create an application listener just like I did before so class R socket uh you know",
    "start": "2846220",
    "end": "2853000"
  },
  {
    "text": "greetings client thing whatever and I'm going to say hey this is a thing that listens for",
    "start": "2853000",
    "end": "2859900"
  },
  {
    "text": "the application ready event just as before so when the application is ready to start processing I'll get a call back",
    "start": "2859900",
    "end": "2865780"
  },
  {
    "text": "here and when I do that I am going to take advantage of a r socket requester",
    "start": "2865780",
    "end": "2872319"
  },
  {
    "text": "so I'm going to say Bean our socket requester",
    "start": "2872319",
    "end": "2877960"
  },
  {
    "text": "okay and it's going to be in our socket requester this is the thing you use to call the r socket service so you create",
    "start": "2877960",
    "end": "2884680"
  },
  {
    "text": "a connection here localhost Port 888 that's what we said right block good and",
    "start": "2884680",
    "end": "2890500"
  },
  {
    "text": "I'm going to inject that that collaborating R socket requester here into the Constructor as before I'll use",
    "start": "2890500",
    "end": "2896920"
  },
  {
    "text": "lumbuck oh I don't have lombok oh sad sad so sad so we're gonna go back here",
    "start": "2896920",
    "end": "2903160"
  },
  {
    "text": "to the build this is the service I'm going to find lumbuck there it is I'm gonna copy and paste this back to the other thing paste it in here good stuff",
    "start": "2903160",
    "end": "2911140"
  },
  {
    "text": "look at that okay now I'm gonna make a call to the other service",
    "start": "2911140",
    "end": "2916359"
  },
  {
    "text": "at required RX Constructor there we go good now what I want to do is I want to use that thing to call this the other",
    "start": "2916359",
    "end": "2922780"
  },
  {
    "text": "service and get the data that comes over the wire and turn it back into Data that I can use but I don't have any",
    "start": "2922780",
    "end": "2927880"
  },
  {
    "text": "client-side representation of these types on my local machine so what I need to do is I need to do something terrible something that you should never ever do",
    "start": "2927880",
    "end": "2934000"
  },
  {
    "text": "ever not even when you're all by yourself at home and no one is looking I I'm going to copy and paste code now",
    "start": "2934000",
    "end": "2940480"
  },
  {
    "text": "I've got my greetings response my greetings request detail types here I'm going to paste them into the client here",
    "start": "2940480",
    "end": "2946839"
  },
  {
    "text": "we are and we're just going to say hey new greetings request and I'm going to say I let's say",
    "start": "2946839",
    "end": "2953380"
  },
  {
    "text": "Brisbane sure okay and as the data comes back we're going to say uh greens we want each one to be a greens response",
    "start": "2953380",
    "end": "2959500"
  },
  {
    "text": "and we're going to then map through it or log you know subscribe to each one uh and I'm just going to say system out",
    "start": "2959500",
    "end": "2967200"
  },
  {
    "text": "print line okay let's see if that does the trick good stuff let's start it up",
    "start": "2967240",
    "end": "2972700"
  },
  {
    "text": "I'll take some coffee",
    "start": "2972700",
    "end": "2975660"
  },
  {
    "text": "good stuff look at that so now we've got on the console our client our thing is",
    "start": "2977740",
    "end": "2983260"
  },
  {
    "text": "calling the r socket Services communicating over the wire using seaboor cbor which is the way we're",
    "start": "2983260",
    "end": "2989079"
  },
  {
    "text": "encoding data in this case but it's payload agnostic it doesn't matter and it's getting the data back and it's natively reactive on the wire it doesn't",
    "start": "2989079",
    "end": "2995020"
  },
  {
    "text": "matter it doesn't actually you know it's not this is not problematic I can keep doing this as long as I want and it's end to end reactive and there's some",
    "start": "2995020",
    "end": "3001380"
  },
  {
    "text": "really nice properties here if I make a call to a downstream service and I want to and I want to resume later on I can just stop request I can just stop",
    "start": "3001380",
    "end": "3007020"
  },
  {
    "text": "subscribing right now that doesn't mean I've canceled it like like it would with HTTP because you can only get one shot",
    "start": "3007020",
    "end": "3012599"
  },
  {
    "text": "at the uh the apple with HTTP right with this you can just stop for now and then resume a little bit later",
    "start": "3012599",
    "end": "3017940"
  },
  {
    "text": "um I have really interesting you know production oriented characteristics about R socket one of them is that",
    "start": "3017940",
    "end": "3023760"
  },
  {
    "text": "there's a payload there's a message frame in the protocol itself that allows you to say hey I'm busy my service is",
    "start": "3023760",
    "end": "3029460"
  },
  {
    "text": "not healthy right now you should talk to somebody else this gives you some very interesting load balancing opportunities right so I think this is there's some",
    "start": "3029460",
    "end": "3035819"
  },
  {
    "text": "very big opportunities here we've got so spring Cloud Gateway which integrates this and does all sorts of good stuff as well we've got security Spring Security",
    "start": "3035819",
    "end": "3042060"
  },
  {
    "text": "for our socket as well all sorts of different opportunities here I mentioned that this technology had come out of",
    "start": "3042060",
    "end": "3047460"
  },
  {
    "text": "some very you know it was the work of some very smart people very very interesting companies uh there's some other companies I talked to a lot of",
    "start": "3047460",
    "end": "3053160"
  },
  {
    "text": "different companies all around the planet about spring and spring Boot and nowadays reactive and even more so our",
    "start": "3053160",
    "end": "3058740"
  },
  {
    "text": "socket and so in March um you know there's a small company in China called Alibaba anybody here know",
    "start": "3058740",
    "end": "3063839"
  },
  {
    "text": "of Alibaba they're a small company I believe they're going to be big I believe they're going to be big you just mark my words they've got they've got a",
    "start": "3063839",
    "end": "3069300"
  },
  {
    "text": "future uh in them in March they invited me as they do every year to come hang out with him and this time I spoke at",
    "start": "3069300",
    "end": "3075540"
  },
  {
    "text": "their Alibaba internal r d Summit and I gave them the big sort of introduction to our socket right this organization is",
    "start": "3075540",
    "end": "3082800"
  },
  {
    "text": "all spring everything has been spring for the last 15 years right it's all spring increasingly a lot of it's now spring Boot and spring cloud and",
    "start": "3082800",
    "end": "3088740"
  },
  {
    "text": "increasingly a lot of it's now reactive and now increasingly it's our second so pivotal netify and uh and Alibaba were",
    "start": "3088740",
    "end": "3096000"
  },
  {
    "text": "the first we founded this organization called the reactive foundation and uh the First Technology there was our",
    "start": "3096000",
    "end": "3101640"
  },
  {
    "text": "socket right lots of interesting opportunities there um I hope you learned something today who had fun who had fun I'm just curious",
    "start": "3101640",
    "end": "3108720"
  },
  {
    "text": "who had fun who learned something new good stuff good stuff I had fun obviously I love this stuff I'm wearing",
    "start": "3108720",
    "end": "3115319"
  },
  {
    "text": "the spring t-shirt and the spring underwear obviously big fan big fan I love what we're talking about here I love the opportunities and I hope you do",
    "start": "3115319",
    "end": "3121559"
  },
  {
    "text": "too as well my friends thank you so much for coming have fun please vote cheers oh",
    "start": "3121559",
    "end": "3128460"
  },
  {
    "text": "you know thank Josh my email my direct messages are wide",
    "start": "3132300",
    "end": "3138960"
  },
  {
    "text": "open just send me a message thank you",
    "start": "3138960",
    "end": "3143540"
  }
]