[
  {
    "start": "0",
    "end": "100000"
  },
  {
    "text": "so good morning everyone and welcome to this session on socio technical smells today we are going to explore",
    "start": "12120",
    "end": "19320"
  },
  {
    "text": "five different socio technical smells as well as their resolutions and the kind of underlying",
    "start": "19320",
    "end": "25240"
  },
  {
    "text": "theme Here is that seemingly hard organizational problems can be improved via",
    "start": "25240",
    "end": "30519"
  },
  {
    "text": "refactoring and code improvements and I like us to start by exploring why software is",
    "start": "30519",
    "end": "39239"
  },
  {
    "text": "hard so please have a look at this piece of code it's 19 lines of code who can",
    "start": "40480",
    "end": "46680"
  },
  {
    "text": "tell me what this code does who can tell me if this code is correct I have to admit that I mean I've",
    "start": "46680",
    "end": "53960"
  },
  {
    "text": "been coding for more than three decades now and I find it really hard to understand what this code does and still",
    "start": "53960",
    "end": "60719"
  },
  {
    "text": "it's only 19 lines of code a modern system looks very much like this where",
    "start": "60719",
    "end": "66760"
  },
  {
    "text": "we have hundreds of thousands maybe even million lines of code that looks like that so I like to claim that a modern",
    "start": "66760",
    "end": "74200"
  },
  {
    "text": "system cannot outscale the human brain and our cognitive capabilities adding to that challenge",
    "start": "74200",
    "end": "81200"
  },
  {
    "text": "our modern system is also a moving Target because we have tens maybe even",
    "start": "81200",
    "end": "86240"
  },
  {
    "text": "hundreds of developers working on that system right so it kind of changes all the",
    "start": "86240",
    "end": "91280"
  },
  {
    "text": "time and this is the challenge we're going to try to pick up today how can we gain insights into what actually happens",
    "start": "91280",
    "end": "97280"
  },
  {
    "text": "in these systems and the first socio technical smell we're going to discover is",
    "start": "97280",
    "end": "103040"
  },
  {
    "start": "100000",
    "end": "538000"
  },
  {
    "text": "something I called the overcrowded system and this is something I",
    "start": "103040",
    "end": "108560"
  },
  {
    "text": "unfortunately have a firsthand experience with so let me tell you a story about the Death",
    "start": "108560",
    "end": "115240"
  },
  {
    "text": "March and by the way this is the book I always wish that I could write",
    "start": "115240",
    "end": "121840"
  },
  {
    "text": "now what happened here was that it was a couple of years ago I did some work for a large Product Company and this company",
    "start": "122039",
    "end": "128879"
  },
  {
    "text": "they had a project that been going on for two years it was a critical project and unfortunately they had missed",
    "start": "128879",
    "end": "135400"
  },
  {
    "text": "deadline of the deadline and now the situation was critical so I was called into a",
    "start": "135400",
    "end": "141400"
  },
  {
    "text": "management meeting and they asked me is there any chance you could take a look at this project and see if you can rescue it because uh we have our",
    "start": "141400",
    "end": "150000"
  },
  {
    "text": "deadline in three months and if we miss that one the company will be subjected to some pretty heavy fines right so it",
    "start": "150000",
    "end": "155879"
  },
  {
    "text": "would be really expensive and I said yeah sure I can take a look at it and they said yeah and",
    "start": "155879",
    "end": "161720"
  },
  {
    "text": "you know feel free to do whatever you have to do so I said Okay cool so me and my colleagues start to investigate the",
    "start": "161720",
    "end": "167800"
  },
  {
    "text": "ongoing projects start to investigate the code base and after a while we went back to management and we said that you",
    "start": "167800",
    "end": "174480"
  },
  {
    "text": "know we actually have some good news we think we can deliver this in the next",
    "start": "174480",
    "end": "179879"
  },
  {
    "text": "next three months and they were really relieved as you can imagine right so they said",
    "start": "179879",
    "end": "185360"
  },
  {
    "text": "that's great news and we said yeah indeed however you're not going to like",
    "start": "185360",
    "end": "190519"
  },
  {
    "text": "what we're going to do because what we're going to do is that we're going to take all that code that's been developed for two years and",
    "start": "190519",
    "end": "197120"
  },
  {
    "text": "we're going to throw it out so this was code developed by 25 people over two years and we're going to throw it out",
    "start": "197120",
    "end": "203120"
  },
  {
    "text": "and we're going to start from scratch after they recovered from that shock we tried to explain that you no",
    "start": "203120",
    "end": "210519"
  },
  {
    "text": "it's I mean it's not like we're starting completely from scratch right because that existing system can serve as our",
    "start": "210519",
    "end": "216280"
  },
  {
    "text": "prototype after all it was pretty successful in exploring the edge cases and where the hard parts are right so",
    "start": "216280",
    "end": "222120"
  },
  {
    "text": "we're going to learn from that and feed that learning into the new version we're building so they somehow bked that right",
    "start": "222120",
    "end": "229840"
  },
  {
    "text": "to some extent and they to this day I'm still surprised that they gave us the go-ahead but they did and then they",
    "start": "229840",
    "end": "235959"
  },
  {
    "text": "asked okay so how many additional people are going to need right and I said uh",
    "start": "235959",
    "end": "242640"
  },
  {
    "text": "five so they said okay so you want to go from 25 to 30 people yeah that's doable said no no no you're misunderstanding me",
    "start": "242640",
    "end": "249480"
  },
  {
    "text": "we want to be five people in total and the reason we could say that with confidence was because both me and",
    "start": "249480",
    "end": "256120"
  },
  {
    "text": "my colleague have read the mythal man month and the mythal man month is best",
    "start": "256120",
    "end": "261400"
  },
  {
    "text": "known for what we today call Brook's law that adding people to late software",
    "start": "261400",
    "end": "266479"
  },
  {
    "text": "project makes it even later and this is one of my all-time favorite",
    "start": "266479",
    "end": "272440"
  },
  {
    "text": "books it's an absolutely great read and I highly recommend it and what I like",
    "start": "272440",
    "end": "277600"
  },
  {
    "text": "about it is that Brooks the author he also includes a formula that I have plotted to you here that explains why",
    "start": "277600",
    "end": "284320"
  },
  {
    "text": "this happens so what you see here is that on the x-axis you have a number of people",
    "start": "284320",
    "end": "289600"
  },
  {
    "text": "on the project right number of people you can add to a project and on the Y AIS you have the number of months until",
    "start": "289600",
    "end": "296240"
  },
  {
    "text": "completion and what you see here is that to a certain degree we can add a few people right and we get a quicker",
    "start": "296240",
    "end": "301800"
  },
  {
    "text": "completion datee a faster completion date that's good however there's also some kind of Turning Point and beyond",
    "start": "301800",
    "end": "308400"
  },
  {
    "text": "that point we can see from this curve that each additional individual that we add becomes a net loss leading to a",
    "start": "308400",
    "end": "314759"
  },
  {
    "text": "longer completion time and this is might be a little bit surprising but what it's all about is",
    "start": "314759",
    "end": "322280"
  },
  {
    "text": "that you know each individual increases the coordination and communication costs",
    "start": "322280",
    "end": "328280"
  },
  {
    "text": "and at some point the increase that increase in coordination communication is you know simply going to outrate all",
    "start": "328280",
    "end": "336560"
  },
  {
    "text": "those extra hours we get available and then some so that's why we fall into this",
    "start": "336560",
    "end": "341600"
  },
  {
    "text": "trap when that happens there are really just two things we can do the first and uh perhaps the simplest",
    "start": "341600",
    "end": "349479"
  },
  {
    "text": "Choice the one we choose for this project I told you about was the kind of recope right to kind of shrink the",
    "start": "349479",
    "end": "355600"
  },
  {
    "text": "organization to fit the size of the software system so that's what we did when we went from 25 people to just",
    "start": "355600",
    "end": "363600"
  },
  {
    "text": "five the other option is really to go back to a drawing board redesign and re",
    "start": "363600",
    "end": "369360"
  },
  {
    "text": "architect so that our system can accommodate more people and this is much",
    "start": "369360",
    "end": "374560"
  },
  {
    "text": "much harder and this is something that we're going to look into throughout the rest of this",
    "start": "374560",
    "end": "379720"
  },
  {
    "text": "session before I go there maybe you're curious how it went with that project",
    "start": "379720",
    "end": "385160"
  },
  {
    "text": "did we really ship in three months how many of you think we managed to put P that",
    "start": "385160",
    "end": "390520"
  },
  {
    "text": "off seems to be a minority yeah good of course otherwise I wouldn't be telling you about it right but in fact we didn't",
    "start": "390520",
    "end": "397440"
  },
  {
    "text": "ship in three months we only needed two and a half and what's so fascinating about",
    "start": "397440",
    "end": "403440"
  },
  {
    "text": "this and the reason I tell you this story is because it kind of indicates the amount of waste we create when we fail to pay attention to our soot",
    "start": "403440",
    "end": "410160"
  },
  {
    "text": "technical fit and I've been thinking about this ever since I mean the mythal",
    "start": "410160",
    "end": "415840"
  },
  {
    "text": "manm the book it was published in 1975 and it's tells you know lessons from a",
    "start": "415840",
    "end": "421960"
  },
  {
    "text": "project developed in 1960s so why do we keep repeating these same mistakes I mean the story I told",
    "start": "421960",
    "end": "428720"
  },
  {
    "text": "you about it might be an extreme case but I see it almost on a weekly basis in various companies that we to some degree",
    "start": "428720",
    "end": "434879"
  },
  {
    "text": "fall for Brook's law so why are we doing that I think I have an explanation that",
    "start": "434879",
    "end": "441560"
  },
  {
    "text": "I like to test on you so please have a look at the following piece of",
    "start": "441560",
    "end": "447400"
  },
  {
    "text": "code who can tell me if this code is a major coordination ball neck for our",
    "start": "447400",
    "end": "452560"
  },
  {
    "text": "five different feature teams or if this code is all developed by one",
    "start": "452560",
    "end": "458800"
  },
  {
    "text": "person no one of course you cannot tell and the reason you cannot tell is",
    "start": "458800",
    "end": "463919"
  },
  {
    "text": "something I like to call the Grand tragedy of software design that we the people that build the system were",
    "start": "463919",
    "end": "470199"
  },
  {
    "text": "invisible in the code itself a piece of code simply doesn't reveal anything at all about its socio",
    "start": "470199",
    "end": "477000"
  },
  {
    "text": "technical context yet it's such a vital piece of information so how can we get",
    "start": "477000",
    "end": "482599"
  },
  {
    "text": "that information that's the very purpose of a set of analysis techniques known as",
    "start": "482599",
    "end": "488159"
  },
  {
    "text": "behavioral code analysis so how many of you are familiar with behavioral code",
    "start": "488159",
    "end": "494720"
  },
  {
    "text": "analysis it's like okay maybe 20% of you good good so a behavior code",
    "start": "494720",
    "end": "501800"
  },
  {
    "text": "analysis is a little bit different because in a behavioral code analysis the code itself the way it looks you",
    "start": "501800",
    "end": "507039"
  },
  {
    "text": "know if it's uh easy to read low on comp lexity all that stuff it is important it",
    "start": "507039",
    "end": "512680"
  },
  {
    "text": "really really is but it's even more important to understand how we as an",
    "start": "512680",
    "end": "518680"
  },
  {
    "text": "organization interact with the code and system we're building so that's the main piece of information in behavioral code",
    "start": "518680",
    "end": "525720"
  },
  {
    "text": "analysis and we're going to see several examples on behavioral code analysis during this session and I'm going to",
    "start": "525720",
    "end": "532480"
  },
  {
    "text": "show you what type of data I use for that and the first example I want to",
    "start": "532480",
    "end": "537600"
  },
  {
    "text": "give you is about another social technical smell it's about coordination B necks in",
    "start": "537600",
    "end": "543800"
  },
  {
    "start": "538000",
    "end": "1264000"
  },
  {
    "text": "code so let's have a look at that I started out by showing you a",
    "start": "543800",
    "end": "550000"
  },
  {
    "text": "small piece of code let's now look at an architecture so this is like my generic software",
    "start": "550000",
    "end": "556600"
  },
  {
    "text": "architecture this is what like 90% of all business applications look like right so we have a bunch of boxes",
    "start": "556600",
    "end": "563200"
  },
  {
    "text": "representing subsystems or maybe even services and then we have a couple of different uh data sources",
    "start": "563200",
    "end": "571079"
  },
  {
    "text": "and of course we have various clients right so we might have mobile clients Android iOS and so on uh web clients we",
    "start": "571079",
    "end": "578360"
  },
  {
    "text": "might communicate with other systems we are rest and so on and already here I",
    "start": "578360",
    "end": "583480"
  },
  {
    "text": "would like to claim that it's virtually impossible for human brain to grasp all the details and we really don't do that what",
    "start": "583480",
    "end": "591519"
  },
  {
    "text": "we do instead of grasping all the details is that we use something called mental",
    "start": "591519",
    "end": "596560"
  },
  {
    "text": "models so as a programmer we very rarely remember a particular piece of code line",
    "start": "596560",
    "end": "602720"
  },
  {
    "text": "by line right instead we have an abstraction in our head on simplification that allows us to reason",
    "start": "602720",
    "end": "609399"
  },
  {
    "text": "about something as complicated as code we have a mental model representing that",
    "start": "609399",
    "end": "614600"
  },
  {
    "text": "code now mental models they are prerequisite to reason about something as complex as a large system but mental",
    "start": "614600",
    "end": "622079"
  },
  {
    "text": "models are also sensible because the more developers work in a piece of code",
    "start": "622079",
    "end": "628120"
  },
  {
    "text": "the harder it becomes to maintain a stable mental model and this is something I would like",
    "start": "628120",
    "end": "633760"
  },
  {
    "text": "to show to you so let's pretend that you write a piece of code yourself",
    "start": "633760",
    "end": "640279"
  },
  {
    "text": "today five days later you look at that code again and now you see that seven other developers have been working on",
    "start": "640279",
    "end": "645680"
  },
  {
    "text": "that code in the meantime right so your original mental model is now outdated",
    "start": "645680",
    "end": "651000"
  },
  {
    "text": "and you need to spend time kind of rebuilding it and which is wasteful and",
    "start": "651000",
    "end": "656160"
  },
  {
    "text": "can be painful and if this is something that can continuous uh week after week",
    "start": "656160",
    "end": "662200"
  },
  {
    "text": "then um you're basically going to be in a constant onboarding mode or you're going to go to a code and",
    "start": "662200",
    "end": "668920"
  },
  {
    "text": "you're going to make changes to it based on an outdated mental model and that's one of the reasons why there is this",
    "start": "668920",
    "end": "675160"
  },
  {
    "text": "strong correlation between access coordination as seen in the code and software",
    "start": "675160",
    "end": "681720"
  },
  {
    "text": "defects so if we have an important barrier standing between us and our",
    "start": "681720",
    "end": "686920"
  },
  {
    "text": "healthy sustainable codebase like a coordination needs en code we should watch out for them so how can we do",
    "start": "686920",
    "end": "694839"
  },
  {
    "text": "that well there's a behavior code analysist that just does that and to do",
    "start": "694839",
    "end": "702120"
  },
  {
    "text": "a behavioral code analysis we obviously need some behavioral data and this is data that we can fetch from our git logs",
    "start": "702120",
    "end": "709240"
  },
  {
    "text": "so here's a simple example so if we're after coordination needs in code and you know excess number of offers work in a",
    "start": "709240",
    "end": "716200"
  },
  {
    "text": "piece of code what we do here is simply we SK scan our git Repository story and for each file that we find we look at",
    "start": "716200",
    "end": "722160"
  },
  {
    "text": "okay how many people have been contributing to this file over a given time period you know typically like",
    "start": "722160",
    "end": "727480"
  },
  {
    "text": "three months on some projects we might go even further back and look at the whole",
    "start": "727480",
    "end": "732720"
  },
  {
    "text": "year and these type of get analytics they are like you know they're really",
    "start": "732720",
    "end": "737880"
  },
  {
    "text": "crying out for automation so you can use some simple command line tools so this",
    "start": "737880",
    "end": "743320"
  },
  {
    "text": "is a tool Suite that I open sourced a decade ago it's called Cod matat and you can just point it to git log and it will",
    "start": "743320",
    "end": "750120"
  },
  {
    "text": "calculate a table field like this so looking at that table I see that",
    "start": "750120",
    "end": "755560"
  },
  {
    "text": "on this particular system the number one potential coronation ball NE seems to be in the build system because I see this",
    "start": "755560",
    "end": "761920"
  },
  {
    "text": "Builder file right has been modified by 1 offers in know period of just three months so it looks like a very crowded",
    "start": "761920",
    "end": "768959"
  },
  {
    "text": "place so getting statistics like that is a good starting point but it also makes",
    "start": "768959",
    "end": "775399"
  },
  {
    "text": "it a little bit hard to spot patterns from a tabular representation so what I tend to do is to visualize",
    "start": "775399",
    "end": "782199"
  },
  {
    "text": "things so let's look at a visualization of coordination needs and now I have um",
    "start": "782199",
    "end": "788320"
  },
  {
    "text": "picked up another code base this is folly or modern C++ library from Facebook right and there's really",
    "start": "788320",
    "end": "795760"
  },
  {
    "text": "nothing special about F in this case I just want something that's a little bit larger and in general I'm a big big fan",
    "start": "795760",
    "end": "802959"
  },
  {
    "text": "of visualizing things because by visualizing things we tap into one of the most powerful pattern detectors",
    "start": "802959",
    "end": "809399"
  },
  {
    "text": "there is in the known universe the human brain so let's see what we can learn",
    "start": "809399",
    "end": "815160"
  },
  {
    "text": "from visualizing corination bolog the way you read this visualization you know if you have seen",
    "start": "815160",
    "end": "821519"
  },
  {
    "text": "uh my previous talks you're probably familiar with the style is something called inclosure diagrams and the way",
    "start": "821519",
    "end": "826920"
  },
  {
    "text": "you read it is that each one of these large circles that I'm point to here they represent the top level folder in",
    "start": "826920",
    "end": "833519"
  },
  {
    "text": "your git repository and inside those folders",
    "start": "833519",
    "end": "839240"
  },
  {
    "text": "right if this was your code base your the names of those folders would be typically be important subsystems or",
    "start": "839240",
    "end": "844440"
  },
  {
    "text": "high level mod modules or maybe even services and then at the lowest level of detail we see that each file with source",
    "start": "844440",
    "end": "851240"
  },
  {
    "text": "code is V visualized as a circle too a colored Circle and the size of the",
    "start": "851240",
    "end": "856279"
  },
  {
    "text": "circle just reflects how many lines of code you have in the file that you visualize the important aspect here is",
    "start": "856279",
    "end": "862720"
  },
  {
    "text": "the color because the color reflects the offer density right so the more people",
    "start": "862720",
    "end": "868639"
  },
  {
    "text": "work in the piece of code the more red it becomes perfect now that we know how to",
    "start": "868639",
    "end": "875040"
  },
  {
    "text": "read that visualization we're ready to see what we can learn so looking at F",
    "start": "875040",
    "end": "880800"
  },
  {
    "text": "here I like to think that you know the package to the left really really pops out so this is something about async",
    "start": "880800",
    "end": "887959"
  },
  {
    "text": "socket programming right it seems to be I have a very high offer density so let's zoom in on",
    "start": "887959",
    "end": "894440"
  },
  {
    "text": "it when we do that we see that these files have been modified by 58 people",
    "start": "894440",
    "end": "900880"
  },
  {
    "text": "and this is over the past year so 58 people over one year that basically",
    "start": "900880",
    "end": "906480"
  },
  {
    "text": "means that each week you know there's a new developer coming into that code how should you possibly maintain a",
    "start": "906480",
    "end": "912600"
  },
  {
    "text": "stabal model of that code right so when I find something like that",
    "start": "912600",
    "end": "918320"
  },
  {
    "text": "that worries me I always try to dig into it and try to understand the root cause and when it comes to coordinations in",
    "start": "918320",
    "end": "924399"
  },
  {
    "text": "code more often than not the root cause is technical so so let's pick up this",
    "start": "924399",
    "end": "930120"
  },
  {
    "text": "piece of code so this is a small snippet from fly",
    "start": "930120",
    "end": "935199"
  },
  {
    "text": "and I do respect that a lot of people here reading C++ on a Tuesday Morning might not really be your thing right but",
    "start": "935199",
    "end": "943079"
  },
  {
    "text": "don't worry you don't really need to know much about C++ because there are always a couple of patterns that we can",
    "start": "943079",
    "end": "949160"
  },
  {
    "text": "look for so what I typically do is that I skip out the details and look at the patterns and one pattern that always",
    "start": "949160",
    "end": "956399"
  },
  {
    "text": "worries me is this one well you know you have a a special case right the conditional",
    "start": "956399",
    "end": "961600"
  },
  {
    "text": "statement and below it there's a long explanation in a code comment nine times out of 10 this is a",
    "start": "961600",
    "end": "969279"
  },
  {
    "text": "clear sign that what you have here is a separate responsibility right that we should have extracted into a function or",
    "start": "969279",
    "end": "976120"
  },
  {
    "text": "maybe even a class and put a good name on it so that we can reason about it right so there seems to be too many",
    "start": "976120",
    "end": "981560"
  },
  {
    "text": "responsibilities here the second thing that wores me high level are these",
    "start": "981560",
    "end": "987000"
  },
  {
    "text": "complexity patterns right because you see there like these blocks of nested complexity sprinkled around the",
    "start": "987000",
    "end": "993839"
  },
  {
    "text": "function this is code that's cognitively challenging right it's hard for the human bra brain to reason about nested",
    "start": "993839",
    "end": "1000839"
  },
  {
    "text": "complexity so when we combine these Cod smells with the fact that what you see here is",
    "start": "1000839",
    "end": "1007040"
  },
  {
    "text": "really just a fragment of the total CLA right the total CLA has like hundreds of functions that look like that then I",
    "start": "1007040",
    "end": "1013600"
  },
  {
    "text": "think it's a fair assessment to say that we have identified a gut class right",
    "start": "1013600",
    "end": "1019560"
  },
  {
    "text": "so how many of you are familiar with the gut class smell right it's like maybe half the audience",
    "start": "1019560",
    "end": "1025558"
  },
  {
    "text": "good so G Clause is basically a theci smell that we used to describe CL for",
    "start": "1025559",
    "end": "1031760"
  },
  {
    "text": "cles which compulsively collect responsibilities and have a complex",
    "start": "1031760",
    "end": "1037480"
  },
  {
    "text": "implementation right and the problem with the god Clause is not only that they're hard to",
    "start": "1037480",
    "end": "1043199"
  },
  {
    "text": "understand it's also that they kind of tend to centralize the behavior of the system in the way that each time I want to make a change somewhere in the system",
    "start": "1043199",
    "end": "1049919"
  },
  {
    "text": "I end up having to modify the gut Clause right and over time they just grow more and more",
    "start": "1049919",
    "end": "1055679"
  },
  {
    "text": "complicated and this is a problem from an architecture perspective right gut classes really are the traffic jams of",
    "start": "1055679",
    "end": "1062720"
  },
  {
    "text": "the software world so what does it mean to a developer",
    "start": "1062720",
    "end": "1069240"
  },
  {
    "text": "organization well it simply means that gut classes they can of act like magnets",
    "start": "1069240",
    "end": "1074320"
  },
  {
    "text": "right so they kind of force programmers potentially working on different team team potentially working on different",
    "start": "1074320",
    "end": "1080400"
  },
  {
    "text": "features into the same class right so this is where you experience um",
    "start": "1080400",
    "end": "1086480"
  },
  {
    "text": "this unexpected feature interactions complex merge conflicts stuff like",
    "start": "1086480",
    "end": "1091960"
  },
  {
    "text": "that so what can we do about God claes once we have identify them we need to",
    "start": "1091960",
    "end": "1099880"
  },
  {
    "text": "act and the kind of fundamental property for being able",
    "start": "1099880",
    "end": "1106640"
  },
  {
    "text": "to scale the people's side of code is cohesion so a gut class is slow on",
    "start": "1106640",
    "end": "1113320"
  },
  {
    "text": "cohesion it has way too many responsibilities and we see that there this is really just one example there are lots of research papers on this that",
    "start": "1113320",
    "end": "1120760"
  },
  {
    "text": "kind of show that you know when we get this excess coordination that the G Class encourage us then we end up with",
    "start": "1120760",
    "end": "1126640"
  },
  {
    "text": "systems that are both uh wasteful and fragile so what can we do to improve the",
    "start": "1126640",
    "end": "1134240"
  },
  {
    "text": "situation let me show you an example",
    "start": "1134240",
    "end": "1139240"
  },
  {
    "text": "so far I have been torturing our C++ code base right so I think it's only fair that we pick up Java right let's do",
    "start": "1139600",
    "end": "1148360"
  },
  {
    "text": "that so this is a Java code base hibernate it's an object relational",
    "start": "1148360",
    "end": "1154440"
  },
  {
    "text": "mapper one of these lovely things right that were quite popular like a decade ago and I've identified a god class in",
    "start": "1154440",
    "end": "1161400"
  },
  {
    "text": "hibernate here it's a god class called abstract entity persister but let me assure you there's",
    "start": "1161400",
    "end": "1168080"
  },
  {
    "text": "absolutely nothing nothing abstract about this class right it's a massive class in fact it contains 380 methods",
    "start": "1168080",
    "end": "1177400"
  },
  {
    "text": "right there's a lot of really really complex logic in there so it's I I like",
    "start": "1177400",
    "end": "1182520"
  },
  {
    "text": "to think that if you just look at this list of method names we see that I mean the method names are kind of like all",
    "start": "1182520",
    "end": "1187600"
  },
  {
    "text": "over the place right so there seems to be multiple responsibilities going on here so what do we do in this",
    "start": "1187600",
    "end": "1193679"
  },
  {
    "text": "situation well what the first step is of course to identify the",
    "start": "1193679",
    "end": "1199720"
  },
  {
    "text": "the various responsibilities of that class right so I tend to start by just kind you know moving methods around and",
    "start": "1199720",
    "end": "1206280"
  },
  {
    "text": "trying to group them inside a class according to responsibility and once I've done that what I tend to do is I",
    "start": "1206280",
    "end": "1212039"
  },
  {
    "text": "tend to extract them try to put a good name on them that kind of describes that behavior so I go from having a large gut",
    "start": "1212039",
    "end": "1218840"
  },
  {
    "text": "Clause into having smaller closets each one a little bit more",
    "start": "1218840",
    "end": "1224159"
  },
  {
    "text": "cohesive and of course this increased modularity makes it easier to reason about the code makes it easier to",
    "start": "1224159",
    "end": "1230320"
  },
  {
    "text": "maintain it because let's say I'm working on the life cycle aspect right now there's a natural place for me to",
    "start": "1230320",
    "end": "1236000"
  },
  {
    "text": "look for any Behavior related to life cycle right so it helps the readability",
    "start": "1236000",
    "end": "1241120"
  },
  {
    "text": "but there's much more to it because from a social perspective what we do with the",
    "start": "1241120",
    "end": "1246720"
  },
  {
    "text": "highly cohesive design is that we create natural boundaries for developers working on unrelated aspects right so I",
    "start": "1246720",
    "end": "1253080"
  },
  {
    "text": "can increase the amount of parallelization the amount of work in parallel I can do so so cohesion really",
    "start": "1253080",
    "end": "1259640"
  },
  {
    "text": "is a fundamental property for minimizing coordination in code now that was coordination inside",
    "start": "1259640",
    "end": "1268039"
  },
  {
    "start": "1264000",
    "end": "1902000"
  },
  {
    "text": "the same Clause but a potentially even more interesting aspect is inter module",
    "start": "1268039",
    "end": "1273440"
  },
  {
    "text": "coordination right so let's talk about dependencies and the cost of",
    "start": "1273440",
    "end": "1281200"
  },
  {
    "text": "change and I like to start with this statement that to me not all dependencies are equal what do I mean by",
    "start": "1281200",
    "end": "1288159"
  },
  {
    "text": "that well what I mean about that is that most of the time when we talk about dependencies what we talk about is the",
    "start": "1288159",
    "end": "1293880"
  },
  {
    "text": "stuff we can see in our code right so I have a piece of code here uses some code over here they kind of depend upon each",
    "start": "1293880",
    "end": "1300279"
  },
  {
    "text": "other and I like to claim that if we kind of restrict ourselves to this static view of dependencies that we see",
    "start": "1300279",
    "end": "1306360"
  },
  {
    "text": "in the code then uh we will miss out on two important aspects the first thing we're going to",
    "start": "1306360",
    "end": "1312760"
  },
  {
    "text": "miss out on is that the most interesting dependencies tend to be invisible in the code because those dependencies tend to",
    "start": "1312760",
    "end": "1319400"
  },
  {
    "text": "be logical rather than physical to give you an example let's say you have uh two Services here right",
    "start": "1319400",
    "end": "1326559"
  },
  {
    "text": "they are tightly coupled but of course you cannot see that in the code because they kind of communicate VI an asynchronous message bu right that's the",
    "start": "1326559",
    "end": "1334400"
  },
  {
    "text": "kind of information we want to have second if we just look at the code",
    "start": "1334400",
    "end": "1340039"
  },
  {
    "text": "our data isn't going to be particular actionable and the reason I say that is because most dependency analyzes they",
    "start": "1340039",
    "end": "1345760"
  },
  {
    "text": "kind of come out like this right and the reason is is because any non-trivial system simply have so many",
    "start": "1345760",
    "end": "1352240"
  },
  {
    "text": "dependencies and some of these dependencies are expected they are exactly what we want right so we would",
    "start": "1352240",
    "end": "1358799"
  },
  {
    "text": "somehow need a way to separate the good from the bad dependencies so we can focus our attention where it's likely to",
    "start": "1358799",
    "end": "1364559"
  },
  {
    "text": "be needed the most so let's revisit dependencies",
    "start": "1364559",
    "end": "1371000"
  },
  {
    "text": "through the lens of cohesion and let's in particular talk about package cohesion and when it comes to package",
    "start": "1371000",
    "end": "1377760"
  },
  {
    "text": "cohesion I want to show you two contrasting examples here so in the first sketch here I see that I have two",
    "start": "1377760",
    "end": "1384440"
  },
  {
    "text": "packages and I see that the dependencies between them seems to be well managed right so that is like one clear entry",
    "start": "1384440",
    "end": "1390840"
  },
  {
    "text": "point to each one of the packages right and those are the only dependencies we allow here also see that inside the",
    "start": "1390840",
    "end": "1397000"
  },
  {
    "text": "package I see that the various elements they kind of seem to be connected so that's a good thing they kind of",
    "start": "1397000",
    "end": "1402120"
  },
  {
    "text": "indicates that yeah everything in that package kind of belongs together so this is like the design I would like to see",
    "start": "1402120",
    "end": "1409840"
  },
  {
    "text": "contrast that with done design with low cohesion right here we see that we have",
    "start": "1409840",
    "end": "1415600"
  },
  {
    "text": "this this web of unmanaged dependencies right that kind of go all over the place",
    "start": "1415600",
    "end": "1421240"
  },
  {
    "text": "but basically everything in one package is connected to everything in another package and not only is this going to be",
    "start": "1421240",
    "end": "1427880"
  },
  {
    "text": "really painful to work on it's also going to be really really painful to um",
    "start": "1427880",
    "end": "1433200"
  },
  {
    "text": "do any amount of work in parallel there right because change is going to Ripple over modular boundaries",
    "start": "1433200",
    "end": "1440440"
  },
  {
    "text": "so how can we identify and visualize those type of dependencies well let's first take a",
    "start": "1440840",
    "end": "1448720"
  },
  {
    "text": "step back and consider a very fundamental fact of code code changes",
    "start": "1448720",
    "end": "1454400"
  },
  {
    "text": "for a reason right we don't just modify code at random I mean if you do we might",
    "start": "1454400",
    "end": "1461600"
  },
  {
    "text": "have bigger problems than cohesion right so what that means is that software",
    "start": "1461600",
    "end": "1468679"
  },
  {
    "text": "architecture is all about making those changes easy be they bug fixes new features or nonfunctional requirements",
    "start": "1468679",
    "end": "1475799"
  },
  {
    "text": "and the big question of course is how well does our software architecture hold up are we working with or against our",
    "start": "1475799",
    "end": "1483399"
  },
  {
    "text": "software architecture so what if what if we could",
    "start": "1483399",
    "end": "1488480"
  },
  {
    "text": "evaluate our actual modification patterns the way our code evolves against the desired patterns as",
    "start": "1488480",
    "end": "1494520"
  },
  {
    "text": "indicated by our soft architecture this is the of another behavioral code analysis technique",
    "start": "1494520",
    "end": "1500919"
  },
  {
    "text": "called shining so shining is about finding patterns in uh",
    "start": "1500919",
    "end": "1508399"
  },
  {
    "text": "files or services or even functions that kind of coevolve over time as defined by",
    "start": "1508399",
    "end": "1513919"
  },
  {
    "text": "various commits so I'm going to show you a simpler view of",
    "start": "1513919",
    "end": "1520480"
  },
  {
    "text": "this let's boil it down to a simple system with just four different files",
    "start": "1520480",
    "end": "1526080"
  },
  {
    "text": "right so this is the entire implementation and I see here that when I make a change to the system the first time I'm",
    "start": "1526080",
    "end": "1532320"
  },
  {
    "text": "modifying uh the login module the chess module and the dialup module right",
    "start": "1532320",
    "end": "1537360"
  },
  {
    "text": "that's it the second time I make a commit I'm changing something else but",
    "start": "1537360",
    "end": "1542799"
  },
  {
    "text": "the third commit I'm back to modifying the login module and the chess module together again right so now I start to",
    "start": "1542799",
    "end": "1549600"
  },
  {
    "text": "see a trend and if this is a trend that continues I know that there has to be some kind of logical dependencies",
    "start": "1549600",
    "end": "1555360"
  },
  {
    "text": "between login and chess right because these two modules Cod all the time they are coupled by",
    "start": "1555360",
    "end": "1562960"
  },
  {
    "text": "change and change coupling is something that L us reason about the cost of change and we can also use it to",
    "start": "1562960",
    "end": "1569440"
  },
  {
    "text": "visualize package cohesion and I want to show you an example and of course after",
    "start": "1569440",
    "end": "1574559"
  },
  {
    "text": "going through our C++ and our Java codebase the time has come to CP and",
    "start": "1574559",
    "end": "1581600"
  },
  {
    "text": "net so this is a codebase from Microsoft this is asp.net NVC core right this",
    "start": "1581600",
    "end": "1587799"
  },
  {
    "text": "framework for building Dynamic web applications and it's the same visualization style as you saw before",
    "start": "1587799",
    "end": "1593399"
  },
  {
    "text": "when we talked about coronation only difference is the colors car a different meaning the colors show how healthy that",
    "start": "1593399",
    "end": "1599640"
  },
  {
    "text": "code is right how hard it will be to understand so everything that's green that's good everything that's yellow",
    "start": "1599640",
    "end": "1605919"
  },
  {
    "text": "means that this code is high in complexity but that's not the aspect I want to focus on here what I want to",
    "start": "1605919",
    "end": "1611480"
  },
  {
    "text": "focus on is the coupling so let's zoom in on this package that I hovering over called integration tests",
    "start": "1611480",
    "end": "1619279"
  },
  {
    "text": "and let's reveal the change coupling between those tests so we see that there seems to be",
    "start": "1619279",
    "end": "1626399"
  },
  {
    "text": "some heavy change coupling as indicated by those lines what does that mean well",
    "start": "1626399",
    "end": "1632240"
  },
  {
    "text": "it means that when I make a modification to one of these integration tests I have a predictable change to six seven other",
    "start": "1632240",
    "end": "1640360"
  },
  {
    "text": "tests does that make sense to you no it looks a little bit strange right I would",
    "start": "1640360",
    "end": "1645799"
  },
  {
    "text": "be a little bit worried about this because the consequence for me as an application programmer would be that I",
    "start": "1645799",
    "end": "1651360"
  },
  {
    "text": "make some tweaks to application code and now I have like seven failing test suits that I need to attend to that's painful",
    "start": "1651360",
    "end": "1657080"
  },
  {
    "text": "right so I would use this information to dig into the implementation and see okay is there any aspect that we failed to",
    "start": "1657080",
    "end": "1663559"
  },
  {
    "text": "encapsulate right maybe we copy pasted some test conditions or something like that right that leads to this explosion",
    "start": "1663559",
    "end": "1670000"
  },
  {
    "text": "in change so change Captain can very often help me ask the right questions from the",
    "start": "1670000",
    "end": "1675880"
  },
  {
    "text": "code but looking at it from a package cohesion perspective I see that all right yeah but it might be problematic",
    "start": "1675880",
    "end": "1682200"
  },
  {
    "text": "but at least the coupling is limited to code inside a specific package right so it's it's a local problem and local",
    "start": "1682200",
    "end": "1689640"
  },
  {
    "text": "problems are always better right let me show you another",
    "start": "1689640",
    "end": "1695360"
  },
  {
    "text": "example so this is an endtoend test for that code base and I see that when we",
    "start": "1695360",
    "end": "1701640"
  },
  {
    "text": "make modifications to that end to end test we have a predicted modification to code in three other packages",
    "start": "1701640",
    "end": "1709279"
  },
  {
    "text": "this looks ridiculously expensive and fragile right this is how we can easily seems easily introduce flaky test right",
    "start": "1709279",
    "end": "1716440"
  },
  {
    "text": "because it's hard to remember to update all these tests this looks expensive and these are really just two",
    "start": "1716440",
    "end": "1723399"
  },
  {
    "text": "examples but they kind of indicate an important principle of change coupling that change coupling in itself is",
    "start": "1723399",
    "end": "1730399"
  },
  {
    "text": "neither good nor bad it really just describes the way it is so as such we",
    "start": "1730399",
    "end": "1737000"
  },
  {
    "text": "always need to contexture realiz our change coupling findings and I want to show you the three typical patterns that",
    "start": "1737000",
    "end": "1743039"
  },
  {
    "text": "you're likely to come across when you investigate your own code base so let's look at the first example",
    "start": "1743039",
    "end": "1749840"
  },
  {
    "text": "here so what do I have here well I have two modules that are change coupled but I see that one of them is a unit test",
    "start": "1749840",
    "end": "1756840"
  },
  {
    "text": "and the other one is the codeando test right this is good coupling right this",
    "start": "1756840",
    "end": "1762480"
  },
  {
    "text": "is type of coupling we want because it kind of indicates that our tests are being kept up to date",
    "start": "1762480",
    "end": "1769320"
  },
  {
    "text": "now let's look at a little bit more complex scenario let's look at this",
    "start": "1769320",
    "end": "1774440"
  },
  {
    "text": "one so what do you think about the cing here well this is a model view controller",
    "start": "1774440",
    "end": "1782039"
  },
  {
    "text": "system right an MVC system and we see that each time I change something in the view maybe I add a new button or",
    "start": "1782039",
    "end": "1788200"
  },
  {
    "text": "whatever then I have predictable changes in the models and the controllers",
    "start": "1788200",
    "end": "1793760"
  },
  {
    "text": "right is this good or bad well it's good in the sense that it it actually matches",
    "start": "1793760",
    "end": "1799000"
  },
  {
    "text": "what I would expect from the MVC pattern right it pretty much follows architectural principles and that's",
    "start": "1799000",
    "end": "1804159"
  },
  {
    "text": "always a good thing and of course I can always ask myself the question is this is it really meaningful to kind of have",
    "start": "1804159",
    "end": "1810640"
  },
  {
    "text": "these cascading changes could there be a simpler pattern I could use right but for our purpose right now I would say",
    "start": "1810640",
    "end": "1816399"
  },
  {
    "text": "that this coupling matches our expectations and that's good now I save the best for the",
    "start": "1816399",
    "end": "1824518"
  },
  {
    "text": "lost this is one of my favorite code BAS this is tegram for Android and I want to show you an",
    "start": "1825600",
    "end": "1831880"
  },
  {
    "text": "example of what shining looks like with a god CLA so the module I'm highlighting",
    "start": "1831880",
    "end": "1838399"
  },
  {
    "text": "there in the middle the large red blob that's a something called a shat activity which sounds like a pretty",
    "start": "1838399",
    "end": "1843960"
  },
  {
    "text": "Central class to Telegram and we see that it's heavily coupled",
    "start": "1843960",
    "end": "1849799"
  },
  {
    "text": "right and uh that's what kind of gut classes do right no matter what part of the system you you work on you end up in",
    "start": "1849799",
    "end": "1856600"
  },
  {
    "text": "the gut class right so it has tight dependencies to like 20 different files in various pieces of uh the",
    "start": "1856600",
    "end": "1865000"
  },
  {
    "text": "system so when evaluating change coupling what I always recommend is that",
    "start": "1865000",
    "end": "1871399"
  },
  {
    "text": "you evaluate it according to architectural patterns right so you make sure that the coupling the action modification patterns follows what you",
    "start": "1871399",
    "end": "1878039"
  },
  {
    "text": "expect and change coupling in general is problematic once you start to violate",
    "start": "1878039",
    "end": "1883080"
  },
  {
    "text": "those patterns and the reason I say that is because when you start to violate your",
    "start": "1883080",
    "end": "1888200"
  },
  {
    "text": "architecture principles you're basically introducing a surprise and surprise",
    "start": "1888200",
    "end": "1893519"
  },
  {
    "text": "really is one of the most expensive things you can ever put into a software",
    "start": "1893519",
    "end": "1898880"
  },
  {
    "text": "architecture so please avoid now that we're talking about",
    "start": "1898880",
    "end": "1905080"
  },
  {
    "start": "1902000",
    "end": "1985000"
  },
  {
    "text": "dependencies uh dependencies of course have a social context too and",
    "start": "1905080",
    "end": "1910840"
  },
  {
    "text": "dependencies are going to constrain how the people organization can work so in",
    "start": "1910840",
    "end": "1915880"
  },
  {
    "text": "particular what happens when we add the team Dimension to a tightly coupled",
    "start": "1915880",
    "end": "1921320"
  },
  {
    "text": "system like like the one we saw from telegram for example what would it look like to put multiple teams on that code",
    "start": "1921320",
    "end": "1928559"
  },
  {
    "text": "base well basically what would happen in tily couple system with multiple teams is that you would be playing shotgun",
    "start": "1928559",
    "end": "1936440"
  },
  {
    "text": "surgery right a shotgun surgery is basically when um you know you want to make a tweak through some part of the",
    "start": "1936440",
    "end": "1943120"
  },
  {
    "text": "code and now we end up having to visiting 15 different files potentially owned and developed by multiple teams",
    "start": "1943120",
    "end": "1949000"
  },
  {
    "text": "right so we're going to kind of destroy the mental models for each other all the time so it's a really really expensive",
    "start": "1949000",
    "end": "1956559"
  },
  {
    "text": "problem and the way to solve it is again cohesion right so it's if we kind of",
    "start": "1956559",
    "end": "1962039"
  },
  {
    "text": "manage to rethink the architecture REM modelize it so that we can kind of Express the problem domain in code then",
    "start": "1962039",
    "end": "1968840"
  },
  {
    "text": "we're also going to create these natural team boundaries because that tends to be the level at which we can parallelize",
    "start": "1968840",
    "end": "1975200"
  },
  {
    "text": "work so we saw an example earlier with hiber knite so I would address the change coupling problem in very much the",
    "start": "1975200",
    "end": "1982120"
  },
  {
    "text": "same way now that we have discussed dependencies in a team",
    "start": "1982120",
    "end": "1988799"
  },
  {
    "start": "1985000",
    "end": "2545000"
  },
  {
    "text": "context I'd like us to look at a related topic knowledge distribution and this is really really",
    "start": "1988799",
    "end": "1996279"
  },
  {
    "text": "important we're now going to look at uh some indivi individual analysis and the",
    "start": "1996279",
    "end": "2001880"
  },
  {
    "text": "reason I think that's important is because getting the people side of code wrong has killed more projects than even",
    "start": "2001880",
    "end": "2007080"
  },
  {
    "text": "visual basics right so let's drill into this I like to share a story with you",
    "start": "2007080",
    "end": "2014240"
  },
  {
    "text": "this is something that happened to me not that long ago three four years maybe so what I tend to do in my day job is",
    "start": "2014240",
    "end": "2020519"
  },
  {
    "text": "that I help companies uh identify and manage technical thatt so I did this",
    "start": "2020519",
    "end": "2025559"
  },
  {
    "text": "Workshop in Germany for our team and uh they had two code bases that we kind of",
    "start": "2025559",
    "end": "2031679"
  },
  {
    "text": "analyzed right and of course we identified some technical that there were some things that we agreed we",
    "start": "2031679",
    "end": "2037120"
  },
  {
    "text": "should do different but overall these two codebases looked pretty good but then towards the end of the day",
    "start": "2037120",
    "end": "2044440"
  },
  {
    "text": "someone kind of revealed that you know we have a third code base as well so I said super interesting let's",
    "start": "2044440",
    "end": "2050480"
  },
  {
    "text": "look at that one we still have time and everyone kind of just start to give each other funny looks right and then someone",
    "start": "2050480",
    "end": "2056560"
  },
  {
    "text": "said that no you know we really don't have to look at that one because I think the technical term he used was a mess",
    "start": "2056560",
    "end": "2063200"
  },
  {
    "text": "right that codebase was a mess so I said okay yeah I mean now we",
    "start": "2063200",
    "end": "2068960"
  },
  {
    "text": "definitely need to look at it so we picked it up and when I do this analysis we have all types of objective numbers",
    "start": "2068960",
    "end": "2075240"
  },
  {
    "text": "right we can measure code health and all that stuff so we did and it turned out that this third code base there was",
    "start": "2075240",
    "end": "2082200"
  },
  {
    "text": "objectively there was no quality difference compared to the other two code bases and this was of course super",
    "start": "2082200",
    "end": "2088398"
  },
  {
    "text": "surprising right so what we we had to spend some time picking up code examples looking at the code and after a while",
    "start": "2088399",
    "end": "2095118"
  },
  {
    "text": "everyone kind of agreed that yeah there really is no objective difference in quality between these three code bases",
    "start": "2095119",
    "end": "2101640"
  },
  {
    "text": "so why was the third code base considered a mess the reason for that third codebase",
    "start": "2101640",
    "end": "2108800"
  },
  {
    "text": "being considered a mess had nothing at all to do with the code the third codebase simply had a different story",
    "start": "2108800",
    "end": "2114760"
  },
  {
    "text": "The thir code base had been developed by a different team in a different part of the organization and that team had since",
    "start": "2114760",
    "end": "2120119"
  },
  {
    "text": "been desponded and the new team had simply inherited that code so the reason that they f it was",
    "start": "2120119",
    "end": "2127680"
  },
  {
    "text": "complicated had nothing to do with the code it was all about unfamiliarity with the solution and the domain and it's",
    "start": "2127680",
    "end": "2135119"
  },
  {
    "text": "very easy to confuse a lack of familiarity with complexity and when we do that we're going to solve the wrong",
    "start": "2135119",
    "end": "2142200"
  },
  {
    "text": "problem because what this team needed wasn't a major redesign of that code",
    "start": "2142200",
    "end": "2147359"
  },
  {
    "text": "right or rewrite that would have been a waste of time right what they needed",
    "start": "2147359",
    "end": "2153680"
  },
  {
    "text": "would saw proper onboarding and time for learning",
    "start": "2153680",
    "end": "2159280"
  },
  {
    "text": "and time for learning is also something that's related to the social technical",
    "start": "2160440",
    "end": "2165880"
  },
  {
    "text": "space so how many of you were here last year when I talked about the business impact of code",
    "start": "2165880",
    "end": "2171960"
  },
  {
    "text": "quality a couple of you and you still returned wonderful that's nice so what I talked about last year",
    "start": "2171960",
    "end": "2180760"
  },
  {
    "text": "was uh the research we've been doing called code red papers and what we did was basically that we took each piece of",
    "start": "2180760",
    "end": "2188000"
  },
  {
    "text": "code categorized it as being either green healthy code that's easy to understand low and complexity and then",
    "start": "2188000",
    "end": "2194160"
  },
  {
    "text": "uh yellow and red code which is unhealthy you know you have maintenance challenges growing technical debt",
    "start": "2194160",
    "end": "2200160"
  },
  {
    "text": "complex implantations all that bad stuff and what we did with that research was that we proved that if you have green",
    "start": "2200160",
    "end": "2207240"
  },
  {
    "text": "and healthy code you know you can complete tasks significantly faster in",
    "start": "2207240",
    "end": "2212640"
  },
  {
    "text": "fact you can complete tasks 10 times as quick compared to the most complex code",
    "start": "2212640",
    "end": "2218119"
  },
  {
    "text": "so there is a huge business advantage to having healthy code however when we did this study we",
    "start": "2218119",
    "end": "2224200"
  },
  {
    "text": "also had a lot of granular data and when we start to look at the data we kind of saw that there is quite some variability",
    "start": "2224200",
    "end": "2231520"
  },
  {
    "text": "particular when it comes to these really complex pieces of code right they seem to be extremely unpredictable and what",
    "start": "2231520",
    "end": "2237400"
  },
  {
    "text": "we wanted to investigate was if the the person aspect could be one part",
    "start": "2237400",
    "end": "2244640"
  },
  {
    "text": "of the explanation so does it matter which programmer that makes a change or you",
    "start": "2244640",
    "end": "2250119"
  },
  {
    "text": "know fixes a bug in a particular piece of code I guess we have all all seen that",
    "start": "2250119",
    "end": "2256079"
  },
  {
    "text": "context right where you have this you work in a company most of the code is pretty okay but there's this system over here that no one really understands",
    "start": "2256079",
    "end": "2262599"
  },
  {
    "text": "except person X right it's been maintaining that for 10 years now unfortunately person next is on vacation",
    "start": "2262599",
    "end": "2269319"
  },
  {
    "text": "and you need to step in and fix something right that's not a fun place to be so this is what we decided to",
    "start": "2269319",
    "end": "2276119"
  },
  {
    "text": "investigate and we published a paper on it earlier this year you're going to get the reference at the end as well and",
    "start": "2276119",
    "end": "2283440"
  },
  {
    "text": "what we did here was that we simply looked at okay how much more expensive is it you know uh to come as a new",
    "start": "2283440",
    "end": "2289079"
  },
  {
    "text": "developer and we say new developer I don't mean that we're like fresh out of school I mean we simply haven't worked in that part of the code before right",
    "start": "2289079",
    "end": "2296079"
  },
  {
    "text": "how much more expensive is that versus a person has worked more extensively on the code and what we figured out uh goes",
    "start": "2296079",
    "end": "2303200"
  },
  {
    "text": "pretty deep because what we found was that for small changes like you maybe this oneline bug fixes you will need 45%",
    "start": "2303200",
    "end": "2311160"
  },
  {
    "text": "longer to make that change compared to someone that already worked with the code and when it comes",
    "start": "2311160",
    "end": "2317240"
  },
  {
    "text": "to more complex changes like um you know maybe implementing a new feature you're",
    "start": "2317240",
    "end": "2322839"
  },
  {
    "text": "going to need twice as long as someone that already worked on that code but notice that these numbers they're only",
    "start": "2322839",
    "end": "2329480"
  },
  {
    "text": "true for unhealthy code yellow and red for green and healthy code there is no",
    "start": "2329480",
    "end": "2334800"
  },
  {
    "text": "significant difference meaning that in green C code onboarding costs are likely to be very very cheap compared to",
    "start": "2334800",
    "end": "2341839"
  },
  {
    "text": "complex code did I manage to explain that some of you nod I really like that thank",
    "start": "2341839",
    "end": "2349720"
  },
  {
    "text": "you and these findings they are really really far reaching when we consider another common force that acts upon",
    "start": "2349720",
    "end": "2356160"
  },
  {
    "text": "software projects the truck Factor right so how many of you are familiar with the",
    "start": "2356160",
    "end": "2361400"
  },
  {
    "text": "TRU Factor so like third of you may be good so the truck factor is also known",
    "start": "2361400",
    "end": "2367200"
  },
  {
    "text": "as the bus factor or my personal favorite the lottery Factor but they all refer to the same thing how many",
    "start": "2367200",
    "end": "2373960"
  },
  {
    "text": "developers can leave before your codebase becomes unmaintainable and the track factor is",
    "start": "2373960",
    "end": "2382440"
  },
  {
    "text": "particularly worrisome when it kind of collides with unhealthy code so if you",
    "start": "2382440",
    "end": "2387599"
  },
  {
    "text": "have unhealthy code with a low track Factor that's something I like to call the highway to Legacy",
    "start": "2387599",
    "end": "2392640"
  },
  {
    "text": "code and I want to show you an example of this so now the time has come to pick",
    "start": "2392640",
    "end": "2398520"
  },
  {
    "text": "up a JavaScript code base you've been looking forward to that haven't you",
    "start": "2398520",
    "end": "2403720"
  },
  {
    "text": "right how many of you are react developers wow that's a lot of people",
    "start": "2403720",
    "end": "2409280"
  },
  {
    "text": "20% maybe have you ever looked under the hood at the react implementation so we're going to do that",
    "start": "2409280",
    "end": "2415760"
  },
  {
    "text": "now a little bit we're going to touch the surface at least so react according to GitHub has 1,500 contributors that's",
    "start": "2415760",
    "end": "2423640"
  },
  {
    "text": "a lot of contributors so what would a truck Factor be and a Truck Factor here we simply measured as how many people",
    "start": "2423640",
    "end": "2429359"
  },
  {
    "text": "can leave before we lose detail knowledge of 50% of the code with 1,500",
    "start": "2429359",
    "end": "2434480"
  },
  {
    "text": "people I would say maybe it's I don't know 150 people 100 70 turns out when you measure it the",
    "start": "2434480",
    "end": "2442000"
  },
  {
    "text": "track factor is really only two people so out of 1,500 people if two",
    "start": "2442000",
    "end": "2448760"
  },
  {
    "text": "people the wrong two people leave all the code that's indicated in red is where you will lose detail knowledge",
    "start": "2448760",
    "end": "2457160"
  },
  {
    "text": "now this is indeed a very very common pattern it's nothing unique to react at all and to kind of prove that I want us",
    "start": "2459640",
    "end": "2466319"
  },
  {
    "text": "to look at the main competing framework in the JavaScript world so this is the track factor in",
    "start": "2466319",
    "end": "2472280"
  },
  {
    "text": "VJs where if one person leave you know the Creator you lose like 80% of the",
    "start": "2472280",
    "end": "2478800"
  },
  {
    "text": "code still I have to admit I would be a little bit more worried about react even if Vu has a lower track Factor because",
    "start": "2478800",
    "end": "2485839"
  },
  {
    "text": "there's another piece of information here if you see here some of these circles they have a dashed border that's",
    "start": "2485839",
    "end": "2490960"
  },
  {
    "text": "something I use to indicate unhealthy code and we see that there are more instances of unhealthy coding react",
    "start": "2490960",
    "end": "2497599"
  },
  {
    "text": "compared to VU so Vu kind of seems to be in a better shape implementation wise which we just learned will ease our",
    "start": "2497599",
    "end": "2503839"
  },
  {
    "text": "onboarding right but still even in Vu there seems to be this unhealthy place with the low track factor it's something",
    "start": "2503839",
    "end": "2510400"
  },
  {
    "text": "called a compiler I'm not a Vu programmer so I really don't know but maybe a compiler is important",
    "start": "2510400",
    "end": "2518440"
  },
  {
    "text": "and the reason I say this is because code quality issues really do amplify organizational problems so my",
    "start": "2518560",
    "end": "2524520"
  },
  {
    "text": "recommendation to you is to let Community smells like a low track Factor be the driver for refactoring right so",
    "start": "2524520",
    "end": "2530480"
  },
  {
    "text": "prioritize improvements of unhealthy code with a low track factor and that is the most important",
    "start": "2530480",
    "end": "2537000"
  },
  {
    "text": "refactoring is not necessarily about fixing the worst code right it could as well be a about mitigate soci technical",
    "start": "2537000",
    "end": "2543359"
  },
  {
    "text": "risks like the track Factor so with that covered we have come",
    "start": "2543359",
    "end": "2548440"
  },
  {
    "start": "2545000",
    "end": "2672000"
  },
  {
    "text": "toward towards the end of our soot technical tour and what I want to show you today is that when we do uh software",
    "start": "2548440",
    "end": "2554880"
  },
  {
    "text": "design we also do social design more specifically I want to show",
    "start": "2554880",
    "end": "2560839"
  },
  {
    "text": "you that I find it so fascinating that siming a hard organizational problems can be reduced via technical",
    "start": "2560839",
    "end": "2567599"
  },
  {
    "text": "improvements right we can solve things WEA technical improvements that no",
    "start": "2567599",
    "end": "2572800"
  },
  {
    "text": "amount of reorganization or team patterns can solve and today I want to show you how uh by designing for social",
    "start": "2572800",
    "end": "2580119"
  },
  {
    "text": "technical alignment not only can we get a simpler onboarding by flattening the learning curve we can also reduce you",
    "start": "2580119",
    "end": "2587440"
  },
  {
    "text": "know significant risks like key person dependencies right and we've also seen",
    "start": "2587440",
    "end": "2592800"
  },
  {
    "text": "how cohesive design helps us the couple team right so that we can kind of you know increase the amount of work we can",
    "start": "2592800",
    "end": "2599119"
  },
  {
    "text": "do safely in parallel and we have also seen how a highly cohesive design that um allows",
    "start": "2599119",
    "end": "2606040"
  },
  {
    "text": "you know minimiz this coration in code can minimize defects and finally one of the nice benefits of all of this that's",
    "start": "2606040",
    "end": "2612720"
  },
  {
    "text": "really really important is that doing these things is also going to improve team moral and those are really really",
    "start": "2612720",
    "end": "2618800"
  },
  {
    "text": "strong statements so you will be relieved to learn that all of them are supported by research and I've added the links for",
    "start": "2618800",
    "end": "2625800"
  },
  {
    "text": "you here you're going to get their presentation uh sent out to you after the talk if you want to dig deeper into this",
    "start": "2625800",
    "end": "2633079"
  },
  {
    "text": "all visualizations have been done via Coden right so coding is the thing I've",
    "start": "2633079",
    "end": "2638520"
  },
  {
    "text": "been working on for the past eight years if you want to test it out in your own codebase you're very welcome to do so uh",
    "start": "2638520",
    "end": "2644880"
  },
  {
    "text": "it's free to test it out even on Preparatory so if you like this please consider to support us finally since",
    "start": "2644880",
    "end": "2652559"
  },
  {
    "text": "it's Tuesday morning I think it's perfectly fine with a little bit of uh self-promotion so if you want to dig",
    "start": "2652559",
    "end": "2659319"
  },
  {
    "text": "into all of these social technical aspects then you could probably do worse",
    "start": "2659319",
    "end": "2664359"
  },
  {
    "text": "than checking out my new second edition of your codes in we have a couple of chapters that go into all these",
    "start": "2664359",
    "end": "2669520"
  },
  {
    "text": "different smells with various examples so with that covered I'm really looking forward to questions and I'd",
    "start": "2669520",
    "end": "2675359"
  },
  {
    "start": "2672000",
    "end": "2700000"
  },
  {
    "text": "like to take this opportunity to say thanks a lot for um staying here with me thanks a lot to conference organizers",
    "start": "2675359",
    "end": "2682000"
  },
  {
    "text": "and may the code be with you thank you",
    "start": "2682000",
    "end": "2687559"
  }
]