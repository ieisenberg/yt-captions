[
  {
    "start": "0",
    "end": "74000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "good afternoon um harnessing the power of event-driven systems that's of course a a title that",
    "start": "12719",
    "end": "18080"
  },
  {
    "text": "you can you can basically talk about anything uh and and i guess my abstract was just",
    "start": "18080",
    "end": "23920"
  },
  {
    "text": "uh two uh two sentences more so i'm i'm guessing that a lot of you have different expectations of what you're",
    "start": "23920",
    "end": "30160"
  },
  {
    "text": "going to see in the in the talk if you have any questions don't hesitate to to drop them at the at the end so my",
    "start": "30160",
    "end": "37520"
  },
  {
    "text": "name is aler bauzer i'm the founder and cto of aksonic and i started a journey around 11 years ago to",
    "start": "37520",
    "end": "44960"
  },
  {
    "text": "basically experiment a bit with cqs and event sourcing and domain driven design and you could",
    "start": "44960",
    "end": "52160"
  },
  {
    "text": "say that that is a little hobby that got out of control and three years ago three and a half years ago",
    "start": "52160",
    "end": "59039"
  },
  {
    "text": "i uh i founded axonic and right now we are a team of of 30 building software to make event",
    "start": "59039",
    "end": "65840"
  },
  {
    "text": "driven systems more approachable or accessible to uh",
    "start": "65840",
    "end": "71280"
  },
  {
    "text": "to the to the masses i would say but before that i want to go back a few uh well a few",
    "start": "71280",
    "end": "77759"
  },
  {
    "start": "74000",
    "end": "197000"
  },
  {
    "text": "years two days maybe a few minutes depending on on your background but there was a time where um it was a",
    "start": "77759",
    "end": "85520"
  },
  {
    "text": "really good idea or it was the best practice to build a um a so-called layered architecture",
    "start": "85520",
    "end": "92720"
  },
  {
    "text": "in inside the applications and the uh the layered architecture started",
    "start": "92720",
    "end": "98720"
  },
  {
    "text": "uh in in the in the 70s more or less where we had specific problems that we needed we needed to tackle",
    "start": "98720",
    "end": "105600"
  },
  {
    "text": "and i saw this uh this really nice uh picture from from ted neward who",
    "start": "105600",
    "end": "113200"
  },
  {
    "text": "who explains that as a box box cylinder architecture and basically uh the data is in a cylinder but you",
    "start": "113200",
    "end": "118960"
  },
  {
    "text": "don't want to access that data directly so you have a box of logic and that box of logic then",
    "start": "118960",
    "end": "124560"
  },
  {
    "text": "doesn't access it directly either so you put a box in between and of course there's lots of jokes out there",
    "start": "124560",
    "end": "130319"
  },
  {
    "text": "where if you have a problem that's too complex for two boxes you just add another box and another one and another one",
    "start": "130319",
    "end": "136160"
  },
  {
    "text": "and just add more layers unfortunately this is still a pretty dominant architectural style nowadays",
    "start": "136160",
    "end": "143360"
  },
  {
    "text": "even though the um the type of problems that we're trying to solve is is not the same to say the least",
    "start": "143360",
    "end": "151200"
  },
  {
    "text": "as it was in the in the 70s and a lot of these uh these projects and",
    "start": "151200",
    "end": "157200"
  },
  {
    "text": "basically these monolithic projects that we've built um they turn out to become something that in domain",
    "start": "157200",
    "end": "164400"
  },
  {
    "text": "driven design we call a big ball of mud and as you can see on the picture it's not really mud",
    "start": "164400",
    "end": "171120"
  },
  {
    "text": "but as any big ball of mud there's always an architect and defending its creation and really",
    "start": "171120",
    "end": "177120"
  },
  {
    "text": "proud of what it has created really unable to see what it really really is",
    "start": "177120",
    "end": "182640"
  },
  {
    "text": "but the idea of the big ball of mud is that the the internal structure is lost to a degree where",
    "start": "182640",
    "end": "188640"
  },
  {
    "text": "you can only really add more mud to it and that might sound familiar",
    "start": "188640",
    "end": "194800"
  },
  {
    "text": "fast forward a few years from the 70s then is of course microservices to the rescue right microservices is the answer",
    "start": "196959",
    "end": "203519"
  },
  {
    "start": "197000",
    "end": "234000"
  },
  {
    "text": "to any problem you have um um well except that it doesn't solve many",
    "start": "203519",
    "end": "209440"
  },
  {
    "text": "of those problems and it brings out its its own set of problems",
    "start": "209440",
    "end": "214640"
  },
  {
    "text": "and i was a few a few months ago i read a very interesting uh article",
    "start": "214640",
    "end": "219680"
  },
  {
    "text": "well interesting in the uh i would say the british sense of the world like interesting where",
    "start": "219680",
    "end": "226640"
  },
  {
    "text": "they described a certain way to architect microservices that sounded extremely familiar when you go",
    "start": "226640",
    "end": "233439"
  },
  {
    "text": "back a few slides um and basically what you would have is well you you make the",
    "start": "233439",
    "end": "239280"
  },
  {
    "start": "234000",
    "end": "423000"
  },
  {
    "text": "big problem you turn it into a lot of small problems and then they're easier to solve right that's the idea the the the big",
    "start": "239280",
    "end": "246239"
  },
  {
    "text": "idea of microservices and then you can you can change those uh those components more easily",
    "start": "246239",
    "end": "251439"
  },
  {
    "text": "at least that's the that's the promise but if you look at every service there",
    "start": "251439",
    "end": "256479"
  },
  {
    "text": "are small box box cylinder uh type applications in in in many cases they own uh they have",
    "start": "256479",
    "end": "264160"
  },
  {
    "text": "their own database so we're trying we're solving the same problem again but now on a smaller scale",
    "start": "264160",
    "end": "269680"
  },
  {
    "text": "and then we let all of these services communicate with each other to solve the big problem altogether and",
    "start": "269680",
    "end": "276240"
  },
  {
    "text": "there's something to say about it except that in many implementations that i've seen and definitely in the in the years",
    "start": "276240",
    "end": "282800"
  },
  {
    "text": "before i i started axonic is that a lot of these implementations",
    "start": "282800",
    "end": "288560"
  },
  {
    "text": "turned out to really look like that so there are services that are responsible for",
    "start": "288560",
    "end": "295040"
  },
  {
    "text": "let's say the states they're the entity services they have this concept of a customer and you can make modifications",
    "start": "295040",
    "end": "300720"
  },
  {
    "text": "but you don't want to make modifications directly to the customer so you will have an api around it",
    "start": "300720",
    "end": "307520"
  },
  {
    "text": "and then some other services that are conceptually in that middle box they provide some some business logic",
    "start": "307520",
    "end": "313919"
  },
  {
    "text": "and the services on the left in the left virtual box they are the",
    "start": "313919",
    "end": "318960"
  },
  {
    "text": "uh backend for front-end type type services right so still there's this layer architecture that seems to",
    "start": "318960",
    "end": "326240"
  },
  {
    "text": "want to fight its way back into the into the architectural style even though we're going for microservices",
    "start": "326240",
    "end": "333360"
  },
  {
    "text": "and of course i'm exaggerating slightly uh and then generalizing there's there's different variations but i've seen this",
    "start": "333360",
    "end": "339680"
  },
  {
    "text": "more than more than once so what we've really done is we've taken the practices that give",
    "start": "339680",
    "end": "345360"
  },
  {
    "text": "us a big ball of mud and we've increased the number of deployment units and that's amazing and then what you get",
    "start": "345360",
    "end": "352160"
  },
  {
    "text": "is a distributed big bowl of mud otherwise known as a pile of",
    "start": "352160",
    "end": "357280"
  },
  {
    "text": "something and what we should be should be doing instead is increase the",
    "start": "357280",
    "end": "363120"
  },
  {
    "text": "modularity and i have to agree that on a powerpoint slide that is very easy all you need to",
    "start": "363120",
    "end": "369120"
  },
  {
    "text": "do is use boxes and happy colors and that's it of course in practice it's slightly more complex than that",
    "start": "369120",
    "end": "375680"
  },
  {
    "text": "but we'll get to that a little bit later and as soon as we have better modularity then we can think about increasing the",
    "start": "375680",
    "end": "383199"
  },
  {
    "text": "number of deployment units but getting that modularity right first is very very very important",
    "start": "383199",
    "end": "391120"
  },
  {
    "text": "unfortunately if it was just as easy as this we would all be building modular modular",
    "start": "391120",
    "end": "397759"
  },
  {
    "text": "applications or modular monoliths and and extracting components out of",
    "start": "397759",
    "end": "403120"
  },
  {
    "text": "those and deploying them as microservices out there there's a lot of anti-modularity forces",
    "start": "403120",
    "end": "409039"
  },
  {
    "text": "there's a lot of choices we make that basically drive the mother modularity",
    "start": "409039",
    "end": "416240"
  },
  {
    "text": "down and and something we have to to fight against it is not a trivial",
    "start": "416240",
    "end": "422160"
  },
  {
    "text": "uh battle that we need to to fight and in that battle the word events pops",
    "start": "422160",
    "end": "428479"
  },
  {
    "start": "423000",
    "end": "533000"
  },
  {
    "text": "up quite a lot and events are are very powerful they can do a lot of",
    "start": "428479",
    "end": "435039"
  },
  {
    "text": "things but there's also a lot of things they cannot do which are still attributed to them",
    "start": "435039",
    "end": "442720"
  },
  {
    "text": "now the concept of an event is fairly simple what if you have two services and one service does something and",
    "start": "442720",
    "end": "449599"
  },
  {
    "text": "another service needs to do something as a result of the first service",
    "start": "449599",
    "end": "454800"
  },
  {
    "text": "taking its action right so service a let's say changes or receives a request to change",
    "start": "454800",
    "end": "460639"
  },
  {
    "text": "the name of a customer whatsoever um it can notify certain server c",
    "start": "460639",
    "end": "466000"
  },
  {
    "text": "of that change and it can just do a call to server c the problem is if it's not just server c",
    "start": "466000",
    "end": "473199"
  },
  {
    "text": "but as the application evolves it is also service b and d that need to know that we need to change",
    "start": "473199",
    "end": "480400"
  },
  {
    "text": "the logic in service a to also call these other services right and this creates a lot of",
    "start": "480400",
    "end": "485520"
  },
  {
    "text": "dependencies between these these different services and this is where events can be very useful right so",
    "start": "485520",
    "end": "492400"
  },
  {
    "text": "instead a service can emit an event and then the other uh the services b c and d can just watch those uh what",
    "start": "492400",
    "end": "499120"
  },
  {
    "text": "whatever topic or queue these uh these events are placed on and then uh respond accordingly",
    "start": "499120",
    "end": "505039"
  },
  {
    "text": "right this is a fairly common pattern and i don't feel that i need to",
    "start": "505039",
    "end": "511599"
  },
  {
    "text": "to explain it in in too much detail however from the arrows you can already see that the",
    "start": "511599",
    "end": "518080"
  },
  {
    "text": "thing that really happened was dependencies were inverted right now it's the services watching a space where the other services",
    "start": "518080",
    "end": "525040"
  },
  {
    "text": "is placing something instead of services and directly interacting with each other",
    "start": "525040",
    "end": "530640"
  },
  {
    "text": "now if we take this and then look at how we can improve our microservices deployments",
    "start": "530640",
    "end": "537440"
  },
  {
    "start": "533000",
    "end": "591000"
  },
  {
    "text": "basically what we get is this right we put a service bus in the middle and now all these services instead of",
    "start": "537440",
    "end": "544480"
  },
  {
    "text": "directly interacting with each other they can just interact with a an event",
    "start": "544480",
    "end": "549920"
  },
  {
    "text": "bus in the middle and this is very um again very powerful",
    "start": "549920",
    "end": "556399"
  },
  {
    "text": "but it does not solve the problems that are very often attributed to the solution like there's",
    "start": "556399",
    "end": "562000"
  },
  {
    "text": "no dependencies that disappear dependencies between services don't disappear they're now much more difficult to uh",
    "start": "562000",
    "end": "570560"
  },
  {
    "text": "to see and they're inverted but they're still there and and again i've seen examples where",
    "start": "570560",
    "end": "576959"
  },
  {
    "text": "you can still put the box box cylinder uh concepts behind those services",
    "start": "576959",
    "end": "582480"
  },
  {
    "text": "because the services still have the same responsibilities but their form of communication just changed",
    "start": "582480",
    "end": "591839"
  },
  {
    "start": "591000",
    "end": "724000"
  },
  {
    "text": "so the promise with these uh that are very often attributed to those uh those events is that well if you want to",
    "start": "592160",
    "end": "599440"
  },
  {
    "text": "be cloud native if you want to be reactive you just you have to use events right well that",
    "start": "599440",
    "end": "604720"
  },
  {
    "text": "might be true but it doesn't mean that by using events you suddenly become cloud native or reactive or whatever",
    "start": "604720",
    "end": "610640"
  },
  {
    "text": "whatever it is that you're looking for it is one of the tools in the toolbox but you have to be very careful when to",
    "start": "610640",
    "end": "616079"
  },
  {
    "text": "use that tool and when not to another thing is events give you location transparency",
    "start": "616079",
    "end": "622399"
  },
  {
    "text": "well true to some extent i mean by publishing an event and by you don't know where the",
    "start": "622399",
    "end": "628959"
  },
  {
    "text": "consumers are you don't know when they consume it and that's fine so yes it can give you location transparency",
    "start": "628959",
    "end": "635519"
  },
  {
    "text": "but it can also give you a very awkward coupling as we'll see in a second evolutionary architecture is",
    "start": "635519",
    "end": "641920"
  },
  {
    "text": "also something yeah you can just evolve your your system by adding new components that react on those events",
    "start": "641920",
    "end": "647279"
  },
  {
    "text": "and you don't need to change existing components again it's it's one of these promises",
    "start": "647279",
    "end": "654000"
  },
  {
    "text": "and the last one is well if you just publish events you can always reuse those event streams later on",
    "start": "654880",
    "end": "660640"
  },
  {
    "text": "you can always build a new component that goes back in time and as long as you just keep those",
    "start": "660640",
    "end": "665839"
  },
  {
    "text": "events around then you'll be able to to stream them to a component that was deployed after",
    "start": "665839",
    "end": "672880"
  },
  {
    "text": "the actual first events have been have been emitted and these are all promises and yes they",
    "start": "672880",
    "end": "680000"
  },
  {
    "text": "are to some extent delivered by events but we have to be careful to not assume that by using events we get those",
    "start": "680000",
    "end": "686720"
  },
  {
    "text": "we get those promises right away because the picture that we get is very often like a",
    "start": "686720",
    "end": "692000"
  },
  {
    "text": "travel agency brochure right it always looks beautiful in this case there's a nice picture of a",
    "start": "692000",
    "end": "698560"
  },
  {
    "text": "sort of a jungle environment and a beautiful waterfall you can just feel the serenity this is",
    "start": "698560",
    "end": "704959"
  },
  {
    "text": "what 2020 needs right unfortunately what you get when you go there",
    "start": "704959",
    "end": "710880"
  },
  {
    "text": "is well the little details and the little details are the really annoying things that you'll encounter",
    "start": "710880",
    "end": "717600"
  },
  {
    "text": "but you'll never read about in advance and i'm not going to pick all of them",
    "start": "717600",
    "end": "723839"
  },
  {
    "text": "but just a few that that i really want to to warn you about and in many systems what i've what i've seen",
    "start": "723839",
    "end": "730639"
  },
  {
    "start": "724000",
    "end": "847000"
  },
  {
    "text": "is that events are considered a side effect right they're not the system is not designed around events they call it",
    "start": "730639",
    "end": "737040"
  },
  {
    "text": "event driven but it's not driven by events it's driven by other things by requests and states",
    "start": "737040",
    "end": "744560"
  },
  {
    "text": "and then events are just emitted as a as a side effect from those from from whatever happens whatever",
    "start": "744560",
    "end": "750639"
  },
  {
    "text": "state changes are made um cdc change data capture is one of",
    "start": "750639",
    "end": "755920"
  },
  {
    "text": "those examples like well we just use cdc to emit events right well that's not event driven",
    "start": "755920",
    "end": "761600"
  },
  {
    "text": "that's events as a side effect and it's not per se a bad thing but there are some um",
    "start": "761600",
    "end": "768240"
  },
  {
    "text": "some aspects to to to be careful about and one of them is if you have events as",
    "start": "768240",
    "end": "775920"
  },
  {
    "text": "a side effect how can you guarantee that those events are correct how can you guarantee that there every",
    "start": "775920",
    "end": "782320"
  },
  {
    "text": "change you made to a system is correctly represented as an event and everything that is represented as an",
    "start": "782320",
    "end": "788240"
  },
  {
    "text": "event is correctly um accepted or or",
    "start": "788240",
    "end": "794079"
  },
  {
    "text": "accommodated as a change in the system as well right it's that two-way problem",
    "start": "794079",
    "end": "799600"
  },
  {
    "text": "and that is quite quite hard to to do and as any side effect in your system",
    "start": "799600",
    "end": "807360"
  },
  {
    "text": "any afterthought that you have like you've designed for example this this layered architecture style",
    "start": "807360",
    "end": "813200"
  },
  {
    "text": "application which is very state driven if you start doing events as",
    "start": "813200",
    "end": "819440"
  },
  {
    "text": "on top of that it will add complexity and anything you do that was not accounted for in the beginning will add complexity",
    "start": "819440",
    "end": "826160"
  },
  {
    "text": "to your to your architecture and that might be very doable in the beginning but as",
    "start": "826160",
    "end": "831600"
  },
  {
    "text": "applications evolve that complexity just might get more and get higher and higher um",
    "start": "831600",
    "end": "838160"
  },
  {
    "text": "and with the results that you uh the development of new features slows",
    "start": "838160",
    "end": "843519"
  },
  {
    "text": "down there's something else about those",
    "start": "843519",
    "end": "848800"
  },
  {
    "start": "847000",
    "end": "977000"
  },
  {
    "text": "events uh that i'd really like to uh to talk about and there's always",
    "start": "848800",
    "end": "854639"
  },
  {
    "text": "things that happen in a system or the way we talk about a system what happens especially when we talk to",
    "start": "854639",
    "end": "860480"
  },
  {
    "text": "non-technical people and the information that the system actually stores and remembers",
    "start": "860480",
    "end": "866959"
  },
  {
    "text": "right the things that apparently we as developers tend to care about and they differ quite",
    "start": "866959",
    "end": "872480"
  },
  {
    "text": "a bit so if we look at what happens it's well an order was created and i apologize for",
    "start": "872480",
    "end": "878079"
  },
  {
    "text": "the lousy uh e-commerce kind of example but i guess they're uh they're easy enough",
    "start": "878079",
    "end": "884240"
  },
  {
    "text": "to uh to just use in in a presentation so what we store is well we've got an order",
    "start": "884240",
    "end": "890160"
  },
  {
    "text": "with identifier one two three and it's a waiting con confirmation because that's the initial state",
    "start": "890160",
    "end": "895440"
  },
  {
    "text": "apparently and then we added two items in this case um some chairs",
    "start": "895440",
    "end": "901279"
  },
  {
    "text": "and that's a 798 euros and then we remove a chair and as you can see on the right the information we store is",
    "start": "901279",
    "end": "908000"
  },
  {
    "text": "that we just have this order which is a waiting confirmation for one chair which is technically correct",
    "start": "908000",
    "end": "914720"
  },
  {
    "text": "because that's what we are trying to get confirmed at this point but it's not the whole history we have",
    "start": "914720",
    "end": "920320"
  },
  {
    "text": "already deleted some information that might be interesting",
    "start": "920320",
    "end": "926320"
  },
  {
    "text": "uh might be valuable even so the uh order is confirmed and the status changes and as more events or as more",
    "start": "926320",
    "end": "932959"
  },
  {
    "text": "things happen i gave it away i guess but as more things happen we update the status and the uh and",
    "start": "932959",
    "end": "940639"
  },
  {
    "text": "the information we store but the actual interesting information is on the left",
    "start": "940639",
    "end": "946480"
  },
  {
    "text": "it is what happened in the application right that's what gives us a lot of",
    "start": "946480",
    "end": "951600"
  },
  {
    "text": "information whereas on the right is maybe a nice summary for for some people but we have lost",
    "start": "951600",
    "end": "958800"
  },
  {
    "text": "a lot of information on on that side so i always start questioning why do we",
    "start": "958800",
    "end": "966880"
  },
  {
    "text": "store the part of the information that is less relevant than what happened right so why don't we",
    "start": "966880",
    "end": "975360"
  },
  {
    "text": "just store what happened and this is really the concept that event sourcing is about this is the thing that event sourcing is about",
    "start": "975360",
    "end": "981680"
  },
  {
    "start": "977000",
    "end": "1035000"
  },
  {
    "text": "is about not storing the current state of things but storing how we got to that state",
    "start": "981680",
    "end": "987920"
  },
  {
    "text": "and i would like to emphasize that it is not about data dealt ads but about capturing really what happened",
    "start": "987920",
    "end": "994800"
  },
  {
    "text": "describing what happened and make sure you remember that and as a result you can calculate what",
    "start": "994800",
    "end": "1000000"
  },
  {
    "text": "the current state of the system is we all know what the status of an order is given that flow that we had earlier",
    "start": "1000000",
    "end": "1008320"
  },
  {
    "text": "but i'd like to express the uh event sourcing as the way for an application to capture the truth the whole truth and",
    "start": "1008639",
    "end": "1014720"
  },
  {
    "text": "nothing but the truth to make sure that everything that happens gets captured as an event",
    "start": "1014720",
    "end": "1021040"
  },
  {
    "text": "and everything that is captured as an event is actually something that happened",
    "start": "1021040",
    "end": "1026160"
  },
  {
    "text": "so if it's not in the in the events it just didn't happen period end of discussion right and",
    "start": "1026160",
    "end": "1032240"
  },
  {
    "text": "that's something that event sourcing can give you",
    "start": "1032240",
    "end": "1036240"
  },
  {
    "start": "1035000",
    "end": "1162000"
  },
  {
    "text": "when we go back to um to some of the challenges with uh with events",
    "start": "1037679",
    "end": "1042880"
  },
  {
    "text": "then i really want to warn you for uh for awkward coupling right there there",
    "start": "1042880",
    "end": "1048960"
  },
  {
    "text": "is going to be coupling no matter what you do there has to be some form of communication between two components",
    "start": "1048960",
    "end": "1055600"
  },
  {
    "text": "because they need to exchange information in one way or another right so we just",
    "start": "1055600",
    "end": "1060640"
  },
  {
    "text": "need to accept that that coupling between these two components will be there",
    "start": "1060640",
    "end": "1065679"
  },
  {
    "text": "but the question is how do we want that coupling to to manifest itself and events are very",
    "start": "1065679",
    "end": "1072160"
  },
  {
    "text": "powerful but they invert dependencies right so now it's suddenly the consumers that need to be aware of the producers",
    "start": "1072160",
    "end": "1078880"
  },
  {
    "text": "and uh producing a certain message whereas the producer is not responsible anymore",
    "start": "1078880",
    "end": "1084160"
  },
  {
    "text": "for knowing who is consuming the message right and it's also a dependency that is",
    "start": "1084160",
    "end": "1089520"
  },
  {
    "text": "slightly obfuscated because it's it becomes more difficult to find basically to put your finger",
    "start": "1089520",
    "end": "1095679"
  },
  {
    "text": "maybe you remember from the good old days where programming was about finding the the",
    "start": "1095679",
    "end": "1101840"
  },
  {
    "text": "top left part of a script and just with your finger you could just follow",
    "start": "1101840",
    "end": "1107440"
  },
  {
    "text": "the entire process of the application with events you can't do that anymore when as soon as you publish an event",
    "start": "1107440",
    "end": "1113760"
  },
  {
    "text": "where wherever that event goes becomes really obscure and you might need to use tools to to",
    "start": "1113760",
    "end": "1119919"
  },
  {
    "text": "find out where where these dependencies are which applications are actually consuming that event and what are they doing with it",
    "start": "1119919",
    "end": "1126080"
  },
  {
    "text": "it becomes harder to track not problematic but it's something to be aware of",
    "start": "1126080",
    "end": "1132320"
  },
  {
    "text": "and also communication in terms of events becomes really awkward you can try it at",
    "start": "1132640",
    "end": "1137760"
  },
  {
    "text": "home right just just emit facts it will probably won't last more than an hour",
    "start": "1137760",
    "end": "1143360"
  },
  {
    "text": "and and whoever else is in the home will probably go crazy right if you you can't just shout i'm",
    "start": "1143360",
    "end": "1148799"
  },
  {
    "text": "thirsty and just wait for for a drink to show up right it doesn't work like that communication",
    "start": "1148799",
    "end": "1154880"
  },
  {
    "text": "does not work like that in between humans and i seriously doubt it should work like that in in systems as well",
    "start": "1154880",
    "end": "1162799"
  },
  {
    "start": "1162000",
    "end": "1307000"
  },
  {
    "text": "and that's because when we talk about messaging while we give events so much",
    "start": "1162799",
    "end": "1168480"
  },
  {
    "text": "attention they are definitely not the only type of message conceptually that should flow between",
    "start": "1168799",
    "end": "1176840"
  },
  {
    "text": "components i started experimenting with with different uh types of messages and i've uh",
    "start": "1176840",
    "end": "1182880"
  },
  {
    "text": "fortunately because of conferences met other people that are also that did a similar thing",
    "start": "1182880",
    "end": "1188559"
  },
  {
    "text": "and we came back down to the same conclusion there's essentially three categories of",
    "start": "1188559",
    "end": "1193760"
  },
  {
    "text": "messages and events is is one of them and events follow a pops up pattern right an event describes a",
    "start": "1193760",
    "end": "1200160"
  },
  {
    "text": "certain facts something that happened something that's in the past that cannot be changed anyway so i might",
    "start": "1200160",
    "end": "1205440"
  },
  {
    "text": "as well let you know and then you can do whatever you like based on the on the knowledge that the event carries but sometimes you",
    "start": "1205440",
    "end": "1213039"
  },
  {
    "text": "want to communicate because you have an intent to change something and that's a command and commands are",
    "start": "1213039",
    "end": "1219120"
  },
  {
    "text": "typically routed to a single destination and there might be some form of acknowledgement or confirmation",
    "start": "1219120",
    "end": "1225760"
  },
  {
    "text": "from that command that yes we have uh executed what you asked for or or something like that right",
    "start": "1225760",
    "end": "1234159"
  },
  {
    "text": "the other thing is if you have a need for information you want to ask a question so you have a need for information you",
    "start": "1234159",
    "end": "1240240"
  },
  {
    "text": "can you can send a message to uh either to a component or have some some routing mechanism routed for you",
    "start": "1240240",
    "end": "1248559"
  },
  {
    "text": "but the the value of that communication is in the answer that you get and there's different patterns that you",
    "start": "1248559",
    "end": "1253760"
  },
  {
    "text": "have you have what we call point-to-point it's where you have a single destination answer the question",
    "start": "1253760",
    "end": "1258799"
  },
  {
    "text": "and you've got the answer but in some cases you want to do a scatter gather which is very typical at conferences you",
    "start": "1258799",
    "end": "1266000"
  },
  {
    "text": "ask a question when you're on stage you get multiple answers you gather the answers and you do sort of a reduction and say oh yeah half of",
    "start": "1266000",
    "end": "1273039"
  },
  {
    "text": "them know about cqrs or or something like that right those are different styles of",
    "start": "1273039",
    "end": "1278799"
  },
  {
    "text": "uh of queries that you can you can think of but the most important is that we should",
    "start": "1278799",
    "end": "1284480"
  },
  {
    "text": "not confuse eventing and messaging an event is just an example of a message",
    "start": "1284480",
    "end": "1290400"
  },
  {
    "text": "and it is a very powerful building block but is not the only one and when you use those three different",
    "start": "1290400",
    "end": "1298080"
  },
  {
    "text": "styles of messaging um explicitly and and you're aware of your of your choice",
    "start": "1298080",
    "end": "1304159"
  },
  {
    "text": "when uh when you choose what that is when you can achieve true location transparency then it",
    "start": "1304159",
    "end": "1311039"
  },
  {
    "start": "1307000",
    "end": "1454000"
  },
  {
    "text": "doesn't matter anymore which weather components are all deployed in the same",
    "start": "1311039",
    "end": "1316559"
  },
  {
    "text": "units as the the little box on the left right we have all uh all colors in the",
    "start": "1316559",
    "end": "1321679"
  },
  {
    "text": "same box so that's our monolithic deployment um it doesn't matter as long as the the",
    "start": "1321679",
    "end": "1327120"
  },
  {
    "text": "queries that we have or the commands or the events that we send they can just be published within that component",
    "start": "1327120",
    "end": "1333200"
  },
  {
    "text": "but then we can extract the component and start deploying it separately and as long as we make sure that these messages",
    "start": "1333200",
    "end": "1338640"
  },
  {
    "text": "are then transported across deployable units then they can still communicate and of course there's a bit",
    "start": "1338640",
    "end": "1344960"
  },
  {
    "text": "remoting in place so we have to be careful how we design the apis on those uh on",
    "start": "1344960",
    "end": "1350000"
  },
  {
    "text": "those messaging systems that they are aware of potential remoting",
    "start": "1350000",
    "end": "1356000"
  },
  {
    "text": "and then you can you can evolve as you as you go on so really the the journey towards",
    "start": "1356000",
    "end": "1361840"
  },
  {
    "text": "microservices should not be oh let's uh let's go from an idea that we have",
    "start": "1361840",
    "end": "1366960"
  },
  {
    "text": "straight into okay this is the solution that we want to build these are the different services that we need let's deploy them all separately and and",
    "start": "1366960",
    "end": "1374640"
  },
  {
    "text": "see where we end up i've seen unfortunately too many startups with a great idea",
    "start": "1374640",
    "end": "1380080"
  },
  {
    "text": "fail on all the technical complexity that they they force onto themselves",
    "start": "1380080",
    "end": "1387440"
  },
  {
    "text": "because they have to deal with all of the problems at day one right and very often they you you",
    "start": "1387440",
    "end": "1394720"
  },
  {
    "text": "digress you find out that oh the service boundaries weren't quite right and before you know you end up in that",
    "start": "1394720",
    "end": "1400640"
  },
  {
    "text": "big distributed big ball of mud type of type of system so instead we",
    "start": "1400640",
    "end": "1406640"
  },
  {
    "text": "should really focus on building that structured monolith first right it gives us much more ability to",
    "start": "1406640",
    "end": "1413360"
  },
  {
    "text": "learn about the different let's say sub boundaries of our of our systems our boundaries of our subsystems whatever you want",
    "start": "1413360",
    "end": "1420960"
  },
  {
    "text": "and it makes it easier to refactor those",
    "start": "1420960",
    "end": "1425200"
  },
  {
    "text": "and then as we start learning about our system and start finding out what the non-functionals are",
    "start": "1426480",
    "end": "1432640"
  },
  {
    "text": "that we need to to cope with then we can start extracting components",
    "start": "1432640",
    "end": "1437760"
  },
  {
    "text": "and we can extract components for which it becomes important to do so instead of upfront we thought of five",
    "start": "1437760",
    "end": "1444000"
  },
  {
    "text": "components we separate all five but now we can separate them based on the non-functional requirements",
    "start": "1444000",
    "end": "1449279"
  },
  {
    "text": "that we have and then we can evolve as we as we go and that sounds all very easy but of",
    "start": "1449279",
    "end": "1455600"
  },
  {
    "start": "1454000",
    "end": "1693000"
  },
  {
    "text": "course we all know that there's technical complexity involved with doing that right",
    "start": "1455600",
    "end": "1461440"
  },
  {
    "text": "rule number one of distributed systems is don't and it's it's don't for a reason because",
    "start": "1461440",
    "end": "1468320"
  },
  {
    "text": "of the the complexity so delivery guarantees become very important",
    "start": "1468320",
    "end": "1473840"
  },
  {
    "text": "suddenly within a single deployable units we would probably just have an in-process communication",
    "start": "1473840",
    "end": "1480080"
  },
  {
    "text": "um and well delivering a method invocation is not particularly",
    "start": "1480080",
    "end": "1485600"
  },
  {
    "text": "difficult but it does become difficult as soon as you need to cross a boundary of a of a process",
    "start": "1485600",
    "end": "1492559"
  },
  {
    "text": "so delivery guarantees become important do you want at least once at most once those are basically your options right",
    "start": "1492559",
    "end": "1500159"
  },
  {
    "text": "the timeliness when do you deliver those messages do you deliver them in the same order that they were dispatched how that's",
    "start": "1500159",
    "end": "1506960"
  },
  {
    "text": "that's fairly uh fairly complex how to deal with error handling right",
    "start": "1506960",
    "end": "1512400"
  },
  {
    "text": "things will go wrong how do you deal with those this is not an afterthought this is something you want to take on from the very beginning",
    "start": "1512400",
    "end": "1520320"
  },
  {
    "text": "um and then when you have these messages how are you going to evolve them and as soon as the publisher wants to",
    "start": "1520320",
    "end": "1526000"
  },
  {
    "text": "change the shape of a message how are you going to make sure that the consumer doesn't choke",
    "start": "1526000",
    "end": "1531360"
  },
  {
    "text": "on that modified message structure and how do you prevent the publisher",
    "start": "1531360",
    "end": "1538320"
  },
  {
    "text": "from choking by having to maintain all the versions and formats of these",
    "start": "1538320",
    "end": "1544400"
  },
  {
    "text": "of these messages now that we we have this promise of event sourcing",
    "start": "1544400",
    "end": "1550559"
  },
  {
    "text": "um how can we trigger replays how can we effectively do those replays for",
    "start": "1550559",
    "end": "1556080"
  },
  {
    "text": "all those historic events there's potentially millions or in some cases billions of events how can we replay",
    "start": "1556080",
    "end": "1561840"
  },
  {
    "text": "those how is that even uh pragmatic thing to do i'm going to keep it really short",
    "start": "1561840",
    "end": "1568240"
  },
  {
    "text": "because of obviously of of time um but there's tools out there right",
    "start": "1568240",
    "end": "1574720"
  },
  {
    "text": "there's a lot of uh so we we started around 11 years ourselves but we are noticing that",
    "start": "1574720",
    "end": "1580400"
  },
  {
    "text": "the there's a very rich ecosystem around um you know event driven systems for",
    "start": "1580400",
    "end": "1586559"
  },
  {
    "text": "event sourcing for concepts like cqrs and ddd so i would definitely recommend you know",
    "start": "1586559",
    "end": "1591600"
  },
  {
    "text": "don't don't stick for too long on on the things that you've known and that you've always done",
    "start": "1591600",
    "end": "1597200"
  },
  {
    "text": "right we've always built systems like that and it's kind of works so we might as well do the next one the same way",
    "start": "1597200",
    "end": "1603600"
  },
  {
    "text": "make sure you keep your eyes open for new tools and new methods that are that are out there but in the same time",
    "start": "1603600",
    "end": "1610559"
  },
  {
    "text": "we also need to make sure that we have the discipline to use those tools correctly",
    "start": "1610559",
    "end": "1615919"
  },
  {
    "text": "and also the discipline to not use them when appropriate sometimes a tool is really cool to use",
    "start": "1615919",
    "end": "1622240"
  },
  {
    "text": "but you really shouldn't just in case you you haven't seen this one this is a um",
    "start": "1622240",
    "end": "1627679"
  },
  {
    "text": "a scene from the movie the karate kid uh in uh i think it was from from 84. i don't know how many times",
    "start": "1627679",
    "end": "1634640"
  },
  {
    "text": "i've seen that that movie back in the days but there was one scene that um i just associated directly with",
    "start": "1634640",
    "end": "1641919"
  },
  {
    "text": "discipline and it's the wax off wax off scene so the little boy there daniel he wants to learn karate and",
    "start": "1641919",
    "end": "1649919"
  },
  {
    "text": "the gentleman mr miyagi is trying to teach him that and he says well you go wax my car first",
    "start": "1649919",
    "end": "1656000"
  },
  {
    "text": "right wax on wax off and the whole idea was to build the discipline and the or the muscle memory",
    "start": "1656000",
    "end": "1661440"
  },
  {
    "text": "in this case to uh to make sure that he got the movements right and this is the basic tool that he",
    "start": "1661440",
    "end": "1668000"
  },
  {
    "text": "needed essentially to uh to win the heart of some some girl in school uh because it's uh",
    "start": "1668000",
    "end": "1673760"
  },
  {
    "text": "of course in an american movie uh from the 80s so that's what's uh what the goal was but there's a big",
    "start": "1673760",
    "end": "1680799"
  },
  {
    "text": "analogy with with software engineering sometimes we have to learn those annoying basics",
    "start": "1680799",
    "end": "1685919"
  },
  {
    "text": "to make sure that we we get the thing done right",
    "start": "1685919",
    "end": "1692960"
  },
  {
    "text": "and some of the practices that are that are now emerging are well they go back to the design",
    "start": "1692960",
    "end": "1699200"
  },
  {
    "start": "1693000",
    "end": "1879000"
  },
  {
    "text": "phase right there's that's where a lot of things still unfortunately go wrong",
    "start": "1699200",
    "end": "1704559"
  },
  {
    "text": "um so there's a practice of domain driven design which i can really recommend uh reading into if you haven't done so",
    "start": "1704559",
    "end": "1710559"
  },
  {
    "text": "already that's a book of by by eric evans written in",
    "start": "1710559",
    "end": "1715760"
  },
  {
    "text": "2003 but i think it is more relevant right now than it was in 2003",
    "start": "1715760",
    "end": "1720799"
  },
  {
    "text": "right and the relevance is only increasing as microservices and distributed systems become more",
    "start": "1720799",
    "end": "1728240"
  },
  {
    "text": "prevalent but there's there's also some design practices that really take those",
    "start": "1728240",
    "end": "1733679"
  },
  {
    "text": "events into account and start designing applications starting at events but definitely not stopping there so you'll",
    "start": "1733679",
    "end": "1739760"
  },
  {
    "text": "see the commands and the queries in there as well and two of those are event storming and",
    "start": "1739760",
    "end": "1745120"
  },
  {
    "text": "event modeling looking at slightly different aspects of the system event storming",
    "start": "1745120",
    "end": "1752000"
  },
  {
    "text": "being very suitable for exploring systems especially if you're if you're doing a big picture",
    "start": "1752000",
    "end": "1758720"
  },
  {
    "text": "uh exploration event storming is a very good way to find out what a system",
    "start": "1758720",
    "end": "1763760"
  },
  {
    "text": "should do and taking into account that a system is broader than just the i.t part of it",
    "start": "1763760",
    "end": "1769679"
  },
  {
    "text": "it's also about the human interaction with the system and even the human parts of a system",
    "start": "1769679",
    "end": "1776159"
  },
  {
    "text": "whereas event modeling is much more about the the it part of the system looking at how to to design user",
    "start": "1776159",
    "end": "1783520"
  },
  {
    "text": "interfaces how to ask for information where that information comes from which occurrences of events",
    "start": "1783520",
    "end": "1790159"
  },
  {
    "text": "influence those uis essentially",
    "start": "1790159",
    "end": "1796399"
  },
  {
    "text": "so in closing beware of coupling right events are a solution they're a",
    "start": "1796799",
    "end": "1802880"
  },
  {
    "text": "way of easing that coupling inverting the dependencies but don't always use that",
    "start": "1802880",
    "end": "1808880"
  },
  {
    "text": "consider commands and queries as much as you would use events so every time",
    "start": "1808880",
    "end": "1815200"
  },
  {
    "text": "you see an event-driven system rather think about a message driven systems where yes we have events but",
    "start": "1815200",
    "end": "1820799"
  },
  {
    "text": "there's definitely not only events and microservices are a journey and i'm not the first one to say it and i won't",
    "start": "1820799",
    "end": "1826880"
  },
  {
    "text": "be the last one to say it but it is definitely a journey an interesting journey a challenging journey but it should start with",
    "start": "1826880",
    "end": "1833600"
  },
  {
    "text": "a monolith and most important make sure to uh",
    "start": "1833600",
    "end": "1840000"
  },
  {
    "text": "to bring on the discipline and if you if you have the discipline to do things right you'll see that the",
    "start": "1840000",
    "end": "1846320"
  },
  {
    "text": "tools that you need to use emerge quite naturally and that i guess is not a pure",
    "start": "1846320",
    "end": "1853360"
  },
  {
    "text": "coincidence if you want to know more there's uh well there's a bit of time left for",
    "start": "1853360",
    "end": "1858960"
  },
  {
    "text": "for q a and otherwise here's a few uh free of references that you can you can use",
    "start": "1858960",
    "end": "1879840"
  }
]