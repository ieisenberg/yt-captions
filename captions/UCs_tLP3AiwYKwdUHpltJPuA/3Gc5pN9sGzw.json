[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "[Music]",
    "start": "3500",
    "end": "7820"
  },
  {
    "text": "thank you for join me good morning folks so uh this talk is titled the se4 model misconceptions misuses and mistakes if",
    "start": "12160",
    "end": "19760"
  },
  {
    "text": "that sounds too negative for you the other way to think about this is this is the advanced stuff around C4 I see a lot",
    "start": "19760",
    "end": "25599"
  },
  {
    "text": "of people trying to adopt a new C4 but they're struggling with certain aspects and I'm going to tell you about something those certain aspects for",
    "start": "25599",
    "end": "31759"
  },
  {
    "start": "31000",
    "end": "336000"
  },
  {
    "text": "those of you who might not have heard of the C4 model I'm going to do a really quick intro so we all have some common",
    "start": "31759",
    "end": "38120"
  },
  {
    "text": "understanding here so what is the C4 model I spent much time traveling around the world and looking architecture",
    "start": "38120",
    "end": "44239"
  },
  {
    "text": "diagrams and most of them are horrible for a whole bunch of different reasons I I'm not going to get into today a lot of",
    "start": "44239",
    "end": "51000"
  },
  {
    "text": "people have previously used uml to draw diagrams but that's not the case today",
    "start": "51000",
    "end": "56039"
  },
  {
    "text": "why are people not using uml I've literally heard of these possible excuses and these are",
    "start": "56039",
    "end": "62600"
  },
  {
    "text": "excuses so that leads us to an interesting situation people want to draw diagrams they don't want to use EML",
    "start": "62600",
    "end": "68439"
  },
  {
    "text": "so they kind of fall back to boxes and arrows and of course there's a bunch of issues with doing so so I created the C4",
    "start": "68439",
    "end": "74040"
  },
  {
    "text": "model essentially as a way to bring some structure into the typical adhoc boxes",
    "start": "74040",
    "end": "79280"
  },
  {
    "text": "and lines uh diagrams that people draw when they're trying to describe their software architectures the C4 model is",
    "start": "79280",
    "end": "85520"
  },
  {
    "text": "essentially based upon a set of four hierarchical abstractions we have software systems containers not Docker",
    "start": "85520",
    "end": "93200"
  },
  {
    "text": "I'm sorry I got the name first containers and co uh sorry components",
    "start": "93200",
    "end": "98360"
  },
  {
    "text": "and code so a software system is made up of one or more containers applications and data stores containers contain",
    "start": "98360",
    "end": "104680"
  },
  {
    "text": "components so this is a grouping of related functionality nice clear well defined interface running inside a",
    "start": "104680",
    "end": "109759"
  },
  {
    "text": "container and uh components are built from code so it's a set of four abstractions and then you have a set of",
    "start": "109759",
    "end": "116600"
  },
  {
    "text": "four hierarchical di uh four hierarchical diagrams that map onto those four levels of abstraction so C4",
    "start": "116600",
    "end": "122960"
  },
  {
    "text": "is actually named after the diagram types it's contexts containers components and code and really the",
    "start": "122960",
    "end": "129160"
  },
  {
    "text": "concept here is diagrams as Maps so I live in Jersey in the Channel Islands if you do a search on Google Maps for",
    "start": "129160",
    "end": "134760"
  },
  {
    "text": "Jersey you'll get that picture that's great if you want to know where the airport is and where the main town is",
    "start": "134760",
    "end": "139879"
  },
  {
    "text": "and how to get from one to the other if you don't know where Jersey is because you've never seen b as a child it's too",
    "start": "139879",
    "end": "146200"
  },
  {
    "text": "much detail too quickly I need there be a few of you so you can do the Google Maps prints the zoom out thing to get",
    "start": "146200",
    "end": "152280"
  },
  {
    "text": "some more context on the flip side you can zoom in and zoom in and eventually drop into Google Street View which is a",
    "start": "152280",
    "end": "158440"
  },
  {
    "text": "on to one mapping with the real world when the photos were taken and I want to do thing with software I want to do the",
    "start": "158440",
    "end": "164159"
  },
  {
    "text": "same thing with software architecture diagrams I want different levels of diagrams that allow me to tell different stories to different",
    "start": "164159",
    "end": "170159"
  },
  {
    "text": "audiences I'm going to explain the top two diagrams very briefly so the first",
    "start": "170159",
    "end": "175440"
  },
  {
    "text": "one's a system context diagram and it shows you the system you are focused on",
    "start": "175440",
    "end": "180800"
  },
  {
    "text": "describing designing and the world around it in terms of people and other",
    "start": "180800",
    "end": "186159"
  },
  {
    "text": "software systems so therefore in order to draw a system context diagram this is the set of questions you need to ask",
    "start": "186159",
    "end": "193640"
  },
  {
    "text": "what's the scope of the thing we are building here so what features sit inside what features sit outside who's",
    "start": "193640",
    "end": "199319"
  },
  {
    "text": "using it so who are the actors roles personas real users what sorts of things they doing and what are the system to",
    "start": "199319",
    "end": "206360"
  },
  {
    "text": "system integration points answer those questions and you can draft a system context diagram so the red box in the",
    "start": "206360",
    "end": "212200"
  },
  {
    "text": "middle is the thing that's being designed here this group has identified a couple of user types and a bunch of",
    "start": "212200",
    "end": "217400"
  },
  {
    "text": "external existing systems in the environment we do the pinch to zoom",
    "start": "217400",
    "end": "222480"
  },
  {
    "text": "thing on the red box now we can drop down to level two and draw a container diagram a container diagram requires a",
    "start": "222480",
    "end": "228519"
  },
  {
    "text": "different set of questions to be asked so what are the major Technology Building Blocks in terms of applications",
    "start": "228519",
    "end": "234920"
  },
  {
    "text": "and data stores what are the responsibilities of those building blocks what technology choices are there",
    "start": "234920",
    "end": "241280"
  },
  {
    "text": "and how do these building blocks communicate answer those questions and you can draft up a container diagram so",
    "start": "241280",
    "end": "247360"
  },
  {
    "text": "now we zoomed into that red system box and we're now showing the applications",
    "start": "247360",
    "end": "252640"
  },
  {
    "text": "and data stores that make up that software system so that's the really quick",
    "start": "252640",
    "end": "260199"
  },
  {
    "text": "intro I've had a lot of people say this to me relatively recently so I've only just heard of C4 I guess it's new it's",
    "start": "260880",
    "end": "268080"
  },
  {
    "text": "actually a lot older than people think so I tried to figure out the exact uh",
    "start": "268080",
    "end": "275479"
  },
  {
    "text": "kind of time that this was created and as far as I can work out it's somewhere around 2010 which might surprise some of",
    "start": "275479",
    "end": "282479"
  },
  {
    "text": "you so I did a talk at cucon London and although the C4 naming was not necessarily here at the time you can see",
    "start": "282479",
    "end": "289120"
  },
  {
    "text": "the concept is here there's like a wide angle view of your system a telephoto View and a macro View kind of zooming in",
    "start": "289120",
    "end": "295600"
  },
  {
    "text": "on the code a few months later in London I did another talk and we you can see that the C4 names have started to make",
    "start": "295600",
    "end": "302840"
  },
  {
    "text": "an appearance uh in this case it was context containers components and classes because I was mostly focused on",
    "start": "302840",
    "end": "309080"
  },
  {
    "text": "Java and C stuff the C4 name itself came about in around 2011 so this is when I",
    "start": "309080",
    "end": "315120"
  },
  {
    "text": "came up with that uh the acronym and then over the over the years you can see some of the other other Concepts uh kind",
    "start": "315120",
    "end": "321120"
  },
  {
    "text": "of start to emerge and evolve and somewhere around 2018 which was when I think the C4 website was created um",
    "start": "321120",
    "end": "329000"
  },
  {
    "text": "classes change to code to make it a bit more generic so it's been around for a while",
    "start": "329000",
    "end": "334759"
  },
  {
    "text": "lots of usage out there people ask me why I invented reinvented uml um I don't think I have",
    "start": "334759",
    "end": "344039"
  },
  {
    "start": "336000",
    "end": "369000"
  },
  {
    "text": "actually C4 wasn't designed to replace uml C4 was actually designed because",
    "start": "344039",
    "end": "350360"
  },
  {
    "text": "people were not using uml so I was teaching people how to do architecture I was teaching people how to draw soft",
    "start": "350360",
    "end": "356560"
  },
  {
    "text": "architecture diagrams but they didn't want to use uml so I I thought I'll just teach them how I do this and that's",
    "start": "356560",
    "end": "361880"
  },
  {
    "text": "essentially the background behind the C4 model if you break C4 down into its",
    "start": "361880",
    "end": "366919"
  },
  {
    "text": "constituent Parts it's actually very simple C4 is set of hierarchical",
    "start": "366919",
    "end": "372240"
  },
  {
    "start": "369000",
    "end": "508000"
  },
  {
    "text": "abstractions there are four of them the set of hierarchical diagram types there are four of them plus some other diagram",
    "start": "372240",
    "end": "378319"
  },
  {
    "text": "types I'll mention later it's notation independent so I'm not dictating a",
    "start": "378319",
    "end": "383400"
  },
  {
    "text": "notation here and therefore it's also tooling independent so that that's C4 in a nutshell if you",
    "start": "383400",
    "end": "390080"
  },
  {
    "text": "believe this is true which I do it's not a large jump of the",
    "start": "390080",
    "end": "395360"
  },
  {
    "text": "imagination to say we could take c4's abstractions and diagram types and use",
    "start": "395360",
    "end": "401759"
  },
  {
    "text": "uml as our notation Nobody Does this because they don't want to use uml but in theory you",
    "start": "401759",
    "end": "409120"
  },
  {
    "text": "could totally use uml or CML or archimate as your notational elements",
    "start": "409120",
    "end": "414879"
  },
  {
    "text": "here one of my pieces of advice around C4 is don't feel that you have to use all four levels so most organizations",
    "start": "414879",
    "end": "422240"
  },
  {
    "text": "use the top two the system context and the container levels they are quick to create they",
    "start": "422240",
    "end": "429000"
  },
  {
    "text": "give you lots of bang for your buck and they they're not that volatile once you",
    "start": "429000",
    "end": "434039"
  },
  {
    "text": "get down to levels three and four these are much more code focused levels every time you add a feature you potentially",
    "start": "434039",
    "end": "440280"
  },
  {
    "text": "are changing those level three and four diagrams so hence the advice use levels one and two use the others if they make",
    "start": "440280",
    "end": "446680"
  },
  {
    "text": "sense and there's some value there so that races the kind of interesting question if you're only recommending people use the top two or maybe three",
    "start": "446680",
    "end": "453400"
  },
  {
    "text": "levels why not call it something else like C2 plus 2 or C3 plus one or some",
    "start": "453400",
    "end": "458639"
  },
  {
    "text": "other weird combination of C's and numbers the answer is grounding so I presented you very",
    "start": "458639",
    "end": "464720"
  },
  {
    "text": "briefly the set of abstractions behind C4 we have a way to get from very high",
    "start": "464720",
    "end": "470919"
  },
  {
    "text": "level Software System abstractions through a bunch of layers down to the",
    "start": "470919",
    "end": "476319"
  },
  {
    "text": "code at the bottom if I remove the bottom one or two levels of abstraction",
    "start": "476319",
    "end": "482520"
  },
  {
    "text": "what you've now got are two high levels of abstraction somehow floating around but",
    "start": "482520",
    "end": "488159"
  },
  {
    "text": "not quite connected to a code base so I really like the traceability that having this set of abstraction provides it",
    "start": "488159",
    "end": "494800"
  },
  {
    "text": "provides a way to go top down and bottom up and have traceability and reduce the model code Gap and all of these good",
    "start": "494800",
    "end": "500800"
  },
  {
    "text": "things but you don't of course have to draw diagrams at those levels that that's why it's still called",
    "start": "500800",
    "end": "507159"
  },
  {
    "text": "C4 notation I I I get a bunch of questions around notation uh people tell",
    "start": "507240",
    "end": "512399"
  },
  {
    "start": "508000",
    "end": "779000"
  },
  {
    "text": "me that the blue and gray notation is boring oops I think this is my fault but",
    "start": "512399",
    "end": "518800"
  },
  {
    "text": "I'm not going to apologize for it so in order to draw some example diagrams for the C4 websites and my workshops I had",
    "start": "518800",
    "end": "525760"
  },
  {
    "text": "to choose some colors I chose blue and gray that's it as I said before the C4",
    "start": "525760",
    "end": "531680"
  },
  {
    "text": "model is actually notation independent so therefore other colors are available",
    "start": "531680",
    "end": "537120"
  },
  {
    "text": "now the problem here is the problem here is many tools have uh adopted C4 and",
    "start": "537120",
    "end": "543560"
  },
  {
    "text": "what they've done is they've copied my look and feel of my example diagrams and that's why when you go to C4 plant gml",
    "start": "543560",
    "end": "550079"
  },
  {
    "text": "or the draw.io templates or any other tool they have the same blue and gray",
    "start": "550079",
    "end": "555480"
  },
  {
    "text": "shapes so those diagram examples do still exist the blue and gray examples",
    "start": "555480",
    "end": "562240"
  },
  {
    "text": "still there in my slid set on the C4 model website however if you go to the",
    "start": "562240",
    "end": "567760"
  },
  {
    "text": "C4 model website and you refresh the page you might get different",
    "start": "567760",
    "end": "574880"
  },
  {
    "text": "colors now I I do apologize for this this annoys people because they're like I'm sure I was looking at a green",
    "start": "575800",
    "end": "581600"
  },
  {
    "text": "diagram a second ago and now it's red and I don't know what's going on here that's my fault and I apologize but this",
    "start": "581600",
    "end": "589240"
  },
  {
    "text": "whole thing about C4 is boring because it's blue and gray has gone away so that's a",
    "start": "589240",
    "end": "596360"
  },
  {
    "text": "win uh some of the C4 diagrams look very wordy they look very verbose and I've",
    "start": "596360",
    "end": "601920"
  },
  {
    "text": "seen some criticism online that says C4 is unclear because it forces you to put more text in the",
    "start": "601920",
    "end": "607000"
  },
  {
    "text": "diagrams so I I like to flip this on its head the reason I'm adding the text to the diagrams is actually to solve a",
    "start": "607000",
    "end": "613440"
  },
  {
    "text": "bunch of issues around ambiguity so here's an example",
    "start": "613440",
    "end": "618680"
  },
  {
    "text": "diagram it's very typical it's just a bunch of boxes with one or two words in",
    "start": "618680",
    "end": "624320"
  },
  {
    "text": "if you were to study this intently and then I ask you what do you think the fast system does the literal only answer",
    "start": "624320",
    "end": "629760"
  },
  {
    "text": "you can suggest is it stores files hooray thanks like having a box labeled",
    "start": "629760",
    "end": "635519"
  },
  {
    "text": "file system is not a good idea please do not do that but that's why I'm adding the words here I'm adding the words to",
    "start": "635519",
    "end": "642120"
  },
  {
    "text": "indicate responsibilities or features or data types being stored so now we can say that the file system is storing",
    "start": "642120",
    "end": "648880"
  },
  {
    "text": "search indexes so that's why maning the additional text is really to Pro provide",
    "start": "648880",
    "end": "654000"
  },
  {
    "text": "an ated glance view of what's going on here and of course the software systems that we that we build have feature they",
    "start": "654000",
    "end": "660320"
  },
  {
    "text": "have function when we look at a set of floor plans for a house it's",
    "start": "660320",
    "end": "665920"
  },
  {
    "text": "obvious but with software architecture diagrams it's less",
    "start": "665920",
    "end": "671120"
  },
  {
    "text": "obvious the tradeoff here is the diagrams are wordy and I get that so my",
    "start": "671279",
    "end": "678120"
  },
  {
    "text": "advice here is keep the words as short as possible single sentence three four",
    "start": "678120",
    "end": "684480"
  },
  {
    "text": "five maybe six bullet points if you have to do it that way if you require a another version of the same diagram for",
    "start": "684480",
    "end": "691600"
  },
  {
    "text": "doing a presentation because you don't want people distracted by the text just turn that extra detail",
    "start": "691600",
    "end": "698480"
  },
  {
    "text": "off so for me this is now a tooling issue what you want is you want some tooling that can just turn this detail",
    "start": "698480",
    "end": "704560"
  },
  {
    "text": "on and off in VI this is a real pain because now you have to copy paste the",
    "start": "704560",
    "end": "709600"
  },
  {
    "text": "file and double click in every box and remove all the text and then recenter everything so for me this is now a",
    "start": "709600",
    "end": "714839"
  },
  {
    "text": "tooling issue we're just showing different versions of the same information at different levels of detail",
    "start": "714839",
    "end": "720920"
  },
  {
    "text": "on a similar on a similar thought uh I've I've heard a few people say this we found the metadata was getting in the",
    "start": "720920",
    "end": "727600"
  },
  {
    "text": "way what do I mean by the metadata on the C4 diagrams you'll see it says the name and then it has this is a container",
    "start": "727600",
    "end": "734399"
  },
  {
    "text": "or this is a software system and it's got some tech choices in there again I really like this because it removes a",
    "start": "734399",
    "end": "739839"
  },
  {
    "text": "lot of the questions around Ambi uh around abstraction level so if you have a box with a name like what is this is",
    "start": "739839",
    "end": "745680"
  },
  {
    "text": "it a thing we deploy or is it a system or is it something in the code having that additional metadata I think",
    "start": "745680",
    "end": "751360"
  },
  {
    "text": "really helps here but again a lot of people kind of find this",
    "start": "751360",
    "end": "756120"
  },
  {
    "text": "cluttered you can remove the better data but now I think we're back to square one",
    "start": "756480",
    "end": "762480"
  },
  {
    "text": "you know if you've never seen this diagram before it's not obvious what the Deployable parts are what are the",
    "start": "762480",
    "end": "767839"
  },
  {
    "text": "applications what are the systems we've lost that additional metadata we've lost those abstraction types really being",
    "start": "767839",
    "end": "773480"
  },
  {
    "text": "shown on the diagrams so my recommendation here is keep the metadata if possible",
    "start": "773480",
    "end": "780560"
  },
  {
    "start": "779000",
    "end": "894000"
  },
  {
    "text": "viewpoints um people tell me that C4 is not good at showing decisions is the correct answer it was",
    "start": "780600",
    "end": "788399"
  },
  {
    "text": "never designed to and architecture diagrams shouldn't show decisions either",
    "start": "788399",
    "end": "793519"
  },
  {
    "text": "architecture diagrams show you the outcome of the decision- making process",
    "start": "793519",
    "end": "798760"
  },
  {
    "text": "right all of that design work you do in your teams collaboratively the diagram show the outcome of that so that begs a question",
    "start": "798760",
    "end": "806199"
  },
  {
    "text": "how do you document decisions and the answer is ADR right it's pretty straightforward you",
    "start": "806199",
    "end": "811440"
  },
  {
    "text": "have a set of adrs and a set of architect diagrams there should be relationship some relationship and traceability between these two things",
    "start": "811440",
    "end": "817199"
  },
  {
    "text": "but essentially keep these artifacts separate is my advice here uh people tell me that C4 omits the deployment",
    "start": "817199",
    "end": "823639"
  },
  {
    "text": "story and again I think this is somewhat my fault C4 is named after the four static structure diagram types but you",
    "start": "823639",
    "end": "830720"
  },
  {
    "text": "do need other diagram types like deployment to tell more of the story so the C4 model itself was inspired by some",
    "start": "830720",
    "end": "837480"
  },
  {
    "text": "of uml and some of Philip CR 4 plus1 model in 4+1 you do have a different uh",
    "start": "837480",
    "end": "842880"
  },
  {
    "text": "a bunch of different views of the same Software System one of which is the physical view here so therefore when you",
    "start": "842880",
    "end": "848600"
  },
  {
    "text": "go to the C4 websites there are a bunch of supplementary diagrams described one of those is a deployment diagram and the",
    "start": "848600",
    "end": "855320"
  },
  {
    "text": "deployment diagram in C4 allows you to show the mapping of C4 containers so applications and data source onto things",
    "start": "855320",
    "end": "862720"
  },
  {
    "text": "in the infrastructure world like servers Docker containers so if you have",
    "start": "862720",
    "end": "868279"
  },
  {
    "text": "like a spring boot app and you're deploying it into a Docker container there's actually a really nice onetoone uh convenient coincidental mapping",
    "start": "868279",
    "end": "874399"
  },
  {
    "text": "between a C4 container and a Docker container and that's what these deployment diagrams allow you to do you",
    "start": "874399",
    "end": "880079"
  },
  {
    "text": "can also draw your typical Cloud architecture diagrams with all the nice AWS as your gcp icons Etc but again",
    "start": "880079",
    "end": "886959"
  },
  {
    "text": "using the C4 concept and mapping C4 containers onto your Cloud",
    "start": "886959",
    "end": "893519"
  },
  {
    "start": "894000",
    "end": "999000"
  },
  {
    "text": "infrastructure the problem with defining four levels of abst raction is that many",
    "start": "895839",
    "end": "901000"
  },
  {
    "text": "people are going to say it's not enough for them for reasons around scale",
    "start": "901000",
    "end": "907920"
  },
  {
    "text": "complexity and so on and I've got two takes on",
    "start": "907920",
    "end": "913279"
  },
  {
    "text": "this the first is this this is a lot of words but this is from a blog post about something called concrete diagramming",
    "start": "913279",
    "end": "918959"
  },
  {
    "text": "and it starts off the problem is that systems today have many different kinds of things I agree servers databases",
    "start": "918959",
    "end": "926240"
  },
  {
    "text": "virtualized containers apis pipelines for packages libraries and all the other stuff we build and really summary here",
    "start": "926240",
    "end": "934120"
  },
  {
    "text": "is how do we force all of these things into C4s",
    "start": "934120",
    "end": "939480"
  },
  {
    "text": "abstraction the first point here is that many of the things in that second sentence are deployment",
    "start": "939480",
    "end": "947279"
  },
  {
    "text": "aspects so I think step one here is make sure that in your mind you separate out",
    "start": "947279",
    "end": "952639"
  },
  {
    "text": "what are the static things in my software architecture and what are the deployment things and don't forget the",
    "start": "952639",
    "end": "959000"
  },
  {
    "text": "deployment things will vary depending on your deployment environment your development deployment environment is",
    "start": "959000",
    "end": "965120"
  },
  {
    "text": "going to look vastly different to your production Cloud architecture deployment environment so that's why I'm a big fan",
    "start": "965120",
    "end": "971639"
  },
  {
    "text": "of keeping the deployment stuff separate from the static stuff so to go on further um in that same article is this",
    "start": "971639",
    "end": "979880"
  },
  {
    "text": "quote a database is a database debating whether it is also a C4 container or C4",
    "start": "979880",
    "end": "986279"
  },
  {
    "text": "component just isn't worthwhile and it's at this point I I do",
    "start": "986279",
    "end": "992639"
  },
  {
    "text": "disagree a database is a database what's a",
    "start": "992639",
    "end": "1000480"
  },
  {
    "start": "999000",
    "end": "1194000"
  },
  {
    "text": "database is this referring to a database server a database schema a collection of",
    "start": "1000480",
    "end": "1008040"
  },
  {
    "text": "data a collection of tables the word database is just too vague in many",
    "start": "1008040",
    "end": "1014160"
  },
  {
    "text": "situations for example you'll hear a lot of people say this microservices should",
    "start": "1014160",
    "end": "1019319"
  },
  {
    "text": "not share a database I'm happy for multiple services",
    "start": "1019319",
    "end": "1024720"
  },
  {
    "text": "to store data on a single Oracle rack cluster in the organization a single",
    "start": "1024720",
    "end": "1030918"
  },
  {
    "text": "database cluster a single database server I'm less happy if multiple",
    "start": "1030919",
    "end": "1036678"
  },
  {
    "text": "microservices are sticking data in the same relational database schema where",
    "start": "1036679",
    "end": "1041720"
  },
  {
    "text": "you can prent you to joins from one Services tables to another Services tables so I think something we need to",
    "start": "1041720",
    "end": "1047880"
  },
  {
    "text": "do here is be much more precise with the terminology that we're using and actually that's what this whole C4 thing",
    "start": "1047880",
    "end": "1054520"
  },
  {
    "text": "gives you trying to map your static structure elements your static structure",
    "start": "1054520",
    "end": "1059760"
  },
  {
    "text": "building blocks onto the systems containers components forces you to",
    "start": "1059760",
    "end": "1064919"
  },
  {
    "text": "think it forces you to have some conversations what is this thing is it being shared with other things in the",
    "start": "1064919",
    "end": "1071120"
  },
  {
    "text": "organization and so on and so forth and that's actually what leads me to this statement the power C4 the diagrams are",
    "start": "1071120",
    "end": "1076840"
  },
  {
    "text": "super useful don't get me wrong lots of people love the C4 diagrams but the actual power behind C4 is that small set",
    "start": "1076840",
    "end": "1082679"
  },
  {
    "text": "of named abstractions it allows teams to align their mental models of the systems",
    "start": "1082679",
    "end": "1089280"
  },
  {
    "text": "that that they are building and you don't have to take my word for this uh there was an article published on infoq",
    "start": "1089280",
    "end": "1095039"
  },
  {
    "text": "in July this year and it turns out decathlon are using C4 which I I didn't",
    "start": "1095039",
    "end": "1100400"
  },
  {
    "text": "know I've never been to visit them and there's this one block in the uh in the interview and it says this the SE",
    "start": "1100400",
    "end": "1105440"
  },
  {
    "text": "formals inherency uh declarative not sure about that um it requires teams to address and",
    "start": "1105440",
    "end": "1111080"
  },
  {
    "text": "synchronize their mental models of code components containers and the context of applications so that's really people",
    "start": "1111080",
    "end": "1117400"
  },
  {
    "text": "saying yeah this is about synchronizing mental molds both within our team and outside of our team which is pretty",
    "start": "1117400",
    "end": "1123320"
  },
  {
    "text": "cool so that's kind of thread one with the C4 thing is too limiting um there's",
    "start": "1123320",
    "end": "1129400"
  },
  {
    "text": "a set of tooling out there called like C4 and when you go to the the like C4",
    "start": "1129400",
    "end": "1134840"
  },
  {
    "text": "homepage it says this inspired by C4 model and structurized SL which is my own tooling but with some flexibility",
    "start": "1134840",
    "end": "1141960"
  },
  {
    "text": "you define your own notation I can do that too custom element types and any number of nested levels in the",
    "start": "1141960",
    "end": "1148520"
  },
  {
    "text": "architecture model perfectly tailored to your needs so essentially what this is is it's like my structurized tooling but",
    "start": "1148520",
    "end": "1155960"
  },
  {
    "text": "it allows you to have more than four levels of abstraction and you can Define and customize what those levels of",
    "start": "1155960",
    "end": "1162799"
  },
  {
    "text": "abstraction are and this sounds wonderful for a bunch of reasons number one C4 seems too",
    "start": "1162799",
    "end": "1169000"
  },
  {
    "text": "limiting with just four things I want to add more things because our our organization's unique and special and we",
    "start": "1169000",
    "end": "1175720"
  },
  {
    "text": "have a certain scale and complexity that C4 can't cope with more about that later so this seems appealing right this seems",
    "start": "1175720",
    "end": "1182520"
  },
  {
    "text": "to remove all of the the rigidity of C4 and give you some Freedom the problem is and this is the",
    "start": "1182520",
    "end": "1190480"
  },
  {
    "text": "example from the the like C4 website what does this",
    "start": "1190480",
    "end": "1197440"
  },
  {
    "start": "1194000",
    "end": "1329000"
  },
  {
    "text": "mean so so we're defining a service which has components inside it and then",
    "start": "1197440",
    "end": "1204240"
  },
  {
    "text": "those components have more components inside those so we have two levels of components nested I don't know what this",
    "start": "1204240",
    "end": "1212280"
  },
  {
    "text": "means this is exactly problem uml has a uml component is described as a modular",
    "start": "1212280",
    "end": "1218480"
  },
  {
    "text": "unit that's replaceable within its environment it's the same thing I don't know what this means from a software",
    "start": "1218480",
    "end": "1223600"
  },
  {
    "text": "development perspective someone posted an issue about some sort of bug in ley4",
    "start": "1223600",
    "end": "1229240"
  },
  {
    "text": "and the example they used to reproduce the issue was this like even more levels of nested components the fact that you",
    "start": "1229240",
    "end": "1235880"
  },
  {
    "text": "can do this in a uh a domain specific language to describe software architecture kind of bugs",
    "start": "1235880",
    "end": "1242880"
  },
  {
    "text": "me so let's step back for a second what's what's the point of this again it's to try and remove the rigidity",
    "start": "1242880",
    "end": "1248200"
  },
  {
    "text": "around C4 and then having those four levels of abstractions so 20 plus years ago people",
    "start": "1248200",
    "end": "1255000"
  },
  {
    "text": "are doing ad hoc boxes and arrows I kind of come along go right let's let's put some structure around this and I defined",
    "start": "1255000",
    "end": "1261320"
  },
  {
    "text": "a bunch of abstractions and that's essentially where C4 comes from and now people are saying well C4 is too rigid",
    "start": "1261320",
    "end": "1267440"
  },
  {
    "text": "we want more flexible abstraction levels so in theory it sounds like concrete",
    "start": "1267440",
    "end": "1274200"
  },
  {
    "text": "diagramming and like C4 are taking you even further and kind of improving the experience by adding the ability to be",
    "start": "1274200",
    "end": "1281919"
  },
  {
    "text": "much more flexible the problem here is it turns out defining abstractions is",
    "start": "1281919",
    "end": "1287360"
  },
  {
    "text": "really hard trust me I've only got four and I've had to constantly revisit the definitions of",
    "start": "1287360",
    "end": "1294279"
  },
  {
    "text": "those four levels of abstractions to try and answer all the questions I've gathered up over the 10 or 15 years I've",
    "start": "1294279",
    "end": "1300120"
  },
  {
    "text": "been teaching C4 if you're not willing to put the effort in to properly Define those additional flexible abstractions I",
    "start": "1300120",
    "end": "1308080"
  },
  {
    "text": "think what actually happens is rather than extending this thing you go around in a circle and get back to what you had",
    "start": "1308080",
    "end": "1315120"
  },
  {
    "text": "before right any degree of ambiguity in your new additional abstractions takes you back to the start",
    "start": "1315120",
    "end": "1322640"
  },
  {
    "text": "so that's my cautionary tale about feeling that C4 is too",
    "start": "1322640",
    "end": "1328919"
  },
  {
    "text": "limited why is C4 too limited it's because I think people are mixing Concepts in their mind and they're",
    "start": "1328919",
    "end": "1334720"
  },
  {
    "start": "1329000",
    "end": "1480000"
  },
  {
    "text": "trying to Define everything as abstractions when perhaps some things are best suited to to being",
    "start": "1334720",
    "end": "1339880"
  },
  {
    "text": "organizational structures rather than abstractions in their own right so people ask me what are my thoughts on uh",
    "start": "1339880",
    "end": "1345159"
  },
  {
    "text": "modeling additional abstractions and so the thoughts of things they're trying to model are",
    "start": "1345159",
    "end": "1351720"
  },
  {
    "text": "subsystems so if you have a gigantic monolithic Software System you might want to create a simpler diagram showing",
    "start": "1351720",
    "end": "1359000"
  },
  {
    "text": "the subsystems that exist in that system I don't think this is particularly useful diagram bounded contexts so if",
    "start": "1359000",
    "end": "1367360"
  },
  {
    "text": "you have a single monolithic system which is uh covering a whole bunch of different DDD bounded",
    "start": "1367360",
    "end": "1372799"
  },
  {
    "text": "contexts the lower level diagrams look horrendous so let's draw a very simplified version showing the various",
    "start": "1372799",
    "end": "1378120"
  },
  {
    "text": "boundary context and how they interoperate I don't think this is necessarily useful diagram either and",
    "start": "1378120",
    "end": "1384360"
  },
  {
    "text": "layers right you have a gigantic monolithic application and the detail looks",
    "start": "1384360",
    "end": "1390000"
  },
  {
    "text": "complicated let's draw a simple version with layers because it removes all of the Clutter again I don't think this is",
    "start": "1390000",
    "end": "1395919"
  },
  {
    "text": "particularly useful either so I'm not saying that these Concepts subsystems boundary contexts and layers are not",
    "start": "1395919",
    "end": "1402039"
  },
  {
    "text": "useful I'm saying I don't think they are abstractions in their own right I think they're really organizational construct",
    "start": "1402039",
    "end": "1409240"
  },
  {
    "text": "and perhaps that's a better way to think about these Concepts when you're drawing something like a C4 architecture diagram",
    "start": "1409240",
    "end": "1414799"
  },
  {
    "text": "so with the layers example imagine we bu we're building a Java spring boot spring MVC web application and we have a whole",
    "start": "1414799",
    "end": "1421919"
  },
  {
    "text": "bunch of components and those components are organized into architectural layers we have like a a web layer and a",
    "start": "1421919",
    "end": "1428799"
  },
  {
    "text": "business or service layer and a data layer so in this example of the diagram I'm showing you we have a couple of",
    "start": "1428799",
    "end": "1434880"
  },
  {
    "text": "services represented as components a couple of repositories represent entered as components and I've drawn a a dashed",
    "start": "1434880",
    "end": "1442320"
  },
  {
    "text": "line a dash box around these things to say the stuff in here is the service",
    "start": "1442320",
    "end": "1447960"
  },
  {
    "text": "layer so now we're now showing components organized into a service layer similar with the repository layer",
    "start": "1447960",
    "end": "1455279"
  },
  {
    "text": "if you want to show that those repository components come from a particular build time",
    "start": "1455279",
    "end": "1462039"
  },
  {
    "text": "module like a jar file you could do that too so I think I'm using uh layers and",
    "start": "1462039",
    "end": "1470159"
  },
  {
    "text": "uh module boundaries here as organizational construct on top of the C4",
    "start": "1470159",
    "end": "1475840"
  },
  {
    "text": "abstractions and we'll see this concept pop up again in a second as well message driven architectures always",
    "start": "1475840",
    "end": "1482360"
  },
  {
    "start": "1480000",
    "end": "1688000"
  },
  {
    "text": "gets people so how do you draw message driven architectures with C4 it's very tempting to draw this so we have a bunch of services",
    "start": "1482360",
    "end": "1490000"
  },
  {
    "text": "pushing messages into a message bus and those are being forwarded on to a bunch of other services on uh the right hand",
    "start": "1490000",
    "end": "1495600"
  },
  {
    "text": "side there this is not the best approach for modeling message based architectures with C4 why because you get a hub and",
    "start": "1495600",
    "end": "1502880"
  },
  {
    "text": "spoke architecture everything goes in everything comes out you can't see the real detail",
    "start": "1502880",
    "end": "1508039"
  },
  {
    "text": "here notice I'm trying to represent the message bus as a C4",
    "start": "1508039",
    "end": "1513159"
  },
  {
    "text": "container so rabbit mq or CFA I'm trying to model that here as a C4 container",
    "start": "1513159",
    "end": "1518520"
  },
  {
    "text": "that's the incorrect approach hence the little X in the corner so how would I do",
    "start": "1518520",
    "end": "1523840"
  },
  {
    "text": "this I'd probably do it like this imagine that service a has a pointto",
    "start": "1523840",
    "end": "1528919"
  },
  {
    "text": "Point coupling via uh via a que called X to service C I'm going to draw it like",
    "start": "1528919",
    "end": "1534760"
  },
  {
    "text": "that on the top and maybe there's a similar Point SP coupling between service B and D via another uh Q called",
    "start": "1534760",
    "end": "1542640"
  },
  {
    "text": "Y in this case so what I'm doing here is I'm treating the individual topics and cues",
    "start": "1542640",
    "end": "1548399"
  },
  {
    "text": "as C4 containers why am I doing this a C4 container is an application no or a data",
    "start": "1548399",
    "end": "1555200"
  },
  {
    "text": "store yes an individual Copic is a data store store it's a bucket something",
    "start": "1555200",
    "end": "1560360"
  },
  {
    "text": "sticks messages in and one or more processes pull messages out we can now separate our static view",
    "start": "1560360",
    "end": "1567919"
  },
  {
    "text": "of the world from our deployment view of the world so if I was building this at development time I might have both of",
    "start": "1567919",
    "end": "1574200"
  },
  {
    "text": "these cues on a single rabbit mq broker on my laptop at at deployment time for",
    "start": "1574200",
    "end": "1581159"
  },
  {
    "text": "production I might have cluster one for QX and a separate cluster maybe even",
    "start": "1581159",
    "end": "1587399"
  },
  {
    "text": "even in a different AWS region for example running qy so I think this nicely fits in with a lot of the other",
    "start": "1587399",
    "end": "1593480"
  },
  {
    "text": "advice I've already given you as well if you generally have a point topoint coupling via a cur or topic and",
    "start": "1593480",
    "end": "1599919"
  },
  {
    "text": "it's a one to one you could argue that that just adds clutter you know we've got these execution topics in the middle",
    "start": "1599919",
    "end": "1607000"
  },
  {
    "text": "why not just draw the arrow between the services and you could do so one of the things with C4 diagramming and modeling",
    "start": "1607000",
    "end": "1613559"
  },
  {
    "text": "is that there's often not a single correct approach but we have multiple approaches which all all kind of the",
    "start": "1613559",
    "end": "1618720"
  },
  {
    "text": "same but they just vary in terms of visual clutter visual noise and simplicity so this one's fine too so now",
    "start": "1618720",
    "end": "1624919"
  },
  {
    "text": "we have a point too coupling we can see that one to one mapping between the various services and I've added via QX",
    "start": "1624919",
    "end": "1631080"
  },
  {
    "text": "on the Arrow so this is a much uh simpler notation from a visual perspective but the whole topic QE thing",
    "start": "1631080",
    "end": "1638279"
  },
  {
    "text": "is a bit more implied and implicit some people like the first version some people like the second version they're",
    "start": "1638279",
    "end": "1644039"
  },
  {
    "text": "both fine as far as I'm concerned if you have a so you'll notice all the arrows so far",
    "start": "1644039",
    "end": "1651080"
  },
  {
    "text": "have gone from the left to the right if you have more of a genuine kind of Pub sub architecture especially when you",
    "start": "1651080",
    "end": "1657399"
  },
  {
    "text": "have a on to many architecture you could also flip some of the arrows and change the text so here I'm saying that service",
    "start": "1657399",
    "end": "1664320"
  },
  {
    "text": "a is publishing message to QX and this thing is subscribing to messages from it",
    "start": "1664320",
    "end": "1669880"
  },
  {
    "text": "and I think that works better for the bottom diagram here where we've got a genuine kind of one to many Pub sub thing going on so don't be afraid to",
    "start": "1669880",
    "end": "1677080"
  },
  {
    "text": "experiment aror Direction and particularly the description on the errors but yeah essentially cues and",
    "start": "1677080",
    "end": "1682200"
  },
  {
    "text": "topics as containers is the best way to model message driven",
    "start": "1682200",
    "end": "1687840"
  },
  {
    "start": "1688000",
    "end": "1807000"
  },
  {
    "text": "architectures shared libraries is another thing I always get asked quite a lot about how do we model shared",
    "start": "1688000",
    "end": "1693399"
  },
  {
    "text": "libraries and shared code in C4 imagine you have a couple of applications and those two applications",
    "start": "1693399",
    "end": "1700640"
  },
  {
    "text": "are making use of a shared loging component which is coming from a shared Library so maybe it's on net or M",
    "start": "1700640",
    "end": "1708320"
  },
  {
    "text": "Central or mpm or whatever it might be there's a temptation to model that shared Library as a C4",
    "start": "1708320",
    "end": "1716799"
  },
  {
    "text": "container because then you can have one version of that indicating it's shared",
    "start": "1716799",
    "end": "1721840"
  },
  {
    "text": "and applications kind of pointing to it X in the corner no this is not the",
    "start": "1721840",
    "end": "1728440"
  },
  {
    "text": "best way to do it so how do you show shared code if you think about this from from a developer perspective youve got",
    "start": "1728440",
    "end": "1735600"
  },
  {
    "text": "two applications running you've got shared code running here and shared code",
    "start": "1735600",
    "end": "1741080"
  },
  {
    "text": "running here so at deployment time you actually have two copies of that shared code running in two s inside two",
    "start": "1741080",
    "end": "1748120"
  },
  {
    "text": "separate applications inside two separate container boundaries so therefore that's what you",
    "start": "1748120",
    "end": "1754519"
  },
  {
    "text": "draw so now we're showing we've got two application containers and both of those have a copy of the login component which",
    "start": "1754519",
    "end": "1762480"
  },
  {
    "text": "is shared code now some of you might be thinking well this is not highlighting that loing",
    "start": "1762480",
    "end": "1768559"
  },
  {
    "text": "components are shared code and you're exactly correct so what you might want to do now is add a color coding so maybe",
    "start": "1768559",
    "end": "1775519"
  },
  {
    "text": "you add a color coding I've used blue and gray other colors are available of course uh to to indicate that these",
    "start": "1775519",
    "end": "1782360"
  },
  {
    "text": "things are shared code and of course you make sure that this is present in your diagram key if you want to add some of",
    "start": "1782360",
    "end": "1788600"
  },
  {
    "text": "the other techniques I've already talked about in terms of organizational structures we can now add a little",
    "start": "1788600",
    "end": "1794080"
  },
  {
    "text": "bounding box around that loging component to say hey this is coming from a shared Library Das J shared shared D",
    "start": "1794080",
    "end": "1800000"
  },
  {
    "text": "library. J file so again we're kind of mixing and matching some of these Concepts",
    "start": "1800000",
    "end": "1805799"
  },
  {
    "text": "here microservices this is probably the area that I see a lot of teams really",
    "start": "1806200",
    "end": "1811919"
  },
  {
    "start": "1807000",
    "end": "1888000"
  },
  {
    "text": "struggling with in terms of Z4 uh it's unfortunate that one of the more popular software architecture books out there",
    "start": "1811919",
    "end": "1818320"
  },
  {
    "text": "said this C4 is more suited to monolithic architectures and doesn't support distributed architectures well",
    "start": "1818320",
    "end": "1825880"
  },
  {
    "text": "this is not true I've had a conversation with the author we have different opinions but this is not true from my",
    "start": "1825880",
    "end": "1832320"
  },
  {
    "text": "perspective so how do people attempt to model micros servic architectures a lot of people start like this they'll say",
    "start": "1832320",
    "end": "1838480"
  },
  {
    "text": "we're modeling microservices as containers with apis and database schemas as components inside those",
    "start": "1838480",
    "end": "1846840"
  },
  {
    "text": "containers in the C4 model components are not individually separately runnable",
    "start": "1846840",
    "end": "1853200"
  },
  {
    "text": "things so representing an API and a database schema as C4 components doesn't",
    "start": "1853200",
    "end": "1858840"
  },
  {
    "text": "fit the abstractions and what's happened here is they've started one level too low which",
    "start": "1858840",
    "end": "1864720"
  },
  {
    "text": "has now forced them down more levels unnecessarily so how do you model",
    "start": "1864720",
    "end": "1871638"
  },
  {
    "text": "microservices you have some options unfortunately so a microservice should be modeled as either a software system a",
    "start": "1872000",
    "end": "1879480"
  },
  {
    "text": "container or a grouping of containers now I'm going to take you through a little scenario so we can see",
    "start": "1879480",
    "end": "1885799"
  },
  {
    "text": "all of these things in action so let IM we work for a small startup we have two or three developers we're all one team",
    "start": "1885799",
    "end": "1891679"
  },
  {
    "start": "1888000",
    "end": "1932000"
  },
  {
    "text": "we want to build a system and we're going to build version one as a",
    "start": "1891679",
    "end": "1897000"
  },
  {
    "text": "monolith this is our context diagram so our context diagram says we are building Software System X it's delivering uh",
    "start": "1897000",
    "end": "1904360"
  },
  {
    "text": "business capabilities a b and c to our users nice and simple our container",
    "start": "1904360",
    "end": "1909679"
  },
  {
    "text": "diagram because we're building a monolith it's a monolithic web application providing a monolithic UI",
    "start": "1909679",
    "end": "1914840"
  },
  {
    "text": "talking to a monolithic database schema good so far perfect so now we've got",
    "start": "1914840",
    "end": "1920519"
  },
  {
    "text": "some customs we've got some traction we have some money coming in we're seeing some things start to slow us down in",
    "start": "1920519",
    "end": "1926159"
  },
  {
    "text": "terms of having a a single repository maybe um maybe you've got some scaling issues so we want to start now moving",
    "start": "1926159",
    "end": "1933399"
  },
  {
    "start": "1932000",
    "end": "2083000"
  },
  {
    "text": "towards a microservices start architecture now this raises the question what is a microservice I'm",
    "start": "1933399",
    "end": "1939080"
  },
  {
    "text": "going to fall back on the James Lewis Martin Fowler definition that you can find on Martin F's website and the uh",
    "start": "1939080",
    "end": "1946360"
  },
  {
    "text": "the thing starts out like this in short the microservice architecture style is an approach to developing a single",
    "start": "1946360",
    "end": "1951440"
  },
  {
    "text": "application as a suite of small Services each running in its own process and communicating with light lightweight",
    "start": "1951440",
    "end": "1959039"
  },
  {
    "text": "mechanisms I like this but I want to see for it so I'm going to change one",
    "start": "1959039",
    "end": "1965360"
  },
  {
    "text": "word I'm going to say that the micros micros service architecture style is an approach to developing a single Software",
    "start": "1965360",
    "end": "1972799"
  },
  {
    "text": "System as a collection of smaller services so",
    "start": "1972799",
    "end": "1978240"
  },
  {
    "text": "our context diagram is the same so in this example we're still one team building all of the software inside this",
    "start": "1978240",
    "end": "1986240"
  },
  {
    "text": "uh small startup our container diagram is now going to look different so we're going to keep the monolithic web UI and",
    "start": "1986240",
    "end": "1993279"
  },
  {
    "text": "we're going to split out capabilities a b and c into separate Services Each of",
    "start": "1993279",
    "end": "1998799"
  },
  {
    "text": "which is going to have its own separate database schema so each service is now",
    "start": "1998799",
    "end": "2005279"
  },
  {
    "text": "essentially a combination of two things it's an API thing like a spring boot app talking to a single relational database",
    "start": "2005279",
    "end": "2013039"
  },
  {
    "text": "schema now in this example I've used color coding to show there's a relationship between the various pairs",
    "start": "2013039",
    "end": "2018120"
  },
  {
    "text": "of the elements if you want to be more explicit we can do the organizational thing once again so here I've added some",
    "start": "2018120",
    "end": "2024360"
  },
  {
    "text": "boundaries we can see that service a is the top two things B is the middle two c is the bottom",
    "start": "2024360",
    "end": "2030080"
  },
  {
    "text": "two imagine our business is growing we're now adding capability D to our system and maybe capability D is",
    "start": "2030080",
    "end": "2037960"
  },
  {
    "text": "implemented by a single AWS Lambda written in Python it's the same thing as before but",
    "start": "2037960",
    "end": "2044480"
  },
  {
    "text": "now we have a single seful container essentially being that service you know imagine this thing is totally stateless",
    "start": "2044480",
    "end": "2050200"
  },
  {
    "text": "it doesn't S any data so this diagram shows you two of those options a micros",
    "start": "2050200",
    "end": "2055800"
  },
  {
    "text": "service is either a single container like we have at the bottom or it's a grouping of containers so that knocks",
    "start": "2055800",
    "end": "2062000"
  },
  {
    "text": "off two of those options right there the Assumption here of course is we're still one development team",
    "start": "2062000",
    "end": "2068320"
  },
  {
    "text": "remember the microservices architecture style is a way to develop a single Software System with a smaller set of",
    "start": "2068320",
    "end": "2073398"
  },
  {
    "text": "services so I'm saying here all of these Services live inside the Software System boundary we're all one team we can",
    "start": "2073399",
    "end": "2079398"
  },
  {
    "text": "change any of these Services as a team so now imagine we've got tons of money coming in and we're going to do Conway's",
    "start": "2079399",
    "end": "2085560"
  },
  {
    "start": "2083000",
    "end": "2171000"
  },
  {
    "text": "law we're going to lean on mic Services we're going to start pushing mic",
    "start": "2085560",
    "end": "2090599"
  },
  {
    "text": "Services out of our team boundary when to spin up new teams to own separate Services because it starts to make",
    "start": "2090599",
    "end": "2096079"
  },
  {
    "text": "things much more efficient I'm going to remain on team X building Software System X and I'm going to spin all the",
    "start": "2096079",
    "end": "2102320"
  },
  {
    "text": "other services into that own individual teams my context diagram is now",
    "start": "2102320",
    "end": "2107880"
  },
  {
    "text": "different so my context diagram says I'm building system X our users use my",
    "start": "2107880",
    "end": "2112960"
  },
  {
    "text": "system and I have a dependency now to these other services so in this example we're treating all of the services as",
    "start": "2112960",
    "end": "2119320"
  },
  {
    "text": "separate software systems you folks here a building service a I can't see your internal implementation details B same",
    "start": "2119320",
    "end": "2125839"
  },
  {
    "text": "deal c d etc etc my container diagram is still the",
    "start": "2125839",
    "end": "2131000"
  },
  {
    "text": "monolithic web application but again now I'm talking to those external Services mapped as software",
    "start": "2131000",
    "end": "2137359"
  },
  {
    "text": "systems if you folks have all joined service A's team your context diagram",
    "start": "2137359",
    "end": "2143079"
  },
  {
    "text": "looks like this this is your system and you have an inbound dependency from my system and when we zoom into your con",
    "start": "2143079",
    "end": "2149920"
  },
  {
    "text": "your container diagram it looks like this so you are building that service comprised of an API thing Talk work into",
    "start": "2149920",
    "end": "2155800"
  },
  {
    "text": "a database thing so so here we're using uh we're using the software system exraction as a way to describe a micros",
    "start": "2155800",
    "end": "2162839"
  },
  {
    "text": "service and really theistic here is team boundary can you see the implementation",
    "start": "2162839",
    "end": "2169800"
  },
  {
    "text": "details micr frontends is an even longer story uh if you are using micr frontends",
    "start": "2169800",
    "end": "2175640"
  },
  {
    "start": "2171000",
    "end": "2196000"
  },
  {
    "text": "and you're struggling my advice is look at the integration approach are you providing a set of JavaScript components",
    "start": "2175640",
    "end": "2182359"
  },
  {
    "text": "accessible via mpm which you're embedding into a page or are you doing more of a kind of standalone um single",
    "start": "2182359",
    "end": "2188280"
  },
  {
    "text": "Software System vertical slice uh iframe type approach the integration approach will lean you in the right",
    "start": "2188280",
    "end": "2196280"
  },
  {
    "start": "2196000",
    "end": "2318000"
  },
  {
    "text": "direction dependencies to external containers so my recommendation is when you're drawing a container diagram you",
    "start": "2196280",
    "end": "2202520"
  },
  {
    "text": "only show containers inside your Software System boundary so for example imagine I'm building a system called a",
    "start": "2202520",
    "end": "2209000"
  },
  {
    "text": "it's comprised of a spring boot app and I have a dependency on something you folks are building which is called system B this is my container diagram",
    "start": "2209000",
    "end": "2217680"
  },
  {
    "text": "show my internal details I don't show yours from your perspective you show your internal details maybe you have a",
    "start": "2217680",
    "end": "2223680"
  },
  {
    "text": "nodejs API and do you have an inbound dependency for my system you can't see my implementation details I don't",
    "start": "2223680",
    "end": "2231119"
  },
  {
    "text": "recommend mixing both these diagrams I coming up with something like this where we're showing my container talking to",
    "start": "2231119",
    "end": "2237400"
  },
  {
    "text": "your container why because now we're both aware of each other's details if I",
    "start": "2237400",
    "end": "2243240"
  },
  {
    "text": "rewrite my spring boot app to something else your diagram has to change if you split your single nodejs app up into two",
    "start": "2243240",
    "end": "2249480"
  },
  {
    "text": "apps my diagram has changed so essentially because I have some information about what you folks are",
    "start": "2249480",
    "end": "2255520"
  },
  {
    "text": "doing maybe we're one team I think there's some additional coupling here that we're not talking",
    "start": "2255520",
    "end": "2261280"
  },
  {
    "text": "about and maybe maybe we really should be one team there are some exceptions to this guidance which is stuff",
    "start": "2261280",
    "end": "2268880"
  },
  {
    "text": "like shared databases I know we shouldn't do integration via shared",
    "start": "2268880",
    "end": "2274000"
  },
  {
    "text": "databases but there's tons of software out there that does this imagine I'm",
    "start": "2274000",
    "end": "2279040"
  },
  {
    "text": "building system a and I'm talking to your system B but I'm going via a shared database so we can exchange",
    "start": "2279040",
    "end": "2286119"
  },
  {
    "text": "data the question you have to ask is who owns that shared database if we can't make up our minds",
    "start": "2286119",
    "end": "2292240"
  },
  {
    "text": "maybe we just create an arbitrary system in the middle the same is to of message based architectures by the way if you have two",
    "start": "2292240",
    "end": "2298960"
  },
  {
    "text": "systems and they are communicating via a que who owns the que who owns the data",
    "start": "2298960",
    "end": "2304920"
  },
  {
    "text": "format who owns the schema of the messages that go between the two systems answering that question will allow you",
    "start": "2304920",
    "end": "2310440"
  },
  {
    "text": "to drop the queue into the right system context if you can't answer it maybe you've got something in the middle as a",
    "start": "2310440",
    "end": "2318960"
  },
  {
    "start": "2318000",
    "end": "2572000"
  },
  {
    "text": "placeholder uh a couple of last ones tooling a lot of people say C4 doesn't scale and for me this is a tooling issue",
    "start": "2319000",
    "end": "2325160"
  },
  {
    "text": "so imagine you have a micros servic architecture here there are eight Services every service is a pair of an",
    "start": "2325160",
    "end": "2330440"
  },
  {
    "text": "API thing and databased schem of thing with eight it kind of works but imagine we started adding 9 10 11 12 20 Etc this",
    "start": "2330440",
    "end": "2338040"
  },
  {
    "text": "diagram start to get cluttered quite quickly so how do you deal with this well perhaps you draw One diagram per",
    "start": "2338040",
    "end": "2344319"
  },
  {
    "text": "service showing the things coming into and out of that service so you kind of restrict your point of view with viso",
    "start": "2344319",
    "end": "2352480"
  },
  {
    "text": "this is super super hard you have to figure out what's connected copy all those elements out into a separate Tab",
    "start": "2352480",
    "end": "2357760"
  },
  {
    "text": "and make sure you keep up to date with my structurer toiling because it's model base you can write a little expression",
    "start": "2357760",
    "end": "2363319"
  },
  {
    "text": "and Magic happens behind the scenes a service two version is exactly the same the service V service 3 version exactly",
    "start": "2363319",
    "end": "2370760"
  },
  {
    "text": "the same so we're slicing and dicing the model and showing a subset a partition of the information here you could also",
    "start": "2370760",
    "end": "2377680"
  },
  {
    "text": "use alternative visualization formats so my structurer support uh touring",
    "start": "2377680",
    "end": "2382880"
  },
  {
    "text": "supports a D3 uh Force directed graph it's all interactive this is showing you",
    "start": "2382880",
    "end": "2388359"
  },
  {
    "text": "all of the containers that sit inside that Software System M but it's interactive and it's a much more",
    "start": "2388359",
    "end": "2393800"
  },
  {
    "text": "condensed concise visualization format of those same Concepts you can click",
    "start": "2393800",
    "end": "2399040"
  },
  {
    "text": "around show nearest neighbors there are tool tips you can metadata you can you can embed metadata so this is a much",
    "start": "2399040",
    "end": "2406400"
  },
  {
    "text": "more suitable visualization style for exploring a complicated architecture",
    "start": "2406400",
    "end": "2411920"
  },
  {
    "text": "similarly you can dump this into other tools which allow you to navigate and visualize hierarchical data structures",
    "start": "2411920",
    "end": "2418200"
  },
  {
    "text": "like isograph for example and one of the final things is well C4 still doesn't solve our diagrams",
    "start": "2418200",
    "end": "2424920"
  },
  {
    "text": "getting out of date no it doesn't C4 is a set of abstractions a set of diagram types it's notation and tooling",
    "start": "2424920",
    "end": "2432319"
  },
  {
    "text": "independent so this is where you now need to figure out what tooling allows us to keep our diagrams up to dat in",
    "start": "2432319",
    "end": "2438720"
  },
  {
    "text": "terms of system landscape and system context diagrams what you want to do is really start bootstrapping and",
    "start": "2438720",
    "end": "2445520"
  },
  {
    "text": "generating diagrams from data sources that already exist in your organization",
    "start": "2445520",
    "end": "2450960"
  },
  {
    "text": "so lots of people are registering services and systems on service now or Spotify is backstage use that as your",
    "start": "2450960",
    "end": "2458480"
  },
  {
    "text": "data source write some code integrate with the back space API pull down all the list of services and systems and",
    "start": "2458480",
    "end": "2465280"
  },
  {
    "text": "applications in backstage the links between them use that to generate your C4 uh system landscape and system",
    "start": "2465280",
    "end": "2471640"
  },
  {
    "text": "context diagrams dropping down to container diagrams these are a bit more tricky to generate automatically but you",
    "start": "2471640",
    "end": "2478560"
  },
  {
    "text": "could use uh paing of log FS you could pause your build scripts you could use open Telemetry data traces other",
    "start": "2478560",
    "end": "2485800"
  },
  {
    "text": "observability metrics as a source for identifying things running in the environment and the connection and the",
    "start": "2485800",
    "end": "2492200"
  },
  {
    "text": "connections events messages between these things when it comes to component diagrams when we kind of zoomed into the",
    "start": "2492200",
    "end": "2498359"
  },
  {
    "text": "boundaries of a single application this is where you use traditional static analysis reverse engineering techniques",
    "start": "2498359",
    "end": "2504480"
  },
  {
    "text": "either on compiled bik code or source code and you use that for identifying",
    "start": "2504480",
    "end": "2509680"
  },
  {
    "text": "components and generating component diagrams automatically from a codebase and some of you thinking well sure that",
    "start": "2509680",
    "end": "2515960"
  },
  {
    "text": "sounds all good but how do you actually do it it so version three of my structurized tooling that came out a couple of weeks ago this is all open",
    "start": "2515960",
    "end": "2521680"
  },
  {
    "text": "source it's all built in Java uh inside the structurized DSL you can now drop this exclamation mark components block",
    "start": "2521680",
    "end": "2529720"
  },
  {
    "text": "and it will allow you to point the DSL at some compiled Java code and some source code and in this case we are",
    "start": "2529720",
    "end": "2536800"
  },
  {
    "text": "identifying two very different types of components web controller components and",
    "start": "2536800",
    "end": "2542200"
  },
  {
    "text": "repository components it figures out all the dependencies between these things and that bit of code generates this",
    "start": "2542200",
    "end": "2548440"
  },
  {
    "text": "diagram from a real code base so there are some things you can do today that allow you to kind of really use",
    "start": "2548440",
    "end": "2553839"
  },
  {
    "text": "techniques in the real world similarly with deployment diagrams pass your terraform your cloud",
    "start": "2553839",
    "end": "2560480"
  },
  {
    "text": "formation your AWS configuration and use that to generate deployment diagrams I",
    "start": "2560480",
    "end": "2565800"
  },
  {
    "text": "have no tool need to do this for you unfortunately but it's you know we're developers we can probably build this",
    "start": "2565800",
    "end": "2571119"
  },
  {
    "text": "ourselves as a final note something I've been doing with my customers recently is I'm trying to get them through uh the",
    "start": "2571119",
    "end": "2577160"
  },
  {
    "start": "2572000",
    "end": "2627000"
  },
  {
    "text": "security model associated with software arage diagramming lots of teams are here they're doing nothing many teams are",
    "start": "2577160",
    "end": "2583119"
  },
  {
    "text": "perhaps here they're drawing those ad hoc diagrams I showed you earlier just adopting C4 gets you to level three so",
    "start": "2583119",
    "end": "2589880"
  },
  {
    "text": "we're now using a defined structured set of abstractions and diagram types and you can get here with any type of tool",
    "start": "2589880",
    "end": "2596440"
  },
  {
    "text": "whether it's a diagramming tool or a modeling tool to get further up in this maturity model you really need to start",
    "start": "2596440",
    "end": "2602880"
  },
  {
    "text": "adopting modeling tools this is arguably the biggest leap so so you're you're manually all three models and then to",
    "start": "2602880",
    "end": "2609599"
  },
  {
    "text": "get to level five it's really about integrating with backstage it's about automatically generating diagrams from",
    "start": "2609599",
    "end": "2615760"
  },
  {
    "text": "data sources it's about querying maybe you drop the model into NJ and ask it questions so there's a bunch of cool",
    "start": "2615760",
    "end": "2621760"
  },
  {
    "text": "stuff you can do there once you get past the diagram to diagramming to modeling tool hurdle and that's it that's C4",
    "start": "2621760",
    "end": "2629240"
  },
  {
    "start": "2627000",
    "end": "2651000"
  },
  {
    "text": "abstractions diagram types notation independent and tooling independent as well thank you",
    "start": "2629240",
    "end": "2637400"
  },
  {
    "text": "than",
    "start": "2638119",
    "end": "2641119"
  }
]