[
  {
    "start": "0",
    "end": "149000"
  },
  {
    "text": "thank you thank you so much for the uh warm welcome I wanted just before I get started I wanted to uh ask you all if",
    "start": "2800",
    "end": "10200"
  },
  {
    "text": "you haven't already done so to download the app um and rate this session but",
    "start": "10200",
    "end": "16400"
  },
  {
    "text": "rate all of the sessions because speakers really really appreciate um you know any feedback you can give them",
    "start": "16400",
    "end": "21600"
  },
  {
    "text": "because we want you guys to uh enjoy and get something out of this time with us um so I thank you for the introduction",
    "start": "21600",
    "end": "30720"
  },
  {
    "text": "um I guess there goes my first slide right um so just to sort of go quickly through this um I did join the Java",
    "start": "30720",
    "end": "37760"
  },
  {
    "text": "group in 1996 um at that time the group was actually a separate little startup",
    "start": "37760",
    "end": "43399"
  },
  {
    "text": "it wasn't really part of sun it was separate uh we were actually located across the street from the Apple",
    "start": "43399",
    "end": "49079"
  },
  {
    "text": "infinite Loop headquarters in Cupertino and we used to um sort of look across",
    "start": "49079",
    "end": "54320"
  },
  {
    "text": "the street and wonder when they were going to go bankrupt so you know we weren't all that",
    "start": "54320",
    "end": "61559"
  },
  {
    "text": "good at predicting the future of business but you know maybe we could be good at technology right um so uh I kept",
    "start": "61559",
    "end": "68720"
  },
  {
    "text": "working there for a while I worked uh separately at Bea on jrocket um and then",
    "start": "68720",
    "end": "73759"
  },
  {
    "text": "uh ended up in Oracle that way and when Oracle acquired son um was asked to sort of move from Sweden back to the US and",
    "start": "73759",
    "end": "81280"
  },
  {
    "text": "put the two group groups together and make sort of the future Java be the best of of Both Worlds um and so that's what",
    "start": "81280",
    "end": "87600"
  },
  {
    "text": "I've been working on since then uh I am also the chair of the open jdk governing",
    "start": "87600",
    "end": "92960"
  },
  {
    "text": "board so what's that about well its function is to ensure smooth and effective operation of the community",
    "start": "92960",
    "end": "99600"
  },
  {
    "text": "that is working on the most popular uh open source codebase for Java um and that is the code base on which the",
    "start": "99600",
    "end": "105920"
  },
  {
    "text": "Oracle jdk is built as well as SE several other very popular",
    "start": "105920",
    "end": "111320"
  },
  {
    "text": "distributions so in in those roles I've kind of had a front row seat um for many",
    "start": "111320",
    "end": "116640"
  },
  {
    "text": "of the changes in the Java ecosystem now most of these have actually happened since I was last here at Yao uh which",
    "start": "116640",
    "end": "123360"
  },
  {
    "text": "was in 2015 and today I'm going to talk about some of the things that we're bringing in Java 21 which came out a couple of",
    "start": "123360",
    "end": "130640"
  },
  {
    "text": "months ago um but also hopefully give you some insight into how we think about Java Evolution what are we prioritized",
    "start": "130640",
    "end": "138200"
  },
  {
    "text": "working on and how have we adjusted our methodology to be able to bring you those things more",
    "start": "138200",
    "end": "145959"
  },
  {
    "text": "quickly okay so in 2015 we had just delivered Java 8 and we were working",
    "start": "148319",
    "end": "154480"
  },
  {
    "start": "149000",
    "end": "355000"
  },
  {
    "text": "very hard on nine it was kind of a couple years out there on the horizon um and you know now is probably",
    "start": "154480",
    "end": "160879"
  },
  {
    "text": "a good time to ask you which versions of java you're using so first of all an",
    "start": "160879",
    "end": "167800"
  },
  {
    "text": "easy one how many people are using mostly Java 8 okay a few hands actually not that",
    "start": "167800",
    "end": "174840"
  },
  {
    "text": "many that's good probably um okay how about Java 11",
    "start": "174840",
    "end": "180480"
  },
  {
    "text": "all right few more how about 17 all right I think 17's got it thus far but now we're going to go full Bo",
    "start": "180480",
    "end": "187360"
  },
  {
    "text": "here 21 or newer all right a few well that that's good you're head of the curve um you're",
    "start": "187360",
    "end": "194159"
  },
  {
    "text": "also a speaker so that's bad um okay so all right now we're going to do",
    "start": "194159",
    "end": "199480"
  },
  {
    "text": "the tough one which is uh is any does anyone want to confess to running something prior to Java",
    "start": "199480",
    "end": "206440"
  },
  {
    "text": "8 bad all right I think there's a security talk for you down the",
    "start": "207000",
    "end": "213640"
  },
  {
    "text": "hall no it's okay you're not alone I'm sure there are a lot of people in the same boat and there are some good reasons for it um although I would",
    "start": "214239",
    "end": "220920"
  },
  {
    "text": "encourage you to upgrade to something that is currently supported by someone um okay",
    "start": "220920",
    "end": "226959"
  },
  {
    "text": "so so let's see uh back in 2015 oh wait oh there's one more how many are",
    "start": "226959",
    "end": "233519"
  },
  {
    "text": "wondering what the heck I'm talking about why I chose those numbers because they seem kind of random all right uh we got a couple of",
    "start": "233519",
    "end": "240879"
  },
  {
    "text": "people there well all will be revealed don't worry um and the rest of you you know you like I'll try not to duplicate",
    "start": "240879",
    "end": "247360"
  },
  {
    "text": "too much stuff um all right so back in 2015 the model that we had for Java releases had really been the same since",
    "start": "247360",
    "end": "252879"
  },
  {
    "text": "the very beginning of java time um they were big bang releases they were featur",
    "start": "252879",
    "end": "258280"
  },
  {
    "text": "driven so we would decide you know years in advance this is what's going to be in the next release and then we would work",
    "start": "258280",
    "end": "263639"
  },
  {
    "text": "really hard on it and hope that it didn't take longer than we thought it was going to um and we all know how that",
    "start": "263639",
    "end": "268840"
  },
  {
    "text": "goes right this software industry has evolved a lot since the mid 90s and we've learned a lot about making",
    "start": "268840",
    "end": "274560"
  },
  {
    "text": "software and we've learned that that's generally not a very good way um because they were feature-driven",
    "start": "274560",
    "end": "280240"
  },
  {
    "text": "they often took longer than predicted because there was already a long time between releases the incentive for",
    "start": "280240",
    "end": "285320"
  },
  {
    "text": "developers was to take the thing they had the feature that was not quite done but almost and sort of shove it in",
    "start": "285320",
    "end": "291800"
  },
  {
    "text": "because the stabilization time is pretty long anyway right guess what makes the St stabilization time even longer when",
    "start": "291800",
    "end": "298960"
  },
  {
    "text": "you shove a bunch of stuff in that's not really done yet so um that tended to",
    "start": "298960",
    "end": "305320"
  },
  {
    "text": "make it so that those features you know came out not quite ready it took a you know a long time for people to adopt new",
    "start": "305320",
    "end": "311000"
  },
  {
    "text": "versions it took a long and and importantly unpredictable amount of time between releases and that's no good for",
    "start": "311000",
    "end": "317840"
  },
  {
    "text": "anyone it's not good for people who want to use Java it's not good for Enterprises it's not good for the",
    "start": "317840",
    "end": "322919"
  },
  {
    "text": "developers of Joba itself um it's pretty much horrible all around so oh and the",
    "start": "322919",
    "end": "329160"
  },
  {
    "text": "other thing that that does is it sort of um increases the desire that people have",
    "start": "329160",
    "end": "334880"
  },
  {
    "text": "to say well it's going to be like years till I can use that feature in the new version couldn't you just put it back",
    "start": "334880",
    "end": "340160"
  },
  {
    "text": "into the old one for me backport yeah guess what makes those",
    "start": "340160",
    "end": "346360"
  },
  {
    "text": "um versions that people are trying to use really unstable when you try to backport Big",
    "start": "346360",
    "end": "351960"
  },
  {
    "text": "features okay so that was a mess so we decided we needed to do something about",
    "start": "351960",
    "end": "357440"
  },
  {
    "start": "355000",
    "end": "519000"
  },
  {
    "text": "that we wanted to have a way to get features into people's hands earlier and more quickly um and but this was not",
    "start": "357440",
    "end": "365080"
  },
  {
    "text": "just about the convenience of the developers of java we talked with the people who were using it we talked with",
    "start": "365080",
    "end": "370520"
  },
  {
    "text": "developers we talked with Enterprises and we saw that those were kind of the two groups that the answers clearly",
    "start": "370520",
    "end": "376400"
  },
  {
    "text": "boiled down into in in terms of what they wanted um there tended to be a lot of developers who were like give me new",
    "start": "376400",
    "end": "382160"
  },
  {
    "text": "features give them to me now I can't wait I want it today um I want it yesterday and there were Enterprises who",
    "start": "382160",
    "end": "388599"
  },
  {
    "text": "are like java8 is perfect don't like don't add anything",
    "start": "388599",
    "end": "393720"
  },
  {
    "text": "whatever you do don't touch it it works right okay now now so the funny part of",
    "start": "393720",
    "end": "400120"
  },
  {
    "text": "that story is when you go and talk with the people in the Enterprises who say that um and you ask them oh Java 8's",
    "start": "400120",
    "end": "406919"
  },
  {
    "text": "perfect that's awesome so tell me what you're using for your next project you know what they said",
    "start": "406919",
    "end": "413720"
  },
  {
    "text": "node yeah yeah well okay so their point was it's perfect for me me for that",
    "start": "413720",
    "end": "420160"
  },
  {
    "text": "application it wasn't perfect for them in terms of decision- making for what they wanted to invest in and use going",
    "start": "420160",
    "end": "425520"
  },
  {
    "text": "forward and of course you know we were kind of biased we wanted them to use Java going forward um so that was not a",
    "start": "425520",
    "end": "432639"
  },
  {
    "text": "complete answer so what did we do well we decided that we were going to change this around",
    "start": "432639",
    "end": "439879"
  },
  {
    "text": "and what we decided to do was say look a big part of the problem here is the featur driven model so we're going to",
    "start": "439879",
    "end": "446599"
  },
  {
    "text": "try to move to a time-based model where basically we're going to do a new release on a very very specific Cadence",
    "start": "446599",
    "end": "453319"
  },
  {
    "text": "and we're going to make that Cadence be short enough that if I miss this release",
    "start": "453319",
    "end": "458759"
  },
  {
    "text": "I'm not that worried about it because there's another one right around the corner so basically we decided on six",
    "start": "458759",
    "end": "465159"
  },
  {
    "text": "months and uh basically you know everyone oh yeah so that's great for the",
    "start": "465159",
    "end": "472680"
  },
  {
    "text": "new features but what about those Enterprises that never want anything to change well we decided to augment this",
    "start": "472680",
    "end": "478840"
  },
  {
    "text": "with taking one of those releases every couple of years we actually started out with three and now we're on two where we said we're",
    "start": "478840",
    "end": "485960"
  },
  {
    "text": "going to take a particular release line and we're going to use that just to backport security stability and",
    "start": "485960",
    "end": "492199"
  },
  {
    "text": "performance fixes no new features we're not going to get into that game but we're going to keep you secure so if you",
    "start": "492199",
    "end": "498720"
  },
  {
    "text": "got something that's up and running make sure you're on one of those releases and you'll be able to stay on that for years and years and years and years and so",
    "start": "498720",
    "end": "505960"
  },
  {
    "text": "that was kind of the compromise that that we came up with and and we uh I you know talked with people in the group I",
    "start": "505960",
    "end": "512200"
  },
  {
    "text": "talked with people in the ecosystem I talked with customers and by and large",
    "start": "512200",
    "end": "517360"
  },
  {
    "text": "they all thought I was crazy right lots of skepticism so why",
    "start": "517360",
    "end": "525040"
  },
  {
    "start": "519000",
    "end": "738000"
  },
  {
    "text": "were people skeptical well the people who were working on Java were skeptical because we'd never done a release this",
    "start": "525040",
    "end": "530839"
  },
  {
    "text": "fast before we they knew that there was a lot of overhead in what we did and a lot of technical challenges um they were",
    "start": "530839",
    "end": "537560"
  },
  {
    "text": "also worried that we might actually not have any features like well what if there's nothing new",
    "start": "537560",
    "end": "543200"
  },
  {
    "text": "are we going to do a release with nothing in it um they were worried that we were going",
    "start": "543200",
    "end": "549120"
  },
  {
    "text": "to be overwhelmed by backports and this was these were all very very rational things to be worried about um but what",
    "start": "549120",
    "end": "556360"
  },
  {
    "text": "they B basically boiled down to was they were afraid of change this was something different it was scary um when I talked",
    "start": "556360",
    "end": "563240"
  },
  {
    "text": "to people in the Java ecosystem they said huh Java is all we ever Java 8 is all we ever need they they also said",
    "start": "563240",
    "end": "570440"
  },
  {
    "text": "gosh this sounds like we're going to get a whole bunch of releases that sounds really scary um and they were worried",
    "start": "570440",
    "end": "576079"
  },
  {
    "text": "that the quality would suffer right that with so many releases we couldn't possibly keep Java at the level of",
    "start": "576079",
    "end": "582160"
  },
  {
    "text": "quality um that it was known for okay those those concerns also basically boil",
    "start": "582160",
    "end": "589079"
  },
  {
    "text": "down to we're afraid of change it's different we don't know how it's going to work okay um these were some of the",
    "start": "589079",
    "end": "595279"
  },
  {
    "text": "comments that people posted publicly at the time and this is not just anyone these are like known you know famous",
    "start": "595279",
    "end": "600880"
  },
  {
    "text": "people in the industry so yeah this thing I've got it",
    "start": "600880",
    "end": "606440"
  },
  {
    "text": "on good authority it's utter it's never going to work these guys are",
    "start": "606440",
    "end": "611760"
  },
  {
    "text": "crazy they're they're kidding themselves all right well I will say",
    "start": "611760",
    "end": "618360"
  },
  {
    "text": "that the changes that we needed to make in order to make this possible were not just technical there were challeng",
    "start": "618360",
    "end": "623440"
  },
  {
    "text": "technical challenges sure we needed to redo the way that we built and tested Java we needed to actually verion our",
    "start": "623440",
    "end": "630000"
  },
  {
    "text": "tests with the code which we weren't doing before um for actually good reasons but like that that didn't work",
    "start": "630000",
    "end": "638200"
  },
  {
    "text": "um and the main thing that we needed to do was sort of unlearn uh a bunch about",
    "start": "638200",
    "end": "645600"
  },
  {
    "text": "you know of the things that we knew about how this worked so this was not really a technical change it was a cultural change it was a change in",
    "start": "645600",
    "end": "651959"
  },
  {
    "text": "mindset and the big change in mindset was realizing that okay my feature's not",
    "start": "651959",
    "end": "658040"
  },
  {
    "text": "quite done I'd rather be the first person in the next release than the last thing shoved into this release that's",
    "start": "658040",
    "end": "663360"
  },
  {
    "text": "about to go out and so it was really about getting people to the point where they felt that they had all of the",
    "start": "663360",
    "end": "669120"
  },
  {
    "text": "Automation and all the testing to make sure that something was done and ready before they checked it into the mainline",
    "start": "669120",
    "end": "674560"
  },
  {
    "text": "um destined for the next release um but also that it was okay to miss a train um the other thing that came along",
    "start": "674560",
    "end": "681959"
  },
  {
    "text": "with that was this sort of uh notion that everything needed to be backported",
    "start": "681959",
    "end": "687200"
  },
  {
    "text": "um the team because it was so long between major releases was kind of in the habit of backporting just about",
    "start": "687200",
    "end": "693000"
  },
  {
    "text": "everything they could and what they needed to do was sort of change the mindset to say you know what I really",
    "start": "693000",
    "end": "698480"
  },
  {
    "text": "only want to backport something it's if it's absolutely necessary for customer running today on that version and that",
    "start": "698480",
    "end": "704360"
  },
  {
    "text": "mostly boil down to security fixes okay so um one other interesting",
    "start": "704360",
    "end": "711079"
  },
  {
    "text": "thing um the features that we had done before to date had all been these you",
    "start": "711079",
    "end": "717240"
  },
  {
    "text": "know pretty large pretty significant features and you know the thought at the time was well it's very very hard to",
    "start": "717240",
    "end": "722920"
  },
  {
    "text": "break those down into smaller features um and so this was a sort of new skill",
    "start": "722920",
    "end": "728560"
  },
  {
    "text": "that people needed to learn right how do I take a big massive feature that might take two years to do and think through",
    "start": "728560",
    "end": "734639"
  },
  {
    "text": "are there ways that I can deliver parts of it more quickly um oh I'm going to man I'm going",
    "start": "734639",
    "end": "740320"
  },
  {
    "start": "738000",
    "end": "889000"
  },
  {
    "text": "to mention one more thing as I get to here the payoff um which is doing unpredictable releases is very expensive",
    "start": "740320",
    "end": "747639"
  },
  {
    "text": "um you you have a lot of over had a lot of process a lot of meetings where you discuss whether something that should",
    "start": "747639",
    "end": "752800"
  },
  {
    "text": "should go in or not um whether you should move a date or not one date moving means that other dates move it is",
    "start": "752800",
    "end": "758639"
  },
  {
    "text": "really really really expensive and so you know what we what we ended up finding was by having a regular Cadence",
    "start": "758639",
    "end": "765199"
  },
  {
    "text": "knowing when it was not needing to replan we could actually reuse uh all of the process from release to release and",
    "start": "765199",
    "end": "771600"
  },
  {
    "text": "just get better and better at this over time um and so we ended up with developers of the jdk spending far less",
    "start": "771600",
    "end": "777920"
  },
  {
    "text": "time in these meetings that they didn't want to be in anyway and far more time focusing on developing the next features",
    "start": "777920",
    "end": "784880"
  },
  {
    "text": "that they wanted to bring to you so this this was pretty cool um at first people",
    "start": "784880",
    "end": "790399"
  },
  {
    "text": "were skeptical but after we kept doing them um and delivering and people saw that features were coming out and they",
    "start": "790399",
    "end": "796639"
  },
  {
    "text": "were coming out regularly and the releases were coming out regularly and they had less overhead um they kind of",
    "start": "796639",
    "end": "802480"
  },
  {
    "text": "started to like it and so after a couple of years uh I visited one of my teams in",
    "start": "802480",
    "end": "807800"
  },
  {
    "text": "actually Burlington massachus and somebody pulled me aside and said hey I never thought this was going to work but it's awesome I this is so good I would",
    "start": "807800",
    "end": "815000"
  },
  {
    "text": "never want to go back to how are we doing things before and thank you so much for making it",
    "start": "815000",
    "end": "820360"
  },
  {
    "text": "happen and not only did the people on the team say that but people in the industry said it too so these are all",
    "start": "820360",
    "end": "827720"
  },
  {
    "text": "actually from earlier this year and as you can see everyone is happy right well",
    "start": "827720",
    "end": "835519"
  },
  {
    "text": "in an ecosystem the size of Javas not Everyone is always going to be happy there's always going to be someone who",
    "start": "835519",
    "end": "842519"
  },
  {
    "text": "is missing something okay cool that's good um all right so here's just a a",
    "start": "842519",
    "end": "849360"
  },
  {
    "text": "very quick visualization of the way the model is today right there's tip development that's done all of our new",
    "start": "849360",
    "end": "855279"
  },
  {
    "text": "stuff goes into the tip um and then every couple of years something is designated as uh something a release",
    "start": "855279",
    "end": "862480"
  },
  {
    "text": "that's going to get long-term support and that it will get for years and years and years um and what this means is that",
    "start": "862480",
    "end": "869759"
  },
  {
    "text": "developers are getting the features that they want quickly um and the Enterprises that just want stability can just kind of squint",
    "start": "869759",
    "end": "877120"
  },
  {
    "text": "at this and say I'm just going to pretend I just you know look at the LTS ones and the model actually looks like",
    "start": "877120",
    "end": "882920"
  },
  {
    "text": "it did before right with the difference that it's just a lot more",
    "start": "882920",
    "end": "889399"
  },
  {
    "start": "889000",
    "end": "1006000"
  },
  {
    "text": "predictable okay so did we find a way of doing three years of work in six months no of course not right each of these six",
    "start": "889399",
    "end": "896440"
  },
  {
    "text": "month releases is a lot smaller smaller and that's good right in the industry now we we think that lots of increments",
    "start": "896440",
    "end": "903800"
  },
  {
    "text": "of smaller amounts of change is a good thing it makes it easier for us to",
    "start": "903800",
    "end": "909800"
  },
  {
    "text": "adopt and then you know if we look back since 17 so 21 is due for long-term",
    "start": "909800",
    "end": "917000"
  },
  {
    "text": "support 17 has long-term support and 11 has long-term support and so",
    "start": "917000",
    "end": "922639"
  },
  {
    "text": "interestingly what we found you know we we wondered whether there was going to be sort of a a trade-off between",
    "start": "922639",
    "end": "928639"
  },
  {
    "text": "throughput and latency um and it turned out that with this model we actually didn't trade off a whole lot of",
    "start": "928639",
    "end": "934720"
  },
  {
    "text": "throughput we were still getting a lot of features coming in it's just that the latency was far far",
    "start": "934720",
    "end": "942079"
  },
  {
    "text": "better one other thing I'm going to mention here and this was something that we didn't even realize we would get out",
    "start": "942240",
    "end": "947639"
  },
  {
    "text": "of this model um is the ability to designate features as preview now what",
    "start": "947639",
    "end": "953519"
  },
  {
    "text": "does preview mean does it mean it's a beta it's actually not right in the past a preview feature we would have said it",
    "start": "953519",
    "end": "959160"
  },
  {
    "text": "was Final and we wouldn't have been able to change it for the next 30 years and it would have probably not been quite as",
    "start": "959160",
    "end": "965079"
  },
  {
    "text": "good as it could be if we could put it out as a preview give you a flag to turn it on and then get feedback from people",
    "start": "965079",
    "end": "971120"
  },
  {
    "text": "using it in all kinds of cases that there's no way we could know about our test so that any sort of last bits that",
    "start": "971120",
    "end": "977079"
  },
  {
    "text": "needed to be um that needed to be nailed down or adjusted to be good um could actually still be done so you should",
    "start": "977079",
    "end": "983720"
  },
  {
    "text": "think of a preview feature as just like a final feature except the concrete's not poured um and we want to and and do",
    "start": "983720",
    "end": "990920"
  },
  {
    "text": "hear from people um about their feedback on it that has informed the final version so generally now you know things",
    "start": "990920",
    "end": "997240"
  },
  {
    "text": "that come in especially in the language we tend to go through a couple of rounds of preview just to make sure that it's",
    "start": "997240",
    "end": "1002279"
  },
  {
    "text": "really solid before we pour the concrete okay so that list of features",
    "start": "1002279",
    "end": "1009399"
  },
  {
    "start": "1006000",
    "end": "1121000"
  },
  {
    "text": "that I showed you may have looked like sort of a random grab bag of things and so a very reasonable thing to wonder",
    "start": "1009399",
    "end": "1016040"
  },
  {
    "text": "about would be how do we decide what features we're going to work on is it just random hopefully not um what we try",
    "start": "1016040",
    "end": "1025319"
  },
  {
    "text": "to do is talk with our users and understand their pain points today right what are the things that are difficult",
    "start": "1025319",
    "end": "1030959"
  },
  {
    "text": "for them or that are causing them um angst and we also try to look at the trends in programming models so how do",
    "start": "1030959",
    "end": "1037918"
  },
  {
    "text": "people want to write programs today what are architectural shifts um that are popular uh and we also look at the",
    "start": "1037919",
    "end": "1044640"
  },
  {
    "text": "direction that Hardware is evolving because one of the things we've always tried to do with jav is make sure that",
    "start": "1044640",
    "end": "1050320"
  },
  {
    "text": "your existing Java programs can take advantage of advancements in Hardware without you're having to rewrite",
    "start": "1050320",
    "end": "1056360"
  },
  {
    "text": "everything so we also look at other platforms to see what's been successful we try to understand why and how the",
    "start": "1056360",
    "end": "1064080"
  },
  {
    "text": "what we learn from that could apply to Java we look also at shortcomings and",
    "start": "1064080",
    "end": "1069200"
  },
  {
    "text": "try to think about how to address them but we want to address them in a way that doesn't feel bolted on we want it",
    "start": "1069200",
    "end": "1074320"
  },
  {
    "text": "to feel like a natural part of the evolution of java so you know we don't try to necessarily",
    "start": "1074320",
    "end": "1081159"
  },
  {
    "text": "solve Point problems rather we try to provide platform capabilities that Fosters an ecosystem of Alternatives",
    "start": "1081159",
    "end": "1088600"
  },
  {
    "text": "solving those and you know that all kind of boils down to we try to triangulate",
    "start": "1088600",
    "end": "1094679"
  },
  {
    "text": "and figure out I don't know if there's an Aussie rules thing for this but you know in in hockey like this works great",
    "start": "1094679",
    "end": "1100760"
  },
  {
    "text": "in Canada we try to like skate to where the puck will be right so this is basically figuring out where's",
    "start": "1100760",
    "end": "1106600"
  },
  {
    "text": "everything headed how can we make sure that you know when you need it Java has it um and you know we have a a few years",
    "start": "1106600",
    "end": "1114080"
  },
  {
    "text": "of being behind to catch up for but I I think it's going pretty well with this new model",
    "start": "1114080",
    "end": "1119600"
  },
  {
    "text": "so let's go ahead and look at um some of those features right so these are things",
    "start": "1119600",
    "end": "1125000"
  },
  {
    "start": "1121000",
    "end": "1219000"
  },
  {
    "text": "that have been brought through this model um and I and the first one I want to talk about is uh I think you know",
    "start": "1125000",
    "end": "1130679"
  },
  {
    "text": "really the biggest news of java 21 um which is that project Loom and virtual threads have gone final and so I I think",
    "start": "1130679",
    "end": "1137960"
  },
  {
    "text": "that Loom is going to be um for 21 what Lambda was for 8 right it was you know",
    "start": "1137960",
    "end": "1144320"
  },
  {
    "text": "the big feature that everyone wanted had been waiting for and now that it's finally there you know there's a mass",
    "start": "1144320",
    "end": "1149559"
  },
  {
    "text": "movement to adopt it so what does Loom do well it it basically takes Java",
    "start": "1149559",
    "end": "1154880"
  },
  {
    "text": "concurrency to the next level by barely changing it at all and you know why do",
    "start": "1154880",
    "end": "1160440"
  },
  {
    "text": "we do it in the first place well you know we don't want people to have to choose um you know between writing",
    "start": "1160440",
    "end": "1167200"
  },
  {
    "text": "between doing efficient velopment and actually having very scalable deployment well what do I mean by that",
    "start": "1167200",
    "end": "1174880"
  },
  {
    "text": "um okay well threads are great right they've been a strength of java from the very beginning um you know kind of baked",
    "start": "1174880",
    "end": "1181480"
  },
  {
    "text": "into the language and and the platform um they give you great debugging great serviceability you can write synchronous",
    "start": "1181480",
    "end": "1187840"
  },
  {
    "text": "code that's pretty easy to understand um you have comp comprehensible stack traces um but threads are really",
    "start": "1187840",
    "end": "1195240"
  },
  {
    "text": "heavyweight and the reason they're heavyweight is that from the beginning Java had a one toone mapping of a Java",
    "start": "1195240",
    "end": "1200840"
  },
  {
    "text": "thread to a native operating system thread um and so you can very easily run",
    "start": "1200840",
    "end": "1206559"
  },
  {
    "text": "into the ceiling there now you know lots of people will talk about techniques for moving past that there was a whole",
    "start": "1206559",
    "end": "1212159"
  },
  {
    "text": "movement around async or reactive programming that basically is try is to try to address exactly that um the",
    "start": "1212159",
    "end": "1220600"
  },
  {
    "start": "1219000",
    "end": "1331000"
  },
  {
    "text": "problem is that when you move to a model like that you have to rethink how you're doing everything and you lose a lot of",
    "start": "1220600",
    "end": "1225880"
  },
  {
    "text": "the clarity of code the maintainability of code the debuggability of code um and",
    "start": "1225880",
    "end": "1230960"
  },
  {
    "text": "so what we did was we um came up with virtual threads in Project Loom so from",
    "start": "1230960",
    "end": "1236600"
  },
  {
    "text": "a user perspective you know Loom basically has no new apis the main new runtime construct is virtual threads uh",
    "start": "1236600",
    "end": "1243640"
  },
  {
    "text": "which basically share today's thread API and semantics uh but they're implemented",
    "start": "1243640",
    "end": "1249320"
  },
  {
    "text": "completely differently from existing platform threads rather than being tied to an OS thread and carrying around a",
    "start": "1249320",
    "end": "1254720"
  },
  {
    "text": "big continuous stack virtual threads store their their their Stacks in the Heap in the form of delimited",
    "start": "1254720",
    "end": "1262080"
  },
  {
    "text": "continuations so virtual thread has a couple of hundred bytes of metadata starts up much faster than a platform",
    "start": "1262080",
    "end": "1267400"
  },
  {
    "text": "thread and uses only as much stack space as is actually needed for active stack frames and as a result we can create",
    "start": "1267400",
    "end": "1274799"
  },
  {
    "text": "many many many more virtual threads than native platform",
    "start": "1274799",
    "end": "1279919"
  },
  {
    "text": "threads so you know basically what that boils down to is you know Loom just",
    "start": "1280279",
    "end": "1285360"
  },
  {
    "text": "makes threads lighter right now you know seems like one of those obvious things right like hey you want to make your",
    "start": "1285360",
    "end": "1291080"
  },
  {
    "text": "programs better just like write them with no bugs okay uh you just make threads",
    "start": "1291080",
    "end": "1296320"
  },
  {
    "text": "lighter um that that sounds really easy right and we know it's probably a lot harder than that and it is but I think",
    "start": "1296320",
    "end": "1302720"
  },
  {
    "text": "with virtual threads we've actually pulled it off um basically you know virtual threads are real threads they",
    "start": "1302720",
    "end": "1308960"
  },
  {
    "text": "Implement Java Lang thread they support thread locals and you know they have all of these properties that we were looking",
    "start": "1308960",
    "end": "1315440"
  },
  {
    "text": "for and so you can kind of think of them as you know threads without the baggage",
    "start": "1315440",
    "end": "1321000"
  },
  {
    "text": "and the move from exist using existing um heavyweight Java threads to Virtual",
    "start": "1321000",
    "end": "1326760"
  },
  {
    "text": "threads is in most cases really really simple so what does that give you well",
    "start": "1326760",
    "end": "1333400"
  },
  {
    "start": "1331000",
    "end": "1427000"
  },
  {
    "text": "you know here you can see an example of a server that's that's basically running an IO bound workload and so you know at",
    "start": "1333400",
    "end": "1339880"
  },
  {
    "text": "some point you're going to run out of threads and your ability to handle more transactions is capped and your latency skyrockets so in this example you see a",
    "start": "1339880",
    "end": "1347440"
  },
  {
    "text": "a couple of um a couple of different plots one of them is running a thread pool um with a",
    "start": "1347440",
    "end": "1352840"
  },
  {
    "text": "limit of 200 platform threads so it kind of goes along it's doing great it's doing great and then boom it hits 200",
    "start": "1352840",
    "end": "1359400"
  },
  {
    "text": "and now your latency is through the roof so you know how do you fix that well the obvious way is to say I'll just increase",
    "start": "1359400",
    "end": "1365080"
  },
  {
    "text": "the size of my thread pool that's cool so now I'm going to go along I've got one that's a thread pool that's up to 800 threads and I'm happily you know",
    "start": "1365080",
    "end": "1371760"
  },
  {
    "text": "processing stuff and now I get to 800 and boom my latency is is horrible again",
    "start": "1371760",
    "end": "1377799"
  },
  {
    "text": "and and you know so I mean we could just keep you know playing this game and increasing the uh number of threads the",
    "start": "1377799",
    "end": "1384480"
  },
  {
    "text": "problem is at some point we're going to run out of operating system threads and that is going to be the end whether or",
    "start": "1384480",
    "end": "1389679"
  },
  {
    "text": "not we've actually saturated the CPU in fact we probably haven't right so this is sort of an artificial cap uh on on",
    "start": "1389679",
    "end": "1397120"
  },
  {
    "text": "the scalability of your system um with virtual threads you don't run into this issue you can just keep going as long as",
    "start": "1397120",
    "end": "1403600"
  },
  {
    "text": "there CPU to keep up okay and just to show you the uh virtual thread um",
    "start": "1403600",
    "end": "1410400"
  },
  {
    "text": "virtual thread line is on there it's the green line that goes all the way across the bottom right now you know that",
    "start": "1410400",
    "end": "1417880"
  },
  {
    "text": "eventually will go up but it's probably somewhere on the other side of the next room right or further so that's kind of",
    "start": "1417880",
    "end": "1427080"
  },
  {
    "start": "1427000",
    "end": "1452000"
  },
  {
    "text": "cool so the you know the trick here was basically to you know have the same",
    "start": "1427080",
    "end": "1432640"
  },
  {
    "text": "abstraction but a different mindset of how to implement it um that greatly simplifies writing debugging and maintaining paining code um but it",
    "start": "1432640",
    "end": "1439640"
  },
  {
    "text": "doesn't come completely for free you do need to unlearn some tricks that were employed in the past for scalability",
    "start": "1439640",
    "end": "1445120"
  },
  {
    "text": "such as thread pools you really want to think of a task per thread um and and kind of go forward with that and one",
    "start": "1445120",
    "end": "1452720"
  },
  {
    "start": "1452000",
    "end": "1492000"
  },
  {
    "text": "group that has done that and already moved to this is the hodon folks um who had done a bunch of stuff um that was",
    "start": "1452720",
    "end": "1458760"
  },
  {
    "text": "basically based on netti um that was uh async and they went back and uh",
    "start": "1458760",
    "end": "1464279"
  },
  {
    "text": "reimplemented on top of virtual threads and basically found that they got uh you know in in just a a very small amount of",
    "start": "1464279",
    "end": "1472559"
  },
  {
    "text": "time they were able to get exactly the kind of throughput in latency that they had before that they had been working on",
    "start": "1472559",
    "end": "1478279"
  },
  {
    "text": "for years um but with far far far simpler code so you know this is what success looked like for them is they had",
    "start": "1478279",
    "end": "1484799"
  },
  {
    "text": "a bunch of complex code that they threw out the window and now they're happily going along with a simpler model on Java",
    "start": "1484799",
    "end": "1492279"
  },
  {
    "start": "1492000",
    "end": "1676000"
  },
  {
    "text": "21 okay so what's another feature um I'm going to talk about garbage collection",
    "start": "1492279",
    "end": "1498440"
  },
  {
    "text": "so zgc uh was introduced in Java 15 um and it supports submillisecond pauses",
    "start": "1498440",
    "end": "1505600"
  },
  {
    "text": "that don't scale up with the Heap size or the number of live objects now not scaling there is good right you want it",
    "start": "1505600",
    "end": "1512000"
  },
  {
    "text": "to kind of stay the same as you're dealing with a lot more information um we call this ultra low latency it means",
    "start": "1512000",
    "end": "1517799"
  },
  {
    "text": "that you no longer have to worry about GC pauses so where G1 is partially",
    "start": "1517799",
    "end": "1523000"
  },
  {
    "text": "concurrent zgc is fully concurrent all of the accounting work of moving objects and updating pointers is done",
    "start": "1523000",
    "end": "1529240"
  },
  {
    "text": "concurrently with the application the very brief pauses are just sync points where GC threads coordinate their",
    "start": "1529240",
    "end": "1535880"
  },
  {
    "text": "activities now the catch is there is a reduction in throughput um partly due to the presence of GC threads doing",
    "start": "1535880",
    "end": "1542080"
  },
  {
    "text": "concurrent Collections and partly due to zgc having a higher footprint that means less memory for the application to",
    "start": "1542080",
    "end": "1547760"
  },
  {
    "text": "process requests but as you can see it's a in most cases a a pretty pretty small",
    "start": "1547760",
    "end": "1553960"
  },
  {
    "text": "um reduction in throughput in order to get this and what is it that you get well here you can see graph and you can",
    "start": "1553960",
    "end": "1560600"
  },
  {
    "text": "see for G1 at various um uh at various uh percentiles how how it's doing and",
    "start": "1560600",
    "end": "1567360"
  },
  {
    "text": "you know those those pauses you know look not bad we've got you know up to it at at Max you know somewhere under 450",
    "start": "1567360",
    "end": "1574799"
  },
  {
    "text": "milliseconds now you know you want me to click the button and add the uh graph on cgc right except I can't because it's",
    "start": "1574799",
    "end": "1582559"
  },
  {
    "text": "already there all right let me show you what I mean",
    "start": "1582559",
    "end": "1588240"
  },
  {
    "text": "um okay so this is a this is a chart in milliseconds so first we need to go ahead and go to",
    "start": "1588240",
    "end": "1595240"
  },
  {
    "text": "microseconds and then we're going to zoom in and look at zgc oh hi",
    "start": "1595240",
    "end": "1600640"
  },
  {
    "text": "Duke and there you go there's the zgc graph so that's pretty awesome it's",
    "start": "1600640",
    "end": "1607039"
  },
  {
    "text": "really really cool and again it's the kind of thing that you can try out not necessarily for every application but if",
    "start": "1607039",
    "end": "1612159"
  },
  {
    "text": "you care a lot about latency and you don't want to give up a lot of throughput um give it a try um so new in",
    "start": "1612159",
    "end": "1618480"
  },
  {
    "text": "Java 21 um is we've added a generational capability this is something that we did",
    "start": "1618480",
    "end": "1624120"
  },
  {
    "text": "because basically we didn't want you to also have a lot uh higher footprint um",
    "start": "1624120",
    "end": "1629360"
  },
  {
    "text": "and so basically um we were able to uh find that we got you know tremendous reduction in in throughput with the",
    "start": "1629360",
    "end": "1635919"
  },
  {
    "text": "generational capability on Java 21 um on a real life case you know using Cassandra so again I I uh I hope you'll",
    "start": "1635919",
    "end": "1643720"
  },
  {
    "text": "tried out so lest do you think that you know we're just working on this new shiny",
    "start": "1643720",
    "end": "1649120"
  },
  {
    "text": "garbage collector and we don't care about the existing ones um this sort of gives you an idea of some of the other",
    "start": "1649120",
    "end": "1654440"
  },
  {
    "text": "work that we've been doing um in parallel on other garbage collectors so um they have continued to improve as",
    "start": "1654440",
    "end": "1661279"
  },
  {
    "text": "well uh and the reason for that is you know we don't think the garbage collection technology is yet at the point where there's one size that fits",
    "start": "1661279",
    "end": "1667600"
  },
  {
    "text": "all um we think that you know it does make sense for you to look at it and choose what's right for your particular",
    "start": "1667600",
    "end": "1675200"
  },
  {
    "start": "1676000",
    "end": "1842000"
  },
  {
    "text": "workload okay okay um next interesting feature I'm going to talk about project",
    "start": "1676360",
    "end": "1681519"
  },
  {
    "text": "Panama um so project P let me ask first how many people have had to write Java",
    "start": "1681519",
    "end": "1686960"
  },
  {
    "text": "code that is calling to Native or the other way around okay I'm so sorry I'm really",
    "start": "1686960",
    "end": "1694480"
  },
  {
    "text": "sorry um and the reason I'm sorry is that uh when we were originally uh",
    "start": "1694480",
    "end": "1700279"
  },
  {
    "text": "writing jni and adding the capability to call from java to Native um people were",
    "start": "1700279",
    "end": "1705399"
  },
  {
    "text": "frankly afraid that that's like all people were going to do right they weren't actually going to write any Java",
    "start": "1705399",
    "end": "1710559"
  },
  {
    "text": "programs they were just going to call out to Native so let's make it really hard um and they succeeded like jni is a",
    "start": "1710559",
    "end": "1716720"
  },
  {
    "text": "pain to use um it's a pain to maintain um the performance isn't great um I can",
    "start": "1716720",
    "end": "1722000"
  },
  {
    "text": "tell you I have in my group some folks who um who do support for customers and",
    "start": "1722000",
    "end": "1727480"
  },
  {
    "text": "it is way way over represented the number of bugs that come in that are basically bugs where people have tried",
    "start": "1727480",
    "end": "1732840"
  },
  {
    "text": "to call out to Native in jni and uh have have problems caused by that so we we",
    "start": "1732840",
    "end": "1738600"
  },
  {
    "text": "decided that you know now uh there's enough Joba out there in the world that like we could actually make this easy and convenient um for people and there",
    "start": "1738600",
    "end": "1746279"
  },
  {
    "text": "are lots of good reasons right there are lots of reasons you might want to call native there are lot there's lots of great libraries out there um we've seen",
    "start": "1746279",
    "end": "1752559"
  },
  {
    "text": "lots of techniques that have been used for instance machine learning in Python is mostly just calling out to a library",
    "start": "1752559",
    "end": "1758000"
  },
  {
    "text": "in another language um and so we felt that Java was at a disadvantage not having a good capability for that and we",
    "start": "1758000",
    "end": "1765080"
  },
  {
    "text": "decided to do something about it this was a few years ago um and the result of that work uh is Project Panama and so",
    "start": "1765080",
    "end": "1773240"
  },
  {
    "text": "let's go ahead and look at this um basically uh it allow it it there are",
    "start": "1773240",
    "end": "1778360"
  },
  {
    "text": "kind of two things that it really covers um oh and I should mention it's already final but it's final in",
    "start": "1778360",
    "end": "1784960"
  },
  {
    "text": "22 um so basically it allows you to combine Java and native code it also",
    "start": "1784960",
    "end": "1790440"
  },
  {
    "text": "allows you to manage off Heap memory um and so uh that we think is going to make",
    "start": "1790440",
    "end": "1797480"
  },
  {
    "text": "things a lot better for people as a side effect it's also going to allow us eventually to get rid of sunk unsafe",
    "start": "1797480",
    "end": "1805080"
  },
  {
    "text": "which is you know if in case the name doesn't make it clear is unsafe um okay so basically the this is",
    "start": "1805080",
    "end": "1813519"
  },
  {
    "text": "sort of the goal is to give a uh a better and performant alternative final",
    "start": "1813519",
    "end": "1819200"
  },
  {
    "text": "in22 um it has been imp preview actually for quite a while so um you know you've",
    "start": "1819200",
    "end": "1824720"
  },
  {
    "text": "been able to use it you've been able to try it out and have done that and give us given us lots of of feedback um so I",
    "start": "1824720",
    "end": "1831600"
  },
  {
    "text": "I think this is something that a lot of like you know not everyone is going to use it but people who have this need I I",
    "start": "1831600",
    "end": "1837600"
  },
  {
    "text": "think are really going to appreciate the capabilities that it brings all right I'm going to mention",
    "start": "1837600",
    "end": "1843600"
  },
  {
    "start": "1842000",
    "end": "1902000"
  },
  {
    "text": "project Amber just kind of briefly um this is a project that is really about",
    "start": "1843600",
    "end": "1848760"
  },
  {
    "text": "um trying to sort of rightsize ceremony in the Java language um I'm going to give a particular example in a moment",
    "start": "1848760",
    "end": "1855440"
  },
  {
    "text": "but this is to give you a little bit of an idea of this notion I was talking about of breaking larger features down",
    "start": "1855440",
    "end": "1861080"
  },
  {
    "text": "into smaller ones so in the past we would have looked at this and said you know we want to add pattern matching to",
    "start": "1861080",
    "end": "1866679"
  },
  {
    "text": "Java and we would have thought of all of the places we wanted to add pattern matching to Java and we would have tried to work through all of them and it would",
    "start": "1866679",
    "end": "1873240"
  },
  {
    "text": "have taken years and they would have come in and it would have turned out that we got something slightly wrong and everyone would hate it um and instead",
    "start": "1873240",
    "end": "1879600"
  },
  {
    "text": "what we've been able to do is take simple examples start to build on those get feedback see how they work um and",
    "start": "1879600",
    "end": "1885639"
  },
  {
    "text": "try to make sure that as we're adding it throughout the language um it is something that is coherent and um really",
    "start": "1885639",
    "end": "1892559"
  },
  {
    "text": "solves a need that people have and you know again this is not something where we started out and said pattern matching",
    "start": "1892559",
    "end": "1898600"
  },
  {
    "text": "is cool let's add that it really was kind of the other way around we started from the perspective of people more and",
    "start": "1898600",
    "end": "1904960"
  },
  {
    "start": "1902000",
    "end": "1972000"
  },
  {
    "text": "more want to do data oriented programming right you know when Java came out uh in the mid90s we were just",
    "start": "1904960",
    "end": "1911399"
  },
  {
    "text": "coming off of you know using that cool cool small talk stuff right like everything's objects well except",
    "start": "1911399",
    "end": "1916440"
  },
  {
    "text": "Primitives cuz something has to be fast um and we wanted to get to you know a point where that power of objects was",
    "start": "1916440",
    "end": "1922960"
  },
  {
    "text": "everywhere and you know we we added things to the language like serialization dare I say it um where you",
    "start": "1922960",
    "end": "1929799"
  },
  {
    "text": "could ship objects back and forth between processes um okay well that's great it's powerful it's useful for some",
    "start": "1929799",
    "end": "1936039"
  },
  {
    "text": "things but it turns out that's not mostly what people want to do what people mostly want to do is something",
    "start": "1936039",
    "end": "1942200"
  },
  {
    "text": "like Json right it's like take some immutable data from over here ship it over there be able to you know take it",
    "start": "1942200",
    "end": "1949000"
  },
  {
    "text": "into its its component parts build it back up again um and not have security bugs in the meantime um and so that's",
    "start": "1949000",
    "end": "1956200"
  },
  {
    "text": "kind of where we've been headed is with you know the ability to handle that kind of immutable data in you know large",
    "start": "1956200",
    "end": "1962279"
  },
  {
    "text": "amounts and reason over it in a very very performant way on Modern Hardware architectures so all of those things",
    "start": "1962279",
    "end": "1968559"
  },
  {
    "text": "from Amber or most of them are really kind of from that",
    "start": "1968559",
    "end": "1973840"
  },
  {
    "start": "1972000",
    "end": "2037000"
  },
  {
    "text": "okay next area Java in the small what do I mean by that you know most of the",
    "start": "1973840",
    "end": "1979760"
  },
  {
    "text": "features that we've looked at thus far have been improvements that have helped experience developers solve really",
    "start": "1979760",
    "end": "1985600"
  },
  {
    "text": "complex problems but you know Java isn't just intended to be for the most complex cases in fact when it got started you",
    "start": "1985600",
    "end": "1993000"
  },
  {
    "text": "know we were kind of compared with you know things like C++ and we were called like a toy language for bouncing heads",
    "start": "1993000",
    "end": "1999480"
  },
  {
    "text": "in browsers right um if you don't know that reference look it up um so as time",
    "start": "1999480",
    "end": "2006440"
  },
  {
    "text": "has marched on other languages have sprung up or actually become better at offering a simpler model for programmers",
    "start": "2006440",
    "end": "2012480"
  },
  {
    "text": "to get started and we wanted to kind of learn from that um so you know I'd encourage you if you haven't to check",
    "start": "2012480",
    "end": "2018600"
  },
  {
    "text": "out the white paper Paving the on-ramp um which goes through some of the work that we've done and intent to do here",
    "start": "2018600",
    "end": "2024360"
  },
  {
    "text": "and I think one thing to keep in mind is um our intent is not to have a simple mode and an advanced mode it's really",
    "start": "2024360",
    "end": "2031000"
  },
  {
    "text": "that it they all be valid Java but that you be able to start with something simple and build up to something more",
    "start": "2031000",
    "end": "2036399"
  },
  {
    "text": "complex as you learn so I'm going to give you kind of an example here right most people who learn Java don't have a",
    "start": "2036399",
    "end": "2043000"
  },
  {
    "start": "2037000",
    "end": "2195000"
  },
  {
    "text": "good time their first hello world program is full boiler plate that makes them think oh my God Java is",
    "start": "2043000",
    "end": "2050839"
  },
  {
    "text": "hard right and you know more than boilerplate it's full of Concepts there are Concepts that the students aren't",
    "start": "2050839",
    "end": "2057358"
  },
  {
    "text": "really ready for so the teacher has to say well just never mind that you'll understand it later right you I see a",
    "start": "2057359",
    "end": "2065040"
  },
  {
    "text": "lot of you kind of nauy and recognition yeah remember that okay well you know",
    "start": "2065040",
    "end": "2071200"
  },
  {
    "text": "90% of everyone's first program is kind of about Concepts that are designed for professionals who build large",
    "start": "2071200",
    "end": "2077679"
  },
  {
    "text": "applications um you've got things like you know classes static methods arrays Access Control static fields and that",
    "start": "2077679",
    "end": "2084440"
  },
  {
    "text": "list kind of goes on and on right and we actually think that the on-ramp for Java",
    "start": "2084440",
    "end": "2090320"
  },
  {
    "text": "can be made a lot Smoother by taking some of those unnecessary Concepts away",
    "start": "2090320",
    "end": "2096358"
  },
  {
    "text": "so the first thing we can take away in this you know very very simple program is the arguments right if you're not",
    "start": "2096359",
    "end": "2102359"
  },
  {
    "text": "going to use command line arguments do you really need to have the string array no all right so we take that away if you",
    "start": "2102359",
    "end": "2108720"
  },
  {
    "text": "only have one class do you really need to have access controls to talk about what which other classes can invoke your",
    "start": "2108720",
    "end": "2115599"
  },
  {
    "text": "methods no you don't need that either what about static okay well you",
    "start": "2115599",
    "end": "2121880"
  },
  {
    "text": "don't need static at this point you know the compiler can figure out that this class has an accessible public",
    "start": "2121880",
    "end": "2127040"
  },
  {
    "text": "Constructor a main method and do the right thing to get main running well system.out.print line is",
    "start": "2127040",
    "end": "2134359"
  },
  {
    "text": "you know probably the most common utterance in your first 100 programs um do we need to make you jump through",
    "start": "2134359",
    "end": "2139720"
  },
  {
    "text": "hoops every time you want to do that no in fact we don't even need to make you declare the class this code is",
    "start": "2139720",
    "end": "2147240"
  },
  {
    "text": "probably in a file called hello world. Java so the compiler can just make up a class based on that",
    "start": "2147240",
    "end": "2152720"
  },
  {
    "text": "name so all you really need are some statements and some methods to print",
    "start": "2152720",
    "end": "2157839"
  },
  {
    "text": "something on screen Paving the on-ramp is about altering the Java language so that this",
    "start": "2157839",
    "end": "2164480"
  },
  {
    "text": "program is legal and you know it might seem like this is a war on boilerplate",
    "start": "2164480",
    "end": "2169920"
  },
  {
    "text": "but it's really not simple programs should be simple and kind of build up to object-oriented Concepts when students",
    "start": "2169920",
    "end": "2176839"
  },
  {
    "text": "are ready you know we think one of the reasons why people teach python uh as a first language today is because students",
    "start": "2176839",
    "end": "2183599"
  },
  {
    "text": "can be writing their first program in like 30 seconds and the concepts can be introduced incrementally so we want to",
    "start": "2183599",
    "end": "2190520"
  },
  {
    "text": "help Educators teach Java in a similar way now you know learning a new language",
    "start": "2190520",
    "end": "2198440"
  },
  {
    "start": "2195000",
    "end": "2243000"
  },
  {
    "text": "is not necessarily just about the language itself and the syntax it's also about the tools and you know we one of the trends",
    "start": "2198440",
    "end": "2206200"
  },
  {
    "text": "we've seen in education has been towards lighter weight more accessible ID such as vs code um we took a look at the Java",
    "start": "2206200",
    "end": "2212240"
  },
  {
    "text": "support mvs code and frankly we were kind of disappointed um and found that a bunch of the work that we had done on",
    "start": "2212240",
    "end": "2218079"
  },
  {
    "text": "net beans in the past to make it use the Java C compiler directly out of the box",
    "start": "2218079",
    "end": "2223680"
  },
  {
    "text": "um could be reused here um and so we put together and have put out a plugin for vs code that's based on uh the net net",
    "start": "2223680",
    "end": "2230319"
  },
  {
    "text": "beans LSP and Java c um from the Oracle jdk so try it out it's um it's pretty",
    "start": "2230319",
    "end": "2235760"
  },
  {
    "text": "good and the nice thing about that is anytime we add something it's immediately available and to make things even even",
    "start": "2235760",
    "end": "2243520"
  },
  {
    "start": "2243000",
    "end": "2493000"
  },
  {
    "text": "you know less friction to try out new versions of java um we also added a playground to the dev. Java site which",
    "start": "2243520",
    "end": "2250720"
  },
  {
    "text": "is a site that we have for um you know Bas basically for uh developers right",
    "start": "2250720",
    "end": "2256560"
  },
  {
    "text": "this is what everyone thinks Java java.com should be but it's not for historical reasons so if you haven't",
    "start": "2256560",
    "end": "2261839"
  },
  {
    "text": "checked out Java uh dev. Java check it out and especially check out the playground this actually uses Oracle",
    "start": "2261839",
    "end": "2266920"
  },
  {
    "text": "functions in the back end to take whatever you're typing and send it off and execute it and give you the feedback",
    "start": "2266920",
    "end": "2272520"
  },
  {
    "text": "so it's a it's like a repple it's all built on jshell which is in the jdk um",
    "start": "2272520",
    "end": "2277880"
  },
  {
    "text": "using the apis that we have okay so I talked a bunch about",
    "start": "2277880",
    "end": "2284599"
  },
  {
    "text": "features um now I'm going to talk about seat belts all right that's weird um okay let",
    "start": "2284599",
    "end": "2291920"
  },
  {
    "text": "me explain when I was a kid um you know seat belt use was not required in the US",
    "start": "2291920",
    "end": "2297560"
  },
  {
    "text": "um regulations you know came after you know when I was kind of in my teens and you know basically most people you know",
    "start": "2297560",
    "end": "2304119"
  },
  {
    "text": "took it as kind of a helpful nudge to do what they already knew was really a good idea um but there was sort of a vocal",
    "start": "2304119",
    "end": "2309880"
  },
  {
    "text": "minority who chose and said to complain about governmental overreach the intrusion on personal freedoms um okay",
    "start": "2309880",
    "end": "2317000"
  },
  {
    "text": "well you know 30 years later like most people now wear their seat belts and Highway fatalities are way down right so",
    "start": "2317000",
    "end": "2324400"
  },
  {
    "text": "when we did modularity in Java 9 we described it as a seat belt not a",
    "start": "2324400",
    "end": "2329800"
  },
  {
    "text": "jetpack now you know a lot of people kind of looked at this and like the analogy was lost because they were like",
    "start": "2329800",
    "end": "2334960"
  },
  {
    "text": "I don't see any jetpacks what's he talking about about right so um you know strapping yourself in when there there's",
    "start": "2334960",
    "end": "2342079"
  },
  {
    "text": "nothing you're going to get from it and you're not moving very fast kind of seems unappealing right um well the seat",
    "start": "2342079",
    "end": "2347880"
  },
  {
    "text": "belt a project jigsaw um the internal that internals can be kept internal is",
    "start": "2347880",
    "end": "2352920"
  },
  {
    "text": "not there because we wanted to you know wag our fingers and say you're doing bad things it's there because we wanted to",
    "start": "2352920",
    "end": "2359119"
  },
  {
    "text": "move faster we wanted to bring you jetpacks in the early days of java most boundaries such as Access Control were",
    "start": "2359119",
    "end": "2365280"
  },
  {
    "text": "more like suggestions right libraries did some very cool things with this flexibility um but it",
    "start": "2365280",
    "end": "2371280"
  },
  {
    "text": "didn't take long before that started to be a real drag on our ability to actually evolve Java and make it better",
    "start": "2371280",
    "end": "2376880"
  },
  {
    "text": "for you um and in fact you know the th those use of internal apis um became",
    "start": "2376880",
    "end": "2383480"
  },
  {
    "text": "sort of uh you know de facto supported apis we couldn't make changes to them or things would break and in the 678 time",
    "start": "2383480",
    "end": "2390079"
  },
  {
    "text": "frame this become a real drag on our ability to evolve the platform um luckily we've left that in the past the",
    "start": "2390079",
    "end": "2395960"
  },
  {
    "text": "rapid p Cas of innovation you're seeing today is the jetpack project Loom is the jetpack zgc is a jetpack and so it's",
    "start": "2395960",
    "end": "2402920"
  },
  {
    "text": "nice to think that we can have jetpacks without seat bels but the reality is there's no way we could have delivered",
    "start": "2402920",
    "end": "2408640"
  },
  {
    "text": "um these jetpacks so quickly and reliably um without the seat belts so by writing in Java today your",
    "start": "2408640",
    "end": "2416000"
  },
  {
    "text": "application gets a steady stream of improvements tomorrow delivered incrementally and compatibly you can",
    "start": "2416000",
    "end": "2421640"
  },
  {
    "text": "upgrade to Java 21 and get the benefits of zgc with no code changes or of loom with minimal code changes that is if you",
    "start": "2421640",
    "end": "2429560"
  },
  {
    "text": "can upgrade so I hear you thinking wait a minute hold on Java's all about",
    "start": "2429560",
    "end": "2434800"
  },
  {
    "text": "compatibility what's the problem here um well the problem is almost always about",
    "start": "2434800",
    "end": "2441680"
  },
  {
    "text": "dependencies and often intect in dependencies right so it's not that you've written something that's bad it's",
    "start": "2441680",
    "end": "2447400"
  },
  {
    "text": "that you're using a library that's using a library that has chosen to take Liberties and now it's hard for you to",
    "start": "2447400",
    "end": "2453480"
  },
  {
    "text": "upgrade so most libraries don't have any trouble upgrading to the latest jdk but a small number can't because they're",
    "start": "2453480",
    "end": "2459040"
  },
  {
    "text": "dependent on unsupported platform internals unfortunately it just takes one of those dependencies um to make it",
    "start": "2459040",
    "end": "2466440"
  },
  {
    "text": "so that the entire application can't be upgraded um and that might be one you don't even know about which just came",
    "start": "2466440",
    "end": "2472280"
  },
  {
    "text": "along as a dependency of something else so you know the good news is that the jetpacks will keep coming um but we have",
    "start": "2472280",
    "end": "2479200"
  },
  {
    "text": "a challenge ahead of us one which we have to navigate kind of together as a community um which is how to manage the",
    "start": "2479200",
    "end": "2485119"
  },
  {
    "text": "transition to Universal seat belt use so uh you know when we've done that we can",
    "start": "2485119",
    "end": "2490960"
  },
  {
    "text": "all get to ride the jetpack safely the challenge here is that",
    "start": "2490960",
    "end": "2496079"
  },
  {
    "start": "2493000",
    "end": "2563000"
  },
  {
    "text": "applications are the applications are seeing an upgrading to 17 or 21 it comes from a small fractional libraries um",
    "start": "2496079",
    "end": "2502000"
  },
  {
    "text": "they're using apis that are restricted or removed even in later jdk versions now you know we don't remove things",
    "start": "2502000",
    "end": "2508359"
  },
  {
    "text": "gratuitously um and when we do there's almost a supported alternative um we saw an example uh earlier with Panama where",
    "start": "2508359",
    "end": "2515599"
  },
  {
    "text": "you know off heat memory management that people currently do with unsafe is being replaced by a better and safer",
    "start": "2515599",
    "end": "2521119"
  },
  {
    "text": "alternative but you know replacing something better uh replacing something with a better something it should be a",
    "start": "2521119",
    "end": "2527119"
  },
  {
    "text": "good thing but sometimes it puts libraries uh that that use those things into a bind because they have a hard",
    "start": "2527119",
    "end": "2534040"
  },
  {
    "text": "time supporting both the new way and the old way um and so you know that that's a",
    "start": "2534040",
    "end": "2539520"
  },
  {
    "text": "bit of a challenge I believe that the answer to that challenge is if more",
    "start": "2539520",
    "end": "2544559"
  },
  {
    "text": "libraries learn from what we did successfully on the jdk and embrace a similar model if libraries develop with",
    "start": "2544559",
    "end": "2551920"
  },
  {
    "text": "a tip and tail method they can both support their users who are using an existing LTS version and also support",
    "start": "2551920",
    "end": "2559839"
  },
  {
    "text": "the new things that are coming so that's really you know what I'm hoping we're going to see and if",
    "start": "2559839",
    "end": "2565720"
  },
  {
    "start": "2563000",
    "end": "2571000"
  },
  {
    "text": "there are any library maintainers in the audience come hit me up after the talk and we'll talk about it um now I imagine",
    "start": "2565720",
    "end": "2572160"
  },
  {
    "start": "2571000",
    "end": "2592000"
  },
  {
    "text": "that you know if there are Library maintainers you're skeptical about this you think it's going to be hard you think it's going to be expensive um and",
    "start": "2572160",
    "end": "2577920"
  },
  {
    "text": "I I would just kind of encourage you to think about the fact that we thought that too and it turned out to be the",
    "start": "2577920",
    "end": "2583160"
  },
  {
    "text": "opposite it turned out to be the best thing that we ever did for being able to continue to improve",
    "start": "2583160",
    "end": "2590200"
  },
  {
    "text": "Java all right now the the sort of lesson and on seat belts is over um and",
    "start": "2590200",
    "end": "2595480"
  },
  {
    "start": "2592000",
    "end": "2634000"
  },
  {
    "text": "we'll get back to something fun which is what's another jetpack that's coming uh and here I want to mention project",
    "start": "2595480",
    "end": "2601280"
  },
  {
    "text": "Leiden so um project Leiden is about improving startup and warm-up a Java",
    "start": "2601280",
    "end": "2606480"
  },
  {
    "text": "applications for you know long running applications might not matter um but for some applications or architectural",
    "start": "2606480",
    "end": "2612520"
  },
  {
    "text": "patterns that are very popular it well could um and in any event I've never had a developer who came to me and said um I",
    "start": "2612520",
    "end": "2619440"
  },
  {
    "text": "wish my program took longer to start up and reach Peach reach Peak Performance right um so I I think you know one thing",
    "start": "2619440",
    "end": "2627160"
  },
  {
    "text": "that's worth thinking about is there's a lot that goes on in Java applications and in the runtime as a part of",
    "start": "2627160",
    "end": "2632400"
  },
  {
    "text": "application startup um you know everyone knows that Java is a statically typed language and that brings a lot of",
    "start": "2632400",
    "end": "2637880"
  },
  {
    "start": "2634000",
    "end": "2781000"
  },
  {
    "text": "advantages but Java also has a tremendous amount of dynamism and that brings a different set of advantages",
    "start": "2637880",
    "end": "2643280"
  },
  {
    "text": "that we all benefit from um but that dynamism comes often at the cost of slower startup and warmup um as always",
    "start": "2643280",
    "end": "2650760"
  },
  {
    "text": "we're you know we're looking at ways to give you the best of both worlds um and make improvements to both of those",
    "start": "2650760",
    "end": "2657040"
  },
  {
    "text": "without making you give up Dynam dynamism um but we're also looking at what kind of trade-offs can be made",
    "start": "2657040",
    "end": "2662240"
  },
  {
    "text": "where you might be willing to give up a little bit of dimm in in favor of better start up and warm up so that is",
    "start": "2662240",
    "end": "2668920"
  },
  {
    "text": "basically what project lien is about right is if we look at the curve here you can see the startup phase you see",
    "start": "2668920",
    "end": "2674880"
  },
  {
    "text": "the warm-up phase um that's in the yellow and the ideal would be this sort of green line at the bottom um we've",
    "start": "2674880",
    "end": "2681079"
  },
  {
    "text": "done a bunch of work I'm I'm happy to say and the result of of that work I'm going to show you a couple slides on",
    "start": "2681079",
    "end": "2687559"
  },
  {
    "text": "here the way that this works is looking at things that can be shifted from",
    "start": "2687559",
    "end": "2692839"
  },
  {
    "text": "startup time or warm-up time either later by doing it lazily when it's needed or doing it earlier for instance",
    "start": "2692839",
    "end": "2700359"
  },
  {
    "text": "at Builder deploy time um and these are actually tricks that Java has done for years um it's just that we've really",
    "start": "2700359",
    "end": "2706800"
  },
  {
    "text": "been looking at you know how far we can push the envelope on that so with the work done thus far um one thing that we",
    "start": "2706800",
    "end": "2713680"
  },
  {
    "text": "tried it with is is Java c um which it turns out is a very very popular Java program that lots of people run um and",
    "start": "2713680",
    "end": "2720920"
  },
  {
    "text": "the uh red line that you see there represents the Improvement to Startup so it's about a 2X startup Improvement um",
    "start": "2720920",
    "end": "2728760"
  },
  {
    "text": "and also to warm up and that's basically with just uh about under six months of",
    "start": "2728760",
    "end": "2735079"
  },
  {
    "text": "work on lien thus far um now that looks great but you know Java C is a small",
    "start": "2735079",
    "end": "2740800"
  },
  {
    "text": "program um what about something a little more real well uh we decided we would",
    "start": "2740800",
    "end": "2746200"
  },
  {
    "text": "look uh we would look at Spring boot um which is a little bit",
    "start": "2746200",
    "end": "2753079"
  },
  {
    "text": "larger and they have an example program which is called pep Clinic um and you know basically what we found was that",
    "start": "2753079",
    "end": "2759680"
  },
  {
    "text": "the work shifting from Leiden um was combined with the condenser that the spring team had already done themselves",
    "start": "2759680",
    "end": "2766160"
  },
  {
    "text": "and uh you know basically that resulted in about a 4X startup Improvement so",
    "start": "2766160",
    "end": "2772200"
  },
  {
    "text": "pretty cool very exciting jetpack to come I don't know about you but like that's the kind of Jetpack I'm really",
    "start": "2772200",
    "end": "2778079"
  },
  {
    "text": "excited to see with that I wanted to say thank you thank you for coming do we have time for",
    "start": "2778079",
    "end": "2784359"
  },
  {
    "start": "2781000",
    "end": "2797000"
  },
  {
    "text": "questions or are we going to we do have questions okay there's hands",
    "start": "2784359",
    "end": "2792300"
  },
  {
    "text": "[Applause] up",
    "start": "2792300",
    "end": "2798440"
  }
]