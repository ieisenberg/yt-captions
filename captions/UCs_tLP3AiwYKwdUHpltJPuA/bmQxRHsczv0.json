[
  {
    "text": "[Music] my name is Diogo Monica I'm the security leader talker and today I want to talk a",
    "start": "6990",
    "end": "12860"
  },
  {
    "text": "little bit about secure substrate building the mobi wale so this is kind of a cryptic title which I hope will be",
    "start": "12860",
    "end": "19520"
  },
  {
    "text": "very clear at this last slide of this presentation why I use this actual slide and before I go into the talk itself",
    "start": "19520",
    "end": "26419"
  },
  {
    "text": "just want to talk a little bit about me I do like motorcycles and I do like whitewater rafting but as a day job I",
    "start": "26419",
    "end": "34370"
  },
  {
    "text": "run the security team at docker show of hands how many people actually use",
    "start": "34370",
    "end": "39649"
  },
  {
    "text": "docker and the audience okay show of hands how many people actually use computers in the audience about the same",
    "start": "39649",
    "end": "46100"
  },
  {
    "text": "that's good before docker actually used to work for a company called square",
    "start": "46100",
    "end": "51700"
  },
  {
    "text": "square is an infrastructure company that does payments and I was there for four years building cryptography and before",
    "start": "51700",
    "end": "59480"
  },
  {
    "text": "Square and it's not shown in the slide because it's a little bit embarrassing but I was doing a PhD and the she booted",
    "start": "59480",
    "end": "65390"
  },
  {
    "text": "systems because I wanted my dad to love me that totally failed so ok after I",
    "start": "65390",
    "end": "72950"
  },
  {
    "text": "wasted too many years of my PhD I started working in security and now today I want to talk to you about some",
    "start": "72950",
    "end": "79249"
  },
  {
    "text": "stuff that we've been working at docker in particular I want to start with this terminal this terminal is pretty in the",
    "start": "79249",
    "end": "88039"
  },
  {
    "text": "first place but the second thing that is showing is is showing you a docker stack deploy which is a one command that feeds from a",
    "start": "88039",
    "end": "96319"
  },
  {
    "text": "llam√≥ file and deploys a set of micro services what it's actually doing when",
    "start": "96319",
    "end": "101569"
  },
  {
    "text": "you do a docker deploy for those of you that are familiar with it is it creates networks for you it runs micro services",
    "start": "101569",
    "end": "108889"
  },
  {
    "text": "connects them all to each other sets up all the environmental variables runs these containers then all of a sudden by",
    "start": "108889",
    "end": "114289"
  },
  {
    "text": "running one command you have a full working infrastructure database your in-memory store your application your",
    "start": "114289",
    "end": "121579"
  },
  {
    "text": "workers doesn't matter what it is you can actually have a full infrastructure with one command the reason why I'm",
    "start": "121579",
    "end": "127669"
  },
  {
    "text": "showing you this is this is really easy but just because it's easy it does not",
    "start": "127669",
    "end": "134630"
  },
  {
    "text": "mean that it's simple so today my talk is about what is actually under the hood",
    "start": "134630",
    "end": "141440"
  },
  {
    "text": "and to show you what is actually happening under the hood when you do this command in particular we're gonna",
    "start": "141440",
    "end": "148070"
  },
  {
    "text": "look at all the pieces that are necessary for docker stack deploy to work securely and one analogy that I",
    "start": "148070",
    "end": "154760"
  },
  {
    "text": "actually really like to use is Tetris show of hands those of you that have played Tetris okay about the same people",
    "start": "154760",
    "end": "161180"
  },
  {
    "text": "that you would use docker so that's great Tetris is a really simple game as you know the goal of the game is to have",
    "start": "161180",
    "end": "168350"
  },
  {
    "text": "these tetra Nomos which is actually turns out is the official name for those little things to Tirana Mo's I thought",
    "start": "168350",
    "end": "173780"
  },
  {
    "text": "that was cool the Tirana Mo's have to be piled up in a way that they create full lines and don't leave any gaps that's",
    "start": "173780",
    "end": "182090"
  },
  {
    "text": "the purpose of the game whenever have a full line the line disappears and you get to continue playing if they all pile",
    "start": "182090",
    "end": "187490"
  },
  {
    "text": "up and you're full of holes then you lose the reason why I'm using Tetris as an analogy is because turns out that",
    "start": "187490",
    "end": "195170"
  },
  {
    "text": "Tetris is like infrastructure security if you leave holes you have vulnerabilities so today I want to talk",
    "start": "195170",
    "end": "203090"
  },
  {
    "text": "about tetra namas and specifically I want to talk about the seven tetra Nomos",
    "start": "203090",
    "end": "208880"
  },
  {
    "text": "that are related to security that docker has actually created each of them has a",
    "start": "208880",
    "end": "214640"
  },
  {
    "text": "different purpose each of them impact security in some way and each of them is",
    "start": "214640",
    "end": "219800"
  },
  {
    "text": "going to contribute to the final platform into the final docker stack",
    "start": "219800",
    "end": "225440"
  },
  {
    "text": "deploy working under the hood in a secure fashion so there's several different deter animals each of these",
    "start": "225440",
    "end": "232580"
  },
  {
    "text": "two tirana Mo's is actually an open source software so you can go to github and see every single one of these as an",
    "start": "232580",
    "end": "238160"
  },
  {
    "text": "independent project we have infrakit which is a way to manage infrastructure and an infrastructure independent way",
    "start": "238160",
    "end": "245200"
  },
  {
    "text": "Linux kit which allows you to build OSS we have run C which is a container",
    "start": "245200",
    "end": "250850"
  },
  {
    "text": "runtime we have container D which is a container supervisor we have docker itself which is a",
    "start": "250850",
    "end": "257600"
  },
  {
    "text": "container execution platform notary that allows you to do signing and finally swarm kit which is a container",
    "start": "257600",
    "end": "263750"
  },
  {
    "text": "Orchestrator and so I'm gonna go into every single one of them and talk to you",
    "start": "263750",
    "end": "268790"
  },
  {
    "text": "about the security properties that they have and why you should be excited and one of the things that I want to mention is that every single one of these",
    "start": "268790",
    "end": "275220"
  },
  {
    "text": "pieces are supposed to be able to operate independently you can use them and compose them however you like and",
    "start": "275220",
    "end": "281280"
  },
  {
    "text": "throughout the presentation I'm gonna show you exactly this so let's go to the",
    "start": "281280",
    "end": "286800"
  },
  {
    "text": "first one let's talk a little bit about implicit what is infrakit infrakit is",
    "start": "286800",
    "end": "292560"
  },
  {
    "text": "actually one of the most recent to Tirana Mo's the docker has created an open-source projects and what it allows",
    "start": "292560",
    "end": "298260"
  },
  {
    "text": "you to do is allows you to have infrastructure independent machine management and what I mean by this is",
    "start": "298260",
    "end": "304440"
  },
  {
    "text": "that it doesn't really matter what cloud provider you're using you can be using local infrastructure AWS Google cloud",
    "start": "304440",
    "end": "312600"
  },
  {
    "text": "platform as your it doesn't really matter infrakit allows you to create virtual",
    "start": "312600",
    "end": "318090"
  },
  {
    "text": "machines manage the lifecycle of these virtual machines the operating system so on and so forth the reason why that's a",
    "start": "318090",
    "end": "324840"
  },
  {
    "text": "good idea is because we have one tool one declarative tool yellow-based that",
    "start": "324840",
    "end": "330480"
  },
  {
    "text": "allows you to control all of your machines and cloud migration becomes really easy and cloud management becomes",
    "start": "330480",
    "end": "336180"
  },
  {
    "text": "really easy because it's an independent platform that you get to operate on if Rickett has a few details that i think",
    "start": "336180",
    "end": "342210"
  },
  {
    "text": "are particularly interesting from a security perspective and just from a usability perspective the first one is",
    "start": "342210",
    "end": "348060"
  },
  {
    "text": "the Clara t'v updates so I think a lot of you are familiar with the clarity of",
    "start": "348060",
    "end": "353419"
  },
  {
    "text": "infrastructure and the concept where you have infrastructure s-code you define a",
    "start": "353419",
    "end": "359340"
  },
  {
    "text": "file a configuration file that sets what the infrastructure is supposed to be and once you commit that something happens",
    "start": "359340",
    "end": "366450"
  },
  {
    "text": "and that ensures that your infrastructure is in the state that you want it that it hasn't diverged that it actually has not changed it's exactly",
    "start": "366450",
    "end": "373380"
  },
  {
    "text": "what you defined as your configuration their infrastructure represents infrakit does this for the actual machine",
    "start": "373380",
    "end": "379280"
  },
  {
    "text": "management and it is pretty cool because the clarity of updates allow you to actually say for example the version of",
    "start": "379280",
    "end": "386940"
  },
  {
    "text": "the operating system you're running across your virtual machines so with infrakit you could have a file that says",
    "start": "386940",
    "end": "393000"
  },
  {
    "text": "I want five instances of this machine running this Linux operating system then",
    "start": "393000",
    "end": "398580"
  },
  {
    "text": "if you want to update the operating system the only thing you have to do is you change in the file the version you want to change you commit and then",
    "start": "398580",
    "end": "404910"
  },
  {
    "text": "infrakit will understand that the version is matching that you want a new version of",
    "start": "404910",
    "end": "410000"
  },
  {
    "text": "the Linux operating system and there will auto-update it for you using rolling deploys what this allows you to",
    "start": "410000",
    "end": "417259"
  },
  {
    "text": "do and what I would like you to have as a security metric is a concept called reverse of time that I've been talking a",
    "start": "417259",
    "end": "424789"
  },
  {
    "text": "little bit about lately so what is reverse of time in why should you care about it as a security metric well",
    "start": "424789",
    "end": "431889"
  },
  {
    "text": "reverse of time is the concept where instead of you being proud about the",
    "start": "431889",
    "end": "440180"
  },
  {
    "text": "uptime of a server oh I have a server that has been up for 12 years isn't that",
    "start": "440180",
    "end": "445669"
  },
  {
    "text": "cool instead of following that mentality of like 15 years ago would you now follow is the reverse of that you're",
    "start": "445669",
    "end": "452539"
  },
  {
    "text": "excited when the oldest server of your infrastructure is been alive for a week",
    "start": "452539",
    "end": "458360"
  },
  {
    "text": "for an hour that is something to be proud of something there's been a life for 12 years not so much in the reason",
    "start": "458360",
    "end": "465770"
  },
  {
    "text": "why this is important tracking the concept of reverse uptime as a metric is because it turns out that drift in",
    "start": "465770",
    "end": "473479"
  },
  {
    "text": "virtual machines in OSS is one of the biggest causes of downtown so if you're",
    "start": "473479",
    "end": "478970"
  },
  {
    "text": "constantly refreshing your machines if you have a maximum bound of one week all",
    "start": "478970",
    "end": "484099"
  },
  {
    "text": "my machines cannot be older than one week and you have something like infrakit then you will ensure that your",
    "start": "484099",
    "end": "490610"
  },
  {
    "text": "operating system is constantly being rotated new virtual machines are being created to meet this dependency of a",
    "start": "490610",
    "end": "496669"
  },
  {
    "text": "week old virtual machine and that removes drift machines can't drift if",
    "start": "496669",
    "end": "501949"
  },
  {
    "text": "they're constantly coming from a golden image if they're constantly being created from a fresh ISO from a fresh",
    "start": "501949",
    "end": "509210"
  },
  {
    "text": "AMI they can't drift from each other and from a security perspective that it was",
    "start": "509210",
    "end": "514490"
  },
  {
    "text": "an ops perspective management of uptime and drift but from a security perspective this is amazing how can you backdoor an image that",
    "start": "514490",
    "end": "521539"
  },
  {
    "text": "concept gets refreshed you can't have persistence if a hacker gets in it can have persistence on the host because the",
    "start": "521539",
    "end": "528320"
  },
  {
    "text": "image keeps getting updated the other side of reverse of time is great we're",
    "start": "528320",
    "end": "533360"
  },
  {
    "text": "tracking the time the oldest time of the machine that has been alive but the other thing that we have to do is we",
    "start": "533360",
    "end": "539120"
  },
  {
    "text": "have to constantly update our golden image so another metric that goes alongside reverse of time is golden image",
    "start": "539120",
    "end": "545689"
  },
  {
    "text": "freshness in this one you always want to have the freshest image you always want to update your golden image your ami",
    "start": "545689",
    "end": "551600"
  },
  {
    "text": "your ISO and by doing so having these two metrics together you know that your infrastructure is always up-to-date so",
    "start": "551600",
    "end": "558350"
  },
  {
    "text": "things like patching kernel are then automatically because since you are tracking reverse uptime in creating new",
    "start": "558350",
    "end": "563899"
  },
  {
    "text": "machines from a golden image that is patched as soon as possible then necessarily you have an",
    "start": "563899",
    "end": "569749"
  },
  {
    "text": "infrastructure as the latest patches the latest kernel and therefore is a more secure the way that we can do this or",
    "start": "569749",
    "end": "577309"
  },
  {
    "text": "the reason why we can do this is because infrakit allows you to do rolling deploys think you're familiar with wildung deploys",
    "start": "577309",
    "end": "583749"
  },
  {
    "text": "within load balancers the context of applications and load balancers the same concept could actually be applied for",
    "start": "583749",
    "end": "589999"
  },
  {
    "text": "machines if you're running an Orchestrator then it's actually pretty easy to take the workload from one host",
    "start": "589999",
    "end": "595970"
  },
  {
    "text": "movie to the other one shut down the old host and create a new one and this is",
    "start": "595970",
    "end": "600980"
  },
  {
    "text": "what I forget does for you it manages this dependency and allows you to effectively warn the hosts that they're",
    "start": "600980",
    "end": "606649"
  },
  {
    "text": "about to be shut down removes the workloads from those hosts shuts down those hosts and creates one fresh one",
    "start": "606649",
    "end": "611930"
  },
  {
    "text": "from the global image so this is something that you need to obviously support this kind of mentality around",
    "start": "611930",
    "end": "616939"
  },
  {
    "text": "tracking reverse uptime so that's infrakit now let's talk about the next",
    "start": "616939",
    "end": "623029"
  },
  {
    "text": "piece of open source software Linux get Linux kit is not an operating system",
    "start": "623029",
    "end": "629600"
  },
  {
    "text": "Linux kit is not is not boom boom - what the Linux kit does is it actually builds",
    "start": "629600",
    "end": "636079"
  },
  {
    "text": "an operating system for you so think of it as an operating system builder an",
    "start": "636079",
    "end": "642129"
  },
  {
    "text": "analogy that we can actually make is the same way that docker like a docker image",
    "start": "642129",
    "end": "648679"
  },
  {
    "text": "format is not an image it is something that allows to build an image and you have a docker file that tells your",
    "start": "648679",
    "end": "656120"
  },
  {
    "text": "docker how to build this image right you can always rebuild it and you'll have an image to be able to deploy Linux kit is",
    "start": "656120",
    "end": "661970"
  },
  {
    "text": "the same thing but for operating systems so as the clarity of infrastructure as a declarative mo file you say exactly what",
    "start": "661970",
    "end": "669949"
  },
  {
    "text": "you want from your operating system in this case you say that you want a kernel with a certain version",
    "start": "669949",
    "end": "675170"
  },
  {
    "text": "you want this init system on boot you want to run DHCP and you want to run it with these flags and you want to make",
    "start": "675170",
    "end": "681649"
  },
  {
    "text": "sure that you're trusting the organization Linux kit for security in this case that means that these things",
    "start": "681649",
    "end": "687470"
  },
  {
    "text": "have to become and be signed by us docker and once you have this you tell",
    "start": "687470",
    "end": "692600"
  },
  {
    "text": "Linux kit to build it in Linux it will give you an ISO and AMI it will give you something for you to run so it just",
    "start": "692600",
    "end": "699019"
  },
  {
    "text": "built an operating system for you just in time why is this cool well the same",
    "start": "699019",
    "end": "705139"
  },
  {
    "text": "way that we always tell you to run minimal containers run containers that are the smallest possible that have the",
    "start": "705139",
    "end": "710720"
  },
  {
    "text": "least amount of stuff in them minimize the attack surface really really small",
    "start": "710720",
    "end": "715760"
  },
  {
    "text": "megabytes size containers the same thing applies for operating systems why would you have hundreds of system packages why",
    "start": "715760",
    "end": "723320"
  },
  {
    "text": "would you have hundreds of unused binaries why would you have that kind of exposure why would you have gigabytes of",
    "start": "723320",
    "end": "728420"
  },
  {
    "text": "an operating system where you need 1% of and so Linux kit follows the principle",
    "start": "728420",
    "end": "735050"
  },
  {
    "text": "of least privilege and in this case only allows you or only puts inside of the",
    "start": "735050",
    "end": "740570"
  },
  {
    "text": "final operating system exactly what you tell it to so if we built the previous operating system with a sam'l file",
    "start": "740570",
    "end": "745970"
  },
  {
    "text": "you're sure that that operating system will only have the HCP and will have the net system on a kernel that is 4.9 dot X",
    "start": "745970",
    "end": "753290"
  },
  {
    "text": "that's the only thing it will have if you want anything else in it you have to declare it what this means is that it's",
    "start": "753290",
    "end": "759829"
  },
  {
    "text": "a really minimal operating system which is obviously a very secure operating system it actually goes one step further",
    "start": "759829",
    "end": "766070"
  },
  {
    "text": "and allows you to run your operating system in an immutable fashion what that",
    "start": "766070",
    "end": "771410"
  },
  {
    "text": "means is that the operating system will not be writable it will only be readable so if there's an attacker that gets to",
    "start": "771410",
    "end": "777350"
  },
  {
    "text": "compromise your hosts in be on the operating system there's no and there's nothing that it can actually alter",
    "start": "777350",
    "end": "782449"
  },
  {
    "text": "there's no persistence there's no changing binaries there's no back door in your SSH number one we didn't have",
    "start": "782449",
    "end": "787519"
  },
  {
    "text": "SSH because we didn't have that binary and number two it can't write to the actual operating system so that further",
    "start": "787519",
    "end": "793970"
  },
  {
    "text": "adds to security not only at least privileged at least Authority in terms of only the things that you need you can't write to it other things that we",
    "start": "793970",
    "end": "802010"
  },
  {
    "text": "do in Linux kit we try to incubate new projects that are up and coming in that are really additive from a security",
    "start": "802010",
    "end": "808430"
  },
  {
    "text": "perspective things like Len lock LS M which is a Linux security module that allows you to",
    "start": "808430",
    "end": "813889"
  },
  {
    "text": "EVP F and kernel we obviously are adding why guard which is a really secure alternative to IPSec it is a VPN",
    "start": "813889",
    "end": "821359"
  },
  {
    "text": "tunneling mechanism that is really small 5,000 lines of code and very very well implemented so secure",
    "start": "821359",
    "end": "828139"
  },
  {
    "text": "instead of IPSec with hundreds of thousands of lines of code we are also going down the path of",
    "start": "828139",
    "end": "835149"
  },
  {
    "text": "rewriting system demons such as DHCP in-memory safe languages like Oh camel",
    "start": "835149",
    "end": "840949"
  },
  {
    "text": "what this means is that the things that you're adding to your operating system are no longer written in C vulnerable to",
    "start": "840949",
    "end": "847519"
  },
  {
    "text": "buffer overflows they are written in a memory safe language which further minimizes your surfer's of exposure and",
    "start": "847519",
    "end": "853669"
  },
  {
    "text": "your exposure to attacks from the outside so this permeates throughout all of",
    "start": "853669",
    "end": "859339"
  },
  {
    "text": "Linux king lease privilege minimal Authority a final thing that I want to",
    "start": "859339",
    "end": "865279"
  },
  {
    "text": "say is that Linux it is not something is Oh Tarek in you if you've if you've used docker for Mac or docker for Windows",
    "start": "865279",
    "end": "871939"
  },
  {
    "text": "you're actually using Linux hid right now because the way that we build the operating system that is running inside of your Mac is with Linux kit so it's",
    "start": "871939",
    "end": "879589"
  },
  {
    "text": "already deployed in millions of hosts today that was Linux kit now let me",
    "start": "879589",
    "end": "886939"
  },
  {
    "text": "bring you to run C run C is an open source software that allows you to have",
    "start": "886939",
    "end": "893359"
  },
  {
    "text": "effectively a very lightweight container runtime we've donated it to the OCI so",
    "start": "893359",
    "end": "899389"
  },
  {
    "text": "it's a standard at this point and what once he does is the simplest sub",
    "start": "899389",
    "end": "905719"
  },
  {
    "text": "component of what a container actually is a container at core is effectively a",
    "start": "905719",
    "end": "912549"
  },
  {
    "text": "combination of multiple mechanisms that the Linux kernel provides to isolate a",
    "start": "912549",
    "end": "918589"
  },
  {
    "text": "process such as namespaces in C groups so run C is a piece of software that",
    "start": "918589",
    "end": "925369"
  },
  {
    "text": "uses these underlying primitives like namespaces and C groups in Linux to create an isolated view of your process",
    "start": "925369",
    "end": "932029"
  },
  {
    "text": "in the system in the case of namespaces what namespaces actually do is they get",
    "start": "932029",
    "end": "938269"
  },
  {
    "text": "you an isolated view within your container of the system so pidz mountain namespace IPC net what",
    "start": "938269",
    "end": "945519"
  },
  {
    "text": "that means is that you'll be namespaced on all these different components the pit one being when you're inside of a",
    "start": "945519",
    "end": "950740"
  },
  {
    "text": "container you cannot see the processes of anyone else you can only see your of your own so you're effectively",
    "start": "950740",
    "end": "956279"
  },
  {
    "text": "namespaced and for every single other subsystem in the kernel there's a corresponding namespace that allows you",
    "start": "956279",
    "end": "962350"
  },
  {
    "text": "to run in an isolated view inside of your container then the second biggest component that runs he takes care for",
    "start": "962350",
    "end": "969009"
  },
  {
    "text": "you is configure scene groups see groups is the way that we limit the resources",
    "start": "969009",
    "end": "976480"
  },
  {
    "text": "that your containers actually have access to so there are c groups for CPU for memory for PIDs so on and so forth",
    "start": "976480",
    "end": "982810"
  },
  {
    "text": "using c groups we can mitigate against container just consuming all the",
    "start": "982810",
    "end": "988569"
  },
  {
    "text": "processes in your host or container consuming all of the memory or all of the cpu we're effectively resource",
    "start": "988569",
    "end": "994509"
  },
  {
    "text": "constraining what the container can do so these two sub components there's more but these two main sub components allow",
    "start": "994509",
    "end": "1000870"
  },
  {
    "text": "you to run contains from memory CPU pit perspective and isolated container",
    "start": "1000870",
    "end": "1006449"
  },
  {
    "text": "inside of your OS and that's what once he actually does UNC is not particularly",
    "start": "1006449",
    "end": "1011880"
  },
  {
    "text": "useful by itself you can run containers manually but he needs something to supervise the containers is the",
    "start": "1011880",
    "end": "1017519"
  },
  {
    "text": "container seal executing is a container still running did it get out with an error code do do we know",
    "start": "1017519",
    "end": "1023850"
  },
  {
    "text": "what's happening can I rerun it should I rerun it so we need something to supervise these containers and this is",
    "start": "1023850",
    "end": "1030178"
  },
  {
    "text": "why we created container D so container D got donated to the CN CF and is now",
    "start": "1030179",
    "end": "1037280"
  },
  {
    "text": "again not only open source code and a project but it's actually donated to a foundation so the code no longer belongs",
    "start": "1037280",
    "end": "1043110"
  },
  {
    "text": "to docker he belongs to the whole community of CN CF the same way that run",
    "start": "1043110",
    "end": "1048870"
  },
  {
    "text": "C now belongs to the community of OCI and so container D as I mentioned we",
    "start": "1048870",
    "end": "1054090"
  },
  {
    "text": "need a way to supervise these run C containers so we built this Titano mo in this open source project to supervise",
    "start": "1054090",
    "end": "1059460"
  },
  {
    "text": "them and there's a lot of things that it does obviously understanding if a container executed successfully",
    "start": "1059460",
    "end": "1064789"
  },
  {
    "text": "rerunning containers scheduling there's a lot of things that it does it also allows you to pull images so the image",
    "start": "1064789",
    "end": "1072390"
  },
  {
    "text": "pooling component in execution inside of a run seek of an image is the job of container of",
    "start": "1072390",
    "end": "1077429"
  },
  {
    "text": "container D but from a security perspective there's one thing that I want to point out that is particularly interesting that container D does and",
    "start": "1077429",
    "end": "1084089"
  },
  {
    "text": "that affects the security of your whole system it is about container pools so if",
    "start": "1084089",
    "end": "1090479"
  },
  {
    "text": "you are running doctor and if you've used doctor before you're definitely familiar with dr. Poole dr. Poole is the",
    "start": "1090479",
    "end": "1095909"
  },
  {
    "text": "way that you pull an image down to your hosts to actually execute it in dr. Poole usually looks something like dr.",
    "start": "1095909",
    "end": "1102419"
  },
  {
    "text": "Poole and gen-x latest the image comes and now you can execute it inside of a run seat container so so far so good",
    "start": "1102419",
    "end": "1109079"
  },
  {
    "text": "pretty easy but docker pull and specifically a pull method can",
    "start": "1109079",
    "end": "1114659"
  },
  {
    "text": "be done with the name but it could also be done with a hash and so instead of",
    "start": "1114659",
    "end": "1119999"
  },
  {
    "text": "you saying that I want nginx and I want the latest AG you could say I want nginx but I want this specific cryptographic",
    "start": "1119999",
    "end": "1126719"
  },
  {
    "text": "hash of the content that is remotely the reason why this is cool is we're gonna",
    "start": "1126719",
    "end": "1132539"
  },
  {
    "text": "see in a little bit in notary which is an exit ronimal but the way that this works is if you provide a hash to",
    "start": "1132539",
    "end": "1138329"
  },
  {
    "text": "download if you say docker pool or container D pull a container hash",
    "start": "1138329",
    "end": "1143909"
  },
  {
    "text": "instead of a name what's actually happening under the hood is you're using a content addressable system so all the",
    "start": "1143909",
    "end": "1151139"
  },
  {
    "text": "sub components of the container different layers they have hashes that all hash up to one",
    "start": "1151139",
    "end": "1157349"
  },
  {
    "text": "main manifest hash so what's actually happening is when you're saying please download this specific hash of nginx the",
    "start": "1157349",
    "end": "1164249"
  },
  {
    "text": "only thing you can get is a secure version of that content because there's a cryptographic hash that is being",
    "start": "1164249",
    "end": "1169859"
  },
  {
    "text": "validated over the whole content of your container so if you say nginx latest you're not sure what you're getting but",
    "start": "1169859",
    "end": "1175889"
  },
  {
    "text": "if you're saying nginx in a specific hash you know that you're getting exactly the hash they requested the",
    "start": "1175889",
    "end": "1182179"
  },
  {
    "text": "reason why this is important becomes obvious in our next set ronimal notary notary is an open source software",
    "start": "1182179",
    "end": "1190499"
  },
  {
    "text": "that we just donated to CN CF so I just got approved a few days ago and it",
    "start": "1190499",
    "end": "1196049"
  },
  {
    "text": "allows you to do trusted software delivery it is arbitrary trust the software delivery it does not have",
    "start": "1196049",
    "end": "1202259"
  },
  {
    "text": "necessarily to do with containers but the way that it works is related to those hashes that I were describing",
    "start": "1202259",
    "end": "1208350"
  },
  {
    "text": "in particular if you look back or imageable we don't want to run pull",
    "start": "1208350",
    "end": "1213929"
  },
  {
    "text": "nginx random hash of God knows how many characters that I didn't memorize what I",
    "start": "1213929",
    "end": "1219870"
  },
  {
    "text": "want to say is I want to pull the latest version of nginx or 1.1 of our genetics a 1.5 of nginx so clearly there needs to",
    "start": "1219870",
    "end": "1227880"
  },
  {
    "text": "be something that translates this human readable name this version latest into a",
    "start": "1227880",
    "end": "1233400"
  },
  {
    "text": "secure hash in a way that we can trust and so that's the job of notary notary",
    "start": "1233400",
    "end": "1240240"
  },
  {
    "text": "is a generic system that we implemented into docker but it's a generic system that does one job really well it",
    "start": "1240240",
    "end": "1247500"
  },
  {
    "text": "translates names to secure cryptographic hashes and it does so using digital",
    "start": "1247500",
    "end": "1254700"
  },
  {
    "text": "signatures it has a lot of interesting problems or a lot of interesting characteristics that solves a lot of",
    "start": "1254700",
    "end": "1261690"
  },
  {
    "text": "problems for software delivery and there's an attacker model and a threat model that we have on the notary page",
    "start": "1261690",
    "end": "1267419"
  },
  {
    "text": "and I recommend you to go see it but one specific thing that I want to say about notary is the fact that it allows you to",
    "start": "1267419",
    "end": "1274559"
  },
  {
    "text": "have not just one digital signature so if you had a GPG key you would sign a",
    "start": "1274559",
    "end": "1280559"
  },
  {
    "text": "piece of software with GPG and then you would verify the authenticity of the software with one gbg key and there's a",
    "start": "1280559",
    "end": "1287130"
  },
  {
    "text": "lot of problems with that number one if the software is out of date you can't revoke the particular software",
    "start": "1287130",
    "end": "1293970"
  },
  {
    "text": "that you've signed it will always be as long as the key is valid that piece of software would always be valid with",
    "start": "1293970",
    "end": "1299159"
  },
  {
    "text": "notary that doesn't work that way and if you have just one GPG key you only have the ability of signing with one key if",
    "start": "1299159",
    "end": "1305640"
  },
  {
    "text": "that key is compromised you don't have an option as how to recover from it and what if you have or the need for",
    "start": "1305640",
    "end": "1311580"
  },
  {
    "text": "multiple systems a security team approval and an OPS person approval what",
    "start": "1311580",
    "end": "1316770"
  },
  {
    "text": "then nor do we solve that problem by allowing to have threshold signing so",
    "start": "1316770",
    "end": "1322530"
  },
  {
    "text": "what you can say with notary is not just verify that this content in signed but you can say please verify that this",
    "start": "1322530",
    "end": "1328919"
  },
  {
    "text": "content was signed by the CI system by the staging system by the security team by the deployment system can add as many",
    "start": "1328919",
    "end": "1335610"
  },
  {
    "text": "as you want and then the running system the container will only be executed if it got signed by every",
    "start": "1335610",
    "end": "1341760"
  },
  {
    "text": "single one of these entities in this threshold so that's one of the biggest",
    "start": "1341760",
    "end": "1346950"
  },
  {
    "text": "characteristics and the other characteristic is in the GPG case if you're signing software with just a pure",
    "start": "1346950",
    "end": "1352710"
  },
  {
    "text": "application of GPG Becky's compromised you're effectively screwed you have to",
    "start": "1352710",
    "end": "1357810"
  },
  {
    "text": "go back and just reset all of the poly key components you have to redo the whole system you have to send a new",
    "start": "1357810",
    "end": "1363870"
  },
  {
    "text": "public key down to all of the hosts effectively you just go and modify every single host with notary you have",
    "start": "1363870",
    "end": "1369510"
  },
  {
    "text": "something called survivable key compromise what that actually means is that if the key gets compromised you can",
    "start": "1369510",
    "end": "1377250"
  },
  {
    "text": "actually bring a root key that you always keep offline online to automatically rotate it and you don't",
    "start": "1377250",
    "end": "1382860"
  },
  {
    "text": "have to change anything on the final hosts there are some technical components as to why this is really",
    "start": "1382860",
    "end": "1387990"
  },
  {
    "text": "interesting but from your perspective the only thing that matters is that a key gets compromised in the CI staging",
    "start": "1387990",
    "end": "1393210"
  },
  {
    "text": "does matter bring it off like key online rotated and in seconds you're done the old key no longer matters an attacker no",
    "start": "1393210",
    "end": "1399960"
  },
  {
    "text": "longer has anything of value and that is something that is really important for you to have in every single system that",
    "start": "1399960",
    "end": "1407190"
  },
  {
    "text": "you have that uses cryptographic keys the ability of having survivable key compromise and so this brings us to",
    "start": "1407190",
    "end": "1414150"
  },
  {
    "text": "docker because docker does a lot of things but docker uses Runcie the",
    "start": "1414150",
    "end": "1420150"
  },
  {
    "text": "container execution supervised by container D the supervisor platform in notary for secure image pulls in the",
    "start": "1420150",
    "end": "1426900"
  },
  {
    "text": "combination of all of this in a couple more things is what docker actually is which is a software",
    "start": "1426900",
    "end": "1432720"
  },
  {
    "text": "container platform in addition that I want to mention over run C and container",
    "start": "1432720",
    "end": "1438990"
  },
  {
    "text": "D docker comes with SC Linux and epimer profiles so already comes with secure by",
    "start": "1438990",
    "end": "1444480"
  },
  {
    "text": "default profiles that just by doing docker run you inherit so effectively a container d container or a run C",
    "start": "1444480",
    "end": "1451200"
  },
  {
    "text": "container they don't know what profiles you want to run docker comes with opinionated profiles to ensure effectively a good balance between",
    "start": "1451200",
    "end": "1457130"
  },
  {
    "text": "usability and security it also comes with a capability whitelist so there's something in Linux which is",
    "start": "1457130",
    "end": "1463650"
  },
  {
    "text": "capabilities which is dividing the authority that the root user has and smaller sub pieces and when you run a",
    "start": "1463650",
    "end": "1470400"
  },
  {
    "text": "docker container you have less than half of the capabilities that you have enroute by the and again there's a good compromise",
    "start": "1470400",
    "end": "1476710"
  },
  {
    "text": "between usability and security by default we also have a system system called whitelist that allows us to",
    "start": "1476710",
    "end": "1482739"
  },
  {
    "text": "mitigate surfaced of exposure of the kernel if by any chance somebody compromised the container and tries to",
    "start": "1482739",
    "end": "1488649"
  },
  {
    "text": "attack the operating system kernel from the container we're mitigating some of that surface of",
    "start": "1488649",
    "end": "1494080"
  },
  {
    "text": "attack because system calls are being whitelisted in dangerous system calls that we've removed from the whitelist",
    "start": "1494080",
    "end": "1499749"
  },
  {
    "text": "can't be actually called so if there's an exploit or a vulnerability in those it doesn't actually affect your system",
    "start": "1499749",
    "end": "1505210"
  },
  {
    "text": "then finally as I mentioned node reintegration comes by default you just enable it in all of a sudden you can use",
    "start": "1505210",
    "end": "1511299"
  },
  {
    "text": "a very simple way dr. pol docker push with the sophistication of notary and",
    "start": "1511299",
    "end": "1516399"
  },
  {
    "text": "the ability of having integrity and to end multiple signatures rival key compromise so on and so forth",
    "start": "1516399",
    "end": "1522899"
  },
  {
    "text": "and this brings me to the last atrani mo debt talkers created which is called",
    "start": "1522899",
    "end": "1528789"
  },
  {
    "text": "swamp kit not last in order but last that I'm going to talk to you talk about today",
    "start": "1528789",
    "end": "1533830"
  },
  {
    "text": "swamp kit is a least privileged container Orchestrator what that means is that we took extreme care in swarm to",
    "start": "1533830",
    "end": "1541629"
  },
  {
    "text": "ensure that each node that is executing your containers only has access to the",
    "start": "1541629",
    "end": "1547239"
  },
  {
    "text": "resources into the code and to the containers that it needs for its purpose no more no less and I'm going to go over",
    "start": "1547239",
    "end": "1555009"
  },
  {
    "text": "a few details as to why this is true and all the things that we had to go through to ensure that this was true and the",
    "start": "1555009",
    "end": "1561519"
  },
  {
    "text": "first one has to do with secure node introduction running containers in one",
    "start": "1561519",
    "end": "1567190"
  },
  {
    "text": "host is great but if you want to scale it across multiple nodes and you're constantly adding and removal nodes",
    "start": "1567190",
    "end": "1572320"
  },
  {
    "text": "removing nodes you have to have a secure way of introducing these new nodes to your cluster in a way that you know is",
    "start": "1572320",
    "end": "1578859"
  },
  {
    "text": "trust that in that no attacker can either join a node or join a note to the cluster or man-in-the-middle the joint",
    "start": "1578859",
    "end": "1585039"
  },
  {
    "text": "of another Custer or impersonate a node in your cluster so we created a",
    "start": "1585039",
    "end": "1590440"
  },
  {
    "text": "mechanism that that uses secure node introduction that is actually pretty simple it's based on a token that you",
    "start": "1590440",
    "end": "1597519"
  },
  {
    "text": "are probably familiar with there are things that are similar to provide a token to join a node and that token ensures several things number one",
    "start": "1597519",
    "end": "1604210"
  },
  {
    "text": "ensures that there's into n security so the node trust the cluster and the cluster knows that this",
    "start": "1604210",
    "end": "1609760"
  },
  {
    "text": "node has the authority of joining and it also allows you to issue a certificate for each individual node and a",
    "start": "1609760",
    "end": "1618299"
  },
  {
    "text": "certificate is actually going to turn to be the identity that each node in a",
    "start": "1618299",
    "end": "1623590"
  },
  {
    "text": "swamp cluster is going to use for the lifetime of the duration of this node in the cluster so every single node by just",
    "start": "1623590",
    "end": "1630610"
  },
  {
    "text": "joining a swarm immediately gets an x.509 certificate which as you know is a",
    "start": "1630610",
    "end": "1635650"
  },
  {
    "text": "normal type of certificates that are used in your PKI but we do that all for you by just you running docker swarm in",
    "start": "1635650",
    "end": "1643779"
  },
  {
    "text": "it automatically a certificate authority gets created for you certificates start being generated and certificates start being rotated",
    "start": "1643779",
    "end": "1650590"
  },
  {
    "text": "automatically and for the people in the audience that actually care about these things this is what a certificate looks",
    "start": "1650590",
    "end": "1656080"
  },
  {
    "text": "like has a couple of characteristics but one that I want to mention is the CN is the note ID that is a unique randomly",
    "start": "1656080",
    "end": "1663460"
  },
  {
    "text": "generated ID that is going to live throughout the lifetime of your node that you can actually trust instead of",
    "start": "1663460",
    "end": "1669580"
  },
  {
    "text": "having a name or hostname in a know that you can trust you have a cryptographic identity for every single node in your",
    "start": "1669580",
    "end": "1676059"
  },
  {
    "text": "cluster and this is going to become really important because now that we have a cryptographic identity for each",
    "start": "1676059",
    "end": "1682450"
  },
  {
    "text": "node of our cluster we can do something really cool we can have mutual TLS between every single one of our nodes so",
    "start": "1682450",
    "end": "1689289"
  },
  {
    "text": "in this cluster when you join the node automatically all the communications between the nodes and the managers the",
    "start": "1689289",
    "end": "1696549"
  },
  {
    "text": "managers being the more privileged nodes and the workers effectively being just the nodes that are gonna execute our containers",
    "start": "1696549",
    "end": "1701559"
  },
  {
    "text": "everything has mutual TLS so the nodes authorize the managers and the managers authorize the notes the nodes know what",
    "start": "1701559",
    "end": "1708820"
  },
  {
    "text": "specific manager they're talking to and the managers know what specific nodes they're talking to this is really",
    "start": "1708820",
    "end": "1713860"
  },
  {
    "text": "important because if we're using TLS it means that we have confidentiality integrity and authenticity of every",
    "start": "1713860",
    "end": "1720640"
  },
  {
    "text": "single communication it means that everything that we send to a worker such as secrets it is encrypted in transit",
    "start": "1720640",
    "end": "1728760"
  },
  {
    "text": "right every single secret that we send to the node there's no man in the middle",
    "start": "1728760",
    "end": "1734409"
  },
  {
    "text": "that can intercept a secret for us and so this is actually something that is not true of a lot of other orchestrators",
    "start": "1734409",
    "end": "1741730"
  },
  {
    "text": "out there when you set up a lot of other orchestrators you don't have TLS by default you have open access to secrets",
    "start": "1741730",
    "end": "1748000"
  },
  {
    "text": "there's no authenticity everybody can access everything and so for us the least privileged and the secure by",
    "start": "1748000",
    "end": "1754420"
  },
  {
    "text": "default principles came together in to let us give you a CA that comes by default that gives you these properties",
    "start": "1754420",
    "end": "1760890"
  },
  {
    "text": "and now that we actually have mutual TLS because we have some identities that are",
    "start": "1760890",
    "end": "1766300"
  },
  {
    "text": "being rotated for you automatically as as as low as every hour so you can",
    "start": "1766300",
    "end": "1771610"
  },
  {
    "text": "rotate certificates automatically every hour if you want to and we have certificates that are your identities that are being rotated automatically for",
    "start": "1771610",
    "end": "1777760"
  },
  {
    "text": "you without you doing anything and so on top of this we can now do secure secret distribution so when you're running in a",
    "start": "1777760",
    "end": "1784720"
  },
  {
    "text": "swarm we wanted a way for you to get secrets such as tokens or private keys or TLS certificates for your apps",
    "start": "1784720",
    "end": "1791080"
  },
  {
    "text": "securely to the actual containers how do we do that these are sent over the network how do we know we're getting to",
    "start": "1791080",
    "end": "1797260"
  },
  {
    "text": "the right containers well we're building on the primitives that we got so far since we securely introduced the note to the cluster we",
    "start": "1797260",
    "end": "1803830"
  },
  {
    "text": "know that there's no rogue nodes in the cluster since we issued cryptographic node identities to each node we know",
    "start": "1803830",
    "end": "1808990"
  },
  {
    "text": "exactly what nodes were sending this information to and since we're using mutual TLS for all the communications we",
    "start": "1808990",
    "end": "1815020"
  },
  {
    "text": "know that these secrets are being delivered securely to the final notes they're going to use them so this is",
    "start": "1815020",
    "end": "1820360"
  },
  {
    "text": "really important and allows us to actually just spread the secrets run containers rotate secrets in a secure",
    "start": "1820360",
    "end": "1826150"
  },
  {
    "text": "fashion another thing that I want to mention is by default the secrets that you act with swarm get stored in the",
    "start": "1826150",
    "end": "1833350"
  },
  {
    "text": "managers and get automatically replicated obviously for full tolerance but they get encrypted at rest again by",
    "start": "1833350",
    "end": "1839800"
  },
  {
    "text": "default so there's no component of the system that does not come turned on and you can tune it but the choices that are",
    "start": "1839800",
    "end": "1846340"
  },
  {
    "text": "done for you from the get-go are the right ones so now let me tell you a",
    "start": "1846340",
    "end": "1852220"
  },
  {
    "text": "little bit about transparent rotation I talked about this concept of survivable key compromise for notary",
    "start": "1852220",
    "end": "1859060"
  },
  {
    "text": "which was the concept where if a key gets compromised you don't have to do anything but click a button in the key",
    "start": "1859060",
    "end": "1864820"
  },
  {
    "text": "rotates for you this is something that I care deeply about and that it's really important in security because the first",
    "start": "1864820",
    "end": "1870730"
  },
  {
    "text": "thing you have to do when you're compromised is to rotate all the keys but if you have a cluster",
    "start": "1870730",
    "end": "1875860"
  },
  {
    "text": "that doesn't allow you to rotate all the keys what do you do you have to create a cluster from scratch and so what's warm",
    "start": "1875860",
    "end": "1883750"
  },
  {
    "text": "we took a lot of care and making sure that everything in the cluster allows you to be rotated the secrets you can",
    "start": "1883750",
    "end": "1890290"
  },
  {
    "text": "rotate them add a new secret and automatically be distributed to all the containers but now the question becomes what about the root key what about this",
    "start": "1890290",
    "end": "1897250"
  },
  {
    "text": "CA the certificate authority that is actually issuing the certificates to the notes what happens to that certificate",
    "start": "1897250",
    "end": "1903190"
  },
  {
    "text": "authority what if a manager gets compromised because if a worker gets compromised we know how to remove it",
    "start": "1903190",
    "end": "1908470"
  },
  {
    "text": "from the cluster we delete the certificate and everything is good but if the manager gets compromised the",
    "start": "1908470",
    "end": "1914110"
  },
  {
    "text": "manager has access to certificate authority the manager effectively allows new notes to join the system in issues those",
    "start": "1914110",
    "end": "1920140"
  },
  {
    "text": "identities for the notes so it has the key material of the root CA what do we do then well and this is where a lot of",
    "start": "1920140",
    "end": "1927460"
  },
  {
    "text": "security engineers disagree and I usually disagree and have a kind of different opinion",
    "start": "1927460",
    "end": "1932640"
  },
  {
    "text": "usually security engineers we're drawing this on a board we create a manager we have all these workers and when they",
    "start": "1932640",
    "end": "1939010"
  },
  {
    "text": "come to this problem they say oh if an attacker compromises the manager we're screwed there's nothing we can do let's just do",
    "start": "1939010",
    "end": "1945400"
  },
  {
    "text": "a new cluster for me the answer is not shrug let's just create a new cluster",
    "start": "1945400",
    "end": "1952780"
  },
  {
    "text": "the reality is that the majority of the times you don't have attackers compromising your cluster the majority",
    "start": "1952780",
    "end": "1958090"
  },
  {
    "text": "of times what happened was that somebody posted the private key to github or somebody backed it up to a place that it",
    "start": "1958090",
    "end": "1964870"
  },
  {
    "text": "shouldn't have and so you need the ability of actually rotating from this situation and so now we have the problem",
    "start": "1964870",
    "end": "1971410"
  },
  {
    "text": "of we're trusting one root but we don't know how to rotate it so it's warm we",
    "start": "1971410",
    "end": "1976630"
  },
  {
    "text": "went one step above and it's something that I've never seen any Orchestrator out there do and we allow you to actually rotate the root of trust in the",
    "start": "1976630",
    "end": "1983500"
  },
  {
    "text": "way that we do it is actually turns out to be pretty simple you have trust in the blue certificate authority if you",
    "start": "1983500",
    "end": "1989860"
  },
  {
    "text": "want to rotate it you create a new red certificate authority but what you do is",
    "start": "1989860",
    "end": "1994900"
  },
  {
    "text": "you create an intermediate so you sign the new root with the old root and so",
    "start": "1994900",
    "end": "2000000"
  },
  {
    "text": "now you have two roots in the managers but at this point all the notes still trust each other and all the nodes only",
    "start": "2000000",
    "end": "2005100"
  },
  {
    "text": "believe in blue the next step is we go through all the nodes in issue a new certificate for every",
    "start": "2005100",
    "end": "2012010"
  },
  {
    "text": "single one of these notes but the new certificate is not going to be signed by blue the new certificate is going to be",
    "start": "2012010",
    "end": "2017230"
  },
  {
    "text": "signed by a chain of red of blue reds and red so what it means is that all the",
    "start": "2017230",
    "end": "2025360"
  },
  {
    "text": "nodes are going to get a new certificate that is actually issued by red but trusted by blue because it is an actual",
    "start": "2025360",
    "end": "2031630"
  },
  {
    "text": "intermediate and therefore there's a chain from red to red to blue that every single node trusts the reason why this",
    "start": "2031630",
    "end": "2037750"
  },
  {
    "text": "is important is because while you're rotating these the nodes have to trust each other so it doesn't matter if nodes",
    "start": "2037750",
    "end": "2043630"
  },
  {
    "text": "has a note certificate from blue or a node already has a new certificate from red they have to communicate with each",
    "start": "2043630",
    "end": "2048669"
  },
  {
    "text": "other and therefore they have to trust each other so this is why this step is important and so after we do this first",
    "start": "2048669",
    "end": "2053888"
  },
  {
    "text": "pass we can actually invent that is then issued by red we can go in and actually",
    "start": "2053889",
    "end": "2060429"
  },
  {
    "text": "take blue away and only trust red and so",
    "start": "2060429",
    "end": "2066669"
  },
  {
    "text": "now we went from we don't trust blue or we trust blue to we no longer trust blue",
    "start": "2066669",
    "end": "2072040"
  },
  {
    "text": "we completely rotated the route of trust of the certificate authority okay so now",
    "start": "2072040",
    "end": "2077560"
  },
  {
    "text": "let's actually bring it all together I showed you seven different tetra Nomos every single one have different security properties all of them could use used",
    "start": "2077560",
    "end": "2084429"
  },
  {
    "text": "independently so let's actually use them first combination that I want to do is notary and docker",
    "start": "2084429",
    "end": "2091000"
  },
  {
    "text": "what happens if I bring notary and docker well if I bring notary and docker what I have is cryptograph",
    "start": "2091000",
    "end": "2097740"
  },
  {
    "text": "cryptographically verified pulls notary is ensuring the authenticity of the",
    "start": "2097740",
    "end": "2102820"
  },
  {
    "text": "content docker is running so it doesn't matter if there's a cloud if you're hosting the content or the images on an HTTP mirror",
    "start": "2102820",
    "end": "2110020"
  },
  {
    "text": "completely unencrypted s3 you are ignoring effectively the trust of what's in the middle the final container",
    "start": "2110020",
    "end": "2116320"
  },
  {
    "text": "executor your final docker host is only trusting the key not the intermediate",
    "start": "2116320",
    "end": "2121390"
  },
  {
    "text": "place where it's stored this is great what if we do swarm kit and join it with",
    "start": "2121390",
    "end": "2126850"
  },
  {
    "text": "docker well in this case these Deuteronomists together what they're gonna give you is they're going to give",
    "start": "2126850",
    "end": "2132040"
  },
  {
    "text": "you an authorized authenticated and encrypted way of effectively communicating between all notes okay",
    "start": "2132040",
    "end": "2138400"
  },
  {
    "text": "that's cool by itself not particularly useful but we can continue what if we join",
    "start": "2138400",
    "end": "2143740"
  },
  {
    "text": "the Tet ronimal infrakit with swarm kit what you're going to have is for any",
    "start": "2143740",
    "end": "2148869"
  },
  {
    "text": "system that you want a secure way of doing node introduction I describe to you in general terms how that worked the",
    "start": "2148869",
    "end": "2155260"
  },
  {
    "text": "ability of having a token that secures end to end certificate issuance does not have to be used with docker you can use",
    "start": "2155260",
    "end": "2160990"
  },
  {
    "text": "it for your own machines for anything in your infrastructure what if we put Linux",
    "start": "2160990",
    "end": "2166900"
  },
  {
    "text": "kit and use it as the base OS builder well obviously what we're gonna get is harden configuration we're gonna get an",
    "start": "2166900",
    "end": "2174040"
  },
  {
    "text": "operating system that is minimal comes with secure defaults and it comes actually built from the ground up to be",
    "start": "2174040",
    "end": "2179950"
  },
  {
    "text": "least privileged and we can continue let's connect notary and swamp kit let's",
    "start": "2179950",
    "end": "2185619"
  },
  {
    "text": "see what actually happens there or notary in Linux kit what we're gonna have now is when you're building a Linux",
    "start": "2185619",
    "end": "2192099"
  },
  {
    "text": "kit OS if you're using notary now you have cryptographically verified builds every component of your operating system",
    "start": "2192099",
    "end": "2197619"
  },
  {
    "text": "that is being pulled in is being cryptic graphically verified with notary that's awesome can we continue going down this",
    "start": "2197619",
    "end": "2203109"
  },
  {
    "text": "path well let's try to get infrakit plus notary for West provisioning if we now",
    "start": "2203109",
    "end": "2209170"
  },
  {
    "text": "add infrakit plus notary plus Linux kit what do we get we get something that is",
    "start": "2209170",
    "end": "2214900"
  },
  {
    "text": "awesome which is cryptographically verified boots so infrakit spins up a virtual machine it uses",
    "start": "2214900",
    "end": "2222430"
  },
  {
    "text": "notary to resolve the secure hash that it should be running and then it can use linux kit to do DM Verity VM Verity is a",
    "start": "2222430",
    "end": "2228880"
  },
  {
    "text": "linux capability that allows you to ensure if the image running on the remote host is the image that you actually want it and so there's no way",
    "start": "2228880",
    "end": "2235660"
  },
  {
    "text": "for an attacker to mess with your supply chain and to load a malicious image in your virtual machines or in your hosts",
    "start": "2235660",
    "end": "2242589"
  },
  {
    "text": "because your cryptographically verifying it and so this is something that we might do in the future but it's a cool",
    "start": "2242589",
    "end": "2248109"
  },
  {
    "text": "way of combining these building blocks into something really cool but we can keep going what if you layer Runcie",
    "start": "2248109",
    "end": "2253990"
  },
  {
    "text": "container D and docker well we obviously get a secure by default container",
    "start": "2253990",
    "end": "2259180"
  },
  {
    "text": "execution which is what docker provides you by default when you install it and just do docker run now they were in the",
    "start": "2259180",
    "end": "2265780"
  },
  {
    "text": "complex ones what if we add run C container D docker swarm kit a notary just jumble them all",
    "start": "2265780",
    "end": "2272320"
  },
  {
    "text": "together what is this Geddes well it gets us to secure by default container platform",
    "start": "2272320",
    "end": "2277450"
  },
  {
    "text": "it allows you to have the execution of containers secure distribution of Secrets secure note introduction in",
    "start": "2277450",
    "end": "2283180"
  },
  {
    "text": "containers being executed with Runcie container d in a lease privileged manner and now the obvious final question is",
    "start": "2283180",
    "end": "2289329"
  },
  {
    "text": "what happens if we put all of this stuff together all of the tirana moles and just like put them in well what do you",
    "start": "2289329",
    "end": "2296410"
  },
  {
    "text": "get is secure by default infrastructure you get remote at the station verification from the boot golden images",
    "start": "2296410",
    "end": "2303369"
  },
  {
    "text": "being created with minimal linux kit os's running minimal docker containers that have secured default configurations",
    "start": "2303369",
    "end": "2310300"
  },
  {
    "text": "in a cluster that has mutual TLS and secure secret distribution all with the digital signatures of notary and keep",
    "start": "2310300",
    "end": "2316869"
  },
  {
    "text": "transparent key rotation so in terms of conclusion today I talk to you about",
    "start": "2316869",
    "end": "2322300"
  },
  {
    "text": "infrakit the way that you can do machine management in docker or for any system",
    "start": "2322300",
    "end": "2327760"
  },
  {
    "text": "really we talked to you about the ability of having Linux get the minimal",
    "start": "2327760",
    "end": "2334270"
  },
  {
    "text": "image secure building we talked a little about run C we talked a little about",
    "start": "2334270",
    "end": "2339579"
  },
  {
    "text": "container D and we talked a little bit about docker itself and then finally we talked about notary which is the way",
    "start": "2339579",
    "end": "2346030"
  },
  {
    "text": "that you do digital signature verification and we talked about swarm",
    "start": "2346030",
    "end": "2351040"
  },
  {
    "text": "kit which is the way that you do container Orchestrator so what happens when you bring all these pieces together",
    "start": "2351040",
    "end": "2356670"
  },
  {
    "text": "you get the moby whale thank you very much",
    "start": "2356670",
    "end": "2362250"
  },
  {
    "text": "and just so just so you know it took me 20 minutes of my life to do this animation so I'm gonna do it again and",
    "start": "2367410",
    "end": "2372760"
  },
  {
    "text": "there you go all the pieces came",
    "start": "2372760",
    "end": "2378280"
  },
  {
    "text": "together in the end so we have a few questions that were submitted to the app and I want to read them out loud so this",
    "start": "2378280",
    "end": "2385510"
  },
  {
    "text": "is the question degra has done a great job at providing mechanisms for securing infrastructure",
    "start": "2385510",
    "end": "2390990"
  },
  {
    "text": "when will we see Duggar do the same for application code executed inside a",
    "start": "2390990",
    "end": "2396610"
  },
  {
    "text": "container it's an excellent question I would say that we already have it right now so if you think about it when you're",
    "start": "2396610",
    "end": "2403420"
  },
  {
    "text": "running an application and you put it in a docker container the only thing you're doing is you're securing it you're",
    "start": "2403420",
    "end": "2408460"
  },
  {
    "text": "adding more security you're by default adding the ability of mitigating access to the host you have capabilities that",
    "start": "2408460",
    "end": "2414820"
  },
  {
    "text": "are dropped you have Linux security profiles you have minimal exposures to the kernel and you obviously have",
    "start": "2414820",
    "end": "2419980"
  },
  {
    "text": "contains a view and in terms of resource you have an app that is now segregated",
    "start": "2419980",
    "end": "2426100"
  },
  {
    "text": "from the OS so if nothing else you don't change anything in your system the only thing you do is you have your current",
    "start": "2426100",
    "end": "2431410"
  },
  {
    "text": "system but then you put your application inside of docker you're effectively making them more secure by default the",
    "start": "2431410",
    "end": "2436990"
  },
  {
    "text": "virtue of putting in docker itself this said we're going one step above we have something like that is called docker",
    "start": "2436990",
    "end": "2442900"
  },
  {
    "text": "security scanning that scans images docker images for vulnerabilities and so if your application has a vulnerability",
    "start": "2442900",
    "end": "2449110"
  },
  {
    "text": "such as heartbleed that will be detected so the fact the fact that it's in a format that everybody knows you can use",
    "start": "2449110",
    "end": "2454660"
  },
  {
    "text": "tools like core OS has a tool called Clair we have docker security scanning but just the fact that docker has an own",
    "start": "2454660",
    "end": "2460840"
  },
  {
    "text": "format of an image is already helping the security of your infrastructure because everybody knows how to scan it everybody knows how to unpack it",
    "start": "2460840",
    "end": "2467020"
  },
  {
    "text": "everybody knows how to look at the binary over little bit of vulnerabilities and as time goes on these things are only getting better",
    "start": "2467020",
    "end": "2472570"
  },
  {
    "text": "the default mechanisms of isolation of docker are only getting better which means that the security of your applications is only getting better if",
    "start": "2472570",
    "end": "2479260"
  },
  {
    "text": "you have a crappy PHP application that has remote code execution on it if somebody goes into it you can actually",
    "start": "2479260",
    "end": "2485170"
  },
  {
    "text": "just run docker containers docker run - - read-only and now nobody can write to",
    "start": "2485170",
    "end": "2490960"
  },
  {
    "text": "the docker container the attacker has remote code execution but it can't download payloads it can't compile tools",
    "start": "2490960",
    "end": "2496210"
  },
  {
    "text": "it can't attack the kernel it makes lateral movement harder so my argument is it already does",
    "start": "2496210",
    "end": "2501740"
  },
  {
    "text": "help your application security and it's only going to do more in the future all right last question it's a",
    "start": "2501740",
    "end": "2508119"
  },
  {
    "text": "questionnaire here it says relatively basic question so darker and ufw has bitten me exposing",
    "start": "2508119",
    "end": "2515540"
  },
  {
    "text": "data to the public web well I fought ufw insured limited access what is your",
    "start": "2515540",
    "end": "2522349"
  },
  {
    "text": "recommendation on IP white listening access docker to docker containers so I think YP I peel white white white",
    "start": "2522349",
    "end": "2530660"
  },
  {
    "text": "listing is not a security feature I don't think you should ever use IP by listening for any kind of security the right way of exposing things to the",
    "start": "2530660",
    "end": "2537109"
  },
  {
    "text": "Internet if that is your goal is to use TLS so you can't configure docker to actually just listen on TLS and if you",
    "start": "2537109",
    "end": "2543349"
  },
  {
    "text": "don't have to listen on the internet then just listen on localhost or use the default docker socket docker doesn't",
    "start": "2543349",
    "end": "2550160"
  },
  {
    "text": "listen on the network by default so close your firewalls close your ports unless you know what you're doing do not",
    "start": "2550160",
    "end": "2556160"
  },
  {
    "text": "expose your docker to the world thank you thank you very much [Applause]",
    "start": "2556160",
    "end": "2566140"
  }
]