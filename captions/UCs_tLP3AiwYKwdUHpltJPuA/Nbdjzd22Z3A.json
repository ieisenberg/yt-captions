[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "foreign thanks a lot appreciate it",
    "start": "7200",
    "end": "14040"
  },
  {
    "text": "um okay so the cool thing is this is the last talk and I got like 82 slides and I",
    "start": "14040",
    "end": "19500"
  },
  {
    "text": "normally take about two minutes to slide but that doesn't matter because all it's here is just at the end of this is all",
    "start": "19500",
    "end": "24840"
  },
  {
    "text": "just beer right so it doesn't really matter if I overrun yeah yeah okay so the other thing the",
    "start": "24840",
    "end": "30660"
  },
  {
    "text": "other problem I've got is that people often complain that I'd like just tell people stuff without facts and figures",
    "start": "30660",
    "end": "36180"
  },
  {
    "start": "34000",
    "end": "446000"
  },
  {
    "text": "so I thought I would fix that so I'm going to talk about transforming programming and to motivate that I'm",
    "start": "36180",
    "end": "41280"
  },
  {
    "text": "going to give you some science so Oh wrong button",
    "start": "41280",
    "end": "47100"
  },
  {
    "text": "there's a graph there's a network there's my favorite Venn diagram you can",
    "start": "47100",
    "end": "53039"
  },
  {
    "text": "prove anything with a Venn diagram right here's an infographic and here is my emu picture just before I",
    "start": "53039",
    "end": "61860"
  },
  {
    "text": "ate my camera so that goes to prove actually",
    "start": "61860",
    "end": "67140"
  },
  {
    "text": "if you've never actually done this next time you're close to an emu right get it to open its mouth",
    "start": "67140",
    "end": "72900"
  },
  {
    "text": "it's the most primitive thing you've ever seen there's actually just two tubes that come up into its mouth",
    "start": "72900",
    "end": "78420"
  },
  {
    "text": "that's really cool yeah it looks like sort of half dissected already anyway",
    "start": "78420",
    "end": "83759"
  },
  {
    "text": "all of that science goes to prove something right 98.74 of scientists it's",
    "start": "83759",
    "end": "89280"
  },
  {
    "text": "a fact I come from America so I'm allowed to say that writing software is",
    "start": "89280",
    "end": "95100"
  },
  {
    "text": "just too damn difficult right it is a hard job and it's too hard",
    "start": "95100",
    "end": "102119"
  },
  {
    "text": "when we're making it harder on ourselves all the time we're digging detail and detail and",
    "start": "102119",
    "end": "108479"
  },
  {
    "text": "detail and we're just getting you know it's like nowadays I am spending at",
    "start": "108479",
    "end": "114180"
  },
  {
    "text": "least 50 of my time fighting the tools rather than actually getting coding done",
    "start": "114180",
    "end": "119520"
  },
  {
    "text": "so my question is how are we going to make it easier",
    "start": "119520",
    "end": "125820"
  },
  {
    "text": "yeah softer cuddlier code that urinates on you",
    "start": "125820",
    "end": "132440"
  },
  {
    "text": "I did and it urinated on me so",
    "start": "134640",
    "end": "139400"
  },
  {
    "text": "probably yeah all right so what I want to talk about now is just",
    "start": "140819",
    "end": "146040"
  },
  {
    "text": "and I'm not telling anybody how to do anything um that's a Fool's game so what I want",
    "start": "146040",
    "end": "151379"
  },
  {
    "text": "to do is to just tell you some stuff that I'm experimenting with that's working for me but to do that I've got",
    "start": "151379",
    "end": "157140"
  },
  {
    "text": "to kind of lead up to it by giving some background okay so we're going to talk to The Gnome and we're going to ask the",
    "start": "157140",
    "end": "163440"
  },
  {
    "text": "gnome a couple of questions first question",
    "start": "163440",
    "end": "168439"
  },
  {
    "text": "why bother designing software so",
    "start": "168900",
    "end": "175019"
  },
  {
    "text": "in the old days I used to be hands up everybody who right I don't do that anymore because it's a stupid thing to",
    "start": "175019",
    "end": "180900"
  },
  {
    "text": "do but I am prepared to lay odds that everybody in this room",
    "start": "180900",
    "end": "186360"
  },
  {
    "text": "has at some point in their lives written a throwaway program something you're going to use one time",
    "start": "186360",
    "end": "192180"
  },
  {
    "text": "only maybe you're doing like some data transformation or you're going to fetch something and analyze whatever it might",
    "start": "192180",
    "end": "198060"
  },
  {
    "text": "be right 20 lines of throwaway code did you write a class diagram for it",
    "start": "198060",
    "end": "206459"
  },
  {
    "text": "did you sit down and analyze the dependencies did you sit down and maybe have a peer review right did you write",
    "start": "206459",
    "end": "213180"
  },
  {
    "text": "an exhaustive set of unit tests just before you threw it away",
    "start": "213180",
    "end": "218519"
  },
  {
    "text": "I'm guessing the answer is no and why is the answer no the answer is no",
    "start": "218519",
    "end": "224220"
  },
  {
    "text": "because you knew you were never going to see that code again once it had done its job it was dead to",
    "start": "224220",
    "end": "230940"
  },
  {
    "text": "you here you just turn your back walk away sorry code don't love you right",
    "start": "230940",
    "end": "238500"
  },
  {
    "text": "we don't design that kind of code because",
    "start": "238500",
    "end": "244319"
  },
  {
    "text": "the only reason to design is if we want to change something design",
    "start": "244319",
    "end": "250439"
  },
  {
    "text": "is the factor or the facility that allows us to change code",
    "start": "250439",
    "end": "258540"
  },
  {
    "text": "and the reason that design is so important to us is that all code changes",
    "start": "258540",
    "end": "263699"
  },
  {
    "text": "right no one in the history of software has ever written code that hasn't at some point changed",
    "start": "263699",
    "end": "270360"
  },
  {
    "text": "and if you accept that then the easier it is to change the easier your job is and the more you can get on with the fun",
    "start": "270360",
    "end": "276540"
  },
  {
    "text": "stuff so a corollary of that is a big word is",
    "start": "276540",
    "end": "282919"
  },
  {
    "text": "well-designed code is easier to change than poorly design code",
    "start": "282919",
    "end": "290220"
  },
  {
    "text": "kind of makes sense so this gives us a kind of metric of",
    "start": "290220",
    "end": "295860"
  },
  {
    "text": "design I can look at two pieces of code or I could look at decision I'm making when I'm writing one piece of code and",
    "start": "295860",
    "end": "302520"
  },
  {
    "text": "work out which one is going to be easier to change and as a result which one is",
    "start": "302520",
    "end": "307620"
  },
  {
    "text": "going to be easier to design so this comes up with my Universal rule",
    "start": "307620",
    "end": "313500"
  },
  {
    "text": "of coding when faced with a coding decision choose",
    "start": "313500",
    "end": "320280"
  },
  {
    "text": "the path that makes future change easier",
    "start": "320280",
    "end": "326000"
  },
  {
    "text": "that slide if you haven't yet bought any books on design that slide has saved you about four",
    "start": "326039",
    "end": "333180"
  },
  {
    "text": "hundred dollars you no longer have to buy books on design you no longer have to read blogs",
    "start": "333180",
    "end": "339900"
  },
  {
    "text": "by people who bloviate over how things should be coded because every single",
    "start": "339900",
    "end": "345539"
  },
  {
    "text": "design principle on the planet is a subset of that",
    "start": "345539",
    "end": "351660"
  },
  {
    "text": "let's just take a few right I am really really big on decoupling",
    "start": "351660",
    "end": "356820"
  },
  {
    "text": "I love the idea of decoupling because it makes my code easier to change why okay so here's a structure",
    "start": "356820",
    "end": "364259"
  },
  {
    "text": "that is not decoupled it's a bridge and many many bridges have exactly the same form many structures of",
    "start": "364259",
    "end": "370500"
  },
  {
    "text": "all kinds have that same form lots of triangles right this has triangles on the side",
    "start": "370500",
    "end": "375960"
  },
  {
    "text": "triangles on the top triangles on the bottom triangles everywhere because with all those triangles joined together",
    "start": "375960",
    "end": "383340"
  },
  {
    "text": "there is no way that structure can move without actually deforming those those",
    "start": "383340",
    "end": "388800"
  },
  {
    "text": "bits of metal so if the metal is strong enough that's rigid exactly the same thing applies to our",
    "start": "388800",
    "end": "395580"
  },
  {
    "text": "code if we couple our code together at lots of different points we can no longer",
    "start": "395580",
    "end": "401819"
  },
  {
    "text": "change it it becomes rigid and the only way we can change it is by",
    "start": "401819",
    "end": "406860"
  },
  {
    "text": "deforming parts of it and when we deform code it's called bugs",
    "start": "406860",
    "end": "413220"
  },
  {
    "text": "so decoupling or particularly around coupling makes our code harder to change",
    "start": "413220",
    "end": "420539"
  },
  {
    "text": "decoupling makes it easier to change decoupling is a subset of the purple principle",
    "start": "420539",
    "end": "427080"
  },
  {
    "text": "Bob Martin love a mohation has a useful set of or useful um what's the word",
    "start": "427080",
    "end": "432539"
  },
  {
    "text": "anagram I don't know acronym solid for some design principles",
    "start": "432539",
    "end": "439639"
  },
  {
    "text": "and if you'd asked me what they all stand for before I did this slide I wouldn't have been able to tell you but",
    "start": "439759",
    "end": "445860"
  },
  {
    "text": "the S stands for single responsibility which basically means that a piece of",
    "start": "445860",
    "end": "452160"
  },
  {
    "start": "446000",
    "end": "1028000"
  },
  {
    "text": "code has oh one reason to change is the way it's expressed I've got a news for",
    "start": "452160",
    "end": "458759"
  },
  {
    "text": "you code doesn't want to change it has no reason to change we have reasons to",
    "start": "458759",
    "end": "464520"
  },
  {
    "text": "change it but single responsibility basically says if a change in the spec",
    "start": "464520",
    "end": "470099"
  },
  {
    "text": "occurs then this is where we make that change in the code right it's not shotgunned over the entire application",
    "start": "470099",
    "end": "476699"
  },
  {
    "text": "that's the essence of single responsibility why is that good because if we have to make that change we know",
    "start": "476699",
    "end": "483360"
  },
  {
    "text": "where to make it and hopefully making it in that one place is not going to Ripple through to everywhere else",
    "start": "483360",
    "end": "490620"
  },
  {
    "text": "open close principle open close principle says that an API an interface",
    "start": "490620",
    "end": "496020"
  },
  {
    "text": "and module should be open to extension but closed to change",
    "start": "496020",
    "end": "501180"
  },
  {
    "text": "why is that a good idea same thing because if I'm closing it to change it means I can rely on having",
    "start": "501180",
    "end": "508080"
  },
  {
    "text": "that exact API around all the code that uses it will not be affected",
    "start": "508080",
    "end": "513719"
  },
  {
    "text": "because any change I made to that module will come in the form of an extension it will not change the existing API again",
    "start": "513719",
    "end": "521580"
  },
  {
    "text": "honoring this principle honors the principle of maximizing the ease of change",
    "start": "521580",
    "end": "528000"
  },
  {
    "text": "let's go substitution the idea that a subclass has to uh",
    "start": "528000",
    "end": "534300"
  },
  {
    "text": "Implement its Base Class I don't actually know why it's in there because it's really not too different from the previous two",
    "start": "534300",
    "end": "540360"
  },
  {
    "text": "interface separation says if you've got a honking big module",
    "start": "540360",
    "end": "545580"
  },
  {
    "text": "then rather than put one interface on it put lots of interfaces Each of which does a particular function",
    "start": "545580",
    "end": "553320"
  },
  {
    "text": "this is a really dumb principle but if you have got a large module",
    "start": "553320",
    "end": "558480"
  },
  {
    "text": "having those separations means that if you change some other function the one",
    "start": "558480",
    "end": "563640"
  },
  {
    "text": "interface that's not a relation to that function doesn't change so again it makes change easier why is",
    "start": "563640",
    "end": "569820"
  },
  {
    "text": "it a dumb principle because you shouldn't have honking great modules in the first place right",
    "start": "569820",
    "end": "575880"
  },
  {
    "text": "anyway and last but by no means least dependency inversion which basically",
    "start": "575880",
    "end": "581640"
  },
  {
    "text": "says abstractions cannot depend on details why because details change",
    "start": "581640",
    "end": "587160"
  },
  {
    "text": "abstractions don't so every single one of these principles is aimed to make change easier",
    "start": "587160",
    "end": "596220"
  },
  {
    "text": "now nope",
    "start": "596220",
    "end": "600800"
  },
  {
    "text": "the problem is and the reason that I want to move away from all of these wonderful named principles",
    "start": "602820",
    "end": "609600"
  },
  {
    "text": "is that the principles themselves are often misunderstood in exactly the same way that design",
    "start": "609600",
    "end": "616080"
  },
  {
    "text": "patterns are misunderstood everybody loves design patterns all right because design patterns tell",
    "start": "616080",
    "end": "623160"
  },
  {
    "text": "you how to write code if you pick up a patterns book it's like you know getting a recipe book I can sit",
    "start": "623160",
    "end": "629700"
  },
  {
    "text": "here and I can look through these patterns and I can put them together as ingredients and my code just goes there",
    "start": "629700",
    "end": "634860"
  },
  {
    "text": "it is it's a miracle right all I need is just one more strategy pattern that's going to work",
    "start": "634860",
    "end": "640980"
  },
  {
    "text": "yeah no that's not what a design pattern is never was",
    "start": "640980",
    "end": "646740"
  },
  {
    "text": "the design pattern is a way of describing something that you've already created",
    "start": "646740",
    "end": "652620"
  },
  {
    "text": "you've thought of a way of structuring some software and after it's finished you look at it and say oh that is a",
    "start": "652620",
    "end": "659399"
  },
  {
    "text": "command pattern why do you care well the reason you care is so you can",
    "start": "659399",
    "end": "664740"
  },
  {
    "text": "express that to somebody else and say that's what this software is and it's a shorthand it's jargon",
    "start": "664740",
    "end": "670680"
  },
  {
    "text": "right it's a way of communicating If instead you treat them as elements of",
    "start": "670680",
    "end": "676560"
  },
  {
    "text": "design then you end up with the typical Java you know main which starts off with",
    "start": "676560",
    "end": "682380"
  },
  {
    "text": "creating a couple of factories that create a couple of interfaces that code yeah you know what it's like right same thing with design people get all",
    "start": "682380",
    "end": "689760"
  },
  {
    "text": "wrapped up in the idea of dependency and version right a design principle so what am I going to do oh I know I'm going to",
    "start": "689760",
    "end": "696660"
  },
  {
    "text": "write a dependency inversion framework yeah perfect and couple all code in the",
    "start": "696660",
    "end": "702660"
  },
  {
    "text": "world to my framework good thinking right this is the kind of mistake we make when we view design as being",
    "start": "702660",
    "end": "709620"
  },
  {
    "text": "absolutes so my personal rule is forget all that",
    "start": "709620",
    "end": "716220"
  },
  {
    "text": "stuff which is really good because I got the memory of like who are you guys um",
    "start": "716220",
    "end": "722100"
  },
  {
    "text": "don't sweat the pre the details right you don't care about all these highfalutin principles",
    "start": "722100",
    "end": "729120"
  },
  {
    "text": "instead what I want you to do is just that",
    "start": "729120",
    "end": "735120"
  },
  {
    "text": "when faced with decision choose the path that makes future change easier and that's actually can be quite",
    "start": "735120",
    "end": "741420"
  },
  {
    "text": "subtle it also means things like prefer reversible decisions to irreversible decisions",
    "start": "741420",
    "end": "746880"
  },
  {
    "text": "you know if you can back it out then easy change is easy if you can isolate it then change is",
    "start": "746880",
    "end": "753720"
  },
  {
    "text": "easy so that kind of",
    "start": "753720",
    "end": "758940"
  },
  {
    "text": "addresses why I think we should bother with design because it",
    "start": "758940",
    "end": "764459"
  },
  {
    "text": "makes change easier and change is good so then the question I've got is how do",
    "start": "764459",
    "end": "770279"
  },
  {
    "text": "we actually remember to do it if we're not going to be sitting there and looking up recipe books of design",
    "start": "770279",
    "end": "776220"
  },
  {
    "text": "how do we convince ourselves to do it and one of the sources of inspiration for that",
    "start": "776220",
    "end": "782040"
  },
  {
    "text": "was actually a book written I don't know when late 80s early 90s Maybe by a guy called",
    "start": "782040",
    "end": "787920"
  },
  {
    "text": "Gavin de Becker the Becker was like ex-special forces blah blah blah if you",
    "start": "787920",
    "end": "793260"
  },
  {
    "text": "read these cheap books you buy airports to read on the plane you know about the the super guy who could like go into a",
    "start": "793260",
    "end": "799079"
  },
  {
    "text": "drug Den armed with a teaspoon and he kills all the bad guys rescues his team and still managed to put three or four",
    "start": "799079",
    "end": "804959"
  },
  {
    "text": "funny quips out in the middle right that's Gavin de Becker and he has a business where he protects",
    "start": "804959",
    "end": "811980"
  },
  {
    "text": "celebrities so he has a team of people who go around and act as like bodyguards basically for",
    "start": "811980",
    "end": "817740"
  },
  {
    "text": "celebrities and he wrote books for people who couldn't afford to have dedicated bodyguards and this book The",
    "start": "817740",
    "end": "824399"
  },
  {
    "text": "Gift of fear is all about how you don't make yourself a victim it's very very interesting book to read",
    "start": "824399",
    "end": "831540"
  },
  {
    "text": "I would strongly recommend it um and his main thing in the book is that you",
    "start": "831540",
    "end": "840060"
  },
  {
    "text": "can actually control your own circumstances and your own destiny",
    "start": "840060",
    "end": "846360"
  },
  {
    "text": "and he has some wonderful quotes like only human beings can look directly",
    "start": "846360",
    "end": "851940"
  },
  {
    "text": "at something and have all the information they need to make an accurate prediction perhaps even momentarily",
    "start": "851940",
    "end": "857339"
  },
  {
    "text": "make that prediction and then Say It Isn't So",
    "start": "857339",
    "end": "862440"
  },
  {
    "text": "his big deal is that you need to learn to trust your intuition",
    "start": "862440",
    "end": "869240"
  },
  {
    "text": "intuition he says is always right in at least two important ways it's always in",
    "start": "872279",
    "end": "878100"
  },
  {
    "text": "response to something and it always has your best interests at heart",
    "start": "878100",
    "end": "883699"
  },
  {
    "text": "when I first met my wife she was in New York City and well I was actually she",
    "start": "883860",
    "end": "889680"
  },
  {
    "text": "was my project manager so I was remarkably unprofessional um and we would go like walking down the",
    "start": "889680",
    "end": "896100"
  },
  {
    "text": "sidewalk in New York City and every now and then she would just like hip check me and we'd walk out to the side a bit",
    "start": "896100",
    "end": "903180"
  },
  {
    "text": "and this kind of got a little bit annoying until I worked out that she was",
    "start": "903180",
    "end": "908519"
  },
  {
    "text": "doing that whenever we passed a doorway that she couldn't see the back off",
    "start": "908519",
    "end": "914160"
  },
  {
    "text": "and I pointed that out to her she had no idea that she was doing it",
    "start": "914160",
    "end": "919680"
  },
  {
    "text": "it was just totally innate that when she first got there she obviously decided for herself this was",
    "start": "919680",
    "end": "926220"
  },
  {
    "text": "probably a good thing to do and it just became a habit it became innate it became intuition",
    "start": "926220",
    "end": "932160"
  },
  {
    "text": "and that's the Becca's point he says you need to listen to your intuition if you're walking down the",
    "start": "932160",
    "end": "937980"
  },
  {
    "text": "street and the hairs go up in the back of your on the back of your neck right don't just go oh that's stupid all",
    "start": "937980",
    "end": "944519"
  },
  {
    "text": "right stop and think why not even think why go to the other side of the street",
    "start": "944519",
    "end": "950220"
  },
  {
    "text": "he says if people do that then the majority of incidents would be avoided",
    "start": "950220",
    "end": "955620"
  },
  {
    "text": "so Becca tells me learn to listen to that little ugly",
    "start": "955620",
    "end": "961680"
  },
  {
    "text": "angel on your shoulder and learn to trust your intuition",
    "start": "961680",
    "end": "967320"
  },
  {
    "text": "and the flip side of that is if something feels too complex",
    "start": "967320",
    "end": "972360"
  },
  {
    "text": "it probably is and one of the things that I like most",
    "start": "972360",
    "end": "978360"
  },
  {
    "text": "pleased with in my own coding is that over the years I've come to the point where I can be coding along and then",
    "start": "978360",
    "end": "985019"
  },
  {
    "text": "suddenly just like push the keyboard away and go no this is crap",
    "start": "985019",
    "end": "990180"
  },
  {
    "text": "and just come back you know sometimes I'll just just revert back to the previous commit sometimes I",
    "start": "990180",
    "end": "997199"
  },
  {
    "text": "just delete everything I just did but it's intuition I can't justify it I just have that feeling you know what this is",
    "start": "997199",
    "end": "1002899"
  },
  {
    "text": "ridiculously complicated for what it's worth that picture looks complicated actually it's a gorgeous",
    "start": "1002899",
    "end": "1008899"
  },
  {
    "text": "picture it's actually the structure of bacteria that process light",
    "start": "1008899",
    "end": "1014240"
  },
  {
    "text": "photosynthetic bacteria and those things on the outside are called antenna and those are the light receptors so this",
    "start": "1014240",
    "end": "1020120"
  },
  {
    "text": "one's not too complex but I mean it's a diagram what do you want so the question is how do you build",
    "start": "1020120",
    "end": "1027319"
  },
  {
    "text": "intuition and this is a this is known science",
    "start": "1027319",
    "end": "1032480"
  },
  {
    "start": "1028000",
    "end": "1594000"
  },
  {
    "text": "people have worked this one out so um I like putting pictures on my slides",
    "start": "1032480",
    "end": "1037938"
  },
  {
    "text": "and this next slide was originally called ritual but then if you code up if you go from",
    "start": "1037939",
    "end": "1044000"
  },
  {
    "text": "Google search ritual what you find is a bunch of naked people dancing around fires so I didn't think I could use that",
    "start": "1044000",
    "end": "1050780"
  },
  {
    "text": "so then I used habit and instead I get a butcher of nuns not necessarily dancing around fires but",
    "start": "1050780",
    "end": "1057860"
  },
  {
    "text": "the trick with building intuition is that you have to do it intuition is your brain right",
    "start": "1057860",
    "end": "1066200"
  },
  {
    "text": "you may think that you are your Consciousness right you may think that what makes you different from all the other animals is you've got this",
    "start": "1066200",
    "end": "1072500"
  },
  {
    "text": "wonderful Consciousness that can think I got new for your Consciousness sucks it",
    "start": "1072500",
    "end": "1077780"
  },
  {
    "text": "cannot think to save its life all it can do is act as an interface to",
    "start": "1077780",
    "end": "1084440"
  },
  {
    "text": "the real part of your brain which is the part below consciousness for example if I was to throw a ball to",
    "start": "1084440",
    "end": "1091280"
  },
  {
    "text": "you and you had just to think about in your Consciousness what you have to do right well I've got to plan the I've got",
    "start": "1091280",
    "end": "1098120"
  },
  {
    "text": "to determine what the church actually the ball is I have to work out I've got to move my arm oh how do I do that uh",
    "start": "1098120",
    "end": "1103460"
  },
  {
    "text": "let's see it's a muscle here and a muscle yeah and the ball by this time is well past you on the floor right you",
    "start": "1103460",
    "end": "1109039"
  },
  {
    "text": "cannot do that you have to train your brain to do stuff",
    "start": "1109039",
    "end": "1114140"
  },
  {
    "text": "for you if you look at little babies I want sex next little baby on a flight which for me was like oh God it's a baby",
    "start": "1114140",
    "end": "1120260"
  },
  {
    "text": "next to me it turned out to be fantastic because this baby spent the entire Flight playing with a little toggle on",
    "start": "1120260",
    "end": "1128059"
  },
  {
    "text": "the pull down tray and you could actually see this baby",
    "start": "1128059",
    "end": "1133280"
  },
  {
    "text": "deliberately just you know moving their hands until they could kind of work out",
    "start": "1133280",
    "end": "1138679"
  },
  {
    "text": "how to get to it and then once they'd worked that out they could do a bit more reliably and then they're just messing with it they were training themselves",
    "start": "1138679",
    "end": "1145940"
  },
  {
    "text": "in the same way that we all trained ourselves to catch a ball to kick a football to drive a car",
    "start": "1145940",
    "end": "1152480"
  },
  {
    "text": "if you ever taught someone to drive you know that the very last thing you want to do is to talk to them",
    "start": "1152480",
    "end": "1158780"
  },
  {
    "text": "because all of their conscious brain is right after a while though I bet you",
    "start": "1158780",
    "end": "1165500"
  },
  {
    "text": "guys can drive to the shops and not even realize you've driven you know you just get there",
    "start": "1165500",
    "end": "1171640"
  },
  {
    "text": "there's drivers like that in Texas too so that's what we're doing we are consciously training our brain through",
    "start": "1171860",
    "end": "1178820"
  },
  {
    "text": "habit wonderful quote nobody seems to know",
    "start": "1178820",
    "end": "1184039"
  },
  {
    "text": "where it came from we first make our habits then our habits make us",
    "start": "1184039",
    "end": "1189799"
  },
  {
    "text": "we are the sum total of the reactions that we've developed in our lifetimes",
    "start": "1189799",
    "end": "1195860"
  },
  {
    "text": "a little bit of poetry for those who like poetry all habits Gather By unseen degrees as Brooks make rivers rivers run",
    "start": "1195860",
    "end": "1203780"
  },
  {
    "text": "to Seas your habits are cumulative and that's what defines you",
    "start": "1203780",
    "end": "1209419"
  },
  {
    "text": "so one of my habits one of the ones I can talk about is coding",
    "start": "1209419",
    "end": "1215840"
  },
  {
    "text": "and this is something that I have been working on making kind of like innate",
    "start": "1215840",
    "end": "1221120"
  },
  {
    "text": "for about a year 18 months so I'm consciously still doing this",
    "start": "1221120",
    "end": "1226700"
  },
  {
    "text": "I'm getting better at doing it automatically but I'm still having to think about it as I do it and the rule",
    "start": "1226700",
    "end": "1232220"
  },
  {
    "text": "is really simple before coding something and something could be",
    "start": "1232220",
    "end": "1239059"
  },
  {
    "text": "I don't know an entire deliverable or it could be a data structure sometimes it's a variable name it doesn't really matter",
    "start": "1239059",
    "end": "1245660"
  },
  {
    "text": "before committing to coding something I go through these steps",
    "start": "1245660",
    "end": "1251780"
  },
  {
    "text": "First I write a single English language for me",
    "start": "1251780",
    "end": "1258340"
  },
  {
    "text": "sentence to describe what this thing does couple of important things first of all",
    "start": "1258340",
    "end": "1264380"
  },
  {
    "text": "you have to actually write it well I type it typically I'll make it a comment",
    "start": "1264380",
    "end": "1269720"
  },
  {
    "text": "in an empty file second it has to be a sentence one",
    "start": "1269720",
    "end": "1274760"
  },
  {
    "text": "sentence because that forces you to write at the same level of abstraction if you start",
    "start": "1274760",
    "end": "1281539"
  },
  {
    "text": "getting too deep then you're going to need full stops and get you know you'd be bury yourself down write a single",
    "start": "1281539",
    "end": "1287840"
  },
  {
    "text": "sentence describing what you're going to do that's not actually that easy",
    "start": "1287840",
    "end": "1292940"
  },
  {
    "text": "but it's a really good discipline step two look at that sentence and look for",
    "start": "1292940",
    "end": "1299360"
  },
  {
    "text": "Clauses and the trick is to look for commas look for the word and look for word then right any time you're actually",
    "start": "1299360",
    "end": "1306380"
  },
  {
    "text": "got two things in that sentence and when you find those split the sentence",
    "start": "1306380",
    "end": "1313659"
  },
  {
    "text": "so now you have a number of short sentences and you're going to repeat that process until each sentence",
    "start": "1314120",
    "end": "1320980"
  },
  {
    "text": "expresses just one thing at which point you'll say to me oh Dave",
    "start": "1320980",
    "end": "1327320"
  },
  {
    "text": "you've just invented top-down programming not quite we're gonna we're gonna diverge",
    "start": "1327320",
    "end": "1333200"
  },
  {
    "text": "and the reason is twofold first of all at this point you stop you don't do any more decomposition",
    "start": "1333200",
    "end": "1341120"
  },
  {
    "text": "and secondly and this is the thing I discovered which actually makes a real difference to me",
    "start": "1341120",
    "end": "1346400"
  },
  {
    "text": "you then go through each of the things you've written down and discover the state",
    "start": "1346400",
    "end": "1353020"
  },
  {
    "text": "what I mean by state is the data that is associated with and managed by owned by",
    "start": "1353240",
    "end": "1359659"
  },
  {
    "text": "that one little sentence chunk I don't mean the input parameters the",
    "start": "1359659",
    "end": "1364760"
  },
  {
    "text": "output parameters I mean the state now to talk about this I'm going to have",
    "start": "1364760",
    "end": "1371600"
  },
  {
    "text": "to take another little detour but it's got a diagram so that makes it okay",
    "start": "1371600",
    "end": "1376640"
  },
  {
    "text": "I've come up with and this is World shatteringly amazing two diagrams that Express every single computation ever",
    "start": "1376640",
    "end": "1383659"
  },
  {
    "text": "written and ever to be written this is the first one you have a function that takes an input",
    "start": "1383659",
    "end": "1389419"
  },
  {
    "text": "and produces an output I call this functional",
    "start": "1389419",
    "end": "1395500"
  },
  {
    "text": "here's the second one you have a function that takes two inputs one of which is a state it",
    "start": "1396020",
    "end": "1403100"
  },
  {
    "text": "produces two outputs one of which is a state and one of which oh sorry an updated State and the other one of which",
    "start": "1403100",
    "end": "1409400"
  },
  {
    "text": "is its output now this actually is different in the old days I would write this",
    "start": "1409400",
    "end": "1415280"
  },
  {
    "text": "diagram like the state would be kind of like an udder like dropping down from the bottom yeah so you'd have the",
    "start": "1415280",
    "end": "1422539"
  },
  {
    "text": "function and then it would have some associative state that would be like an object right",
    "start": "1422539",
    "end": "1427640"
  },
  {
    "text": "but now I don't want to do that because I want to write just in terms of quote",
    "start": "1427640",
    "end": "1433039"
  },
  {
    "text": "pure functions and so I'm writing a function or a module that has no state",
    "start": "1433039",
    "end": "1438919"
  },
  {
    "text": "of its own but instead the state is passed into it and then passed back out updated",
    "start": "1438919",
    "end": "1446299"
  },
  {
    "text": "so yes this could be considered an object",
    "start": "1446299",
    "end": "1451340"
  },
  {
    "text": "but I don't want to consider an object just yet at which point I get into trouble",
    "start": "1451340",
    "end": "1457940"
  },
  {
    "text": "because pretty much all of my career I've been talking about and using objects",
    "start": "1457940",
    "end": "1463760"
  },
  {
    "text": "so I need to explain to you why I'm not convinced that we need to think about",
    "start": "1463760",
    "end": "1469400"
  },
  {
    "text": "that anymore to do that we're going to have a little Deep dive into history",
    "start": "1469400",
    "end": "1476799"
  },
  {
    "text": "this slide pissed me off no end I teach a course at a university in the states",
    "start": "1477140",
    "end": "1483799"
  },
  {
    "text": "and I brought this slide up and I said this is a really cool slide it's a different picture of Kristen nygot and",
    "start": "1483799",
    "end": "1490220"
  },
  {
    "text": "Olea hondal the inventors of simula because in the middle is Peter nower and",
    "start": "1490220",
    "end": "1496340"
  },
  {
    "text": "all I got was these blank looks and I said you know like Bacchus now are formed BNF",
    "start": "1496340",
    "end": "1503539"
  },
  {
    "text": "please sir what's BNF you know at which point I kind of like lost it",
    "start": "1503539",
    "end": "1509720"
  },
  {
    "text": "um anyway I think it's cool and the cool thing was back in the 60s",
    "start": "1509720",
    "end": "1514880"
  },
  {
    "text": "when they were doing this they were real engineers and Engineers keep engineering day books right little",
    "start": "1514880",
    "end": "1520940"
  },
  {
    "text": "logs little journals if you've ever played Mist then you're familiar with this concept of little journals yeah",
    "start": "1520940",
    "end": "1528200"
  },
  {
    "text": "well you document things in a very flowery handwriting font yeah that's really important so Kristin",
    "start": "1528200",
    "end": "1535640"
  },
  {
    "text": "Nygaard kept the journal and in 1964 he wrote",
    "start": "1535640",
    "end": "1541700"
  },
  {
    "text": "the original idea listen to the style of this right if this isn't straight from Mist I don't know what is and that's",
    "start": "1541700",
    "end": "1548900"
  },
  {
    "text": "cool because he was like 30 years before missed so really he gets to claim not only inventing object orientation but",
    "start": "1548900",
    "end": "1555559"
  },
  {
    "text": "missed journals as well original idea of passive customers moving through a network of Active Components okay",
    "start": "1555559",
    "end": "1561799"
  },
  {
    "text": "they're writing a simulation system quote activity approach became a limiting factor of the way around",
    "start": "1561799",
    "end": "1567980"
  },
  {
    "text": "possible active customers moving through a passive Network this results on a",
    "start": "1567980",
    "end": "1573260"
  },
  {
    "text": "unifying General process concept systems are a set of interacting",
    "start": "1573260",
    "end": "1579320"
  },
  {
    "text": "quasi-parallel processes simula is the first",
    "start": "1579320",
    "end": "1585460"
  },
  {
    "text": "object-oriented language and it's described as a system of quasi-parallel processes",
    "start": "1585460",
    "end": "1592220"
  },
  {
    "text": "all right so a similar instance which is an object they're created by factories they're",
    "start": "1592220",
    "end": "1598039"
  },
  {
    "start": "1594000",
    "end": "1675000"
  },
  {
    "text": "called classes they have per instance State methods and functions that operate on that state and they have a",
    "start": "1598039",
    "end": "1604600"
  },
  {
    "text": "pseudo-independent execution existence all right remember that we'll get back to in just a second",
    "start": "1604600",
    "end": "1610460"
  },
  {
    "text": "language number two small talk first real real oo language",
    "start": "1610460",
    "end": "1616220"
  },
  {
    "text": "inspired by similar lisp and a whole bunch of others and again we have objects and here's the cool thing in",
    "start": "1616220",
    "end": "1622940"
  },
  {
    "text": "1993 Alan K who was one of the Prime inventors of small talk wrote a paper on",
    "start": "1622940",
    "end": "1627980"
  },
  {
    "text": "the history of small talk well worth reading it's online I really strongly recommend it because",
    "start": "1627980",
    "end": "1634520"
  },
  {
    "text": "it gives a really good flavor of about 15 years of Computer Science History in that paper he wrote the mental image",
    "start": "1634520",
    "end": "1642500"
  },
  {
    "text": "was one of separate computers sending requests to other computers that had to be accepted and understood by the",
    "start": "1642500",
    "end": "1648500"
  },
  {
    "text": "receiver before anything could happen in today's terms every object would be a",
    "start": "1648500",
    "end": "1654440"
  },
  {
    "text": "server hmm that seems to tie back to that similar",
    "start": "1654440",
    "end": "1659659"
  },
  {
    "text": "thing too doesn't it the last thing you want any programmer to do is to mess with the internal State",
    "start": "1659659",
    "end": "1666500"
  },
  {
    "text": "dot dot dot dot data hiding inside these independent little processing units",
    "start": "1666500",
    "end": "1674480"
  },
  {
    "text": "so small tool instances are created by factories just like with simula have per",
    "start": "1674480",
    "end": "1679880"
  },
  {
    "start": "1675000",
    "end": "1858000"
  },
  {
    "text": "instance State like with similar have functions that operate on the state just like simula and should be considered as",
    "start": "1679880",
    "end": "1685400"
  },
  {
    "text": "independent processes just like simula huh now next I had",
    "start": "1685400",
    "end": "1692600"
  },
  {
    "text": "um the first time I gave this talk I had C plus plus but I found it so hard not to be rude",
    "start": "1692600",
    "end": "1698120"
  },
  {
    "text": "that I thought no it's not going to do that right so we're not talking about C plus plus",
    "start": "1698120",
    "end": "1704320"
  },
  {
    "text": "let's just say C plus plus is not an object-oriented Language by any of these measures all right in fact I would argue",
    "start": "1704860",
    "end": "1712760"
  },
  {
    "text": "very strongly that Java is not an object-oriented Language by these measures that",
    "start": "1712760",
    "end": "1718700"
  },
  {
    "text": "um Ruby is not an object-oriented Language by these measures in fact there",
    "start": "1718700",
    "end": "1724520"
  },
  {
    "text": "are almost no current object oriented languages that are object oriented",
    "start": "1724520",
    "end": "1731059"
  },
  {
    "text": "according to these measures I've got one surprise for you that will come up in a second",
    "start": "1731059",
    "end": "1737419"
  },
  {
    "text": "I can kind of like summarize this for my own purposes the Tower of object orientation work is done",
    "start": "1737419",
    "end": "1744320"
  },
  {
    "text": "by independent opaque processing units that communicate bypassing each other messages cool",
    "start": "1744320",
    "end": "1750260"
  },
  {
    "text": "so now let's look on the other side of the fence look at functional programming functional programming started in the",
    "start": "1750260",
    "end": "1756440"
  },
  {
    "text": "30s when people were playing with Lambda calculus as a way of redefining or giving a firm theoretical basis to her",
    "start": "1756440",
    "end": "1762500"
  },
  {
    "text": "mathematics there were elements oh I haven't updated this slide kevlin always beats me up",
    "start": "1762500",
    "end": "1768799"
  },
  {
    "text": "because it's not 1950s he says the first implementation was like January the 2nd 1960 so it's technically not 1950s right",
    "start": "1768799",
    "end": "1778419"
  },
  {
    "text": "and there's a whole ream of languages that came about and it's kind of like",
    "start": "1778419",
    "end": "1783799"
  },
  {
    "text": "the ml school and so there's ml or camel and then recently we have F sharp and",
    "start": "1783799",
    "end": "1789559"
  },
  {
    "text": "reason and by the way if you do stuff in the browser have a look at reason",
    "start": "1789559",
    "end": "1794600"
  },
  {
    "text": "all right it is actually usable in the browser it's really quite cool",
    "start": "1794600",
    "end": "1800659"
  },
  {
    "text": "second kind of thread to functional programming came about in the 80s when there was a Resurgence in people thinking about how to prove programs",
    "start": "1800659",
    "end": "1807260"
  },
  {
    "text": "they discovered a couple of things in order to prove programs they needed a good type system and they needed",
    "start": "1807260",
    "end": "1812360"
  },
  {
    "text": "immutable data and so they did and this led to Miranda which was a kind of closed source",
    "start": "1812360",
    "end": "1820899"
  },
  {
    "text": "compiler and then Haskell which was kind of based on Miranda was an Open Source",
    "start": "1820899",
    "end": "1825980"
  },
  {
    "text": "One developed in Scotland so the two kind of principles over there are immutability",
    "start": "1825980",
    "end": "1831860"
  },
  {
    "text": "and first class pure functions functions that don't have their own state",
    "start": "1831860",
    "end": "1837320"
  },
  {
    "text": "and one of the problems with thinking about functional programming as a general programming concept is this idea",
    "start": "1837320",
    "end": "1843260"
  },
  {
    "text": "of immutability because 99 of languages don't have that 99 of languages you've",
    "start": "1843260",
    "end": "1849919"
  },
  {
    "text": "got an object they don't care if you go poking around and changing values inside them so how are we going to map those two",
    "start": "1849919",
    "end": "1856279"
  },
  {
    "text": "across so this is where I get into trouble with the functional folks immutability says a value can never",
    "start": "1856279",
    "end": "1863179"
  },
  {
    "start": "1858000",
    "end": "1935000"
  },
  {
    "text": "change I say that's equivalent to saying that a change value is never shared",
    "start": "1863179",
    "end": "1872020"
  },
  {
    "text": "technically I think it's right but I haven't got the brains to prove it but let's just kind of assume it's right",
    "start": "1872960",
    "end": "1879140"
  },
  {
    "text": "because why not right if we were to do that then what we've got here is values never changed it's",
    "start": "1879140",
    "end": "1885140"
  },
  {
    "text": "kind of like an implementation detail and the actual underlying principle is that changed values are never shared",
    "start": "1885140",
    "end": "1892700"
  },
  {
    "text": "and when you're thinking about concurrent programming when you're thinking about hiding information that's really what you care about",
    "start": "1892700",
    "end": "1900640"
  },
  {
    "text": "so let's assume that if we get into the habit of not sharing change values then we're getting all of the comma points",
    "start": "1900679",
    "end": "1907580"
  },
  {
    "text": "that we get from using up immutable data in a functional language and then first class functions well I",
    "start": "1907580",
    "end": "1914000"
  },
  {
    "text": "mean we pretty much all know what first class functions are but once you've got first class functions then your program",
    "start": "1914000",
    "end": "1919779"
  },
  {
    "text": "becomes a composition of functions and all your program is then is just a transformation input goes to output and",
    "start": "1919779",
    "end": "1927200"
  },
  {
    "text": "that's a lot easier to reason about than something that has a lot of State so the Dao of functional programming",
    "start": "1927200",
    "end": "1935659"
  },
  {
    "start": "1935000",
    "end": "2127000"
  },
  {
    "text": "is immutable data transformed by pure functions and then because I sometimes have Haskell people in the room I have",
    "start": "1935659",
    "end": "1942500"
  },
  {
    "text": "to add often in the presence of an algebraic type system and lazy valuation",
    "start": "1942500",
    "end": "1948080"
  },
  {
    "text": "all right they get really mad right and then I'm going to modify that just slightly by",
    "start": "1948080",
    "end": "1953840"
  },
  {
    "text": "saying it's apparently immutable data because that's all you really need but that leads us to this incredible",
    "start": "1953840",
    "end": "1960799"
  },
  {
    "text": "great conflict right here's where the tension builds up and everyone gets excited because in the Red Corner we've",
    "start": "1960799",
    "end": "1967520"
  },
  {
    "text": "got oh and in the green Corner we got functional programming",
    "start": "1967520",
    "end": "1972799"
  },
  {
    "text": "and some people say I am a functional programmer oh oh people are idiots",
    "start": "1972799",
    "end": "1978440"
  },
  {
    "text": "and other people say I'm an oo programmer I have no idea what the functional people are saying right",
    "start": "1978440",
    "end": "1985039"
  },
  {
    "text": "and there's this big battle that goes on except",
    "start": "1985039",
    "end": "1990679"
  },
  {
    "text": "I don't think that's true remember I said Venn diagrams I love them because you can prove anything with a Venn",
    "start": "1990679",
    "end": "1996320"
  },
  {
    "text": "diagram so I think in fact there's a whole big",
    "start": "1996320",
    "end": "2002080"
  },
  {
    "text": "intersection between functional and oo in fact I would get say maybe 80 percent can be shared between the two",
    "start": "2002080",
    "end": "2010360"
  },
  {
    "text": "there isn't a Great Divide it's the same thing",
    "start": "2010360",
    "end": "2015059"
  },
  {
    "text": "so let's have a look at that just a bit more detail first of all",
    "start": "2015820",
    "end": "2022480"
  },
  {
    "text": "we have the idea of transformation by functions well yeah if you're using a programming language that doesn't have functions in it",
    "start": "2022480",
    "end": "2028960"
  },
  {
    "text": "maybe it's time to upgrade all right secondly we have non-shared state",
    "start": "2028960",
    "end": "2034360"
  },
  {
    "text": "invoked by message passing now what's that",
    "start": "2034360",
    "end": "2039519"
  },
  {
    "text": "well that smells like a process to me",
    "start": "2039519",
    "end": "2045179"
  },
  {
    "text": "so if we have processes and if we have functions then we have",
    "start": "2046120",
    "end": "2051700"
  },
  {
    "text": "both functional programming and oo programming processes unify the two and a process",
    "start": "2051700",
    "end": "2059679"
  },
  {
    "text": "can be a real process like as in you create one or it could be an actor or it",
    "start": "2059679",
    "end": "2065200"
  },
  {
    "text": "could be a channel based thing if you have a CSP based language and I've been coding this way and it",
    "start": "2065200",
    "end": "2070960"
  },
  {
    "text": "works so as a result I no longer care I no longer make that distinction as far",
    "start": "2070960",
    "end": "2078580"
  },
  {
    "text": "as I'm concerned it's all just code sometimes I have state",
    "start": "2078580",
    "end": "2084700"
  },
  {
    "text": "sometimes I don't have state now the world currently is getting more",
    "start": "2084700",
    "end": "2090580"
  },
  {
    "text": "and more divisive right people are adopting labels all the time",
    "start": "2090580",
    "end": "2096520"
  },
  {
    "text": "political labels restaurant labels when it comes to",
    "start": "2096520",
    "end": "2101619"
  },
  {
    "text": "Melbourne and Sydney right all labels and it pushes people apart and it really hurts communication so the gnome says no",
    "start": "2101619",
    "end": "2110140"
  },
  {
    "text": "more labels right let's stop worrying about what things are called and instead worry",
    "start": "2110140",
    "end": "2116260"
  },
  {
    "text": "about what they can do so back to my habit let's actually try",
    "start": "2116260",
    "end": "2121540"
  },
  {
    "text": "this on just a really really tiny experiment",
    "start": "2121540",
    "end": "2126240"
  },
  {
    "start": "2127000",
    "end": "2583000"
  },
  {
    "text": "let's create an online two-player game it doesn't have to be notes and Crosses but unless any kind of game there you",
    "start": "2127060",
    "end": "2133720"
  },
  {
    "text": "have two players all right now if you've ever done this it's actually slightly tricky because you",
    "start": "2133720",
    "end": "2140140"
  },
  {
    "text": "have to sort of like keep two people hanging around until they can match and then go off to play a game and your",
    "start": "2140140",
    "end": "2146740"
  },
  {
    "text": "average web thing is not really designed to handle that easily so step one in the process",
    "start": "2146740",
    "end": "2153220"
  },
  {
    "text": "write a single sentence all at the same level of abstraction that describes what you want to do so my",
    "start": "2153220",
    "end": "2159339"
  },
  {
    "text": "attempt at this is a web app that waits for two players to join then mediates a",
    "start": "2159339",
    "end": "2164680"
  },
  {
    "text": "game between them so",
    "start": "2164680",
    "end": "2169839"
  },
  {
    "text": "two years ago I would have done what any red-blooded web developer would",
    "start": "2169839",
    "end": "2174940"
  },
  {
    "text": "have done I would have done rails new my game or mixfoenix.new my game right",
    "start": "2174940",
    "end": "2182440"
  },
  {
    "text": "and created myself a web app and then into that web app I would pour all the",
    "start": "2182440",
    "end": "2188140"
  },
  {
    "text": "goodness of models and controllers and Views and all sorts of cool stuff",
    "start": "2188140",
    "end": "2193480"
  },
  {
    "text": "yeah that my friends is the way I wrote code",
    "start": "2193480",
    "end": "2200320"
  },
  {
    "text": "and not surprisingly I learned the hard way that when you do that even if it's a small thing to start",
    "start": "2200320",
    "end": "2207099"
  },
  {
    "text": "with there's no such thing as a small web application it always is going to grow and so you",
    "start": "2207099",
    "end": "2213820"
  },
  {
    "text": "always end up with that so let's go back and apply the",
    "start": "2213820",
    "end": "2221320"
  },
  {
    "text": "principles here's our sentence a web app waits for two players to join then mediates a game",
    "start": "2221320",
    "end": "2227800"
  },
  {
    "text": "between well if we're going to divide that into Clauses you can see the two Clauses there right the first part wait for two players",
    "start": "2227800",
    "end": "2235540"
  },
  {
    "text": "second part let them play a game so let's do that let's make that split",
    "start": "2235540",
    "end": "2242980"
  },
  {
    "text": "and just because there's no reason not to we're going to make both of those parts independent web apps",
    "start": "2242980",
    "end": "2249579"
  },
  {
    "text": "why not why should there be everything in one",
    "start": "2249579",
    "end": "2254619"
  },
  {
    "text": "app the splitting into sentences and then sub sentences has actually led us to do",
    "start": "2254619",
    "end": "2261040"
  },
  {
    "text": "that and think of the benefits maybe we're doing noughts and Crosses today but we're going to play",
    "start": "2261040",
    "end": "2266800"
  },
  {
    "text": "um I don't know snap tomorrow right we still need something to go two players can come together fine we can do that",
    "start": "2266800",
    "end": "2273220"
  },
  {
    "text": "we've already got a web component that does that and we have nothing shared between the two because we don't share",
    "start": "2273220",
    "end": "2279099"
  },
  {
    "text": "things so let's dive down a little bit more into that Matchmaker thing",
    "start": "2279099",
    "end": "2285280"
  },
  {
    "text": "now we have to write a sentence for that Matchmaker and my sentence was when a player arrives make them wait until the",
    "start": "2285280",
    "end": "2291940"
  },
  {
    "text": "next player arrives and then pass the two to the game",
    "start": "2291940",
    "end": "2297060"
  },
  {
    "text": "a nice simple sentence how many parts are there in that sentence",
    "start": "2297099",
    "end": "2303060"
  },
  {
    "text": "I came up with three let the player join",
    "start": "2305859",
    "end": "2311560"
  },
  {
    "text": "something where they wait and then pass them to the game okay so now I have three components now at this point I've",
    "start": "2311560",
    "end": "2319359"
  },
  {
    "text": "done the splitting and the repeating so the fourth thing I have to do is to discover State and this was the biggest",
    "start": "2319359",
    "end": "2325599"
  },
  {
    "text": "surprise I got following my new habit you would be amazed at the number of",
    "start": "2325599",
    "end": "2332020"
  },
  {
    "text": "times you do this and the thing that you identify has no State at all",
    "start": "2332020",
    "end": "2339579"
  },
  {
    "text": "if you do this you'll discover that less than half of the components or whatever",
    "start": "2339579",
    "end": "2345520"
  },
  {
    "text": "they are that you generate actually need state and that is a miracle because it is so",
    "start": "2345520",
    "end": "2352480"
  },
  {
    "text": "much easier to write code that has no state it's just a beginning to end transformation",
    "start": "2352480",
    "end": "2358060"
  },
  {
    "text": "and in this case as far as I can tell the only state is on that middle",
    "start": "2358060",
    "end": "2363400"
  },
  {
    "text": "component the waiting room because it has to be able to store one pending",
    "start": "2363400",
    "end": "2368740"
  },
  {
    "text": "player so the first player comes along stick it in the waiting room second player comes",
    "start": "2368740",
    "end": "2374140"
  },
  {
    "text": "along comes out of the waiting room sorry joins the player in the waiting room we get past the game so there is no",
    "start": "2374140",
    "end": "2380140"
  },
  {
    "text": "State apart from that waiting room and that state in the waiting room is one variable I can do that",
    "start": "2380140",
    "end": "2387480"
  },
  {
    "text": "now I want to keep these things decoupled and so the way I'm going to implement",
    "start": "2387520",
    "end": "2393099"
  },
  {
    "text": "this is probably using um I mean if I've got one lying around I'll use Pub sub or I'll use some kind",
    "start": "2393099",
    "end": "2399099"
  },
  {
    "text": "of event system let me stress I am not going to go get a library to do this",
    "start": "2399099",
    "end": "2404680"
  },
  {
    "text": "all right an event system that will handle this is four lines of code",
    "start": "2404680",
    "end": "2410680"
  },
  {
    "text": "do not go and get a library to implement four lines of code just write it",
    "start": "2410680",
    "end": "2417579"
  },
  {
    "text": "so you're going to have a really basic event system so first player comes along so the web",
    "start": "2417579",
    "end": "2423339"
  },
  {
    "text": "front end is going to generate an event hey a player arrived waiting room is going to actually listen for that event",
    "start": "2423339",
    "end": "2429280"
  },
  {
    "text": "and it's going to add a pending player another player is going to come along another exactly the same event gets",
    "start": "2429280",
    "end": "2436540"
  },
  {
    "text": "generated this time it's going to be picked up by the waiting room the rating is going to say oh that's two so it's",
    "start": "2436540",
    "end": "2442420"
  },
  {
    "text": "going to generate an event to say hey there's a pair of players the game component is going to say oh I",
    "start": "2442420",
    "end": "2448599"
  },
  {
    "text": "can deal with that put some together generates a game and passes them back off to the web front end via some kind",
    "start": "2448599",
    "end": "2455740"
  },
  {
    "text": "of event so it's all totally decoupled and we've just joined two people together to play a game",
    "start": "2455740",
    "end": "2462160"
  },
  {
    "text": "really really easy I actually have gone through the",
    "start": "2462160",
    "end": "2468220"
  },
  {
    "text": "exercise of doing this I don't know maybe half a dozen times with half a different different kinds of app",
    "start": "2468220",
    "end": "2473380"
  },
  {
    "text": "and I have to tell you from my personal experience this makes it so much easier",
    "start": "2473380",
    "end": "2478599"
  },
  {
    "text": "to think about coding I generate I no longer generate monolithics",
    "start": "2478599",
    "end": "2484300"
  },
  {
    "text": "the um I got a Hangman game that's written using this principle that has",
    "start": "2484300",
    "end": "2490060"
  },
  {
    "text": "nine separate components in it some of them are no more than a few lines of code",
    "start": "2490060",
    "end": "2495099"
  },
  {
    "text": "and given the decent editor I just use vs code right that's not a problem",
    "start": "2495099",
    "end": "2501160"
  },
  {
    "text": "it really is not a problem even down to like if I make a change in one of the dependencies that change gets rippled",
    "start": "2501160",
    "end": "2506980"
  },
  {
    "text": "through in terms of compilation and it just works so I would strongly commend",
    "start": "2506980",
    "end": "2513720"
  },
  {
    "text": "experimenting with this and seeing if it works for you if it doesn't throw it away if it does excellent",
    "start": "2513720",
    "end": "2521380"
  },
  {
    "text": "so let's summarize the fundamental thing I'm trying to achieve here is to write code that's",
    "start": "2521380",
    "end": "2528940"
  },
  {
    "text": "easy to change because easy code that's easy to change is better design makes",
    "start": "2528940",
    "end": "2534520"
  },
  {
    "text": "life easier for everyone another quote from Mr de Becker denial is a save now pay later scheme",
    "start": "2534520",
    "end": "2543520"
  },
  {
    "text": "yeah make your code easy to change up front and you'll you'll be thankful",
    "start": "2543520",
    "end": "2550720"
  },
  {
    "text": "thinking about design is an innate process it comes from intuition it's not something you think",
    "start": "2550720",
    "end": "2557680"
  },
  {
    "text": "about consciously and so you have to build that intuition by forming habits doing it consciously",
    "start": "2557680",
    "end": "2564280"
  },
  {
    "text": "up front this is my habit your habit may be different I don't care",
    "start": "2564280",
    "end": "2569980"
  },
  {
    "text": "but think about coding as building these habits consciously thinking about why",
    "start": "2569980",
    "end": "2576820"
  },
  {
    "text": "you're doing it and not just copying someone's idea of a blog post the goal easy to change because we're",
    "start": "2576820",
    "end": "2585160"
  },
  {
    "start": "2583000",
    "end": "2617000"
  },
  {
    "text": "going to maximize cohesion minimize coupling along the way we're going to try and",
    "start": "2585160",
    "end": "2591040"
  },
  {
    "text": "stop ourselves using labels because applying labels to people is just a way of not thinking about them as people",
    "start": "2591040",
    "end": "2598119"
  },
  {
    "text": "we're going to make our stuff easy to change but most important of all",
    "start": "2598119",
    "end": "2605619"
  },
  {
    "text": "we're going to have some fun because if it's not fun why the hell are we doing it",
    "start": "2605619",
    "end": "2610660"
  },
  {
    "text": "thank you [Applause]",
    "start": "2610660",
    "end": "2618550"
  }
]