[
  {
    "text": "uh hello everybody this will be a very fast session because i only have 109 slides",
    "start": "2879",
    "end": "8639"
  },
  {
    "text": "um seriously i only have 109 slides uh",
    "start": "8639",
    "end": "13679"
  },
  {
    "text": "this has been through a lot of title changes but essentially it's about persistence performance speed and a",
    "start": "13679",
    "end": "18880"
  },
  {
    "text": "number of other things i've pulled back some of the technical detail but i did include a list of references at the end",
    "start": "18880",
    "end": "25519"
  },
  {
    "text": "of this all of the papers and things if you actually want to read up on some of the things that i've",
    "start": "25519",
    "end": "32160"
  },
  {
    "text": "said that i'm using to back up the outrageous statements that i'm going to be making most of which are pretty",
    "start": "32160",
    "end": "37440"
  },
  {
    "text": "outrageous so here we are",
    "start": "37440",
    "end": "42879"
  },
  {
    "text": "just a quick intro uh about me i've been a developer i worked on unix kernels and",
    "start": "42879",
    "end": "48239"
  },
  {
    "text": "database kernels importing databases and i was an application developer i've held every job in it i was a janitor in",
    "start": "48239",
    "end": "55440"
  },
  {
    "text": "a data center and i've been a cio and a cto and the interesting thing is that in",
    "start": "55440",
    "end": "61359"
  },
  {
    "text": "doing that i've been able to make mistakes across the entire breadth of an i.t organization and i've gotten really",
    "start": "61359",
    "end": "66560"
  },
  {
    "text": "really good at that particular thing so i did become a cto which was great",
    "start": "66560",
    "end": "72960"
  },
  {
    "text": "because then i could tell other people what to do because i got tired of the developer bs because developers don't",
    "start": "72960",
    "end": "78560"
  },
  {
    "text": "talk to database people in the database people's bs with not talking to developers and everybody's always",
    "start": "78560",
    "end": "84080"
  },
  {
    "text": "talking across each other without understanding the underlying data principles behind",
    "start": "84080",
    "end": "89360"
  },
  {
    "text": "things and so what i discovered then was that nobody in the business understands anything and being a cto just means",
    "start": "89360",
    "end": "95680"
  },
  {
    "text": "different people argue with you so i've done a lot of stuff",
    "start": "95680",
    "end": "101759"
  },
  {
    "text": "one of the things that i'm very interested in is the history and patterns so i'm going to start this with",
    "start": "101759",
    "end": "107360"
  },
  {
    "text": "a completely non-technical topic for about 10 minutes which is a brief history of data storage and retrieval",
    "start": "107360",
    "end": "113280"
  },
  {
    "text": "which is is only technical in the theoretical sense because if you look at the problem",
    "start": "113280",
    "end": "120079"
  },
  {
    "text": "we've been talking about information overload and scale problems well for a long time we don't really have good",
    "start": "120079",
    "end": "125680"
  },
  {
    "text": "records before about 1550 about the problems of scale so so many books we",
    "start": "125680",
    "end": "131120"
  },
  {
    "text": "don't have time to read the titles uh which is sort of like i can't get past the first page on google",
    "start": "131120",
    "end": "138160"
  },
  {
    "text": "so we'll go back to the beginning which is when when writing was was created right so we're talking about uh",
    "start": "138160",
    "end": "144959"
  },
  {
    "text": "uh sedentary civilizations we're talking about approximately 5 000 years ago and",
    "start": "144959",
    "end": "150400"
  },
  {
    "text": "we used to use these counting things we used counting sticks and stuff like this and these are sort of like coins each",
    "start": "150400",
    "end": "156640"
  },
  {
    "text": "one means something it's not abstract math and it's not symbolic but once you invent writing",
    "start": "156640",
    "end": "163440"
  },
  {
    "text": "then you have a different thing because now you no longer have the stuff which you can lose this is actually a contract",
    "start": "163440",
    "end": "170080"
  },
  {
    "text": "you would put the recordings and the shapes and the sizes dictate how much and for what kind of product and then",
    "start": "170080",
    "end": "176560"
  },
  {
    "text": "you wrap them up in this thing so that you have a little encryption envelope over it so other people can't snoop on your contracts",
    "start": "176560",
    "end": "182640"
  },
  {
    "text": "and it's it's an interesting technique now we did invent writing",
    "start": "182640",
    "end": "188239"
  },
  {
    "text": "so the first information explosion was all about these these are clay tablets",
    "start": "188239",
    "end": "193360"
  },
  {
    "text": "sumeria mesopotamia all through the indus valley and spreading throughout the whole region",
    "start": "193360",
    "end": "199040"
  },
  {
    "text": "they're about hand sized they're about this big so you can see how much you can fit on one of those using a pointed",
    "start": "199040",
    "end": "204959"
  },
  {
    "text": "stick to make these marks in this stuff and this is actually i did learn to read a lot of this stuff",
    "start": "204959",
    "end": "211040"
  },
  {
    "text": "a couple of years ago just to be able to interpret it but what you're seeing here is really important to software",
    "start": "211040",
    "end": "217360"
  },
  {
    "text": "developers it is beer so we're talking about a beer tally here",
    "start": "217360",
    "end": "222959"
  },
  {
    "text": "and we're talking about the amount of grain that goes into it and other things and so you've recorded all of this in an",
    "start": "222959",
    "end": "228159"
  },
  {
    "text": "abstract representation of letters and numbers which is great now what happens when you start to get a",
    "start": "228159",
    "end": "234239"
  },
  {
    "text": "lot of these things well first of all you know you look at it you have storage and retrieval and communication because this stuff's heavy",
    "start": "234239",
    "end": "241200"
  },
  {
    "text": "this is actually a letter that people would mail and the letter comes in an envelope and sometimes it",
    "start": "241200",
    "end": "247439"
  },
  {
    "text": "doesn't all fit on one page so you have a little second page and it's still recognizable today and",
    "start": "247439",
    "end": "253599"
  },
  {
    "text": "it's in its basic structures but when you get a lot of them you need something you need metadata",
    "start": "253599",
    "end": "259440"
  },
  {
    "text": "metadata when you have lots and lots of those tablets is about the tablet so you're now",
    "start": "259440",
    "end": "266000"
  },
  {
    "text": "creating tablets about tablets and you're categorizing them the the library at asher bonapal which was one of the",
    "start": "266000",
    "end": "272240"
  },
  {
    "text": "biggest had different sections where they organized information into different",
    "start": "272240",
    "end": "278160"
  },
  {
    "text": "units and really it was sort of like classifying data and then putting it all together",
    "start": "278160",
    "end": "283600"
  },
  {
    "text": "and it's very much like if you tried to deal with one of these it's a lot like dealing with hdfs because hdfs doesn't",
    "start": "283600",
    "end": "289759"
  },
  {
    "text": "really have any metadata and i don't count h catalog it's a very primitive thing it's sort of like one of these",
    "start": "289759",
    "end": "295919"
  },
  {
    "text": "which is that these and the data can become disjoint and lie to you and if",
    "start": "295919",
    "end": "301280"
  },
  {
    "text": "you've ever used hive on top of data stored in hdfs you understand what can",
    "start": "301280",
    "end": "307759"
  },
  {
    "text": "happen because you can count the stuff with the program on the one side and you can query the data via hive on the other",
    "start": "307759",
    "end": "313680"
  },
  {
    "text": "side and you'll get two different numbers because the schema is sort of optimistic",
    "start": "313680",
    "end": "319919"
  },
  {
    "text": "now uh what we ended up with is some interesting things they kept these in baskets",
    "start": "319919",
    "end": "325039"
  },
  {
    "text": "so when you have a basket full of these it's not too bad when you have many baskets it starts to become a problem so",
    "start": "325039",
    "end": "330720"
  },
  {
    "text": "they drilled holes in the tablets put a little papyrus tab on there and then wrote things on papyrus so we actually",
    "start": "330720",
    "end": "336320"
  },
  {
    "text": "had tagging infrastructure and folksonomies back then and eventually it got even more complicated",
    "start": "336320",
    "end": "343440"
  },
  {
    "text": "and we started to create tablets about what was inside the tablets not just the",
    "start": "343440",
    "end": "349039"
  },
  {
    "text": "tax receipts are over here and the barley production is here and the beer dispensary is over here it was things",
    "start": "349039",
    "end": "355520"
  },
  {
    "text": "like synonym lists and breaking stuff up and keeping more detailed and deeper records and you'll notice these things",
    "start": "355520",
    "end": "361759"
  },
  {
    "text": "are kind of big now because we're worried about what's inside the documents as well as just",
    "start": "361759",
    "end": "367680"
  },
  {
    "text": "where the documents are because we're dealing in aggregates we're not dealing in one clay tablet for one farmer in one",
    "start": "367680",
    "end": "375039"
  },
  {
    "text": "field we're dealing with all the clay tablets for all the farmers in all the fields",
    "start": "375039",
    "end": "380319"
  },
  {
    "text": "because we're trying to start doing forecasting we're trying to use the information to figure out who's dodging",
    "start": "380319",
    "end": "385520"
  },
  {
    "text": "their taxes and not paying any money and so um we start to create this kind of",
    "start": "385520",
    "end": "390639"
  },
  {
    "text": "stuff there's some seats over here if you need to see so what we've got then is more metadata",
    "start": "390639",
    "end": "398400"
  },
  {
    "text": "and more interesting things and we discover some stuff about claytec as we're looking through all of these little tablets one of the interesting",
    "start": "398400",
    "end": "404639"
  },
  {
    "text": "ones is some of the limitations that you have very much like nine track tapes if you ever worked with",
    "start": "404639",
    "end": "410639"
  },
  {
    "text": "them which i did a long time ago or punched cards you know those things are all uh right once read many",
    "start": "410639",
    "end": "417759"
  },
  {
    "text": "you can't you can't write them more than once kind of like hdfs is an append only file system so what you see right here",
    "start": "417759",
    "end": "424560"
  },
  {
    "text": "is that when somebody makes a mistake they have to chisel it out and so it's not very effective updates",
    "start": "424560",
    "end": "431520"
  },
  {
    "text": "are expensive just like in databases now one of the things about how they",
    "start": "431520",
    "end": "436720"
  },
  {
    "text": "they maintain this stuff that i find very fascinating is uh these tablets also have edges this one",
    "start": "436720",
    "end": "442960"
  },
  {
    "text": "doesn't but it's called an incipit and you can write on the edges and somebody doing a phd dissertation discovered",
    "start": "442960",
    "end": "449840"
  },
  {
    "text": "some decomposed wooden shelving with a whole lot of these and they were all inscribed on three edges on one edge you",
    "start": "449840",
    "end": "456800"
  },
  {
    "text": "had the type of grain that was produced on another edge you had the person and on another edge you had the the year of",
    "start": "456800",
    "end": "465919"
  },
  {
    "text": "harvest what you essentially had was a multi-dimensional olap cube they were",
    "start": "465919",
    "end": "471919"
  },
  {
    "text": "creating uh three-dimensional hypercubes uh to index the data because then you could rack these things up and somebody",
    "start": "471919",
    "end": "478479"
  },
  {
    "text": "asked a question like what was the barley harvest in this district last year the year before and the year before",
    "start": "478479",
    "end": "485360"
  },
  {
    "text": "that so that you could see if they were dodging taxes or do a forecast and the only way to do that",
    "start": "485360",
    "end": "492319"
  },
  {
    "text": "efficiently is to have these things organized and structured laid out in sequences so they're storing",
    "start": "492319",
    "end": "498479"
  },
  {
    "text": "these things in sorted order now oh this goes on for a long time we have thousands of years of this before we get",
    "start": "498479",
    "end": "504000"
  },
  {
    "text": "to paper the invention of paper tech started with bamboo pressed paper we got to papyrus",
    "start": "504000",
    "end": "511599"
  },
  {
    "text": "and eventually to scrolls now it's lighter right there's a lot less atoms they're a lot more portable it's a lot",
    "start": "511599",
    "end": "518240"
  },
  {
    "text": "denser storage medium because you can write much smaller on it and store things bigger so capacities goes up",
    "start": "518240",
    "end": "525120"
  },
  {
    "text": "information density goes up and we end up with the first real libraries that include things that you",
    "start": "525120",
    "end": "531200"
  },
  {
    "text": "might want to read but also we need new metadata techniques when information density goes up by an",
    "start": "531200",
    "end": "537760"
  },
  {
    "text": "order or in this case two orders of magnitude uh you know the the atoms per bit",
    "start": "537760",
    "end": "544000"
  },
  {
    "text": "changes drastically and you have things like this that require headers and footers but this is very much a serial",
    "start": "544000",
    "end": "552080"
  },
  {
    "text": "scan based system you can't random access a scroll and so",
    "start": "552080",
    "end": "557839"
  },
  {
    "text": "we also discovered some things about impermanence you know just like disk drives that fail periodically is that",
    "start": "557839",
    "end": "562959"
  },
  {
    "text": "whenever there's a revolution because people don't want to be paying their taxes anymore they burn this stuff down",
    "start": "562959",
    "end": "568240"
  },
  {
    "text": "now when you started a fire and it was full of clay tablets it made them permanent because it baked them",
    "start": "568240",
    "end": "575120"
  },
  {
    "text": "in the world of paper there was a little problem of instability so",
    "start": "575120",
    "end": "580480"
  },
  {
    "text": "now with scrolls you have continuous reading start here and here with",
    "start": "580480",
    "end": "586000"
  },
  {
    "text": "codices and books you have random access now the interesting thing is if you make",
    "start": "586000",
    "end": "591040"
  },
  {
    "text": "them big like this and they're random access until you have invented some new technologies for",
    "start": "591040",
    "end": "597760"
  },
  {
    "text": "indexing like an index or a table of contents or page",
    "start": "597760",
    "end": "603120"
  },
  {
    "text": "numbering until somebody invents those techniques these things are not much",
    "start": "603120",
    "end": "608399"
  },
  {
    "text": "different than a scroll but once they invent them suddenly we have a way to go right to a particular place in a book we",
    "start": "608399",
    "end": "614800"
  },
  {
    "text": "can begin to record things differently we can record mathematics and tax receipts and a lot of other stuff",
    "start": "614800",
    "end": "620240"
  },
  {
    "text": "we kept evolving we moved from hand-written scrolls and handwritten codices to printing so we got full high",
    "start": "620240",
    "end": "627120"
  },
  {
    "text": "definition rgb graphics higher you know smaller form factors we got portables you know",
    "start": "627120",
    "end": "633200"
  },
  {
    "text": "books used to be this big now they're little chat books um and it keeps going on and on the technology gets better",
    "start": "633200",
    "end": "639839"
  },
  {
    "text": "until eventually we were producing so much stuff that the things that were printing become more important in the printer and",
    "start": "639839",
    "end": "646720"
  },
  {
    "text": "we're at that point today we're at the point today where the printer we're focusing on technology but the printer",
    "start": "646720",
    "end": "653120"
  },
  {
    "text": "is not as important as what it's printing the data and so if we move forward into the more",
    "start": "653120",
    "end": "659120"
  },
  {
    "text": "interesting times the modern era right we go to the elizabethan era and now we've got all of this stuff perfect",
    "start": "659120",
    "end": "664800"
  },
  {
    "text": "copies we're creating topical catalogs we've standardized fonts nobody realizes",
    "start": "664800",
    "end": "671120"
  },
  {
    "text": "how important this is but when you were writing latin there was a priestly font there was an aristocratic font there was",
    "start": "671120",
    "end": "678079"
  },
  {
    "text": "a more plebeian font and these things could not be read the same and so they",
    "start": "678079",
    "end": "684000"
  },
  {
    "text": "were incompatible so you could write the same letter in three different writing schemes and it was like doing",
    "start": "684000",
    "end": "690079"
  },
  {
    "text": "ebcdic versus ascii versus unicode and so they standardized these things so that there was not a problem",
    "start": "690079",
    "end": "696800"
  },
  {
    "text": "that took a long long time and they began to deal with taxonomy",
    "start": "696800",
    "end": "701920"
  },
  {
    "text": "because there's so much information we now have to figure out how to organize and structure and store it we go from 8",
    "start": "701920",
    "end": "707440"
  },
  {
    "text": "million books in 1 500 to 200 million books in 1600 so in that that time span",
    "start": "707440",
    "end": "713200"
  },
  {
    "text": "and of course commoditization and when you have that you have overload so we end up with even better stuff",
    "start": "713200",
    "end": "718800"
  },
  {
    "text": "we've got title pages and colophons and tables of contexts and uh",
    "start": "718800",
    "end": "724079"
  },
  {
    "text": "finally get to the georgian era this is the era of of natural history this is",
    "start": "724079",
    "end": "729279"
  },
  {
    "text": "where things in my mind get really interesting because now we've got a big dispute between linnaeus and",
    "start": "729279",
    "end": "736160"
  },
  {
    "text": "buffon and nobody knows who buffon and does anybody here know who buffon is",
    "start": "736160",
    "end": "741200"
  },
  {
    "text": "yes you get the prize i'll give you my phone later um so that's bouffant right but",
    "start": "741200",
    "end": "748560"
  },
  {
    "text": "who cares about bouffant well he was a really smart guy he didn't believe",
    "start": "748560",
    "end": "753600"
  },
  {
    "text": "that species were fixed you see linnaeus and we use the linnaean taxonomic system",
    "start": "753600",
    "end": "758959"
  },
  {
    "text": "for plants and animals today species you know genus species designations his taxonomic classification",
    "start": "758959",
    "end": "766320"
  },
  {
    "text": "is fixed every time you have to insert some new species you've discovered into the tree you have to rebalance the tree",
    "start": "766320",
    "end": "774320"
  },
  {
    "text": "in a database it's not too bad on paper it's a nightmare unfortunately buffon's method was a",
    "start": "774320",
    "end": "781040"
  },
  {
    "text": "faceted classification scheme name value pairs is essentially how it worked",
    "start": "781040",
    "end": "786639"
  },
  {
    "text": "it's very flexible when you do it that way but the problem is that the technology can't afford that flexibility",
    "start": "786639",
    "end": "793120"
  },
  {
    "text": "because paper tech when you have to rewrite the index every time you add new facets and rewrite the things that point",
    "start": "793120",
    "end": "800560"
  },
  {
    "text": "to it to the actual data become very expensive but his was very bottom-up",
    "start": "800560",
    "end": "805920"
  },
  {
    "text": "because he knew that species were different and species were changing all the time whereas linnaeus believed god",
    "start": "805920",
    "end": "811279"
  },
  {
    "text": "created them they're just like this and nothing shall ever change and once we've discovered all of them and there can't",
    "start": "811279",
    "end": "817920"
  },
  {
    "text": "be many more than are in europe because europe is where everything started so of course uh you know that this",
    "start": "817920",
    "end": "823440"
  },
  {
    "text": "debate went on for a long time he won uh bouffant lost and we moved on and then in the victorian era you know now",
    "start": "823440",
    "end": "830399"
  },
  {
    "text": "we've got steam driven printing the enlightenment um massive amounts of engineering and",
    "start": "830399",
    "end": "838160"
  },
  {
    "text": "specialized books on everything the perfection of a stereotyping process and we end up with this",
    "start": "838160",
    "end": "844079"
  },
  {
    "text": "cutter the cutter classification system for books and technical manuals 1882",
    "start": "844079",
    "end": "850079"
  },
  {
    "text": "bottom up it's a faceted classification system tags it's a more flexible structure than your",
    "start": "850079",
    "end": "857279"
  },
  {
    "text": "standard dewey decimal system which is the other person on the other side of",
    "start": "857279",
    "end": "863440"
  },
  {
    "text": "this argument and he's saying well and so by the way his name is melville now normally melville is spelled",
    "start": "863440",
    "end": "869920"
  },
  {
    "text": "m-e-l-v-i-l-l-e uh he took off the l and the e because it was more efficient to write his name",
    "start": "869920",
    "end": "876000"
  },
  {
    "text": "so he was an efficiency expert this that's actually true and so static",
    "start": "876000",
    "end": "882240"
  },
  {
    "text": "structures right the dewey decimal system gives you numbers and the numbers do not dereference to a",
    "start": "882240",
    "end": "888240"
  },
  {
    "text": "book whereas his system dereferences to a single title on the shelf his does not",
    "start": "888240",
    "end": "894320"
  },
  {
    "text": "his takes you to a shelf and then you have to do a scan across that shelf it's like reading a page in a database you",
    "start": "894320",
    "end": "901040"
  },
  {
    "text": "you know which page things are on but you don't know which row it is until you've read all the rows",
    "start": "901040",
    "end": "906160"
  },
  {
    "text": "and the the thing is this is static you define it once you go to the bookshelf",
    "start": "906160",
    "end": "911519"
  },
  {
    "text": "and you throw new books on you don't have to worry about where on the shelf to put that book whereas in",
    "start": "911519",
    "end": "917279"
  },
  {
    "text": "his system there's a sequencing and an ordering and so each thing has to be inserted now when you take into account",
    "start": "917279",
    "end": "924560"
  },
  {
    "text": "this and the problems of steam driven printing they were solving all sorts of problems",
    "start": "924560",
    "end": "930959"
  },
  {
    "text": "about ingest and consumption simultaneously and this one uh lost and this one won despite the",
    "start": "930959",
    "end": "937920"
  },
  {
    "text": "fact that this one is the better system and so you end up with just like linnaeus and bouffant a",
    "start": "937920",
    "end": "944320"
  },
  {
    "text": "top-down rigid taxonomic schema one",
    "start": "944320",
    "end": "950079"
  },
  {
    "text": "and the same thing happens in libraries and so why did they win well linnaeus",
    "start": "950079",
    "end": "955519"
  },
  {
    "text": "versus buffon it was the limitations of paper and it was the fact that good enough wins the day you know this is",
    "start": "955519",
    "end": "960880"
  },
  {
    "text": "good enough for us to get our job done and share things in an era when it might take a month for a book to travel",
    "start": "960880",
    "end": "967040"
  },
  {
    "text": "between two cities with some new information in it everybody's taxonomies get out of sequence it's a replication",
    "start": "967040",
    "end": "973680"
  },
  {
    "text": "problem when you have a replication problem and you're trying to work on scientific classifications",
    "start": "973680",
    "end": "979199"
  },
  {
    "text": "you need something that's going to remain stable you can't have eventually consistent doing biology and so that's",
    "start": "979199",
    "end": "987279"
  },
  {
    "text": "why he won if you look at the cutter classification system versus",
    "start": "987279",
    "end": "993839"
  },
  {
    "text": "versus the dewey decimal system it wasn't solving the problem you think it was because by that time they were",
    "start": "993839",
    "end": "1000480"
  },
  {
    "text": "producing so much data that it took libraries longer to shelve",
    "start": "1000480",
    "end": "1005600"
  },
  {
    "text": "books than the rate of inflow of new books and so the efficiency expert figured out how",
    "start": "1005600",
    "end": "1012560"
  },
  {
    "text": "to best shelve books the fastest way possible so librarians could get around",
    "start": "1012560",
    "end": "1017680"
  },
  {
    "text": "to helping you find the books in the library rather than just constantly loading the stuff and letting you figure",
    "start": "1017680",
    "end": "1024000"
  },
  {
    "text": "out how to get there and it also enabled some self-service because if you knew the classification scheme here or here",
    "start": "1024000",
    "end": "1031038"
  },
  {
    "text": "you could find the information you were looking for you could self-serve and so",
    "start": "1031039",
    "end": "1037199"
  },
  {
    "text": "pragmatism being pragmatic about these total set of problems you're trying to solve is",
    "start": "1037199",
    "end": "1042720"
  },
  {
    "text": "important in the library system one was not pragmatic",
    "start": "1042720",
    "end": "1048160"
  },
  {
    "text": "because you had to change so much stuff every time and the technology didn't permit it the same thing with buffon",
    "start": "1048160",
    "end": "1054320"
  },
  {
    "text": "bouffant loses for that same reason it's not practical and so",
    "start": "1054320",
    "end": "1059760"
  },
  {
    "text": "that's where these things got to now history is always the same these patterns repeat and repeat and repeat",
    "start": "1059760",
    "end": "1067039"
  },
  {
    "text": "top down versus bottom up which is essentially rigid schema versus",
    "start": "1067039",
    "end": "1072400"
  },
  {
    "text": "flexible schema do you give people autonomy which means things can become out of sync without mechanisms to",
    "start": "1072400",
    "end": "1078799"
  },
  {
    "text": "maintain that who controls it is it hierarchy versus network",
    "start": "1078799",
    "end": "1084559"
  },
  {
    "text": "all those taxonomies and library classifications are tree structured whereas all of the bottom-up faceted",
    "start": "1084559",
    "end": "1091600"
  },
  {
    "text": "classification and tagging is networks and so you've got this network hierarchy",
    "start": "1091600",
    "end": "1097280"
  },
  {
    "text": "kind of a problem and power versus ease it's powerful to have something which is",
    "start": "1097280",
    "end": "1104480"
  },
  {
    "text": "network oriented and flexible but it takes a lot of effort to use it and so",
    "start": "1104480",
    "end": "1110240"
  },
  {
    "text": "these are the kinds of things you're making trade-offs in every engineering decision and so this teaches us a few",
    "start": "1110240",
    "end": "1115440"
  },
  {
    "text": "things you know information requires schema it requires changes when scale changes when the",
    "start": "1115440",
    "end": "1123280"
  },
  {
    "text": "information density from clay to various types of paper and scrolls to codices to books and the rate of increase of that",
    "start": "1123280",
    "end": "1131919"
  },
  {
    "text": "that changes organizing principles because the old system was designed for",
    "start": "1131919",
    "end": "1137919"
  },
  {
    "text": "an order of magnitude simpler work and that's where we are with databases and",
    "start": "1137919",
    "end": "1142960"
  },
  {
    "text": "things today storing and managing data and so at some point you're going to",
    "start": "1142960",
    "end": "1149280"
  },
  {
    "text": "create enough stuff that it's going to tip and the problem will no longer be production which is oltp which is",
    "start": "1149280",
    "end": "1156880"
  },
  {
    "text": "transaction processing which is what a lot of us here are dealing with application development and it tips to",
    "start": "1156880",
    "end": "1162559"
  },
  {
    "text": "the other side data consumption in our case and when that happens then you really",
    "start": "1162559",
    "end": "1168000"
  },
  {
    "text": "have to focus on dissemination and consumption and how you get data back out of these systems",
    "start": "1168000",
    "end": "1173840"
  },
  {
    "text": "and so first you record then you deal with the other side of the coin now this has gone on for thousands",
    "start": "1173840",
    "end": "1179919"
  },
  {
    "text": "of years in each technology regime change there was a one to several orders of magnitude",
    "start": "1179919",
    "end": "1186640"
  },
  {
    "text": "increase in information density and that's when things get interesting and that's when we get to this",
    "start": "1186640",
    "end": "1192880"
  },
  {
    "text": "this focus on production to consumption and so",
    "start": "1192880",
    "end": "1197919"
  },
  {
    "text": "to repeat the grand cycle which is we create a technology it enables us",
    "start": "1197919",
    "end": "1204080"
  },
  {
    "text": "to do really neat new things then we have to come up with methods to cope with this stuff and once we've come",
    "start": "1204080",
    "end": "1210640"
  },
  {
    "text": "up with those methods like libraries for example or card catalogs then we can take advantage of what's out there and",
    "start": "1210640",
    "end": "1218480"
  },
  {
    "text": "use it and then that creates the possibility of new things which creates new technologies which feeds right",
    "start": "1218480",
    "end": "1225280"
  },
  {
    "text": "through if you look at the database industry that's exactly what we've seen and this is what leads to big data it's",
    "start": "1225280",
    "end": "1231919"
  },
  {
    "text": "just that in previous versions big data wasn't digital so i love this quote",
    "start": "1231919",
    "end": "1238400"
  },
  {
    "text": "the most amazing achievement of the computer software industry is its continuing cancellation of these",
    "start": "1238400",
    "end": "1243760"
  },
  {
    "text": "staggering gains made by the hardware industry um so i'm going to take us through just a",
    "start": "1243760",
    "end": "1249679"
  },
  {
    "text": "little bit of scaling history uh question why doesn't your database scale who's having scalability problems uh",
    "start": "1249679",
    "end": "1256799"
  },
  {
    "text": "why doesn't your database scale the the problem of storing that he said is normalization and taking the data",
    "start": "1256799",
    "end": "1262400"
  },
  {
    "text": "that's coming in from trades breaking it out storing it that takes effort and then pulling it back out and having to",
    "start": "1262400",
    "end": "1267919"
  },
  {
    "text": "piece all of the things back together i mean anybody else problems performance i would thought somebody would just shout",
    "start": "1267919",
    "end": "1273600"
  },
  {
    "text": "out relational databases suck i'm kind of disappointed in you guys um",
    "start": "1273600",
    "end": "1278880"
  },
  {
    "text": "and so um which leads me to uh you know some things and and that actually is is a",
    "start": "1278880",
    "end": "1285840"
  },
  {
    "text": "complaint not so much about the relational model but about how sql was",
    "start": "1285840",
    "end": "1290960"
  },
  {
    "text": "implemented with the relational model which was very different sql and relational model are two different",
    "start": "1290960",
    "end": "1296240"
  },
  {
    "text": "things they actually came about at different points in time but we confuse the two we confuse the api in the system that runs it",
    "start": "1296240",
    "end": "1303600"
  },
  {
    "text": "scalability is a really challenging thing and that gets us to a lot of hipster",
    "start": "1303600",
    "end": "1309200"
  },
  {
    "text": "which is the the silicon valley and yes i come you can tell i'm wearing a formal silicon valley tuxedo here",
    "start": "1309200",
    "end": "1316400"
  },
  {
    "text": "i can't get my sequel to scale therefore relational databases don't scale therefore we must use nosql",
    "start": "1316400",
    "end": "1324799"
  },
  {
    "text": "now that may be true when you're trying to build a transaction system but it's",
    "start": "1324799",
    "end": "1330480"
  },
  {
    "text": "probably not true when you're trying to get the data back out there are two problems that work here one is",
    "start": "1330480",
    "end": "1335679"
  },
  {
    "text": "transaction and serving the other is query and analysis so let's look at a little bit of of history where did we",
    "start": "1335679",
    "end": "1342320"
  },
  {
    "text": "start so i started building applications when we built them on the same machine and then and then we separated them when",
    "start": "1342320",
    "end": "1347760"
  },
  {
    "text": "we made a database server because many computers became cheap enough that you could run one machine for a database and",
    "start": "1347760",
    "end": "1354240"
  },
  {
    "text": "put all your application code on the other and there were fewer conflicts and multiple applications could possibly",
    "start": "1354240",
    "end": "1360000"
  },
  {
    "text": "connect to the same database early on one database one application",
    "start": "1360000",
    "end": "1366640"
  },
  {
    "text": "and that's where we are with a lot of nosql stuff today and there's a reason for this the reason is that",
    "start": "1366640",
    "end": "1372720"
  },
  {
    "text": "nosql has gotten rid of logical modeling and the physical and logical model are",
    "start": "1372720",
    "end": "1378159"
  },
  {
    "text": "the same thing they've recoupled something that in every prior instantiation going back through time we",
    "start": "1378159",
    "end": "1384799"
  },
  {
    "text": "decoupled and that's a problem when your organizing your organizing principle and",
    "start": "1384799",
    "end": "1390559"
  },
  {
    "text": "your physical storage model are married you have tight coupling and when you have tight coupling your code is going",
    "start": "1390559",
    "end": "1396720"
  },
  {
    "text": "to break a lot it's going to break because things change and that's one of the key problems that",
    "start": "1396720",
    "end": "1403600"
  },
  {
    "text": "we have yet to work through because everybody works on the easy eighty percent like getting things to scale up and then",
    "start": "1403600",
    "end": "1409679"
  },
  {
    "text": "starts worrying about things like consistency and that's exactly what we were doing back then the first time we put two",
    "start": "1409679",
    "end": "1415840"
  },
  {
    "text": "applications on the same database realized the database needed to change now i've got",
    "start": "1415840",
    "end": "1422559"
  },
  {
    "text": "an optimized physical path because that's what nosql databases do they give you an optimal physical path to do only",
    "start": "1422559",
    "end": "1429600"
  },
  {
    "text": "one read for this thing and one right for this thing rather than the normalized problem of six different",
    "start": "1429600",
    "end": "1435520"
  },
  {
    "text": "reads and six different rates which slows down performance and creates scaling bottlenecks but when another",
    "start": "1435520",
    "end": "1441360"
  },
  {
    "text": "application tries to read that now you've got a problem because it's not optimal for him so somebody pays",
    "start": "1441360",
    "end": "1448400"
  },
  {
    "text": "so we mucked around with this stuff a lot and to scale it up we started adding",
    "start": "1448400",
    "end": "1453600"
  },
  {
    "text": "application servers in part because the memory limitations here each database",
    "start": "1453600",
    "end": "1459039"
  },
  {
    "text": "connection when i used to work with oracle version six took approximately two megabytes so a sql pipe from each",
    "start": "1459039",
    "end": "1464960"
  },
  {
    "text": "application to here did that but you know these things aren't all active at the same time connection pooling so",
    "start": "1464960",
    "end": "1471840"
  },
  {
    "text": "we're using an app server and connection pooling to reduce that part of the load back here and give more resource to this",
    "start": "1471840",
    "end": "1477919"
  },
  {
    "text": "and begin to separate some functionality and then then we throw money at the problem we make",
    "start": "1477919",
    "end": "1483760"
  },
  {
    "text": "make the database bigger so now with a bigger database uh we can get to a point",
    "start": "1483760",
    "end": "1488960"
  },
  {
    "text": "but of course you're limited by the size of your box so um you know what did we do next well you",
    "start": "1488960",
    "end": "1494880"
  },
  {
    "text": "know starting in the 90s with with web stateless web architectures we began to",
    "start": "1494880",
    "end": "1500240"
  },
  {
    "text": "do this you know split things out stateless architectures break it all apart load balance between the first",
    "start": "1500240",
    "end": "1506159"
  },
  {
    "text": "tier and the second tier build your services get a really big database back here and you know this was the 1990s",
    "start": "1506159",
    "end": "1513039"
  },
  {
    "text": "this was when i was doing web 1.0 basically this is exactly the same as",
    "start": "1513039",
    "end": "1518320"
  },
  {
    "text": "the stuff we were doing on mainframes and unix machines you just keep making this bigger until",
    "start": "1518320",
    "end": "1523760"
  },
  {
    "text": "you're spending two million dollars a year on oracle licenses and it's not getting any faster and at that point",
    "start": "1523760",
    "end": "1530159"
  },
  {
    "text": "you know you've got scalability and availability problems because it's a much more complex architecture you keep",
    "start": "1530159",
    "end": "1535520"
  },
  {
    "text": "making it bigger and you you eventually say okay fine we're going to do a replica so now you",
    "start": "1535520",
    "end": "1542559"
  },
  {
    "text": "can maybe read out of this thing and only isolate writes to here or just sort of split and load balance and read only",
    "start": "1542559",
    "end": "1549760"
  },
  {
    "text": "replicas are great except that now i've got to get data that's going into here from there and now i've got a possible",
    "start": "1549760",
    "end": "1555360"
  },
  {
    "text": "consistency problem where if i write a transaction into here and read it from there i have a problem so let's shard",
    "start": "1555360",
    "end": "1561120"
  },
  {
    "text": "the data because if we shard the data then it matches the rest of the architecture",
    "start": "1561120",
    "end": "1566320"
  },
  {
    "text": "stateless architecture out here broken up into pieces back here we break it up what is",
    "start": "1566320",
    "end": "1572640"
  },
  {
    "text": "sharding it's relationally consistent local data sets so the customer and the",
    "start": "1572640",
    "end": "1577840"
  },
  {
    "text": "orders for that customer and the products for that customer all live in a particular location it's all one",
    "start": "1577840",
    "end": "1584080"
  },
  {
    "text": "place it's co-located and that's that's a fine thing uh it works wonderfully until you have more",
    "start": "1584080",
    "end": "1590159"
  },
  {
    "text": "than about three at which point things get horrible so if you read the google spanner paper which",
    "start": "1590159",
    "end": "1596480"
  },
  {
    "text": "i reference they talk about spending two years on a re-sharding scheme for adwords and",
    "start": "1596480",
    "end": "1603039"
  },
  {
    "text": "adwords by the way is 95 percent of google's revenue that's a lot of money and that's they have to be very careful",
    "start": "1603039",
    "end": "1608799"
  },
  {
    "text": "with it and it's pretty bad when it takes two years so that's why they had to change that infrastructure out so",
    "start": "1608799",
    "end": "1614159"
  },
  {
    "text": "what happens is this makes it more complicated because now i've got all of this extra stuff and i've got to write",
    "start": "1614159",
    "end": "1620000"
  },
  {
    "text": "code to do this and performance takes a hit because even though i'm i'm only isolating i o",
    "start": "1620000",
    "end": "1626559"
  },
  {
    "text": "to one note i've got all these layers to go through and lines of code to go through so let's cache it",
    "start": "1626559",
    "end": "1632000"
  },
  {
    "text": "let's get the stuff from mysql or postgres or whatever we're using and and let's use memcached or or something like",
    "start": "1632000",
    "end": "1637919"
  },
  {
    "text": "that up front and this is great except that unless this is as big as this",
    "start": "1637919",
    "end": "1644159"
  },
  {
    "text": "you have a problem again which is that you'll have cash misses so you're optimizing hopefully to get the data in",
    "start": "1644159",
    "end": "1650720"
  },
  {
    "text": "cash that smokes most likely to be used that adds complexity so from the the caching thing you know",
    "start": "1650720",
    "end": "1656559"
  },
  {
    "text": "you could expand the caches by using a lot more machines and get a lot more memory at",
    "start": "1656559",
    "end": "1661600"
  },
  {
    "text": "which point you're really just using this as a persistence layer but it's still an acid compliant you know",
    "start": "1661600",
    "end": "1667039"
  },
  {
    "text": "persistence layer which has problems and then you have issues again",
    "start": "1667039",
    "end": "1672240"
  },
  {
    "text": "of if i take the data and i write it in here and then my my data's stale because of the cache i can have inconsistencies",
    "start": "1672240",
    "end": "1679120"
  },
  {
    "text": "so operational complexity goes up it becomes a nightmare to manage and so",
    "start": "1679120",
    "end": "1685200"
  },
  {
    "text": "you know more things to break more management more administration more",
    "start": "1685200",
    "end": "1690240"
  },
  {
    "text": "software complexity more parts more points of failure more latency within",
    "start": "1690240",
    "end": "1695360"
  },
  {
    "text": "the system every time we added something in here in an effort to improve performance we put latency somewhere",
    "start": "1695360",
    "end": "1701440"
  },
  {
    "text": "caching is deferred latency right because some point this cache will have",
    "start": "1701440",
    "end": "1706640"
  },
  {
    "text": "to refresh or there will be a cache miss that cache eats instructions those",
    "start": "1706640",
    "end": "1712159"
  },
  {
    "text": "instructions then say oh go fetch the data now i do a physical i o over here and i get the data and then i put it in",
    "start": "1712159",
    "end": "1718320"
  },
  {
    "text": "the cache and then i can access it that's an extra code path so what you're hoping is 80 percent of the time it hits",
    "start": "1718320",
    "end": "1724559"
  },
  {
    "text": "the cash and 20 percent of the time it misses and if there's a problem",
    "start": "1724559",
    "end": "1730640"
  },
  {
    "text": "you've just got a really badly performing system and that's all the kind of stuff we learned all through the 90s into 2000",
    "start": "1730640",
    "end": "1736559"
  },
  {
    "text": "and so uh finally we got a distributed database that could handle this right what what did most of",
    "start": "1736559",
    "end": "1743279"
  },
  {
    "text": "these nosql databases do well one many many servers distributed so we",
    "start": "1743279",
    "end": "1749120"
  },
  {
    "text": "can scale up and down with the rest of the architecture but we make it look like one database so we simplify the",
    "start": "1749120",
    "end": "1755440"
  },
  {
    "text": "programming semantics gets inputs and we don't worry about this the cache is part of the database so we",
    "start": "1755440",
    "end": "1762399"
  },
  {
    "text": "can eliminate having extra cache layers now not all nosql databases do this but",
    "start": "1762399",
    "end": "1767520"
  },
  {
    "text": "many do so with the memory caching and this stuff co-located we've solved the",
    "start": "1767520",
    "end": "1772559"
  },
  {
    "text": "problem of multiple pieces of tooling it's gotten easier it's gotten more",
    "start": "1772559",
    "end": "1778480"
  },
  {
    "text": "scalable and so we're done uh except",
    "start": "1778480",
    "end": "1783600"
  },
  {
    "text": "that there is no such thing as a free lunch and you should all learn that word because it looks sort of like a danish",
    "start": "1783600",
    "end": "1789200"
  },
  {
    "text": "or a dutch word uh it looks very nordic so tan stoffel would be you know there",
    "start": "1789200",
    "end": "1794480"
  },
  {
    "text": "is no such thing as a free lunch right you get something but you will make a trade-off this is the devil's bargain of",
    "start": "1794480",
    "end": "1800480"
  },
  {
    "text": "technology you can't replace a relational database with a nosql database",
    "start": "1800480",
    "end": "1806240"
  },
  {
    "text": "unless you're focused on a particular piece of workload and so you won't see",
    "start": "1806240",
    "end": "1811840"
  },
  {
    "text": "these for a while and one of my friends at amazon made a great mistake he's a statistician he's on the analytics side",
    "start": "1811840",
    "end": "1817600"
  },
  {
    "text": "and somebody said we want to build a system in and he said i don't care what you build it and i just need this data and so they",
    "start": "1817600",
    "end": "1824720"
  },
  {
    "text": "built their system then they came back and he said okay where's my data and they showed him",
    "start": "1824720",
    "end": "1830399"
  },
  {
    "text": "where his data was and he got his data oops and he got his data but he he then said okay i understand this",
    "start": "1830399",
    "end": "1837520"
  },
  {
    "text": "now i need this data with it and they said oh um",
    "start": "1837520",
    "end": "1844000"
  },
  {
    "text": "because in it's not a logical schema you can't keep the view the same and change the underlying structures or",
    "start": "1844000",
    "end": "1849760"
  },
  {
    "text": "rewrite a query you dump the data create a new structure and put the data",
    "start": "1849760",
    "end": "1854960"
  },
  {
    "text": "back there's other ways to do it but most people don't know those patterns like lazy rewriting so they went off and they",
    "start": "1854960",
    "end": "1861679"
  },
  {
    "text": "spent three weeks and they did this and so now the application was writing data in the way that it could be consumed by",
    "start": "1861679",
    "end": "1867120"
  },
  {
    "text": "the statistician who then said oh this is interesting there's a shoulder it's a statistical anomaly in the data",
    "start": "1867120",
    "end": "1875039"
  },
  {
    "text": "i need this and this with this and then the guy said oh",
    "start": "1875440",
    "end": "1881279"
  },
  {
    "text": "and they went back and spent two weeks and got him his data and so he said you",
    "start": "1881279",
    "end": "1886559"
  },
  {
    "text": "know this isn't working we need to try a different database so that is my story uh",
    "start": "1886559",
    "end": "1894720"
  },
  {
    "text": "the problem was we scaled this part right or cassandra or or react or",
    "start": "1894720",
    "end": "1900640"
  },
  {
    "text": "you know all these wonderful databases they scale serving workloads and transaction processing online analytical",
    "start": "1900640",
    "end": "1907200"
  },
  {
    "text": "processing or query processing query does not equal transaction no sql",
    "start": "1907200",
    "end": "1913200"
  },
  {
    "text": "databases or no join databases now that means that we're ignoring all half of",
    "start": "1913200",
    "end": "1918320"
  },
  {
    "text": "the enterprise the people who need data not the people who create and serve up",
    "start": "1918320",
    "end": "1923440"
  },
  {
    "text": "data the people who think about it the finance department the marketing people so how did we scale this this is my",
    "start": "1923440",
    "end": "1929600"
  },
  {
    "text": "career living through these nightmares we started again transaction processing",
    "start": "1929600",
    "end": "1935679"
  },
  {
    "text": "against the database and we wrote reports against it every report is an application just like a nosql database",
    "start": "1935679",
    "end": "1941519"
  },
  {
    "text": "right each thing that you want to report on ends up being an application because you have to get and munch and do stuff",
    "start": "1941519",
    "end": "1946640"
  },
  {
    "text": "with data or you pull it out and put it somewhere else so we scaled by you know writing one report optimizing each one",
    "start": "1946640",
    "end": "1953600"
  },
  {
    "text": "of these things we made the database bigger right uh we need to add another core to the",
    "start": "1953600",
    "end": "1959600"
  },
  {
    "text": "mainframe when mainframes finally got multiprocessors or more water pipes because it's running too hot",
    "start": "1959600",
    "end": "1966159"
  },
  {
    "text": "so then we decided to replicate the data right you take this database and you lift it up and you drop it down over",
    "start": "1966159",
    "end": "1972320"
  },
  {
    "text": "here now you have two databases but you've isolated workloads this one takes transactions and every time a big report",
    "start": "1972320",
    "end": "1979360"
  },
  {
    "text": "starts up it doesn't slow down your transactions slowing down transactions stops the revenue of the company so that",
    "start": "1979360",
    "end": "1984799"
  },
  {
    "text": "was always a bad thing and we would get yelled at so we do this now your only thing is how",
    "start": "1984799",
    "end": "1990399"
  },
  {
    "text": "and when you move data from here to here and maintain the replica but then what you discover is of course the real",
    "start": "1990399",
    "end": "1996399"
  },
  {
    "text": "problem is not just that you had two workloads the problem",
    "start": "1996399",
    "end": "2002000"
  },
  {
    "text": "is that this database schema is his problem that he was just describing",
    "start": "2002000",
    "end": "2007919"
  },
  {
    "text": "it's a highly normalized transaction specific schema a transaction specific schema is great",
    "start": "2007919",
    "end": "2014240"
  },
  {
    "text": "for transactions it limits the amount of i o that you're doing at the expense of",
    "start": "2014240",
    "end": "2019360"
  },
  {
    "text": "causing a lot of pain when you try to pull all the data back together again the more tables the more joins the more",
    "start": "2019360",
    "end": "2025039"
  },
  {
    "text": "difficult it is and so we re-schematized data warehousing is",
    "start": "2025039",
    "end": "2030559"
  },
  {
    "text": "really just this with a different schema in order to get this you have to do something called etl extract transform",
    "start": "2030559",
    "end": "2037760"
  },
  {
    "text": "and load take this and this and meld them throw out this denormalize this piece clean this up",
    "start": "2037760",
    "end": "2044000"
  },
  {
    "text": "standardize the data it's like doing font standardization make sure that each one of these references to a person and",
    "start": "2044000",
    "end": "2050320"
  },
  {
    "text": "a place and a product are all using the same nomenclature the same value domain so that we can link the",
    "start": "2050320",
    "end": "2056638"
  },
  {
    "text": "data which is a problem in the hadoop world as well you have to do this to make the data accessible and usable and",
    "start": "2056639",
    "end": "2063200"
  },
  {
    "text": "then we replaced hand-written applications to generate reports with query tools because this is a sql",
    "start": "2063200",
    "end": "2070000"
  },
  {
    "text": "database this thing can generate a query based on what you're asking so we can introduce a metadata layer that",
    "start": "2070000",
    "end": "2076320"
  },
  {
    "text": "separates it that says i want this this and this a piece of code in here says well that",
    "start": "2076320",
    "end": "2081358"
  },
  {
    "text": "means i have to go to that table that table in that table and it generates a query and the beauty of the relational",
    "start": "2081359",
    "end": "2087200"
  },
  {
    "text": "database is it takes the query and it says i could get it this way or i could get it that way and it tries to guess which",
    "start": "2087200",
    "end": "2093280"
  },
  {
    "text": "way will be faster and in things like oracle and sql server and db2 it always guess is wrong and so you you buy more",
    "start": "2093280",
    "end": "2099599"
  },
  {
    "text": "hardware and that's exactly what we did i spent years doing this kind of work we started to do caching does anybody",
    "start": "2099599",
    "end": "2106720"
  },
  {
    "text": "know what olap is actual multi-dimensional olap yeah a few of you this is good sql server analysis services is olap",
    "start": "2106720",
    "end": "2115200"
  },
  {
    "text": "essentially you're taking data and you are creating a model where all",
    "start": "2115200",
    "end": "2121280"
  },
  {
    "text": "of the attributes link to metrics on the outside and it's kind of you you can implement it as a hypercube or a bunch",
    "start": "2121280",
    "end": "2126640"
  },
  {
    "text": "of different models but essentially you're creating a highly optimized retrieval system much like a nosql store",
    "start": "2126640",
    "end": "2134000"
  },
  {
    "text": "that allows you to get very quickly any pre-calculated aggregate that's out there but you pay the price by having to",
    "start": "2134000",
    "end": "2140160"
  },
  {
    "text": "build that cash and it's inflexible because it's smaller than that and so if this wants something",
    "start": "2140160",
    "end": "2146480"
  },
  {
    "text": "that's not in the cache in an olap scheme a good look in a sql based query",
    "start": "2146480",
    "end": "2151680"
  },
  {
    "text": "schema you can get it but of course this is way faster than that just like with transaction",
    "start": "2151680",
    "end": "2157359"
  },
  {
    "text": "processing and so these things began to take chunks of data and cache and isolate and that's",
    "start": "2157359",
    "end": "2163440"
  },
  {
    "text": "kind of where we got to and then starting it started in 1986 but uh",
    "start": "2163440",
    "end": "2168720"
  },
  {
    "text": "that was when the first one terabyte query system was shipped we created distributed sql systems and",
    "start": "2168720",
    "end": "2174320"
  },
  {
    "text": "these took off about 2002 that's when a lot of venture capital went into new models of parallel",
    "start": "2174320",
    "end": "2180720"
  },
  {
    "text": "databases teradata is the only well teradata and cybase iq are the only two that really have lasted since that",
    "start": "2180720",
    "end": "2186720"
  },
  {
    "text": "period except for a british company that used to be called white cross it's now called cognitio and they are distributed scale out",
    "start": "2186720",
    "end": "2193599"
  },
  {
    "text": "databases multi-node fully relational uh in pretty much every instance acid",
    "start": "2193599",
    "end": "2199200"
  },
  {
    "text": "compliant you bulk load all of your data in here and then",
    "start": "2199200",
    "end": "2204880"
  },
  {
    "text": "same model on the other side but now you have the ability to not buy a bigger box you just add more nodes as you need more",
    "start": "2204880",
    "end": "2211040"
  },
  {
    "text": "resources your data grows and so we now have distributed query databases which are different from",
    "start": "2211040",
    "end": "2217760"
  },
  {
    "text": "distributed transaction databases like a nosql database because they're optimized for this one",
    "start": "2217760",
    "end": "2223520"
  },
  {
    "text": "optimizes get in when optimizers get out two workloads similar architectures load balanced",
    "start": "2223520",
    "end": "2229280"
  },
  {
    "text": "front ends distributed caching layers and scalable distributed parallel databases it's just that this one's",
    "start": "2229280",
    "end": "2235280"
  },
  {
    "text": "relational the nosql one is not these two things are hard to do on one",
    "start": "2235280",
    "end": "2240880"
  },
  {
    "text": "so the posit that nosql means i'm going to throw out oracle",
    "start": "2240880",
    "end": "2246400"
  },
  {
    "text": "only means i'm going to throw out oracle behind my website it doesn't mean i'm going to throw out oracle for my query",
    "start": "2246400",
    "end": "2252880"
  },
  {
    "text": "schema because the workloads are different you can't do that corey workload in hive you",
    "start": "2252880",
    "end": "2258400"
  },
  {
    "text": "can't do it in oracle you can't do it well actually it's true you can't do it in oracle but that's probably because",
    "start": "2258400",
    "end": "2264079"
  },
  {
    "text": "you're using an emc san my goal here is to insult as many people as possible so i hope i'm i'm getting",
    "start": "2264079",
    "end": "2269760"
  },
  {
    "text": "there which means we need to look at the stores right and the hype market big data is",
    "start": "2269760",
    "end": "2275680"
  },
  {
    "text": "unprecedented and i've been mucking around with data that was big and small for a long time and you know one of the",
    "start": "2275680",
    "end": "2282079"
  },
  {
    "text": "things is when you say that you're assuming that there was no past in our industry we tend to throw all the",
    "start": "2282079",
    "end": "2287839"
  },
  {
    "text": "manuals out every five years or so because something new has come along and we don't have any history and there's a",
    "start": "2287839",
    "end": "2292960"
  },
  {
    "text": "difference between not having a past and having to invent something and just rejecting that past in favor of",
    "start": "2292960",
    "end": "2300160"
  },
  {
    "text": "something else you know one is a form of creation and invention and one is a form of being a teenager and so reinventing",
    "start": "2300160",
    "end": "2306800"
  },
  {
    "text": "the wheel is something we in the software business do really well and i've done it for a long long time and",
    "start": "2306800",
    "end": "2312160"
  },
  {
    "text": "this is a you know this is the history of databases from the 1960s multi-value",
    "start": "2312160",
    "end": "2317280"
  },
  {
    "text": "databases nesting structures right so customer order order order stored in one",
    "start": "2317280",
    "end": "2322480"
  },
  {
    "text": "record read once ims was at its time the fastest transaction processing database on the planet",
    "start": "2322480",
    "end": "2328800"
  },
  {
    "text": "um because it was multi-valued and hierarchical just like almost all of",
    "start": "2328800",
    "end": "2334000"
  },
  {
    "text": "these nosql stores were talking about and you know then we got relational and system r qwell and sql there was a",
    "start": "2334000",
    "end": "2340079"
  },
  {
    "text": "little bit of a tiff between these two guys so ibm renamed it sql got rid of the ease and the u",
    "start": "2340079",
    "end": "2345760"
  },
  {
    "text": "because none of this is about you it's all about the economy and we get db2 and all of these things and it goes on and",
    "start": "2345760",
    "end": "2352160"
  },
  {
    "text": "on and on and of course we go back and forth right multi-value hierarchical relational relational sql gets",
    "start": "2352160",
    "end": "2357920"
  },
  {
    "text": "standardized truly wasn't standardized until 1986 we get object orientation",
    "start": "2357920",
    "end": "2363520"
  },
  {
    "text": "network databases things like that none of this stuff actually ever worked and so uh we threw that back out and kept",
    "start": "2363520",
    "end": "2370400"
  },
  {
    "text": "buying oracle and formix died db2 sql server and then we end up with this stuff",
    "start": "2370400",
    "end": "2376079"
  },
  {
    "text": "starting in the early 2000s which is which is interesting we've got the parallel sql databases and the parallel",
    "start": "2376079",
    "end": "2382400"
  },
  {
    "text": "nosql databases and then what's happening now is a different workload",
    "start": "2382400",
    "end": "2387920"
  },
  {
    "text": "computational analytic workloads driving things like this which are array processing and linear algebra which is",
    "start": "2387920",
    "end": "2395760"
  },
  {
    "text": "not the same as relational processing and counting in sets which is not the same as dealing with each's and rows in",
    "start": "2395760",
    "end": "2402000"
  },
  {
    "text": "a nosql database so the essential history can be boiled down as in 1970 we have no sql in 1980 you should all know",
    "start": "2402000",
    "end": "2409599"
  },
  {
    "text": "sql by 2000 we don't want sql by 2005 every",
    "start": "2409599",
    "end": "2414640"
  },
  {
    "text": "single nosql database says oh people want to join data we need a sql like",
    "start": "2414640",
    "end": "2420160"
  },
  {
    "text": "query language and so everybody starts adding sql back in which is what things like impala and hadoop are about and",
    "start": "2420160",
    "end": "2427200"
  },
  {
    "text": "now we're back to 2013 where google has told us no you need sql",
    "start": "2427200",
    "end": "2432960"
  },
  {
    "text": "and so uh you know relational has a lot of great stuff going for it but it's got some really sucky things as",
    "start": "2432960",
    "end": "2439359"
  },
  {
    "text": "a developer like static schemas no rich typing only a few data primitives everything has to be designed upfront",
    "start": "2439359",
    "end": "2446320"
  },
  {
    "text": "and in advance it's sort of the anti-pattern for both deployment and development of agile",
    "start": "2446320",
    "end": "2453280"
  },
  {
    "text": "and it doesn't do well for a number of things including developer support and so what didn't i list here i didn't list",
    "start": "2453280",
    "end": "2460480"
  },
  {
    "text": "performance and scalability because bigness is not the problem this is a chart from a few years ago a",
    "start": "2460480",
    "end": "2466079"
  },
  {
    "text": "friend of mine put together these are the publicly announced now i know of bigger ones but publicly",
    "start": "2466079",
    "end": "2471359"
  },
  {
    "text": "announced databases this curve is traditional database market db2 sql server that sort of thing you can see",
    "start": "2471359",
    "end": "2477200"
  },
  {
    "text": "that it's actually hanging in pretty well around 100 to 200 terabytes yes these things do actually run at that",
    "start": "2477200",
    "end": "2482480"
  },
  {
    "text": "scale but between here and here you're talking about the petabyte range the largest data warehouses using uh",
    "start": "2482480",
    "end": "2490720"
  },
  {
    "text": "mpp databases distributed query databases like netease or a teradata or a vertica and then up here we've got of",
    "start": "2490720",
    "end": "2497040"
  },
  {
    "text": "course the the hadoop kinds of things and most people will fall very comfortably",
    "start": "2497040",
    "end": "2503359"
  },
  {
    "text": "in this range and if you're doing query processing you're kind of crazy to still be using these things",
    "start": "2503359",
    "end": "2509119"
  },
  {
    "text": "because this is the performance bump the scalability bump which is from hundreds of terabytes to multiple petabytes",
    "start": "2509119",
    "end": "2517359"
  },
  {
    "text": "i'm not going to talk about how you emulate a key value store but i'm including it in the materials because it's interesting because people always",
    "start": "2517359",
    "end": "2523440"
  },
  {
    "text": "tell me oh well we just have this one big thing and it's log structured records well guess what you have to query log structured records and it's",
    "start": "2523440",
    "end": "2530160"
  },
  {
    "text": "hard to do fast case in point ebay a friend of mine at ebay",
    "start": "2530160",
    "end": "2536480"
  },
  {
    "text": "gave me the slides that he was using at a talk and it's talking about this particular system which records log structure data from 6 000 different",
    "start": "2536480",
    "end": "2543040"
  },
  {
    "text": "applications it is this guy right here 40 petabytes",
    "start": "2543040",
    "end": "2548880"
  },
  {
    "text": "40 petabytes in a relational database when you query this thing like these are",
    "start": "2548880",
    "end": "2554160"
  },
  {
    "text": "the query techniques i'm not going to talk about but when you query this thing you're talking trillions of rows",
    "start": "2554160",
    "end": "2560480"
  },
  {
    "text": "your filter set is 40 to 50 billion rows and the response time out of this for",
    "start": "2560480",
    "end": "2567760"
  },
  {
    "text": "the 150 plus concurrent users hitting it is approximately 30 seconds on a query like that",
    "start": "2567760",
    "end": "2573599"
  },
  {
    "text": "so to say that relational databases don't scale means that you have a serious scale problem or you're doing something",
    "start": "2573599",
    "end": "2579920"
  },
  {
    "text": "wrong this is how you do it hadoop is not the answer because hadoop",
    "start": "2579920",
    "end": "2585200"
  },
  {
    "text": "is in fact highly inefficient what hadoop gives you is a very inexpensive",
    "start": "2585200",
    "end": "2590240"
  },
  {
    "text": "and very faster write to storage layer from which you can feed other things or on which you can operate directly but",
    "start": "2590240",
    "end": "2597200"
  },
  {
    "text": "you don't build interactive query systems on it hive and impala not going to be there for a long long time",
    "start": "2597200",
    "end": "2603359"
  },
  {
    "text": "and so what you're getting is both order of magnitude improvements",
    "start": "2603359",
    "end": "2608560"
  },
  {
    "text": "multi-order rate this is what most people buy here's emc and then here's just buying some disks and shoving them into nodes or getting virtual machines",
    "start": "2608560",
    "end": "2616400"
  },
  {
    "text": "most people do not live at this end of the curve microsoft there's a paper in the references studied 174 000 analytic",
    "start": "2616400",
    "end": "2624000"
  },
  {
    "text": "jobs how big was their data does anybody know the answer to this or want to guess",
    "start": "2624000",
    "end": "2629760"
  },
  {
    "text": "shout out some numbers anybody how big was the median size of analytics",
    "start": "2629760",
    "end": "2636400"
  },
  {
    "text": "oh come on 300 gigabytes anybody else more or less who thinks more",
    "start": "2636560",
    "end": "2642960"
  },
  {
    "text": "less well less wins 14. right i got a petabyte of data and 14",
    "start": "2642960",
    "end": "2649839"
  },
  {
    "text": "gigabytes is my analytic result set right so the problem is probably not what we think it is it's not bigness",
    "start": "2649839",
    "end": "2655920"
  },
  {
    "text": "bigness is only a problem down at that storage and filter layer but once i start working with it it's nested",
    "start": "2655920",
    "end": "2661599"
  },
  {
    "text": "structures and hierarchies and large amounts and non-standard stuff it's deep structure that's probably the single",
    "start": "2661599",
    "end": "2668240"
  },
  {
    "text": "biggest thing complex and hard to manage this is a piece of of a core metrics tracker i",
    "start": "2668240",
    "end": "2674400"
  },
  {
    "text": "work a lot with this kind of stuff and yeah there's embedded structure in here so it doesn't fit nicely in a relational",
    "start": "2674400",
    "end": "2680000"
  },
  {
    "text": "schema because you have to unpack this stuff and you end up with these normalization problems",
    "start": "2680000",
    "end": "2685200"
  },
  {
    "text": "everything on this page refers to exactly the same thing which is aspirin",
    "start": "2685200",
    "end": "2690480"
  },
  {
    "text": "i have a headache well take this or that or that or that or that these are systematic nomenclatures there's",
    "start": "2690480",
    "end": "2696640"
  },
  {
    "text": "structure in there which you can use to identify and extract things when we talk about unstructured we really mean",
    "start": "2696640",
    "end": "2703280"
  },
  {
    "text": "unmodeled because we haven't constructed the model to hold that thing in a consistent and",
    "start": "2703280",
    "end": "2708960"
  },
  {
    "text": "repeatable and extractable way and this is just a document",
    "start": "2708960",
    "end": "2714800"
  },
  {
    "text": "this is all of the word linkages in a document corpus now one of the things when you get all",
    "start": "2714800",
    "end": "2720720"
  },
  {
    "text": "of that event structure data or all of that data that you've extracted into one big long deep table",
    "start": "2720720",
    "end": "2725760"
  },
  {
    "text": "is that there's deep structure inside the data set it's not this piece of a",
    "start": "2725760",
    "end": "2730800"
  },
  {
    "text": "record with its structure it's a hundred million of these records that define a pattern and so what you do with analysis",
    "start": "2730800",
    "end": "2738000"
  },
  {
    "text": "is essentially extract patterns which themselves are data and then have to store them back or you rerun the",
    "start": "2738000",
    "end": "2743599"
  },
  {
    "text": "analysis again and so you're generating sets of data out of sets of data",
    "start": "2743599",
    "end": "2750240"
  },
  {
    "text": "and that gets us to computational workloads because we forgot about this part which is different from this which is different from this queries",
    "start": "2750240",
    "end": "2756480"
  },
  {
    "text": "transactions computations are all different and the holy grail that",
    "start": "2756480",
    "end": "2761760"
  },
  {
    "text": "everybody thought hadoop was going to be was data storage data retrieval and computation on one",
    "start": "2761760",
    "end": "2769920"
  },
  {
    "text": "magic platform and that is one magic platform because it doesn't exist today it is the holy grail and everybody's",
    "start": "2769920",
    "end": "2776800"
  },
  {
    "text": "trying to get there by doing different things database vendors on one hand big data guys on another hand",
    "start": "2776800",
    "end": "2782800"
  },
  {
    "text": "but you really have to break the problem down are you talking about a lot of data or a little data are you talking about a",
    "start": "2782800",
    "end": "2788160"
  },
  {
    "text": "lot of iterations and floating point calculations or a lot of vector math or a little bit if you have a little bit of",
    "start": "2788160",
    "end": "2794480"
  },
  {
    "text": "data you have a lot of options over on that left side if you have a lot of data you're kind of over here so it's",
    "start": "2794480",
    "end": "2800560"
  },
  {
    "text": "analytics and data there's big and little analytics and big and little data and no technical solution will solve",
    "start": "2800560",
    "end": "2807280"
  },
  {
    "text": "them all databases have solved the volume problem for query and aggregation in fact ebay",
    "start": "2807280",
    "end": "2813680"
  },
  {
    "text": "proved that a teradata box was cheaper than the hadoop cluster to do sorting filtering and aggregations and so they",
    "start": "2813680",
    "end": "2820319"
  },
  {
    "text": "shift their workloads now to favor that box for that stuff and the hadoop cluster for different things",
    "start": "2820319",
    "end": "2825839"
  },
  {
    "text": "so by the way block synchronous processing is the thing that mapreduce can't do because mapreduce turns out to really",
    "start": "2825839",
    "end": "2832240"
  },
  {
    "text": "suck for graph structured data and so if you're using graph structure data you kind of want to look at bsp and cgm and",
    "start": "2832240",
    "end": "2838640"
  },
  {
    "text": "things like that but high computation low data concurrency right lots of users what",
    "start": "2838640",
    "end": "2844800"
  },
  {
    "text": "else web app people deal with most products could do one really well",
    "start": "2844800",
    "end": "2850160"
  },
  {
    "text": "and maybe two nobody does all three not at scale and so what we have then is you know",
    "start": "2850160",
    "end": "2856319"
  },
  {
    "text": "nosql has taken the relational and the management system out and given us a database hadoop has taken the online",
    "start": "2856319",
    "end": "2862079"
  },
  {
    "text": "part out because everything is batch hadoop and pig is like mainframe and job",
    "start": "2862079",
    "end": "2867520"
  },
  {
    "text": "control language if you're old enough to remember what that was if not that's what the internet's for so",
    "start": "2867520",
    "end": "2872560"
  },
  {
    "text": "you know maybe these aren't the databases that we're looking for and the reason is because of all of the stuff",
    "start": "2872560",
    "end": "2877839"
  },
  {
    "text": "that the database does for you standard api query layers transaction consistency",
    "start": "2877839",
    "end": "2882960"
  },
  {
    "text": "this thing right here is the single biggest thing it gives you a query optimizer a three table join",
    "start": "2882960",
    "end": "2890000"
  },
  {
    "text": "means six different ways that you could actually order the join each one of which is going to give you a different",
    "start": "2890000",
    "end": "2896000"
  },
  {
    "text": "performance but you can join data by merging it by using a hash structure by doing a nested lookup where you iterate",
    "start": "2896000",
    "end": "2902640"
  },
  {
    "text": "one set and probe the other set so let's say you've got three of those well now it's 36 different ways",
    "start": "2902640",
    "end": "2909200"
  },
  {
    "text": "and each one of those has a different performance characteristic based on the distribution of the data as it's been stored",
    "start": "2909200",
    "end": "2915200"
  },
  {
    "text": "that's what a query optimizer does a complex query that does aggregations and group buys and things like that can have",
    "start": "2915200",
    "end": "2921119"
  },
  {
    "text": "millions of possible things and what we've said is oh mr developer you",
    "start": "2921119",
    "end": "2926480"
  },
  {
    "text": "go figure that out because that falls in your domain data navigation domains you",
    "start": "2926480",
    "end": "2932079"
  },
  {
    "text": "know all of this stuff falls into your domain here and we're going to give you access and storage right it's not what",
    "start": "2932079",
    "end": "2937359"
  },
  {
    "text": "it's designed for and that's what a relational database is designed for you so you have to think about this but also",
    "start": "2937359",
    "end": "2942400"
  },
  {
    "text": "transaction consistency plays a big factor now query optimization as i've said is very complex if you fail at it",
    "start": "2942400",
    "end": "2948960"
  },
  {
    "text": "you become a rocket scientist um i used to work at nasa and i tried to work on database kernels",
    "start": "2948960",
    "end": "2955040"
  },
  {
    "text": "so i'm the proof point in that world this is you it sucks i've",
    "start": "2955040",
    "end": "2960160"
  },
  {
    "text": "been there most people don't realize that there's more than one kind of join right there are many kinds of joins and so",
    "start": "2960160",
    "end": "2968319"
  },
  {
    "text": "take that 36 and multiply it by the types of joins that you have possible and that's every option for one query so",
    "start": "2968319",
    "end": "2974480"
  },
  {
    "text": "every program being a queries turns into a problem the real important point here is simply",
    "start": "2974480",
    "end": "2979760"
  },
  {
    "text": "that workloads are what define the platform operational analytic and",
    "start": "2979760",
    "end": "2985200"
  },
  {
    "text": "scientific have different performance requirements different resource requirements and it's very hard to blend",
    "start": "2985200",
    "end": "2990240"
  },
  {
    "text": "them one focuses on this one focuses on aggregate queries and one focuses on mathy stuff",
    "start": "2990240",
    "end": "2996559"
  },
  {
    "text": "so you want a platform that can support all of these things and that means probably multiple tiers right",
    "start": "2996559",
    "end": "3002319"
  },
  {
    "text": "this is why hadoop is so interesting big base data tier can deal with a lot of these things and",
    "start": "3002319",
    "end": "3008800"
  },
  {
    "text": "then you start separating stuff out and so you end up with raw data standardized data and then the enhanced",
    "start": "3008800",
    "end": "3015200"
  },
  {
    "text": "cleaned up data warehousing kind of data that's been just the high value data and my more expensive systems and then",
    "start": "3015200",
    "end": "3020240"
  },
  {
    "text": "finally my derived analytic output so you have a food supply chain kind of a thing going on where some people need",
    "start": "3020240",
    "end": "3026960"
  },
  {
    "text": "the raw grain some people make dough some people just want to eat donuts those are your executives by the way",
    "start": "3026960",
    "end": "3034079"
  },
  {
    "text": "and so what you really have to ask is this question what is the problem for which this",
    "start": "3034079",
    "end": "3040000"
  },
  {
    "text": "particular thing is the answer and the answer is always it depends there's nuance here and so you have to think",
    "start": "3040000",
    "end": "3046559"
  },
  {
    "text": "like a designer now the final point so google came along the nosql fanboys are a little bit",
    "start": "3046559",
    "end": "3053119"
  },
  {
    "text": "aghast at this because they said uh f1 is the answer what's f1 well we went",
    "start": "3053119",
    "end": "3059680"
  },
  {
    "text": "from mapreduce which was in 2004 to megastore and dremel and spanner and f1",
    "start": "3059680",
    "end": "3068880"
  },
  {
    "text": "right so there have been four evolutions and a few asides it's a distributed sql database they",
    "start": "3068880",
    "end": "3075520"
  },
  {
    "text": "said it couldn't be done it's a distributed sql transaction database it does globe spanning multi-data center",
    "start": "3075520",
    "end": "3084480"
  },
  {
    "text": "single database instance with acid compliant semantics which means full transaction control",
    "start": "3084480",
    "end": "3090640"
  },
  {
    "text": "it's a sql database because they said guess what it's actually kind of hard to do this stuff it's synchronous replication and",
    "start": "3090640",
    "end": "3097680"
  },
  {
    "text": "transparent data distribution which eases your operational problems which you have with starting and replication",
    "start": "3097680",
    "end": "3104559"
  },
  {
    "text": "protobufs if you know what they are you can store a protobuf as a data type in a column and you can actually query",
    "start": "3104880",
    "end": "3111359"
  },
  {
    "text": "protobufs just like you query tables we've blended structures which includes nesting structures with",
    "start": "3111359",
    "end": "3118240"
  },
  {
    "text": "relational tables in the same thing with some schema schema and sql extensions to",
    "start": "3118240",
    "end": "3124000"
  },
  {
    "text": "query them from a sql statement which has been modified which means it can be optimized",
    "start": "3124000",
    "end": "3130559"
  },
  {
    "text": "by smart optimizer people which means you don't have to figure that stuff out which means i can now do big ugly",
    "start": "3130559",
    "end": "3136839"
  },
  {
    "text": "queries and i can do transactions in the same system this is one evolution and",
    "start": "3136839",
    "end": "3143680"
  },
  {
    "text": "it's a very interesting one and the other thing is you can still keep doing your mapreduce stuff and so",
    "start": "3143680",
    "end": "3149359"
  },
  {
    "text": "this is the user-facing latency of asset-based transactions it's about 200 mega 200 millisecond round-trip right so",
    "start": "3149359",
    "end": "3156319"
  },
  {
    "text": "it's not much different than what you get out of your nosql databases when you add in all the code you have to",
    "start": "3156319",
    "end": "3161680"
  },
  {
    "text": "go through to do the transaction bits this is what they said in the f1 paper uh just two quotes right concurrency in",
    "start": "3161680",
    "end": "3169280"
  },
  {
    "text": "the application as opposed to in the database very hard lots of edge cases eighty percent is easy twenty percent is",
    "start": "3169280",
    "end": "3176000"
  },
  {
    "text": "hard the twenty percent is what most of the these key value store kinds of things make us deal with",
    "start": "3176000",
    "end": "3182079"
  },
  {
    "text": "and the second part is this which is that you have impedance problems and mismatches and other things getting data",
    "start": "3182079",
    "end": "3187920"
  },
  {
    "text": "to and from protobufs and other stuff so we've got to fix the relational side and we've got to fix the nosql site and",
    "start": "3187920",
    "end": "3194240"
  },
  {
    "text": "that's what they've attempted to do and so you know why nosql will fail has",
    "start": "3194240",
    "end": "3199760"
  },
  {
    "text": "very little to do with uh actually failing because it's not really failing it's evolving it's merging back into the",
    "start": "3199760",
    "end": "3206400"
  },
  {
    "text": "code lines of the other databases and we're going to end up with something new that's part one and part the other and",
    "start": "3206400",
    "end": "3212240"
  },
  {
    "text": "the reason the relational database won the commercial market war is because sql was a standard once you",
    "start": "3212240",
    "end": "3220000"
  },
  {
    "text": "have a standard api to a system everybody can implement a different engine to execute to that standard we",
    "start": "3220000",
    "end": "3226480"
  },
  {
    "text": "can have a teradata that does queries we can have a db2 that does transactions",
    "start": "3226480",
    "end": "3231839"
  },
  {
    "text": "we can have a whole host of things in an ecosystem and then we can build up tools",
    "start": "3231839",
    "end": "3236880"
  },
  {
    "text": "around it query tools data integration tools and other things because they all talk to that same api",
    "start": "3236880",
    "end": "3243520"
  },
  {
    "text": "sql is not really a language sql is an api it's a programmable api and that",
    "start": "3243520",
    "end": "3248880"
  },
  {
    "text": "makes it different it's a declarative programmable api so what we have is that it's not really",
    "start": "3248880",
    "end": "3254240"
  },
  {
    "text": "a revolution it's more of an evolution and evolutions are really all about parties and so",
    "start": "3254240",
    "end": "3260480"
  },
  {
    "text": "the bottom line here is if you go and read these google papers it also tells you that if you procrastinate long",
    "start": "3260480",
    "end": "3265599"
  },
  {
    "text": "enough most problems will solve themselves because somebody will build a product that you can buy",
    "start": "3265599",
    "end": "3271200"
  },
  {
    "text": "and that goes along with the other thing which is that the future will be exactly like the past only far more expensive",
    "start": "3271200",
    "end": "3278800"
  },
  {
    "text": "so thanks for staying with me uh the references will be included in the pdf",
    "start": "3278800",
    "end": "3283920"
  },
  {
    "text": "here so you can link to all of the papers that i'm talking about that get into the gory fun part which is all the technical details",
    "start": "3283920",
    "end": "3290480"
  },
  {
    "text": "and there's a whole lot of cc attribution so those are there too and by law i'm required to do this or",
    "start": "3290480",
    "end": "3295760"
  },
  {
    "text": "they'll throw me down so thank you",
    "start": "3295760",
    "end": "3300040"
  },
  {
    "text": "you",
    "start": "3307920",
    "end": "3310000"
  }
]