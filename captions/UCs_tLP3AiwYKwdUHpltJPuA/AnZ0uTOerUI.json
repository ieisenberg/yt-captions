[
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "now I can talk okay so as I was saying was kind of interesting to follow Dave Thomas as he speaks about legacy code",
    "start": "13160",
    "end": "19500"
  },
  {
    "text": "because that's the hint thing ie deal in the industry but this is a different thing okay and it's um it's kind of",
    "start": "19500",
    "end": "26820"
  },
  {
    "text": "interesting that there are a lot of things that we just don't really question very much in software development and I think we're starting",
    "start": "26820",
    "end": "33059"
  },
  {
    "text": "to go in question some of them a bit more for interest prints uh for instance at this conference there were two",
    "start": "33059",
    "end": "39510"
  },
  {
    "text": "sessions on error handling okay that were nice to see because I felt like error hailing you spend one of",
    "start": "39510",
    "end": "44550"
  },
  {
    "text": "those topics that you know we kind of know about we kind of do it but we don't really sit down and think about it",
    "start": "44550",
    "end": "50130"
  },
  {
    "text": "systematically and so a lot of this material just kind of started with that frame of like you know what can we do",
    "start": "50130",
    "end": "55680"
  },
  {
    "text": "about error handling right and I kind of carry on things into like how do we start to like remove conditionality and",
    "start": "55680",
    "end": "61829"
  },
  {
    "text": "code and things along those lines so that's where this title is about unconditional code the thing is what I",
    "start": "61829",
    "end": "69420"
  },
  {
    "text": "want to do is start to question a couple of things okay what can go wrong with this piece of code here not even tell",
    "start": "69420",
    "end": "75630"
  },
  {
    "text": "you what language it's in can anything go wrong with us yeah lots of things right oh yeah yeah it's like you know if",
    "start": "75630",
    "end": "82499"
  },
  {
    "text": "I start listing all the different things so we got the earth arithmetic overflow we can have all sorts of crazy things happening but in general you know when",
    "start": "82499",
    "end": "88259"
  },
  {
    "text": "we write an expression like this we have some kind of intention that's like we want this particular thing to work and",
    "start": "88259",
    "end": "94469"
  },
  {
    "text": "if we're unlucky something bad happens we throw an exception and we seg fault we do something crazy and we have to go",
    "start": "94469",
    "end": "99929"
  },
  {
    "text": "and deal with the possibility of all these errors right so yeah it's kind of",
    "start": "99929",
    "end": "105149"
  },
  {
    "text": "interesting that you know as I mentioned some people talked about error handling across this conference and you know",
    "start": "105149",
    "end": "111389"
  },
  {
    "text": "particularly Joe Armstrong yesterday what's going and talking about you know if you're on a single machine you're in trouble because if anything goes wrong",
    "start": "111389",
    "end": "116939"
  },
  {
    "text": "you're in trouble right you don't really have much redundancy and essentially he tries to go and get this model of going and having you know many processes and",
    "start": "116939",
    "end": "123810"
  },
  {
    "text": "so that when some go down others can come up and then you have a great degree of robustness in your system well let's",
    "start": "123810",
    "end": "129690"
  },
  {
    "text": "go and dig deeper into this the thing that I really object to is logging actually no I don't reject a log but the",
    "start": "129690",
    "end": "136769"
  },
  {
    "text": "thing is I felt for a long time in my career that I just don't really like least the way it's been traditionally",
    "start": "136769",
    "end": "142140"
  },
  {
    "text": "done within the industry right and the thing that makes that kind of oddest because you can't make like a good",
    "start": "142140",
    "end": "148920"
  },
  {
    "text": "khajit case against logging because it's one of the things everybody feels is necessary and you know going you're looking through things post-mortem and",
    "start": "148920",
    "end": "155040"
  },
  {
    "text": "understand what's going on is really a very valuable thing to do but it's funny because it makes the code look ugly",
    "start": "155040",
    "end": "160980"
  },
  {
    "text": "doesn't it tell like scattered log statements all the way through it it's like you know if we had this idea about",
    "start": "160980",
    "end": "166230"
  },
  {
    "text": "single responsibilities you know it's kind of like well what's responsibility this piece of code o to do this this this and then also log what's going on",
    "start": "166230",
    "end": "172620"
  },
  {
    "text": "with it and that kind of mixing of responsibilities can kind of be kind of awkward and it's interesting about this",
    "start": "172620",
    "end": "179400"
  },
  {
    "text": "because I feel the same way pretty much about air handling right it's kind of like it breaks the mainline flow of the",
    "start": "179400",
    "end": "185460"
  },
  {
    "text": "application and because of that it tends to obscure whatever logic we're going in trying to get across but you will see",
    "start": "185460",
    "end": "191790"
  },
  {
    "text": "error handling codes scatter to have most applications and I think it's really through a lack of understanding",
    "start": "191790",
    "end": "197100"
  },
  {
    "text": "and a lack of discipline we end up going and doing this sort of thing so I went ago and kind of raised this question",
    "start": "197100",
    "end": "202920"
  },
  {
    "text": "what if noticeable error handling is a symptom of bad design what can we do about this and we're gonna go through a",
    "start": "202920",
    "end": "208260"
  },
  {
    "text": "series of things to kind of like explore that idea okay and it's not just the",
    "start": "208260",
    "end": "213390"
  },
  {
    "text": "level of code right it's kind of like there are all sorts of things that you know I think errors in general are",
    "start": "213390",
    "end": "218880"
  },
  {
    "text": "something we wrote you ought to go in question you know here's like reviewing your order for Amazon and here's a problem which occurred when you're going",
    "start": "218880",
    "end": "224520"
  },
  {
    "text": "in trying to go and pay right it's like at this point the software has failed the user right so we basically have to",
    "start": "224520",
    "end": "231690"
  },
  {
    "text": "go back and we're going to tell the user about this particular problem and go on and carry on and we don't want these particular things to happen right and it",
    "start": "231690",
    "end": "238980"
  },
  {
    "text": "seems with a bit more effort we can actually go and move towards this space where generally speaking our code does run unconditionally just goes and does",
    "start": "238980",
    "end": "245220"
  },
  {
    "text": "what it's supposed to do if it can't do a particular thing that we want it to do I can do something else good for us and",
    "start": "245220",
    "end": "251430"
  },
  {
    "text": "something else that we can notify the user about and say hey we've done this for you because you know it's like we know your intention is and we want to go",
    "start": "251430",
    "end": "257760"
  },
  {
    "text": "and work with your intention so yeah coach should just run unconditionally so let's go and actually dig down into code",
    "start": "257760",
    "end": "263760"
  },
  {
    "text": "a bit okay so this little piece of Java code it's kind of like symptomatic of a",
    "start": "263760",
    "end": "269040"
  },
  {
    "text": "lot of things that can go wrong in in you know traditional software development we have this thing particularly that's",
    "start": "269040",
    "end": "275860"
  },
  {
    "text": "gonna go and actually go and get a barcode and use it to hunt for an item through some collection okay and what do",
    "start": "275860",
    "end": "282820"
  },
  {
    "text": "we do we return null okay it's no a good idea yeah I mean we're really over it now we kind of feel that no is really a",
    "start": "282820",
    "end": "289389"
  },
  {
    "text": "bad idea you know Tony Hoare basically mentioned years ago that was it was his billion dollar mistake that I'm",
    "start": "289389",
    "end": "294820"
  },
  {
    "text": "introducing this in two languages early on but we kind of know what we can do these days we can start using like",
    "start": "294820",
    "end": "300220"
  },
  {
    "text": "option monads and all these other things something we just don't even have know at all right but yes this is kind of",
    "start": "300220",
    "end": "306580"
  },
  {
    "text": "like symptomatic of things that can go wrong inside of a programming environment you're trying to go and get something and you try to get it and you",
    "start": "306580",
    "end": "313450"
  },
  {
    "text": "just can't get it so what do you do in situations like this okay well one thing you can do it to get",
    "start": "313450",
    "end": "319150"
  },
  {
    "text": "throw exceptions right yeah exceptions good idea a bad idea yeah you know and",
    "start": "319150",
    "end": "325330"
  },
  {
    "text": "we again in the industry kind of moving away from this particular thing if you look at you know like goes air handling",
    "start": "325330",
    "end": "330430"
  },
  {
    "text": "for instance you know it's kind of like it's we have panics but we don't have exceptions right we have this thing",
    "start": "330430",
    "end": "335860"
  },
  {
    "text": "where we're going to kind of like you know you return things back and then you have to inspect the return values to see what happened and do something about it",
    "start": "335860",
    "end": "341580"
  },
  {
    "text": "unfortunately I work on to the programmer in order to go and say look we're not gonna let you hide things and that can be a problem with exceptions",
    "start": "341580",
    "end": "348160"
  },
  {
    "text": "sometimes Bertrand Meyer years ago gave",
    "start": "348160",
    "end": "353200"
  },
  {
    "text": "his advice that I went to use exceptions and programming and he basically said that you should use exceptions when you",
    "start": "353200",
    "end": "358510"
  },
  {
    "text": "can't know in advance whether it call will succeed or fail and that's an interesting thing to think about when does that ever happen in programming",
    "start": "358510",
    "end": "365140"
  },
  {
    "text": "when you can't know in advance whether calls can succeed or fail",
    "start": "365140",
    "end": "370080"
  },
  {
    "text": "sorry yeah we sub parameter so you don't have much control over ya there's things",
    "start": "372110",
    "end": "378830"
  },
  {
    "text": "like I think the thing that's interesting is that it seems like when you really try to root out most of the problems that can occur in many cases",
    "start": "378830",
    "end": "384950"
  },
  {
    "text": "you can't tell in advance whether something's going to succeed or fail it's usually when you're at the edge of the system when you're going and dealing",
    "start": "384950",
    "end": "390380"
  },
  {
    "text": "with Io right when you're going and talking to a disk are you talking to some third party system you have no real control over which is kind of like the",
    "start": "390380",
    "end": "396290"
  },
  {
    "text": "case you just mentioned so it's kind of like this interesting thing of going considering the most of the things that",
    "start": "396290",
    "end": "401840"
  },
  {
    "text": "will lead to the scenario where we can't tell in advance what's name is going to succeed or fail is in the areas of the",
    "start": "401840",
    "end": "407540"
  },
  {
    "text": "system that we don't really have much control over so it kind of leads us to this idea that well you know and here's the system that we do have control over",
    "start": "407540",
    "end": "413540"
  },
  {
    "text": "what can we do so that we basically don't have to scatter with error handling code so it's funny to go and",
    "start": "413540",
    "end": "421940"
  },
  {
    "text": "think of I know it's a particular case of a more general thing your past you",
    "start": "421940",
    "end": "427460"
  },
  {
    "text": "know is an argument to methods at all if you do do you tell people about it guess it's kind of like an embarrassing",
    "start": "427460",
    "end": "434060"
  },
  {
    "text": "thing to do right what is the bad thing about no it's interesting thing to kind",
    "start": "434060",
    "end": "439970"
  },
  {
    "text": "of dig into the bad thing about no I think the main thing I know that's kind",
    "start": "439970",
    "end": "444980"
  },
  {
    "text": "of interesting is that essentially what you're doing is you're forcing work on the receiver okay if you pass a note to",
    "start": "444980",
    "end": "450470"
  },
  {
    "text": "somebody the first thing they need to do is basically when they get that thing they've to go and say oh this thing could be no I damn well better check to",
    "start": "450470",
    "end": "456410"
  },
  {
    "text": "see if it is no or not if you don't then essentially you've got this little time bomb it's kind of floating around your system right but it's interesting to",
    "start": "456410",
    "end": "463070"
  },
  {
    "text": "notice that that is that's what's going on is you're forcing work on somebody else okay",
    "start": "463070",
    "end": "469100"
  },
  {
    "text": "and in general if you think about that in general isn't that like a bad thing to do right if we aren't forcing work on",
    "start": "469100",
    "end": "475520"
  },
  {
    "text": "somebody else in the system we have less opportunity for error so what's gonna kind of carry this home a little bit I",
    "start": "475520",
    "end": "481460"
  },
  {
    "text": "saw this pattern years ago and didn't really have a good name for it I think right now I'm gonna call like private",
    "start": "481460",
    "end": "487460"
  },
  {
    "text": "language so you ever have this sort of thing we have a good joint method and then what you do is you do all these things where you're gathering up pieces",
    "start": "487460",
    "end": "493670"
  },
  {
    "text": "of information and you're studying boolean Flags and then at the very end of the method you basically have all these conjunctions and disjunctions of",
    "start": "493670",
    "end": "499580"
  },
  {
    "text": "the boolean flags and you're saying well if this is true and this is true and that's not true and this is true then do this you ever see that kind of thing",
    "start": "499580",
    "end": "505970"
  },
  {
    "text": "happen at all yeah it's kind of funny can you see that that's kind of the same as the null thing interplay it's kind of",
    "start": "505970",
    "end": "512599"
  },
  {
    "text": "like we're going in doing something and we're forcing somebody going to interpret it later and it's something",
    "start": "512599",
    "end": "517909"
  },
  {
    "text": "which is not easily interpreted well where it's basically prone to error when you're going and doing these sorts of things so the distance between making a",
    "start": "517909",
    "end": "524030"
  },
  {
    "text": "decision and actually doing something okay which is kind of problematic in many systems so I kind of call this",
    "start": "524030",
    "end": "530030"
  },
  {
    "text": "tunneling okay and tunneling is this thing where you basically are going in doing a bunch of things that force you",
    "start": "530030",
    "end": "535670"
  },
  {
    "text": "to go and actually interpret things later and you know it's this isn't universally bad right because you know",
    "start": "535670",
    "end": "541520"
  },
  {
    "text": "when you think about what happens quite often today in like functional programming we're using like some types",
    "start": "541520",
    "end": "546860"
  },
  {
    "text": "our algebraic data types it's like what you are is you're kind of constructing this language of data that's a result of",
    "start": "546860",
    "end": "552350"
  },
  {
    "text": "something and then you basically have to go and sort of match it and work with it later on in your system that's okay right but the cool thing is setting",
    "start": "552350",
    "end": "558650"
  },
  {
    "text": "things up in such a way that you're reducing the scope of input to something",
    "start": "558650",
    "end": "563810"
  },
  {
    "text": "smaller that's easier to interpret and not pushing work on to the onto the receiver in a bad way so interpretation you know it's very",
    "start": "563810",
    "end": "571430"
  },
  {
    "text": "unstructured things is often a problem in programming if you've ever heard of this guy Alan Perlis but he wrote this",
    "start": "571430",
    "end": "577360"
  },
  {
    "text": "collection of epigrams two years ago just little sayings about programming and he had a real way with words",
    "start": "577360",
    "end": "583310"
  },
  {
    "text": "read this one for a second so what's he getting on with us right have you ever",
    "start": "583310",
    "end": "591470"
  },
  {
    "text": "had that thing where you start to go in format string someplace an application only to go and actually parse them later in the application and it's nice that we",
    "start": "591470",
    "end": "598520"
  },
  {
    "text": "have you know reasonably well behaved formats like JSON now and all these other things but essentially when you do",
    "start": "598520",
    "end": "603980"
  },
  {
    "text": "that you're basically introducing some barrier in your program which can basically lead to error right and you're",
    "start": "603980",
    "end": "609560"
  },
  {
    "text": "doing additional work that you wouldn't have to do otherwise so it's nice to kind of question these particular things okay but this is that general thing if",
    "start": "609560",
    "end": "616070"
  },
  {
    "text": "like setting up things and having to interpret them later and having to be in such a format that it's there's a",
    "start": "616070",
    "end": "621530"
  },
  {
    "text": "problem that can occur and it can kind of sneak into your program as errors so can we eliminate these tunnels in",
    "start": "621530",
    "end": "627560"
  },
  {
    "text": "programming I mean basically say something will be controversial give them a zeitgeist or",
    "start": "627560",
    "end": "632780"
  },
  {
    "text": "show you this but so look at this code here for going and getting an item for a bar code what's",
    "start": "632780",
    "end": "640720"
  },
  {
    "text": "going on with us we're essentially going and trying to go and get an item that matches a bar code but if we don't what",
    "start": "640720",
    "end": "647949"
  },
  {
    "text": "we do is return back an item that represents the absence of an item you'll see this pattern before yeah so it's",
    "start": "647949",
    "end": "654819"
  },
  {
    "text": "historically it's called a null object pattern but this is kind of like a way of going and sort of saying something",
    "start": "654819",
    "end": "660819"
  },
  {
    "text": "bad has happened okay and we're gonna go and sort of say look we can patch things up in such a way that everything is",
    "start": "660819",
    "end": "667300"
  },
  {
    "text": "gonna be okay right and you know this is part of like a broader category of things you know it's",
    "start": "667300",
    "end": "673540"
  },
  {
    "text": "like not a number no object quite often empty lists or empty arrays will represent the absence of things you can",
    "start": "673540",
    "end": "679360"
  },
  {
    "text": "create objects that represent perfect or special cases in your code to go and deal with things like that this is a good idea or a bad idea yeah you know",
    "start": "679360",
    "end": "687399"
  },
  {
    "text": "it's kind of funny I was listening to you know talk yesterday mmm seems like a armstrong's talk and",
    "start": "687399",
    "end": "694209"
  },
  {
    "text": "he's saying basically just fail fast whenever you can and I think 90% of the time that's actually okay but there's",
    "start": "694209",
    "end": "699819"
  },
  {
    "text": "some times when you may not want to and using a pattern like this is okay but the thing about this you have to kind of",
    "start": "699819",
    "end": "704889"
  },
  {
    "text": "recognize is that when you are using something like the no object pattern you can get into a situation where the thing",
    "start": "704889",
    "end": "711250"
  },
  {
    "text": "that you basically go and return back is some was just taken to be real if it's taken to be real I can go and lead to other possible errors so let's say for a",
    "start": "711250",
    "end": "717819"
  },
  {
    "text": "system where Ewing and gathering items and u1 going to sum up all the items you know if one item has if this item has to",
    "start": "717819",
    "end": "723399"
  },
  {
    "text": "have a stuff like a price of zero that's fine if if we try to count the item some",
    "start": "723399",
    "end": "728470"
  },
  {
    "text": "basically use that logic and making some kind of decision within our application the fact that some of these items are no items could be so much goes and ends up",
    "start": "728470",
    "end": "734769"
  },
  {
    "text": "kind of hurting us but this thing going in and trying to decide or busy decide to do nothing can be kind of handy for",
    "start": "734769",
    "end": "741910"
  },
  {
    "text": "us sometime so it allows us to kind of funnel things it allows us to actually have like a wide range of input we have",
    "start": "741910",
    "end": "747579"
  },
  {
    "text": "the output that comes back to us and we basically don't have extraneous errors concluding our system as we go through with things I want to show you another",
    "start": "747579",
    "end": "754240"
  },
  {
    "text": "way of going approaching this as we are working with like say a sale class or",
    "start": "754240",
    "end": "759819"
  },
  {
    "text": "something like that which is going and getting items from some collection you know we the code I showed you little bit",
    "start": "759819",
    "end": "765790"
  },
  {
    "text": "earlier there's a couple of different things can go wrong one thing that can happen as I showed us that you may search for an item and",
    "start": "765790",
    "end": "771430"
  },
  {
    "text": "discover that's not there and then we talked about okay well we can throw an exception we can return no you know we",
    "start": "771430",
    "end": "777220"
  },
  {
    "text": "can essentially do what I just said it's like having no item and pass it back but the thing that's kind of cool that we can do is we can actually extend our",
    "start": "777220",
    "end": "783040"
  },
  {
    "text": "domain and consider the air as part of our domain okay so with this we have",
    "start": "783040",
    "end": "788530"
  },
  {
    "text": "some listener that's going to go and receive information about thinks they're happening in a sale as we're going and totaling things up and doing things and",
    "start": "788530",
    "end": "794860"
  },
  {
    "text": "we can just add another method all you've not found and pass the barcode right so see what's going on here we're",
    "start": "794860",
    "end": "801370"
  },
  {
    "text": "essentially saying this is an error and rather than going throwing an exception rather going and doing something kind of spooky with null objects what we're",
    "start": "801370",
    "end": "807370"
  },
  {
    "text": "going to do this we're actually just gonna go ahead and say that error is part of our domain and when it's part of our domain then it's something that we",
    "start": "807370",
    "end": "813910"
  },
  {
    "text": "can kind of deal with and it's kind of hard to avoid we can see this is a particular thing that can happen in the application it's interesting to see that",
    "start": "813910",
    "end": "821440"
  },
  {
    "text": "you know this thing right here we're kind of going and telling some other object about something which happen in our system which is fine you",
    "start": "821440",
    "end": "828190"
  },
  {
    "text": "can practice the same thing if you're working in language which has like some types for instance and just go ahead and",
    "start": "828190",
    "end": "833710"
  },
  {
    "text": "say look you know here are the cases that are good we also have a couple of cases that are bad right so we have item add at this one thing that could happen",
    "start": "833710",
    "end": "840190"
  },
  {
    "text": "we have sale total but we can also have item not found as a particular system",
    "start": "840190",
    "end": "847260"
  },
  {
    "text": "but going back to this thing of going and telling through an interface about something that happened I find it kind",
    "start": "847260",
    "end": "854500"
  },
  {
    "text": "of interesting that it seems like a lot of error handling gets better when you start going in adopting this thing of",
    "start": "854500",
    "end": "860260"
  },
  {
    "text": "like I'm telling an object to do something as opposed to going and saying give me some stuff right think about the",
    "start": "860260",
    "end": "866890"
  },
  {
    "text": "typical thing on going and saying oh get an item from some collection or get an item from some data store and it's like",
    "start": "866890",
    "end": "873430"
  },
  {
    "text": "it could return null right and that can be problematic for us what if something",
    "start": "873430",
    "end": "878760"
  },
  {
    "text": "is doing the work of going in and getting an item or whatever and then once it has it it goes and says okay",
    "start": "878760",
    "end": "884620"
  },
  {
    "text": "well now that I have this I can notify other people are connected to me about the particular item that I have right",
    "start": "884620",
    "end": "889920"
  },
  {
    "text": "when you're in a situation like that essentially there's one less error you can basically have well the earth´s",
    "start": "889920",
    "end": "895600"
  },
  {
    "text": "actually been shifted to the place where you're going and getting things but everything else is isolated from the fact of that kind of an error has occurred so just to come and show",
    "start": "895600",
    "end": "902790"
  },
  {
    "text": "you this in code typical thing is to go to some data store you know get a person based upon an ID for instance check to",
    "start": "902790",
    "end": "909480"
  },
  {
    "text": "see let us know or not if it's not equal to no I'll do some work and we have a null check and we know how problematic Nola's are we just talked about that but",
    "start": "909480",
    "end": "916110"
  },
  {
    "text": "the alternative is to actually adopt a tell style where you can go and do something like this you say to my you know data source I think I have a",
    "start": "916110",
    "end": "923280"
  },
  {
    "text": "particular method called with person and the passin an ID if that ID matches a person that person gets passed to the",
    "start": "923280",
    "end": "929250"
  },
  {
    "text": "lambda and the lambda goes and does the work right so we're basically telling the lambda to do some work based upon",
    "start": "929250",
    "end": "936090"
  },
  {
    "text": "the fact that we actually you know based upon you know the success of going and",
    "start": "936090",
    "end": "941610"
  },
  {
    "text": "having done something like this having gone and try to retrieve things is there a null check here probably",
    "start": "941610",
    "end": "947310"
  },
  {
    "text": "inside of with person but the things we've isolated the rest of the code from this particular thing which is kind of fascinating this whole thing of going",
    "start": "947310",
    "end": "954060"
  },
  {
    "text": "and telling rather than asking is very very interesting right now culturally within programming because we",
    "start": "954060",
    "end": "959610"
  },
  {
    "text": "are moving to functional programming quite a bit but it's interesting to notice that telling this makes a lot of",
    "start": "959610",
    "end": "965040"
  },
  {
    "text": "things easier in systems when with regard to air handling in fact you know if you look at air lang for instance you know essentially processes and air Lang",
    "start": "965040",
    "end": "971490"
  },
  {
    "text": "they like this functional core they basically are doing all functional stuff inside but what they do is they send messages to each other which is like",
    "start": "971490",
    "end": "977790"
  },
  {
    "text": "this tell style which is very much like traditional object orientation so organizing your systems in a way we're",
    "start": "977790",
    "end": "983070"
  },
  {
    "text": "basically you you tell people about the data that you have as opposed to going and trying to get it from people can go",
    "start": "983070",
    "end": "990480"
  },
  {
    "text": "and eliminate a lot of everything that you would have otherwise so asking for data can fail giving it when you have it cannot so this thing I kind of see us",
    "start": "990480",
    "end": "999900"
  },
  {
    "text": "basically something I call extending the domain right this thing they're showing with like the sale listener",
    "start": "999900",
    "end": "1005210"
  },
  {
    "text": "going into adding the eros into the interface and stuff like that and the word domain is rather rich in",
    "start": "1005210",
    "end": "1011770"
  },
  {
    "text": "linguistics domain means something in mathematics right it's like you're the domain of a function the range of a",
    "start": "1011770",
    "end": "1017150"
  },
  {
    "text": "function stuff along those lines it's really the input of something okay the the input of your cogitation or your",
    "start": "1017150",
    "end": "1024260"
  },
  {
    "text": "computation let's take a look at another little example here suppose I have this array",
    "start": "1024260",
    "end": "1029959"
  },
  {
    "text": "and this array has like you know ones and zeros I'm going to say that the the shaded boxes are once and once they",
    "start": "1029959",
    "end": "1036529"
  },
  {
    "text": "aren't shaded or zeros we want to do so we want to count the spans of ones so if we look at this the basically there's",
    "start": "1036529",
    "end": "1043640"
  },
  {
    "text": "three spans of ones here the first one and the one in the middle on the one at the end how do we write code to do something like this well we can get a",
    "start": "1043640",
    "end": "1051710"
  },
  {
    "text": "Ruby interpreter and go and write code like this right I cover all the edge cases okay if the array size is equal to",
    "start": "1051710",
    "end": "1058820"
  },
  {
    "text": "0 the count has to definitely go with 0 okay if if the array let's see first",
    "start": "1058820",
    "end": "1065120"
  },
  {
    "text": "element is greater than 0 meaning of swine the count goes up to 1 and essentially what's going on with us is",
    "start": "1065120",
    "end": "1070370"
  },
  {
    "text": "we're going and taking we're scanning through the array and we're looking at the current element in the next element whenever we transition from a zero to a",
    "start": "1070370",
    "end": "1076760"
  },
  {
    "text": "one we bump up the count and then we can go ahead and you know just return that and it becomes the count the thing is",
    "start": "1076760",
    "end": "1082850"
  },
  {
    "text": "that the very first thing is a special case if we already are in a span we have to go and put it one honor onto our",
    "start": "1082850",
    "end": "1088429"
  },
  {
    "text": "counter do you like this code yeah it's to me this is edgy code it has too many",
    "start": "1088429",
    "end": "1093830"
  },
  {
    "text": "edges in it right as all this conditionality which is prone to error what about this let's play a trick ok so",
    "start": "1093830",
    "end": "1100010"
  },
  {
    "text": "here I have my array again I'm gonna put an element on the very front of it okay in this element it's going to be a zero",
    "start": "1100010",
    "end": "1105980"
  },
  {
    "text": "and then I can do something like this okay and it's like if you're not too familiar with Ruby syntax just to go and",
    "start": "1105980",
    "end": "1113179"
  },
  {
    "text": "explain this you know ary is our array and I'm prepending a zero on to it and then once",
    "start": "1113179",
    "end": "1118309"
  },
  {
    "text": "I've done that I can use this function called each cons and when you can pass two to each cons what it does is gives",
    "start": "1118309",
    "end": "1123649"
  },
  {
    "text": "you each of the success of each successive pair within the array so you have the value set index is 0 1 1 2 2 3",
    "start": "1123649",
    "end": "1133220"
  },
  {
    "text": "and just all those things take them as a sequence then what you do is you perform a count your destructuring so you have",
    "start": "1133220",
    "end": "1139820"
  },
  {
    "text": "like you know the current in the next element every time you have a transition you bump up the count is this code easier to read and deal with yeah way is",
    "start": "1139820",
    "end": "1147350"
  },
  {
    "text": "here how many edges does it have not very much right but here's the trick we eliminate an edge by extending the",
    "start": "1147350",
    "end": "1154580"
  },
  {
    "text": "domain right and I hope you can kind of like see this thing that's kind of here's the domain the input and we're",
    "start": "1154580",
    "end": "1159950"
  },
  {
    "text": "extending it by going and adding a pre pending an element that's very much like extending the domain when we're doing things like our sale listener going",
    "start": "1159950",
    "end": "1166190"
  },
  {
    "text": "adding functions to it we're talking or basically increasing the range of things the things that we basically can",
    "start": "1166190",
    "end": "1172220"
  },
  {
    "text": "consider as input in the system that we're going and working with so let's",
    "start": "1172220",
    "end": "1177980"
  },
  {
    "text": "look at another little example maybe buddy here ever play guitar at all stringed instrument and I know what this",
    "start": "1177980",
    "end": "1183590"
  },
  {
    "text": "is that yeah this is tablature right and essentially what goes on with this it's",
    "start": "1183590",
    "end": "1188930"
  },
  {
    "text": "a way of notating music for people using stringed instruments and it's often easier to read in traditional music",
    "start": "1188930",
    "end": "1193970"
  },
  {
    "text": "notation every line here is a string and every number is a fret position position",
    "start": "1193970",
    "end": "1199520"
  },
  {
    "text": "you will place your finger on in order to go in place he would play a tune so years ago I had this friend who basically was a musician he says you",
    "start": "1199520",
    "end": "1206090"
  },
  {
    "text": "know I'd love to go and have a program that goes now puts this for me based upon input that I can give you in a file",
    "start": "1206090",
    "end": "1211400"
  },
  {
    "text": "and what's gonna happen here is that essentially you know the first number",
    "start": "1211400",
    "end": "1216980"
  },
  {
    "text": "and every pair is going to be the string number and the second DeMars can be the fret position and so if you have this you know can you just put tablature for",
    "start": "1216980",
    "end": "1223580"
  },
  {
    "text": "me so I wrote a little program to do this and it's kind of interesting because you could think of many different ways to do this I tried to",
    "start": "1223580",
    "end": "1229700"
  },
  {
    "text": "adopt a very functional approach to it and ended up with something kind of interesting the key insight with this",
    "start": "1229700",
    "end": "1236420"
  },
  {
    "text": "was recognizing that for every one of these rows what I had to decide had to go and produce a column okay like this",
    "start": "1236420",
    "end": "1242210"
  },
  {
    "text": "so that's basically the first string has a zero on it but I need to go in generate a column that goes in has",
    "start": "1242210",
    "end": "1247270"
  },
  {
    "text": "pieces of all six strings then I take all those columns and I kind of like transpose them so I can print them out",
    "start": "1247270",
    "end": "1253340"
  },
  {
    "text": "row by row which is kind of odd but before looking at code that does this",
    "start": "1253340",
    "end": "1259250"
  },
  {
    "text": "let's go and look at the possible errors that can occur with this right you know just listing out they're all different the different things can go",
    "start": "1259250",
    "end": "1264650"
  },
  {
    "text": "wrong with us maybe we don't have a valid file name as a command-line argument where then we can't open the",
    "start": "1264650",
    "end": "1269660"
  },
  {
    "text": "file file is empty maybe the file contains empty lines maybe line has you know not exactly two",
    "start": "1269660",
    "end": "1275720"
  },
  {
    "text": "you know numbers on it you know maybe the the numbers are malformed maybe there's like you know alphabetical",
    "start": "1275720",
    "end": "1282560"
  },
  {
    "text": "you know characters there and stuff like that so all these different things are possible so you know writing code that",
    "start": "1282560",
    "end": "1288800"
  },
  {
    "text": "goes and actually just tries to go and do a clean version of this one things that kind of ended up with was this you",
    "start": "1288800",
    "end": "1296090"
  },
  {
    "text": "check to see whether file exists the thing is coming on is the command line argument and if it's there and you can",
    "start": "1296090",
    "end": "1303100"
  },
  {
    "text": "open it then you start doing this work which is going through each line of its splitting the lines calling this",
    "start": "1303100",
    "end": "1308980"
  },
  {
    "text": "function called tab column they go and build up the columns and transposing and then putting it out you don't have to follow this completely the thing I want",
    "start": "1308980",
    "end": "1315190"
  },
  {
    "text": "to point out though is this you know we're checking to see whether the file passed as an argument is valid or not do",
    "start": "1315190",
    "end": "1323200"
  },
  {
    "text": "we need to do this is there a way of doing things so we wouldn't have to do",
    "start": "1323200",
    "end": "1329140"
  },
  {
    "text": "this and this is kind of like an area where you can kind of like stretch a little bit turns out in Ruby there's",
    "start": "1329140",
    "end": "1335140"
  },
  {
    "text": "this this environment variable called Arg V okay not really environment where would a global variable and excuse me",
    "start": "1335140",
    "end": "1341470"
  },
  {
    "text": "are GAF and what our gift does is the basic goes and takes all the things that on the command line assumes that they're",
    "start": "1341470",
    "end": "1347350"
  },
  {
    "text": "filenames concatenates them into one big swath of text then gives you that text as a string so I'm kind of liking this",
    "start": "1347350",
    "end": "1354670"
  },
  {
    "text": "thing where okay well we'll just accept things and if there's a problem I'm going to get some kind of interpreter",
    "start": "1354670",
    "end": "1359680"
  },
  {
    "text": "failure you know that kind of thing but I had to go do the explicit checking I don't particularly care about that but",
    "start": "1359680",
    "end": "1364810"
  },
  {
    "text": "this also goes that makes the program little bit more general in the sense that I can go and put multiple files to go and actually have them all be part of",
    "start": "1364810",
    "end": "1370720"
  },
  {
    "text": "one composition I concatenate together and have that work so there's this fun thing you can do with air sometimes",
    "start": "1370720",
    "end": "1376720"
  },
  {
    "text": "which is generalizing your problem a bit so that you know the things that can",
    "start": "1376720",
    "end": "1382930"
  },
  {
    "text": "occur tend to be okay right and that's kind of part of this let's look a little",
    "start": "1382930",
    "end": "1388930"
  },
  {
    "text": "bit further with things here so that solves some of these problems what about",
    "start": "1388930",
    "end": "1394570"
  },
  {
    "text": "this what are the cases where you have you have like less than one less than two number sana on a line we should",
    "start": "1394570",
    "end": "1402670"
  },
  {
    "text": "probably go and flag that as an error shouldn't way we could can we interpret the single number in a line ask",
    "start": "1402670",
    "end": "1409480"
  },
  {
    "text": "something can we basically have a different interpretation sorry a rest could yeah that's right we could",
    "start": "1409480",
    "end": "1418270"
  },
  {
    "text": "interpret it that way or we could interpret as a zero we have a couple different possible interpretations and it's interesting to kind of like play",
    "start": "1418270",
    "end": "1423850"
  },
  {
    "text": "this game a bit and go and say look here's something we would flag as an error but can we actually kind of like pun you know the the input in such way",
    "start": "1423850",
    "end": "1431200"
  },
  {
    "text": "that that does mean something and this is again part of that domain extension thing it's kind of like what",
    "start": "1431200",
    "end": "1436550"
  },
  {
    "text": "we're doing is we're kinda going and saying we're gonna extend the range of possible inputs we're gonna soar find that certain things aren't necessarily",
    "start": "1436550",
    "end": "1442190"
  },
  {
    "text": "heirs and give them an interpretation which is valid in the context of the system can this go wrong yeah it can go",
    "start": "1442190",
    "end": "1449210"
  },
  {
    "text": "wrong you have to basically determine what the stakes are when you're going and doing this thing in a particular language but you know I mean this",
    "start": "1449210",
    "end": "1455600"
  },
  {
    "text": "there's examples where this could be used all around us like the square root function in most programming languages what happens when you pass a negative",
    "start": "1455600",
    "end": "1461930"
  },
  {
    "text": "number into it bad things right yeah we want bad things to happen could we fix",
    "start": "1461930",
    "end": "1468290"
  },
  {
    "text": "you know square roots so that passing negative numbers okay you have returned",
    "start": "1468290",
    "end": "1474830"
  },
  {
    "text": "complex numbers right and just you know when you have the square root of negative one then you get a complex",
    "start": "1474830",
    "end": "1479870"
  },
  {
    "text": "result because in mathematics you there really is a definition of the square root of a negative number but it's kind of like moving to another number system",
    "start": "1479870",
    "end": "1485870"
  },
  {
    "text": "but that's actually like more work than it's necessary and they would really want to go and take on and most programming language so we just simply",
    "start": "1485870",
    "end": "1491390"
  },
  {
    "text": "don't do that well there's other places where we do do this right so I don't know which language was the first to",
    "start": "1491390",
    "end": "1496490"
  },
  {
    "text": "actually do this thing of going and taking negative indices on erase and interpreting them as being like no start",
    "start": "1496490",
    "end": "1503360"
  },
  {
    "text": "going iterating from the very back of the list but now it's pretty common isn't it for raising strings and stuff",
    "start": "1503360",
    "end": "1508760"
  },
  {
    "text": "like that where the chances of going and having like an error when you do something like this can happen but the",
    "start": "1508760",
    "end": "1516710"
  },
  {
    "text": "important thing to go and recognize is that when you have something like this what you're doing is you're going and making this bet that as you extend a",
    "start": "1516710",
    "end": "1523880"
  },
  {
    "text": "domain people gonna understand the extent of the domain they're gonna understand what a negative index is that's become like a cultural or a",
    "start": "1523880",
    "end": "1530090"
  },
  {
    "text": "documented thing within the system that this is actually the the thing that happens with this and then when people are thinking those terms it's fine it's",
    "start": "1530090",
    "end": "1536660"
  },
  {
    "text": "one less possible error case and also goes and gives you a bit more flexibility in the and that work that you're doing user interface you know",
    "start": "1536660",
    "end": "1544490"
  },
  {
    "text": "it's kind of an interesting thing about this I'm using domain in such a general way here but it's like say you have like",
    "start": "1544490",
    "end": "1552050"
  },
  {
    "text": "a parking app I'm using a very early parking app and the thing that's kind of cruddy about it is that when I put in to",
    "start": "1552050",
    "end": "1558080"
  },
  {
    "text": "park in a particular location it would force me to go and have that time run out before I could park in a different location so there's no such thing as",
    "start": "1558080",
    "end": "1564380"
  },
  {
    "text": "having a a 15-minute meeting moving to a lot down the street because they figured that once you've parked there for an hour you",
    "start": "1564380",
    "end": "1569940"
  },
  {
    "text": "were there for the hour it's like kind of ridiculous yeah I didn't last too long that way but essentially you know",
    "start": "1569940",
    "end": "1575970"
  },
  {
    "text": "this thing was going in saying look you know our domain is basically you know the space of all parking spots right and",
    "start": "1575970",
    "end": "1581910"
  },
  {
    "text": "you should be what do you sort of like have your intention and do this and just have it work right it's like that's a",
    "start": "1581910",
    "end": "1588060"
  },
  {
    "text": "valid choice that people could make rather than going and telling people that's an error so yeah I extended domain when the extension can be",
    "start": "1588060",
    "end": "1594030"
  },
  {
    "text": "considered the new domain that's pretty much a way of looking at this going back to our code here all these different",
    "start": "1594030",
    "end": "1600480"
  },
  {
    "text": "errors that are possible you know this is kind of like going and carrying things a bit further there's like a",
    "start": "1600480",
    "end": "1606630"
  },
  {
    "text": "check function here that goes to checks for possible errors reports if there's problems you'll see that over here I say",
    "start": "1606630",
    "end": "1614310"
  },
  {
    "text": "that we we go to our gaff we basically go ahead and we do this work to go and cut out all the lines that have nothing",
    "start": "1614310",
    "end": "1620100"
  },
  {
    "text": "on them we split so that we have an array of pairs then we do some more checks and then we actually go and do",
    "start": "1620100",
    "end": "1625980"
  },
  {
    "text": "the work that we have down here to go and actually produce the representation it almost seems like our program is segmented into two parts doesn't time",
    "start": "1625980",
    "end": "1632820"
  },
  {
    "text": "all right we have a part we're doing all this checking after this checking we have a representation that basically",
    "start": "1632820",
    "end": "1638940"
  },
  {
    "text": "just should work no matter what and you'll see that the error hailing just doesn't happen pass that last check that",
    "start": "1638940",
    "end": "1644640"
  },
  {
    "text": "we have there and this is a nice thing to basically have in systems just go and get to the point where when you do all",
    "start": "1644640",
    "end": "1650910"
  },
  {
    "text": "this kind of checking upfront and then pass a certain point things are going to run to completion and you know they are because essentially you're not dealing",
    "start": "1650910",
    "end": "1657450"
  },
  {
    "text": "with you know you're not doing with anything external you've been able to check all these particular conditions right you could have something crazy",
    "start": "1657450",
    "end": "1664110"
  },
  {
    "text": "like a divide by zero you know or a seg fault or something crazy like that but for the most part you just kind of",
    "start": "1664110",
    "end": "1669300"
  },
  {
    "text": "know that once you get to a certain point there's not much checking you have to do yourself and this allows you to kind of like separate you know parts of",
    "start": "1669300",
    "end": "1676860"
  },
  {
    "text": "your system into you know kinda like a soft center and a protective shell right once we know what all these constraints",
    "start": "1676860",
    "end": "1682200"
  },
  {
    "text": "are around us and we basically verify the things to satisfy those constraints then we have this area or area area we",
    "start": "1682200",
    "end": "1688590"
  },
  {
    "text": "don't really have to do error checking and that's a really nice place to go and be within your code so hearing us even",
    "start": "1688590",
    "end": "1695730"
  },
  {
    "text": "further we can use something which is kind like a you know like most like an option monadic approach there's something",
    "start": "1695730",
    "end": "1701140"
  },
  {
    "text": "called either in Haskell and I kind of mimic that here within within Ruby essentially with this code we're able to",
    "start": "1701140",
    "end": "1707590"
  },
  {
    "text": "go and just put everything in a line and do the work whenever there's a check that occurs that the check fails it passes along an error and every success",
    "start": "1707590",
    "end": "1715210"
  },
  {
    "text": "of piece cousin checks to see whether scheme receiving an error in which case it does nothing it just passes the error along or goes and see said it's",
    "start": "1715210",
    "end": "1722110"
  },
  {
    "text": "receiving the result of computation from the previous step so the very end you get a string which either contains an",
    "start": "1722110",
    "end": "1727600"
  },
  {
    "text": "accumulated error message or it contains the actual output okay and this is kind of where a lot of people are going with",
    "start": "1727600",
    "end": "1733210"
  },
  {
    "text": "functional programming right you gonna throw like say look when use option monads and all these other things in such a way that we can avoid exceptions",
    "start": "1733210",
    "end": "1740290"
  },
  {
    "text": "and that's nice but isn't this kind of like ya know I've mixed feelings about",
    "start": "1740290",
    "end": "1745810"
  },
  {
    "text": "about doing this sort of thing as opposed to going and checking in advance so just aborting computation really",
    "start": "1745810",
    "end": "1751060"
  },
  {
    "text": "before you get to the main line that's gonna go around funny about this when",
    "start": "1751060",
    "end": "1756730"
  },
  {
    "text": "you start thinking about errors to start thinking about things that can go wrong in systems a thing that I keep coming",
    "start": "1756730",
    "end": "1762130"
  },
  {
    "text": "back to is exceptions as I mentioned a bit earlier right we talked about exceptions briefly",
    "start": "1762130",
    "end": "1769500"
  },
  {
    "text": "I've always felt kind of weird about exceptions you know and I think a lot of people do and that's why we're kind of like moving away from them in the",
    "start": "1769950",
    "end": "1775990"
  },
  {
    "text": "industry event the thing that kind of bothers to me is that in a system where you have any kind of possible side effects or you're modifying state all",
    "start": "1775990",
    "end": "1782380"
  },
  {
    "text": "these other things when you have your try Clause and you do some work it's like if you throw an exception at any",
    "start": "1782380",
    "end": "1788140"
  },
  {
    "text": "point inside there you have to kind of sort of make sure that the world is stuff in a state you know about right",
    "start": "1788140",
    "end": "1794530"
  },
  {
    "text": "once you've actually gone and failed right ideally you what we'd really like to have in many systems is almost have",
    "start": "1794530",
    "end": "1800260"
  },
  {
    "text": "acceptance be like a time machine it's not like well I decide to try something and whoops that didn't work so",
    "start": "1800260",
    "end": "1805900"
  },
  {
    "text": "I'm right here and I get to go and find out that hey that doesn't work but I know that the state of the world is",
    "start": "1805900",
    "end": "1811390"
  },
  {
    "text": "exactly the same as it was you know probably going to executing the try do we have that guarantee at all you",
    "start": "1811390",
    "end": "1818470"
  },
  {
    "text": "actually have to kind of work for it and that's why I kind of feel the exceptions are almost like half of a language mechanism in a way half of an ear",
    "start": "1818470",
    "end": "1824800"
  },
  {
    "text": "healing mechanism when you think about it what this is really about it's almost about like transactionality and",
    "start": "1824800",
    "end": "1830450"
  },
  {
    "text": "right this kind of feels like transactions and I don't like using the word transaction because it's so",
    "start": "1830450",
    "end": "1836509"
  },
  {
    "text": "overloaded in the industry but I think an interesting frame for all this is to go and say what are our intentions and once we know what the intentions are",
    "start": "1836509",
    "end": "1843409"
  },
  {
    "text": "with the intention can either succeed or fail and then we can go into or think about you know what's possible in that",
    "start": "1843409",
    "end": "1850159"
  },
  {
    "text": "frame within these things so to give an example you know likely everybody's",
    "start": "1850159",
    "end": "1855619"
  },
  {
    "text": "music player in the world has some kind of a shuffle mode on it right it would much shuffle you know your playlists and",
    "start": "1855619",
    "end": "1861259"
  },
  {
    "text": "sort of have things in different orders and stuff along those songs and this is really actually a rather deep domain most domains are you know there's a lot",
    "start": "1861259",
    "end": "1867619"
  },
  {
    "text": "of really cool algorithm so you can use to on shuffle efficiently lists of things but it's interesting to think",
    "start": "1867619",
    "end": "1874999"
  },
  {
    "text": "about naive code to do this right we have you know a list of things and when",
    "start": "1874999",
    "end": "1880759"
  },
  {
    "text": "you think we could do is just go ahead and say let's go and call the random number generator and get a random number and take that ran over and kind of mod",
    "start": "1880759",
    "end": "1886669"
  },
  {
    "text": "it and already one actually determine the next track to play the one thing about that though it's like what if you",
    "start": "1886669",
    "end": "1892190"
  },
  {
    "text": "know your random number generator gets stuck keeps returning the same number over and we're gonna you again would have people like during the same track",
    "start": "1892190",
    "end": "1898369"
  },
  {
    "text": "and they missed not even want to even like over and over and over again and we know that a decent random number generator it's not going to go and give",
    "start": "1898369",
    "end": "1903619"
  },
  {
    "text": "you you know large swath of the same thing over and over again we try to kind of like piece together you know that",
    "start": "1903619",
    "end": "1909889"
  },
  {
    "text": "constraint in our code about when we say okay let's gonna have a while loop and essentially we're gonna call in our",
    "start": "1909889",
    "end": "1915320"
  },
  {
    "text": "generator and essentially every time it's equal to the last one we just sort of like you know try again right which",
    "start": "1915320",
    "end": "1920330"
  },
  {
    "text": "is a really naive way to do it is this code okay yeah it's like you know this",
    "start": "1920330",
    "end": "1926090"
  },
  {
    "text": "very kind of interesting as developer so you should always be thinking it's like now what's the worst case for this and it's like oh my Luca gets stuck that's",
    "start": "1926090",
    "end": "1931879"
  },
  {
    "text": "kind of ridiculous right and of course you know processes are fast enough that you would never think this would get stuck forever right just really wouldn't",
    "start": "1931879",
    "end": "1938509"
  },
  {
    "text": "be a thing that's likely to happen if it still looks kind of you know like ugly code in a way what else could we do well",
    "start": "1938509",
    "end": "1947539"
  },
  {
    "text": "we can essentially go ahead and sort of like just you know get the current one and if it actually I have to speak with the last one just go ahead and get the",
    "start": "1947539",
    "end": "1954559"
  },
  {
    "text": "next track you know the next next track in the list and mod by you know the size of the list and going to use that one",
    "start": "1954559",
    "end": "1960920"
  },
  {
    "text": "our coats got more complicated how's that right it's kind of like you know we've done this particular thing and",
    "start": "1960920",
    "end": "1967070"
  },
  {
    "text": "it's like we're worried about going and showing you know playing the same track you know over and over again but it's an interesting thing what if you went back",
    "start": "1967070",
    "end": "1973070"
  },
  {
    "text": "to the people who are commissioning this work from you and said you know I can solve this problem in a pretty easy way but some have this interesting side",
    "start": "1973070",
    "end": "1978500"
  },
  {
    "text": "effect you're never going to play the same track twice at all right and the solution you're thinking of us is going",
    "start": "1978500",
    "end": "1983930"
  },
  {
    "text": "to say okay here's my list I shuffle it then I basically what I do is I have a copy of it and I just basically you know",
    "start": "1983930",
    "end": "1990320"
  },
  {
    "text": "after it's been shuffled I go and play a track and just take it off the list and then at a certain point you're gonna end up not having anything the list and",
    "start": "1990320",
    "end": "1996140"
  },
  {
    "text": "then you basically do that again right is our code much simpler when we do something like this yeah I can be right",
    "start": "1996140",
    "end": "2003190"
  },
  {
    "text": "but notice the thing that's that well think to me that's very interesting that this is the way that we interact with requirements right we were actually",
    "start": "2003190",
    "end": "2009730"
  },
  {
    "text": "going a saying well look we can basically make our code less complex if we change the problem a little bit and",
    "start": "2009730",
    "end": "2014830"
  },
  {
    "text": "it's great when you're in an organization or in the context where you have that kind of play to actually say",
    "start": "2014830",
    "end": "2020200"
  },
  {
    "text": "look you know this is not really you know here's you know so you might think this like a hard-and-fast requirement but if we change it a little bit this",
    "start": "2020200",
    "end": "2026230"
  },
  {
    "text": "way it makes our code easier to deal with and it feels like we should feel couple of doing that sort of thing you",
    "start": "2026230",
    "end": "2031900"
  },
  {
    "text": "know going in like looking at generalizing or code in particular ways that allow us to gonna basically avoid edge cases and make things a bit easier",
    "start": "2031900",
    "end": "2037870"
  },
  {
    "text": "to deal with so it's kind of funny anybody hear of like the five why's at",
    "start": "2037870",
    "end": "2043330"
  },
  {
    "text": "all it's kind of like you know asking you know if there's a fault and you're doing like root cause analysis why did this",
    "start": "2043330",
    "end": "2048879"
  },
  {
    "text": "happen and then why didn't you know that kind of thing it's interesting it's we can play the same game when we're designing we can have this thing of like",
    "start": "2048880",
    "end": "2055720"
  },
  {
    "text": "well I'm opening a file okay and when I open the file something go wrong okay oh it's like - hey no errors right that's",
    "start": "2055720",
    "end": "2062440"
  },
  {
    "text": "just a natural thing that we have to do with this but the important thing to go is say okay well why am i opening a file oh I'm opening a file because I need to",
    "start": "2062440",
    "end": "2069129"
  },
  {
    "text": "read a config right need to read this configuration populate configuration database then you say well gee why do I",
    "start": "2069130",
    "end": "2074409"
  },
  {
    "text": "have to read a configuration well it's because I'm trying to initialize the system so I can go and bring it up right at every step of this chain you can",
    "start": "2074410",
    "end": "2081790"
  },
  {
    "text": "start thinking about alternatives that can basically be things you can explore if one of these things particular on and",
    "start": "2081790",
    "end": "2087510"
  },
  {
    "text": "as I mentioned earlier it's like this there's an interesting thing where you know a lot of error healing is basically",
    "start": "2087510",
    "end": "2093159"
  },
  {
    "text": "related to the distance between the a problem and actually deciding what the only do about it right when you follow",
    "start": "2093160",
    "end": "2099309"
  },
  {
    "text": "this chain you might start think about alternative courses of action that you might want to go and explore like for instance you might go and say well gee",
    "start": "2099309",
    "end": "2104890"
  },
  {
    "text": "if I can't read the configuration is it okay for me to actually create a default configuration and then notify people and",
    "start": "2104890",
    "end": "2111160"
  },
  {
    "text": "let them know there's like okay well we keep we brought the system up using the default configuration because the other one and it depends upon the context in",
    "start": "2111160",
    "end": "2117369"
  },
  {
    "text": "some context that's okay and now there's this kind of like that to be a disaster you really want to go and put people through that sort of thing so we should",
    "start": "2117369",
    "end": "2124510"
  },
  {
    "text": "always questionnaires you know I don't think we're gonna be able to eliminate errors completely across systems but to",
    "start": "2124510",
    "end": "2130119"
  },
  {
    "text": "be able to go and say you know it's like well why is there an error here could the system be organized in different ways where we didn't have that error",
    "start": "2130119",
    "end": "2135910"
  },
  {
    "text": "could we alter the requirements in such a way where we wouldn't have to go do that particular thing and this going",
    "start": "2135910",
    "end": "2141220"
  },
  {
    "text": "through that particular thing we not only get the benefit of having you know fewer potential errors but also simplifying our systems sometimes okay",
    "start": "2141220",
    "end": "2148859"
  },
  {
    "text": "so let's talk about edges a bit more it's interesting that back in the early",
    "start": "2148859",
    "end": "2154809"
  },
  {
    "text": "cable days you know like everybody had like a set-top box and you'd like you know you have your remote and the",
    "start": "2154809",
    "end": "2160930"
  },
  {
    "text": "software is firmware in a box someplace and you know nowadays it's like",
    "start": "2160930",
    "end": "2166329"
  },
  {
    "text": "everybody can use an app on their phone to go and change things to hang up on what streaming service they use and just connect with the TV you know like",
    "start": "2166329",
    "end": "2172510"
  },
  {
    "text": "Wireless thing and just do that sort of thing it's interesting with this to go and notice that you know we're putting the network between things and we've",
    "start": "2172510",
    "end": "2178690"
  },
  {
    "text": "been doing this for ages in the industry putting the network between different things and it's kind of nice the cool",
    "start": "2178690",
    "end": "2184390"
  },
  {
    "text": "thing about this though is that when we do this we quite often basically allow ourselves to go and have a different kind of system than we would have",
    "start": "2184390",
    "end": "2190180"
  },
  {
    "text": "otherwise I draw a distinction when you're doing design and systems between what I call tenant systems and untended",
    "start": "2190180",
    "end": "2196180"
  },
  {
    "text": "systems and the tendency is meant to have way more attended systems these days so what do you mean by what I mean",
    "start": "2196180",
    "end": "2202390"
  },
  {
    "text": "by untended system it's like you know imagine you have some probe you sent off the far end of the solar system and it's",
    "start": "2202390",
    "end": "2209859"
  },
  {
    "text": "like there's a lot of things that have to really always work there because there's not gonna be anybody over there to fix that problem if the problem",
    "start": "2209859",
    "end": "2216069"
  },
  {
    "text": "occurs right so you can't count on having somebody there to actually deal with those particular issues and there's",
    "start": "2216069",
    "end": "2222609"
  },
  {
    "text": "lots of you know real-life systems where you have that kind of you have to be really careful about errors because",
    "start": "2222609",
    "end": "2227620"
  },
  {
    "text": "you know essentially you know there's just uh there's no alternative there's not gonna be anybody really going to fix things but as we put more and more",
    "start": "2227620",
    "end": "2234010"
  },
  {
    "text": "things on the network you know quite often you're working organizations we have operations support and all these other people can help out what something",
    "start": "2234010",
    "end": "2239590"
  },
  {
    "text": "bad goes on it can really allow yourself to get more into this fail-fast mode with things but it's not Universal okay",
    "start": "2239590",
    "end": "2246250"
  },
  {
    "text": "fail-fast is a nice strategy but there are many cases where you just you have",
    "start": "2246250",
    "end": "2251410"
  },
  {
    "text": "to keep a system running no matter what and it's like you know like Erlang it's really good for things like it's like",
    "start": "2251410",
    "end": "2256510"
  },
  {
    "text": "telephone switches and stuff along those lines so thinking about that drunk design space between 10 to the ninth end",
    "start": "2256510",
    "end": "2261580"
  },
  {
    "text": "it is rather valuable elevator controllers right it's like you know you don't want to be in a situation where if",
    "start": "2261580",
    "end": "2267820"
  },
  {
    "text": "the network goes down people are stuck right so you have to have stuff that runs no matter why and this",
    "start": "2267820",
    "end": "2272890"
  },
  {
    "text": "fundamentally alters way you design systems and not re systems like this you know if the typical thing in UNIX is to",
    "start": "2272890",
    "end": "2279280"
  },
  {
    "text": "fail fast their string together command-line utilities on a command line it's like that's great because you have an operator everybody knows that you're",
    "start": "2279280",
    "end": "2285160"
  },
  {
    "text": "feeling fast and you have to tend things and you know at least have something to look at the logs and see what's going on with this so it seems like for",
    "start": "2285160",
    "end": "2292990"
  },
  {
    "text": "robustness you need a human in the loop that can basically solve problems when they occur the interesting thing about this and we kind of skip ahead is is",
    "start": "2292990",
    "end": "2300270"
  },
  {
    "text": "that you know when you're working in a system you know you know if you're using a language like airline what I find kind",
    "start": "2300270",
    "end": "2306850"
  },
  {
    "text": "of fascinating is that all this stuff that you have an airline with like and things like supervisor trees and all these other things essentially that's a",
    "start": "2306850",
    "end": "2313210"
  },
  {
    "text": "way of mimicking the human you would have in the loop normally right it's kind of like you know you can say let's",
    "start": "2313210",
    "end": "2318760"
  },
  {
    "text": "go ahead and beg sit let's bail fast and that's fine and you know this is like saying okay well if this thing fails",
    "start": "2318760",
    "end": "2325330"
  },
  {
    "text": "we're gonna put some process inside to go and heal the system you actually going to say well I need to reboot this",
    "start": "2325330",
    "end": "2331090"
  },
  {
    "text": "thing and that's not us saying that it's the particulars supervisor process we have within the airline they do these things so this really is I'm gonna kind",
    "start": "2331090",
    "end": "2338770"
  },
  {
    "text": "of differ a bit with you know a lot people are looking at systems like this and you know I care lying innaka and",
    "start": "2338770",
    "end": "2343780"
  },
  {
    "text": "stuff like that saying this is the way to go for everything I think it's really a cost choice it's a safety choice you have to decide whether you really are in",
    "start": "2343780",
    "end": "2350260"
  },
  {
    "text": "one of those systems where you have to have that kind of recovery built into things or not there's all different kinds of systems and the way we approach",
    "start": "2350260",
    "end": "2355360"
  },
  {
    "text": "everything really does depend upon this thing whether it's attended or and untended",
    "start": "2355360",
    "end": "2360710"
  },
  {
    "text": "so yeah safety is pretty hard work you know where do we want it you know they're places like you know operating",
    "start": "2360710",
    "end": "2366680"
  },
  {
    "text": "system kernels you know would you want to be the person that calls Linux up in the middle of the night and says hey my kernel is not working you know it's kind",
    "start": "2366680",
    "end": "2373039"
  },
  {
    "text": "of like so there are certain things that you want to go and have a degree of you know you know care and coding you might",
    "start": "2373039",
    "end": "2380420"
  },
  {
    "text": "want to use proofs you know very strong types and stuff like that to make sure that these things are all the things so just sort of like you know be robust in",
    "start": "2380420",
    "end": "2387109"
  },
  {
    "text": "the face of these things and other places rebound so yeah error proofing is important when there is no real supervision",
    "start": "2387109",
    "end": "2394089"
  },
  {
    "text": "another aspect all this is really what is there a cost to going and making our code safer and safer you know I noticed",
    "start": "2394089",
    "end": "2401269"
  },
  {
    "text": "more and more people are you know they were doing a lot with like rust now and basically try and go and eliminate lots of possible error sources by being very",
    "start": "2401269",
    "end": "2407420"
  },
  {
    "text": "strict in the language and if I use the rust at all yeah yeah so it's very nice the thing I think it's kind of",
    "start": "2407420",
    "end": "2413930"
  },
  {
    "text": "interesting it's the only notice that there's like an outer feedback loop that's not really part of the language it's also part of the teams they're",
    "start": "2413930",
    "end": "2420470"
  },
  {
    "text": "producing things that's kind of interesting there's a an interesting experiment was run about ten years or so",
    "start": "2420470",
    "end": "2427640"
  },
  {
    "text": "ago I think in Germany and in England and it was to go and remove all the traffic signals in urban areas in",
    "start": "2427640",
    "end": "2434599"
  },
  {
    "text": "inner-city areas and small villages and stuff like that so II think happened",
    "start": "2434599",
    "end": "2440079"
  },
  {
    "text": "there's a little blurb there telling you what happened actually accidents were reduced when you removed the signals and",
    "start": "2440079",
    "end": "2446660"
  },
  {
    "text": "you also removed like the guidelines to go and show where you are in your lane why would that make things safer you",
    "start": "2446660",
    "end": "2453680"
  },
  {
    "text": "become more careful because you're like Oh am I in the street or am I like on the sidewalk I don't know they're slowed down that kind of thing right but isn't",
    "start": "2453680",
    "end": "2461329"
  },
  {
    "text": "this counterintuitive though yeah it's kind of an odd thing and it's like you know I think that we've got this really",
    "start": "2461329",
    "end": "2467269"
  },
  {
    "text": "interesting cultural thing going on in programming right now with regard to errors because like the rust community and several others are dealing with this",
    "start": "2467269",
    "end": "2472940"
  },
  {
    "text": "thing of like let's make sure that these things can't happen in da da da da then you have people like in the air line",
    "start": "2472940",
    "end": "2478099"
  },
  {
    "text": "going and saying well ears are gonna happen let's go ahead and sort of like build a supervision process to make sure that you know we can at least recover",
    "start": "2478099",
    "end": "2483380"
  },
  {
    "text": "and we can do good things if something does go wrong to very fundamentally the different four philosophies the other",
    "start": "2483380",
    "end": "2488420"
  },
  {
    "text": "dimension kind of like bringing to this here is the degree to which being careful in actually care is like",
    "start": "2488420",
    "end": "2495420"
  },
  {
    "text": "engendered in programming by having an element of hazard and the personal story that I'll tell about this was when I was",
    "start": "2495420",
    "end": "2503609"
  },
  {
    "text": "in University which is ages ago got my gray right I was learning Pascal which",
    "start": "2503609",
    "end": "2508890"
  },
  {
    "text": "is like a very early language my Nicholas work and it was you know first programming language but I'd already learned how to program before my first",
    "start": "2508890",
    "end": "2514799"
  },
  {
    "text": "programming course I learned how to program in C and it was fasting because I was at the computer lab one time is sitting next to this person and looking",
    "start": "2514799",
    "end": "2521849"
  },
  {
    "text": "over and this is like almost the end of the course and realizing that they were getting array subscript out-of-bounds exceptions and I'd never seen one before",
    "start": "2521849",
    "end": "2528180"
  },
  {
    "text": "in my life and I thought wow you know she's getting this on her screen it's like how come I haven't seen that and it's like oh when you work in C you",
    "start": "2528180",
    "end": "2535530"
  },
  {
    "text": "learn very quickly not to do this right because once you go out of bounds you're in this terrible debugging hellhole you",
    "start": "2535530",
    "end": "2541200"
  },
  {
    "text": "know and it's kind of rough that way so yeah there's this thing where basically the possibility the area goes and gives",
    "start": "2541200",
    "end": "2547319"
  },
  {
    "text": "us a bit more diligence in certain spaces and I think it's something we have to kind of like factor into you",
    "start": "2547319",
    "end": "2552809"
  },
  {
    "text": "know our you know a broad view of what errors are and stuff like that in systems yeah so I I don't even really",
    "start": "2552809",
    "end": "2560549"
  },
  {
    "text": "like the word error anymore I think it's kind of an interesting thing to try to reframe you know there are things that can happen in code we should try to go",
    "start": "2560549",
    "end": "2567000"
  },
  {
    "text": "and challenge them and see if we can get rid of them you know things like I",
    "start": "2567000",
    "end": "2572640"
  },
  {
    "text": "mentioned earlier about going actually making them part of the domain like item not found is a thing that happens in your code it's not something I ought to",
    "start": "2572640",
    "end": "2578490"
  },
  {
    "text": "go and create an exception for specifically all those things are worth going and dealing with and it also the",
    "start": "2578490",
    "end": "2583529"
  },
  {
    "text": "only ask yourself can I have a system where you know that error is impossible and just asking that question sometimes",
    "start": "2583529",
    "end": "2588660"
  },
  {
    "text": "allows to see one get to a place where things can be much better so I think the",
    "start": "2588660",
    "end": "2594150"
  },
  {
    "text": "thing I'm kind of you know trying to explore with us is that you know code can work under many conditions and there",
    "start": "2594150",
    "end": "2600720"
  },
  {
    "text": "are conditions that we don't want our code to under work under and we call those error conditions so the big",
    "start": "2600720",
    "end": "2606089"
  },
  {
    "text": "question is can we actually go ahead and increase number of conditions our code can work under often by generalizing or",
    "start": "2606089",
    "end": "2611700"
  },
  {
    "text": "like a bit more design and gets the point we're just kind of list runs unconditionally it doesn't doesn't tell",
    "start": "2611700",
    "end": "2617880"
  },
  {
    "text": "the user hey you can't do this it basically sort of like curtail some options they even think of doing the bad",
    "start": "2617880",
    "end": "2623400"
  },
  {
    "text": "thing right that's a you user interface type of thing using structure inside of your",
    "start": "2623400",
    "end": "2628440"
  },
  {
    "text": "code that basically is less prone to error okay there the good thing become so much more natural to do and I think",
    "start": "2628440",
    "end": "2634500"
  },
  {
    "text": "you know it's worthwhile you know era Handley it's not just option monads and exceptions those are mechanisms you know",
    "start": "2634500",
    "end": "2640950"
  },
  {
    "text": "all this stuff is designed and we have to kind of deal with those those things that way so I want to leave it there",
    "start": "2640950",
    "end": "2646680"
  },
  {
    "text": "open for questions Thanks",
    "start": "2646680",
    "end": "2651619"
  },
  {
    "text": "[Applause]",
    "start": "2651870",
    "end": "2659190"
  }
]