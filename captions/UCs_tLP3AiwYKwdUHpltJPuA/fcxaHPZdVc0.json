[
  {
    "text": "guil is not really uh very popular in Europe uh it's fairly popular in the US",
    "start": "3760",
    "end": "9719"
  },
  {
    "text": "and it kind of arose out of the kind of the recession and and there was a big glut of global of kind of luxury Brands",
    "start": "9719",
    "end": "17439"
  },
  {
    "text": "uh that couldn't get rid of their merchandise and uh so guilt built a business around that it's it's an e-commerce site with it's looks fairly",
    "start": "17439",
    "end": "25960"
  },
  {
    "text": "predictable um in that regard uh but there's a lot of dynamic Behavior behind",
    "start": "25960",
    "end": "32439"
  },
  {
    "text": "it uh sales change all the time and as Steve indicated there is this Stampede effect um when particularly more popular",
    "start": "32439",
    "end": "39719"
  },
  {
    "text": "brands go on sale and there's a lot of scarcity around it and it's typically really kind of desirable items and",
    "start": "39719",
    "end": "45360"
  },
  {
    "text": "they're they're uh incredibly cheap um or at least fairly cheap essentially",
    "start": "45360",
    "end": "50440"
  },
  {
    "text": "every day is is a little bit like the Super Bowl where there is this moment when everything changes and people kind",
    "start": "50440",
    "end": "56600"
  },
  {
    "text": "of on their lunch break particularly in the east coast of the US start hammering on the site and uh this graph doesn't",
    "start": "56600",
    "end": "63239"
  },
  {
    "text": "even really capture how intense it is because it just doesn't have enough resolution it really is down in into the",
    "start": "63239",
    "end": "69520"
  },
  {
    "text": "kind of uh millisecond range we see this incredible surge of traffic go through",
    "start": "69520",
    "end": "74759"
  },
  {
    "text": "the system and it really uh kind of brings unusual non-functional requirements in terms of",
    "start": "74759",
    "end": "81520"
  },
  {
    "text": "how we have to deal with things and it it's been a lot of it's been a challenge and what started as kind of a generic",
    "start": "81520",
    "end": "88360"
  },
  {
    "text": "website uh ran into technical challenges which sort of shaped the future of tech and the company in in kind of good ways",
    "start": "88360",
    "end": "96560"
  },
  {
    "text": "um just very quickly as a tech company these are the kinds of things that we're",
    "start": "96560",
    "end": "101600"
  },
  {
    "text": "using these days um and part of this talk is a little bit about the the path that we took to get there",
    "start": "101600",
    "end": "109119"
  },
  {
    "text": "um yeah I'm not going to talk a huge amount about this stuff although I wanted to give kind of a sense of where",
    "start": "109119",
    "end": "115399"
  },
  {
    "text": "we are in the tech landscape and we've really embraced microservices uh pretty seriously kind of based on on the",
    "start": "115399",
    "end": "122159"
  },
  {
    "text": "outcome of what I'm going to talk to talk about today um so when we started it was a very simple website really and and I say",
    "start": "122159",
    "end": "129560"
  },
  {
    "text": "we this is actually before my time um rails and postc crust and and they are",
    "start": "129560",
    "end": "135120"
  },
  {
    "text": "amazing and there really probably isn't a better way for a startup to get going",
    "start": "135120",
    "end": "140400"
  },
  {
    "text": "quickly and there was you know there was sort of a vision around this business of all these brands have the stuff that",
    "start": "140400",
    "end": "145599"
  },
  {
    "text": "they're going to destroy and and could we actually create a market for that and and we did create a market for that and",
    "start": "145599",
    "end": "151400"
  },
  {
    "text": "it it went pretty well and growth was was very quick in kind of 2008 into",
    "start": "151400",
    "end": "157239"
  },
  {
    "text": "2009 and then uh we signed up a shoe manufacturer that",
    "start": "157239",
    "end": "163120"
  },
  {
    "text": "probably no one in this room has heard of maybe one or two people I had",
    "start": "163120",
    "end": "168319"
  },
  {
    "text": "certainly never heard of it I I don't actually have any shoes that look like this but there are people who who really",
    "start": "168319",
    "end": "173720"
  },
  {
    "text": "like these shoes in fact a lot of people and this was a very very hard brand for us to to get a deal with because uh you",
    "start": "173720",
    "end": "180599"
  },
  {
    "text": "know these brands are very sensitive about uh never having their things on their their merchandise on sale and so",
    "start": "180599",
    "end": "186599"
  },
  {
    "text": "we have to it was a sort of a delicate dance to get them to sign up and then everything really had to go well for",
    "start": "186599",
    "end": "192720"
  },
  {
    "text": "them to be happy and so getting this friend was a serious coup and it",
    "start": "192720",
    "end": "198200"
  },
  {
    "text": "absolutely destroyed this I I mean it was just like I mean it was down for hours and you know people crying and it",
    "start": "198200",
    "end": "205959"
  },
  {
    "text": "was not not a good day for uh the detch team in particular and so basically we",
    "start": "205959",
    "end": "213519"
  },
  {
    "text": "had to figure out or they had to figure out still before my time um what it would take to actually make this",
    "start": "213519",
    "end": "219959"
  },
  {
    "text": "work and what it was actually going to take was something like 300 servers and",
    "start": "219959",
    "end": "225360"
  },
  {
    "text": "keep in mind that you know there's this incredible pulse of traffic that lasts for 10 minutes so you either have to",
    "start": "225360",
    "end": "231000"
  },
  {
    "text": "figure out how to spin all this capacity up um which at the time was still a little bit risky or you have to have all",
    "start": "231000",
    "end": "236760"
  },
  {
    "text": "this spare capacity around but it just seemed like an awful lot of hardware for uh",
    "start": "236760",
    "end": "243840"
  },
  {
    "text": "this unusual use case so there was a bit of a a bit of a transition in the",
    "start": "243840",
    "end": "249120"
  },
  {
    "text": "company in fact they called they had hired a lot of really good Ruby developers and and people who really",
    "start": "249120",
    "end": "254720"
  },
  {
    "text": "really loved Ruby and basically the decision was made to look at this guy",
    "start": "254720",
    "end": "260000"
  },
  {
    "text": "which is the jvm and it was a very traumatic event actually for a lot of the Ruby developers and in fact they",
    "start": "260000",
    "end": "266199"
  },
  {
    "text": "occasionally get called the Ruby Taliban now because it was they just just it's like the idea of running the site on six",
    "start": "266199",
    "end": "273440"
  },
  {
    "text": "servers uh even though that seemed good it wasn't Ruby and uh so there was a little bit of a a transition that",
    "start": "273440",
    "end": "280360"
  },
  {
    "text": "happened in terms of the tech culture at guilt um and a pretty small team of",
    "start": "280360",
    "end": "286639"
  },
  {
    "text": "maybe five people ended up rewriting kind of the entire text stack into this",
    "start": "286639",
    "end": "291919"
  },
  {
    "text": "very kind of coar grained uh kind of service oriented architecture they broke it up in very",
    "start": "291919",
    "end": "298600"
  },
  {
    "text": "sensible ways users and orders and payments and products and the cart and Page gen was a sort of a page generation",
    "start": "298600",
    "end": "306960"
  },
  {
    "text": "Services you can imagine in the front end uh there's this thing they called Swift which was basically a JSP engine",
    "start": "306960",
    "end": "315199"
  },
  {
    "text": "and Incredibly simple really um and it",
    "start": "315199",
    "end": "320240"
  },
  {
    "text": "worked and they actually could could have uh made it through the lubaton sale uh with something like six servers so",
    "start": "320240",
    "end": "327360"
  },
  {
    "text": "they were happy it was all looking good um and actually it's kind of a nice",
    "start": "327360",
    "end": "332560"
  },
  {
    "text": "architecture you have a front-end server and it can call out to lots of ser services and compose basically the what",
    "start": "332560",
    "end": "340000"
  },
  {
    "text": "it gets back from those services to form a page um and that's kind of something",
    "start": "340000",
    "end": "345360"
  },
  {
    "text": "that's not that hard to get your head around and it sort of you can break the work up into teams and the kind of the",
    "start": "345360",
    "end": "351240"
  },
  {
    "text": "core idea here was that all these service calls were made using futures um",
    "start": "351240",
    "end": "356639"
  },
  {
    "text": "and if you're lucky you can make all these future calls very early in the request and by the time you actually render the page all the data is there",
    "start": "356639",
    "end": "362680"
  },
  {
    "text": "and it goes really really fast and it it did go fast it was everything was low",
    "start": "362680",
    "end": "368199"
  },
  {
    "text": "tech and and surprisingly fast actually I still am surprised at how well the jvm",
    "start": "368199",
    "end": "374240"
  },
  {
    "text": "works uh at least under certain certain conditions um so it was really I mean",
    "start": "374240",
    "end": "381240"
  },
  {
    "text": "we're looking at a very old-fashioned architecture really it's just like a three- tier architecture not not really",
    "start": "381240",
    "end": "388280"
  },
  {
    "text": "sexy in any modern way but you know it's kind of engineering and very reliable um and",
    "start": "388280",
    "end": "397840"
  },
  {
    "text": "what we saw kind of emerg was you know this front end that we could do a lot of caching and could do some computation",
    "start": "397840",
    "end": "402919"
  },
  {
    "text": "and orchestrating these calls to different services and the service tier kind of",
    "start": "402919",
    "end": "408280"
  },
  {
    "text": "got a little bit heavier but though it was still caching and trying to protect the database and the the kind of early",
    "start": "408280",
    "end": "413960"
  },
  {
    "text": "very coar grain service oriented architecture really did a pretty good job separating concern",
    "start": "413960",
    "end": "420680"
  },
  {
    "text": "and then we had a few different databases um although one very very important database which was very hard",
    "start": "420680",
    "end": "426840"
  },
  {
    "text": "to scale um and fusion iio actually saved the day there uh postgress and",
    "start": "426840",
    "end": "433120"
  },
  {
    "text": "fusion IO is amazing but that's uh probably a different talk um and so I",
    "start": "433120",
    "end": "439720"
  },
  {
    "text": "sort of colored this because uh sort of how we we think of it as kind of the temperature of these things and there's",
    "start": "439720",
    "end": "444840"
  },
  {
    "text": "both the kind of the runtime temperature and but also the development temperature so the you you know if things are",
    "start": "444840",
    "end": "449960"
  },
  {
    "text": "working well the front end is super super busy and we've got that scaled across a lot of machines and it tends to be CPU completely maxed",
    "start": "449960",
    "end": "457160"
  },
  {
    "text": "out the service tier kind of pretty busy but hopefully not as busy and basically",
    "start": "457160",
    "end": "463360"
  },
  {
    "text": "at this point uh if we hit the database uh it's probably going to be a sight outage we we would never hit the",
    "start": "463360",
    "end": "469560"
  },
  {
    "text": "database uh when we're busy um and strangely enough the it also kind of",
    "start": "469560",
    "end": "475960"
  },
  {
    "text": "reflects the where the developers are most busy there's just a constant set of features um and uh bug fixes and browser",
    "start": "475960",
    "end": "485000"
  },
  {
    "text": "compatibility and stuff and and the code turns all the time in the front end and and similar to the kind of access patterns it slows down as you get closer",
    "start": "485000",
    "end": "491639"
  },
  {
    "text": "to the data um so looking kind of at how that data",
    "start": "491639",
    "end": "498919"
  },
  {
    "text": "moves through the system what what we started doing in the in kind of the initial version of this thing was to",
    "start": "498919",
    "end": "504879"
  },
  {
    "text": "basically make it very similar to Ruby um and the reason for doing that was",
    "start": "504879",
    "end": "510840"
  },
  {
    "text": "basically performance and I when I this is kind of about the time when I joined and I had",
    "start": "510840",
    "end": "516200"
  },
  {
    "text": "never seen anything quite like this and I'm still a little bit in shock over it um it was the most lowte Java I'd ever",
    "start": "516200",
    "end": "524000"
  },
  {
    "text": "seen I I came in from kind of a spring and a maven and a more enterpris background and this was pure jdbc and",
    "start": "524000",
    "end": "531800"
  },
  {
    "text": "like the simplest little library that could turn result sets into hashmaps and then all this code that was operating on",
    "start": "531800",
    "end": "537120"
  },
  {
    "text": "these hashmaps and then using an early version of Jackson to turn it into Json and then from Json back into hashmaps",
    "start": "537120",
    "end": "544920"
  },
  {
    "text": "and uh it was fast is about the nicest",
    "start": "544920",
    "end": "550200"
  },
  {
    "text": "thing I can say about it uh I mean it was like Ruby in away only much more horrible um I mean there's just no type",
    "start": "550200",
    "end": "558440"
  },
  {
    "text": "safety anywhere in the system really and and the thing is like Java programmers expect some degree of type safety and so",
    "start": "558440",
    "end": "565920"
  },
  {
    "text": "it's there was a kind of an impedance mismatch over how how the system was AR protected and how people uh could deal",
    "start": "565920",
    "end": "572519"
  },
  {
    "text": "with it and and kind of what happens there is you get something I think of as like designed by a cre where you can't",
    "start": "572519",
    "end": "577959"
  },
  {
    "text": "actually ever take anything away and so people just keep adding things you can't it's impossible to track down who's",
    "start": "577959",
    "end": "583680"
  },
  {
    "text": "using what you can try and search the code and I mean you can sort of get there but it's expensive and error prone",
    "start": "583680",
    "end": "590680"
  },
  {
    "text": "um to figure out who depends on these different values particularly if they're named something stupid uh a name that",
    "start": "590680",
    "end": "597720"
  },
  {
    "text": "appears everywhere so you can never remove things and things just kind of grow and basically in here the chaos",
    "start": "597720",
    "end": "603320"
  },
  {
    "text": "gets out of hand um surprisingly quickly and so that",
    "start": "603320",
    "end": "608800"
  },
  {
    "text": "that was kind of not great and then Meanwhile we're kind of scaling this whole thing across a bunch of services",
    "start": "608800",
    "end": "615279"
  },
  {
    "text": "and there was just this incredible sort of Divergence of meaning and",
    "start": "615279",
    "end": "621160"
  },
  {
    "text": "uh and it just got worse and and then we wanted to try and add",
    "start": "621160",
    "end": "626320"
  },
  {
    "text": "people uh into this system and basically no no one really could really understand how this system worked it was not a",
    "start": "626320",
    "end": "632839"
  },
  {
    "text": "happy onboarding experience I think for a lot of people um and so there was definitely a problem there are some",
    "start": "632839",
    "end": "639440"
  },
  {
    "text": "things that we really felt were going pretty well definitely the system was really really fast and and the service",
    "start": "639440",
    "end": "645560"
  },
  {
    "text": "decomposition wasn't wasn't horrible um and there was an implicit core model",
    "start": "645560",
    "end": "650720"
  },
  {
    "text": "that we'd really seen work and at this point guilt was selling a lot of different things including wine and all",
    "start": "650720",
    "end": "656279"
  },
  {
    "text": "these things had very kind of complicated sales models and that stuff had been figured out and all of it was working and so there was something",
    "start": "656279",
    "end": "663320"
  },
  {
    "text": "definitely really good there um but we were failing pretty hard kind of on the org scaling part and there was no real",
    "start": "663320",
    "end": "669880"
  },
  {
    "text": "discernable apis anywhere that anyone could see um and and basically the implicit",
    "start": "669880",
    "end": "677480"
  },
  {
    "text": "core model that was good was ALS because it was implicit it was incredibly hard to reason about and lots of bugs were",
    "start": "677480",
    "end": "684519"
  },
  {
    "text": "made about bad assumptions and it was you know it was it was a mess um",
    "start": "684519",
    "end": "690200"
  },
  {
    "text": "and so we were pretty sure we knew what we wanted which was a core data model and an A and API everywhere and it's you",
    "start": "690200",
    "end": "696800"
  },
  {
    "text": "know it's not rocket science um or at least one hopes it isn't rocket science",
    "start": "696800",
    "end": "702240"
  },
  {
    "text": "um I I think what's interesting to me is everybody talks about wanting this stuff but actually it never seems to happen um",
    "start": "702240",
    "end": "710399"
  },
  {
    "text": "or or less rarely than it should so I was actually pretty happy to get to be",
    "start": "710399",
    "end": "716639"
  },
  {
    "text": "uh involved in this and um but there is one thing that worried me a little bit",
    "start": "716639",
    "end": "723839"
  },
  {
    "text": "and that is that it starts to feel a little bit like RPC and uh tying it into Steve I've been",
    "start": "723839",
    "end": "730800"
  },
  {
    "text": "reading uh Steve's work for a long time and I'm not sure how familiar uh you are",
    "start": "730800",
    "end": "736320"
  },
  {
    "text": "with Steve's work but he was uh a series proponent of corbo which was a distributed object model and all about",
    "start": "736320",
    "end": "742279"
  },
  {
    "text": "RPC and he swung quite far the opposite direction and wrote quite a lot about it and if you're not familiar with his",
    "start": "742279",
    "end": "748079"
  },
  {
    "text": "writings you should definitely check it out um but despite this little",
    "start": "748079",
    "end": "753320"
  },
  {
    "text": "niggling concern in the back of my mind we we uh decided to carry on um and so",
    "start": "753320",
    "end": "759760"
  },
  {
    "text": "we had basically all these core services that were this sort of legacy and they were all built completely differently",
    "start": "759760",
    "end": "764959"
  },
  {
    "text": "and actually internally they were sort of exposing Json RPC end points and and",
    "start": "764959",
    "end": "770519"
  },
  {
    "text": "all the problems I sort of highlighted around type safety but they were working and we didn't really want to touch them",
    "start": "770519",
    "end": "777240"
  },
  {
    "text": "but we were really stuck um and it was very hard to upgrade the system in a meaningful way uh mostly because uh of",
    "start": "777240",
    "end": "786560"
  },
  {
    "text": "the reasons I highlighted earlier so so the approach that we took was a little",
    "start": "786560",
    "end": "791600"
  },
  {
    "text": "bit it actually felt wrong but we decided to try it um and so we had all these these get",
    "start": "791600",
    "end": "798680"
  },
  {
    "text": "repos and and my my instincts kind of told me that we should try and create clients For The Individual Services with",
    "start": "798680",
    "end": "805199"
  },
  {
    "text": "the services um and we we had sort of a group think about it",
    "start": "805199",
    "end": "812600"
  },
  {
    "text": "and and decided that we would start out not doing that despite the fact I was pretty sure that was wrong but I figured",
    "start": "812600",
    "end": "818839"
  },
  {
    "text": "we could fix it later and so we made just this single repo that was basically",
    "start": "818839",
    "end": "824360"
  },
  {
    "text": "the entire core data model and clients for all the core services and this async",
    "start": "824360",
    "end": "829639"
  },
  {
    "text": "client framework um that would hopefully make it relatively straightforward to",
    "start": "829639",
    "end": "834800"
  },
  {
    "text": "create clients um so by a client is I'm really is talking about like a Java interface",
    "start": "834800",
    "end": "841959"
  },
  {
    "text": "um that defines the endpoints on a service uh and you call into this thing",
    "start": "841959",
    "end": "847800"
  },
  {
    "text": "and it makes a call to the service and you get something back also known as RPC",
    "start": "847800",
    "end": "854120"
  },
  {
    "text": "um but there were a couple of things that that we were doing a little bit differently than uh",
    "start": "854120",
    "end": "860560"
  },
  {
    "text": "at least it had been done in the past we were building everything around futures um as I mentioned and that was one of",
    "start": "860560",
    "end": "867800"
  },
  {
    "text": "the things that made me feel like maybe this was not going to be a disaster um then the core model the data",
    "start": "867800",
    "end": "875519"
  },
  {
    "text": "model uh we built in as well so everything that kind of was needed across the site which up to that point",
    "start": "875519",
    "end": "882240"
  },
  {
    "text": "had been hash Maps we tried to actually nail down what it was and we found bugs and we went through and fixed a lot of",
    "start": "882240",
    "end": "887399"
  },
  {
    "text": "bugs and a lot of services and um it came together actually pretty",
    "start": "887399",
    "end": "893440"
  },
  {
    "text": "quickly and uh it seemed sort of okay um",
    "start": "893440",
    "end": "899519"
  },
  {
    "text": "but it what it didn't really offer a very good solution for how we were going to continue to add Services uh and and",
    "start": "899519",
    "end": "906720"
  },
  {
    "text": "services with clients going forward um and actually was sort of an interesting",
    "start": "906720",
    "end": "912800"
  },
  {
    "text": "case where the tools shaped our thinking we were using ant at that point and ant is very hard to",
    "start": "912800",
    "end": "918839"
  },
  {
    "text": "use um particularly to do something like a multimodule build uh where you can think of a a",
    "start": "918839",
    "end": "925240"
  },
  {
    "text": "single logical kind of project that can publish multiple jars that was it can be",
    "start": "925240",
    "end": "931000"
  },
  {
    "text": "done but we weren't doing it and it this was a point where we sort of realized that actually the decision to uh to put",
    "start": "931000",
    "end": "938000"
  },
  {
    "text": "everything in one jar been partially motivated by the fact that it was hard to do anything else um as so often the",
    "start": "938000",
    "end": "946000"
  },
  {
    "text": "case so we did fix that and uh and so we started to think about a single get repo that had uh like a service and a client",
    "start": "946000",
    "end": "954279"
  },
  {
    "text": "and and kind of a core which I'll talk about in a minute um and we wanted to make the the services",
    "start": "954279",
    "end": "961000"
  },
  {
    "text": "restful um as much as we could and we decided to write the the clients in Scala which we really liking um for a",
    "start": "961000",
    "end": "969519"
  },
  {
    "text": "whole bunch of reasons that I won't get too into and as I mentioned everything was going to be future based and then we",
    "start": "969519",
    "end": "976639"
  },
  {
    "text": "made the kind of uh controversial at the time decision that we were actually going to hedge our",
    "start": "976639",
    "end": "983000"
  },
  {
    "text": "bets in terms of the kind of protocol or the kind of the sort of encoding of data",
    "start": "983000",
    "end": "989040"
  },
  {
    "text": "between the client and the server um people talk about schema first or they talk about code first and there are lots",
    "start": "989040",
    "end": "994800"
  },
  {
    "text": "of code generation tools and soap and all this scrap so we didn't do any of that",
    "start": "994800",
    "end": "1001000"
  },
  {
    "text": "um we basically looked at case classes in Scala which are this incredibly compact representation of of a a simple",
    "start": "1001000",
    "end": "1008720"
  },
  {
    "text": "class with with virtually no behavior and there're kind of tools that can turn a an instance of a case class into Json",
    "start": "1008720",
    "end": "1016079"
  },
  {
    "text": "or or build that instance from Json or database whatever it's this very",
    "start": "1016079",
    "end": "1021839"
  },
  {
    "text": "very kind of elegant and simple way to represent the kind of thing that you might represent in a schema and again it",
    "start": "1021839",
    "end": "1029120"
  },
  {
    "text": "was quite quite a controversial move um that ended up working out quite well uh",
    "start": "1029120",
    "end": "1035000"
  },
  {
    "text": "so we put we put that stuff in in what we started to call the core um and the core essentially was",
    "start": "1035000",
    "end": "1041798"
  },
  {
    "text": "like a firewall to avoid having any client code depend directly on service code and vice versa um kind of some",
    "start": "1041799",
    "end": "1049760"
  },
  {
    "text": "earlier attempts at guilt to create clients the client had actually just been part of the server jar and uh and",
    "start": "1049760",
    "end": "1057320"
  },
  {
    "text": "so if you wanted to talk to the server you had to actually link to the server itself which led to unspeakable Horrors",
    "start": "1057320",
    "end": "1066200"
  },
  {
    "text": "um in terms of dependencies this is kind of just a simple thing and a simple model for how people could start to",
    "start": "1066200",
    "end": "1072000"
  },
  {
    "text": "learn how to do this uh in a way that we despite the fact that it felt an awful lot like",
    "start": "1072000",
    "end": "1077640"
  },
  {
    "text": "RPC uh seem may be okay um and so what it starts to kind of look",
    "start": "1077640",
    "end": "1084600"
  },
  {
    "text": "like at runtime is you have some consumer of a service and it's it's basically",
    "start": "1084600",
    "end": "1090360"
  },
  {
    "text": "dependent on this client jar and the client jar is dependent on this core jar and uh the the client knows how to",
    "start": "1090360",
    "end": "1098480"
  },
  {
    "text": "call this service um but the client who sort of think of is like an embassy for",
    "start": "1098480",
    "end": "1103840"
  },
  {
    "text": "the service it's very much not really owned by the consumer in any way",
    "start": "1103840",
    "end": "1109320"
  },
  {
    "text": "and uh we tried really really hard to keep the details of its implementation from leaking out uh into the consumer",
    "start": "1109320",
    "end": "1117360"
  },
  {
    "text": "which is actually pretty hard on the jvm it's not the jvm is not good at that um the jsr 291 is kind of looking at this",
    "start": "1117360",
    "end": "1124360"
  },
  {
    "text": "kind of thing and osgi but it in practice it ended up not being a huge deal although the fact that uh we we",
    "start": "1124360",
    "end": "1131400"
  },
  {
    "text": "weren't releasing this to the world probably reduced the amount of crazy things people did with the code",
    "start": "1131400",
    "end": "1137520"
  },
  {
    "text": "um and so we built this kind of ecosystem around this stuff",
    "start": "1137520",
    "end": "1143320"
  },
  {
    "text": "um that seemed kind of nice we we made it really easy to write functional tests for the services by by writing what we",
    "start": "1143320",
    "end": "1150559"
  },
  {
    "text": "essentially like unit tests of the client API um and then we wrote a a way to",
    "start": "1150559",
    "end": "1156840"
  },
  {
    "text": "capture service responses and kind of fiddle with random number generator seeds and and uh be able to replay the",
    "start": "1156840",
    "end": "1165120"
  },
  {
    "text": "conversation in a relatively simple way and that that actually gave us a ton of",
    "start": "1165120",
    "end": "1170720"
  },
  {
    "text": "Leverage um in terms of quality and also being able to deploy really quickly without",
    "start": "1170720",
    "end": "1177400"
  },
  {
    "text": "worrying too much um and as part of this we we came with a very simple way to",
    "start": "1177400",
    "end": "1184320"
  },
  {
    "text": "essentially Express that one particular git repo depends on tests that are in another git repo that sort of fell out",
    "start": "1184320",
    "end": "1191520"
  },
  {
    "text": "of this work and uh we did some work around making things kind of upgradeable on a live system and and and uh also uh",
    "start": "1191520",
    "end": "1201559"
  },
  {
    "text": "one of the one of the things that we've really struggled with um I don't know how many people work with custo or like",
    "start": "1201559",
    "end": "1207960"
  },
  {
    "text": "public facing websites but regression testing is is kind of a big deal um and",
    "start": "1207960",
    "end": "1213600"
  },
  {
    "text": "particularly in our case because we have such a narrow window every day if think if something goes wrong during that time",
    "start": "1213600",
    "end": "1218919"
  },
  {
    "text": "it's not good and things like uh selenium sort of work um but we've we've",
    "start": "1218919",
    "end": "1227640"
  },
  {
    "text": "really struggled with how how to avoid just paying teams of people to test the site manually and one of the things that",
    "start": "1227640",
    "end": "1234480"
  },
  {
    "text": "came out of this was the the the same functional test that could be written by",
    "start": "1234480",
    "end": "1240240"
  },
  {
    "text": "just simply annotating them in a using a convention you can actually emerge from all the code uh the set of tests that",
    "start": "1240240",
    "end": "1247640"
  },
  {
    "text": "does a pretty decent job of of kind of quickly testing the system end to end",
    "start": "1247640",
    "end": "1252679"
  },
  {
    "text": "and that was kind of exciting um we also ended up doing a bunch of work around just automating",
    "start": "1252679",
    "end": "1259120"
  },
  {
    "text": "the process of upgrading to the latest version of all the shared libraries um and we've we've actually",
    "start": "1259120",
    "end": "1266280"
  },
  {
    "text": "started to become kind of compile Farmers which I wasn't quite expecting and I kind of wish I could go into more",
    "start": "1266280",
    "end": "1271559"
  },
  {
    "text": "detail about this stuff because this is the hard part of writing Library code in",
    "start": "1271559",
    "end": "1277240"
  },
  {
    "text": "Java which I haven't heard anyone talk about it in a long time but there's things like fragile base classes and",
    "start": "1277240",
    "end": "1282760"
  },
  {
    "text": "actually I think it's Scola in Scola it's even worse um and I've I've sort of heard occasionally over the years about",
    "start": "1282760",
    "end": "1289559"
  },
  {
    "text": "how Google is spending a huge amount of resources compiling all the code all the time and I now have a much better idea",
    "start": "1289559",
    "end": "1296679"
  },
  {
    "text": "of kind of why they do that um things are nonintuitive and fragile um in a way that you would think",
    "start": "1296679",
    "end": "1303840"
  },
  {
    "text": "that they wouldn't be and it's a little bit the Dark Side of uh the jvm in my view and and things like",
    "start": "1303840",
    "end": "1310640"
  },
  {
    "text": "C++ um and there was kind of another component to this that turned out to be",
    "start": "1310640",
    "end": "1315960"
  },
  {
    "text": "pretty important um which is using zookeeper and",
    "start": "1315960",
    "end": "1321760"
  },
  {
    "text": "zookeeper I've heard it come up a couple times already today zookeeper if you don't if you haven't used it it's",
    "start": "1321760",
    "end": "1328559"
  },
  {
    "text": "painful to use it first but it absolutely has got to be the most significant contribution to distributed",
    "start": "1328559",
    "end": "1335559"
  },
  {
    "text": "computing for Mortals uh certainly for a while it",
    "start": "1335559",
    "end": "1341559"
  },
  {
    "text": "is uh kind of this distributed directory system that has kind of the triggers and",
    "start": "1341559",
    "end": "1348159"
  },
  {
    "text": "guarant and you know I'm not a zookeeper expert but what I love about zookeeper",
    "start": "1348159",
    "end": "1353760"
  },
  {
    "text": "is that it's API essentially is very well constructed to prevent you from doing something stupid um and everyone I",
    "start": "1353760",
    "end": "1362520"
  },
  {
    "text": "know who's approached it is really annoyed by the API until they realize that it's actually that every single thing is exactly the way it is for a",
    "start": "1362520",
    "end": "1369520"
  },
  {
    "text": "reason um which is kind of a good uh feature of an a API um but by making the",
    "start": "1369520",
    "end": "1378480"
  },
  {
    "text": "Vision to kind of have zookeeper everywhere um what became possible suddenly this",
    "start": "1378480",
    "end": "1384440"
  },
  {
    "text": "coordination between our our services and our clients um so that they could",
    "start": "1384440",
    "end": "1389600"
  },
  {
    "text": "essentially configure themselves automatically by starting up by by just simply knowing how to find zookeeper in",
    "start": "1389600",
    "end": "1394799"
  },
  {
    "text": "any environment whether it's your development laptop or some stage machine or production it it all works the same",
    "start": "1394799",
    "end": "1402000"
  },
  {
    "text": "the convention is completely standard and so things just sort of work so for example what URL is a service live at",
    "start": "1402000",
    "end": "1408919"
  },
  {
    "text": "the end of is not actually something that needs to concern the user uh of the",
    "start": "1408919",
    "end": "1414000"
  },
  {
    "text": "API um they may need to know that and it needs to be easy to set that but in in",
    "start": "1414000",
    "end": "1420080"
  },
  {
    "text": "terms of like just being able to quickly do something um and also have it be sort",
    "start": "1420080",
    "end": "1425240"
  },
  {
    "text": "of predictably working the same across all these different environments it's been pretty amazing um and because you",
    "start": "1425240",
    "end": "1432159"
  },
  {
    "text": "can sort of subscribe for changes to zookeeper it becomes straightforward if you need to do a kind of global uh",
    "start": "1432159",
    "end": "1438720"
  },
  {
    "text": "configuration change to everything if if uh you know for a variety of reasons it",
    "start": "1438720",
    "end": "1445279"
  },
  {
    "text": "doesn't happen all that often but when we need it it's kind of amazing um so so it ends up just being this level of",
    "start": "1445279",
    "end": "1451480"
  },
  {
    "text": "indirection which is extremely powerful compared to uh kind of more a more",
    "start": "1451480",
    "end": "1457559"
  },
  {
    "text": "spring approach I guess um uh and it also lets us do kind of a",
    "start": "1457559",
    "end": "1463440"
  },
  {
    "text": "circuit breaker it's a way to uh to tell all of the clients to do something with without them necessarily having to hear",
    "start": "1463440",
    "end": "1470559"
  },
  {
    "text": "from without the service that they're talking to necessarily being up um and so over time we found this to be really",
    "start": "1470559",
    "end": "1478120"
  },
  {
    "text": "quite powerful in terms of kind of partitioning the concerns uh across the",
    "start": "1478120",
    "end": "1484640"
  },
  {
    "text": "different people who who sort of matter and ultimately trying to make it is kind of easy to just get the job done which",
    "start": "1484640",
    "end": "1491799"
  },
  {
    "text": "you're trying to do which is very often uh build an application that depends on",
    "start": "1491799",
    "end": "1496880"
  },
  {
    "text": "data um so we're feeling pretty good about what we build at this stage and pretty happy",
    "start": "1496880",
    "end": "1504640"
  },
  {
    "text": "and uh in the back of my mind I kind of have this Vision that Steve is saying",
    "start": "1504640",
    "end": "1510039"
  },
  {
    "text": "this is completely wrong you people are insane um and the reason that Steve feels that",
    "start": "1510039",
    "end": "1516960"
  },
  {
    "text": "way I think or at least part of the reason is uh it's kind of summarized this guy Peter deuts put together this",
    "start": "1516960",
    "end": "1522000"
  },
  {
    "text": "pretty famous eight fallacies of of distributed computing and uh uh Steve's written",
    "start": "1522000",
    "end": "1529360"
  },
  {
    "text": "quite a bit about how RPC one by one kind of violates these um so I I I triy",
    "start": "1529360",
    "end": "1536200"
  },
  {
    "text": "to kind of go through them in this system and try to understand uh how how this approach was",
    "start": "1536200",
    "end": "1543640"
  },
  {
    "text": "doing um and actually I feel I feel like the reliability stuff is largely solved",
    "start": "1543640",
    "end": "1549960"
  },
  {
    "text": "through futures um it does put some burden on the",
    "start": "1549960",
    "end": "1555000"
  },
  {
    "text": "programmer and it's possible I'm missing the point although Futures particularly in AA and and I guess they're now in the",
    "start": "1555000",
    "end": "1561600"
  },
  {
    "text": "Scola standard Library are really quite sophisticated in terms of how you can represent failures and carry failures",
    "start": "1561600",
    "end": "1568360"
  },
  {
    "text": "through the system and uh I I feel quite good about how how that's",
    "start": "1568360",
    "end": "1574200"
  },
  {
    "text": "leveraged um so number two is the latency is zero um again I I feel like future is",
    "start": "1574200",
    "end": "1582320"
  },
  {
    "text": "hide that fact or make it not a concern so I'm going to boldly claim that that's resolved",
    "start": "1582320",
    "end": "1589320"
  },
  {
    "text": "um bandwidth is infinite is another one of these things that uh it's sort of a sort of",
    "start": "1589320",
    "end": "1598159"
  },
  {
    "text": "um and I'll I'll get to that I'll get to a little bit more detail about the sort",
    "start": "1598159",
    "end": "1603279"
  },
  {
    "text": "of part but ultimately for me this feels like much more a service design issue than an RPC issue and if you build",
    "start": "1603279",
    "end": "1609720"
  },
  {
    "text": "services that make sense that's not such a big deal um the network is secure is",
    "start": "1609720",
    "end": "1617320"
  },
  {
    "text": "obviously yeah whatever that means in the Modern Age apparently no network is",
    "start": "1617320",
    "end": "1622440"
  },
  {
    "text": "secure um but that one actually zookeeper has helped us out a lot in fact we've been able to use zookeeper to",
    "start": "1622440",
    "end": "1628799"
  },
  {
    "text": "do things like uh keep uh kind of shared credentials in in a somewhat more secure",
    "start": "1628799",
    "end": "1634799"
  },
  {
    "text": "way if not absolutely secure than than what I've seen in the past which is usually in a plain text World readable",
    "start": "1634799",
    "end": "1641880"
  },
  {
    "text": "file somewhere in the file system so I feel kind of okay about that and",
    "start": "1641880",
    "end": "1647679"
  },
  {
    "text": "definitely feel good that there are a lot of options that we have um the topology doesn't change so you know this",
    "start": "1647679",
    "end": "1655360"
  },
  {
    "text": "is the idea that uh you just assume the network is exactly always going to be uh",
    "start": "1655360",
    "end": "1660840"
  },
  {
    "text": "the way it is now and uh zookeeper has already helped us out a whole bunch there uh and the idea of having this",
    "start": "1660840",
    "end": "1668200"
  },
  {
    "text": "configuration that you can subscribe to so I feel pretty good about that and",
    "start": "1668200",
    "end": "1674480"
  },
  {
    "text": "there's one administrator is sort of similar there can be as many administrator as you need but there is",
    "start": "1674480",
    "end": "1679679"
  },
  {
    "text": "only one zookeeper uh at least one that matters and so I feel sort of boldly okay with",
    "start": "1679679",
    "end": "1686440"
  },
  {
    "text": "that as well um transport cost is zero uh is another kind of a sort of it",
    "start": "1686440",
    "end": "1694880"
  },
  {
    "text": "is definitely the case that when you have a lot of things kind of on your mind and you're trying to move fast and",
    "start": "1694880",
    "end": "1701159"
  },
  {
    "text": "get a lot done um that you forget about well basically it's impossible really",
    "start": "1701159",
    "end": "1706399"
  },
  {
    "text": "for most people to keep in mind how much things actually cost uh in terms of network and what are the different",
    "start": "1706399",
    "end": "1712159"
  },
  {
    "text": "orders of magnitude differences between doing something kind of onboard and offboard",
    "start": "1712159",
    "end": "1718279"
  },
  {
    "text": "um so there are problems with this however it is sort of captured in",
    "start": "1718279",
    "end": "1725840"
  },
  {
    "text": "the service design hopefully and uh we in practice it hasn't been a big issue",
    "start": "1725840",
    "end": "1731720"
  },
  {
    "text": "except in one particular case and so I'm going to boldly call it resolved and",
    "start": "1731720",
    "end": "1737039"
  },
  {
    "text": "quickly probably no surprise I actually think the homogeneity of the network isn't an issue so much either although",
    "start": "1737039",
    "end": "1744600"
  },
  {
    "text": "that probably has a lot to do with the fact that we're running our own data center um and we when we do things like",
    "start": "1744600",
    "end": "1750919"
  },
  {
    "text": "move stuff into ec2 we have a fair amount of control over how that happens so that's vaguely resolved so I still",
    "start": "1750919",
    "end": "1759640"
  },
  {
    "text": "suspect that Steve is not convinced by this um and he wrote a pretty",
    "start": "1759640",
    "end": "1764880"
  },
  {
    "text": "interesting paper called convenience over correctness uh which is",
    "start": "1764880",
    "end": "1770039"
  },
  {
    "text": "obviously the goal uh or well without so that basically the art his argument is",
    "start": "1770039",
    "end": "1776919"
  },
  {
    "text": "that RPC is really much more about convenience and correctness and I think that that's true",
    "start": "1776919",
    "end": "1783440"
  },
  {
    "text": "um correctness is fantastically hard most of the time",
    "start": "1783440",
    "end": "1789120"
  },
  {
    "text": "um and I so I I took a just a a little look at what it would take to make a",
    "start": "1789120",
    "end": "1795840"
  },
  {
    "text": "tiny part of the problem that we're looking at correct um and it's a little bit of a a",
    "start": "1795840",
    "end": "1803159"
  },
  {
    "text": "distraction but this is this thing that keeps coming up for me and and so I thought I would bring it up in public",
    "start": "1803159",
    "end": "1809360"
  },
  {
    "text": "about all the different data models in a system and how often people cut Corners",
    "start": "1809360",
    "end": "1814559"
  },
  {
    "text": "here um if you think about just the very simple kind of three-tier",
    "start": "1814559",
    "end": "1821120"
  },
  {
    "text": "architecture uh and how data in kind of the extreme case if you wanted to handle",
    "start": "1821120",
    "end": "1826240"
  },
  {
    "text": "every possible case um you know there is data is modeled in a database and it gets loaded into a",
    "start": "1826240",
    "end": "1832799"
  },
  {
    "text": "service and very often it needs to be turned into a different slightly different model so that it can be",
    "start": "1832799",
    "end": "1839080"
  },
  {
    "text": "computered uh against in a reasonable way and then it it needs to pass out of",
    "start": "1839080",
    "end": "1844240"
  },
  {
    "text": "that service and and there's yet another model to represent it on the wire um and",
    "start": "1844240",
    "end": "1849440"
  },
  {
    "text": "then it gets picked up by a client and translated possibly into a client data model where there might be more",
    "start": "1849440",
    "end": "1855600"
  },
  {
    "text": "computations that are done against it and and then finally it gets exposed outside the client into what may be a",
    "start": "1855600",
    "end": "1863000"
  },
  {
    "text": "completely different model data model again um very often you want to keep the client data model private so you can",
    "start": "1863000",
    "end": "1868840"
  },
  {
    "text": "change it and the public data model you want to be much more careful about changing",
    "start": "1868840",
    "end": "1874960"
  },
  {
    "text": "um so yeah that just I mean right there there's five different ways of representing the same data that in the",
    "start": "1874960",
    "end": "1881679"
  },
  {
    "text": "extreme case you need to be thinking about um and in things like the RPC Frameworks of the past",
    "start": "1881679",
    "end": "1888720"
  },
  {
    "text": "some of these were generated by by software from some description and I",
    "start": "1888720",
    "end": "1894960"
  },
  {
    "text": "think probably a fair number of people over time have have tried to understand",
    "start": "1894960",
    "end": "1900000"
  },
  {
    "text": "how we can use inheritance and code generation and different schemas to",
    "start": "1900000",
    "end": "1905799"
  },
  {
    "text": "simplify all this and uh kind of my my conclusion is that that that's basically",
    "start": "1905799",
    "end": "1912240"
  },
  {
    "text": "impossible that uh in the general case it just can't be done um in a way that",
    "start": "1912240",
    "end": "1918039"
  },
  {
    "text": "actually usable um we though we have tried um so",
    "start": "1918039",
    "end": "1925320"
  },
  {
    "text": "basically this stuff kind of works in practice but in theory it's completely broken and it just",
    "start": "1925320",
    "end": "1932480"
  },
  {
    "text": "yeah business goes on um so I would argue that we are still",
    "start": "1932480",
    "end": "1939919"
  },
  {
    "text": "doing a couple things that are a little bit different that actually matter um so",
    "start": "1939919",
    "end": "1945399"
  },
  {
    "text": "the the absence of machine generated stub uh turns out to be pretty important it",
    "start": "1945399",
    "end": "1951880"
  },
  {
    "text": "gets people so you know this this was the case in RMI and it was a case an RPC",
    "start": "1951880",
    "end": "1957279"
  },
  {
    "text": "and I I remember actually looking at RMI about 10 years ago and having just no clue how this stuff worked and no like",
    "start": "1957279",
    "end": "1964760"
  },
  {
    "text": "it was kind of amazing that there could be this code that absolutely you depended on that was sort of generated",
    "start": "1964760",
    "end": "1970399"
  },
  {
    "text": "and had to work perfectly and it was difficult to get any kind of coherent description of what it was trying to to",
    "start": "1970399",
    "end": "1977960"
  },
  {
    "text": "do or um and so we haven't taken that approach all basically we're using",
    "start": "1977960",
    "end": "1984120"
  },
  {
    "text": "uh kind of inheritance and Scala to mix in a lot of different behaviors and trying to make it so that you do",
    "start": "1984120",
    "end": "1990679"
  },
  {
    "text": "actually supply all the code that matters and it's all accessible to you and at every every Point kind of in the",
    "start": "1990679",
    "end": "1996360"
  },
  {
    "text": "stack there's the opportunity to do uh some kind of customization if it's needed most of the time it isn't um and",
    "start": "1996360",
    "end": "2004240"
  },
  {
    "text": "that kind of ties into the what I was calling Embassy oriented programming where um rather than having these stubs",
    "start": "2004240",
    "end": "2011320"
  },
  {
    "text": "being this thing it really you're thinking of the client as part of the service um and then with zookeeper there",
    "start": "2011320",
    "end": "2018159"
  },
  {
    "text": "there's a lot of indirection and and as I mentioned the type system support for failures is is",
    "start": "2018159",
    "end": "2023840"
  },
  {
    "text": "pretty amazing um when and I think we're only just starting to understand what that",
    "start": "2023840",
    "end": "2029559"
  },
  {
    "text": "means uh kind of in the Scala world but there's a lot that does suck",
    "start": "2029559",
    "end": "2035679"
  },
  {
    "text": "um about RPC uh and I think some of the stuff",
    "start": "2035679",
    "end": "2042679"
  },
  {
    "text": "is kind of gone in a way and some of it is still here remote objects um like",
    "start": "2042679",
    "end": "2048720"
  },
  {
    "text": "when RPC was taking off object orientation had taken over the world most people here are probably too young",
    "start": "2048720",
    "end": "2054638"
  },
  {
    "text": "to remember that every single thing was object-oriented and all of these objects were mutable and these incredibly",
    "start": "2054639",
    "end": "2061320"
  },
  {
    "text": "complicated programs were created um and part of that contract was",
    "start": "2061320",
    "end": "2066760"
  },
  {
    "text": "that you could sort of not care where the objects were if they were local if they were remote um and I think that's",
    "start": "2066760",
    "end": "2074599"
  },
  {
    "text": "gets right at the essence of the claim that RPC sucks that that doesn't work um",
    "start": "2074599",
    "end": "2080040"
  },
  {
    "text": "of course I don't think that's what we're doing um and failur were uh pretty",
    "start": "2080040",
    "end": "2086158"
  },
  {
    "text": "horrible and and item potency is something that we strive for but it's",
    "start": "2086159",
    "end": "2091878"
  },
  {
    "text": "really really hard and a lot of the real problems that other people have had are",
    "start": "2091879",
    "end": "2097880"
  },
  {
    "text": "require things like transactions which again are hard in the simple case and very quickly become uh almost unbearable",
    "start": "2097880",
    "end": "2104920"
  },
  {
    "text": "in a distributed system luckily that's not a problem Guild has very often",
    "start": "2104920",
    "end": "2110599"
  },
  {
    "text": "um so we ignored all that and it was pretty easy and it was we felt like",
    "start": "2110599",
    "end": "2115960"
  },
  {
    "text": "there was a lot of success in fact in back in April we measured how many services we had created at guilt and uh",
    "start": "2115960",
    "end": "2123560"
  },
  {
    "text": "there's like about 100 developers creating services at a great rate it's it's actually over 300 now and uh",
    "start": "2123560",
    "end": "2130040"
  },
  {
    "text": "they're all kind of following this model and everything is working pretty well uh with one sort of glaring",
    "start": "2130040",
    "end": "2137680"
  },
  {
    "text": "exception and and that is basically it's like the uh if all you have is a hammer",
    "start": "2137680",
    "end": "2145359"
  },
  {
    "text": "everything starts to look like a nail so there was a little bit of corner of the of the guilt world that I wasn't paying",
    "start": "2145359",
    "end": "2150839"
  },
  {
    "text": "as close attention to as I probably should have um around how batch jobs were done and like a really big part of",
    "start": "2150839",
    "end": "2158319"
  },
  {
    "text": "of kind of guilt's model uh is around personalization and we know a lot about",
    "start": "2158319",
    "end": "2164040"
  },
  {
    "text": "what our users look at and what they like and and in because we have this sort of",
    "start": "2164040",
    "end": "2169880"
  },
  {
    "text": "scarcity uh model that's actually really important to why people like to come to the website it's very easy for people",
    "start": "2169880",
    "end": "2177240"
  },
  {
    "text": "who would probably buy something to not actually see it um and there's a lot of",
    "start": "2177240",
    "end": "2183079"
  },
  {
    "text": "algorithmic work that can be done to make that situation better and um and a",
    "start": "2183079",
    "end": "2189240"
  },
  {
    "text": "lot of that algorithm algorithmic work happens in batch jobs and this sort of ties back into the two sort of things I",
    "start": "2189240",
    "end": "2195920"
  },
  {
    "text": "was not completely comfortable about um and uh this idea of the law of",
    "start": "2195920",
    "end": "2203160"
  },
  {
    "text": "instrument which is basically the name of the phenomenon when uh when all you have is a hammer and so what basically",
    "start": "2203160",
    "end": "2209240"
  },
  {
    "text": "what happened was that it was these clients were so easy to use and they would work just anywhere and it was",
    "start": "2209240",
    "end": "2214359"
  },
  {
    "text": "trivial um people were essentially doing the equivalent of enormous batch reduceed jobs making these service calls",
    "start": "2214359",
    "end": "2221480"
  },
  {
    "text": "and that they didn't really consider uh what was going on um which in this case",
    "start": "2221480",
    "end": "2227640"
  },
  {
    "text": "was like hammering to death online production customer facing services and",
    "start": "2227640",
    "end": "2233280"
  },
  {
    "text": "kind of leveraging the power of computers to bring down the site um and",
    "start": "2233280",
    "end": "2238440"
  },
  {
    "text": "so really you know it's like these clients are all about pulling data um and that that's I mean that's",
    "start": "2238440",
    "end": "2245240"
  },
  {
    "text": "kind of what so is about um in fact one of the things that people talk about is kind of one of the downsides of service",
    "start": "2245240",
    "end": "2251440"
  },
  {
    "text": "oriented architecture is that you you lose the ability to do joins and databases a lot um if you really",
    "start": "2251440",
    "end": "2257560"
  },
  {
    "text": "bulkhead your services which people tend to think is a good idea uh then you end up having to join in in the service",
    "start": "2257560",
    "end": "2264720"
  },
  {
    "text": "layer and that has its problems it doesn't always uh scale very well um and",
    "start": "2264720",
    "end": "2272000"
  },
  {
    "text": "so if you really kind of want to scale in batch mode you're rather than pulling the data to the code you you want to be",
    "start": "2272000",
    "end": "2277520"
  },
  {
    "text": "pushing the code to the data so when there's tons and tons of data moving it is expensive the code is much much",
    "start": "2277520",
    "end": "2283160"
  },
  {
    "text": "smaller and that's kind of what map produ is all about and and grid Computing and these days spark is uh the",
    "start": "2283160",
    "end": "2290079"
  },
  {
    "text": "thing that's running on Hop that's all about that and uh it's pretty",
    "start": "2290079",
    "end": "2295640"
  },
  {
    "text": "interesting so but we we sort of stuck now at a point where it feels like SOA",
    "start": "2295640",
    "end": "2302760"
  },
  {
    "text": "sucks maybe it's because it's RPC I'm not sure um but we're trying to think",
    "start": "2302760",
    "end": "2308160"
  },
  {
    "text": "about kind of a next generation of SE and what does a service really start to look like for us and I think probably",
    "start": "2308160",
    "end": "2315040"
  },
  {
    "text": "other people um and and it there are a lot of trends that I think are pretty",
    "start": "2315040",
    "end": "2320760"
  },
  {
    "text": "interesting um and relevant and this this idea that the basic crud model for databases is a bad idea um we're",
    "start": "2320760",
    "end": "2329800"
  },
  {
    "text": "starting to embrace pretty pretty much everywhere we can we",
    "start": "2329800",
    "end": "2335000"
  },
  {
    "text": "built some tooling around this um and there's kind we're not unfortunately",
    "start": "2335000",
    "end": "2340400"
  },
  {
    "text": "in a position to use datomic although I wish that we were because uh I think it's kind of amazing um we've also moved",
    "start": "2340400",
    "end": "2348200"
  },
  {
    "text": "hugely toward event streams uh as basically kind of event sourcing",
    "start": "2348200",
    "end": "2354520"
  },
  {
    "text": "as a way to represent uh the way system or basically the way data is changing over time um",
    "start": "2354520",
    "end": "2361960"
  },
  {
    "text": "and obviously batch processing has been become huge Lambda architecture is sort of important to us um Nathan Mars gave",
    "start": "2361960",
    "end": "2369560"
  },
  {
    "text": "an amazing talk last year here about that idea which uh I won't go into too",
    "start": "2369560",
    "end": "2375760"
  },
  {
    "text": "much um and there's a there's this pattern uh command query responsibility",
    "start": "2375760",
    "end": "2381640"
  },
  {
    "text": "separation I think it stands for which is basically identifying that actually lots of times uh it matters quite a lot",
    "start": "2381640",
    "end": "2388319"
  },
  {
    "text": "to separate the reading from services from writing and writing is fairly rare",
    "start": "2388319",
    "end": "2394240"
  },
  {
    "text": "often um whereas reading would might you know a batch process for example reading",
    "start": "2394240",
    "end": "2399599"
  },
  {
    "text": "would be uh a huge event happening billions of times um and so you know where where we",
    "start": "2399599",
    "end": "2408359"
  },
  {
    "text": "started kind of from here in the simple thing and now we're actually ending up",
    "start": "2408359",
    "end": "2413680"
  },
  {
    "text": "looking at services that start to feel a little bit something like this which",
    "start": "2413680",
    "end": "2418880"
  },
  {
    "text": "doesn't feel simple to me but it it so is kind of where we are in terms of how can you actually create things that",
    "start": "2418880",
    "end": "2425000"
  },
  {
    "text": "scale and do all the stuff that you need done which is you know data has to go into the data warehouse and has to be",
    "start": "2425000",
    "end": "2430960"
  },
  {
    "text": "available to batch jobs and um real-time data needs to be subject to complex",
    "start": "2430960",
    "end": "2436599"
  },
  {
    "text": "event processing and made lots of things need to be pre-computed so that Services can look them up and I mean this is",
    "start": "2436599",
    "end": "2445119"
  },
  {
    "text": "basically you know what just a single service starts to look like um whereas a",
    "start": "2445119",
    "end": "2451280"
  },
  {
    "text": "year ago for us at least a service was like a Serv container running Jersey and",
    "start": "2451280",
    "end": "2457520"
  },
  {
    "text": "that maybe had a database behind it and hopefully not um so we're uh yeah it's kind of an",
    "start": "2457520",
    "end": "2464520"
  },
  {
    "text": "exciting time what's interesting about this model is that we don't actually have to break any of the clients to",
    "start": "2464520",
    "end": "2470800"
  },
  {
    "text": "implement this stuff um to that part seems to work fairly well but anyhow",
    "start": "2470800",
    "end": "2477560"
  },
  {
    "text": "that's that's kind of all I have um I have a few minutes for questions ran a little bit under the time I was hoping",
    "start": "2477560",
    "end": "2484720"
  },
  {
    "text": "to which is good um yeah got some questions",
    "start": "2484720",
    "end": "2489880"
  },
  {
    "text": "great uh let's see could you have scaled the Ruby on Rails system by only",
    "start": "2489880",
    "end": "2496079"
  },
  {
    "text": "changing the architecture and not the language SL",
    "start": "2496079",
    "end": "2501480"
  },
  {
    "text": "technology so it's hard to know the answer to that question for two reasons one is I wasn't there um there is a a",
    "start": "2501480",
    "end": "2509760"
  },
  {
    "text": "lot of people talk about whether Twitter could have scaled um I think really",
    "start": "2509760",
    "end": "2517640"
  },
  {
    "text": "Ruby is not a very efficient runtime um it just isn't even on the jvm",
    "start": "2517640",
    "end": "2524240"
  },
  {
    "text": "and so it's I think it's not a question of could we have made it scale so much",
    "start": "2524240",
    "end": "2529280"
  },
  {
    "text": "as uh did we want to pay the money to scale it did we feel like it was worth",
    "start": "2529280",
    "end": "2534720"
  },
  {
    "text": "it um and also and I think also you know performance wasn't the only thing as we",
    "start": "2534720",
    "end": "2541200"
  },
  {
    "text": "were scaling the organization at the time uh we were finding Ruby hard to",
    "start": "2541200",
    "end": "2546400"
  },
  {
    "text": "scale across as you got sort of multiple teams trying to work together um and we're you know I",
    "start": "2546400",
    "end": "2554040"
  },
  {
    "text": "think collectively we're big fans of type safe programming as a way to help",
    "start": "2554040",
    "end": "2560839"
  },
  {
    "text": "that can you say more about emergent regression tests Yes actually we're",
    "start": "2560839",
    "end": "2566359"
  },
  {
    "text": "putting together a talk on that uh there's quite a bit of interest in that um this been sort of a an ongoing",
    "start": "2566359",
    "end": "2574400"
  },
  {
    "text": "struggle for us as I mentioned um we have a process internally when when",
    "start": "2574400",
    "end": "2579960"
  },
  {
    "text": "something goes wrong that's uh customer facing we have a weekly meeting that's",
    "start": "2579960",
    "end": "2586440"
  },
  {
    "text": "that's basically to kind of talk about what was the root cause and talk about what went wrong um and basically the",
    "start": "2586440",
    "end": "2593480"
  },
  {
    "text": "obligation now coming out of that is that you if you are kind of on the hook for",
    "start": "2593480",
    "end": "2598800"
  },
  {
    "text": "one of these issues you not only have to fix it but you also have to uh provide",
    "start": "2598800",
    "end": "2603920"
  },
  {
    "text": "the automation that would have caught the bug if at all possible",
    "start": "2603920",
    "end": "2609119"
  },
  {
    "text": "um as part of the process of fixing it which is one of those things that seems kind of obvious but it's people don't",
    "start": "2609119",
    "end": "2615760"
  },
  {
    "text": "tend to really do that in a committed way and we're genuinely trying to do that in a committed way um and the other",
    "start": "2615760",
    "end": "2622880"
  },
  {
    "text": "thing is that we've moved we're really trying to move away from kind of dedicated",
    "start": "2622880",
    "end": "2628160"
  },
  {
    "text": "QA uh people and and there's sort of an internal ethos around decentralization um the problem is that",
    "start": "2628160",
    "end": "2635119"
  },
  {
    "text": "things like a global regression test say are these inherently centralized things",
    "start": "2635119",
    "end": "2640400"
  },
  {
    "text": "and we we tried to build a team that would kind of manage library of of",
    "start": "2640400",
    "end": "2645880"
  },
  {
    "text": "global regression tests and it didn't really work very well for a variety of reasons and so basically we decided",
    "start": "2645880",
    "end": "2652480"
  },
  {
    "text": "rather than try and centralize a team to do that what we do is try and have the absolute minimum amount of",
    "start": "2652480",
    "end": "2658319"
  },
  {
    "text": "centralization required which was basically some kind of convention on on the tagging and then some relatively",
    "start": "2658319",
    "end": "2665880"
  },
  {
    "text": "straightforward machinery that could search through the code and find all these tags and assemble all the tests",
    "start": "2665880",
    "end": "2671079"
  },
  {
    "text": "and run them um and then over time you know as people",
    "start": "2671079",
    "end": "2677640"
  },
  {
    "text": "go through the the sort of process of of fixing incidents that that Library",
    "start": "2677640",
    "end": "2684079"
  },
  {
    "text": "emerges and gets bigger um and the things that are actually causing outages are the things that we're actually",
    "start": "2684079",
    "end": "2689960"
  },
  {
    "text": "writing tests for um and there's just like a",
    "start": "2689960",
    "end": "2695520"
  },
  {
    "text": "convergence um toward quality I think the other thing is that you can only get so as a system gets bigger I think you",
    "start": "2695520",
    "end": "2702119"
  },
  {
    "text": "can only get so far with testing um in real time and so we're also just now",
    "start": "2702119",
    "end": "2708480"
  },
  {
    "text": "starting to ramp up kind of a a much more ambitious way of looking at the",
    "start": "2708480",
    "end": "2714440"
  },
  {
    "text": "real-time kind of clickstream data and other and log data and centralized log data and trying to detect things that",
    "start": "2714440",
    "end": "2721319"
  },
  {
    "text": "are happening that are bad as quickly as possible rather than try and catch every single thing um",
    "start": "2721319",
    "end": "2728559"
  },
  {
    "text": "as an example you know if we're if we're looking at logins by user agent um you",
    "start": "2728559",
    "end": "2736400"
  },
  {
    "text": "you if there's some particularly weird version of Internet Explorer whatever that's failing that the the way to see",
    "start": "2736400",
    "end": "2744240"
  },
  {
    "text": "that stuff is to actually pick it up in real time and and then try and fix it rather than try and focus on we're going",
    "start": "2744240",
    "end": "2749680"
  },
  {
    "text": "to test every browser all the time so we do some cross browser testing but not",
    "start": "2749680",
    "end": "2755040"
  },
  {
    "text": "extensive enough to catch all these issues and and now it's kind of clear that we have to fall back to kind of",
    "start": "2755040",
    "end": "2761440"
  },
  {
    "text": "event processing to catch that stuff okay um did the Ruby folks not",
    "start": "2761440",
    "end": "2767760"
  },
  {
    "text": "bring any test methods along with their hashmap design so yeah the the Ruby code base",
    "start": "2767760",
    "end": "2775119"
  },
  {
    "text": "still exists by the way there's a there's a it is a huge code base and a lot of it is internal facing um and it's",
    "start": "2775119",
    "end": "2782559"
  },
  {
    "text": "actually a very high quality code base but in the holy God oh my God we're all",
    "start": "2782559",
    "end": "2788880"
  },
  {
    "text": "going to die moment of porting everything over to Java what didn't happen was the same degree of testing",
    "start": "2788880",
    "end": "2795319"
  },
  {
    "text": "that had happened in Ruby and that was regrettable I think it's fair to say at",
    "start": "2795319",
    "end": "2802160"
  },
  {
    "text": "the same time I think it's hard to imagine the amount of pressure that that team was under um like the business was",
    "start": "2802160",
    "end": "2808480"
  },
  {
    "text": "literally on fire so yeah we we're still feeling the pain",
    "start": "2808480",
    "end": "2815240"
  },
  {
    "text": "there if you're running cqrs with event sourcing what do you use for event",
    "start": "2815240",
    "end": "2821520"
  },
  {
    "text": "storage uh so uh I wouldn't say I think it's fair to say that we aren't yet doing that um",
    "start": "2821520",
    "end": "2829960"
  },
  {
    "text": "we are using Kafka and we're using rabbit and we are now uh basically catching a lot of",
    "start": "2829960",
    "end": "2837400"
  },
  {
    "text": "events from a few systems into Kafka and then basically doing an ETL operation",
    "start": "2837400",
    "end": "2843800"
  },
  {
    "text": "into a data warehouse but this is super early days and uh I",
    "start": "2843800",
    "end": "2849400"
  },
  {
    "text": "think there's a lot of interest in in that style and we've done some of our own implementations with some mixed",
    "start": "2849400",
    "end": "2855240"
  },
  {
    "text": "success but the uh the event sourced stuff uh that was done for AA that I",
    "start": "2855240",
    "end": "2861000"
  },
  {
    "text": "guess is now moved into AKA I think is really interesting although I have no",
    "start": "2861000",
    "end": "2866079"
  },
  {
    "text": "opinion yet on how we would store that stuff do uh do the does the audience",
    "start": "2866079",
    "end": "2874480"
  },
  {
    "text": "like the fact that the speaker trolled the track Coast since I was trolled I I do want to",
    "start": "2874480",
    "end": "2881319"
  },
  {
    "text": "make a comment good um no I think what you're doing is fine because the problem that I was writing about is the the",
    "start": "2881319",
    "end": "2888400"
  },
  {
    "text": "convenience is that you know RPC was invented to hide distribution from the",
    "start": "2888400",
    "end": "2894800"
  },
  {
    "text": "developer um if you go back to the very early writings on RPC the point being made and it's",
    "start": "2894800",
    "end": "2901400"
  },
  {
    "text": "actually in the text of these writings it says today we don't have dist uh distrib systems developers people don't",
    "start": "2901400",
    "end": "2908640"
  },
  {
    "text": "understand how to do that so we have these Library developers so if we can make the programming look like writing a",
    "start": "2908640",
    "end": "2914160"
  },
  {
    "text": "library then we win and you know they're sweeping under the rug all those hard problems the the eight fallacies and uh",
    "start": "2914160",
    "end": "2922319"
  },
  {
    "text": "ordering and causality and all that kind of stuff and that's the objection and clearly you're not doing that because",
    "start": "2922319",
    "end": "2927920"
  },
  {
    "text": "you're thinking about the distributed system and you know writing it specifically as a distributed system it",
    "start": "2927920",
    "end": "2934440"
  },
  {
    "text": "it was with significant irony that I realized that had in fact been burned by exactly those issues though on the batch",
    "start": "2934440",
    "end": "2941319"
  },
  {
    "text": "processing Side Y so yeah vigilance is required and and yeah I I long agreed",
    "start": "2941319",
    "end": "2946359"
  },
  {
    "text": "with that that the idea of not making it look like local code so that you could actually GP the code and find everywhere",
    "start": "2946359",
    "end": "2952000"
  },
  {
    "text": "that was making a remote call um and it's hard to keep that kind of diligence",
    "start": "2952000",
    "end": "2957920"
  },
  {
    "text": "up yeah there was a question there yes as you built out that many services if I",
    "start": "2957920",
    "end": "2964240"
  },
  {
    "text": "understood correctly you're using scalla cases case classes um to provide type safe client server communication yes um",
    "start": "2964240",
    "end": "2972520"
  },
  {
    "text": "what has your experience been in the in the impact of coupling or systems like that as you try and change like add new",
    "start": "2972520",
    "end": "2979960"
  },
  {
    "text": "Fields data types and those types of things right so the the the question is uh about do is there coupling uh how do",
    "start": "2979960",
    "end": "2987240"
  },
  {
    "text": "it work out using case classes to to uh share data between the clients and",
    "start": "2987240",
    "end": "2992319"
  },
  {
    "text": "servers um so yeah there are gotas although it works pretty well um if you",
    "start": "2992319",
    "end": "3000200"
  },
  {
    "text": "add fields and very often when you add a field you have to make it an optional field um and so the the clients that are",
    "start": "3000200",
    "end": "3008160"
  },
  {
    "text": "out there um are prepared for are prepared to ignore data that they don't",
    "start": "3008160",
    "end": "3013559"
  },
  {
    "text": "understand and in practice that works quite well um although a lot of people",
    "start": "3013559",
    "end": "3018920"
  },
  {
    "text": "go through some cognitive failure which leads them to delete something um but the test",
    "start": "3018920",
    "end": "3025720"
  },
  {
    "text": "catch that really really quick um having said that it it has become",
    "start": "3025720",
    "end": "3032040"
  },
  {
    "text": "clear that we have to be really really aggressive about trying to upgrade things as quickly as possible if we",
    "start": "3032040",
    "end": "3037160"
  },
  {
    "text": "leave things that I mean they're running fine um there'd be no reason to upgrade them other than is just sort of a policy",
    "start": "3037160",
    "end": "3044240"
  },
  {
    "text": "of constantly upgrading everything to the latest as quickly as we can you consider moving to just um primitive",
    "start": "3044240",
    "end": "3050319"
  },
  {
    "text": "data types so that you can so a server can iterate and push out new data with",
    "start": "3050319",
    "end": "3056680"
  },
  {
    "text": "without all the clients having to rev just to pick up a statically typed object um yeah so the question is have",
    "start": "3056680",
    "end": "3064440"
  },
  {
    "text": "we consider I guess what was it allowing just the data to flow across without the types",
    "start": "3064440",
    "end": "3070960"
  },
  {
    "text": "wrapping them so that you don't have to rev all the clients every time right so uh yeah that was sort of how it",
    "start": "3070960",
    "end": "3077760"
  },
  {
    "text": "started out I mean that's basically a type safe a type unsafe approach um and",
    "start": "3077760",
    "end": "3083359"
  },
  {
    "text": "yeah we found it hard to maintain that code um it does work you can do it that way",
    "start": "3083359",
    "end": "3089880"
  },
  {
    "text": "um but as long as we maintained backwards compatibility of the data which is not",
    "start": "3089880",
    "end": "3096960"
  },
  {
    "text": "not actually that hard in practice as long as you don't delete things and you add things uh",
    "start": "3096960",
    "end": "3102640"
  },
  {
    "text": "carefully it hasn't been necessary to upgrade those reme clients although we",
    "start": "3102640",
    "end": "3107720"
  },
  {
    "text": "do choose to kind of for other reasons but more related to dependencies um with say the",
    "start": "3107720",
    "end": "3113720"
  },
  {
    "text": "configuration system than the actual data compatibility okay if there's more",
    "start": "3113720",
    "end": "3119839"
  },
  {
    "text": "questions Eric will be around but uh please let's thank our speaker thank you",
    "start": "3119839",
    "end": "3127240"
  }
]