[
  {
    "start": "0",
    "end": "103000"
  },
  {
    "text": "[Music]",
    "start": "4370",
    "end": "8889"
  },
  {
    "text": "I think so start off for the intro and I was uh Sarah and I were talking",
    "start": "12780",
    "end": "18840"
  },
  {
    "text": "before that so I learned to ride a bike after I wrote my first book most people do those two things in the other order",
    "start": "18840",
    "end": "24600"
  },
  {
    "text": "but also when people ask me what's harder I'm like yeah riding a bike is just like reading a book once you do one",
    "start": "24600",
    "end": "30420"
  },
  {
    "text": "you can't forget it thanks everyone for showing in so I'm bringing up the rear this is your last con Talk of the entire",
    "start": "30420",
    "end": "37260"
  },
  {
    "text": "week you made it so give yourself a pat on the back and what better way to end a",
    "start": "37260",
    "end": "42780"
  },
  {
    "text": "really informative knowledge packed three days then to have a really light conversation about",
    "start": "42780",
    "end": "48360"
  },
  {
    "text": "particle physics that really light-hearted and easy to digest so we'll see if you're here hopefully",
    "start": "48360",
    "end": "53820"
  },
  {
    "text": "you're here to learn about software entropy and how to reverse it um that's me but sir I'll introduce me",
    "start": "53820",
    "end": "61140"
  },
  {
    "text": "to you so software engineering borrows a lot from",
    "start": "61140",
    "end": "66360"
  },
  {
    "text": "other disciplines other engineering disciplines and even disciplines that are on the periphery of",
    "start": "66360",
    "end": "72600"
  },
  {
    "text": "science such as sociology and anthropology it's natural it's a very",
    "start": "72600",
    "end": "77640"
  },
  {
    "text": "new discipline so we build as human beings we build a knowledge that we already have almost everything is a",
    "start": "77640",
    "end": "83280"
  },
  {
    "text": "remix of I mean everything is a riff or something else in software engineering as a discipline being",
    "start": "83280",
    "end": "88740"
  },
  {
    "text": "only so many decades old it's almost natural that it borrows from all of these other disciplines we are really",
    "start": "88740",
    "end": "95880"
  },
  {
    "text": "good at remixing the knowledge from other domains and presenting it in new context",
    "start": "95880",
    "end": "102060"
  },
  {
    "text": "off that software engineering borrows a lot from physics it lends a little bit too and obviously",
    "start": "102060",
    "end": "109079"
  },
  {
    "start": "103000",
    "end": "188000"
  },
  {
    "text": "what with Quantum computing and the actual Synergy between software",
    "start": "109079",
    "end": "114960"
  },
  {
    "text": "and Hardware but it borrows uh orders of magnitude more than it lands physics",
    "start": "114960",
    "end": "120960"
  },
  {
    "text": "obviously has a huge influence on software engineering not just with the fact that everything that runs software",
    "start": "120960",
    "end": "128160"
  },
  {
    "text": "is powered by physics whether they be transistors inside your computers or as",
    "start": "128160",
    "end": "134520"
  },
  {
    "text": "you know with Quantum Computing as I mentioned or even with some of the metaphors that we borrow many of the",
    "start": "134520",
    "end": "141420"
  },
  {
    "text": "metaphors that we borrow from physics but we should take solace in the fact",
    "start": "141420",
    "end": "147420"
  },
  {
    "text": "that a physicist of no less Eminence that Feynman had kind words to say about",
    "start": "147420",
    "end": "153660"
  },
  {
    "text": "software engineers so he said that while the computer",
    "start": "153660",
    "end": "159000"
  },
  {
    "text": "science is not as old as physics understatement of the year or of the century it lasts by a couple",
    "start": "159000",
    "end": "166319"
  },
  {
    "text": "of hundred years however this does not mean that there is significantly Less on the plate of the software of the",
    "start": "166319",
    "end": "172200"
  },
  {
    "text": "computer scientists than on the physicist younger though it may be it has a far more intense upbringing so",
    "start": "172200",
    "end": "178739"
  },
  {
    "text": "reassuring words from one of the most preeminent physicists of the 20th century one of the things that software",
    "start": "178739",
    "end": "184319"
  },
  {
    "text": "does borrow from physics is the notion of entropy",
    "start": "184319",
    "end": "189840"
  },
  {
    "start": "188000",
    "end": "274000"
  },
  {
    "text": "entropy in physics is a concept that pertains to the level of disorder in the",
    "start": "189840",
    "end": "195480"
  },
  {
    "text": "system so the entropy of an isolated system must always increase until it",
    "start": "195480",
    "end": "201120"
  },
  {
    "text": "reaches equilibrium that's often called the second law of Thermodynamics it is the bane of all people who want to",
    "start": "201120",
    "end": "208200"
  },
  {
    "text": "invent perpetual motion machines you cannot in any system the entirety of if",
    "start": "208200",
    "end": "213720"
  },
  {
    "text": "there is no external forces applied no external energy that comes in or leaves then it must be that the disorder in the",
    "start": "213720",
    "end": "219239"
  },
  {
    "text": "system ratchets up it can only go in One Direction it can never go in the other direction but they're almost like a",
    "start": "219239",
    "end": "225720"
  },
  {
    "text": "ratcheting effect uh there are different formulations of this law some call it the arrow of time time can never go",
    "start": "225720",
    "end": "232080"
  },
  {
    "text": "backwards if it could you could magically reduce the entropy of a system but that is not allowed there is a",
    "start": "232080",
    "end": "239580"
  },
  {
    "text": "software equivalent of the interview which is where the borrowing comes in is the entropy of an isolated Software",
    "start": "239580",
    "end": "246780"
  },
  {
    "text": "System must also increase until it reaches maximum entropy which means maximum disorder",
    "start": "246780",
    "end": "252599"
  },
  {
    "text": "and so while obviously the the foundations of that are not rooted as",
    "start": "252599",
    "end": "258299"
  },
  {
    "text": "they are in physics but the law does uphold and we'll see how and why it is the case that software systems left to",
    "start": "258299",
    "end": "265320"
  },
  {
    "text": "themselves naturally progress towards more and more Disorder so before we do",
    "start": "265320",
    "end": "270540"
  },
  {
    "text": "that it's good to Define terms so what is software entropy how would we Define it there are a few definitions in Vogue",
    "start": "270540",
    "end": "278100"
  },
  {
    "start": "274000",
    "end": "555000"
  },
  {
    "text": "out there so uh here are a couple one way to measure that is to look at",
    "start": "278100",
    "end": "284040"
  },
  {
    "text": "the number of files changed within each commit so that's an easy enough metric to look at so if something is changing a",
    "start": "284040",
    "end": "290040"
  },
  {
    "text": "lot you can say it's it's entropies disorder is a lot so if one small change requires you to touch a large number of",
    "start": "290040",
    "end": "296639"
  },
  {
    "text": "files it's a measure that probably the level of disorder that you can call it high coupling or a lack of modular",
    "start": "296639",
    "end": "303600"
  },
  {
    "text": "relation is causing a large number of files to be changed for a really one systemic change",
    "start": "303600",
    "end": "310259"
  },
  {
    "text": "another definition is the ratio of unexpected problems to the scope of work so this takes the notion of how we",
    "start": "310259",
    "end": "316860"
  },
  {
    "text": "Define work usually in agile or kanban type teams where we quantify our work in",
    "start": "316860",
    "end": "324860"
  },
  {
    "text": "cards or tasks or stories or what have you and this particular definition says",
    "start": "324860",
    "end": "330660"
  },
  {
    "text": "the number of unexpected problems you encounter while doing the working plan is a measure of disorder of the software",
    "start": "330660",
    "end": "337680"
  },
  {
    "text": "system so if you encounter a large number of problems that you didn't anticipate chances are you have a high",
    "start": "337680",
    "end": "343919"
  },
  {
    "text": "degree of disorder in the software system that you are working with those are all fine definitions nothing against",
    "start": "343919",
    "end": "349139"
  },
  {
    "text": "them but I think something more organic or intrinsic something that makes",
    "start": "349139",
    "end": "355620"
  },
  {
    "text": "intrinsic senses needed so I gravitate towards the definition of entropy that",
    "start": "355620",
    "end": "362280"
  },
  {
    "text": "comes out from Ron Jeffries work so anytime you're building a software system there's some craft there you're",
    "start": "362280",
    "end": "369720"
  },
  {
    "text": "working your way around some obstacles they could be domain obstacles or they could be obstacles presented to you by",
    "start": "369720",
    "end": "376080"
  },
  {
    "text": "any Legacy software that exists beforehand or time limitations or what",
    "start": "376080",
    "end": "381120"
  },
  {
    "text": "have you all of you are in the business of creating software so you know the constraints that you work with and",
    "start": "381120",
    "end": "387479"
  },
  {
    "text": "against imagine a few of them in your way while you're delivering software as you write code as you build systems you",
    "start": "387479",
    "end": "394020"
  },
  {
    "text": "work your way around them sometimes you may remove them but most of the times the constraints are there for you to not",
    "start": "394020",
    "end": "400440"
  },
  {
    "text": "break through them work work your way around them so things are still fairly straightforward you can follow the logic",
    "start": "400440",
    "end": "406860"
  },
  {
    "text": "so to say or follow the path while avoiding the obstacles but things are not static as we just learned in the",
    "start": "406860",
    "end": "413039"
  },
  {
    "text": "keynote the only consonants change in in the universe so the obstacles grow they",
    "start": "413039",
    "end": "418319"
  },
  {
    "text": "don't remain where they are so now they're more and then they're even more so now to just simply avoid the",
    "start": "418319",
    "end": "425100"
  },
  {
    "text": "obstacles in your code you have to take these increasingly circuitous routes and the logic in your code you can think",
    "start": "425100",
    "end": "432000"
  },
  {
    "text": "in terms of dependencies or any metric that appeals to you gets more convoluted",
    "start": "432000",
    "end": "437160"
  },
  {
    "text": "the complexity increases and so this intrinsic notion this intuitive idea that I'm sure all of you",
    "start": "437160",
    "end": "444000"
  },
  {
    "text": "if you've been doing this for a while have experienced it is not something that needs to be",
    "start": "444000",
    "end": "449240"
  },
  {
    "text": "kind of you need not be compelled to believe it you probably have experiential evidence",
    "start": "449240",
    "end": "454680"
  },
  {
    "text": "this is a notion an intrinsic notion that we can use to have a qualitative sense of what",
    "start": "454680",
    "end": "462060"
  },
  {
    "text": "entropine software looks like so I Define entropy as both this qualitative",
    "start": "462060",
    "end": "467099"
  },
  {
    "text": "notion that we all experience and of course quantitative measures that we can",
    "start": "467099",
    "end": "472199"
  },
  {
    "text": "also that we can measure we can we can quantify so what are these qualitative",
    "start": "472199",
    "end": "477840"
  },
  {
    "text": "and quantitative measures that to me add up to Define entropy here's some",
    "start": "477840",
    "end": "484380"
  },
  {
    "text": "quantitative measures so the size of the software and lines of code obviously is a dated metric but you",
    "start": "484380",
    "end": "492060"
  },
  {
    "text": "can actually compare across the same language it's probably not good to compare languages with a higher degree",
    "start": "492060",
    "end": "497160"
  },
  {
    "text": "of abstraction with something like C or go with the lower degree of abstraction but in the same language family you can",
    "start": "497160",
    "end": "503220"
  },
  {
    "text": "probably compare lines of code and you can certainly compare number of files and the number of dependencies as a good",
    "start": "503220",
    "end": "509819"
  },
  {
    "text": "indicator of the proxy metric for size volatility that's easy enough if you have",
    "start": "509819",
    "end": "515940"
  },
  {
    "text": "you're using a git repo or anything approaching that which you really should be doing and the heat map will tell you",
    "start": "515940",
    "end": "522060"
  },
  {
    "text": "the volatility of each file of each module a cyclomatic complexity a well-defined metric that measures how",
    "start": "522060",
    "end": "529620"
  },
  {
    "text": "complicated your software is coupling and instability so if your software is highly coupled and therefore and stay",
    "start": "529620",
    "end": "534839"
  },
  {
    "text": "unstable that's the quantifiable measure and then cohesion and there are several metrics such as lack of cohesion or",
    "start": "534839",
    "end": "541560"
  },
  {
    "text": "tight or loose coupling of cohesion of classes that you can use so these are all quantifiable things in fact static",
    "start": "541560",
    "end": "547380"
  },
  {
    "text": "analyzers tool analyzers will do it for you so that's one component of one",
    "start": "547380",
    "end": "553260"
  },
  {
    "text": "dimension if you will of entropy there's also the qualitative measure you can try quantifying this as well but",
    "start": "553260",
    "end": "560100"
  },
  {
    "start": "555000",
    "end": "603000"
  },
  {
    "text": "some of it is still going to remain subjective the cognitive load for new Developers that's a qualitative measure how easy it",
    "start": "560100",
    "end": "566399"
  },
  {
    "text": "is for new developers to approach and comprehend your code and conform us to the real domain so if",
    "start": "566399",
    "end": "571920"
  },
  {
    "text": "you conscribe to the domain-driven principles how much are the abstractions in your software conforming to what the",
    "start": "571920",
    "end": "579480"
  },
  {
    "text": "underlying domain whatever business problem you're trying to solve how tight is that conformance or you have you modeled your domain incorrectly that can",
    "start": "579480",
    "end": "586140"
  },
  {
    "text": "be used as a subjective measure to gauge entropy so in my mind all of it together gives you this heuristic notion of what",
    "start": "586140",
    "end": "593519"
  },
  {
    "text": "entropy or disorder looks like so if you can work with this definition that entropy is the sum total of all of these",
    "start": "593519",
    "end": "600600"
  },
  {
    "text": "things and now we can address what the subject of this talk is which is why does it increase over time this original",
    "start": "600600",
    "end": "607740"
  },
  {
    "start": "603000",
    "end": "676000"
  },
  {
    "text": "thesis that left to itself the disorder in software only ratchets in One Direction Why does it happen so explore",
    "start": "607740",
    "end": "614640"
  },
  {
    "text": "that I posit that there are a few reasons for this and we'll look into that for the vocals the remainder of this talk",
    "start": "614640",
    "end": "621300"
  },
  {
    "text": "the first reason that the entropy of a software system inevitably increases is the dependency",
    "start": "621300",
    "end": "627660"
  },
  {
    "text": "Forest it's really not a tree it's a forest so",
    "start": "627660",
    "end": "633560"
  },
  {
    "text": "this has in itself multiple reasons contribute to this number one you can",
    "start": "633560",
    "end": "639120"
  },
  {
    "text": "have too many dependencies and number two you can have a progressive lack of control the",
    "start": "639120",
    "end": "644880"
  },
  {
    "text": "transitive dependencies so you may control the direct dependencies of the software you're creating or modifying but the transitive dependency is by and",
    "start": "644880",
    "end": "651839"
  },
  {
    "text": "large are out of your control because if you're depend especially if you're using a third-party module that you did not",
    "start": "651839",
    "end": "657420"
  },
  {
    "text": "offer if you are choosing to depend on a certain library or a framework and that in turn depends on others you usually",
    "start": "657420",
    "end": "663360"
  },
  {
    "text": "have very little control of how far those transitive dependencies and of course sensitivity can extend to",
    "start": "663360",
    "end": "668700"
  },
  {
    "text": "multiple layers you have very little control of how far that goes okay so let's do a little exercise",
    "start": "668700",
    "end": "676279"
  },
  {
    "start": "676000",
    "end": "708000"
  },
  {
    "text": "this is a little bit of code to create a new react app using the create react",
    "start": "676320",
    "end": "682140"
  },
  {
    "text": "app node module and I've suppressed the output because it creates a lot of stuff so I just redirected the output to Dev",
    "start": "682140",
    "end": "689100"
  },
  {
    "text": "null that's just to keep this slide manageable and fit it on one screen but",
    "start": "689100",
    "end": "694140"
  },
  {
    "text": "this creates my app you CD into that and you just list all of the",
    "start": "694140",
    "end": "699420"
  },
  {
    "text": "dependencies npml is all word count wcl there's an answer that is hidden",
    "start": "699420",
    "end": "705899"
  },
  {
    "text": "so I don't know if this is gonna work but if you want to try this",
    "start": "705899",
    "end": "711740"
  },
  {
    "start": "708000",
    "end": "803000"
  },
  {
    "text": "um you can go to this and answer this or you can shout out if any number between one and",
    "start": "712200",
    "end": "718260"
  },
  {
    "text": "ten thousand the answer actually is uh multiple choice answers so we'll see that",
    "start": "718260",
    "end": "724440"
  },
  {
    "text": "hopefully this works somebody could give me a thumbs up or thumbs down if the mentee",
    "start": "724440",
    "end": "730620"
  },
  {
    "text": "is working okay cool",
    "start": "730620",
    "end": "737339"
  },
  {
    "text": "so it's actually because of presentation mode it's going to be hard for me to",
    "start": "737339",
    "end": "742740"
  },
  {
    "text": "show them empty and the results but that's okay you can see the result",
    "start": "742740",
    "end": "748620"
  },
  {
    "text": "anybody want to shout out the answer they typed in sorry I can't show it to you",
    "start": "748620",
    "end": "753720"
  },
  {
    "text": "let's call it out whatever you typed in whatever you tapped in",
    "start": "753720",
    "end": "757700"
  },
  {
    "text": "400 anybody with a different number",
    "start": "758899",
    "end": "763339"
  },
  {
    "text": "500. it's 3114. at least that's what it was",
    "start": "764279",
    "end": "771600"
  },
  {
    "text": "yesterday when I created this slide no promises it's gonna be the same today this is literally a brand new",
    "start": "771600",
    "end": "778260"
  },
  {
    "text": "react app created with no functionality other than what comes out of the box",
    "start": "778260",
    "end": "783360"
  },
  {
    "text": "and if you just list the node packages transitively it is more than three thousand",
    "start": "783360",
    "end": "789420"
  },
  {
    "text": "that's a lot there is already a heuristic notion of entropy you can sense any one of these",
    "start": "789420",
    "end": "796079"
  },
  {
    "text": "packages that's out in node land changing materially affects this react app that you just created so I love this",
    "start": "796079",
    "end": "802500"
  },
  {
    "text": "XK old XKCD cartoon which gives this humorous perspective on how every",
    "start": "802500",
    "end": "808980"
  },
  {
    "text": "software looks like and it's like a really a classic example of Django or whatever",
    "start": "808980",
    "end": "814139"
  },
  {
    "text": "that people were playing outside some of you probably and this uh one thing that the some forlorn developer is creating",
    "start": "814139",
    "end": "820260"
  },
  {
    "text": "is really holding up the edifice and it's not a it's not a theoretical thing",
    "start": "820260",
    "end": "825540"
  },
  {
    "text": "that project could be left pad how many people know of the left pad episode",
    "start": "825540",
    "end": "831079"
  },
  {
    "text": "yeah so you so for those of you who don't just one developer left pad by the way it was a really small this is the entire",
    "start": "831120",
    "end": "837660"
  },
  {
    "start": "834000",
    "end": "907000"
  },
  {
    "text": "Library this is it 11 lines of JavaScript what it did is it padded",
    "start": "837660",
    "end": "843180"
  },
  {
    "text": "and you can read probably and make sense of it without me describing those of you who can read JavaScript it padded left",
    "start": "843180",
    "end": "848700"
  },
  {
    "text": "padded integers to make them conforming length and of course every software in",
    "start": "848700",
    "end": "854100"
  },
  {
    "text": "the node World used it because that's a common need to left pattern integer to make it a conforming lens due to some",
    "start": "854100",
    "end": "859620"
  },
  {
    "text": "acronym acrimonious debate between that developer and an organization that had taken copyright of one of the other",
    "start": "859620",
    "end": "865200"
  },
  {
    "text": "projects this developer unpublished the library on find day and broke literally",
    "start": "865200",
    "end": "871440"
  },
  {
    "text": "broke the internet because virtually I would say every other node application",
    "start": "871440",
    "end": "876839"
  },
  {
    "text": "somehow through a direct or indirect dependency used this it was solved I don't want to make this a scare tactic",
    "start": "876839",
    "end": "882300"
  },
  {
    "text": "because people recognize it in this is where open source is great and a copy of these 11 lines was republished under a",
    "start": "882300",
    "end": "888180"
  },
  {
    "text": "new note package and people change their dependencies the thing worked out in a matter of hours but you can see the",
    "start": "888180",
    "end": "893579"
  },
  {
    "text": "explore the combinatorial explosion of one library that is widely used either",
    "start": "893579",
    "end": "898740"
  },
  {
    "text": "becoming unpublished or having some bug can affect so clearly this is a source",
    "start": "898740",
    "end": "904320"
  },
  {
    "text": "of disorder so what can we do in this phase creating a software bill",
    "start": "904320",
    "end": "910980"
  },
  {
    "start": "907000",
    "end": "1134000"
  },
  {
    "text": "of materials so first thing you can do is to create an inventory of what your dependencies are you can't control what",
    "start": "910980",
    "end": "917220"
  },
  {
    "text": "you can't measure so first of all you should know what you uh what you depend on and this these recommendations come",
    "start": "917220",
    "end": "924300"
  },
  {
    "text": "from nist and their secure software development guidelines you need to pin your dependencies don't be too",
    "start": "924300",
    "end": "929699"
  },
  {
    "text": "permissive with these tildes and carrots which basically mean any compliant library that looks like",
    "start": "929699",
    "end": "935639"
  },
  {
    "text": "this that's the recipe for disaster because if you want to pin to a library pin to a specific version in fact they",
    "start": "935639",
    "end": "941339"
  },
  {
    "text": "go beyond that and say not just to a version because somebody could update the library and not update the version",
    "start": "941339",
    "end": "946440"
  },
  {
    "text": "you should pin to a specific shop a specific binary that you depend on so",
    "start": "946440",
    "end": "951959"
  },
  {
    "text": "that that is there and if you want to be and have an extra level of dependency you should not depend on a public",
    "start": "951959",
    "end": "960600"
  },
  {
    "text": "uh Library repositories such as npm which is by the way owned by a private organization you should have your own",
    "start": "960600",
    "end": "967560"
  },
  {
    "text": "internal repository of libraries and then you should basically have the dependencies internally so that you're",
    "start": "967560",
    "end": "974279"
  },
  {
    "text": "protected from that very sizable attack Vector of somebody publishing a new version of that library with a new worm",
    "start": "974279",
    "end": "982079"
  },
  {
    "text": "or bug or what have you and now you have dragged it in with your independencies every time you npm update so that's",
    "start": "982079",
    "end": "988079"
  },
  {
    "text": "something that you can do and enforce dependencies through Fitness functions we'll see that in a second the bill of",
    "start": "988079",
    "end": "994980"
  },
  {
    "text": "materials it's a well-known concept so nift uh National Institute of Science",
    "start": "994980",
    "end": "1000860"
  },
  {
    "text": "and Technology I believe has published these artifacts these are great they are a great resource I encourage all of you",
    "start": "1000860",
    "end": "1006440"
  },
  {
    "text": "to look at them um on this.org so it's a it's a public",
    "start": "1006440",
    "end": "1012440"
  },
  {
    "text": "website because it's funded by tax dollars so it's open to everybody and they have a very minimal set of the",
    "start": "1012440",
    "end": "1020959"
  },
  {
    "text": "attributes of dependencies that an s-bomb should have so this is really a handful it fits neatly on a slide so it's not a lot so",
    "start": "1020959",
    "end": "1027558"
  },
  {
    "text": "they give good practical advice on how you should annotate your dependencies",
    "start": "1027559",
    "end": "1032839"
  },
  {
    "text": "and then they say here in somewhere they say that they um",
    "start": "1032839",
    "end": "1038058"
  },
  {
    "text": "maybe not in here that they say that dependency should be on a specific compiled version of the binary not just",
    "start": "1038059",
    "end": "1044178"
  },
  {
    "text": "a version number because of the uh the openness to the vulnerability that I talked about",
    "start": "1044179",
    "end": "1049220"
  },
  {
    "text": "okay so Fitness functions how can we do that so Fitness functions and Neil Ford",
    "start": "1049220",
    "end": "1054440"
  },
  {
    "text": "um and others that Al have written this book on architectural the heart parts and in it and other books they have",
    "start": "1054440",
    "end": "1060260"
  },
  {
    "text": "talked about how to enforce architectural constraints to actually executable code all of us are probably",
    "start": "1060260",
    "end": "1065900"
  },
  {
    "text": "familiar with and may have contributed to architecture diagrams and whatever your pet architecture is whether that is",
    "start": "1065900",
    "end": "1072020"
  },
  {
    "text": "distributed or microservices or layered monolith or whatever you recreate all these diagrams and then they probably",
    "start": "1072020",
    "end": "1077360"
  },
  {
    "text": "get ignored in the actual software that is implemented so there are ways to overcome this disparity between what you",
    "start": "1077360",
    "end": "1083480"
  },
  {
    "text": "claim your architecture is versus what it actually ends up being implemented in code through these Fitness functions so",
    "start": "1083480",
    "end": "1089600"
  },
  {
    "text": "this is not really pseudocode but it could be implemented that you could influence for example in a layered",
    "start": "1089600",
    "end": "1095600"
  },
  {
    "text": "monolith you can require that there are no incorrect pointing arrows like the",
    "start": "1095600",
    "end": "1101200"
  },
  {
    "text": "Ado uh the service should depend on the data object but not the other way around strict layering means layers should be",
    "start": "1101200",
    "end": "1108140"
  },
  {
    "text": "unidirectional so you can force that nothing is causing or dragging a dependency from the wrong direction by",
    "start": "1108140",
    "end": "1114500"
  },
  {
    "text": "requiring that dependency account to be zero so this is an executable function just like any other test it would run in your",
    "start": "1114500",
    "end": "1120860"
  },
  {
    "text": "pipeline if it ever failed if any developer through carelessness or just not knowing Dragon dependency in the",
    "start": "1120860",
    "end": "1126980"
  },
  {
    "text": "wrong direction this test would fail and you would normally and they would know immediately so this is enforceable architectural constraints",
    "start": "1126980",
    "end": "1133039"
  },
  {
    "text": "okay so what's another reason lopsided test strategy",
    "start": "1133039",
    "end": "1138140"
  },
  {
    "start": "1134000",
    "end": "1187000"
  },
  {
    "text": "so we all probably know of the test pyramid which describes what I would think in pure economic terms how an",
    "start": "1138140",
    "end": "1146059"
  },
  {
    "text": "optimal test strategy should uh what shape of the testing Universe should",
    "start": "1146059",
    "end": "1151400"
  },
  {
    "text": "result in based on an optimal uh economically feasible test strategy so tests at the top are harder and then",
    "start": "1151400",
    "end": "1158299"
  },
  {
    "text": "they take more time they tend to be more brittle UI driven tests and they tend to be also verbose therefore there should",
    "start": "1158299",
    "end": "1164840"
  },
  {
    "text": "be fewer of them versus unit tests at the bottom are run super fast they bring",
    "start": "1164840",
    "end": "1169940"
  },
  {
    "text": "in fewer dependencies you should write more of them especially if you're doing tdd you should be having a lot more of them so this is what the optimal test",
    "start": "1169940",
    "end": "1178340"
  },
  {
    "text": "strategy Advocates and of course manual testing as needed that's why that's the icing on top or the cloud on the top but",
    "start": "1178340",
    "end": "1185900"
  },
  {
    "text": "what happens is over time to a variety of factors test",
    "start": "1185900",
    "end": "1191840"
  },
  {
    "start": "1187000",
    "end": "1284000"
  },
  {
    "text": "tend to Bubble up towards layers that are more expensive specifically UI",
    "start": "1191840",
    "end": "1197360"
  },
  {
    "text": "driven testing some of it is if you're using some of those point-and-click test strategy tools that",
    "start": "1197360",
    "end": "1203419"
  },
  {
    "text": "if you have a user interface and you can just point to UI widgets and it generates the test scaffolding it's very",
    "start": "1203419",
    "end": "1210740"
  },
  {
    "text": "it takes a lot of discipline to not get carried away with that it's really attractive User it's very almost a",
    "start": "1210740",
    "end": "1216320"
  },
  {
    "text": "seductive user interface that those test Frameworks give you that you can just point and click and generate a lot of test code sometimes that's the reason at",
    "start": "1216320",
    "end": "1223700"
  },
  {
    "text": "other times because of the way the software evolves it is conceptually easier to just say I'm going to write on",
    "start": "1223700",
    "end": "1229940"
  },
  {
    "text": "write an outside in test right clicking on the user interface and creating my test that way rather than figuring out",
    "start": "1229940",
    "end": "1235760"
  },
  {
    "text": "what the layer dependencies are and try to sneak the testing at the lower level maybe at the service or even at the at",
    "start": "1235760",
    "end": "1241820"
  },
  {
    "text": "the lower unit level so this this is a potentially a test a cucumber style test that you might end up with this is",
    "start": "1241820",
    "end": "1248179"
  },
  {
    "text": "shipping presumably a shipping website where you the checkout screen you enter your shipping and building address and",
    "start": "1248179",
    "end": "1253640"
  },
  {
    "text": "as you know most cases you can say my shipping and billing addresses are the same so you don't have to type it twice this test is asserting that behavior so",
    "start": "1253640",
    "end": "1260299"
  },
  {
    "text": "basically saying when I click the check box same as shipping address and then use my shipping address for my billing address",
    "start": "1260299",
    "end": "1266120"
  },
  {
    "text": "then the billing address should be hidden it should just utilize the same address so it's testing that logic of",
    "start": "1266120",
    "end": "1272480"
  },
  {
    "text": "course you can do it that way but is it the most optimal way to do it should ask yourself that question or can",
    "start": "1272480",
    "end": "1279260"
  },
  {
    "text": "we drag the functionality of this test to lower layers so here's another way assuming that this",
    "start": "1279260",
    "end": "1285919"
  },
  {
    "text": "is using junit semantics but you can visualize this in the language of your choice if the logic says that I should be using",
    "start": "1285919",
    "end": "1293480"
  },
  {
    "text": "the billing address as shipping address then I should be able to write a test at a lower level",
    "start": "1293480",
    "end": "1299539"
  },
  {
    "text": "which works with the domain object which is the customer assuming that customer",
    "start": "1299539",
    "end": "1304820"
  },
  {
    "text": "has these addresses so I should be able to use a builder pattern to say create me a customer with the two addresses are",
    "start": "1304820",
    "end": "1309980"
  },
  {
    "text": "the same then I can write an assertion that the shipping address actually equals the billing address this is not",
    "start": "1309980",
    "end": "1315380"
  },
  {
    "text": "UI dependent this is at the level of the domain objects implements the same logic",
    "start": "1315380",
    "end": "1320720"
  },
  {
    "text": "runs faster is less brittle and basically gives you the same assurance",
    "start": "1320720",
    "end": "1326240"
  },
  {
    "text": "that the other test did this is a strategy unfortunately this is where the analogy with physics breaks down in",
    "start": "1326240",
    "end": "1332840"
  },
  {
    "text": "physics we have gravity things naturally fall to the downwards we don't have that much luck in our test pyramid you have",
    "start": "1332840",
    "end": "1339140"
  },
  {
    "text": "to expend Force to drag tests down from these higher UI layers to these lower layers this test won't write itself you",
    "start": "1339140",
    "end": "1346159"
  },
  {
    "text": "will have to extract and perhaps along the way refactor your domain objects so that these they represent these",
    "start": "1346159",
    "end": "1351440"
  },
  {
    "text": "abstractions that you're looking for but it pays to do this this is a way to",
    "start": "1351440",
    "end": "1357320"
  },
  {
    "text": "reduce the entropy in your system there is an awesome talk",
    "start": "1357320",
    "end": "1363260"
  },
  {
    "text": "um I'm not going to play it it's more than an hour long but do take that QR code that is the URL it's uh dated but",
    "start": "1363260",
    "end": "1370940"
  },
  {
    "text": "it has aged very gracefully just more than I can say for myself uh this is about junit and this uh",
    "start": "1370940",
    "end": "1379340"
  },
  {
    "text": "gentleman he goes to an hour of coding to refactor a class with no test so Legacy",
    "start": "1379340",
    "end": "1386659"
  },
  {
    "text": "code Michael feathers definition right class without test read write test for it outside and refactors it gets it down",
    "start": "1386659",
    "end": "1392480"
  },
  {
    "text": "to the level it's an hour really great explanation and at the end he says I could have done it in 20 minutes which I",
    "start": "1392480",
    "end": "1398960"
  },
  {
    "text": "believe in I'm not going to question that but I don't think I think that claim misses the point it's not about the hour or the 20 minutes you spend",
    "start": "1398960",
    "end": "1405559"
  },
  {
    "text": "doing that it's about the cognitive load and the clarity of the code that you create that's going to save dozens and",
    "start": "1405559",
    "end": "1411080"
  },
  {
    "text": "dozens if not hundreds of hours for not just that person who does this but also for all their teammates because",
    "start": "1411080",
    "end": "1417200"
  },
  {
    "text": "cognitive load as we know is where developers spend most of the time you spend orders of magnitude more time",
    "start": "1417200",
    "end": "1422900"
  },
  {
    "text": "reading code than you do writing code so it doesn't really matter if it takes you one hour or 20 minutes I don't think",
    "start": "1422900",
    "end": "1427940"
  },
  {
    "text": "that's peanuts compared to the Improvement the reduction in entropy you will end up with by doing this so do",
    "start": "1427940",
    "end": "1433580"
  },
  {
    "text": "watch this talk and you'll be more convinced on how to introduce unit tests",
    "start": "1433580",
    "end": "1438679"
  },
  {
    "text": "where you have none okay so let's look at the next cause",
    "start": "1438679",
    "end": "1445039"
  },
  {
    "start": "1444000",
    "end": "1453000"
  },
  {
    "text": "Progressive test anemia that's another cause of why entropy in a software system increases",
    "start": "1445039",
    "end": "1451520"
  },
  {
    "text": "so what is anemia the medical term it's the problem of not having enough healthy",
    "start": "1451520",
    "end": "1457100"
  },
  {
    "start": "1453000",
    "end": "1486000"
  },
  {
    "text": "blood red blood cells or hemoglobin to carry oxygen to the body tissues",
    "start": "1457100",
    "end": "1462380"
  },
  {
    "text": "and there are many different forms of fat each have its own cost so it's at some level you can call it a symptom as",
    "start": "1462380",
    "end": "1468799"
  },
  {
    "text": "opposed to a disease on its own right it can be long-term or short-term and it can be mild or severe and it can be a",
    "start": "1468799",
    "end": "1476480"
  },
  {
    "text": "sign of serious illness so this is the actual definition I believe from Mayo Clinic",
    "start": "1476480",
    "end": "1483020"
  },
  {
    "text": "it's interesting I find this definition as having very",
    "start": "1483020",
    "end": "1488299"
  },
  {
    "start": "1486000",
    "end": "1561000"
  },
  {
    "text": "close analogy to how I would Define test anemia so test anemia is a problem of",
    "start": "1488299",
    "end": "1494059"
  },
  {
    "text": "not having enough Healthy Green tests to carry the burden of finding issues and again there are many forms of this",
    "start": "1494059",
    "end": "1499640"
  },
  {
    "text": "test anemia and if you leave it unaddressed it can cause serious software illness",
    "start": "1499640",
    "end": "1504980"
  },
  {
    "text": "so how does it happen over time because of a variety of pressures they",
    "start": "1504980",
    "end": "1511580"
  },
  {
    "text": "can be scheduled pressures there can be I don't have time to write tests I'm just going to fiddle with this one",
    "start": "1511580",
    "end": "1516620"
  },
  {
    "text": "little line of code in production and push it through and I know it will pass my green build what have you there can be a variety of pressures some of them",
    "start": "1516620",
    "end": "1523340"
  },
  {
    "text": "justifiable some of them less so that can cause and it's not just about coverage coverage is a little bit of a",
    "start": "1523340",
    "end": "1529640"
  },
  {
    "text": "false indicator but it's about lower confidence and the behavior of the code as I've said in my book test driven",
    "start": "1529640",
    "end": "1535880"
  },
  {
    "text": "development is a way to increase your confidence in the code you write it is not at all about coverage or even about",
    "start": "1535880",
    "end": "1541279"
  },
  {
    "text": "the mechanistic notion of writing tests first although that does help if you're especially if you're not if you find",
    "start": "1541279",
    "end": "1547580"
  },
  {
    "text": "yourself in undisciplined environments but it's really about increasing the confidence in the code you create so",
    "start": "1547580",
    "end": "1552679"
  },
  {
    "text": "over time your confidence goes down and that's really what this anemia not having enough Healthy Green test is",
    "start": "1552679",
    "end": "1558500"
  },
  {
    "text": "about um so here's an example this may be contrived although it's from that URL",
    "start": "1558500",
    "end": "1564440"
  },
  {
    "text": "and the person who posted it on stack exchange claims that it's real I adapted a little bit I should basically",
    "start": "1564440",
    "end": "1570279"
  },
  {
    "text": "shortened it to make it fit on a slide but basically what this example does is",
    "start": "1570279",
    "end": "1575360"
  },
  {
    "text": "there's some production code with a real method and to increase test coverage somebody original poster claims they were not it",
    "start": "1575360",
    "end": "1581720"
  },
  {
    "text": "but they found it uh wrote this fake method with a lot of lines of code and then a fake test a useless test method",
    "start": "1581720",
    "end": "1587779"
  },
  {
    "text": "to test the fake method to increase the test coverage so if you just make a lot of lines of code and write tests to",
    "start": "1587779",
    "end": "1593659"
  },
  {
    "text": "create those lots of lines of code your coverage numbers look good now obviously none of you do that I I take your word",
    "start": "1593659",
    "end": "1599120"
  },
  {
    "text": "for it but however it may come about",
    "start": "1599120",
    "end": "1603220"
  },
  {
    "text": "right this is not the kind of healthy green test I mean this is a useless test so who cares if it's healthy and green",
    "start": "1604700",
    "end": "1611059"
  },
  {
    "text": "so this is what we are not looking for this is a particularly egregious example",
    "start": "1611059",
    "end": "1616820"
  },
  {
    "text": "whether or not it is real it doesn't matter if you get to a point where test",
    "start": "1616820",
    "end": "1622039"
  },
  {
    "text": "coverage and other such false vanity metrics is all you're pursuing then stop and think about",
    "start": "1622039",
    "end": "1629240"
  },
  {
    "text": "how you can solve the underlying problem don't just fix the broken build",
    "start": "1629240",
    "end": "1634820"
  },
  {
    "start": "1631000",
    "end": "1682000"
  },
  {
    "text": "a broken build is a very important symptom like like anemia but you would be very ill served if that's all you",
    "start": "1634820",
    "end": "1642340"
  },
  {
    "text": "obsessed about now of course if you broke the build with your latest commit it's the easiest thing you can do is to",
    "start": "1642340",
    "end": "1649640"
  },
  {
    "text": "revert your commits so that everybody else can commit and that usually should really take seconds or no more than",
    "start": "1649640",
    "end": "1654679"
  },
  {
    "text": "minutes and then you can take your time fixing whatever you did but in that sense of course keep the build green I",
    "start": "1654679",
    "end": "1659900"
  },
  {
    "text": "mean I'm not saying keep the build broken and go home that's not be nice to your teammates make the bill green but when you get it to Green that's not the",
    "start": "1659900",
    "end": "1666500"
  },
  {
    "text": "build is a symptom of something right the green is not we're not chasing green that's a symptom to healthy software so what is that underlying cause of the",
    "start": "1666500",
    "end": "1673279"
  },
  {
    "text": "lack of health or the higher entropy if you want to stick to the physics metaphor focus on that",
    "start": "1673279",
    "end": "1679580"
  },
  {
    "text": "and of course all of you have this professional Hazard of showing up a talk",
    "start": "1679580",
    "end": "1684740"
  },
  {
    "start": "1682000",
    "end": "1700000"
  },
  {
    "text": "with me you're going to hear references to test driven development tdd one of the things it does is it increases your",
    "start": "1684740",
    "end": "1690919"
  },
  {
    "text": "confidence it reduces that entropy at the point of origin because there is uh",
    "start": "1690919",
    "end": "1698779"
  },
  {
    "text": "it's not really so much Magic it is about the discipline there is no magic sauce or if if you want to talk",
    "start": "1698779",
    "end": "1704960"
  },
  {
    "start": "1700000",
    "end": "1706000"
  },
  {
    "text": "about the magic sauce of tdd it's really the rgr cycle because this habit of only",
    "start": "1704960",
    "end": "1711679"
  },
  {
    "start": "1706000",
    "end": "1796000"
  },
  {
    "text": "writing enough production code to pass the failing test that you just wrote this keeps you in the straight and",
    "start": "1711679",
    "end": "1717500"
  },
  {
    "text": "narrow and again the focus is people get antibodies sometimes because",
    "start": "1717500",
    "end": "1724400"
  },
  {
    "text": "it looks too I don't know Draconian 1984-ish or whatever but the intent here is to keep",
    "start": "1724400",
    "end": "1731240"
  },
  {
    "text": "you purposeful at any one point you should be able to answer the question with absolute",
    "start": "1731240",
    "end": "1737360"
  },
  {
    "text": "Clarity to yourself what am I doing right now and the answer is either I'm writing a failing test",
    "start": "1737360",
    "end": "1743000"
  },
  {
    "text": "I'm making the test pass or I'm doing the refactoring post making the test fast",
    "start": "1743000",
    "end": "1748279"
  },
  {
    "text": "it should never be I'm just fudging around because then you don't have the fast feedback cycle like how will you",
    "start": "1748279",
    "end": "1753799"
  },
  {
    "text": "know when you're done fasting around you wouldn't have a way of knowing but if you do it this way this ensures that",
    "start": "1753799",
    "end": "1759679"
  },
  {
    "text": "inner fast feedback loop that as a developer and developer quality is important to us I know it keeps you in",
    "start": "1759679",
    "end": "1765200"
  },
  {
    "text": "that state of flow as a developer because you always know what you're looking at what you're doing in fact the",
    "start": "1765200",
    "end": "1771860"
  },
  {
    "text": "way I like to do it is I can take a break at any any of these stages preferably at the end of a broken test",
    "start": "1771860",
    "end": "1777679"
  },
  {
    "text": "sometimes if I need to take a break or walk I write a broken test and I step away from my computer because I know",
    "start": "1777679",
    "end": "1783260"
  },
  {
    "text": "exactly 20 minutes later when I come back what do I have to do I have to make that test pass so it is it inculcates that discipline",
    "start": "1783260",
    "end": "1790100"
  },
  {
    "text": "inculcates that habit so I would say if you want to get away from test anemia try to give this a shot",
    "start": "1790100",
    "end": "1795140"
  },
  {
    "text": "okay the next thing we'll look at is over engineering so I want to start with a story here",
    "start": "1795140",
    "end": "1803059"
  },
  {
    "start": "1796000",
    "end": "1804000"
  },
  {
    "text": "so this is the mechanics of a regular automobile car wiper no pair of wipers all of you",
    "start": "1803059",
    "end": "1810980"
  },
  {
    "start": "1804000",
    "end": "1866000"
  },
  {
    "text": "have probably seen that definitely the wipers if not the mechanics actually the mechanics are pretty straightforward there is just one motor that connects to",
    "start": "1810980",
    "end": "1818299"
  },
  {
    "text": "the rod and a connecting rod and they are a couple of pivots around which the two",
    "start": "1818299",
    "end": "1825740"
  },
  {
    "text": "vipers pivot and the whole thing just works like that okay",
    "start": "1825740",
    "end": "1831380"
  },
  {
    "text": "cars have had this mechanism for literally decades and it works",
    "start": "1831380",
    "end": "1836539"
  },
  {
    "text": "but if you are dissatisfied by what in this case is the northwest corner of the windshield",
    "start": "1836539",
    "end": "1844580"
  },
  {
    "text": "that doesn't get wiped off and if you are an exuberant engineer working for Mercedes in the 1980s you would say nah",
    "start": "1844580",
    "end": "1852320"
  },
  {
    "text": "this is not good enough this is only covering roughly whatever eighty percent of the screen I want to cover more than",
    "start": "1852320",
    "end": "1858919"
  },
  {
    "text": "that and if you have a lot of budget and frankly little has to do",
    "start": "1858919",
    "end": "1864140"
  },
  {
    "text": "you will do what Mercedes did in the 1980s with what they call their eccentric sweep",
    "start": "1864140",
    "end": "1869899"
  },
  {
    "start": "1866000",
    "end": "1872000"
  },
  {
    "text": "that works so they invented this thing which is a single wiper",
    "start": "1869899",
    "end": "1876380"
  },
  {
    "start": "1872000",
    "end": "1978000"
  },
  {
    "text": "covers roughly 86 percent of the screen of the windshield but it has got",
    "start": "1876380",
    "end": "1883340"
  },
  {
    "text": "engineering problems beyond what that simple system is so",
    "start": "1883340",
    "end": "1888500"
  },
  {
    "text": "number one this is like Phil awesome I want to play it again",
    "start": "1888500",
    "end": "1894220"
  },
  {
    "text": "number one uh the screen is rectangular obviously the windshield is rectangular so the",
    "start": "1894980",
    "end": "1900020"
  },
  {
    "text": "wiper has to extend in the corners so they have to build that little thing that reaches out to reach the corners",
    "start": "1900020",
    "end": "1905600"
  },
  {
    "text": "that is not necessary in the simple two wiper system the single wiper must run at a higher",
    "start": "1905600",
    "end": "1910820"
  },
  {
    "text": "speed to have the same effect which means this motor needs to have",
    "start": "1910820",
    "end": "1916460"
  },
  {
    "text": "both higher RPM and higher torque let's sits a more stronger motor which",
    "start": "1916460",
    "end": "1921679"
  },
  {
    "text": "makes for heavier gearing and that whole assembly has to be more heavy duty it",
    "start": "1921679",
    "end": "1927860"
  },
  {
    "text": "does tend to break more often because mechanically it's moving fast I mean if",
    "start": "1927860",
    "end": "1933080"
  },
  {
    "text": "you know mechanics things friction is a factor of Life the fact of physics higher powered motors tend to get hotter",
    "start": "1933080",
    "end": "1940159"
  },
  {
    "text": "and run hotter mechanically it's a more complicated system so when it does fail and it will fail more often than the",
    "start": "1940159",
    "end": "1945799"
  },
  {
    "text": "simpler system you are left with zero wipers which is a really big hazard",
    "start": "1945799",
    "end": "1953020"
  },
  {
    "text": "and more moving parts so they realized this and in 2000s they",
    "start": "1953020",
    "end": "1960020"
  },
  {
    "text": "quietly dropped it this eccentric sweep and then they did not have that if you think Mercedes",
    "start": "1960020",
    "end": "1965299"
  },
  {
    "text": "vehicles from after 2000 you won't see this so what if our eccentric sweep in",
    "start": "1965299",
    "end": "1971840"
  },
  {
    "text": "software this is where if you have tomatoes you should get them ready",
    "start": "1971840",
    "end": "1977679"
  },
  {
    "text": "maybe this is our version of The Eccentric Survivor okay this is not a really against kubernetes I use it we",
    "start": "1979039",
    "end": "1984620"
  },
  {
    "text": "all use it but here's the deal if you're talking about",
    "start": "1984620",
    "end": "1990200"
  },
  {
    "text": "an orchestration mechanism to deploy your containers into production and if you choose this then you no",
    "start": "1990200",
    "end": "1996860"
  },
  {
    "text": "longer you haven't just as that Meme goes you don't just do kubernetes you have adopted a lot of",
    "start": "1996860",
    "end": "2004659"
  },
  {
    "text": "cognitive load that comes with that you have if you adopt kubernetes you must",
    "start": "2004659",
    "end": "2009880"
  },
  {
    "text": "also adopt a whole lot of things that's not a cheap shot at kubernetes you need",
    "start": "2009880",
    "end": "2015340"
  },
  {
    "start": "2013000",
    "end": "2095000"
  },
  {
    "text": "to understand uh nodes and pods and Cube CDL and probably almost certainly mini",
    "start": "2015340",
    "end": "2021640"
  },
  {
    "text": "Cube because you're going to somehow test it locally so you need that you need to understand that you need to understand the control plane and the",
    "start": "2021640",
    "end": "2027340"
  },
  {
    "text": "difference on the data plane and if you're gonna use templates then you have to understand Helm and Helm charts and",
    "start": "2027340",
    "end": "2032620"
  },
  {
    "text": "how the variables get in there and then of course that brings an extra level of complexity for you",
    "start": "2032620",
    "end": "2038620"
  },
  {
    "text": "if that's the domain you're in fine then that's your solution and by",
    "start": "2038620",
    "end": "2044559"
  },
  {
    "text": "the way kubernetes isn't just a deployment orchestration mechanism it presupposes that you can have pods with",
    "start": "2044559",
    "end": "2050740"
  },
  {
    "text": "individual nodes which means your original architecture might be decompo must be decomposable enough to be",
    "start": "2050740",
    "end": "2055839"
  },
  {
    "text": "deployed in that fashion if you have a layered monolith then maybe it doesn't even fit",
    "start": "2055839",
    "end": "2061480"
  },
  {
    "text": "trying to put your right shoe in a right foot and left shoe kind of a thing so this again this is not a disk against",
    "start": "2061480",
    "end": "2068320"
  },
  {
    "text": "any particular deployment mechanism it is to say decisions that have a higher engineering",
    "start": "2068320",
    "end": "2073480"
  },
  {
    "text": "complexity have consequences they bring this cognitive load they bring this engineering complexity if you",
    "start": "2073480",
    "end": "2079540"
  },
  {
    "text": "adopt that if you make that technology decision be prepared to own the completeness of the complexity that",
    "start": "2079540",
    "end": "2085540"
  },
  {
    "text": "comes with it you can't have the the cool technology decision but say I",
    "start": "2085540",
    "end": "2091000"
  },
  {
    "text": "don't want to own the complexity it doesn't work like that I like to go back to the agile Manifesto",
    "start": "2091000",
    "end": "2096820"
  },
  {
    "start": "2095000",
    "end": "2149000"
  },
  {
    "text": "and I love the way this is phrased Simplicity the art of maximizing the amount of work not done",
    "start": "2096820",
    "end": "2104440"
  },
  {
    "text": "because we're dwelling on it the art of maximizing the amount of work not done that's the key",
    "start": "2104440",
    "end": "2110560"
  },
  {
    "text": "think about how much work you can just either at least differ if not outright",
    "start": "2110560",
    "end": "2115599"
  },
  {
    "text": "abandon in your software systems and your work and try to maximize that literally the words are meaning here you",
    "start": "2115599",
    "end": "2122140"
  },
  {
    "text": "want to maximize that metric the amount of work you don't have to do because not having to do it means not having to redo",
    "start": "2122140",
    "end": "2127960"
  },
  {
    "text": "it maintain it test it all of those things the other thing you might want to look at",
    "start": "2127960",
    "end": "2133240"
  },
  {
    "text": "to get out of this over engineering problem or tendency that we Engineers have is to look at the concept of",
    "start": "2133240",
    "end": "2138940"
  },
  {
    "text": "satisficing which is a decision-making heuristic that emphasizes the total cost",
    "start": "2138940",
    "end": "2144160"
  },
  {
    "text": "of decision including the time needed to make the decision so an analogy might help here uh in baseball",
    "start": "2144160",
    "end": "2150760"
  },
  {
    "start": "2149000",
    "end": "2259000"
  },
  {
    "text": "uh the speeds that normal pictures pitch and the distance between the pitcher and the pitcher's mound and the batter it",
    "start": "2150760",
    "end": "2156940"
  },
  {
    "text": "takes about 0.4 seconds for the pitch the ball to reach the batter in that point that less than half",
    "start": "2156940",
    "end": "2164140"
  },
  {
    "text": "a second the batter has to make these many decisions determine the type of the pitch see which way it's going to curve",
    "start": "2164140",
    "end": "2169480"
  },
  {
    "text": "if it's a strike or a ball so if it's the stride you don't have to do anything you can just let it go with the catcher",
    "start": "2169480",
    "end": "2175119"
  },
  {
    "text": "but if it's in the strike zone then you've got to take a swing at it at least determine the speed of the pitch ball so that's going to determine when",
    "start": "2175119",
    "end": "2180640"
  },
  {
    "text": "you make contact finish the stride and get their foot down so you have to take a stride and then get the bat obviously",
    "start": "2180640",
    "end": "2187000"
  },
  {
    "text": "get Bat on Ball and that's the part that matters all in less than half a second so imagine if the pitcher",
    "start": "2187000",
    "end": "2193119"
  },
  {
    "text": "or the batter is a AI driven bot and can do all those calculations in",
    "start": "2193119",
    "end": "2199000"
  },
  {
    "text": "three quarters of a second it's worthless because the ball would be in the",
    "start": "2199000",
    "end": "2205000"
  },
  {
    "text": "catcher's bid by the time the swing is taken if if your decision takes longer then",
    "start": "2205000",
    "end": "2211480"
  },
  {
    "text": "the time that you have it is worthless how accurate the decision is it doesn't matter if you swung your bat exactly where the ball was quarter of a second",
    "start": "2211480",
    "end": "2218680"
  },
  {
    "text": "ago this is the concept of satisficing the total cost of decision making when you're making engineering decisions or",
    "start": "2218680",
    "end": "2224079"
  },
  {
    "text": "for that matter any other kind of decision it is important to look at how long is it taking you to make the",
    "start": "2224079",
    "end": "2229420"
  },
  {
    "text": "decision and how long can you reap the benefits of that decision and the Perfection of that is gathered engaged",
    "start": "2229420",
    "end": "2235420"
  },
  {
    "text": "by the totality of that time not that it takes me six months to design the best organization strategy and I've missed",
    "start": "2235420",
    "end": "2240940"
  },
  {
    "text": "all these other business or technical goals along the way so that's another way you can",
    "start": "2240940",
    "end": "2246160"
  },
  {
    "text": "quell dependency for over engineering okay",
    "start": "2246160",
    "end": "2251560"
  },
  {
    "text": "the next one we will look at is stuff we cannot foresee",
    "start": "2251560",
    "end": "2256440"
  },
  {
    "text": "how about a federal government shutdown how many people are foreseeing that this is no longer sadly uh",
    "start": "2258220",
    "end": "2265180"
  },
  {
    "start": "2259000",
    "end": "2370000"
  },
  {
    "text": "a rhetorical question so if you still have that as the same code",
    "start": "2265180",
    "end": "2273339"
  },
  {
    "text": "um I think you should be able to go to the next uh do you see the next uh question or the",
    "start": "2273339",
    "end": "2279820"
  },
  {
    "text": "same one so you can just raise your hand if you're prepared for the government shutdown you're planning for it",
    "start": "2279820",
    "end": "2287260"
  },
  {
    "text": "so some of you are most of you can be forgiven for not doing that because number one as maybe a",
    "start": "2287260",
    "end": "2293560"
  },
  {
    "text": "software developers you'd think it does that doesn't affect you especially if the government is not your client then you're not really thinking about am I",
    "start": "2293560",
    "end": "2299140"
  },
  {
    "text": "going to get paid or not but maybe you should",
    "start": "2299140",
    "end": "2304420"
  },
  {
    "text": "so on in January 2018 the federal government did shut down hopefully it doesn't happen next month",
    "start": "2304420",
    "end": "2310780"
  },
  {
    "text": "uh similar reasons for a good political impasse and preventing the passage of",
    "start": "2310780",
    "end": "2316660"
  },
  {
    "text": "legislation of funds that are necessary to keep different parts of the government running as you how they know if you've been following current events",
    "start": "2316660",
    "end": "2322780"
  },
  {
    "text": "now of course that doesn't matter to most people I mean if you're working if you're creating software for a private Enterprise you're like okay well it's",
    "start": "2322780",
    "end": "2329079"
  },
  {
    "text": "sad I mean it may bother you as a citizen or a taxpayer or a voter but as a software engineer you're like I don't",
    "start": "2329079",
    "end": "2334180"
  },
  {
    "text": "care doesn't affect me but it did affect us the team I was in because part of our",
    "start": "2334180",
    "end": "2339940"
  },
  {
    "text": "continuous integration pipeline did vulnerability analysis for vulnerability analysis we look at",
    "start": "2339940",
    "end": "2346900"
  },
  {
    "text": "the cve database common vulnerability exploits that database is hosted by nist",
    "start": "2346900",
    "end": "2354339"
  },
  {
    "text": "this is a government-funded organization and it did go down",
    "start": "2354339",
    "end": "2360700"
  },
  {
    "text": "on that day and our bill broke so the government really broke our build",
    "start": "2360700",
    "end": "2367480"
  },
  {
    "text": "on that day so it may happen so if you go back to that XKCD cartoon that little dependency need not be a",
    "start": "2367480",
    "end": "2373660"
  },
  {
    "text": "disgruntled developer that could be the cve database that you now depend on so we say that it's stuff that you can't",
    "start": "2373660",
    "end": "2381599"
  },
  {
    "text": "foresee but I want to re reframe that as 5 Alpha is stuff that we refuse to",
    "start": "2381599",
    "end": "2387400"
  },
  {
    "start": "2384000",
    "end": "2412000"
  },
  {
    "text": "foresee now that you know it the excuse that I didn't know it goes away",
    "start": "2387400",
    "end": "2392500"
  },
  {
    "text": "so what do you do well there are things that you can do about it and if you see things this way",
    "start": "2392500",
    "end": "2398500"
  },
  {
    "text": "if you expand your threat analysis then there are a lot more things that you can see that you previously might have",
    "start": "2398500",
    "end": "2404020"
  },
  {
    "text": "thought well I could have never imagined that there's more in your imagination that then you give yourself and your team's",
    "start": "2404020",
    "end": "2409420"
  },
  {
    "text": "credit for so here's the last um",
    "start": "2409420",
    "end": "2414579"
  },
  {
    "text": "thing and you can just shout this out so um here's the thing that you can foresee",
    "start": "2414579",
    "end": "2419800"
  },
  {
    "text": "maybe so in JavaScript and Json you can have a trailing comma",
    "start": "2419800",
    "end": "2425140"
  },
  {
    "text": "so if you define an array one two three comma and you type it it's got the one two three so if we parse the same thing as a",
    "start": "2425140",
    "end": "2432579"
  },
  {
    "text": "string how many people think they'll pass correctly because clearly defining an array with the trailing",
    "start": "2432579",
    "end": "2438160"
  },
  {
    "text": "comma is okay so can I parse an array with the trailing comma How many people think it will work",
    "start": "2438160",
    "end": "2443260"
  },
  {
    "text": "and you know but none of you trust JavaScript to be consistent among yourself you're you're on the right footing this",
    "start": "2443260",
    "end": "2450099"
  },
  {
    "text": "actually gives you an exception JavaScript is inconsistent it's got two minds it's kind of psychotic internally",
    "start": "2450099",
    "end": "2456220"
  },
  {
    "text": "when you define an array it's okay to have a trailing comma when you shoot express the same thing as a string and",
    "start": "2456220",
    "end": "2462099"
  },
  {
    "text": "then tell Json to parse it to say no I can't deal with trading columns these are the kind of things it's a small",
    "start": "2462099",
    "end": "2467200"
  },
  {
    "text": "example but try foreseeing these things if you have a software system that takes",
    "start": "2467200",
    "end": "2472599"
  },
  {
    "text": "input from the console and people can type trailing commas then it takes that stringifies that and then tries to",
    "start": "2472599",
    "end": "2478240"
  },
  {
    "text": "convert it back it will fail exactly there for that reason and you are now you have no excuse to not foresee that",
    "start": "2478240",
    "end": "2485140"
  },
  {
    "text": "and take defensive action defend against the horse that you can",
    "start": "2485140",
    "end": "2490240"
  },
  {
    "start": "2488000",
    "end": "2512000"
  },
  {
    "text": "you may be surprised how long that list is you worry about the things and there was",
    "start": "2490240",
    "end": "2495280"
  },
  {
    "text": "a question in an earlier conversation about what do I do with X Y and Z happens put that aside and focus on the things",
    "start": "2495280",
    "end": "2501160"
  },
  {
    "text": "you actually know about you might be surprised how long that list is address that first and then we",
    "start": "2501160",
    "end": "2507400"
  },
  {
    "text": "can talk about the things that uh that we really can't control okay so in conclusion here are some of the things",
    "start": "2507400",
    "end": "2515079"
  },
  {
    "start": "2512000",
    "end": "2546000"
  },
  {
    "text": "that we talked about dependency for us Progressive test anemia lopsided test strategy over engineering stuff we",
    "start": "2515079",
    "end": "2521740"
  },
  {
    "text": "refuse to foresee because really there's a lot more of that than really stuff we cannot foresee",
    "start": "2521740",
    "end": "2527680"
  },
  {
    "text": "okay that's all I have thanks so much [Applause]",
    "start": "2527680",
    "end": "2534609"
  }
]