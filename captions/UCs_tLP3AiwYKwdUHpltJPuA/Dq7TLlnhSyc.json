[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "Hello, and welcome to GOTO Book Club. Once again, my name is James Lewis.",
    "start": "2129",
    "end": "9139"
  },
  {
    "text": "I'm a director at ThoughtWorks. And today I'm delighted to be talking to Unmesh\nJoshi about the release of his new book, and",
    "start": "9140",
    "end": "15830"
  },
  {
    "text": "the patterns within it, \"Patterns of Distributed\nSystems.\" Unmesh , would you like to introduce yourself\nto the audience?",
    "start": "15830",
    "end": "24150"
  },
  {
    "text": "Hey, folks. My name is Unmesh Joshi, and I work as a principal\nconsultant at ThoughtWorks.",
    "start": "24150",
    "end": "30000"
  },
  {
    "text": "I've been with ThoughtWorks for close to 16,\nor 17 years now.",
    "start": "30000",
    "end": "36750"
  },
  {
    "text": "And last several years, I've been thinking\nand writing about distributed systems.",
    "start": "36750",
    "end": "41760"
  },
  {
    "text": "And we'll cover more of that, I think, as\nwe talk.",
    "start": "41760",
    "end": "48719"
  },
  {
    "start": "47000",
    "end": "637000"
  },
  {
    "text": "That's a fairly long time to be in a consulting\norganization. Can you tell me a bit about the background?",
    "start": "48720",
    "end": "54340"
  },
  {
    "text": "Maybe some of the some of the experiences\nthat led you to become interested in distributed",
    "start": "54340",
    "end": "60100"
  },
  {
    "text": "systems, the sort of experiences you've had\nthat led you down this path? Because, I mean, frankly, this is a lesser\ntrodden path in, you know, the software engineering",
    "start": "60100",
    "end": "69970"
  },
  {
    "text": "literature, certainly the sort of...the more\nsort of user-friendly literature, because",
    "start": "69970",
    "end": "76590"
  },
  {
    "text": "it's regarded as a very difficult topic. So, what were the experiences that led you\nto this?",
    "start": "76590",
    "end": "81960"
  },
  {
    "text": "It was an interesting journey, I would say.",
    "start": "81960",
    "end": "87090"
  },
  {
    "text": "I think any professional for the last several\nyears working with the cloud, I mean, you",
    "start": "87090",
    "end": "92950"
  },
  {
    "text": "see services and products you use on the cloud\nor even in your data centers that are distributed",
    "start": "92950",
    "end": "101070"
  },
  {
    "text": "by nature, right? I mean, you use Kafka, you use even simple\nthings like Amazon S3.",
    "start": "101070",
    "end": "107259"
  },
  {
    "text": "And I had been using, like everyone else,\nsome of that.",
    "start": "107259",
    "end": "113250"
  },
  {
    "text": "And I was always, like, curious, I mean, why\nnow? And why they are designed the way they are?",
    "start": "113250",
    "end": "120500"
  },
  {
    "text": "But I never spent more time going in-depth\nor in detail.",
    "start": "120500",
    "end": "128539"
  },
  {
    "text": "Until the point where, like, around, I think,\n2017, I got a chance to work on a very interesting",
    "start": "128539",
    "end": "137480"
  },
  {
    "text": "project. And so, we were involved in developing software\nfor an optical telescope.",
    "start": "137480",
    "end": "145709"
  },
  {
    "text": "And that's going to be one of the largest\ntelescopes once it goes live called the Thirty",
    "start": "145709",
    "end": "151600"
  },
  {
    "text": "Meter Telescope. Naturally, because it was a telescopic ecosystem,\nthe software that we were developing, we could",
    "start": "151600",
    "end": "158330"
  },
  {
    "text": "not use off-the-shelf products. I mean, we used frameworks like Akka.",
    "start": "158330",
    "end": "164099"
  },
  {
    "text": "But we had to do a lot of framework development\nourselves.",
    "start": "164099",
    "end": "169390"
  },
  {
    "text": "It turned out just because multiple telescopes\nof systems need to coordinate, and you need",
    "start": "169390",
    "end": "177780"
  },
  {
    "text": "to keep data that's highly available and also\nconsistent. What we were building turned out to be a distributed\nsystem.",
    "start": "177780",
    "end": "189610"
  },
  {
    "text": "At that point, I mean, I kind of had to go\nin-depth of how these things are built and",
    "start": "189610",
    "end": "197541"
  },
  {
    "text": "how they work.",
    "start": "197541",
    "end": "204870"
  },
  {
    "text": "All the literature, I mean, the books and\nacademic papers that are out there, I mean...",
    "start": "204870",
    "end": "212950"
  },
  {
    "text": "You're essentially going back to Lamport,\naren't you? Yes, we'll talk about Lamport, I mean, Paxos\nand other things. But a lot of that, I mean, it took a lot of...I\nmean, you need to stretch your imagination",
    "start": "212950",
    "end": "228580"
  },
  {
    "text": "when you read something and then you go and,\nsay, start writing Java code.",
    "start": "228580",
    "end": "234680"
  },
  {
    "text": "How do you map things? And what I started doing at that point was,\nI mean, I think, I mean, to test if you understand",
    "start": "234680",
    "end": "246950"
  },
  {
    "text": "something is to write code and to run that\nin production, I mean, that's the ultimate",
    "start": "246950",
    "end": "254319"
  },
  {
    "text": "test always. But then I thought it might be easier if I\nlooked at code that...I mean, there are a",
    "start": "254319",
    "end": "261150"
  },
  {
    "text": "lot of open-source frameworks out there, like\nKafka and Cassandra and stuff like that, those",
    "start": "261150",
    "end": "268620"
  },
  {
    "text": "are open-source tools. And they are battle-tested in production.",
    "start": "268620",
    "end": "274040"
  },
  {
    "text": "So why not go and look at their code and try\nto make sense of it and see what the building",
    "start": "274040",
    "end": "281290"
  },
  {
    "text": "blocks look like? So it's also a good validation of some of\nwhat we are building if it matches with some",
    "start": "281290",
    "end": "290520"
  },
  {
    "text": "of the decisions that are taken there as well. To start with, it was hard because you can\nimagine, you open a Cassandra code base, and",
    "start": "290520",
    "end": "300290"
  },
  {
    "text": "you don't know where to start really.",
    "start": "300290",
    "end": "306340"
  },
  {
    "text": "So what I started doing was, I mean, I just\nthought if I need to build Kafka, Kafka-like",
    "start": "306340",
    "end": "313860"
  },
  {
    "text": "thing, what are the things are needed and\nmaybe look at some of the earlier versions",
    "start": "313860",
    "end": "320650"
  },
  {
    "text": "of Kafka. And it's a good thing with open source that\nyou can go through the commit history.",
    "start": "320650",
    "end": "328030"
  },
  {
    "text": "Generally, you see that some of the earlier\nversions of all these complex products are",
    "start": "328030",
    "end": "333289"
  },
  {
    "text": "simple and easier to look at.",
    "start": "333289",
    "end": "339169"
  },
  {
    "text": "So I went through those, and I tried building\nmy miniature versions of these products.",
    "start": "339169",
    "end": "346949"
  },
  {
    "text": "And that naturally, because I looked at multiple\nof these, I could figure out that okay, similar",
    "start": "346949",
    "end": "356300"
  },
  {
    "text": "things are happening, even if not the same,\nthere are similar building blocks in code",
    "start": "356300",
    "end": "364449"
  },
  {
    "text": "that you see. And I just happened to talk to Martin Fowler\nabout it, and this is the approach that I'm",
    "start": "364450",
    "end": "372660"
  },
  {
    "text": "taking to learning how distributed systems\nwork. I also tried teaching using code because we\nwere attempting to teach more developers about",
    "start": "372660",
    "end": "389169"
  },
  {
    "text": "distributed system concepts. And we also had some college professors taking\nsessions for our developers.",
    "start": "389170",
    "end": "397639"
  },
  {
    "text": "But, I mean, it never worked well because,\nas I said, there is a gap between the theory",
    "start": "397639",
    "end": "406050"
  },
  {
    "text": "that you learn and the code. So this more code-driven approach of if you\nneed to build something that is a distributed",
    "start": "406050",
    "end": "415650"
  },
  {
    "text": "key-value store, let's say, what building\nblocks you need to think of and how they look",
    "start": "415650",
    "end": "421620"
  },
  {
    "text": "like in code. And that worked pretty well. That's when Martin thought that, I think the\npatterns approach is probably better because",
    "start": "421620",
    "end": "433800"
  },
  {
    "text": "you see things that are similar but not the\nsame. They cover a broader range of implementations\nout there.",
    "start": "433800",
    "end": "443690"
  },
  {
    "text": "Yeah, so that's how it started. You touched on several things I find quite\ninteresting there.",
    "start": "443690",
    "end": "449590"
  },
  {
    "text": "I remember a conversation I had some years\nago with Brian Goetz about the \"Java Concurrency\"",
    "start": "449590",
    "end": "456240"
  },
  {
    "text": "book he wrote. And I was sort of amazed at how he got into\nit. I was like, \"Oh my God,\" because it became\nthe Bible, right?",
    "start": "456240",
    "end": "462270"
  },
  {
    "text": "If you're working in multi-threaded systems\nin Java, everyone has that book on their shelf.",
    "start": "462270",
    "end": "467909"
  },
  {
    "text": "I said, \"Brian, how did you...you know, how\ncome you to write this book? You know, were you this massive expert in\nconcurrency?",
    "start": "467909",
    "end": "473599"
  },
  {
    "text": "He said, \"No, it turns out I wanted to learn\nhow it worked. I thought the best way of doing that was to\nstart writing this stuff down and start writing",
    "start": "473599",
    "end": "485520"
  },
  {
    "text": "code to work out how it worked for myself,\nand it turned into the 'Java Concurrency' book.\" It seems like a very similar thing that you've\ndone [crosstalk 00:08:10.845] curiosity.",
    "start": "485520",
    "end": "493080"
  },
  {
    "text": "It was more like demystifying some of the\nwords that you...I mean, you read Lamport's",
    "start": "493080",
    "end": "500780"
  },
  {
    "text": "clock, and you want to see, I mean, how does\nthat look in code and where it's used?",
    "start": "500780",
    "end": "510110"
  },
  {
    "text": "Yes, because jokingly you mentioned the Lamport's\npapers earlier, a minute or so ago.",
    "start": "510110",
    "end": "516800"
  },
  {
    "text": "And actually, they genuinely are that, them\nand the Liskov papers and going back almost",
    "start": "516800",
    "end": "523969"
  },
  {
    "text": "like two generations of software engineers\nnow. They are. But also, they're academic.",
    "start": "523970",
    "end": "530079"
  },
  {
    "text": "They're academic. So it is fascinating how you've taken those\nideas and brought them into a form that, you",
    "start": "530080",
    "end": "540480"
  },
  {
    "text": "know, regular Joes like myself, regular software\nengineers like myself can understand, right?",
    "start": "540480",
    "end": "546029"
  },
  {
    "text": "It's a pretty staggered achievement, I have\nto say. First of all, thank you from everyone for\ndoing it.",
    "start": "546030",
    "end": "551079"
  },
  {
    "text": "The other thing I think you talked about there,\nwhich I thought was quite amusing in a sense",
    "start": "551080",
    "end": "556149"
  },
  {
    "text": "was this idea that I think it's typical of\nmany of our colleagues, I think.",
    "start": "556149",
    "end": "563500"
  },
  {
    "text": "It's one of the reasons I think I love working\nwith ThoughtWorks, which is the idea that",
    "start": "563500",
    "end": "568519"
  },
  {
    "text": "the way you get to understand something is\nby turning it into code and running it into",
    "start": "568519",
    "end": "574230"
  },
  {
    "text": "production. It's almost like, you know, Richard Feynman,\nyou know, the Nobel Prize-winning physicist, he used to say about, you know, the way you\nunderstand something is by teaching it to",
    "start": "574230",
    "end": "581510"
  },
  {
    "text": "others. I guess this is like the strong version of\nteaching it to others, right? It's you're teaching it, right, where there\nis no misunderstanding, you know?",
    "start": "581510",
    "end": "590459"
  },
  {
    "text": "Unmesh Joshi:, I have it so many times.",
    "start": "590459",
    "end": "595709"
  },
  {
    "text": "And maybe it's just me, but I've seen it with\nmost of the professional developers that you",
    "start": "595710",
    "end": "603990"
  },
  {
    "text": "understand things. And that's maybe the nature of software development\nitself that you...I mean, there is a limit",
    "start": "603990",
    "end": "614110"
  },
  {
    "text": "to how much you can specify and imagine things\non a whiteboard and maybe with some abstract",
    "start": "614110",
    "end": "621100"
  },
  {
    "text": "concepts. Finally, when you write code, you get more\ninsights and then you can reflect on those",
    "start": "621100",
    "end": "628980"
  },
  {
    "text": "insights and then maybe go back to specifications\nand stuff like...I mean, that's just the very",
    "start": "628980",
    "end": "635199"
  },
  {
    "text": "nature of software development, I think. So if we were to, I guess, come back to basics,\nright, so when we say distributed systems,",
    "start": "635200",
    "end": "644840"
  },
  {
    "start": "637000",
    "end": "907000"
  },
  {
    "text": "what do we mean when we say distributed system? What makes...I know maybe it's a silly question,\nbut I mean, let's come right back, and when",
    "start": "644840",
    "end": "652691"
  },
  {
    "text": "we say distributed system, what is that? What does that entail? That's a great question, I think because people\ninterpret distributed systems with their context.",
    "start": "652691",
    "end": "664770"
  },
  {
    "text": "I mean, the microservices ecosystem itself\nis...I mean, can be called a distributed system",
    "start": "664770",
    "end": "671029"
  },
  {
    "text": "as well. And Kafka is a distributed system as well. And cloud is a distributed system.",
    "start": "671029",
    "end": "676779"
  },
  {
    "text": "What I primarily have focused on is, essentially,\nwhen you have data systems, I mean, you need",
    "start": "676779",
    "end": "689700"
  },
  {
    "text": "to maintain state and you need to maintain\nit on multiple servers to make it available.",
    "start": "689700",
    "end": "699050"
  },
  {
    "text": "Then you need to make sure that that state\nis consistent across servers and whatever",
    "start": "699050",
    "end": "707610"
  },
  {
    "text": "systems, and obviously, you need to shard\nor partition that state so that you can have",
    "start": "707610",
    "end": "713700"
  },
  {
    "text": "lots and lots of data stored and processed.",
    "start": "713700",
    "end": "719180"
  },
  {
    "text": "So I think what I have focused on is this\nkind of systems and things like Kafka, Cassandra,",
    "start": "719180",
    "end": "727690"
  },
  {
    "text": "Amazon S3, Cosmos DB, and I mean, all the\ndata things.",
    "start": "727690",
    "end": "733780"
  },
  {
    "text": "So really, we're talking in terms of CAP theorem,\nwe're talking...and correct me because I might",
    "start": "733780",
    "end": "739089"
  },
  {
    "text": "be wrong here, but in terms of CAP theorem,\nwe're talking about consistent systems as opposed to available systems.",
    "start": "739089",
    "end": "746470"
  },
  {
    "text": "Consistent. And there is always a balance. I think that all these systems, like Paxos,\nfor example, also is available as long as",
    "start": "746470",
    "end": "758259"
  },
  {
    "text": "the majority of the servers are available. But beyond that, it will just favor consistency.",
    "start": "758260",
    "end": "765860"
  },
  {
    "text": "Cool. Thank you. Maybe let's talk about, I mean, you mentioned\nbriefly about the patterns.",
    "start": "765860",
    "end": "773160"
  },
  {
    "text": "Why did you go for the patterns approach to\nstart with? Why not just go for, you know, writing your\npiece of software essentially?",
    "start": "773160",
    "end": "779560"
  },
  {
    "text": "Why not release your own Kafka, right, and\nsay, look at this? I mean, so patterns I thought was a useful\napproach, because let's say if you have to",
    "start": "779560",
    "end": "791290"
  },
  {
    "text": "build something like Kafka, the concepts that\nyou need to know or need to implement, there",
    "start": "791290",
    "end": "799790"
  },
  {
    "text": "is a lot of similarity between, for example,\nwhen you implement something like Cassandra,",
    "start": "799790",
    "end": "805639"
  },
  {
    "text": "even if not the same, or you are implementing\nsomething like HCD, which is a Raft implementation.",
    "start": "805640",
    "end": "811740"
  },
  {
    "text": "There are a lot of common concepts between,\nsay, Raft and Kafka's replication mechanism.",
    "start": "811740",
    "end": "820570"
  },
  {
    "text": "So patterns approach, allows you to talk of\nthese similar concepts that span across multiple",
    "start": "820570",
    "end": "829320"
  },
  {
    "text": "implementations. And then they become more useful, I think,\nbecause once...for example, there is a concept",
    "start": "829320",
    "end": "839551"
  },
  {
    "text": "of, let's say, high water mark that when you\nare replicating a log, you need to demarcate",
    "start": "839551",
    "end": "847070"
  },
  {
    "text": "which portion of your log is, like, stable,\nit's not going to change, and which portion",
    "start": "847070",
    "end": "852820"
  },
  {
    "text": "is volatile. I mean, it might change if your nodes crash\nand letters change and stuff like that. Now, that high watermark concept, whenever\nyou use log replication like in Kafka, is",
    "start": "852820",
    "end": "864089"
  },
  {
    "text": "also there in Raft, which is called a committed\nindex. And whether you use some other replicated\nlog algorithm like viewstamped replication",
    "start": "864089",
    "end": "874199"
  },
  {
    "text": "or multiplex source, which no one has documented\nhow it's implemented.",
    "start": "874199",
    "end": "882600"
  },
  {
    "text": "But you need some concept like that.",
    "start": "882600",
    "end": "889230"
  },
  {
    "text": "And once you know what that concept is and\nhow it's typically implemented, you read a",
    "start": "889230",
    "end": "894930"
  },
  {
    "text": "Raft paper or a view-stamped replication paper\nor Kafka's replication mechanism, you know",
    "start": "894930",
    "end": "904149"
  },
  {
    "text": "what's going on and you can connect the dots. So you mentioned Raft and Paxos.",
    "start": "904149",
    "end": "909949"
  },
  {
    "start": "907000",
    "end": "1980000"
  },
  {
    "text": "I mean, probably these are names that people\nhave been bandied around or different mechanisms",
    "start": "909949",
    "end": "915410"
  },
  {
    "text": "for staying consistent, etc., etc. So I mean, just to put you on the spot, here\nyou go, describe the differences between Raft",
    "start": "915410",
    "end": "923569"
  },
  {
    "text": "and Paxos for us. I think that's important because you see that\nPaxos, the Microsoft and Google folks, and",
    "start": "923570",
    "end": "937060"
  },
  {
    "text": "all the services they have, they always mention\nthat they implement Paxos for replica consistency",
    "start": "937060",
    "end": "943050"
  },
  {
    "text": "and all the open-source world says that they\nimplement Raft. And if you read Paxos paper, the original\n\"Paxos Made Simple\" or other papers, what",
    "start": "943050",
    "end": "955509"
  },
  {
    "text": "it describes is what is called as a single-degree\nPaxos, like how multiple nodes achieve consensus",
    "start": "955509",
    "end": "964089"
  },
  {
    "text": "on a single value. So in the literature, what's understood as\nPaxos, and I have documented that as a pattern.",
    "start": "964089",
    "end": "973370"
  },
  {
    "text": "So I've documented Paxos as a pattern because\nwe thought that concept that you need two",
    "start": "973370",
    "end": "982600"
  },
  {
    "text": "phases to reach an agreement between nodes. Then you use a majority quorum to make sure\nthat the decision taken by the previous quorum",
    "start": "982600",
    "end": "993509"
  },
  {
    "text": "is visible whenever you try next. And you have something called as I mean, what\nI have documented as a different pattern called",
    "start": "993509",
    "end": "1003339"
  },
  {
    "text": "generation clock. So all this coordination is done by a leader,\nwhich is called a proposer in Paxos.",
    "start": "1003339",
    "end": "1014470"
  },
  {
    "text": "And you mark the leadership with monotonically\nincreasing numbers so that if there are...I mean, you always tolerate multiple leaders,\nbut you can always cut off older leaders.",
    "start": "1014470",
    "end": "1024430"
  },
  {
    "text": "So only the latest leader can make progress. So this basic mechanism of how to combine\nthese concepts of epochs or generation clock,",
    "start": "1024430",
    "end": "1034850"
  },
  {
    "text": "two-phased execution, and then the recovering\nfrom, let's say, partial rights, Paxos documents",
    "start": "1034850",
    "end": "1045329"
  },
  {
    "text": "that and how to do that for, let's say, a\nsingle request or a single value.",
    "start": "1045329",
    "end": "1050950"
  },
  {
    "text": "You mentioned something, Unmesh ...Do you\nmind if I just interrupt, because you mentioned something really which we should probably...maybe\nthis is not the right time we can come back",
    "start": "1050950",
    "end": "1057260"
  },
  {
    "text": "to it, but you mentioned something like the\nlatest, we tolerate multiple, but the latest.",
    "start": "1057260",
    "end": "1062660"
  },
  {
    "text": "And that comes to the heart of the problems\nwith distributed systems, doesn't it?",
    "start": "1062660",
    "end": "1068260"
  },
  {
    "text": "We'll talk about it. So that latest comes in various areas of...so\nwhat is the latest value?",
    "start": "1068260",
    "end": "1079700"
  },
  {
    "text": "I mean, in terms of Paxos, when I say latest\nleader, I mean, what is the leader that has just won the election, let's say, which has\nthe latest epoch or the latest generation",
    "start": "1079700",
    "end": "1091440"
  },
  {
    "text": "clock, and it can be the only leader that\ncan make progress.",
    "start": "1091440",
    "end": "1098700"
  },
  {
    "text": "So these concepts, and how they work together\nare documented in Paxos, and literature, mostly",
    "start": "1098700",
    "end": "1106149"
  },
  {
    "text": "it's documented how to do that for a single\nvalue or a single request.",
    "start": "1106150",
    "end": "1112070"
  },
  {
    "text": "But obviously, one of the side effects or\none of the issues with this basic mechanism",
    "start": "1112070",
    "end": "1120880"
  },
  {
    "text": "is this basic mechanism is what you can call\ninitialized ones. So once you reach an agreement, you cannot\nhave another request or another value that",
    "start": "1120880",
    "end": "1133840"
  },
  {
    "text": "can be chosen. So it becomes immutable after that. And that's...even if it's a good way to understand\nthe basic mechanism and how to structure that",
    "start": "1133840",
    "end": "1148380"
  },
  {
    "text": "basic mechanism to reach an agreement, it's\nnot very useful in practice if you have to build a database, for example, because, I\nmean, you need to update values multiple times",
    "start": "1148380",
    "end": "1156870"
  },
  {
    "text": "and you need to maybe execute requests like\nregister release when you implement something",
    "start": "1156870",
    "end": "1164850"
  },
  {
    "text": "like HCD. And the mechanism to do that essentially is\nto arrange all your requests in an ordered",
    "start": "1164850",
    "end": "1176520"
  },
  {
    "text": "log. And you can imagine, again, that if you execute\nthis basic Paxos mechanism on each entry on",
    "start": "1176520",
    "end": "1185549"
  },
  {
    "text": "this ordered log, then you know that all the\nnodes will reach agreement on each entry.",
    "start": "1185549",
    "end": "1194340"
  },
  {
    "text": "And then if they execute these requests and\nfollow that log order, they will execute all",
    "start": "1194340",
    "end": "1201809"
  },
  {
    "text": "the requests in the same order and then they\nwill reach the same state.",
    "start": "1201809",
    "end": "1209850"
  },
  {
    "text": "This basic Paxos mechanism, like two phases\nand establishing epoch by quorum voting, it's",
    "start": "1209850",
    "end": "1219291"
  },
  {
    "text": "not very efficient, naturally, if you do it\nevery time you get a user request.",
    "start": "1219291",
    "end": "1226080"
  },
  {
    "text": "And you need to optimize that for any production\nimplementation.",
    "start": "1226080",
    "end": "1231440"
  },
  {
    "text": "And generally, that's what happened in practice. I mean, whenever someone says that they implement\nPaxos for implementing, let's say, replica",
    "start": "1231440",
    "end": "1243659"
  },
  {
    "text": "consistency in their database, mostly they\nare using something like a replicated log",
    "start": "1243659",
    "end": "1249940"
  },
  {
    "text": "mechanism. And that replicated log mechanism essentially\nthen combines this basic Paxos to elect a",
    "start": "1249940",
    "end": "1259919"
  },
  {
    "text": "leader at startup. And then all the requests essentially are\nordered in the log.",
    "start": "1259919",
    "end": "1269180"
  },
  {
    "text": "This single leader does that. So it's not like for every request you go\nand try to establish a leadership.",
    "start": "1269180",
    "end": "1277529"
  },
  {
    "text": "And then it also combines things like the\nhigh water mark that I talked about that you",
    "start": "1277530",
    "end": "1285059"
  },
  {
    "text": "demarcate your ordered log so that you know\nwhat is the stable portion of the log and",
    "start": "1285059",
    "end": "1292240"
  },
  {
    "text": "what is the not-so-stable portion. And Raft essentially details how to do that\nwith all the nitty-gritty in the implementation.",
    "start": "1292240",
    "end": "1304330"
  },
  {
    "text": "So essentially, Raft is an evolution towards\npracticality...",
    "start": "1304330",
    "end": "1309908"
  },
  {
    "text": "Practicality, yes.\n...of the basic Paxos algorithm. When I say basic Paxos algorithm, it's not\nbasic at all.",
    "start": "1309909",
    "end": "1316010"
  },
  {
    "text": "I mean, it reminds me...I think I shared with\nyou previously an article that James Lewis",
    "start": "1316010",
    "end": "1322409"
  },
  {
    "text": "Mickens, the former Microsoft Distributed\nSystems researcher wrote. He used this magazine on Byzantine generals.",
    "start": "1322409",
    "end": "1329700"
  },
  {
    "text": "\"The Byzantine generals' algorithms are popping\nup all the time.",
    "start": "1329700",
    "end": "1336380"
  },
  {
    "text": "And frankly, they're really simple.\" They're not simple. Oh, yeah. It brings me actually, because you talked\nabout a couple of things there relating to...well,",
    "start": "1336380",
    "end": "1345490"
  },
  {
    "text": "I mean, in my mind relating to time. And I think that's something crucially we\nshould probably talk about because it's at",
    "start": "1345490",
    "end": "1352220"
  },
  {
    "text": "the heart of the problem with distributed\nsystems, isn't it? Yes. How you manage time across multiple different\nprocesses, multiple different systems.",
    "start": "1352220",
    "end": "1361070"
  },
  {
    "text": "Yes. Absolutely. And very interestingly, I mean, as you know,\nGoogle has this timing infrastructure called",
    "start": "1361070",
    "end": "1370528"
  },
  {
    "text": "TrueTime with atomic clocks and GPS and stuff\nlike that.",
    "start": "1370529",
    "end": "1376140"
  },
  {
    "text": "And a good thing to know is that even with\natomic clocks and all the infrastructure that",
    "start": "1376140",
    "end": "1383179"
  },
  {
    "text": "Google has, when they have data centers across\nthe globe and servers spanned so far, they",
    "start": "1383179",
    "end": "1394470"
  },
  {
    "text": "cannot get exact clocks exactly matching.",
    "start": "1394470",
    "end": "1399880"
  },
  {
    "text": "So there is always a delta. And what essentially Google does is make sure\nthat the delta between two clocks is minimal.",
    "start": "1399880",
    "end": "1414690"
  },
  {
    "text": "So it's 7 milliseconds, I think, is what they\nguarantee. But essentially, practically, I mean, you\nwill never get two servers to agree at same",
    "start": "1414690",
    "end": "1427080"
  },
  {
    "text": "time. And that's one of the big issues.",
    "start": "1427080",
    "end": "1432280"
  },
  {
    "text": "Lamport clock is one way. And I have documented in the book how the\nLamport clock works. I mean, you essentially just maintain an integer\nand you pass along that integer with every",
    "start": "1432280",
    "end": "1442860"
  },
  {
    "text": "request and then every server receiving the\nrequest also keeps track of what value it's",
    "start": "1442860",
    "end": "1450480"
  },
  {
    "text": "getting and what the value it has. And when I'm saying, I mean, typically in\ndatabases, you can imagine if it's a key-value",
    "start": "1450480",
    "end": "1459850"
  },
  {
    "text": "store or, let's say, even your document store,\nyour document is considered, you can consider",
    "start": "1459850",
    "end": "1466390"
  },
  {
    "text": "as a value or in your RDBMS, your row, you\ncan consider as a value.",
    "start": "1466390",
    "end": "1471770"
  },
  {
    "text": "So you store this version with that value\nor with the primary key or with the key of",
    "start": "1471770",
    "end": "1479950"
  },
  {
    "text": "that value. And then comparing these values, sorry, these\nkeys or these numbers attached to the keys,",
    "start": "1479950",
    "end": "1489450"
  },
  {
    "text": "you can figure out which update happened before\nanother one.",
    "start": "1489450",
    "end": "1496028"
  },
  {
    "text": "I mean, that's a simple Lamport clock mechanism. Now, as you can imagine, in databases that\nwe all use, if we have to compare integers",
    "start": "1496029",
    "end": "1509309"
  },
  {
    "text": "to know which values are ahead and later,\nit can be quite confusing.",
    "start": "1509310",
    "end": "1517039"
  },
  {
    "text": "So most databases combine this technique,\nthis basic Lamport clock technique of tracking",
    "start": "1517039",
    "end": "1522320"
  },
  {
    "text": "the integer with the actual date and time\nthat you get on your servers.",
    "start": "1522320",
    "end": "1531840"
  },
  {
    "text": "And that's called a hybrid clock. So most of your databases like MongoDB and\nYugabyteDB and CockroachDB, I mean, you see",
    "start": "1531840",
    "end": "1539580"
  },
  {
    "text": "that in practice, they use something called\na hybrid clock.",
    "start": "1539580",
    "end": "1548289"
  },
  {
    "text": "And that allows you to combine this system\ntime with this integer that can track which",
    "start": "1548290",
    "end": "1557280"
  },
  {
    "text": "values are greater after the other.",
    "start": "1557280",
    "end": "1562830"
  },
  {
    "text": "But yeah, I mean, it's fascinating and I think\nit's something that people will find exciting",
    "start": "1562830",
    "end": "1569590"
  },
  {
    "text": "when they read in the book how this is typically\nimplemented. I mean, there's a simple Java code that I\nhave in there.",
    "start": "1569590",
    "end": "1576908"
  },
  {
    "text": "You mentioned Spanner. I remember maybe our friends at the Book Club\nat GOTO could dig this out and add it to the",
    "start": "1576909",
    "end": "1584419"
  },
  {
    "text": "notes because I remember seeing some of the\nSpanner engineers talking about it. So you talk about TrueTime and Cloud Spanner\nis the database implementation that makes.",
    "start": "1584419",
    "end": "1594230"
  },
  {
    "text": "One thing to add there. So just an example of how this pattern approach\nis useful.",
    "start": "1594230",
    "end": "1600620"
  },
  {
    "text": "I mean, what's done in TrueTime or with the\nuse of TrueTime in Spanner is essentially",
    "start": "1600620",
    "end": "1608970"
  },
  {
    "text": "that you get this, let's say, maximum delta\nbetween two clocks.",
    "start": "1608970",
    "end": "1615470"
  },
  {
    "text": "I mean, how much do clock values differ?",
    "start": "1615470",
    "end": "1621000"
  },
  {
    "text": "Then how you can use that essentially is to,\nif you are writing a particular value at a",
    "start": "1621000",
    "end": "1627580"
  },
  {
    "text": "particular time, let's say you are writing\na value at time 5 and you know that it will",
    "start": "1627580",
    "end": "1633789"
  },
  {
    "text": "take maybe 500 milliseconds to...and I'm just\ngiving an example value, 500 milliseconds",
    "start": "1633789",
    "end": "1639039"
  },
  {
    "text": "is too high to wait. But within 500 milliseconds, all the other\nservers in the cluster are going to get that",
    "start": "1639039",
    "end": "1647890"
  },
  {
    "text": "5 p.m. as the value. So what this writer does is it waits for 500\nmilliseconds just to make sure that everyone",
    "start": "1647890",
    "end": "1656789"
  },
  {
    "text": "else has that clock value or time value and\nthen it makes that value visible or then it",
    "start": "1656789",
    "end": "1663450"
  },
  {
    "text": "writes that value at that timestamp. So if you know how much that maximum skew\nbetween or across servers in a cluster can",
    "start": "1663450",
    "end": "1679170"
  },
  {
    "text": "be, then you can implement it without TrueTime\nas well. I mean, that's what most of the open-source\ndatabases do.",
    "start": "1679171",
    "end": "1686908"
  },
  {
    "text": "I mean, they assume that maybe the clock skew,\nthe max drift, maybe 200 milliseconds within",
    "start": "1686909",
    "end": "1694880"
  },
  {
    "text": "your AWS cluster. And then they can just implement that wait\nfor 200.",
    "start": "1694880",
    "end": "1702480"
  },
  {
    "text": "I mean, TrueTime just makes it more practical\nsaying it won't be more than 7 milliseconds.",
    "start": "1702480",
    "end": "1712169"
  },
  {
    "text": "So you can wait for 7 milliseconds. It's not that bad. You're guaranteed, essentially. I remember the talk and it was a fascinating\ntalk they gave.",
    "start": "1712169",
    "end": "1722190"
  },
  {
    "text": "They had this quite amusing, sort of, portion\nof it when they were talking about the CAP theorem again, back to the CAP theorem.",
    "start": "1722190",
    "end": "1729130"
  },
  {
    "text": "And they were talking about how they are consistent\nand available. And they said, \"Oh, you know, it turns out\nwe've broken the CAP theorem,\" that was the",
    "start": "1729130",
    "end": "1739350"
  },
  {
    "text": "start of the talk. At the end of the talk, they said, \"Actually,\nwe haven't broken the CAP theorem at all. It's just that we never partition.",
    "start": "1739350",
    "end": "1746200"
  },
  {
    "text": "Our networks are so good that we just don't\npartition,\" which I thought was quite an amusing,",
    "start": "1746200",
    "end": "1754380"
  },
  {
    "text": "kind of, appendix to the end of the talk.",
    "start": "1754380",
    "end": "1759700"
  },
  {
    "text": "It's tricky. Understanding things at the implementation\nlevel, I think how it helps is you get this",
    "start": "1759700",
    "end": "1768000"
  },
  {
    "text": "kind of intuitive...and I mean, even if you\ndon't read specifications and you don't know",
    "start": "1768000",
    "end": "1773020"
  },
  {
    "text": "exactly how these things work, you get this\nintuitive understanding. So if something breaks in production, for\nexample, and you need to make sense of what",
    "start": "1773020",
    "end": "1784010"
  },
  {
    "text": "might have happened, you at least have some\npointers. Like this...and I've given this example, and\nI think a lot of people give this example,",
    "start": "1784010",
    "end": "1792950"
  },
  {
    "text": "that there was this Cloudflare outage, I think\na couple of years back, and the outage was",
    "start": "1792950",
    "end": "1800570"
  },
  {
    "text": "essentially because the HCD server that they\nwere using, there was outage in that.",
    "start": "1800570",
    "end": "1809350"
  },
  {
    "text": "And then there is this inherent issue with\nRaft's leadership election.",
    "start": "1809350",
    "end": "1814990"
  },
  {
    "text": "And I mean, it can very well happen with any\nbasic consensus implementation that you just",
    "start": "1814990",
    "end": "1820559"
  },
  {
    "text": "keep on electing leaders, and no one can make\nprogress. I mean, it can very well happen unless some\ncare is taken.",
    "start": "1820559",
    "end": "1829960"
  },
  {
    "text": "But if you are aware that, okay, something\nlike this might happen, I mean, it might happen",
    "start": "1829960",
    "end": "1835789"
  },
  {
    "text": "in your Kafka cluster or it might happen in\nyour Kubernetes cluster as well. We are all fortunate that things don't fail\nthat often.",
    "start": "1835789",
    "end": "1844710"
  },
  {
    "text": "I mean, just talking about failure, because\nI mean, failure is, I think, one of the...the edge cases in these systems are...I mean,\nthere's lots of them, and they're pretty sharp,",
    "start": "1844710",
    "end": "1855220"
  },
  {
    "text": "right? I mean, sharp edges. And I don't know if you've come across, I'm\nsure you have come across the Jepsen suite",
    "start": "1855220",
    "end": "1863049"
  },
  {
    "text": "of tools. Oh, yes. Yes. Which are useful? I mean, that's provided me with hours of entertainment\nover the years.",
    "start": "1863049",
    "end": "1872840"
  },
  {
    "text": "I think, I mean, just to compare the patterns\napproach. So Jepsen, I mean, it's an excellent tool\nand it takes a black box approach.",
    "start": "1872840",
    "end": "1882690"
  },
  {
    "text": "So it treats your products as black boxes,\nand then it runs some tests and introduces",
    "start": "1882690",
    "end": "1889080"
  },
  {
    "text": "failures in between. And patterns are, I mean, you can think of\nit probably as a white box approach.",
    "start": "1889080",
    "end": "1895429"
  },
  {
    "text": "So you know what the building blocks look\nlike. So you can maybe think through some of the\nissues that you might face.",
    "start": "1895429",
    "end": "1903820"
  },
  {
    "text": "Well, I think, I mean, I think probably you\ncould look at the failures that Jepsen detects, and then you could describe them in terms\nof failures as a particular implementation",
    "start": "1903820",
    "end": "1912539"
  },
  {
    "text": "of a pattern. Yes. I guess that comes back to the actual implementation.",
    "start": "1912540",
    "end": "1917741"
  },
  {
    "text": "So it comes back to the fact that the book\nis rooted in code.",
    "start": "1917741",
    "end": "1922778"
  },
  {
    "text": "It's rooted in actual executable code, is\nunit-testable, and you can inspect it yourself.",
    "start": "1922779",
    "end": "1931540"
  },
  {
    "text": "I think that's a really important part of\nthe book, isn't it?",
    "start": "1931540",
    "end": "1936830"
  },
  {
    "text": "That is the reason, I think, so before writing\neach of these patterns, I had working Java",
    "start": "1936830",
    "end": "1944908"
  },
  {
    "text": "code. Java is a language I chose, I mean, just because\nit's more people familiar with it, and it's",
    "start": "1944909",
    "end": "1952559"
  },
  {
    "text": "a simple language. There is no other reason. Even the C-Sharp people are familiar with\nJava.",
    "start": "1952559",
    "end": "1958768"
  },
  {
    "text": "Haha. I made sure that I explained the pattern around\nthis basic Java implementation that's out",
    "start": "1958769",
    "end": "1969669"
  },
  {
    "text": "there and tried not to use pseudo-code to\nexplain the code structure.",
    "start": "1969669",
    "end": "1978240"
  },
  {
    "text": "Maybe we should maybe chug up a little bit\nnow because, I mean, we're in the wheeze, we're talking about clocks, we're talking\nabout...you know, not in the weeds, we're",
    "start": "1978240",
    "end": "1984200"
  },
  {
    "start": "1980000",
    "end": "2230000"
  },
  {
    "text": "in the details, right? Yes. Which, to me, is the fascinating part of all\nthis.",
    "start": "1984200",
    "end": "1989830"
  },
  {
    "text": "But I guess we can maybe take a step back\nbecause, you know, I think many people working",
    "start": "1989830",
    "end": "1997929"
  },
  {
    "text": "in our industry at the moment, right, are\ncoming across the distributed systems more and more, whether they're using them, whether\nthey're, like yourself, involved in implementing",
    "start": "1997929",
    "end": "2007429"
  },
  {
    "text": "them. I mean, you know, whether that's for telescopes\nor whether that's for point-of-sale solutions",
    "start": "2007429",
    "end": "2013070"
  },
  {
    "text": "or, you know, whatever it is in the always-on\nworld that we're in. How would you sort of recommend...what would\nyou recommend to someone interested in going",
    "start": "2013070",
    "end": "2021039"
  },
  {
    "text": "a little bit more deeply into this? How would you, sort of, recommend them to\nproceed to go forward?",
    "start": "2021039",
    "end": "2029460"
  },
  {
    "text": "One of the goals for these patterns work as\nwell is that someone reading this material",
    "start": "2029460",
    "end": "2040148"
  },
  {
    "text": "should be able to navigate open-source code\nbases. And I think navigating, I mean, following\nopen-source products and going through their",
    "start": "2040149",
    "end": "2052500"
  },
  {
    "text": "code bases, trying out, maybe isolating some\npieces of it and playing with it, I think",
    "start": "2052500",
    "end": "2059158"
  },
  {
    "text": "that's a great way to learn about distribution. I mean, particularly topics like distributed\nsystems, it's a great way to learn because",
    "start": "2059159",
    "end": "2070030"
  },
  {
    "text": "if you go down the route of theoretical understanding,\nI mean, there are a lot of nice books, I would",
    "start": "2070030",
    "end": "2078429"
  },
  {
    "text": "say, but you might get lost.",
    "start": "2078429",
    "end": "2086300"
  },
  {
    "text": "So I think it helps a lot to remain closer\nto code while you are learning stuff.",
    "start": "2086300",
    "end": "2093440"
  },
  {
    "text": "One of the things I kind of, again, really\nlike about this is it opens up a whole new",
    "start": "2093440",
    "end": "2099390"
  },
  {
    "text": "set of patterns to a whole new generation\nof people, I think, right?",
    "start": "2099390",
    "end": "2106319"
  },
  {
    "text": "So, because as you say because they are patterns,\nbecause there is code there, it gives us another set of tools, or rather it exposes the tools\nthat have been there, but that have been used",
    "start": "2106320",
    "end": "2117089"
  },
  {
    "text": "by systems engineers generally, right? And I think that is...obviously, my background\nis in, I would say, sort of, distributed systems",
    "start": "2117089",
    "end": "2124609"
  },
  {
    "text": "in terms of microservices and that kind of\nthing. But not...I mean, you know, myself, I've implemented\nsome of these patterns myself, but we are",
    "start": "2124610",
    "end": "2135589"
  },
  {
    "text": "probably in the minority, right? I think what's useful about this is it's opening\nthese patterns up to a much wider audience",
    "start": "2135589",
    "end": "2143680"
  },
  {
    "text": "and making them available. Absolutely, I would say.",
    "start": "2143680",
    "end": "2150010"
  },
  {
    "text": "So like something as widely known, but not\nwell understood as a two-phase commit, I think.",
    "start": "2150010",
    "end": "2160700"
  },
  {
    "text": "Starbucks does anyway,.. Yeah, so I have documented a two-phase commit\nin here as well and some of the nitty-gritty",
    "start": "2160700",
    "end": "2170250"
  },
  {
    "text": "of what might go wrong and how it's solved\nin modern implementations.",
    "start": "2170250",
    "end": "2178020"
  },
  {
    "text": "And knowing something like that, I mean, these\nscenarios come in your microservices implementations",
    "start": "2178020",
    "end": "2184839"
  },
  {
    "text": "as well. I mean, at a different level of abstraction,\nobviously, but...",
    "start": "2184839",
    "end": "2191710"
  },
  {
    "text": "Or things like an idempotent receiver. I mean, I have a pattern called an idempotent\nreceiver and it's...I think in any microservices",
    "start": "2191710",
    "end": "2200130"
  },
  {
    "text": "implementation, you will need that. And getting some clues and ideas of how, let's\nsay, Kafka and HCD implement this idempotency,",
    "start": "2200130",
    "end": "2210210"
  },
  {
    "text": "opens up, I think... It opens up a whole new set of approaches\nbecause, I mean, we talk about idempotency",
    "start": "2210210",
    "end": "2217660"
  },
  {
    "text": "a lot, but then people sort of...it's one\nof those things that people forget to implement and then go, \"Oh, but there was this thing\nI forgot, it's called idempotency.\"",
    "start": "2217660",
    "end": "2227859"
  },
  {
    "text": "Oh, yeah. Absolutely. Okay, so I guess we should, sort of, think\nabout what's next.",
    "start": "2227859",
    "end": "2234309"
  },
  {
    "start": "2230000",
    "end": "2379000"
  },
  {
    "text": "One question I had, what have you found most\nsurprising while going on this journey? Oh, what's so surprising?",
    "start": "2234310",
    "end": "2239980"
  },
  {
    "text": "I think one of the most surprising things\nis, I mean, all these things are out there so many years and there are so many implementations\nnow, at least, but they are not...I mean,",
    "start": "2239980",
    "end": "2254460"
  },
  {
    "text": "I was surprised that these are not well-known\nthings. And like Paxos, for example, taught in academia\nfor 20-plus years and still, you required",
    "start": "2254460",
    "end": "2268599"
  },
  {
    "text": "a new Ph.D. thesis to document something called\nRaft. Even before that, there was a viewstamped\nreplication algorithm, which is exactly like",
    "start": "2268599",
    "end": "2279130"
  },
  {
    "text": "Raft, just no one knew about it. I mean, it's so surprising that as an industry,\nI think, I mean, these things were not well-known",
    "start": "2279130",
    "end": "2289780"
  },
  {
    "text": "for some reason. Well, thank you very much. So what's next now that the book is out?",
    "start": "2289780",
    "end": "2295089"
  },
  {
    "text": "Congratulations, by the way, I think it's\ndestined to become an instant classic. So, I mean, I've enjoyed reading it.",
    "start": "2295089",
    "end": "2300420"
  },
  {
    "text": "It's certainly just, like, widened my eyes,\nopened my eyes to certain things because it's",
    "start": "2300420",
    "end": "2307030"
  },
  {
    "text": "so practical because it's so readable and\nso accessible. So I think it's a really important contribution\nyou've made.",
    "start": "2307030",
    "end": "2314160"
  },
  {
    "text": "I wanted to thank you. But what's next?",
    "start": "2314160",
    "end": "2319440"
  },
  {
    "text": "I think just going back through some of the\npatterns, I mean, I see a lot of scope for",
    "start": "2319440",
    "end": "2324500"
  },
  {
    "text": "improvement on some of those. Maybe we'll take, like, a stab at improving\nsome of these patterns.",
    "start": "2324500",
    "end": "2332190"
  },
  {
    "text": "And also, I will, I think, continue...I did\na couple of workshops teaching Paxos and Raft",
    "start": "2332190",
    "end": "2342960"
  },
  {
    "text": "and stuff like that. So I'm planning on extending that, I mean,\nhave more workshops where people can play",
    "start": "2342960",
    "end": "2350779"
  },
  {
    "text": "with code and try out some of these things. And are you planning on...I should mention\nthat the original repository of these patterns",
    "start": "2350780",
    "end": "2359329"
  },
  {
    "text": "was on martinfowler.com, or a lot of them. Are you planning on continuing that work as\nwell?",
    "start": "2359329",
    "end": "2365210"
  },
  {
    "text": "I think I will continue on that. And I wish I get time to continue on that.",
    "start": "2365210",
    "end": "2370530"
  },
  {
    "text": "We're looking out for you in a workshop near\nyou. And I guess, yeah, I mean, go get the book,\neveryone.",
    "start": "2370530",
    "end": "2380359"
  },
  {
    "start": "2379000",
    "end": "2452000"
  },
  {
    "text": "It's brilliant, it genuinely is. So I just want to say thank you so much, Unmesh,\nfor joining us at GOTO Book Club to talk about",
    "start": "2380360",
    "end": "2386520"
  },
  {
    "text": "patterns of distributed systems. As I say, I think it's destined to be an instant\nclassic and is full of, like, just fascinating",
    "start": "2386520",
    "end": "2394310"
  },
  {
    "text": "detail on how the things that run our world\nwork, actually, right, because that's really",
    "start": "2394310",
    "end": "2399490"
  },
  {
    "text": "what we're talking about here. So thank you very much for joining us. Thank you, James, for giving me this opportunity.",
    "start": "2399490",
    "end": "2408160"
  },
  {
    "text": "No, it's fantastic for me to get the opportunity\nto talk to you.",
    "start": "2408160",
    "end": "2418849"
  },
  {
    "text": "So, thank you to GOTO and \nthe GOTO Book Club for organizing this.",
    "start": "2418849",
    "end": "2430020"
  },
  {
    "text": "You can see this. Hopefully, you'll enjoy it.",
    "start": "2430020",
    "end": "2440120"
  },
  {
    "text": "Thank you very much.",
    "start": "2440120",
    "end": "2446450"
  },
  {
    "text": "Thank you.",
    "start": "2446450",
    "end": "2449619"
  }
]