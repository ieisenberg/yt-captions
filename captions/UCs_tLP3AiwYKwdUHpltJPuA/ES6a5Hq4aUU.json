[
  {
    "text": "hi uh yeah my name is Amy um today I'm",
    "start": "5680",
    "end": "8360"
  },
  {
    "text": "going to show you how to avoid um",
    "start": "8360",
    "end": "11040"
  },
  {
    "text": "repeatedly writing some recursive code",
    "start": "11040",
    "end": "14200"
  },
  {
    "text": "by using the recursion schemes yeah here",
    "start": "14200",
    "end": "18039"
  },
  {
    "text": "is the agenda uh some problem I will",
    "start": "18039",
    "end": "21240"
  },
  {
    "text": "point out some problem in some sample uh",
    "start": "21240",
    "end": "24599"
  },
  {
    "text": "recursion example and then I'll",
    "start": "24599",
    "end": "26679"
  },
  {
    "text": "introduce a concept of fix point which",
    "start": "26679",
    "end": "30080"
  },
  {
    "text": "comes of some fundamental recursion",
    "start": "30080",
    "end": "32599"
  },
  {
    "text": "patterns also long as mm and then later",
    "start": "32599",
    "end": "36480"
  },
  {
    "text": "I will illustrate how to use this",
    "start": "36480",
    "end": "39360"
  },
  {
    "text": "morphism by using some recursion example",
    "start": "39360",
    "end": "42719"
  },
  {
    "text": "and then I will introduce some",
    "start": "42719",
    "end": "44160"
  },
  {
    "text": "references for further reading and uh",
    "start": "44160",
    "end": "46760"
  },
  {
    "text": "finally we I will come to a Q&A",
    "start": "46760",
    "end": "49800"
  },
  {
    "text": "section yeah just a big background yeah",
    "start": "49800",
    "end": "52120"
  },
  {
    "text": "I'm a scal developer uh some basic",
    "start": "52120",
    "end": "55000"
  },
  {
    "text": "knowledge in hco synas not familiar with",
    "start": "55000",
    "end": "58359"
  },
  {
    "text": "category Theory but uh where interested",
    "start": "58359",
    "end": "60519"
  },
  {
    "text": "in functional",
    "start": "60519",
    "end": "62359"
  },
  {
    "text": "programming um in functional programming",
    "start": "62359",
    "end": "65360"
  },
  {
    "text": "recursion is used extensively however",
    "start": "65360",
    "end": "69080"
  },
  {
    "text": "there is always a lot of boiler pled of",
    "start": "69080",
    "end": "71960"
  },
  {
    "text": "making recursive um Calles um here is",
    "start": "71960",
    "end": "75320"
  },
  {
    "text": "one example um this typical expression",
    "start": "75320",
    "end": "79600"
  },
  {
    "text": "example um the highlighted part um they",
    "start": "79600",
    "end": "82520"
  },
  {
    "text": "are recursion core and that is inter",
    "start": "82520",
    "end": "85439"
  },
  {
    "text": "lifting of recursion code and",
    "start": "85439",
    "end": "87840"
  },
  {
    "text": "application specific l uh logic and just",
    "start": "87840",
    "end": "92920"
  },
  {
    "text": "how to",
    "start": "92920",
    "end": "93920"
  },
  {
    "text": "evaluate and second example is um",
    "start": "93920",
    "end": "96920"
  },
  {
    "text": "building a factorial number and again",
    "start": "96920",
    "end": "100240"
  },
  {
    "text": "there is a mix of recursive core and",
    "start": "100240",
    "end": "103720"
  },
  {
    "text": "some application",
    "start": "103720",
    "end": "106600"
  },
  {
    "text": "logic uh similar situation in the merge",
    "start": "106600",
    "end": "111000"
  },
  {
    "text": "short",
    "start": "111000",
    "end": "112600"
  },
  {
    "text": "and now the problem is okay this",
    "start": "112600",
    "end": "115799"
  },
  {
    "text": "recursive call are repeatedly made and",
    "start": "115799",
    "end": "120119"
  },
  {
    "text": "mix with the application specific logic",
    "start": "120119",
    "end": "124360"
  },
  {
    "text": "and it would be great if we can f out",
    "start": "124360",
    "end": "126840"
  },
  {
    "text": "this uh recursive core to make the",
    "start": "126840",
    "end": "129720"
  },
  {
    "text": "solution",
    "start": "129720",
    "end": "132319"
  },
  {
    "text": "simpler and if we have another look on",
    "start": "133280",
    "end": "136680"
  },
  {
    "text": "this recursion uh we can find out that",
    "start": "136680",
    "end": "139920"
  },
  {
    "text": "uh recursion is indeed iteration of",
    "start": "139920",
    "end": "143879"
  },
  {
    "text": "lasted structure therefore if uh we are",
    "start": "143879",
    "end": "147800"
  },
  {
    "text": "able to identify the abstraction of this",
    "start": "147800",
    "end": "151239"
  },
  {
    "text": "last structure then the iteration on",
    "start": "151239",
    "end": "155440"
  },
  {
    "text": "this abstraction can be fed out as",
    "start": "155440",
    "end": "158319"
  },
  {
    "text": "pattern and under this condition we only",
    "start": "158319",
    "end": "161400"
  },
  {
    "text": "need to Define long recursive function",
    "start": "161400",
    "end": "164280"
  },
  {
    "text": "for our application uh specific",
    "start": "164280",
    "end": "167159"
  },
  {
    "text": "requirement and then the problem can be",
    "start": "167159",
    "end": "170080"
  },
  {
    "text": "solved in a simple way yeah but how yeah",
    "start": "170080",
    "end": "174920"
  },
  {
    "text": "and uh how to identify the abstraction",
    "start": "174920",
    "end": "178959"
  },
  {
    "text": "of this Rel last structure and the idea",
    "start": "178959",
    "end": "183040"
  },
  {
    "text": "is surprisingly simple uh it uses a",
    "start": "183040",
    "end": "187120"
  },
  {
    "text": "higher kind of type called",
    "start": "187120",
    "end": "189560"
  },
  {
    "text": "Fix um yeah it is fix because it is a",
    "start": "189560",
    "end": "194400"
  },
  {
    "text": "higher C type that means the f is the",
    "start": "194400",
    "end": "199080"
  },
  {
    "text": "type",
    "start": "199080",
    "end": "199959"
  },
  {
    "text": "Constructor uh what does it mean it",
    "start": "199959",
    "end": "201959"
  },
  {
    "text": "means that uh I can apply the type fix",
    "start": "201959",
    "end": "206480"
  },
  {
    "text": "of f to this type Constructor F such",
    "start": "206480",
    "end": "212159"
  },
  {
    "text": "that it turns out I can make this fix of",
    "start": "212159",
    "end": "214680"
  },
  {
    "text": "f a last data",
    "start": "214680",
    "end": "217480"
  },
  {
    "text": "structure and uh to iterate this um",
    "start": "217480",
    "end": "221879"
  },
  {
    "text": "lasted structure fix of f okay we will",
    "start": "221879",
    "end": "226120"
  },
  {
    "text": "expect that f is not just a type",
    "start": "226120",
    "end": "229599"
  },
  {
    "text": "Constructor it's a funter and uh F or",
    "start": "229599",
    "end": "234400"
  },
  {
    "text": "how F being a funter can make the",
    "start": "234400",
    "end": "237000"
  },
  {
    "text": "iteration work um here",
    "start": "237000",
    "end": "241239"
  },
  {
    "text": "is here it is yeah okay uh in this",
    "start": "241239",
    "end": "246319"
  },
  {
    "text": "diagram uh the bottom part is our",
    "start": "246319",
    "end": "248920"
  },
  {
    "text": "purpose we want to iterate this uh LDA",
    "start": "248920",
    "end": "251840"
  },
  {
    "text": "structure to build up the value and what",
    "start": "251840",
    "end": "255120"
  },
  {
    "text": "happens under line is we Call Unix of",
    "start": "255120",
    "end": "259639"
  },
  {
    "text": "this fix of f according to the type um",
    "start": "259639",
    "end": "265040"
  },
  {
    "text": "design and then unfix it it returned fix",
    "start": "265040",
    "end": "268960"
  },
  {
    "text": "of fix of of f because f is a funter",
    "start": "268960",
    "end": "273479"
  },
  {
    "text": "therefore I can apply a f map with the",
    "start": "273479",
    "end": "276840"
  },
  {
    "text": "same",
    "start": "276840",
    "end": "278800"
  },
  {
    "text": "oops okay and I can apply iterate and",
    "start": "278800",
    "end": "282880"
  },
  {
    "text": "then which return um which return F of a",
    "start": "282880",
    "end": "287280"
  },
  {
    "text": "and then uh the only thing remain is I",
    "start": "287280",
    "end": "290600"
  },
  {
    "text": "uh need to define the function um ma",
    "start": "290600",
    "end": "294080"
  },
  {
    "text": "from F A to a call",
    "start": "294080",
    "end": "296479"
  },
  {
    "text": "ALG and this is not finished yet",
    "start": "296479",
    "end": "300720"
  },
  {
    "text": "because uh our purpose is uh want to um",
    "start": "300720",
    "end": "304280"
  },
  {
    "text": "make the function f8 to a which",
    "start": "304280",
    "end": "307759"
  },
  {
    "text": "represents this application specific",
    "start": "307759",
    "end": "310680"
  },
  {
    "text": "logic to be um decoupled from this",
    "start": "310680",
    "end": "313680"
  },
  {
    "text": "recursion pattern however there is still",
    "start": "313680",
    "end": "316160"
  },
  {
    "text": "something blocking us is this",
    "start": "316160",
    "end": "319800"
  },
  {
    "text": "iterate yeah therefore what we can do is",
    "start": "319800",
    "end": "323039"
  },
  {
    "text": "just simply replace this iterate by K",
    "start": "323039",
    "end": "328680"
  },
  {
    "text": "ALG then now it turns into this way and",
    "start": "328680",
    "end": "334840"
  },
  {
    "text": "and this AGG is completely decoupled",
    "start": "334840",
    "end": "338199"
  },
  {
    "text": "from the um recursion pattern and what",
    "start": "338199",
    "end": "341680"
  },
  {
    "text": "is this CER function this CER function",
    "start": "341680",
    "end": "345479"
  },
  {
    "text": "um here is the signature yeah yeah don't",
    "start": "345479",
    "end": "349680"
  },
  {
    "text": "worry about um the logic uh U we in",
    "start": "349680",
    "end": "352600"
  },
  {
    "text": "functional programming we only care is",
    "start": "352600",
    "end": "354240"
  },
  {
    "text": "the type and the type yeah programming",
    "start": "354240",
    "end": "358000"
  },
  {
    "text": "mype and is um that's the the type",
    "start": "358000",
    "end": "362080"
  },
  {
    "text": "required for this um CER function and",
    "start": "362080",
    "end": "364840"
  },
  {
    "text": "this C function has um formal name is",
    "start": "364840",
    "end": "367840"
  },
  {
    "text": "called catamorphism yeah yeah this one",
    "start": "367840",
    "end": "370599"
  },
  {
    "text": "of the scary thing is in functional",
    "start": "370599",
    "end": "372520"
  },
  {
    "text": "programming there are lots of um",
    "start": "372520",
    "end": "374080"
  },
  {
    "text": "unfamiliar terms but they are just a",
    "start": "374080",
    "end": "375880"
  },
  {
    "text": "name yeah don't don't be scared and um",
    "start": "375880",
    "end": "378840"
  },
  {
    "text": "this is the First Fundamental recursion",
    "start": "378840",
    "end": "381319"
  },
  {
    "text": "pattern and um yeah some highlights on",
    "start": "381319",
    "end": "384680"
  },
  {
    "text": "the",
    "start": "384680",
    "end": "385479"
  },
  {
    "text": "catamorphism is um yeah",
    "start": "385479",
    "end": "390199"
  },
  {
    "text": "the function uh F A2",
    "start": "390199",
    "end": "393039"
  },
  {
    "text": "a is called algebra it's the long",
    "start": "393039",
    "end": "396360"
  },
  {
    "text": "recursive function for application",
    "start": "396360",
    "end": "399120"
  },
  {
    "text": "specific logic and um a is is called the",
    "start": "399120",
    "end": "403880"
  },
  {
    "text": "carrier of the algebra therefore if we",
    "start": "403880",
    "end": "407520"
  },
  {
    "text": "solve a recursion problem by using this",
    "start": "407520",
    "end": "411680"
  },
  {
    "text": "um CER function we only need to do two",
    "start": "411680",
    "end": "415199"
  },
  {
    "text": "thing first is Define the funter F",
    "start": "415199",
    "end": "418960"
  },
  {
    "text": "second one is to Define um the long",
    "start": "418960",
    "end": "421720"
  },
  {
    "text": "recursive function fa to a um according",
    "start": "421720",
    "end": "425120"
  },
  {
    "text": "to the application requirement and how",
    "start": "425120",
    "end": "428199"
  },
  {
    "text": "to use it here is the example uh the",
    "start": "428199",
    "end": "432199"
  },
  {
    "text": "expression problem I uh showed before",
    "start": "432199",
    "end": "436360"
  },
  {
    "text": "okay uh as mentioned before first we",
    "start": "436360",
    "end": "438240"
  },
  {
    "text": "need to Define um the funter in this",
    "start": "438240",
    "end": "441639"
  },
  {
    "text": "case uh luckily uh this example is is uh",
    "start": "441639",
    "end": "444879"
  },
  {
    "text": "simpler because in the original design",
    "start": "444879",
    "end": "447520"
  },
  {
    "text": "there is already a algebric data type",
    "start": "447520",
    "end": "450520"
  },
  {
    "text": "and therefore it already done most of",
    "start": "450520",
    "end": "453360"
  },
  {
    "text": "the thing we need to do and in our case",
    "start": "453360",
    "end": "456280"
  },
  {
    "text": "we only need to be design this algebric",
    "start": "456280",
    "end": "460000"
  },
  {
    "text": "data type as um funter therefore I",
    "start": "460000",
    "end": "464240"
  },
  {
    "text": "insert a yeah H to make it as a funter",
    "start": "464240",
    "end": "468280"
  },
  {
    "text": "and yeah I just use um this uh language",
    "start": "468280",
    "end": "470919"
  },
  {
    "text": "extension because to make it as a fun",
    "start": "470919",
    "end": "473759"
  },
  {
    "text": "that's and now uh next step we need to",
    "start": "473759",
    "end": "478639"
  },
  {
    "text": "Define the algebra for this um for this",
    "start": "478639",
    "end": "483039"
  },
  {
    "text": "application okay then what is the",
    "start": "483039",
    "end": "485440"
  },
  {
    "text": "requirement uh for example in our",
    "start": "485440",
    "end": "487639"
  },
  {
    "text": "requirement we want to evaluate the",
    "start": "487639",
    "end": "490560"
  },
  {
    "text": "expression that means that we need to",
    "start": "490560",
    "end": "493000"
  },
  {
    "text": "return we build up an integer value for",
    "start": "493000",
    "end": "495280"
  },
  {
    "text": "this evaluation therefore the car is",
    "start": "495280",
    "end": "499360"
  },
  {
    "text": "inch therefore um in defining this",
    "start": "499360",
    "end": "502520"
  },
  {
    "text": "algebra F to a uh the a will be inch um",
    "start": "502520",
    "end": "507199"
  },
  {
    "text": "we already defined the fun before",
    "start": "507199",
    "end": "509759"
  },
  {
    "text": "therefore the fun will be expression F",
    "start": "509759",
    "end": "512240"
  },
  {
    "text": "and now just do the implementation and",
    "start": "512240",
    "end": "514680"
  },
  {
    "text": "yeah pretty straightforward yes see and",
    "start": "514680",
    "end": "517080"
  },
  {
    "text": "plus and",
    "start": "517080",
    "end": "518440"
  },
  {
    "text": "multiplication and now is how how to use",
    "start": "518440",
    "end": "521479"
  },
  {
    "text": "it uh first is I need to prepare the",
    "start": "521479",
    "end": "525760"
  },
  {
    "text": "expression which is uh in the fix of f",
    "start": "525760",
    "end": "529080"
  },
  {
    "text": "the last data structure and then uh we",
    "start": "529080",
    "end": "532839"
  },
  {
    "text": "call the C and then passing in the",
    "start": "532839",
    "end": "535800"
  },
  {
    "text": "algebra which is uh the devaluate",
    "start": "535800",
    "end": "538200"
  },
  {
    "text": "function I def find before and then",
    "start": "538200",
    "end": "540480"
  },
  {
    "text": "return same thing and um there is an",
    "start": "540480",
    "end": "544440"
  },
  {
    "text": "other requirement what if we want to",
    "start": "544440",
    "end": "548000"
  },
  {
    "text": "format the",
    "start": "548000",
    "end": "550000"
  },
  {
    "text": "expression and in format uh to format",
    "start": "550000",
    "end": "553320"
  },
  {
    "text": "expression that means we want to return",
    "start": "553320",
    "end": "555200"
  },
  {
    "text": "the the string format of this expression",
    "start": "555200",
    "end": "558519"
  },
  {
    "text": "therefore in this case the car type is",
    "start": "558519",
    "end": "563079"
  },
  {
    "text": "string and therefore the algebra will be",
    "start": "563079",
    "end": "567240"
  },
  {
    "text": "again uh fun but this time it's fun",
    "start": "567240",
    "end": "569399"
  },
  {
    "text": "string to a string and then do the same",
    "start": "569399",
    "end": "571920"
  },
  {
    "text": "pattern match and then we turn the",
    "start": "571920",
    "end": "573920"
  },
  {
    "text": "corresponding value and to format this",
    "start": "573920",
    "end": "577720"
  },
  {
    "text": "expression yeah it's almost the same as",
    "start": "577720",
    "end": "580040"
  },
  {
    "text": "before we used the K function uh",
    "start": "580040",
    "end": "583079"
  },
  {
    "text": "expression but now I drop the change the",
    "start": "583079",
    "end": "587000"
  },
  {
    "text": "algebra from to format then it return",
    "start": "587000",
    "end": "589959"
  },
  {
    "text": "this thing and looks quite uh really",
    "start": "589959",
    "end": "593560"
  },
  {
    "text": "useful yeah however uh it's it is uh lot",
    "start": "593560",
    "end": "599440"
  },
  {
    "text": "is not done yet because catamorphism is",
    "start": "599440",
    "end": "602480"
  },
  {
    "text": "s too simple uh there are still more",
    "start": "602480",
    "end": "606079"
  },
  {
    "text": "morphism um is are required to solve",
    "start": "606079",
    "end": "609560"
  },
  {
    "text": "other kinds of problem therefore now",
    "start": "609560",
    "end": "612279"
  },
  {
    "text": "I'll go to the second one second",
    "start": "612279",
    "end": "614600"
  },
  {
    "text": "morphism yeah it's called",
    "start": "614600",
    "end": "617440"
  },
  {
    "text": "anamorphism is opposite of",
    "start": "617440",
    "end": "620760"
  },
  {
    "text": "catamorphism if you think about uh",
    "start": "620760",
    "end": "623560"
  },
  {
    "text": "catamorphism is it's like building up a",
    "start": "623560",
    "end": "626760"
  },
  {
    "text": "value from a l structure therefore or",
    "start": "626760",
    "end": "629560"
  },
  {
    "text": "you can imagine it's like a piece of",
    "start": "629560",
    "end": "631320"
  },
  {
    "text": "paper folded up to an object and uh",
    "start": "631320",
    "end": "635200"
  },
  {
    "text": "anism is just the opposite it's just a",
    "start": "635200",
    "end": "638600"
  },
  {
    "text": "object unfolded into a piece of",
    "start": "638600",
    "end": "641560"
  },
  {
    "text": "paper and um here is the seure and yeah",
    "start": "641560",
    "end": "646000"
  },
  {
    "text": "you can see almost the same as CER but",
    "start": "646000",
    "end": "648880"
  },
  {
    "text": "now",
    "start": "648880",
    "end": "649720"
  },
  {
    "text": "is you unfolded to a paper that means a",
    "start": "649720",
    "end": "653839"
  },
  {
    "text": "to fix of F and also the long recessive",
    "start": "653839",
    "end": "658200"
  },
  {
    "text": "function now is a to fa it just reverse",
    "start": "658200",
    "end": "661440"
  },
  {
    "text": "order as the C",
    "start": "661440",
    "end": "663880"
  },
  {
    "text": "function and there's a name for this um",
    "start": "663880",
    "end": "667880"
  },
  {
    "text": "long recursive function a to fa a uh is",
    "start": "667880",
    "end": "671040"
  },
  {
    "text": "called",
    "start": "671040",
    "end": "672800"
  },
  {
    "text": "coral and uh one of the purposes of",
    "start": "672800",
    "end": "676880"
  },
  {
    "text": "anamorphism is is for another thing",
    "start": "676880",
    "end": "680360"
  },
  {
    "text": "called H morphism yeah again just just",
    "start": "680360",
    "end": "683440"
  },
  {
    "text": "lame okay the idea is very",
    "start": "683440",
    "end": "684800"
  },
  {
    "text": "straightforward it's just the",
    "start": "684800",
    "end": "686000"
  },
  {
    "text": "composition of anamorphism followed by",
    "start": "686000",
    "end": "689600"
  },
  {
    "text": "cat morphism what does it mean uh for",
    "start": "689600",
    "end": "693560"
  },
  {
    "text": "analogy you can imagine that okay I have",
    "start": "693560",
    "end": "695959"
  },
  {
    "text": "a robot let's say a Transformer I want",
    "start": "695959",
    "end": "698519"
  },
  {
    "text": "to unfolder it to a piece of",
    "start": "698519",
    "end": "700920"
  },
  {
    "text": "paper and then folder it to another",
    "start": "700920",
    "end": "703920"
  },
  {
    "text": "robot let's say a Gundam okay then um",
    "start": "703920",
    "end": "707399"
  },
  {
    "text": "yeah that's the hydromorphism more about",
    "start": "707399",
    "end": "710200"
  },
  {
    "text": "and uh what is the some example can be",
    "start": "710200",
    "end": "712279"
  },
  {
    "text": "solved by hydromorphism is the shorting",
    "start": "712279",
    "end": "715240"
  },
  {
    "text": "mer",
    "start": "715240",
    "end": "716240"
  },
  {
    "text": "shorts uh in this case it uh that's the",
    "start": "716240",
    "end": "719519"
  },
  {
    "text": "original code um but um in this case is",
    "start": "719519",
    "end": "723160"
  },
  {
    "text": "to the type is from list to list",
    "start": "723160",
    "end": "726079"
  },
  {
    "text": "therefore if we think in terms of",
    "start": "726079",
    "end": "727959"
  },
  {
    "text": "hydromorphism that means that um there",
    "start": "727959",
    "end": "731040"
  },
  {
    "text": "is um this object is a list uh is",
    "start": "731040",
    "end": "734480"
  },
  {
    "text": "unfolded into a last data structure by",
    "start": "734480",
    "end": "740240"
  },
  {
    "text": "anism and then this last structure is",
    "start": "740240",
    "end": "743199"
  },
  {
    "text": "folded to another object just happen in",
    "start": "743199",
    "end": "746920"
  },
  {
    "text": "this case is a list again and in the",
    "start": "746920",
    "end": "749800"
  },
  {
    "text": "second step is using um",
    "start": "749800",
    "end": "752199"
  },
  {
    "text": "catamorphism and now we have to first we",
    "start": "752199",
    "end": "755320"
  },
  {
    "text": "have to think about what is the the fun",
    "start": "755320",
    "end": "759000"
  },
  {
    "text": "in this case um there's no fun uh it's",
    "start": "759000",
    "end": "762199"
  },
  {
    "text": "not trivial but we can get some hinge to",
    "start": "762199",
    "end": "764920"
  },
  {
    "text": "F about what the condition we have to uh",
    "start": "764920",
    "end": "767720"
  },
  {
    "text": "cater with in designing this fun and in",
    "start": "767720",
    "end": "770680"
  },
  {
    "text": "this case uh the original code there's",
    "start": "770680",
    "end": "772560"
  },
  {
    "text": "already two condition yeah uh is the",
    "start": "772560",
    "end": "775199"
  },
  {
    "text": "length uh depends on the length of the",
    "start": "775199",
    "end": "778480"
  },
  {
    "text": "list",
    "start": "778480",
    "end": "780120"
  },
  {
    "text": "therefore what we can do is okay we in",
    "start": "780120",
    "end": "783680"
  },
  {
    "text": "designing our algebric data type for the",
    "start": "783680",
    "end": "785959"
  },
  {
    "text": "funter uh actually that to make it",
    "start": "785959",
    "end": "788680"
  },
  {
    "text": "easier to do it uh there are three",
    "start": "788680",
    "end": "791399"
  },
  {
    "text": "conditions the first condition is the",
    "start": "791399",
    "end": "793839"
  },
  {
    "text": "list is empty second condition the list",
    "start": "793839",
    "end": "797920"
  },
  {
    "text": "has only one item uh third has more than",
    "start": "797920",
    "end": "801120"
  },
  {
    "text": "one item then here it is the there is",
    "start": "801120",
    "end": "807480"
  },
  {
    "text": "the font that means is empty one item",
    "start": "807480",
    "end": "810560"
  },
  {
    "text": "and more than one item and R in this",
    "start": "810560",
    "end": "813639"
  },
  {
    "text": "case is the Char type for this function",
    "start": "813639",
    "end": "816360"
  },
  {
    "text": "and the font is the",
    "start": "816360",
    "end": "819320"
  },
  {
    "text": "TFA and now we move on to Define what is",
    "start": "819320",
    "end": "822360"
  },
  {
    "text": "the cor algebra for this uh",
    "start": "822360",
    "end": "826720"
  },
  {
    "text": "anism now we need to define a to fa a",
    "start": "827279",
    "end": "831519"
  },
  {
    "text": "and a because in this example we need to",
    "start": "831519",
    "end": "836920"
  },
  {
    "text": "unfold the object which is a list to a",
    "start": "836920",
    "end": "840160"
  },
  {
    "text": "lasted structure therefore this object",
    "start": "840160",
    "end": "842519"
  },
  {
    "text": "is a list therefore the carer type is a",
    "start": "842519",
    "end": "845560"
  },
  {
    "text": "list here and the fun which I defined",
    "start": "845560",
    "end": "848880"
  },
  {
    "text": "already is TF of a and therefore here it",
    "start": "848880",
    "end": "852560"
  },
  {
    "text": "is it just pretty straet forward it just",
    "start": "852560",
    "end": "855680"
  },
  {
    "text": "empty turn empty and then item one use a",
    "start": "855680",
    "end": "858639"
  },
  {
    "text": "LIF to hold it and it is a list it's",
    "start": "858639",
    "end": "861720"
  },
  {
    "text": "almost like what we did in",
    "start": "861720",
    "end": "863759"
  },
  {
    "text": "the um merge sorting uh before is just",
    "start": "863759",
    "end": "867360"
  },
  {
    "text": "break the list in the roughly two",
    "start": "867360",
    "end": "870040"
  },
  {
    "text": "similar length of list and then to",
    "start": "870040",
    "end": "872279"
  },
  {
    "text": "construct the",
    "start": "872279",
    "end": "874320"
  },
  {
    "text": "branch and",
    "start": "874320",
    "end": "876519"
  },
  {
    "text": "now then we need to also consider the",
    "start": "876519",
    "end": "879880"
  },
  {
    "text": "catamorphism catamorphism we need to",
    "start": "879880",
    "end": "881959"
  },
  {
    "text": "find the",
    "start": "881959",
    "end": "884279"
  },
  {
    "text": "algebra therefore is f to",
    "start": "884279",
    "end": "887680"
  },
  {
    "text": "a and yeah and again because in this",
    "start": "887680",
    "end": "891320"
  },
  {
    "text": "case is the L structure are Le to fold",
    "start": "891320",
    "end": "894680"
  },
  {
    "text": "up to the object which is just happen is",
    "start": "894680",
    "end": "898160"
  },
  {
    "text": "also a list",
    "start": "898160",
    "end": "899600"
  },
  {
    "text": "again therefore the carrier type is the",
    "start": "899600",
    "end": "903320"
  },
  {
    "text": "list and we use the same fun two of fa a",
    "start": "903320",
    "end": "908600"
  },
  {
    "text": "and just do the reverse thing is if it's",
    "start": "908600",
    "end": "911440"
  },
  {
    "text": "empty empty list it's a li of one a one",
    "start": "911440",
    "end": "915519"
  },
  {
    "text": "item therefore just at least of one item",
    "start": "915519",
    "end": "918040"
  },
  {
    "text": "and then if Branch uh I use uh hasco",
    "start": "918040",
    "end": "921320"
  },
  {
    "text": "function merge that means for the two",
    "start": "921320",
    "end": "923040"
  },
  {
    "text": "list they can be merg uh in ascending",
    "start": "923040",
    "end": "926279"
  },
  {
    "text": "order yeah and how to",
    "start": "926279",
    "end": "929920"
  },
  {
    "text": "use H morphism to do the sting and here",
    "start": "929920",
    "end": "932880"
  },
  {
    "text": "it is your H and then the merge is okay",
    "start": "932880",
    "end": "936360"
  },
  {
    "text": "the TP is FB to B that means the merge",
    "start": "936360",
    "end": "939399"
  },
  {
    "text": "is eligible for catamorphism and the",
    "start": "939399",
    "end": "942759"
  },
  {
    "text": "second one is a to F A which is co split",
    "start": "942759",
    "end": "946680"
  },
  {
    "text": "is the coalgebra for the an morphism and",
    "start": "946680",
    "end": "950279"
  },
  {
    "text": "then here is the list then it do the",
    "start": "950279",
    "end": "952279"
  },
  {
    "text": "short return in this",
    "start": "952279",
    "end": "954519"
  },
  {
    "text": "way",
    "start": "954519",
    "end": "956399"
  },
  {
    "text": "and last one yeah",
    "start": "956399",
    "end": "959639"
  },
  {
    "text": "param morphism actually there are hips",
    "start": "959639",
    "end": "962120"
  },
  {
    "text": "of morphism but I can only talk a few of",
    "start": "962120",
    "end": "964120"
  },
  {
    "text": "them only yeah and um the catamorphism",
    "start": "964120",
    "end": "968880"
  },
  {
    "text": "sorry par morphism why we required it is",
    "start": "968880",
    "end": "973360"
  },
  {
    "text": "in catamorphism um f a to a because in",
    "start": "973360",
    "end": "977759"
  },
  {
    "text": "this uh function we can only assess the",
    "start": "977759",
    "end": "981959"
  },
  {
    "text": "value a to do uh transformation or other",
    "start": "981959",
    "end": "986519"
  },
  {
    "text": "processing it doesn't p provide the",
    "start": "986519",
    "end": "989880"
  },
  {
    "text": "original uh last structure which is fix",
    "start": "989880",
    "end": "993959"
  },
  {
    "text": "of f from which the value a is built and",
    "start": "993959",
    "end": "998199"
  },
  {
    "text": "therefore here is something called param",
    "start": "998199",
    "end": "1001279"
  },
  {
    "text": "morphism is is really similar to yeah",
    "start": "1001279",
    "end": "1005920"
  },
  {
    "text": "catamorphism you just have additional",
    "start": "1005920",
    "end": "1008839"
  },
  {
    "text": "effect of f here and this it and which",
    "start": "1008839",
    "end": "1012079"
  },
  {
    "text": "we can use this uh L structure okay",
    "start": "1012079",
    "end": "1015560"
  },
  {
    "text": "which problem uh we need to use this uh",
    "start": "1015560",
    "end": "1018600"
  },
  {
    "text": "per mm okay is yeah the factorial yeah",
    "start": "1018600",
    "end": "1026079"
  },
  {
    "text": "um",
    "start": "1026079",
    "end": "1028038"
  },
  {
    "text": "in in uh this uh solving this uh",
    "start": "1028039",
    "end": "1031319"
  },
  {
    "text": "vectorial problem using param morphism",
    "start": "1031319",
    "end": "1034400"
  },
  {
    "text": "uh again we need to define the algebric",
    "start": "1034400",
    "end": "1036600"
  },
  {
    "text": "data type for the um natural number and",
    "start": "1036600",
    "end": "1040760"
  },
  {
    "text": "what are the condition uh required it is",
    "start": "1040760",
    "end": "1042918"
  },
  {
    "text": "State here already is n less than one or",
    "start": "1042919",
    "end": "1046400"
  },
  {
    "text": "n bigger than zero",
    "start": "1046400",
    "end": "1049600"
  },
  {
    "text": "therefore I defined the algebric data",
    "start": "1049600",
    "end": "1052520"
  },
  {
    "text": "type which is uh the fun is called uh I",
    "start": "1052520",
    "end": "1056120"
  },
  {
    "text": "just call let F and then passing the the",
    "start": "1056120",
    "end": "1058679"
  },
  {
    "text": "K type A and therefore there are two",
    "start": "1058679",
    "end": "1060960"
  },
  {
    "text": "condition either zero or sued",
    "start": "1060960",
    "end": "1064840"
  },
  {
    "text": "a and uh this to solve this problem this",
    "start": "1064840",
    "end": "1068400"
  },
  {
    "text": "a bit uh sorry it's a bit messy but yeah",
    "start": "1068400",
    "end": "1070880"
  },
  {
    "text": "just to illustrate how to use the pism",
    "start": "1070880",
    "end": "1074000"
  },
  {
    "text": "sorry param morphism first uh we need to",
    "start": "1074000",
    "end": "1076960"
  },
  {
    "text": "think about um how to find the natural",
    "start": "1076960",
    "end": "1080919"
  },
  {
    "text": "number value of",
    "start": "1080919",
    "end": "1083400"
  },
  {
    "text": "this L of f first first we use",
    "start": "1083400",
    "end": "1088679"
  },
  {
    "text": "catamorphism is if the fun is C zero",
    "start": "1088679",
    "end": "1094880"
  },
  {
    "text": "then I return zero value otherwise we",
    "start": "1094880",
    "end": "1098600"
  },
  {
    "text": "just is if this sued n therefore we",
    "start": "1098600",
    "end": "1101039"
  },
  {
    "text": "simply n+ one second step um this is a",
    "start": "1101039",
    "end": "1105679"
  },
  {
    "text": "handy function because later on it is",
    "start": "1105679",
    "end": "1107559"
  },
  {
    "text": "required in in uh dealing with uh to",
    "start": "1107559",
    "end": "1111120"
  },
  {
    "text": "calculate the factorial number now here",
    "start": "1111120",
    "end": "1114440"
  },
  {
    "text": "it is the key thing is use parm for the",
    "start": "1114440",
    "end": "1118520"
  },
  {
    "text": "factorial",
    "start": "1118520",
    "end": "1119559"
  },
  {
    "text": "number and okay we need to Define this",
    "start": "1119559",
    "end": "1124760"
  },
  {
    "text": "function f a fix F to a and therefore",
    "start": "1124760",
    "end": "1128880"
  },
  {
    "text": "here it is okay in factoral number you",
    "start": "1128880",
    "end": "1131559"
  },
  {
    "text": "know that when it is zero it will be",
    "start": "1131559",
    "end": "1135440"
  },
  {
    "text": "one and then here uh if this is the SE",
    "start": "1135440",
    "end": "1140280"
  },
  {
    "text": "of n of X",
    "start": "1140280",
    "end": "1142960"
  },
  {
    "text": "okay n is the is the what does it mean",
    "start": "1142960",
    "end": "1148240"
  },
  {
    "text": "it means that n is the factorial value",
    "start": "1148240",
    "end": "1151440"
  },
  {
    "text": "built from the last data structure X",
    "start": "1151440",
    "end": "1155880"
  },
  {
    "text": "therefore now is with if or move on the",
    "start": "1155880",
    "end": "1157960"
  },
  {
    "text": "next step okay what is the next Factor",
    "start": "1157960",
    "end": "1160360"
  },
  {
    "text": "number will be therefore what it does is",
    "start": "1160360",
    "end": "1163200"
  },
  {
    "text": "I use n",
    "start": "1163200",
    "end": "1165640"
  },
  {
    "text": "times K net ALG ALG is what",
    "start": "1165640",
    "end": "1171280"
  },
  {
    "text": "I is this",
    "start": "1171280",
    "end": "1173480"
  },
  {
    "text": "function yeah and then and then call",
    "start": "1173480",
    "end": "1176720"
  },
  {
    "text": "sued of the X and then because I need to",
    "start": "1176720",
    "end": "1181400"
  },
  {
    "text": "enclose with fix to make it compile",
    "start": "1181400",
    "end": "1184120"
  },
  {
    "text": "therefore yeah it's a bit Yeah but I",
    "start": "1184120",
    "end": "1186799"
  },
  {
    "text": "want to illustrate the how to use the",
    "start": "1186799",
    "end": "1189159"
  },
  {
    "text": "what what how why um param morphism is",
    "start": "1189159",
    "end": "1191840"
  },
  {
    "text": "useful in some cases and therefore now",
    "start": "1191840",
    "end": "1194679"
  },
  {
    "text": "in this cases I prepare the um uh the",
    "start": "1194679",
    "end": "1198120"
  },
  {
    "text": "Lal number but in the next last um data",
    "start": "1198120",
    "end": "1201200"
  },
  {
    "text": "structure format therefore started",
    "start": "1201200",
    "end": "1205639"
  },
  {
    "text": "zero that means actually is find the",
    "start": "1205960",
    "end": "1208400"
  },
  {
    "text": "factorial number of of",
    "start": "1208400",
    "end": "1210159"
  },
  {
    "text": "three is called and and return",
    "start": "1210159",
    "end": "1213960"
  },
  {
    "text": "six and yeah and therefore that's um the",
    "start": "1213960",
    "end": "1218520"
  },
  {
    "text": "recap of the paramor ism uh we just",
    "start": "1218520",
    "end": "1222559"
  },
  {
    "text": "discussed the first is um cism the most",
    "start": "1222559",
    "end": "1225919"
  },
  {
    "text": "uh basic one and then anamorphism yeah",
    "start": "1225919",
    "end": "1229880"
  },
  {
    "text": "is",
    "start": "1229880",
    "end": "1231000"
  },
  {
    "text": "reverse of",
    "start": "1231000",
    "end": "1233640"
  },
  {
    "text": "catamorphism yeah hydromorphism is just",
    "start": "1233640",
    "end": "1236120"
  },
  {
    "text": "like um is the combination",
    "start": "1236120",
    "end": "1239919"
  },
  {
    "text": "of anamorphism followed by",
    "start": "1239919",
    "end": "1243559"
  },
  {
    "text": "catamorphism and finally um the param",
    "start": "1243559",
    "end": "1247280"
  },
  {
    "text": "morphism is almost the same as",
    "start": "1247280",
    "end": "1250000"
  },
  {
    "text": "catamorphism except it include that",
    "start": "1250000",
    "end": "1253039"
  },
  {
    "text": "additional um fix of f here and and all",
    "start": "1253039",
    "end": "1258000"
  },
  {
    "text": "this um",
    "start": "1258000",
    "end": "1259520"
  },
  {
    "text": "okay mm uh they are fundamental and",
    "start": "1259520",
    "end": "1263400"
  },
  {
    "text": "actually they are already available from",
    "start": "1263400",
    "end": "1265240"
  },
  {
    "text": "the hasc recursion schemes Library um",
    "start": "1265240",
    "end": "1270320"
  },
  {
    "text": "therefore uh if we use this um mm to",
    "start": "1270320",
    "end": "1273279"
  },
  {
    "text": "solve some recursion problem uh what we",
    "start": "1273279",
    "end": "1276279"
  },
  {
    "text": "only need to do is only need to consider",
    "start": "1276279",
    "end": "1278960"
  },
  {
    "text": "the application specific requirement by",
    "start": "1278960",
    "end": "1282320"
  },
  {
    "text": "um designing the F only and also the",
    "start": "1282320",
    "end": "1285240"
  },
  {
    "text": "long recursive function and that's it",
    "start": "1285240",
    "end": "1288200"
  },
  {
    "text": "and uh of course in the real world um",
    "start": "1288200",
    "end": "1290720"
  },
  {
    "text": "there are much more morphisms available",
    "start": "1290720",
    "end": "1293760"
  },
  {
    "text": "from the recursion schemes library and",
    "start": "1293760",
    "end": "1297440"
  },
  {
    "text": "and maybe sometimes we find that it's",
    "start": "1297440",
    "end": "1299760"
  },
  {
    "text": "still not sufficient we may need to",
    "start": "1299760",
    "end": "1301520"
  },
  {
    "text": "consider we inventing some ourself to",
    "start": "1301520",
    "end": "1304360"
  },
  {
    "text": "solve our own problem therefore um yeah",
    "start": "1304360",
    "end": "1307000"
  },
  {
    "text": "try to use morphism to solve the",
    "start": "1307000",
    "end": "1310400"
  },
  {
    "text": "recursion problem to make it um",
    "start": "1310400",
    "end": "1312679"
  },
  {
    "text": "simpler and um yeah and yeah here it is",
    "start": "1312679",
    "end": "1317400"
  },
  {
    "text": "some references I comic course um the",
    "start": "1317400",
    "end": "1321240"
  },
  {
    "text": "first few of them uh personally I think",
    "start": "1321240",
    "end": "1324039"
  },
  {
    "text": "is is pretty useful for help me to",
    "start": "1324039",
    "end": "1326720"
  },
  {
    "text": "understand especially about how why why",
    "start": "1326720",
    "end": "1328440"
  },
  {
    "text": "the fix concept work and so on the first",
    "start": "1328440",
    "end": "1330919"
  },
  {
    "text": "link is very useful and the second one",
    "start": "1330919",
    "end": "1333600"
  },
  {
    "text": "is is also is more uh practical it's",
    "start": "1333600",
    "end": "1336600"
  },
  {
    "text": "about um how the recursion scheme",
    "start": "1336600",
    "end": "1339120"
  },
  {
    "text": "Library are designed and the first one",
    "start": "1339120",
    "end": "1341760"
  },
  {
    "text": "uh I find is very interesting because it",
    "start": "1341760",
    "end": "1343840"
  },
  {
    "text": "cover a lot more morphisms and I I",
    "start": "1343840",
    "end": "1347400"
  },
  {
    "text": "forgot maybe over 10 MMS and so on and",
    "start": "1347400",
    "end": "1350919"
  },
  {
    "text": "yeah just the first one is theion scheme",
    "start": "1350919",
    "end": "1353799"
  },
  {
    "text": "library from high",
    "start": "1353799",
    "end": "1355919"
  },
  {
    "text": "scho uh yeah I would like to mention the",
    "start": "1355919",
    "end": "1358840"
  },
  {
    "text": "the second last one is is a paper I",
    "start": "1358840",
    "end": "1361880"
  },
  {
    "text": "believe it inspired U many of the",
    "start": "1361880",
    "end": "1364559"
  },
  {
    "text": "recursion patterns in recursion scheme",
    "start": "1364559",
    "end": "1367200"
  },
  {
    "text": "uh written by Eric Meer and two other",
    "start": "1367200",
    "end": "1370159"
  },
  {
    "text": "person however I don't understand it",
    "start": "1370159",
    "end": "1373880"
  },
  {
    "text": "because it's really academic and I don't",
    "start": "1373880",
    "end": "1377520"
  },
  {
    "text": "understand the symbol but I think it's",
    "start": "1377520",
    "end": "1379360"
  },
  {
    "text": "uh if you are interested to see how how",
    "start": "1379360",
    "end": "1381320"
  },
  {
    "text": "people think or comes out this recursion",
    "start": "1381320",
    "end": "1383640"
  },
  {
    "text": "pattern um yeah still um good to know",
    "start": "1383640",
    "end": "1387520"
  },
  {
    "text": "and uh if you are looking for Challenge",
    "start": "1387520",
    "end": "1390080"
  },
  {
    "text": "and you want to do functional",
    "start": "1390080",
    "end": "1391440"
  },
  {
    "text": "programming in scalar okay here it",
    "start": "1391440",
    "end": "1395600"
  },
  {
    "text": "is in scolar um call Ma I think it's the",
    "start": "1396120",
    "end": "1403200"
  },
  {
    "text": "Russian and yeah but I have't sorry yet",
    "start": "1403200",
    "end": "1406440"
  },
  {
    "text": "yeah therefore um yeah that's it's a bit",
    "start": "1406440",
    "end": "1409640"
  },
  {
    "text": "rush and that's all for the my talk and",
    "start": "1409640",
    "end": "1413120"
  },
  {
    "text": "yeah",
    "start": "1413120",
    "end": "1416120"
  }
]