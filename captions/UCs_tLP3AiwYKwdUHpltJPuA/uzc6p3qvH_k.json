[
  {
    "text": "but talking about infrastructure's actual code today and I will explain what that means but before we get there",
    "start": "6240",
    "end": "12719"
  },
  {
    "text": "what I have a maybe rhetorical question and that is the question that's almost",
    "start": "12719",
    "end": "17880"
  },
  {
    "text": "as old as the term architect and that is should Architects actually code and you",
    "start": "17880",
    "end": "24300"
  },
  {
    "text": "know with the introduction you guys probably have a good guess where I stand on this and I say yes absolutely",
    "start": "24300",
    "end": "30599"
  },
  {
    "text": "Architects should code but they shouldn't code to deliver code like they",
    "start": "30599",
    "end": "36780"
  },
  {
    "text": "you know there's other people who deliver software better than the Architects do but by diving down in the",
    "start": "36780",
    "end": "42300"
  },
  {
    "text": "engine room and actually building things a The Architects get a really valuable reality check like me we just heard from",
    "start": "42300",
    "end": "50160"
  },
  {
    "text": "Dave right sometimes things are burning sometimes they're they're cooking right so you need to see what reality is like",
    "start": "50160",
    "end": "56520"
  },
  {
    "text": "so you don't drift up into the Ivory Tower and you bring things back with you",
    "start": "56520",
    "end": "63000"
  },
  {
    "text": "from the engine room like you see things when you'll go down to the code level",
    "start": "63000",
    "end": "68460"
  },
  {
    "text": "you see things as an architect that not everybody else might see and that is",
    "start": "68460",
    "end": "74460"
  },
  {
    "text": "useful inside that you can replay back to other folks so it's not about delivering the code in the engine room",
    "start": "74460",
    "end": "80640"
  },
  {
    "text": "but it's bringing new insights back with you and the talk we have today here is",
    "start": "80640",
    "end": "86100"
  },
  {
    "text": "exactly one of those insights I work at AWS and one of the things I feel",
    "start": "86100",
    "end": "91140"
  },
  {
    "text": "strongly about is well you shouldn't be working for a product company without actually using their product so last",
    "start": "91140",
    "end": "97860"
  },
  {
    "text": "year I sat down and said okay let me go build some applications on AWS and I was like well you know let me use some of",
    "start": "97860",
    "end": "104880"
  },
  {
    "text": "the the more vents some of the more fun stuff so obviously I do this using serverless and then I wanted to automate",
    "start": "104880",
    "end": "111600"
  },
  {
    "text": "that code and out of this came the story that you're gonna hear today that I",
    "start": "111600",
    "end": "117299"
  },
  {
    "text": "brought back with me from the engine as a quick seller completing the",
    "start": "117299",
    "end": "122880"
  },
  {
    "text": "introduction I also like to write books so apparently I've done a lot of things in my past you know from you know",
    "start": "122880",
    "end": "128280"
  },
  {
    "text": "Consulting to Silicon Valley to startups to sell a big Enterprise ID",
    "start": "128280",
    "end": "133319"
  },
  {
    "text": "um I like connecting the dots between those environments and I like to write about what I learned so a long time ago",
    "start": "133319",
    "end": "140400"
  },
  {
    "text": "I've written about you know message distributed messaging oriented systems with Bobby roof and amazingly that's",
    "start": "140400",
    "end": "146819"
  },
  {
    "text": "still quite relevant today then I'm very keen on the role of Architects and architecture that's my book the",
    "start": "146819",
    "end": "153060"
  },
  {
    "text": "architect elevator and then you know not surprisingly I also have thoughts on you know different point of view on cloud",
    "start": "153060",
    "end": "159300"
  },
  {
    "text": "and Cloud strategy so that's another book of mine and interestingly today's talk really pulls from all three of",
    "start": "159300",
    "end": "166860"
  },
  {
    "text": "those books that now span over yeah just about two decades here so the good news",
    "start": "166860",
    "end": "172800"
  },
  {
    "text": "is some stuff in it actually passes the the test of time they don't have to reinvent everything every year the",
    "start": "172800",
    "end": "179099"
  },
  {
    "text": "vocabulary and the apis change change all the time but I think some of our architecture knowledge actually lasts",
    "start": "179099",
    "end": "185640"
  },
  {
    "text": "quite a long while at least that's my experience with the Enterprise Integration patterns so as an industry",
    "start": "185640",
    "end": "194159"
  },
  {
    "text": "we tend to not do so great with naming and yeah I already gave you sort of an",
    "start": "194159",
    "end": "200340"
  },
  {
    "text": "example serverless right obviously serverless doesn't mean there are no servers so that's not such a great name",
    "start": "200340",
    "end": "205860"
  },
  {
    "text": "and I feel that infrastructure as code might also not be the luckiest wording",
    "start": "205860",
    "end": "212040"
  },
  {
    "text": "that we've ever created well yeah there's a lot of examples it seems to be a weak spot in our industry that we",
    "start": "212040",
    "end": "218459"
  },
  {
    "text": "struggle with naming and in this case I feel that with modern Cloud applications",
    "start": "218459",
    "end": "223620"
  },
  {
    "text": "it's totally not just about infrastructure just you know think about it serverless as poor as the name might",
    "start": "223620",
    "end": "229920"
  },
  {
    "text": "be wants to tell us that it's not about infrastructure so if we're automating serverless things right it should be",
    "start": "229920",
    "end": "235980"
  },
  {
    "text": "more than just infrastructure otherwise be a little bit self-contradictory and I would also posit that a lot of the",
    "start": "235980",
    "end": "242879"
  },
  {
    "text": "automation tools that we used to use they're not so much really cold they all",
    "start": "242879",
    "end": "248280"
  },
  {
    "text": "look like a documentary I'm a bit older you know so they remind me of XM smell generally so I would like automation to",
    "start": "248280",
    "end": "256199"
  },
  {
    "text": "be just more as actual code the way I write my applications I don't write my applications in Json and yellow you know",
    "start": "256199",
    "end": "263100"
  },
  {
    "text": "I write them in Python typescript.java whatever it might be so if it's supposed to be code why isn't it you know python",
    "start": "263100",
    "end": "270000"
  },
  {
    "text": "or typescript or Java so without premise that we're gonna debunk this this",
    "start": "270000",
    "end": "275340"
  },
  {
    "text": "moniker and replace it with something more meaningful will go into our Cloud automation tool and automation isn't",
    "start": "275340",
    "end": "282600"
  },
  {
    "text": "sort of a new topic right so if you look back the history of automation we learned very quickly that doing things",
    "start": "282600",
    "end": "287820"
  },
  {
    "text": "automated saves us manual labor and that's really the history of automation",
    "start": "287820",
    "end": "293160"
  },
  {
    "text": "we try to make things more more cheaply by reducing manual steps and replacing",
    "start": "293160",
    "end": "299400"
  },
  {
    "text": "them with automated steps you know that worked well for a solar Ford Model T some hundred years ago but we shouldn't",
    "start": "299400",
    "end": "306479"
  },
  {
    "text": "fall into the track to believe that cloud automation is only there for the",
    "start": "306479",
    "end": "312060"
  },
  {
    "text": "same purpose because I do hear these arguments sometimes oh you're trying to automate things because you're trying to",
    "start": "312060",
    "end": "318540"
  },
  {
    "text": "take my job as an idea administer the admin away that was a hundred years ago",
    "start": "318540",
    "end": "323580"
  },
  {
    "text": "right now we have very different motivations one motivation we have is",
    "start": "323580",
    "end": "329039"
  },
  {
    "text": "speed yeah we need to deliver Solutions and things faster so automation makes us",
    "start": "329039",
    "end": "334320"
  },
  {
    "text": "move faster it also improves the quality it improves the repeatability automated",
    "start": "334320",
    "end": "340380"
  },
  {
    "text": "deployments are guaranteed to run the same way the last 999 deployments would",
    "start": "340380",
    "end": "346080"
  },
  {
    "text": "happen if you do that manually I guarantee you that will not be the case and that's you know related to one of my",
    "start": "346080",
    "end": "352800"
  },
  {
    "text": "popular Matrix quotes right never send a human to do a machine's job if you want to do a machine's job send the machines",
    "start": "352800",
    "end": "359580"
  },
  {
    "text": "to do that and that is Automation and that gives you repeatability a much",
    "start": "359580",
    "end": "365160"
  },
  {
    "text": "underappreciated benefit of automation is confidence if you want to move quickly you got to have confidence if",
    "start": "365160",
    "end": "371580"
  },
  {
    "text": "you're not sure why whether your stuff is gonna work then you're not gonna be confident you're going to hesitate and",
    "start": "371580",
    "end": "377400"
  },
  {
    "text": "you're going to slow down so automation gives you this confidence that you can",
    "start": "377400",
    "end": "382919"
  },
  {
    "text": "move quickly and it does allow you to work in entirely new ways for example if",
    "start": "382919",
    "end": "389639"
  },
  {
    "text": "you're highly automated you can dispose resources and re-create them it sort of",
    "start": "389639",
    "end": "394979"
  },
  {
    "text": "you know the cattle versus pet analogy I'm as a vegetarian don't like that so much but you know you can if you need",
    "start": "394979",
    "end": "401100"
  },
  {
    "text": "something you can just get rid of the old one and recreate a new one rather than keep patching and maintaining",
    "start": "401100",
    "end": "406919"
  },
  {
    "text": "things and that why you always have a clean instance and you can really do that only if you highly automate and",
    "start": "406919",
    "end": "412620"
  },
  {
    "text": "last but not least automated processes are also more transparent how often do you deploy what's the percentage of",
    "start": "412620",
    "end": "418560"
  },
  {
    "text": "redeploys that you have because you had some issue with it if it's automated all that stuff is apparent yeah if it's done",
    "start": "418560",
    "end": "425759"
  },
  {
    "text": "by hand you will get some sort of evasive answers oh it works like most of the time kind of sort of right so autumn",
    "start": "425759",
    "end": "432360"
  },
  {
    "text": "information has many many more benefits we are not after efficiency here we're after a different way of working we're",
    "start": "432360",
    "end": "439259"
  },
  {
    "text": "after giving team confidence and we're after increased transparency so with",
    "start": "439259",
    "end": "444780"
  },
  {
    "text": "that background I would go as far in saying that if you took automation out of the cloud you most likely don't have",
    "start": "444780",
    "end": "452160"
  },
  {
    "text": "a cloud anymore uit starts looking much more like the good old data center and I",
    "start": "452160",
    "end": "459120"
  },
  {
    "text": "haven't found anybody who is Keen to have yet another data center so I consider automation a defining quality",
    "start": "459120",
    "end": "466080"
  },
  {
    "text": "of the cloud it's not so convenience or some add-on that is what defines working",
    "start": "466080",
    "end": "471300"
  },
  {
    "text": "in a cloud operating model now I mentioned the beginning about",
    "start": "471300",
    "end": "476880"
  },
  {
    "text": "Architects I mentioned the architect elevator and the benefits of diving into",
    "start": "476880",
    "end": "481979"
  },
  {
    "text": "the engine room and having the point of view of an architect so let's apply The Architects point of view to Automation",
    "start": "481979",
    "end": "490199"
  },
  {
    "text": "and here's a little pitch from my side for the role of an architect The",
    "start": "490199",
    "end": "495300"
  },
  {
    "text": "Architects we often draw pictures we have models I like to call them and",
    "start": "495300",
    "end": "500520"
  },
  {
    "text": "often we take a higher level view right the abstract things out we Zoom things",
    "start": "500520",
    "end": "505800"
  },
  {
    "text": "up that's what we as Architects do and there's a common misconception that when you zoom out you lose detail there's",
    "start": "505800",
    "end": "513539"
  },
  {
    "text": "sort of a common misconception that you're not conveying as much because you",
    "start": "513539",
    "end": "518760"
  },
  {
    "text": "omitted some things but I find that to be totally the opposite if you raise the",
    "start": "518760",
    "end": "525060"
  },
  {
    "text": "level of abstraction if you amplify the important things and get rid of the noise you actually deepen your thinking",
    "start": "525060",
    "end": "532920"
  },
  {
    "text": "you can think much more clearly and deeply about the systems exactly by",
    "start": "532920",
    "end": "538140"
  },
  {
    "text": "removing all the noise right you can finally see the force for the trees so",
    "start": "538140",
    "end": "544140"
  },
  {
    "text": "this architect maneuver of zooming out abstractly is actually really useful one and it doesn't lose information it",
    "start": "544140",
    "end": "551100"
  },
  {
    "text": "actually makes us see things that we otherwise might not have seen so let's",
    "start": "551100",
    "end": "556440"
  },
  {
    "text": "apply this to automation right we all write like terraforming cloud formation scripts right why are we doing this and",
    "start": "556440",
    "end": "563279"
  },
  {
    "text": "what are the tasks that we accomplish with this and I believe that can break down into four distinct objectives that",
    "start": "563279",
    "end": "570240"
  },
  {
    "text": "we have well the first one that's fairly obvious is provisioning and I made up sort of a trivial example here right you",
    "start": "570240",
    "end": "576899"
  },
  {
    "text": "have sort of two virtual machines maybe ec2 instances you have some load balancing some Gateway in front it maybe",
    "start": "576899",
    "end": "582420"
  },
  {
    "text": "some sort of very basic application that you're building so you need to provision some Hardware right CSO virtual machines",
    "start": "582420",
    "end": "589680"
  },
  {
    "text": "right but that alone doesn't do anything except maybe cost you some money in the cloud so you should should definitely",
    "start": "589680",
    "end": "595380"
  },
  {
    "text": "deploy some software on the resources that you provisioned right and that you do with automation scripts also but in",
    "start": "595380",
    "end": "603540"
  },
  {
    "text": "isolation these virtual machines and the software on their want to do anything",
    "start": "603540",
    "end": "608580"
  },
  {
    "text": "you need to wire this together right you need an endpoint the Gateway routes things to the load balancer the load",
    "start": "608580",
    "end": "615360"
  },
  {
    "text": "balancer talks to the virtual machines without that composition again this thing does nothing and just costs you",
    "start": "615360",
    "end": "621420"
  },
  {
    "text": "money so composition is the third one and the last one is more likely than not even though you might deploy identical",
    "start": "621420",
    "end": "628080"
  },
  {
    "text": "images you're probably going to have some slight variations in configuration right whether this is between staging",
    "start": "628080",
    "end": "633480"
  },
  {
    "text": "and production you have primaries and secondaries some things talk to that database instance other things talk to",
    "start": "633480",
    "end": "639300"
  },
  {
    "text": "that data in this instance yeah you're provisioning Keys Secrets Etc yeah invariably there's going to be some",
    "start": "639300",
    "end": "645420"
  },
  {
    "text": "configuration that you do and we'll come back to this later as we see that having this breakdown of automation is actually",
    "start": "645420",
    "end": "652440"
  },
  {
    "text": "a very helpful mental model to understand that this is not your your",
    "start": "652440",
    "end": "657720"
  },
  {
    "text": "old shell script kind of thing right that displays a very different role in",
    "start": "657720",
    "end": "663300"
  },
  {
    "text": "your application delivery cycle now I've made another statements about Architects and that is that Architects live in the",
    "start": "663300",
    "end": "670320"
  },
  {
    "text": "first derivative I've said I've got as far as saying if you have absolutely no change in your systems you probably",
    "start": "670320",
    "end": "677399"
  },
  {
    "text": "don't need a lot of architecture right you just get it running somehow and it'll keep running now luckily for us",
    "start": "677399",
    "end": "683279"
  },
  {
    "text": "Architects that's a relatively poor assumption these days because everything tends to be changing and the same is",
    "start": "683279",
    "end": "690360"
  },
  {
    "text": "true for infrastructures code or for cloud automation like I like to call it and the good friend with Keith Morris so",
    "start": "690360",
    "end": "697740"
  },
  {
    "text": "he wrote the defining book on infrastructure as code back in 2016. and what we can learn here is that",
    "start": "697740",
    "end": "706019"
  },
  {
    "text": "when he published the second edition late in 2020 the title of the book",
    "start": "706019",
    "end": "711360"
  },
  {
    "text": "stayed the same which you know they tend to be sort of immutable if you wish right but the subtitle of the book",
    "start": "711360",
    "end": "717480"
  },
  {
    "text": "changed in very important ways and the publisher once told me that the subtitle",
    "start": "717480",
    "end": "723300"
  },
  {
    "text": "is actually the thing that tells you most of about the book because the title is more like to get attention or SEO",
    "start": "723300",
    "end": "729360"
  },
  {
    "text": "kind of things so it used to be about managing servers in the cloud",
    "start": "729360",
    "end": "734540"
  },
  {
    "text": "infrastructure service and now it's about Dynamic systems for the cloud age",
    "start": "734540",
    "end": "739680"
  },
  {
    "text": "so apparently Keith agrees that it's not just about servers even though he couldn't really change the title and he",
    "start": "739680",
    "end": "746459"
  },
  {
    "text": "also talks about Dynamic systems so he increasingly talks about how you",
    "start": "746459",
    "end": "751620"
  },
  {
    "text": "automate in the face of change not just static things so me it was very",
    "start": "751620",
    "end": "756779"
  },
  {
    "text": "interesting to see this what seems like a Nuance actually being an important ship that we're talking about managing",
    "start": "756779",
    "end": "764160"
  },
  {
    "text": "change here well and in automation land change comes in many different forms",
    "start": "764160",
    "end": "770040"
  },
  {
    "text": "here just three examples right we often just think about functional change we need to add a feature that's certainly a",
    "start": "770040",
    "end": "776220"
  },
  {
    "text": "kind of change so a new instance a new microservice a new Lambda function right so these are all changes to our",
    "start": "776220",
    "end": "781980"
  },
  {
    "text": "application of course there's also changes to the environment we're running in you know Dev test pre-prod prop right",
    "start": "781980",
    "end": "788700"
  },
  {
    "text": "that is also a progression a change to our application and then lastly sometimes our application is all happy",
    "start": "788700",
    "end": "796139"
  },
  {
    "text": "inside but the reality changes because some money goes in one of the servers and you know makes a emergency patch or",
    "start": "796139",
    "end": "803160"
  },
  {
    "text": "Tinkers with something we sometimes call this the configuration drift that is also a way of change and now the way we",
    "start": "803160",
    "end": "811019"
  },
  {
    "text": "deal with this change when we do automation is that rather than making a",
    "start": "811019",
    "end": "817200"
  },
  {
    "text": "sharescript type of automation where we say do a b and c we rather use",
    "start": "817200",
    "end": "822600"
  },
  {
    "text": "declarative provisioning and virtually all Cloud automation tools do it this way because it's the only way that works",
    "start": "822600",
    "end": "829620"
  },
  {
    "text": "well with change so rather than telling the system what it should be doing we",
    "start": "829620",
    "end": "834720"
  },
  {
    "text": "tell the system the target State I need a load balancer and two VMS what the",
    "start": "834720",
    "end": "839760"
  },
  {
    "text": "system then can do it can look at the current state calculate the Delta and",
    "start": "839760",
    "end": "845180"
  },
  {
    "text": "basically derive the actual actions behind it that are going to be needed to",
    "start": "845180",
    "end": "851940"
  },
  {
    "text": "bring the current state in to the desired state right and that's the way many many systems Works whether it's",
    "start": "851940",
    "end": "858300"
  },
  {
    "text": "kubernetes or whether it's most of our Cloud automation systems because this is the thing that deals best with change",
    "start": "858300",
    "end": "865320"
  },
  {
    "text": "because if I need the third server what kind of automation script would I have to write in this case I just changed the",
    "start": "865320",
    "end": "871500"
  },
  {
    "text": "number of servers from two to three and the system will figure out that you might have had one or two before and it",
    "start": "871500",
    "end": "876959"
  },
  {
    "text": "can totally see the difference between them what's important though and what I",
    "start": "876959",
    "end": "882060"
  },
  {
    "text": "think gets often falsely conflated is that this way of declarative",
    "start": "882060",
    "end": "887160"
  },
  {
    "text": "provisioning has nothing to do with the type of language that you use to declare",
    "start": "887160",
    "end": "893940"
  },
  {
    "text": "the desired statement that's two pairs of shoes still declarative provisioning is an approach by defining a desired",
    "start": "893940",
    "end": "901560"
  },
  {
    "text": "State comparing against the actual State and deriving the tasks versus a declarative language is a programming",
    "start": "901560",
    "end": "908100"
  },
  {
    "text": "language choice we Define data structures in all sorts of programming languages I can declare a desired State",
    "start": "908100",
    "end": "914699"
  },
  {
    "text": "and an object or under language and a procedural language in a functional language you know in any language I can",
    "start": "914699",
    "end": "920160"
  },
  {
    "text": "make a data structure so my important Point here is do not conflate",
    "start": "920160",
    "end": "925380"
  },
  {
    "text": "declarative provisioning which we essentially all use to deal with change with using document oriented or",
    "start": "925380",
    "end": "933060"
  },
  {
    "text": "sometimes called declarative languages so you don't need to have stuff in yaml",
    "start": "933060",
    "end": "939600"
  },
  {
    "text": "in in order to use declarative provisioning and we'll see very soon yeah what great things we can do if we",
    "start": "939600",
    "end": "947639"
  },
  {
    "text": "don't use a document oriented language or they just make a little bit of fun of documented oriented languages I found",
    "start": "947639",
    "end": "954000"
  },
  {
    "text": "this really old blog post by Charles that's all people who've done a lot of Windows development in the old days will",
    "start": "954000",
    "end": "960839"
  },
  {
    "text": "know his name very well right one of the most respected figures in Windows land and you know look at the date here well",
    "start": "960839",
    "end": "967740"
  },
  {
    "text": "a it's 2016. so this is a good while ago and look at the the months and dates so",
    "start": "967740",
    "end": "972899"
  },
  {
    "text": "take it with a grain of salt this is an April 1st kind of post but he said hey why are we writing these weird",
    "start": "972899",
    "end": "978959"
  },
  {
    "text": "Expressions why do I need to write something like a equals five times open parentheses B plus 27 times C if I can",
    "start": "978959",
    "end": "985800"
  },
  {
    "text": "express the same thing in this beautiful document right and of course it's a",
    "start": "985800",
    "end": "991019"
  },
  {
    "text": "complete joke because it's hideous and if you think like yeah this is like the old farts like Charles pessel or Gregor",
    "start": "991019",
    "end": "997139"
  },
  {
    "text": "or day for that argument's sake right who deal with this old XML kind of saying I am much cooler I do this in",
    "start": "997139",
    "end": "1003800"
  },
  {
    "text": "Jason yellow the bad news video is not this is no different in Jason yaml you're basically doing the same thing",
    "start": "1003800",
    "end": "1009680"
  },
  {
    "text": "and sometimes it makes sense but sometimes it absolutely makes no sense right there is a reason we have",
    "start": "1009680",
    "end": "1015680"
  },
  {
    "text": "expressions like this and we don't need 30 lines of a structured document to add",
    "start": "1015680",
    "end": "1020779"
  },
  {
    "text": "and multiply two numbers so with that back to the choice of automation",
    "start": "1020779",
    "end": "1026900"
  },
  {
    "text": "language which we learned is independent of being dick of using declarative",
    "start": "1026900",
    "end": "1032780"
  },
  {
    "text": "provisioning right and yeah we do have a lot of languages that are document",
    "start": "1032780",
    "end": "1037880"
  },
  {
    "text": "oriented or sometimes called declarative I prefer the term document oriented so we don't muddle the two things right and",
    "start": "1037880",
    "end": "1044480"
  },
  {
    "text": "these are the other jsons and and the elements and that's good right like we my employer pays my salary right we have",
    "start": "1044480",
    "end": "1050540"
  },
  {
    "text": "one cloud formation that's great care form super popular so it works for many cases there's also some little bit rare",
    "start": "1050540",
    "end": "1059179"
  },
  {
    "text": "instances of functional language you think like oh if I need to actually calculate data structures and I need to",
    "start": "1059179",
    "end": "1066220"
  },
  {
    "text": "manipulate lists and calculate elements you know across a large set of infrastructure a functional language can",
    "start": "1066220",
    "end": "1073280"
  },
  {
    "text": "actually be a great asset I can do things like maps and reduce and I can flatten arrays and all these kind of",
    "start": "1073280",
    "end": "1080720"
  },
  {
    "text": "things so there are actually some languages who follow that route the one",
    "start": "1080720",
    "end": "1085820"
  },
  {
    "text": "that I use most extensively is proprietary is BCL it's the bork config language I actually liked it a lot you",
    "start": "1085820",
    "end": "1093860"
  },
  {
    "text": "can find a redacted phds thesis about this that tells you a little bit what PA",
    "start": "1093860",
    "end": "1099260"
  },
  {
    "text": "what what BCL was about but I thought there was a great language to Define",
    "start": "1099260",
    "end": "1104660"
  },
  {
    "text": "um configuration data sets for large fleets of of resources because we are",
    "start": "1104660",
    "end": "1110720"
  },
  {
    "text": "listed data manipulation is very natural in this kind of functional language there's some efforts to sort of bring",
    "start": "1110720",
    "end": "1116600"
  },
  {
    "text": "this back I need to spend a bit more time there's a language on effort Q that's looking to bring this more on the",
    "start": "1116600",
    "end": "1122480"
  },
  {
    "text": "mainstream so yeah maybe something for next year's talk and then of course the language that we write most of our",
    "start": "1122480",
    "end": "1128660"
  },
  {
    "text": "applications and then those tend to be the object-oriented languages and the reason object-oriented languages are so",
    "start": "1128660",
    "end": "1134960"
  },
  {
    "text": "popular because they help us deal with complexity they give us nice mechanisms to abstract things that may be of",
    "start": "1134960",
    "end": "1142160"
  },
  {
    "text": "inheritance we have polymorphism right we have classes so these are all ways to",
    "start": "1142160",
    "end": "1148640"
  },
  {
    "text": "build software that's bigger than our brains in a way right we need some things that help us abstract and",
    "start": "1148640",
    "end": "1154820"
  },
  {
    "text": "simplify and reduce the complexity because the complexity of the domain otherwise will not fit in our own heads",
    "start": "1154820",
    "end": "1162200"
  },
  {
    "text": "and that's a great thing and that's why most of the systems we use today are",
    "start": "1162200",
    "end": "1167600"
  },
  {
    "text": "written in those kind of language so pollu means it's a great example independent vendor and then there's AWS",
    "start": "1167600",
    "end": "1173780"
  },
  {
    "text": "cdk and there's also cdk for terraform which just went GAA well I think less than a month or just about a month ago",
    "start": "1173780",
    "end": "1179960"
  },
  {
    "text": "so there's again you have you have choices for each approach so let's look at the cdk a little bit",
    "start": "1179960",
    "end": "1186679"
  },
  {
    "text": "you know that's closest to my home um that's just what happened to you is doing my engine room Deep dive right and",
    "start": "1186679",
    "end": "1193340"
  },
  {
    "text": "I would say with cdk things start to look like much more as automation as",
    "start": "1193340",
    "end": "1198799"
  },
  {
    "text": "actual code so a very simple example here what you can do in cdk you can start deploying a VPC or virtual private",
    "start": "1198799",
    "end": "1206120"
  },
  {
    "text": "Cloud right this is a construct that you have and it looks like a normal line of",
    "start": "1206120",
    "end": "1211820"
  },
  {
    "text": "code but behind this would actually sit a very large amount of automation code I",
    "start": "1211820",
    "end": "1218960"
  },
  {
    "text": "think the VPC construct alone it's about 270 lines of cloud formation code or",
    "start": "1218960",
    "end": "1226220"
  },
  {
    "text": "document you can say okay but maybe it's a little bit verbose but no matter how verbose it is like turning 270 lines in",
    "start": "1226220",
    "end": "1232100"
  },
  {
    "text": "the one line is definitely a good thing to do yeah and then you can reference this VPC just like a variable in the",
    "start": "1232100",
    "end": "1239059"
  },
  {
    "text": "next line right so I create an ec2 cluster in the CPC and this is all like",
    "start": "1239059",
    "end": "1244460"
  },
  {
    "text": "writing totally normal code and then I can use higher level patterns and I joke",
    "start": "1244460",
    "end": "1251720"
  },
  {
    "text": "before we struggle with naming so here's something that's a bit of a mouthful it's a network load balance Fire game",
    "start": "1251720",
    "end": "1257419"
  },
  {
    "text": "service and you might show get the name but in the end this does something very very useful it gives you a higher level",
    "start": "1257419",
    "end": "1263900"
  },
  {
    "text": "abstraction of something that I want to create and under the covers it actually",
    "start": "1263900",
    "end": "1269000"
  },
  {
    "text": "Provisions different resources right it has the farrogate it has you know that",
    "start": "1269000",
    "end": "1274700"
  },
  {
    "text": "the network mapping in front of it so you can express your infrastructure in higher level abstractions just like you",
    "start": "1274700",
    "end": "1280700"
  },
  {
    "text": "would do in any other oo language and of course because you're writing this as as",
    "start": "1280700",
    "end": "1286220"
  },
  {
    "text": "regular code you have all the other things in your IDE like autocomplete and all the things that it used to refactoring syntax highlighting all the",
    "start": "1286220",
    "end": "1293840"
  },
  {
    "text": "kind of things that you would do when you write regular code and to be honest I like this quite a lot because when I",
    "start": "1293840",
    "end": "1301039"
  },
  {
    "text": "do infrastructure as actual code if I'm coding my on automation you know I am",
    "start": "1301039",
    "end": "1306740"
  },
  {
    "text": "very fond of these kind of things so I'd like to have them not only for my application code I also like to have",
    "start": "1306740",
    "end": "1313159"
  },
  {
    "text": "them for my automation code well you can do this across an increasing variety of",
    "start": "1313159",
    "end": "1318320"
  },
  {
    "text": "languages right this is your python JavaScript typescript Java C sharp and go with belief still in preview so most",
    "start": "1318320",
    "end": "1325580"
  },
  {
    "text": "popular modern languages you can use cdk it's essentially a programming library",
    "start": "1325580",
    "end": "1331280"
  },
  {
    "text": "and you use the languages the same way you would use them anyhow so having",
    "start": "1331280",
    "end": "1337760"
  },
  {
    "text": "given that intro it's good to understand that there's sort of three major parts that make cdk so interesting the first",
    "start": "1337760",
    "end": "1344900"
  },
  {
    "text": "one is the constructs the second one is all open source there's the whole ecosystem and then there's the object",
    "start": "1344900",
    "end": "1350120"
  },
  {
    "text": "oriented part that I'll speak to last so the constructs is we divide cdk library",
    "start": "1350120",
    "end": "1356120"
  },
  {
    "text": "in three different levels you could say levels of abstraction and I comment more",
    "start": "1356120",
    "end": "1361280"
  },
  {
    "text": "on that later the first one is well it's like your your cloud formation resources right I live in serverless lands or the",
    "start": "1361280",
    "end": "1367220"
  },
  {
    "text": "level one constructs you know they're like in sqs you know Channel then SNS queue their Lambda function their step",
    "start": "1367220",
    "end": "1374299"
  },
  {
    "text": "functions you know workflow instance right it's an easy tool it's basically the AWS service vocabulary right that's",
    "start": "1374299",
    "end": "1382460"
  },
  {
    "text": "level one then level two you have a little bit higher level constructs this might be things like Lambda sqs Lambda I",
    "start": "1382460",
    "end": "1390380"
  },
  {
    "text": "want to have two serverless functions connected by a queue and I want to do this more easily so I have this kind of",
    "start": "1390380",
    "end": "1396500"
  },
  {
    "text": "drugs and then you have things on top of that and we've already seen that with oh",
    "start": "1396500",
    "end": "1402020"
  },
  {
    "text": "I need to remember the name the the Network's balance firegate fire gate service right where where we say like",
    "start": "1402020",
    "end": "1407419"
  },
  {
    "text": "here's the thing that we think is a good combination something opinionated and that doesn't use the language well it",
    "start": "1407419",
    "end": "1413780"
  },
  {
    "text": "automatically uses the language of the services underneath because it still says fargate right I would have chosen",
    "start": "1413780",
    "end": "1418880"
  },
  {
    "text": "something different but basically it can give you a higher level construct and cdk has all of these examples at all",
    "start": "1418880",
    "end": "1426860"
  },
  {
    "text": "levels but we didn't have we as an AWS we didn't have to make all of those because this is an open source ecosystem",
    "start": "1426860",
    "end": "1434419"
  },
  {
    "text": "behind it and in one hand that means the cdk development itself is open and",
    "start": "1434419",
    "end": "1440659"
  },
  {
    "text": "shared but it also means there's a lot of community and third-party sites where",
    "start": "1440659",
    "end": "1445760"
  },
  {
    "text": "people make their own constructs for their own things right here's for example cdk patterns right this is from",
    "start": "1445760",
    "end": "1453320"
  },
  {
    "text": "our friends up at Liberty Mutual who Define their own patterns it's all open it's a regular programming language so",
    "start": "1453320",
    "end": "1459200"
  },
  {
    "text": "if you think the network balance Target service whichever money was called if",
    "start": "1459200",
    "end": "1464419"
  },
  {
    "text": "you don't think that's the the service you want or the abstraction you want you just go and make your own so this is",
    "start": "1464419",
    "end": "1470960"
  },
  {
    "text": "what makes this so powerful that you have an open ecosystem where you can do that and you know I think we know very",
    "start": "1470960",
    "end": "1477980"
  },
  {
    "text": "well how to build powerful open source on top of object-oriented languages so the mechanisms are all there for you to",
    "start": "1477980",
    "end": "1484580"
  },
  {
    "text": "create and share back your own patents and the last one is it's object oriented",
    "start": "1484580",
    "end": "1491000"
  },
  {
    "text": "and that doesn't sound so special because these days almost everything is object oriented and we sort of take it",
    "start": "1491000",
    "end": "1496700"
  },
  {
    "text": "for granted but I think it's good to take a step back and remind ourselves what all the cool things that come with",
    "start": "1496700",
    "end": "1503419"
  },
  {
    "text": "having an oo language so the first part is we gain abstraction right we can make",
    "start": "1503419",
    "end": "1510080"
  },
  {
    "text": "abstract constructs we can encapsulate data and functionality in the same place and that is really the foundation for",
    "start": "1510080",
    "end": "1516679"
  },
  {
    "text": "most of domain modeling that we're so fond of right without oh it would be very hard to think that we have domain",
    "start": "1516679",
    "end": "1524240"
  },
  {
    "text": "driven design and and all the boundary contexts right a lot of that language that we use there is fundamentally based",
    "start": "1524240",
    "end": "1531020"
  },
  {
    "text": "on the notion of having object oriented mechanisms at place and then testability also right making mock objects things",
    "start": "1531020",
    "end": "1537980"
  },
  {
    "text": "that look the same from the outside but have a different behavior on the inside most of that is based on object-oriented",
    "start": "1537980",
    "end": "1545179"
  },
  {
    "text": "constraints so let's not forget how much we have gained over the last me I'd say 30 odd years by being able to use",
    "start": "1545179",
    "end": "1552820"
  },
  {
    "text": "object-oriented language as an object-oriented construct so and if we map that to automation we could imagine",
    "start": "1552820",
    "end": "1558559"
  },
  {
    "text": "that we can do some pretty cool stuff and as I certainly I did this in the",
    "start": "1558559",
    "end": "1563720"
  },
  {
    "text": "serverless context and I consider serverless son of the ultimate Cloud native thing if you were going to build something that's purpose built for the",
    "start": "1563720",
    "end": "1571159"
  },
  {
    "text": "cloud where you really take advantage of the cloud as much as you can right serverless is probably the way to do",
    "start": "1571159",
    "end": "1577940"
  },
  {
    "text": "that quick reminder when we say serverless we often mean Lambda but that wouldn't be",
    "start": "1577940",
    "end": "1584539"
  },
  {
    "text": "doing it justice to me serverless is not a compute runtime model but it's",
    "start": "1584539",
    "end": "1590419"
  },
  {
    "text": "actually an ecosystem because if you're building these fine-grained distributed applications you also need to consider",
    "start": "1590419",
    "end": "1597500"
  },
  {
    "text": "how you connect them so you want to look at things like cues or SLS channels you",
    "start": "1597500",
    "end": "1603559"
  },
  {
    "text": "want to look at orchestration with step functions you want to look at event routing with eventbridge and you",
    "start": "1603559",
    "end": "1609260"
  },
  {
    "text": "probably need a different kind of database right if you look carefully at dynamodb you realize that it's actually",
    "start": "1609260",
    "end": "1615980"
  },
  {
    "text": "very nicely built towards serverless application like my favorite things and",
    "start": "1615980",
    "end": "1621200"
  },
  {
    "text": "dynamically is it has Atomic list depend an atomic increment functions so if you",
    "start": "1621200",
    "end": "1626720"
  },
  {
    "text": "think about an event-driven application where you have stuff coming in that you need to aggregate without dealing with",
    "start": "1626720",
    "end": "1632900"
  },
  {
    "text": "transactions and retries and all sorts of other weird stuff having Atomic operations for a parent is actually",
    "start": "1632900",
    "end": "1639080"
  },
  {
    "text": "fantastic so you realize that this thing has a cohesiveness to it that it was",
    "start": "1639080",
    "end": "1644779"
  },
  {
    "text": "created an ecosystem that was created to build a certain style of application and",
    "start": "1644779",
    "end": "1649880"
  },
  {
    "text": "that's a very fine-grained often event-driven or asynchronous kind of application so there's quite a lot in",
    "start": "1649880",
    "end": "1656900"
  },
  {
    "text": "here so when we talk about Solace automation we don't mean just you know provisional Lambda function we really",
    "start": "1656900",
    "end": "1662000"
  },
  {
    "text": "talk about pulling all these pieces together to build a distributed asynchronous application right and as I",
    "start": "1662000",
    "end": "1669559"
  },
  {
    "text": "said like small pieces Loosely joined so wiring them together right remember our four layers right wiring them together",
    "start": "1669559",
    "end": "1676100"
  },
  {
    "text": "is actually one of the most important parts and that's easy enough for me to",
    "start": "1676100",
    "end": "1681440"
  },
  {
    "text": "highlight right if I was going to say in serverless automation Lane what are those four is the most prevalent one I",
    "start": "1681440",
    "end": "1688760"
  },
  {
    "text": "would vote for the composition because quite honestly the provisioning that's done for you like the name server list",
    "start": "1688760",
    "end": "1694880"
  },
  {
    "text": "suggests that infrastructure resource provisioning we don't really need to do anymore more that's we do for you",
    "start": "1694880",
    "end": "1700460"
  },
  {
    "text": "deployment has also become very easy like here's a zip file here's a source right like deployment is no longer such",
    "start": "1700460",
    "end": "1706340"
  },
  {
    "text": "a big deal but then because you make smaller pieces composition becomes very important what's the granularity how big",
    "start": "1706340",
    "end": "1712880"
  },
  {
    "text": "or how small and my lambdas what depends on what what tax talks to what and how does it talk does it toxic synchronously",
    "start": "1712880",
    "end": "1719840"
  },
  {
    "text": "does it talk asynchronously suddenly those become very important right what",
    "start": "1719840",
    "end": "1725480"
  },
  {
    "text": "is my data flow what is my control flow of my application what is my topology you might say that is all defined in",
    "start": "1725480",
    "end": "1732200"
  },
  {
    "text": "your automation so I would make the case here that serverless automation is very much about composition putting the",
    "start": "1732200",
    "end": "1739340"
  },
  {
    "text": "pieces together making the pieces is easy now the emphasis is on how they're",
    "start": "1739340",
    "end": "1744380"
  },
  {
    "text": "being put together so here one of my my statements that a serverless automation",
    "start": "1744380",
    "end": "1749720"
  },
  {
    "text": "is primarily about composition and perhaps configuration as well but it's",
    "start": "1749720",
    "end": "1755240"
  },
  {
    "text": "not about the lower part it's clearly about the upper half of of our automation stack and correspondingly",
    "start": "1755240",
    "end": "1763279"
  },
  {
    "text": "when I mentioned that there's Community efforts to Define serverless patterns almost all of those patterns are",
    "start": "1763279",
    "end": "1770799"
  },
  {
    "text": "compositional kind of patterns right it's like you know and you know API Gateway to London actually we don't need",
    "start": "1770799",
    "end": "1777380"
  },
  {
    "text": "that anymore because lenders now have have URLs right or it's Lambda sqs Lambda almost all of them are things",
    "start": "1777380",
    "end": "1783860"
  },
  {
    "text": "that compose multiple Parts together so that gives us a hint that this idea of",
    "start": "1783860",
    "end": "1790039"
  },
  {
    "text": "composition of combining of wiring things together is actually one of the",
    "start": "1790039",
    "end": "1795860"
  },
  {
    "text": "most useful things to do with serverless Automation in cdk and you know have a",
    "start": "1795860",
    "end": "1802399"
  },
  {
    "text": "look at all these kind of resources you will find that most of them are related to composition",
    "start": "1802399",
    "end": "1808340"
  },
  {
    "text": "so now let's apply this right let's take an example and I gave myself The Cheeky Title Here of composing serverless",
    "start": "1808340",
    "end": "1814640"
  },
  {
    "text": "application with automation abstractions because if our automation is object",
    "start": "1814640",
    "end": "1819740"
  },
  {
    "text": "oriented I can choose abstractions because I like to have fun I use the",
    "start": "1819740",
    "end": "1825020"
  },
  {
    "text": "example from the Enterprise Integration patterns 2003 so soon this thing is going to be",
    "start": "1825020",
    "end": "1831980"
  },
  {
    "text": "20 years old and it turns out that this simple example is still a great test",
    "start": "1831980",
    "end": "1837080"
  },
  {
    "text": "case for building distributed applications and we are evaluating platforms that these distributed",
    "start": "1837080",
    "end": "1842840"
  },
  {
    "text": "applications run them just quickly explained it's sort of basically a mortgage broker kind of scenario much",
    "start": "1842840",
    "end": "1848419"
  },
  {
    "text": "simplified domain where somebody wants to get mortgage quotes So they go talk to a loan broker the loan broker will",
    "start": "1848419",
    "end": "1855080"
  },
  {
    "text": "request some additional information about this person from the credit bureau like the credit score and then they will",
    "start": "1855080",
    "end": "1861860"
  },
  {
    "text": "request quotes from multiple Banks and select the best quote for the customer you know it seems simple enough but it",
    "start": "1861860",
    "end": "1869539"
  },
  {
    "text": "has just enough nuances and complexities to be a good example for building distributed application so I went on",
    "start": "1869539",
    "end": "1877220"
  },
  {
    "text": "built this on AWS serverless and the first thing that I noticed is that we really have made a lot of the past",
    "start": "1877220",
    "end": "1883580"
  },
  {
    "text": "problems gone away you know I no longer need to install software on different machines I don't need to do anything",
    "start": "1883580",
    "end": "1890000"
  },
  {
    "text": "manually this is all running in the cloud right this is all I did not install a single thing on my machine I",
    "start": "1890000",
    "end": "1896779"
  },
  {
    "text": "even used you know Cloud9 and the cloud shell to do all this my goal was I'm not",
    "start": "1896779",
    "end": "1902480"
  },
  {
    "text": "installing anything I'm not going to have a single thing on my local machine and I was able to do that yeah and I",
    "start": "1902480",
    "end": "1909200"
  },
  {
    "text": "think it's good to remind ourselves how much progress we have made there and the",
    "start": "1909200",
    "end": "1915080"
  },
  {
    "text": "key patterns I use now that's coming from Enterprise Integration patterns is so I used orchestration that basically",
    "start": "1915080",
    "end": "1921559"
  },
  {
    "text": "defines the steps right first we go to the credit bureau then we somehow pops up we Fane out to the banks and then we",
    "start": "1921559",
    "end": "1927860"
  },
  {
    "text": "re-egregate the results and give it back to the requester those are two key patterns right this orchestration is",
    "start": "1927860",
    "end": "1934520"
  },
  {
    "text": "more like kind of like a workflow right something stateful and then scatter gather is the notion of sending messages",
    "start": "1934520",
    "end": "1940220"
  },
  {
    "text": "to multiple recipients and bringing the results back together right and this is",
    "start": "1940220",
    "end": "1945620"
  },
  {
    "text": "sort of the high level view that I would have and unsurprisingly this Maps really",
    "start": "1945620",
    "end": "1951200"
  },
  {
    "text": "well to the AWS serverless Services I have and probably other Cloud providers very similar right the step functions on",
    "start": "1951200",
    "end": "1958820"
  },
  {
    "text": "the left of course the functional modules those are lambdas right the serverless functions I have a pub sub",
    "start": "1958820",
    "end": "1964520"
  },
  {
    "text": "Channel That's SNS I have a message filter and I've limited that in eventbridge and then on the return side",
    "start": "1964520",
    "end": "1971059"
  },
  {
    "text": "I have sqs as a message Channel I have an London here's my favorite dynamodb",
    "start": "1971059",
    "end": "1976399"
  },
  {
    "text": "that helps me with the aggregation and yes it is totally using the list attend function and you can see there's a",
    "start": "1976399",
    "end": "1983179"
  },
  {
    "text": "little bit of a callbacks that are asynchronous reports response kind of mechanism that when I have the responses",
    "start": "1983179",
    "end": "1988940"
  },
  {
    "text": "in I can complete my workflow side note I find this way of visualizing",
    "start": "1988940",
    "end": "1996740"
  },
  {
    "text": "um Solutions I was going to say serverless but any Cloud Solutions I find this way much more expressive than",
    "start": "1996740",
    "end": "2002740"
  },
  {
    "text": "just showing the icon so now we're very proud of our icons and we love drawing",
    "start": "2002740",
    "end": "2007779"
  },
  {
    "text": "pictures with the icons but let's say you draw eventbridge somewhere what does this mean right you could be filtering",
    "start": "2007779",
    "end": "2014260"
  },
  {
    "text": "messages you could be transforming messages you could be doing some fan out right there's probably a half a dozen",
    "start": "2014260",
    "end": "2019539"
  },
  {
    "text": "different things that you could be trying to accomplish when you draw an eventbridge icon with the other ones",
    "start": "2019539",
    "end": "2025299"
  },
  {
    "text": "even more so so drawing the patterns reveals much more about the intent that",
    "start": "2025299",
    "end": "2031179"
  },
  {
    "text": "you have and then the product icon to me should just be a decorator I want to filter messages and I happen to do this",
    "start": "2031179",
    "end": "2038980"
  },
  {
    "text": "in eventbridge I also could have written another function for it so I think using the patterns and these ways of",
    "start": "2038980",
    "end": "2044559"
  },
  {
    "text": "visualizing the architectures is much more expressive the product choice of a",
    "start": "2044559",
    "end": "2050020"
  },
  {
    "text": "service choice is something that comes at the very end so make sure you express",
    "start": "2050020",
    "end": "2055118"
  },
  {
    "text": "your intent not just the services that you chose so that advice is coming from",
    "start": "2055119",
    "end": "2061118"
  },
  {
    "text": "a vendor who makes Services stock take it take it too hard so how do we go from there to automate",
    "start": "2061119",
    "end": "2069099"
  },
  {
    "text": "this kind of solution right like that's our experiment so again we have the cdk",
    "start": "2069099",
    "end": "2074440"
  },
  {
    "text": "Canada level constructs like the language that we will use is you know step actions event Bridge SKS SNS Lambda",
    "start": "2074440",
    "end": "2080980"
  },
  {
    "text": "dynamodb okay that's the base language but we can layer another language on top",
    "start": "2080980",
    "end": "2086618"
  },
  {
    "text": "and we've already heard from that language aggregator publish subscribe scatter gather message filter content",
    "start": "2086619",
    "end": "2094419"
  },
  {
    "text": "filter and that is a completely different language that's the language of integration pattern",
    "start": "2094419",
    "end": "2100800"
  },
  {
    "text": "language one second here that's the language that expresses you",
    "start": "2100800",
    "end": "2107380"
  },
  {
    "text": "intent right what are you trying to build and then on top of it you have the language of your business",
    "start": "2107380",
    "end": "2113680"
  },
  {
    "text": "domain you talk about Banks and loan brokers and quotes and I think what good",
    "start": "2113680",
    "end": "2119680"
  },
  {
    "text": "design has taught us is to separate those languages when we talk about Bank",
    "start": "2119680",
    "end": "2124960"
  },
  {
    "text": "we don't talk about Lambda and when we talk about message filter we didn't talk neither about bang know about Lambda",
    "start": "2124960",
    "end": "2131500"
  },
  {
    "text": "it's very good to treat those as three distinct layers in your system and use",
    "start": "2131500",
    "end": "2136660"
  },
  {
    "text": "the respective language and the second thing that we learned is well we like",
    "start": "2136660",
    "end": "2142320"
  },
  {
    "text": "executable languages right it's nice to have a language on the poster on the wall but it's much nicer to make a",
    "start": "2142320",
    "end": "2148540"
  },
  {
    "text": "language that's actually executable well and it turns out we have many tools to allow us to do that so let's apply that",
    "start": "2148540",
    "end": "2158079"
  },
  {
    "text": "let's use the higher level languages that we just defined right not just sort of you know step functions even Bridge",
    "start": "2158079",
    "end": "2164200"
  },
  {
    "text": "here as it is use the language of the patterns and the language of the business domain now let's start simple",
    "start": "2164200",
    "end": "2170440"
  },
  {
    "text": "let's start with the banks the banks are really just two two or three Lambda functions that listen to an SNS channel",
    "start": "2170440",
    "end": "2177880"
  },
  {
    "text": "so I start very simple here's a piece of cdk code and this code is called create",
    "start": "2177880",
    "end": "2184900"
  },
  {
    "text": "a bank so I'm using my top layer vocabulary and talking about my business",
    "start": "2184900",
    "end": "2190000"
  },
  {
    "text": "domain and most things here we can talk about abstraction leakage later right",
    "start": "2190000",
    "end": "2195040"
  },
  {
    "text": "most of the things are from my business domain language a bank has certain",
    "start": "2195040",
    "end": "2201820"
  },
  {
    "text": "um characteristics like in this case what kind of loans you know what's the maximum loan they would give the minimum",
    "start": "2201820",
    "end": "2206980"
  },
  {
    "text": "credit score they were service remember it's a simplified example right but this is all language from a business domain",
    "start": "2206980",
    "end": "2213820"
  },
  {
    "text": "you can almost show this to a business user and say shut the pawn shop you know Serve credit score 400 and up all",
    "start": "2213820",
    "end": "2219820"
  },
  {
    "text": "credits go 450 and up and they would be able to edit the Scout and say now it should be 450 I'm gonna make that change",
    "start": "2219820",
    "end": "2226599"
  },
  {
    "text": "right here there's a little bit of composition as well right because there's the mortgage quotes buzz and",
    "start": "2226599",
    "end": "2232780"
  },
  {
    "text": "that tells where the quotes actually go that's what saying yeah maybe not 100 clean but that wasn't the purpose the",
    "start": "2232780",
    "end": "2240160"
  },
  {
    "text": "purpose was to see sort of how far I can get and we can see coming back to our four layer model that this includes",
    "start": "2240160",
    "end": "2247420"
  },
  {
    "text": "deployment right like which function am I or which source code am I actually using what's the name of this resource",
    "start": "2247420",
    "end": "2253180"
  },
  {
    "text": "it's configuration right what are the parameters of the bank the characteristics and this composition",
    "start": "2253180",
    "end": "2258339"
  },
  {
    "text": "like where do the quotes go right this is topology and implementing this in cdk",
    "start": "2258339",
    "end": "2264220"
  },
  {
    "text": "okay I could be sneaking say it's a one-liner because technically it is I broke this down to make it a little bit",
    "start": "2264220",
    "end": "2269980"
  },
  {
    "text": "easier right you can see how this essentially just become parameters that get passed",
    "start": "2269980",
    "end": "2275619"
  },
  {
    "text": "through here is cdk language Lambda dot function this is the context you pass",
    "start": "2275619",
    "end": "2282579"
  },
  {
    "text": "the name here's the actual code being specified bank is my is is my source for",
    "start": "2282579",
    "end": "2287740"
  },
  {
    "text": "this the Handler and then I pass in the functional parameters through environment variable and you see there's",
    "start": "2287740",
    "end": "2296020"
  },
  {
    "text": "some nice thing here at the bottom with eventbridge destination and that is using Lambda destination so when the",
    "start": "2296020",
    "end": "2302740"
  },
  {
    "text": "Lambda function completes and calculates the quote that the next thing we will do is actually send this message to an",
    "start": "2302740",
    "end": "2310359"
  },
  {
    "text": "event bus that's composition right that's the the green part but it's essentially a one-liner and now I can",
    "start": "2310359",
    "end": "2316000"
  },
  {
    "text": "code if I want two Banks right I make two lines I can make four Loops I can read a file with all the characteristics",
    "start": "2316000",
    "end": "2322420"
  },
  {
    "text": "of all the banks I can make a GUI whatever I want right I have full programmability over what kind of banks",
    "start": "2322420",
    "end": "2329320"
  },
  {
    "text": "I want here and it's just regular code just like any other code and the implementation is literally a one lineup",
    "start": "2329320",
    "end": "2336760"
  },
  {
    "text": "so let's take this a level further because this was still very simple so when we use these Lambda destinations",
    "start": "2336760",
    "end": "2343180"
  },
  {
    "text": "right I said the destinations are a way to trigger a follow-on action when you're under function concludes right",
    "start": "2343180",
    "end": "2350020"
  },
  {
    "text": "very nice thing because you can take this out of your application code the composition is no longer in your",
    "start": "2350020",
    "end": "2356560"
  },
  {
    "text": "application where you say oh now take this data and publish it to this SNS or this sqs ER queue let's say which is",
    "start": "2356560",
    "end": "2364119"
  },
  {
    "text": "passed in as an environment variable that's kind of modeling composition in functionality so you do not need to",
    "start": "2364119",
    "end": "2371200"
  },
  {
    "text": "write any functional code for this composition you say attach a destination to this Lambda and the infrastructure",
    "start": "2371200",
    "end": "2378880"
  },
  {
    "text": "takes care of passing the return data from your function to the next element that's really really nice because you",
    "start": "2378880",
    "end": "2386680"
  },
  {
    "text": "separate the composition from functional logic ask your show there's always a",
    "start": "2386680",
    "end": "2391900"
  },
  {
    "text": "slight catch though and the first catch is when you do that AWS appends or no it",
    "start": "2391900",
    "end": "2397960"
  },
  {
    "text": "doesn't it wraps your data with a giant event envelope like the date where it",
    "start": "2397960",
    "end": "2403480"
  },
  {
    "text": "came from just like it's like like a dozen feels that it wraps around but quite honestly our aggregator doesn't",
    "start": "2403480",
    "end": "2410440"
  },
  {
    "text": "want so we use a Content filter for that and the other thing is not every bank",
    "start": "2410440",
    "end": "2416500"
  },
  {
    "text": "will return a valid response and the aggregator also doesn't want to deal with invalid messages just base",
    "start": "2416500",
    "end": "2422260"
  },
  {
    "text": "resources so we also want to filter invalid messages so we use two patterns",
    "start": "2422260",
    "end": "2428200"
  },
  {
    "text": "here the first pattern is the message filter very easily explain pattern messages come in it applies a predicate",
    "start": "2428200",
    "end": "2434079"
  },
  {
    "text": "messages that comply with the predicate get passed on other messages do not get",
    "start": "2434079",
    "end": "2439960"
  },
  {
    "text": "passed off right so it filters out messages the second one is a Content filter that's different it doesn't",
    "start": "2439960",
    "end": "2445720"
  },
  {
    "text": "eliminate messages so one in one out but it eliminates fields from a message like",
    "start": "2445720",
    "end": "2451540"
  },
  {
    "text": "in our case we want to get rid of this event envelope very common integration",
    "start": "2451540",
    "end": "2456820"
  },
  {
    "text": "patterns in the Enterprise Integration patterns book and our level two vocabulary right this is language out of",
    "start": "2456820",
    "end": "2464859"
  },
  {
    "text": "our middle layer we're not talking Banks we're not talking you know sqs here we're talking header so let's Implement",
    "start": "2464859",
    "end": "2471400"
  },
  {
    "text": "those so we made some helper functions and we have some methods for that and",
    "start": "2471400",
    "end": "2477760"
  },
  {
    "text": "you know the static methods in this case because they're very common operations the first one is we only want to let",
    "start": "2477760",
    "end": "2484240"
  },
  {
    "text": "messages through that have a bank ID so if a bank responds for something empty",
    "start": "2484240",
    "end": "2490540"
  },
  {
    "text": "we use that as an indicator that that wasn't a valid quote and again you could",
    "start": "2490540",
    "end": "2495640"
  },
  {
    "text": "show this probably to a business user and say what's the best field to check for that the bank produced a valid quote",
    "start": "2495640",
    "end": "2502660"
  },
  {
    "text": "is it a bank ID is it the quote field right can be discussed and you can make that edit right here and then the second",
    "start": "2502660",
    "end": "2510099"
  },
  {
    "text": "one is because it's so common that we only want the payload of the event and not the whole envelope again we made a",
    "start": "2510099",
    "end": "2516400"
  },
  {
    "text": "static method for that and just say there's a payload filter right which",
    "start": "2516400",
    "end": "2521440"
  },
  {
    "text": "just like takes an event in gets rid of all the wrapper and passes on only the",
    "start": "2521440",
    "end": "2527140"
  },
  {
    "text": "payload and then we pass those two elements into a construct right it's the",
    "start": "2527140",
    "end": "2532839"
  },
  {
    "text": "non-empty quotes only and the payload only kind of filters right and then we pass this into a construct that's called",
    "start": "2532839",
    "end": "2539680"
  },
  {
    "text": "message content field and that's basically all there is right this way I can filter messages and I can filter",
    "start": "2539680",
    "end": "2545099"
  },
  {
    "text": "content exactly what I had in the picture how is this implemented it's",
    "start": "2545099",
    "end": "2550300"
  },
  {
    "text": "almost a one-liner not quite right what I need underneath is an AWS construct",
    "start": "2550300",
    "end": "2556540"
  },
  {
    "text": "like bottom layer of our vocabulary that actually implements that and in our case that is eventbridge eventbridge has",
    "start": "2556540",
    "end": "2565420"
  },
  {
    "text": "patterns that it evaluates so they're perfect for message filtering if something doesn't match the pattern the",
    "start": "2565420",
    "end": "2571900"
  },
  {
    "text": "message doesn't go through and it also has targets and the targets include Transformations which are very suitable",
    "start": "2571900",
    "end": "2578740"
  },
  {
    "text": "to content filters so you can see at the bottom the static method there isn't",
    "start": "2578740",
    "end": "2583780"
  },
  {
    "text": "much in here the static method as you would have guessed it's just making a message filter with a particular",
    "start": "2583780",
    "end": "2590280"
  },
  {
    "text": "predicate it uses some you know string based syntax here field in your bracket",
    "start": "2590280",
    "end": "2595300"
  },
  {
    "text": "now with that's document oriented language right angle bracket curly braces exist equals true right it",
    "start": "2595300",
    "end": "2601480"
  },
  {
    "text": "encapsulates that so people using this don't need to use they don't need to know that particular Center so that's",
    "start": "2601480",
    "end": "2608380"
  },
  {
    "text": "about that and similarly for the content filter right the implementation again",
    "start": "2608380",
    "end": "2614079"
  },
  {
    "text": "static method there that creates an instance of this payload filter and",
    "start": "2614079",
    "end": "2619780"
  },
  {
    "text": "again it doesn't do much but except have this magic Json path it just knows where",
    "start": "2619780",
    "end": "2625359"
  },
  {
    "text": "the payload is inside an event envelope right it's the root when it's detail",
    "start": "2625359",
    "end": "2630460"
  },
  {
    "text": "then it's response payload so it only gets that part of the event and all the other stuff goes away so very simple and",
    "start": "2630460",
    "end": "2638380"
  },
  {
    "text": "there of type content filter and message filter they're just special instances that are pre-config now what I can do is",
    "start": "2638380",
    "end": "2645819"
  },
  {
    "text": "I can take those two instances and pass answer to my message content filter and",
    "start": "2645819",
    "end": "2651579"
  },
  {
    "text": "the implementation of that message content filter is eventbridge so you will see at the bottom things like yeah",
    "start": "2651579",
    "end": "2659079"
  },
  {
    "text": "add event pattern losses that's eventbridge language that's lower level",
    "start": "2659079",
    "end": "2664240"
  },
  {
    "text": "of our three languages now we're mapping the middle layer of message filter and",
    "start": "2664240",
    "end": "2669520"
  },
  {
    "text": "content filter to AWS constructs right because ultimately we want this to run so we have things like targets you see",
    "start": "2669520",
    "end": "2676420"
  },
  {
    "text": "sqs cues you see rules you see an event pattern that is the language of",
    "start": "2676420",
    "end": "2682839"
  },
  {
    "text": "eventbridge that then implements the patterns but that is all hidden inside the message content filter",
    "start": "2682839",
    "end": "2690460"
  },
  {
    "text": "now if you reflect a little bit on how far have we gotten or not gotten I think fundamentally I like this a lot because",
    "start": "2690460",
    "end": "2697060"
  },
  {
    "text": "you can use a language on top here that's much closer to your domain",
    "start": "2697060",
    "end": "2702099"
  },
  {
    "text": "language but the same time is executable code that will deploy resources in the cloud scalable the whole shebang so I",
    "start": "2702099",
    "end": "2709180"
  },
  {
    "text": "think that is amazing there's a few things where the abstraction isn't 100 and the comments saying is all",
    "start": "2709180",
    "end": "2715300"
  },
  {
    "text": "abstractions are leaky so if we didn't have these simple cases these helper functions the expression language will",
    "start": "2715300",
    "end": "2723040"
  },
  {
    "text": "likely leak through and I would not recommend anybody make their own new expression language so you just use the",
    "start": "2723040",
    "end": "2728500"
  },
  {
    "text": "one that's there but you could say a bit of my lower layer you know leaked",
    "start": "2728500",
    "end": "2733720"
  },
  {
    "text": "through into the middle layer yeah that's yeah I think that's okay and the other thing that leaks through is that",
    "start": "2733720",
    "end": "2740200"
  },
  {
    "text": "event Bridge is a combination of a pattern a small Pub sub and it's a",
    "start": "2740200",
    "end": "2746500"
  },
  {
    "text": "pattern being a filter expression a small Pub sub and a Target and the target cannot to transform so the fact",
    "start": "2746500",
    "end": "2752079"
  },
  {
    "text": "that we have something called a message content filter that happens to be the combo of a message filter an accountant",
    "start": "2752079",
    "end": "2758380"
  },
  {
    "text": "filter is a little bit influenced by the kind of things that we have underneath",
    "start": "2758380",
    "end": "2763420"
  },
  {
    "text": "now people have taken or outtaken these ideas further and you might have heard the notion of the cloud compiler where",
    "start": "2763420",
    "end": "2771160"
  },
  {
    "text": "basically you could Define your logical elements on top in a any order or any",
    "start": "2771160",
    "end": "2776680"
  },
  {
    "text": "wave that you want to cycle content filter queue message filter and then the cloud compiler figures out what is the",
    "start": "2776680",
    "end": "2782859"
  },
  {
    "text": "best mapping to the infrastructure underneath so they could sell a group a content and message field to say Ah",
    "start": "2782859",
    "end": "2788200"
  },
  {
    "text": "that's a perfect combo for event bridge I didn't go that far but there's a lot",
    "start": "2788200",
    "end": "2793599"
  },
  {
    "text": "of interesting work happening here to you know take this a whole level further",
    "start": "2793599",
    "end": "2799359"
  },
  {
    "text": "so what we have learned right coming a long way here that automation we already",
    "start": "2799359",
    "end": "2805060"
  },
  {
    "text": "learned is not about efficiency but we also now learned that automation gives us really powerful abstractions I can",
    "start": "2805060",
    "end": "2812500"
  },
  {
    "text": "express the topology of my application and the intent and the message routing",
    "start": "2812500",
    "end": "2819339"
  },
  {
    "text": "in programmable execute executable code and that is an amazing thing to do with",
    "start": "2819339",
    "end": "2826359"
  },
  {
    "text": "automation I'm now coding the topology of my application and I'm also coding",
    "start": "2826359",
    "end": "2833140"
  },
  {
    "text": "some of the behaviors behind it so what we're really finding here the language",
    "start": "2833140",
    "end": "2838900"
  },
  {
    "text": "we're defining is it's a domain model not for your applications business",
    "start": "2838900",
    "end": "2844060"
  },
  {
    "text": "domain but for your applications topology is a function is a queue here's",
    "start": "2844060",
    "end": "2850300"
  },
  {
    "text": "a message filter here's an aggregator he has a scatter gather he is an orchestrator that is and they're wired",
    "start": "2850300",
    "end": "2855700"
  },
  {
    "text": "together right like the destinations we defined a domain main language for our",
    "start": "2855700",
    "end": "2861700"
  },
  {
    "text": "application topology and I think that is really amazing and I come back to my",
    "start": "2861700",
    "end": "2868540"
  },
  {
    "text": "original statement saying that that is not infrastructure as scope but I don't",
    "start": "2868540",
    "end": "2873579"
  },
  {
    "text": "know yet what the best name is but maybe this is architecture is code is interesting they've just talked about",
    "start": "2873579",
    "end": "2878740"
  },
  {
    "text": "the architecture and code so here's a piece of architecture s code this is not a picture of the wall this is executable",
    "start": "2878740",
    "end": "2885220"
  },
  {
    "text": "code or maybe this should be called topology Esco it's definitely not infrastructure it's something much much",
    "start": "2885220",
    "end": "2892300"
  },
  {
    "text": "more powerful and just as a closing reminder why am I so enamored with being",
    "start": "2892300",
    "end": "2898599"
  },
  {
    "text": "able to program my applications topology the reason for this and this is sort of",
    "start": "2898599",
    "end": "2904060"
  },
  {
    "text": "the mandatory picture I have in every talk is that the way your application is put together defines most of its",
    "start": "2904060",
    "end": "2911380"
  },
  {
    "text": "essential properties the topology is critically important yeah tier two",
    "start": "2911380",
    "end": "2917260"
  },
  {
    "text": "systems consisting of the same compound known as a b c and d all that's different is they're wired together",
    "start": "2917260",
    "end": "2924119"
  },
  {
    "text": "differently now would you guess that they have different essential properties and the answer is of course they do",
    "start": "2924119",
    "end": "2931060"
  },
  {
    "text": "they're almost the exact opposite the left hand side has clean dependency so it has easy replaceability if you want",
    "start": "2931060",
    "end": "2937359"
  },
  {
    "text": "to take C out or replace it with something else easy to do but it probably has higher latency and perhaps",
    "start": "2937359",
    "end": "2942700"
  },
  {
    "text": "also single points of failure the one on the right hand side is the exact opposite it will have short length Season it will have high residence",
    "start": "2942700",
    "end": "2948460"
  },
  {
    "text": "zillions but it has more interdependency so it'll be harder to replace a component they're the exact opposite of",
    "start": "2948460",
    "end": "2954579"
  },
  {
    "text": "each other and the only difference is in how they're wired together only with a lot of air quotes So the topology is",
    "start": "2954579",
    "end": "2961300"
  },
  {
    "text": "critically important and being able to program your topology in a domain language to me is that very big deal so",
    "start": "2961300",
    "end": "2969700"
  },
  {
    "text": "to wrap this up on it oh this is the last Talk of the event the hits must be full what have we made here is this a",
    "start": "2969700",
    "end": "2977560"
  },
  {
    "text": "deployment a configuration or programming exercise and I would say the boundaries have really blurred and that",
    "start": "2977560",
    "end": "2985540"
  },
  {
    "text": "is a good thing my favorite example is you could write Lambda code that sends a",
    "start": "2985540",
    "end": "2991780"
  },
  {
    "text": "message to sqs if you could do this inside the Lambda code or you could",
    "start": "2991780",
    "end": "2996880"
  },
  {
    "text": "write cdk code that attaches a destination to Yolanda and sends the",
    "start": "2996880",
    "end": "3003240"
  },
  {
    "text": "message for you so you accomplished exactly the same thing once in application code and once in automation",
    "start": "3003240",
    "end": "3010680"
  },
  {
    "text": "code and that tells us that the two things aren't actually all that different and I think in especially in",
    "start": "3010680",
    "end": "3016680"
  },
  {
    "text": "serverless land that is really really powerful I can achieve the same things with code here or code there so I should",
    "start": "3016680",
    "end": "3024180"
  },
  {
    "text": "probably also use the same kind of languages to accomplish those two now",
    "start": "3024180",
    "end": "3030119"
  },
  {
    "text": "when we program something we want expressive languages right like domain",
    "start": "3030119",
    "end": "3035160"
  },
  {
    "text": "driven designer domain specific languages have propelled us so far so we should use the same thing here so we're",
    "start": "3035160",
    "end": "3042420"
  },
  {
    "text": "defining a language for Loosely coupled distributed Solutions and that language is executable Enterprise indication",
    "start": "3042420",
    "end": "3049740"
  },
  {
    "text": "patterns were largely pictures these things are no longer pictures they're actual methods and classes and they are",
    "start": "3049740",
    "end": "3056460"
  },
  {
    "text": "Deployable and you get a running solution right and cdk allowed us to make that translation from our domain",
    "start": "3056460",
    "end": "3063119"
  },
  {
    "text": "language for the topology to executable Constructor when I run the cdk I have the lambdas and the banks and the queues",
    "start": "3063119",
    "end": "3069900"
  },
  {
    "text": "and the aggregator running and I can call the endpoint and this thing is fully functioning no manual steps",
    "start": "3069900",
    "end": "3076099"
  },
  {
    "text": "whatsoever so the cool thing is that we really now coding the serverless Solutions in a domain language made for",
    "start": "3076099",
    "end": "3083339"
  },
  {
    "text": "this purpose and my goal would be to further enrich and enhance that language and build more of these patterns so what",
    "start": "3083339",
    "end": "3092280"
  },
  {
    "text": "we learn here coming back to automation you know automation as efficiency is sort of seen as an afterthought you're",
    "start": "3092280",
    "end": "3098640"
  },
  {
    "text": "doing all this stuff manually it's toil I should kind of automate that that's sort of",
    "start": "3098640",
    "end": "3103819"
  },
  {
    "text": "2007 kind of automation I would say modern automation Cloud automation is not an afterthought it impacts the",
    "start": "3103819",
    "end": "3110880"
  },
  {
    "text": "architecture choices the more automation I have the finer grade I can be the more resilient and I can come and as I said",
    "start": "3110880",
    "end": "3117059"
  },
  {
    "text": "it belongs and blurs the lines I could send the message from application code and I can also send it from platform",
    "start": "3117059",
    "end": "3123599"
  },
  {
    "text": "automation code so this is now an integral part of your application delivery not a convenience or efficiency",
    "start": "3123599",
    "end": "3131819"
  },
  {
    "text": "kind of thing that's why I think we should enhance the name so by closing",
    "start": "3131819",
    "end": "3137940"
  },
  {
    "text": "picture here I had a lot of fun with my engine room visit and I hope you guys found this interesting as well that if",
    "start": "3137940",
    "end": "3145859"
  },
  {
    "text": "you put together serverless fine-grained fully automated you don't need to deal with infrastructure kind of kind of",
    "start": "3145859",
    "end": "3152280"
  },
  {
    "text": "things right if you take that together with the patterns that let you express the intent of these distributed",
    "start": "3152280",
    "end": "3157619"
  },
  {
    "text": "applications and you have an an object oriented language to make that executable and actually deploy that into",
    "start": "3157619",
    "end": "3163559"
  },
  {
    "text": "the cloud now that's what I would call Modern application development the way",
    "start": "3163559",
    "end": "3168720"
  },
  {
    "text": "it was meant to be and with that the code is all available there's the QR",
    "start": "3168720",
    "end": "3174960"
  },
  {
    "text": "code here it's on serverless land and my buddy Lewis actually developed most of",
    "start": "3174960",
    "end": "3180660"
  },
  {
    "text": "this as I said there are a lot more resources from my end I just blogged about serverless portability how you",
    "start": "3180660",
    "end": "3187619"
  },
  {
    "text": "make things easier to Port from one platform to another that is on all on my architect elevator.com blogs I also",
    "start": "3187619",
    "end": "3195059"
  },
  {
    "text": "invite you to have a peek there and with that we have a few minutes left for a question so I hope you found this",
    "start": "3195059",
    "end": "3201780"
  },
  {
    "text": "interesting and I really look forward to your comments and questions thank you so much",
    "start": "3201780",
    "end": "3208099"
  },
  {
    "text": "thank you I'm pretty excited because I've been waiting all day for someone online to",
    "start": "3211339",
    "end": "3217200"
  },
  {
    "text": "submit a question I actually got one so I'm going to start with that uh so this one's this one's from uh Kevin Elliott",
    "start": "3217200",
    "end": "3222900"
  },
  {
    "text": "uh and he said naming things has come up a few times at this conference I know we",
    "start": "3222900",
    "end": "3228599"
  },
  {
    "text": "unfortunately can't go back in time but if we could and we renamed infrastructure as code to something more",
    "start": "3228599",
    "end": "3234240"
  },
  {
    "text": "accurate like infrastructure as config do you think that would help make naming",
    "start": "3234240",
    "end": "3239339"
  },
  {
    "text": "things easier slash clearer now quote as actual code and code seems like a",
    "start": "3239339",
    "end": "3245220"
  },
  {
    "text": "workaround because as code was already used but it introduces A New Concept of",
    "start": "3245220",
    "end": "3250500"
  },
  {
    "text": "actual code versus code yeah and in the end I I feel like you",
    "start": "3250500",
    "end": "3256440"
  },
  {
    "text": "got to face the realities the term has become so sticky so I actually ran a Twitter poll which I said like what do",
    "start": "3256440",
    "end": "3263760"
  },
  {
    "text": "you consider serverless automation is it infrastructure is code is it application composition or is it sort of both it's",
    "start": "3263760",
    "end": "3270300"
  },
  {
    "text": "just automation 60 actually voted for infrastructure as code I'm like how can this be because serverless the whole",
    "start": "3270300",
    "end": "3276300"
  },
  {
    "text": "point is not to deal with infrastructure so I think the terms are just sticky and sort of trying to rename them is",
    "start": "3276300",
    "end": "3283079"
  },
  {
    "text": "probably not yeah not a easy maneuver so what we tend to do we Define new terms",
    "start": "3283079",
    "end": "3289380"
  },
  {
    "text": "which is also not great but it's easier than trying to redefine what the old one is so I would really like folks to",
    "start": "3289380",
    "end": "3296099"
  },
  {
    "text": "rather talk about you know topology is called or just call it Cloud automation I think you know naming it something",
    "start": "3296099",
    "end": "3303180"
  },
  {
    "text": "that is not infrastructure might help get us in the new mindset but I feel",
    "start": "3303180",
    "end": "3308220"
  },
  {
    "text": "that trying to sort of repurpose the old one is going to be tricky they're pretty sticky terms and yeah Keith would have",
    "start": "3308220",
    "end": "3314400"
  },
  {
    "text": "to rename his book if we were going to redefine it also",
    "start": "3314400",
    "end": "3318859"
  },
  {
    "text": "um cdk is code generation so um when I think again one one slide there we had a",
    "start": "3320400",
    "end": "3326220"
  },
  {
    "text": "VPC you said it was one line and that turns into 127 lines of probably potentially incomprehensible cloud",
    "start": "3326220",
    "end": "3333300"
  },
  {
    "text": "formation that sounds like a lot um that there's probably a group of people around here have been around here",
    "start": "3333300",
    "end": "3338700"
  },
  {
    "text": "a long time and know they have been bitten at some point by code generation like what's different now what's uh how",
    "start": "3338700",
    "end": "3345660"
  },
  {
    "text": "do we know that we're not repeating past mistakes yeah and that's a really good question right so there you see our cloud",
    "start": "3345660",
    "end": "3351420"
  },
  {
    "text": "formation underneath I think it was actually 270 lines so how do you deal with what we have known with code",
    "start": "3351420",
    "end": "3356460"
  },
  {
    "text": "generation is how good is the abstraction like how many times do you have to go down to the next lower level",
    "start": "3356460",
    "end": "3364140"
  },
  {
    "text": "and I think we have learned sometimes painfully where the answer lies so to me",
    "start": "3364140",
    "end": "3371400"
  },
  {
    "text": "I like to use two different metaphors one is code generation the other one is a compiler",
    "start": "3371400",
    "end": "3376559"
  },
  {
    "text": "right a compiler in some way is also whole generation it generates a lower",
    "start": "3376559",
    "end": "3381839"
  },
  {
    "text": "level code but we really have to go and look at that generated code and the",
    "start": "3381839",
    "end": "3387599"
  },
  {
    "text": "question is why is that right I don't say take your even take a Java developer",
    "start": "3387599",
    "end": "3393180"
  },
  {
    "text": "right probably a low percentage number of Java developers actually look at the byte code right or 95 don't and the",
    "start": "3393180",
    "end": "3399660"
  },
  {
    "text": "Machine code underneath the virtual machine probably like hardly anyone ever ever looks so it is it is doable it does",
    "start": "3399660",
    "end": "3406020"
  },
  {
    "text": "does work what do I think is important to make it work the one thing is I think",
    "start": "3406020",
    "end": "3412079"
  },
  {
    "text": "you need really solid abstractions you need a well-rounded model that allows",
    "start": "3412079",
    "end": "3419520"
  },
  {
    "text": "you to set expectations so if you do something in this higher level model you",
    "start": "3419520",
    "end": "3424559"
  },
  {
    "text": "need to have a good expectation of what would happen and it what you expect should actually happen and that's not",
    "start": "3424559",
    "end": "3432180"
  },
  {
    "text": "easy to do like in often we find those when we have a really strong underlying",
    "start": "3432180",
    "end": "3437579"
  },
  {
    "text": "model like object oriented or take SQL right with relational algebra so we need a solid foundation you don't just like",
    "start": "3437579",
    "end": "3444540"
  },
  {
    "text": "code up some convenience classes right that is definitely not going to do the trick so you need a a very solid",
    "start": "3444540",
    "end": "3450480"
  },
  {
    "text": "abstraction and a solid underlying model for that abstraction that's number one and number two what if something goes",
    "start": "3450480",
    "end": "3457619"
  },
  {
    "text": "wrong right so let's take Java again right you have a runtime exception what happens it doesn't tell you where in the",
    "start": "3457619",
    "end": "3464640"
  },
  {
    "text": "byte code the problem is but it gives you a stack trades okay we don't like stack traces that much but at least it",
    "start": "3464640",
    "end": "3470040"
  },
  {
    "text": "translates the problem back into the source domain it says like hey the the problem was at line XYZ of of your class",
    "start": "3470040",
    "end": "3477240"
  },
  {
    "text": "ABC and that way you're back in your original domain and I think those are",
    "start": "3477240",
    "end": "3483119"
  },
  {
    "text": "the two really important capabilities to allow you to stay at the higher level",
    "start": "3483119",
    "end": "3488579"
  },
  {
    "text": "abstraction which we often have seen in code generation hasn't had happened with a sort of a little bit of instruction",
    "start": "3488579",
    "end": "3494640"
  },
  {
    "text": "here and as soon as something goes wrong we had to pop down I have a sort of",
    "start": "3494640",
    "end": "3500040"
  },
  {
    "text": "slogan for this right and it says we need abstractions not Illusions like code generation I think often have been",
    "start": "3500040",
    "end": "3506880"
  },
  {
    "text": "Illusions they pretend that we have this higher level thing but it doesn't quite work and boom you're back down in lower",
    "start": "3506880",
    "end": "3513420"
  },
  {
    "text": "layer and that's when you have all the pain points that you have with with code generation so I think that's we've learned and now you know what we need to",
    "start": "3513420",
    "end": "3520140"
  },
  {
    "text": "do is apply this to this kind of models to make sure that the cloud formation is",
    "start": "3520140",
    "end": "3528480"
  },
  {
    "text": "really just like machine code or bike or something that we would really really ever look at and not something that is",
    "start": "3528480",
    "end": "3535440"
  },
  {
    "text": "like code generation all right well I just wanted to say",
    "start": "3535440",
    "end": "3540599"
  },
  {
    "text": "thank you very much it was an excellent presentation and as usual very well articulated Gregor um please join me in",
    "start": "3540599",
    "end": "3546420"
  },
  {
    "text": "giving Gregor an awesome Round of Applause [Applause]",
    "start": "3546420",
    "end": "3554159"
  }
]