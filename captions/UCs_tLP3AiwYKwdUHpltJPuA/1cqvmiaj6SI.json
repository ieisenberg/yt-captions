[
  {
    "text": "[Music] thank you",
    "start": "3940",
    "end": "9300"
  },
  {
    "text": "okay thank uh I think you can all hear me thank you so much Dave and Dave I",
    "start": "9300",
    "end": "15240"
  },
  {
    "text": "forgot to mention that Dave and I go back a long way actually back I think it is the 1993.",
    "start": "15240",
    "end": "21920"
  },
  {
    "text": "uh if I remember rightly when Dave was running a company in Sydney and a friend of mine called Peter Bailey and uh uh",
    "start": "21920",
    "end": "30060"
  },
  {
    "text": "was working for Dave on developer Tools in fact the first person I'd ever met who directly worked on developer tools",
    "start": "30060",
    "end": "36500"
  },
  {
    "text": "and I think the year before I had just gone and bought myself a copy of ball and C plus plus and other tools like",
    "start": "36500",
    "end": "44100"
  },
  {
    "text": "that that were popular back then and uh Peter Peter was working on Small Talk tooling with Dave uh attic I think a",
    "start": "44100",
    "end": "51960"
  },
  {
    "text": "company ultimately bought by IBM if I remember right and anyway uh here we are again quite a long time later uh and I",
    "start": "51960",
    "end": "58559"
  },
  {
    "text": "get to work on developer tools and it's been a lot of fun to do that over the years it was an unexpected turn in my",
    "start": "58559",
    "end": "64559"
  },
  {
    "text": "career after after Cambridge and um and it's really really great to be here now",
    "start": "64559",
    "end": "73080"
  },
  {
    "text": "I'm sharing my screen and do you need this minimized over on the right I guess I will minimize this",
    "start": "73080",
    "end": "79020"
  },
  {
    "text": "everything's fine okay Grand thank you very much uh I will be checking the slack during",
    "start": "79020",
    "end": "87659"
  },
  {
    "text": "the talk if you uh uh if I can bring it up let me just bring up Slackers if you",
    "start": "87659",
    "end": "94619"
  },
  {
    "text": "want look I'll dream that up so if you I know",
    "start": "94619",
    "end": "100259"
  },
  {
    "text": "there's a bit of a delay in the presentation if you have questions uh pop them into the the Q a with dunsyme",
    "start": "100259",
    "end": "107820"
  },
  {
    "text": "on the slack uh let me just come over to here thank you and I have done sign",
    "start": "107820",
    "end": "116780"
  },
  {
    "text": "and you can pop in questions over there Jonah says wait you're Australian and",
    "start": "116780",
    "end": "122460"
  },
  {
    "text": "yes jono I am Australian I am originally from Toowoomba uh is where I was born uh",
    "start": "122460",
    "end": "130500"
  },
  {
    "text": "and I grew up there and then uh went to school there my father was in wheat",
    "start": "130500",
    "end": "137220"
  },
  {
    "text": "research uh creating new varieties of wheat for the Australian Wheat Growers",
    "start": "137220",
    "end": "142319"
  },
  {
    "text": "and uh then I went off to University in Canberra at the Israel National University and uh and there met uh",
    "start": "142319",
    "end": "152280"
  },
  {
    "text": "Malcolm newey uh Professor Malcolm Newry who was working on a version of the ml",
    "start": "152280",
    "end": "158700"
  },
  {
    "text": "programming language among other things and had been one of the early and uh early contributors to",
    "start": "158700",
    "end": "166980"
  },
  {
    "text": "the uh design of the ml programming language and his work on a thing called Anum ml",
    "start": "166980",
    "end": "172980"
  },
  {
    "text": "and so I first got involved in functional programming through that and through working in theorem improvers and",
    "start": "172980",
    "end": "179580"
  },
  {
    "text": "then I made my way to Cambridge and uh and joined Microsoft research after that",
    "start": "179580",
    "end": "186360"
  },
  {
    "text": "so uh let's crack on with the talk I know we haven't got so much time but I will be checking the questions as we go",
    "start": "186360",
    "end": "192780"
  },
  {
    "text": "happy to answer any questions you have at all this is a somewhat informal talk uh and I hope you enjoy it so this this",
    "start": "192780",
    "end": "200580"
  },
  {
    "text": "talk is originally sort of what's new in F sharp 5.0 but as I was putting together the slides of you know what is",
    "start": "200580",
    "end": "205739"
  },
  {
    "text": "new in a shot 5.0 we um I realized you know in order to",
    "start": "205739",
    "end": "211140"
  },
  {
    "text": "understand what's new in F sharp 5.0 you have to really understand the perspective some of the perspectives on",
    "start": "211140",
    "end": "217080"
  },
  {
    "text": "language design from where I'm coming from in in how I think about programming",
    "start": "217080",
    "end": "222720"
  },
  {
    "text": "why I care so much about delivering a particular kinds of functional",
    "start": "222720",
    "end": "228420"
  },
  {
    "text": "programming experiences to uh so that they can be widely used and adopted and",
    "start": "228420",
    "end": "236879"
  },
  {
    "text": "sort of why some things are in the F sharp language and why some things aren't in the F shelf language and I'm",
    "start": "236879",
    "end": "242400"
  },
  {
    "text": "happy to answer questions about this too uh there are uh I know I'm speaking to a",
    "start": "242400",
    "end": "248099"
  },
  {
    "text": "very functionally literate crowd here and you probably have a lot of questions about uh why certain things were",
    "start": "248099",
    "end": "254939"
  },
  {
    "text": "included and why they weren't some are happy to answer those questions and have those discussions and I just want to try",
    "start": "254939",
    "end": "261959"
  },
  {
    "text": "and set a bit of a foundation for that so one way to do that is to talk about code I love and code I I I don't like",
    "start": "261959",
    "end": "268860"
  },
  {
    "text": "quite so much and also and then how that relates to language features also what we're doing today in F sharp obviously",
    "start": "268860",
    "end": "274919"
  },
  {
    "text": "this also has guided the design of their shop all the way through one of the things I'm really happy with with F",
    "start": "274919",
    "end": "280560"
  },
  {
    "text": "sharp is that the the core of what F sharp is about okay",
    "start": "280560",
    "end": "286199"
  },
  {
    "text": "which is to bring the benefits of functional programming into the.net ecosystem or uh and to bring the",
    "start": "286199",
    "end": "293699"
  },
  {
    "text": "benefits of an ecosystem to functional programming the core of what that is has",
    "start": "293699",
    "end": "299639"
  },
  {
    "text": "been about has held very steady and in fact how that manifests itself in actual",
    "start": "299639",
    "end": "305220"
  },
  {
    "text": "code has also held very steady through the lifetime of F sharp the core of F",
    "start": "305220",
    "end": "310800"
  },
  {
    "text": "sharp has not is based uh I mean it's it's what this This brilliant beautiful",
    "start": "310800",
    "end": "316860"
  },
  {
    "text": "idea that that sort of that that holds true throughout this incredibly changing",
    "start": "316860",
    "end": "322740"
  },
  {
    "text": "time in programming languages history and uh I I actually cover a lot of this",
    "start": "322740",
    "end": "329220"
  },
  {
    "text": "in a paper I've written recently uh I wrote I wrote it about a couple of years ago and then finalized it for the Hopple",
    "start": "329220",
    "end": "336000"
  },
  {
    "text": "conference history of programming languages conference and I'd encourage anyone interested in the language design",
    "start": "336000",
    "end": "342780"
  },
  {
    "text": "or anyone actually interested in how Computing has changed and how that looks like from the perspective of a person",
    "start": "342780",
    "end": "350160"
  },
  {
    "text": "working at the uh at the pro level of programming languages and run run times",
    "start": "350160",
    "end": "355520"
  },
  {
    "text": "uh go and have a read of this paper it's quite long but it's quite",
    "start": "355520",
    "end": "360900"
  },
  {
    "text": "um I think it's quite an enjoyable read I've tried to capture I'm a bit of a fan of these styles of History telling that",
    "start": "360900",
    "end": "368820"
  },
  {
    "text": "capture some of the texture of a time and a place and the people that are",
    "start": "368820",
    "end": "374699"
  },
  {
    "text": "involved and they're sort of coincidences that are involved or the serendipities or the tensions as well",
    "start": "374699",
    "end": "383240"
  },
  {
    "text": "and so uh please do go and take a read of this paper it is really quite quite",
    "start": "383240",
    "end": "388919"
  },
  {
    "text": "enjoyable and part of the structuring of the paper is about this this what holds",
    "start": "388919",
    "end": "395160"
  },
  {
    "text": "what holds true uh what holds firm in the uh in the in the history of the the",
    "start": "395160",
    "end": "401880"
  },
  {
    "text": "the functional programming and this my starting point is about 1972 when the",
    "start": "401880",
    "end": "408060"
  },
  {
    "text": "very first versions of the ml found where Henley Milner type inferences invented uh uh it finds a actual",
    "start": "408060",
    "end": "415620"
  },
  {
    "text": "realization in the early versions of the ml programming language but but not only what was that from a programming",
    "start": "415620",
    "end": "422100"
  },
  {
    "text": "language perspective but why were those people making that language what was it for what was in their minds when they",
    "start": "422100",
    "end": "429780"
  },
  {
    "text": "when they made that thing uh and then how it it kind of progressed and",
    "start": "429780",
    "end": "436259"
  },
  {
    "text": "diverged and we got things like standard ML and oh camel and also we got things like hope and we've got things like Haskell and and the uh and Scott yeah so",
    "start": "436259",
    "end": "445979"
  },
  {
    "text": "that and then that covers this sort of first part of the history and then and then I talk about this sort of big and",
    "start": "445979",
    "end": "452099"
  },
  {
    "text": "important phenomenon which is about the same time it actually relates to what I was talking about where about about meeting Dave uh which is the object what",
    "start": "452099",
    "end": "459840"
  },
  {
    "text": "I call the object-oriented tidal wave and that is this sort of huge thing that sweeps the industry starting a small",
    "start": "459840",
    "end": "466440"
  },
  {
    "text": "talk but most importantly then with uh C plus plus and then even more importantly Java uh which uh everything suddenly had",
    "start": "466440",
    "end": "475020"
  },
  {
    "text": "to be an object literally people would say well if your language everything's not an object then don't bother about",
    "start": "475020",
    "end": "480300"
  },
  {
    "text": "the language it's like implementation inheritance became incredibly important sort of almost like a shibboleth or a",
    "start": "480300",
    "end": "488280"
  },
  {
    "text": "a measure you know if it didn't support certain technical features then you're",
    "start": "488280",
    "end": "494099"
  },
  {
    "text": "then you were sort of out of certain conversations and I talk about this tidal wave but I'm interested in not",
    "start": "494099",
    "end": "500160"
  },
  {
    "text": "just sort of the technicalities of that but what happened to the people who were involved on various sides of that I talk",
    "start": "500160",
    "end": "507360"
  },
  {
    "text": "about how that tidal wave affected Microsoft this massive company that had",
    "start": "507360",
    "end": "513180"
  },
  {
    "text": "such a dominant and even monopolistic position in Computing at this stage and",
    "start": "513180",
    "end": "519380"
  },
  {
    "text": "uh and then we know some of that history about the interactions with Java and",
    "start": "519380",
    "end": "525180"
  },
  {
    "text": "it's through the creation of.net and then the various colleagues and court cases and things that happen and and uh",
    "start": "525180",
    "end": "532680"
  },
  {
    "text": "but it's also so that is one part of this object or object tidal wave but then I also look at what happened with",
    "start": "532680",
    "end": "539580"
  },
  {
    "text": "the functional programming community and the various kinds of reactions they have",
    "start": "539580",
    "end": "544760"
  },
  {
    "text": "to uh to the object oriented tidal wave",
    "start": "544760",
    "end": "549899"
  },
  {
    "text": "and there's a whole range of different reactions some people go and work on object calculate to kind of try to",
    "start": "549899",
    "end": "556019"
  },
  {
    "text": "characterize this sort of formal foundations of what people are trying to get out with object oriented programming",
    "start": "556019",
    "end": "562320"
  },
  {
    "text": "some people just uh go some people go and work on moving object oriented features into functional languages you",
    "start": "562320",
    "end": "570120"
  },
  {
    "text": "see how camel developed for example some people work on taking functional features and putting them into",
    "start": "570120",
    "end": "575820"
  },
  {
    "text": "object-orative languages and as some people work on taking functional languages pure in a pure",
    "start": "575820",
    "end": "583920"
  },
  {
    "text": "sense and making them run on object uh on the on on on things like the the jvm",
    "start": "583920",
    "end": "590700"
  },
  {
    "text": "and so we see things like mlj be developed uh and these early experiments",
    "start": "590700",
    "end": "596519"
  },
  {
    "text": "in using those runtimes as multi-language runtimes and anyway I Do cover more of the",
    "start": "596519",
    "end": "603779"
  },
  {
    "text": "history from that perspective and a lot of what uh you still see running through",
    "start": "603779",
    "end": "608880"
  },
  {
    "text": "the industry today is these actions and reactions and people looking for",
    "start": "608880",
    "end": "615980"
  },
  {
    "text": "synergies people looking for uh um sort of uh die you might say",
    "start": "615980",
    "end": "624540"
  },
  {
    "text": "dialectic to take two things that are opposing and seem intention and to try to find a positive kind of progression",
    "start": "624540",
    "end": "630660"
  },
  {
    "text": "from that and F sharp is very much in that tradition and the core thing with F",
    "start": "630660",
    "end": "635880"
  },
  {
    "text": "sharp was always about his this wonderful thing which is the core of functional programming and we see this",
    "start": "635880",
    "end": "642120"
  },
  {
    "text": "call we know how productive it is uh and we we had experienced it in the context",
    "start": "642120",
    "end": "647820"
  },
  {
    "text": "of these theorem proving systems and we wanted to make that real in Industry",
    "start": "647820",
    "end": "653700"
  },
  {
    "text": "many many people wanted to make it real in industry and lots of different attempts at doing this and uh",
    "start": "653700",
    "end": "661560"
  },
  {
    "text": "um they there's this this is it's a it's a passionate desire",
    "start": "661560",
    "end": "666899"
  },
  {
    "text": "it's not just kind of a religious fervor but it's an actual knowledge of the importance of functional programming",
    "start": "666899",
    "end": "673380"
  },
  {
    "text": "techniques and how underappreciated they are how they have to in some sense learn",
    "start": "673380",
    "end": "679079"
  },
  {
    "text": "to coexist with object-oriented programming and we have to find a way to make these things work together and this",
    "start": "679079",
    "end": "685140"
  },
  {
    "text": "is what causes us to work on generics in.net it's what causes Scala to come",
    "start": "685140",
    "end": "690360"
  },
  {
    "text": "into existence is uh it's what causes me to start F sharp it's what causes",
    "start": "690360",
    "end": "696480"
  },
  {
    "text": "closure to come into existence uh and it's the same shared knowledge of the",
    "start": "696480",
    "end": "703320"
  },
  {
    "text": "power of functional programming as we've experienced it personally in those years in various ways and this certainty that",
    "start": "703320",
    "end": "710880"
  },
  {
    "text": "we have to make it work in practice okay so where does that leave us today you know we we have uh we we have this",
    "start": "710880",
    "end": "719279"
  },
  {
    "text": "history we have this you know things that we've all been involved in this great effort to uh to make functional",
    "start": "719279",
    "end": "725040"
  },
  {
    "text": "programming real and we have succeeded we have not only succeeded with F sharp",
    "start": "725040",
    "end": "731040"
  },
  {
    "text": "but we have succeeded with all the functional programming languages represented at Lambda Jam but we have",
    "start": "731040",
    "end": "736200"
  },
  {
    "text": "also frankly we have succeeded in owning the industry with uh c-sharp today",
    "start": "736200",
    "end": "742100"
  },
  {
    "text": "everything they're adding to C sharp is pretty much everything is basically",
    "start": "742100",
    "end": "747120"
  },
  {
    "text": "functional programming the uh the when you look at the same can be said of java",
    "start": "747120",
    "end": "753600"
  },
  {
    "text": "uh the um uh you look at uh when they add async",
    "start": "753600",
    "end": "759180"
  },
  {
    "text": "programming into python they and async is related to functional programming it may you may not realize if it extends",
    "start": "759180",
    "end": "765899"
  },
  {
    "text": "from F-sharp originally yes I async await uh kind of feature which is now",
    "start": "765899",
    "end": "771300"
  },
  {
    "text": "you see in C plus you know you see it in Python now you see it in C sharp and use in probably in Java as well and becoming",
    "start": "771300",
    "end": "777779"
  },
  {
    "text": "in Scala no doubt and so on uh so we see",
    "start": "777779",
    "end": "783000"
  },
  {
    "text": "this huge influence of functional on the practice of programming whether through the functional languages or not and of",
    "start": "783000",
    "end": "788820"
  },
  {
    "text": "course one of the actual manifestations of that is that F sharp is a uh you know",
    "start": "788820",
    "end": "795000"
  },
  {
    "text": "wonderfully solid functional programming tool that you can trust and pick up and",
    "start": "795000",
    "end": "800820"
  },
  {
    "text": "use in practice in in Enterprise contexts that used to be the most conservative rigid uh context to be",
    "start": "800820",
    "end": "810000"
  },
  {
    "text": "found on the planet in my my way of looking at the world the the world breaks down into 50 50 of of the",
    "start": "810000",
    "end": "817740"
  },
  {
    "text": "industry are incredibly willing to adopt new techniques and then 50 of the industry are very very conservative",
    "start": "817740",
    "end": "823320"
  },
  {
    "text": "about what they use and adopt and one of the great things about F sharp is because it comes from Microsoft and it's",
    "start": "823320",
    "end": "828839"
  },
  {
    "text": "uh and uh it it originates from Microsoft it's all open it's awesome",
    "start": "828839",
    "end": "834480"
  },
  {
    "text": "cross-platform in a very normal language in many in in its kind of technical existence in many many ways but it is",
    "start": "834480",
    "end": "841860"
  },
  {
    "text": "immensely Enterprise trustworthy and uh so it can address a",
    "start": "841860",
    "end": "847380"
  },
  {
    "text": "part of the industry that some other uh tooling sometimes can struggle to kind of uh do reach and address that's it F",
    "start": "847380",
    "end": "855300"
  },
  {
    "text": "sharp is not just a net language this is how we position it f sharps are open source across platform language and uh",
    "start": "855300",
    "end": "861839"
  },
  {
    "text": "it is also a JavaScript language and this site is more Community oriented and there is a excellent JavaScript compiler",
    "start": "861839",
    "end": "868200"
  },
  {
    "text": "for F sharp called Fable and I just want to say this is important because sometimes these things are not at parity",
    "start": "868200",
    "end": "876540"
  },
  {
    "text": "in a sense there's some it's a toy JavaScript compiler for a language but Fable is actually a really wonderful",
    "start": "876540",
    "end": "882839"
  },
  {
    "text": "tool chain and you can really approach F sharp as a JavaScript developer and effectively use F-sharp as a sub as a",
    "start": "882839",
    "end": "889260"
  },
  {
    "text": "substitute for for typescript uh or for JavaScript but they're all for typescript so you can",
    "start": "889260",
    "end": "895139"
  },
  {
    "text": "use it in that way if you want I just want to mention that from the start that you don't have to think of F sharp as a",
    "start": "895139",
    "end": "901019"
  },
  {
    "text": "net language I just want to show how you get started with it you know the.net tool chain is available absolutely",
    "start": "901019",
    "end": "907980"
  },
  {
    "text": "everywhere I put a few logos on the right but it's available many many other places uh it's a standard open source",
    "start": "907980",
    "end": "913980"
  },
  {
    "text": "cross-platform tool chain that you can get on Linux it's all fully open source there's still this idea that somehow",
    "start": "913980",
    "end": "920040"
  },
  {
    "text": "that F sharp is for Windows still lurks around with people but it's absolutely not the case the majority of F-sharp",
    "start": "920040",
    "end": "926040"
  },
  {
    "text": "usage would happen on Linux today I believe in terms of execution uh so F",
    "start": "926040",
    "end": "931079"
  },
  {
    "text": "sharp tools are available as a standard part of the.net SDK uh there's nothing",
    "start": "931079",
    "end": "936180"
  },
  {
    "text": "extra installed here besides the download SDK and you can that's a standard packaging across all the",
    "start": "936180",
    "end": "941220"
  },
  {
    "text": "different ecosystems you can use it everywhere and I just do just want to say yeah these two this getting started",
    "start": "941220",
    "end": "948120"
  },
  {
    "text": "experience is a mentally Suite you want to start out of F sharp at the back end you use a system called giraffe which is",
    "start": "948120",
    "end": "954720"
  },
  {
    "text": "a functional asp.net micro web framework and for server side and it is really a beautiful",
    "start": "954720",
    "end": "962160"
  },
  {
    "text": "way to program on the server side we all know that server side is fundamentally async functional programming and so",
    "start": "962160",
    "end": "969480"
  },
  {
    "text": "that's F sharp just absolutely flies in this context so and it's the performance",
    "start": "969480",
    "end": "974699"
  },
  {
    "text": "because it's built on asp.net core which is one of the most performant uh web Frameworks in existence you get this",
    "start": "974699",
    "end": "982139"
  },
  {
    "text": "extremely high performance functional first server-side programming and as you look at these things I'm not just I I do",
    "start": "982139",
    "end": "988740"
  },
  {
    "text": "want to put the I put them in that historical context go back to that paper look through where functional",
    "start": "988740",
    "end": "995100"
  },
  {
    "text": "programming was in two in at this at the start of the journey with F sharp and",
    "start": "995100",
    "end": "1001880"
  },
  {
    "text": "just think where we are now in terms of practicality in terms of interoperability in terms of reusing",
    "start": "1001880",
    "end": "1009680"
  },
  {
    "text": "things like ASB dot net core in terms of performance in terms of tooling we have",
    "start": "1009680",
    "end": "1014959"
  },
  {
    "text": "come so far not only with F sharp but many different tool chains have come this far and it's all been part of that",
    "start": "1014959",
    "end": "1020899"
  },
  {
    "text": "common story but uh just take a while to stop and think just how far we've come",
    "start": "1020899",
    "end": "1027678"
  },
  {
    "text": "and what a wonderful position functional programming is in today if you want to get started for the the",
    "start": "1027679",
    "end": "1034459"
  },
  {
    "text": "front end you can do uh you do install the.net children and some templates through that then you do.net new Fable",
    "start": "1034459",
    "end": "1041000"
  },
  {
    "text": "and then you do npm install and start and the great thing about this is although you do have that.net SDK",
    "start": "1041000",
    "end": "1046640"
  },
  {
    "text": "installed for for part of the compilation support basically it conceptually from the programmer's point",
    "start": "1046640",
    "end": "1053000"
  },
  {
    "text": "of view you're operating in the npm ecosystem and so it's like typescript it",
    "start": "1053000",
    "end": "1058580"
  },
  {
    "text": "lives happily in the node npm ecosystem you can use it as a JavaScript first language and a lot of the tooling and",
    "start": "1058580",
    "end": "1065780"
  },
  {
    "text": "idioms and everything that work uh with uh in this when you're coming to F sharp from this perspective you can feel",
    "start": "1065780",
    "end": "1072440"
  },
  {
    "text": "pretty much like a JavaScript developer uh uh just so there are some other",
    "start": "1072440",
    "end": "1078320"
  },
  {
    "text": "options you can use webassembly I'll I'll skip over this uh you can also do full stack programming I just want to",
    "start": "1078320",
    "end": "1083780"
  },
  {
    "text": "just give a taste for these four entry points into the F-sharp ecosystem just",
    "start": "1083780",
    "end": "1088880"
  },
  {
    "text": "so you know where to start and just so you get a feel for what people do today how you can how you can get started so",
    "start": "1088880",
    "end": "1095840"
  },
  {
    "text": "uh you can a company like uh Norway's public broadcaster nrk use a safe stack",
    "start": "1095840",
    "end": "1101240"
  },
  {
    "text": "to do all sorts of wonderful work this is a combination of giraffe and Fable uh running at the back the the back end on",
    "start": "1101240",
    "end": "1108380"
  },
  {
    "text": "Azure uh as the cloud platform okay and just to say you know this",
    "start": "1108380",
    "end": "1115940"
  },
  {
    "text": "functional thing really really does work you can look at the testimonials uh you've got plenty of examples from your",
    "start": "1115940",
    "end": "1122000"
  },
  {
    "text": "own uh from your own communities if you're not programming enough sharp uh one great example is this one uh it had",
    "start": "1122000",
    "end": "1129740"
  },
  {
    "text": "350 000 lines of C sharp gets into 30 000 lines of robust F sharp uh uh that",
    "start": "1129740",
    "end": "1136340"
  },
  {
    "text": "was uh it was written up uh by Simon cousins a few years ago",
    "start": "1136340",
    "end": "1142340"
  },
  {
    "text": "and I'll skip over this just to look at some line counts C sharp code at 56 000 lines of curly braces uh it had three",
    "start": "1142340",
    "end": "1150320"
  },
  {
    "text": "thousand dollar checks compared to 15 and F sharp they can occurred in drop boundaries uh",
    "start": "1150320",
    "end": "1158120"
  },
  {
    "text": "so hence you might have some at uh but you can just see the scale of difference we have in this kind of application uh",
    "start": "1158120",
    "end": "1166100"
  },
  {
    "text": "which delivered the same functionality so that functional first approach it's the terminology we use in F sharp which",
    "start": "1166100",
    "end": "1172880"
  },
  {
    "text": "I think is very appropriate in other settings as well uh that you know it's",
    "start": "1172880",
    "end": "1178400"
  },
  {
    "text": "not only a difference in language it's a difference in methodology and it's a difference in thinking it's a difference in how you conceptualize programming and",
    "start": "1178400",
    "end": "1185780"
  },
  {
    "text": "this shines through in F sharp and uh they had a wonderful zero bug deployment",
    "start": "1185780",
    "end": "1191419"
  },
  {
    "text": "in this and so incredibly safe language all the way built all the way through F sharp is this notion of",
    "start": "1191419",
    "end": "1197679"
  },
  {
    "text": "safety rigidity through an appropriate level of rigidity and typing but a",
    "start": "1197679",
    "end": "1203240"
  },
  {
    "text": "lightness that comes through typing for instance that's a standard the standard thing that this core functional",
    "start": "1203240",
    "end": "1208940"
  },
  {
    "text": "programming gives you and so we have a wonderful community at F sharp and the centers around the F sharp software",
    "start": "1208940",
    "end": "1214820"
  },
  {
    "text": "foundation and fsharp.org and you can go and check that out",
    "start": "1214820",
    "end": "1220280"
  },
  {
    "text": "okay so now I want to talk about language design and features and things like that and so we have of course the",
    "start": "1220280",
    "end": "1226760"
  },
  {
    "text": "language design process everything is open you can see where we're at with at fslang design and Fs Lang suggestions",
    "start": "1226760",
    "end": "1232400"
  },
  {
    "text": "please come along and contribute uh if you're if you're not using F-sharp if",
    "start": "1232400",
    "end": "1237679"
  },
  {
    "text": "you're coming from some other community please come and contribute your own perspectives on on where F sharp needs",
    "start": "1237679",
    "end": "1244700"
  },
  {
    "text": "to be uh and we'd love to hear let's get great cross fertilization and",
    "start": "1244700",
    "end": "1251059"
  },
  {
    "text": "I wish we could be having those hallway chats even as we as we speak to cross",
    "start": "1251059",
    "end": "1256640"
  },
  {
    "text": "fertilize between our different communities just to give you a scope of the kind of stage we're at in what comes in and what",
    "start": "1256640",
    "end": "1264679"
  },
  {
    "text": "kind of features do get in to F-sharp as we evolve them this is looking back a little bit in time let's start with F",
    "start": "1264679",
    "end": "1270860"
  },
  {
    "text": "sharp 4.1 and you can see here for instance F sharp uh allows you to use",
    "start": "1270860",
    "end": "1276320"
  },
  {
    "text": "unboxed struck tuples um so unbox records unbox Union types",
    "start": "1276320",
    "end": "1282320"
  },
  {
    "text": "and so you know there was a cycle these are fantastic for performance and because we sit on top of.net generics we",
    "start": "1282320",
    "end": "1289159"
  },
  {
    "text": "still get all the wonderful properties of generic code there's nothing there's these fit very very beautifully into",
    "start": "1289159",
    "end": "1294860"
  },
  {
    "text": "their sharp language they they were just things we previously hadn't supported and so we're kind of filling in",
    "start": "1294860",
    "end": "1302000"
  },
  {
    "text": "the uh just making sure there are no you know you have triples you have generics",
    "start": "1302000",
    "end": "1307340"
  },
  {
    "text": "unbox tuples make sure that now make sure that works in F sharp so in fact by",
    "start": "1307340",
    "end": "1312500"
  },
  {
    "text": "adding these things we actually make the language more performant and we actually make it simpler as well okay you might",
    "start": "1312500",
    "end": "1318320"
  },
  {
    "text": "need an extra declaration to get unboxing to kick in but that's all you just put struct on a type and and it",
    "start": "1318320",
    "end": "1324440"
  },
  {
    "text": "becomes unboxed and everything and because you're functional then that works out really nicely right",
    "start": "1324440",
    "end": "1331039"
  },
  {
    "text": "because so we actually concentrated on these features which which help",
    "start": "1331039",
    "end": "1336260"
  },
  {
    "text": "functional programming fulfill its role to be even more simple uh uh we can forget that first point",
    "start": "1336260",
    "end": "1344539"
  },
  {
    "text": "there's an old slide I'm not going to do more on that optional livescape Cycles uh but we've been adding lots of things",
    "start": "1344539",
    "end": "1351679"
  },
  {
    "text": "like this so what else did we do F sharp 5.0 in 2018 we did a span of T now span",
    "start": "1351679",
    "end": "1357140"
  },
  {
    "text": "of T is an interesting Beast you probably it would be a separate talk all of its own but what uh span of Tears",
    "start": "1357140",
    "end": "1365419"
  },
  {
    "text": "actually comes from the um uh from C sharp and it actually comes",
    "start": "1365419",
    "end": "1372679"
  },
  {
    "text": "from work to make c-sharp web programming be far uh to be have much",
    "start": "1372679",
    "end": "1380840"
  },
  {
    "text": "lower allocation rates and it's a major part of what allows uh those incredible",
    "start": "1380840",
    "end": "1389299"
  },
  {
    "text": "performance statistics for asp.net core for web serving is they just have such",
    "start": "1389299",
    "end": "1395179"
  },
  {
    "text": "uh incredibly low allocation rates um in their web serving uh Pipelines",
    "start": "1395179",
    "end": "1401720"
  },
  {
    "text": "uh and well uh it's actually a feature that doesn't fit that nicely into",
    "start": "1401720",
    "end": "1407360"
  },
  {
    "text": "functional programming you where so it's a low level feature for high performance code but we did put it into F sharp to",
    "start": "1407360",
    "end": "1414559"
  },
  {
    "text": "make sure we could get full access into the.net libraries and get all the benefits of these uh high performance",
    "start": "1414559",
    "end": "1420679"
  },
  {
    "text": "situations uh and then of course we have all these tooling updates that we push through",
    "start": "1420679",
    "end": "1426260"
  },
  {
    "text": "where we push through things like improving async debugging and then then in the shop 4.6 we came back and we did",
    "start": "1426260",
    "end": "1432140"
  },
  {
    "text": "some language work which is uh previously fsharp had only had nominal record types and we put in did the work",
    "start": "1432140",
    "end": "1439640"
  },
  {
    "text": "to make you uh able to do Anonymous record types fairly major feature uh it",
    "start": "1439640",
    "end": "1446299"
  },
  {
    "text": "um we concentrate on the functional programming notion of Records much as you would get them in Haskell",
    "start": "1446299",
    "end": "1453220"
  },
  {
    "text": "and uh uh you know it it it's a it's a good uh",
    "start": "1453220",
    "end": "1459320"
  },
  {
    "text": "feature that fits well with the functional programming Paradigm once again shop 4.7 we uh made improvements to this",
    "start": "1459320",
    "end": "1467600"
  },
  {
    "text": "thing called computational Expressions to uh and we started doing proper language version and we did a whole lot",
    "start": "1467600",
    "end": "1473900"
  },
  {
    "text": "of work on the Syntax for the white space aware syntax and we did lots of improvements and then F sharp 5.0 which",
    "start": "1473900",
    "end": "1479539"
  },
  {
    "text": "has just come out in 2021 there's a whole bunch of really good features uh we have hashar nougat",
    "start": "1479539",
    "end": "1486919"
  },
  {
    "text": "support So in your scripts you can just reference packages in your scripts are nougat and then give a package name or",
    "start": "1486919",
    "end": "1493100"
  },
  {
    "text": "package version people this makes F sharp scripting incredibly powerful dot",
    "start": "1493100",
    "end": "1498559"
  },
  {
    "text": "net interactive notebook support Jupiter support string input interpolation then uh then again we take these",
    "start": "1498559",
    "end": "1507080"
  },
  {
    "text": "features which are enough in our Shuffle talk about this more this computation expression feature and we think how can",
    "start": "1507080",
    "end": "1512179"
  },
  {
    "text": "we make this feature that we already have for expressing compositional functional computations even more",
    "start": "1512179",
    "end": "1519500"
  },
  {
    "text": "powerful and in particular we can do magnetic computations we can do what I call monoidal computations lists and",
    "start": "1519500",
    "end": "1525919"
  },
  {
    "text": "sequences and so on uh can we also do applicatives in this in in this uh syntax uh and we we put in",
    "start": "1525919",
    "end": "1534380"
  },
  {
    "text": "support for that and it's absolutely fantastic and uh you can read about that in the various links uh through the the",
    "start": "1534380",
    "end": "1540980"
  },
  {
    "text": "link at the bottom and all the way along I've actually missed out many things we've actually been improving interop into.net we've",
    "start": "1540980",
    "end": "1547880"
  },
  {
    "text": "actually been improving interoperative JavaScript as well uh that's one of the reasons for anonymous records and then",
    "start": "1547880",
    "end": "1554840"
  },
  {
    "text": "we improve the sort of performance of these quad core data structures uh and okay",
    "start": "1554840",
    "end": "1562400"
  },
  {
    "text": "so that gives you a fair kind of a a a taste for the history it gives you a",
    "start": "1562400",
    "end": "1567799"
  },
  {
    "text": "taste for the uh features that we're adding uh and so what underlies that",
    "start": "1567799",
    "end": "1574580"
  },
  {
    "text": "about my personal thoughts about coding obviously I love",
    "start": "1574580",
    "end": "1580580"
  },
  {
    "text": "functional programming and guides through all of this but I have my biases",
    "start": "1580580",
    "end": "1586100"
  },
  {
    "text": "when it comes to functional programming and other kinds of programming and how we make functional programming work in",
    "start": "1586100",
    "end": "1591919"
  },
  {
    "text": "conjunction with other things all the way along it's all not just about being a zealot for functional",
    "start": "1591919",
    "end": "1597799"
  },
  {
    "text": "programming it's about being making functional programming work in context work and interoperability work",
    "start": "1597799",
    "end": "1605659"
  },
  {
    "text": "in software engineering context work in team contexts so we need to work through",
    "start": "1605659",
    "end": "1611659"
  },
  {
    "text": "all of those things so there's lots of opinions in this part of the talk the first part of the talk is more you know fact this part's opinion",
    "start": "1611659",
    "end": "1619340"
  },
  {
    "text": "uh so if you want to uh one one place to sort of mine for F sharp code is the uh",
    "start": "1619340",
    "end": "1626240"
  },
  {
    "text": "a sharp Advent calendar and I've listed out some of the users are slightly old slide this one it goes back to 2017-16",
    "start": "1626240",
    "end": "1633740"
  },
  {
    "text": "and over way back started by a shop used in Japan and I I spent some while mining",
    "start": "1633740",
    "end": "1639620"
  },
  {
    "text": "some of this to look at like F sharp code I I love and this was the very first uh",
    "start": "1639620",
    "end": "1646700"
  },
  {
    "text": "a shop calendar I think uh and if we go even back a little bit further what was",
    "start": "1646700",
    "end": "1653960"
  },
  {
    "text": "this foundation of the F sharp design I've touched on this this is it this was a slide I used it's got those kind of",
    "start": "1653960",
    "end": "1659480"
  },
  {
    "text": "horrible looking kind of PowerPoint things it's a slider user Microsoft research techfest in 2007 to explain",
    "start": "1659480",
    "end": "1666500"
  },
  {
    "text": "what our Shop's about and to it was this thing the combination counts it's it's",
    "start": "1666500",
    "end": "1672140"
  },
  {
    "text": "not just about functional programming in fact I don't even mention the word functional programming on this slide uh",
    "start": "1672140",
    "end": "1681260"
  },
  {
    "text": "the yeah so you know how do you you know what counts static typing counts for",
    "start": "1681679",
    "end": "1688400"
  },
  {
    "text": "lots of positive reasons succinctness really counts scalability libraries being explorative being interoperable",
    "start": "1688400",
    "end": "1694340"
  },
  {
    "text": "being efficient touched on many of those themes and it's the fact that we deliver all of these together without making uh",
    "start": "1694340",
    "end": "1701480"
  },
  {
    "text": "there are trade-offs of course between these things but it is the combination the package of things that we're",
    "start": "1701480",
    "end": "1706520"
  },
  {
    "text": "delivering with F sharp uh which is so crucial in unlocking the potential of",
    "start": "1706520",
    "end": "1713000"
  },
  {
    "text": "functional programming so obviously if I want to combine these",
    "start": "1713000",
    "end": "1718460"
  },
  {
    "text": "things these are the things that I love in coding we want uh we want code that",
    "start": "1718460",
    "end": "1724820"
  },
  {
    "text": "is succinct I I do have absolutely learned to love uh write as soon as I",
    "start": "1724820",
    "end": "1731179"
  },
  {
    "text": "actually the very first time I started using ml I didn't uh an ml like a functional language I actually didn't",
    "start": "1731179",
    "end": "1737720"
  },
  {
    "text": "like it that much it was only when I had to start doing real work in the theorem proving domain",
    "start": "1737720",
    "end": "1744500"
  },
  {
    "text": "that I've really learned to love the Henry Miller type inference and it's succinctness and it's this magical sort",
    "start": "1744500",
    "end": "1751039"
  },
  {
    "text": "of expressivity and uh also how performant that code was so uh there's a program in our shop",
    "start": "1751039",
    "end": "1758419"
  },
  {
    "text": "which you can print something out uh it's no ceremony it's not even functional programming particularly just using printf but it works extremely well",
    "start": "1758419",
    "end": "1766760"
  },
  {
    "text": "and it's uh it's nice that is the full program in F sharp so obviously I'm in that typical functional programming",
    "start": "1766760",
    "end": "1773059"
  },
  {
    "text": "thing I'm promoting low serum and the programming it just says what it says print out hello world",
    "start": "1773059",
    "end": "1779179"
  },
  {
    "text": "uh at F sharp of course you'll see the core of functional programming you'll see it expressed in uh very often and",
    "start": "1779179",
    "end": "1785120"
  },
  {
    "text": "through lots of pipelining we love our pipelining you'll see lots and lots and lots of it in F-sharp code we do tend to",
    "start": "1785120",
    "end": "1792200"
  },
  {
    "text": "prefer data flowing that from left through functional chains like this and",
    "start": "1792200",
    "end": "1798020"
  },
  {
    "text": "we don't uh less backwards than in other language languages uh so here's a",
    "start": "1798020",
    "end": "1804140"
  },
  {
    "text": "typical thing you'll get some array of data just taken from the F-sharp tooling implementation and then your filter and",
    "start": "1804140",
    "end": "1810500"
  },
  {
    "text": "do a parallel map and then a filter and a group by and a map and so on and that's just fine",
    "start": "1810500",
    "end": "1817159"
  },
  {
    "text": "so uh one of the Striking things about looking through the F sharp Advent calendar about what people really are",
    "start": "1817159",
    "end": "1823399"
  },
  {
    "text": "loving doing with F sharp is uh is is of course domain modeling and this is uh",
    "start": "1823399",
    "end": "1829159"
  },
  {
    "text": "this is part of the domain model in that I one of the domain models are in theorem proving which ones sort of",
    "start": "1829159",
    "end": "1836179"
  },
  {
    "text": "starts with you start with propositional logic and the model the domain of paths professor of logic expressions and then",
    "start": "1836179",
    "end": "1842539"
  },
  {
    "text": "you just code uploads and loads of logic over that recursion normalization whatever",
    "start": "1842539",
    "end": "1847700"
  },
  {
    "text": "and then you look at another domain which so the F sharp Optimizer and you have what is the core data structure of",
    "start": "1847700",
    "end": "1853700"
  },
  {
    "text": "the domain well the core data structure is what do we know about an expression and this is the data structure that",
    "start": "1853700",
    "end": "1858919"
  },
  {
    "text": "represents it and so and I bring this out in this history of F sharp paper uh",
    "start": "1858919",
    "end": "1865460"
  },
  {
    "text": "the early history of F sharp as being when you really look at what these theorem proving people were doing back",
    "start": "1865460",
    "end": "1871940"
  },
  {
    "text": "in the 1970s what they had is a domain not not too different to this they might",
    "start": "1871940",
    "end": "1877640"
  },
  {
    "text": "have been working in higher order logic instead of propositional logic but I had a domain uh and they needed to then you have a",
    "start": "1877640",
    "end": "1885140"
  },
  {
    "text": "metal language to program up lots of things in that domain and they loved how",
    "start": "1885140",
    "end": "1891140"
  },
  {
    "text": "they could model things in this in in that they had they wanted the succinct",
    "start": "1891140",
    "end": "1896419"
  },
  {
    "text": "notations from modeling and they wanted the succinct notations for for for programming up over that over the",
    "start": "1896419",
    "end": "1903020"
  },
  {
    "text": "domains after they've modeled them and what's really curious and beautiful to",
    "start": "1903020",
    "end": "1908059"
  },
  {
    "text": "me is how that is still what everybody is doing today you know that they they",
    "start": "1908059",
    "end": "1913580"
  },
  {
    "text": "they found a solution to this very general problem of domain domains and programming and then they you know",
    "start": "1913580",
    "end": "1920480"
  },
  {
    "text": "everybody does it today and that's even to the point uh that we have entire books on basically that technique domain",
    "start": "1920480",
    "end": "1929840"
  },
  {
    "text": "modeling made functional and uh I really encourage you the Scott will action and",
    "start": "1929840",
    "end": "1935299"
  },
  {
    "text": "there's also a book called get programming with F sharp that covers quite a lot of this and",
    "start": "1935299",
    "end": "1940700"
  },
  {
    "text": "um a domain modeling domain semantics and you know that continuity in you know if",
    "start": "1940700",
    "end": "1948500"
  },
  {
    "text": "you think of all the things that have changed in the software industry over the years all the tidal waves of things that have come and gone uh over you know",
    "start": "1948500",
    "end": "1955820"
  },
  {
    "text": "uh the but the core activity of domain modeling and and domain",
    "start": "1955820",
    "end": "1961820"
  },
  {
    "text": "semantics was so beautifully solved by the original designers of these functional programming languages and",
    "start": "1961820",
    "end": "1969440"
  },
  {
    "text": "um yeah that's really holds true and you see it so here we have Odie from Nigeria for example talking about uh cracking",
    "start": "1969440",
    "end": "1977960"
  },
  {
    "text": "data from the iPhone uh from the apis related to uh uh I I think it's Apple",
    "start": "1977960",
    "end": "1985520"
  },
  {
    "text": "music and I and his iPhone statistics and so on and it's programming up uh the",
    "start": "1985520",
    "end": "1990860"
  },
  {
    "text": "data he's getting from the web service and it kind of gives this comment you know your choice of data structures and",
    "start": "1990860",
    "end": "1996260"
  },
  {
    "text": "how you design your domain is crucial when writing code in F sharp or other languages screw it up and you'll be working you're walking around in circles",
    "start": "1996260",
    "end": "2002919"
  },
  {
    "text": "nail it and your implementation will be concise straightforward and probably even trivial and that is such a",
    "start": "2002919",
    "end": "2009039"
  },
  {
    "text": "perceptive observation and I um you know really nails that that point",
    "start": "2009039",
    "end": "2015279"
  },
  {
    "text": "uh and and it stands in a historical tradition of domain modeling and domain semantics",
    "start": "2015279",
    "end": "2021700"
  },
  {
    "text": "which uh I think we need to be even more forceful now the functional",
    "start": "2021700",
    "end": "2027039"
  },
  {
    "text": "program is so practical so real we need to be even more forceful about about uh",
    "start": "2027039",
    "end": "2032440"
  },
  {
    "text": "staking out functional programming as the solution to these this domain",
    "start": "2032440",
    "end": "2039399"
  },
  {
    "text": "all right what other code do I love uh we do have this uh you know this this sort of code this wonderful combination",
    "start": "2039399",
    "end": "2045039"
  },
  {
    "text": "of features in F sharp here we have what's called a type provider which actually at compile time can go and scrape the uh a website uh and so and",
    "start": "2045039",
    "end": "2053980"
  },
  {
    "text": "give you a structured from the type view over the HTML structure you're getting back from a particular website and then",
    "start": "2053980",
    "end": "2061358"
  },
  {
    "text": "you can do strongly typed programming over uh the results of these nougat",
    "start": "2061359",
    "end": "2066580"
  },
  {
    "text": "package statistics coming back for a particular thing and you get strong typing completion tooling everything",
    "start": "2066580",
    "end": "2072419"
  },
  {
    "text": "over the data domain which you're picking up from an external data source",
    "start": "2072419",
    "end": "2077858"
  },
  {
    "text": "a database or whatever it is and it's you know this is just a you know getting",
    "start": "2077859",
    "end": "2083618"
  },
  {
    "text": "your types from the web and programming up over them using good tooling you know",
    "start": "2083619",
    "end": "2089500"
  },
  {
    "text": "this is this is magical I've been shocked at with f with F sharp",
    "start": "2089500",
    "end": "2096280"
  },
  {
    "text": "actually I hadn't realized how important functional was to user interface programming and of course Elm is the",
    "start": "2096280",
    "end": "2103300"
  },
  {
    "text": "amazing language in this space for showing the world how relevant functional programming is to web",
    "start": "2103300",
    "end": "2109480"
  },
  {
    "text": "programming to the to the you to the front to the front end and uh you can",
    "start": "2109480",
    "end": "2115900"
  },
  {
    "text": "with this model view update mvu architectures that",
    "start": "2115900",
    "end": "2121000"
  },
  {
    "text": "um Elm has inspired in every functional language and also in languages like c-sharp and elsewhere and uh you can do",
    "start": "2121000",
    "end": "2128980"
  },
  {
    "text": "this in F-sharp you can do it in Fable uh and you get this uh this kind of",
    "start": "2128980",
    "end": "2134020"
  },
  {
    "text": "things this is for a mobile app uh that you have some model and you have some view function and then you add generates",
    "start": "2134020",
    "end": "2140500"
  },
  {
    "text": "elements and which can dynamically change so this this kind of expressing",
    "start": "2140500",
    "end": "2146619"
  },
  {
    "text": "the core the core update in or the core view invariance of a user interface",
    "start": "2146619",
    "end": "2153339"
  },
  {
    "text": "using functional programming I hadn't realized when I was doing fshf I had",
    "start": "2153339",
    "end": "2158680"
  },
  {
    "text": "always said in earlier sharp f-shops for the back end not for the front end you have to do all that object oriented",
    "start": "2158680",
    "end": "2163720"
  },
  {
    "text": "stuff on the front end and I was wrong uh the F-sharp is well functional in",
    "start": "2163720",
    "end": "2169240"
  },
  {
    "text": "general is incredibly relevant for very large amounts of of user interface uh",
    "start": "2169240",
    "end": "2175480"
  },
  {
    "text": "development and uh that's this is what it looks like in Fable for web programming you can see",
    "start": "2175480",
    "end": "2183400"
  },
  {
    "text": "there it's just an HTML DSL down below putting together various uh elements of",
    "start": "2183400",
    "end": "2189700"
  },
  {
    "text": "the uh the view in a fairly normal way okay uh F sharp of course is functional",
    "start": "2189700",
    "end": "2196960"
  },
  {
    "text": "we love composition here's an example of the kind of code that is just using function composition piping uh down uh",
    "start": "2196960",
    "end": "2203859"
  },
  {
    "text": "between these various functions and collecting up errors and the like it's very nice people uh love to see",
    "start": "2203859",
    "end": "2210280"
  },
  {
    "text": "structure of an application sort of broken down like through simple uh composition of functions or asynchronous",
    "start": "2210280",
    "end": "2216460"
  },
  {
    "text": "functions or other such things uh uh okay and to say we're also getting",
    "start": "2216460",
    "end": "2222099"
  },
  {
    "text": "that compositionality of course for web handling uh using draft or other things so here's just a sample bit of code for",
    "start": "2222099",
    "end": "2229420"
  },
  {
    "text": "a web app which has HTTP handlers and the various words we're expressing okay",
    "start": "2229420",
    "end": "2234520"
  },
  {
    "text": "so I've been all very positive about functional code but I actually want to say not all functional code is good code and this is uh you know the other side",
    "start": "2234520",
    "end": "2242260"
  },
  {
    "text": "of the coin your functional is not a perfect thing and can be heavily misused",
    "start": "2242260",
    "end": "2247660"
  },
  {
    "text": "and one thing you'll notice and uh is missing from the F-sharp design is curry",
    "start": "2247660",
    "end": "2253119"
  },
  {
    "text": "and uncurred you'll say how could you be missing Curry and uncurry from the core",
    "start": "2253119",
    "end": "2259180"
  },
  {
    "text": "library of F sharp you know here you know even then the names Curry surely",
    "start": "2259180",
    "end": "2264760"
  },
  {
    "text": "you have to have it you know it's part of the functional programming tradition okay you know I once encountered",
    "start": "2264760",
    "end": "2270640"
  },
  {
    "text": "somebody who used to like doing this sort of thing carry the string dot compare function and then apply it to",
    "start": "2270640",
    "end": "2276099"
  },
  {
    "text": "two arguments okay uh because I somehow thought there was a virtue in making",
    "start": "2276099",
    "end": "2281800"
  },
  {
    "text": "things uh into courage functions and you know in F sharp you can just call the",
    "start": "2281800",
    "end": "2287380"
  },
  {
    "text": "string dot compare function taken to a tuple of arguments and and through not",
    "start": "2287380",
    "end": "2292540"
  },
  {
    "text": "compare comes from whatever.net libraries or fable libraries and you can",
    "start": "2292540",
    "end": "2298180"
  },
  {
    "text": "do that you don't have to if you're just going to apply it you don't have to of course you might say well that's just silly no one should do that anyway",
    "start": "2298180",
    "end": "2306420"
  },
  {
    "text": "uh but we see a lot of incredibly once",
    "start": "2306420",
    "end": "2312280"
  },
  {
    "text": "you give people Curry and uncurry they just write code that other people can't understand and you know I'm pretty I've",
    "start": "2312280",
    "end": "2318520"
  },
  {
    "text": "got formal proof of this but I'm pretty sure that people just don't get it okay",
    "start": "2318520",
    "end": "2326140"
  },
  {
    "text": "people are continually use uh lose their 62 indecipherable too often to use",
    "start": "2326140",
    "end": "2333960"
  },
  {
    "text": "drc.za seek.map it's the use of on Curry and it's just better just write out the",
    "start": "2333960",
    "end": "2340180"
  },
  {
    "text": "land though in this case if you really need to uh do this kind of thing and I",
    "start": "2340180",
    "end": "2346240"
  },
  {
    "text": "say that because it does make code clearer it makes it vastly more debuggable in a in a professional",
    "start": "2346240",
    "end": "2352720"
  },
  {
    "text": "debugger uh and so just right just write it up so a similar thing is this back",
    "start": "2352720",
    "end": "2358900"
  },
  {
    "text": "pipe operator you saw forward piping earlier and uh well we have a backpipe",
    "start": "2358900",
    "end": "2364540"
  },
  {
    "text": "operator in F-sharp and you see people doing this kind of weird stuff where they forward pipe for a while and they",
    "start": "2364540",
    "end": "2370599"
  },
  {
    "text": "backpiped into various things and I look I actually forget the precedences of these various operators in some ways and",
    "start": "2370599",
    "end": "2377980"
  },
  {
    "text": "you certainly don't do this kind of thing and in general it turns out this code could have just been",
    "start": "2377980",
    "end": "2384339"
  },
  {
    "text": "written in some much more simpler way like this I think if I've got that right",
    "start": "2384339",
    "end": "2389680"
  },
  {
    "text": "uh and they um so my",
    "start": "2389680",
    "end": "2395760"
  },
  {
    "text": "rule with the F sharp communities you can occasionally use a backpipe operator but we really think carefully about it",
    "start": "2395760",
    "end": "2402820"
  },
  {
    "text": "and never use it in beginner samples be aware that beginners are coming to a",
    "start": "2402820",
    "end": "2408280"
  },
  {
    "text": "functional the core functional program it's a very limited set of intuitions and uh and knowledge and and just you",
    "start": "2408280",
    "end": "2416859"
  },
  {
    "text": "just think very carefully about when to use this kind of operator and never ever",
    "start": "2416859",
    "end": "2422560"
  },
  {
    "text": "put them on the same line uh that's just that's just not going to work and then there are these uh multi-argument",
    "start": "2422560",
    "end": "2429280"
  },
  {
    "text": "backpipe operators and I they should be removed from F sharp that we should deprecate those do not use them they uh",
    "start": "2429280",
    "end": "2437619"
  },
  {
    "text": "they they really aren't to be so in general Point free code in F sharp",
    "start": "2437619",
    "end": "2444700"
  },
  {
    "text": "0.3 itself is not a virtue coding without explicit lambdas or let's and",
    "start": "2444700",
    "end": "2450099"
  },
  {
    "text": "you'll often see uh people once they discover how to uh program with computed",
    "start": "2450099",
    "end": "2456099"
  },
  {
    "text": "functions they'll start to use point three all the time and they'll start to write this kind of code list.map",
    "start": "2456099",
    "end": "2461560"
  },
  {
    "text": "brackets plus 10 meaning partially apply the plus function to 10 and get a function with adds 10 and then they'll",
    "start": "2461560",
    "end": "2468400"
  },
  {
    "text": "write double an increment as sort of times two plus one whatever it's just not worth it now the language",
    "start": "2468400",
    "end": "2476560"
  },
  {
    "text": "doesn't enforce anything you can write this code in F sharp but uh this sort of",
    "start": "2476560",
    "end": "2481960"
  },
  {
    "text": "over use of poetry code is strongly discouraged and F sharp it's not seen as",
    "start": "2481960",
    "end": "2487660"
  },
  {
    "text": "a virtue in any way to to make things Point free in F sharp in fact in many of",
    "start": "2487660",
    "end": "2494800"
  },
  {
    "text": "the places in things like Haskell where where this is seen as a virtue are more",
    "start": "2494800",
    "end": "2499839"
  },
  {
    "text": "I've got uh we we get with a feature called computational expressions and I'll get to that now",
    "start": "2499839",
    "end": "2505780"
  },
  {
    "text": "okay uh just to say fold in F sharp is generally considered harmful there's almost certainly better ways things to",
    "start": "2505780",
    "end": "2512800"
  },
  {
    "text": "do than you fold some by Max by choose tripec map fold reduce fold is one of the last things you learn in F sharp",
    "start": "2512800",
    "end": "2519760"
  },
  {
    "text": "because you can do nearly everything without doing a fold it's very very rare",
    "start": "2519760",
    "end": "2524859"
  },
  {
    "text": "um okay so I will skip some things I want to talk briefly about objects and F",
    "start": "2524859",
    "end": "2530980"
  },
  {
    "text": "sharp F sharp does have objects we have inputs to object instruction object internals and exported properties here",
    "start": "2530980",
    "end": "2538480"
  },
  {
    "text": "it's a nice fun great for functional objects so these are the language features here we have types interface",
    "start": "2538480",
    "end": "2546160"
  },
  {
    "text": "types and object expressions and here's an example of uh information in functional information immutable",
    "start": "2546160",
    "end": "2552880"
  },
  {
    "text": "information in encapsulated immutable computation and then information out and",
    "start": "2552880",
    "end": "2558460"
  },
  {
    "text": "it's a wonderful feature it's very nominally based but it's incredibly practical for functional uh programming",
    "start": "2558460",
    "end": "2564880"
  },
  {
    "text": "Computing encapsulated tables and summaries but if you look at the features of oo a",
    "start": "2564880",
    "end": "2572380"
  },
  {
    "text": "big part of the F-sharp design is uh in uh deconstructing the features of oo you",
    "start": "2572380",
    "end": "2579339"
  },
  {
    "text": "have all these features down the left it won't run through them all and uh and you're going to think well yeah oh is a",
    "start": "2579339",
    "end": "2585640"
  },
  {
    "text": "big thing and what do we do with this some of these make uh some of these are good for F sharp and some of them are",
    "start": "2585640",
    "end": "2592660"
  },
  {
    "text": "good for performance properties something that are necessary for interrupt and some of them really aren't needed and so we kind of split this into",
    "start": "2592660",
    "end": "2600280"
  },
  {
    "text": "things which we Embrace like the dot notation is embraced in F sharp x dot",
    "start": "2600280",
    "end": "2605380"
  },
  {
    "text": "length is totally fine it's great and instance members and all the way down you can read down the list here and",
    "start": "2605380",
    "end": "2610599"
  },
  {
    "text": "you'll get this in any standard f-shelf textbook then there's the set of things which we do for kind of use you can use",
    "start": "2610599",
    "end": "2617640"
  },
  {
    "text": "necessarily Tastefully respect sparingly okay and then there's a set of things",
    "start": "2617640",
    "end": "2623920"
  },
  {
    "text": "which are in the language uh which uh you use very very rarely uh and is going",
    "start": "2623920",
    "end": "2631060"
  },
  {
    "text": "down the object Rabbit Hole to use them very much and then finally there's a set",
    "start": "2631060",
    "end": "2637000"
  },
  {
    "text": "of things which are really not supported okay in um uh in in F-sharp so we kind of",
    "start": "2637000",
    "end": "2644920"
  },
  {
    "text": "basically the things we love in F sharp and you're as a you're encouraged to embrace and accept them and I think",
    "start": "2644920",
    "end": "2651520"
  },
  {
    "text": "everybody in the functional Community should stop and think about that and think about easing up a little bit with",
    "start": "2651520",
    "end": "2657819"
  },
  {
    "text": "regard to object programming and learning to love this as a part of your your functional tool set we tolerate",
    "start": "2657819",
    "end": "2664720"
  },
  {
    "text": "some things we mostly avoid some other things and we completely forget about a bunch of other things and that brings me",
    "start": "2664720",
    "end": "2670720"
  },
  {
    "text": "to a key point which is object programming versus object oriented programming and F sharp is so let's what",
    "start": "2670720",
    "end": "2678220"
  },
  {
    "text": "do I mean by those things the object programming is is great succinct coding notational convenience API ergonomics",
    "start": "2678220",
    "end": "2685480"
  },
  {
    "text": "good naming practical encapsulation sensible small composable abstractions",
    "start": "2685480",
    "end": "2691500"
  },
  {
    "text": "expression oriented making simple things out of potentially complex foundations",
    "start": "2691500",
    "end": "2698079"
  },
  {
    "text": "object oriented programming is something else altogether objects is a single Paradigm a radical classification an",
    "start": "2698079",
    "end": "2704140"
  },
  {
    "text": "abstract jelly bean factory delegator large abstractions with many holes and",
    "start": "2704140",
    "end": "2709359"
  },
  {
    "text": "many failure points and focus on declarations not expressions and so so",
    "start": "2709359",
    "end": "2717579"
  },
  {
    "text": "the aim of F sharp is to embrace object programming just like we embraced Tuple",
    "start": "2717579",
    "end": "2722980"
  },
  {
    "text": "programming Or List programming or async programming or uh or programming with",
    "start": "2722980",
    "end": "2729700"
  },
  {
    "text": "sequences of stream programming object programming is fine way to represent information and we make it fit with the",
    "start": "2729700",
    "end": "2737260"
  },
  {
    "text": "expression oriented typed functional parallel we do not Embrace full object",
    "start": "2737260",
    "end": "2742900"
  },
  {
    "text": "orientation unless you happen to be really already stuck in that Paradigm for sort of interoper reasons or",
    "start": "2742900",
    "end": "2749500"
  },
  {
    "text": "something yeah uh and so that's a very important",
    "start": "2749500",
    "end": "2754599"
  },
  {
    "text": "distinction and I think we should just drop that word oriented and just forcefully be willing as a community a",
    "start": "2754599",
    "end": "2761859"
  },
  {
    "text": "functional Community to own the word object and say that it means something to us and embrace object programming",
    "start": "2761859",
    "end": "2770520"
  },
  {
    "text": "yep I'll finish uh yep wrap it up in a couple of minutes uh I just decided it's",
    "start": "2770880",
    "end": "2776440"
  },
  {
    "text": "a wonderful feature called computation expressions in F sharp which is this extensible intuitive friendly magnetic",
    "start": "2776440",
    "end": "2783099"
  },
  {
    "text": "notation on steroids I mentioned it also supports applicatives uh it also supports some monoidal structures and",
    "start": "2783099",
    "end": "2790599"
  },
  {
    "text": "that gets used for lots and lots of options and it's way more powerful than Haskell do notation you can like Haskell",
    "start": "2790599",
    "end": "2797319"
  },
  {
    "text": "denotation and something from the way back in the archaic days compared to what you can do with uh magnetic",
    "start": "2797319",
    "end": "2803380"
  },
  {
    "text": "notation uh so the computational expressions and F sharp so get your head into this and you'll enjoy that a lot",
    "start": "2803380",
    "end": "2811200"
  },
  {
    "text": "uh and I will just give one example of that here's an example of sort of using",
    "start": "2811200",
    "end": "2816640"
  },
  {
    "text": "this Dot concat list.filter and instead in F sharp you would tend to write this which is where you're yielding a list",
    "start": "2816640",
    "end": "2823240"
  },
  {
    "text": "it's a generative you yield uh you have for loops and so on I'm generating things but it's all got a functional",
    "start": "2823240",
    "end": "2829060"
  },
  {
    "text": "interpretation through computation expressions okay I will skip higher head now uh lots",
    "start": "2829060",
    "end": "2836680"
  },
  {
    "text": "of other improper properties I love code that I love uh debugging commenting testing performance under CI and make it",
    "start": "2836680",
    "end": "2843400"
  },
  {
    "text": "readable uh and that brings me to you know the theme running through this is",
    "start": "2843400",
    "end": "2849040"
  },
  {
    "text": "all about making the core functional programming experience work in practice",
    "start": "2849040",
    "end": "2854339"
  },
  {
    "text": "uh and it's less about the sort of Haskell uh type uh programming at the",
    "start": "2854339",
    "end": "2861400"
  },
  {
    "text": "type level F sharp doesn't quite have type classes in the way that sort of Haskell has it has another mechanism to",
    "start": "2861400",
    "end": "2868180"
  },
  {
    "text": "support ad hoc overloading uh and it is",
    "start": "2868180",
    "end": "2874000"
  },
  {
    "text": "um and it's less about sort of the ml module kind of thing but this is about making the core of functional",
    "start": "2874000",
    "end": "2880060"
  },
  {
    "text": "programming incredibly expressive and Powerful in real and practical programming and so all the features",
    "start": "2880060",
    "end": "2885339"
  },
  {
    "text": "we're adding to fshl5 and in six uh high performance computation Expressions tasks Anonymous unions some uh",
    "start": "2885339",
    "end": "2893260"
  },
  {
    "text": "additional tweaks to type inference all of this is about continuing and making that uh core functional programming",
    "start": "2893260",
    "end": "2899619"
  },
  {
    "text": "experience even more kind of powerful and effective okay so in closing uh the F sharp",
    "start": "2899619",
    "end": "2906880"
  },
  {
    "text": "emphasis all the way through clear code to solve real world problems it's always say it's always been what it's about uh",
    "start": "2906880",
    "end": "2912819"
  },
  {
    "text": "uh and it's it's where we're at today and that is that tells you the kind of",
    "start": "2912819",
    "end": "2918040"
  },
  {
    "text": "code that I love not all functional code is good code think long and hard about how to make uh your functional code as",
    "start": "2918040",
    "end": "2925540"
  },
  {
    "text": "clear and it's welcoming and as simple as possible and and this key point I",
    "start": "2925540",
    "end": "2931300"
  },
  {
    "text": "brought out uh own the word object programming learn to love some some elements of object programming and then",
    "start": "2931300",
    "end": "2938319"
  },
  {
    "text": "reject the object oriented programming aspects uh that take you down that",
    "start": "2938319",
    "end": "2944380"
  },
  {
    "text": "rabbit hole okay and I will head over to the chat and we can take questions and",
    "start": "2944380",
    "end": "2951520"
  },
  {
    "text": "just to say if you want the um you want to learn F sharp or you want to point your colleagues perhaps if more",
    "start": "2951520",
    "end": "2957940"
  },
  {
    "text": "importantly uh to learn F sharp the ground up uh the udemy course is a fabulous one that I do recommend uh it's",
    "start": "2957940",
    "end": "2966220"
  },
  {
    "text": "only a couple of few bucks and it's really easy really good course okay so thank you very much uh let's",
    "start": "2966220",
    "end": "2973119"
  },
  {
    "text": "take the questions now",
    "start": "2973119",
    "end": "2976920"
  }
]