[
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "thanks everyone for being here and thanks for having me at go to Berlin my name is Ray I'm a developer advocate for",
    "start": "12080",
    "end": "18720"
  },
  {
    "text": "the Google cloud platform there are two things that I do mostly number one is to bring some of the latest and greatest",
    "start": "18720",
    "end": "24600"
  },
  {
    "text": "and that technology that Google has to offer both on Google cloud in the open source to developers all over the world",
    "start": "24600",
    "end": "30750"
  },
  {
    "text": "but I also like to make sure that we have one of the best developer experiences and work with the promise",
    "start": "30750",
    "end": "36270"
  },
  {
    "text": "team to make the developer experience better for that reason I also started the project called spring cloud GCP it's",
    "start": "36270",
    "end": "42690"
  },
  {
    "text": "one of the easiest way to to try Google cloud with a spring and spring boot with the starters that we have I'm also a",
    "start": "42690",
    "end": "49409"
  },
  {
    "text": "contributor to some of the open source projects including J hipster a awesome application generation tool and I have",
    "start": "49409",
    "end": "56789"
  },
  {
    "text": "my own project coach a deferred anyways if you have any questions any feedback about this session feel free to contact",
    "start": "56789",
    "end": "62010"
  },
  {
    "text": "me on Twitter Saten ism and if you need to get more information with all the simple code of",
    "start": "62010",
    "end": "67440"
  },
  {
    "text": "the examples that I am showing today you can check out my website the standard ISM that me okay so today there's I'm",
    "start": "67440",
    "end": "75810"
  },
  {
    "text": "not gonna talk about the series of Micra services or whether you should be doing or not right you should make your own",
    "start": "75810",
    "end": "81150"
  },
  {
    "text": "choice by understanding the architecture and its benefits and issues and",
    "start": "81150",
    "end": "86160"
  },
  {
    "text": "hopefully you made the decision that will solve your problem and not necessarily generally more problems",
    "start": "86160",
    "end": "92580"
  },
  {
    "text": "right how many people here have already decided to go with the micro services architecture ok quite a few people ok",
    "start": "92580",
    "end": "100020"
  },
  {
    "text": "yeah so hopefully you know that's going to help you solve your problems as well but one of the first thing that you're",
    "start": "100020",
    "end": "106140"
  },
  {
    "text": "going to see when you say move into a micro services architecture is that rather than having a traditional",
    "start": "106140",
    "end": "112530"
  },
  {
    "text": "monolith where you have one application and multiple instances out of that one app to manage now we have multiple and",
    "start": "112530",
    "end": "119130"
  },
  {
    "text": "multiple services that you have to managing and every single one of these services you have to deploy multiple multiple times you need multiple",
    "start": "119130",
    "end": "125760"
  },
  {
    "text": "instances and the the number of instances you have the manage will just you know increase by a lot right and so",
    "start": "125760",
    "end": "133650"
  },
  {
    "text": "one of the first problem that you're going to see of course is that you need a way to deploy and manage your",
    "start": "133650",
    "end": "138989"
  },
  {
    "text": "applications you need to be able boy hundreds of instances potentially",
    "start": "138989",
    "end": "144120"
  },
  {
    "text": "unto a whole cluster of machines traditionally like in Java applications we typically deploy one application",
    "start": "144120",
    "end": "151560"
  },
  {
    "text": "server per machine but with these micro services you know with hundreds of them you won't have hundreds of machines to",
    "start": "151560",
    "end": "158160"
  },
  {
    "text": "run it you'll have to find a way to potentially being packed them into fewer and fewer physical resource and now you",
    "start": "158160",
    "end": "164430"
  },
  {
    "text": "have to share the resources with multiple instances of your app right so then you have to deal with isolating the",
    "start": "164430",
    "end": "171090"
  },
  {
    "text": "CPU usages and isolating the memory usages so that they don't step on each other's toes and if some of these",
    "start": "171090",
    "end": "177660"
  },
  {
    "text": "instances goes away or have issues you need an automated way to restarting them and of course you have to deal with the",
    "start": "177660",
    "end": "183480"
  },
  {
    "text": "networking of all of these as well they can be complicated however thanks to some of the toolings we can actually",
    "start": "183480",
    "end": "190230"
  },
  {
    "text": "deal with the deployments really really easily today if you're using a platform as a service that's a very easily way to",
    "start": "190230",
    "end": "196740"
  },
  {
    "text": "do it just deploy the code and the platform service will help you scale them out but you can also do it with",
    "start": "196740",
    "end": "203640"
  },
  {
    "text": "containers in continuing orchestration and kubernetes is one of the project that was open source a number of years ago and now that's almost a de-facto way",
    "start": "203640",
    "end": "211740"
  },
  {
    "text": "for people to manage their container at appointments at scale the way that you do it is by declaring a configuration",
    "start": "211740",
    "end": "219420"
  },
  {
    "text": "saying that what it is you want to deploy and how many instances you want and then declare the ways you want to",
    "start": "219420",
    "end": "225870"
  },
  {
    "text": "check for the health of this application incriminating will take care of the rest for you and deploy this onto a cluster",
    "start": "225870",
    "end": "232380"
  },
  {
    "text": "of machines and at high level this how it works so first of all you continue",
    "start": "232380",
    "end": "238080"
  },
  {
    "text": "write your application right you push it to a centralized registry somewhere so that it can be downloaded from all of",
    "start": "238080",
    "end": "243300"
  },
  {
    "text": "the other machines in your cluster the configuration that you've that you write will be pushed to a criminal's master",
    "start": "243300",
    "end": "250080"
  },
  {
    "text": "node it will be stored as a documenting key value store or something like that and then behind the scenes is a",
    "start": "250080",
    "end": "256260"
  },
  {
    "text": "scheduler that's going to basically run a loop where it's going to check whether the desired state that has been",
    "start": "256260",
    "end": "262620"
  },
  {
    "text": "configured in the file matches the actual state that's actually running on the machines and if it's not the same",
    "start": "262620",
    "end": "268860"
  },
  {
    "text": "then the scheduler is going to say oh you need two instances by there's zero running",
    "start": "268860",
    "end": "274169"
  },
  {
    "text": "I need to run two more instances how do I do that it's going to ask the machines and where you can actually run it do you",
    "start": "274169",
    "end": "279900"
  },
  {
    "text": "actually have enough capacity right and if you do is going to instruct that machine to download the content image",
    "start": "279900",
    "end": "285599"
  },
  {
    "text": "and start the instance like all these things already done these are ways that we are able to deploy and manage our",
    "start": "285599",
    "end": "293460"
  },
  {
    "text": "micro services today the most important thing here though I want everybody to",
    "start": "293460",
    "end": "298770"
  },
  {
    "text": "take away is that through the eyes of communities when I want to do this deployment I have a desire state and I'm",
    "start": "298770",
    "end": "307379"
  },
  {
    "text": "using a well-defined document basically using nouns and terminologies that",
    "start": "307379",
    "end": "313080"
  },
  {
    "text": "criminales understands I'm writing it down in a file which I can check in to",
    "start": "313080",
    "end": "318180"
  },
  {
    "text": "get or a source repository through the eyes of communities when I'm deploying this I'm dealing with the entire cluster",
    "start": "318180",
    "end": "325110"
  },
  {
    "text": "as one single unit but not individual machines right I'm also using these",
    "start": "325110",
    "end": "330180"
  },
  {
    "text": "well-defined types and api's to declare my deployment that abstracts everything",
    "start": "330180",
    "end": "336210"
  },
  {
    "text": "else away at the infrastructure level so I'm dealing with the terminology at the criminalists level but if I need to",
    "start": "336210",
    "end": "342539"
  },
  {
    "text": "deploy a load balancer rather than figuring out which actual load balancer I want to use I can just define and use",
    "start": "342539",
    "end": "349770"
  },
  {
    "text": "the name of a service that is well defined in communities and behind the scenes a plugging or a scheduler",
    "start": "349770",
    "end": "356430"
  },
  {
    "text": "controller will actually turn that service into a real low balancer and because of that it doesn't matter which",
    "start": "356430",
    "end": "362639"
  },
  {
    "text": "cloud you're running on which physical infrastructure you're running on you can deal with the application level stuff",
    "start": "362639",
    "end": "368969"
  },
  {
    "text": "with kubernetes in this world defined API and behind the scenes we will you",
    "start": "368969",
    "end": "374159"
  },
  {
    "text": "know make it into a reality and that is the abstraction of the infrastructure however I want to go just a step beyond",
    "start": "374159",
    "end": "381569"
  },
  {
    "text": "that and say that communities if you really think about how it works it's",
    "start": "381569",
    "end": "389039"
  },
  {
    "text": "almost like a I'd say but it's almost like a ERP system or a content management system so you well the",
    "start": "389039",
    "end": "396689"
  },
  {
    "text": "document are you right imagine if you are in the ERP system you say hey I need to order two widgets and you enter that",
    "start": "396689",
    "end": "404699"
  },
  {
    "text": "record into your system that's your desired State and behind the scenes somebody will",
    "start": "404699",
    "end": "410190"
  },
  {
    "text": "actually say oh I need to order two widgets let me go ahead and figure out how to get those two widgets buy it and then",
    "start": "410190",
    "end": "417030"
  },
  {
    "text": "ship it to the warehouse and I'll update the record and say it's done it's very",
    "start": "417030",
    "end": "422160"
  },
  {
    "text": "very similar incriminating if you think about this way you have a resource definition that is the well-defined",
    "start": "422160",
    "end": "427680"
  },
  {
    "text": "announced and API so we cribben ad says defined that this not defines that is our estate I need to have two instances",
    "start": "427680",
    "end": "434100"
  },
  {
    "text": "on my app you push it into the community system document is stored rather than",
    "start": "434100",
    "end": "439860"
  },
  {
    "text": "having a physical person - making into reality you have a controller a script",
    "start": "439860",
    "end": "444900"
  },
  {
    "text": "or a application that is just listening for this document request and then pushing it and making it into reality",
    "start": "444900",
    "end": "451410"
  },
  {
    "text": "right I want you to keep this in mind basically for the rest of this talk because this resource definition in the",
    "start": "451410",
    "end": "459540"
  },
  {
    "text": "control loop that's running behind the scenes and making things into reality it's really really important for",
    "start": "459540",
    "end": "464990"
  },
  {
    "text": "everything that you do within kubernetes and everything that we're doing with each do and/or if you move up the the",
    "start": "464990",
    "end": "472680"
  },
  {
    "text": "levels of abstraction in the future about key native okay so the other",
    "start": "472680",
    "end": "479520"
  },
  {
    "text": "things that you've gone to run into a pea-sized appointment of course is that",
    "start": "479520",
    "end": "484919"
  },
  {
    "text": "now rather than having the you know a your application in you know potentially libraries to be able to communicate in",
    "start": "484919",
    "end": "491370"
  },
  {
    "text": "memory and now you have to communicate across the network and of course when you're communicating across the physical",
    "start": "491370",
    "end": "497250"
  },
  {
    "text": "network you run into a couple of issues well number one you need to figure out what language you want to speak between",
    "start": "497250",
    "end": "503430"
  },
  {
    "text": "the services and you know this is a trending thing for the past you know I",
    "start": "503430",
    "end": "508770"
  },
  {
    "text": "don't know 15 years in distributed systems right first we had the binary protocol with you know our PC and our a9",
    "start": "508770",
    "end": "514740"
  },
  {
    "text": "and then we had something like XML when in soap and then now we have rest and or JSON over HTTP and of course every time",
    "start": "514740",
    "end": "522120"
  },
  {
    "text": "we have something new there is something not so good about it right and now we're kind of seeing a shift back into our PC",
    "start": "522120",
    "end": "528330"
  },
  {
    "text": "because it potentially can be more performant at Google the language that we use is called stubby it is the binary",
    "start": "528330",
    "end": "536220"
  },
  {
    "text": "protocol that we use internally but you can also find the open source project for it which is",
    "start": "536220",
    "end": "541860"
  },
  {
    "text": "our PC within Google we do 10 to the 10 RPC calls per second so we needed to",
    "start": "541860",
    "end": "547920"
  },
  {
    "text": "make sure that the the language that we have speaking between the services are as efficient as possible right but the",
    "start": "547920",
    "end": "554730"
  },
  {
    "text": "other problem of course is that now you're bound by the physical limits of your network and it's probably nowhere",
    "start": "554730",
    "end": "561810"
  },
  {
    "text": "near the speed of light for that matter right we have to deal with the latency it's not going to be in memory process",
    "start": "561810",
    "end": "569459"
  },
  {
    "text": "anymore so you have to wait for the response to come back you have to wait for the serialization and deserialization of your data and also",
    "start": "569459",
    "end": "575820"
  },
  {
    "text": "that you need to figure out how to load balance to the back end you need to if",
    "start": "575820",
    "end": "580829"
  },
  {
    "text": "the back end goes away you're gonna handle the failures of those things as well there's so many potential issues",
    "start": "580829",
    "end": "586950"
  },
  {
    "text": "that you could run into with networking now on the tip on the topic of load",
    "start": "586950",
    "end": "592110"
  },
  {
    "text": "balancing though for the longest time that I have been working in the enterprise companies the balancing had",
    "start": "592110",
    "end": "598980"
  },
  {
    "text": "always mean only one thing for me which was run robbing low balancing right every time somebody says set up a load",
    "start": "598980",
    "end": "605310"
  },
  {
    "text": "balancer we set up a run robin immobilizer but is that actually the right low balancer to use one thing I",
    "start": "605310",
    "end": "611339"
  },
  {
    "text": "never really thought about until I joined Google was that what actually defines the load right is the load per",
    "start": "611339",
    "end": "618089"
  },
  {
    "text": "request or does the request actually generate more load so some requests my junior a small load and some requests",
    "start": "618089",
    "end": "624540"
  },
  {
    "text": "might generate bigger loads right so it's something that you have to really think about how you actually want to",
    "start": "624540",
    "end": "629730"
  },
  {
    "text": "deal with low balancing and then now we also have the question of whether you use client-side load balancer or server",
    "start": "629730",
    "end": "636269"
  },
  {
    "text": "side load balancer okay or a proxy visor basically in the past I think that I",
    "start": "636269",
    "end": "641880"
  },
  {
    "text": "don't know if anyone here went through your services separation orientated architecture where you have a ESP setup",
    "start": "641880",
    "end": "647190"
  },
  {
    "text": "in your organization anyone yeah well not anymore not anymore yep so so basically",
    "start": "647190",
    "end": "652829"
  },
  {
    "text": "sometimes you may have to route all the traffic to a centralized proxy or some kind of proxy and then the proxy will",
    "start": "652829",
    "end": "659130"
  },
  {
    "text": "handle the load balancing for you or sometimes you need to do the clients a little balancing because you want to",
    "start": "659130",
    "end": "664230"
  },
  {
    "text": "avoid the extra hop to the proxy right however there are always pros and cons",
    "start": "664230",
    "end": "669899"
  },
  {
    "text": "to either approach if you're doing a client-side load balancing what I also means is that you probably will want to have full control",
    "start": "669899",
    "end": "676319"
  },
  {
    "text": "over the client because if you ever want to shift traffic from the client from an",
    "start": "676319",
    "end": "682209"
  },
  {
    "text": "old service to a newer version of the service how would you actually do that in a client side load balancer you have",
    "start": "682209",
    "end": "687610"
  },
  {
    "text": "to somehow update the registry we have to reconfigure the client side load balancer in the application and then you",
    "start": "687610",
    "end": "693850"
  },
  {
    "text": "got do the rollout on these new on these client-side application - in order to take advantage of the new services",
    "start": "693850",
    "end": "700439"
  },
  {
    "text": "however that's not always possible if you don't have full control in which case you really have to think about you",
    "start": "700439",
    "end": "705819"
  },
  {
    "text": "know your server side load balancing and how do you scale that right so there are a lot of different issues you have to consider beyond deployment which",
    "start": "705819",
    "end": "713139"
  },
  {
    "text": "communities can take care of for you another thing about micro Services is",
    "start": "713139",
    "end": "718449"
  },
  {
    "text": "now you have you know server services maybe you have some code chaining so you may only be konley see community or",
    "start": "718449",
    "end": "724540"
  },
  {
    "text": "something like that and if anywhere along that chain has a latency issue has",
    "start": "724540",
    "end": "729699"
  },
  {
    "text": "a performance issue or has some kind of outage you need to know and pinpoint exactly what that issue is otherwise the",
    "start": "729699",
    "end": "736420"
  },
  {
    "text": "problem will propagate back up to the top and it will be very very hard to figure that out and for that reason you",
    "start": "736420",
    "end": "742000"
  },
  {
    "text": "need some kind of way to observe the state of your entire architecture and in",
    "start": "742000",
    "end": "747550"
  },
  {
    "text": "most cases documentation is not enough because documentation is usually outdated by the time you write it or",
    "start": "747550",
    "end": "753610"
  },
  {
    "text": "that you know a couple months later it's not exactly how your production environment works so in the somehow you",
    "start": "753610",
    "end": "759759"
  },
  {
    "text": "need a way to see into it now for the Java world there are many many open-source tools to do some of these",
    "start": "759759",
    "end": "766329"
  },
  {
    "text": "things to take care of these cross-cutting concerns right and these are some of the popular tools especially",
    "start": "766329",
    "end": "771699"
  },
  {
    "text": "the Netflix OSS stack so for example for client-side load balancing we have ribbon and in order for the client-side",
    "start": "771699",
    "end": "778180"
  },
  {
    "text": "load balancer to figure out which backends they are they have to you know either register and will get the data from a centralized registry in this case",
    "start": "778180",
    "end": "785380"
  },
  {
    "text": "maybe Eureka or console or something else and then for handling failures of",
    "start": "785380",
    "end": "790720"
  },
  {
    "text": "you request you have something like history that does the circuit breaking and then for ability we can trace our",
    "start": "790720",
    "end": "796870"
  },
  {
    "text": "requests throughout the entire lifetime lifecycle of that and then we can store that that the traces in Zipkin or Jager",
    "start": "796870",
    "end": "802899"
  },
  {
    "text": "and so on and so forth and there are many many open-source tools that we can use some of these tools we have to put",
    "start": "802899",
    "end": "809710"
  },
  {
    "text": "directly into your micro service so your service in addition to the business logic that you have to handle which",
    "start": "809710",
    "end": "817270"
  },
  {
    "text": "should be somewhat like a single unit is probably very small hopefully but however you also have to add all of",
    "start": "817270",
    "end": "823810"
  },
  {
    "text": "these client-side logic in order to deal with some of these cross-cutting",
    "start": "823810",
    "end": "829270"
  },
  {
    "text": "concerns and now your micro service may not look so micro anymore they actually become potentially a micro service right",
    "start": "829270",
    "end": "836050"
  },
  {
    "text": "even though you're just writing the small piece of the business logic but in your application you're actually dealing",
    "start": "836050",
    "end": "841510"
  },
  {
    "text": "with all of these cross-cutting concerns and then you also have to run and manage all of these other components that makes",
    "start": "841510",
    "end": "847870"
  },
  {
    "text": "the whole architecture work right so you may have to run the Gateway in the front you need to run cortana and prometheus",
    "start": "847870",
    "end": "854140"
  },
  {
    "text": "in service registry and so on and so forth and all of a sudden you're you know just to run a few services we're",
    "start": "854140",
    "end": "859840"
  },
  {
    "text": "looking at you know and many many more that you have to run surrounding these services in order to make that",
    "start": "859840",
    "end": "865570"
  },
  {
    "text": "operational and every one of these gray boxes are also something you have to",
    "start": "865570",
    "end": "871120"
  },
  {
    "text": "keep on running so these are highly available so you need to manage two of them or if not more right so this can be",
    "start": "871120",
    "end": "878860"
  },
  {
    "text": "somewhat simple and easy.if again if you're using a real construction tool and if you're running on a single stack",
    "start": "878860",
    "end": "885010"
  },
  {
    "text": "and one of my favorite stack is of course a spring and spring booth because I'm a Java developer they make this very",
    "start": "885010",
    "end": "891370"
  },
  {
    "text": "very simple and easy to do I think that for the most people though the the problem arises when you are not on a",
    "start": "891370",
    "end": "898930"
  },
  {
    "text": "single stack just a quick question to everyone here how many people here in a organization or you only use a single",
    "start": "898930",
    "end": "905950"
  },
  {
    "text": "stack for all of your servicing application yeah one person yeah very lucky but I guess the rest of you right",
    "start": "905950",
    "end": "913060"
  },
  {
    "text": "there most of the people don't you have more than two one and two I'm one in two",
    "start": "913060",
    "end": "918700"
  },
  {
    "text": "yeah more than more than five maybe yeah some people have more than five right so what happened in is for every one of",
    "start": "918700",
    "end": "925240"
  },
  {
    "text": "this stack that you're dealing with you have to go back and figure out how do you deal with all of these cross-cutting",
    "start": "925240",
    "end": "931930"
  },
  {
    "text": "concerns do you do i do proxy do i do coin cell balancing how do i do fault tolerance how do i do observability and",
    "start": "931930",
    "end": "938200"
  },
  {
    "text": "for every one of those stack or languages you have to go and find potentially the similar solutions that",
    "start": "938200",
    "end": "944050"
  },
  {
    "text": "Java has and they maybe need to find similar solutions for your stack as well what for that language maybe you're",
    "start": "944050",
    "end": "951400"
  },
  {
    "text": "using not your spring instrument but-- maybe you're using more than one framework maybe you're using you know Java and no then you know go and PHP and",
    "start": "951400",
    "end": "958390"
  },
  {
    "text": "Python whatever and this becomes ever so difficult if you want to have all of",
    "start": "958390",
    "end": "964630"
  },
  {
    "text": "these things work nicely in your micro-services architecture now at the end of the day though I think",
    "start": "964630",
    "end": "969880"
  },
  {
    "text": "that as developers like myself oh I really want to care about is that well first of all I want to make sure that",
    "start": "969880",
    "end": "975700"
  },
  {
    "text": "the cross-cutting concerns aren't taken care of but if I'm just making a call to a service it should be as easy as you know",
    "start": "975700",
    "end": "982810"
  },
  {
    "text": "just making an HTTP call Y or a G RPC call or it should be to call to the",
    "start": "982810",
    "end": "988090"
  },
  {
    "text": "target service and hopefully those concerns will be also taken care of but",
    "start": "988090",
    "end": "993190"
  },
  {
    "text": "that's the programming model that we have today except that you know all of these components are really just you",
    "start": "993190",
    "end": "998830"
  },
  {
    "text": "know adding into your client libraries so this is where each do comes in or a service match so you will call it",
    "start": "998830",
    "end": "1005270"
  },
  {
    "text": "basically either at the very high level is that the way I can think about this when you're running your micro services",
    "start": "1005270",
    "end": "1011880"
  },
  {
    "text": "in a service match every request you make is going to flow through the FRA",
    "start": "1011880",
    "end": "1017610"
  },
  {
    "text": "break of the mesh it I know it sounds very abstract and it almost feel like I'm talking about you know we're moving",
    "start": "1017610",
    "end": "1023760"
  },
  {
    "text": "in the fabric of space-time but this will be clarified in a second and we understand exactly how this work right",
    "start": "1023760",
    "end": "1030630"
  },
  {
    "text": "so each do if you think about this and if you compare it to communities right cribben Ares was designed to run and",
    "start": "1030630",
    "end": "1038100"
  },
  {
    "text": "manage your containers through well-defined api's and terminologies and that can make them become reality",
    "start": "1038100",
    "end": "1045720"
  },
  {
    "text": "now HBO is designed to manage your service to service communication through",
    "start": "1045720",
    "end": "1051600"
  },
  {
    "text": "some well-defined terminologies as well and you can write a configuration file for each field to define what it is how",
    "start": "1051600",
    "end": "1058920"
  },
  {
    "text": "it is that you want the services to communicate and the Eastfield will make that and become a reality and it's the",
    "start": "1058920",
    "end": "1065250"
  },
  {
    "text": "open source project that was the open source originally by Google IBM and lyft and it was designed to run in different",
    "start": "1065250",
    "end": "1071610"
  },
  {
    "text": "environments including companies but also beyond our self criminales is just that for the",
    "start": "1071610",
    "end": "1077889"
  },
  {
    "text": "first version they really just focused on running this ultra manatees first but this can actually work in environments",
    "start": "1077889",
    "end": "1084729"
  },
  {
    "text": "outside of communities as well now if you think about urban 80s in the way",
    "start": "1084729",
    "end": "1090399"
  },
  {
    "text": "that works right you have the well-defined API you push it into communities that is what we call the",
    "start": "1090399",
    "end": "1096639"
  },
  {
    "text": "control point a control plan then we'll take that configuration in you know",
    "start": "1096639",
    "end": "1102190"
  },
  {
    "text": "create a reality that is what we code the data plane or the serving plane or the data path right so if you want a",
    "start": "1102190",
    "end": "1108580"
  },
  {
    "text": "load balancer you write the definition you send it to the control plan and we will create a physical load balancer",
    "start": "1108580",
    "end": "1114070"
  },
  {
    "text": "that becomes the data path and for that reason if the control plane goes down the data path is will still be there it",
    "start": "1114070",
    "end": "1121210"
  },
  {
    "text": "just you do you lose control on how to manage this data path until the control planes comes out so Ethio is then the",
    "start": "1121210",
    "end": "1128710"
  },
  {
    "text": "control plan for service to service communication and the way that we can do it is by allowing you to write rather",
    "start": "1128710",
    "end": "1136359"
  },
  {
    "text": "than writing the deployment descriptors we can allow you to write routing descriptors or in a circuit breaking",
    "start": "1136359",
    "end": "1142599"
  },
  {
    "text": "descriptors and then through the control plan will configure your applications to to behave in those way so you want that",
    "start": "1142599",
    "end": "1150639"
  },
  {
    "text": "you have in your configuration and the way that we're doing this is a couple of steps or number one is that rather than",
    "start": "1150639",
    "end": "1157330"
  },
  {
    "text": "having some of these client-side libraries are you include in your application we push all of these logic",
    "start": "1157330",
    "end": "1164940"
  },
  {
    "text": "into a dedicated proxy that's specific to your service okay so all of these",
    "start": "1164940",
    "end": "1171729"
  },
  {
    "text": "circle breaking rules the clients that load balancers potentially the ability to push traces to your to your tracers",
    "start": "1171729",
    "end": "1178989"
  },
  {
    "text": "all of these logic can be pushed into a dedicated proxy so we take that away",
    "start": "1178989",
    "end": "1184269"
  },
  {
    "text": "from your application client libraries and we push it to a separate component code the proxy and this proxy is based",
    "start": "1184269",
    "end": "1192849"
  },
  {
    "text": "on a C++ proxy that was originally written by lift right it doesn't make a lot of sense to take away you know 80",
    "start": "1192849",
    "end": "1199570"
  },
  {
    "text": "megabytes off jar and give you a 300 megabytes ESB so this is actually a very small proxy",
    "start": "1199570",
    "end": "1205960"
  },
  {
    "text": "right so we're taking away some of the jars in the pushing into a proxy and this is a small proxy",
    "start": "1205960",
    "end": "1211750"
  },
  {
    "text": "that's made to be very efficient and it's also a battle-tested in a production environment and this",
    "start": "1211750",
    "end": "1216909"
  },
  {
    "text": "proxy can do a lot of things for you right the things that we thought about to add into our client-side application",
    "start": "1216909",
    "end": "1223840"
  },
  {
    "text": "this proxy can actually do all of those things so this proxy can low balance for you this proxy can do TOS termination",
    "start": "1223840",
    "end": "1230529"
  },
  {
    "text": "this proxy can handle circuit breaking and health checks and so on and so forth now some of these might sound a little",
    "start": "1230529",
    "end": "1237519"
  },
  {
    "text": "you know like if I were to think about the old day seeing services service-oriented architecture some of",
    "start": "1237519",
    "end": "1244630"
  },
  {
    "text": "these things might sound like a ye SP right enterprise service bus and but I can guarantee you come on T you that",
    "start": "1244630",
    "end": "1251440"
  },
  {
    "text": "that's not the case right right because that would be a little scary right you know ESB the problem is that they also promised to handle a lot of these",
    "start": "1251440",
    "end": "1258250"
  },
  {
    "text": "things in those routing and you know all of these things that you can apply to the ESB but in the traditional ESP deployment",
    "start": "1258250",
    "end": "1265029"
  },
  {
    "text": "you have a single or a couple of ESP instances and oh the traffic is routed",
    "start": "1265029",
    "end": "1270820"
  },
  {
    "text": "to that and the ESP s of a sudden become a bottleneck for your entire solar",
    "start": "1270820",
    "end": "1276429"
  },
  {
    "text": "deployment now the way that each deal works is that we actually deploy a proxy instance for every one of your micro",
    "start": "1276429",
    "end": "1283600"
  },
  {
    "text": "service instance what that means is that rather than having one or two proxies if you have a thousand micro services you",
    "start": "1283600",
    "end": "1289510"
  },
  {
    "text": "get a thousand proxy in the typical default deployment so every one of your micro service instance will have a proxy",
    "start": "1289510",
    "end": "1296860"
  },
  {
    "text": "running right alongside of it in the way that we're doing this is by using the sidecar pattern that we kind of",
    "start": "1296860",
    "end": "1303010"
  },
  {
    "text": "introduced intranet ease with you the concept of a pod so basically we can run",
    "start": "1303010",
    "end": "1308590"
  },
  {
    "text": "your application container and then attach a sidecar container right next to it and together they are known as a pod",
    "start": "1308590",
    "end": "1315070"
  },
  {
    "text": "and this is the single unit that communities can schedule on to the same physical resource so when you run a",
    "start": "1315070",
    "end": "1322059"
  },
  {
    "text": "sidecar container inside the pod what that means is our current seed to schedule this proxy right next to your",
    "start": "1322059",
    "end": "1329200"
  },
  {
    "text": "application your service on the same physical resource sharing the same network interface and also sharing the",
    "start": "1329200",
    "end": "1335679"
  },
  {
    "text": "same value amounts if you want and what I also means is that when the micro service a makes the code to the proxy is",
    "start": "1335679",
    "end": "1342010"
  },
  {
    "text": "actually done through a local channel it's not it's actually not gonna go over the physical",
    "start": "1342010",
    "end": "1347920"
  },
  {
    "text": "network it's just going to be somewhat optimized by the kernel so it's going to be routed directly to the proxy through",
    "start": "1347920",
    "end": "1354940"
  },
  {
    "text": "the local networks okay and so what that also means is that when we deploy this",
    "start": "1354940",
    "end": "1360550"
  },
  {
    "text": "in ink ribbon Ares the the descriptors that we write we can push it to communities and they remember about the",
    "start": "1360550",
    "end": "1367990"
  },
  {
    "text": "the control loop and how the controller takes that the the descriptors and make it that make that into a reality the way",
    "start": "1367990",
    "end": "1374320"
  },
  {
    "text": "that we configure these proxies is by you know then writing this yellow files potentially and then pushing into",
    "start": "1374320",
    "end": "1380560"
  },
  {
    "text": "kubernetes and the controller is known as the Easter Pilate and Pilate will read this configuration and then",
    "start": "1380560",
    "end": "1386650"
  },
  {
    "text": "propagate the configuration to the proxies the way that the proxies can understand okay and for that reason the",
    "start": "1386650",
    "end": "1394210"
  },
  {
    "text": "proxies are also interchangeable today we're using envoy by default it's also possible potentially to use other",
    "start": "1394210",
    "end": "1399970"
  },
  {
    "text": "proxies as well right because each do pilot is the one that will translate the",
    "start": "1399970",
    "end": "1405100"
  },
  {
    "text": "configuration that we have and then pushing it down to the configuration that every one of these proxies will not",
    "start": "1405100",
    "end": "1410830"
  },
  {
    "text": "stand in rather than using some additional server discovery mechanisms or configuration centralized",
    "start": "1410830",
    "end": "1416890"
  },
  {
    "text": "configuration mechanism if you're running inside of communities then some of the mechanisms already provided by",
    "start": "1416890",
    "end": "1423370"
  },
  {
    "text": "the communities environment already so for separatory we can use use community service for configuration we can just",
    "start": "1423370",
    "end": "1429490"
  },
  {
    "text": "use kubernetes config map and that will somehow simplify your environment quite a bit so the way that this actually",
    "start": "1429490",
    "end": "1437200"
  },
  {
    "text": "works is like this so remember we deploy a proxy instance for every one of your micro service and they are all",
    "start": "1437200",
    "end": "1443170"
  },
  {
    "text": "centralized centrally managed by the eesti or pilot so if your pilot will propagate the configuration to every one",
    "start": "1443170",
    "end": "1449620"
  },
  {
    "text": "of these proxies however one of the things that we do is that if when you make a call for micro service a to B for",
    "start": "1449620",
    "end": "1456310"
  },
  {
    "text": "example we will seamlessly intercept this request by using IP table rows or",
    "start": "1456310",
    "end": "1463030"
  },
  {
    "text": "simulus intercept all of the connections and so naturally the connection to service fee will be intercept",
    "start": "1463030",
    "end": "1469090"
  },
  {
    "text": "intercepted by the proxy and the proxy will examine this payload and then is going to say oh so this for this request",
    "start": "1469090",
    "end": "1476500"
  },
  {
    "text": "you to service B and the proxy would understand where other backends are and",
    "start": "1476500",
    "end": "1482019"
  },
  {
    "text": "the proxy will then make the decision on how to low balance based on your configuration and then it's going to",
    "start": "1482019",
    "end": "1487690"
  },
  {
    "text": "pick one of the backend and route the traffic to that back end and the back end that receive this request of course",
    "start": "1487690",
    "end": "1494109"
  },
  {
    "text": "the incoming connection will also be intercepted by the proxy as well and at this point proxy can decide whether",
    "start": "1494109",
    "end": "1500320"
  },
  {
    "text": "servers can can actually make the call so the process can do some policy checks to make sure that this coking actually",
    "start": "1500320",
    "end": "1506379"
  },
  {
    "text": "happen and if it can the proxy will then forward the request to the actual instance on the backend and that is how",
    "start": "1506379",
    "end": "1513190"
  },
  {
    "text": "it works in this fabric right so every request will be captured and processed",
    "start": "1513190",
    "end": "1519549"
  },
  {
    "text": "by the proxy in this case and then we can do very very interesting things now if you are a Java developer you probably",
    "start": "1519549",
    "end": "1525659"
  },
  {
    "text": "know the concept of AOP aspect oriented programming that is how we used to deal",
    "start": "1525659",
    "end": "1531909"
  },
  {
    "text": "with dealing with cross-cutting concerns we'll wrap some common logic across you",
    "start": "1531909",
    "end": "1537249"
  },
  {
    "text": "know all of the methods that do the similar things now this mat rebeaud one's coded the AOP for microservices or",
    "start": "1537249",
    "end": "1544989"
  },
  {
    "text": "basically wrapping in capturing the requests and filtering them through before we passing alone to the backend",
    "start": "1544989",
    "end": "1550989"
  },
  {
    "text": "okay now if the proxy knows about everything that's happening then we can",
    "start": "1550989",
    "end": "1557470"
  },
  {
    "text": "start to ask interesting questions who is actually talking to me well the proxy",
    "start": "1557470",
    "end": "1562960"
  },
  {
    "text": "knows because proxy knows who made the call and the proxy knows who the co was routed to how long did that request take",
    "start": "1562960",
    "end": "1569799"
  },
  {
    "text": "what the proxy has received the request that the original request the proxy",
    "start": "1569799",
    "end": "1574989"
  },
  {
    "text": "knows when the response came back so the proxy knows the latency and that can be exposed to Prometheus and they can be",
    "start": "1574989",
    "end": "1582489"
  },
  {
    "text": "captured and shared and analyzed if you need to know like if you need to have an",
    "start": "1582489",
    "end": "1589269"
  },
  {
    "text": "entire chain of the calls to be traced well if you pass along the right headers the proxy can capture these traces and",
    "start": "1589269",
    "end": "1596259"
  },
  {
    "text": "propagate out to the trace door like Zipkin war Jaeger but one of the most important one for me is that through the",
    "start": "1596259",
    "end": "1604119"
  },
  {
    "text": "proxy through this communication mechanism the the ones that's here locally right they can be playing HTTP",
    "start": "1604119",
    "end": "1609849"
  },
  {
    "text": "but go over the wire over on trust and network that is where you may actually want to encrypt your communication and",
    "start": "1609849",
    "end": "1617730"
  },
  {
    "text": "if you want to do it by yourself that may be very difficult to provide mutual",
    "start": "1617730",
    "end": "1623950"
  },
  {
    "text": "TOS library or whatever like dealing this with yourself or between services through the use of each do we can",
    "start": "1623950",
    "end": "1631000"
  },
  {
    "text": "actually provide mutual TOS connections seamlessly between your services because when you talk from A to B from your",
    "start": "1631000",
    "end": "1637990"
  },
  {
    "text": "application perspective is really just a regular HTTP call but through the proxy they can actually be configured with",
    "start": "1637990",
    "end": "1643570"
  },
  {
    "text": "mutual TOS through a centralized certificate authority so that they can exchange the certificate and they can",
    "start": "1643570",
    "end": "1650350"
  },
  {
    "text": "negotiate that mutual TLS connection and you can do all of these things seamlessly and that is really the magic",
    "start": "1650350",
    "end": "1656379"
  },
  {
    "text": "behind the scenes in a SEO service match now how does this all work I'm just",
    "start": "1656379",
    "end": "1663190"
  },
  {
    "text": "gonna do a very very quick demo and I've been thinking through like how do I demo this best I want to write something",
    "start": "1663190",
    "end": "1669580"
  },
  {
    "text": "that's most simple most basic with no magic whatsoever I'm not gonna add any additional client libraries behind these",
    "start": "1669580",
    "end": "1675639"
  },
  {
    "text": "things and of course I can do this in PHP or go or note but I don't know any of those languages well so that's gonna",
    "start": "1675639",
    "end": "1682299"
  },
  {
    "text": "be a issue for me some about writing Java okay I'm gonna use the most basic Java libraries that we can think of and then",
    "start": "1682299",
    "end": "1688210"
  },
  {
    "text": "I'm thinking about writing to services so I thought oh maybe I can write a work service so I'm gonna have a work server",
    "start": "1688210",
    "end": "1694240"
  },
  {
    "text": "and I think about what is work work could just be a series of meaningless",
    "start": "1694240",
    "end": "1699909"
  },
  {
    "text": "meetings every day and so for that reason I'm going to write a meeting service as well okay so what it is that",
    "start": "1699909",
    "end": "1706809"
  },
  {
    "text": "we're going to write is a work server that will call meeting server a couple of times okay now I'm going to use the",
    "start": "1706809",
    "end": "1713379"
  },
  {
    "text": "most basic stuff here that you should probably never use I'm gonna use the sound HTTP server in the JDK which probably is not production already so",
    "start": "1713379",
    "end": "1719740"
  },
  {
    "text": "don't use it if you if you want to try this out so do it in some other service if you",
    "start": "1719740",
    "end": "1725500"
  },
  {
    "text": "want but this is pretty easy to do so I'm going to write a new server here I'm gonna say server is equal to HD server",
    "start": "1725500",
    "end": "1731919"
  },
  {
    "text": "I'm going to create a new server here I'm going to listen on port 8081 and I need to give it a backlog here and",
    "start": "1731919",
    "end": "1738220"
  },
  {
    "text": "that's it and I can go ahead and start the server also and then the server will have to handle some",
    "start": "1738220",
    "end": "1744070"
  },
  {
    "text": "request here and it's going to taking an exchange like that and the exchange is",
    "start": "1744070",
    "end": "1750249"
  },
  {
    "text": "where we can send it our back and stuff like that now I don't know about you in terms of what you doing a meeting this is what I",
    "start": "1750249",
    "end": "1757239"
  },
  {
    "text": "do usually there you go right yeah there we go oh and of course it's gonna be some",
    "start": "1757239",
    "end": "1765070"
  },
  {
    "text": "exception here let me see us around again I don't know what you do with the exceptions this is what I do usually",
    "start": "1765070",
    "end": "1770080"
  },
  {
    "text": "there we go and then I can go ahead and send back that if I successfully slept",
    "start": "1770080",
    "end": "1775359"
  },
  {
    "text": "through my meeting without getting fired and gonna send back 200 okay yeah everything's good and I am going to",
    "start": "1775359",
    "end": "1781529"
  },
  {
    "text": "close this connection in that city right now it's a very simple server that I can",
    "start": "1781529",
    "end": "1786940"
  },
  {
    "text": "write I'm going to go ahead and try to run it how many people think this will just work nobody wow that's a tough",
    "start": "1786940",
    "end": "1793330"
  },
  {
    "text": "crowd alright so if you started this application and it seems like it's working let me go ahead and make the",
    "start": "1793330",
    "end": "1800349"
  },
  {
    "text": "request I'm gonna say curl localhost:8080 one and meet and of course it doesn't return anything but I",
    "start": "1800349",
    "end": "1806590"
  },
  {
    "text": "should be able to see that this little handler is left through 250 milliseconds which is not too bad and then we just",
    "start": "1806590",
    "end": "1813429"
  },
  {
    "text": "need to go ahead and do this on the work on the work side which I'm going to make a couple of coats now because of the",
    "start": "1813429",
    "end": "1819429"
  },
  {
    "text": "time I'm gonna cheat a little bit I'm gonna just make code up here magically alright so number one we need to create",
    "start": "1819429",
    "end": "1824979"
  },
  {
    "text": "an HTTP client and this client is going to it has to be a HTTP 1.1 client if you",
    "start": "1824979",
    "end": "1830979"
  },
  {
    "text": "try to make a call in the server's match with HTTP 1.0 it's probably not going to",
    "start": "1830979",
    "end": "1836019"
  },
  {
    "text": "work so make sure it's HTTP 1.1 and then we're going to let me see here mate",
    "start": "1836019",
    "end": "1841749"
  },
  {
    "text": "there pewters with a new request and for this one we're going to use an endpoint which is configurable on the top so here",
    "start": "1841749",
    "end": "1849039"
  },
  {
    "text": "which is going to be calling HTTP and then calling the endpoint slash meet and then we're going to code the meeting",
    "start": "1849039",
    "end": "1855909"
  },
  {
    "text": "method for times I'm going to route it you know four times and then for each time I'm going to send a request and then if I get the 200 response I'm going",
    "start": "1855909",
    "end": "1864159"
  },
  {
    "text": "to say meeting plus plus and we're going to count the number of times that I successful you want to the meeting and slab without getting fired and I am",
    "start": "1864159",
    "end": "1870909"
  },
  {
    "text": "going to here's the most important part in the holy steel thing if you want this to be tracing that is that in each",
    "start": "1870909",
    "end": "1878470"
  },
  {
    "text": "you have to propagate the headers if you want to trace across your requests and",
    "start": "1878470",
    "end": "1884109"
  },
  {
    "text": "there are a number of headers you have to propagate so your application is responsible for receiving the headers",
    "start": "1884109",
    "end": "1891820"
  },
  {
    "text": "that will be generated by each do so these are the header is the xp3 headers that's the the standard ones and then",
    "start": "1891820",
    "end": "1898210"
  },
  {
    "text": "you also need to get the some of the additional one like OTS pay and contacts in Ex request ID you need to capture",
    "start": "1898210",
    "end": "1905470"
  },
  {
    "text": "these headers so if these headers don't exist each deal will generally for you if it does exist then you do need to propagate",
    "start": "1905470",
    "end": "1911859"
  },
  {
    "text": "it down so in this case what word only needs to basically iterate through the header making sure that if it's actually",
    "start": "1911859",
    "end": "1917470"
  },
  {
    "text": "there I'm going to set the header in propagating it to the next request okay",
    "start": "1917470",
    "end": "1922539"
  },
  {
    "text": "and that is really oh I'm going to do and I'm going to go ahead and run this work server as well and let's see if",
    "start": "1922539",
    "end": "1929470"
  },
  {
    "text": "that actually will work so this is up and running I'm going to just go curl",
    "start": "1929470",
    "end": "1934539"
  },
  {
    "text": "localhost 8080 and slash work and hopefully if that works we can see that",
    "start": "1934539",
    "end": "1940299"
  },
  {
    "text": "we made the code to the backend four times and 250 milliseconds each so four times that's about a second in total you",
    "start": "1940299",
    "end": "1947139"
  },
  {
    "text": "know we can see that this actually works however if I actually go ahead and stop the backend now if I make the call the",
    "start": "1947139",
    "end": "1956830"
  },
  {
    "text": "error kind of Papa get a kid back all the way back up to you my to the very first service right because there's no",
    "start": "1956830",
    "end": "1962799"
  },
  {
    "text": "circuit breaking here there's no magic of course if the connection doesn't work it doesn't work but we're going to",
    "start": "1962799",
    "end": "1968289"
  },
  {
    "text": "deploy this same application into the Eastern environment through communities right now okay the one we're going to do it is by just",
    "start": "1968289",
    "end": "1975369"
  },
  {
    "text": "basically only gonna compile clean compile and I'm going to build a",
    "start": "1975369",
    "end": "1980409"
  },
  {
    "text": "container in by building content I'm gonna use this little tool called jib ji B this is a open source project from",
    "start": "1980409",
    "end": "1987549"
  },
  {
    "text": "Google who did we go there this so by using jib I can actually build a",
    "start": "1987549",
    "end": "1993129"
  },
  {
    "text": "container without doctor installed locally on my machine and this will push this container image directly to the",
    "start": "1993129",
    "end": "1999519"
  },
  {
    "text": "registry and it's done right so basically what I'm doing is I'm compiling the classes and then I just",
    "start": "1999519",
    "end": "2005399"
  },
  {
    "text": "created the container to ship and it's pushed directly to the registry in",
    "start": "2005399",
    "end": "2010450"
  },
  {
    "text": "in here right so that's on my docker hub right now okay and I'm going to do the same thing for my work server so just to",
    "start": "2010450",
    "end": "2016330"
  },
  {
    "text": "make sure I don't see them I'm gonna clean it and then compile it and I'm going to jib Butte now just to show you",
    "start": "2016330",
    "end": "2021580"
  },
  {
    "text": "how small this application is package it up to your jar file just so you can see",
    "start": "2021580",
    "end": "2026710"
  },
  {
    "text": "what that looks like so this little micro service that has no magic behind",
    "start": "2026710",
    "end": "2032440"
  },
  {
    "text": "it has we created this jar file and this jar file is only about 3.3 K right",
    "start": "2032440",
    "end": "2038710"
  },
  {
    "text": "rather than you know tens of megabytes to do something pretty simple it's really really small because we were just",
    "start": "2038710",
    "end": "2044830"
  },
  {
    "text": "using all the box functionality from the JDK and similarly for the work server that's done I push everything to",
    "start": "2044830",
    "end": "2051368"
  },
  {
    "text": "kubernetes now the way I'm going to deploy it into kubernetes is of course",
    "start": "2051369",
    "end": "2056740"
  },
  {
    "text": "by using the well defined API stack turbinates offers and in this case for example if I want to deploy the work",
    "start": "2056740",
    "end": "2063898"
  },
  {
    "text": "image this one I'm going to do I'm going to die I'm going to deploy two instances",
    "start": "2063899",
    "end": "2069908"
  },
  {
    "text": "of my work image and the name of image is here right so that's the name of the",
    "start": "2069909",
    "end": "2075069"
  },
  {
    "text": "image here which I just created and I'm going to configure the end point so that it can use kubernetes service discovery",
    "start": "2075069",
    "end": "2081158"
  },
  {
    "text": "out-of-the-box basically I need to do is to say code the meeting server because I'm going to define a meeting service right and then",
    "start": "2081159",
    "end": "2089079"
  },
  {
    "text": "in the service here let me see here a meeting is VC alright so for example for",
    "start": "2089079",
    "end": "2094480"
  },
  {
    "text": "the meeting server I can define the service this is a service kind right here and this wall behind the scenes",
    "start": "2094480",
    "end": "2100720"
  },
  {
    "text": "create a little balancer for me they will listen on port 8081 it will route to my target port 8081 and",
    "start": "2100720",
    "end": "2106569"
  },
  {
    "text": "then we route to the back end by using the labels so I'm going to go ahead and deploy the whole thing let me make sure",
    "start": "2106569",
    "end": "2112540"
  },
  {
    "text": "I'm connected to my communities cluster now in order for each do to take place remember",
    "start": "2112540",
    "end": "2118660"
  },
  {
    "text": "we somehow need to get the proxy deployed alongside of my micro service",
    "start": "2118660",
    "end": "2124420"
  },
  {
    "text": "now if you notice that in this particular deployment descriptor in the",
    "start": "2124420",
    "end": "2129849"
  },
  {
    "text": "containers only have one container right so there's the container I have which is the work server and that's the container I'm",
    "start": "2129849",
    "end": "2135670"
  },
  {
    "text": "going to run how does the proxy actually get in there well to do that you have",
    "start": "2135670",
    "end": "2142150"
  },
  {
    "text": "two ways one is by injecting proxy manually so there's a little utility called East ioctl and from here",
    "start": "2142150",
    "end": "2149140"
  },
  {
    "text": "you can do a cube inject it can give it a file that is a criminalist appointment and if I look at what this filter does",
    "start": "2149140",
    "end": "2156369"
  },
  {
    "text": "is that your filter through your existing descriptors and then it will keep all of the existing configurations",
    "start": "2156369",
    "end": "2162729"
  },
  {
    "text": "like here we have the image that employee names but if I scroll down a little bit this filter will inject a",
    "start": "2162729",
    "end": "2170109"
  },
  {
    "text": "second container inside of the same pod and that would be the proxy container that all the traffic will be routed",
    "start": "2170109",
    "end": "2177670"
  },
  {
    "text": "through ok and if I scroll down even a little bit more what we're going to see is this thing called the initialization",
    "start": "2177670",
    "end": "2184150"
  },
  {
    "text": "container which is right here and this container will be started way before either of the previous to continue a",
    "start": "2184150",
    "end": "2190900"
  },
  {
    "text": "start so the application in the proxy will start only after this container is started successfully and the in a",
    "start": "2190900",
    "end": "2196509"
  },
  {
    "text": "container here is going to configure the IP table rows what this will do is to basically configure a rule that will",
    "start": "2196509",
    "end": "2203049"
  },
  {
    "text": "redirect all the connections to the proxy port 15,000 and one okay and that",
    "start": "2203049",
    "end": "2209049"
  },
  {
    "text": "is how we can inject the proxy intercept of the traffic as the the the requests",
    "start": "2209049",
    "end": "2214479"
  },
  {
    "text": "are flowing through now another way of doing this is by using what we call automatic injection so I have configured",
    "start": "2214479",
    "end": "2220119"
  },
  {
    "text": "my cribben in this culture so that there say what we call imitating admission webhook increment is basically anything",
    "start": "2220119",
    "end": "2225940"
  },
  {
    "text": "that we deploy into this environment if I'm deploying into a namespace or with",
    "start": "2225940",
    "end": "2232329"
  },
  {
    "text": "with certain labels enabled the webhook will be will take take take effect what that means is that kubernetes will",
    "start": "2232329",
    "end": "2238569"
  },
  {
    "text": "intercept potentially the deployment of my application and then we'll run through the cubing jack locally I'm",
    "start": "2238569",
    "end": "2244749"
  },
  {
    "text": "sorry it will run through the cubing check on the server-side and then generate a producing a new descriptor",
    "start": "2244749",
    "end": "2251650"
  },
  {
    "text": "and updating my configuration as I'm Deponia okay so I'm going to show how",
    "start": "2251650",
    "end": "2257410"
  },
  {
    "text": "that works and I already have this configured so I'm just go ahead and deploy this whole thing some go to poi",
    "start": "2257410",
    "end": "2264519"
  },
  {
    "text": "postal work in the meeting server behind the scenes right and now if I go ahead remember in the yellow file I only have",
    "start": "2264519",
    "end": "2270309"
  },
  {
    "text": "one container but if I go and see the status of this deployment we can",
    "start": "2270309",
    "end": "2275469"
  },
  {
    "text": "actually see that there are two containers running that is because my environment have been set up with automatic injection so we",
    "start": "2275469",
    "end": "2282220"
  },
  {
    "text": "automatically injected the e steel proxies behind the scenes for every one of these micro services that's why every",
    "start": "2282220",
    "end": "2288819"
  },
  {
    "text": "one of these instances have two containers one of them is the application the other one is the proxy and of course the initialization",
    "start": "2288819",
    "end": "2294839"
  },
  {
    "text": "container also ran and so this is all being set up properly and of course I",
    "start": "2294839",
    "end": "2300640"
  },
  {
    "text": "can go ahead and check out if I can connect to it so for that I'm going to get into the shell that is inside the",
    "start": "2300640",
    "end": "2305980"
  },
  {
    "text": "cluster and then maybe I can make a call and through communities native service",
    "start": "2305980",
    "end": "2312220"
  },
  {
    "text": "discovery I can use the dns name called work server sorry works server and port",
    "start": "2312220",
    "end": "2317559"
  },
  {
    "text": "8080 that's the way I define my service I'm going to call work and hopefully this work and oh thank you nice yeah it",
    "start": "2317559",
    "end": "2326410"
  },
  {
    "text": "was a little slow the first time but it worked yeah not bad and we can see that this is working pretty well right so this is",
    "start": "2326410",
    "end": "2333099"
  },
  {
    "text": "just going through the environment however at this very moment this is already running on each deal this is",
    "start": "2333099",
    "end": "2340329"
  },
  {
    "text": "every request I'm making at this very moment it's already intercepted by the east EO proxies and you can see how",
    "start": "2340329",
    "end": "2346930"
  },
  {
    "text": "transparent this is while making this call even this show right now is intercepted by HDL - what that also",
    "start": "2346930",
    "end": "2355239"
  },
  {
    "text": "means is that now I can use the well defined terminologies that each still provides me through the idea of a custom",
    "start": "2355239",
    "end": "2362859"
  },
  {
    "text": "resource definition I can do interesting things so for example if I want to expose the work service on the public",
    "start": "2362859",
    "end": "2370720"
  },
  {
    "text": "Internet I can route it through the e steel ingress gateway and in order for",
    "start": "2370720",
    "end": "2376420"
  },
  {
    "text": "that to happen I need to define a new gateway I need to bind the Gateway to a hostname so here I'm fighting to star",
    "start": "2376420",
    "end": "2383980"
  },
  {
    "text": "that means I'm gonna listen to every single host name that comes through the IP address but imagine if you have virtual IP sorry virtual hosting where",
    "start": "2383980",
    "end": "2392200"
  },
  {
    "text": "you do have different host names we can route the different host names to the same IP to the same ingress and East you",
    "start": "2392200",
    "end": "2397690"
  },
  {
    "text": "can route the traffic based on these virtual host names as well and we're going to define that we're going to",
    "start": "2397690",
    "end": "2402730"
  },
  {
    "text": "listen on port 80 as well so I'm going to go ahead and apply the Gateway and what this will do is to say hey each do",
    "start": "2402730",
    "end": "2410440"
  },
  {
    "text": "I have I want you listen to traffic on your public IP address okay and then the second thing",
    "start": "2410440",
    "end": "2416799"
  },
  {
    "text": "that we can do is that we can't define these things called virtual service where virtual service in East EO",
    "start": "2416799",
    "end": "2422140"
  },
  {
    "text": "terminology is really just a way for you to define what you want to do how you want to route your traffic okay so in",
    "start": "2422140",
    "end": "2428619"
  },
  {
    "text": "this particular case I'm going to define a new virtual service that is called the work server and we're going to say any",
    "start": "2428619",
    "end": "2435039"
  },
  {
    "text": "request that comes in on slash work I'm going to route to the work server",
    "start": "2435039",
    "end": "2441210"
  },
  {
    "text": "backends that I already deployed and because I want this to be exposed on the",
    "start": "2441210",
    "end": "2446259"
  },
  {
    "text": "public facing ingress I'm also going to bind it to the gateway that I just created right if I don't find it at the",
    "start": "2446259",
    "end": "2453160"
  },
  {
    "text": "gateway the work the virtual service is so internal but if I pan it to the Gateway then it becomes public so let me",
    "start": "2453160",
    "end": "2458950"
  },
  {
    "text": "go ahead and try this I'm going to bind this to the Gateway and I'm going to apply this configuration I remember how",
    "start": "2458950",
    "end": "2464200"
  },
  {
    "text": "this works apply the configuration I send it to kubernetes East your pilot gets this configuration understands what",
    "start": "2464200",
    "end": "2471130"
  },
  {
    "text": "it is that you want in the desire state and then goes back and configures the proxy accordingly ok so then all of",
    "start": "2471130",
    "end": "2477339"
  },
  {
    "text": "these configuration will be applied and because of that I should be able to make the Kuril request to my Gateway so let",
    "start": "2477339",
    "end": "2484569"
  },
  {
    "text": "me go ahead and try that let me see if I can find micro to the IP no I can so let",
    "start": "2484569",
    "end": "2490480"
  },
  {
    "text": "me go ahead and find the IP address here so this is actually service as in the east eel system let me see here yeah SVC",
    "start": "2490480",
    "end": "2498430"
  },
  {
    "text": "and there will be a IP address that's associated with the east eel ingress gateway which is that one and the IP",
    "start": "2498430",
    "end": "2505299"
  },
  {
    "text": "address is that so what I can do then is I can do a curl that and then work now",
    "start": "2505299",
    "end": "2511809"
  },
  {
    "text": "remember this goes through the ingress gateway goes to the virtual service definition we're capturing the slash",
    "start": "2511809",
    "end": "2517000"
  },
  {
    "text": "work your I we're matching on the URI and then for date to the work service and now it's routed to the work server",
    "start": "2517000",
    "end": "2524500"
  },
  {
    "text": "and in the work server actually called the meeting server four times right and that is what happened behind the scenes",
    "start": "2524500",
    "end": "2529660"
  },
  {
    "text": "now I'm going to put this into a while loop that's the same IP right yep now put this into a while loop so we can see",
    "start": "2529660",
    "end": "2536200"
  },
  {
    "text": "what happens then so here we go so this is a while loop you can see that I'm attending four meetings right now",
    "start": "2536200",
    "end": "2542170"
  },
  {
    "text": "right then we interesting things so for example if if",
    "start": "2542170",
    "end": "2548980"
  },
  {
    "text": "I want to introduce a chaos monkey in this case because I want to have fun and",
    "start": "2548980",
    "end": "2554680"
  },
  {
    "text": "if I want to you know basically test the resiliency of my application or if I",
    "start": "2554680",
    "end": "2559990"
  },
  {
    "text": "just want to have fun I can tell Easter I can write a configuration here for my virtual service here remember this is",
    "start": "2559990",
    "end": "2566890"
  },
  {
    "text": "how we decide how to route so in this case I'm going to say anything that's been routed to a meeting server I want",
    "start": "2566890",
    "end": "2574030"
  },
  {
    "text": "to fail it 100% of the time okay this is just for fun and remember how this works",
    "start": "2574030",
    "end": "2580060"
  },
  {
    "text": "again as soon as you apply this configuration each to your pilot picks it up right and we configure all the",
    "start": "2580060",
    "end": "2585700"
  },
  {
    "text": "proxies and now very quickly the proxy tastes the configuration and now odour",
    "start": "2585700",
    "end": "2591060"
  },
  {
    "text": "requests to the meeting server is now failing with the 503 right and you'd be",
    "start": "2591060",
    "end": "2596380"
  },
  {
    "text": "like that was funny like we're trying to work let's get rid of it right then you can say well let me get rid of this rule and it comes back right",
    "start": "2596380",
    "end": "2604600"
  },
  {
    "text": "it's not simple and with the same mechanism it's what we can do we can actually deploy two versions of my",
    "start": "2604600",
    "end": "2611260"
  },
  {
    "text": "service so what I'm going to do is to deploy a second version of my work",
    "start": "2611260",
    "end": "2616270"
  },
  {
    "text": "service let me see here v2 now apply the second version and the second version of",
    "start": "2616270",
    "end": "2622450"
  },
  {
    "text": "the work is basically when I work really really hard there we go oh did I not deploy something properly",
    "start": "2622450",
    "end": "2629770"
  },
  {
    "text": "there we go aha so this is where I working really really hard so when I'm working hard I",
    "start": "2629770",
    "end": "2634840"
  },
  {
    "text": "go to eight meetings I'm not working so hard I only go to four okay so you can see how this is being low balanced",
    "start": "2634840",
    "end": "2641710"
  },
  {
    "text": "across the different services and you can also see that it's a little bit deterministic that is also because by",
    "start": "2641710",
    "end": "2647620"
  },
  {
    "text": "default we are using rubbing romancer however it's also possible for us to you",
    "start": "2647620",
    "end": "2653080"
  },
  {
    "text": "know get a route to traffic through each deal what that means is that I can define the destination rule here so that",
    "start": "2653080",
    "end": "2660010"
  },
  {
    "text": "we can capture the two different versions just deployed for my work server I got two versions and I have v1",
    "start": "2660010",
    "end": "2667450"
  },
  {
    "text": "and v2 and I need to an in a way to define what these two versions are by using the labels in tremendous so I can",
    "start": "2667450",
    "end": "2674110"
  },
  {
    "text": "use the version label here so I can say v1 means virgin is equal to latest",
    "start": "2674110",
    "end": "2679510"
  },
  {
    "text": "v2 version in school to v2 now of course you can salut in green you can say old",
    "start": "2679510",
    "end": "2685180"
  },
  {
    "text": "and new it doesn't matter it is a way for you to name your versions your own way so I'm going to go ahead and apply",
    "start": "2685180",
    "end": "2691390"
  },
  {
    "text": "this v1 v2 definition so that now I have two different versions to work with and",
    "start": "2691390",
    "end": "2697630"
  },
  {
    "text": "now what I can also do is to say okay you tell you what I like to start off",
    "start": "2697630",
    "end": "2702790"
  },
  {
    "text": "with all the workloads rally to v1 so I can go back to the virtual service I can define the matching rules here which we",
    "start": "2702790",
    "end": "2709690"
  },
  {
    "text": "can match on your I and headers but then we can also say route or the traffic to",
    "start": "2709690",
    "end": "2714760"
  },
  {
    "text": "p1 and no traffic to v2 and I want you to do is to apply this video and we can",
    "start": "2714760",
    "end": "2720340"
  },
  {
    "text": "actually do traffic marketing for you and you can use this very same mechanism to do blue and green deployments or you",
    "start": "2720340",
    "end": "2726460"
  },
  {
    "text": "can use it for a canary new versions as well by shifting the traffic to the",
    "start": "2726460",
    "end": "2732100"
  },
  {
    "text": "percentages that you are looking for so now we can see very effectively we shifted all the traffic to be 1 and we",
    "start": "2732100",
    "end": "2738400"
  },
  {
    "text": "can use the same thing to shift the traffic to v2 now without all that said right routing is just one small aspect",
    "start": "2738400",
    "end": "2745150"
  },
  {
    "text": "of each do what we can also do of course is to set up retry rules and circuit breaking rules as well so for example if",
    "start": "2745150",
    "end": "2751630"
  },
  {
    "text": "you want to set up a retry rule rather than updating your application logic the proxy can handle that for you so we can",
    "start": "2751630",
    "end": "2757540"
  },
  {
    "text": "just set up the retry rule like that to say let's retry 3 times for my meeting service in case that it goes down and we",
    "start": "2757540",
    "end": "2764920"
  },
  {
    "text": "can go ahead and just update that and the proxy will be configured appropriately ok now just remember this application",
    "start": "2764920",
    "end": "2773620"
  },
  {
    "text": "has absolutely no magic except to propagate the headers and when I also means is that through sto we actually",
    "start": "2773620",
    "end": "2780940"
  },
  {
    "text": "get quite a few things number one we have a graph on a dashboard that's been installed by default and I can actually",
    "start": "2780940",
    "end": "2786190"
  },
  {
    "text": "go to this dashboard right now and what we can see is actually the traffic",
    "start": "2786190",
    "end": "2791470"
  },
  {
    "text": "latency and also the successful request that is actually captured by the Envoy",
    "start": "2791470",
    "end": "2796510"
  },
  {
    "text": "proxy so I can go ahead and go to the dashboard this is pre created let me go ahead and find the work server right",
    "start": "2796510",
    "end": "2802900"
  },
  {
    "text": "here and we can see the QPS that is being routed through the e steel proxy",
    "start": "2802900",
    "end": "2809350"
  },
  {
    "text": "right now and we can see the success rates of that now of course if I go to the meeting service let me see if",
    "start": "2809350",
    "end": "2815470"
  },
  {
    "text": "I find a here meeting server right we can see very clearly this was when I",
    "start": "2815470",
    "end": "2820480"
  },
  {
    "text": "failed to request a hundred percent of the time you can see that failures in my graph as well so that's pretty cool this",
    "start": "2820480",
    "end": "2827830"
  },
  {
    "text": "is by the way out of the box now if I need to see a whole distribution across",
    "start": "2827830",
    "end": "2832930"
  },
  {
    "text": "like exactly who is actually making the comb what I can do is to open up the yogurt console here so I'm gonna open up",
    "start": "2832930",
    "end": "2839080"
  },
  {
    "text": "sixteen report and I'm going to go ahead and go to my local host here just to see",
    "start": "2839080",
    "end": "2844870"
  },
  {
    "text": "the yoga console and then what I can do is let me see the ingress gateway because that's where the traffic on route with to and then let me go ahead",
    "start": "2844870",
    "end": "2850780"
  },
  {
    "text": "and find the traffic and you can see oh the request that comes in to start work",
    "start": "2850780",
    "end": "2856510"
  },
  {
    "text": "and because we're propagating the trace headers we are also capturing all the",
    "start": "2856510",
    "end": "2861730"
  },
  {
    "text": "traces so here we can very clearly see the work server calling the meeting servers a number of times and each one",
    "start": "2861730",
    "end": "2868480"
  },
  {
    "text": "of them with its own latency that's all being done out of the box with a easier",
    "start": "2868480",
    "end": "2873970"
  },
  {
    "text": "installation now assuming you're propagating the right headers right and the beauty of this whole thing is that",
    "start": "2873970",
    "end": "2880150"
  },
  {
    "text": "if I were to deploy this with each your TRS connections so that my connections",
    "start": "2880150",
    "end": "2886210"
  },
  {
    "text": "here are secured between work server and meeting server it's really exactly the",
    "start": "2886210",
    "end": "2891460"
  },
  {
    "text": "same thing I do not need to modify my application maybe slight changes in my the way I deploy it but without changing",
    "start": "2891460",
    "end": "2898600"
  },
  {
    "text": "anything on my app this communication can actually be secured via mutual TOS",
    "start": "2898600",
    "end": "2904540"
  },
  {
    "text": "as well okay so there are a lot more things we can do and one of the most important one that want to mention is",
    "start": "2904540",
    "end": "2911110"
  },
  {
    "text": "that not only do we allow you a control plan to control the routing of your",
    "start": "2911110",
    "end": "2916930"
  },
  {
    "text": "traffic by shifting traffic mirroring traffic and all that and adding circuit breakers all of these metrics that were",
    "start": "2916930",
    "end": "2923020"
  },
  {
    "text": "collecting or the traces that were collecting these become platform services that can be somewhat abstracted",
    "start": "2923020",
    "end": "2928540"
  },
  {
    "text": "away by each do as well and by that manner what we can also do just like kubernetes abstract away your underlying",
    "start": "2928540",
    "end": "2934840"
  },
  {
    "text": "infrastructure here we can also abstract away the way that you're collecting your your metrics and we can actually forward",
    "start": "2934840",
    "end": "2941650"
  },
  {
    "text": "these metrics and traces on to cloud specific managed services so you don't have to manage your own okay and without being said let",
    "start": "2941650",
    "end": "2950250"
  },
  {
    "text": "me see the time yeah just remember sto is a pretty neat tool that you can apply in your company's",
    "start": "2950250",
    "end": "2955290"
  },
  {
    "text": "cluster today you can also run it outside of the cluster as well and you can get visibility resiliency and you",
    "start": "2955290",
    "end": "2961380"
  },
  {
    "text": "can control your traffic oh through the same control plan to each deal okay if you have any questions please please",
    "start": "2961380",
    "end": "2967680"
  },
  {
    "text": "join the community you can participate in the email email groups and each do",
    "start": "2967680",
    "end": "2972869"
  },
  {
    "text": "touch users you can join ECI oh you know just we are here because we want people",
    "start": "2972869",
    "end": "2978420"
  },
  {
    "text": "to try it out it's version 1.1 1.0 right now and we would look forward to your",
    "start": "2978420",
    "end": "2983970"
  },
  {
    "text": "feedback when you're trying these things out and if you have any questions you can find me on twitter and on my website",
    "start": "2983970",
    "end": "2989160"
  },
  {
    "text": "and with that thank you very much for your time thank you",
    "start": "2989160",
    "end": "2995270"
  },
  {
    "text": "you",
    "start": "2998080",
    "end": "3000140"
  }
]