[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "[Music]",
    "start": "3520",
    "end": "7840"
  },
  {
    "text": "right a lot tokens ask your identity API is what we're going to talk about now",
    "start": "12380",
    "end": "17390"
  },
  {
    "text": "yes we'll try to do a short demo in the middle that's always fun see if the internet works all those things about me",
    "start": "17390",
    "end": "27240"
  },
  {
    "text": "Jakob I just cook I work at a company called cure D what I do most of the days",
    "start": "27240",
    "end": "32308"
  },
  {
    "text": "is work with OAuth and OpenID connect we're building an oh well server and",
    "start": "32309",
    "end": "37500"
  },
  {
    "text": "OpenID Connect provider those type of things so we dive into the details quite a lot",
    "start": "37500",
    "end": "42870"
  },
  {
    "text": "so a lot of my days go into figuring out what the specs really mean how to implement them in a good way in a usable",
    "start": "42870",
    "end": "49350"
  },
  {
    "text": "way there's a lot of useless stuff out there and sort of dive into this and today I'm going to give you sort of a",
    "start": "49350",
    "end": "54840"
  },
  {
    "text": "snapshot of where where we are currently where's the where's the community what's",
    "start": "54840",
    "end": "60480"
  },
  {
    "text": "going on and I'm gonna talk particularly about the tokens what goes into tokens",
    "start": "60480",
    "end": "67340"
  },
  {
    "text": "so I'm assuming a bit you have some idea what about this if you don't you can",
    "start": "67340",
    "end": "73020"
  },
  {
    "text": "google it there are some good there are some good videos where we do some basic explanations about what an open ID but",
    "start": "73020",
    "end": "79560"
  },
  {
    "text": "don't worry you don't need that much another way to present myself is to use",
    "start": "79560",
    "end": "84570"
  },
  {
    "text": "some attributes or properties about me I have a name Jacob I have an age 38 fish",
    "start": "84570",
    "end": "90920"
  },
  {
    "text": "I have a height I'm 177 centimeters tall I'm a father I have a son when this",
    "start": "90920",
    "end": "99060"
  },
  {
    "text": "picture was taken it was sunny we were at some cafe that's some presentation",
    "start": "99060",
    "end": "104430"
  },
  {
    "text": "about me as well that someone might use show a picture of me and and say this is Jacob when I go online on the other hand",
    "start": "104430",
    "end": "113240"
  },
  {
    "start": "110000",
    "end": "110000"
  },
  {
    "text": "similar properties about me are useful I have still have a height that could be",
    "start": "113240",
    "end": "119579"
  },
  {
    "text": "useful if I'm buying a shirt or a pair of pants or something at a clothing store shirt size might be relevant might",
    "start": "119579",
    "end": "127770"
  },
  {
    "text": "be relevant where I am when I'm doing that and so on",
    "start": "127770",
    "end": "132920"
  },
  {
    "text": "but I'm skipping ahead a bit in order to sort of dive into what I mean by a tokens as api's we need to split this",
    "start": "133190",
    "end": "141770"
  },
  {
    "text": "talk into three parts first of all I'm going to talk about where are we today where where's the security community and",
    "start": "141770",
    "end": "149510"
  },
  {
    "text": "where's the implementation what are people using and to do that I define the model that I call the API security",
    "start": "149510",
    "end": "154760"
  },
  {
    "text": "maturity model which I bluntly stole from the rest maturity model so you'll",
    "start": "154760",
    "end": "161360"
  },
  {
    "text": "recognize it and this is where a lot of things started level zero if you will",
    "start": "161360",
    "end": "169100"
  },
  {
    "start": "162000",
    "end": "162000"
  },
  {
    "text": "we have API keys and basic authentication still widely used out there and still goes in under API",
    "start": "169100",
    "end": "176570"
  },
  {
    "text": "security obviously so if we if we dive into this as an example and we use this",
    "start": "176570",
    "end": "182450"
  },
  {
    "text": "store that I just had we have me wanting to buy a shirt I login to the store they",
    "start": "182450",
    "end": "189380"
  },
  {
    "text": "have data about me or I've provided it at some point which means when I buy",
    "start": "189380",
    "end": "195020"
  },
  {
    "text": "something they could you know show the right sizes tell me if it's in stock those type of things but interestingly a",
    "start": "195020",
    "end": "202010"
  },
  {
    "text": "store probably looks more like this there's some web front-end or you know",
    "start": "202010",
    "end": "207170"
  },
  {
    "text": "web service there's probably an app version of this store there's a lot of versions so they broke it apart and had",
    "start": "207170",
    "end": "212570"
  },
  {
    "text": "some api's in the back an inventory API perhaps in a purchase API super simple",
    "start": "212570",
    "end": "218030"
  },
  {
    "text": "if we use level zero of the API security maturity model when I make a purchase",
    "start": "218030",
    "end": "224620"
  },
  {
    "text": "the clothing store sort of web site would make these requests perhaps passing an authorization header with",
    "start": "224620",
    "end": "232430"
  },
  {
    "text": "basic auth or an API key to the API to authenticate if they need to pass",
    "start": "232430",
    "end": "240680"
  },
  {
    "text": "information about me that goes into the body or into some other header there's",
    "start": "240680",
    "end": "246530"
  },
  {
    "text": "no way to do that just using the mechanism of basic off so that's that's",
    "start": "246530",
    "end": "252709"
  },
  {
    "text": "level 0 what's the problem with that well we can I could list you know this",
    "start": "252709",
    "end": "259700"
  },
  {
    "start": "255000",
    "end": "255000"
  },
  {
    "text": "whole session about problems with that but let's start it's first of all machine verification issue",
    "start": "259700",
    "end": "266420"
  },
  {
    "text": "it's service to service verification we're not really authenticating or taking the user into account when doing",
    "start": "266420",
    "end": "272810"
  },
  {
    "text": "this it's the machine where we're checking are you allowed to talk to me and there are many ways to do this basic",
    "start": "272810",
    "end": "278930"
  },
  {
    "text": "auth is one mutual TLS is another there's a lot and like I said the user",
    "start": "278930",
    "end": "285530"
  },
  {
    "text": "isn't bound to the resource here so the call goes and says yes you can call me",
    "start": "285530",
    "end": "290690"
  },
  {
    "text": "and I trust that when you call me you'll do the right thing whoops sensitive buttons third point its",
    "start": "290690",
    "end": "301700"
  },
  {
    "text": "authentication only we're not really providing any means for the API to do any authorization authorization",
    "start": "301700",
    "end": "308540"
  },
  {
    "text": "answering the question what are you allowed to do whereas authentication answering the question who are you so",
    "start": "308540",
    "end": "314510"
  },
  {
    "text": "we're checking who's the Machine calling us we're not asked figuring out what are you allowed to do that has to be custom",
    "start": "314510",
    "end": "320050"
  },
  {
    "text": "so that's level zero then a worth came",
    "start": "320050",
    "end": "327230"
  },
  {
    "text": "along both Wan came along not super ly broadly adopted which is",
    "start": "327230",
    "end": "333440"
  },
  {
    "text": "why OAuth 2 wasn't invented because of what one was simply too hard to implement for the client and if you want",
    "start": "333440",
    "end": "340580"
  },
  {
    "text": "a lot of users on your API you don't want to make it very hard to implement the security model that you chose so",
    "start": "340580",
    "end": "346700"
  },
  {
    "text": "what to was designed to sort of address this I know what one is no more it's it's obsolete so token-based",
    "start": "346700",
    "end": "353210"
  },
  {
    "text": "authentication obviously I generalized it so there could be other protocols but there aren't any actually so likelihood",
    "start": "353210",
    "end": "359630"
  },
  {
    "text": "if you're using another protocol you you built it on your own or it's some obscure project that someone else built",
    "start": "359630",
    "end": "366440"
  },
  {
    "text": "so it's likely to have issues so orth is what we're talking about so what do I",
    "start": "366440",
    "end": "371810"
  },
  {
    "start": "371000",
    "end": "371000"
  },
  {
    "text": "mean by token-based authentication let's have another example let's consider a",
    "start": "371810",
    "end": "379190"
  },
  {
    "text": "publisher say a newsroom or something like that they figured we need",
    "start": "379190",
    "end": "385310"
  },
  {
    "text": "token-based authentication or token based architecture in our in our network and the organization decided let's have",
    "start": "385310",
    "end": "393770"
  },
  {
    "text": "an API for content where reporters can",
    "start": "393770",
    "end": "398990"
  },
  {
    "text": "log into the Machine and can publish stuff to this content API and then our channels out calls this",
    "start": "398990",
    "end": "408169"
  },
  {
    "text": "content API and publishes it so reporter signs in and then makes a request new",
    "start": "408169",
    "end": "414439"
  },
  {
    "text": "article and then somebody uses a tablet on the internet serves to their website and can read this article if we use",
    "start": "414439",
    "end": "422209"
  },
  {
    "text": "token-based authentication it means that bearer tokens would be flying around",
    "start": "422209",
    "end": "428779"
  },
  {
    "text": "access tokens the user would probably",
    "start": "428779",
    "end": "434419"
  },
  {
    "text": "login with something like a code flow you know what which is nice because then the user is actually in the token",
    "start": "434419",
    "end": "440209"
  },
  {
    "text": "problem solved of the first thing we talked about but the website couldn't do",
    "start": "440209",
    "end": "446389"
  },
  {
    "text": "that so the website could use another flow called the client credentials flow where it gets a token even though it",
    "start": "446389",
    "end": "452569"
  },
  {
    "text": "doesn't have a user and fetches content bear with me here it's it's kind of",
    "start": "452569",
    "end": "458389"
  },
  {
    "text": "made-up and kind of not actually seen something similar so the the token",
    "start": "458389",
    "end": "465699"
  },
  {
    "text": "coming from the website the reason we can't have a user there is because usually a new site is open you don't",
    "start": "465699",
    "end": "471409"
  },
  {
    "text": "have to authenticate to go and read articles so we can't really rely on the user being on the other end",
    "start": "471409",
    "end": "476709"
  },
  {
    "text": "so this sounds pretty good so still",
    "start": "476709",
    "end": "482089"
  },
  {
    "text": "we're just using access token now for authentication answering the question who are you so we changed sort of one",
    "start": "482089",
    "end": "487639"
  },
  {
    "text": "problem for another we're still not checking or using any any standardized",
    "start": "487639",
    "end": "492919"
  },
  {
    "text": "way of figuring out what you're allowed to do so any authorization decisions",
    "start": "492919",
    "end": "498919"
  },
  {
    "text": "that this content API has to do has to be custom you have to code a lot and",
    "start": "498919",
    "end": "505449"
  },
  {
    "text": "likelihood is it's not done or it's not done properly and actually we have",
    "start": "505449",
    "end": "512268"
  },
  {
    "text": "machine access to the same API where we have user access so some of these requests going in and changing the",
    "start": "512269",
    "end": "518328"
  },
  {
    "text": "content is where a user is involved where other access coming from the web",
    "start": "518329",
    "end": "524899"
  },
  {
    "text": "where the only the web back-end is calling and no user is involved so we have machine access and user access to",
    "start": "524899",
    "end": "531589"
  },
  {
    "text": "the same API so we can't really rely that user parameter in the token because sometimes it's a machine so the result",
    "start": "531589",
    "end": "538970"
  },
  {
    "text": "can be that anyone who obtains an access token can update the content API so you",
    "start": "538970",
    "end": "544880"
  },
  {
    "text": "just put a layer of security around it and said it's hard to get a token it's enough if you have one you can do stuff",
    "start": "544880",
    "end": "550610"
  },
  {
    "text": "with this API turns out though if your news organization this is super",
    "start": "550610",
    "end": "557029"
  },
  {
    "text": "problematic because anyone inside your organization who gets a token if they can update the API they can actually",
    "start": "557029",
    "end": "563540"
  },
  {
    "text": "publish data and ask the news organization you're responsible for what gets published in Sweden at least you",
    "start": "563540",
    "end": "570290"
  },
  {
    "text": "can go to jail if you publish slander or other things it's severe so you're thinking you're protecting",
    "start": "570290",
    "end": "576230"
  },
  {
    "text": "yourself by adding this layer but it's not enough it's just sort of the bare minimum of what we need to do which",
    "start": "576230",
    "end": "583850"
  },
  {
    "text": "brings us to the third layer or level 2 if we start at zero token based",
    "start": "583850",
    "end": "590990"
  },
  {
    "text": "authorization and this is this is I would say almost state of the art today",
    "start": "590990",
    "end": "597160"
  },
  {
    "text": "but I'm gonna talk about where we need to be but token based authorization",
    "start": "597160",
    "end": "603100"
  },
  {
    "text": "we're using something called Scopes how many in here have heard of Scopes good",
    "start": "603100",
    "end": "609980"
  },
  {
    "text": "great most so scopes for you who don't know they're named permissions in a",
    "start": "609980",
    "end": "616160"
  },
  {
    "text": "token you know what their strings or a string actually they don't contain any",
    "start": "616160",
    "end": "622850"
  },
  {
    "text": "values they're just atoms or names and they're requested by the client and then",
    "start": "622850",
    "end": "631279"
  },
  {
    "text": "the OAuth Server authorizes this request together with the user so the user can",
    "start": "631279",
    "end": "636860"
  },
  {
    "text": "consent and say yes I will release this this access to this API mm-hmm that's",
    "start": "636860",
    "end": "644810"
  },
  {
    "text": "what scopes are to give you an example we have three EPI users contents and",
    "start": "644810",
    "end": "650120"
  },
  {
    "start": "646000",
    "end": "646000"
  },
  {
    "text": "invoices the content API for instance that we had in the previous one I could",
    "start": "650120",
    "end": "655370"
  },
  {
    "text": "have two scopes content read content right you can make scopes up you know there are no defined scopes you know so",
    "start": "655370",
    "end": "662300"
  },
  {
    "text": "you can make them up and you can say yeah a client - doesn't authenticate a user can only get the content",
    "start": "662300",
    "end": "667699"
  },
  {
    "text": "scope a client to does authenticate a user using a code flow or something similar can get the content right scope",
    "start": "667699",
    "end": "674149"
  },
  {
    "text": "problem solved super simple to use that for authorization mechanisms in the API",
    "start": "674149",
    "end": "679759"
  },
  {
    "text": "because you can block entire applications from doing things that they're not supposed to do in your own",
    "start": "679759",
    "end": "684769"
  },
  {
    "text": "server in your central party very very useful there are other scopes open ID",
    "start": "684769",
    "end": "690949"
  },
  {
    "text": "defines a bunch I'll talk about them later email an address or two of those invoice lists if we have an invoice API",
    "start": "690949",
    "end": "696709"
  },
  {
    "text": "I want a list I want to read I want to write I mean it's good to group functions using scopes that's what's",
    "start": "696709",
    "end": "702319"
  },
  {
    "text": "going on currently in a lot of places so you say we have this new API it can do",
    "start": "702319",
    "end": "707569"
  },
  {
    "text": "these functions do we need a new scope or can we use something that exists so the API team kind of defines yeah we",
    "start": "707569",
    "end": "713929"
  },
  {
    "text": "have you know this group of access and then the sort of identity team or the",
    "start": "713929",
    "end": "720410"
  },
  {
    "text": "ones responsible for OAuth says sure let's add that let's figure out what clients may need this and then they can",
    "start": "720410",
    "end": "726470"
  },
  {
    "text": "get tokens to access the data so the newsroom would have that that would be a non-issue than it like the client from",
    "start": "726470",
    "end": "733579"
  },
  {
    "text": "the web could never update data and you could restrict it so that very few",
    "start": "733579",
    "end": "738769"
  },
  {
    "text": "clients could do something and the user had to be involved so you could have auditability on who did what much better",
    "start": "738769",
    "end": "747100"
  },
  {
    "start": "747000",
    "end": "747000"
  },
  {
    "text": "in sweden we have an app called the swish app I know you have something similar here in Denmark I don't remember",
    "start": "748839",
    "end": "755569"
  },
  {
    "text": "the name maybe Moby pay could be no pay same thing essentially it's provided by",
    "start": "755569",
    "end": "762980"
  },
  {
    "text": "the banks it's an app where I can transfer money to anyone who has a phone number and that apps all I need is a",
    "start": "762980",
    "end": "769429"
  },
  {
    "text": "bank account and a phone number sign up and transfer money super quickly sweet",
    "start": "769429",
    "end": "775809"
  },
  {
    "text": "switch kind of works like this in Sweden we also have another app called Bank ID you know you have an M ID there are",
    "start": "776049",
    "end": "782269"
  },
  {
    "text": "others in other countries name i Bank Adeem Sweden has a mobile app so a lot",
    "start": "782269",
    "end": "788929"
  },
  {
    "text": "of apps especially banking's use that for identification to figure out who you",
    "start": "788929",
    "end": "793970"
  },
  {
    "text": "are it's it's kind of like any ID or it is any ID except it's not from the government",
    "start": "793970",
    "end": "800040"
  },
  {
    "text": "so when I open the switch app it opens bank ID in turn and at the same time the",
    "start": "800040",
    "end": "806700"
  },
  {
    "text": "Swiss bank and back and recall Bank ad and say hey I need a log in here and start pulling for a session bank ID will",
    "start": "806700",
    "end": "813690"
  },
  {
    "text": "authenticate me and once that's done it will return access to the to the app and",
    "start": "813690",
    "end": "820350"
  },
  {
    "text": "the app will then context switch to swish it would close itself or get in the background and swish will come in",
    "start": "820350",
    "end": "825690"
  },
  {
    "text": "the foreground and at the same time the switch back-end will communicate with Bank ID and figure out Oh user login",
    "start": "825690",
    "end": "831810"
  },
  {
    "text": "great and they haven't released the exact details of this but I would imagine if to do this with a code flow",
    "start": "831810",
    "end": "838050"
  },
  {
    "text": "you'd be peachy so the the user who's logged in now into the app can have very",
    "start": "838050",
    "end": "844350"
  },
  {
    "text": "restricted access to the API sick calls and let's just assume that they're using the scope based access control so the",
    "start": "844350",
    "end": "851340"
  },
  {
    "text": "the API is called from the swish application can only do the things we designed them to do they can only cannot",
    "start": "851340",
    "end": "857810"
  },
  {
    "text": "create new accounts for instance they can only read accounts stuff like that",
    "start": "857810",
    "end": "863990"
  },
  {
    "text": "so what happened though maybe you guys heard of this but a couple of years ago or a year ago I think some guy wanted to",
    "start": "863990",
    "end": "872400"
  },
  {
    "text": "reverse-engineer the swish protocol that they use and found their pin certificate",
    "start": "872400",
    "end": "878610"
  },
  {
    "text": "in the app that they used to communicate so he found out picked it up built up rocks in the middle so the app would",
    "start": "878610",
    "end": "885030"
  },
  {
    "text": "trust that proxy and then he could talk to the swish back-end god assumed that",
    "start": "885030",
    "end": "890700"
  },
  {
    "text": "can happen you can't really look at that and look down an app more than that anyway what he figured on he was he saw",
    "start": "890700",
    "end": "897480"
  },
  {
    "text": "this API where you list all your previous transaction so he said payment history slash my phone number slash all",
    "start": "897480",
    "end": "902850"
  },
  {
    "text": "lists all your previous transactions however if you put someone else's phone",
    "start": "902850",
    "end": "910560"
  },
  {
    "text": "number in there you list all their transactions that's a nice feature so",
    "start": "910560",
    "end": "916980"
  },
  {
    "text": "the thing is scope based access control does nothing to prevent this because we",
    "start": "916980",
    "end": "923820"
  },
  {
    "text": "still can list transactions that's fine I mean the app is allowed to list or ants actions but we didn't involve the",
    "start": "923820",
    "end": "929430"
  },
  {
    "text": "user here what can the user do yeah the user could obviously this transactions of anything you wanted and this is a",
    "start": "929430",
    "end": "935730"
  },
  {
    "start": "935000",
    "end": "935000"
  },
  {
    "text": "general problem if we think about how we're starting to build our micro services in api's today we're passing a",
    "start": "935730",
    "end": "941340"
  },
  {
    "text": "lot of information around and all of a sudden one of them needs to call it a",
    "start": "941340",
    "end": "947030"
  },
  {
    "text": "sort of downstream API and they need more data in order to make that API call",
    "start": "947030",
    "end": "952680"
  },
  {
    "text": "so they look it up phone number I need the phone number in order to do this thing I'm gonna do now that's not given",
    "start": "952680",
    "end": "958920"
  },
  {
    "text": "to me I'll look it up and forward it down in the next request and then maybe the request circles around a bit before",
    "start": "958920",
    "end": "966000"
  },
  {
    "text": "being returned I mean you can just imagine so what could go wrong with the",
    "start": "966000",
    "end": "974040"
  },
  {
    "text": "house who do we trust who trusts who I",
    "start": "974040",
    "end": "979230"
  },
  {
    "text": "mean the one we looked up the phone number do I trust that caller so what",
    "start": "979230",
    "end": "985680"
  },
  {
    "text": "can happen when an API calls another API when a service calls another service or an app calls an API",
    "start": "985680",
    "end": "990780"
  },
  {
    "text": "we need to know we're trusting otherwise we get something we call a spaghetti of",
    "start": "990780",
    "end": "996720"
  },
  {
    "text": "trust and this is this is not new it's been around for ages Sam will have this",
    "start": "996720",
    "end": "1002510"
  },
  {
    "text": "problem as well it's super easy to sort of forget who adds information along the",
    "start": "1002510",
    "end": "1007880"
  },
  {
    "text": "way and then sort of rely on that so in the switch case they trusted the app to",
    "start": "1007880",
    "end": "1014420"
  },
  {
    "text": "make the correct API call that was a big mistake luckily you couldn't do the same thing on transfer money but I was maybe",
    "start": "1014420",
    "end": "1022730"
  },
  {
    "text": "just luck who knows so that brings us to the top level here we need something we",
    "start": "1022730",
    "end": "1028610"
  },
  {
    "text": "call centralized trust using claims so",
    "start": "1028610",
    "end": "1036319"
  },
  {
    "text": "this takes a bit more explaining claims the missing piece off doesn't",
    "start": "1036319",
    "end": "1041870"
  },
  {
    "text": "talk a whole lot about claims but open ID does so we're gonna dive into that",
    "start": "1041870",
    "end": "1047260"
  },
  {
    "text": "but let's start with trust I'd mentioned spaghetti and we need to get out of that so who do we trust in our network do we",
    "start": "1047260",
    "end": "1053840"
  },
  {
    "text": "trust the caller well we just figured out we don't we don't trust the caller at least not a lot we do we trust API",
    "start": "1053840",
    "end": "1061460"
  },
  {
    "text": "gateway well yeah to some extent for trusts API gateway but does the",
    "start": "1061460",
    "end": "1067670"
  },
  {
    "text": "their gateway lookup extra information and added in the request going back how does it add the information that it",
    "start": "1067670",
    "end": "1073820"
  },
  {
    "text": "sends for backwards in the network do we trust the issue of the token if we're",
    "start": "1073820",
    "end": "1080060"
  },
  {
    "text": "sending tokens around we trust they sure well who who can issue tokens do you have libraries creating jobs in",
    "start": "1080060",
    "end": "1087440"
  },
  {
    "text": "your network in the middle do we trust the user database who can ask access the",
    "start": "1087440",
    "end": "1093230"
  },
  {
    "text": "database who can update who can read there's more databases obviously than the user database so trust I tried to",
    "start": "1093230",
    "end": "1101570"
  },
  {
    "text": "find a very short explanation and this is the shortest one I found so it's a",
    "start": "1101570",
    "end": "1106970"
  },
  {
    "text": "subjective assessment of another's influence in terms of the extent of one's perception about the quality and",
    "start": "1106970",
    "end": "1112100"
  },
  {
    "text": "significance of another's impact over one's outcome in a given situation such that one's expectation of blah blah blah",
    "start": "1112100",
    "end": "1118670"
  },
  {
    "text": "blah blah right everybody gets it in other words Trust is subjective we decide who we",
    "start": "1118670",
    "end": "1127310"
  },
  {
    "text": "trust so there's no thing that we call absolute trust anywhere we need to build",
    "start": "1127310",
    "end": "1132440"
  },
  {
    "text": "our own trust infrastructure if we want to use something internally we decide or we decide we trust someone else's",
    "start": "1132440",
    "end": "1138830"
  },
  {
    "text": "infrastructure it does not guarantee absolute truth doesn't mean it's correct",
    "start": "1138830",
    "end": "1146000"
  },
  {
    "text": "but it means we at least trust them to do a better job than what we can do figuring it out or the one whose caller",
    "start": "1146000",
    "end": "1151070"
  },
  {
    "text": "if I trust someone else that one is more likely to do the correct thing than the app wanting to list transactions yeah it",
    "start": "1151070",
    "end": "1161060"
  },
  {
    "text": "helps us predict the correctness of the decision and this is pretty nice so given that I trust the data coming from",
    "start": "1161060",
    "end": "1167480"
  },
  {
    "text": "some party if that's correct my decision will be correct that's super useful",
    "start": "1167480",
    "end": "1174160"
  },
  {
    "text": "so in trust we have pretty much three participants if we want a centralized",
    "start": "1174160",
    "end": "1179270"
  },
  {
    "text": "trust we have some sort of issuer Authority we have some party who's requesting some data some party who's",
    "start": "1179270",
    "end": "1185360"
  },
  {
    "text": "relying on that I'll explain back to me",
    "start": "1185360",
    "end": "1194060"
  },
  {
    "text": "when this picture was taken it was sunny I was at some cafe like I said before if",
    "start": "1194060",
    "end": "1201300"
  },
  {
    "text": "we show this to someone we can say that this was this was true then if if someone else shows another picture at",
    "start": "1201300",
    "end": "1207420"
  },
  {
    "text": "some other time those properties may be different we call that context",
    "start": "1207420",
    "end": "1212670"
  },
  {
    "text": "attributes so given all attributes about a subject or about a user some more",
    "start": "1212670",
    "end": "1218070"
  },
  {
    "text": "context some are actually subject attributes some say more things about",
    "start": "1218070",
    "end": "1224040"
  },
  {
    "text": "the identity than others so context attributes it's good to know the difference between these because context",
    "start": "1224040",
    "end": "1229620"
  },
  {
    "text": "attributes we can use to determine the risk factor for instance when you're",
    "start": "1229620",
    "end": "1236340"
  },
  {
    "text": "logging in the context where are you Sweden where were you last time you",
    "start": "1236340",
    "end": "1241620"
  },
  {
    "text": "logged in five minutes ago Denmark we're in Denmark Copenhagen Stockholm not",
    "start": "1241620",
    "end": "1247080"
  },
  {
    "text": "likely geo velocity is too high maybe we should block your left Naknek slow game",
    "start": "1247080",
    "end": "1252320"
  },
  {
    "text": "that's what context is useful for it's useful for more things than that obviously but that's a difference they",
    "start": "1252320",
    "end": "1259470"
  },
  {
    "text": "change the subject attributes on the other hand of course they're super",
    "start": "1259470",
    "end": "1265350"
  },
  {
    "text": "different per application what what a subject attribute is but they have this characteristic of describing me my",
    "start": "1265350",
    "end": "1272190"
  },
  {
    "text": "ticket digital persona if you will so these are attributes and if I were to go",
    "start": "1272190",
    "end": "1279090"
  },
  {
    "text": "to someone in at least in Sweden I could say show them my passport and say this",
    "start": "1279090",
    "end": "1285030"
  },
  {
    "text": "is me I'm 177 centimeters tall this is my name and if they trust the police who",
    "start": "1285030",
    "end": "1291510"
  },
  {
    "text": "issues passports in Sweden they believe that information to be correct they can also look up and scout the vacant and",
    "start": "1291510",
    "end": "1297480"
  },
  {
    "text": "see are you really the father of your son here yes so those two authorities",
    "start": "1297480",
    "end": "1302490"
  },
  {
    "text": "are asserting parties when it comes to information about me as a citizen in Sweden for instance simple as that but",
    "start": "1302490",
    "end": "1310170"
  },
  {
    "text": "we cannot trust attributes like I just explained we trust the police we trust Scott the racket to be providing the",
    "start": "1310170",
    "end": "1317250"
  },
  {
    "text": "correct information so we cannot trust them they are providing something called claims so an attribute is simple its",
    "start": "1317250",
    "end": "1323670"
  },
  {
    "text": "first name equals jacob h equals 38 whereas a claim is a statement it's got",
    "start": "1323670",
    "end": "1331679"
  },
  {
    "text": "the vac it says the first name of this person is jacob jacob is 38 says the police jacob has a son just gotta forget jacob",
    "start": "1331679",
    "end": "1341580"
  },
  {
    "text": "is 177 centimeters tall says the police you see the form here we have a subject",
    "start": "1341580",
    "end": "1348350"
  },
  {
    "text": "jacob we have an attribute or property is 177 centimeters tall and an asserting",
    "start": "1348350",
    "end": "1356549"
  },
  {
    "text": "party i'm sure or authority if you will assess the police that's a claim",
    "start": "1356549",
    "end": "1362070"
  },
  {
    "text": "somebody claims something to be true so how can we trust this how can we use",
    "start": "1362070",
    "end": "1369480"
  },
  {
    "text": "claims then well obviously if i need to trust incoming data i can always verify",
    "start": "1369480",
    "end": "1376259"
  },
  {
    "text": "incoming data against the original source that's dumb",
    "start": "1376259",
    "end": "1382100"
  },
  {
    "text": "then I must just get it on my own or we could use a common party to issue this",
    "start": "1382100",
    "end": "1387840"
  },
  {
    "text": "trusted data like we do and we had they sure we have the requesting party we",
    "start": "1387840",
    "end": "1394350"
  },
  {
    "text": "have the relying party so if I need to send a request to the relying party say I want to list all the transactions for",
    "start": "1394350",
    "end": "1400259"
  },
  {
    "text": "instance I can say hey I need information about the phone number about Jacob so that I can send it this sure",
    "start": "1400259",
    "end": "1408450"
  },
  {
    "text": "then says sure here's information about Jacob use that when you're making your request to the relying party the relying",
    "start": "1408450",
    "end": "1417629"
  },
  {
    "start": "1415000",
    "end": "1415000"
  },
  {
    "text": "party needs to verify this and obviously it could go and check but what we",
    "start": "1417629",
    "end": "1424950"
  },
  {
    "text": "usually do is we sign this data the issuer and the authority I intermix",
    "start": "1424950",
    "end": "1432509"
  },
  {
    "text": "those words because there's really many names for it depending on what standard or what spec you're looking for has a",
    "start": "1432509",
    "end": "1441210"
  },
  {
    "text": "public key or private key and it signs the data and then the relying party has",
    "start": "1441210",
    "end": "1447960"
  },
  {
    "text": "the public part of that key and can verify the signature by that we know that nobody has tampered with the data",
    "start": "1447960",
    "end": "1454679"
  },
  {
    "text": "on the way and that it came from the issuer and authority",
    "start": "1454679",
    "end": "1460770"
  },
  {
    "text": "so as long as you don't go and lose your private key it's pretty safe to issue data it's not encrypted so anyone can",
    "start": "1460770",
    "end": "1469590"
  },
  {
    "text": "see it still it's just asserted it's a claim now we claim this data to be true so if you trust that issuer and",
    "start": "1469590",
    "end": "1476700"
  },
  {
    "text": "authority you can use this structure and you do all the time I mean HTTP it works like this essentially so everybody's",
    "start": "1476700",
    "end": "1487020"
  },
  {
    "text": "thinking hey I can use a job that sign data isn't it yeah it is actually we",
    "start": "1487020",
    "end": "1492990"
  },
  {
    "text": "have a header in the job we have a payload and we have a signature the green part is the signature so jobs are",
    "start": "1492990",
    "end": "1500550"
  },
  {
    "text": "actually useful for this type of scenarios that's where they exist even and if you think about it these are",
    "start": "1500550",
    "end": "1513300"
  },
  {
    "text": "actually claims so when you open up the jot all you see is claims and it's a bit",
    "start": "1513300",
    "end": "1522390"
  },
  {
    "text": "slow today let me see if I can get that to change yep there we go",
    "start": "1522390",
    "end": "1529440"
  },
  {
    "text": "there's even a subject in there so we have the subject Jane Doe at example.com",
    "start": "1529440",
    "end": "1534600"
  },
  {
    "text": "and we can now derive that the subscriber ID for that subject is abc123",
    "start": "1534600",
    "end": "1539640"
  },
  {
    "text": "or that the name is Jane Doe interesting",
    "start": "1539640",
    "end": "1545000"
  },
  {
    "text": "and we also have the issuer in there we can see that this was issued by login",
    "start": "1545000",
    "end": "1551130"
  },
  {
    "text": "dr. deter i/o if you trust login dr. deter IO and you use the public key of",
    "start": "1551130",
    "end": "1556320"
  },
  {
    "text": "login dr. deter IO you can verify that these claims are actually true so using",
    "start": "1556320",
    "end": "1567480"
  },
  {
    "text": "the jot obviously yeah I mean that's what you should be sending around in your network it's simple as that but",
    "start": "1567480",
    "end": "1575330"
  },
  {
    "text": "it's not a protocol I don't know how many discussions I've had with with",
    "start": "1575330",
    "end": "1580559"
  },
  {
    "text": "organizations where we're like talking about OAuth and and you know moving up the ladder of security and pretty good",
    "start": "1580559",
    "end": "1587760"
  },
  {
    "text": "we we just took jobs actually and we're good now so we implement the jobs and we",
    "start": "1587760",
    "end": "1593580"
  },
  {
    "text": "got API secure and that's that's really dumb actually because if you think about it",
    "start": "1593580",
    "end": "1599730"
  },
  {
    "text": "a job is like a car and you take your car and you go out and drive on the streets on the freeway for instance and",
    "start": "1599730",
    "end": "1607400"
  },
  {
    "text": "it's not the car that makes you safe it's the traffic rules so you're pretty",
    "start": "1607400",
    "end": "1613559"
  },
  {
    "text": "sure that people will drive in the same direction on the freeway because of the rules and same thing with a job it's not",
    "start": "1613559",
    "end": "1620039"
  },
  {
    "text": "the job that makes its secure it's the protocol that you use along with the job",
    "start": "1620039",
    "end": "1626250"
  },
  {
    "text": "that makes it secure because if you use the job the wrong way you're screwed you",
    "start": "1626250",
    "end": "1631530"
  },
  {
    "text": "didn't add any security you obfuscated stuff at best so I'm gonna skip this",
    "start": "1631530",
    "end": "1640590"
  },
  {
    "text": "actually so there are two protocols or worth in the base and built on top of",
    "start": "1640590",
    "end": "1646409"
  },
  {
    "text": "OAuth we have open ID so these two use dots or they can use job Oh what doesn't",
    "start": "1646409",
    "end": "1652020"
  },
  {
    "text": "actually require you to but it's a handy token to using OAuth so if we want to use claims then let's go back to claims",
    "start": "1652020",
    "end": "1658620"
  },
  {
    "start": "1656000",
    "end": "1656000"
  },
  {
    "text": "in OAuth and open ID I would have an app say that I want to do a list",
    "start": "1658620",
    "end": "1664620"
  },
  {
    "text": "transactions so I go and do a code flow to the to the server perhaps an open a",
    "start": "1664620",
    "end": "1670710"
  },
  {
    "text": "decode flow and the server will log me and I look up stuff and say yeah there's a their cell phone number here I'll add",
    "start": "1670710",
    "end": "1678059"
  },
  {
    "text": "that to the access token which this time is perhaps a JSON web token or not but",
    "start": "1678059",
    "end": "1683880"
  },
  {
    "text": "some sort of trusted token inside that token we can now see that Jane Doe at",
    "start": "1683880",
    "end": "1690539"
  },
  {
    "text": "example.com has the phone number one two three one two three one two three so there's no chance anyone can break that",
    "start": "1690539",
    "end": "1697049"
  },
  {
    "text": "API and just using it we're just passing it on and the protocol states this is an",
    "start": "1697049",
    "end": "1703950"
  },
  {
    "text": "access token so you there are rules for how you can send it around there are rules for how",
    "start": "1703950",
    "end": "1709409"
  },
  {
    "text": "you can obtain one there are rules for how you should check that it's valid and so on that's the point that adds",
    "start": "1709409",
    "end": "1716700"
  },
  {
    "text": "security here so how do you how do you figure out what to stick in the token",
    "start": "1716700",
    "end": "1723090"
  },
  {
    "start": "1719000",
    "end": "1719000"
  },
  {
    "text": "then well we call them attribute sources attributes per se it's",
    "start": "1723090",
    "end": "1730789"
  },
  {
    "text": "a pretty old thinking already from sam'l who had a lot of attribute stuff going on back and forth and you connect your",
    "start": "1730789",
    "end": "1737840"
  },
  {
    "text": "sort of central party to these attribute sources obviously and they can be anything they just they don't have to be",
    "start": "1737840",
    "end": "1745039"
  },
  {
    "text": "only account information they can be any relevant identity information that you want to have sort of centralized trust",
    "start": "1745039",
    "end": "1750260"
  },
  {
    "text": "around so you make sure those are connected to your OAuth and open ID provider not to everywhere in your",
    "start": "1750260",
    "end": "1756919"
  },
  {
    "text": "network where you need the data so what about the data then in the in the token",
    "start": "1756919",
    "end": "1764710"
  },
  {
    "start": "1761000",
    "end": "1761000"
  },
  {
    "text": "well first of all like I said you should try to organize this data so that it's",
    "start": "1764710",
    "end": "1770600"
  },
  {
    "text": "not reachable by everybody in the network at least not unattended and not",
    "start": "1770600",
    "end": "1776510"
  },
  {
    "text": "using the proper sort of authorization mechanisms to get it so preferably you should stick it in the token already so",
    "start": "1776510",
    "end": "1782899"
  },
  {
    "text": "you have it centrally yeah you should",
    "start": "1782899",
    "end": "1788929"
  },
  {
    "text": "use opaque joking tokens on the internet and jots internally I'm not going to say",
    "start": "1788929",
    "end": "1794059"
  },
  {
    "text": "much more about that I just talk about jobs all the time now there's a flow called the phantom token flow if you",
    "start": "1794059",
    "end": "1801440"
  },
  {
    "text": "google that you'll find some interesting stuff we talked about it sometimes essentially swap tokens because jots are",
    "start": "1801440",
    "end": "1809000"
  },
  {
    "text": "usually not encrypted we can talk about that after why they're not they can be",
    "start": "1809000",
    "end": "1814730"
  },
  {
    "text": "but they're not and use jots internally because they're faster and easier to",
    "start": "1814730",
    "end": "1820519"
  },
  {
    "text": "pass around and here's the thing though only our data to a token if the client",
    "start": "1820519",
    "end": "1827510"
  },
  {
    "text": "and the API needed don't go and add the whole world just because you have everything don't do that just squeeze it",
    "start": "1827510",
    "end": "1833510"
  },
  {
    "text": "down to the thing you know it's going to be used that's a bit tricky but it's doable so how do you identify this data",
    "start": "1833510",
    "end": "1842210"
  },
  {
    "start": "1841000",
    "end": "1841000"
  },
  {
    "text": "then I need to speed up a bit I see well first of all should be relevant to a",
    "start": "1842210",
    "end": "1847399"
  },
  {
    "text": "large set of your api's 90% 80% maybe the 80/20 rule but not less than that so",
    "start": "1847399",
    "end": "1853700"
  },
  {
    "text": "if most need it most of the time it's good it's useful to be in a token that's",
    "start": "1853700",
    "end": "1859520"
  },
  {
    "text": "point it should not be application-specific by that meaning you",
    "start": "1859520",
    "end": "1867500"
  },
  {
    "text": "know one single API needs this one time out of a thousand it should be attributes about the user you should be",
    "start": "1867500",
    "end": "1874310"
  },
  {
    "text": "getting that by now and it should not be contextual to the session so we have",
    "start": "1874310",
    "end": "1879950"
  },
  {
    "text": "this context subject attribute thing right why why shouldn't I put the",
    "start": "1879950",
    "end": "1886070"
  },
  {
    "text": "location in the token right make sense the API wants to know where are you well",
    "start": "1886070",
    "end": "1892610"
  },
  {
    "text": "the thing about context is you know auth tokens can live for a very long time they get refreshed and refreshed and",
    "start": "1892610",
    "end": "1899990"
  },
  {
    "text": "refreshed so they can be refreshed for many years depends on your application so how you logged in is pretty relevant",
    "start": "1899990",
    "end": "1908420"
  },
  {
    "text": "I mean even an hour after you logged in it's pretty irrelevant it's likely",
    "start": "1908420",
    "end": "1913520"
  },
  {
    "text": "you've left your computer and went back so that information is stale so if you put that in the token it's it's hard to",
    "start": "1913520",
    "end": "1919790"
  },
  {
    "text": "use and that's why we don't put contextual information in tokens usually",
    "start": "1919790",
    "end": "1926380"
  },
  {
    "text": "okay part three scopes revisited I'm",
    "start": "1926380",
    "end": "1934610"
  },
  {
    "text": "gonna stop here and do a quick demo instead and see what we're talking about",
    "start": "1934610",
    "end": "1940010"
  },
  {
    "text": "here before we talk about the last stuff so we have there's a tool we developed",
    "start": "1940010",
    "end": "1949000"
  },
  {
    "text": "that's free to use it's called OAuth or tools and it's",
    "start": "1949000",
    "end": "1955190"
  },
  {
    "text": "useful if you just want to toy around with OAuth and run some flows it works against any company any sort of standard",
    "start": "1955190",
    "end": "1962060"
  },
  {
    "text": "OAuth and OpenID connect server so you set up an environment where your server",
    "start": "1962060",
    "end": "1967550"
  },
  {
    "text": "is and it will find all the endpoints if it supports metadata otherwise you type it in find all the public keys and stuff",
    "start": "1967550",
    "end": "1973820"
  },
  {
    "text": "like that super handy tool and then you can start flow so you can run any any",
    "start": "1973820",
    "end": "1979010"
  },
  {
    "text": "flow we know what an open ID and simply configure it with the parameters you want so I've set up a code flow here and",
    "start": "1979010",
    "end": "1986620"
  },
  {
    "text": "I have a client called tools and I also",
    "start": "1986620",
    "end": "1991790"
  },
  {
    "text": "have let's go open IDs so it's actually an open ID code flow for those interested and it",
    "start": "1991790",
    "end": "1999170"
  },
  {
    "text": "shows me here if I if I would do this in a code this somewhere this is the the URL I should go to so I can copy this in",
    "start": "1999170",
    "end": "2005920"
  },
  {
    "text": "and paste it in my code or try it in in the browser on my own if I want or I can just run it I also selected that I",
    "start": "2005920",
    "end": "2012670"
  },
  {
    "text": "should out to redeem the code so that the code flow has two parts the first part retrieves a code over a redirect",
    "start": "2012670",
    "end": "2020440"
  },
  {
    "text": "back the second part takes a post to the back end and gets the tokens so it out",
    "start": "2020440",
    "end": "2025720"
  },
  {
    "text": "to discard so I don't have to click stuff so sends me over to the our server",
    "start": "2025720",
    "end": "2032760"
  },
  {
    "text": "logging in with some fake user see if",
    "start": "2032760",
    "end": "2038950"
  },
  {
    "text": "internet works yes so this is a consent page you know auth you know how you have to sometimes approve like does this",
    "start": "2038950",
    "end": "2046360"
  },
  {
    "text": "client is this client allowed to access your stuff on this application and",
    "start": "2046360",
    "end": "2051550"
  },
  {
    "text": "currently it's only user ID yes okay I",
    "start": "2051550",
    "end": "2056710"
  },
  {
    "text": "got back I got an access token which is opaque in this case I got a refresh token and an ID token I can see the ID",
    "start": "2056710",
    "end": "2063190"
  },
  {
    "text": "token has some some data there sure for instance and stuff like that if I look",
    "start": "2063190",
    "end": "2069250"
  },
  {
    "text": "at the access token I can introspect that here makes an introspection call if",
    "start": "2069250",
    "end": "2075070"
  },
  {
    "text": "the client supports that I can see the the claims in that access token so it",
    "start": "2075070",
    "end": "2080409"
  },
  {
    "text": "doesn't really matter if it's a job or not from from sort of a wats perspective but",
    "start": "2080410",
    "end": "2086950"
  },
  {
    "text": "I talked about scopes before but now let's talk about claims",
    "start": "2086950",
    "end": "2091990"
  },
  {
    "text": "so actually in open Rd you can ask for claims so you don't have to go and ask",
    "start": "2091990",
    "end": "2098110"
  },
  {
    "text": "for for everything at once you can simply say I'm gonna have the email claims which are two claims actually",
    "start": "2098110",
    "end": "2104710"
  },
  {
    "text": "email and email verified and I want these to end up in the ID token and the username for endpoint and the request",
    "start": "2104710",
    "end": "2112540"
  },
  {
    "text": "parameter is a JSON object that looks like this it has some sort of token sync and then what values should go in there",
    "start": "2112540",
    "end": "2120910"
  },
  {
    "text": "what claim names and if it's null there it's as any value on this claim",
    "start": "2120910",
    "end": "2126280"
  },
  {
    "text": "so it says user in for an ID token I can also depends on your server but you can",
    "start": "2126280",
    "end": "2132500"
  },
  {
    "text": "add custom claims here so we say I want to fill claim and perhaps I expect the",
    "start": "2132500",
    "end": "2138080"
  },
  {
    "text": "value of bar and I want this to go into only user info and access token for",
    "start": "2138080",
    "end": "2143600"
  },
  {
    "text": "instance so it adds access token as to sink the food claim with an expected",
    "start": "2143600",
    "end": "2148880"
  },
  {
    "text": "value of bar the spec is a bit vague here there's a it's a big philosophical question of what should happen here but",
    "start": "2148880",
    "end": "2155360"
  },
  {
    "text": "let's assume this this is nice this updates the the claims parameter of the",
    "start": "2155360",
    "end": "2162110"
  },
  {
    "text": "request now it's URL encoded so it looks a bit silly but that's that's what happens when you make the authorized",
    "start": "2162110",
    "end": "2167270"
  },
  {
    "text": "request you pass in this claims parameter and this now scopes down the request and says these are the claims I'm looking for we're not using the",
    "start": "2167270",
    "end": "2173570"
  },
  {
    "text": "scope parameter now we're using the claims parameter and if I would send",
    "start": "2173570",
    "end": "2179240"
  },
  {
    "text": "this i also added to log to open at these settings here which is the prompt",
    "start": "2179240",
    "end": "2184250"
  },
  {
    "text": "parameter saying prompt occurs login prompt equals consent this means that it doesn't use any SSO sessions or anything",
    "start": "2184250",
    "end": "2190100"
  },
  {
    "text": "so i will always be prompted which is handy in a demo so once again have to",
    "start": "2190100",
    "end": "2195830"
  },
  {
    "text": "log in and let's wait for the consent",
    "start": "2195830",
    "end": "2201410"
  },
  {
    "text": "screen to show up so now it actually asked me for email verified email the",
    "start": "2201410",
    "end": "2207860"
  },
  {
    "text": "full claim and the user ID still and I as a user could even say let's ignore",
    "start": "2207860",
    "end": "2214700"
  },
  {
    "text": "the the email verified email claim and those would then be dropped so let's",
    "start": "2214700",
    "end": "2222710"
  },
  {
    "text": "look at that so what did I get well in the ID token as we see I have email email verified and in the access token",
    "start": "2222710",
    "end": "2230450"
  },
  {
    "text": "what do I have there I don't have email and even verified because they weren't specified for that sink and if I make a",
    "start": "2230450",
    "end": "2239660"
  },
  {
    "text": "request to the user aim for endpoint which is another open ID end point where I can fetch other user user profile data",
    "start": "2239660",
    "end": "2246860"
  },
  {
    "text": "so to take this this is the only information that's being released because this is the only thing the",
    "start": "2246860",
    "end": "2252080"
  },
  {
    "text": "client asks for email verified to Kemah here like we saw and the email",
    "start": "2252080",
    "end": "2259870"
  },
  {
    "text": "that's the claims parameter super-useful so anyway and with that in mind",
    "start": "2259870",
    "end": "2266750"
  },
  {
    "text": "now we're gonna dive into some some more complex stuff real quick there are no",
    "start": "2266750",
    "end": "2273590"
  },
  {
    "text": "scopes so we just talked about scopes and I used the word scopes but we had a",
    "start": "2273590",
    "end": "2279650"
  },
  {
    "text": "we had a super super long session reading the spec and over and over again to figure out what's wrong with the open",
    "start": "2279650",
    "end": "2285470"
  },
  {
    "text": "urdhva spec so we realized there are no scopes what do I mean",
    "start": "2285470",
    "end": "2292510"
  },
  {
    "text": "well there's something called scope there's nothing called scopes nitpicking",
    "start": "2292510",
    "end": "2298730"
  },
  {
    "start": "2293000",
    "end": "2293000"
  },
  {
    "text": "a bit here but it kind of has a meaning scope was introduced in both - there's",
    "start": "2298730",
    "end": "2304940"
  },
  {
    "text": "never been anything like it before both 1a didn't have it Samuel didn't have it it's it's a new concept it what it meant",
    "start": "2304940",
    "end": "2313460"
  },
  {
    "text": "was scope of access so scope like I said before it was these strings",
    "start": "2313460",
    "end": "2318830"
  },
  {
    "text": "well actually the scope parameter is scope equals string space separated",
    "start": "2318830",
    "end": "2325720"
  },
  {
    "text": "values read right open Rd so it's really just one thing its scope and that whole",
    "start": "2325720",
    "end": "2333140"
  },
  {
    "text": "thing together is the scope of access that I want this client to have the",
    "start": "2333140",
    "end": "2339980"
  },
  {
    "text": "thing that if you really want to talk about the individual items in the string the specs are scope value or scope",
    "start": "2339980",
    "end": "2345560"
  },
  {
    "text": "tokens but we usually say scopes but that's actually kind of incorrect so if",
    "start": "2345560",
    "end": "2352610"
  },
  {
    "start": "2350000",
    "end": "2350000"
  },
  {
    "text": "we talk about claims versus scopes this is where it gets interesting",
    "start": "2352610",
    "end": "2357700"
  },
  {
    "text": "scope is a grouping of claims that's",
    "start": "2357700",
    "end": "2362780"
  },
  {
    "text": "what open ID says so it's kind of a macro a shorthand to get more data into your token the thing about scope though",
    "start": "2362780",
    "end": "2373010"
  },
  {
    "text": "is it doesn't cover complex stuff it's too broad like so we needed something",
    "start": "2373010",
    "end": "2381560"
  },
  {
    "text": "more fine-grained and that's what open ID came up with it's in the course back",
    "start": "2381560",
    "end": "2386830"
  },
  {
    "text": "so here's an example in open ID there's a profile scope and maps to these claims these claim names",
    "start": "2387400",
    "end": "2395150"
  },
  {
    "text": "to be specific name family name given name blah-blah-blah-blah-blah each of these claims has a specific value once",
    "start": "2395150",
    "end": "2402290"
  },
  {
    "text": "resolved once we start issuing stuff so there's a group in here there's actually",
    "start": "2402290",
    "end": "2408890"
  },
  {
    "text": "several groupings we have the profile scope we have the open ID scope which",
    "start": "2408890",
    "end": "2414770"
  },
  {
    "text": "implicitly has a bunch of groupings the subject the user if you ask for open ID you will get a user ID in there it's not",
    "start": "2414770",
    "end": "2420980"
  },
  {
    "text": "possible to not get that off time it's your stuff like that the email scope",
    "start": "2420980",
    "end": "2426230"
  },
  {
    "text": "maps to two claims one called the same thing the email claim which has the value of the email the email verified",
    "start": "2426230",
    "end": "2432440"
  },
  {
    "text": "claim which is a boolean true/false like we saw before address claim just maps to address phone phone number phone number",
    "start": "2432440",
    "end": "2439280"
  },
  {
    "text": "verified so these these are there so that the client can say hey I need phone",
    "start": "2439280",
    "end": "2444470"
  },
  {
    "text": "and of course it's possible to do custom group business you can say hey we have a",
    "start": "2444470",
    "end": "2450380"
  },
  {
    "start": "2447000",
    "end": "2447000"
  },
  {
    "text": "product - let's make a scope product to claim one claim - or in product - that",
    "start": "2450380",
    "end": "2455720"
  },
  {
    "text": "can be pretty useful because now we can start designing okay we have this API it needs these things it needs claim one",
    "start": "2455720",
    "end": "2463250"
  },
  {
    "text": "claim - in order to do something it needs phone number to be able to list transactions well add that to the scope",
    "start": "2463250",
    "end": "2469820"
  },
  {
    "text": "of access that our client needs that's a way to do it or have the client specifically ask for the claims that it",
    "start": "2469820",
    "end": "2476089"
  },
  {
    "text": "needs there depends that's a discussion what to use where but the thing is if we",
    "start": "2476089",
    "end": "2481130"
  },
  {
    "start": "2477000",
    "end": "2477000"
  },
  {
    "text": "start being better at querying for the data we think should go in to the tokens",
    "start": "2481130",
    "end": "2486470"
  },
  {
    "text": "we need we require less things for the user to consent to imagine when you",
    "start": "2486470",
    "end": "2493099"
  },
  {
    "text": "actually ask for the profile scope that's the list of claims the user will",
    "start": "2493099",
    "end": "2498470"
  },
  {
    "text": "have to consent to and all of a sudden the users start thinking why do you need",
    "start": "2498470",
    "end": "2504320"
  },
  {
    "text": "my nickname what are you gonna do with my nickname I'm gonna just my email should be enough right so you're asking",
    "start": "2504320",
    "end": "2511130"
  },
  {
    "text": "for a lot and and in Europe today I mean we don't want to be asking for a lot of consent",
    "start": "2511130",
    "end": "2517099"
  },
  {
    "text": "for stuff we don't need because it's twofold it also goes into you have to deal with it if you get that data",
    "start": "2517099",
    "end": "2522200"
  },
  {
    "text": "released it's your problem then gdpr wise your problem if it's in your service so",
    "start": "2522200",
    "end": "2528430"
  },
  {
    "text": "the less you get the better right more private both of the users are",
    "start": "2528430",
    "end": "2533920"
  },
  {
    "text": "better for the company and we can do finer grained authorizations so if the",
    "start": "2533920",
    "end": "2540910"
  },
  {
    "text": "client would ask for the email scope and the user will be presented with email",
    "start": "2540910",
    "end": "2546430"
  },
  {
    "text": "email verified and then would say I'm not going to tell you if it's verified or not the client actually has to be a",
    "start": "2546430",
    "end": "2552309"
  },
  {
    "text": "bit smart it has to know ok what do I do if this didn't happen if I didn't get it",
    "start": "2552309",
    "end": "2558420"
  },
  {
    "text": "the thing is if all those claims in a scope aren't released so if someone",
    "start": "2558420",
    "end": "2565750"
  },
  {
    "text": "decides no you're not going to get both claims in this scope you don't get the scope so as you can see here you request",
    "start": "2565750",
    "end": "2572619"
  },
  {
    "text": "that the email scope the user denied you email verified which means you get the email claimed back but you don't get the",
    "start": "2572619",
    "end": "2579309"
  },
  {
    "text": "email scope back because it's not fulfilled you don't have the whole scope of access for email so the response",
    "start": "2579309",
    "end": "2587140"
  },
  {
    "text": "parameter claims can tell you which claims did you get but the scope parameter won't tell you what you got so",
    "start": "2587140",
    "end": "2593589"
  },
  {
    "text": "what does this do with access control say that we have an application now",
    "start": "2593589",
    "end": "2599710"
  },
  {
    "start": "2594000",
    "end": "2594000"
  },
  {
    "text": "we're getting pretty pretty gory here where we have scope ache scope based",
    "start": "2599710",
    "end": "2605440"
  },
  {
    "text": "access control and claims based access control so we have scope a B and C and",
    "start": "2605440",
    "end": "2610589"
  },
  {
    "text": "let's assume we ask for all three scopes and everything is granted user says ok",
    "start": "2610589",
    "end": "2617410"
  },
  {
    "text": "server says ok but the application actually only needed the claim a 1 here",
    "start": "2617410",
    "end": "2624579"
  },
  {
    "text": "so you asked for everything you got everything but you didn't need everything so application only needed a",
    "start": "2624579",
    "end": "2630279"
  },
  {
    "text": "1 in both cases everything is fine let's go pay is there claim a 1 is there",
    "start": "2630279",
    "end": "2635890"
  },
  {
    "text": "you're good to go but same example you asked for ABC but",
    "start": "2635890",
    "end": "2643180"
  },
  {
    "text": "the user is picky and deselect stuff incest or the server decides nah I'm not",
    "start": "2643180",
    "end": "2649000"
  },
  {
    "text": "going to give you claim a 3 for instance because you know it happens",
    "start": "2649000",
    "end": "2656800"
  },
  {
    "text": "so a 1 to 4 is granted b1 c1 2 is granted which means scope B is there because you",
    "start": "2656800",
    "end": "2663640"
  },
  {
    "text": "got everything in scope e scope see is there because it got everything in scope C scope a is not there because you",
    "start": "2663640",
    "end": "2669550"
  },
  {
    "text": "didn't get a 3 but the application didn't need a 3 it needed a 1 so with scope based access",
    "start": "2669550",
    "end": "2677500"
  },
  {
    "text": "control you wouldn't get access your to coarse-grained whereas in claim space",
    "start": "2677500",
    "end": "2683110"
  },
  {
    "text": "access controlled you would because all you need was a 1 so this this sort of",
    "start": "2683110",
    "end": "2689770"
  },
  {
    "text": "has this issue of like it it's currently being used a lot and open ID is used",
    "start": "2689770",
    "end": "2695440"
  },
  {
    "text": "where you ask for as much privilege as you can in the beginning and you never step up and this this doesn't scale for",
    "start": "2695440",
    "end": "2703660"
  },
  {
    "text": "us I mean with the privacy regulations and other things coming up we cannot",
    "start": "2703660",
    "end": "2708700"
  },
  {
    "text": "keep doing that so claim space access control is what we need and it's actually quite easy to use once you",
    "start": "2708700",
    "end": "2714460"
  },
  {
    "text": "start having it because you know if something comes into the token I know it's true I can operate on it I can work",
    "start": "2714460",
    "end": "2720520"
  },
  {
    "text": "my data and I'm good to go so building logic around the sort of if you know",
    "start": "2720520",
    "end": "2727890"
  },
  {
    "text": "authorization there's something called attribute based access control or a back",
    "start": "2727890",
    "end": "2733800"
  },
  {
    "text": "which is having a few standards around it the prominent one but that didn't",
    "start": "2733800",
    "end": "2739180"
  },
  {
    "text": "really get adoption that much is sac Mille but there are other things now like OPA open authorization open policy",
    "start": "2739180",
    "end": "2748210"
  },
  {
    "text": "agent used in kubernetes sometimes these work on attribute based authorization an",
    "start": "2748210",
    "end": "2754630"
  },
  {
    "text": "attribute authorization requires attributes they need data and if you can",
    "start": "2754630",
    "end": "2760570"
  },
  {
    "text": "provide that data from a trusted source you're likely to do the right thing you're likely to make the correct",
    "start": "2760570",
    "end": "2766180"
  },
  {
    "text": "decision it's not guaranteed obviously but it's likely all right time to",
    "start": "2766180",
    "end": "2775630"
  },
  {
    "text": "summarize you should trust as few parts as possible in your network keep it to a",
    "start": "2775630",
    "end": "2781600"
  },
  {
    "text": "minimum put a nova server somewhere safe and open ID connect provider if you need one",
    "start": "2781600",
    "end": "2788100"
  },
  {
    "text": "connect them to your attribute sources and then make your applications trust that if you need to trust another cloud",
    "start": "2788100",
    "end": "2795040"
  },
  {
    "text": "service will make your Oba server trust a ton so that you make sort of a nice chain of trust",
    "start": "2795040",
    "end": "2801220"
  },
  {
    "text": "rather than having trust spread out because if you start having trust spread out your boiling spaghetti and don't",
    "start": "2801220",
    "end": "2809590"
  },
  {
    "start": "2804000",
    "end": "2804000"
  },
  {
    "text": "make jots everywhere do not construct a jot and send it to the next one just",
    "start": "2809590",
    "end": "2815140"
  },
  {
    "text": "because then it's more secure or easy because you're starting to introduce these sort of snippets of pasta all over",
    "start": "2815140",
    "end": "2822370"
  },
  {
    "text": "and it's going to be hard to untangle after a while attributes are not claims",
    "start": "2822370",
    "end": "2829300"
  },
  {
    "start": "2828000",
    "end": "2828000"
  },
  {
    "text": "we have first name Jacob of Jane last name Doe there are attributes claims I'm",
    "start": "2829300",
    "end": "2837880"
  },
  {
    "text": "sorry there are no scopes there's only scope they represent the grouping of",
    "start": "2837880",
    "end": "2843640"
  },
  {
    "text": "claims good takeaway and claims are pretty easy car is blue Travis phone number is 1 2 3",
    "start": "2843640",
    "end": "2851280"
  },
  {
    "text": "I'm done [Applause]",
    "start": "2851280",
    "end": "2860490"
  },
  {
    "text": "you [Applause]",
    "start": "2860490",
    "end": "2864130"
  }
]