[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "so yes I spent a lot of years in physics in high performance computing for",
    "start": "5019",
    "end": "11809"
  },
  {
    "text": "particle physics on the largest supercomputers of the world at slac working together wis earn that was from",
    "start": "11809",
    "end": "18140"
  },
  {
    "text": "a background and then i switched into machine learning startups I've been doing this for the last three and a half years or so last year I got nominated",
    "start": "18140",
    "end": "26240"
  },
  {
    "text": "and called a big data all-star at the Fortune magazine so that was a nice",
    "start": "26240",
    "end": "31819"
  },
  {
    "text": "surprise and you can follow me at are no condell here and if anybody would be willing to take a picture and tweet it",
    "start": "31819",
    "end": "37850"
  },
  {
    "text": "to me that will be great thanks so much so yesterday we're going to introduce h2o and then talk about deep learning a",
    "start": "37850",
    "end": "45560"
  },
  {
    "start": "40000",
    "end": "69000"
  },
  {
    "text": "little bit in more detail and then there will be a lot of live demos as much as",
    "start": "45560",
    "end": "51170"
  },
  {
    "text": "time allows I will go through all these different things so we'll look at different data sets different api's and",
    "start": "51170",
    "end": "57970"
  },
  {
    "text": "i'll make sure that you have a good impression about what h2o can do for you and how it would look like and that you",
    "start": "57970",
    "end": "66140"
  },
  {
    "text": "definitely get an idea of what we can do here so h2o is a in memory machine",
    "start": "66140",
    "end": "72140"
  },
  {
    "start": "69000",
    "end": "124000"
  },
  {
    "text": "learning platform it's written in Java it's open source it distributes across",
    "start": "72140",
    "end": "78020"
  },
  {
    "text": "your cluster it sends the code around not the data so your data can stay on the cluster and you have a large data",
    "start": "78020",
    "end": "86360"
  },
  {
    "text": "set right and then you want to build models on the entire data set you don't want to down sample and lose accuracy",
    "start": "86360",
    "end": "91880"
  },
  {
    "text": "that way but usual the problem is that the tools don't allow you to scale to",
    "start": "91880",
    "end": "97820"
  },
  {
    "text": "all the big data sets especially for building machine learning models we're not just talking about summing up stuff",
    "start": "97820",
    "end": "104390"
  },
  {
    "text": "for computing aggregates you're talking about sophisticated models like gradient boosting machines or neural networks and",
    "start": "104390",
    "end": "112240"
  },
  {
    "text": "h2 allows you to do this and you get the the scalability and the accuracy from",
    "start": "112240",
    "end": "117710"
  },
  {
    "text": "this big data set in scale and as I mentioned earlier we have a lot of AP is that you'll get to see today we also",
    "start": "117710",
    "end": "125390"
  },
  {
    "text": "have a scoring engine which is kind of a key point of the product we are about 35",
    "start": "125390",
    "end": "131120"
  },
  {
    "text": "people right now we had our first h-2a world conference last year in the fall",
    "start": "131120",
    "end": "137720"
  },
  {
    "text": "and the most huge success and sri satish embody here i was CEO he had he has a great great",
    "start": "137720",
    "end": "144800"
  },
  {
    "text": "mindset and culture culture is everything to him so he likes to do meet ups every week even twice a week to get",
    "start": "144800",
    "end": "152750"
  },
  {
    "text": "feedback from customers and so on so we are very much community driven even though we write most of the code at this",
    "start": "152750",
    "end": "159110"
  },
  {
    "text": "point so you can see here the growth machine learning is really trending and",
    "start": "159110",
    "end": "165500"
  },
  {
    "text": "we think it's the next SQL and prediction is the next search there's not just predictive analytics there's",
    "start": "165500",
    "end": "171890"
  },
  {
    "text": "also prescriptive analytics where you're trying to not just say what's going to happen tomorrow but you're going to tell the customers what to do such that they",
    "start": "171890",
    "end": "178130"
  },
  {
    "text": "can affect tomorrow so you can see the growth here lots and lots of companies are now using h2o and why is that well",
    "start": "178130",
    "end": "186500"
  },
  {
    "start": "184000",
    "end": "279000"
  },
  {
    "text": "because it's a distributed system built by the experts in house we have click",
    "start": "186500",
    "end": "192290"
  },
  {
    "text": "click click he's our CTO he wrote basically Java compiler jit right large parts of it in every cell phone of yours",
    "start": "192290",
    "end": "199400"
  },
  {
    "text": "there's parts of his code that are executed all the time so he architected",
    "start": "199400",
    "end": "204980"
  },
  {
    "text": "the whole framework it's a distributed memory key value store based on a non-blocking hash map it has a MapReduce",
    "start": "204980",
    "end": "213500"
  },
  {
    "text": "paradigm built in our own map produced which is fine grain and make sure that",
    "start": "213500",
    "end": "218930"
  },
  {
    "text": "all the threats are working at all times if you're processing your data and of course all the nodes are working in",
    "start": "218930",
    "end": "224030"
  },
  {
    "text": "parallel as you'll see you later and we also compress the data similar to the park a data format and so you can really",
    "start": "224030",
    "end": "230630"
  },
  {
    "text": "store only the data you need and it's much cheaper to decompress on the fly in the registers of the CPU then to send",
    "start": "230630",
    "end": "236480"
  },
  {
    "text": "the numbers across the wire and once you have this framework in place you can write algorithms that are using this",
    "start": "236480",
    "end": "242959"
  },
  {
    "text": "MapReduce paradigm and you can also do less than an algorithm you can just say compute aggregates for example it's like",
    "start": "242959",
    "end": "250190"
  },
  {
    "text": "a mini algorithm if you want so you can do all these things and in the end you end up with a model that makes a",
    "start": "250190",
    "end": "255920"
  },
  {
    "text": "prediction of the future right you stand with machine learning and that code can",
    "start": "255920",
    "end": "261200"
  },
  {
    "text": "then be exported then I'll show you that in a minute and of course we can suck in data from pretty much anywhere and you",
    "start": "261200",
    "end": "266240"
  },
  {
    "text": "can talk to our Python via JSON from a",
    "start": "266240",
    "end": "271310"
  },
  {
    "text": "web browser I routinely check the status of my jobs from my cell phone for example so",
    "start": "271310",
    "end": "280010"
  },
  {
    "start": "279000",
    "end": "315000"
  },
  {
    "text": "there's a bunch of customers using us right now these that are referenceable at this point there's a lot more that we can talk about at this moment but you'll",
    "start": "280010",
    "end": "288290"
  },
  {
    "text": "hear about them soon they're basically doing big data right hundreds of",
    "start": "288290",
    "end": "294200"
  },
  {
    "text": "gigabytes dozens of nodes and they're processing data all the time and they",
    "start": "294200",
    "end": "299630"
  },
  {
    "text": "have faster turnaround times they're saving model saving millions by deploying these models such as this",
    "start": "299630",
    "end": "306170"
  },
  {
    "text": "fraud detection model it has a safe paypal millions in fraud so it's very",
    "start": "306170",
    "end": "316400"
  },
  {
    "start": "315000",
    "end": "353000"
  },
  {
    "text": "easy to download you just go to h dot AI and you can find the download button you downloaded it once it's downloaded you",
    "start": "316400",
    "end": "322610"
  },
  {
    "text": "unzip that that file and you go in there and type java dejar right that's it h2o",
    "start": "322610",
    "end": "329450"
  },
  {
    "text": "will be running on your system there's no dependencies it's just one single file that you need and you're basically",
    "start": "329450",
    "end": "335000"
  },
  {
    "text": "running and you can do the same thing on a cluster you expect to file everywhere and you launch it that would be a bear",
    "start": "335000",
    "end": "340190"
  },
  {
    "text": "ball installation if you don't want to do bare bones you can do Hadoop you can do yarn spark you can launch it from our",
    "start": "340190",
    "end": "348230"
  },
  {
    "text": "and from Python as well so let's do a",
    "start": "348230",
    "end": "353930"
  },
  {
    "start": "353000",
    "end": "604000"
  },
  {
    "text": "quick demo here this is glm so i'm going to a cluster here this cluster has my",
    "start": "353930",
    "end": "361550"
  },
  {
    "text": "name on it you got a dedicated cluster for this demo so let's see what this",
    "start": "361550",
    "end": "366770"
  },
  {
    "text": "past erase this cluster is an eighth note cluster on ec2 it has I think 30",
    "start": "366770",
    "end": "375290"
  },
  {
    "text": "gigabytes of heap per machine yep here and basically it's just there waiting",
    "start": "375290",
    "end": "382400"
  },
  {
    "text": "for me to tell it what to do so one thing I did earlier as I parse this Airlines data set I'm going to do this",
    "start": "382400",
    "end": "388040"
  },
  {
    "text": "again the airlines data set has all the flights from 2007 all the way back to nineteen eighty seven and it's parsing",
    "start": "388040",
    "end": "396230"
  },
  {
    "text": "this right now and let's go look at the cpu usage here you can see that all the",
    "start": "396230",
    "end": "403280"
  },
  {
    "text": "notes are active right now sucking in the data parsing it tokenizing it compressing it",
    "start": "403280",
    "end": "408740"
  },
  {
    "text": "into these these reduced representations that are lost less of course so when we have numbers like 719 and 120 then you",
    "start": "408740",
    "end": "417110"
  },
  {
    "text": "know that that fits into one bite so you make a one-bite column right once you see that their numbers there are more",
    "start": "417110",
    "end": "422680"
  },
  {
    "text": "dynamic ranged and just one bite then you take two bites and so on you basically just store what you need it's",
    "start": "422680",
    "end": "429170"
  },
  {
    "text": "okay so now it part of this file in 35 seconds let's go look at the file there's a frame summary that I'm",
    "start": "429170",
    "end": "435470"
  },
  {
    "text": "expecting it from the server and the server now returns this and says here 160 million rows can you see this",
    "start": "435470",
    "end": "444730"
  },
  {
    "text": "there's 160 million rows 30 columns about 4 gigabytes compressed space you",
    "start": "444730",
    "end": "450260"
  },
  {
    "text": "see all these different columns here they have like a summary a cardinality some of them are categorical here so in",
    "start": "450260",
    "end": "456650"
  },
  {
    "text": "effect is about 700 or dictators in this data set and we're trying to predict whether their plane is delayed or not",
    "start": "456650",
    "end": "463310"
  },
  {
    "text": "based on its like departure origin and destination airport and so on so if i",
    "start": "463310",
    "end": "470990"
  },
  {
    "text": "wanted to do this i will just click here build model i will say generalized linear model that's one that is fast and",
    "start": "470990",
    "end": "478990"
  },
  {
    "text": "the training frame is chosen here and i will now choose some columns to use i'll first ignore all of them because there's",
    "start": "478990",
    "end": "485930"
  },
  {
    "text": "a lot of columns i don't want to use and then i'll add year month the day the",
    "start": "485930",
    "end": "491060"
  },
  {
    "text": "week at the day of the week let's see we want to know the departure time maybe",
    "start": "491060",
    "end": "496460"
  },
  {
    "text": "the carrier not the flight number that doesn't mean much maybe the origin and",
    "start": "496460",
    "end": "502340"
  },
  {
    "text": "destination and then all we really care about is whether it's the late or not so",
    "start": "502340",
    "end": "509000"
  },
  {
    "text": "that will be my response everything else you don't need because it would give away the answer right so its departure",
    "start": "509000",
    "end": "514820"
  },
  {
    "text": "the late is what I'm going to try to predict and it's a binomial problem so yes or no is the answer and now I just",
    "start": "514820",
    "end": "522710"
  },
  {
    "text": "have to press go and it's building this model as we as we speak and I can go to",
    "start": "522710",
    "end": "529340"
  },
  {
    "text": "the water meter to see the cpu usage and you can see that all the nodes are busy computing this model right now",
    "start": "529340",
    "end": "538050"
  },
  {
    "text": "and in a few seconds it will be done you see the objective value doesn't change anymore yep so it's done in 19 seconds",
    "start": "538050",
    "end": "546750"
  },
  {
    "text": "and I can look at the model and I can see that we have an auc of 9.5 it's a",
    "start": "546750",
    "end": "554640"
  },
  {
    "text": "little more than point five right it's not just random we have variable importances here we can see that certain",
    "start": "554640",
    "end": "562620"
  },
  {
    "text": "airlines like Eastern Airlines is as a negative correlation with the response",
    "start": "562620",
    "end": "568380"
  },
  {
    "text": "which means it's it's rarely if you take this carrier you're not going to be delayed that's because it didn't have a",
    "start": "568380",
    "end": "574950"
  },
  {
    "text": "schedule it was always on time by definition for example so this is like one bit that comes out of this model",
    "start": "574950",
    "end": "580950"
  },
  {
    "text": "another thing is that Chicago and Atlanta are often delayed when you start there right when your journey starts",
    "start": "580950",
    "end": "586380"
  },
  {
    "text": "there as you know or for example San Francisco if you want to fly to San",
    "start": "586380",
    "end": "592950"
  },
  {
    "text": "Francisco there's a lot of people who want to do that so that's why it's also often delayed and as I mentioned earlier",
    "start": "592950",
    "end": "599339"
  },
  {
    "text": "the accuracy here flatlined after the first few iterations so the model could",
    "start": "599339",
    "end": "604709"
  },
  {
    "start": "604000",
    "end": "1023000"
  },
  {
    "text": "have been done even faster if you're looking at the metrics here for example you can see that there's a mean square",
    "start": "604709",
    "end": "610350"
  },
  {
    "text": "error reported an r square value report at all this data science stuff aoc value of point 65 and so on and there's even a",
    "start": "610350",
    "end": "619260"
  },
  {
    "text": "POJO that we can look at you know what a POJO is a plain old java object it's basically Java code that's the scoring",
    "start": "619260",
    "end": "626040"
  },
  {
    "text": "code that you can take into production that actually scores your flights in real time and you could say okay if",
    "start": "626040",
    "end": "632070"
  },
  {
    "text": "you're this airline and if you're at this time of day then you're going to have this probability to be delayed or",
    "start": "632070",
    "end": "637770"
  },
  {
    "text": "not and this is the optimal threshold computed from the ROC curve that curve",
    "start": "637770",
    "end": "643500"
  },
  {
    "text": "that you saw earlier that tells you where where best to pick your to operating regime to say the later not",
    "start": "643500",
    "end": "649890"
  },
  {
    "text": "based on the falls and positives and true positives and so on that you're balancing right so let it stand the data",
    "start": "649890",
    "end": "655170"
  },
  {
    "text": "science it's all baked in for you you get the answer right away so this was on 160 million rows and we just did this",
    "start": "655170",
    "end": "662519"
  },
  {
    "text": "life so as you saw the pojo scoring code",
    "start": "662519",
    "end": "669820"
  },
  {
    "text": "there's there's more models that you can build in in the flow user API the degree",
    "start": "669820",
    "end": "676420"
  },
  {
    "text": "that you saw earlier there's a a Help button on the right side here to bring",
    "start": "676420",
    "end": "681819"
  },
  {
    "text": "this back up there's help I go down and I can see here packs so there's a bunch",
    "start": "681819",
    "end": "688300"
  },
  {
    "text": "of example packs that come with it so if I click on this here I'll do this",
    "start": "688300",
    "end": "693850"
  },
  {
    "text": "actually on my laptop now I'll show you",
    "start": "693850",
    "end": "699009"
  },
  {
    "text": "how to run this on a laptop so I just downloaded the the package from the website and it only contains two files",
    "start": "699009",
    "end": "705240"
  },
  {
    "text": "one is an r package and one is the actual java jar file I'm going to start",
    "start": "705240",
    "end": "711190"
  },
  {
    "text": "this on my laptop and I'm going to check the browser localhost at port five four",
    "start": "711190",
    "end": "721959"
  },
  {
    "text": "three two one that's our default port and now I'm connected to this java JVM",
    "start": "721959",
    "end": "727569"
  },
  {
    "text": "that I just launched right and I can ask it this is a little too big now let's",
    "start": "727569",
    "end": "735069"
  },
  {
    "text": "make it smaller here we go I can look at the cluster status yet it's a one-note clustered I gave it 8 gigs of heap you",
    "start": "735069",
    "end": "743470"
  },
  {
    "text": "can see that and it's all ready to go so now I'm going to launch this this flow from this example pack this million",
    "start": "743470",
    "end": "751690"
  },
  {
    "text": "songs flow I'm going to load that notebook and you can see this is the million song binary classification demo",
    "start": "751690",
    "end": "759010"
  },
  {
    "text": "we basically have data set with 500,000 observations 90 numerical columns and",
    "start": "759010",
    "end": "764519"
  },
  {
    "text": "we're going to split that and store the next three well that's done you already",
    "start": "764519",
    "end": "770319"
  },
  {
    "text": "have those files ready for you so now we just have to parse them in here and I put them already on my laptop so I can",
    "start": "770319",
    "end": "776860"
  },
  {
    "text": "just say download on import into the h2o cluster I'll take the non zip diversion",
    "start": "776860",
    "end": "783220"
  },
  {
    "text": "because that's faster so this this file is a few hundred megabytes it's done in three seconds and this one here is the",
    "start": "783220",
    "end": "791620"
  },
  {
    "text": "test set I'm also going to parse this and you can see that you can even specify the column types if you wanted",
    "start": "791620",
    "end": "798470"
  },
  {
    "text": "to turn a number into an enum for classification you can do this here explicitly if you're not happy with the",
    "start": "798470",
    "end": "804380"
  },
  {
    "text": "default behavior of the parser but the parts that is very robust and can usually handle that so if you have",
    "start": "804380",
    "end": "809780"
  },
  {
    "text": "missing values if you have all kinds of categoricals ugly strings stuff that's wrong we'll handle it it's very robust",
    "start": "809780",
    "end": "816080"
  },
  {
    "text": "it's really made for enterprise-grade datasets it'll it'll go through your dirty data and just spit something out",
    "start": "816080",
    "end": "821990"
  },
  {
    "text": "that's usually pretty good okay so now we have these data sets and I'll see but",
    "start": "821990",
    "end": "827300"
  },
  {
    "text": "what else we have here so let me go back out here give your view you can click on outline on the right and you can see all",
    "start": "827300",
    "end": "833660"
  },
  {
    "text": "these cells that I pre-populated here and one of them says build a random forest once has build a gradient",
    "start": "833660",
    "end": "839480"
  },
  {
    "text": "boosting machine one says build a linear model logistic regression and one says build a deep learning model right and I",
    "start": "839480",
    "end": "845840"
  },
  {
    "text": "can just say okay fine let's build one let's say let's go down to the GBM cell and say execute this cell now it's",
    "start": "845840",
    "end": "851750"
  },
  {
    "text": "building a gradient boosting machine on this data set you can see the progress bar here and violets building it I can",
    "start": "851750",
    "end": "858110"
  },
  {
    "text": "say hey how do you look right now let me see how you're doing so right now it's already giving me to scoring history",
    "start": "858110",
    "end": "865040"
  },
  {
    "text": "points where the error went down it's already in a OC curve an ROC curve with an AOC of something like see point seven",
    "start": "865040",
    "end": "873740"
  },
  {
    "text": "I would hope yes point seven a you see already right in just seconds that's",
    "start": "873740",
    "end": "879260"
  },
  {
    "text": "pretty good for this data set if I do it again it's already down here the error",
    "start": "879260",
    "end": "885020"
  },
  {
    "text": "ghost keeps going down and you can keep looking at that model feature importances for which which variables",
    "start": "885020",
    "end": "891020"
  },
  {
    "text": "matter the most all in real time and I can also look at the Poggio again this time it's a tree model not a logistic",
    "start": "891020",
    "end": "897410"
  },
  {
    "text": "regression model so you would expect some decisions in this tree structure if",
    "start": "897410",
    "end": "902660"
  },
  {
    "text": "I go down there's all these classes that",
    "start": "902660",
    "end": "908900"
  },
  {
    "text": "this all like Java code I think the tree should be somewhere let me see I might",
    "start": "908900",
    "end": "917510"
  },
  {
    "text": "have to refresh this model",
    "start": "917510",
    "end": "921220"
  },
  {
    "text": "oh here we go so these are all the forests here you see that there's a lot of forests that are being scored and now",
    "start": "928560",
    "end": "934380"
  },
  {
    "text": "we just have to find this function somewhere down there and up here it is",
    "start": "934380",
    "end": "939840"
  },
  {
    "text": "so here you can see that this is decision tree logic right if your data is less than 4,000 in this column and",
    "start": "939840",
    "end": "947850"
  },
  {
    "text": "less than this endless and then in the end your prediction will be so and so much otherwise it will be this number so",
    "start": "947850",
    "end": "954779"
  },
  {
    "text": "basically this is the scoring code of this model that you can put right into production in storm or any other API",
    "start": "954779",
    "end": "961800"
  },
  {
    "text": "that you want to use your own basically that's just Java code without any dependencies and you can build the same",
    "start": "961800",
    "end": "969630"
  },
  {
    "text": "thing with deep learning right you can build a deep learning model on the same data set at the same time that the other one is building you can be able to",
    "start": "969630",
    "end": "976230"
  },
  {
    "text": "random forest model here also at the same time or a glm and this is all on my",
    "start": "976230",
    "end": "984870"
  },
  {
    "text": "laptop right now so I'm building different models at the same time and I can ask hey what's the status of them I",
    "start": "984870",
    "end": "991350"
  },
  {
    "text": "can just go to the right here in the outline and click on giving my deep learning model oh it's already done",
    "start": "991350",
    "end": "997790"
  },
  {
    "text": "let's see how well we're doing here also a good auc right and feature importances",
    "start": "997790",
    "end": "1005570"
  },
  {
    "text": "and the scoring history and the metrics and you can even get a list of optimal",
    "start": "1005570",
    "end": "1012050"
  },
  {
    "text": "metrics like what's the best position i can get what's the best accuracy i can get and then at what threshold so this",
    "start": "1012050",
    "end": "1017570"
  },
  {
    "text": "is all geared towards the data scientist understanding what's happening all right",
    "start": "1017570",
    "end": "1024650"
  },
  {
    "start": "1023000",
    "end": "1152000"
  },
  {
    "text": "so mild my laptop is churning out some more models you can continue here and",
    "start": "1024650",
    "end": "1029780"
  },
  {
    "text": "talk about deep learning in more detail so deep learning as you all know is",
    "start": "1029780",
    "end": "1034790"
  },
  {
    "text": "basically just connected neurons right and it's similar to logistic regression except that there's more multiplications",
    "start": "1034790",
    "end": "1042438"
  },
  {
    "text": "going on you take your feature times the weight you get a number and then you add",
    "start": "1042439",
    "end": "1048530"
  },
  {
    "text": "it up and you do this for all these connections your each connection is a",
    "start": "1048530",
    "end": "1053570"
  },
  {
    "text": "product of the wait times the input gives you some output and then you apply a nonlinear function like at NH",
    "start": "1053570",
    "end": "1060230"
  },
  {
    "text": "something is like a step function move step function and you do this again",
    "start": "1060230",
    "end": "1065250"
  },
  {
    "text": "and again and again and at the end you have like a hierarchy of nonlinear transformations which will lead to very",
    "start": "1065250",
    "end": "1071280"
  },
  {
    "text": "complex nonlinearities in your model so you can describe really weird stuff that",
    "start": "1071280",
    "end": "1076380"
  },
  {
    "text": "you would otherwise not be able to with say a linear model or a simple random forest that doesn't go as deep to to",
    "start": "1076380",
    "end": "1082440"
  },
  {
    "text": "make up all these nonlinearities between all these features so this is basically the machinery you need for",
    "start": "1082440",
    "end": "1088520"
  },
  {
    "text": "nonlinearities in your data set and we do this in a distributed way again because we're using the MapReduce we're",
    "start": "1088520",
    "end": "1095160"
  },
  {
    "text": "doing this again on all the threads right as you saw earlier for glm and everything was Green deep learning is",
    "start": "1095160",
    "end": "1100860"
  },
  {
    "text": "also green it's known to be green I usually burn up the whole custom and I'm running my models and everybody else has",
    "start": "1100860",
    "end": "1107910"
  },
  {
    "text": "to step back well of course there's the Linux scheduler that takes care of that",
    "start": "1107910",
    "end": "1113220"
  },
  {
    "text": "but still some claim it's not necessarily fair if I'm running some big model so I haven't done that lately and",
    "start": "1113220",
    "end": "1119550"
  },
  {
    "text": "that's why I'm using these easy two clusters now or maybe my laptop from time to time but anyway you can see here",
    "start": "1119550",
    "end": "1125850"
  },
  {
    "text": "we have a lot of little details building right it works automatically on categorical data it were automatically",
    "start": "1125850",
    "end": "1131490"
  },
  {
    "text": "standardizes standardizes your data you don't need to worry about that it automatically impedes missing values it",
    "start": "1131490",
    "end": "1138300"
  },
  {
    "text": "automatically does regularization for you if you specify the option it does a",
    "start": "1138300",
    "end": "1144390"
  },
  {
    "text": "check pointing load balancing everything you just need to say go and that's it so it should be like super easy for anyone",
    "start": "1144390",
    "end": "1150870"
  },
  {
    "text": "to just run it and if you want to know how it works in the detail architecture",
    "start": "1150870",
    "end": "1156360"
  },
  {
    "text": "here it's basically just distributing the data set for it first right onto the whole cluster let's say you have a",
    "start": "1156360",
    "end": "1162480"
  },
  {
    "text": "terabyte of data and 10 notes every node will get 100 gigabytes different data and then you're saying okay I'll make an",
    "start": "1162480",
    "end": "1169440"
  },
  {
    "text": "initial deep learning model that's a bunch of weights and bias values all just numbers and i'll put that into some",
    "start": "1169440",
    "end": "1176160"
  },
  {
    "text": "place in the store and then i spread that to all the notes all my 10 notes get a copy of the same model and then i",
    "start": "1176160",
    "end": "1184290"
  },
  {
    "text": "say train on your local data so then all the the models will get trained on their",
    "start": "1184290",
    "end": "1189900"
  },
  {
    "text": "local data with multi-threading so there are some race conditions here that makes this not reproducible",
    "start": "1189900",
    "end": "1195690"
  },
  {
    "text": "but in the end you will have n models in this case for or on your cluster that",
    "start": "1195690",
    "end": "1201029"
  },
  {
    "text": "I've just mentioned 10 you will have 10 such models of that I've been built on a",
    "start": "1201029",
    "end": "1206220"
  },
  {
    "text": "part of these hundred gigabytes that you have you don't have to process all the hundred gigabytes you can just sample",
    "start": "1206220",
    "end": "1211230"
  },
  {
    "text": "some of it right and then when you're done with that you reduce it basically",
    "start": "1211230",
    "end": "1216419"
  },
  {
    "text": "automatically will get average back into one model and that one model is the one that you look at from your browser from",
    "start": "1216419",
    "end": "1222539"
  },
  {
    "text": "our from Python and then you do this again and every pass is a fraction of",
    "start": "1222539",
    "end": "1227820"
  },
  {
    "text": "the data that you're passing through or all of the data or more than all of your",
    "start": "1227820",
    "end": "1232919"
  },
  {
    "text": "data you can just keep iterating without communicating you can tell each no to just run for six weeks and then",
    "start": "1232919",
    "end": "1238799"
  },
  {
    "text": "communicate but by default it's done in a way that you spend about two percent of your time communicating on the",
    "start": "1238799",
    "end": "1244559"
  },
  {
    "text": "cluster and ninety-eight percent computing and this is all automatically done so you don't need to worry about",
    "start": "1244559",
    "end": "1249629"
  },
  {
    "text": "anything you just say go and it'll basically process the data in parallel and make a good model and this averaging",
    "start": "1249629",
    "end": "1255779"
  },
  {
    "text": "of models this scheme works there's a paper about it but I'm also working on a new scheme that's called consensus a dmm",
    "start": "1255779",
    "end": "1264029"
  },
  {
    "text": "where you basically have penalty how far you drift from the average but you keep",
    "start": "1264029",
    "end": "1269549"
  },
  {
    "text": "your local model and that keeps everybody kind of going on their own path in optimization land without",
    "start": "1269549",
    "end": "1275330"
  },
  {
    "text": "averaging all the time you just you know that you're drifting too far so you get pulled back a little but you still have",
    "start": "1275330",
    "end": "1281789"
  },
  {
    "text": "your own model so this is going to be promising upgrade soon that you can look forward to already as it is it works",
    "start": "1281789",
    "end": "1289950"
  },
  {
    "start": "1287000",
    "end": "1335000"
  },
  {
    "text": "fairly well so this is the amidst right two digits 0 to 9 handwritten digits 784",
    "start": "1289950",
    "end": "1295019"
  },
  {
    "text": "grayscale pixels you need to know which one is it right from the grayscale pixel values and in with a couple of lines",
    "start": "1295019",
    "end": "1301980"
  },
  {
    "text": "here in our you can get the world class is actually actual world record no one has published a better number in this",
    "start": "1301980",
    "end": "1308399"
  },
  {
    "text": "without using convolutional layers or any other distortions this is purely on",
    "start": "1308399",
    "end": "1314669"
  },
  {
    "text": "the 60,000 training samples no distortions no convolutions and you can",
    "start": "1314669",
    "end": "1320009"
  },
  {
    "text": "see here all the other implementations Jeff Hinton's and Microsoft's point 83",
    "start": "1320009",
    "end": "1325350"
  },
  {
    "text": "is the world record of course you could say the last digit is not quite statistically significant because you only have ten",
    "start": "1325350",
    "end": "1330840"
  },
  {
    "text": "thousand to test set points but still it's good to get down there so now let's",
    "start": "1330840",
    "end": "1336570"
  },
  {
    "start": "1335000",
    "end": "1774000"
  },
  {
    "text": "do a little demo here this is a normally detection I'll show you how we can detect the ugly digits in this Emily's",
    "start": "1336570",
    "end": "1342960"
  },
  {
    "text": "data set on my laptop in a few seconds so I just have this instance up and",
    "start": "1342960",
    "end": "1348210"
  },
  {
    "text": "running here from before so I'm going to go into our in our I have this our units",
    "start": "1348210",
    "end": "1357720"
  },
  {
    "text": "this runs every day right every time we commit something these tests are being run so you can definitely check those",
    "start": "1357720",
    "end": "1362760"
  },
  {
    "text": "out from your github web page right now if you want but still this is saying",
    "start": "1362760",
    "end": "1370860"
  },
  {
    "text": "build a an auto encoder model which is learning what's normal so it connects to",
    "start": "1370860",
    "end": "1380550"
  },
  {
    "text": "my cluster right now it learns what's normal what is a normal digit without knowing but they do today's it just says",
    "start": "1380550",
    "end": "1386730"
  },
  {
    "text": "look at all the data and learn what's normal and how does it do that well it takes the 784 pixels it compresses them",
    "start": "1386730",
    "end": "1394860"
  },
  {
    "text": "into in this case 50 neurons 50 numbers and then tries to make it back into 784",
    "start": "1394860",
    "end": "1401210"
  },
  {
    "text": "so it's learning the identity function of this data set in a compressed way right so if you can somehow represent",
    "start": "1401210",
    "end": "1408780"
  },
  {
    "text": "the data with these 50 numbers and you know the weights connecting in and out then these 50 numbers they mean",
    "start": "1408780",
    "end": "1415650"
  },
  {
    "text": "something that's what it takes to represent those 10 digits let's say that's roughly five numbers four digit",
    "start": "1415650",
    "end": "1421020"
  },
  {
    "text": "and those five numbers are enough to say there's an edge here as a round thing here as a hole here something like that",
    "start": "1421020",
    "end": "1426600"
  },
  {
    "text": "like the features and with these 50 numbers in the middle and of course the connectivity that make up the",
    "start": "1426600",
    "end": "1433500"
  },
  {
    "text": "reconstruction and the basically the encoding and the decoding you can now",
    "start": "1433500",
    "end": "1439530"
  },
  {
    "text": "say what's normal or not so because now I'll take the test set I let it go through this network and I see what",
    "start": "1439530",
    "end": "1445410"
  },
  {
    "text": "comes out of the other side if it doesn't look like the original input then it didn't match my vision of what",
    "start": "1445410",
    "end": "1450600"
  },
  {
    "text": "this should look like right so I'm going to let the test set go through this model first I need to train the model so",
    "start": "1450600",
    "end": "1459150"
  },
  {
    "text": "right now it's building this model on my laptop 50 hidden neurons 10h activation function and auto encoder",
    "start": "1459150",
    "end": "1467280"
  },
  {
    "text": "is set to true and I had a couple of extra options but that's just to say don't drop any of the constant columns",
    "start": "1467280",
    "end": "1473640"
  },
  {
    "text": "at all as zero because I want to plot it at the end okay so now let's look at the",
    "start": "1473640",
    "end": "1479930"
  },
  {
    "text": "outlier nests of every point we just scored the test set and computed the reconstruction error so how how",
    "start": "1479930",
    "end": "1486720"
  },
  {
    "text": "different is the outcome from the income how bad is my identity mapping that I learned for the test set points and for",
    "start": "1486720",
    "end": "1493800"
  },
  {
    "text": "those points that are kind of ugly they won't match to what's normal in the training data right that's an intuitive",
    "start": "1493800",
    "end": "1500220"
  },
  {
    "text": "thing all right so now let's plot the ones that match the best top 25 that's",
    "start": "1500220",
    "end": "1508590"
  },
  {
    "text": "the reconstruction and now let's look at the actual ones well the same thing",
    "start": "1508590",
    "end": "1514950"
  },
  {
    "text": "right there match the best so I have to look like the same this is the ones that are the easiest to learn to represent in",
    "start": "1514950",
    "end": "1520740"
  },
  {
    "text": "your identity function just take the middle ones and say keep them basically",
    "start": "1520740",
    "end": "1526430"
  },
  {
    "text": "now let's look at the ones in the middle out of 10,000 that's the the ones the",
    "start": "1526430",
    "end": "1531450"
  },
  {
    "text": "median reconstruction error so these are still reasonably good you can tell that they're digits but they're already not",
    "start": "1531450",
    "end": "1538590"
  },
  {
    "text": "quite as pretty anymore and now let's look at the ugliest outliers so to speak",
    "start": "1538590",
    "end": "1543750"
  },
  {
    "text": "in the test set so these are all digits that are coming out of my network but",
    "start": "1543750",
    "end": "1550230"
  },
  {
    "text": "they're not really like digit anymore right so something went wrong basically the reconstruction failed the model said",
    "start": "1550230",
    "end": "1557040"
  },
  {
    "text": "these are ugly if you look at them they are kind of ugly some of them are almost not digits anymore right cut off or the",
    "start": "1557040",
    "end": "1564060"
  },
  {
    "text": "top right one for example is ugly and you can tell that if you remember the bottom line like in the optics test the",
    "start": "1564060",
    "end": "1569850"
  },
  {
    "text": "vision exam 6 40 35 right let's go look",
    "start": "1569850",
    "end": "1574920"
  },
  {
    "text": "at my slides totally different so every time I run it it's different because its",
    "start": "1574920",
    "end": "1581130"
  },
  {
    "text": "neural nets with multithreading I can turn it on to be reproducible but then i",
    "start": "1581130",
    "end": "1587190"
  },
  {
    "text": "have to say use one threat don't do any of this hog wild race condition updates",
    "start": "1587190",
    "end": "1592740"
  },
  {
    "text": "of the weight matrix by multiple threats at the same time just run one right through and give a seed and then",
    "start": "1592740",
    "end": "1599820"
  },
  {
    "text": "just wait until that one thread is done and then it will be reproducible but in this case I chose not to do this because",
    "start": "1599820",
    "end": "1605520"
  },
  {
    "text": "it's faster this may and the results are fine anyway every time you run it you'll get something like this you will not get",
    "start": "1605520",
    "end": "1611400"
  },
  {
    "text": "the ugly digits to be the good ones right so this shows you basically that this is a robust thing and again here",
    "start": "1611400",
    "end": "1618870"
  },
  {
    "text": "this is the network topography so I can also go back to the browser now go to",
    "start": "1618870",
    "end": "1626429"
  },
  {
    "text": "localhost and say here clean up everything by the way here this just ran",
    "start": "1626429",
    "end": "1631799"
  },
  {
    "text": "all the model so if I say get models I should see all the models that were built so that the last four rd models",
    "start": "1631799",
    "end": "1638820"
  },
  {
    "text": "they were built on the million song data said earlier and the top one is the 1i built from our the auto encoder and you",
    "start": "1638820",
    "end": "1646350"
  },
  {
    "text": "can see the auto encoder reconstruction error started at point zero eight mean square error and now it's at point zero",
    "start": "1646350",
    "end": "1653160"
  },
  {
    "text": "two so it got it down it improved from random noise for Otto encoders you",
    "start": "1653160",
    "end": "1658799"
  },
  {
    "text": "always want to check this convergence it has to learn something right the",
    "start": "1658799",
    "end": "1664919"
  },
  {
    "text": "identity mapping and you can also see here the status of the neuron layers the thing I showed you earlier and of course",
    "start": "1664919",
    "end": "1671580"
  },
  {
    "text": "you can also get a POJO again here in this case it's a neural net so you would expect some weights here and some here",
    "start": "1671580",
    "end": "1679710"
  },
  {
    "text": "what is this oh that's the neurons here we go I would expect the model to show",
    "start": "1679710",
    "end": "1687000"
  },
  {
    "text": "up somewhere see there's a lot of declarations you have to make to know",
    "start": "1687000",
    "end": "1692460"
  },
  {
    "text": "all these 784 features so if this is too little for the preview then we have to",
    "start": "1692460",
    "end": "1698580"
  },
  {
    "text": "look at the other model we have yeah let's go back to get models and click on the other deep learning model be made earlier on the million song data set and",
    "start": "1698580",
    "end": "1705780"
  },
  {
    "text": "look at its pojo that should be smaller because there were only 90 predictors",
    "start": "1705780",
    "end": "1711330"
  },
  {
    "text": "okay here we go so now you should see that the deep learning math actually printed out in plain text so you can",
    "start": "1711330",
    "end": "1718770"
  },
  {
    "text": "always check here activation something",
    "start": "1718770",
    "end": "1723840"
  },
  {
    "text": "with numerical something with categoricals if you had any in this case there are none and then it will save",
    "start": "1723840",
    "end": "1729600"
  },
  {
    "text": "aids activation biases and they will do this matrix vector multiplication so ax + y v 1 this is the",
    "start": "1729600",
    "end": "1738720"
  },
  {
    "text": "matrix vector multiplication that's inside of the deep learning model and you can see here we do some partial some",
    "start": "1738720",
    "end": "1745200"
  },
  {
    "text": "tricks to be faster to basically allow the CPU to do more additions and multiplications at the same time so all",
    "start": "1745200",
    "end": "1751950"
  },
  {
    "text": "of this is optimized for speed and this is as fast as any c++ implementation or",
    "start": "1751950",
    "end": "1757020"
  },
  {
    "text": "anything because we don't really have GC issues here all the arrays are allocated",
    "start": "1757020",
    "end": "1762270"
  },
  {
    "text": "one time and then just process all right",
    "start": "1762270",
    "end": "1767309"
  },
  {
    "text": "so now let's get back to the bigger problems deep learning and higgs boson who has seen this data set before okay",
    "start": "1767309",
    "end": "1775650"
  },
  {
    "text": "great so this is a physics right 13 billion dollar biggest project ever scientific experiment this data set has",
    "start": "1775650",
    "end": "1782370"
  },
  {
    "text": "10 million rows their detector events each detector event has 21 numbers",
    "start": "1782370",
    "end": "1788309"
  },
  {
    "text": "coming out saying this is what I measured for certain things and then the physicists come up with seven more",
    "start": "1788309",
    "end": "1793380"
  },
  {
    "text": "numbers that they compute from those 21 something like square root of this",
    "start": "1793380",
    "end": "1798540"
  },
  {
    "text": "squared minus that square or something and those formulas or formulae actually",
    "start": "1798540",
    "end": "1805169"
  },
  {
    "text": "help and you can see this down there if you take just the low-level numbers this",
    "start": "1805169",
    "end": "1811890"
  },
  {
    "text": "is the AUC you get so point 5 is random and one would be perfect and now it goes up by something like 10 basis points",
    "start": "1811890",
    "end": "1818850"
  },
  {
    "text": "almost if you add those extra features so it's very valuable to have physicists around to tell you like what to do right",
    "start": "1818850",
    "end": "1825390"
  },
  {
    "text": "but CERN basically had this baseline here of 81 that was how good it was",
    "start": "1825390",
    "end": "1831750"
  },
  {
    "text": "working for them they used it gradient boosted trees and neural networks with",
    "start": "1831750",
    "end": "1836760"
  },
  {
    "text": "layer with one layer one hidden layer so their baseline was 81 AUC and this paper",
    "start": "1836760",
    "end": "1842190"
  },
  {
    "text": "came a long last summer saying we can do better than that with deep learning and they publish some numbers and now we are",
    "start": "1842190",
    "end": "1848700"
  },
  {
    "text": "going to run the same thing and see what we can do so I'm going back to my cluster my ec2 8 no cluster and I'll say",
    "start": "1848700",
    "end": "1860390"
  },
  {
    "text": "get frames and I will have to Hicks data set there already because I parse it earlier you",
    "start": "1860390",
    "end": "1867960"
  },
  {
    "text": "can see here 11 million rows and 29",
    "start": "1867960",
    "end": "1873690"
  },
  {
    "text": "columns 2 gigabytes compressed is not much to compress because it's all doubles and now I'm going to run a deep",
    "start": "1873690",
    "end": "1880530"
  },
  {
    "text": "learning model so I already saved the flow for that so this flow says take the",
    "start": "1880530",
    "end": "1890340"
  },
  {
    "text": "split the split data set I split it in two ninety percent and five five percent so ten million and half a million each",
    "start": "1890340",
    "end": "1897050"
  },
  {
    "text": "take the training data and the validation data and tell me how you're doing along the way so go and it builds",
    "start": "1897050",
    "end": "1905280"
  },
  {
    "text": "a three layer Network and uses a rectifier activation everything else is",
    "start": "1905280",
    "end": "1910950"
  },
  {
    "text": "default and now it's running so let's go look at the the water meter ok here we",
    "start": "1910950",
    "end": "1917340"
  },
  {
    "text": "go deep learning is taking over the cluster and now it's communicating and now it's sending that back out and then",
    "start": "1917340",
    "end": "1925080"
  },
  {
    "text": "computing again this might be initial phases where its eyes to first it",
    "start": "1925080",
    "end": "1930120"
  },
  {
    "text": "rebalance the data set or something usually you'll see it up down up down so let's wait until the next communication",
    "start": "1930120",
    "end": "1937190"
  },
  {
    "text": "but you'll see that all the CPUs are busy updating weights with stochastic gradient descent which means it takes a",
    "start": "1937190",
    "end": "1943740"
  },
  {
    "text": "point it trains goes through the network makes a prediction says how wrong it is",
    "start": "1943740",
    "end": "1950070"
  },
  {
    "text": "and corrects the weights all the weights that are affected get fixed basically by",
    "start": "1950070",
    "end": "1955260"
  },
  {
    "text": "every single point there's no mini batch or anything every single point updates the whole model and that's done by all",
    "start": "1955260",
    "end": "1961830"
  },
  {
    "text": "the threats in parallel so you'll have eight threats in parallel changing those weights and I read you right I read you",
    "start": "1961830",
    "end": "1968850"
  },
  {
    "text": "right whatever we just compete but usually we write different weights right there's millions of weight so you don't",
    "start": "1968850",
    "end": "1973860"
  },
  {
    "text": "need to override too often but someone else is reading at the time or something so you can see here it's mostly busy",
    "start": "1973860",
    "end": "1979860"
  },
  {
    "text": "computing if you wanted to know what it's exactly doing it can also click on",
    "start": "1979860",
    "end": "1985890"
  },
  {
    "text": "the profiler here and it will show you a stack trace and sorted stack trace by",
    "start": "1985890",
    "end": "1991500"
  },
  {
    "text": "count what's happening so this was basically just communicating let's do this again",
    "start": "1991500",
    "end": "1997400"
  },
  {
    "text": "now it's going to be slightly different oh I see so now it was saying these are",
    "start": "1997400",
    "end": "2007490"
  },
  {
    "text": "basically idle because we have eight notes and there are seven orders and there's one for read and one for right",
    "start": "2007490",
    "end": "2013100"
  },
  {
    "text": "so we got 14 threats actively listening for communication here f 289 are in the",
    "start": "2013100",
    "end": "2020360"
  },
  {
    "text": "back propagation some of them are in the forward propagation so you can see all",
    "start": "2020360",
    "end": "2025970"
  },
  {
    "text": "these exact things that are going on with any moment in time for every note right you can go to a different note and",
    "start": "2025970",
    "end": "2032540"
  },
  {
    "text": "you can see the same behavior so they're all just busy computing so by this model is building we can ask how well is it",
    "start": "2032540",
    "end": "2039470"
  },
  {
    "text": "doing remember dat one baseline with the human features let's let's see what we",
    "start": "2039470",
    "end": "2048200"
  },
  {
    "text": "have here on the validation data set it's already at 79 this already beat all",
    "start": "2048200",
    "end": "2054618"
  },
  {
    "text": "the random forests and grading boosted methods and neural nets methods that they had at CERN for many years so these",
    "start": "2054619",
    "end": "2063260"
  },
  {
    "text": "models there on the left that had 75 76 already beaten by this deep learning",
    "start": "2063260",
    "end": "2069648"
  },
  {
    "text": "model we just ran and this wasn't even a good model it was just a small like a hundred neurons each layer right so this",
    "start": "2069649",
    "end": "2076580"
  },
  {
    "text": "is very powerful and by the time we finish will actually get down to over 87",
    "start": "2076580",
    "end": "2082820"
  },
  {
    "text": "a you see that's what the paper reported they have an 88 they trained this for weeks on a GPU and of course they had",
    "start": "2082820",
    "end": "2090260"
  },
  {
    "text": "only this data set and nothing else to worry about and this is a small data set still but you can see the power of deep",
    "start": "2090260",
    "end": "2096648"
  },
  {
    "text": "learning right especially if you feed it more data and you give it more neurons it'll train and learn everything it's",
    "start": "2096649",
    "end": "2101960"
  },
  {
    "text": "like a brain that's trying to learn like a baby's brain it's just sucking up all the information and after 40 minutes",
    "start": "2101960",
    "end": "2109640"
  },
  {
    "text": "you'll get an 84 AFC which is pretty impressive right it beats all the other baseline methods even with the human",
    "start": "2109640",
    "end": "2115880"
  },
  {
    "text": "features and this is without using the human features you don't need to know anything you just take the sensor data",
    "start": "2115880",
    "end": "2120980"
  },
  {
    "text": "out of your machine and say go all right",
    "start": "2120980",
    "end": "2126170"
  },
  {
    "start": "2125000",
    "end": "2152000"
  },
  {
    "text": "another use case was deep learning used for crime detection and this is actually Chicago who can",
    "start": "2126170",
    "end": "2133220"
  },
  {
    "text": "recognize this pattern so my colleagues Alex and Macau they wrote an article",
    "start": "2133220",
    "end": "2139820"
  },
  {
    "text": "actually that you can read here data nami just a few days ago and they're using spark and h2o together to take",
    "start": "2139820",
    "end": "2148250"
  },
  {
    "text": "three different data sets and turn them into something that you can use to predict better crime is going to be",
    "start": "2148250",
    "end": "2156470"
  },
  {
    "start": "2152000",
    "end": "2201000"
  },
  {
    "text": "leading to an arrest or not so you take the crime data set you take the census",
    "start": "2156470",
    "end": "2163010"
  },
  {
    "text": "data set to know something about the socioeconomic factors and you take the better because the better might have",
    "start": "2163010",
    "end": "2168440"
  },
  {
    "text": "impact on what's happening and you put them all together in spark first you parse them in h2o because we know that",
    "start": "2168440",
    "end": "2175550"
  },
  {
    "text": "the parser works and it's it's fine so in our demo we just suck it all in an h2o we send it over to spark in the same",
    "start": "2175550",
    "end": "2184220"
  },
  {
    "text": "jvm and then we say you an SQL join and",
    "start": "2184220",
    "end": "2190460"
  },
  {
    "text": "once you're done we split it again in h2o and then we build a deep learning model and for example GBM model i think",
    "start": "2190460",
    "end": "2197030"
  },
  {
    "text": "these two are being built by the demo script that's available so again both",
    "start": "2197030",
    "end": "2203920"
  },
  {
    "start": "2201000",
    "end": "2229000"
  },
  {
    "text": "h2o and sparks memory is shared it's the",
    "start": "2203920",
    "end": "2210290"
  },
  {
    "text": "same jvm there's no tachyon layer or anything they are basically able to transparently go from one side to the",
    "start": "2210290",
    "end": "2217369"
  },
  {
    "text": "order and the product of course is called",
    "start": "2217369",
    "end": "2224650"
  },
  {
    "text": "sparkling water which was a brilliant idea I think all right so this is the",
    "start": "2224650",
    "end": "2232349"
  },
  {
    "text": "place and github where you would find this this example so you would download",
    "start": "2232349",
    "end": "2237400"
  },
  {
    "text": "sparkling water from our download page and then you would go into that directory set to environment variables",
    "start": "2237400",
    "end": "2244000"
  },
  {
    "text": "pointing to spark and saying how many nodes you want and then you would start the sparkling shell and then copy paste",
    "start": "2244000",
    "end": "2251440"
  },
  {
    "text": "this code into it for example if you want to do it interactively so you can",
    "start": "2251440",
    "end": "2257079"
  },
  {
    "text": "see here there's a couple of imports you import deep learning in GBM and some spark stuff and then you basically",
    "start": "2257079",
    "end": "2265589"
  },
  {
    "start": "2264000",
    "end": "2280000"
  },
  {
    "text": "connect to the h2o cluster we parse datasets this way this is just a",
    "start": "2265589",
    "end": "2270849"
  },
  {
    "text": "function definition that gets used by these other functions that actually do the work to load the data and then you",
    "start": "2270849",
    "end": "2276880"
  },
  {
    "text": "can drop some columns and do some simple munging in this case here we do some date manipulations to standardize the",
    "start": "2276880",
    "end": "2283809"
  },
  {
    "start": "2280000",
    "end": "2307000"
  },
  {
    "text": "three datasets to have the same date format so that we can join on it later and you basically just take these three",
    "start": "2283809",
    "end": "2290109"
  },
  {
    "text": "datasets these are just small for a demo but in reality they of course use the whole data set on a cluster and then",
    "start": "2290109",
    "end": "2296349"
  },
  {
    "text": "once you have these three datasets in memory as h2o objects we just converted",
    "start": "2296349",
    "end": "2301780"
  },
  {
    "text": "to a schema led with this call here and now to become spark or disease for which",
    "start": "2301780",
    "end": "2308859"
  },
  {
    "start": "2307000",
    "end": "2359000"
  },
  {
    "text": "you can just call like a select statement in SQL and then some join and another join and all that it's very nice",
    "start": "2308859",
    "end": "2315369"
  },
  {
    "text": "right this is a nice well understood API the people can use and h2o does not have",
    "start": "2315369",
    "end": "2321760"
  },
  {
    "text": "this at this point but we're working on that so at some point we'll have more managing capabilities but for now you",
    "start": "2321760",
    "end": "2327670"
  },
  {
    "text": "can definitely benefit from the whole spark ecosystem to do what it's good for",
    "start": "2327670",
    "end": "2333700"
  },
  {
    "text": "so here in this case but is this we say here's a crime better data set that we",
    "start": "2333700",
    "end": "2338799"
  },
  {
    "text": "after be splitted I think we spent we bring it back into h2o yes this is an HTML helper function to split and now we",
    "start": "2338799",
    "end": "2349750"
  },
  {
    "text": "have basically a joint data set that knows all about the socioeconomic factors about the way",
    "start": "2349750",
    "end": "2354970"
  },
  {
    "text": "for a given time at a given place and then we can build a deep learning model",
    "start": "2354970",
    "end": "2362350"
  },
  {
    "start": "2359000",
    "end": "2455000"
  },
  {
    "text": "just like you would do this in Java Scala is very similar right you don't need to do much porting it's just the",
    "start": "2362350",
    "end": "2368410"
  },
  {
    "text": "same members that you're setting and then you say run train model that gets",
    "start": "2368410",
    "end": "2373510"
  },
  {
    "text": "basically and that that at the end you have a model available that you can use to make predictions and it's very simple",
    "start": "2373510",
    "end": "2379690"
  },
  {
    "text": "and you can definitely follow the tutorials in the interest of time I'll",
    "start": "2379690",
    "end": "2386800"
  },
  {
    "text": "just show you the sparkling she'll start here I'm basically able to do this on my",
    "start": "2386800",
    "end": "2392170"
  },
  {
    "text": "laptop as well while the other one is still running here you see spark is being launched and now it's scheduling",
    "start": "2392170",
    "end": "2399520"
  },
  {
    "text": "those three worker nodes to come up once it's ready I can copy paste some code in there and the code I would get from the",
    "start": "2399520",
    "end": "2408010"
  },
  {
    "text": "website here Chicago Crime demo it's all",
    "start": "2408010",
    "end": "2414130"
  },
  {
    "text": "on github",
    "start": "2414130",
    "end": "2416609"
  },
  {
    "text": "so in sparkling water I will get up project under examples there are some",
    "start": "2428510",
    "end": "2434190"
  },
  {
    "text": "scripts and so I can just take this stuff here and just copy paste it all",
    "start": "2434190",
    "end": "2439520"
  },
  {
    "text": "oops I'm sure you believe me that this is all doable right so here spark is not",
    "start": "2439520",
    "end": "2446010"
  },
  {
    "text": "ready and I just copy paste is in and here it goes so that's how easy it is to do spark and h2o together and then also",
    "start": "2446010",
    "end": "2457109"
  },
  {
    "start": "2455000",
    "end": "2512000"
  },
  {
    "text": "once you have something in your memory in the 8th show cluster right the model for example or some data sets you can",
    "start": "2457109",
    "end": "2463589"
  },
  {
    "text": "just ask flow to visualize it you can just type this this JavaScript or CoffeeScript rather expression and plot",
    "start": "2463589",
    "end": "2469920"
  },
  {
    "text": "anything you want against anything and you'll see these interactive plots but you can mouse-over and it will show you",
    "start": "2469920",
    "end": "2475619"
  },
  {
    "text": "what it is and so on so it's very cool you can plot for example the arrest rate versus the relative occurrence of an",
    "start": "2475619",
    "end": "2481920"
  },
  {
    "text": "arrest for example gambling is always arrested why is that well because",
    "start": "2481920",
    "end": "2487320"
  },
  {
    "text": "otherwise you wouldn't know that the gambling person was cheating or something so so you basically have to",
    "start": "2487320",
    "end": "2492510"
  },
  {
    "text": "rest them right otherwise you don't know what's happening some of the things are undetected but the theft for example",
    "start": "2492510",
    "end": "2499020"
  },
  {
    "text": "it's not always arrested because someone knows that it was stolen without the person actually being caught so you have",
    "start": "2499020",
    "end": "2504900"
  },
  {
    "text": "to be careful about all this data science stuff but basically can plot whatever you want against whatever you want and that's pretty powerful and we",
    "start": "2504900",
    "end": "2513960"
  },
  {
    "start": "2512000",
    "end": "2537000"
  },
  {
    "text": "have our state up table now in house so Matt Dowell joined us recently he he wrote the fastest data table a",
    "start": "2513960",
    "end": "2520560"
  },
  {
    "text": "processing engine in our and this is used for financial institutions that",
    "start": "2520560",
    "end": "2526650"
  },
  {
    "text": "like to do aggregates a lot so just what you saw on the previous slide will soon have all this in H to go in a scalable",
    "start": "2526650",
    "end": "2532710"
  },
  {
    "text": "way that we can do fast joins aggregates and so on and the same thing of course",
    "start": "2532710",
    "end": "2538380"
  },
  {
    "start": "2537000",
    "end": "2577000"
  },
  {
    "text": "goes for Python you have ipython notebooks and there's an example to do something for the city bike company in",
    "start": "2538380",
    "end": "2545550"
  },
  {
    "text": "New York City where you want to know how many bikes do you need for stations such that you don't run out of bikes so let's",
    "start": "2545550",
    "end": "2551190"
  },
  {
    "text": "say you have 10 million rows of historical data and you have some better",
    "start": "2551190",
    "end": "2556349"
  },
  {
    "text": "data you would imagine it you can join those two and then basically based on location in time and better you can predict how",
    "start": "2556349",
    "end": "2564030"
  },
  {
    "text": "many bikes you'll need right so if I know today it's going to be or tomorrow is going to be that better I know I need",
    "start": "2564030",
    "end": "2569580"
  },
  {
    "text": "250 bikes at that station or something and cliff our CTO who-who wrote a jit",
    "start": "2569580",
    "end": "2575490"
  },
  {
    "text": "basically also wrote this data science example here so you can see there's a group by the top from ipython notebooks",
    "start": "2575490",
    "end": "2582540"
  },
  {
    "start": "2577000",
    "end": "2754000"
  },
  {
    "text": "and to show you that this is also life impossible here I do this here I'll type ipython notebook citibike small and up",
    "start": "2582540",
    "end": "2590100"
  },
  {
    "text": "pops up my my my browser with ipython notebook I will delete all the output",
    "start": "2590100",
    "end": "2596310"
  },
  {
    "text": "cells so we don't cheat and I say go and now it's connecting to the cluster that I started 30 minutes ago this means i",
    "start": "2596310",
    "end": "2603780"
  },
  {
    "text": "still have a little bit of time left i will load some data here it up we go and",
    "start": "2603780",
    "end": "2610830"
  },
  {
    "text": "then let's look at the data describe it you can see here some some mean max and",
    "start": "2610830",
    "end": "2620220"
  },
  {
    "text": "so on whatever this is like a distribution of the chunk of the frame how many rows out of each machine in",
    "start": "2620220",
    "end": "2626010"
  },
  {
    "text": "this case is only one machine oops there's only one machine basically some statistics that tells you how is the",
    "start": "2626010",
    "end": "2632160"
  },
  {
    "text": "data distributed across the cluster what kinds of columns do I have what is their",
    "start": "2632160",
    "end": "2639120"
  },
  {
    "text": "mean max and so on all available from from Python then you can do a group by",
    "start": "2639120",
    "end": "2645320"
  },
  {
    "text": "you don't need to know all that but basically just you want to know like at what time of the day or what they how",
    "start": "2645320",
    "end": "2651390"
  },
  {
    "text": "many bikes are station and so on you can see that there's a big distribution here that's some some places only need 9 bikes on basically",
    "start": "2651390",
    "end": "2658500"
  },
  {
    "text": "the under bikes or even more and so on right and you can do quantiles you see",
    "start": "2658500",
    "end": "2664560"
  },
  {
    "text": "the quantiles here from one percent all the way to ninety-nine percent and you see that there's some pretty big numbers",
    "start": "2664560",
    "end": "2671460"
  },
  {
    "text": "here you can make new features stay if the weekends on you can build models so",
    "start": "2671460",
    "end": "2681000"
  },
  {
    "text": "this is the fun part we have a bill to GBM we build a random forest we build a glm and we build a deep learning model",
    "start": "2681000",
    "end": "2686340"
  },
  {
    "text": "all on the same data that was joined earlier and so now let's say do this go",
    "start": "2686340",
    "end": "2691350"
  },
  {
    "text": "so now it's building a GBM all of my laptop so if I went to my",
    "start": "2691350",
    "end": "2697110"
  },
  {
    "text": "laptop right now I could say get models and these models would just magically pop up and this is deep learning and now",
    "start": "2697110",
    "end": "2706770"
  },
  {
    "text": "we can see how well they're doing and you get the idea right so now we get a",
    "start": "2706770",
    "end": "2712530"
  },
  {
    "text": "92 AAC by deep learning but the 93 a or c by GBM but deep learning even took a",
    "start": "2712530",
    "end": "2717750"
  },
  {
    "text": "little less time than GBM so you could say that both are very powerful methods they beat the random forests and the",
    "start": "2717750",
    "end": "2723600"
  },
  {
    "text": "linear models here but of course nothing beats the linear model in terms of time Oh point one second to get an 81 and you",
    "start": "2723600",
    "end": "2730500"
  },
  {
    "text": "see it's pretty remarkable it's 50 times faster and a random forest all right so",
    "start": "2730500",
    "end": "2737010"
  },
  {
    "text": "you believe me that I Python works as well once you join the better data with a simple merge command here in the",
    "start": "2737010",
    "end": "2743880"
  },
  {
    "text": "middle somewhere then you get a little lift here because then you can even predict better you need bikes are not",
    "start": "2743880",
    "end": "2749910"
  },
  {
    "text": "based on better right make sense if it rains you might need fewer bikes so any",
    "start": "2749910",
    "end": "2755460"
  },
  {
    "text": "anything you might wonder what to do with GBM linear models with deep",
    "start": "2755460",
    "end": "2760620"
  },
  {
    "text": "learning there's booklets for that and we're currently rewriting them to the new version of h2o which will have",
    "start": "2760620",
    "end": "2765840"
  },
  {
    "text": "slightly updated api's and stuff for consistency across our Python Scala JSON",
    "start": "2765840",
    "end": "2772320"
  },
  {
    "text": "and so on so it's going to be very nice and rewritten everything from scratch a major effort but now we're basically",
    "start": "2772320",
    "end": "2778980"
  },
  {
    "text": "going to be ready for release I think this week actually so and another ! is",
    "start": "2778980",
    "end": "2787260"
  },
  {
    "start": "2783000",
    "end": "2832000"
  },
  {
    "text": "that we're currently number one at this caracal challenge Marc Landry who just",
    "start": "2787260",
    "end": "2793560"
  },
  {
    "text": "joined us who has been on teammates to go for a while he was at the h2o world last fall he is actually going to work",
    "start": "2793560",
    "end": "2800010"
  },
  {
    "text": "full-time almost half his time on Kaggle challenges using h2o so we'll be excited",
    "start": "2800010",
    "end": "2805770"
  },
  {
    "text": "to see this go across the finish line and they will share how we did this or",
    "start": "2805770",
    "end": "2812790"
  },
  {
    "text": "rather he will share how he did it because so far mark did most of the work next week at h2o in Mountain View and",
    "start": "2812790",
    "end": "2820620"
  },
  {
    "text": "they'll be live-streamed as well so if you can make it be sure to listen in and these are some examples of other caracal",
    "start": "2820620",
    "end": "2827370"
  },
  {
    "text": "applications we have demo scripts that are posted that are available and for example this",
    "start": "2827370",
    "end": "2833730"
  },
  {
    "start": "2832000",
    "end": "2874000"
  },
  {
    "text": "one I had hosted a few other maybe a month ago or so I posted this example GBM random parameter tooling logic where",
    "start": "2833730",
    "end": "2843030"
  },
  {
    "text": "you basically just make ten models with random parameters and see which one is the best that sometimes useful",
    "start": "2843030",
    "end": "2848579"
  },
  {
    "text": "especially if you have many dimensions to optimize over and we don't have Beijing optimization yet but this might",
    "start": "2848579",
    "end": "2855300"
  },
  {
    "text": "be more efficient than just a brute force grid search because the machine gets luckier more than you tell it to be",
    "start": "2855300",
    "end": "2861869"
  },
  {
    "text": "lucky if you want that's why montecarlo integration works in higher and four dimensions the same thing is true with",
    "start": "2861869",
    "end": "2867420"
  },
  {
    "text": "hyper parameter finding so don't shy away from these random approaches they're very powerful so this is the",
    "start": "2867420",
    "end": "2875220"
  },
  {
    "start": "2874000",
    "end": "2981000"
  },
  {
    "text": "outlook lots of stuff to do for data science now that they have this machinery in place that can scale to big",
    "start": "2875220",
    "end": "2881400"
  },
  {
    "text": "data sets customers are saying well if i do i need to find parameters right yeah sure automatic hybrid parameter tuning",
    "start": "2881400",
    "end": "2887700"
  },
  {
    "text": "is great they'll do that for you soon you'll have ensembles like a framework that you can in the GUI and all properly",
    "start": "2887700",
    "end": "2895559"
  },
  {
    "text": "define what you want to blend together what way non- least squares to to stack",
    "start": "2895559",
    "end": "2901619"
  },
  {
    "text": "models of different kinds like a random forest and the GBM and so on all on the holdout sets and so on then we want to",
    "start": "2901619",
    "end": "2908280"
  },
  {
    "text": "have convolutional layers for deep learning for example for people who want to do more image related stuff but all",
    "start": "2908280",
    "end": "2915869"
  },
  {
    "text": "these things are on a to-do list right we have to prioritize those based on customer demand so that's what our customers get to do the paying customers",
    "start": "2915869",
    "end": "2922290"
  },
  {
    "text": "get to tell us basically what they want and they'll take that into account natural language processing is high up",
    "start": "2922290",
    "end": "2928619"
  },
  {
    "text": "there especially now that you have this framework we can characterize each string as an integer and then process",
    "start": "2928619",
    "end": "2934380"
  },
  {
    "text": "all that fast and we have a new method called generalized low-rank model which",
    "start": "2934380",
    "end": "2939569"
  },
  {
    "text": "comes right out of Stanford brand new it can do all these methods pcie SVD",
    "start": "2939569",
    "end": "2945599"
  },
  {
    "text": "k-means matrix factorization of course all this stuff fixing missing values for",
    "start": "2945599",
    "end": "2951480"
  },
  {
    "text": "you based on like a Taylor expansion of your data set very powerful stuff can also be used for a commander systems and",
    "start": "2951480",
    "end": "2958200"
  },
  {
    "text": "we have lots and lots of other zero tickets and stuff to work on so if you're interested",
    "start": "2958200",
    "end": "2963570"
  },
  {
    "text": "in joining the effort please do and I hope I left you with an impression of what you can do with h2o and what the",
    "start": "2963570",
    "end": "2970950"
  },
  {
    "text": "state of the art is right now in machine learning on big data sets and thank you for your attention",
    "start": "2970950",
    "end": "2976940"
  }
]