[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "so uh i work for a company you may have heard of called microsoft we're trying to be the next big thing again",
    "start": "7200",
    "end": "13280"
  },
  {
    "text": "i've been with microsoft for 12 years so i've been with the company long enough to see some interesting ups and downs",
    "start": "13280",
    "end": "18640"
  },
  {
    "text": "and my role at microsoft you might say what does a senior technical evangelist do my role is to try to",
    "start": "18640",
    "end": "25279"
  },
  {
    "text": "create interest create awareness first of all create interest and hopefully spur people on to actually use some of",
    "start": "25279",
    "end": "31840"
  },
  {
    "text": "the new technologies that we have whether it be languages like typescript or",
    "start": "31840",
    "end": "37120"
  },
  {
    "text": "programming environments like visual studio or even building for our latest platforms like windows phone",
    "start": "37120",
    "end": "42879"
  },
  {
    "text": "and windows 8. today we'll actually be talking about typescript so just to",
    "start": "42879",
    "end": "49039"
  },
  {
    "start": "46000",
    "end": "133000"
  },
  {
    "text": "start things off you know javascript is fantastic functions",
    "start": "49039",
    "end": "54399"
  },
  {
    "text": "closures dynamic language the expressive way you can and write code in it",
    "start": "54399",
    "end": "60320"
  },
  {
    "text": "they're all fantastic there are some things in the language though that we wish we had",
    "start": "60320",
    "end": "66640"
  },
  {
    "text": "and when we talk about typescript today we'll see that we've kind of put a standard approach to doing things that aren't radically new so if you say well",
    "start": "66640",
    "end": "73840"
  },
  {
    "text": "classes they're they're not new and inheritance that's not horribly new and modules they've been around that's true",
    "start": "73840",
    "end": "81040"
  },
  {
    "text": "but we'll see when we get into typescript a little bit more deeply is the fact that we kind of as of us kind of have a",
    "start": "81040",
    "end": "86960"
  },
  {
    "text": "standard approach for doing this so just to be completely clear javascript i like it it's awesome it's good",
    "start": "86960",
    "end": "93119"
  },
  {
    "text": "but one of the things that a lot of people will tell you is in large-scale javascript large-scale javascript",
    "start": "93119",
    "end": "98880"
  },
  {
    "text": "development can be hard right now we're talking when i say large scale we're talking twenty thousand fifty thousand hundred thousand",
    "start": "98880",
    "end": "104960"
  },
  {
    "text": "two hundred thousand three hundred thousand lines of code it's probably hard in any language but in javascript it can be particularly",
    "start": "104960",
    "end": "111600"
  },
  {
    "text": "hard because some of the things that you might expect to have in a in a language that you might see like in c sharp or",
    "start": "111600",
    "end": "116640"
  },
  {
    "text": "java like name spaces um you know yes they they can be implemented in ways but they're not part",
    "start": "116640",
    "end": "123439"
  },
  {
    "text": "of the core language definition itself the language is incredibly flexible dynamic and incredibly flexible so you",
    "start": "123439",
    "end": "129520"
  },
  {
    "text": "can define them but they're not part of the the language itself and so",
    "start": "129520",
    "end": "135040"
  },
  {
    "text": "um these items here they're not directly from me they're from a team within microsoft that did um",
    "start": "135040",
    "end": "141440"
  },
  {
    "text": "has a 150 000 line javascript project and these are kind of what they surfaced",
    "start": "141440",
    "end": "147040"
  },
  {
    "text": "as their concerns and they actually use typescript underneath the covers now but they if you are familiar with eric gama of",
    "start": "147040",
    "end": "154080"
  },
  {
    "text": "the gang of four the whole patterns idea he actually leads this team and his team is uh",
    "start": "154080",
    "end": "160879"
  },
  {
    "text": "is building a project or building out a project called monaco and this came from his team so one of the challenges of of",
    "start": "160879",
    "end": "167440"
  },
  {
    "text": "dealing with large code based large and growing code base in javascript is the need to come up with these kind of",
    "start": "167440",
    "end": "172640"
  },
  {
    "text": "patterns right there are certainly approaches the classes and to modules and the name spaces one of the",
    "start": "172640",
    "end": "178400"
  },
  {
    "text": "challenges are is you know frankly there are so many approaches to challenge to classes and",
    "start": "178400",
    "end": "184000"
  },
  {
    "text": "modules and name space and each of them has their own uniqueness oh this one's got traits that's kind of cool like to",
    "start": "184000",
    "end": "189200"
  },
  {
    "text": "use it and one of the things that they saw in their code base was they had to think up front",
    "start": "189200",
    "end": "194720"
  },
  {
    "text": "about how they're going to structure their code and one of the challenges for them really was",
    "start": "194720",
    "end": "200319"
  },
  {
    "text": "in how they actually structured that code right they started out very dynamic moving their code base along making",
    "start": "200319",
    "end": "205440"
  },
  {
    "text": "great progress but what they saw is when they reached you know 20 000 30 000 40 000 lines of code things got",
    "start": "205440",
    "end": "212799"
  },
  {
    "text": "significantly harder for them to manage one of the other things and i think this is true of any language so i'm not",
    "start": "212799",
    "end": "218640"
  },
  {
    "text": "trying to offend anyone so refactoring javascript code can be difficult any programming language rots over time",
    "start": "218640",
    "end": "224239"
  },
  {
    "text": "right there are changes in the core language new facilities capabilities become available in the language you say",
    "start": "224239",
    "end": "229760"
  },
  {
    "text": "hey i want to i want to actually start to use them and so we have to we have to actively kind of refactor our code",
    "start": "229760",
    "end": "236560"
  },
  {
    "text": "one of the things that the developers group of developers in this team said was that with with javascript projects",
    "start": "236560",
    "end": "242000"
  },
  {
    "text": "it's kind of like carving code in stone because when you get to 50 000 lines of code when you want to refactor it",
    "start": "242000",
    "end": "247439"
  },
  {
    "text": "becomes particularly challenging right you have you know let's say you want to search for something called name well it",
    "start": "247439",
    "end": "253040"
  },
  {
    "text": "could be a parameter and it could be a local variable and it could be have global scope right and so just doing a",
    "start": "253040",
    "end": "260400"
  },
  {
    "text": "massive kind of search and replace isn't necessarily a great way to handle it yes you i'm sure are disciplined and",
    "start": "260400",
    "end": "266240"
  },
  {
    "text": "you have unit tests but still there's some challenges to that so refactoring code can be hard and this team actually",
    "start": "266240",
    "end": "272320"
  },
  {
    "text": "saw that in internet explorer there's the what we call the f12 tools",
    "start": "272320",
    "end": "277840"
  },
  {
    "text": "and those are tools that essentially help you look at traffic going between you and the browser",
    "start": "277840",
    "end": "283040"
  },
  {
    "text": "as well as let you do debugging on your javascript application and they were writing the um editor that lets you look",
    "start": "283040",
    "end": "289600"
  },
  {
    "text": "at the code in there which supports minified code and so for them it became this moment of okay we've got a",
    "start": "289600",
    "end": "294880"
  },
  {
    "text": "significant change yet or refactor our code base because now we're going to support these very very long lines and",
    "start": "294880",
    "end": "300240"
  },
  {
    "text": "they were really happy about the fact that they use typescript i'll show a little example of that in a minute that they could use it to safely",
    "start": "300240",
    "end": "306400"
  },
  {
    "text": "refactor because it understands the difference in scope of the variables they had declared",
    "start": "306400",
    "end": "311919"
  },
  {
    "text": "finally one of the things they talked about was kind of the apis themselves it can be a challenge keeping the apis",
    "start": "311919",
    "end": "318080"
  },
  {
    "text": "in sync when you have documentation that's separate from the code right anything you get closer to the code the better anytime you have anything",
    "start": "318080",
    "end": "324479"
  },
  {
    "text": "separated from the code the implementation from the actual documentation it can make it harder to keep the apis in sync and that's one of",
    "start": "324479",
    "end": "331199"
  },
  {
    "text": "the things that they saw as they were doing their development so what is typescript the marketing",
    "start": "331199",
    "end": "337440"
  },
  {
    "start": "334000",
    "end": "422000"
  },
  {
    "text": "slogan i guess is the language for large-scale javascript development it doesn't really tell you much about it",
    "start": "337440",
    "end": "342720"
  },
  {
    "text": "let's dig into that a little bit further it is essentially a typed superset of javascript that compiles down to plain",
    "start": "342720",
    "end": "348880"
  },
  {
    "text": "javascript so one of the things that's interesting about this you know i've had different people ask me like you know hey is this some kind of embrace and",
    "start": "348880",
    "end": "355199"
  },
  {
    "text": "extinguish thing you know no javascript is the language of the web we get it at microsoft um we are writing our own tools some of",
    "start": "355199",
    "end": "362400"
  },
  {
    "text": "our own tools in it so project monaco is a browser and you know imagine visual studio but imagine",
    "start": "362400",
    "end": "367919"
  },
  {
    "text": "it running in a browser that's kind of what project monaco is trying to approach so we are we're users of javascript um",
    "start": "367919",
    "end": "375600"
  },
  {
    "text": "you can actually write javascript windows 8 native windows 8 apps using winjs so we're big users javascript the",
    "start": "375600",
    "end": "382000"
  },
  {
    "text": "cool thing about this is i mean if you think about why do you like javascript the reason you like it is it well there's a number of reasons you probably",
    "start": "382000",
    "end": "388080"
  },
  {
    "text": "like it but you know it runs in any browser any host any os kind of runs anywhere is the language of the web and",
    "start": "388080",
    "end": "394319"
  },
  {
    "text": "the cool thing about typescript is we don't actually stop you from doing that right it essentially is let's flip",
    "start": "394319",
    "end": "400560"
  },
  {
    "text": "back a slide here in the at the end of the day when you run the typescript compiler typescript is really a design",
    "start": "400560",
    "end": "407039"
  },
  {
    "text": "time illusion if you will that gives you strong typings while you actually are doing development when you run the",
    "start": "407039",
    "end": "413440"
  },
  {
    "text": "compiler it actually makes them all go away and out the other end just shoots javascript so it is completely javascript compliant it is javascript",
    "start": "413440",
    "end": "421280"
  },
  {
    "text": "actually so typescript wants to help we saw those",
    "start": "421280",
    "end": "426319"
  },
  {
    "text": "challenges earlier we talked about by providing optional and structural typing so what",
    "start": "426319",
    "end": "431599"
  },
  {
    "text": "we'll see here in the examples that we look at is that providing a few annotations you can very quickly start",
    "start": "431599",
    "end": "436960"
  },
  {
    "text": "to get some benefits from typing not that classes and modules are unique or new we didn't think of them",
    "start": "436960",
    "end": "443599"
  },
  {
    "text": "not saying we did but what we try to do is formalize them in the language and what actually gets produced and what",
    "start": "443599",
    "end": "449280"
  },
  {
    "text": "we're doing with respect to classes and modules ecma 6 standard is looking to be ratified in december of 2014 and we're",
    "start": "449280",
    "end": "456000"
  },
  {
    "text": "actually aligned with it and the next release of typescript which is going to be either 1.1 or 2.0 deciding depending",
    "start": "456000",
    "end": "462560"
  },
  {
    "text": "on what they decide to call it is actually all about getting typescript to be directly aligned to the echema 6",
    "start": "462560",
    "end": "467919"
  },
  {
    "text": "standard additionally there's interfaces which allow us to name object types and what",
    "start": "467919",
    "end": "474479"
  },
  {
    "text": "you'll see is that yes we can explicitly implement an interface if you're familiar with java or you're familiar",
    "start": "474479",
    "end": "479599"
  },
  {
    "text": "with c sharp you may be familiar with those types of concepts but what we'll see is that yes i can explicitly do that",
    "start": "479599",
    "end": "485360"
  },
  {
    "text": "in javascript but i can also kind of let it just figure out from the shape of",
    "start": "485360",
    "end": "490720"
  },
  {
    "text": "what i've described that it's an interface and we'll see how that actually plays out",
    "start": "490720",
    "end": "496479"
  },
  {
    "start": "495000",
    "end": "607000"
  },
  {
    "text": "so javascript clearly has a type system it's just not manifest till runtime",
    "start": "496639",
    "end": "501919"
  },
  {
    "text": "what typescript is seeking to do is to make that that type system visible at design time and coding time",
    "start": "501919",
    "end": "508240"
  },
  {
    "text": "and then as i mentioned it evaporates when you actually run the compiler so in essence typescript is a static",
    "start": "508240",
    "end": "514640"
  },
  {
    "text": "formalization of the javascript dynamic runtime and you know it essentially",
    "start": "514640",
    "end": "521440"
  },
  {
    "text": "it it espouses to take javascript the good parts add strong typing to it",
    "start": "521440",
    "end": "527120"
  },
  {
    "text": "add tooling to it and in the end you end up with just javascript so if there's questions out there along",
    "start": "527120",
    "end": "533760"
  },
  {
    "text": "the lines of hey you know this is kind of cool is it only a visual studio thing the answer is the typescript language itself is open",
    "start": "533760",
    "end": "540720"
  },
  {
    "text": "source the typescript compiler and tools the language service if you will are open source and they've been integrated",
    "start": "540720",
    "end": "546240"
  },
  {
    "text": "in into tools like intellij and resharper as plug-ins that use it so",
    "start": "546240",
    "end": "552240"
  },
  {
    "text": "they're available to be used you can pull them in it doesn't it's it is in visual studio but it doesn't have to be used in exclusion of visual studio and",
    "start": "552240",
    "end": "559440"
  },
  {
    "text": "in fact there's a commitment from the team with all the tools that are available in visual studio are actually",
    "start": "559440",
    "end": "564959"
  },
  {
    "text": "available open source as well so in my opinion the cool thing about typescript is if you think about",
    "start": "564959",
    "end": "570640"
  },
  {
    "text": "typescript typescript type systems in general they're all in or all out right take c-sharp or java essentially you",
    "start": "570640",
    "end": "577519"
  },
  {
    "text": "have a strongly typed system and you know it's on it's it's kind of binary it's on or off right and then you look",
    "start": "577519",
    "end": "583360"
  },
  {
    "text": "at javascript you have a system which is incredibly dynamic and essentially type system is only evidence that runtime",
    "start": "583360",
    "end": "589600"
  },
  {
    "text": "what typescript allows you to do is essentially have a dial where you can say yeah i'm going to take some javascript i'm going to throw it into",
    "start": "589600",
    "end": "594800"
  },
  {
    "text": "typescript it runs straight up and then if i want to add some type annotations i can do that",
    "start": "594800",
    "end": "601839"
  },
  {
    "text": "so the key take away typescript run through the typescript compiler produces javascript",
    "start": "602000",
    "end": "608480"
  },
  {
    "start": "607000",
    "end": "697000"
  },
  {
    "text": "so some of the things that we'll take a look at here and the i know you're like get to some code we'll do that",
    "start": "608560",
    "end": "613839"
  },
  {
    "text": "so some things we'll look at structural typing and type inference so yes i can explicitly type something and so i can",
    "start": "613839",
    "end": "619279"
  },
  {
    "text": "tell the type i can make an assignment of a number or a string and so it can infer the type but you'll actually see",
    "start": "619279",
    "end": "625120"
  },
  {
    "text": "is that it does the the length the typescript type system actually does a really nice",
    "start": "625120",
    "end": "631040"
  },
  {
    "text": "job or language service does a really good job of starting to infer types from what i've told it",
    "start": "631040",
    "end": "637440"
  },
  {
    "text": "it also allows us to work with generics if you use java or c-sharp again generics are essentially allow you to describe",
    "start": "637440",
    "end": "644000"
  },
  {
    "text": "specific types and ensure that specific types are flowing in and out of parameters or collections and things",
    "start": "644000",
    "end": "649440"
  },
  {
    "text": "a cool thing works with existing libraries and what you'll see underneath the covers is there's a file called",
    "start": "649440",
    "end": "654720"
  },
  {
    "text": "whatever the libraryname.d.ts is and it's essentially definite typing",
    "start": "654720",
    "end": "659760"
  },
  {
    "text": "and there are type libraries for over 400 javascript libraries jquery backbone",
    "start": "659760",
    "end": "665760"
  },
  {
    "text": "knockout node you can name them but they are essentially this is totally",
    "start": "665760",
    "end": "670959"
  },
  {
    "text": "maintained by the community it's not maintained by microsoft finally the cool part one another cool part i",
    "start": "670959",
    "end": "677040"
  },
  {
    "text": "guess is the types these types enable a good tooling experience right no it doesn't allow you to produce",
    "start": "677040",
    "end": "682800"
  },
  {
    "text": "perfect code we can still produce you know bad code in a strongly typed environment but what it does do is give",
    "start": "682800",
    "end": "688000"
  },
  {
    "text": "you some level of verification some level of assistance and from a tooling perspective allows you to do things like",
    "start": "688000",
    "end": "693839"
  },
  {
    "text": "statement completion refactoring and those types of things so",
    "start": "693839",
    "end": "698959"
  },
  {
    "text": "is typescript used at microsoft yes so visual studio online has about 150 000 lines of typescript code",
    "start": "698959",
    "end": "705680"
  },
  {
    "text": "they had an existing javascript uh implementation that they've actually ported over",
    "start": "705680",
    "end": "710880"
  },
  {
    "text": "and they took a kind of machine approach where they essentially wrote their own parsers tore it apart use some javadocs",
    "start": "710880",
    "end": "716160"
  },
  {
    "text": "to create typescript the project monaco team uh really started with typescript about",
    "start": "716160",
    "end": "722000"
  },
  {
    "text": "10 percent because they started coding about the same time as typescript teams started",
    "start": "722000",
    "end": "727279"
  },
  {
    "text": "and so they are at a they're all in now at 100 percent typescript and about 150 000 lines and you can see their work",
    "start": "727279",
    "end": "734959"
  },
  {
    "text": "we'll see it a number of places but one of the places you'll see it is try winjs so wind.js is the javascript library",
    "start": "734959",
    "end": "741519"
  },
  {
    "text": "that if you want to build native windows 8 apps you can use and you can kind of see",
    "start": "741519",
    "end": "746560"
  },
  {
    "text": "the project monaco project surfaced if we look at the css or the javascript view here",
    "start": "746560",
    "end": "752480"
  },
  {
    "text": "as well as the actual output controls this is another thing that microsoft has made open source and is available and",
    "start": "752480",
    "end": "758240"
  },
  {
    "text": "you see the source tab there you can actually download it so the actual editor experience that you see in html and the css and njs is",
    "start": "758240",
    "end": "766160"
  },
  {
    "text": "actually provided by project monaco so another interesting thing the f12",
    "start": "766160",
    "end": "771760"
  },
  {
    "start": "768000",
    "end": "838000"
  },
  {
    "text": "tools behind internet explorer uses it typescript compiler typescript language service all written in javascript are",
    "start": "771760",
    "end": "778720"
  },
  {
    "text": "all written in typescript which compiles down to javascript and i'm sure the list goes on from there so we're using it",
    "start": "778720",
    "end": "784240"
  },
  {
    "text": "so the idea that classes these interfaces modules allow you to it's not just about writing good good code it's",
    "start": "784240",
    "end": "790720"
  },
  {
    "text": "about having structure to actually structure your code base so classes interfaces modules aren't",
    "start": "790720",
    "end": "797040"
  },
  {
    "text": "necessarily new ideas um but there's a standard approach to doing them they're aligning with the",
    "start": "797040",
    "end": "802880"
  },
  {
    "text": "immersion ecmascript 6 standards and it supports popular module systems like common gs",
    "start": "802880",
    "end": "809279"
  },
  {
    "text": "and amd type module systems so this is not a something we've rebuilt one of the other",
    "start": "809279",
    "end": "815760"
  },
  {
    "text": "cool things about this is when ecma six is ratified and typescript supports it you'll you'll be able to flip a switch",
    "start": "815760",
    "end": "821519"
  },
  {
    "text": "that says yes compiled ecmascript six but by default it will compile it will",
    "start": "821519",
    "end": "827040"
  },
  {
    "text": "produce code that runs in a ecmascript 3 browser so you'll get all the benefits",
    "start": "827040",
    "end": "832560"
  },
  {
    "text": "of the cool language stuff without having to have your entire code base and all your users frankly move",
    "start": "832560",
    "end": "839279"
  },
  {
    "start": "838000",
    "end": "889000"
  },
  {
    "text": "so from a community standpoint the source the the project is available on codeplex which is kind of our open",
    "start": "839279",
    "end": "845440"
  },
  {
    "text": "source environment there's 170 forks some number of large number of feature requests",
    "start": "845440",
    "end": "850959"
  },
  {
    "text": "and we're actually taking pull requests now we still are the maintainers of the typescript or the shepherds if you will",
    "start": "850959",
    "end": "857600"
  },
  {
    "text": "of the typescript language but we're actually very engaged in the community about both feature requests",
    "start": "857600",
    "end": "862639"
  },
  {
    "text": "and taking a pull request on the framework side i mentioned there's over 400 libraries that are available on definitely typed",
    "start": "862639",
    "end": "869600"
  },
  {
    "text": "for you know knockout node jquery etc and as i mentioned since this is open source and it's you know something",
    "start": "869600",
    "end": "875600"
  },
  {
    "text": "that's writ that compiles down to javascript it's plugged into a number of ides it's plugged into a number of build",
    "start": "875600",
    "end": "880959"
  },
  {
    "text": "and execution environments and it supports unit testing environments as well",
    "start": "880959",
    "end": "886720"
  },
  {
    "text": "so let's get to a demo so i'm going to start with visual studio",
    "start": "886720",
    "end": "892720"
  },
  {
    "start": "889000",
    "end": "918000"
  },
  {
    "text": "and i'm just going to start with a undo file new file here so i'm not going to start a",
    "start": "892720",
    "end": "898000"
  },
  {
    "text": "project i'm just going to start a new file and i know that all of you would love to watch me type because that would be",
    "start": "898000",
    "end": "903839"
  },
  {
    "text": "somewhat equivalent to watching paint dry and as you can see how well i'm typing right now especially when it look",
    "start": "903839",
    "end": "909120"
  },
  {
    "text": "it's harder to type when you're standing than you think so give me a little bit of credit but rather than",
    "start": "909120",
    "end": "915120"
  },
  {
    "text": "doing a bunch of typing let me start with example here so this is a sort by",
    "start": "915120",
    "end": "921760"
  },
  {
    "start": "918000",
    "end": "943000"
  },
  {
    "text": "name function and you'll see it takes an in any and we slice the any so we could",
    "start": "921760",
    "end": "926880"
  },
  {
    "text": "actually infer a little bit of what's going on here but let's just go with it for a second and so you'll see that we take an any in and we have an n here",
    "start": "926880",
    "end": "933839"
  },
  {
    "text": "and we have you know a and any that's returned the result of course then is an n e and so you could argue that the",
    "start": "933839",
    "end": "940399"
  },
  {
    "text": "function itself is returning in any so we can't really tell you anything typewise because well you haven't really",
    "start": "940399",
    "end": "946639"
  },
  {
    "start": "943000",
    "end": "1032000"
  },
  {
    "text": "told us anything typewise yet but let's actually start down the path of",
    "start": "946639",
    "end": "952320"
  },
  {
    "text": "doing a little bit of work on the type here so i'm going to tell it that i'm passing it in any array",
    "start": "952320",
    "end": "957519"
  },
  {
    "text": "and what you'll see right off the bat is now as i hover over slice for example i'm actually getting some information",
    "start": "957519",
    "end": "962959"
  },
  {
    "text": "that could help with statement completion so it's a array that i have and so therefore the result",
    "start": "962959",
    "end": "968800"
  },
  {
    "text": "is an array of anys that i'm returning and the method returns a array of any so therefore we could say the sort by name",
    "start": "968800",
    "end": "975519"
  },
  {
    "text": "actually returns an array of any so a little bit of type information you actually seen that we're able to flow",
    "start": "975519",
    "end": "980959"
  },
  {
    "text": "that through all the way through this method obviously not a giant method if we actually look at the function of",
    "start": "980959",
    "end": "986399"
  },
  {
    "text": "this method what you'll see is that we're calling sort and we're passing in two individual elements from that array",
    "start": "986399",
    "end": "992000"
  },
  {
    "text": "and comparing them and based on their name property so pretty clearly if we try to use this",
    "start": "992000",
    "end": "998480"
  },
  {
    "text": "without actually passing in a name property we're not going to be able to sort anything so let's take a look at",
    "start": "998480",
    "end": "1003680"
  },
  {
    "text": "how we can do something interesting with an interface that might actually kind of fortify this and ensure that what we're getting past is what we expect and",
    "start": "1003680",
    "end": "1010480"
  },
  {
    "text": "actually valid so i'm going to start by saying interface here and you'll notice the completion it's kind of nice",
    "start": "1010480",
    "end": "1016800"
  },
  {
    "text": "and i'm going to call my interface entity and",
    "start": "1016800",
    "end": "1022160"
  },
  {
    "text": "i'm going to say that my entity oops i'm going to say that my entity has a name property in it",
    "start": "1022160",
    "end": "1029438"
  },
  {
    "text": "and i'm going to go ahead and specify some type information here so i'm going to say my entity has a name property and it happens to be a string",
    "start": "1029439",
    "end": "1036160"
  },
  {
    "start": "1032000",
    "end": "1113000"
  },
  {
    "text": "let's actually do an object literal here using that so i'm going to say var e",
    "start": "1036160",
    "end": "1041199"
  },
  {
    "text": "colon entity so i'm telling it that it is specifically of type entity and that's going to be equal to",
    "start": "1041199",
    "end": "1047280"
  },
  {
    "text": "an object literal here and what you'll notice is that i'm actually getting a little bit of feedback from visual",
    "start": "1047280",
    "end": "1052640"
  },
  {
    "text": "studio here what is it telling me it's saying hey you're this you're this uh interface you've implemented this",
    "start": "1052640",
    "end": "1058400"
  },
  {
    "text": "interface called entity and that and that that has a property associated with is",
    "start": "1058400",
    "end": "1063440"
  },
  {
    "text": "called name okay that's pretty nice and you notice here i hit ctrl space and i get auto completion so it tells me",
    "start": "1063440",
    "end": "1069520"
  },
  {
    "text": "there's this thing called name that i can actually use and i'm going to say the name is equal",
    "start": "1069520",
    "end": "1074559"
  },
  {
    "text": "to bob goodall bob",
    "start": "1074559",
    "end": "1081080"
  },
  {
    "text": "name it seo bob there we go",
    "start": "1081600",
    "end": "1087520"
  },
  {
    "text": "okay so i can also go back and i could obviously add some other stuff to my interface i could say there's a price associated with it which happens to be a",
    "start": "1087520",
    "end": "1093919"
  },
  {
    "text": "number and you notice immediately that almost immediately once i type things somewhat correctly",
    "start": "1093919",
    "end": "1100880"
  },
  {
    "text": "that my entity now is telling me hey you're not actually implemented correct anymore you also need a price to be",
    "start": "1101520",
    "end": "1107679"
  },
  {
    "text": "associated with you thank you for letting me know that and we'll see my price is 5.95",
    "start": "1107679",
    "end": "1113600"
  },
  {
    "start": "1113000",
    "end": "1161000"
  },
  {
    "text": "so one of the other things that i could do is i could define a item called in stock and i could say in stock is a boolean",
    "start": "1113600",
    "end": "1121600"
  },
  {
    "text": "and of course my my",
    "start": "1121600",
    "end": "1126640"
  },
  {
    "text": "object literal here will give me an error but i could also do something like this and say my my in stock is actually",
    "start": "1126640",
    "end": "1132640"
  },
  {
    "text": "not required it's optional and then if i actually provide one so if i say here in stock",
    "start": "1132640",
    "end": "1139760"
  },
  {
    "text": "look at that autocomplete love it if i say it's equal to 100 for example",
    "start": "1139760",
    "end": "1146080"
  },
  {
    "text": "you'll see that i get an error y because it knows it through type inference again or by comparing it to the interface that you",
    "start": "1146080",
    "end": "1152720"
  },
  {
    "text": "know stock it actually can't be a number it needs to be a bland so i could simply say yeah you're right i'll make this a",
    "start": "1152720",
    "end": "1157919"
  },
  {
    "text": "true and then it's very happy again okay so we've seen an interface let's",
    "start": "1157919",
    "end": "1163280"
  },
  {
    "text": "actually uh see what we can do with this interface to improve our method here so one of the things that we said was our",
    "start": "1163280",
    "end": "1169200"
  },
  {
    "text": "method takes an array of n's and we're using the name property so you could pretty quickly argue if we don't",
    "start": "1169200",
    "end": "1174880"
  },
  {
    "text": "have a name property on what we pass in that it's not going to work horribly well so i could say that instead it's",
    "start": "1174880",
    "end": "1181440"
  },
  {
    "text": "going to take an array of entities in and then you'll notice right off the bat then i actually get an error why because",
    "start": "1181440",
    "end": "1187840"
  },
  {
    "text": "now it knows enough well we told a few things initially i don't know if i showed this but i know it's a is an array so i can get",
    "start": "1187840",
    "end": "1194400"
  },
  {
    "text": "all the array methods that go along with it and i can select them and as i actually select the method for example i",
    "start": "1194400",
    "end": "1199679"
  },
  {
    "text": "can get all the arguments to go with it so okay that's what that looks like",
    "start": "1199679",
    "end": "1205520"
  },
  {
    "text": "great and you notice that it actually flagged the fact that i used local compare when i when obviously i meant",
    "start": "1205520",
    "end": "1211919"
  },
  {
    "text": "locale compare here so if i start to type uh you'll see that the completion will",
    "start": "1211919",
    "end": "1218080"
  },
  {
    "text": "if i spell it anywhere close to being correct will actually show me local local locale compare and i could use",
    "start": "1218080",
    "end": "1225120"
  },
  {
    "text": "that so that's kind of nice oops there we go",
    "start": "1225120",
    "end": "1230960"
  },
  {
    "text": "all right so there's local compare so my type system you know has already helped a",
    "start": "1230960",
    "end": "1236000"
  },
  {
    "start": "1231000",
    "end": "1268000"
  },
  {
    "text": "little bit i've already kind of figured out a few things that were going wrong now let's actually try",
    "start": "1236000",
    "end": "1242400"
  },
  {
    "text": "this out so what i'm going to go down here and do is i'm going to say var p",
    "start": "1242400",
    "end": "1248480"
  },
  {
    "text": "our and skill of our products is equal to we'll make an array of them",
    "start": "1248480",
    "end": "1256080"
  },
  {
    "text": "and i'll tell you what we'll cheat because you again you probably don't watch me",
    "start": "1257679",
    "end": "1264000"
  },
  {
    "text": "type i know it's really impressive the way i type but nonetheless all right so what i've got here is i've",
    "start": "1264000",
    "end": "1270159"
  },
  {
    "start": "1268000",
    "end": "1296000"
  },
  {
    "text": "got a array of products and you'll notice it happens to implement the the interface now i didn't explicitly",
    "start": "1270159",
    "end": "1276720"
  },
  {
    "text": "say that these products implement that interface but as we hover over it you'll see that it kind of knows the fact that",
    "start": "1276720",
    "end": "1282240"
  },
  {
    "text": "it's implemented it has string and price which are two pieces that interface the optional in stock",
    "start": "1282240",
    "end": "1287760"
  },
  {
    "text": "uh isn't there obviously because i didn't provide any stock and i also have some additional data the id",
    "start": "1287760",
    "end": "1292960"
  },
  {
    "text": "let's actually see if we can get this to run so i'm going to do is grab it i just opened a file in visual studio but let's",
    "start": "1292960",
    "end": "1299200"
  },
  {
    "start": "1296000",
    "end": "1360000"
  },
  {
    "text": "actually head over to the typescript playground now because every every language specification should have a playground",
    "start": "1299200",
    "end": "1305600"
  },
  {
    "text": "that you can play in that's kind of the new thing to do here so i'm going to go over to the playground",
    "start": "1305600",
    "end": "1310799"
  },
  {
    "text": "i'm going to go ahead and get rid of what's in there paste in the new code now i promised that this thing was was actually making",
    "start": "1310799",
    "end": "1316960"
  },
  {
    "text": "javascript and you'll see it pretty clearly here that my interface is completely",
    "start": "1316960",
    "end": "1322080"
  },
  {
    "text": "evaporated doesn't exist in the javascript side and you just set the type information sort by name telling it",
    "start": "1322080",
    "end": "1327679"
  },
  {
    "text": "what type it was that's completely evaporated and so we're just left with just plain javascript so that's what in",
    "start": "1327679",
    "end": "1333840"
  },
  {
    "text": "in the playground it actually takes what you type in on the typescript side and runs it through the typescript language",
    "start": "1333840",
    "end": "1339360"
  },
  {
    "text": "surface and compiler produces javascript on the other side so we're going to save our sorted",
    "start": "1339360",
    "end": "1345679"
  },
  {
    "text": "is equal to sort by sort by name",
    "start": "1345679",
    "end": "1352480"
  },
  {
    "text": "and that takes a argument on a type entity let's just pass it products and see what it thinks about products",
    "start": "1352480",
    "end": "1359600"
  },
  {
    "text": "okay so you'll see here that it knows that we're passing in an item with these properties name price id",
    "start": "1359600",
    "end": "1366640"
  },
  {
    "start": "1360000",
    "end": "1472000"
  },
  {
    "text": "coming out of it you'll see that we've kind of lost something along the way here we just know that it's an entity",
    "start": "1366640",
    "end": "1371760"
  },
  {
    "text": "array that's returned but we've lost the characteristics of what was in there we'll get back to that in a second",
    "start": "1371760",
    "end": "1377919"
  },
  {
    "text": "but let's actually see if we can get this to run that was kind of what i promised to do so document",
    "start": "1377919",
    "end": "1383919"
  },
  {
    "text": "that body that enter html",
    "start": "1386320",
    "end": "1394158"
  },
  {
    "text": "is equal to and let's say json.oops json",
    "start": "1394480",
    "end": "1400480"
  },
  {
    "text": "what if i could type today it would be dangerous note to self try not to type as much",
    "start": "1400480",
    "end": "1405840"
  },
  {
    "text": "next time json.stringify and we'll actually",
    "start": "1405840",
    "end": "1412960"
  },
  {
    "text": "actually pass it sorted we will not give it a replacer so we'll just send",
    "start": "1414159",
    "end": "1420640"
  },
  {
    "text": "null and we'll say that we'll use four tabs or four spaces there for spacing",
    "start": "1420640",
    "end": "1426559"
  },
  {
    "text": "and with any luck we press run and it runs okay so there it is",
    "start": "1426559",
    "end": "1432559"
  },
  {
    "text": "and it's sorted by name so hammer lawnmower pliers screw that's all good all right that's nice",
    "start": "1432559",
    "end": "1440000"
  },
  {
    "text": "what can we do to kind of rectify the fact that we started with a you know kind of detailed view of what we're",
    "start": "1440000",
    "end": "1445760"
  },
  {
    "text": "passing in here but what we end up with is just an entity array well it turns out that's being driven by the fact that",
    "start": "1445760",
    "end": "1452400"
  },
  {
    "text": "we're passing in uh an entity and we're losing something along the way so we can actually use",
    "start": "1452400",
    "end": "1457600"
  },
  {
    "text": "generics here to provide more type information and now we can say it is sort by type t so whatever object you",
    "start": "1457600",
    "end": "1464320"
  },
  {
    "text": "give it it'll actually make sure it implements that interface and we'll say that it takes a type t as",
    "start": "1464320",
    "end": "1471679"
  },
  {
    "text": "an argument when i did that what you'll notice now is it's complaining about name does it keep me from running it no one of the",
    "start": "1471679",
    "end": "1478159"
  },
  {
    "start": "1472000",
    "end": "1579000"
  },
  {
    "text": "beauties of javascript is it tries to do the right thing and and often does but what it's telling me is",
    "start": "1478159",
    "end": "1484840"
  },
  {
    "text": "hey name is actually something that is not going to be on you you said any object can come in here now is what you",
    "start": "1484840",
    "end": "1491279"
  },
  {
    "text": "basically told me and in fact any object does not necessarily have a name property and it's actually right so what",
    "start": "1491279",
    "end": "1497279"
  },
  {
    "text": "i want to do is actually say that it extends t so it keeps the tenust that was there",
    "start": "1497279",
    "end": "1504799"
  },
  {
    "text": "or extends the entity i should say it keeps the tennis that was there and in addition to that",
    "start": "1504799",
    "end": "1511200"
  },
  {
    "text": "passes it all the way through so now if we look at this going in we know what it is coming out we know what it is",
    "start": "1511200",
    "end": "1517520"
  },
  {
    "text": "if we were to come in here and change the name of one of these like that so it's no longer you notice right away the",
    "start": "1517520",
    "end": "1522559"
  },
  {
    "text": "the compiler is saying hey you can actually the parameter you supply doesn't actually implement this",
    "start": "1522559",
    "end": "1528080"
  },
  {
    "text": "entity interface that you told me you were going to implement so that's kind of cool",
    "start": "1528080",
    "end": "1533919"
  },
  {
    "text": "oh one of the things i promised i would show let's say that i have a local variable",
    "start": "1533919",
    "end": "1539279"
  },
  {
    "text": "called name here and it's equal to abc or whatever i type there",
    "start": "1539279",
    "end": "1545279"
  },
  {
    "text": "and i have a name here on entity so obviously one is more global scope one is local scope",
    "start": "1545279",
    "end": "1550720"
  },
  {
    "text": "if i even in the typescript playground if i come into typescript playground and say",
    "start": "1550720",
    "end": "1555840"
  },
  {
    "text": "rename symbol you'll notice that now i could say something like entity name",
    "start": "1555840",
    "end": "1562640"
  },
  {
    "text": "and it knows notice it didn't change the local version of it here it changed the appropriate ones here",
    "start": "1564480",
    "end": "1570400"
  },
  {
    "text": "because it's that smart so refactoring is a lot easier when it has that kind of scope and understands",
    "start": "1570400",
    "end": "1576799"
  },
  {
    "text": "what the code actually means at some level so let's take one let's go through one last example here let's go back to",
    "start": "1576799",
    "end": "1584799"
  },
  {
    "start": "1579000",
    "end": "1600000"
  },
  {
    "text": "visual studio and i'm going to go ahead and just get rid of that code and i'm going to grab a",
    "start": "1584799",
    "end": "1590480"
  },
  {
    "text": "generic sort by so this is meant to sort anything",
    "start": "1590480",
    "end": "1596000"
  },
  {
    "text": "so let's actually take a look can i slide this here nope so basically what it's saying is sort by",
    "start": "1596000",
    "end": "1602480"
  },
  {
    "start": "1600000",
    "end": "1664000"
  },
  {
    "text": "takes any type t takes an array of those as a matter of fact and it's going to take a call back",
    "start": "1602480",
    "end": "1608159"
  },
  {
    "text": "which returns an any and ultimately it returns a that type array of that type i",
    "start": "1608159",
    "end": "1614240"
  },
  {
    "text": "slice it and here's my sort i'm going ahead and grabbing my i'm calling the method that i was passed in to actually",
    "start": "1614240",
    "end": "1620880"
  },
  {
    "text": "get the key of each of the items that i'm passed and then i do a comparison and return them so i can sort",
    "start": "1620880",
    "end": "1628400"
  },
  {
    "text": "so here what i can do is i can say",
    "start": "1628400",
    "end": "1632799"
  },
  {
    "text": "and you may have noticed the little that's a lambda expression there that's actually not something that is",
    "start": "1636000",
    "end": "1641840"
  },
  {
    "text": "in the language spec and you notice it's just replaced with an inline function basically",
    "start": "1641840",
    "end": "1647679"
  },
  {
    "text": "the interesting bit is that lambda expressions actually are implemented in some browsers and they're targeted to be",
    "start": "1647679",
    "end": "1653600"
  },
  {
    "text": "in the ecma 6 language standard that's coming out in december so you should be able to actually use them and they",
    "start": "1653600",
    "end": "1659919"
  },
  {
    "text": "should pass through if you have an xmas if you compile code for ecma 6. so you'll notice that i'm getting a",
    "start": "1659919",
    "end": "1666159"
  },
  {
    "start": "1664000",
    "end": "1704000"
  },
  {
    "text": "complaint here because now sort by is saying hey um you're passing me one of the things i",
    "start": "1666159",
    "end": "1671200"
  },
  {
    "text": "need but i also need this uh the callback basically that i'm going",
    "start": "1671200",
    "end": "1677120"
  },
  {
    "text": "to sort on so i'm going to say x dot let's start by price sure",
    "start": "1677120",
    "end": "1682480"
  },
  {
    "text": "and then we're going to display that sorted list out so sorting on price 95 cents up to 500",
    "start": "1682480",
    "end": "1689360"
  },
  {
    "text": "that looks pretty good i should be able of course then to say that i want to sort on",
    "start": "1689360",
    "end": "1695520"
  },
  {
    "text": "um let's say the name sure why not",
    "start": "1695520",
    "end": "1701840"
  },
  {
    "text": "and there i'm sorting by name so again typescript everything we do in typescript at the end of the day comes",
    "start": "1702000",
    "end": "1708320"
  },
  {
    "start": "1704000",
    "end": "1858000"
  },
  {
    "text": "out as javascript and and runs in the normal javascript environment",
    "start": "1708320",
    "end": "1714158"
  },
  {
    "text": "let's take a look at classes so",
    "start": "1714480",
    "end": "1719919"
  },
  {
    "text": "i'm just going to get rid of that i can say class we'll define a class",
    "start": "1719919",
    "end": "1725039"
  },
  {
    "text": "point and i can say that it has a x which is a",
    "start": "1725039",
    "end": "1732080"
  },
  {
    "text": "number and a y that's a number",
    "start": "1732080",
    "end": "1737440"
  },
  {
    "text": "you'll see being generated in real time so no surprise there once i've done that i can actually say",
    "start": "1737440",
    "end": "1742799"
  },
  {
    "text": "var p equals oops equals new point",
    "start": "1742799",
    "end": "1750200"
  },
  {
    "text": "and you'll see that we in fact can create a new instance of point always helps if you",
    "start": "1752559",
    "end": "1758480"
  },
  {
    "text": "case it right there we go create a new instance of point and those variables that i declared are",
    "start": "1758480",
    "end": "1763679"
  },
  {
    "text": "available to me so there's the x we'll give it a value of 10 there's the value of y",
    "start": "1763679",
    "end": "1769520"
  },
  {
    "text": "give it a value of 20. now as good language designers and programmers we're probably looking at",
    "start": "1769520",
    "end": "1775360"
  },
  {
    "text": "this and saying we really should use a constructor on this martin what are you thinking you're right so i'll go ahead and pass those as arguments",
    "start": "1775360",
    "end": "1781679"
  },
  {
    "text": "and you'll notice now it's complaining because the fact that we don't have a version of the constructor that takes arguments well we can we can easily",
    "start": "1781679",
    "end": "1788159"
  },
  {
    "text": "create that so i can go back to here and i can say",
    "start": "1788159",
    "end": "1794480"
  },
  {
    "text": "constructor always helps if you spell it right",
    "start": "1794480",
    "end": "1802720"
  },
  {
    "text": "even better when you get completion there and i can say that it has a x which is an integer",
    "start": "1805039",
    "end": "1811279"
  },
  {
    "text": "pardon me a number a y which is a number",
    "start": "1811279",
    "end": "1817519"
  },
  {
    "text": "and then i'll implement it quickly very quickly",
    "start": "1818159",
    "end": "1824559"
  },
  {
    "text": "there we go i can say this dot x is equal to x",
    "start": "1825760",
    "end": "1832080"
  },
  {
    "text": "this dot y is equal to y no surprise there i can define methods on it sure why not",
    "start": "1832080",
    "end": "1838640"
  },
  {
    "text": "so i could say distance and that's math dot square root",
    "start": "1838640",
    "end": "1847600"
  },
  {
    "text": "sure let's do x times so i'm just going to make this up here for sake of time this that y",
    "start": "1848840",
    "end": "1855600"
  },
  {
    "text": "and close that there we go and i can also do something that's kind of interesting so in essence x and y are",
    "start": "1855600",
    "end": "1862799"
  },
  {
    "start": "1858000",
    "end": "1945000"
  },
  {
    "text": "public properties here so i can just simply get rid of them",
    "start": "1862799",
    "end": "1868000"
  },
  {
    "text": "and in my constructor declaration i can actually say i want these to be public",
    "start": "1868000",
    "end": "1874320"
  },
  {
    "text": "and you notice on the generated code side it goes ahead and does basically the same thing that i was doing where i've got these as public properties now",
    "start": "1874640",
    "end": "1881600"
  },
  {
    "text": "i can also do something like this which is actually not part of",
    "start": "1881600",
    "end": "1886880"
  },
  {
    "text": "javascript so you might be saying that's interesting so i've got a color which is",
    "start": "1886880",
    "end": "1892159"
  },
  {
    "text": "a string you don't see anything yet i you know i believe you but if i then say this that color",
    "start": "1892159",
    "end": "1900320"
  },
  {
    "text": "is equal to red you'll see that you're",
    "start": "1900480",
    "end": "1906320"
  },
  {
    "text": "how do you do that well you're saying well gee martin i can go ahead and type it well you can but the editor is",
    "start": "1906320",
    "end": "1911440"
  },
  {
    "text": "actually smart enough now that it's telling you hey that's not available to you and i can go ahead and say yeah i",
    "start": "1911440",
    "end": "1916480"
  },
  {
    "text": "know it's really there i'm going to type it in anyway and i can actually you'll notice on this side it's actually generated but you're",
    "start": "1916480",
    "end": "1922399"
  },
  {
    "text": "getting an error out of the editor basically saying it's inaccessible because it's private",
    "start": "1922399",
    "end": "1927679"
  },
  {
    "text": "okay so for the take of time i'm going to just grab some code and",
    "start": "1927679",
    "end": "1932880"
  },
  {
    "text": "plug it in so here's a more complete implementation of class",
    "start": "1932880",
    "end": "1939120"
  },
  {
    "text": "i don't know if it's actually more complete or not maybe a lie maybe it's the same control v",
    "start": "1941039",
    "end": "1946080"
  },
  {
    "start": "1945000",
    "end": "1992000"
  },
  {
    "text": "so a little bit more to it as a static that you'll see as well but the interesting thing i guess now is",
    "start": "1946080",
    "end": "1952080"
  },
  {
    "text": "what let's say that we want to make this a module so i can say module",
    "start": "1952080",
    "end": "1957120"
  },
  {
    "text": "and let's call it utils",
    "start": "1958320",
    "end": "1962039"
  },
  {
    "text": "and again this is a playground it's not really meant to be a full-on editor but it does have features that are kind of nice so i can just grab this chunk of",
    "start": "1964640",
    "end": "1970399"
  },
  {
    "text": "code here and say format code",
    "start": "1970399",
    "end": "1976080"
  },
  {
    "text": "and formatted it nice okay now you notice that i'm getting an error down here and you might say well that's because of the fact that it's",
    "start": "1976080",
    "end": "1981840"
  },
  {
    "text": "known a name effectively name space martin and you'll see though no that's actually not it it's still complaining why because i didn't export it",
    "start": "1981840",
    "end": "1990919"
  },
  {
    "text": "now it's exported so what you see on the generated side if you looked at kind of the standard approach that people",
    "start": "1991120",
    "end": "1997120"
  },
  {
    "start": "1992000",
    "end": "2096000"
  },
  {
    "text": "advocate for building a class we followed that approach this is the approach that they're pursuing in the",
    "start": "1997120",
    "end": "2002320"
  },
  {
    "text": "ecma 6 standard as well so nothing horribly unique there an interesting",
    "start": "2002320",
    "end": "2007919"
  },
  {
    "text": "extension of this i guess if you will is if we looked at we're going to go ahead and export another class here",
    "start": "2007919",
    "end": "2013679"
  },
  {
    "text": "it's going to be point 3d and it's going to extend",
    "start": "2013679",
    "end": "2020080"
  },
  {
    "text": "point",
    "start": "2020080",
    "end": "2022398"
  },
  {
    "text": "oops put that back where it was",
    "start": "2026000",
    "end": "2033840"
  },
  {
    "text": "all right extends point",
    "start": "2035600",
    "end": "2042679"
  },
  {
    "text": "i guess i have to tell it's a class there we go",
    "start": "2046399",
    "end": "2050800"
  },
  {
    "text": "okay and i need to give it a constructor and it's going to be public x again",
    "start": "2057359",
    "end": "2065760"
  },
  {
    "text": "number public y my colon number",
    "start": "2066399",
    "end": "2072878"
  },
  {
    "text": "and public z all right and i got to give it a body that's why",
    "start": "2072879",
    "end": "2079358"
  },
  {
    "text": "it was not doing anything for me there like here",
    "start": "2079359",
    "end": "2085040"
  },
  {
    "text": "and looks like oh looks like i dropped a paren that's why",
    "start": "2087599",
    "end": "2093599"
  },
  {
    "text": "it's unhappy there we go now what you'll see over here is we actually have",
    "start": "2093599",
    "end": "2100640"
  },
  {
    "start": "2096000",
    "end": "2166000"
  },
  {
    "text": "this is the only time you'll see typescript generate code that you didn't write it's basically a four five line helper for setting up the class making",
    "start": "2100640",
    "end": "2107839"
  },
  {
    "text": "sure it's the prototype chain's been copied any static data that you defined are actually copied",
    "start": "2107839",
    "end": "2114400"
  },
  {
    "text": "and so that's what those are there for and i can say",
    "start": "2114400",
    "end": "2120078"
  },
  {
    "text": "all right we'll go this route here",
    "start": "2132800",
    "end": "2136079"
  },
  {
    "text": "rather than having me debug it",
    "start": "2143359",
    "end": "2146799"
  },
  {
    "text": "there we go so you'll see our class we basically call the super with xy so the parent",
    "start": "2153440",
    "end": "2160000"
  },
  {
    "text": "constructor and then you see that kind of implemented in code we pass in the super as an argument and we go ahead and call it",
    "start": "2160000",
    "end": "2166400"
  },
  {
    "start": "2166000",
    "end": "2369000"
  },
  {
    "text": "so that's kind of how we handle classes you've seen interfaces you might be saying okay this is cool",
    "start": "2166400",
    "end": "2171680"
  },
  {
    "text": "you've kind of covered the browsery kind of stuff but what if we were to actually do something with this in",
    "start": "2171680",
    "end": "2177040"
  },
  {
    "text": "a node let's actually look at that so if i say file new or actually file",
    "start": "2177040",
    "end": "2182320"
  },
  {
    "text": "open pardon me and i'm going to open a file i'm going to select server.ts",
    "start": "2182320",
    "end": "2188960"
  },
  {
    "text": "and this is a really simple you know node implementation here it's",
    "start": "2188960",
    "end": "2194160"
  },
  {
    "text": "giving me an error here because it's telling me i need to compile with the dash module flag which we will do here",
    "start": "2194160",
    "end": "2199520"
  },
  {
    "text": "in a moment this is the reference to the um",
    "start": "2199520",
    "end": "2206240"
  },
  {
    "text": "the node.d.ts file and so if i actually looked at for example create server right clicked on it i've been i don't",
    "start": "2206320",
    "end": "2212480"
  },
  {
    "text": "know if i actually showed this so let me actually show it go to definition here is the node.d.t.s and it shows me for",
    "start": "2212480",
    "end": "2219280"
  },
  {
    "text": "create server the different create servers overloads well there's only one so create server here and the arguments",
    "start": "2219280",
    "end": "2224800"
  },
  {
    "text": "that it takes so that's where the typing information comes from and as you can see i'm",
    "start": "2224800",
    "end": "2229839"
  },
  {
    "text": "working on node here if you're familiar with node i can just say http dot and i get command i get completion which is",
    "start": "2229839",
    "end": "2236560"
  },
  {
    "text": "pretty pretty cool so you can use a couple of different approaches the",
    "start": "2236560",
    "end": "2242320"
  },
  {
    "text": "module to modules comma gs or one of the amd approaches i also have a client that i've set up",
    "start": "2242320",
    "end": "2248240"
  },
  {
    "text": "here i'm going to go ahead and open that quickly so file while i'm here i'm going to grab this",
    "start": "2248240",
    "end": "2254160"
  },
  {
    "text": "directory copy that directory and i'm going to open the can i get away with this i'm going to open command and",
    "start": "2254160",
    "end": "2261599"
  },
  {
    "text": "i'm going to open hello.ts",
    "start": "2261599",
    "end": "2265400"
  },
  {
    "text": "there we go all right so look at both of those the client essentially imports the code i",
    "start": "2267280",
    "end": "2273040"
  },
  {
    "text": "just wrote in the server it creates an instant server and listens on the port the server if we actually looked at its",
    "start": "2273040",
    "end": "2279119"
  },
  {
    "text": "implementation uh goes ahead and listens and sends a",
    "start": "2279119",
    "end": "2284960"
  },
  {
    "text": "message back and echoes the message that was sent to it so and if you look at the go command",
    "start": "2284960",
    "end": "2290480"
  },
  {
    "text": "basically it's just a batch file it runs the typescript compiler gives it the module flag for common gs",
    "start": "2290480",
    "end": "2296960"
  },
  {
    "text": "and then paths to where i have node.js installed and runs it so let's actually",
    "start": "2296960",
    "end": "2302079"
  },
  {
    "text": "take a look at that oops um cd too i already grabbed that",
    "start": "2302079",
    "end": "2309119"
  },
  {
    "text": "directory oops unless i close it there we go i'm gonna grab this directory here",
    "start": "2309119",
    "end": "2316640"
  },
  {
    "text": "and i'm going to paste it in there it would've been really useful if i'd done a cd in front of that",
    "start": "2316640",
    "end": "2323440"
  },
  {
    "text": "all right so i'm in this directory there is just to prove this star.js i'm going to go",
    "start": "2325520",
    "end": "2330960"
  },
  {
    "text": "ahead and get rid of the gs files that are there just so you can see that although from the distance you're",
    "start": "2330960",
    "end": "2336320"
  },
  {
    "text": "sending it might be hard so the gs files are gone i'm going to go ahead and run tsc",
    "start": "2336320",
    "end": "2341680"
  },
  {
    "text": "type script compiler just so you can see it with its command line arguments great i'm going to go ahead and run go",
    "start": "2341680",
    "end": "2348480"
  },
  {
    "text": "and what you'll see is that it actually will compile my project and listen on port 1337 so now if i hit it",
    "start": "2349520",
    "end": "2357599"
  },
  {
    "text": "from from my system here let's see here",
    "start": "2357599",
    "end": "2362960"
  },
  {
    "text": "localhost 1337 been here before obviously and yay that worked that's nice so we",
    "start": "2362960",
    "end": "2369839"
  },
  {
    "text": "can use it on the client we can use it on the server uh the monaco team that i mentioned has an implementation that",
    "start": "2369839",
    "end": "2375760"
  },
  {
    "text": "runs on node on the server has a bunch of code that's loaded in the browser they have the same code base but",
    "start": "2375760",
    "end": "2381520"
  },
  {
    "text": "they actually compile with the amd flag for the node.js stuff that runs on the server they run with the",
    "start": "2381520",
    "end": "2387839"
  },
  {
    "text": "commonjs flag on the client so there's some same code base two different compiles which is kind of one one way to",
    "start": "2387839",
    "end": "2394400"
  },
  {
    "text": "handle it okay",
    "start": "2394400",
    "end": "2397838"
  },
  {
    "text": "so i'm going to kill this guy",
    "start": "2400320",
    "end": "2404320"
  },
  {
    "text": "all right so last but not least is it might be interesting to actually take a look at",
    "start": "2406720",
    "end": "2412160"
  },
  {
    "text": "an existing project and so i could say file new",
    "start": "2412160",
    "end": "2417359"
  },
  {
    "text": "project i'm going to create an empty asp.net web project",
    "start": "2418480",
    "end": "2425839"
  },
  {
    "text": "call it go to con sure why not no i don't save those i'm gonna just say it's an empty project",
    "start": "2427839",
    "end": "2433200"
  },
  {
    "text": "so basically i've got the bones of a i have a solution if you're familiar with visual studio i have a solution that",
    "start": "2433200",
    "end": "2439200"
  },
  {
    "text": "basically has property and references to libraries in a web config and there's nothing else in it let's go ahead and",
    "start": "2439200",
    "end": "2444960"
  },
  {
    "text": "import some code for a very simple example so i'm going to do those ctrl alt a",
    "start": "2444960",
    "end": "2451040"
  },
  {
    "text": "well i probably should show you that so if you right-click you can say i want to add",
    "start": "2451040",
    "end": "2457599"
  },
  {
    "text": "a new code or existing items let's add some existing items so this is kind of a super brief scenario of",
    "start": "2457599",
    "end": "2464400"
  },
  {
    "text": "oh i have exit i have an existing project i have an existing project that i",
    "start": "2464400",
    "end": "2469520"
  },
  {
    "text": "actually want to port over so here you'll see i have a that's awesome article",
    "start": "2469520",
    "end": "2477640"
  },
  {
    "text": "i have a super simple",
    "start": "2484160",
    "end": "2487359"
  },
  {
    "text": "i don't need the ts file i need the html page though as well all right so",
    "start": "2489440",
    "end": "2495440"
  },
  {
    "text": "i bring these guys in so here i have some super a super simple web page right",
    "start": "2495440",
    "end": "2500560"
  },
  {
    "text": "so i'm including my javascript one js file and basically it's for calculating",
    "start": "2500560",
    "end": "2506319"
  },
  {
    "text": "uh body mass index so height and height inches and weight in pounds so just",
    "start": "2506319",
    "end": "2511920"
  },
  {
    "text": "using kind of very simplistic no style sheet or anything who needs that on a day like this",
    "start": "2511920",
    "end": "2518160"
  },
  {
    "text": "then we actually have the javascript js file you'll see it has basically two functions oops",
    "start": "2518160",
    "end": "2523520"
  },
  {
    "text": "has basically two functions in it the two functions are one to calculate the bmi",
    "start": "2523520",
    "end": "2529040"
  },
  {
    "text": "and a second one which is to grab the input basically get it converted and set up the result and display it in a in a",
    "start": "2529040",
    "end": "2535839"
  },
  {
    "text": "div tag that's on the page okay so if i want to actually type",
    "start": "2535839",
    "end": "2541040"
  },
  {
    "text": "scriptify this thing i can just right click on it and i can say",
    "start": "2541040",
    "end": "2546079"
  },
  {
    "text": "rename and i can simply change the extension to that ts",
    "start": "2546079",
    "end": "2552880"
  },
  {
    "text": "and you'll notice it says hey you're changing extension it may become unusable or you're sure you want to change it i totally do",
    "start": "2554160",
    "end": "2560720"
  },
  {
    "text": "and then it says hey i've noticed that you have a typescript project would you like to provide information for libraries so there's a nuget packet",
    "start": "2560720",
    "end": "2567760"
  },
  {
    "start": "2561000",
    "end": "2595000"
  },
  {
    "text": "manager and basically you'll see that it's searching for different libraries that i could use that are you'll see tag",
    "start": "2567760",
    "end": "2573920"
  },
  {
    "text": "colon typescript so here's one uh jquery sure why don't we go ahead and",
    "start": "2573920",
    "end": "2579760"
  },
  {
    "text": "install that and here's one for bing maps sure we'll",
    "start": "2579760",
    "end": "2586240"
  },
  {
    "text": "we don't use that right now but why not install it and then angular oh there's another popular one let's use angular",
    "start": "2586240",
    "end": "2591520"
  },
  {
    "text": "could have used some of the binding stuff that they do in angular that'd be kind of cool so what you'll see is that i now have a",
    "start": "2591520",
    "end": "2597359"
  },
  {
    "start": "2595000",
    "end": "2791000"
  },
  {
    "text": "scripts directory and in there's angular and you'll notice that it has d.t.s",
    "start": "2597359",
    "end": "2603200"
  },
  {
    "text": "so essentially what it's providing there is the descriptions for the type definitions for",
    "start": "2603200",
    "end": "2610078"
  },
  {
    "text": "for angular and if i look at my project here you'll see that it's actually giving me a few warnings right off the bat one of the",
    "start": "2610720",
    "end": "2616319"
  },
  {
    "text": "things that says not you know not super painful but the property value does not exist on type html element",
    "start": "2616319",
    "end": "2623040"
  },
  {
    "text": "okay that's good to know or not at all html elements so i can simply say node",
    "start": "2623040",
    "end": "2630079"
  },
  {
    "text": "value and it becomes happy again and then i could actually come up here and say hey you know i'd like to call",
    "start": "2630079",
    "end": "2636079"
  },
  {
    "text": "this guy and i would actually like to know the fact that i'm passing it a number",
    "start": "2636079",
    "end": "2642000"
  },
  {
    "text": "and that this guy also takes a number",
    "start": "2642000",
    "end": "2647440"
  },
  {
    "text": "and in fact this whole thing returns a number",
    "start": "2647440",
    "end": "2653200"
  },
  {
    "text": "okay that's kind of nice so it basically runs js lint underneath the",
    "start": "2655200",
    "end": "2661040"
  },
  {
    "text": "covers plus any errors there are that's awesome i'm really happy about",
    "start": "2661040",
    "end": "2667680"
  },
  {
    "text": "that so it's actually pulling in for some reason i didn't configure this project right and it's pulling in",
    "start": "2667680",
    "end": "2673200"
  },
  {
    "text": "additional errors from the libraries i added which is really awesome so",
    "start": "2673200",
    "end": "2679359"
  },
  {
    "text": "i'm just going to dump those guys quick",
    "start": "2679359",
    "end": "2683119"
  },
  {
    "text": "sure i should cut down on the number of errors in any case i actually can once",
    "start": "2685359",
    "end": "2691119"
  },
  {
    "text": "i've done that i can actually run this so if i select the html page",
    "start": "2691119",
    "end": "2696480"
  },
  {
    "text": "and let's just set a breakpoint here for fun",
    "start": "2696480",
    "end": "2701319"
  },
  {
    "text": "you'll see a couple things get produced one thing that you'll notice is that there currently isn't a js file i don't",
    "start": "2704160",
    "end": "2709359"
  },
  {
    "text": "think there is show all files there currently isn't a js file in this project if i go ahead and do the build",
    "start": "2709359",
    "end": "2715680"
  },
  {
    "text": "what you'll see is that it creates a js project for me creates a js file for me",
    "start": "2715680",
    "end": "2722880"
  },
  {
    "text": "and it actually that's what it gets executed also creates a map file",
    "start": "2722880",
    "end": "2730560"
  },
  {
    "text": "uh and in that map file it actually maps between the type script code you have and what actually was generated and what",
    "start": "2731280",
    "end": "2737359"
  },
  {
    "text": "it what that lets you in effect do is be able to debug that's awesome",
    "start": "2737359",
    "end": "2743920"
  },
  {
    "text": "74 years wow more more than lines of code i have i'll get rid of this one too",
    "start": "2743920",
    "end": "2752119"
  },
  {
    "text": "all right and there's my project and if i enter data here i think at a break point",
    "start": "2762880",
    "end": "2768000"
  },
  {
    "text": "um of course this is a lie i don't really weigh 160 pounds but you know when i'm being recorded let's say that i'm",
    "start": "2768000",
    "end": "2774079"
  },
  {
    "text": "actually really super healthy and you'll see i can actually step through in the debugger i can see that i",
    "start": "2774079",
    "end": "2779680"
  },
  {
    "text": "actually did not get a value out of that text field for some odd reason",
    "start": "2779680",
    "end": "2784559"
  },
  {
    "text": "and as i said there's actually a map that maps your code to typescript so the debugger can actually run",
    "start": "2785680",
    "end": "2791440"
  },
  {
    "start": "2791000",
    "end": "2865000"
  },
  {
    "text": "so let's wrap here before the gong hits so typescript 100 is in visual studio it's built in just",
    "start": "2791440",
    "end": "2797920"
  },
  {
    "text": "like c sharp and vb is i will continue to ship with with",
    "start": "2797920",
    "end": "2803440"
  },
  {
    "text": "visual studio it also is available for your download and inclusion in your tools it could be that your favorite",
    "start": "2803440",
    "end": "2808720"
  },
  {
    "text": "tools already supported we saw a long list of tools that actually support it in the pdf that you'll get with the",
    "start": "2808720",
    "end": "2814880"
  },
  {
    "text": "session there's some great information that's available so if you have if you have visual studio and you're on 2013 update 2 includes",
    "start": "2814880",
    "end": "2821680"
  },
  {
    "text": "typescript in the box typescript anders does a talk he's the language designer of c sharp and",
    "start": "2821680",
    "end": "2827280"
  },
  {
    "text": "typescript he does a great talk at build about a month ago uh eric gamma does a great talk on",
    "start": "2827280",
    "end": "2833200"
  },
  {
    "text": "building large-scale javascript applications in typescript there's also typescript.lang.org where i was playing",
    "start": "2833200",
    "end": "2839520"
  },
  {
    "text": "in the playground there's typescript and codeplex if you want to see what the source looks like or make a fork or a",
    "start": "2839520",
    "end": "2845040"
  },
  {
    "text": "pull request there's definitely type for any of the popular libraries you might be using and then there's wings which is",
    "start": "2845040",
    "end": "2851440"
  },
  {
    "text": "another open source offering for microsoft which is essentially windows in",
    "start": "2851440",
    "end": "2856480"
  },
  {
    "text": "windows api available through javascript that's it",
    "start": "2856480",
    "end": "2862040"
  }
]