[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "[Music]",
    "start": "2550",
    "end": "11900"
  },
  {
    "text": "thank you Thomas um yeah before I get started how many of you are using Docker at the minute can you put your hand",
    "start": "12240",
    "end": "18240"
  },
  {
    "text": "up okay so quite a few how many of you are using Docker in production put your hand up if You' got production okay",
    "start": "18240",
    "end": "25119"
  },
  {
    "text": "that's not bad that's quite a high ratio you brave people just joking um",
    "start": "25119",
    "end": "30880"
  },
  {
    "text": "so yeah I'm going to be talking about Docker security um the boring bit about me my official title is ch ch Chief",
    "start": "30880",
    "end": "37600"
  },
  {
    "text": "scientist that container Solutions uh but I wrote the book using Docker for o publishing uh if you want a discount you",
    "start": "37600",
    "end": "44440"
  },
  {
    "text": "can use the code ofd on the site there's also the free Docker security mini book",
    "start": "44440",
    "end": "49480"
  },
  {
    "text": "that you can get from O'Reilly and that will cover a lot of what I'm going to talk about today and I'm also adri Mo on",
    "start": "49480",
    "end": "56879"
  },
  {
    "text": "Twitter okay take a photo you want um yeah so I'm going to talk",
    "start": "56879",
    "end": "64119"
  },
  {
    "start": "63000",
    "end": "175000"
  },
  {
    "text": "about um Talk of security and I'll start by talking about the benefits of security why security is important um",
    "start": "64119",
    "end": "70799"
  },
  {
    "text": "I'll then talk about some spe specific uh container attack vectors uh and",
    "start": "70799",
    "end": "76040"
  },
  {
    "text": "security philosophy what you should be uh thinking about when you're designing a secure system uh we'll then have a",
    "start": "76040",
    "end": "81840"
  },
  {
    "text": "short demo so there potential for things to go horribly wrong like just now uh and the final part of the talk we'll be",
    "start": "81840",
    "end": "88400"
  },
  {
    "text": "going through some specific TP tips and techniques for securing a Docker or micros service based",
    "start": "88400",
    "end": "94799"
  },
  {
    "text": "system okay so one of the funny things about",
    "start": "94799",
    "end": "100479"
  },
  {
    "text": "security is um you don't really get anything for it right nobody comes and gives you a gold star if you have a",
    "start": "100479",
    "end": "107719"
  },
  {
    "text": "secure system uh sometimes it's no different from an insecure system there're just a bunch of things that",
    "start": "107719",
    "end": "114240"
  },
  {
    "text": "don't happen right so what doesn't happen is your site doesn't go down because there's some trival trivial dos",
    "start": "114240",
    "end": "121360"
  },
  {
    "text": "exploit your front page doesn't look like this because um some script kites",
    "start": "121360",
    "end": "126960"
  },
  {
    "text": "manag to break in and hack it uh you don't start selling Viagra on",
    "start": "126960",
    "end": "132959"
  },
  {
    "text": "this side or at least I assume tame Town Council in the UK didn't mean to start selling Viagra on the",
    "start": "132959",
    "end": "138040"
  },
  {
    "text": "side um you don't lose your customer's credit card details clearly that's quite",
    "start": "138040",
    "end": "143160"
  },
  {
    "text": "a bad one potentially put a company at a business uh you definitely don't lose um",
    "start": "143160",
    "end": "149440"
  },
  {
    "text": "the Rec for like a sensitive Military Intelligence personnel and this included their families as well so these these",
    "start": "149440",
    "end": "155720"
  },
  {
    "text": "were people that could be directly targeted by uh foreign governments or criminal elements um okay so that's why security",
    "start": "155720",
    "end": "163519"
  },
  {
    "text": "is important the next thing I want to talk about is what some important container attack vectors are so things",
    "start": "163519",
    "end": "168920"
  },
  {
    "text": "that are perhaps particularly important in a container or microservice setting uh so first one and perhaps the",
    "start": "168920",
    "end": "176040"
  },
  {
    "start": "175000",
    "end": "209000"
  },
  {
    "text": "most obvious one is Kernel attacks so as you're probably aware um in a Docker",
    "start": "176040",
    "end": "181440"
  },
  {
    "text": "based system the containers share the kernel with the host and the other containers that are running and what",
    "start": "181440",
    "end": "187560"
  },
  {
    "text": "that means is if for example a kernel panic was to occur it would take down not just that container but the host and",
    "start": "187560",
    "end": "193200"
  },
  {
    "text": "all containers on it so that's certainly something to Bear mind related to that if one container",
    "start": "193200",
    "end": "199599"
  },
  {
    "text": "starts using a lot more resources for example memory it can potentially starve out other containers on the host and end",
    "start": "199599",
    "end": "205879"
  },
  {
    "text": "up in denial service container breakouts we talk",
    "start": "205879",
    "end": "210959"
  },
  {
    "start": "209000",
    "end": "241000"
  },
  {
    "text": "about this a lot and this is just the the worry that perhaps an attacker can",
    "start": "210959",
    "end": "216319"
  },
  {
    "text": "break out of a container and onto the host machine itself or into other",
    "start": "216319",
    "end": "221560"
  },
  {
    "text": "containers and poisoned images so this is just how do you know what's in your images you're running especially images",
    "start": "222080",
    "end": "228120"
  },
  {
    "text": "you download from docka Hub are you sure they are what you think they are um are you sure nobody's tampered with them in",
    "start": "228120",
    "end": "233439"
  },
  {
    "text": "transit or at rest and are you sure they're not wear old or rable versions of software",
    "start": "233439",
    "end": "240840"
  },
  {
    "start": "241000",
    "end": "304000"
  },
  {
    "text": "secrets so we've dealt with you know API passwords um database passwords and API",
    "start": "241319",
    "end": "247120"
  },
  {
    "text": "tokens for a long time but it becomes a more acute problem with microservices when you've got all these containers uh",
    "start": "247120",
    "end": "253560"
  },
  {
    "text": "coming up and going down and living for only a few seconds so we have to be able to automate how we get our secrets into",
    "start": "253560",
    "end": "258919"
  },
  {
    "text": "our containers Etc uh security paradig so what I want",
    "start": "258919",
    "end": "266360"
  },
  {
    "text": "you to think about here is how should you think about security when you design the system and there's two main paradigms I want you to bear in mind the",
    "start": "266360",
    "end": "272919"
  },
  {
    "text": "first one is Def defense and depth so don't just rely on any one layer uh for",
    "start": "272919",
    "end": "278240"
  },
  {
    "text": "security don't just rely on like a firewall to provide you secure system as well as a firewall you need other levels",
    "start": "278240",
    "end": "284120"
  },
  {
    "text": "uh like encryption and monitoring and so uh and the analogy is with a a castle",
    "start": "284120",
    "end": "289280"
  },
  {
    "text": "where you don't just have the moat you got thick Battlement walls you got the fenders and the inside shooting at you",
    "start": "289280",
    "end": "294720"
  },
  {
    "text": "um got part colors Etc and also there be multiple keeps inside so there's a lot of levels to get to before you can get",
    "start": "294720",
    "end": "300840"
  },
  {
    "text": "to the crown jewels as it were uh then also the concept of least",
    "start": "300840",
    "end": "305960"
  },
  {
    "start": "304000",
    "end": "525000"
  },
  {
    "text": "privilege this is a very old Paradigm goes back to I think 70s by Jerome Salter or something and it basically",
    "start": "305960",
    "end": "312680"
  },
  {
    "text": "says that a process or container should only have access to the data and resources that are essential to its",
    "start": "312680",
    "end": "320160"
  },
  {
    "text": "function um yeah so for example if you're container doesn't need access to the database it shouldn't be even on the",
    "start": "320160",
    "end": "326440"
  },
  {
    "text": "same network necessarily as a database and certainly shouldn't be able to connect to it um there a great talk by nithan mcol and",
    "start": "326440",
    "end": "333880"
  },
  {
    "text": "diog Monica who are uh security engineers at Docker and they did the talk called least privileged microservices at Docker con last year so",
    "start": "333880",
    "end": "341240"
  },
  {
    "text": "I encourage you to look at that if you want to hear more about this oh the demo do I have a",
    "start": "341240",
    "end": "349560"
  },
  {
    "text": "yeah so I've only done this demo once or twice so it could go horribly wrong um what I've done is I've run this",
    "start": "349560",
    "end": "354880"
  },
  {
    "text": "container called No hack um which should give you a I clue",
    "start": "354880",
    "end": "360039"
  },
  {
    "text": "that perhaps things are going to go wrong I know it is it's a simple service",
    "start": "360039",
    "end": "365880"
  },
  {
    "text": "that allows me to upload a yaml file so I'll show you an example oh I'll show you the yaml file",
    "start": "365880",
    "end": "373479"
  },
  {
    "text": "first so we got a simple yam file like",
    "start": "375039",
    "end": "379479"
  },
  {
    "text": "that we're going to upload",
    "start": "380360",
    "end": "384080"
  },
  {
    "text": "it and all it does is highlight it so very simple service but it turns out the yaml library we're",
    "start": "386080",
    "end": "393319"
  },
  {
    "text": "using is um vulnerable and so if we upload this gaml file and you",
    "start": "393319",
    "end": "401720"
  },
  {
    "text": "should already see there's something not quite right there so some JavaScript code in there if we upload",
    "start": "401720",
    "end": "408199"
  },
  {
    "text": "this what we",
    "start": "408199",
    "end": "411560"
  },
  {
    "text": "get is this so you can see something's not quite right and we go back to the main page",
    "start": "414280",
    "end": "420039"
  },
  {
    "text": "our main page has been overwritten so clearly that's not a good situation to be",
    "start": "420039",
    "end": "426479"
  },
  {
    "text": "in and if this does ever happen to you ideally you'll have or you know you",
    "start": "426479",
    "end": "431800"
  },
  {
    "text": "suspect your systems can compromis in some way ideally you'll have like guidelines in place that you can refer back to and deal with situations like",
    "start": "431800",
    "end": "437759"
  },
  {
    "text": "that um but you first what you want to do is to isolate the container uh and probably the host that's running on as",
    "start": "437759",
    "end": "443879"
  },
  {
    "text": "well um and then you want you don't want to delete the container because you want to be able to like look at it and analyze it and figure out how it was was",
    "start": "443879",
    "end": "449680"
  },
  {
    "text": "hacked so you can prevent it in the future uh and preferably you don't even want to stop it because you may also",
    "start": "449680",
    "end": "454840"
  },
  {
    "text": "want to look at the processes running inside but you do need to isolate it immediately uh and there's a few tools",
    "start": "454840",
    "end": "460759"
  },
  {
    "text": "we can do use so the easiest way to isolate a container is let's see if we",
    "start": "460759",
    "end": "466039"
  },
  {
    "text": "can get this command correct think",
    "start": "466039",
    "end": "473039"
  },
  {
    "text": "it's yeah so that should connect disconnect the running container from",
    "start": "473639",
    "end": "479759"
  },
  {
    "text": "the docker Network so I'm assuming if I reload yeah so that's now an",
    "start": "479759",
    "end": "489159"
  },
  {
    "text": "accessible and then it's still running and also even though it wasn't running it's only stopped I can still analyze",
    "start": "489159",
    "end": "494680"
  },
  {
    "text": "the file system so I can run Docker diff and that's telling me which files",
    "start": "494680",
    "end": "500800"
  },
  {
    "text": "have changed from the image was created on so I can see that somebody's modified the index. HTML from just running Docker",
    "start": "500800",
    "end": "507000"
  },
  {
    "text": "diff so there's already some tools that Docker givs you for helping to analyze taxs",
    "start": "507000",
    "end": "513280"
  },
  {
    "text": "Etc okay yeah",
    "start": "515159",
    "end": "521800"
  },
  {
    "text": "but um there's also a bunch of ways we can mitigate attacks like this using sort of simple Docker um tools and I",
    "start": "523720",
    "end": "532640"
  },
  {
    "start": "525000",
    "end": "584000"
  },
  {
    "text": "quickly want to show you one of these called um readon only so if you run with a readon flag what happens is the",
    "start": "532640",
    "end": "537920"
  },
  {
    "text": "container file system is set readon so we can see what happens if we rerun",
    "start": "537920",
    "end": "544959"
  },
  {
    "text": "um so if we stop remove this container and I'll rerun it with a r",
    "start": "544959",
    "end": "551200"
  },
  {
    "text": "only file",
    "start": "551200",
    "end": "553680"
  },
  {
    "text": "system hopefully that's up again y so if I try and upload the same",
    "start": "556959",
    "end": "563200"
  },
  {
    "text": "yaml file I get an exception and this time my",
    "start": "563200",
    "end": "570360"
  },
  {
    "text": "front page is fine and that's because uh Docker has stopped the the JavaScript",
    "start": "570360",
    "end": "577360"
  },
  {
    "text": "from be able to write the file so it can't overwrite the main",
    "start": "577360",
    "end": "581519"
  },
  {
    "text": "page but it's very important to point out that that's not a solution it's a a mitigation it's it's cut down what the",
    "start": "583279",
    "end": "589079"
  },
  {
    "start": "584000",
    "end": "615000"
  },
  {
    "text": "attacker's able to do but there's still a remote exploit there you know the attacker is still executing JavaScript",
    "start": "589079",
    "end": "595000"
  },
  {
    "text": "on the our computer so the real solution is actually to remove the runable yaml Library that's running inside that",
    "start": "595000",
    "end": "601440"
  },
  {
    "text": "container um and ideally we'd be able to do this automatically right we could in our build process we could automatically",
    "start": "601440",
    "end": "608000"
  },
  {
    "text": "scan our images for vulnerability such as this and that's actually something that's really starting to take off in",
    "start": "608000",
    "end": "613200"
  },
  {
    "text": "the docker community so there's a bunch of utilities now that do image scanning",
    "start": "613200",
    "end": "618800"
  },
  {
    "start": "615000",
    "end": "717000"
  },
  {
    "text": "there's notless which is Docker Inc solution um they've talked about it a bit already but it's not actually Gone",
    "start": "618800",
    "end": "625160"
  },
  {
    "text": "live for the public quite yet I believe that's literally happened either this week or next week though",
    "start": "625160",
    "end": "630959"
  },
  {
    "text": "um there other Solutions there Clea from coros um which is a free and open source solution uh there peer from Skylock",
    "start": "630959",
    "end": "637760"
  },
  {
    "text": "which I played with a bit and I've got a image in a minute um twist lock and it's also Atomic scan from Red um they all do",
    "start": "637760",
    "end": "645519"
  },
  {
    "text": "roughly the same thing so all they do is you give them your image um you upload it or send it to the server however and",
    "start": "645519",
    "end": "651519"
  },
  {
    "text": "it tells you what vulnerabilities it finds based on cves so this is what I got when I uploaded um that image",
    "start": "651519",
    "end": "658279"
  },
  {
    "text": "interestingly pretty much all of the vulnerabilities that finds are from the underlying Debian image and this is like",
    "start": "658279",
    "end": "664000"
  },
  {
    "text": "the latest deban image in the docker Hub um so apparently there's 113 high",
    "start": "664000",
    "end": "669200"
  },
  {
    "text": "inabilities in this case and clearly that's not good um and you will find at the minute if",
    "start": "669200",
    "end": "676560"
  },
  {
    "text": "you the deban image that they have those vulnerabilities it's generally in things like lib ping is one of the big ones and",
    "start": "676560",
    "end": "684200"
  },
  {
    "text": "stuff that you possibly don't care about but it's still not a great situation the",
    "start": "684200",
    "end": "689720"
  },
  {
    "text": "but this isn't a fault of containers right even if a Debian VM or VM you still have the same vulnerabilities it's",
    "start": "689720",
    "end": "696440"
  },
  {
    "text": "just they're not patched by default at the minute um you can Jo like a more",
    "start": "696440",
    "end": "701800"
  },
  {
    "text": "minimal thing and we'll get to that in a minute but at least it's highlighted the issue and we can move on to fix things",
    "start": "701800",
    "end": "707920"
  },
  {
    "text": "from there and yeah that's the next part of my talk so just looking at some specific",
    "start": "707920",
    "end": "714639"
  },
  {
    "text": "tips and techniques for securing systems so a lot of people ask are containers",
    "start": "714639",
    "end": "721680"
  },
  {
    "start": "717000",
    "end": "771000"
  },
  {
    "text": "more secure than virtual machines and it's an interesting debate to have but it's also a bit of a false",
    "start": "721680",
    "end": "727639"
  },
  {
    "text": "dichotomy because you'll generally be using virtual machines and containers together most commonly you'll be running",
    "start": "727639",
    "end": "733639"
  },
  {
    "text": "your containers inside virtual machines um and what you can do is use",
    "start": "733639",
    "end": "738920"
  },
  {
    "text": "Virtual machines to segregate groups of containers at level of confidentiality so you can do it on level of users but",
    "start": "738920",
    "end": "745399"
  },
  {
    "text": "you can also do it on the level of um systems so you may have a one group of containers that's doing",
    "start": "745399",
    "end": "751040"
  },
  {
    "text": "your processing for credit card details and the other set of containers that's handling the node GS front end and you",
    "start": "751040",
    "end": "757920"
  },
  {
    "text": "can keep those in separate VMS and that way if an attacker breaks into no GS front end they still got a lot of work",
    "start": "757920",
    "end": "764040"
  },
  {
    "text": "to do before they can get to the credit card processing",
    "start": "764040",
    "end": "769160"
  },
  {
    "text": "containers uh this is more something just to be aware of if any of somebody has access to start D containers they",
    "start": "769440",
    "end": "776079"
  },
  {
    "start": "771000",
    "end": "952000"
  },
  {
    "text": "basically have route access on the host right they could for example Mount the root directory and play with things so",
    "start": "776079",
    "end": "782880"
  },
  {
    "text": "if you give somebody Docker access you've given them roote access to that machine uh and because of that you have",
    "start": "782880",
    "end": "788040"
  },
  {
    "text": "to be very careful who you give access to if you're using the remote API make sure you control who has keys uh and",
    "start": "788040",
    "end": "793720"
  },
  {
    "text": "only allow access via the internal networks or VPN one of the interesting things about",
    "start": "793720",
    "end": "800120"
  },
  {
    "text": "containers is that not everything is namespace right so one thing that's not names space is time so the 's the same",
    "start": "800120",
    "end": "807680"
  },
  {
    "text": "in a container on the host the kernel key ring isn't namespaced and also users",
    "start": "807680",
    "end": "812920"
  },
  {
    "text": "aren't quite namespaced at the minute what that means is a uid and a container is US same ID in the host so if I'm",
    "start": "812920",
    "end": "819199"
  },
  {
    "text": "running is Root in a container and there the container break out um and attacker man to break out the container they will",
    "start": "819199",
    "end": "824639"
  },
  {
    "text": "then be root on the host which is clearly a bad situation um there is some work in",
    "start": "824639",
    "end": "830519"
  },
  {
    "text": "addressing this at the docker level so there is like username spacing appeared in Docker 110 but there are some and",
    "start": "830519",
    "end": "836959"
  },
  {
    "text": "what that does is it automatically Maps uh route to a high numbered user on the host but there are some issues for",
    "start": "836959",
    "end": "843079"
  },
  {
    "text": "example you can't use it with readon file systems currently um you can't use it with dnet equal to host or D- uh PID",
    "start": "843079",
    "end": "850320"
  },
  {
    "text": "equal to host and there's also some issues around volume so you may have trouble using the the username spacing",
    "start": "850320",
    "end": "857639"
  },
  {
    "text": "and for that reason it's very important to um set users for your container so you will be in your containers you will",
    "start": "857639",
    "end": "864040"
  },
  {
    "text": "set a user for the process to run us",
    "start": "864040",
    "end": "868480"
  },
  {
    "text": "um this is very simple to do you can just add uh I I I actually took this example from the reddis docker file so",
    "start": "870360",
    "end": "877240"
  },
  {
    "text": "you can see all we're doing is running a uh group AD command in our Docker file that creates this user and then we can use the user",
    "start": "877240",
    "end": "883759"
  },
  {
    "text": "statement to switch that user and that will take effect for all following lines in the docker file and when you start",
    "start": "883759",
    "end": "889160"
  },
  {
    "text": "the container um in some cases you may want to do something as root when your container starts up for example change",
    "start": "889160",
    "end": "896160"
  },
  {
    "text": "uh ownership permissions and files and in that case you'll want to create an entrypoint script that does what you",
    "start": "896160",
    "end": "901839"
  },
  {
    "text": "need to do is rout and then switches to the Lesser privileged",
    "start": "901839",
    "end": "907240"
  },
  {
    "text": "user um we've seen this already but it is a very very effective way of um",
    "start": "908240",
    "end": "913399"
  },
  {
    "text": "control of limiting the access that attackers have to a system uh just setting a read only file system it's",
    "start": "913399",
    "end": "919920"
  },
  {
    "text": "also very simple to do in a lot of cases applications won't be happy when I read only right cuz they'll have some one or",
    "start": "919920",
    "end": "925959"
  },
  {
    "text": "two temporary files they want to write to what you can do is you can explicitly Mount those with the volume so you sort",
    "start": "925959",
    "end": "931160"
  },
  {
    "text": "of poke holes in the v only file system um you can also use temp FS for such",
    "start": "931160",
    "end": "936319"
  },
  {
    "text": "thing which is quite nice and that's a you know when the container comes down that'll be wiped as well so that can be",
    "start": "936319",
    "end": "942079"
  },
  {
    "text": "quite an interesting technique uh very similarly we can mount volumes as read only so that attacker",
    "start": "942079",
    "end": "949360"
  },
  {
    "text": "can't overwrite things uh drop capabilties so Linux",
    "start": "949360",
    "end": "955000"
  },
  {
    "start": "952000",
    "end": "1044000"
  },
  {
    "text": "kernel defines a whole set of capabilities uh like 30 or different sets of capabilities which map onto sets",
    "start": "955000",
    "end": "961759"
  },
  {
    "text": "of system calls kernel system calls um by default a do container gets",
    "start": "961759",
    "end": "967480"
  },
  {
    "text": "a reasonably large subset of these but by no means all you can get most of the",
    "start": "967480",
    "end": "973639"
  },
  {
    "text": "capabilities by adding the Das Dash privilege flag or you can add and remove",
    "start": "973639",
    "end": "978839"
  },
  {
    "text": "specific privileges by using cap drop and cap ad so in this first",
    "start": "978839",
    "end": "984360"
  },
  {
    "text": "example a pointer oh it does oh it doesn't work um so we can in the first",
    "start": "984360",
    "end": "992120"
  },
  {
    "text": "example we're dropping the ability to set the set uid bit on binaries and set",
    "start": "992120",
    "end": "997399"
  },
  {
    "text": "gbit and binaries and in the second example we're dropping all capabilities and just adding back the specific ones",
    "start": "997399",
    "end": "1003920"
  },
  {
    "text": "we need there's a couple of problems with this technique the first one being how do you know which capabilities your",
    "start": "1003920",
    "end": "1010000"
  },
  {
    "text": "container needs it's not really trivial it's kind of a you know trial and experiment uh case at the",
    "start": "1010000",
    "end": "1016560"
  },
  {
    "text": "minute and the second one is there some cap ities I think it's CIS admin and net admin that mapped to a whole bunch of",
    "start": "1016560",
    "end": "1023720"
  },
  {
    "text": "Kernel calls so it's just too much in them they not granular enough that's been addressed at the minute by set comp",
    "start": "1023720",
    "end": "1029280"
  },
  {
    "text": "so the is set comp support a newer Linux kernels and newer versions of Docker but you'll need to be running like a Linux",
    "start": "1029280",
    "end": "1034918"
  },
  {
    "text": "kernel great and four and um that allows you to specifically um Define which",
    "start": "1034919",
    "end": "1040880"
  },
  {
    "text": "kernel calls are allowed to be made uh CPU share so I actually",
    "start": "1040880",
    "end": "1047438"
  },
  {
    "start": "1044000",
    "end": "1116000"
  },
  {
    "text": "recommend by default you don't play with the CPU shares cuz by default um containers will get equal access to the",
    "start": "1047439",
    "end": "1053720"
  },
  {
    "text": "CPU inventive contention but in some cases you may want to say give one set of containers higher access to others so",
    "start": "1053720",
    "end": "1060840"
  },
  {
    "text": "like uh you know you might have more important batch processing or less important batch",
    "start": "1060840",
    "end": "1066160"
  },
  {
    "text": "processing and more important interactive nodes or something and what you can do then is pass it- C flag but",
    "start": "1066160",
    "end": "1073280"
  },
  {
    "text": "you have to remember that this is that Docker uses weight in here and this relative weight of 1024 so in this",
    "start": "1073280",
    "end": "1080919"
  },
  {
    "text": "example the first Docker container gets the default weight in 1024 and the next",
    "start": "1080919",
    "end": "1086159"
  },
  {
    "text": "two are given a weight a 512 so what that means is the first container can access up to half the CPU and the next",
    "start": "1086159",
    "end": "1092520"
  },
  {
    "text": "two can access up to a quarter each so you have to understand this default weight 1024 and how it's worked out",
    "start": "1092520",
    "end": "1099559"
  },
  {
    "text": "which perhaps isn't necessarily obvious you you for example if you do like- C1",
    "start": "1099559",
    "end": "1104960"
  },
  {
    "text": "uh thinking that will set your CPU shares what will actually happen event contention if there's like default containers where and they'll get all the",
    "start": "1104960",
    "end": "1110360"
  },
  {
    "text": "CPU and the- C ones will get none so you have to be a bit careful about that memory limits this is much more",
    "start": "1110360",
    "end": "1118200"
  },
  {
    "start": "1116000",
    "end": "1142000"
  },
  {
    "text": "important because by default a dock container can use as much memory as it likes but you can constrain the memory",
    "start": "1118200",
    "end": "1124520"
  },
  {
    "text": "by passing this DM 52 megabytes in this case um there's also swap memory that",
    "start": "1124520",
    "end": "1132000"
  },
  {
    "text": "gets by default so by default that will also give it 52 megabytes of swap memory for a total of a gigabyte and you can",
    "start": "1132000",
    "end": "1138320"
  },
  {
    "text": "control that separately set G and set uid binaries so",
    "start": "1138320",
    "end": "1146240"
  },
  {
    "start": "1142000",
    "end": "1241000"
  },
  {
    "text": "the default like Deb and and a bun of images come with some binaries that run with elevated privileges um and the",
    "start": "1146240",
    "end": "1153400"
  },
  {
    "text": "issue of these is if an attacker gets into your system you may be able to exploit one of these binaries to elevate",
    "start": "1153400",
    "end": "1158720"
  },
  {
    "text": "the Privileges um the thing is you probably don't need them in your containers so",
    "start": "1158720",
    "end": "1165000"
  },
  {
    "text": "you can actually just take them out if you want and if you you run this fine command in a container in the default",
    "start": "1165000",
    "end": "1172080"
  },
  {
    "text": "Debian container you'll find a bunch of uh programs like this uh and so for",
    "start": "1172080",
    "end": "1177200"
  },
  {
    "text": "example who knows what chfn does one or two people so most of you",
    "start": "1177200",
    "end": "1183760"
  },
  {
    "text": "don't know what chfn does which means you can't really be using it and it is arguably a security risk I mean it's old",
    "start": "1183760",
    "end": "1191000"
  },
  {
    "text": "and well maintained program so I'm assuming they figured it you know it's not got any of security risk potentially",
    "start": "1191000",
    "end": "1197080"
  },
  {
    "text": "it could have and you don't need it so you may as well take it out uh by the way it stands for change full name I",
    "start": "1197080",
    "end": "1202840"
  },
  {
    "text": "believe so it sets the the thing Etsy password that's used by finger and something but it's simple to turn off we",
    "start": "1202840",
    "end": "1209919"
  },
  {
    "text": "can just take remove the set ID bit with a command such as this so we're doing CH mode",
    "start": "1209919",
    "end": "1215200"
  },
  {
    "text": "a-s and all the files with missions of plus",
    "start": "1215200",
    "end": "1220559"
  },
  {
    "text": "6,000 and you do that and then the command again uh there's no such",
    "start": "1220559",
    "end": "1227080"
  },
  {
    "text": "binaries uh minimal images so this largely comes back to the earlier picture we saw with peer and the 113 was",
    "start": "1227480",
    "end": "1234320"
  },
  {
    "text": "it high vulnerabilities uh you can use minimal images like Alpine that have much less",
    "start": "1234320",
    "end": "1240080"
  },
  {
    "text": "in them and if less software there just less things that can be exploited and I",
    "start": "1240080",
    "end": "1245280"
  },
  {
    "start": "1241000",
    "end": "1289000"
  },
  {
    "text": "actually ran the same thing with alpine and it found zero vulnerabilities and P you know is",
    "start": "1245280",
    "end": "1250400"
  },
  {
    "text": "analyzing based on binary level so it should find the same vulnerabilities if they are there uh so basically if You' running L",
    "start": "1250400",
    "end": "1257760"
  },
  {
    "text": "um software you've list attack surface um yeah so look at the Alpine container",
    "start": "1257760",
    "end": "1263760"
  },
  {
    "text": "but you can go even further and just create a static binary that you run in your container and have no operating",
    "start": "1263760",
    "end": "1269520"
  },
  {
    "text": "system at all so you just got the kernel uh and your binary uh you can do it with go I guess",
    "start": "1269520",
    "end": "1275039"
  },
  {
    "text": "you can also do it if you compile like a static C binary and that obviously really cuts down uh your attack surface",
    "start": "1275039",
    "end": "1281559"
  },
  {
    "text": "it does mean that you may have more problems like debugging and stuff because you won't be even able to get a bash cell for example in your container",
    "start": "1281559",
    "end": "1290480"
  },
  {
    "start": "1289000",
    "end": "1300000"
  },
  {
    "text": "uh Linux security modules so the Linux kernel lets you plug in security modules",
    "start": "1290480",
    "end": "1296120"
  },
  {
    "text": "there's two famous ones SE Linux and app armmer SE Linux was originally developed by NSA it's now mainly RS uh a red",
    "start": "1296120",
    "end": "1304240"
  },
  {
    "start": "1300000",
    "end": "1450000"
  },
  {
    "text": "product uh it gives you this policy based access control um this idea of mandatory access control that can't be",
    "start": "1304240",
    "end": "1310320"
  },
  {
    "text": "changed as opposed to discretionary Access Control uh and basically you appli",
    "start": "1310320",
    "end": "1315559"
  },
  {
    "text": "labels and types and it Compares those to the labels and types that approach allow to access and it covers file",
    "start": "1315559",
    "end": "1321279"
  },
  {
    "text": "access sockets interfaces it really is quite powerful but it's quite detailed and can be a bit of",
    "start": "1321279",
    "end": "1326840"
  },
  {
    "text": "a yeah pay in the ass um it's hard to Define your own policies what you'd",
    "start": "1326840",
    "end": "1332559"
  },
  {
    "text": "really like to be able to do is say okay I've got my like web server policy for my engine X containers go and run those",
    "start": "1332559",
    "end": "1338720"
  },
  {
    "text": "containers with that policy and you can do that but I find it very hard to figure out exactly how to write uh the",
    "start": "1338720",
    "end": "1344919"
  },
  {
    "text": "policy uh and if you do use it I say have to use device mapper there I think that's not quite true anymore I think",
    "start": "1344919",
    "end": "1351320"
  },
  {
    "text": "you can use better FS but the thing is you're using SC Linux you're basically running the red hat ecosystem most",
    "start": "1351320",
    "end": "1356919"
  },
  {
    "text": "likely so you're probably using device mapper and uh running on like uh one of",
    "start": "1356919",
    "end": "1362919"
  },
  {
    "text": "the red hat rails or sent to us for example oric and the first thing you notice is",
    "start": "1362919",
    "end": "1369559"
  },
  {
    "text": "that it's extra work to work with volumes so for example if you turn SE Linux you just write a file and try to",
    "start": "1369559",
    "end": "1374760"
  },
  {
    "text": "mount that as a volume you're going to get permission denied um the reason you get permission denied is simply because",
    "start": "1374760",
    "end": "1381360"
  },
  {
    "text": "the the file is not uh labeled for being accessed by a container we can change that fairly simply with a CHC command",
    "start": "1381360",
    "end": "1389000"
  },
  {
    "text": "but you kind of got to know that you got to do something like that um I'm not being entirely Fair here you don't have",
    "start": "1389000",
    "end": "1394080"
  },
  {
    "text": "to run the CH conon command you can just append a colon zero now to end the- V argument and that'll sort of run the CH",
    "start": "1394080",
    "end": "1401159"
  },
  {
    "text": "conon command in the background but you still have to know how to do that um app armor so that's",
    "start": "1401159",
    "end": "1407799"
  },
  {
    "text": "very similar to Linux but are a bit similar possibly not as powerful um it's",
    "start": "1407799",
    "end": "1413039"
  },
  {
    "text": "used by De and buntu and interestingly you'll find this on by default so you running containers uh on top of Debian",
    "start": "1413039",
    "end": "1418520"
  },
  {
    "text": "at the minute you are using App hammer and again it limits container access to files and kernel capabilities and you",
    "start": "1418520",
    "end": "1424919"
  },
  {
    "text": "can Define your own policies uh it's process based and generally not as fine grained as SC Linux it's also something",
    "start": "1424919",
    "end": "1431720"
  },
  {
    "text": "to pain in the asss but um Jesse frazelle who was a engineer",
    "start": "1431720",
    "end": "1436880"
  },
  {
    "text": "at Docker now at mesosphere I wrote a tool called Bane and that's quite a nice little way of creating new own policies",
    "start": "1436880",
    "end": "1442919"
  },
  {
    "text": "and just simpli simplifies doing things so check that out if you're",
    "start": "1442919",
    "end": "1448679"
  },
  {
    "start": "1450000",
    "end": "1493000"
  },
  {
    "text": "interested um you can also run a security Harden kernel so this is a just",
    "start": "1450279",
    "end": "1455440"
  },
  {
    "text": "a patch kernel of various security enhancements the main one's gr security",
    "start": "1455440",
    "end": "1460559"
  },
  {
    "text": "uh and the main thing they have is something called packs and it's basically a set of memory uh level",
    "start": "1460559",
    "end": "1465720"
  },
  {
    "text": "protection so it'll do things that randomize things in memory and it also um I think it Maps certain areas of",
    "start": "1465720",
    "end": "1472320"
  },
  {
    "text": "memory as um read only so it can't be executed Etc uh there is a couple of issues they",
    "start": "1472320",
    "end": "1479159"
  },
  {
    "text": "tend to lag behind the latest K version so you may have features that you want to use in latest kernel version that",
    "start": "1479159",
    "end": "1485360"
  },
  {
    "text": "aren't available in gr security and there will also be a minor performance uh",
    "start": "1485360",
    "end": "1492080"
  },
  {
    "text": "degradation um verify images so this comes back to the poisoned images idea",
    "start": "1492960",
    "end": "1498360"
  },
  {
    "start": "1493000",
    "end": "1608000"
  },
  {
    "text": "you want to be sure that the images that you're running are what you think they are and you know where they come",
    "start": "1498360",
    "end": "1505360"
  },
  {
    "text": "from so if you get images from the docker Hub at the minute I would say try",
    "start": "1505360",
    "end": "1510799"
  },
  {
    "text": "and use an official image if you can and if you can't use an official image make sure you only use an automated build",
    "start": "1510799",
    "end": "1516640"
  },
  {
    "text": "don't go and use like some random image because you don't know what's in there right at least an automated build you",
    "start": "1516640",
    "end": "1522559"
  },
  {
    "text": "can go and check a Docker file and you can go and find the GitHub sources that it was built from and verify what's going on there",
    "start": "1522559",
    "end": "1529559"
  },
  {
    "text": "um you can go even further and just download the source and build it yourself and that gives you an extra level of uh",
    "start": "1529559",
    "end": "1535120"
  },
  {
    "text": "security um to be sure what you're pulling is what you think it is as in it",
    "start": "1535120",
    "end": "1540240"
  },
  {
    "text": "hasn't been tampered with either a rest or in transit um you really want to either pull by digest which is long like",
    "start": "1540240",
    "end": "1547000"
  },
  {
    "text": "sha hashes or turn on Docker content trust and that basically allows um",
    "start": "1547000",
    "end": "1552880"
  },
  {
    "text": "saying of images Etc",
    "start": "1552880",
    "end": "1556919"
  },
  {
    "text": "um all it in so one of the nice things about Docker is this idea of a mutable",
    "start": "1558440",
    "end": "1563679"
  },
  {
    "text": "infrastructure so generally with Docker when you're running containers um you don't change those",
    "start": "1563679",
    "end": "1570679"
  },
  {
    "text": "running containers right it's not like the old VM days when we had puppet or Chef or something running and you updated the packages on the Fly",
    "start": "1570679",
    "end": "1577200"
  },
  {
    "text": "generally what you do with containers or what you should be trying to do with containers is when you need to update something you change the docker file you",
    "start": "1577200",
    "end": "1583200"
  },
  {
    "text": "update the image you create a new container and then you remove the old container so that's the way you update",
    "start": "1583200",
    "end": "1588440"
  },
  {
    "text": "things you don't change things over time in a container and one of the nice things about that is it means you can",
    "start": "1588440",
    "end": "1594360"
  },
  {
    "text": "audit the offline images and so once you've audited the offline images you may AIT one image and that'll cover like",
    "start": "1594360",
    "end": "1600799"
  },
  {
    "text": "a 100 containers and you can then verify that those containers have not drifted from the image you're built from using",
    "start": "1600799",
    "end": "1606399"
  },
  {
    "text": "tools like Docker diff and also there's a bunch of scanning tools that I I talked about earlier like P and scall",
    "start": "1606399",
    "end": "1612080"
  },
  {
    "start": "1608000",
    "end": "1721000"
  },
  {
    "text": "and twister um that you can use to check your images for vulnerabilities obviously V if a unability a new",
    "start": "1612080",
    "end": "1618880"
  },
  {
    "text": "vulnerability is found you have to scan not just the images in production before the built and pushed but the running",
    "start": "1618880",
    "end": "1624159"
  },
  {
    "text": "images as well uh secrets so this is a quite an",
    "start": "1624159",
    "end": "1630840"
  },
  {
    "text": "interesting topic I've got this cat up here so this cat um it's a cat in London",
    "start": "1630840",
    "end": "1636159"
  },
  {
    "text": "and its owner he kept coming home from with all these uh keys and things stuck",
    "start": "1636159",
    "end": "1641200"
  },
  {
    "text": "to its magnetic collar and at first the owner felt quite sorry for it with all this being dragged down by all these",
    "start": "1641200",
    "end": "1646760"
  },
  {
    "text": "keys and stuff but it turn out the cat was actually going hunting out the neighbor's keys and the back garden and stuff intentionally and dragging them",
    "start": "1646760",
    "end": "1652720"
  },
  {
    "text": "home I guess cuz they were shiny and yeah the neighbors got a little bit upset when their spare keys went",
    "start": "1652720",
    "end": "1659279"
  },
  {
    "text": "missing so there's several ways you can uh share secrets with containers and as",
    "start": "1659279",
    "end": "1664919"
  },
  {
    "text": "I said before um this is quite a you have to be you have to really think about this in the micros setup CU it has",
    "start": "1664919",
    "end": "1670919"
  },
  {
    "text": "to be automatic uh and the first the most obvious way is just to write your secrets into the image right so you just",
    "start": "1670919",
    "end": "1676679"
  },
  {
    "text": "put in your Docker file as a variable your API token or whatever hopefully",
    "start": "1676679",
    "end": "1682399"
  },
  {
    "text": "you're all thinking that's a very bad idea because it is anybody was access to the image is going to have access to",
    "start": "1682399",
    "end": "1688120"
  },
  {
    "text": "your secrets so don't do that the next way and this is quite",
    "start": "1688120",
    "end": "1694640"
  },
  {
    "text": "popular it's not terrible but it's not my favorite way uh and you can set environment variables for your secret so",
    "start": "1694640",
    "end": "1701200"
  },
  {
    "text": "in this case we can see we set an API token with environment variable and the reason lot of people use this is because",
    "start": "1701200",
    "end": "1707760"
  },
  {
    "text": "it's suggested by 12 Factor apps who's who's aware of 12 Factor apps oh lots of you cool yeah so I'm not knocking 12",
    "start": "1707760",
    "end": "1714320"
  },
  {
    "text": "Factor apps at all I really like that Manifesto but environment VAR bills are probably better in VMS than they are in containers and the reason is they can",
    "start": "1714320",
    "end": "1721279"
  },
  {
    "start": "1721000",
    "end": "1791000"
  },
  {
    "text": "just be seen in too many places right so if you use D- link to network containers",
    "start": "1721279",
    "end": "1727080"
  },
  {
    "text": "the link container gets access to all the variables near other container uh if you in document spec you see the",
    "start": "1727080",
    "end": "1733240"
  },
  {
    "text": "variables you on PS you can see the variables um you can't change them once they're set so it's not like you can",
    "start": "1733240",
    "end": "1738799"
  },
  {
    "text": "just overwrite them uh and so you get issues like for example if you somebody's supporting you",
    "start": "1738799",
    "end": "1746240"
  },
  {
    "text": "uh and they ask for output of Doc spec or they ask for the output of EnV and you send it to them without thinking and",
    "start": "1746240",
    "end": "1751679"
  },
  {
    "text": "suddenly you've like shared all your your secrets or API tokens with the support people by accident so that's the",
    "start": "1751679",
    "end": "1756919"
  },
  {
    "text": "reason I don't like environment variables yeah so if you're not using environment",
    "start": "1756919",
    "end": "1763159"
  },
  {
    "text": "variables what can you do well the only other easy option is to use volumes so",
    "start": "1763159",
    "end": "1768279"
  },
  {
    "text": "you put your secrets into the volume and mount that um you can't just Mount the whole configuration file with a secret",
    "start": "1768279",
    "end": "1775000"
  },
  {
    "text": "inside it so rather than just the secret itself and that's fairly simple and it",
    "start": "1775000",
    "end": "1781440"
  },
  {
    "text": "works is a little bit icky I guess the main issue is that files have a tendency to get shared and checked into Version",
    "start": "1781440",
    "end": "1787760"
  },
  {
    "text": "Control by accident um the future I believe belongs",
    "start": "1787760",
    "end": "1792840"
  },
  {
    "start": "1791000",
    "end": "1888000"
  },
  {
    "text": "to secure key value Stores um there's two main ones for these minut so",
    "start": "1792840",
    "end": "1798720"
  },
  {
    "text": "and is this just the same idea as like a redis key value store but specially set up to store sensitive information such",
    "start": "1798720",
    "end": "1805360"
  },
  {
    "text": "as API tokens and TLS certificates and there's two main Solutions Vault and",
    "start": "1805360",
    "end": "1811240"
  },
  {
    "text": "keyways uh and they tend to have like a bunch of nice features like leases so you can see how long Secret's good for",
    "start": "1811240",
    "end": "1817080"
  },
  {
    "text": "take care of s things encrypted properly um and this is I believe where things",
    "start": "1817080",
    "end": "1823279"
  },
  {
    "text": "are going but there's still a bit of work to get there and you're probably asking well how do you get access to the",
    "start": "1823279",
    "end": "1829200"
  },
  {
    "text": "key value store doesn't that require a secret and it kind of does right so you still need like to use an environment",
    "start": "1829200",
    "end": "1834399"
  },
  {
    "text": "variable or something to get access to the key value store but there's a few things you can do um you could use like",
    "start": "1834399",
    "end": "1839600"
  },
  {
    "text": "a a onetime password so after your container accesses the key Value Store",
    "start": "1839600",
    "end": "1845519"
  },
  {
    "text": "the key the token that is used to access the key value store is invalidated and can't be used again so even if it's",
    "start": "1845519",
    "end": "1851000"
  },
  {
    "text": "given away or leaked or an attacker gets it is useless to them or I think Vault",
    "start": "1851000",
    "end": "1856080"
  },
  {
    "text": "has this idea of app ID where by it generates a token based on some information it already has like a MAC",
    "start": "1856080",
    "end": "1862200"
  },
  {
    "text": "address um there also a very nice idea um the volume plugins so by using a",
    "start": "1862200",
    "end": "1868360"
  },
  {
    "text": "volume plugin um you can if you use a volume plugin you can set up the",
    "start": "1868360",
    "end": "1874639"
  },
  {
    "text": "authentication to the key Value Store outside the container and inside the container you find a file that's mounted",
    "start": "1874639",
    "end": "1881240"
  },
  {
    "text": "all the secrets you've access to inside it so I definitely think that's a future but it's maybe not quite there yet",
    "start": "1881240",
    "end": "1888200"
  },
  {
    "start": "1888000",
    "end": "2096000"
  },
  {
    "text": "yeah in conclusion um the main point I want to make is that containers add",
    "start": "1888200",
    "end": "1893320"
  },
  {
    "text": "security they're just adding a level of isolation to existing systems so you with VMS at the minute and you add in",
    "start": "1893320",
    "end": "1899519"
  },
  {
    "text": "containers you're not going to get less secure unless you do something very stupid right you only add in more tools",
    "start": "1899519",
    "end": "1904799"
  },
  {
    "text": "and more isolation uh and you have extra tools to work with for restricting attackers if",
    "start": "1904799",
    "end": "1910279"
  },
  {
    "text": "you are concerned about container security do use them with VMS and keep in mind principles of defense and depth",
    "start": "1910279",
    "end": "1917120"
  },
  {
    "text": "and least privilege and that's it thank",
    "start": "1917120",
    "end": "1922000"
  },
  {
    "text": "you okay so we have a couple of questions um so the first question I",
    "start": "1925600",
    "end": "1931760"
  },
  {
    "text": "guess you already just answered really it um do you think that containers are",
    "start": "1931760",
    "end": "1937000"
  },
  {
    "text": "inherently more insecure or do you think that the security issues are simply",
    "start": "1937000",
    "end": "1942919"
  },
  {
    "text": "different and unfamiliar to people and that why that people have problems with",
    "start": "1942919",
    "end": "1948039"
  },
  {
    "text": "it so yeah they are different I mean people do sometimes compare like VM security and container security and they",
    "start": "1948039",
    "end": "1953720"
  },
  {
    "text": "make the point that hypervisor is arguably more secure than like the the konel but I'm not always convinced with",
    "start": "1953720",
    "end": "1961880"
  },
  {
    "text": "the argument but perhaps it is um but yeah so you're worried about it use VMS",
    "start": "1961880",
    "end": "1967159"
  },
  {
    "text": "and containers together um and they just do give you all these extra tools for security so in the long run I think it's",
    "start": "1967159",
    "end": "1973880"
  },
  {
    "text": "it's good for security okay U is there any uh situations where you wouldn't use",
    "start": "1973880",
    "end": "1979600"
  },
  {
    "text": "containers because of a security risk uh well no so what I would say is",
    "start": "1979600",
    "end": "1987320"
  },
  {
    "text": "you do have a specific worry you'll end up running your containers and VMS to address that risk so when uh when you",
    "start": "1987320",
    "end": "1994240"
  },
  {
    "text": "guys create containers do you run H do you have a a u continuous uh a build",
    "start": "1994240",
    "end": "2002679"
  },
  {
    "text": "system that validates them against one of these checking tools for",
    "start": "2002679",
    "end": "2007880"
  },
  {
    "text": "playing with that but I don't think I don't think there any this this is very new technology uh and I mean i r a",
    "start": "2007880",
    "end": "2013399"
  },
  {
    "text": "workshop yesterday and I had troubles getting it work through that Workshop um it just there is bleeding edge stuff so",
    "start": "2013399",
    "end": "2019399"
  },
  {
    "text": "I think you'll see that coming over the next year or so um at the minute literally next week Docker I think next",
    "start": "2019399",
    "end": "2026240"
  },
  {
    "text": "week or next week or two Docker will like launch nist and that will automatically scan your images I'm not sure you have to pay for it or whatever",
    "start": "2026240",
    "end": "2032480"
  },
  {
    "text": "or maybe it'll be for um public images not private images I'm not sure yeah because I could imagine",
    "start": "2032480",
    "end": "2038360"
  },
  {
    "text": "even being part of the docker CLI itself right just checking it",
    "start": "2038360",
    "end": "2044240"
  },
  {
    "text": "by default yeah I mean what you really want it's like Jenkins or whatever to check it and not allow you to push it if there's",
    "start": "2044240",
    "end": "2049560"
  },
  {
    "text": "vulnerabilities okay um is there a way to so you showed some security Flags right that you want to use in general",
    "start": "2049560",
    "end": "2056760"
  },
  {
    "text": "when you're uh doing different kinds of operations is there a way to enable these flags by default so you don't",
    "start": "2056760",
    "end": "2061800"
  },
  {
    "text": "really have to consider uh these things When developing that's a good question and the answer is not really at the",
    "start": "2061800",
    "end": "2067200"
  },
  {
    "text": "minute but I think that's some Docker are looking at they have this idea of security profiles so you'll have a profile that travels with your container",
    "start": "2067200",
    "end": "2074079"
  },
  {
    "text": "or your image rather and it says um which permissions it needs so you know",
    "start": "2074079",
    "end": "2079398"
  },
  {
    "text": "you run that and it run read only file system it only needs a read only file system Etc so I think the future is bright but now at the minute you need to",
    "start": "2079399",
    "end": "2085480"
  },
  {
    "text": "you just need to know the the different options okay thank you Adrian thank you",
    "start": "2085480",
    "end": "2092110"
  },
  {
    "text": "[Applause]",
    "start": "2092110",
    "end": "2097439"
  }
]