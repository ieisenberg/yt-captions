[
  {
    "text": "[Music] thank",
    "start": "6990",
    "end": "12000"
  },
  {
    "text": "you so um yes as I said my name is my name is kisten uh and I'm uh CTO of Tri",
    "start": "12000",
    "end": "19760"
  },
  {
    "text": "Fork I've been the tri fork or CTO of humu I'm I'm so used to say I'm C2 of",
    "start": "19760",
    "end": "24920"
  },
  {
    "text": "Tri Fork right I've been that for 20 years uh so um",
    "start": "24920",
    "end": "30480"
  },
  {
    "text": "so about a year ago we started out with um with humo and going full-time into it",
    "start": "30480",
    "end": "36239"
  },
  {
    "text": "actually since January um so we just launched our product almost five six",
    "start": "36239",
    "end": "42440"
  },
  {
    "text": "weeks ago uh we've been working on it um since January so so this is one of one",
    "start": "42440",
    "end": "47840"
  },
  {
    "text": "of the first I've been doing the rounds at to go to this uh this fall and other conferences um introducing this product",
    "start": "47840",
    "end": "54520"
  },
  {
    "text": "um so just briefly uh the agenda for today",
    "start": "54520",
    "end": "60879"
  },
  {
    "text": "is just a little bit on who we are and why I'm here um and and then I'd like to",
    "start": "60879",
    "end": "66640"
  },
  {
    "text": "start off with just a super quick demo just 5 minutes of demo time to just show",
    "start": "66640",
    "end": "71840"
  },
  {
    "text": "you what um what this product is and why uh just just to to give some context of",
    "start": "71840",
    "end": "78799"
  },
  {
    "text": "the rest of the talk um and then the major parts are why we doing this and",
    "start": "78799",
    "end": "86079"
  },
  {
    "text": "how it works um and then if there's time in the end",
    "start": "86079",
    "end": "92240"
  },
  {
    "text": "we'll have more examples of questions and stuff um from the audience so as I said we're humo we're",
    "start": "92240",
    "end": "100520"
  },
  {
    "text": "meet humo at Twitter uh uh there's ga uh me and and Christian as the core team um",
    "start": "100520",
    "end": "108040"
  },
  {
    "text": "we are actually uh six people total um working on it um the other ones have",
    "start": "108040",
    "end": "113960"
  },
  {
    "text": "been Consultants up till now um GA is also GA is the CTO see has been running",
    "start": "113960",
    "end": "121600"
  },
  {
    "text": "the go-to conferences he's been Global manager of go-to conferences uh for the last 10 years came from um Sun Sun",
    "start": "121600",
    "end": "129879"
  },
  {
    "text": "Microsystems as a product uh marketing manager before that I'm uh I've been CTO",
    "start": "129879",
    "end": "135239"
  },
  {
    "text": "in Tri fork for the last 20 years uh Christian actually started out his career at Tri fork and then uh spent",
    "start": "135239",
    "end": "141480"
  },
  {
    "text": "some years at samarin um and came back uh for this",
    "start": "141480",
    "end": "147680"
  },
  {
    "text": "project so uh so this was from Copenhagen the day we launched the",
    "start": "147680",
    "end": "152840"
  },
  {
    "text": "product in I think 3rd of October or something like that so it's only you",
    "start": "152840",
    "end": "158080"
  },
  {
    "text": "know five weeks this product has been in the wild um so let me start by showing",
    "start": "158080",
    "end": "165480"
  },
  {
    "text": "you just really briefly um what this is about and I have uh demo set up here",
    "start": "165480",
    "end": "172280"
  },
  {
    "text": "where um where we have we're taking the the live event stream from GitHub so",
    "start": "172280",
    "end": "178640"
  },
  {
    "text": "this is all the events that happen on public repos um at GitHub and um so this is",
    "start": "178640",
    "end": "186400"
  },
  {
    "text": "like every time you push to GitHub every time you comment something on GitHub",
    "start": "186400",
    "end": "191519"
  },
  {
    "text": "every time um anything happen every time you like something on GitHub um there's there's",
    "start": "191519",
    "end": "198959"
  },
  {
    "text": "this event stream that you can subscribe to and it's really nice to have some some live data to",
    "start": "198959",
    "end": "205040"
  },
  {
    "text": "show so the the tool itself looks like this if we go into the into the GitHub",
    "start": "205040",
    "end": "212200"
  },
  {
    "text": "data space here where we we pulled in um the event stream from GitHub and each each of these lines of logs here is um",
    "start": "212200",
    "end": "221080"
  },
  {
    "text": "adjacent structure that looks like this um in this case it's it's nice",
    "start": "221080",
    "end": "227000"
  },
  {
    "text": "structure Json we can also take you know any other kinds of logs but Json is so nice because you just say it's Json and",
    "start": "227000",
    "end": "233560"
  },
  {
    "text": "then it's it's fairly easy to parse uh so each of these have a type as you'll",
    "start": "233560",
    "end": "239480"
  },
  {
    "text": "see see at the bottom this is a watch event somebody uh clicks the like button",
    "start": "239480",
    "end": "244560"
  },
  {
    "text": "eventually on on GitHub so let's say I want to see all the watch events so now",
    "start": "244560",
    "end": "251400"
  },
  {
    "text": "I get filter here across here you see it kind of a uh a graph of how many of",
    "start": "251400",
    "end": "258600"
  },
  {
    "text": "these happen over time and then the idea in the tool is you we it works kind of",
    "start": "258600",
    "end": "265080"
  },
  {
    "text": "like um it you can think of it as a grip on steroids it works like a Unix command",
    "start": "265080",
    "end": "270680"
  },
  {
    "text": "line pipe uh pipe sequence where you could do stuff like normally you would",
    "start": "270680",
    "end": "276800"
  },
  {
    "text": "do sort unique count grap Etc here we do stuff like group by for instance I want",
    "start": "276800",
    "end": "282720"
  },
  {
    "text": "to group by the repository name and I want to sort that so here we get um",
    "start": "282720",
    "end": "290800"
  },
  {
    "text": "repositories looking over the last in this case 24 hours that had the most likes on",
    "start": "290800",
    "end": "296880"
  },
  {
    "text": "GitHub right so this could um apparently palen here just released",
    "start": "296880",
    "end": "303000"
  },
  {
    "text": "something um and this is a a UI toolkit this is the first open source thing from palen here so uh we could do this over",
    "start": "303000",
    "end": "310960"
  },
  {
    "text": "24 hours or we could do it over a longer period of time here going back um so you",
    "start": "310960",
    "end": "316120"
  },
  {
    "text": "can see the search runs kind of backwards over the last month the GitHub",
    "start": "316120",
    "end": "321520"
  },
  {
    "text": "repost that had the most likes so this is running this demo machine is just running is a single four",
    "start": "321520",
    "end": "328520"
  },
  {
    "text": "core machine with standard discs that um we run this on and",
    "start": "328520",
    "end": "336160"
  },
  {
    "text": "this even though you see it kind of going fairly slowly backwards it's actually fairly fast if you compare it",
    "start": "336160",
    "end": "341600"
  },
  {
    "text": "to other stuff so that's one part you can also take this query and say this",
    "start": "341600",
    "end": "347840"
  },
  {
    "text": "pipeline uh just keep it running I want to keep this running on new events as",
    "start": "347840",
    "end": "353160"
  },
  {
    "text": "they come in so um that's more easy to",
    "start": "353160",
    "end": "358240"
  },
  {
    "text": "easy to see if we look at as shorter time frame here so here we look at a a real time stream of the last 5 minutes",
    "start": "358240",
    "end": "365360"
  },
  {
    "text": "which um repositories have been getting the most likes here so if we limit this",
    "start": "365360",
    "end": "370560"
  },
  {
    "text": "to [Music] some smaller number say we want seven",
    "start": "370560",
    "end": "375599"
  },
  {
    "text": "this this seven repositories that have the most we can we have different visualizations you can see it as a pie",
    "start": "375599",
    "end": "381280"
  },
  {
    "text": "chart and what things you can take these things and so these visualizations like this um put them",
    "start": "381280",
    "end": "388840"
  },
  {
    "text": "into little dashboard so here's a GitHub dashboard that shows some things about",
    "start": "388840",
    "end": "394000"
  },
  {
    "text": "what's going on at GitHub right now so these live queries are real event",
    "start": "394000",
    "end": "399440"
  },
  {
    "text": "processing um capability in the system that doesn't really add loads add any significant",
    "start": "399440",
    "end": "406080"
  },
  {
    "text": "load to the system so you don't need to run the entire query again every time you show this anyway so that was really",
    "start": "406080",
    "end": "413160"
  },
  {
    "text": "brief uh demo let's go back to the talk I'll give you some context for for",
    "start": "413160",
    "end": "420759"
  },
  {
    "text": "it so the why in this is um that we have been um we come out of Tri Fork we come",
    "start": "420759",
    "end": "428840"
  },
  {
    "text": "out of um a large Consulting shop where we do all kinds of systems and we've",
    "start": "428840",
    "end": "434599"
  },
  {
    "text": "been doing that for many many years and most importantly about 10 years ago we",
    "start": "434599",
    "end": "439720"
  },
  {
    "text": "started building 24/7 systems and um most of these most interesting systems",
    "start": "439720",
    "end": "445639"
  },
  {
    "text": "are really composed of many servers and services to today it's the microservices",
    "start": "445639",
    "end": "451639"
  },
  {
    "text": "cloud distributed systems um uh these things have different names",
    "start": "451639",
    "end": "457360"
  },
  {
    "text": "over time but really uh when you when you look at these locks is really a Time proven lows common denominator to",
    "start": "457360",
    "end": "463759"
  },
  {
    "text": "understand what's going on in these systems um back in the days of j2e everything ran on one app server it was",
    "start": "463759",
    "end": "469800"
  },
  {
    "text": "very easy to go in and and look at the the lock delock for the system because everything was running on one machine um",
    "start": "469800",
    "end": "477840"
  },
  {
    "text": "but nowadays it's it's really split out over many machines obviously and having",
    "start": "477840",
    "end": "483720"
  },
  {
    "text": "these logs together is really key to understanding this so we've um we've learned this over time uh and the last",
    "start": "483720",
    "end": "491080"
  },
  {
    "text": "um 10 years one of the systems that one of the large systems we built was this",
    "start": "491080",
    "end": "496120"
  },
  {
    "text": "uh Danish equivalent of the of the British NHS spine it's a a large Healthcare infrastructure for for",
    "start": "496120",
    "end": "502560"
  },
  {
    "text": "anything to do with drugs prescriptions Etc and there was of course very important to have high availability and",
    "start": "502560",
    "end": "508560"
  },
  {
    "text": "high security requirements and today it runs on a you know a good chunk of servers and many different services and",
    "start": "508560",
    "end": "516080"
  },
  {
    "text": "has many different external connected systems so in this",
    "start": "516080",
    "end": "521320"
  },
  {
    "text": "process um of building this we really you need to",
    "start": "521320",
    "end": "526839"
  },
  {
    "text": "have it's it's really difficult to see into the system what's the health of the system how does it feel like so what you",
    "start": "526839",
    "end": "532600"
  },
  {
    "text": "want to do is build some notion of what's normal how does the system behave",
    "start": "532600",
    "end": "538160"
  },
  {
    "text": "when it's normal so so the human brain is really good at this right we um we we sense what's",
    "start": "538160",
    "end": "546519"
  },
  {
    "text": "going on outside and it translates into a sense of normal but but what does this",
    "start": "546519",
    "end": "552120"
  },
  {
    "text": "normal um mean for forit system",
    "start": "552120",
    "end": "558720"
  },
  {
    "text": "and what you want to do is have some kind of dashboard that's really good experience we had is set up dashboards",
    "start": "558720",
    "end": "565720"
  },
  {
    "text": "and we have these dashboards in the developers offices everywhere um where you know the systems they're responsive",
    "start": "565720",
    "end": "572399"
  },
  {
    "text": "responsible for they have these dashboards and it's not because they necessarily need to make that much concrete sense as they are um but",
    "start": "572399",
    "end": "579959"
  },
  {
    "text": "they're there and and you can sense when uh when you",
    "start": "579959",
    "end": "586279"
  },
  {
    "text": "kind of internalize what's the normal behavior because it's just Al always sitting there it's very boring there's",
    "start": "586279",
    "end": "591519"
  },
  {
    "text": "these graphs sitting there um but when it all of a sudden it behaves differently that's that's where it's",
    "start": "591519",
    "end": "597839"
  },
  {
    "text": "interesting um and putting the human brain power to um",
    "start": "597839",
    "end": "603959"
  },
  {
    "text": "to good work when this happens it is super valuable so I assume you in a",
    "start": "603959",
    "end": "609320"
  },
  {
    "text": "Health Care system like our drug system right over the course of a day we might have a graph that looks like this so",
    "start": "609320",
    "end": "615200"
  },
  {
    "text": "this is how many assume maybe it's the number of prescriptions that are issued over the day you can see the lunch break",
    "start": "615200",
    "end": "621040"
  },
  {
    "text": "in the Middle where everybody goes to lunch break um and it could be that when",
    "start": "621040",
    "end": "626600"
  },
  {
    "text": "you overlay several days of these um it's very easy to see that yeah this looks kind of normal even though it's",
    "start": "626600",
    "end": "633519"
  },
  {
    "text": "it's slightly different but then all of a sudden um something like this happens and you can go and then you have to",
    "start": "633519",
    "end": "640240"
  },
  {
    "text": "react right you can um this could be the day after Christmas or the day after Easter when everybody kind of kept their",
    "start": "640240",
    "end": "647959"
  },
  {
    "text": "illness to themselves for a few days and everybody had to go to the doctor Monday morning the first day after the vacation",
    "start": "647959",
    "end": "654680"
  },
  {
    "text": "this is typical Behavior so you learn that but having this sense of normal",
    "start": "654680",
    "end": "660279"
  },
  {
    "text": "in directly in the development environment and being able to interact with your data is super valuable for",
    "start": "660279",
    "end": "667120"
  },
  {
    "text": "just feeling confident um that the system works so another aspect um of running a",
    "start": "667120",
    "end": "676560"
  },
  {
    "text": "system like this is because of the high security requirements uh we really as developers",
    "start": "676560",
    "end": "682720"
  },
  {
    "text": "couldn't access the systems at all I mean everything was literally throw it over a wall um you know we had smart",
    "start": "682720",
    "end": "690760"
  },
  {
    "text": "people on the op side but because of the security requirements with these healthc Care Systems um developers couldn't",
    "start": "690760",
    "end": "698480"
  },
  {
    "text": "interact with the production systems at all only by a ticketing system so everything was described and through a",
    "start": "698480",
    "end": "703639"
  },
  {
    "text": "ticketing system so the Ops Ops guys would have to do so and so this wasn't",
    "start": "703639",
    "end": "709399"
  },
  {
    "text": "anything we could do about but um by actually exposing the logs of the system",
    "start": "709399",
    "end": "715440"
  },
  {
    "text": "um in a in a structured and and organized way it did did give us some",
    "start": "715440",
    "end": "721440"
  },
  {
    "text": "insight into when when things happen in in production this having a readon access",
    "start": "721440",
    "end": "728680"
  },
  {
    "text": "to this could be permitted given that we had full audit locks of which lcks were",
    "start": "728680",
    "end": "736399"
  },
  {
    "text": "accessed um so that's really a way to provide visibility into a production",
    "start": "736399",
    "end": "742160"
  },
  {
    "text": "environment in a high security in high security",
    "start": "742160",
    "end": "747519"
  },
  {
    "text": "environment another another thing that happens as soon as you get access to these logs is you want to be",
    "start": "747560",
    "end": "755000"
  },
  {
    "text": "able to iterate on on how um you access them",
    "start": "755000",
    "end": "762240"
  },
  {
    "text": "so often you see often I see in in organizations they set up a dashboard",
    "start": "762320",
    "end": "768720"
  },
  {
    "text": "and they show like the performance figures or the kpis um some there's a special team an Ops team that goes off",
    "start": "768720",
    "end": "776000"
  },
  {
    "text": "and create these dashboards and then they're pretty much fixed nobody probably look at them but you never",
    "start": "776000",
    "end": "781560"
  },
  {
    "text": "interact with them or change them or build your own so we found with if you have a",
    "start": "781560",
    "end": "787600"
  },
  {
    "text": "system where developers can go and create their own dashboards and do their own special uh measurements and also uh",
    "start": "787600",
    "end": "795360"
  },
  {
    "text": "easily be able to add stuff uh to the measurements that are shown uh so maybe for a new subsystem as",
    "start": "795360",
    "end": "803560"
  },
  {
    "text": "part of as part of a larger um architecture chains or whatnot be EAS be",
    "start": "803560",
    "end": "809079"
  },
  {
    "text": "able to add things so also it this in terms of logging and measuring make it really easy to you know turn this this",
    "start": "809079",
    "end": "817880"
  },
  {
    "text": "crank of iteration um of how you get insights into the system um we found with many systems",
    "start": "817880",
    "end": "825399"
  },
  {
    "text": "that is really difficult to do this um being easily being able to iterate on",
    "start": "825399",
    "end": "832079"
  },
  {
    "text": "what you see in the system and how you get insights into how the system works so um",
    "start": "832079",
    "end": "839880"
  },
  {
    "text": "another issue is you want to be able to take many different kinds of locks in our in our case this Healthcare System",
    "start": "839880",
    "end": "846040"
  },
  {
    "text": "was built on these kinds of Technologies and others um and it's really valuable",
    "start": "846040",
    "end": "852800"
  },
  {
    "text": "to be able to take logs um because the the there's a as I",
    "start": "852800",
    "end": "858399"
  },
  {
    "text": "as I started out saying these are low common denominator uh really easily accessible everybody you know if if it's",
    "start": "858399",
    "end": "864800"
  },
  {
    "text": "part of your software that you control it's very easy to add extra information to the locks if it's part of the system",
    "start": "864800",
    "end": "871079"
  },
  {
    "text": "that you don't control such as maybe you're not committer on MySQL so you can't really change the logs on myql but",
    "start": "871079",
    "end": "877279"
  },
  {
    "text": "you can grab the locks because they're text and you can easily um take",
    "start": "877279",
    "end": "883000"
  },
  {
    "text": "information out of them and and show it on a graph like",
    "start": "883000",
    "end": "888320"
  },
  {
    "text": "this so there's many different requirements um that kind of all add up",
    "start": "888320",
    "end": "894519"
  },
  {
    "text": "to what is an a log aggregation tool so so I still as you know in my um from Tri",
    "start": "894519",
    "end": "903680"
  },
  {
    "text": "Fork side we still see lots of projects that that don't do lock aggregation this is seen as you know this is a luxury",
    "start": "903680",
    "end": "910600"
  },
  {
    "text": "that you can add if the system gets too big or too complex but it really gives",
    "start": "910600",
    "end": "916240"
  },
  {
    "text": "you a very easy and low um resistance impact uh low resistance insight into um",
    "start": "916240",
    "end": "925639"
  },
  {
    "text": "what the system does uh and as soon as you're you're onto it you get totally hooked it's like",
    "start": "925639",
    "end": "932160"
  },
  {
    "text": "it's like crack for programmers you you get um um you need this inside as soon",
    "start": "932160",
    "end": "937720"
  },
  {
    "text": "as you're used to it um and this is kind of I see I know we're not the obviously",
    "start": "937720",
    "end": "943120"
  },
  {
    "text": "we're not the only log aggregation um Advocate out there but this whole thing of using aggregating",
    "start": "943120",
    "end": "950040"
  },
  {
    "text": "logs and and checking information out of them is is kind of like um like test",
    "start": "950040",
    "end": "956759"
  },
  {
    "text": "driven programming in the beginning when when you know the guys who were running around advocating test driven programs",
    "start": "956759",
    "end": "962600"
  },
  {
    "text": "programming everybody was like yeah but where does how do we derive the value out of that and is it really worth it",
    "start": "962600",
    "end": "968839"
  },
  {
    "text": "and now you're you're kind of stupid if you don't do enough testing up front um",
    "start": "968839",
    "end": "974839"
  },
  {
    "text": "I think this is quite obvious uh something that'll bring a lot of value into any size project that you get",
    "start": "974839",
    "end": "981839"
  },
  {
    "text": "insights into what the system is doing",
    "start": "981839",
    "end": "987000"
  },
  {
    "text": "um so this is something you can home go home and Advocate uh to your organization or to new projects you",
    "start": "987000",
    "end": "993480"
  },
  {
    "text": "engaged in um so our particular",
    "start": "993480",
    "end": "998920"
  },
  {
    "text": "engine um is of course built on these",
    "start": "998920",
    "end": "1004120"
  },
  {
    "text": "experiences and others um we have used various um log aggregation Tools in",
    "start": "1004120",
    "end": "1010639"
  },
  {
    "text": "particular we've been using Splunk quite extensively and we've used um the elk stack quite extensively um and what we",
    "start": "1010639",
    "end": "1019120"
  },
  {
    "text": "wanted to achieve was really you may imagine you're standing in a Consulting shop that does lots of",
    "start": "1019120",
    "end": "1025120"
  },
  {
    "text": "Consulting projects for various size customers some are big enterpris ones that would want to pay for the",
    "start": "1025120",
    "end": "1031120"
  },
  {
    "text": "Enterprise solution some are smaller ones that just need something simple and easy so what really we wanted to achieve",
    "start": "1031120",
    "end": "1038480"
  },
  {
    "text": "is build something that was both fast and flexible affordable to put in projects uh simple to install and use um",
    "start": "1038480",
    "end": "1046798"
  },
  {
    "text": "or just really something that we like to use ourselves",
    "start": "1046799",
    "end": "1052400"
  },
  {
    "text": "um so at the core of humo what it what it is kind of from a technical point of",
    "start": "1052400",
    "end": "1058160"
  },
  {
    "text": "view you can think of it as a very simple um time series text database so",
    "start": "1058160",
    "end": "1064679"
  },
  {
    "text": "it's a Time series database where where the only every record is just a",
    "start": "1064679",
    "end": "1070039"
  },
  {
    "text": "timestamp and some text and then it has these properties",
    "start": "1070039",
    "end": "1075520"
  },
  {
    "text": "it's an it's an in-memory stream processing system lots of lots of these high frequency trading",
    "start": "1075520",
    "end": "1080720"
  },
  {
    "text": "systems are using this kind of notion um we support these live queries or",
    "start": "1080720",
    "end": "1086080"
  },
  {
    "text": "standing queries we don't do term indexing so we don't build up uh large",
    "start": "1086080",
    "end": "1091720"
  },
  {
    "text": "indexes instead we just compress the storage and really clever about how we",
    "start": "1091720",
    "end": "1096799"
  },
  {
    "text": "then process uh the data and you know we have various apis that I'll talk a bit",
    "start": "1096799",
    "end": "1102000"
  },
  {
    "text": "uh about later so to get assuming we have some data put into the system how",
    "start": "1102000",
    "end": "1107320"
  },
  {
    "text": "do you get them out so the the query mechanism as I as I",
    "start": "1107320",
    "end": "1112720"
  },
  {
    "text": "showed in the demo early on is like um it's a unique style pipeline right first",
    "start": "1112720",
    "end": "1119200"
  },
  {
    "text": "we have some some kind of boundary conditions which is uh I want the ones that are this is",
    "start": "1119200",
    "end": "1126159"
  },
  {
    "text": "an example the F the top one is what it would look like in humo down here is uh",
    "start": "1126159",
    "end": "1132240"
  },
  {
    "text": "what it could look like in in a similar SQL thing right so we want the ones that are attacked with back end uh starting a",
    "start": "1132240",
    "end": "1139480"
  },
  {
    "text": "day back uh the where the URL is something with conference 27 that could",
    "start": "1139480",
    "end": "1145280"
  },
  {
    "text": "be this goto we're at here today and then I want to group by the HTTP method",
    "start": "1145280",
    "end": "1150760"
  },
  {
    "text": "and select the average response time so you see the ideas are all borrowed",
    "start": "1150760",
    "end": "1158480"
  },
  {
    "text": "from um from the relational model that but we kind of Twisted it around to be a",
    "start": "1158480",
    "end": "1166120"
  },
  {
    "text": "pipeline but operate on the same Concepts so even though we have you can say we have our own programming language",
    "start": "1166120",
    "end": "1171960"
  },
  {
    "text": "our own query language I think it it embodies the the concepts that we know",
    "start": "1171960",
    "end": "1178960"
  },
  {
    "text": "from from a relational world it's very easy to to get started",
    "start": "1178960",
    "end": "1184559"
  },
  {
    "text": "with so the way this runs then is that",
    "start": "1184559",
    "end": "1191360"
  },
  {
    "text": "um as I said before we we don't we don't do indexing the way data is stored is in",
    "start": "1191360",
    "end": "1197960"
  },
  {
    "text": "these segments which are for each combination of",
    "start": "1197960",
    "end": "1203600"
  },
  {
    "text": "TXS so this could be Front End Tax backend tax data cender one data cender",
    "start": "1203600",
    "end": "1209640"
  },
  {
    "text": "2 or service X or whatnot uh each combination of these creates a sequence",
    "start": "1209640",
    "end": "1216240"
  },
  {
    "text": "of storage segments um and these are then just serial over time they they run",
    "start": "1216240",
    "end": "1222280"
  },
  {
    "text": "a timeline uh and each segment has the the earliest the earliest login entry in",
    "start": "1222280",
    "end": "1228760"
  },
  {
    "text": "this segment and the latest log entry in the segment so we have a Min and Max for each of these and that kind of index of",
    "start": "1228760",
    "end": "1234840"
  },
  {
    "text": "the Tex and the time stamps we keep that in memory uh and then when a query comes in",
    "start": "1234840",
    "end": "1240840"
  },
  {
    "text": "it could be I want to query the back end the boundary conditions here I want to query backend uh logs in time interval",
    "start": "1240840",
    "end": "1248640"
  },
  {
    "text": "T1 to T3 that identifies these these segment files and then what we do is",
    "start": "1248640",
    "end": "1255039"
  },
  {
    "text": "just basically just Brute Force our way through these in a very efficient manner so each of these has a little",
    "start": "1255039",
    "end": "1261880"
  },
  {
    "text": "time index they have little blocks that we can decompress in in chunks of the",
    "start": "1261880",
    "end": "1267760"
  },
  {
    "text": "level two cache so when we decompress them onto the CPU cores uh that means we",
    "start": "1267760",
    "end": "1273520"
  },
  {
    "text": "can run like a regular expression over the full log at at placing speed so uh",
    "start": "1273520",
    "end": "1282120"
  },
  {
    "text": "so memory access on the on the CPU cast is much faster than had it been in main",
    "start": "1282120",
    "end": "1287200"
  },
  {
    "text": "memory for instance the fact that it's compressed also adds to the iio the effective IO bandwidth",
    "start": "1287200",
    "end": "1295159"
  },
  {
    "text": "because we can just multiply the real IO bandwidth by the compression ratio um so this um actually works",
    "start": "1295159",
    "end": "1303720"
  },
  {
    "text": "really really nice and it gives us a lot of flexibility for instance it could be that uh we want to run a regular",
    "start": "1303720",
    "end": "1311120"
  },
  {
    "text": "expression so here we take all these log entries um run a regular expression over",
    "start": "1311120",
    "end": "1316760"
  },
  {
    "text": "them to extract a conf conference ID and do a group by conference",
    "start": "1316760",
    "end": "1322720"
  },
  {
    "text": "ID so um maybe I should show this in a little",
    "start": "1322720",
    "end": "1328400"
  },
  {
    "text": "example on the on the real data so you can see that this really works so let's",
    "start": "1328400",
    "end": "1333720"
  },
  {
    "text": "say instead of grouping by repo here I want to run a I take all the watch",
    "start": "1333720",
    "end": "1338919"
  },
  {
    "text": "events and then so a regular expression over this",
    "start": "1338919",
    "end": "1344120"
  },
  {
    "text": "could be um over repository name and the first",
    "start": "1344120",
    "end": "1350640"
  },
  {
    "text": "part of the repository name here that would be the owner so let's say if I",
    "start": "1350640",
    "end": "1355840"
  },
  {
    "text": "extract just the owner part oh I lost my cursor if I lost just take just the",
    "start": "1355840",
    "end": "1362240"
  },
  {
    "text": "owner part the say an",
    "start": "1362240",
    "end": "1367559"
  },
  {
    "text": "named a named group like this so these are the owners I think you put",
    "start": "1367559",
    "end": "1374880"
  },
  {
    "text": "pareses might be one much",
    "start": "1374880",
    "end": "1379960"
  },
  {
    "text": "one less here you go so these are the owners of the repositories that got the",
    "start": "1380480",
    "end": "1387000"
  },
  {
    "text": "most watch events the last in this case the last 5 minutes um or we could actually run a",
    "start": "1387000",
    "end": "1394080"
  },
  {
    "text": "reg like this over a longer period of time and it actually runs really nice and fast over the last 24 hours here so",
    "start": "1394080",
    "end": "1400679"
  },
  {
    "text": "having the ability so where if you have a a setup where the we do all this",
    "start": "1400679",
    "end": "1406960"
  },
  {
    "text": "extraction of front um and you can only do it on injust you don't have the",
    "start": "1406960",
    "end": "1412360"
  },
  {
    "text": "flexibility of extracting this so so with this it's almost like a time machine you can go back to to logs that",
    "start": "1412360",
    "end": "1418080"
  },
  {
    "text": "you pulled in uh a year ago and say I wish I indexed that field and run this",
    "start": "1418080",
    "end": "1424640"
  },
  {
    "text": "uh run Rec exis over over this old data",
    "start": "1424640",
    "end": "1430080"
  },
  {
    "text": "um okay so so this is kind of um just a summary",
    "start": "1430080",
    "end": "1438039"
  },
  {
    "text": "you know we have this Unix pipeline style many queries aggregate anyway so",
    "start": "1438039",
    "end": "1443720"
  },
  {
    "text": "this is kind of the argument why we don't really have index and all in many cases you end up scanning the the D lots",
    "start": "1443720",
    "end": "1450200"
  },
  {
    "text": "of the data anyway so so humo is really just a super fast at doing table scans",
    "start": "1450200",
    "end": "1456520"
  },
  {
    "text": "you say it's a database optimized for doing table scans of sorts um so how do we get the speed so",
    "start": "1456520",
    "end": "1465600"
  },
  {
    "text": "so this goes back to this notion of of mechanical sympathy so Jackie Stewart he was this",
    "start": "1465600",
    "end": "1472640"
  },
  {
    "text": "um Formula 1 race car driver in the 60s he won he won three uh Formula 1 race",
    "start": "1472640",
    "end": "1479520"
  },
  {
    "text": "Global championships in a in a row in the late 60s and his idea uh and the",
    "start": "1479520",
    "end": "1486000"
  },
  {
    "text": "meme that he that he um came up with was this notion of mechanical sympathy so to",
    "start": "1486000",
    "end": "1491640"
  },
  {
    "text": "be a super race car driver you need to understand your car you need to be a mechanic you need to be the car you need",
    "start": "1491640",
    "end": "1496960"
  },
  {
    "text": "to feel every corner of the car um and and really understand how it",
    "start": "1496960",
    "end": "1503520"
  },
  {
    "text": "behaves so um Martin Thompson uh has picked up this",
    "start": "1503520",
    "end": "1510000"
  },
  {
    "text": "idea of mechanical sympathy and applied it to computers and he's been doing the rounds",
    "start": "1510000",
    "end": "1515960"
  },
  {
    "text": "of the major software development conferences um like goto uh and talking",
    "start": "1515960",
    "end": "1522880"
  },
  {
    "text": "about cords and caches and memory controllers and CPU and Io Io structures",
    "start": "1522880",
    "end": "1530679"
  },
  {
    "text": "Etc and how to optimize and how to write your programs to to cater to this how to how to be the CPU you have to to run",
    "start": "1530679",
    "end": "1538000"
  },
  {
    "text": "really fast you have to feel like you're sitting inside the CPU I'm sitting on this core and I can I can imagine what",
    "start": "1538000",
    "end": "1544480"
  },
  {
    "text": "you know this memory feels like it's right there this the local level two cach is right here the other one is much",
    "start": "1544480",
    "end": "1550640"
  },
  {
    "text": "slower to get to and just imagine having this sympathy for being in being the",
    "start": "1550640",
    "end": "1556240"
  },
  {
    "text": "computer so this is just what we've done we've just done you know the basics of what Martin",
    "start": "1556240",
    "end": "1563840"
  },
  {
    "text": "has been um telling us to do which is",
    "start": "1563840",
    "end": "1568919"
  },
  {
    "text": "um let see I just want to get back to my which is to um to feel like the computer and you",
    "start": "1568919",
    "end": "1576960"
  },
  {
    "text": "know in this context it's really it's really interesting he he he he often mentions this quote you know the most",
    "start": "1576960",
    "end": "1582600"
  },
  {
    "text": "amazing achievement of the computer software industry is it's continuing and staggering",
    "start": "1582600",
    "end": "1588200"
  },
  {
    "text": "cancellation uh of gains made by the computer hardware industry you know we we've been so busy especially the last",
    "start": "1588200",
    "end": "1595520"
  },
  {
    "text": "the last 10 years um doing these huge distributed systems adding overhead on",
    "start": "1595520",
    "end": "1603200"
  },
  {
    "text": "on doing clustering um and adding adding all kinds of overhead",
    "start": "1603200",
    "end": "1609240"
  },
  {
    "text": "where really if you if you take the point of view that you want to get the most art of the hardware um you can you",
    "start": "1609240",
    "end": "1615760"
  },
  {
    "text": "can do amazing things you can really do amazing things uh but today it seems like um you",
    "start": "1615760",
    "end": "1624000"
  },
  {
    "text": "know virtual machines at Amazon regardless of their cost are just thrown at problems uh because I guess um the",
    "start": "1624000",
    "end": "1632679"
  },
  {
    "text": "salaries of the developers is just um the the thing that decides um you know",
    "start": "1632679",
    "end": "1638880"
  },
  {
    "text": "because if if the developers can solve the problem with less time you know then it doesn't matter how",
    "start": "1638880",
    "end": "1645360"
  },
  {
    "text": "many computers they buy but often you know it adds it adds up when the systems get",
    "start": "1645360",
    "end": "1650399"
  },
  {
    "text": "big so we've taken kind of the opposite approach and say how much can we get out of a machine you want raw speed so it",
    "start": "1650399",
    "end": "1657120"
  },
  {
    "text": "means you know the active data set of our inner loop fits on",
    "start": "1657120",
    "end": "1662279"
  },
  {
    "text": "Cache uh know don't do any allocations in the Inner Loop um because anytime you",
    "start": "1662279",
    "end": "1669240"
  },
  {
    "text": "do allocations it ends up touching global data structures all of this is built in in Scala by the way uh so",
    "start": "1669240",
    "end": "1677000"
  },
  {
    "text": "actually getting out of the way of allocations is somewhat um tricky um especially in scal out there",
    "start": "1677000",
    "end": "1684840"
  },
  {
    "text": "it's so easy to to know allocate a closure uh somewhere an an anonymous",
    "start": "1684840",
    "end": "1691120"
  },
  {
    "text": "function we do bind to core disable hyper threats because multiple hyper threats they just end up thrashing the",
    "start": "1691120",
    "end": "1696640"
  },
  {
    "text": "same caches the compressed storage and having a a really efficient streaming",
    "start": "1696640",
    "end": "1702320"
  },
  {
    "text": "decompression um is important um",
    "start": "1702320",
    "end": "1709440"
  },
  {
    "text": "doing you know laying out and organizing the reads the actual dis IO so that it becomes sequential reads when you have",
    "start": "1709799",
    "end": "1716360"
  },
  {
    "text": "to touch the dis it's important so there's nothing new in this this is all just uh standard tricks and in the",
    "start": "1716360",
    "end": "1724600"
  },
  {
    "text": "book so if you just apply all this you can really get amazing performance out",
    "start": "1724600",
    "end": "1731080"
  },
  {
    "text": "of um a single machine um with standard",
    "start": "1731080",
    "end": "1736399"
  },
  {
    "text": "IO um so it doesn't have to be a big uh big",
    "start": "1736399",
    "end": "1743159"
  },
  {
    "text": "big system to perform well actually a small system which is tightly engineered can easily um run circles around the big",
    "start": "1743159",
    "end": "1750440"
  },
  {
    "text": "Enterprise systems um so on the data in just side",
    "start": "1750440",
    "end": "1756360"
  },
  {
    "text": "um how we get data in uh we have various apis we have our",
    "start": "1756360",
    "end": "1763559"
  },
  {
    "text": "own HTTP Json API we've implemented elastics um apis so you can use",
    "start": "1763559",
    "end": "1769720"
  },
  {
    "text": "elastics uh beats uh things and elastics",
    "start": "1769720",
    "end": "1775679"
  },
  {
    "text": "uh lock stash things lock St stash infrastructure to push data into humi we",
    "start": "1775679",
    "end": "1781600"
  },
  {
    "text": "have some various firewall lock uh binary formats um supported um because it turns out one of",
    "start": "1781600",
    "end": "1789399"
  },
  {
    "text": "the one of the places where it's very expensive to use these bolume products um by volume lock products is some",
    "start": "1789399",
    "end": "1797320"
  },
  {
    "text": "something like firewalls because you can just get boatloads of firewalls uh firewall data so that could be an",
    "start": "1797320",
    "end": "1802519"
  },
  {
    "text": "interesting market for us something where there's sufficient volume of data",
    "start": "1802519",
    "end": "1808320"
  },
  {
    "text": "um we support CIS loog and you know we can easily add add more specific things",
    "start": "1808320",
    "end": "1814679"
  },
  {
    "text": "soing data data that comes in uh is is really processed quite",
    "start": "1814679",
    "end": "1820480"
  },
  {
    "text": "minimally we essentially just compress it and persist it in a pend only file so you can imagine we can take a huge",
    "start": "1820480",
    "end": "1827760"
  },
  {
    "text": "load of data in this we get stored into these segments so we don't do indexing or beables and sorted on dis this kinds",
    "start": "1827760",
    "end": "1835279"
  },
  {
    "text": "of things and we can you can easily take uh gigabyte per day per core on an",
    "start": "1835279",
    "end": "1842679"
  },
  {
    "text": "inest note um so that's that's an easy side you can comfortably do that kind of",
    "start": "1842679",
    "end": "1849080"
  },
  {
    "text": "thing and still um do queries on the system Etc this this won't load the system in",
    "start": "1849080",
    "end": "1856559"
  },
  {
    "text": "in any significant if ific way so data that comes in is um this in the indes pipeline is",
    "start": "1856559",
    "end": "1864919"
  },
  {
    "text": "we have you have possibility to set up a a CFA which um takes the data before we",
    "start": "1864919",
    "end": "1872240"
  },
  {
    "text": "put it into the engine itself once it's in the engine we also we can back it up",
    "start": "1872240",
    "end": "1877679"
  },
  {
    "text": "store it in a block store a separate file system or S3 um and then whenever",
    "start": "1877679",
    "end": "1883639"
  },
  {
    "text": "it's all the way through this system we act it uh through the queuing system so that means humu itself is not in the",
    "start": "1883639",
    "end": "1890480"
  },
  {
    "text": "business of this keeping three copies of the data that's actually pushed off to",
    "start": "1890480",
    "end": "1897440"
  },
  {
    "text": "the outside infrastructure of hum of the humu core um so if something is a Miss",
    "start": "1897440",
    "end": "1903840"
  },
  {
    "text": "we can always get a copy from The Block store which supposedly has three copies or if it didn't get there yet it is in",
    "start": "1903840",
    "end": "1910000"
  },
  {
    "text": "three copies in the queuing system on its way into humu so that this is part one of the",
    "start": "1910000",
    "end": "1915240"
  },
  {
    "text": "things that that adds to making hum really simple and makes it um reasonable",
    "start": "1915240",
    "end": "1922120"
  },
  {
    "text": "that a three person team could build this in in 9 months um so the next thing we're",
    "start": "1922120",
    "end": "1928639"
  },
  {
    "text": "working on is um is being able to run queries across multiple",
    "start": "1928639",
    "end": "1934039"
  },
  {
    "text": "notes um so finding is spanning out uh queries uh across multiple notes right",
    "start": "1934039",
    "end": "1939720"
  },
  {
    "text": "now the product that we that we come out with today is just a single note but as you can imagine uh it's Rel",
    "start": "1939720",
    "end": "1947080"
  },
  {
    "text": "atively simple to to scale this of course there's some uh things but given that we don't have um State across these",
    "start": "1947080",
    "end": "1954559"
  },
  {
    "text": "it's it's not that complicated so the product today is um a single note uh we",
    "start": "1954559",
    "end": "1960960"
  },
  {
    "text": "deliver it online or hosted as a Docker container uh you can download it running on prise and we have a demo system as I",
    "start": "1960960",
    "end": "1968799"
  },
  {
    "text": "showed you at at hum.com so um before we close um this is like almost the we'll",
    "start": "1968799",
    "end": "1977519"
  },
  {
    "text": "we'll switch back to this slide um let me show you just um the",
    "start": "1977519",
    "end": "1983760"
  },
  {
    "text": "website if you want to go play with",
    "start": "1983760",
    "end": "1987760"
  },
  {
    "text": "it so there's this nice website we we've you know brought X eyes back to life",
    "start": "1991080",
    "end": "1997360"
  },
  {
    "text": "with our owl on there there is uh yeah I can I can easily spend five minutes",
    "start": "1997360",
    "end": "2005960"
  },
  {
    "text": "just we have there's full online documentation of HTTP the HTTP API how",
    "start": "2005960",
    "end": "2014360"
  },
  {
    "text": "to define your own extractors parsers uh",
    "start": "2014360",
    "end": "2019399"
  },
  {
    "text": "the there's a nice little tutorial that explain everything around",
    "start": "2019399",
    "end": "2024440"
  },
  {
    "text": "here then there is um if we go let me one more time the live demo is actually",
    "start": "2024440",
    "end": "2030840"
  },
  {
    "text": "a full full system that just takes the GitHub activity stream where there's some pre baked",
    "start": "2030840",
    "end": "2037320"
  },
  {
    "text": "queries you can you can try out and and play with here there is for it could be",
    "start": "2037320",
    "end": "2042600"
  },
  {
    "text": "we want to take the this one where we compare Docker versus AKA and say give me a time chart",
    "start": "2042600",
    "end": "2051520"
  },
  {
    "text": "um of this and spans of four hours all right so this shows the",
    "start": "2051520",
    "end": "2056679"
  },
  {
    "text": "activity on doer versus",
    "start": "2056679",
    "end": "2061320"
  },
  {
    "text": "AKA so you can run these pre-book I mean there's and there's nothing here that",
    "start": "2061800",
    "end": "2067079"
  },
  {
    "text": "doesn't tell you that you couldn't write something else here could be it could be",
    "start": "2067079",
    "end": "2072919"
  },
  {
    "text": "earling OTP if you're if you're an Earline",
    "start": "2072919",
    "end": "2079079"
  },
  {
    "text": "guy see it's kind of low",
    "start": "2079079",
    "end": "2085320"
  },
  {
    "text": "anyway so yeah so so it's um this is really easy to just to just play with",
    "start": "2087359",
    "end": "2094679"
  },
  {
    "text": "the the the query I showed you the watch event Group by repo",
    "start": "2094679",
    "end": "2100720"
  },
  {
    "text": "name these are the the most watched the the or the ones with the most",
    "start": "2100720",
    "end": "2107040"
  },
  {
    "text": "um stars on GitHub well see here now last hour these",
    "start": "2107040",
    "end": "2112720"
  },
  {
    "text": "ml algorithms one over the palen here since we started right so it's easy to go in and look us",
    "start": "2112720",
    "end": "2119960"
  },
  {
    "text": "to just go type in your own repository names here uh I'm sure there's not not",
    "start": "2119960",
    "end": "2126320"
  },
  {
    "text": "that much happen happening nothing really happened at Tri for the last hours in terms of watch events at",
    "start": "2126320",
    "end": "2131560"
  },
  {
    "text": "least so okay I think we'll take uh we'll go",
    "start": "2131560",
    "end": "2138079"
  },
  {
    "text": "back to just questions from here yes if there are some questions",
    "start": "2138079",
    "end": "2143160"
  },
  {
    "text": "that have come in I don't know first thank you for talk you're",
    "start": "2143160",
    "end": "2147800"
  },
  {
    "text": "welcome every goddamn time every time um we did get some question I'll try to",
    "start": "2153640",
    "end": "2159800"
  },
  {
    "text": "do some aggregation of the questions because some are sort of overlapping there's a question about the technology",
    "start": "2159800",
    "end": "2165960"
  },
  {
    "text": "stack and in the meantime you talked about Scala and Kafka but it priz it looks a bit like kibana so probably the",
    "start": "2165960",
    "end": "2171800"
  },
  {
    "text": "technology from the web front end will be the question what that is oh the web",
    "start": "2171800",
    "end": "2176839"
  },
  {
    "text": "front end well that's written in Elm so it's all pretty much all Scala and",
    "start": "2176839",
    "end": "2183200"
  },
  {
    "text": "Elm um so that's um that's actually we've been very happy",
    "start": "2183200",
    "end": "2189440"
  },
  {
    "text": "with using Elm it's uh I think we have like 45,000 lines of elm for this uh so",
    "start": "2189440",
    "end": "2195880"
  },
  {
    "text": "it's a quite significant Elm project that um it goes well hand inand with the the Scala stuff",
    "start": "2195880",
    "end": "2202560"
  },
  {
    "text": "yes oh that's Mar the first production El systems I hear about which is pretty cool um next question uh do you consider",
    "start": "2202560",
    "end": "2209920"
  },
  {
    "text": "making it open source well anyone is welcome to just buy it and make it open source I'd say I",
    "start": "2209920",
    "end": "2216319"
  },
  {
    "text": "mean that's that's definitely an option um but yes we we of course we've we've",
    "start": "2216319",
    "end": "2222640"
  },
  {
    "text": "uh we've had lots of thoughts on the business model of this um and we've seen",
    "start": "2222640",
    "end": "2228079"
  },
  {
    "text": "many of our friends you know struggle making money off open source uh the last",
    "start": "2228079",
    "end": "2234040"
  },
  {
    "text": "uh several years the last 10 years um and so so we decided we're going to try",
    "start": "2234040",
    "end": "2240480"
  },
  {
    "text": "with um with a close Source model here I mean of course there'll be open source components coming up to the side and",
    "start": "2240480",
    "end": "2246720"
  },
  {
    "text": "open source you know the adapters and various things that are surrounding it we're already starting to see some some",
    "start": "2246720",
    "end": "2253800"
  },
  {
    "text": "open source libraries that push data in from mobile phones and various places um",
    "start": "2253800",
    "end": "2259599"
  },
  {
    "text": "so it's the beginnings of um of of some of community like that is already",
    "start": "2259599",
    "end": "2264680"
  },
  {
    "text": "starting to um to show up um but uh this it's not going to be open",
    "start": "2264680",
    "end": "2271960"
  },
  {
    "text": "source anytime soon unfortunately um what is the search",
    "start": "2271960",
    "end": "2277240"
  },
  {
    "text": "engine behind humo well the search engine behind humo is humo that's the engine itself I mean",
    "start": "2277240",
    "end": "2284720"
  },
  {
    "text": "we wrote that from from scratch um so it's all",
    "start": "2284720",
    "end": "2292520"
  },
  {
    "text": "um well I have a lot of background in also I've been working on riak uh on the",
    "start": "2293319",
    "end": "2298960"
  },
  {
    "text": "riak uh key value store I actually in several rounds spent six months on the",
    "start": "2298960",
    "end": "2306240"
  },
  {
    "text": "on the core uh storage of that I've written key value stories before that um",
    "start": "2306240",
    "end": "2313200"
  },
  {
    "text": "so we have several people in the team who has experience experience in this and this is very different in that it's",
    "start": "2313200",
    "end": "2319359"
  },
  {
    "text": "not really it's not really a database as such it's a it's is it's an orchestration of of this um Brute Force",
    "start": "2319359",
    "end": "2328160"
  },
  {
    "text": "um um processing of blocks that you know",
    "start": "2328160",
    "end": "2333240"
  },
  {
    "text": "the combination of having really relatively fast brute force and then",
    "start": "2333240",
    "end": "2338920"
  },
  {
    "text": "having these standing queries that can answer instantaneously uh we find that's a good",
    "start": "2338920",
    "end": "2344119"
  },
  {
    "text": "balance um of course we have some really large we we're playing around with some",
    "start": "2344119",
    "end": "2349240"
  },
  {
    "text": "really large scale customers um where you know going over a month of data is",
    "start": "2349240",
    "end": "2354760"
  },
  {
    "text": "something that takes 10 minutes um and that's of course sometimes an issue",
    "start": "2354760",
    "end": "2360880"
  },
  {
    "text": "um but um the ability to take a massive amount of ingest is Al so a huge plus um",
    "start": "2360880",
    "end": "2368200"
  },
  {
    "text": "in many situations yeah I think you already answered part",
    "start": "2368200",
    "end": "2374520"
  },
  {
    "text": "of that but um still here we go um why ass you better than other open source",
    "start": "2374520",
    "end": "2380160"
  },
  {
    "text": "Solutions like for instance the ALK St so what's the major advantage I guess well they I mean elk is good for",
    "start": "2380160",
    "end": "2387240"
  },
  {
    "text": "some things and I think we're good for some other things um so so with with",
    "start": "2387240",
    "end": "2393000"
  },
  {
    "text": "humo we don't spend so much CPU when the data com comes in on the other hand we",
    "start": "2393000",
    "end": "2398800"
  },
  {
    "text": "assume when you run a query we use all the CPU there is on on on the machines that run hum so we",
    "start": "2398800",
    "end": "2406960"
  },
  {
    "text": "kind of shift the CPU usage to query time and that means um that means it",
    "start": "2406960",
    "end": "2414079"
  },
  {
    "text": "doesn't work well if you have you don't want this to be to be exposed to a",
    "start": "2414079",
    "end": "2419520"
  },
  {
    "text": "million customers for instance um it's really nice for something where",
    "start": "2419520",
    "end": "2427040"
  },
  {
    "text": "you use it for devops for monitoring where there's 10 users or 15 users that use it for querying",
    "start": "2427040",
    "end": "2434200"
  },
  {
    "text": "um the upside then is you can run a much less Hardware but so that's a",
    "start": "2434200",
    "end": "2439960"
  },
  {
    "text": "trade-off um elastic is very good at finding you",
    "start": "2439960",
    "end": "2445800"
  },
  {
    "text": "know the needle in Hast stack if you know something specific you're looking for it has those indexes and that's",
    "start": "2445800",
    "end": "2450880"
  },
  {
    "text": "going to beat us every time right but in many cases you like we found",
    "start": "2450880",
    "end": "2458000"
  },
  {
    "text": "um actually the way that um most of our",
    "start": "2458000",
    "end": "2463240"
  },
  {
    "text": "experience in production systems have been in um running based on um on Splunk and",
    "start": "2463240",
    "end": "2471319"
  },
  {
    "text": "Splunk Works more like this where you just scan over time and have this flexibility of running wrex's and you",
    "start": "2471319",
    "end": "2478079"
  },
  {
    "text": "have much more flexibility and interactivity it's easy to formulate the queries in in human readable language uh",
    "start": "2478079",
    "end": "2486760"
  },
  {
    "text": "so that's more what we try to do something in that end and of course make it faster but",
    "start": "2486760",
    "end": "2492760"
  },
  {
    "text": "yeah so there is we we're different it's a it's in a different uh point in the",
    "start": "2492760",
    "end": "2498079"
  },
  {
    "text": "set of trade-offs and I'm sure every product has its hot spots where it's very very good um I think this has the",
    "start": "2498079",
    "end": "2505760"
  },
  {
    "text": "Hotpot which is would we would like to use I think that's based on our",
    "start": "2505760",
    "end": "2511440"
  },
  {
    "text": "experience still got a couple of more questions to go um why is a pachy spark and Apachi um Flink not the best fit for",
    "start": "2511440",
    "end": "2519040"
  },
  {
    "text": "the processing part inside",
    "start": "2519040",
    "end": "2522240"
  },
  {
    "text": "humo um because with those Technologies you",
    "start": "2524480",
    "end": "2531800"
  },
  {
    "text": "end up having to reefi your data you end up accessing your data out of main",
    "start": "2531800",
    "end": "2537440"
  },
  {
    "text": "memory if you want to to control at this level that you're accessing data",
    "start": "2537440",
    "end": "2544640"
  },
  {
    "text": "um and it's very controlled way uh and and keep it on the CPU",
    "start": "2544640",
    "end": "2550559"
  },
  {
    "text": "caches um you don't but what ends up happening in in hum is you can memory",
    "start": "2550559",
    "end": "2556760"
  },
  {
    "text": "map data in and you take a small chunk of that decompress it onto level two cast and it's",
    "start": "2556760",
    "end": "2562119"
  },
  {
    "text": "just it's just so in a way that makes it",
    "start": "2562119",
    "end": "2568280"
  },
  {
    "text": "um order of magnitude faster than having to allocate uh objects all the way we",
    "start": "2568280",
    "end": "2574200"
  },
  {
    "text": "don't even allocate an object for each login entry um so it's a memory mapped underlying structure and we have an a",
    "start": "2574200",
    "end": "2581240"
  },
  {
    "text": "shared object that you run over and over again just points to an offset um and we",
    "start": "2581240",
    "end": "2586880"
  },
  {
    "text": "have our own string matching implementations um that don't allocate memory in themselves and there's just",
    "start": "2586880",
    "end": "2593680"
  },
  {
    "text": "this total careful uh so I'm I'm I'm certain we can run an order of magnitude",
    "start": "2593680",
    "end": "2599240"
  },
  {
    "text": "faster at least um and these systems that are you know somewhat similar in",
    "start": "2599240",
    "end": "2604920"
  },
  {
    "text": "that they map ruc systems um but they end up reifying and creating objects for",
    "start": "2604920",
    "end": "2611200"
  },
  {
    "text": "many of these uh values as they flow through the system um so the downside is",
    "start": "2611200",
    "end": "2616520"
  },
  {
    "text": "here of course that you can only do the things that are each of these optimized operators like uh filtering and group by",
    "start": "2616520",
    "end": "2624480"
  },
  {
    "text": "Etc do uh because they're optimized to to uh to run in this particular way and",
    "start": "2624480",
    "end": "2630920"
  },
  {
    "text": "allocate as little as possible um yeah",
    "start": "2630920",
    "end": "2637040"
  },
  {
    "text": "and how does it work with petabytes of locks",
    "start": "2637040",
    "end": "2644160"
  },
  {
    "text": "slowly so um now what um so we were working with one",
    "start": "2645119",
    "end": "2652119"
  },
  {
    "text": "particular customer which I mean we we have a couple of obviously the interesting aspect here is how moving",
    "start": "2652119",
    "end": "2658160"
  },
  {
    "text": "this into the really large systems because if you can instead of bloating your data by building indexes you can",
    "start": "2658160",
    "end": "2664599"
  },
  {
    "text": "shrink your data by compressing it on the way in then you can get several maybe several orders of magnitudes of",
    "start": "2664599",
    "end": "2670400"
  },
  {
    "text": "savings on just Diss and and computers that need to manage um large amounts of",
    "start": "2670400",
    "end": "2676119"
  },
  {
    "text": "data so so the bigger the data set we can push on humu onto the more interesting it is and the more bigger an",
    "start": "2676119",
    "end": "2683160"
  },
  {
    "text": "effect and value we can create so we do have two large customers um",
    "start": "2683160",
    "end": "2688400"
  },
  {
    "text": "International large businesses in Denmark where we have really large data sets and we're working with them in",
    "start": "2688400",
    "end": "2693720"
  },
  {
    "text": "various ways uh so hopefully you know next year at go to uh Berlin we can I",
    "start": "2693720",
    "end": "2700160"
  },
  {
    "text": "can I can tell you more about those um but basically it amounts to you know",
    "start": "2700160",
    "end": "2707040"
  },
  {
    "text": "um doing some amount of scaling out um for the processing and",
    "start": "2707040",
    "end": "2714720"
  },
  {
    "text": "also being able to Shard the data in various intelligent ways so uh that can",
    "start": "2714720",
    "end": "2720400"
  },
  {
    "text": "speed up the queries yeah okay we're almost running out of time so one last small question how can",
    "start": "2720400",
    "end": "2727599"
  },
  {
    "text": "I use this at my company is it already available I think the answer is yes it is it is yes so U there were a couple of",
    "start": "2727599",
    "end": "2734920"
  },
  {
    "text": "other questions but um can't tell them now because now the uh reception starts outside we're over the time um but I",
    "start": "2734920",
    "end": "2741960"
  },
  {
    "text": "think uh he'll be around the whole team will be around at a stand so you can talk to them so just just go outright",
    "start": "2741960",
    "end": "2748400"
  },
  {
    "text": "and then continue the conversation so thank you very much thank",
    "start": "2748400",
    "end": "2753410"
  },
  {
    "text": "[Applause] you",
    "start": "2753410",
    "end": "2757880"
  }
]