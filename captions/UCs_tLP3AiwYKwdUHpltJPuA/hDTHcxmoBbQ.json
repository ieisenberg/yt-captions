[
  {
    "start": "0",
    "end": "352000"
  },
  {
    "text": "I'm sure you can all relate to this image in some way can't you imagine it's the middle of the night you're fast",
    "start": "12160",
    "end": "17920"
  },
  {
    "text": "asleep in bed suddenly your pager goes off and some of you probably have a",
    "start": "17920",
    "end": "23720"
  },
  {
    "text": "really deep emotional response to this don't you maybe for some of you it's anger why is my ped going off at this",
    "start": "23720",
    "end": "29599"
  },
  {
    "text": "time in the morning why is the system chosen to broke now maybe for some of you it's excitement because now it's",
    "start": "29599",
    "end": "36840"
  },
  {
    "text": "your chance to go and be a hero yeah I'm sure it's anger for most of you isn't",
    "start": "36840",
    "end": "42280"
  },
  {
    "text": "it now whatever system you're working with however you're choosing to build",
    "start": "42280",
    "end": "48280"
  },
  {
    "text": "your system I'm sure you've all been there when you receive a page you get up you go and sit in front of your laptop",
    "start": "48280",
    "end": "54359"
  },
  {
    "text": "and you can't for the life of your work out what it is that has caused your system to break who's been there where",
    "start": "54359",
    "end": "60840"
  },
  {
    "text": "you've been command effing through a big wall of log files trying to work out exactly y quite a few hands you've all",
    "start": "60840",
    "end": "66920"
  },
  {
    "text": "been there you can all relate this is difficult right it's a difficult thing to do this got even more difficult when",
    "start": "66920",
    "end": "73280"
  },
  {
    "text": "we all started building distributed systems now instead of looking at this log file on a single machine you've got",
    "start": "73280",
    "end": "79360"
  },
  {
    "text": "lots of log files across lots of different servers across an entire cloud provider maybe you don't even have",
    "start": "79360",
    "end": "84479"
  },
  {
    "text": "servers at all maybe you've just got managed services that are just emitting logs emitting Trac",
    "start": "84479",
    "end": "91720"
  },
  {
    "text": "this got even more difficult when you decided you wanted to build an event driven system maybe you read some articles online you came to conference",
    "start": "91720",
    "end": "98439"
  },
  {
    "text": "talks like this one and you thought yeah event Ren architecture that must be the only way to build scalable and resilient",
    "start": "98439",
    "end": "104520"
  },
  {
    "text": "systems in the cloud so off you went you built your event system you prioritized asynchronous communication and now you",
    "start": "104520",
    "end": "110479"
  },
  {
    "text": "sat there at 3:00 in the morning wondering what happened to my system why is it not working and that's what I want",
    "start": "110479",
    "end": "117439"
  },
  {
    "text": "to help you with in this talk I'm going to talk to you about what it is that makes observability so difficult in asynchronous systems and then give you",
    "start": "117439",
    "end": "124439"
  },
  {
    "text": "some practical things that you can take away and use in your systems I'm James East I'm a servess",
    "start": "124439",
    "end": "132239"
  },
  {
    "text": "developer Advocate at data dog but don't worry this is not a talk about data dog this is not a talk about a specific",
    "start": "132239",
    "end": "138680"
  },
  {
    "text": "technology a specific SAS provider this is a talk about observability and if any of you have",
    "start": "138680",
    "end": "145040"
  },
  {
    "text": "heard me talk before you'll know that there's one thing I love talking about almost as much as event of an",
    "start": "145040",
    "end": "150840"
  },
  {
    "text": "architecture that is of course Pizza who here loves pizza by the way quick show",
    "start": "150840",
    "end": "156280"
  },
  {
    "text": "hands okay those be your hands down really come on so for the rest of this",
    "start": "156280",
    "end": "162000"
  },
  {
    "text": "talk you're all going to be Developers for a completely fictional pizza delivery company called plant-based",
    "start": "162000",
    "end": "167040"
  },
  {
    "text": "pizza maybe it's the middle of the afternoon on a weekend there's a big sporting event on lots of people are",
    "start": "167040",
    "end": "172280"
  },
  {
    "text": "trying to order pizzas and for some reason the system's broken and now you need to go and fix it you need to go and observe it and let's just get into a bit",
    "start": "172280",
    "end": "179280"
  },
  {
    "text": "of History of the plant-based Pizza system and how the system actually works Once Upon a Time life was an awful lot",
    "start": "179280",
    "end": "185280"
  },
  {
    "text": "simpler you had this single running process a single database your system was reasonably easy to rationalize about",
    "start": "185280",
    "end": "192519"
  },
  {
    "text": "two moving Parts a server a database that's and simple but then you started",
    "start": "192519",
    "end": "197920"
  },
  {
    "text": "to grow you started to scale I mean why wouldn't you scale with pieces look like that right they look incredible so you",
    "start": "197920",
    "end": "204280"
  },
  {
    "text": "started to move to microservices you started to build more distributed systems all communicating synchronously",
    "start": "204280",
    "end": "210439"
  },
  {
    "text": "HTTP apis everywhere and this was okay for a while and then you started to hit",
    "start": "210439",
    "end": "216599"
  },
  {
    "text": "issues you started to H hit issues with the rate of change you couldn't develop features fast enough and that's because",
    "start": "216599",
    "end": "223040"
  },
  {
    "text": "of how tightly coupled your system was and of course coupling isn't",
    "start": "223040",
    "end": "228720"
  },
  {
    "text": "necessarily a bad thing if you buil a completely decoupled system it will be",
    "start": "228720",
    "end": "234159"
  },
  {
    "text": "really hard to get any meaningful work done Event Systems aren't decoupled systems they're simply loely coupled",
    "start": "234159",
    "end": "240959"
  },
  {
    "text": "systems and this points towards one of the really core ideas in any modern software architecture that you should",
    "start": "240959",
    "end": "247280"
  },
  {
    "text": "aim for high cohesion and low coupling now cohesion is one you've already kind",
    "start": "247280",
    "end": "253319"
  },
  {
    "text": "of solved the things that need to change together should live together microservices kind of gives you got",
    "start": "253319",
    "end": "259040"
  },
  {
    "text": "you've got these small independently Deployable units of of code coupling",
    "start": "259040",
    "end": "264600"
  },
  {
    "text": "however couplings a lot more nuanced there's lots of different types of coupling and you want to try and reduce",
    "start": "264600",
    "end": "270000"
  },
  {
    "text": "this coupling as much as possible so that's LED you to where you are today with your pizza restaurant you've built",
    "start": "270000",
    "end": "276880"
  },
  {
    "text": "event of a microservices all your interservice communication happens with events and at a very high level you've",
    "start": "276880",
    "end": "283080"
  },
  {
    "text": "got five different Services before we get into the observability of it let's just have a",
    "start": "283080",
    "end": "288280"
  },
  {
    "text": "look at how this system actually works so someone comes to try and order a pizza they're going to hit a create order request which is going to hit the",
    "start": "288280",
    "end": "294600"
  },
  {
    "text": "order processing service the order service is going to go off and do some validation maybe take some pay payments",
    "start": "294600",
    "end": "300039"
  },
  {
    "text": "whatever that might do and then it's going to publish an order confirmed event the order confirmed event is going",
    "start": "300039",
    "end": "305759"
  },
  {
    "text": "to be consumed by the kitchen service which is going to go off and actually prepare the pizza that's going to",
    "start": "305759",
    "end": "310840"
  },
  {
    "text": "publish an order prepared event which is then going to be consumed by the delivery service the delivery service goes off and obviously delivers the",
    "start": "310840",
    "end": "317039"
  },
  {
    "text": "order throughout all of that the order service is also responding to these events to then be able to update the",
    "start": "317039",
    "end": "324160"
  },
  {
    "text": "status of the order so that when you're sat there furiously refreshing your app you understand what the status of the",
    "start": "324160",
    "end": "329759"
  },
  {
    "text": "order is so that's the high level of the system that you want to observe that you want to work through now before we get",
    "start": "329759",
    "end": "335680"
  },
  {
    "text": "into the actual observability stuff I think language is such an important",
    "start": "335680",
    "end": "340919"
  },
  {
    "text": "thing in human life in general really the words we use the terms we use are really really important even more so",
    "start": "340919",
    "end": "347639"
  },
  {
    "text": "when building something as complex as distributed systems so let's just agree on some",
    "start": "347639",
    "end": "352960"
  },
  {
    "start": "352000",
    "end": "410000"
  },
  {
    "text": "terminology what exactly is an event if we're building an event driv system this",
    "start": "352960",
    "end": "358360"
  },
  {
    "text": "kind of makes sense to understand right right an event is an immutable fact it's something that has happened in the past",
    "start": "358360",
    "end": "365120"
  },
  {
    "text": "it is something that cannot be changed imagine it's the middle of the night you're in your house you need to",
    "start": "365120",
    "end": "371400"
  },
  {
    "text": "get up and you need to do something maybe you want to go and get a snack maybe you need to go to the bathroom whatever that might be you get up in",
    "start": "371400",
    "end": "377800"
  },
  {
    "text": "your house you're going to move in your house and you're going to hit a light switch that's going to raise a light",
    "start": "377800",
    "end": "383360"
  },
  {
    "text": "switched on event it is irrefutable that the light has been switched on you",
    "start": "383360",
    "end": "389080"
  },
  {
    "text": "cannot unswitched on a light the light is now on once you finish doing the things that",
    "start": "389080",
    "end": "395319"
  },
  {
    "text": "you're doing in the room you're going to hit that light switch again that's going to raise a light Switched Off event the",
    "start": "395319",
    "end": "400960"
  },
  {
    "text": "light Switched Off the Light switched off these things happened it is irrefutable they cannot be",
    "start": "400960",
    "end": "407400"
  },
  {
    "text": "changed so if that's an event what does it mean to be event driven and I think",
    "start": "407400",
    "end": "413199"
  },
  {
    "start": "410000",
    "end": "469000"
  },
  {
    "text": "this sometimes gets confused a little bit with what I'd call an event based system so event driven system and event",
    "start": "413199",
    "end": "420080"
  },
  {
    "text": "based systems both trigger functionality using events the difference with an event-driven system is that an",
    "start": "420080",
    "end": "426280"
  },
  {
    "text": "event-driven system triggers business functionality with business events events are not a new thing in software",
    "start": "426280",
    "end": "432840"
  },
  {
    "text": "development I started out my career building windows fors applications in net in a Windows forms application you",
    "start": "432840",
    "end": "439240"
  },
  {
    "text": "can do things when a button is clicked when a mouse is hovered when the window gets",
    "start": "439240",
    "end": "444560"
  },
  {
    "text": "resized even in more modern ways of building software if I upload a file to an S3 bucket",
    "start": "444560",
    "end": "450039"
  },
  {
    "text": "that's going to raise an S3 object created event these are technical events these",
    "start": "450039",
    "end": "456759"
  },
  {
    "text": "are not business events business events are things like order placed Pizza boxed",
    "start": "456759",
    "end": "461919"
  },
  {
    "text": "order delivered you could look at two different businesses in the exact same domain and they would probably have a",
    "start": "461919",
    "end": "468360"
  },
  {
    "text": "different set of business events they probably all clicking",
    "start": "468360",
    "end": "473560"
  },
  {
    "start": "469000",
    "end": "526000"
  },
  {
    "text": "buttons uploading files hovering mouses nice and often you you hear about event",
    "start": "473560",
    "end": "480039"
  },
  {
    "text": "driven systems you might also hear about message driven systems are you doing events or are you doing messages and",
    "start": "480039",
    "end": "486080"
  },
  {
    "text": "what is the difference between the two well actually events are just a type of",
    "start": "486080",
    "end": "492800"
  },
  {
    "text": "message and there's three different types of messages you will often see commands events and queries Now commands",
    "start": "492800",
    "end": "500840"
  },
  {
    "text": "and events are very similar the difference is mostly just a statement of intent am I telling a system to do",
    "start": "500840",
    "end": "507360"
  },
  {
    "text": "something or am I reacting something that has happened in a",
    "start": "507360",
    "end": "512399"
  },
  {
    "text": "system and then of course queries queries are me just asking for a piece of data I want to get this specific",
    "start": "512399",
    "end": "518360"
  },
  {
    "text": "piece of information from a system so event driven systems are message driven systems and then inside",
    "start": "518360",
    "end": "525680"
  },
  {
    "text": "events you have lots of different types of events two of the most common types of",
    "start": "525680",
    "end": "532959"
  },
  {
    "start": "526000",
    "end": "691000"
  },
  {
    "text": "events that you will see are notification events thinner events these are really lightweight really Slim",
    "start": "532959",
    "end": "539160"
  },
  {
    "text": "pieces P of data Maybe it's an order confirmed event and it only has an order ID nice and slim just a",
    "start": "539160",
    "end": "545680"
  },
  {
    "text": "notification and then you've got event carried State transfer are thicker",
    "start": "545680",
    "end": "550920"
  },
  {
    "text": "events now event carried State transfer is where you carry the entire state of the entity as part of the event",
    "start": "550920",
    "end": "558360"
  },
  {
    "text": "typically a lot more data in event carried State transfer and these events always pass around typically with these",
    "start": "558360",
    "end": "563760"
  },
  {
    "text": "three highlevel components you've got producers you've got consumers and you've got some kind of message channel",
    "start": "563760",
    "end": "569160"
  },
  {
    "text": "in the middle here this is labeled as an event bus this could equally be a que a topic a stream there's just some kind of",
    "start": "569160",
    "end": "576800"
  },
  {
    "text": "message transport in the Middle producers and consumers have no",
    "start": "576800",
    "end": "582079"
  },
  {
    "text": "direct communication with each other all of the communication is asynchronous all of the communication is through some",
    "start": "582079",
    "end": "587760"
  },
  {
    "text": "kind of message channel the primary integration pattern at work here is the publish subscribe",
    "start": "587760",
    "end": "595600"
  },
  {
    "text": "integration pattern produces publish events and N number of consumers can subscribe to these events and you have",
    "start": "595600",
    "end": "603079"
  },
  {
    "text": "very different responsibilities as a producer or a consumer as a producer your main",
    "start": "603079",
    "end": "610040"
  },
  {
    "text": "responsibility is to stick to the schema that you agreed on stick to the structure of the event try to avoid",
    "start": "610040",
    "end": "616560"
  },
  {
    "text": "making breaking changes try to ensure that you have backwards compatibility at all times but there's some really",
    "start": "616560",
    "end": "622600"
  },
  {
    "text": "interesting things that you're no longer responsible for you're no longer",
    "start": "622600",
    "end": "627640"
  },
  {
    "text": "responsible for how people use your your events you publish an event consumers might use it they might",
    "start": "627640",
    "end": "633760"
  },
  {
    "text": "not when compared with synchronous systems though it gets really interesting because now you're no longer",
    "start": "633760",
    "end": "640079"
  },
  {
    "text": "concerned with the constraints of the system Downstream from you if you imagine you're Building A system that",
    "start": "640079",
    "end": "645560"
  },
  {
    "text": "makes synchronous API calls you need to care about where that service you're calling is you need to care about how",
    "start": "645560",
    "end": "652320"
  },
  {
    "text": "much throughput it can handle you need to C about its up time is it responding fast is it responding slow these are all",
    "start": "652320",
    "end": "658560"
  },
  {
    "text": "your respons posibilities as a developer of the system that you then need to call with an event driven system that's no",
    "start": "658560",
    "end": "664920"
  },
  {
    "text": "longer your responsibility that's the responsibility of the consumers it's the consumer's",
    "start": "664920",
    "end": "671399"
  },
  {
    "text": "responsibility to control and plan for the ingestion rate to control and plan for the events that they",
    "start": "671399",
    "end": "677600"
  },
  {
    "text": "receive the same way you would if you were building a synchronous API you would have some kind of rate limiter in place the same would apply for an event",
    "start": "677600",
    "end": "684079"
  },
  {
    "text": "Riven system you want to control the ingestion plan for ingestion plan for changes",
    "start": "684079",
    "end": "690360"
  },
  {
    "text": "so that level sets us on events an event of an architecture so what about observability",
    "start": "690360",
    "end": "696880"
  },
  {
    "start": "691000",
    "end": "828000"
  },
  {
    "text": "then this is become quite a lorded term a little bit in recent times observability what does it even mean and",
    "start": "696880",
    "end": "704560"
  },
  {
    "text": "almost any conversation ever about observability talks about the three pillars of observability which are logs",
    "start": "704560",
    "end": "711200"
  },
  {
    "text": "metrics and traces but I think this misses the bigger picture because logs metrics and",
    "start": "711200",
    "end": "718160"
  },
  {
    "text": "traces are the how you would implement observability the what of observability",
    "start": "718160",
    "end": "723480"
  },
  {
    "text": "but it misses the why why is observability so important why should you care about logs metrics and",
    "start": "723480",
    "end": "731360"
  },
  {
    "text": "traces an observable system should allow you to ask questions of your system you",
    "start": "731360",
    "end": "737760"
  },
  {
    "text": "didn't know you needed to ask from a place that is external to your",
    "start": "737760",
    "end": "744880"
  },
  {
    "text": "system quite a strange way of putting it isn't it asking questions you didn't know you needed to ask what does that even mean let's imagine a scenario",
    "start": "744880",
    "end": "752279"
  },
  {
    "text": "imagine your page has just gone off and there's an issue with your system and that issue for argument sake happens to",
    "start": "752279",
    "end": "757680"
  },
  {
    "text": "be that the database has gone offline in the audo service you get up you diagnose the",
    "start": "757680",
    "end": "763079"
  },
  {
    "text": "issue maybe you realize that the database has run out a dis space so you're going to fix the issue you're",
    "start": "763079",
    "end": "768199"
  },
  {
    "text": "going to increase the disk space whatever it might be and then you're going to put something in place to make sure that doesn't happen again maybe you",
    "start": "768199",
    "end": "775800"
  },
  {
    "text": "put a metric in place maybe you put an alert in place you're going to do something to monitor the dis space of your database so the same issue doesn't",
    "start": "775800",
    "end": "782720"
  },
  {
    "text": "happen again now once you do that the chances of that same issue happening again are",
    "start": "782720",
    "end": "789399"
  },
  {
    "text": "pretty unlikely because now you're monitoring for it now you're are alerting for it distributed systems though fail in",
    "start": "789399",
    "end": "797240"
  },
  {
    "text": "new and novel ways all the time with distributed systems you're dealing with unknown",
    "start": "797240",
    "end": "804440"
  },
  {
    "text": "unknowns you've got lots of different systems being developed by lots of different people with different slas",
    "start": "804440",
    "end": "809720"
  },
  {
    "text": "different release Cycles different priorities things are constantly changing there's no way you can predict",
    "start": "809720",
    "end": "815480"
  },
  {
    "text": "ahead of time exactly how a system is going to fail so this ability to ask questions of",
    "start": "815480",
    "end": "822720"
  },
  {
    "text": "your system helps negate some of these challenges these things get even more complex though when you start Building",
    "start": "822720",
    "end": "829360"
  },
  {
    "start": "828000",
    "end": "1036000"
  },
  {
    "text": "asynchronous Systems Event driv Systems not only are you now dealing with systems that are constantly",
    "start": "829360",
    "end": "835519"
  },
  {
    "text": "evolving and constantly changing they're also communicating completely asynchronously this is all a form of",
    "start": "835519",
    "end": "843079"
  },
  {
    "text": "complexity all software systems are complex it just depends what type of complexity you're dealing with essential",
    "start": "843079",
    "end": "850360"
  },
  {
    "text": "complexity is the complexity that complexity that's inherent to the business domain you're operating in you",
    "start": "850360",
    "end": "856560"
  },
  {
    "text": "can't get rid of essential complexity whether you're using monoliths or microservices or kubernetes or",
    "start": "856560",
    "end": "861720"
  },
  {
    "text": "serverless it doesn't matter essential complexity is always going to be there accidental complexity though accid",
    "start": "861720",
    "end": "869160"
  },
  {
    "text": "Dental complexity you have some control over this is the complexity that comes",
    "start": "869160",
    "end": "874480"
  },
  {
    "text": "from the decisions you choose to make monoliths microservices event Ren",
    "start": "874480",
    "end": "879680"
  },
  {
    "text": "architectures serverless all of these have their own types of complexity and if you think back to that simpler time",
    "start": "879680",
    "end": "885839"
  },
  {
    "text": "I'd argue this system has a lower accidental complexity than one that uses",
    "start": "885839",
    "end": "891600"
  },
  {
    "text": "microservices it's a lot more easy to reason about if something goes wrong I need to I know I need to look at the",
    "start": "891600",
    "end": "897399"
  },
  {
    "text": "application or the database this there's two moving",
    "start": "897399",
    "end": "902560"
  },
  {
    "text": "parts and of course this works up to a given point and then as you start to expand you start to add all of these",
    "start": "902560",
    "end": "907880"
  },
  {
    "text": "different components all of these different processes event from microservices might",
    "start": "907880",
    "end": "913000"
  },
  {
    "text": "simplify things like deployability allowing teams to work and operate",
    "start": "913000",
    "end": "918240"
  },
  {
    "text": "independently but it does make things like observability more complex you've got a lot more moving parts you've got a",
    "start": "918240",
    "end": "925480"
  },
  {
    "text": "lot more things you need to reason about and understand to understand your system works as a whole cause and effect is",
    "start": "925480",
    "end": "933959"
  },
  {
    "text": "incredibly difficult in an asynchronous system if you think about a synchronous",
    "start": "933959",
    "end": "940600"
  },
  {
    "text": "system you got the kitchen the order service making a call to the kitchen service it's reasonably easy to reason",
    "start": "940600",
    "end": "945759"
  },
  {
    "text": "that the order service is having an effect on the kitchen service as a developer of the order service you know",
    "start": "945759",
    "end": "951000"
  },
  {
    "text": "the DNS name of the kitchen service you're going to make a call to that service and you're going to get",
    "start": "951000",
    "end": "956440"
  },
  {
    "text": "something back it might be an error code it might be a success code it might just completely time out you could even",
    "start": "956440",
    "end": "962600"
  },
  {
    "text": "follow the bites across the network but you can understand that one system is having an effect on the other system",
    "start": "962600",
    "end": "969079"
  },
  {
    "text": "whereas if you compare that to an asynchronous system it is really difficult to understand when you publish",
    "start": "969079",
    "end": "975000"
  },
  {
    "text": "an event who is using that event what effect is you publishing that event having on the rest of the system and",
    "start": "975000",
    "end": "981440"
  },
  {
    "text": "equally if you are consuming events how do you understand exactly what's happening Upstream of you",
    "start": "981440",
    "end": "989759"
  },
  {
    "text": "so the most important part of observability in invent system is distributed",
    "start": "989759",
    "end": "996079"
  },
  {
    "text": "tracing the most important of the three pillars and to settle on some",
    "start": "996079",
    "end": "1001160"
  },
  {
    "text": "terminology this top level thing you're seeing here is a trace a trace is the endtoend floor of a request inside a",
    "start": "1001160",
    "end": "1008680"
  },
  {
    "text": "trace you will typically have lots and lots of different spans and these spans can span multiple",
    "start": "1008680",
    "end": "1016680"
  },
  {
    "text": "different backend systems spans can also have attributes or",
    "start": "1016680",
    "end": "1022399"
  },
  {
    "text": "tags and this is what will add context to your system this is what will give you that ability to ask questions of",
    "start": "1022399",
    "end": "1029880"
  },
  {
    "text": "your system that you didn't know you needed to ask let's see this in action with one of",
    "start": "1029880",
    "end": "1035600"
  },
  {
    "text": "the commonly touted benefits of event R architecture evolvability if you build an event D system you're evolvable",
    "start": "1035600",
    "end": "1041558"
  },
  {
    "start": "1036000",
    "end": "1269000"
  },
  {
    "text": "aren't you you're evolutionary you can make change really easily over time and",
    "start": "1041559",
    "end": "1046880"
  },
  {
    "text": "let's think about this specific part of the architecture here you've got the order service publishing an order confirmed event and the kitchen service",
    "start": "1046880",
    "end": "1053520"
  },
  {
    "text": "is consuming that so the kitchen service is going to",
    "start": "1053520",
    "end": "1059760"
  },
  {
    "text": "consume that order confirmed event and then it's actually a notification event it's a thin event so",
    "start": "1059760",
    "end": "1066760"
  },
  {
    "text": "the kitchen service is going to say I don't know what to do with this order I don't what I need to cook I'm going to make a call back to the order processing",
    "start": "1066760",
    "end": "1073080"
  },
  {
    "text": "service to get more information about this order and then because you're evolvable",
    "start": "1073080",
    "end": "1079039"
  },
  {
    "text": "because you're building an event system well maybe another system pops up that's also consuming that order confirmed event that also needs to call back and",
    "start": "1079039",
    "end": "1085679"
  },
  {
    "text": "get more information and then three more services appear and then another one another one",
    "start": "1085679",
    "end": "1090840"
  },
  {
    "text": "another three and then before you know it your entire system is on fire because all these systems you didn't even know",
    "start": "1090840",
    "end": "1097080"
  },
  {
    "text": "existed have evolved and started making calls back to your system from that",
    "start": "1097080",
    "end": "1102120"
  },
  {
    "text": "simple thing of you just publishing your order confirmed event now you need to deal with all this Lord coming back a",
    "start": "1102120",
    "end": "1108960"
  },
  {
    "text": "core principle you'll often hear with Eda is that services are unaware of the downstream consumers of their events and",
    "start": "1108960",
    "end": "1116120"
  },
  {
    "text": "whilst this is technically true it can be a really dangerous statement because",
    "start": "1116120",
    "end": "1121360"
  },
  {
    "text": "although you're not aware with what they're doing with their events you should probably be a little bit interested in what effect that might",
    "start": "1121360",
    "end": "1127120"
  },
  {
    "text": "have on your system observability can give you that distributed tracing can give you that if",
    "start": "1127120",
    "end": "1133799"
  },
  {
    "text": "you have good distributed tracing in place you can go and have a look at that original API request that hits your API",
    "start": "1133799",
    "end": "1139799"
  },
  {
    "text": "that create order and then you can follow that Trace all the way through and you can see that another system has consumed your event",
    "start": "1139799",
    "end": "1147679"
  },
  {
    "text": "and then made a call back to your service you can now directly correlate",
    "start": "1147679",
    "end": "1152840"
  },
  {
    "text": "that event that you published back to a request that came back into your",
    "start": "1152840",
    "end": "1158880"
  },
  {
    "text": "system you understand the cause and effect you understand the effect of your",
    "start": "1158880",
    "end": "1164080"
  },
  {
    "text": "event being published so you look at this and you think well we've got a solution here",
    "start": "1164080",
    "end": "1170000"
  },
  {
    "text": "don't we we're publishing notification events today we're publishing thin events let's start publishing thicker",
    "start": "1170000",
    "end": "1175480"
  },
  {
    "text": "events let's start including more data in our events and as you expect you roll out",
    "start": "1175480",
    "end": "1182120"
  },
  {
    "text": "this new structure of event you roll out this new version of your event and suddenly the calls back to your system",
    "start": "1182120",
    "end": "1188840"
  },
  {
    "text": "stop they minimize because obviously teams no longer need to make the call back because they've got all the",
    "start": "1188840",
    "end": "1194440"
  },
  {
    "text": "information they need in this event fantastic celebrate we're done right we've evolved our system we've evolved",
    "start": "1194440",
    "end": "1200640"
  },
  {
    "text": "it using our observability data and we've made an informed decision about our system so now you're full a",
    "start": "1200640",
    "end": "1206720"
  },
  {
    "text": "confidence aren't you you've made a change to your system once you've evolved your event structure once and",
    "start": "1206720",
    "end": "1212000"
  },
  {
    "text": "now you have another change to make now you have another requirement you need to start supporting multiple",
    "start": "1212000",
    "end": "1217280"
  },
  {
    "text": "currencies so today you're publishing the order value just as a decimal as a number but you think W we've changed",
    "start": "1217280",
    "end": "1223799"
  },
  {
    "text": "this schema once let's just go and change it again let's instead of publishing the order value as a decimal",
    "start": "1223799",
    "end": "1230480"
  },
  {
    "text": "let's publish it as an object let's start including a value and a string who can see an issue with that change",
    "start": "1230480",
    "end": "1236960"
  },
  {
    "text": "potentially yeah because although you might think well it's just the kitchen that's cures about this order confirmed",
    "start": "1236960",
    "end": "1242840"
  },
  {
    "text": "event it's just the kitchen and the kitchen only cures about the items on the order they don't care about the",
    "start": "1242840",
    "end": "1248240"
  },
  {
    "text": "value but remember event driven systems are evolvable so an analytic service has",
    "start": "1248240",
    "end": "1253320"
  },
  {
    "text": "appeared that you didn't even know existed the analytic service really really cures about the order value",
    "start": "1253320",
    "end": "1259120"
  },
  {
    "text": "and now you've just broken A system that you didn't even know existed not particularly evolvable right",
    "start": "1259120",
    "end": "1265400"
  },
  {
    "text": "it's also not a very good way to make friends believe me so what can you do now how can you deal with this",
    "start": "1265400",
    "end": "1272840"
  },
  {
    "start": "1269000",
    "end": "1583000"
  },
  {
    "text": "now an observability is your friend again here and if there's one thing you take away from this talk this is it the",
    "start": "1272840",
    "end": "1279360"
  },
  {
    "text": "schema you use in your events can be your enemy but it can also be your",
    "start": "1279360",
    "end": "1284400"
  },
  {
    "text": "friend whatever you do adopt some kind of defined specification for your",
    "start": "1284400",
    "end": "1291039"
  },
  {
    "text": "events the cloud events specification is one such spec this is a spec for",
    "start": "1291039",
    "end": "1296840"
  },
  {
    "text": "defining what you should include in your events and there's a few different properties here the data property is the",
    "start": "1296840",
    "end": "1303600"
  },
  {
    "text": "actual payload of your event this is the actual contents of the event of course this is going to be different for the",
    "start": "1303600",
    "end": "1308720"
  },
  {
    "text": "different types of event in your system you've got the data content type this is",
    "start": "1308720",
    "end": "1314640"
  },
  {
    "text": "what type of data is inside that data property here it's j on it could be XML",
    "start": "1314640",
    "end": "1320039"
  },
  {
    "text": "it could be binary whatever that might be you've got the time this is the time",
    "start": "1320039",
    "end": "1325080"
  },
  {
    "text": "the event was published and the ID this is a uniquely generated identifier added",
    "start": "1325080",
    "end": "1330799"
  },
  {
    "text": "at the point of publish this will allow Downstream consumers to implement things like I importancy to understand have I",
    "start": "1330799",
    "end": "1336600"
  },
  {
    "text": "seen this event before yes I have I can safely ignore it and then really importantly for this",
    "start": "1336600",
    "end": "1342000"
  },
  {
    "text": "conversation around evolvability you've got the source and the type up at the",
    "start": "1342000",
    "end": "1347279"
  },
  {
    "text": "top this event came from the production order system and it is the order created",
    "start": "1347279",
    "end": "1353400"
  },
  {
    "text": "event and it's version one of that order created event really importantly you've got the version number in there and then",
    "start": "1353400",
    "end": "1359480"
  },
  {
    "text": "finally there's one fi I skipped over here which is the trace perent this is part of the cloud event specification to",
    "start": "1359480",
    "end": "1365480"
  },
  {
    "text": "actually include distributed tracing inside your events this is what gives",
    "start": "1365480",
    "end": "1370960"
  },
  {
    "text": "you the potential to be able to understand cause and effect here this is using a w3c trace context this could",
    "start": "1370960",
    "end": "1377760"
  },
  {
    "text": "equally just be a correlation ID just some common identifier you pass from",
    "start": "1377760",
    "end": "1383000"
  },
  {
    "text": "system to system to system but if you're adopting the cloud event specification anyway it kind of makes sense to adopt",
    "start": "1383000",
    "end": "1390400"
  },
  {
    "text": "some other standards so this really long complicated string is actually broken",
    "start": "1390400",
    "end": "1396279"
  },
  {
    "text": "down into four unique parts you've got the version at the start this is the version of the trace context there's",
    "start": "1396279",
    "end": "1402520"
  },
  {
    "text": "only one version at the minute so obviously it starts at zero you've got the actual Trace ID this",
    "start": "1402520",
    "end": "1408679"
  },
  {
    "text": "is the overarching trace ID that this event is part of and then you've got the specific span that was um active when",
    "start": "1408679",
    "end": "1416960"
  },
  {
    "text": "this event was published finally on the end you've got a set of flags this allows you to do",
    "start": "1416960",
    "end": "1422200"
  },
  {
    "text": "things like sampling you can indicate if this Trace was sampled at the parrent if it was sampled at the parrent then you",
    "start": "1422200",
    "end": "1428240"
  },
  {
    "text": "want to keep this Trace in the downstream system when you start to bring all of",
    "start": "1428240",
    "end": "1433600"
  },
  {
    "text": "this together you start to include this tracing information in your events this",
    "start": "1433600",
    "end": "1438840"
  },
  {
    "text": "is what gives you the ability to understand cause and effect because when this system publishes the event at this",
    "start": "1438840",
    "end": "1444080"
  },
  {
    "text": "point here as part of this span you're including all of that information which",
    "start": "1444080",
    "end": "1449320"
  },
  {
    "text": "allows the downstream systems to then understand what caused them to",
    "start": "1449320",
    "end": "1455159"
  },
  {
    "text": "run open Telemetry also publishes a set of conventions they call them the semantic conventions for messaging which",
    "start": "1455159",
    "end": "1462400"
  },
  {
    "text": "I'm going to shorten to best practices because that's a little bit of a mouthful this defines a set of tags that",
    "start": "1462400",
    "end": "1468960"
  },
  {
    "text": "all spans relating to messaging should include things like the operation name",
    "start": "1468960",
    "end": "1477559"
  },
  {
    "text": "am I sending a message am I receiving a message am I processing a",
    "start": "1477559",
    "end": "1482679"
  },
  {
    "text": "message the messaging system that you're using what is the transport layer is it sqs is it eventbridge is it Kafka is it",
    "start": "1482679",
    "end": "1489240"
  },
  {
    "text": "Kinesis and then finally the destination name what is the name of the thing I'm publishing to or consuming from this is",
    "start": "1489240",
    "end": "1496799"
  },
  {
    "text": "the name of the queue it could be the name of the top pick the name of the event bus and then i' I've added a couple of additional ones here that I",
    "start": "1496799",
    "end": "1503039"
  },
  {
    "text": "think I found are really really useful so to include in your tracing in the context of that specific trace the",
    "start": "1503039",
    "end": "1510279"
  },
  {
    "text": "version of the message that was published and the type of message that was",
    "start": "1510279",
    "end": "1516320"
  },
  {
    "text": "published this then gives you the ability to ask the questions of your system to understand who the downstream",
    "start": "1516320",
    "end": "1522880"
  },
  {
    "text": "dependencies are because now you can look at the situation you're in you can look at needing to change the schema of",
    "start": "1522880",
    "end": "1528600"
  },
  {
    "text": "your event and today you're publishing version one and when you need to make that breaking change you're going to start",
    "start": "1528600",
    "end": "1534799"
  },
  {
    "text": "publishing version two as well so now you're publishing both version one and version two of your",
    "start": "1534799",
    "end": "1540480"
  },
  {
    "text": "event and because you've got this context in your observability you can go and ask the questions of your",
    "start": "1540480",
    "end": "1546559"
  },
  {
    "text": "observability back end and actually understand who is dependent on this version of the event who is dependent on",
    "start": "1546559",
    "end": "1553320"
  },
  {
    "text": "version one of the event that then allows you to go and talk to other teams to go and",
    "start": "1553320",
    "end": "1558840"
  },
  {
    "text": "collaborate and understand when teams can switch over to version two eventually allowing you to depreciate",
    "start": "1558840",
    "end": "1565240"
  },
  {
    "text": "version one I realize I make that sound incredibly simple it can be more",
    "start": "1565240",
    "end": "1570919"
  },
  {
    "text": "complicated than that but having the data there in the first place allows you to ask these questions to get this",
    "start": "1570919",
    "end": "1576919"
  },
  {
    "text": "understanding of your system so another related point to observability is how you document your",
    "start": "1576919",
    "end": "1584320"
  },
  {
    "start": "1583000",
    "end": "1867000"
  },
  {
    "text": "Event Systems evolvability can cause you a lot of challenges how you develop your",
    "start": "1584320",
    "end": "1590559"
  },
  {
    "text": "system over time how you change the schemas of your event over time is",
    "start": "1590559",
    "end": "1595720"
  },
  {
    "text": "really quite important to be building a successful system who here is familiar with the idea of API first",
    "start": "1595720",
    "end": "1602159"
  },
  {
    "text": "design okay a few on okay if you're not familiar the idea of API first design is",
    "start": "1602159",
    "end": "1607360"
  },
  {
    "text": "that the first thing you do when you start building a system is design the API imagine you've got a front end team",
    "start": "1607360",
    "end": "1613000"
  },
  {
    "text": "and a backend team before you write a single line of code you're going to agree what the API eye contract is",
    "start": "1613000",
    "end": "1619080"
  },
  {
    "text": "between these two systems then when it comes to integrating them together in theory it should be nice and",
    "start": "1619080",
    "end": "1626960"
  },
  {
    "text": "simple and as Dave kind of alluded to in the keynote when you're building an event driven system your event events",
    "start": "1626960",
    "end": "1632720"
  },
  {
    "text": "are your API which means you should really practice event first",
    "start": "1632720",
    "end": "1639240"
  },
  {
    "text": "design the events you publish are the API of your system treat them with the",
    "start": "1639240",
    "end": "1644559"
  },
  {
    "text": "same respect you would treat an actual API think about versioning think about",
    "start": "1644559",
    "end": "1650000"
  },
  {
    "text": "the schema think about how you expose your internal do domain model externally to other systems and then document it",
    "start": "1650000",
    "end": "1658120"
  },
  {
    "text": "tell people about it and I wanted to say a quick word on event catalog if you're not aware of event catalog it's an open",
    "start": "1658120",
    "end": "1663840"
  },
  {
    "text": "source project from Dave Bo and it's a way to make it really easy to document",
    "start": "1663840",
    "end": "1669080"
  },
  {
    "text": "and discover your event driven systems you can load in defined specifications and you can look at how your system",
    "start": "1669080",
    "end": "1675480"
  },
  {
    "text": "links together you can make it discoverable now at the moment event catalog requires you to upload",
    "start": "1675480",
    "end": "1681000"
  },
  {
    "text": "documentation files things like acing Ki specifications but on the road map there is plug-in Integrations coming for lots",
    "start": "1681000",
    "end": "1688200"
  },
  {
    "text": "of different message Brokers which is going to allow you to build hopefully some kind of self-documenting event",
    "start": "1688200",
    "end": "1693440"
  },
  {
    "text": "driven system and I think there's something really interesting there in this idea of a self-documenting event driven",
    "start": "1693440",
    "end": "1701279"
  },
  {
    "text": "system because you've got these events actually flowing around don't you the events are actually happening they're",
    "start": "1701279",
    "end": "1706360"
  },
  {
    "text": "triggering business functionality and who here has ever released a feature",
    "start": "1706360",
    "end": "1711480"
  },
  {
    "text": "released something and forgot to update the documentation don't worry it's a safe space no one's going to shout at",
    "start": "1711480",
    "end": "1716840"
  },
  {
    "text": "you for not doing it it's hard isn't it it's hard to keep things up to date it's hard to remember to do it sometimes we",
    "start": "1716840",
    "end": "1722440"
  },
  {
    "text": "just forget sometimes frankly we just can't be bothered documentation is hard so we've got these events flying around",
    "start": "1722440",
    "end": "1728480"
  },
  {
    "text": "why can't we make our event driven system self-documenting so this is what you start to do you",
    "start": "1728480",
    "end": "1734399"
  },
  {
    "text": "start to actually in your consumers in your producers you start to actually log the contents of the events you start to",
    "start": "1734399",
    "end": "1741720"
  },
  {
    "text": "actually store the context content of the events as context against your",
    "start": "1741720",
    "end": "1747519"
  },
  {
    "text": "traces seems simple right now you've got this ability to go and look in your observability system and look at the actual events flying",
    "start": "1747519",
    "end": "1755039"
  },
  {
    "text": "around and if you do this somebody somewhere in your company probably a security person is going to have a minor",
    "start": "1755039",
    "end": "1761679"
  },
  {
    "text": "heart attack because now you've just exposed potentially exposed pii or sensitive",
    "start": "1761679",
    "end": "1768519"
  },
  {
    "text": "information into your observability back end probably not something you really want to do but there's still something",
    "start": "1768519",
    "end": "1775039"
  },
  {
    "text": "interesting here you want to be able to understand the events in your system you want to be able to understand the events that are flying around but equally you",
    "start": "1775039",
    "end": "1782159"
  },
  {
    "text": "want to be careful about the data you expose so a practice I'm a really big",
    "start": "1782159",
    "end": "1787200"
  },
  {
    "text": "fan of is instead of storing the contents of the event store the schema of the event you publish and receive in",
    "start": "1787200",
    "end": "1794679"
  },
  {
    "text": "your observability system most programming languages will have a package or something you can",
    "start": "1794679",
    "end": "1801480"
  },
  {
    "text": "include that will allow you to extract the schema of an event from an actual Json string this example is in net you",
    "start": "1801480",
    "end": "1807679"
  },
  {
    "text": "can do this in other languages as well so instead of storing the event data itself you're actually going to log the",
    "start": "1807679",
    "end": "1814240"
  },
  {
    "text": "schema you're going to add the schema of the event you receive to the context of the",
    "start": "1814240",
    "end": "1821279"
  },
  {
    "text": "trace that allows you to start to play detective to allow you to start to ask",
    "start": "1821279",
    "end": "1826720"
  },
  {
    "text": "these questions of your system the questions that you didn't know you needed to ask previously it's context",
    "start": "1826720",
    "end": "1833120"
  },
  {
    "text": "you add to your spans that really makes distributed tracing start to be",
    "start": "1833120",
    "end": "1838760"
  },
  {
    "text": "powerful imagine if you get a call off someone on your support team and there's an order that's gone missing order",
    "start": "1838760",
    "end": "1845559"
  },
  {
    "text": "number 1 2 3 4 5 they've not received their Pizza Panic now you have the ability to go",
    "start": "1845559",
    "end": "1850919"
  },
  {
    "text": "into your observability back end and actually run a query across your entire system to say give me all of the",
    "start": "1850919",
    "end": "1856279"
  },
  {
    "text": "requests related to this specific order and then you can start to",
    "start": "1856279",
    "end": "1861960"
  },
  {
    "text": "understand exactly whereabouts in your system that order is it's tracing in distributed systems that allows you to",
    "start": "1861960",
    "end": "1869679"
  },
  {
    "start": "1867000",
    "end": "2266000"
  },
  {
    "text": "start to understand this cause and effect tracing isn't a silver bullet",
    "start": "1869679",
    "end": "1875000"
  },
  {
    "text": "though it's not as simple as you might initially think here's an example of a full endtoend distributed Trace from",
    "start": "1875000",
    "end": "1881760"
  },
  {
    "text": "inside the pizza restaurant each different color on this on this graph is",
    "start": "1881760",
    "end": "1887000"
  },
  {
    "text": "a different backend service and you can see there's a lot of them there's a lot of different backend Services here to make a pizza and you might think well",
    "start": "1887000",
    "end": "1893480"
  },
  {
    "text": "this is really useful isn't it I can zoom in I can go and have a look at a specific Trace I can have a look at a specific span I can actually see that",
    "start": "1893480",
    "end": "1901080"
  },
  {
    "text": "this specific event spent 294 milliseconds inside an event bus dev.",
    "start": "1901080",
    "end": "1908240"
  },
  {
    "text": "orders it then spent 100ish milliseconds inside an sqsq and then it was picked up and",
    "start": "1908240",
    "end": "1915360"
  },
  {
    "text": "processed by a downstream system by Lambda function this may be sounds really useful do it being able to",
    "start": "1915360",
    "end": "1920799"
  },
  {
    "text": "actually see exactly which message channels exactly how long your events",
    "start": "1920799",
    "end": "1925919"
  },
  {
    "text": "spend in each individual message channel of course to get this kind of",
    "start": "1925919",
    "end": "1931120"
  },
  {
    "text": "observability this is in a lot of cases going to require a little bit of work on your end because you're going to need to",
    "start": "1931120",
    "end": "1936720"
  },
  {
    "text": "add these spans for how long your event spent in a given message Channel a most",
    "start": "1936720",
    "end": "1943039"
  },
  {
    "text": "event payload you will see will give you the capability to do this take this sample event from sqs if you're",
    "start": "1943039",
    "end": "1949080"
  },
  {
    "text": "processing sqs messages this is what the structure of a message will look like and you've got this sent timestamp",
    "start": "1949080",
    "end": "1956760"
  },
  {
    "text": "attribute this is the time in which sqs received this message so you can use this information",
    "start": "1956760",
    "end": "1963240"
  },
  {
    "text": "to actually infer the length of that span to infer the length of the amount of time that this event spent inside",
    "start": "1963240",
    "end": "1971480"
  },
  {
    "text": "sqs and then when you actually go and consume this event because you've propagated that Trace context because",
    "start": "1971480",
    "end": "1977320"
  },
  {
    "text": "you've included included that Trace perent in your specification you can write code like this that then extracts",
    "start": "1977320",
    "end": "1983639"
  },
  {
    "text": "that Trace information from the inbound event and continues the trace",
    "start": "1983639",
    "end": "1989240"
  },
  {
    "text": "Downstream you can start a new Span in your Downstream system and say the context of this span is the one that",
    "start": "1989240",
    "end": "1995519"
  },
  {
    "text": "comes from the Upstream system looking at this screenshot again",
    "start": "1995519",
    "end": "2001120"
  },
  {
    "text": "though you can see that these really two long purple lines that take a disproportionate amount of time in the",
    "start": "2001120",
    "end": "2007519"
  },
  {
    "text": "middle in this specific example this is a",
    "start": "2007519",
    "end": "2012679"
  },
  {
    "text": "workflow that starts this workflow needs to go and do some other things it takes a disproportionately long amount of time",
    "start": "2012679",
    "end": "2018600"
  },
  {
    "text": "relative to the rest of the trace and many of you are going to end up in situations like this there'll be",
    "start": "2018600",
    "end": "2024159"
  },
  {
    "text": "an event that happens somewhere in your system and then there's going to be some kind of long running business process that",
    "start": "2024159",
    "end": "2029960"
  },
  {
    "text": "happens and business processes can take seconds minutes hours weeks even and a",
    "start": "2029960",
    "end": "2036559"
  },
  {
    "text": "lot of business processes have a lot of time where nothing is actually happening if you think about making a pizza you're",
    "start": "2036559",
    "end": "2042760"
  },
  {
    "text": "going to put a pizza in the oven and you're going to sit there waiting for n number of minutes depending how hot your oven is for that pizza to be cooked",
    "start": "2042760",
    "end": "2049560"
  },
  {
    "text": "there's a lot of this non-time this empty time take another example imagine once a",
    "start": "2049560",
    "end": "2055960"
  },
  {
    "text": "day you need to run a Reconciliation process across all the orders that were confirmed that day and it's more",
    "start": "2055960",
    "end": "2063800"
  },
  {
    "text": "efficient for you to do this as a one-off process at the end of the day as opposed to do doing it piece by piece as",
    "start": "2063800",
    "end": "2069320"
  },
  {
    "text": "an event comes in if you were to propagate this Trace context into your daily job your daily",
    "start": "2069320",
    "end": "2076079"
  },
  {
    "text": "analysis job all the observability for your daily job are going to is going to end up in the traces for the actual",
    "start": "2076079",
    "end": "2084280"
  },
  {
    "text": "event being published the order confirmed event and in some cases if someone had ordered a pizza at maybe 10:00 in the",
    "start": "2084280",
    "end": "2090358"
  },
  {
    "text": "morning which sounds like a wonderful thing to have to breakfast you've then got this really long Trace you've got",
    "start": "2090359",
    "end": "2095720"
  },
  {
    "text": "this 14-hour Trace going on with a lot of empty time in the middle and then suddenly this daily job runs at the end",
    "start": "2095720",
    "end": "2101720"
  },
  {
    "text": "of the day so you don't want your daily job to appear under each individual",
    "start": "2101720",
    "end": "2107000"
  },
  {
    "text": "Upstream Trace but you do still want to understand cause and effect you do want to understand what caused that event to",
    "start": "2107000",
    "end": "2113920"
  },
  {
    "text": "get into the place ready to be processed so this is where span linking",
    "start": "2113920",
    "end": "2119960"
  },
  {
    "text": "gets really useful instead of propagating the entire Trace to a downstream system instead you",
    "start": "2119960",
    "end": "2127920"
  },
  {
    "text": "can link the Span in one Trace to a span in another trace this keep things",
    "start": "2127920",
    "end": "2134359"
  },
  {
    "text": "independent you've now got a separate trace for your Downstream system for your daily job and you've got separate",
    "start": "2134359",
    "end": "2139560"
  },
  {
    "text": "traces for your Upstream system and when you're processing the individual message",
    "start": "2139560",
    "end": "2144760"
  },
  {
    "text": "in your at Daily job you can link that back to the specific Trace that happened",
    "start": "2144760",
    "end": "2151640"
  },
  {
    "text": "Upstream which then begs the question doesn't it what's the right thing to do do I propagate the trace this do I link",
    "start": "2151640",
    "end": "2159200"
  },
  {
    "text": "my spans together using span links what's the right one to choose and the simplest way to think",
    "start": "2159200",
    "end": "2165440"
  },
  {
    "text": "about that is this idea of a unit of work what is the unit of work that you want to",
    "start": "2165440",
    "end": "2171160"
  },
  {
    "text": "observe what's the useful thing for you as a developer what's the business process that you're trying to add",
    "start": "2171160",
    "end": "2176280"
  },
  {
    "text": "observability to that might be the daily job as a whole so inside the daily job you probably want to propagate traces",
    "start": "2176280",
    "end": "2182560"
  },
  {
    "text": "between systems maybe your create Audio Request comes into the pizza restaurant",
    "start": "2182560",
    "end": "2187640"
  },
  {
    "text": "you raise the order confirmed event and you want to know that the kitchen service consumes that event so maybe you propagate the trace in that context but",
    "start": "2187640",
    "end": "2195000"
  },
  {
    "text": "then the actual internals of the kitchen the actual internals of the workflow to make the pizza maybe that is a span link",
    "start": "2195000",
    "end": "2202400"
  },
  {
    "text": "instead of propagating the trace both things are incredibly useful the important thing to take away is make",
    "start": "2202400",
    "end": "2208560"
  },
  {
    "text": "sure you keep these links because having these links having this endtoend Trace",
    "start": "2208560",
    "end": "2214280"
  },
  {
    "text": "is what allows you to understand your dependencies you can now understand that the API in",
    "start": "2214280",
    "end": "2220200"
  },
  {
    "text": "your system that manages products that manages pizzas has an upstream dependency on a pricing service on some",
    "start": "2220200",
    "end": "2227319"
  },
  {
    "text": "kind of service that manages prices you can also understand that you've the system's Downstream of you",
    "start": "2227319",
    "end": "2233880"
  },
  {
    "text": "that have a dependency on you there's these Downstream systems that are using your events you also Downstream",
    "start": "2233880",
    "end": "2240359"
  },
  {
    "text": "dependencies on things like dynamodb on SNS having this distributed traing in price allows you to understand cause and",
    "start": "2240359",
    "end": "2247319"
  },
  {
    "text": "effect effect it adds the required Nuance to this statement because although you",
    "start": "2247319",
    "end": "2253119"
  },
  {
    "text": "don't really care what Downstream systems are doing with your event it certainly helps to understand who is",
    "start": "2253119",
    "end": "2258800"
  },
  {
    "text": "dependent on you and who you are depending",
    "start": "2258800",
    "end": "2264160"
  },
  {
    "text": "on so we've talked a lot about distributed tracing up to now but remember there's three pillars there's not just one pillar so metrics are",
    "start": "2264160",
    "end": "2271839"
  },
  {
    "start": "2266000",
    "end": "2427000"
  },
  {
    "text": "metrics still valuable in a modern observability strategy a metric are still useful",
    "start": "2271839",
    "end": "2278200"
  },
  {
    "text": "because metrics can give you this macro level view they can give you this high level view of your system as a whole of how your entire system is",
    "start": "2278200",
    "end": "2286079"
  },
  {
    "text": "functioning open Telemetry also publish some best practices they do call them semantic conventions but that's really",
    "start": "2286079",
    "end": "2292440"
  },
  {
    "text": "hard to say about what metrics you should care about in a message driven system or in a vent driven system and",
    "start": "2292440",
    "end": "2298760"
  },
  {
    "text": "then I've added a couple of my own here as well so QEP how many messages are building up in",
    "start": "2298760",
    "end": "2305160"
  },
  {
    "text": "your queue this could identify a bottleneck in your system this could identify that your",
    "start": "2305160",
    "end": "2310520"
  },
  {
    "text": "system can't keep up with the throughput if this is a dead letter que this could also identify a problem if you've got",
    "start": "2310520",
    "end": "2316240"
  },
  {
    "text": "messages building up in a queue you've got the count of messages",
    "start": "2316240",
    "end": "2321960"
  },
  {
    "text": "being published and consumed but also the size of the messages being published",
    "start": "2321960",
    "end": "2327480"
  },
  {
    "text": "and consumed this allows you both to understand through put but if you have a",
    "start": "2327480",
    "end": "2332520"
  },
  {
    "text": "sudden drop off in the size of the message or a sudden increase in the size of the message that could also potentially Point towards a",
    "start": "2332520",
    "end": "2339920"
  },
  {
    "text": "problem you've got the age of the message how old is the last message that you processed if this metric is",
    "start": "2339920",
    "end": "2346200"
  },
  {
    "text": "increasing that can again Point towards there being some kind of bottleneck in your system if if you're starting to",
    "start": "2346200",
    "end": "2352079"
  },
  {
    "text": "process messages that are older and older and older the inflight latency if you're building a latency sensitive",
    "start": "2352079",
    "end": "2358079"
  },
  {
    "text": "system this can be a useful one to understand is the message transport you've chosen fast enough for",
    "start": "2358079",
    "end": "2365400"
  },
  {
    "text": "you error count an obvious one how many errors are happening in your system and then finally what I think is a really",
    "start": "2365400",
    "end": "2371520"
  },
  {
    "text": "useful one is the count of a type of message that you're seeing how many order confirmed events",
    "start": "2371520",
    "end": "2377839"
  },
  {
    "text": "have you seen how many payment failed events have you seen how many payment processed events have you seen this is",
    "start": "2377839",
    "end": "2383839"
  },
  {
    "text": "both useful for you as a developer to understand if your system is working but also useful for The Wider business",
    "start": "2383839",
    "end": "2390200"
  },
  {
    "text": "you're now starting to add value to the business to add this kind of data that you can get from these business events",
    "start": "2390200",
    "end": "2395880"
  },
  {
    "text": "that are actually flying around which of these metrics you choose to",
    "start": "2395880",
    "end": "2401960"
  },
  {
    "text": "alert on really is going to be different based on your specific context maybe endtoend latency is really important to",
    "start": "2401960",
    "end": "2408440"
  },
  {
    "text": "you okay alert on that maybe the size of the messages maybe you're really sensitive to the payload size maybe",
    "start": "2408440",
    "end": "2414480"
  },
  {
    "text": "you're really close to hitting service limits in some of the adbs services okay understanding the size of the message",
    "start": "2414480",
    "end": "2420000"
  },
  {
    "text": "you publish and how that changes over time is going to be a really useful one for",
    "start": "2420000",
    "end": "2425319"
  },
  {
    "text": "you another really important thing is that success is also an important",
    "start": "2425319",
    "end": "2432079"
  },
  {
    "start": "2427000",
    "end": "2455000"
  },
  {
    "text": "metric if your system processes 10 messages a minute on average 20 messages",
    "start": "2432079",
    "end": "2437720"
  },
  {
    "text": "a minute if that metric suddenly drops to zero and you suddenly stop processing",
    "start": "2437720",
    "end": "2443359"
  },
  {
    "text": "any messages there might not necessarily be any errors but that could still Point towards a bigger issue inside your",
    "start": "2443359",
    "end": "2450240"
  },
  {
    "text": "system Point towards something actually going wrong so now that you've got all these things in place let's actually walk",
    "start": "2450240",
    "end": "2457400"
  },
  {
    "start": "2455000",
    "end": "2606000"
  },
  {
    "text": "through what that could actually look like cuz remember you still sat there middle of the afternoon your page has just gone off and you're trying to now",
    "start": "2457400",
    "end": "2463520"
  },
  {
    "text": "work out what exactly has gone wrong in your system so you go and have a look at your",
    "start": "2463520",
    "end": "2469680"
  },
  {
    "text": "observability back end and you realize that actually there's an increased error count that's what caused your ped to go",
    "start": "2469680",
    "end": "2476319"
  },
  {
    "text": "off this high level view this macro view of your system has told you that there's an increased error count and there's an",
    "start": "2476319",
    "end": "2481560"
  },
  {
    "text": "increased error count inside the kitchen service so you can go into your",
    "start": "2481560",
    "end": "2486839"
  },
  {
    "text": "observability back end and you can start to ask questions of your system the first quite obvious question",
    "start": "2486839",
    "end": "2493359"
  },
  {
    "text": "you're going to ask is show me all of the traces that have an error show me all the things that are going wrong and",
    "start": "2493359",
    "end": "2499079"
  },
  {
    "text": "because you're adding this context to your traces and errors are a type of context you can now see all the traces",
    "start": "2499079",
    "end": "2506480"
  },
  {
    "text": "that have a problem really quickly you can then because these give you this really micro view this really granular",
    "start": "2506480",
    "end": "2513160"
  },
  {
    "text": "view of a request you can dive into an individual trace a trace that has an error and say okay what's actually gone",
    "start": "2513160",
    "end": "2519040"
  },
  {
    "text": "wrong with this Trace with this request you can see the message was retried three times you got some kind of",
    "start": "2519040",
    "end": "2526240"
  },
  {
    "text": "R rise in place but you've also got this Trace propagation you've got this ability to be able to look",
    "start": "2526240",
    "end": "2531760"
  },
  {
    "text": "upstream and see exactly what caused your system to execute what caused your system to",
    "start": "2531760",
    "end": "2538319"
  },
  {
    "text": "run so you double click into that you think okay well let's actually have a look we're building an event D system let's actually have a look what the",
    "start": "2538319",
    "end": "2544680"
  },
  {
    "text": "events look like inside your same UI now you can look at the schema of the event that caused your",
    "start": "2544680",
    "end": "2551440"
  },
  {
    "text": "system to execute you've not had to context switch to another tool your is still inside your observability system",
    "start": "2551440",
    "end": "2557520"
  },
  {
    "text": "and you can see because you've got that Trace propagation here is the structure of the event that was published here's",
    "start": "2557520",
    "end": "2563000"
  },
  {
    "text": "the structure of the event that I received and you think this is weird a few weeks ago we started publishing thicker events we started including more",
    "start": "2563000",
    "end": "2569720"
  },
  {
    "text": "context it looks like there's been a regression of some kind in the Upstream system but to check yourself you take",
    "start": "2569720",
    "end": "2576319"
  },
  {
    "text": "this schema out of your observability system and you drop it into your test Suite you drop it into your unit tests",
    "start": "2576319",
    "end": "2582040"
  },
  {
    "text": "and you run your tests against this specific schema of the event this specific structure of event lo and",
    "start": "2582040",
    "end": "2588040"
  },
  {
    "text": "behold your system fails you're expecting a property in the event that isn't",
    "start": "2588040",
    "end": "2594040"
  },
  {
    "text": "there you've now had that ability to go and play detective to actually understand what has exactly happened in",
    "start": "2594040",
    "end": "2599359"
  },
  {
    "text": "your system what has caused your system to run and use that to quickly diagnose the issue now I realize that was a",
    "start": "2599359",
    "end": "2607280"
  },
  {
    "start": "2606000",
    "end": "2762000"
  },
  {
    "text": "pretty trivial example that I've just walked through what I hope that identifies though is that having this",
    "start": "2607280",
    "end": "2612839"
  },
  {
    "text": "ability to ask questions of your system to understand cause and effect is what",
    "start": "2612839",
    "end": "2619520"
  },
  {
    "text": "will really help you understand your Event Systems if you're building a new feature",
    "start": "2619520",
    "end": "2625119"
  },
  {
    "text": "a new functionality a new service ask yourself the question how will I understand what caused my system to",
    "start": "2625119",
    "end": "2633160"
  },
  {
    "text": "execute how will I understand what caused my system to run to do some work to do",
    "start": "2633160",
    "end": "2639839"
  },
  {
    "text": "something and then use context to be able to ask questions of your system add",
    "start": "2639839",
    "end": "2645520"
  },
  {
    "text": "the context to these traces that you can then run queries on you can use to understand your system you can use to",
    "start": "2645520",
    "end": "2651559"
  },
  {
    "text": "correlate maybe you have a set of errors that are all related to the same customer ID the same order ID the same",
    "start": "2651559",
    "end": "2658000"
  },
  {
    "text": "user ID because you've got all this information in your traces you can start to correlate things that are causing",
    "start": "2658000",
    "end": "2664520"
  },
  {
    "text": "problems and then think about things both at the micro level at an individual",
    "start": "2664520",
    "end": "2670960"
  },
  {
    "text": "request level traces logs to understand a specific request in your system but",
    "start": "2670960",
    "end": "2677040"
  },
  {
    "text": "also don't forget about the bigger picture don't forget about the macro view having this high level look at your",
    "start": "2677040",
    "end": "2683559"
  },
  {
    "text": "entire system as a whole will give you that ability to be able to alert and do",
    "start": "2683559",
    "end": "2688839"
  },
  {
    "text": "things like that um most importantly think about how you can get this into your day-to-day",
    "start": "2688839",
    "end": "2694359"
  },
  {
    "text": "work a company I used to work for we used to have as part of the poll request template whenever you wanted to merge a change to do something new you had to",
    "start": "2694359",
    "end": "2701640"
  },
  {
    "text": "ask answer the question in the template How will I know that this specific piece of code has made it to",
    "start": "2701640",
    "end": "2708160"
  },
  {
    "text": "production and that might just be a three-line code change you still had to answer the question how would I know",
    "start": "2708160",
    "end": "2713440"
  },
  {
    "text": "that this code is in production and if you constantly ask yourself that question as you're",
    "start": "2713440",
    "end": "2718800"
  },
  {
    "text": "developing How will I know that the code I'm changing is in production you will always have the",
    "start": "2718800",
    "end": "2723880"
  },
  {
    "text": "observability you need to understand if your system is working not now this is the first time I've",
    "start": "2723880",
    "end": "2730079"
  },
  {
    "text": "actually given this talk so any feedback you you have both you can give to me now or up at the front or I'd really",
    "start": "2730079",
    "end": "2735480"
  },
  {
    "text": "appreciate any feedback in the app the slides for the talk are available on these QR codes I also have a whole bunch",
    "start": "2735480",
    "end": "2741400"
  },
  {
    "text": "of content on my YouTube channel and actually the top QR code will give you a link to plant-based Pizza this is an",
    "start": "2741400",
    "end": "2747079"
  },
  {
    "text": "application you can actually go and see you can actually go and deploy and I've just lost my audio there we go we're back that's actually an application you",
    "start": "2747079",
    "end": "2753200"
  },
  {
    "text": "can go and build you can go and deploy you can actually go and have a look at that so I gave this talks like this a few times and people were constantly asking me about real world examples so I",
    "start": "2753200",
    "end": "2759359"
  },
  {
    "text": "actually went and built it so you can go and have a look at that as well thank you all very much for listening I hope you enjoy the rest of your day thank you",
    "start": "2759359",
    "end": "2768799"
  }
]