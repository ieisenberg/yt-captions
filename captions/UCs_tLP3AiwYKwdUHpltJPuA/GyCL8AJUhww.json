[
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "all right let's have lunch that was it keep the applause for at the end I'm",
    "start": "12790",
    "end": "19220"
  },
  {
    "text": "gonna talk about a lot and a Freddie connect maybe towards the end you're not so happy anymore because it's actually a complex topic",
    "start": "19220",
    "end": "25010"
  },
  {
    "text": "it's not that easy to digest but I'm gonna try to make it digestible for you and my goal here is that you go away by",
    "start": "25010",
    "end": "32058"
  },
  {
    "text": "understanding or fully understanding what does why it does what it does and how it does that",
    "start": "32059",
    "end": "37489"
  },
  {
    "text": "same for open ID connect I'm going to talk about that towards the end it's built on top of OAuth for one particular",
    "start": "37489",
    "end": "43040"
  },
  {
    "text": "purpose and that is the takeaway from this session when we talk about what the",
    "start": "43040",
    "end": "48860"
  },
  {
    "text": "best way to introduce that is perhaps through a real world analogy so this is valet parking something we in Europe are",
    "start": "48860",
    "end": "55430"
  },
  {
    "text": "not too familiar with but in the u.s. you can actually hand someone your car key and they will parked car for you",
    "start": "55430",
    "end": "60440"
  },
  {
    "text": "very easy very straightforward of course you're handing a stranger the key to your probably fancy car so that's",
    "start": "60440",
    "end": "67880"
  },
  {
    "text": "probably maybe a bit of a risk so what you have in these cars is you have a valet key a special key that you can use",
    "start": "67880",
    "end": "74689"
  },
  {
    "text": "to give towards to oph√©lie and that key only opens the door of the car and starts the car but it does not give",
    "start": "74689",
    "end": "80930"
  },
  {
    "text": "access to the glovebox compartment or the trunk so if you have valuables in there I share valuable documents or",
    "start": "80930",
    "end": "86689"
  },
  {
    "text": "suitcases or whatever if you put them in there that key will not grant them access to that resource and it brings us",
    "start": "86689",
    "end": "93380"
  },
  {
    "text": "close towards the ID of oh because o it is about delegation of access and if a",
    "start": "93380",
    "end": "99530"
  },
  {
    "text": "key is a kind of delegating access to your car to someone else that you don't really know but under certain conditions",
    "start": "99530",
    "end": "106850"
  },
  {
    "text": "and that's what parts brings to the table and oh art we need an authorization server to handle that",
    "start": "106850",
    "end": "112880"
  },
  {
    "text": "delegation first a real world ohad paced example let's talk about something like Twitter everybody knows",
    "start": "112880",
    "end": "119000"
  },
  {
    "text": "Twitter I have a Twitter feed my slides are available through my Twitter feed so you can grab a copy from there if you",
    "start": "119000",
    "end": "124430"
  },
  {
    "text": "want to to post the slides on Twitter I use an application known as buffer buffer allows you me to schedule my",
    "start": "124430",
    "end": "130548"
  },
  {
    "text": "tweets so I can put them ready like release that at 12 o'clock and I'm good to go in the background buffer needs access to",
    "start": "130549",
    "end": "136790"
  },
  {
    "text": "my Twitter profile so I'm gonna delegate access to buffer to access my Twitter for on my behalf and post the tweet whenever",
    "start": "136790",
    "end": "143150"
  },
  {
    "text": "I say it should be posted if you look at the Twitter side of things there's a number of applications that has access",
    "start": "143150",
    "end": "149660"
  },
  {
    "text": "to my Twitter feed here's a few examples you see legitimate Twitter clients having access but you also see this",
    "start": "149660",
    "end": "155000"
  },
  {
    "text": "buffer application in there and some other types of applications that is fought at work that is how what actually",
    "start": "155000",
    "end": "161240"
  },
  {
    "text": "does this thing and what our tries to achieve allowing you as a user to grant",
    "start": "161240",
    "end": "166280"
  },
  {
    "text": "an application access on your behalf to a third-party resource so if you look at",
    "start": "166280",
    "end": "172280"
  },
  {
    "text": "a conceptual view from a very high level we're gonna make all of this possible through the authorization server that's",
    "start": "172280",
    "end": "177590"
  },
  {
    "text": "gonna be the key component in the whole of OAuth we as a user want to grant a",
    "start": "177590",
    "end": "183290"
  },
  {
    "text": "client application access so in my example from before buffer would be the client application I want to grant that",
    "start": "183290",
    "end": "188720"
  },
  {
    "text": "application access to a resource I control to access that resource the",
    "start": "188720",
    "end": "194240"
  },
  {
    "text": "client uses an access token that access token is something that the client has received buffer receipt from Twitter and",
    "start": "194240",
    "end": "200000"
  },
  {
    "text": "can use that to access a protected resource in our terms which is hosted by the resource server so in the example",
    "start": "200000",
    "end": "206630"
  },
  {
    "text": "that we have that would be the Twitter API to post a tweet that would be a protected resource on a resource server",
    "start": "206630",
    "end": "212570"
  },
  {
    "text": "and an access token is going to grant access and the resource server is gonna need some way to verify whether the",
    "start": "212570",
    "end": "219680"
  },
  {
    "text": "client is actually allowed to do that that's very important that a resource server does proper authorization otherwise any client would be able to do",
    "start": "219680",
    "end": "226130"
  },
  {
    "text": "anything on behalf of any user which is definitely not what we want oh art what",
    "start": "226130",
    "end": "232040"
  },
  {
    "text": "the spec provides is actually about the dance between the client and an authorization server about granting",
    "start": "232040",
    "end": "237560"
  },
  {
    "text": "access and that's actually it may be the verifying client access is also part of what but maybe not even the course",
    "start": "237560",
    "end": "243410"
  },
  {
    "text": "packets it's a separate specification and how to use the access token to access resource server that's not even",
    "start": "243410",
    "end": "249560"
  },
  {
    "text": "covered by a lot because a lot is purely about delegation of course all the other things come into play when you start",
    "start": "249560",
    "end": "255860"
  },
  {
    "text": "using a lot because you'll needs if you are building an API you'll need to check authorization and make decisions and",
    "start": "255860",
    "end": "261769"
  },
  {
    "text": "things like that but keep in mind that it's just based on the mechanisms provided by ODS but not part of coart",
    "start": "261770",
    "end": "267260"
  },
  {
    "text": "itself the image here shows one very weird thing we have one client a one",
    "start": "267260",
    "end": "272600"
  },
  {
    "text": "resource server so why go to the TRO of setting up allowed to make that work it's probably not worth the effort",
    "start": "272600",
    "end": "278600"
  },
  {
    "text": "because it is quite complex to get this working and you can make some mistakes against that of course this really pays",
    "start": "278600",
    "end": "285320"
  },
  {
    "text": "off in a landscape where you have multiple clients you have things like buffer which is a back-end system you",
    "start": "285320",
    "end": "290570"
  },
  {
    "text": "have things like a mobile front-end application you have a web application all of these can be clients of the same",
    "start": "290570",
    "end": "296630"
  },
  {
    "text": "part protocol or Oh our framework and of course you have multiple resource servers all of them offer several types",
    "start": "296630",
    "end": "304610"
  },
  {
    "text": "of resources different API is different kinds of resources and they all need to make authorization decisions that is",
    "start": "304610",
    "end": "310760"
  },
  {
    "text": "what an OAuth architecture on high level looks like before we dive into the",
    "start": "310760",
    "end": "316550"
  },
  {
    "text": "details of how this delegation actually happens small word about me I'm Philip deck thank you for the introduction",
    "start": "316550",
    "end": "322220"
  },
  {
    "text": "no one and I am a trainer on web security so I teach developers how to build better and more secure",
    "start": "322220",
    "end": "327440"
  },
  {
    "text": "applications I do that all over the world and under my company pragmatic web security which is my vehicle for doing",
    "start": "327440",
    "end": "334910"
  },
  {
    "text": "that I'm also organizing the Second Life course which is a course in Belgium a week long security for developers I'm",
    "start": "334910",
    "end": "341000"
  },
  {
    "text": "taught by experts from around the world I'm a Google developer expert which means Google recognizes me for my",
    "start": "341000",
    "end": "347330"
  },
  {
    "text": "contributions with security to the community but I'm not employed by Google or not affiliated with Google in any way",
    "start": "347330",
    "end": "353420"
  },
  {
    "text": "just as a disclaimer because people tend to get confused about that otherwise let's talk about a lot that's more",
    "start": "353420",
    "end": "361340"
  },
  {
    "text": "complex but also of maybe more interesting I'm gonna approach a lot from two different perspectives I'm",
    "start": "361340",
    "end": "366710"
  },
  {
    "text": "going to talk about the client perspective first what does it mean to be a client what do you need to do to actually get this flow started and get",
    "start": "366710",
    "end": "374120"
  },
  {
    "text": "this access token and now I'm going to talk about a resource servers perspective how can you authorize a client that is trying to get access to",
    "start": "374120",
    "end": "381110"
  },
  {
    "text": "an API back to the Twitter example so if you want to build an OAuth client",
    "start": "381110",
    "end": "387620"
  },
  {
    "text": "building it is not that hard but if you wanna use it with a real authorization server you'll need to register the client and in the Twitter case this",
    "start": "387620",
    "end": "395030"
  },
  {
    "text": "means registering for Twitter developer accounts which is just like clicking a button and clicking the okay in an email",
    "start": "395030",
    "end": "401690"
  },
  {
    "text": "that's about it and then you need to register your client with some detail so you need to provide a name this is",
    "start": "401690",
    "end": "407340"
  },
  {
    "text": "typically known as the client identifier you need to provide a URL and especially a callback URL so you need to tell the",
    "start": "407340",
    "end": "414210"
  },
  {
    "text": "server this is where you should send something if something comes back from this whole flow we're gonna talk about",
    "start": "414210",
    "end": "420389"
  },
  {
    "text": "that later why that actually matters and once you do that you get from Twitter",
    "start": "420389",
    "end": "426690"
  },
  {
    "text": "you get your clients secrets you can typically get an access token and a",
    "start": "426690",
    "end": "431940"
  },
  {
    "text": "secret twitter uses two different secrets but that doesn't really matter here or matters is that you have secrets",
    "start": "431940",
    "end": "438080"
  },
  {
    "text": "those secrets should be protected they should be used in certain scenarios which I'll talk about in the next slides",
    "start": "438080",
    "end": "444510"
  },
  {
    "text": "and before you start worrying I revoke these after I make the screenshot that's also valid if they somebody finds the",
    "start": "444510",
    "end": "450150"
  },
  {
    "text": "slides online and they're like oh my god this guy put secrets on his slides what the hell is he doing it's okay they",
    "start": "450150",
    "end": "455610"
  },
  {
    "text": "revoked don't worry Twitter is an example of a public",
    "start": "455610",
    "end": "460700"
  },
  {
    "text": "service anyone can build a client anyone can registered with Twitter you can also use the same thing in an enterprise",
    "start": "460700",
    "end": "466740"
  },
  {
    "text": "architecture nobody prevents you from running your own authorization server which is only used within your",
    "start": "466740",
    "end": "472110"
  },
  {
    "text": "enterprise for your clients and your resource servers in that case you probably don't have this public",
    "start": "472110",
    "end": "477539"
  },
  {
    "text": "registration interface in that case you probably have someone responsible for managing the authorization server and he",
    "start": "477539",
    "end": "482970"
  },
  {
    "text": "registers the clients he or she registers them for the developers asking to do that so that's this is an open",
    "start": "482970",
    "end": "489000"
  },
  {
    "text": "system the other one the enterprise system is more of a closed system so there are two various deployment modes",
    "start": "489000",
    "end": "495720"
  },
  {
    "text": "but the principles are the same you need to register client you need to tell the authorization server where stuff needs",
    "start": "495720",
    "end": "502050"
  },
  {
    "text": "to be sent to at the end of the flow to redirect URI really matters there let's",
    "start": "502050",
    "end": "507780"
  },
  {
    "text": "talk about the properties let's talk about different clients I have three scenarios I want to cover there are more",
    "start": "507780",
    "end": "513990"
  },
  {
    "text": "but I only have a limited amount of time so I had to make a selection I'm gonna focus on three important flows to make",
    "start": "513990",
    "end": "520830"
  },
  {
    "text": "you understand how it works the first flow is shameless advertising from second left but that doesn't matter",
    "start": "520830",
    "end": "527360"
  },
  {
    "text": "the first client wants to show a number of tweets from a feed on a website so we",
    "start": "527360",
    "end": "532680"
  },
  {
    "text": "want to be able to select that I want eaten is in this street and I want to show that on the website fairly simple",
    "start": "532680",
    "end": "538440"
  },
  {
    "text": "right what we need to do is call the Twitter API and get that tweet information this we can",
    "start": "538440",
    "end": "543900"
  },
  {
    "text": "do with a client credentials grant so what uses somewhat complex terminology but bear with me and we will figure it",
    "start": "543900",
    "end": "551070"
  },
  {
    "text": "out so the client here is again it's it's a back-end system it's just a system and the client goes to the",
    "start": "551070",
    "end": "558570"
  },
  {
    "text": "authorization server using his client credentials remember that client secret that we got from Twitter this is the moment where",
    "start": "558570",
    "end": "564210"
  },
  {
    "text": "you use it from your back-end system from a secure environment you go to the authorization server and you ask can I",
    "start": "564210",
    "end": "569970"
  },
  {
    "text": "get an access token here's proof that I am indeed this client that's my identifier and this is my secret and the",
    "start": "569970",
    "end": "576210"
  },
  {
    "text": "authorization server whenever everything checks out grants the clients or gives the client an access token client in",
    "start": "576210",
    "end": "582420"
  },
  {
    "text": "turn uses that access token to go to the resource server hey can I get this list of tweets from this account which is",
    "start": "582420",
    "end": "588900"
  },
  {
    "text": "public information and the resource server says oh yeah sure here is the data of course after making a proper",
    "start": "588900",
    "end": "594750"
  },
  {
    "text": "authorization decision this is the easiest of the OAuth flows you might",
    "start": "594750",
    "end": "600090"
  },
  {
    "text": "remember that I said what is about delegation there's nothing being delegated here this is direct access",
    "start": "600090",
    "end": "605910"
  },
  {
    "text": "from a client to server essentially it's machine to machine communication there's",
    "start": "605910",
    "end": "611310"
  },
  {
    "text": "no user involved because it it's not needed in this type of scenario quick",
    "start": "611310",
    "end": "618180"
  },
  {
    "text": "overview I'm gonna build us up throughout the the next two scenarios so the client credentials grant is for direct access by the client application",
    "start": "618180",
    "end": "624330"
  },
  {
    "text": "remember this it's machine to machine there's no user involved you get an access token you can access a resource that's it everything happens in name of",
    "start": "624330",
    "end": "631590"
  },
  {
    "text": "the client brings us to the second scenario what if we want to schedule",
    "start": "631590",
    "end": "637080"
  },
  {
    "text": "tweets on behalf of the user that's a very legitimate case we saw the buffer example if you want to build something",
    "start": "637080",
    "end": "642930"
  },
  {
    "text": "like that we actually need a way to ask the user hey can we get access to your Twitter account so that we can actually",
    "start": "642930",
    "end": "649080"
  },
  {
    "text": "post tweets in your name at that time you do that for example with the authorization code grant it's based on a",
    "start": "649080",
    "end": "657120"
  },
  {
    "text": "code let me explain to you how it works so you can see it's already a bit more complicated there's different parties involved the client in this case client",
    "start": "657120",
    "end": "665610"
  },
  {
    "text": "at the bottom is still a tag and web application and that's gonna matter later in this flow because we still need",
    "start": "665610",
    "end": "671550"
  },
  {
    "text": "to use a secret and we can only use that secret and it's stored in a secure location and a back-end is considered to be secure so",
    "start": "671550",
    "end": "679470"
  },
  {
    "text": "the client is going to request access typically that involves the browser it's gonna trigger a redirect that goes",
    "start": "679470",
    "end": "684810"
  },
  {
    "text": "through the browser towards the authorization server authorization server is going to present the user with",
    "start": "684810",
    "end": "690420"
  },
  {
    "text": "a page if it's Twitter it's gonna ask you who are you if it already knows you so if you're already authenticated disk",
    "start": "690420",
    "end": "696690"
  },
  {
    "text": "that may be skipped but in general to ask you please log into your Twitter account on Twitter itself because the",
    "start": "696690",
    "end": "702120"
  },
  {
    "text": "authorization server here in our example that is Twitter you log in and then the",
    "start": "702120",
    "end": "708090"
  },
  {
    "text": "authorization server ask who's Mac hey this this application buffer is trying to access your Twitter account do you",
    "start": "708090",
    "end": "713400"
  },
  {
    "text": "really want that you want to authorize that and then the client says oh yeah sure that's what I intended to do you click yes now physician services are",
    "start": "713400",
    "end": "720480"
  },
  {
    "text": "interesting so you have authorized authenticated and authorizes clients so I'm gonna issue an authorization code",
    "start": "720480",
    "end": "727320"
  },
  {
    "text": "and it's going to do that with a redirect through the browser towards this redirect URI that has been",
    "start": "727320",
    "end": "732570"
  },
  {
    "text": "registered before so the client during registration said if you want to send me something send it here and that's what",
    "start": "732570",
    "end": "738540"
  },
  {
    "text": "the authorization server will use here to send that authorization code to this matters for security otherwise you could",
    "start": "738540",
    "end": "744330"
  },
  {
    "text": "trick it into sending it to the attacker which is not supposed to happen this authorization code doesn't grant",
    "start": "744330",
    "end": "750750"
  },
  {
    "text": "any access it's not a token so the client exchanges that authorization code into an access token this exchange step",
    "start": "750750",
    "end": "759240"
  },
  {
    "text": "9 and 10 require the use of client credentials this is where the client actually has to authenticate to the",
    "start": "759240",
    "end": "765300"
  },
  {
    "text": "authorization server hey remember me I'm this buffer thing and this is what's my secret that you gave me I have these to",
    "start": "765300",
    "end": "770880"
  },
  {
    "text": "prove it that's really me and can I now get an access token in return for this authorization code even more you can",
    "start": "770880",
    "end": "777120"
  },
  {
    "text": "also get a refresh token but I'm going to talk about that in a second with that access token the application can now",
    "start": "777120",
    "end": "783240"
  },
  {
    "text": "access this resource server so it can now go to this Twitter API and say oh a post street on behalf of Philip please",
    "start": "783240",
    "end": "790170"
  },
  {
    "text": "and off you go and that is how delegation works in OAuth so what we",
    "start": "790170",
    "end": "796350"
  },
  {
    "text": "really achieve with a lot is we allow a user to authorize a client to access resources on their behalf that's what",
    "start": "796350",
    "end": "803580"
  },
  {
    "text": "what is all about in this flow this is the most secure flow in a lot because it",
    "start": "803580",
    "end": "810540"
  },
  {
    "text": "involves client authentication step 9 and 10 here require the client to use",
    "start": "810540",
    "end": "815610"
  },
  {
    "text": "its credentials that's really important doesn't exist in other flows which we shall talk about in the next scenario",
    "start": "815610",
    "end": "821790"
  },
  {
    "text": "also important the authorization code here is only valid from one time used for a very short period of time so",
    "start": "821790",
    "end": "828180"
  },
  {
    "text": "usually it's like a minute so you have a minute between receiving it here to make that call which should be enough even on",
    "start": "828180",
    "end": "834300"
  },
  {
    "text": "slow systems if you're taking longer than a minute there you probably need to fix some other things before using a lot",
    "start": "834300",
    "end": "840690"
  },
  {
    "text": "and that is what this flow has to offer if you want to look at that from the",
    "start": "840690",
    "end": "846090"
  },
  {
    "text": "browser's perspective this is what the user would actually see so you see the application of buffer in this case",
    "start": "846090",
    "end": "852390"
  },
  {
    "text": "asking you can you connect your Twitter profile to my application and if you click that button it's gonna send a call",
    "start": "852390",
    "end": "858360"
  },
  {
    "text": "to the backend of buffer like oh yeah I want to connect my Twitter account and it's gonna initiate this flow with a",
    "start": "858360",
    "end": "863760"
  },
  {
    "text": "redirect so you don't see that instead you end up with a page from the authorization server that page from the",
    "start": "863760",
    "end": "870210"
  },
  {
    "text": "authorization server is gonna ask you to login if necessary that might be skipped you authenticate and then the",
    "start": "870210",
    "end": "876330"
  },
  {
    "text": "authorization server asks you do you really want to allow this yes I do ok here goes the code truly redirect",
    "start": "876330",
    "end": "882720"
  },
  {
    "text": "back to the backend of the client application which can now exchange it and access the protected resources that",
    "start": "882720",
    "end": "889680"
  },
  {
    "text": "is what the user see sees so you connect it you go to Twitter very important that's very important in order that you",
    "start": "889680",
    "end": "896040"
  },
  {
    "text": "actually go to the party that should attend the gate you doesn't this doesn't",
    "start": "896040",
    "end": "901200"
  },
  {
    "text": "happen under the hood it's actually very feasible you're redirected to Twitter and you do whatever you need to do there as a user I mentioned that the client",
    "start": "901200",
    "end": "909030"
  },
  {
    "text": "also gets a refresh token I'm not gonna talk into more detail about that a refresh token allows the client to get a",
    "start": "909030",
    "end": "914970"
  },
  {
    "text": "new access token later on so access tokens are usually short-lived if buffer gets an access token from",
    "start": "914970",
    "end": "921300"
  },
  {
    "text": "Twitter it's fell out for let's say 10 minutes so it can access the API for 10 minutes and then it expires boom no more",
    "start": "921300",
    "end": "928350"
  },
  {
    "text": "access there honestly if I want to tweet something else tomorrow it will need access again but I'm not present",
    "start": "928350",
    "end": "933720"
  },
  {
    "text": "tomorrow because I'm probably in a tree on a train so instead of having to ask",
    "start": "933720",
    "end": "938850"
  },
  {
    "text": "me can you give me another access token through the hole process this flow with a refresh token ask the client to get a new access token",
    "start": "938850",
    "end": "945360"
  },
  {
    "text": "using that Refresh token can go to the authorization server and say like hey remember you gave me this Refresh token",
    "start": "945360",
    "end": "950970"
  },
  {
    "text": "a couple of days weeks months years ago I want to use this to get a new access token authorization server can check",
    "start": "950970",
    "end": "957420"
  },
  {
    "text": "everything give the client a new access token and client can independently access the account in on behalf of the",
    "start": "957420",
    "end": "963450"
  },
  {
    "text": "user again that's what a refresh token bus and of course you can access the",
    "start": "963450",
    "end": "968520"
  },
  {
    "text": "resource server if you want to get into the dirty details of how this works it's all HTTP based well let's let's call out",
    "start": "968520",
    "end": "975180"
  },
  {
    "text": "HTTP based everything should be HTTPS but the protocol is HTTP so you send",
    "start": "975180",
    "end": "980580"
  },
  {
    "text": "them a request to this authorization server on Twitter and you indicate that you want to run this authorization code",
    "start": "980580",
    "end": "986490"
  },
  {
    "text": "grant for me I do that by specifying code as a response type like I expect a code as response you provide your client",
    "start": "986490",
    "end": "994530"
  },
  {
    "text": "ID you provide the redirect URI here as well which should match the one you",
    "start": "994530",
    "end": "999690"
  },
  {
    "text": "registered before and a final detail is there's a state parameter again no time to go into detail but you should always",
    "start": "999690",
    "end": "1005870"
  },
  {
    "text": "use the state parameter it prevents certain attacks putting a random value in there and checking it whenever the",
    "start": "1005870",
    "end": "1012380"
  },
  {
    "text": "flow is completed is enough but if you want to know more about that talk to me",
    "start": "1012380",
    "end": "1017420"
  },
  {
    "text": "later and if you if the flow completes if the user has authenticated authorize",
    "start": "1017420",
    "end": "1022580"
  },
  {
    "text": "the application this is what comes back to through the browser towards the client application so you see that this",
    "start": "1022580",
    "end": "1028459"
  },
  {
    "text": "this URL here is used here to make the call the callback PHP page that receives",
    "start": "1028459",
    "end": "1034220"
  },
  {
    "text": "this code which I can now use to exchange that for an access token on the",
    "start": "1034220",
    "end": "1039290"
  },
  {
    "text": "authorization server that exchange works like this it's a back-channel request so it doesn't go through the browser it's",
    "start": "1039290",
    "end": "1045140"
  },
  {
    "text": "against server to server so it can simply use a post it uses the authorization header it basic to",
    "start": "1045140",
    "end": "1050960"
  },
  {
    "text": "transmit client credentials they are embedded in there and it provides the code it got earlier that code is here in",
    "start": "1050960",
    "end": "1058490"
  },
  {
    "text": "the request the client ideas again here and the grant type indicates that the client wants to exchange this code into",
    "start": "1058490",
    "end": "1066050"
  },
  {
    "text": "an access token and that is the authorization code grant flow which is the most complex to be honest but also",
    "start": "1066050",
    "end": "1072320"
  },
  {
    "text": "the most secure oh yeah sorry the response contains the",
    "start": "1072320",
    "end": "1078159"
  },
  {
    "text": "access token which can be used to access protected resources and also the Refresh token as you can see here all right are",
    "start": "1078159",
    "end": "1086769"
  },
  {
    "text": "still good one more and then we can talk about some other things so to recap the",
    "start": "1086769",
    "end": "1093309"
  },
  {
    "text": "authorization code grant gives delegated access to a back-end application it can",
    "start": "1093309",
    "end": "1098619"
  },
  {
    "text": "only be used on deck and applications why because you use this client credentials to exchange this code for a",
    "start": "1098619",
    "end": "1104200"
  },
  {
    "text": "token if you want to do that on a client on a web browser on a mobile application you would have to hard-code your secret",
    "start": "1104200",
    "end": "1110710"
  },
  {
    "text": "internet application so it's going to take someone else like two minutes to actually cut that out and impersonate",
    "start": "1110710",
    "end": "1115960"
  },
  {
    "text": "your client so you should never ever ever do that so this code is only developed if your client can store",
    "start": "1115960",
    "end": "1121809"
  },
  {
    "text": "secrets in a secure way meaning if it's a back-end application very important so",
    "start": "1121809",
    "end": "1127119"
  },
  {
    "text": "Lee also the reason that only this flow gives you a refresh token because it's the only flow that allows the client to",
    "start": "1127119",
    "end": "1132639"
  },
  {
    "text": "authenticate itself to the authorization server scenario number three instead of",
    "start": "1132639",
    "end": "1140109"
  },
  {
    "text": "building this PHP back-end which nobody really likes we want to build a modern JavaScript front-end we have like a",
    "start": "1140109",
    "end": "1145960"
  },
  {
    "text": "hundred frameworks to choose from so we'll pick one and we build our front-end using that framework and in",
    "start": "1145960",
    "end": "1151090"
  },
  {
    "text": "our front-end we want to improve the UI of Twitter we want to make it possible to directly interact with certain tweets",
    "start": "1151090",
    "end": "1158499"
  },
  {
    "text": "we want the user to respond to tweets things like that so we need access to the api's again we need access to",
    "start": "1158499",
    "end": "1163869"
  },
  {
    "text": "retweets access to post new tweets or replies or whatever let's take a look at",
    "start": "1163869",
    "end": "1169359"
  },
  {
    "text": "how we can do that the flow we're going to use here is the implicit grant flow here's how it works",
    "start": "1169359",
    "end": "1175119"
  },
  {
    "text": "note that a client is a front-end application your client is a web",
    "start": "1175119",
    "end": "1180519"
  },
  {
    "text": "application a web page in the browser that's now your clients we don't have a back-end because we don't need it because our client is a front-end",
    "start": "1180519",
    "end": "1187119"
  },
  {
    "text": "JavaScript application it's gonna interact with Twitter directly no need for our own back-end no need for our own data since we only interact with Twitter",
    "start": "1187119",
    "end": "1194249"
  },
  {
    "text": "so the client is gonna ask for access it's typically happens from within the",
    "start": "1194249",
    "end": "1199389"
  },
  {
    "text": "browser so there's no redirect here it's just a navigation to the authorization server",
    "start": "1199389",
    "end": "1205220"
  },
  {
    "text": "it's gonna ask the user to authenticate just like before it's gonna ask user to authorize the application just like",
    "start": "1205220",
    "end": "1211250"
  },
  {
    "text": "before whenever that checks out the authorization server goes back to this",
    "start": "1211250",
    "end": "1216410"
  },
  {
    "text": "redirect URI with an access token this time not an authorization code but an access token directly and that access",
    "start": "1216410",
    "end": "1223100"
  },
  {
    "text": "token grants this client access to the resource server and we're good to go with this access token in step seven we",
    "start": "1223100",
    "end": "1229610"
  },
  {
    "text": "can read the tweets we can allow the user to type a reply and we can post that reply back on that resource server",
    "start": "1229610",
    "end": "1235760"
  },
  {
    "text": "using that access token that's what the implicit grabbed us from the users perspective the user sees a page from",
    "start": "1235760",
    "end": "1244940"
  },
  {
    "text": "the client this is our JavaScript front-end application clicks a button like oh yeah open my feet and then the flow starts so we're navigated to the",
    "start": "1244940",
    "end": "1252110"
  },
  {
    "text": "authorization server page where we are asked to authenticate if necessary we are asked to approve the application if",
    "start": "1252110",
    "end": "1258680"
  },
  {
    "text": "necessary ever sent back to a page from that front-end application that page can",
    "start": "1258680",
    "end": "1265130"
  },
  {
    "text": "now extract the access token from the URL and access protected resources directly and that's what the implicit",
    "start": "1265130",
    "end": "1270830"
  },
  {
    "text": "grant flow does if you look at the requests behind this you can see that",
    "start": "1270830",
    "end": "1276680"
  },
  {
    "text": "they look very similar and we still call the same endpoint but instead of code we now tell it we want and token in",
    "start": "1276680",
    "end": "1282290"
  },
  {
    "text": "response so this tells the authorization server we're running this implicit grant flow we're not doing this authorization",
    "start": "1282290",
    "end": "1287870"
  },
  {
    "text": "code granting but an implicit grant we provided a client ID which is the only thing tying this to our client and we",
    "start": "1287870",
    "end": "1294800"
  },
  {
    "text": "again provided a redirect you arrive the response is gonna go to that redirect",
    "start": "1294800",
    "end": "1300860"
  },
  {
    "text": "URI it's gonna provide an access token in the response directly no refresh",
    "start": "1300860",
    "end": "1307130"
  },
  {
    "text": "token very important detail note how this is a hash and not a question mark this means that this is part of the",
    "start": "1307130",
    "end": "1314090"
  },
  {
    "text": "fragment and the fragment of the URI is never sent to the server whenever the browser loads to URL with a fragment",
    "start": "1314090",
    "end": "1320510"
  },
  {
    "text": "that fragment stays in the browser browser only sends whatever is before that to the server and loads that",
    "start": "1320510",
    "end": "1326900"
  },
  {
    "text": "resource but a fragment is part of the URL but it's never sent over the network so here this makes sense because the",
    "start": "1326900",
    "end": "1332090"
  },
  {
    "text": "access token is intended to be used on the client side and that's what we're doing here there's no additional steps",
    "start": "1332090",
    "end": "1338990"
  },
  {
    "text": "of course this thing gets a bit tricky if the access token expires because that would imply that you have to run the",
    "start": "1338990",
    "end": "1345050"
  },
  {
    "text": "flow again but again that is a very heated debate in this community on how",
    "start": "1345050",
    "end": "1350240"
  },
  {
    "text": "to handle these cases and I'm not gonna go into detail there so if you look at",
    "start": "1350240",
    "end": "1358910"
  },
  {
    "text": "this from the overview point of view delegated the implicit grant gives you delegated access to a front-end",
    "start": "1358910",
    "end": "1364820"
  },
  {
    "text": "application never ever ever use this flow when you're also using a back-end",
    "start": "1364820",
    "end": "1369950"
  },
  {
    "text": "because things will go wrong I can guarantee that a lot of applications mistakenly do this they run the implicit",
    "start": "1369950",
    "end": "1375980"
  },
  {
    "text": "grant for and then they take the access token and ship them off to their back-end and then they do some stuff in the backend through that access token if",
    "start": "1375980",
    "end": "1382340"
  },
  {
    "text": "you do that you will run into serious problems so please don't do that always pick the proper flow for your scenario",
    "start": "1382340",
    "end": "1389330"
  },
  {
    "text": "very important access tokens are obtained directly through the redirect through the fragment of the URI and a",
    "start": "1389330",
    "end": "1396559"
  },
  {
    "text": "front-end application is also not supposed to have access to refresh tokens because front ends are by",
    "start": "1396559",
    "end": "1402080"
  },
  {
    "text": "definition insecure I know that people think like yeah but it's it's a",
    "start": "1402080",
    "end": "1407270"
  },
  {
    "text": "JavaScript framework and I really want this long term access and I'm gonna do this anyway I'm gonna modify the flow a bit to give a refresh token that's a bad",
    "start": "1407270",
    "end": "1413750"
  },
  {
    "text": "idea because the Refresh token is only issued in the other flow because it requires the use of this client secret",
    "start": "1413750",
    "end": "1419690"
  },
  {
    "text": "which no one should know except your client so if you start using refresh tokens without client secrets you're",
    "start": "1419690",
    "end": "1424760"
  },
  {
    "text": "doing it wrong and you're opening yourselves up for serious vulnerabilities if somebody steals that they have eternal access to that",
    "start": "1424760",
    "end": "1431480"
  },
  {
    "text": "back-end system until you explicitly revoke that if that is at all possible and that concludes the client",
    "start": "1431480",
    "end": "1438590"
  },
  {
    "text": "perspective I know this is a very brief overview so I'll be very happy to answer any questions after the talk if you have",
    "start": "1438590",
    "end": "1444890"
  },
  {
    "text": "more specific ones let's talk about the",
    "start": "1444890",
    "end": "1453710"
  },
  {
    "text": "resource service perspective if you're a resource server you get an access token",
    "start": "1453710",
    "end": "1459260"
  },
  {
    "text": "and you're supposed to make a decision with that access token note that the access token is sent to",
    "start": "1459260",
    "end": "1464840"
  },
  {
    "text": "you by the client one of the common misconceptions is that clients are supposed to read access to and supposed",
    "start": "1464840",
    "end": "1470660"
  },
  {
    "text": "to understand what they mean but as far as the client is concerned the access token can just as well be dinosaur it doesn't matter what it is",
    "start": "1470660",
    "end": "1477020"
  },
  {
    "text": "can be dinosaur a bird dog or some funky token whatever it doesn't matter what",
    "start": "1477020",
    "end": "1484010"
  },
  {
    "text": "matters is that the resource server can do something with it these are two access tokens because you",
    "start": "1484010",
    "end": "1490340"
  },
  {
    "text": "have two different kinds commonly used in OAuth one kind is called a reference",
    "start": "1490340",
    "end": "1495470"
  },
  {
    "text": "token and the other one is called a self-contained talk that's like about the reference token first a reference",
    "start": "1495470",
    "end": "1502550"
  },
  {
    "text": "token is actually just an identifier it's an identifier that points to a",
    "start": "1502550",
    "end": "1507740"
  },
  {
    "text": "piece of our set of metadata kept by the authorization server so whenever you give that to a client you're not",
    "start": "1507740",
    "end": "1513350"
  },
  {
    "text": "disclosing any sensitive information you're only giving it an identifier and that identifier will later be used by",
    "start": "1513350",
    "end": "1519200"
  },
  {
    "text": "the resource server to fetch information from the authorization server and with that information it can make a decision",
    "start": "1519200",
    "end": "1525830"
  },
  {
    "text": "and that process is called token introspection that's one of the things in OA that got specified a bit later",
    "start": "1525830",
    "end": "1532730"
  },
  {
    "text": "than the main spec here's how token introspection works so you have your client you have your resource server and",
    "start": "1532730",
    "end": "1538790"
  },
  {
    "text": "you have your authorization server they have different endpoints in this case it's a token endpoint that is being used",
    "start": "1538790",
    "end": "1544250"
  },
  {
    "text": "so wherever the client access the protected resource with a reference token it simply sends this identifier",
    "start": "1544250",
    "end": "1549590"
  },
  {
    "text": "one way or another usually it's the authorization header with there and then the identifier in there the resource",
    "start": "1549590",
    "end": "1556880"
  },
  {
    "text": "server uses that to exchange that identifier into a set of metadata set of",
    "start": "1556880",
    "end": "1564050"
  },
  {
    "text": "stored claims about this user the authorization server provides that and with those claims the server can make an",
    "start": "1564050",
    "end": "1571400"
  },
  {
    "text": "access control decision that claim is going to say like oh yeah this was issued for that client and it's associated with this Twitter profile and",
    "start": "1571400",
    "end": "1579320"
  },
  {
    "text": "yes this token is still valid here's an example of how to do that it's again a",
    "start": "1579320",
    "end": "1584930"
  },
  {
    "text": "back-channel request it's server-to-server communication you do a post request you send it the token",
    "start": "1584930",
    "end": "1591260"
  },
  {
    "text": "you got from the client you tell the authorization serve this should be an access token can you check that for me",
    "start": "1591260",
    "end": "1596810"
  },
  {
    "text": "please and that's what you get in return the authorization services like oh yeah I know these identifiers it's still",
    "start": "1596810",
    "end": "1603500"
  },
  {
    "text": "valid it's still active it's not been revoked you hasn't canceled this access token it's associated with this particular client",
    "start": "1603500",
    "end": "1610090"
  },
  {
    "text": "and associated with this subject this is a unique identifier for the subject this",
    "start": "1610090",
    "end": "1615160"
  },
  {
    "text": "can be an ID this can be this can also be a full name or whatever the system",
    "start": "1615160",
    "end": "1620260"
  },
  {
    "text": "wants to use and that is what token introspection is so if we go quickly back to this image the resource server",
    "start": "1620260",
    "end": "1628930"
  },
  {
    "text": "needs to do this round-trip every time it wants to resolve such a reference",
    "start": "1628930",
    "end": "1634630"
  },
  {
    "text": "token it's a reference token by design it's more secure because the authorization server stays in control of",
    "start": "1634630",
    "end": "1641020"
  },
  {
    "text": "this token it has all the metadata here so whenever you say like oh crap I lost my phone and it my phone has an",
    "start": "1641020",
    "end": "1647710"
  },
  {
    "text": "application and application has access to Twitter and I want to revoke that you can go to Twitter and say like oh yeah",
    "start": "1647710",
    "end": "1652870"
  },
  {
    "text": "refocus access please I trigger can forget that information and that identifier now becomes invalid that's",
    "start": "1652870",
    "end": "1659470"
  },
  {
    "text": "one of the powers of using reference tokens so again I'm gonna compare them",
    "start": "1659470",
    "end": "1666220"
  },
  {
    "text": "to self-contained talk and so reference tokens are an identifier keep that in mind full control for the authorization",
    "start": "1666220",
    "end": "1672280"
  },
  {
    "text": "server but requires this back channel request in reality doing that",
    "start": "1672280",
    "end": "1677560"
  },
  {
    "text": "back-channel request on every single incoming API call is probably not the best idea it's gonna put a lot of load",
    "start": "1677560",
    "end": "1683620"
  },
  {
    "text": "on the authorization server for one and it's a lot of communication between services for every call that you have to",
    "start": "1683620",
    "end": "1689260"
  },
  {
    "text": "do so reality what we see in systems being implementing this is they cache these access tokens or these references",
    "start": "1689260",
    "end": "1697450"
  },
  {
    "text": "for a short amount of time so the resource server can decide like okay I'm not gonna resolve this every time",
    "start": "1697450",
    "end": "1702520"
  },
  {
    "text": "because we have a lot of API calls so I'm gonna catch this for two to three minutes that's acceptable but of course",
    "start": "1702520",
    "end": "1708820"
  },
  {
    "text": "it loses a bit of control so if the user would revoke that in the meantime then the act the reference stalker will still",
    "start": "1708820",
    "end": "1715510"
  },
  {
    "text": "be cached for two to three minutes that's downside of caching and that's definitely something you might want to take into account let's talk about the",
    "start": "1715510",
    "end": "1724210"
  },
  {
    "text": "other side of things I'll talk about self-contained tokens the name says itself a self-contained token contains",
    "start": "1724210",
    "end": "1729970"
  },
  {
    "text": "everything you need to make your authorization decisions this is what a",
    "start": "1729970",
    "end": "1735250"
  },
  {
    "text": "self-contained token might look like so it's a JSON web token a chase event and",
    "start": "1735250",
    "end": "1740630"
  },
  {
    "text": "I'm gonna talk about the details about JSON web tokens but the important part of a JSON web token is the payload and a",
    "start": "1740630",
    "end": "1747230"
  },
  {
    "text": "payload is a set of claims that are protected in one way or another so",
    "start": "1747230",
    "end": "1752510"
  },
  {
    "text": "usually a JSON web token is signed to ensure that nobody can modify these claims without being detected",
    "start": "1752510",
    "end": "1758210"
  },
  {
    "text": "and these claims are generated by the authorization server the token assigned",
    "start": "1758210",
    "end": "1763340"
  },
  {
    "text": "by the authorization server and your resource server can use them to decide is this allowed or not so what it needs",
    "start": "1763340",
    "end": "1769610"
  },
  {
    "text": "to do is it needs to verify the signature of this token and whenever the signature checks out it can look at the",
    "start": "1769610",
    "end": "1776540"
  },
  {
    "text": "data in there like oh yeah this was Philippe making that request oh yeah no",
    "start": "1776540",
    "end": "1782000"
  },
  {
    "text": "no and it's indeed for the proper client so and it comes from Twitter so yes I'm gonna trust this data I'm gonna decide",
    "start": "1782000",
    "end": "1787910"
  },
  {
    "text": "yes Philippe is allowed to make or the client is allowed to make this call on behalf of Philippa to post this tweet to",
    "start": "1787910",
    "end": "1793580"
  },
  {
    "text": "that Twitter timeline and that is the job of the resource server big benefit",
    "start": "1793580",
    "end": "1799330"
  },
  {
    "text": "self-contained means no roundtrip you don't have to go back to the authorization server over and over again",
    "start": "1799330",
    "end": "1804500"
  },
  {
    "text": "to check what is this identifier oh yeah thank you no you can simply do it with the token itself so you win a lot in",
    "start": "1804500",
    "end": "1811010"
  },
  {
    "text": "that department the downside is you have no control over these access tokens they're",
    "start": "1811010",
    "end": "1816740"
  },
  {
    "text": "self-contained if the user goes to the authorization service says I want to revoke this token you can maybe revoke",
    "start": "1816740",
    "end": "1823070"
  },
  {
    "text": "it but how will the resource server ever know that it's revoked there's no communication anymore so as long as this",
    "start": "1823070",
    "end": "1829220"
  },
  {
    "text": "token stays fell it it can be used by everyone who has access to that token so if I can steal your token and it remains",
    "start": "1829220",
    "end": "1836780"
  },
  {
    "text": "valid for five months then you can have five point four months because I now have five months of access to that",
    "start": "1836780",
    "end": "1843380"
  },
  {
    "text": "back-end API in your name which is very problematic so these tokens should be short-lived it is one of the primary",
    "start": "1843380",
    "end": "1850730"
  },
  {
    "text": "security considerations in the specifications use short-lived access tokens and the people implement this in",
    "start": "1850730",
    "end": "1857930"
  },
  {
    "text": "real life in the idea whatever two weeks good to go oh sure it works but there",
    "start": "1857930",
    "end": "1864800"
  },
  {
    "text": "are definitely risks and involved with that if I'm not mistaken the the recent Facebook troubles was related to access",
    "start": "1864800",
    "end": "1870920"
  },
  {
    "text": "tokens and I think they were valid for 60 days so yeah there are risks involved there",
    "start": "1870920",
    "end": "1876139"
  },
  {
    "text": "so a self-contained token contains all the metadata you need to make decisions",
    "start": "1876139",
    "end": "1882470"
  },
  {
    "text": "they're stored on the client so they're out of freed from the authorization server meaning that you cannot easily revoke them there are",
    "start": "1882470",
    "end": "1888749"
  },
  {
    "text": "mechanisms to do that but they're difficult they're tricky resource",
    "start": "1888749",
    "end": "1894450"
  },
  {
    "text": "servers need to check the integrity of a self-contained token before using them very very important if you forget that",
    "start": "1894450",
    "end": "1901049"
  },
  {
    "text": "things will go around really really quickly that's the use of access tokens",
    "start": "1901049",
    "end": "1911940"
  },
  {
    "text": "you may have noticed in the request before that there was this parameter called scope I skimmed over it because I",
    "start": "1911940",
    "end": "1919320"
  },
  {
    "text": "knew I was going to talk about it later so I didn't mention before scopes are",
    "start": "1919320",
    "end": "1924720"
  },
  {
    "text": "actually quite an interesting property because the scope allows you to limit the permissions associated with an",
    "start": "1924720",
    "end": "1931289"
  },
  {
    "text": "access token so if you request an access token as the client you can provide the scope remote like hey authorization",
    "start": "1931289",
    "end": "1937409"
  },
  {
    "text": "server I want access to this account and I want to read access or write access and the authorization server is going to",
    "start": "1937409",
    "end": "1943320"
  },
  {
    "text": "ask the user this application is trying to access your account that wants to read your Twitter feed and writes",
    "start": "1943320",
    "end": "1948359"
  },
  {
    "text": "postings to your Twitter feed do you want that and you can decide yes or no and if you don't want that you choose no",
    "start": "1948359",
    "end": "1954929"
  },
  {
    "text": "of course and the whole flow fails with an error and if you click yes then",
    "start": "1954929",
    "end": "1959999"
  },
  {
    "text": "authorization server will associate the Scopes with the access token this is very useful a very practical example in",
    "start": "1959999",
    "end": "1967529"
  },
  {
    "text": "real life I bought a scanner which can scan to Evernote which I thought it was a very cool feature no more manual",
    "start": "1967529",
    "end": "1973229"
  },
  {
    "text": "putting things in Evernote and when I set it up it used a lot and it asked full access to my Evernote account like",
    "start": "1973229",
    "end": "1979349"
  },
  {
    "text": "hey we can read all your notes and notebooks and we can write notes and was like why do you need to read all that",
    "start": "1979349",
    "end": "1984960"
  },
  {
    "text": "information my whole wife is in there I'm I'm not gonna give you access to that especially not because your other",
    "start": "1984960",
    "end": "1990299"
  },
  {
    "text": "software sucks so I'm not sure that your what implementation is gonna be any good so these things actually do work in",
    "start": "1990299",
    "end": "1996629"
  },
  {
    "text": "practice scopes are undefined in what the OAuth specs us like yeah you can put",
    "start": "1996629",
    "end": "2003769"
  },
  {
    "text": "your scopes in this parameter but yeah put put in there whatever you you're gone look at a real example this",
    "start": "2003769",
    "end": "2012300"
  },
  {
    "text": "is how the users ask for permissions on for example slick these are the scopes",
    "start": "2012300",
    "end": "2017670"
  },
  {
    "text": "offered by selectable a very small portion of the scopes they have chosen to have very fine-grained scopes based",
    "start": "2017670",
    "end": "2024780"
  },
  {
    "text": "on the objects and the level of access so for example you have an arts cope which gives right access to channels and",
    "start": "2024780",
    "end": "2031770"
  },
  {
    "text": "that is associated with this method so if you want to use any of these methods you need write access the needed scope",
    "start": "2031770",
    "end": "2038580"
  },
  {
    "text": "granted by the user and they make a distinction between user related clients",
    "start": "2038580",
    "end": "2043950"
  },
  {
    "text": "and both related clients again so that the user has a very good idea of what exactly he is granting to a client and",
    "start": "2043950",
    "end": "2051020"
  },
  {
    "text": "the best practice for a client is to request as many scopes as you can get as",
    "start": "2051020",
    "end": "2057149"
  },
  {
    "text": "little scopes as you can get away with sorry as little scopes as you can get away with so if you're only showing",
    "start": "2057150",
    "end": "2062909"
  },
  {
    "text": "tweets to a user there's no point in asking for read and write access just ask root access a very important",
    "start": "2062910",
    "end": "2069450"
  },
  {
    "text": "consideration in practice you can go completely nuts with scopes so if your Google you have a lot of api's they have",
    "start": "2069450",
    "end": "2075899"
  },
  {
    "text": "chosen to use URLs as scopes so of course if you request like 25,000 of",
    "start": "2075900",
    "end": "2081419"
  },
  {
    "text": "them it's probably gonna be a very long request but you're not supposed to do that you're probably not building a",
    "start": "2081419",
    "end": "2086550"
  },
  {
    "text": "client that needs both access to Google Analytics and Google Docs spreadsheets at the same time probably me I don't",
    "start": "2086550",
    "end": "2094080"
  },
  {
    "text": "know what you're building but you get the idea but you can see interesting things like you have a full access to",
    "start": "2094080",
    "end": "2100050"
  },
  {
    "text": "analytics scope like view and manage data but you also have a read-only scope and things like deleting users or",
    "start": "2100050",
    "end": "2107870"
  },
  {
    "text": "deleting requests or deleting data from analytics is a separate scope which is",
    "start": "2107870",
    "end": "2113940"
  },
  {
    "text": "not even part of the view and manage data scope because it's so sensitive that they explicitly put it separately",
    "start": "2113940",
    "end": "2120030"
  },
  {
    "text": "and again if you request an access to a commit only the read-only scope and somebody manages to steal that the worst",
    "start": "2120030",
    "end": "2127140"
  },
  {
    "text": "they can do is read data at least they cannot delete or modify any data so again it's your responsibility as an",
    "start": "2127140",
    "end": "2133980"
  },
  {
    "text": "implementer of the client to choose the Scopes that suit your client and to keep them as minimal as",
    "start": "2133980",
    "end": "2140760"
  },
  {
    "text": "and when you do that this mechanism actually works quite well of course it's the responsibility of the resource",
    "start": "2140760",
    "end": "2147360"
  },
  {
    "text": "server to check these scopes they are part of the metadata associated with a token so whenever the token comes in the",
    "start": "2147360",
    "end": "2153360"
  },
  {
    "text": "resource servers you check what you're trying to do post the tweet do you have write access yes okay apart from the other checks",
    "start": "2153360",
    "end": "2160830"
  },
  {
    "text": "that are done of course that is how scopes actually do work very well to contain permissions associated with an",
    "start": "2160830",
    "end": "2167730"
  },
  {
    "text": "access token so far for dive into Ord",
    "start": "2167730",
    "end": "2176130"
  },
  {
    "text": "let's talk about open early connect a statement at the bottom might not be very accurate I'm fully aware of that",
    "start": "2176130",
    "end": "2183030"
  },
  {
    "text": "but open ID Connect is about authentication because how do you do authentication with all odds you can't",
    "start": "2183030",
    "end": "2189960"
  },
  {
    "text": "really evolve people think they can do a little bit it's actually very tricky so if you run this hole or outflow at the",
    "start": "2189960",
    "end": "2195480"
  },
  {
    "text": "end your client gets an access token it could fetch user information with that",
    "start": "2195480",
    "end": "2201840"
  },
  {
    "text": "access token that is typically how authentication is implemented but is that really authentic Asian how do you",
    "start": "2201840",
    "end": "2209790"
  },
  {
    "text": "know if the user is authenticated well it's kind of implicit because you assume that the authorization server does some",
    "start": "2209790",
    "end": "2215490"
  },
  {
    "text": "form of authentication but is it fresh when the user intent kay maybe the user",
    "start": "2215490",
    "end": "2222330"
  },
  {
    "text": "did that five months ago and his session with the authorization server is still valid does that count as an",
    "start": "2222330",
    "end": "2229440"
  },
  {
    "text": "authentication for the client if the client uses this user info to authenticate the user is that a fellow",
    "start": "2229440",
    "end": "2234900"
  },
  {
    "text": "authentication not really and every client makes a mistake then you don't",
    "start": "2234900",
    "end": "2240840"
  },
  {
    "text": "even know whether the access token is fell out and finally where do you get that user info on Twitter it's on that",
    "start": "2240840",
    "end": "2246390"
  },
  {
    "text": "endpoint and on Facebook it's on that endpoint and then you have Google it's on that endpoint and you get the idea",
    "start": "2246390",
    "end": "2251610"
  },
  {
    "text": "so if you want to implement this login with Facebook Twitter and Google you're very likely to have three different implementations which everybody hates",
    "start": "2251610",
    "end": "2258680"
  },
  {
    "text": "nobody wants that so people actually messing this up really really badly and",
    "start": "2258680",
    "end": "2264630"
  },
  {
    "text": "that's where open-ended Connect comes in operated Connect is built on poet it follows the same principle of delegation",
    "start": "2264630",
    "end": "2271200"
  },
  {
    "text": "but instead of resulting in an access token it results the issuing of an identity token so the",
    "start": "2271200",
    "end": "2277420"
  },
  {
    "text": "client again starts the flow requests identity information the user authenticates grants access and in the",
    "start": "2277420",
    "end": "2284109"
  },
  {
    "text": "end the authorization server gives an identity token to the client and that identity token is going to contain",
    "start": "2284109",
    "end": "2290109"
  },
  {
    "text": "information about who the user is when he authenticated and some other properties and with that the client can",
    "start": "2290109",
    "end": "2296920"
  },
  {
    "text": "decide to why is this fella yes or no and if it is I'm gonna authorize or",
    "start": "2296920",
    "end": "2302140"
  },
  {
    "text": "authenticate this user and if it isn't I'm gonna reject this and that's what open ID Connect is really about of",
    "start": "2302140",
    "end": "2309640"
  },
  {
    "text": "course you might want to get additional information from the user and that's what you have the user info endpoint for",
    "start": "2309640",
    "end": "2315700"
  },
  {
    "text": "an open ID Connect instead of allowing the authorization server to choose like yeah we're gonna put that wherever you",
    "start": "2315700",
    "end": "2321190"
  },
  {
    "text": "want no if you are implementing already connect you provide one endpoint that's called user info no questions that's",
    "start": "2321190",
    "end": "2328060"
  },
  {
    "text": "just how it works and that's where the client can actually get that information from and this is built on part because",
    "start": "2328060",
    "end": "2334930"
  },
  {
    "text": "it used it flows but it makes a lot of decisions for you where oh it is very open like here you can use this mechanism implement it however you want",
    "start": "2334930",
    "end": "2341380"
  },
  {
    "text": "openly Connect says this is how you do it that's what you get out of it this is data in the identity token and that is",
    "start": "2341380",
    "end": "2348280"
  },
  {
    "text": "how you implement this and this becomes interoperable Google influences if you",
    "start": "2348280",
    "end": "2354070"
  },
  {
    "text": "log in with Google you're using OpenID Connect but if you would use other services if they also implement OpenID",
    "start": "2354070",
    "end": "2359410"
  },
  {
    "text": "Connect it's the same implementation which is very nice and very clean in",
    "start": "2359410",
    "end": "2364990"
  },
  {
    "text": "your application this is an example of an identity token you might recognize",
    "start": "2364990",
    "end": "2370060"
  },
  {
    "text": "the format by now this is again a JSON web token it's signed by the authorization server so if you would",
    "start": "2370060",
    "end": "2375160"
  },
  {
    "text": "choose login with Google you'll get a token from Google and it's signed by Google so you're the client application",
    "start": "2375160",
    "end": "2380560"
  },
  {
    "text": "you can verify this is token sign my Google oh yeah this is it fell it oh",
    "start": "2380560",
    "end": "2385690"
  },
  {
    "text": "yeah okay now I have some information the SUV claim is a unique identifier",
    "start": "2385690",
    "end": "2392130"
  },
  {
    "text": "representing the user which is in your case not very useful because it's Google's ID I don't know but you also",
    "start": "2392130",
    "end": "2397930"
  },
  {
    "text": "get this email at the bottom and that email will for example allow you to link",
    "start": "2397930",
    "end": "2404109"
  },
  {
    "text": "the identity of that user to something you concept in your application so you can",
    "start": "2404109",
    "end": "2410080"
  },
  {
    "text": "now look up in your own database like do I have user with flip at pragmatic lips cute come on yeah here's the guy so this",
    "start": "2410080",
    "end": "2415960"
  },
  {
    "text": "token is fella it's from that guy so I'm gonna link it to his account and now he's authenticated as Phillip in this",
    "start": "2415960",
    "end": "2421450"
  },
  {
    "text": "buffer application or whatever is using it you can see there's a few other claims involved here as well um maybe",
    "start": "2421450",
    "end": "2429400"
  },
  {
    "text": "one of the important things is there's an authentication time in here so you know exactly when the authorization",
    "start": "2429400",
    "end": "2435310"
  },
  {
    "text": "server has authenticated to user and you can decide is this acceptable yes or no if it's a high value transaction that",
    "start": "2435310",
    "end": "2441610"
  },
  {
    "text": "you're doing with this in an enterprises and not with login with Google please but in an enterprise system then",
    "start": "2441610",
    "end": "2448300"
  },
  {
    "text": "you might want to require a fresh authentication because maybe it's not valid if the user logged in yesterday no",
    "start": "2448300",
    "end": "2454090"
  },
  {
    "text": "you want fresh authentication the ACR indicates the strength of the authentication that's useful to indicate",
    "start": "2454090",
    "end": "2459370"
  },
  {
    "text": "whether the user used multi-factor authentication yes or no because sometimes you might require that and",
    "start": "2459370",
    "end": "2464560"
  },
  {
    "text": "this is a protocol designed to provide you that information and that's what open ID Connect brings to the table open",
    "start": "2464560",
    "end": "2473980"
  },
  {
    "text": "early connect is based on art and offers three flows which are actually very similar to the OAuth flow that we",
    "start": "2473980",
    "end": "2480190"
  },
  {
    "text": "discussed before I'm gonna quickly go over them and then I'm gonna wrap up so we have time for one or two questions at",
    "start": "2480190",
    "end": "2486190"
  },
  {
    "text": "the end there's an implicit grant flow used for front-end applications only",
    "start": "2486190",
    "end": "2491320"
  },
  {
    "text": "that never changes implicit grant means implicit client authentication as in not really client authentication so only",
    "start": "2491320",
    "end": "2497770"
  },
  {
    "text": "front-ends it works just like the other flow so the client is gonna start the flow but instead of giving the response",
    "start": "2497770",
    "end": "2504940"
  },
  {
    "text": "type token it now says I also want an identity token an ID token that",
    "start": "2504940",
    "end": "2510220"
  },
  {
    "text": "indicates I'm running open ID connect here I need a identity information from the user from you it's gonna do the",
    "start": "2510220",
    "end": "2517150"
  },
  {
    "text": "dance with the user authorization yes of course and here we go it gives an access",
    "start": "2517150",
    "end": "2523030"
  },
  {
    "text": "token and an identity token the identity token allows the front-end to authenticate the user which in a",
    "start": "2523030",
    "end": "2529450"
  },
  {
    "text": "front-end application doesn't mean very much but you get the idea now can say welcome back for this Thank You",
    "start": "2529450",
    "end": "2535510"
  },
  {
    "text": "front-end application the access token in this regard can be used to make calls",
    "start": "2535510",
    "end": "2540910"
  },
  {
    "text": "to a protected resource like which part it's port rolled into one so that you can actually do",
    "start": "2540910",
    "end": "2546700"
  },
  {
    "text": "something useful afterwards with api's as well you don't have to use that this is optional the use of the access token",
    "start": "2546700",
    "end": "2552970"
  },
  {
    "text": "but it's often done together that's the implicit grant front and only",
    "start": "2552970",
    "end": "2560339"
  },
  {
    "text": "authorization code grant very quickly the same setup as before you the client",
    "start": "2561120",
    "end": "2566830"
  },
  {
    "text": "starts the whole dance with a redirect again this doesn't change it's still code you go to the hops of",
    "start": "2566830",
    "end": "2574510"
  },
  {
    "text": "authenticating the user granting authorization you redirect with authorization codes which goes to the",
    "start": "2574510",
    "end": "2579520"
  },
  {
    "text": "client and that's where operandi Connect comes into play the client now exchanges this authorization code using suppliant",
    "start": "2579520",
    "end": "2585880"
  },
  {
    "text": "credentials and gets an identity token and an access token and that identity token again authenticates the user in",
    "start": "2585880",
    "end": "2592870"
  },
  {
    "text": "this case it's a back-end system so it's going to look up in its own database or yet that's associated with this user so",
    "start": "2592870",
    "end": "2598180"
  },
  {
    "text": "now I know that this user is logged in instead of doing the authentication directly we got that information from",
    "start": "2598180",
    "end": "2604600"
  },
  {
    "text": "here and we now know that that user is effectively logged in into the backend so we set up our own session or whatever",
    "start": "2604600",
    "end": "2610750"
  },
  {
    "text": "we do and we do our enable interaction with the user and again we can use the access token if we want to and then the",
    "start": "2610750",
    "end": "2618400"
  },
  {
    "text": "new one sorry this is for back-end applications that's what we covered and then the new one is",
    "start": "2618400",
    "end": "2624910"
  },
  {
    "text": "the hybrid flow this one is its well it's new but it's not really new if you",
    "start": "2624910",
    "end": "2630520"
  },
  {
    "text": "understand this workflow is it just helps you get the identity token quicker in the client so essentially what you do",
    "start": "2630520",
    "end": "2637300"
  },
  {
    "text": "is you start the same flow but instead of only acts requesting a code you also ask for an identity token in this step",
    "start": "2637300",
    "end": "2645060"
  },
  {
    "text": "so we're gonna do the whole dance and we're gonna get an authorization code and you're talking directly in the URL",
    "start": "2645060",
    "end": "2653290"
  },
  {
    "text": "which will make it end up directly in the client allowing the client to attend to authenticate the user at that point",
    "start": "2653290",
    "end": "2659740"
  },
  {
    "text": "without having to do this spectrum or request to exchange the code for the access token and it's open first so it",
    "start": "2659740",
    "end": "2665260"
  },
  {
    "text": "saves you time it's quicker it's more efficient and it's often used in practice because of these reasons and of",
    "start": "2665260",
    "end": "2672250"
  },
  {
    "text": "course then you can still get your access token to access your protected resources so if",
    "start": "2672250",
    "end": "2677820"
  },
  {
    "text": "you put this back together again the identity token is intended for the",
    "start": "2677820",
    "end": "2683369"
  },
  {
    "text": "back-end application very important if you are using this hybrid flow you need",
    "start": "2683369",
    "end": "2689280"
  },
  {
    "text": "to ensure that this identity token is intended for your client there are many implementations that",
    "start": "2689280",
    "end": "2696119"
  },
  {
    "text": "actually do this and then they accept any identity token that comes in meaning that if I have a client that you just",
    "start": "2696119",
    "end": "2702270"
  },
  {
    "text": "log in with Google and if you have a client that logged into the Google if you are not checking the audience I can",
    "start": "2702270",
    "end": "2709710"
  },
  {
    "text": "give you an access token identity token issued from my client and you will accept that meaning that I could take something from my client and use that to",
    "start": "2709710",
    "end": "2716220"
  },
  {
    "text": "log in as a user of your application because of a vulnerability and this is actually very very common in already",
    "start": "2716220",
    "end": "2721680"
  },
  {
    "text": "connect scenarios and that's why this is so important there's other checks that need to be done but this is really",
    "start": "2721680",
    "end": "2726900"
  },
  {
    "text": "really crucial because there's at that step no client credentials being used no secret nothing linking to this code I",
    "start": "2726900",
    "end": "2735619"
  },
  {
    "text": "know everybody is like filled up until here with flows and tokens and codes to",
    "start": "2736910",
    "end": "2743790"
  },
  {
    "text": "remember part is a mechanism to delegate access on behalf of the user there are",
    "start": "2743790",
    "end": "2749700"
  },
  {
    "text": "some other use cases but the general difficult flows in allowed allow an application to access a resource on",
    "start": "2749700",
    "end": "2756270"
  },
  {
    "text": "behalf of the resource owner the user that is associated with that resource and that's the only thing you should do",
    "start": "2756270",
    "end": "2762540"
  },
  {
    "text": "it on unless of course you have no other choice for example Facebook has their",
    "start": "2762540",
    "end": "2768869"
  },
  {
    "text": "own authentication protocol on top of odd which is not open any connect but if you have a choice in an enterprise set",
    "start": "2768869",
    "end": "2774840"
  },
  {
    "text": "up you will have a choice if you deploy your own authorization server if you need authentication",
    "start": "2774840",
    "end": "2780330"
  },
  {
    "text": "that's radios use open addy connect part is not about authentication smart delegation open ID connect offers you",
    "start": "2780330",
    "end": "2787380"
  },
  {
    "text": "identity information is designed for authentication in these ways and actually handles a lot of more corner",
    "start": "2787380",
    "end": "2794580"
  },
  {
    "text": "cases than the ones I have been able to discuss here and that's what these things really are about and I hope that",
    "start": "2794580",
    "end": "2800820"
  },
  {
    "text": "that's the thing you take away and if there's another thing you need to remember always use the correct flow",
    "start": "2800820",
    "end": "2806900"
  },
  {
    "text": "look it's not that hard once you know that you need to look for this look what is the proper flow from application and",
    "start": "2806900",
    "end": "2813140"
  },
  {
    "text": "actually use that proper flow and that concludes the talk thanks you thank you",
    "start": "2813140",
    "end": "2819530"
  },
  {
    "text": "for listening and if you have any questions I'd be happy to answer them",
    "start": "2819530",
    "end": "2824440"
  },
  {
    "text": "you",
    "start": "2828480",
    "end": "2830540"
  }
]