[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "Hello everyone. My name is Christian Romney and I am a director\nof engineering at Nubank in the flexible,",
    "start": "13290",
    "end": "20630"
  },
  {
    "text": "engineering alliance. And today, it's my distinct pleasure to bring\nto you my friend and mentor of many years,",
    "start": "20630",
    "end": "28700"
  },
  {
    "text": "Russ Olsen. Russ Olsen, say a few words to introduce yourself\nto our viewers.",
    "start": "28700",
    "end": "33810"
  },
  {
    "text": "Hey. Well, thanks, Christian. I'm Russ Olsen. I am also a Director of software engineering\nat Nubank and in my spare time, I've written",
    "start": "33810",
    "end": "45200"
  },
  {
    "text": "a few programming books, most recently \"Getting\nClojure\", I also wrote \"Eloquent Ruby\" many years ago.",
    "start": "45200",
    "end": "50860"
  },
  {
    "text": "I do a fair bit of conference speaking when\nthe world is a little more normal or at least",
    "start": "50860",
    "end": "56670"
  },
  {
    "text": "I did when it was, and it is great to be here. Yeah, it is.",
    "start": "56670",
    "end": "62430"
  },
  {
    "text": "It's going to be fun today. All right. So, Russ Olsen, we're here to talk about functional\nprogramming today.",
    "start": "62430",
    "end": "70180"
  },
  {
    "start": "65000",
    "end": "198000"
  },
  {
    "text": "I guess that would be the perfect icebreaker. Why don't you tell us? What exactly is functional programming?",
    "start": "70180",
    "end": "77690"
  },
  {
    "text": "Yes! Functional programming, it's this...it's funny,\nif you look on the internet and you Google",
    "start": "77690",
    "end": "85890"
  },
  {
    "text": "or something functional programming, you get\nall of these sort of mysterious, almost Zen-like",
    "start": "85890",
    "end": "90979"
  },
  {
    "text": "statements about how it changes everything. I think it has this perception of being this,\nlike, mysterious, almost philosophical approach",
    "start": "90980",
    "end": "103280"
  },
  {
    "text": "to programming. Fundamentally, functional programming is a\ndifferent way of looking at programming that",
    "start": "103280",
    "end": "111880"
  },
  {
    "text": "makes building programs a bit simpler. It doesn't solve all of your problems, it\nmakes some of your problems easier to deal",
    "start": "111880",
    "end": "120140"
  },
  {
    "text": "with, it makes your programs a little easier\nto understand.",
    "start": "120140",
    "end": "126100"
  },
  {
    "text": "And if I sound like I'm trying to undersell\nit, I'm really not. What I'm trying to do is, sort of, take away\nthe mystery and the darkness of it.",
    "start": "126100",
    "end": "139110"
  },
  {
    "text": "Functional programming is fundamentally this\nidea, if you are an object-oriented programmer,",
    "start": "139110",
    "end": "144659"
  },
  {
    "text": "you tend to take for granted things like classes\nand inheritance and methods and fields and",
    "start": "144659",
    "end": "150340"
  },
  {
    "text": "all that kind of stuff. Functional programming is the idea that you\ncan essentially replace all of that with a",
    "start": "150340",
    "end": "160019"
  },
  {
    "text": "few simple tools, a few simple programming\ntools. So, it doesn't change everything about the\nway you code.",
    "start": "160019",
    "end": "171029"
  },
  {
    "text": "It changes a lot of things but, fundamentally,\nit is the idea that one way to look at it",
    "start": "171029",
    "end": "178620"
  },
  {
    "text": "is that it is the idea that you can take a\nlot of the complicated machinery that you",
    "start": "178620",
    "end": "184999"
  },
  {
    "text": "might be using if you're an object-oriented\nprogrammer and replace it with some simpler",
    "start": "184999",
    "end": "190200"
  },
  {
    "text": "things, which I think every programmer knows. You make it simpler and the code is easier\nto understand and all of that kind of stuff.",
    "start": "190200",
    "end": "198719"
  },
  {
    "start": "198000",
    "end": "554000"
  },
  {
    "text": "I think, it's a good segway into the next\nquestion I have for you. I think you're beginning to highlight some\nof the advantages of functional programming",
    "start": "198719",
    "end": "206090"
  },
  {
    "text": "but maybe explore that a little bit. What do you think the advantages of programming\nand the functional styles are for you?",
    "start": "206090",
    "end": "213698"
  },
  {
    "text": "Well, so, back up and talk about what the\ntools of functional programming are, okay?",
    "start": "213699",
    "end": "220719"
  },
  {
    "text": "Sure. You know, the first tool of functional programming\nare these things we call pure functions which",
    "start": "220719",
    "end": "228609"
  },
  {
    "text": "always, it sounds like it's sort of a good/bad,\nkind of evil, dark side, light side kind of",
    "start": "228609",
    "end": "235700"
  },
  {
    "text": "thing, my functions are pure. A pure function is a function that just computes\nsomething from its arguments and returns a",
    "start": "235700",
    "end": "242680"
  },
  {
    "text": "result. That's it, right? So, every programmer, since day one, has been\ndealing with pure functions.",
    "start": "242680",
    "end": "250700"
  },
  {
    "text": "Things like all of the math functions, the\nabsolute value is a pure function, you can",
    "start": "250700",
    "end": "256799"
  },
  {
    "text": "think of addition as a pure function, right? Takes two arguments, the two numbers you're\nadding together, and produce a result.",
    "start": "256799",
    "end": "263889"
  },
  {
    "text": "And the key thing with pure functions is that\nthey don't perpetuate any side effects.",
    "start": "263889",
    "end": "269300"
  },
  {
    "text": "A pure function doesn't read from a file,\nit doesn't write to a file, it doesn't update a database.",
    "start": "269300",
    "end": "275570"
  },
  {
    "text": "It just takes its arguments and computes a\nresult and returns that result. And, critically, for any given set of arguments,\nit always returns the same result.",
    "start": "275570",
    "end": "287370"
  },
  {
    "text": "It's like one of those reliable, easy-to-understand\nfunctions that every programmer knows about.",
    "start": "287370",
    "end": "293060"
  },
  {
    "text": "Oh, you know, nobody sort of worries, writes\nextensive unit tests for the cosine function,",
    "start": "293060",
    "end": "299680"
  },
  {
    "text": "right? Someone wrote that thing, tested it once,\nand was done. And, I think, if you could imagine a world\nwhere most of your program was written in",
    "start": "299680",
    "end": "311520"
  },
  {
    "text": "pure functions, I think that any programmer\nwho's ever wrestled with what state is my",
    "start": "311520",
    "end": "320310"
  },
  {
    "text": "database in, do I have the right information\nin my files, is that global variable or somehow",
    "start": "320310",
    "end": "326600"
  },
  {
    "text": "that global state in my program the right\nthing, would be able to see that, you know! ",
    "start": "326600",
    "end": "334020"
  },
  {
    "text": "If I had a program full of pure functions,\nit would be easier to test and easier to understand,",
    "start": "334020",
    "end": "339210"
  },
  {
    "text": "right? I send it some arguments, it gives me a result. If I build a test around that, I know that\nfor any set of arguments, it's always gonna",
    "start": "339210",
    "end": "346960"
  },
  {
    "text": "give me the same result. So, programs full of pure functions are just,\nI think they're sort of mathematical proofs",
    "start": "346960",
    "end": "354620"
  },
  {
    "text": "that they tend to be simpler. But just, intuitively, if I don't have to\nworry about the global state and I don't have",
    "start": "354620",
    "end": "363849"
  },
  {
    "text": "to worry about the state of the database and\nthe state of anything outside of the code",
    "start": "363850",
    "end": "369220"
  },
  {
    "text": "inside this function, that'll make the program\neasier to understand.",
    "start": "369220",
    "end": "374770"
  },
  {
    "text": "And the whole rest of functional programming\nis, how do I build interesting programs that",
    "start": "374770",
    "end": "384240"
  },
  {
    "text": "do useful things with more or less only, not\nquite only, but mostly pure functions?",
    "start": "384240",
    "end": "392259"
  },
  {
    "text": "And that, fundamentally, is it. I don't think most programmers need a lot\nof convincing that if they could write their",
    "start": "392260",
    "end": "400780"
  },
  {
    "text": "programs with mostly pure functions, the programs\nwould be easier to understand. The question is, how the heck do I do that?",
    "start": "400780",
    "end": "407950"
  },
  {
    "text": "And that's what the rest of functional programming\nis about. So, let's go there.",
    "start": "407950",
    "end": "413120"
  },
  {
    "text": "You talked about pure logic, pure functions\nand said, \"Well, if I don't have to worry",
    "start": "413120",
    "end": "420330"
  },
  {
    "text": "about a file or a database.\"  This is a common thing that most interesting\nprograms have to do.",
    "start": "420330",
    "end": "428010"
  },
  {
    "text": "So, what's the next step in the process? How do I begin to incorporate some of those\nthings?",
    "start": "428010",
    "end": "434060"
  },
  {
    "text": "It's like another one of those sorts of misconceptions\nabout functional programming that floats around",
    "start": "434060",
    "end": "442560"
  },
  {
    "text": "is that functional programming is all about\ngetting rid of side effects and that's true,",
    "start": "442560",
    "end": "447760"
  },
  {
    "text": "right? Like, a pure function, I've said it, it doesn't\nbut it's also not true because, as you say,",
    "start": "447760",
    "end": "455040"
  },
  {
    "text": "all of the useful things a real program does,\nthey're all side effects right? In the end, I need to write the file, update\nthe screen, hit the web service, put a row",
    "start": "455040",
    "end": "465140"
  },
  {
    "text": "in the database, whatever it is you're trying\nto do. Chances are they're 100% that it's a side\neffect because nobody can see what's going",
    "start": "465140",
    "end": "473800"
  },
  {
    "text": "on inside the program. The idea of functional programming is,  we're\nin the business of producing side effects",
    "start": "473800",
    "end": "483750"
  },
  {
    "text": "but we should not use side effects as the\ntools to do our work. It's sort of the end result.",
    "start": "483750",
    "end": "491210"
  },
  {
    "text": "And the reason you do that is that side effects\nsort of are like something sticky on the road",
    "start": "491210",
    "end": "499150"
  },
  {
    "text": "or the table or something, it makes things\nmore difficult, it makes everything messy. So, yes, perpetrate the side effects that\nare necessary, but leave, don't use them as",
    "start": "499150",
    "end": "511810"
  },
  {
    "text": "a tool. So, a typical functional program has some\nside effect at the beginning, maybe it reads",
    "start": "511810",
    "end": "519268"
  },
  {
    "text": "something from a file or inputs a request\nand that's a side effect, sure.",
    "start": "519269",
    "end": "524800"
  },
  {
    "text": "In the end, it produces some result, maybe\nit updates a database or updates a screen",
    "start": "524800",
    "end": "529850"
  },
  {
    "text": "or something. Then, in between, we try not to have, well\nwe try to have as few side effects as we possibly",
    "start": "529850",
    "end": "537790"
  },
  {
    "text": "can in the middle of the program because we're\ntrying to avoid, we're trying to get the side",
    "start": "537790",
    "end": "543949"
  },
  {
    "text": "effects down to the absolute minimum, which,\nideally, would be the thing that came in and",
    "start": "543949",
    "end": "549029"
  },
  {
    "text": "the thing that's going out. Interesting. So, you mentioned a moment ago also that there's\nthis misconception.",
    "start": "549029",
    "end": "558259"
  },
  {
    "start": "554000",
    "end": "867000"
  },
  {
    "text": "What other misconceptions do you feel are\nout there about functional programming that you'd like to dispel?",
    "start": "558259",
    "end": "563360"
  },
  {
    "text": "The main one is that it's this Zen, you going\nto go to the functional programming monastery",
    "start": "563360",
    "end": "573339"
  },
  {
    "text": "and study for half a lifetime before you can\nreally get it.",
    "start": "573339",
    "end": "578760"
  },
  {
    "text": "Yes, exactly. I think there are two sources of misconceptions\nabout functional programming and one is completely",
    "start": "578760",
    "end": "593259"
  },
  {
    "text": "understandable. It is that people when you get the idea of\nfunctional programming, it's really exciting.",
    "start": "593259",
    "end": "599959"
  },
  {
    "text": "I can remember the moment, I was like sitting\nin front of my screen with my keyboard under",
    "start": "599959",
    "end": "606060"
  },
  {
    "text": "my fingers and it hit me, I don't need all\nof this stuff. I don't need classes and methods and friend\nfunctions and private and protected methods",
    "start": "606060",
    "end": "617688"
  },
  {
    "text": "and all the rest of it, I just need functions\nand Clojure's and first-class functions, just",
    "start": "617689",
    "end": "624940"
  },
  {
    "text": "a small set of tools and I can read all the\nprograms that I need.",
    "start": "624940",
    "end": "631540"
  },
  {
    "text": "That is really exciting. I think of it as one of the high points of\nmy programming career, except that there's",
    "start": "631540",
    "end": "640490"
  },
  {
    "text": "been a lot of high points in my programming\ncareer, right? Programming is all about looking at the world\nin a different way.",
    "start": "640490",
    "end": "647880"
  },
  {
    "text": "You have some application and you're struggling, \nhow can I make this thing make sense? How can I put this together in some reasonable\nway?",
    "start": "647880",
    "end": "656420"
  },
  {
    "text": "And then, at some point, it hits you, oh,\nI need a message bus or something like that and suddenly,  all the pieces fall into place.",
    "start": "656420",
    "end": "663959"
  },
  {
    "text": "And you're like, \"Yes, this is a high point\nof building this application.\" Functional programming is like that, right?",
    "start": "663959",
    "end": "669949"
  },
  {
    "text": "It's like, suddenly, you see the world in\na different way and that is the way I should",
    "start": "669949",
    "end": "675339"
  },
  {
    "text": "do this! And it is exciting, it is different, it does\nmake you look at the world differently but",
    "start": "675339",
    "end": "683300"
  },
  {
    "text": "that's what we as programmers do, right? Like I'm looking at the world differently,\nthis must be Tuesday, right?",
    "start": "683300",
    "end": "690949"
  },
  {
    "text": "So, there's that misconception.",
    "start": "690949",
    "end": "696089"
  },
  {
    "text": "I think there are a lot of terminologies. A lot of the ideas of functional programming\nwere borrowed from mathematics.",
    "start": "696089",
    "end": "701769"
  },
  {
    "text": "The idea of the pure function is, what do\nthey call New York pizza in New York?",
    "start": "701769",
    "end": "709680"
  },
  {
    "text": "They call it pizza and in math, a pure function\nis just called a function right?",
    "start": "709680",
    "end": "714870"
  },
  {
    "text": "We bring it over and it's a different kind\nof thing but there are a lot of terminologies",
    "start": "714870",
    "end": "720029"
  },
  {
    "text": "that come from mathematics. So, functionals and monads and things like\nthat are kind of foreign to most programmers.",
    "start": "720029",
    "end": "729480"
  },
  {
    "text": "And I think this is a case where the terminology,\nwhen you're a beginner or when you're just trying to absorb functional programming, the\nterminology does not really help because,",
    "start": "729480",
    "end": "740279"
  },
  {
    "text": "fundamentally, the ideas are pretty simple. What do you need to build functional programming?",
    "start": "740279",
    "end": "746490"
  },
  {
    "text": "What are these simple tools you need? Pure functions, that's not terribly exotic,\nyou need to be able to treat your functions",
    "start": "746490",
    "end": "755558"
  },
  {
    "text": "as values. You need to be able to pass functions in and\nout of other functions as arguments or as",
    "start": "755559",
    "end": "762089"
  },
  {
    "text": "the result, you need to be able to cook up\nnew functions on the fly. So, if you've created inline functions in\nyour code and with Clojure's where the function",
    "start": "762089",
    "end": "775040"
  },
  {
    "text": "you're cooking up grabs hold of the data,\nkind of, around it in this version of the",
    "start": "775040",
    "end": "781058"
  },
  {
    "text": "function, x is 4. In this other version of the function, x is\n7, that kind of thing.",
    "start": "781059",
    "end": "786819"
  },
  {
    "text": "And you really need immutable data structures,\nthings that look like arrays or lists or maps",
    "start": "786819",
    "end": "793949"
  },
  {
    "text": "or what have you that are like their nonfunctional\ncousins but which are immutable.",
    "start": "793949",
    "end": "803769"
  },
  {
    "text": "And that really just puts the teeth in the\nidea that your functions are pure functions because if you can't change your data structures\nin place, I kind of know my functions are",
    "start": "803769",
    "end": "814209"
  },
  {
    "text": "pure functions because they can't perpetrate\nat least data structure side effects.",
    "start": "814209",
    "end": "820410"
  },
  {
    "text": "You need that. You need some way to make all of that efficient,\nwhich is kind of a solved problem, and off",
    "start": "820410",
    "end": "829730"
  },
  {
    "text": "you go and that is the blinding insight of\nfunctional programming.",
    "start": "829730",
    "end": "835949"
  },
  {
    "text": "Like, it's Tuesday morning and I'm a programmer,\nso I'm going to have an insight. The Tuesday morning insight of functional\nprogramming is all you need, right?",
    "start": "835950",
    "end": "846649"
  },
  {
    "text": "Functional programs are full of endless elaborations\nand there are libraries and there are things",
    "start": "846649",
    "end": "852130"
  },
  {
    "text": "that help you but, at the core, you only need\nfunctions, pure functions, you need to be",
    "start": "852130",
    "end": "857649"
  },
  {
    "text": "able to treat them as values and you need\nsome efficient, immutable data structures",
    "start": "857649",
    "end": "864438"
  },
  {
    "text": "and you're done-ish. Just to be just to be sure we stir up some\ncontroversy, can I get you on the record saying",
    "start": "864439",
    "end": "871120"
  },
  {
    "start": "867000",
    "end": "985000"
  },
  {
    "text": "that you don't need to understand category\ntheory to understand functional programming?",
    "start": "871120",
    "end": "878819"
  },
  {
    "text": "You don't need to understand category theory. I will say this, so you and I are both Clojure\nprogrammers and Clojure is a dynamically-typed",
    "start": "878819",
    "end": "888769"
  },
  {
    "text": "language. One of the advantages of dynamic typing in\nfunctional programming is there's no, you",
    "start": "888769",
    "end": "900079"
  },
  {
    "text": "do not have a complex type system, by definition,\ninteracting with your functional programs",
    "start": "900079",
    "end": "908040"
  },
  {
    "text": "in a dynamically-typed language. So, because you don't have that, there's a\nwhole category of conversations you don't",
    "start": "908040",
    "end": "917509"
  },
  {
    "text": "have to have. A lot of the really complex terminology in\nfunctional programming comes from the interaction",
    "start": "917509",
    "end": "925600"
  },
  {
    "text": "of strong typing with functional programming. I'm not saying that strong typing is bad,\nwhat I am saying is that if you have a strongly-typed",
    "start": "925600",
    "end": "937220"
  },
  {
    "text": "language and it's got really strong opinions\nabout which types can mix with which other",
    "start": "937220",
    "end": "944759"
  },
  {
    "text": "types and you marry that to functional programming,\nthat is necessarily something you're gonna",
    "start": "944759",
    "end": "950248"
  },
  {
    "text": "have to have a conversation about, you're\ngonna need words with. So, my friends who are Haskell programmers,\ndo talk about functionals and things like",
    "start": "950249",
    "end": "961839"
  },
  {
    "text": "that and monads. My friends, like you, who are Clojure programmers\ntend not to just because there's all,  there's",
    "start": "961839",
    "end": "970069"
  },
  {
    "text": "no strong typing there to have a conversation\nabout.",
    "start": "970069",
    "end": "975089"
  },
  {
    "text": "Doesn't mean the Haskell people are wrong,\nit just means they have something else to talk about and they need words to talk about\nit with.",
    "start": "975089",
    "end": "982709"
  },
  {
    "text": "Surely. So all this talk of programming languages\nreminds me of something.",
    "start": "982709",
    "end": "989248"
  },
  {
    "start": "985000",
    "end": "1375000"
  },
  {
    "text": "You're a self-described, programming language\ngeek. So, tell me a little bit about what first\ngot you interested in programming generally",
    "start": "989249",
    "end": "998199"
  },
  {
    "text": "and maybe afterward, functional programming\nin particular. I started out my career as a mechanical engineer\nback in the late middle ages, just before",
    "start": "998199",
    "end": "1009350"
  },
  {
    "text": "the Renaissance, I guess. And it was right around the time that people\nwere starting to use computers for mechanical",
    "start": "1009350",
    "end": "1019309"
  },
  {
    "text": "engineering applications for design. So, CAD/CAM was a new thing when I was recently\ngraduated from college and I rapidly discovered",
    "start": "1019309",
    "end": "1030370"
  },
  {
    "text": "that I was a much better programmer than I\nwas a mechanical engineer. I was way better as the programmer than a\nmechanical engineer.",
    "start": "1030370",
    "end": "1038130"
  },
  {
    "text": "It's remarkable that all my fingers are still\nattached, you know! ",
    "start": "1038130",
    "end": "1044199"
  },
  {
    "text": "And I was lucky enough that I got a job with\na long defunct computer company, manufactured",
    "start": "1044200",
    "end": "1053500"
  },
  {
    "text": "mainframes company called \"Control Data.\" My particular job, I got to frequently be\nthe only user on computers that, at the time,",
    "start": "1053500",
    "end": "1065710"
  },
  {
    "text": "cost $2 million or $3 million. Just the nature of my work, I was porting\napplications and things like that and it was",
    "start": "1065710",
    "end": "1073660"
  },
  {
    "text": "just so much fun. As sort of a mechanical engineer, I kind of\ntook programming languages as something that",
    "start": "1073660",
    "end": "1084500"
  },
  {
    "text": "existed in the world, like a rock, right? You find a rock on the ground, it's just there. And, at some point, I started wondering how\ndo these things work?",
    "start": "1084500",
    "end": "1094170"
  },
  {
    "text": "And I started going down the rabbit hole of \nthe compiler producing assembly code, which",
    "start": "1094170",
    "end": "1102450"
  },
  {
    "text": "is actually a whole different language, which\nproduces machine code, which is similar but",
    "start": "1102450",
    "end": "1108210"
  },
  {
    "text": "still a different language. And the computers that I was using were microcoded,\nso I started digging into the microcode and",
    "start": "1108210",
    "end": "1116100"
  },
  {
    "text": "I don't know, programming languages just seemed\nlike  if computers were magic, programming",
    "start": "1116100",
    "end": "1121600"
  },
  {
    "text": "languages were the magic that made the magic\ngo. And I've just been endlessly fascinated by \nprogramming languages and then the relationship",
    "start": "1121600",
    "end": "1133400"
  },
  {
    "text": "between programming languages and human languages. I think there's some parallels there and there's\nreal parallels, I think between programming",
    "start": "1133400",
    "end": "1142660"
  },
  {
    "text": "language communities and regular communities\nin  the wider human world.",
    "start": "1142660",
    "end": "1153330"
  },
  {
    "text": "It's the interaction of people and technology\nthat is just wonderful. And what made you drawn to functional programming?",
    "start": "1153330",
    "end": "1163560"
  },
  {
    "text": "Was it just when a few years back now that\nit was all the rage and you're like, all right,",
    "start": "1163560",
    "end": "1169560"
  },
  {
    "text": "let's go check this out? Or does your interest predate sort of? Yes, so when I started programming, I made\nmyself very unpopular in my first programming",
    "start": "1169560",
    "end": "1182559"
  },
  {
    "text": "project because I indented my code, okay? Sort of put yourself back in that world, if\nyou can imagine, and as I went through my",
    "start": "1182560",
    "end": "1196140"
  },
  {
    "text": "career, every step of the way, there always\nseemed to be some better idea. Like, \"Hey, let's indent our code,\" was the\nfirst one that made programming easier, made",
    "start": "1196140",
    "end": "1208000"
  },
  {
    "text": "the programs easier to understand. And so I went from arguing with people about\nwhether we should indent our code to arguing",
    "start": "1208000",
    "end": "1217960"
  },
  {
    "text": "with people about whether this object-oriented\nthing was ever going anywhere. And I will say, there were lots of blind alleys,\nI wasn't always right, you know!",
    "start": "1217960",
    "end": "1226960"
  },
  {
    "text": "I was always like the person looking at the\nnext thing for better or for worse.",
    "start": "1226960",
    "end": "1232309"
  },
  {
    "text": "And, at some point, functional programming\njust seemed to be there, were a lot of smart people that I knew who were saying that this\nwas something we should be looking at.",
    "start": "1232310",
    "end": "1244549"
  },
  {
    "text": "I will say functional programming was one\nof those things that took me a long time to",
    "start": "1244550",
    "end": "1253770"
  },
  {
    "text": "get and I felt like part of it was because\nI was reading all of these sort of,  it's",
    "start": "1253770",
    "end": "1258920"
  },
  {
    "text": "this Zen-like experience that I've been going\non about. And when I finally figured it out, it was\nboth like this is wonderful and this is way",
    "start": "1258920",
    "end": "1266800"
  },
  {
    "text": "simpler than the internet would have you believe. This is just very straightforward. I remember one of the difficulties I had making\nthe transition from object-oriented programming",
    "start": "1266800",
    "end": "1276600"
  },
  {
    "text": "to functional programming was like,  but\nit was just a function I didn’t  understand.",
    "start": "1276600",
    "end": "1284490"
  },
  {
    "text": "Where was the design patterns and all the\nother things that I \"need\" in order to make",
    "start": "1284490",
    "end": "1289559"
  },
  {
    "text": "a good program? It was very liberating to realize that you\ndon't need all of this stuff.",
    "start": "1289560",
    "end": "1299610"
  },
  {
    "text": "I think that's the big leap if you're an object-oriented\nprogrammer or programmer who...and we really",
    "start": "1299610",
    "end": "1308640"
  },
  {
    "text": "shouldn't even say if you're  describing\npeople as object-oriented programmers, right? We're all software professionals here, we\nshouldn't be defined by our tools but if you",
    "start": "1308640",
    "end": "1319601"
  },
  {
    "text": "are used to using object-oriented programming,\nthere's a level of complexity that you expect",
    "start": "1319601",
    "end": "1325740"
  },
  {
    "text": "from your tools. You just described the experience that I was\ntrying to describe earlier.",
    "start": "1325740",
    "end": "1332640"
  },
  {
    "text": "It's like this moment where you say, \"I don't\nneed all of this. I just don't.\" You know?",
    "start": "1332640",
    "end": "1339090"
  },
  {
    "text": "And it's a liberating kind of thing. There is,  there is work in learning the\nprogram in a functional style.",
    "start": "1339090",
    "end": "1347860"
  },
  {
    "text": "You constantly, in the beginning, find yourself\nthinking, \"Oh, I'll just jam 44 in the middle",
    "start": "1347860",
    "end": "1355820"
  },
  {
    "text": "of this array.\" And then you think, \"Oh no, I've gotta figure\nout a way to return something.\"",
    "start": "1355820",
    "end": "1361070"
  },
  {
    "text": "But, again, those are the kind of problems\nthat programmers deal with all of the time.",
    "start": "1361070",
    "end": "1366720"
  },
  {
    "text": "Maybe not that exact problem but it's that,\n\"Oh, I need to look at this a different way,\" is kind of the definition of what it is to\nbe a programmer.",
    "start": "1366720",
    "end": "1375470"
  },
  {
    "start": "1375000",
    "end": "1751000"
  },
  {
    "text": "Yes, so, let's contextualize this a little\nbit? We're talking a little bit abstractly but\nlet's talk about something concrete.",
    "start": "1375470",
    "end": "1382470"
  },
  {
    "text": "So, relate, for me, maybe an experience, think\nback to your most disastrous programming project",
    "start": "1382470",
    "end": "1389419"
  },
  {
    "text": "and tell me, if you had only had functional\nprogramming available to you, you know, what would've been different?",
    "start": "1389420",
    "end": "1395370"
  },
  {
    "text": "There are so many to choose from. You know, in the long view...",
    "start": "1395370",
    "end": "1400840"
  },
  {
    "text": "I'll answer your question in a second but\nyou just made me realize, I think in the longer",
    "start": "1400840",
    "end": "1410809"
  },
  {
    "text": "view of going from those days when people\nargued about indenting code to today, I think",
    "start": "1410810",
    "end": "1418360"
  },
  {
    "text": "one of the things that gets lost is that we\nare a lot better at this than we used to be",
    "start": "1418360",
    "end": "1424929"
  },
  {
    "text": "right? Programming projects still fail at an alarming\nrate but nowhere near as badly as they did",
    "start": "1424930",
    "end": "1432510"
  },
  {
    "text": "back in the day, even ten years, 15 years\nago. I think we are getting better at it.",
    "start": "1432510",
    "end": "1439450"
  },
  {
    "text": "My most disastrous project, I worked on this\ndocument management system that was kind of",
    "start": "1439450",
    "end": "1447690"
  },
  {
    "text": "an OEM product and it was….we took code\nfrom another company that was aimed at a different",
    "start": "1447690",
    "end": "1456399"
  },
  {
    "text": "market and we would adjust it for the U.S.\nmarket and for the industries that we were",
    "start": "1456400",
    "end": "1465510"
  },
  {
    "text": "selling to. And one release, our partners had completely\nrewritten this big C program into a C++ program.",
    "start": "1465510",
    "end": "1477040"
  },
  {
    "text": "And they had a great idea, they had great\nambitions that that was going to make the",
    "start": "1477040",
    "end": "1484150"
  },
  {
    "text": "system easier to deal with and, all the promises\nof object-oriented programming.",
    "start": "1484150",
    "end": "1490780"
  },
  {
    "text": "And we got the thing and we probably spent\neight months and probably $3 million, back",
    "start": "1490780",
    "end": "1498840"
  },
  {
    "text": "when $3 million was real money, trying to\nchange this thing just ever so slightly to",
    "start": "1498840",
    "end": "1508130"
  },
  {
    "text": "make it work for our customers at our market. I just remember the experience was that we\nwere just in the middle of this maze of objects,",
    "start": "1508130",
    "end": "1520620"
  },
  {
    "text": "trying to make sense of the slight differences\nbetween the classes. I think of it as object dust! ",
    "start": "1520620",
    "end": "1528130"
  },
  {
    "text": "Like a badly designed object-oriented program,\nall of the objects do something but you're",
    "start": "1528130",
    "end": "1534470"
  },
  {
    "text": "never quite sure what they do or if you have\nthe right object. I mean, I think even at the time, I remember\nmaybe I'm projecting backwards, but I remember",
    "start": "1534470",
    "end": "1546390"
  },
  {
    "text": "thinking, \"Gee, I'm just trying to move this\ndocument from this place to this place and",
    "start": "1546390",
    "end": "1551670"
  },
  {
    "text": "put some attributes on it and store it all\nin a database. Why is this so hard?\"",
    "start": "1551670",
    "end": "1557870"
  },
  {
    "text": "Well, could you write that system in a functional\nstyle?",
    "start": "1557870",
    "end": "1562940"
  },
  {
    "text": "Sure. Could the Russ Olsen of the 21st century,\n2nd decade, 3rd decade of the 21st century",
    "start": "1562940",
    "end": "1570000"
  },
  {
    "text": "do a better job? Sure. I'm a lot more experienced. But I think it is harder with functional programming\nto just get lost in the tools, get lost in",
    "start": "1570000",
    "end": "1581110"
  },
  {
    "text": "the infrastructure of your program. Functional programs, fundamentally,  the\nidea of the code is you take some data, you",
    "start": "1581110",
    "end": "1589480"
  },
  {
    "text": "transform it, you've got some different data\nnow. And I think it's harder to get lost, not impossible,\nI think it is still possible to write bad",
    "start": "1589480",
    "end": "1598150"
  },
  {
    "text": "code in whatever style and language, if you\ntry hard enough, you absolutely can.",
    "start": "1598150",
    "end": "1605990"
  },
  {
    "text": "But yeah, so I look back on that and I think,\nif we had been using functional programming,",
    "start": "1605990",
    "end": "1611620"
  },
  {
    "text": "that might have been better, but thanks for\nreminding me of that! ",
    "start": "1611620",
    "end": "1620350"
  },
  {
    "text": "That's what we're here for.",
    "start": "1620350",
    "end": "1626049"
  },
  {
    "text": "For me, looking back, there was this one project\nthat you and I had worked on briefly, many",
    "start": "1626050",
    "end": "1633880"
  },
  {
    "text": "years ago at a particular cruise line and\nthey had a reservation system and I remember",
    "start": "1633880",
    "end": "1640600"
  },
  {
    "text": "this was non-functional programming but they\nhad some objects that they passed in as parameters.",
    "start": "1640600",
    "end": "1647929"
  },
  {
    "text": "Then you farm out work to other subroutines\nin your code but somebody got the idea to",
    "start": "1647930",
    "end": "1654840"
  },
  {
    "text": "start changing the values that were in the\nobject which was supposed to be just a parameter",
    "start": "1654840",
    "end": "1660490"
  },
  {
    "text": "which had things like your customer's preferences. It just changed out from under you, like five\nlevels down the call stack and made bugs that",
    "start": "1660490",
    "end": "1673130"
  },
  {
    "text": "we just don't have a certain class of bug\nin functional programs. We have others to be sure, right?",
    "start": "1673130",
    "end": "1680010"
  },
  {
    "text": "But certainly not that kind. I think people talk about this a lot and it's\ntrue.",
    "start": "1680010",
    "end": "1687620"
  },
  {
    "text": "It's certainly not the only advantage of functional\nprogramming but if you're working with immutable",
    "start": "1687620",
    "end": "1692710"
  },
  {
    "text": "data structures, there's a whole class of\nmultithreaded problems that just go away.",
    "start": "1692710",
    "end": "1698730"
  },
  {
    "text": "Basically, you can never get in a situation\nwhere I have a data structure, which is, kind",
    "start": "1698730",
    "end": "1704480"
  },
  {
    "text": "of, in mid flight, I'm in the middle of making\na multi-part change and I've done two-thirds",
    "start": "1704480",
    "end": "1710780"
  },
  {
    "text": "of it and then somebody looks at this data\nstructure and it's complete garbage. You tend to just automatically not have those\nproblems.",
    "start": "1710780",
    "end": "1722429"
  },
  {
    "text": "In Clojure, and I think in most other functional\nprogramming languages, you tend not to have synchronized blocks and things like that,\nmaybe in very special cases.",
    "start": "1722430",
    "end": "1730990"
  },
  {
    "text": "You just do your thing and, sort of, by default,\nit's thread-safe and when was the last time",
    "start": "1730990",
    "end": "1739990"
  },
  {
    "text": "you talked about thread safety in your program? We don't talk about it. It just, you know, happens.",
    "start": "1739990",
    "end": "1747430"
  },
  {
    "text": "Yes. Much of the time, we get it for free. That's for sure. Yes. So, how would you say functional programming\ninfluences...how else would you say it influences",
    "start": "1747430",
    "end": "1752530"
  },
  {
    "start": "1751000",
    "end": "1982000"
  },
  {
    "text": "the shape or the character of the code that\nyou write? So, on a larger scale, as I say, you tend\nto have the side effects at the beginning",
    "start": "1752530",
    "end": "1762240"
  },
  {
    "text": "and at the end for whatever the definition\nof beginning and end is.  Like when you take an input and when you send\nout an output and not in the middle.",
    "start": "1762240",
    "end": "1771789"
  },
  {
    "text": "I think that's one thing. I think the other thing that it does is it\ntends to make code changes local, right?",
    "start": "1771790",
    "end": "1785419"
  },
  {
    "text": "If all your data structures are immutable\nand you're dealing with pure functions, then",
    "start": "1785420",
    "end": "1793900"
  },
  {
    "text": "if I make a change to this function, it can\naffect  the behavior of the function changes,",
    "start": "1793900",
    "end": "1801060"
  },
  {
    "text": "it can certainly affect the callers, the users\nof that function. ",
    "start": "1801060",
    "end": "1806400"
  },
  {
    "text": "Maybe I'm returning something different but\nit's very narrow, well-defined...",
    "start": "1806400",
    "end": "1811620"
  },
  {
    "text": "I'll put it to you this way, think about what\na good interface is in object-oriented terms. ",
    "start": "1811620",
    "end": "1819350"
  },
  {
    "text": "Like, I'm gonna build an object and it's gonna\nhave a great interface. That means that the object is completely opaque\ninside.",
    "start": "1819350",
    "end": "1828290"
  },
  {
    "text": "I'm not really concerned about what's going\non inside the object.  That's a good interface.",
    "start": "1828290",
    "end": "1834050"
  },
  {
    "text": "And then it has really well-defined inputs\nand outputs.",
    "start": "1834050",
    "end": "1840880"
  },
  {
    "text": "That is the description of a pure function. Unless I look at the code, I have no idea\nwhat the details are going on inside this",
    "start": "1840880",
    "end": "1849330"
  },
  {
    "text": "function. The only thing I can see is the interface,\nwhich is what arguments this will take and",
    "start": "1849330",
    "end": "1854529"
  },
  {
    "text": "what does it send out? And because of that, the experience of working\non a functional program is, I'm looking at",
    "start": "1854530",
    "end": "1864020"
  },
  {
    "text": "this function and I'm confident that if it\nreally is a pure function and there's nothing",
    "start": "1864020",
    "end": "1870280"
  },
  {
    "text": "untoward going on, nothing unusual going on,\nthen the code that I'm looking at inside that",
    "start": "1870280",
    "end": "1876480"
  },
  {
    "text": "function is pretty well isolated from everything\nelse. And that really is sort of the key to why\nfunctional programming makes life simpler",
    "start": "1876480",
    "end": "1887110"
  },
  {
    "text": "for the programmer because,  most of the\ntime, I'm looking at some code and the code",
    "start": "1887110",
    "end": "1894630"
  },
  {
    "text": "does exactly what it says it's gonna do and\nthere's very little hidden behind the scenes.",
    "start": "1894630",
    "end": "1900630"
  },
  {
    "text": "You know, if it's a pure function, I can't\ncall something and my argument isn't gonna",
    "start": "1900630",
    "end": "1906920"
  },
  {
    "text": "change or, you know, nothing's going on behind\nthe scenes. It's all, kind of, right there in front of\nme.",
    "start": "1906920",
    "end": "1913720"
  },
  {
    "text": "You know, you just reminded me of a war story\nfrom my mainframe days, which is you were",
    "start": "1913720",
    "end": "1922470"
  },
  {
    "text": "talking about passing in an argument and then\nsomewhere, maybe deep in the call stack, changing",
    "start": "1922470",
    "end": "1927610"
  },
  {
    "text": "something in that argument and then you're\nsurprised. In my mainframe days, it was possible the\nconstants were stored in writeable memory",
    "start": "1927610",
    "end": "1937260"
  },
  {
    "text": "in those, like, more primitive and so it was\npossible to, you know, pass five into a function",
    "start": "1937260",
    "end": "1944890"
  },
  {
    "text": "and have somebody change the value of five\nso that anytime you had the numeral five someplace",
    "start": "1944890",
    "end": "1952390"
  },
  {
    "text": "else, you now had it different. And we would look at that today, right? Any programmer today would say, \"That's insane.",
    "start": "1952390",
    "end": "1960110"
  },
  {
    "text": "Why is five different from a three-element\narray or a hash table or any other object",
    "start": "1960110",
    "end": "1966460"
  },
  {
    "text": "you're dealing with?\" Right? Why is one surprise and the other one, not?",
    "start": "1966460",
    "end": "1971950"
  },
  {
    "text": "In functional programming, they're both surprises,\nwhich I think is maybe a more sensible way",
    "start": "1971950",
    "end": "1977549"
  },
  {
    "text": "of looking at it. The value of values, certainly. All right.",
    "start": "1977550",
    "end": "1982870"
  },
  {
    "start": "1982000",
    "end": "2073000"
  },
  {
    "text": "So, I guess maybe it's time for a parting\nquestion, Russ.",
    "start": "1982870",
    "end": "1987920"
  },
  {
    "text": "What advice might you have for programmers\nout there that are just starting to get into",
    "start": "1987920",
    "end": "1993440"
  },
  {
    "text": "functional programming and want to explore\nit? So, I think my advice is the same advice I\ngive people who are trying to  learn a new",
    "start": "1993440",
    "end": "2001340"
  },
  {
    "text": "programming language, which is... and, in\na way, functional programming is kind of, ",
    "start": "2001340",
    "end": "2007510"
  },
  {
    "text": "well, you probably are going to be learning\na new programming language but it's a similar, I'm changing worldview and it is, find some\nproblem that is interesting to you but that",
    "start": "2007510",
    "end": "2021309"
  },
  {
    "text": "you have solved before, right? We all have these programs we've written half\na dozen times in our career, maybe more and",
    "start": "2021309",
    "end": "2032480"
  },
  {
    "text": "solve that, write functional code to solve\nthat problem, okay? And it wants to be something interesting,\nbigger than hello world, less than  a full-blown",
    "start": "2032480",
    "end": "2042060"
  },
  {
    "text": "database or something like that. Find the problem that's sort of medium-sized,\nthat you understand really well and write",
    "start": "2042060",
    "end": "2051490"
  },
  {
    "text": "a program, a functional program to solve that. And that way, you understand the details of\nthe problem, you know exactly where you're",
    "start": "2051490",
    "end": "2059210"
  },
  {
    "text": "going and you are just trying to look at the\nproblem in  a different way. I think that is a great way to  learn a new\nprogramming style and learn a new programming",
    "start": "2059210",
    "end": "2068690"
  },
  {
    "text": "language. Yeah. That's great advice. All right. Well, this was a blast for me, Russ Olsen.",
    "start": "2068690",
    "end": "2075270"
  },
  {
    "start": "2073000",
    "end": "2107000"
  },
  {
    "text": "Thanks. Well, it's been a pleasure, Christian Romney. Excellent. And, I guess, to all our friends out there\non the internet, pick up a functional programming",
    "start": "2075270",
    "end": "2083780"
  },
  {
    "text": "language. Hey, pick up a copy of Russ Olsen's book. There you go. He didn't actually say that but... Awesome. All right.",
    "start": "2083780",
    "end": "2089780"
  },
  {
    "text": "Well, thank you, Christian Romney. Thanks, Russ Olsen. Cheers.",
    "start": "2089780",
    "end": "2093280"
  }
]