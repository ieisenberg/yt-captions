[
  {
    "text": "thank you for coming to adventures in Elm Elm is a programming language that runs in the browser it's pretty hot and",
    "start": "4200",
    "end": "11360"
  },
  {
    "text": "trendy lately I'm kind of excited uh on this talk we're going to Journey from",
    "start": "11360",
    "end": "16600"
  },
  {
    "text": "Hello World to an actually kind of useful application which is pretty neat along the way you might get excited",
    "start": "16600",
    "end": "22480"
  },
  {
    "text": "about Elm the way I am uh even if you don't I think you'll learn something that you can apply to all your other",
    "start": "22480",
    "end": "29320"
  },
  {
    "text": "programming language Elm taught me several principles that has have changed the way I evaluate",
    "start": "29320",
    "end": "35480"
  },
  {
    "text": "languages and my own programs and we'll get to kindness and reproducibility and events as we go along the biggest one",
    "start": "35480",
    "end": "42399"
  },
  {
    "text": "was the part that I can do UI programming at all and not hate myself because I'm a backend developer",
    "start": "42399",
    "end": "49079"
  },
  {
    "text": "and I'm a consider myself a functional programmer I really like my functions to be like repeatable and data in and data",
    "start": "49079",
    "end": "54440"
  },
  {
    "text": "out and highly testable and stuff like that and Elm gives me all of that in the UI and when I first heard that my friend",
    "start": "54440",
    "end": "60359"
  },
  {
    "text": "I'm sitting next to my friend Richard at a wedding and he's talking about Elm and he's excited about I'm",
    "start": "60359",
    "end": "65720"
  },
  {
    "text": "like user interface programming without side effects cuz my UI experience is in",
    "start": "65720",
    "end": "71280"
  },
  {
    "text": "Java Swing and and there you like set up all the event handlers and when somebody pushes this you try to update all the",
    "start": "71280",
    "end": "76880"
  },
  {
    "text": "bits that are relevant to that and it's just like this snarly nightmare of of side effects and of UI updates and",
    "start": "76880",
    "end": "84240"
  },
  {
    "text": "responding to that it was chaos and so I was skeptical but Elm really does this",
    "start": "84240",
    "end": "90240"
  },
  {
    "text": "it's a little bit like like stripe so I work at stripe and at stripe we abstract the payment system so we take this",
    "start": "90240",
    "end": "96880"
  },
  {
    "text": "really snarly trust me at super nasty um Concepts that that consist of the",
    "start": "96880",
    "end": "103520"
  },
  {
    "text": "financial system and how payments work and we put a clean API on top of it uh an API that's highly testable that's",
    "start": "103520",
    "end": "109960"
  },
  {
    "text": "well documented that's fully backwards compatible forever and ever um and we do this to make your life easier it doesn't",
    "start": "109960",
    "end": "116240"
  },
  {
    "text": "make our life easier but stripe has worked hard to solve that problem Elm is very focused on solving the problem of",
    "start": "116240",
    "end": "122680"
  },
  {
    "text": "writing applications that run in the browser it's one problem it's a very common problem but by restricting itself",
    "start": "122680",
    "end": "129800"
  },
  {
    "text": "to that Elm is able to make a very clean developer experience that's also",
    "start": "129800",
    "end": "135280"
  },
  {
    "text": "entirely data in data out Elm is not a JavaScript transpiler okay you've got",
    "start": "135280",
    "end": "141280"
  },
  {
    "text": "closure script and you've got scala.js you've got typescript and the others that output JavaScript that you can then",
    "start": "141280",
    "end": "148599"
  },
  {
    "text": "use from your JavaScript Elm is not that it is a different experience yes it",
    "start": "148599",
    "end": "153680"
  },
  {
    "text": "technically creates JavaScript as output but that's an implementation detail when",
    "start": "153680",
    "end": "158760"
  },
  {
    "text": "web assembly is a thing it'll use that it looks more like this so your Elm code",
    "start": "158760",
    "end": "164040"
  },
  {
    "text": "only runs within the elm run time and the way it's able to do the functional",
    "start": "164040",
    "end": "169440"
  },
  {
    "text": "programming and still make a user interface is that my Elm code outputs",
    "start": "169440",
    "end": "174800"
  },
  {
    "text": "data which is the description of how I wish the browser looked right now",
    "start": "174800",
    "end": "180560"
  },
  {
    "text": "and then the elm runtime figures out the most efficient way to execute some JavaScript to interact with the Dom to",
    "start": "180560",
    "end": "187840"
  },
  {
    "text": "make it look like I want it and then when the user interacts with it uh that comes back into event handlers and blah",
    "start": "187840",
    "end": "194319"
  },
  {
    "text": "blah blah which Elm translates into data which is a message that becomes input to",
    "start": "194319",
    "end": "200040"
  },
  {
    "text": "my code which then comes around and outputs what the view should look like",
    "start": "200040",
    "end": "205400"
  },
  {
    "text": "now and then Elm makes that happen so all the nasty side effect coordination thingies are in the elm",
    "start": "205400",
    "end": "211439"
  },
  {
    "text": "runtime and Elm has gotten more and more specific about how we write code and it streamlined this experience as the",
    "start": "211439",
    "end": "218200"
  },
  {
    "text": "language has grown until it's really quite pretty Elm says you will program",
    "start": "218200",
    "end": "224640"
  },
  {
    "text": "asynchronously everything will be asynchronous it's all event driven as opposed to JavaScript which is single",
    "start": "224640",
    "end": "230280"
  },
  {
    "text": "threaded and imperative and it turns out that this can be a lot simpler now it means that like we tried",
    "start": "230280",
    "end": "236239"
  },
  {
    "text": "to program Elm for scrips which is some game that you write JavaScript programs in to tell your minions what to do can't",
    "start": "236239",
    "end": "242480"
  },
  {
    "text": "do it because scps needs single-threaded and imperative and elements only able to",
    "start": "242480",
    "end": "248280"
  },
  {
    "text": "run in its own asynchronous event driven architecture so limitations that also",
    "start": "248280",
    "end": "254200"
  },
  {
    "text": "make our lives a lot easier the thing Elm says no to a lot of",
    "start": "254200",
    "end": "259479"
  },
  {
    "text": "things there are no statements there are no side effects there are no no runtime errors",
    "start": "259479",
    "end": "267520"
  },
  {
    "text": "you can have bugs but not errors you will never never see undefined is not a function or property blah blah not",
    "start": "267520",
    "end": "273520"
  },
  {
    "text": "defined on blahy blah and this is wonderful because this is the kind of nightmare that drove me",
    "start": "273520",
    "end": "279680"
  },
  {
    "text": "away from JavaScript over and over oh I can do ja I'm a Java programmer I can program JavaScript no because I can't",
    "start": "279680",
    "end": "285680"
  },
  {
    "text": "handle this but this is a nightmare that never happens on Elm",
    "start": "285680",
    "end": "291520"
  },
  {
    "text": "Street right so the the the tradeoff there is you don't get any time errors",
    "start": "294680",
    "end": "300400"
  },
  {
    "text": "your users don't get the surprises surprises but you have to deal with all the compile",
    "start": "300400",
    "end": "305960"
  },
  {
    "text": "errors in in JavaScript you can like write something and you can see it in the browser right away and in Ruby you",
    "start": "305960",
    "end": "311600"
  },
  {
    "text": "can write something and you see your green tests and your green tests and in Elm the the definition of progress is a",
    "start": "311600",
    "end": "318440"
  },
  {
    "text": "different compile error but that can be handy I can do",
    "start": "318440",
    "end": "323520"
  },
  {
    "text": "like compile error driven programming and this is where the kindness comes in because",
    "start": "323520",
    "end": "329759"
  },
  {
    "text": "Elm has some relation to hll the syntax is kind of based on hll but the attitude",
    "start": "329759",
    "end": "335160"
  },
  {
    "text": "is not um Elm is really kind in its compile errors and it wants them to",
    "start": "335160",
    "end": "341919"
  },
  {
    "text": "guide you and Evan who writes Elm goes way out of his way um to make the the",
    "start": "341919",
    "end": "347120"
  },
  {
    "text": "compile errors friendly so let's let's get some compile errors that's the best way to do it here's an empty directory",
    "start": "347120",
    "end": "353479"
  },
  {
    "text": "and I can start by creating the simplest Elm module that I can think of of course",
    "start": "353479",
    "end": "358639"
  },
  {
    "text": "we'll do hello world you have to name the module and you have to tell it what methods are allowed to escape Elma is",
    "start": "358639",
    "end": "365560"
  },
  {
    "text": "extremely explicit about these things and say I just want to do hello world that should be",
    "start": "365560",
    "end": "371560"
  },
  {
    "text": "good I'm using the adom editor here from GitHub and the elm language program by",
    "start": "371560",
    "end": "377360"
  },
  {
    "text": "or package by Eric West and then just all I have installed",
    "start": "377360",
    "end": "384280"
  },
  {
    "text": "here is Elm itself um so I'm going to Elm make and make means compile it doesn't actually",
    "start": "384280",
    "end": "391120"
  },
  {
    "text": "mean build so when I run Elm make it says oh hey by the way you haven't",
    "start": "391120",
    "end": "396240"
  },
  {
    "text": "specified like your version of elm and all these other packages that you're definitely going to need so how about we do that and it's very polite and asks me",
    "start": "396240",
    "end": "402880"
  },
  {
    "text": "and I say yes and it starts downloading and it doesn't cach any of this unfortunately um aha now we have our",
    "start": "402880",
    "end": "410680"
  },
  {
    "text": "first compile error and it says that it needs an HTML or an SVD or a program to",
    "start": "410680",
    "end": "417800"
  },
  {
    "text": "in order to render on screen but you get me a string okay but it gave me something to do it's like oh well I can",
    "start": "417800",
    "end": "423080"
  },
  {
    "text": "pick one of those well I'm trying to Output static HTML to start with so I'll pick one of those uh so what I actually",
    "start": "423080",
    "end": "429000"
  },
  {
    "text": "want is html. text and I'm going to need to import",
    "start": "429000",
    "end": "434599"
  },
  {
    "text": "HTML oh dang it I don't have my build script yet okay just for now we I'll mil I'll",
    "start": "435919",
    "end": "441680"
  },
  {
    "text": "make okay so now it has outputed some stuff and I have I have my Elm program",
    "start": "441680",
    "end": "448639"
  },
  {
    "text": "that I made I have Elm package.json which is where it's defining what version It's using and all its dependencies and blah blah blah you do",
    "start": "448639",
    "end": "454639"
  },
  {
    "text": "put that in Version Control Elm stuff is the build output and all the packages it's download you do not put that in",
    "start": "454639",
    "end": "459759"
  },
  {
    "text": "Version Control and index.html is the output of the compiler Elm has said I'm going to give you the fastest way to",
    "start": "459759",
    "end": "465840"
  },
  {
    "text": "something you can open in a browser so if we open that we get yay",
    "start": "465840",
    "end": "471319"
  },
  {
    "text": "hello world okay so moving on from hello world I want to tell you about the app that",
    "start": "471319",
    "end": "477479"
  },
  {
    "text": "drove me to want to do UI programming at all because as a backend developer now and then it would be like to be it would be",
    "start": "477479",
    "end": "483720"
  },
  {
    "text": "nice to be able to make the programs that I want which in this case is an architecture diagram that I can put",
    "start": "483720",
    "end": "489120"
  },
  {
    "text": "labels on and then I can like zoom in and put in more labels and zoom in and put in more labels but it has to be",
    "start": "489120",
    "end": "494639"
  },
  {
    "text": "infinite Zoom because no tool out there including prey including a lot of the other ones no tool out there lets me",
    "start": "494639",
    "end": "501560"
  },
  {
    "text": "zoom in deep enough to diagram the infrastructure infrastructure architecture at stripe not even close so",
    "start": "501560",
    "end": "509879"
  },
  {
    "text": "that's what I want now today we're going to build part of that app we will not get to zoom zoom is hard but we will get to putting labels on the screen so",
    "start": "509879",
    "end": "516479"
  },
  {
    "text": "that'll be cool okay so I'd like to build these things up incrementally like I can start",
    "start": "516479",
    "end": "522080"
  },
  {
    "text": "from the static page and see if I can get it to look kind of like what I want it to look and then worry about",
    "start": "522080",
    "end": "527320"
  },
  {
    "text": "increment worry about uh interactivity so in this case I want to start with a main element and most of",
    "start": "527320",
    "end": "535200"
  },
  {
    "text": "the elements uh in the elm HTML module it's Main underscore cuz main is a",
    "start": "535200",
    "end": "540760"
  },
  {
    "text": "keyword have an a list of attributes followed by a list of children so my main element is going to have no",
    "start": "540760",
    "end": "546920"
  },
  {
    "text": "attributes but it's going to have a child which is a canvas which has no children but it does",
    "start": "546920",
    "end": "552800"
  },
  {
    "text": "have some attributes and I'm going to need H HTML attributes.",
    "start": "552800",
    "end": "558600"
  },
  {
    "text": "style oh okay this is totally not fair I forgot that it is totally not fair to",
    "start": "558600",
    "end": "564640"
  },
  {
    "text": "like put this much code on the screen without telling you the syntax so Elm",
    "start": "564640",
    "end": "570320"
  },
  {
    "text": "syntax in five slides uh yeah you declare an identifier with the name of it and then equals and",
    "start": "570320",
    "end": "576760"
  },
  {
    "text": "then some value um everything in Elm is an expression the definition if your",
    "start": "576760",
    "end": "581839"
  },
  {
    "text": "identifier including functions is always exactly one expression in this case it's a l literal string hello world I could",
    "start": "581839",
    "end": "588680"
  },
  {
    "text": "also give you a list of literal strings uh notice the square brackets are a list literal and there's commas between the",
    "start": "588680",
    "end": "595160"
  },
  {
    "text": "list values the list elements type declarations are optional",
    "start": "595160",
    "end": "600880"
  },
  {
    "text": "because Elm will do type inference for you um I I usually when I get a compile error that is confusing to me I'll go",
    "start": "600880",
    "end": "607200"
  },
  {
    "text": "add these until the compiler tells me exactly where my problem is uh so in this case Hello gets a colon uh right",
    "start": "607200",
    "end": "614839"
  },
  {
    "text": "before it's equals declaration you get the colon one and that says it's a string words here is a list of strings",
    "start": "614839",
    "end": "621800"
  },
  {
    "text": "list is a type with a parameter um Elm does have parameterized types and so you",
    "start": "621800",
    "end": "628320"
  },
  {
    "text": "have to tell it what kind of list this is a list can only hold one kind of thing one you have to make a commitment",
    "start": "628320",
    "end": "635760"
  },
  {
    "text": "it cannot be object not a thing any not a thing there's no null you have to like",
    "start": "635760",
    "end": "641120"
  },
  {
    "text": "say what you want it to be in a minute we'll see how to put disparate objects in a string um there's another type",
    "start": "641120",
    "end": "647399"
  },
  {
    "text": "parameter coming up so right now our main is calling the text function in HTML module and passing it this string",
    "start": "647399",
    "end": "654519"
  },
  {
    "text": "note this in that in function application there's no parentheses or commas or anything like that it's just",
    "start": "654519",
    "end": "660760"
  },
  {
    "text": "space function name space argument space argument the type of this is HTML never",
    "start": "660760",
    "end": "668519"
  },
  {
    "text": "uh HTML has a type parameter and that parameter means the kind of data we can",
    "start": "668519",
    "end": "673959"
  },
  {
    "text": "get back when the user interacts with the stuff we put on the screen well we just put some text on the screen I'm not",
    "start": "673959",
    "end": "680440"
  },
  {
    "text": "going to interact with it it doesn't do anything so I'm never going to get any data back from the user for that so I",
    "start": "680440",
    "end": "685639"
  },
  {
    "text": "can use the never type which is the type with no no like instances uh so this says HTML that never gives me",
    "start": "685639",
    "end": "692399"
  },
  {
    "text": "a message back that text function is implemented in the HTML module somewhere",
    "start": "692399",
    "end": "697680"
  },
  {
    "text": "with a string argu parameter um and and blah blah I didn't put the implementation in there but the type of",
    "start": "697680",
    "end": "704240"
  },
  {
    "text": "it is a function type which looks funny if you've never done husc uh but that",
    "start": "704240",
    "end": "709560"
  },
  {
    "text": "little arrow thing indicates a function type and it means okay this is a text is a thing that can take a string and give",
    "start": "709560",
    "end": "716639"
  },
  {
    "text": "you an HTML of something we us usually call it message uh later we'll use the style",
    "start": "716639",
    "end": "724000"
  },
  {
    "text": "function which here's another function declaration so this one accepts a list of tupal of a string and a string so",
    "start": "724000",
    "end": "731480"
  },
  {
    "text": "it's strongly typed within the tupal well as strongly typed as string is and this gives you an attribute uh that you",
    "start": "731480",
    "end": "738959"
  },
  {
    "text": "can of whatever it doesn't care uh what parameter it is that you can use with that",
    "start": "738959",
    "end": "745199"
  },
  {
    "text": "HTML you can create your own types there's two ways to do that one is with an alias so here I'm just giving another",
    "start": "745199",
    "end": "752760"
  },
  {
    "text": "name to the record type that is a record with a field called URL and a type of",
    "start": "752760",
    "end": "758519"
  },
  {
    "text": "string so these correspond closely to JavaScript objects except they're strongly typed you can never access a property that you haven't guaranteed is",
    "start": "758519",
    "end": "765800"
  },
  {
    "text": "there uh to instantiate that so I can say that my starting model which is what",
    "start": "765800",
    "end": "772399"
  },
  {
    "text": "we call the application state in Elm in the elm architecture is of type model which corresponds to that record and I",
    "start": "772399",
    "end": "778920"
  },
  {
    "text": "can say okay in this one the URL is cat do cat.gif which unfortunately is as",
    "start": "778920",
    "end": "784399"
  },
  {
    "text": "close as I get to cat pictures in this presentation the other way to create a",
    "start": "784399",
    "end": "789560"
  },
  {
    "text": "new type is a union type and this is an or kind of thing so I can make a new type message that is either the constant",
    "start": "789560",
    "end": "796600"
  },
  {
    "text": "noop or the constant button pushed or a gut input thing that has a string along",
    "start": "796600",
    "end": "802920"
  },
  {
    "text": "with it that's carrying some data of type string that got input becomes a Constructor so if I want to make one of",
    "start": "802920",
    "end": "809600"
  },
  {
    "text": "those my input can be a message and I'll use the got input Constructor to wrap up",
    "start": "809600",
    "end": "815279"
  },
  {
    "text": "this string and then it's going to be of type message and then I can put it in a list with things uh that are no op or",
    "start": "815279",
    "end": "822519"
  },
  {
    "text": "button pushed or other got input messages uh to pick that apart we'll use",
    "start": "822519",
    "end": "828920"
  },
  {
    "text": "pattern matching and decomposition so the update function is very important in the El architecture it says hey I got a",
    "start": "828920",
    "end": "834600"
  },
  {
    "text": "message got some data from the outside world and I got the old version of the model the application State and my job",
    "start": "834600",
    "end": "840839"
  },
  {
    "text": "is to change that application State and output the new one and it does that by matching the message it can either be",
    "start": "840839",
    "end": "846279"
  },
  {
    "text": "the constant no up it it it I just didn't show it matching button pushed um",
    "start": "846279",
    "end": "851920"
  },
  {
    "text": "or it could be got input and in the got input case I get the S out of it like this and then I can say last piece of",
    "start": "851920",
    "end": "858880"
  },
  {
    "text": "syntax here that I want to return the old model such that the URL now has the",
    "start": "858880",
    "end": "864560"
  },
  {
    "text": "value of s okay that is almost all the mson Tex you will see",
    "start": "864560",
    "end": "871680"
  },
  {
    "text": "today and we will get back to our program okay so now see that style",
    "start": "873360",
    "end": "878399"
  },
  {
    "text": "function there it is and I'm going to pass it a list of tupal of",
    "start": "878399",
    "end": "885600"
  },
  {
    "text": "string background image to uh another string which is going to",
    "start": "885600",
    "end": "892920"
  },
  {
    "text": "be a URL of the architecture diagram that I want and I'll Define that up here",
    "start": "892920",
    "end": "899680"
  },
  {
    "text": "it's going to be lv. okay let's see if we can get this",
    "start": "899680",
    "end": "906600"
  },
  {
    "text": "working first okay okay I can't stand like going",
    "start": "906600",
    "end": "912000"
  },
  {
    "text": "any further with this I'm going to until I like put the source in the",
    "start": "912000",
    "end": "918399"
  },
  {
    "text": "source directory and also I like I need to bring in some CSS at this point and if I let the elm compiler output",
    "start": "918399",
    "end": "924800"
  },
  {
    "text": "index.html then I don't have control over like the CSS or anything like that I actually want it to outp put Javascript and I want to provide the",
    "start": "924800",
    "end": "930880"
  },
  {
    "text": "index.html that links to a CSS file under my control and then I can just bring in its JavaScript and this is fine",
    "start": "930880",
    "end": "936880"
  },
  {
    "text": "um so that the compiler has this option uh but I've reached this point pretty frequently and oh I just threw out an L",
    "start": "936880",
    "end": "942800"
  },
  {
    "text": "module oh now I want it to be like organized so I have a program for",
    "start": "942800",
    "end": "947880"
  },
  {
    "text": "that um gatron Elm rugs",
    "start": "947880",
    "end": "955560"
  },
  {
    "text": "organize all right so now I am using a tool that was open- sourced last weekend",
    "start": "957440",
    "end": "963120"
  },
  {
    "text": "very new uh this is by atomist and rug is a runtime and some libraries for code",
    "start": "963120",
    "end": "969240"
  },
  {
    "text": "that modifies code so I've got a little script in the rug DSL that tells it okay",
    "start": "969240",
    "end": "975160"
  },
  {
    "text": "move the main module over here and change its module name to Main and uh bring in a reasonable index on HTML and",
    "start": "975160",
    "end": "982759"
  },
  {
    "text": "some Styles and uh tell package.json that the source is in the source directory oh and bring in the get ignore",
    "start": "982759",
    "end": "989319"
  },
  {
    "text": "and there's my build script that I keep looking for uh so now I have all that stuff I",
    "start": "989319",
    "end": "994800"
  },
  {
    "text": "need to add and then I can commit and now I can build and now I'm",
    "start": "994800",
    "end": "1001079"
  },
  {
    "text": "happy uh except okay so the first thing I did is I didn't introduce I didn't add",
    "start": "1001079",
    "end": "1006880"
  },
  {
    "text": "that import this happens to me often enough that um I can actually parse the output of",
    "start": "1006880",
    "end": "1015240"
  },
  {
    "text": "the elm compiler look for this no module called blood BL and use one of my little programs um add",
    "start": "1015240",
    "end": "1022639"
  },
  {
    "text": "import to add the import to the file and there so this is completely independent",
    "start": "1022639",
    "end": "1030120"
  },
  {
    "text": "of any text editor this is just command line uh programs that let me evolve my",
    "start": "1030120",
    "end": "1035760"
  },
  {
    "text": "Elm code and now it should uh well it's not going to build because I think I'm going to have another compile error but",
    "start": "1035760",
    "end": "1041400"
  },
  {
    "text": "that's okay they're friendly okay now we have my favorite one this is my favorite one because a long time ago I submitted",
    "start": "1041400",
    "end": "1048360"
  },
  {
    "text": "an issue to the GitHub repo wherein Evan says please tell me when your um when",
    "start": "1048360",
    "end": "1054320"
  },
  {
    "text": "your compile ER are confusing because if you get a compile error and you don't know what to do that's not you being",
    "start": "1054320",
    "end": "1060520"
  },
  {
    "text": "stupid that's a bug in the language I think that's actually Jose valim quote but uh Evan has the same",
    "start": "1060520",
    "end": "1066720"
  },
  {
    "text": "philosophy so I used to get this a lot but since I don't use Elma every day I'd be like God what is drink Incarnation",
    "start": "1066720",
    "end": "1072880"
  },
  {
    "text": "and I'd have to look it up and Evan was like oh yeah you're right that's super common I'm just going to give you a a",
    "start": "1072880",
    "end": "1078520"
  },
  {
    "text": "custom case in the compiler to tell you yeah it's Plus+ and I was like wow now I",
    "start": "1078520",
    "end": "1083960"
  },
  {
    "text": "feel like I've contributed the community by complaining okay give oh it's now in",
    "start": "1083960",
    "end": "1090440"
  },
  {
    "text": "Source main. Elm very good very good oh and I need to copy in my resources too",
    "start": "1090440",
    "end": "1095679"
  },
  {
    "text": "so I'm totally cheating by I mean copying in pictures that's not cheating but copying in CSS is totally cheating",
    "start": "1095679",
    "end": "1102760"
  },
  {
    "text": "uh because that is the hardest part um in Elm you totally don't have to use JavaScript I never drop to JavaScript to",
    "start": "1102760",
    "end": "1111280"
  },
  {
    "text": "debug um there I've got my pictures and my Styles I never dropped to JavaScript",
    "start": "1111280",
    "end": "1117120"
  },
  {
    "text": "to debug and I can get away with pretty much not knowing JavaScript uh at least for a program like this one but uh you",
    "start": "1117120",
    "end": "1123720"
  },
  {
    "text": "do have to know HTML in CSS and it funny story so Elm used to be",
    "start": "1123720",
    "end": "1130000"
  },
  {
    "text": "it's actually named after the word element uh which you were supposed to like to find things that are the left of other things and Below other things and",
    "start": "1130000",
    "end": "1136520"
  },
  {
    "text": "generally be like easier conceptually CSS but it turned out people didn't want something easier than CSS they just",
    "start": "1136520",
    "end": "1143000"
  },
  {
    "text": "wanted CSS because and HTML because that is the standard in the browser and Evan",
    "start": "1143000",
    "end": "1148919"
  },
  {
    "text": "said okay this is what people need I'm going to give it to them Elm its principles are really based on our",
    "start": "1148919",
    "end": "1156440"
  },
  {
    "text": "experience of using the language not on what Evan thinks is right okay let's see if that",
    "start": "1156440",
    "end": "1164600"
  },
  {
    "text": "worked um oh I need to open target. HTML because now it's where it",
    "start": "1164880",
    "end": "1170400"
  },
  {
    "text": "belongs oh good we have our architecture diagram okay this is the architecture of",
    "start": "1170400",
    "end": "1175480"
  },
  {
    "text": "this application and there's our main function that returns our little data",
    "start": "1175480",
    "end": "1180559"
  },
  {
    "text": "and not picture is the elm runtime as all working in the elm runtime but that goes into the view and here's us looking",
    "start": "1180559",
    "end": "1186120"
  },
  {
    "text": "at it all right so next I want to put in some labels I want to label one of these",
    "start": "1186120",
    "end": "1192240"
  },
  {
    "text": "things to do that I need to add something else to my main element let's",
    "start": "1192240",
    "end": "1197480"
  },
  {
    "text": "have uh let's have a view that view component that draws the labels and I'm just going to like pass in a hard-coded",
    "start": "1197480",
    "end": "1204480"
  },
  {
    "text": "label we'll give it text is let's see one of those things was the main function and now I'm totally going to",
    "start": "1204480",
    "end": "1212240"
  },
  {
    "text": "guess something we'll give it an X of 200 and a y of 400 and see where that winds up so I'm",
    "start": "1212240",
    "end": "1219640"
  },
  {
    "text": "hardcoding a sample label while I've got a static page and uh oh I I could like",
    "start": "1219640",
    "end": "1225120"
  },
  {
    "text": "give that a type so I could type Alias label it is a text",
    "start": "1225120",
    "end": "1231760"
  },
  {
    "text": "string string an X which is an INT and a y which is an INT see you can totally have",
    "start": "1231760",
    "end": "1238720"
  },
  {
    "text": "no errors in Elm but you will still get bugs because X and Y are both integers and I mix them up all the",
    "start": "1238720",
    "end": "1244400"
  },
  {
    "text": "time now when I hit save here we're actually uh it it's it's it's activating",
    "start": "1244400",
    "end": "1252360"
  },
  {
    "text": "Elm format which is a tool by Aaron vhal which says Thou shalt not argue about",
    "start": "1252360",
    "end": "1257880"
  },
  {
    "text": "spacing I mean Elm is Whit space sensitive so Tabs are syntax error we got that over",
    "start": "1257880",
    "end": "1264320"
  },
  {
    "text": "with but there's still like arguments about should it be two or three returns before a function and Elm format says",
    "start": "1264320",
    "end": "1271120"
  },
  {
    "text": "stop arguing and I really like it because I just type crap in and then it like lines it up and makes it",
    "start": "1271120",
    "end": "1276679"
  },
  {
    "text": "pretty okay so in our case we want to draw some labels and we're going to get in some labels which is",
    "start": "1276679",
    "end": "1282520"
  },
  {
    "text": "um and this is where like stating the type helps me figure stuff out we have a list of label and we want to Output some",
    "start": "1282520",
    "end": "1290520"
  },
  {
    "text": "HTML um HTML never in this case and um yeah so we've got our labels",
    "start": "1290520",
    "end": "1298159"
  },
  {
    "text": "and I what I want to do is like okay we can outp put a div with no attributes",
    "start": "1298159",
    "end": "1303840"
  },
  {
    "text": "and the children are going to be we're going to map some sort of",
    "start": "1303840",
    "end": "1310120"
  },
  {
    "text": "function that formats one label over this list now you'll notice that list is",
    "start": "1310120",
    "end": "1317200"
  },
  {
    "text": "a monad elm has monads as they're useful like list and maybe it does not have the generic monad and this makes me super",
    "start": "1317200",
    "end": "1325400"
  },
  {
    "text": "happy because um the code is super explicit if you see a function call in",
    "start": "1325400",
    "end": "1331720"
  },
  {
    "text": "Elm you can tell exactly what code is going to execute uh based on the Imports",
    "start": "1331720",
    "end": "1338279"
  },
  {
    "text": "and um that's about it be and the the qualification of the function name because there's no polymorphism there's",
    "start": "1338279",
    "end": "1344279"
  },
  {
    "text": "no Dynamic dispatch there's no implicits it's super simple this is a little little more typing for me right now but",
    "start": "1344279",
    "end": "1350640"
  },
  {
    "text": "future me loves it and as the maintainer of a legacy Ruby application",
    "start": "1350640",
    "end": "1357400"
  },
  {
    "text": "with a lot of magic I think this is totally awesome and I love typing okay so I to I I didn't put this",
    "start": "1357400",
    "end": "1364640"
  },
  {
    "text": "let expression in the syntax I guess I could have everything is an expression but you are allowed to give more names",
    "start": "1364640",
    "end": "1370320"
  },
  {
    "text": "to things so I can put some declarations in here and I can say that the format label function takes a record I can",
    "start": "1370320",
    "end": "1376159"
  },
  {
    "text": "decompose it like this with text X and Y and it is equal to this thing in my cut",
    "start": "1376159",
    "end": "1382120"
  },
  {
    "text": "and paste buffer which is",
    "start": "1382120",
    "end": "1387520"
  },
  {
    "text": "this uh so I want to make an HTML label with an",
    "start": "1387520",
    "end": "1393799"
  },
  {
    "text": "absolute position so I can say exactly where it is um and then it has some text",
    "start": "1393799",
    "end": "1399919"
  },
  {
    "text": "in it that's about it and here I've hardcoded a label this this will probably work and if it doesn't work the",
    "start": "1399919",
    "end": "1405400"
  },
  {
    "text": "compiler will be super friendly and I like doing code demos where one of my uh objectives is to show the compile errors",
    "start": "1405400",
    "end": "1412120"
  },
  {
    "text": "because you know every time I mess it up it's oo look a compile error well yes I did actually want html. HTML there",
    "start": "1412120",
    "end": "1418640"
  },
  {
    "text": "that's a module module html. type HTML which is annoying so I'm just going to",
    "start": "1418640",
    "end": "1423840"
  },
  {
    "text": "specify that that's available okay we built it what does it",
    "start": "1423840",
    "end": "1429159"
  },
  {
    "text": "do does it put a label on there it does oo don't Zoom just that messes it up",
    "start": "1429159",
    "end": "1435480"
  },
  {
    "text": "okay this screen is totally big enough to read that I think think so yes now we have a main and we show this to like our",
    "start": "1435480",
    "end": "1442000"
  },
  {
    "text": "Peeps and they're like oh yeah this is fine this is good let's make it interactive and I'm like all right let's",
    "start": "1442000",
    "end": "1447279"
  },
  {
    "text": "make it interactive Elma is fun for that uh so to make it interactive I need to",
    "start": "1447279",
    "end": "1452559"
  },
  {
    "text": "like receive I want like I I want a text input right I want an input field so I can type the label instead of just card",
    "start": "1452559",
    "end": "1458919"
  },
  {
    "text": "coding it great um the first thing I need to do is I need to have a my main",
    "start": "1458919",
    "end": "1464039"
  },
  {
    "text": "function output a program instead of an HTML I've got a program to upgrade my",
    "start": "1464039",
    "end": "1470440"
  },
  {
    "text": "program Elm rugs upgrade to beginner program the beginner program in Elm is a",
    "start": "1470440",
    "end": "1476480"
  },
  {
    "text": "little simpler uh than the full version it says the only data that we're going",
    "start": "1476480",
    "end": "1481720"
  },
  {
    "text": "to receive back and respond to is stuff that from the user directly interacting",
    "start": "1481720",
    "end": "1487440"
  },
  {
    "text": "with the components we created so with our text um our text input that we're",
    "start": "1487440",
    "end": "1493960"
  },
  {
    "text": "about to put on the screen okay so the editor it it always like fills out this vence file to like give itself credit",
    "start": "1493960",
    "end": "1501399"
  },
  {
    "text": "and then we can see that our main is now a beginner program and this model stuff",
    "start": "1501399",
    "end": "1506640"
  },
  {
    "text": "here we have an empty application State and we've got an update and the only message we can see receive is no op and",
    "start": "1506640",
    "end": "1512960"
  },
  {
    "text": "in the case of no op we do nothing uh yeah and that's like straight out of the elm tutorial but I put it in",
    "start": "1512960",
    "end": "1519799"
  },
  {
    "text": "my little editor so that I don't have to remember it over and over and I'm going to commit",
    "start": "1519799",
    "end": "1526360"
  },
  {
    "text": "that and this is is I can update the diagram to show our new architecture and we can do things like",
    "start": "1526360",
    "end": "1534240"
  },
  {
    "text": "now our view everything that was in our main function is now in our view function because it's the View's job to",
    "start": "1534240",
    "end": "1540360"
  },
  {
    "text": "out output the HTML data structure of what it should look like so now instead",
    "start": "1540360",
    "end": "1545520"
  },
  {
    "text": "of hardcoding the label down here I can just pass the model I can pass model.",
    "start": "1545520",
    "end": "1553000"
  },
  {
    "text": "labels uh because we have a model now and then we need to put that in the model and say hey uh the labels are this",
    "start": "1553000",
    "end": "1559919"
  },
  {
    "text": "hard-coded thing we'll just move it up there and then we have to put in the type the labels is a list of label",
    "start": "1559919",
    "end": "1566799"
  },
  {
    "text": "that'll probably work so that's just a refactor except that I changed the",
    "start": "1566799",
    "end": "1572039"
  },
  {
    "text": "diagram but now we have the possibility of receiving messages from the user so here's our new architecture we now have",
    "start": "1572120",
    "end": "1578279"
  },
  {
    "text": "an update function that gets we've got an initial model that gets passed into our update function along with a message",
    "start": "1578279",
    "end": "1584799"
  },
  {
    "text": "if a message comes in um and that that model that's output every time well not every time but whenever Elm decides it's",
    "start": "1584799",
    "end": "1591080"
  },
  {
    "text": "time to upgrade update the screen it's got all kinds of performance optimizations it gets passed into our view function which says what it should",
    "start": "1591080",
    "end": "1597159"
  },
  {
    "text": "look like and then our person when we put some interactive inputs can um click",
    "start": "1597159",
    "end": "1602799"
  },
  {
    "text": "on stuff and those messages will come back around to our update function okay",
    "start": "1602799",
    "end": "1608600"
  },
  {
    "text": "so now we want an actual text input when we add a text input in element it's a little",
    "start": "1608600",
    "end": "1614120"
  },
  {
    "text": "interesting uh because when it comes time to like save the label into our model the only way we can have access to",
    "start": "1614120",
    "end": "1622520"
  },
  {
    "text": "that is by having it in our model the whole time because I can't go query the",
    "start": "1622520",
    "end": "1628000"
  },
  {
    "text": "Dom to say hey text input what's in you that's an operation that only the elm runtime can do so what I do is on my",
    "start": "1628000",
    "end": "1637679"
  },
  {
    "text": "text input every time we type something we're going to get an event uh new label and every time we get that event",
    "start": "1637679",
    "end": "1644440"
  },
  {
    "text": "we're going to update a field in the model so I need to add a field to the model in the model type and I need to add a message and the case the case",
    "start": "1644440",
    "end": "1652159"
  },
  {
    "text": "statement No not whatever the thing the match Clause the match clause and the case statement and the update function",
    "start": "1652159",
    "end": "1658399"
  },
  {
    "text": "uh to handle that message and I also need like a little function that ties that together um that I can then put in my",
    "start": "1658399",
    "end": "1665000"
  },
  {
    "text": "view so my editor does that stuff let's see if I remember to commit before I don't think I",
    "start": "1665000",
    "end": "1671080"
  },
  {
    "text": "did yeah so we have a new model field New label and we have a new label string",
    "start": "1671080",
    "end": "1677000"
  },
  {
    "text": "message now and um we're going to respond to that in the update function by changing the",
    "start": "1677000",
    "end": "1682159"
  },
  {
    "text": "model field and this is all standard stuff that I do every time I ask uh wanted text input and there's a function",
    "start": "1682159",
    "end": "1688960"
  },
  {
    "text": "so all I have to do is call that function in my view and then I'll have",
    "start": "1688960",
    "end": "1695840"
  },
  {
    "text": "um we'll be able to see the text input so oh but I need to put it",
    "start": "1695840",
    "end": "1701679"
  },
  {
    "text": "somewhere right new input label and we give it the model so this",
    "start": "1701679",
    "end": "1708399"
  },
  {
    "text": "is going to be someplace dumb oh I have to build I could set up like some JavaScript to Tool change but I like not",
    "start": "1708399",
    "end": "1715320"
  },
  {
    "text": "having to do that that is the wrong name of the function it's new label",
    "start": "1715320",
    "end": "1720639"
  },
  {
    "text": "input come here new label input refresh I didn't build did",
    "start": "1721080",
    "end": "1728519"
  },
  {
    "text": "I okay there we go okay so it put it down here which is like way not where I",
    "start": "1728519",
    "end": "1734440"
  },
  {
    "text": "want it that's like not not where I want it okay so I need to decide where to put it for now I'm just going to hard code",
    "start": "1734440",
    "end": "1740880"
  },
  {
    "text": "something uh in fact I'm going to totally cheat and copy this in real life I would put this in a function",
    "start": "1740880",
    "end": "1747120"
  },
  {
    "text": "but cut and paste is going to totally work for today and we will put the top at 200 and the left at 400 and we'll be",
    "start": "1747120",
    "end": "1755320"
  },
  {
    "text": "happy with that um because someday I'll be be able to get that out of the model but not yet",
    "start": "1755320",
    "end": "1762360"
  },
  {
    "text": "okay we have a text input great we can type in it",
    "start": "1762360",
    "end": "1768600"
  },
  {
    "text": "now the cool thing happening here is actually over here this is the elm",
    "start": "1771080",
    "end": "1777000"
  },
  {
    "text": "debugger which I I added like Das D debug to my Elm make and my build script so it always puts this up and it's like",
    "start": "1777000",
    "end": "1783039"
  },
  {
    "text": "having a custom debug tool for your app every time so here is the current",
    "start": "1783039",
    "end": "1789120"
  },
  {
    "text": "context of my um my application State the whole model is right there and I can",
    "start": "1789120",
    "end": "1794279"
  },
  {
    "text": "collapse and dig around in there and this is every message my program has ever",
    "start": "1794279",
    "end": "1799480"
  },
  {
    "text": "received and I can even click on old messages and poof look here's what the",
    "start": "1799480",
    "end": "1804840"
  },
  {
    "text": "model looked like when that was message was processed and here's what the screen looked like when that message was",
    "start": "1804840",
    "end": "1810840"
  },
  {
    "text": "processed so you can totally look at your application State and the view at any point in the past really cool for",
    "start": "1810840",
    "end": "1819600"
  },
  {
    "text": "debugging all right but now of course I want to be able to like hit enter and have that",
    "start": "1819600",
    "end": "1825399"
  },
  {
    "text": "save um the the oninput event is like built into",
    "start": "1825399",
    "end": "1830679"
  },
  {
    "text": "HTML events unfortunately onenter is not it's you have to like listen to like",
    "start": "1830679",
    "end": "1838120"
  },
  {
    "text": "Keys down and um oops I need to get that a parameter enter",
    "start": "1838120",
    "end": "1845639"
  },
  {
    "text": "message you have to like listen to Keys down and like decide whether it was key code number 13 and if so then you want",
    "start": "1846279",
    "end": "1853640"
  },
  {
    "text": "to save send this save message and if not you want to send uh no",
    "start": "1853640",
    "end": "1859399"
  },
  {
    "text": "because you don't want to do anything um and that I totally copied this function out of the tutorial but now I don't have",
    "start": "1859399",
    "end": "1865840"
  },
  {
    "text": "to remember remember it anymore because I put it in an editor so now we have this on enter function that responds to",
    "start": "1865840",
    "end": "1871840"
  },
  {
    "text": "keydown and does some like Json decoding blood blah and looks for number 13",
    "start": "1871840",
    "end": "1877399"
  },
  {
    "text": "whatever uh on enter please send Save label when actually when I send that save label message which my editor also",
    "start": "1877399",
    "end": "1884760"
  },
  {
    "text": "added for me because it knew I was going to have to send something I would like to send uh the content of the label that",
    "start": "1884760",
    "end": "1891519"
  },
  {
    "text": "I want so this is going to be model. new Lael because that's its",
    "start": "1891519",
    "end": "1897760"
  },
  {
    "text": "content and we have X is 400 right and Y is 200",
    "start": "1897760",
    "end": "1903279"
  },
  {
    "text": "whatever okay and then I'm going to get a compile error because I just changed the code",
    "start": "1903279",
    "end": "1910200"
  },
  {
    "text": "the way I wanted it to be and now I now Elm will step me through every place",
    "start": "1910200",
    "end": "1916320"
  },
  {
    "text": "else that I need to change which starts with putting a DOT right",
    "start": "1916320",
    "end": "1922679"
  },
  {
    "text": "there and it's going to tell me that save label is not a function but I'm giving it an argument well I want it to",
    "start": "1923159",
    "end": "1928200"
  },
  {
    "text": "be a function so now I know to go to the Declaration of save label and tell it that it needs a label and then I'm like",
    "start": "1928200",
    "end": "1934440"
  },
  {
    "text": "okay compiler I know I need to change something else what is it ha right here is the only place that we use Save label",
    "start": "1934440",
    "end": "1940360"
  },
  {
    "text": "and so I give it a label and I can say hey model when you get that label your labels should be",
    "start": "1940360",
    "end": "1948200"
  },
  {
    "text": "this label prepended to Old labels and also let's say that that uh that new",
    "start": "1948200",
    "end": "1955600"
  },
  {
    "text": "label field should then be empty that'll probably",
    "start": "1955600",
    "end": "1960919"
  },
  {
    "text": "work okay so I use my little Editor to remember some pieces now we have this",
    "start": "1960919",
    "end": "1967440"
  },
  {
    "text": "and what happens when we type in it aha can you see it back",
    "start": "1967440",
    "end": "1973200"
  },
  {
    "text": "there ha it is totally like putting the label behind my text input so it's",
    "start": "1974480",
    "end": "1980760"
  },
  {
    "text": "saving it and that's pretty great now if only I could save it to different",
    "start": "1980760",
    "end": "1986080"
  },
  {
    "text": "places to save it to different places I need to like some interactivity from the user I really want the user to be able",
    "start": "1986080",
    "end": "1991559"
  },
  {
    "text": "to click and then we'll put the text input wherever they clicked and that'll be way more useful but to do that I need",
    "start": "1991559",
    "end": "1998000"
  },
  {
    "text": "more than just interactivity with that input I just put on the screen I need a",
    "start": "1998000",
    "end": "2003120"
  },
  {
    "text": "sort of General browser event and this is a piece of the outside world that is not available to an Elm beginner program",
    "start": "2003120",
    "end": "2009240"
  },
  {
    "text": "so it's time to evolve our program further into the full Elm",
    "start": "2009240",
    "end": "2015639"
  },
  {
    "text": "architecture and the full Elm architecture the difference is twofold upgrade to",
    "start": "2015639",
    "end": "2023960"
  },
  {
    "text": "program the difference is twofold uh we can send commands to the outside world",
    "start": "2024519",
    "end": "2029919"
  },
  {
    "text": "so we can like do things like make HTTP calls to the server very handy and also we can receive events um those events",
    "start": "2029919",
    "end": "2038399"
  },
  {
    "text": "every time we make a command to the outside world that's going to have some sort of message result that comes back to us of our message type but also we",
    "start": "2038399",
    "end": "2045799"
  },
  {
    "text": "can ask we can subscribe specifically to General browser events like clicks so in",
    "start": "2045799",
    "end": "2051118"
  },
  {
    "text": "this case we really want that subscriptions element so we move up to an Elm full Pro",
    "start": "2051119",
    "end": "2057280"
  },
  {
    "text": "program and we see that we've added instead of model as",
    "start": "2057280",
    "end": "2064280"
  },
  {
    "text": "the beginning model we have init because we also have the option of declaring cing commands that we want to send out",
    "start": "2064280",
    "end": "2069599"
  },
  {
    "text": "on Startup like fetch the stuff from the server and we have subscriptions and that's going to be useful and our yeah",
    "start": "2069599",
    "end": "2078320"
  },
  {
    "text": "so our nit type has changed and now in addition to the start",
    "start": "2078320",
    "end": "2084240"
  },
  {
    "text": "starting application State we return an empty list of commands and our update type has changed",
    "start": "2084240",
    "end": "2090000"
  },
  {
    "text": "because every time we get a message we have the option of sending something out as well um and then every case in our every",
    "start": "2090000",
    "end": "2097720"
  },
  {
    "text": "match case every match clause in our case statement in our update function now also outputs an empty list of",
    "start": "2097720",
    "end": "2104000"
  },
  {
    "text": "commands so that the types all line up and we have some empty subscriptions",
    "start": "2104000",
    "end": "2109040"
  },
  {
    "text": "yeah okay so now that we have this well I can update this I guess",
    "start": "2109040",
    "end": "2115839"
  },
  {
    "text": "but the first thing we want to do with this format is uh react to Mouse",
    "start": "2115839",
    "end": "2123440"
  },
  {
    "text": "clicks which involves importing the mouse package subscribe to",
    "start": "2123440",
    "end": "2130880"
  },
  {
    "text": "clicks what with a K uh this is another thing that I do uh",
    "start": "2130880",
    "end": "2137960"
  },
  {
    "text": "often so I've automated it um we're going to import the mouse package we're going to like add a subscription to the",
    "start": "2137960",
    "end": "2144359"
  },
  {
    "text": "mouse clicks and then when when we get the click we have to wrap it in a message so we need to create a message type and that message type will hold",
    "start": "2144359",
    "end": "2150040"
  },
  {
    "text": "like the The Click position and so we need to put that in the model so we need a model field for that so all of this is",
    "start": "2150040",
    "end": "2155560"
  },
  {
    "text": "encapsulated in my little editor here and we can see uh Elm package.json",
    "start": "2155560",
    "end": "2162400"
  },
  {
    "text": "changed I almost forget that one oh yeah and we imported the thing that's useful New Field here New Field there new",
    "start": "2162400",
    "end": "2169520"
  },
  {
    "text": "initial value oh and also um since we don't",
    "start": "2169520",
    "end": "2175000"
  },
  {
    "text": "have a uh label stop having that hard-coded one we can make our own",
    "start": "2175000",
    "end": "2180040"
  },
  {
    "text": "now since we don't have a last click to start with we've made it a maybe last",
    "start": "2180040",
    "end": "2186319"
  },
  {
    "text": "click a maybe Mouse position and so we start out with nothing and then in the update we say I have just",
    "start": "2186319",
    "end": "2193560"
  },
  {
    "text": "this last click right here so that's very type safe because there is no null",
    "start": "2193560",
    "end": "2198880"
  },
  {
    "text": "now that we have a last click we can move our new input label",
    "start": "2198880",
    "end": "2205760"
  },
  {
    "text": "around we can check it and either we have nothing they",
    "start": "2205760",
    "end": "2211920"
  },
  {
    "text": "haven't clicked yet and this is great we can just output an empty div so we won't have a random text input hanging out or",
    "start": "2211920",
    "end": "2218480"
  },
  {
    "text": "we have adjust Mouse position which has an X and A",
    "start": "2218480",
    "end": "2223640"
  },
  {
    "text": "Y okay and then we have a real X and a real y here okay the Y goes in the top",
    "start": "2223640",
    "end": "2229680"
  },
  {
    "text": "the X goes in the left these are easier to figure out all right so now our input should be",
    "start": "2229680",
    "end": "2237200"
  },
  {
    "text": "where we click and only when we click there and not nowhere before ah it's",
    "start": "2237200",
    "end": "2244520"
  },
  {
    "text": "already there oh I didn't build I didn't build",
    "start": "2244520",
    "end": "2249079"
  },
  {
    "text": "that always helps oh and here it's going to download the mouse dependency because that's a new one um and it it's",
    "start": "2250200",
    "end": "2256599"
  },
  {
    "text": "installing Mouse 1.0.1 but it knows and will declare that it can use any version",
    "start": "2256599",
    "end": "2262920"
  },
  {
    "text": "of mouse up to but not including 20 and that's because the elm package manager",
    "start": "2262920",
    "end": "2267960"
  },
  {
    "text": "enforces semantic versioning so the elm package.json",
    "start": "2267960",
    "end": "2273319"
  },
  {
    "text": "looks like this and you see El Mouse is like I know 10 will work and anything up",
    "start": "2273319",
    "end": "2278680"
  },
  {
    "text": "to 20 but not including because if the publisher of the El Mouse LL Mouse",
    "start": "2278680",
    "end": "2284400"
  },
  {
    "text": "package decided to change the type signature or remove any exposed methods they would not they're physically unable",
    "start": "2284400",
    "end": "2291240"
  },
  {
    "text": "to publish that as version 11 one or anything less than 20 semantic",
    "start": "2291240",
    "end": "2296319"
  },
  {
    "text": "versioning is enforced at published time so you can't break my compilation as",
    "start": "2296319",
    "end": "2302000"
  },
  {
    "text": "long as you're in the 1. something range of the elm package and this is really useful when you have like trans postive",
    "start": "2302000",
    "end": "2307760"
  },
  {
    "text": "dependencies that are common you Elm can find some place in the middle of the range that's like compatible and if not",
    "start": "2307760",
    "end": "2314640"
  },
  {
    "text": "if the ranges don't overlap it won't let you import both those dependencies it's very particular about",
    "start": "2314640",
    "end": "2320480"
  },
  {
    "text": "that and uh saves me some errors so I'm happy about that okay we got the mouse we built the thing is it going to work",
    "start": "2320480",
    "end": "2326520"
  },
  {
    "text": "okay here's our new architecture look right here this is",
    "start": "2326520",
    "end": "2332000"
  },
  {
    "text": "subscriptions yay enter o it saved it now let's go over here ha",
    "start": "2332160",
    "end": "2338200"
  },
  {
    "text": "this is the main function and saved it but it didn't delete the the um input we should make",
    "start": "2338200",
    "end": "2346400"
  },
  {
    "text": "that we should make that work let's try that this is the update function and this is a",
    "start": "2346400",
    "end": "2352040"
  },
  {
    "text": "knit and this is the world world and this is a person yay okay now check this",
    "start": "2352040",
    "end": "2360040"
  },
  {
    "text": "out here's our history here's every every um message we've ever received in",
    "start": "2360040",
    "end": "2365400"
  },
  {
    "text": "our interaction with this app and in cap everything I did and anything that came in from outside like clicking when I",
    "start": "2365400",
    "end": "2371960"
  },
  {
    "text": "click when I click click click we're going to get more messages where' to go it went back there okay I can export",
    "start": "2371960",
    "end": "2378480"
  },
  {
    "text": "this say say I found a bug like my bug was hey that stupid input field it doesn't go away when I hit enter it",
    "start": "2378480",
    "end": "2384280"
  },
  {
    "text": "keeps covering up my stuff okay export do it there we go history 97 all right",
    "start": "2384280",
    "end": "2391040"
  },
  {
    "text": "let's go fix that bug um and what we want is when we save",
    "start": "2391040",
    "end": "2397160"
  },
  {
    "text": "the label we want it to ignore the last click now last click equals",
    "start": "2397160",
    "end": "2403359"
  },
  {
    "text": "nothing and then we'll build and then I can come back here and",
    "start": "2403359",
    "end": "2409880"
  },
  {
    "text": "I can refresh and I can import that history and Bam I have reproduced what",
    "start": "2409880",
    "end": "2417960"
  },
  {
    "text": "happened everywhere and the last event in there is in fact a click so it's right that that's up there let's see if",
    "start": "2417960",
    "end": "2423440"
  },
  {
    "text": "this is this is still working um messages go here oh yes okay I misspelled messages",
    "start": "2423440",
    "end": "2431880"
  },
  {
    "text": "but that's all right uh what matters is that text field went away so I can I can",
    "start": "2431880",
    "end": "2437319"
  },
  {
    "text": "get a bug report from someone and say exactly what situation they got themselves in and exactly how they got",
    "start": "2437319",
    "end": "2444079"
  },
  {
    "text": "themselves in that situation which is spectacular and then I can make a code change and try it again and um if if my",
    "start": "2444079",
    "end": "2451800"
  },
  {
    "text": "like message and model types are still comp my message types specifically are still compatible El will just run the",
    "start": "2451800",
    "end": "2456920"
  },
  {
    "text": "same input through a different program and you can check out the differences in Behavior at every point in time because",
    "start": "2456920",
    "end": "2464240"
  },
  {
    "text": "I can click back here and back here this is reproducibility with events",
    "start": "2464240",
    "end": "2470520"
  },
  {
    "text": "and I also find it extremely kind oh there's one more thing that this",
    "start": "2470520",
    "end": "2476760"
  },
  {
    "text": "doesn't do that it really should and that is I don't know if you can tell but when I click over here I kind of have to",
    "start": "2476760",
    "end": "2482040"
  },
  {
    "text": "like click again to get the focus in the box and you might say oh just just set",
    "start": "2482040",
    "end": "2488400"
  },
  {
    "text": "autofocus equals true on that field well trust me that only works once it works the first time you click and it doesn't",
    "start": "2488400",
    "end": "2494119"
  },
  {
    "text": "work after that what I really need to do is just call a tiny bit of JavaScript that says hey set Focus but of course I",
    "start": "2494119",
    "end": "2499520"
  },
  {
    "text": "can't do that in Elm oh no we keep very clear boundaries and all side effects",
    "start": "2499520",
    "end": "2505160"
  },
  {
    "text": "are expressed as data that go out as commands Okay but fortunately we have a",
    "start": "2505160",
    "end": "2510760"
  },
  {
    "text": "full program so we can add commands and there's like um a function that I total totally",
    "start": "2510760",
    "end": "2516400"
  },
  {
    "text": "copy out of the documentation ation about this but of course I have encapsulated that in an editor so I want the focus",
    "start": "2516400",
    "end": "2524640"
  },
  {
    "text": "command now and the focus command is going to give me a function that'll give",
    "start": "2524640",
    "end": "2530240"
  },
  {
    "text": "me a command that I can send out so that when we click it requests the focus on that",
    "start": "2530240",
    "end": "2535599"
  },
  {
    "text": "field um and every command has um every",
    "start": "2535599",
    "end": "2541680"
  },
  {
    "text": "command leads to a result so it's asynchronous my message goes out the JavaScript does its thing when does its",
    "start": "2541680",
    "end": "2547640"
  },
  {
    "text": "thing and it results in a message coming back to me and when I create the command",
    "start": "2547640",
    "end": "2554720"
  },
  {
    "text": "that I'm going to send out I also have to tell Elm how to wrap the results of that command in messages that I can",
    "start": "2554720",
    "end": "2560400"
  },
  {
    "text": "understand and have declared so let's go look at that request Focus",
    "start": "2560400",
    "end": "2565640"
  },
  {
    "text": "command all right dom. focus is the magic of knowing how to call the",
    "start": "2565640",
    "end": "2572000"
  },
  {
    "text": "JavaScript and then we have to attempt that task and it gives us a result that might be okay that's fine send me a no",
    "start": "2572000",
    "end": "2578319"
  },
  {
    "text": "op or it might be an error if I passed it a field ID that it didn't find and so",
    "start": "2578319",
    "end": "2583720"
  },
  {
    "text": "I can wrap that in a message of my own creation and that message will result in",
    "start": "2583720",
    "end": "2590440"
  },
  {
    "text": "nothing uh no change but I'll be able to see it in the debugger so I'll know if I",
    "start": "2590440",
    "end": "2595640"
  },
  {
    "text": "messed up it's very explicit like that so what I want is when we",
    "start": "2595640",
    "end": "2600960"
  },
  {
    "text": "click please request focus on the new label field",
    "start": "2600960",
    "end": "2607720"
  },
  {
    "text": "and that'll probably work",
    "start": "2607720",
    "end": "2612760"
  },
  {
    "text": "build and refresh main oh this is not main anymore just that's view duh",
    "start": "2613319",
    "end": "2621359"
  },
  {
    "text": "subscriptions okay now I can click once and then I can type and I'm very",
    "start": "2621359",
    "end": "2626680"
  },
  {
    "text": "happy happy person all right well that's I mean that's it that's a pretty darn useful",
    "start": "2626680",
    "end": "2634040"
  },
  {
    "text": "application for the amount of time spent on it with a lot of",
    "start": "2634040",
    "end": "2640520"
  },
  {
    "text": "practice and I'm I'm pretty happy with this in fact I'd like to publish it so one thing the elm ecosystem the elm",
    "start": "2640920",
    "end": "2648160"
  },
  {
    "text": "language system does not try to do yet is like build pipelines people just have to integrate",
    "start": "2648160",
    "end": "2654760"
  },
  {
    "text": "El make into whatever so personally I am going to copy a script",
    "start": "2654760",
    "end": "2660200"
  },
  {
    "text": "in um that I frequently copy in okay well commit that why are you not in",
    "start": "2660200",
    "end": "2665839"
  },
  {
    "text": "there get in there okay I'm going to copy this release",
    "start": "2665839",
    "end": "2670880"
  },
  {
    "text": "script um here and I'm also going to bring in a read me that I created just",
    "start": "2670880",
    "end": "2675960"
  },
  {
    "text": "for you earlier and while we're here you can have the slides and um okay we're going to add",
    "start": "2675960",
    "end": "2684920"
  },
  {
    "text": "that we're going to commit that and then when oh and push that up to master I think and then when I run my release",
    "start": "2684920",
    "end": "2691079"
  },
  {
    "text": "script it's going to create a GH Pages branch and um you'll be able to run this",
    "start": "2691079",
    "end": "2696599"
  },
  {
    "text": "app on get Hub CU it's just JavaScript right I don't have a back end but you can save your I mean if you wanted to",
    "start": "2696599",
    "end": "2701640"
  },
  {
    "text": "save your diagram labels you could totally just export your history super sneaky save",
    "start": "2701640",
    "end": "2707760"
  },
  {
    "text": "mechanism oh come on it's not that big a PDF oh okay maybe the slides idea wasn't",
    "start": "2707760",
    "end": "2714880"
  },
  {
    "text": "very good too late now um yeah whatever we'll go look at some",
    "start": "2714880",
    "end": "2721640"
  },
  {
    "text": "slides right uh the one point that",
    "start": "2721680",
    "end": "2727640"
  },
  {
    "text": "I like automated a lot of those code changes which conceptually is like",
    "start": "2727640",
    "end": "2732839"
  },
  {
    "text": "saving me a lot of typing okay that's not conceptual that's just it's like literally saving me a lot of typing",
    "start": "2732839",
    "end": "2738640"
  },
  {
    "text": "conceptually it's encapsulating operations where instead of making a change in one place like in uh this",
    "start": "2738640",
    "end": "2746240"
  },
  {
    "text": "probably happens in angular but I've avoided angular but in Ruby on Rails and stuff like that uh there's a lot of",
    "start": "2746240",
    "end": "2752280"
  },
  {
    "text": "indirection and there's a lot of obstruction and there's a lot of magic going on to let you change at a field in",
    "start": "2752280",
    "end": "2758599"
  },
  {
    "text": "one place and poof it's in the database and poof it's on the screen and and so",
    "start": "2758599",
    "end": "2764119"
  },
  {
    "text": "that one conceptual change winds up being approximately one code change and an Elm that text input was five code",
    "start": "2764119",
    "end": "2770160"
  },
  {
    "text": "changes but I've I've um abstracted that into one operation using my editor so I",
    "start": "2770160",
    "end": "2778280"
  },
  {
    "text": "get all the ease of writing and yet I keep all the ease of",
    "start": "2778280",
    "end": "2783720"
  },
  {
    "text": "reading and by reading I don't mean me reading the code I really really don't mean business people reading cucumber tests I mean me as a programmer who",
    "start": "2783720",
    "end": "2791359"
  },
  {
    "text": "knows Elm but nothing else I don't need to know rails and all its magic I don't need to know the secret angular spells I",
    "start": "2791359",
    "end": "2798520"
  },
  {
    "text": "can look at the code and tell exactly what H what is happening so Elm is kind",
    "start": "2798520",
    "end": "2804000"
  },
  {
    "text": "to people writing Elm and Elm is kind to people maintaining Elm in the",
    "start": "2804000",
    "end": "2809280"
  },
  {
    "text": "future and I love maintenance and therefore I like Elm way better than",
    "start": "2809280",
    "end": "2814440"
  },
  {
    "text": "Ruby so that's really cool the state of elm here if you want",
    "start": "2814440",
    "end": "2822720"
  },
  {
    "text": "to use it it's totally good in the browser and that's the only problem it's trying to solve at the moment uh no red",
    "start": "2822720",
    "end": "2827760"
  },
  {
    "text": "Inc and they hired Evan so they're the company that has the most production Elm probably but dozens of companies have",
    "start": "2827760",
    "end": "2833200"
  },
  {
    "text": "element production it's not weird uh you wind up having to do a little bit of custom Java interrupt because not all",
    "start": "2833200",
    "end": "2838359"
  },
  {
    "text": "the libraries are there we talked about the build script and I really want this to be available at Yao Brisbane and that",
    "start": "2838359",
    "end": "2844760"
  },
  {
    "text": "push happen so now I should be able to run my release script and then it will push up GH pages and then that will be",
    "start": "2844760",
    "end": "2850440"
  },
  {
    "text": "there very soon uh if you're interested in code automation because this atomist rug",
    "start": "2850440",
    "end": "2857280"
  },
  {
    "text": "thing works on every language it is not specific to Elm although I did make a elm library to make my life a little",
    "start": "2857280",
    "end": "2862599"
  },
  {
    "text": "easier uh but it there's a bunch of editors out there that like work on Java projects and some on closure projects",
    "start": "2862599",
    "end": "2869520"
  },
  {
    "text": "that are already published and you can make your own because the CLI it's designed to be used like from slack in a",
    "start": "2869520",
    "end": "2875599"
  },
  {
    "text": "collaborative environment um but I I don't I I don't trust slack in the internet at a conference no uh so I run",
    "start": "2875599",
    "end": "2883040"
  },
  {
    "text": "at the command line also you can test your own at the command line but you can check that out um I hope that this",
    "start": "2883040",
    "end": "2890480"
  },
  {
    "text": "presentation has got you thinking about a different way to abstract code maybe a little less afraid of functional",
    "start": "2890480",
    "end": "2895839"
  },
  {
    "text": "programming and a lot more resentful of runtime errors and most of all I hope that it's",
    "start": "2895839",
    "end": "2903680"
  },
  {
    "text": "raised your standard for a language interface because our interface with the language is not just the syntax it's",
    "start": "2903680",
    "end": "2910240"
  },
  {
    "text": "definitely the compile errors it's also all the tooling it's the entire language system in Elm if I want to write tests I",
    "start": "2910240",
    "end": "2917319"
  },
  {
    "text": "learn Elm test I don't learn mocha and Jasmine and webpack and Gulp and all the",
    "start": "2917319",
    "end": "2923040"
  },
  {
    "text": "incredible richness of the JavaScript",
    "start": "2923040",
    "end": "2928040"
  },
  {
    "text": "ecosystem um let's see uh yeah I work at stripe and I podcast on greater than code and if you find me later I have",
    "start": "2928160",
    "end": "2934119"
  },
  {
    "text": "stickers for both of these and we'll be thrilled to give you one uh that's it this uh this link should by",
    "start": "2934119",
    "end": "2942040"
  },
  {
    "text": "now have all the tools that I used in this",
    "start": "2942040",
    "end": "2947079"
  },
  {
    "text": "presentation and this might even work although GitHub Pages come on do it do it yes okay and you can play with the",
    "start": "2947079",
    "end": "2954720"
  },
  {
    "text": "app right now it's online thank you [Applause]",
    "start": "2954720",
    "end": "2961710"
  }
]