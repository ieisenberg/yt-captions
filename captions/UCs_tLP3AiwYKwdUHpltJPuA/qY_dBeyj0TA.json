[
  {
    "text": "[Music] welcome to the goto podcast each episode",
    "start": "290",
    "end": "8080"
  },
  {
    "text": "covers the brightest and boldest ideas from the world's leading experts in software development tune in for",
    "start": "8080",
    "end": "14120"
  },
  {
    "text": "practical lessons compelling theories and plenty of",
    "start": "14120",
    "end": "19279"
  },
  {
    "text": "inspiration go to gathers the brightest Minds in the software Community to help developers tackle projects today plan",
    "start": "19960",
    "end": "26720"
  },
  {
    "text": "for tomorrow and create a better future stay up to dat with the latest in Tech through goto's top rated events held",
    "start": "26720",
    "end": "33320"
  },
  {
    "text": "online and in person in cities like Amsterdam London Copenhagen and Chicago",
    "start": "33320",
    "end": "39160"
  },
  {
    "text": "and by subscribing to the go-to conferences YouTube channel where you can find thousands more highquality de",
    "start": "39160",
    "end": "44719"
  },
  {
    "text": "talks learn more e cop. [Music]",
    "start": "44719",
    "end": "51320"
  },
  {
    "text": "tech hey hey it's another go-to unscripted welcome I'm Eric Johnson I'm",
    "start": "51320",
    "end": "57280"
  },
  {
    "text": "a principal developer Advocate from AWS Ben who are you hello I'm Ben Smith I'm",
    "start": "57280",
    "end": "63000"
  },
  {
    "text": "also a principal developer Advocate at AWS Ben's a real principal developer a",
    "start": "63000",
    "end": "69720"
  },
  {
    "text": "he's uh and that's what we're talking to today he knows his stuff so uh how's your day going Ben pretty good sunny",
    "start": "69720",
    "end": "75799"
  },
  {
    "text": "here in England 4m. oh yeah that's kind of a rarity right okay so where are you",
    "start": "75799",
    "end": "81200"
  },
  {
    "text": "tell them where you are I'm in Brighton on South Coast of England about 50 miles south of London nice so now that there's",
    "start": "81200",
    "end": "89640"
  },
  {
    "text": "you say Brighton so there's no T there but there is a t in the spelling yes and if you're if you're Posh you say hope",
    "start": "89640",
    "end": "96560"
  },
  {
    "text": "actually oh I don't know if I'm Posh enough for that I I can go bright 10 and",
    "start": "96560",
    "end": "102040"
  },
  {
    "text": "that way you know I'm an American fine so anyway uh so we're going to get started here today we're going to be",
    "start": "102040",
    "end": "108159"
  },
  {
    "text": "talking about really is go to scripted which goes anywhere so we talk about all kinds of things like where Ben lives and",
    "start": "108159",
    "end": "113880"
  },
  {
    "text": "how to say brighten and what Posh the Posh went but we're also going to be talking about step functions uh now for",
    "start": "113880",
    "end": "120479"
  },
  {
    "text": "folks who have never heard of Step functions they may also be called State machines uh Ben can you kind of fill",
    "start": "120479",
    "end": "125920"
  },
  {
    "text": "them in on what is it sure I also like to refer to them as workflows because I think it's Max more easily to day-to-day",
    "start": "125920",
    "end": "135080"
  },
  {
    "text": "stuff step function that's the POS version sure it's a service on AWS that",
    "start": "135080",
    "end": "141959"
  },
  {
    "text": "allows you to create workflows that consist of different steps or different states that orchestrate pretty much all",
    "start": "141959",
    "end": "149400"
  },
  {
    "text": "the other AWS services and actions that are available it's serverless that's why",
    "start": "149400",
    "end": "155160"
  },
  {
    "text": "we're talking about it right because we're serverless Das it's fully managed it's payer use and it's a really great",
    "start": "155160",
    "end": "162720"
  },
  {
    "text": "way of building out servess applications that orchestrate other AWS",
    "start": "162720",
    "end": "167840"
  },
  {
    "text": "Services okay so let's kind of get into that for a second so so this idea of",
    "start": "167840",
    "end": "173120"
  },
  {
    "text": "orchestrating any other service on AWS how how does that",
    "start": "173120",
    "end": "178319"
  },
  {
    "text": "work so it works by using the SDK of that service so let's say you want to",
    "start": "178319",
    "end": "184480"
  },
  {
    "text": "invoke a LDA function right there's an action or a state that you can use to",
    "start": "184480",
    "end": "189560"
  },
  {
    "text": "invoke a Lambda function let's say you want to get the result or the response of that Lambda function and you want to",
    "start": "189560",
    "end": "195840"
  },
  {
    "text": "persist that to a Dynamo DB table well then you can use the put object for the",
    "start": "195840",
    "end": "201200"
  },
  {
    "text": "Dynamo DB action and you can add decisional logic so you can create if",
    "start": "201200",
    "end": "207040"
  },
  {
    "text": "branches you can use parallel statements so you can run these different branches",
    "start": "207040",
    "end": "212360"
  },
  {
    "text": "concurrently you can have Dynamic map states so maybe you don't know how many inputs you're going to have for a",
    "start": "212360",
    "end": "218720"
  },
  {
    "text": "particular array you can uh you can make that Dynamic so you can run things in parallel dynamically and you can add",
    "start": "218720",
    "end": "226519"
  },
  {
    "text": "fail States you can catch errors you can rry errors and you start to get really robust workflows for building out your",
    "start": "226519",
    "end": "233760"
  },
  {
    "text": "servess applications so it's really cool about about State machines workflow step",
    "start": "233760",
    "end": "238840"
  },
  {
    "text": "functions I I and I do the same thing I kind of change on what I'm talking about what's really cool about this workflow",
    "start": "238840",
    "end": "245239"
  },
  {
    "text": "um and and you hit out a lot of that so a lot of what you were saying like like uh you know uh if thens and switches and",
    "start": "245239",
    "end": "252519"
  },
  {
    "text": "uh it's really interesting to me if you kind of think about code uh and and I have code I have and I",
    "start": "252519",
    "end": "259359"
  },
  {
    "text": "think you call Spaghetti string code uh which yeah spaghetti code yeah spaghetti",
    "start": "259359",
    "end": "264520"
  },
  {
    "text": "string yeah spaghetti code and yeah and I totally see that because I've had code that's you know so it's it's 30 lines",
    "start": "264520",
    "end": "270960"
  },
  {
    "text": "long going if it's this then doing this if it's this then do this if it's this then do this and then when I get it all",
    "start": "270960",
    "end": "277080"
  },
  {
    "text": "working then I have to go back and write all the error code if it's this then do this but if it's not or if it failed or",
    "start": "277080",
    "end": "282440"
  },
  {
    "text": "this and then my code just gets bloated and long you know like that uh and step",
    "start": "282440",
    "end": "288160"
  },
  {
    "text": "functions kind of kind of takes that all out for us right yeah exactly that so what your what you've just described",
    "start": "288160",
    "end": "294560"
  },
  {
    "text": "there is uh orchestration as code right you're building out a bunch of SEL or",
    "start": "294560",
    "end": "300039"
  },
  {
    "text": "switch cases or if else statements that will do different things based on",
    "start": "300039",
    "end": "305280"
  },
  {
    "text": "different inputs and outputs imagine if you could visualize that as you're building it right because what you're",
    "start": "305280",
    "end": "311880"
  },
  {
    "text": "building really is an orchestrational workflow so why not use a service that lets you understand that cognitive model",
    "start": "311880",
    "end": "319199"
  },
  {
    "text": "visually that's what step functions is and that's exactly right it's interesting to me when almost fell over",
    "start": "319199",
    "end": "325199"
  },
  {
    "text": "there so keep an eye on me I couldn't fall over uh it's interesting uh when we",
    "start": "325199",
    "end": "330360"
  },
  {
    "text": "talk to folks some push back that I've seen us step F she's like I don't want to do all that logic it's like but you",
    "start": "330360",
    "end": "338280"
  },
  {
    "text": "already are you're already doing it you know in in a way that and and it's making you do more than that because you",
    "start": "338280",
    "end": "345000"
  },
  {
    "text": "have to handle retries you have to handle erors you have to code is logic right and so uh that that's people ask",
    "start": "345000",
    "end": "351919"
  },
  {
    "text": "me when should I use State functions we're going to get to that because because there's pretty good answer on",
    "start": "351919",
    "end": "357520"
  },
  {
    "text": "that and it and it gets further along as as we've added more to step functions but my answer is if you find a lot of",
    "start": "357520",
    "end": "364560"
  },
  {
    "text": "the spaghetti code in in your in your functions or in your land functions if you find yourself writing a lot of logic",
    "start": "364560",
    "end": "372160"
  },
  {
    "text": "uh routing I call it routing logic routing logic versus versus you know",
    "start": "372160",
    "end": "377199"
  },
  {
    "text": "business logic yeah uh so yeah Super S right so I want to step back to something you said earlier um so before",
    "start": "377199",
    "end": "385120"
  },
  {
    "text": "so several years ago and I you I don't remember it all kind I'm old it all runs together several years ago it used to be",
    "start": "385120",
    "end": "392000"
  },
  {
    "text": "in a state machine you had about nine Integrations right we integrated",
    "start": "392000",
    "end": "397680"
  },
  {
    "text": "with Dynamo DB things like that if you wanted to integrate with anything else then you had to use a Lambda function so",
    "start": "397680",
    "end": "404440"
  },
  {
    "text": "you would invoke a Lambda function it would use the SDK to talk to something and get that information back then kick",
    "start": "404440",
    "end": "409759"
  },
  {
    "text": "it back into the to the workflow but we changed that kind of go into the to the",
    "start": "409759",
    "end": "415080"
  },
  {
    "text": "SDK I know you talked about a little bit earlier but how does that help sure so I think it's only been about 3 years that",
    "start": "415080",
    "end": "422280"
  },
  {
    "text": "we've had this feature right so before this this feature you would use",
    "start": "422280",
    "end": "427840"
  },
  {
    "text": "something called that we now called an optimize integration so this could work with things like S3 Dynamo DB Landa I",
    "start": "427840",
    "end": "436720"
  },
  {
    "text": "forget which other ones there are um and what this does is it kind of obis skates a little bit for you the parameters that",
    "start": "436720",
    "end": "444360"
  },
  {
    "text": "you need to set for the action right it's sort of a more tidy neat way of doing it but what we found is that",
    "start": "444360",
    "end": "451039"
  },
  {
    "text": "developers needed to do way more than use these nine Services they needed to I don't know",
    "start": "451039",
    "end": "456840"
  },
  {
    "text": "send things to iot core right spin up in ECS tasks pretty much anything that you",
    "start": "456840",
    "end": "462479"
  },
  {
    "text": "want to do on AWS you you need to be familiar with the SDK and so what we",
    "start": "462479",
    "end": "467520"
  },
  {
    "text": "found is that developers were creating a Lambda function and in that Lambda function they would pull in the",
    "start": "467520",
    "end": "473240"
  },
  {
    "text": "requirement for the SDK maybe as a layer or in a a package dependency depending",
    "start": "473240",
    "end": "479080"
  },
  {
    "text": "on your run time they would pull in that SDK they would write their 10 20 lines",
    "start": "479080",
    "end": "484159"
  },
  {
    "text": "of code to run that SDK action and handle the response and they would send that response back from their Lambda",
    "start": "484159",
    "end": "489639"
  },
  {
    "text": "function they would call that Lambda function from Step functions right so what this meant is a few things the",
    "start": "489639",
    "end": "496199"
  },
  {
    "text": "first is that you're getting a cold start if you're triggering that Lambda function for the first time in a while",
    "start": "496199",
    "end": "502639"
  },
  {
    "text": "you're getting an invocation cost and you have to wait for that LDA function to return its response and have all this",
    "start": "502639",
    "end": "510039"
  },
  {
    "text": "code this extra code to manage which really all you're doing is calling an SDK on another service you're using the",
    "start": "510039",
    "end": "516279"
  },
  {
    "text": "LDA function as kind of glue code you've got to manage the security permissions for your function to be able to do this",
    "start": "516279",
    "end": "522680"
  },
  {
    "text": "thing and you're adding complexity to your application you're adding latency complexity and cost right and then",
    "start": "522680",
    "end": "529519"
  },
  {
    "text": "you're orchestrating that inside a workflow so what we did in the step functions team is they made a way for",
    "start": "529519",
    "end": "536720"
  },
  {
    "text": "you to call many many of these other actions and these Services directly from within the step functions substrate so",
    "start": "536720",
    "end": "544519"
  },
  {
    "text": "the step function service itself is responsible for performing that SDK action whether it's spinning up an ECS",
    "start": "544519",
    "end": "552200"
  },
  {
    "text": "task or sending a message to an iot core topic you still have to configure your",
    "start": "552200",
    "end": "558640"
  },
  {
    "text": "workflow with the action permissions required to do that thing so still nice and secure but you will eliminate the",
    "start": "558640",
    "end": "565279"
  },
  {
    "text": "cold start times required from Lambda you will eliminate the invocation costs that might be required from Landa and",
    "start": "565279",
    "end": "571399"
  },
  {
    "text": "you eliminate all those lines of code that you would need to manage if you would manage that or handle that using a",
    "start": "571399",
    "end": "576480"
  },
  {
    "text": "land function right I remember sitting uh I don't know if I've told this story",
    "start": "576480",
    "end": "581600"
  },
  {
    "text": "or not but I was sitting with with uh Justin Callison who's he's charge of of a lot of Step functions and he uh when",
    "start": "581600",
    "end": "589519"
  },
  {
    "text": "they explained this to me and this is really one of those I mean literally my jaw physically dropped open was",
    "start": "589519",
    "end": "597279"
  },
  {
    "text": "like you first all that that's brilliant whoever went you know what let's just use the existing SDK I was like oh my",
    "start": "597279",
    "end": "605560"
  },
  {
    "text": "gosh that's brilliant uh because here you know inside Amazon when we add features things like that the sdks are",
    "start": "605560",
    "end": "611399"
  },
  {
    "text": "automatically updated one of the first things updated right we have a lot of automated process RoR around that we have Smithy and we have you know things",
    "start": "611399",
    "end": "617279"
  },
  {
    "text": "that are going on there and so so that allows or enables step function to just automatically take that and and the",
    "start": "617279",
    "end": "623720"
  },
  {
    "text": "interesting thing here is is a lot of times we think we're just passing look here so when I use a when I use a",
    "start": "623720",
    "end": "628760"
  },
  {
    "text": "transition here's the Json so that configuration you're talking about what you were talking about the configuration state but also inside you still have to",
    "start": "628760",
    "end": "635279"
  },
  {
    "text": "tell it hey here's the Dynamo DB table there's some js would have to do just like you would do in a Lambda function",
    "start": "635279",
    "end": "641519"
  },
  {
    "text": "yeah but like but then it handles the signed request to the service it handles",
    "start": "641519",
    "end": "647600"
  },
  {
    "text": "all that uh you know behind the scenes and it's it's just it was brilliant I",
    "start": "647600",
    "end": "653040"
  },
  {
    "text": "was like oh my gosh this is incredible I was so excited about it uh and get to see him do that and so and so stepun",
    "start": "653040",
    "end": "659720"
  },
  {
    "text": "went from 79 uh direct connections to and you said",
    "start": "659720",
    "end": "665320"
  },
  {
    "text": "the number before what's the number now well I think it's 220 Services plus and I think that gives",
    "start": "665320",
    "end": "673240"
  },
  {
    "text": "us about 11,000 actions at this point that's right and so when you if if you've never seen the workflow studio um",
    "start": "673240",
    "end": "681639"
  },
  {
    "text": "in and and hopefully we'll get a picture that up or we'll get a link to it uh it's inside of your your AWS account or",
    "start": "681639",
    "end": "689839"
  },
  {
    "text": "I'm just going to throw this out here because I've actually been using quite a bit if you use app composer locally in your IDE you can open a workflow locally",
    "start": "689839",
    "end": "697560"
  },
  {
    "text": "and edit locally uh it's it's pretty cool uh so I've been doing that quite a bit so check that out so you can drag",
    "start": "697560",
    "end": "704480"
  },
  {
    "text": "those in and you can just search through all this you go oh what am I trying to do I'm trying to put put item in in DB",
    "start": "704480",
    "end": "710200"
  },
  {
    "text": "put it you know and and there it is so well hang on we just jumped over a bunch of stuff there some big stuff right big",
    "start": "710200",
    "end": "717279"
  },
  {
    "text": "big launches from back in November so um going back a year I would imagine",
    "start": "717279",
    "end": "723480"
  },
  {
    "text": "there's many people that are not using or don't know about the capabilities of app composer might be worth explaining",
    "start": "723480",
    "end": "729560"
  },
  {
    "text": "that a little bit Yeah so app composer is uh it's just that it's an application",
    "start": "729560",
    "end": "735279"
  },
  {
    "text": "composer and they and they're doing some really cool stuff it's it's going really fast so they came out as very limited",
    "start": "735279",
    "end": "741040"
  },
  {
    "text": "and we knew that you know hey we're going to put it out limited see people think uh and and what it was is inside your AWS console you would you could",
    "start": "741040",
    "end": "748079"
  },
  {
    "text": "open app composer and had this blank canvas and you would have a selection mostly serverless uh selection of",
    "start": "748079",
    "end": "754519"
  },
  {
    "text": "services that you could drag and drop and here's what's really cool is when you would drag on let's say I drag on",
    "start": "754519",
    "end": "760639"
  },
  {
    "text": "API Gateway and then I drag on a Lambda function I want to invoke that uh Lambda function from API Gateway One of the",
    "start": "760639",
    "end": "768079"
  },
  {
    "text": "really cool things is is app composer will deal the thing that Ben was just talking about it will deal with the",
    "start": "768079",
    "end": "774120"
  },
  {
    "text": "creating the I am roles it will deal with the Lambda permissions too cuz cuz",
    "start": "774120",
    "end": "779240"
  },
  {
    "text": "an API Gateway cannot invoke a Lambda function out of the box you have to give it permission because everything's",
    "start": "779240",
    "end": "785160"
  },
  {
    "text": "locked down we need these privileges so if you drag it on there the minute you connect them with the little connector",
    "start": "785160",
    "end": "791440"
  },
  {
    "text": "doing that if you can see it if you connect with the little connector app composer creates the it's",
    "start": "791440",
    "end": "797320"
  },
  {
    "text": "very verot so you can read it it creates these connectors for you that gives you least privileges hey they can invoke",
    "start": "797320",
    "end": "804560"
  },
  {
    "text": "Lambda function so they handle all that it also sets up your logging I mean it's it",
    "start": "804560",
    "end": "809639"
  },
  {
    "text": "it does a lot behind the scenes so it's like a a best practices way of",
    "start": "809639",
    "end": "815560"
  },
  {
    "text": "connecting one service to another and what it's all it's really doing is building up the infrastructure as code",
    "start": "815560",
    "end": "821720"
  },
  {
    "text": "template that you can copy off and you know Place into your your git repositories right and then deploy the",
    "start": "821720",
    "end": "828279"
  },
  {
    "text": "application it's building up that template for you right but now you don't even have to copy it it connects locally",
    "start": "828279",
    "end": "835920"
  },
  {
    "text": "to your hard drive from the from the console so it builds Sam so if you're not if you use cdk we don't support that",
    "start": "835920",
    "end": "843079"
  },
  {
    "text": "at the moment uh but you know keep keep your ears open but it it it builds a CM template uh and then now uh this year",
    "start": "843079",
    "end": "851560"
  },
  {
    "text": "and and tell me if I'm missing other stuff in but this year we released a IDE plugin for VSS code so in VSS code if",
    "start": "851560",
    "end": "860000"
  },
  {
    "text": "you have uh the the adabs toolbox and",
    "start": "860000",
    "end": "865240"
  },
  {
    "text": "you have an a Sam template up in the top right corner you'll see a little uh it's it's a little icon I I I can't",
    "start": "865240",
    "end": "871920"
  },
  {
    "text": "even describe it but it's a little icon you see the top right that allows you to open that in app composer and then if",
    "start": "871920",
    "end": "878079"
  },
  {
    "text": "you have a step function in there and this is what drove this whole point if you have a step function in it you can",
    "start": "878079",
    "end": "883240"
  },
  {
    "text": "say edit step function and it brings the workflow Studio to your desktop I love it it's really cool i'",
    "start": "883240",
    "end": "891480"
  },
  {
    "text": "I've not used this much yet okay only wait like early times just before it was",
    "start": "891480",
    "end": "897120"
  },
  {
    "text": "launched you we get some early access to thing sometimes um so what that allows you to do is to have workflow studio in",
    "start": "897120",
    "end": "905399"
  },
  {
    "text": "your IDE with with all the same actions that you can search for and browse and drag in build out your workflow right",
    "start": "905399",
    "end": "912320"
  },
  {
    "text": "that's right that's right so the interesting thing here is is they're not recreating the the um workflow editor in",
    "start": "912320",
    "end": "921160"
  },
  {
    "text": "in the local they're actually pulling it down so if it changes up here in the console it gets updated locally so yes",
    "start": "921160",
    "end": "927519"
  },
  {
    "text": "it's it's an exact replica you know you are saying how app composer kind of rearranges your file system for you in",
    "start": "927519",
    "end": "934920"
  },
  {
    "text": "real time as you're dragging things in this scared the heck out of me the first time I used it I I opened up a real",
    "start": "934920",
    "end": "942199"
  },
  {
    "text": "project that was already in production and thought Oh I wonder what happens if I drag this over here and my entire",
    "start": "942199",
    "end": "950319"
  },
  {
    "text": "template yeah yeah I so and that's something where there's a couple things that go on and to be honest that we're",
    "start": "950600",
    "end": "956199"
  },
  {
    "text": "working on one the other thing it does like you said you drop a Lambda function on well it creates the the the function",
    "start": "956199",
    "end": "962319"
  },
  {
    "text": "for you but it never deletes a f so let's say you know what I don't want that to be not I want it to be python",
    "start": "962319",
    "end": "967759"
  },
  {
    "text": "it's going to create a new Lambda function change python because we don't want to destroy any the work you've",
    "start": "967759",
    "end": "973959"
  },
  {
    "text": "already done so it will it will create the you know let's say I create a new node Lambda function it creates an",
    "start": "973959",
    "end": "980880"
  },
  {
    "text": "app.js file and and the Handler ready for me to type into and all of that stuff that's pretty that's pretty",
    "start": "980880",
    "end": "987279"
  },
  {
    "text": "amazing I need to check back into uh try that out you're wrong even over the last",
    "start": "987279",
    "end": "992720"
  },
  {
    "text": "since reinvent this year they've had they've come uh they've come a long way with the and I have constant",
    "start": "992720",
    "end": "998160"
  },
  {
    "text": "conversations when because I use Sam them all the time I'm not smart enough to use some of the other ones but I use Sam them all the time and and and we uh",
    "start": "998160",
    "end": "1005920"
  },
  {
    "text": "you know they take feedback constantly so if you're using you if you have feedback or something's going on let me",
    "start": "1005920",
    "end": "1012000"
  },
  {
    "text": "know because they automatically start working on that stuff so it's it's a good team and they're working fast to",
    "start": "1012000",
    "end": "1017079"
  },
  {
    "text": "take care of let's get back to step functions for a minute we we we've been well all right let's tell the truth it",
    "start": "1017079",
    "end": "1022639"
  },
  {
    "text": "was Eric who was running on the rabbit hole but uh so I want to come back to step functions I'm gonna ask you a",
    "start": "1022639",
    "end": "1029038"
  },
  {
    "text": "question here um okay do do you think every single workload should start with",
    "start": "1029039",
    "end": "1036240"
  },
  {
    "text": "step functions oh I think you need to consider why you wouldn't start with",
    "start": "1036240",
    "end": "1043120"
  },
  {
    "text": "step functions right oh okay I I always I always when I approach a new project",
    "start": "1043120",
    "end": "1049440"
  },
  {
    "text": "or a new build I think what's a good reason not to use step functions and it's quite difficult to come up with",
    "start": "1049440",
    "end": "1055799"
  },
  {
    "text": "that sometimes sometimes you're building something so simple or something that really does require a lot of custom code",
    "start": "1055799",
    "end": "1062360"
  },
  {
    "text": "maybe it doesn't lean into this service driven approach as heavily that's a good",
    "start": "1062360",
    "end": "1067679"
  },
  {
    "text": "reason perhaps not to use step functions but I think anything that is consisting",
    "start": "1067679",
    "end": "1073039"
  },
  {
    "text": "of multiple AWS services that need to pass data across each other I would",
    "start": "1073039",
    "end": "1079000"
  },
  {
    "text": "almost always go with step functions first okay how about you yeah so I used",
    "start": "1079000",
    "end": "1084240"
  },
  {
    "text": "to have this conversation there's this guy who used to work with this name Rob Suter do you remember Rob I know that",
    "start": "1084240",
    "end": "1089280"
  },
  {
    "text": "guy yeah oh you know that guy okay yeah Rob's a good guy he he and he used to always say you should I'm making myself",
    "start": "1089280",
    "end": "1096280"
  },
  {
    "text": "there we go you should always always use step functions regardless and I pushed",
    "start": "1096280",
    "end": "1101440"
  },
  {
    "text": "back on him because when he was saying this and and we'll kind of dig into some of some of the features of Step",
    "start": "1101440",
    "end": "1107080"
  },
  {
    "text": "functions but when he was saying the step functions that were only standard step functions or standard workflows and",
    "start": "1107080",
    "end": "1114840"
  },
  {
    "text": "you could only invoke them asynchronously sure so that so at that",
    "start": "1114840",
    "end": "1121559"
  },
  {
    "text": "point it didn't make sense to start with step functions all the time yeah that's a good push back um but as you know",
    "start": "1121559",
    "end": "1129520"
  },
  {
    "text": "those two things there's there's different options now right so you're talking about invoking asynchronously",
    "start": "1129520",
    "end": "1135679"
  },
  {
    "text": "which is the standard workflow type which it makees sense why you would invoke them only asynchronously because",
    "start": "1135679",
    "end": "1142159"
  },
  {
    "text": "they can run for up to one year so you don't want service blocking hanging around for that response will yeah",
    "start": "1142159",
    "end": "1149200"
  },
  {
    "text": "exactly but we've since introduced something called Express workflows right which transition through the stat far",
    "start": "1149200",
    "end": "1156039"
  },
  {
    "text": "more quickly they only run for up to 5 minutes they have a totally different billing model so you build based on how",
    "start": "1156039",
    "end": "1162840"
  },
  {
    "text": "long your workflow takes to complete at a different memory allocation whereas",
    "start": "1162840",
    "end": "1168280"
  },
  {
    "text": "standard workflows are about how long or how many state transitions your workflow has so that's good so if you have a",
    "start": "1168280",
    "end": "1174960"
  },
  {
    "text": "workload that does take years but doesn't have loads and loads of State transitions then that's a really",
    "start": "1174960",
    "end": "1180039"
  },
  {
    "text": "effective cost model but back to express workflows I think the majority of Step",
    "start": "1180039",
    "end": "1187240"
  },
  {
    "text": "functions that I build are very quick very short duration workflows right that",
    "start": "1187240",
    "end": "1192480"
  },
  {
    "text": "just transition through a bunch of AWS Services really quickly and so having a",
    "start": "1192480",
    "end": "1197880"
  },
  {
    "text": "cost model based on how long your workflow takes to complete makes a lot of sense for that and these are the",
    "start": "1197880",
    "end": "1203480"
  },
  {
    "text": "workflow types that you can invoke synchronously so for example you can trigger that from an API Gateway call uh",
    "start": "1203480",
    "end": "1209880"
  },
  {
    "text": "to an endpoint that can run your workflow hang around for 29 seconds which is the API Gateway timeout limit",
    "start": "1209880",
    "end": "1216600"
  },
  {
    "text": "and return that response back to the the s that called API Gateway right it's",
    "start": "1216600",
    "end": "1222200"
  },
  {
    "text": "really nice little pattern yeah in fact you have a pattern if if you're not familiar with I know you are but for",
    "start": "1222200",
    "end": "1227799"
  },
  {
    "text": "those watching if you're not familiar with serverless land we have all these patterns and workflows out there you have a pattern out there I think I do",
    "start": "1227799",
    "end": "1234520"
  },
  {
    "text": "too but you got it first and yours is better uh you have a pattern on using a",
    "start": "1234520",
    "end": "1241520"
  },
  {
    "text": "an Express workflow for crud API right yeah I like this idea right so so it's a",
    "start": "1241520",
    "end": "1250320"
  },
  {
    "text": "it's a bit against some principles that we've speak about sometimes because what you're doing with this concept of your",
    "start": "1250320",
    "end": "1256520"
  },
  {
    "text": "you're rooting any value valid API call So based on the the path and the domain",
    "start": "1256520",
    "end": "1263320"
  },
  {
    "text": "and the authentication anything that's valid you root on to your workflow and",
    "start": "1263320",
    "end": "1268640"
  },
  {
    "text": "then the first state in your workflow is a choice state that says based on the",
    "start": "1268640",
    "end": "1273960"
  },
  {
    "text": "inbound request based on the parameters or the body or the method which one of these branches should my workload take",
    "start": "1273960",
    "end": "1281880"
  },
  {
    "text": "and so what you're doing really is you're moving that routing mechanism into step functions and taking it away",
    "start": "1281880",
    "end": "1288880"
  },
  {
    "text": "from API Gateway I know you don't like me saying the word rooting I don't mind it but I I just I make fun of you every",
    "start": "1288880",
    "end": "1294760"
  },
  {
    "text": "time and I was ready but you okay yeah what is rooting what is what",
    "start": "1294760",
    "end": "1299880"
  },
  {
    "text": "is beta it's the same as beta for for you Americans or for those here it's routing in beta and all those things but",
    "start": "1299880",
    "end": "1306080"
  },
  {
    "text": "yeah um yeah so so and I love to see and and I yeah I agree with what you're",
    "start": "1306080",
    "end": "1311279"
  },
  {
    "text": "saying but again this this pattern of you know I I do API Gateway a little bit",
    "start": "1311279",
    "end": "1316919"
  },
  {
    "text": "right and I love AP this patter of API Gateway being the front door it's kind of your validations there all all kinds",
    "start": "1316919",
    "end": "1323400"
  },
  {
    "text": "of stuff is happening there and then you pass to this step function and there's some advantages here kind of interesting",
    "start": "1323400",
    "end": "1329120"
  },
  {
    "text": "um is one there's no cold ster with this with this uh Express State machine it's",
    "start": "1329120",
    "end": "1334360"
  },
  {
    "text": "just there it's it's instance running memory it's fast um two you have this",
    "start": "1334360",
    "end": "1339720"
  },
  {
    "text": "Dragon drop designer that that we we were talking about earlier uh and and and and the cool thing is is you do need",
    "start": "1339720",
    "end": "1347120"
  },
  {
    "text": "a little vtl uh in API Gateway to connect API Gateway to step functions",
    "start": "1347120",
    "end": "1354279"
  },
  {
    "text": "tiny just a tiny bit Yeah but both Sam and app composer because app composers",
    "start": "1354279",
    "end": "1360760"
  },
  {
    "text": "work on top of Sam will do that for you so you can actually drag API Gateway on drag a step function in set it to",
    "start": "1360760",
    "end": "1366799"
  },
  {
    "text": "express tell and connect it and off you goce so uh if you haven't checked that out it's worth checking out uh but yes",
    "start": "1366799",
    "end": "1373799"
  },
  {
    "text": "this idea of now that you can do synchronous because if you ever hear us",
    "start": "1373799",
    "end": "1378880"
  },
  {
    "text": "talk we're always saying asynchronous whenever possible and I still believe that we are big fans of run asynchronous",
    "start": "1378880",
    "end": "1386480"
  },
  {
    "text": "that allows you that gives you a lot of Grace when you're building an application if if something goes wrong you can recover and and then get the",
    "start": "1386480",
    "end": "1393240"
  },
  {
    "text": "customer back the answer uh saves saves a lot of things but there are times when you just have to have a synchronous",
    "start": "1393240",
    "end": "1399360"
  },
  {
    "text": "invocation and so when they open that up uh to me that was kind of the that was",
    "start": "1399360",
    "end": "1405640"
  },
  {
    "text": "kind of like okay that seals the deal I go to se functions first all the time as well that's first thing I do I open my",
    "start": "1405640",
    "end": "1411400"
  },
  {
    "text": "app composer I drag my step function in and then how am I going to invoke it well in a vage rule or an API Gateway or",
    "start": "1411400",
    "end": "1418320"
  },
  {
    "text": "something like that uh and and so Rob Suter you were ahead of your time you",
    "start": "1418320",
    "end": "1423600"
  },
  {
    "text": "were wronged in you're right now sir I hope he sees this I'll have to make sure he he sees this so uh but yeah it's",
    "start": "1423600",
    "end": "1431039"
  },
  {
    "text": "that's what I love about uh you know again going uh going directly step functions you you mentioned the um the",
    "start": "1431039",
    "end": "1437360"
  },
  {
    "text": "synchronous asynchronous point there when when you invoke from API",
    "start": "1437360",
    "end": "1442600"
  },
  {
    "text": "Gateway and like often you'll have something that will be triggered from a",
    "start": "1442600",
    "end": "1447960"
  },
  {
    "text": "web hook for example where you want to do some stuff in your AWS account and you might want to use step functions for",
    "start": "1447960",
    "end": "1453679"
  },
  {
    "text": "that but you want to get the acknowledgement that your workflow is running straight away right so maybe",
    "start": "1453679",
    "end": "1460360"
  },
  {
    "text": "it's triggering something via slack or some other tool that you use dayto day you can still do that right you can",
    "start": "1460360",
    "end": "1466360"
  },
  {
    "text": "still go API Gateway to I don't know sqs or API Gateway direct a step function",
    "start": "1466360",
    "end": "1471960"
  },
  {
    "text": "and return that acknowledgement back to the caller so I think it's worth pointing out you still have that that",
    "start": "1471960",
    "end": "1478320"
  },
  {
    "text": "option as an Express workflow as well it's just you you get to pick now if you",
    "start": "1478320",
    "end": "1483360"
  },
  {
    "text": "want to run that synchronous s or asynchronous S yeah that's a good call",
    "start": "1483360",
    "end": "1488399"
  },
  {
    "text": "uh it does do the yeah you're right it sends the acknowledgement all of our asynchronous services send it and you can do a step function or yeah you can",
    "start": "1488399",
    "end": "1495080"
  },
  {
    "text": "do that a really good call out all right so Ben what let me ask you this what's the",
    "start": "1495080",
    "end": "1500919"
  },
  {
    "text": "coolest pattern you like in Step",
    "start": "1500919",
    "end": "1505799"
  },
  {
    "text": "functions this I'm going to tell you one in a minute that you did that I love but go ahead there's a couple and you're",
    "start": "1508039",
    "end": "1514080"
  },
  {
    "text": "probably going take it now I think the most powerful one is this concept of this is what I think the",
    "start": "1514080",
    "end": "1522080"
  },
  {
    "text": "cloud is all about and what cist is all about is breaking down large workloads",
    "start": "1522080",
    "end": "1527919"
  },
  {
    "text": "into smaller and smaller pieces that you can run concurrently right so you can wrap your head around too yeah a AWS has",
    "start": "1527919",
    "end": "1534960"
  },
  {
    "text": "the the economies of scale and the resources to be able to process things in parallel in a way that most",
    "start": "1534960",
    "end": "1541000"
  },
  {
    "text": "businesses can't on their own right and with step functions things like the",
    "start": "1541000",
    "end": "1546520"
  },
  {
    "text": "dynamic map state which allows you to concurrently Branch out to 10,000 other",
    "start": "1546520",
    "end": "1552520"
  },
  {
    "text": "workflows at the same time right that's out of the box that's ready to go so if you can break that",
    "start": "1552520",
    "end": "1558799"
  },
  {
    "text": "a large task I Know video processing file processing into multiple smaller",
    "start": "1558799",
    "end": "1564600"
  },
  {
    "text": "tasks run them concurrently and then fan back in so you have the fan out the parallel execution fan back in I think",
    "start": "1564600",
    "end": "1571720"
  },
  {
    "text": "this is the fundamental point of building applications using cloud services using AWS and using serverless",
    "start": "1571720",
    "end": "1579039"
  },
  {
    "text": "so this is where I think step functions is really the key to the whole thing right is orchestrating all of that in a",
    "start": "1579039",
    "end": "1584760"
  },
  {
    "text": "workflow that's my favorite patent no and agree with you that's super powerful",
    "start": "1584760",
    "end": "1590399"
  },
  {
    "text": "the the distributed map uh so we have an internal process that I run it runs every 6 hours to to do features things",
    "start": "1590399",
    "end": "1597919"
  },
  {
    "text": "like that and and we we track stuff and and I have to go through probably you",
    "start": "1597919",
    "end": "1603159"
  },
  {
    "text": "know not a lot really about a thousand records each time right but I can do it in just seconds because I don't go one",
    "start": "1603159",
    "end": "1610240"
  },
  {
    "text": "then do this then do this it just so so with that and I'm going to tell you my",
    "start": "1610240",
    "end": "1615399"
  },
  {
    "text": "favorite a little bit I do want to go back to this one of the patterns that that I recommend uh and I want to see if you agree and it's okay if you don't you",
    "start": "1615399",
    "end": "1621880"
  },
  {
    "text": "could be wrong um one of the patterns that I tell folks going back to to to the express and standard I always start",
    "start": "1621880",
    "end": "1628480"
  },
  {
    "text": "with Express and I think you were kind of leaning for that and then when I realize I need standard I swap it over to standard because it's just literally",
    "start": "1628480",
    "end": "1634399"
  },
  {
    "text": "just as easy as saying type equals Express type equals standard and ISC um",
    "start": "1634399",
    "end": "1639840"
  },
  {
    "text": "but one of the cool patterns that I like is I'll use an Express and then I'll I'll um invoke standards from that",
    "start": "1639840",
    "end": "1647600"
  },
  {
    "text": "Express St as Subs oh I'll invoke Express ones as well but this idea of Comon having",
    "start": "1647600",
    "end": "1654000"
  },
  {
    "text": "you're really getting crazy in this you have this master controller or main controller and then you invoke these",
    "start": "1654000",
    "end": "1661080"
  },
  {
    "text": "little ones and I think you do that in the on the um plugins manager that we're doing uh with the video that's",
    "start": "1661080",
    "end": "1668440"
  },
  {
    "text": "interesting it's usually the other way around that we see people doing it is having like a master standard workflow",
    "start": "1668440",
    "end": "1674200"
  },
  {
    "text": "that can run one year and then that that that calls out to lots of synchronous Express workflows maybe it wants to wait",
    "start": "1674200",
    "end": "1681159"
  },
  {
    "text": "for them to return a response or maybe not maybe they're maybe they're asynchronous but I think this is another",
    "start": "1681159",
    "end": "1687159"
  },
  {
    "text": "really really interesting pattern right where you're embedding workflows within workflows so you're using the durability",
    "start": "1687159",
    "end": "1694519"
  },
  {
    "text": "the the the state um length of up processing for up to one year of",
    "start": "1694519",
    "end": "1700200"
  },
  {
    "text": "standard workflows and then you're using the speed and the different cost model of the duration based cost model of",
    "start": "1700200",
    "end": "1706679"
  },
  {
    "text": "Express workflows and and you can really start to grind out a really cost effective model when you start using two",
    "start": "1706679",
    "end": "1713679"
  },
  {
    "text": "things together yeah that's right and and uh and and that's what I recommend is start with Express and then when you",
    "start": "1713679",
    "end": "1719720"
  },
  {
    "text": "need standard and sometimes that standard especially if you're doing an Express you know as synchr that standard",
    "start": "1719720",
    "end": "1727480"
  },
  {
    "text": "uh you like so one of the features that are in standard but not express is the waight for token right and so maybe I",
    "start": "1727480",
    "end": "1734960"
  },
  {
    "text": "kick that off asynchronously and move on and it completes that so I only have one St one or two",
    "start": "1734960",
    "end": "1740840"
  },
  {
    "text": "transitions in that standard so I'm saving some money there and my Express is moving on so so let let's mention so",
    "start": "1740840",
    "end": "1746399"
  },
  {
    "text": "that's that's my other favorite pattern is this wait for task token so so what that allows you to do is to get to a",
    "start": "1746399",
    "end": "1753559"
  },
  {
    "text": "step and that step will do whatever it needs to do so let's say that is putting something onto an event bus now if you",
    "start": "1753559",
    "end": "1761760"
  },
  {
    "text": "also choose to use this weight for task token pattern then along with whatever payload it put onto your event bus it",
    "start": "1761760",
    "end": "1768120"
  },
  {
    "text": "will also generate a unique task token and what that means is that your",
    "start": "1768120",
    "end": "1773760"
  },
  {
    "text": "workflow will now pause at that State until it's told to resume and the way you resume it is whenever that payload",
    "start": "1773760",
    "end": "1782480"
  },
  {
    "text": "is triggered whatever it needs to trigger and that thing is finished you grab that task token that hopefully",
    "start": "1782480",
    "end": "1787640"
  },
  {
    "text": "you've stored somewhere and you use an SDK to call back to the workflow and say okay you can move on to the next step or",
    "start": "1787640",
    "end": "1794640"
  },
  {
    "text": "throw an error and move on to a different step right and so this way were able to use human approval steps",
    "start": "1794640",
    "end": "1800840"
  },
  {
    "text": "even multiple human approval steps right maybe you have a a process with lots of gates and lots of different people need",
    "start": "1800840",
    "end": "1806440"
  },
  {
    "text": "to approve maybe one of them is a master approver that supersedes the others and you can build all of this in using this",
    "start": "1806440",
    "end": "1812880"
  },
  {
    "text": "simple I think it's fairly simple uh wait for task token pattern once you",
    "start": "1812880",
    "end": "1818120"
  },
  {
    "text": "wrap your head around it and when you first look it's like oh but then then when it clicks it's like that's the",
    "start": "1818120",
    "end": "1824080"
  },
  {
    "text": "coolest thing ever I use it uh we built something for uh reinvent for video video processing we're talkinging about",
    "start": "1824080",
    "end": "1830320"
  },
  {
    "text": "I built a plugin and my plugin was using uh AI through Adobe it actually is calling an adobe endpoint and and doing",
    "start": "1830320",
    "end": "1837600"
  },
  {
    "text": "some stuff and so I had to wait for it uh and and this was this is probably the first time I'd ever actually used Tas",
    "start": "1837600",
    "end": "1843000"
  },
  {
    "text": "token in like a true I use obviously conceptually a lot and so it was just really cool so I saved the token and I",
    "start": "1843000",
    "end": "1848799"
  },
  {
    "text": "saved the job the Adobe job in Dynamo DB so when the job came back then I could",
    "start": "1848799",
    "end": "1854320"
  },
  {
    "text": "map to the thing and then I just kicked it off again it it was pretty slick I love it so that that thing you built",
    "start": "1854320",
    "end": "1861679"
  },
  {
    "text": "that was using Adobe to generate thumbnails using all sorts of interesting filters as a Json file right",
    "start": "1861679",
    "end": "1869760"
  },
  {
    "text": "so you you were posting out to Adobe from your workflow waiting for that response I think you gave them a signed",
    "start": "1869760",
    "end": "1876720"
  },
  {
    "text": "URL on S3 right so that that gets up that thumbnail gets uploaded to S3 the",
    "start": "1876720",
    "end": "1882639"
  },
  {
    "text": "task token is then used to resume the workflow I think it's a really neat pattern and building is uh it it's super",
    "start": "1882639",
    "end": "1889880"
  },
  {
    "text": "powerful those for those pauses and for the waiting to you know to especially like the manual like you mentioned earlier so tell you the one I like and",
    "start": "1889880",
    "end": "1896840"
  },
  {
    "text": "this is much simpler oh it's none of them but I know that's what I'm gonna tell you this is this is it my favorite",
    "start": "1896840",
    "end": "1902320"
  },
  {
    "text": "one and I saw Ben do this once I remember looking at and going what's he doing I'll have to teach him how this",
    "start": "1902320",
    "end": "1908200"
  },
  {
    "text": "works and then I realized what he was doing like oh my gosh it's brilliant um basically the idea is so step functions",
    "start": "1908200",
    "end": "1914120"
  },
  {
    "text": "when when you do a state you can add you can make the state you know you can add the state kind of gets bigger you say",
    "start": "1914120",
    "end": "1919480"
  },
  {
    "text": "okay I'm going to get some results from Lambda function I'm get some results from Dynamo DB and then kind of putting all that together oh you you add to the",
    "start": "1919480",
    "end": "1926559"
  },
  {
    "text": "payload as it moves down right you add to the payload but sometimes you get something that comes in right at the beginning that you need right at the end",
    "start": "1926559",
    "end": "1933000"
  },
  {
    "text": "now you can pass it down and it's not that hard but there's a little cognitive load of like you know Ben does a",
    "start": "1933000",
    "end": "1940159"
  },
  {
    "text": "parallel so when something comes in he does a parallel State he runs all the",
    "start": "1940159",
    "end": "1945279"
  },
  {
    "text": "thing see in the thing he runs everything he needs to do on one side and the parameter is saved all the way to the end and then I just have an array",
    "start": "1945279",
    "end": "1951880"
  },
  {
    "text": "with all my results from this one and the parameter and I put that and and yes that's the simplest I maybe a lazy move",
    "start": "1951880",
    "end": "1958240"
  },
  {
    "text": "but I think it's brilliant move and I use it oh first thing I do is I drop a parallel and every time I build stuff on",
    "start": "1958240",
    "end": "1964760"
  },
  {
    "text": "I like that too because what you've done there is you've you've got like a global variable almost right and it's ready for",
    "start": "1964760",
    "end": "1972320"
  },
  {
    "text": "everything until you exit that parallel state so you can use it at any point",
    "start": "1972320",
    "end": "1978080"
  },
  {
    "text": "more often than not you get data on the on the initial call that you need to send back somewhere right you need you",
    "start": "1978080",
    "end": "1984000"
  },
  {
    "text": "have a job ID much like with Adobe or something like that so and I've done it at little spots where I've had to come",
    "start": "1984000",
    "end": "1990039"
  },
  {
    "text": "together and then I break it back out in the parallel again to continue the same yeah so really cool pattern what we",
    "start": "1990039",
    "end": "1996399"
  },
  {
    "text": "really need is to get rid of that pattern and we need some sort of global variable parameters concept right this",
    "start": "1996399",
    "end": "2002519"
  },
  {
    "text": "is something that customers are asking for so AWS really good that customers",
    "start": "2002519",
    "end": "2007919"
  },
  {
    "text": "let's hope that comes soon yeah yeah let's let's push for that so well hey",
    "start": "2007919",
    "end": "2012960"
  },
  {
    "text": "Ben we've of course we've we've talked for a good amount of time and and they're going to have to edit this down",
    "start": "2012960",
    "end": "2018320"
  },
  {
    "text": "because you know Ben and I are talkers but any anything you want to throw out last minute before we head out any",
    "start": "2018320",
    "end": "2023760"
  },
  {
    "text": "Shameless plugs uh well the the only other thing I would say is worth mentioning is the potential for step",
    "start": "2023760",
    "end": "2030000"
  },
  {
    "text": "functions with AI things like training models um inok models and then chaining",
    "start": "2030000",
    "end": "2036360"
  },
  {
    "text": "prompts and respons together yeah I think there's so much potential that you can use your workflows for for kind of",
    "start": "2036360",
    "end": "2043799"
  },
  {
    "text": "similar to what we were just talking about right saving some kind of global state of your conversation either in",
    "start": "2043799",
    "end": "2049919"
  },
  {
    "text": "Dynamo DB or in the the workflow itself in the parallel State and chaining",
    "start": "2049919",
    "end": "2055358"
  },
  {
    "text": "together these responses I think is a really interesting use case that I'm I'm looking forward to seeing more and more",
    "start": "2055359",
    "end": "2061358"
  },
  {
    "text": "how customers doing that with step functions so so I've done some work around this and you I've talked about",
    "start": "2061359",
    "end": "2067280"
  },
  {
    "text": "this in and I was shocked because it could do Lang chain but replacing that with step functions was fairly easy and",
    "start": "2067280",
    "end": "2075000"
  },
  {
    "text": "just quick deal drag grab this context and so so basically what what it is you the question comes in let's just say a",
    "start": "2075000",
    "end": "2081200"
  },
  {
    "text": "chat out the question comes in save the question to dynb actually I would go ahead and hit the llm uh build the",
    "start": "2081200",
    "end": "2087158"
  },
  {
    "text": "prompt of like H hit the llm and then I would say the question the answer Dynamo DB so the next time it came through you",
    "start": "2087159",
    "end": "2093280"
  },
  {
    "text": "can say look I asked this and here was your answer now I ask this you could also use it to grab like do do uh uh the",
    "start": "2093280",
    "end": "2101480"
  },
  {
    "text": "rag stuff so you can call it like we uh Kindra have can do indexes for you and",
    "start": "2101480",
    "end": "2107800"
  },
  {
    "text": "and eddings and things like that and so I had Kindra go and and index all of of",
    "start": "2107800",
    "end": "2114040"
  },
  {
    "text": "um of uh serverless land and now I can ask a question and just have serverless",
    "start": "2114040",
    "end": "2119079"
  },
  {
    "text": "land be the scope of info uh so all three step functions the only time I rolled out and this is interesting the",
    "start": "2119079",
    "end": "2125520"
  },
  {
    "text": "only time I rolled out to Lambda function was to create the actual prompt I could have done it step functions but",
    "start": "2125520",
    "end": "2131880"
  },
  {
    "text": "it would have just been a chain of passes to kind of get that to be all the right things so it was just easier and",
    "start": "2131880",
    "end": "2138119"
  },
  {
    "text": "and this and I think this is an important call out it's Common Sense people ask am I empti Lambda no I'm not",
    "start": "2138119",
    "end": "2144520"
  },
  {
    "text": "anti- Lambda I I just think you use it for the right job and that's one of them so it's common sense of orchestrate",
    "start": "2144520",
    "end": "2149960"
  },
  {
    "text": "business logic there you go so uh really good call up and yeah that the geni uh",
    "start": "2149960",
    "end": "2155760"
  },
  {
    "text": "it's it's huge so yeah uh anything else I would say if anyone's interested in",
    "start": "2155760",
    "end": "2163000"
  },
  {
    "text": "seeing more things you can do with step functions there's this awesome website called serverless land.com you can go",
    "start": "2163000",
    "end": "2169119"
  },
  {
    "text": "there to serverless land.com slork flows and we've got about 160 different",
    "start": "2169119",
    "end": "2175520"
  },
  {
    "text": "patterns all built with step functions uploaded by customers and AWS experts",
    "start": "2175520",
    "end": "2181040"
  },
  {
    "text": "that's a great place to kind of jump off from and and try things out right yeah and that's that's been Ben's Baby Ben",
    "start": "2181040",
    "end": "2187160"
  },
  {
    "text": "Ben kind of created that and has done a lot of those and and done a great job around that super impressive uh if if",
    "start": "2187160",
    "end": "2193400"
  },
  {
    "text": "you're looking uh and I don't think you have your Twitter LinkedIn up there but look for Ben on on Twitter if you've got",
    "start": "2193400",
    "end": "2198960"
  },
  {
    "text": "questions he's or me I'm glad to help but uh Ben is literally a genius in Step functions he's kind of our resident",
    "start": "2198960",
    "end": "2204760"
  },
  {
    "text": "expert um also if you're in the London area and you're seeing this before May 14th uh 2024 we are having Eva day which",
    "start": "2204760",
    "end": "2213240"
  },
  {
    "text": "is event driven architecture day and and as as we've said quite a few times uh step functions is at the heart of Eda",
    "start": "2213240",
    "end": "2221560"
  },
  {
    "text": "uh in the orchestrating uh you know and so come check it out we'll be talking quite a bit about that in fact uh and I",
    "start": "2221560",
    "end": "2228680"
  },
  {
    "text": "haven't even announced it yet so I'll just say it here we've got someone who will be doing what we just talked about",
    "start": "2228680",
    "end": "2233760"
  },
  {
    "text": "talking about doing uh prompt chaining and and that kind of stuff using step",
    "start": "2233760",
    "end": "2239040"
  },
  {
    "text": "functions nice uh so it's really cool I just read the the abstract and today I",
    "start": "2239040",
    "end": "2244079"
  },
  {
    "text": "was like yes uh so uh definitely of our essays Uma we'll be talking about that",
    "start": "2244079",
    "end": "2249960"
  },
  {
    "text": "so uh with that uh Ben thanks so much for joining me for unscripted here I",
    "start": "2249960",
    "end": "2255160"
  },
  {
    "text": "have my go-to crew by the way I don't know if you just saying I have like nine of these shirts but rent your color yeah",
    "start": "2255160",
    "end": "2262400"
  },
  {
    "text": "thank you I appreciate that yeah so uh all right well with that we're going to say goodbye and again thanks and we'll",
    "start": "2262400",
    "end": "2268359"
  },
  {
    "text": "see yall later thanks all right bye thanks for listening to this episode of the go-to podcast head over to gpa. Tech",
    "start": "2268359",
    "end": "2275800"
  },
  {
    "text": "to discover lots more content from the brightest minds and software development",
    "start": "2275800",
    "end": "2281720"
  },
  {
    "text": "[Music]",
    "start": "2282320",
    "end": "2290690"
  }
]