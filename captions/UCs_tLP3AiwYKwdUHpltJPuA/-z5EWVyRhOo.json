[
  {
    "start": "0",
    "end": "170000"
  },
  {
    "text": "succeeding with software at scale is incredibly \nhard i saw one software disaster after another",
    "start": "4080",
    "end": "9760"
  },
  {
    "text": "it's pretty much about taking \nmy psychology background and   putting on top of the technical work that i do",
    "start": "9760",
    "end": "16400"
  },
  {
    "text": "I think the hotspot analysis makes our not to-do \nlists longer and it shortens the the to-do list",
    "start": "16400",
    "end": "25279"
  },
  {
    "text": "how do i figure out negative \ntrends which are not horrible yet",
    "start": "25280",
    "end": "29840"
  },
  {
    "text": "if i go to a client and say that \nyou know rewrite this code it's only   twenty thousand lines of code they are not \ngoing to be happy right it's not actionable",
    "start": "30480",
    "end": "38480"
  },
  {
    "text": "the thing is that most other \nmetrics are just as bad this episode was made possible \nthanks to gotopia.tech",
    "start": "38480",
    "end": "44640"
  },
  {
    "text": "Hello, everyone. Welcome to the GOTO Book Club. \nI am Sven Johann. I work for INNOQ. I like  ",
    "start": "45360",
    "end": "51760"
  },
  {
    "text": "improving systems and I like to talk about it, \nto teach it, to write about it. And today I have,  ",
    "start": "51760",
    "end": "60719"
  },
  {
    "text": "as a guest, Adam Tornhill. Adam, \nwould you like to introduce yourself? ",
    "start": "61840",
    "end": "67200"
  },
  {
    "text": "Thanks, Sven, and thanks for having me \nhere. I'm Adam Tornhill. I'm a programmer   and a psychologist. I’ve been working in \nthe software industry for over 25 years,  ",
    "start": "68320",
    "end": "76640"
  },
  {
    "text": "and I spent the past 5 years building a platform \ncalled CodeScene working with code analysis. I'm  ",
    "start": "77280",
    "end": "83760"
  },
  {
    "text": "also the author of a couple of books and I like \nto think that the best-known books are \"Your Code   as a Crime Scene\" and \"Software Design X-rays.\"\nActually, quite an interesting combination. How  ",
    "start": "83760",
    "end": "94880"
  },
  {
    "text": "did it come that you studied computer science \nand psychology? It's a rare combination. ",
    "start": "94880",
    "end": "100720"
  },
  {
    "text": "It might be. I started to work in the software \nindustry in 1997 and after a couple of years,   I kind of noticed a pattern that succeeding with \nsoftware at scale is incredibly hard. I saw one  ",
    "start": "100720",
    "end": "111520"
  },
  {
    "text": "software disaster after another. At some point, I \njust wanted to try to understand why it is so hard  ",
    "start": "111520",
    "end": "117039"
  },
  {
    "text": "to write good code. And I kind of decided to seek \nthe answers within psychology because psychology  ",
    "start": "117040",
    "end": "122480"
  },
  {
    "text": "has a lot to offer to us in our traditional \ntechnical field. You know, psychology is about   the way we think, how we reason, how we solve \nproblems and also how we collaborate with others. ",
    "start": "122480",
    "end": "131760"
  },
  {
    "text": "Originally, I just signed up for one semester \nbut psychology is really, really fun. So,  ",
    "start": "132960",
    "end": "139680"
  },
  {
    "text": "after that semester, I thought, \"Okay, let's dive \ninto one more topic and then one more topic.\" I   ended up spending six years at the university \nand I took my degree by accident, more or less. ",
    "start": "139680",
    "end": "148640"
  },
  {
    "text": " \nOh, okay. I once did a Coursera course,  ",
    "start": "148640",
    "end": "153680"
  },
  {
    "text": "an introduction to psychology. Basically, it \nwas only the most famous psychology cases,  ",
    "start": "153680",
    "end": "160400"
  },
  {
    "text": "and it was very fascinating. But I stopped after \none semester. And I think this rare combination  ",
    "start": "160400",
    "end": "171840"
  },
  {
    "start": "170000",
    "end": "530000"
  },
  {
    "text": "brought, to me at least, a \ntotally new thinking about  ",
    "start": "174960",
    "end": "180960"
  },
  {
    "text": "improving systems. Before I read your \nfirst book, \"Your Code as a Crime Scene\" I  ",
    "start": "180960",
    "end": "188320"
  },
  {
    "text": "used tools like Sonar. I don't think that Sonar \nis a bad tool. I really like it. It helps you see  ",
    "start": "188320",
    "end": "197840"
  },
  {
    "text": "problems with your code, but it makes it \nreally hard to prioritize your work. If you run  ",
    "start": "198640",
    "end": "205920"
  },
  {
    "text": "a Sonar analysis and it tells you you have 3 \nmillion findings and your technical debt is 2,000  ",
    "start": "206560",
    "end": "212480"
  },
  {
    "text": "years, it's just not helpful. I have to invest \na lot of time to understand what's really  ",
    "start": "214240",
    "end": "222240"
  },
  {
    "text": "important and also, even if I figure out what's \nimportant, the tool cannot really help me. ",
    "start": "222240",
    "end": "229920"
  },
  {
    "text": "That's how we worked in the past, but then \nyour book came along accompanied by tooling and  ",
    "start": "232240",
    "end": "238480"
  },
  {
    "text": "I think it made it really easy to \nprioritize. Maybe we should talk about the  ",
    "start": "238480",
    "end": "246799"
  },
  {
    "text": "way of prioritization. You called the type \nof prioritization, if I say that correctly,  ",
    "start": "248640",
    "end": "256959"
  },
  {
    "text": "a behavioral code analysis. Is that correct?\nYes. That's correct, and it's pretty much  ",
    "start": "256960",
    "end": "264080"
  },
  {
    "text": "about taking my psychology background and \nputting it on top of the technical work that  ",
    "start": "264080",
    "end": "269599"
  },
  {
    "text": "I do. I agree with you, to me, the whole idea \nof static analysis is also a valuable practice.  ",
    "start": "269600",
    "end": "276240"
  },
  {
    "text": "It's something that works very well as a \nlow-level feedback loop when writing code.   But static analysis, like you point out, has \nthis property that it treats all code as equal  ",
    "start": "276240",
    "end": "287280"
  },
  {
    "text": "because there is no such thing as a business \npriority when you just look at the source code   and that leads to having thousands of findings.\nWhat I do instead is that I look at how we as a  ",
    "start": "288320",
    "end": "299760"
  },
  {
    "text": "development organization interact with \nthe code we are building. In practice,  ",
    "start": "299760",
    "end": "304800"
  },
  {
    "text": "that means looking at things like version control \ndata. You could then combine that with Jira data  ",
    "start": "304800",
    "end": "309840"
  },
  {
    "text": "because then you can calculate the \nimpact of each one of the findings.  ",
    "start": "310880",
    "end": "317520"
  },
  {
    "text": "That gives you a window into all those quality \nissues and tells you that this is what's important  ",
    "start": "318320",
    "end": "324720"
  },
  {
    "text": "and that this might be problematic long term \nbut we can most likely live with it for now. ",
    "start": "324720",
    "end": "330240"
  },
  {
    "text": "So that's one of the things. The other thing \nthat I noticed with static analysis is that  ",
    "start": "330240",
    "end": "335280"
  },
  {
    "text": "once an organization grows beyond, I would say, \njust a handful of people, then organizational   factors like coordination between different \nteams, team coupling, key personnel dependencies,  ",
    "start": "336640",
    "end": "347280"
  },
  {
    "text": "knowledge distribution, all that kind of stuff \ntend to become maybe even more important than  ",
    "start": "347280",
    "end": "352480"
  },
  {
    "text": "any technical properties of the code. And static \nanalysis was simply not designed to help us with  ",
    "start": "352480",
    "end": "358080"
  },
  {
    "text": "those aspects, right.\nExactly.  That was pretty much why I decided to call it \nbehavioral code analysis. It's more about the  ",
    "start": "358080",
    "end": "366160"
  },
  {
    "text": "behavior of the organization rather than the code.\nWhen I tried to prioritize, I also thought  ",
    "start": "366160",
    "end": "373520"
  },
  {
    "text": "about our customers. You know, a lot of code is \noften used or executed because of customer use.  ",
    "start": "373520",
    "end": "384800"
  },
  {
    "text": "Would that also be a part of an idea to prioritize \nby how customers are interacting with the system? ",
    "start": "384800",
    "end": "392080"
  },
  {
    "text": "I mean, it could definitely be an aspect. You \nknow, software is interesting because it has  ",
    "start": "392800",
    "end": "399440"
  },
  {
    "text": "power laws everywhere. You look at code and \nlike 80 percent of your code is never touched.  ",
    "start": "400080",
    "end": "407759"
  },
  {
    "text": "You look at your feature set and it's most likely \nthe same thing. Most customers use a smaller  ",
    "start": "407760",
    "end": "413120"
  },
  {
    "text": "subset of your features. So clearly \nthere is a priority aspect there as well.  Yes. For me it was easy to convince, \nfor example, a product owner to improve  ",
    "start": "413120",
    "end": "423759"
  },
  {
    "text": "code when I could say this is part of the 80 \npercent usage pattern or something like that. ",
    "start": "423760",
    "end": "430400"
  },
  {
    "text": "You wrote the book \"Your Code as a Crime Scene\" \nand now you published a new book, \"Software Design  ",
    "start": "434560",
    "end": "442240"
  },
  {
    "text": "X-rays\". What was the motivation and the new \nlearning, that you had to write a follow-up book? ",
    "start": "442240",
    "end": "447440"
  },
  {
    "text": "\"Your Code as a Crime Scene\" is a book I wrote in \n2014, and what I did back then was to capture a  ",
    "start": "448800",
    "end": "455840"
  },
  {
    "text": "number of techniques that I had used myself in my \nprevious life as a software consultant. Techniques  ",
    "start": "455840",
    "end": "461199"
  },
  {
    "text": "for prioritizing technical debt to communicate \nwith non-technical stakeholders. It's stuff that I   found useful myself. I published this book and it \ngot quite a lot of attention. I realized that if  ",
    "start": "461200",
    "end": "473680"
  },
  {
    "text": "I want these techniques to become mainstream, then \nthere has to be some good tooling around them. So  ",
    "start": "473680",
    "end": "478160"
  },
  {
    "text": "shortly after publishing that book, I founded \nCodeScene, the company to build those tools. ",
    "start": "479520",
    "end": "483919"
  },
  {
    "text": "As part of those early years with CodeScene, I \nwas fortunate to work with so many organizations   across the globe on using different technologies \nof all kinds of scale. I learned so much from that  ",
    "start": "484960",
    "end": "498479"
  },
  {
    "text": "experience. Basically, in \"Software Design \nX-rays\" I try to reflect on those learnings:   how well do these techniques work in practice,  ",
    "start": "499200",
    "end": "505040"
  },
  {
    "text": "and even more important, how do you act upon them? \nBecause information is only good when actionable.  ",
    "start": "505600",
    "end": "511200"
  },
  {
    "text": "So that was the main motivation.\n   I liked a lot about the book, that it usually has \nrecommendations on what to do with those findings,  ",
    "start": "511760",
    "end": "526160"
  },
  {
    "text": "but we can dive into that a bit later.\nFor me still, the most fascinating  ",
    "start": "526160",
    "end": "533839"
  },
  {
    "start": "530000",
    "end": "879000"
  },
  {
    "text": "part of your work is the hotspots \nand X-rays. So, what is a hotspot? ",
    "start": "536160",
    "end": "544879"
  },
  {
    "text": "A hotspot is complicated code that we also \nhave to work with often. It's a combination of  ",
    "start": "545600",
    "end": "552000"
  },
  {
    "text": "technical factors like code quality issues \nand design problems with frequent development  ",
    "start": "552000",
    "end": "558080"
  },
  {
    "text": "activity in that part of the code. That's \na hotspot. And the whole hotspot concept  ",
    "start": "558080",
    "end": "564000"
  },
  {
    "text": "came out of my experience of using static \nanalysis to try to prioritize findings. We  ",
    "start": "565440",
    "end": "571600"
  },
  {
    "text": "talked about it earlier, I simply lacked the \npriorities from the business side, and I also  ",
    "start": "571600",
    "end": "577360"
  },
  {
    "text": "faced these challenges of communicating with \nnon-technical stakeholders, because very often  ",
    "start": "577360",
    "end": "582880"
  },
  {
    "text": "I try to explain that, \"Okay. We have the business \npressure for this feature but maybe we should take  ",
    "start": "582880",
    "end": "589200"
  },
  {
    "text": "a step back and improve what's already there so \nthat we can implement it safely and on time.\"",
    "start": "589200",
    "end": "593600"
  },
  {
    "text": "I found that those conversations were \nextremely hard to have because software  ",
    "start": "594480",
    "end": "598880"
  },
  {
    "text": "simply lacks visibility. There's no way I can \ntake my software system, pick it up and show   it to my non-technical stakeholders. At the same \ntime I was wrestling with these problems, I was  ",
    "start": "599600",
    "end": "610560"
  },
  {
    "text": "also in the middle of my psychology studies and \nI took a bunch of courses in forensic psychology.  ",
    "start": "610560",
    "end": "615600"
  },
  {
    "text": "And that's where the hotspot \nconcept actually came from.  I was inspired by a technique called geographical \noffender profiling that is used in forensics.  ",
    "start": "616560",
    "end": "627519"
  },
  {
    "text": "What you do is basically you look \nat the geographical distribution   of different crime scenes in a city or in an \narea and then you mathematically calculate a  ",
    "start": "628960",
    "end": "637440"
  },
  {
    "text": "probability surface that can kind of help you \npredict what's the home base of the offender so  ",
    "start": "637440",
    "end": "643520"
  },
  {
    "text": "you know which area to patrol and supervise.\nWhen I learned about that, I think something  ",
    "start": "643520",
    "end": "648560"
  },
  {
    "text": "just clicked. I thought, \"Wow. What if we can \ndo the same for software? What if we can take  ",
    "start": "648560",
    "end": "656640"
  },
  {
    "text": "this large software system, project a probability \nsurface onto it and say, hey, these are the parts   of the code that are very likely to change in \nthe future too and these are the most stable  ",
    "start": "656640",
    "end": "666080"
  },
  {
    "text": "parts of the code?\" Then we can suddenly get \nsome real priorities on what needs to improve  ",
    "start": "666080",
    "end": "673200"
  },
  {
    "text": "and where code quality is most important. That \nwas a very lengthy answer to a simple question. ",
    "start": "673200",
    "end": "677840"
  },
  {
    "text": "You do that by combining static code analysis \nand mining software repositories. So,  ",
    "start": "679680",
    "end": "687839"
  },
  {
    "text": "code that has a lot of commits and that's \nkind of problematic that we should work on.  ",
    "start": "688400",
    "end": "695520"
  },
  {
    "text": "For me, it's so easy now to explain, let's say, \nto business stakeholders, why this is important  ",
    "start": "698320",
    "end": "707520"
  },
  {
    "text": "because of technical debt. I know the metaphor \ntechnical debt lags a little bit with financial  ",
    "start": "707520",
    "end": "713040"
  },
  {
    "text": "debt but still, you can say where we have an \ninterest and we have a principal we have to   pay back. And what is actually the interest rate? \nAnd you answered the question. The interest rate  ",
    "start": "713040",
    "end": "725200"
  },
  {
    "text": "on code means I have to spend more time thinking \nabout pretty bad code when I add a new feature  ",
    "start": "725200",
    "end": "734480"
  },
  {
    "text": "because the code is not ideal for implementing \nthe new feature. And of course, if I have  ",
    "start": "734480",
    "end": "742800"
  },
  {
    "text": "code that is really bad and I have to change it \nquite often, the interest rate is very high. So,  ",
    "start": "742800",
    "end": "748640"
  },
  {
    "text": "to me, it really sticks to my mind.\nWhat is your experience with your customers?  ",
    "start": "749440",
    "end": "758160"
  },
  {
    "text": "I am only one single person who is doing it rarely \nbut you do it all the time. Does that speak to,  ",
    "start": "758880",
    "end": "767920"
  },
  {
    "text": "let's say, non-technical stakeholders all \nthe time or rarely. How does it work for you? ",
    "start": "767920",
    "end": "774000"
  },
  {
    "text": "The short answer is that I have a good experience \nwhich is great. Otherwise, I wouldn't have food   on the table and I'm happy about that. Because of \nthese techniques I originally targeted engineering  ",
    "start": "779200",
    "end": "793839"
  },
  {
    "text": "organizations and occasionally, as a bonus, \nnon-technical stakeholders. My experience is  ",
    "start": "793840",
    "end": "799440"
  },
  {
    "text": "that non-technical stakeholders like it because \nthe hotspot analysis sends a positive message.  ",
    "start": "799440",
    "end": "805120"
  },
  {
    "text": "It basically tells you that, \"No, you don't \nhave to fix all technical debt. You have  ",
    "start": "805120",
    "end": "810480"
  },
  {
    "text": "to fix this debt. That's really critical. But \nyou can safely live with this technical debt.   You need to be aware of it, of course, \nbut you don't need to pay it down now.\"",
    "start": "810480",
    "end": "818000"
  },
  {
    "text": "It's a positive message for them \nbecause they are also wrestling with   these long- and short-term priorities, like you \nhave all these features that the business pushes  ",
    "start": "818000",
    "end": "827279"
  },
  {
    "text": "for and at the same time, there is some \nawareness that we need to improve things.  ",
    "start": "827280",
    "end": "830880"
  },
  {
    "text": "I like to think that's the main contribution.\nExactly. There is always something to improve.  ",
    "start": "832400",
    "end": "841360"
  },
  {
    "text": "If someone asks me when we have a software system \nto improve, there are a gazillion things to do.  ",
    "start": "841360",
    "end": "851360"
  },
  {
    "text": "The question is what brings the most value \nto your work. You always have, of course,  ",
    "start": "851360",
    "end": "858320"
  },
  {
    "text": "opportunity costs. And, you know, if I improve \nthis, I cannot improve the other thing.  ",
    "start": "860560",
    "end": "866800"
  },
  {
    "text": "I think the hotspot analysis makes our not-to-do \nlists longer and it shortens the to-do list. ",
    "start": "868640",
    "end": "878080"
  },
  {
    "text": " \nWhat you also have is a trends analysis, and  ",
    "start": "878080",
    "end": "883840"
  },
  {
    "start": "879000",
    "end": "1266000"
  },
  {
    "text": "I like trends. If you have a negative trend \nit tells you you have to improve something.  ",
    "start": "885600",
    "end": "894399"
  },
  {
    "text": "It's also the other way around. \nHow do you analyze those trends?  ",
    "start": "895200",
    "end": "900800"
  },
  {
    "text": "How are you doing it with your tooling?\nTo me, trends are what make all the data  ",
    "start": "901760",
    "end": "907840"
  },
  {
    "text": "truly actionable. I very often meet organizations \nthat might be struggling with something like a  ",
    "start": "907840",
    "end": "914560"
  },
  {
    "text": "legacy code migration or they have an existing \nsystem that they're earning money on. They need  ",
    "start": "914560",
    "end": "919760"
  },
  {
    "text": "to continue to be able to maintain it and you \nhave this constant pressure for new features. So,  ",
    "start": "919760",
    "end": "925760"
  },
  {
    "text": "I always tell them that to manage technical debt, \nstep zero, the absolutely first thing to do is to  ",
    "start": "925760",
    "end": "931760"
  },
  {
    "text": "avoid taking on more debt. Simply put a quality \nbar on what's already there and make sure it  ",
    "start": "931760",
    "end": "937440"
  },
  {
    "text": "doesn't get worse no matter where you start from.\nI think that's again something that resonates with  ",
    "start": "937440",
    "end": "942720"
  },
  {
    "text": "managers and technical leaders because I'm yet \nto meet anyone that tells me, \"We want our code   to get worse.\" You never hear that, right? It's \nactionable, that's the first thing. The other  ",
    "start": "943680",
    "end": "953760"
  },
  {
    "text": "reason I like trends is because they carry so \nmuch more information than any absolute values.  ",
    "start": "953760",
    "end": "958480"
  },
  {
    "text": "For example, in CodeScene, we have this concept \nof code health. It's a metric that goes from 10,   healthy code, that's easy to understand and \nlow risk, all the way down to one which is  ",
    "start": "959600",
    "end": "969040"
  },
  {
    "text": "code with severe maintenance issues. And let me \nsay that I will point you to a hotspot with a   code health of five. Is that good or bad? Well, if \nthat hotspot had a code health of eight the week  ",
    "start": "969040",
    "end": "980720"
  },
  {
    "text": "before, then it's disastrous because it degrades \nrapidly. It's something you need to act upon now.  ",
    "start": "980720",
    "end": "985439"
  },
  {
    "text": "But on the other hand, if that hotspot had a \ncode health of two the week before, then it saw a   dramatic improvement that needs to be celebrated.  ",
    "start": "986160",
    "end": "993360"
  },
  {
    "text": "So, trends carry this information \nwhereas absolute values don't.  When I used CodeScene and I saw my first analysis, \nI was like, \"Okay, now I see the red parts.\" We  ",
    "start": "994240",
    "end": "1013120"
  },
  {
    "text": "also have to say we have some screenshots on that \none and you have those parts which are bad code  ",
    "start": "1013120",
    "end": "1021360"
  },
  {
    "text": "change often. And that triggers me. All the red \nthings, those are the ones which should be on my  ",
    "start": "1021360",
    "end": "1031120"
  },
  {
    "text": "to-do list. But how do I see, let's say, parts \nwhich are good but they are getting worse and  ",
    "start": "1031840",
    "end": "1044079"
  },
  {
    "text": "worse but they don't show up red on CodeScene? \nSo how do I figure out negative trends which  ",
    "start": "1044080",
    "end": "1054559"
  },
  {
    "text": "are not horrible yet? Do you have those? \nCan I look at something there in CodeScene? Yes, you can. If I remember correctly, I had a \nchapter discussing this in the \"Software Design  ",
    "start": "1054560",
    "end": "1061360"
  },
  {
    "text": "X-rays\". I think it's the last chapter where \nI talk a little bit about how you can use   the trends as an early warning system. I \nthink this is really, really important.  ",
    "start": "1061360",
    "end": "1069920"
  },
  {
    "text": "It's so important that we spend a lot of effort \nbuilding it into CodeScene as well. We integrated   things like total requests and build pipelines, so \nyou can get an alert when things like that happen.  ",
    "start": "1070640",
    "end": "1080399"
  },
  {
    "text": "I think it's vitally important because one thing \nI learned that actually surprised me was that,  ",
    "start": "1081200",
    "end": "1086960"
  },
  {
    "text": "like so many others in the software industry, we \nhave this idea that code starts out fine and then  ",
    "start": "1089040",
    "end": "1094240"
  },
  {
    "text": "they would add the pressure of the business \nand the code kind of degrades over time.   But that's not what's happening in general. What's \nhappening, in general, is that if you find a  ",
    "start": "1094240",
    "end": "1102800"
  },
  {
    "text": "module with quality problems, low code health, \nmost likely those problems have been introduced  ",
    "start": "1102800",
    "end": "1109920"
  },
  {
    "text": "very, very early on, often in the first version of \nthat module. And once a module degrades in code,  ",
    "start": "1109920",
    "end": "1116720"
  },
  {
    "text": "that tends to be a self-amplifying loop because \nthe hurdle to refactoring is large. So instead,  ",
    "start": "1116720",
    "end": "1123520"
  },
  {
    "text": "we kind of squeeze in more complexity and \nmore complexity and it gets worse and worse. ",
    "start": "1123520",
    "end": "1127360"
  },
  {
    "text": "Using this kind of information you can actually \nset different quality gates and say for new code,  ",
    "start": "1129120",
    "end": "1134640"
  },
  {
    "text": "this is the minimum level of quality or health \nthat we accept. And then you can use it as an  ",
    "start": "1134640",
    "end": "1140560"
  },
  {
    "text": "early warning system which allows you \nto prevent a ton of future problems.  For me that was a surprising insight \nfrom the book that bad code is more or  ",
    "start": "1140560",
    "end": "1152960"
  },
  {
    "text": "less bad from the beginning. But you also \nwrote that bad code usually stays bad. So,  ",
    "start": "1152960",
    "end": "1162960"
  },
  {
    "text": "it's bad, you fix it but then it's coming \nback. Why do you think that's the case? ",
    "start": "1163840",
    "end": "1170000"
  },
  {
    "text": "I think there are several reasons. It's \none of the things I noticed early on,   shortly after writing \"Your Code as a Crime Scene\" \nwhen I started to work with this in organizations.  ",
    "start": "1170640",
    "end": "1181120"
  },
  {
    "text": "I kind of figured out that, we found these really, \nreally problematic hotspots. Then you start to   look at the trends and you see that these hotspots \nhave been problems for years. And at first,  ",
    "start": "1181760",
    "end": "1192880"
  },
  {
    "text": "I couldn't explain that. So why hasn't it been \nrefactored? There can be multiple reasons but  ",
    "start": "1192880",
    "end": "1198240"
  },
  {
    "text": "one of the reasons that I think is very common \nis that in those really problematic hotspots,  ",
    "start": "1198240",
    "end": "1204160"
  },
  {
    "text": "there are some code quality issues that tend \nto lead to organizational problems as well. ",
    "start": "1204160",
    "end": "1209200"
  },
  {
    "text": "If you look at a different behavioral code \nanalysis, you look at the main contributors  ",
    "start": "1210400",
    "end": "1215520"
  },
  {
    "text": "and you look at how fragmented the contribution \nactivities to that file are. So you look at a   purely human perspective, and you will most likely \nsee that that code is not written by one person.  ",
    "start": "1215520",
    "end": "1225280"
  },
  {
    "text": "In a large organization, it might be written by 50 \nor 60 contributors and that most likely means that  ",
    "start": "1225920",
    "end": "1234240"
  },
  {
    "text": "no, you don't have 50 people that know that \ncode. You have no one that actually knows it  ",
    "start": "1234240",
    "end": "1237920"
  },
  {
    "text": "because everyone has their small piece of \ninformation and the original authors might   long be gone. It might often be that we \ndon't really understand the problem domain  ",
    "start": "1239680",
    "end": "1249039"
  },
  {
    "text": "well enough in that code, we might not understand \nthe solution well enough and that kind of, again,   raises the hurdle of refactoring it. And \nin particular, we don't feel any kind of  ",
    "start": "1249040",
    "end": "1257440"
  },
  {
    "text": "ownership for us as a team. So that makes us much \nless likely to invest the risk into refactoring  ",
    "start": "1258160",
    "end": "1264080"
  },
  {
    "text": "it. That's my hypothesis.\n   What does it mean for an organization if I \nhave many people working on the code? You said,  ",
    "start": "1264080",
    "end": "1271280"
  },
  {
    "start": "1266000",
    "end": "1512000"
  },
  {
    "text": "the problem is not well understood. What are \nyou recommending companies to fix that bad  ",
    "start": "1272320",
    "end": "1280799"
  },
  {
    "text": "code which is not going away? What can you do \nto make it happen that it doesn't come back? ",
    "start": "1280800",
    "end": "1289120"
  },
  {
    "text": "I like to think that the single most important \nthing you can do is to get situational awareness  ",
    "start": "1289120",
    "end": "1294640"
  },
  {
    "text": "so that everyone in the organization, \nengineering, business, everyone knows  ",
    "start": "1294640",
    "end": "1299040"
  },
  {
    "text": "where the problems are, how severe they are \nand what they actually mean to the business.   Because once you have that awareness, the next \nsteps tend to be not easy but doable at least. And  ",
    "start": "1299760",
    "end": "1310640"
  },
  {
    "text": "then it depends on what kind of issues you have.\nHere’s another behavioral code analysis  ",
    "start": "1310640",
    "end": "1318080"
  },
  {
    "text": "technique that looks at something \ncalled system mastery for example.   System mastery is not a technical property. It's \nabout how much of the current code is written  ",
    "start": "1318080",
    "end": "1326320"
  },
  {
    "text": "by the current team. Because I often see this as \nwell, that social and organizational factors like  ",
    "start": "1326320",
    "end": "1332799"
  },
  {
    "text": "system mastery tend to influence how we perceive \nthe complexity of code. We tend to overestimate  ",
    "start": "1332800",
    "end": "1340320"
  },
  {
    "text": "the complexity of unfamiliar code. And that means \nyou can hear complaints about, \"Hey, this piece of  ",
    "start": "1340880",
    "end": "1346800"
  },
  {
    "text": "code is overly complicated. It's a mess.\" Whereas \nin reality, it might simply be that the team   never had a chance to get onboarded properly \nand understand the domain and the solution. ",
    "start": "1346800",
    "end": "1356400"
  },
  {
    "text": "If you have that situational awareness and know \nwhat your actual problem is, then you can also   address it and put the right measure upon it.\nOne interesting finding of yours for me was,  ",
    "start": "1357920",
    "end": "1372160"
  },
  {
    "text": "when you analyzed all sorts of systems, you \nhad systems that have code which is, let's say,  ",
    "start": "1373040",
    "end": "1379440"
  },
  {
    "text": "rarely touched and then you have code which is \noften touched but only by a handful of people  ",
    "start": "1379440",
    "end": "1388720"
  },
  {
    "text": "like one or two or three people. And then you have \nthe code which is changed often by many people but  ",
    "start": "1388720",
    "end": "1398159"
  },
  {
    "text": "also it's not immediately changed. It's changed \nfrom time to time and that puts another burden  ",
    "start": "1398160",
    "end": "1407920"
  },
  {
    "text": "on it. If we have a mental model on the code \nbecause we work very often with it, we usually  ",
    "start": "1408960",
    "end": "1414960"
  },
  {
    "text": "don't introduce parts. But if we rarely \ntouch code, we are not 100% familiar with,  ",
    "start": "1415760",
    "end": "1422640"
  },
  {
    "text": "then we introduce new problems. That was \nalso something I found quite interesting.  Yes, I definitely think that it's a very common \nproblem. I see that you get lots of contributors  ",
    "start": "1423280",
    "end": "1437520"
  },
  {
    "text": "on a particular piece of code and if that code \nis also a hotspot, then the situation isn't  ",
    "start": "1437520",
    "end": "1443920"
  },
  {
    "text": "particularly good because what it basically means \nis that even if I write the piece of code myself   today, then look at it three days later it looks \ncompletely different because five other people  ",
    "start": "1443920",
    "end": "1453679"
  },
  {
    "text": "have been working on the code, so it's virtually \nimpossible to maintain a stable mental model. ",
    "start": "1453680",
    "end": "1458320"
  },
  {
    "text": "And what's so fascinating about this is that \nvery, very often it's that technical properties  ",
    "start": "1459280",
    "end": "1466240"
  },
  {
    "text": "of the code possibly lead to organizational \nissues. So, what you will often see is that  ",
    "start": "1466240",
    "end": "1470800"
  },
  {
    "text": "when you have that kind of code that attracts many \ndifferent contributors, it's probably because it   has good reasons to do so. It's typically a module \nthat's very low on cohesion, meaning it has tons  ",
    "start": "1471760",
    "end": "1482240"
  },
  {
    "text": "of different responsibilities. So consequently, \ndifferent teams working on different features,  ",
    "start": "1482240",
    "end": "1487920"
  },
  {
    "text": "all end up in the same part of the code because \nit ties everything together. It's a problem  ",
    "start": "1487920",
    "end": "1494720"
  },
  {
    "text": "that you simply cannot solve with a reorganization \nbecause then you will introduce other bottlenecks. ",
    "start": "1494720",
    "end": "1499200"
  },
  {
    "text": "The proper solution there would actually be a \ntechnical refactoring or redesign which would  ",
    "start": "1501040",
    "end": "1507040"
  },
  {
    "text": "improve the organizational fit. And this is \none of the things I found fascinating myself.   \nYes. Let’s move the topic to the X-ray.  ",
    "start": "1507040",
    "end": "1518400"
  },
  {
    "start": "1512000",
    "end": "1639000"
  },
  {
    "text": "So, what is a software design X-ray?\nAn X-ray is basically a hotspot analysis  ",
    "start": "1518960",
    "end": "1526159"
  },
  {
    "text": "at the function level. The reason I started \nto develop the X-ray analysis was that  ",
    "start": "1526160",
    "end": "1531520"
  },
  {
    "text": "after writing \"Your Code as a Crime \nScene\", when I analyzed all the systems   I noticed that the hotspots that I tend to \nfind that are most problematic are typically  ",
    "start": "1532640",
    "end": "1541519"
  },
  {
    "text": "really, really large files. It \ncould be thousands of lines of code,  ",
    "start": "1541520",
    "end": "1546480"
  },
  {
    "text": "occasionally, tens of thousands of lines of \ncode. It can be extreme cases like that.  ",
    "start": "1547440",
    "end": "1551679"
  },
  {
    "text": "If you take that large system and you narrow \nit down to a single hotspot and can say, \"Hey,   this is your biggest problem.\" But if I go to \na client and say, \"Rewrite this code. It's only  ",
    "start": "1552800",
    "end": "1563200"
  },
  {
    "text": "20,000 lines of code,\" they are not going to be \nhappy. It's not actionable. An X-ray analysis  ",
    "start": "1563200",
    "end": "1569200"
  },
  {
    "text": "takes that complex hotspot, parses it into \nseparate functions and then it looks at the   git log. Where do each committed over time? We sum \nthat up and you get hotspots at a method level.  ",
    "start": "1569920",
    "end": "1580800"
  },
  {
    "text": "And that's what I've been using successfully as \na starting point to prioritize refactorings in  ",
    "start": "1581360",
    "end": "1586559"
  },
  {
    "text": "large, complex processes and modules.\n   Yes, if you tell someone that 20,000 lines of code \nclass are a problem, they would say, \"Well, we  ",
    "start": "1586560",
    "end": "1596320"
  },
  {
    "text": "figured that out by ourselves.\" I think it's also \nused in many places. For example, Simon Brown has  ",
    "start": "1596320",
    "end": "1606880"
  },
  {
    "text": "the C4 architectural model and there you also have \nthis kind of zooming or Gernot Starke has arc42.  ",
    "start": "1606880",
    "end": "1614160"
  },
  {
    "text": "There, we start from a very abstract view \nand then we dive always deeper. It's like  ",
    "start": "1616560",
    "end": "1622560"
  },
  {
    "text": "Google Maps when you look at the map and then you \ncan always go deeper and deeper. So, you're not  ",
    "start": "1623440",
    "end": "1629840"
  },
  {
    "text": "lost in details. You can navigate quite nicely. \nAnd I think that's also quite a good idea.  ",
    "start": "1629840",
    "end": "1637279"
  },
  {
    "text": "What I was wondering you use very simple metrics. \nWhen I look at a typical tool like Sonar,  ",
    "start": "1637280",
    "end": "1645040"
  },
  {
    "start": "1639000",
    "end": "1834000"
  },
  {
    "text": "there are lots of metrics which tell me what is a \nproblem. I think you only use lines of code of a  ",
    "start": "1645040",
    "end": "1655360"
  },
  {
    "text": "class or a method or intention from lines. So, no \ndependency analysis and things like that. This is  ",
    "start": "1655360",
    "end": "1669200"
  },
  {
    "text": "based on some research. Why do you focus on very \nfew metrics and why is that still super powerful? ",
    "start": "1669200",
    "end": "1682320"
  },
  {
    "text": "I like to think we evolved that a lot over the \npast years but basically, the thinking process   is that if you look at the research, you will see \nthat a simple metric like the number of lines of  ",
    "start": "1682960",
    "end": "1693040"
  },
  {
    "text": "code is a horrible metric. It's really, really \nbad. The thing is that most other metrics are  ",
    "start": "1693040",
    "end": "1698320"
  },
  {
    "text": "just as bad. And lines of code is intuitive, it's \nsimple to calculate, simple to reason about. So  ",
    "start": "1698320",
    "end": "1703840"
  },
  {
    "text": "that's basically where I started out. We need \na complexity dimension for hotspots. Let's use  ",
    "start": "1703840",
    "end": "1709360"
  },
  {
    "text": "lines of code. And it surprised me how far that \nactually gets us. It takes us really, really far. ",
    "start": "1709360",
    "end": "1715600"
  },
  {
    "text": "One thing I learned after writing \"Your Code as \na Crime Scene\" is also that lines of code works  ",
    "start": "1716960",
    "end": "1724720"
  },
  {
    "text": "well, it correlates with most other metrics. But \nI also learned that at some point, you want to dig  ",
    "start": "1724720",
    "end": "1730320"
  },
  {
    "text": "a little bit deeper and provide some actionable \nadvice around what type of refactorings do you   need to do and stuff like that. What I've been \nworking on a lot over the past year is to add  ",
    "start": "1730320",
    "end": "1740080"
  },
  {
    "text": "different static analysis techniques into \na behavioral code analysis via CodeScene.  ",
    "start": "1741200",
    "end": "1745760"
  },
  {
    "text": "What we tried to do is to look more at the \ndesign level like identifying brain methods,  ",
    "start": "1747680",
    "end": "1752160"
  },
  {
    "text": "drive violations, you know, the stuff that \nreally, really matters for maintainable code. ",
    "start": "1752960",
    "end": "1758080"
  },
  {
    "text": "So, these days I might still use the number of \nlines of code as an initial visualization, to  ",
    "start": "1758720",
    "end": "1764960"
  },
  {
    "text": "get situational awareness but when I dig deeper, I \ntypically use this more elaborate set of metrics.  ",
    "start": "1764960",
    "end": "1770240"
  },
  {
    "text": "I hope that makes sense.\nYes. So, when I look at the hotspots,  ",
    "start": "1771200",
    "end": "1788480"
  },
  {
    "text": "I look at lines of code and let's say \na cyclomatic complexity represented by  ",
    "start": "1788480",
    "end": "1795919"
  },
  {
    "text": "intention. If that's the correct word. But clone \ndetection, violating the DRY principle, I was not  ",
    "start": "1796880",
    "end": "1804720"
  },
  {
    "text": "aware that this is also part of the hotspots.\nOkay, thank you,  ",
    "start": "1804720",
    "end": "1809840"
  },
  {
    "text": "Adam. I think we have a couple of follow-up \ntalks so we will have a second part about more   organizational problems you can detect. But for \nnow, I want to thank you for the discussion on  ",
    "start": "1810400",
    "end": "1814480"
  },
  {
    "text": "all the findings and prioritization work you did \non the code level. I thank you for your time. ",
    "start": "1816640",
    "end": "1825520"
  },
  {
    "text": "Thank you very much for having me. A pleasure, \nas always and I hope to talk to you again soon.",
    "start": "1825520",
    "end": "1830320"
  }
]