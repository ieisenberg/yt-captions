[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "[Music]",
    "start": "6990",
    "end": "10080"
  },
  {
    "text": "thank you so welcome to my talk",
    "start": "10080",
    "end": "12549"
  },
  {
    "text": "knee-deep in microservices this talk is",
    "start": "12549",
    "end": "15850"
  },
  {
    "text": "a spinosad going to be about micro",
    "start": "15850",
    "end": "18490"
  },
  {
    "text": "services cloud native and hell demons",
    "start": "18490",
    "end": "21130"
  },
  {
    "text": "from doom",
    "start": "21130",
    "end": "22740"
  },
  {
    "text": "I'm a senior engineer and consultant at",
    "start": "22740",
    "end": "26020"
  },
  {
    "text": "Amsterdam based consultancy container",
    "start": "26020",
    "end": "28180"
  },
  {
    "text": "solutions and I'm a big fan of the",
    "start": "28180",
    "end": "32078"
  },
  {
    "text": "classic FPS video game Doom and while",
    "start": "32079",
    "end": "37120"
  },
  {
    "text": "playing Doom I made some realizations",
    "start": "37120",
    "end": "39130"
  },
  {
    "text": "how similar it is to running micro",
    "start": "39130",
    "end": "42130"
  },
  {
    "text": "services in production or building them",
    "start": "42130",
    "end": "45210"
  },
  {
    "text": "so doom is a game about scientists on",
    "start": "45210",
    "end": "50110"
  },
  {
    "text": "Mars opening a portal to Hell to channel",
    "start": "50110",
    "end": "55420"
  },
  {
    "text": "clean energy from health to earth",
    "start": "55420",
    "end": "58510"
  },
  {
    "text": "well as you can expect that did not work",
    "start": "58510",
    "end": "61120"
  },
  {
    "text": "out too well and demons over ran the",
    "start": "61120",
    "end": "64989"
  },
  {
    "text": "facility with only the green Armored do",
    "start": "64989",
    "end": "69430"
  },
  {
    "text": "marine standing between them and",
    "start": "69430",
    "end": "72690"
  },
  {
    "text": "humanity micro services are a very",
    "start": "72690",
    "end": "78430"
  },
  {
    "start": "75000",
    "end": "129000"
  },
  {
    "text": "popular architectural style today",
    "start": "78430",
    "end": "81040"
  },
  {
    "text": "because big companies like Netflix and",
    "start": "81040",
    "end": "84250"
  },
  {
    "text": "Google basically had to architect their",
    "start": "84250",
    "end": "87520"
  },
  {
    "text": "applications this way because of their",
    "start": "87520",
    "end": "91210"
  },
  {
    "text": "scale and people in smaller companies",
    "start": "91210",
    "end": "94270"
  },
  {
    "text": "are looking at at this this",
    "start": "94270",
    "end": "97000"
  },
  {
    "text": "architectural style and wondering",
    "start": "97000",
    "end": "98560"
  },
  {
    "text": "whether we should also use it or going",
    "start": "98560",
    "end": "101950"
  },
  {
    "text": "heads in and not really caring about the",
    "start": "101950",
    "end": "105250"
  },
  {
    "text": "risks or realizing them so not everybody",
    "start": "105250",
    "end": "109390"
  },
  {
    "text": "is deploying a large number of",
    "start": "109390",
    "end": "111189"
  },
  {
    "text": "components to buy a large number of",
    "start": "111189",
    "end": "113439"
  },
  {
    "text": "teams and having millions and millions",
    "start": "113439",
    "end": "116740"
  },
  {
    "text": "or billions of requests per second on",
    "start": "116740",
    "end": "119200"
  },
  {
    "text": "their servers but is it really is it too",
    "start": "119200",
    "end": "125380"
  },
  {
    "text": "big a risk or do the benefits outweigh",
    "start": "125380",
    "end": "127869"
  },
  {
    "text": "the risks today what are the benefits of",
    "start": "127869",
    "end": "132040"
  },
  {
    "start": "129000",
    "end": "215000"
  },
  {
    "text": "micro services and what are the demons",
    "start": "132040",
    "end": "135819"
  },
  {
    "text": "you might unleash upon yourself if you",
    "start": "135819",
    "end": "139359"
  },
  {
    "text": "go",
    "start": "139359",
    "end": "140050"
  },
  {
    "text": "that way first of all micro-services",
    "start": "140050",
    "end": "144750"
  },
  {
    "text": "will be we are a great architecture to",
    "start": "144750",
    "end": "149170"
  },
  {
    "text": "utilize elastic cloud resources so you",
    "start": "149170",
    "end": "151900"
  },
  {
    "text": "will be able to scale your application",
    "start": "151900",
    "end": "153700"
  },
  {
    "text": "more efficiently if you have several",
    "start": "153700",
    "end": "158080"
  },
  {
    "text": "teams delivering your software or even",
    "start": "158080",
    "end": "161350"
  },
  {
    "text": "sometimes it can work with one team your",
    "start": "161350",
    "end": "164350"
  },
  {
    "text": "development velocity can increase",
    "start": "164350",
    "end": "166090"
  },
  {
    "text": "because you are delivering components",
    "start": "166090",
    "end": "168340"
  },
  {
    "text": "independently thus after an initial",
    "start": "168340",
    "end": "172320"
  },
  {
    "text": "increase or decrease in velocity you can",
    "start": "172320",
    "end": "175060"
  },
  {
    "text": "you can later when your applications",
    "start": "175060",
    "end": "177040"
  },
  {
    "text": "complexity increases you can you can",
    "start": "177040",
    "end": "179530"
  },
  {
    "text": "deploy faster resilience of the",
    "start": "179530",
    "end": "182860"
  },
  {
    "text": "application to failures increases",
    "start": "182860",
    "end": "185190"
  },
  {
    "text": "because it's you can run it over several",
    "start": "185190",
    "end": "188320"
  },
  {
    "text": "geographical locations several data",
    "start": "188320",
    "end": "190450"
  },
  {
    "text": "centers and today's public cloud",
    "start": "190450",
    "end": "192940"
  },
  {
    "text": "providers make that easy for you but you",
    "start": "192940",
    "end": "195310"
  },
  {
    "text": "do need an architecture that will",
    "start": "195310",
    "end": "197320"
  },
  {
    "text": "support that finally cost optimization",
    "start": "197320",
    "end": "201070"
  },
  {
    "text": "if you have components that have very",
    "start": "201070",
    "end": "203740"
  },
  {
    "text": "different performance and resource usage",
    "start": "203740",
    "end": "206650"
  },
  {
    "text": "characteristics with a micro service",
    "start": "206650",
    "end": "208959"
  },
  {
    "text": "architecture you will be able to scale",
    "start": "208959",
    "end": "211480"
  },
  {
    "text": "them independently and thus utilize",
    "start": "211480",
    "end": "214060"
  },
  {
    "text": "cloud resources better so when I'm",
    "start": "214060",
    "end": "217720"
  },
  {
    "start": "215000",
    "end": "315000"
  },
  {
    "text": "talking I want to clarify a bit what I",
    "start": "217720",
    "end": "219940"
  },
  {
    "text": "mean by micro services it's a very vague",
    "start": "219940",
    "end": "224709"
  },
  {
    "text": "term used in lots of different ways over",
    "start": "224709",
    "end": "227530"
  },
  {
    "text": "the years how what I mean by them and",
    "start": "227530",
    "end": "231489"
  },
  {
    "text": "during this talk is separate code",
    "start": "231489",
    "end": "235959"
  },
  {
    "text": "repositories for separate modules or",
    "start": "235959",
    "end": "239680"
  },
  {
    "text": "separate components of your application",
    "start": "239680",
    "end": "241750"
  },
  {
    "text": "that are packaged as independent",
    "start": "241750",
    "end": "243910"
  },
  {
    "text": "artifacts that then are deployed in a",
    "start": "243910",
    "end": "247180"
  },
  {
    "text": "way that those artifacts are not for",
    "start": "247180",
    "end": "249580"
  },
  {
    "text": "example lumped together into a single",
    "start": "249580",
    "end": "251500"
  },
  {
    "text": "virtual machine but I under but are",
    "start": "251500",
    "end": "254050"
  },
  {
    "text": "managed by the production platform as",
    "start": "254050",
    "end": "256900"
  },
  {
    "text": "independent components all of this this",
    "start": "256900",
    "end": "261940"
  },
  {
    "text": "diagram could be modified in lots of",
    "start": "261940",
    "end": "264100"
  },
  {
    "text": "different ways for practical reasons so",
    "start": "264100",
    "end": "267100"
  },
  {
    "text": "you might want to have a mono repo for",
    "start": "267100",
    "end": "269169"
  },
  {
    "text": "your code but somehow build different",
    "start": "269169",
    "end": "271660"
  },
  {
    "text": "artifacts or what",
    "start": "271660",
    "end": "273490"
  },
  {
    "text": "of the time happens with or many times",
    "start": "273490",
    "end": "276580"
  },
  {
    "text": "happens with monolithic applications the",
    "start": "276580",
    "end": "278770"
  },
  {
    "text": "code might even be separate but it's",
    "start": "278770",
    "end": "281289"
  },
  {
    "text": "lumped together into one big artifact or",
    "start": "281289",
    "end": "283530"
  },
  {
    "text": "everything is separate but then it's",
    "start": "283530",
    "end": "285759"
  },
  {
    "text": "installed on a VM and run everything is",
    "start": "285759",
    "end": "289000"
  },
  {
    "text": "run together so these are all valid",
    "start": "289000",
    "end": "291220"
  },
  {
    "text": "options it's there is not a right way to",
    "start": "291220",
    "end": "293770"
  },
  {
    "text": "do micro services I'm not trying to",
    "start": "293770",
    "end": "295509"
  },
  {
    "text": "imply that especially with legacy",
    "start": "295509",
    "end": "297940"
  },
  {
    "text": "applications evolutionary reasons how",
    "start": "297940",
    "end": "300069"
  },
  {
    "text": "things evolve with an application those",
    "start": "300069",
    "end": "302500"
  },
  {
    "text": "are all valid approaches but now I'm I",
    "start": "302500",
    "end": "306280"
  },
  {
    "text": "want to show the benefits of a pure",
    "start": "306280",
    "end": "310120"
  },
  {
    "text": "micro service architecture especially in",
    "start": "310120",
    "end": "313090"
  },
  {
    "text": "relation with cloud native technologies",
    "start": "313090",
    "end": "316169"
  },
  {
    "text": "so what are the demons that you will be",
    "start": "316169",
    "end": "319240"
  },
  {
    "text": "unleashing when going micro services oh",
    "start": "319240",
    "end": "323610"
  },
  {
    "start": "323000",
    "end": "341000"
  },
  {
    "text": "yeah as a slide about being prepared so",
    "start": "323610",
    "end": "328470"
  },
  {
    "text": "even though these scientists failed",
    "start": "328470",
    "end": "330970"
  },
  {
    "text": "horribly they did actually have a status",
    "start": "330970",
    "end": "334060"
  },
  {
    "text": "message saying demonic invasion in",
    "start": "334060",
    "end": "335919"
  },
  {
    "text": "progress",
    "start": "335919",
    "end": "336370"
  },
  {
    "text": "that's very cool so your first step to",
    "start": "336370",
    "end": "339070"
  },
  {
    "text": "being prepared is sitting on this talk",
    "start": "339070",
    "end": "341729"
  },
  {
    "start": "341000",
    "end": "397000"
  },
  {
    "text": "so first of all you will need to need to",
    "start": "341729",
    "end": "345370"
  },
  {
    "text": "package your application you need a",
    "start": "345370",
    "end": "346990"
  },
  {
    "text": "technology that actually allows you to",
    "start": "346990",
    "end": "350860"
  },
  {
    "text": "package applications in a uniform way in",
    "start": "350860",
    "end": "353800"
  },
  {
    "text": "a way that can be delivered to",
    "start": "353800",
    "end": "356050"
  },
  {
    "text": "production unchanged so you don't",
    "start": "356050",
    "end": "358870"
  },
  {
    "text": "produce something that then is packaged",
    "start": "358870",
    "end": "361180"
  },
  {
    "text": "by the ops team into something else and",
    "start": "361180",
    "end": "363190"
  },
  {
    "text": "then is deployed in a different way onto",
    "start": "363190",
    "end": "365830"
  },
  {
    "text": "a production system you also need a",
    "start": "365830",
    "end": "368889"
  },
  {
    "text": "technology that allows you to deploy",
    "start": "368889",
    "end": "372490"
  },
  {
    "text": "every artifact you have in a uniform way",
    "start": "372490",
    "end": "375460"
  },
  {
    "text": "because otherwise the complexity will",
    "start": "375460",
    "end": "378370"
  },
  {
    "text": "make your production environment into a",
    "start": "378370",
    "end": "381880"
  },
  {
    "text": "very heterogeneous environment where all",
    "start": "381880",
    "end": "383740"
  },
  {
    "text": "kinds of different artifacts are",
    "start": "383740",
    "end": "385419"
  },
  {
    "text": "deployed differently so in the end there",
    "start": "385419",
    "end": "387819"
  },
  {
    "text": "will be a pushback from the operations",
    "start": "387819",
    "end": "389800"
  },
  {
    "text": "team to just keep it simple and let's",
    "start": "389800",
    "end": "392620"
  },
  {
    "text": "just make everything Java for example",
    "start": "392620",
    "end": "396569"
  },
  {
    "start": "397000",
    "end": "433000"
  },
  {
    "text": "local development will be a problem with",
    "start": "397860",
    "end": "400449"
  },
  {
    "text": "micro services you when you run one your",
    "start": "400449",
    "end": "404500"
  },
  {
    "text": "ID and everything is",
    "start": "404500",
    "end": "406180"
  },
  {
    "text": "made to run an application maybe - you",
    "start": "406180",
    "end": "409690"
  },
  {
    "text": "make your configurations and everything",
    "start": "409690",
    "end": "411490"
  },
  {
    "text": "if you have 10 15 20 of them then then",
    "start": "411490",
    "end": "415960"
  },
  {
    "text": "it becomes much much harder to run your",
    "start": "415960",
    "end": "419110"
  },
  {
    "text": "application on your local development",
    "start": "419110",
    "end": "420610"
  },
  {
    "text": "environment and that people sometimes",
    "start": "420610",
    "end": "423340"
  },
  {
    "text": "don't even realize but slows down the",
    "start": "423340",
    "end": "425590"
  },
  {
    "text": "whole team velocity by a lot because you",
    "start": "425590",
    "end": "427810"
  },
  {
    "text": "have a hard time testing features or",
    "start": "427810",
    "end": "430360"
  },
  {
    "text": "your changes in isolation observability",
    "start": "430360",
    "end": "434880"
  },
  {
    "start": "433000",
    "end": "454000"
  },
  {
    "text": "also just as local development was",
    "start": "434880",
    "end": "439780"
  },
  {
    "text": "always something to solve but with micro",
    "start": "439780",
    "end": "441550"
  },
  {
    "text": "services it becomes harder monitoring",
    "start": "441550",
    "end": "443860"
  },
  {
    "text": "also becomes much more crucial and",
    "start": "443860",
    "end": "446430"
  },
  {
    "text": "different and more important than than",
    "start": "446430",
    "end": "451509"
  },
  {
    "text": "with the monolithic architecture",
    "start": "451509",
    "end": "454710"
  },
  {
    "start": "454000",
    "end": "470000"
  },
  {
    "text": "self-healing is something you will need",
    "start": "455130",
    "end": "457630"
  },
  {
    "text": "up to at least some degree because if",
    "start": "457630",
    "end": "460030"
  },
  {
    "text": "you're running hundreds of small",
    "start": "460030",
    "end": "461650"
  },
  {
    "text": "services in production you cannot have",
    "start": "461650",
    "end": "465669"
  },
  {
    "text": "the sysadmin guy go and restart",
    "start": "465669",
    "end": "468669"
  },
  {
    "text": "something when and it fails and finally",
    "start": "468669",
    "end": "472900"
  },
  {
    "start": "470000",
    "end": "532000"
  },
  {
    "text": "your biggest problem will probably be",
    "start": "472900",
    "end": "474570"
  },
  {
    "text": "organizational silos at least for lots",
    "start": "474570",
    "end": "476860"
  },
  {
    "text": "of companies actually funnily for some",
    "start": "476860",
    "end": "479470"
  },
  {
    "text": "companies it's not a problem because",
    "start": "479470",
    "end": "481780"
  },
  {
    "text": "they just don't have an ops team for",
    "start": "481780",
    "end": "483070"
  },
  {
    "text": "example and well they have other",
    "start": "483070",
    "end": "485289"
  },
  {
    "text": "problems then but at least the the",
    "start": "485289",
    "end": "487870"
  },
  {
    "text": "infighting between the ops and",
    "start": "487870",
    "end": "489669"
  },
  {
    "text": "development teams does not happen",
    "start": "489669",
    "end": "491260"
  },
  {
    "text": "so basically operations want stability",
    "start": "491260",
    "end": "494710"
  },
  {
    "text": "ones doesn't want things to change",
    "start": "494710",
    "end": "496599"
  },
  {
    "text": "because that's how they manage to keep",
    "start": "496599",
    "end": "499060"
  },
  {
    "text": "things running developers want to push",
    "start": "499060",
    "end": "501820"
  },
  {
    "text": "new features suddenly developers decide",
    "start": "501820",
    "end": "503860"
  },
  {
    "text": "that instead of three artifacts they are",
    "start": "503860",
    "end": "505599"
  },
  {
    "text": "going to break the application down into",
    "start": "505599",
    "end": "508060"
  },
  {
    "text": "20 or 50 and all that stuff that has",
    "start": "508060",
    "end": "512589"
  },
  {
    "text": "previously been contained inside the",
    "start": "512589",
    "end": "514300"
  },
  {
    "text": "application suddenly becomes visible for",
    "start": "514300",
    "end": "516880"
  },
  {
    "text": "operations and starts communicating over",
    "start": "516880",
    "end": "519339"
  },
  {
    "text": "the network so it becomes becomes way",
    "start": "519339",
    "end": "524260"
  },
  {
    "text": "more complex for them for this you need",
    "start": "524260",
    "end": "526750"
  },
  {
    "text": "good cooperations between the operations",
    "start": "526750",
    "end": "528700"
  },
  {
    "text": "and the development teams to handle that",
    "start": "528700",
    "end": "530920"
  },
  {
    "text": "newborn complexity but well for all",
    "start": "530920",
    "end": "535450"
  },
  {
    "start": "532000",
    "end": "556000"
  },
  {
    "text": "these scary demons you have cloud native",
    "start": "535450",
    "end": "537730"
  },
  {
    "text": "weapons to battle them",
    "start": "537730",
    "end": "540100"
  },
  {
    "text": "cloud native technologies are have",
    "start": "540100",
    "end": "543550"
  },
  {
    "text": "become quite popular in the last two",
    "start": "543550",
    "end": "545560"
  },
  {
    "text": "years they bring completely new ways to",
    "start": "545560",
    "end": "549839"
  },
  {
    "text": "handle these challenges of micro",
    "start": "549839",
    "end": "552370"
  },
  {
    "text": "services I'll show how they don't solve",
    "start": "552370",
    "end": "556630"
  },
  {
    "text": "all the problems so I don't not trying",
    "start": "556630",
    "end": "559240"
  },
  {
    "text": "to imply here that you just use",
    "start": "559240",
    "end": "561069"
  },
  {
    "text": "cognitive technologies and micro",
    "start": "561069",
    "end": "562630"
  },
  {
    "text": "services just become super easy and",
    "start": "562630",
    "end": "564240"
  },
  {
    "text": "everybody should do it they don't help",
    "start": "564240",
    "end": "567339"
  },
  {
    "text": "with your overhead of developing",
    "start": "567339",
    "end": "569620"
  },
  {
    "text": "independent components so then the code",
    "start": "569620",
    "end": "571839"
  },
  {
    "text": "side there is not that much that has",
    "start": "571839",
    "end": "574690"
  },
  {
    "text": "happened in the in the last few years at",
    "start": "574690",
    "end": "577060"
  },
  {
    "text": "least I didn't see it but on the right",
    "start": "577060",
    "end": "579819"
  },
  {
    "text": "side and the middle the artifacts we",
    "start": "579819",
    "end": "582910"
  },
  {
    "text": "have now a good packaging format and we",
    "start": "582910",
    "end": "584920"
  },
  {
    "text": "have a new way of deploying stuff docker",
    "start": "584920",
    "end": "588940"
  },
  {
    "start": "587000",
    "end": "611000"
  },
  {
    "text": "is the technology that lets you package",
    "start": "588940",
    "end": "592569"
  },
  {
    "text": "your applications slice up your virtual",
    "start": "592569",
    "end": "595269"
  },
  {
    "text": "machines and deliver to production a",
    "start": "595269",
    "end": "597759"
  },
  {
    "text": "range of different technologies in a",
    "start": "597759",
    "end": "599980"
  },
  {
    "text": "uniform way that the operations team can",
    "start": "599980",
    "end": "603040"
  },
  {
    "text": "understand can handle can run and the",
    "start": "603040",
    "end": "605860"
  },
  {
    "text": "development team can actually also",
    "start": "605860",
    "end": "607689"
  },
  {
    "text": "utilize in their development process",
    "start": "607689",
    "end": "611610"
  },
  {
    "start": "611000",
    "end": "656000"
  },
  {
    "text": "docker compose can help with local",
    "start": "611610",
    "end": "615339"
  },
  {
    "text": "development because docker containers",
    "start": "615339",
    "end": "617370"
  },
  {
    "text": "the whole technology around docker is a",
    "start": "617370",
    "end": "621360"
  },
  {
    "text": "new kind of better way of virtualizing",
    "start": "621360",
    "end": "624370"
  },
  {
    "text": "or at least a lighter way of",
    "start": "624370",
    "end": "625810"
  },
  {
    "text": "virtualizing things you can actually",
    "start": "625810",
    "end": "627579"
  },
  {
    "text": "have that virtualization on your on your",
    "start": "627579",
    "end": "631029"
  },
  {
    "text": "laptop using either docker compose or",
    "start": "631029",
    "end": "633519"
  },
  {
    "text": "other tools like mini cube or",
    "start": "633519",
    "end": "635110"
  },
  {
    "text": "minimizer's which actually even run a",
    "start": "635110",
    "end": "637180"
  },
  {
    "text": "more realistic cluster on your machine",
    "start": "637180",
    "end": "640540"
  },
  {
    "text": "and thus you have a nice and easy way to",
    "start": "640540",
    "end": "643540"
  },
  {
    "text": "actually run several components together",
    "start": "643540",
    "end": "645970"
  },
  {
    "text": "on your laptop until you were the",
    "start": "645970",
    "end": "650050"
  },
  {
    "text": "resources on your laptop allow it so",
    "start": "650050",
    "end": "653730"
  },
  {
    "text": "that's also great and then the big guns",
    "start": "653730",
    "end": "658449"
  },
  {
    "start": "656000",
    "end": "677000"
  },
  {
    "text": "this is the what you see up there is the",
    "start": "658449",
    "end": "661089"
  },
  {
    "text": "BFG the big gun from doom it's",
    "start": "661089",
    "end": "665019"
  },
  {
    "text": "the most powerful one as the",
    "start": "665019",
    "end": "667500"
  },
  {
    "text": "orchestrators are the most powerful",
    "start": "667500",
    "end": "669579"
  },
  {
    "text": "tools we have to manage your production",
    "start": "669579",
    "end": "672880"
  },
  {
    "text": "environment",
    "start": "672880",
    "end": "673830"
  },
  {
    "text": "container orchestrators take a set of",
    "start": "673830",
    "end": "679570"
  },
  {
    "start": "677000",
    "end": "760000"
  },
  {
    "text": "virtual machines and utilize them to run",
    "start": "679570",
    "end": "682840"
  },
  {
    "text": "your containers over them this doesn't",
    "start": "682840",
    "end": "685540"
  },
  {
    "text": "sound all that revolutionary it's a it's",
    "start": "685540",
    "end": "688480"
  },
  {
    "text": "a nice thing because once you package",
    "start": "688480",
    "end": "690190"
  },
  {
    "text": "containers you will want to run them",
    "start": "690190",
    "end": "691660"
  },
  {
    "text": "somewhere and this Orchestrator takes",
    "start": "691660",
    "end": "693370"
  },
  {
    "text": "care of that",
    "start": "693370",
    "end": "694120"
  },
  {
    "text": "but what why this has enabled a very",
    "start": "694120",
    "end": "697660"
  },
  {
    "text": "different way of managing your",
    "start": "697660",
    "end": "698980"
  },
  {
    "text": "applications is because the orchestrator",
    "start": "698980",
    "end": "703300"
  },
  {
    "text": "is looking at your application at a much",
    "start": "703300",
    "end": "705550"
  },
  {
    "text": "higher level of abstraction than",
    "start": "705550",
    "end": "707440"
  },
  {
    "text": "previous tools so when you were",
    "start": "707440",
    "end": "709060"
  },
  {
    "text": "installing VMs using puppet your your",
    "start": "709060",
    "end": "712750"
  },
  {
    "text": "level of abstraction is pretty much",
    "start": "712750",
    "end": "715390"
  },
  {
    "text": "files in the operating system and",
    "start": "715390",
    "end": "717790"
  },
  {
    "text": "services and stuff and and not",
    "start": "717790",
    "end": "720820"
  },
  {
    "text": "applications with containers this level",
    "start": "720820",
    "end": "723610"
  },
  {
    "text": "of abstraction moves higher and I",
    "start": "723610",
    "end": "727020"
  },
  {
    "text": "container Orchestrator actually",
    "start": "727020",
    "end": "729160"
  },
  {
    "text": "understands that your three front end",
    "start": "729160",
    "end": "731620"
  },
  {
    "text": "containers that you see they're",
    "start": "731620",
    "end": "733240"
  },
  {
    "text": "distributed over two different nodes",
    "start": "733240",
    "end": "734950"
  },
  {
    "text": "belong to the same application component",
    "start": "734950",
    "end": "737530"
  },
  {
    "text": "and thus pro can provide load balancing",
    "start": "737530",
    "end": "740170"
  },
  {
    "text": "over them or scaling them up and down",
    "start": "740170",
    "end": "742710"
  },
  {
    "text": "our service discovery with even dns",
    "start": "742710",
    "end": "747610"
  },
  {
    "text": "server that you can just address front",
    "start": "747610",
    "end": "750190"
  },
  {
    "text": "end and your traffic gets routed to the",
    "start": "750190",
    "end": "753640"
  },
  {
    "text": "to the right container so with these",
    "start": "753640",
    "end": "757510"
  },
  {
    "text": "things become quite different which can",
    "start": "757510",
    "end": "761410"
  },
  {
    "start": "760000",
    "end": "823000"
  },
  {
    "text": "be seen how monitoring solutions so",
    "start": "761410",
    "end": "766240"
  },
  {
    "text": "monitoring solutions are a good example",
    "start": "766240",
    "end": "767800"
  },
  {
    "text": "of how how things evolved these days",
    "start": "767800",
    "end": "772150"
  },
  {
    "text": "there is a short list of some of the",
    "start": "772150",
    "end": "774550"
  },
  {
    "text": "cloud native monitoring solutions that",
    "start": "774550",
    "end": "776320"
  },
  {
    "text": "have that can now monitor containers in",
    "start": "776320",
    "end": "780670"
  },
  {
    "text": "production that are running on a",
    "start": "780670",
    "end": "782260"
  },
  {
    "text": "container orchestration system it's very",
    "start": "782260",
    "end": "784750"
  },
  {
    "text": "interesting to see that zero to a go",
    "start": "784750",
    "end": "789060"
  },
  {
    "text": "monitoring solutions were really much",
    "start": "789060",
    "end": "791590"
  },
  {
    "text": "trying to catch up to monitoring",
    "start": "791590",
    "end": "793870"
  },
  {
    "text": "containers because containers have a",
    "start": "793870",
    "end": "797260"
  },
  {
    "text": "much shorter life span than than VMS and",
    "start": "797260",
    "end": "801040"
  },
  {
    "text": "also you cannot just install agents and",
    "start": "801040",
    "end": "803620"
  },
  {
    "text": "stuff into the container because",
    "start": "803620",
    "end": "804940"
  },
  {
    "text": "container is designed to",
    "start": "804940",
    "end": "806140"
  },
  {
    "text": "just run one single application process",
    "start": "806140",
    "end": "808890"
  },
  {
    "text": "so the way these monitoring solutions",
    "start": "808890",
    "end": "811630"
  },
  {
    "text": "were working before was not tenable for",
    "start": "811630",
    "end": "813730"
  },
  {
    "text": "the container world but what was",
    "start": "813730",
    "end": "817210"
  },
  {
    "text": "fortunate for these monitoring solutions",
    "start": "817210",
    "end": "819010"
  },
  {
    "text": "and why they actually managed to even",
    "start": "819010",
    "end": "820330"
  },
  {
    "text": "improve compared to the previous state",
    "start": "820330",
    "end": "822340"
  },
  {
    "text": "was that the container Orchestrator the",
    "start": "822340",
    "end": "825820"
  },
  {
    "text": "master actually has a global view of",
    "start": "825820",
    "end": "828130"
  },
  {
    "text": "everything that's happening in the",
    "start": "828130",
    "end": "829510"
  },
  {
    "text": "cluster it has actually all the",
    "start": "829510",
    "end": "832150"
  },
  {
    "text": "container orchestrators have an API that",
    "start": "832150",
    "end": "835560"
  },
  {
    "text": "you can query and get this global State",
    "start": "835560",
    "end": "838720"
  },
  {
    "text": "and as I said it's a closed to",
    "start": "838720",
    "end": "841780"
  },
  {
    "text": "application level abstraction so that",
    "start": "841780",
    "end": "845380"
  },
  {
    "text": "means within my example here I have the",
    "start": "845380",
    "end": "849010"
  },
  {
    "text": "cost care monitoring tool showing me CPU",
    "start": "849010",
    "end": "852550"
  },
  {
    "text": "time of my services and those services",
    "start": "852550",
    "end": "856930"
  },
  {
    "text": "up there I know this is a laser okay so",
    "start": "856930",
    "end": "860470"
  },
  {
    "text": "these services up here in the olden days",
    "start": "860470",
    "end": "864820"
  },
  {
    "text": "I would have had to configure what a",
    "start": "864820",
    "end": "866890"
  },
  {
    "text": "service means I would have to tell some",
    "start": "866890",
    "end": "869710"
  },
  {
    "text": "how the monitoring solution now I no",
    "start": "869710",
    "end": "871750"
  },
  {
    "text": "longer have to do that the monitoring",
    "start": "871750",
    "end": "873250"
  },
  {
    "text": "solution could just ask the kubernetes",
    "start": "873250",
    "end": "877000"
  },
  {
    "text": "api grab all the services ask what",
    "start": "877000",
    "end": "882480"
  },
  {
    "text": "containers are behind those services",
    "start": "882480",
    "end": "884830"
  },
  {
    "text": "monitor those containers and aggregate",
    "start": "884830",
    "end": "887230"
  },
  {
    "text": "the results into into this graph here or",
    "start": "887230",
    "end": "891130"
  },
  {
    "text": "it can monitor how many containers",
    "start": "891130",
    "end": "894730"
  },
  {
    "text": "actually make up the service so you can",
    "start": "894730",
    "end": "896590"
  },
  {
    "text": "see here is a spike in the CPU usage and",
    "start": "896590",
    "end": "900280"
  },
  {
    "text": "you can see a spike in the number of",
    "start": "900280",
    "end": "901960"
  },
  {
    "text": "containers so actually the service is",
    "start": "901960",
    "end": "904090"
  },
  {
    "text": "scaling up unfortunately here the labels",
    "start": "904090",
    "end": "907960"
  },
  {
    "text": "are a bit messed up so this is this",
    "start": "907960",
    "end": "912730"
  },
  {
    "start": "912000",
    "end": "945000"
  },
  {
    "text": "shows very nicely how in the in the",
    "start": "912730",
    "end": "915190"
  },
  {
    "text": "cloud native world the concept of micro",
    "start": "915190",
    "end": "918010"
  },
  {
    "text": "services is becoming easier to manage in",
    "start": "918010",
    "end": "921130"
  },
  {
    "text": "production next is continuous",
    "start": "921130",
    "end": "923920"
  },
  {
    "text": "integration it's something the continues",
    "start": "923920",
    "end": "928090"
  },
  {
    "text": "all these these tools have caught up",
    "start": "928090",
    "end": "929800"
  },
  {
    "text": "with containers in a way that they can",
    "start": "929800",
    "end": "931480"
  },
  {
    "text": "they can build containers they can talk",
    "start": "931480",
    "end": "934960"
  },
  {
    "text": "to orchestrators usually not in a very",
    "start": "934960",
    "end": "937660"
  },
  {
    "text": "nice way there is still work to do in",
    "start": "937660",
    "end": "939190"
  },
  {
    "text": "this",
    "start": "939190",
    "end": "939980"
  },
  {
    "text": "but you can use your tools that you know",
    "start": "939980",
    "end": "942290"
  },
  {
    "text": "and like to build and deploy containers",
    "start": "942290",
    "end": "946750"
  },
  {
    "start": "945000",
    "end": "1002000"
  },
  {
    "text": "so what's gonna be the pass your company",
    "start": "946750",
    "end": "951680"
  },
  {
    "text": "will have to take when you decide for a",
    "start": "951680",
    "end": "955279"
  },
  {
    "text": "micro services cloud native adoption you",
    "start": "955279",
    "end": "959390"
  },
  {
    "text": "will need to implement independent",
    "start": "959390",
    "end": "960980"
  },
  {
    "text": "delivery of components to leverage your",
    "start": "960980",
    "end": "963529"
  },
  {
    "text": "micro service architecture you will need",
    "start": "963529",
    "end": "966860"
  },
  {
    "text": "to be able to manage these cloud native",
    "start": "966860",
    "end": "968810"
  },
  {
    "text": "environments you will have to have a bit",
    "start": "968810",
    "end": "972820"
  },
  {
    "text": "updated CI CD chain in case you already",
    "start": "972820",
    "end": "977600"
  },
  {
    "text": "had a relatively good one you will have",
    "start": "977600",
    "end": "981620"
  },
  {
    "text": "to be able to manage production",
    "start": "981620",
    "end": "982730"
  },
  {
    "text": "workloads efficiently do training of",
    "start": "982730",
    "end": "987290"
  },
  {
    "text": "your people in these technologies and",
    "start": "987290",
    "end": "990970"
  },
  {
    "text": "you have to do good devops monitoring",
    "start": "990970",
    "end": "996260"
  },
  {
    "text": "yes you have to do good DevOps and do",
    "start": "996260",
    "end": "999740"
  },
  {
    "text": "the cloud native monitoring so I will",
    "start": "999740",
    "end": "1004000"
  },
  {
    "start": "1002000",
    "end": "1191000"
  },
  {
    "text": "use this example from one of our",
    "start": "1004000",
    "end": "1005950"
  },
  {
    "text": "customers that we work together with",
    "start": "1005950",
    "end": "1007750"
  },
  {
    "text": "them to put their application in",
    "start": "1007750",
    "end": "1010959"
  },
  {
    "text": "production on a kubernetes cluster in",
    "start": "1010959",
    "end": "1014290"
  },
  {
    "text": "the Google container engine it's a",
    "start": "1014290",
    "end": "1017200"
  },
  {
    "text": "relatively simple application it's not a",
    "start": "1017200",
    "end": "1019150"
  },
  {
    "text": "example of a thousand micro services but",
    "start": "1019150",
    "end": "1022150"
  },
  {
    "text": "it illustrates my point on why it's not",
    "start": "1022150",
    "end": "1025928"
  },
  {
    "text": "just cloud native technology is helping",
    "start": "1025929",
    "end": "1027780"
  },
  {
    "text": "Micro sir helping you to run micro",
    "start": "1027780",
    "end": "1030459"
  },
  {
    "text": "services in production but also the",
    "start": "1030459",
    "end": "1032650"
  },
  {
    "text": "micro services architecture is very not",
    "start": "1032650",
    "end": "1037000"
  },
  {
    "text": "sure is it absolutely necessary but at",
    "start": "1037000",
    "end": "1038740"
  },
  {
    "text": "least it's very well fitting with what",
    "start": "1038740",
    "end": "1041678"
  },
  {
    "text": "you can do in the cloud using container",
    "start": "1041679",
    "end": "1044230"
  },
  {
    "text": "orchestrators so what happened here was",
    "start": "1044230",
    "end": "1048160"
  },
  {
    "text": "his company decided to migrate away from",
    "start": "1048160",
    "end": "1051730"
  },
  {
    "text": "their legacy application which was a",
    "start": "1051730",
    "end": "1054040"
  },
  {
    "text": "classic dotnet web application with the",
    "start": "1054040",
    "end": "1059170"
  },
  {
    "text": "database behind it",
    "start": "1059170",
    "end": "1060460"
  },
  {
    "text": "to a whole new stack actually in source",
    "start": "1060460",
    "end": "1063100"
  },
  {
    "text": "it from from a outsourcing company and",
    "start": "1063100",
    "end": "1066490"
  },
  {
    "text": "build it build everything on top of",
    "start": "1066490",
    "end": "1069280"
  },
  {
    "text": "nodejs and elastic search and",
    "start": "1069280",
    "end": "1073160"
  },
  {
    "text": "what they did was build an exporter from",
    "start": "1073160",
    "end": "1076370"
  },
  {
    "text": "the old database to push the data that",
    "start": "1076370",
    "end": "1078590"
  },
  {
    "text": "was still updated to RabbitMQ and import",
    "start": "1078590",
    "end": "1081860"
  },
  {
    "text": "it through the new application into the",
    "start": "1081860",
    "end": "1083510"
  },
  {
    "text": "new database this was necessary because",
    "start": "1083510",
    "end": "1085700"
  },
  {
    "text": "the migration happened step by step so",
    "start": "1085700",
    "end": "1088370"
  },
  {
    "text": "the new application was slowly catching",
    "start": "1088370",
    "end": "1090860"
  },
  {
    "text": "up with features to the old application",
    "start": "1090860",
    "end": "1093020"
  },
  {
    "text": "and until that actually was finished",
    "start": "1093020",
    "end": "1095210"
  },
  {
    "text": "they had to build a proxy that actually",
    "start": "1095210",
    "end": "1099380"
  },
  {
    "text": "proxies request for features that are",
    "start": "1099380",
    "end": "1101420"
  },
  {
    "text": "not yet finished to the to the new",
    "start": "1101420",
    "end": "1104300"
  },
  {
    "text": "application and they build this by",
    "start": "1104300",
    "end": "1109010"
  },
  {
    "text": "creating an admin component a front-end",
    "start": "1109010",
    "end": "1111380"
  },
  {
    "text": "component and lumping three back-end",
    "start": "1111380",
    "end": "1114260"
  },
  {
    "text": "components together into a kind of a",
    "start": "1114260",
    "end": "1116270"
  },
  {
    "text": "monolith so the problem we encountered",
    "start": "1116270",
    "end": "1121180"
  },
  {
    "text": "when we were working together with them",
    "start": "1121180",
    "end": "1123590"
  },
  {
    "text": "and putting this application into",
    "start": "1123590",
    "end": "1125510"
  },
  {
    "text": "production was for example the importer",
    "start": "1125510",
    "end": "1128900"
  },
  {
    "text": "component needed to be scaled together",
    "start": "1128900",
    "end": "1131930"
  },
  {
    "text": "with the back-end so what happened when",
    "start": "1131930",
    "end": "1134410"
  },
  {
    "text": "load hit did the application that the",
    "start": "1134410",
    "end": "1138920"
  },
  {
    "text": "importer scaled up and started importing",
    "start": "1138920",
    "end": "1141050"
  },
  {
    "text": "messages from the old database or the",
    "start": "1141050",
    "end": "1142970"
  },
  {
    "text": "data from the old database actually",
    "start": "1142970",
    "end": "1144650"
  },
  {
    "text": "faster while the application was getting",
    "start": "1144650",
    "end": "1147260"
  },
  {
    "text": "extra load from the front-end that was a",
    "start": "1147260",
    "end": "1149960"
  },
  {
    "text": "very bad situation there the proxy",
    "start": "1149960",
    "end": "1154760"
  },
  {
    "text": "component while actually that one could",
    "start": "1154760",
    "end": "1157190"
  },
  {
    "text": "be scaled with the backend and even it",
    "start": "1157190",
    "end": "1159230"
  },
  {
    "text": "kind of makes sense because they are",
    "start": "1159230",
    "end": "1160790"
  },
  {
    "text": "under load at the same time couldn't be",
    "start": "1160790",
    "end": "1164210"
  },
  {
    "text": "monitored separately from the back-end",
    "start": "1164210",
    "end": "1165680"
  },
  {
    "text": "so when we had a high CPU usage or",
    "start": "1165680",
    "end": "1169360"
  },
  {
    "text": "overflowing memory there was no way to",
    "start": "1169360",
    "end": "1172220"
  },
  {
    "text": "tell whether there is the importer the",
    "start": "1172220",
    "end": "1173900"
  },
  {
    "text": "proxy or the back-end that is at fault",
    "start": "1173900",
    "end": "1175970"
  },
  {
    "text": "and with this cloud native as I saw the",
    "start": "1175970",
    "end": "1178130"
  },
  {
    "text": "monitoring solutions and with the",
    "start": "1178130",
    "end": "1179900"
  },
  {
    "text": "orchestrators actually it's very you get",
    "start": "1179900",
    "end": "1182990"
  },
  {
    "text": "a very deep view into your system if you",
    "start": "1182990",
    "end": "1185690"
  },
  {
    "text": "actually split it up into separate",
    "start": "1185690",
    "end": "1188360"
  },
  {
    "text": "containers running separate processes so",
    "start": "1188360",
    "end": "1192530"
  },
  {
    "start": "1191000",
    "end": "1241000"
  },
  {
    "text": "your next step will be independent",
    "start": "1192530",
    "end": "1194960"
  },
  {
    "text": "delivery of components if you want to",
    "start": "1194960",
    "end": "1197840"
  },
  {
    "text": "really leverage that you have a micro",
    "start": "1197840",
    "end": "1199220"
  },
  {
    "text": "service architecture don't deploy them",
    "start": "1199220",
    "end": "1201170"
  },
  {
    "text": "all of them together it might be",
    "start": "1201170",
    "end": "1203780"
  },
  {
    "text": "good intermediate step but try to move",
    "start": "1203780",
    "end": "1206810"
  },
  {
    "text": "towards separate source called rapport",
    "start": "1206810",
    "end": "1209240"
  },
  {
    "text": "separate artifacts and don't share code",
    "start": "1209240",
    "end": "1212300"
  },
  {
    "text": "between it between them the common",
    "start": "1212300",
    "end": "1215810"
  },
  {
    "text": "library that contains 80% of the code is",
    "start": "1215810",
    "end": "1219650"
  },
  {
    "text": "a very bad pattern because then you just",
    "start": "1219650",
    "end": "1221630"
  },
  {
    "text": "cannot deploy things independently even",
    "start": "1221630",
    "end": "1223880"
  },
  {
    "text": "though it might look like that until you",
    "start": "1223880",
    "end": "1225740"
  },
  {
    "text": "actually change something in the common",
    "start": "1225740",
    "end": "1227090"
  },
  {
    "text": "library that will break something in a",
    "start": "1227090",
    "end": "1228830"
  },
  {
    "text": "completely different service and own",
    "start": "1228830",
    "end": "1232510"
  },
  {
    "text": "application components should own their",
    "start": "1232510",
    "end": "1234860"
  },
  {
    "text": "own database again to be able to be",
    "start": "1234860",
    "end": "1238820"
  },
  {
    "text": "deployed independently how we did this",
    "start": "1238820",
    "end": "1243650"
  },
  {
    "start": "1241000",
    "end": "1316000"
  },
  {
    "text": "in in the with this application we",
    "start": "1243650",
    "end": "1249530"
  },
  {
    "text": "packaged in kubernetes every service as",
    "start": "1249530",
    "end": "1252680"
  },
  {
    "text": "a kubernetes deployment that can be",
    "start": "1252680",
    "end": "1255320"
  },
  {
    "text": "scaled independently they are grouped",
    "start": "1255320",
    "end": "1257570"
  },
  {
    "text": "together into a service and auto scale",
    "start": "1257570",
    "end": "1260960"
  },
  {
    "text": "using a horizontal pod autoscaler so",
    "start": "1260960",
    "end": "1263210"
  },
  {
    "text": "this is a super simple diagram",
    "start": "1263210",
    "end": "1264890"
  },
  {
    "text": "everything is very uniform everything is",
    "start": "1264890",
    "end": "1267200"
  },
  {
    "text": "a container everything is a deployment",
    "start": "1267200",
    "end": "1268760"
  },
  {
    "text": "everything is a service that load",
    "start": "1268760",
    "end": "1270560"
  },
  {
    "text": "balances between those containers and",
    "start": "1270560",
    "end": "1272510"
  },
  {
    "text": "everything has an HPA and horizontal pod",
    "start": "1272510",
    "end": "1276860"
  },
  {
    "text": "autoscaler is called in kubernetes it's",
    "start": "1276860",
    "end": "1278810"
  },
  {
    "text": "a component or a piece of configuration",
    "start": "1278810",
    "end": "1280880"
  },
  {
    "text": "that actually scales up the application",
    "start": "1280880",
    "end": "1282230"
  },
  {
    "text": "up and down and their database is a",
    "start": "1282230",
    "end": "1286280"
  },
  {
    "text": "managed database at elastic so that's it",
    "start": "1286280",
    "end": "1291110"
  },
  {
    "text": "also very important tool you can use in",
    "start": "1291110",
    "end": "1293870"
  },
  {
    "text": "a cloud architecture just let somebody",
    "start": "1293870",
    "end": "1296210"
  },
  {
    "text": "else handle a database the queue or your",
    "start": "1296210",
    "end": "1300260"
  },
  {
    "text": "kubernetes cluster especially for",
    "start": "1300260",
    "end": "1303440"
  },
  {
    "text": "smaller companies that's a very good",
    "start": "1303440",
    "end": "1304760"
  },
  {
    "text": "idea to do managing environments you",
    "start": "1304760",
    "end": "1308390"
  },
  {
    "text": "have to have environments that are cheap",
    "start": "1308390",
    "end": "1310070"
  },
  {
    "text": "disposable and versioned to have a very",
    "start": "1310070",
    "end": "1313100"
  },
  {
    "text": "stable predictable delivery in",
    "start": "1313100",
    "end": "1316520"
  },
  {
    "start": "1316000",
    "end": "1350000"
  },
  {
    "text": "kubernetes I'm keep using that as an",
    "start": "1316520",
    "end": "1318920"
  },
  {
    "text": "example you have nice spaces for this in",
    "start": "1318920",
    "end": "1322490"
  },
  {
    "text": "namespaces you can isolate your",
    "start": "1322490",
    "end": "1324320"
  },
  {
    "text": "containers deploy the same application",
    "start": "1324320",
    "end": "1326270"
  },
  {
    "text": "several times while it's in every",
    "start": "1326270",
    "end": "1330080"
  },
  {
    "text": "namespace it's it feels like it's the",
    "start": "1330080",
    "end": "1332960"
  },
  {
    "text": "only thing on the cluster and you can",
    "start": "1332960",
    "end": "1335420"
  },
  {
    "text": "create these namespaces our practice",
    "start": "1335420",
    "end": "1338330"
  },
  {
    "text": "they practically don't cost anything so",
    "start": "1338330",
    "end": "1340789"
  },
  {
    "text": "the creation of a new environment took",
    "start": "1340789",
    "end": "1343610"
  },
  {
    "text": "us as long as the slowest container to",
    "start": "1343610",
    "end": "1346220"
  },
  {
    "text": "start up which means pretty much seconds",
    "start": "1346220",
    "end": "1351640"
  },
  {
    "start": "1350000",
    "end": "1433000"
  },
  {
    "text": "production workloads you will need to do",
    "start": "1352330",
    "end": "1354799"
  },
  {
    "text": "auto scaling I mentioned the horizontal",
    "start": "1354799",
    "end": "1357590"
  },
  {
    "text": "potahto scalars before other container",
    "start": "1357590",
    "end": "1359630"
  },
  {
    "text": "orchestration systems have different",
    "start": "1359630",
    "end": "1360950"
  },
  {
    "text": "ways to do this",
    "start": "1360950",
    "end": "1363350"
  },
  {
    "text": "you will have to be fine-tuning resource",
    "start": "1363350",
    "end": "1366260"
  },
  {
    "text": "limits and reservations on your cluster",
    "start": "1366260",
    "end": "1368030"
  },
  {
    "text": "I think this is the most at least for me",
    "start": "1368030",
    "end": "1370490"
  },
  {
    "text": "when working with with kubernetes",
    "start": "1370490",
    "end": "1372320"
  },
  {
    "text": "cluster this was the most surprising",
    "start": "1372320",
    "end": "1373700"
  },
  {
    "text": "thing that needed to be that was hard to",
    "start": "1373700",
    "end": "1375919"
  },
  {
    "text": "do was actually deciding how much CPU",
    "start": "1375919",
    "end": "1379039"
  },
  {
    "text": "should a service have reserved and how",
    "start": "1379039",
    "end": "1383090"
  },
  {
    "text": "much it can use at maximum with lots of",
    "start": "1383090",
    "end": "1387530"
  },
  {
    "text": "different environments running on the",
    "start": "1387530",
    "end": "1389539"
  },
  {
    "text": "same cluster and sharing resources you",
    "start": "1389539",
    "end": "1391429"
  },
  {
    "text": "have to be very careful about this if",
    "start": "1391429",
    "end": "1393409"
  },
  {
    "text": "you give too much to a container to high",
    "start": "1393409",
    "end": "1398240"
  },
  {
    "text": "reservation and you will be running lots",
    "start": "1398240",
    "end": "1400340"
  },
  {
    "text": "of virtual machines to accommodate all",
    "start": "1400340",
    "end": "1402200"
  },
  {
    "text": "those containers with all those that are",
    "start": "1402200",
    "end": "1406820"
  },
  {
    "text": "hungry for CPU and maybe not doing",
    "start": "1406820",
    "end": "1409549"
  },
  {
    "text": "anything because when you reserve a CPU",
    "start": "1409549",
    "end": "1412789"
  },
  {
    "text": "to a container its reserved and the",
    "start": "1412789",
    "end": "1414770"
  },
  {
    "text": "container might not be doing anything",
    "start": "1414770",
    "end": "1416150"
  },
  {
    "text": "and it will still be occupying the CPU",
    "start": "1416150",
    "end": "1419690"
  },
  {
    "text": "of course auto scaling mitigates that",
    "start": "1419690",
    "end": "1421940"
  },
  {
    "text": "but it's a it's an effort to to get this",
    "start": "1421940",
    "end": "1425720"
  },
  {
    "text": "right and if you give it to a few too",
    "start": "1425720",
    "end": "1429380"
  },
  {
    "text": "little reservation than other containers",
    "start": "1429380",
    "end": "1431419"
  },
  {
    "text": "can can store it continuous delivery",
    "start": "1431419",
    "end": "1436960"
  },
  {
    "start": "1433000",
    "end": "1509000"
  },
  {
    "text": "it's this part doesn't differ that much",
    "start": "1436960",
    "end": "1439970"
  },
  {
    "text": "except from the from how you were you",
    "start": "1439970",
    "end": "1442820"
  },
  {
    "text": "might have been doing it before it just",
    "start": "1442820",
    "end": "1445010"
  },
  {
    "text": "becomes even more important you need to",
    "start": "1445010",
    "end": "1448039"
  },
  {
    "text": "make sure that whatever bill tool you're",
    "start": "1448039",
    "end": "1449630"
  },
  {
    "text": "using supports docker most of the good",
    "start": "1449630",
    "end": "1454789"
  },
  {
    "text": "ones support it now how to push",
    "start": "1454789",
    "end": "1457630"
  },
  {
    "text": "artifacts to environments that's",
    "start": "1457630",
    "end": "1459710"
  },
  {
    "text": "something you'll need to figure out",
    "start": "1459710",
    "end": "1460820"
  },
  {
    "text": "people have some new container",
    "start": "1460820",
    "end": "1462710"
  },
  {
    "text": "orchestrate or you're a new way of",
    "start": "1462710",
    "end": "1464210"
  },
  {
    "text": "deployment is talking to the API of the",
    "start": "1464210",
    "end": "1466340"
  },
  {
    "text": "container Orchestrator so you will have",
    "start": "1466340",
    "end": "1468799"
  },
  {
    "text": "to",
    "start": "1468799",
    "end": "1469890"
  },
  {
    "text": "have a way to do that actually these",
    "start": "1469890",
    "end": "1473429"
  },
  {
    "text": "days the CICE tools mostly lets you just",
    "start": "1473429",
    "end": "1478830"
  },
  {
    "text": "script it pretty much which is not very",
    "start": "1478830",
    "end": "1481080"
  },
  {
    "text": "hard to do it would be nicer if there",
    "start": "1481080",
    "end": "1483299"
  },
  {
    "text": "would be deeper integrations with the",
    "start": "1483299",
    "end": "1484950"
  },
  {
    "text": "video orchestrators and an important",
    "start": "1484950",
    "end": "1488690"
  },
  {
    "text": "point about DevOps the ops team creates",
    "start": "1488690",
    "end": "1491910"
  },
  {
    "text": "the tooling for the continuous delivery",
    "start": "1491910",
    "end": "1493559"
  },
  {
    "text": "they don't take the artifacts from the",
    "start": "1493559",
    "end": "1496230"
  },
  {
    "text": "development team and put them into",
    "start": "1496230",
    "end": "1497670"
  },
  {
    "text": "production because if that's happening",
    "start": "1497670",
    "end": "1499410"
  },
  {
    "text": "then there is no scalability in the",
    "start": "1499410",
    "end": "1501900"
  },
  {
    "text": "number of services because there is just",
    "start": "1501900",
    "end": "1503820"
  },
  {
    "text": "no way the ops team will understand",
    "start": "1503820",
    "end": "1505380"
  },
  {
    "text": "every new service that needs to be",
    "start": "1505380",
    "end": "1507900"
  },
  {
    "text": "deployed your operations team will have",
    "start": "1507900",
    "end": "1511679"
  },
  {
    "start": "1509000",
    "end": "1550000"
  },
  {
    "text": "to understand container orchestrators",
    "start": "1511679",
    "end": "1514169"
  },
  {
    "text": "debug them tie them together with",
    "start": "1514169",
    "end": "1515700"
  },
  {
    "text": "monitoring and log regression solutions",
    "start": "1515700",
    "end": "1517830"
  },
  {
    "text": "while your development team needs to",
    "start": "1517830",
    "end": "1520290"
  },
  {
    "text": "also be confident users of the platform",
    "start": "1520290",
    "end": "1523309"
  },
  {
    "text": "it's very important we found that when",
    "start": "1523309",
    "end": "1526260"
  },
  {
    "text": "developers just have a don't have a",
    "start": "1526260",
    "end": "1529320"
  },
  {
    "text": "sufficient deep knowledge of how things",
    "start": "1529320",
    "end": "1531120"
  },
  {
    "text": "work and they don't need to understand",
    "start": "1531120",
    "end": "1533700"
  },
  {
    "text": "how kubernetes internals work but they",
    "start": "1533700",
    "end": "1535500"
  },
  {
    "text": "need to understand the concepts and how",
    "start": "1535500",
    "end": "1537450"
  },
  {
    "text": "to be a proficient user of it then they",
    "start": "1537450",
    "end": "1541169"
  },
  {
    "text": "if that doesn't happen they don't like",
    "start": "1541169",
    "end": "1542880"
  },
  {
    "text": "to touch it and the whole DevOps",
    "start": "1542880",
    "end": "1544770"
  },
  {
    "text": "experience suffers because they will be",
    "start": "1544770",
    "end": "1547260"
  },
  {
    "text": "pushing more and more onto the ops team",
    "start": "1547260",
    "end": "1551030"
  },
  {
    "start": "1550000",
    "end": "1613000"
  },
  {
    "text": "and the monitoring again I already",
    "start": "1551030",
    "end": "1554730"
  },
  {
    "text": "showed it but now from a DevOps",
    "start": "1554730",
    "end": "1557520"
  },
  {
    "text": "perspective again the ops team delivers",
    "start": "1557520",
    "end": "1559919"
  },
  {
    "text": "the tools you will might need",
    "start": "1559919",
    "end": "1562950"
  },
  {
    "text": "inter-service debugging so you or you",
    "start": "1562950",
    "end": "1566280"
  },
  {
    "text": "will need inter-service debugging so a",
    "start": "1566280",
    "end": "1568140"
  },
  {
    "text": "log aggregation solution will absolutely",
    "start": "1568140",
    "end": "1570030"
  },
  {
    "text": "be necessary put in some correlation IDs",
    "start": "1570030",
    "end": "1573360"
  },
  {
    "text": "so you can actually find - what happened",
    "start": "1573360",
    "end": "1576600"
  },
  {
    "text": "to a request over different services",
    "start": "1576600",
    "end": "1579120"
  },
  {
    "text": "that we're all involved in actually in",
    "start": "1579120",
    "end": "1580890"
  },
  {
    "text": "servicing it that will be probably work",
    "start": "1580890",
    "end": "1584190"
  },
  {
    "text": "we see usually that companies don't have",
    "start": "1584190",
    "end": "1587220"
  },
  {
    "text": "that good monitoring and survive with it",
    "start": "1587220",
    "end": "1589049"
  },
  {
    "text": "pretty well with the monolithic",
    "start": "1589049",
    "end": "1590220"
  },
  {
    "text": "architecture my guess is is because of",
    "start": "1590220",
    "end": "1592830"
  },
  {
    "text": "stack traces mostly because they carry a",
    "start": "1592830",
    "end": "1596040"
  },
  {
    "text": "lot of information to find out where how",
    "start": "1596040",
    "end": "1598230"
  },
  {
    "text": "a request went inside the application",
    "start": "1598230",
    "end": "1600690"
  },
  {
    "text": "but you lose that when you",
    "start": "1600690",
    "end": "1603070"
  },
  {
    "text": "have services that communicate over a",
    "start": "1603070",
    "end": "1604960"
  },
  {
    "text": "network so you'll have to actually",
    "start": "1604960",
    "end": "1606550"
  },
  {
    "text": "aggregate them logging from several",
    "start": "1606550",
    "end": "1608440"
  },
  {
    "text": "services and then make sure they don't",
    "start": "1608440",
    "end": "1609910"
  },
  {
    "text": "look too much because then it's again",
    "start": "1609910",
    "end": "1611530"
  },
  {
    "text": "hard to find out what's the important",
    "start": "1611530",
    "end": "1613240"
  },
  {
    "start": "1613000",
    "end": "1684000"
  },
  {
    "text": "stuff",
    "start": "1613240",
    "end": "1614280"
  },
  {
    "text": "and finally DevOps DevOps will be an",
    "start": "1614280",
    "end": "1617440"
  },
  {
    "text": "absolute necessity and you will you",
    "start": "1617440",
    "end": "1621880"
  },
  {
    "text": "might need an ops team to develop the",
    "start": "1621880",
    "end": "1623470"
  },
  {
    "text": "tooling or you go to some completely",
    "start": "1623470",
    "end": "1625600"
  },
  {
    "text": "managed solutions which are out there",
    "start": "1625600",
    "end": "1627250"
  },
  {
    "text": "like we did with this customer of ours -",
    "start": "1627250",
    "end": "1630390"
  },
  {
    "text": "they went to Google container engine",
    "start": "1630390",
    "end": "1632800"
  },
  {
    "text": "which is a managed kubernetes use the",
    "start": "1632800",
    "end": "1634810"
  },
  {
    "text": "managed monitoring solutions in Google",
    "start": "1634810",
    "end": "1637510"
  },
  {
    "text": "call stack driver use the manage",
    "start": "1637510",
    "end": "1639640"
  },
  {
    "text": "database and still they ended up with",
    "start": "1639640",
    "end": "1642010"
  },
  {
    "text": "one ops guy having to service things so",
    "start": "1642010",
    "end": "1646080"
  },
  {
    "text": "make sure and if you already have an ops",
    "start": "1646080",
    "end": "1649330"
  },
  {
    "text": "team in place make sure they are not",
    "start": "1649330",
    "end": "1651670"
  },
  {
    "text": "deploying applications but they are",
    "start": "1651670",
    "end": "1653620"
  },
  {
    "text": "developing the tooling that the",
    "start": "1653620",
    "end": "1656200"
  },
  {
    "text": "developers then use to deploy the",
    "start": "1656200",
    "end": "1658810"
  },
  {
    "text": "applications and the environments should",
    "start": "1658810",
    "end": "1661720"
  },
  {
    "text": "also be the developer's responsibility",
    "start": "1661720",
    "end": "1662970"
  },
  {
    "text": "the operations team shouldn't be like",
    "start": "1662970",
    "end": "1665500"
  },
  {
    "text": "keeping up the test environment up and",
    "start": "1665500",
    "end": "1667330"
  },
  {
    "text": "running somehow yeah so the ideal view",
    "start": "1667330",
    "end": "1672760"
  },
  {
    "text": "of of this system would be this all",
    "start": "1672760",
    "end": "1678400"
  },
  {
    "text": "components separated and and running in",
    "start": "1678400",
    "end": "1682750"
  },
  {
    "text": "the orchestrator so they do marine",
    "start": "1682750",
    "end": "1688920"
  },
  {
    "start": "1684000",
    "end": "1730000"
  },
  {
    "text": "travelled to hell to defeat the demons",
    "start": "1688920",
    "end": "1693880"
  },
  {
    "text": "there and succeeded only to see the",
    "start": "1693880",
    "end": "1698530"
  },
  {
    "text": "demons still getting to earth where he",
    "start": "1698530",
    "end": "1702280"
  },
  {
    "text": "had to go and defeat them again to",
    "start": "1702280",
    "end": "1705430"
  },
  {
    "text": "finally save humanity it's gonna be a",
    "start": "1705430",
    "end": "1708750"
  },
  {
    "text": "rough ride but don't forget your cloud",
    "start": "1708750",
    "end": "1713980"
  },
  {
    "text": "native weapons and don't be afraid of",
    "start": "1713980",
    "end": "1717730"
  },
  {
    "text": "the demons thank you",
    "start": "1717730",
    "end": "1723000"
  },
  {
    "text": "you",
    "start": "1725929",
    "end": "1727990"
  }
]