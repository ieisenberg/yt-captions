[
  {
    "start": "0",
    "end": "81000"
  },
  {
    "text": "[Music]",
    "start": "340",
    "end": "6799"
  },
  {
    "text": "thank you",
    "start": "6799",
    "end": "8940"
  },
  {
    "text": "thank you uh yeah so my name is renar I",
    "start": "8940",
    "end": "12599"
  },
  {
    "text": "want to talk to you about unison",
    "start": "12599",
    "end": "15299"
  },
  {
    "text": "which is a friendly programming language",
    "start": "15299",
    "end": "17340"
  },
  {
    "text": "from the future",
    "start": "17340",
    "end": "19740"
  },
  {
    "text": "uh so yeah I'm",
    "start": "19740",
    "end": "22140"
  },
  {
    "text": "uh one of the founders of a company",
    "start": "22140",
    "end": "24000"
  },
  {
    "text": "called the Unison computing which is a",
    "start": "24000",
    "end": "26939"
  },
  {
    "text": "public benefit",
    "start": "26939",
    "end": "28199"
  },
  {
    "text": "company",
    "start": "28199",
    "end": "29580"
  },
  {
    "text": "with uh the mission to create the Unison",
    "start": "29580",
    "end": "33180"
  },
  {
    "text": "language essentially and uh products",
    "start": "33180",
    "end": "35399"
  },
  {
    "text": "that that enables",
    "start": "35399",
    "end": "37739"
  },
  {
    "text": "um also one of you know one of the",
    "start": "37739",
    "end": "39540"
  },
  {
    "text": "authors of uh functional programming at",
    "start": "39540",
    "end": "41520"
  },
  {
    "text": "Scala and upcoming kotlin translation of",
    "start": "41520",
    "end": "44460"
  },
  {
    "text": "that book and uh just so happens that my",
    "start": "44460",
    "end": "47460"
  },
  {
    "text": "co-author Paul is also my co-founder of",
    "start": "47460",
    "end": "50760"
  },
  {
    "text": "the company",
    "start": "50760",
    "end": "52920"
  },
  {
    "text": "uh so",
    "start": "52920",
    "end": "55260"
  },
  {
    "text": "today I want to give you a sort of a",
    "start": "55260",
    "end": "57780"
  },
  {
    "text": "high level",
    "start": "57780",
    "end": "58860"
  },
  {
    "text": "overview of the Unison language so it",
    "start": "58860",
    "end": "62399"
  },
  {
    "text": "can't go into too much detail in a talk",
    "start": "62399",
    "end": "64440"
  },
  {
    "text": "like this and uh gonna touch on a lot of",
    "start": "64440",
    "end": "67740"
  },
  {
    "text": "topics which each could be its own talk",
    "start": "67740",
    "end": "71700"
  },
  {
    "text": "so the purpose here is just to give you",
    "start": "71700",
    "end": "73979"
  },
  {
    "text": "a high level overview of Unison and to",
    "start": "73979",
    "end": "76740"
  },
  {
    "text": "invite you to come join the Unison",
    "start": "76740",
    "end": "78840"
  },
  {
    "text": "community",
    "start": "78840",
    "end": "81119"
  },
  {
    "start": "81000",
    "end": "457000"
  },
  {
    "text": "so what is unison Unison is a purely",
    "start": "81119",
    "end": "84540"
  },
  {
    "text": "functional language",
    "start": "84540",
    "end": "86000"
  },
  {
    "text": "similar to Haskell uh but the",
    "start": "86000",
    "end": "90360"
  },
  {
    "text": "similarities are sort of superficial the",
    "start": "90360",
    "end": "93720"
  },
  {
    "text": "syntax is very similar to Haskell where",
    "start": "93720",
    "end": "95579"
  },
  {
    "text": "strongly statically typed",
    "start": "95579",
    "end": "97740"
  },
  {
    "text": "uh the the language has Type inference",
    "start": "97740",
    "end": "102060"
  },
  {
    "text": "and we're strictly evaluated similar to",
    "start": "102060",
    "end": "104640"
  },
  {
    "text": "Java or Scala or languages like that",
    "start": "104640",
    "end": "108420"
  },
  {
    "text": "uh it's open source so all of the",
    "start": "108420",
    "end": "112100"
  },
  {
    "text": "compiler and everything like that is",
    "start": "112100",
    "end": "114540"
  },
  {
    "text": "under a permissive MIT license",
    "start": "114540",
    "end": "117600"
  },
  {
    "text": "uh like I said it has similarities to",
    "start": "117600",
    "end": "119640"
  },
  {
    "text": "Haskell but it also has some",
    "start": "119640",
    "end": "120840"
  },
  {
    "text": "similarities to small talk I don't know",
    "start": "120840",
    "end": "123119"
  },
  {
    "text": "if anybody remembers small talk but",
    "start": "123119",
    "end": "125399"
  },
  {
    "text": "it is uh you know small dog was awesome",
    "start": "125399",
    "end": "129119"
  },
  {
    "text": "and so we're stealing a lot of a lot of",
    "start": "129119",
    "end": "131039"
  },
  {
    "text": "ideas from small talk but it is actually",
    "start": "131039",
    "end": "133620"
  },
  {
    "text": "totally different from I think anything",
    "start": "133620",
    "end": "135599"
  },
  {
    "text": "that has come before",
    "start": "135599",
    "end": "137940"
  },
  {
    "text": "so why why you understand why are we",
    "start": "137940",
    "end": "140459"
  },
  {
    "text": "doing this why are we making a new",
    "start": "140459",
    "end": "141780"
  },
  {
    "text": "programming language",
    "start": "141780",
    "end": "143640"
  },
  {
    "text": "so just to sort of start from the very",
    "start": "143640",
    "end": "145800"
  },
  {
    "text": "beginning uh we've been programming in",
    "start": "145800",
    "end": "148800"
  },
  {
    "text": "high-level languages you know as a as a",
    "start": "148800",
    "end": "151379"
  },
  {
    "text": "species",
    "start": "151379",
    "end": "152280"
  },
  {
    "text": "for about 60 years now and along the way",
    "start": "152280",
    "end": "155520"
  },
  {
    "text": "we've experimented with various",
    "start": "155520",
    "end": "157200"
  },
  {
    "text": "programming paradigms and programming",
    "start": "157200",
    "end": "159180"
  },
  {
    "text": "language designs",
    "start": "159180",
    "end": "160980"
  },
  {
    "text": "although most languages and today it",
    "start": "160980",
    "end": "163440"
  },
  {
    "text": "takes use",
    "start": "163440",
    "end": "164879"
  },
  {
    "text": "are not significantly different from",
    "start": "164879",
    "end": "168300"
  },
  {
    "text": "alcohol or Fortran or you know they",
    "start": "168300",
    "end": "171120"
  },
  {
    "text": "actually are alcohol and Fortran",
    "start": "171120",
    "end": "174120"
  },
  {
    "text": "but software development has evolved",
    "start": "174120",
    "end": "177480"
  },
  {
    "text": "despite the languages being sort of",
    "start": "177480",
    "end": "179700"
  },
  {
    "text": "archaic and there's now all this",
    "start": "179700",
    "end": "181980"
  },
  {
    "text": "peripheral stuff that we do as software",
    "start": "181980",
    "end": "184920"
  },
  {
    "text": "developers and very little of it is",
    "start": "184920",
    "end": "187620"
  },
  {
    "text": "actually done in our languages and",
    "start": "187620",
    "end": "189900"
  },
  {
    "text": "there's stuff like Version Control and",
    "start": "189900",
    "end": "192000"
  },
  {
    "text": "collaboration you know we use tools like",
    "start": "192000",
    "end": "194459"
  },
  {
    "text": "gits and you know subversion doesn't",
    "start": "194459",
    "end": "197220"
  },
  {
    "text": "have any subversion you know tools like",
    "start": "197220",
    "end": "199260"
  },
  {
    "text": "that",
    "start": "199260",
    "end": "200459"
  },
  {
    "text": "uh we use",
    "start": "200459",
    "end": "202620"
  },
  {
    "text": "you know tools to do builds and",
    "start": "202620",
    "end": "204360"
  },
  {
    "text": "continuous integration you know there's",
    "start": "204360",
    "end": "205980"
  },
  {
    "text": "like Circle CI and Travis and",
    "start": "205980",
    "end": "208980"
  },
  {
    "text": "SBT and make and various things and you",
    "start": "208980",
    "end": "213480"
  },
  {
    "text": "know none of that stuff is in the",
    "start": "213480",
    "end": "214800"
  },
  {
    "text": "language and then there's uh concerns",
    "start": "214800",
    "end": "216720"
  },
  {
    "text": "like deployment and distribution and Ops",
    "start": "216720",
    "end": "219239"
  },
  {
    "text": "and you know all of that stuff kind of",
    "start": "219239",
    "end": "221580"
  },
  {
    "text": "just like hangs together with yaml files",
    "start": "221580",
    "end": "223500"
  },
  {
    "text": "and Unix",
    "start": "223500",
    "end": "225540"
  },
  {
    "text": "and",
    "start": "225540",
    "end": "226920"
  },
  {
    "text": "I want to say that almost none of this",
    "start": "226920",
    "end": "228959"
  },
  {
    "text": "stuff is intentionally and and",
    "start": "228959",
    "end": "231420"
  },
  {
    "text": "thoughtfully designed",
    "start": "231420",
    "end": "233040"
  },
  {
    "text": "the tools that we now use to make",
    "start": "233040",
    "end": "234840"
  },
  {
    "text": "software are mostly sort of incremental",
    "start": "234840",
    "end": "237599"
  },
  {
    "text": "and pragmatic and they're built up on",
    "start": "237599",
    "end": "240480"
  },
  {
    "text": "the assumptions of whatever came before",
    "start": "240480",
    "end": "243840"
  },
  {
    "text": "so we still use old-fashioned text",
    "start": "243840",
    "end": "246360"
  },
  {
    "text": "editors to mutate folders full of text",
    "start": "246360",
    "end": "248700"
  },
  {
    "text": "files",
    "start": "248700",
    "end": "249659"
  },
  {
    "text": "and we share those around with tools",
    "start": "249659",
    "end": "252959"
  },
  {
    "text": "that don't know anything about the",
    "start": "252959",
    "end": "254519"
  },
  {
    "text": "structure of our code",
    "start": "254519",
    "end": "256079"
  },
  {
    "text": "and then when we deploy our programs and",
    "start": "256079",
    "end": "259139"
  },
  {
    "text": "we want to like make modern distributed",
    "start": "259139",
    "end": "261180"
  },
  {
    "text": "systems those systems communicate with",
    "start": "261180",
    "end": "263699"
  },
  {
    "text": "one another via ad hoc protocols they're",
    "start": "263699",
    "end": "266759"
  },
  {
    "text": "often just designed one off for those",
    "start": "266759",
    "end": "269520"
  },
  {
    "text": "systems using towers of technologies",
    "start": "269520",
    "end": "273840"
  },
  {
    "text": "that sometimes require Legions of",
    "start": "273840",
    "end": "275820"
  },
  {
    "text": "programmers to maintain or Ops people",
    "start": "275820",
    "end": "279780"
  },
  {
    "text": "so we wanted to take a step back and",
    "start": "279780",
    "end": "284040"
  },
  {
    "text": "just sort of ask what",
    "start": "284040",
    "end": "286500"
  },
  {
    "text": "if we had redesigned the whole software",
    "start": "286500",
    "end": "288240"
  },
  {
    "text": "development experience from the",
    "start": "288240",
    "end": "289380"
  },
  {
    "text": "beginning",
    "start": "289380",
    "end": "290340"
  },
  {
    "text": "what would we change",
    "start": "290340",
    "end": "292440"
  },
  {
    "text": "so what lessons from the past 60 years",
    "start": "292440",
    "end": "294479"
  },
  {
    "text": "of software development",
    "start": "294479",
    "end": "296820"
  },
  {
    "text": "could we apply it to our design",
    "start": "296820",
    "end": "299280"
  },
  {
    "text": "and the units in this sort of the answer",
    "start": "299280",
    "end": "301680"
  },
  {
    "text": "to that to that question we wanted to",
    "start": "301680",
    "end": "304139"
  },
  {
    "text": "revisit everything about the experience",
    "start": "304139",
    "end": "306540"
  },
  {
    "text": "of developing software",
    "start": "306540",
    "end": "308220"
  },
  {
    "text": "and",
    "start": "308220",
    "end": "309660"
  },
  {
    "text": "basically remove everything that isn't",
    "start": "309660",
    "end": "313259"
  },
  {
    "text": "delightful",
    "start": "313259",
    "end": "315919"
  },
  {
    "text": "now Unison is not complete right it's",
    "start": "316139",
    "end": "319259"
  },
  {
    "text": "it's sort of an ongoing process and the",
    "start": "319259",
    "end": "321300"
  },
  {
    "text": "Unison is currently in Alpha which means",
    "start": "321300",
    "end": "324240"
  },
  {
    "text": "that you can",
    "start": "324240",
    "end": "325979"
  },
  {
    "text": "install it you can try it out you can",
    "start": "325979",
    "end": "327960"
  },
  {
    "text": "write software in it but it has a lot of",
    "start": "327960",
    "end": "330240"
  },
  {
    "text": "rough edges",
    "start": "330240",
    "end": "331320"
  },
  {
    "text": "and you know you shouldn't like bet your",
    "start": "331320",
    "end": "333600"
  },
  {
    "text": "business on a service that you wrote in",
    "start": "333600",
    "end": "335160"
  },
  {
    "text": "unison",
    "start": "335160",
    "end": "336320"
  },
  {
    "text": "uh and the developer experience isn't",
    "start": "336320",
    "end": "338940"
  },
  {
    "text": "anywhere close to where we want it to be",
    "start": "338940",
    "end": "341340"
  },
  {
    "text": "we have sort of the first",
    "start": "341340",
    "end": "345479"
  },
  {
    "text": "um seeds of a graphical IDE for example",
    "start": "345479",
    "end": "349020"
  },
  {
    "text": "and there are bugs there are lots of",
    "start": "349020",
    "end": "350759"
  },
  {
    "text": "bugs and there are not many libraries",
    "start": "350759",
    "end": "353100"
  },
  {
    "text": "available yet for unison",
    "start": "353100",
    "end": "355020"
  },
  {
    "text": "but you know",
    "start": "355020",
    "end": "357240"
  },
  {
    "text": "you can change that we have a growing",
    "start": "357240",
    "end": "359759"
  },
  {
    "text": "and friendly community",
    "start": "359759",
    "end": "362039"
  },
  {
    "text": "and the impression that I really want to",
    "start": "362039",
    "end": "363419"
  },
  {
    "text": "make today is that Unison I want you to",
    "start": "363419",
    "end": "366660"
  },
  {
    "text": "sort of see this potential",
    "start": "366660",
    "end": "368400"
  },
  {
    "text": "that the future of programming and I",
    "start": "368400",
    "end": "371340"
  },
  {
    "text": "think Unison is going to be that the",
    "start": "371340",
    "end": "373139"
  },
  {
    "text": "future of programming has the potential",
    "start": "373139",
    "end": "374460"
  },
  {
    "text": "to be completely amazing",
    "start": "374460",
    "end": "376500"
  },
  {
    "text": "and you can program in unison today to",
    "start": "376500",
    "end": "379320"
  },
  {
    "text": "make the future happen today",
    "start": "379320",
    "end": "381240"
  },
  {
    "text": "and there's almost no setup like you can",
    "start": "381240",
    "end": "383400"
  },
  {
    "text": "just install Unison fire up your",
    "start": "383400",
    "end": "385139"
  },
  {
    "text": "favorite text editor and start coding",
    "start": "385139",
    "end": "386819"
  },
  {
    "text": "like Unison doesn't require you to like",
    "start": "386819",
    "end": "389699"
  },
  {
    "text": "set up a project structure or anything",
    "start": "389699",
    "end": "392940"
  },
  {
    "text": "like that uh I think you'll find when",
    "start": "392940",
    "end": "395819"
  },
  {
    "text": "you start it up that you can start",
    "start": "395819",
    "end": "398100"
  },
  {
    "text": "having a conversation with unison very",
    "start": "398100",
    "end": "400199"
  },
  {
    "text": "quickly",
    "start": "400199",
    "end": "402560"
  },
  {
    "text": "so the big ideas of Unison the the",
    "start": "403020",
    "end": "405840"
  },
  {
    "text": "things that I really want to",
    "start": "405840",
    "end": "407460"
  },
  {
    "text": "to get out is is what's sort of behind",
    "start": "407460",
    "end": "411419"
  },
  {
    "text": "uh Unison what's the what's the big idea",
    "start": "411419",
    "end": "415020"
  },
  {
    "text": "so it's really two things uh but they're",
    "start": "415020",
    "end": "417720"
  },
  {
    "text": "sort of the same",
    "start": "417720",
    "end": "419819"
  },
  {
    "text": "firstly Unison code is not text it is",
    "start": "419819",
    "end": "423120"
  },
  {
    "text": "structured immutable data",
    "start": "423120",
    "end": "426360"
  },
  {
    "text": "and number two Unison definitions are",
    "start": "426360",
    "end": "429300"
  },
  {
    "text": "not referenced by name they're",
    "start": "429300",
    "end": "431759"
  },
  {
    "text": "referenced by hash so every Unison",
    "start": "431759",
    "end": "434819"
  },
  {
    "text": "expression has a unique and",
    "start": "434819",
    "end": "437160"
  },
  {
    "text": "deterministic global address",
    "start": "437160",
    "end": "439740"
  },
  {
    "text": "which is a hash of its implementation",
    "start": "439740",
    "end": "443900"
  },
  {
    "text": "so that actually turns out to have",
    "start": "444180",
    "end": "447000"
  },
  {
    "text": "really big implications on how we write",
    "start": "447000",
    "end": "450060"
  },
  {
    "text": "software and we're really only starting",
    "start": "450060",
    "end": "451800"
  },
  {
    "text": "to scratch the surface of",
    "start": "451800",
    "end": "453660"
  },
  {
    "text": "of what this all means but I'm going to",
    "start": "453660",
    "end": "455819"
  },
  {
    "text": "take take you through it",
    "start": "455819",
    "end": "458220"
  },
  {
    "start": "457000",
    "end": "559000"
  },
  {
    "text": "so first of all code is content",
    "start": "458220",
    "end": "459900"
  },
  {
    "text": "addressed",
    "start": "459900",
    "end": "461460"
  },
  {
    "text": "what that means is that these two",
    "start": "461460",
    "end": "463620"
  },
  {
    "text": "definitions here have and split so these",
    "start": "463620",
    "end": "466319"
  },
  {
    "text": "are Unison definitions",
    "start": "466319",
    "end": "467940"
  },
  {
    "text": "uh their functions each one of them",
    "start": "467940",
    "end": "470099"
  },
  {
    "text": "takes an argument which is a list they",
    "start": "470099",
    "end": "472440"
  },
  {
    "text": "have different names they have different",
    "start": "472440",
    "end": "474599"
  },
  {
    "text": "uh names for like the local variables",
    "start": "474599",
    "end": "477360"
  },
  {
    "text": "and the arguments and things like that",
    "start": "477360",
    "end": "479400"
  },
  {
    "text": "but the implementation is the same and",
    "start": "479400",
    "end": "483300"
  },
  {
    "text": "in a language like If This Were Haskell",
    "start": "483300",
    "end": "485220"
  },
  {
    "text": "code or you know Scala or something",
    "start": "485220",
    "end": "488639"
  },
  {
    "text": "this these two functions would be",
    "start": "488639",
    "end": "491699"
  },
  {
    "text": "two different functions right and you",
    "start": "491699",
    "end": "493979"
  },
  {
    "text": "could they could evolve separately",
    "start": "493979",
    "end": "496440"
  },
  {
    "text": "but in unison these are actually the",
    "start": "496440",
    "end": "498840"
  },
  {
    "text": "same function they just it's just two",
    "start": "498840",
    "end": "501120"
  },
  {
    "text": "different names for exactly the same",
    "start": "501120",
    "end": "503639"
  },
  {
    "text": "function",
    "start": "503639",
    "end": "504720"
  },
  {
    "text": "because behind the scenes everything is",
    "start": "504720",
    "end": "507300"
  },
  {
    "text": "referenced by hash so",
    "start": "507300",
    "end": "509819"
  },
  {
    "text": "these two definitions have the same hash",
    "start": "509819",
    "end": "512039"
  },
  {
    "text": "and therefore they are in fact the same",
    "start": "512039",
    "end": "516659"
  },
  {
    "text": "and behind that even everything is",
    "start": "516659",
    "end": "519959"
  },
  {
    "text": "referenced by hash inside of these",
    "start": "519959",
    "end": "521820"
  },
  {
    "text": "definitions too so you go back and you",
    "start": "521820",
    "end": "524760"
  },
  {
    "text": "see that it calls take and drop and size",
    "start": "524760",
    "end": "527580"
  },
  {
    "text": "on the list but actually the code just",
    "start": "527580",
    "end": "532279"
  },
  {
    "text": "contains a tree which has uh hashes in",
    "start": "532279",
    "end": "536880"
  },
  {
    "text": "it",
    "start": "536880",
    "end": "537600"
  },
  {
    "text": "and then those sort of local names are",
    "start": "537600",
    "end": "539880"
  },
  {
    "text": "just annotations on that tree",
    "start": "539880",
    "end": "542459"
  },
  {
    "text": "and so the actual source code of of this",
    "start": "542459",
    "end": "545820"
  },
  {
    "text": "Unison function just contains hashes and",
    "start": "545820",
    "end": "548399"
  },
  {
    "text": "now we can really see that these two are",
    "start": "548399",
    "end": "551220"
  },
  {
    "text": "the same",
    "start": "551220",
    "end": "552660"
  },
  {
    "text": "when we have removed all of the names",
    "start": "552660",
    "end": "556339"
  },
  {
    "text": "uh this also means that",
    "start": "557700",
    "end": "559740"
  },
  {
    "start": "559000",
    "end": "743000"
  },
  {
    "text": "the code base",
    "start": "559740",
    "end": "561240"
  },
  {
    "text": "is an immutable data structure",
    "start": "561240",
    "end": "564180"
  },
  {
    "text": "so",
    "start": "564180",
    "end": "565380"
  },
  {
    "text": "it's not a mutable collection of text",
    "start": "565380",
    "end": "567779"
  },
  {
    "text": "files like uh you know in most other",
    "start": "567779",
    "end": "570120"
  },
  {
    "text": "languages",
    "start": "570120",
    "end": "571380"
  },
  {
    "text": "so it's an immutable data structure that",
    "start": "571380",
    "end": "573360"
  },
  {
    "text": "stores your code in a computable form",
    "start": "573360",
    "end": "576240"
  },
  {
    "text": "and then metadata like names and",
    "start": "576240",
    "end": "579899"
  },
  {
    "text": "documentation and tests and other things",
    "start": "579899",
    "end": "582180"
  },
  {
    "text": "like that are sort of hanging on uh you",
    "start": "582180",
    "end": "585899"
  },
  {
    "text": "know as annotations on that data",
    "start": "585899",
    "end": "589680"
  },
  {
    "text": "the code base knows the type and the",
    "start": "589680",
    "end": "591899"
  },
  {
    "text": "whole dependency graph of every function",
    "start": "591899",
    "end": "593959"
  },
  {
    "text": "and it knows how your code evolves over",
    "start": "593959",
    "end": "597660"
  },
  {
    "text": "time and so the code base is is really a",
    "start": "597660",
    "end": "600660"
  },
  {
    "text": "database of code that you can query and",
    "start": "600660",
    "end": "603779"
  },
  {
    "text": "manipulate",
    "start": "603779",
    "end": "606320"
  },
  {
    "text": "for example uh so here I'm showing a",
    "start": "606779",
    "end": "609959"
  },
  {
    "text": "view where I've fired up the Unison code",
    "start": "609959",
    "end": "612240"
  },
  {
    "text": "base manager which is a command line",
    "start": "612240",
    "end": "613740"
  },
  {
    "text": "interface which is currently the main",
    "start": "613740",
    "end": "616860"
  },
  {
    "text": "way of interfacing with unison so you",
    "start": "616860",
    "end": "618600"
  },
  {
    "text": "know you",
    "start": "618600",
    "end": "619440"
  },
  {
    "text": "fire up the units in codebase manager",
    "start": "619440",
    "end": "622260"
  },
  {
    "text": "in your command line and it gives you",
    "start": "622260",
    "end": "623760"
  },
  {
    "text": "this sort of command line interface and",
    "start": "623760",
    "end": "626640"
  },
  {
    "text": "here I've sort of CD into my Base",
    "start": "626640",
    "end": "629040"
  },
  {
    "text": "Library which uh",
    "start": "629040",
    "end": "631080"
  },
  {
    "text": "ships with unison",
    "start": "631080",
    "end": "632820"
  },
  {
    "text": "and I say viewed list.filter which says",
    "start": "632820",
    "end": "635820"
  },
  {
    "text": "give me the definition of the stuff",
    "start": "635820",
    "end": "638279"
  },
  {
    "text": "filter and and it tells me what the",
    "start": "638279",
    "end": "640560"
  },
  {
    "text": "definition is and so it it renders it",
    "start": "640560",
    "end": "643860"
  },
  {
    "text": "out as this sort of source code AS text",
    "start": "643860",
    "end": "646740"
  },
  {
    "text": "but this text is not stored in the code",
    "start": "646740",
    "end": "649200"
  },
  {
    "text": "base we'll store it in the code base is",
    "start": "649200",
    "end": "651240"
  },
  {
    "text": "the syntax tree like the",
    "start": "651240",
    "end": "653760"
  },
  {
    "text": "the compiled version of this and then",
    "start": "653760",
    "end": "656700"
  },
  {
    "text": "sort of on the fly when I say view I'm",
    "start": "656700",
    "end": "658860"
  },
  {
    "text": "basically asking Unison to uncompile",
    "start": "658860",
    "end": "660779"
  },
  {
    "text": "this for me",
    "start": "660779",
    "end": "664040"
  },
  {
    "text": "and uh I can ask you for other things",
    "start": "664680",
    "end": "666899"
  },
  {
    "text": "like documentation",
    "start": "666899",
    "end": "669180"
  },
  {
    "text": "so documentation",
    "start": "669180",
    "end": "670980"
  },
  {
    "text": "is stored in the code base and and",
    "start": "670980",
    "end": "673740"
  },
  {
    "text": "uh definitions can be annotated with",
    "start": "673740",
    "end": "676140"
  },
  {
    "text": "their their documentation",
    "start": "676140",
    "end": "677940"
  },
  {
    "text": "and documentation is actually written in",
    "start": "677940",
    "end": "679860"
  },
  {
    "text": "unison which we'll go into a little bit",
    "start": "679860",
    "end": "682320"
  },
  {
    "text": "later",
    "start": "682320",
    "end": "684360"
  },
  {
    "text": "um the examples in here like they're",
    "start": "684360",
    "end": "686700"
  },
  {
    "text": "usage examples in here",
    "start": "686700",
    "end": "688440"
  },
  {
    "text": "for the filter function and these",
    "start": "688440",
    "end": "691740"
  },
  {
    "text": "examples are Live code like they're not",
    "start": "691740",
    "end": "694019"
  },
  {
    "text": "text and Unison is evaluating these",
    "start": "694019",
    "end": "696779"
  },
  {
    "text": "expressions",
    "start": "696779",
    "end": "697980"
  },
  {
    "text": "for me when I ask for the documentation",
    "start": "697980",
    "end": "701339"
  },
  {
    "text": "or since they have hashes uh if the if",
    "start": "701339",
    "end": "705779"
  },
  {
    "text": "the evaluation is already",
    "start": "705779",
    "end": "707940"
  },
  {
    "text": "done we've will have cached it in the",
    "start": "707940",
    "end": "710579"
  },
  {
    "text": "hash table and we can just look it up",
    "start": "710579",
    "end": "714560"
  },
  {
    "text": "so uh we can ask for all kinds of other",
    "start": "715740",
    "end": "717839"
  },
  {
    "text": "things like uh I can get a list of all",
    "start": "717839",
    "end": "721380"
  },
  {
    "text": "the dependencies or all the dependents",
    "start": "721380",
    "end": "723420"
  },
  {
    "text": "of a given definition",
    "start": "723420",
    "end": "726019"
  },
  {
    "text": "and and you can you know ask for any",
    "start": "726019",
    "end": "728820"
  },
  {
    "text": "whatever the type is of a given",
    "start": "728820",
    "end": "730740"
  },
  {
    "text": "definition and things like that so lots",
    "start": "730740",
    "end": "733800"
  },
  {
    "text": "of lots of properties that you can ask",
    "start": "733800",
    "end": "735180"
  },
  {
    "text": "about your your code and we're improving",
    "start": "735180",
    "end": "737940"
  },
  {
    "text": "the",
    "start": "737940",
    "end": "739140"
  },
  {
    "text": "the ux of that over over time",
    "start": "739140",
    "end": "743399"
  },
  {
    "start": "743000",
    "end": "871000"
  },
  {
    "text": "so I mentioned that Unison removes",
    "start": "743399",
    "end": "745740"
  },
  {
    "text": "things that aren't delightful and I'll",
    "start": "745740",
    "end": "748620"
  },
  {
    "text": "start with what many people consider the",
    "start": "748620",
    "end": "750779"
  },
  {
    "text": "hardest thing in programming which is",
    "start": "750779",
    "end": "752760"
  },
  {
    "text": "naming things so names in unison don't",
    "start": "752760",
    "end": "755579"
  },
  {
    "text": "matter",
    "start": "755579",
    "end": "756480"
  },
  {
    "text": "like the",
    "start": "756480",
    "end": "757920"
  },
  {
    "text": "the uh",
    "start": "757920",
    "end": "759660"
  },
  {
    "text": "Stakes are very low when you're trying",
    "start": "759660",
    "end": "761760"
  },
  {
    "text": "to name something in unison because",
    "start": "761760",
    "end": "763880"
  },
  {
    "text": "renaming something is a trivial",
    "start": "763880",
    "end": "766139"
  },
  {
    "text": "non-breaking operation",
    "start": "766139",
    "end": "769079"
  },
  {
    "text": "so in a traditional programming language",
    "start": "769079",
    "end": "770779"
  },
  {
    "text": "definitions are always referenced by",
    "start": "770779",
    "end": "772680"
  },
  {
    "text": "name",
    "start": "772680",
    "end": "773639"
  },
  {
    "text": "and so if a name gets a new definition",
    "start": "773639",
    "end": "776660"
  },
  {
    "text": "you know you're dependencies may break",
    "start": "776660",
    "end": "779639"
  },
  {
    "text": "right because you know something may be",
    "start": "779639",
    "end": "782940"
  },
  {
    "text": "depending on a particular implementation",
    "start": "782940",
    "end": "784380"
  },
  {
    "text": "of that name",
    "start": "784380",
    "end": "785639"
  },
  {
    "text": "and then if a definition gets a new name",
    "start": "785639",
    "end": "788160"
  },
  {
    "text": "then dependency will definitely break",
    "start": "788160",
    "end": "789959"
  },
  {
    "text": "because they're expecting some code to",
    "start": "789959",
    "end": "791880"
  },
  {
    "text": "live at that name",
    "start": "791880",
    "end": "794639"
  },
  {
    "text": "but in unison definitions are always",
    "start": "794639",
    "end": "796380"
  },
  {
    "text": "referenced by hash",
    "start": "796380",
    "end": "798300"
  },
  {
    "text": "and so you know you can change the name",
    "start": "798300",
    "end": "801660"
  },
  {
    "text": "of some definition and everything will",
    "start": "801660",
    "end": "803459"
  },
  {
    "text": "be fine or you can reassign a name to a",
    "start": "803459",
    "end": "806040"
  },
  {
    "text": "different definition and everything will",
    "start": "806040",
    "end": "807300"
  },
  {
    "text": "still be fine",
    "start": "807300",
    "end": "808500"
  },
  {
    "text": "uh so nobody nobody's code breaks if you",
    "start": "808500",
    "end": "810660"
  },
  {
    "text": "rename stuff remove things around",
    "start": "810660",
    "end": "814339"
  },
  {
    "text": "and uh",
    "start": "814800",
    "end": "817320"
  },
  {
    "text": "you can sort of think of all Unison",
    "start": "817320",
    "end": "818940"
  },
  {
    "text": "types uh and functions as occupying the",
    "start": "818940",
    "end": "822779"
  },
  {
    "text": "sort of vast store",
    "start": "822779",
    "end": "824820"
  },
  {
    "text": "where every version of everything has a",
    "start": "824820",
    "end": "828120"
  },
  {
    "text": "unique and immutable address which is",
    "start": "828120",
    "end": "830639"
  },
  {
    "text": "the hash of its definition",
    "start": "830639",
    "end": "832620"
  },
  {
    "text": "and then the hash can have as many human",
    "start": "832620",
    "end": "835440"
  },
  {
    "text": "readable names as you want",
    "start": "835440",
    "end": "837959"
  },
  {
    "text": "and uh",
    "start": "837959",
    "end": "839779"
  },
  {
    "text": "hashes however allow us to communicate",
    "start": "839779",
    "end": "843079"
  },
  {
    "text": "unambiguously what code we mean",
    "start": "843079",
    "end": "846240"
  },
  {
    "text": "and we can communicate it across both",
    "start": "846240",
    "end": "848399"
  },
  {
    "text": "time and space",
    "start": "848399",
    "end": "850440"
  },
  {
    "text": "because like the the hash of something",
    "start": "850440",
    "end": "852300"
  },
  {
    "text": "never changes",
    "start": "852300",
    "end": "853920"
  },
  {
    "text": "in a given hash always refers to a",
    "start": "853920",
    "end": "855839"
  },
  {
    "text": "specific unique Unison object even",
    "start": "855839",
    "end": "858660"
  },
  {
    "text": "across memory boundaries across uh",
    "start": "858660",
    "end": "861959"
  },
  {
    "text": "revisions uh and versions",
    "start": "861959",
    "end": "865160"
  },
  {
    "text": "uh whether that's on disk or in memory",
    "start": "865160",
    "end": "867959"
  },
  {
    "text": "or over the network",
    "start": "867959",
    "end": "870740"
  },
  {
    "start": "871000",
    "end": "1015000"
  },
  {
    "text": "another thing that we got rid of in",
    "start": "871320",
    "end": "873779"
  },
  {
    "text": "unison his builds so Unison doesn't have",
    "start": "873779",
    "end": "876300"
  },
  {
    "text": "any builds because you know",
    "start": "876300",
    "end": "878700"
  },
  {
    "text": "nobody likes builds",
    "start": "878700",
    "end": "880800"
  },
  {
    "text": "uh",
    "start": "880800",
    "end": "881940"
  },
  {
    "text": "and there's some traditional programming",
    "start": "881940",
    "end": "883380"
  },
  {
    "text": "language",
    "start": "883380",
    "end": "884639"
  },
  {
    "text": "uh you have bills so why why do you have",
    "start": "884639",
    "end": "887279"
  },
  {
    "text": "builds what is a build really",
    "start": "887279",
    "end": "890639"
  },
  {
    "text": "so what a build does it does many things",
    "start": "890639",
    "end": "892680"
  },
  {
    "text": "but mainly it ensures that your code can",
    "start": "892680",
    "end": "896760"
  },
  {
    "text": "address other code that is that it knows",
    "start": "896760",
    "end": "900000"
  },
  {
    "text": "where all the code it needs",
    "start": "900000",
    "end": "901880"
  },
  {
    "text": "Eclipse where it exists",
    "start": "901880",
    "end": "904079"
  },
  {
    "text": "whether that's in memory or on disk you",
    "start": "904079",
    "end": "907500"
  },
  {
    "text": "know it links stuff together",
    "start": "907500",
    "end": "909480"
  },
  {
    "text": "and it also makes sure that names refer",
    "start": "909480",
    "end": "913079"
  },
  {
    "text": "to the correct versions right you may",
    "start": "913079",
    "end": "914760"
  },
  {
    "text": "have some kind of dependency management",
    "start": "914760",
    "end": "915959"
  },
  {
    "text": "going on in your build making sure that",
    "start": "915959",
    "end": "918660"
  },
  {
    "text": "everything lines up that everybody",
    "start": "918660",
    "end": "919980"
  },
  {
    "text": "agrees on the versions of things",
    "start": "919980",
    "end": "923279"
  },
  {
    "text": "and uh in a typed language then",
    "start": "923279",
    "end": "926519"
  },
  {
    "text": "your build will type check everything",
    "start": "926519",
    "end": "927959"
  },
  {
    "text": "and if you have tests and you know I'm",
    "start": "927959",
    "end": "931199"
  },
  {
    "text": "sure you do",
    "start": "931199",
    "end": "932660"
  },
  {
    "text": "you'll your Builder will run and",
    "start": "932660",
    "end": "934860"
  },
  {
    "text": "everything right you'll run all your",
    "start": "934860",
    "end": "936540"
  },
  {
    "text": "tests and generally it will run all the",
    "start": "936540",
    "end": "938339"
  },
  {
    "text": "tests every single time you build",
    "start": "938339",
    "end": "940680"
  },
  {
    "text": "so in unison we just don't have builds",
    "start": "940680",
    "end": "943560"
  },
  {
    "text": "everything is referenced by hash and you",
    "start": "943560",
    "end": "947100"
  },
  {
    "text": "know hashes are address addresses into",
    "start": "947100",
    "end": "949139"
  },
  {
    "text": "this Global Eternal address space",
    "start": "949139",
    "end": "952079"
  },
  {
    "text": "and so then there's no",
    "start": "952079",
    "end": "953940"
  },
  {
    "text": "um ambiguity ever about what",
    "start": "953940",
    "end": "956760"
  },
  {
    "text": "you know what you mean by a hash and uh",
    "start": "956760",
    "end": "959399"
  },
  {
    "text": "there's never this problem of like where",
    "start": "959399",
    "end": "961920"
  },
  {
    "text": "is the code",
    "start": "961920",
    "end": "963360"
  },
  {
    "text": "because like it lives at the hash",
    "start": "963360",
    "end": "965720"
  },
  {
    "text": "and a hash is always the corrective",
    "start": "965720",
    "end": "968519"
  },
  {
    "text": "version so there's no uh sort of version",
    "start": "968519",
    "end": "972079"
  },
  {
    "text": "alignment that has to go on",
    "start": "972079",
    "end": "975860"
  },
  {
    "text": "and",
    "start": "976079",
    "end": "977760"
  },
  {
    "text": "also when the tests for a given hash",
    "start": "977760",
    "end": "980579"
  },
  {
    "text": "have been run",
    "start": "980579",
    "end": "982019"
  },
  {
    "text": "uh and when something has been tight",
    "start": "982019",
    "end": "984360"
  },
  {
    "text": "checked it only needs to be typed once",
    "start": "984360",
    "end": "986579"
  },
  {
    "text": "and then",
    "start": "986579",
    "end": "988380"
  },
  {
    "text": "when the tests per hash have run you",
    "start": "988380",
    "end": "990899"
  },
  {
    "text": "don't have to run them again because you",
    "start": "990899",
    "end": "992880"
  },
  {
    "text": "know you've tested this hash",
    "start": "992880",
    "end": "994560"
  },
  {
    "text": "with those tests and in fact nobody ever",
    "start": "994560",
    "end": "998040"
  },
  {
    "text": "has to run those tests again",
    "start": "998040",
    "end": "999600"
  },
  {
    "text": "and in fact if you're you know like a",
    "start": "999600",
    "end": "1002060"
  },
  {
    "text": "blockchain fan you could like put proof",
    "start": "1002060",
    "end": "1005660"
  },
  {
    "text": "on chain of the fact that you've run",
    "start": "1005660",
    "end": "1008240"
  },
  {
    "text": "this test on this hash and then it's",
    "start": "1008240",
    "end": "1010759"
  },
  {
    "text": "tested forever",
    "start": "1010759",
    "end": "1013779"
  },
  {
    "text": "okay",
    "start": "1014899",
    "end": "1016339"
  },
  {
    "start": "1015000",
    "end": "1139000"
  },
  {
    "text": "we also got rid of dependency conflicts",
    "start": "1016339",
    "end": "1021500"
  },
  {
    "text": "so",
    "start": "1023720",
    "end": "1025040"
  },
  {
    "text": "what is the dependency conflict really",
    "start": "1025040",
    "end": "1026480"
  },
  {
    "text": "so in a traditional programming language",
    "start": "1026480",
    "end": "1029240"
  },
  {
    "text": "dependencies are build artifacts",
    "start": "1029240",
    "end": "1032540"
  },
  {
    "text": "and so they're generally referenced by",
    "start": "1032540",
    "end": "1034339"
  },
  {
    "text": "like the language version and the",
    "start": "1034339",
    "end": "1036678"
  },
  {
    "text": "package name and the version",
    "start": "1036679",
    "end": "1038959"
  },
  {
    "text": "uh sort of names right and they're very",
    "start": "1038959",
    "end": "1041480"
  },
  {
    "text": "sort of coarsely grained",
    "start": "1041480",
    "end": "1043579"
  },
  {
    "text": "and different versions of things can't",
    "start": "1043579",
    "end": "1045798"
  },
  {
    "text": "really coexist in your build",
    "start": "1045799",
    "end": "1048799"
  },
  {
    "text": "uh because names are sort of taken right",
    "start": "1048799",
    "end": "1053000"
  },
  {
    "text": "and then",
    "start": "1053000",
    "end": "1054320"
  },
  {
    "text": "uh you get a dependency conflict when",
    "start": "1054320",
    "end": "1057020"
  },
  {
    "text": "you have like a library a or a package a",
    "start": "1057020",
    "end": "1059299"
  },
  {
    "text": "and a package B and they both use",
    "start": "1059299",
    "end": "1060980"
  },
  {
    "text": "Package C",
    "start": "1060980",
    "end": "1062240"
  },
  {
    "text": "But A and B evolve separately and like",
    "start": "1062240",
    "end": "1065780"
  },
  {
    "text": "sometimes uh B will want a different",
    "start": "1065780",
    "end": "1068720"
  },
  {
    "text": "version of C than a does",
    "start": "1068720",
    "end": "1071539"
  },
  {
    "text": "and so adding a dependency to your to",
    "start": "1071539",
    "end": "1076160"
  },
  {
    "text": "your code",
    "start": "1076160",
    "end": "1077419"
  },
  {
    "text": "is kind of a big deal because you get",
    "start": "1077419",
    "end": "1079520"
  },
  {
    "text": "all these transitive dependencies and",
    "start": "1079520",
    "end": "1081740"
  },
  {
    "text": "every transitive dependency that you",
    "start": "1081740",
    "end": "1083179"
  },
  {
    "text": "have is a potential for uh a version",
    "start": "1083179",
    "end": "1085340"
  },
  {
    "text": "conflict",
    "start": "1085340",
    "end": "1087320"
  },
  {
    "text": "now in unison",
    "start": "1087320",
    "end": "1089600"
  },
  {
    "text": "dependencies are as finely greened as",
    "start": "1089600",
    "end": "1092480"
  },
  {
    "text": "possible you can depend on the hashes of",
    "start": "1092480",
    "end": "1095720"
  },
  {
    "text": "individual definitions so you can depend",
    "start": "1095720",
    "end": "1098360"
  },
  {
    "text": "on just a single function from a library",
    "start": "1098360",
    "end": "1101299"
  },
  {
    "text": "and you can depend on different versions",
    "start": "1101299",
    "end": "1103700"
  },
  {
    "text": "of the same type",
    "start": "1103700",
    "end": "1106220"
  },
  {
    "text": "because they have different hashes then",
    "start": "1106220",
    "end": "1109760"
  },
  {
    "text": "they're really as far as Unison is",
    "start": "1109760",
    "end": "1112220"
  },
  {
    "text": "concerned they're different types and so",
    "start": "1112220",
    "end": "1115340"
  },
  {
    "text": "if you try to pass one off as a",
    "start": "1115340",
    "end": "1119600"
  },
  {
    "text": "the other you'll just get an ordinary",
    "start": "1119600",
    "end": "1121520"
  },
  {
    "text": "type error",
    "start": "1121520",
    "end": "1123740"
  },
  {
    "text": "so we you know we've gotten rid of",
    "start": "1123740",
    "end": "1126679"
  },
  {
    "text": "dependency conflicts and kind of",
    "start": "1126679",
    "end": "1128000"
  },
  {
    "text": "replaced them with type errors",
    "start": "1128000",
    "end": "1130700"
  },
  {
    "text": "but enough as find the grand way as",
    "start": "1130700",
    "end": "1132860"
  },
  {
    "text": "possible",
    "start": "1132860",
    "end": "1135220"
  }
]