[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "thanks everyone for joining this session uh and uh again very uh nice to see you in person uh at gokon again in Chicago",
    "start": "13960",
    "end": "23199"
  },
  {
    "text": "so uh my name is kasun induri uh a brief introduction about myself uh I've been",
    "start": "23199",
    "end": "28800"
  },
  {
    "text": "working as a Senor product manager at Microsoft uh primarily focusing on uh",
    "start": "28800",
    "end": "34079"
  },
  {
    "text": "data streaming and event streaming uh side of the things and also previously I",
    "start": "34079",
    "end": "39280"
  },
  {
    "text": "have been uh mostly involved in uh building event streaming platforms as well as Enterprise Integration platforms",
    "start": "39280",
    "end": "46320"
  },
  {
    "text": "so in the process I authored couple of books related to uh Cloud native design patterns uh grpc uh and",
    "start": "46320",
    "end": "54960"
  },
  {
    "text": "microservices so without any further Ado let's get started with today's session",
    "start": "54960",
    "end": "61440"
  },
  {
    "start": "57000",
    "end": "138000"
  },
  {
    "text": "uh Cloud building Cloud native event streaming applications right so uh basically in this session I'll be",
    "start": "61440",
    "end": "67960"
  },
  {
    "text": "focusing on uh some of the key design principles uh that you might have to",
    "start": "67960",
    "end": "73840"
  },
  {
    "text": "follow when building EV streaming applications and uh we'll look at the",
    "start": "73840",
    "end": "79080"
  },
  {
    "text": "key aspects of uh bringing or migrating your existing event streaming",
    "start": "79080",
    "end": "84159"
  },
  {
    "text": "application to the cloud so that you can leverage Cloud native event streaming uh Services out there",
    "start": "84159",
    "end": "91799"
  },
  {
    "text": "so a quick agenda of the session uh we will first look at why event streaming",
    "start": "91799",
    "end": "97640"
  },
  {
    "text": "is important uh why you really need to use event streaming EV streaming Technologies and then how you can",
    "start": "97640",
    "end": "104240"
  },
  {
    "text": "transform those uh Technologies to Cloud native event streaming platforms as well as we'll take a closer",
    "start": "104240",
    "end": "111799"
  },
  {
    "text": "look at some of the key pillars of an event streaming platform and uh how you have to choose existing event streaming",
    "start": "111799",
    "end": "118880"
  },
  {
    "text": "platforms out there and key considerations for doing that and also as an implementation uh uh use case I'll",
    "start": "118880",
    "end": "127159"
  },
  {
    "text": "be talking about or going through some of the aspects that we follow at asure",
    "start": "127159",
    "end": "132840"
  },
  {
    "text": "uh when building our event streaming uh services and",
    "start": "132840",
    "end": "137799"
  },
  {
    "text": "platforms all right so uh a quick show of hands how many of you are us",
    "start": "137879",
    "end": "143560"
  },
  {
    "start": "138000",
    "end": "253000"
  },
  {
    "text": "currently using event streaming platforms like Kafka uh kenes asure yeah",
    "start": "143560",
    "end": "149920"
  },
  {
    "text": "yeah it's pretty much yeah probably 80% of you right yes it's pretty cool I've",
    "start": "149920",
    "end": "155080"
  },
  {
    "text": "seen like most of the modern Enterprise architecture diagrams as some part of uh",
    "start": "155080",
    "end": "160879"
  },
  {
    "text": "event streaming uh Solutions like Kafka right so that's very cool to see now uh",
    "start": "160879",
    "end": "167200"
  },
  {
    "text": "if you look at the business use cases for event streaming right so we are building multiple uh software",
    "start": "167200",
    "end": "173680"
  },
  {
    "text": "applications as part of to to realize our business use cases right and uh as",
    "start": "173680",
    "end": "180400"
  },
  {
    "text": "part of these applications uh most of these applications generate very large",
    "start": "180400",
    "end": "185640"
  },
  {
    "text": "volume of events right and and also any any business use case needs to deal with",
    "start": "185640",
    "end": "192599"
  },
  {
    "text": "multiple events uh event sources and as part of the business uh what you have to",
    "start": "192599",
    "end": "198239"
  },
  {
    "text": "do is you have to collect uh all these different events store them and process",
    "start": "198239",
    "end": "204920"
  },
  {
    "text": "them to generate business insights so there are multiple use cases related to",
    "start": "204920",
    "end": "209959"
  },
  {
    "text": "event streaming such as uh analyzing or collecting web click streams analyzing",
    "start": "209959",
    "end": "216080"
  },
  {
    "text": "financial data coming in and uh detecting any anomalies or frauds as",
    "start": "216080",
    "end": "221879"
  },
  {
    "text": "well as you have multiple applications you build right so if you are especially when you are building microservices",
    "start": "221879",
    "end": "227680"
  },
  {
    "text": "application you need to collect all the different logs that are coming from multiple microservices and then analy",
    "start": "227680",
    "end": "234040"
  },
  {
    "text": "and generate Insight out of that so likewise there are multiple use cases related to building event streaming and",
    "start": "234040",
    "end": "242360"
  },
  {
    "text": "uh therefore uh it's becoming one of the most uh important aspect of modern",
    "start": "242360",
    "end": "247439"
  },
  {
    "text": "Enterprise architecture so uh and along with that let's take a closer",
    "start": "247439",
    "end": "254920"
  },
  {
    "start": "253000",
    "end": "547000"
  },
  {
    "text": "look at what event streaming is so uh at very abstract level an event",
    "start": "254920",
    "end": "262280"
  },
  {
    "text": "is a fact that something has happened right so for example uh in the case of a",
    "start": "262280",
    "end": "269039"
  },
  {
    "text": "web clickstream an analytics solution uh when a given user clicks on a particular",
    "start": "269039",
    "end": "274960"
  },
  {
    "text": "product of your retail application for example that's an event right so usually event streaming applications uh don't",
    "start": "274960",
    "end": "282520"
  },
  {
    "text": "get really much use of having discrete set of events but these events need to",
    "start": "282520",
    "end": "288360"
  },
  {
    "text": "be related to generate some business Insight out out of that right so for",
    "start": "288360",
    "end": "293840"
  },
  {
    "text": "example again using the same example right so uh if this particular user has",
    "start": "293840",
    "end": "299039"
  },
  {
    "text": "click on this product but before that he or she went through several other",
    "start": "299039",
    "end": "305080"
  },
  {
    "text": "interactions with your application or website so therefore that is where event",
    "start": "305080",
    "end": "310639"
  },
  {
    "text": "streaming uh or event stream uh comes into the picture so event stream is a",
    "start": "310639",
    "end": "316120"
  },
  {
    "text": "collection of or a sequence of related events uh that are ingested in a",
    "start": "316120",
    "end": "323600"
  },
  {
    "text": "sequential way and in order to generate insights out of that you need to process",
    "start": "323600",
    "end": "329639"
  },
  {
    "text": "the entire event stream not just one event so that is where we Define event",
    "start": "329639",
    "end": "334840"
  },
  {
    "text": "streams and as part of the solutions that we build like uh uh even streaming",
    "start": "334840",
    "end": "341199"
  },
  {
    "text": "platforms using Kafka or any other cloud services you have the inje part storing",
    "start": "341199",
    "end": "347240"
  },
  {
    "text": "part and the processing part now that is where we Define the terminology for an",
    "start": "347240",
    "end": "354400"
  },
  {
    "text": "event streaming platform as you can see in this diagram there are multiple fa of",
    "start": "354400",
    "end": "360440"
  },
  {
    "text": "uh event streaming platform right so obviously you have the uh source of the",
    "start": "360440",
    "end": "365960"
  },
  {
    "text": "event stream which is the trigger so there are multiple sources as you can see on your left there are different",
    "start": "365960",
    "end": "373319"
  },
  {
    "text": "event sources uh event streaming data coming from iot devices uh user",
    "start": "373319",
    "end": "378800"
  },
  {
    "text": "interaction with your websites website and so on and then you need an uh event",
    "start": "378800",
    "end": "384960"
  },
  {
    "text": "inje and storing layer so in the context of assure we have have assure event hubs",
    "start": "384960",
    "end": "391360"
  },
  {
    "text": "which is acting as sort of a central service that can collect all the different data coming from uh multiple",
    "start": "391360",
    "end": "398319"
  },
  {
    "text": "protocols like Kafka amqp and so on and so that that is acting as the event",
    "start": "398319",
    "end": "404479"
  },
  {
    "text": "injection layer as well as storing layer so you ingest and store events then on",
    "start": "404479",
    "end": "410639"
  },
  {
    "text": "top of the same data that you ingest you can build different processing Logics so",
    "start": "410639",
    "end": "416240"
  },
  {
    "text": "uh depending on the use case you might have to do real time manal analytics right uh so you need to process the",
    "start": "416240",
    "end": "422400"
  },
  {
    "text": "events in real time and generate business insights right away as well as",
    "start": "422400",
    "end": "427639"
  },
  {
    "text": "you can do near realtime analytics so that is where you do uh sort of data exploring uh data analytics uh not",
    "start": "427639",
    "end": "435879"
  },
  {
    "text": "necessarily real time but probably near real time and at the same time uh you don't",
    "start": "435879",
    "end": "442199"
  },
  {
    "text": "really have to use a processing technology per se you can basically",
    "start": "442199",
    "end": "447400"
  },
  {
    "text": "based your microservices applic on top of the data that you inest to",
    "start": "447400",
    "end": "452720"
  },
  {
    "text": "Kafka or any other event streaming application and build your Kafka application on top of the event streams",
    "start": "452720",
    "end": "460000"
  },
  {
    "text": "that you just ingest similarly you can do batch analytics especially with spark uh you",
    "start": "460000",
    "end": "467520"
  },
  {
    "text": "can do uh like data that you store in Kafka can be processed in badges or",
    "start": "467520",
    "end": "473280"
  },
  {
    "text": "again uh spark has spark structured streams to process them real time as",
    "start": "473280",
    "end": "478319"
  },
  {
    "text": "well and uh one aspect of event stream is uh uh in most event streaming event",
    "start": "478319",
    "end": "485520"
  },
  {
    "text": "inje Solutions you retain data for a limited period of time it can range from",
    "start": "485520",
    "end": "491240"
  },
  {
    "text": "few days to probably few months but after that uh often those dat data",
    "start": "491240",
    "end": "498440"
  },
  {
    "text": "become uh stale but if you want to rain data for a long time to generate more uh",
    "start": "498440",
    "end": "505120"
  },
  {
    "text": "batch like analytics workloads then you can store dat dat in uh storage Services",
    "start": "505120",
    "end": "511759"
  },
  {
    "text": "uh in the form of uh formats such as AO p and so",
    "start": "511759",
    "end": "517919"
  },
  {
    "text": "on now uh so these are the key aspects of end to end event streaming",
    "start": "517919",
    "end": "523919"
  },
  {
    "text": "architecture uh so you can apply this uh this is a common pattern that you can",
    "start": "523920",
    "end": "529240"
  },
  {
    "text": "Implement with any uh solution out there so you can use Kafka on Prem Kafka and",
    "start": "529240",
    "end": "534760"
  },
  {
    "text": "then you can have your own microservices application processing them as well as as you can implement the same thing with",
    "start": "534760",
    "end": "541320"
  },
  {
    "text": "pretty much with any cloud services uh that you're",
    "start": "541320",
    "end": "545800"
  },
  {
    "text": "using now uh our topic is all about Cloud native event streaming right so",
    "start": "546880",
    "end": "553480"
  },
  {
    "start": "547000",
    "end": "721000"
  },
  {
    "text": "let's take a closer look at what uh what are the key aspects of uh Cloud native",
    "start": "553480",
    "end": "558519"
  },
  {
    "text": "EV streaming Cloud native is sort of an overloaded term so I'm not going to sort",
    "start": "558519",
    "end": "564000"
  },
  {
    "text": "of give my own definition of cloud native but rather let's look at some of the",
    "start": "564000",
    "end": "569839"
  },
  {
    "text": "bottlenecks some of the limitations that we uh often see with existing event streaming Solutions or event streaming",
    "start": "569839",
    "end": "577480"
  },
  {
    "text": "Brokers now uh how many of of you are currently running Kafka uh on Prem or or",
    "start": "577480",
    "end": "584519"
  },
  {
    "text": "managing kka Kafka clusters all right I can see a few few",
    "start": "584519",
    "end": "590240"
  },
  {
    "text": "people uh quite a few people are using Kafka and managing uh it by yourself so",
    "start": "590240",
    "end": "596279"
  },
  {
    "text": "uh I think all these limitations uh I think most of if you're familiar with these things like the operation overhead",
    "start": "596279",
    "end": "603120"
  },
  {
    "text": "uh starting from setting up a cluster managing them uh managing zookeeper or k",
    "start": "603120",
    "end": "610519"
  },
  {
    "text": "or whatever so it'll be an uh sort of a daunting task and when it comes to scale",
    "start": "610519",
    "end": "616760"
  },
  {
    "text": "if you want to uh add no more broken Nots it's again uh you need to go",
    "start": "616760",
    "end": "622560"
  },
  {
    "text": "through a complex uh process as well as uh most organizations that we interact",
    "start": "622560",
    "end": "629320"
  },
  {
    "text": "with they do have separate Kafka team a separate team just to manage your Kafka",
    "start": "629320",
    "end": "634800"
  },
  {
    "text": "cluster right they're not doing anything else but just manage and tune their kafa clusters which is again a lot of work",
    "start": "634800",
    "end": "642600"
  },
  {
    "text": "and uh also how you are going to achieve things such as high",
    "start": "642600",
    "end": "648399"
  },
  {
    "text": "availability uh make sure your kafa clusters is U uh resilient for different",
    "start": "648399",
    "end": "656160"
  },
  {
    "text": "disasters right that's that's another major challenge so uh having uh uh all these uh",
    "start": "656160",
    "end": "665639"
  },
  {
    "text": "drawbacks uh as part of our on-prem or managed uh event streaming Solutions uh",
    "start": "665639",
    "end": "672480"
  },
  {
    "text": "that is where we need to take a closer look at how we can make these systems Cloud",
    "start": "672480",
    "end": "678519"
  },
  {
    "text": "native now uh this is uh I sort of came up with a definition for cloud native",
    "start": "678519",
    "end": "684360"
  },
  {
    "text": "event stream uh event streaming platform so it's a fully man age event streaming",
    "start": "684360",
    "end": "690200"
  },
  {
    "text": "platform that is composable uh you can have multiple components like inje processing and uh",
    "start": "690200",
    "end": "698320"
  },
  {
    "text": "uh modeling and serving layers as well as scalable High performant resilient",
    "start": "698320",
    "end": "705320"
  },
  {
    "text": "High uh as well as observable so you have the whole event streaming platform",
    "start": "705320",
    "end": "710560"
  },
  {
    "text": "as a as a service offered to you and you have all these characteristics available",
    "start": "710560",
    "end": "716600"
  },
  {
    "text": "as part of it now before I jump into the details of",
    "start": "716600",
    "end": "722399"
  },
  {
    "start": "721000",
    "end": "1510000"
  },
  {
    "text": "a cloud native uh event streaming uh characteristics let's take a closer look",
    "start": "722399",
    "end": "728279"
  },
  {
    "text": "at some of the key components of event inje so uh for the rest of the talk I'll",
    "start": "728279",
    "end": "734240"
  },
  {
    "text": "be mostly focusing on event inje side of the things like the C the role of Kafka",
    "start": "734240",
    "end": "740399"
  },
  {
    "text": "and other event Brokers has to play because uh that is probably the most important aspect of any event streaming",
    "start": "740399",
    "end": "747880"
  },
  {
    "text": "platform now I'm sure most of you are familiar with this concept but just to make sure that you we all are in the",
    "start": "747880",
    "end": "754920"
  },
  {
    "text": "same page I'll cover some of the key uh key Concepts so in any event ingestion",
    "start": "754920",
    "end": "760720"
  },
  {
    "text": "platform uh we have uh event Brokers producers and consumers so event broker",
    "start": "760720",
    "end": "766519"
  },
  {
    "text": "is the main event inje layer and all the producer applications",
    "start": "766519",
    "end": "772399"
  },
  {
    "text": "producing data to it and the consumers basically consume data from the event",
    "start": "772399",
    "end": "777839"
  },
  {
    "text": "streams usually events are organized into uh topics right so you can uh",
    "start": "777839",
    "end": "785320"
  },
  {
    "text": "directly map a topic to a business context so for example if you are building a retail application you can",
    "start": "785320",
    "end": "791760"
  },
  {
    "text": "have a topic for process orders basically you ingest all the order",
    "start": "791760",
    "end": "796959"
  },
  {
    "text": "related data to that topic and uh most of these platforms use",
    "start": "796959",
    "end": "803800"
  },
  {
    "text": "partition consumer model where you basically partition your uh topic into",
    "start": "803800",
    "end": "810079"
  },
  {
    "text": "multiple partitions or shrouds so that you can paralyze the processing of the",
    "start": "810079",
    "end": "816079"
  },
  {
    "text": "events that you ingest so you can think of partition as a way of scaling your",
    "start": "816079",
    "end": "821600"
  },
  {
    "text": "event streams uh similar to having multiple lens in in in in a free way",
    "start": "821600",
    "end": "827880"
  },
  {
    "text": "right so if you need more throughput you put more uh more partitions if you need to uh like less congestion in uh in a",
    "start": "827880",
    "end": "835959"
  },
  {
    "text": "freeway you put more Lanes right then you can have more vehicles is going uh in the freeway so similarly we use",
    "start": "835959",
    "end": "841959"
  },
  {
    "text": "partition consumer model and on the on the consumer side uh you can also",
    "start": "841959",
    "end": "848199"
  },
  {
    "text": "organize consumers into multiple consumer groups uh you can think of a",
    "start": "848199",
    "end": "853560"
  },
  {
    "text": "consumer group as an individual or independent application so each consumer",
    "start": "853560",
    "end": "859199"
  },
  {
    "text": "group can independently consume the same data set so U as we have seen previously",
    "start": "859199",
    "end": "866199"
  },
  {
    "text": "right so if you want to do real time uh event processing you can have a separate consumer group doing the realtime",
    "start": "866199",
    "end": "872560"
  },
  {
    "text": "processing at the same time if you want to do batch analy analytics then you can have another consumer group primarily",
    "start": "872560",
    "end": "879519"
  },
  {
    "text": "running on top of a spark processing the same data set now in the uh context of assure we",
    "start": "879519",
    "end": "887440"
  },
  {
    "text": "pretty much following the same uh architectural patterns similar to kofka uh AWS kenes uh and so on so we have",
    "start": "887440",
    "end": "896040"
  },
  {
    "text": "multiple topics and each topic has part itions and uh we have different uh",
    "start": "896040",
    "end": "901320"
  },
  {
    "text": "communication protocols incoming and",
    "start": "901320",
    "end": "905399"
  },
  {
    "text": "outgoing now with that uh let's look at some of the key pillars of a cloud uh n",
    "start": "906519",
    "end": "913000"
  },
  {
    "text": "uh Cloud native event ingestion service so basically uh I'll be going",
    "start": "913000",
    "end": "918800"
  },
  {
    "text": "through all these things uh these are more or less uh when diagnostic uh",
    "start": "918800",
    "end": "924000"
  },
  {
    "text": "aspects of a cloud native EV streaming platform but I'll use uh examples meure",
    "start": "924000",
    "end": "929319"
  },
  {
    "text": "as and when needed okay so let's start with",
    "start": "929319",
    "end": "934399"
  },
  {
    "text": "multitenant uh platform as a service with workload isolation right now when",
    "start": "934399",
    "end": "940160"
  },
  {
    "text": "you're moving your uh existing C application to the cloud a cloud service",
    "start": "940160",
    "end": "945680"
  },
  {
    "text": "or a platform as a service usually is multi-tenant right so uh if you're using",
    "start": "945680",
    "end": "951399"
  },
  {
    "text": "any uh any cloud service that is meant to be used by multiple tenants multiple",
    "start": "951399",
    "end": "956639"
  },
  {
    "text": "customers or multiple users therefore since we are running",
    "start": "956639",
    "end": "962160"
  },
  {
    "text": "multi-tenancy under the covers in all these Services uh there can be multiple requirements related to how your",
    "start": "962160",
    "end": "969519"
  },
  {
    "text": "workloads is handled Within These Solutions so there can be uh depending",
    "start": "969519",
    "end": "976079"
  },
  {
    "text": "on the use case right you may do you may you may experience cross tenant interference uh because this is a shared",
    "start": "976079",
    "end": "983360"
  },
  {
    "text": "environment that you're using but your workload needs to be uh resilient of any cross",
    "start": "983360",
    "end": "989120"
  },
  {
    "text": "interference crossant interference in the sense uh when when the same",
    "start": "989120",
    "end": "994279"
  },
  {
    "text": "resources being shared with multiple uh customers you may experience some uh",
    "start": "994279",
    "end": "1000319"
  },
  {
    "text": "glitches related to latency fluctuating latency and so on but there can be",
    "start": "1000319",
    "end": "1005480"
  },
  {
    "text": "workloads that uh that has uh latency requirements like uh 99 percentile of",
    "start": "1005480",
    "end": "1013399"
  },
  {
    "text": "latency needs to be below this point but if you're using this kind of a shared environment M you might face different",
    "start": "1013399",
    "end": "1021240"
  },
  {
    "text": "fluctuations so as part of the requirements uh when building these applications you need to have you need",
    "start": "1021240",
    "end": "1028600"
  },
  {
    "text": "to have the ability to choose the service depending on uh the SLA requirement of the business use",
    "start": "1028600",
    "end": "1036160"
  },
  {
    "text": "case and security is another aspect right so you are using a shared uh uh",
    "start": "1036160",
    "end": "1041720"
  },
  {
    "text": "infrastructure or sh platform as a service and your data that the data that",
    "start": "1041720",
    "end": "1047319"
  },
  {
    "text": "you ingest to these services are stored along with other other tenants and you",
    "start": "1047319",
    "end": "1052559"
  },
  {
    "text": "need to have secured uh both data at rest security as well as uh wire level",
    "start": "1052559",
    "end": "1059600"
  },
  {
    "text": "or protocol level uh security along with the pass and another requirement is even",
    "start": "1059600",
    "end": "1066760"
  },
  {
    "text": "within your organization right there can be multiple workflows that has different priorities so one of one of the",
    "start": "1066760",
    "end": "1073320"
  },
  {
    "text": "applications that you have may have like high latency requirement re Ms as high",
    "start": "1073320",
    "end": "1079799"
  },
  {
    "text": "priority latency requirements whereas other applications are more or less uh",
    "start": "1079799",
    "end": "1085760"
  },
  {
    "text": "uh more or less can uh live with the high latency and if you want to prioritize workloads within your",
    "start": "1085760",
    "end": "1092000"
  },
  {
    "text": "application or within your organization you need fine grain uh resource governance with uh all these event",
    "start": "1092000",
    "end": "1098320"
  },
  {
    "text": "streaming Solutions now when it comes to selecting uh this platform as a service",
    "start": "1098320",
    "end": "1105320"
  },
  {
    "text": "depending on the workload uh as part of asure we are offering uh product or skes",
    "start": "1105320",
    "end": "1113159"
  },
  {
    "text": "now these are the skes that that we are currently offering as part of the assure event hubs so the main analogy that we",
    "start": "1113159",
    "end": "1119960"
  },
  {
    "text": "are uh providing is uh it is similar to uh traveling in a Subway or a Metro",
    "start": "1119960",
    "end": "1127799"
  },
  {
    "text": "whereas uh that is sort of a standard ski is a shared environment it is similar to traveling in a Metro or a uh",
    "start": "1127799",
    "end": "1135559"
  },
  {
    "text": "Subway and premium is similar to you have uh you basically purchase reserved",
    "start": "1135559",
    "end": "1142320"
  },
  {
    "text": "seats you your position within the train is guaranteed and the dedicated is like",
    "start": "1142320",
    "end": "1148520"
  },
  {
    "text": "you completely rented the train or something right so you you you own the train you you have the uh all the",
    "start": "1148520",
    "end": "1155880"
  },
  {
    "text": "resources allocated to your uh clusters and the service Now with uh with the",
    "start": "1155880",
    "end": "1161440"
  },
  {
    "text": "standard skill it's a multi-tenant shared infrastructure so it is ideal for",
    "start": "1161440",
    "end": "1167600"
  },
  {
    "text": "uh majority of the production workload that does not does not have very high",
    "start": "1167600",
    "end": "1173919"
  },
  {
    "text": "Mission critical latency requirements uh because it is shared you may feel you",
    "start": "1173919",
    "end": "1179120"
  },
  {
    "text": "may you may experience different uh uh very high relatively High P99 values and",
    "start": "1179120",
    "end": "1186840"
  },
  {
    "text": "uh also with the premium if you need more consistency uh then premium might be the",
    "start": "1186840",
    "end": "1193440"
  },
  {
    "text": "best option because you have uh resource isolation at the tenant level",
    "start": "1193440",
    "end": "1198840"
  },
  {
    "text": "so when we are assigning resources we ensure that you have sufficient resources allocated and uh allocated",
    "start": "1198840",
    "end": "1205600"
  },
  {
    "text": "consistently throughout uh uh the service consumption dedicated clusters",
    "start": "1205600",
    "end": "1211080"
  },
  {
    "text": "or dedicated uh tier is commonly used for majority of the mission critical workloads and if you have very high",
    "start": "1211080",
    "end": "1218080"
  },
  {
    "text": "volume uh requirements as well as low latency requirements then we often",
    "start": "1218080",
    "end": "1223679"
  },
  {
    "text": "recommend dedicated clusters now this is within",
    "start": "1223679",
    "end": "1228799"
  },
  {
    "text": "uh like as a user you can select any of these tiers and uh build your workload",
    "start": "1228799",
    "end": "1234480"
  },
  {
    "text": "on top of these now suppose uh you are using one of these tiers but still",
    "start": "1234480",
    "end": "1241240"
  },
  {
    "text": "within that you need to implement uh fine grain uh Access Control yeah go",
    "start": "1241240",
    "end": "1248840"
  },
  {
    "text": "ahead these are specific to assure but I think this kind of tiers you can find",
    "start": "1251159",
    "end": "1257559"
  },
  {
    "text": "across all the other event streaming uh platforms as well so usually I think dedicated is quite common across all the",
    "start": "1257559",
    "end": "1265280"
  },
  {
    "text": "uh providers premium is something that we sort of recently introduced uh we",
    "start": "1265280",
    "end": "1270880"
  },
  {
    "text": "need something in between standard and dedicated uh primary for the cost uh",
    "start": "1270880",
    "end": "1276919"
  },
  {
    "text": "efficiency uh yeah it's it's quite common across other",
    "start": "1276919",
    "end": "1282039"
  },
  {
    "text": "vendors now within the same uh I would say organization or application you may",
    "start": "1282240",
    "end": "1288600"
  },
  {
    "text": "have different workload requirement right so suppose uh you have two client applications uh ingesting data uh to a",
    "start": "1288600",
    "end": "1297240"
  },
  {
    "text": "event streaming solution but you need to prioritize the data coming from one application then uh you can basically",
    "start": "1297240",
    "end": "1304600"
  },
  {
    "text": "Define uh throttling policy against the application uh ID so this is something",
    "start": "1304600",
    "end": "1312080"
  },
  {
    "text": "that probably unique to assure and assure event hubs so this level of",
    "start": "1312080",
    "end": "1317120"
  },
  {
    "text": "granularity and the throttling capabilities are not available even in the kaf ecosystem now uh with this you",
    "start": "1317120",
    "end": "1324679"
  },
  {
    "text": "can uh Define access policies uh like throttling policies as well as you can",
    "start": "1324679",
    "end": "1330440"
  },
  {
    "text": "completely cut off the traffic coming from a particular application ID and application ID directly related to the",
    "start": "1330440",
    "end": "1337760"
  },
  {
    "text": "security context of your application so suppose two applications are using two different tokens and uh that is so and",
    "start": "1337760",
    "end": "1346159"
  },
  {
    "text": "you can from the service level you can cut off the traffic froming from one particular token and uh allow the other",
    "start": "1346159",
    "end": "1352880"
  },
  {
    "text": "application to use your service now the important aspect of this is one service",
    "start": "1352880",
    "end": "1359200"
  },
  {
    "text": "or one application cannot really exhaust all the resources allocated to your uh",
    "start": "1359200",
    "end": "1364279"
  },
  {
    "text": "Kafka cluster for example right so you always prioritize the application that",
    "start": "1364279",
    "end": "1369360"
  },
  {
    "text": "needs priority all right",
    "start": "1369360",
    "end": "1374559"
  },
  {
    "text": "so then we can move on to our next uh pillar multi-protocol event",
    "start": "1374559",
    "end": "1381080"
  },
  {
    "text": "streaming so usually most of the event streaming Solutions out there so they",
    "start": "1381080",
    "end": "1387080"
  },
  {
    "text": "need to have the interoperability with the multiple source and Target systems",
    "start": "1387080",
    "end": "1392799"
  },
  {
    "text": "right so uh obviously if you're using Kafka and Kafka is probably the most",
    "start": "1392799",
    "end": "1399360"
  },
  {
    "text": "prominent protocol when it comes to event streaming but uh as part of an event streaming service we always",
    "start": "1399360",
    "end": "1406080"
  },
  {
    "text": "recommend to have select a service that has multiple protocol native support",
    "start": "1406080",
    "end": "1411679"
  },
  {
    "text": "like uh in in the context of aure hubs we have support for amqp Kafka uh https",
    "start": "1411679",
    "end": "1419080"
  },
  {
    "text": "and web sockets uh but uh if you're choosing a solution uh it's always good",
    "start": "1419080",
    "end": "1424880"
  },
  {
    "text": "to mix and match these protocols because there are solutions that are because there are so many cka libraries out",
    "start": "1424880",
    "end": "1430480"
  },
  {
    "text": "there and there are so many c car producers and consumers that you can use the service with as well as uh uh some",
    "start": "1430480",
    "end": "1438520"
  },
  {
    "text": "protocols like amqp are more suitable to handle very large volume of event",
    "start": "1438520",
    "end": "1445039"
  },
  {
    "text": "streams compared to K so therefore uh we recommend to use these different protocols along with that we also need",
    "start": "1445039",
    "end": "1452400"
  },
  {
    "text": "support for multiple sources and syns that is where things such as Kafka",
    "start": "1452400",
    "end": "1457480"
  },
  {
    "text": "connect uh comes into the fixure right so with Kafka connect uh still you can",
    "start": "1457480",
    "end": "1462919"
  },
  {
    "text": "use uh data coming from multiple systems and sources and things and integrate uh",
    "start": "1462919",
    "end": "1469080"
  },
  {
    "text": "without writing custom code to your event streaming uh event inje",
    "start": "1469080",
    "end": "1475200"
  },
  {
    "text": "engine and uh also as part of this we recommend mixing and matching these",
    "start": "1475200",
    "end": "1481720"
  },
  {
    "text": "protocols your incoming protocol can be Kafka your consumer protocol can be amqp",
    "start": "1481720",
    "end": "1488000"
  },
  {
    "text": "so as part of event hubs we have support for uh three native protocols capka mqp",
    "start": "1488000",
    "end": "1494320"
  },
  {
    "text": "and atps and uh consumer side we have support for Kafka and amqp and for any",
    "start": "1494320",
    "end": "1501559"
  },
  {
    "text": "different uh source and Target systems we have Kafka connect based connectivity as",
    "start": "1501559",
    "end": "1508600"
  },
  {
    "text": "well all right so now let's look at the next aspect of uh Cloud native event",
    "start": "1508679",
    "end": "1515840"
  },
  {
    "start": "1510000",
    "end": "2500000"
  },
  {
    "text": "streaming uh that is high performance event streaming so uh performance can be",
    "start": "1515840",
    "end": "1523000"
  },
  {
    "text": "uh defined in multiple ways uh in terms of the event streaming platforms right",
    "start": "1523000",
    "end": "1528600"
  },
  {
    "text": "so it can be uh ingestion throughput uh how quickly you can ingest data to a",
    "start": "1528600",
    "end": "1534360"
  },
  {
    "text": "event streaming service such as kka and uh so in in that context you would",
    "start": "1534360",
    "end": "1540559"
  },
  {
    "text": "primarily measure the latency of producing data and getting an acknowledgement from the producer",
    "start": "1540559",
    "end": "1546960"
  },
  {
    "text": "side uh but also you can also look at the end to end latency so from the",
    "start": "1546960",
    "end": "1552919"
  },
  {
    "text": "producer to all the way down to the consumer you can measure the Laten right",
    "start": "1552919",
    "end": "1557960"
  },
  {
    "text": "from the inje time to the consumption time you can measure the latency and that defines the end to endend latency",
    "start": "1557960",
    "end": "1565240"
  },
  {
    "text": "so usually with uh all these different Cloud native Solutions uh especially if",
    "start": "1565240",
    "end": "1571559"
  },
  {
    "text": "you have moved from on crem uh even streaming broker to to a cloud-based one",
    "start": "1571559",
    "end": "1577120"
  },
  {
    "text": "or a platform as a service performance can be an important aspect so you would",
    "start": "1577120",
    "end": "1582520"
  },
  {
    "text": "most probably expect the same performance as you had with on Prem with uh platform as a service solutions as",
    "start": "1582520",
    "end": "1589159"
  },
  {
    "text": "well so sort of there's sort of a misconception on you won't be able to achieve same performance with the",
    "start": "1589159",
    "end": "1596000"
  },
  {
    "text": "cloud-based op pass Solutions but uh most of the vendors in this space are",
    "start": "1596000",
    "end": "1601600"
  },
  {
    "text": "consistently improving their performance to match the same uh same or better",
    "start": "1601600",
    "end": "1607039"
  },
  {
    "text": "performance as with their on Prem system now in terms of uh measuring the",
    "start": "1607039",
    "end": "1613240"
  },
  {
    "text": "performance there are multiple uh Frameworks available one of the most",
    "start": "1613240",
    "end": "1618320"
  },
  {
    "text": "common ones uh one of the most popular Frameworks uh is uh open messaging",
    "start": "1618320",
    "end": "1624200"
  },
  {
    "text": "Benchmark uh it is similar to uh like benchmarking your restful service but in",
    "start": "1624200",
    "end": "1629919"
  },
  {
    "text": "this case we are benchmarking broker Solutions like Kafka Pulsa there are",
    "start": "1629919",
    "end": "1635039"
  },
  {
    "text": "multiple adapters available for different uh broker Solutions it's an open source uh Linux Foundation project",
    "start": "1635039",
    "end": "1641559"
  },
  {
    "text": "so we heavily use this framework to build our own uh performance benchmarks as well now now one advantage that you",
    "start": "1641559",
    "end": "1649320"
  },
  {
    "text": "get with Cloud native uh event streaming is that you don't really have to tune your clusters it is already been done by",
    "start": "1649320",
    "end": "1657440"
  },
  {
    "text": "the cloud provider so only thing that you need to sort of optimize is your client side parameters right so for",
    "start": "1657440",
    "end": "1665360"
  },
  {
    "text": "example if you're using kfka you can optimize your BGE size ling a",
    "start": "1665360",
    "end": "1672720"
  },
  {
    "text": "millisecond ling a millisecond interval as well as the ax that you use at the producer level so that is another",
    "start": "1672720",
    "end": "1680120"
  },
  {
    "text": "advantage that you get with these uh Pass based event streaming platforms now some of the uh latency",
    "start": "1680120",
    "end": "1688000"
  },
  {
    "text": "measurements that we did with as vent hubs we recently done uh we recently",
    "start": "1688000",
    "end": "1694080"
  },
  {
    "text": "introduced our premium skew as well as a new dedicated skew so with all these",
    "start": "1694080",
    "end": "1700039"
  },
  {
    "text": "Laten improve performance improvements U as you can see we have seen like less",
    "start": "1700039",
    "end": "1705320"
  },
  {
    "text": "than 10 millisecond of end lat from producer to Consumer and U also the",
    "start": "1705320",
    "end": "1712440"
  },
  {
    "text": "consistency uh the chart at the bottom you can see a comparison between a event hubs and another popular Cloud AF cloud",
    "start": "1712440",
    "end": "1720399"
  },
  {
    "text": "provider you can see the latency fluctuation for the same uh like a",
    "start": "1720399",
    "end": "1725600"
  },
  {
    "text": "similar cluster and also uh we had multiple customers",
    "start": "1725600",
    "end": "1731440"
  },
  {
    "text": "uh are using uh this service for Mission critical workloads and uh some of the",
    "start": "1731440",
    "end": "1737960"
  },
  {
    "text": "requirements were to have p999 below uh a certain level like uh 30",
    "start": "1737960",
    "end": "1746120"
  },
  {
    "text": "milliseconds in this case so with these new clusters we managed to achieve as you can see right average less than 10",
    "start": "1746120",
    "end": "1753919"
  },
  {
    "text": "millisecond P99 around 30 millisecond uh and if you're new to 99 percentile that",
    "start": "1753919",
    "end": "1760840"
  },
  {
    "text": "means uh 99% of your uh latency values are below 30 milliseconds",
    "start": "1760840",
    "end": "1767919"
  },
  {
    "text": "so that's an important measurement uh in any uh event streaming",
    "start": "1767919",
    "end": "1773679"
  },
  {
    "text": "platform so uh it's it's important to measure if if you are migrating from an",
    "start": "1773679",
    "end": "1779960"
  },
  {
    "text": "existing uh kka cluster to a uh cloud provider it's very important to measure",
    "start": "1779960",
    "end": "1786360"
  },
  {
    "text": "the latency as well as throughput and that's why benchmarking framework such",
    "start": "1786360",
    "end": "1792240"
  },
  {
    "text": "as open messaging Benchmark uh can come in uh really handy",
    "start": "1792240",
    "end": "1799320"
  },
  {
    "text": "all right so let's talk about uh High availability in Cloud native even streaming platforms so high availability",
    "start": "1799880",
    "end": "1807159"
  },
  {
    "text": "can come in uh different forms uh so U",
    "start": "1807159",
    "end": "1812840"
  },
  {
    "text": "I'm sure most of you are familiar with replicas in the context of Kafka right so in Kafka clusters you have replicas",
    "start": "1812840",
    "end": "1821000"
  },
  {
    "text": "same data being replicated across multiple broken nodes within one cluster",
    "start": "1821000",
    "end": "1826519"
  },
  {
    "text": "so ail in one of those nodes still can uh can resilient uh from data losses So",
    "start": "1826519",
    "end": "1834960"
  },
  {
    "text": "within one cluster that is what you can do and uh so as part of the event hubs",
    "start": "1834960",
    "end": "1840399"
  },
  {
    "text": "also we have something called f domains uh so each fa domain uh they have",
    "start": "1840399",
    "end": "1846559"
  },
  {
    "text": "they're resilient for rack failures uh Network failures and so on so that is",
    "start": "1846559",
    "end": "1851840"
  },
  {
    "text": "within one cluster but how about within the data center so one of the main",
    "start": "1851840",
    "end": "1857279"
  },
  {
    "text": "advantage that you get from all these pass Services uh that support event streaming you can enable availability",
    "start": "1857279",
    "end": "1865240"
  },
  {
    "text": "zones so availability zone is a uh you can think of it as a three different",
    "start": "1865240",
    "end": "1871519"
  },
  {
    "text": "data centers residing in one particular region like us Central Central has three",
    "start": "1871519",
    "end": "1878039"
  },
  {
    "text": "physically separated data centers and then they have uh independent completely",
    "start": "1878039",
    "end": "1884880"
  },
  {
    "text": "independent uh net net work uh Cooling and also independent power supply so one",
    "start": "1884880",
    "end": "1892919"
  },
  {
    "text": "failure of a data center still can keep your systems running right so that's why",
    "start": "1892919",
    "end": "1899320"
  },
  {
    "text": "we need to enable availability zones as part of the solution so in most cases",
    "start": "1899320",
    "end": "1905919"
  },
  {
    "text": "A's is uh uh it's not something that you have to specifically configure it's",
    "start": "1905919",
    "end": "1912120"
  },
  {
    "text": "built into the service and replication happens seamlessly as part of of the",
    "start": "1912120",
    "end": "1917399"
  },
  {
    "text": "application developer or administrator of these clusters you don't really have to do any manual operation you just",
    "start": "1917399",
    "end": "1923519"
  },
  {
    "text": "probably within uh single click you can just enable A's for your cluster and it will take care of it so if there's a",
    "start": "1923519",
    "end": "1930240"
  },
  {
    "text": "failure of a particular data center still you will have the same state preserved across at least two more data",
    "start": "1930240",
    "end": "1937000"
  },
  {
    "text": "centers and uh you can your application can seamlessly uh switch over from one",
    "start": "1937000",
    "end": "1943000"
  },
  {
    "text": "one data center to the other without doing any code change",
    "start": "1943000",
    "end": "1948880"
  },
  {
    "text": "now availability s only applicable for within one region right within one",
    "start": "1948880",
    "end": "1955559"
  },
  {
    "text": "within us Central you can have AES but how about if there is a region failure",
    "start": "1955559",
    "end": "1961399"
  },
  {
    "text": "so region failures are not it's very rare but there are even",
    "start": "1961399",
    "end": "1967320"
  },
  {
    "text": "couple of region failures across different Cloud providers so how you can",
    "start": "1967320",
    "end": "1973399"
  },
  {
    "text": "uh you need to be uh resilient of these uh region failures is is where you",
    "start": "1973399",
    "end": "1978720"
  },
  {
    "text": "implement multi- region uh Disaster Recovery now with this approach you buil",
    "start": "1978720",
    "end": "1986000"
  },
  {
    "text": "your system spanning across multiple regions so one uh event streaming",
    "start": "1986000",
    "end": "1991080"
  },
  {
    "text": "application or event streaming service reside in US Central and then you have another uh Dr region maybe Us West so",
    "start": "1991080",
    "end": "2000600"
  },
  {
    "text": "then you create a topology uh between us Central and US West and enable disaster",
    "start": "2000600",
    "end": "2006600"
  },
  {
    "text": "recovery now one of the main challenge with this approach is you even if you configure to",
    "start": "2006600",
    "end": "2012840"
  },
  {
    "text": "have it seamless there is a lag between due to the obvious reasons of having two",
    "start": "2012840",
    "end": "2018679"
  },
  {
    "text": "regions and latency of network communication between two regions",
    "start": "2018679",
    "end": "2023760"
  },
  {
    "text": "there's a lack so uh therefore you need to basically as part of the event streaming platform you need to replicate",
    "start": "2023760",
    "end": "2030639"
  },
  {
    "text": "multiple things you need you need to replicate uh all the data that you",
    "start": "2030639",
    "end": "2036159"
  },
  {
    "text": "ingest right all the event data as well as all the metadata the topics partitions consumer groups everything",
    "start": "2036159",
    "end": "2043480"
  },
  {
    "text": "needs to be replicated across these regions and uh also as part of the",
    "start": "2043480",
    "end": "2049079"
  },
  {
    "text": "consumers uh if you're coming from a Kafka background you are committing your Kafka offsets from the consumer side so",
    "start": "2049079",
    "end": "2056638"
  },
  {
    "text": "if you switch from one region to the other you need to start from where you left off at the consumer side so",
    "start": "2056639",
    "end": "2063520"
  },
  {
    "text": "replicating all these things are really challenging and also you have different",
    "start": "2063520",
    "end": "2069158"
  },
  {
    "text": "replication consistency consideration you can do synchronous replication which",
    "start": "2069159",
    "end": "2074720"
  },
  {
    "text": "means you inest data to your primary region and you need to have it available immediately in the secondary region as",
    "start": "2074720",
    "end": "2082158"
  },
  {
    "text": "well which will add additional latency to your producing operations or you can",
    "start": "2082159",
    "end": "2087240"
  },
  {
    "text": "choose to have async replication where you do synchronization uh offline",
    "start": "2087240",
    "end": "2093280"
  },
  {
    "text": "without impacting the producers now uh most of the cloud Sur",
    "start": "2093280",
    "end": "2100320"
  },
  {
    "text": "providers they do have some form of uh Dr options available uh most are",
    "start": "2100320",
    "end": "2106240"
  },
  {
    "text": "metadata currently most are based on metadata for uh data replication you",
    "start": "2106240",
    "end": "2111640"
  },
  {
    "text": "often need to use Solutions like mirror maker under the covers and you need to",
    "start": "2111640",
    "end": "2116680"
  },
  {
    "text": "implement those uh Technologies all right",
    "start": "2116680",
    "end": "2122720"
  },
  {
    "text": "so now let's take a closer look at uh scaling aspect of uh Cloud native event",
    "start": "2122720",
    "end": "2128640"
  },
  {
    "text": "streams now scaling is uh especially with event streaming uh scaling can be",
    "start": "2128640",
    "end": "2134480"
  },
  {
    "text": "uh pretty uh daunting task especially if you're building your on Prem uh uh event",
    "start": "2134480",
    "end": "2140079"
  },
  {
    "text": "streaming platforms you need to add more broken notes more resources to your clusters but if you're using cloud",
    "start": "2140079",
    "end": "2146040"
  },
  {
    "text": "service uh you can choose to have Dynamic scaling so depending on the data",
    "start": "2146040",
    "end": "2151359"
  },
  {
    "text": "coming in number of events or megabyte per second or number of events coming in you can uh have more resources allocated",
    "start": "2151359",
    "end": "2158400"
  },
  {
    "text": "to your cluster so basically you allocate scale units when you create",
    "start": "2158400",
    "end": "2163599"
  },
  {
    "text": "these pass uh resources and you can basically uh have things such as Auto",
    "start": "2163599",
    "end": "2169520"
  },
  {
    "text": "auto scaling for these resources now it can uh also done at the partition level",
    "start": "2169520",
    "end": "2176119"
  },
  {
    "text": "as I explained earlier so if you need to get more throughput out of your existing infrastructure without adding more",
    "start": "2176119",
    "end": "2183000"
  },
  {
    "text": "resources you can add more partition and and uh also uh you can",
    "start": "2183000",
    "end": "2189319"
  },
  {
    "text": "change the partition count primarily increase the partition count as needed without impacting the uh client",
    "start": "2189319",
    "end": "2196359"
  },
  {
    "text": "applications but Bringing Down the partition count is not something we recommend so scaling can be done like",
    "start": "2196359",
    "end": "2204680"
  },
  {
    "text": "you can do Dynamic scaling but then cost uh of event streaming uh can come into",
    "start": "2204680",
    "end": "2210440"
  },
  {
    "text": "the picture very soon so because we are dealing with very large volume of data",
    "start": "2210440",
    "end": "2216119"
  },
  {
    "text": "uh you need to be really concerned about the overall uh cost efficiency of your I",
    "start": "2216119",
    "end": "2222520"
  },
  {
    "text": "streaming Solutions so uh most of the event streaming Solutions uh they do",
    "start": "2222520",
    "end": "2228160"
  },
  {
    "text": "have multiple uh pricing model uh one can be based on the usage based on the",
    "start": "2228160",
    "end": "2234240"
  },
  {
    "text": "number of that you number of events that you ingest as well as number of bites that you ingest or consume uh so that is",
    "start": "2234240",
    "end": "2242359"
  },
  {
    "text": "usage based pricing or there can be capacity allocation B pricing so usage",
    "start": "2242359",
    "end": "2248359"
  },
  {
    "text": "based pricing can become really expensive if you are if you're ingesting very large volume of data so that is",
    "start": "2248359",
    "end": "2255440"
  },
  {
    "text": "where you need to switch to capacity allocated allocation based pricing where you allocate certain capacity for your",
    "start": "2255440",
    "end": "2262720"
  },
  {
    "text": "cluster and you are paying a fixed amount for that cluster but those clusters have very high U data volume uh",
    "start": "2262720",
    "end": "2272079"
  },
  {
    "text": "capabilities so it's very important to look at uh your workload and determine",
    "start": "2272079",
    "end": "2277720"
  },
  {
    "text": "what is the most suitable pricing grou so any cloud service uh as sure has uh",
    "start": "2277720",
    "end": "2284920"
  },
  {
    "text": "standard skew which is standard skill of event Hub which is usage based pricing",
    "start": "2284920",
    "end": "2290720"
  },
  {
    "text": "uh then premium and dedicated more of a uh capacity allocation B",
    "start": "2290720",
    "end": "2297960"
  },
  {
    "text": "pricing all right so one other aspect of cloud native event streaming is event",
    "start": "2298960",
    "end": "2305040"
  },
  {
    "text": "stream governance uh if you are coming from a microservices background I'm sure",
    "start": "2305040",
    "end": "2310240"
  },
  {
    "text": "you are familiar with uh service contracts right so you define service contract for your service your your uh",
    "start": "2310240",
    "end": "2317480"
  },
  {
    "text": "client applications adheres to that contract but how about using the same principle for event streams producers",
    "start": "2317480",
    "end": "2324480"
  },
  {
    "text": "and consumers how they adhere to a particular schema so that is where streaming uh stream governance uh uh",
    "start": "2324480",
    "end": "2332319"
  },
  {
    "text": "comes into the picture so with the schema registry Solutions you define a",
    "start": "2332319",
    "end": "2338200"
  },
  {
    "text": "central repository where you maintain all the schemas related to streams you can Define streams using",
    "start": "2338200",
    "end": "2345280"
  },
  {
    "text": "AO uh Json schema or protobuf and then from the consumer application Level you",
    "start": "2345280",
    "end": "2351800"
  },
  {
    "text": "consume this strea the schemas and ensure that the data that you produce",
    "start": "2351800",
    "end": "2357800"
  },
  {
    "text": "and consume are adhering to the schema another aspect of uh stream",
    "start": "2357800",
    "end": "2364800"
  },
  {
    "text": "governance can be the lineage uh as I showed you earlier there can be multiple",
    "start": "2364800",
    "end": "2370440"
  },
  {
    "text": "services and applications in a one event streaming pipeline from the producer to",
    "start": "2370440",
    "end": "2375760"
  },
  {
    "text": "the injection layer to the consumer you need to take a closer look at the lineage of data between all these system",
    "start": "2375760",
    "end": "2383160"
  },
  {
    "text": "and uh basically with stream lineage you can um double click on various aspect of",
    "start": "2383160",
    "end": "2389560"
  },
  {
    "text": "uh data streaming uh the flow of data and generate more insights uh as a",
    "start": "2389560",
    "end": "2395800"
  },
  {
    "text": "administrator of the event stream finally uh security uh data",
    "start": "2395800",
    "end": "2403440"
  },
  {
    "text": "addressed uh security uh so as I explained security is a major concern",
    "start": "2403440",
    "end": "2410000"
  },
  {
    "text": "when you are moving to a pass service you need to ensure that data that you ingest are secured when we store them we",
    "start": "2410000",
    "end": "2417599"
  },
  {
    "text": "usually uh Rec we usually encrypt using server manage uh certificate or server",
    "start": "2417599",
    "end": "2423560"
  },
  {
    "text": "manage keys but also you can provide your on key so that you can ensure that",
    "start": "2423560",
    "end": "2428960"
  },
  {
    "text": "nobody can touch us even the including the pass provider so you can provide your uh user manage or customer manage",
    "start": "2428960",
    "end": "2436119"
  },
  {
    "text": "keys to encrypt data at rest and data in motion usually control with v security",
    "start": "2436119",
    "end": "2442880"
  },
  {
    "text": "and TLS and uh also you can use uh things such as U network security components",
    "start": "2442880",
    "end": "2450359"
  },
  {
    "text": "especially if you exposing these uh pass services to to the public internet then",
    "start": "2450359",
    "end": "2455760"
  },
  {
    "text": "you can do IP filtering on top of these services and uh and if you don't want to",
    "start": "2455760",
    "end": "2461119"
  },
  {
    "text": "expose it to the public internet then you can create private endpoints uh",
    "start": "2461119",
    "end": "2466240"
  },
  {
    "text": "within your virtual Network you run your service only within that and bringing the service to your",
    "start": "2466240",
    "end": "2473599"
  },
  {
    "text": "network and the other aspect is RO back uh rback and manage identity Ro base",
    "start": "2473599",
    "end": "2480440"
  },
  {
    "text": "accus control so this is where you uh integrate all the event streaming",
    "start": "2480440",
    "end": "2485599"
  },
  {
    "text": "applications with a centralized uh identity provider such as assure active",
    "start": "2485599",
    "end": "2491119"
  },
  {
    "text": "directory to use manage identity when uh consuming and producing",
    "start": "2491119",
    "end": "2497760"
  },
  {
    "text": "data all right so I think uh I hope that gives you a good understanding about",
    "start": "2497760",
    "end": "2503920"
  },
  {
    "start": "2500000",
    "end": "2833000"
  },
  {
    "text": "some of the aspect that you need to consider When selecting an event streaming platform uh I'll take a closer",
    "start": "2503920",
    "end": "2510599"
  },
  {
    "text": "look at uh quick look at some of the aspects uh of events Ure event s under",
    "start": "2510599",
    "end": "2517240"
  },
  {
    "text": "the under the hood so I think I I covered I already covered some aspect of",
    "start": "2517240",
    "end": "2522520"
  },
  {
    "text": "it like uh I should went up this real time data streaming platform uh that",
    "start": "2522520",
    "end": "2528800"
  },
  {
    "text": "supports CFA mqp and https as communication protocols uh and you can",
    "start": "2528800",
    "end": "2535400"
  },
  {
    "text": "bring in any existing Comfort work CLS to aure event without doing any code change because it's fully compatible but",
    "start": "2535400",
    "end": "2543200"
  },
  {
    "text": "the most interesting aspect is the uh internal architecture of aure event hubs so we follow a three tier model uh where",
    "start": "2543200",
    "end": "2551640"
  },
  {
    "text": "we have Gateway back end and storage so Gateway is you can think of it as the",
    "start": "2551640",
    "end": "2557880"
  },
  {
    "text": "front door to your event streaming platform right so all the all the all the events that you ingest or consume",
    "start": "2557880",
    "end": "2565319"
  },
  {
    "text": "goes through the Gateway and Gateway as you can see there are multiple uh event",
    "start": "2565319",
    "end": "2570440"
  },
  {
    "text": "streaming protocols including kfka mqp https and so on so so Gateway is basically enforcing",
    "start": "2570440",
    "end": "2578720"
  },
  {
    "text": "all the security consideration this is where all the uh transport level",
    "start": "2578720",
    "end": "2584319"
  },
  {
    "text": "security is validated as well as any tokens that you are sending along with the request and also it's uh it's doing",
    "start": "2584319",
    "end": "2592359"
  },
  {
    "text": "protocol canonicalization right there there are multiple incoming protocols but beyond Gateway we are using mqp as",
    "start": "2592359",
    "end": "2600240"
  },
  {
    "text": "the internal protocol to communicate with Brokers so unlike Kafka with event",
    "start": "2600240",
    "end": "2606400"
  },
  {
    "text": "you get a single stable end point you don't really get uh like a brok end points you get a single stable end point",
    "start": "2606400",
    "end": "2613480"
  },
  {
    "text": "and Gateway will determine how to rout this request based on the partition ID",
    "start": "2613480",
    "end": "2618640"
  },
  {
    "text": "as well as the topic name and on the back end layer it's all",
    "start": "2618640",
    "end": "2624000"
  },
  {
    "text": "about uh how you run your topic partition right each topic partition uh",
    "start": "2624000",
    "end": "2630920"
  },
  {
    "text": "is assigned to a broken node and this is where you uh basically Implement",
    "start": "2630920",
    "end": "2637240"
  },
  {
    "text": "partitioning uh as well as storing data uh into a storage layer now uh with the",
    "start": "2637240",
    "end": "2644559"
  },
  {
    "text": "storage layer there are multiple ways that you store data uh so in aure we use two tier storage engine architecture",
    "start": "2644559",
    "end": "2651559"
  },
  {
    "text": "where we directly inest data to a local storage to achieve performance and then",
    "start": "2651559",
    "end": "2657559"
  },
  {
    "text": "later um with offline signalization we are adding data back to assure storage",
    "start": "2657559",
    "end": "2663160"
  },
  {
    "text": "service without impacting performance so under the covers we use uh virtual",
    "start": "2663160",
    "end": "2669800"
  },
  {
    "text": "machines uh we use a service called virtual machine uh scale sets where you",
    "start": "2669800",
    "end": "2676720"
  },
  {
    "text": "can uh manage a family of virtual machine and automatically scale up or down as needed",
    "start": "2676720",
    "end": "2685000"
  },
  {
    "text": "and uh on top of VM scale sets we are using uh assure service fabric which is",
    "start": "2685000",
    "end": "2693240"
  },
  {
    "text": "basically supporting all the lead election lead a look up process placement as well as managing all the",
    "start": "2693240",
    "end": "2700160"
  },
  {
    "text": "updates that goes as part of the service right so this is sort of a coordination engine uh zook keep sort of a zookeeper",
    "start": "2700160",
    "end": "2707760"
  },
  {
    "text": "like functionality uh that you would see with K Solutions so basically on top of",
    "start": "2707760",
    "end": "2714520"
  },
  {
    "text": "service fabric we manage all these different VMS and processes and that is where uh basically the Gateway and back",
    "start": "2714520",
    "end": "2722920"
  },
  {
    "text": "end nodes are implemented so service fabric is mented at both uh Gateway and",
    "start": "2722920",
    "end": "2728000"
  },
  {
    "text": "back end layers and each process uh uh so these process containers are not",
    "start": "2728000",
    "end": "2734599"
  },
  {
    "text": "necessarily Docker containers these are our own definition of a container running inside running on top of service",
    "start": "2734599",
    "end": "2742640"
  },
  {
    "text": "Fabric and uh when it comes to workload isolation so these processes can be",
    "start": "2742640",
    "end": "2749319"
  },
  {
    "text": "assigned to uh different uh basically you can assign resources specifically to",
    "start": "2749319",
    "end": "2755920"
  },
  {
    "text": "these processes so that you would have sufficient cuse and memory allocated all the time so even if there is a",
    "start": "2755920",
    "end": "2763319"
  },
  {
    "text": "contention for the resources we will make sure that you have sufficient CPU and memory allocated so you won't see",
    "start": "2763319",
    "end": "2770000"
  },
  {
    "text": "any performance fluctuation with uh that",
    "start": "2770000",
    "end": "2774880"
  },
  {
    "text": "allocation and uh finally with uh uh storage layer as I mentioned",
    "start": "2775040",
    "end": "2782200"
  },
  {
    "text": "earlier we are using concept of a local storage versus cloud storage so each",
    "start": "2782200",
    "end": "2788880"
  },
  {
    "text": "process that we run they contain a nvme based local storage which is very high",
    "start": "2788880",
    "end": "2795359"
  },
  {
    "text": "performant uh local storage so as soon as you get a request we write the",
    "start": "2795359",
    "end": "2800520"
  },
  {
    "text": "request or or or event uh to this local storage and immediately acknowledge the",
    "start": "2800520",
    "end": "2806160"
  },
  {
    "text": "client and uh once these uh local Block store and local blocks goes beyond a",
    "start": "2806160",
    "end": "2812319"
  },
  {
    "text": "certain limit then we write it back to a assur storage Engine account uh behind",
    "start": "2812319",
    "end": "2817839"
  },
  {
    "text": "the scenes without impacting the uh client applications so yeah so I'm not going to",
    "start": "2817839",
    "end": "2825440"
  },
  {
    "text": "go into the details of this but uh just want to give you some um insights about how we have implemented the service the",
    "start": "2825440",
    "end": "2834119"
  },
  {
    "start": "2833000",
    "end": "2863000"
  },
  {
    "text": "covers all right I think uh with that I would like to conclude the session on uh",
    "start": "2834119",
    "end": "2840040"
  },
  {
    "text": "cloud cloud native even streams I want to give few minutes to uh address any of the questions you",
    "start": "2840040",
    "end": "2848200"
  },
  {
    "text": "have",
    "start": "2861920",
    "end": "2864920"
  }
]