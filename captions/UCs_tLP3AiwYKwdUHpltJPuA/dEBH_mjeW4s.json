[
  {
    "start": "0",
    "end": "99000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "my name is Julia I'm actually almost",
    "start": "11780",
    "end": "21420"
  },
  {
    "text": "three years and my topic today is CD burning $40 I wanted to call it deep",
    "start": "21420",
    "end": "29130"
  },
  {
    "text": "running for humans because it's really burning for normal people it's really my",
    "start": "29130",
    "end": "43110"
  },
  {
    "text": "point today is we to show you that if you can read and write 50 lines of Python to come to Giovanni okay and I",
    "start": "43110",
    "end": "50070"
  },
  {
    "text": "really want to show you how easy actually it is to understand the basics",
    "start": "50070",
    "end": "55079"
  },
  {
    "text": "the concepts of deep running and then to actually write minimum code the minimal",
    "start": "55079",
    "end": "64760"
  },
  {
    "text": "processes that are needed to use deep in your eyes I will start with an",
    "start": "64760",
    "end": "71189"
  },
  {
    "text": "introduction to deep learning this is les right this is a little bit theoretical I try to make it as easy as",
    "start": "71189",
    "end": "78270"
  },
  {
    "text": "possible with as much as possible but ok",
    "start": "78270",
    "end": "85219"
  },
  {
    "text": "I'm gonna show you that anybody can do it so we've all heard about normal",
    "start": "95340",
    "end": "100650"
  },
  {
    "start": "99000",
    "end": "303000"
  },
  {
    "text": "levels okay and this is the technology that deep peroneal relies on machine",
    "start": "100650",
    "end": "106920"
  },
  {
    "text": "learning in general relies on mostly on statistics we can use a combination of",
    "start": "106920",
    "end": "114960"
  },
  {
    "text": "deep learning which is a subset of machinery uses neural networks and only",
    "start": "114960",
    "end": "120990"
  },
  {
    "text": "so and what we're trying to do here is",
    "start": "120990",
    "end": "127710"
  },
  {
    "text": "we're trying to approximate the biology of the brain okay so if there's",
    "start": "127710",
    "end": "138300"
  },
  {
    "text": "immolated enough it's fire and if they're not stimulated enough they don't",
    "start": "138300",
    "end": "144150"
  },
  {
    "text": "fire you can see that even these miners too rigid enough to put it on fire but",
    "start": "144150",
    "end": "151860"
  },
  {
    "text": "anyway that's what we're trying to build here so a new problem is really a collection of inputs okay for signals it",
    "start": "151860",
    "end": "159060"
  },
  {
    "text": "should put is associated to weight and the first thing we're gonna do is",
    "start": "159060",
    "end": "164239"
  },
  {
    "text": "basically take each input multiplied by each weight and sum everything we call",
    "start": "164239",
    "end": "169380"
  },
  {
    "text": "this x direction and those inputs in those ways are just floating point",
    "start": "169380",
    "end": "175050"
  },
  {
    "text": "values and they're just information there are samples that we feed so that's",
    "start": "175050",
    "end": "182520"
  },
  {
    "text": "the multiplying into it and really that's what deep learning is all about multiplying and adding stuff so HTTP the",
    "start": "182520",
    "end": "191730"
  },
  {
    "text": "problem of course is that this function here is a linear function ready to",
    "start": "191730",
    "end": "197580"
  },
  {
    "text": "change the inputs the axes and the result of carry and that's not what we want because",
    "start": "197580",
    "end": "204800"
  },
  {
    "text": "remember we said that the biological neuron fires there's a limit there's a",
    "start": "204800",
    "end": "210260"
  },
  {
    "text": "threshold that says that okay below this threshold nothing happens after this",
    "start": "210260",
    "end": "216470"
  },
  {
    "text": "threshold something happens that's an only so we need to add an extra function",
    "start": "216470",
    "end": "222320"
  },
  {
    "text": "after the multiplier accumulate operation activations and the it's a",
    "start": "222320",
    "end": "228590"
  },
  {
    "text": "good memory because this decides whether the new one will spiral so over time the",
    "start": "228590",
    "end": "234350"
  },
  {
    "text": "number of functions have been used the popular one these days or really you can",
    "start": "234350",
    "end": "240290"
  },
  {
    "text": "see it's a very simple function if they input if that you value right if they input to the activation function is",
    "start": "240290",
    "end": "247100"
  },
  {
    "text": "negative it could be really really negative then the output of the",
    "start": "247100",
    "end": "252650"
  },
  {
    "text": "activation function is 0 so the neuron doesn't fire okay if the I give the",
    "start": "252650",
    "end": "257780"
  },
  {
    "text": "input to the activation function is positive then we output that value",
    "start": "257780",
    "end": "263510"
  },
  {
    "text": "itself okay and it could be very very knowledge okay so this is pretty much the behavior we want right if the neuron",
    "start": "263510",
    "end": "271130"
  },
  {
    "text": "is stimulated enough we get an output it to be a really large output if the",
    "start": "271130",
    "end": "276260"
  },
  {
    "text": "stimulation is very very slow and if the new one is not stupid enough nothing",
    "start": "276260",
    "end": "281750"
  },
  {
    "text": "happens this is why this is how we introduce that nonlinear behavior so at",
    "start": "281750",
    "end": "288470"
  },
  {
    "text": "the core of neural networks this is what will be happens it take it puts",
    "start": "288470",
    "end": "294020"
  },
  {
    "text": "x bangs at anything and run that result",
    "start": "294020",
    "end": "301060"
  },
  {
    "text": "ejaculation so a new run by Excel doesn't do much smell really interesting we need to put them together to build",
    "start": "301060",
    "end": "309400"
  },
  {
    "start": "303000",
    "end": "712000"
  },
  {
    "text": "networks so this is probably the simplest poor Network in the building so we need prepare where we will push our",
    "start": "309400",
    "end": "315700"
  },
  {
    "text": "samples and now to there where we will read some results and in the middle at",
    "start": "315700",
    "end": "321370"
  },
  {
    "text": "least one layer which we call the inner layer and in this case we call it a",
    "start": "321370",
    "end": "327280"
  },
  {
    "text": "fully connected there as see each new one is fully connected to all inputs",
    "start": "327280",
    "end": "332350"
  },
  {
    "text": "fully connected to our pool and in case you wonder why these things are this",
    "start": "332350",
    "end": "339190"
  },
  {
    "text": "thing is for deep learning is because you okay in this case we use just one",
    "start": "339190",
    "end": "356860"
  },
  {
    "text": "hidden layer so how does that work well me dictates all right and yes I know",
    "start": "356860",
    "end": "364240"
  },
  {
    "text": "it's a matrix take a deep breath you'll be fine you will you will also write this so I need data to train my network",
    "start": "364240",
    "end": "373300"
  },
  {
    "text": "on ok so for the sake of this discussion let's say we're trying to classify the images ok so we have a collection of",
    "start": "373300",
    "end": "380740"
  },
  {
    "text": "images and to make things quite simple we're going to flatten all these images",
    "start": "380740",
    "end": "385780"
  },
  {
    "text": "into vectors right and so each individual pixel value is a value in this vector okay so x1 is my",
    "start": "385780",
    "end": "394360"
  },
  {
    "text": "first image right each of these individual X pixel values right x2 is",
    "start": "394360",
    "end": "401650"
  },
  {
    "text": "the second sample etc etc alright let's just keep it simple okay",
    "start": "401650",
    "end": "409199"
  },
  {
    "text": "take images flatten them into vectors and we use the pixel values as features",
    "start": "409199",
    "end": "414419"
  },
  {
    "text": "okay and of course we know what those even see tomorrow so let's say and we",
    "start": "414419",
    "end": "419819"
  },
  {
    "text": "have to tell categories maybe dogs are category two maybe cats are category 0 and elephants are",
    "start": "419819",
    "end": "428250"
  },
  {
    "text": "category 4 etcetera etcetera and so of course we know what those images are ok so we can build labels in a vector and",
    "start": "428250",
    "end": "436529"
  },
  {
    "text": "for each of the samples here we're going to provide the corresponding category ok so that's first image supervised",
    "start": "436529",
    "end": "452639"
  },
  {
    "text": "learning you have data and you know what that did is it so classification is an",
    "start": "452639",
    "end": "458039"
  },
  {
    "text": "example of supervisor you can also do unsupervised learning and the clustering",
    "start": "458039",
    "end": "463620"
  },
  {
    "text": "would be an example of taking million samples and try to group them in 10",
    "start": "463620",
    "end": "469979"
  },
  {
    "text": "poops without knowing what those result just let you be able to decide ok clustering again so coming back to this",
    "start": "469979",
    "end": "480289"
  },
  {
    "text": "actually this is not a really useful right if you're a machine learning already you know we don't like categorical",
    "start": "480289",
    "end": "486360"
  },
  {
    "text": "values and the first thing we do is we use a technical one part encoding to",
    "start": "486360",
    "end": "493589"
  },
  {
    "text": "transform those categorical times and again it's a very complicated word to explain something really simple let's",
    "start": "493589",
    "end": "499500"
  },
  {
    "text": "say once again have 10 categories each of those category numbers becomes a",
    "start": "499500",
    "end": "505080"
  },
  {
    "text": "factor of 10 bits and we flip to 1 the bits that corresponds to the airport",
    "start": "505080",
    "end": "511409"
  },
  {
    "text": "category okay this is category 2 so it 0 B 1 B 2 B 2 2 okay this is Cathy",
    "start": "511409",
    "end": "521320"
  },
  {
    "text": "0:51 articling and this is how you deal with categorical variables many recently",
    "start": "521500",
    "end": "531070"
  },
  {
    "text": "but you will see this technique over and over this is actually much more expressive right because we could look",
    "start": "531070",
    "end": "538910"
  },
  {
    "text": "at those numbers as probabilities for each of the classes okay so when you look at this year we'll say we know that",
    "start": "538910",
    "end": "546650"
  },
  {
    "text": "this sample has a hundred percent chance of being category - but we look at this",
    "start": "546650",
    "end": "551780"
  },
  {
    "text": "one we know it has none in percent chance of in category four and zero percent all of",
    "start": "551780",
    "end": "557540"
  },
  {
    "text": "us so this is more expressive because when I look at this I see the number of possible classes and I see the",
    "start": "557540",
    "end": "563870"
  },
  {
    "text": "probability for each of the classes and again here we have zeros and ones because we know for sure what's it those",
    "start": "563870",
    "end": "571400"
  },
  {
    "text": "features but weren't we're going to predict obviously there are there is no such thing as zeros and ones right we",
    "start": "571400",
    "end": "577640"
  },
  {
    "text": "all thought computers were about 0 and variance it's all fair it's all about fit abilities now zeros are no one's",
    "start": "577640",
    "end": "586340"
  },
  {
    "text": "only four abilities so one will predict we will see different probabilities",
    "start": "586340",
    "end": "591950"
  },
  {
    "text": "hopefully one of them will be really really close to one by showing the right class but so how do we actually do this",
    "start": "591950",
    "end": "601610"
  },
  {
    "text": "so let's if we have a train network we could take the first sample and this is",
    "start": "601610",
    "end": "607670"
  },
  {
    "text": "the actual highlights of my talk",
    "start": "607670",
    "end": "611170"
  },
  {
    "text": "we'll take that someone will take each feature put it in a new roman name from",
    "start": "613040",
    "end": "619080"
  },
  {
    "text": "there which obviously means that in the input there I need to have as many you know as I've got features",
    "start": "619080",
    "end": "625200"
  },
  {
    "text": "so in fact that it's a thousand pixels here I will be the thousand among here okay and then I will run the multiply it",
    "start": "625200",
    "end": "633960"
  },
  {
    "text": "accumulates using the waste the network I will run the activation functions okay this is called forward propagation and",
    "start": "633960",
    "end": "641570"
  },
  {
    "text": "God willing I will get and deep running willing I will get zeros everywhere",
    "start": "641570",
    "end": "650270"
  },
  {
    "text": "except in the new run for the right class okay which again requires that I",
    "start": "650270",
    "end": "657120"
  },
  {
    "text": "have as maybe how to do one Isaac up classes so if I have ten classes year ID",
    "start": "657120",
    "end": "662280"
  },
  {
    "text": "ten okay so in a perfect world this is how things work okay but there are two",
    "start": "662280",
    "end": "670680"
  },
  {
    "text": "answers to me really have an answer how do you train the network how do you find the right weights and will we really get",
    "start": "670680",
    "end": "678240"
  },
  {
    "text": "zeros so what grants allowed and what we",
    "start": "678240",
    "end": "684960"
  },
  {
    "text": "care about is the accuracy okay you see the number of correct predictions for",
    "start": "684960",
    "end": "690120"
  },
  {
    "text": "the dataset divided by the total number of finishes its highest accuracy means",
    "start": "690120",
    "end": "695900"
  },
  {
    "text": "where we've learned successfully have predicted state okay so in a nutshell let's see where they're trying to do",
    "start": "695900",
    "end": "702190"
  },
  {
    "text": "trying to push retracted forward propagate samples and get read some",
    "start": "702190",
    "end": "707750"
  },
  {
    "text": "results on the output there and hopefully they're correct but of course",
    "start": "707750",
    "end": "712870"
  },
  {
    "text": "initially it's not going to work like that because usually all those ways are pretty much random values okay it's not",
    "start": "712870",
    "end": "721580"
  },
  {
    "text": "gonna be all zeros in any random facts there are many ways to initialize those weights but again keep it simple let's",
    "start": "721580",
    "end": "728150"
  },
  {
    "text": "say these are random so if I take a sample here and two forward propagates I",
    "start": "728150",
    "end": "735110"
  },
  {
    "text": "will get something if you want the other and I don't even get that it's not even",
    "start": "735110",
    "end": "740180"
  },
  {
    "text": "that I couldn't get a while in the wrong position and zeros else but I will just get around up for it but I guess I'm too",
    "start": "740180",
    "end": "746330"
  },
  {
    "text": "lazy to fix this animation how their",
    "start": "746330",
    "end": "752120"
  },
  {
    "text": "project so initially we will get fully random footage so if you see this",
    "start": "752120",
    "end": "759680"
  },
  {
    "text": "network as a bad function okay so this is the and all the waves are the",
    "start": "759680",
    "end": "765890"
  },
  {
    "text": "parameters so let's compute its its",
    "start": "765890",
    "end": "773630"
  },
  {
    "text": "category so I need to measure the",
    "start": "773630",
    "end": "780470"
  },
  {
    "text": "difference between the real value and the predicted value and it's not any as",
    "start": "780470",
    "end": "786200"
  },
  {
    "text": "easy as you know subtracting one from the other because obviously these are vectors right so you want to measure the",
    "start": "786200",
    "end": "791960"
  },
  {
    "text": "difference between two vectors abilities so you use loss functions to do this",
    "start": "791960",
    "end": "797450"
  },
  {
    "text": "okay you don't have to worry too much about that because they are implemented on the library okay so the last function",
    "start": "797450",
    "end": "805250"
  },
  {
    "text": "will compute the error",
    "start": "805250",
    "end": "808330"
  },
  {
    "text": "so we could say well once we know the error for example then in a magical way we could go and tweet the waves and try",
    "start": "811390",
    "end": "818960"
  },
  {
    "text": "to reduce the error that run another sample and do it again again again so most of the time almost all the time",
    "start": "818960",
    "end": "826790"
  },
  {
    "text": "actually we work with batches of samples not individual sounds so what we're",
    "start": "826790",
    "end": "835670"
  },
  {
    "text": "gonna do is we're going to take a bunch of samples it could be 32 64 128 samples",
    "start": "835670",
    "end": "841550"
  },
  {
    "text": "we're gonna run each of them through the model and we're going to add up all the",
    "start": "841550",
    "end": "847610"
  },
  {
    "text": "individual errors okay and that gives me a batch error now with that patch error I can make",
    "start": "847610",
    "end": "854270"
  },
  {
    "text": "decisions up to a day to do it it it",
    "start": "854270",
    "end": "859460"
  },
  {
    "text": "allows for faster training and it has over other",
    "start": "859460",
    "end": "865660"
  },
  {
    "text": "exactly go mini-batch training that's the exact time so basically now we know",
    "start": "866290",
    "end": "873080"
  },
  {
    "text": "that the purpose of the training process is to minimize loss and minimize error",
    "start": "873080",
    "end": "878180"
  },
  {
    "text": "minimize the tradition error gradually batch by batch by adjusting the weights",
    "start": "878180",
    "end": "884680"
  },
  {
    "text": "okay so for the batch but just a ways how and then hopefully we made the right",
    "start": "884680",
    "end": "893300"
  },
  {
    "text": "decision and then to another batch and I just again and if you take the right",
    "start": "893300",
    "end": "899270"
  },
  {
    "text": "decisions all the time those weight updates then we actually reduced the error gradual okay so this is what the",
    "start": "899270",
    "end": "908330"
  },
  {
    "start": "907000",
    "end": "1066000"
  },
  {
    "text": "training process looks like so we are the data separate training dataset we slice at any second batches and again",
    "start": "908330",
    "end": "915860"
  },
  {
    "text": "usually the libraries will do that for us so that's work we propagate each",
    "start": "915860",
    "end": "922640"
  },
  {
    "text": "sample of that batch one after the other add up all the errors we come up a batch",
    "start": "922640",
    "end": "928430"
  },
  {
    "text": "ever and then here comes the magic algorithm back propagation which goes",
    "start": "928430",
    "end": "934670"
  },
  {
    "text": "back from the output layer to the front",
    "start": "934670",
    "end": "940040"
  },
  {
    "text": "layer and later by there it will adjust",
    "start": "940040",
    "end": "947090"
  },
  {
    "text": "the ways each individual ways in the direction that we know reduces error",
    "start": "947090",
    "end": "954610"
  },
  {
    "text": "remember weights or flows so I don't want you but me you know there's really",
    "start": "954610",
    "end": "961010"
  },
  {
    "text": "two options right float I can increase it and I can decrease it so for each of",
    "start": "961010",
    "end": "966530"
  },
  {
    "text": "those ways the other same area I need to decide whether I should include",
    "start": "966530",
    "end": "972320"
  },
  {
    "text": "or decrease it available to reduce the other so that proposition will do it for",
    "start": "972320",
    "end": "979130"
  },
  {
    "text": "this layer and then it will do it again all the way back and then we do this",
    "start": "979130",
    "end": "989810"
  },
  {
    "text": "again with another batch again and again if you take the right decisions if you",
    "start": "989810",
    "end": "995600"
  },
  {
    "text": "update the weights correctly we take error down okay and if you do this for",
    "start": "995600",
    "end": "1001870"
  },
  {
    "text": "many batches right step-by-step you get to an or heretic and eventually you get",
    "start": "1001870",
    "end": "1008290"
  },
  {
    "text": "to the end of your training set now this is called 1f up and we're going to train",
    "start": "1008290",
    "end": "1014920"
  },
  {
    "text": "for many a box it's typical to train for maybe 100 100 200 300 bucks so it's it's",
    "start": "1014920",
    "end": "1021850"
  },
  {
    "text": "a lot of iterative processing sending a batch back propagating do it over again",
    "start": "1021850",
    "end": "1029439"
  },
  {
    "text": "and until you reach the end of the date set and then starting all over again and again and again and so gradually if you",
    "start": "1029440",
    "end": "1035829"
  },
  {
    "text": "take the right decisions your ways to converge to recover to a set of weights",
    "start": "1035829",
    "end": "1040900"
  },
  {
    "text": "right that give you a very good and if you have very little error you have very",
    "start": "1040900",
    "end": "1046480"
  },
  {
    "text": "high hackers it says now the magic thing obviously is how could we possibly know",
    "start": "1046480",
    "end": "1053740"
  },
  {
    "text": "if this way it should be increased or decreased what about this one",
    "start": "1053740",
    "end": "1060030"
  },
  {
    "text": "these oils right that stuff that's the magic bit okay and and unfortunately I",
    "start": "1060030",
    "end": "1068640"
  },
  {
    "start": "1066000",
    "end": "1271000"
  },
  {
    "text": "have to take you back to high school for a minute I remember derivatives after puberty I",
    "start": "1068640",
    "end": "1079100"
  },
  {
    "text": "should have gone to that dead obsession I do it I'm gonna say stuff so",
    "start": "1079100",
    "end": "1088620"
  },
  {
    "text": "derivatives right give you the slope okay and of course when you know slope",
    "start": "1088620",
    "end": "1094560"
  },
  {
    "text": "you know which way is up and which way is down right imagine a simple parabola",
    "start": "1094560",
    "end": "1100920"
  },
  {
    "text": "function like this right and and take any point in there and take your slope",
    "start": "1100920",
    "end": "1106050"
  },
  {
    "text": "and now picture that in your head so you know if you are on the right and side of",
    "start": "1106050",
    "end": "1113160"
  },
  {
    "text": "the axis right lots of positive x for x too slow so probably occurred like this",
    "start": "1113160",
    "end": "1119970"
  },
  {
    "text": "is little time like this so if you the slope is positive so if you increase X",
    "start": "1119970",
    "end": "1127190"
  },
  {
    "text": "the output the Y value increases so good wake up if you decrease X Y value down",
    "start": "1127250",
    "end": "1135600"
  },
  {
    "text": "so again I suppose the difference here",
    "start": "1135600",
    "end": "1142710"
  },
  {
    "text": "is these functions have multiple parameters right so y equal X to the",
    "start": "1142710",
    "end": "1149160"
  },
  {
    "text": "power 2 that's simple here in this is like in this example here in this manner",
    "start": "1149160",
    "end": "1155490"
  },
  {
    "text": "the output here depends on three parameters okay so the error function",
    "start": "1155490",
    "end": "1162600"
  },
  {
    "text": "here really has to be right okay so you need to compute partial",
    "start": "1162600",
    "end": "1168340"
  },
  {
    "text": "derivatives okay so that's what back propagation is going to do it's going to compute the partial derivative with",
    "start": "1168340",
    "end": "1176019"
  },
  {
    "text": "respect to each place and it's going to decide whether to a Brett to run out of",
    "start": "1176019",
    "end": "1181210"
  },
  {
    "text": "days at we increase or decrease that property that's how we okay nothing less",
    "start": "1181210",
    "end": "1186850"
  },
  {
    "text": "nothing and it might sound weird or complicated if you do take a lot of",
    "start": "1186850",
    "end": "1193559"
  },
  {
    "text": "calculus but that's and once again the tea party Larry is doing automatically",
    "start": "1193559",
    "end": "1199539"
  },
  {
    "text": "for you 99% of the time you just want to go it just works so fortunately relative them",
    "start": "1199539",
    "end": "1207580"
  },
  {
    "text": "okay that's what back propagation is gonna do and once it has the Slovene knows how to update the weights up or",
    "start": "1207580",
    "end": "1213700"
  },
  {
    "text": "down to go to a lower value time so as three things you're important as well -",
    "start": "1213700",
    "end": "1220629"
  },
  {
    "text": "sighs - tea right you have very tiny batches trained pretty slow right Jeff huge batches you",
    "start": "1220629",
    "end": "1228340"
  },
  {
    "text": "might read faster but you don't get so many shots at backpropagation might not",
    "start": "1228340",
    "end": "1233799"
  },
  {
    "text": "convert very well we get to find out the right the learning rate will influence",
    "start": "1233799",
    "end": "1240009"
  },
  {
    "text": "the size of the steps that you take right the size of the updates that you make to those ways a very tiny learning",
    "start": "1240009",
    "end": "1246730"
  },
  {
    "text": "rate very small updates so you might be moving in the right direction but very slowly we've got large learning rates then you",
    "start": "1246730",
    "end": "1254590"
  },
  {
    "text": "make very large updates to the ways and they might actually be too large a density and the number of apples is",
    "start": "1254590",
    "end": "1262269"
  },
  {
    "text": "actually these are called Hydra parameters and there are particularly data results so",
    "start": "1262269",
    "end": "1272680"
  },
  {
    "start": "1271000",
    "end": "1402000"
  },
  {
    "text": "via the engine optimizer the actual album that updates the ways back",
    "start": "1272680",
    "end": "1278080"
  },
  {
    "text": "propagation is the whole process now the actual wave of database is called",
    "start": "1278080",
    "end": "1285220"
  },
  {
    "text": "optimization and the granddaddy of optimizer is sgv was invented in 1951",
    "start": "1285220",
    "end": "1293790"
  },
  {
    "text": "even before AI machine environment and",
    "start": "1293790",
    "end": "1299400"
  },
  {
    "text": "the way if the way to see it is imagine the error function as just two",
    "start": "1299400",
    "end": "1304840"
  },
  {
    "text": "parameters right x and y and z there okay so if you plot that neglects it",
    "start": "1304840",
    "end": "1310570"
  },
  {
    "text": "looks like this so initially x and y have random values right so you start anywhere and you compute partial",
    "start": "1310570",
    "end": "1320140"
  },
  {
    "text": "derivatives of x and y to get the slope with respect to X the slope with respect",
    "start": "1320140",
    "end": "1325570"
  },
  {
    "text": "to Y to know me literally which way is down maybe you make a tiny odd a 2x and a tiny update to Y so you go down with",
    "start": "1325570",
    "end": "1332890"
  },
  {
    "text": "it and you know you're in the right direction to scan the derivative told",
    "start": "1332890",
    "end": "1338350"
  },
  {
    "text": "you where to go and you do it again and again and again",
    "start": "1338350",
    "end": "1344080"
  },
  {
    "text": "again I just walking down the mountain step by step you will get two very low",
    "start": "1344080",
    "end": "1351130"
  },
  {
    "text": "maybe not the absolute lowest but a very low value and this is what that's GD",
    "start": "1351130",
    "end": "1357890"
  },
  {
    "text": "does but you see this is iterative yeah okay so we need to do this many times",
    "start": "1357890",
    "end": "1363679"
  },
  {
    "text": "because we tend to take small steps down the mountain so we need to Train long enough to actually get a load and the",
    "start": "1363679",
    "end": "1373460"
  },
  {
    "text": "step size is really the learning rate so if you have a very tiny step size you",
    "start": "1373460",
    "end": "1379520"
  },
  {
    "text": "can understand it would take forever to get here large learning rate you might",
    "start": "1379520",
    "end": "1386390"
  },
  {
    "text": "actually bounce right might take giant steps and and you are unable to go down",
    "start": "1386390",
    "end": "1391669"
  },
  {
    "text": "so maybe you jump from here to here and then from here to here you're taking",
    "start": "1391669",
    "end": "1396799"
  },
  {
    "text": "lots that are way too large to actually get to so SGD is just one way of doing",
    "start": "1396799",
    "end": "1406130"
  },
  {
    "start": "1402000",
    "end": "1487000"
  },
  {
    "text": "it there are other optimizers to see here specifically the other family of",
    "start": "1406130",
    "end": "1414200"
  },
  {
    "text": "elevations adaptative and as you can see here these have a lot of nice properties",
    "start": "1414200",
    "end": "1420049"
  },
  {
    "text": "they avoid staying stuck this point here's to a single point it's actually",
    "start": "1420049",
    "end": "1428570"
  },
  {
    "text": "defeat sge because yet in this direction yes okay this is a minimum but in this",
    "start": "1428570",
    "end": "1437270"
  },
  {
    "text": "direction it's a maximum okay so if you remember from high school",
    "start": "1437270",
    "end": "1442440"
  },
  {
    "text": "the derivative will be 0 for minimum and maximum so if you if you end up exactly",
    "start": "1442440",
    "end": "1450270"
  },
  {
    "text": "here then the derivative is zero in all directions and you stay stuff so that's",
    "start": "1450270",
    "end": "1455700"
  },
  {
    "text": "not good so anyway this optimizer can break the more modern one they can",
    "start": "1455700",
    "end": "1461520"
  },
  {
    "text": "straight out of those traditions but more importantly they can actually detect the slope they can understand not",
    "start": "1461520",
    "end": "1469890"
  },
  {
    "text": "only where down it is but how steep the slope is and they can speed up okay so",
    "start": "1469890",
    "end": "1475500"
  },
  {
    "text": "you actually get faster but of course",
    "start": "1475500",
    "end": "1488610"
  },
  {
    "start": "1487000",
    "end": "1579000"
  },
  {
    "text": "life is never easy and what if the other function looks like this right imagine we start here on the red",
    "start": "1488610",
    "end": "1495899"
  },
  {
    "text": "mountain and we walk down and lives up here and everywhere we look it is hot",
    "start": "1495899",
    "end": "1502640"
  },
  {
    "text": "okay so we get stuck in that local minimum with an error value here that is",
    "start": "1502640",
    "end": "1509909"
  },
  {
    "text": "quite bigger it wittingly would be more desirable to be here right so there's a",
    "start": "1509909",
    "end": "1519720"
  },
  {
    "text": "big debate in the deep learning community on to these things really exists and if they do are they hurting",
    "start": "1519720",
    "end": "1526890"
  },
  {
    "text": "the training process and how do we break out of those points etc etc all right so",
    "start": "1526890",
    "end": "1532190"
  },
  {
    "text": "to make a very long story very short if you're curious about this I would refer",
    "start": "1532190",
    "end": "1539070"
  },
  {
    "text": "you to this good fellows on the top row they are researchers and he actually figured out",
    "start": "1539070",
    "end": "1545240"
  },
  {
    "text": "that yes we can actually see things like this",
    "start": "1545240",
    "end": "1550740"
  },
  {
    "text": "it lost functions for neural networks but as it turns out we are ordered right",
    "start": "1550740",
    "end": "1557850"
  },
  {
    "text": "the training process avoids them and and we're not getting stuck in very shallow",
    "start": "1557850",
    "end": "1565880"
  },
  {
    "text": "if you can't sleep I really recommended and then then you can go and read all",
    "start": "1566990",
    "end": "1572370"
  },
  {
    "text": "the articles that you references and then you will never sleep again and it's",
    "start": "1572370",
    "end": "1577559"
  },
  {
    "text": "fascinating so the training process should work right and of course we need",
    "start": "1577559",
    "end": "1584970"
  },
  {
    "text": "to measure how well does so we keep part of the data to have the validation and",
    "start": "1584970",
    "end": "1590669"
  },
  {
    "text": "at the end of each network we're going to predict those samples that the network has not seen yet okay and and",
    "start": "1590669",
    "end": "1599039"
  },
  {
    "text": "we're going to measure actors and this would give us a sense of how well that training model all that modelling",
    "start": "1599039",
    "end": "1605730"
  },
  {
    "text": "training should say generalizes to sample it has",
    "start": "1605730",
    "end": "1611658"
  },
  {
    "text": "that's a really important thing and then once you're done training we're",
    "start": "1611740",
    "end": "1617870"
  },
  {
    "text": "going to use an oven except called the test dataset and this one will just give us at the end of experimentation",
    "start": "1617870",
    "end": "1625249"
  },
  {
    "text": "once we completely done it will just give us a benchmark reference accuracy",
    "start": "1625249",
    "end": "1630470"
  },
  {
    "text": "for this so training sets to train",
    "start": "1630470",
    "end": "1637960"
  },
  {
    "text": "validations set to check accuracy after each epoch and once you complete the dog",
    "start": "1637960",
    "end": "1645190"
  },
  {
    "text": "tweaking the model running the test set together to get a vegetable so I should",
    "start": "1645190",
    "end": "1651830"
  },
  {
    "text": "plot everything external apprentice the training data see we'll go over it quickly then it will Plateau",
    "start": "1651830",
    "end": "1657559"
  },
  {
    "text": "and if you long enough you will get if",
    "start": "1657559",
    "end": "1671570"
  },
  {
    "text": "you look at the loss function no surprise right it's almost go down to",
    "start": "1671570",
    "end": "1677389"
  },
  {
    "text": "zero if you plot the validation accuracy it's gonna look like this again it's",
    "start": "1677389",
    "end": "1683659"
  },
  {
    "text": "going to go up shortly then Plateau again if you train long enough it drops",
    "start": "1683659",
    "end": "1688850"
  },
  {
    "text": "and never really recover and to be able to be really precise at the bump here",
    "start": "1688850",
    "end": "1694009"
  },
  {
    "text": "that the actual highest value it could be it's already so this is very very bad",
    "start": "1694009",
    "end": "1710990"
  },
  {
    "text": "and full of overfitting which is a severe problem general and over-fitting really means",
    "start": "1710990",
    "end": "1717700"
  },
  {
    "text": "you train so hard on your training set that you cannot predict anything else the only thing to learn is to predict",
    "start": "1717700",
    "end": "1725950"
  },
  {
    "text": "your training set it's your model is just too specialized it doesn't generalize to do sample and",
    "start": "1725950",
    "end": "1732100"
  },
  {
    "text": "obviously that's because what you want to do is a model that generalizes well to you samples to samples that your",
    "start": "1732100",
    "end": "1740020"
  },
  {
    "text": "users will send so you need to train for",
    "start": "1740020",
    "end": "1746380"
  },
  {
    "text": "long enough to get to that top accuracy and this is obviously the one F box you",
    "start": "1746380",
    "end": "1752350"
  },
  {
    "text": "want to keep okay but it's difficult to cast which so what you really do is you",
    "start": "1752350",
    "end": "1759850"
  },
  {
    "text": "train for all right you save the mountain at the end of each development and then you plot all those actresses",
    "start": "1759850",
    "end": "1766210"
  },
  {
    "text": "that you realize okay I trained for 200 F bucks but actually the top one along",
    "start": "1766210",
    "end": "1771610"
  },
  {
    "text": "with the validation accuracy is never",
    "start": "1771610",
    "end": "1778060"
  },
  {
    "text": "know in advance so if we sum things up",
    "start": "1778060",
    "end": "1783120"
  },
  {
    "text": "deep learning is about finding a local minimum a minimum not the minimum",
    "start": "1783120",
    "end": "1792810"
  },
  {
    "text": "because you'll never be sure you actually found the lowest point in that",
    "start": "1792810",
    "end": "1798220"
  },
  {
    "text": "error function it's been to learn to be np-hard it's very very hard it's the",
    "start": "1798220",
    "end": "1808630"
  },
  {
    "text": "hardest problems in computing so it's in PR so you will never know if you",
    "start": "1808630",
    "end": "1813910"
  },
  {
    "text": "actually found the global all you care about is a minimum that's good enough for your business problem right if your business problem requires",
    "start": "1813910",
    "end": "1821090"
  },
  {
    "text": "that say 95 percent accuracy and you get to 95 101 fine good why would you spend",
    "start": "1821090",
    "end": "1827570"
  },
  {
    "text": "the weeks and months trying to get to 97 if there's no business value so you just",
    "start": "1827570",
    "end": "1833330"
  },
  {
    "text": "need to get to some minimum net worth we're screwed and of course if you can that find it",
    "start": "1833330",
    "end": "1839450"
  },
  {
    "text": "fast that's fine because you can train faster save money and if you can't find",
    "start": "1839450",
    "end": "1844850"
  },
  {
    "text": "it again and again that's why - because you will train many times you will need",
    "start": "1844850",
    "end": "1850850"
  },
  {
    "text": "to find all right we're done with the",
    "start": "1850850",
    "end": "1859549"
  },
  {
    "start": "1857000",
    "end": "2232000"
  },
  {
    "text": "theory so let's look at an example now",
    "start": "1859549",
    "end": "1863320"
  },
  {
    "text": "so we're going to actually try something we're gonna work with a simple data set",
    "start": "1867980",
    "end": "1873799"
  },
  {
    "text": "but actually you've heard at least heard about at least it's a data set of",
    "start": "1873799",
    "end": "1879380"
  },
  {
    "text": "hundreds of digits it's you were tonight and you have 70,000 of those 60k for training 10 K",
    "start": "1879380",
    "end": "1886820"
  },
  {
    "text": "for validation and we're going to try and learn those images so we're going to try and do exactly what I described",
    "start": "1886820",
    "end": "1893269"
  },
  {
    "text": "earlier so we take the images we flatten them into vectors and we use a fully",
    "start": "1893269",
    "end": "1898970"
  },
  {
    "text": "connected Network to predict them okay I'm gonna do this for the Jeep running",
    "start": "1898970",
    "end": "1904070"
  },
  {
    "text": "library called Apache you next time so I",
    "start": "1904070",
    "end": "1910850"
  },
  {
    "text": "need to download the data set to each other before I need to import them expect I'm gonna 2450 a box I've got an",
    "start": "1910850",
    "end": "1920990"
  },
  {
    "text": "iterator to slash sorry slice my datacenter matches okay so I don't need",
    "start": "1920990",
    "end": "1928429"
  },
  {
    "text": "to worry about the slicing and dicing but that's not for me and I'm going to build a simple fully connected Network",
    "start": "1928429",
    "end": "1935330"
  },
  {
    "text": "so that's my input layer I call it data and MX net will size it automatically",
    "start": "1935330",
    "end": "1941960"
  },
  {
    "text": "invite by looking at the size of these samples I'm flattening the data like I said okay so they're the 2d images which",
    "start": "1941960",
    "end": "1949220"
  },
  {
    "text": "are 28 by 28 pixels they become a vector of 784 bytes and then I'm a first fully",
    "start": "1949220",
    "end": "1956659"
  },
  {
    "text": "connected learner with 1024 neurons activated by balloon then I'm a secondary factor of the world's expected",
    "start": "1956659",
    "end": "1963740"
  },
  {
    "text": "value and then I've got the other with ten drums because I've got ten categories because right that's how I",
    "start": "1963740",
    "end": "1973070"
  },
  {
    "text": "define my model okay now I need to",
    "start": "1973070",
    "end": "1978620"
  },
  {
    "text": "decide where to train so on the train of GPU because I'm going to find the model",
    "start": "1978620",
    "end": "1986780"
  },
  {
    "text": "that I defined the data sets that I loaded in the iterator and then I'm gonna pick optimizer",
    "start": "1986780",
    "end": "1995860"
  },
  {
    "text": "training all right and so what we see",
    "start": "1999820",
    "end": "2007270"
  },
  {
    "text": "here is the batteries right going by and the a box going by okay and it's quite fast because it is a",
    "start": "2007270",
    "end": "2017020"
  },
  {
    "text": "GPU and it is a very small data set okay so we'll get to the end of the fifty a box which I've done before it in",
    "start": "2017020",
    "end": "2023410"
  },
  {
    "text": "interest of time it doesn't take long and then I can say that model I get to",
    "start": "2023410",
    "end": "2029020"
  },
  {
    "text": "ninety eight point fourteen actresses that take watch parties and I can save",
    "start": "2029020",
    "end": "2036880"
  },
  {
    "text": "them all abstaining all the weights that I learned the actor Sega and of course now I could",
    "start": "2036880",
    "end": "2044060"
  },
  {
    "text": "try it so how good is 98.30 right some pretty -",
    "start": "2044060",
    "end": "2051169"
  },
  {
    "text": "is it really good so what I did is I",
    "start": "2051170",
    "end": "2056500"
  },
  {
    "text": "wrote I wrote I grew I grew some digits",
    "start": "2056500",
    "end": "2062870"
  },
  {
    "text": "with paintbrush okay we signed up to 28 28 now I'm gonna try and put in them and see how we do here so what I need to do",
    "start": "2062870",
    "end": "2071090"
  },
  {
    "text": "is to load the model that I just trained which takes about 4 and then I can",
    "start": "2071090",
    "end": "2076399"
  },
  {
    "text": "forward those images into the yes ok so",
    "start": "2076400",
    "end": "2083990"
  },
  {
    "text": "you can see my teachers here and and you can see the outputs ok so I for each",
    "start": "2083990",
    "end": "2090409"
  },
  {
    "text": "digit you see the ten provinces remember that's what we meet on the other we have",
    "start": "2090410",
    "end": "2096290"
  },
  {
    "text": "ten even wrongs and we read the probabilities for each of the ten classes so the first value here is about",
    "start": "2096290",
    "end": "2102740"
  },
  {
    "text": "is for class zero so this is very high which which is great and I've got 99 hundred fifty six percent Oh class zero",
    "start": "2102740",
    "end": "2110960"
  },
  {
    "text": "that's good okay my one is classified pretty nicely to the two is very nice so",
    "start": "2110960",
    "end": "2118250"
  },
  {
    "text": "don't let this fool you there will never be zero isn't once which is because I'm stopping at four decimals and it's from",
    "start": "2118250",
    "end": "2124730"
  },
  {
    "text": "it up okay so this really says it's at least points in nineteen",
    "start": "2124730",
    "end": "2130480"
  },
  {
    "text": "so it works well two three four five six",
    "start": "2130520",
    "end": "2137670"
  },
  {
    "text": "seven eight and then not any simply feel",
    "start": "2137670",
    "end": "2144480"
  },
  {
    "text": "wrong as usual yes zero one two three",
    "start": "2144480",
    "end": "2150510"
  },
  {
    "text": "four okay so their highest probabilities four plus four so my momma here is",
    "start": "2150510",
    "end": "2156359"
  },
  {
    "text": "computed by this ugly nine and takes it so there you go right",
    "start": "2156359",
    "end": "2162180"
  },
  {
    "text": "then each a point something accuracy and then you try ten and one of them if you want so the moral here is never really",
    "start": "2162180",
    "end": "2170070"
  },
  {
    "text": "trust validation sets right trust your own sound make sure you use other",
    "start": "2170070",
    "end": "2175440"
  },
  {
    "text": "examples so what did we do wrong what",
    "start": "2175440",
    "end": "2181440"
  },
  {
    "text": "did we do to those images remember yeah we flattened them it's not a good idea",
    "start": "2181440",
    "end": "2189600"
  },
  {
    "text": "right probably not because you know we let's say you know let's look at this",
    "start": "2189600",
    "end": "2196050"
  },
  {
    "text": "eight that cross here right if you can learn to recognize geometrical shapes we",
    "start": "2196050",
    "end": "2206250"
  },
  {
    "text": "would like to recognize this cross in the middle of the AIDS and we would know for sure",
    "start": "2206250",
    "end": "2211589"
  },
  {
    "text": "there's no other digital assets so when we flatten we lose this spatial",
    "start": "2211589",
    "end": "2218140"
  },
  {
    "text": "relationship between resource so probably so which is why which is why",
    "start": "2218140",
    "end": "2232080"
  },
  {
    "start": "2232000",
    "end": "2538000"
  },
  {
    "text": "when we work with images we tend to work with a new type of network called convolution of the levels and",
    "start": "2232080",
    "end": "2240970"
  },
  {
    "text": "convolution neural networks are quite different because they they work on 2g",
    "start": "2240970",
    "end": "2247930"
  },
  {
    "text": "or 3d or multiple dimension data right they don't flatten stuff and the basic",
    "start": "2247930",
    "end": "2255550"
  },
  {
    "text": "idea here is that in a convolution network you will have multiple stages ok",
    "start": "2255550",
    "end": "2262210"
  },
  {
    "text": "so here's one here's two and these stages are usually the convolution",
    "start": "2262210",
    "end": "2268660"
  },
  {
    "text": "operation followed by a pooling or subsampling operation so that explained",
    "start": "2268660",
    "end": "2274660"
  },
  {
    "text": "convolution really freedom if you play with an image editing app you've done",
    "start": "2274660",
    "end": "2279820"
  },
  {
    "text": "these people right convolution is about taking a small matrix like this or a",
    "start": "2279820",
    "end": "2286450"
  },
  {
    "text": "filter or kernel okay and it needs to have the right values and you just take",
    "start": "2286450",
    "end": "2293740"
  },
  {
    "text": "it and start over top left corner and you you slide it across the image",
    "start": "2293740",
    "end": "2300049"
  },
  {
    "text": "right left to right and you run the convolution operation which is just",
    "start": "2300049",
    "end": "2306589"
  },
  {
    "text": "taking the pixel in the image the pixel in the filter multiplying them and then",
    "start": "2306589",
    "end": "2314450"
  },
  {
    "text": "doing this for the nine pixels and adding all nine into a new image so",
    "start": "2314450",
    "end": "2321980"
  },
  {
    "text": "that's what convolution is sliding that filter and multiplying the underlying",
    "start": "2321980",
    "end": "2327619"
  },
  {
    "text": "pixels by the spirit of pixels and adding everything and if you write you",
    "start": "2327619",
    "end": "2335900"
  },
  {
    "text": "write values you get to something like this okay so you could call this one on",
    "start": "2335900",
    "end": "2341420"
  },
  {
    "text": "the edge detector right we have the edge of that piece so if this was a dog or a",
    "start": "2341420",
    "end": "2347990"
  },
  {
    "text": "cat or an elephant we would have enough information left here to know it's still",
    "start": "2347990",
    "end": "2353470"
  },
  {
    "text": "still we threw away a lot of information all the black pieces of the earth don't",
    "start": "2353470",
    "end": "2358640"
  },
  {
    "text": "have any information about and that's what convolution does its filters it",
    "start": "2358640",
    "end": "2364430"
  },
  {
    "text": "extracts features so here the features are the edge depending on the values too",
    "start": "2364430",
    "end": "2370970"
  },
  {
    "text": "many different things okay so that's what convolution does and actually you learn you use multiple filters and",
    "start": "2370970",
    "end": "2378440"
  },
  {
    "text": "that's what the training process learns you start with random filters and using",
    "start": "2378440",
    "end": "2384410"
  },
  {
    "text": "back propagation and the exact same thing I explained before you will learn the filter values that lets you extract",
    "start": "2384410",
    "end": "2392809"
  },
  {
    "text": "the features okay you've probably heard that deeper learning extract features automatically right it figures out",
    "start": "2392809",
    "end": "2399200"
  },
  {
    "text": "automatically what's important in pictures and what's not this is how it does it okay it learns",
    "start": "2399200",
    "end": "2405049"
  },
  {
    "text": "what value should be in those filters to actually extract useful",
    "start": "2405049",
    "end": "2410779"
  },
  {
    "text": "operation and then so you do this we may be 20 or 30 or 50 filters because you",
    "start": "2410779",
    "end": "2416419"
  },
  {
    "text": "want to learn to extract features you could not extract edges you can you learn to extract contrast to explain",
    "start": "2416419",
    "end": "2424239"
  },
  {
    "text": "vertical lines and oh and then you run",
    "start": "2424239",
    "end": "2429949"
  },
  {
    "text": "pooling okay I'm putting is much cheaper putting is just about shrinking the image because as you can see here we",
    "start": "2429949",
    "end": "2437479"
  },
  {
    "text": "threw away a lot of information that we could throw away a lot of those black pieces as well so pulling and let's say",
    "start": "2437479",
    "end": "2446569"
  },
  {
    "text": "we do two by two pooling it's quite simple to take blocks of 2 by 2 pixels",
    "start": "2446569",
    "end": "2452209"
  },
  {
    "text": "and you just keep the highest one okay the highest pixel because the",
    "start": "2452209",
    "end": "2457579"
  },
  {
    "text": "rationality is the highest pixel is the brightest pixel okay so really what you want to do is keep the brightest pixels if you stay",
    "start": "2457579",
    "end": "2465049"
  },
  {
    "text": "here right if you watch to throw away some stuff you want to keep and that's",
    "start": "2465049",
    "end": "2476119"
  },
  {
    "text": "what how completion work so extract features shrink the image extract",
    "start": "2476119",
    "end": "2481249"
  },
  {
    "text": "features shrink the image again on the images and then you end up with a bunch of very tiny images that nothing like",
    "start": "2481249",
    "end": "2487669"
  },
  {
    "text": "the original picture but they they have the right information in them and then you can flatten those and use a fully",
    "start": "2487669",
    "end": "2494749"
  },
  {
    "text": "connected Network that's my best three-minute version of",
    "start": "2494749",
    "end": "2500650"
  },
  {
    "text": "yeah so there's much more to say about it but that's the intuition you need to build intuition it's very very",
    "start": "2501270",
    "end": "2507970"
  },
  {
    "text": "importantly different because the math and the theory gets crazy and this is a very simple model the state-of-the-art",
    "start": "2507970",
    "end": "2514570"
  },
  {
    "text": "ones they have hundreds of layers but you need to understand what convolution you know if you learned the filters that",
    "start": "2514570",
    "end": "2520900"
  },
  {
    "text": "help extract features and once you've extracted features use black pixels and",
    "start": "2520900",
    "end": "2531730"
  },
  {
    "text": "that's how you shrink very large images to very tiny ones while keeping the right information so you give them all",
    "start": "2531730",
    "end": "2539530"
  },
  {
    "start": "2538000",
    "end": "2608000"
  },
  {
    "text": "kinds of crazy stuff with this I want to point out this black is open-source starting a new one it's actually an API",
    "start": "2539530",
    "end": "2545200"
  },
  {
    "text": "on top of an excellent it's white you won't see huge it's computer vision and",
    "start": "2545200",
    "end": "2551260"
  },
  {
    "text": "the cool thing about this one is it has a collection of three training models okay so these are pretty advanced are",
    "start": "2551260",
    "end": "2560410"
  },
  {
    "text": "very advanced convolutional neural networks that can do classification",
    "start": "2560410",
    "end": "2566400"
  },
  {
    "text": "detection segmentation and it could be a lot of work to train those yourself",
    "start": "2566400",
    "end": "2572020"
  },
  {
    "text": "right and it's not needed you some people I've done for you so just go and",
    "start": "2572020",
    "end": "2577330"
  },
  {
    "text": "take a look at blue on you will see some some examples and it's five lines of",
    "start": "2577330",
    "end": "2582640"
  },
  {
    "text": "code to to teach others right load the model predict print the results and you",
    "start": "2582640",
    "end": "2587980"
  },
  {
    "text": "can have state-of-the-art models to do crazy things like this and of course you could train them again on your own data",
    "start": "2587980",
    "end": "2594910"
  },
  {
    "text": "you could start from the free training model and fine-tune them on your own government to to have the",
    "start": "2594910",
    "end": "2602300"
  },
  {
    "text": "best of both worlds and that's what's wrong okay let's do a quick test",
    "start": "2602300",
    "end": "2613960"
  },
  {
    "start": "2608000",
    "end": "2882000"
  },
  {
    "text": "so we're gonna try that list again okay but this time we're going to try a",
    "start": "2617500",
    "end": "2622900"
  },
  {
    "text": "simple CNN and it's pretty much the one you saw on that slide which is called allure net because it was invented by a",
    "start": "2622900",
    "end": "2629500"
  },
  {
    "text": "researcher or yahoo account rich guy talk AI researcher working for physical",
    "start": "2629500",
    "end": "2637020"
  },
  {
    "text": "so that's pretty much what the network would look like again with them expensive include data a first",
    "start": "2637020",
    "end": "2643570"
  },
  {
    "text": "convolution layer fooling later a second convolution there another coating layer",
    "start": "2643570",
    "end": "2649210"
  },
  {
    "text": "and then flatten and then use a connective layer to classify okay you",
    "start": "2649210",
    "end": "2657280"
  },
  {
    "text": "could literally read the research paper and you code this because you just work at their level we're gonna train on GPU",
    "start": "2657280",
    "end": "2668080"
  },
  {
    "text": "again okay I'm going to use another optimizer in the interest of time I already trained takes a couple of",
    "start": "2668080",
    "end": "2674290"
  },
  {
    "text": "minutes no reason to waste time and we get to ninety-nine point fifteen okay",
    "start": "2674290",
    "end": "2681460"
  },
  {
    "text": "which is a bit higher than a fully connected one right but now we're",
    "start": "2681460",
    "end": "2686740"
  },
  {
    "text": "careful writers we've got disappointed before so how about we try again",
    "start": "2686740",
    "end": "2692230"
  },
  {
    "text": "so I'm just gonna load that you model that I just trained okay and I'm going",
    "start": "2692230",
    "end": "2698830"
  },
  {
    "text": "to predict my digits again okay so zeros",
    "start": "2698830",
    "end": "2705730"
  },
  {
    "text": "and ones that to work you understand extreme if anything they're higher than before",
    "start": "2705730",
    "end": "2712089"
  },
  {
    "text": "and nine okay still not perfect but this",
    "start": "2712089",
    "end": "2720680"
  },
  {
    "text": "is the highest accuracy this is the highest probability for the ten classes so this resent okay zero one two three",
    "start": "2720680",
    "end": "2730250"
  },
  {
    "text": "okay it looks a bit like a three four five six",
    "start": "2730250",
    "end": "2735500"
  },
  {
    "text": "it looks to be like a seven but okay if I have to make a call I'll say tonight",
    "start": "2735500",
    "end": "2741339"
  },
  {
    "text": "so see you can still not you know you can still upgrade the model and try to",
    "start": "2741339",
    "end": "2746990"
  },
  {
    "text": "actually get to classify that night more accurately but generally this is why we work with CNN because CNN's will learn",
    "start": "2746990",
    "end": "2754309"
  },
  {
    "text": "the features and it's quite possible that there's a feature in there that we",
    "start": "2754309",
    "end": "2759800"
  },
  {
    "text": "learn how to detect that cross idiot it's quite possible it's in there I",
    "start": "2759800",
    "end": "2764930"
  },
  {
    "text": "should check and this is real distinct feature for the v8 CNN's just worked out",
    "start": "2764930",
    "end": "2775180"
  },
  {
    "text": "so there are many ways you could try to increase you could have more layers you",
    "start": "2781880",
    "end": "2787790"
  },
  {
    "text": "have deeper layers you have more filters you know that's a nest of someone in",
    "start": "2787790",
    "end": "2793280"
  },
  {
    "text": "deeper that's where it stops being scientific and it becomes cooking",
    "start": "2793280",
    "end": "2799040"
  },
  {
    "text": "recipes so you could do that but I think what would really be interesting is inspect the filters rather and",
    "start": "2799040",
    "end": "2806470"
  },
  {
    "text": "specifically for a for for low-performing samples like this you",
    "start": "2806470",
    "end": "2811490"
  },
  {
    "text": "know predict them and inspect two layers and see which filters are reacting to",
    "start": "2811490",
    "end": "2816560"
  },
  {
    "text": "what you could see why it makes it to tree it has that hopes that circle shape",
    "start": "2816560",
    "end": "2825020"
  },
  {
    "text": "that could be a 3d right and then of course the lower path doesn't look like",
    "start": "2825020",
    "end": "2830660"
  },
  {
    "text": "Java to be interesting to look at the filters look at the layers and see why what gets activated by this at what done",
    "start": "2830660",
    "end": "2837530"
  },
  {
    "text": "and maybe I just need more nine samples and maybe I just three samples to help",
    "start": "2837530",
    "end": "2842630"
  },
  {
    "text": "the negative this is really different but yeah it don't make many ways to do",
    "start": "2842630",
    "end": "2849110"
  },
  {
    "text": "that but it would be looking detailed at the sample that's the",
    "start": "2849110",
    "end": "2860080"
  },
  {
    "text": "so the question is what these are my pictures what about color so if you have",
    "start": "2863699",
    "end": "2869199"
  },
  {
    "text": "colored pictures basically the difference is I let me go to my slide",
    "start": "2869199",
    "end": "2877588"
  },
  {
    "text": "is that here we see convolution on flat things okay images but you can do",
    "start": "2879990",
    "end": "2889460"
  },
  {
    "start": "2882000",
    "end": "2962000"
  },
  {
    "text": "multi-dimensional convolution so if you've got a color image you would have",
    "start": "2889460",
    "end": "2894750"
  },
  {
    "text": "three channels red green and blue okay so each image would actually be it could",
    "start": "2894750",
    "end": "2901350"
  },
  {
    "text": "actually be three okay and you would run not a slapped convolution filter but you",
    "start": "2901350",
    "end": "2907710"
  },
  {
    "text": "would rather cube your convolution picture would not be flattened to beat you and you would run it on the three",
    "start": "2907710",
    "end": "2914520"
  },
  {
    "text": "channels same ID right you would slide that cube inside that 3d shape oh yeah",
    "start": "2914520",
    "end": "2925710"
  },
  {
    "text": "it will take more time yeah it will take more time and convolution is why you need to use because they are not heavy",
    "start": "2925710",
    "end": "2932690"
  },
  {
    "text": "operations and if you run this same example of CPU convolution and it's easy",
    "start": "2932690",
    "end": "2942570"
  },
  {
    "text": "to parallelize contribution so we",
    "start": "2942570",
    "end": "2948510"
  },
  {
    "text": "absolutely right if you use if you don't have to work with color images right if you can live with to get a good result",
    "start": "2948510",
    "end": "2954660"
  },
  {
    "text": "with black and white or grayscale second question please use red skelton will",
    "start": "2954660",
    "end": "2959760"
  },
  {
    "text": "save more time okay okay just five",
    "start": "2959760",
    "end": "2966480"
  },
  {
    "start": "2962000",
    "end": "3036000"
  },
  {
    "text": "minutes so the less than one I want to mention is it's a new exam yet another",
    "start": "2966480",
    "end": "2972250"
  },
  {
    "text": "detector and these are both LST M so so far this is fully connected at the CN n",
    "start": "2972250",
    "end": "2977320"
  },
  {
    "text": "and these have no memory at all right you could take 100 pictures predict them",
    "start": "2977320",
    "end": "2982510"
  },
  {
    "text": "in any order and you always get the same results it's really stateless no memory and that doesn't really work",
    "start": "2982510",
    "end": "2988960"
  },
  {
    "text": "when you need to predict sequences so for example if you want to predict time series if you want to predict if you",
    "start": "2988960",
    "end": "2995950"
  },
  {
    "text": "want to do machine translation when we translate we don't translate work or work of course we look at the word or",
    "start": "2995950",
    "end": "3003270"
  },
  {
    "text": "change it for the to translate but we also look at the first words so this is",
    "start": "3003270",
    "end": "3012510"
  },
  {
    "text": "why this LST evanora was invented in in in a nutshell it keeps it has memory it",
    "start": "3012510",
    "end": "3019980"
  },
  {
    "text": "remembers the last few predictions and so it does a really good job at text",
    "start": "3019980",
    "end": "3026910"
  },
  {
    "text": "processing machine translation exactly explain this one again through free to",
    "start": "3026910",
    "end": "3034110"
  },
  {
    "text": "dive in it's not that bad an example of a project using this is that the WS",
    "start": "3034110",
    "end": "3039720"
  },
  {
    "start": "3036000",
    "end": "3064000"
  },
  {
    "text": "project it's an open source project for stunt guy that uses an LS TM architecture to to build machine",
    "start": "3039720",
    "end": "3047940"
  },
  {
    "text": "translation models so you can drop that project train with the dutch to english",
    "start": "3047940",
    "end": "3053940"
  },
  {
    "text": "dataset and the only a few bars build a pretty good it's always",
    "start": "3053940",
    "end": "3062810"
  },
  {
    "text": "and architecture okay and you could lose I want to show you the crazy stuff and",
    "start": "3062840",
    "end": "3069770"
  },
  {
    "start": "3064000",
    "end": "3182000"
  },
  {
    "text": "these are called Gans which means generative adversarial networks and well",
    "start": "3069770",
    "end": "3078250"
  },
  {
    "text": "do you know who these people are and he movie fans TV fans and you're serious",
    "start": "3078250",
    "end": "3084470"
  },
  {
    "text": "people you don't watch TV no one yeah",
    "start": "3084470",
    "end": "3090380"
  },
  {
    "text": "are your suspicions but you're right to be suspicious because these people don't exist okay these faces have been",
    "start": "3090380",
    "end": "3097910"
  },
  {
    "text": "generated by again okay my looking at",
    "start": "3097910",
    "end": "3103070"
  },
  {
    "text": "the dataset was celebrity the model",
    "start": "3103070",
    "end": "3116930"
  },
  {
    "text": "learns how to build similar faces and it's not cut and paste you know it's not",
    "start": "3116930",
    "end": "3121940"
  },
  {
    "text": "the ears of one guy in the nose of another guy it's really people that look",
    "start": "3121940",
    "end": "3127400"
  },
  {
    "text": "like the ones at the base okay this is the tensorflow project what about this",
    "start": "3127400",
    "end": "3133280"
  },
  {
    "text": "one remember when you were five year old you were joined things like this and mom and dad were so impressed and if you",
    "start": "3133280",
    "end": "3139220"
  },
  {
    "text": "have kids you probably have this on your fridge like me okay it's called semantic match okay so different colors for",
    "start": "3139220",
    "end": "3146840"
  },
  {
    "text": "different things and researchers using a semantic map and the data set of course",
    "start": "3146840",
    "end": "3154190"
  },
  {
    "text": "can generate images so you give the semantic map and the model automatically",
    "start": "3154190",
    "end": "3160700"
  },
  {
    "text": "generates a realistic picture based on that this is a crazy project it's it's",
    "start": "3160700",
    "end": "3168800"
  },
  {
    "text": "been a title and no one looked it up you can zoom in on those pictures and there's a lot so if a user can be really",
    "start": "3168800",
    "end": "3175490"
  },
  {
    "text": "interesting even more than all right",
    "start": "3175490",
    "end": "3181360"
  },
  {
    "text": "thirty seconds this just came out did you hear about it tea plants you can",
    "start": "3181930",
    "end": "3187730"
  },
  {
    "start": "3182000",
    "end": "3212000"
  },
  {
    "text": "order it from it's available six June 14th and it's deep running camera that",
    "start": "3187730",
    "end": "3195290"
  },
  {
    "text": "is powerful enough to run image models on the campus so you can train a model",
    "start": "3195290",
    "end": "3202420"
  },
  {
    "text": "the cloud your machine doesn't matter and then you can deploy it to the camera and you can run it locally on the camera",
    "start": "3202420",
    "end": "3210370"
  },
  {
    "text": "and it's pretty fun if you do things like this right it's a picture of my TV",
    "start": "3210370",
    "end": "3215800"
  },
  {
    "text": "and this is not a textured model okay so it's like right it's a live video but of",
    "start": "3215800",
    "end": "3221360"
  },
  {
    "text": "course I just took a picture here and as you can see the chair is correctly detected and the sofa is correctly",
    "start": "3221360",
    "end": "3227690"
  },
  {
    "text": "detective the laptop okay as well my son and myself best persons which is for",
    "start": "3227690",
    "end": "3233180"
  },
  {
    "text": "sure and it's all running a live on the cam with a model that you deploy it",
    "start": "3233180",
    "end": "3238550"
  },
  {
    "text": "there and a piece of code or lambda function that has been deployed to account and running over so it's fully",
    "start": "3238550",
    "end": "3245330"
  },
  {
    "text": "autonomous done with the cloud it just works - plans pretty fun you'll find lots of",
    "start": "3245330",
    "end": "3252800"
  },
  {
    "start": "3251000",
    "end": "3326000"
  },
  {
    "text": "resources so if you want to dive a little bit deeper these are the eight obvious URLs for machine learning and",
    "start": "3252800",
    "end": "3258890"
  },
  {
    "text": "the blog the MX nets pages right",
    "start": "3258890",
    "end": "3264290"
  },
  {
    "text": "searches we want to leave as well if you need to train that together I didn't",
    "start": "3264290",
    "end": "3269720"
  },
  {
    "text": "talk about it today lifetime but you could be interested in a serviceable stage maker that you train",
    "start": "3269720",
    "end": "3276230"
  },
  {
    "text": "very very large models of 2d manage infrastructure right ask me questions if",
    "start": "3276230",
    "end": "3281450"
  },
  {
    "text": "you like and of course the more than happy if you took a look at my blog",
    "start": "3281450",
    "end": "3286940"
  },
  {
    "text": "medium where I post lots of machine learning and debugging stuff I will whole bunch of videos on YouTube",
    "start": "3286940",
    "end": "3293060"
  },
  {
    "text": "as well from conferences and AWS summits",
    "start": "3293060",
    "end": "3298190"
  },
  {
    "text": "so you might find out stuff of interest there and I don't know who some of the nodes that are used today are",
    "start": "3298190",
    "end": "3307210"
  },
  {
    "text": "to treat your brother as well all right I'm done thank you very much I'll stick around for questions and",
    "start": "3309119",
    "end": "3316380"
  },
  {
    "text": "thanks again",
    "start": "3316380",
    "end": "3319558"
  },
  {
    "text": "you",
    "start": "3325090",
    "end": "3327150"
  }
]