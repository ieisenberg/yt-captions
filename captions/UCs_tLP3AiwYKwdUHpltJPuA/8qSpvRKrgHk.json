[
  {
    "text": "(light classical music)",
    "start": "188",
    "end": "3521"
  },
  {
    "text": "- Good morning everyone and thank you so much for coming. And thank you for having\nme here at GOTO Amsterdam I'm very, very happy to be here.",
    "start": "10714",
    "end": "16358"
  },
  {
    "text": "My name is Ray, I'm a developer advocate for the Google Cloud Platform. And there are two things that\nI do, that I enjoy doing.",
    "start": "16358",
    "end": "23055"
  },
  {
    "text": "Number one is I love to\nbring some of the latest and greatest technology from Google that we have to offer to developers\nall around the world.",
    "start": "23055",
    "end": "30805"
  },
  {
    "text": "And the second thing I\nlove to do is to hear about your experiences and your\nfeedback about the session",
    "start": "30805",
    "end": "35841"
  },
  {
    "text": "today upon the technology I'm going to show you today. And also about the Google\nCloud Platform as well. And the best way to reach me is on Twitter",
    "start": "35841",
    "end": "43700"
  },
  {
    "text": "@saturnism, that is my Twitter handle. So if you have any\nquestions, please feel free to reach out from there.",
    "start": "43700",
    "end": "50999"
  },
  {
    "text": "An aspect of technology, I mean I've been doing technology for a very\nlong time, 22 plus years or so.",
    "start": "50999",
    "end": "56536"
  },
  {
    "text": "And prior to Google, I was working at an open source company. Prior to that I was at\na consulting company.",
    "start": "56536",
    "end": "61969"
  },
  {
    "text": "But the other true passion of\nmine is actually traveling. I love to travel and I often\ntake photographs as well.",
    "start": "61969",
    "end": "68629"
  },
  {
    "text": "And if you'd like to see\nsome of the photos in places I've been to, feel free\nto check out my Flickr at",
    "start": "68629",
    "end": "74167"
  },
  {
    "text": "flickr.com/saturnism as well. If you have any questions\nabout these photos, especially",
    "start": "74167",
    "end": "80104"
  },
  {
    "text": "where I'm holding a compass\nin the middle of the desert. I don't have the time\nto talk about it today.",
    "start": "80104",
    "end": "86302"
  },
  {
    "text": "But, I think my sound just went away. There you go. But if you have time, just\ncome up and ask me about",
    "start": "86302",
    "end": "91755"
  },
  {
    "text": "this story and what it's about. So I'm here to talk about\nmicroservices today.",
    "start": "91755",
    "end": "97160"
  },
  {
    "text": "And I'm assuming that many of you have already heard of\nmicroservices, right? How many people here\nknows about microservices?",
    "start": "97160",
    "end": "103777"
  },
  {
    "text": "Yeah, I know, I know. So I'm not here to talk\nabout the theories behind it.",
    "start": "103777",
    "end": "109208"
  },
  {
    "text": "I'm not here to convince\nyou one way or the other of what you should be doing. But, if you do want to explore\nand create microservices",
    "start": "109208",
    "end": "116844"
  },
  {
    "text": "on Azure, here are a few\nthings I'd like to share. And this is going to be mostly\na how-to and experiences",
    "start": "116844",
    "end": "123195"
  },
  {
    "text": "that we are happy to share with everyone. The first problem that\nyou're going to run into",
    "start": "123195",
    "end": "129291"
  },
  {
    "text": "is that as you are\ndecomposing or as you are creating a new application,\nnew system with microservices. The first problem you're\ngoing to run into is",
    "start": "129292",
    "end": "136874"
  },
  {
    "text": "there are going to be so many services. If you decompose a simple\napplication into say two services.",
    "start": "136874",
    "end": "143316"
  },
  {
    "text": "You have the front end, and you have like multiple\nback ends, say two back ends. And that's already three\ninstances of your application",
    "start": "143316",
    "end": "150234"
  },
  {
    "text": "you have to deploy and\nmanage; rather than just one. And of course for redundancy\nreasons, you probably have",
    "start": "150234",
    "end": "155763"
  },
  {
    "text": "multiple instances of\neach of those services. Well and now you're\nlooking at potentially a",
    "start": "155763",
    "end": "161263"
  },
  {
    "text": "multiplication problem. You have three different\nservices, you have to deploy two each, that's six you\nalready have to manage.",
    "start": "161263",
    "end": "168337"
  },
  {
    "text": "Well two is probably not enough. In my scale, some of these\nlayer out more than the other, and eventually you're going\nto see maybe 30, you know,",
    "start": "168337",
    "end": "176674"
  },
  {
    "text": "40, 100, instances that you\nall have to deploy and manage. And that will be fun.",
    "start": "176674",
    "end": "182603"
  },
  {
    "text": "And the traditional way\nof managing these services just don't work anymore. Why? Well typically what's\ngonna happen is that before",
    "start": "182603",
    "end": "189772"
  },
  {
    "text": "your project even starts, maybe even now. You have to request the\nservers to be procured",
    "start": "189772",
    "end": "197094"
  },
  {
    "text": "Right I don't know if\nthat happened to you, but when I was doing my\nproject as a consultant, I have to order the number of servers",
    "start": "197094",
    "end": "203338"
  },
  {
    "text": "even before the project starts. Maybe nine months before\nthe project finishes. And then the servers would come in",
    "start": "203339",
    "end": "209909"
  },
  {
    "text": "and what I have do is do what? I have to write the little\ndocumentation that's",
    "start": "209910",
    "end": "214959"
  },
  {
    "text": "very, very low of how you are\nable to install the servers. And put the right components onto them,",
    "start": "214959",
    "end": "221250"
  },
  {
    "text": "and then finally deploy\nout your application So like the company insisted\nthat you do a piece you have to install.",
    "start": "221251",
    "end": "227197"
  },
  {
    "text": "How you want to configure\nthe hosting, the network, the firewall, and then\nyou probably lay down like",
    "start": "227197",
    "end": "232569"
  },
  {
    "text": "you're using a Java application, you lay down the application server, like Tomcat or WebLogic or whatever.",
    "start": "232570",
    "end": "237866"
  },
  {
    "text": "And then you configure it,\nand finally you deploy your application onto it. And then very quickly, you're\ngoing to find out that the",
    "start": "237867",
    "end": "244932"
  },
  {
    "text": "group woman probably doesn't\nwork the very first time. How many people have that\nhappen to them before? Yeah, I though so.",
    "start": "244932",
    "end": "251180"
  },
  {
    "text": "And the other problem\nyou're going to find out, is that in that in the production\nenvironment, you are going",
    "start": "251180",
    "end": "257336"
  },
  {
    "text": "to run into the trouble\nwhere it just doesn't work. And it works in your house\nof set up production.",
    "start": "257336",
    "end": "264472"
  },
  {
    "text": "Or how many people have\nthat happen to them as well? Yeah, (laughs) it happens all the time. And the problem with that\nis that usually that this",
    "start": "264472",
    "end": "271955"
  },
  {
    "text": "long and complicated procedure\nis either done through manually, where somebody\nactually follows it to",
    "start": "271955",
    "end": "279204"
  },
  {
    "text": "create that environment. And it's not very consistent. And if you're scripted also,\nyou have to write that script.",
    "start": "279204",
    "end": "285105"
  },
  {
    "text": "And if you make any mistake\nin that script, then you're also going to run into troubles. And those scripts may\neven run differently from",
    "start": "285105",
    "end": "291293"
  },
  {
    "text": "environment to environment. So one of the first things\nthat we need to solve is how do you actually\ndeploy the same application",
    "start": "291293",
    "end": "299412"
  },
  {
    "text": "multiple times at this scalable fashion? And one of the first things that you",
    "start": "299412",
    "end": "304908"
  },
  {
    "text": "need to look into of\ncourse, is the container. How many people here know\nabout back end containers? Oh everyone, yay!",
    "start": "304908",
    "end": "310416"
  },
  {
    "text": "All right, so not going\nto into those in detail, but just remember-- (disruptive scuffling) Hello, hi.",
    "start": "310416",
    "end": "316191"
  },
  {
    "text": "(laughs) Just remember that if you're using containers your back end-- (disruptive scuffling)",
    "start": "316191",
    "end": "322819"
  },
  {
    "text": "The insulation procedures\nin a sequential order. Just checking if there's\nanother sound, yeah?",
    "start": "322819",
    "end": "329452"
  },
  {
    "text": "And that is still that\nkind of thing in terms of what you want to run. And that image can be\ndeployed anywhere else.",
    "start": "329452",
    "end": "335058"
  },
  {
    "text": "And you can very quickly send\nout new application instances very, very quickly. The other problem you're\ngoing to see is that",
    "start": "335058",
    "end": "341048"
  },
  {
    "text": "if you have so many services, you don't want to put\nall of them individually one on a single machine, right?",
    "start": "341049",
    "end": "348538"
  },
  {
    "text": "Because if you have 100 servers, you don't want to have 100 machines. So what you need to do\nis to bean pack them as",
    "start": "348538",
    "end": "354711"
  },
  {
    "text": "efficiently as possible into a single, or the fewest machine\npossible, so that you have",
    "start": "354711",
    "end": "359858"
  },
  {
    "text": "less infrastucture to manage. And when you do that,\nthen you're going to run into issues where occasionally\nyou may have multiple",
    "start": "359859",
    "end": "366326"
  },
  {
    "text": "instances on the same machine. The first thing you're\ngoing to run into is the port conflicts. And you want to avoid\nthose as much as possible.",
    "start": "366326",
    "end": "373086"
  },
  {
    "text": "And then you have other\nchallenges as well. How do you make sure that\nthey're all up and running?",
    "start": "373086",
    "end": "378382"
  },
  {
    "text": "There are so many to monitor. How do you do that? You cannot do that manually, of course. You need to be able to check the health",
    "start": "378382",
    "end": "384443"
  },
  {
    "text": "of these systems and individual services, so that when they have issues, maybe you need to restart it.",
    "start": "384443",
    "end": "390099"
  },
  {
    "text": "And then again, you don't\nwant to do it mentally. You might want to do this\nautomatically as well. And one particular challenge that I see",
    "start": "390099",
    "end": "395834"
  },
  {
    "text": "and they need to ask me\nis about environments. If you have say 30, 20\nservices in your environment",
    "start": "395834",
    "end": "402333"
  },
  {
    "text": "that you have to run and manage. How do you create more\nof these environments and reproduce it in a consistent fashion?",
    "start": "402333",
    "end": "409203"
  },
  {
    "text": "Remember, deploying one\napplication is hard enough when you don't have the\nright tooling to do so. You'll embrace your hand.",
    "start": "409203",
    "end": "415475"
  },
  {
    "text": "Now you're going to be\ndealing with hundreds of them, and you have to think about the tools that you're going to use.",
    "start": "415475",
    "end": "420706"
  },
  {
    "text": "So today is all about the\ntools I'm going to share.",
    "start": "420706",
    "end": "424873"
  },
  {
    "text": "Many of the dotcoms, the\ntechnology companies, have the tools to this,\nincluding Google of course.",
    "start": "426096",
    "end": "432491"
  },
  {
    "text": "And I think it's partially\nwhat makes microservices architecture successful. If you actually go into\nthis architecture without",
    "start": "432492",
    "end": "439570"
  },
  {
    "text": "the right tooling, you may\nactually eventually find yourself in a situation\nthat you just simply cannot manage any of these at scale.",
    "start": "439571",
    "end": "447199"
  },
  {
    "text": "So at Google, just remember this. Everything at Google, all\nopen services that we offer, including Search, YouTube, Gmail.",
    "start": "447199",
    "end": "454358"
  },
  {
    "text": "I'm assuming everyone in here\nuses some of these things, they all run in containers in Google.",
    "start": "454358",
    "end": "459556"
  },
  {
    "text": "And we're not using docker containers, but we're using the fundamental\ncontainer technology. In fact, Google contributed\nthe fundamental technology",
    "start": "459556",
    "end": "468997"
  },
  {
    "text": "that makes containers possible,\nwhich is called cgroups. We contributed cgroups\ninto the Linux credo",
    "start": "468997",
    "end": "474766"
  },
  {
    "text": "many, many years ago. And that is the fundamental\ntechnology that all of the new container products are\nkind of using today.",
    "start": "474766",
    "end": "482047"
  },
  {
    "text": "At Google, we launched about two billion containers per week. Now this number is not as\nimpressive as it sounds.",
    "start": "482047",
    "end": "488142"
  },
  {
    "text": "Why, because this is the US billion. It's not the European billion. I know there's a very big difference.",
    "start": "488142",
    "end": "494102"
  },
  {
    "text": "(laughing) Yeah I know. It's not two million million, it's only two thousand million.",
    "start": "494102",
    "end": "499362"
  },
  {
    "text": "It's not, yeah there's a\nworldwide huge difference here, but we know how to manage containers.",
    "start": "499362",
    "end": "504397"
  },
  {
    "text": "We know how to manage\nall services at scale. This is what we do at\nGoogle, as engineers.",
    "start": "504397",
    "end": "511330"
  },
  {
    "text": "We cannot possibly deploy the application the traditional way, that is why,",
    "start": "512348",
    "end": "518855"
  },
  {
    "text": "this is what we do. If I have a Hello service,\nHello application . A very easy one.",
    "start": "518856",
    "end": "524013"
  },
  {
    "text": "It's the only one I could write. Rather than deploying into\nindividual machines ourselves or with a script of some sort\nspecifically designed for",
    "start": "524013",
    "end": "531982"
  },
  {
    "text": "those machines. We deploy to a target of a cell. A cell is really just\na cluster of machines.",
    "start": "531982",
    "end": "538540"
  },
  {
    "text": "And a single cluster of machines\nat Google like single cell can be composed of up to\n10,000 machines, okay?",
    "start": "538540",
    "end": "545457"
  },
  {
    "text": "So we don't deal with\neach machine individually, 'cause that would be just way too many. But what we do is we run\ntools to do this for me.",
    "start": "545457",
    "end": "552218"
  },
  {
    "text": "We can say how many veers\nacross are to deploy to? Go figure it out.",
    "start": "552218",
    "end": "557637"
  },
  {
    "text": "We specify the binary\nnumber we want to deploy. These are potentially static\nbinaries that can just be",
    "start": "557637",
    "end": "562942"
  },
  {
    "text": "copied and deployed on any of the servers. We can specify arguments,\nbut most importantly we are able to specify\nthe resource requirements.",
    "start": "562942",
    "end": "571123"
  },
  {
    "text": "And this is where\ncontainerization is going to be really helpful because\nwhen running multiple services, multiple applications,",
    "start": "571123",
    "end": "578005"
  },
  {
    "text": "you don't want them to\nstep over each other's toes when they are fighting and\ncompeting for resources, right?",
    "start": "578005",
    "end": "583403"
  },
  {
    "text": "You don't want one wrong way\nservice to take 100% of the CPU and like all of the other applications",
    "start": "583403",
    "end": "588772"
  },
  {
    "text": "just don't work anymore. So with resource isolation,\nyou're able to contain them so that they don't\nexceed their boundaries.",
    "start": "588772",
    "end": "594746"
  },
  {
    "text": "And then we can say how many\ninstances of this service do we want to run? We can say well I need five replicas,",
    "start": "594747",
    "end": "600910"
  },
  {
    "text": "that means five instances. Or, I Google, maybe we\nneed a little bit more. And it's super popular,",
    "start": "600910",
    "end": "606417"
  },
  {
    "text": "'cause that's the only thing I can write. We want 10,000 instances,\nwe just say 10,000. And this is all the container is,",
    "start": "606417",
    "end": "612339"
  },
  {
    "text": "you just say how many you want, you say what you want to\ndeploy and we deploy it. And this is the way it\nworks behind the scenes.",
    "start": "612339",
    "end": "619090"
  },
  {
    "text": "We will copy the binary into a central repository of some sort, like a share-file system",
    "start": "619090",
    "end": "624315"
  },
  {
    "text": "where all the machines can get to. Okay and then we're going to\nsend that configuration file",
    "start": "624315",
    "end": "630035"
  },
  {
    "text": "into our internal tool. The internal tool is called Borg. And there is a Master node\nwhich is called the BorgMaster.",
    "start": "630035",
    "end": "637844"
  },
  {
    "text": "And the BorgMaster understands\nhow to receive the YAML file, or the configuration file,\nand knows how to deploy it.",
    "start": "637844",
    "end": "643917"
  },
  {
    "text": "Once the BorgMaster receives it, it's going to consult\nthe scheduler which then will be asking all the\nmachines the same question.",
    "start": "643917",
    "end": "650465"
  },
  {
    "text": "Do you have enough resources\nto run this application? And it's going to check\nall of the available server",
    "start": "650465",
    "end": "656122"
  },
  {
    "text": "nodes to see who's available\nto run this application. If you cannot run it,\nit will just skip you.",
    "start": "656122",
    "end": "661584"
  },
  {
    "text": "If you can, then what it's\ngoing to tell you to do is to go ahead and download that image.",
    "start": "661584",
    "end": "667309"
  },
  {
    "text": "And then start it. And we can do this very, very quickly and very quickly you're going to see my",
    "start": "667309",
    "end": "672689"
  },
  {
    "text": "Hello World application running the Google data center, simply by\ndeploying this one descriptor.",
    "start": "672689",
    "end": "678220"
  },
  {
    "text": "And we can do this so fast,\nthat we can deploy about 10,000 instances in about\ntwo minutes and 30 seconds.",
    "start": "678220",
    "end": "685112"
  },
  {
    "text": "And that's partially because\nwe also have a very, very fast internal network that we can actually copy these large images\naround very efficiently.",
    "start": "685112",
    "end": "693221"
  },
  {
    "text": "And you do get that kind of\nbenefits if you are using the Google Cloud platform as well.",
    "start": "693221",
    "end": "699288"
  },
  {
    "text": "So that's how we do things within Google. But that's not enough, right? Because that's all internal.",
    "start": "699288",
    "end": "706629"
  },
  {
    "text": "If you want to try this out yourself, well this is what you need to do. This is where that\nKubernetes come in, right?",
    "start": "706629",
    "end": "713865"
  },
  {
    "text": "Kubernetes is the open source\nproject that is designed to orchestrate containers.",
    "start": "713865",
    "end": "720102"
  },
  {
    "text": "So if you're running your\napplications inside of containers and if you need to deploy it at scale, then you can use Kubernetes\nto orchestrate them across",
    "start": "720103",
    "end": "726852"
  },
  {
    "text": "multiple machines, just like\nin the similar fashion that we do within Google as well.",
    "start": "726853",
    "end": "731905"
  },
  {
    "text": "And Kubernetes is actually\nbased on the experiences and the scale that Google had had",
    "start": "731906",
    "end": "737180"
  },
  {
    "text": "for the past many, many years. And deploying so many containers, we know how to do this at scale.",
    "start": "737180",
    "end": "743797"
  },
  {
    "text": "We know how to deal\nwith the common issues. So then we actually open\nsource's Kubernetes project.",
    "start": "743797",
    "end": "748821"
  },
  {
    "text": "It's all open source, it's written in Go. The important take away\non this slide is that",
    "start": "748822",
    "end": "754192"
  },
  {
    "text": "it will run in many\ndifferent environments, in multiple clouds, and also on print.",
    "start": "754192",
    "end": "759425"
  },
  {
    "text": "And that's super important\nas we go into the demo in a few minutes. The community is very, very vibrant.",
    "start": "759425",
    "end": "765443"
  },
  {
    "text": "We're on version 1.2, I think\n1.3 is coming out very soon. We have many, many\ncontributors and many commits",
    "start": "765443",
    "end": "770891"
  },
  {
    "text": "and many stars. Well basically the gist is\nif you wanna try it out, please get involved with\na community as well.",
    "start": "770891",
    "end": "777407"
  },
  {
    "text": "They have a Slack channel,\nthey have a forum, they're very responsive on GitHub as well. So please go check if out\nif you'd like to contribute,",
    "start": "777407",
    "end": "784703"
  },
  {
    "text": "or learn more about\nKubernetes in detail also. But today I'm just going\nto give you a taste of it. So this is how it works.",
    "start": "784703",
    "end": "790918"
  },
  {
    "text": "It's a very easy slide for me to make. If you haven't noticed, all\nI had to do is copy and paste",
    "start": "790919",
    "end": "795922"
  },
  {
    "text": "the previous one, yeah and\ndo a string replace, yay. So this is how it works. Rather than a static binary,\nwe're building a container",
    "start": "795922",
    "end": "804498"
  },
  {
    "text": "image which is inherently\na static binary anyways. And it's a docker image and\nI can actually push this",
    "start": "804498",
    "end": "810747"
  },
  {
    "text": "image to a central repository\nand in the docker world, this could be known as a\ndocker registry, right? You can have the registry online.",
    "start": "810747",
    "end": "816868"
  },
  {
    "text": "You can have a public\none or a private one. You can store it wherever you want as long as the machine can get to it.",
    "start": "816868",
    "end": "822444"
  },
  {
    "text": "Then you're going to be\nable to write like a simular configuration file that\nsays what you wanna deploy. You push it to the master,",
    "start": "822444",
    "end": "828312"
  },
  {
    "text": "the master checks against its scheduler, and then it checks with all\nthe machines in the cluster, and say if you have enough\nresources to do it to run",
    "start": "828312",
    "end": "835239"
  },
  {
    "text": "the application and then\nit's going to pull down the container image and start it. Easy right?",
    "start": "835239",
    "end": "840285"
  },
  {
    "text": "It's very simple concept,\nbut it's very powerful",
    "start": "840285",
    "end": "844285"
  },
  {
    "text": "because well it first of\nall allows you to describe what you wanna deploy in a simple file.",
    "start": "845398",
    "end": "851542"
  },
  {
    "text": "Just like that, it can specify\nthe resource limits as well. But you can also specify how\nmany instances of something",
    "start": "851542",
    "end": "858048"
  },
  {
    "text": "you want very similar to\nwhat we do internally. But here's the catch, or\nthe most important thing",
    "start": "858048",
    "end": "864287"
  },
  {
    "text": "that you wanna remember. With Kubernetes, you're\nreally configuring, you're viewing your entire cluster",
    "start": "864288",
    "end": "870868"
  },
  {
    "text": "as a single machine in a way. All the resources on individual\nmachines, all those CPUs,",
    "start": "870868",
    "end": "876327"
  },
  {
    "text": "and its memories that's available to you, you'll manage them through\na single pan of view through Kubernetes.",
    "start": "876327",
    "end": "882169"
  },
  {
    "text": "They're just one\nKubernetes cluster to you. You deploy it to this one\nsingle Kubernetes cluster",
    "start": "882169",
    "end": "887456"
  },
  {
    "text": "and will take care of how\nto put it on the actual machine for you behind the scenes. So in all of the talks, I'm\njust gonna go into the demo",
    "start": "887456",
    "end": "895506"
  },
  {
    "text": "very quickly, not that one. So I just want a show of hands,",
    "start": "895506",
    "end": "900954"
  },
  {
    "text": "how many people here are Java developers? Oh, I'm in the right\nplace, okay, fantastic.",
    "start": "900954",
    "end": "906230"
  },
  {
    "text": "So you probably already\nknow how to containerize your Java applications.",
    "start": "906230",
    "end": "911454"
  },
  {
    "text": "You either use the Dockerfile to do it, or I just want to point out one thing. Which is there are some\nreally, really nice plugins",
    "start": "911455",
    "end": "919128"
  },
  {
    "text": "you can actually use if you\nhaven't used them already. Let me see here, so Spotify,\nactually produced a couple",
    "start": "919128",
    "end": "927678"
  },
  {
    "text": "of plugins for containerizing\nJava applications with Maven. They have two, there is\na Docker Maven plugin",
    "start": "927678",
    "end": "935430"
  },
  {
    "text": "and there's a Dockerfile Maven plugin. Now don't ask why there are\ntwo, it's a better question",
    "start": "935430",
    "end": "940735"
  },
  {
    "text": "for them, but actually I know why. But they are both very good\nand they do things a little",
    "start": "940736",
    "end": "946309"
  },
  {
    "text": "bit differently. But the beauty here is that\nyou can actually capture your docker image creation\nprocess inside of your",
    "start": "946309",
    "end": "952420"
  },
  {
    "text": "pom.maven, pom.xml. And the beauty of this\nis you can actually tie this into the execution\nfaces so that whenever you're",
    "start": "952420",
    "end": "961168"
  },
  {
    "text": "packaging your JAR files\nyou can also produce the container image at the same time. This is really useful.",
    "start": "961168",
    "end": "966662"
  },
  {
    "text": "And then you can also tag it\nwith the version numbers of your Java application too. Or if you want, you can also\ntag it with your GID hash also.",
    "start": "966663",
    "end": "975162"
  },
  {
    "text": "So let me go back to\nthis service right here. Another question is, how\nmany people here heard about",
    "start": "975162",
    "end": "982254"
  },
  {
    "text": "Kubernetes before? All right. Well before I talk about\nit obviously (laughs).",
    "start": "982254",
    "end": "989002"
  },
  {
    "text": "Sorry, but, how many\npeople here has used it?",
    "start": "989002",
    "end": "992752"
  },
  {
    "text": "Oh, well I'm glad you are here. So how many people have seen in action? Seen it? Oh quite a few.",
    "start": "994054",
    "end": "999521"
  },
  {
    "text": "Okay so many of you haven't seen this, so this is gonna be new. Okay so first of all what I'm going to do, what I have done already is\nthat I created this image",
    "start": "999521",
    "end": "1006373"
  },
  {
    "text": "and I push it into a registry. And now I have this image\nin the registry somewhere. I just want to run this at scale\non many different machines.",
    "start": "1006373",
    "end": "1014475"
  },
  {
    "text": "And the way I can do that is, not delete. Kubectl run.",
    "start": "1014475",
    "end": "1018058"
  },
  {
    "text": "So I don't know if you\ncan see this on the top. Yes you can hopefully. So to run the image, a\ncontainer image in a cluster",
    "start": "1019485",
    "end": "1026380"
  },
  {
    "text": "of machines is very easy with Kubernetes. Here I have a cluster of machines in the Google Cloud Platform.",
    "start": "1026380",
    "end": "1032108"
  },
  {
    "text": "I have four different\nnodes that can actually run my workload, or my applications. All I have to do is say kubectl run.",
    "start": "1032108",
    "end": "1038878"
  },
  {
    "text": "You can name this however you want. I'm just gonna call\nthis helloworld-service and then I can specify the image.",
    "start": "1038879",
    "end": "1046759"
  },
  {
    "text": "This is the image that I want to deploy. And this can be located anywhere that the machines can get to.",
    "start": "1046759",
    "end": "1053157"
  },
  {
    "text": "And I'm using a private\ndocker registry that comes within the Google Cloud Platform itself.",
    "start": "1053157",
    "end": "1058556"
  },
  {
    "text": "So that I just push my\nimage there and then I can download it from my\nprojects in Google Cloud.",
    "start": "1058556",
    "end": "1063711"
  },
  {
    "text": "And then here's the\nimportant part, the dash L, following that, I can specify\na bunch of key value pairs.",
    "start": "1063711",
    "end": "1069680"
  },
  {
    "text": "And this is very important\nbecause these key value pairs are labels and that's a\nvery important concept",
    "start": "1069680",
    "end": "1075247"
  },
  {
    "text": "in Kubernetes because\neverything in Kubernetes can be labeled. And the label, the keyed\nin value pairs, you can",
    "start": "1075247",
    "end": "1081850"
  },
  {
    "text": "name it however you want. For example, if you like,\nyou can say I want to label this deployment version is 1.0.",
    "start": "1081850",
    "end": "1089693"
  },
  {
    "text": "I can say that this is the\nenvironment of staging, maybe. I can also say that this is for the conference GOTO Amsterdam, right?",
    "start": "1089693",
    "end": "1096415"
  },
  {
    "text": "I can name this however I want. The important take away\nhere is that with labels,",
    "start": "1096416",
    "end": "1101881"
  },
  {
    "text": "in the future you can query Kubernetes, and say please tell me all\nof the applications who",
    "start": "1101881",
    "end": "1107992"
  },
  {
    "text": "has the label of app is\nequal to helloworld-service, and of the version is equal to one.",
    "start": "1107992",
    "end": "1113218"
  },
  {
    "text": "You can query this later\nvia the API and it's also very important when you want to route",
    "start": "1113218",
    "end": "1118487"
  },
  {
    "text": "the traffic to these\napplication instances. So that's all I have to do.",
    "start": "1118487",
    "end": "1123523"
  },
  {
    "text": "I'm just gonna run this\ncommand line to start a service in my cloud in my Kubernetes cluster,",
    "start": "1123523",
    "end": "1130912"
  },
  {
    "text": "and as you can see very\nquickly, it just got deployed. And I haven't done any\nmanual scripting here. I haven't done anything\nelse to say which machine",
    "start": "1130912",
    "end": "1137638"
  },
  {
    "text": "to deploy to. I got four different nodes\nhere, and I can see that this got deployed to\none of the nodes, TPLA.",
    "start": "1137638",
    "end": "1145459"
  },
  {
    "text": "The two boxes here are\nvery, very important. The box in gray is what we\ncall a pod, a pod, P-O-D.",
    "start": "1145459",
    "end": "1151826"
  },
  {
    "text": "A pod is the atomic unit that Kubernetes can actually manage.",
    "start": "1151826",
    "end": "1157034"
  },
  {
    "text": "Now you may be asking, hold on a second, I thought we were all talking\nabout containers here. I thought containers are the atomic",
    "start": "1157034",
    "end": "1163708"
  },
  {
    "text": "unit that we should be managing. But in Kubernetes it's called a pod. Now what is a pod?",
    "start": "1163708",
    "end": "1168771"
  },
  {
    "text": "A pod can be composed\nof a single container or multiple containers, okay?",
    "start": "1168771",
    "end": "1175266"
  },
  {
    "text": "And they are guaranteed to\nhave the same IP address. A pod has a unique IP address.",
    "start": "1175266",
    "end": "1180548"
  },
  {
    "text": "They are guaranteed to\nlive and die together. So when a pod dies, all\nthe containers within the pod will go away.",
    "start": "1180548",
    "end": "1186126"
  },
  {
    "text": "And they are guaranteed\nto be scheduled onto the same physical machine. Now what would you actually\nrun within the same",
    "start": "1186126",
    "end": "1192233"
  },
  {
    "text": "pod of the different containers? If you have an application\nwith the front end and the back end.",
    "start": "1192233",
    "end": "1198570"
  },
  {
    "text": "Are they tightly coupled\ntogether that you want to run inside the same pod? The answer is actually no you\nprobably don't wanna do that.",
    "start": "1198570",
    "end": "1205307"
  },
  {
    "text": "Why? Because if you do that, you cannot scale the front end and the\nback end independently from each other, okay?",
    "start": "1205307",
    "end": "1211151"
  },
  {
    "text": "So you want them to run in\nseparate pods in this case. So what would be a good\nuse case for the pod?",
    "start": "1211151",
    "end": "1216631"
  },
  {
    "text": "Well maybe you have a\nJava application that's exposing metrics via GMX. And your system has another collector that",
    "start": "1216631",
    "end": "1223096"
  },
  {
    "text": "needs to collect the metrics\nwith a different format. Well rather than writing and\nchanging your application,",
    "start": "1223096",
    "end": "1228873"
  },
  {
    "text": "to talk to that format, what you can do is to run\na sidecar container in the same pod that's able to\nunderstand GMX metrics",
    "start": "1228873",
    "end": "1236662"
  },
  {
    "text": "and also be able to push\nit to the metric server the way that the metric server understands. So you can actually compose\nyour application with",
    "start": "1236662",
    "end": "1243404"
  },
  {
    "text": "multiple tightly coupled\ncomponents if you want to. Now the box in blue, we\ncall this a deployment.",
    "start": "1243404",
    "end": "1250894"
  },
  {
    "text": "And it does a few things for you. And very importantly, is that you can tell the deployment to, well first\nof all deploy the application.",
    "start": "1252357",
    "end": "1259374"
  },
  {
    "text": "When I was running this,\nI was actually deploying the copies of the pods. What you can also do is to scale.",
    "start": "1259374",
    "end": "1265559"
  },
  {
    "text": "You can say kubectl scale the\ndeployment helloworld-service and how many do we want?",
    "start": "1265559",
    "end": "1271747"
  },
  {
    "text": "We can just say replicas is\nequal to, and I can say four and it's going to tell the\ndeployment that any four",
    "start": "1271747",
    "end": "1277585"
  },
  {
    "text": "instances now deployment is going to say, check again, something\nelse is called the replica. I said, to say hey, do I\nhave four instances now?",
    "start": "1277585",
    "end": "1284354"
  },
  {
    "text": "Do I have four replicas? If I don't, then I need to spin out more. If I do, then I can stop. If any one of these instances goes away,",
    "start": "1284354",
    "end": "1291006"
  },
  {
    "text": "it will actually notice it and say, oh no, I have three, but I need four. Let me go ahead and start\nanother one for you.",
    "start": "1291006",
    "end": "1297783"
  },
  {
    "text": "So that's very easy to\ndo and we're going to see deployment in more detail in a second. Now notice that every pod\nhere, every box in gray,",
    "start": "1297783",
    "end": "1305437"
  },
  {
    "text": "has a unique IP address. Now these IP addresses\nare unique to the pod. They can talk to each\nother, even if they're done",
    "start": "1305437",
    "end": "1311815"
  },
  {
    "text": "on the same machine, but they come and go. They are ephemeral.",
    "start": "1311816",
    "end": "1316827"
  },
  {
    "text": "Then the question is how do you actually get to these services? How do you actually consume it?",
    "start": "1316827",
    "end": "1322659"
  },
  {
    "text": "If you need to know, oh the IP addresses. That's probably not the best way to do it. Typically what you do today\nin your infrastructure,",
    "start": "1322659",
    "end": "1329332"
  },
  {
    "text": "is you create a load balancer\nin front of this, right? And then you configure the\nload balancer to know which are",
    "start": "1329332",
    "end": "1335583"
  },
  {
    "text": "the back end endpoints. In Kubernetes, well\nthese back end endpoints can come and go, the IP\naddresses could change.",
    "start": "1335583",
    "end": "1342185"
  },
  {
    "text": "So you don't want to\nconfigure those manually. But in Kubernetes, we have\nthe first class concept, which is called a service, okay?",
    "start": "1342186",
    "end": "1349364"
  },
  {
    "text": "And a service is really\nalmost like a load balancer. Once you provision it, it\nwill give you this stable",
    "start": "1349364",
    "end": "1355585"
  },
  {
    "text": "IP address that will then be able to load balance your request. So to expose all of\nthese pods as a service,",
    "start": "1355585",
    "end": "1362436"
  },
  {
    "text": "all I have to do is do kubectl expose,",
    "start": "1362436",
    "end": "1365603"
  },
  {
    "text": "there we go. Kubectl expose the deployment\nwhich is the box in the blue. And I can say the port number\n8080, that's the external",
    "start": "1368309",
    "end": "1376549"
  },
  {
    "text": "port I want to expose at, and then the target-port is\n8080 'cause that's where my application's running on.",
    "start": "1376549",
    "end": "1381624"
  },
  {
    "text": "So I can expose this\napplication by putting a load balance in the front\nand that is the box in green.",
    "start": "1381624",
    "end": "1388256"
  },
  {
    "text": "And the way that the service\ndecides where to route the traffic to is by using labels.",
    "start": "1388256",
    "end": "1394888"
  },
  {
    "text": "So if a traffic request\ncomes in into this green box, in this service, it's going to see",
    "start": "1394888",
    "end": "1400030"
  },
  {
    "text": "well which one of the gray\nboxes, which one of the pods matches my label descriptor\nthat says well it has to",
    "start": "1400030",
    "end": "1406328"
  },
  {
    "text": "be routed to the application that's called helloworld-service. And now I can actually\nget to this service.",
    "start": "1406328",
    "end": "1412020"
  },
  {
    "text": "Now another very big\nquestion that you're going to run in to is how do you\ndiscover your services?",
    "start": "1412020",
    "end": "1417243"
  },
  {
    "text": "If you have multiple of these things, how do you actually know the IP address that you need to connect to?",
    "start": "1417243",
    "end": "1422805"
  },
  {
    "text": "Well many people actually\nrun a separate registry of some sort. Well Kubernetes actually\nhave this right out",
    "start": "1422806",
    "end": "1427815"
  },
  {
    "text": "of the box as well. So there are multiple ways to do this. The first way is\npotentially using the API.",
    "start": "1427815",
    "end": "1434602"
  },
  {
    "text": "So I can access everything that\nI do from the command line. They all make API requests\nbehind the scenes.",
    "start": "1434602",
    "end": "1440099"
  },
  {
    "text": "So even to know which services\nare actually available, I can actually get back\neither YAML or JSON Payload",
    "start": "1440099",
    "end": "1447166"
  },
  {
    "text": "and I can see all of the\nservices that's running here. So if I go and look\nfor helloworld-service,",
    "start": "1447166",
    "end": "1452436"
  },
  {
    "text": "I can have all the details about it. And I can also get its IP address, right? But you don't wanna do\nthis every single time.",
    "start": "1452436",
    "end": "1459528"
  },
  {
    "text": "Kubernetes actually exposed this service as a DNS host entry for\nyou right out of the box.",
    "start": "1459528",
    "end": "1465138"
  },
  {
    "text": "Yeah that's really nice. So for example, let me just\ndo one more thing here. If I want to get inside of the cluster,",
    "start": "1465138",
    "end": "1472200"
  },
  {
    "text": "and the way I'm going\nto do it is by running a back script directly inside\nof the Kubernetes cluster",
    "start": "1472200",
    "end": "1478226"
  },
  {
    "text": "and I'm going to do a kubectl exec -ti. The name of the container and bash bin",
    "start": "1478227",
    "end": "1485479"
  },
  {
    "text": "and if I have internet,\ndigital connect, there we go. It's really slow, get off, stop watching YouTube videos please.",
    "start": "1485479",
    "end": "1491894"
  },
  {
    "text": "So I'm inside the Kubernetes\ncluster right now and what I'm going to do is I\ncan curl this URL of course.",
    "start": "1491895",
    "end": "1498610"
  },
  {
    "text": "I can do the IP address 8080/hello/ray",
    "start": "1498610",
    "end": "1502777"
  },
  {
    "text": "And that worked, whew! That was a little slow (laughs). But like I said, you don't\nwant to do this all the time",
    "start": "1504381",
    "end": "1510327"
  },
  {
    "text": "with the IP address. And like I said we actually\nexposed the DNS name. So this becomes very, very easy to do.",
    "start": "1510327",
    "end": "1516744"
  },
  {
    "text": "So I can say helloworld\nservice and there we go.",
    "start": "1516744",
    "end": "1520744"
  },
  {
    "text": "It just resolves it right\nbehind the scenes for you. So you don't really have\nto run a separate registry",
    "start": "1522336",
    "end": "1527339"
  },
  {
    "text": "and node if you don't want to. When the instances come and go, they will actually update the\nendpoints behind the scenes",
    "start": "1527339",
    "end": "1532484"
  },
  {
    "text": "and it will always route to the right and available instances. Now if you really want to\nknow what endpoints is it",
    "start": "1532484",
    "end": "1540994"
  },
  {
    "text": "behind the scenes for\nthis particular service. What I can do is that, this\nis called helloworld-service I can actually do kubectl\nget endpoints and the name",
    "start": "1540994",
    "end": "1550454"
  },
  {
    "text": "of the service and I can\nactually see a list of endpoints that's available and ready to serve.",
    "start": "1550454",
    "end": "1557046"
  },
  {
    "text": "So if you don't want to do a\nservice side load balancing, if you wanna do a client\nside load balancing, you can still get to\nthis IP addresses also.",
    "start": "1557046",
    "end": "1565140"
  },
  {
    "text": "Yeah, that's all good,\nit's pretty easy, right? It's very easy to do. But what I have just done\nis really just deploy",
    "start": "1565140",
    "end": "1571558"
  },
  {
    "text": "a stateless service. And of course your application\nprobably have state.",
    "start": "1571558",
    "end": "1577118"
  },
  {
    "text": "So to show you a little\nbit more of how to deploy a full stack application with state,",
    "start": "1577118",
    "end": "1583838"
  },
  {
    "text": "I'd like to invite my\nco-speaker Arjen Wassink to the the stage. - [Arjen] Well thanks.",
    "start": "1583838",
    "end": "1589650"
  },
  {
    "text": "Is the mic on or? - Yeah, where's the mic?",
    "start": "1589650",
    "end": "1594430"
  },
  {
    "text": "- Okay let's do it without the mic. I'm (mumbling)",
    "start": "1596721",
    "end": "1602978"
  },
  {
    "text": "and everything that comes with it. It's quite a lot (mumbling)",
    "start": "1605700",
    "end": "1611772"
  },
  {
    "text": "so one of the things that\nwe see is that the kind of applications that we were\nbuilding some years ago,",
    "start": "1611772",
    "end": "1619047"
  },
  {
    "text": "(mumbling) and now we\nare having more and more",
    "start": "1620287",
    "end": "1624454"
  },
  {
    "text": "into development software\nwe need to route, so we're going with microservices.",
    "start": "1625963",
    "end": "1631784"
  },
  {
    "text": "So the shear number of\ninstances we have many instances getting burned.",
    "start": "1631785",
    "end": "1638128"
  },
  {
    "text": "We had to use three for that. And like Ray already\nsaid, containerization",
    "start": "1638128",
    "end": "1643608"
  },
  {
    "text": "(mumbling) and the\norchestration Kubernetes",
    "start": "1645430",
    "end": "1649597"
  },
  {
    "text": "really helps in creating\nan environment where we",
    "start": "1650531",
    "end": "1654531"
  },
  {
    "text": "can manage a box with\na number of (mumbling).",
    "start": "1656001",
    "end": "1660168"
  },
  {
    "text": "So I want to test you Ray.",
    "start": "1663571",
    "end": "1665738"
  },
  {
    "text": "- Yeah? - I brought some with me. - Okay - I created a small application.",
    "start": "1668839",
    "end": "1675139"
  },
  {
    "text": "Contains a mistake. It's a (mumbling) based application",
    "start": "1675140",
    "end": "1680146"
  },
  {
    "text": "where you can enter your favorite artists, the albums he has produced, and the songs that are on it",
    "start": "1680146",
    "end": "1686494"
  },
  {
    "text": "You can enter and add\n(mumbling) tracks, and so on. And you can also delete and edit",
    "start": "1688780",
    "end": "1695738"
  },
  {
    "text": "so basically you've got a (mumbling).",
    "start": "1695738",
    "end": "1699905"
  },
  {
    "text": "I was at (mumbling)\nquite easy architecture.",
    "start": "1702388",
    "end": "1706554"
  },
  {
    "text": "We have from that the angle of JS that's being served for (mumbling)",
    "start": "1708338",
    "end": "1714599"
  },
  {
    "text": "a small (mumbling).",
    "start": "1714599",
    "end": "1717599"
  },
  {
    "text": "Backed by Java Red Services to take logic correct operations\nand the data is restored",
    "start": "1720324",
    "end": "1729300"
  },
  {
    "text": "and I just used (mumbling). No offense (mumbling)",
    "start": "1729300",
    "end": "1734397"
  },
  {
    "text": "and running on Kubernetes. - Okay, what was that?",
    "start": "1734397",
    "end": "1739468"
  },
  {
    "text": "- Before we get started, I want to make it even more more difficult. - [Ray] All Right (laughs).",
    "start": "1740546",
    "end": "1747185"
  },
  {
    "text": "- I want to see it running\non a Raspberry Pi Platform. - Okay, all right, let's see it.",
    "start": "1747186",
    "end": "1753749"
  },
  {
    "text": "- So I brought my micro related server (laughs) - For microservices?",
    "start": "1753749",
    "end": "1759956"
  },
  {
    "text": "- Yes, for microservices so\nwe need to route (mumbling).",
    "start": "1759956",
    "end": "1764123"
  },
  {
    "text": "- Right, but you've done\nthat for me already, thank you very much. (laughs) - I was being polite.",
    "start": "1766740",
    "end": "1773235"
  },
  {
    "text": "Kubernetes is already\nrunning on (mumbling) and that's all being sent.",
    "start": "1773235",
    "end": "1778141"
  },
  {
    "text": "(mumbling) If you want\nto use something yourself There's a (mumbling) so if you have",
    "start": "1782011",
    "end": "1790300"
  },
  {
    "text": "holiday's coming so. (laughs) Play around with that and experiment with",
    "start": "1793349",
    "end": "1801071"
  },
  {
    "text": "social technology on a\nsmall scale and (mumbling).",
    "start": "1801071",
    "end": "1805238"
  },
  {
    "text": "Now, inside (mumbling).",
    "start": "1811165",
    "end": "1814498"
  },
  {
    "text": "- So remember this is\nthe beauty of Kubernetes. It runs in many, many different places. It's not something that's\nlimited to the Google Cloud",
    "start": "1817301",
    "end": "1824052"
  },
  {
    "text": "Platform of course. Although it's probably the\nbest place for you to run it. But if you want to (laughs), you can also",
    "start": "1824052",
    "end": "1829616"
  },
  {
    "text": "run it on Raspberry Pi, which imagine, this is not a very powerful machine, but you can actually simulate\nthe entire data center",
    "start": "1829616",
    "end": "1836477"
  },
  {
    "text": "with similar components\nat a small scale and play with it. (laughs)",
    "start": "1836478",
    "end": "1841544"
  },
  {
    "text": "So, let me do this deployment with MySQL which actually has state. And typically, if you\nstart a FALCON container",
    "start": "1841544",
    "end": "1848809"
  },
  {
    "text": "without the volume mount,\nthat's not good for you to run MySQL, why? Because when you start MySQL, it's going",
    "start": "1848810",
    "end": "1854153"
  },
  {
    "text": "to write some data. When you shut it down, it's gone. When you start it again,\nit's going to start off fresh without any volumes and you",
    "start": "1854154",
    "end": "1860609"
  },
  {
    "text": "don't have any data.",
    "start": "1860609",
    "end": "1862276"
  },
  {
    "text": "Anyone? Yeah, (laughs) that could be a problem if you try to run a stable application",
    "start": "1866026",
    "end": "1871273"
  },
  {
    "text": "without keeping state (laughs).",
    "start": "1871273",
    "end": "1875273"
  },
  {
    "text": "Yep, great. So with the NFS Mount, or if you are in your own data center, you can actually",
    "start": "1881303",
    "end": "1886917"
  },
  {
    "text": "share different drives, different volumes in different ways, whether\nvia NFS, iSCSI, RDB,",
    "start": "1886917",
    "end": "1892586"
  },
  {
    "text": "GlusterFS, there are so\nmany different options and many, many of them\nare actually supported within Kubernetes.",
    "start": "1892587",
    "end": "1897931"
  },
  {
    "text": "And the first thing you need to do is to register the value\ninside of Kubernetes, okay? So even if you have that\nphysical device available",
    "start": "1897931",
    "end": "1904967"
  },
  {
    "text": "somewhere you have to register it. Because Kubernetes actually\nneeds to know how much storage is being offered\nfor this particular value",
    "start": "1904967",
    "end": "1911583"
  },
  {
    "text": "which is in the capacity\ncolumn right here. And the second thing is\nhow do you actually connect to the volume?",
    "start": "1911583",
    "end": "1917391"
  },
  {
    "text": "How do you connect to it? So different type of\nshared filed system has different way of connecting to it",
    "start": "1917391",
    "end": "1922487"
  },
  {
    "text": "and in this case we're using NFS, so I'm going to say the\nserver and also the path. If you're using something\nelse like say GlusterFS,",
    "start": "1922487",
    "end": "1929448"
  },
  {
    "text": "you'll do it differently, okay? And we can support many different ways. So the first thing I need\nto do is to register it.",
    "start": "1929448",
    "end": "1935911"
  },
  {
    "text": "So I have created this\nthing and I'm going to say kubectl create -f the\nvolumes/nfs-vol1.yaml",
    "start": "1935911",
    "end": "1942656"
  },
  {
    "text": "And that is going to, oh, it\nalready exists, let me check. Check get PV.",
    "start": "1944041",
    "end": "1948618"
  },
  {
    "text": "No, okay. So let me delete that so\nit's really easy to just delete the volume as well. So I can say delete PV,\nyeah, let me do that.",
    "start": "1950381",
    "end": "1958436"
  },
  {
    "text": "So I'm going to say delete\nthe first one and also delete the second one, okay? And now they're deleted,\nbut the data is still there.",
    "start": "1958436",
    "end": "1965172"
  },
  {
    "text": "It's just that they're not registered with Kubernetes anymore. I'm going to re-register\nit so that it will work properly for me, okay?",
    "start": "1965172",
    "end": "1971485"
  },
  {
    "text": "So I have created the\nvolume here and it has the capacity of one gigabyte\nand it is available.",
    "start": "1971485",
    "end": "1976601"
  },
  {
    "text": "Now the second thing I\nhave to do is to lay down a claim because all of these\nvolumes are just resources",
    "start": "1976601",
    "end": "1983563"
  },
  {
    "text": "to Kubernetes. And these resources could\npotentially be shared or reused right? When the volume is\nactually being released,",
    "start": "1983563",
    "end": "1990070"
  },
  {
    "text": "you don't want it to just\nsit there without being used if it's not important anymore. So you wanna be able to reuse\nthe disk with somebody else",
    "start": "1990071",
    "end": "1997764"
  },
  {
    "text": "if they need the capacity. And so now what I need to do is, I need to say lay down a claim to say",
    "start": "1997764",
    "end": "2003880"
  },
  {
    "text": "I need to use the volume,\nplease give me one that best describe my need. And to do that, I need\nto create what we call",
    "start": "2003880",
    "end": "2009652"
  },
  {
    "text": "a PersistentVolumeClaim, a PVC. Okay Persistent Volume\nClaim, and notice here, all",
    "start": "2009652",
    "end": "2015059"
  },
  {
    "text": "I need to do is to describe\nhow much capacity do I need. And the type of access we want it to do,",
    "start": "2015060",
    "end": "2021021"
  },
  {
    "text": "whether it's rewrite from\njust a single container or a single pod, or is it\nrewrite from multiple pods?",
    "start": "2021021",
    "end": "2028014"
  },
  {
    "text": "But notice here I'm not\nspecifying which volume I want to use, I just say how much I need.",
    "start": "2028014",
    "end": "2033263"
  },
  {
    "text": "Why, because Kubernetes\nwill then find the right volume that best fits my\nneed and assign it to me.",
    "start": "2033263",
    "end": "2039434"
  },
  {
    "text": "So if I need to lay down\na claim and say I need to use a volume that I\nneed to create this PVC I can do kubectl create -f mysql-pvc",
    "start": "2039434",
    "end": "2047146"
  },
  {
    "text": "and that's going to make the claim. And once I do that if I do a get pvc",
    "start": "2048660",
    "end": "2054026"
  },
  {
    "text": "what I can see is that\nit's actually bound to one of the volumes that's\navailable that best fits my need and now MySQL\nPVC can access this volume.",
    "start": "2054027",
    "end": "2062823"
  },
  {
    "text": "Now then what I need to do\nis to update my deployment to make sure that I am\nmounting the right volumes.",
    "start": "2064467",
    "end": "2073769"
  },
  {
    "text": "And that's really easy to do. All I need to do is specify it. Say here volumes is\nreferencing to the PVC claim",
    "start": "2073769",
    "end": "2080992"
  },
  {
    "text": "that I just created. Right it's like a ticket for\nme to use the physical volume. And then I need to specify the mount path.",
    "start": "2080992",
    "end": "2087377"
  },
  {
    "text": "Which is here, that I need\nto mount this disk into var lib MySQL, okay?",
    "start": "2087377",
    "end": "2092810"
  },
  {
    "text": "And the beauty of it is that\nKubernetes will actually take care of mounting this\nvolume for you behind the scenes.",
    "start": "2092810",
    "end": "2098731"
  },
  {
    "text": "So if I want to run this\nMySQL server, right? So create MySQL service\nand also the deployment.",
    "start": "2098731",
    "end": "2106046"
  },
  {
    "text": "You all know what services are now. And if I do that, what this is going to do",
    "start": "2107255",
    "end": "2112501"
  },
  {
    "text": "is there we go, let me refresh. What this is going to\ndo is to run MySQL on one of these nodes and before\nit starts the application,",
    "start": "2114202",
    "end": "2121627"
  },
  {
    "text": "starts MySQL, it's going to mount that NFS volume for me as well. And then start the container\nand then make sure that",
    "start": "2121627",
    "end": "2128332"
  },
  {
    "text": "the volume is mounted\ninto the path I specified. So now MySQL server has the right data.",
    "start": "2128332",
    "end": "2133865"
  },
  {
    "text": "- [Arjen] Okay, yeah. - [Ray] Oh yes, we have sound! - [Arjen] We have sound. - [Ray] Yay! - [Arjen] Yeah, you can access it also.",
    "start": "2133865",
    "end": "2140485"
  },
  {
    "text": "- [Ray] Yeah I can access\nit, but I can also access it directly by deploying\nthe front and the back end.",
    "start": "2140486",
    "end": "2145771"
  },
  {
    "text": "- [Arjen] Okay, I want to\nsee the back end running. - [Ray] Yeah (laughs), so\njust remember all of these",
    "start": "2145771",
    "end": "2152129"
  },
  {
    "text": "things are running inside of\nthe Raspberry Pi processor. So I'm going to do something\nvery quick because of the time.",
    "start": "2152129",
    "end": "2157158"
  },
  {
    "text": "I'm going to use create -f. What that's going to do is\ndeploy everything for me",
    "start": "2157158",
    "end": "2162655"
  },
  {
    "text": "in one shot, oh! I'm sorry I think I used\nthe wrong one so now my",
    "start": "2163795",
    "end": "2169068"
  },
  {
    "text": "sequel is actually\ndeployed here, there we go. So now I have MySQL, the front end and the back end, okay?",
    "start": "2169069",
    "end": "2175274"
  },
  {
    "text": "Now when I created the front\nend how do I get to it?",
    "start": "2175274",
    "end": "2179441"
  },
  {
    "text": "- [Arjen] Yeah we have the\nservices running here on the Raspberry Pi.",
    "start": "2180546",
    "end": "2184992"
  },
  {
    "text": "But normally the services uses an internal cluster IP\naddress which can be used.",
    "start": "2187431",
    "end": "2192876"
  },
  {
    "text": "But it can't be used\noutside of the cluster. So you want something to expose\nthe service to the outside.",
    "start": "2192876",
    "end": "2199509"
  },
  {
    "text": "In Google Cloud you have\nthe load balancer for that. Ray already showed you. One easy thing to do that\nthis small micro data center",
    "start": "2199509",
    "end": "2208630"
  },
  {
    "text": "is to use a node part, and what actually Kubernetes does then\nwhen creating a service",
    "start": "2210207",
    "end": "2218103"
  },
  {
    "text": "is generate, dynamically\nassign a port number to each node for that service.",
    "start": "2218103",
    "end": "2225259"
  },
  {
    "text": "So we have a certain port\nnumber at which we can reach",
    "start": "2227014",
    "end": "2231181"
  },
  {
    "text": "that service within the cluster. - [Ray] So in this particular case, it dynamically generated\na port number for me.",
    "start": "2232274",
    "end": "2239247"
  },
  {
    "text": "And so you can avoid all\nsorts of port conflicts if you are to run and share\ndirectly from the host, right?",
    "start": "2239247",
    "end": "2244790"
  },
  {
    "text": "So it's on this port, so if I go there, all right, that works, pretty good.",
    "start": "2244790",
    "end": "2249901"
  },
  {
    "text": "So the application's up and running. Can you see it? - [Arjen] There's already data. - [Ray] Arjen's CDDB database.",
    "start": "2249901",
    "end": "2256132"
  },
  {
    "text": "So he likes Air (laughs),\nI don't know Air, but yeah. There we go, and you can click into it.",
    "start": "2256132",
    "end": "2262361"
  },
  {
    "text": "And then you can see all the\ntracks when it comes about. It's running on Raspberry\nPi, so it's a little slow. But you can modify these things as well.",
    "start": "2262361",
    "end": "2269592"
  },
  {
    "text": "So we have the full\napplication running, fantastic. - [Arjen] Okay that's nice. - [Ray] That's too easy,\ntoo easy, what else you got?",
    "start": "2269592",
    "end": "2277484"
  },
  {
    "text": "- [Arjen] Well a product\non (mumbles) just came and we have a new version we have to ship.",
    "start": "2277485",
    "end": "2283769"
  },
  {
    "text": "So marketing has decided\nthat the coloring scheme was not that nice, so they\noffered a new styling.",
    "start": "2283769",
    "end": "2292010"
  },
  {
    "text": "So we have a version 10 available for you, We wanted to roll it out into production.",
    "start": "2292010",
    "end": "2300004"
  },
  {
    "text": "- [Ray] Okay, so typically\nwhat you may do is to deploy the new version and\nthen shut down the old ones.",
    "start": "2300004",
    "end": "2306236"
  },
  {
    "text": "But what I like to do, is to\ndo a rolling update for this. What I want Kubernetes to\ndo for me is to roll out",
    "start": "2306236",
    "end": "2311541"
  },
  {
    "text": "the new version one instance at a time, or multiple instances at a time. And shut down the old\ninstance when a new instance",
    "start": "2311541",
    "end": "2317011"
  },
  {
    "text": "is up and running. And you can do this very\neasily with Kubernetes too. And remember deployment, the box in blue?",
    "start": "2317011",
    "end": "2323051"
  },
  {
    "text": "That can also manage the\nrolling update for me. So all I need to do is to do\na kubectl edit the deployment",
    "start": "2323051",
    "end": "2329220"
  },
  {
    "text": "and I can say the CDDB front end. And then down here I have\nthe image that I can change.",
    "start": "2330098",
    "end": "2336705"
  },
  {
    "text": "And if I want to update\nthis to version number nine, I just update it, I save this file.",
    "start": "2336705",
    "end": "2342198"
  },
  {
    "text": "Now look this is really cool. I'm looking inside the\nstate of Kubernetes via my local text editor.",
    "start": "2342198",
    "end": "2347619"
  },
  {
    "text": "And I can modify this\nstate just by saving it. Now assume I save it,\nwhat it's going to do",
    "start": "2347619",
    "end": "2353260"
  },
  {
    "text": "is perform a rolling update. And you can see the new\ninstances coming up, and then once it's ready,\nit's going to shut down the",
    "start": "2353260",
    "end": "2359077"
  },
  {
    "text": "older instances. And while all this is running, because we have readiness\nchecks and liveness checks",
    "start": "2359077",
    "end": "2364805"
  },
  {
    "text": "setup in Kubernetes. You can actually just\nrefresh the page and, ooh! - It's already done.\n- And it will still work",
    "start": "2364805",
    "end": "2370066"
  },
  {
    "text": "during the running update. Yeah, did I use the wrong version? I think I did. - [Arjen] Version 9, yeah. - [Ray] But it's got to\na different color here.",
    "start": "2370066",
    "end": "2375736"
  },
  {
    "text": "It doesn't really work\nwith the rest of the color scheme here. So I think we should probably. - [Arjen] Yeah, we have a\nproblem now in production.",
    "start": "2375736",
    "end": "2383792"
  },
  {
    "text": "Customers don't like the new color scheme. So we want to rollback\nas fast as possible.",
    "start": "2383792",
    "end": "2391770"
  },
  {
    "text": "- [Ray] To do a rollback is really easy. I can actually see a history\nof my deployments as well. So I can do a",
    "start": "2392943",
    "end": "2398427"
  },
  {
    "text": "kubectl rollout history\ndeployment cddb-frontend and I can actually see a list\nof deployments I have made.",
    "start": "2398427",
    "end": "2405468"
  },
  {
    "text": "Now if I actually\ndeployed this thing with a dash, dash record, we can actually see\nwhat caused the change.",
    "start": "2405468",
    "end": "2410683"
  },
  {
    "text": "What caused the new deployment. And you can rollback to any\nof the revisions that you see that's still in\nhistory, which is awesome.",
    "start": "2410683",
    "end": "2417004"
  },
  {
    "text": "Of course you don't keep\nall of the histories. There is a limited amount of that, but if I need to rollback,\nthis is what I do.",
    "start": "2417004",
    "end": "2422525"
  },
  {
    "text": "I can say rollout undo, just do go back one\ndeployment, and let me do that.",
    "start": "2422525",
    "end": "2427818"
  },
  {
    "text": "And just say undo my\ndeployment cddeb-frontend. And what it's going to do, check this out.",
    "start": "2427818",
    "end": "2433155"
  },
  {
    "text": "It's gonna do another\nrolling update as well, and now you're rolling back\nto your previous versions. Super simple to do, and\nagain because we have the",
    "start": "2433155",
    "end": "2440732"
  },
  {
    "text": "health checks and readiness\ncheck as we're doing this rolling update, all\nthe connections will be routed to the instance\nthat's ready to serve.",
    "start": "2440732",
    "end": "2448296"
  },
  {
    "text": "And now we just roll back. That's also too easy Arjen,\nwhat else do you got for me? (Arjen laughs)",
    "start": "2448296",
    "end": "2455209"
  },
  {
    "text": "- [Arjen] I'm really curious. We have now our micro data center.",
    "start": "2456276",
    "end": "2460687"
  },
  {
    "text": "How many people have been\nin a data center themselves?",
    "start": "2463575",
    "end": "2467742"
  },
  {
    "text": "- [Ray] Quite a few, okay! - [Arjen] Quite a few, yeah. And you wanted to pull\na plug somewhere in the",
    "start": "2471248",
    "end": "2477151"
  },
  {
    "text": "data center and see what happens. - [Ray] Oh no, yeah (laughs) - [Arjen] Yeah Yeah there's one! (both laughing) - [Ray] There's one, I\nwould love to do that too.",
    "start": "2477151",
    "end": "2484687"
  },
  {
    "text": "- [Arjen] Yeah you love too? - [Ray] No, actually not here. - [Arjen] At Google. - [Ray] No (laughs) I can't.",
    "start": "2484687",
    "end": "2490857"
  },
  {
    "text": "- [Arjen] You're not allowed in there? - [Ray] But I also don't want\nany plugs to be pulled today On this Raspberry Pi cluster, or is that what you wanna do? - [Arjen] Yeah.",
    "start": "2490857",
    "end": "2496586"
  },
  {
    "text": "So we had already a volunteer\nhere, so come up on stage. - [Ray] Whoo hoo, give\nthis gentleman a hand.",
    "start": "2496586",
    "end": "2503713"
  },
  {
    "text": "Brave person trying to break my cluster. - And before you pull it.\n- Wait hold on a second! Why don't you swing back\nhere, swing to the side",
    "start": "2503714",
    "end": "2510237"
  },
  {
    "text": "so people can see this in the video. - Yeah from the side? To make it really nice\nI want to see the nodes",
    "start": "2510237",
    "end": "2516629"
  },
  {
    "text": "going down on which MySQL is running. - Wait, you want to see MySQL go down? - Yeah.",
    "start": "2516629",
    "end": "2522374"
  },
  {
    "text": "- No, come on not this! - That does happen in production. - That has happened before. (laughs) - And it busts, I will be called",
    "start": "2522374",
    "end": "2528492"
  },
  {
    "text": "at some point, it's gone\nwrong and it's in the middle of the night and I don't want that. - You don't want that, okay.\n- No.",
    "start": "2528492",
    "end": "2534798"
  },
  {
    "text": "- So let me just show\nyou that the MySQL server is up and running. As you saw in there, so I can do",
    "start": "2534798",
    "end": "2539987"
  },
  {
    "text": "mysql-p-host 10.0.0.120 okay? And what is the password?",
    "start": "2539987",
    "end": "2546857"
  },
  {
    "text": "- [Arjen] Root. - [Ray] Of course. - [Arjen] Yeah, everything is root. - [Ray] It's not Superman, it's root.",
    "start": "2546857",
    "end": "2552486"
  },
  {
    "text": "So I can show databases and\nwe have the data here, voila! We have the quintor database\nwhich has Arjen's favorite",
    "start": "2552486",
    "end": "2560859"
  },
  {
    "text": "songs. And it is running on 04, so it is running on the fourth node. - [Arjen] The fourth node?",
    "start": "2560860",
    "end": "2566103"
  },
  {
    "text": "- Whatever you do, do not plug the first one, it's the fourth one. - The bottom one.\n- This one? - Yeah, there we go.",
    "start": "2566103",
    "end": "2571881"
  },
  {
    "text": "- Pull this network cable?\n- Are you ready for this? (both sighing) - All right, oh, so it's gone, it's gone.",
    "start": "2571881",
    "end": "2577368"
  },
  {
    "text": "- And now?\n- And nothing happened. Nah I'm just kidding. So what Kubernetes has\nbeen configured to do",
    "start": "2577368",
    "end": "2582717"
  },
  {
    "text": "is to check this health\nof the machines as well. And we configure it to check\nevery 30 seconds or so.",
    "start": "2582717",
    "end": "2588508"
  },
  {
    "text": "So in about 30 seconds,\nwhich is right about now. - Yeah\n- If it ever works, you're going to see node 4 turn red.",
    "start": "2588508",
    "end": "2596152"
  },
  {
    "text": "Turning red. Yeah there we go, whew! (applause)",
    "start": "2597830",
    "end": "2603040"
  },
  {
    "text": "Wait, wait that's too easy,\nof course it turned red it went down! - Oh and what's happening now? - Check it out, it actually restarted",
    "start": "2603040",
    "end": "2609483"
  },
  {
    "text": "MySQL for me as well. Yeah? It's not bad, MySQL is now up and running.",
    "start": "2609483",
    "end": "2614581"
  },
  {
    "text": "Yeah very good and actually\nthis is what Kubernetes actually do behind the scenes.",
    "start": "2614581",
    "end": "2619757"
  },
  {
    "text": "You remember the volume mount? Well the volume is no longer\njust mounted on the machine that died because it went away.",
    "start": "2619757",
    "end": "2627290"
  },
  {
    "text": "Kubernetes managed the\nvolume mounts for you. So now if I go into that node",
    "start": "2627290",
    "end": "2631541"
  },
  {
    "text": "ssh into root@10.150.4 Oh boy, Dot 3",
    "start": "2632930",
    "end": "2638995"
  },
  {
    "text": "By the way, I get really\nnervous about this demo because unplugging MySQL\nis not something that you should be doing.",
    "start": "2638995",
    "end": "2645194"
  },
  {
    "text": "I do not recommend just\ntrying this at home. But if I wanted to go back here.",
    "start": "2645194",
    "end": "2650362"
  },
  {
    "text": "(laughs) Definitely don't do it. Wait, what, oh yeah sorry. It's 0.4.4 isn't it?",
    "start": "2650362",
    "end": "2655961"
  },
  {
    "text": "- [Arjen] Yeah. - [Ray] That's the name, oh sorry. Four is gone so it's on three now. So if I go there, check this\nout, this is really cool.",
    "start": "2655961",
    "end": "2662741"
  },
  {
    "text": "If I can connect it it, there we go. If I go root.",
    "start": "2662741",
    "end": "2665952"
  },
  {
    "text": "If I have three mount, if I see NFS mount it's actually here, so that's a good sign.",
    "start": "2671110",
    "end": "2676989"
  },
  {
    "text": "The other thing I wanna make\nsure is that I can actually connect to it. Now remember, MySQL just\ngot rescheduled to a different machine, but\nI'm going to use the same",
    "start": "2676989",
    "end": "2683036"
  },
  {
    "text": "command line to connect to\nit with the same IP address. Because it is using a stable\nIP exposed as its services.",
    "start": "2683037",
    "end": "2690037"
  },
  {
    "text": "Now if I go to root, it connects! That's not bad so far. - [Arjen] Is the database still there? - [Ray] Yeah, oh is the database\nstill there, let me see.",
    "start": "2690037",
    "end": "2696611"
  },
  {
    "text": "So not use, so show databases. Yes! It is still there.",
    "start": "2696611",
    "end": "2701624"
  },
  {
    "text": "But do we have the right data (laughs)? Are we cheating? Do we have the right data? - [Arjen] Different volume, yeah.",
    "start": "2701624",
    "end": "2707723"
  },
  {
    "text": "- [Ray] There we go, so I\njust refreshed my application. And as you can see, it's\nconnected back to this right database.",
    "start": "2707723",
    "end": "2713384"
  },
  {
    "text": "Cause I have to retry it, reconnect. So it reconnected and we\ngot all the same data here. So yeah very good, I guess that\nworked! Thank you very much!",
    "start": "2713384",
    "end": "2720200"
  },
  {
    "text": "- [Arjen] So thanks for\nour real life chaos monkey. - [Ray] Yeah. (applause)",
    "start": "2720200",
    "end": "2726409"
  },
  {
    "text": "And if you plug it back\nin, then it will be marked as scheduled to be\nready to redeploy as well. Not bad.",
    "start": "2727806",
    "end": "2733628"
  },
  {
    "text": "- Well we have the\napplication now running on my micro data center,\nreally nice, but we can't",
    "start": "2733628",
    "end": "2738500"
  },
  {
    "text": "go into production with that. - If you don't want to use\nRaspberry Pi, sure (laughs).",
    "start": "2739896",
    "end": "2745654"
  },
  {
    "text": "But if you want to run it unframed with a more powerful machine you can. But we can also run it\nin Google Cloud as well",
    "start": "2745654",
    "end": "2751028"
  },
  {
    "text": "like I showed earlier. And the beauty of it is here is that if you want to achieve a state where you want to not only\nbe able to manage your",
    "start": "2751028",
    "end": "2757833"
  },
  {
    "text": "services efficiently, just\nlike what we have shown. But you also want them to have\na hybrid deployment across",
    "start": "2757833",
    "end": "2763035"
  },
  {
    "text": "multiple data centers or\nmultiple different providers Whether it's cloud on unframed. You can actually use the\nsame set of descriptors",
    "start": "2763035",
    "end": "2770877"
  },
  {
    "text": "like here this is running\nlocally on my machine. I have the same deployment\nyaml file which is nice because you can check\nin your architecture.",
    "start": "2770877",
    "end": "2777577"
  },
  {
    "text": "The only different thing I'm\ndoing here is the volume mount. Why, because in the\ncloud, I rather than using",
    "start": "2777577",
    "end": "2783220"
  },
  {
    "text": "a fence, I can actually\nmount a real disk from the cloud, right? I can provision new disks, I can mount it.",
    "start": "2783220",
    "end": "2788593"
  },
  {
    "text": "So all I have to do is\nto provision that volume, register it with a\ndifferent persistent volume.",
    "start": "2788593",
    "end": "2794334"
  },
  {
    "text": "And here I'm just saying\nthat I wanna use a GCE disk and so I can go\nahead and create that.",
    "start": "2794334",
    "end": "2800014"
  },
  {
    "text": "And so I can register it\nand then I can go ahead and mount, lay down the claim.",
    "start": "2801610",
    "end": "2806799"
  },
  {
    "text": "So I can do then mysql-pvc right? And then once I have done that, By the way, this is all\nhappening in the cloud now.",
    "start": "2806799",
    "end": "2813516"
  },
  {
    "text": "And what I can do finally is\nto deploy this application. I can just do a create dot.",
    "start": "2813516",
    "end": "2819085"
  },
  {
    "text": "There's one very big difference here, which is in terms of the load balancer. Because rather than exposing\non the node ports directly,",
    "start": "2821882",
    "end": "2828513"
  },
  {
    "text": "on each individual machine,\nI can actually instruct it to create a real load balancer directly from the YAML file as well.",
    "start": "2828513",
    "end": "2834940"
  },
  {
    "text": "And now the application is being deployed. Let me just go back and take\na look, the same application.",
    "start": "2834940",
    "end": "2840589"
  },
  {
    "text": "The only thing I really\nhad to do was to make sure that of course the\narm binaries don't work in",
    "start": "2840589",
    "end": "2845912"
  },
  {
    "text": "the x86 environment. So I had to change the\nbase image so that rather than using arms Java binary,\nI'm using a x86 Java binary.",
    "start": "2845913",
    "end": "2854708"
  },
  {
    "text": "And once this is up and running, we can actually go and see it. Now what this is doing right now, is just waiting for the\nexternal load balancer",
    "start": "2854708",
    "end": "2861503"
  },
  {
    "text": "to be created. So if I say get-svc what this is going to\ndo is to create a real",
    "start": "2861503",
    "end": "2868584"
  },
  {
    "text": "load balancer with a\nreal external IP address. And there we go, so that's\nthe external IP address.",
    "start": "2868584",
    "end": "2874210"
  },
  {
    "text": "And I can go there, this is too hard. And there we go, we have the\nsame application deployed",
    "start": "2874210",
    "end": "2879440"
  },
  {
    "text": "in the cloud with the same descriptors. It's very easy to do. So all of a sudden you can\njust deploy to multiple",
    "start": "2879440",
    "end": "2884958"
  },
  {
    "text": "environments with exactly the same way. And that's beautiful. - Yeah.\n- Yeah. - It's really nice, you have one set of",
    "start": "2884958",
    "end": "2892461"
  },
  {
    "text": "configuration files and\nyou use it for different environments to set them up.",
    "start": "2892461",
    "end": "2898091"
  },
  {
    "text": "So that's really nice. - So if you are interested\nin this technology, please give it a try.",
    "start": "2899090",
    "end": "2905445"
  },
  {
    "text": "And if you want to learn\nmore about Kubernetes, go to kubernetes.io. And if you wanna try Google\nCloud Platform you can go to",
    "start": "2905445",
    "end": "2911449"
  },
  {
    "text": "cloud.google.com as well,\nand you can provision Kubernetes clusters very, very\neasily by a click of a button",
    "start": "2911449",
    "end": "2916902"
  },
  {
    "text": "will install everything for\nyou and manage everything for you as well. If you wanna try it on\nthe Raspberry Pi cluster, check with Arjen.",
    "start": "2916902",
    "end": "2923200"
  },
  {
    "text": "We have a really, really\ngood blog that he wrote. So you can buy the right components and play with this as well.",
    "start": "2923200",
    "end": "2928666"
  },
  {
    "text": "So thank you very much for your time. - [Arjen] Thank you. (applause)",
    "start": "2928666",
    "end": "2933586"
  },
  {
    "text": "- [Announcer] All right,\nthank you very much. - Do we have time for questions? - [Announcer] There's no\ntime for questions, but",
    "start": "2937740",
    "end": "2943129"
  },
  {
    "text": "there are very interesting\nquestions so we will make some time for questions. - [Ray] Okay, all right, nice!. - [Announcer] Before anyone\ndecides not to wait for the",
    "start": "2943129",
    "end": "2950191"
  },
  {
    "text": "questions and leave, please vote. I see that we have massively\nenjoyed this presentation,",
    "start": "2950191",
    "end": "2956029"
  },
  {
    "text": "but I also see that the actual\nhead count is much higher than the number of votes. So please vote for this session.",
    "start": "2956029",
    "end": "2962629"
  },
  {
    "text": "- Yeah, thank you. - [Announcer] There's many\nquestions and we can't handle them all, but since you're\na Google guy, here is",
    "start": "2962629",
    "end": "2968267"
  },
  {
    "text": "an interesting one.\n- Oh no. - [Announcer] How well does Kubernetes fit Amazon Web Services? - How well does it work?",
    "start": "2968267",
    "end": "2974446"
  },
  {
    "text": "It actually works! In fact in one of the\nconferences that I been to about more than half a year ago,",
    "start": "2974446",
    "end": "2980310"
  },
  {
    "text": "one of the attendees came\nover during lunchtime and said that this is\nawesome, I want to show my boss how to do this.",
    "start": "2980311",
    "end": "2986300"
  },
  {
    "text": "I'm like yeah sure, let me\ndeploy this, are you using cloud? Yes, I'm using, um no. So what do you need to\ndeploy this on Amazon?",
    "start": "2986300",
    "end": "2993158"
  },
  {
    "text": "So ah, but you can actually do it over lunchtime with the right tool setup. Downloading the right\nservices, it actually just",
    "start": "2993158",
    "end": "3000429"
  },
  {
    "text": "installs and you can provision\nservice there as well. And it actually works with\ntheir load balancers and their",
    "start": "3000429",
    "end": "3006734"
  },
  {
    "text": "disks as well, so you can give it a try. But if you're running on Google\nCloud Platform of course,",
    "start": "3006735",
    "end": "3011766"
  },
  {
    "text": "we also have really good\nsupport with the click of a button, with a single command line, you can also provision the\nservices for you, yeah.",
    "start": "3011766",
    "end": "3019533"
  },
  {
    "text": "- [Announcer] Last question. What's your experience\nwith database performance when running on NFS volumes?",
    "start": "3019533",
    "end": "3024979"
  },
  {
    "text": "(Ray laughing) - That's a great question!\n- Or Raspberry Pi. - And you probably should\nnot do it (laughs).",
    "start": "3024979",
    "end": "3031844"
  },
  {
    "text": "No kidding, just remember that NFS is something that we're using for the demo. Some people still use it\nfor a variable of things.",
    "start": "3031844",
    "end": "3039098"
  },
  {
    "text": "But if you want to use\nsomething faster you can. You can use RDB, iSCSI and a bunch of other things as well, yeah?",
    "start": "3039098",
    "end": "3045719"
  },
  {
    "text": "- [Announcer] All right great. - Well thank you very\nmuch, are there more? - [Announcer] Thank you,\nthat's it, thank you very much. - [Ray] All right, thank you!",
    "start": "3045719",
    "end": "3051112"
  },
  {
    "text": "(applause)",
    "start": "3051112",
    "end": "3053362"
  }
]