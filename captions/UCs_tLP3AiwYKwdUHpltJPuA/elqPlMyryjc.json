[
  {
    "text": "you so today I'm going to talk about kog",
    "start": "10280",
    "end": "13519"
  },
  {
    "text": "the composable contrarian kadic login",
    "start": "13519",
    "end": "15759"
  },
  {
    "text": "Library I was on an adventure to explore",
    "start": "15759",
    "end": "18520"
  },
  {
    "text": "how different algebraic Concepts can be",
    "start": "18520",
    "end": "20800"
  },
  {
    "text": "used to approach the login problem and",
    "start": "20800",
    "end": "23080"
  },
  {
    "text": "today I'm going to share with you the",
    "start": "23080",
    "end": "24800"
  },
  {
    "text": "results of my",
    "start": "24800",
    "end": "26400"
  },
  {
    "text": "journey so a couple words about me",
    "start": "26400",
    "end": "28800"
  },
  {
    "text": "currently I'm working as a High skill",
    "start": "28800",
    "end": "30800"
  },
  {
    "text": "developer at the hmas company and we're",
    "start": "30800",
    "end": "32840"
  },
  {
    "text": "actually using the Cog Library there for",
    "start": "32840",
    "end": "34680"
  },
  {
    "text": "loging and in my free time I'm uh do",
    "start": "34680",
    "end": "37480"
  },
  {
    "text": "open source work in my guic organization",
    "start": "37480",
    "end": "40280"
  },
  {
    "text": "where I maintain different package and",
    "start": "40280",
    "end": "42079"
  },
  {
    "text": "help high skill beginners mentoring",
    "start": "42079",
    "end": "44680"
  },
  {
    "text": "them so uh login is a very essential",
    "start": "44680",
    "end": "49079"
  },
  {
    "text": "part of a programming I can't imagine",
    "start": "49079",
    "end": "51280"
  },
  {
    "text": "writing application without doing some",
    "start": "51280",
    "end": "53480"
  },
  {
    "text": "login it's one of the useful ways to",
    "start": "53480",
    "end": "56640"
  },
  {
    "text": "understand what's your program actually",
    "start": "56640",
    "end": "58359"
  },
  {
    "text": "doing but at the same time it's actually",
    "start": "58359",
    "end": "60760"
  },
  {
    "text": "very difficult problem it contains some",
    "start": "60760",
    "end": "63359"
  },
  {
    "text": "many parts so what we in Hill like to do",
    "start": "63359",
    "end": "66040"
  },
  {
    "text": "when we meet very difficult and big",
    "start": "66040",
    "end": "68320"
  },
  {
    "text": "problem we like to decompose it into",
    "start": "68320",
    "end": "70520"
  },
  {
    "text": "smaller ones so let's do the same thing",
    "start": "70520",
    "end": "72600"
  },
  {
    "text": "with the loging uh when we do loging",
    "start": "72600",
    "end": "74640"
  },
  {
    "text": "first we need to decide what we are",
    "start": "74640",
    "end": "75960"
  },
  {
    "text": "going to log is it going to be just Road",
    "start": "75960",
    "end": "78400"
  },
  {
    "text": "text or is it some custom data type",
    "start": "78400",
    "end": "80799"
  },
  {
    "text": "message data type that contains",
    "start": "80799",
    "end": "82520"
  },
  {
    "text": "structure is it just map from keys to",
    "start": "82520",
    "end": "84840"
  },
  {
    "text": "values then we need to decide where we",
    "start": "84840",
    "end": "87479"
  },
  {
    "text": "are going to log are we log in just to",
    "start": "87479",
    "end": "89320"
  },
  {
    "text": "terminal to to see the result or are we",
    "start": "89320",
    "end": "91280"
  },
  {
    "text": "writing to file to analyze it later",
    "start": "91280",
    "end": "93280"
  },
  {
    "text": "maybe we storing our logs in database if",
    "start": "93280",
    "end": "95439"
  },
  {
    "text": "we need some persistence or are we just",
    "start": "95439",
    "end": "97280"
  },
  {
    "text": "submitting them to external service",
    "start": "97280",
    "end": "99520"
  },
  {
    "text": "which provides a lot of analytics and",
    "start": "99520",
    "end": "101439"
  },
  {
    "text": "metrics for us also then we need to",
    "start": "101439",
    "end": "104000"
  },
  {
    "text": "decide how we are going to format our",
    "start": "104000",
    "end": "106000"
  },
  {
    "text": "output should it be just some plain text",
    "start": "106000",
    "end": "108119"
  },
  {
    "text": "or maybe colored text for better",
    "start": "108119",
    "end": "109880"
  },
  {
    "text": "understanding or Json so later tools can",
    "start": "109880",
    "end": "112680"
  },
  {
    "text": "uh try to parse and introduce more",
    "start": "112680",
    "end": "114479"
  },
  {
    "text": "structure and at the very end uh we need",
    "start": "114479",
    "end": "117479"
  },
  {
    "text": "to decide the context are we working in",
    "start": "117479",
    "end": "119280"
  },
  {
    "text": "the iio out and change in the real world",
    "start": "119280",
    "end": "121479"
  },
  {
    "text": "or is it some pure loging which we are",
    "start": "121479",
    "end": "123640"
  },
  {
    "text": "going to see later so let's see how we",
    "start": "123640",
    "end": "127240"
  },
  {
    "text": "can solve these problems independently",
    "start": "127240",
    "end": "129440"
  },
  {
    "text": "without worrying each",
    "start": "129440",
    "end": "130959"
  },
  {
    "text": "other so actually Cog is already modular",
    "start": "130959",
    "end": "134440"
  },
  {
    "text": "and composable on the package level the",
    "start": "134440",
    "end": "136599"
  },
  {
    "text": "idea was to introduce some fun",
    "start": "136599",
    "end": "138360"
  },
  {
    "text": "fundamental obstructions and pieces and",
    "start": "138360",
    "end": "140239"
  },
  {
    "text": "combinators and the in the col core",
    "start": "140239",
    "end": "142560"
  },
  {
    "text": "package which contains a lot of",
    "start": "142560",
    "end": "145040"
  },
  {
    "text": "combinators and reusable and the idea",
    "start": "145040",
    "end": "147319"
  },
  {
    "text": "that you can Implement different",
    "start": "147319",
    "end": "148640"
  },
  {
    "text": "backends using the",
    "start": "148640",
    "end": "150519"
  },
  {
    "text": "this abstractions so I would like to",
    "start": "150519",
    "end": "152120"
  },
  {
    "text": "show how you can use it with different",
    "start": "152120",
    "end": "154519"
  },
  {
    "text": "approaches and Cog Library it contains",
    "start": "154519",
    "end": "157160"
  },
  {
    "text": "MTL and tagas final implementation which",
    "start": "157160",
    "end": "159920"
  },
  {
    "text": "works nicely with popular architecture",
    "start": "159920",
    "end": "162840"
  },
  {
    "text": "patterns there's also Cal semi package",
    "start": "162840",
    "end": "165440"
  },
  {
    "text": "that contains the same implementation",
    "start": "165440",
    "end": "166800"
  },
  {
    "text": "but based on the polyic extensible",
    "start": "166800",
    "end": "169000"
  },
  {
    "text": "effects Library just a proof of concept",
    "start": "169000",
    "end": "171239"
  },
  {
    "text": "that the same ideas can be re used in",
    "start": "171239",
    "end": "172800"
  },
  {
    "text": "different um scenarios but of course uh",
    "start": "172800",
    "end": "177599"
  },
  {
    "text": "in real life we are going we want to be",
    "start": "177599",
    "end": "179640"
  },
  {
    "text": "more more practical today I'm going to",
    "start": "179640",
    "end": "181640"
  },
  {
    "text": "tell you about Fancy and cool",
    "start": "181640",
    "end": "183200"
  },
  {
    "text": "abstractions but we actually have",
    "start": "183200",
    "end": "184760"
  },
  {
    "text": "benchmarks and the latest release",
    "start": "184760",
    "end": "187280"
  },
  {
    "text": "previous one uh introduced a lot of",
    "start": "187280",
    "end": "189599"
  },
  {
    "text": "performance improvements we switched",
    "start": "189599",
    "end": "191120"
  },
  {
    "text": "from time library to Kronos and that's",
    "start": "191120",
    "end": "193400"
  },
  {
    "text": "improved performance significantly so we",
    "start": "193400",
    "end": "194959"
  },
  {
    "text": "have reper for",
    "start": "194959",
    "end": "196640"
  },
  {
    "text": "that so uh the most fundamental type in",
    "start": "196640",
    "end": "200599"
  },
  {
    "text": "the logging library is the log action",
    "start": "200599",
    "end": "202560"
  },
  {
    "text": "type uh it's a new type it's",
    "start": "202560",
    "end": "204879"
  },
  {
    "text": "parameterized by two type variables the",
    "start": "204879",
    "end": "207200"
  },
  {
    "text": "message data type and the monot and it",
    "start": "207200",
    "end": "209599"
  },
  {
    "text": "just stores the function from message to",
    "start": "209599",
    "end": "213319"
  },
  {
    "text": "unit in a monadic context uh the idea is",
    "start": "213319",
    "end": "216280"
  },
  {
    "text": "that uh when we do logging we never",
    "start": "216280",
    "end": "219439"
  },
  {
    "text": "interested in the returning value so",
    "start": "219439",
    "end": "221480"
  },
  {
    "text": "that's why we returning just unit",
    "start": "221480",
    "end": "223439"
  },
  {
    "text": "logging was never about seeing the value",
    "start": "223439",
    "end": "226599"
  },
  {
    "text": "it's about changing the context how we",
    "start": "226599",
    "end": "229879"
  },
  {
    "text": "can uh so we can observe later what's",
    "start": "229879",
    "end": "233599"
  },
  {
    "text": "going on so the important parts are the",
    "start": "233599",
    "end": "236360"
  },
  {
    "text": "message what we are going to lock and",
    "start": "236360",
    "end": "238280"
  },
  {
    "text": "the Monet what what what we are going to",
    "start": "238280",
    "end": "240239"
  },
  {
    "text": "change the context for our login and the",
    "start": "240239",
    "end": "242720"
  },
  {
    "text": "simple example of such login action is",
    "start": "242720",
    "end": "245319"
  },
  {
    "text": "log string out it's just a wer around",
    "start": "245319",
    "end": "248000"
  },
  {
    "text": "put string line function it works in iut",
    "start": "248000",
    "end": "250720"
  },
  {
    "text": "and it takes string as a messages this",
    "start": "250720",
    "end": "252879"
  },
  {
    "text": "is a one of the basic",
    "start": "252879",
    "end": "255720"
  },
  {
    "text": "thing so uh the main idea is that in COG",
    "start": "255720",
    "end": "259400"
  },
  {
    "text": "logger is a value it's not some function",
    "start": "259400",
    "end": "262079"
  },
  {
    "text": "from some library that you call to give",
    "start": "262079",
    "end": "264800"
  },
  {
    "text": "some side effect it's a value and in",
    "start": "264800",
    "end": "267840"
  },
  {
    "text": "Hill it's actually pretty convenient to",
    "start": "267840",
    "end": "270199"
  },
  {
    "text": "work with the values function is",
    "start": "270199",
    "end": "271960"
  },
  {
    "text": "something that you cannot change it's",
    "start": "271960",
    "end": "273360"
  },
  {
    "text": "written some way in the library the code",
    "start": "273360",
    "end": "274800"
  },
  {
    "text": "is static and fixed you can introduce",
    "start": "274800",
    "end": "277320"
  },
  {
    "text": "some uh some Dynamic Behavior VI type",
    "start": "277320",
    "end": "280320"
  },
  {
    "text": "classes but you can do much with the",
    "start": "280320",
    "end": "282240"
  },
  {
    "text": "code but value oh you can do a lot of",
    "start": "282240",
    "end": "284600"
  },
  {
    "text": "things with a value so and we are going",
    "start": "284600",
    "end": "286479"
  },
  {
    "text": "to do a lot of things so that's why it's",
    "start": "286479",
    "end": "288840"
  },
  {
    "text": "uh this approach gives us a lot of",
    "start": "288840",
    "end": "291600"
  },
  {
    "text": "flexibility uh but you won might wonder",
    "start": "291600",
    "end": "294479"
  },
  {
    "text": "if it's a a value how can we use it well",
    "start": "294479",
    "end": "299440"
  },
  {
    "text": "it's the very end it still contains the",
    "start": "299440",
    "end": "301120"
  },
  {
    "text": "function inside so you can always one of",
    "start": "301120",
    "end": "303280"
  },
  {
    "text": "the simplest ways is to uh pass this",
    "start": "303280",
    "end": "306280"
  },
  {
    "text": "value explicitly as an argument to your",
    "start": "306280",
    "end": "308080"
  },
  {
    "text": "functions unwrap it from the new type",
    "start": "308080",
    "end": "310479"
  },
  {
    "text": "Constructor and then just pass the",
    "start": "310479",
    "end": "313360"
  },
  {
    "text": "message to this login function but of",
    "start": "313360",
    "end": "316080"
  },
  {
    "text": "course you can store this log action",
    "start": "316080",
    "end": "317800"
  },
  {
    "text": "inside your monadic context uh so the",
    "start": "317800",
    "end": "321560"
  },
  {
    "text": "lat extract automatically so you don't",
    "start": "321560",
    "end": "323319"
  },
  {
    "text": "need to do this all manual wrapping and",
    "start": "323319",
    "end": "325560"
  },
  {
    "text": "unwrapping and later in the talk I'm",
    "start": "325560",
    "end": "327800"
  },
  {
    "text": "going to show how to do this it's",
    "start": "327800",
    "end": "329280"
  },
  {
    "text": "actually not the",
    "start": "329280",
    "end": "332319"
  },
  {
    "text": "difficult okay so let's first talk about",
    "start": "332319",
    "end": "335479"
  },
  {
    "text": "composability uh the idea is that we are",
    "start": "335479",
    "end": "338600"
  },
  {
    "text": "going to have some very primitive very",
    "start": "338600",
    "end": "342080"
  },
  {
    "text": "small and basic log actions and then we",
    "start": "342080",
    "end": "344880"
  },
  {
    "text": "are going to combine them into more",
    "start": "344880",
    "end": "347199"
  },
  {
    "text": "bigger and complicated ones this is a",
    "start": "347199",
    "end": "349680"
  },
  {
    "text": "very common pattern and idea in a high",
    "start": "349680",
    "end": "351840"
  },
  {
    "text": "scill like com which are combinator",
    "start": "351840",
    "end": "354039"
  },
  {
    "text": "libraries work we Define some",
    "start": "354039",
    "end": "355919"
  },
  {
    "text": "combinators we Define some fundamental",
    "start": "355919",
    "end": "357639"
  },
  {
    "text": "and small pieces and then we create the",
    "start": "357639",
    "end": "359400"
  },
  {
    "text": "big and more complicated ones from the",
    "start": "359400",
    "end": "361919"
  },
  {
    "text": "smaller ones and the first step class is",
    "start": "361919",
    "end": "364680"
  },
  {
    "text": "a semi group semi group contains this",
    "start": "364680",
    "end": "366960"
  },
  {
    "text": "mend operator or Diamond operator which",
    "start": "366960",
    "end": "369319"
  },
  {
    "text": "takes uh two values of the same type and",
    "start": "369319",
    "end": "371639"
  },
  {
    "text": "produces new value the semigroup",
    "start": "371639",
    "end": "373800"
  },
  {
    "text": "instance for log action looks like this",
    "start": "373800",
    "end": "376280"
  },
  {
    "text": "we have two actions and we create new",
    "start": "376280",
    "end": "379240"
  },
  {
    "text": "action that first runs the the first",
    "start": "379240",
    "end": "382120"
  },
  {
    "text": "logger over the message and then runs",
    "start": "382120",
    "end": "384520"
  },
  {
    "text": "the second logger over the message so",
    "start": "384520",
    "end": "386919"
  },
  {
    "text": "that's why we can uh perform multiple",
    "start": "386919",
    "end": "389280"
  },
  {
    "text": "action over the same message so here's",
    "start": "389280",
    "end": "391880"
  },
  {
    "text": "an example you have some action that",
    "start": "391880",
    "end": "394560"
  },
  {
    "text": "prints strings to terminal but you also",
    "start": "394560",
    "end": "397400"
  },
  {
    "text": "have some action that brings strings to",
    "start": "397400",
    "end": "399440"
  },
  {
    "text": "the file so you can then uh you can",
    "start": "399440",
    "end": "402680"
  },
  {
    "text": "configure them independently and then",
    "start": "402680",
    "end": "404560"
  },
  {
    "text": "you can just compose them together with",
    "start": "404560",
    "end": "406639"
  },
  {
    "text": "a semigroup into one log action and then",
    "start": "406639",
    "end": "408479"
  },
  {
    "text": "you will print your messages to both to",
    "start": "408479",
    "end": "410560"
  },
  {
    "text": "the terminal and to the file so you",
    "start": "410560",
    "end": "412960"
  },
  {
    "text": "don't need to worry don't need to write",
    "start": "412960",
    "end": "415479"
  },
  {
    "text": "a lot of code that does a lot of things",
    "start": "415479",
    "end": "417479"
  },
  {
    "text": "at the in one piece just comp both",
    "start": "417479",
    "end": "420280"
  },
  {
    "text": "things next thing is a monoid type class",
    "start": "420280",
    "end": "422960"
  },
  {
    "text": "in addition to semigroup it contains M",
    "start": "422960",
    "end": "425000"
  },
  {
    "text": "value which is a neutral element for",
    "start": "425000",
    "end": "427039"
  },
  {
    "text": "this map operator and the instance for",
    "start": "427039",
    "end": "429280"
  },
  {
    "text": "log action uh just a log action that",
    "start": "429280",
    "end": "431960"
  },
  {
    "text": "ignores incoming message and does",
    "start": "431960",
    "end": "433720"
  },
  {
    "text": "nothing so basically empty log that does",
    "start": "433720",
    "end": "436080"
  },
  {
    "text": "nothing and this can be useful when you",
    "start": "436080",
    "end": "438680"
  },
  {
    "text": "want to disable login in some piece of",
    "start": "438680",
    "end": "440800"
  },
  {
    "text": "code so for example if you have function",
    "start": "440800",
    "end": "442360"
  },
  {
    "text": "where you want to disable login and",
    "start": "442360",
    "end": "443720"
  },
  {
    "text": "you're not interested to see logs that",
    "start": "443720",
    "end": "445360"
  },
  {
    "text": "just pass M as a log action and you uh",
    "start": "445360",
    "end": "449280"
  },
  {
    "text": "don't need to do anything",
    "start": "449280",
    "end": "450800"
  },
  {
    "text": "else",
    "start": "450800",
    "end": "452680"
  },
  {
    "text": "okay uh next let's explore the",
    "start": "452680",
    "end": "455319"
  },
  {
    "text": "contravariant family of uh type classes",
    "start": "455319",
    "end": "458360"
  },
  {
    "text": "which allows us to have even more",
    "start": "458360",
    "end": "460000"
  },
  {
    "text": "compatibility and uh",
    "start": "460000",
    "end": "463159"
  },
  {
    "text": "modularity the first type class is a",
    "start": "463159",
    "end": "465680"
  },
  {
    "text": "contravariant uh it's actually very",
    "start": "465680",
    "end": "468120"
  },
  {
    "text": "similar to the funter which is a very",
    "start": "468120",
    "end": "470199"
  },
  {
    "text": "common in popular Hill and I hope a lot",
    "start": "470199",
    "end": "472479"
  },
  {
    "text": "of you worked with it but uh you can see",
    "start": "472479",
    "end": "475599"
  },
  {
    "text": "that the type are slightly different if",
    "start": "475599",
    "end": "477400"
  },
  {
    "text": "you see the end of the slide so let's",
    "start": "477400",
    "end": "480879"
  },
  {
    "text": "try to understand the difference on the",
    "start": "480879",
    "end": "482759"
  },
  {
    "text": "example let's say that you have a flower",
    "start": "482759",
    "end": "485840"
  },
  {
    "text": "and you know how to bake a cake so you",
    "start": "485840",
    "end": "488960"
  },
  {
    "text": "can say that you can have a cake uh this",
    "start": "488960",
    "end": "491960"
  },
  {
    "text": "is uh funter because you can think of",
    "start": "491960",
    "end": "494080"
  },
  {
    "text": "funter as a like way of having things",
    "start": "494080",
    "end": "497000"
  },
  {
    "text": "you have flour you bake cake and you",
    "start": "497000",
    "end": "499000"
  },
  {
    "text": "have a cake but contravariant is about",
    "start": "499000",
    "end": "501720"
  },
  {
    "text": "consuming things so let's say you know",
    "start": "501720",
    "end": "504639"
  },
  {
    "text": "uh how to eat cakes and you know how to",
    "start": "504639",
    "end": "507120"
  },
  {
    "text": "convert flour to cakes so you can say",
    "start": "507120",
    "end": "509800"
  },
  {
    "text": "that you can eat",
    "start": "509800",
    "end": "510879"
  },
  {
    "text": "flower basically the same",
    "start": "510879",
    "end": "513880"
  },
  {
    "text": "thing so and this is the instance of",
    "start": "513880",
    "end": "516760"
  },
  {
    "text": "contravariant for log action so you know",
    "start": "516760",
    "end": "519200"
  },
  {
    "text": "how to log messages of type B you have a",
    "start": "519200",
    "end": "521200"
  },
  {
    "text": "function from A to B and now you know",
    "start": "521200",
    "end": "523080"
  },
  {
    "text": "how to log messages of Type e how it",
    "start": "523080",
    "end": "525080"
  },
  {
    "text": "works you are given a you apply function",
    "start": "525080",
    "end": "527880"
  },
  {
    "text": "to get a b and then you pass uh the B to",
    "start": "527880",
    "end": "530680"
  },
  {
    "text": "your given log action so this",
    "start": "530680",
    "end": "532959"
  },
  {
    "text": "contravariant instance allows you to",
    "start": "532959",
    "end": "534519"
  },
  {
    "text": "change the type of a message that you",
    "start": "534519",
    "end": "536240"
  },
  {
    "text": "are going to",
    "start": "536240",
    "end": "537440"
  },
  {
    "text": "consume and this is useful for",
    "start": "537440",
    "end": "539720"
  },
  {
    "text": "formatting of messages uh let's say that",
    "start": "539720",
    "end": "542920"
  },
  {
    "text": "instead of printing just strings you",
    "start": "542920",
    "end": "544760"
  },
  {
    "text": "want to print some message data type",
    "start": "544760",
    "end": "546680"
  },
  {
    "text": "which also contains some text but what",
    "start": "546680",
    "end": "549240"
  },
  {
    "text": "we have now is the action that prints",
    "start": "549240",
    "end": "551480"
  },
  {
    "text": "only strings like terminal uh is a",
    "start": "551480",
    "end": "554279"
  },
  {
    "text": "really uh basic and lowlevel interface",
    "start": "554279",
    "end": "556839"
  },
  {
    "text": "you cannot print data types that you can",
    "start": "556839",
    "end": "558680"
  },
  {
    "text": "print only strings uh but if we",
    "start": "558680",
    "end": "561240"
  },
  {
    "text": "Implement formatting function this",
    "start": "561240",
    "end": "563240"
  },
  {
    "text": "format message which takes message and",
    "start": "563240",
    "end": "565360"
  },
  {
    "text": "produces a string then we can use",
    "start": "565360",
    "end": "567399"
  },
  {
    "text": "contrarian type class to change the type",
    "start": "567399",
    "end": "569600"
  },
  {
    "text": "of the login message we apply uh format",
    "start": "569600",
    "end": "572399"
  },
  {
    "text": "message function to the action that",
    "start": "572399",
    "end": "575399"
  },
  {
    "text": "brings strings to the terminal and now",
    "start": "575399",
    "end": "577600"
  },
  {
    "text": "have action where we can actually pass",
    "start": "577600",
    "end": "579040"
  },
  {
    "text": "messages so how it will go to work you",
    "start": "579040",
    "end": "581760"
  },
  {
    "text": "are going to pass message string and the",
    "start": "581760",
    "end": "583720"
  },
  {
    "text": "list of tags and then it will be",
    "start": "583720",
    "end": "585839"
  },
  {
    "text": "formatted and as a string and then it",
    "start": "585839",
    "end": "588200"
  },
  {
    "text": "will be passed to the uh string action",
    "start": "588200",
    "end": "591079"
  },
  {
    "text": "it printed to STD out so contrari alls",
    "start": "591079",
    "end": "594959"
  },
  {
    "text": "to format",
    "start": "594959",
    "end": "597000"
  },
  {
    "text": "messages but uh uh there's also monadic",
    "start": "597000",
    "end": "601480"
  },
  {
    "text": "cont map function uh because of the",
    "start": "601480",
    "end": "603640"
  },
  {
    "text": "structure of log action we have access",
    "start": "603640",
    "end": "605519"
  },
  {
    "text": "to monad and actually all P functions",
    "start": "605519",
    "end": "608959"
  },
  {
    "text": "that are going to present I'm going to",
    "start": "608959",
    "end": "610440"
  },
  {
    "text": "present here they have monadic versions",
    "start": "610440",
    "end": "612560"
  },
  {
    "text": "and this allows us even more to create",
    "start": "612560",
    "end": "615600"
  },
  {
    "text": "even more flexible",
    "start": "615600",
    "end": "617279"
  },
  {
    "text": "interface so you can compare the Moni",
    "start": "617279",
    "end": "620079"
  },
  {
    "text": "cont map with P cont map the",
    "start": "620079",
    "end": "621600"
  },
  {
    "text": "implementation is uh basically the same",
    "start": "621600",
    "end": "624760"
  },
  {
    "text": "but instead of pure function composition",
    "start": "624760",
    "end": "627279"
  },
  {
    "text": "we are using monadic fish composition uh",
    "start": "627279",
    "end": "630320"
  },
  {
    "text": "it's really conven so how it can be used",
    "start": "630320",
    "end": "634200"
  },
  {
    "text": "let's say that now we have a message",
    "start": "634200",
    "end": "636000"
  },
  {
    "text": "that contains not only a string but UTC",
    "start": "636000",
    "end": "638600"
  },
  {
    "text": "time stamp what we usually want to do",
    "start": "638600",
    "end": "641200"
  },
  {
    "text": "when we do logging we want to show when",
    "start": "641200",
    "end": "644519"
  },
  {
    "text": "this uh message actually ured what is",
    "start": "644519",
    "end": "646560"
  },
  {
    "text": "the time of the message but we don't",
    "start": "646560",
    "end": "649200"
  },
  {
    "text": "want to call uh get current time stamp",
    "start": "649200",
    "end": "652440"
  },
  {
    "text": "function every now and then and pass it",
    "start": "652440",
    "end": "655800"
  },
  {
    "text": "time stamp explicitly every time we want",
    "start": "655800",
    "end": "658120"
  },
  {
    "text": "this to be automatically want the login",
    "start": "658120",
    "end": "659920"
  },
  {
    "text": "framework to give this for us so we can",
    "start": "659920",
    "end": "663360"
  },
  {
    "text": "implement the wi time function that",
    "start": "663360",
    "end": "665240"
  },
  {
    "text": "takes string and constructs a message",
    "start": "665240",
    "end": "667440"
  },
  {
    "text": "how it does it it takes current time and",
    "start": "667440",
    "end": "669800"
  },
  {
    "text": "then it creates message from the given",
    "start": "669800",
    "end": "671839"
  },
  {
    "text": "text and the current time and then we",
    "start": "671839",
    "end": "674880"
  },
  {
    "text": "can use simap M",
    "start": "674880",
    "end": "676800"
  },
  {
    "text": "function to create action where you will",
    "start": "676800",
    "end": "679639"
  },
  {
    "text": "give a string then it will call this wi",
    "start": "679639",
    "end": "683040"
  },
  {
    "text": "time function automatically to produce a",
    "start": "683040",
    "end": "685720"
  },
  {
    "text": "Tim stamp and create message data type",
    "start": "685720",
    "end": "688320"
  },
  {
    "text": "and if you give if you have an action",
    "start": "688320",
    "end": "690519"
  },
  {
    "text": "that can log messages then you",
    "start": "690519",
    "end": "693880"
  },
  {
    "text": "can uh like have messages with a Tim",
    "start": "693880",
    "end": "696320"
  },
  {
    "text": "stamp and it will be doing automatically",
    "start": "696320",
    "end": "699160"
  },
  {
    "text": "every time for you this is pretty useful",
    "start": "699160",
    "end": "702200"
  },
  {
    "text": "simap M allows you to attach different",
    "start": "702200",
    "end": "704240"
  },
  {
    "text": "monadic things uh for your message on",
    "start": "704240",
    "end": "706600"
  },
  {
    "text": "the",
    "start": "706600",
    "end": "707839"
  },
  {
    "text": "Fly the next useful thing is actually a",
    "start": "707839",
    "end": "710440"
  },
  {
    "text": "filter so we have let's say we have a",
    "start": "710440",
    "end": "713040"
  },
  {
    "text": "predicate that tells what messages we",
    "start": "713040",
    "end": "714920"
  },
  {
    "text": "are interested in and if you have a log",
    "start": "714920",
    "end": "717000"
  },
  {
    "text": "action of messages you can create new",
    "start": "717000",
    "end": "718880"
  },
  {
    "text": "log ction that will perform uh logs only",
    "start": "718880",
    "end": "722000"
  },
  {
    "text": "for those messages that satisfy the",
    "start": "722000",
    "end": "724440"
  },
  {
    "text": "given predicate uh let's see how this",
    "start": "724440",
    "end": "727200"
  },
  {
    "text": "function can be useful now we have a",
    "start": "727200",
    "end": "730200"
  },
  {
    "text": "sity data type that tells us uh how",
    "start": "730200",
    "end": "734000"
  },
  {
    "text": "important the message is so our message",
    "start": "734000",
    "end": "736880"
  },
  {
    "text": "data type now contains not only the text",
    "start": "736880",
    "end": "739600"
  },
  {
    "text": "but also this severity level so you",
    "start": "739600",
    "end": "741959"
  },
  {
    "text": "might have some debug messages that are",
    "start": "741959",
    "end": "744279"
  },
  {
    "text": "useful during development uh to see what",
    "start": "744279",
    "end": "746839"
  },
  {
    "text": "your program is actually doing or and",
    "start": "746839",
    "end": "748720"
  },
  {
    "text": "then you also have error severity which",
    "start": "748720",
    "end": "750800"
  },
  {
    "text": "tells us okay this is a critical error",
    "start": "750800",
    "end": "752760"
  },
  {
    "text": "you need to take pay pay attention to",
    "start": "752760",
    "end": "755440"
  },
  {
    "text": "that uh so well when you're developing",
    "start": "755440",
    "end": "758440"
  },
  {
    "text": "your application you might be interested",
    "start": "758440",
    "end": "760399"
  },
  {
    "text": "in seeing all messages to understand",
    "start": "760399",
    "end": "762279"
  },
  {
    "text": "what actually is going on but when you",
    "start": "762279",
    "end": "764560"
  },
  {
    "text": "give your application to users you don't",
    "start": "764560",
    "end": "766360"
  },
  {
    "text": "want them to see uh all logs to so they",
    "start": "766360",
    "end": "769880"
  },
  {
    "text": "want to see this noisy output so you",
    "start": "769880",
    "end": "772519"
  },
  {
    "text": "might want to filter only messages that",
    "start": "772519",
    "end": "775519"
  },
  {
    "text": "has severity warning or high other input",
    "start": "775519",
    "end": "778399"
  },
  {
    "text": "is the not",
    "start": "778399",
    "end": "780399"
  },
  {
    "text": "interesting uh and that's how you can",
    "start": "780399",
    "end": "782560"
  },
  {
    "text": "create new log action and the idea here",
    "start": "782560",
    "end": "784440"
  },
  {
    "text": "it's actually uh lazy and composable",
    "start": "784440",
    "end": "788079"
  },
  {
    "text": "with the rest of the functions because",
    "start": "788079",
    "end": "790079"
  },
  {
    "text": "if you have in your leg log message out",
    "start": "790079",
    "end": "793000"
  },
  {
    "text": "if you have a different functions that",
    "start": "793000",
    "end": "794880"
  },
  {
    "text": "do some heavy IO or do formatting uh if",
    "start": "794880",
    "end": "798000"
  },
  {
    "text": "uh your function doesn't pass filter if",
    "start": "798000",
    "end": "800480"
  },
  {
    "text": "doesn't pass predicate it would just",
    "start": "800480",
    "end": "802440"
  },
  {
    "text": "won't be called so you won't do extra",
    "start": "802440",
    "end": "804519"
  },
  {
    "text": "work if",
    "start": "804519",
    "end": "806320"
  },
  {
    "text": "you uh don't satisfy the requirement",
    "start": "806320",
    "end": "809639"
  },
  {
    "text": "and will save you some time it's also",
    "start": "809639",
    "end": "811480"
  },
  {
    "text": "pretty convenient and in the spirit of",
    "start": "811480",
    "end": "815160"
  },
  {
    "text": "hcal okay so next type class is a",
    "start": "815199",
    "end": "819680"
  },
  {
    "text": "divisible type class uh it tells you how",
    "start": "819680",
    "end": "823920"
  },
  {
    "text": "to split uh one part into two smaller",
    "start": "823920",
    "end": "827000"
  },
  {
    "text": "parts and then handle those parts uh one",
    "start": "827000",
    "end": "831079"
  },
  {
    "text": "by by one so for example uh let's say",
    "start": "831079",
    "end": "836160"
  },
  {
    "text": "that you have 8 hours of your work day",
    "start": "836160",
    "end": "839480"
  },
  {
    "text": "and during your work day you need to do",
    "start": "839480",
    "end": "841399"
  },
  {
    "text": "actual programming but you also need to",
    "start": "841399",
    "end": "843519"
  },
  {
    "text": "read some news like Twitter or edit so",
    "start": "843519",
    "end": "846320"
  },
  {
    "text": "if you have some function which will",
    "start": "846320",
    "end": "848279"
  },
  {
    "text": "tell you how to split your time in",
    "start": "848279",
    "end": "850320"
  },
  {
    "text": "between the these two actions then you",
    "start": "850320",
    "end": "852600"
  },
  {
    "text": "know how to spend your whole working day",
    "start": "852600",
    "end": "855000"
  },
  {
    "text": "uh the conquer function is a neutral",
    "start": "855000",
    "end": "858199"
  },
  {
    "text": "element for the Divide operation in our",
    "start": "858199",
    "end": "861199"
  },
  {
    "text": "example this means that you can always",
    "start": "861199",
    "end": "863240"
  },
  {
    "text": "do nothing during your work day and this",
    "start": "863240",
    "end": "865160"
  },
  {
    "text": "still will be a valid working",
    "start": "865160",
    "end": "868040"
  },
  {
    "text": "day so uh the divisible instance for log",
    "start": "868040",
    "end": "871839"
  },
  {
    "text": "action is uh pretty straightforward the",
    "start": "871839",
    "end": "874519"
  },
  {
    "text": "concer function is the same as M it's a",
    "start": "874519",
    "end": "877000"
  },
  {
    "text": "log action that does nothing uh but the",
    "start": "877000",
    "end": "880199"
  },
  {
    "text": "Divide is also very simple we have a",
    "start": "880199",
    "end": "883320"
  },
  {
    "text": "message of Type e we apply function f to",
    "start": "883320",
    "end": "885639"
  },
  {
    "text": "have a pair of B and C and then we first",
    "start": "885639",
    "end": "888440"
  },
  {
    "text": "log the part B with our first log action",
    "start": "888440",
    "end": "891600"
  },
  {
    "text": "and the uh part C with the second log",
    "start": "891600",
    "end": "894759"
  },
  {
    "text": "action so uh how this can be useful",
    "start": "894759",
    "end": "898519"
  },
  {
    "text": "let's say that that you want to uh print",
    "start": "898519",
    "end": "901199"
  },
  {
    "text": "very compact output uh to the terminal",
    "start": "901199",
    "end": "904320"
  },
  {
    "text": "but to the file you want to print more",
    "start": "904320",
    "end": "906079"
  },
  {
    "text": "your BOS output to later to analyze it",
    "start": "906079",
    "end": "908800"
  },
  {
    "text": "later so you can just split your message",
    "start": "908800",
    "end": "910519"
  },
  {
    "text": "type in two parts you're interested to",
    "start": "910519",
    "end": "911880"
  },
  {
    "text": "see in the in the terminal and the other",
    "start": "911880",
    "end": "914120"
  },
  {
    "text": "parts to go to the file or something",
    "start": "914120",
    "end": "916560"
  },
  {
    "text": "like",
    "start": "916560",
    "end": "917959"
  },
  {
    "text": "that NE type plus is a",
    "start": "917959",
    "end": "921279"
  },
  {
    "text": "decidable",
    "start": "921279",
    "end": "922800"
  },
  {
    "text": "uh so it has similar to divisible but it",
    "start": "922800",
    "end": "926560"
  },
  {
    "text": "has a function from a to either BC",
    "start": "926560",
    "end": "929680"
  },
  {
    "text": "so uh let's say that you have uh some",
    "start": "929680",
    "end": "933680"
  },
  {
    "text": "money and you want to buy a house or car",
    "start": "933680",
    "end": "938399"
  },
  {
    "text": "but you can afford both so you need to",
    "start": "938399",
    "end": "940399"
  },
  {
    "text": "decide what you're going to buy so you",
    "start": "940399",
    "end": "943519"
  },
  {
    "text": "uh first decide the what you're going to",
    "start": "943519",
    "end": "945920"
  },
  {
    "text": "spend money for and then uh you can say",
    "start": "945920",
    "end": "948199"
  },
  {
    "text": "that you know how to deal with your",
    "start": "948199",
    "end": "949319"
  },
  {
    "text": "money the loose here means that you can",
    "start": "949319",
    "end": "952600"
  },
  {
    "text": "always burn your money and throw the",
    "start": "952600",
    "end": "954519"
  },
  {
    "text": "ashes into it but we all know that it's",
    "start": "954519",
    "end": "957040"
  },
  {
    "text": "just absurd",
    "start": "957040",
    "end": "959759"
  },
  {
    "text": "so uh decidable is similar to",
    "start": "959759",
    "end": "962720"
  },
  {
    "text": "Alternative uh uh because it allows you",
    "start": "962720",
    "end": "965160"
  },
  {
    "text": "to handle only one cases not both",
    "start": "965160",
    "end": "966800"
  },
  {
    "text": "actions will be performed only one while",
    "start": "966800",
    "end": "969160"
  },
  {
    "text": "divisible will perform both actions so",
    "start": "969160",
    "end": "972600"
  },
  {
    "text": "and the decidable instance for log",
    "start": "972600",
    "end": "974160"
  },
  {
    "text": "action is also uh pretty straightforward",
    "start": "974160",
    "end": "977639"
  },
  {
    "text": "and simple uh for choose we do the same",
    "start": "977639",
    "end": "980720"
  },
  {
    "text": "thing as for divisible but we handle",
    "start": "980720",
    "end": "982160"
  },
  {
    "text": "only one",
    "start": "982160",
    "end": "983399"
  },
  {
    "text": "case and the eer",
    "start": "983399",
    "end": "986480"
  },
  {
    "text": "function okay so how it can be useful we",
    "start": "986480",
    "end": "989440"
  },
  {
    "text": "can actually Implement our filtering",
    "start": "989440",
    "end": "991680"
  },
  {
    "text": "function using decidable type class so",
    "start": "991680",
    "end": "995440"
  },
  {
    "text": "the type is the same and the behavior is",
    "start": "995440",
    "end": "998040"
  },
  {
    "text": "the same but the implementation is",
    "start": "998040",
    "end": "999720"
  },
  {
    "text": "different so we can use choose to say",
    "start": "999720",
    "end": "1001600"
  },
  {
    "text": "that what message is going to",
    "start": "1001600",
    "end": "1004399"
  },
  {
    "text": "do um so yeah another example is that",
    "start": "1004399",
    "end": "1009120"
  },
  {
    "text": "let's say that you have some",
    "start": "1009120",
    "end": "1010560"
  },
  {
    "text": "non-important messages with a severity",
    "start": "1010560",
    "end": "1012560"
  },
  {
    "text": "level and they're going to go into",
    "start": "1012560",
    "end": "1014399"
  },
  {
    "text": "terminal but if you have very important",
    "start": "1014399",
    "end": "1016440"
  },
  {
    "text": "message like error then want to send an",
    "start": "1016440",
    "end": "1019959"
  },
  {
    "text": "email to your Tech Team so they will fix",
    "start": "1019959",
    "end": "1021959"
  },
  {
    "text": "this error message so you can use this",
    "start": "1021959",
    "end": "1024319"
  },
  {
    "text": "choose function to tell how to handle",
    "start": "1024319",
    "end": "1026918"
  },
  {
    "text": "different cases and different messages",
    "start": "1026919",
    "end": "1028600"
  },
  {
    "text": "this is like dispatching of output to",
    "start": "1028600",
    "end": "1030760"
  },
  {
    "text": "different",
    "start": "1030760",
    "end": "1033438"
  },
  {
    "text": "sources okay next part um the most fun",
    "start": "1033799",
    "end": "1037720"
  },
  {
    "text": "part is how we can use commut in the",
    "start": "1037720",
    "end": "1039839"
  },
  {
    "text": "login",
    "start": "1039839",
    "end": "1041079"
  },
  {
    "text": "framework so this is a commut type class",
    "start": "1041079",
    "end": "1043959"
  },
  {
    "text": "it's very similar to monut again very",
    "start": "1043959",
    "end": "1047199"
  },
  {
    "text": "familiar uh to most ular developers but",
    "start": "1047199",
    "end": "1050120"
  },
  {
    "text": "the errors are reversed unfortunately",
    "start": "1050120",
    "end": "1052240"
  },
  {
    "text": "Kats are not that popular and they don't",
    "start": "1052240",
    "end": "1054640"
  },
  {
    "text": "have many use cases but on out that they",
    "start": "1054640",
    "end": "1057799"
  },
  {
    "text": "can actually be used to approach the",
    "start": "1057799",
    "end": "1060600"
  },
  {
    "text": "login problem and for our reference",
    "start": "1060600",
    "end": "1063120"
  },
  {
    "text": "point we are going to use the commad",
    "start": "1063120",
    "end": "1065000"
  },
  {
    "text": "instance for the function Arrow so if we",
    "start": "1065000",
    "end": "1067520"
  },
  {
    "text": "know that the argument of a function is",
    "start": "1067520",
    "end": "1069720"
  },
  {
    "text": "a monoid then we actually can Implement",
    "start": "1069720",
    "end": "1072000"
  },
  {
    "text": "commad instance for the function Arrow",
    "start": "1072000",
    "end": "1074200"
  },
  {
    "text": "how it works extracts uh takes a",
    "start": "1074200",
    "end": "1076679"
  },
  {
    "text": "function from a to to a and needs to",
    "start": "1076679",
    "end": "1078679"
  },
  {
    "text": "return a well the only way to return a",
    "start": "1078679",
    "end": "1081760"
  },
  {
    "text": "is to just pass some m to the function",
    "start": "1081760",
    "end": "1085120"
  },
  {
    "text": "but we know that the m has a mono",
    "start": "1085120",
    "end": "1086600"
  },
  {
    "text": "instant so I can always pass pass M the",
    "start": "1086600",
    "end": "1089400"
  },
  {
    "text": "duplicate function uh given it takes a",
    "start": "1089400",
    "end": "1092520"
  },
  {
    "text": "function from M to a it needs to produce",
    "start": "1092520",
    "end": "1094480"
  },
  {
    "text": "a function that takes two M's and it",
    "start": "1094480",
    "end": "1096760"
  },
  {
    "text": "produces one a but again we know that",
    "start": "1096760",
    "end": "1099000"
  },
  {
    "text": "the m is a monoid so we can squash these",
    "start": "1099000",
    "end": "1101200"
  },
  {
    "text": "two M's into single one and pass to our",
    "start": "1101200",
    "end": "1103600"
  },
  {
    "text": "given",
    "start": "1103600",
    "end": "1104480"
  },
  {
    "text": "function so this is how the instance",
    "start": "1104480",
    "end": "1106520"
  },
  {
    "text": "works well uh because of the log action",
    "start": "1106520",
    "end": "1110760"
  },
  {
    "text": "data type structure we can't Implement",
    "start": "1110760",
    "end": "1113360"
  },
  {
    "text": "commad instance it just doesn't have the",
    "start": "1113360",
    "end": "1115559"
  },
  {
    "text": "proper kind and proper structure but it",
    "start": "1115559",
    "end": "1117480"
  },
  {
    "text": "doesn't mean that we cannot enjoy",
    "start": "1117480",
    "end": "1119400"
  },
  {
    "text": "comonads we can uh implement the same",
    "start": "1119400",
    "end": "1121919"
  },
  {
    "text": "interface in the same",
    "start": "1121919",
    "end": "1123919"
  },
  {
    "text": "spirit so the extract contains uh the",
    "start": "1123919",
    "end": "1128400"
  },
  {
    "text": "same it has the same implementation we",
    "start": "1128400",
    "end": "1130039"
  },
  {
    "text": "have a log action and if we not that our",
    "start": "1130039",
    "end": "1132000"
  },
  {
    "text": "messages has a mon instance we just pass",
    "start": "1132000",
    "end": "1134000"
  },
  {
    "text": "me to our action and uh that's all we",
    "start": "1134000",
    "end": "1137440"
  },
  {
    "text": "handled the message the duplicate is",
    "start": "1137440",
    "end": "1139840"
  },
  {
    "text": "slightly more interesting if we have a",
    "start": "1139840",
    "end": "1141960"
  },
  {
    "text": "log action that can log single message",
    "start": "1141960",
    "end": "1144720"
  },
  {
    "text": "then we can log uh we can have a log",
    "start": "1144720",
    "end": "1147120"
  },
  {
    "text": "action that logs two messages it's also",
    "start": "1147120",
    "end": "1149480"
  },
  {
    "text": "not that difficult we just combine those",
    "start": "1149480",
    "end": "1151320"
  },
  {
    "text": "messages together if we know that they",
    "start": "1151320",
    "end": "1153120"
  },
  {
    "text": "have a semigroup instance and pass to",
    "start": "1153120",
    "end": "1155000"
  },
  {
    "text": "our given log action so means that we",
    "start": "1155000",
    "end": "1158240"
  },
  {
    "text": "can log many messages at once but again",
    "start": "1158240",
    "end": "1161520"
  },
  {
    "text": "why why stop at two messages if we can",
    "start": "1161520",
    "end": "1163320"
  },
  {
    "text": "have any number of messages from zero to",
    "start": "1163320",
    "end": "1165760"
  },
  {
    "text": "infinite lists so we can implement this",
    "start": "1165760",
    "end": "1168760"
  },
  {
    "text": "multiplicate function which uh",
    "start": "1168760",
    "end": "1170960"
  },
  {
    "text": "constructs log action that can handle",
    "start": "1170960",
    "end": "1172400"
  },
  {
    "text": "any foldable of messages it's the same",
    "start": "1172400",
    "end": "1174520"
  },
  {
    "text": "the duplicate but we have a foldable of",
    "start": "1174520",
    "end": "1176919"
  },
  {
    "text": "messages potentially contain it maybe",
    "start": "1176919",
    "end": "1178880"
  },
  {
    "text": "maybe it can be maybe or list and then",
    "start": "1178880",
    "end": "1181400"
  },
  {
    "text": "we can just fold this messages into",
    "start": "1181400",
    "end": "1183480"
  },
  {
    "text": "single one and log them uh all at",
    "start": "1183480",
    "end": "1188880"
  },
  {
    "text": "once so uh let's recap all our",
    "start": "1189080",
    "end": "1192640"
  },
  {
    "text": "abstractions the semigroup allows us to",
    "start": "1192640",
    "end": "1195440"
  },
  {
    "text": "perform multiple actions over the single",
    "start": "1195440",
    "end": "1198200"
  },
  {
    "text": "uh message it's basically like multiple",
    "start": "1198200",
    "end": "1199919"
  },
  {
    "text": "dispatch and concurrency the monoid",
    "start": "1199919",
    "end": "1202039"
  },
  {
    "text": "instance gives us empty log action that",
    "start": "1202039",
    "end": "1204520"
  },
  {
    "text": "does nothing and this allows us to",
    "start": "1204520",
    "end": "1206000"
  },
  {
    "text": "disable loging the contravariant allows",
    "start": "1206000",
    "end": "1208360"
  },
  {
    "text": "us to change the type of the login",
    "start": "1208360",
    "end": "1210720"
  },
  {
    "text": "message and this is useful for",
    "start": "1210720",
    "end": "1212200"
  },
  {
    "text": "formatting messages the visible allows",
    "start": "1212200",
    "end": "1215120"
  },
  {
    "text": "us to split uh our message into smaller",
    "start": "1215120",
    "end": "1219440"
  },
  {
    "text": "parts and uh handle them independently",
    "start": "1219440",
    "end": "1223360"
  },
  {
    "text": "so this gives us even more",
    "start": "1223360",
    "end": "1226240"
  },
  {
    "text": "modularity uh decidable instance allows",
    "start": "1226240",
    "end": "1228840"
  },
  {
    "text": "to choose how we are going to handle",
    "start": "1228840",
    "end": "1230880"
  },
  {
    "text": "this message so this is can be useful",
    "start": "1230880",
    "end": "1232640"
  },
  {
    "text": "for filtering or for redirecting output",
    "start": "1232640",
    "end": "1234760"
  },
  {
    "text": "to different sources and common Nots",
    "start": "1234760",
    "end": "1237200"
  },
  {
    "text": "allows us to squash many messages into",
    "start": "1237200",
    "end": "1239400"
  },
  {
    "text": "single one and instead of Performing",
    "start": "1239400",
    "end": "1241720"
  },
  {
    "text": "multiple potentially expensive login",
    "start": "1241720",
    "end": "1244000"
  },
  {
    "text": "actions we can perform only one just",
    "start": "1244000",
    "end": "1246039"
  },
  {
    "text": "need to combine this useful for",
    "start": "1246039",
    "end": "1248760"
  },
  {
    "text": "optimization so uh these type classes",
    "start": "1248760",
    "end": "1252360"
  },
  {
    "text": "that I enumerated here these are very",
    "start": "1252360",
    "end": "1255320"
  },
  {
    "text": "abstract and general type classes uh but",
    "start": "1255320",
    "end": "1259000"
  },
  {
    "text": "if we apply them to the login problem",
    "start": "1259000",
    "end": "1261600"
  },
  {
    "text": "they actually solve real problem real",
    "start": "1261600",
    "end": "1264000"
  },
  {
    "text": "practical problems that we face every",
    "start": "1264000",
    "end": "1266120"
  },
  {
    "text": "day and uh it's just feels warm and nice",
    "start": "1266120",
    "end": "1271760"
  },
  {
    "text": "when you can see how the subtractions",
    "start": "1271760",
    "end": "1273400"
  },
  {
    "text": "can be used because uh these are not",
    "start": "1273400",
    "end": "1276520"
  },
  {
    "text": "some ad hoc type classes which are",
    "start": "1276520",
    "end": "1278760"
  },
  {
    "text": "introduced which are implemented to",
    "start": "1278760",
    "end": "1280760"
  },
  {
    "text": "introduce some overloaded names this are",
    "start": "1280760",
    "end": "1282760"
  },
  {
    "text": "well understood type class that have",
    "start": "1282760",
    "end": "1284360"
  },
  {
    "text": "semantics attached to them that has they",
    "start": "1284360",
    "end": "1286400"
  },
  {
    "text": "have laws so",
    "start": "1286400",
    "end": "1289159"
  },
  {
    "text": "H they have ecosystem around them and",
    "start": "1289159",
    "end": "1291000"
  },
  {
    "text": "you can enjoy this ecosystem if you",
    "start": "1291000",
    "end": "1292919"
  },
  {
    "text": "implement this instances so it just",
    "start": "1292919",
    "end": "1295279"
  },
  {
    "text": "feels that you are moving in the right",
    "start": "1295279",
    "end": "1296600"
  },
  {
    "text": "direction if if you're doing these",
    "start": "1296600",
    "end": "1299240"
  },
  {
    "text": "things and again it's really nice how",
    "start": "1299240",
    "end": "1301039"
  },
  {
    "text": "different abstractions can help us to",
    "start": "1301039",
    "end": "1302880"
  },
  {
    "text": "solve uh different",
    "start": "1302880",
    "end": "1305799"
  },
  {
    "text": "problems okay uh now I'm going to tell",
    "start": "1305799",
    "end": "1309159"
  },
  {
    "text": "how uh to integrate this whole log",
    "start": "1309159",
    "end": "1312799"
  },
  {
    "text": "action uh data type",
    "start": "1312799",
    "end": "1315360"
  },
  {
    "text": "into your application uh because",
    "start": "1315360",
    "end": "1319200"
  },
  {
    "text": "we we we want to enjoy all these type",
    "start": "1319200",
    "end": "1321480"
  },
  {
    "text": "classes all these functions all these",
    "start": "1321480",
    "end": "1322960"
  },
  {
    "text": "combinators but at the same time uh we",
    "start": "1322960",
    "end": "1325520"
  },
  {
    "text": "don't want to do a lot of like work to",
    "start": "1325520",
    "end": "1328600"
  },
  {
    "text": "pass this log action explicitly uh it's",
    "start": "1328600",
    "end": "1331120"
  },
  {
    "text": "nice to have abstract and nice and Sound",
    "start": "1331120",
    "end": "1333279"
  },
  {
    "text": "Library but at the same time we want to",
    "start": "1333279",
    "end": "1334840"
  },
  {
    "text": "have convenient Library can be used and",
    "start": "1334840",
    "end": "1336960"
  },
  {
    "text": "clock actually can be very",
    "start": "1336960",
    "end": "1338840"
  },
  {
    "text": "convenient so uh first what you need to",
    "start": "1338840",
    "end": "1341960"
  },
  {
    "text": "do is to create environment uh that will",
    "start": "1341960",
    "end": "1345039"
  },
  {
    "text": "store your log action this environment",
    "start": "1345039",
    "end": "1347159"
  },
  {
    "text": "is parameterized by the the uh monad",
    "start": "1347159",
    "end": "1350159"
  },
  {
    "text": "which we're going to instantiate later",
    "start": "1350159",
    "end": "1352360"
  },
  {
    "text": "and it contains different parameters for",
    "start": "1352360",
    "end": "1353919"
  },
  {
    "text": "your application like ports or different",
    "start": "1353919",
    "end": "1355799"
  },
  {
    "text": "Maps like sessions so this environment",
    "start": "1355799",
    "end": "1359520"
  },
  {
    "text": "contains parameters for your application",
    "start": "1359520",
    "end": "1361320"
  },
  {
    "text": "but also contains a log action which",
    "start": "1361320",
    "end": "1363080"
  },
  {
    "text": "parameterized by the same type variable",
    "start": "1363080",
    "end": "1364520"
  },
  {
    "text": "M uh the message data type here is the",
    "start": "1364520",
    "end": "1367919"
  },
  {
    "text": "message from the Cog Library uh kog",
    "start": "1367919",
    "end": "1370320"
  },
  {
    "text": "already implements a lot of functions",
    "start": "1370320",
    "end": "1372200"
  },
  {
    "text": "and a lot of data types so you can use",
    "start": "1372200",
    "end": "1375000"
  },
  {
    "text": "loging with um little effort so so if",
    "start": "1375000",
    "end": "1378640"
  },
  {
    "text": "you just need to enable login can be",
    "start": "1378640",
    "end": "1379919"
  },
  {
    "text": "done very quickly and very easily the",
    "start": "1379919",
    "end": "1381760"
  },
  {
    "text": "first step is to introduce uh the",
    "start": "1381760",
    "end": "1383679"
  },
  {
    "text": "location to your",
    "start": "1383679",
    "end": "1385039"
  },
  {
    "text": "environment the next step is to",
    "start": "1385039",
    "end": "1386880"
  },
  {
    "text": "implement the haslock instance uh it has",
    "start": "1386880",
    "end": "1389360"
  },
  {
    "text": "three type variables it's environment",
    "start": "1389360",
    "end": "1391520"
  },
  {
    "text": "the message data type and the mon not M",
    "start": "1391520",
    "end": "1394000"
  },
  {
    "text": "which we going where we're going to look",
    "start": "1394000",
    "end": "1395679"
  },
  {
    "text": "this is a lenslike data type it has",
    "start": "1395679",
    "end": "1397520"
  },
  {
    "text": "getter and Setter basically when in",
    "start": "1397520",
    "end": "1399559"
  },
  {
    "text": "order to implement this instance you",
    "start": "1399559",
    "end": "1401400"
  },
  {
    "text": "need to tell how to get the log action",
    "start": "1401400",
    "end": "1403520"
  },
  {
    "text": "from your environment and need how to",
    "start": "1403520",
    "end": "1405880"
  },
  {
    "text": "set so you can change uh your enironment",
    "start": "1405880",
    "end": "1409760"
  },
  {
    "text": "use a new log action and apply all the",
    "start": "1409760",
    "end": "1411440"
  },
  {
    "text": "functions that we uh that we introduced",
    "start": "1411440",
    "end": "1415039"
  },
  {
    "text": "earlier to the log action inside your",
    "start": "1415039",
    "end": "1416840"
  },
  {
    "text": "environment so you don't need to pass",
    "start": "1416840",
    "end": "1418919"
  },
  {
    "text": "this environment explicitly you don't",
    "start": "1418919",
    "end": "1420640"
  },
  {
    "text": "need to pass log action just St at once",
    "start": "1420640",
    "end": "1422360"
  },
  {
    "text": "in environment you st how to get from",
    "start": "1422360",
    "end": "1424320"
  },
  {
    "text": "envir how to set and uh move",
    "start": "1424320",
    "end": "1428880"
  },
  {
    "text": "further and the next step is to",
    "start": "1428880",
    "end": "1431200"
  },
  {
    "text": "implement your application manad so here",
    "start": "1431200",
    "end": "1433320"
  },
  {
    "text": "is the like somewhat common reader T",
    "start": "1433320",
    "end": "1436760"
  },
  {
    "text": "pattern we have reader T trans for it",
    "start": "1436760",
    "end": "1439200"
  },
  {
    "text": "contains environment parameterized by",
    "start": "1439200",
    "end": "1441400"
  },
  {
    "text": "the same manut as we introduced just now",
    "start": "1441400",
    "end": "1443840"
  },
  {
    "text": "so with environment for our application",
    "start": "1443840",
    "end": "1446600"
  },
  {
    "text": "and on top of the i nut and we need to",
    "start": "1446600",
    "end": "1449159"
  },
  {
    "text": "derive a bunch of instances so they can",
    "start": "1449159",
    "end": "1452279"
  },
  {
    "text": "be derived automatically so you don't",
    "start": "1452279",
    "end": "1453720"
  },
  {
    "text": "need to write all that code to enjoy the",
    "start": "1453720",
    "end": "1456440"
  },
  {
    "text": "login and the next part is actually",
    "start": "1456440",
    "end": "1458760"
  },
  {
    "text": "using the login so let's say we have",
    "start": "1458760",
    "end": "1460760"
  },
  {
    "text": "some Handler that sends SMS messages but",
    "start": "1460760",
    "end": "1464840"
  },
  {
    "text": "uh while we're developing we want to",
    "start": "1464840",
    "end": "1467000"
  },
  {
    "text": "lock the message with the abity what",
    "start": "1467000",
    "end": "1469240"
  },
  {
    "text": "phone we actually",
    "start": "1469240",
    "end": "1470960"
  },
  {
    "text": "sending and this uh function uh it takes",
    "start": "1470960",
    "end": "1474399"
  },
  {
    "text": "phone and uh returns nothing but in",
    "start": "1474399",
    "end": "1476760"
  },
  {
    "text": "monad context M and it has two",
    "start": "1476760",
    "end": "1478720"
  },
  {
    "text": "constraints monad SMS which tells us how",
    "start": "1478720",
    "end": "1481720"
  },
  {
    "text": "to send SMS and this with lock type",
    "start": "1481720",
    "end": "1483840"
  },
  {
    "text": "class from the colog library which says",
    "start": "1483840",
    "end": "1485640"
  },
  {
    "text": "that this monat m has access to",
    "start": "1485640",
    "end": "1488399"
  },
  {
    "text": "environment that can log messages and",
    "start": "1488399",
    "end": "1491559"
  },
  {
    "text": "this log function it comes from uh goog",
    "start": "1491559",
    "end": "1495039"
  },
  {
    "text": "package so this basically tells us how",
    "start": "1495039",
    "end": "1497559"
  },
  {
    "text": "to integrate it's not the difficult and",
    "start": "1497559",
    "end": "1499559"
  },
  {
    "text": "the idea here that it's uh plays nicely",
    "start": "1499559",
    "end": "1502399"
  },
  {
    "text": "with common programming patterns in",
    "start": "1502399",
    "end": "1504760"
  },
  {
    "text": "hill and here's the output with default",
    "start": "1504760",
    "end": "1507320"
  },
  {
    "text": "settings so in clock we have colorful",
    "start": "1507320",
    "end": "1509640"
  },
  {
    "text": "City uh which shall which helps you to",
    "start": "1509640",
    "end": "1514159"
  },
  {
    "text": "like tell difference between different",
    "start": "1514159",
    "end": "1516120"
  },
  {
    "text": "messages we have a time stamp we have",
    "start": "1516120",
    "end": "1518559"
  },
  {
    "text": "the line number of the source code so",
    "start": "1518559",
    "end": "1521279"
  },
  {
    "text": "it's Al usually important to see when",
    "start": "1521279",
    "end": "1524080"
  },
  {
    "text": "where this login happened so we have",
    "start": "1524080",
    "end": "1525679"
  },
  {
    "text": "like model name and the function name in",
    "start": "1525679",
    "end": "1527520"
  },
  {
    "text": "the line in the qu we also have the",
    "start": "1527520",
    "end": "1529679"
  },
  {
    "text": "thread ID which tells us uh what thread",
    "start": "1529679",
    "end": "1532960"
  },
  {
    "text": "it prints Also may be useful in",
    "start": "1532960",
    "end": "1534640"
  },
  {
    "text": "concurrent case when you have multiple",
    "start": "1534640",
    "end": "1536080"
  },
  {
    "text": "threads that do logging you want to see",
    "start": "1536080",
    "end": "1538279"
  },
  {
    "text": "and actually the message itself so the",
    "start": "1538279",
    "end": "1540480"
  },
  {
    "text": "output might be a little bit re bothos",
    "start": "1540480",
    "end": "1542000"
  },
  {
    "text": "but it helps and again as I said you can",
    "start": "1542000",
    "end": "1544399"
  },
  {
    "text": "always Implement different formatting",
    "start": "1544399",
    "end": "1546000"
  },
  {
    "text": "functions you can just you just need to",
    "start": "1546000",
    "end": "1547840"
  },
  {
    "text": "plug in this little piece change",
    "start": "1547840",
    "end": "1549440"
  },
  {
    "text": "formatting function with another one and",
    "start": "1549440",
    "end": "1551320"
  },
  {
    "text": "you will have different formatting in",
    "start": "1551320",
    "end": "1552760"
  },
  {
    "text": "the way you",
    "start": "1552760",
    "end": "1555159"
  },
  {
    "text": "want okay so uh Cog is a",
    "start": "1555240",
    "end": "1559120"
  },
  {
    "text": "very young library but it's been uh here",
    "start": "1559120",
    "end": "1561840"
  },
  {
    "text": "for a while and it contains some",
    "start": "1561840",
    "end": "1563960"
  },
  {
    "text": "ecosystem around it so there is main",
    "start": "1563960",
    "end": "1566559"
  },
  {
    "text": "colog repository which contains four",
    "start": "1566559",
    "end": "1568559"
  },
  {
    "text": "core packages which I mentioned at the",
    "start": "1568559",
    "end": "1570559"
  },
  {
    "text": "beginning of the",
    "start": "1570559",
    "end": "1571880"
  },
  {
    "text": "presentation they maintained by our",
    "start": "1571880",
    "end": "1574120"
  },
  {
    "text": "organization and uh there is Colo CIS",
    "start": "1574120",
    "end": "1576720"
  },
  {
    "text": "package which is a CIS loock",
    "start": "1576720",
    "end": "1577880"
  },
  {
    "text": "implementation on top of the collo uh I",
    "start": "1577880",
    "end": "1580600"
  },
  {
    "text": "was also surprised to know that there is",
    "start": "1580600",
    "end": "1582440"
  },
  {
    "text": "actually scull implementation of the kog",
    "start": "1582440",
    "end": "1584880"
  },
  {
    "text": "ideas so they were adopted in different",
    "start": "1584880",
    "end": "1586679"
  },
  {
    "text": "language and you can see the Imp itation",
    "start": "1586679",
    "end": "1588640"
  },
  {
    "text": "in the scal package there's also freay",
    "start": "1588640",
    "end": "1591279"
  },
  {
    "text": "repository which contains uh template",
    "start": "1591279",
    "end": "1594080"
  },
  {
    "text": "for Hill production level applications",
    "start": "1594080",
    "end": "1596720"
  },
  {
    "text": "and use scoc as a login Library so it so",
    "start": "1596720",
    "end": "1599200"
  },
  {
    "text": "shows how to use login like more",
    "start": "1599200",
    "end": "1600840"
  },
  {
    "text": "production application bigger example",
    "start": "1600840",
    "end": "1602799"
  },
  {
    "text": "you can check this out as well and",
    "start": "1602799",
    "end": "1604640"
  },
  {
    "text": "actually there is my blog post about the",
    "start": "1604640",
    "end": "1607159"
  },
  {
    "text": "col Library where I show describe this",
    "start": "1607159",
    "end": "1610159"
  },
  {
    "text": "library in more details and show",
    "start": "1610159",
    "end": "1611720"
  },
  {
    "text": "different aspects there can be many more",
    "start": "1611720",
    "end": "1614279"
  },
  {
    "text": "things can be done with this instances",
    "start": "1614279",
    "end": "1616919"
  },
  {
    "text": "we can have like combinatorial like",
    "start": "1616919",
    "end": "1618240"
  },
  {
    "text": "Library it allows us",
    "start": "1618240",
    "end": "1620200"
  },
  {
    "text": "to do many cool things so that's all",
    "start": "1620200",
    "end": "1623960"
  },
  {
    "text": "thank you for your attention",
    "start": "1623960",
    "end": "1627440"
  }
]