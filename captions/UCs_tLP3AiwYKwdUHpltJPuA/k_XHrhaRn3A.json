[
  {
    "text": "[Music] thank you",
    "start": "3630",
    "end": "9360"
  },
  {
    "text": "all right it's good you see um Zoom is much harder than mathematics",
    "start": "9360",
    "end": "16139"
  },
  {
    "text": "that I'm going to um talk about uh so yeah it's interesting if I remember",
    "start": "16139",
    "end": "23039"
  },
  {
    "text": "um one of my previous Keynotes at Yao um there I talked about category Theory",
    "start": "23039",
    "end": "30060"
  },
  {
    "text": "now I'm going to talk um about calculus and I'm going to kind",
    "start": "30060",
    "end": "36120"
  },
  {
    "text": "of try to do some remedial teaching and showing you everything that you um",
    "start": "36120",
    "end": "42780"
  },
  {
    "text": "should have learned and maybe in middle school or high school about calculus and",
    "start": "42780",
    "end": "49800"
  },
  {
    "text": "and I also explain why that is important",
    "start": "49800",
    "end": "54920"
  },
  {
    "text": "so I don't know about folks here but uh since akovitz started I'm having",
    "start": "56300",
    "end": "64378"
  },
  {
    "text": "um a lot of weird dreams and a lot of these dreams actually um involve math in fact last night I had",
    "start": "64379",
    "end": "73740"
  },
  {
    "text": "one of those weird dreams where I was in the building um lost I was looking for the lecture",
    "start": "73740",
    "end": "81299"
  },
  {
    "text": "hall but I was completely lost then I kind of stumbled in via the back door",
    "start": "81299",
    "end": "86580"
  },
  {
    "text": "the door fell over and then I entered the lecture room",
    "start": "86580",
    "end": "92340"
  },
  {
    "text": "um and then turned out that I had my wrong notebook with the exercises from the week before and and it was all a",
    "start": "92340",
    "end": "99420"
  },
  {
    "text": "disaster and and these dreams keep coming and it's always like you know",
    "start": "99420",
    "end": "104520"
  },
  {
    "text": "something to do with math and something where I kind of lost my way and forgot things or even got like didn't even",
    "start": "104520",
    "end": "111360"
  },
  {
    "text": "realize that there were classes going on so I thought okay if these three games are hunting me maybe I should do some",
    "start": "111360",
    "end": "120299"
  },
  {
    "text": "maths um in the real world to stop them but as I said like yesterday I had another of",
    "start": "120299",
    "end": "127020"
  },
  {
    "text": "these dreams so it didn't help for me but maybe it helps for you and and if you're not dreaming about math yet maybe",
    "start": "127020",
    "end": "133620"
  },
  {
    "text": "after this talk you will and so I'm sharing the joy of nightmares about mathematics and spreading that to the",
    "start": "133620",
    "end": "140760"
  },
  {
    "text": "world and a while back um I talked about software 2.0 and software",
    "start": "140760",
    "end": "150180"
  },
  {
    "text": "2.0 is where we are using machine learning where we're using data to learn",
    "start": "150180",
    "end": "155640"
  },
  {
    "text": "models instead of writing code from scratch um and so for 2.0 is composed out of",
    "start": "155640",
    "end": "163920"
  },
  {
    "text": "probabilistic and differentiable programming and explain a little bit about these styles of programming",
    "start": "163920",
    "end": "171239"
  },
  {
    "text": "um but the big difference between software 1.0 and software 2.0 is that",
    "start": "171239",
    "end": "177599"
  },
  {
    "text": "software 1.0 so that's the software that most of us are currently writing",
    "start": "177599",
    "end": "183060"
  },
  {
    "text": "um is all about discrete values",
    "start": "183060",
    "end": "188940"
  },
  {
    "text": "um so we're talking about strings buttons Windows",
    "start": "188940",
    "end": "194000"
  },
  {
    "text": "arrays all discrete and then maybe we have some floating Point values but in",
    "start": "194000",
    "end": "199440"
  },
  {
    "text": "software 2.0 everything is continuous so everything is floating point or real numbers and in software 1.0 everything",
    "start": "199440",
    "end": "207480"
  },
  {
    "text": "is exactive we have a Boolean it's true or false where in software 2.0 we're",
    "start": "207480",
    "end": "212819"
  },
  {
    "text": "we're approximating things so there is a lot of probabilities involved and if we",
    "start": "212819",
    "end": "219780"
  },
  {
    "text": "look at software 1.0 the way we reason about programs is using algebra",
    "start": "219780",
    "end": "225900"
  },
  {
    "text": "um if you look at databases there's most obvious we're using the relational algebra and and so for 2.0 we're using",
    "start": "225900",
    "end": "233099"
  },
  {
    "text": "calculus calculus like we learned in high school now the question is do does this mean",
    "start": "233099",
    "end": "240299"
  },
  {
    "text": "that we have to all retrain do we have to kind of throw away all our knowledge about the past and relearn and retrain",
    "start": "240299",
    "end": "247860"
  },
  {
    "text": "to be effective software engineers in this new world and what I'm showing hopefully",
    "start": "247860",
    "end": "254939"
  },
  {
    "text": "I can give you some hope neighborly that's not the case um and and Nikola is going to talk to",
    "start": "254939",
    "end": "261540"
  },
  {
    "text": "you about C plus plus move semantics and I am going to state that what I'm going",
    "start": "261540",
    "end": "268500"
  },
  {
    "text": "to show you today is much much easier than C plus plus move semantics and so",
    "start": "268500",
    "end": "275699"
  },
  {
    "text": "um I think that that should give you some confidence",
    "start": "275699",
    "end": "281360"
  },
  {
    "text": "all right let's zoom in a little bit differentiable programming well obviously it's called differentiable",
    "start": "281820",
    "end": "288720"
  },
  {
    "text": "programming so that is um has all to do with differentiation",
    "start": "288720",
    "end": "294180"
  },
  {
    "text": "as we look in Wikipedia what differentiation means and you see that",
    "start": "294180",
    "end": "300540"
  },
  {
    "text": "well you kind of like you know you define the derivative of a function f Prime and using a limit a limit of H",
    "start": "300540",
    "end": "308759"
  },
  {
    "text": "going to zero and no need to understand all of this I just want to get a point",
    "start": "308759",
    "end": "314220"
  },
  {
    "text": "that this limit thing you might remember that from um your math classes or you might not",
    "start": "314220",
    "end": "320759"
  },
  {
    "text": "because if you zoom into limits you get all these complicated things Epsilon Delta and like lots and",
    "start": "320759",
    "end": "330180"
  },
  {
    "text": "lots of quantifiers and really really complicated um math",
    "start": "330180",
    "end": "336180"
  },
  {
    "text": "if we look at probabilistic programming that all has to do with integration",
    "start": "336180",
    "end": "342060"
  },
  {
    "text": "and the reason for that is if you have a probability density function",
    "start": "342060",
    "end": "347820"
  },
  {
    "text": "um then you have to take the integral to take a probability so you you compute",
    "start": "347820",
    "end": "353220"
  },
  {
    "text": "the probability that the value here is um the probability that the values",
    "start": "353220",
    "end": "358800"
  },
  {
    "text": "between A and B by taking the integral and between a and b of the density",
    "start": "358800",
    "end": "365820"
  },
  {
    "text": "function and if you look at how integrals are",
    "start": "365820",
    "end": "372180"
  },
  {
    "text": "defined you you can like you know the integral is defined as the area under the curve and how do you compute that",
    "start": "372180",
    "end": "379020"
  },
  {
    "text": "while by slicing up that curve into really really tiny pieces and again there's lots of limits and epsilons and",
    "start": "379020",
    "end": "387000"
  },
  {
    "text": "Deltas involved and that's again like you know like more nightmarish mats but",
    "start": "387000",
    "end": "393180"
  },
  {
    "text": "what I'm telling you is you don't have to worry and the way we're going to solve that is",
    "start": "393180",
    "end": "399539"
  },
  {
    "text": "by realizing that real numbers are just abstract data types this is just something that mathematicians dreamed up",
    "start": "399539",
    "end": "407280"
  },
  {
    "text": "and in fact it took them a long time",
    "start": "407280",
    "end": "412500"
  },
  {
    "text": "maybe um centuries to come up with a good",
    "start": "412500",
    "end": "417960"
  },
  {
    "text": "definition of the real numbers and and the real numbers that we're mostly",
    "start": "417960",
    "end": "424319"
  },
  {
    "text": "learning about today are Gunter real numbers and we will denote them with",
    "start": "424319",
    "end": "430740"
  },
  {
    "text": "this um double stroke r and we like of course floating Point numbers",
    "start": "430740",
    "end": "437940"
  },
  {
    "text": "aren't approximation of real numbers that don't have all these nice properties but",
    "start": "437940",
    "end": "443639"
  },
  {
    "text": "the real thing to remember here is that real numbers are just an abstract data",
    "start": "443639",
    "end": "449880"
  },
  {
    "text": "type that's satisfy certain properties and just like in programming there are",
    "start": "449880",
    "end": "457020"
  },
  {
    "text": "many ways to get like defined things so we can Define other kinds of numbers and the um the version of real numbers that",
    "start": "457020",
    "end": "464520"
  },
  {
    "text": "we are going to use here are I will call them the lover a real number so these",
    "start": "464520",
    "end": "470520"
  },
  {
    "text": "are invented by William lover is a category theorist",
    "start": "470520",
    "end": "475620"
  },
  {
    "text": "um and you can forget most of this except",
    "start": "475620",
    "end": "480900"
  },
  {
    "text": "um you should look at Axiom 4 here and Axiom 4 says that like you know for",
    "start": "480900",
    "end": "486960"
  },
  {
    "text": "every function um there is a unique value such that like you know this F of D equals F of 0",
    "start": "486960",
    "end": "494220"
  },
  {
    "text": "plus d times a in the definition here of these numbers the notion of",
    "start": "494220",
    "end": "501900"
  },
  {
    "text": "um derivative is built in and the special thing about these numbers these",
    "start": "501900",
    "end": "507660"
  },
  {
    "text": "lower real numbers is that it has a set of values D",
    "start": "507660",
    "end": "513300"
  },
  {
    "text": "um of values such that d square equals zero and this is the the numbers that we're",
    "start": "513300",
    "end": "519899"
  },
  {
    "text": "going to deal with and so keep in mind um I'll use the",
    "start": "519899",
    "end": "525540"
  },
  {
    "text": "um bolt phase R for The larva reel so these are reels that have these infinitesimals values such that their",
    "start": "525540",
    "end": "531959"
  },
  {
    "text": "square is zero and then the the double stroke are are the real numbers that we",
    "start": "531959",
    "end": "537240"
  },
  {
    "text": "all learned about in high school now",
    "start": "537240",
    "end": "543380"
  },
  {
    "text": "well but it's not so simple and what um is",
    "start": "544140",
    "end": "551399"
  },
  {
    "text": "happening here is that if you take the real numbers and you define",
    "start": "551399",
    "end": "557580"
  },
  {
    "text": "um in the real numbers the set of values of numbers such that they're square equals zero and then you can prove that",
    "start": "557580",
    "end": "565800"
  },
  {
    "text": "zero equals one um so the fact of having these infinitesimal values whose square equals",
    "start": "565800",
    "end": "572700"
  },
  {
    "text": "zero and the the regular real numbers leads to a paradox now if you assume",
    "start": "572700",
    "end": "579120"
  },
  {
    "text": "both then you can prove that um zero equals one",
    "start": "579120",
    "end": "584640"
  },
  {
    "text": "um and the proof is here no needs to understand it but just keep in mind that with our traditional real numbers if we",
    "start": "584640",
    "end": "592320"
  },
  {
    "text": "get like you know take um infinitesimals um then we can prove um that zero equals",
    "start": "592320",
    "end": "599580"
  },
  {
    "text": "one and and conversely um if we",
    "start": "599580",
    "end": "606620"
  },
  {
    "text": "um allow case distinction so if we allow functions that use conditionals and we",
    "start": "606720",
    "end": "613500"
  },
  {
    "text": "use the lava real numbers then we can also prove that 0 equals one so that's",
    "start": "613500",
    "end": "618899"
  },
  {
    "text": "also like a contradiction so we get contradictions in in both ways",
    "start": "618899",
    "end": "625860"
  },
  {
    "text": "um and the um actual solution that the folks the category theory is used is",
    "start": "625860",
    "end": "631800"
  },
  {
    "text": "they say oh let's like avoid and the law of the extrude metal let's use intuition",
    "start": "631800",
    "end": "637100"
  },
  {
    "text": "intuitionistic logic um but what we'll do here is we'll go for a slightly simpler approach",
    "start": "637100",
    "end": "645060"
  },
  {
    "text": "um and so instead of um eliminating the the law of excluded",
    "start": "645060",
    "end": "651839"
  },
  {
    "text": "metal and go to topos Theory and all get really complicated math what we'll do is",
    "start": "651839",
    "end": "657899"
  },
  {
    "text": "we'll do something simpler all right and what we'll do is we will study dual",
    "start": "657899",
    "end": "664740"
  },
  {
    "text": "numbers and dual numbers are like the fruit flies here of the mat and we're",
    "start": "664740",
    "end": "670860"
  },
  {
    "text": "using we're going to study uh these dual numbers such that we can understand",
    "start": "670860",
    "end": "676160"
  },
  {
    "text": "these other and real numbers better and",
    "start": "676160",
    "end": "681240"
  },
  {
    "text": "most of the theorems and most of the concepts that will develop will carry over automatically",
    "start": "681240",
    "end": "688140"
  },
  {
    "text": "so what's a dual number well dual number um is a pair of numbers a plus a Epsilon",
    "start": "688140",
    "end": "696360"
  },
  {
    "text": "and where Epsilon square equals zero so we're taking the the idea of a value",
    "start": "696360",
    "end": "702240"
  },
  {
    "text": "whose square equals zero and what we're doing is we're building pairs of two numbers where one the first part is just",
    "start": "702240",
    "end": "710040"
  },
  {
    "text": "a regular number and the second part is one of those infinitesimal values",
    "start": "710040",
    "end": "716040"
  },
  {
    "text": "and the nice thing about these dual numbers by the way they were invented um like 200 years ago or slightly less",
    "start": "716040",
    "end": "724019"
  },
  {
    "text": "than 200 years ago so this is really really old um but the nice thing is that if you",
    "start": "724019",
    "end": "729660"
  },
  {
    "text": "take a regular function and you lift them you overload them to work on Dual numbers then this function",
    "start": "729660",
    "end": "738060"
  },
  {
    "text": "and automatically computes the derivative so um that's written down here F of a plus",
    "start": "738060",
    "end": "744240"
  },
  {
    "text": "a Epsilon and is f of a plus f x n f",
    "start": "744240",
    "end": "749820"
  },
  {
    "text": "Prime of a Epsilon so that's second dual numbers property",
    "start": "749820",
    "end": "755640"
  },
  {
    "text": "so just like for these lower reels and dual numbers have differentiation got like",
    "start": "755640",
    "end": "762000"
  },
  {
    "text": "built into them now the question is how can we prove this well one thing we could do is use",
    "start": "762000",
    "end": "768839"
  },
  {
    "text": "Taylor expansion but that's um cheating because that assumes that we",
    "start": "768839",
    "end": "774720"
  },
  {
    "text": "already know derivative whatever derivatives are that we know what Taylor expansion is and we don't know so this",
    "start": "774720",
    "end": "781079"
  },
  {
    "text": "is just way too complicated we can also say let's get like replace",
    "start": "781079",
    "end": "786660"
  },
  {
    "text": "limits by these infinitesimal values that would be great because now instead",
    "start": "786660",
    "end": "792660"
  },
  {
    "text": "of reasoning about rates of change calculus like a value going down to zero",
    "start": "792660",
    "end": "798180"
  },
  {
    "text": "we're we just have something with symbols so we get algebra",
    "start": "798180",
    "end": "803880"
  },
  {
    "text": "um and this is also a little bit problematic because if you look at the",
    "start": "803880",
    "end": "809639"
  },
  {
    "text": "formula at the bottom there we're dividing by a Epsilon and that's a",
    "start": "809639",
    "end": "814800"
  },
  {
    "text": "problem we cannot divide by infinitesimals because if we do that and",
    "start": "814800",
    "end": "820860"
  },
  {
    "text": "we can prove that these infinite decimals infinitesimals are zero and",
    "start": "820860",
    "end": "826079"
  },
  {
    "text": "that's exactly not what we want but if we put down our programming um",
    "start": "826079",
    "end": "832860"
  },
  {
    "text": "glasses if you look at these dual numbers and then they have structural equality so a dual number eight plus a",
    "start": "832860",
    "end": "840660"
  },
  {
    "text": "Epsilon equals B plus b Epsilon if a equals b and a equals B so that's just",
    "start": "840660",
    "end": "848100"
  },
  {
    "text": "structural equality um if we drop the first term and only look at the infinitational part uh then",
    "start": "848100",
    "end": "856079"
  },
  {
    "text": "this thing is called micro cancellation so we can prove that two numbers two um",
    "start": "856079",
    "end": "862019"
  },
  {
    "text": "of these infinitesimal numbers are equal if they're real parts are equal",
    "start": "862019",
    "end": "867720"
  },
  {
    "text": "and but really micro cancellation is a fancy name for structural equality so",
    "start": "867720",
    "end": "873060"
  },
  {
    "text": "these dual numbers are just pairs pairs of numbers that have structural equality",
    "start": "873060",
    "end": "878399"
  },
  {
    "text": "so nothing complicated going on what's really nice is that by just doing",
    "start": "878399",
    "end": "885959"
  },
  {
    "text": "arithmetic on these dual numbers and we can prove a lot of theorems about",
    "start": "885959",
    "end": "894180"
  },
  {
    "text": "um derivatives for example we can show by a straightforward calculation that",
    "start": "894180",
    "end": "900660"
  },
  {
    "text": "the derivative of the inverse of a function is 1 divided by the derivative",
    "start": "900660",
    "end": "906600"
  },
  {
    "text": "of the function applied to the inverse of the function um",
    "start": "906600",
    "end": "911699"
  },
  {
    "text": "and there's no need to really understand this right now but I really want you to",
    "start": "911699",
    "end": "918660"
  },
  {
    "text": "look at this um derivation here and just see that it's all just symbol pushing",
    "start": "918660",
    "end": "924839"
  },
  {
    "text": "right there's nothing magic going on I'm just applying um simple arithmetic",
    "start": "924839",
    "end": "931639"
  },
  {
    "text": "the fact that if a function has an inverse that like you know it's the",
    "start": "931639",
    "end": "937320"
  },
  {
    "text": "composition of the function with it inverse is the identity um and that's all",
    "start": "937320",
    "end": "943500"
  },
  {
    "text": "similarly we can derive um the sum Row the product rule the",
    "start": "943500",
    "end": "948720"
  },
  {
    "text": "quotient rule all the rules about derivatives that you know um from high school that work at like",
    "start": "948720",
    "end": "955980"
  },
  {
    "text": "you know normally proved using limits and you can now just show them with",
    "start": "955980",
    "end": "961260"
  },
  {
    "text": "without anything just simple simple manipulation simple algebra",
    "start": "961260",
    "end": "967740"
  },
  {
    "text": "and if we're using some even other maths we can also show the derivatives of",
    "start": "967740",
    "end": "976920"
  },
  {
    "text": "um the sine and cosine and in order to do that we first have to",
    "start": "976920",
    "end": "983279"
  },
  {
    "text": "um guess or Define what the sine and cosine how we extend those how we",
    "start": "983279",
    "end": "988500"
  },
  {
    "text": "overload them over infinitesimals um because they're only defined on the",
    "start": "988500",
    "end": "994680"
  },
  {
    "text": "real numbers now so we have to get like overload them over infinitesimals and we",
    "start": "994680",
    "end": "1000019"
  },
  {
    "text": "can if we Define the sign of Epsilon as Epsilon and the cosine of Epsilon S1",
    "start": "1000019",
    "end": "1006019"
  },
  {
    "text": "then we can again with very simple calculation we can show that the",
    "start": "1006019",
    "end": "1011839"
  },
  {
    "text": "derivative of sine is cosine and the derivative of cosine is minus this sign",
    "start": "1011839",
    "end": "1019699"
  },
  {
    "text": "and don't feel intimidated by these derivations it's really",
    "start": "1019699",
    "end": "1026660"
  },
  {
    "text": "um all straightforward calculation that's the kind of thing that I want to get across that's why I can spell this",
    "start": "1026660",
    "end": "1033380"
  },
  {
    "text": "out in very very very tiny detail but you see there's no magic here there's",
    "start": "1033380",
    "end": "1039319"
  },
  {
    "text": "never Epsilon Delta there's no limits it's really simple Algebra I can it's",
    "start": "1039319",
    "end": "1045500"
  },
  {
    "text": "like functional programming I've I've turned calculus into functional programming",
    "start": "1045500",
    "end": "1051860"
  },
  {
    "text": "another nice thing here is that we can take this definition of dual numbers and",
    "start": "1051860",
    "end": "1058460"
  },
  {
    "text": "turn that straightforward into code as I said like a dual number is a pair of values I am using here kotlin",
    "start": "1058460",
    "end": "1066679"
  },
  {
    "text": "um so I Define and the Dual number class here as a bear of um values",
    "start": "1066679",
    "end": "1074059"
  },
  {
    "text": "um of a real part and if an additional part I Define structural equality on it",
    "start": "1074059",
    "end": "1079700"
  },
  {
    "text": "and then the definition of The Operators directly follows the um the rules that I",
    "start": "1079700",
    "end": "1088280"
  },
  {
    "text": "just shown by that um we can now",
    "start": "1088280",
    "end": "1094299"
  },
  {
    "text": "find the derivative of any function by just overloading",
    "start": "1094299",
    "end": "1100039"
  },
  {
    "text": "um instead of over floating Point numbers and we overload on Dual numbers",
    "start": "1100039",
    "end": "1106160"
  },
  {
    "text": "and here I'm doing something really really bad I have defined",
    "start": "1106160",
    "end": "1112520"
  },
  {
    "text": "um the real numbers as a type a list for for floating Point",
    "start": "1112520",
    "end": "1118940"
  },
  {
    "text": "numbers which is of course and not true but I think it looks um a little bit nicer and at least on the slides but I'm",
    "start": "1118940",
    "end": "1127760"
  },
  {
    "text": "not pretending of course that the real numbers are X or floating Point numbers are actually",
    "start": "1127760",
    "end": "1134120"
  },
  {
    "text": "um they're real numbers here now in order to use",
    "start": "1134120",
    "end": "1140660"
  },
  {
    "text": "um this kind of differentiation um for deep learning and we have to to",
    "start": "1140660",
    "end": "1148100"
  },
  {
    "text": "change it a little bit and I won't go into the details here but in some sense",
    "start": "1148100",
    "end": "1154580"
  },
  {
    "text": "that's pretty straightforward um you you apply continuation passings transformation over this forward ad and",
    "start": "1154580",
    "end": "1163100"
  },
  {
    "text": "then you get backwards ad and backwards ad is what is used to train neural Nets",
    "start": "1163100",
    "end": "1168740"
  },
  {
    "text": "with back propagation so back propagation is nothing more than dual numbers and with",
    "start": "1168740",
    "end": "1175880"
  },
  {
    "text": "um continuation passing and transformation applied to it and so that's against separate",
    "start": "1175880",
    "end": "1182559"
  },
  {
    "text": "implementation detail which means that we can continue to to study these dual",
    "start": "1182559",
    "end": "1188000"
  },
  {
    "text": "numbers and everything then we'll apply to",
    "start": "1188000",
    "end": "1193100"
  },
  {
    "text": "um whatever implementation of a differentiation whether it's forward or",
    "start": "1193100",
    "end": "1198200"
  },
  {
    "text": "backwards it will just follow from here",
    "start": "1198200",
    "end": "1202720"
  },
  {
    "text": "The Next Step what we're going to do is we're going to take this um definition",
    "start": "1203320",
    "end": "1208760"
  },
  {
    "text": "of dual numbers and we're going to put that in point freestyle and this will",
    "start": "1208760",
    "end": "1215000"
  },
  {
    "text": "take about five steps and I'll go to all these steps you know or six steps",
    "start": "1215000",
    "end": "1221299"
  },
  {
    "text": "because I start counting with zero but I'm going to talk you through all these",
    "start": "1221299",
    "end": "1226340"
  },
  {
    "text": "steps and the nice thing is that we then get a",
    "start": "1226340",
    "end": "1231620"
  },
  {
    "text": "quite different formulation of these dual numbers and but that will be a formulation that will um show a very",
    "start": "1231620",
    "end": "1240860"
  },
  {
    "text": "very powerful way to define things and and that in some sense is the real meat",
    "start": "1240860",
    "end": "1246620"
  },
  {
    "text": "of this talk is to show you how to define properties as um",
    "start": "1246620",
    "end": "1252460"
  },
  {
    "text": "Universal objects um by um a unique uniqueness property",
    "start": "1252460",
    "end": "1258559"
  },
  {
    "text": "and and from that we'll also be able to define a way to do integration",
    "start": "1258559",
    "end": "1265460"
  },
  {
    "text": "and plus it's just fun um if you're a Hesco programmer or functional programmer it's always fun to",
    "start": "1265460",
    "end": "1272720"
  },
  {
    "text": "write things into Point freestyle and to impress your friends and family and to",
    "start": "1272720",
    "end": "1278480"
  },
  {
    "text": "take something that's very readable like the thing that's you know up on the top there in red and turn it into something",
    "start": "1278480",
    "end": "1286039"
  },
  {
    "text": "that's unreadable and that's highlighted in yellow that's the goal of making",
    "start": "1286039",
    "end": "1291260"
  },
  {
    "text": "things Point free right is to impress um how how good you can obfuscate a",
    "start": "1291260",
    "end": "1297679"
  },
  {
    "text": "program we're using is something called scoromization again it's a very old",
    "start": "1297679",
    "end": "1306200"
  },
  {
    "text": "technique and more than 150 years old and that allows you to kind of replace",
    "start": "1306200",
    "end": "1314659"
  },
  {
    "text": "existential quantifiers by Universal quantifiers and the ideas there in the",
    "start": "1314659",
    "end": "1321440"
  },
  {
    "text": "bottom left if you have a formula for all acts there exists a y such that b x",
    "start": "1321440",
    "end": "1327440"
  },
  {
    "text": "of Y what you can do is instead of",
    "start": "1327440",
    "end": "1332480"
  },
  {
    "text": "um having that why you can say well that why this somehow depends on accidentally",
    "start": "1332480",
    "end": "1338720"
  },
  {
    "text": "quantify why depends on X so if I just Express debt by having a function f of x",
    "start": "1338720",
    "end": "1346580"
  },
  {
    "text": "that will conjure up that y for me now I can just replace that existential",
    "start": "1346580",
    "end": "1352640"
  },
  {
    "text": "quantifier because the Y disappears and and then if we only have X our Universal",
    "start": "1352640",
    "end": "1360559"
  },
  {
    "text": "quantifiers left we can all drop them and we get a very simple formula under the assumption that every variable there",
    "start": "1360559",
    "end": "1367400"
  },
  {
    "text": "is um universally Quantified let's look at a couple of examples here",
    "start": "1367400",
    "end": "1374360"
  },
  {
    "text": "um and um let's focus here on the rightmost column",
    "start": "1374360",
    "end": "1379760"
  },
  {
    "text": "and there's the formula for all X there exists exactly one y such that b x of Y",
    "start": "1379760",
    "end": "1387260"
  },
  {
    "text": "and every schoolomize that um it becomes the formula on the bottom",
    "start": "1387260",
    "end": "1393980"
  },
  {
    "text": "right p x comma y if and only if y equals f of x",
    "start": "1393980",
    "end": "1399980"
  },
  {
    "text": "um so you you can imagine um that I think so at least that the",
    "start": "1399980",
    "end": "1407240"
  },
  {
    "text": "formula on the bottom right is more concise and easier than the formula at",
    "start": "1407240",
    "end": "1412820"
  },
  {
    "text": "the top the formula at the top has like two quantifiers this is weird quantifier written with an exclamation mark exists",
    "start": "1412820",
    "end": "1419480"
  },
  {
    "text": "exactly once um where the formula at the bottom just says like you know that b X and Y if and",
    "start": "1419480",
    "end": "1427159"
  },
  {
    "text": "only if y equals f of x foreign and here's an example",
    "start": "1427159",
    "end": "1434059"
  },
  {
    "text": "um if a concrete example if a function is bijective if you look that up on",
    "start": "1434059",
    "end": "1440240"
  },
  {
    "text": "Wikipedia it says that that's the case if for all B there exists exactly one a",
    "start": "1440240",
    "end": "1447140"
  },
  {
    "text": "such that F of a equals B if we um scholarize that now it becomes really",
    "start": "1447140",
    "end": "1454220"
  },
  {
    "text": "simple it says F of a equals B if and only F A equals the inverse of f applied",
    "start": "1454220",
    "end": "1460760"
  },
  {
    "text": "to B you see here they got really nice symmetry which is a symmetry that you",
    "start": "1460760",
    "end": "1466880"
  },
  {
    "text": "expect when you're talking about something that's bijective and that symmetry is not there in the formula",
    "start": "1466880",
    "end": "1473780"
  },
  {
    "text": "with all the quantifiers so here I think everybody has to admit that this looks",
    "start": "1473780",
    "end": "1480380"
  },
  {
    "text": "way way neater all right so let's get lucky now take",
    "start": "1480380",
    "end": "1486020"
  },
  {
    "text": "Step Zero and we are going to to write our original Dual numbers formula using",
    "start": "1486020",
    "end": "1492740"
  },
  {
    "text": "quantifiers um so for all pairs a comma a there",
    "start": "1492740",
    "end": "1499039"
  },
  {
    "text": "exists a unique dual number such that um f of a plus a Epsilon equals B plus",
    "start": "1499039",
    "end": "1504440"
  },
  {
    "text": "ba Epsilon and that's our our dual numbers property and applying",
    "start": "1504440",
    "end": "1509480"
  },
  {
    "text": "scholarization to that we get the formula here on the bottom with this um",
    "start": "1509480",
    "end": "1516620"
  },
  {
    "text": "and mutual implication and again what we're doing here is just purely",
    "start": "1516620",
    "end": "1522679"
  },
  {
    "text": "mechanical and at this point I shut off my brain I don't even interpret these",
    "start": "1522679",
    "end": "1529220"
  },
  {
    "text": "formulas I'm just doing symbol manipulation right somebody have given me a recipe here's a formula this is how",
    "start": "1529220",
    "end": "1535940"
  },
  {
    "text": "you apply scholarization and that's what I'm doing that's what I love to do because my brain is the size of a peanut",
    "start": "1535940",
    "end": "1542539"
  },
  {
    "text": "so I don't like I don't want to I I can manipulate symbols",
    "start": "1542539",
    "end": "1548360"
  },
  {
    "text": "um and if I don't have to understand what they mean that's great because now I can just blindly calculate it's like",
    "start": "1548360",
    "end": "1555799"
  },
  {
    "text": "doing a long division right you you learn how to do long division and then in the end you can check if it makes",
    "start": "1555799",
    "end": "1562220"
  },
  {
    "text": "sense but while you're doing the long division you don't actually think you just can't like follow an algorithm and",
    "start": "1562220",
    "end": "1568700"
  },
  {
    "text": "that's what I'm going to do here we're just following an algorithm no need to understand anything we're just pushing",
    "start": "1568700",
    "end": "1575120"
  },
  {
    "text": "symbols so we're applying the 4 around here for scrutinization we get this formula below",
    "start": "1575120",
    "end": "1582278"
  },
  {
    "text": "we see that this formula here on the left and F",
    "start": "1582559",
    "end": "1587659"
  },
  {
    "text": "A plus a Epsilon equals B plus b a Epsilon we're going to turn that into variable",
    "start": "1587659",
    "end": "1594140"
  },
  {
    "text": "free form and in order to do that we're introducing this helper function Alpha",
    "start": "1594140",
    "end": "1600440"
  },
  {
    "text": "um and again it's not necessary to get like really understand what this function",
    "start": "1600440",
    "end": "1606500"
  },
  {
    "text": "Alpha does and and I can write it even in point freestyle using Korean and Curry and",
    "start": "1606500",
    "end": "1613880"
  },
  {
    "text": "sectioning and and composition and but literally all we're doing is we're using",
    "start": "1613880",
    "end": "1620480"
  },
  {
    "text": "a helper function such that we can write this equation um in in point freestyle and then we're",
    "start": "1620480",
    "end": "1627980"
  },
  {
    "text": "doing the same on the right hand side where we have this conjunction and we're replacing that with another function",
    "start": "1627980",
    "end": "1634520"
  },
  {
    "text": "here that that combines f and g and applies both of them to the argument",
    "start": "1634520",
    "end": "1641900"
  },
  {
    "text": "this allows us to to eliminate the conjunction and write that in",
    "start": "1641900",
    "end": "1647840"
  },
  {
    "text": "um something that looks already a little bit more obscure so if we apply this to both sides now a lot of the variables",
    "start": "1647840",
    "end": "1655340"
  },
  {
    "text": "have gone especially the infinitesimals have gone and we are arriving at a",
    "start": "1655340",
    "end": "1661100"
  },
  {
    "text": "slightly shorter formula and we're going to what we see here that there's still this kind of like bare",
    "start": "1661100",
    "end": "1668419"
  },
  {
    "text": "beak on my b on the right side and on the left side so that's what we're going to eliminate next",
    "start": "1668419",
    "end": "1674779"
  },
  {
    "text": "um in order to do that we have to introduce some more helper functions",
    "start": "1674779",
    "end": "1680419"
  },
  {
    "text": "um and if we get like introduce those helper functions which are beta and gamma now we can rewrite that red",
    "start": "1680419",
    "end": "1688760"
  },
  {
    "text": "function into the yellow function below um and at this point I'm pretty sure",
    "start": "1688760",
    "end": "1693980"
  },
  {
    "text": "everybody is kind of completely lost which is actually good because I want you to lose your intuition about what",
    "start": "1693980",
    "end": "1701419"
  },
  {
    "text": "differentiation is we don't want to understand differentiation by looking at graphs and tangent lines across these",
    "start": "1701419",
    "end": "1709220"
  },
  {
    "text": "graphs I want it's like I'm doing here like you know therapy on you I'm going to destroy your understanding of",
    "start": "1709220",
    "end": "1716120"
  },
  {
    "text": "derivatives and I'm going to rebuild a new understanding of derivatives that is",
    "start": "1716120",
    "end": "1721460"
  },
  {
    "text": "completely free of intuition that there's a new way of looking at derivatives that's purely algebraic",
    "start": "1721460",
    "end": "1728120"
  },
  {
    "text": "that's purely symbol manipulation so this is goodness so the more confusion you are the more you are like becoming a",
    "start": "1728120",
    "end": "1737059"
  },
  {
    "text": "new you where you forget all the bad stuff that you have been taught in the past and where you um learn all the",
    "start": "1737059",
    "end": "1744140"
  },
  {
    "text": "great new stuff that I'm going to put in your head all right so applying this um here",
    "start": "1744140",
    "end": "1752600"
  },
  {
    "text": "um what we're going to do now is we're going to make this even shorter we're",
    "start": "1752600",
    "end": "1757820"
  },
  {
    "text": "going to eliminate that a by um taking a equals zero and and now we can",
    "start": "1757820",
    "end": "1766399"
  },
  {
    "text": "simplify this formula and we get um the uh the thing here um in the bottom",
    "start": "1766399",
    "end": "1773000"
  },
  {
    "text": "left and I don't know if you remember um the definition of isomorphism that",
    "start": "1773000",
    "end": "1780980"
  },
  {
    "text": "we've shown but this really here is um the equation for an isomorphism",
    "start": "1780980",
    "end": "1788779"
  },
  {
    "text": "all right um so what we are seeing here is that the",
    "start": "1788779",
    "end": "1796220"
  },
  {
    "text": "pair of real numbers are comma R and a function of a infinitesimal to the Dual",
    "start": "1796220",
    "end": "1803600"
  },
  {
    "text": "numbers are isomorphic and and so this is in some sense pretty surprising right",
    "start": "1803600",
    "end": "1810440"
  },
  {
    "text": "we started out with these dual numbers we we massage them into variable free",
    "start": "1810440",
    "end": "1817340"
  },
  {
    "text": "form and what we discovered is that really there was an isomorphism hidden",
    "start": "1817340",
    "end": "1824299"
  },
  {
    "text": "um down there and the isomorphism is between the types of these various",
    "start": "1824299",
    "end": "1829760"
  },
  {
    "text": "functions um but the nice thing of having this the",
    "start": "1829760",
    "end": "1835279"
  },
  {
    "text": "formula in this form is that we can get free theorems out of this so here's what",
    "start": "1835279",
    "end": "1841700"
  },
  {
    "text": "we're going to do or first of all let's like you know take a step where we are so we started with",
    "start": "1841700",
    "end": "1848899"
  },
  {
    "text": "um a definition of derivatives um defined using dual numbers and I did",
    "start": "1848899",
    "end": "1855919"
  },
  {
    "text": "a lot of hand waving and confusing steps to arrive at this formula here and what",
    "start": "1855919",
    "end": "1863059"
  },
  {
    "text": "we're going to do now is we're taking that formula as an axiom so we're taking",
    "start": "1863059",
    "end": "1868760"
  },
  {
    "text": "this um isomorphism as an axiom and there's no intuition required in fact I would",
    "start": "1868760",
    "end": "1875000"
  },
  {
    "text": "say everybody has lost completely the intuition about this and that's exactly",
    "start": "1875000",
    "end": "1880520"
  },
  {
    "text": "what I want I don't want you to have any intuition I just want you to say this is",
    "start": "1880520",
    "end": "1885580"
  },
  {
    "text": "an axiom that that this um that these functions are an isomorphism and and",
    "start": "1885580",
    "end": "1892820"
  },
  {
    "text": "then we can Define differentiation using this complicated formula using gamma and",
    "start": "1892820",
    "end": "1899000"
  },
  {
    "text": "alphas and take a look at this this is really what",
    "start": "1899000",
    "end": "1904039"
  },
  {
    "text": "we're doing is we're it's very much like functional programming right we have defined some properties of our functions",
    "start": "1904039",
    "end": "1910520"
  },
  {
    "text": "and now we can define a new function in terms of existing functions for which we know certain properties and calculate",
    "start": "1910520",
    "end": "1917419"
  },
  {
    "text": "from there so let's do that um and to do that I just want to get",
    "start": "1917419",
    "end": "1925159"
  },
  {
    "text": "like you know show you a couple of properties that we can get for free so one thing that we",
    "start": "1925159",
    "end": "1931340"
  },
  {
    "text": "can do is we can take the Top Line f equals Alpha B comma B and we can",
    "start": "1931340",
    "end": "1936500"
  },
  {
    "text": "substitute that F into the bottom right you see because there's an f equals",
    "start": "1936500",
    "end": "1941720"
  },
  {
    "text": "something well I can take that definition of f and substitute it in the bottom",
    "start": "1941720",
    "end": "1946820"
  },
  {
    "text": "the other thing that I can do is I can take the definition of the pair B comma",
    "start": "1946820",
    "end": "1952580"
  },
  {
    "text": "B that is defined in the bottom and I can substitute that in the top so those are two things that I can do just like",
    "start": "1952580",
    "end": "1959720"
  },
  {
    "text": "you know replacing equals by equals that's what functional programmers do all the time and then the third thing I",
    "start": "1959720",
    "end": "1965659"
  },
  {
    "text": "can do is I can use the fact that this thing is uniquely defined so that's a third",
    "start": "1965659",
    "end": "1971360"
  },
  {
    "text": "um formula manipulation can do that I can do so if we",
    "start": "1971360",
    "end": "1978260"
  },
  {
    "text": "um substitute the bottom one and the top one we get this if we substitute the the",
    "start": "1978260",
    "end": "1984860"
  },
  {
    "text": "the bottom one and the top one sorry reverse we get this um and then if we use the uniqueness we",
    "start": "1984860",
    "end": "1992960"
  },
  {
    "text": "get this um and again no need to understand all this",
    "start": "1992960",
    "end": "1999559"
  },
  {
    "text": "because it's just purely like syntax manipulation but what you should",
    "start": "1999559",
    "end": "2006159"
  },
  {
    "text": "look here is that now we get here three theorems for free right just by defining",
    "start": "2006159",
    "end": "2014440"
  },
  {
    "text": "um this Axiom and instantiating the Axiom in various ways we get these three",
    "start": "2014440",
    "end": "2020640"
  },
  {
    "text": "theorems for free so the bottom one um is familiar because that says that we",
    "start": "2020640",
    "end": "2027279"
  },
  {
    "text": "have structural equality right Alpha a comma a equals Alpha B comma B if Alpha",
    "start": "2027279",
    "end": "2032860"
  },
  {
    "text": "equal if a equals b and a equals B so that's structural equality and the",
    "start": "2032860",
    "end": "2039760"
  },
  {
    "text": "um the BET and the gamma are like projections so if I have beta of alpha B",
    "start": "2039760",
    "end": "2045340"
  },
  {
    "text": "comma B it gives me the first um um part and if I do gamma on Alpha B",
    "start": "2045340",
    "end": "2051520"
  },
  {
    "text": "gonna be it gives me the second one so that's also pretty simple right it's just projection and and then the top one",
    "start": "2051520",
    "end": "2058300"
  },
  {
    "text": "shows that we can Define any function we can write any function that you give us",
    "start": "2058300",
    "end": "2063460"
  },
  {
    "text": "and we can write that in terms of alpha beta and gamma but that's another kind",
    "start": "2063460",
    "end": "2068679"
  },
  {
    "text": "of like nice property or you can look at it as some kind of fixed Point property right like this function has got like a",
    "start": "2068679",
    "end": "2074858"
  },
  {
    "text": "recursive or but really the way to look at this that you give me a function an",
    "start": "2074859",
    "end": "2080020"
  },
  {
    "text": "arbiting function and I can just write it in terms of Alpha and beta and gamma and then all these rules apply",
    "start": "2080020",
    "end": "2088898"
  },
  {
    "text": "all right now the nice thing is that based on these definitions",
    "start": "2088899",
    "end": "2094960"
  },
  {
    "text": "I can compute what beta and gamma are and I find the same definitions as that I used",
    "start": "2094960",
    "end": "2102640"
  },
  {
    "text": "before um and the other thing is that I can show using these rules that are and dual",
    "start": "2102640",
    "end": "2110079"
  },
  {
    "text": "numbers property still holds so what I've done is I've taken",
    "start": "2110079",
    "end": "2116020"
  },
  {
    "text": "um the Dual numbers property I've turned that into Point freestyle and now I've",
    "start": "2116020",
    "end": "2121839"
  },
  {
    "text": "and from there I I got like a couple of free theorems now I'm using these theorems and I can show again that that",
    "start": "2121839",
    "end": "2127839"
  },
  {
    "text": "is equivalent to our original Dual numbers property so the circle is round",
    "start": "2127839",
    "end": "2134020"
  },
  {
    "text": "now this is a is a trick that you can use um you can reuse and so if you define",
    "start": "2134020",
    "end": "2141579"
  },
  {
    "text": "your um abstraction f using this equivalent so b equals F of a if and",
    "start": "2141579",
    "end": "2148119"
  },
  {
    "text": "only if B of A and B and then B of A comma B could be an isomorphism like",
    "start": "2148119",
    "end": "2154839"
  },
  {
    "text": "here or something else um and now we can get like you know Subs",
    "start": "2154839",
    "end": "2160060"
  },
  {
    "text": "to the left hand side and the right hand side we can substitute the right hand side in the left hand side and you get",
    "start": "2160060",
    "end": "2166060"
  },
  {
    "text": "all these three theorems and everything just becomes symbol pushing so this way",
    "start": "2166060",
    "end": "2171760"
  },
  {
    "text": "of defining a property um is really really useful",
    "start": "2171760",
    "end": "2177820"
  },
  {
    "text": "in fact um and squiggle which is a style of functional programming and this is the",
    "start": "2177820",
    "end": "2184060"
  },
  {
    "text": "mostly widely used trick and category Theory this is a very very",
    "start": "2184060",
    "end": "2189579"
  },
  {
    "text": "um often used trick it's defining things as a universal property",
    "start": "2189579",
    "end": "2195240"
  },
  {
    "text": "um so it's really something that mathematicians and functional",
    "start": "2195460",
    "end": "2200619"
  },
  {
    "text": "programmers have been doing for forever and and that's revealed here by taking",
    "start": "2200619",
    "end": "2206380"
  },
  {
    "text": "this dual number properties and writing that endpoint freestyle",
    "start": "2206380",
    "end": "2213420"
  },
  {
    "text": "now let's relate this again to um",
    "start": "2213839",
    "end": "2219220"
  },
  {
    "text": "the um the love are real numbers because we",
    "start": "2219220",
    "end": "2227260"
  },
  {
    "text": "said we're going to look at dual numbers which are slightly simpler if you look at the type of alpha that we derived it",
    "start": "2227260",
    "end": "2233859"
  },
  {
    "text": "takes two real numbers and Maps it to a function from infinitesimals to dual numbers but if you look at the lower",
    "start": "2233859",
    "end": "2240880"
  },
  {
    "text": "real numbers there is much more recursive for taking a pair of these kind of like special real numbers and",
    "start": "2240880",
    "end": "2248079"
  },
  {
    "text": "we're getting a function also from infinitesimals they use the capital Delta for that to this like lower real",
    "start": "2248079",
    "end": "2254619"
  },
  {
    "text": "numbers so this is a a much more complicated um equation and that's why I just",
    "start": "2254619",
    "end": "2262260"
  },
  {
    "text": "limiting ourselves to dual numbers is much easier and it doesn't",
    "start": "2262260",
    "end": "2267700"
  },
  {
    "text": "lead to a lot of these contradictions",
    "start": "2267700",
    "end": "2272099"
  },
  {
    "text": "are not powerful enough to do everything and for example they cannot deal with",
    "start": "2272859",
    "end": "2278859"
  },
  {
    "text": "directly deal with functions with multiple variables um",
    "start": "2278859",
    "end": "2284320"
  },
  {
    "text": "and for that we need to introduce multiple um different epsilons",
    "start": "2284320",
    "end": "2292180"
  },
  {
    "text": "um but what we can do is we can also show that we can now",
    "start": "2292180",
    "end": "2297280"
  },
  {
    "text": "prove Taylor expansion so Taylor expansion that we showed looked really mysterious",
    "start": "2297280",
    "end": "2302920"
  },
  {
    "text": "um and as I said like it already assumed that we knew what derivatives were but",
    "start": "2302920",
    "end": "2309339"
  },
  {
    "text": "now um we can derive this from first principles",
    "start": "2309339",
    "end": "2315339"
  },
  {
    "text": "but as I as I said if you want to take higher order derivatives you need multiple of these infinitesimal values",
    "start": "2315339",
    "end": "2323140"
  },
  {
    "text": "and in this case if you want to take the third derivative you need three of these infinitesimals but again like you know",
    "start": "2323140",
    "end": "2329920"
  },
  {
    "text": "nothing here special it's just stupid um symbol pushing um and then you can prove",
    "start": "2329920",
    "end": "2336880"
  },
  {
    "text": "um Taylor expansion in general and so something that looked really mysterious",
    "start": "2336880",
    "end": "2343300"
  },
  {
    "text": "and really hard becomes just simple simple manipulation",
    "start": "2343300",
    "end": "2349000"
  },
  {
    "text": "and if you want to learn more about this there's a really nice article from um",
    "start": "2349000",
    "end": "2354700"
  },
  {
    "text": "John Bell he also has a a book and it's very thin it's thinner than the book on",
    "start": "2354700",
    "end": "2361240"
  },
  {
    "text": "C plus plus move semantics um and then this book here is the gap",
    "start": "2361240",
    "end": "2366579"
  },
  {
    "text": "like the the real guy like you know like hardcore um version of all this and literally",
    "start": "2366579",
    "end": "2373720"
  },
  {
    "text": "what I've shown you today so far is one page out of this book so I've I've taken",
    "start": "2373720",
    "end": "2380500"
  },
  {
    "text": "one page out of that book and expanded that into I don't know like a 45 minute",
    "start": "2380500",
    "end": "2386200"
  },
  {
    "text": "talk I think um it's like you know like like Selena",
    "start": "2386200",
    "end": "2392740"
  },
  {
    "text": "is going to show you how to read code and reading math is also a special skill",
    "start": "2392740",
    "end": "2398619"
  },
  {
    "text": "and people write things down really really compactly and so you have to put",
    "start": "2398619",
    "end": "2403839"
  },
  {
    "text": "a lot of work in there to expand it to decompress it and and what I've shown",
    "start": "2403839",
    "end": "2409780"
  },
  {
    "text": "you here is I'm not lying is is like you know like one paragraph in this book",
    "start": "2409780",
    "end": "2415839"
  },
  {
    "text": "where it says oh this version here is the same as this version um and we what we've done is we've",
    "start": "2415839",
    "end": "2422859"
  },
  {
    "text": "expanded on that um if you want to take higher order",
    "start": "2422859",
    "end": "2428200"
  },
  {
    "text": "derivatives as I said you need some kind of recursion and there are kind of like",
    "start": "2428200",
    "end": "2433540"
  },
  {
    "text": "plenty of papers that discuss this this one is the most classical one by Jersey",
    "start": "2433540",
    "end": "2439420"
  },
  {
    "text": "um and you see here the the type there on the top diff of a is a recursive type that is diff of a on the right side uh",
    "start": "2439420",
    "end": "2446920"
  },
  {
    "text": "Colonel Elliott has written a lot of papers about this as well and same using recursion as well and then the two",
    "start": "2446920",
    "end": "2454780"
  },
  {
    "text": "Godfathers of automatic differentiation are well motor and suskent and and any",
    "start": "2454780",
    "end": "2462339"
  },
  {
    "text": "paper that they have um you will see and we'll talk about an",
    "start": "2462339",
    "end": "2467800"
  },
  {
    "text": "automatic differentiation using these dual numbers and variations of this um and again here they also say that we",
    "start": "2467800",
    "end": "2474820"
  },
  {
    "text": "need to have like multiple of these infinitationals",
    "start": "2474820",
    "end": "2480880"
  },
  {
    "text": "now what what's interesting and this will be my lash light I'm I'm going to maybe get like go one minute over and",
    "start": "2481119",
    "end": "2489220"
  },
  {
    "text": "there's a lot of people that um historically and that's the reason that we learn all about epsilons and",
    "start": "2489220",
    "end": "2495579"
  },
  {
    "text": "Delta in school is if you look at the early folks that were doing calculus",
    "start": "2495579",
    "end": "2501880"
  },
  {
    "text": "they were using infinitesimals but they were not like not formalized well and",
    "start": "2501880",
    "end": "2508780"
  },
  {
    "text": "then this um here Bishop Berkeley um said like this is crazy these",
    "start": "2508780",
    "end": "2514780"
  },
  {
    "text": "infinitesimos are are stupid um and that's when the regular mathematicians dropped them and and we",
    "start": "2514780",
    "end": "2522760"
  },
  {
    "text": "we got um the all the limit stuff and but with",
    "start": "2522760",
    "end": "2529300"
  },
  {
    "text": "um what I've shown you we can make this infinite decimals formal again but if",
    "start": "2529300",
    "end": "2534940"
  },
  {
    "text": "you don't like them you don't even need them because we can give you another Axiom and this is the Axiom here and",
    "start": "2534940",
    "end": "2542740"
  },
  {
    "text": "this actually looks even weirder and again like you know don't ask me how you",
    "start": "2542740",
    "end": "2547900"
  },
  {
    "text": "come up with this but you know you can Define this equivalence and now you can",
    "start": "2547900",
    "end": "2553180"
  },
  {
    "text": "Define derivatives in this way and on the right here you can show that",
    "start": "2553180",
    "end": "2559359"
  },
  {
    "text": "um this actually works um if you assume the other system but if",
    "start": "2559359",
    "end": "2564520"
  },
  {
    "text": "you assume this as an axiom and you use the free theorems now you can compute",
    "start": "2564520",
    "end": "2569640"
  },
  {
    "text": "all the rules for derivatives without any infinitesimals so that's in some",
    "start": "2569640",
    "end": "2575980"
  },
  {
    "text": "sense really nice you you define an axiom you define what differentiation is",
    "start": "2575980",
    "end": "2581079"
  },
  {
    "text": "and now you can compute all your derivatives without using infinitesimals",
    "start": "2581079",
    "end": "2586540"
  },
  {
    "text": "the problem with this version is that there's no obvious way to implement what",
    "start": "2586540",
    "end": "2591819"
  },
  {
    "text": "we show before is you can Implement them easily all right I'm running out of time I",
    "start": "2591819",
    "end": "2599200"
  },
  {
    "text": "wanted to show you um also what um what integration is so I'll leave you",
    "start": "2599200",
    "end": "2606040"
  },
  {
    "text": "with this slide um and integration again you can define it",
    "start": "2606040",
    "end": "2611520"
  },
  {
    "text": "axiomatically again and for all F there's a unique primitive capital F",
    "start": "2611520",
    "end": "2618040"
  },
  {
    "text": "such that the derivative of capital f equals F and F capital f f of zero",
    "start": "2618040",
    "end": "2623740"
  },
  {
    "text": "equals zero and from that you can like you know extend it to arbitrary",
    "start": "2623740",
    "end": "2629859"
  },
  {
    "text": "intervals um and if you scrollomize this you get this very very simple Axiom here and",
    "start": "2629859",
    "end": "2636880"
  },
  {
    "text": "from this one row here you can um proof all the things that you learned",
    "start": "2636880",
    "end": "2644619"
  },
  {
    "text": "in high school about integrals and so really like you know if if your high",
    "start": "2644619",
    "end": "2650740"
  },
  {
    "text": "school teacher would have shown you this one rule that's all you need to know to",
    "start": "2650740",
    "end": "2656560"
  },
  {
    "text": "get like do all the integrals you ever want to do well maybe not all the integrals but most of the integrals you",
    "start": "2656560",
    "end": "2663339"
  },
  {
    "text": "ever want to do so given that or over time I want to leave it here and then and we have like",
    "start": "2663339",
    "end": "2670720"
  },
  {
    "text": "lots of time to answer questions in the um",
    "start": "2670720",
    "end": "2675880"
  },
  {
    "text": "in the chat um to summarize what I've showed you today is to take",
    "start": "2675880",
    "end": "2682900"
  },
  {
    "text": "um a way to define um derivatives using dual numbers I",
    "start": "2682900",
    "end": "2688960"
  },
  {
    "text": "turned that to using um manipulations into Point free form and point free form this is like you",
    "start": "2688960",
    "end": "2697060"
  },
  {
    "text": "know what Haskell and functional programmers do for fun what we ended up with was a an axiom for",
    "start": "2697060",
    "end": "2704859"
  },
  {
    "text": "um differentiation where we said that this thing introduces an isomorphism now",
    "start": "2704859",
    "end": "2712359"
  },
  {
    "text": "we could Define differentiation in terms of the functions that we defined and from that we can we Could reconstruct",
    "start": "2712359",
    "end": "2719859"
  },
  {
    "text": "everything we know about derivatives from this um one scholarized or 0.3",
    "start": "2719859",
    "end": "2726520"
  },
  {
    "text": "Axiom and we can do the same thing here for differentiation and the Beautiful",
    "start": "2726520",
    "end": "2731980"
  },
  {
    "text": "Thing here for me is that here it has no intuition right it just tells you like",
    "start": "2731980",
    "end": "2738400"
  },
  {
    "text": "you know given a function lowercase f there exists a unique function capital F and",
    "start": "2738400",
    "end": "2745900"
  },
  {
    "text": "that satisfies these properties so it doesn't talk about limits it doesn't talk about areas under the curve it just",
    "start": "2745900",
    "end": "2752740"
  },
  {
    "text": "gives me some properties of functions and then using that I can calculate and apply my regular functional programming",
    "start": "2752740",
    "end": "2760359"
  },
  {
    "text": "skills so I hope that I convinced you that you can turn calculus that talks",
    "start": "2760359",
    "end": "2766060"
  },
  {
    "text": "about and rates of change and everything into pure algebra if you formulate it in",
    "start": "2766060",
    "end": "2772720"
  },
  {
    "text": "the right way using these axioms and now if you were so lucky to understand",
    "start": "2772720",
    "end": "2779260"
  },
  {
    "text": "um functional programming then everything is now reduced to just um the same kind of like things that you",
    "start": "2779260",
    "end": "2786640"
  },
  {
    "text": "do when you do functional programming in escal or F-sharp or whatever your C",
    "start": "2786640",
    "end": "2792819"
  },
  {
    "text": "sharp JavaScript typescript whatever your favorite Scala your favorite",
    "start": "2792819",
    "end": "2798040"
  },
  {
    "text": "Scotland your favorite functional programming language of the day so that's it thank you very much",
    "start": "2798040",
    "end": "2807000"
  }
]