[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "so we're gonna go briefly through event sourcing today and then we're gonna start looking at a bunch of different",
    "start": "579",
    "end": "6770"
  },
  {
    "text": "problems and inside of these problems we're gonna start seeing massive amounts of accidental complexity come out",
    "start": "6770",
    "end": "13490"
  },
  {
    "text": "because we're using the wrong models and then we're gonna come back through we're gonna focus on how do we use the right",
    "start": "13490",
    "end": "19430"
  },
  {
    "text": "models now I'm sure you all know I don't",
    "start": "19430",
    "end": "25460"
  },
  {
    "text": "actually live in America anymore but I am American and Americans are known worldwide for their their subtleness and",
    "start": "25460",
    "end": "32689"
  },
  {
    "text": "reserve please do not feel bad about asking me a question when I'm talking I",
    "start": "32689",
    "end": "37940"
  },
  {
    "text": "will not bother me that much now before we get into polyglot data I",
    "start": "37940",
    "end": "44960"
  },
  {
    "start": "42000",
    "end": "136000"
  },
  {
    "text": "want to go through a very brief overview of what event sourcing is just for the people that may not know what event",
    "start": "44960",
    "end": "50960"
  },
  {
    "text": "sourcing is this talk is not about event sourcing but we all need to at least",
    "start": "50960",
    "end": "56149"
  },
  {
    "text": "have some level of shared understanding now it's interesting for me is and going",
    "start": "56149",
    "end": "61430"
  },
  {
    "text": "around and looking at business problems almost no business problems that are in",
    "start": "61430",
    "end": "67310"
  },
  {
    "text": "mature industries have the concept of currentstate inside of them think about",
    "start": "67310",
    "end": "72830"
  },
  {
    "text": "finance think about accounting think about insurance they don't have the",
    "start": "72830",
    "end": "79070"
  },
  {
    "text": "concept of current state current state as a transient concept what they do is they store facts that occur at points in",
    "start": "79070",
    "end": "85759"
  },
  {
    "text": "time how many of you have a bank account",
    "start": "85759",
    "end": "90850"
  },
  {
    "text": "do you think your balance is a column in a table what would happen if it were",
    "start": "91900",
    "end": "103240"
  },
  {
    "text": "so now you disagree with your bank about how much money is in your account and they said the almighty table says this",
    "start": "103790",
    "end": "110000"
  },
  {
    "text": "amount therefore it's correct and you go I need a new bank know your balance is an",
    "start": "110000",
    "end": "117500"
  },
  {
    "text": "equation your balance is a summation of all the transactions that have occurred",
    "start": "117500",
    "end": "123500"
  },
  {
    "text": "inside of your account I may store it in a table but that's a cash nothing more",
    "start": "123500",
    "end": "128720"
  },
  {
    "text": "it's not a Thorat ativ the same thing holds true with any business problem",
    "start": "128720",
    "end": "135080"
  },
  {
    "text": "that we want to look at most people today they work with structural models",
    "start": "135080",
    "end": "140660"
  },
  {
    "start": "136000",
    "end": "331000"
  },
  {
    "text": "and this has been my quintessential example of a structural model where we have a purchase order with n line items",
    "start": "140660",
    "end": "145970"
  },
  {
    "text": "and shipping information and this could be a document this could be stored off",
    "start": "145970",
    "end": "152060"
  },
  {
    "text": "in a sequel database this could be an XML file how many of you have worked",
    "start": "152060",
    "end": "158209"
  },
  {
    "text": "with a structural model like this before this is not the only way of representing",
    "start": "158209",
    "end": "164060"
  },
  {
    "text": "this information I can also represent this information as a series of events so we have cart created three items",
    "start": "164060",
    "end": "170720"
  },
  {
    "text": "added and shipping information at it now those three items added those are actually three events but if I'd made",
    "start": "170720",
    "end": "176930"
  },
  {
    "text": "all three events on this slide the boxes got really little and you couldn't read them anymore I can at any point in time take these",
    "start": "176930",
    "end": "185180"
  },
  {
    "text": "five events and I can replay them and I can give you this piece of structure I",
    "start": "185180",
    "end": "191140"
  },
  {
    "text": "can always replay this set of events and give you back the structure of what it actually represents but I don't store",
    "start": "191140",
    "end": "199580"
  },
  {
    "text": "the structure I store the series of events and there's a lot of benefits to",
    "start": "199580",
    "end": "205550"
  },
  {
    "text": "storing facts as opposed to storing your perception effects this is a perception",
    "start": "205550",
    "end": "212420"
  },
  {
    "text": "of the given facts the main difference you start finding is",
    "start": "212420",
    "end": "217700"
  },
  {
    "text": "that over time your perception changes now the real reason why almost all the",
    "start": "217700",
    "end": "225440"
  },
  {
    "text": "mature industries are using this as opposed to this is because this does not lose information this I don't care what",
    "start": "225440",
    "end": "233780"
  },
  {
    "text": "model you pick you are losing information as a CTO I had only one rule for my firm",
    "start": "233780",
    "end": "240370"
  },
  {
    "text": "we would not lose any data the reason we would not lose any data is because I had",
    "start": "240370",
    "end": "246410"
  },
  {
    "text": "no freaking clue how to value it how do you do cost-benefit analysis if you don't know how to value some of the",
    "start": "246410",
    "end": "251660"
  },
  {
    "text": "future we were storing over 100 gigabytes a day of data like this and",
    "start": "251660",
    "end": "258340"
  },
  {
    "text": "this was years ago this model is guaranteed to lose",
    "start": "258340",
    "end": "263780"
  },
  {
    "text": "information how many of you have an update or delete statement in your system how many of you had a c-level",
    "start": "263780",
    "end": "273410"
  },
  {
    "text": "meeting to talk about the value of that data in the future so you just decided",
    "start": "273410",
    "end": "279350"
  },
  {
    "text": "that this data is worthless and we will just get rid of it and a lot of problems",
    "start": "279350",
    "end": "285169"
  },
  {
    "text": "come from this now this slide it took me forever to find and the reason why it's",
    "start": "285169",
    "end": "293840"
  },
  {
    "text": "because accountants don't do that the same thing happens well at maybe at",
    "start": "293840",
    "end": "298880"
  },
  {
    "text": "Enron but accountants don't race in the middle their ledger when we talk about",
    "start": "298880",
    "end": "304280"
  },
  {
    "text": "these events source systems event source systems are append-only there is no",
    "start": "304280",
    "end": "309290"
  },
  {
    "text": "concept of delete and there is no concept of update this has a nice side",
    "start": "309290",
    "end": "314479"
  },
  {
    "text": "effect if I were to go through and set an HTTP cache on an event what would I",
    "start": "314479",
    "end": "322039"
  },
  {
    "text": "set it for infinite all of our data is completely immutable and we are an",
    "start": "322039",
    "end": "328460"
  },
  {
    "text": "append-only model now what does can lead",
    "start": "328460",
    "end": "334370"
  },
  {
    "text": "to is we might for instance say that now we've got cart created three items added one item removed and then shipping",
    "start": "334370",
    "end": "340310"
  },
  {
    "text": "information at it cool is this the same as cart created two items added shipping",
    "start": "340310",
    "end": "348050"
  },
  {
    "text": "information at it and I see some people saying yes and some people saying no one that that's great because this is always",
    "start": "348050",
    "end": "353750"
  },
  {
    "text": "a confusing question for people the answer is it depends on your perspective if I were using this model and I'm",
    "start": "353750",
    "end": "361910"
  },
  {
    "text": "projecting this model off the two event streams they're going to come up and be the exact same what if I were doing a",
    "start": "361910",
    "end": "367820"
  },
  {
    "text": "different model though what if I were making a model would tell me which items were removed from a cart would they end up the same",
    "start": "367820",
    "end": "374800"
  },
  {
    "text": "and this is a nice trick that you can play inside of your systems today if you",
    "start": "374800",
    "end": "382190"
  },
  {
    "text": "can find any two sets of use cases that leave your structural model at the same",
    "start": "382190",
    "end": "387650"
  },
  {
    "text": "end point guess what you just proved you're losing data what's the value of",
    "start": "387650",
    "end": "393979"
  },
  {
    "text": "the data that you just lost depending on",
    "start": "393979",
    "end": "399710"
  },
  {
    "text": "my perspective these will end up with different results now this is best seen",
    "start": "399710",
    "end": "405949"
  },
  {
    "text": "with a use case and I've been using this use case for years let's go back to this",
    "start": "405949",
    "end": "411229"
  },
  {
    "text": "model and let's imagine where amazon.com and they say you know what I think people that remove their items from",
    "start": "411229",
    "end": "417199"
  },
  {
    "text": "their carts within six minutes before they check out I think they're more likely to buy that item in the future",
    "start": "417199",
    "end": "423050"
  },
  {
    "text": "than the other items that we show them based on their preferences why when do",
    "start": "423050",
    "end": "429530"
  },
  {
    "text": "you remove an item from your cart six minutes before you check out you looked at your cart and it's gonna be like",
    "start": "429530",
    "end": "435020"
  },
  {
    "text": "three hundred and seventy dollars and you're like my wife's gonna kill me I can't do this I need to take two or",
    "start": "435020",
    "end": "440270"
  },
  {
    "text": "three items out of the cart it's not that I don't want them I'm just prioritizing them lower than the other items that were inside of my cart so",
    "start": "440270",
    "end": "448370"
  },
  {
    "text": "what do we do here we add a new thing called removed line items and then we write a report that looks for removed",
    "start": "448370",
    "end": "454039"
  },
  {
    "text": "line items and then does nested sub-query to see if you bought that item in the future roll it out to production",
    "start": "454039",
    "end": "459620"
  },
  {
    "text": "user runs his report what does he see nothing that report will work from this",
    "start": "459620",
    "end": "466430"
  },
  {
    "text": "moment in time forward let's do it in this model so what I'm gonna do is on a",
    "start": "466430",
    "end": "472430"
  },
  {
    "start": "469000",
    "end": "583000"
  },
  {
    "text": "write a projection now where I talk a lot about projections today projections could be in memory projections could go",
    "start": "472430",
    "end": "478280"
  },
  {
    "text": "to a sequel database projections could go to neo4j projections could go to MongoDB not that I highly recommend that",
    "start": "478280",
    "end": "486639"
  },
  {
    "text": "and what the projection is going to do is it looks for the item removed and it",
    "start": "486639",
    "end": "491719"
  },
  {
    "text": "says I am now searching for this item in the future then it sees the shipping information which is the equivalent to",
    "start": "491719",
    "end": "497479"
  },
  {
    "text": "the checkout and it says was this within six minutes of that it was mark",
    "start": "497479",
    "end": "503270"
  },
  {
    "text": "searching for this item in the future found equals false and then as I go forward in the future",
    "start": "503270",
    "end": "509150"
  },
  {
    "text": "if I find that item in someone's cart I marked true for found now what I haven't",
    "start": "509150",
    "end": "515750"
  },
  {
    "text": "told you about projections is when you run a projection it always has to start on event zero and come forward so it",
    "start": "515750",
    "end": "522680"
  },
  {
    "text": "will go to the very first event this system has ever done and come forward all the way till right now and then it",
    "start": "522680",
    "end": "528320"
  },
  {
    "text": "will run into the future I then write a report based on that output State what",
    "start": "528320",
    "end": "534260"
  },
  {
    "text": "does my business user see when he runs that report he sees the report as if",
    "start": "534260",
    "end": "539600"
  },
  {
    "text": "it's always been in the system in fact he can even go back and he can look at what that report would have told him if",
    "start": "539600",
    "end": "546230"
  },
  {
    "text": "he had that report on July 14th at 2:13 and 22 seconds in the afternoon this is",
    "start": "546230",
    "end": "554030"
  },
  {
    "text": "where the real value of event sourcing is coming from it's this ability to look at things with new perspectives and to",
    "start": "554030",
    "end": "559520"
  },
  {
    "text": "go back in time and look at history with perspectives that you have today in a",
    "start": "559520",
    "end": "566450"
  },
  {
    "text": "real world example imagine being able to take your brain as it exists today and send it back in time to when you were 12",
    "start": "566450",
    "end": "573110"
  },
  {
    "text": "years old at your first dance and you could perceive the facts then as you",
    "start": "573110",
    "end": "578510"
  },
  {
    "text": "understand them today it's actually a really scary scenario I wouldn't recommend doing it there's all sorts of",
    "start": "578510",
    "end": "585560"
  },
  {
    "text": "cool things that we can do because we can move forwards and backwards through time we can fire up new ways of looking",
    "start": "585560",
    "end": "592640"
  },
  {
    "text": "at our problem and it all comes back to that we're not losing any information and the only thing that you can do to",
    "start": "592640",
    "end": "598310"
  },
  {
    "text": "not lose any information is to store a series of events there's no other model that will do it any other model you pick",
    "start": "598310",
    "end": "604490"
  },
  {
    "text": "will lose some information it's just a matter of what information are you losing now how many of you have heard of",
    "start": "604490",
    "end": "620060"
  },
  {
    "start": "616000",
    "end": "644000"
  },
  {
    "text": "some of these before all of these are wonderful databases they're all the hot",
    "start": "620060",
    "end": "625880"
  },
  {
    "text": "new things if you're not cool if you're not using these except for one of them",
    "start": "625880",
    "end": "632200"
  },
  {
    "text": "how many you have heard that sequel is dead no one will ever use sequel ever",
    "start": "633429",
    "end": "640189"
  },
  {
    "text": "again new sequel no sequel that's the way to go yeah sure there is no best storage every",
    "start": "640189",
    "end": "649160"
  },
  {
    "text": "database on the planet sucks every single one of them whether we're talking about neo4j because there's a couple",
    "start": "649160",
    "end": "655609"
  },
  {
    "text": "guys in here on whether we're talking about Cassandra whether we're talking about Oracle whether we're talking about",
    "start": "655609",
    "end": "660889"
  },
  {
    "text": "events store they all suck every single one of them and they all suck in their",
    "start": "660889",
    "end": "666709"
  },
  {
    "text": "own unique ways how many of you remember these does this remind people of the no",
    "start": "666709",
    "end": "674629"
  },
  {
    "start": "668000",
    "end": "804000"
  },
  {
    "text": "sequel movement today years ago they said that no one will ever use sequel",
    "start": "674629",
    "end": "680329"
  },
  {
    "text": "again because we have these new things called object databases and object databases are the best thing ever object databases they Rock we can use",
    "start": "680329",
    "end": "688699"
  },
  {
    "text": "yaja with spring XML configuration and store our data in XML and if you didn't know llaves a language to convert xml to",
    "start": "688699",
    "end": "695149"
  },
  {
    "text": "stack traces if we can store our data in XML we'll make it even better",
    "start": "695149",
    "end": "700749"
  },
  {
    "text": "but everyone found out that these things actually suck when I used an object",
    "start": "700749",
    "end": "706730"
  },
  {
    "text": "database behind my domain model how many of you hibernate before hibernates",
    "start": "706730",
    "end": "711889"
  },
  {
    "text": "really nasty because you got this giant impedance mismatch between you and your database these don't have that impedance",
    "start": "711889",
    "end": "717889"
  },
  {
    "text": "mismatch when I go to get an object I walk from one object to another object that that operation has done Big O of",
    "start": "717889",
    "end": "723919"
  },
  {
    "text": "one inside of that object database then why did everybody stop using them how",
    "start": "723919",
    "end": "731359"
  },
  {
    "text": "many of you use an object database today occasionally I'll get one hand actually",
    "start": "731359",
    "end": "738169"
  },
  {
    "text": "they're normally working in financial systems a lot of the old backing financial systems are still an object databases why did they suck why didn't",
    "start": "738169",
    "end": "745910"
  },
  {
    "text": "they take over the world what happened was people would go through and they build their domain model up on top of",
    "start": "745910",
    "end": "752029"
  },
  {
    "text": "their object database and everything would be hunky-dory maybe just getting ready to go to production and then that",
    "start": "752029",
    "end": "757189"
  },
  {
    "text": "stupid business person would come over and say something like you know I need a report and what I want is a report that",
    "start": "757189",
    "end": "763850"
  },
  {
    "text": "takes all the sales from the cost I want to roll them up by customer and then I want to get an average and",
    "start": "763850",
    "end": "769160"
  },
  {
    "text": "standard deviation for their their ticket size and I want to get the summation total of how much they've been spending you like that sounds like a",
    "start": "769160",
    "end": "776900"
  },
  {
    "text": "group buy or you could try doing it in an object database and it's going to be",
    "start": "776900",
    "end": "784430"
  },
  {
    "text": "horrific ly painful to do you need to load up 800 million objects into memory and go through and basically deal with",
    "start": "784430",
    "end": "790670"
  },
  {
    "text": "this and so everyone said you know object databases suck we should never use them",
    "start": "790670",
    "end": "796450"
  },
  {
    "text": "perfectly rational thing they they suck at doing OLAP behaviors so we just won't",
    "start": "796450",
    "end": "803330"
  },
  {
    "text": "use them anymore when we start getting into these kinds of systems it's",
    "start": "803330",
    "end": "809150"
  },
  {
    "start": "804000",
    "end": "1114000"
  },
  {
    "text": "extraordinarily rare that a single data model will actually work to do everything that you want to do and do it",
    "start": "809150",
    "end": "815240"
  },
  {
    "text": "well and we can go through lots of examples of where people pick the wrong",
    "start": "815240",
    "end": "821840"
  },
  {
    "text": "models and it causes lots of problems how many have heard of this small startup so when they started going you",
    "start": "821840",
    "end": "829490"
  },
  {
    "text": "remember the fail whale what twitter is at its core is a topic based pub/sub of",
    "start": "829490",
    "end": "837740"
  },
  {
    "text": "course there's no prior art inside of this problem and they ended up",
    "start": "837740",
    "end": "842990"
  },
  {
    "text": "implementing it in Ruby on Rails on top of my sequel until they had hundreds and",
    "start": "842990",
    "end": "848750"
  },
  {
    "text": "hundreds of my sequel instances you may know that they've they've since changed",
    "start": "848750",
    "end": "854420"
  },
  {
    "text": "all of that but they ran into the problems because the model that they were trying to use underneath things",
    "start": "854420",
    "end": "860150"
  },
  {
    "text": "wasn't appropriate to what they were trying to do another example we have a",
    "start": "860150",
    "end": "866810"
  },
  {
    "text": "table it's got an ID a parent ID and then some data how many you have",
    "start": "866810",
    "end": "872030"
  },
  {
    "text": "implemented this before come on you can admit it this is for a menu bar and then",
    "start": "872030",
    "end": "879710"
  },
  {
    "text": "you push this off to production and production comes back to you and says why is this report taking nine minutes",
    "start": "879710",
    "end": "886580"
  },
  {
    "text": "to run and of course you say well works fine in my machine what's wrong with",
    "start": "886580",
    "end": "891860"
  },
  {
    "text": "your production environment well what's wrong with their production environment is that instead of having the 20 rows of",
    "start": "891860",
    "end": "898220"
  },
  {
    "text": "data that you had they've got a hundred and seventy thousand rows of data and what you've created here is known as a recursive",
    "start": "898220",
    "end": "904070"
  },
  {
    "text": "query now you guys are all smart developers so I imagine what you did",
    "start": "904070",
    "end": "909440"
  },
  {
    "text": "next was this where now I'm going to have id parent ID zero parent ID one",
    "start": "909440",
    "end": "916130"
  },
  {
    "text": "parent ID two parent ID three and you'd do the parent IDs all the way out to the depth that you want to be able to query because that way I can just do a query",
    "start": "916130",
    "end": "922730"
  },
  {
    "text": "and I could say where parent ID equals or parent ID zero equals or parent ID one equals or parent and then I can",
    "start": "922730",
    "end": "928880"
  },
  {
    "text": "rearrange them in memory and do the recursion in memory this is very similar",
    "start": "928880",
    "end": "934220"
  },
  {
    "text": "to another problem I've seen I have seen this particular problem at least three or four times over the last six months",
    "start": "934220",
    "end": "941360"
  },
  {
    "text": "with real clients many of them in America so what they have here is they've got a table for person and a",
    "start": "941360",
    "end": "948170"
  },
  {
    "text": "person has a name or a type and I don't know why it's named person and there's a type company and it doesn't make any",
    "start": "948170",
    "end": "954500"
  },
  {
    "text": "sense and then they have a relationship table where they have a relationship ID",
    "start": "954500",
    "end": "959600"
  },
  {
    "text": "a person ID a person ID because I'm mapping two people together and then they have a relationship type how many",
    "start": "959600",
    "end": "967070"
  },
  {
    "text": "have implemented something similar to this now the business problem that",
    "start": "967070",
    "end": "974150"
  },
  {
    "text": "they're solving is they start saying you know I've got Joe here and I want to see if this person is related to Joe up to",
    "start": "974150",
    "end": "982220"
  },
  {
    "text": "three levels based on these relationship types like they can be a caregiver or a",
    "start": "982220",
    "end": "989420"
  },
  {
    "text": "parent but they can't be an uncle so show me whether or not this is true and",
    "start": "989420",
    "end": "995870"
  },
  {
    "text": "what's the quickest path to get between them they had a roughly ten engineers",
    "start": "995870",
    "end": "1002050"
  },
  {
    "text": "working on this problem for about a year we actually fixed this for them and in",
    "start": "1002050",
    "end": "1009790"
  },
  {
    "text": "about three days what we did was we brought in this database called neo4j it's a graph database this is a graph",
    "start": "1009790",
    "end": "1017320"
  },
  {
    "text": "problem that they implemented inside of sequel and it requires recursive queries",
    "start": "1017320",
    "end": "1024060"
  },
  {
    "text": "they were running nearly a half-million dollar sequel server to support these queries we were outperforming them on a",
    "start": "1024060",
    "end": "1030250"
  },
  {
    "text": "laptop this is common and I have seen this",
    "start": "1030250",
    "end": "1036100"
  },
  {
    "text": "problem happen over and over and over again now I'm not going to say that you guys are incapable",
    "start": "1036100",
    "end": "1041139"
  },
  {
    "text": "of writing a graph database but how many of you have a PhD in graph theory no one ok I trust the people at neo4j",
    "start": "1041139",
    "end": "1049059"
  },
  {
    "text": "more I was actually funny I was doing this talk in budapest about two weeks",
    "start": "1049059",
    "end": "1054429"
  },
  {
    "text": "ago and I asked that question there's actually a guy in the audience he's like well actually I do have a PhD in graph theory and it's like well what",
    "start": "1054429",
    "end": "1065500"
  },
  {
    "text": "we're seeing here is that the wrong model causes massive amounts of accidental complexity we're not talking",
    "start": "1065500",
    "end": "1071769"
  },
  {
    "text": "like adding 20 minutes or 30 minutes to your day because of the wrong model",
    "start": "1071769",
    "end": "1077379"
  },
  {
    "text": "we're talking about taking things from a year of 10 people working to three days",
    "start": "1077379",
    "end": "1082450"
  },
  {
    "text": "of two people working all the rest is massive accidental complexity other",
    "start": "1082450",
    "end": "1088960"
  },
  {
    "text": "examples of this can be seen how many have seen sequel server full-text indexing what do you think does better",
    "start": "1088960",
    "end": "1096909"
  },
  {
    "text": "job that or leucine Liat Lucene blows it out of the water but we always try to",
    "start": "1096909",
    "end": "1104529"
  },
  {
    "text": "find one solution to our problems and what we really want to be doing is we want to actually be separating and using",
    "start": "1104529",
    "end": "1112480"
  },
  {
    "text": "multiple models inside of our problems now I've been talking about one form of this separation for a very very long",
    "start": "1112480",
    "end": "1118840"
  },
  {
    "start": "1114000",
    "end": "1322000"
  },
  {
    "text": "time and that is CQRS command and query responsibility segregation because reads and writes are",
    "start": "1118840",
    "end": "1125440"
  },
  {
    "text": "different we should separate based on reads and writes this is not the first time I talked about event sourcing this",
    "start": "1125440",
    "end": "1131350"
  },
  {
    "text": "is actually the second I believe and it was hilarious because I wasn't really talking that much and I don't mention",
    "start": "1131350",
    "end": "1138490"
  },
  {
    "text": "died was very young back then I mean we're talking what it's like seven years ago so I'm like 27 years old hadn't",
    "start": "1138490",
    "end": "1146529"
  },
  {
    "text": "talked much at conferences I come out I probably had 20 cups of coffee my front",
    "start": "1146529",
    "end": "1152620"
  },
  {
    "text": "row people I've never met Martin Fowler Gregor hope-a and Eric Evans and I'm",
    "start": "1152620",
    "end": "1159250"
  },
  {
    "text": "gonna be talking about extending their work I think I went through my entire talk in like 22",
    "start": "1159250",
    "end": "1165340"
  },
  {
    "text": "it's and afterwards Eric comes up to me and he's like you know that was a bad",
    "start": "1165340",
    "end": "1170740"
  },
  {
    "text": "talk it's like well crap thanks Eric I",
    "start": "1170740",
    "end": "1176110"
  },
  {
    "text": "appreciate that but reads and writes are one way that we can start distinguishing",
    "start": "1176110",
    "end": "1182830"
  },
  {
    "text": "and separating now for me the reads are the interesting part of systems writes",
    "start": "1182830",
    "end": "1189940"
  },
  {
    "text": "are really simple and we'll talk more about them but if you look at most systems the interesting ways that you're",
    "start": "1189940",
    "end": "1196000"
  },
  {
    "text": "going to be putting your data it's about how you want to read your data not about how you want to write your data and when",
    "start": "1196000",
    "end": "1203860"
  },
  {
    "text": "we look at the reads it's usually reads that need to scale not writes I bet most",
    "start": "1203860",
    "end": "1211180"
  },
  {
    "text": "of you could run the rights of your system on my mobile phone how many of",
    "start": "1211180",
    "end": "1217330"
  },
  {
    "text": "you do more than 50 transactions per second couple hands I know there's a lot",
    "start": "1217330",
    "end": "1224680"
  },
  {
    "text": "of finance guys here so I should be fair and say that in financial systems this is completely backwards and you get lots",
    "start": "1224680",
    "end": "1230680"
  },
  {
    "text": "and lots of rights for very few reads but most systems the reads are what I",
    "start": "1230680",
    "end": "1237580"
  },
  {
    "text": "need to scale and I get brought in for a lot of scalability problems and one thing I always find funny is you go and",
    "start": "1237580",
    "end": "1243970"
  },
  {
    "text": "look at their problems and their problems are scaling their reads off of their sequel database I bet most of you",
    "start": "1243970",
    "end": "1250450"
  },
  {
    "text": "are somewhere between one and two orders of magnitude more reads than rights my guess is most of you are somewhere",
    "start": "1250450",
    "end": "1257140"
  },
  {
    "text": "between 90 to 99 percent reads now how many of you have a third normal form database or right around third normal",
    "start": "1257140",
    "end": "1264040"
  },
  {
    "text": "form this is what I typically find you built a model that was optimized for",
    "start": "1264040",
    "end": "1270790"
  },
  {
    "text": "writing and then wonder why you have problems scaling your reads it's the same thing we were talking about before",
    "start": "1270790",
    "end": "1278910"
  },
  {
    "text": "but reads are almost always the interesting side of things",
    "start": "1279210",
    "end": "1285030"
  },
  {
    "text": "rights are almost never interesting if I go look inside of neo4j if I go look",
    "start": "1285990",
    "end": "1294340"
  },
  {
    "text": "inside of event store if I go look inside of sequel light if I go look inside of Cassandra you know what they",
    "start": "1294340",
    "end": "1300850"
  },
  {
    "text": "all work the same way for writing so does oracle so too sequel server they",
    "start": "1300850",
    "end": "1306850"
  },
  {
    "text": "append to a log and then internally after they append to a log they will go",
    "start": "1306850",
    "end": "1312670"
  },
  {
    "text": "and update whatever the thing they're going to be querying it is whether it's a b-tree is it a stored string table",
    "start": "1312670",
    "end": "1318870"
  },
  {
    "text": "they all work almost identically now in",
    "start": "1318870",
    "end": "1325060"
  },
  {
    "start": "1322000",
    "end": "1492000"
  },
  {
    "text": "general storing events is a good lossless transactional model that's what",
    "start": "1325060",
    "end": "1330730"
  },
  {
    "text": "the database does internal e you can do the same inside of your code why not for",
    "start": "1330730",
    "end": "1336610"
  },
  {
    "text": "writes just store an event that's what we are talking about all the way back",
    "start": "1336610",
    "end": "1342550"
  },
  {
    "text": "when we're talking about event sourcing I'm just appending events to a log now",
    "start": "1342550",
    "end": "1349180"
  },
  {
    "text": "reads and writes are one form of separation that we can talk about but there's other forms of separation that exist another very common form of",
    "start": "1349180",
    "end": "1356830"
  },
  {
    "text": "separation is time time will allow us to",
    "start": "1356830",
    "end": "1363700"
  },
  {
    "text": "separate out different models now if I go into finance this is actually a domain concept it's the concept of",
    "start": "1363700",
    "end": "1371170"
  },
  {
    "text": "intraday data versus inter day data today is treated differently than any",
    "start": "1371170",
    "end": "1377080"
  },
  {
    "text": "other day in the history of mankind and this is common to see what I've been",
    "start": "1377080",
    "end": "1383380"
  },
  {
    "text": "seeing a lot lately is big multivariate problems things that people are doing large map produces across and what I'm",
    "start": "1383380",
    "end": "1391540"
  },
  {
    "text": "finding is they will end up having this massive MapReduce job let's say using a",
    "start": "1391540",
    "end": "1397060"
  },
  {
    "text": "t Amazon extra large nodes and then they do that once per month and that will",
    "start": "1397060",
    "end": "1402850"
  },
  {
    "text": "give them perfect answers to their multivariate problem but now the business wants to get that every day how",
    "start": "1402850",
    "end": "1411250"
  },
  {
    "text": "much does it cost to ramp up 80 Amazon extra large nodes for a month",
    "start": "1411250",
    "end": "1416850"
  },
  {
    "text": "it's prohibitive but what we can do here is we can separate based on time and",
    "start": "1416850",
    "end": "1423779"
  },
  {
    "text": "what you'll normally end up with is you'll end up with the large Hadoop let's say batch job and then we'll put",
    "start": "1423779",
    "end": "1429690"
  },
  {
    "text": "in a little tiny speed complex event processor now what the complex event processor is doing is it's going through",
    "start": "1429690",
    "end": "1436259"
  },
  {
    "text": "knowing what this thing said and what you cared the most about because let's say you're bidding on things because of that information and as it's going",
    "start": "1436259",
    "end": "1443700"
  },
  {
    "text": "through its invalidating thin slices of the big problem and then doing little",
    "start": "1443700",
    "end": "1449279"
  },
  {
    "text": "tiny MapReduce jobs to try to end to update just a very thin slice of the overall MapReduce job this is very very",
    "start": "1449279",
    "end": "1458399"
  },
  {
    "text": "common and it can get you to the goal of having near real-time information without taking the expense of having 80",
    "start": "1458399",
    "end": "1464279"
  },
  {
    "text": "Amazon extra large nodes running constantly this is a really common form",
    "start": "1464279",
    "end": "1470100"
  },
  {
    "text": "of separation of models between data that's over one day old versus data",
    "start": "1470100",
    "end": "1475799"
  },
  {
    "text": "that's current you will see these separations start happening all of the",
    "start": "1475799",
    "end": "1482159"
  },
  {
    "text": "time and almost never do you want to have a single model single models will",
    "start": "1482159",
    "end": "1487409"
  },
  {
    "text": "cause problems you're always going to end up because every database sucks in its own unique ways now when we start",
    "start": "1487409",
    "end": "1498179"
  },
  {
    "start": "1492000",
    "end": "1842000"
  },
  {
    "text": "looking at how to do this a lot of problems come up how many you have tried",
    "start": "1498179",
    "end": "1503340"
  },
  {
    "text": "running with two databases in your organization before did they go out of",
    "start": "1503340",
    "end": "1509730"
  },
  {
    "text": "sync what happens when I run three models and they all tell you three",
    "start": "1509730",
    "end": "1515460"
  },
  {
    "text": "different things it causes a big problem and this is",
    "start": "1515460",
    "end": "1524220"
  },
  {
    "text": "typically what ends up happening so this is my stereotypical way that I see",
    "start": "1524220",
    "end": "1530520"
  },
  {
    "text": "people trying to implement multiple models in their system so basically they've got a client that's talking back",
    "start": "1530520",
    "end": "1536070"
  },
  {
    "text": "to a domain the domain might be backed by something like hibernate talking to a third normal form database the domain",
    "start": "1536070",
    "end": "1542880"
  },
  {
    "text": "model will then publish events off to this magical thing called a bus and the",
    "start": "1542880",
    "end": "1548429"
  },
  {
    "text": "bus will then deliver the events off to the things that are going to be reactive so we may write into an OLAP database we",
    "start": "1548429",
    "end": "1554669"
  },
  {
    "text": "may write into a graph database we may look at things from a stream processing perspective this is doomed to failure by",
    "start": "1554669",
    "end": "1564659"
  },
  {
    "text": "the way has anybody here ever watched martin fowler's talk does my bus look big in this I would highly recommend it",
    "start": "1564659",
    "end": "1572390"
  },
  {
    "text": "but in production this will not actually work well one of our first problems has",
    "start": "1572659",
    "end": "1578940"
  },
  {
    "text": "to do with this so if my domain model is going to write into a third normal form",
    "start": "1578940",
    "end": "1583950"
  },
  {
    "text": "database and it's going to publish a message into a bus what does it need",
    "start": "1583950",
    "end": "1591230"
  },
  {
    "text": "well what happens if I go to write to the database and I get a success and then I say now publish to the queue but",
    "start": "1591380",
    "end": "1599010"
  },
  {
    "text": "someone unplugs me right before I say that so now we're going to need a",
    "start": "1599010",
    "end": "1604020"
  },
  {
    "text": "distributed transaction of some type stay away from distributed transactions",
    "start": "1604020",
    "end": "1609780"
  },
  {
    "text": "avoid them like the plague if you can but it's a more sinister problem here I",
    "start": "1609780",
    "end": "1615980"
  },
  {
    "text": "know none of you would put a bug into software but you have juniors on your team what happens if we have a bug here",
    "start": "1615980",
    "end": "1623720"
  },
  {
    "text": "let's say there's a bug and into the domain model we set the state to be a",
    "start": "1623720",
    "end": "1629280"
  },
  {
    "text": "hard-coded Connecticut while we take whatever our clients command was and correctly put that onto the event to go",
    "start": "1629280",
    "end": "1635760"
  },
  {
    "text": "off to everybody else so now this database says it's in Louisiana and that",
    "start": "1635760",
    "end": "1641610"
  },
  {
    "text": "database says it's in Connecticut how do you handle this this is a very very big",
    "start": "1641610",
    "end": "1649409"
  },
  {
    "text": "problem now let's just say that that occurred how would I detect",
    "start": "1649409",
    "end": "1654600"
  },
  {
    "text": "that occurred how do you reconcile between a sequel database on a graph database this should be fun right",
    "start": "1654600",
    "end": "1664610"
  },
  {
    "text": "what is right a reconciliation script of course which is more likely to have",
    "start": "1664610",
    "end": "1669960"
  },
  {
    "text": "happen that you actually found a bug or that you've got a false positive because your migration script is broken or sorry",
    "start": "1669960",
    "end": "1676049"
  },
  {
    "text": "your reconciliation script is broken okay let's imagine that we found out that this occurred how do we fix it do",
    "start": "1676049",
    "end": "1685710"
  },
  {
    "text": "we go back from the OLAP model to the third normal form model and open up a distributed transaction through linked",
    "start": "1685710",
    "end": "1692250"
  },
  {
    "text": "servers or something we've got a really big problem here but there's a more",
    "start": "1692250",
    "end": "1697890"
  },
  {
    "text": "sinister problem and that's what happens when I try to bring out a new model and we talked about one of the beautiful",
    "start": "1697890",
    "end": "1703799"
  },
  {
    "text": "things about event sourcing and this keeping of streams of events is that I can have new perceptions that I come up",
    "start": "1703799",
    "end": "1709530"
  },
  {
    "text": "with at any point in time and I have a new one now and I want to start saying okay I need to get back all of my events",
    "start": "1709530",
    "end": "1716159"
  },
  {
    "text": "so I can bring up my new model how do I do that with this bus in the middle do I",
    "start": "1716159",
    "end": "1723240"
  },
  {
    "text": "do that what's happening here is I've got a bunch of cues I would have to send",
    "start": "1723240",
    "end": "1729330"
  },
  {
    "text": "a message from the new model back over to something on the other side to say hey I need you to resend me all the",
    "start": "1729330",
    "end": "1735600"
  },
  {
    "text": "events I haven't seen before in other words I need a control channel very much",
    "start": "1735600",
    "end": "1740880"
  },
  {
    "text": "like an FTP can you imagine if blogs",
    "start": "1740880",
    "end": "1746880"
  },
  {
    "text": "work like this so you've come to my blog",
    "start": "1746880",
    "end": "1752250"
  },
  {
    "text": "and you want to subscribe so I say okay cool if you want to subscribe to my blog send me an email I will create a queue",
    "start": "1752250",
    "end": "1760049"
  },
  {
    "text": "for you and then send you a link to your queue and then you say but I don't just want the blog post in the future I want",
    "start": "1760049",
    "end": "1768090"
  },
  {
    "text": "to get your historical blog post too so you send me another email that says I want your historical blog posts and then",
    "start": "1768090",
    "end": "1773700"
  },
  {
    "text": "I the historical blog posts into your queue this doesn't sound very scalable",
    "start": "1773700",
    "end": "1782840"
  },
  {
    "text": "this is actually a huge problem and it's a source of accidental complexity that people don't see when they start",
    "start": "1783230",
    "end": "1789090"
  },
  {
    "text": "building this and they find out at the end once they've gone to production and thing is it's really hard to undo this",
    "start": "1789090",
    "end": "1795720"
  },
  {
    "text": "once you've done it this is a fairly typical problem but there's other ways",
    "start": "1795720",
    "end": "1803580"
  },
  {
    "text": "of dealing with this particular situation and in order to think about them we need to think about how blogs",
    "start": "1803580",
    "end": "1810000"
  },
  {
    "text": "actually work and if I have a queue here what we have is known as a a producer",
    "start": "1810000",
    "end": "1817620"
  },
  {
    "text": "driven subscription the producer remembers the state of the subscription",
    "start": "1817620",
    "end": "1823820"
  },
  {
    "text": "if you are following my blog it doesn't make sense for me to know the state of",
    "start": "1823970",
    "end": "1829050"
  },
  {
    "text": "your subscription you keep the state of your subscription you remember how far along you've actually come and when you",
    "start": "1829050",
    "end": "1836160"
  },
  {
    "text": "come back up you ask me for anything after that point in time and that allows for a lot of interesting things to",
    "start": "1836160",
    "end": "1842520"
  },
  {
    "start": "1842000",
    "end": "2112000"
  },
  {
    "text": "happen here so now instead what we're going to do is we're going to have a client that's talking to a domain and",
    "start": "1842520",
    "end": "1848570"
  },
  {
    "text": "behind that we're just gonna store all of our events and we're gonna expose them over a protocol let's say Adam Adam",
    "start": "1848570",
    "end": "1855690"
  },
  {
    "text": "would be perfect for this now all of these subscribers remember their own",
    "start": "1855690",
    "end": "1861090"
  },
  {
    "text": "State they don't have queues they all just let's say listen to an RSS feed of the events that are happening now if",
    "start": "1861090",
    "end": "1868290"
  },
  {
    "text": "this guy needs to reset and go from event zero what it's going to do is it's just going to forget its own subscription information and go all the",
    "start": "1868290",
    "end": "1875400"
  },
  {
    "text": "way back to the beginning and say oh I will I was at 120 - but forget that",
    "start": "1875400",
    "end": "1881580"
  },
  {
    "text": "give me the next 20 events after negative one each of these controls",
    "start": "1881580",
    "end": "1888600"
  },
  {
    "text": "their own subscription on the other side we no longer have two sources of truth",
    "start": "1888600",
    "end": "1895140"
  },
  {
    "text": "we don't have the events and the third normal form database we only have the events by the way if I'm writing to an",
    "start": "1895140",
    "end": "1904230"
  },
  {
    "text": "event store and I'm writing to an event store do I need a distributed transaction now because you're only",
    "start": "1904230",
    "end": "1913170"
  },
  {
    "text": "writing to one store at this point it's a single local there's no need for distributed transaction right into that event store",
    "start": "1913170",
    "end": "1919710"
  },
  {
    "text": "is the equivalent of doing a publish it's this at the same operation it's",
    "start": "1919710",
    "end": "1925200"
  },
  {
    "text": "save and publish as part of the same operation and these are all just following check pointing off of what is",
    "start": "1925200",
    "end": "1932760"
  },
  {
    "text": "available over in those events but where the real beauty of this model starts to",
    "start": "1932760",
    "end": "1938970"
  },
  {
    "text": "come into play is when we start saying that we're going to add a new model to this before when we were back here a new",
    "start": "1938970",
    "end": "1947909"
  },
  {
    "text": "model is going to need to talk to something on the other thought side through a control channel to say I want",
    "start": "1947909",
    "end": "1953250"
  },
  {
    "text": "you to come up and start sending me over events by the way this is always an",
    "start": "1953250",
    "end": "1959039"
  },
  {
    "text": "interesting question so if I talk over the control channel to you to tell me to resend my entire history and there's",
    "start": "1959039",
    "end": "1967620"
  },
  {
    "text": "currently things that are happening right now do you interleave them into my history",
    "start": "1967620",
    "end": "1973200"
  },
  {
    "text": "do you cache them until you're done sending me the history how do we",
    "start": "1973200",
    "end": "1978690"
  },
  {
    "text": "coordinate when I get those new events compared to when the old events were being sent across and it's actually a",
    "start": "1978690",
    "end": "1984809"
  },
  {
    "text": "really really hard problem and it requires generally that you're going to go off and build some infrastructure",
    "start": "1984809",
    "end": "1990890"
  },
  {
    "text": "here this model controls its own subscription it controls its own state",
    "start": "1990890",
    "end": "1998190"
  },
  {
    "text": "of its subscription it can just throw away that state start from event zero and come forward again the easiest way",
    "start": "1998190",
    "end": "2004940"
  },
  {
    "text": "to think about these protocols is imagine that every event is given a number 0 1 2 3 4 5 when I first come up",
    "start": "2004940",
    "end": "2015289"
  },
  {
    "text": "I say give me the next three events after event negative 1 so I get 0 1 2",
    "start": "2015289",
    "end": "2021679"
  },
  {
    "text": "once I've processed two I remember I have saved 2 and I say give me the next 3 events after 2 by the way I crashed",
    "start": "2021679",
    "end": "2028880"
  },
  {
    "text": "right now so I come back up I say what's the last thing I have processed event number 2 give me the next 3 events after",
    "start": "2028880",
    "end": "2036169"
  },
  {
    "text": "event number 2 and what this does is it simulates at least once messaging now",
    "start": "2036169",
    "end": "2042710"
  },
  {
    "text": "you can actually simulate transactional messaging with this as well if you store atomically your check point with the",
    "start": "2042710",
    "end": "2048290"
  },
  {
    "text": "work that you actually doing and it's a really nice cheap way to be able to simulate doing",
    "start": "2048290",
    "end": "2053800"
  },
  {
    "text": "this kind of workflow here this is just going to blow away whatever its state",
    "start": "2053800",
    "end": "2061300"
  },
  {
    "text": "was if if I want to replay this something I just say forget everything that you've seen before and start back",
    "start": "2061300",
    "end": "2067389"
  },
  {
    "text": "at negative one and come forward there's no coordination that needs to happen between these two it's all going to",
    "start": "2067390",
    "end": "2074080"
  },
  {
    "text": "happen on this side and this will help to remove a lot of accidental complexity inside of these kinds of systems another",
    "start": "2074080",
    "end": "2083139"
  },
  {
    "text": "benefit that we can have here could I have two OLAP models that are identical",
    "start": "2083140",
    "end": "2089169"
  },
  {
    "text": "if we start seeing we're getting too much load on our OLAP model people",
    "start": "2089169",
    "end": "2094629"
  },
  {
    "text": "running reports could I just spawn off a second one right next to it and then put a load balancer in front of these two as",
    "start": "2094630",
    "end": "2100450"
  },
  {
    "text": "to which one gets the query providing that my all that model fits into one silo yes and this is very often how we",
    "start": "2100450",
    "end": "2109090"
  },
  {
    "text": "scale in these kinds of systems now and",
    "start": "2109090",
    "end": "2114670"
  },
  {
    "text": "where's my slide there it is and this is supposed to be an animated",
    "start": "2114670",
    "end": "2121530"
  },
  {
    "text": "jiff but I've switched it to PDF and apparently PDF doesn't like animated",
    "start": "2121530",
    "end": "2126780"
  },
  {
    "text": "gifs very much what this is is this is a route Goldberg machine and it's an",
    "start": "2126780",
    "end": "2131970"
  },
  {
    "text": "animated ship it's so much better it's actually going all over the place and I don't want people to walk out of here",
    "start": "2131970",
    "end": "2139320"
  },
  {
    "text": "saying Greg told me that we should use ten different databases we should use a different database for every problem",
    "start": "2139320",
    "end": "2144870"
  },
  {
    "text": "that we have we saw that leucine is the absolute best at doing C at doing",
    "start": "2144870",
    "end": "2150990"
  },
  {
    "text": "full-text indexing and you know we've got a full-text indexing problem that we do over here where people start typing",
    "start": "2150990",
    "end": "2156750"
  },
  {
    "text": "in this one thing and we do autocomplete on it so we need to get leucine and we",
    "start": "2156750",
    "end": "2162660"
  },
  {
    "text": "realized that we've actually got a graph in our system it's the 28 items that make up our menu so we need to bring in",
    "start": "2162660",
    "end": "2169350"
  },
  {
    "text": "neo4j in order to handle our menu this is not what I'm saying",
    "start": "2169350",
    "end": "2174590"
  },
  {
    "text": "when we talk about this kind of stuff you need to remember there's two sides of this the other side of this is",
    "start": "2174590",
    "end": "2180330"
  },
  {
    "text": "accidental complexity and sorry operational complexity if I for instance",
    "start": "2180330",
    "end": "2187110"
  },
  {
    "text": "bringing MongoDB somebody in operations needs to know what the hell MongoDB is",
    "start": "2187110",
    "end": "2194010"
  },
  {
    "text": "they need to know how to configure MongoDB they need to know how to monitor MongoDB how do you do a backup for",
    "start": "2194010",
    "end": "2200370"
  },
  {
    "text": "MongoDB somebody is going to need to know all of this information in order to be able to get the stuff working and",
    "start": "2200370",
    "end": "2207170"
  },
  {
    "text": "that has a cost as well in terms of complexity from operations perspective I am NOT saying that you should go off and",
    "start": "2207170",
    "end": "2214200"
  },
  {
    "text": "get customized database for every single thing that you want to do instead I'm",
    "start": "2214200",
    "end": "2219900"
  },
  {
    "text": "saying more understand the trade-offs you will take accidental complexity",
    "start": "2219900",
    "end": "2224940"
  },
  {
    "text": "because you're choosing the wrong model if I choose lots of models I introduce",
    "start": "2224940",
    "end": "2230280"
  },
  {
    "text": "operational complexity the answer sits somewhere in the middle now if I were to come to your company and you were to",
    "start": "2230280",
    "end": "2236160"
  },
  {
    "text": "show me that you've got a small full-text indexing problem and you said you know we do it inside of sequel",
    "start": "2236160",
    "end": "2241200"
  },
  {
    "text": "server I'd say oh okay best and then if you said you know and",
    "start": "2241200",
    "end": "2246300"
  },
  {
    "text": "we do it inside of sequel server because we were looking at bringing the scene in and the cost of bringing in Lucene from",
    "start": "2246300",
    "end": "2251820"
  },
  {
    "text": "an operation perspective was much higher and we don't really have much data we've only got a hundred thousand rows of data we're",
    "start": "2251820",
    "end": "2257519"
  },
  {
    "text": "doing it over anyway so based on the trade-off we decided that we would actually use sequel server indexing I",
    "start": "2257519",
    "end": "2264289"
  },
  {
    "text": "would have absolutely no problem with that that is an informed conscious decision if you're bringing me in for a",
    "start": "2264289",
    "end": "2271589"
  },
  {
    "text": "performance problem with full text as full text searching inside of sequel server and I were to say well have you",
    "start": "2271589",
    "end": "2277829"
  },
  {
    "text": "considered using something like we've seen or elasticsearch you went Lu what that would be a bit more of a problem if",
    "start": "2277829",
    "end": "2285029"
  },
  {
    "text": "we're going back and we're looking at a system that is built like this and when",
    "start": "2285029",
    "end": "2292710"
  },
  {
    "start": "2287000",
    "end": "2307000"
  },
  {
    "text": "I mentioned a graph database you go oh what this is we really need to be",
    "start": "2292710",
    "end": "2299640"
  },
  {
    "text": "getting in and understanding all of the different kinds of databases they're all valuable and they all suck if you use",
    "start": "2299640",
    "end": "2307470"
  },
  {
    "start": "2307000",
    "end": "2385000"
  },
  {
    "text": "them in the right places everything will work well if you use them in the wrong places it will really suck operational",
    "start": "2307470",
    "end": "2315119"
  },
  {
    "text": "complexity needs to be taken into consideration when looking at this we do not just say that we're going to put in",
    "start": "2315119",
    "end": "2320250"
  },
  {
    "text": "a custom database for every single thing that you want to do but understand that you can put in a custom database for",
    "start": "2320250",
    "end": "2327480"
  },
  {
    "text": "everything that you want to do I normally in systems will see at least three models I'll normally see some kind",
    "start": "2327480",
    "end": "2333630"
  },
  {
    "text": "of key value store document store that represents data that's just being shown back up on screens",
    "start": "2333630",
    "end": "2339539"
  },
  {
    "text": "I want quick query access to this to be able to show it very quickly up tutorial user on a screen there's normally going",
    "start": "2339539",
    "end": "2346950"
  },
  {
    "text": "to be some type of searching inside of these systems and almost always there's",
    "start": "2346950",
    "end": "2352019"
  },
  {
    "text": "going to end up being some OLAP system that people use for reporting almost every system I see will end up with",
    "start": "2352019",
    "end": "2358349"
  },
  {
    "text": "about these three graphs are another really common one that we'll see start coming into the problem event processing",
    "start": "2358349",
    "end": "2364529"
  },
  {
    "text": "is another common one we'll start seeing in the problem but keep in mind that",
    "start": "2364529",
    "end": "2369809"
  },
  {
    "text": "there is two downfall of this which is operational complexity I am NOT telling everybody to go off and grab ten",
    "start": "2369809",
    "end": "2375509"
  },
  {
    "text": "databases and put them in production understand there are costs although to be fair the cost of running ten other",
    "start": "2375509",
    "end": "2381779"
  },
  {
    "text": "databases will be probably cheaper than one Oracle Isum now some takeaways just appending to a",
    "start": "2381779",
    "end": "2393320"
  },
  {
    "start": "2385000",
    "end": "2609000"
  },
  {
    "text": "journal is a really really good model to sit behind the writes inside of your",
    "start": "2393320",
    "end": "2399230"
  },
  {
    "text": "system this is what your database most likely does internally anyway it's just",
    "start": "2399230",
    "end": "2405680"
  },
  {
    "text": "writing to a transaction log and then it's internally going off this and updating its internal structures there's",
    "start": "2405680",
    "end": "2411560"
  },
  {
    "text": "absolutely nothing wrong with you just saying you know what I'm gonna do that and then I'm gonna give the chance for",
    "start": "2411560",
    "end": "2417410"
  },
  {
    "text": "other databases to read off of the same journal that I'm writing to absolutely nothing wrong with doing that and by the",
    "start": "2417410",
    "end": "2424340"
  },
  {
    "text": "way you can get this to be really really really fast handling tens of thousands",
    "start": "2424340",
    "end": "2430040"
  },
  {
    "text": "of transactions per second is absolutely no problem doing that it's relatively simple to reach and I'm not talking on",
    "start": "2430040",
    "end": "2436130"
  },
  {
    "text": "like fusion-io boards or something like that on a fusion-io board I've actually",
    "start": "2436130",
    "end": "2441320"
  },
  {
    "text": "seen them get up over a half-million",
    "start": "2441320",
    "end": "2445420"
  },
  {
    "text": "this transaction log can be events and this kind of brings us back to the idea",
    "start": "2447730",
    "end": "2452900"
  },
  {
    "text": "of event sourcing the general idea is my book of record is this log of events",
    "start": "2452900",
    "end": "2457940"
  },
  {
    "text": "that I'm writing my operation of a write is just to append an event to a log and then I'm considered done this append",
    "start": "2457940",
    "end": "2468830"
  },
  {
    "text": "only immutable data works really really well for a lot of systems how many of",
    "start": "2468830",
    "end": "2475040"
  },
  {
    "text": "you have needed to communicate something to your UI before as well could my UI",
    "start": "2475040",
    "end": "2481910"
  },
  {
    "text": "also listen to one of these atom feeds that we were representing events over them and put update saying by the way",
    "start": "2481910",
    "end": "2487100"
  },
  {
    "text": "this person's also looking at this data or updated it be relatively easy to do and having that event model makes it",
    "start": "2487100",
    "end": "2495230"
  },
  {
    "text": "relatively simple CQRS is one way of finding different models so saying I'm",
    "start": "2495230",
    "end": "2501860"
  },
  {
    "text": "gonna have my rights on this side of my reads on the other side but it's not the only form of being able to segregate out",
    "start": "2501860",
    "end": "2509060"
  },
  {
    "text": "models and if there's one single thing I want everybody to walk away with it's that",
    "start": "2509060",
    "end": "2517160"
  },
  {
    "text": "every database in the in the world it sucks every single one of them it doesn't matter what the model of it is",
    "start": "2517160",
    "end": "2522920"
  },
  {
    "text": "there are problems that it will suck at neo4j I love neo4j try doing a set",
    "start": "2522920",
    "end": "2528910"
  },
  {
    "text": "operation in neo4j and you will realize that it sucks I love sequel try building a graph in",
    "start": "2528910",
    "end": "2538940"
  },
  {
    "text": "sequel and you'll realize that sequel sucks I love events tour try doing a query",
    "start": "2538940",
    "end": "2547040"
  },
  {
    "text": "like I'd like to see all the customers whose first name starts with the letter G and you realized that it sucks why",
    "start": "2547040",
    "end": "2553760"
  },
  {
    "text": "because we're gonna have to replay every event inside of your system from all time in order to give you an answer to that question it's an absolutely",
    "start": "2553760",
    "end": "2561050"
  },
  {
    "text": "terrible terrible database you should never use any of them now understand the",
    "start": "2561050",
    "end": "2567230"
  },
  {
    "text": "different models go out and start checking out all these different databases what are they good at what are they bad at object databases are not",
    "start": "2567230",
    "end": "2574310"
  },
  {
    "text": "crap they have their uses and there's certain types of problems that all of",
    "start": "2574310",
    "end": "2579350"
  },
  {
    "text": "these systems will do extraordinarily well on and there's certain types of problems they will all do extraordinarily poorly on and remember",
    "start": "2579350",
    "end": "2586670"
  },
  {
    "text": "the other side of this with operational complexity you don't want to just bring in ten databases and say yeah we're",
    "start": "2586670",
    "end": "2593060"
  },
  {
    "text": "we're done there are trade-offs to this as well now with that I will thank you",
    "start": "2593060",
    "end": "2601490"
  },
  {
    "text": "for coming out",
    "start": "2601490",
    "end": "2604540"
  }
]