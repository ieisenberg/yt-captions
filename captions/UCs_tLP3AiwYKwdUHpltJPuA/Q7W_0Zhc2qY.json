[
  {
    "text": "all right good morning so i'm david leebs from oracle labs and",
    "start": "240",
    "end": "6960"
  },
  {
    "text": "uh i'll be talking about uh some stuff that has nothing to do with any oracle product",
    "start": "6960",
    "end": "14639"
  },
  {
    "text": "present or future so we're going to start off with some",
    "start": "14639",
    "end": "20000"
  },
  {
    "text": "pseudo neuroscience and metaphor and the underlying theme is is really",
    "start": "20000",
    "end": "27840"
  },
  {
    "text": "about our propensity to get stuck in a groove or i'll even be less polite get stuck in a",
    "start": "27840",
    "end": "33760"
  },
  {
    "text": "rut and that's really about an idea called path dependence",
    "start": "33760",
    "end": "39120"
  },
  {
    "text": "which is a an idea from economics about how you'll start off with some piece of technology and",
    "start": "39120",
    "end": "46160"
  },
  {
    "text": "the early decisions you make will be with you forever hundreds and hundreds of years later",
    "start": "46160",
    "end": "52879"
  },
  {
    "text": "they will be influencing the decisions that are made uh",
    "start": "52879",
    "end": "58480"
  },
  {
    "text": "to go further we're gonna then sort of look at how i as a human being was wired as a",
    "start": "58480",
    "end": "65198"
  },
  {
    "text": "child and then we're gonna dive into uh one of my favorite topics on earth array programming",
    "start": "65199",
    "end": "73280"
  },
  {
    "text": "it's beautiful and it's something i think it's well worth your time to invest in",
    "start": "73280",
    "end": "79600"
  },
  {
    "text": "and then we're going to look at some futuristic ideas for what kind of interfaces we might put",
    "start": "79600",
    "end": "86000"
  },
  {
    "text": "on array programming in the future",
    "start": "86000",
    "end": "90560"
  },
  {
    "text": "so i am not a real neuroscientist but i did play one once at nasa in the early",
    "start": "91119",
    "end": "98840"
  },
  {
    "text": "1970s and what i'm going to talk about isn't real",
    "start": "98840",
    "end": "105920"
  },
  {
    "text": "it's it's not how we really work so it's really going to be metaphor so let's look at what happens",
    "start": "105920",
    "end": "113520"
  },
  {
    "text": "when water falls from the sky and hits a little piece of ground it makes a dent",
    "start": "113520",
    "end": "119759"
  },
  {
    "text": "and that little vent now is a place the next time the water",
    "start": "119759",
    "end": "125920"
  },
  {
    "text": "hits it gets a little bit bigger and water is very much an optimizer",
    "start": "125920",
    "end": "131840"
  },
  {
    "text": "and before long it you know turns into a little bit of a groove and the",
    "start": "131840",
    "end": "137440"
  },
  {
    "text": "you know the groove but becomes a rut and over time water carves amazing deep",
    "start": "137440",
    "end": "144560"
  },
  {
    "text": "canyons so i maintain we're like that too",
    "start": "144560",
    "end": "152400"
  },
  {
    "text": "we're very influenced by what we first learned and we practice things that that we're drawn to",
    "start": "152400",
    "end": "161200"
  },
  {
    "text": "so we we lean towards that what we like and our first experiences have a huge",
    "start": "161200",
    "end": "168160"
  },
  {
    "text": "impact on that so as time goes on we just get into",
    "start": "168160",
    "end": "175440"
  },
  {
    "text": "a groove so let's play with this idea for a",
    "start": "175440",
    "end": "180640"
  },
  {
    "text": "second this is one of my favorite optical illusions of of all times it's",
    "start": "180640",
    "end": "186239"
  },
  {
    "text": "not really an optical illusion but what do you see i'll give you a second",
    "start": "186239",
    "end": "193120"
  },
  {
    "text": "all right can you see the cow",
    "start": "195920",
    "end": "200879"
  },
  {
    "text": "anybody there you go it's happening that little drops are",
    "start": "203440",
    "end": "210840"
  },
  {
    "text": "hitting maybe that little outline around its face will help",
    "start": "210840",
    "end": "217519"
  },
  {
    "text": "if you can't see it that's okay see me afterwards and i'll crank it up",
    "start": "217519",
    "end": "223360"
  },
  {
    "text": "and we'll give you the experience anyway those of you who are able to see the cow",
    "start": "223360",
    "end": "230400"
  },
  {
    "text": "can you not see the cow and that's the important part once you",
    "start": "230400",
    "end": "236480"
  },
  {
    "text": "have seen that cow you will never be able to not see the cow",
    "start": "236480",
    "end": "242239"
  },
  {
    "text": "and ultimate we find ourselves at the bottom of canyons loaded down with all of our stuff",
    "start": "242480",
    "end": "250400"
  },
  {
    "text": "slogging through the water with our friends",
    "start": "250400",
    "end": "255840"
  },
  {
    "text": "we might well find ourselves at the bottom of a for loop now to most programmers this code for",
    "start": "258320",
    "end": "265199"
  },
  {
    "text": "matrix multiply it looks normal",
    "start": "265199",
    "end": "270400"
  },
  {
    "text": "but to me it you know i see a canyon being dyslexic rotations",
    "start": "270479",
    "end": "277919"
  },
  {
    "text": "don't matter so it's important to remember to to",
    "start": "277919",
    "end": "283360"
  },
  {
    "text": "climb out of these canyons that we're in from time to time even though it's like difficult because",
    "start": "283360",
    "end": "289840"
  },
  {
    "text": "there's some things out there that are of just absolutely great beauty",
    "start": "289840",
    "end": "295600"
  },
  {
    "text": "you have to go and and look into some of the other canyons that are there",
    "start": "295600",
    "end": "301280"
  },
  {
    "text": "so okay truth in advertising let's look at how i was wired as a child",
    "start": "301840",
    "end": "308960"
  },
  {
    "text": "because this is going to have something to do with where the whole thing goes",
    "start": "308960",
    "end": "316400"
  },
  {
    "text": "i had a a very strange toy i played with as a child i played with clothes",
    "start": "317600",
    "end": "322639"
  },
  {
    "text": "pins and i would clip them together into structures and then i would throw",
    "start": "322639",
    "end": "328880"
  },
  {
    "text": "more clothes pins into those structures and i'd try and set off a chain reaction and it wouldn't happen",
    "start": "328880",
    "end": "336160"
  },
  {
    "text": "every time sometimes the magic would work sometimes it wouldn't",
    "start": "336160",
    "end": "341918"
  },
  {
    "text": "it was an obsession i did it like every day and at the same time i",
    "start": "342880",
    "end": "348880"
  },
  {
    "text": "was doing it i was sitting on the floor in front of a television set hooked into sort of the information",
    "start": "348880",
    "end": "355680"
  },
  {
    "text": "stream that was just coming in i you know sometimes it was interesting",
    "start": "355680",
    "end": "362160"
  },
  {
    "text": "sometimes it wasn't but i was still there trying to set off those chain reactions",
    "start": "362160",
    "end": "369440"
  },
  {
    "text": "i really really liked some of the stuff i saw on television and it it's just like wow i think i want to be",
    "start": "371840",
    "end": "378319"
  },
  {
    "text": "a scientist right 1950s right why well because scientists are the ones",
    "start": "378319",
    "end": "385520"
  },
  {
    "text": "that get to fight monsters obviously you know i like science fiction and",
    "start": "385520",
    "end": "391039"
  },
  {
    "text": "one day i had this amazing experience where a real scientist came on tv and",
    "start": "391039",
    "end": "397280"
  },
  {
    "text": "started explaining how uh you know nuclear chain reactions",
    "start": "397280",
    "end": "402560"
  },
  {
    "text": "worked and explained how like you know one slow-moving neutron would like go into a",
    "start": "402560",
    "end": "408880"
  },
  {
    "text": "you know uh atom of uranium what the isotope 235 and",
    "start": "408880",
    "end": "414479"
  },
  {
    "text": "two it would split and two more neutrons would come out this is just what i'd been doing with my clothes",
    "start": "414479",
    "end": "419599"
  },
  {
    "text": "pins all along so i really got it it was an amazing",
    "start": "419599",
    "end": "424720"
  },
  {
    "text": "experience to see that which i had been doing sort of connected to something in the real world",
    "start": "424720",
    "end": "432240"
  },
  {
    "text": "anyway you know years go by and finally fortunately i got i got drawn to",
    "start": "432400",
    "end": "439360"
  },
  {
    "text": "mathematics uh anybody recognize that person down in the the bottom",
    "start": "439360",
    "end": "446560"
  },
  {
    "text": "oliver heavy side he's a person that was known for coming up with a",
    "start": "447199",
    "end": "452720"
  },
  {
    "text": "the notation that we use for vector calculus and it's it's pretty much if you do",
    "start": "452720",
    "end": "458319"
  },
  {
    "text": "physics it's your notation anyway so i was clearly neglected they",
    "start": "458319",
    "end": "464800"
  },
  {
    "text": "didn't give me you know proper toys to play with and steer me into you know more meaningful you know",
    "start": "464800",
    "end": "471039"
  },
  {
    "text": "directions as a child but so what happened to me well",
    "start": "471039",
    "end": "476479"
  },
  {
    "text": "strangely i find myself doing today what i did then i sit in",
    "start": "476840",
    "end": "482639"
  },
  {
    "text": "front of a 30 inch monitor hooked into a stream of information you know coming in from the internet all",
    "start": "482639",
    "end": "489360"
  },
  {
    "text": "day and i clipped together abstractions and get to a point where",
    "start": "489360",
    "end": "495759"
  },
  {
    "text": "i think it's ready and i'll push the plunger or throw something in and see if that",
    "start": "495759",
    "end": "500800"
  },
  {
    "text": "chain reaction sets in and i get the effect i want",
    "start": "500800",
    "end": "505840"
  },
  {
    "text": "lucky for me i got to have the good fortune of being the person uh",
    "start": "505840",
    "end": "512159"
  },
  {
    "text": "involved in taking small talk 80 out of xerox park and turning it into a real product",
    "start": "512159",
    "end": "520640"
  },
  {
    "text": "so just one more data point here's my oldest child what he was doing",
    "start": "520640",
    "end": "528160"
  },
  {
    "text": "as a as a baby and what he's doing today",
    "start": "528160",
    "end": "533440"
  },
  {
    "text": "you notice uh there's a pattern here all right so let's let's get back to",
    "start": "533440",
    "end": "540800"
  },
  {
    "text": "those grooves now that uh i've told you how i'm wired and let's look at something really beautiful",
    "start": "540800",
    "end": "549680"
  },
  {
    "text": "get some water to prepare myself",
    "start": "549680",
    "end": "553760"
  },
  {
    "text": "so back in the 1950s at the time i was playing with close",
    "start": "558240",
    "end": "563839"
  },
  {
    "text": "pins ken iverson was playing with notation",
    "start": "563839",
    "end": "569279"
  },
  {
    "text": "he was not satisfied with mathematical notation he found it filled with inconsistencies and",
    "start": "569279",
    "end": "576800"
  },
  {
    "text": "he came up with a much better notation and this was at the really at the dawn of the the computer",
    "start": "576800",
    "end": "582720"
  },
  {
    "text": "age he wrote a a wonderful book we just celebrated the",
    "start": "582720",
    "end": "587839"
  },
  {
    "text": "50th anniversary of that book and he was at harvard at the time he was",
    "start": "587839",
    "end": "593360"
  },
  {
    "text": "doing this and like i think sort of lucky for us he didn't get tenure you know in his uh person he was working",
    "start": "593360",
    "end": "600720"
  },
  {
    "text": "with there was like well you haven't really done that much you only wrote that that one little book but it was quite a",
    "start": "600720",
    "end": "608000"
  },
  {
    "text": "quite a book and so anyway he went off to uh ibm and with aiden faulk",
    "start": "608000",
    "end": "613200"
  },
  {
    "text": "off he they invented the computer language apl",
    "start": "613200",
    "end": "619120"
  },
  {
    "text": "so a sort of a quick overview it had hieroglyphic symbols it had its",
    "start": "619120",
    "end": "627120"
  },
  {
    "text": "own selectric uh golf ball where they they put their own glyphs on it it had its own keyboard",
    "start": "627120",
    "end": "635519"
  },
  {
    "text": "he didn't like precedence rules which are sort of forced on us by algebra teachers so that",
    "start": "635519",
    "end": "642079"
  },
  {
    "text": "you don't have to write as much when you talk about polynomials",
    "start": "642079",
    "end": "647519"
  },
  {
    "text": "it appears as though the evaluation is right to left there's a notion of a workspace or like",
    "start": "647519",
    "end": "654880"
  },
  {
    "text": "if you'd ever done small talk or something like that it's like you snapshot an environment that's filled with your data and your variables",
    "start": "654880",
    "end": "661279"
  },
  {
    "text": "in your code and when you come back later you just take up where you left off",
    "start": "661279",
    "end": "666640"
  },
  {
    "text": "and it operated on multi-dimensional arrays as its main",
    "start": "666640",
    "end": "672000"
  },
  {
    "text": "data type and so it's it's functions are defined on scalars uh you",
    "start": "672000",
    "end": "678959"
  },
  {
    "text": "have operators that are defined on on functions so operators take functions as arguments",
    "start": "678959",
    "end": "685920"
  },
  {
    "text": "and make new functions and this all then extends to arrays in",
    "start": "685920",
    "end": "691440"
  },
  {
    "text": "four different ways element by element you can do reductions across",
    "start": "691440",
    "end": "699440"
  },
  {
    "text": "arrays of any dimension and you you tend to use inner and outer product as as building blocks and",
    "start": "699440",
    "end": "706880"
  },
  {
    "text": "the people that were really drawn to this language were the applied math crowd economists",
    "start": "706880",
    "end": "714800"
  },
  {
    "text": "chemists physicists people that that had problems to solve so they would write",
    "start": "714800",
    "end": "720480"
  },
  {
    "text": "they would write code they would write programs but it was always in the process of solving a problem they",
    "start": "720480",
    "end": "726639"
  },
  {
    "text": "wanted an answer to a question they were exploring a space or maybe they were designing",
    "start": "726639",
    "end": "732800"
  },
  {
    "text": "algorithms so it's it's it's like not necessarily the same kind of programming",
    "start": "732800",
    "end": "739040"
  },
  {
    "text": "we normally do but it's in sort of that area of technical computing",
    "start": "739040",
    "end": "745200"
  },
  {
    "text": "so apl has a really really great idea",
    "start": "745200",
    "end": "751839"
  },
  {
    "text": "in that your data is multi-dimensional and you can take any multi-dimensional",
    "start": "751839",
    "end": "759360"
  },
  {
    "text": "uh you know be it like a a number as zero dimensions you know a list is",
    "start": "759360",
    "end": "767600"
  },
  {
    "text": "one dimension a matrix or a you know a plane it's two and you just",
    "start": "767600",
    "end": "772959"
  },
  {
    "text": "extend it all the way up and you can look at those uh in multiple ways kind of like",
    "start": "772959",
    "end": "780000"
  },
  {
    "text": "looking at a cow uh you can think of it at at the bottom you",
    "start": "780000",
    "end": "787440"
  },
  {
    "text": "have zero cells which hold scalars or uh an atom",
    "start": "787440",
    "end": "792959"
  },
  {
    "text": "uh and then you can have rows of atoms or you can you can look at the frame of it as saying well i've i've",
    "start": "792959",
    "end": "800160"
  },
  {
    "text": "got a uh you know three three by four uh frame",
    "start": "800160",
    "end": "808160"
  },
  {
    "text": "of rows or a uh one one list of",
    "start": "808160",
    "end": "815600"
  },
  {
    "text": "three-dimensional uh arrays so you can look at it anyway and",
    "start": "815600",
    "end": "822720"
  },
  {
    "text": "because functions themselves have rank right the the the idea of rank",
    "start": "822720",
    "end": "829680"
  },
  {
    "text": "permeates apl you you have the ability then to write a",
    "start": "829680",
    "end": "836880"
  },
  {
    "text": "function and say i'm only interested in numbers or i'm only interested in rows and then",
    "start": "836880",
    "end": "843680"
  },
  {
    "text": "apl will automatically take something of a higher dimension and figure out",
    "start": "843680",
    "end": "849760"
  },
  {
    "text": "what to do call each appropriately size thing and assemble the result",
    "start": "849760",
    "end": "854880"
  },
  {
    "text": "into a proper frame and this is what gives you the ability to program without having to write loops",
    "start": "854880",
    "end": "863199"
  },
  {
    "text": "the roots the the loops are implicit in how you set your your data up and the",
    "start": "863199",
    "end": "869440"
  },
  {
    "text": "way you write your functions so a little bit of information",
    "start": "869440",
    "end": "877839"
  },
  {
    "text": "uh from from the history apl had reasonably good performance",
    "start": "877839",
    "end": "885839"
  },
  {
    "text": "the uh first implementation that they did at ibm uh completely beat",
    "start": "888399",
    "end": "896480"
  },
  {
    "text": "the 360 attempts at like time sharing in in that",
    "start": "896480",
    "end": "903760"
  },
  {
    "text": "because they paid attention to the movement of",
    "start": "903760",
    "end": "908880"
  },
  {
    "text": "the disc head in other words the the other the other groups doing things at the",
    "start": "908880",
    "end": "914000"
  },
  {
    "text": "time let the disc head jump all over the the disc and the apl guys were careful to",
    "start": "914000",
    "end": "922079"
  },
  {
    "text": "do their time sharing by scheduling it based on minimizing the movement of the disk head",
    "start": "922079",
    "end": "930399"
  },
  {
    "text": "so they they outperformed it hugely and it it it went on to become very very popular",
    "start": "930399",
    "end": "937440"
  },
  {
    "text": "so here's some performance numbers back from those you know days in the uh",
    "start": "937440",
    "end": "944480"
  },
  {
    "text": "point in time when i you know uh ibm was selling apl to everybody all over the world",
    "start": "944480",
    "end": "951839"
  },
  {
    "text": "there'd be a little bit of setup time for an operation like a couple of you know milliseconds and",
    "start": "951839",
    "end": "958079"
  },
  {
    "text": "then you were operating on big homogeneous",
    "start": "958079",
    "end": "963199"
  },
  {
    "text": "structures and once you've you know gone through that little bit of setup then it would just crank through the through the rest of it",
    "start": "963199",
    "end": "970240"
  },
  {
    "text": "so if you had a a thousand elements the setup time and interpretation was negligible",
    "start": "970240",
    "end": "977199"
  },
  {
    "text": "and the rest of the time was just executing really really fast machine code and if",
    "start": "977199",
    "end": "982399"
  },
  {
    "text": "you had like less than a thousand element array well it didn't matter",
    "start": "982399",
    "end": "987839"
  },
  {
    "text": "you know it you know 10 element array you won't even notice",
    "start": "987839",
    "end": "994320"
  },
  {
    "text": "what's interesting is how well the modern implementations perform on an",
    "start": "994800",
    "end": "1001120"
  },
  {
    "text": "iphone it's just totally amazing how",
    "start": "1001120",
    "end": "1006240"
  },
  {
    "text": "fast it is today on on little eye devices",
    "start": "1006240",
    "end": "1011839"
  },
  {
    "text": "so whatever happened to apl well it grew rapidly in the 1970s and in the 1980s",
    "start": "1012000",
    "end": "1019120"
  },
  {
    "text": "it started decaying off because pcs were coming on workstations were coming on and it sort",
    "start": "1019120",
    "end": "1026400"
  },
  {
    "text": "of died out we've got modern descendants it's still used",
    "start": "1026400",
    "end": "1032000"
  },
  {
    "text": "quite a lot in the financial community it gives them a big edge and there's people out there",
    "start": "1032000",
    "end": "1038720"
  },
  {
    "text": "writing uh high frequency trading systems in apl descendants",
    "start": "1038720",
    "end": "1046000"
  },
  {
    "text": "it was very influential influenced fortran 90 matlab are it's the ideas in microsoft",
    "start": "1046000",
    "end": "1054320"
  },
  {
    "text": "accelerator uh intel's array building blocks mathematica",
    "start": "1054320",
    "end": "1059919"
  },
  {
    "text": "anyway so let's look at let's look at a little of it the the version of apl that i",
    "start": "1059919",
    "end": "1068559"
  },
  {
    "text": "like that is my favorite is a is a version called j which is uh what",
    "start": "1068559",
    "end": "1074640"
  },
  {
    "text": "ken iverson did after i don't know when he when when he was about 30 years",
    "start": "1074640",
    "end": "1080000"
  },
  {
    "text": "in he decided to redo the whole thing he said we made some problems early on and",
    "start": "1080000",
    "end": "1086000"
  },
  {
    "text": "i'm just going to start with a with a clean slate and he made a version that's ascii based",
    "start": "1086000",
    "end": "1092480"
  },
  {
    "text": "and doesn't require a fancy strange keyboard filled with greek",
    "start": "1092480",
    "end": "1098400"
  },
  {
    "text": "letters anyway here's my 10 by three working subset",
    "start": "1098400",
    "end": "1103840"
  },
  {
    "text": "of r which is mostly just some statistical functions and the fact that i can put them all",
    "start": "1103840",
    "end": "1112559"
  },
  {
    "text": "on that one grid and get my head around the whole thing at",
    "start": "1112559",
    "end": "1118559"
  },
  {
    "text": "one glance without having to scroll is something i find very appealing",
    "start": "1118559",
    "end": "1124720"
  },
  {
    "text": "to you it it probably looks like line noise",
    "start": "1124720",
    "end": "1129760"
  },
  {
    "text": "so anyway these array languages can be very very fast",
    "start": "1130240",
    "end": "1136960"
  },
  {
    "text": "there's lots of experience going back to the 1970s",
    "start": "1136960",
    "end": "1142559"
  },
  {
    "text": "on how to do really really efficient uh implementations of array processing",
    "start": "1142559",
    "end": "1149440"
  },
  {
    "text": "by holding off uh you know jumping in and executing code",
    "start": "1149440",
    "end": "1155360"
  },
  {
    "text": "too quickly in other words rather than uh execute you build a little bit of an",
    "start": "1155360",
    "end": "1160400"
  },
  {
    "text": "abstract syntax tree and look at it a little bit and say well gee they really set up a pipeline here",
    "start": "1160400",
    "end": "1167360"
  },
  {
    "text": "we know how to do this much faster we're not going to like make a whole bunch of intermediate arrays there's no reason to",
    "start": "1167360",
    "end": "1173039"
  },
  {
    "text": "do that so there's there's a lot of experience in optimizing these languages",
    "start": "1173039",
    "end": "1181760"
  },
  {
    "text": "in the 1990s when people started getting more serious about",
    "start": "1184400",
    "end": "1190000"
  },
  {
    "text": "parallelism they they noticed that most of the primitives were just",
    "start": "1190000",
    "end": "1195200"
  },
  {
    "text": "naturally parallel",
    "start": "1195200",
    "end": "1198639"
  },
  {
    "text": "and because of the way apl works people would tend to",
    "start": "1201120",
    "end": "1206640"
  },
  {
    "text": "write 40 to 50 percent of their code would just be naturally parallel and this is one of",
    "start": "1206640",
    "end": "1213360"
  },
  {
    "text": "the things that i i think is what's interesting about why we would want to look at an",
    "start": "1213360",
    "end": "1220880"
  },
  {
    "text": "old language that isn't you know isn't as mainstream as it as it once was",
    "start": "1220880",
    "end": "1226880"
  },
  {
    "text": "it's a good way to train our thinking for doing data parallel computation",
    "start": "1226880",
    "end": "1235840"
  },
  {
    "text": "so you tend to program by using big building blocks",
    "start": "1236159",
    "end": "1243919"
  },
  {
    "text": "and putting them together with sort of let's say higher order functions and you don't entangle a bunch of",
    "start": "1243919",
    "end": "1250320"
  },
  {
    "text": "information in loops it's like when we write when we write loops we have the the best of intention and we",
    "start": "1250320",
    "end": "1257679"
  },
  {
    "text": "try and be efficient we try and make them do more things at once and what we're really doing is",
    "start": "1257679",
    "end": "1263120"
  },
  {
    "text": "getting in the way of the loop fusion machinery and we're actually much better off",
    "start": "1263120",
    "end": "1271039"
  },
  {
    "text": "not thinking that we know how to optimize code and letting the compiler do it in",
    "start": "1271039",
    "end": "1278159"
  },
  {
    "text": "other words much of our intuition is wrong especially in light of memory hierarchy issues",
    "start": "1278159",
    "end": "1286000"
  },
  {
    "text": "so apl and its uh descendants encourage wonderful",
    "start": "1286960",
    "end": "1294720"
  },
  {
    "text": "loopless you know thinking where you tend not to you tend not to use uh accumulators",
    "start": "1294720",
    "end": "1301520"
  },
  {
    "text": "in loops and so here's a really really beautiful piece of apl and i'm going to now",
    "start": "1301520",
    "end": "1309840"
  },
  {
    "text": "give you uh some animations to give you a taste for how to do this sort of",
    "start": "1309840",
    "end": "1316559"
  },
  {
    "text": "thinking and then we're going to come back to this function once",
    "start": "1316559",
    "end": "1321600"
  },
  {
    "text": "once i've introduced a little bit more",
    "start": "1321600",
    "end": "1325440"
  },
  {
    "text": "so let's so okay let's let's start off with just",
    "start": "1326799",
    "end": "1333760"
  },
  {
    "text": "simple arithmetic and adding three plus four",
    "start": "1333760",
    "end": "1338240"
  },
  {
    "text": "so it'll take the element to the right the element to the left and",
    "start": "1340000",
    "end": "1345760"
  },
  {
    "text": "compute and this animation here is sort of now i'm starting to show what goes on in my",
    "start": "1345760",
    "end": "1353600"
  },
  {
    "text": "head when i think in terms of array programming or what i call array",
    "start": "1353600",
    "end": "1360240"
  },
  {
    "text": "thinking so the sequence of animations is something that i'm i'm kind of",
    "start": "1360240",
    "end": "1366240"
  },
  {
    "text": "designing in hopes of someday having it on some little device like uh you know a sunspot with a",
    "start": "1366240",
    "end": "1374880"
  },
  {
    "text": "cheap e-ink led and uh some simple uh you know",
    "start": "1374880",
    "end": "1381679"
  },
  {
    "text": "near field you know maybe some cheap near-field hall effect sensors so you would know what was to",
    "start": "1381679",
    "end": "1387520"
  },
  {
    "text": "the right what was to the left because my dream is to actually pull it off the computer and get back",
    "start": "1387520",
    "end": "1393280"
  },
  {
    "text": "down on the floor like i did with my clothes pins",
    "start": "1393280",
    "end": "1397840"
  },
  {
    "text": "so watch it as it executes this time and you'll sort of see the the right to left evaluation",
    "start": "1399600",
    "end": "1408159"
  },
  {
    "text": "computed that so once you know once you understand adding",
    "start": "1410799",
    "end": "1417679"
  },
  {
    "text": "scalars well there's nothing there's nothing magic it'll extend in the same way to arrays",
    "start": "1417679",
    "end": "1431039"
  },
  {
    "text": "and you can mix scalars with arrays",
    "start": "1431039",
    "end": "1435360"
  },
  {
    "text": "so all of uh these functions work the same way",
    "start": "1441440",
    "end": "1448320"
  },
  {
    "text": "and these are these are typically the the building blocks that that you normally use and",
    "start": "1448320",
    "end": "1454480"
  },
  {
    "text": "everything works the same way so uh next stylistically",
    "start": "1454480",
    "end": "1461279"
  },
  {
    "text": "you tend to have interesting functions that take can take scalars as arguments and",
    "start": "1461279",
    "end": "1467440"
  },
  {
    "text": "make uh arrays out of them so this is uh you know a function called integers it makes the",
    "start": "1467440",
    "end": "1474640"
  },
  {
    "text": "integers from like uh you know the first four integers zero through four",
    "start": "1474640",
    "end": "1479679"
  },
  {
    "text": "and it's often just called iota for the for the character",
    "start": "1479679",
    "end": "1487840"
  },
  {
    "text": "and you can of course give iota an array and it'll generate for you",
    "start": "1492400",
    "end": "1500000"
  },
  {
    "text": "a multi-dimensional array so now what do you do with the rays",
    "start": "1500000",
    "end": "1507120"
  },
  {
    "text": "well you sculpt with them so here's uh let's just",
    "start": "1507120",
    "end": "1514159"
  },
  {
    "text": "let's just generate one and then reshape it into something else",
    "start": "1514159",
    "end": "1520400"
  },
  {
    "text": "right so vector vector n and matrix out",
    "start": "1526080",
    "end": "1533360"
  },
  {
    "text": "now the real power comes in when functions themselves become data and you",
    "start": "1534320",
    "end": "1541679"
  },
  {
    "text": "have uh operators or in in like the j dialect we we call",
    "start": "1541679",
    "end": "1548320"
  },
  {
    "text": "functions verbs and we call operators adverbs",
    "start": "1548320",
    "end": "1553679"
  },
  {
    "text": "and anybody can we guess what what we call the numeric data",
    "start": "1553679",
    "end": "1561600"
  },
  {
    "text": "nouns okay so uh that slash is a",
    "start": "1561600",
    "end": "1568480"
  },
  {
    "text": "uh adverb that is going to take take plus and turn it into",
    "start": "1568480",
    "end": "1575600"
  },
  {
    "text": "well we'll watch it take that and turn it into big sigma",
    "start": "1575840",
    "end": "1581039"
  },
  {
    "text": "and we'll sum the whole thing up",
    "start": "1581039",
    "end": "1585840"
  },
  {
    "text": "now my favorite of the operators is a prefix scan",
    "start": "1588400",
    "end": "1595600"
  },
  {
    "text": "so here we here we've got a chain of operators going",
    "start": "1596400",
    "end": "1603278"
  },
  {
    "text": "so generate our list make big sigma now we'll apply that to",
    "start": "1603919",
    "end": "1610799"
  },
  {
    "text": "every prefix of the array",
    "start": "1610799",
    "end": "1615039"
  },
  {
    "text": "and so what we get is a running sum",
    "start": "1617520",
    "end": "1622559"
  },
  {
    "text": "now this can be very useful",
    "start": "1624400",
    "end": "1628720"
  },
  {
    "text": "so the way you can use this now it's like we're going to write a",
    "start": "1629840",
    "end": "1635679"
  },
  {
    "text": "function called expand right so what we want to do is have an",
    "start": "1635679",
    "end": "1640720"
  },
  {
    "text": "array and we want to put zeros in uh all the place you know after all",
    "start": "1640720",
    "end": "1647919"
  },
  {
    "text": "the places where there's a one and where there's a zero we're not going to do anything different so",
    "start": "1647919",
    "end": "1654799"
  },
  {
    "text": "to to do that we'll use that prefix sum and when you when you do that on something boolean",
    "start": "1654799",
    "end": "1661600"
  },
  {
    "text": "you get a nice walk of the indices",
    "start": "1661600",
    "end": "1667120"
  },
  {
    "text": "and then i'll multiply it by the boolean again right so do that and what that",
    "start": "1667120",
    "end": "1674080"
  },
  {
    "text": "that does is you know it uses one is the identity element and preserves those indices",
    "start": "1674080",
    "end": "1682240"
  },
  {
    "text": "and the zeros annihilate just like you want so what i wind up",
    "start": "1682240",
    "end": "1688000"
  },
  {
    "text": "with then is this this nice thing with the zeros",
    "start": "1688000",
    "end": "1693120"
  },
  {
    "text": "where i want to do my expanding so here's the same expression together this is an",
    "start": "1693120",
    "end": "1698480"
  },
  {
    "text": "indexing function and i'm going to concatenate a 0 onto my array and when i",
    "start": "1698480",
    "end": "1705360"
  },
  {
    "text": "index into it out pops my values there with the zeros where i",
    "start": "1705360",
    "end": "1711520"
  },
  {
    "text": "want them and so that's that's how you use prefix prefix scan and prefix scan is very nice because",
    "start": "1711520",
    "end": "1719760"
  },
  {
    "text": "that's something that we know how to do in parallel and that's built into gpus and so if you start getting into",
    "start": "1719760",
    "end": "1727840"
  },
  {
    "text": "gpu programming you use prefix scans all the time",
    "start": "1727840",
    "end": "1733600"
  },
  {
    "text": "okay the other big function that gets gets used a lot is",
    "start": "1734080",
    "end": "1739840"
  },
  {
    "text": "outer product and what that does is it takes every zero cell on the right and",
    "start": "1739840",
    "end": "1748240"
  },
  {
    "text": "uh uses the operation that you pass in with the uh row",
    "start": "1748240",
    "end": "1754960"
  },
  {
    "text": "on the right so in other words we'll we'll take one well let's just let's just let it run",
    "start": "1754960",
    "end": "1760000"
  },
  {
    "text": "it's easier to watch it",
    "start": "1760000",
    "end": "1767600"
  },
  {
    "text": "there so we basic basically we start with you know one-dimensional things and we",
    "start": "1767600",
    "end": "1773360"
  },
  {
    "text": "lift the dimensionality to to two dimensions and then the other",
    "start": "1773360",
    "end": "1780000"
  },
  {
    "text": "interesting operation is compression so on the on the left",
    "start": "1780000",
    "end": "1787600"
  },
  {
    "text": "you have uh booleans and on the right you have some data and",
    "start": "1787600",
    "end": "1794320"
  },
  {
    "text": "a 1 will select the element and a 0 suppresses it",
    "start": "1794320",
    "end": "1800398"
  },
  {
    "text": "right so here's an example you you know uh take the you know take the",
    "start": "1803440",
    "end": "1810000"
  },
  {
    "text": "modulus of of each number pick the ones that were equal to zero resulting in a boolean",
    "start": "1810000",
    "end": "1817840"
  },
  {
    "text": "run that through compression and out pops your data",
    "start": "1817840",
    "end": "1823600"
  },
  {
    "text": "but compression is really copy that's why in this and by the way the the the",
    "start": "1823600",
    "end": "1830000"
  },
  {
    "text": "symbols that i'm using uh it's my own notation i'm i'm making",
    "start": "1830000",
    "end": "1835760"
  },
  {
    "text": "it up so it we don't get bogged down in in a real language",
    "start": "1835760",
    "end": "1841120"
  },
  {
    "text": "so compression is really copy uh because the the the number that i give it is how",
    "start": "1841120",
    "end": "1846559"
  },
  {
    "text": "many copies of it we want so zero is convenient way of saying i want",
    "start": "1846559",
    "end": "1851679"
  },
  {
    "text": "no copies",
    "start": "1851679",
    "end": "1854398"
  },
  {
    "text": "all right now we're ready to go back to that example",
    "start": "1861200",
    "end": "1867200"
  },
  {
    "text": "and understand what it it does it's it's one of the things that i think is one of the",
    "start": "1867200",
    "end": "1873120"
  },
  {
    "text": "prettiest pieces of apl code and you're prepared to understand",
    "start": "1873120",
    "end": "1878720"
  },
  {
    "text": "it as i walk you through it what we're going to do is like figure",
    "start": "1878720",
    "end": "1885600"
  },
  {
    "text": "figure out like the primes in the numbers up to up through",
    "start": "1885600",
    "end": "1890840"
  },
  {
    "text": "15. you know just a nice small number so okay",
    "start": "1890840",
    "end": "1896480"
  },
  {
    "text": "we're used to this let's generate let's generate the first 15",
    "start": "1896480",
    "end": "1904799"
  },
  {
    "text": "integers we'll add one to each of them",
    "start": "1904840",
    "end": "1911360"
  },
  {
    "text": "we'll drop the first one because one isn't interesting to us since we're we're hunting primes",
    "start": "1912480",
    "end": "1918799"
  },
  {
    "text": "and i'm going to assign that to a variable r now i apologize for using a variable but",
    "start": "1918799",
    "end": "1925440"
  },
  {
    "text": "uh i could do this without the variable but it would drag in so much more detail",
    "start": "1925440",
    "end": "1933039"
  },
  {
    "text": "in the first exposure it's unnecessary but the good news is it's static single assignment i'm not going to reassign",
    "start": "1933039",
    "end": "1939600"
  },
  {
    "text": "that variable okay so now that we've got r",
    "start": "1939600",
    "end": "1945440"
  },
  {
    "text": "that shaded area is something that's like something in parentheses we're going to evaluate it before we go",
    "start": "1946320",
    "end": "1952480"
  },
  {
    "text": "on but i sort of like using a highlighter instead of parentheses and it nests better and if you have multiple",
    "start": "1952480",
    "end": "1959519"
  },
  {
    "text": "colors it's easier to see okay so let's evaluate the sub expression",
    "start": "1959519",
    "end": "1966159"
  },
  {
    "text": "first off the bet let's go back to elementary school and build a multiplication table",
    "start": "1966159",
    "end": "1972480"
  },
  {
    "text": "of those first 15 numbers and multiply everyone with every other",
    "start": "1972480",
    "end": "1979279"
  },
  {
    "text": "and so this is the example of upping the dimensionality",
    "start": "1979279",
    "end": "1985360"
  },
  {
    "text": "a classic technique in in array programming and once we've we've done that we're",
    "start": "1985360",
    "end": "1992799"
  },
  {
    "text": "going to flatten it you know we'd much rather have it be one",
    "start": "1992799",
    "end": "1998000"
  },
  {
    "text": "dimensional because we're going to use the membership function and we're actually going to",
    "start": "1998000",
    "end": "2003600"
  },
  {
    "text": "take our first numbers you know 2 through 14 and",
    "start": "2003600",
    "end": "2009919"
  },
  {
    "text": "find the ones that are that are in that table",
    "start": "2009919",
    "end": "2018240"
  },
  {
    "text": "are the ones we don't want these are the ones that weren't in there",
    "start": "2018240",
    "end": "2027440"
  },
  {
    "text": "hence primes so now all we have to do is our go back",
    "start": "2027440",
    "end": "2032720"
  },
  {
    "text": "to our copy machine and select out of our integers uh",
    "start": "2032720",
    "end": "2038559"
  },
  {
    "text": "the ones we wanted and we've got our primes",
    "start": "2038559",
    "end": "2043600"
  },
  {
    "text": "so no loops and a faux variable and you can see",
    "start": "2043600",
    "end": "2050240"
  },
  {
    "text": "uh the notation down below that i spared you from it's really not that bad",
    "start": "2050240",
    "end": "2060000"
  },
  {
    "text": "and if you if you don't like greek there's the ascii j which",
    "start": "2060000",
    "end": "2066720"
  },
  {
    "text": "uh one can learn to read",
    "start": "2066720",
    "end": "2071040"
  },
  {
    "text": "okay so remember those grooves",
    "start": "2072839",
    "end": "2078480"
  },
  {
    "text": "apl and it's its families are in a groove all of their own",
    "start": "2079359",
    "end": "2085598"
  },
  {
    "text": "it i love it it's beautiful you if you were to spend the time to to to",
    "start": "2086240",
    "end": "2092480"
  },
  {
    "text": "let it into your head you would love it too and it would it would show you a wonderful new way to",
    "start": "2092480",
    "end": "2097599"
  },
  {
    "text": "think but learning it it's it's a little bit prickly and i promise though it will expand your",
    "start": "2097599",
    "end": "2103920"
  },
  {
    "text": "brain so i've really been setting up all along",
    "start": "2103920",
    "end": "2109040"
  },
  {
    "text": "to talk more about path dependence and the array programming community",
    "start": "2109040",
    "end": "2116240"
  },
  {
    "text": "and us as well were all stuck in the mother of all ruts the idea that started when they stuck a",
    "start": "2116240",
    "end": "2123119"
  },
  {
    "text": "teletype machine onto a computer and then later on when they had displays",
    "start": "2123119",
    "end": "2128560"
  },
  {
    "text": "they emulated the teletype machine and we do everything through this terrible little",
    "start": "2128560",
    "end": "2133680"
  },
  {
    "text": "one line at a time funnel likewise that that little golf ball",
    "start": "2133680",
    "end": "2142400"
  },
  {
    "text": "that was the the head that people typed with that's a really limited number of",
    "start": "2142400",
    "end": "2147839"
  },
  {
    "text": "symbols and we've got all of unicode to work with and to be honest we don't even have to be",
    "start": "2147839",
    "end": "2154160"
  },
  {
    "text": "stuck with unicode we can you know",
    "start": "2154160",
    "end": "2160000"
  },
  {
    "text": "we can use candy colored tiles and and and you know jump right to an ipad",
    "start": "2160000",
    "end": "2166960"
  },
  {
    "text": "and and have you ever watched children have their first experience with an ipad",
    "start": "2166960",
    "end": "2173839"
  },
  {
    "text": "and how quickly they take to it and start doing things",
    "start": "2173839",
    "end": "2179200"
  },
  {
    "text": "anyway we could we could recast array programming to make it easier to learn as a puzzle",
    "start": "2179440",
    "end": "2185280"
  },
  {
    "text": "game as a matter of fact the apl in its descendants",
    "start": "2185280",
    "end": "2190800"
  },
  {
    "text": "uh j is really very much a data flow language once you know what's really going on it's strictly",
    "start": "2190800",
    "end": "2198800"
  },
  {
    "text": "data flow and so this is a little puzzle game i i threw together where rather than uh having it be implicit you",
    "start": "2198800",
    "end": "2206720"
  },
  {
    "text": "actually like see the the path of the data as it goes through there",
    "start": "2206720",
    "end": "2212160"
  },
  {
    "text": "and anything you touch is the immediate evaluation of it and shows you what was",
    "start": "2212160",
    "end": "2217839"
  },
  {
    "text": "to the right and what was the left and all the ranks and all of that so",
    "start": "2217839",
    "end": "2223680"
  },
  {
    "text": "oh we're gonna make it okay so here's uh i did a little interaction",
    "start": "2223680",
    "end": "2230000"
  },
  {
    "text": "design the other day so suspend this belief and",
    "start": "2230000",
    "end": "2236160"
  },
  {
    "text": "pretend for a minute that this is an ipad and we're just going to have three",
    "start": "2236160",
    "end": "2244160"
  },
  {
    "text": "blank boxes so we could grab it with our finger and",
    "start": "2244160",
    "end": "2250079"
  },
  {
    "text": "drag it out",
    "start": "2250079",
    "end": "2252800"
  },
  {
    "text": "and press on it and open up a nice little wheel of our symbology",
    "start": "2255200",
    "end": "2263119"
  },
  {
    "text": "and pick a function drag up a box for a noun",
    "start": "2263119",
    "end": "2270960"
  },
  {
    "text": "and then you know drag off of it and it'll just let you scroll through",
    "start": "2270960",
    "end": "2276400"
  },
  {
    "text": "numbers you could use a keyboard but this misses the point you know i want to",
    "start": "2276400",
    "end": "2281520"
  },
  {
    "text": "get away from that that path dependence there",
    "start": "2281520",
    "end": "2285839"
  },
  {
    "text": "need another drag further up goes faster and the idea is",
    "start": "2288079",
    "end": "2295839"
  },
  {
    "text": "what is this read-a-val print loop business in other words it's like i want",
    "start": "2295839",
    "end": "2301760"
  },
  {
    "text": "continuous evaluation in other words we do continuous delivery we do",
    "start": "2301760",
    "end": "2307280"
  },
  {
    "text": "continuous you know merging let's do continuous evaluation",
    "start": "2307280",
    "end": "2313280"
  },
  {
    "text": "while we're at it especially in a language like this so",
    "start": "2313280",
    "end": "2318720"
  },
  {
    "text": "it's always it's just always evaluating if i drag the other way i clearly want",
    "start": "2318720",
    "end": "2325440"
  },
  {
    "text": "to be making a list",
    "start": "2325440",
    "end": "2328720"
  },
  {
    "text": "so change the function to something else done",
    "start": "2334640",
    "end": "2340640"
  },
  {
    "text": "drop an adverb up there make space",
    "start": "2340640",
    "end": "2345680"
  },
  {
    "text": "ah big sigma",
    "start": "2347040",
    "end": "2354560"
  },
  {
    "text": "okay so that gives you an idea of the you know the kind of things i i you know these languages are",
    "start": "2354560",
    "end": "2361520"
  },
  {
    "text": "are 50 years old at this time we have lots of experience and i'm really more interested in the next",
    "start": "2361520",
    "end": "2368079"
  },
  {
    "text": "50 years it's not going to go away in other words 50 years from now we're still going to",
    "start": "2368079",
    "end": "2374320"
  },
  {
    "text": "be using computers we're not going to give them up and what can we do to",
    "start": "2374320",
    "end": "2381040"
  },
  {
    "text": "help relieve some of the path dependence that that were that we're stuck in so",
    "start": "2381040",
    "end": "2389920"
  },
  {
    "text": "here's a little example of getting off of that narrow little line",
    "start": "2389920",
    "end": "2397119"
  },
  {
    "text": "that little straw that we type into and do things one line at a time every now and then",
    "start": "2397119",
    "end": "2402560"
  },
  {
    "text": "using up arrows and down arrows to get the history it's like why are we stuck on one line",
    "start": "2402560",
    "end": "2410160"
  },
  {
    "text": "that that was something that was forced on us by us electric typewriter we can we can go to two dimensions into",
    "start": "2410160",
    "end": "2417040"
  },
  {
    "text": "something that's more like a scrabble world so this piece of code is interesting",
    "start": "2417040",
    "end": "2422240"
  },
  {
    "text": "this is a this is a chain of of three verbs uh well actually",
    "start": "2422240",
    "end": "2428319"
  },
  {
    "text": "it's three verbs and an adverb and uh so i'm gonna this is like",
    "start": "2428319",
    "end": "2434240"
  },
  {
    "text": "arithmetic mean and we're gonna work our way up through some quickly through some basic",
    "start": "2434240",
    "end": "2439280"
  },
  {
    "text": "statistics and once again this is going to focus on the data flow",
    "start": "2439280",
    "end": "2445200"
  },
  {
    "text": "and it's also going to let you visualize the inherent parallelism",
    "start": "2445200",
    "end": "2453599"
  },
  {
    "text": "split do those two and combine and we're done",
    "start": "2453599",
    "end": "2458720"
  },
  {
    "text": "and so it's like we can we can give things meaningful names using that",
    "start": "2459359",
    "end": "2464640"
  },
  {
    "text": "highlighting technique and so uh now we're going to just you know",
    "start": "2464640",
    "end": "2469680"
  },
  {
    "text": "use the the regular uh deviation",
    "start": "2469680",
    "end": "2474400"
  },
  {
    "text": "that little hand points over there it says give me the argument that was on the right so i don't have to use a variable",
    "start": "2475520",
    "end": "2483359"
  },
  {
    "text": "and now we'll just just build our way up and you know we'll do the sum of the square",
    "start": "2485040",
    "end": "2491760"
  },
  {
    "text": "deviations",
    "start": "2492839",
    "end": "2495839"
  },
  {
    "text": "that little circle that was there was composition of function you'll notice that that's a sequencing",
    "start": "2503280",
    "end": "2508480"
  },
  {
    "text": "operator and it's also a bottleneck",
    "start": "2508480",
    "end": "2513599"
  },
  {
    "text": "so okay let's let's do some some futuristic ideas here's my little",
    "start": "2515520",
    "end": "2520720"
  },
  {
    "text": "friend karis and she's playing with my computational blocks",
    "start": "2520720",
    "end": "2525839"
  },
  {
    "text": "that i made out of acrylic there's no electronics in the blocks anyway",
    "start": "2525839",
    "end": "2533599"
  },
  {
    "text": "she's playing with them and she's you know there she goes he's just",
    "start": "2533599",
    "end": "2539839"
  },
  {
    "text": "carving a groove she's totally tactile acquires most of the information that she's going",
    "start": "2539839",
    "end": "2546400"
  },
  {
    "text": "to get in the pattern of of how she's going to interact with the world through these early experiences",
    "start": "2546400",
    "end": "2554960"
  },
  {
    "text": "and i i really like the idea of getting computing off of the computers",
    "start": "2556800",
    "end": "2563200"
  },
  {
    "text": "and where we're going is really with more and more use of uh vision",
    "start": "2563200",
    "end": "2571440"
  },
  {
    "text": "it's like i can go out and i can buy a depth camera from microsoft for about 125 u.s",
    "start": "2571440",
    "end": "2577839"
  },
  {
    "text": "dollars and i can polygonalize reality i can recognize people by their",
    "start": "2577839",
    "end": "2586000"
  },
  {
    "text": "skeletons and that is just starting",
    "start": "2586000",
    "end": "2590480"
  },
  {
    "text": "we've been living with moore's law for how long now some of you out there your entire life",
    "start": "2591119",
    "end": "2597599"
  },
  {
    "text": "you don't know a time that you weren't being subjected to moore's law and we do not have a good intuition for",
    "start": "2597599",
    "end": "2604839"
  },
  {
    "text": "exponentials and we cannot appreciate what's getting ready to come down in the next 10 years",
    "start": "2604839",
    "end": "2610480"
  },
  {
    "text": "it's going to be totally amazing anyway with vision we should just be",
    "start": "2610480",
    "end": "2616960"
  },
  {
    "text": "able to take a picture",
    "start": "2616960",
    "end": "2621839"
  },
  {
    "text": "and just lift it up into the digital domain and there it would go so",
    "start": "2632480",
    "end": "2639520"
  },
  {
    "text": "you can see i'm still doing it i want to play with those closed pins right i want to play with those closed",
    "start": "2639520",
    "end": "2645839"
  },
  {
    "text": "pins and sit in front of a big tv but i want to do my programming with manipuls and just",
    "start": "2645839",
    "end": "2652240"
  },
  {
    "text": "lift it up so here's some resources uh i guess this",
    "start": "2652240",
    "end": "2659359"
  },
  {
    "text": "will be up on the the website uh jay is a",
    "start": "2659359",
    "end": "2664400"
  },
  {
    "text": "really really really interesting uh array programming language and it's a good way to train how you think",
    "start": "2664400",
    "end": "2670960"
  },
  {
    "text": "uh uh ken iverson's uh",
    "start": "2670960",
    "end": "2677440"
  },
  {
    "text": "talk for his touring award is a must read it's uh notation as a tool of thought",
    "start": "2677440",
    "end": "2684560"
  },
  {
    "text": "in other words learn a little bit of array programming first it's not it's you don't want that paper",
    "start": "2684560",
    "end": "2691440"
  },
  {
    "text": "to be your first exposure but maybe your second or third and it is",
    "start": "2691440",
    "end": "2696640"
  },
  {
    "text": "it is amazing paper uh another interesting language out",
    "start": "2696640",
    "end": "2702000"
  },
  {
    "text": "there is uh k and q which is uh created by kx it's mostly used on on",
    "start": "2702000",
    "end": "2709359"
  },
  {
    "text": "wall street the array programming community is small but they have very very very good customers and",
    "start": "2709359",
    "end": "2717280"
  },
  {
    "text": "they're they're not a commodity item they're very very sought after and uh wall street will gulp up",
    "start": "2717280",
    "end": "2724720"
  },
  {
    "text": "any uh any competent uh k programmer uh then of course there's",
    "start": "2724720",
    "end": "2730240"
  },
  {
    "text": "the classic itself my friends at dialogue uh",
    "start": "2730240",
    "end": "2735520"
  },
  {
    "text": "make a classic and they're adopting a lot of the really really good ideas",
    "start": "2735520",
    "end": "2740880"
  },
  {
    "text": "from jay slowly and then of course for the people that didn't have time because we went",
    "start": "2740880",
    "end": "2747280"
  },
  {
    "text": "too fast here's the information for the cow",
    "start": "2747280",
    "end": "2752160"
  },
  {
    "text": "and that's it",
    "start": "2753119",
    "end": "2761838"
  },
  {
    "text": "is inherently uh connecting these types of syntaxes with the array",
    "start": "2772839",
    "end": "2778400"
  },
  {
    "text": "programming or could they potentially be mixed into a more conventional syntax as well well i would say yes and",
    "start": "2778400",
    "end": "2786640"
  },
  {
    "text": "my favorite uh array programming language is actually mathematica and that they they they that's exactly",
    "start": "2786640",
    "end": "2794160"
  },
  {
    "text": "what they do it's uh it's like to me",
    "start": "2794160",
    "end": "2799200"
  },
  {
    "text": "the the apl languages or k or or j have to be a complete language so at",
    "start": "2799359",
    "end": "2805520"
  },
  {
    "text": "some point they have to adopt the sort of the normal things one needs to to to do your work but for me",
    "start": "2805520",
    "end": "2813040"
  },
  {
    "text": "the real beauty is that the expression level so i see it as a",
    "start": "2813040",
    "end": "2818560"
  },
  {
    "text": "as a wonderful sort of domain specific language or or just ask your language vendor to",
    "start": "2818560",
    "end": "2825440"
  },
  {
    "text": "please please give us uh give us array extensions and and don't make plus and time so limited",
    "start": "2825440",
    "end": "2832640"
  },
  {
    "text": "in other words naturally extend them i mean could you imagine how cool a data parallel javascript would be",
    "start": "2832640",
    "end": "2839599"
  },
  {
    "text": "i mean why not you know if the javascript is going to rule 50 years",
    "start": "2839599",
    "end": "2845359"
  },
  {
    "text": "from now let's hope we have a data parallel javascript",
    "start": "2845359",
    "end": "2850480"
  },
  {
    "text": "yep okay",
    "start": "2850480",
    "end": "2855359"
  },
  {
    "text": "they and one more truth in advertising all of",
    "start": "2856720",
    "end": "2863599"
  },
  {
    "text": "the animation and that was done with mathematica",
    "start": "2863599",
    "end": "2868640"
  },
  {
    "text": "how do you like",
    "start": "2869520",
    "end": "2873839"
  },
  {
    "text": "yeah that's that's that's certainly a another way to do it uh i like the the",
    "start": "2878960",
    "end": "2885599"
  },
  {
    "text": "the more compressed notation but uh link is recognizable to me see",
    "start": "2885599",
    "end": "2892400"
  },
  {
    "text": "it's it's the kind of thing that once once you've learned to think that way in terms of of",
    "start": "2892400",
    "end": "2898800"
  },
  {
    "text": "of writing your your code with with uh powerful functions and using",
    "start": "2898800",
    "end": "2906079"
  },
  {
    "text": "powerful operators to combine them with and i can't write loops anymore in other",
    "start": "2906079",
    "end": "2911680"
  },
  {
    "text": "words it seems like every time i try and write a loop i just introduce more bugs does anybody have that experience uh",
    "start": "2911680",
    "end": "2920160"
  },
  {
    "text": "so once you've but once you've learned to think that way uh you you can do it with any with anything",
    "start": "2920160",
    "end": "2929839"
  },
  {
    "text": "uh i don't know i don't really know uh",
    "start": "2940839",
    "end": "2947280"
  },
  {
    "text": "sci-fi but that they adopt they adopt the ideas because you do want to do big wholesale",
    "start": "2947280",
    "end": "2955040"
  },
  {
    "text": "operations on array so at some level uh but i i find it that when you",
    "start": "2955040",
    "end": "2961680"
  },
  {
    "text": "when you put yourself into the the real spirit by using one of those languages you you",
    "start": "2961680",
    "end": "2969040"
  },
  {
    "text": "take some amount of time to sort of break through into just sort of naturally",
    "start": "2969040",
    "end": "2975599"
  },
  {
    "text": "composing that way in other words it becomes a you become fluent in the language and your mind is forever",
    "start": "2975599",
    "end": "2981520"
  },
  {
    "text": "changed all right well let's thank the speakers",
    "start": "2981520",
    "end": "2997680"
  }
]