[
  {
    "start": "0",
    "end": "208000"
  },
  {
    "text": "first of all it's kind of an interesting question\nthat it's seven years in and we're only just starting to have that conversation but it\nalso is really interesting to see all of the",
    "start": "4069",
    "end": "11990"
  },
  {
    "text": "different perspectives come out of the woodwork\nfrom people who are like the people who have all the scars from accidentally deleting stuff\nshould you block an image that has bash in",
    "start": "11990",
    "end": "20810"
  },
  {
    "text": "the container right it's not insecure you're\nbuilding a sort of opinion of opinions it's",
    "start": "20810",
    "end": "29000"
  },
  {
    "text": "more of an opt-in mechanism correct me if\ni'm wrong right i feel like a lot of kubernetes success came from that grassroots developer\nfirst you know sophisticated user first even",
    "start": "29000",
    "end": "38670"
  },
  {
    "text": "sophisticated developers want to use unsophisticated\ntools easy to use tools for certain things",
    "start": "38670",
    "end": "45378"
  },
  {
    "text": "one of them wants to be a product that's supported\nthat's easy to use that has a nice clean ergonomic",
    "start": "45379",
    "end": "51070"
  },
  {
    "text": "interface and one wants to be a platform like\nthe swiss army knife of tooling that i can build on top of this episode was made possible\nthanks to gotopia.tech",
    "start": "51070",
    "end": "60870"
  },
  {
    "text": "My name is Matt Turner. I'm an SRE at Marshall Wace here in London.",
    "start": "60870",
    "end": "66369"
  },
  {
    "text": "I've been working with Kubernetes for quite\na while. I feel like I know a fair amount about it,\nbut with me today is Brandon Burns, co-founder",
    "start": "66369",
    "end": "73780"
  },
  {
    "text": "of Kubernetes and co-author of \"Kubernetes:\nUp and Running: Dive into the Future of Infrastructure.\"",
    "start": "73780",
    "end": "79438"
  },
  {
    "text": "Brendan, welcome. It's a pleasure to meet you. Thanks. It's really great to be here and have a chance\nto chat.",
    "start": "79439",
    "end": "84710"
  },
  {
    "text": "I'll dive straight into my first question,\nwhich is kind of going to ask you to introduce",
    "start": "84710",
    "end": "91100"
  },
  {
    "text": "yourself. I was wondering if you could tell us briefly\nwhat your role is now.",
    "start": "91100",
    "end": "96170"
  },
  {
    "text": "I understand what a normal vice president\ndoes, but you're a super, super technical guy.",
    "start": "96170",
    "end": "102110"
  },
  {
    "text": "So what are you up to day-to-day? I'm generally responsible for cloud-native\nopen source on Azure, Microsoft's cloud, as",
    "start": "102110",
    "end": "112530"
  },
  {
    "text": "well as sort of all of the APIs that drive\naccessing the cloud.",
    "start": "112530",
    "end": "120380"
  },
  {
    "text": "My teams are responsible for the metadata\nlayer that you interact with when you interact with Azure.",
    "start": "120380",
    "end": "126229"
  },
  {
    "text": "It doesn't necessarily mean that we go and\nprovision the VMs, but we deal with the templates and policy and access control.",
    "start": "126229",
    "end": "132889"
  },
  {
    "text": "So generally cloud-native and DevOps for Azure. But as you say, I can't help myself from coding\nas well.",
    "start": "132889",
    "end": "142918"
  },
  {
    "text": "So in addition to running a fairly large set\nof teams, I'm also doing things like maintaining",
    "start": "142919",
    "end": "149580"
  },
  {
    "text": "the clients for Kubernetes. I maintain the Java, Javascript and C# and\nactually these days C as well.",
    "start": "149580",
    "end": "157540"
  },
  {
    "text": "There's a nascent C client for Kubernetes\nbeing developed. It's a good reminder of how painful it is\nto program in C.",
    "start": "157540",
    "end": "163390"
  },
  {
    "text": "I bet it's a nice difference from all the\nbig company meetings that you might have to",
    "start": "163390",
    "end": "171210"
  },
  {
    "text": "go to. Yeah, for sure. I learned over time that, as you have other\nresponsibilities, it's important to pull yourself",
    "start": "171210",
    "end": "181419"
  },
  {
    "text": "out of the mainline but find those areas where\nyou can have an impact and where you can contribute.",
    "start": "181419",
    "end": "189370"
  },
  {
    "text": "If I have to go away for a week, deal with\na customer or go and do a bunch of meetings,",
    "start": "189370",
    "end": "194830"
  },
  {
    "text": "nobody's going to really care if the Java\nclient is delayed a little bit. Whereas being in the mainline, reviewing PRs,\nand stuff like that, you're introducing a",
    "start": "194830",
    "end": "203940"
  },
  {
    "text": "lot of latency for other people. How closely do you follow upstream Kubernetes?",
    "start": "203940",
    "end": "212200"
  },
  {
    "start": "208000",
    "end": "457000"
  },
  {
    "text": "It sounds like you're not hands-on as a maintainer. How involved are you with the original project\nthese days?",
    "start": "212200",
    "end": "219150"
  },
  {
    "text": "I'm involved with it in the sense that a lot\nof what we do is helping deliver success for",
    "start": "219150",
    "end": "224680"
  },
  {
    "text": "our customers using Kubernetes. I'm pretty involved with it in terms of understanding,\nhow it's evolving, release to release, what's",
    "start": "224680",
    "end": "233840"
  },
  {
    "text": "going to break release to release, what's\ngotten better release to release and trying",
    "start": "233840",
    "end": "239519"
  },
  {
    "text": "to anticipate potential problems at scale. We have thousands and thousands of customers,\nand it's a little bit different.",
    "start": "239519",
    "end": "247650"
  },
  {
    "text": "You see something and you're like: \"Oh, probably\nmost people won't hit that..\" That's true. But once you have tens of thousands of customers,\nthat probably becomes a \"certainly.\"",
    "start": "247650",
    "end": "257790"
  },
  {
    "text": "I’m trying to think about that and usability\nas well.  There has been a really interesting discussion\naround: Should we add confirmation of delete",
    "start": "257790",
    "end": "268890"
  },
  {
    "text": "to kubectl? It is kind of an interesting question that\nseven years in we're only just starting to",
    "start": "268890",
    "end": "276140"
  },
  {
    "text": "have that conversation. It is interesting to see the different perspectives\nfrom people who have all the scars from accidentally",
    "start": "276140",
    "end": "286460"
  },
  {
    "text": "deleting stuff. And then also the people who are writing automation\nin scripts and who are like, \"I don't want",
    "start": "286460",
    "end": "293070"
  },
  {
    "text": "to add dash dash yes to every single line\nand every single script that I've ever written.\"",
    "start": "293070",
    "end": "298490"
  },
  {
    "text": "One of the things I think about is actually,\nI feel like this should be a cluster administration",
    "start": "298490",
    "end": "305650"
  },
  {
    "text": "capability where I can say \"Hey, these are\nthe things that I care about. And regardless of whether you put dash dash\nyes or not, you're locked.”",
    "start": "305650",
    "end": "314370"
  },
  {
    "text": "You need to make an explicit gesture, like\nremoving an annotation or similar, to delete",
    "start": "314370",
    "end": "322530"
  },
  {
    "text": "something. One of the other things I do a lot of these\ndays is cross Azure live site reviews, postmortems",
    "start": "322530",
    "end": "331150"
  },
  {
    "text": "and things like that. And, when you do that, you get this breadth\nof perspective about how accidents happen.",
    "start": "331150",
    "end": "337361"
  },
  {
    "text": "I have a friend who's a vocational counselor,\nwho helps people rehabilitate after job site",
    "start": "337361",
    "end": "345500"
  },
  {
    "text": "injuries. His perspective of how dangerous it is to\nwork in particular industries is a little",
    "start": "345500",
    "end": "352350"
  },
  {
    "text": "bit skewed by the fact that he sees all the\nbad stuff that happens. It is sort of similar when you go through\na lot of postmortem reviews.",
    "start": "352350",
    "end": "361830"
  },
  {
    "text": "You start saying, \"Oh, okay, actually, we\nneed to put some safety guards in here that you as a user may not love, but will prevent\nyou from hurting yourself.\"",
    "start": "361830",
    "end": "369580"
  },
  {
    "text": "It was along with one of the directions we\nwanted to follow. That's really interesting.",
    "start": "369580",
    "end": "375780"
  },
  {
    "text": "I was a software engineer at first and then\nmoved into the infrastructure direction.",
    "start": "375780",
    "end": "381880"
  },
  {
    "text": "I remember very quickly getting the attitude\nof \"What are the devs doing? This is crazy dangerous. Stop, stop, stop, stop!\"",
    "start": "381880",
    "end": "387430"
  },
  {
    "text": "But I also remember when delete became synchronous. It doesn't ask for confirmation, but it used\nto be instant.",
    "start": "387430",
    "end": "393270"
  },
  {
    "text": "And then all of a sudden it took a while and\nwe were all like, \"What is this? What is this bug?",
    "start": "393270",
    "end": "398500"
  },
  {
    "text": "What is this bug? I just want it to go fast? I just want to tell the cluster to make the\nbest effort.\" I guess I still had some dev in me.",
    "start": "398500",
    "end": "404090"
  },
  {
    "text": "It's interesting, especially in a smaller\ncompany, how you wear all those different hats.",
    "start": "404090",
    "end": "409460"
  },
  {
    "text": "It sounds like you interact with people who\nwear all those different hats, and you have to try to make all of them happy.",
    "start": "409460",
    "end": "418630"
  },
  {
    "text": "It's really fascinating. We've been thinking about, how do you create\na policy to reduce manual touches?",
    "start": "418630",
    "end": "426660"
  },
  {
    "text": "It's great to aspire and tell people to reduce\nmanual touches. But actually, I find that aspirations are\nno substitute for actually implementing policy.",
    "start": "426660",
    "end": "437479"
  },
  {
    "text": "But then there's always somebody who has some\nworkflow that you're going to break.",
    "start": "437480",
    "end": "443030"
  },
  {
    "text": "And how do you negotiate them along and help\nthem through maybe changing their workflow.",
    "start": "443030",
    "end": "448150"
  },
  {
    "text": "You’re trying to understand where they're\ncoming from.",
    "start": "448150",
    "end": "454910"
  },
  {
    "text": "Are there any features coming down the pipeline\nat you from upstream that you're particularly",
    "start": "454910",
    "end": "461670"
  },
  {
    "start": "457000",
    "end": "1032000"
  },
  {
    "text": "excited for? You've talked about the confirmation stuff,\nwhich is interesting. Anything you think is gonna make this better\nor is actually maybe a bad idea or that's",
    "start": "461670",
    "end": "473300"
  },
  {
    "text": "super cool? The most interesting thing in this area that\nI'm thinking about is the mainstreaming of",
    "start": "473300",
    "end": "482199"
  },
  {
    "text": "the Gatekeeper project for policy. It's something that we developed a while ago.",
    "start": "482199",
    "end": "487990"
  },
  {
    "text": "It runs as an admissions controller. It's been out for a while but I think we're\nstarting to see interest. For example, there used to be pod security\npolicies as part of Kubernetes and it was",
    "start": "487990",
    "end": "498750"
  },
  {
    "text": "a very specialized thing. They actually never got past beta and they're\nactually on a path to deprecation to be replaced",
    "start": "498750",
    "end": "506020"
  },
  {
    "text": "with a general-purpose policy as implemented\nby Gatekeeper. I think that's a really good thing and a really\ngood development for Kubernetes in general. ",
    "start": "506020",
    "end": "518349"
  },
  {
    "text": "It's a funny trajectory. When we started out, we had basic authentication,\nno RBAC.",
    "start": "518349",
    "end": "529100"
  },
  {
    "text": "When we started to add in RBAC, it felt like\nwe're in the big league now.",
    "start": "529100",
    "end": "535149"
  },
  {
    "text": "This is a sign that people are actually using\nthis thing. Fast forward another four or five years and\nRBAC is great, but it doesn't tell you anything",
    "start": "535150",
    "end": "545329"
  },
  {
    "text": "about the insides of the object. It'll say yes or no, it's like a stop sign.",
    "start": "545330",
    "end": "552940"
  },
  {
    "text": "It doesn't say, is the thing you're doing\na good idea or not. And so, in the levels of sophistication, the\nfirst stage is Do I know you or not?",
    "start": "552940",
    "end": "562529"
  },
  {
    "text": "Do you have my password? The second stage is I'm going to give you\nsome fine-grained access control, read and write or delete or whatever.",
    "start": "562530",
    "end": "568379"
  },
  {
    "text": "And the third stage is I'm actually going\nto look at what you have in your thing, and try and make a judgment call: Is this actually\nsomething that I want to allow you to do?",
    "start": "568380",
    "end": "579270"
  },
  {
    "text": "I'm excited that we're starting to see that\nmainstream a little bit more. I'm excited that it's being discussed as a\ngeneral capability that should be part of",
    "start": "579270",
    "end": "587640"
  },
  {
    "text": "what every Kubernetes cluster looks like. I'm trying to get people to adopt more.",
    "start": "587640",
    "end": "592779"
  },
  {
    "text": "I think it's adopted in a bunch of enterprises,\nbut it's not necessarily being adopted more",
    "start": "592779",
    "end": "598670"
  },
  {
    "text": "broadly. The reason I'm interested in it is that I'm\ndeeply concerned about some of the software",
    "start": "598670",
    "end": "605390"
  },
  {
    "text": "supply chain stuff. Even today, there's way too much pulling of\nrandom stuff off the internet, exposing ports",
    "start": "605390",
    "end": "615600"
  },
  {
    "text": "on the internet. It's very scary out there. ",
    "start": "615600",
    "end": "620779"
  },
  {
    "text": "Along those lines, one of the other interesting\nthings that I've been thinking a lot about",
    "start": "620779",
    "end": "625990"
  },
  {
    "text": "lately has been sidecar as a dependency management. ",
    "start": "625990",
    "end": "633820"
  },
  {
    "text": "For a long time, we thought about projects\nlike sidecar, because they add capabilities. I think one of the other things they actually\ndo is they add encapsulation.",
    "start": "633820",
    "end": "641470"
  },
  {
    "text": "You can make value judgments that say, \"Hey,\nwe're going to have a team that focuses on",
    "start": "641470",
    "end": "646610"
  },
  {
    "text": "enabling clients for something like Redis\nor Cassandra or whatever.",
    "start": "646610",
    "end": "652760"
  },
  {
    "text": "And we're going to put that in a sidecar.\" And in fact the Dapper project that we're\nworking on, takes that and does exactly that.",
    "start": "652760",
    "end": "659900"
  },
  {
    "text": "The only thing that your developers need to\nhave in there is an HTTP client. They are not actually going to take a ton\nof dependencies.",
    "start": "659900",
    "end": "667220"
  },
  {
    "text": "They're going to mostly keep their dependencies\ndown to a minimum. And we're going to actually try and put the\nlogic and the dependencies in a sidecar.",
    "start": "667220",
    "end": "674380"
  },
  {
    "text": "There it's a little bit easier for a single\nteam to own it, to reason about it, centralize it, it's like having a library or a platform\nteam in a company.",
    "start": "674380",
    "end": "682930"
  },
  {
    "text": "Actually, I think, it enables even more encapsulation\nof stuff like that.",
    "start": "682930",
    "end": "688520"
  },
  {
    "text": "It becomes really essential for being able\nto understand, what is my software supply chain?",
    "start": "688520",
    "end": "694000"
  },
  {
    "text": "If the software supply chain is encapsulated\nin hundreds of different images that I run, it's much harder to keep track of, than if\nI put it all in this one thing that we share",
    "start": "694000",
    "end": "703470"
  },
  {
    "text": "across everywhere. That's something I've been noodling on lately. Presumably with the intention of that becoming\nfirst-class right?",
    "start": "703470",
    "end": "714220"
  },
  {
    "text": "It's a new idea to me. It sounds great and I'm sure somebody out\nthere smarter than me has built that tooling.",
    "start": "714220",
    "end": "721700"
  },
  {
    "text": "Are you looking at getting that first-class\non the API surface?",
    "start": "721700",
    "end": "726959"
  },
  {
    "text": "Or just something that you could reason about\nin policy, maybe via annotations of this initially.",
    "start": "726959",
    "end": "732630"
  },
  {
    "text": "There's a lot of opportunity to experiment\nfirst. I wouldn't want to experiment a lot before\nwe go too far down.",
    "start": "732630",
    "end": "741600"
  },
  {
    "text": "But I do think that we need to start thinking\nabout provenance of images, not just in terms of, “Wait, did it come from somewhere that\nI trust?,\" but actually like, “What kind",
    "start": "741600",
    "end": "752121"
  },
  {
    "text": "of baggage is it pulling in with it?” I think again it's very difficult if you have\na cluster right now to know if there are vulnerable",
    "start": "752121",
    "end": "763100"
  },
  {
    "text": "images running it, for example. Yeah for sure. There's no way to walk up to the API server,\nother than the image itself.",
    "start": "763100",
    "end": "772360"
  },
  {
    "text": "The minute a developer builds that image,\nyou lose track of where it came from.",
    "start": "772360",
    "end": "778149"
  },
  {
    "text": "Things are meant to be easy. The temptation is definitely to use an upstream\nimage, to pull it from a public registry,",
    "start": "778149",
    "end": "786010"
  },
  {
    "text": "without even putting it through a write-through\ncache and a scanner.",
    "start": "786010",
    "end": "792400"
  },
  {
    "text": "I've built tooling that tries to address this,\nbut identifying dependencies with static analysis",
    "start": "792400",
    "end": "797670"
  },
  {
    "text": "of container images is very standard. You're right in making that more first class.",
    "start": "797670",
    "end": "803120"
  },
  {
    "text": "I've been on the OPA train. It's really cool to hear about that idea,\nusing Gatekeeper to do exactly what you said.",
    "start": "803120",
    "end": "809920"
  },
  {
    "text": "To just lint and say, \"Hey, if you're trying\nto expose all ports to 0.0.0.0./0 we're going",
    "start": "809920",
    "end": "819720"
  },
  {
    "text": "to deny that.\" Yeah, for sure. Making that more sophisticated sounds like\na really powerful tool. And the other thing I've been thinking about\na lot lately is how can you do this in a warning",
    "start": "819720",
    "end": "830279"
  },
  {
    "text": "style too? One of the things I wish we'd built into Kubernetes\nat the beginning is warnings.",
    "start": "830279",
    "end": "836050"
  },
  {
    "text": "Everything we have now is yes or no. But not in the way of “You probably shouldn't.\"",
    "start": "836050",
    "end": "845420"
  },
  {
    "text": "There's more opportunity for that kind of\nstuff. We have a little bit of these kinds of warnings\ncoming in now actually into the API service",
    "start": "845420",
    "end": "853920"
  },
  {
    "text": "area. You mean the deprecation stuff? If I use extensions/beta deployment, I'm told\nthat I have to stop doing that, but that's",
    "start": "853920",
    "end": "863389"
  },
  {
    "text": "the only example I can think of. I feel like there was something else that\nI saw recently that Clayton was working on.",
    "start": "863390",
    "end": "869660"
  },
  {
    "text": "I can't remember the details, but HTTP does\nhave a warning field, it has a warning header.",
    "start": "869660",
    "end": "874930"
  },
  {
    "text": "Really? Wow! In the spec is a header that is dedicated\nto this. We just never made use of it really.",
    "start": "874930",
    "end": "882290"
  },
  {
    "text": "It was interesting when you said that. You described Authn, which is a yes or no. “Do I know who you are?",
    "start": "882290",
    "end": "887940"
  },
  {
    "text": "Do your credentials check out?” And there’s authz which is always going\nto be a binary decision.",
    "start": "887940",
    "end": "893010"
  },
  {
    "text": "I guess you went from no Auth to ABAC to RBAC. It got more sophisticated and very infrastructure-y.",
    "start": "893010",
    "end": "906560"
  },
  {
    "text": "To me sounds like a linter or more of a dev\nexperience kind of thing than a sort of infrastructure",
    "start": "906560",
    "end": "913040"
  },
  {
    "text": "tool. A good example of this is something like resource\nlimits.",
    "start": "913040",
    "end": "919509"
  },
  {
    "text": "You can require that everybody supply resource\nlimits and that is probably not a terrible idea. You will run into a couple of people who are\nlike, \"No, no, but my use case is...,\" and",
    "start": "919510",
    "end": "930550"
  },
  {
    "text": "they may be right in that particular case.",
    "start": "930550",
    "end": "936060"
  },
  {
    "text": "I think it is like that linter at some level\nwhere you think, \"Well, mostly I want this",
    "start": "936060",
    "end": "941160"
  },
  {
    "text": "rule to be true and enforced, but if you're\nthis tall, I'm going to trust that you're sophisticated enough to know what's gonna\nhappen if you don't.\"",
    "start": "941160",
    "end": "953910"
  },
  {
    "text": "Having that ability is valuable and important. Another thing I think about a lot of this\nin terms of security as well: should you block",
    "start": "953910",
    "end": "964850"
  },
  {
    "text": "an image that has Bash in the container?",
    "start": "964850",
    "end": "971000"
  },
  {
    "text": "It's not insecure. The newest version of Bash doesn't have any\nCVEs on it and it's a secure binary, but it's",
    "start": "971000",
    "end": "979810"
  },
  {
    "text": "probably a bad idea.",
    "start": "979810",
    "end": "985779"
  },
  {
    "text": "Especially with debug containers, which is\na cool thing that's been added relatively recently, there's no good reason for anybody\nto have a shell sitting in their image.",
    "start": "985779",
    "end": "994560"
  },
  {
    "text": "It just makes it easier for someone who breaks\nout to do stuff.",
    "start": "994560",
    "end": "999930"
  },
  {
    "text": "It doesn't make it any more secure to remove\nit, or any less secure to have it there at",
    "start": "999930",
    "end": "1006920"
  },
  {
    "text": "some level. I'm into this idea of friction for security.",
    "start": "1006920",
    "end": "1012580"
  },
  {
    "text": "So there's like security as a wall and then\nthere's security as the spiky wood things that you put between the walls.",
    "start": "1012580",
    "end": "1018230"
  },
  {
    "text": "That is more like, “I'm actually just going\nto try and make it a little harder for you. I'm not actually going to be able to tell\nyou that it's more secure to a dedicated attacker,",
    "start": "1018230",
    "end": "1026558"
  },
  {
    "text": "but at least I'm going to get more time to\nfind you.” There's always been this sort of \"best practice\"\nof containers built on“distroless\" or scratch,",
    "start": "1026559",
    "end": "1037659"
  },
  {
    "start": "1032000",
    "end": "1353000"
  },
  {
    "text": "and then host images, a CoreOS or a COS or\nAtomic, or something like that.",
    "start": "1037659",
    "end": "1043230"
  },
  {
    "text": "Why do you need a shell? You need a containerd, you need a C library,\nyou need a Go runtime.",
    "start": "1043230",
    "end": "1049090"
  },
  {
    "text": "What else are you putting in there? And there have always been ways to address\nthis.",
    "start": "1049090",
    "end": "1054309"
  },
  {
    "text": "You have static analysis mostly, or just curation\nby a platform team or an infrastructure team.",
    "start": "1054309",
    "end": "1060039"
  },
  {
    "text": "It's really interesting to me that you're\ntalking about Kubernetes starting to have opinions about this almost and maybe not leave\nit up to the operators, anecdotally.",
    "start": "1060039",
    "end": "1069028"
  },
  {
    "text": "Well, I would say enable Kubernetes to have\nthe ability to have opinions. Right.",
    "start": "1069029",
    "end": "1074899"
  },
  {
    "text": "I'm not ever sure that, as a community, we\nwould say, \"This is the way.\" I think we would instead say, \"Look, you're\ngoing to define the way, but we're going to",
    "start": "1074899",
    "end": "1083179"
  },
  {
    "text": "give you capabilities to do it.\" So this is a bit meta. This is about making that easier and more\naccessible.",
    "start": "1083179",
    "end": "1092278"
  },
  {
    "text": "Sort of paving the road for cluster operators\nto have an opinion and to not have to use",
    "start": "1092279",
    "end": "1098350"
  },
  {
    "text": "a load of tooling to enforce it. I think that that's part of it.",
    "start": "1098350",
    "end": "1104080"
  },
  {
    "text": "There's a big difference between asking someone\nthe question versus expecting them to find",
    "start": "1104080",
    "end": "1112118"
  },
  {
    "text": "the documentation somewhere,implement it and\nget it to work.",
    "start": "1112119",
    "end": "1122059"
  },
  {
    "text": "A good example of this is something like a\nmodern computer. A modern computer effectively forces you to\nturn on password auth, like my iPad.",
    "start": "1122059",
    "end": "1132429"
  },
  {
    "text": "When I reinstall my iPad, and actually, I\nhate it, particularly with the family one that all the kids share.",
    "start": "1132429",
    "end": "1138909"
  },
  {
    "text": "It really tries to force you into having a\npin. In fact, you have to put a pin on it and then\ngo into the settings and say, \"No, I don't",
    "start": "1138909",
    "end": "1145609"
  },
  {
    "text": "want a pin on it. I don't put anything secure on this thing.\" I think modern computing has decided, we're\nno longer going to say, \"Hey, you can figure",
    "start": "1145609",
    "end": "1153730"
  },
  {
    "text": "out how to password encode your thing. We’ll no longer let you figure out how to\nencrypt it. We're going to actually shove it into your\nface and force you to turn it off.\"",
    "start": "1153730",
    "end": "1161600"
  },
  {
    "text": "And I think that's actually the right thing\nto do. There’s that idea of a paid road, a set\nof sensible defaults.",
    "start": "1161600",
    "end": "1171639"
  },
  {
    "text": "Anecdotally, my approach with developers has\nalways been pretty similar. “This is what we want you to do.",
    "start": "1171639",
    "end": "1180780"
  },
  {
    "text": "The CI system will fail your build if your\ndeployment.yaml doesn't have a resource request",
    "start": "1180780",
    "end": "1186350"
  },
  {
    "text": "and a limit in it.” Because they're just good practice. Actually the VS Code work puts a red squiggle\nunder your YAML.",
    "start": "1186350",
    "end": "1193889"
  },
  {
    "text": "So we have a VS code extension for Kubernetes,\nit puts a little red squiggle under your YAML if you don't put resources in there.",
    "start": "1193889",
    "end": "1201210"
  },
  {
    "text": "Especially in the days of DevOps, somebody\nmay be primarily a Dev, and it's not their job to have this kind of expertise.",
    "start": "1201210",
    "end": "1210638"
  },
  {
    "text": "My approach has always been, they come to\nme and argue their case. For example \"I don't want to limit myself\nbecause this is an unbounded job.",
    "start": "1210639",
    "end": "1218899"
  },
  {
    "text": "All it's doing is some massive computation.” It's kind of a best-effort thing.",
    "start": "1218899",
    "end": "1224489"
  },
  {
    "text": "If we get a result, great. If there are clusters doing other stuff and\nit wants to OOM kill me, then fine.",
    "start": "1224489",
    "end": "1229809"
  },
  {
    "text": "If you can make a case for an exception, then\nas you say, you add a policy exception or",
    "start": "1229809",
    "end": "1236210"
  },
  {
    "text": "you stick an annotation on. Somebody with authority does a privileged\noperation and then the cluster lets that kind",
    "start": "1236210",
    "end": "1245258"
  },
  {
    "text": "of thing slide. That's interesting. I was wondering, do you see the kubelet scanning\nthe host that it's on and refusing to run",
    "start": "1245259",
    "end": "1251759"
  },
  {
    "text": "on a system that's got a shell on it or a\nPython interpreter or something? I wonder how far this goes.",
    "start": "1251759",
    "end": "1257529"
  },
  {
    "text": "I do think that kubeadm already starts down\nthis path, the way that people install.",
    "start": "1257529",
    "end": "1265480"
  },
  {
    "text": "And certainly we, as a win in AKS, are seeing\nincreasing demand and desire to pre-configure",
    "start": "1265480",
    "end": "1272139"
  },
  {
    "text": "things for people. In the beginning, it was a lot of, “But\nI want to run this, and this shell script and I want to install this thing.\"",
    "start": "1272139",
    "end": "1278519"
  },
  {
    "text": "And now more and more customers are coming\nand saying, \"Look, I just want to run containers.",
    "start": "1278519",
    "end": "1284679"
  },
  {
    "text": "Just take care of it all. I don't even want to see the OS,\" at some\nlevel. From a provider perspective, that's absolutely\nwhere we're headed.",
    "start": "1284679",
    "end": "1293879"
  },
  {
    "text": "And in the community, it's going to head there\ntoo. I think so.",
    "start": "1293879",
    "end": "1299109"
  },
  {
    "text": "I think a lot of people are building this\nthemselves. You've preempted my question. I was there when RBAC came in and I remember\nthe pain it was.",
    "start": "1299109",
    "end": "1310419"
  },
  {
    "text": "RBAC was an absolutely great addition, a great\nmove, but it was a pain to retrofit it, to",
    "start": "1310419",
    "end": "1316470"
  },
  {
    "text": "clusters, all of my controllers. Back in those days, everybody had a hand-rolled\nKubernetes installed and suddenly every controller",
    "start": "1316470",
    "end": "1323820"
  },
  {
    "text": "needed a service account and that needed the\ncorrect permissions. I do remember it was kind of a tedious week.",
    "start": "1323820",
    "end": "1329252"
  },
  {
    "text": "For sure. But it had to be done. I was going to ask about the migration plan,\nbut it sounds like you're building a sort",
    "start": "1329252",
    "end": "1335179"
  },
  {
    "text": "of opinion of opinions. It's more of an opt-in mechanism.",
    "start": "1335179",
    "end": "1343100"
  },
  {
    "text": "Yes.",
    "start": "1343100",
    "end": "1348160"
  },
  {
    "text": "Earlier, I did want to ask something.",
    "start": "1348160",
    "end": "1357809"
  },
  {
    "start": "1353000",
    "end": "2143000"
  },
  {
    "text": "You're not coding all day on the project now. It sounds like you're still involved at a\nstrategic level.",
    "start": "1357809",
    "end": "1365960"
  },
  {
    "text": "You're an engineer and you're a very good\none because you worked on this massively successful project and it's given you great success,\na VP.",
    "start": "1365960",
    "end": "1374820"
  },
  {
    "text": "Was there a sense of hanging up your brackets\nor whatever the XKCD is? Yes, I think that's natural and it was really\nexplicit from the beginning.",
    "start": "1374820",
    "end": "1388519"
  },
  {
    "text": "We were never intending to build a benevolent\ndictator for life open-source project.",
    "start": "1388519",
    "end": "1394929"
  },
  {
    "text": "There are a lot of projects running around\na single person oftentimes in these open-source",
    "start": "1394929",
    "end": "1401549"
  },
  {
    "text": "communities. That's not my notion of a good open-source\ncommunity.",
    "start": "1401549",
    "end": "1408330"
  },
  {
    "text": "We were very explicit from the very beginning\nto give away power.",
    "start": "1408330",
    "end": "1415070"
  },
  {
    "text": "To create SIGs and establish leaders in the\nSIGs who have pretty exclusive power to generate. ",
    "start": "1415070",
    "end": "1421628"
  },
  {
    "text": "It took a while to get the governance in place\nbut we got the governance in place.",
    "start": "1421629",
    "end": "1427669"
  },
  {
    "text": "There are elections to the steering committee\nso that people understand how the various",
    "start": "1427669",
    "end": "1434190"
  },
  {
    "text": "things shift. For me personally, it's a realization that\nthe times in the Kubernetes community that",
    "start": "1434190",
    "end": "1448960"
  },
  {
    "text": "I was most happy with were the first 80%. I laid down a ton of the early code and I\nthink the last major thing that I pushed in",
    "start": "1448960",
    "end": "1461999"
  },
  {
    "text": "was called Third-Party Resources at the time\nand then became Custom Resource Definitions. It was a pretty big fight actually at the\ntime, like a really big fight.",
    "start": "1461999",
    "end": "1472830"
  },
  {
    "text": "Oh wow. I came out of it thinking it's time to move\non.",
    "start": "1472830",
    "end": "1481158"
  },
  {
    "text": "The project had gotten big enough that it\nwas time to let a lot of other voices speak.",
    "start": "1481159",
    "end": "1488599"
  },
  {
    "text": "Also practically speaking, I really enjoy\ndelivering stuff for the customers, and for",
    "start": "1488599",
    "end": "1497049"
  },
  {
    "text": "the end-users and being able to build those\nmanaged services and have an impact at cloud scale.",
    "start": "1497049",
    "end": "1502820"
  },
  {
    "text": "That requires building and running and managing\na big team, which ultimately takes a lot of",
    "start": "1502820",
    "end": "1509549"
  },
  {
    "text": "time. As I said earlier, the worst thing you can\ndo is keep yourself in the mainline when you're",
    "start": "1509549",
    "end": "1516700"
  },
  {
    "text": "a blocker. But at the same time, it was still important\nfor me to stay at least a little bit involved.",
    "start": "1516700",
    "end": "1522539"
  },
  {
    "text": "I had that itch that I needed to scratch. I found various things in a similar way.",
    "start": "1522539",
    "end": "1529018"
  },
  {
    "text": "I wrote most of the VS Code extension that\nwe built for Kubernetes.",
    "start": "1529019",
    "end": "1534700"
  },
  {
    "text": "There’s a bunch of people out there working\non it. Eventually, I handed that off when it became\nclear that it wasn't an experiment anymore.",
    "start": "1534700",
    "end": "1543379"
  },
  {
    "text": "It has millions of people downloading it and\nit needs more persistent work.",
    "start": "1543379",
    "end": "1549049"
  },
  {
    "text": "And that's a pattern that persists. I've hung onto the Kubernetes clients. First of all, they're relatively low traffic.",
    "start": "1549049",
    "end": "1556889"
  },
  {
    "text": "And then also it's really hard to find people\nto work on them actually.",
    "start": "1556890",
    "end": "1563190"
  },
  {
    "text": "Oddly enough there's a lot of users but finding\npeople who want to come work on the Kubernetes",
    "start": "1563190",
    "end": "1569408"
  },
  {
    "text": "clients has proven to be a challenge. I've found one or two other people who are\npassionate and interested and who come and",
    "start": "1569409",
    "end": "1577619"
  },
  {
    "text": "do great work. I mean, hats off to you.",
    "start": "1577619",
    "end": "1585279"
  },
  {
    "text": "There's an award they give out at KubeCon\ncalled Chop Wood Carry Water.",
    "start": "1585279",
    "end": "1590909"
  },
  {
    "text": "I feel like the clients are one of those really\nhigh-value, really low sexy factor things. It needs to be done, but you don't get to\ntackle bigger algorithms or write shiny features",
    "start": "1590909",
    "end": "1600629"
  },
  {
    "text": "in the release notes. I know. I find it really interesting for me personally,\nat a couple of different levels.",
    "start": "1600629",
    "end": "1607419"
  },
  {
    "text": "One is because it really gives you a sense\nof how people are building on top.",
    "start": "1607419",
    "end": "1612539"
  },
  {
    "text": "Anybody who's writing code is building on\ntop. They're platform building at some level, they're\nbuilding an operator, they're building a UI,",
    "start": "1612539",
    "end": "1620519"
  },
  {
    "text": "they're building something. If you're not, you're going to use helm or\nkubectl or whatever.",
    "start": "1620519",
    "end": "1625870"
  },
  {
    "text": "You're not going to use any of the programming\ntools. There you get a real sense of how people are\nbuilding and what people are building.",
    "start": "1625870",
    "end": "1631628"
  },
  {
    "text": "And two, I found personally it was really\nfun and gratifying to implement the same thing over and over and over again in different\nprogramming languages.",
    "start": "1631629",
    "end": "1638869"
  },
  {
    "text": "It was a really interesting exercise in comparing\nand contrasting.",
    "start": "1638869",
    "end": "1644739"
  },
  {
    "text": "I've used different programming languages\nin different parts of my career, but generally, I haven't, in the span of a day, implemented\nthe same feature in multiple places.",
    "start": "1644739",
    "end": "1653858"
  },
  {
    "text": "Then you start to go, \"Oh, wow. This is interesting. I see that it’s easy here.",
    "start": "1653859",
    "end": "1659539"
  },
  {
    "text": "It's hard here.\" It's more complicated. There were some features that I discovered\nwhere I was like, \"Oh wow, this is a really",
    "start": "1659539",
    "end": "1667389"
  },
  {
    "text": "good idea. I wish I had this over here.\" It's interesting. I was going to talk about it later when we\nget into the controversial section of the",
    "start": "1667389",
    "end": "1675970"
  },
  {
    "text": "talk about Golang and about the sort of co-evolution\nof those projects.",
    "start": "1675970",
    "end": "1681059"
  },
  {
    "text": "Golang is a language with opinions and that\nsuits certain things. If you have the Kubernetes API, it has a certain\nstructure, it has a certain kind of ergonomics",
    "start": "1681059",
    "end": "1690758"
  },
  {
    "text": "to it. Some languages make it easy to express that,\nsome languages make it a little bit more difficult.",
    "start": "1690759",
    "end": "1700799"
  },
  {
    "text": "And the other interesting thing is you find\nall of the places where things weren't written",
    "start": "1700799",
    "end": "1706200"
  },
  {
    "text": "down. There's this general expectation, and I think\nit's the right expectation that if kubectl",
    "start": "1706200",
    "end": "1713789"
  },
  {
    "text": "works in a particular environment, the client\nlibrary should work in the same environment.",
    "start": "1713789",
    "end": "1721398"
  },
  {
    "text": "That makes sense. But then you go, \"Oh, wow. Like actually there's a whole bunch of stuff\nthat was shoved into client Go.",
    "start": "1721399",
    "end": "1728929"
  },
  {
    "text": "That was never documented anywhere.\"",
    "start": "1728929",
    "end": "1735090"
  },
  {
    "text": "You keep finding things. Literally, we just kept finding things. I can't remember the specific one. Someone just came in and I think there's some\nenvironment variable that if we use to pick",
    "start": "1735090",
    "end": "1745500"
  },
  {
    "text": "up the namespace that you want to be in, that\nwill override the namespace in the context.",
    "start": "1745500",
    "end": "1751549"
  },
  {
    "text": "And it's used only inside of pods. Wow okay. If you're in a pod, the namespace is supplied\nas an environment variable.",
    "start": "1751549",
    "end": "1759138"
  },
  {
    "text": "It's also, by the way, supplied as a file\nin the pod and that is documented.",
    "start": "1759139",
    "end": "1765570"
  },
  {
    "text": "But there's an environment variable that client\nGo looks for, it probably was pushed in before the file existed. It might be some convenience thing, I don't\nknow.",
    "start": "1765570",
    "end": "1773119"
  },
  {
    "text": "No one had ever hit this or complained about\nthe fact that we didn't do this. Then somebody showed up, I think it was in\nthe TypeScript library, and said, \"This code",
    "start": "1773119",
    "end": "1781789"
  },
  {
    "text": "doesn't work.\" We were like, \"Okay, we can dig into the client\nGo, but if it's not documented anywhere and",
    "start": "1781789",
    "end": "1789960"
  },
  {
    "text": "it's not a standard somewhere, it's pretty\nhard for client library authors to figure out what the right thing to do is.\"",
    "start": "1789960",
    "end": "1797509"
  },
  {
    "text": "Is client Go the thing that we should just\ngo and emulate? Or is client Go a specific implementation,\nand there's a general Kubernetes spec for",
    "start": "1797509",
    "end": "1805799"
  },
  {
    "text": "what config loading looks like? There was a project I was dealing with the\nother day.",
    "start": "1805799",
    "end": "1814710"
  },
  {
    "text": "It was the cue language. There's this lovely statement that says there's\nnot actually a spec for cue as a language.",
    "start": "1814710",
    "end": "1822200"
  },
  {
    "text": "There's just a reference implementation. That's your spec, but it's imperative, not\ndeclarative.",
    "start": "1822200",
    "end": "1827699"
  },
  {
    "text": "It's a spec that executes, that could be understood\nby machines. I feel it’s always the same: should you\nhave documented all of the arguments and environments",
    "start": "1827699",
    "end": "1838638"
  },
  {
    "text": "and runtime configured of kubectl? Should you have documented the API? There's all the proto-driven stuff.",
    "start": "1838639",
    "end": "1845429"
  },
  {
    "text": "Kubernetes is fairly IDL, API first. There's always that tradeoff between, do we\nsit down and design something upfront, document",
    "start": "1845429",
    "end": "1854360"
  },
  {
    "text": "it and say, \"We have a spec. We have an API, implementation is an implementation\ndetail.",
    "start": "1854360",
    "end": "1860239"
  },
  {
    "text": "Literally, it's an exercise for the reader.\" Or do you deliver code? Do you make something work and then try to\npick up these pieces five years later?",
    "start": "1860239",
    "end": "1867868"
  },
  {
    "text": "When we implemented local exec in a pod, the\nweb sockets implementation of that, including",
    "start": "1867869",
    "end": "1881759"
  },
  {
    "text": "the error codes and all the numbers for the\nstreams, we didn’t document it.",
    "start": "1881759",
    "end": "1887759"
  },
  {
    "text": "The only way you can figure it out is by going\nand reading the Go source code that sits in the API server.",
    "start": "1887759",
    "end": "1893520"
  },
  {
    "text": "And to make matters worse, there's also a\nSPDY implementation.",
    "start": "1893520",
    "end": "1899099"
  },
  {
    "text": "And the SPDY implementation is the one that\nkubectl actually uses. They have this undocumented WebSockets API\nthat most people don't use.",
    "start": "1899099",
    "end": "1909919"
  },
  {
    "text": "It turns out that in most programming languages,\nit's way easier to do WebSockets than it is",
    "start": "1909919",
    "end": "1918549"
  },
  {
    "text": "to do SPDY because SPDY is deprecated. All the client libraries ended up using WebSockets.",
    "start": "1918549",
    "end": "1924850"
  },
  {
    "text": "Assuming hilarity of poor documentation and\nnobody testing it. It can't be proxied and doesn't really support\nOAuth properly.",
    "start": "1924850",
    "end": "1934609"
  },
  {
    "text": "Yes, there's that too. There are some errors that you hit where people\ntried to do WebSockets through their HTTP",
    "start": "1934609",
    "end": "1941349"
  },
  {
    "text": "proxy and they didn't know that it was with\nNginx or whatever the IT person set up that doesn't handle WebSockets properly.",
    "start": "1941349",
    "end": "1948839"
  },
  {
    "text": "Lots of fun bugs. It is one of the things that are really valuable,\nit keeps you living the experience of both",
    "start": "1948839",
    "end": "1960570"
  },
  {
    "text": "your customers and your developers on your\nteams. One of the perils you have as you run bigger\nand bigger teams, is you get abstracted away",
    "start": "1960570",
    "end": "1969350"
  },
  {
    "text": "from the friction, things that make their\nlives unpleasant.",
    "start": "1969350",
    "end": "1977460"
  },
  {
    "text": "Somebody who's looking for promotion goes\nand solves that problem for you, and you never",
    "start": "1977460",
    "end": "1982640"
  },
  {
    "text": "even see it. Yes, it's invaluable to sit in and live the\nexperience of people.",
    "start": "1982640",
    "end": "1990139"
  },
  {
    "text": "Be on the front lines of helping somebody\nwith your issue queue and stuff like that.",
    "start": "1990139",
    "end": "1996869"
  },
  {
    "text": "For sure. It does sound like a really interesting place\nto be. I'm thinking of the way you can construct\na client Go context in a thousand different",
    "start": "1996869",
    "end": "2006528"
  },
  {
    "text": "ways. Presumably, each one was just PR-ed by one\nperson who’s maybe in a cluster or in a",
    "start": "2006529",
    "end": "2012440"
  },
  {
    "text": "test rig, or local. And maybe the API server is mocked, and they\nare not using OAuth, because it's on loopback",
    "start": "2012440",
    "end": "2019539"
  },
  {
    "text": "and there's a function for that. You just call it and you work it out. And none of the other client libraries obviously\nhave that, because the guy who gets you to",
    "start": "2019539",
    "end": "2028529"
  },
  {
    "text": "go onside gets the most attention. But you can do this sort of archeology can't\nyou? \"Somebody had this requirement one day, but\nI wonder how many other people's production",
    "start": "2028529",
    "end": "2035100"
  },
  {
    "text": "systems now rely on that.\" Yes, and another one that's like that is multi-cube\nconfig loading.",
    "start": "2035100",
    "end": "2043349"
  },
  {
    "text": "I rely on that so much. There's some controversy about whether it\nwas ever a good idea to do it, but it got",
    "start": "2043349",
    "end": "2050470"
  },
  {
    "text": "in and people use it. You can have multiple kube configs in the\nsame kube config path. None of the client libraries support it.",
    "start": "2050470",
    "end": "2056830"
  },
  {
    "text": "Nope. Except for client Go. It's because it's totally un-spec'd.",
    "start": "2056830",
    "end": "2063658"
  },
  {
    "text": "The implementation in Go is incredibly long\nand it’s hard to know exactly what it does.",
    "start": "2063659",
    "end": "2070319"
  },
  {
    "text": "Every once in a while somebody will pop up\nand say it doesn't work. We then need to say \"Yes, sorry, that's just\nnot happening.\"",
    "start": "2070320",
    "end": "2076240"
  },
  {
    "text": "It's like 5% of users and it would be wicked\ncomplicated to figure it out.",
    "start": "2076240",
    "end": "2083840"
  },
  {
    "text": "Someone else showed up recently and was like,\n\"I'm constructing a config from scratch in",
    "start": "2083840",
    "end": "2089840"
  },
  {
    "text": "the client. Why do I have to specify a context, a user\nand a cluster config?",
    "start": "2089840",
    "end": "2096240"
  },
  {
    "text": "Why can't I just give you the cluster config,\nand you can run through it blindly and there's",
    "start": "2096240",
    "end": "2102760"
  },
  {
    "text": "no OAuth. I don't want you to do OAuth and you're making\nme specify this user with empty OAuth.\"",
    "start": "2102760",
    "end": "2108790"
  },
  {
    "text": "We decided to do that. But at what level is this? How hard is it for you to put in an empty\nuser?",
    "start": "2108790",
    "end": "2118520"
  },
  {
    "text": "There's all the little details of people's\nuse cases. I had exactly that on my bashrc builds, a\nkubeconfig colon-separated path.",
    "start": "2118520",
    "end": "2130540"
  },
  {
    "text": "That's the thing that's undocumented but works\nreally well for my use case. I used K9S or something, written in Python,\nbut it just didn't work.",
    "start": "2130540",
    "end": "2139210"
  },
  {
    "text": "To bring us slightly back on track, now Kubernetes\nis a mature stable project, I don't want to",
    "start": "2139210",
    "end": "2146040"
  },
  {
    "start": "2143000",
    "end": "2495000"
  },
  {
    "text": "use the word enterprise-grade, because it\nsounds derogatory, that's trying to address a wide audience.",
    "start": "2146040",
    "end": "2154480"
  },
  {
    "text": "You have a lot of strategic influence from\nthe work you've done in the past and the position",
    "start": "2154480",
    "end": "2160460"
  },
  {
    "text": "you have now, where does Kubernetes go? Is there a big focus on developer ergonomics\nand trying to bring everybody into the fold?",
    "start": "2160460",
    "end": "2171080"
  },
  {
    "text": "Whatever operating system you're on, whatever\nlanguage you want to use, addressing this particularly to somebody who works with Microsoft,\ndo you have a good time with it?",
    "start": "2171080",
    "end": "2179620"
  },
  {
    "text": "Or are we kind of saying, \"Well look, actually\nonly 1% of the people are doing this work",
    "start": "2179620",
    "end": "2184700"
  },
  {
    "text": "and everybody else is realistically going\nto be interacting with Kubernetes at a completely different level of abstraction.",
    "start": "2184700",
    "end": "2190010"
  },
  {
    "text": "The people who are doing this, there’s good\nGo bindings, there's good Python bindings, use one of those libraries and get over it.",
    "start": "2190010",
    "end": "2199210"
  },
  {
    "text": "Deliver some value and move on. It feels like it was a very grassroots sort\nof road to success for Kubernetes.",
    "start": "2199210",
    "end": "2208750"
  },
  {
    "text": "It was really cool, and it was componentizing\nrun on Linux. It was very accessible and as a senior engineer\nat the time, it was my Friday afternoon R&D",
    "start": "2208750",
    "end": "2218150"
  },
  {
    "text": "project that I spent a bit of time on and\nreally liked it. When I showed my boss it went from there.",
    "start": "2218150",
    "end": "2224839"
  },
  {
    "text": "This wasn't a product that came shrink-wrapped\nand with Super Bowl adverts. Correct me if I'm wrong, but I feel like a\nlot of Kubernetes' success came from a grassroots",
    "start": "2224840",
    "end": "2235210"
  },
  {
    "text": "developer first, you know sophisticated user\nfirst. Is that something you all are still concentrating\non or is that now the engine room?",
    "start": "2235210",
    "end": "2243950"
  },
  {
    "text": "And are you thinking everybody else is going\nto have a completely different experience",
    "start": "2243950",
    "end": "2249089"
  },
  {
    "text": "with it? I would answer it in a different way: I think\nboth are very important.",
    "start": "2249090",
    "end": "2255230"
  },
  {
    "text": "One of the things we did very early on is\nto sort out what we're not. We're not intending to be a PaaS.",
    "start": "2255230",
    "end": "2260710"
  },
  {
    "text": "We're not going to go be Heroku. We draw a line.",
    "start": "2260710",
    "end": "2266510"
  },
  {
    "text": "We're the kernel if you will. I do think that a lot of people are going\nto and should interact with it at a higher",
    "start": "2266510",
    "end": "2275140"
  },
  {
    "text": "level. We as in Azure have no code solutions now,\nthey're run on top of Kubernetes.",
    "start": "2275140",
    "end": "2280520"
  },
  {
    "text": "We have functions-as-a-service. Many people have built functions-as-a-service\nthat run on top of Kubernetes. And I think that's right, what's valuable\nis actually that ability to move up and down",
    "start": "2280520",
    "end": "2292309"
  },
  {
    "text": "and inter-operate. It used to be that if you're in a functions-as-a-service\nenvironment and you want to do service discovery",
    "start": "2292310",
    "end": "2298280"
  },
  {
    "text": "into something running in a raw container\nor on a raw VM, like good luck, right? You're putting it on a public internet and\nyou're dealing with that whole thing. ",
    "start": "2298280",
    "end": "2305320"
  },
  {
    "text": "The beauty of being in Kubernetes is that\na lot of the primitives are the same.",
    "start": "2305320",
    "end": "2312070"
  },
  {
    "text": "You may be using a functions-as-a-service,\nbut it's still a container image. All that vulnerability scanning that you were\ndoing still works the same as if it were a",
    "start": "2312070",
    "end": "2318980"
  },
  {
    "text": "vanilla image. The service discovery, the secrets management,\nit all works the same.",
    "start": "2318980",
    "end": "2325119"
  },
  {
    "text": "I don't think it's going to be an either-or. It's not like people are going to be up in\nthe Heroku layer, or they're going to be down",
    "start": "2325120",
    "end": "2332491"
  },
  {
    "text": "in the Kubernetes layer. I think that you're going to see it being\nmore like a traditional operating system where",
    "start": "2332491",
    "end": "2339610"
  },
  {
    "text": "sometimes you're going to write something\nin Bash and sometimes you're going to write something in C, and sometimes you're going\nto write something in Python.",
    "start": "2339610",
    "end": "2346849"
  },
  {
    "text": "They're all going to work together through\nthe same signals and the same threads and the same infrastructure.",
    "start": "2346850",
    "end": "2354490"
  },
  {
    "text": "I think that's the real value. I mean even sophisticated developers want\nto use unsophisticated, easy-to-use tools",
    "start": "2354490",
    "end": "2364289"
  },
  {
    "text": "for certain things. The important thing is the ability to move\nbetween them and find the right tool for the",
    "start": "2364290",
    "end": "2371390"
  },
  {
    "text": "right job. That's our focus, and I think the great thing\nabout the Kubernetes design is that we can",
    "start": "2371390",
    "end": "2379240"
  },
  {
    "text": "do all that independent iteration on top,\nand other people can do it too. We can build a really good ecosystem where\nthe tools that are useful to most people succeed,",
    "start": "2379240",
    "end": "2389360"
  },
  {
    "text": "and the other tools fall away. When you mentioned the custom resources at\nthe beginning, this is why I pushed so hard",
    "start": "2389360",
    "end": "2399390"
  },
  {
    "text": "for them to start with. It was clear that stuff was going to get built\non top of the system.",
    "start": "2399390",
    "end": "2410150"
  },
  {
    "text": "And if everything had to be built into the\nsystem, we were going to hit stasis so fast",
    "start": "2410150",
    "end": "2416950"
  },
  {
    "text": "where we just couldn't make any more decisions. Where people are saying, “I need this!” We're already seeing it with all the storage\nproviders and all the network providers who",
    "start": "2416950",
    "end": "2425900"
  },
  {
    "text": "wanted to come in. It was horrible. Getting all these extensibility places in\nthe right places meant you could let go and",
    "start": "2425900",
    "end": "2433170"
  },
  {
    "text": "say, \"Okay, ecosystem, go nuts. Let us know when something wins, and we'll\nstart bringing it back into the core.\"",
    "start": "2433170",
    "end": "2441150"
  },
  {
    "text": "There's been a lot of that. With the CNI, the CSI and also the work that\nwas done with cert-manager.",
    "start": "2441150",
    "end": "2448190"
  },
  {
    "text": "The first time somebody said, \"Hey, I want\nto be an API server too. So can we separate the business logic that's\nbaked in, the first-class knowledge of the",
    "start": "2448190",
    "end": "2459150"
  },
  {
    "text": "built-in resources from the library code that\nactually serves APIs?\" I think it was cert-manager, right?",
    "start": "2459150",
    "end": "2464160"
  },
  {
    "text": "There's a few of those. That initiative was going on for a long time. It was very hard to rip it out.",
    "start": "2464160",
    "end": "2469840"
  },
  {
    "text": "I don't know who the first one to actually\nuse it was. It definitely was a lot of work to isolate\nthe API server code.",
    "start": "2469840",
    "end": "2475810"
  },
  {
    "text": "That happened for a long, long time. That's a good example of engineering we should\nhave done up front.",
    "start": "2475810",
    "end": "2487569"
  },
  {
    "text": "If we'd modularized it right up front we would\nhave done it right.",
    "start": "2487570",
    "end": "2495030"
  },
  {
    "start": "2495000",
    "end": "2767000"
  },
  {
    "text": "Obviously I have a question: is there anything\nyou'd do differently?",
    "start": "2495030",
    "end": "2501240"
  },
  {
    "text": "If I look at the service meshes, I look at\nIstio, Linkerd, it's pretty obvious that one",
    "start": "2501240",
    "end": "2514080"
  },
  {
    "text": "of them wants to be a product that's supported,\nthat's easy to use, that has a nice clean ergonomic interface.",
    "start": "2514080",
    "end": "2519840"
  },
  {
    "text": "And one wants to be a platform. A Swiss army knife of tooling that I can build\non top of.",
    "start": "2519840",
    "end": "2526460"
  },
  {
    "text": "Was Kubernetes ever consciously aiming for\none or another. Tim Hockin has talked quite a lot about that,\nthe kernel distribution model.",
    "start": "2526460",
    "end": "2537440"
  },
  {
    "text": "Do you want to expand on that a little bit? What's your view on it?",
    "start": "2537440",
    "end": "2542900"
  },
  {
    "text": "We wanted it to be usable in the sense that\nwe were never going to get adoption if it wasn't easy to use.",
    "start": "2542900",
    "end": "2550160"
  },
  {
    "text": "I also think that we never intended it to\nbe a PaaS.",
    "start": "2550160",
    "end": "2555420"
  },
  {
    "text": "It was always intended to be infrastructure. We've always thought of it as the two concepts\nthat have all of the sorts of rung true for",
    "start": "2555420",
    "end": "2562339"
  },
  {
    "text": "us are that it is application-oriented infrastructure. Instead of previous cloud APIs, which I would\nsay are like physical infrastructure oriented,",
    "start": "2562340",
    "end": "2572510"
  },
  {
    "text": "they were like, it's a machine, or it's a\ndisc, or it's a network. It's not an application concept, it's a physical\nconcept.",
    "start": "2572510",
    "end": "2579610"
  },
  {
    "text": "The Kubernetes APIs are really oriented around\nconcepts that you care about as an application developer or maintainer, services and replicas\nand deployments and things like that.",
    "start": "2579610",
    "end": "2590020"
  },
  {
    "text": "It was definitely an infrastructure API, it's\njust a different kind of IS API.",
    "start": "2590020",
    "end": "2597230"
  },
  {
    "text": "We all said that it was POSIX. When you think of POSIX it was POSIX for the\ncloud.",
    "start": "2597230",
    "end": "2605180"
  },
  {
    "text": "That is the ideal that you're shooting for. And when you think about what POS-X is, it\nis intended for end-users at some level, but",
    "start": "2605180",
    "end": "2616150"
  },
  {
    "text": "most of the people who interact with it are\ngoing to interact with it through higher-level constructs.  Ultimately we thought that people would build\non top.That is why we added a lot of extensibility.",
    "start": "2616150",
    "end": "2641750"
  },
  {
    "text": "I think we never want it to be the whole vertical\nbecause if you look at functions-as-a-service",
    "start": "2641750",
    "end": "2649080"
  },
  {
    "text": "or other kinds of verticalized PaaS solutions,\nthey have really horrible models where if",
    "start": "2649080",
    "end": "2656220"
  },
  {
    "text": "you hit the limits, you have to eject down\nto something very, very low level. They don't have this notion of gradual degradation\nor even service interconnection between the",
    "start": "2656220",
    "end": "2665360"
  },
  {
    "text": "complicated bits and the easy bits. And that was clear to us even then. We wanted to build for modularity, so that\nthere's a nice, easy steppingstone function",
    "start": "2665360",
    "end": "2675480"
  },
  {
    "text": "downward or upward from infrastructure to\nplatform as a service. I don't think we fully achieved that, frankly.",
    "start": "2675480",
    "end": "2682730"
  },
  {
    "text": "I think there's a lot in the middle between\nKubernetes and a FaaS service that doesn't",
    "start": "2682730",
    "end": "2687830"
  },
  {
    "text": "exist today. We're trying to build them. But people have definitely built it.",
    "start": "2687830",
    "end": "2693859"
  },
  {
    "text": "And then there are distributions. I use that loosely, I guess, to take it further.",
    "start": "2693860",
    "end": "2701020"
  },
  {
    "text": "I'm thinking about something like Anthos specifically,\nwhich is, Kubernetes plus Istio plus functions,",
    "start": "2701020",
    "end": "2706870"
  },
  {
    "text": "given that it's a Knative server.",
    "start": "2706870",
    "end": "2712190"
  },
  {
    "text": "It's fairly monolithic, I guess, is what I\nwould say. You wouldn't look at that like it's Java or\n.Net where it's modular in the middle you",
    "start": "2712190",
    "end": "2723740"
  },
  {
    "text": "can do with it what you want. It doesn't necessarily have opinions but it's\nclearly a little bit more abstract than being",
    "start": "2723740",
    "end": "2729330"
  },
  {
    "text": "down in C land. It's not as abstract as maybe being up in\nNodeJS or Python or Visual Basic. ",
    "start": "2729330",
    "end": "2737390"
  },
  {
    "text": "But what do a lot of Python modules do? They're just a wrapper and they actually link\nagainst a C library.",
    "start": "2737390",
    "end": "2744820"
  },
  {
    "text": "Yes, exactly. I think that's sort of the piece that's in\nsome ways missing in Kubernetes, that linking",
    "start": "2744820",
    "end": "2751300"
  },
  {
    "text": "layer that says there's all this complicated\nview underneath you. Here's the easy-to-use and there are these\nindividual examples.",
    "start": "2751300",
    "end": "2757069"
  },
  {
    "text": "I think cert manager, you mentioned, is a\ngreat individual example of something like that, but it's not a standard library-ish\nkind of thing.",
    "start": "2757070",
    "end": "2763119"
  },
  {
    "text": "You don't see the pattern. No. What about WASM? Oh, the WASM stuff is super cool.",
    "start": "2763120",
    "end": "2769040"
  },
  {
    "start": "2767000",
    "end": "2814000"
  },
  {
    "text": "We can do a whole other thing on that someday. If I want to alter the Scheduler, I have to\nfork it, rebuild it.",
    "start": "2769040",
    "end": "2774970"
  },
  {
    "text": "The code is modular, but I can't plug it at\nrun time.",
    "start": "2774970",
    "end": "2780460"
  },
  {
    "text": "I have to fork and rebuild. When am I gonna be able to sling WASM? That's funny.",
    "start": "2780460",
    "end": "2785550"
  },
  {
    "text": "You talked about Go earlier, it's because\nGo never had dynamic loading. Right, and hence the CNI, it's gRPC of a loopback,\nbasically, right?.",
    "start": "2785550",
    "end": "2791240"
  },
  {
    "text": "Exactly. So some of this stuff would have happened\nmore easily if Go had some capabilities. I was going to ask about your relationship\nwith Rob Pike and his team, and whether you were giving them requirements, they were giving\nyou requirements. There's so much we could talk about. But I think we need to end it there.",
    "start": "2791240",
    "end": "2797240"
  },
  {
    "text": "Brendan, this has been great fun. And I have a whole list of questions. I didn't get to that.",
    "start": "2797240",
    "end": "2803119"
  },
  {
    "text": "I might just email you or something. Fantastic. I'm happy to answer them on Twitter. Now. This is, this has been super cool.",
    "start": "2803120",
    "end": "2808740"
  },
  {
    "text": "Thank you. Thank you so much. Take care, folks. Bye. Thank you. Bye now.",
    "start": "2808740",
    "end": "2813742"
  }
]