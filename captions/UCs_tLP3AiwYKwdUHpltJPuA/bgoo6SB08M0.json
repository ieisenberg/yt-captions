[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "okay well hello my name's James as has already been pointing out I'm going to",
    "start": "10330",
    "end": "15859"
  },
  {
    "text": "be talking today about building systems that are never done so this talk is",
    "start": "15859",
    "end": "20900"
  },
  {
    "text": "really about it it's really about me thinking about all the practices I've",
    "start": "20900",
    "end": "25939"
  },
  {
    "text": "learned over the years as a software engineer as a developer and whether they're applicable in the world of",
    "start": "25939",
    "end": "32418"
  },
  {
    "text": "building micro services that's that's really what this talks about why is it called never done well never done",
    "start": "32419",
    "end": "42020"
  },
  {
    "start": "40000",
    "end": "330000"
  },
  {
    "text": "there's a number of meanings right the first meaning I've never done is",
    "start": "42020",
    "end": "47590"
  },
  {
    "text": "something that's incomplete right so do I mean when I talk about building",
    "start": "47590",
    "end": "52760"
  },
  {
    "text": "systems that are never done that were building systems that are incomplete going back to that chaos report update",
    "start": "52760",
    "end": "59450"
  },
  {
    "text": "from this morning you know I don't want to be in that 50 odd percent of of developers who are building building",
    "start": "59450",
    "end": "66049"
  },
  {
    "text": "software that never that never works or never gets into production so I don't really mean this this is not what I mean",
    "start": "66049",
    "end": "71750"
  },
  {
    "text": "by never done instead I've been thinking about what it means to build systems",
    "start": "71750",
    "end": "78080"
  },
  {
    "text": "that stand that last right that stand the test of time and for me actually",
    "start": "78080",
    "end": "84110"
  },
  {
    "text": "this is where micro-services started where I started getting interested in this it was in response to talking with",
    "start": "84110",
    "end": "92180"
  },
  {
    "text": "quite a few people from different software communities so that the domain driven design community the sort of",
    "start": "92180",
    "end": "98570"
  },
  {
    "text": "integration community so people like Judy to harm people like jimmy neilson",
    "start": "98570",
    "end": "105640"
  },
  {
    "text": "people in this and web integration community so the rest community in the messaging community and we sort of got",
    "start": "105640",
    "end": "111680"
  },
  {
    "text": "together as a group as a bunch of people and so we were talking about systems and",
    "start": "111680",
    "end": "117560"
  },
  {
    "text": "why systems are getting so big but pretty much we spent three days trying",
    "start": "117560",
    "end": "122840"
  },
  {
    "text": "to understand why we were all building products that we hadn't then replaced after a couple of years and for me that",
    "start": "122840",
    "end": "129649"
  },
  {
    "text": "that was the key it's like what is it about these systems that means of the applications that we build that the",
    "start": "129649",
    "end": "136310"
  },
  {
    "text": "systems that we're building that means they don't last more than more than two to three to four years we",
    "start": "136310",
    "end": "141320"
  },
  {
    "text": "have to throw them away we have to go back to go back to our management teams our execs and ask for another 10 million",
    "start": "141320",
    "end": "148250"
  },
  {
    "text": "euros to rebuild something so I'm trying to think of never done in that in in the",
    "start": "148250",
    "end": "155780"
  },
  {
    "text": "sense of building systems that that last that stand the test of time so instead",
    "start": "155780",
    "end": "162200"
  },
  {
    "text": "of this different this definition of them has been incomplete I'm going to",
    "start": "162200",
    "end": "167390"
  },
  {
    "text": "use this definition from a terry pratchet book the fifth element so terry",
    "start": "167390",
    "end": "173660"
  },
  {
    "text": "pratchet is a british fantasy author he passed away sadly a couple of months ago but he's written over 40 books one of",
    "start": "173660",
    "end": "181220"
  },
  {
    "text": "which is the Fifth Element elephant and in this in this book he describes a",
    "start": "181220",
    "end": "186470"
  },
  {
    "text": "story it's a dwarf with a big long beard and an axe telling a story about his",
    "start": "186470",
    "end": "191840"
  },
  {
    "text": "family's axe and this is how I kind of think about its building building",
    "start": "191840",
    "end": "197420"
  },
  {
    "text": "systems these days about building systems that are never done and he describes his family's axe right he says",
    "start": "197420",
    "end": "203440"
  },
  {
    "text": "he says this this axe has been in my family for 900 years this is my family's",
    "start": "203440",
    "end": "208880"
  },
  {
    "text": "axe and to paraphrase of course over time every part of this axis changed",
    "start": "208880",
    "end": "214220"
  },
  {
    "text": "I've we've replaced the handle we've replaced the blade of the axe sometimes we've had a carve some new gifts into",
    "start": "214220",
    "end": "221090"
  },
  {
    "text": "the handle sometimes we've replaced the handle again sometimes we've replaced the head again but is this not my",
    "start": "221090",
    "end": "227630"
  },
  {
    "text": "family's axe 900 years later and this is a retelling of a story where it's an",
    "start": "227630",
    "end": "233060"
  },
  {
    "text": "ancient sort of philosophical thought experiment the ship of thieve thebes and the thought experiment there is is",
    "start": "233060",
    "end": "240170"
  },
  {
    "text": "it this if you have a ship that last 300 years and every single piece of that",
    "start": "240170",
    "end": "245180"
  },
  {
    "text": "ship has been replaced over those 300 years at the end of the three hundred years when there's nothing left of the",
    "start": "245180",
    "end": "251330"
  },
  {
    "text": "original ship is it still the same ship Terry Pratchett uses this in the my",
    "start": "251330",
    "end": "256579"
  },
  {
    "text": "family's act and I think that's how we should be thinking about building systems Chad Fowler I saw him speak",
    "start": "256580",
    "end": "262040"
  },
  {
    "text": "recently he he had a nice phrase he said boy in Nice ID said we need to reclaim the word legacy his legacy and IT is",
    "start": "262040",
    "end": "270740"
  },
  {
    "text": "terribly bad connotations you know legacy is a bad thing legacy code is is a bad thing",
    "start": "270740",
    "end": "277000"
  },
  {
    "text": "legacy systems are bad things and I'm charge was saying well what we need to do is actually look at legacy in a",
    "start": "277000",
    "end": "283340"
  },
  {
    "text": "positive light like Mozart or Bach left a legacy they left a positive legacy like we want to leave a legacy to our",
    "start": "283340",
    "end": "290570"
  },
  {
    "text": "our our children we want to leave them something that's positive not not",
    "start": "290570",
    "end": "296090"
  },
  {
    "text": "negative and so this idea of reclaiming legacy this idea of building systems",
    "start": "296090",
    "end": "301370"
  },
  {
    "text": "that lasts that span that span decent length of time but composed of smaller",
    "start": "301370",
    "end": "308479"
  },
  {
    "text": "systems composed of microservices that can be individually replaced that's what",
    "start": "308479",
    "end": "314780"
  },
  {
    "text": "I mean by building software that's never done building software that where the system as a whole the system as a whole",
    "start": "314780",
    "end": "320840"
  },
  {
    "text": "lasts for a period of time a long period of time but the individual components of which can be can be changed or are",
    "start": "320840",
    "end": "328490"
  },
  {
    "text": "changed over time Fred if you hear the",
    "start": "328490",
    "end": "335840"
  },
  {
    "start": "330000",
    "end": "503000"
  },
  {
    "text": "talk a minute ago Fred was talking about one of the reasons we might want to whoops might want to use microservices",
    "start": "335840",
    "end": "342229"
  },
  {
    "text": "or the reason that people are talking about microservices Adriane Cockroft and netflix is very clear in this they want",
    "start": "342229",
    "end": "347630"
  },
  {
    "text": "to use fine-grained service-oriented architectures because they want to go as fast as possible we want to go faster",
    "start": "347630",
    "end": "355099"
  },
  {
    "text": "for all the all the reasons we heard about earlier so you know competitive competitors startups are taking our",
    "start": "355099",
    "end": "362180"
  },
  {
    "text": "market share needing to get inside our competitors decision-making cycle to",
    "start": "362180",
    "end": "367580"
  },
  {
    "text": "innovate faster than them we need to be able to go go as fast as possible and in",
    "start": "367580",
    "end": "373010"
  },
  {
    "text": "theory micro services should on us to do that as well as being systems that last they should allow us to make changes",
    "start": "373010",
    "end": "378500"
  },
  {
    "text": "really really quickly and we had examples earlier of our of an architectural of an of an implementation",
    "start": "378500",
    "end": "384949"
  },
  {
    "text": "of an microservice architecture which allows you to do that so this is what I",
    "start": "384949",
    "end": "393110"
  },
  {
    "text": "kind of would hope for from a micro services based architecture well you know they should be cheap to replace over time they should be quick to scale",
    "start": "393110",
    "end": "401120"
  },
  {
    "text": "we should be able to bring stuff up and bring stuff down and they should be robust resilient able to withstand failure",
    "start": "401120",
    "end": "407210"
  },
  {
    "text": "the old line the internet is not a five-nines fabric has never been more appropriate and this should allow us to",
    "start": "407210",
    "end": "413659"
  },
  {
    "text": "go as fast as possible so I'm going to cover quickly some of the same ground",
    "start": "413659",
    "end": "418999"
  },
  {
    "text": "that Fred did not much of it though so this is a quote from from Neal Ford you",
    "start": "418999",
    "end": "424309"
  },
  {
    "text": "know us answering the question or attempting to answer the question why now and Neal's Mill's response to this",
    "start": "424309",
    "end": "430069"
  },
  {
    "text": "question was well it's the first post DevOps architectural style it's the first the first attempt we've made as an",
    "start": "430069",
    "end": "436460"
  },
  {
    "text": "industry and post this post of DevOps movement the DevOps culture developing the building running culture developing",
    "start": "436460",
    "end": "443199"
  },
  {
    "text": "to develop an architectural style give up to develop systems differently Dan",
    "start": "443199",
    "end": "449870"
  },
  {
    "text": "North who's another former colleague like what Fred and many others who have been involved in this community he's got",
    "start": "449870",
    "end": "455389"
  },
  {
    "text": "a different take on microservices in fact he hates the name micro-services he thinks it's a terrible name he prefers",
    "start": "455389",
    "end": "463219"
  },
  {
    "text": "the much less snappy in my opinion but no less no less valid replaceable",
    "start": "463219",
    "end": "469039"
  },
  {
    "text": "component architecture that's what we're talking about with microservices replaceable components architectures",
    "start": "469039",
    "end": "474680"
  },
  {
    "text": "systems that are never done that can be changed over time dan wolf lost the",
    "start": "474680",
    "end": "481189"
  },
  {
    "text": "naming battle turns out when Martin Fowler named something it stays named so",
    "start": "481189",
    "end": "488959"
  },
  {
    "text": "sorry Dan and it's interesting because there's another theme running through",
    "start": "488959",
    "end": "495379"
  },
  {
    "text": "Fred's talk was about how we're learning how we're we're learning how to build these these systems composed of of",
    "start": "495379",
    "end": "501529"
  },
  {
    "text": "smaller systems and in some ways the future is quite scary and I'm just going",
    "start": "501529",
    "end": "507379"
  },
  {
    "start": "503000",
    "end": "620000"
  },
  {
    "text": "to take a moment to explain what I mean by this future that we're living in or the feature that we're about to live in",
    "start": "507379",
    "end": "513500"
  },
  {
    "text": "or something being a little scary so",
    "start": "513500",
    "end": "519680"
  },
  {
    "text": "this is a quote from some decades ago now it's attributed to John von Neumann",
    "start": "519680",
    "end": "527959"
  },
  {
    "text": "a Poland Polish mathematician called stanislav Stanislaw ulam who worked",
    "start": "527959",
    "end": "535250"
  },
  {
    "text": "closely with newman recorded a conversation he had where newman talked to",
    "start": "535250",
    "end": "540450"
  },
  {
    "text": "the concept of a singularity a technological singularity based on the",
    "start": "540450",
    "end": "545820"
  },
  {
    "text": "fact that computer hardware for example was getting faster he says ever",
    "start": "545820",
    "end": "551280"
  },
  {
    "text": "accelerating progress and changes in the mode of human life gives us gives the",
    "start": "551280",
    "end": "558030"
  },
  {
    "text": "appearance of approaching some essential singularity in the history of the race",
    "start": "558030",
    "end": "563190"
  },
  {
    "text": "beyond which human affairs as we know them could not continue now I've seen a single arity with my own eyes and it",
    "start": "563190",
    "end": "568740"
  },
  {
    "text": "happened a couple of years ago this is a panel at go to our who's and it's",
    "start": "568740",
    "end": "576330"
  },
  {
    "text": "interesting because go to our who's that year was a couple of two years ago I think the feedback that was gotten from",
    "start": "576330",
    "end": "581550"
  },
  {
    "text": "the from the people who were attending the conference was a long a long a theme",
    "start": "581550",
    "end": "587760"
  },
  {
    "text": "of why don't the the speakers tell us what to do there were lots of conference talks about about different technologies",
    "start": "587760",
    "end": "594930"
  },
  {
    "text": "and about different techniques things like microservices but no one had any concrete answers really to give and this",
    "start": "594930",
    "end": "600960"
  },
  {
    "text": "is kind of this weird singularity where a lot of the most well-known people in in in our industry but kind of shrugging",
    "start": "600960",
    "end": "608490"
  },
  {
    "text": "their shoulders a bit and saying we we don't really know what's going to happen at the moment there's all these tools",
    "start": "608490",
    "end": "614070"
  },
  {
    "text": "being developed there's all this new these new practices these new principles this new styles so one of these I mean",
    "start": "614070",
    "end": "622860"
  },
  {
    "text": "you might recognize this this is from a few years ago but it was it wondered where it was probably last year that the",
    "start": "622860",
    "end": "628830"
  },
  {
    "text": "JavaScript singularity happened you can't walk past a JavaScript developer",
    "start": "628830",
    "end": "633900"
  },
  {
    "text": "without three new MVC libraries falling out that pocket right JavaScript has just exploded but also know similarly",
    "start": "633900",
    "end": "642560"
  },
  {
    "text": "containers have it will hopefully not exploded versus the container technology and companies developing containers and",
    "start": "642560",
    "end": "649560"
  },
  {
    "text": "different container solutions based solutions are exploding there's this kind of weird container similarity and",
    "start": "649560",
    "end": "656730"
  },
  {
    "text": "as mentioned earlier I'm a part of the thought Wix technology advisory board and we've put together this TechRadar",
    "start": "656730",
    "end": "662280"
  },
  {
    "text": "and we've noticed another one and the other one we've noticed is to do with things like log aggregation so long",
    "start": "662280",
    "end": "669000"
  },
  {
    "text": "aggregation singularity you can't you can't talk to someone who in operations or loss of",
    "start": "669000",
    "end": "675950"
  },
  {
    "text": "personnel develops role these days without them telling you like 15 different log aggregation families you",
    "start": "675950",
    "end": "681690"
  },
  {
    "text": "should be using the ELQ stack no no we're going to be using log log stash and key barlen no no no you need to buy",
    "start": "681690",
    "end": "687240"
  },
  {
    "text": "spunk to which the answer is have you got how much money have you got right because spunk will essentially suck all",
    "start": "687240",
    "end": "693480"
  },
  {
    "text": "your money out of you so you better be able to replace it quite quickly but there's these different singularities",
    "start": "693480",
    "end": "699029"
  },
  {
    "text": "that we're sort of experiencing and as well as that there's this sort of micro",
    "start": "699029",
    "end": "705720"
  },
  {
    "text": "service singularity occurring so sort of closer to home for us how we designed",
    "start": "705720",
    "end": "711450"
  },
  {
    "text": "software is definitely changing based on based on all these different tools being developed the practices the principles",
    "start": "711450",
    "end": "717360"
  },
  {
    "text": "and as I mentioned a minute ago you know when Martin names something it stays names this is our attempt Martin my",
    "start": "717360",
    "end": "725519"
  },
  {
    "text": "attempt to describe the characteristics of a microscopists architectural style so we were very clear here we weren't",
    "start": "725519",
    "end": "732570"
  },
  {
    "text": "trying to define what micro services are we were trying to describe what we were",
    "start": "732570",
    "end": "738449"
  },
  {
    "text": "seeing teams do in the wild we talked",
    "start": "738449",
    "end": "744420"
  },
  {
    "text": "about containerization buy services organized around business capabilities and so on and that's great because teams",
    "start": "744420",
    "end": "751170"
  },
  {
    "text": "are having lots and lots of success right with the micro services style there are many many software exists and",
    "start": "751170",
    "end": "756750"
  },
  {
    "text": "existence proofs of companies that are having success with this start from the",
    "start": "756750",
    "end": "761850"
  },
  {
    "text": "big the Netflix's and the Twitter's and the googles and the eBay's and the papers etc to the smaller ones to the",
    "start": "761850",
    "end": "768269"
  },
  {
    "text": "startups who are building building out micro services based architectures but",
    "start": "768269",
    "end": "775220"
  },
  {
    "start": "776000",
    "end": "1014000"
  },
  {
    "text": "there are some really hard problems to solve with microservices the first one I",
    "start": "777110",
    "end": "782360"
  },
  {
    "text": "think is a really hard problem is how did you do end-to-end testing when you're building out a micro service",
    "start": "782360",
    "end": "787610"
  },
  {
    "text": "based architectures so this is something that we have gotten used to over a period of time and in our industry the",
    "start": "787610",
    "end": "793970"
  },
  {
    "text": "ability to you know to run essentially product level tests where we we test from the outside in maybe using a",
    "start": "793970",
    "end": "800060"
  },
  {
    "text": "browser or something or maybe driving an API and that's gonna test all of our code or at least test the happy path",
    "start": "800060",
    "end": "805880"
  },
  {
    "text": "maybe your user journeys through our codebase this kind of automated end-to-end testing is really valuable",
    "start": "805880",
    "end": "811670"
  },
  {
    "text": "for us to know whether our software is working or not it gives us feedback as part of our build cycle really really",
    "start": "811670",
    "end": "816860"
  },
  {
    "text": "useful the next thing is how do we deploy these things independently how do we avoid having to deploy lots of small",
    "start": "816860",
    "end": "825050"
  },
  {
    "text": "things in lockstep because the danger of course when you separate applications",
    "start": "825050",
    "end": "831500"
  },
  {
    "text": "out into many small micro services is that you go from a monolithic big ball",
    "start": "831500",
    "end": "837019"
  },
  {
    "text": "of mud full of spaghetti code to a distributed monolith and distributed big",
    "start": "837019",
    "end": "842300"
  },
  {
    "text": "ball of mud where everything is tightly coupled and you had to deploy everything together we don't want that we want to",
    "start": "842300",
    "end": "849230"
  },
  {
    "text": "avoid doing things like deploying in lot lockstep how do we do that and the next",
    "start": "849230",
    "end": "856130"
  },
  {
    "text": "thing is we hit a little about this a minute ago how do we do service versioning how do we evolve these these",
    "start": "856130",
    "end": "862610"
  },
  {
    "text": "services independently given that we want to be deploying them on their own given that we want or given that it's",
    "start": "862610",
    "end": "868519"
  },
  {
    "text": "difficult to test them end to end yeah and these are real problems and we're",
    "start": "868519",
    "end": "873680"
  },
  {
    "text": "learning how to solve them I don't think if anyone tells you they've got the answer to this that they're that they're",
    "start": "873680",
    "end": "880820"
  },
  {
    "text": "telling you the truth if I'm honest I'm also a consultant by the way so it depends is my default response to this",
    "start": "880820",
    "end": "888320"
  },
  {
    "text": "but how do we do this and do we have approaches and this led me to thinking about whether we have whether we can",
    "start": "888320",
    "end": "897410"
  },
  {
    "text": "still rely on some of the other tools in our toolbox I'll talk about that in a moment",
    "start": "897410",
    "end": "904240"
  },
  {
    "text": "so what do I mean by testing microservices it is hard so we've got a couple of services years as a quick",
    "start": "904240",
    "end": "909880"
  },
  {
    "text": "example I'm from using that the test pyramid so",
    "start": "909880",
    "end": "917050"
  },
  {
    "text": "large tests medium and small small probably unit testing larger the kind of end-to-end test your product tests I'm",
    "start": "917050",
    "end": "924220"
  },
  {
    "text": "calling them large not something like end to end because it's it's a bit like the VY Emacs battle right if you if you",
    "start": "924220",
    "end": "931210"
  },
  {
    "text": "say end-to-end someone else wants to call them user journey tests or acceptance tests or integration tests or",
    "start": "931210",
    "end": "936339"
  },
  {
    "text": "whatever so large tests test that that test the execute and cover a lot of our",
    "start": "936339",
    "end": "941980"
  },
  {
    "text": "application a lot of our product and in that sort of scenario we want to write a",
    "start": "941980",
    "end": "949900"
  },
  {
    "text": "test which is going to drive one of our services and it's going to need to integrate with another one of our services so what's so hard about that",
    "start": "949900",
    "end": "956670"
  },
  {
    "text": "well suddenly we have to think about creating environments to deploy these",
    "start": "956670",
    "end": "962770"
  },
  {
    "text": "things into deploying lots of different things into it's fine if you've got to maybe what if you've got a thousand",
    "start": "962770",
    "end": "967870"
  },
  {
    "text": "different services can you write an end-to-end test that when you commit some code and code passes through your",
    "start": "967870",
    "end": "974740"
  },
  {
    "text": "build pipeline which will be executed against the new piece of the new service",
    "start": "974740",
    "end": "979779"
  },
  {
    "text": "and a thousand of its dependencies in some kind of test environment how do you",
    "start": "979779",
    "end": "985959"
  },
  {
    "text": "actually do that that's quite tricky and what we've sort of been talking about really over the",
    "start": "985959",
    "end": "991600"
  },
  {
    "text": "last couple years is not doing that so actually always testing these things in",
    "start": "991600",
    "end": "996700"
  },
  {
    "text": "isolation as part of the quote end-to-end testing so doing away in some",
    "start": "996700",
    "end": "1002370"
  },
  {
    "text": "ways with integration testing and integration environment instead using stubs social stubbing out any external",
    "start": "1002370",
    "end": "1008850"
  },
  {
    "text": "dependencies in a service another thing",
    "start": "1008850",
    "end": "1015000"
  },
  {
    "start": "1014000",
    "end": "1197000"
  },
  {
    "text": "that's quite hard and this is quite a subtle point is it into this this not",
    "start": "1015000",
    "end": "1021029"
  },
  {
    "text": "only the testing the end-to-end testing of these services the product level testing of these services becoming difficult but integrating these services",
    "start": "1021029",
    "end": "1027770"
  },
  {
    "text": "building them independently services will pass through or total pass through",
    "start": "1027770",
    "end": "1034860"
  },
  {
    "text": "build pipeline in stages this is generally happens when we write software these days and we're following them Tania's delivery practices and that's fine when",
    "start": "1034860",
    "end": "1042439"
  },
  {
    "text": "you've got a big application because you have a build pipeline and it passes through it and then gets deployed potentially automatically into",
    "start": "1042440",
    "end": "1047600"
  },
  {
    "text": "production that's brilliant it's been verified it works but suddenly if you've got ten build pipelines or a hundred",
    "start": "1047600",
    "end": "1054890"
  },
  {
    "text": "build pipelines and all these services are talking with one another potentially",
    "start": "1054890",
    "end": "1060220"
  },
  {
    "text": "how do we make that work but one way the traditional way would be to fan-in and",
    "start": "1060220",
    "end": "1066110"
  },
  {
    "text": "deploy these things into an integration environment we'll deploy them into some integration testing environment and run",
    "start": "1066110",
    "end": "1072290"
  },
  {
    "text": "a set of integration tests against it which is fine if you've got a very small",
    "start": "1072290",
    "end": "1077780"
  },
  {
    "text": "number of things but when as I say you",
    "start": "1077780",
    "end": "1083000"
  },
  {
    "text": "end up with lots of these things I'm having the same problem with with the",
    "start": "1083000",
    "end": "1088640"
  },
  {
    "text": "clickers as Fred did standing over there so I'll move back when you've got lots of these things this becomes almost",
    "start": "1088640",
    "end": "1095540"
  },
  {
    "text": "geometrically more complicated because",
    "start": "1095540",
    "end": "1100760"
  },
  {
    "text": "what we're having to do when each one of these things changes is deploy the integration environment run some tests",
    "start": "1100760",
    "end": "1105770"
  },
  {
    "text": "against them for what happens with the race condition of me committing or another team committing code to another",
    "start": "1105770",
    "end": "1111650"
  },
  {
    "text": "one of the services which passes through its own build pipeline does it go into the same integration environment what happens if it over writes a version that",
    "start": "1111650",
    "end": "1120070"
  },
  {
    "text": "another pipeline is depending on well maybe we'll have to create another",
    "start": "1120070",
    "end": "1125150"
  },
  {
    "text": "integration test environment well we'll have the integration tests for each each",
    "start": "1125150",
    "end": "1130850"
  },
  {
    "text": "of the individual pipelines is based on its production dependencies and then",
    "start": "1130850",
    "end": "1136130"
  },
  {
    "text": "we'll we'll push into that and run some integration tests against the production versions what happens about the deadlock",
    "start": "1136130",
    "end": "1143210"
  },
  {
    "text": "and the race condition rather do we create another integration environment",
    "start": "1143210",
    "end": "1148520"
  },
  {
    "text": "per build pipelines so we suddenly have to with snapshot dependencies and all the production dependencies suddenly it",
    "start": "1148520",
    "end": "1155660"
  },
  {
    "text": "starts to get very complicated if you've got 10 services you're talking it in using that approach you've got to",
    "start": "1155660",
    "end": "1161750"
  },
  {
    "text": "integration environments to build pipeline times the number of services so",
    "start": "1161750",
    "end": "1167480"
  },
  {
    "text": "that's you know it's kind of complicated so maybe these are examples of some of",
    "start": "1167480",
    "end": "1175000"
  },
  {
    "text": "the practices that we've been following as part of you using XP the XP practices",
    "start": "1175000",
    "end": "1181090"
  },
  {
    "text": "and things that aren't necessarily longer that that valid and I'll talk",
    "start": "1181090",
    "end": "1187990"
  },
  {
    "text": "about some approaches to addressing this later on but as I say I was thinking",
    "start": "1187990",
    "end": "1193150"
  },
  {
    "text": "about then the other practices we've come to rely on and yeah I work for",
    "start": "1193150",
    "end": "1198429"
  },
  {
    "start": "1197000",
    "end": "1469000"
  },
  {
    "text": "thought works as as has been mentioned and whilst we're a agile small a shop so we don't we don't really say well you",
    "start": "1198429",
    "end": "1205419"
  },
  {
    "text": "know we're we're a scrum shop or whatever but the thing I think we probably all would agree on is that were we're an extreme programming shop we've",
    "start": "1205419",
    "end": "1213640"
  },
  {
    "text": "had program on pretty much on everything we're yeah we used tests written development we design our code through",
    "start": "1213640",
    "end": "1220299"
  },
  {
    "text": "tests we follow a load of the principles that you might expect from from XP and",
    "start": "1220299",
    "end": "1226630"
  },
  {
    "text": "from things like software craftsmanship clean code formatting programmer so emergent design and Gang of Four design",
    "start": "1226630",
    "end": "1233260"
  },
  {
    "text": "patterns keep it simple stupid the grasp",
    "start": "1233260",
    "end": "1238299"
  },
  {
    "text": "patterns these are all tools that have been in our toolkit for a quite a long period of time like things like",
    "start": "1238299",
    "end": "1243669"
  },
  {
    "text": "integration testing like things like integration environments are these still",
    "start": "1243669",
    "end": "1254260"
  },
  {
    "text": "valid when we're building systems composers of small micro services that's",
    "start": "1254260",
    "end": "1260260"
  },
  {
    "text": "what I was thinking I was chatting with a with a friend over in the States guy",
    "start": "1260260",
    "end": "1266440"
  },
  {
    "text": "called Russ Olson who's an awesome dude he did a fantastic talk at skew Khan London I think it was it was called to",
    "start": "1266440",
    "end": "1273640"
  },
  {
    "text": "the moon and it was about him remember his him remembering the the Apollo moon",
    "start": "1273640",
    "end": "1279669"
  },
  {
    "text": "landings and what we as engineers can take from the Apollo moon landings and the engineering that went into them",
    "start": "1279669",
    "end": "1285610"
  },
  {
    "text": "fantastic fantastic he wrote and I'd recommend looking it up to the moon but Russ Russ told me this other story about",
    "start": "1285610",
    "end": "1293640"
  },
  {
    "text": "about NASA and about the early stages of our you know about manned space exploration and he tell me about this",
    "start": "1293640",
    "end": "1301549"
  },
  {
    "text": "this thing this is the JIT this is part of the Gemini project and with the Gemini project they initially wanted to",
    "start": "1301549",
    "end": "1309590"
  },
  {
    "text": "land it on a runway using a hang glider right that might sound a bit strange but",
    "start": "1309590",
    "end": "1316129"
  },
  {
    "text": "if you think back to the yeah I guess",
    "start": "1316129",
    "end": "1321159"
  },
  {
    "text": "early 60s NASA was composed of a bunch of people who were essentially aeronautical engineers and pilots so",
    "start": "1321159",
    "end": "1328639"
  },
  {
    "text": "that's what the Masen was made up of and when they were tasked with designing a space ship that was gonna essentially go",
    "start": "1328639",
    "end": "1336139"
  },
  {
    "text": "into space be launched into space over the earth and then land back again there's a as a test essentially for the",
    "start": "1336139",
    "end": "1341480"
  },
  {
    "text": "Apollo program going to the moon the aeronautical engineer and the pilots reverted to what they what they kind of",
    "start": "1341480",
    "end": "1347929"
  },
  {
    "text": "knew best and that was landing planes on runways they were kind of in this very closed environment and this this kind of",
    "start": "1347929",
    "end": "1354379"
  },
  {
    "text": "made sense to them based on their experiences and then something funny happened and that was a program manager",
    "start": "1354379",
    "end": "1361700"
  },
  {
    "text": "came from externally to the group and he took a look at their plans actually this this kind of did work by the way this",
    "start": "1361700",
    "end": "1368359"
  },
  {
    "text": "did land the Gemini capsule was able to go to space and land on a using a hang",
    "start": "1368359",
    "end": "1375169"
  },
  {
    "text": "glider but this project manager kind of took a look at this program manager took a look at this and he said well he basically",
    "start": "1375169",
    "end": "1381559"
  },
  {
    "text": "said are you insane um these sort of come in from outside and eat some this",
    "start": "1381559",
    "end": "1386600"
  },
  {
    "text": "is a crazy kind of approach to solving these problems what you want to be doing",
    "start": "1386600",
    "end": "1391669"
  },
  {
    "text": "because it's much easier much cheaper and much safer for everyone involved is to basically strap a couple of big",
    "start": "1391669",
    "end": "1397730"
  },
  {
    "text": "parachutes on the top and drop drop it into the sea and then we'll we'll collect it and that's what ended up",
    "start": "1397730",
    "end": "1403549"
  },
  {
    "text": "happening that's what ended up happening with with Apollo as well so I was",
    "start": "1403549",
    "end": "1408679"
  },
  {
    "text": "thinking about this this idea of someone externally coming in and looking at looking at our practices and their ISM",
    "start": "1408679",
    "end": "1415090"
  },
  {
    "text": "and also this idea of chunking up levels of abstraction so we've got micro services we've got all the practices we",
    "start": "1415090",
    "end": "1421850"
  },
  {
    "text": "understand about how to write clean code how to write you know well designed well blah design say of your oriented code",
    "start": "1421850",
    "end": "1427669"
  },
  {
    "text": "well what does that look like in the context of chunking up to the level of micro services and micro services based",
    "start": "1427669",
    "end": "1433369"
  },
  {
    "text": "architectures how to think about that and that's what the rest of this is about and what I thought was essentially",
    "start": "1433369",
    "end": "1439040"
  },
  {
    "text": "it's Turtles all the way down it's Turtles all the way from objects functions all the way up to systems of",
    "start": "1439040",
    "end": "1447350"
  },
  {
    "text": "systems and so I'm going to explain maybe my reasoning and maybe explain why some of the things we've come to rely on",
    "start": "1447350",
    "end": "1452630"
  },
  {
    "text": "in my opinion after thinking a bit about this are still valid",
    "start": "1452630",
    "end": "1458530"
  },
  {
    "text": "so the first thing I want to talk about is out of this big group of big group of",
    "start": "1458530",
    "end": "1464150"
  },
  {
    "text": "techniques I won't cover them all I might talk about world of warcraft at the end if people really want me to and",
    "start": "1464150",
    "end": "1469550"
  },
  {
    "start": "1469000",
    "end": "1616000"
  },
  {
    "text": "the first thing I'm going to talk about is the agony so now the hands up in the room for people who have come across the",
    "start": "1469550",
    "end": "1478130"
  },
  {
    "text": "agony you aren't going to need it alright this is a fairly common",
    "start": "1478130",
    "end": "1485140"
  },
  {
    "text": "principle by which you know people especially extreme programmers agile",
    "start": "1485140",
    "end": "1490640"
  },
  {
    "text": "agile developers kind of approached the idea of of writing code I mean for media",
    "start": "1490640",
    "end": "1496700"
  },
  {
    "text": "acnes is actually about test-driven development more than anything so I learned about the yagna principle from a",
    "start": "1496700",
    "end": "1501800"
  },
  {
    "text": "few colleagues where you know if you're test-driving your code even even a even",
    "start": "1501800",
    "end": "1508790"
  },
  {
    "text": "a variable created that isn't needed by your tests is essentially the agony you",
    "start": "1508790",
    "end": "1514280"
  },
  {
    "text": "know you aren't going to need it get rid of it it's waste and Martin Fowler has recently described this in her in an",
    "start": "1514280",
    "end": "1519740"
  },
  {
    "text": "article and it describes this three four types of waste that you get with the",
    "start": "1519740",
    "end": "1526940"
  },
  {
    "text": "acting right so the important one from my example that introducing an extra",
    "start": "1526940",
    "end": "1534110"
  },
  {
    "text": "variable even even if you don't think that's like a big deal in your code it actually increases the cost of carry of",
    "start": "1534110",
    "end": "1540320"
  },
  {
    "text": "your code base it increases the amount of stuff you have by definition and overtime that stuff accrues unless you",
    "start": "1540320",
    "end": "1547550"
  },
  {
    "text": "fix your broken windows it will crew in a crew and a crew and you end up with calamity so we actually like code was",
    "start": "1547550",
    "end": "1554480"
  },
  {
    "text": "thinking does the acne apply when we're building out microservices applications I I think it does I think it definitely",
    "start": "1554480",
    "end": "1560060"
  },
  {
    "text": "does in the sense that what we want to be doing when we're building microservices is not building stuff out",
    "start": "1560060",
    "end": "1567470"
  },
  {
    "text": "ahead of time that we need and this might be obvious but you'd",
    "start": "1567470",
    "end": "1573500"
  },
  {
    "text": "be surprised at the number of ivory tower types who've moved into building",
    "start": "1573500",
    "end": "1579500"
  },
  {
    "text": "micro-services who say right what we're going to do now is design all of our micro services right now often do it in",
    "start": "1579500",
    "end": "1586610"
  },
  {
    "text": "my opinion that's not gonna work the approach I think we should still take is",
    "start": "1586610",
    "end": "1591860"
  },
  {
    "text": "that you aren't going to need it build out things when you need it when you need them only when you need them so initially build out one service",
    "start": "1591860",
    "end": "1599450"
  },
  {
    "text": "and then when you need to build out another one maybe the code base is too complex maybe maybe for other factors may be",
    "start": "1599450",
    "end": "1607160"
  },
  {
    "text": "non-functional factors build out without the next service that's I think this",
    "start": "1607160",
    "end": "1613100"
  },
  {
    "text": "answer and almost to the idea of do we start with the monolith or not but crucially the Agni is applies to micro",
    "start": "1613100",
    "end": "1620780"
  },
  {
    "start": "1616000",
    "end": "2139000"
  },
  {
    "text": "services architectures is all about building things out when you need them not designing up front again so for me",
    "start": "1620780",
    "end": "1626630"
  },
  {
    "text": "that kind of still holds this is this is",
    "start": "1626630",
    "end": "1631880"
  },
  {
    "text": "a set of patterns that seems to have fallen out of general not use because",
    "start": "1631880",
    "end": "1636890"
  },
  {
    "text": "people still recognize the importance but of people's collective memory hands",
    "start": "1636890",
    "end": "1641929"
  },
  {
    "text": "up if you've come across grasp yeah it's kind of interesting so this is well I",
    "start": "1641929",
    "end": "1648380"
  },
  {
    "text": "first started getting interested in sort of design the Gang of Four and all these things I was introduced to grasp and",
    "start": "1648380",
    "end": "1655280"
  },
  {
    "text": "it's the stands from the general responsibility assignment in software patterns pretty sure about that right",
    "start": "1655280",
    "end": "1662809"
  },
  {
    "text": "and they were developed by a guy called Craig lahrman who became I guess more well known later on for writing books",
    "start": "1662809",
    "end": "1668240"
  },
  {
    "text": "about agile management techniques as all software development and management managing as all software projects but",
    "start": "1668240",
    "end": "1675470"
  },
  {
    "text": "from grasp we get a couple of really really well-known and kind of obvious",
    "start": "1675470",
    "end": "1680980"
  },
  {
    "text": "patterns that are PI at the level of micro services I'm gonna illustrate this was with an example so I was at a client",
    "start": "1680980",
    "end": "1687710"
  },
  {
    "text": "of ours last year last summer and they were an interesting place",
    "start": "1687710",
    "end": "1694320"
  },
  {
    "text": "because they've been building one set of services out in India and one set of services in the UK I had a big team in",
    "start": "1694320",
    "end": "1702090"
  },
  {
    "text": "India a big team in the UK and meet them either by luck or boring a happy chance",
    "start": "1702090",
    "end": "1708120"
  },
  {
    "text": "each of these different locations were building out a particular capability right so in India it was building one",
    "start": "1708120",
    "end": "1715350"
  },
  {
    "text": "thing a very discrete thing and in London they were building another discrete thing there were kind of a",
    "start": "1715350",
    "end": "1721380"
  },
  {
    "text": "travel company they sell tickets for things so one place was building the bit",
    "start": "1721380",
    "end": "1726390"
  },
  {
    "text": "this well you could buy tickets as a customer and the other bit was building the bit where you got send the ticket",
    "start": "1726390",
    "end": "1732120"
  },
  {
    "text": "right essentially retail fulfilment there's other more complicated stuff in",
    "start": "1732120",
    "end": "1737460"
  },
  {
    "text": "the middle as well but yeah that's pretty much it we tell and fulfilment and the really nice thing about this and",
    "start": "1737460",
    "end": "1744900"
  },
  {
    "text": "I think maybe the obvious thing that happens and again whether by luck or judgment or some other Samar's or",
    "start": "1744900",
    "end": "1753630"
  },
  {
    "text": "something else they'd ended up with this solution where they had a big thing in",
    "start": "1753630",
    "end": "1759630"
  },
  {
    "text": "London and a big thing in India with a bus in the middle and they were passing messages across between the two",
    "start": "1759630",
    "end": "1767360"
  },
  {
    "text": "incidentally Simon Brown if you know him hates my architecture diagrams and this",
    "start": "1768410",
    "end": "1775080"
  },
  {
    "text": "is an example actually of two patterns from grasp so grass talked about in an",
    "start": "1775080",
    "end": "1780540"
  },
  {
    "text": "ideal world we want to have highly adhesive software and loosely coupled software and these two independent",
    "start": "1780540",
    "end": "1788429"
  },
  {
    "text": "capabilities were extremely loosely coupled by this bus in the middle and the message passing it kind of worked",
    "start": "1788429",
    "end": "1795179"
  },
  {
    "text": "out really really well the two two teams could operate independently deploy test independently and so on so absolutely I",
    "start": "1795179",
    "end": "1802020"
  },
  {
    "text": "think when we're building micro services based architectures we want to be looking for high cohesion and low",
    "start": "1802020",
    "end": "1807600"
  },
  {
    "text": "coupling and I think historically we've done a bad job especially at cohesion because what we've tended to do is focus",
    "start": "1807600",
    "end": "1814710"
  },
  {
    "text": "on cohesion around technical concerns so we will be cohesive about separate",
    "start": "1814710",
    "end": "1821520"
  },
  {
    "text": "concerns and be he's of about presentation and systems say and so we'll put all the",
    "start": "1821520",
    "end": "1826740"
  },
  {
    "text": "presentation stuff in one place and all the persistence stuff in another place which is kind of cohesive I'm I'm",
    "start": "1826740",
    "end": "1832980"
  },
  {
    "text": "technical concerns but that leads to kind of very tight coupling between business concerns so in this example",
    "start": "1832980",
    "end": "1841290"
  },
  {
    "text": "what we're being is cohesive around the business concerns the business capabilities the actual functional stuff",
    "start": "1841290",
    "end": "1846960"
  },
  {
    "text": "that that this thing has to do rather than the technical organization of it that's the next thing the next thing I'm",
    "start": "1846960",
    "end": "1862110"
  },
  {
    "text": "going to talk about is dry so this came up as a question in the last and at the",
    "start": "1862110",
    "end": "1867840"
  },
  {
    "text": "end of the last talk about Fred's talk so don't repeat yourself dry and this is",
    "start": "1867840",
    "end": "1873570"
  },
  {
    "text": "this often comes up should we allow duplication between services or schwöre",
    "start": "1873570",
    "end": "1879810"
  },
  {
    "text": "should we maybe extract some common code extract some common domain libraries and",
    "start": "1879810",
    "end": "1885450"
  },
  {
    "text": "so that we share code between services and so my simple answer is you shouldn't",
    "start": "1885450",
    "end": "1893730"
  },
  {
    "text": "extract common code unless it's very very basic infrastructure type code I explain why so this is the definition of",
    "start": "1893730",
    "end": "1901500"
  },
  {
    "text": "dry this is from prag Dave I believe if he's in the room I'm not sure every",
    "start": "1901500",
    "end": "1908310"
  },
  {
    "text": "piece of knowledge must have a single unambiguous authoritative representation within a system",
    "start": "1908310",
    "end": "1914130"
  },
  {
    "text": "I was thinking does this this is still hold true again for micro services",
    "start": "1914130",
    "end": "1919410"
  },
  {
    "text": "you've heard my answer already but I explain my reasoning so if we've got two",
    "start": "1919410",
    "end": "1925890"
  },
  {
    "text": "services and we've got some shared code indicated by the star in this diagram or",
    "start": "1925890",
    "end": "1931050"
  },
  {
    "text": "common there may be duplication across these things the temptation is to extract that star and say you know what",
    "start": "1931050",
    "end": "1937740"
  },
  {
    "text": "reuse we'll put it into some jar file somewhere or some shared dll we'll stick it in new get these days we'll stick it",
    "start": "1937740",
    "end": "1944010"
  },
  {
    "text": "in in our maven repo and I'm at artifactory repository and then you know",
    "start": "1944010",
    "end": "1949170"
  },
  {
    "text": "whatever needs it can pull it down and they can include it at compile time and then they can be deployed it can be",
    "start": "1949170",
    "end": "1955500"
  },
  {
    "text": "deployed but the problem with this is anytime you introduce shared binary dependencies",
    "start": "1955500",
    "end": "1960830"
  },
  {
    "text": "between between people between different services you completely lock their train",
    "start": "1960830",
    "end": "1966530"
  },
  {
    "text": "cycles together and if you I mean if you've ever used wisdom binding for me",
    "start": "1966530",
    "end": "1972590"
  },
  {
    "text": "on the SS deathstar kind of stack never ever use wisdom binding that's where you",
    "start": "1972590",
    "end": "1978230"
  },
  {
    "text": "generate stubs at you generate stubs as a pre-processing step and then include",
    "start": "1978230",
    "end": "1984919"
  },
  {
    "text": "those stubs in your in your application and use those stubs to make calls across the network if you've ever used that",
    "start": "1984919",
    "end": "1991640"
  },
  {
    "text": "you've probably seen the problems with it which is every time one of those services one of those API is change",
    "start": "1991640",
    "end": "1997659"
  },
  {
    "text": "suddenly every single one of your clients is going to recompile and redeploy and this is why we don't",
    "start": "1997659",
    "end": "2005260"
  },
  {
    "text": "or rather my myself and my colleagues at full wigs don't tend to favor using something like wisdom binding but",
    "start": "2005260",
    "end": "2011679"
  },
  {
    "text": "extracting extracting shared domain code gives you exactly the same problem suddenly you're locking you'll change",
    "start": "2011679",
    "end": "2018520"
  },
  {
    "text": "cycles of your software together and if you've got hundreds of microservices and maybe they all share something common",
    "start": "2018520",
    "end": "2024070"
  },
  {
    "text": "called a customer you really don't want to have to be deploying redeploying a hundred things every time your customer",
    "start": "2024070",
    "end": "2030370"
  },
  {
    "text": "gets a new field kind of sucks there are",
    "start": "2030370",
    "end": "2035980"
  },
  {
    "text": "different approaches to addressing this right I mentioned that for example I'm personally okay with extracting out",
    "start": "2035980",
    "end": "2041830"
  },
  {
    "text": "things like shared like shared infrastructure codes if you've got a HTTP client that's probably okay to put",
    "start": "2041830",
    "end": "2048820"
  },
  {
    "text": "into a new get package somewhere go into a jar file if you look at all the Netflix open source too late yeah that's",
    "start": "2048820",
    "end": "2055750"
  },
  {
    "text": "all very specifically generic things like circuit breaker implementation bulbhead implementations monitoring",
    "start": "2055750",
    "end": "2062230"
  },
  {
    "text": "these sorts of things I'm fine with that there's another approach which is to use",
    "start": "2062230",
    "end": "2067990"
  },
  {
    "text": "something called a service template so a lot of the tooling now so things like spring boot or drop wizard go some way",
    "start": "2067990",
    "end": "2073990"
  },
  {
    "text": "towards providing a template you can use to build out services and there are others in other languages but those are",
    "start": "2073990",
    "end": "2079929"
  },
  {
    "text": "the ones I'm most familiar with but what they don't do is give you the domain-specific stuff on that that you",
    "start": "2079929",
    "end": "2086020"
  },
  {
    "text": "require in your organization on top so good practice we found is to extract",
    "start": "2086020",
    "end": "2092618"
  },
  {
    "text": "a service template which contains maybe yeah the way we do login here the way we",
    "start": "2092619",
    "end": "2097750"
  },
  {
    "text": "do monarch monitoring the way we do status pages put that in a shared location and then when you need to",
    "start": "2097750",
    "end": "2104170"
  },
  {
    "text": "create a new service you can just clone it less and get for example two service templates and the reason another one of",
    "start": "2104170",
    "end": "2113920"
  },
  {
    "text": "the reasons that this is a good idea is because essentially if we're not sharing the main code or even if we are sharing",
    "start": "2113920",
    "end": "2120849"
  },
  {
    "text": "the main code each of our services over time is going to change is going to become is going to go through its own",
    "start": "2120849",
    "end": "2128859"
  },
  {
    "text": "set of individual changes they're going to diverge from your service template",
    "start": "2128859",
    "end": "2134260"
  },
  {
    "text": "essentially they're going to go through different trousers on all of bifurcating",
    "start": "2134260",
    "end": "2140140"
  },
  {
    "start": "2139000",
    "end": "2317000"
  },
  {
    "text": "traces of reality and so this is why essentially I've come to this conclusion which is the same one that Fred had",
    "start": "2140140",
    "end": "2145359"
  },
  {
    "text": "which is essentially copy and paste is okay right copy and paste is fine but I still think",
    "start": "2145359",
    "end": "2152380"
  },
  {
    "text": "we should be dry within services so within the individual micro services I think we should still apply at the same",
    "start": "2152380",
    "end": "2158470"
  },
  {
    "text": "set of practices to remove duplication so keep the code clean next up so",
    "start": "2158470",
    "end": "2166930"
  },
  {
    "text": "there's been quite a lot of controversy about test-driven development recently should we do it should we do it at all",
    "start": "2166930",
    "end": "2171970"
  },
  {
    "text": "is it just waste is it just waste I have",
    "start": "2171970",
    "end": "2178690"
  },
  {
    "text": "my own opinions on this and they don't always correspond with some of our other",
    "start": "2178690",
    "end": "2185470"
  },
  {
    "text": "well-known with other well-known people in the UM in here in our industry so test run develop in using test-driven",
    "start": "2185470",
    "end": "2191619"
  },
  {
    "text": "development as a tool for design primarily before I'm not entirely sure I",
    "start": "2191619",
    "end": "2197920"
  },
  {
    "text": "don't know certainly over a decade and I was very lucky because I actually learnt",
    "start": "2197920",
    "end": "2203319"
  },
  {
    "text": "how to write code guided by tests by a bunch of people I work with that thought works well I joined about 10 years ago",
    "start": "2203319",
    "end": "2210250"
  },
  {
    "text": "11 years ago um and as part of learning",
    "start": "2210250",
    "end": "2215349"
  },
  {
    "text": "how to write code guided by tests I noticed a really funny thing which was the code I wrote",
    "start": "2215349",
    "end": "2221750"
  },
  {
    "text": "ended up looking a certain way my people have noticed this if you follow the test I write a test Watson come here provide",
    "start": "2221750",
    "end": "2228590"
  },
  {
    "text": "some code refactor red green refactor cycle but your code ends up looking a",
    "start": "2228590",
    "end": "2233990"
  },
  {
    "text": "certain way in object-oriented languages you end up with small objects generally with small numbers of responsibilities",
    "start": "2233990",
    "end": "2240380"
  },
  {
    "text": "you tend to inject things through constructors dependencies through constructors code looks simple and",
    "start": "2240380",
    "end": "2248119"
  },
  {
    "text": "understandable and over time sometimes I",
    "start": "2248119",
    "end": "2253160"
  },
  {
    "text": "don't use test-driven development exclusively I'm going to be honest sometimes I just think patch things you know what I'm gonna I'm kind of I",
    "start": "2253160",
    "end": "2260119"
  },
  {
    "text": "understand this problem well enough I'll have a test around the outside that that verifies that my software is working",
    "start": "2260119",
    "end": "2266060"
  },
  {
    "text": "although these units of software are working and I'll carry on writing some code but in general over the last 10 11",
    "start": "2266060",
    "end": "2274220"
  },
  {
    "text": "years whatever it is the way I write code has been guided by learning how to do TDD why do I think then test-driven",
    "start": "2274220",
    "end": "2284210"
  },
  {
    "text": "development apart from the fact that it I think it drives clean code why do I think that this is important for micro",
    "start": "2284210",
    "end": "2290390"
  },
  {
    "text": "services well we've already talked a minute ago at the beginning about how end-to-end testing becomes really really hard right so writing lots of these",
    "start": "2290390",
    "end": "2298220"
  },
  {
    "text": "large tests becomes really really difficult I see waiting for me writing more unit",
    "start": "2298220",
    "end": "2303770"
  },
  {
    "text": "tests then isolating these services and writing unit tests for the functionality",
    "start": "2303770",
    "end": "2308900"
  },
  {
    "text": "within them for the code within them becomes more important in that case",
    "start": "2308900",
    "end": "2313780"
  },
  {
    "start": "2317000",
    "end": "2536000"
  },
  {
    "text": "if you haven't read this book it's fantastic burgers mike feathers describes growing object-oriented",
    "start": "2319619",
    "end": "2325929"
  },
  {
    "text": "software guided by tests by an app price and Steve Freeman as as the London School of test-driven development both",
    "start": "2325929",
    "end": "2332919"
  },
  {
    "text": "of both of the authors were at full wigs London when I joined I spent some time",
    "start": "2332919",
    "end": "2337959"
  },
  {
    "text": "met them obviously in some time with them never actually worked on a project with them but this book describes how",
    "start": "2337959",
    "end": "2345489"
  },
  {
    "text": "for which London or the people working within for which London really think about about writing or writing test",
    "start": "2345489",
    "end": "2352959"
  },
  {
    "text": "driven code and how to design your software by writing tests first so it wanted to answer this question or",
    "start": "2352959",
    "end": "2363429"
  },
  {
    "text": "maybe a slightly different question should we bother with test driving our code if we're just gonna throw things",
    "start": "2363429",
    "end": "2368709"
  },
  {
    "text": "away right well building replaceable micro services micro services that we",
    "start": "2368709",
    "end": "2373839"
  },
  {
    "text": "can throw away building system building software that's never done should we bother with it in my opinion I think we",
    "start": "2373839",
    "end": "2380799"
  },
  {
    "text": "should because the value I personally get or I and I see our teams getting",
    "start": "2380799",
    "end": "2386890"
  },
  {
    "text": "from writing tests special unit tests and test driving their code and the",
    "start": "2386890",
    "end": "2392439"
  },
  {
    "text": "importance of having more smaller tests with micro services for me mean I believe we should be and I'm just going",
    "start": "2392439",
    "end": "2401079"
  },
  {
    "text": "to maybe cover off some of the controversies these are the some of the people I was fortunate enough to work with in thought which London so a lot of",
    "start": "2401079",
    "end": "2406989"
  },
  {
    "text": "these people have become fairly well-known either in the testing community the design community the architecture communities so for example",
    "start": "2406989",
    "end": "2413679"
  },
  {
    "text": "in that price and Steve Freeman wrote that book down north you know originator of BVD liske here",
    "start": "2413679",
    "end": "2420969"
  },
  {
    "text": "she's got a past award from the agile DeAngelis a bunch of others and over",
    "start": "2420969",
    "end": "2429159"
  },
  {
    "text": "time their opinions about TDD have changed over time a lot of well-known figures in our industry's opinions about",
    "start": "2429159",
    "end": "2434499"
  },
  {
    "text": "QP have changed my feeling as I said is that test driving our code is still very",
    "start": "2434499",
    "end": "2441130"
  },
  {
    "text": "very valuable and I'd like to have maybe terrify the way I think about how maybe some other people talk about TDD",
    "start": "2441130",
    "end": "2448480"
  },
  {
    "text": "this is something called the Dreyfus model of skill acquisition I've been in",
    "start": "2448480",
    "end": "2453550"
  },
  {
    "text": "software for I don't know whatever is 15 not yeah 15 years 16 years I'm not quite",
    "start": "2453550",
    "end": "2459160"
  },
  {
    "text": "a graybeard cuz that's 20 years but I do have a gray beard if that helps so I've",
    "start": "2459160",
    "end": "2465130"
  },
  {
    "text": "been writing software for a little while and in some areas of software development I consider myself an expert",
    "start": "2465130",
    "end": "2470530"
  },
  {
    "text": "on the Dreyfus scale for fishing or an expert probably proficient or expert in",
    "start": "2470530",
    "end": "2476500"
  },
  {
    "text": "test-driven development anyway and a lot of the people who I just mentioned are",
    "start": "2476500",
    "end": "2481960"
  },
  {
    "text": "also experts in test-driven development they've learned the lessons and they're starting to move on their stuff and",
    "start": "2481960",
    "end": "2487150"
  },
  {
    "text": "they've internalized what they've learned around how to write write code guided by tests I guess the reason I'm",
    "start": "2487150",
    "end": "2494020"
  },
  {
    "text": "mentioning this is think carefully before taking the advice that with",
    "start": "2494020",
    "end": "2500710"
  },
  {
    "text": "micro-services suddenly we shouldn't write any wish we shouldn't test drive our pound anymore because a lot of",
    "start": "2500710",
    "end": "2507130"
  },
  {
    "text": "people give an advice although valid advice for for them and for the work they do they're coming from a position",
    "start": "2507130",
    "end": "2514000"
  },
  {
    "text": "of expertise having learned the lessons they already write code in a certain way because they've they've learned how to",
    "start": "2514000",
    "end": "2520030"
  },
  {
    "text": "do that through writing code test first so to sum up summarize should be write",
    "start": "2520030",
    "end": "2526990"
  },
  {
    "text": "unit tests personally I think we should and I think it's more important than ever we need to keep to that test",
    "start": "2526990",
    "end": "2533260"
  },
  {
    "text": "pyramid with lots of small tests at the bottom the next thing is SRP single",
    "start": "2533260",
    "end": "2540220"
  },
  {
    "start": "2536000",
    "end": "2649000"
  },
  {
    "text": "responsibility principle and objects should have a single reason to change was the original statement so my",
    "start": "2540220",
    "end": "2546940"
  },
  {
    "text": "colleague who's now in the former colonies now at near 4j Alastair Jones my software on a team and we came up",
    "start": "2546940",
    "end": "2553450"
  },
  {
    "text": "with this heuristic essentially it's a restatement of SRP and it's a class should be no bigger than my head and",
    "start": "2553450",
    "end": "2559840"
  },
  {
    "text": "this is this is allister's head this is an ear actually at near and their",
    "start": "2559840",
    "end": "2565660"
  },
  {
    "text": "offices in London so this is allister's head and he's checking whether a class is big enough or too big rather and I",
    "start": "2565660",
    "end": "2572050"
  },
  {
    "text": "think on the tweet they decided it was fine but what do we mean by no bigger",
    "start": "2572050",
    "end": "2578320"
  },
  {
    "text": "than a head and how does that apply to micro services well for me send its Turtles all the way up I think it is as you chunk up different levels",
    "start": "2578320",
    "end": "2585009"
  },
  {
    "text": "of abstraction for me the single responsibility principle applies the other state near the other way of",
    "start": "2585009",
    "end": "2591999"
  },
  {
    "text": "looking at them no bigger than my head thing is I should be able to understand everything about an object all right I",
    "start": "2591999",
    "end": "2597549"
  },
  {
    "text": "should be able to consciously actually be able to reason about exactly what all",
    "start": "2597549",
    "end": "2603219"
  },
  {
    "text": "object is doing should have a single responsibility single reason to change and as you chunk up from the level of an",
    "start": "2603219",
    "end": "2608440"
  },
  {
    "text": "object into say service that should have",
    "start": "2608440",
    "end": "2613630"
  },
  {
    "text": "a single responsibility and as you chunk up again to the level of maybe a set of",
    "start": "2613630",
    "end": "2618819"
  },
  {
    "text": "services that our team owns that should have a single responsibility single reason to change as you chunk up again",
    "start": "2618819",
    "end": "2624969"
  },
  {
    "text": "to the level of a system of systems single responsibility and and each level of abstraction you should be able to fit",
    "start": "2624969",
    "end": "2631150"
  },
  {
    "text": "this stuff into your head obviously I can't hold my head up to a monitor and check whether Netflix fits the entire",
    "start": "2631150",
    "end": "2638469"
  },
  {
    "text": "distributed architecture of Netflix is as big as my head but conceptually that's the case so SRP a service should",
    "start": "2638469",
    "end": "2646509"
  },
  {
    "text": "be no bigger than my head the next one kiss hands up kiss keep it simple stupid",
    "start": "2646509",
    "end": "2656009"
  },
  {
    "start": "2649000",
    "end": "2741000"
  },
  {
    "text": "what keep it simple if we're being nice so this is something from the last",
    "start": "2656009",
    "end": "2661599"
  },
  {
    "text": "edition of our technology radar at ThoughtWorks and this is this is where we put application servers on hold now",
    "start": "2661599",
    "end": "2667089"
  },
  {
    "text": "this might this is a bit scary too many people bit scary to ops teams but we were just trying to call out essentially",
    "start": "2667089",
    "end": "2672789"
  },
  {
    "text": "that times have changed we no longer need to use big big iron application",
    "start": "2672789",
    "end": "2678640"
  },
  {
    "text": "servers we no longer need to deploy micro services lots of them into a big application server I'm afraid for those",
    "start": "2678640",
    "end": "2686769"
  },
  {
    "text": "people who are currently on the WebLogic team it's not looking so great and the",
    "start": "2686769",
    "end": "2692680"
  },
  {
    "text": "interesting thing is it's because if you think about it but times have changed right we've gone from having one",
    "start": "2692680",
    "end": "2697900"
  },
  {
    "text": "expensive big machine so that we would put a application server which would",
    "start": "2697900",
    "end": "2703660"
  },
  {
    "text": "manage lots and lots of small of applications on it to having lots and lots of small machines alright this is",
    "start": "2703660",
    "end": "2709779"
  },
  {
    "text": "the movement towards you know aid off the container movement or a single service per machine image a single",
    "start": "2709779",
    "end": "2715390"
  },
  {
    "text": "server for instance on on the honor infrastructure-as-a-service we don't need the heavyweight application servers",
    "start": "2715390",
    "end": "2722260"
  },
  {
    "text": "in that world they just get in the way of testing they make they slows testing down they make continuous delivery harder",
    "start": "2722260",
    "end": "2727450"
  },
  {
    "text": "they make my job is to develop again trying to get code out fast harder application servers on hold when I think",
    "start": "2727450",
    "end": "2737470"
  },
  {
    "text": "about kiss this goes through my head",
    "start": "2737470",
    "end": "2745860"
  },
  {
    "start": "2741000",
    "end": "2924000"
  },
  {
    "text": "WWJD and that probably doesn't make sense but it means what would Joe do so",
    "start": "2745860",
    "end": "2753250"
  },
  {
    "text": "this is Joe warms who I worked with for for a time in full ways and he is by far the most productive developer I've ever",
    "start": "2753250",
    "end": "2759940"
  },
  {
    "text": "met I'm not a big fan of the now they're kind of 10 times productivity thing but Joe on his own is about equivalent to a",
    "start": "2759940",
    "end": "2766000"
  },
  {
    "text": "team of about 10 people so maybe there's some truth in it and when I think about what would what Joe would do what Joe",
    "start": "2766000",
    "end": "2772090"
  },
  {
    "text": "would do is the simplest possible thing he would keep things really really simple if he's faced with a problem he",
    "start": "2772090",
    "end": "2777550"
  },
  {
    "text": "solves it in a very very elegant simple way an example of that is he was on a project he wanted he needed to our he",
    "start": "2777550",
    "end": "2786640"
  },
  {
    "text": "needed to communicate by WebSockets with a client and browser and he was looking around all of the different WebSocket",
    "start": "2786640",
    "end": "2793510"
  },
  {
    "text": "support in the different app servers out there he's kind of big things he's",
    "start": "2793510",
    "end": "2798970"
  },
  {
    "text": "thought now I'm not gonna do that and so what he did instead is he broke his own he wrote his own application server now that sounds crazy all right it sounds",
    "start": "2798970",
    "end": "2805870"
  },
  {
    "text": "crazy that we might go out and and write our own application server but actually",
    "start": "2805870",
    "end": "2811750"
  },
  {
    "text": "sometimes doing things like that is the simplest thing that can possibly work keeping it simple and I'm gonna give you",
    "start": "2811750",
    "end": "2818590"
  },
  {
    "text": "another example of this from a project I was on so we were building out my",
    "start": "2818590",
    "end": "2824590"
  },
  {
    "text": "receiver's architectures for a science publishing site and we had the requirement to to try and visualize our",
    "start": "2824590",
    "end": "2831730"
  },
  {
    "text": "infrastructure we were deploying into AWS and we wanted to visualize our infrastructures we had couple of options",
    "start": "2831730",
    "end": "2837430"
  },
  {
    "text": "one of which was to wait until some of the heavy tool providers were able to",
    "start": "2837430",
    "end": "2842740"
  },
  {
    "text": "support immutable servers and kind of append-only infrastructure this is where",
    "start": "2842740",
    "end": "2848890"
  },
  {
    "text": "servers ago a up and down all the time and lots of the big big software houses don't",
    "start": "2848890",
    "end": "2854050"
  },
  {
    "text": "support Battlestar yet we kid to deploy something like console but in order to production hardening console you're",
    "start": "2854050",
    "end": "2860590"
  },
  {
    "text": "talking about you know five node rings it's quite it's quite complicated to get that and in the meantime until we got",
    "start": "2860590",
    "end": "2866200"
  },
  {
    "text": "there we didn't really understand what was running in production and so two",
    "start": "2866200",
    "end": "2873640"
  },
  {
    "text": "days Mina mate came up with this visualization so this is our production infrastructure doing a Bluegreen deploy",
    "start": "2873640",
    "end": "2880000"
  },
  {
    "text": "if you can see that and we use cron and Python and Bato and PI dot and graph is",
    "start": "2880000",
    "end": "2886380"
  },
  {
    "text": "and this worked right this was the simplest thing that we could do to visualize our infrastructure such that",
    "start": "2886380",
    "end": "2892840"
  },
  {
    "text": "you know our our testers understood well what versions were running that the developers could look at the screen and",
    "start": "2892840",
    "end": "2898060"
  },
  {
    "text": "see all right okay the DNS endpoint has switched over the simplest thing that could possibly work and then eventually",
    "start": "2898060",
    "end": "2904180"
  },
  {
    "text": "we put console in and we've got all the nice dashboards and things so it does",
    "start": "2904180",
    "end": "2909730"
  },
  {
    "text": "keep it simple mean much in this sense I think it still applies I think it still applies in this sense it's always",
    "start": "2909730",
    "end": "2915250"
  },
  {
    "text": "applied which is try and find the simplest solution that we possibly can don't lean towards very big heavyweight",
    "start": "2915250",
    "end": "2921490"
  },
  {
    "text": "solutions do the simplest thing possible so quickly because I've got two minutes",
    "start": "2921490",
    "end": "2928810"
  },
  {
    "start": "2924000",
    "end": "3135000"
  },
  {
    "text": "left I'm going to talk about integration",
    "start": "2928810",
    "end": "2933910"
  },
  {
    "text": "and deployment so I covered those off at the start so if we are in this world where integration testing that all these",
    "start": "2933910",
    "end": "2942580"
  },
  {
    "text": "other practices are kind of still valid what about this kind of integration testing integration environments problem",
    "start": "2942580",
    "end": "2949060"
  },
  {
    "text": "that don't seem to do that to be valid are there other tools we can put into our tool box I think there are so the",
    "start": "2949060",
    "end": "2956380"
  },
  {
    "text": "first thing we can add in is this idea of semantic monitoring so semantic",
    "start": "2956380",
    "end": "2962800"
  },
  {
    "text": "monitoring is where in production we run things that would be normally things like user journey tests or acceptance",
    "start": "2962800",
    "end": "2968890"
  },
  {
    "text": "tests against our production infrastructure so we do testing if you",
    "start": "2968890",
    "end": "2973960"
  },
  {
    "text": "like in production this is not so different from the idea of smoke testing it's just slightly more it's a slightly",
    "start": "2973960",
    "end": "2980920"
  },
  {
    "text": "more disciplined approach there's a big description of it on the bulwarks radar science if they have a look that's the first thing",
    "start": "2980920",
    "end": "2987239"
  },
  {
    "text": "the next thing I think we can do I think there'll be some talk talking about this later is we can try and get feedback for",
    "start": "2987239",
    "end": "2995440"
  },
  {
    "text": "when we break things earlier animations",
    "start": "2995440",
    "end": "3002459"
  },
  {
    "text": "broken earlier you know you know you know you know feedback cycles so we can",
    "start": "3002459",
    "end": "3007859"
  },
  {
    "text": "deploy our software into production and see if it breaks that's one approach and semantic monitoring will tell us if it does buy another thing we want to might",
    "start": "3007859",
    "end": "3014309"
  },
  {
    "text": "want to do is developers is understand a bit bit earlier and so we can write executable contracts for our services",
    "start": "3014309",
    "end": "3020880"
  },
  {
    "text": "and give them to the people who write the services and these are called consumer driven contracts and these can be executed as pal of our build cycle so",
    "start": "3020880",
    "end": "3029729"
  },
  {
    "text": "we buy consumer driven contracts hand them over to our to the providers of services and then when they run their",
    "start": "3029729",
    "end": "3036869"
  },
  {
    "text": "build if if behavior has changed the build breaks sorry to get a bit meta I'm",
    "start": "3036869",
    "end": "3044430"
  },
  {
    "text": "gonna deliberately run over time by a couple of minutes it's a reason being we don't want to completely flood the lunch",
    "start": "3044430",
    "end": "3050369"
  },
  {
    "text": "queues I was asked to do that anyway back to consumer driven contracts it's",
    "start": "3050369",
    "end": "3060119"
  },
  {
    "text": "quite simply what you do is you write a set of expectations as a consumer of a service all right it's an executable",
    "start": "3060119",
    "end": "3066539"
  },
  {
    "text": "format and you include it as part of the build of the services build pipeline",
    "start": "3066539",
    "end": "3071869"
  },
  {
    "text": "simple idea but actually fairly it was revolutionary ten years ago um it hasn't",
    "start": "3071869",
    "end": "3079589"
  },
  {
    "text": "really been adopted until maybe this year last year and now there's tooling available to do this certainly in Ruby synthesis pact which is available on",
    "start": "3079589",
    "end": "3085709"
  },
  {
    "text": "github is an open source tool so the next thing is testing in production I",
    "start": "3085709",
    "end": "3090799"
  },
  {
    "text": "mentioned it briefly what do I mean by testing in production well rather than",
    "start": "3090799",
    "end": "3095969"
  },
  {
    "text": "hue aying as part of a like a formal UAT stage before you we deploy our software all fanning into an integration",
    "start": "3095969",
    "end": "3102150"
  },
  {
    "text": "environment we actually push our software straight into production and test there all right if we've got really",
    "start": "3102150",
    "end": "3108359"
  },
  {
    "text": "good monitoring so we know things aren't gonna break this is a kind of valid approach if we've got that semantic",
    "start": "3108359",
    "end": "3113549"
  },
  {
    "text": "monitoring if we've got from sumer different contracts place so we minimize the number of breaking changes that get there this is",
    "start": "3113549",
    "end": "3120130"
  },
  {
    "text": "gonna work so what this relies on though of course is been able to save our QA is our product managers or product owners",
    "start": "3120130",
    "end": "3126430"
  },
  {
    "text": "are able to are able to log in and how sorry are able to we are able to",
    "start": "3126430",
    "end": "3131500"
  },
  {
    "text": "distinguish who they are so that they can test in production so am I really",
    "start": "3131500",
    "end": "3137740"
  },
  {
    "text": "saying we're gonna do away with integration environments I think a lot of companies who are building micro",
    "start": "3137740",
    "end": "3142930"
  },
  {
    "text": "service architectures already have I think it as you get more of these things I think it's inevitable I think that's",
    "start": "3142930",
    "end": "3148480"
  },
  {
    "text": "just the way you have to go um that's scary I'm sorry just the way it",
    "start": "3148480",
    "end": "3154390"
  },
  {
    "text": "is but this is something that maybe helps deal with the pain this is a real",
    "start": "3154390",
    "end": "3161170"
  },
  {
    "text": "realization I had again it's going back to what we did in your region to have maybe two data centers and we've we have",
    "start": "3161170",
    "end": "3166810"
  },
  {
    "text": "an active and a passive we'd have some software software running them one and then we'd upgrade the other one yeah one was live and one was at warmers one",
    "start": "3166810",
    "end": "3173200"
  },
  {
    "text": "was not these days with elastic infrastructure when we're deploying things into infrastructure as the",
    "start": "3173200",
    "end": "3180160"
  },
  {
    "text": "service providers there is no real sorry",
    "start": "3180160",
    "end": "3185560"
  },
  {
    "text": "there is a difference between deploying into your production environment so sandy understanding something out that's",
    "start": "3185560",
    "end": "3190750"
  },
  {
    "text": "on that's out there that's on the web and they're actually being used by people there's a difference between",
    "start": "3190750",
    "end": "3197170"
  },
  {
    "text": "being live getting live traffic and actually being in production so you can actually deploy as many versions of",
    "start": "3197170",
    "end": "3203020"
  },
  {
    "text": "things as you want into your last rack infrastructure but unless actually uses a using it it's not live so this makes",
    "start": "3203020",
    "end": "3210730"
  },
  {
    "text": "the idea of getting doing away with integration environments a bit less scary right because we can just deploy in the",
    "start": "3210730",
    "end": "3216700"
  },
  {
    "text": "production we can allow our product owners product managers business folk QA s to test things in production and then",
    "start": "3216700",
    "end": "3222790"
  },
  {
    "text": "we can make it live by directing traffic and this is you know ways of doing this",
    "start": "3222790",
    "end": "3228460"
  },
  {
    "text": "including this is canary builds blue green deploys and it's right into a/b testing so",
    "start": "3228460",
    "end": "3236280"
  },
  {
    "text": "finally changing services independently well this is something I sort of learned",
    "start": "3236550",
    "end": "3243240"
  },
  {
    "text": "from talking with a few people in Adrienne Cockcroft in particular if",
    "start": "3243240",
    "end": "3248670"
  },
  {
    "text": "we're going to make a change to a service commit some code it's going to go through into production one of things we have to think about is what is the blast radius of that change",
    "start": "3248670",
    "end": "3255720"
  },
  {
    "text": "right who is that change gonna impact what other services will that change impact and I think there's almost like",
    "start": "3255720",
    "end": "3265350"
  },
  {
    "text": "three levels here the first level is whether the change is limited within",
    "start": "3265350",
    "end": "3270840"
  },
  {
    "text": "your team whether anyone outside of your team is going to be affected because if it's that if it's not gonna expand in",
    "start": "3270840",
    "end": "3277110"
  },
  {
    "text": "the blast radius the blast isn't gonna expand past your team then probably you can handle versioning and change just by",
    "start": "3277110",
    "end": "3283500"
  },
  {
    "text": "talking to people I'm gonna change this you have to change your thing now is that okay yeah fine",
    "start": "3283500",
    "end": "3288630"
  },
  {
    "text": "off we go the next thing is is it limited within a banded context or sorry",
    "start": "3288630",
    "end": "3297450"
  },
  {
    "text": "between bounded context if it is then you might want to think about consumer-driven contracts and maybe",
    "start": "3297450",
    "end": "3303720"
  },
  {
    "text": "semantic versioning these sort of sorts of techniques and the third thing is",
    "start": "3303720",
    "end": "3310070"
  },
  {
    "text": "organizational so if your Google you",
    "start": "3310250",
    "end": "3315390"
  },
  {
    "text": "don't want to be changing the Maps API very often because the blast radius of that is well it's kind of Western civilization as we know it right",
    "start": "3315390",
    "end": "3322160"
  },
  {
    "text": "and the reason I was thinking about this is this book by Thomas Allen they talked about in this he talks about how information flows around in",
    "start": "3322160",
    "end": "3328200"
  },
  {
    "text": "organizations and it's interesting because after about 15 meters or 10 meters away from someone the probabilities of interacting of having",
    "start": "3328200",
    "end": "3334860"
  },
  {
    "text": "serendipitous conversations is practically zero why is this important well you want to limit the change you",
    "start": "3334860",
    "end": "3341940"
  },
  {
    "text": "want to apply different techniques the further away you are from someone and this is again where commas law kicks in",
    "start": "3341940",
    "end": "3347010"
  },
  {
    "text": "so for intercompany integration maybe you're thinking about patterns like semantic versioning but whether when",
    "start": "3347010",
    "end": "3356250"
  },
  {
    "text": "you're talking about change within an organization between teams say your plot",
    "start": "3356250",
    "end": "3361440"
  },
  {
    "text": "applying different different types of things so semantic versioning maybe contract testing tolerant readers",
    "start": "3361440",
    "end": "3367130"
  },
  {
    "text": "and then within teams maybe we're talking about conversational change so",
    "start": "3367130",
    "end": "3372200"
  },
  {
    "text": "I'll change this can you change your thing it's a summer the futures scary",
    "start": "3372200",
    "end": "3377479"
  },
  {
    "text": "right we don't know how to do a lot of this stuff yet to paraphrase Auto sorry to reiterate what fred was saying but at",
    "start": "3377479",
    "end": "3386119"
  },
  {
    "text": "the same time a lot of the stuff we know how to do already still applies I think when we're building micro services so",
    "start": "3386119",
    "end": "3391700"
  },
  {
    "text": "that's kind of a cool thing and also there's a lot of new cool stuff that we can do right and there's a lot of new",
    "start": "3391700",
    "end": "3398390"
  },
  {
    "text": "stuff to learn and frankly one of the reasons I'm in software is because I love learning new stuff so in summary do",
    "start": "3398390",
    "end": "3406609"
  },
  {
    "text": "the simplest possible thing thanks very much",
    "start": "3406609",
    "end": "3411518"
  },
  {
    "text": "you",
    "start": "3423630",
    "end": "3425690"
  }
]