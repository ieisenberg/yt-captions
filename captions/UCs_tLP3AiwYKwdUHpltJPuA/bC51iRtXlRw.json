[
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "so welcome my name is Marcia vishalba like Shane's pronounced correctly I'm a",
    "start": "13860",
    "end": "19680"
  },
  {
    "text": "developer advocate for serverless and I've been doing several less from its early beginnings and today I'm going to",
    "start": "19680",
    "end": "25320"
  },
  {
    "text": "talk about the best practices to design and build event-driven applications as I",
    "start": "25320",
    "end": "30539"
  },
  {
    "text": "say I was building these applications from very early on and there was not many instructions out there on how to do",
    "start": "30539",
    "end": "37079"
  },
  {
    "text": "them and I try to build uh some event-driven applications as well and sometimes I",
    "start": "37079",
    "end": "43440"
  },
  {
    "text": "succeed and sometimes I had many challenges and I would say that most of my challenges started from the beginning",
    "start": "43440",
    "end": "49680"
  },
  {
    "text": "when trying to build this event-driven applications because I didn't know how to design these applications I started",
    "start": "49680",
    "end": "55860"
  },
  {
    "text": "throwing boxes in a paper or in a PowerPoint or whatever you draw your boxes and connecting things around like",
    "start": "55860",
    "end": "63239"
  },
  {
    "text": "we do with normal systems that's how we always start designing let's grab a napkin and start throwing some arrows",
    "start": "63239",
    "end": "69180"
  },
  {
    "text": "but with event-driven applications it didn't work that well let's see an",
    "start": "69180",
    "end": "74460"
  },
  {
    "text": "example this is a application I will be going around through my whole demo today so get familiar with it and you're all",
    "start": "74460",
    "end": "80939"
  },
  {
    "text": "familiar is an e-commerce we get orders we do things in the inventory like get",
    "start": "80939",
    "end": "87240"
  },
  {
    "text": "information from the inventory remove things from the inventory we process payments we do deliveries",
    "start": "87240",
    "end": "93420"
  },
  {
    "text": "all the things that we do uh in an e-commerce so in this example uh",
    "start": "93420",
    "end": "99119"
  },
  {
    "text": "basically we get a new order and then that New Order poof sends an event then",
    "start": "99119",
    "end": "105780"
  },
  {
    "text": "that event triggers a rule and then again and again and now I want to start",
    "start": "105780",
    "end": "111960"
  },
  {
    "text": "changing things and this is not very cheap to change because I need to start moving numbers around so unless I",
    "start": "111960",
    "end": "118619"
  },
  {
    "text": "started my drawing with a nice rubber in my hand or I'm very good at PowerPoint",
    "start": "118619",
    "end": "124380"
  },
  {
    "text": "design then it will get more and more confusing to start changing these things so",
    "start": "124380",
    "end": "130500"
  },
  {
    "text": "this is not very extensible either because now I want to put this in a Wiki",
    "start": "130500",
    "end": "136200"
  },
  {
    "text": "and somebody wants to add a new functionality I need to share this diagram to them so they can start doing",
    "start": "136200",
    "end": "141780"
  },
  {
    "text": "changes and keep track of all the numbering that is going around and it becomes very complex",
    "start": "141780",
    "end": "148379"
  },
  {
    "text": "very fast and this is half of the use case and it's already a mess of arrows and numbers and I don't want to even",
    "start": "148379",
    "end": "153900"
  },
  {
    "text": "know what this will end up and I imagine many of you trying to make this event driven application I can see some people",
    "start": "153900",
    "end": "159480"
  },
  {
    "text": "noting already have faced this problem because this is the way we are trained let's do boxes and arrows and then we",
    "start": "159480",
    "end": "166680"
  },
  {
    "text": "are like [ __ ] I'm going to quote sorry for my English and we go directly to code coding is",
    "start": "166680",
    "end": "173400"
  },
  {
    "text": "easy coding is nicer I don't want to face these drawings these drawings end up in the wiki the first two days nobody",
    "start": "173400",
    "end": "179160"
  },
  {
    "text": "keeps them updated then somebody comes it's like what the event is doing I",
    "start": "179160",
    "end": "184800"
  },
  {
    "text": "don't know let's create a new event whatever uh yeah I know I know the feeling so I",
    "start": "184800",
    "end": "191280"
  },
  {
    "text": "asked Dali you all know Dali don't you it's very trendy right now it's an artificial intelligence that you tell",
    "start": "191280",
    "end": "196620"
  },
  {
    "text": "them something and they draw it for you I don't know which gender to apply to the Ali I'm I'm Latino I'm Spanish",
    "start": "196620",
    "end": "202260"
  },
  {
    "text": "speaker so I like to put there's the things I might refer to he or she or it I don't know what is the right thing to",
    "start": "202260",
    "end": "207659"
  },
  {
    "text": "call it so he asked what is uh eventually applications for you dear",
    "start": "207659",
    "end": "213540"
  },
  {
    "text": "Dali and he draw this and I think this is the perfect representation of whatever and applications are",
    "start": "213540",
    "end": "221050"
  },
  {
    "text": "[Music] oh that's my brain",
    "start": "221050",
    "end": "226560"
  },
  {
    "text": "and yeah that's my brain and that's all of your brain so today I'm going to",
    "start": "226560",
    "end": "231840"
  },
  {
    "text": "teach you a method that works for me and many of the customers are trying to build event driven applications that is",
    "start": "231840",
    "end": "238500"
  },
  {
    "text": "less brain explosive that at the end of the day is what we want we don't want to leave our gray matter in the floor where",
    "start": "238500",
    "end": "244200"
  },
  {
    "text": "we are working we need it for other things like playing games and I will show you this way that is cheap",
    "start": "244200",
    "end": "250860"
  },
  {
    "text": "to do so you can iterate on it and you can iterate on paper and not in your code it's cheap to maintain and it's",
    "start": "250860",
    "end": "257040"
  },
  {
    "text": "easy to extend sounds very magical but you will see and then I will share some best",
    "start": "257040",
    "end": "263340"
  },
  {
    "text": "practices of using a band Bridge so for all of that I need that everybody knows what a band bridge is I know this is an",
    "start": "263340",
    "end": "270180"
  },
  {
    "text": "event driven architecture Conference of a sponsored by AWS so 80 of the room is",
    "start": "270180",
    "end": "275639"
  },
  {
    "text": "super familiar with the eventbridge sorry for that it will be two minutes but I need to get everybody in the same",
    "start": "275639",
    "end": "280979"
  },
  {
    "text": "page I don't want people falling asleep half of my talk is agnostic what technology use but then we will get into",
    "start": "280979",
    "end": "287340"
  },
  {
    "text": "some demos and some coding and things like that and I want you to understand so for the people that know what event",
    "start": "287340",
    "end": "293160"
  },
  {
    "text": "bridge is this is my Twitter handle this is the Ada hashtag while I'm playing very event driven with eventbridge is go",
    "start": "293160",
    "end": "300479"
  },
  {
    "text": "make a nice tweet take a picture and put it online so you use your time for something useful for the rest that want",
    "start": "300479",
    "end": "306780"
  },
  {
    "text": "to know what event bridge is you have two minutes to understand the basics the first one is a band Bridge is a",
    "start": "306780",
    "end": "313800"
  },
  {
    "text": "managed service so it's an event bus I've been doing software architecture and development for 20 years I know I",
    "start": "313800",
    "end": "320220"
  },
  {
    "text": "look young but that's because I live in a wrap paper and I put a lot of cream in my face",
    "start": "320220",
    "end": "325440"
  },
  {
    "text": "and have a lot of makeup uh but yeah I've been in the time where there was event buses in Enterprise architectures",
    "start": "325440",
    "end": "332220"
  },
  {
    "text": "and they were flaky and scary and that's why we stopped using them now we have this amazing technology that is not",
    "start": "332220",
    "end": "338460"
  },
  {
    "text": "flaky and it's not scary but that's the amazing thing of collecting all the events from one source and sending them",
    "start": "338460",
    "end": "344639"
  },
  {
    "text": "to targets and you don't need to scale it it scales magically you don't need to understand how it's configured AWS that",
    "start": "344639",
    "end": "351180"
  },
  {
    "text": "all for you that's the magic of Mana services and at the end of the day it decouples your producers from your consumers",
    "start": "351180",
    "end": "357419"
  },
  {
    "text": "usually producers are consumers and microservice that are producers and our consumers at the same time but the idea",
    "start": "357419",
    "end": "363780"
  },
  {
    "text": "is that you can remove for example the inventory service and you can change it for other service and if it's agree with",
    "start": "363780",
    "end": "370919"
  },
  {
    "text": "the contract that is the schema of the events then we're fine so there is some concept I will be using",
    "start": "370919",
    "end": "377460"
  },
  {
    "text": "multiple times during this talk the first one is a band Source AWS services are event sources S3 will say send an",
    "start": "377460",
    "end": "385500"
  },
  {
    "text": "event to a to eventbridge say hey a new file is created I have an event for you",
    "start": "385500",
    "end": "390960"
  },
  {
    "text": "an alarm will send an event hey a new alarm is created also your custom applications and that's when it becomes",
    "start": "390960",
    "end": "397500"
  },
  {
    "text": "more interesting you can send events to eventbridge and also SAS applications but we are not getting into that monster",
    "start": "397500",
    "end": "403080"
  },
  {
    "text": "yet uh then we have the event buses and those are very important we have the default event bus is where AWS services",
    "start": "403080",
    "end": "410100"
  },
  {
    "text": "will send messages and also your custom applications if you configure them then we have the custom event buses and",
    "start": "410100",
    "end": "416220"
  },
  {
    "text": "that's my favorite place to be is where all the events from your applications can be so you have a nice pipe where all",
    "start": "416220",
    "end": "423720"
  },
  {
    "text": "the events are and you can work with them and then we have the SAS buses but we are not getting in there then we have",
    "start": "423720",
    "end": "429780"
  },
  {
    "text": "the rules and rules are like if the event comes from here take it there and",
    "start": "429780",
    "end": "434819"
  },
  {
    "text": "that's it and then we have targets attached to the rules there are the places that will receive the event you",
    "start": "434819",
    "end": "439919"
  },
  {
    "text": "can invoke a Lambda you can send it to a queue you can send it to many other places so those are important Concepts",
    "start": "439919",
    "end": "445440"
  },
  {
    "text": "how it works well uh Source make an event and the event gets analyzed by all",
    "start": "445440",
    "end": "451919"
  },
  {
    "text": "the rules in the bus and it matches then it goes to the Target and that's kind of what you need to know",
    "start": "451919",
    "end": "458039"
  },
  {
    "text": "about event rich in order to understand the talk now let's go back to agnostic World architecture land and I will tell",
    "start": "458039",
    "end": "464819"
  },
  {
    "text": "you my magic secret to design these applications but not yet stay tuned keep on watching",
    "start": "464819",
    "end": "471120"
  },
  {
    "text": "I want the retention uh I will tell you three things to have in mind before",
    "start": "471120",
    "end": "476220"
  },
  {
    "text": "getting into there that will help you to design these applications the first one is what kind of events you are listening",
    "start": "476220",
    "end": "483599"
  },
  {
    "text": "and if you were here for Dave talk you will get way more out of this because",
    "start": "483599",
    "end": "488759"
  },
  {
    "text": "it's a very brief thing but I want to talk a little bit about the events itself the first one is item potency I'm",
    "start": "488759",
    "end": "495479"
  },
  {
    "text": "not an English speaker so I hope I didn't destroy that word basically it's a mathematical concept when no matter if",
    "start": "495479",
    "end": "502500"
  },
  {
    "text": "you get one and two you always return free that's my always with the same inputs",
    "start": "502500",
    "end": "509160"
  },
  {
    "text": "same outputs and that's why you want your functions to behave or your service or whatever it's the thing",
    "start": "509160",
    "end": "515399"
  },
  {
    "text": "so same events same thing imagine you receive an event hey you need to make a",
    "start": "515399",
    "end": "521279"
  },
  {
    "text": "payment okay I make the payment I process the payment I return payment ID order ID great oh the event comes again",
    "start": "521279",
    "end": "529320"
  },
  {
    "text": "why it come again well because most of these Services have the premise that there will send event once but they may",
    "start": "529320",
    "end": "536820"
  },
  {
    "text": "send it twice because of network issues because I don't know you were lucky and you got it twice but your service needs",
    "start": "536820",
    "end": "543420"
  },
  {
    "text": "to be prepared for this type of things and what you do do you process the payment again maybe no do you send an",
    "start": "543420",
    "end": "550080"
  },
  {
    "text": "error maybe no because your customer doesn't care but your internals are like",
    "start": "550080",
    "end": "555480"
  },
  {
    "text": "that what you do you say okay the payment was processed with exactly the same order already and the same payment",
    "start": "555480",
    "end": "562140"
  },
  {
    "text": "ID for example and then your start having duplications that's why it becomes very important the identity",
    "start": "562140",
    "end": "567779"
  },
  {
    "text": "there is ways to address that but that's a whole talk that you can find on previous remit",
    "start": "567779",
    "end": "573360"
  },
  {
    "text": "then another thing is how events are designed we have different types of event and they've covered this very well",
    "start": "573360",
    "end": "580140"
  },
  {
    "text": "but I will talk about two types there are the sparse events the bands that don't say too much they have as little",
    "start": "580140",
    "end": "586680"
  },
  {
    "text": "information as possible and the full description events these are like me they talk a lot they say everything both",
    "start": "586680",
    "end": "593820"
  },
  {
    "text": "are great but they have their problems and this is important to have in mind when you are designing this application",
    "start": "593820",
    "end": "599760"
  },
  {
    "text": "sports events are great you have minimal amount of information but sometimes down",
    "start": "599760",
    "end": "605399"
  },
  {
    "text": "the line some Services might need information and if you have an event that is or a system",
    "start": "605399",
    "end": "612300"
  },
  {
    "text": "that is very big and with a bigger scale that might need those your service on",
    "start": "612300",
    "end": "617640"
  },
  {
    "text": "the top like oh I need to know the order ID I need to know what is inside this I need to know and then your order system",
    "start": "617640",
    "end": "623220"
  },
  {
    "text": "is like poof where I'm getting all this requests so you need to be careful on when you are designing the systems on",
    "start": "623220",
    "end": "628860"
  },
  {
    "text": "who needs what information and how you are getting um resolved that this is great for",
    "start": "628860",
    "end": "634140"
  },
  {
    "text": "example if uh to put little amount of information if you are working I don't know imagine you have a bus card and you",
    "start": "634140",
    "end": "640740"
  },
  {
    "text": "bought like 10 bus tickets maybe you don't want to put inside the event how many bus tickets you have left because",
    "start": "640740",
    "end": "646740"
  },
  {
    "text": "that's something is changing all the time and you will need still to pick that information from the service because it's it's a number that changed",
    "start": "646740",
    "end": "653519"
  },
  {
    "text": "all the time but maybe information about an order that is static you might want to put it inside the state so thinking",
    "start": "653519",
    "end": "660360"
  },
  {
    "text": "about how you're going to work with this event is very important then we have the full State definitions and here things",
    "start": "660360",
    "end": "667320"
  },
  {
    "text": "you have to have in mind security these events are sent to the world don't",
    "start": "667320",
    "end": "672720"
  },
  {
    "text": "put private or confidential information in there and if you do please encrypt it you can encrypt messages",
    "start": "672720",
    "end": "679260"
  },
  {
    "text": "then the schemas are a contract between the different parts of your application",
    "start": "679260",
    "end": "685740"
  },
  {
    "text": "so you have to have in mind that schemas should be backwards compatible they were asking Dave about versioning you can",
    "start": "685740",
    "end": "692160"
  },
  {
    "text": "version as well but have in mind that for example if you have a band that is",
    "start": "692160",
    "end": "697260"
  },
  {
    "text": "sending the birthday and the age somebody might the line may say Well they're sending me both why I will",
    "start": "697260",
    "end": "702480"
  },
  {
    "text": "calculate the H I will use it whatever and then ah we have the age let's remove it and then explosion down there it",
    "start": "702480",
    "end": "709740"
  },
  {
    "text": "happened it happened to all of us so it's good to know that whatever you put in the schema somebody will be using so",
    "start": "709740",
    "end": "715620"
  },
  {
    "text": "be mindful on what you need to put in the schema so for me the best option is the middle ground don't put too much",
    "start": "715620",
    "end": "722279"
  },
  {
    "text": "don't put too little be very mindful on how your events are going to be used down the line and when they need to add",
    "start": "722279",
    "end": "729300"
  },
  {
    "text": "more things you add more things try not to remove and then finally and this is something",
    "start": "729300",
    "end": "734760"
  },
  {
    "text": "that our brain gets very confused and events triggers one service good we are",
    "start": "734760",
    "end": "740220"
  },
  {
    "text": "fine linearity our brain is great with that that's why we like traditional Services one thing next to other",
    "start": "740220",
    "end": "746399"
  },
  {
    "text": "one event triggers one two three four we don't know how many services and then we",
    "start": "746399",
    "end": "752339"
  },
  {
    "text": "have this fractal of parallelization going on and then we're like ciao I",
    "start": "752339",
    "end": "758220"
  },
  {
    "text": "don't want to know all these can I go back to the Java programming in the 90s yes please",
    "start": "758220",
    "end": "763560"
  },
  {
    "text": "um so it's like yeah this is becoming very very confusing for our brains and",
    "start": "763560",
    "end": "768660"
  },
  {
    "text": "this is where we need a good design because parallelization is the magic of this event-driven applications and we",
    "start": "768660",
    "end": "774600"
  },
  {
    "text": "want to take advantage of it and then finally an event is not triggering anything yet",
    "start": "774600",
    "end": "780060"
  },
  {
    "text": "and this is a good recommendation to add events even if you know that they're",
    "start": "780060",
    "end": "785399"
  },
  {
    "text": "going to the void because that allows you to extend your service so with those things in mind let's go",
    "start": "785399",
    "end": "791700"
  },
  {
    "text": "back to my e-commerce and here I draw some of the things that each of the",
    "start": "791700",
    "end": "796860"
  },
  {
    "text": "service expects from each other and let's work on the use case I want to create an order and I about to reveal my",
    "start": "796860",
    "end": "805079"
  },
  {
    "text": "secret sauce are you ready I am awake good a table I know I'm magic it's",
    "start": "805079",
    "end": "810899"
  },
  {
    "text": "amazing it's a table that's the only thing you need to know in order to sign event driven applications make a table",
    "start": "810899",
    "end": "816899"
  },
  {
    "text": "we love tables they are easy open a spreadsheet you can add remove copy",
    "start": "816899",
    "end": "823440"
  },
  {
    "text": "paste they're cheap we can embed them into GitHub we can change them whenever",
    "start": "823440",
    "end": "828839"
  },
  {
    "text": "we do a code repo change we add a feature which can change the table it's not in a Wiki totally different system",
    "start": "828839",
    "end": "835200"
  },
  {
    "text": "the developers don't care um so a table that's the magic thing of doing event driven applications have a",
    "start": "835200",
    "end": "842279"
  },
  {
    "text": "table and this table works for me I have talked with many customers they have different uh columns and the table they",
    "start": "842279",
    "end": "848160"
  },
  {
    "text": "have different they work the little different the flow so that's up to you to find what is the right level of",
    "start": "848160",
    "end": "854100"
  },
  {
    "text": "columns and what how you are going to structure this I usually do one table per use case because that's have been",
    "start": "854100",
    "end": "861240"
  },
  {
    "text": "working for me but you might have a different perspective so First Column is the synchronous in the case of ordering",
    "start": "861240",
    "end": "868860"
  },
  {
    "text": "we have an API Gateway that triggers the whole process create the order comes from our reward front",
    "start": "868860",
    "end": "875399"
  },
  {
    "text": "second one is the input event in this case we don't have any then we have the service in this case the order",
    "start": "875399",
    "end": "880500"
  },
  {
    "text": "microservice then we have the action create the order in our serverless land word is uh the",
    "start": "880500",
    "end": "887040"
  },
  {
    "text": "function name and then finally we have the output event and this output event then we put",
    "start": "887040",
    "end": "892860"
  },
  {
    "text": "it in a general table another table we'll have a lot of tables by the end of the day where we put all the events and",
    "start": "892860",
    "end": "899160"
  },
  {
    "text": "this is again everybody does it different so you need to find what is the level of uh of table that works for",
    "start": "899160",
    "end": "905459"
  },
  {
    "text": "you I cannot tell you this is the only way to do it but this works very well because here you will document all the",
    "start": "905459",
    "end": "910860"
  },
  {
    "text": "attributes you will know where where you can find these events you know who produce them you can start extending",
    "start": "910860",
    "end": "917459"
  },
  {
    "text": "your application now next thing next step in our application the order is created we have",
    "start": "917459",
    "end": "924240"
  },
  {
    "text": "put them in the database now we want to reserve the item one more line and this",
    "start": "924240",
    "end": "929699"
  },
  {
    "text": "time it's an input event because this starts to be an event driven application I'm drawing this uh architectural",
    "start": "929699",
    "end": "936420"
  },
  {
    "text": "diagram here that's not needed for you this is just for you audience people watching this so you know how simple",
    "start": "936420",
    "end": "942180"
  },
  {
    "text": "that the the the the problem is solve is like basically Lambda function and a table",
    "start": "942180",
    "end": "947940"
  },
  {
    "text": "so you don't need to put these diagrams in your own application and you will see that some of these",
    "start": "947940",
    "end": "954420"
  },
  {
    "text": "um events some of these actions will create two output events or more depending on what you need in this case",
    "start": "954420",
    "end": "960480"
  },
  {
    "text": "the item is reserved if everything is good the item is not available if there isn't a problem so you can work with",
    "start": "960480",
    "end": "967079"
  },
  {
    "text": "those and you should again we put the element in the table and then we move on okay now the item is reserved and you",
    "start": "967079",
    "end": "973139"
  },
  {
    "text": "start getting the drill is very nice and it's very flowy just keep on going until",
    "start": "973139",
    "end": "978480"
  },
  {
    "text": "you find the right end result and you may say hey Marcia this is amazing this",
    "start": "978480",
    "end": "984480"
  },
  {
    "text": "look beautiful you're going so fast the truth is that when you build this",
    "start": "984480",
    "end": "990240"
  },
  {
    "text": "you might Spend a While iterating around this is the end result I'm just grab my table and put it in nice slides but when",
    "start": "990240",
    "end": "996720"
  },
  {
    "text": "I was doing these type of things I was thinking about the okay I need to make an order well I need to pay I need to",
    "start": "996720",
    "end": "1004279"
  },
  {
    "text": "send it and then you start realizing things that go in the middle and then it's obviously add a new line and then",
    "start": "1004279",
    "end": "1011000"
  },
  {
    "text": "you add it there you change your copy paste and you move forward so it's very very cheap to iterate until you have a",
    "start": "1011000",
    "end": "1017120"
  },
  {
    "text": "flow that works for you so you keep on adding uh lines on activities to your flow so different",
    "start": "1017120",
    "end": "1024380"
  },
  {
    "text": "micro Services again the the now we are uh getting the delivery estimate we have",
    "start": "1024380",
    "end": "1029418"
  },
  {
    "text": "the price of the product we have how much it weighed we have the address of the customer we get estimation of how",
    "start": "1029419",
    "end": "1035000"
  },
  {
    "text": "much the delivery will cost and then we go and make the payment and you see that everything flows and everything is very",
    "start": "1035000",
    "end": "1041780"
  },
  {
    "text": "simple good but what happened if there are errors in our system because we might have errors",
    "start": "1041780",
    "end": "1047839"
  },
  {
    "text": "maybe the customer didn't have money in their account or the customer was not at home or the item was not available I",
    "start": "1047839",
    "end": "1054440"
  },
  {
    "text": "mentioned that we have these two events one is for the success one is for the failure well the failures are designed",
    "start": "1054440",
    "end": "1061940"
  },
  {
    "text": "exactly in the same way as success they are events that need to be addressed so",
    "start": "1061940",
    "end": "1067580"
  },
  {
    "text": "whenever you have two events or three or as many as you need you need to work with all the events that you have unless",
    "start": "1067580",
    "end": "1074120"
  },
  {
    "text": "there are end-state events so if you have I like to mark my events in the table with n because that means that you",
    "start": "1074120",
    "end": "1080360"
  },
  {
    "text": "will not find that event in the input table anywhere because that's an end state but other events they all need to",
    "start": "1080360",
    "end": "1087500"
  },
  {
    "text": "be handled because if not that means that your application is not complete and you will have problems",
    "start": "1087500",
    "end": "1093100"
  },
  {
    "text": "for handling errors I recommend you to follow the Saga pattern so every action",
    "start": "1093100",
    "end": "1098600"
  },
  {
    "text": "that has a side effects change a table create something do a payment you need",
    "start": "1098600",
    "end": "1104419"
  },
  {
    "text": "to do a compensatory action to solve that so okay you create an",
    "start": "1104419",
    "end": "1110179"
  },
  {
    "text": "order cancel the order you made a payment please return the money to your customer",
    "start": "1110179",
    "end": "1115360"
  },
  {
    "text": "you start a delivery and delivery got canceled well that will trigger all the compensatory actions that will take you",
    "start": "1115360",
    "end": "1123020"
  },
  {
    "text": "to the beginning so have that in mind I have seen some customers that are in their table they have a star or a mark",
    "start": "1123020",
    "end": "1128780"
  },
  {
    "text": "to which actions in the table for example if you go here have side effects",
    "start": "1128780",
    "end": "1133940"
  },
  {
    "text": "because some of them don't have side effects some of them are just getting information and that's fine you can get",
    "start": "1133940",
    "end": "1139220"
  },
  {
    "text": "information nobody got hurt but if you do a payment and you don't return the money somebody will get very very angry",
    "start": "1139220",
    "end": "1145160"
  },
  {
    "text": "so you can have another column that is like a side effect and then you experiences for you to go and recall",
    "start": "1145160",
    "end": "1152900"
  },
  {
    "text": "over from there so another thing that can happen is one day your PM comes and say hey Marcia we",
    "start": "1152900",
    "end": "1160760"
  },
  {
    "text": "have a lovely system but you know when the customer makes an order they don't know if they will get it in",
    "start": "1160760",
    "end": "1165919"
  },
  {
    "text": "their house maybe five days later they have a box in their house or not so we need to add some kind of notification to",
    "start": "1165919",
    "end": "1172160"
  },
  {
    "text": "the customer to let them know that they kind of like where the order is because it lovely is asynchronous word but it's",
    "start": "1172160",
    "end": "1179120"
  },
  {
    "text": "like to notify so now you need to add a notification service when the payment fail when the item is not available when",
    "start": "1179120",
    "end": "1186380"
  },
  {
    "text": "the delivery started oh my God this manager so I go and change on my table no my",
    "start": "1186380",
    "end": "1192740"
  },
  {
    "text": "dear you don't you just had one name and you listen to all the events that you care for and you send an email that's",
    "start": "1192740",
    "end": "1199460"
  },
  {
    "text": "the magic of event-driven applications no need to change anything else you have events for and the item is not available",
    "start": "1199460",
    "end": "1205940"
  },
  {
    "text": "you have event when the payment was failed you have a event when the payment was successful you have all that",
    "start": "1205940",
    "end": "1212240"
  },
  {
    "text": "information so you listen to it and you send an email when that happens and that's the beauty of it so let's show",
    "start": "1212240",
    "end": "1218900"
  },
  {
    "text": "you some code some caveats the code is available so yes I it's available it's",
    "start": "1218900",
    "end": "1224360"
  },
  {
    "text": "in a GitHub it's at the end of the presentation so you should not leave until you see the code repo agency Decay",
    "start": "1224360",
    "end": "1230240"
  },
  {
    "text": "and some if you are interested in and I will show you the same version because it's simpler to show but you can get exactly the same app in cdk",
    "start": "1230240",
    "end": "1237500"
  },
  {
    "text": "this app is the same e-commerce but instead of putting each micro service in",
    "start": "1237500",
    "end": "1242720"
  },
  {
    "text": "its own um package and whatever I put everything in one sum template so it's easier for",
    "start": "1242720",
    "end": "1248660"
  },
  {
    "text": "me to show it but you can have it in multiple accounts in multiple micro Services it will work",
    "start": "1248660",
    "end": "1254000"
  },
  {
    "text": "so this is how it looks uh and here I have everything so each",
    "start": "1254000",
    "end": "1259840"
  },
  {
    "text": "micro service is one Lambda function that does all the actions so just for",
    "start": "1259840",
    "end": "1265460"
  },
  {
    "text": "letting you know this is a demo so here we will go directly to the order function and in the order function you",
    "start": "1265460",
    "end": "1272660"
  },
  {
    "text": "will see uh everything but the part that we are interested is in the API Gateway that invokes this thing so again this",
    "start": "1272660",
    "end": "1279440"
  },
  {
    "text": "infrastructure as code we are triggering this function with an API Gateway basically a customer bought a product",
    "start": "1279440",
    "end": "1285860"
  },
  {
    "text": "and boom this Lambda function gets triggered and then what happens when this Lambda",
    "start": "1285860",
    "end": "1291200"
  },
  {
    "text": "function gets triggered is that an event will get put into the uh into the bus so",
    "start": "1291200",
    "end": "1297260"
  },
  {
    "text": "here I I'm just filtering if the if their request comes from API Gateway and then if the request comes from API",
    "start": "1297260",
    "end": "1303140"
  },
  {
    "text": "Gateway we go and create an order here basically we're just creating the",
    "start": "1303140",
    "end": "1309799"
  },
  {
    "text": "order event and putting it in the band Bridge uh with send event create order the order Creator is the action order is",
    "start": "1309799",
    "end": "1317659"
  },
  {
    "text": "the payload a band bus uh it's a environmental variables and the Event Source is the order service",
    "start": "1317659",
    "end": "1324380"
  },
  {
    "text": "and that's it now we can go to our sum template and see which function gets invocated when the order is created",
    "start": "1324380",
    "end": "1332059"
  },
  {
    "text": "and here you can see that is the inventory function and you can see little under that you will see the rule",
    "start": "1332059",
    "end": "1338480"
  },
  {
    "text": "here it is and this is the rule for the event bus for all these uh rules with",
    "start": "1338480",
    "end": "1343820"
  },
  {
    "text": "this payload for all this event with this payload that trigger this function that I told you that this is all in one",
    "start": "1343820",
    "end": "1349760"
  },
  {
    "text": "big function and then we can see well if the order is created we need to put this",
    "start": "1349760",
    "end": "1355760"
  },
  {
    "text": "message but first we need to reserve the item in the database so we go do some",
    "start": "1355760",
    "end": "1361159"
  },
  {
    "text": "magic particle in our Dynamo table that's a different talk so don't get",
    "start": "1361159",
    "end": "1366500"
  },
  {
    "text": "into there and then we will put if everything goes well we can put the",
    "start": "1366500",
    "end": "1372320"
  },
  {
    "text": "event in the table so you will see if the if you're building this a separate Lambda",
    "start": "1372320",
    "end": "1377840"
  },
  {
    "text": "functions they will be tiny whiny super simple super fast lambdas run then we see what uh Lambda function this",
    "start": "1377840",
    "end": "1385400"
  },
  {
    "text": "uh item Reserve triggers again the inventory function but then a different part of it is the item is reserved and",
    "start": "1385400",
    "end": "1392480"
  },
  {
    "text": "again we are putting the uh event in the in the bus but first we are getting the",
    "start": "1392480",
    "end": "1399980"
  },
  {
    "text": "information from the Dynamo table then the item described triggers the customer and so on and so forth and this is",
    "start": "1399980",
    "end": "1406700"
  },
  {
    "text": "basically how it looks and it is pretty straightforward the best way to see it I sometimes like",
    "start": "1406700",
    "end": "1412820"
  },
  {
    "text": "to run this so for running this I'm using Thunder client this is an extension from Visual Studio code",
    "start": "1412820",
    "end": "1417919"
  },
  {
    "text": "basically it's a rest client that allows me to to not leave my ID so I don't get hooked in Twitter and basically you just",
    "start": "1417919",
    "end": "1425419"
  },
  {
    "text": "put endpoint this is the API Gateway uh creates an order for customer one item",
    "start": "1425419",
    "end": "1430940"
  },
  {
    "text": "two this is a very simple demo it only can every customer can buy one product at a time this is a synchronous call so",
    "start": "1430940",
    "end": "1438320"
  },
  {
    "text": "the response will only be that basically the order ID is the important thing and then from there we need to figure",
    "start": "1438320",
    "end": "1445039"
  },
  {
    "text": "out what happened so what we can go and do is check the logs and the database to",
    "start": "1445039",
    "end": "1450919"
  },
  {
    "text": "see if this works I know we all have been there maybe not the most efficient thing to do but I",
    "start": "1450919",
    "end": "1456140"
  },
  {
    "text": "know as soon as you download this code and deploy this is the first thing you're going to do so we can go and use the serverless",
    "start": "1456140",
    "end": "1462679"
  },
  {
    "text": "console another extension from Visual Studio code I love to use so not leaving the the IDE where I can see the logs and",
    "start": "1462679",
    "end": "1469039"
  },
  {
    "text": "I can see the database and here I can see the logs for the create order I can start seeing that the",
    "start": "1469039",
    "end": "1475460"
  },
  {
    "text": "order was created and things are moving forward so that's good",
    "start": "1475460",
    "end": "1480620"
  },
  {
    "text": "now I want to see what happened in the order table I can go and explore that so",
    "start": "1480620",
    "end": "1485900"
  },
  {
    "text": "everything is very decoupled and very isolated so if you don't know what is going on I still don't know if the order",
    "start": "1485900",
    "end": "1491480"
  },
  {
    "text": "has go through has been delivered no the payment was canceled okay now we need to",
    "start": "1491480",
    "end": "1497900"
  },
  {
    "text": "figure out why the payment was canceled was the account didn't have money the",
    "start": "1497900",
    "end": "1503120"
  },
  {
    "text": "delivery was canceled what happened so now we are starting working in in this",
    "start": "1503120",
    "end": "1508580"
  },
  {
    "text": "like uh live debugging that we all have been trying to figure out what happened well in the inventory table everything",
    "start": "1508580",
    "end": "1515299"
  },
  {
    "text": "looks good I know the initial price stock everything is available so nothing was sold okay we're good now we are in",
    "start": "1515299",
    "end": "1523039"
  },
  {
    "text": "the payment table oh the payment was canceled how many times you have been here trying to figure out how what has",
    "start": "1523039",
    "end": "1529880"
  },
  {
    "text": "been wrong and you have like this amount of things doing different things at the same time and everything is very decoupled we all have been here so now I",
    "start": "1529880",
    "end": "1537799"
  },
  {
    "text": "kind of figure out that the payment went through but then the payment got cancel so this is a saga action and I was like",
    "start": "1537799",
    "end": "1543559"
  },
  {
    "text": "trying to figure out what went wrong and I I can't so one way to do that is uh by using one",
    "start": "1543559",
    "end": "1551179"
  },
  {
    "text": "feature I mentioned you the custom uh buses and by doing using custom buses you get this right away",
    "start": "1551179",
    "end": "1557659"
  },
  {
    "text": "and he's keeping track of all the events so I will show you how it's so simple to",
    "start": "1557659",
    "end": "1563480"
  },
  {
    "text": "keep track of all the events in one place and you can do this debugging that we all do let's be honest uh very simple",
    "start": "1563480",
    "end": "1570080"
  },
  {
    "text": "so the first thing we are going to do is to create a custom bus and you will see that for example the",
    "start": "1570080",
    "end": "1576380"
  },
  {
    "text": "order function and all the functions involved in this process are putting the events and they are using the the custom",
    "start": "1576380",
    "end": "1582860"
  },
  {
    "text": "bus as the trigger for the rules and putting the events in there so that's the bus we are using and then this bus",
    "start": "1582860",
    "end": "1588500"
  },
  {
    "text": "has a function this uh this service has a function that is listening to all the messages in the bus so everything that",
    "start": "1588500",
    "end": "1595159"
  },
  {
    "text": "goes through the bus triggers this Lambda function and what this Lambda function does does two things",
    "start": "1595159",
    "end": "1600620"
  },
  {
    "text": "write in Dynamo every event and it writes it in Cloud watch logs why well",
    "start": "1600620",
    "end": "1606500"
  },
  {
    "text": "you will see in a second but this is something you can decide which structure you want to give to your logs and you",
    "start": "1606500",
    "end": "1612740"
  },
  {
    "text": "what structure you give to your table I think I've been doing this talk a couple of times and I already will throw this",
    "start": "1612740",
    "end": "1618140"
  },
  {
    "text": "code and write it again because I I think there's many there are better ways to do it but I think the important thing",
    "start": "1618140",
    "end": "1624320"
  },
  {
    "text": "is that the idea so now we have this function that listened to all the events in the bus",
    "start": "1624320",
    "end": "1629720"
  },
  {
    "text": "and now we want to debug this problem like why the customer payment was",
    "start": "1629720",
    "end": "1634760"
  },
  {
    "text": "canceled what happened so the first way is to go to the logs the logs are great",
    "start": "1634760",
    "end": "1639980"
  },
  {
    "text": "you are working alone in this environment and you tail the logs and",
    "start": "1639980",
    "end": "1645620"
  },
  {
    "text": "you start doing things and every time there is an event things get locked there you can see all the things that",
    "start": "1645620",
    "end": "1651020"
  },
  {
    "text": "are happening so we can see it in action so this is the previous uh execution and",
    "start": "1651020",
    "end": "1656179"
  },
  {
    "text": "you can see all these things are different events for the same transaction the order was created the",
    "start": "1656179",
    "end": "1662120"
  },
  {
    "text": "item was reserved the I don't know the elements were getting the price from the",
    "start": "1662120",
    "end": "1668240"
  },
  {
    "text": "inventory the item described and we are getting the information from the customer everything is tail one to",
    "start": "1668240",
    "end": "1673880"
  },
  {
    "text": "another and you see the full event description so it's very easy to code and to start navigating this while you",
    "start": "1673880",
    "end": "1680840"
  },
  {
    "text": "are coding you are alone that's the most important thing because if you have other people working here you will have",
    "start": "1680840",
    "end": "1686000"
  },
  {
    "text": "events in the middle and it will not be as nice but this is in your own local word it this works very well you tail it",
    "start": "1686000",
    "end": "1693380"
  },
  {
    "text": "and it just goes and you can do live changes and push code very fast and things start moving quite fast this is a",
    "start": "1693380",
    "end": "1700820"
  },
  {
    "text": "way I like I like to do so here we can start seeing that the item was removed that's good the payment has come through",
    "start": "1700820",
    "end": "1706520"
  },
  {
    "text": "the item was removed the delivery started we're almost there",
    "start": "1706520",
    "end": "1711559"
  },
  {
    "text": "and then we will see what was the problem the delivery was canceled so basically the user was not at home and",
    "start": "1711559",
    "end": "1717740"
  },
  {
    "text": "that triggered the Saga pattern of why the payment was canceled so this was a super simple way in one place everything",
    "start": "1717740",
    "end": "1724460"
  },
  {
    "text": "is located in one one only place where you can go and navigate what happened to",
    "start": "1724460",
    "end": "1729740"
  },
  {
    "text": "your use case and start debugging and tweaking it now imagine that you're in a production environment or test",
    "start": "1729740",
    "end": "1735679"
  },
  {
    "text": "environment where you have all your colleagues sending events and it's not that simple to get a clean watch Cloud",
    "start": "1735679",
    "end": "1742159"
  },
  {
    "text": "watch log where you can see everything that is where Dynamo shines so you don't",
    "start": "1742159",
    "end": "1747260"
  },
  {
    "text": "need to do both strategies you can do one or the other or meter that's up to you but here in Dynamo you have all the",
    "start": "1747260",
    "end": "1753620"
  },
  {
    "text": "events in one table so you go to the table and you will see all the events that happens each event takes one line",
    "start": "1753620",
    "end": "1760220"
  },
  {
    "text": "and you can make this table as as you need so here you can see that if you open any",
    "start": "1760220",
    "end": "1766880"
  },
  {
    "text": "of the line you will see the whole event so all the payload for the event everything that we were seeing in the uh",
    "start": "1766880",
    "end": "1772940"
  },
  {
    "text": "in the cloud watch view is here uh it just organized a little different and the good thing with this is that you",
    "start": "1772940",
    "end": "1779000"
  },
  {
    "text": "can search so now you have the order ID you know that the order previous order failed so what you can do is go and do a",
    "start": "1779000",
    "end": "1786260"
  },
  {
    "text": "search this is not a very efficient search but for testing purposes works very well and you will get a list of all",
    "start": "1786260",
    "end": "1793220"
  },
  {
    "text": "the elements that are matching that order ID and with a little scrolling",
    "start": "1793220",
    "end": "1798860"
  },
  {
    "text": "down you will get the okay the cut delivery was canceled so this is very efficient for start debugging and",
    "start": "1798860",
    "end": "1805700"
  },
  {
    "text": "playing in on your event driven applications if you want to do more Deep dive debugging and more uh performance",
    "start": "1805700",
    "end": "1812840"
  },
  {
    "text": "debugging x-ray will help you to find the bottlenecks in your applications what things perform how things are",
    "start": "1812840",
    "end": "1818779"
  },
  {
    "text": "moving forward and what you need to do because eventbridge is not automatically tracing all the requests and all the",
    "start": "1818779",
    "end": "1825380"
  },
  {
    "text": "events are being push you need to wrap all the put event operations with x-ray",
    "start": "1825380",
    "end": "1831200"
  },
  {
    "text": "so whenever you're doing put event in your Lambda function you need to basically have these three lines on top",
    "start": "1831200",
    "end": "1837320"
  },
  {
    "text": "that you are importing X-ray and you're wrapping the SDK Library",
    "start": "1837320",
    "end": "1842380"
  },
  {
    "text": "uh and you will get something like this at the end very useful but this is nice",
    "start": "1842679",
    "end": "1847760"
  },
  {
    "text": "because you can start seeing all the nuts and cracks of your application this is my favorite feature when it was",
    "start": "1847760",
    "end": "1853700"
  },
  {
    "text": "announced I was like yes this is what I need in my life API destinations are a different type of targets targets are",
    "start": "1853700",
    "end": "1860539"
  },
  {
    "text": "Lambda functions get triggered with a message like match the rule boom we put",
    "start": "1860539",
    "end": "1865940"
  },
  {
    "text": "a message in the queue when the message matches the rule boom an API destinations are an HTTP endpoint that",
    "start": "1865940",
    "end": "1872480"
  },
  {
    "text": "gets triggered when an event matches the rule so you can send messages to these API destinations from your eventbridge",
    "start": "1872480",
    "end": "1879640"
  },
  {
    "text": "and in the case of our application what we will do we are small e-commerce we",
    "start": "1879640",
    "end": "1884720"
  },
  {
    "text": "don't have money to have a planes and a delivery company ourselves so we are Outsourcing our delivery but we still",
    "start": "1884720",
    "end": "1891679"
  },
  {
    "text": "want to be event driven so whenever there is a new product order coming in and everything is good we have",
    "start": "1891679",
    "end": "1898100"
  },
  {
    "text": "calculated the delivery we have we know the price we have the customer has paid the item has been removed from the",
    "start": "1898100",
    "end": "1903620"
  },
  {
    "text": "inventory we will send an event using API destinations to our external",
    "start": "1903620",
    "end": "1908659"
  },
  {
    "text": "delivery company to our third party delivery company like hey can you deliver this for me this is all the information you need to know and there",
    "start": "1908659",
    "end": "1915740"
  },
  {
    "text": "we can have security so it's not an open endpoint you can have API Keys username and password oauth whatever you like and",
    "start": "1915740",
    "end": "1923240"
  },
  {
    "text": "you can also have some rate limiting because you know serverless scale everything is good but our third party",
    "start": "1923240",
    "end": "1928460"
  },
  {
    "text": "sometimes don't scale the same way so how you build this the first thing you need to build is a connection and",
    "start": "1928460",
    "end": "1934279"
  },
  {
    "text": "this is a security aspect I'm using API keys but you can do anything else you should integrate it with secret manager",
    "start": "1934279",
    "end": "1940580"
  },
  {
    "text": "or something like that please don't put your API key in your GitHub repos I have to say that yes",
    "start": "1940580",
    "end": "1947080"
  },
  {
    "text": "and then you build the API destination the API destination use that connection that you created the URL from your third",
    "start": "1947080",
    "end": "1953960"
  },
  {
    "text": "party the method like post get or whatever you need and then you say what is the rate limit so you're saying hey",
    "start": "1953960",
    "end": "1960440"
  },
  {
    "text": "invoke this 10 times a second please don't kill this thing because you know Legacy systems or third-party systems",
    "start": "1960440",
    "end": "1968120"
  },
  {
    "text": "you never know and because you never know you always need to use that letter cues yes",
    "start": "1968120",
    "end": "1974360"
  },
  {
    "text": "because that letter cues are very important in event-driven applications but they are even more important when",
    "start": "1974360",
    "end": "1979880"
  },
  {
    "text": "you don't control them in this case we are calling a third party how many times third party are like you know what is",
    "start": "1979880",
    "end": "1986539"
  },
  {
    "text": "the availability of your third parties are they 99.999 maybe not mostly not",
    "start": "1986539",
    "end": "1992960"
  },
  {
    "text": "so you don't want those events that you're sending I don't want when a user create an order send the order to be",
    "start": "1992960",
    "end": "1999679"
  },
  {
    "text": "delivered and the message is in nowhere because my third party I don't know have a hiccup in that",
    "start": "1999679",
    "end": "2005740"
  },
  {
    "text": "specific moment so that letter cues gets all the message that were not",
    "start": "2005740",
    "end": "2010899"
  },
  {
    "text": "delivered and saraki and then you will configure and learn or you can reprocess",
    "start": "2010899",
    "end": "2016840"
  },
  {
    "text": "them automatically or you can go at the end of the day and process them again there is some properties like how many",
    "start": "2016840",
    "end": "2023740"
  },
  {
    "text": "times you retry for how long and so forth this is a normal SQ excuse another thing",
    "start": "2023740",
    "end": "2029559"
  },
  {
    "text": "you need to have in mind is the multi-account architecture what I show you in the demo is great but it's not",
    "start": "2029559",
    "end": "2034840"
  },
  {
    "text": "realistic in general we have different microservices in different accounts and you can do that when you're working with",
    "start": "2034840",
    "end": "2040779"
  },
  {
    "text": "eventbridge no problem everything is in a different account centralized bus sending to other accounts and that's",
    "start": "2040779",
    "end": "2047019"
  },
  {
    "text": "that's how you should have your applications if they are big enough another thing and these links to the",
    "start": "2047019",
    "end": "2052839"
  },
  {
    "text": "next talk that is happening uh about patterns and application integration",
    "start": "2052839",
    "end": "2058000"
  },
  {
    "text": "eventbridge is amazing but there are other amazing tools pick the right tool for your problem so eventbridge works",
    "start": "2058000",
    "end": "2065320"
  },
  {
    "text": "great to coordinate multiple micro Services together and to create this thing but if you need more specific",
    "start": "2065320",
    "end": "2071158"
  },
  {
    "text": "workflows where things need to go one after the other in a particular order or",
    "start": "2071159",
    "end": "2076179"
  },
  {
    "text": "you have things within your microservice that needs to follow like instead of having a huge fat Lambda function you",
    "start": "2076179",
    "end": "2081878"
  },
  {
    "text": "cut everything into smaller pieces and you use apis and you want things to go from here to here and then do retries",
    "start": "2081879",
    "end": "2088540"
  },
  {
    "text": "and things like that uses the functions or you need to send notifications to a customer use SNS you have a huge amount",
    "start": "2088540",
    "end": "2095919"
  },
  {
    "text": "of traffic use Kinesis so pick the right tool for the problem don't stay with win",
    "start": "2095919",
    "end": "2101200"
  },
  {
    "text": "one tool because that's what we do in AWS we have multiple tools to help you out",
    "start": "2101200",
    "end": "2106240"
  },
  {
    "text": "finally I want to talk about global endpoints this is quite new and this is for those customers that need that",
    "start": "2106240",
    "end": "2112440"
  },
  {
    "text": "reliability that's high availability this I don't care but I need my app to",
    "start": "2112440",
    "end": "2117820"
  },
  {
    "text": "be up all the time and this will help you if there's any problem in a region that uh the service will take care of so",
    "start": "2117820",
    "end": "2124240"
  },
  {
    "text": "you will have a global endpoint that is global is not attached to any region and it will Define a primary uh event bus",
    "start": "2124240",
    "end": "2132460"
  },
  {
    "text": "um eventbris press so that endpoint will send it directly to the bus and if",
    "start": "2132460",
    "end": "2138280"
  },
  {
    "text": "everything is good then things get replicated in your secondary region but nothing happens all your targets act",
    "start": "2138280",
    "end": "2144700"
  },
  {
    "text": "like everything good but now imagine that there is a problem in a region and your primary revision is",
    "start": "2144700",
    "end": "2151420"
  },
  {
    "text": "down what happens automatically an alarm will trigger the failover so instead of",
    "start": "2151420",
    "end": "2157780"
  },
  {
    "text": "sending the events to your Primary Vision will be sent to your secondary region and then it will also replicate",
    "start": "2157780",
    "end": "2164800"
  },
  {
    "text": "to your primary Insurance when this app is ready to to take over I cannot go into the details of this but",
    "start": "2164800",
    "end": "2171339"
  },
  {
    "text": "if you go to ring band you should go to my talk there I will be deep diving a lot on this so",
    "start": "2171339",
    "end": "2177460"
  },
  {
    "text": "just see you in there and to summarize a band buses help you do a couple of applications you already know that but",
    "start": "2177460",
    "end": "2184660"
  },
  {
    "text": "now you know how to design them in a way that you don't explode your brain in the floor USE events tables for your use",
    "start": "2184660",
    "end": "2192099"
  },
  {
    "text": "case and for your events and then it will be easier put them inside your GitHub repos or your developers are",
    "start": "2192099",
    "end": "2197619"
  },
  {
    "text": "responsible whenever they change the code to update the tables as well so",
    "start": "2197619",
    "end": "2202839"
  },
  {
    "text": "then you can have processes in the place when you're having your push your pull requests",
    "start": "2202839",
    "end": "2208420"
  },
  {
    "text": "design the events with the idea of thinking how others are using it keep a",
    "start": "2208420",
    "end": "2213520"
  },
  {
    "text": "central log of your events if you need don't forget observability if you need that learn the features from eventbrids",
    "start": "2213520",
    "end": "2219460"
  },
  {
    "text": "and use other services as well the right services for the right tools and this is",
    "start": "2219460",
    "end": "2224560"
  },
  {
    "text": "the link for all the videos and code and everything where I go a lot in details",
    "start": "2224560",
    "end": "2230560"
  },
  {
    "text": "into how to build this application how to do it with some how to do it with CK every piece of functionality I um I",
    "start": "2230560",
    "end": "2238359"
  },
  {
    "text": "talked today is there and I will keep the link on the screen so don't worry if you didn't take the picture uh thank you",
    "start": "2238359",
    "end": "2245320"
  },
  {
    "text": "very much if you have any questions I will answer some now but I will be in the serverless espresso Boost after here",
    "start": "2245320",
    "end": "2251079"
  },
  {
    "text": "so thank you foreign",
    "start": "2251079",
    "end": "2256140"
  }
]