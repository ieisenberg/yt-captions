[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "[Music] hi there my name is kesten I'm um CTO in",
    "start": "6990",
    "end": "13799"
  },
  {
    "text": "this company called humo um and I'm here to talk about understanding lock",
    "start": "13799",
    "end": "20519"
  },
  {
    "text": "data so um first of all I'll just uh just a very",
    "start": "20519",
    "end": "26439"
  },
  {
    "text": "quick agenda of these next 40 minutes just bit who we are I'll do a super",
    "start": "26439",
    "end": "31679"
  },
  {
    "text": "super quick demo for you because um this is really a talk about this product that",
    "start": "31679",
    "end": "37800"
  },
  {
    "text": "we built and why we built it um so a good chunk of it is actually our our",
    "start": "37800",
    "end": "44120"
  },
  {
    "text": "experiences and why we went about uh doing this and then a bit about how it",
    "start": "44120",
    "end": "49239"
  },
  {
    "text": "works and we'll see if there's more time we can we can play around with it after that",
    "start": "49239",
    "end": "55920"
  },
  {
    "start": "55000",
    "end": "95000"
  },
  {
    "text": "so so we're um uh fairly we just came up public about our company uh last week in",
    "start": "55920",
    "end": "62719"
  },
  {
    "text": "Copenhagen we've been working on this for 9 months uh the core team is the three of us where GA has actually been a",
    "start": "62719",
    "end": "70119"
  },
  {
    "text": "global manager for the go-to conferences uh for the last 10 years uh I've been",
    "start": "70119",
    "end": "75960"
  },
  {
    "text": "I'm co-founder and was CTO of Tri Fork which is now a 500 person Consulting",
    "start": "75960",
    "end": "81400"
  },
  {
    "text": "shop for the last 20 years um so we decided to kind of break out uh in a in",
    "start": "81400",
    "end": "88360"
  },
  {
    "text": "a new startup uh pick up some of our experiences",
    "start": "88360",
    "end": "93680"
  },
  {
    "text": "so um I'll start off with a short demo where I have in this in this little demo",
    "start": "93680",
    "end": "99640"
  },
  {
    "start": "95000",
    "end": "275000"
  },
  {
    "text": "uh I have uh I'm pulling in data the logs from GitHub because they're they're",
    "start": "99640",
    "end": "105399"
  },
  {
    "text": "publicly available there's a public feed of live data coming out of GitHub that",
    "start": "105399",
    "end": "110560"
  },
  {
    "text": "tells us all all the pushes all the likes all the comments are all in a in a",
    "start": "110560",
    "end": "117600"
  },
  {
    "text": "in a in an event stream that you can sub subscribed to uh from GitHub so um just as an example of",
    "start": "117600",
    "end": "125640"
  },
  {
    "text": "something that a lot of people can relate to so [Music]",
    "start": "125640",
    "end": "131039"
  },
  {
    "text": "the the main API looks like this uh where uh we have a Time series over the",
    "start": "131040",
    "end": "138080"
  },
  {
    "text": "last 24 hours and then we have events that come they come as Json structures",
    "start": "138080",
    "end": "143680"
  },
  {
    "text": "that um go something like this they're just a description of what happened in this case this was somebody foring",
    "start": "143680",
    "end": "151319"
  },
  {
    "text": "um a repository so let's see so then the language up here is uh basically it's a",
    "start": "151319",
    "end": "158560"
  },
  {
    "text": "you could call it a it's a GP on steroids where we can uh really fastly",
    "start": "158560",
    "end": "163599"
  },
  {
    "text": "GP and and do basic analytics on this data so let's um start by looking for um",
    "start": "163599",
    "end": "171360"
  },
  {
    "text": "anything that has to do with um",
    "start": "171360",
    "end": "177599"
  },
  {
    "text": "Docker right so here we go get an event distribution graph over the",
    "start": "178120",
    "end": "184000"
  },
  {
    "text": "things that happened on the repository Docker Docker uh you can go look at that or we",
    "start": "184000",
    "end": "191080"
  },
  {
    "text": "could do um simple Group by um the types of the",
    "start": "191080",
    "end": "197799"
  },
  {
    "text": "types of events that happened at GitHub the last 24 hours so these are uh the",
    "start": "197799",
    "end": "204040"
  },
  {
    "text": "number of total number of events was about a million and you can uh",
    "start": "204040",
    "end": "210879"
  },
  {
    "text": "take these and then sort them we get them the most events like this or we",
    "start": "210879",
    "end": "216360"
  },
  {
    "text": "could do take all the watch events that's",
    "start": "216360",
    "end": "221400"
  },
  {
    "text": "um um that's when you like a GitHub repo and say we want to group those by",
    "start": "221400",
    "end": "229200"
  },
  {
    "text": "repository name and sort them so you get the most popular GitHub repos the",
    "start": "229200",
    "end": "236560"
  },
  {
    "text": "last 24 hours the ones that were the most watched and you can take this over another time",
    "start": "236560",
    "end": "243159"
  },
  {
    "text": "interval uh and turn this into a live stream of data so we just take this",
    "start": "243159",
    "end": "249400"
  },
  {
    "text": "pipeline again over the live stream from GitHub and as as this 24 hour this in",
    "start": "249400",
    "end": "256239"
  },
  {
    "text": "this case a 15minute window you can see the the accounts here will update as",
    "start": "256239",
    "end": "261600"
  },
  {
    "text": "we go along that's this time so that's the basic idea so let's get back to the",
    "start": "261600",
    "end": "268600"
  },
  {
    "text": "presentation we find it it works well to just explain just briefly uh what this is so this all started the why uh in",
    "start": "268600",
    "end": "277840"
  },
  {
    "start": "275000",
    "end": "310000"
  },
  {
    "text": "building 247 systems you know most interesting systems today are really composed of many servers many services",
    "start": "277840",
    "end": "284680"
  },
  {
    "text": "today is you know it's microservices Cloud distributed systems and locks are",
    "start": "284680",
    "end": "289800"
  },
  {
    "text": "really a Time proven lowest common denominator for understanding these systems what's going on in a complex",
    "start": "289800",
    "end": "294919"
  },
  {
    "text": "distributed system um so starting out with locks you get a really low barrier",
    "start": "294919",
    "end": "300680"
  },
  {
    "text": "of integration very easy integration point and by aggregating locks it's we",
    "start": "300680",
    "end": "306039"
  },
  {
    "text": "really found that this is key to understanding this kind of system so really um lot of the",
    "start": "306039",
    "end": "314199"
  },
  {
    "text": "experiences is this is um comes around this system we started building around 10 years ago which is uh uh the",
    "start": "314199",
    "end": "322880"
  },
  {
    "text": "equivalent of NHS spine so it's a it's a prescription Service central",
    "start": "322880",
    "end": "328400"
  },
  {
    "text": "prescription services medication Services supervision of prescriptions pharmacies uh Etc centralized system",
    "start": "328400",
    "end": "335759"
  },
  {
    "text": "that we've had in Denmark for the last 10 years so this was one of our big first",
    "start": "335759",
    "end": "341479"
  },
  {
    "start": "340000",
    "end": "415000"
  },
  {
    "text": "big uh you know 24/7 systems which were really Mission critical distributed in",
    "start": "341479",
    "end": "346680"
  },
  {
    "text": "many ways so it's really important to have a availability you know you need uh",
    "start": "346680",
    "end": "351840"
  },
  {
    "text": "doctors at the emergency room to be able to to prescribe drugs even in the middle of the night and to be able to look at",
    "start": "351840",
    "end": "358319"
  },
  {
    "text": "people's prescription records there's a lot of security requirements which made the devops uh pretty cumbersome uh lots",
    "start": "358319",
    "end": "366680"
  },
  {
    "text": "of servers and many different kinds of services running on these systems and also a thing that complicated a lot is",
    "start": "366680",
    "end": "373800"
  },
  {
    "text": "this was part of a distributed system where we only controlled a fraction of it because there was like",
    "start": "373800",
    "end": "379120"
  },
  {
    "text": "40ish different systems at hospitals and and doctors and various services that",
    "start": "379120",
    "end": "384680"
  },
  {
    "text": "would interact with this and generate data that could flood and cause all kinds of issues",
    "start": "384680",
    "end": "390360"
  },
  {
    "text": "um so in this environment and this was you know just when devops and",
    "start": "390360",
    "end": "395479"
  },
  {
    "text": "distributed systems was really fairly new uh we um we set out and actually",
    "start": "395479",
    "end": "402520"
  },
  {
    "text": "picked uh a tool for doing log aggregation um and what we found here",
    "start": "402520",
    "end": "407720"
  },
  {
    "text": "are some of the interesting things we found actually even today lots of people are not using log aggregation so so the",
    "start": "407720",
    "end": "415879"
  },
  {
    "start": "415000",
    "end": "480000"
  },
  {
    "text": "the most important thing you get when you have a log agation system is to you want to build as have an idea of",
    "start": "415879",
    "end": "422280"
  },
  {
    "text": "what's normal so we set up this place and in the de teams which would show",
    "start": "422280",
    "end": "429160"
  },
  {
    "text": "dashboards of how many transactions did we do today what what kinds of Errors",
    "start": "429160",
    "end": "434360"
  },
  {
    "text": "happened uh today and by having it visually right",
    "start": "434360",
    "end": "439400"
  },
  {
    "text": "there in front of you um you get the sense of normal where you you take the AI of the brain uh and actually apply",
    "start": "439400",
    "end": "446720"
  },
  {
    "text": "apply it there so you could immediately see the devs uh could immediately see if",
    "start": "446720",
    "end": "453039"
  },
  {
    "text": "something was different than it used to be um so we put up dashboards could be",
    "start": "453039",
    "end": "460400"
  },
  {
    "text": "something like this is just a sample dashboard it's not from the exo system but these visual things that you put up",
    "start": "460400",
    "end": "466520"
  },
  {
    "text": "that makes it uh there's some information you can your brain can can process and look at and understand",
    "start": "466520",
    "end": "473039"
  },
  {
    "text": "what's normal um then one of the most important metrics",
    "start": "473039",
    "end": "479879"
  },
  {
    "text": "is something like just you know just transactions over the day what's happening in the system so this could be",
    "start": "479879",
    "end": "485120"
  },
  {
    "start": "480000",
    "end": "550000"
  },
  {
    "text": "how many prescriptions are are being prescribed during the course of a day or the course of the week this could be",
    "start": "485120",
    "end": "490840"
  },
  {
    "text": "maybe this is lunch break everybody goes off for lunch break so it's normal to have a a dip around there and",
    "start": "490840",
    "end": "497639"
  },
  {
    "text": "then uh very very easy thing to uh to to do is just add a trend line for the same",
    "start": "497639",
    "end": "504520"
  },
  {
    "text": "day last week so you compareed compared to last week it's a that's a super easy it makes it very easy to see what goes",
    "start": "504520",
    "end": "511400"
  },
  {
    "text": "on and then of course every now and then you get weird things like the first day after Christmas or the first day after",
    "start": "511400",
    "end": "517320"
  },
  {
    "text": "Easter break uh typically the first day after after break lots of people kind of",
    "start": "517320",
    "end": "523599"
  },
  {
    "text": "aggregating their illnesses and they all come to the doctor at the on the Monday or the Tuesday after the break so you'll",
    "start": "523599",
    "end": "528920"
  },
  {
    "text": "see these kinds of patterns so they're off every every now and then this doesn't this isn't right but but in many",
    "start": "528920",
    "end": "536200"
  },
  {
    "text": "cases that's a very easy measure um to just you don't",
    "start": "536200",
    "end": "541519"
  },
  {
    "text": "need uh you know fancy AI you just need people actually looking at these graphs",
    "start": "541519",
    "end": "546560"
  },
  {
    "text": "every day it's very very very simple so another thing is because of",
    "start": "546560",
    "end": "552640"
  },
  {
    "start": "550000",
    "end": "615000"
  },
  {
    "text": "the security here you know there's really Dev and Ops were really divided",
    "start": "552640",
    "end": "557959"
  },
  {
    "text": "right because this is like uh often in a bank environment we had operations completely isolated from Dev uh and",
    "start": "557959",
    "end": "565440"
  },
  {
    "text": "everything Ops was supposed to do went through the ticketing system so you need to configure this you need to install",
    "start": "565440",
    "end": "571160"
  },
  {
    "text": "this there's no tinkering around with anything because of course this is Healthcare information so we need exact",
    "start": "571160",
    "end": "577880"
  },
  {
    "text": "tracking on who does what um in the in the operations environment so it turned",
    "start": "577880",
    "end": "584560"
  },
  {
    "text": "out having access to the locks in the system of course with an audit record of",
    "start": "584560",
    "end": "590600"
  },
  {
    "text": "who accessed which locks what did they do um is uh is a nice readonly way of",
    "start": "590600",
    "end": "597079"
  },
  {
    "text": "having access into the operations environment where you could still learn a lot about the system as it's running",
    "start": "597079",
    "end": "603760"
  },
  {
    "text": "without having you know being afraid of touching something or making uh breaking",
    "start": "603760",
    "end": "609120"
  },
  {
    "text": "things in in the operation system so a key thing is to also be able to",
    "start": "609120",
    "end": "616519"
  },
  {
    "start": "615000",
    "end": "690000"
  },
  {
    "text": "with this system be able to iterate and explore so you might already have uh a",
    "start": "616519",
    "end": "624440"
  },
  {
    "text": "metric system setup where you count you know how much CPU how much dis Etc uh",
    "start": "624440",
    "end": "631279"
  },
  {
    "text": "how much how many how many um transactions of various kinds that you",
    "start": "631279",
    "end": "636720"
  },
  {
    "text": "have but often you know the the cycle for adding extra information to this or",
    "start": "636720",
    "end": "642279"
  },
  {
    "text": "explore things is is is pretty uh slow so we often see that you know there's",
    "start": "642279",
    "end": "649320"
  },
  {
    "text": "some team that'll go once and set up the dashboard and then you know you never go",
    "start": "649320",
    "end": "655760"
  },
  {
    "text": "back and change it um but we find that it's really um super valuable that",
    "start": "655760",
    "end": "661320"
  },
  {
    "text": "everyone all the devs can go build their own variations of dashboard to play around with it and easily extract new",
    "start": "661320",
    "end": "667560"
  },
  {
    "text": "kinds of information out of out of the loog stream uh and that might sound like it's",
    "start": "667560",
    "end": "674480"
  },
  {
    "text": "difficult but it's actually not so so this whole idea of being able to iterate and and have an explorative",
    "start": "674480",
    "end": "681399"
  },
  {
    "text": "um kind of approach to to your metrics to your logs is um is really important",
    "start": "681399",
    "end": "690000"
  },
  {
    "text": "so you get um very diverse in this our you know our Healthcare System uh was at",
    "start": "690000",
    "end": "696240"
  },
  {
    "text": "least these kind different kinds of of services and systems and you can imagine they each for to get data out of each of",
    "start": "696240",
    "end": "704200"
  },
  {
    "text": "those right there's a different way of doing uh various ways of things and these things so by just taking the locks",
    "start": "704200",
    "end": "711800"
  },
  {
    "text": "and I mean the the flat files that come out of these systems it's a very easy way to just take these locks and ship",
    "start": "711800",
    "end": "718200"
  },
  {
    "text": "them now the interesting thing is how do you make that into into some interesting",
    "start": "718200",
    "end": "723279"
  },
  {
    "text": "data and this is a place where various log aggregation systems differ quite",
    "start": "723279",
    "end": "728480"
  },
  {
    "text": "quite a bit you know in some cases you have to configure the system to extract",
    "start": "728480",
    "end": "734040"
  },
  {
    "text": "relevant information when the data comes in uh but some of them also allow you to",
    "start": "734040",
    "end": "739639"
  },
  {
    "text": "ad hoc and at a later point in time extract the data that you want and that's that's that's a super",
    "start": "739639",
    "end": "746839"
  },
  {
    "text": "flexible way of doing that so you want to uh that's that's something we learned um that being able to go back and say I",
    "start": "746839",
    "end": "754160"
  },
  {
    "text": "really wish I'd indexed that attribute and have that be something that's super easy to do um has a high",
    "start": "754160",
    "end": "761680"
  },
  {
    "text": "value so our engine we want to Well turns out uh you know there's there's of",
    "start": "761680",
    "end": "770199"
  },
  {
    "start": "765000",
    "end": "820000"
  },
  {
    "text": "course two major players out there there's Splunk there's uh elastic uh and we found for many uh many of our",
    "start": "770199",
    "end": "777279"
  },
  {
    "text": "customers didn't were wen't ready to to pay for spunk it's it's you know it's it's priced by volume and um for various",
    "start": "777279",
    "end": "786360"
  },
  {
    "text": "reasons that we found it you know especially on smaller accounts difficult to um to get in um for elastic um we",
    "start": "786360",
    "end": "794399"
  },
  {
    "text": "also spend a lot of time uh you know deploying these systems",
    "start": "794399",
    "end": "799560"
  },
  {
    "text": "and they're they're also it's a bit tricky to at least run your own um uh because there are so many moving parts",
    "start": "799560",
    "end": "806519"
  },
  {
    "text": "so we wanted to do something that's simple you know fast flexible affordable simple to install and use uh to get this",
    "start": "806519",
    "end": "815680"
  },
  {
    "text": "to get all these all these benefits um so um so humo at the core of it is um",
    "start": "815680",
    "end": "826360"
  },
  {
    "text": "let's say it's a Time series text database uh",
    "start": "826360",
    "end": "832440"
  },
  {
    "text": "so it's an in-memory stream processing thing so it's like Advanced Event processing or bringing in these um",
    "start": "832440",
    "end": "839000"
  },
  {
    "text": "idioms and techniques from you know from the financial high frequency trading systems kdb plus uh is things where",
    "start": "839000",
    "end": "847079"
  },
  {
    "text": "instead of uh doing a lot of indexing up front um we're actually just very fast",
    "start": "847079",
    "end": "853600"
  },
  {
    "text": "at processing data at Brute Force um with some very very simple high level",
    "start": "853600",
    "end": "858839"
  },
  {
    "text": "indexing like time is the primary index that we have it's only the index pretty much",
    "start": "858839",
    "end": "865519"
  },
  {
    "text": "so so at the core of the engine is it it's P Json API thing and then we have",
    "start": "865519",
    "end": "871240"
  },
  {
    "text": "we build a front end for this so let's look at little at what the queries look like so we built",
    "start": "871240",
    "end": "878519"
  },
  {
    "start": "875000",
    "end": "965000"
  },
  {
    "text": "um query language that kind of resembles um you know Unix pipeline you want to do",
    "start": "878519",
    "end": "886160"
  },
  {
    "text": "grap into sort into unique into something um so uh a query that would",
    "start": "886160",
    "end": "893839"
  },
  {
    "text": "look like this in SQL select the average response time from the backend Services where the URL",
    "start": "893839",
    "end": "902240"
  },
  {
    "text": "looks like this this could be a query to do and the time is bigger than this and we want to group it by the method for",
    "start": "902240",
    "end": "909880"
  },
  {
    "text": "instance so you would write this in uh in this way in in our quiry language the",
    "start": "909880",
    "end": "916199"
  },
  {
    "text": "first things are filters we filter on tags and starting one day back um we",
    "start": "916199",
    "end": "921600"
  },
  {
    "text": "want to filter on that the URL is this um starts with this and then we just",
    "start": "921600",
    "end": "927120"
  },
  {
    "text": "Group by um group the data by Method averaging on response",
    "start": "927120",
    "end": "933199"
  },
  {
    "text": "time so we find this is very natural uh way to think of it as uh as a stream",
    "start": "933199",
    "end": "938639"
  },
  {
    "text": "processing uh language you imagine kind of mentally that um events enter all the",
    "start": "938639",
    "end": "944920"
  },
  {
    "text": "events of the system enter through this Pipeline and the on whatever comes out in the other end is the response of the",
    "start": "944920",
    "end": "952639"
  },
  {
    "text": "of the query and that applies both for like an ad hoc query and also for a standing query that is sits there as a",
    "start": "952639",
    "end": "959399"
  },
  {
    "text": "as a map produce pipeline or an event processing pipeline where events are fed into",
    "start": "959399",
    "end": "965639"
  },
  {
    "text": "um so the basic way how this works is um we",
    "start": "965639",
    "end": "972600"
  },
  {
    "text": "just store segments in many ways this is like how cfast stores its data um so we built our own back end",
    "start": "972600",
    "end": "980160"
  },
  {
    "text": "where you as you ingest data uh it's taged with various TXS it",
    "start": "980160",
    "end": "986279"
  },
  {
    "text": "could be front end TXS and data center tags like this and for each combination",
    "start": "986279",
    "end": "991720"
  },
  {
    "text": "of tags enters becomes a stream of segments kind of like a CFA",
    "start": "991720",
    "end": "997360"
  },
  {
    "text": "topic uh and it's stored compressed uh we can decompress it",
    "start": "997360",
    "end": "1003519"
  },
  {
    "text": "um to to process it and then when a given query comes",
    "start": "1003519",
    "end": "1009279"
  },
  {
    "text": "in you we saw before there's a there's a set of TXS and a Time range it could be",
    "start": "1009279",
    "end": "1016959"
  },
  {
    "text": "the back end in this time into valve from T1 to T3 that happens to match these segments of the of the streams so",
    "start": "1016959",
    "end": "1026280"
  },
  {
    "text": "we just pick we just root Force those and inside these we have a each of these blocks that adds up to uh depending on",
    "start": "1026280",
    "end": "1033640"
  },
  {
    "text": "the compression somewhere between um 50 and 100 uh megabytes for each of these",
    "start": "1033640",
    "end": "1040520"
  },
  {
    "text": "segments we have a little time index so we can also um just select as a portion",
    "start": "1040520",
    "end": "1046640"
  },
  {
    "text": "of the data in one of these so other than that once we once we do",
    "start": "1046640",
    "end": "1052440"
  },
  {
    "text": "that it we actually just brute force uh search and I'll get back to how that's",
    "start": "1052440",
    "end": "1058720"
  },
  {
    "text": "fast but because we have the entire data set in we can actually run interesting",
    "start": "1058720",
    "end": "1064640"
  },
  {
    "start": "1060000",
    "end": "1110000"
  },
  {
    "text": "stuff like at full speed run a regular expression over the locks so this is",
    "start": "1064640",
    "end": "1070840"
  },
  {
    "text": "the this is the power of this flexibility is this is how we extract",
    "start": "1070840",
    "end": "1076440"
  },
  {
    "text": "you could say we want to take the back end and we want to run a regex of there's some conference ID at this",
    "start": "1076440",
    "end": "1083120"
  },
  {
    "text": "position in URLs and then I want to group by that conference ID and select something right so you generate data out",
    "start": "1083120",
    "end": "1089760"
  },
  {
    "text": "of this so in many systems you would this this would be really difficult",
    "start": "1089760",
    "end": "1095320"
  },
  {
    "text": "because uh you extract you decide what to extract or what to index on when you",
    "start": "1095320",
    "end": "1100559"
  },
  {
    "text": "ingest the data but here we can actually at full speed run this",
    "start": "1100559",
    "end": "1107320"
  },
  {
    "text": "um um yeah so just a summary",
    "start": "1107320",
    "end": "1114159"
  },
  {
    "start": "1110000",
    "end": "1195000"
  },
  {
    "text": "um and it's like a Unix pipeline style reactive event processing we find that uh you know many",
    "start": "1114159",
    "end": "1121120"
  },
  {
    "text": "queries you want to do in these systems are have an aggregate component anyway",
    "start": "1121120",
    "end": "1126679"
  },
  {
    "text": "right so you often you have to scan the data many realistic queries of course it's nice in uh in a term index based",
    "start": "1126679",
    "end": "1133600"
  },
  {
    "text": "system that you can very easily go to a specific request ID find a specific",
    "start": "1133600",
    "end": "1138799"
  },
  {
    "text": "record um and of course elastic or the",
    "start": "1138799",
    "end": "1143960"
  },
  {
    "text": "likes are faster at finding specific things but uh what often happens uh is",
    "start": "1143960",
    "end": "1149559"
  },
  {
    "text": "you want to do a graph over response times or do some some weird aggregation",
    "start": "1149559",
    "end": "1155240"
  },
  {
    "text": "across or selection so you have to scan the data uh anyways and then it becomes actually",
    "start": "1155240",
    "end": "1161240"
  },
  {
    "text": "faster to just do make sure you do serial reads from disk and are really",
    "start": "1161240",
    "end": "1166720"
  },
  {
    "text": "careful to stay on cach Etc and it's really super valuable to",
    "start": "1166720",
    "end": "1172880"
  },
  {
    "text": "have this schema on query you could say extract data out of the locks as you're processing it",
    "start": "1172880",
    "end": "1179240"
  },
  {
    "text": "um because it's like a time it's like having a time machine right you can go back to a year ago and say gee I wish I",
    "start": "1179240",
    "end": "1187039"
  },
  {
    "text": "indexed that attribute",
    "start": "1187039",
    "end": "1191200"
  },
  {
    "text": "um so how do we make this um go fast",
    "start": "1192120",
    "end": "1200240"
  },
  {
    "start": "1195000",
    "end": "1355000"
  },
  {
    "text": "uh we apply a good dose of mechanical sympathy so Jackie Stewart was this",
    "start": "1200559",
    "end": "1205600"
  },
  {
    "text": "British um Formula 1 driver um who was really famous in the 60s he went he he",
    "start": "1205600",
    "end": "1212440"
  },
  {
    "text": "won three World Championships in Formula 1 and the special thing about him in",
    "start": "1212440",
    "end": "1217960"
  },
  {
    "text": "this context is he came up with this name of mechanical sympathy arguing that you know you can drive better you can be",
    "start": "1217960",
    "end": "1223960"
  },
  {
    "text": "a better race driver if you really understand your car so he really spent a lot of the effort understanding the car exactly uh you",
    "start": "1223960",
    "end": "1231200"
  },
  {
    "text": "know he he was the mechanic himself he could he understood every aspect of it and you be one with the car so this this",
    "start": "1231200",
    "end": "1238840"
  },
  {
    "text": "idea applied in in software systems of course has been um you know Martin",
    "start": "1238840",
    "end": "1244760"
  },
  {
    "text": "Thompson has been walking around uh talking about mechanical sympathy in terms of computers mostly uh in terms of",
    "start": "1244760",
    "end": "1253360"
  },
  {
    "text": "understanding what your CPUs look like um understanding what the caching",
    "start": "1253360",
    "end": "1259000"
  },
  {
    "text": "infrastructure looks like what how to best access your data put it on cores uh",
    "start": "1259000",
    "end": "1265120"
  },
  {
    "text": "because the there's between there's almost an order of magnitude difference between accessing data on a local core",
    "start": "1265120",
    "end": "1272720"
  },
  {
    "text": "uh on the cache and in main memory so if you can have data uh if you can have an",
    "start": "1272720",
    "end": "1279120"
  },
  {
    "text": "active data set on on a core that runs you know much much much",
    "start": "1279120",
    "end": "1284799"
  },
  {
    "text": "faster and the key trick to making this Brute Force thing run fast is to have it compressed on dis loaded up onto a core",
    "start": "1284799",
    "end": "1293520"
  },
  {
    "text": "in small chunks or we then uncompress it because the bandwidth up is maybe a",
    "start": "1293520",
    "end": "1300520"
  },
  {
    "text": "tenth we or 10x because it we loaded up compressed then we decompress it on the",
    "start": "1300520",
    "end": "1306120"
  },
  {
    "text": "core and then you have super fast access to run a regx over this little chunk or run extract or or or do comparisons on",
    "start": "1306120",
    "end": "1314279"
  },
  {
    "text": "on the pieces of data so of course that's um that's a lot of uh there's a lot of",
    "start": "1314279",
    "end": "1321120"
  },
  {
    "text": "engineering that goes into that and also guessing because you really it's really difficult to uh to",
    "start": "1321120",
    "end": "1327520"
  },
  {
    "text": "measure these things you just have to kind of feel like you're are the today I",
    "start": "1327520",
    "end": "1333440"
  },
  {
    "text": "am the CPU but uh having this sympathy with um with",
    "start": "1333440",
    "end": "1339640"
  },
  {
    "text": "the course and you can go online uh Martin has done several talks on how to",
    "start": "1339640",
    "end": "1345720"
  },
  {
    "text": "employ this uh and how to use in various contexts",
    "start": "1345720",
    "end": "1352600"
  },
  {
    "text": "um so the it's it's really amazing how uh it's",
    "start": "1352600",
    "end": "1360320"
  },
  {
    "start": "1355000",
    "end": "1420000"
  },
  {
    "text": "an this interesting quote the most amazing achievement of the computer software industry is its continuing",
    "start": "1360320",
    "end": "1366240"
  },
  {
    "text": "cancellation of the steady and staggering gains made by computer hardware industry you know we've been so",
    "start": "1366240",
    "end": "1371760"
  },
  {
    "text": "busy you know especially the last 10 years we're building distributed systems",
    "start": "1371760",
    "end": "1376919"
  },
  {
    "text": "scale out system systems um and and really not caring about uh",
    "start": "1376919",
    "end": "1384840"
  },
  {
    "text": "the hardware it's uh you know Hardware is so cheap that we can just throw more",
    "start": "1384840",
    "end": "1390159"
  },
  {
    "text": "Hardware at it uh and you know sometimes this gets to a point where it gets",
    "start": "1390159",
    "end": "1395240"
  },
  {
    "text": "totally ridiculous um because if you do things right you can you know you can",
    "start": "1395240",
    "end": "1401039"
  },
  {
    "text": "save an order of magnitude on on system so our current finding is you know with",
    "start": "1401039",
    "end": "1407600"
  },
  {
    "text": "hum know we can also you can save an order of magnitude on your servers right we can turn five or 10 servers into one",
    "start": "1407600",
    "end": "1415440"
  },
  {
    "text": "um but just doing the right thing",
    "start": "1415440",
    "end": "1421600"
  },
  {
    "text": "so the the Guist of it is to get the r speed in the code you know the active",
    "start": "1421600",
    "end": "1428240"
  },
  {
    "text": "data set of in Loops fits on Cache you want to make sure you don't do any dynamic allocations in the in Loop once",
    "start": "1428240",
    "end": "1434159"
  },
  {
    "text": "you set up you can go because allocations involveed synchronization with other cores you want to bind your",
    "start": "1434159",
    "end": "1441520"
  },
  {
    "text": "stuff to core so that um you don't the data doesn't move around especially on",
    "start": "1441520",
    "end": "1447200"
  },
  {
    "text": "on multi-socket systems memory banks gets associated with the CPUs on the",
    "start": "1447200",
    "end": "1453720"
  },
  {
    "text": "cores hyperd threads are just in the way if you can actually utilize your machine",
    "start": "1453720",
    "end": "1459039"
  },
  {
    "text": "uh you know it's just it just H gives you half the cach size so the hyper threads are two threads that run in the",
    "start": "1459039",
    "end": "1465360"
  },
  {
    "text": "same core um using compressed storage actually the biggest performance gain uh",
    "start": "1465360",
    "end": "1472799"
  },
  {
    "text": "we see constantly or the biggest difference between different systems is how good does how well does the the data",
    "start": "1472799",
    "end": "1478559"
  },
  {
    "text": "compress the more we can compress it the better bandwidth we get all the way throughout the iio system main memory to",
    "start": "1478559",
    "end": "1485279"
  },
  {
    "text": "to CPU uh it almost doesn't matter how long time it takes to to decompress it but of",
    "start": "1485279",
    "end": "1490520"
  },
  {
    "text": "course fast decompression is important and I think having fast decompression that's going to be that's going to be an",
    "start": "1490520",
    "end": "1497080"
  },
  {
    "text": "important thing in new hardware architectures uh int from Intel going forward we I'm certain we're going to",
    "start": "1497080",
    "end": "1502480"
  },
  {
    "text": "see Hardware supported decompression uh directly in Hardware uh because this is so important uh to get everything out of",
    "start": "1502480",
    "end": "1509039"
  },
  {
    "text": "the machine sequential read from dis that's an old-timer so there's all these tricks",
    "start": "1509039",
    "end": "1514640"
  },
  {
    "text": "in the book that you can you can uh listen to Martin's talk uh talks and",
    "start": "1514640",
    "end": "1520799"
  },
  {
    "text": "um and and learn it so on inest how does it work um",
    "start": "1520799",
    "end": "1529399"
  },
  {
    "start": "1525000",
    "end": "1560000"
  },
  {
    "text": "we have bunch of HTP Json apis or you can use various other tools like uh we",
    "start": "1529399",
    "end": "1536120"
  },
  {
    "text": "support elastics bulk API and file bead API so you can use existing beats uh",
    "start": "1536120",
    "end": "1543080"
  },
  {
    "text": "from from elastic to load data in um we can load net flow directly uh from",
    "start": "1543080",
    "end": "1551039"
  },
  {
    "text": "firewalls um syis lock Etc it's very easy for us to of course add new kinds",
    "start": "1551039",
    "end": "1556320"
  },
  {
    "text": "of things like this so IND performance this is this is often",
    "start": "1556320",
    "end": "1562080"
  },
  {
    "start": "1560000",
    "end": "1600000"
  },
  {
    "text": "one of the pain points of other alternative Solutions uh so arriving data we just process it really minimally",
    "start": "1562080",
    "end": "1568679"
  },
  {
    "text": "and basically just compress it and a persist it in a pendon fashion so we",
    "start": "1568679",
    "end": "1575679"
  },
  {
    "text": "don't have any indexing B TBL sorted on diss things right and you can easily do 100 gigs a day uh per core on an ingest",
    "start": "1575679",
    "end": "1585039"
  },
  {
    "text": "node so this is uh this is often a paino that you need you know lots of big",
    "start": "1585039",
    "end": "1590159"
  },
  {
    "text": "machines to sit there and take data in that you might never look at",
    "start": "1590159",
    "end": "1596559"
  },
  {
    "text": "um so the pipeline is quite simple you can either go directly or via Kafka um",
    "start": "1597960",
    "end": "1605720"
  },
  {
    "start": "1600000",
    "end": "1680000"
  },
  {
    "text": "and if you if you set it up through a capka uh this is actually showing that we we we try to stay out of the loop on",
    "start": "1605720",
    "end": "1612720"
  },
  {
    "text": "this complexities of storing three copies and making sure that everything is consistent across different copies",
    "start": "1612720",
    "end": "1618440"
  },
  {
    "text": "and bit rod and whatnot so block stores are very good at at saving extra copies of",
    "start": "1618440",
    "end": "1624399"
  },
  {
    "text": "data cka is also very good on taking this inflite extra copies of data so you can have um as data arrives we can load",
    "start": "1624399",
    "end": "1632240"
  },
  {
    "text": "it through Kafka humu just does the processing and builds up these segments and then pushes them off to a",
    "start": "1632240",
    "end": "1638320"
  },
  {
    "text": "block store so this block store could just be a file system uh in a simple",
    "start": "1638320",
    "end": "1645200"
  },
  {
    "text": "setup and with that uh you know the once it's a block is stored",
    "start": "1645200",
    "end": "1650760"
  },
  {
    "text": "here we can act it all the way through Kafka so we can release um release that",
    "start": "1650760",
    "end": "1656480"
  },
  {
    "text": "uh those messages could be another messaging system so basically we try to stay out of the loop of being a a",
    "start": "1656480",
    "end": "1663559"
  },
  {
    "text": "complex distributed system keeping three copies of all your locks Etc if case you want that we can offload that to other",
    "start": "1663559",
    "end": "1670600"
  },
  {
    "text": "infrastructure surrounding it um then",
    "start": "1670600",
    "end": "1679518"
  },
  {
    "text": "also so this is what we're working on uh being able to run distributed quiries",
    "start": "1679840",
    "end": "1686120"
  },
  {
    "start": "1680000",
    "end": "1720000"
  },
  {
    "text": "actually at this point we we haven't we don't have any any examples of customers so we actually have some pretty large",
    "start": "1686120",
    "end": "1692200"
  },
  {
    "text": "ones but uh it we uh we don't have anywhere it has been a big issue that we",
    "start": "1692200",
    "end": "1697720"
  },
  {
    "text": "can't query fast enough so that being able to query fast enough uh it's it's",
    "start": "1697720",
    "end": "1702760"
  },
  {
    "text": "going to be it's this is the next major feature we're building on is being able to use the Block store and then",
    "start": "1702760",
    "end": "1708840"
  },
  {
    "text": "essentially have a number of different query nodes that can just read out of the Block store and you can distribute a",
    "start": "1708840",
    "end": "1714120"
  },
  {
    "text": "query over segments",
    "start": "1714120",
    "end": "1719559"
  },
  {
    "text": "so the product we have today is just a single note um that we deliver you know",
    "start": "1719559",
    "end": "1725880"
  },
  {
    "start": "1720000",
    "end": "1755000"
  },
  {
    "text": "online hosted or as a container for download on premise uh that's it's an",
    "start": "1725880",
    "end": "1732159"
  },
  {
    "text": "important thing um to have this un premised solution because many of our customers you know they're in health",
    "start": "1732159",
    "end": "1737360"
  },
  {
    "text": "healthare or they're in banking or something want uh to have their own lock",
    "start": "1737360",
    "end": "1743640"
  },
  {
    "text": "data and as I show before we have a demo system um and we've spent the last two",
    "start": "1743640",
    "end": "1749519"
  },
  {
    "text": "months almost doing nothing but writing documentation and kind of wrapping up things but",
    "start": "1749519",
    "end": "1755240"
  },
  {
    "start": "1755000",
    "end": "2085000"
  },
  {
    "text": "um I think we can spend just five minutes on um trying to go back and look",
    "start": "1755240",
    "end": "1761360"
  },
  {
    "text": "at the at the system you can still hear me",
    "start": "1761360",
    "end": "1768840"
  },
  {
    "text": "so um we saw here this was the query to",
    "start": "1768840",
    "end": "1775880"
  },
  {
    "text": "figure out what's uh hot and not right now and get at GitHub so imagine we want to figure out",
    "start": "1775880",
    "end": "1785039"
  },
  {
    "text": "um something more complex like I like to give an example of what a regx looks",
    "start": "1785039",
    "end": "1790240"
  },
  {
    "text": "like um so so these queries that go like this we can you know we could we could",
    "start": "1790240",
    "end": "1796240"
  },
  {
    "text": "visualize them differently so if we take just uh the 10",
    "start": "1796240",
    "end": "1802039"
  },
  {
    "text": "most interesting ones and show that as a pie chart then we get the 10 most popular repos whatever we can put these",
    "start": "1802039",
    "end": "1808640"
  },
  {
    "text": "on a dashboard so a dashboard is just a collection of query results like this so",
    "start": "1808640",
    "end": "1814440"
  },
  {
    "text": "this is the and just a sample dashboard that shows um most watched today that's",
    "start": "1814440",
    "end": "1820960"
  },
  {
    "text": "what we talked upon the actual inflow of events right now uh at GitHub",
    "start": "1820960",
    "end": "1828000"
  },
  {
    "text": "the here's a query that shows the users that did the most comments",
    "start": "1828000",
    "end": "1833679"
  },
  {
    "text": "today um so let's see we can open the query",
    "start": "1833679",
    "end": "1838840"
  },
  {
    "text": "over here so this takes all events that are common events and group by the",
    "start": "1838840",
    "end": "1846600"
  },
  {
    "text": "login counting uh how many of these are and then sort",
    "start": "1846600",
    "end": "1853440"
  },
  {
    "text": "them another example here is um",
    "start": "1854039",
    "end": "1859240"
  },
  {
    "text": "most forked so in here we have we take all",
    "start": "1860080",
    "end": "1866960"
  },
  {
    "text": "the events that are forked so this is um if we if you just write any text then",
    "start": "1866960",
    "end": "1873519"
  },
  {
    "text": "it becomes just a free text grap if it has an equals in it somewhere here then",
    "start": "1873519",
    "end": "1878919"
  },
  {
    "text": "it's a more directed search for those attributes then we run a regex over",
    "start": "1878919",
    "end": "1884440"
  },
  {
    "text": "these Fork events like let's try to look at what a fork event looks like like comes here Fork",
    "start": "1884440",
    "end": "1893159"
  },
  {
    "text": "event has all this information but most importantly it has the repository that",
    "start": "1893159",
    "end": "1898559"
  },
  {
    "text": "it pertains to the ones that's forked and it has a kind of an organization or user and then the repository name so if",
    "start": "1898559",
    "end": "1906679"
  },
  {
    "text": "we ex if you want to extract that I just run a regex over all these ones uh",
    "start": "1906679",
    "end": "1914480"
  },
  {
    "text": "finding the repository name of something that comes after slash so this just a name group in a regular expression uh",
    "start": "1914480",
    "end": "1923799"
  },
  {
    "text": "and so after doing this we have an an extra attribute",
    "start": "1923799",
    "end": "1929080"
  },
  {
    "text": "available that um is is the rep name and then we can",
    "start": "1929080",
    "end": "1934519"
  },
  {
    "text": "Group by that so this is disregarding who owns this repo what are the",
    "start": "1934519",
    "end": "1940320"
  },
  {
    "text": "different kinds of uh uh what are the names of uh repositories",
    "start": "1940320",
    "end": "1946760"
  },
  {
    "text": "that get forked and we could do this over you know a longer time over the last",
    "start": "1946760",
    "end": "1952039"
  },
  {
    "text": "week um so this actually uh depending on the",
    "start": "1952039",
    "end": "1958440"
  },
  {
    "text": "complexity of the query of course this easily runs at uh",
    "start": "1958440",
    "end": "1964000"
  },
  {
    "text": "1.5 1.5 gig of indest data per second per core so this is a four core node we",
    "start": "1964000",
    "end": "1970679"
  },
  {
    "text": "run at uh let's see 5 gabes a second um",
    "start": "1970679",
    "end": "1978600"
  },
  {
    "text": "so you want to run a similar complex system I have a bigger uh I have a I have a bigger",
    "start": "1978600",
    "end": "1986320"
  },
  {
    "text": "server here let one in here",
    "start": "1986320",
    "end": "1992480"
  },
  {
    "text": "go I want to lock in I have the some GitHub data",
    "start": "1992480",
    "end": "1999919"
  },
  {
    "text": "here uh if I want to run this here [Music]",
    "start": "1999919",
    "end": "2005200"
  },
  {
    "text": "over um this is somewhat bigger bigger machine it get it should be able to get",
    "start": "2005200",
    "end": "2010760"
  },
  {
    "text": "close to 10 gigs a second for something like",
    "start": "2010760",
    "end": "2015679"
  },
  {
    "text": "this so [Music] um so being able to to play with these",
    "start": "2015960",
    "end": "2022279"
  },
  {
    "text": "queries and have have access for devs all the way in uh for these kinds of",
    "start": "2022279",
    "end": "2027600"
  },
  {
    "text": "things um is is super valuable so instead of you know dashboards being",
    "start": "2027600",
    "end": "2033720"
  },
  {
    "text": "something that was set up once now it becomes part of the interactive experience when you're both debugging",
    "start": "2033720",
    "end": "2039880"
  },
  {
    "text": "finding bugs uh and in general monitoring the system",
    "start": "2039880",
    "end": "2045840"
  },
  {
    "text": "um so that's uh it's something we find",
    "start": "2045840",
    "end": "2051440"
  },
  {
    "text": "um that has a lot of value and it gives you you know in total insights in into",
    "start": "2051440",
    "end": "2057200"
  },
  {
    "text": "your system of course distributed systems are always difficult uh and hard to understand but just can just let you",
    "start": "2057200",
    "end": "2063960"
  },
  {
    "text": "do it a little more uh be a bit bit of help in that regard so",
    "start": "2063960",
    "end": "2070610"
  },
  {
    "text": "[Music] um I think I'm going to end here and uh",
    "start": "2070610",
    "end": "2076599"
  },
  {
    "text": "and take questions um uh from the audience in case we have some",
    "start": "2076599",
    "end": "2082358"
  },
  {
    "text": "yeah online question yeah sure do you have a way to send alarms or",
    "start": "2082359",
    "end": "2088118"
  },
  {
    "start": "2085000",
    "end": "2242000"
  },
  {
    "text": "set predic predictions as data doc not currently we um that's one of the the",
    "start": "2088119",
    "end": "2096599"
  },
  {
    "text": "first things in our in our pipeline of things to do um so alarms and alarms is",
    "start": "2096599",
    "end": "2103000"
  },
  {
    "text": "definitely one of the first things that be coming up with so this is uh the first GA release that we had we've been",
    "start": "2103000",
    "end": "2108800"
  },
  {
    "text": "working on this for for nine months um mostly Christians sitting there and me",
    "start": "2108800",
    "end": "2114359"
  },
  {
    "text": "uh and now we over the last three or four three months we've been building up the team",
    "start": "2114359",
    "end": "2120640"
  },
  {
    "text": "uh with marketing resources and and and more so now we're we're seven people um",
    "start": "2120640",
    "end": "2127839"
  },
  {
    "text": "but there's uh that's that's obvious uh and it's quite easy to to do something",
    "start": "2127839",
    "end": "2133920"
  },
  {
    "text": "uh like alerts of course but um that's that's one of the next right",
    "start": "2133920",
    "end": "2141520"
  },
  {
    "text": "uh we have some fairly large customers we're running tests at uh that uh we're",
    "start": "2141520",
    "end": "2147880"
  },
  {
    "text": "letting those customers actually drive uh the decisions these first few big",
    "start": "2147880",
    "end": "2153119"
  },
  {
    "text": "test customers actually drive the uh the pipeline of features we Implement",
    "start": "2153119",
    "end": "2160800"
  },
  {
    "text": "um yeah okay yeah",
    "start": "2161640",
    "end": "2167400"
  },
  {
    "text": "you yes Wei you're most welcome to come and uh and buy it um so we're still in",
    "start": "2172560",
    "end": "2179560"
  },
  {
    "text": "the process of figuring out what this should cost to be to be honest um and uh and right now you know we're interested",
    "start": "2179560",
    "end": "2186160"
  },
  {
    "text": "in reference customers so that's something that's a bargaining chip you can come back with uh at this point uh",
    "start": "2186160",
    "end": "2191680"
  },
  {
    "text": "it's more important to get referenced customers than to get a lot of money at this point um",
    "start": "2191680",
    "end": "2198119"
  },
  {
    "text": "so we're hoping for uh a price point of",
    "start": "2198119",
    "end": "2203240"
  },
  {
    "text": "10K euro per note um in many in many instances you",
    "start": "2203240",
    "end": "2209560"
  },
  {
    "text": "you just want one right so so we we we don't want volume pricing uh we want a I",
    "start": "2209560",
    "end": "2216359"
  },
  {
    "text": "mean pricing model is something that's annual subscription to run the supported",
    "start": "2216359",
    "end": "2221800"
  },
  {
    "text": "software and it's not open source",
    "start": "2221800",
    "end": "2227480"
  },
  {
    "text": "MH okay thank you very [Applause]",
    "start": "2228319",
    "end": "2239679"
  },
  {
    "text": "much",
    "start": "2241920",
    "end": "2244920"
  }
]