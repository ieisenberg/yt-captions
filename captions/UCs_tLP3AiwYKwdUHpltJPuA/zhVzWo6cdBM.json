[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "[Applause] all righty welcome to the talk that would tell you not to trust anything and",
    "start": "2020",
    "end": "7040"
  },
  {
    "text": "be paranoid uh so we're going to talk uh so before I start yes uh this is talk is",
    "start": "7040",
    "end": "12759"
  },
  {
    "text": "not security advice uh so in any situation nothing is 100% secure always do your own research and consider the",
    "start": "12759",
    "end": "18880"
  },
  {
    "text": "trade-offs and how much risk tolerance you have uh in any particular situation so let's talk about untrusted code and",
    "start": "18880",
    "end": "26679"
  },
  {
    "start": "25000",
    "end": "863000"
  },
  {
    "text": "we're going to see a few hands from the audience let's say you have a that you want to solve and you go to GitHub you",
    "start": "26679",
    "end": "32840"
  },
  {
    "text": "find someone who's made an open source project that's similar to the problem that you're trying to solve uh what do you do you clone the project uh and then",
    "start": "32840",
    "end": "39840"
  },
  {
    "text": "you read the read me and it says okay install these dependencies who just installs 200 dependencies from like",
    "start": "39840",
    "end": "47239"
  },
  {
    "text": "unknown sources yep yep so do I who will carefully go through all 200",
    "start": "47239",
    "end": "52520"
  },
  {
    "text": "dependencies to make sure that they're legit yeah oh those a few hands that's good who runs this kind of code from",
    "start": "52520",
    "end": "60239"
  },
  {
    "text": "strangers on the internet in some kind of sandbox like a container or a VM or something I yeah a few hands doing good",
    "start": "60239",
    "end": "66400"
  },
  {
    "text": "most of us don't um but this is kind of I I really liked uh radius trusted",
    "start": "66400",
    "end": "72439"
  },
  {
    "text": "versus trustworthy we tend to trust a lot of code whether it's trustworthy or not not going to go into I'm not going",
    "start": "72439",
    "end": "78280"
  },
  {
    "text": "to judge uh this talk is going to focus not so much on the code that we trust but the situations where we're running",
    "start": "78280",
    "end": "84479"
  },
  {
    "text": "untrusted code that we really really can't trust right the sort of situation where you have a website and the website",
    "start": "84479",
    "end": "91280"
  },
  {
    "text": "says upload your code here I will run it for you uh and it's a big sign saying please try to hack me um that kind of",
    "start": "91280",
    "end": "97880"
  },
  {
    "text": "situation where you're allowing users or strangers from the internet to upload code to your servers and running them as",
    "start": "97880",
    "end": "104439"
  },
  {
    "text": "part of your product uh now the typical example of this would be some kind of cloud hosting provider so who here works",
    "start": "104439",
    "end": "111200"
  },
  {
    "text": "at a cloud hosting provider of some kind your AWS is yeah yeah there's there",
    "start": "111200",
    "end": "116280"
  },
  {
    "text": "there's a couple of hands most of us don't who here works at some kind of web",
    "start": "116280",
    "end": "121960"
  },
  {
    "text": "app or some kind of like the web there is a web page as part of your product",
    "start": "121960",
    "end": "127439"
  },
  {
    "text": "the product does something else yeah okay that's more that's a more relevant example for most of us it was a more",
    "start": "127439",
    "end": "133599"
  },
  {
    "text": "relevant example for me so we're going to use that kind of example imagine you're working at Shopify right it is it",
    "start": "133599",
    "end": "141080"
  },
  {
    "text": "is a web app it's not really a cloud hosting provider uh Shopify stores cover a lot",
    "start": "141080",
    "end": "147680"
  },
  {
    "text": "of the online stores uh on the internet if you if you buy things regularly online you've probably bought through a",
    "start": "147680",
    "end": "153160"
  },
  {
    "text": "Shopify store and one of the things that makes Shopify really powerful I don't work at Shopify by the way um one of the",
    "start": "153160",
    "end": "160000"
  },
  {
    "text": "things that makes Shopify powerful is its third-party app Integrations the Shopify developers don't need to develop",
    "start": "160000",
    "end": "166440"
  },
  {
    "text": "features to cover every possible use case of every online store because",
    "start": "166440",
    "end": "171480"
  },
  {
    "text": "online store owners can install third party apps that then integrate into Shopify and add extra functionality okay",
    "start": "171480",
    "end": "178120"
  },
  {
    "text": "now this is pretty cool uh a lot of web apps will at some point have some kind of plug-in system or an API that people",
    "start": "178120",
    "end": "183720"
  },
  {
    "text": "can use and sharify is no different so the way that this works is the developer of the third party app runs their own",
    "start": "183720",
    "end": "190280"
  },
  {
    "text": "web servers these can talk to Shopify servers via a rest API or a graphql API",
    "start": "190280",
    "end": "196560"
  },
  {
    "text": "Shopify has both uh and in cases where they need to get information from",
    "start": "196560",
    "end": "201799"
  },
  {
    "text": "Shopify when something happens they can register a web hook and when something happens maybe a customer checks out or",
    "start": "201799",
    "end": "208560"
  },
  {
    "text": "something happens uh in the process of ordering or like delivering products",
    "start": "208560",
    "end": "214920"
  },
  {
    "text": "then uh Shopify servers will call make send requests to the third party apps",
    "start": "214920",
    "end": "221040"
  },
  {
    "text": "web server this is pretty standard but this has some potential issues um if you",
    "start": "221040",
    "end": "227519"
  },
  {
    "text": "were to try to put these third party apps in some kind of critical flow if",
    "start": "227519",
    "end": "232959"
  },
  {
    "text": "the third party app wants to integrate into the checkout process itself then",
    "start": "232959",
    "end": "238920"
  },
  {
    "text": "suddenly you if it's just kind of not part of the critical path and if the request to that third party app fails",
    "start": "238920",
    "end": "245920"
  },
  {
    "text": "and it's okay that's all right you can probably do that but let's say the customer wants to check out and you have",
    "start": "245920",
    "end": "252439"
  },
  {
    "text": "to wait for a response from this third party app before you can continue now suddenly the Shopify Engineers have this",
    "start": "252439",
    "end": "259519"
  },
  {
    "text": "source of potential problems and latency that they can't control uh these third",
    "start": "259519",
    "end": "264520"
  },
  {
    "text": "party apps wouldn't necessarily be ready for a huge spike in traffic from some popular online store having a sale for",
    "start": "264520",
    "end": "271919"
  },
  {
    "text": "example and that is exactly when you don't want your checkout process to stop working or something to be slow and",
    "start": "271919",
    "end": "278960"
  },
  {
    "text": "introduce friction into the process so you don't want to have a lot of third party apps potentially hundreds of third",
    "start": "278960",
    "end": "286120"
  },
  {
    "text": "party apps causing problems for your customers experience for the reliability",
    "start": "286120",
    "end": "291639"
  },
  {
    "text": "and speed that those customers are experiencing in their uh use of your",
    "start": "291639",
    "end": "297759"
  },
  {
    "text": "app so what do we do here and what did the Shopify developers do so they decided",
    "start": "298560",
    "end": "305680"
  },
  {
    "text": "that they wanted to have for some situations the ability to run",
    "start": "305680",
    "end": "310720"
  },
  {
    "text": "third-party code themselves right the third party app developers could build",
    "start": "310720",
    "end": "315759"
  },
  {
    "text": "the logic that they want to integrate into part of the Shopify product in part",
    "start": "315759",
    "end": "320960"
  },
  {
    "text": "of the critical flow where Shopify would host and run",
    "start": "320960",
    "end": "326039"
  },
  {
    "text": "those functions itself that way they can scale it up to meet demand as much as",
    "start": "326039",
    "end": "331280"
  },
  {
    "text": "they want uh they can make sure that they are fast enough that there isn't",
    "start": "331280",
    "end": "337160"
  },
  {
    "text": "some kind of network problem connecting to the other servers that there isn't a maintenance period um they are full",
    "start": "337160",
    "end": "342840"
  },
  {
    "text": "control over overrunning this third party code and they can have a lot more confidence integrating that into the",
    "start": "342840",
    "end": "349600"
  },
  {
    "text": "Shopify app in a way that could potentially slow down a customer",
    "start": "349600",
    "end": "355319"
  },
  {
    "text": "experience so as a spoiler they used web assembly for this and shout out to the Shopify Engineers",
    "start": "355319",
    "end": "362560"
  },
  {
    "text": "uh who have given talks about this made blog posts about this highly recommend checking out they give a go into a lot",
    "start": "362560",
    "end": "368120"
  },
  {
    "text": "more detail about how exactly they did this um so we're going to step away from",
    "start": "368120",
    "end": "374440"
  },
  {
    "text": "that for a little bit and talk about generally why do we not want to do this",
    "start": "374440",
    "end": "380639"
  },
  {
    "text": "why do we not want to run untrusted code because if you see this you should be uh",
    "start": "380639",
    "end": "387400"
  },
  {
    "text": "this should be your face uh this is really scary if someone has a code that",
    "start": "387400",
    "end": "393560"
  },
  {
    "text": "they've just uploaded to your website and you haven't carefully reviewed it yourself it's not from some well trusted",
    "start": "393560",
    "end": "399960"
  },
  {
    "text": "Source then a lot of things could potentially go wrong if you were to just say run this unrusted code as part of",
    "start": "399960",
    "end": "406840"
  },
  {
    "text": "your web server or part of some process that has access to anything then that",
    "start": "406840",
    "end": "412160"
  },
  {
    "text": "code could potentially access the keys that it has in memory the environment variables uh it could ACC if it has",
    "start": "412160",
    "end": "418960"
  },
  {
    "text": "permission to to talk to a database maybe this untrusted code could talk to that database as well uh typically a",
    "start": "418960",
    "end": "425080"
  },
  {
    "text": "single process running on on a machine is all of the that the Kel will see all that the operating system will see that",
    "start": "425080",
    "end": "431800"
  },
  {
    "text": "process has permission to do something so whatever that process is executing has permission to do that thing as well to read the memory or to access parts of",
    "start": "431800",
    "end": "438800"
  },
  {
    "text": "the operating system so this is pretty scary right the idea of running untrusted code but there are a lot of",
    "start": "438800",
    "end": "445160"
  },
  {
    "text": "people out there running untrusted code so how did they do it what are the options that we should consider in this",
    "start": "445160",
    "end": "450919"
  },
  {
    "text": "kind of situation so I'm going to go through a couple of different uh tools that are",
    "start": "450919",
    "end": "456919"
  },
  {
    "text": "out there uh that are all available to be used uh as each one is a kind of",
    "start": "456919",
    "end": "463000"
  },
  {
    "text": "Representative of a particular approach that you could take so the first one I want to focus in on is firecracker this",
    "start": "463000",
    "end": "470120"
  },
  {
    "text": "is a microv VM manager uh this was developed by AWS for Lambda and fate this is what your lambdas are running in",
    "start": "470120",
    "end": "477120"
  },
  {
    "text": "uh it is a tiny tiny virtual machine is the lightest lightweight the most lightweight possible virtual machine",
    "start": "477120",
    "end": "483080"
  },
  {
    "text": "they could build I think uh uses KVM the kernel virtual manager uh virtual machine uh and it has essentially you",
    "start": "483080",
    "end": "491440"
  },
  {
    "text": "get to run a little sandbox that has its own kernel its own operating system um",
    "start": "491440",
    "end": "496680"
  },
  {
    "text": "you have to run this on a bare metal machine because it relies on Hardware level virtualization right you cannot",
    "start": "496680",
    "end": "502599"
  },
  {
    "text": "run this in a virtual machine so you have to have actual physical machines or pay for bare metal machines on your",
    "start": "502599",
    "end": "508440"
  },
  {
    "text": "cloud provider so it is a bit more of a an investment to set up uh but this is",
    "start": "508440",
    "end": "514159"
  },
  {
    "text": "basically this the gold standard of security right you have a separate VM and a separate kernel uh for each bit of",
    "start": "514159",
    "end": "520440"
  },
  {
    "text": "untrusted code that you're running uh and it's not just firecracker uh there's a bunch of other tools for this like U",
    "start": "520440",
    "end": "526560"
  },
  {
    "text": "and Carter containers uh to look into at a different level we have Docker and I'm",
    "start": "526560",
    "end": "532760"
  },
  {
    "text": "using Docker here as a representative of sort of all Linux containers or all process containers they're sharing the",
    "start": "532760",
    "end": "538560"
  },
  {
    "text": "same kernel they're sharing the same operating system but relying on Tools in",
    "start": "538560",
    "end": "543800"
  },
  {
    "text": "that operating system that isolate processes and give them very very limited permissions right limiting the",
    "start": "543800",
    "end": "549480"
  },
  {
    "text": "memory limiting the CPU limiting what system calls it can make now I wouldn't necessarily recommend using Straight Up",
    "start": "549480",
    "end": "556160"
  },
  {
    "text": "containers uh for sandboxing unless you really know what you're doing uh but they uh it is one of the tools in the",
    "start": "556160",
    "end": "562480"
  },
  {
    "text": "toolbox to possibly use for this you can run it in a virtual machine you don't need that Hardware level",
    "start": "562480",
    "end": "567680"
  },
  {
    "text": "virtualization um if you using Docker specifically like be very careful with the docker demon and what has access to",
    "start": "567680",
    "end": "573760"
  },
  {
    "text": "the demon because the demon itself is very powerful um but yeah this will sandbox containers it will limit their",
    "start": "573760",
    "end": "580240"
  },
  {
    "text": "memory uh and it will limit what they can do and if you're running stuff on your own machine might be a good idea to",
    "start": "580240",
    "end": "585440"
  },
  {
    "text": "run untrusted code in a Docker container because that will help you at least get some level of security Now if you're not",
    "start": "585440",
    "end": "591160"
  },
  {
    "text": "sure about this whole sharing the kernel and making CIS thing because it is vulnerable to say a bug in the kernel",
    "start": "591160",
    "end": "596800"
  },
  {
    "text": "where some kind of malform system call could get out of the sandbox uh there is another layer uh called gvisor uh which",
    "start": "596800",
    "end": "604160"
  },
  {
    "text": "was built by Google this was originally built for cloud run and Cloud functions they don't really use that anymore they have a virtual machine based version now",
    "start": "604160",
    "end": "611720"
  },
  {
    "text": "um but this is a a tool open source tool that you can use uh and it's an extra",
    "start": "611720",
    "end": "617079"
  },
  {
    "text": "isolation layer on top of containers right it it sort of is a little bit of a proxy between the container and the",
    "start": "617079",
    "end": "623640"
  },
  {
    "text": "operating system uh to make sure that it is only making the cisal that uh you",
    "start": "623640",
    "end": "629240"
  },
  {
    "text": "want it to make and that it is talking to the kernel for you so there's less attack surface that can actually uh",
    "start": "629240",
    "end": "635200"
  },
  {
    "text": "exploit a vulnerability in the kernel so an extra layer on top of that but when we take a step back and we look at all",
    "start": "635200",
    "end": "641360"
  },
  {
    "text": "of these things think okay how expensive is this to run right how much work do I",
    "start": "641360",
    "end": "646560"
  },
  {
    "text": "need to go to to set this up and if I was going to run a lot of small bits of code what is that going to be like so if",
    "start": "646560",
    "end": "653320"
  },
  {
    "text": "you look at the websites for all of these different products they have um vastly different startup time times that",
    "start": "653320",
    "end": "659560"
  },
  {
    "text": "they quote uh so it took me a while to find someone that had actually like benchmarked these in a consistent way",
    "start": "659560",
    "end": "665440"
  },
  {
    "text": "across all of them uh so this paper uh Benchmark not just the startup time but how much memory they use and everything",
    "start": "665440",
    "end": "672920"
  },
  {
    "text": "um and for each one of these it kind of has a startup time of around a second uh",
    "start": "672920",
    "end": "679480"
  },
  {
    "text": "at least to start up one of these if you wanted to say have a lot of them that you start up they run for a very short",
    "start": "679480",
    "end": "684600"
  },
  {
    "text": "amount of time and then they stop it would actually be quite a lot of overhead to be continually started and stopping these uh you can make this",
    "start": "684600",
    "end": "691560"
  },
  {
    "text": "faster if you have a bunch of them ready to go uh and so you don't have to pay the full startup time everyone every",
    "start": "691560",
    "end": "697000"
  },
  {
    "text": "time you want to run something um and if you cut down the features that you use you can get the startup time smaller",
    "start": "697000",
    "end": "703040"
  },
  {
    "text": "than this but at the absolute minimum you're still talking in the sort of 100 of 100 millisecond range now 100",
    "start": "703040",
    "end": "709279"
  },
  {
    "text": "milliseconds isn't much but it's a lot to add to the request to the latency of a request if you're trying to do",
    "start": "709279",
    "end": "715240"
  },
  {
    "text": "something that's really fast and really light um this is perfectly good if you're wanting to run a virtual machine",
    "start": "715240",
    "end": "720920"
  },
  {
    "text": "on the cloud uh or you're running wanting to run a long lived process like a web server you don't care that it",
    "start": "720920",
    "end": "726120"
  },
  {
    "text": "takes just a second to Startup uh but if we're talking about small amounts of code the startup time uh comes into it",
    "start": "726120",
    "end": "733240"
  },
  {
    "text": "on top of that running a virtual machine takes a bunch of memory uh running containers is a lot of processors if you",
    "start": "733240",
    "end": "738959"
  },
  {
    "text": "have a lot of them and you have problems with context switching between processors there's a lot of extra overhead to running virtual machines and",
    "start": "738959",
    "end": "745720"
  },
  {
    "text": "to running separate processes if we could run untrusted code in the same",
    "start": "745720",
    "end": "751760"
  },
  {
    "text": "process as our actual where something that has permissions if we could safely run untrusted code within a process then",
    "start": "751760",
    "end": "759440"
  },
  {
    "text": "we could do this much much cheaper and someone has done this uh Cloud flare",
    "start": "759440",
    "end": "765440"
  },
  {
    "text": "uses V8 isolates to run many many uh Edge workers in the same process and",
    "start": "765440",
    "end": "773760"
  },
  {
    "text": "this gives them a 5 millisecond startup time so V8 is the JavaScript engine",
    "start": "773760",
    "end": "779079"
  },
  {
    "text": "underlying Chrome and V8 isolates are a feature of V8 that lets that lets you",
    "start": "779079",
    "end": "785480"
  },
  {
    "text": "run separate JavaScript engine contexts uh which in theory the",
    "start": "785480",
    "end": "790639"
  },
  {
    "text": "JavaScript inside that isolate cannot access things outside unless you allow",
    "start": "790639",
    "end": "795839"
  },
  {
    "text": "it to do so so Cloud FL has been doing this for a surprisingly long time um they have caught some criticism for this",
    "start": "795839",
    "end": "802160"
  },
  {
    "text": "as to whether it's secure but they've done a lot of work uh to make it uh as secure as they can uh but they're able",
    "start": "802160",
    "end": "809480"
  },
  {
    "text": "to run a lot of tiny web servers very very cheaply in the same process with a",
    "start": "809480",
    "end": "815839"
  },
  {
    "text": "very short startup time so this is not really a fair comparison okay we're",
    "start": "815839",
    "end": "821399"
  },
  {
    "text": "comparing like a whole virtual machine to an isolated JavaScript engine instance okay and it's not meant to be a",
    "start": "821399",
    "end": "828519"
  },
  {
    "text": "fair comparison we're looking at different options and we're trying to consider the trade-offs between them if",
    "start": "828519",
    "end": "833639"
  },
  {
    "text": "we wanted to be able to run any kind of code and run any kind of process or have multiple process is we need something",
    "start": "833639",
    "end": "840480"
  },
  {
    "text": "like a virtual machine or a container right to be able to run anything if we're okay with the idea that we're just",
    "start": "840480",
    "end": "845839"
  },
  {
    "text": "running tiny bits of JavaScript and they don't have to be able to do very much then maybe we can consider a different option that's lighter weight so there's",
    "start": "845839",
    "end": "852959"
  },
  {
    "text": "a trade-off between what you can do uh and what you want the code to be able to do and what kind of sandboxing level you",
    "start": "852959",
    "end": "859600"
  },
  {
    "text": "want to have Okay so let's come back to web assembly where does web assembly fit",
    "start": "859600",
    "end": "866160"
  },
  {
    "start": "863000",
    "end": "1157000"
  },
  {
    "text": "in in this kind of spectrum of trade-off okay uh to start off with we'll go into",
    "start": "866160",
    "end": "872880"
  },
  {
    "text": "a bit more about what assembly what web assembly actually is because it's often the thing that we've heard of or we kind",
    "start": "872880",
    "end": "879079"
  },
  {
    "text": "of know what it is but we don't necessarily know how it works on the inside and what it can and can't do so",
    "start": "879079",
    "end": "885040"
  },
  {
    "text": "web assembly was originally built for web browsers okay a way to run other",
    "start": "885040",
    "end": "891279"
  },
  {
    "text": "kinds of code other than JavaScript in a web browser a way to run efficient sort",
    "start": "891279",
    "end": "896800"
  },
  {
    "text": "of computational uh code in a web browser something that JavaScript is not super good at dealing",
    "start": "896800",
    "end": "903560"
  },
  {
    "text": "with things at like the bite level essentially it was built for this kind of app this is uh the web version of",
    "start": "903560",
    "end": "911639"
  },
  {
    "text": "Adobe Photoshop and it uses web assembly for a bunch of its image processing and",
    "start": "911639",
    "end": "917120"
  },
  {
    "text": "it sort of underlying stuff they were able to take some of the code that they already had in C++ from the Photoshop",
    "start": "917120",
    "end": "923920"
  },
  {
    "text": "desktop app and compile it to web assembly to make a really fully feat",
    "start": "923920",
    "end": "928959"
  },
  {
    "text": "feed uh web app version of it that can do a lot of the processing locally in",
    "start": "928959",
    "end": "934120"
  },
  {
    "text": "the browser without having to like go to the server or in Cur latency so this is the kind of situation that web assembly",
    "start": "934120",
    "end": "941040"
  },
  {
    "text": "was originally built for essentially making web browsers more powerful and able to do things other than just run",
    "start": "941040",
    "end": "949319"
  },
  {
    "text": "JavaScript so it's a compile Target so it's not a language that you would ever",
    "start": "949319",
    "end": "955160"
  },
  {
    "text": "write by hand you would write some code in rust or go or C or C++ and compile",
    "start": "955160",
    "end": "961040"
  },
  {
    "text": "that into a web assembly binary file that then your browser would know how to run uh so let's dive into a bit of an",
    "start": "961040",
    "end": "969399"
  },
  {
    "text": "example uh this is not rust or C uh it looks a lot like typescript but",
    "start": "969399",
    "end": "976199"
  },
  {
    "text": "typescript doesn't really have a 32-bit integer type uh this is assembly script",
    "start": "976199",
    "end": "981839"
  },
  {
    "text": "there a purpose built language that was built in order to compile into web assembly so that typescript developers",
    "start": "981839",
    "end": "987240"
  },
  {
    "text": "wouldn't have to learn C so that they could make use of web assembly uh makes a really good example",
    "start": "987240",
    "end": "992720"
  },
  {
    "text": "because a lot more people know typescript than uh than they know rust or so here's a little example we have a",
    "start": "992720",
    "end": "999759"
  },
  {
    "text": "function it has two 32-bit integers it adds them together and it returns another 32-bit integer and if we compile",
    "start": "999759",
    "end": "1006720"
  },
  {
    "text": "this uh in oh sorry yes this is assembly script if we compile this into web",
    "start": "1006720",
    "end": "1012199"
  },
  {
    "text": "assembly we get this now this is the text format for web assembly there's also a much more efficient binary format",
    "start": "1012199",
    "end": "1019040"
  },
  {
    "text": "but for debugging purposes it's useful to have a text representation and we can see here that we've got essentially a function uh that",
    "start": "1019040",
    "end": "1027000"
  },
  {
    "text": "has takes two 32-bit integers and adds them together uh and Returns the result",
    "start": "1027000",
    "end": "1032839"
  },
  {
    "text": "so we have this web assembly binary file and we can use this web assembly binary",
    "start": "1032839",
    "end": "1037918"
  },
  {
    "text": "file in the same process from some other language so this is Javascript this time not assembly script I know they get",
    "start": "1037919",
    "end": "1044319"
  },
  {
    "text": "confusing um where we're reading a web assembly binary file compiling it into a module uh and then",
    "start": "1044319",
    "end": "1052400"
  },
  {
    "text": "when we instantiate that module it passes out there's these exports and these are the functions the exported",
    "start": "1052400",
    "end": "1058640"
  },
  {
    "text": "function from here that we can access and call just like any other function okay so we have this like little web",
    "start": "1058640",
    "end": "1066240"
  },
  {
    "text": "assembly binary and it exports a function we can call that function from the outside from some other",
    "start": "1066240",
    "end": "1073600"
  },
  {
    "text": "context think of web assembly like a tiny simulated computer has its own call",
    "start": "1073600",
    "end": "1080280"
  },
  {
    "text": "stack and instructions it has like a bite array for its own memory and it",
    "start": "1080280",
    "end": "1085600"
  },
  {
    "text": "does not have any access to the outside world unless you explicitly provide it the code in that the web assembly",
    "start": "1085600",
    "end": "1092919"
  },
  {
    "text": "instructions are built so that they cannot access any memory outside of the bite array of its own",
    "start": "1092919",
    "end": "1098480"
  },
  {
    "text": "memory so it like can't access the memory or",
    "start": "1098480",
    "end": "1105120"
  },
  {
    "text": "any of your JavaScript variables or whatever other language you're using to invoke the web assembly uh and it can't",
    "start": "1105120",
    "end": "1110919"
  },
  {
    "text": "really do anything else either it can't read and write files can't use a network can't spawn processes or interact with",
    "start": "1110919",
    "end": "1117600"
  },
  {
    "text": "other processes it can't Generate random numbers it can't get the current time right it can't do all of the things that",
    "start": "1117600",
    "end": "1123080"
  },
  {
    "text": "native code or a fully featur language might be able to do um it really wasn't designed to do",
    "start": "1123080",
    "end": "1129000"
  },
  {
    "text": "that what can web assembly do is a much shorter list it can calculate things",
    "start": "1129000",
    "end": "1135240"
  },
  {
    "text": "right it is like a computer uh and it can call functions that were",
    "start": "1135240",
    "end": "1140480"
  },
  {
    "text": "imported uh if you give it functions to to call right so it can call functions on the outside but only if you give it",
    "start": "1140480",
    "end": "1146919"
  },
  {
    "text": "functions that it can call otherwise it is just calculating things and cannot do",
    "start": "1146919",
    "end": "1152240"
  },
  {
    "text": "anything else now this sounds pretty great okay we have a Sandbox here right it was spec",
    "start": "1152240",
    "end": "1160159"
  },
  {
    "start": "1157000",
    "end": "1450000"
  },
  {
    "text": "specifically designed to be a Sandbox to calculate things to execute code and not be able to do anything outside of that",
    "start": "1160159",
    "end": "1166400"
  },
  {
    "text": "little box but you can run it in the same process as the rest of your",
    "start": "1166400",
    "end": "1171559"
  },
  {
    "text": "code uh which is pretty cool sounds easy right it gets a little bit more complicated uh so we're going to try",
    "start": "1171559",
    "end": "1177960"
  },
  {
    "text": "using it in an example now I build this example uh just for this talk uh so it",
    "start": "1177960",
    "end": "1184480"
  },
  {
    "text": "is a little rough around the edges but this is a rock paper scissors tournament",
    "start": "1184480",
    "end": "1190880"
  },
  {
    "text": "uh where anybody can go to this website upload a bit of code and that code is their rock paper scissors bot uh and",
    "start": "1190880",
    "end": "1197880"
  },
  {
    "text": "then it matches all of the Bots against each other so for example we might have",
    "start": "1197880",
    "end": "1203280"
  },
  {
    "text": "at the top left exemplary bot that chose paper every single time it probably always chooses paper uh and a random bot",
    "start": "1203280",
    "end": "1209880"
  },
  {
    "text": "that chooses a random different thing each time uh and in this case the random bot uh won and went on to the next",
    "start": "1209880",
    "end": "1217720"
  },
  {
    "text": "round uh and this is just a fun little example uh because I wanted to build a site where people could upload code and",
    "start": "1217720",
    "end": "1223400"
  },
  {
    "text": "I wanted it to be easy enough that you could probably make a bot even within this talk so we'll see whose Bots are",
    "start": "1223400",
    "end": "1229360"
  },
  {
    "text": "winning by the end of the talk but I'll show you how to upload a bot later on this is our example so okay we need",
    "start": "1229360",
    "end": "1236360"
  },
  {
    "text": "some kind of way for any developer to come in we want them to be able to use any language to develop a web assembly",
    "start": "1236360",
    "end": "1243559"
  },
  {
    "text": "bot uh and then upload it to our site so that we can integrate it into the tournament so a simplest way to do this",
    "start": "1243559",
    "end": "1250760"
  },
  {
    "text": "would be okay well we get everybody to create a function uh a rock paper scissors function that returns a string",
    "start": "1250760",
    "end": "1258600"
  },
  {
    "text": "uh and you can probably do more complicated things with this we can maybe have some inputs where you have a bit more context about what bot you're",
    "start": "1258600",
    "end": "1264600"
  },
  {
    "text": "facing so you can do a little bit more strategy than just randomly picking rock paper or scissors but to start off with",
    "start": "1264600",
    "end": "1270240"
  },
  {
    "text": "we'll do the simple version anyone can upload a function that returns rock or paper or scissors as a string now if we",
    "start": "1270240",
    "end": "1277240"
  },
  {
    "text": "compile list a web assembly uh we get this now there's a",
    "start": "1277240",
    "end": "1282880"
  },
  {
    "text": "reason that whenever you're looking at web assembly and trying to learn how web assembly works the first examp example",
    "start": "1282880",
    "end": "1288360"
  },
  {
    "text": "they give you is always a function that takes numbers and returns a number right",
    "start": "1288360",
    "end": "1293760"
  },
  {
    "text": "it's usually a Fibonacci number generator or a just something that adds two numbers together like the example I",
    "start": "1293760",
    "end": "1299720"
  },
  {
    "text": "showed you before and the reason for that is when you start dealing with more data than just a couple of integers web",
    "start": "1299720",
    "end": "1305480"
  },
  {
    "text": "assembly gets a bit interesting uh if we look closely at the web assembly code",
    "start": "1305480",
    "end": "1311000"
  },
  {
    "text": "that's been generated here you can see that our rock paper scissors function actually returns an",
    "start": "1311000",
    "end": "1317720"
  },
  {
    "text": "integ integer not a string okay it's returning the integer",
    "start": "1317720",
    "end": "1323320"
  },
  {
    "text": "1056 why is it doing that so this integer is not the string rock it is in",
    "start": "1323320",
    "end": "1329120"
  },
  {
    "text": "fact a pointer to where the string Rock is in memory inside the web assembly",
    "start": "1329120",
    "end": "1334840"
  },
  {
    "text": "engine so this is Rock r c uh encoded as a",
    "start": "1334840",
    "end": "1340240"
  },
  {
    "text": "utf16 string and the pointer is actually a little bit earlier to tell you that okay",
    "start": "1340240",
    "end": "1347640"
  },
  {
    "text": "this is start of the string you read the integer it tells you that there's eight bytes worth of string so that you know",
    "start": "1347640",
    "end": "1353520"
  },
  {
    "text": "how much of the memory to read to then take that out and actually assemble it into a string uh when you're using it so",
    "start": "1353520",
    "end": "1362679"
  },
  {
    "text": "this isn't usually a problem if you are writing your own web assembly and then",
    "start": "1362679",
    "end": "1368080"
  },
  {
    "text": "using it from JavaScript on the web or on the server because when you generate",
    "start": "1368080",
    "end": "1373640"
  },
  {
    "text": "this web assembly code it also conveniently generates for you a rapper library in JavaScript",
    "start": "1373640",
    "end": "1378880"
  },
  {
    "text": "that will give you a nice interface for calling these functions okay so this does web you don't usually have to deal",
    "start": "1378880",
    "end": "1385039"
  },
  {
    "text": "with like actually reading pointers and strings out of the web assembly memory when you're dealing with your own",
    "start": "1385039",
    "end": "1391159"
  },
  {
    "text": "web assembly code but that doesn't work very well for us making the scissors scissors paper rock uh",
    "start": "1391159",
    "end": "1397120"
  },
  {
    "text": "tournament because we want people to just upload web assembly we don't want to have to upload like a JavaScript",
    "start": "1397120",
    "end": "1403000"
  },
  {
    "text": "rapper Library as well and then have to figure out how to sandbox the rapper Library too because we can't trust that either",
    "start": "1403000",
    "end": "1409240"
  },
  {
    "text": "so it gets a little complicated when we're trying to read data in and read data out of web assembly okay without",
    "start": "1409240",
    "end": "1415799"
  },
  {
    "text": "the generated rapper code that can be kind of complicated at the same time we want our",
    "start": "1415799",
    "end": "1422760"
  },
  {
    "text": "rock paper scissors Bots to be able to use random numbers to maybe randomly choose which option that they want to do",
    "start": "1422760",
    "end": "1429240"
  },
  {
    "text": "in C certain circumstances and there is no random number generator in web assembly because you don't have access",
    "start": "1429240",
    "end": "1435320"
  },
  {
    "text": "to the current time in milliseconds either so so you don't really have any sources of entropy it's entirely",
    "start": "1435320",
    "end": "1441120"
  },
  {
    "text": "deterministic so we want to be able to have random numbers for our rock paper scissors Bots to work as",
    "start": "1441120",
    "end": "1447799"
  },
  {
    "text": "well uh so we want to use the web assembly system interface so this is wzy",
    "start": "1447799",
    "end": "1455919"
  },
  {
    "start": "1450000",
    "end": "1788000"
  },
  {
    "text": "so not to be confused with WM which is short for web assembly Wazi is the web assembly system interface it's kind of",
    "start": "1455919",
    "end": "1462080"
  },
  {
    "text": "like an API on top of web assembly think of it like a set of Import and Export",
    "start": "1462080",
    "end": "1467159"
  },
  {
    "text": "functions that let a web assembly app be treated a lot more like a regular",
    "start": "1467159",
    "end": "1472600"
  },
  {
    "text": "process or a regular app uh on your on your computer so this is again assembly",
    "start": "1472600",
    "end": "1478919"
  },
  {
    "text": "script not JavaScript uh and it's just a little program that prints some things to the",
    "start": "1478919",
    "end": "1485399"
  },
  {
    "text": "standard output and if we compile that into web assembly we can run it kind of",
    "start": "1485399",
    "end": "1490919"
  },
  {
    "text": "like another commandline tool right I can run this web assembly and it prints",
    "start": "1490919",
    "end": "1496799"
  },
  {
    "text": "stuff to stand it out it can read from standard in it can do a couple of things I still have to run it in wasm time here",
    "start": "1496799",
    "end": "1503360"
  },
  {
    "text": "so I'm still running it in a web assembly engine but I can treat it a lot like a normal process that can read the",
    "start": "1503360",
    "end": "1511960"
  },
  {
    "text": "file system and access things uh so how does that work so when I compile this",
    "start": "1511960",
    "end": "1517600"
  },
  {
    "text": "three Line Assembly script program I get 4,000 lines of web assembly um but",
    "start": "1517600",
    "end": "1524279"
  },
  {
    "text": "ultimately it is using the wzy import functions in order to be able to do",
    "start": "1524279",
    "end": "1531480"
  },
  {
    "text": "things sort of outside of the process so FD WR is file descriptor right so it is",
    "start": "1531480",
    "end": "1537360"
  },
  {
    "text": "writing to the standard out file descriptor to be able to print things to the console uh it has proc exit for like",
    "start": "1537360",
    "end": "1544600"
  },
  {
    "text": "when it's finished to give to return a value and it's able to get random numbers uh these are all parts of these",
    "start": "1544600",
    "end": "1551760"
  },
  {
    "text": "are all specified as part of the web assembly system interface and the web the wazy speec",
    "start": "1551760",
    "end": "1559960"
  },
  {
    "text": "provides command line arguments environment variables the current clock time uh getting random numbers accessing",
    "start": "1559960",
    "end": "1567240"
  },
  {
    "text": "the file system it can use but it can't create sockets uh this is preview one there is also a preview two that's not",
    "start": "1567240",
    "end": "1573279"
  },
  {
    "text": "finalized yet but wasn't the whole point of using web assembly that web assembly couldn't",
    "start": "1573279",
    "end": "1580279"
  },
  {
    "text": "do any of those things like this is a Sandbox I don't want it to be able to access the file system or the",
    "start": "1580279",
    "end": "1585520"
  },
  {
    "text": "environment variables of my host process so web the Wazi was actually kind of",
    "start": "1585520",
    "end": "1591720"
  },
  {
    "text": "designed for this purpose specifically so verbatim uh from the uh from the",
    "start": "1591720",
    "end": "1597279"
  },
  {
    "text": "goals the stated goals of the Wazi project is to define a set of portable modular runtime independent and web",
    "start": "1597279",
    "end": "1604120"
  },
  {
    "text": "assembly native apis which can be used by web assembly code to interact with the outside world okay good these apis",
    "start": "1604120",
    "end": "1611840"
  },
  {
    "text": "preserve the essential sandbox nature of web assembly through a capability based API design so yes using Wazi the web",
    "start": "1611840",
    "end": "1619880"
  },
  {
    "text": "assembly code can access the outside world but only if you let it and only the parts of the outside world that",
    "start": "1619880",
    "end": "1625760"
  },
  {
    "text": "you've specifically allowed it to access so it gives an API for command",
    "start": "1625760",
    "end": "1633320"
  },
  {
    "text": "line arguments but you have to specify those command line arguments it doesn't just automatically get the args of the host process the environment variables",
    "start": "1633320",
    "end": "1640279"
  },
  {
    "text": "you have to specifically granted access to specific environment variables or set your own fake environment variables when",
    "start": "1640279",
    "end": "1646360"
  },
  {
    "text": "you're invoking the web assembly sandbox it can access the clock time you can always take that out it can access",
    "start": "1646360",
    "end": "1652080"
  },
  {
    "text": "random numbers you can also disallow that uh it can access the file system but only the specific directories and",
    "start": "1652080",
    "end": "1658159"
  },
  {
    "text": "files that you have granted it access to it does not by default get any access to the file system and it can only use",
    "start": "1658159",
    "end": "1664519"
  },
  {
    "text": "sockets if you specifically give it a socket to use so it is designed still for sandboxing but the uh the parts that",
    "start": "1664519",
    "end": "1672799"
  },
  {
    "text": "you want to allow you can allow uh and wzy is enough of a",
    "start": "1672799",
    "end": "1678399"
  },
  {
    "text": "recognized standard that you can run build and run WM and wazzy programs um",
    "start": "1678399",
    "end": "1684080"
  },
  {
    "text": "across all of these languages so for C and C++ rust go and assembly script you",
    "start": "1684080",
    "end": "1689200"
  },
  {
    "text": "can compile a program using the Wazi API uh and run it for python Ruby and PHP",
    "start": "1689200",
    "end": "1696600"
  },
  {
    "text": "the the interpreters themselves have written in C I think all of them maybe not all of them um but they have",
    "start": "1696600",
    "end": "1703320"
  },
  {
    "text": "themselves been compiled into web assembly so you can run a full python interpreter uh in as a wazzy program uh",
    "start": "1703320",
    "end": "1710279"
  },
  {
    "text": "in web assembly because cpython has been compiled into web assembly uh there are JavaScript engines uh but not node",
    "start": "1710279",
    "end": "1717440"
  },
  {
    "text": "because V8 is very difficult to compile into web assembly uh so you get quite a",
    "start": "1717440",
    "end": "1722559"
  },
  {
    "text": "broad set of support for different languages uh by depending on WM and Wazi",
    "start": "1722559",
    "end": "1728760"
  },
  {
    "text": "and for our particular uh rock paper scissors",
    "start": "1728760",
    "end": "1734080"
  },
  {
    "text": "tournament we I've chosen to use just standard in and standard out as our way of interacting between the bots so",
    "start": "1734080",
    "end": "1741200"
  },
  {
    "text": "anyone can upload a web assembly binary if it is compiled with the wazzy API and",
    "start": "1741200",
    "end": "1746799"
  },
  {
    "text": "just printing to stand it out either the word rock scissors or paper uh to choose",
    "start": "1746799",
    "end": "1751840"
  },
  {
    "text": "a particular move for a particular round but there's also some input in here as well so you can read uh some Json from",
    "start": "1751840",
    "end": "1759559"
  },
  {
    "text": "the first line of standard input uh which will include the name of your opponent and if there have been multiple",
    "start": "1759559",
    "end": "1766039"
  },
  {
    "text": "rounds where you have had a draw in the previous round it will include information about those rounds as well",
    "start": "1766039",
    "end": "1771919"
  },
  {
    "text": "so you can have a bot that kind of goes well I know this particular bot us usually chooses Rock so uh I'm going to",
    "start": "1771919",
    "end": "1777480"
  },
  {
    "text": "choose paper and you can do better than random odds uh for your bots so let's",
    "start": "1777480",
    "end": "1782720"
  },
  {
    "text": "have a look uh if you want to play along it is also an audience participation live demo so you can go to this website",
    "start": "1782720",
    "end": "1790000"
  },
  {
    "start": "1788000",
    "end": "2043000"
  },
  {
    "text": "if you want to it should work on a phone although the UI might not be great uh and you can upload a bot but let's",
    "start": "1790000",
    "end": "1797399"
  },
  {
    "text": "demonstrate that first so this is the tournament uh currently there are what is that four five six",
    "start": "1797399",
    "end": "1804640"
  },
  {
    "text": "plots and once a minute it will automatically trigger a new tournament",
    "start": "1804640",
    "end": "1810519"
  },
  {
    "text": "uh and so there's a certain amount of Randomness uh even a very clever bot not might not win every time but",
    "start": "1810519",
    "end": "1817000"
  },
  {
    "text": "statistically it should win more often than just a bot that always chooses paper so if we go to the create",
    "start": "1817000",
    "end": "1824240"
  },
  {
    "text": "page here we can upload a web assembly but just by uploading a wasm file so if",
    "start": "1824240",
    "end": "1832200"
  },
  {
    "text": "I go to my editor I have here an example assembly script bot uh I'm going to",
    "start": "1832200",
    "end": "1838960"
  },
  {
    "text": "change this to be like hello ya Brisbane and all right we're going to do",
    "start": "1838960",
    "end": "1845760"
  },
  {
    "text": "a show of hands who wants this bot to return Rock okay",
    "start": "1845760",
    "end": "1851279"
  },
  {
    "text": "paper yeah a few more hand scissors wow why is scissors was the same before okay",
    "start": "1851279",
    "end": "1857559"
  },
  {
    "text": "all right Melbourne also likes scissors apparently um so I have this bot and I'm",
    "start": "1857559",
    "end": "1863880"
  },
  {
    "text": "going to run Yan as build to compile it into web assembly and then I have in here my",
    "start": "1863880",
    "end": "1871000"
  },
  {
    "text": "release. wasm file uh which it has built so if I go back here I'm going to call",
    "start": "1871000",
    "end": "1876600"
  },
  {
    "text": "this brisbon bot select the WM file sorry the text is too tiny to",
    "start": "1876600",
    "end": "1884200"
  },
  {
    "text": "see and enter the tournament and if I go up here to the",
    "start": "1884200",
    "end": "1891600"
  },
  {
    "text": "tournament uh we might need to wait a little bit uh because it will run once a",
    "start": "1891600",
    "end": "1897639"
  },
  {
    "text": "minute uh this timed really well last time I",
    "start": "1897880",
    "end": "1903279"
  },
  {
    "text": "gave this dog we might have just missed",
    "start": "1903279",
    "end": "1909518"
  },
  {
    "text": "one if you want to make a more exciting butt again there is standard input there",
    "start": "1912519",
    "end": "1917559"
  },
  {
    "text": "oh wow there's a couple of bots already all who did paper mcperson",
    "start": "1917559",
    "end": "1923120"
  },
  {
    "text": "hey um okay brisban butt here uh chose scissors unfortunately that was not a",
    "start": "1923120",
    "end": "1928880"
  },
  {
    "text": "good choice and it got eliminated in the first round uh but uh we can also go here if",
    "start": "1928880",
    "end": "1934960"
  },
  {
    "text": "we have a look if you don't want to have to build a web assembly file uh there is also the option of writing a python",
    "start": "1934960",
    "end": "1941039"
  },
  {
    "text": "script and if we we can use this a little bit to experiment with like what",
    "start": "1941039",
    "end": "1946720"
  },
  {
    "text": "limmit there are on the web assembly plots so if I want to say while true",
    "start": "1946720",
    "end": "1954320"
  },
  {
    "text": "pass maybe at the end I'll say print paper uh this is essentially a busy Loop",
    "start": "1954320",
    "end": "1959799"
  },
  {
    "text": "in Python uh what will happen uh if I try to run this so if I run the test button uh nothing happens says the",
    "start": "1959799",
    "end": "1967440"
  },
  {
    "text": "program ran out of fuel it reached a limit of a billion web assembly instructions so each bot is limited to",
    "start": "1967440",
    "end": "1974120"
  },
  {
    "text": "running a specific number of web assembly instructions if it reaches that limit the B is just done okay and it",
    "start": "1974120",
    "end": "1980159"
  },
  {
    "text": "will not be included in future tournaments uh so you can avoid having you know just a a loop running right by",
    "start": "1980159",
    "end": "1987159"
  },
  {
    "text": "the number of inst structions someone in Melbourne found uh that they could import time and say time do sleep for a",
    "start": "1987159",
    "end": "1995639"
  },
  {
    "text": "really long time uh so you do also and this will not have very many instructions because",
    "start": "1995639",
    "end": "2001080"
  },
  {
    "text": "that's just one instruction really uh so if I run this uh it is now also timing",
    "start": "2001080",
    "end": "2006320"
  },
  {
    "text": "out uh if it was waiting too long asynchronously uh you can try and use",
    "start": "2006320",
    "end": "2012240"
  },
  {
    "text": "too much memory you can try and write gigabytes of information into standard out um and all of those things should be",
    "start": "2012240",
    "end": "2018760"
  },
  {
    "text": "limited uh if you find something that I have not been limiting or a sandboxing correctly then please let me know uh but",
    "start": "2018760",
    "end": "2025960"
  },
  {
    "text": "this is a reasonably Safe Way for this kind of uh",
    "start": "2025960",
    "end": "2031840"
  },
  {
    "text": "situation uh to run code way that I can limit the memory can limit how much CPU it's it's using um and I can uh limit",
    "start": "2031840",
    "end": "2041880"
  },
  {
    "text": "access to things so it has inmemory streams for standard in and standard out and standard error it's not reading and",
    "start": "2041880",
    "end": "2047480"
  },
  {
    "start": "2043000",
    "end": "2090000"
  },
  {
    "text": "writing those to the file system and I have limited how big those streams are so there's a limit to how much you can",
    "start": "2047480",
    "end": "2052919"
  },
  {
    "text": "write to them has a limited amount of fuel and how many instructions it can run has a limited time a limited amount",
    "start": "2052919",
    "end": "2058599"
  },
  {
    "text": "of memory it can and can allocate and most of the the uploaded web assembly",
    "start": "2058599",
    "end": "2063960"
  },
  {
    "text": "file Bots have no file system access but the way that the python bot work works is I'm running the python interpreter",
    "start": "2063960",
    "end": "2070398"
  },
  {
    "text": "and giving it access to a temporary directory with the python file that it can run it is a readon temporary",
    "start": "2070399",
    "end": "2076358"
  },
  {
    "text": "directory uh so yes the python Bots have very limited file system access um but they can read a single file and write",
    "start": "2076359",
    "end": "2084118"
  },
  {
    "text": "nothing so are people actually doing this in the real world so we looked at",
    "start": "2084119",
    "end": "2090800"
  },
  {
    "start": "2090000",
    "end": "2201000"
  },
  {
    "text": "Shopify uh so let's see how Shopify functions work so if you go to the Shopify docs you can see the current in",
    "start": "2090800",
    "end": "2097040"
  },
  {
    "text": "uh the details about how to build and upload and run a Shopify function as",
    "start": "2097040",
    "end": "2102839"
  },
  {
    "text": "part of a third party app so like the scissors paper rock tournaments this was",
    "start": "2102839",
    "end": "2107960"
  },
  {
    "text": "not an entirely contrived example uh for Shopify functions you can upload a wazzy",
    "start": "2107960",
    "end": "2113119"
  },
  {
    "text": "binary uh wazzy web assembly binary and specify a graphql query against the",
    "start": "2113119",
    "end": "2119800"
  },
  {
    "text": "regular Shopify API that graph qu query is executed before the function is run",
    "start": "2119800",
    "end": "2125200"
  },
  {
    "text": "and it is passed as Json input to standard in to the web assembly function",
    "start": "2125200",
    "end": "2131000"
  },
  {
    "text": "so you can get data from the that that you need before the web assembly is run",
    "start": "2131000",
    "end": "2136640"
  },
  {
    "text": "and depending on uh what in what situation this function was invoked in",
    "start": "2136640",
    "end": "2142040"
  },
  {
    "text": "what part of the flow in in which uh Shopify situation it was invoked it will then produce uh output in another Json",
    "start": "2142040",
    "end": "2148640"
  },
  {
    "text": "format to indicate what the result of that function is and what should be done for that action uh in the in the rock paper",
    "start": "2148640",
    "end": "2156160"
  },
  {
    "text": "scissors buts uh only the last line of standard out matters but for the Shopify functions uh the whole standard out is",
    "start": "2156160",
    "end": "2164280"
  },
  {
    "text": "interpreted as Json so any other logging has to go to standard error um but aside",
    "start": "2164280",
    "end": "2169359"
  },
  {
    "text": "from that yeah you can upload a web assembly file as part of a function on Shopify now these are pretty limited the",
    "start": "2169359",
    "end": "2176119"
  },
  {
    "text": "the size of the web assembly is limited the runtime is limited has no access to the clock it has no access to random",
    "start": "2176119",
    "end": "2181839"
  },
  {
    "text": "numbers um it is meant to be entirely deterministic based on the input um and",
    "start": "2181839",
    "end": "2187440"
  },
  {
    "text": "it has a very limited amount of runtime so these are intended for very small but sometimes complicated logic decisions",
    "start": "2187440",
    "end": "2194640"
  },
  {
    "text": "that need to be uh integrated into Shopify as part of their flow so that's one example as a",
    "start": "2194640",
    "end": "2201800"
  },
  {
    "start": "2201000",
    "end": "2368000"
  },
  {
    "text": "completely different example there are other situations where you might want to think about stand boxing code in the",
    "start": "2201800",
    "end": "2207640"
  },
  {
    "text": "same process and Firefox have written a really awesome uh article about how they",
    "start": "2207640",
    "end": "2213400"
  },
  {
    "text": "use this so uh Nathan Freud a missil engineer uh wrote that Google Microsoft",
    "start": "2213400",
    "end": "2218720"
  },
  {
    "text": "and Milla have each independently found that around 70% of security bugs in their browsers were memory safety bugs",
    "start": "2218720",
    "end": "2225560"
  },
  {
    "text": "so these browsers are mostly written in C++ and a single buffer overflow or some",
    "start": "2225560",
    "end": "2232160"
  },
  {
    "text": "kind of memory safety issue uh can mean that the process for a web for a page",
    "start": "2232160",
    "end": "2239160"
  },
  {
    "text": "can be exploited by potentially some some asset that it's loading and Milla found that",
    "start": "2239160",
    "end": "2247160"
  },
  {
    "text": "they had a bunch of libraries that they were using that were written in C++ that",
    "start": "2247160",
    "end": "2252599"
  },
  {
    "text": "they mostly they trusted the code they knew it wasn't written maliciously but if a memory safety issue",
    "start": "2252599",
    "end": "2258720"
  },
  {
    "text": "was in one of those libraries that exploit could compromise the whole browser so for the graph graphite font",
    "start": "2258720",
    "end": "2267560"
  },
  {
    "text": "shaping Library so this is a library used for rendering fonts uh they did not want to have to go through all of the",
    "start": "2267560",
    "end": "2273720"
  },
  {
    "text": "code and audit it just for this one Library to make sure that it didn't have any memory safety issues but also they might",
    "start": "2273720",
    "end": "2280359"
  },
  {
    "text": "not have found all of them anyway um but if someone had loaded a",
    "start": "2280359",
    "end": "2286560"
  },
  {
    "text": "malicious font file that could potentially exploit a memory safety issue and compromise a website so they",
    "start": "2286560",
    "end": "2293599"
  },
  {
    "text": "took this potentially unsafe uh C++ code they compiled it to web assembly and",
    "start": "2293599",
    "end": "2299880"
  },
  {
    "text": "then they compiled that web assembly to native code so a web assembly engine will jit compile into native code and",
    "start": "2299880",
    "end": "2306319"
  },
  {
    "text": "you might as well ahead of time compile that the process is slightly different it took some work um but then they were",
    "start": "2306319",
    "end": "2311440"
  },
  {
    "text": "able to just use that native code um as part of the browser this tiny library",
    "start": "2311440",
    "end": "2316640"
  },
  {
    "text": "was not worth running a whole separate process for to sandbox it away from the rest of the rendering of a web page but",
    "start": "2316640",
    "end": "2323440"
  },
  {
    "text": "they were able to sandbox it with a small performance hit in the same process as the main",
    "start": "2323440",
    "end": "2329400"
  },
  {
    "text": "thread uh and so and they don't have to include the entire web assembly engine",
    "start": "2329400",
    "end": "2335880"
  },
  {
    "text": "as part of their their build because they were able to compile it to native code and just call into it so recommend",
    "start": "2335880",
    "end": "2341960"
  },
  {
    "text": "reading that article as well if that's something that you're interested in it kind of explores the use of web assembly to sandbox even just a library that",
    "start": "2341960",
    "end": "2349319"
  },
  {
    "text": "we're using that we don't entirely trust if something goes wrong in that Library we don't want it to infect the rest of",
    "start": "2349319",
    "end": "2355200"
  },
  {
    "text": "the process if we have say log for J and if we were running that in a sandbox",
    "start": "2355200",
    "end": "2360640"
  },
  {
    "text": "maybe it wouldn't be so bad that we find one day this library has a security vulnerability in it because that can happen to pretty much any",
    "start": "2360640",
    "end": "2367400"
  },
  {
    "text": "Library so when we're talking about the sandbox that web assembly is how secure are we really talking now this is hard",
    "start": "2367400",
    "end": "2374119"
  },
  {
    "start": "2368000",
    "end": "2509000"
  },
  {
    "text": "to say right you can't really put a number on like this is 10 out of 10 secure um it doesn't make sense uh there",
    "start": "2374119",
    "end": "2380760"
  },
  {
    "text": "will always be bugs and exploits but uh what we're when we're talking about is",
    "start": "2380760",
    "end": "2386040"
  },
  {
    "text": "web assembly secure and is wzy secure uh it does matter a lot which particular",
    "start": "2386040",
    "end": "2392079"
  },
  {
    "text": "implementation we're talking about uh cuz not all web assembly or wzy imp mentations were created with security in",
    "start": "2392079",
    "end": "2399440"
  },
  {
    "text": "mind uh as an example node.js has an experimental wazzy interface right so",
    "start": "2399440",
    "end": "2406079"
  },
  {
    "text": "you can execute wazzy programs uh in node.js but you should not use this for",
    "start": "2406079",
    "end": "2411800"
  },
  {
    "text": "sandboxing like the document the documentation explicitly says uh do not rely on this to run untrusted code uh",
    "start": "2411800",
    "end": "2419920"
  },
  {
    "text": "the file system sandboxing is not implemented fully to the level of security that is intended for wazzy uh",
    "start": "2419920",
    "end": "2427079"
  },
  {
    "text": "so you might granted access to one part of the file system but it might be able to access other parts of the file system",
    "start": "2427079",
    "end": "2433400"
  },
  {
    "text": "so but the one that I use and that seems to be the one that the uh most of the",
    "start": "2433400",
    "end": "2439160"
  },
  {
    "text": "other examples I've given are using this one as well this is WM time it's built by the bite code Alliance which is a not",
    "start": "2439160",
    "end": "2445520"
  },
  {
    "text": "for-profit and uh it's written in Rust it was in it was built purpose-built for",
    "start": "2445520",
    "end": "2452240"
  },
  {
    "text": "sandboxing web assembly code and for implementing wazzy in a secure way for sandboxing so it was built in Rust so",
    "start": "2452240",
    "end": "2459280"
  },
  {
    "text": "that they would get as much memory safety as they can while still working efficiently uh they're very careful with",
    "start": "2459280",
    "end": "2464400"
  },
  {
    "text": "their use of unsafe blocks in Rust they audit and review all the dependencies they perform 24/7 like fuzz testing uh",
    "start": "2464400",
    "end": "2472400"
  },
  {
    "text": "like putting random data in and checking that the uh the system still works correctly uh and I recommend reading",
    "start": "2472400",
    "end": "2478079"
  },
  {
    "text": "their articles about how they do Mitigation Of Spectre so I haven't really talked about Spectre because it",
    "start": "2478079",
    "end": "2483960"
  },
  {
    "text": "wouldn't fit into the talk but uh Spectre is a concern when you're",
    "start": "2483960",
    "end": "2489720"
  },
  {
    "text": "running any kind of untrusted code on the same machine as any secrets that you care about um processes give you one",
    "start": "2489720",
    "end": "2495960"
  },
  {
    "text": "level of isolation virtual machines give you another level of isolation running things in the same process is a bit",
    "start": "2495960",
    "end": "2501599"
  },
  {
    "text": "riskier and so there are other things that you need to think about uh in regards to",
    "start": "2501599",
    "end": "2506839"
  },
  {
    "text": "Spectrum uh and as always you should have more than one layer of security if",
    "start": "2506839",
    "end": "2512040"
  },
  {
    "start": "2509000",
    "end": "2559000"
  },
  {
    "text": "you're running untrusted code even in a web assembly sandbox uh you should not",
    "start": "2512040",
    "end": "2517160"
  },
  {
    "text": "at run it on the same machine as anything that you care about if at all possible right it is not uh you should",
    "start": "2517160",
    "end": "2522760"
  },
  {
    "text": "as much as possible still keep that away from any other things that you care about you should have ways of uh",
    "start": "2522760",
    "end": "2529680"
  },
  {
    "text": "detecting uh potential attacking Bots or malicious Bots and uh quarantining them",
    "start": "2529680",
    "end": "2536160"
  },
  {
    "text": "away from the other Bots things like that there are other things that you can do to add extra layers of security around the web assembly sandbox um there",
    "start": "2536160",
    "end": "2543920"
  },
  {
    "text": "have been like any like any security sand box uh there have been reported issues that have since been fixed but",
    "start": "2543920",
    "end": "2549760"
  },
  {
    "text": "there may be other vulnerabilities where someone could break out of the sandbox so it is always a possibility that you need to keep in mind uh when using any",
    "start": "2549760",
    "end": "2557280"
  },
  {
    "text": "kind of sandbox okay so this is all relatively new bleeding edge stuff like what what",
    "start": "2557280",
    "end": "2565480"
  },
  {
    "start": "2559000",
    "end": "2750000"
  },
  {
    "text": "state is this currently in and can I use this in my production environment so",
    "start": "2565480",
    "end": "2570680"
  },
  {
    "text": "firstly web assembly absolutely go ahead and use it uh this is which version of",
    "start": "2570680",
    "end": "2576440"
  },
  {
    "text": "Windows was this I think it's like Windows 2000 um or is it Windows 95 I don't know who recognizes these things",
    "start": "2576440",
    "end": "2582640"
  },
  {
    "text": "huh 98 Windows okay Windows 98 um this is my own artwork by the way uh this is",
    "start": "2582640",
    "end": "2590280"
  },
  {
    "text": "running in the browser so this is not Windows compiled to web assembly this is",
    "start": "2590280",
    "end": "2597520"
  },
  {
    "text": "an an e an implementation of x86 an little x86 virtual machine running in",
    "start": "2597520",
    "end": "2603720"
  },
  {
    "text": "web assembly in the browser and it just happens to have loaded windows on top of that uh so you can actually go to this",
    "start": "2603720",
    "end": "2610319"
  },
  {
    "text": "website uh and play M mind sweeper if you want to and feel feel the Nostalgia",
    "start": "2610319",
    "end": "2615839"
  },
  {
    "text": "uh web assembly can do powerful things if you're running web assembly if you want to run uh cool things in the",
    "start": "2615839",
    "end": "2621040"
  },
  {
    "text": "browser web assembly is absolutely a great option um web assembly itself is pretty solid uh it's supported across",
    "start": "2621040",
    "end": "2627720"
  },
  {
    "text": "all the major browsers and including the phone browsers uh wazzy is probably the more",
    "start": "2627720",
    "end": "2634760"
  },
  {
    "text": "bleeding edge part of what I'm talking about uh wazzy the specification is still in preview uh and the WM time API",
    "start": "2634760",
    "end": "2642400"
  },
  {
    "text": "is kind of changing the support across different languages uh is pretty variable uh but you can still use it and",
    "start": "2642400",
    "end": "2650240"
  },
  {
    "text": "people are using it uh it just doesn't have like all of the developer experience stuff that you would expect",
    "start": "2650240",
    "end": "2655680"
  },
  {
    "text": "from a more mature system uh so it is still ready to use but expect to have a little bit of pain um the tooling and",
    "start": "2655680",
    "end": "2662640"
  },
  {
    "text": "language support is getting a lot better day by day there there's a lot of energy around this and a lot of people working on it um the web assembly component",
    "start": "2662640",
    "end": "2669760"
  },
  {
    "text": "model spec uh is making uh having instead of using WM instead of using",
    "start": "2669760",
    "end": "2675400"
  },
  {
    "text": "wazzy as your interface and using standard in and standard out the ability to make a function that has a particular",
    "start": "2675400",
    "end": "2682040"
  },
  {
    "text": "interface that would work across languages uh that is getting better uh using the interfaces part of the web",
    "start": "2682040",
    "end": "2688240"
  },
  {
    "text": "assembly component model so if you would like to just have a function to call rather than a little tiny program that",
    "start": "2688240",
    "end": "2693760"
  },
  {
    "text": "you run uh then check that out uh also Docker is adding support for web",
    "start": "2693760",
    "end": "2699079"
  },
  {
    "text": "assembly and wazzy containers uh if you go to your Docker desktop and like enable the beta setting uh you'll be",
    "start": "2699079",
    "end": "2705160"
  },
  {
    "text": "able to run WM workloads in Docker as well so that is another option to check out okay um I wanted to mostly finish up",
    "start": "2705160",
    "end": "2713240"
  },
  {
    "text": "with this quote from the fastly website bear in mind this is marketing materials um but I like how snarky it is with WM",
    "start": "2713240",
    "end": "2720200"
  },
  {
    "text": "time we have achieved very fast instance instantiation times typically within a few microsc not",
    "start": "2720200",
    "end": "2726559"
  },
  {
    "text": "milliseconds fley is therefore able to provide a significantly faster code execution startup time than any other",
    "start": "2726559",
    "end": "2733280"
  },
  {
    "text": "serverless solution freeing developers to focus on application development um",
    "start": "2733280",
    "end": "2738440"
  },
  {
    "text": "that sounds pretty good feel like it's Throwing Shade um but yeah there is this is a tool that is out there it is used",
    "start": "2738440",
    "end": "2744200"
  },
  {
    "text": "for sandboxing in the real world by real world Cloud hosting",
    "start": "2744200",
    "end": "2749240"
  },
  {
    "text": "providers uh and I want you to think about when you are running code that you",
    "start": "2749240",
    "end": "2754440"
  },
  {
    "start": "2750000",
    "end": "2874000"
  },
  {
    "text": "don't entirely Trust uh is it libraries that you're linking into your product uh where maybe that",
    "start": "2754440",
    "end": "2761880"
  },
  {
    "text": "Library could have a vulnerability in it that could cause problems are you running code locally on your machine",
    "start": "2761880",
    "end": "2767640"
  },
  {
    "text": "that might be able to do things that you don't want it to be able to do uh where you haven't checked the sources of where",
    "start": "2767640",
    "end": "2773760"
  },
  {
    "text": "that code is coming from okay this is not just putting up a sign and saying upload your untrusted code here there's",
    "start": "2773760",
    "end": "2780599"
  },
  {
    "text": "lots of situations where we have somewhat trusted and probably okay but",
    "start": "2780599",
    "end": "2785880"
  },
  {
    "text": "could potentially ruin everything uh untrusted code that we run every day and",
    "start": "2785880",
    "end": "2791240"
  },
  {
    "text": "if we could have a collection of sandboxed libraries that we plug",
    "start": "2791240",
    "end": "2796280"
  },
  {
    "text": "together where one Library can only really interact with the software through its own interface and can't",
    "start": "2796280",
    "end": "2802200"
  },
  {
    "text": "access all of the memory of the process uh we would potentially have a much safer ecosystem of libraries that we",
    "start": "2802200",
    "end": "2809119"
  },
  {
    "text": "could work with and something like a supply chain attack wouldn't be as scary so I'm hopeful hopeful in the future uh",
    "start": "2809119",
    "end": "2816480"
  },
  {
    "text": "that we will end up with more secure software than we have now uh but it is still early days and web assembly is",
    "start": "2816480",
    "end": "2823240"
  },
  {
    "text": "really only being used for the situations where security is incredibly vital like in a web browser uh or",
    "start": "2823240",
    "end": "2829920"
  },
  {
    "text": "running a hosting environment so how are those uh rock paper scissors Bots doing if we go back",
    "start": "2829920",
    "end": "2837400"
  },
  {
    "text": "and have a look if we go to the tournament oh yeah there's a couple more Bots here I need to zoom",
    "start": "2837400",
    "end": "2844720"
  },
  {
    "text": "out oh y tournament's going it's pretty",
    "start": "2844720",
    "end": "2850079"
  },
  {
    "text": "fast yep it takes a little bit longer when it's running like 10 version 10 instances of the bot bear in mind most",
    "start": "2850079",
    "end": "2856520"
  },
  {
    "text": "of these Bots are python so it is actually running an entire python interpreter every single time you see one of these little paper",
    "start": "2856520",
    "end": "2862720"
  },
  {
    "text": "symbols okay Jacob Jacob won the tournament oops",
    "start": "2862720",
    "end": "2869640"
  },
  {
    "text": "yes well done nice one okay um please go check",
    "start": "2869640",
    "end": "2876319"
  },
  {
    "start": "2874000",
    "end": "2895000"
  },
  {
    "text": "out the code for snippy uh please try to hack it let me know if you find any vulnerabilities uh I would love to hear",
    "start": "2876319",
    "end": "2882359"
  },
  {
    "text": "about that there's no like private data on there except the code and Bot names that people have uploaded so cool thank",
    "start": "2882359",
    "end": "2889960"
  },
  {
    "text": "you very [Applause] much",
    "start": "2889960",
    "end": "2896920"
  }
]