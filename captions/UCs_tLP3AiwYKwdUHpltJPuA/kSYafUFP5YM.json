[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "excellent uh thank you for coming for my",
    "start": "11320",
    "end": "13400"
  },
  {
    "text": "talk uh someone some of you have seen my",
    "start": "13400",
    "end": "16118"
  },
  {
    "text": "talks before uh things like oh God my",
    "start": "16119",
    "end": "18720"
  },
  {
    "text": "brain or whatever I called it at the",
    "start": "18720",
    "end": "20400"
  },
  {
    "text": "time I got some feedback maybe be a",
    "start": "20400",
    "end": "22760"
  },
  {
    "text": "little bit gently to people and just put",
    "start": "22760",
    "end": "24560"
  },
  {
    "text": "Less in I tried is all I'm saying so",
    "start": "24560",
    "end": "28160"
  },
  {
    "start": "28000",
    "end": "231000"
  },
  {
    "text": "let's get going all right",
    "start": "28160",
    "end": "31279"
  },
  {
    "text": "we're doing we're in a typed functional",
    "start": "31279",
    "end": "33160"
  },
  {
    "text": "programming language we're solving some",
    "start": "33160",
    "end": "34600"
  },
  {
    "text": "problems uh we can use our types to",
    "start": "34600",
    "end": "37079"
  },
  {
    "text": "model our problem and help constraint",
    "start": "37079",
    "end": "39239"
  },
  {
    "text": "our you know problem space and we can be",
    "start": "39239",
    "end": "41760"
  },
  {
    "text": "creative with inside those",
    "start": "41760",
    "end": "43680"
  },
  {
    "text": "constraints sometimes what you really",
    "start": "43680",
    "end": "45440"
  },
  {
    "text": "want is a hetrogeneous map you know not",
    "start": "45440",
    "end": "47600"
  },
  {
    "text": "a map of all the same values you want to",
    "start": "47600",
    "end": "50000"
  },
  {
    "text": "mix things up a little and then you",
    "start": "50000",
    "end": "51920"
  },
  {
    "text": "don't have one CU a lot of the solutions",
    "start": "51920",
    "end": "53480"
  },
  {
    "text": "are terrible and so if you're doing a",
    "start": "53480",
    "end": "55800"
  },
  {
    "text": "health related thing you do something",
    "start": "55800",
    "end": "57120"
  },
  {
    "text": "like this where you put a bunch of stuff",
    "start": "57120",
    "end": "59640"
  },
  {
    "text": "together",
    "start": "59640",
    "end": "60920"
  },
  {
    "text": "and you hope for the best and if we had",
    "start": "60920",
    "end": "64320"
  },
  {
    "text": "autogenous map we could deal with all",
    "start": "64320",
    "end": "66400"
  },
  {
    "text": "these things fairly uniformly but",
    "start": "66400",
    "end": "68080"
  },
  {
    "text": "instead we do this cludge of things and",
    "start": "68080",
    "end": "70640"
  },
  {
    "text": "hope for the best all right uh we're",
    "start": "70640",
    "end": "73720"
  },
  {
    "text": "going to improve on this uh first way of",
    "start": "73720",
    "end": "76520"
  },
  {
    "text": "improving things is put functors",
    "start": "76520",
    "end": "78880"
  },
  {
    "text": "everywhere hey uh like this we put a",
    "start": "78880",
    "end": "82799"
  },
  {
    "text": "little F parameter in and we put it at",
    "start": "82799",
    "end": "84920"
  },
  {
    "text": "the front of things and then uh this",
    "start": "84920",
    "end": "87720"
  },
  {
    "text": "gives us a little bit more flexibility",
    "start": "87720",
    "end": "89520"
  },
  {
    "text": "it allows us to do things",
    "start": "89520",
    "end": "91680"
  },
  {
    "text": "like uh if we use the maybe functor uh",
    "start": "91680",
    "end": "95439"
  },
  {
    "text": "we can have this data structure with a",
    "start": "95439",
    "end": "97439"
  },
  {
    "text": "whole heap of holes in it like if we're",
    "start": "97439",
    "end": "98920"
  },
  {
    "text": "filling out a form the things that",
    "start": "98920",
    "end": "100600"
  },
  {
    "text": "haven't been filled out yet are nothing",
    "start": "100600",
    "end": "102079"
  },
  {
    "text": "and if they've been filled in they're",
    "start": "102079",
    "end": "103439"
  },
  {
    "text": "just and then we can go through and kind",
    "start": "103439",
    "end": "105719"
  },
  {
    "text": "of wrangle it and say if everything is",
    "start": "105719",
    "end": "107799"
  },
  {
    "text": "filled out I am done here is one where",
    "start": "107799",
    "end": "110479"
  },
  {
    "text": "identity is in all the places otherwise",
    "start": "110479",
    "end": "112840"
  },
  {
    "text": "you've got nothing uh and by changing",
    "start": "112840",
    "end": "115960"
  },
  {
    "text": "the funs in those spots you can get all",
    "start": "115960",
    "end": "118000"
  },
  {
    "text": "kinds of funky behaviors",
    "start": "118000",
    "end": "120479"
  },
  {
    "text": "uh not very pleasant",
    "start": "120479",
    "end": "123240"
  },
  {
    "text": "yet uh all right this is all kind of",
    "start": "123240",
    "end": "126079"
  },
  {
    "text": "like an overview what to come if we had",
    "start": "126079",
    "end": "128200"
  },
  {
    "text": "the funs in it's was like ah I haven't",
    "start": "128200",
    "end": "130239"
  },
  {
    "text": "got enough extensions turned on so we",
    "start": "130239",
    "end": "132920"
  },
  {
    "text": "turn on some",
    "start": "132920",
    "end": "134480"
  },
  {
    "text": "extensions all right uh gads are the",
    "start": "134480",
    "end": "137440"
  },
  {
    "text": "first one so to get towards this",
    "start": "137440",
    "end": "139760"
  },
  {
    "text": "heterogenity we want a key type that",
    "start": "139760",
    "end": "142239"
  },
  {
    "text": "also kind of hints about the values",
    "start": "142239",
    "end": "144200"
  },
  {
    "text": "associated with the keys and so we use",
    "start": "144200",
    "end": "146519"
  },
  {
    "text": "gads to uh create a series of keys",
    "start": "146519",
    "end": "150080"
  },
  {
    "text": "tagged with the values they're going to",
    "start": "150080",
    "end": "151120"
  },
  {
    "text": "be mapped with and that's where dmap",
    "start": "151120",
    "end": "153239"
  },
  {
    "text": "comes in so who we have a dmap of those",
    "start": "153239",
    "end": "155080"
  },
  {
    "text": "keys well each key is mapped with its",
    "start": "155080",
    "end": "157599"
  },
  {
    "text": "corresponding value and it's wrapped up",
    "start": "157599",
    "end": "159120"
  },
  {
    "text": "in an identity functor as a bonus wrap",
    "start": "159120",
    "end": "161080"
  },
  {
    "text": "funs and everything because that's",
    "start": "161080",
    "end": "162200"
  },
  {
    "text": "probably a good",
    "start": "162200",
    "end": "164000"
  },
  {
    "text": "idea now it's in the module data.",
    "start": "164000",
    "end": "167360"
  },
  {
    "text": "dependent map but all of the source code",
    "start": "167360",
    "end": "169440"
  },
  {
    "text": "originally came from data. map copy and",
    "start": "169440",
    "end": "171760"
  },
  {
    "text": "paste sprinkle over these extra",
    "start": "171760",
    "end": "173360"
  },
  {
    "text": "superpowers so all your operations are",
    "start": "173360",
    "end": "175720"
  },
  {
    "text": "nice and efficient so it's basically",
    "start": "175720",
    "end": "178680"
  },
  {
    "text": "just a fancier version of data",
    "start": "178680",
    "end": "183040"
  },
  {
    "text": "mapol",
    "start": "183599",
    "end": "185159"
  },
  {
    "text": "but and you know we can do form",
    "start": "185159",
    "end": "187799"
  },
  {
    "text": "data uh we can deal with all of our keys",
    "start": "187799",
    "end": "191799"
  },
  {
    "text": "effectly and uniformly by traversing",
    "start": "191799",
    "end": "194080"
  },
  {
    "text": "over things yay ah I can look down here",
    "start": "194080",
    "end": "196959"
  },
  {
    "text": "that's good uh and so we can do our",
    "start": "196959",
    "end": "199400"
  },
  {
    "text": "check everything is filled out thing",
    "start": "199400",
    "end": "200959"
  },
  {
    "text": "with a simple",
    "start": "200959",
    "end": "202760"
  },
  {
    "text": "Traverse uh we can tag all of our errors",
    "start": "202760",
    "end": "206560"
  },
  {
    "text": "and have them so they map to the keys so",
    "start": "206560",
    "end": "208519"
  },
  {
    "text": "rather than just saying something",
    "start": "208519",
    "end": "209480"
  },
  {
    "text": "wentong wrong here are the things we can",
    "start": "209480",
    "end": "211000"
  },
  {
    "text": "say something went wrong in this field",
    "start": "211000",
    "end": "213000"
  },
  {
    "text": "and this other thing went wrong in this",
    "start": "213000",
    "end": "214319"
  },
  {
    "text": "other field and you don't lose that",
    "start": "214319",
    "end": "216000"
  },
  {
    "text": "information the provence of your",
    "start": "216000",
    "end": "218360"
  },
  {
    "text": "erors uh and then we can like just run",
    "start": "218360",
    "end": "221000"
  },
  {
    "text": "wild uh we write a function that does",
    "start": "221000",
    "end": "224239"
  },
  {
    "text": "stuff with funter things in effects and",
    "start": "224239",
    "end": "226840"
  },
  {
    "text": "then we just jam it into a dmap and",
    "start": "226840",
    "end": "228640"
  },
  {
    "text": "we'll get to all of that but first i'm",
    "start": "228640",
    "end": "231840"
  },
  {
    "start": "231000",
    "end": "477000"
  },
  {
    "text": "going to back up and explain GTS and",
    "start": "231840",
    "end": "234680"
  },
  {
    "text": "roll through all of these pieces so",
    "start": "234680",
    "end": "236000"
  },
  {
    "text": "that's the the little the trailer this",
    "start": "236000",
    "end": "238760"
  },
  {
    "text": "is the talk",
    "start": "238760",
    "end": "240319"
  },
  {
    "text": "so uh this is a regular hle type uh we",
    "start": "240319",
    "end": "244480"
  },
  {
    "text": "have details for some patient with",
    "start": "244480",
    "end": "246120"
  },
  {
    "text": "initials and date and birth or they're",
    "start": "246120",
    "end": "248239"
  },
  {
    "text": "already in the system and they have an",
    "start": "248239",
    "end": "249400"
  },
  {
    "text": "ID and we just treat them like a number",
    "start": "249400",
    "end": "251280"
  },
  {
    "text": "because that's Health Systems right uh",
    "start": "251280",
    "end": "253840"
  },
  {
    "text": "each of these Constructors uh has a type",
    "start": "253840",
    "end": "256519"
  },
  {
    "text": "patient details takes your initials and",
    "start": "256519",
    "end": "258680"
  },
  {
    "text": "your date of birth to create a patient",
    "start": "258680",
    "end": "260400"
  },
  {
    "text": "information patient ID just takes the ID",
    "start": "260400",
    "end": "263880"
  },
  {
    "text": "uh not really called out so much if we",
    "start": "263880",
    "end": "267080"
  },
  {
    "text": "turn on gads WE explicitly give typeal",
    "start": "267080",
    "end": "269720"
  },
  {
    "text": "signatures for uh each all of our",
    "start": "269720",
    "end": "273080"
  },
  {
    "text": "Constructors so far so good not that",
    "start": "273080",
    "end": "276120"
  },
  {
    "text": "much of a step forward but there's all",
    "start": "276120",
    "end": "278080"
  },
  {
    "text": "these little type tricks that people",
    "start": "278080",
    "end": "279919"
  },
  {
    "text": "play that give you good things and they",
    "start": "279919",
    "end": "281960"
  },
  {
    "text": "play very well with",
    "start": "281960",
    "end": "284360"
  },
  {
    "text": "gdts uh Phantom types are one of them if",
    "start": "284360",
    "end": "287880"
  },
  {
    "text": "we want patients to start off you know",
    "start": "287880",
    "end": "289520"
  },
  {
    "text": "we gather their details and we put them",
    "start": "289520",
    "end": "290840"
  },
  {
    "text": "into the system we can create a couple",
    "start": "290840",
    "end": "293240"
  },
  {
    "text": "of types they're a new patient or",
    "start": "293240",
    "end": "294759"
  },
  {
    "text": "they're in system and tag our patient",
    "start": "294759",
    "end": "297560"
  },
  {
    "text": "informations with that type using the a",
    "start": "297560",
    "end": "299360"
  },
  {
    "text": "type parameter uh a is never used inside",
    "start": "299360",
    "end": "303039"
  },
  {
    "text": "like the values it just separates our",
    "start": "303039",
    "end": "305120"
  },
  {
    "text": "types out and then we export our smart",
    "start": "305120",
    "end": "307720"
  },
  {
    "text": "Constructor saying a new patient is a",
    "start": "307720",
    "end": "309440"
  },
  {
    "text": "new patient which makes",
    "start": "309440",
    "end": "311919"
  },
  {
    "text": "sense uh and then when we're adding a",
    "start": "311919",
    "end": "314080"
  },
  {
    "text": "patient to the system uh we can patent",
    "start": "314080",
    "end": "316639"
  },
  {
    "text": "match on our patient",
    "start": "316639",
    "end": "318000"
  },
  {
    "text": "details grab everything out of that put",
    "start": "318000",
    "end": "321479"
  },
  {
    "text": "it into the",
    "start": "321479",
    "end": "322520"
  },
  {
    "text": "system oh but that's a partial function",
    "start": "322520",
    "end": "325400"
  },
  {
    "text": "and so we patent match on the thing that",
    "start": "325400",
    "end": "327560"
  },
  {
    "text": "we're never actually able to construct",
    "start": "327560",
    "end": "330319"
  },
  {
    "text": "and in this case we're lucky enough to",
    "start": "330319",
    "end": "331800"
  },
  {
    "text": "just be able to return it and it matches",
    "start": "331800",
    "end": "333440"
  },
  {
    "text": "up but otherwise we'd have to do some",
    "start": "333440",
    "end": "335120"
  },
  {
    "text": "garbage or error or whatever and it's",
    "start": "335120",
    "end": "339160"
  },
  {
    "text": "bad uh with GS because we're writing out",
    "start": "339160",
    "end": "342600"
  },
  {
    "text": "the types we can type out individual",
    "start": "342600",
    "end": "344680"
  },
  {
    "text": "Constructors so the the type system",
    "start": "344680",
    "end": "348039"
  },
  {
    "text": "knows that your patient details are for",
    "start": "348039",
    "end": "351520"
  },
  {
    "text": "new patients and then when we patent",
    "start": "351520",
    "end": "354479"
  },
  {
    "text": "match this is the only thing that we",
    "start": "354479",
    "end": "356520"
  },
  {
    "text": "have to patent match on because the type",
    "start": "356520",
    "end": "358000"
  },
  {
    "text": "system knows patient information new",
    "start": "358000",
    "end": "360199"
  },
  {
    "text": "patient only has the patient details",
    "start": "360199",
    "end": "361840"
  },
  {
    "text": "Constructor hey type information is",
    "start": "361840",
    "end": "364319"
  },
  {
    "text": "flowing and that is",
    "start": "364319",
    "end": "366800"
  },
  {
    "text": "great um we can smuggle other things in",
    "start": "366800",
    "end": "370120"
  },
  {
    "text": "so if we have for alls and constraints",
    "start": "370120",
    "end": "372199"
  },
  {
    "text": "on the right of an equals we can kind of",
    "start": "372199",
    "end": "374800"
  },
  {
    "text": "put some constraints on that kind of uh",
    "start": "374800",
    "end": "378080"
  },
  {
    "text": "get carried around with us so we can",
    "start": "378080",
    "end": "379440"
  },
  {
    "text": "smuggle those things into our patient",
    "start": "379440",
    "end": "381400"
  },
  {
    "text": "details so this is Advanced",
    "start": "381400",
    "end": "383680"
  },
  {
    "text": "serialization show a read",
    "start": "383680",
    "end": "386080"
  },
  {
    "text": "AO uh for putting you know images or",
    "start": "386080",
    "end": "389240"
  },
  {
    "text": "random stuff into our patient noes uh",
    "start": "389240",
    "end": "393160"
  },
  {
    "text": "but it's enough when we patent match the",
    "start": "393160",
    "end": "395560"
  },
  {
    "text": "show falls out and we can use that to",
    "start": "395560",
    "end": "397560"
  },
  {
    "text": "write a show instance for our patient",
    "start": "397560",
    "end": "399560"
  },
  {
    "text": "details uh the GS we can also do that",
    "start": "399560",
    "end": "403240"
  },
  {
    "text": "but we can scope it a little bit more",
    "start": "403240",
    "end": "405039"
  },
  {
    "text": "carefully uh which can be nice and comes",
    "start": "405039",
    "end": "407560"
  },
  {
    "text": "up",
    "start": "407560",
    "end": "408960"
  },
  {
    "text": "later uh and then we've got something a",
    "start": "408960",
    "end": "411639"
  },
  {
    "text": "little bit like in bto's talk where we",
    "start": "411639",
    "end": "413400"
  },
  {
    "text": "can uh patent when we can patent match",
    "start": "413400",
    "end": "415759"
  },
  {
    "text": "on these to learn new things and then",
    "start": "415759",
    "end": "419120"
  },
  {
    "text": "construct things to capture evidence uh",
    "start": "419120",
    "end": "422879"
  },
  {
    "text": "so this is type equality we're saying a",
    "start": "422879",
    "end": "425360"
  },
  {
    "text": "is equal to B if we construct it using",
    "start": "425360",
    "end": "427400"
  },
  {
    "text": "rle who you met a version of rle this",
    "start": "427400",
    "end": "429800"
  },
  {
    "text": "morning this is non-dependent easy mode",
    "start": "429800",
    "end": "432120"
  },
  {
    "text": "rle uh if we have a look at uh if we",
    "start": "432120",
    "end": "435440"
  },
  {
    "text": "break case on AB then we get evidence",
    "start": "435440",
    "end": "437800"
  },
  {
    "text": "that a is equivalent to B because that's",
    "start": "437800",
    "end": "439520"
  },
  {
    "text": "the only way it could have been built",
    "start": "439520",
    "end": "441319"
  },
  {
    "text": "and then we match on B as equivalent to",
    "start": "441319",
    "end": "443000"
  },
  {
    "text": "C and now the type system knows that A",
    "start": "443000",
    "end": "445599"
  },
  {
    "text": "and C are the same thing and so we can",
    "start": "445599",
    "end": "447680"
  },
  {
    "text": "capture it so that's moving evidence",
    "start": "447680",
    "end": "450199"
  },
  {
    "text": "around a system uh using",
    "start": "450199",
    "end": "452879"
  },
  {
    "text": "gadts all",
    "start": "452879",
    "end": "454720"
  },
  {
    "text": "right and then we can just go nuts so we",
    "start": "454720",
    "end": "457199"
  },
  {
    "text": "can write a little language where we",
    "start": "457199",
    "end": "458879"
  },
  {
    "text": "have ins and Bulls and functions between",
    "start": "458879",
    "end": "460759"
  },
  {
    "text": "ins and Bulls and other functions and",
    "start": "460759",
    "end": "462319"
  },
  {
    "text": "nothing else is",
    "start": "462319",
    "end": "463440"
  },
  {
    "text": "expressable uh you can go a little bit",
    "start": "463440",
    "end": "466000"
  },
  {
    "text": "crazy with this I'll probably reference",
    "start": "466000",
    "end": "468800"
  },
  {
    "text": "this a little bit later but you don't",
    "start": "468800",
    "end": "470000"
  },
  {
    "text": "need to remember it and you can do just",
    "start": "470000",
    "end": "473240"
  },
  {
    "text": "stuff this is just nothing up my sleeve",
    "start": "473240",
    "end": "475199"
  },
  {
    "text": "you don't need there's no test on",
    "start": "475199",
    "end": "477759"
  },
  {
    "start": "477000",
    "end": "591000"
  },
  {
    "text": "this uh the fun to fun pattern we cover",
    "start": "477759",
    "end": "480960"
  },
  {
    "text": "this and then things get started for",
    "start": "480960",
    "end": "483280"
  },
  {
    "text": "Real uh if we have some patient details",
    "start": "483280",
    "end": "486720"
  },
  {
    "text": "and we sprinkle FS everywhere then we're",
    "start": "486720",
    "end": "488440"
  },
  {
    "text": "using the fun funter",
    "start": "488440",
    "end": "490319"
  },
  {
    "text": "pattern we can write a generic map over",
    "start": "490319",
    "end": "493720"
  },
  {
    "text": "details thing that takes a natural",
    "start": "493720",
    "end": "495840"
  },
  {
    "text": "transformation as like a higher order",
    "start": "495840",
    "end": "497759"
  },
  {
    "text": "funter and then transforms all the",
    "start": "497759",
    "end": "500800"
  },
  {
    "text": "bits and we can use that to write our",
    "start": "500800",
    "end": "504680"
  },
  {
    "text": "uh take a pat take patient details and",
    "start": "504680",
    "end": "508039"
  },
  {
    "text": "drop it back down to maybe so we can put",
    "start": "508039",
    "end": "509720"
  },
  {
    "text": "it in a form for editing uh which just",
    "start": "509720",
    "end": "512240"
  },
  {
    "text": "Maps over everything runs the identity",
    "start": "512240",
    "end": "514560"
  },
  {
    "text": "pulls the identity off and puts the just",
    "start": "514560",
    "end": "516000"
  },
  {
    "text": "Constructor",
    "start": "516000",
    "end": "517159"
  },
  {
    "text": "on uh if we want to add an effect in uh",
    "start": "517159",
    "end": "520880"
  },
  {
    "text": "we can write once and for all Traverse",
    "start": "520880",
    "end": "523200"
  },
  {
    "text": "for",
    "start": "523200",
    "end": "524200"
  },
  {
    "text": "details uh and then we can use that to",
    "start": "524200",
    "end": "526480"
  },
  {
    "text": "do our now kind of slightly repetitive",
    "start": "526480",
    "end": "529959"
  },
  {
    "text": "uh check everything as filled out",
    "start": "529959",
    "end": "531240"
  },
  {
    "text": "example by just reversing over it uh and",
    "start": "531240",
    "end": "534560"
  },
  {
    "text": "pushing the identity Constructor through",
    "start": "534560",
    "end": "536880"
  },
  {
    "text": "the",
    "start": "536880",
    "end": "538320"
  },
  {
    "text": "just uh",
    "start": "538320",
    "end": "540079"
  },
  {
    "text": "trust me there's again no test on this",
    "start": "540079",
    "end": "542880"
  },
  {
    "text": "but then we can get a little bit of",
    "start": "542880",
    "end": "544680"
  },
  {
    "text": "adventive and think well if we're",
    "start": "544680",
    "end": "546560"
  },
  {
    "text": "playing with effectful natural",
    "start": "546560",
    "end": "547839"
  },
  {
    "text": "Transformations let's just put them in a",
    "start": "547839",
    "end": "549480"
  },
  {
    "text": "new type and see what happens uh and",
    "start": "549480",
    "end": "552959"
  },
  {
    "text": "this is a way of giving us a different",
    "start": "552959",
    "end": "555120"
  },
  {
    "text": "effectful natural transformation for",
    "start": "555120",
    "end": "556800"
  },
  {
    "text": "each field of our details and we can",
    "start": "556800",
    "end": "559360"
  },
  {
    "text": "package it up why might you want to do",
    "start": "559360",
    "end": "562720"
  },
  {
    "text": "that well we can write validators for",
    "start": "562720",
    "end": "564959"
  },
  {
    "text": "all of our Fields so this is just the",
    "start": "564959",
    "end": "567279"
  },
  {
    "text": "initials must be set and must be greater",
    "start": "567279",
    "end": "569480"
  },
  {
    "text": "than two in length otherwise you get",
    "start": "569480",
    "end": "570959"
  },
  {
    "text": "errors and we can package all of our",
    "start": "570959",
    "end": "573120"
  },
  {
    "text": "validators together and that totally",
    "start": "573120",
    "end": "574920"
  },
  {
    "text": "fits inside one of these",
    "start": "574920",
    "end": "577160"
  },
  {
    "text": "things uh and then because we can apply",
    "start": "577160",
    "end": "580320"
  },
  {
    "text": "those functions effectly and we have",
    "start": "580320",
    "end": "582279"
  },
  {
    "text": "them all packaged up uh we can just",
    "start": "582279",
    "end": "584800"
  },
  {
    "text": "write something that validates patients",
    "start": "584800",
    "end": "586320"
  },
  {
    "text": "by applying all those effectful",
    "start": "586320",
    "end": "588160"
  },
  {
    "text": "functions to our",
    "start": "588160",
    "end": "590720"
  },
  {
    "text": "information uh benjamin. Pizza I don't",
    "start": "590720",
    "end": "594279"
  },
  {
    "start": "591000",
    "end": "787000"
  },
  {
    "text": "think Pizza is his last name I think",
    "start": "594279",
    "end": "595680"
  },
  {
    "text": "it's just a domain name that was",
    "start": "595680",
    "end": "596800"
  },
  {
    "text": "available has a great post on this and",
    "start": "596800",
    "end": "598640"
  },
  {
    "text": "if you Google funter funter Benjamin",
    "start": "598640",
    "end": "600680"
  },
  {
    "text": "Pizza he'll the post will be summoned",
    "start": "600680",
    "end": "603360"
  },
  {
    "text": "and yeah it's a good read all right now",
    "start": "603360",
    "end": "606600"
  },
  {
    "text": "we're getting into the dmav verse uh I",
    "start": "606600",
    "end": "608560"
  },
  {
    "text": "found this through the reflex guys use",
    "start": "608560",
    "end": "610640"
  },
  {
    "text": "this a lot uh",
    "start": "610640",
    "end": "613680"
  },
  {
    "text": "James mocus is his GitHub name came up",
    "start": "613680",
    "end": "616360"
  },
  {
    "text": "with originally uh we start off with",
    "start": "616360",
    "end": "618839"
  },
  {
    "text": "dependent Su just to warm",
    "start": "618839",
    "end": "621040"
  },
  {
    "text": "up uh it's this thing we have some key",
    "start": "621040",
    "end": "624160"
  },
  {
    "text": "type which has uh types associated with",
    "start": "624160",
    "end": "627640"
  },
  {
    "text": "each key and then we have a fun full of",
    "start": "627640",
    "end": "629720"
  },
  {
    "text": "those things as values an example will",
    "start": "629720",
    "end": "632600"
  },
  {
    "text": "help uh here are our keys our patient",
    "start": "632600",
    "end": "635200"
  },
  {
    "text": "information is either initials in a date",
    "start": "635200",
    "end": "637959"
  },
  {
    "text": "of birth or an ID depending on which way",
    "start": "637959",
    "end": "640200"
  },
  {
    "text": "we build it we're going to package up in",
    "start": "640200",
    "end": "642920"
  },
  {
    "text": "package it up into a d suum so we don't",
    "start": "642920",
    "end": "644720"
  },
  {
    "text": "have to carry around these ins or you",
    "start": "644720",
    "end": "647680"
  },
  {
    "text": "know text or dates of",
    "start": "647680",
    "end": "650760"
  },
  {
    "text": "birth",
    "start": "650760",
    "end": "652320"
  },
  {
    "text": "uh and so here's a d suum of patient",
    "start": "652320",
    "end": "657920"
  },
  {
    "text": "details uh in an identity thing and",
    "start": "657920",
    "end": "661000"
  },
  {
    "text": "we're not talking about the ID int thing",
    "start": "661000",
    "end": "663360"
  },
  {
    "text": "cuz that's hidden from",
    "start": "663360",
    "end": "665040"
  },
  {
    "text": "us uh if we have applicatives we don't",
    "start": "665040",
    "end": "668160"
  },
  {
    "text": "even need to say",
    "start": "668160",
    "end": "669760"
  },
  {
    "text": "identity uh and when we're using it we",
    "start": "669760",
    "end": "671760"
  },
  {
    "text": "can just kind of patent match our way to",
    "start": "671760",
    "end": "673240"
  },
  {
    "text": "Victory so if we have no details we can",
    "start": "673240",
    "end": "676600"
  },
  {
    "text": "freak",
    "start": "676600",
    "end": "677480"
  },
  {
    "text": "out uh if we do have details we can put",
    "start": "677480",
    "end": "680399"
  },
  {
    "text": "the patient into the system if we don't",
    "start": "680399",
    "end": "682800"
  },
  {
    "text": "have an ID well maybe we shouldn't be",
    "start": "682800",
    "end": "684959"
  },
  {
    "text": "playing with IDs but we freak out and",
    "start": "684959",
    "end": "687680"
  },
  {
    "text": "otherwise so by Patent matching we have",
    "start": "687680",
    "end": "690240"
  },
  {
    "text": "the type information of each of the key",
    "start": "690240",
    "end": "691959"
  },
  {
    "text": "value pairs available inside of that",
    "start": "691959",
    "end": "693680"
  },
  {
    "text": "patent match and we can do things with",
    "start": "693680",
    "end": "696320"
  },
  {
    "text": "it uh to use this we have a few type",
    "start": "696320",
    "end": "700240"
  },
  {
    "text": "classes that they can add into the mix",
    "start": "700240",
    "end": "702079"
  },
  {
    "text": "to make it usable so to compare keys",
    "start": "702079",
    "end": "704160"
  },
  {
    "text": "where the types might be different we",
    "start": "704160",
    "end": "706040"
  },
  {
    "text": "have uh this Gad equality type for keys",
    "start": "706040",
    "end": "710440"
  },
  {
    "text": "that Capt captures evidence that two",
    "start": "710440",
    "end": "712279"
  },
  {
    "text": "keys are the same and you could write it",
    "start": "712279",
    "end": "714600"
  },
  {
    "text": "out using the usual pattern you know if",
    "start": "714600",
    "end": "716720"
  },
  {
    "text": "they're the same and they're equal",
    "start": "716720",
    "end": "720240"
  },
  {
    "text": "otherwise go",
    "start": "720240",
    "end": "721760"
  },
  {
    "text": "away and there's a comparison type",
    "start": "721760",
    "end": "724120"
  },
  {
    "text": "that's similar and you follow the usual",
    "start": "724120",
    "end": "725800"
  },
  {
    "text": "patterns for writing",
    "start": "725800",
    "end": "727360"
  },
  {
    "text": "comparison and don't ever do",
    "start": "727360",
    "end": "730920"
  },
  {
    "text": "this let show lean on template hasle so",
    "start": "730920",
    "end": "735199"
  },
  {
    "text": "I'm just telling you these classes exist",
    "start": "735199",
    "end": "737199"
  },
  {
    "text": "but what do you really want is this hey",
    "start": "737199",
    "end": "739680"
  },
  {
    "text": "and now you're cooking with",
    "start": "739680",
    "end": "741639"
  },
  {
    "text": "gas uh you probably also want this and",
    "start": "741639",
    "end": "745240"
  },
  {
    "text": "it's going to come up later if you're",
    "start": "745240",
    "end": "746519"
  },
  {
    "text": "using gads you lose the usual der at the",
    "start": "746519",
    "end": "749519"
  },
  {
    "text": "end but you can use Standalone deriving",
    "start": "749519",
    "end": "751560"
  },
  {
    "text": "to get your usual type classes you know",
    "start": "751560",
    "end": "754120"
  },
  {
    "text": "and",
    "start": "754120",
    "end": "755279"
  },
  {
    "text": "love and yes and there are some other",
    "start": "755279",
    "end": "759560"
  },
  {
    "text": "classes that you'll see in type",
    "start": "759560",
    "end": "761279"
  },
  {
    "text": "signatures or if you look at the current",
    "start": "761279",
    "end": "762639"
  },
  {
    "text": "code but they're kind of going away if",
    "start": "762639",
    "end": "764600"
  },
  {
    "text": "the reflex people have their way uh",
    "start": "764600",
    "end": "767160"
  },
  {
    "text": "their say and I'll show you why later on",
    "start": "767160",
    "end": "770040"
  },
  {
    "text": "I'll show you why right eek uh so this",
    "start": "770040",
    "end": "775360"
  },
  {
    "text": "is the equality kind of thing for",
    "start": "775360",
    "end": "778240"
  },
  {
    "text": "comparing your values when you have key",
    "start": "778240",
    "end": "779920"
  },
  {
    "text": "information to guide the types uh and",
    "start": "779920",
    "end": "783360"
  },
  {
    "text": "yes you don't need that anymore I will",
    "start": "783360",
    "end": "785240"
  },
  {
    "text": "show you how all right onto the start of",
    "start": "785240",
    "end": "789440"
  },
  {
    "start": "787000",
    "end": "1024000"
  },
  {
    "text": "the show",
    "start": "789440",
    "end": "791600"
  },
  {
    "text": "dmap uh we have our key type we have our",
    "start": "791600",
    "end": "794440"
  },
  {
    "text": "funter and then we have a it creates a",
    "start": "794440",
    "end": "797199"
  },
  {
    "text": "partial dependent map by just copying",
    "start": "797199",
    "end": "799920"
  },
  {
    "text": "data. map and adding this extra type",
    "start": "799920",
    "end": "803279"
  },
  {
    "text": "information throughout it",
    "start": "803279",
    "end": "805240"
  },
  {
    "text": "all uh we can go to and from lists like",
    "start": "805240",
    "end": "808680"
  },
  {
    "text": "the API is basically the same including",
    "start": "808680",
    "end": "810639"
  },
  {
    "text": "some copy paste errors in the hattic",
    "start": "810639",
    "end": "812199"
  },
  {
    "text": "that don't refer to the extra type",
    "start": "812199",
    "end": "813560"
  },
  {
    "text": "information because they just went",
    "start": "813560",
    "end": "815639"
  },
  {
    "text": "through it from start to",
    "start": "815639",
    "end": "817120"
  },
  {
    "text": "finish you can insert delete like when I",
    "start": "817120",
    "end": "821760"
  },
  {
    "text": "say it's the same API it's like very",
    "start": "821760",
    "end": "824199"
  },
  {
    "text": "much the same API uh unions handy",
    "start": "824199",
    "end": "828079"
  },
  {
    "text": "differences handy intersections handy",
    "start": "828079",
    "end": "831279"
  },
  {
    "text": "and the reason they're really handy is",
    "start": "831279",
    "end": "832959"
  },
  {
    "text": "that this is kind of forming an",
    "start": "832959",
    "end": "834600"
  },
  {
    "text": "extensible record system and being able",
    "start": "834600",
    "end": "836759"
  },
  {
    "text": "to do efficient unions and intersections",
    "start": "836759",
    "end": "838560"
  },
  {
    "text": "and differences becomes really important",
    "start": "838560",
    "end": "840639"
  },
  {
    "text": "when you want to lean on one of those",
    "start": "840639",
    "end": "843519"
  },
  {
    "text": "things with thousands of fields being",
    "start": "843519",
    "end": "845480"
  },
  {
    "text": "combined in weird ad hoc",
    "start": "845480",
    "end": "847639"
  },
  {
    "text": "ways uh the things that I'm leaning on",
    "start": "847639",
    "end": "850160"
  },
  {
    "text": "in this talk are you can map you can map",
    "start": "850160",
    "end": "853360"
  },
  {
    "text": "maybe to filter things out and you can",
    "start": "853360",
    "end": "855079"
  },
  {
    "text": "Traverse to do effectful things because",
    "start": "855079",
    "end": "856680"
  },
  {
    "text": "that's where all my good examples come",
    "start": "856680",
    "end": "859040"
  },
  {
    "text": "from all right uh so here's my patient",
    "start": "859040",
    "end": "862800"
  },
  {
    "text": "details in my extensible record system",
    "start": "862800",
    "end": "865199"
  },
  {
    "text": "via dependent map and sticky tape uh",
    "start": "865199",
    "end": "868880"
  },
  {
    "text": "with we have our initials and date of",
    "start": "868880",
    "end": "870240"
  },
  {
    "text": "birth we have an optional weight and we",
    "start": "870240",
    "end": "871959"
  },
  {
    "text": "have another dmap inside the key for",
    "start": "871959",
    "end": "874399"
  },
  {
    "text": "existing conditions uh all wrapped up in",
    "start": "874399",
    "end": "877279"
  },
  {
    "text": "a",
    "start": "877279",
    "end": "879040"
  },
  {
    "text": "funter",
    "start": "879040",
    "end": "880800"
  },
  {
    "text": "uh there kind because it's a partial",
    "start": "880800",
    "end": "883199"
  },
  {
    "text": "dependent map sometimes we start things",
    "start": "883199",
    "end": "885320"
  },
  {
    "text": "off with like here are all the keys that",
    "start": "885320",
    "end": "887120"
  },
  {
    "text": "you would like so you can create this is",
    "start": "887120",
    "end": "889279"
  },
  {
    "text": "my empty form for start with these",
    "start": "889279",
    "end": "891839"
  },
  {
    "text": "fields uh there are other ways of",
    "start": "891839",
    "end": "895240"
  },
  {
    "text": "dealing with",
    "start": "895240",
    "end": "896279"
  },
  {
    "text": "this uh and then we can you know TR",
    "start": "896279",
    "end": "899000"
  },
  {
    "text": "verse over that to check the form is",
    "start": "899000",
    "end": "900519"
  },
  {
    "text": "filled out or map over it to take a",
    "start": "900519",
    "end": "904079"
  },
  {
    "text": "record and prepare it for form",
    "start": "904079",
    "end": "908160"
  },
  {
    "text": "worthiness uh we can take our validation",
    "start": "908160",
    "end": "910720"
  },
  {
    "text": "stuff from",
    "start": "910720",
    "end": "912120"
  },
  {
    "text": "before and our validation functions from",
    "start": "912120",
    "end": "915399"
  },
  {
    "text": "before and then we can build a dmap of",
    "start": "915399",
    "end": "917839"
  },
  {
    "text": "validation",
    "start": "917839",
    "end": "919079"
  },
  {
    "text": "functions uh and then do stuff uh don't",
    "start": "919079",
    "end": "923079"
  },
  {
    "text": "look too closely at the code there",
    "start": "923079",
    "end": "924759"
  },
  {
    "text": "there's a point I want to make here in",
    "start": "924759",
    "end": "926360"
  },
  {
    "text": "the abstract uh and part of it is the",
    "start": "926360",
    "end": "928680"
  },
  {
    "text": "codee is ugly uh this is all evolving so",
    "start": "928680",
    "end": "932199"
  },
  {
    "text": "we're doing an intersection to run the",
    "start": "932199",
    "end": "933639"
  },
  {
    "text": "validators and then we need to do a",
    "start": "933639",
    "end": "935040"
  },
  {
    "text": "sequence and they don't have sequence",
    "start": "935040",
    "end": "936480"
  },
  {
    "text": "yet so we have a Traverse with our fmap",
    "start": "936480",
    "end": "939279"
  },
  {
    "text": "identity to kind of like just quietly",
    "start": "939279",
    "end": "941040"
  },
  {
    "text": "fake it uh but yes I'll do some PRS and",
    "start": "941040",
    "end": "945000"
  },
  {
    "text": "everything will be",
    "start": "945000",
    "end": "947560"
  },
  {
    "text": "fine uh yeah we can change our arot type",
    "start": "947920",
    "end": "951880"
  },
  {
    "text": "a little so that we actually have",
    "start": "951880",
    "end": "953480"
  },
  {
    "text": "Provence information so we know which",
    "start": "953480",
    "end": "954920"
  },
  {
    "text": "errors are occurring which keys in a",
    "start": "954920",
    "end": "956880"
  },
  {
    "text": "form validation Library that's really",
    "start": "956880",
    "end": "958279"
  },
  {
    "text": "nice cuz then you automatically just",
    "start": "958279",
    "end": "960560"
  },
  {
    "text": "display the errors in the right spot at",
    "start": "960560",
    "end": "962560"
  },
  {
    "text": "the cost of five",
    "start": "962560",
    "end": "965560"
  },
  {
    "text": "tokens uh yes uh the thing that you'll",
    "start": "965560",
    "end": "969399"
  },
  {
    "text": "probably play with the most because the",
    "start": "969399",
    "end": "971000"
  },
  {
    "text": "usages and best practices are kind of",
    "start": "971000",
    "end": "973519"
  },
  {
    "text": "still slightly emerging is you could",
    "start": "973519",
    "end": "975800"
  },
  {
    "text": "start with that map of all the important",
    "start": "975800",
    "end": "977480"
  },
  {
    "text": "keys with nothings in them to Kickstart",
    "start": "977480",
    "end": "980040"
  },
  {
    "text": "your form or you can start with dap.",
    "start": "980040",
    "end": "982680"
  },
  {
    "text": "empty and then really lean on your data.",
    "start": "982680",
    "end": "985920"
  },
  {
    "text": "map skills to Union and intersect your",
    "start": "985920",
    "end": "987680"
  },
  {
    "text": "way to Victory",
    "start": "987680",
    "end": "989519"
  },
  {
    "text": "uh in this case we're assuming that we",
    "start": "989519",
    "end": "992000"
  },
  {
    "text": "have an object with things in it and",
    "start": "992000",
    "end": "994240"
  },
  {
    "text": "then if you look down the bottom I do a",
    "start": "994240",
    "end": "996319"
  },
  {
    "text": "little bit of Union stuff and then that",
    "start": "996319",
    "end": "997959"
  },
  {
    "text": "can handle the case where you start with",
    "start": "997959",
    "end": "999199"
  },
  {
    "text": "an empty map and we're kind of just",
    "start": "999199",
    "end": "1000880"
  },
  {
    "text": "validating the thing we have validation",
    "start": "1000880",
    "end": "1002480"
  },
  {
    "text": "functions for uh the main thing I'm",
    "start": "1002480",
    "end": "1005759"
  },
  {
    "text": "pointing out here is that you'll have to",
    "start": "1005759",
    "end": "1007959"
  },
  {
    "text": "find your own feet with those things a",
    "start": "1007959",
    "end": "1009360"
  },
  {
    "text": "little until some more patn get codified",
    "start": "1009360",
    "end": "1012440"
  },
  {
    "text": "um but it's just uh just the same as",
    "start": "1012440",
    "end": "1016240"
  },
  {
    "text": "playing around witha do map uh rather",
    "start": "1016240",
    "end": "1019120"
  },
  {
    "text": "than a usual like vinyl or some other",
    "start": "1019120",
    "end": "1021519"
  },
  {
    "text": "extensible record",
    "start": "1021519",
    "end": "1023400"
  },
  {
    "text": "system cool uh there are tricks with",
    "start": "1023400",
    "end": "1026720"
  },
  {
    "start": "1024000",
    "end": "1172000"
  },
  {
    "text": "keys that are good to tell people",
    "start": "1026720",
    "end": "1029199"
  },
  {
    "text": "about uh the first one's just a cute",
    "start": "1029199",
    "end": "1031640"
  },
  {
    "text": "little Gad you can capture up all of",
    "start": "1031640",
    "end": "1033480"
  },
  {
    "text": "your keys and talk about them",
    "start": "1033480",
    "end": "1035038"
  },
  {
    "text": "uniformly uh this some Constructor drops",
    "start": "1035039",
    "end": "1037760"
  },
  {
    "text": "the a of a key a and so if we've got",
    "start": "1037760",
    "end": "1040319"
  },
  {
    "text": "some map and ask for the keys it can",
    "start": "1040319",
    "end": "1042918"
  },
  {
    "text": "tell me in a uniform way I just find it",
    "start": "1042919",
    "end": "1046120"
  },
  {
    "text": "cute uh actual productive tricks with",
    "start": "1046120",
    "end": "1049120"
  },
  {
    "text": "Keys uh we can Nest them so before I had",
    "start": "1049120",
    "end": "1052840"
  },
  {
    "text": "my new patient and my ins system",
    "start": "1052840",
    "end": "1054960"
  },
  {
    "text": "versions of patients uh here I've",
    "start": "1054960",
    "end": "1058360"
  },
  {
    "text": "treated these Keys like they're going to",
    "start": "1058360",
    "end": "1060320"
  },
  {
    "text": "become extensible records for each of",
    "start": "1060320",
    "end": "1062360"
  },
  {
    "text": "those Constructors I can create a new",
    "start": "1062360",
    "end": "1064640"
  },
  {
    "text": "key that passes them along and it's kind",
    "start": "1064640",
    "end": "1066880"
  },
  {
    "text": "of encoding that Union in the type level",
    "start": "1066880",
    "end": "1070760"
  },
  {
    "text": "uh it makes it pretty efficient for me",
    "start": "1070760",
    "end": "1072559"
  },
  {
    "text": "to filter out and say hey give me all",
    "start": "1072559",
    "end": "1074320"
  },
  {
    "text": "the ones that are new patients cuz I can",
    "start": "1074320",
    "end": "1075720"
  },
  {
    "text": "just check for that outter wrapper uh",
    "start": "1075720",
    "end": "1078080"
  },
  {
    "text": "and I can promote things things by just",
    "start": "1078080",
    "end": "1079320"
  },
  {
    "text": "mapping over the keys and putting the",
    "start": "1079320",
    "end": "1081080"
  },
  {
    "text": "wrapper on uh The Reflex guys use this a",
    "start": "1081080",
    "end": "1084360"
  },
  {
    "text": "lot uh it's kind of Handy uh and we can",
    "start": "1084360",
    "end": "1087720"
  },
  {
    "text": "do weird things to check for that so A",
    "start": "1087720",
    "end": "1090919"
  },
  {
    "text": "map full of proxies is a way of saying",
    "start": "1090919",
    "end": "1093000"
  },
  {
    "text": "I'm interested in these keys without",
    "start": "1093000",
    "end": "1094400"
  },
  {
    "text": "having to come up with values if we",
    "start": "1094400",
    "end": "1096960"
  },
  {
    "text": "intersect a map with a map full of",
    "start": "1096960",
    "end": "1098360"
  },
  {
    "text": "proxies and we get the map full of",
    "start": "1098360",
    "end": "1099679"
  },
  {
    "text": "proxies out it means all those things",
    "start": "1099679",
    "end": "1102320"
  },
  {
    "text": "were present and then we can create it",
    "start": "1102320",
    "end": "1104720"
  },
  {
    "text": "the point is you can create a test",
    "start": "1104720",
    "end": "1106000"
  },
  {
    "text": "object and say hey are all these fields",
    "start": "1106000",
    "end": "1108240"
  },
  {
    "text": "present and it's a couple lines of code",
    "start": "1108240",
    "end": "1111240"
  },
  {
    "text": "that you can",
    "start": "1111240",
    "end": "1112400"
  },
  {
    "text": "reuse all right we can do slightly",
    "start": "1112400",
    "end": "1115320"
  },
  {
    "text": "better for those who are aware of classy",
    "start": "1115320",
    "end": "1117679"
  },
  {
    "text": "prisms you can write a classy prism for",
    "start": "1117679",
    "end": "1119440"
  },
  {
    "text": "your key type uh there are other",
    "start": "1119440",
    "end": "1122960"
  },
  {
    "text": "extensions in play here but that's fine",
    "start": "1122960",
    "end": "1125880"
  },
  {
    "text": "uh little bit of Plumbing this is more",
    "start": "1125880",
    "end": "1128080"
  },
  {
    "text": "or less like handwriting what you get",
    "start": "1128080",
    "end": "1129559"
  },
  {
    "text": "from the template hcll for creating",
    "start": "1129559",
    "end": "1131000"
  },
  {
    "text": "classy prisms uh and once you've got",
    "start": "1131000",
    "end": "1134679"
  },
  {
    "text": "that ignore the man behind the curtain",
    "start": "1134679",
    "end": "1137520"
  },
  {
    "text": "you can wire it up fairly easily and",
    "start": "1137520",
    "end": "1140600"
  },
  {
    "text": "then we have a generic test object",
    "start": "1140600",
    "end": "1143400"
  },
  {
    "text": "anytime we have one of these prisms we",
    "start": "1143400",
    "end": "1145640"
  },
  {
    "text": "can say Yep this has the new patient",
    "start": "1145640",
    "end": "1149200"
  },
  {
    "text": "fields and then we don't have to blindly",
    "start": "1149200",
    "end": "1152280"
  },
  {
    "text": "follow the reflex best practices and",
    "start": "1152280",
    "end": "1154520"
  },
  {
    "text": "build our unions into our types in ways",
    "start": "1154520",
    "end": "1156360"
  },
  {
    "text": "that we may not want to we can just",
    "start": "1156360",
    "end": "1157679"
  },
  {
    "text": "write more and more prisms and just",
    "start": "1157679",
    "end": "1158960"
  },
  {
    "text": "write the keys we want so I've been",
    "start": "1158960",
    "end": "1161679"
  },
  {
    "text": "that's something I've been playing with",
    "start": "1161679",
    "end": "1162960"
  },
  {
    "text": "I know some people like classy prisms so",
    "start": "1162960",
    "end": "1165120"
  },
  {
    "text": "I put it out there for you all to play",
    "start": "1165120",
    "end": "1167280"
  },
  {
    "text": "with",
    "start": "1167280",
    "end": "1168919"
  },
  {
    "text": "right yes that's what I said",
    "start": "1168919",
    "end": "1171440"
  },
  {
    "text": "slide right uh now the dynamic bit uh",
    "start": "1171440",
    "end": "1176679"
  },
  {
    "start": "1172000",
    "end": "1260000"
  },
  {
    "text": "sure we've got keys for all these things",
    "start": "1176679",
    "end": "1178760"
  },
  {
    "text": "but what about the keys you're not",
    "start": "1178760",
    "end": "1180880"
  },
  {
    "text": "expecting uh Prim unique is a package in",
    "start": "1180880",
    "end": "1184080"
  },
  {
    "text": "this universe that has your back it has",
    "start": "1184080",
    "end": "1185559"
  },
  {
    "text": "a tag type uh where the a is a phantom",
    "start": "1185559",
    "end": "1189000"
  },
  {
    "text": "type and you have all of the instances",
    "start": "1189000",
    "end": "1190840"
  },
  {
    "text": "to work with dependent map how this",
    "start": "1190840",
    "end": "1193760"
  },
  {
    "text": "plays out uh I'm going to create patient",
    "start": "1193760",
    "end": "1197240"
  },
  {
    "text": "notes they have a Time",
    "start": "1197240",
    "end": "1199200"
  },
  {
    "text": "and they have a thing and the thing has",
    "start": "1199200",
    "end": "1201679"
  },
  {
    "text": "eek or show and read our Advanced",
    "start": "1201679",
    "end": "1204039"
  },
  {
    "text": "serialization platform and we're just",
    "start": "1204039",
    "end": "1206559"
  },
  {
    "text": "going to have a big map of these",
    "start": "1206559",
    "end": "1208440"
  },
  {
    "text": "notes uh so when it comes to adding a",
    "start": "1208440",
    "end": "1211360"
  },
  {
    "text": "note we grab the time we create a tag",
    "start": "1211360",
    "end": "1215200"
  },
  {
    "text": "with a at the moment it's tagged it's",
    "start": "1215200",
    "end": "1217200"
  },
  {
    "text": "going to be tagged with a through its",
    "start": "1217200",
    "end": "1218720"
  },
  {
    "text": "usage we have no idea what a is um but",
    "start": "1218720",
    "end": "1223679"
  },
  {
    "text": "there we go we've just put it into a map",
    "start": "1223679",
    "end": "1226240"
  },
  {
    "text": "of these things and when we using it I",
    "start": "1226240",
    "end": "1230919"
  },
  {
    "text": "create my empty map I'll add an INT why",
    "start": "1230919",
    "end": "1234480"
  },
  {
    "text": "not and I'll add a Bool and later on I",
    "start": "1234480",
    "end": "1239000"
  },
  {
    "text": "can you know without recompiling this I",
    "start": "1239000",
    "end": "1240880"
  },
  {
    "text": "can add all kinds of types that I",
    "start": "1240880",
    "end": "1242280"
  },
  {
    "text": "haven't even created yet and then if I",
    "start": "1242280",
    "end": "1245400"
  },
  {
    "text": "print it out it",
    "start": "1245400",
    "end": "1247679"
  },
  {
    "text": "works magic that's the delightful",
    "start": "1247679",
    "end": "1250679"
  },
  {
    "text": "dynamism uh sometimes a bit too much",
    "start": "1250679",
    "end": "1253840"
  },
  {
    "text": "magic for people who see it the first",
    "start": "1253840",
    "end": "1255440"
  },
  {
    "text": "time but if you click through the slides",
    "start": "1255440",
    "end": "1256880"
  },
  {
    "text": "on slow-mo afterwards it might make more",
    "start": "1256880",
    "end": "1260960"
  },
  {
    "start": "1260000",
    "end": "1505000"
  },
  {
    "text": "sense um so to get away from like wizard",
    "start": "1260960",
    "end": "1265360"
  },
  {
    "text": "magic to Ed magic uh the last little",
    "start": "1265360",
    "end": "1267760"
  },
  {
    "text": "trick that gives you good uh Behavior",
    "start": "1267760",
    "end": "1270120"
  },
  {
    "text": "with constraints is using the",
    "start": "1270120",
    "end": "1272120"
  },
  {
    "text": "constraints and constraints extras",
    "start": "1272120",
    "end": "1274320"
  },
  {
    "text": "package uh and we're going to use this",
    "start": "1274320",
    "end": "1276120"
  },
  {
    "text": "to write a show instance for Dum so we",
    "start": "1276120",
    "end": "1279320"
  },
  {
    "text": "have a key we have a funter let's show",
    "start": "1279320",
    "end": "1281400"
  },
  {
    "text": "it or let's think really hard about how",
    "start": "1281400",
    "end": "1284240"
  },
  {
    "text": "to show it because it's not really",
    "start": "1284240",
    "end": "1285799"
  },
  {
    "text": "obvious what we're going to need",
    "start": "1285799",
    "end": "1288919"
  },
  {
    "text": "uh this involves plumbing and this kind",
    "start": "1288919",
    "end": "1291240"
  },
  {
    "text": "of Plumbing involves type classes so we",
    "start": "1291240",
    "end": "1293240"
  },
  {
    "text": "reach for the constraints",
    "start": "1293240",
    "end": "1295000"
  },
  {
    "text": "package uh which gives us the ability to",
    "start": "1295000",
    "end": "1297559"
  },
  {
    "text": "capture a type class dictionary in a",
    "start": "1297559",
    "end": "1299640"
  },
  {
    "text": "dict Constructor and then we can use it",
    "start": "1299640",
    "end": "1302080"
  },
  {
    "text": "later using with",
    "start": "1302080",
    "end": "1303320"
  },
  {
    "text": "dict uh if we've captured a type class",
    "start": "1303320",
    "end": "1306159"
  },
  {
    "text": "in dict and we have a computation that",
    "start": "1306159",
    "end": "1308360"
  },
  {
    "text": "requires that particular type class with",
    "start": "1308360",
    "end": "1310559"
  },
  {
    "text": "dict lets us run",
    "start": "1310559",
    "end": "1311919"
  },
  {
    "text": "it so if we have an equality for x and",
    "start": "1311919",
    "end": "1315039"
  },
  {
    "text": "some function that requires equality for",
    "start": "1315039",
    "end": "1317240"
  },
  {
    "text": "X to give us a y and we're in some",
    "start": "1317240",
    "end": "1319400"
  },
  {
    "text": "module where we cannot get hold of",
    "start": "1319400",
    "end": "1320960"
  },
  {
    "text": "equality for x uh we can smuggle it in",
    "start": "1320960",
    "end": "1323840"
  },
  {
    "text": "using with dict because dict is a data",
    "start": "1323840",
    "end": "1326400"
  },
  {
    "text": "type we can put our dictionary with",
    "start": "1326400",
    "end": "1328360"
  },
  {
    "text": "equality for X into a record somewhere",
    "start": "1328360",
    "end": "1331320"
  },
  {
    "text": "and pass it through our program and then",
    "start": "1331320",
    "end": "1333520"
  },
  {
    "text": "just pop it out using with",
    "start": "1333520",
    "end": "1335120"
  },
  {
    "text": "dict which is pretty",
    "start": "1335120",
    "end": "1337880"
  },
  {
    "text": "cool and there's other plumbing things",
    "start": "1337880",
    "end": "1340240"
  },
  {
    "text": "in constraints uh this gives us",
    "start": "1340240",
    "end": "1341880"
  },
  {
    "text": "entailment if you've got ordex you've",
    "start": "1341880",
    "end": "1343480"
  },
  {
    "text": "got eex and then we can kind of use it",
    "start": "1343480",
    "end": "1347440"
  },
  {
    "text": "so if we have ordex and then for eex",
    "start": "1347440",
    "end": "1350640"
  },
  {
    "text": "Anytime You' got aex and a computation",
    "start": "1350640",
    "end": "1352600"
  },
  {
    "text": "that requires eex this will bust bust",
    "start": "1352600",
    "end": "1356279"
  },
  {
    "text": "things open and rumage around with them",
    "start": "1356279",
    "end": "1358080"
  },
  {
    "text": "to give you what you need you don't need",
    "start": "1358080",
    "end": "1360120"
  },
  {
    "text": "to remember this this is just flavor of",
    "start": "1360120",
    "end": "1362279"
  },
  {
    "text": "constraints has combinators to let you",
    "start": "1362279",
    "end": "1365159"
  },
  {
    "text": "do type class passing around Plumbing",
    "start": "1365159",
    "end": "1368679"
  },
  {
    "text": "stuff and it's less scary than the stuff",
    "start": "1368679",
    "end": "1371200"
  },
  {
    "text": "that follows do not be scared just",
    "start": "1371200",
    "end": "1372799"
  },
  {
    "text": "follow the intuition uh I promise it'll",
    "start": "1372799",
    "end": "1375200"
  },
  {
    "text": "all be",
    "start": "1375200",
    "end": "1376320"
  },
  {
    "text": "okay uh when we have for alls in play",
    "start": "1376320",
    "end": "1379919"
  },
  {
    "text": "constraints has this for all F thing and",
    "start": "1379919",
    "end": "1383039"
  },
  {
    "text": "then whichever is the combinator from",
    "start": "1383039",
    "end": "1384480"
  },
  {
    "text": "constraints extras to use it uh what",
    "start": "1384480",
    "end": "1388440"
  },
  {
    "text": "happens is when we said give me a show",
    "start": "1388440",
    "end": "1390960"
  },
  {
    "text": "for details key a we got a for all F",
    "start": "1390960",
    "end": "1393760"
  },
  {
    "text": "show details key the for all captures",
    "start": "1393760",
    "end": "1395880"
  },
  {
    "text": "that",
    "start": "1395880",
    "end": "1396640"
  },
  {
    "text": "a and then if we have for all left show",
    "start": "1396640",
    "end": "1399440"
  },
  {
    "text": "details key it means that for each a we",
    "start": "1399440",
    "end": "1402559"
  },
  {
    "text": "definitely are able to access show for",
    "start": "1402559",
    "end": "1404799"
  },
  {
    "text": "details key",
    "start": "1404799",
    "end": "1406960"
  },
  {
    "text": "a so",
    "start": "1406960",
    "end": "1409840"
  },
  {
    "text": "DM provided we have for left show K",
    "start": "1409840",
    "end": "1412840"
  },
  {
    "text": "which we do from our deriving we can use",
    "start": "1412840",
    "end": "1415360"
  },
  {
    "text": "whichever to bust out the type class",
    "start": "1415360",
    "end": "1418520"
  },
  {
    "text": "dictionary for the show for KA to show",
    "start": "1418520",
    "end": "1421679"
  },
  {
    "text": "it and then show it in those brackets",
    "start": "1421679",
    "end": "1423600"
  },
  {
    "text": "there and we're 2/3 of the way",
    "start": "1423600",
    "end": "1426640"
  },
  {
    "text": "down oh and then we've got functors of a",
    "start": "1426640",
    "end": "1429799"
  },
  {
    "text": "where the a depends on the key type so",
    "start": "1429799",
    "end": "1432840"
  },
  {
    "text": "we dig further into constraints",
    "start": "1432840",
    "end": "1435120"
  },
  {
    "text": "extras uh do not look at the thing in",
    "start": "1435120",
    "end": "1437279"
  },
  {
    "text": "the top template hasal your friend",
    "start": "1437279",
    "end": "1440520"
  },
  {
    "text": "derive arct and then something happens",
    "start": "1440520",
    "end": "1443440"
  },
  {
    "text": "look at it later but do not look at it",
    "start": "1443440",
    "end": "1446240"
  },
  {
    "text": "now once you've got derive arct then",
    "start": "1446240",
    "end": "1449480"
  },
  {
    "text": "everything is",
    "start": "1449480",
    "end": "1450840"
  },
  {
    "text": "fine uh we end up with this has",
    "start": "1450840",
    "end": "1453360"
  },
  {
    "text": "constraint uh which looks like this ugly",
    "start": "1453360",
    "end": "1456000"
  },
  {
    "text": "combinator uh just defocus your eyes",
    "start": "1456000",
    "end": "1458559"
  },
  {
    "text": "somewhat uh the intuition is if we've",
    "start": "1458559",
    "end": "1461760"
  },
  {
    "text": "got the constraint has show details key",
    "start": "1461760",
    "end": "1465039"
  },
  {
    "text": "it means for each details key a we have",
    "start": "1465039",
    "end": "1467880"
  },
  {
    "text": "show a AR has captured that for us uh",
    "start": "1467880",
    "end": "1472080"
  },
  {
    "text": "and this will bust it",
    "start": "1472080",
    "end": "1473480"
  },
  {
    "text": "out and then if we want to wrap that in",
    "start": "1473480",
    "end": "1475600"
  },
  {
    "text": "funs has Prime is the same thing but for",
    "start": "1475600",
    "end": "1478480"
  },
  {
    "text": "f of a and so has Prime show details key",
    "start": "1478480",
    "end": "1482200"
  },
  {
    "text": "f means if we have details key a we",
    "start": "1482200",
    "end": "1484600"
  },
  {
    "text": "definitely have show F of",
    "start": "1484600",
    "end": "1486640"
  },
  {
    "text": "a and in this case that just means we",
    "start": "1486640",
    "end": "1491520"
  },
  {
    "text": "need to put in has Prime show",
    "start": "1491520",
    "end": "1494279"
  },
  {
    "text": "KF and we can use has and the key to",
    "start": "1494279",
    "end": "1497120"
  },
  {
    "text": "select the right iction and we can do",
    "start": "1497120",
    "end": "1499640"
  },
  {
    "text": "all of",
    "start": "1499640",
    "end": "1500520"
  },
  {
    "text": "this uh all right I'm going to speed up",
    "start": "1500520",
    "end": "1503320"
  },
  {
    "text": "a little cuz this actually leads",
    "start": "1503320",
    "end": "1505799"
  },
  {
    "start": "1505000",
    "end": "1674000"
  },
  {
    "text": "somewhere uh the the Mad Folks at reflex",
    "start": "1505799",
    "end": "1508960"
  },
  {
    "text": "went further with this in the extensible",
    "start": "1508960",
    "end": "1510720"
  },
  {
    "text": "record story and built something called",
    "start": "1510720",
    "end": "1512279"
  },
  {
    "text": "vessel which is Young and",
    "start": "1512279",
    "end": "1514240"
  },
  {
    "text": "growing uh it's built around this view",
    "start": "1514240",
    "end": "1516840"
  },
  {
    "text": "type class which gives you uh its whole",
    "start": "1516840",
    "end": "1519880"
  },
  {
    "text": "excuse is condensed and dispers this is",
    "start": "1519880",
    "end": "1522200"
  },
  {
    "text": "its reason for uh living uh you send",
    "start": "1522200",
    "end": "1525360"
  },
  {
    "text": "them a web request probably other people",
    "start": "1525360",
    "end": "1527880"
  },
  {
    "text": "send them we requests at the same time",
    "start": "1527880",
    "end": "1529399"
  },
  {
    "text": "so you'll have a map of requests uh",
    "start": "1529399",
    "end": "1531679"
  },
  {
    "text": "condens lets you flip that around so you",
    "start": "1531679",
    "end": "1533880"
  },
  {
    "text": "go from a map of requests to a request",
    "start": "1533880",
    "end": "1535840"
  },
  {
    "text": "where each field is wrapped in a map and",
    "start": "1535840",
    "end": "1538640"
  },
  {
    "text": "then if it's a request for data for",
    "start": "1538640",
    "end": "1540919"
  },
  {
    "text": "every field where the map is not empty",
    "start": "1540919",
    "end": "1542679"
  },
  {
    "text": "you can grab that from your database but",
    "start": "1542679",
    "end": "1544440"
  },
  {
    "text": "for everything else you can leave it",
    "start": "1544440",
    "end": "1545480"
  },
  {
    "text": "alone and once you've done your single",
    "start": "1545480",
    "end": "1547919"
  },
  {
    "text": "aggregated request for data you can use",
    "start": "1547919",
    "end": "1550480"
  },
  {
    "text": "disperse to scatter that information",
    "start": "1550480",
    "end": "1553159"
  },
  {
    "text": "back out to who asked for it uh they",
    "start": "1553159",
    "end": "1555320"
  },
  {
    "text": "love it it gives them some kind of haxel",
    "start": "1555320",
    "end": "1558320"
  },
  {
    "text": "style aggregation of querying uh and",
    "start": "1558320",
    "end": "1560919"
  },
  {
    "text": "it's pretty",
    "start": "1560919",
    "end": "1561880"
  },
  {
    "text": "cool uh it also gives them intersection",
    "start": "1561880",
    "end": "1564840"
  },
  {
    "text": "called crop for historical reasons and",
    "start": "1564840",
    "end": "1567640"
  },
  {
    "text": "our usual Mappy traversy",
    "start": "1567640",
    "end": "1570520"
  },
  {
    "text": "functions they have a holly building",
    "start": "1570520",
    "end": "1572600"
  },
  {
    "text": "blocks that have view instances if you",
    "start": "1572600",
    "end": "1574880"
  },
  {
    "text": "want to put one thing into your",
    "start": "1574880",
    "end": "1576039"
  },
  {
    "text": "extensible record system that's",
    "start": "1576039",
    "end": "1577240"
  },
  {
    "text": "definitely there identity v v for view",
    "start": "1577240",
    "end": "1580840"
  },
  {
    "text": "one thing that might be there single V",
    "start": "1580840",
    "end": "1583799"
  },
  {
    "text": "you can use maps you use dependent maps",
    "start": "1583799",
    "end": "1586880"
  },
  {
    "text": "and then you get my highest kinded type",
    "start": "1586880",
    "end": "1589600"
  },
  {
    "text": "in the expression in the talk uh vessel",
    "start": "1589600",
    "end": "1593000"
  },
  {
    "text": "which has and a g for a funter uh and",
    "start": "1593000",
    "end": "1598520"
  },
  {
    "text": "vessel has a view instance if every key",
    "start": "1598520",
    "end": "1601720"
  },
  {
    "text": "has a view instance so you can stack all",
    "start": "1601720",
    "end": "1603520"
  },
  {
    "text": "of these things together and get all of",
    "start": "1603520",
    "end": "1605559"
  },
  {
    "text": "that nice",
    "start": "1605559",
    "end": "1606600"
  },
  {
    "text": "behavior uh what does that look like for",
    "start": "1606600",
    "end": "1609200"
  },
  {
    "text": "patient details I have definitely have",
    "start": "1609200",
    "end": "1611919"
  },
  {
    "text": "initials I definitely have a date of",
    "start": "1611919",
    "end": "1613559"
  },
  {
    "text": "birth I might have a weight and I have a",
    "start": "1613559",
    "end": "1616200"
  },
  {
    "text": "dmap of existing conditions",
    "start": "1616200",
    "end": "1618840"
  },
  {
    "text": "and now I have condense and disperse and",
    "start": "1618840",
    "end": "1621720"
  },
  {
    "text": "map and Traverse for all those things as",
    "start": "1621720",
    "end": "1624159"
  },
  {
    "text": "long as it's got the missing funter",
    "start": "1624159",
    "end": "1625880"
  },
  {
    "text": "parameter at the end I can put it there",
    "start": "1625880",
    "end": "1627520"
  },
  {
    "text": "which means I can put vessels inside of",
    "start": "1627520",
    "end": "1629480"
  },
  {
    "text": "vessels if I in that way",
    "start": "1629480",
    "end": "1633480"
  },
  {
    "text": "inclined U has becomes has V for their",
    "start": "1633480",
    "end": "1636600"
  },
  {
    "text": "weird type juggling stuff and then we've",
    "start": "1636600",
    "end": "1639240"
  },
  {
    "text": "also got this if I can compare keys and",
    "start": "1639240",
    "end": "1641960"
  },
  {
    "text": "if I can serialize the keys and for",
    "start": "1641960",
    "end": "1644279"
  },
  {
    "text": "everything that has it for all of my key",
    "start": "1644279",
    "end": "1646600"
  },
  {
    "text": "types I can also serialize them then I",
    "start": "1646600",
    "end": "1648760"
  },
  {
    "text": "can serialize vessels so I do a few",
    "start": "1648760",
    "end": "1651559"
  },
  {
    "text": "derings for my bits out of the leaves",
    "start": "1651559",
    "end": "1653679"
  },
  {
    "text": "and then I can stack them all together",
    "start": "1653679",
    "end": "1654919"
  },
  {
    "text": "into an extensible record system and get",
    "start": "1654919",
    "end": "1656840"
  },
  {
    "text": "serialization effectively for",
    "start": "1656840",
    "end": "1659640"
  },
  {
    "text": "free uh and they use this for incredibly",
    "start": "1659640",
    "end": "1662600"
  },
  {
    "text": "cool haxel like things that Aggregate",
    "start": "1662600",
    "end": "1664880"
  },
  {
    "text": "and disaggregate data flows uh I'm using",
    "start": "1664880",
    "end": "1667679"
  },
  {
    "text": "it for form libraries and weird widget",
    "start": "1667679",
    "end": "1669760"
  },
  {
    "text": "things uh you can get pretty far pretty",
    "start": "1669760",
    "end": "1673559"
  },
  {
    "text": "fast with just what's in this tor uh yes",
    "start": "1673559",
    "end": "1676960"
  },
  {
    "text": "and it's still it's an interesting point",
    "start": "1676960",
    "end": "1679039"
  },
  {
    "text": "in the design space I think I'm about to",
    "start": "1679039",
    "end": "1680440"
  },
  {
    "text": "get crash tackled uh kale from reflex uh",
    "start": "1680440",
    "end": "1684600"
  },
  {
    "text": "thinks it's the bees needs for",
    "start": "1684600",
    "end": "1685760"
  },
  {
    "text": "extensible records and I'm very much",
    "start": "1685760",
    "end": "1688000"
  },
  {
    "text": "catching up to that point of",
    "start": "1688000",
    "end": "1689519"
  },
  {
    "text": "view uh you may burn yourself if you go",
    "start": "1689519",
    "end": "1692600"
  },
  {
    "text": "too hard on it but you can always ask me",
    "start": "1692600",
    "end": "1695559"
  },
  {
    "text": "questions uh uh because things are still",
    "start": "1695559",
    "end": "1698640"
  },
  {
    "text": "evolving and emerging cool that's me",
    "start": "1698640",
    "end": "1703720"
  },
  {
    "text": "[Applause]",
    "start": "1704940",
    "end": "1709978"
  }
]