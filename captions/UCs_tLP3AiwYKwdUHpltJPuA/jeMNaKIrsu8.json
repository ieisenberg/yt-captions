[
  {
    "start": "0",
    "end": "128000"
  },
  {
    "text": "[Music] hi everyone thank you for joining",
    "start": "6990",
    "end": "13639"
  },
  {
    "text": "me um I know all of you heard about microservices but who is actually doing",
    "start": "13639",
    "end": "22119"
  },
  {
    "text": "microservices few um so if you're here to listen about",
    "start": "22279",
    "end": "30160"
  },
  {
    "text": "cool new technologies uh and cool new infrastructures about how to do",
    "start": "30160",
    "end": "36160"
  },
  {
    "text": "microservices you're in the wrong room um this talk is basically a very",
    "start": "36160",
    "end": "43680"
  },
  {
    "text": "practical talk about how to move from a monolith to",
    "start": "43680",
    "end": "50399"
  },
  {
    "text": "microservices so the next time you'll be in the conference you can say I'm going I'm doing that too and you will see that",
    "start": "50399",
    "end": "58480"
  },
  {
    "text": "if you're doing it the right way and very carefully and cautiously it's not that hard to",
    "start": "58480",
    "end": "64879"
  },
  {
    "text": "do so my name is airan and I'm head of engineering at Wix uh a little bit about",
    "start": "64880",
    "end": "71000"
  },
  {
    "text": "Wix for those of you who didn't uh hear about uh wix.com and what we're doing",
    "start": "71000",
    "end": "76560"
  },
  {
    "text": "Wix is a website building platform um we basically allow people without any",
    "start": "76560",
    "end": "82600"
  },
  {
    "text": "technical knowledge to build beautiful website with just drag and drops uh we take care of everything from hosting to",
    "start": "82600",
    "end": "90280"
  },
  {
    "text": "designing to whatever they need uh in order to manage uh their",
    "start": "90280",
    "end": "95520"
  },
  {
    "text": "website uh a little bit numbers uh we currently",
    "start": "95520",
    "end": "101200"
  },
  {
    "text": "have over 86 million users those are the website Builders around the world uh we",
    "start": "101200",
    "end": "107600"
  },
  {
    "text": "host over two pedabytes of of data um we running three data centers and the two",
    "start": "107600",
    "end": "114320"
  },
  {
    "text": "major clouds we handle 2 billion HTTP requests per day and currently we are",
    "start": "114320",
    "end": "120399"
  },
  {
    "text": "1200 people that work at Wix but you're not here to hear about this number right you actually",
    "start": "120399",
    "end": "127599"
  },
  {
    "text": "hear about this number so wix's platform currently running about 200 or over 200",
    "start": "127599",
    "end": "135640"
  },
  {
    "text": "make microservices in production and when you hear about",
    "start": "135640",
    "end": "142480"
  },
  {
    "text": "microservices uh you hear a lot of buzzwords you hear about circuit breakers and distributed transaction and",
    "start": "142480",
    "end": "149440"
  },
  {
    "text": "services Discovery and service boundary and all those B wordss that are actually confusing and kind of scary uh to begin",
    "start": "149440",
    "end": "157680"
  },
  {
    "text": "with if you don't really know how to do all those things right so let me take you about the",
    "start": "157680",
    "end": "163080"
  },
  {
    "text": "journey the journey that Wix was doing uh and how we got to run 200",
    "start": "163080",
    "end": "169840"
  },
  {
    "text": "microservices in production so it all started about 6",
    "start": "169840",
    "end": "177200"
  },
  {
    "start": "173000",
    "end": "556000"
  },
  {
    "text": "years ago 6 years ago um Wix was running in a monolith so we",
    "start": "177200",
    "end": "184879"
  },
  {
    "text": "had one server that basically did everything from user registration to editing sites to publishing sites to",
    "start": "184879",
    "end": "191799"
  },
  {
    "text": "viewing to basically everything that you can think of except from",
    "start": "191799",
    "end": "197440"
  },
  {
    "text": "coffee and when you're running in a monolith you're running into problem",
    "start": "197440",
    "end": "202760"
  },
  {
    "text": "eventually when you get to a scale we have dependencies between features if you have bug in in one area of the",
    "start": "202760",
    "end": "209560"
  },
  {
    "text": "system system it would bring down the entire system and that was an",
    "start": "209560",
    "end": "216560"
  },
  {
    "text": "issue and in order to resolve that issue in order to resolve the dependency and allow us as a company to progress faster",
    "start": "216560",
    "end": "223720"
  },
  {
    "text": "we had to figure out okay what are we going to do and it was time to start breaking the",
    "start": "223720",
    "end": "232360"
  },
  {
    "text": "system but it's not that easy to break the system in order to break the system apart you first need to understand",
    "start": "232360",
    "end": "241720"
  },
  {
    "text": "how how is your system is built what does it consist of okay what are your",
    "start": "242079",
    "end": "249400"
  },
  {
    "text": "concerns so when we looked at our system we Tred to split it by concerns and SLA",
    "start": "249400",
    "end": "259440"
  },
  {
    "text": "so when you look at at um at the at Wix we have we we can see two major",
    "start": "259440",
    "end": "265560"
  },
  {
    "text": "activities that are going on okay one activity is editing",
    "start": "265560",
    "end": "270759"
  },
  {
    "text": "websites where you have concerns of um many feature requests so most of",
    "start": "270759",
    "end": "278759"
  },
  {
    "text": "our features most of our development work are done in the editor part where",
    "start": "278759",
    "end": "285160"
  },
  {
    "text": "we adding more features and more capability to those websites and of course in terms of uh",
    "start": "285160",
    "end": "293759"
  },
  {
    "text": "database pattern it is right intensive you always update your site and the other side of the equation is actually",
    "start": "293759",
    "end": "300600"
  },
  {
    "text": "viewing those sites so in viewing sites we have different concerns it has to be",
    "start": "300600",
    "end": "306560"
  },
  {
    "text": "high throughput highly scalable in terms of of database it's really read intensive instead of right",
    "start": "306560",
    "end": "314600"
  },
  {
    "text": "intensive and it really has to perform well so this is how we started so we",
    "start": "314600",
    "end": "322160"
  },
  {
    "text": "have our monolith and since we identify those two",
    "start": "322160",
    "end": "328280"
  },
  {
    "text": "parts at first first what we decided to do is create another",
    "start": "328280",
    "end": "335120"
  },
  {
    "text": "monolith so we took the monolith and Bre broke it into actually two monolith one",
    "start": "335120",
    "end": "342720"
  },
  {
    "text": "was responsible for the editing side and we just extracted everything that we",
    "start": "342720",
    "end": "349039"
  },
  {
    "text": "thought is going to be part of the viewing uh the viewing part of",
    "start": "349039",
    "end": "354880"
  },
  {
    "text": "fix and we did another thing by spling it into two we also put a clear boundary",
    "start": "354880",
    "end": "363600"
  },
  {
    "text": "between those two we wanted no runtime no deployment and no data dependencies",
    "start": "363600",
    "end": "370199"
  },
  {
    "text": "between those two",
    "start": "370199",
    "end": "372919"
  },
  {
    "text": "services this actually allowed us to separate the product life cycle we",
    "start": "375520",
    "end": "382039"
  },
  {
    "text": "decoupled the architecture we had independent deployments and on the editor part keep",
    "start": "382039",
    "end": "391160"
  },
  {
    "text": "things kept changing because those are the most feature request and what this",
    "start": "391160",
    "end": "397280"
  },
  {
    "text": "allowed us is to have the viewer part which is basically our most important uh",
    "start": "397280",
    "end": "402520"
  },
  {
    "text": "part of of our system because we want our websites to be always up and running",
    "start": "402520",
    "end": "407759"
  },
  {
    "text": "to be relative stable another thing that we gained in",
    "start": "407759",
    "end": "415080"
  },
  {
    "text": "uh in just those two bonal it's not a lot of microservices it's two monolith",
    "start": "415080",
    "end": "421199"
  },
  {
    "text": "another thing that that uh we gained is we gained Separation by service",
    "start": "421199",
    "end": "429440"
  },
  {
    "text": "level so now we can scale independently okay we have the viewer",
    "start": "429879",
    "end": "436039"
  },
  {
    "text": "part which gets massive amount of traffic think about those 86 million users that are building their websites",
    "start": "436039",
    "end": "443400"
  },
  {
    "text": "and this is on the editor side and on the public side it's their visitors okay",
    "start": "443400",
    "end": "449120"
  },
  {
    "text": "so it's hundreds and hundreds of millions of visitors to those sites so just by separating into two we can now",
    "start": "449120",
    "end": "456680"
  },
  {
    "text": "scale the public side differently than we do in the editor side we can have a",
    "start": "456680",
    "end": "463400"
  },
  {
    "text": "lot more instances we can now use different data stores we can use mongodb in one we can",
    "start": "463400",
    "end": "471360"
  },
  {
    "text": "use my SQL in the other we can use Cassandra you can use whatever you want to to be the right tool for the job",
    "start": "471360",
    "end": "477919"
  },
  {
    "text": "we're no longer coupled in our data",
    "start": "477919",
    "end": "482360"
  },
  {
    "text": "store it also allowed us to optimize pair uh per use case we can optimize the",
    "start": "483199",
    "end": "491440"
  },
  {
    "text": "data for read on one side and optimize the data for right on on the other side",
    "start": "491440",
    "end": "498560"
  },
  {
    "text": "we can run different data centers we actually run in different data centers so for the editor running two data",
    "start": "498560",
    "end": "504919"
  },
  {
    "text": "centers and the public runs in three data centers two of our own and one in Amazon and",
    "start": "504919",
    "end": "510159"
  },
  {
    "text": "now we're also shifting to Google so we can scale up the system parts of the",
    "start": "510159",
    "end": "516200"
  },
  {
    "text": "system as we need to we also gain system",
    "start": "516200",
    "end": "523360"
  },
  {
    "text": "resiliency if we have a bug and a system goes down let's say most of our features are in the editor if the editor has bug",
    "start": "523360",
    "end": "530519"
  },
  {
    "text": "then God forbid the system is down it's not the whole system just part of the system that is going",
    "start": "530519",
    "end": "538079"
  },
  {
    "text": "down and if only part of the system is going down you have faster recovery time",
    "start": "538079",
    "end": "543680"
  },
  {
    "text": "because you don't have to bring everything up you just bring one part of the",
    "start": "543680",
    "end": "549079"
  },
  {
    "text": "system back up so just by splitting it into two and",
    "start": "549079",
    "end": "555120"
  },
  {
    "text": "two monolith we learn a lot okay",
    "start": "555120",
    "end": "560640"
  },
  {
    "start": "556000",
    "end": "596000"
  },
  {
    "text": "and we'll go over the things that that you learn by just splitting it to two",
    "start": "560640",
    "end": "566360"
  },
  {
    "text": "monolith no micro Services whatsoever those two monolith are micros microservices is basically word",
    "start": "566360",
    "end": "573320"
  },
  {
    "text": "okay just excuse me that I'm saying that it's service oriented architecture done",
    "start": "573320",
    "end": "578920"
  },
  {
    "text": "right and it doesn't matter if it's two monolith or 200 microservices it's",
    "start": "578920",
    "end": "584800"
  },
  {
    "text": "simple fact of decoupling your architecture and and and make it work as",
    "start": "584800",
    "end": "591760"
  },
  {
    "text": "soft as as so actually was intended to work okay so",
    "start": "591760",
    "end": "599560"
  },
  {
    "start": "596000",
    "end": "670000"
  },
  {
    "text": "the first thing that that we did is basically understood our",
    "start": "599560",
    "end": "605360"
  },
  {
    "text": "service boundary we split it into two unrelated areas of the system and and",
    "start": "605360",
    "end": "612360"
  },
  {
    "text": "one of the best thing that you can do in order to to help you uh do this",
    "start": "612360",
    "end": "618959"
  },
  {
    "text": "separation and help you understand the service boundary is to separate the",
    "start": "618959",
    "end": "624399"
  },
  {
    "text": "databases okay no two Services share database",
    "start": "624399",
    "end": "630920"
  },
  {
    "text": "and you can ask okay but I'm editing something and I want to view it on the other side so what do I need to do and",
    "start": "630920",
    "end": "638639"
  },
  {
    "text": "you actually copy the data so during in in our use case when the user click",
    "start": "638639",
    "end": "645720"
  },
  {
    "text": "publish what we do is we take data from the editor and actually copy whatever we",
    "start": "645720",
    "end": "651320"
  },
  {
    "text": "need not everything but whatever we need and optimize it to be",
    "start": "651320",
    "end": "657639"
  },
  {
    "text": "read on the public",
    "start": "657639",
    "end": "661800"
  },
  {
    "text": "side now once you did that you need to consider okay but how do I copy data you",
    "start": "664360",
    "end": "671000"
  },
  {
    "start": "670000",
    "end": "724000"
  },
  {
    "text": "need to think about serialization how do I serialize the",
    "start": "671000",
    "end": "676200"
  },
  {
    "text": "data so now you come to to research okay so what should you use should you use",
    "start": "677000",
    "end": "682880"
  },
  {
    "text": "binary should you use Json XML text is it over HTTP you have all those",
    "start": "682880",
    "end": "688639"
  },
  {
    "text": "considerations and all those decisions that you need to make what's the protocol what are your",
    "start": "688639",
    "end": "696600"
  },
  {
    "text": "tradeoffs okay when you choose one over the other what is more more important to",
    "start": "696600",
    "end": "701880"
  },
  {
    "text": "you is it readability is it performance how do you debug",
    "start": "701880",
    "end": "707880"
  },
  {
    "text": "it what are the tools that you have that you know that you can find okay how do",
    "start": "707880",
    "end": "713040"
  },
  {
    "text": "you monitor it what are the dependencies that you introduce into your build and",
    "start": "713040",
    "end": "718360"
  },
  {
    "text": "into your deployment system because you choose one format over the",
    "start": "718360",
    "end": "724160"
  },
  {
    "start": "724000",
    "end": "817000"
  },
  {
    "text": "other and now that you you're calling services you need to think about API",
    "start": "725040",
    "end": "733040"
  },
  {
    "text": "versioning uh the API sorry the transport protocol how do you expose the API V",
    "start": "733040",
    "end": "740920"
  },
  {
    "text": "rest vrpc via soap God forbid",
    "start": "740920",
    "end": "747839"
  },
  {
    "text": "so we took all those options uh we actually started in a binary",
    "start": "749560",
    "end": "755920"
  },
  {
    "text": "format uh we use our p and uh we found that it was really hard to",
    "start": "755920",
    "end": "762839"
  },
  {
    "text": "debug and for our use cases while binary format is faster it didn't really make",
    "start": "762839",
    "end": "770760"
  },
  {
    "text": "any difference for us for our use case so we decided to to get rid of the",
    "start": "770760",
    "end": "776639"
  },
  {
    "text": "binary format and move to Json to Json RPC over HTTP",
    "start": "776639",
    "end": "783279"
  },
  {
    "text": "which you know Jackson is a very fast parser you can use it you can use tools",
    "start": "783279",
    "end": "788959"
  },
  {
    "text": "it's actually text based you can read it you can debug it you can log it very very",
    "start": "788959",
    "end": "794800"
  },
  {
    "text": "easily and this is for our internal communication from the outside when we expose API to the internet then we use",
    "start": "795519",
    "end": "802320"
  },
  {
    "text": "rest it's easier for for developers to to use rest uh but for internal we",
    "start": "802320",
    "end": "808519"
  },
  {
    "text": "actually have uh uh we're using Json over RPC because",
    "start": "808519",
    "end": "814519"
  },
  {
    "text": "it's typed it's easier to test now the next thing that you have okay so you have an API so how do you do",
    "start": "814519",
    "end": "821079"
  },
  {
    "start": "817000",
    "end": "882000"
  },
  {
    "text": "API versioning you need to think",
    "start": "821079",
    "end": "827240"
  },
  {
    "text": "about API schemas version one version",
    "start": "827240",
    "end": "833279"
  },
  {
    "text": "two and remember we only have two services",
    "start": "833680",
    "end": "838920"
  },
  {
    "text": "so here I want to introduce yagi for those of you who don't know what yagi is it you ain't going to need it not at",
    "start": "840959",
    "end": "848759"
  },
  {
    "text": "first okay what you do use is backward compatibility don't bother yourself with",
    "start": "848759",
    "end": "854320"
  },
  {
    "text": "all those things you keep planning ahead when you have like hundreds of microservices and hundreds of of end",
    "start": "854320",
    "end": "861040"
  },
  {
    "text": "points and and external clients when you start you don't have that okay it's easier to keep backward",
    "start": "861040",
    "end": "868079"
  },
  {
    "text": "compatibility and and all the developers are in-house you don't have two maintenance",
    "start": "868079",
    "end": "875240"
  },
  {
    "text": "you don't have the over the overhead of maintaining of maintaining",
    "start": "875240",
    "end": "881240"
  },
  {
    "start": "882000",
    "end": "978000"
  },
  {
    "text": "versioning same goes to asynchronously",
    "start": "882079",
    "end": "887000"
  },
  {
    "text": "calls now that you have two different Services should you introduce Kafka",
    "start": "889000",
    "end": "896320"
  },
  {
    "text": "should introduce rabbit mq active mq whatever whatever",
    "start": "896320",
    "end": "901320"
  },
  {
    "text": "mq now think about it when you had one monolith did you have those messaging",
    "start": "901920",
    "end": "910160"
  },
  {
    "text": "systems if you do keep using whatever you had but if you didn't don't",
    "start": "910160",
    "end": "916040"
  },
  {
    "text": "introduce anything else okay you ain't going to need it use",
    "start": "916040",
    "end": "921519"
  },
  {
    "text": "thread if you use threads before you can still use",
    "start": "921519",
    "end": "926319"
  },
  {
    "text": "threads every every time that you introduce another middleware to your",
    "start": "927720",
    "end": "934399"
  },
  {
    "text": "system you're introducing devops overhead remember you're running on a",
    "start": "934519",
    "end": "940480"
  },
  {
    "text": "production system and the most important thing on production system is to keep it working okay every time you introduce",
    "start": "940480",
    "end": "947000"
  },
  {
    "text": "another thing into your production system you're introducing devops overhead if you didn't use messaging",
    "start": "947000",
    "end": "954360"
  },
  {
    "text": "before don't use it now because you have just two Services when you will have a",
    "start": "954360",
    "end": "960920"
  },
  {
    "text": "lot and your system evolves and you need it only then introduce new technology",
    "start": "960920",
    "end": "966240"
  },
  {
    "text": "don't introduce new technology just because you heard I don't know me or",
    "start": "966240",
    "end": "971839"
  },
  {
    "text": "Netflix or Google that say Hey we got this cool queueing system or",
    "start": "971839",
    "end": "977639"
  },
  {
    "start": "978000",
    "end": "1031000"
  },
  {
    "text": "whatever what about service",
    "start": "979480",
    "end": "983440"
  },
  {
    "text": "Discovery now we have zooker to choose from console it P CD Eureka all those",
    "start": "985199",
    "end": "990839"
  },
  {
    "text": "things that you need to choose from right because you now have two",
    "start": "990839",
    "end": "996639"
  },
  {
    "text": "services and you need to discover them you ain't going to need",
    "start": "996639",
    "end": "1004160"
  },
  {
    "text": "it load balancers and DNS entries could perfectly find solution you know with",
    "start": "1004160",
    "end": "1010560"
  },
  {
    "text": "weeks we're running 200 microservices and we still don't have that right now when we at the 200 we started thinking",
    "start": "1010560",
    "end": "1016839"
  },
  {
    "text": "about service Discovery because we have 200 but until",
    "start": "1016839",
    "end": "1022880"
  },
  {
    "text": "then DNS is perfectly fine don't it reduce more",
    "start": "1022880",
    "end": "1029520"
  },
  {
    "start": "1031000",
    "end": "1305000"
  },
  {
    "text": "overhead res resilience resilience is very important okay because now you're",
    "start": "1034720",
    "end": "1040520"
  },
  {
    "text": "getting into the world of distributed systems and",
    "start": "1040520",
    "end": "1047199"
  },
  {
    "text": "when when you see this diagram of this is a distributed system",
    "start": "1047199",
    "end": "1054480"
  },
  {
    "text": "okay see this Arrow what does it",
    "start": "1054480",
    "end": "1060240"
  },
  {
    "text": "mean means very important thing it means that you now",
    "start": "1063520",
    "end": "1069400"
  },
  {
    "text": "have a failure Point you're no longer calling a",
    "start": "1069400",
    "end": "1075360"
  },
  {
    "text": "function on your monolith if the server is running the function will get called",
    "start": "1075360",
    "end": "1081000"
  },
  {
    "text": "okay now when you call something else it may fail you're introducing",
    "start": "1081000",
    "end": "1087200"
  },
  {
    "text": "Network so every Network hop that you introduce by definition reduces your",
    "start": "1087200",
    "end": "1094880"
  },
  {
    "text": "availability and there are ways to overcome it but it reduces your availability the function call that you",
    "start": "1094880",
    "end": "1100880"
  },
  {
    "text": "just made may not be executed so how do you overcome it",
    "start": "1100880",
    "end": "1110480"
  },
  {
    "text": "different patterns that you need to understand and know how to how to use correctly okay so",
    "start": "1112240",
    "end": "1119320"
  },
  {
    "text": "you got your retry policy but you only",
    "start": "1119320",
    "end": "1124840"
  },
  {
    "text": "have retries on EP content operations you don't want to charge people",
    "start": "1124840",
    "end": "1131919"
  },
  {
    "text": "twice now we have circuit breakers and throttl still those have to be very",
    "start": "1133600",
    "end": "1139240"
  },
  {
    "text": "fine-tuned you may cause your own downtime if you break the this if you",
    "start": "1139240",
    "end": "1145039"
  },
  {
    "text": "circuit break soon too soon you will cause your own down downtime",
    "start": "1145039",
    "end": "1151200"
  },
  {
    "text": "okay if you circuit break when you only have one server it's up to",
    "start": "1151200",
    "end": "1158480"
  },
  {
    "text": "you right so those are the pattern that that you need to be experience with that",
    "start": "1158480",
    "end": "1163720"
  },
  {
    "text": "you need to understand and you will fail you will fail definitely you will fail we fail",
    "start": "1163720",
    "end": "1169480"
  },
  {
    "text": "until we little by little understood and tweak it and understand how that works",
    "start": "1169480",
    "end": "1175720"
  },
  {
    "text": "for our system but the fact that you have this",
    "start": "1175720",
    "end": "1183120"
  },
  {
    "text": "failure Point can actually be a good thing a good thing for for your customer",
    "start": "1183120",
    "end": "1191400"
  },
  {
    "text": "experience because now if a service fails instead of a complete downtime you",
    "start": "1191400",
    "end": "1196840"
  },
  {
    "text": "can have a degradation of service okay so if the editor is down in our",
    "start": "1196840",
    "end": "1204400"
  },
  {
    "text": "case sites can still be viewed it's not that everything is down",
    "start": "1204400",
    "end": "1210159"
  },
  {
    "text": "or nothing so you can have like we call it",
    "start": "1210159",
    "end": "1215480"
  },
  {
    "text": "killer feature which is a kill switch for features uh so we can bring down",
    "start": "1215480",
    "end": "1221200"
  },
  {
    "text": "gracefully subsystems okay this currently does not work come back later",
    "start": "1221200",
    "end": "1226280"
  },
  {
    "text": "and you will be able to edit your site but but you can still view it okay you can use fallbacks and",
    "start": "1226280",
    "end": "1232799"
  },
  {
    "text": "selfhealing mechanism you can start using uh um eventual",
    "start": "1232799",
    "end": "1238440"
  },
  {
    "text": "consistency for instance um I'll give you an example for a fallback for",
    "start": "1238440",
    "end": "1245000"
  },
  {
    "text": "data so when you publish a site your in wiek your url consists of your username",
    "start": "1245000",
    "end": "1252520"
  },
  {
    "text": "that tx.com whatever your site name and the username is being taken from the",
    "start": "1252520",
    "end": "1258080"
  },
  {
    "text": "user server okay what is the latest username because you can rename now in a case that the the user",
    "start": "1258080",
    "end": "1265679"
  },
  {
    "text": "server is down we have a failure you don't we don't have to fail",
    "start": "1265679",
    "end": "1271960"
  },
  {
    "text": "the transaction we actually have the username already stored in your session",
    "start": "1271960",
    "end": "1277120"
  },
  {
    "text": "cookie so we can have a fallback just take it from there need to think about all the",
    "start": "1277120",
    "end": "1283679"
  },
  {
    "text": "fallbacks if if if you really care about availability you need to think think",
    "start": "1283679",
    "end": "1288760"
  },
  {
    "text": "about those foldbacks that you that you can that you can take if you want to upload stuff to a different service and",
    "start": "1288760",
    "end": "1295640"
  },
  {
    "text": "it doesn't really work right now you can sell fill it",
    "start": "1295640",
    "end": "1300840"
  },
  {
    "start": "1305000",
    "end": "1479000"
  },
  {
    "text": "later testing it's important right it's",
    "start": "1305360",
    "end": "1310679"
  },
  {
    "text": "important to test so so now we're testing a distributed system okay it's not just just unit test so this is the",
    "start": "1310679",
    "end": "1318320"
  },
  {
    "text": "way we do testing I mean everybody can have their own flavor of how they test",
    "start": "1318320",
    "end": "1324400"
  },
  {
    "text": "so the way that we run our test is we first run the unit test on the service",
    "start": "1324400",
    "end": "1330960"
  },
  {
    "text": "itself the next thing that we do is we run we call it an integration test we",
    "start": "1330960",
    "end": "1337480"
  },
  {
    "text": "actually also test the serialization we we put like fake servers or or implicators we don't mock the service we",
    "start": "1337480",
    "end": "1344799"
  },
  {
    "text": "just put fake service so we can actually test the serialization",
    "start": "1344799",
    "end": "1350520"
  },
  {
    "text": "next thing is we do a server end to end when we actually run the whole service and it all its uh uh relationships",
    "start": "1350720",
    "end": "1359480"
  },
  {
    "text": "dependencies the first layer of dependencies and at the end we run the",
    "start": "1359480",
    "end": "1365080"
  },
  {
    "text": "automation test which is from the browser throughout the system and this runs like",
    "start": "1365080",
    "end": "1371960"
  },
  {
    "text": "nightly oh about logging you have a distributed system",
    "start": "1377279",
    "end": "1384440"
  },
  {
    "text": "right you need a distributed",
    "start": "1384440",
    "end": "1388600"
  },
  {
    "text": "logging not",
    "start": "1390480",
    "end": "1393760"
  },
  {
    "text": "really you only have two right two Services if you didn't have like log",
    "start": "1395640",
    "end": "1402640"
  },
  {
    "text": "stash before or whatever distributed logger before you don't have have to use",
    "start": "1402640",
    "end": "1408880"
  },
  {
    "text": "it right now we at Wix we in in any case we don't",
    "start": "1408880",
    "end": "1414240"
  },
  {
    "text": "really like logging uh it's it's really make it hard for developer to actually",
    "start": "1414240",
    "end": "1419720"
  },
  {
    "text": "look at the logs besid show me one developer that can actually write a good",
    "start": "1419720",
    "end": "1424840"
  },
  {
    "text": "log and you can actually find this information and then just copy like a log config from the internet and stick",
    "start": "1424840",
    "end": "1430880"
  },
  {
    "text": "it there I can write now right logging what we prefer is actually",
    "start": "1430880",
    "end": "1436440"
  },
  {
    "text": "expose all the information to our developers so this is part of of our uh",
    "start": "1436440",
    "end": "1442480"
  },
  {
    "text": "microservices framework every microservices exposes all it metrics in",
    "start": "1442480",
    "end": "1448200"
  },
  {
    "text": "a nice web interface um the developers doesn't need to go an SSH to a machine can go to a",
    "start": "1448200",
    "end": "1455400"
  },
  {
    "text": "web interface and see all the metrics can see the recent log entries you can see everything",
    "start": "1455400",
    "end": "1461400"
  },
  {
    "text": "there remember it's just two right it it also works with a 100 only only after we",
    "start": "1461400",
    "end": "1468039"
  },
  {
    "text": "had like 100 microservices only then we started to put like really distributed logging",
    "start": "1468039",
    "end": "1473240"
  },
  {
    "text": "system it scales perfectly",
    "start": "1473240",
    "end": "1477679"
  },
  {
    "start": "1479000",
    "end": "1603000"
  },
  {
    "text": "good now ownership is a key factor if you want to do distributed systems if",
    "start": "1480600",
    "end": "1486480"
  },
  {
    "text": "you want to work with microservices and a lot of them ownership is key here okay you cannot",
    "start": "1486480",
    "end": "1494480"
  },
  {
    "text": "scale your op steams as the number of micros services that you",
    "start": "1494480",
    "end": "1500120"
  },
  {
    "text": "have so micros service is owned by a team it",
    "start": "1500120",
    "end": "1506000"
  },
  {
    "text": "doesn't it's not owned by a person it's not a code that you can put and forget and if a person lives",
    "start": "1506000",
    "end": "1514039"
  },
  {
    "text": "has no owner the team owns the microservices and if you build it then",
    "start": "1514039",
    "end": "1521919"
  },
  {
    "text": "you the one that is running it you're the one that that is monitoring you're the one that's responsible for it",
    "start": "1521919",
    "end": "1529760"
  },
  {
    "text": "if a person leaves the team two things can",
    "start": "1529760",
    "end": "1535440"
  },
  {
    "text": "happen if a person owns a microservice she can take the",
    "start": "1535440",
    "end": "1540840"
  },
  {
    "text": "microservice with her to the new team and maintain it with the new team",
    "start": "1540840",
    "end": "1547960"
  },
  {
    "text": "or the microservice changes ownership inside the team so other people in the",
    "start": "1547960",
    "end": "1553399"
  },
  {
    "text": "team are now owners of the microservice one one good uh things that",
    "start": "1553399",
    "end": "1560520"
  },
  {
    "text": "uh that we do in order to ensure that every microservice has an owner is we do",
    "start": "1560520",
    "end": "1566000"
  },
  {
    "text": "continuous delivery and every microservice has to be deployed to production at least once a",
    "start": "1566000",
    "end": "1572799"
  },
  {
    "text": "month so every month we get an alert if something was not deployed to production",
    "start": "1572799",
    "end": "1578440"
  },
  {
    "text": "with the latest revision of of the Frameworks and everything so you can only be stale one month",
    "start": "1578440",
    "end": "1584840"
  },
  {
    "text": "back okay this ensures that nothing is gets left",
    "start": "1584840",
    "end": "1590960"
  },
  {
    "text": "behind and that brings us to the most interesting questions about microservices that I have yet to find an",
    "start": "1594840",
    "end": "1602240"
  },
  {
    "text": "answer for and I will answer it for",
    "start": "1602240",
    "end": "1607279"
  },
  {
    "start": "1603000",
    "end": "1744000"
  },
  {
    "text": "you what is the right size of a microservice kind of stupid question if",
    "start": "1607279",
    "end": "1613520"
  },
  {
    "text": "you ask me because we now have two monolith so what is the right size does",
    "start": "1613520",
    "end": "1618640"
  },
  {
    "text": "you can call them microservices it doesn't really",
    "start": "1618640",
    "end": "1622679"
  },
  {
    "text": "matter so here comes Conway okay Conway's law says okay the the",
    "start": "1625559",
    "end": "1631720"
  },
  {
    "text": "architecture is determined by the by your organizational structure so if you have a lot of people you will get that",
    "start": "1631720",
    "end": "1638679"
  },
  {
    "text": "working on the same project you will get a monolith so the size of a microservice",
    "start": "1638679",
    "end": "1644600"
  },
  {
    "text": "is the size of the team that is building it this is one reason why we build small",
    "start": "1644600",
    "end": "1652080"
  },
  {
    "text": "teams and we build small teams by building small rooms so our offices are kind of",
    "start": "1652080",
    "end": "1658399"
  },
  {
    "text": "small between four to seven people and that's it if the team needs to grow they need",
    "start": "1658399",
    "end": "1665679"
  },
  {
    "text": "to go to a different room and that's basically a new team and they will create their own",
    "start": "1665679",
    "end": "1671440"
  },
  {
    "text": "microservices so what have we learned so far with just two",
    "start": "1675799",
    "end": "1683640"
  },
  {
    "text": "monolith we learned about service Discovery we learn about how to monitor those okay we got",
    "start": "1684240",
    "end": "1690519"
  },
  {
    "text": "experience we chose the calization the asynchronous the the SLA of the service",
    "start": "1690519",
    "end": "1696760"
  },
  {
    "text": "how do we Define the apis the deployment strategies okay the data data separations how to test it to keep",
    "start": "1696760",
    "end": "1704519"
  },
  {
    "text": "compatibility compatibility is really hard I mean most of the time when you fail you fail is are because someone didn't",
    "start": "1704519",
    "end": "1712480"
  },
  {
    "text": "keep backward compatibility most of the time see so so just by extracting two",
    "start": "1712480",
    "end": "1721000"
  },
  {
    "text": "monolith and treat that as a microservices architecture you learn a",
    "start": "1721000",
    "end": "1726519"
  },
  {
    "text": "lot and you make great progression if you don't do all the overheads of all",
    "start": "1726519",
    "end": "1732600"
  },
  {
    "text": "the things that you don't really need to do not not at first anyway",
    "start": "1732600",
    "end": "1738960"
  },
  {
    "text": "so now that we know all those things we can continue to extract more and more",
    "start": "1741440",
    "end": "1747960"
  },
  {
    "start": "1744000",
    "end": "1854000"
  },
  {
    "text": "microservices and the things that we did is we actually kept the the idea of the",
    "start": "1747960",
    "end": "1754279"
  },
  {
    "text": "Separation by SLA so every microservice that that we",
    "start": "1754279",
    "end": "1760080"
  },
  {
    "text": "built the first question that we ask our developers is which segment it belongs",
    "start": "1760080",
    "end": "1767320"
  },
  {
    "text": "to does it belong to the editor segment or the public segment is it more read",
    "start": "1767320",
    "end": "1772600"
  },
  {
    "text": "intensive or right intensive this is how our system it's a",
    "start": "1772600",
    "end": "1777840"
  },
  {
    "text": "partial view of course you can put like 200 in here so this is how wix's",
    "start": "1777840",
    "end": "1784200"
  },
  {
    "text": "microservices look like okay so some of the microservices are in the editor",
    "start": "1784200",
    "end": "1790120"
  },
  {
    "text": "segment some of the microservices are in the public segment and this helped",
    "start": "1790120",
    "end": "1795159"
  },
  {
    "text": "developers understand and and think about about what are my requirements for from",
    "start": "1795159",
    "end": "1802760"
  },
  {
    "text": "this service okay is it mostly right what is",
    "start": "1802760",
    "end": "1808000"
  },
  {
    "text": "the scalability and availability concerns that I have do I want to run it in two data centers or at least two data",
    "start": "1808000",
    "end": "1815480"
  },
  {
    "text": "centers okay what is my up time is it 99.9 or",
    "start": "1815480",
    "end": "1822080"
  },
  {
    "text": "99.99 so it's it really defines your",
    "start": "1822279",
    "end": "1828600"
  },
  {
    "text": "requirements from that service and and one thing that if you think okay I",
    "start": "1828600",
    "end": "1835519"
  },
  {
    "text": "actually need both of them this is a really good indication maybe you should split it into two",
    "start": "1835519",
    "end": "1842480"
  },
  {
    "text": "microservices and not just build one monolith or a bigger",
    "start": "1842480",
    "end": "1849880"
  },
  {
    "start": "1854000",
    "end": "1945000"
  },
  {
    "text": "microservice so when is the time to extract the new microservices",
    "start": "1854000",
    "end": "1859559"
  },
  {
    "text": "so let's think let's think about that uh you need to add a new functionality okay so you can do",
    "start": "1859559",
    "end": "1866960"
  },
  {
    "text": "it as a micros service or a library let's take an example let's say",
    "start": "1866960",
    "end": "1873679"
  },
  {
    "text": "I need a time zone we'll call it a service for now",
    "start": "1873679",
    "end": "1879880"
  },
  {
    "text": "that takes the IP of the request goes to Max mine database figures out what the",
    "start": "1879880",
    "end": "1886000"
  },
  {
    "text": "time zone and propagate that information to the service that it needed so we can",
    "start": "1886000",
    "end": "1892360"
  },
  {
    "text": "go either way we can build a library or we can build a micros service that will",
    "start": "1892360",
    "end": "1898720"
  },
  {
    "text": "give us this information and there's a series of",
    "start": "1898720",
    "end": "1903799"
  },
  {
    "text": "questions that we need to ask ourselves by introducing this",
    "start": "1903799",
    "end": "1911240"
  },
  {
    "text": "thing do I create a deployment dependency if I change it",
    "start": "1911240",
    "end": "1919639"
  },
  {
    "text": "do I have a devops overhead it needs database who maintains this database who",
    "start": "1919639",
    "end": "1925360"
  },
  {
    "text": "owns this code does it fit the scalability",
    "start": "1925360",
    "end": "1930679"
  },
  {
    "text": "concerns that I have for this service can a different team develop it",
    "start": "1930679",
    "end": "1936919"
  },
  {
    "text": "you need to ask yourself all those questions and a simple rule of thumb is is",
    "start": "1936919",
    "end": "1946120"
  },
  {
    "start": "1945000",
    "end": "2000000"
  },
  {
    "text": "microservice has op library is mostly",
    "start": "1946120",
    "end": "1952240"
  },
  {
    "text": "computational okay so in in in this case where we want a um a Time Zone from an",
    "start": "1952240",
    "end": "1958799"
  },
  {
    "text": "IP it needs to go to a database if the database is usually local and I don't",
    "start": "1958799",
    "end": "1965240"
  },
  {
    "text": "want to sty this to install this database on every other service that I have so in this case it will be a",
    "start": "1965240",
    "end": "1972600"
  },
  {
    "text": "microservice I don't want to create this dependency I don't want to create this devops overhead that now every",
    "start": "1972600",
    "end": "1979000"
  },
  {
    "text": "microservice owner that will need this Library will have to maintain an added",
    "start": "1979000",
    "end": "1984919"
  },
  {
    "text": "database so it's it's a microservice that that the team is responsible for",
    "start": "1984919",
    "end": "1990799"
  },
  {
    "text": "and maintaining it and everybody else just consume it as a",
    "start": "1990799",
    "end": "1996799"
  },
  {
    "start": "2000000",
    "end": "2056000"
  },
  {
    "text": "service now when we talking about micro Services",
    "start": "2001919",
    "end": "2008519"
  },
  {
    "text": "one of the things that you can do is you got the freedom to",
    "start": "2008519",
    "end": "2014679"
  },
  {
    "text": "choose many",
    "start": "2014679",
    "end": "2018000"
  },
  {
    "text": "stocks so you can have different messaging cues you can have different",
    "start": "2020159",
    "end": "2027320"
  },
  {
    "text": "databases one can use Cassandra one can use my SQL one can use couch base one",
    "start": "2027320",
    "end": "2033799"
  },
  {
    "text": "can use  any microservice owner can use",
    "start": "2033799",
    "end": "2039240"
  },
  {
    "text": "whatever they need or whatever they want which is",
    "start": "2039240",
    "end": "2045039"
  },
  {
    "text": "worse for their own microservices while this is",
    "start": "2045039",
    "end": "2052240"
  },
  {
    "text": "true I hard highly not recommend doing it okay you should limit your stock okay",
    "start": "2052240",
    "end": "2060358"
  },
  {
    "start": "2056000",
    "end": "2107000"
  },
  {
    "text": "default did the stack that you know and the reason for that is again it's",
    "start": "2060359",
    "end": "2066440"
  },
  {
    "text": "devops if every team will have their own middleware only that team will know how",
    "start": "2066440",
    "end": "2073398"
  },
  {
    "text": "to manage it and how to operate that in production if most of the teams share",
    "start": "2073399",
    "end": "2079520"
  },
  {
    "text": "the same standards or the same middleware they can share knowledge they",
    "start": "2079520",
    "end": "2085599"
  },
  {
    "text": "can they can come to a solution to a resolution on a production crisis and",
    "start": "2085599",
    "end": "2092000"
  },
  {
    "text": "downtime very very fast because they can share their knowledge if someone is doing something that nobody else",
    "start": "2092000",
    "end": "2099000"
  },
  {
    "text": "knows it's a very small team that can actually manage the",
    "start": "2099000",
    "end": "2106078"
  },
  {
    "start": "2107000",
    "end": "2156000"
  },
  {
    "text": "crisis but it doesn't prevent you from from innovate from Innovation okay you",
    "start": "2107920",
    "end": "2113760"
  },
  {
    "text": "can innovate on a noncritical microservices if you have something new that you build and and it's it's a new",
    "start": "2113760",
    "end": "2120160"
  },
  {
    "text": "microservice and you think that hey my current stack is is not the right tool",
    "start": "2120160",
    "end": "2125359"
  },
  {
    "text": "for the job it's perfectly fine to innovate start a new micros service try",
    "start": "2125359",
    "end": "2131520"
  },
  {
    "text": "it out see how it works the rest of the system is stable if that",
    "start": "2131520",
    "end": "2137480"
  },
  {
    "text": "works wait until one or two other teams will start using your your new",
    "start": "2137480",
    "end": "2144320"
  },
  {
    "text": "technology your new stack and then make it a standard that everybody can actually use it share the knowledge",
    "start": "2144320",
    "end": "2150200"
  },
  {
    "text": "spread the knowledge don't keep it contained within within one team",
    "start": "2150200",
    "end": "2156599"
  },
  {
    "start": "2156000",
    "end": "2270000"
  },
  {
    "text": "what about programming language you can write microservices in any language right in Scala in PHP node",
    "start": "2158720",
    "end": "2167680"
  },
  {
    "text": "whatever but should you",
    "start": "2167680",
    "end": "2174440"
  },
  {
    "text": "again you probably want to limit your stack here too okay",
    "start": "2174440",
    "end": "2182680"
  },
  {
    "text": "because if you write in multiple languages then you have to then you",
    "start": "2182680",
    "end": "2187760"
  },
  {
    "text": "cannot do a code reuse you have cross cutting concerns that have to be addressed by any microservices security",
    "start": "2187760",
    "end": "2195119"
  },
  {
    "text": "session validations auditing logging testing the same the same infrastructure",
    "start": "2195119",
    "end": "2200960"
  },
  {
    "text": "that it takes to run and operate production system has to be reimplemented",
    "start": "2200960",
    "end": "2207640"
  },
  {
    "text": "throughout all the stocks if you want to change your encryption algorithm now you",
    "start": "2207640",
    "end": "2212800"
  },
  {
    "text": "have to wait until every microservice that is written in a different language",
    "start": "2212800",
    "end": "2218839"
  },
  {
    "text": "will'll have to implement it before you can roll it out which make things really really really take a long",
    "start": "2218839",
    "end": "2226119"
  },
  {
    "text": "time and we want to progress fast so try to limit your stack to the bare",
    "start": "2226119",
    "end": "2232839"
  },
  {
    "text": "minimum if it's the not really not the right tool for the job you have no",
    "start": "2232839",
    "end": "2238040"
  },
  {
    "text": "choice but to implement it but really be careful with it don't don't go overboard",
    "start": "2238040",
    "end": "2243079"
  },
  {
    "text": "and having every microservices being written in a different language",
    "start": "2243079",
    "end": "2248359"
  },
  {
    "text": "so remember keep it simple devops is really really",
    "start": "2248359",
    "end": "2253680"
  },
  {
    "text": "important and when you grow and you have a lot of microservices it becomes a",
    "start": "2253680",
    "end": "2258720"
  },
  {
    "text": "bigger and bigger and bigger overhead you will spend more time in in managing",
    "start": "2258720",
    "end": "2264319"
  },
  {
    "text": "production the more microservices that you",
    "start": "2264319",
    "end": "2268960"
  },
  {
    "start": "2270000",
    "end": "2472000"
  },
  {
    "text": "have so let's recap what did we learn",
    "start": "2270119",
    "end": "2277519"
  },
  {
    "text": "now we continue to learn about distributed transactions and system",
    "start": "2277920",
    "end": "2285880"
  },
  {
    "text": "monitoring and distributed traces how do you trace one call that goes through",
    "start": "2285880",
    "end": "2292160"
  },
  {
    "text": "five microservices how do you know how that goes what microservice what server",
    "start": "2292160",
    "end": "2297560"
  },
  {
    "text": "answer the call you need to know this thing and understand",
    "start": "2297560",
    "end": "2302880"
  },
  {
    "text": "it the tradeoffs of new microservices extending a mic an existing micros",
    "start": "2302880",
    "end": "2309319"
  },
  {
    "text": "service or or creating a new one for adding new functionalities what is your deployment",
    "start": "2309319",
    "end": "2316000"
  },
  {
    "text": "strategy now you have a feature that is dependent on on two or three",
    "start": "2316000",
    "end": "2321560"
  },
  {
    "text": "microservices to be implemented you will have to learn all this as you",
    "start": "2321560",
    "end": "2327880"
  },
  {
    "text": "go how do you handle cascading failures when one server starts answering slowly",
    "start": "2328640",
    "end": "2334960"
  },
  {
    "text": "you don't want it to bring down on the whole chain of microservices that are",
    "start": "2334960",
    "end": "2340720"
  },
  {
    "text": "calling it you'll need to know and learn how to how to manage those",
    "start": "2340720",
    "end": "2347160"
  },
  {
    "text": "things it's easier to now build new teams and split new teams okay because now each team can have a small subset of",
    "start": "2347560",
    "end": "2357000"
  },
  {
    "text": "responsibilities",
    "start": "2358359",
    "end": "2361359"
  },
  {
    "text": "but the big question is why okay why would you ever want to",
    "start": "2364280",
    "end": "2371880"
  },
  {
    "text": "do this to yourself why do you want to go to microservices it's not because you're",
    "start": "2371880",
    "end": "2377960"
  },
  {
    "text": "here and I'm speaking about it and Netflix speaking about it and Google speaking about it that's not the reason",
    "start": "2377960",
    "end": "2383480"
  },
  {
    "text": "to go to microservices okay microservices comes to solve a problem",
    "start": "2383480",
    "end": "2389000"
  },
  {
    "text": "okay if you don't have any problems stick with whatever you have the first problem that it solves is",
    "start": "2389000",
    "end": "2397599"
  },
  {
    "text": "engineering scale okay if you have a lot of Engineers that are working in a monolith",
    "start": "2397599",
    "end": "2404240"
  },
  {
    "text": "people will step on each other's those if you want to go fast it's better to have them split into small teams that",
    "start": "2404240",
    "end": "2410880"
  },
  {
    "text": "each have their own responsibility it's development velocity",
    "start": "2410880",
    "end": "2417760"
  },
  {
    "text": "if you have small teams they can progress much faster then they have to share the same code base and deploy and",
    "start": "2417760",
    "end": "2425079"
  },
  {
    "text": "wait for one another hey I'm finished with this feature but yeah but we need to to deploy together so we need to wait",
    "start": "2425079",
    "end": "2431640"
  },
  {
    "text": "until this team and QA if you split it into small",
    "start": "2431640",
    "end": "2437240"
  },
  {
    "text": "chunks your development velocity will be much higher and the third reason is scaling",
    "start": "2437240",
    "end": "2446480"
  },
  {
    "text": "okay now when you're going to microservices you can now scale different",
    "start": "2446480",
    "end": "2451800"
  },
  {
    "text": "parts to different scalability slas",
    "start": "2451800",
    "end": "2457599"
  },
  {
    "text": "if you don't have any of those issues stick with whatever you have",
    "start": "2459520",
    "end": "2465839"
  },
  {
    "text": "don't go into",
    "start": "2465839",
    "end": "2468440"
  },
  {
    "text": "microservices now micros servic is the first post devops architecture the culture is really",
    "start": "2471720",
    "end": "2479040"
  },
  {
    "start": "2472000",
    "end": "2608000"
  },
  {
    "text": "really important okay if you don't have a devops culture don't even attempt to",
    "start": "2479040",
    "end": "2484680"
  },
  {
    "text": "go there it's a huge important in",
    "start": "2484680",
    "end": "2491319"
  },
  {
    "text": "ownership and and the right set of mind to maintain this kind of distributed",
    "start": "2491319",
    "end": "2500160"
  },
  {
    "text": "system and remember every micro service is eventually a devops",
    "start": "2500400",
    "end": "2506280"
  },
  {
    "text": "overhead when you add something you need someone to maintain it it's not a throwaway code it's a live production",
    "start": "2506280",
    "end": "2513599"
  },
  {
    "text": "subsystem that is playing alone with everybody",
    "start": "2513599",
    "end": "2519680"
  },
  {
    "text": "else so it's all about tradeoffs and",
    "start": "2519680",
    "end": "2525359"
  },
  {
    "text": "remember really think if you need if you're adding something think really carefully if you need it if you don't",
    "start": "2525359",
    "end": "2531680"
  },
  {
    "text": "need it don't use it don't use it because you heard about it somewhere if you have a problem solve it with",
    "start": "2531680",
    "end": "2538880"
  },
  {
    "text": "technology okay don't just introduce new technology to your to your stock just because it's",
    "start": "2538880",
    "end": "2545000"
  },
  {
    "text": "cool or you think that you're going to it down the road wait until you actually have a",
    "start": "2545000",
    "end": "2553000"
  },
  {
    "text": "problem so this is a basically a small set of guidelines that we put to our",
    "start": "2553000",
    "end": "2558880"
  },
  {
    "text": "developers in how to to create and what of the tradeoffs between uh when",
    "start": "2558880",
    "end": "2565839"
  },
  {
    "text": "creating uh new microservice the most important thing that every microservice has its own",
    "start": "2565839",
    "end": "2573800"
  },
  {
    "text": "database okay no two microservices are allowed to write to the same database it",
    "start": "2573800",
    "end": "2578880"
  },
  {
    "text": "creates coupling if you have a performance consideration it's okay to have a readon",
    "start": "2578880",
    "end": "2585640"
  },
  {
    "text": "microservices that share database but then the trade-off is coupling if you",
    "start": "2585640",
    "end": "2590839"
  },
  {
    "text": "need to change something in the schema now you have to take care of two microservices or three in order to",
    "start": "2590839",
    "end": "2597559"
  },
  {
    "text": "manage your deployment right",
    "start": "2597559",
    "end": "2603000"
  },
  {
    "text": "okay and remember if you have a problem in monolith microservices will not solve",
    "start": "2604119",
    "end": "2610680"
  },
  {
    "start": "2608000",
    "end": "2623000"
  },
  {
    "text": "your problem you just split it into many other",
    "start": "2610680",
    "end": "2616559"
  },
  {
    "text": "problems and I think I'm done thank",
    "start": "2619960",
    "end": "2627000"
  },
  {
    "start": "2623000",
    "end": "2938000"
  },
  {
    "text": "you the slides are there if you want to download it so we have time for questions excellent yeah uh thank you",
    "start": "2632440",
    "end": "2638240"
  },
  {
    "text": "very much um first again a quick reminder uh please before you leave the room make sure to vote through the",
    "start": "2638240",
    "end": "2644640"
  },
  {
    "text": "application we did receive some questions uh first one um even if you only have like two Services uh but you",
    "start": "2644640",
    "end": "2650960"
  },
  {
    "text": "don't have service Discovery uh how would you handle a fail over to a second instance in case one fails uh that logic",
    "start": "2650960",
    "end": "2659440"
  },
  {
    "text": "uh you need to put in your load balancer so when you running in a cluster if a",
    "start": "2659440",
    "end": "2664760"
  },
  {
    "text": "service fail a load balancer actually know that's part of the logic of a load balancer it knows which instances failed",
    "start": "2664760",
    "end": "2671119"
  },
  {
    "text": "so that logic is in the load balancer so you really don't need to to worry about it it's being taken care",
    "start": "2671119",
    "end": "2678119"
  },
  {
    "text": "of another interesting question um when you break down your system into multiple",
    "start": "2678119",
    "end": "2683200"
  },
  {
    "text": "Services uh do they all have their own UI or is the UI itself a monolith talking to other services how is that",
    "start": "2683200",
    "end": "2689160"
  },
  {
    "text": "set up uh well it depends what we like to do is to",
    "start": "2689160",
    "end": "2696800"
  },
  {
    "text": "have every subsystem have have its own UI so it's a it's a the UI that talks to",
    "start": "2696800",
    "end": "2704040"
  },
  {
    "text": "its own uh set of microservices it really depends on on",
    "start": "2704040",
    "end": "2709839"
  },
  {
    "text": "your business business use case but we like to split the UI",
    "start": "2709839",
    "end": "2714960"
  },
  {
    "text": "also uh let's see yeah we have a a number of questions I think some of them have been answered in their presentation",
    "start": "2714960",
    "end": "2721240"
  },
  {
    "text": "uh but overall speaking um what was your biggest challenge when implementing microservices and looking back on now",
    "start": "2721240",
    "end": "2728079"
  },
  {
    "text": "being on 150 microservices what would you have done differently knowing what you know",
    "start": "2728079",
    "end": "2733280"
  },
  {
    "text": "now um this presentation is based on the",
    "start": "2733280",
    "end": "2739240"
  },
  {
    "text": "lesson learned I mean when we started we actually thought of doing like client",
    "start": "2739240",
    "end": "2744319"
  },
  {
    "text": "side load balancing and started implementing it and and doing uh uh",
    "start": "2744319",
    "end": "2749480"
  },
  {
    "text": "circuit breakers which we ended up not using because we didn't know how to use it",
    "start": "2749480",
    "end": "2755079"
  },
  {
    "text": "so we we thought that we're going to need a lot of the things but we actually",
    "start": "2755079",
    "end": "2761079"
  },
  {
    "text": "figured out that we just wasted a lot of time building those things that we didn't use and even when we got to use",
    "start": "2761079",
    "end": "2769079"
  },
  {
    "text": "them we thought okay we started using those tools like after a while after we",
    "start": "2769079",
    "end": "2775520"
  },
  {
    "text": "had like 50 or 100 microservices and the things that we thought that we're going to that they're going to solve for us",
    "start": "2775520",
    "end": "2782680"
  },
  {
    "text": "when we started it wasn't the same problem so it well actually didn't use",
    "start": "2782680",
    "end": "2788160"
  },
  {
    "text": "the right solution to the problem that we actually encounter after doing it in",
    "start": "2788160",
    "end": "2793680"
  },
  {
    "text": "in real life okay um a question in more General nature um how do you deal with security",
    "start": "2793680",
    "end": "2800760"
  },
  {
    "text": "do you have things like single sign on set up um yes so we have uh we actually",
    "start": "2800760",
    "end": "2806920"
  },
  {
    "text": "have two mechanisms one is for our own internal signon and and we have the a",
    "start": "2806920",
    "end": "2814520"
  },
  {
    "text": "which does a single signon we basically pass tokens between Services uh they're",
    "start": "2814520",
    "end": "2819880"
  },
  {
    "text": "all signed so they can verify that the signature is is",
    "start": "2819880",
    "end": "2825680"
  },
  {
    "text": "correct um another question how do you ensure database replication between Services if they don't actually share a",
    "start": "2825680",
    "end": "2831920"
  },
  {
    "text": "single database um so each database is independent so we have one database for",
    "start": "2831920",
    "end": "2839480"
  },
  {
    "text": "microservice it's been replicated you have another database it's being replicated we can",
    "start": "2839480",
    "end": "2844839"
  },
  {
    "text": "share database machines you just don't share the same schemas between microservices so we it's usually we have",
    "start": "2844839",
    "end": "2853240"
  },
  {
    "text": "one database with many schemas each microservice has its own schema so we",
    "start": "2853240",
    "end": "2858559"
  },
  {
    "text": "don't introduce any coupling between the data and and the code but we replicate",
    "start": "2858559",
    "end": "2865359"
  },
  {
    "text": "databases uh per schema yeah okay and finally um about versioning uh if the",
    "start": "2865359",
    "end": "2872040"
  },
  {
    "text": "number of consumers for a particular service is increasing um can you still get away with just doing backwards",
    "start": "2872040",
    "end": "2878000"
  },
  {
    "text": "compatibility or do you have a form of versioning in place uh no we don't have a form of versioning in place not internally anyway uh externally yes",
    "start": "2878000",
    "end": "2885240"
  },
  {
    "text": "because it's harder to make people move you're not in control but inside our",
    "start": "2885240",
    "end": "2890559"
  },
  {
    "text": "organization we still do backward compatibility if if we need to do a breaking change then we just introduce a",
    "start": "2890559",
    "end": "2897119"
  },
  {
    "text": "new API and we tell everybody okay now you need to move to this new API and you",
    "start": "2897119",
    "end": "2902480"
  },
  {
    "text": "have one to three months to do it and after that we just kill it and whoever",
    "start": "2902480",
    "end": "2907800"
  },
  {
    "text": "is not moved then he going to break of course we gave them rest period",
    "start": "2907800",
    "end": "2913920"
  },
  {
    "text": "it's not that we're going to break them but we break them for like five minutes okay now you have one week to implement",
    "start": "2913920",
    "end": "2919880"
  },
  {
    "text": "it and then we're really going to break youly um any questions from uh from the",
    "start": "2919880",
    "end": "2925480"
  },
  {
    "text": "room that people would like to ask now okay then I think we're done um so thank you very much and uh please give",
    "start": "2925480",
    "end": "2932240"
  },
  {
    "text": "him another round of applause",
    "start": "2932240",
    "end": "2935839"
  }
]