[
  {
    "start": "0",
    "end": "145000"
  },
  {
    "text": "cool uh obligatory yes mic works all right cool so hello everyone welcome to my talk on driving organizational",
    "start": "3399",
    "end": "9719"
  },
  {
    "text": "sustainability with platform engineering so just a little bit about me before I continue on so uh I was already",
    "start": "9719",
    "end": "16118"
  },
  {
    "text": "introduced but my name is Leslie I'm currently a staff engineer at the New York Times and we specifically I'm focused on our election Readiness uh",
    "start": "16119",
    "end": "23279"
  },
  {
    "text": "efforts for the general election 2024 um as well as well as observability and as",
    "start": "23279",
    "end": "29599"
  },
  {
    "text": "someone who is an engineering leader across all of the times I spend my time thinking about the function of platform",
    "start": "29599",
    "end": "35239"
  },
  {
    "text": "engineering and how it can facilitate success across all of the times and ultimately what that ends up",
    "start": "35239",
    "end": "41120"
  },
  {
    "text": "looking like is coming from the perspective of enabling our department to work in a way that ensures long-term",
    "start": "41120",
    "end": "46320"
  },
  {
    "text": "organizational success while uh enabling short-term growth opportunities and so",
    "start": "46320",
    "end": "51800"
  },
  {
    "text": "I'll start off by talking about what do we even mean when I say organizational sustainability and more specifically I",
    "start": "51800",
    "end": "58559"
  },
  {
    "text": "Define sustainability as The Continuous practice of operating in a way that enables short-term growth opportunities",
    "start": "58559",
    "end": "64878"
  },
  {
    "text": "while ensuring long-term success so there's a lot to unpack there so let's let's move forward now first",
    "start": "64879",
    "end": "71320"
  },
  {
    "text": "sustainability is a continuous practice so even if we spend a lot of upfront time thinking about how to ensure",
    "start": "71320",
    "end": "77240"
  },
  {
    "text": "long-term sustainability right circumstances change often quickly especially the seant tech and so we need",
    "start": "77240",
    "end": "83720"
  },
  {
    "text": "continuous Avenues of ensuring long-term success secondly enabling short-term",
    "start": "83720",
    "end": "88920"
  },
  {
    "text": "growth opportunities sometimes those risky growth opportunities are what lead to our long-term success right the emergence of",
    "start": "88920",
    "end": "95000"
  },
  {
    "text": "bundles of tools has become a really successful um opportunity for some companies including the times right I'm",
    "start": "95000",
    "end": "101079"
  },
  {
    "text": "sure at least some of us like wle or New York Times cooking um or wire cutter Etc",
    "start": "101079",
    "end": "106479"
  },
  {
    "text": "right so do we right and it was a revolutionary decision for us and so we don't want to give those up right but",
    "start": "106479",
    "end": "112240"
  },
  {
    "text": "putting on my reliability management hat we also want to prepare for the risk of those opportunities which leads us to",
    "start": "112240",
    "end": "118159"
  },
  {
    "text": "the component of enabling long-term success so we frequently see companies",
    "start": "118159",
    "end": "123920"
  },
  {
    "text": "take for granted um their Core Business right in the name of growth but for every successful growth opportunity most",
    "start": "123920",
    "end": "129599"
  },
  {
    "text": "opportunities do fail right we don't like to admit that but it's true and so preparation for this type of risk is",
    "start": "129599",
    "end": "134760"
  },
  {
    "text": "going to be essential and so now that I've defined the goal which is organizational sustainability let's",
    "start": "134760",
    "end": "139959"
  },
  {
    "text": "define the strategy platform engineering so as much as I hate",
    "start": "139959",
    "end": "145160"
  },
  {
    "start": "145000",
    "end": "259000"
  },
  {
    "text": "repeating words on a slide I'm going to do it if only for emphasis so using my definition",
    "start": "145160",
    "end": "150280"
  },
  {
    "text": "of platform engineering platform engineering drives organization of sustainability by practicing socio",
    "start": "150280",
    "end": "155480"
  },
  {
    "text": "technical principles that provide a Community Driven support system for application developers using our shared",
    "start": "155480",
    "end": "161360"
  },
  {
    "text": "platform architecture and so these three components form the basis of what it means to provide a",
    "start": "161360",
    "end": "167560"
  },
  {
    "text": "platform and so one them throughout this talk will be about how platform engineering can enable us to scale our",
    "start": "167560",
    "end": "172879"
  },
  {
    "text": "applications to enable uh the growth that our businesses often demand and as part of that we'll need to ask us when",
    "start": "172879",
    "end": "178760"
  },
  {
    "text": "is the right moment to in produce this idea or framework of platform engineering and so we frequently talk",
    "start": "178760",
    "end": "184640"
  },
  {
    "text": "about scaling software right but what does it actually mean to scale an organization and the answer is that",
    "start": "184640",
    "end": "189959"
  },
  {
    "text": "ultimately our ability to scale our organiz or scale our organization is directly tied to our ability to to scale",
    "start": "189959",
    "end": "196159"
  },
  {
    "text": "our applications and when we think about scaling our software right we have to be intentional about addressing the",
    "start": "196159",
    "end": "202599"
  },
  {
    "text": "inevitable complexity that comes with that growth and so to address this complexity we have to bring this",
    "start": "202599",
    "end": "208799"
  },
  {
    "text": "intention into how our architecture can enable those needs and so this is because complexity",
    "start": "208799",
    "end": "214640"
  },
  {
    "text": "makes so things so much harder right it makes things so much harder that we as a collective industry have evolved the ways that we build applications so for",
    "start": "214640",
    "end": "221360"
  },
  {
    "text": "example right the modular monolith has become an increasingly popular architecture style especially as an",
    "start": "221360",
    "end": "226879"
  },
  {
    "text": "intermediate step towards scaling our applications with distributed architecture patterns and so just like",
    "start": "226879",
    "end": "232480"
  },
  {
    "text": "we've evolved the way that we build applications to embrace new architectural patterns um like",
    "start": "232480",
    "end": "237760"
  },
  {
    "text": "microservice architectures we must evolve the delivery strategies that we use to build these new architectural",
    "start": "237760",
    "end": "243920"
  },
  {
    "text": "patterns and so if architectural patterns are a solution to the technical complexity of scaling our applications",
    "start": "243920",
    "end": "249840"
  },
  {
    "text": "platform engineering is a soot technical solution to the organizational complexity of scaling our",
    "start": "249840",
    "end": "255320"
  },
  {
    "text": "applications and so to summarize this concisely right platform engineering is a soci technical solution to the",
    "start": "255320",
    "end": "261840"
  },
  {
    "start": "259000",
    "end": "283000"
  },
  {
    "text": "organizational complexity of scaling our",
    "start": "261840",
    "end": "265880"
  },
  {
    "text": "applications so we'll spend the rest of this talk decomposing each of these components",
    "start": "268600",
    "end": "274600"
  },
  {
    "text": "even further the principles that guide us the Community Driven support that enables application developers and the",
    "start": "274600",
    "end": "280320"
  },
  {
    "text": "architecture that we use along the way and so first we have the principles that guide the rest of our platform and",
    "start": "280320",
    "end": "286680"
  },
  {
    "start": "283000",
    "end": "559000"
  },
  {
    "text": "so having focused on reliability man management the principles that we review will be heavily influenced by devops",
    "start": "286680",
    "end": "292800"
  },
  {
    "text": "particularly because devops principles takes a strong consideration for both the technical and social components of",
    "start": "292800",
    "end": "298039"
  },
  {
    "text": "what it means to build and operate software and so let's head into those",
    "start": "298039",
    "end": "303560"
  },
  {
    "text": "principles and so some of us might have heard of the comms framework uh which is basically a framework of principles that",
    "start": "303560",
    "end": "308800"
  },
  {
    "text": "should be at the core of devops organizations and so now while all three could be applicable here we're just",
    "start": "308800",
    "end": "314000"
  },
  {
    "text": "going to focus on three but specifically culture Automation and measurement so starting off with culture",
    "start": "314000",
    "end": "321160"
  },
  {
    "text": "the comm's framework tells us that devop strides of culture of continuous Improvement and and reduces silos by",
    "start": "321160",
    "end": "327039"
  },
  {
    "text": "intentionally sharing knowledge and feedback and the same is true here for platform engineering though I'll talk about this",
    "start": "327039",
    "end": "333000"
  },
  {
    "text": "a little bit more directly by putting it in the context of community and so in Devo right we often",
    "start": "333000",
    "end": "338039"
  },
  {
    "text": "talk about breaking down silos and the way we do that is ultimately by sharing knowledge and to share knowledge means",
    "start": "338039",
    "end": "343120"
  },
  {
    "text": "to connect right connection and communication are key for preventing the silos that hinder our ability to make",
    "start": "343120",
    "end": "349400"
  },
  {
    "text": "continuous progress and when we're talking about organizations especially as they grow right the most effective",
    "start": "349400",
    "end": "355000"
  },
  {
    "text": "way to Manifest this type of culture is to think about how we can do it at scale because ultimately right the opposite of",
    "start": "355000",
    "end": "361199"
  },
  {
    "text": "isolation is to be in community with other people and the reason that that's so important is because more than",
    "start": "361199",
    "end": "366520"
  },
  {
    "text": "anything else learning is the most sustainable advantage and so this quote is by Andrew Clay schaer who is often",
    "start": "366520",
    "end": "372680"
  },
  {
    "text": "known for being the co-founder of puppet and he recently said this in his talk on socio Technical Systems at devop days",
    "start": "372680",
    "end": "379120"
  },
  {
    "text": "Amsterdam and the way I interpret this to mean is that because our industry is always changing right that's why we're",
    "start": "379120",
    "end": "384280"
  },
  {
    "text": "at conferences like this being able to keep up with this change is the biggest advantage that we can give ourselves",
    "start": "384280",
    "end": "389960"
  },
  {
    "text": "but to do that right learning needs to be part of our organization's DNA and now while I agree with him I'd like to",
    "start": "389960",
    "end": "395440"
  },
  {
    "text": "modify this a little bit um to emphasize that communal learning is the most important sustainable Advantage because",
    "start": "395440",
    "end": "402599"
  },
  {
    "text": "while our individual growth is important right if this knowledge isn't being shared intentionally we risk introducing",
    "start": "402599",
    "end": "408520"
  },
  {
    "text": "singular points of knowledge and so like our Technical Systems right humans are not supposed to be 100% reliable and we",
    "start": "408520",
    "end": "415720"
  },
  {
    "text": "shouldn't be putting anyone in the position to be those singular points of knowledge and so ultimately right this",
    "start": "415720",
    "end": "421680"
  },
  {
    "text": "is how the silos are created and this is ultimately how organiz how silos become an organizational pattern that hinders",
    "start": "421680",
    "end": "427440"
  },
  {
    "text": "our sustainability and so in other words right communal learning is what provides the knowledge redundancy needed to",
    "start": "427440",
    "end": "434000"
  },
  {
    "text": "sustain both ourselves and the business next we have automation which",
    "start": "434000",
    "end": "439560"
  },
  {
    "text": "improves our software delivery process by reducing human error improving our efficiency and enabling faster",
    "start": "439560",
    "end": "445800"
  },
  {
    "text": "delivery and so this means thinking critically about the type of work that doesn't actually require business specific knowledge and figuring out",
    "start": "445800",
    "end": "452360"
  },
  {
    "text": "whether that can be Consolidated into software that's managed primarily by platform",
    "start": "452360",
    "end": "457759"
  },
  {
    "text": "engineers and the type of software that doesn't that doesn't require uh business",
    "start": "457759",
    "end": "463479"
  },
  {
    "text": "specific knowledge and is work that we can do to reduce the cognitive load that product Engineers often have to indulge",
    "start": "463479",
    "end": "469280"
  },
  {
    "text": "in by managing all aspects of their software and so that type of work right is often one that is repeatable or",
    "start": "469280",
    "end": "475479"
  },
  {
    "text": "manual which is what Sr might refer to as Toil and what product engineers might refer to as boilerplate uh",
    "start": "475479",
    "end": "481840"
  },
  {
    "text": "software another aspect of platform engineering is how we should be explicit about improving efficiency by leaning",
    "start": "481840",
    "end": "487080"
  },
  {
    "text": "into Solutions built by Third parties whether that's through vendor Solutions or open source ones and the reason for",
    "start": "487080",
    "end": "492599"
  },
  {
    "text": "this is because we need to reduce our own cognitive load and maintenance burden just as much as we do need as much as we need to for product",
    "start": "492599",
    "end": "500560"
  },
  {
    "text": "engineers and lastly we have measurement and so first let's talk about the function of measurement right which is Ultimate to have feedback loops um for",
    "start": "500560",
    "end": "507599"
  },
  {
    "text": "whether our work is actually having an intended impact and these feedback loops consist of both quantitative and",
    "start": "507599",
    "end": "513159"
  },
  {
    "text": "qualitative feedback loops for continuous Improvement and the way that this principle connects to sustainability is",
    "start": "513159",
    "end": "519279"
  },
  {
    "text": "by again eliminating the work spent work spent on uh work that doesn't ultimately lead to those business goals and so for",
    "start": "519279",
    "end": "526200"
  },
  {
    "text": "example right if a tool that we spent a lot of time on um doesn't actually serve our product engineering users which",
    "start": "526200",
    "end": "531480"
  },
  {
    "text": "leads to lack of adoption right now that time that we spent building those tools has gone a waste and though that time",
    "start": "531480",
    "end": "537800"
  },
  {
    "text": "could have gone towards actually serving our our product engineering or our product uh end users and so we end up",
    "start": "537800",
    "end": "543720"
  },
  {
    "text": "missing the ultimate goal right of building of building applications that age well with evolving product needs and",
    "start": "543720",
    "end": "550279"
  },
  {
    "text": "so in other words right these feedback loops keep us uh on the right path towards making sure that we're enabling",
    "start": "550279",
    "end": "556000"
  },
  {
    "text": "uh continuous Improvement and so now that we've defined our principles let's shift over",
    "start": "556000",
    "end": "562360"
  },
  {
    "start": "559000",
    "end": "815000"
  },
  {
    "text": "to talking about the support strategies for application developers integrating with our platform and so we'll speak to",
    "start": "562360",
    "end": "568240"
  },
  {
    "text": "both scalable and flexible strategies and put it in the context with how we measure success consolidate efforts and",
    "start": "568240",
    "end": "574800"
  },
  {
    "text": "and cultivate a culture that values sustainability and so the first is the most scalable strategy of all which is",
    "start": "574800",
    "end": "580640"
  },
  {
    "text": "to make building sustainable software easy and so we'll Deep dive into this more when we get to the next section",
    "start": "580640",
    "end": "587000"
  },
  {
    "text": "about um platform architectures but just to set the stage for that right let's remember that sustainable organizations",
    "start": "587000",
    "end": "593079"
  },
  {
    "text": "are tied directly to their abil ability to build sustainable software and so I'm sure we've all",
    "start": "593079",
    "end": "598760"
  },
  {
    "text": "worked with software that clearly wasn't built with much foresight right um this is usually what we refer to as Tech de",
    "start": "598760",
    "end": "604880"
  },
  {
    "text": "and this is going to be inevitable right Tech de is inevitable but we can mitigate its Risk by being intentional",
    "start": "604880",
    "end": "609920"
  },
  {
    "text": "about and strategic about when we choose to in inject Tech de and so ultimately",
    "start": "609920",
    "end": "615480"
  },
  {
    "text": "right Tech should have a function uh usually for the purpose of growth opportunities and tools that are easy to",
    "start": "615480",
    "end": "621120"
  },
  {
    "text": "that aren't easy to integrate aren't the type of technical debt that typically pays off in the long term and so it's",
    "start": "621120",
    "end": "627079"
  },
  {
    "text": "especially our duty as platform engineering as platform Engineers to build easy to use tools to minimize the",
    "start": "627079",
    "end": "632680"
  },
  {
    "text": "time spent needing to support application",
    "start": "632680",
    "end": "636920"
  },
  {
    "text": "developers now um that's not to say we shouldn't be willing to support uh developers right in fact the opposite is",
    "start": "637959",
    "end": "644200"
  },
  {
    "text": "true uh just because platform engineering is supposed to make B uh boundaries domain boundaries clear and",
    "start": "644200",
    "end": "649600"
  },
  {
    "text": "decouple product development from uh the supportive tools that's often needed doesn't mean that we get to stop uh",
    "start": "649600",
    "end": "655680"
  },
  {
    "text": "talking to each other and working together and so I know as Engineers we have to have an aversion to social",
    "start": "655680",
    "end": "660760"
  },
  {
    "text": "interaction right but people are supposed to interact with one another and I think the pursuit to make",
    "start": "660760",
    "end": "666079"
  },
  {
    "text": "everything self-service is often more harmful than it is helpful what we really need to do is",
    "start": "666079",
    "end": "671800"
  },
  {
    "text": "again be intentional about the right time to support and how we can leverage a culture of communal learning and support so that platform Engineers are",
    "start": "671800",
    "end": "678800"
  },
  {
    "text": "not the singular points of failure or knowledge that I mentioned earlier and so not only does this",
    "start": "678800",
    "end": "683920"
  },
  {
    "text": "alleviate some tension on us but it enables us to be community-driven in the way that we support product engineers",
    "start": "683920",
    "end": "690639"
  },
  {
    "text": "and so we talked about measurement as a principle earlier and an important measurement is the effectiveness of our",
    "start": "690639",
    "end": "695839"
  },
  {
    "text": "Effectiveness is the adoption of our platform and so what intention looks like here is ultimately defining the ways that we approach support and",
    "start": "695839",
    "end": "702480"
  },
  {
    "text": "clearly communicating it to platform Engineers so that we can avoid mismatched expectations um that will",
    "start": "702480",
    "end": "707760"
  },
  {
    "text": "ultimately degrade our trust between uh both teams and so in the interest of time I'll only provide one example of",
    "start": "707760",
    "end": "713200"
  },
  {
    "text": "this uh which is to provide an easy decision framework driven by the status of your tool and so we don't have time to review",
    "start": "713200",
    "end": "720720"
  },
  {
    "text": "but feel free to take a picture if you'd like while I drink some",
    "start": "720720",
    "end": "724839"
  },
  {
    "text": "water all right so a common Pitfall for platform Engineers is to take on too",
    "start": "731000",
    "end": "736199"
  },
  {
    "text": "much platform integration work and so like the last slide showed uh there is room for that in the early experimental",
    "start": "736199",
    "end": "742079"
  },
  {
    "text": "mode but that's not scalable um and therefore it's not sustainable and nor are we even often the right people to even be doing that type of integration",
    "start": "742079",
    "end": "748480"
  },
  {
    "text": "work and so like an example here that's relatable is testing right platform Engineers can certainly create um",
    "start": "748480",
    "end": "754600"
  },
  {
    "text": "testing Frameworks or recommend to the ones to use right but we can't be the one that are writing actual unit tests",
    "start": "754600",
    "end": "759920"
  },
  {
    "text": "for a service that requires domain knowledge and luckily for doing our jobs right the time that we save from product",
    "start": "759920",
    "end": "766120"
  },
  {
    "text": "Engineers can just be reallocated to writing those robust unit tests and lastly driving a sustainable",
    "start": "766120",
    "end": "772160"
  },
  {
    "text": "culture so sustainability doesn't just apply to software it applies to people and the two are very closely tied and so",
    "start": "772160",
    "end": "779519"
  },
  {
    "text": "referencing accelerate which is a common book uh in the devop space it talks about self- sustainability and the",
    "start": "779519",
    "end": "785959"
  },
  {
    "text": "different types of burnout that to look out for whether that's physical or emotional Etc and because platform engineering",
    "start": "785959",
    "end": "793000"
  },
  {
    "text": "work naturally touches all um or many if not all parts of our organization right",
    "start": "793000",
    "end": "798079"
  },
  {
    "text": "we have a unique opportunity to show what it looks like to operate in a way that achieves Excellence without sacrificing people along the way and so",
    "start": "798079",
    "end": "805320"
  },
  {
    "text": "our work is naturally collaborative and can impact so many parts of our organization and so for me what I try to",
    "start": "805320",
    "end": "810360"
  },
  {
    "text": "do is drive this culture of intentionality with everything I do and lastly we have our platform",
    "start": "810360",
    "end": "816240"
  },
  {
    "start": "815000",
    "end": "1626000"
  },
  {
    "text": "architecture which is the architecture that platform Engineers are building to support uh application development and",
    "start": "816240",
    "end": "822519"
  },
  {
    "text": "again the function of this architecture ties directly to the first support strategy um that I talked about which is",
    "start": "822519",
    "end": "827560"
  },
  {
    "text": "to make building sustainable software Easy by reasonably con consolidating",
    "start": "827560",
    "end": "832639"
  },
  {
    "text": "efforts and cognitive load and so we've already talked uh through our highlevel principles but we'll review a few",
    "start": "832639",
    "end": "839720"
  },
  {
    "text": "architectural principles or practices and so first uh the first is to embrace design driven architecture as",
    "start": "839720",
    "end": "846560"
  },
  {
    "text": "a core set of principles or practices um intentionally intentionality should be an important attribute of the way that",
    "start": "846560",
    "end": "852839"
  },
  {
    "text": "we build technology and collaborate with one another right and this intention should manifest in the way that we",
    "start": "852839",
    "end": "857959"
  },
  {
    "text": "design platform systems whether that's to use abstraction or modularity um to make sure that we're separating",
    "start": "857959",
    "end": "863639"
  },
  {
    "text": "different functional concerns and so this principle can be Rec down even further um but that for now because",
    "start": "863639",
    "end": "869800"
  },
  {
    "text": "we're going to talk about some design tensions uh in a few and secondly our architecture should be complimentary to",
    "start": "869800",
    "end": "875639"
  },
  {
    "text": "those of our users right now that doesn't mean we shouldn't try to anticipate developer needs there's a",
    "start": "875639",
    "end": "881000"
  },
  {
    "text": "there's a lot of value in thinking about how our platform where our platform might be heading right but to the last",
    "start": "881000",
    "end": "886279"
  },
  {
    "text": "principle on intentional design right we need to build uh we need to design with the fature in mind not necessarily build",
    "start": "886279",
    "end": "892120"
  },
  {
    "text": "for it immediately right much in the same way that we might design our monolithic applications to um be",
    "start": "892120",
    "end": "898240"
  },
  {
    "text": "composable um so that it enables us to decompose it in the future and so when we prioritize our",
    "start": "898240",
    "end": "905160"
  },
  {
    "text": "work we should be driven by the needs the actual needs of application developers in our organization um whose",
    "start": "905160",
    "end": "910560"
  },
  {
    "text": "architecture should be reflective of our pay and",
    "start": "910560",
    "end": "914680"
  },
  {
    "text": "users so that might be that might mean uh that we prioritize uh different uh",
    "start": "915600",
    "end": "920720"
  },
  {
    "text": "domains more specific ones right whether that's cicd or observability or runtime language support that's why I'm focused",
    "start": "920720",
    "end": "926079"
  },
  {
    "text": "on observability these days but honestly I don't expect that to always be the case um and so moving",
    "start": "926079",
    "end": "932440"
  },
  {
    "text": "on oops sorry about that uh and within those uh domains or problems that we're going to try to solve right we also need",
    "start": "932440",
    "end": "938600"
  },
  {
    "text": "to build in a way that's responsive to evolving arure and developer needs and so for example right if we want to",
    "start": "938600",
    "end": "944079"
  },
  {
    "text": "improve the runtime uh experience of our developers uh we should be prioritizing the languages that are actually used by",
    "start": "944079",
    "end": "950000"
  },
  {
    "text": "them not just the ones that we want to support and ultimately right we're not",
    "start": "950000",
    "end": "955120"
  },
  {
    "text": "here to tell other developers what to do we're here to support them in what they need need to do and another reason that",
    "start": "955120",
    "end": "961279"
  },
  {
    "text": "this is important is because our platform architecture can easily lead to what I would call platform",
    "start": "961279",
    "end": "966680"
  },
  {
    "text": "chaos so I really hate this slide because it's honestly it triggers my fight ORF flight response um but you",
    "start": "966680",
    "end": "972680"
  },
  {
    "text": "know like ultimately right this is not what we want right like no one likes this right we don't want to live in a world where there's 10 tools for",
    "start": "972680",
    "end": "979199"
  },
  {
    "text": "everything that you can do right and so this is something that we need to avoid right unnecessary drift is",
    "start": "979199",
    "end": "986000"
  },
  {
    "text": "painful and so an overwhelming number tools especially custom ones right is not our goal it is not the goal of",
    "start": "986000",
    "end": "991639"
  },
  {
    "text": "platform engineering and so tools should really just be enablers of our goal to build successful engineering organizations and",
    "start": "991639",
    "end": "998000"
  },
  {
    "text": "businesses and so instead right what we need to really be doing is be managers of chaos and so the way that we do that",
    "start": "998000",
    "end": "1004600"
  },
  {
    "text": "is by linning the components of our developer platform with specific do domain use cases and so this enables us to design",
    "start": "1004600",
    "end": "1011839"
  },
  {
    "text": "our platforms so that we can see the similar benefits of concrete separations of concerns that we often see in end",
    "start": "1011839",
    "end": "1017639"
  },
  {
    "text": "user uh facing architectures and so this is where I'll take a moment to talk about a common",
    "start": "1017639",
    "end": "1023319"
  },
  {
    "text": "Pitfall in in platform engineering um which is that platform engineering is not equal to infrastructure platforms",
    "start": "1023319",
    "end": "1030199"
  },
  {
    "text": "and so I'm going to repeat that again because this is something that really bothers me about platform engineering actually right platform engineering is",
    "start": "1030199",
    "end": "1036160"
  },
  {
    "text": "not equal to infrastructure platforms and I think this is a big part of why we see a lot of naive conversations uh in",
    "start": "1036160",
    "end": "1043000"
  },
  {
    "text": "devops about it being dead in L of platform engineering and this is because a lot of us are operating under the assumption that the only shared platform",
    "start": "1043000",
    "end": "1050039"
  },
  {
    "text": "that companies need are ones related to or limited to infrastructure but for example right we should also be thinking",
    "start": "1050039",
    "end": "1057120"
  },
  {
    "text": "about how platforms can Aid the service or feature development during the actual development or implementation phase and",
    "start": "1057120",
    "end": "1063720"
  },
  {
    "text": "so that might mean having uh language runtime supports that language runtime",
    "start": "1063720",
    "end": "1069000"
  },
  {
    "text": "platforms that support the development of standardized node.js services for example and each of these can be",
    "start": "1069000",
    "end": "1075360"
  },
  {
    "text": "decomposed even further right though again tyed to pattern number two this decomposition should only happen if",
    "start": "1075360",
    "end": "1080720"
  },
  {
    "text": "there's a genuine need for it and so for example right if our organization decides to introduce a new standard",
    "start": "1080720",
    "end": "1085880"
  },
  {
    "text": "language uh then that's a good moment to actually decompose your PL your runtime",
    "start": "1085880",
    "end": "1091440"
  },
  {
    "text": "platform and so in the infrastructure context you might see that further broken up uh into domains like Cloud",
    "start": "1091440",
    "end": "1096760"
  },
  {
    "text": "infrastructure cicd observability and so to complicate this even further though um there are even",
    "start": "1096760",
    "end": "1103240"
  },
  {
    "text": "product platforms right which might refer to as specific end user product domains or platform um we might you",
    "start": "1103240",
    "end": "1110240"
  },
  {
    "text": "might see this as like named core services at some companies it is what it is naming is",
    "start": "1110240",
    "end": "1115679"
  },
  {
    "text": "hard and so lastly choosing boring technology and so this ties this ties",
    "start": "1115679",
    "end": "1120919"
  },
  {
    "text": "back to when I spoke about not building tools from scratch and uh we can also prevent that",
    "start": "1120919",
    "end": "1126440"
  },
  {
    "text": "by making sure that we're not leaning into every Cutting Edge opportunity right um so some years back um someone",
    "start": "1126440",
    "end": "1132640"
  },
  {
    "text": "named uh Dan McKinley wrote this uh Tech this blog post that went Tech viral",
    "start": "1132640",
    "end": "1137880"
  },
  {
    "text": "called choose boring technology and he talked about this idea of innovation tokens and how we need to be intentional",
    "start": "1137880",
    "end": "1143919"
  },
  {
    "text": "about where we spend Innovation tokens right so Engineers we love to play with new toys right but every proof of",
    "start": "1143919",
    "end": "1149919"
  },
  {
    "text": "concept shouldn't be making it to production right and I acknowledge again this is tempting right because cncf for",
    "start": "1149919",
    "end": "1155559"
  },
  {
    "text": "example is releasing tons of new standards and tools and I totally understand why you want to understand them right but experimental Discovery",
    "start": "1155559",
    "end": "1162760"
  },
  {
    "text": "and experimentation doesn't have to mean that we have to release it to production",
    "start": "1162760",
    "end": "1170240"
  },
  {
    "text": "right and one of the most seen as boring Technologies uh is documentation right",
    "start": "1170559",
    "end": "1176880"
  },
  {
    "text": "um this might be a hot take but uh too many internal developer platforms can really just be replaced by best",
    "start": "1176880",
    "end": "1182600"
  },
  {
    "text": "practices and standards documentation and like of course that's not as exciting right but it's still work that",
    "start": "1182600",
    "end": "1187760"
  },
  {
    "text": "enables us to learn and mature how we build technology at our companies and even if months later or years later even",
    "start": "1187760",
    "end": "1194400"
  },
  {
    "text": "um we decide that we do end up needing to build a new toy a new that was 4 S a",
    "start": "1194400",
    "end": "1199760"
  },
  {
    "text": "new a new tool right it's still often not work that's wasted right because it actually ends up being a pretty good",
    "start": "1199760",
    "end": "1205320"
  },
  {
    "text": "start for uh defining uh requirements and design and so I mentioned this early",
    "start": "1205320",
    "end": "1211640"
  },
  {
    "text": "earlier about uh some design tensions related to architecture best practices and so next we'll review those tensions",
    "start": "1211640",
    "end": "1218520"
  },
  {
    "text": "uh including a framework for how to address the four primary tensions and so first we have what I think is the hardest tension to balance",
    "start": "1218520",
    "end": "1224960"
  },
  {
    "text": "standardization versus flexibility",
    "start": "1224960",
    "end": "1230159"
  },
  {
    "text": "so the shared nature of a developer platform is an awesome opportunity to reduce the risk of drift right but we",
    "start": "1232840",
    "end": "1238799"
  },
  {
    "text": "have to hold that intention with the flexibility that developers might need especially as our organization grows and",
    "start": "1238799",
    "end": "1244640"
  },
  {
    "text": "our different uh technical needs grow with it so for example right my now right now my organization is facing the",
    "start": "1244640",
    "end": "1251000"
  },
  {
    "text": "consequences of building tens of services with an opinionated framework that has not aged well since um and so",
    "start": "1251000",
    "end": "1257440"
  },
  {
    "text": "not only do we have to revisit how we approach runtime support we also have to reconcile the tech debt that came from",
    "start": "1257440",
    "end": "1263440"
  },
  {
    "text": "all those from those decisions years ago and that said reflecting on where we went wrong but what we're doing now is",
    "start": "1263440",
    "end": "1269159"
  },
  {
    "text": "to engage with our users more and so I started off this talk right by saying the opposite of isolation is community",
    "start": "1269159",
    "end": "1275480"
  },
  {
    "text": "and so now we're driving it from the approach of driving standards with actual teams and our communities of",
    "start": "1275480",
    "end": "1281679"
  },
  {
    "text": "practice so next we have the tension of Simplicity and complexity so as we respond to the uh needs of our users",
    "start": "1281679",
    "end": "1288600"
  },
  {
    "text": "complexity is going to become harder to manage right um and that's because the architecture that supports them is often",
    "start": "1288600",
    "end": "1293799"
  },
  {
    "text": "subject to change right whether that's to begin using event-driven communication or client rendered front",
    "start": "1293799",
    "end": "1299159"
  },
  {
    "text": "ends and so this becomes another area where we need to be intentional about like Tech that right complexity is going",
    "start": "1299159",
    "end": "1305159"
  },
  {
    "text": "to be inevitable but we can compart compartmentalize it somewhat by making sure that our developer facing",
    "start": "1305159",
    "end": "1310440"
  },
  {
    "text": "interfaces are simple which leads us to the most common source of complexity which is",
    "start": "1310440",
    "end": "1316440"
  },
  {
    "text": "Integrations and so we know know the common design principle right of reducing coupling between services and",
    "start": "1316440",
    "end": "1321799"
  },
  {
    "text": "the same applies for our work um Integrations are high work are high risk because avoiding coupling is incredibly",
    "start": "1321799",
    "end": "1327960"
  },
  {
    "text": "difficult right and that's why it's a huge selling point for our vendors because they take care of those",
    "start": "1327960",
    "end": "1333159"
  },
  {
    "text": "Integrations and now we don't have to think about it right that's what we're really paying for And So speaking of vendors uh remember the automation",
    "start": "1333159",
    "end": "1339600"
  },
  {
    "text": "principle from earlier and so even though I just spent some time talking through some design decisions um for",
    "start": "1339600",
    "end": "1345080"
  },
  {
    "text": "building platforms uh I'm here to also say like give yourself permission to not build at all right the decision to build",
    "start": "1345080",
    "end": "1351960"
  },
  {
    "text": "versus buy versus reuse should be our bread and butter and deciding that we don't want to take on the burden of",
    "start": "1351960",
    "end": "1357600"
  },
  {
    "text": "building a new building and maintaining a new tool is a valid one because as one of my brilliant mentors once said right",
    "start": "1357600",
    "end": "1363400"
  },
  {
    "text": "every line of code is that we write is of liability and so code isn't the bread and butter of platform engineering right",
    "start": "1363400",
    "end": "1370279"
  },
  {
    "text": "research design and intentional uh and Technical decisions are and so engineering is a craft right and we",
    "start": "1370279",
    "end": "1376840"
  },
  {
    "text": "should always be treating it as as one and so holding all these tensions in mind let's talk through uh what I call",
    "start": "1376840",
    "end": "1383400"
  },
  {
    "text": "the platform recipe and so this is a reusable uh framework with four pillars and these",
    "start": "1383400",
    "end": "1390080"
  },
  {
    "text": "allow us to enable compartmentalize or communicate the trade-offs of the tensions that we just talked about and",
    "start": "1390080",
    "end": "1396240"
  },
  {
    "text": "so together they ultimately make up our developer platform and so we'll briefly review each of these and then provide",
    "start": "1396240",
    "end": "1402320"
  },
  {
    "text": "some actual examples I saw someone want to take a picture go for it I'll drink",
    "start": "1402320",
    "end": "1410440"
  },
  {
    "text": "water oh sorry I went to the sorry about that all",
    "start": "1414200",
    "end": "1420039"
  },
  {
    "text": "right I know what I did I'm using the wrong button I'm sorry cool all right um so first we have",
    "start": "1420080",
    "end": "1427600"
  },
  {
    "text": "the parts of our architecture that provide standardization um so two examples of what we how we might see this manifest is through a template or",
    "start": "1427600",
    "end": "1434159"
  },
  {
    "text": "opinionated Frameworks and so secondly we have uh parts of our architecture that provide more flexibility and so for",
    "start": "1434159",
    "end": "1441000"
  },
  {
    "text": "example we might design our framework to be more modular so that developers can pick and choose uh based off of their",
    "start": "1441000",
    "end": "1448039"
  },
  {
    "text": "context thirdly we have the parts of our architecture that compartmentalizes complexity through integration since the",
    "start": "1448039",
    "end": "1454919"
  },
  {
    "text": "first pillars reflect the simple interfaces that I mentioned earlier and so this might be apis that tie the first",
    "start": "1454919",
    "end": "1460840"
  },
  {
    "text": "two pillars together or plugins uh plugin interfaces that developers use to",
    "start": "1460840",
    "end": "1466080"
  },
  {
    "text": "ultimately usually for us to provide visibility into the platform that we're actually providing them and these tools um that are often",
    "start": "1466080",
    "end": "1474520"
  },
  {
    "text": "are often not used directly by uh by product developers in their development are instead usually tools that we use uh",
    "start": "1474520",
    "end": "1481960"
  },
  {
    "text": "to enable them in an automated way so for example right the tools that provide that pull our Technologies together uh",
    "start": "1481960",
    "end": "1488480"
  },
  {
    "text": "to support on demand environments right product Engineers are certainly going to be using those right but the specific",
    "start": "1488480",
    "end": "1494120"
  },
  {
    "text": "implementation details of what that looks like should be abstracted away from them",
    "start": "1494120",
    "end": "1499159"
  },
  {
    "text": "lastly we have the parts of our architecture that communicate our design and decisions along the way whether that's API docs or decision records uh",
    "start": "1499159",
    "end": "1506679"
  },
  {
    "text": "for when we decide to build byy or reuse and so it might feel it might feel a little strange to have this be part of",
    "start": "1506679",
    "end": "1512000"
  },
  {
    "text": "your architecture but as I've emphasized throughout my talk right like touch points and communication between platform engineers and product Engineers",
    "start": "1512000",
    "end": "1518480"
  },
  {
    "text": "is going to be essential for our success and so documentation is obvious obvious is a first obvious one with",
    "start": "1518480",
    "end": "1524760"
  },
  {
    "text": "support channels as a complimentary and so there's also a potential need for automating certain aspects of how we",
    "start": "1524760",
    "end": "1530720"
  },
  {
    "text": "support platform or product Engineers especially as we're scaling um up the number of Engineers that we're",
    "start": "1530720",
    "end": "1536080"
  },
  {
    "text": "supporting so for example right if you're primarily using Comm uh slack as your communication tool um Integrations",
    "start": "1536080",
    "end": "1542600"
  },
  {
    "text": "that consolidate the questions together uh can enable us to have more robust feedback loops um for our actual",
    "start": "1542600",
    "end": "1548080"
  },
  {
    "text": "software and being able to drive adoption successfully and so in the Integrations pillar I mentioned plugins as a exam as",
    "start": "1548080",
    "end": "1555960"
  },
  {
    "text": "an example to provide visibility of which tools we're providing and so that's an essential question to answer",
    "start": "1555960",
    "end": "1561840"
  },
  {
    "text": "because visibility is going to be needed to drive adoption and so let's answer that question of how do we provide",
    "start": "1561840",
    "end": "1567039"
  },
  {
    "text": "visibility into our architecture so especially with the emergence of Backstage uh which is an",
    "start": "1567039",
    "end": "1572279"
  },
  {
    "text": "open source project uh created by Spotify developer portals have become a way to centralize um to provide",
    "start": "1572279",
    "end": "1579080"
  },
  {
    "text": "centralized visibility into the developer platform ecosystem and so the concept of a developer platform portal",
    "start": "1579080",
    "end": "1585760"
  },
  {
    "text": "is a compelling run right it tells a of what it means to develop software your company and so by providing a unified",
    "start": "1585760",
    "end": "1591840"
  },
  {
    "text": "view not only does our platform become visible but it also facilitates Vis visibility into other services that are",
    "start": "1591840",
    "end": "1597200"
  },
  {
    "text": "using the portal and so Integrations are a crucial part of developer portals but because",
    "start": "1597200",
    "end": "1603720"
  },
  {
    "text": "it's a centralized entry point right we do need to consider the risk of a singular point of failure and so this is",
    "start": "1603720",
    "end": "1609080"
  },
  {
    "text": "why Embraces the idea of plugins uh which are designed to be easily added or removed uh from the host application",
    "start": "1609080",
    "end": "1614760"
  },
  {
    "text": "without total coupling and so in other words right just as we on our principles uh we see the Ben similar benefits that",
    "start": "1614760",
    "end": "1620640"
  },
  {
    "text": "we see uh with microservices by having concrete separations of concerns so now that we've covered some",
    "start": "1620640",
    "end": "1627679"
  },
  {
    "start": "1626000",
    "end": "2526000"
  },
  {
    "text": "of the fundamentals we'll move on to more concrete examples um that I've worked on in the",
    "start": "1627679",
    "end": "1633840"
  },
  {
    "text": "past so in the spirit of showing that PO from engineering is not just about infrastructure we'll walk through three",
    "start": "1638960",
    "end": "1645080"
  },
  {
    "text": "examples that reflect the story I mentioned earlier um the story of what it means to develop software at your company and so what that story",
    "start": "1645080",
    "end": "1651640"
  },
  {
    "text": "ultimately looks like is around is that around that around the feature development cycle and so in this",
    "start": "1651640",
    "end": "1658279"
  },
  {
    "text": "interest of time I'm not going to run through each of these steps um all you really need to know is that this is the story that we're telling the one around",
    "start": "1658279",
    "end": "1664640"
  },
  {
    "text": "our future development cycle and the one's most relevant to us for today um or generally is uh the",
    "start": "1664640",
    "end": "1671840"
  },
  {
    "text": "development production Readiness and delivery stages so those are the ones that we're going to focus on today",
    "start": "1671840",
    "end": "1679000"
  },
  {
    "text": "so starting off with development which supports the endtoend uh product development cycle particularly runtime",
    "start": "1679000",
    "end": "1684480"
  },
  {
    "text": "and architecture needs and so this phase usually manifests in language runtime platforms and so today we'll review Ones",
    "start": "1684480",
    "end": "1690799"
  },
  {
    "text": "based off of no. JS since that's uh what I've done in the past so for the first",
    "start": "1690799",
    "end": "1696200"
  },
  {
    "text": "part of our our recipe we Embrace standardization through runtime language supports uh runtime language templates",
    "start": "1696200",
    "end": "1701960"
  },
  {
    "text": "rather which minimize repeatable or boilerplate code by centralizing it into a template and so what this looks like",
    "start": "1701960",
    "end": "1708039"
  },
  {
    "text": "practically might be a simple server file like this um this template not only provides a reusable file but it also",
    "start": "1708039",
    "end": "1714240"
  },
  {
    "text": "acts as a standardization technique by including our organizational uh framework of choice which in this case",
    "start": "1714240",
    "end": "1719760"
  },
  {
    "text": "is Express and so from this right developers will only need to modify the parts of this template that require",
    "start": "1719760",
    "end": "1725799"
  },
  {
    "text": "service context which I highlighted here and so over time we could also extend this template to include standards for",
    "start": "1725799",
    "end": "1732799"
  },
  {
    "text": "other tools and dependencies like package uh like package managers linters testing framework Etc um which can be",
    "start": "1732799",
    "end": "1739159"
  },
  {
    "text": "reflected in like J uh Json config files and when beginning to build out these templates um just make sure to start",
    "start": "1739159",
    "end": "1745760"
  },
  {
    "text": "small and build your way out um rushing into their development can easily lead us towards a path of building uh a",
    "start": "1745760",
    "end": "1751480"
  },
  {
    "text": "developer story that doesn't actually serve the needs of our of our product engineering",
    "start": "1751480",
    "end": "1756840"
  },
  {
    "text": "users so alternatively you might decide to build a runtime framework that",
    "start": "1759200",
    "end": "1764240"
  },
  {
    "text": "codifies our organizational standards and so you can imagine right that as your organization grows um its standards",
    "start": "1764240",
    "end": "1770880"
  },
  {
    "text": "that server file might be quickly overwhelming right for example right we could if we want to extend our functionality to include middleware to",
    "start": "1770880",
    "end": "1777200"
  },
  {
    "text": "standardize how we write apis um and as we add more and more of this code to the template right it's going to become",
    "start": "1777200",
    "end": "1782519"
  },
  {
    "text": "impossible for developers to even know what are we providing them and so you know sure comments can help right but",
    "start": "1782519",
    "end": "1788200"
  },
  {
    "text": "there's a reason that we use abstractions in software engineering and so in an effort to keep those templates uh simple right we can",
    "start": "1788200",
    "end": "1794720"
  },
  {
    "text": "abstract the details away and replace the express code with with our own framework and so here's what that",
    "start": "1794720",
    "end": "1799919"
  },
  {
    "text": "package code might end up looking like as well as a simpler server uh file that we'd now be",
    "start": "1799919",
    "end": "1805240"
  },
  {
    "text": "providing and so of course you know there's many downsides to this right this is a fairly large dependency",
    "start": "1805240",
    "end": "1810679"
  },
  {
    "text": "introduction um we have to maintain this code for years and it's a commitment that we can't be made that we can't be",
    "start": "1810679",
    "end": "1815919"
  },
  {
    "text": "making lightly and it requires a huge amount of intentional design but IT addresses drift a lot more effectively",
    "start": "1815919",
    "end": "1821880"
  },
  {
    "text": "right because templates are easier to change versus Frameworks actually abstract implementation uh from",
    "start": "1821880",
    "end": "1828120"
  },
  {
    "text": "interfaces and so that's the part that really makes a difference between whether your framework ends up being a sustainable solution right so the",
    "start": "1828120",
    "end": "1835000"
  },
  {
    "text": "question you should be asking yourself like is the implementation your framework is the implementation of your framework genuinely abstracted from its",
    "start": "1835000",
    "end": "1841279"
  },
  {
    "text": "interface because that abstraction is what enables us to iterate on unforeseen pain points which are inevitable and",
    "start": "1841279",
    "end": "1847200"
  },
  {
    "text": "avoid breaking changes or deprecations altogether and so I've seen uh",
    "start": "1847200",
    "end": "1852760"
  },
  {
    "text": "Frameworks primarily work for organizations that adopt uh platform engineering um somewhat on the earlier",
    "start": "1852760",
    "end": "1858200"
  },
  {
    "text": "side more specifically during the transition period where we've decided like our monolithic application is no",
    "start": "1858200",
    "end": "1864480"
  },
  {
    "text": "longer working for us um and that decomposition needs to happen and this",
    "start": "1864480",
    "end": "1869559"
  },
  {
    "text": "is because uh once you're already to down the distributed systems Journey right addressing drift with a framework",
    "start": "1869559",
    "end": "1875440"
  },
  {
    "text": "is really hard to justify to service owners because at this point right the service was probably already built in",
    "start": "1875440",
    "end": "1880679"
  },
  {
    "text": "really opinionated way and so reconciling the drift in software and people's opinions uh is often a really",
    "start": "1880679",
    "end": "1886760"
  },
  {
    "text": "tedious process but if we start um building out a platform before we two",
    "start": "1886760",
    "end": "1891960"
  },
  {
    "text": "down that distributed systems Rabbit Hole it can actually set us up well for successfully decomposing a monolith and",
    "start": "1891960",
    "end": "1898320"
  },
  {
    "text": "this is because uh the repeatable tasks like making our services observable that we need to do for each of the services",
    "start": "1898320",
    "end": "1904639"
  },
  {
    "text": "can just be abstracted into a framework and used centrally and now when Frameworks and",
    "start": "1904639",
    "end": "1911440"
  },
  {
    "text": "templates aren't the right path forward for your organization's needs but you do want to provide some flexible options",
    "start": "1911440",
    "end": "1917120"
  },
  {
    "text": "runtime packages are great uh tool in our recipe and so here we have we still have",
    "start": "1917120",
    "end": "1922200"
  },
  {
    "text": "a lot of decisions to make right including where on the Spectrum flexible um we want this to be since it's not a",
    "start": "1922200",
    "end": "1928080"
  },
  {
    "text": "binary uh it's not a binary attribute um and these are still Avenues where we can inject",
    "start": "1928080",
    "end": "1933919"
  },
  {
    "text": "standardization and so to ground this into reality a little bit um we might have this very naive function in a",
    "start": "1933919",
    "end": "1939480"
  },
  {
    "text": "package right this header might indicate something related to authentication and we want to have a standard for and in",
    "start": "1939480",
    "end": "1945240"
  },
  {
    "text": "this case it's just we want some value to be upper case and so while this uh Ser this uh",
    "start": "1945240",
    "end": "1950960"
  },
  {
    "text": "function is opinionated unlike a template or a runtime template right the functionality is uh optin right meaning",
    "start": "1950960",
    "end": "1957399"
  },
  {
    "text": "that while we want to incentivize developers to use it we can't actually require them",
    "start": "1957399",
    "end": "1962799"
  },
  {
    "text": "to so an additional benefit of modules is that should you ever revisit the possibility of building a centralized",
    "start": "1963159",
    "end": "1969440"
  },
  {
    "text": "framework uh you already have some of the building box blocks that you can use to assemble that ultimate framework and",
    "start": "1969440",
    "end": "1974559"
  },
  {
    "text": "so for organizations that are outside of that initial transition area period between monolith and distributed architectures um building modules is a",
    "start": "1974559",
    "end": "1981720"
  },
  {
    "text": "great first step when adopting platform engineering because it allows us to incrementally build uh for the needs of",
    "start": "1981720",
    "end": "1986919"
  },
  {
    "text": "our developers without investing a huge amount of time that Frameworks often require now let's move on to the next",
    "start": "1986919",
    "end": "1993760"
  },
  {
    "text": "pillar of our recipe which are Integrations and plugins and so extending our example um as our",
    "start": "1993760",
    "end": "1999240"
  },
  {
    "text": "organization grows and our architecture evolves with it uh so might of the number of our packages right and so this",
    "start": "1999240",
    "end": "2005360"
  },
  {
    "text": "was a second uh design principle from architecture principle from earlier and so developers are going to need visibility into these different uh",
    "start": "2005360",
    "end": "2012440"
  },
  {
    "text": "packages so naturally we'll want to we'll decide to integrate with a package manager and rep or repository um manager",
    "start": "2012440",
    "end": "2019480"
  },
  {
    "text": "uh which should be managed centrally so that it has clear ownership and so that it doesn't become bloated with like extra artifacts that aren't necessary",
    "start": "2019480",
    "end": "2027159"
  },
  {
    "text": "and so conveniently right there might even be a plug-in available for your developer portal so that's even more",
    "start": "2027159",
    "end": "2032440"
  },
  {
    "text": "visible and along the way right we're going to need to document our work so that our users can use our tools",
    "start": "2032440",
    "end": "2037639"
  },
  {
    "text": "smoothly and so combining this with the second principle from earlier right finding ways to automate this will make",
    "start": "2037639",
    "end": "2042760"
  },
  {
    "text": "our lives easier and set our docks up uh to be less stale and so for node.js this might mean integrating with type doc uh",
    "start": "2042760",
    "end": "2049560"
  },
  {
    "text": "to automatically generate them uh which then you can plug into the developer portal to render documentation",
    "start": "2049560",
    "end": "2055638"
  },
  {
    "text": "there next we'll focus on platform use cases related to infrastructure run times and we're specifically we'll focus",
    "start": "2055639",
    "end": "2061398"
  },
  {
    "text": "on container runtime experiences and so reflecting back on our four pillars uh we Embrace",
    "start": "2061399",
    "end": "2067320"
  },
  {
    "text": "standardization here which is the first part of our recipe through base uh templates or images which minimize",
    "start": "2067320",
    "end": "2073200"
  },
  {
    "text": "repeatable code or config by centralizing it into a version template or image and here versioning is crucial",
    "start": "2073200",
    "end": "2079638"
  },
  {
    "text": "especially for templates because it's very easy to fall back into the Trap of drift now one of these two uh options",
    "start": "2079639",
    "end": "2087000"
  },
  {
    "text": "aren't the right the right path forward but we still want to provide more flexible options standard image",
    "start": "2087000",
    "end": "2092760"
  },
  {
    "text": "artifacts are a great tool in our in our recipe as well and again here right we have plenty of decisions to make",
    "start": "2092760",
    "end": "2098320"
  },
  {
    "text": "including where on the Spectrum a flexible versus uh standard uh versus",
    "start": "2098320",
    "end": "2103839"
  },
  {
    "text": "standard do we want to be right and also whether we want to require them or recommend them to our",
    "start": "2103839",
    "end": "2110359"
  },
  {
    "text": "users so next we have the Integrations pillar which represent either the",
    "start": "2112800",
    "end": "2118680"
  },
  {
    "text": "Integrations between components within the same platform or Integrations between multiple platforms right so for",
    "start": "2118680",
    "end": "2124400"
  },
  {
    "text": "example here um what this might look like is template generators for Docker file or Docker composed files versus the",
    "start": "2124400",
    "end": "2131240"
  },
  {
    "text": "Integrations between a container runtime platform and a kubernetes platform and lastly all these different",
    "start": "2131240",
    "end": "2137359"
  },
  {
    "text": "uh components and decisions can quickly get overwhelming uh even when we're designing them with a lot of intent and",
    "start": "2137359",
    "end": "2143920"
  },
  {
    "text": "so not only do these decisions uh need to be reflected somewhere we need to understand that infrastructure incidents",
    "start": "2143920",
    "end": "2149280"
  },
  {
    "text": "are ours too and that the process of Incident Management should be one that Fosters collaboration and knowledge",
    "start": "2149280",
    "end": "2154560"
  },
  {
    "text": "sharing which was a principle from which was a principle that we mentioned earlier on and so what that looks like can be a",
    "start": "2154560",
    "end": "2161079"
  },
  {
    "text": "little bit tricky depending on your uh whether you have an SRE org or not and their their specific operating model but",
    "start": "2161079",
    "end": "2166839"
  },
  {
    "text": "regardless of organizational structure right driving Clarity over what incident support looks like is crucial to",
    "start": "2166839",
    "end": "2172800"
  },
  {
    "text": "avoiding broken trust between platform and product engineers and so part of that is making sure that platform or",
    "start": "2172800",
    "end": "2178359"
  },
  {
    "text": "product Engineers are set up to effectively differentiate when a production issue is due to infrastructure versus application",
    "start": "2178359",
    "end": "2185119"
  },
  {
    "text": "ones and lastly we have a more specific domain use case uh for a platform which is observability and so when it comes to",
    "start": "2185119",
    "end": "2191960"
  },
  {
    "text": "production Readiness support in general right this work often tends to build off of existing platforms and so this is",
    "start": "2191960",
    "end": "2198000"
  },
  {
    "text": "what you're going to see today and so going back to the build buy versus reuse tension I mentioned earlier let's say",
    "start": "2198000",
    "end": "2204599"
  },
  {
    "text": "that we use the open Telemetry standard after considering the trade-offs of building our own standard God help us if",
    "start": "2204599",
    "end": "2209920"
  },
  {
    "text": "we do that using one from open source or using a vendor specific one and so given",
    "start": "2209920",
    "end": "2215160"
  },
  {
    "text": "this decision we choose to embra Embrace uh standardization further by adding a new config to values to a values file um",
    "start": "2215160",
    "end": "2221720"
  },
  {
    "text": "to support the standard an important thing here to know is that um this technical decision reuses a technical",
    "start": "2221720",
    "end": "2228160"
  },
  {
    "text": "decision made by our infrastructure platform teams and this is to avoid any unnecessary uh technical drift and so",
    "start": "2228160",
    "end": "2234480"
  },
  {
    "text": "really what we're doing now is extending their platform to support reliability and observability",
    "start": "2234480",
    "end": "2240040"
  },
  {
    "text": "needs and so the impact of this is that developers don't have to worry about managing the config needed to use a",
    "start": "2240040",
    "end": "2246079"
  },
  {
    "text": "theoretical open Telemetry collector um that we decided to provide and so instead now they can focus on",
    "start": "2246079",
    "end": "2251560"
  },
  {
    "text": "instrumenting their applications um for Telemetry that requires service contexts and so usually what this means is enable",
    "start": "2251560",
    "end": "2258240"
  },
  {
    "text": "enabling them to focus on application instrumentation instead of infrastructure needs and so Switching gears into more",
    "start": "2258240",
    "end": "2265440"
  },
  {
    "text": "flexible uh offerings we choose to extend our runtime platform to include modules that provide uh features",
    "start": "2265440",
    "end": "2271640"
  },
  {
    "text": "relevant to telemetric collection and so this might mean uh providing an optional middleware",
    "start": "2271640",
    "end": "2277599"
  },
  {
    "text": "function to enable Telemetry collection uh so in this very naive example uh we",
    "start": "2277599",
    "end": "2282839"
  },
  {
    "text": "see a similar tension as earlier where we standardize the key of an attribute but provide the flexibility of managing",
    "start": "2282839",
    "end": "2289000"
  },
  {
    "text": "the value through an environment variable so no none of this code is from The New York Times I don't want to get in trouble",
    "start": "2289000",
    "end": "2296319"
  },
  {
    "text": "um and so now I mentioned that our work uh needs to align with our needs with the needs of our product engineering",
    "start": "2296319",
    "end": "2302160"
  },
  {
    "text": "users and so let's say that our our product has become really successful right we are solidly in the distributed",
    "start": "2302160",
    "end": "2308240"
  },
  {
    "text": "architecture space For Better or For Worse and now some of our product teams have new technical requirements that",
    "start": "2308240",
    "end": "2313319"
  },
  {
    "text": "require them to be very ctitious about any performance implications and so they need strong concurrency support as well",
    "start": "2313319",
    "end": "2320200"
  },
  {
    "text": "and so our organization decides to introduce a new standard language into our organization go and so you know this",
    "start": "2320200",
    "end": "2326720"
  },
  {
    "text": "does make our lives as platform Engineers a little bit or a lot more difficult perhaps um right now we have to support another runtime language um",
    "start": "2326720",
    "end": "2334400"
  },
  {
    "text": "but we shouldn't be meeting them with resistance right as peers we can give them feedback right like perhaps the",
    "start": "2334400",
    "end": "2339480"
  },
  {
    "text": "decision does need a lot of push back but being dogmatic about you know our targeted paths um isn't a recipe for",
    "start": "2339480",
    "end": "2345480"
  },
  {
    "text": "Success either and this is Ultimate right we're not we're going to start to",
    "start": "2345480",
    "end": "2350560"
  },
  {
    "text": "have to think about go development right and so using my observability example that means we need to think about what",
    "start": "2350560",
    "end": "2356319"
  },
  {
    "text": "Telemetry collection looks like for go and so we already Ed open Telemetry um so we reuse that decision for the sake",
    "start": "2356319",
    "end": "2362440"
  },
  {
    "text": "of consistency except now we come across this right like work in progress that",
    "start": "2362440",
    "end": "2368200"
  },
  {
    "text": "sucks right um so what do we do right we know Telemetry collection is important right like how else are we going to",
    "start": "2368200",
    "end": "2373960"
  },
  {
    "text": "debug our systems and so do we rely on older methods of collection manual instrumentation vendor specific agent",
    "start": "2373960",
    "end": "2380160"
  },
  {
    "text": "Etc um and that's one uh valid conclusion and if I'm being honest that's the most practical but I'm still",
    "start": "2380160",
    "end": "2385640"
  },
  {
    "text": "going to take an opportunity to uh share out what I want the kind of change I want to see in the world so bear with me",
    "start": "2385640",
    "end": "2391920"
  },
  {
    "text": "um so I'm going to give a little bit of a nod to open source and so our second principal talked about the role of",
    "start": "2391920",
    "end": "2397119"
  },
  {
    "text": "Automation in our work and how uh one form of that is to reduce the duplicate work that often happens in engineering",
    "start": "2397119",
    "end": "2403520"
  },
  {
    "text": "right and we're specifically offered the solution of deciding when to build buy or reuse existing open- Source Solutions",
    "start": "2403520",
    "end": "2409800"
  },
  {
    "text": "and part of the reason for that is not only because we'll end up spending uh unnecessary time Reinventing the wheel",
    "start": "2409800",
    "end": "2415599"
  },
  {
    "text": "but also because we have to admit to ourselves right that often times other people are going to do this better than us and admitting that doesn't make us",
    "start": "2415599",
    "end": "2422560"
  },
  {
    "text": "any less of an engineer right in fact it I think it shows humility and appreciation for the work of our peers",
    "start": "2422560",
    "end": "2428359"
  },
  {
    "text": "um and it provides another opportunity for us to learn from one another right we can't be experts at at everything um",
    "start": "2428359",
    "end": "2434560"
  },
  {
    "text": "and so engineering I think is also an underrated underrated way to build community and it doesn't have to be",
    "start": "2434560",
    "end": "2439599"
  },
  {
    "text": "isolated to just your company and so this is something I'm actively uh looking to do is for us to engage in",
    "start": "2439599",
    "end": "2444760"
  },
  {
    "text": "open source more especially since the New York Times has traditionally been pretty good about that but unfortunately we've kind of lost our spirit in that so",
    "start": "2444760",
    "end": "2452359"
  },
  {
    "text": "pray for me that I'm successful and so bringing me back to my obser ility example uh we know that",
    "start": "2452359",
    "end": "2458200"
  },
  {
    "text": "there are already really smart people out there right but that also there's clearly so much to learn and so",
    "start": "2458200",
    "end": "2463319"
  },
  {
    "text": "Community Driven support has been a central theme here right um and so we don't want to learn and build in silos",
    "start": "2463319",
    "end": "2469760"
  },
  {
    "text": "and so learning contribute to the uh the communities that already doing this work because as much as the sustainability of",
    "start": "2469760",
    "end": "2474839"
  },
  {
    "text": "our organization is tied to our ability to build sustainable software the sustainability of our organization is about our industry's Collective ability",
    "start": "2474839",
    "end": "2481200"
  },
  {
    "text": "to learn together and make progress together and so moving on to the third part of our uh recipe",
    "start": "2481200",
    "end": "2486839"
  },
  {
    "text": "we choose to extend our cicd pipeline uh platform Integrations to include application metrics that will allow us",
    "start": "2486839",
    "end": "2493160"
  },
  {
    "text": "to automate uh rollbacks uh that minimize the risk of change and again this is an example of how reliability",
    "start": "2493160",
    "end": "2499400"
  },
  {
    "text": "management work is comp is often complimentary to other existing platforms and lastly best practices and",
    "start": "2499400",
    "end": "2506040"
  },
  {
    "text": "guidance stocks especially because observability is such a full stack problem uh everyone is going to need to",
    "start": "2506040",
    "end": "2511440"
  },
  {
    "text": "think about observability and telemetric collection specifically and so we need to leverage that Collective uh knowledge",
    "start": "2511440",
    "end": "2517520"
  },
  {
    "text": "and put it in context with our work and then communicate what that looks like to other Engineers so that we're all aligned in how we approach uh this",
    "start": "2517520",
    "end": "2524440"
  },
  {
    "text": "problem space all right so now that we've walked through three components the three components of our platform uh let's put",
    "start": "2524440",
    "end": "2531480"
  },
  {
    "start": "2526000",
    "end": "2706000"
  },
  {
    "text": "this all together by Framing it through the through the lens of the feature development cycle from",
    "start": "2531480",
    "end": "2537440"
  },
  {
    "text": "earlier and so more specifically we'll approach um this from the lens of the life cycle of a service focusing on the",
    "start": "2542000",
    "end": "2548800"
  },
  {
    "text": "flow that reflects what it looks like to build a new service at our organization and so starting from the",
    "start": "2548800",
    "end": "2554599"
  },
  {
    "text": "left here uh let's say as a product engineer we're building a new service a new backend Service uh in an",
    "start": "2554599",
    "end": "2560440"
  },
  {
    "text": "organization with a fairly mature platform which is why you'll see some components here that we didn't mention before and so to get started you as a",
    "start": "2560440",
    "end": "2567440"
  },
  {
    "text": "platform as a product engineer enter the developer portal integrated with an artifact manager select a bundled uh",
    "start": "2567440",
    "end": "2573160"
  },
  {
    "text": "standardized service template enter details like service name and then an API integration that platform",
    "start": "2573160",
    "end": "2579119"
  },
  {
    "text": "engineering owns generates the service using an integration with GitHub and so now you're ready to",
    "start": "2579119",
    "end": "2584839"
  },
  {
    "text": "develop your service right depending on your development needs you utilize uh even more modules or use framework",
    "start": "2584839",
    "end": "2590480"
  },
  {
    "text": "features and from there you'll continue on to use GitHub whether uh either directly but now you can also do that",
    "start": "2590480",
    "end": "2596599"
  },
  {
    "text": "through your developer portal until the pr approval process is done and from",
    "start": "2596599",
    "end": "2601640"
  },
  {
    "text": "there right you're going to enter uh the more delivery focused of uh portion of our platform and so that bundled service template",
    "start": "2601640",
    "end": "2608319"
  },
  {
    "text": "that we use to generate the service also includes config uh config templates that the CI stage can use to build test and",
    "start": "2608319",
    "end": "2614839"
  },
  {
    "text": "perform static code analyses um Etc and so now we only have to worry about choosing good values and modifying the",
    "start": "2614839",
    "end": "2621520"
  },
  {
    "text": "values CML file and since our portal includes a drone integration developers can easily",
    "start": "2621520",
    "end": "2627640"
  },
  {
    "text": "gain visibility into each of the steps which is especially useful for when things fail and as a best practice for",
    "start": "2627640",
    "end": "2633520"
  },
  {
    "text": "platform Engineers here uh we should be very intentional about making it clear when cicd pipelines are failing because",
    "start": "2633520",
    "end": "2639079"
  },
  {
    "text": "of our tools versus when they're failing because of an application bug so if the CI stage passes a CI",
    "start": "2639079",
    "end": "2645520"
  },
  {
    "text": "integration then pushes build artifacts that were generated in the CI stage providing access for the rest of the",
    "start": "2645520",
    "end": "2650920"
  },
  {
    "text": "stages of our Pipeline and again the developer portal uh provides visibility through this um through our artifact REO",
    "start": "2650920",
    "end": "2657920"
  },
  {
    "text": "Manager and drone drone Integrations now those artifacts would",
    "start": "2657920",
    "end": "2663079"
  },
  {
    "text": "be used during continuous deployment as well to perform things like like infrastructure management pre-production",
    "start": "2663079",
    "end": "2668200"
  },
  {
    "text": "testing Etc and so using GitHub or its portal integration we move on to the",
    "start": "2668200",
    "end": "2673800"
  },
  {
    "text": "task related to release management like approvals and release tagging and release documentation Etc and so after",
    "start": "2673800",
    "end": "2680520"
  },
  {
    "text": "successful testing and approvals the service is deployed to production using similar mechanisms as automatic roll",
    "start": "2680520",
    "end": "2686119"
  },
  {
    "text": "back features that we mentioned in the production Readiness portion and finally we've concluded the delivery process and head into",
    "start": "2686119",
    "end": "2692200"
  },
  {
    "text": "maintenance mode which is supported by the observability tools we use to uh observe and monitor our",
    "start": "2692200",
    "end": "2698319"
  },
  {
    "text": "systems all right brief back I brief through that section um but before we conclude I want to bring us back to",
    "start": "2698319",
    "end": "2704280"
  },
  {
    "text": "where we began and so just to wrap this up uh I've made parallels between devops and platform engineering throughout this",
    "start": "2704280",
    "end": "2710400"
  },
  {
    "start": "2706000",
    "end": "2746000"
  },
  {
    "text": "talk and I hope it's obvious more than anything else perhaps how important devops has been for this discipline much",
    "start": "2710400",
    "end": "2717000"
  },
  {
    "text": "in the same way that it has been for site reliability engineering right our systems are complicated because people are complicated and just like",
    "start": "2717000",
    "end": "2723480"
  },
  {
    "text": "architecture design this type of culture doesn't just have it requires a lot of intent and so the most compelling part",
    "start": "2723480",
    "end": "2728960"
  },
  {
    "text": "of devops uh is ultimately the way that it transforms our cultures to be that to be one that Fosters exactly that intent",
    "start": "2728960",
    "end": "2735880"
  },
  {
    "text": "and so I started off this talk by saying that platform engineering is a social is a solution to building sustainable",
    "start": "2735880",
    "end": "2741280"
  },
  {
    "text": "organizations but perhaps the solution that we all really need is actually just intent thank",
    "start": "2741280",
    "end": "2748920"
  },
  {
    "start": "2746000",
    "end": "2753000"
  },
  {
    "text": "[Applause] you",
    "start": "2749270",
    "end": "2754000"
  }
]