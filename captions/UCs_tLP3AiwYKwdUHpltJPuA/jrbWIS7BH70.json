[
  {
    "text": "[Music]",
    "start": "990",
    "end": "7859"
  },
  {
    "text": "all right good afternoon good to see so many of you hanging on till the bitter",
    "start": "15440",
    "end": "21330"
  },
  {
    "text": "end of what I I noticed was actually the longest go to Amsterdam ever so this is",
    "start": "21330",
    "end": "27359"
  },
  {
    "text": "the first time ever that go to Amsterdam was there for three days and you stuck till the bitter end",
    "start": "27359",
    "end": "32880"
  },
  {
    "text": "and unfortunately the end will be a bit bitter because I'm going to talk about a lot of nonsense that I've witnessed in",
    "start": "32880",
    "end": "41070"
  },
  {
    "text": "in in micro-services you might remember that once upon a time maybe yesterday or",
    "start": "41070",
    "end": "48920"
  },
  {
    "text": "Monday last Monday there was a specific architectural style that used to",
    "start": "48920",
    "end": "54420"
  },
  {
    "text": "dominate the air our industry and anyone who has seen previous talks with me know",
    "start": "54420",
    "end": "61500"
  },
  {
    "text": "that I will take every opportunity to say how much I like this architectural",
    "start": "61500",
    "end": "67049"
  },
  {
    "text": "style but they used a different diagram in a couple of weeks ago I came across",
    "start": "67049",
    "end": "72390"
  },
  {
    "text": "this one and I just loved the absurdity of you know we've got a problem well",
    "start": "72390",
    "end": "78810"
  },
  {
    "text": "let's add a box to the cylinder and maybe a second box just to be sure and",
    "start": "78810",
    "end": "84119"
  },
  {
    "text": "then we probably get better software out of that right so this is a typical representation of the layered",
    "start": "84119",
    "end": "90000"
  },
  {
    "text": "architecture and we don't want to put all the logic in one box because that's not good we need to separate concerns so",
    "start": "90000",
    "end": "96240"
  },
  {
    "text": "we add another box so now we can split concerns but most of this software just",
    "start": "96240",
    "end": "101820"
  },
  {
    "text": "like anything else will just end up in what we would call a big bowl of mud and",
    "start": "101820",
    "end": "107579"
  },
  {
    "text": "the big bowl of mud in most cases is not made of mud as you can see with the",
    "start": "107579",
    "end": "113820"
  },
  {
    "text": "architects still sitting on top of it now the issue here is that the architect",
    "start": "113820",
    "end": "119650"
  },
  {
    "text": "himself is not aware of the big pile of  he's been creating excuse my french",
    "start": "119650",
    "end": "125260"
  },
  {
    "text": "and he's proud of it this is his creation and he will defend it well in",
    "start": "125260",
    "end": "131890"
  },
  {
    "text": "this case with his life but he will defend it and he doesn't see the problem",
    "start": "131890",
    "end": "137340"
  },
  {
    "text": "so given the giggles around here I am pretty sure you understand the problem of this type of software so micro",
    "start": "137400",
    "end": "144520"
  },
  {
    "text": "services to the rescue right we don't need to build a big monolithic ball of",
    "start": "144520",
    "end": "149770"
  },
  {
    "text": "mud anymore we can now build micro services and why do we do that what is",
    "start": "149770",
    "end": "155530"
  },
  {
    "text": "what is the big promise and it seems that we've lost connection with that big promise what is the thing micro services",
    "start": "155530",
    "end": "162520"
  },
  {
    "text": "should help us do and it's pretty simple they're all mainly about agility so",
    "start": "162520",
    "end": "168280"
  },
  {
    "text": "being able to make changes without changing the entire system we can start swapping out small parts of the system",
    "start": "168280",
    "end": "173800"
  },
  {
    "text": "and they're about scalability and I think the most powerful one is team",
    "start": "173800",
    "end": "178930"
  },
  {
    "text": "scalability having concrete isolated components that teams can work on individually etc etc they're not so much",
    "start": "178930",
    "end": "186910"
  },
  {
    "text": "about you know scalability in the sense of deploying multiple instances that kind of stuff whereas if you have a nice",
    "start": "186910",
    "end": "193600"
  },
  {
    "text": "monolith you can deploy multiple instances of those fine right you can generally scale those out fine the",
    "start": "193600",
    "end": "200500"
  },
  {
    "text": "problem is most monoliths are not that well structured but there's a balance",
    "start": "200500",
    "end": "206680"
  },
  {
    "text": "there's a there's a the price that we need to pay with micro services and they come with additional complexity and a",
    "start": "206680",
    "end": "214630"
  },
  {
    "text": "lot of shapes and forms there's a lot of technical complexity involved that's why there's a whole array of Netflix OSS",
    "start": "214630",
    "end": "223030"
  },
  {
    "text": "tools that we can use to deal with those but using those tools doesn't have the",
    "start": "223030",
    "end": "228970"
  },
  {
    "text": "complexity go away just gives you a means to deal with it but another",
    "start": "228970",
    "end": "234549"
  },
  {
    "text": "complex area is that very often it becomes very difficult to decide what is",
    "start": "234549",
    "end": "241780"
  },
  {
    "text": "in one service and what's in another and well you can imagine if you if you do",
    "start": "241780",
    "end": "248650"
  },
  {
    "text": "micro services you basically get something like this and in practice I see a lot of noun",
    "start": "248650",
    "end": "256269"
  },
  {
    "text": "driven design and the principle of non driven design is very simple it's a way",
    "start": "256269",
    "end": "261910"
  },
  {
    "text": "we can design our micro-services it's a it's a tool we can use but please don't",
    "start": "261910",
    "end": "267479"
  },
  {
    "text": "it's a tool we can use or that we do use to decide what goes in what service how",
    "start": "267479",
    "end": "274060"
  },
  {
    "text": "do we discover services in our domain and actually this is what I've been taught in university right you want to",
    "start": "274060",
    "end": "280570"
  },
  {
    "text": "find your objects go find the nouns but now we do micro services so if you find",
    "start": "280570",
    "end": "286810"
  },
  {
    "text": "a noun that's the service so we get stuff like order service customer service well we all know customer",
    "start": "286810",
    "end": "292750"
  },
  {
    "text": "services are fake right product service inventory service all that kind of stuff",
    "start": "292750",
    "end": "298419"
  },
  {
    "text": "and that's fantastic so remember that the practices that we had in the old",
    "start": "298419",
    "end": "305050"
  },
  {
    "text": "days would give us the mud right now what do you think happens when we",
    "start": "305050",
    "end": "311530"
  },
  {
    "text": "increase the number of deployment units just get a big pile",
    "start": "311530",
    "end": "318630"
  },
  {
    "text": "so is that in any way any better well now you can swap out one pile of  with another one and then the",
    "start": "319289",
    "end": "325479"
  },
  {
    "text": "system's different well hooray that probably won't work and there's a lot of things you can do to discover whether",
    "start": "325479",
    "end": "332380"
  },
  {
    "text": "you're working on that thing over there or on whatever is coming up in the in",
    "start": "332380",
    "end": "339789"
  },
  {
    "text": "the top if you notice that you are redeploying multiple services at once",
    "start": "339789",
    "end": "346860"
  },
  {
    "text": "congratulations you're there if you have very strong dependencies on some other",
    "start": "346860",
    "end": "353080"
  },
  {
    "text": "service doing something before you can do something congratulations you're down there again it's very easy to get down",
    "start": "353080",
    "end": "361419"
  },
  {
    "text": "there right as we'll see in a second what we should instead focus on is to",
    "start": "361419",
    "end": "366610"
  },
  {
    "text": "increase the modularity of the software that we're creating and again there's a",
    "start": "366610",
    "end": "372550"
  },
  {
    "text": "lot of tools that help us with those models that modularity but we need to",
    "start": "372550",
    "end": "378520"
  },
  {
    "text": "use them right but the promised land wall starts over there right we've got",
    "start": "378520",
    "end": "384099"
  },
  {
    "text": "this nice structured no it's good happy colors right this is the last session of",
    "start": "384099",
    "end": "391090"
  },
  {
    "text": "a three-day conference we need some happiness so there's happy colors up there and you can just see this is this",
    "start": "391090",
    "end": "396819"
  },
  {
    "text": "is just great we love this right it's simple everybody understands so there's some domain models in there the the code",
    "start": "396819",
    "end": "405099"
  },
  {
    "text": "must be understandable right if you get a an architectural diagram like that and once we're up there and we're in this",
    "start": "405099",
    "end": "410949"
  },
  {
    "text": "happy place with our micro sir with our monolith we've got this structured monolith and now we can start thinking",
    "start": "410949",
    "end": "418180"
  },
  {
    "text": "about increasing the number of deployment units if only it were that",
    "start": "418180",
    "end": "424210"
  },
  {
    "text": "simple if only it was as easy as having a slide with two axes and just say just",
    "start": "424210",
    "end": "429610"
  },
  {
    "text": "go up and go right because unfortunately on every office floor there's a bunch of",
    "start": "429610",
    "end": "440099"
  },
  {
    "text": "evil anti modularity forces in play and they come in lots of different shapes",
    "start": "440099",
    "end": "446379"
  },
  {
    "text": "and forms the most common one comes in suit and tie telling you that the",
    "start": "446379",
    "end": "451750"
  },
  {
    "text": "deadlines shifted to a bit earlier and as a result we need to take shortcuts",
    "start": "451750",
    "end": "457240"
  },
  {
    "text": "and every shortcut you take takes you a step down there every little bit of",
    "start": "457240",
    "end": "465009"
  },
  {
    "text": "technical debts that you add to your system brings you down there again so",
    "start": "465009",
    "end": "471159"
  },
  {
    "text": "that journey to the right is a pretty difficult one and we need to teach",
    "start": "471159",
    "end": "478419"
  },
  {
    "text": "ourselves to be to fight those forces we need to be strong we need to learn",
    "start": "478419",
    "end": "485710"
  },
  {
    "text": "karate no actually what we need to learn is to watch the car so this is this is",
    "start": "485710",
    "end": "492490"
  },
  {
    "text": "something in the 80 they understood this in the 80s right you want to learn to to",
    "start": "492490",
    "end": "498190"
  },
  {
    "text": "grow you wax a car you so this is the",
    "start": "498190",
    "end": "503819"
  },
  {
    "text": "who does not know this movie Karate Kid",
    "start": "503819",
    "end": "509020"
  },
  {
    "text": "it's a rittle it's a must see if you can still find a a runnable copy out there it's a movie",
    "start": "509020",
    "end": "517289"
  },
  {
    "text": "from from the from the 80s and it's it's legendary so this is the scene where mr.",
    "start": "517290",
    "end": "524219"
  },
  {
    "text": "Miyagi on the right he's teaching this American kid karate right well that's a",
    "start": "524220",
    "end": "529380"
  },
  {
    "text": "weird thing to do right how can it currently in English over an American kid learned karate in the first place but it's not it so he just wants to",
    "start": "529380",
    "end": "536040"
  },
  {
    "text": "fight right that's right the karate is about but he's like no self-control first wax on wax off it's all about",
    "start": "536040",
    "end": "545880"
  },
  {
    "text": "discipline if you can't watch the car forget about karate if you can't build a",
    "start": "545880",
    "end": "552980"
  },
  {
    "text": "monolith forget about microservices in",
    "start": "552980",
    "end": "562170"
  },
  {
    "text": "other words the there's a journey towards microservices right it's not a",
    "start": "562170",
    "end": "567270"
  },
  {
    "text": "you don't go from an idea and this is one of my favorite icons it means business model an idea of some mechanism",
    "start": "567270",
    "end": "575670"
  },
  {
    "text": "that makes you money right and well we",
    "start": "575670",
    "end": "580740"
  },
  {
    "text": "want to achieve that with micro-services because that was what we promised ourselves in the previous project we",
    "start": "580740",
    "end": "586200"
  },
  {
    "text": "said the next projects gonna be micro services but the road there is a dangerous one animals die on that road",
    "start": "586200",
    "end": "593630"
  },
  {
    "text": "or whatever it was and it's easy to get distracted right so we instead of",
    "start": "593630",
    "end": "600000"
  },
  {
    "text": "getting to the promised land we get into some place where it smells so the road is said it should be it's a bit longer",
    "start": "600000",
    "end": "606240"
  },
  {
    "text": "but still yeah build up monolith and then slowly evolve our way into micro services just step by step start start",
    "start": "606240",
    "end": "613860"
  },
  {
    "text": "carving pieces out of your monolith when you find out that there's a necessity and that necessity is never functional",
    "start": "613860",
    "end": "622130"
  },
  {
    "text": "it's never about functionality it's always about non-functional 'he's right",
    "start": "622130",
    "end": "627260"
  },
  {
    "text": "it might be that the component the the blue one that was extracted out has a",
    "start": "627260",
    "end": "634010"
  },
  {
    "text": "memory an insane memory consumption you don't want to mix that with the rest because it starts to to claim everything",
    "start": "634010",
    "end": "641610"
  },
  {
    "text": "it's got maybe it's it's a component that falls over quite often you just to bulkhead want to have a bulkhead in",
    "start": "641610",
    "end": "648780"
  },
  {
    "text": "between etc and then we start carving more pieces out and maybe one day we'll do serverless like who and what we need",
    "start": "648780",
    "end": "659490"
  },
  {
    "text": "for that the most important ingredient I believe that we need to make this a",
    "start": "659490",
    "end": "665720"
  },
  {
    "text": "somewhat doable journey that not for every step we need to go and ask those",
    "start": "665720",
    "end": "671130"
  },
  {
    "text": "those guys with the suits remember and the ties we don't need to ask them for budget every time so we need to be able",
    "start": "671130",
    "end": "678000"
  },
  {
    "text": "to without too much hassle carve these components out and location transparency",
    "start": "678000",
    "end": "685320"
  },
  {
    "text": "is the means to do that make sure that these components are not aware about their respective locations in the",
    "start": "685320",
    "end": "691350"
  },
  {
    "text": "communication that they have make sure they don't assume that they're in the",
    "start": "691350",
    "end": "696780"
  },
  {
    "text": "same VM or in the same data center on the same planet whatsoever one day that",
    "start": "696780",
    "end": "704580"
  },
  {
    "text": "will be a problem right across planetary synchronization so we've got events",
    "start": "704580",
    "end": "710670"
  },
  {
    "text": "events to the rescue right the events are a beautiful way to give us that location transparency you just throw an",
    "start": "710670",
    "end": "717300"
  },
  {
    "text": "event here and you can catch it anywhere no problem so let's say that a service a",
    "start": "717300",
    "end": "727010"
  },
  {
    "text": "lesson has some interaction and to be honest I don't care what and that's a",
    "start": "727010",
    "end": "732360"
  },
  {
    "text": "service C needs to know about the interaction well a very common way is to say well a we'll just call C right I've",
    "start": "732360",
    "end": "739020"
  },
  {
    "text": "got a request and now you do something and that's great the problem is when their service B and",
    "start": "739020",
    "end": "746280"
  },
  {
    "text": "D as well we've got multiple interactions now service a is currently aware of the",
    "start": "746280",
    "end": "752160"
  },
  {
    "text": "existence of BC and D what happens when II comes around and F and G and whatever",
    "start": "752160",
    "end": "757580"
  },
  {
    "text": "this might make sense but in many situations in dozens so what we can do instead is raise an event and now",
    "start": "757580",
    "end": "765960"
  },
  {
    "text": "service a can just raise an event and service BC and D can watch that event and read it there's no magic here right",
    "start": "765960",
    "end": "773970"
  },
  {
    "text": "but there is a fundamental thing that is very important that we've done here we've inverted the dependent",
    "start": "773970",
    "end": "779590"
  },
  {
    "text": "see so instead of service a depending on be our knowing of B C and D we've now",
    "start": "779590",
    "end": "786190"
  },
  {
    "text": "got services B C and D basically watching service a and even better than",
    "start": "786190",
    "end": "792700"
  },
  {
    "text": "that is an indirect watching service a they're just watching the events come out and that's a very nice thing",
    "start": "792700",
    "end": "800020"
  },
  {
    "text": "so let's event all the things right we've got a solution to a problem so now",
    "start": "800020",
    "end": "806800"
  },
  {
    "text": "all the problems become problems that we need to solve with that solution we've",
    "start": "806800",
    "end": "812740"
  },
  {
    "text": "got Maslow's hammer who does not know what Maslow's hammer is have you ever",
    "start": "812740",
    "end": "820060"
  },
  {
    "text": "heard of if all you have is a hammer everything looks like a nail that's that hammer maybe you've heard of",
    "start": "820060",
    "end": "828250"
  },
  {
    "text": "a Birmingham screwdriver sounds like a cocktail it's nots the",
    "start": "828250",
    "end": "833410"
  },
  {
    "text": "same thing you fix anything with a screwdriver so both of them that terms",
    "start": "833410",
    "end": "838720"
  },
  {
    "text": "are like very much fortunately if you look on Wikipedia you also find this one and I love this one because this sounds",
    "start": "838720",
    "end": "845800"
  },
  {
    "text": "like something you can talk to talk about with your psychologist I've got",
    "start": "845800",
    "end": "852040"
  },
  {
    "text": "Maslow syndrome it's like oh so do I it's horrible isn't it yeah because it",
    "start": "852040",
    "end": "857920"
  },
  {
    "text": "is a problem that we have we become that little beetle on the ball of dung right",
    "start": "857920",
    "end": "866970"
  },
  {
    "text": "so events but they're not a bad thing but let's not use them anywhere and there's different shapes and forms of events there's different ways we can use",
    "start": "869930",
    "end": "876470"
  },
  {
    "text": "events and there's different patterns that we can we can use with events and one of them is event notification now",
    "start": "876470",
    "end": "883180"
  },
  {
    "text": "event notification is where events are used just to tell you that something happened just a little poke that's it",
    "start": "883180",
    "end": "891340"
  },
  {
    "text": "there's not much information in those events they might carry something like customer a details changed like oh",
    "start": "891340",
    "end": "899420"
  },
  {
    "text": "customer a was that and then you know that service would go to the to fetch some customer data because it might have",
    "start": "899420",
    "end": "905510"
  },
  {
    "text": "changed that's all and somewhat more",
    "start": "905510",
    "end": "910600"
  },
  {
    "text": "involved form of of events is the event carried State transfer so there's a",
    "start": "910600",
    "end": "918760"
  },
  {
    "text": "state's change has happened somewhere and an event is is emitted to describe",
    "start": "918760",
    "end": "925610"
  },
  {
    "text": "that chair state change in as much detail as is necessary for that state",
    "start": "925610",
    "end": "932240"
  },
  {
    "text": "change to make sense right so the event contains all the data necessary to explain exactly what happened and we can",
    "start": "932240",
    "end": "940010"
  },
  {
    "text": "take that a step further as well and there's the concept of event sourcing that also be briefly talking about event",
    "start": "940010",
    "end": "947300"
  },
  {
    "text": "sourcing is where everything becomes a an event an event can read states",
    "start": "947300",
    "end": "953150"
  },
  {
    "text": "transfer so let's have a look at what happens when you apply this in a",
    "start": "953150",
    "end": "958340"
  },
  {
    "text": "dogmatic fashion and this is what I've unfortunately seen in some event-driven",
    "start": "958340",
    "end": "963530"
  },
  {
    "text": "microservices and again I'm not saying this is a bad pattern but it may be useful but it's just a pattern just like",
    "start": "963530",
    "end": "969740"
  },
  {
    "text": "any pattern that you would use in specific situations so let's say we have an order service and there's another",
    "start": "969740",
    "end": "975290"
  },
  {
    "text": "service that needs to know but the items that have been ordered I don't care too much why it's other departments I don't",
    "start": "975290",
    "end": "981950"
  },
  {
    "text": "care what they do so each service will have its own database or store to store its States",
    "start": "981950",
    "end": "989120"
  },
  {
    "text": "and for the replication we use events and these events carry all the",
    "start": "989120",
    "end": "995180"
  },
  {
    "text": "information we need to basically find what happens so there's order created",
    "start": "995180",
    "end": "1000880"
  },
  {
    "text": "there's item added and we'll tell you which I was added maybe there's no there's also item removed which will tell you which",
    "start": "1000880",
    "end": "1007540"
  },
  {
    "text": "item was removed and we have order confirmed etc now the service on the right is only interested in items that",
    "start": "1007540",
    "end": "1015850"
  },
  {
    "text": "have been ordered not items that if they have been added to an order so there's a",
    "start": "1015850",
    "end": "1023290"
  },
  {
    "text": "bit of logic that the servers on the right other right needs to replicate it",
    "start": "1023290",
    "end": "1031029"
  },
  {
    "text": "needs to understand that an item is only ordered when it was added then not removed and then confirmed so there's a",
    "start": "1031029",
    "end": "1039038"
  },
  {
    "text": "bit of mathematics going on there and not the most complex one it would fit",
    "start": "1039039",
    "end": "1045038"
  },
  {
    "text": "perfectly in a one on one class but still there's this duplication of logic and that's annoying because now if the",
    "start": "1045039",
    "end": "1050080"
  },
  {
    "text": "rules slightly change all they have to change everywhere and things got worse",
    "start": "1050080",
    "end": "1057429"
  },
  {
    "text": "I've once seen an example where someone proudly presented their event-driven architecture and it was like well this",
    "start": "1057429",
    "end": "1064149"
  },
  {
    "text": "is the most entangled choreography that I've ever seen and it's the order",
    "start": "1064149",
    "end": "1071559"
  },
  {
    "text": "service that says order created no makes sense so far right an order is created",
    "start": "1071559",
    "end": "1076630"
  },
  {
    "text": "that's pretty much a facts and then the shipping service picks up that order and says well I confirmed the inventory and",
    "start": "1076630",
    "end": "1086019"
  },
  {
    "text": "now ok well that could make sense I guess but now the order service needs to know",
    "start": "1086019",
    "end": "1091299"
  },
  {
    "text": "about that inventory confirmed and then says I'm ready for payments and then",
    "start": "1091299",
    "end": "1098559"
  },
  {
    "text": "said ok orders paid oh great and now the order service knows when the order paid then what do we need are we ready for",
    "start": "1098559",
    "end": "1104799"
  },
  {
    "text": "shipping and just the style of communication is weird when I when I see",
    "start": "1104799",
    "end": "1110409"
  },
  {
    "text": "this it feels like just III imagine",
    "start": "1110409",
    "end": "1115779"
  },
  {
    "text": "things III I just imagine myself sitting on the couch at home going oh man that's",
    "start": "1115779",
    "end": "1121570"
  },
  {
    "text": "thirsty and just waiting for somebody to bring me a drink",
    "start": "1121570",
    "end": "1126779"
  },
  {
    "text": "that's anti-social I guess and that's what's happening here oh I'm so ready",
    "start": "1126779",
    "end": "1134260"
  },
  {
    "text": "for shipping and it feels why doesn't the order",
    "start": "1134260",
    "end": "1141320"
  },
  {
    "text": "servers just say hey shipping go ship this if it knows it knows about shipping",
    "start": "1141320",
    "end": "1146330"
  },
  {
    "text": "there's remember if events inverted the dependency but we've got to weigh",
    "start": "1146330",
    "end": "1152540"
  },
  {
    "text": "dependencies you know how do we solve that by inverting both I can hear you're",
    "start": "1152540",
    "end": "1160460"
  },
  {
    "text": "good at math I'm happy with that so what's wrong it's because events have",
    "start": "1160460",
    "end": "1166430"
  },
  {
    "text": "become the hammer and there's not only offense there's also commands and",
    "start": "1166430",
    "end": "1172760"
  },
  {
    "text": "queries right there's different way reasons why components would want to",
    "start": "1172760",
    "end": "1177770"
  },
  {
    "text": "communicate and we've identified essentially three reasons why in in general one is events and they are just",
    "start": "1177770",
    "end": "1184940"
  },
  {
    "text": "a way to explain something happens all right what I've been talking about for quite a while already and there's their",
    "start": "1184940",
    "end": "1192290"
  },
  {
    "text": "commands and commands are the intent to change something it's just going to someone you said do something and the",
    "start": "1192290",
    "end": "1201200"
  },
  {
    "text": "queries are messages you would send if you have a need for information I want to know about something and I know some",
    "start": "1201200",
    "end": "1207530"
  },
  {
    "text": "other service or other components for that matter has the answer but I just don't have it myself and it's very",
    "start": "1207530",
    "end": "1214730"
  },
  {
    "text": "important to realize that an event is not and a message is not the same thing not all messages are events now how you",
    "start": "1214730",
    "end": "1224120"
  },
  {
    "text": "were do this in actual implementation that's really really up to you of course we have an opinion and if you want to",
    "start": "1224120",
    "end": "1230300"
  },
  {
    "text": "hear about it I'll gladly talk to you about it so if we take that event-driven",
    "start": "1230300",
    "end": "1235760"
  },
  {
    "text": "microservices approach and we apply the different types of messages we can now",
    "start": "1235760",
    "end": "1241370"
  },
  {
    "text": "say well there's a different way to implement this that will give us a much less coupled solution where the order",
    "start": "1241370",
    "end": "1248990"
  },
  {
    "text": "confirmed is sort of a trigger and then we do a query and actually what we've",
    "start": "1248990",
    "end": "1255800"
  },
  {
    "text": "been doing here is event notification except that there's some advantage of",
    "start": "1255800",
    "end": "1262070"
  },
  {
    "text": "having this event carried State transfer because not all services need to",
    "start": "1262070",
    "end": "1268280"
  },
  {
    "text": "communicate like this right there's not one solution that fits",
    "start": "1268280",
    "end": "1273320"
  },
  {
    "text": "all but now we can choose do we take an event as a notification that some important state happens and now we want",
    "start": "1273320",
    "end": "1279560"
  },
  {
    "text": "to get some information about the objects that are involved in that state",
    "start": "1279560",
    "end": "1286299"
  },
  {
    "text": "so now we've got events all over and then there's a lot of misunderstanding",
    "start": "1287410",
    "end": "1292520"
  },
  {
    "text": "around event sourcing so some would argue well if you if you have this",
    "start": "1292520",
    "end": "1298190"
  },
  {
    "text": "situation and you just store the events forever then you've got event sourcing",
    "start": "1298190",
    "end": "1308020"
  },
  {
    "text": "unfortunately that's not really the case you've got the easy half of event",
    "start": "1308020",
    "end": "1313130"
  },
  {
    "text": "sourcing event sourcing is really about capturing the truth the whole truth and nothing but the truth and events are a",
    "start": "1313130",
    "end": "1320300"
  },
  {
    "text": "great way to do that because they tell you what happens the truth but unless",
    "start": "1320300",
    "end": "1326270"
  },
  {
    "text": "you organize your code correctly you cannot guarantee whether that is the whole truth and you cannot guarantee",
    "start": "1326270",
    "end": "1333140"
  },
  {
    "text": "it's nothing but well it's probably nothing but the truth but you can't guarantee it's the whole truth and",
    "start": "1333140",
    "end": "1338590"
  },
  {
    "text": "that's the problem event sourcing tackles and the whole idea of event",
    "start": "1338590",
    "end": "1343970"
  },
  {
    "text": "sourcing is we don't store States anymore as States we take for example",
    "start": "1343970",
    "end": "1351290"
  },
  {
    "text": "the example here we see that there's an order and there's a chair and somebody so somebody bought a chair but the",
    "start": "1351290",
    "end": "1357560"
  },
  {
    "text": "status says returned shipment received so the chair was returned why no clue with the event sourcing you",
    "start": "1357560",
    "end": "1366380"
  },
  {
    "text": "don't store the states and just don't override the state every time it changes but you store all the events that led",
    "start": "1366380",
    "end": "1372980"
  },
  {
    "text": "you to that state instead so we can see",
    "start": "1372980",
    "end": "1377990"
  },
  {
    "text": "an order was created and somebody added two chairs not one and then he removes",
    "start": "1377990",
    "end": "1383390"
  },
  {
    "text": "one chair and then confirmed the order and then it was shipped and because it",
    "start": "1383390",
    "end": "1389630"
  },
  {
    "text": "was cancelled after it was shipped we have to wait for the return shipment to be received if it was cancelled before",
    "start": "1389630",
    "end": "1397940"
  },
  {
    "text": "it was shipped it didn't have to be shipped and we would have probably another state now if you want",
    "start": "1397940",
    "end": "1403299"
  },
  {
    "text": "to get the state because in the end at runtime we want to work with state instead so to get this stage we just",
    "start": "1403299",
    "end": "1409659"
  },
  {
    "text": "replay all the events on let's say an empty order we just replay everything and recalculate the current state the",
    "start": "1409659",
    "end": "1419019"
  },
  {
    "text": "event sourcing has some some benefits so if you have this order service emitting",
    "start": "1419019",
    "end": "1425440"
  },
  {
    "text": "events then you can do some pretty smart analytics right maybe there's a pattern in this way people are ordering products",
    "start": "1425440",
    "end": "1432519"
  },
  {
    "text": "that can tell you well you better hold this shipment off for for a few whacks for hours because we see that people",
    "start": "1432519",
    "end": "1438909"
  },
  {
    "text": "that add to then remove one they might not be interested in in the in the chair",
    "start": "1438909",
    "end": "1444789"
  },
  {
    "text": "after all but they thought well let's order because otherwise it won't be here in time but that is not event sourcing",
    "start": "1444789",
    "end": "1451419"
  },
  {
    "text": "this is just event handling we can throw away the database on the right and",
    "start": "1451419",
    "end": "1457419"
  },
  {
    "text": "reconstruct that and some would argue that's event sourcing right that is what if insourcing is and there's a truth to",
    "start": "1457419",
    "end": "1462549"
  },
  {
    "text": "that because the big test on whether your event sourcing or not is throw away everything except your event store if",
    "start": "1462549",
    "end": "1470740"
  },
  {
    "text": "you only have your events can you reproduce exactly the state of the application and the answer in this case",
    "start": "1470740",
    "end": "1477460"
  },
  {
    "text": "is no because the thing or left is gone so what we need to do is make sure that",
    "start": "1477460",
    "end": "1483009"
  },
  {
    "text": "the order service itself uses the events it published for some state in a",
    "start": "1483009",
    "end": "1488830"
  },
  {
    "text": "consistent way and that's where really the challenge is so instead of having state it will only have the history as",
    "start": "1488830",
    "end": "1494740"
  },
  {
    "text": "its source of information it's a very powerful concept and it has some clear",
    "start": "1494740",
    "end": "1502629"
  },
  {
    "text": "benefits some of them are business benefits and some of them are really obvious and very strong like auditing if",
    "start": "1502629",
    "end": "1509740"
  },
  {
    "text": "you have auditing requirements then event sourcing makes that and I'm",
    "start": "1509740",
    "end": "1515289"
  },
  {
    "text": "quoting a customer a breeze you've got everything so whatever your auditor asks",
    "start": "1515289",
    "end": "1520480"
  },
  {
    "text": "of you you can generate that out of those events if they're not in the events themselves there's also a bit",
    "start": "1520480",
    "end": "1528480"
  },
  {
    "text": "less strong requirements like transparency some businesses nowadays want to be more",
    "start": "1528480",
    "end": "1534550"
  },
  {
    "text": "about the data they have mostly internally so that they can use it for",
    "start": "1534550",
    "end": "1539680"
  },
  {
    "text": "example for data mining analytics etc there's a lot of value in that information right and there's a bunch of",
    "start": "1539680",
    "end": "1546280"
  },
  {
    "text": "technical reasons as well I've made those a bit smaller because they should never drive the actual solution but",
    "start": "1546280",
    "end": "1554380"
  },
  {
    "text": "there's a few nice technical reasons and one of them is for example easily",
    "start": "1554380",
    "end": "1559780"
  },
  {
    "text": "capture intent it's much easier to understand what an application is doing when when you've got events and commands",
    "start": "1559780",
    "end": "1566770"
  },
  {
    "text": "going on because they describe in a functional way what an application does or has done even but there's some",
    "start": "1566770",
    "end": "1576580"
  },
  {
    "text": "challenges as well for example you have to deal with increasing storage size",
    "start": "1576580",
    "end": "1581800"
  },
  {
    "text": "right at adding a pen appending events to a store and never deleting them because it's the only thing you have but",
    "start": "1581800",
    "end": "1589480"
  },
  {
    "text": "nowadays storage size is that really an issue you click click click and you've",
    "start": "1589480",
    "end": "1594760"
  },
  {
    "text": "got a few terabyte extra and there's a lot of solutions to help us manage but",
    "start": "1594760",
    "end": "1600730"
  },
  {
    "text": "there's there's actual event stores out there there's products that can help you deal with that so that's not a problem",
    "start": "1600730",
    "end": "1607330"
  },
  {
    "text": "it's complex to implement if you remember your first programming day",
    "start": "1607330",
    "end": "1613000"
  },
  {
    "text": "everything was complex getting hello world on a screen or especially in Java was really complex forcing that we're",
    "start": "1613000",
    "end": "1621580"
  },
  {
    "text": "all the languages humans were really one-liners but you know we've learned to deal with that we just need to keep on",
    "start": "1621580",
    "end": "1627460"
  },
  {
    "text": "learning and it's easy to say that here because that's exactly why you're here and the other one is event thinking and",
    "start": "1627460",
    "end": "1633490"
  },
  {
    "text": "I think that is the only remaining real challenge is to get the event thinking back and there were a couple of sessions",
    "start": "1633490",
    "end": "1639490"
  },
  {
    "text": "throughout the throughout the conference that gave you tools to to to do that but",
    "start": "1639490",
    "end": "1647950"
  },
  {
    "text": "it's a much more natural way to think about their behavior of an application just don't forget about the state think",
    "start": "1647950",
    "end": "1655690"
  },
  {
    "text": "about behavior first and if you analyze behavior of an application you identify the events right away",
    "start": "1655690",
    "end": "1662220"
  },
  {
    "text": "so let's eventsource all the things well I think you got it by now just",
    "start": "1662610",
    "end": "1668340"
  },
  {
    "text": "don't another hammer again so do you want to eventsource all the things probably not I frequently get asked you",
    "start": "1668340",
    "end": "1678149"
  },
  {
    "text": "know when would you not choose event sourcing or when would you not use seeker essence and things like that tonight to be honest I will not answer",
    "start": "1678149",
    "end": "1685710"
  },
  {
    "text": "that question so if you're using the app right now to ask questions you won't get a full answer to that question they",
    "start": "1685710",
    "end": "1693510"
  },
  {
    "text": "might as well give it a try so let's see what an event storm looks like in",
    "start": "1693510",
    "end": "1699000"
  },
  {
    "text": "context so we have an application and it will send new events to this event store",
    "start": "1699000",
    "end": "1704220"
  },
  {
    "text": "and it will read past events to make new decisions and this mechanism works",
    "start": "1704220",
    "end": "1709740"
  },
  {
    "text": "really well if you're processing changes so if you're executing commands you have this single entity you want to quickly",
    "start": "1709740",
    "end": "1715320"
  },
  {
    "text": "reconstruct that that's fine but if you suddenly have this career you say well give me all the orders that are above",
    "start": "1715320",
    "end": "1722610"
  },
  {
    "text": "unread euros now you have to read the entire store billions and billions of",
    "start": "1722610",
    "end": "1728190"
  },
  {
    "text": "events before you know the answer is it doesn't really quite work well for those generic queries and that's why we very",
    "start": "1728190",
    "end": "1735600"
  },
  {
    "text": "often see it in combination with secure s CQRS is a pattern an architectural",
    "start": "1735600",
    "end": "1742500"
  },
  {
    "text": "pattern where you split the responsibility of an application into two parts one part is responsible family",
    "start": "1742500",
    "end": "1748169"
  },
  {
    "text": "in these commands and that works well with the event store directly but since",
    "start": "1748169",
    "end": "1753269"
  },
  {
    "text": "queries don't work very well with an event store they want a different representation of the truth you don't",
    "start": "1753269",
    "end": "1759779"
  },
  {
    "text": "want to go through the history book every time and again and again just to find out what country Amsterdam oh yeah",
    "start": "1759779",
    "end": "1766320"
  },
  {
    "text": "what country Amsterdam is in you just want to know you won't have some other model to look that up right so we can",
    "start": "1766320",
    "end": "1773580"
  },
  {
    "text": "project all the events into different models that are optimized for that type of question and there's a lot of",
    "start": "1773580",
    "end": "1780029"
  },
  {
    "text": "benefits we can handle none functionals a lot better in this way we can choose",
    "start": "1780029",
    "end": "1785549"
  },
  {
    "text": "different approaches for the top one as as opposed to the bottom one yes or no",
    "start": "1785549",
    "end": "1794840"
  },
  {
    "text": "so that's all nice and that's all really nice theory and everything but let's see how this works out when we don't really",
    "start": "1795830",
    "end": "1803370"
  },
  {
    "text": "have the six services thing anymore and notice that they're not big bowls of other little bowls of mud anymore",
    "start": "1803370",
    "end": "1810140"
  },
  {
    "text": "they're kind of red boxes what but what if we've got a few more yes a",
    "start": "1810140",
    "end": "1819510"
  },
  {
    "text": "lot isn't it what happens when we apply all these these concepts our skill and",
    "start": "1819510",
    "end": "1826500"
  },
  {
    "text": "we need to realize that every time we have some form of communication there's",
    "start": "1826500",
    "end": "1832559"
  },
  {
    "text": "a contract there's a marriage between the two components and the disadvantage of events is that",
    "start": "1832559",
    "end": "1841470"
  },
  {
    "text": "you have a marriage with lots of unknown other components now imagine I'm pretty",
    "start": "1841470",
    "end": "1850410"
  },
  {
    "text": "sure at home your your your partner if you if you have one will will set some restrictions on how you can behave at",
    "start": "1850410",
    "end": "1856770"
  },
  {
    "text": "home right and imagine that that's not",
    "start": "1856770",
    "end": "1863340"
  },
  {
    "text": "one partner that you can identify and know but it's unknown people have",
    "start": "1863340",
    "end": "1869280"
  },
  {
    "text": "expectations of you but you don't know which one's it's pretty annoying fortunately again there's technology to",
    "start": "1869280",
    "end": "1875309"
  },
  {
    "text": "help us there's contract consumer-driven contracts right so we can only make them",
    "start": "1875309",
    "end": "1880380"
  },
  {
    "text": "explicit I expect of you to behave like this now run this in the or see I see",
    "start": "1880380",
    "end": "1885840"
  },
  {
    "text": "the pipe line and if it says okay then then you can drink from the milk carton straight out of the fridge if not then",
    "start": "1885840",
    "end": "1895170"
  },
  {
    "text": "don't now you want to restrict the scope of that contract probably because if you",
    "start": "1895170",
    "end": "1903059"
  },
  {
    "text": "just publish everything to everyone like we're doing here then the service on top",
    "start": "1903059",
    "end": "1908250"
  },
  {
    "text": "that is publishing an event now has a contract with that was lazy so only",
    "start": "1908250",
    "end": "1913500"
  },
  {
    "text": "added for services but just imagine many with all these services down there and they all come with their consumer-driven",
    "start": "1913500",
    "end": "1920460"
  },
  {
    "text": "contract tests you know and they all overlap and they're really annoying we have to manage all that and then",
    "start": "1920460",
    "end": "1927160"
  },
  {
    "text": "there's a concept of bounded context if you want to take a picture do it now because the yep oh no yes no too fast",
    "start": "1927160",
    "end": "1936700"
  },
  {
    "text": "sorry um I don't want you to read all the slides and I really conceptually the",
    "start": "1936700",
    "end": "1942670"
  },
  {
    "text": "bounded context is basically the area where certain words have a certain meaning so for services that are within",
    "start": "1942670",
    "end": "1950230"
  },
  {
    "text": "the same bound in context they understand each other in great detail so",
    "start": "1950230",
    "end": "1955720"
  },
  {
    "text": "all these detailed order events they make a lot of sense to other services that are in the order space in the",
    "start": "1955720",
    "end": "1962140"
  },
  {
    "text": "inventory space they don't give them they don't care about all those details",
    "start": "1962140",
    "end": "1967150"
  },
  {
    "text": "they want the big things that happen like the order placed that's the important stuff so we want to be more",
    "start": "1967150",
    "end": "1972450"
  },
  {
    "text": "careful about what events we omit and especially when you use event sourcing",
    "start": "1972450",
    "end": "1977740"
  },
  {
    "text": "because in the case of event sourcing every little detail becomes an event and",
    "start": "1977740",
    "end": "1983070"
  },
  {
    "text": "every little detail that you accidentally publish to someone else is a marriage with the party in order so",
    "start": "1983070",
    "end": "1993520"
  },
  {
    "text": "what we should do is basically assign all these services to bounded contexts now they're starting to look more",
    "start": "1993520",
    "end": "1999610"
  },
  {
    "text": "happier anything it's more of a Thursday afternoon feels a bit like Friday so we",
    "start": "1999610",
    "end": "2008549"
  },
  {
    "text": "want to assign this service and now we can see that there's two services in the same context but we're still publishing",
    "start": "2008549",
    "end": "2014580"
  },
  {
    "text": "everything to the same you know there's no physical separation so we need to make sure that those bars are also",
    "start": "2014580",
    "end": "2020610"
  },
  {
    "text": "separated because we don't want to have the same language on the two contexts",
    "start": "2020610",
    "end": "2027840"
  },
  {
    "text": "there's some transformation probably that we want to do and a service the service on the rights is fine it's fine",
    "start": "2027840",
    "end": "2033809"
  },
  {
    "text": "if that reads from the the stream of detailed messages because they understand the language they understand",
    "start": "2033809",
    "end": "2039540"
  },
  {
    "text": "what it means they're probably even physically close to the teams that are developing the other service but for the",
    "start": "2039540",
    "end": "2046919"
  },
  {
    "text": "other one you want some form of anti-corruption layer you want to filter out the messages that are not important",
    "start": "2046919",
    "end": "2052138"
  },
  {
    "text": "outside of your context and those that are important you probably want to",
    "start": "2052139",
    "end": "2057740"
  },
  {
    "text": "transform them a bit decide whether you want to use this event carried state",
    "start": "2057740",
    "end": "2063809"
  },
  {
    "text": "transfer or even notification patterns again choices but there are different choices for the bar down there than they",
    "start": "2063809",
    "end": "2070559"
  },
  {
    "text": "are for the one on top so a slightly different representation would be like this where you have these",
    "start": "2070559",
    "end": "2077759"
  },
  {
    "text": "services communicated to each other and they're within every bundle context there's a lot of detailed communication",
    "start": "2077759",
    "end": "2084079"
  },
  {
    "text": "not only events but also commands and queries again in the broader context of",
    "start": "2084079",
    "end": "2090419"
  },
  {
    "text": "things commands events and queries but probably different ones",
    "start": "2090419",
    "end": "2096079"
  },
  {
    "text": "because I promised you a way forward I thought well I need to to give you some",
    "start": "2101500",
    "end": "2108310"
  },
  {
    "text": "guidelines basically I'm going to summarize some of the elements that I've said and one of the very important",
    "start": "2108310",
    "end": "2114880"
  },
  {
    "text": "things and we've we've had we've now seen projects that applied this from the beginning to use commands and queries as",
    "start": "2114880",
    "end": "2122310"
  },
  {
    "text": "explicitly as you use events and doing that has held these projects",
    "start": "2122310",
    "end": "2127660"
  },
  {
    "text": "tremendously to reduce complexity make them more evolvable maybe micro-service",
    "start": "2127660",
    "end": "2134170"
  },
  {
    "text": "evolvable should be a metric in encode quality tools sharing is caring if you",
    "start": "2134170",
    "end": "2142180"
  },
  {
    "text": "share events with somebody else you have to start caring about those events you're stuck right if you're married you",
    "start": "2142180",
    "end": "2149050"
  },
  {
    "text": "have to care of it about each other and that that requires responsibilities well",
    "start": "2149050",
    "end": "2158380"
  },
  {
    "text": "that brings responsibilities so be aware when coupling across boundaries contexts especially because now your marriage is",
    "start": "2158380",
    "end": "2165700"
  },
  {
    "text": "getting slightly out of control it's it's way too broad and if you embark on",
    "start": "2165700",
    "end": "2172240"
  },
  {
    "text": "a if you want to go to micro services it's a journey and whoever will has been",
    "start": "2172240",
    "end": "2179109"
  },
  {
    "text": "preaching micro services for for a long time well I've seen it said so many",
    "start": "2179109",
    "end": "2187480"
  },
  {
    "text": "times like micro services are a journey you don't go head-on the micro services and what do we do guilty as charged",
    "start": "2187480",
    "end": "2193869"
  },
  {
    "text": "micro services from day one let's make it a journey instead build yourself a",
    "start": "2193869",
    "end": "2200380"
  },
  {
    "text": "monolith first try to evolve that in other words wax on wax off get that",
    "start": "2200380",
    "end": "2207550"
  },
  {
    "text": "discipline first before you start evolving to micro services and I don't",
    "start": "2207550",
    "end": "2213310"
  },
  {
    "text": "think this is a coincidence thank you",
    "start": "2213310",
    "end": "2218790"
  },
  {
    "text": "[Applause]",
    "start": "2218790",
    "end": "2224960"
  }
]