[
  {
    "text": "[Music]",
    "start": "1830",
    "end": "9160"
  },
  {
    "text": "what I plan to talk about today is is a little bit of the the kind of technicalities of of an acceptance test",
    "start": "9160",
    "end": "15519"
  },
  {
    "text": "driven approach to software development and the practicalities of building automated high level functional tests",
    "start": "15519",
    "end": "22720"
  },
  {
    "text": "that you can live with and that your system under test can change uh and not",
    "start": "22720",
    "end": "28080"
  },
  {
    "text": "compromise the ability of keeping those tests learning and passing that's a tricky thing to get right and so there",
    "start": "28080",
    "end": "33600"
  },
  {
    "text": "are a number of different uh small things but that add together to make",
    "start": "33600",
    "end": "38680"
  },
  {
    "text": "this possible and that's really the focus of my talk today so first I I",
    "start": "38680",
    "end": "44039"
  },
  {
    "text": "should remind you to to to please vote on the talk and then we'll talk about",
    "start": "44039",
    "end": "49520"
  },
  {
    "text": "what it is that we're really aiming to to to to cover here so this is my model of a deployment pipeline so this is this",
    "start": "49520",
    "end": "55359"
  },
  {
    "text": "is kind of a schematic that I tend to use to to describe what we're talking about and what we're talking about continuous delivery really what we're",
    "start": "55359",
    "end": "61719"
  },
  {
    "text": "aiming to do is that we're trying to get a high level of confidence that uh that",
    "start": "61719",
    "end": "68200"
  },
  {
    "text": "the changes that we just made are likely to be good we can never prove that the changes are good and so what we work is",
    "start": "68200",
    "end": "73759"
  },
  {
    "text": "we work to ffy our changes with automated tests we want to run lots and lots of automated tests and if one of",
    "start": "73759",
    "end": "80119"
  },
  {
    "text": "those tests fails we want to discard the release candidate and move on to uh to to to try to fix the problem that we've",
    "start": "80119",
    "end": "86600"
  },
  {
    "text": "introduced so this is the all of these things really are forms of acceptance",
    "start": "86600",
    "end": "92040"
  },
  {
    "text": "tests um and but really my focus is here on on these acceptance tests and the",
    "start": "92040",
    "end": "98200"
  },
  {
    "text": "these are kind of defined as part of the continuous delivery approach as uh as evaluating the software from the",
    "start": "98200",
    "end": "104920"
  },
  {
    "text": "perspective of of an external user of the system so that's a good place to to to",
    "start": "104920",
    "end": "110439"
  },
  {
    "text": "uh to start we're trying to answer the question does this do what the users would like it to do the earlier stage of",
    "start": "110439",
    "end": "116719"
  },
  {
    "text": "test the kind of tdd stage the unit testing stage is is about asserting whether the software does what the",
    "start": "116719",
    "end": "122240"
  },
  {
    "text": "developers think it should be doing and that's really really important really really valuable and gives us fast feedback but beyond that we also want to",
    "start": "122240",
    "end": "128800"
  },
  {
    "text": "know that it does what the users want it to do we want to be able to use these",
    "start": "128800",
    "end": "134760"
  },
  {
    "text": "things as a kind of automated definition of done we'd like to be able to write one of these things these specifications",
    "start": "134760",
    "end": "140120"
  },
  {
    "text": "for the behavior of the system uh and then we'd like to be able to work until we we finished and when all when that",
    "start": "140120",
    "end": "146959"
  },
  {
    "text": "test passes we know that we're finished it defines the scope of the development",
    "start": "146959",
    "end": "152879"
  },
  {
    "text": "P the piece of work that we're trying to do this is not just about testing this is a tool for Design This is a tool for",
    "start": "152879",
    "end": "158959"
  },
  {
    "text": "development it aids the development process we want to assert that the the",
    "start": "158959",
    "end": "164280"
  },
  {
    "text": "code Works in production like environments it's not good enough just to run tests that say this little piece",
    "start": "164280",
    "end": "171599"
  },
  {
    "text": "works alone I my bet is that if you were Silly enough to let me into it loose in your organization I Could Break Your",
    "start": "171599",
    "end": "178159"
  },
  {
    "text": "software more quickly by changing its configuration than I could by changing the source",
    "start": "178159",
    "end": "183599"
  },
  {
    "text": "code and yet very often we don't bother testing those sorts of changes I want to evaluate those changes I want to deploy",
    "start": "183599",
    "end": "189599"
  },
  {
    "text": "the software into production like environments evaluate that the configuration of the system is also",
    "start": "189599",
    "end": "195959"
  },
  {
    "text": "works the deployment of the system also works the dependencies that all of our software relies on are also in place and",
    "start": "195959",
    "end": "202000"
  },
  {
    "text": "and and working we want to test the deployment of configuration of the whole system",
    "start": "202000",
    "end": "209959"
  },
  {
    "text": "and we want to provide timely feedback if it takes us 3 years to learn whether",
    "start": "209959",
    "end": "215959"
  },
  {
    "text": "the change that we just made is good that's a waste of our time that's that's that's not valuable feedback the shorter the time between",
    "start": "215959",
    "end": "223239"
  },
  {
    "text": "making the change and learning whether the change is good the better the the the more that drives good behaviors in",
    "start": "223239",
    "end": "229680"
  },
  {
    "text": "general I advise aiming for feedback under an hour uh no matter the scale of",
    "start": "229680",
    "end": "236640"
  },
  {
    "text": "the the technical problem and you can do that with some surprisingly complicated technical problems if you apply the",
    "start": "236640",
    "end": "243599"
  },
  {
    "text": "engineuity and think hard about having to uh optimize for short feedback",
    "start": "243599",
    "end": "251239"
  },
  {
    "text": "Cycles the sort of acceptance testing that I'm talking about has probably got a number of different names in in the",
    "start": "253200",
    "end": "259160"
  },
  {
    "text": "context of continuous delivery we we we talk about it as acceptance testing um but it's also being referred to as",
    "start": "259160",
    "end": "265000"
  },
  {
    "text": "acceptance test driven development it's been often talked about in the cont context of behavior driven development",
    "start": "265000",
    "end": "271680"
  },
  {
    "text": "Behavior driven development actually came from somewhere else Behavior driven development was originally an idea that",
    "start": "271680",
    "end": "276880"
  },
  {
    "text": "was designed to try and allow us to teach tdd more effectively and get to the high value of tdd sooner but often B",
    "start": "276880",
    "end": "284840"
  },
  {
    "text": "bdd is now seen it's the ideas certainly draw align very nicely with the ideas of",
    "start": "284840",
    "end": "290039"
  },
  {
    "text": "test room development it's just the scope of the test that that is different really and specification by example",
    "start": "290039",
    "end": "296400"
  },
  {
    "text": "actually my favorite description of what we're trying to do is this last one execute specifications these are not really tests we're trying to Define",
    "start": "296400",
    "end": "302840"
  },
  {
    "text": "executable specifications for the behavior of our system I have a friend who has a uh a",
    "start": "302840",
    "end": "311240"
  },
  {
    "text": "client that's an airline and they've been using this approach uh and the when",
    "start": "311240",
    "end": "316960"
  },
  {
    "text": "when a member of the public phones up the support organization at this Airline and talk to the support Personnel the",
    "start": "316960",
    "end": "323840"
  },
  {
    "text": "the the information that the support people are using on screen are the executable specifications for the",
    "start": "323840",
    "end": "329199"
  },
  {
    "text": "behavior of the the system they describe the behavior of the system this is a very very strong assertion that the",
    "start": "329199",
    "end": "335600"
  },
  {
    "text": "version of of the system that is in production passed this test it fulfilled",
    "start": "335600",
    "end": "340680"
  },
  {
    "text": "this specification the person on the phone knows that that's how the system works because the specification says",
    "start": "340680",
    "end": "346360"
  },
  {
    "text": "that's how the system works that's what I'm talking about so I like to think a good",
    "start": "346360",
    "end": "352440"
  },
  {
    "text": "acceptance test is an executable specification for the behavior of the system and that's a good mental model for going in and thinking about these",
    "start": "352440",
    "end": "358880"
  },
  {
    "text": "things another mental model I I think of fondly",
    "start": "358880",
    "end": "364919"
  },
  {
    "text": "is this one and this is the idea of software development as a series of feedback loops at the outside we have",
    "start": "364919",
    "end": "370880"
  },
  {
    "text": "the crucial feedback loop that we try to optimize in continuous delivery have an idea get that idea into the hands of our",
    "start": "370880",
    "end": "377440"
  },
  {
    "text": "users and figure out what our users make of the idea and we work to make that the feedback loop from having an idea and",
    "start": "377440",
    "end": "384599"
  },
  {
    "text": "getting that idea into the hands of our users as short as and efficient as possible at the inside is the the tdd",
    "start": "384599",
    "end": "391080"
  },
  {
    "text": "feedback loop the test driven development feedback loop we're going to write a test we're going to see it fail we're going to write some code to make it pass we're going to refactor we're",
    "start": "391080",
    "end": "397599"
  },
  {
    "text": "going to commit we're going to move on and that's happening in a few second a few minutes usually and then in",
    "start": "397599",
    "end": "403240"
  },
  {
    "text": "between is this feedback loop and this is the one that I'm referring to talking about today this is about the ex these",
    "start": "403240",
    "end": "408960"
  },
  {
    "text": "executable specifications for the behavior our system we're going to examine the behavior of our software",
    "start": "408960",
    "end": "414479"
  },
  {
    "text": "from the perspective of an external user of our system in production like environments and evaluate it and understand the impact of our",
    "start": "414479",
    "end": "422440"
  },
  {
    "text": "changes so what so what's the problem why are you all here why am I talking to you about this this seems like a good",
    "start": "422919",
    "end": "428639"
  },
  {
    "text": "idea right why don't we just do this why is it so hard well the problem is is",
    "start": "428639",
    "end": "433720"
  },
  {
    "text": "that what tends to happen people have been trying to do this kind of thing for a long time and what tends to happen is",
    "start": "433720",
    "end": "439400"
  },
  {
    "text": "that when the system under test changes it breaks the",
    "start": "439400",
    "end": "444599"
  },
  {
    "text": "tests that's a hard problem to solve and what we're really talking about from a from a computer science point of view is",
    "start": "444680",
    "end": "450800"
  },
  {
    "text": "a problem of coupling the tests in this in in this example are too tightly coupled to the system under test",
    "start": "450800",
    "end": "458120"
  },
  {
    "text": "therefore one of our strategies is to try and reduce that coupling to to work in a ways where we our test cases are",
    "start": "458120",
    "end": "465560"
  },
  {
    "text": "Loosely coupled with respect to the system under test test can be complex to develop we",
    "start": "465560",
    "end": "471360"
  },
  {
    "text": "want to be able to we ideally if we're going to use these things as a fundamental part of our development process we want to be able to have tens",
    "start": "471360",
    "end": "477479"
  },
  {
    "text": "of thousands of these test cases be able to develop them very quickly and run them very quickly to assert the",
    "start": "477479",
    "end": "483520"
  },
  {
    "text": "behavior of our systems and so we want to be able to create these things quickly and efficiently we don't have to",
    "start": "483520",
    "end": "488560"
  },
  {
    "text": "spend hours and hours and hours and days trying to come up with each individual test case so a lot of this is about is is",
    "start": "488560",
    "end": "496000"
  },
  {
    "text": "about a problem of design and we're going to talk about that in some detail through the rest of the talk meanwhile I",
    "start": "496000",
    "end": "502560"
  },
  {
    "text": "I think the history of this kind of f functional testing is littered with bad examples I am I particularly loathe UI",
    "start": "502560",
    "end": "511000"
  },
  {
    "text": "record and Playback systems I I I think that they're just so fragile so difficult to maintain and I think these",
    "start": "511000",
    "end": "517320"
  },
  {
    "text": "are anti patterns I think using production data in our systems is an anti pattern I want to be able to test I",
    "start": "517320",
    "end": "524039"
  },
  {
    "text": "want to evaluate the behavior of my system precisely I don't want to just randomly throw data at it and see what happens and so I think there are a lot",
    "start": "524039",
    "end": "530880"
  },
  {
    "text": "of bad patterns that are around and commonly practiced and we're going to talk some more about those things",
    "start": "530880",
    "end": "536959"
  },
  {
    "text": "too a fundamental part of this from a from a process point of view is a matter",
    "start": "536959",
    "end": "542160"
  },
  {
    "text": "of who owns the test I think it's it's it's important to",
    "start": "542160",
    "end": "547600"
  },
  {
    "text": "recognize and and and a vital part of of establishing these effective feedback loops that the developers are in the",
    "start": "547600",
    "end": "554839"
  },
  {
    "text": "loop the developers are the people that will make change changes that will break",
    "start": "554839",
    "end": "560959"
  },
  {
    "text": "tests therefore they are the people that need to be responsible for making the",
    "start": "560959",
    "end": "566040"
  },
  {
    "text": "test pass when that happens we need to close the feedback loop we need to",
    "start": "566040",
    "end": "572120"
  },
  {
    "text": "actually slow the developers down if they're making changes that are breaking stuff we've got to slow them down to get the to to fix them we got to keep the",
    "start": "572120",
    "end": "578240"
  },
  {
    "text": "software working if these things genuinely are executable specifications of the",
    "start": "578240",
    "end": "583519"
  },
  {
    "text": "system executable specifications for the behavior of the system then when a developer introduces a change that",
    "start": "583519",
    "end": "590320"
  },
  {
    "text": "breaks a test what that means is that the the system no longer fulfills its",
    "start": "590320",
    "end": "595920"
  },
  {
    "text": "requirements it's no longer fulfilling its Behavioral contract and that's where we'd like to get to that's what that's",
    "start": "595920",
    "end": "602200"
  },
  {
    "text": "the way in which we'd like to work so this last one i' I I've been working in software development as as a developer",
    "start": "602200",
    "end": "609680"
  },
  {
    "text": "and a technician for for over 35 years and this last one I have never ever seen",
    "start": "609680",
    "end": "615399"
  },
  {
    "text": "this work I think this is one of the most toxic ideas in our industry the idea of having a separate QA team writing automated tests divorced from",
    "start": "615399",
    "end": "622880"
  },
  {
    "text": "the development team what happens is that the QA team write a few tests and",
    "start": "622880",
    "end": "628680"
  },
  {
    "text": "and they get them working and then the development team move on they break the they make changes that break the tests and then for the rest of their existence",
    "start": "628680",
    "end": "635440"
  },
  {
    "text": "the QA team spends their effort trying to run behind and trying to catch up and trying to patch things together to make",
    "start": "635440",
    "end": "640639"
  },
  {
    "text": "the test pass and they almost never do that doesn't give you good feedback we need to close the loop we need to make",
    "start": "640639",
    "end": "647040"
  },
  {
    "text": "developers responsible for the tests anybody can write the test these These are specifications Whoever has the",
    "start": "647040",
    "end": "653279"
  },
  {
    "text": "clearest idea of what the requirement is from the perspective of an external user of the system they can write the test",
    "start": "653279",
    "end": "658839"
  },
  {
    "text": "but as soon as that test begins executing developers are responsible for it and they are the ones that will make",
    "start": "658839",
    "end": "665440"
  },
  {
    "text": "changes to make it pass if if they introduce a change that makes it fail one of the definitions of",
    "start": "665440",
    "end": "671519"
  },
  {
    "text": "continuous delivery is working in a way that our software is always in a releasable state this is a key part of",
    "start": "671519",
    "end": "678959"
  },
  {
    "text": "that the rest of my talk really focuses around this and this is a list of",
    "start": "678959",
    "end": "684279"
  },
  {
    "text": "properties that I think of as properties of good acceptance tests a lot of the",
    "start": "684279",
    "end": "690200"
  },
  {
    "text": "stuff that I'm going to put before you is based on an experience that I had working in a a reasonably complicate",
    "start": "690200",
    "end": "696959"
  },
  {
    "text": "complex environment building one of the highest performance exchanges in the world we built the entire enterprise system and used these this kind of",
    "start": "696959",
    "end": "703639"
  },
  {
    "text": "strategy so I want you to just keep that in mind we're not talking about simple trivial systems here we're talking about",
    "start": "703639",
    "end": "710040"
  },
  {
    "text": "big complicated real world Enterprise class systems uh with performance",
    "start": "710040",
    "end": "715959"
  },
  {
    "text": "characteristics that would scare you they scared me when we were working on it so I want to talk you know I want to",
    "start": "715959",
    "end": "721360"
  },
  {
    "text": "talk a little bit about in that context and and this is kind of informed by that learning I think it's fair to say that",
    "start": "721360",
    "end": "726399"
  },
  {
    "text": "that that organization which was called elmax we probably world class at automated testing we had tens of",
    "start": "726399",
    "end": "732920"
  },
  {
    "text": "thousands of these things running and we'll get into that more later so here are the properties so I think we should",
    "start": "732920",
    "end": "738040"
  },
  {
    "text": "be looking focusing our testing on what we want to assert not how it is that the",
    "start": "738040",
    "end": "743519"
  },
  {
    "text": "system under test achieves that we want to be able we want our test to be isolated from one another we'd like to",
    "start": "743519",
    "end": "748760"
  },
  {
    "text": "be able to lots of these and if we want to get fast feedback we probably want to run them in parallel and therefore they",
    "start": "748760",
    "end": "754560"
  },
  {
    "text": "can't we can't afford them to bump into one another we want them to be repeatable we'd like to be able to run",
    "start": "754560",
    "end": "759800"
  },
  {
    "text": "the same test over and over again and get reliable consistent",
    "start": "759800",
    "end": "765199"
  },
  {
    "text": "results in order to do this one of the things that really helps and to help us",
    "start": "765199",
    "end": "770360"
  },
  {
    "text": "anybody uh write the test and to help us understand what the tests mean in the context of the problem domain is we use",
    "start": "770360",
    "end": "776519"
  },
  {
    "text": "the language of the problem domain I'm going to introduced the idea of of using domain specific languages to express our",
    "start": "776519",
    "end": "783959"
  },
  {
    "text": "needs in in in in this kind of automated testing and we want to be able to test any change we want to be able to",
    "start": "783959",
    "end": "789680"
  },
  {
    "text": "evaluate our software in almost any context that we can think of and EV and understand the impact of that we're",
    "start": "789680",
    "end": "795360"
  },
  {
    "text": "going to talk about some cases around that there are more than than we cover but some we'd also like to be these",
    "start": "795360",
    "end": "800920"
  },
  {
    "text": "things to be efficient we can't afford to spend days or weeks or even hours",
    "start": "800920",
    "end": "806519"
  },
  {
    "text": "waiting for a result we want the fastest feedback that we can get if we can get feedback in under an hour that's a",
    "start": "806519",
    "end": "811920"
  },
  {
    "text": "different that's a gamechanging level of feedback if after an hour we can be in a position that there's no more work for",
    "start": "811920",
    "end": "818800"
  },
  {
    "text": "us to do before we push a change out into production however complex a system that's a game-changing level of",
    "start": "818800",
    "end": "826399"
  },
  {
    "text": "feedback so let's start let's go through the list so we're going to focus on what not how here's a here's a schematic of",
    "start": "826399",
    "end": "832920"
  },
  {
    "text": "the system that I was talking about the details of this don't very much don't matter very much I'm going to be talking",
    "start": "832920",
    "end": "838880"
  },
  {
    "text": "about this bit the fix API for those of you that are not from the finance industry and don't know what",
    "start": "838880",
    "end": "845279"
  },
  {
    "text": "fix is doesn't matter the mental model for this is imagine that I'm talking about a rest API it's not a rest API",
    "start": "845279",
    "end": "852480"
  },
  {
    "text": "it's different but semantically it might as well be in the context of this talk okay so let's imagine we got a system",
    "start": "852480",
    "end": "860040"
  },
  {
    "text": "like this we've got a number of different communities of users a number of channels of interaction through the system and we'd like to be able to",
    "start": "860040",
    "end": "866160"
  },
  {
    "text": "evaluate the software through all of those channels so typically if we're going to write tests against a system",
    "start": "866160",
    "end": "871880"
  },
  {
    "text": "like that this is what we' do we'd introduce a whole bunch of test cases that that that that describe how you",
    "start": "871880",
    "end": "878160"
  },
  {
    "text": "know what it is that we want to test and how it is that we're going to interact with the system on test now the problem",
    "start": "878160",
    "end": "883399"
  },
  {
    "text": "with this is if a change happens in one of these channels of communications and",
    "start": "883399",
    "end": "889000"
  },
  {
    "text": "invalidates a whole bunch of these test cases that talk through that channel the only thing that we can do to",
    "start": "889000",
    "end": "895320"
  },
  {
    "text": "fix that is go to each of these individual test cases and fix up those test cases that's going to be",
    "start": "895320",
    "end": "901759"
  },
  {
    "text": "complicated because they're going to be complicated bits of code because they're they're they're worrying about two different things if if you care deeply",
    "start": "901759",
    "end": "908560"
  },
  {
    "text": "about design and separation ideas like separation of concerns we're conflating concerns we're conflating what it is",
    "start": "908560",
    "end": "914240"
  },
  {
    "text": "that we're trying to express with how it is that we're interacting with the system under test and that always adds more complexity so what do we do in a",
    "start": "914240",
    "end": "921639"
  },
  {
    "text": "problem like this in software in software engineering well we introduce the level of indirection and raise the",
    "start": "921639",
    "end": "927079"
  },
  {
    "text": "level of abstraction so here are here here's our bunch of channels that representing different",
    "start": "927079",
    "end": "933839"
  },
  {
    "text": "communities of users and we provide a a device driver if you like a stub a",
    "start": "933839",
    "end": "940560"
  },
  {
    "text": "channel an abstraction that represents that Concept in the terminology that the",
    "start": "940560",
    "end": "946079"
  },
  {
    "text": "that that fulfills the needs of test cases now if this system changes and",
    "start": "946079",
    "end": "952040"
  },
  {
    "text": "invalidates the assumptions in the test cases we only have one place to fix it because we because all of these things",
    "start": "952040",
    "end": "957319"
  },
  {
    "text": "come through this one channel of communication we can fix it in one place don't worry I am going to go into",
    "start": "957319",
    "end": "963839"
  },
  {
    "text": "more detail of what I mean by that as we go through what you tend to find as you as",
    "start": "963839",
    "end": "969800"
  },
  {
    "text": "you make this kind of abstraction is that you find that you you you now got this placeholder for infrastructure",
    "start": "969800",
    "end": "976360"
  },
  {
    "text": "you've got you're not just talking about test cases you're talking about some test infrastructure there are some supporting design ideas and tools and",
    "start": "976360",
    "end": "984199"
  },
  {
    "text": "Facilities that that enable this kind of thinking this kind of abstraction and",
    "start": "984199",
    "end": "989560"
  },
  {
    "text": "we're going to talk more about these things over time these little green blobs that of different kinds that are going to help us achieve this level of",
    "start": "989560",
    "end": "996399"
  },
  {
    "text": "abstraction and maintain it so the the idea is is that we've got",
    "start": "996399",
    "end": "1001959"
  },
  {
    "text": "this test infrastructure that's shared between the test cases so you can you can go and touch these things uh you can",
    "start": "1001959",
    "end": "1009399"
  },
  {
    "text": "go and fix problems in in in one",
    "start": "1009399",
    "end": "1013880"
  },
  {
    "text": "place we want to we want to we want to think about these things in terms of you know the the behavior of the system so",
    "start": "1017600",
    "end": "1025400"
  },
  {
    "text": "here's here's you know here's a list of things and just to confuse you some of these things are wrong I don't think every test should control the start",
    "start": "1025400",
    "end": "1032240"
  },
  {
    "text": "conditions that's a great starting point for unit testing and it's a poor starting point for this kind of",
    "start": "1032240",
    "end": "1038400"
  },
  {
    "text": "functional testing because usually starting up the system is expensive we'd like to be able to maybe share out",
    "start": "1038400",
    "end": "1045240"
  },
  {
    "text": "starting up the system and maybe certainly if it's a multi-user system we'd like to be able to have lots of different we' like to be able to start",
    "start": "1045240",
    "end": "1051000"
  },
  {
    "text": "the system at once and then have lots of different tests run against the same system that's going to have some",
    "start": "1051000",
    "end": "1056320"
  },
  {
    "text": "implications of its own uh but we we we'd like to be able to separate those two decisions sometimes we want might",
    "start": "1056320",
    "end": "1062360"
  },
  {
    "text": "want to start the system for one test case but sometimes we don't so we'd like to be able to have the",
    "start": "1062360",
    "end": "1069200"
  },
  {
    "text": "choice we want the test to be a rehearsal for production release we' like by the time a release candidate",
    "start": "1069200",
    "end": "1075520"
  },
  {
    "text": "gets to the point of deployment into production that's a non event because this release candidate has already been",
    "start": "1075520",
    "end": "1082280"
  },
  {
    "text": "deployed using this version of the deployment tools and this configuration of the infrastructure many times during",
    "start": "1082280",
    "end": "1087679"
  },
  {
    "text": "its journey and validation through the deployment pipeline if we do these kinds of things",
    "start": "1087679",
    "end": "1093200"
  },
  {
    "text": "what this leads to is it gives us this nice opportunity for in future speeding up our testing feedback cycle by",
    "start": "1093200",
    "end": "1099120"
  },
  {
    "text": "parallelizing things and and sharing the startup overhead as as I",
    "start": "1099120",
    "end": "1105039"
  },
  {
    "text": "mentioned let's move on to the the next in our list so we'd like our test to be isolated from other tests now one caveat",
    "start": "1105400",
    "end": "1113280"
  },
  {
    "text": "here is I spent most of my career working in kind of multi-user systems of one form or another if you're writing",
    "start": "1113280",
    "end": "1118600"
  },
  {
    "text": "software for for an individual person that's dedicated to them which is probably getting increasingly unusual",
    "start": "1118600",
    "end": "1124799"
  },
  {
    "text": "these days but if you're writing software like that some of these these bits of advice don't quite fit but for",
    "start": "1124799",
    "end": "1130080"
  },
  {
    "text": "the rest of us this this these ideas these ideas kind of work I think so",
    "start": "1130080",
    "end": "1135120"
  },
  {
    "text": "let's start thinking about test isolation I I think that any form of test in whatever domain is evaluating",
    "start": "1135120",
    "end": "1141679"
  },
  {
    "text": "something in controlled circumstances and so the control part is",
    "start": "1141679",
    "end": "1149080"
  },
  {
    "text": "important isolation is important in this context in multiple levels we want to be able to isolate the system under",
    "start": "1149080",
    "end": "1156080"
  },
  {
    "text": "test we want to be able to just be testing the stuff that's the boundary of our responsibility we want to be able to",
    "start": "1156080",
    "end": "1162000"
  },
  {
    "text": "isolate test cases from one another as I said before we'd like to be able to run many of these in parallel and not have",
    "start": "1162000",
    "end": "1167720"
  },
  {
    "text": "them bump into one another and we'd like to be able to isolate test cases from themselves so we can run the same test case over and over",
    "start": "1167720",
    "end": "1173520"
  },
  {
    "text": "again I think it's useful to think in these terms if you don't do this what",
    "start": "1173520",
    "end": "1178799"
  },
  {
    "text": "tends to happen is that when you start to scale up and get faster feedback Cycles you find all sorts of resource",
    "start": "1178799",
    "end": "1184480"
  },
  {
    "text": "sharing conflicts and uh um tests running into one another when you try to",
    "start": "1184480",
    "end": "1190679"
  },
  {
    "text": "parallelize and that starts to make it more difficult to speed up that's a very common attribute of people that haven't",
    "start": "1190679",
    "end": "1195720"
  },
  {
    "text": "thought about isolation ahead of time",
    "start": "1195720",
    "end": "1199919"
  },
  {
    "text": "my things stopped working so let's start with thinking",
    "start": "1201280",
    "end": "1207200"
  },
  {
    "text": "about isolating isolation and here's one example of what I'm talking about is this is this tends to be very common in",
    "start": "1207200",
    "end": "1213760"
  },
  {
    "text": "large Enterprises let's imagine that we are working on system B and system B is",
    "start": "1213760",
    "end": "1219360"
  },
  {
    "text": "one of these systems that that there's other system upstream and another system Downstream it's in the middle and what",
    "start": "1219360",
    "end": "1225240"
  },
  {
    "text": "what's often recommended in these sorts of examples is you've got to test the whole thing end to end you got to evaluate all of these things together",
    "start": "1225240",
    "end": "1232760"
  },
  {
    "text": "now there's a problem with that if I want to be able to precisely specify the state that my system is in in order to",
    "start": "1232760",
    "end": "1239360"
  },
  {
    "text": "be able to test it and I'm only doing that via another system I can't I can't",
    "start": "1239360",
    "end": "1245919"
  },
  {
    "text": "be precise enough there are a whole raft of different kinds of scenarios that I",
    "start": "1245919",
    "end": "1251200"
  },
  {
    "text": "cannot simulate by going through an external system first if I want to be able to simulate",
    "start": "1251200",
    "end": "1258760"
  },
  {
    "text": "system a sending me garbage or the communication channel to system C being down I can't simulate those I can't test",
    "start": "1258760",
    "end": "1265760"
  },
  {
    "text": "my system in those in those sorts of scenarios if I'm testing the whole thing end to",
    "start": "1265760",
    "end": "1271679"
  },
  {
    "text": "end so I haven't really got a very good clear way of getting the system under",
    "start": "1271679",
    "end": "1278840"
  },
  {
    "text": "test into the state that I want it to be in worse than that if I'm working on",
    "start": "1278840",
    "end": "1284480"
  },
  {
    "text": "system B I'm not going to be an expert in system a and system system see and so",
    "start": "1284480",
    "end": "1290440"
  },
  {
    "text": "the degree to which I can exert control even if there are things that I could do through there is going to be limited",
    "start": "1290440",
    "end": "1296320"
  },
  {
    "text": "based on my understanding we've got to compartmentalize our understanding so that things can fit into our",
    "start": "1296320",
    "end": "1302279"
  },
  {
    "text": "heads so this is a problem it means that the system under test is is is not in",
    "start": "1302279",
    "end": "1307520"
  },
  {
    "text": "this is not in a controllable State when we when we're doing this kind of testing so I I think this is an anti- pattern",
    "start": "1307520",
    "end": "1313559"
  },
  {
    "text": "this can't be the basis for um a a a",
    "start": "1313559",
    "end": "1318640"
  },
  {
    "text": "solid basis for Effective acceptance testing what we'd really like instead is",
    "start": "1318640",
    "end": "1324120"
  },
  {
    "text": "something more like this we'd like to be able to have our test cases as close to the system under",
    "start": "1324120",
    "end": "1331200"
  },
  {
    "text": "test as we can and then capture outputs and verify that we're getting what we expect we'd like to be able to simulate",
    "start": "1331200",
    "end": "1339080"
  },
  {
    "text": "all of these different kinds of scenarios we'd like to be able to be inject crap data and and and and",
    "start": "1339080",
    "end": "1344919"
  },
  {
    "text": "simulate these you know Communications failures whatever it is that we care about we'd like to be able to take control we'd like to be able to you",
    "start": "1344919",
    "end": "1351760"
  },
  {
    "text": "think about kind of putting probes around the system under under test which means that we got to be very clear about",
    "start": "1351760",
    "end": "1357000"
  },
  {
    "text": "where the boundaries for our system are now the problem is is that when",
    "start": "1357000",
    "end": "1363480"
  },
  {
    "text": "organizations say that what we' like is you to do this is that they're worrying about these bits they're worrying about",
    "start": "1363480",
    "end": "1369640"
  },
  {
    "text": "those interfaces changing and that's a real concern it's a it's a real issue one of the strategies for this that Mary",
    "start": "1369640",
    "end": "1376480"
  },
  {
    "text": "talked about in the Keynotes uh uh talk here is make sure that those interfaces are loose based on loose coupled uh",
    "start": "1376480",
    "end": "1383279"
  },
  {
    "text": "protocols so you can use a messaging system and that gives you a little bit wigg but still it's it's a it's a real",
    "start": "1383279",
    "end": "1389320"
  },
  {
    "text": "problem so what do we do to verify those interfaces I think that what we'd really",
    "start": "1389320",
    "end": "1394559"
  },
  {
    "text": "like is that we like a series of tests each focused on the individual systems as we've just described if we do if",
    "start": "1394559",
    "end": "1401480"
  },
  {
    "text": "we're still doing this from the perspective of system B though what we'd like to know of external system a is",
    "start": "1401480",
    "end": "1407440"
  },
  {
    "text": "does it fulfill our expectations of its protocol of",
    "start": "1407440",
    "end": "1412760"
  },
  {
    "text": "communication with us and when we take that Focus the number of tests that we",
    "start": "1412760",
    "end": "1417880"
  },
  {
    "text": "need to run is actually quite small so we can Define some tests that",
    "start": "1417880",
    "end": "1423600"
  },
  {
    "text": "say is the interface still the same and maybe even we can go as far as to give",
    "start": "1423600",
    "end": "1429440"
  },
  {
    "text": "those tests to team a and they can run their tests as part of their continuous integration infrastructure and if they",
    "start": "1429440",
    "end": "1435240"
  },
  {
    "text": "make a change that invalidates our Assumption of their interface they know that we've now got an integration",
    "start": "1435240",
    "end": "1440880"
  },
  {
    "text": "problem this gives us the the facility to do all of our careful thorough detailed test testing getting the system",
    "start": "1440880",
    "end": "1448480"
  },
  {
    "text": "into under test into precisely the state that we'd like it to be in but also some",
    "start": "1448480",
    "end": "1453520"
  },
  {
    "text": "defense of the interfaces between us um I've I've used this strategy many times",
    "start": "1453520",
    "end": "1459440"
  },
  {
    "text": "inter including with external third parties and that's been enough for me so far I haven't found I haven't found a",
    "start": "1459440",
    "end": "1465080"
  },
  {
    "text": "problem where that that's that's that's that's uh that's cause a difficulty using that that",
    "start": "1465080",
    "end": "1472120"
  },
  {
    "text": "strategy so as I said before on the whole I'm kind of working from the Assumption of multi-user",
    "start": "1474840",
    "end": "1480960"
  },
  {
    "text": "systems we want to be able to isolate test cases we want them we want to be able to run lots of these tests and what",
    "start": "1480960",
    "end": "1486559"
  },
  {
    "text": "we'd really like is we like to be able to start the system at once and run then run lots of these tests in order to do",
    "start": "1486559",
    "end": "1491880"
  },
  {
    "text": "that we need to isolate the test from one another we can't afford them to share resources we don't want them to be",
    "start": "1491880",
    "end": "1497559"
  },
  {
    "text": "uh writing to you know the same files or the same data sets or the same records in the databases or whatever it might be",
    "start": "1497559",
    "end": "1503520"
  },
  {
    "text": "and that's kind of tricky when we think about a whole system that we're evaluating one of the nice strategies to",
    "start": "1503520",
    "end": "1509240"
  },
  {
    "text": "do if we are talking about a multiuser system is something that I call functional aliasing so you use natural",
    "start": "1509240",
    "end": "1516039"
  },
  {
    "text": "boundaries in the system to isolate tests from one another this is another one of those kind of 8020 kind of",
    "start": "1516039",
    "end": "1522360"
  },
  {
    "text": "approach actually it's probably more like a 955 but for the vast majority of test cases you can use this kind of",
    "start": "1522360",
    "end": "1528399"
  },
  {
    "text": "functional isolation and you get no problems and what I'm talking about so imagine that we were testing Amazon so",
    "start": "1528399",
    "end": "1533919"
  },
  {
    "text": "if we were testing Amazon every single test would create a new account and a new book or product and then work there",
    "start": "1533919",
    "end": "1540080"
  },
  {
    "text": "if we were testing eBay we create a new account and a new auction for every test case and if we were testing GitHub we",
    "start": "1540080",
    "end": "1545640"
  },
  {
    "text": "create a new account and a new repository for every test case you get a kind of weird profile in the system under test because you have lots of",
    "start": "1545640",
    "end": "1553120"
  },
  {
    "text": "repositories or lots of books created and lots of users created but it's a really nice way of isolating the systems",
    "start": "1553120",
    "end": "1559240"
  },
  {
    "text": "really simply from one the test cases really simply from one another if you want to do that then we",
    "start": "1559240",
    "end": "1567520"
  },
  {
    "text": "you know there's another step we would like to have these repeatable results we'd like to be able to run the same test case over and over",
    "start": "1567520",
    "end": "1574679"
  },
  {
    "text": "again and so if I run the same the same test twice I should get the same result",
    "start": "1574679",
    "end": "1580520"
  },
  {
    "text": "here's a Cheesy example so here's somebody trying trying to write a test case to uh buy my book so we've got a",
    "start": "1580520",
    "end": "1587840"
  },
  {
    "text": "store and we're creating a book in the scope of the test case then we're going to place an order for the book and then we're going to assert that the order was",
    "start": "1587840",
    "end": "1594360"
  },
  {
    "text": "placed now the bit that I'm worried about here is this bit so they're creating a book if I run this test case",
    "start": "1594360",
    "end": "1601880"
  },
  {
    "text": "and I just read that literally and end up somewhere storing some information in",
    "start": "1601880",
    "end": "1607640"
  },
  {
    "text": "the system under the test that represents that book like that then the next time I come to run that test case",
    "start": "1607640",
    "end": "1614840"
  },
  {
    "text": "I'm now in a different state now now when I run that test case the book already exists last time I just",
    "start": "1614840",
    "end": "1622120"
  },
  {
    "text": "created it now it already exists maybe another T the test has changed the state that that book is in maybe it's sold out",
    "start": "1622120",
    "end": "1627880"
  },
  {
    "text": "or something like that because of a test case that was run and we're going to get a collision we're going to get a problem a FL flaky test case here so that's a",
    "start": "1627880",
    "end": "1635799"
  },
  {
    "text": "really simple strategy now so instead of doing it this way what we do is that the in the test case in the instance of a",
    "start": "1635799",
    "end": "1642640"
  },
  {
    "text": "test case our infrastructure remember our test infrastructure our infrastructure is going to read this as a um a request rather",
    "start": "1642640",
    "end": "1651640"
  },
  {
    "text": "than instruction it says okay you'd like a book it's called continuous delivery but you don't really care that it's continuous delivery I know you don't",
    "start": "1651640",
    "end": "1657440"
  },
  {
    "text": "really care so I'm going to make up a different name and I'm going to map it to the name",
    "start": "1657440",
    "end": "1662799"
  },
  {
    "text": "that you want in the scope of this test run but inside the system under test it's going to be different and you don't",
    "start": "1662799",
    "end": "1669200"
  },
  {
    "text": "care so the next time I run I'm going to get a different name and now I've got test aoling so just using the aliasing",
    "start": "1669200",
    "end": "1675799"
  },
  {
    "text": "pH facil facility for all of these functional entities allows us to run these test cases in parallel and",
    "start": "1675799",
    "end": "1682440"
  },
  {
    "text": "separate from one another it's trivial trivially simple idea but it's really",
    "start": "1682440",
    "end": "1688360"
  },
  {
    "text": "quite effective so a good starting point use",
    "start": "1688360",
    "end": "1694320"
  },
  {
    "text": "functional isolation entities always Alias them always just mangle the name in some way so that so the name is going",
    "start": "1694320",
    "end": "1700799"
  },
  {
    "text": "to be unique for every text execution then you can run the same test over and over again and you're not going to get any problems",
    "start": "1700799",
    "end": "1708120"
  },
  {
    "text": "so we'd like our test to be repeatable we want to be able to use testing as a falsification mechanism we'd like to be",
    "start": "1710840",
    "end": "1717440"
  },
  {
    "text": "able to as soon as a test fails we're going to uh discard the release candidate so we want to be able to trust",
    "start": "1717440",
    "end": "1723760"
  },
  {
    "text": "the tests I'd argue that the test tests of any automated tests of any form are",
    "start": "1723760",
    "end": "1730440"
  },
  {
    "text": "actually only valuable when they're failing you can have as many tests as you like and if they're all passing you",
    "start": "1730440",
    "end": "1736919"
  },
  {
    "text": "don't know the tests might be you might have missed the key thing what they they're only really conveying",
    "start": "1736919",
    "end": "1742120"
  },
  {
    "text": "information they you get a probability that maybe you're okay if you got lots of test cases that are passing but you",
    "start": "1742120",
    "end": "1748240"
  },
  {
    "text": "only really know the state of your system when a test fails and tells you that your system's not good enough so we",
    "start": "1748240",
    "end": "1753440"
  },
  {
    "text": "need our test to be reliable we can't afford flaky tests we can't we can't afford tests that sometimes work and sometimes",
    "start": "1753440",
    "end": "1760640"
  },
  {
    "text": "don't what that means is that we got to control again be very precise and very specific about the control of our system",
    "start": "1761600",
    "end": "1768120"
  },
  {
    "text": "let's imagine that we've got a system like this we've got we've got a our system under test and we've got some",
    "start": "1768120",
    "end": "1774279"
  },
  {
    "text": "external system that we're talking about we were talking before where we kind of these end to endend tests which we don't like very much and let's imagine that we",
    "start": "1774279",
    "end": "1781080"
  },
  {
    "text": "learned to write software not from Visual Basic for dummies but for something else and and we we we we we we",
    "start": "1781080",
    "end": "1787279"
  },
  {
    "text": "didn't just tightly couple those two things we have a local interface between here that an abstraction of the communication between this system and",
    "start": "1787279",
    "end": "1794000"
  },
  {
    "text": "this system in some way further beyond that we've got the communication Channel between between these two systems you",
    "start": "1794000",
    "end": "1799159"
  },
  {
    "text": "know the the the rest API or the uh the sockets or whatever it is the the the",
    "start": "1799159",
    "end": "1804519"
  },
  {
    "text": "the mechanism for communication between these two systems what we'd like to be able to do",
    "start": "1804519",
    "end": "1811440"
  },
  {
    "text": "in the scope of a test as we've said is that we'd like to dump the external system we don't really want it to be",
    "start": "1811440",
    "end": "1816640"
  },
  {
    "text": "there it's just clutter and it doesn't give us sufficient control it doesn't give us the it doesn't really give us",
    "start": "1816640",
    "end": "1823159"
  },
  {
    "text": "repeatability it doesn't give us the ability to really get the system under test into the state that we're into and",
    "start": "1823159",
    "end": "1829120"
  },
  {
    "text": "that we want it to be in and evaluate it in control circumstances so what we can do then",
    "start": "1829120",
    "end": "1835000"
  },
  {
    "text": "through configuration we can use the same real world communication um",
    "start": "1835000",
    "end": "1840880"
  },
  {
    "text": "technology uh but we can we can fake it we can stub out those external communication pieces again remember",
    "start": "1840880",
    "end": "1847559"
  },
  {
    "text": "these these probes that we're putting around our system every point of external communication we want to fake it we want to plug in a a a stub a a a a",
    "start": "1847559",
    "end": "1857440"
  },
  {
    "text": "fake version of the external system so that we can fake inputs and collect outputs and make assertions on",
    "start": "1857440",
    "end": "1865638"
  },
  {
    "text": "them what tends to happen as we're doing this so here's here's our picture again here's uh here's the public interface to",
    "start": "1866960",
    "end": "1873360"
  },
  {
    "text": "our system and here's the scope of our system under test we've got our test infrastructure some test cases what's",
    "start": "1873360",
    "end": "1879200"
  },
  {
    "text": "really nice for these stubs is that we want to plug these into our test infrastructure these are a distributed",
    "start": "1879200",
    "end": "1885120"
  },
  {
    "text": "part of our test infrastructure we'd like to be able to express ideas in our test cases that say I expect this",
    "start": "1885120",
    "end": "1893159"
  },
  {
    "text": "outcome I would like the external system to provide this input and we'd like to",
    "start": "1893159",
    "end": "1898440"
  },
  {
    "text": "do do all of that through from a test case in an abstract way and hide that complexity through some back channel of",
    "start": "1898440",
    "end": "1903880"
  },
  {
    "text": "communication between the test infrastructure and the uh the test",
    "start": "1903880",
    "end": "1909840"
  },
  {
    "text": "stubs I've been leading you in the direction of this already really and I I I think this is crucial using the",
    "start": "1911000",
    "end": "1916960"
  },
  {
    "text": "language of the problem domain Sol helps us solve a lot of these problems in particular it gives us the right level",
    "start": "1916960",
    "end": "1923480"
  },
  {
    "text": "of abstraction to be able to express these ideas in a solution free way it allows us to",
    "start": "1923480",
    "end": "1931679"
  },
  {
    "text": "Define these executable specifications without describing how the system",
    "start": "1931679",
    "end": "1936919"
  },
  {
    "text": "works so it it also helps us create these test cases very quickly it allows",
    "start": "1936919",
    "end": "1943480"
  },
  {
    "text": "us to re read and understand the scope of our test I have a client I I work as",
    "start": "1943480",
    "end": "1948960"
  },
  {
    "text": "a a consultant advising people on how to do some of this stuff and continuous delivery things in general and I have a",
    "start": "1948960",
    "end": "1954399"
  },
  {
    "text": "client in the Netherlands um who have kind of Taken automated functional testing quite seriously for several",
    "start": "1954399",
    "end": "1960799"
  },
  {
    "text": "years they have a very large body of automated functional tests and their",
    "start": "1960799",
    "end": "1966240"
  },
  {
    "text": "words they are horrible they are complicated convoluted lengthy it takes",
    "start": "1966240",
    "end": "1974679"
  },
  {
    "text": "the person that wrote the test half an hour 60 Minutes to understand",
    "start": "1974679",
    "end": "1981000"
  },
  {
    "text": "what the test is doing so they've got all of these tests they don't know what the coverage is they don't know what they're asserting they don't know",
    "start": "1981000",
    "end": "1987519"
  },
  {
    "text": "whether it's good or bad even so the ability to understand what a",
    "start": "1987519",
    "end": "1993080"
  },
  {
    "text": "test is asserting very clearly be very precisely is important thinking of these things as specifications for the",
    "start": "1993080",
    "end": "1998240"
  },
  {
    "text": "behavior of the system provides us with this right level of abstraction abstraction and we can start designing",
    "start": "1998240",
    "end": "2003320"
  },
  {
    "text": "languages that allow us to express those ideas",
    "start": "2003320",
    "end": "2008159"
  },
  {
    "text": "here's an example I hope you can read this so this is a real example from the system that I was talking about this is",
    "start": "2009000",
    "end": "2014880"
  },
  {
    "text": "in the in the sphere sphere of financial trading and in this case we're selecting a deal ticket which is a mar and the",
    "start": "2014880",
    "end": "2022880"
  },
  {
    "text": "instrument represents a market in which you can trade we're placing an order uh of a particular type we're checking to",
    "start": "2022880",
    "end": "2029360"
  },
  {
    "text": "see what the feedback is from that order and and and then we're placing another order and we're looking for the feedback",
    "start": "2029360",
    "end": "2034799"
  },
  {
    "text": "here here's another test case this one's going through the fix API that I mentioned before and we're we're placing",
    "start": "2034799",
    "end": "2041559"
  },
  {
    "text": "a mass order to get the the marketplace into into a known state that one",
    "start": "2041559",
    "end": "2046960"
  },
  {
    "text": "instruction is creating the marketplace starting it up diving defining some users to uh to to trade in that",
    "start": "2046960",
    "end": "2054480"
  },
  {
    "text": "Marketplace and putting a bunch of prices in the marketplace that the subsequent test can trade against so",
    "start": "2054480",
    "end": "2060839"
  },
  {
    "text": "remember what I said about the ease with writing these tests and getting the system into under test uh into uh the",
    "start": "2060839",
    "end": "2065960"
  },
  {
    "text": "state that we'd like it to be in very quickly and then then we're doing some other interactions as I said before each T",
    "start": "2065960",
    "end": "2072000"
  },
  {
    "text": "Test case is starting is's getting the system into into a condition that it would like to be in so we're creating an",
    "start": "2072000",
    "end": "2077520"
  },
  {
    "text": "instrument and some users that are going to be able to trade and those sorts of things to get the system into test this",
    "start": "2077520",
    "end": "2082560"
  },
  {
    "text": "is the next level down so these these is this this is the this is the test infrastructure that the test cases share",
    "start": "2082560",
    "end": "2089839"
  },
  {
    "text": "and are and are talking to this is a place order example and you can see one of the one of the properties of this is",
    "start": "2089839",
    "end": "2096079"
  },
  {
    "text": "that we're using lots of optional par so if I don't care what the order that",
    "start": "2096079",
    "end": "2101359"
  },
  {
    "text": "I'm the detail of the order that I'm placing I can provide a place order with I think no parameters I can just say",
    "start": "2101359",
    "end": "2108040"
  },
  {
    "text": "place order and it will make one up for me that will work if I don't care the detail of the order if I want to be",
    "start": "2108040",
    "end": "2113160"
  },
  {
    "text": "precise about the order I can specify every attribute of the order here's",
    "start": "2113160",
    "end": "2118560"
  },
  {
    "text": "another version of that this is for the uh sorry no I haven't got the other version so for other apis that can be",
    "start": "2118560",
    "end": "2125520"
  },
  {
    "text": "more complicated actually what I've just shown you was kind of an",
    "start": "2125520",
    "end": "2131200"
  },
  {
    "text": "iteration of where we're at and and we realized over time that even at that level we weren't really divorced enough",
    "start": "2131200",
    "end": "2138240"
  },
  {
    "text": "from H how the system was working we got stuff in here that was too specific so",
    "start": "2138240",
    "end": "2143599"
  },
  {
    "text": "we were talking about the trading user interface and the fix API and we realized that there was no need to do",
    "start": "2143599",
    "end": "2148880"
  },
  {
    "text": "that we could abstract further we ended up with test cases like this this single",
    "start": "2148880",
    "end": "2154319"
  },
  {
    "text": "test case expresses a real desired behavior of the system we'd like to be",
    "start": "2154319",
    "end": "2159920"
  },
  {
    "text": "able to place an order in a particular Market of a particular type and we'd like to see an execution report a",
    "start": "2159920",
    "end": "2165920"
  },
  {
    "text": "response for the behavior of that order this one test case works on the",
    "start": "2165920",
    "end": "2171480"
  },
  {
    "text": "fix API the public website and the public API that people could use but",
    "start": "2171480",
    "end": "2178400"
  },
  {
    "text": "could use to write their own butts this is one test case expresses this requirement and it can be fulfilled in",
    "start": "2178400",
    "end": "2185760"
  },
  {
    "text": "three different places the same client that I was talking about before in the Netherlands is using this",
    "start": "2185760",
    "end": "2192359"
  },
  {
    "text": "technique they're they're rewriting a legacy system and they're migrating towards a microservices approach they are rewriting their acceptance tests in",
    "start": "2192359",
    "end": "2199880"
  },
  {
    "text": "this kind of form and they've got two different versions the old version of the system and the new version of the system they can run the same",
    "start": "2199880",
    "end": "2206280"
  },
  {
    "text": "specification and assert that they get the same behavior out of both systems that's quite powerful and demonstrates",
    "start": "2206280",
    "end": "2214240"
  },
  {
    "text": "really loose coupling between the test case and the system under test you can now imagine the system under test is",
    "start": "2214240",
    "end": "2219640"
  },
  {
    "text": "able to change quite quite dramatically without impacting on the nature of this test case it doesn't really matter the",
    "start": "2219640",
    "end": "2226240"
  },
  {
    "text": "nature of the order it doesn't matter whether you're placing order means filling in some details in a form or",
    "start": "2226240",
    "end": "2231560"
  },
  {
    "text": "clicking on a graph doesn't matter this still makes",
    "start": "2231560",
    "end": "2236599"
  },
  {
    "text": "sense we'd like to be able to test any change as part our development process we don't want to just test the easy",
    "start": "2244319",
    "end": "2251400"
  },
  {
    "text": "things or just test the happy paths we want to test all of the behaviors of our",
    "start": "2251400",
    "end": "2257040"
  },
  {
    "text": "system so I I'm just pulling out a few few different cases at elmax uh where",
    "start": "2257040",
    "end": "2263200"
  },
  {
    "text": "where where I worked we tested every attribute of the system we tested the performance characteristics the uh we",
    "start": "2263200",
    "end": "2270560"
  },
  {
    "text": "would we would selectively kill bits of the system and check that that system didn't lose any data all of these kinds of things but I'm going to focus on just",
    "start": "2270560",
    "end": "2277079"
  },
  {
    "text": "a couple of thing so the the obvious one that tends to trip us up is time time is one of those dependencies that tends to",
    "start": "2277079",
    "end": "2283480"
  },
  {
    "text": "get in our way quite a lot and I think there are two strategies to to dealing with time in in automated tests the",
    "start": "2283480",
    "end": "2290760"
  },
  {
    "text": "first one is if your system doesn't care very much about time ignore it blank out",
    "start": "2290760",
    "end": "2296400"
  },
  {
    "text": "any comparisons of time fields and just ignore those comparisons that works if your system doesn't matter about time",
    "start": "2296400",
    "end": "2302200"
  },
  {
    "text": "very much the other approach is to take control of time so what do I mean by",
    "start": "2302200",
    "end": "2307640"
  },
  {
    "text": "that so here's the first approach ignoring time the nice advantage that this approach has is that it's really",
    "start": "2307640",
    "end": "2314440"
  },
  {
    "text": "simple you just wherever you're comparing data between two different implications of the system you you",
    "start": "2314440",
    "end": "2320480"
  },
  {
    "text": "ignore all of the time Fields uh the trouble is that it can miss errors and it prevents you testing some interesting",
    "start": "2320480",
    "end": "2327480"
  },
  {
    "text": "and complex scenarios if your system does care about time and that's where",
    "start": "2327480",
    "end": "2332520"
  },
  {
    "text": "this comes in so testing by taking control of time it's very Flex it's",
    "start": "2332520",
    "end": "2338000"
  },
  {
    "text": "extremely powerful and it allows you to run long running scenarios in short periods of time you can simulate all",
    "start": "2338000",
    "end": "2344599"
  },
  {
    "text": "kinds of different interactions with time and and see things in different way the downside it's slightly more complex",
    "start": "2344599",
    "end": "2351200"
  },
  {
    "text": "uh in terms of the infrastructure and the setup so let's just dig into that in a little bit more detail again I",
    "start": "2351200",
    "end": "2356560"
  },
  {
    "text": "apologize for the slightly cheesy example so let's say that somebody wants to borrow my book from the library and",
    "start": "2356560",
    "end": "2362680"
  },
  {
    "text": "they're going to assert that the book is overdue is not overdue and then they're",
    "start": "2362680",
    "end": "2367800"
  },
  {
    "text": "going to time travel here's the bit that we're interested in they're going to time travel forwards one week and then",
    "start": "2367800",
    "end": "2373079"
  },
  {
    "text": "they're going to assert that the book's still not yet overdue they're going to time travel forwards four weeks and now",
    "start": "2373079",
    "end": "2378119"
  },
  {
    "text": "they're going to assert that the book is now overdue so clearly it's the time travel",
    "start": "2378119",
    "end": "2383359"
  },
  {
    "text": "bits that are the interesting bits in this scenario so here's our system under test",
    "start": "2383359",
    "end": "2389960"
  },
  {
    "text": "and here's our test infrastructure surrounding it and typically in this kind of scenario if we've got some some",
    "start": "2389960",
    "end": "2395560"
  },
  {
    "text": "notion of time in our system some where there's going to be something that looks vaguely like this in in the code of the",
    "start": "2395560",
    "end": "2400839"
  },
  {
    "text": "system we're going to have a call to system get time or its equivalent in whatever language or infrastructure you're",
    "start": "2400839",
    "end": "2406960"
  },
  {
    "text": "using again we solve this kind of Problem by introducing a level of indirection so instead of you calling",
    "start": "2406960",
    "end": "2412319"
  },
  {
    "text": "directly into the system we put our own clock in the way so instead of asking the system for the time we're going to ask our clock for the time and every",
    "start": "2412319",
    "end": "2419240"
  },
  {
    "text": "time the system asks for the time it asks our clock now we can start messing",
    "start": "2419240",
    "end": "2424440"
  },
  {
    "text": "with it so we could introduce a clock like this",
    "start": "2424440",
    "end": "2431000"
  },
  {
    "text": "we could have a a clock that by default is talking to the system clock and it just goes and gets the time from the system but we could also cheat and we",
    "start": "2431000",
    "end": "2437760"
  },
  {
    "text": "could set the time um uh from from outside and and it all always returns",
    "start": "2437760",
    "end": "2444160"
  },
  {
    "text": "that time whatever it is we could plug that into our test",
    "start": "2444160",
    "end": "2449400"
  },
  {
    "text": "infrastructure so that we could do the time travel instructions and say okay so we'd like to do this we'd like to time",
    "start": "2449400",
    "end": "2456200"
  },
  {
    "text": "travel we're going to to inter interpret what that means in terms of the time and then we're going to set the time in the",
    "start": "2456200",
    "end": "2461599"
  },
  {
    "text": "system under test as I said this allows us to evaluate long running scenarios in in",
    "start": "2461599",
    "end": "2468440"
  },
  {
    "text": "the finance industry where where these example some of the examples we taken from we often have kind of three-day",
    "start": "2468440",
    "end": "2474319"
  },
  {
    "text": "Cycles sometimes longer cycles and you don't want to run a test for three days to find out if that works well one of",
    "start": "2474319",
    "end": "2480400"
  },
  {
    "text": "the slightly amusing things at elmax was we we talked to I don't know 15 or 20",
    "start": "2480400",
    "end": "2487319"
  },
  {
    "text": "third parties as part of our whole enterprise system you know other trading organizations Clearing Houses all of",
    "start": "2487319",
    "end": "2493160"
  },
  {
    "text": "these sorts of places and every single time there was a daylight savings change in the clock one or other of those third",
    "start": "2493160",
    "end": "2500440"
  },
  {
    "text": "parties would break uh and we never ever did because we tested it we tested the we tested",
    "start": "2500440",
    "end": "2506760"
  },
  {
    "text": "daylight savings changes scenarios in in our code with with this with this time travel",
    "start": "2506760",
    "end": "2513599"
  },
  {
    "text": "approach so if we want to do these kinds of these kinds of different these different sorts of tests we probably",
    "start": "2515960",
    "end": "2522599"
  },
  {
    "text": "want to start they probably have some different characteristics remember what I said at the start on the whole for the majority of tests we'd like to be able",
    "start": "2522599",
    "end": "2528160"
  },
  {
    "text": "to start the system at once and then run a whole bunch of tests against it to share out the cost of starting up the",
    "start": "2528160",
    "end": "2534520"
  },
  {
    "text": "system uh but that's not going to work for for some of these tests if you're time traveling you don't you can't be",
    "start": "2534520",
    "end": "2539880"
  },
  {
    "text": "time traveling in One Direction and another test time traveling in another Direction and another test not wanting to time travel at all at the same time",
    "start": "2539880",
    "end": "2546240"
  },
  {
    "text": "that's going to mess things up so in those scenarios you probably want a dedicated version of the system for those time travel tests so you could tag",
    "start": "2546240",
    "end": "2553079"
  },
  {
    "text": "the what we did was that we tagged the tests so we had time travel tests and then our test allocator would look at",
    "start": "2553079",
    "end": "2559119"
  },
  {
    "text": "those tags and allocate them into to different uh to different uh hosts we had destructive tests tests that were",
    "start": "2559119",
    "end": "2566559"
  },
  {
    "text": "destroying bits of our infrastructure or bits of our code to see how how our system stood up and again you probably",
    "start": "2566559",
    "end": "2573079"
  },
  {
    "text": "don't want to be sharing those environments with regular everyday tests or performance tests or anything like",
    "start": "2573079",
    "end": "2578520"
  },
  {
    "text": "that and then we had tests that depended on specific bits of hardware and so we could go and look for the host that had",
    "start": "2578520",
    "end": "2583760"
  },
  {
    "text": "that bit of hardware and allocate the test to",
    "start": "2583760",
    "end": "2587720"
  },
  {
    "text": "there here's a nice little animation so the guy that wrote uh test allocator",
    "start": "2590559",
    "end": "2595680"
  },
  {
    "text": "this this is quite a crude version modern versions are much more big and complex than this but this was when he was developing the system the test",
    "start": "2595680",
    "end": "2601359"
  },
  {
    "text": "allocator and he did this visualization to understand what's going on uh over here is the parall test this is we've",
    "start": "2601359",
    "end": "2608440"
  },
  {
    "text": "got one version of the system and a whole bunch of test hosts running different test cases against this over",
    "start": "2608440",
    "end": "2614160"
  },
  {
    "text": "here we've got some of those destructive tests there each test has its own version of the system and can kind of",
    "start": "2614160",
    "end": "2620319"
  },
  {
    "text": "kill different bits of the system and evaluate what's going on and over here we have a bunch of time travel tests each again has its own version of the",
    "start": "2620319",
    "end": "2626640"
  },
  {
    "text": "system and it's running those tests against that version of the system and taking control of time in that context",
    "start": "2626640",
    "end": "2634760"
  },
  {
    "text": "we'd like our test to be efficient we want to be able to run tens of thousands of these tests um I was talking",
    "start": "2639760",
    "end": "2648040"
  },
  {
    "text": "to a a colleague of mine except that we worked at the place at different times",
    "start": "2648040",
    "end": "2653559"
  },
  {
    "text": "from elmax yesterday and he said that when so when I left elmax they had about 15,000 of these acceptance test running",
    "start": "2653559",
    "end": "2660359"
  },
  {
    "text": "giving results in about 40 minutes when he left which is a a year or so ago I",
    "start": "2660359",
    "end": "2665800"
  },
  {
    "text": "think uh they had 30,000 of these tests giving results in about 30 minutes because they'd increase their hardware",
    "start": "2665800",
    "end": "2671240"
  },
  {
    "text": "and parallel wise a bit more so that so so uh you can run tens",
    "start": "2671240",
    "end": "2677079"
  },
  {
    "text": "of thousands of these tests and that's where we want to be able to get to to get these fast feedback Cycles here's an",
    "start": "2677079",
    "end": "2682160"
  },
  {
    "text": "example of one one way of looking efficiency if your test if your production environment looks like this",
    "start": "2682160",
    "end": "2688200"
  },
  {
    "text": "and typical interaction through the environment looks like this then you want your environment to be production like it doesn't have to be a production",
    "start": "2688200",
    "end": "2694480"
  },
  {
    "text": "clone it has to represent the key attributes of the system so maybe your test environment looks like this maybe",
    "start": "2694480",
    "end": "2700160"
  },
  {
    "text": "it's a bit more complicated than this to get you faster feedback but it's going to look something like this if some of",
    "start": "2700160",
    "end": "2705480"
  },
  {
    "text": "your interactions have a particular unusual bit of Hardware or something like that and some interactions look like this maybe your test environment",
    "start": "2705480",
    "end": "2712599"
  },
  {
    "text": "looks like this what you're trying to establish is you be a you want to be able to run your software in lifelike",
    "start": "2712599",
    "end": "2718240"
  },
  {
    "text": "scenarios in production like environments so you can evaluate the deployment the configuration the",
    "start": "2718240",
    "end": "2724079"
  },
  {
    "text": "interaction of all of the different pieces as well as just the behavior the bits of source code that we",
    "start": "2724079",
    "end": "2730200"
  },
  {
    "text": "wrote when we're writing these these these high level abstract test cases in",
    "start": "2732760",
    "end": "2739440"
  },
  {
    "text": "our domain specific language we don't want to be W worrying about the hard computery stuff we certainly don't want",
    "start": "2739440",
    "end": "2745640"
  },
  {
    "text": "to be worrying about how the systems delivering the behaviors we just want to be able to express the ideas of the behaviors but beyond that we we don't",
    "start": "2745640",
    "end": "2752760"
  },
  {
    "text": "want to be worrying even worse we don't want to be worrying about really complicated things like concurrency",
    "start": "2752760",
    "end": "2757920"
  },
  {
    "text": "so from the perspective of each step in our domain specific language we want that to be synchronous we want that to be a single step I completely agree with",
    "start": "2757920",
    "end": "2765599"
  },
  {
    "text": "what Mary said in the the keynote about the importance of asynchronous software design but this is one place where we",
    "start": "2765599",
    "end": "2771400"
  },
  {
    "text": "want synchronicity we want to be able to make a step in our test case that's complete and be valid and repeatable and",
    "start": "2771400",
    "end": "2777880"
  },
  {
    "text": "then make the next step so if you are looking for a if you",
    "start": "2777880",
    "end": "2785520"
  },
  {
    "text": "are working in an asynchronous system system and and you want to fake this within your domain specific language again you've got this infrastructure",
    "start": "2785520",
    "end": "2791839"
  },
  {
    "text": "layer that gives you a place to do that so here's an example this is this is the DSL layer this is the layer below the",
    "start": "2791839",
    "end": "2798480"
  },
  {
    "text": "test cases so we've got this is the shared thing for placing orders let's imagine we're going to send an asynchronous place order message we're",
    "start": "2798480",
    "end": "2805440"
  },
  {
    "text": "going to pass the parameters and then we're going to wait for a confirmation or fail on a timeout so we it looks",
    "start": "2805440",
    "end": "2812000"
  },
  {
    "text": "synchronous from the perspective of the test cases but it's actually asynchronous under the hood we can hide hide quite complex interactions and",
    "start": "2812000",
    "end": "2818079"
  },
  {
    "text": "behaviors this way within the layer of abstraction that that our DSL presents",
    "start": "2818079",
    "end": "2823440"
  },
  {
    "text": "us with and you can as you do this o others of those little green blobs in the in",
    "start": "2823440",
    "end": "2830040"
  },
  {
    "text": "the infrastructure that tends to grow you tend to build your your own little domain model that helps you build and",
    "start": "2830040",
    "end": "2835400"
  },
  {
    "text": "grow some of these ideas and share context between um uh different steps in",
    "start": "2835400",
    "end": "2840680"
  },
  {
    "text": "the test case so so I I think I think in most",
    "start": "2840680",
    "end": "2846480"
  },
  {
    "text": "systems even even very asynchronous systems it's true to say that there's nearly always a",
    "start": "2846480",
    "end": "2851800"
  },
  {
    "text": "natural concluding event to any interaction if there's not maybe there should be maybe it's worth looking at the design of the the messaging in your",
    "start": "2851800",
    "end": "2858240"
  },
  {
    "text": "system however if you really really really can't find a concluding event",
    "start": "2858240",
    "end": "2864040"
  },
  {
    "text": "then a a a much worse approach but still slightly acceptable is that you can do a",
    "start": "2864040",
    "end": "2869280"
  },
  {
    "text": "poll and timeout mechanism to go and look so is it as it arrived in the database as no I'll go come back and have a look in a few seconds as it",
    "start": "2869280",
    "end": "2875440"
  },
  {
    "text": "arrived in the database yes pass move on uh that kind of thing what you should never do is this I see this all of the",
    "start": "2875440",
    "end": "2883240"
  },
  {
    "text": "time I I I go into clients and to look try help them with their testing strategy and their code is littered with",
    "start": "2883240",
    "end": "2888720"
  },
  {
    "text": "weight statements in in their test cases this is this is like crack uh crack",
    "start": "2888720",
    "end": "2894559"
  },
  {
    "text": "cocaine for for for testing this is a complete antipattern it's going to make your software your your tests slower the",
    "start": "2894559",
    "end": "2902000"
  },
  {
    "text": "the best case is that your tests are going to be slow because every single time you're going to wait maybe it",
    "start": "2902000",
    "end": "2908920"
  },
  {
    "text": "returned in a microsc and you didn't have to wait you you could have saved that wait time worse than that what",
    "start": "2908920",
    "end": "2915079"
  },
  {
    "text": "mostly happens though is that you end up introducing a whole different raft of race conditions you've just moved the",
    "start": "2915079",
    "end": "2920200"
  },
  {
    "text": "game and you start playing silly games trying to tune all the different weights so that you get you avoid the race conditions you are never going to do",
    "start": "2920200",
    "end": "2926480"
  },
  {
    "text": "that get to the real problem eliminate get rid of this and start doing this kind of stuff",
    "start": "2926480",
    "end": "2933079"
  },
  {
    "text": "instead if you do all of those things the next step in continuous delivery becomes easy the point at which your",
    "start": "2933400",
    "end": "2940240"
  },
  {
    "text": "feedback cycle starts to slow and you need to scale up to get faster feedback again becomes",
    "start": "2940240",
    "end": "2946160"
  },
  {
    "text": "simple so here's our artifact repository we got a release candidate that ends up in there from our commit stage a",
    "start": "2946160",
    "end": "2953839"
  },
  {
    "text": "Deployable artifact whatever that might be our acceptance test environment when",
    "start": "2953839",
    "end": "2958960"
  },
  {
    "text": "it comes free is going to pick the newest one of those deploy it to a an shared acceptance test environment it's going to spawn off a whole bunch of test",
    "start": "2958960",
    "end": "2966200"
  },
  {
    "text": "hosts to run all these different test cases and it's going to evaluate that release candidate and it's going to",
    "start": "2966200",
    "end": "2972240"
  },
  {
    "text": "feedback the results and tag tag the release candidate in the artifact repository with the state and that becomes simple when",
    "start": "2972240",
    "end": "2978920"
  },
  {
    "text": "you've done these things if you got shared State uh lots of weight",
    "start": "2978920",
    "end": "2984720"
  },
  {
    "text": "conditions um uh conf conflation of uh what with have all of those things",
    "start": "2984720",
    "end": "2991000"
  },
  {
    "text": "mitigate against your ability to do that scale up so I'm kind of in the wrap-up",
    "start": "2991000",
    "end": "2996720"
  },
  {
    "text": "mode now so let's just quite quickly whiz through the summary of this so don't use the recording playback systems",
    "start": "2996720",
    "end": "3002440"
  },
  {
    "text": "they are poison don't record back don't just use production data it's a at best",
    "start": "3002440",
    "end": "3009040"
  },
  {
    "text": "it's a sample of of behavior likely the things that are going to trip up your",
    "start": "3009040",
    "end": "3014960"
  },
  {
    "text": "software aren't going to be in your production Rune you want to simulate those things",
    "start": "3014960",
    "end": "3020040"
  },
  {
    "text": "you want to think about all the awkward cases you want to simulate failures don't just dump C data into",
    "start": "3020040",
    "end": "3027240"
  },
  {
    "text": "your test system either it's it's like climbing a mountain with a rook sack full of rocks you're just walking around",
    "start": "3027240",
    "end": "3033280"
  },
  {
    "text": "with this this this burden of of data all of the time don't assume that buying testing",
    "start": "3033280",
    "end": "3040079"
  },
  {
    "text": "Products off the shelf and the advice that they give you is going to lead to a good testing strategy my experience of most of those things is that they don't",
    "start": "3040079",
    "end": "3046359"
  },
  {
    "text": "lead to very good testing strategy you need to be very specific you need to think very clearly about what you're wanting and I would argue from my",
    "start": "3046359",
    "end": "3053200"
  },
  {
    "text": "perspective as a proponent of continuous delivery the prime directive in this kind of approach to automated",
    "start": "3053200",
    "end": "3059000"
  },
  {
    "text": "testing is what you want is fast feedback that is more important than anything I would rather dump a test that",
    "start": "3059000",
    "end": "3067319"
  },
  {
    "text": "took too long to run than slow down the feedback",
    "start": "3067319",
    "end": "3072359"
  },
  {
    "text": "cycle don't have a separate testing and QA team I think that test separate testing and QA Specialists are extremely",
    "start": "3073839",
    "end": "3081319"
  },
  {
    "text": "valuable on a team but they should be working collaboratively intimately with development teams F grained",
    "start": "3081319",
    "end": "3087559"
  },
  {
    "text": "collaboration you don't build mini waterfalls where the development team work until the end and just hand things",
    "start": "3087559",
    "end": "3092760"
  },
  {
    "text": "over to the QA team even if they're sitting together you want to make fine grain evaluation of the software all the",
    "start": "3092760",
    "end": "3098040"
  },
  {
    "text": "way through don't let every test in it the in it the application unless your",
    "start": "3098040",
    "end": "3103599"
  },
  {
    "text": "application is blindingly fast to start up do it share out the",
    "start": "3103599",
    "end": "3110079"
  },
  {
    "text": "cost don't include systems outside the scope of your system be very specific",
    "start": "3110079",
    "end": "3115160"
  },
  {
    "text": "about what the boundaries of your system are and test to those boundaries and don't put bloody weight",
    "start": "3115160",
    "end": "3120760"
  },
  {
    "text": "statements in your tests hoping that it will sort you out it won't it will just make your test flakier and harder to figure out and",
    "start": "3120760",
    "end": "3127040"
  },
  {
    "text": "slower so I don't want to finish on a downer so let's I I'm sorry we people trying to take pictures",
    "start": "3127040",
    "end": "3135520"
  },
  {
    "text": "uh I'm I'm overrunning so I'm not I'm going to go ahead with these do ensure that developers own the test so they",
    "start": "3135520",
    "end": "3141200"
  },
  {
    "text": "they complete the feedback cycle test what not how use the DSL think of your",
    "start": "3141200",
    "end": "3146240"
  },
  {
    "text": "test as executable specifications making acceptance testing part of the definition of done keep tests isolated",
    "start": "3146240",
    "end": "3152640"
  },
  {
    "text": "from one another using the tricks that I talked about here keep your test repeatable you want to be able to run the same test over and over again and",
    "start": "3152640",
    "end": "3158480"
  },
  {
    "text": "get the same results every single time use the language of the problem domain really do try the DSL it's easier than",
    "start": "3158480",
    "end": "3164440"
  },
  {
    "text": "it sounds to just evolve these things very quickly do stub external systems to",
    "start": "3164440",
    "end": "3170480"
  },
  {
    "text": "define the boundaries of your system testing production like environments rehearse deployment configuration as",
    "start": "3170480",
    "end": "3175559"
  },
  {
    "text": "well as the behavior of your system make instructions appear synchronous at the level of each uh of each test case uh",
    "start": "3175559",
    "end": "3182000"
  },
  {
    "text": "statement and test for any change test every change in your",
    "start": "3182000",
    "end": "3187680"
  },
  {
    "text": "system and finally make worry about the performance of your test worry about the",
    "start": "3187680",
    "end": "3192799"
  },
  {
    "text": "feedback cycle worry about if your test is taking hours that's too slow if it's",
    "start": "3192799",
    "end": "3199000"
  },
  {
    "text": "taking minutes can you make it take seconds instead really could take take treat test performance seriously can you",
    "start": "3199000",
    "end": "3206520"
  },
  {
    "text": "learn this same thing more efficiently if you can do",
    "start": "3206520",
    "end": "3211799"
  },
  {
    "text": "that with that I'm done thank you for your time I'm slightly overrun [Applause]",
    "start": "3211799",
    "end": "3224939"
  }
]