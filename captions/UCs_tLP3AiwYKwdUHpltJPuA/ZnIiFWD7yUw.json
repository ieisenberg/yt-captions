[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "okay so uh my name is Simon I work for Shopify and uh today I'm going to be",
    "start": "280",
    "end": "6240"
  },
  {
    "text": "talking about Docker and I think I'm going to start by talking about what this talk is not about this is not a",
    "start": "6240",
    "end": "12040"
  },
  {
    "text": "talk trying to brainwash you into using Docker uh it's not a talk about how",
    "start": "12040",
    "end": "17080"
  },
  {
    "text": "great Docker is but rather a talk about all the challenges that it brings with you once you recognize some of the",
    "start": "17080",
    "end": "23400"
  },
  {
    "text": "valuable things that containers can can bring to you uh to your organization um I'll also be using Docker and containers",
    "start": "23400",
    "end": "30439"
  },
  {
    "text": "kind of interchangeably uh Docker has become sort of the kleenex of containers and um so this is really a",
    "start": "30439",
    "end": "37840"
  },
  {
    "text": "talk about a deployment story that we had where we spend about six months",
    "start": "37840",
    "end": "42920"
  },
  {
    "text": "getting Docker into production and uh we've been operating it in production for about a year now and sort of the",
    "start": "42920",
    "end": "48120"
  },
  {
    "text": "lessons we've learned all the mistakes that we've made putting it into production and some of the advice that I can give based on what we have",
    "start": "48120",
    "end": "56000"
  },
  {
    "text": "learned so just just a little bit about Shopify first I think this is important just to keep in the back of our head the",
    "start": "56960",
    "end": "62760"
  },
  {
    "start": "57000",
    "end": "115000"
  },
  {
    "text": "scale that we are at because if you're larger than us you're going to run into more problems than we ran into and if you're smaller than us you're going to",
    "start": "62760",
    "end": "68400"
  },
  {
    "text": "run into fewer problems um Shopify is a Commerce platform we if you're doing if",
    "start": "68400",
    "end": "74240"
  },
  {
    "text": "you want to do any kind of Commerce we try to be your guy um we kind of provide a CMS for online stores we also do kind",
    "start": "74240",
    "end": "80920"
  },
  {
    "text": "of a point of sale solution and Facebook and multiple other other channels um we",
    "start": "80920",
    "end": "86840"
  },
  {
    "text": "were're able to run about 10,000 RPS uh and 10,000 orders per minute and um we",
    "start": "86840",
    "end": "93320"
  },
  {
    "text": "have about 300 million visitors per month which really puts us up there aggregated with some of the some of the",
    "start": "93320",
    "end": "99880"
  },
  {
    "text": "bigger bigger players like eBay and apple and and so on um we're running about 4,000 containers across two data",
    "start": "99880",
    "end": "107399"
  },
  {
    "text": "centers we're in collocated um data centers and running on our own bare metal",
    "start": "107399",
    "end": "114118"
  },
  {
    "text": "hardware so we started looking at Docker and all of these these things that soer",
    "start": "114880",
    "end": "120159"
  },
  {
    "start": "115000",
    "end": "208000"
  },
  {
    "text": "enables about 2 years ago now and really we were set down about three three",
    "start": "120159",
    "end": "126640"
  },
  {
    "text": "people with three to four people with the goal of trying to make Shopify a more enjoyable place to solve Commerce",
    "start": "126640",
    "end": "134160"
  },
  {
    "text": "problems really we wanted to be the best place in the world to solve Commerce problems down the line so that if you're if you want to do with Commerce product",
    "start": "134160",
    "end": "140680"
  },
  {
    "text": "um and you work at Shopify that should be really easy we should have a platform that really Fosters creativity uh",
    "start": "140680",
    "end": "145879"
  },
  {
    "text": "continuous integration and just makes the platform concerned really really minimal um we wanted to be able to do",
    "start": "145879",
    "end": "152599"
  },
  {
    "text": "things like running CI in less than five minutes going deploying in less than five minutes um give our developers more",
    "start": "152599",
    "end": "160920"
  },
  {
    "text": "control um one of the really cool things that that Docker provides is is an abstraction where it allows your",
    "start": "160920",
    "end": "166560"
  },
  {
    "text": "developers to own what is inside of the container and your platform team everything that revolves around the",
    "start": "166560",
    "end": "172840"
  },
  {
    "text": "container and this gives a really really clear line and descend between what your application developers own and what your",
    "start": "172840",
    "end": "178239"
  },
  {
    "text": "platform team owns and this really gives your developers more control because they don't have to care about all the infrastructure Parts",
    "start": "178239",
    "end": "184879"
  },
  {
    "text": "they just have to care about building a container and we really really like that abstraction that it provided and the fact that it meant that our product",
    "start": "184879",
    "end": "191040"
  },
  {
    "text": "teams could just operate as entities that just deliver delivered a container and my team would take care of",
    "start": "191040",
    "end": "197360"
  },
  {
    "text": "Distributing that and scaling that container um and another thing that's",
    "start": "197360",
    "end": "202879"
  },
  {
    "text": "that's um actually",
    "start": "202879",
    "end": "207680"
  },
  {
    "start": "208000",
    "end": "356000"
  },
  {
    "text": "no and kind of in extension of that one of the one of the interesting things",
    "start": "208680",
    "end": "213920"
  },
  {
    "text": "that hap that's happened in the past 10 years or so is that infrastructure as a service has become a pretty um pretty",
    "start": "213920",
    "end": "220599"
  },
  {
    "text": "standard thing easy2 launched um quite a few years ago now um and as one of the",
    "start": "220599",
    "end": "227599"
  },
  {
    "text": "first providers really provided infrastructure as a service you could click a button and you would have a",
    "start": "227599",
    "end": "232720"
  },
  {
    "text": "server that you're now able to SSH into you could automate this you could do do things on top of apis and so on and some",
    "start": "232720",
    "end": "239400"
  },
  {
    "text": "people people saw that that abstraction sits at at a level like a little bit too low and they started building these",
    "start": "239400",
    "end": "246840"
  },
  {
    "text": "platforms as a service and platforms as a service is really the Other Extreme where instead of providing servers and",
    "start": "246840",
    "end": "253439"
  },
  {
    "text": "or infrastructure as a service you're trying to provide services as a service so this is things like instead of a",
    "start": "253439",
    "end": "259280"
  },
  {
    "text": "button and you get a server you click a button and you have a MySQL cluster you click a button you have a mcash cluster",
    "start": "259280",
    "end": "265320"
  },
  {
    "text": "a reddis cluster and so on Heroku is a great example of that where you have sort of like an App Store where",
    "start": "265320",
    "end": "270800"
  },
  {
    "text": "different vendors can pitch in and get their infrastructure to run um for your application and easily connect to it the",
    "start": "270800",
    "end": "277759"
  },
  {
    "text": "problem though is that these are these are two two extremes one is an extreme",
    "start": "277759",
    "end": "282960"
  },
  {
    "text": "in the low level Direction and the other in the high level direction if you want to do something really large and custom",
    "start": "282960",
    "end": "288400"
  },
  {
    "text": "on something like Heroku in a pass you have the problem that you can't really customize too much and when you start",
    "start": "288400",
    "end": "294479"
  },
  {
    "text": "customizing the abstraction starts to feel wrong and it gets a little awkward",
    "start": "294479",
    "end": "299720"
  },
  {
    "text": "so really where containers and the patterns that containers allow us to do is it sits at a really really cool level",
    "start": "299720",
    "end": "306000"
  },
  {
    "text": "Just Between the infrastructure as a service and the platform as a service where again what your developers and",
    "start": "306000",
    "end": "312000"
  },
  {
    "text": "what your company is giving to the uh to the companies that that are operating your infrastructure or uh the teams within your organizations that's",
    "start": "312000",
    "end": "318319"
  },
  {
    "text": "operating your infrastructure you give that team your container and they run it you don't have to ask someone on your",
    "start": "318319",
    "end": "324400"
  },
  {
    "text": "operations team to install some kind of package for you because now you need to um communicate with mcash and you need",
    "start": "324400",
    "end": "330960"
  },
  {
    "text": "to mcash C headers and so on to build your library uh you don't have to do that anymore you can just own that and",
    "start": "330960",
    "end": "337080"
  },
  {
    "text": "the developers own that entire container and send it off it also has great benefits because it means that the",
    "start": "337080",
    "end": "342240"
  },
  {
    "text": "developers can now do that in development and so on so these are really the patterns that the container",
    "start": "342240",
    "end": "348080"
  },
  {
    "text": "mythology allows you to do um and the rest of this talk is really about how",
    "start": "348080",
    "end": "353199"
  },
  {
    "text": "difficult that is so we've been running Docker in",
    "start": "353199",
    "end": "359120"
  },
  {
    "start": "356000",
    "end": "411000"
  },
  {
    "text": "production for our main application for about a year now Shopify is a rubyan",
    "start": "359120",
    "end": "364600"
  },
  {
    "text": "rails application it's it's basically one big uh monolith that we have our Engineers work on and getting to",
    "start": "364600",
    "end": "372520"
  },
  {
    "text": "production with Docker was intensely challenging um there's so many problems out there that not a lot of people are",
    "start": "372520",
    "end": "379039"
  },
  {
    "text": "talking about because Docker is not seeing a lot of scale currently and many of these things frankly haven't gotten",
    "start": "379039",
    "end": "386039"
  },
  {
    "text": "much easier um but really what we're trying to do is not make we're obviously",
    "start": "386039",
    "end": "391240"
  },
  {
    "text": "we're not trying to make things worse in the in the short term but what we're really interested in is building a",
    "start": "391240",
    "end": "396400"
  },
  {
    "text": "really interesting platform going forward we're trying to enable and set ourselves up for success in the future",
    "start": "396400",
    "end": "402520"
  },
  {
    "text": "by embedding the knowledge into the organization of what are containers and how can we build this this Cass as we",
    "start": "402520",
    "end": "408560"
  },
  {
    "text": "move forward and the way that that the",
    "start": "408560",
    "end": "413639"
  },
  {
    "start": "411000",
    "end": "605000"
  },
  {
    "text": "community has approached this is kind of this adoption adoption Triad where",
    "start": "413639",
    "end": "418680"
  },
  {
    "text": "darker um Docker and not any of the other containerization Technologies like lxc",
    "start": "418680",
    "end": "425440"
  },
  {
    "text": "really managed to appeal to Developers for somehow Docker found just",
    "start": "425440",
    "end": "430840"
  },
  {
    "text": "a sweet spot to get developers interested in this stuff that's much more of a CIS admin concern when you",
    "start": "430840",
    "end": "435919"
  },
  {
    "text": "think about it containerization technologies have been around for a really really long time if you have that",
    "start": "435919",
    "end": "441319"
  },
  {
    "text": "one friend who's seen Del light and talks about Solaris all the time they' they've be telling you about how they've",
    "start": "441319",
    "end": "447440"
  },
  {
    "text": "been doing this for decades uh or something along those lines in",
    "start": "447440",
    "end": "452759"
  },
  {
    "text": "Linux um support for uh containerization and isolation of processes um is really",
    "start": "452759",
    "end": "459039"
  },
  {
    "text": "somewhat recent I think some of the first uh pioneering work was done by um companies like Google who were trying to",
    "start": "459039",
    "end": "465440"
  },
  {
    "text": "push Pat patches into the kernel uh open VZ uh is another project that was trying",
    "start": "465440",
    "end": "470560"
  },
  {
    "text": "to do this um and really do this at the kernel level instead of the virtualization level like um VMS and so",
    "start": "470560",
    "end": "477639"
  },
  {
    "text": "on so what docker has really done is they've built a containerization technology around on top of these Linux",
    "start": "477639",
    "end": "484280"
  },
  {
    "text": "Primitives that are now in the kernel and on most of the kernels that you are running today and made them them",
    "start": "484280",
    "end": "490680"
  },
  {
    "text": "accessible and they marketed it extensively for developers to start with you um to solve the development and CI",
    "start": "490680",
    "end": "498280"
  },
  {
    "text": "challenges that a lot of companies are having like if you have if you're running a lot of services at once and they need to communicate with each other",
    "start": "498280",
    "end": "504879"
  },
  {
    "text": "um it's one it's really hard to deploy it but it's also increasingly hard to develop with it and test with it if you",
    "start": "504879",
    "end": "511520"
  },
  {
    "text": "want to if you have two Services A and B and a talks to B how do you write tests on top of that and how do you debug",
    "start": "511520",
    "end": "517959"
  },
  {
    "text": "issues in the Rel when when these two components are interacting with each other and that's one of the I think",
    "start": "517959",
    "end": "523200"
  },
  {
    "text": "that's one of the sweet spots where uh where developers really saw the appeal because it it enabled them to write more",
    "start": "523200",
    "end": "529240"
  },
  {
    "text": "services and so on that also that's also not a silver bullet just like Docker and microservices and these kind of",
    "start": "529240",
    "end": "535320"
  },
  {
    "text": "architectures carries a lot of problem with them as well but a lot of companies do have small smaller uh smaller",
    "start": "535320",
    "end": "540880"
  },
  {
    "text": "services that do talk to each other to some extent at Shopify we don't really have that we have one big application we",
    "start": "540880",
    "end": "547000"
  },
  {
    "text": "do have data stores and a few services that it talks through here and there but it is essentially a monolith architecture at this point so the second",
    "start": "547000",
    "end": "554920"
  },
  {
    "text": "step in in the adoption of Docker is really the production step a lot of companies have started adopting Docker",
    "start": "554920",
    "end": "561920"
  },
  {
    "text": "in CI and development environment but very very few have gotten to the point where they actually posted into",
    "start": "561920",
    "end": "568120"
  },
  {
    "text": "production and even more scary is the fact that everyone is obsessing over",
    "start": "568120",
    "end": "573200"
  },
  {
    "text": "this idea of having your internal platform as a service C Cass or whatever you want to call it and this is where",
    "start": "573200",
    "end": "580920"
  },
  {
    "text": "this is where all the the all the vendors are going um that's what people people are building but they're really",
    "start": "580920",
    "end": "586079"
  },
  {
    "text": "missing that production step which means that Docker is not getting very much exposure to production for the reasons",
    "start": "586079",
    "end": "591519"
  },
  {
    "text": "that people are uh trying to build these very very complicated Stacks that they're only running very few um",
    "start": "591519",
    "end": "597079"
  },
  {
    "text": "applications on and um not very many people are deploying Docker in",
    "start": "597079",
    "end": "604040"
  },
  {
    "text": "isolation and so I I when people ask me like what how how people should adopt uh",
    "start": "605640",
    "end": "611519"
  },
  {
    "text": "Docker and what in which order that's really the order I recommend uh development CI then production and then",
    "start": "611519",
    "end": "616720"
  },
  {
    "text": "Cass um and that's because we did it in reverse and failed",
    "start": "616720",
    "end": "621839"
  },
  {
    "text": "miserably in uh January to to June of of of 2014 we um we we started getting",
    "start": "621839",
    "end": "628440"
  },
  {
    "text": "serious about about building out our our Docker infrastructure and we started out with this Grand Vision of we want this",
    "start": "628440",
    "end": "635560"
  },
  {
    "text": "cast we want to build this past so that all of our developers click buttons they get their uh data stores and it's really",
    "start": "635560",
    "end": "640839"
  },
  {
    "text": "easy to deploy you just do a Docker post and it's in production we build sliders and buttons for them and it's all good",
    "start": "640839",
    "end": "646120"
  },
  {
    "text": "and we had a very very naive thought in retrospect that we could just go and build that and there are a lot of",
    "start": "646120",
    "end": "651920"
  },
  {
    "text": "companies out there who are offering solutions to build these things out of the box uh but most of it doesn't work",
    "start": "651920",
    "end": "658560"
  },
  {
    "text": "and it didn't really work back then especially not at our scale where we do have very very aggressive uptime",
    "start": "658560",
    "end": "664079"
  },
  {
    "text": "requirements we can't just take a completely new stack and put our application on it uh unfortunately that",
    "start": "664079",
    "end": "669680"
  },
  {
    "text": "took us almost half a year to really realize the good part was though that we spend a lot of time also containerizing",
    "start": "669680",
    "end": "676480"
  },
  {
    "text": "Shopify and you can't because you can't just take an application and shove it into a container uh there's really a lot",
    "start": "676480",
    "end": "682279"
  },
  {
    "text": "of brick work that's involved in making that happen and I'll talk a bit more about that in um uh in a second",
    "start": "682279",
    "end": "689600"
  },
  {
    "text": "and then in July we um July June really we we were starting to getting tired of",
    "start": "689600",
    "end": "695000"
  },
  {
    "text": "playing around with all these orchestration Technologies we couldn't get into work it was a nightmare to debug and we could not by any means ship",
    "start": "695000",
    "end": "702079"
  },
  {
    "text": "this sustain sustainably to production so what we did was we sat down and decided that we're going to ship",
    "start": "702079",
    "end": "709240"
  },
  {
    "text": "something and that something is going to be just containers and we will ship that as the only change everything else still",
    "start": "709240",
    "end": "715560"
  },
  {
    "text": "stays the same we've been using Chef for configuration management so we're going to use that to orchestrate containers",
    "start": "715560",
    "end": "721160"
  },
  {
    "text": "not any fancy distributed orchestration um we're going to keep using run it for",
    "start": "721160",
    "end": "726600"
  },
  {
    "text": "uh monitoring the containers and restarting them when they fail and this stuff and really stick with all the boring old stuff and this this ended up",
    "start": "726600",
    "end": "733480"
  },
  {
    "text": "working and um well it it didn't really work um so we put this into production",
    "start": "733480",
    "end": "739839"
  },
  {
    "text": "in July 14 and the next couple of Coupes of couple of months we're pretty",
    "start": "739839",
    "end": "745160"
  },
  {
    "text": "miserable and really we ended up with a stack that was probably worse than what we had",
    "start": "745160",
    "end": "751680"
  },
  {
    "text": "before we spent a lot of time firefighting uh different things um we had soft kernel lockups because we're",
    "start": "751680",
    "end": "758199"
  },
  {
    "text": "running on uh ety Linux kernels uh the apis are not extremely stable at this point um and the fires kind of eased out",
    "start": "758199",
    "end": "767160"
  },
  {
    "text": "after a couple couple of months and uh then we started preparing for the holidays because we are an e-commerce platform Black Black Friday Cyber Monday",
    "start": "767160",
    "end": "774720"
  },
  {
    "text": "huge events for us so that really drained all our resources and we didn't really work on features for a little",
    "start": "774720",
    "end": "780519"
  },
  {
    "text": "while so for about half a year we had a stock that was worse than what we had before and we leveraged none of the none",
    "start": "780519",
    "end": "787160"
  },
  {
    "text": "of the good things about Docker uh but only really the bad parts so in in January May is and and",
    "start": "787160",
    "end": "795040"
  },
  {
    "text": "this year we've we've finally started started really using our knowledge of Docker and our experience with it and we",
    "start": "795040",
    "end": "801120"
  },
  {
    "text": "cut our deploy time from about 15 minutes down to 3 minutes we got our CI to run in 5 minutes instead of 15",
    "start": "801120",
    "end": "808480"
  },
  {
    "text": "minutes and we're continuing now to sort of harvest all of these longer term um",
    "start": "808480",
    "end": "814600"
  },
  {
    "text": "goals that we had to leverage Docker um with the with the short-term pain of of last",
    "start": "814600",
    "end": "820600"
  },
  {
    "text": "year so once again I do not recommend this approach and I'll talk a bit more",
    "start": "820600",
    "end": "826079"
  },
  {
    "text": "about what I recommend and another important important distinction I think is is be",
    "start": "826079",
    "end": "832720"
  },
  {
    "text": "between Green Field and and Legacy deployments of Docker and there are many",
    "start": "832720",
    "end": "837880"
  },
  {
    "text": "many dimensions of different kinds of deployment strategies that you can choose to deploy Docker and So",
    "start": "837880",
    "end": "843600"
  },
  {
    "text": "Greenfield is the one that that most of the industry seems concerned with right now uh when I talk to a lot of uh larger",
    "start": "843600",
    "end": "850199"
  },
  {
    "text": "Banks uh large very traditional companies with development firms um they kind of have a Development Division",
    "start": "850199",
    "end": "855440"
  },
  {
    "text": "split in two one half is working on the money-making applications written in Cobalt probably emulating chips like um",
    "start": "855440",
    "end": "863320"
  },
  {
    "text": "architecture IBM architectures from the 70s to run their scary scary applications that no one touched",
    "start": "863320",
    "end": "870680"
  },
  {
    "text": "and um they the other part of that Development Division is sort of the growth Department these are these are",
    "start": "870880",
    "end": "876000"
  },
  {
    "text": "developers working on new products rabid iteration and um sort of the the growth",
    "start": "876000",
    "end": "881320"
  },
  {
    "text": "developers and what what these companies are looking looking and going to Docker for is really having a platform that",
    "start": "881320",
    "end": "887639"
  },
  {
    "text": "enables these developers to to work quickly iterate quickly get products out quickly and so on the other approach um",
    "start": "887639",
    "end": "896160"
  },
  {
    "text": "is is more along the lines of what we did which is really trying to evolve your old stack into something",
    "start": "896160",
    "end": "904079"
  },
  {
    "text": "new so really what we're trying to do is evolve this the platform that Shopify is",
    "start": "904079",
    "end": "910680"
  },
  {
    "text": "running in on now into that platform that we want uh a long time from now which is which is a little bit different",
    "start": "910680",
    "end": "916680"
  },
  {
    "text": "from the other approach where you keep running your old stuff and then you have your your completely new application so",
    "start": "916680",
    "end": "922839"
  },
  {
    "text": "I think it's important to make that distinction before you get started of are we going to do a green field deployment of docker or or or are we",
    "start": "922839",
    "end": "929720"
  },
  {
    "text": "going witho an approach trying to move our existing stock and of course this is",
    "start": "929720",
    "end": "935000"
  },
  {
    "text": "extremely um this depends a lot on what your organization looks like now if you",
    "start": "935000",
    "end": "940839"
  },
  {
    "text": "are running emulated IBM chipsets from the 70s then maybe maybe the Legacy",
    "start": "940839",
    "end": "945880"
  },
  {
    "text": "approach is not the way to go uh but if you are running a somewhat modern stack this might be a good way to",
    "start": "945880",
    "end": "952399"
  },
  {
    "start": "952000",
    "end": "1086000"
  },
  {
    "text": "go the other problem is that for for at least going the Legacy approach is that",
    "start": "952480",
    "end": "957600"
  },
  {
    "text": "most of the vendors now nowadays are very very focused on the Greenfield approach it's really fun to build your",
    "start": "957600",
    "end": "963600"
  },
  {
    "text": "own cast and you see people building their own proxies people are building like there are more raft implementations",
    "start": "963600",
    "end": "971519"
  },
  {
    "text": "out there for service Discovery now than I can count um people are doing a lot of",
    "start": "971519",
    "end": "976639"
  },
  {
    "text": "different things and really reimplementing the same thing over and over again with very very few agreed upon components that everyone's using",
    "start": "976639",
    "end": "984120"
  },
  {
    "text": "and then you have companies like us who are trying to evolve a current stack into a docker Iz one into a",
    "start": "984120",
    "end": "989399"
  },
  {
    "text": "containerized stock who are more focused on evolving a platform but we can't take any of the components from these Green",
    "start": "989399",
    "end": "995319"
  },
  {
    "text": "Field companies that there exist now tens if not over a hundred of were trying to give you this Cass out of a",
    "start": "995319",
    "end": "1002240"
  },
  {
    "text": "box and this this kind of revolves around a um a chicken and egg problem",
    "start": "1002240",
    "end": "1009040"
  },
  {
    "text": "because if you're trying to build a stable C but nobody can actually take your stuff to production at least At",
    "start": "1009040",
    "end": "1014880"
  },
  {
    "text": "Large Scale then your um your road production is going to be really really",
    "start": "1014880",
    "end": "1019920"
  },
  {
    "text": "long and especially for for these companies so really what I'm hoping that I will see is more vendors realizing",
    "start": "1019920",
    "end": "1025880"
  },
  {
    "text": "that um that and building components that you can kind of grow uh grow into",
    "start": "1025880",
    "end": "1031199"
  },
  {
    "text": "so you can pick a component use it for some some amount of um functionality like pick out a service Discovery layer",
    "start": "1031199",
    "end": "1037760"
  },
  {
    "text": "from one solution and then pick another one of their components and then slowly evolve into the stack that you that you",
    "start": "1037760",
    "end": "1044600"
  },
  {
    "text": "want because that's how that's how you involve production infrastructure you can't just take a big completely new",
    "start": "1044600",
    "end": "1050520"
  },
  {
    "text": "thing and put your old thing on it you can put new things on it but not old things so really what all these all",
    "start": "1050520",
    "end": "1057840"
  },
  {
    "text": "these all these cast providers and vendors and all the people out there developing this software have fortunately agreed on one thing and that",
    "start": "1057840",
    "end": "1065440"
  },
  {
    "text": "one thing is Docker and really the the biggest value that Docker is bringing at this point is probably that people have",
    "start": "1065440",
    "end": "1071960"
  },
  {
    "text": "finally agreed on one thing and but everything else just kind",
    "start": "1071960",
    "end": "1077799"
  },
  {
    "text": "of remains mystery and people keep reimplementing the same",
    "start": "1077799",
    "end": "1082960"
  },
  {
    "text": "things so because of this the production maturity of Docker and the surrounding",
    "start": "1085840",
    "end": "1091320"
  },
  {
    "start": "1086000",
    "end": "1162000"
  },
  {
    "text": "the surrounding components really isn't there yet but for development and for CI",
    "start": "1091320",
    "end": "1096360"
  },
  {
    "text": "there's there's I think a lot of benefits to be had currently especially if you have multiple services that are",
    "start": "1096360",
    "end": "1101840"
  },
  {
    "text": "communicating with each other and you run into the scenarios as I described before where you want want to run",
    "start": "1101840",
    "end": "1108400"
  },
  {
    "text": "integration tests across multiple multiple applications um you want to have your development teams have pretty",
    "start": "1108400",
    "end": "1114280"
  },
  {
    "text": "predictable environment where you can run multiple applications at the same time without getting into a crazy",
    "start": "1114280",
    "end": "1119679"
  },
  {
    "text": "dependency hell uh for example you might have two services that are running different versions of Ruby or python or",
    "start": "1119679",
    "end": "1125799"
  },
  {
    "text": "whatever and doing that with something like vagrant is is really difficult uh it might require having multiple VMS if",
    "start": "1125799",
    "end": "1132200"
  },
  {
    "text": "you want complete isolations very very interesting cookbooks or other strange",
    "start": "1132200",
    "end": "1138080"
  },
  {
    "text": "um strange and really fragile ways of of building this out so I think there and",
    "start": "1138080",
    "end": "1144159"
  },
  {
    "text": "kind of every team collaborating around containers and providing sort of a golden image for their application for",
    "start": "1144159",
    "end": "1149720"
  },
  {
    "text": "other developers to use and to communicate with their apps uh doesn't really leak the abstraction of the application because you're still",
    "start": "1149720",
    "end": "1156039"
  },
  {
    "text": "communicating B with the API but um actually provides some real benefit now",
    "start": "1156039",
    "end": "1162840"
  },
  {
    "start": "1162000",
    "end": "1177000"
  },
  {
    "text": "so I've tried to like kind of like sum up the the first parts of of this talk in in in sort of an adoption Matrix",
    "start": "1162840",
    "end": "1168840"
  },
  {
    "text": "um and this this is probably a little bit confusing but what I um this work",
    "start": "1168840",
    "end": "1176919"
  },
  {
    "text": "yeah so out here we have sort of the different use cases for for Docker um",
    "start": "1176919",
    "end": "1183760"
  },
  {
    "start": "1177000",
    "end": "1277000"
  },
  {
    "text": "preparation which means kind of preparing your your application for for Docker which I'll will talk um about for",
    "start": "1183760",
    "end": "1190120"
  },
  {
    "text": "basically the rest of this talk then there is using Docker in a development environment and using it in a CI",
    "start": "1190120",
    "end": "1196520"
  },
  {
    "text": "environment production environment and um the whole Cass platform and then kind",
    "start": "1196520",
    "end": "1202080"
  },
  {
    "text": "of your architecture here if you're uh somewhat of a monolithic app there really aren't that many benefits to be",
    "start": "1202080",
    "end": "1207120"
  },
  {
    "text": "to be had from Docker uh five five is best here but if you are doing multiple Services I think that there are a lot of",
    "start": "1207120",
    "end": "1213400"
  },
  {
    "text": "things to gain from preparing your stock for containers and preparing it for um",
    "start": "1213400",
    "end": "1219000"
  },
  {
    "text": "to leverage this this technology and especially in sort of a a CI environment it's it's really great that you can",
    "start": "1219000",
    "end": "1225080"
  },
  {
    "text": "write finally write integration tests across apps which is something that is is is really an unknown field currently",
    "start": "1225080",
    "end": "1232360"
  },
  {
    "text": "um production and cast is still somewhat of a question the production tools just aren't really there in from from what",
    "start": "1232360",
    "end": "1239200"
  },
  {
    "text": "I've seen it's definitely getting better and it's a lot better than than from when we went into production um uh some",
    "start": "1239200",
    "end": "1246039"
  },
  {
    "text": "time ago and you can notice here that we're somewhat monolithic so I definitely do not recommend what we did",
    "start": "1246039",
    "end": "1251799"
  },
  {
    "text": "which is go into production with Docker with somewhat of a monolithic architecture it's it's basically a waste",
    "start": "1251799",
    "end": "1257760"
  },
  {
    "text": "of time at this point I do hope that it that it's getting better and the M the maturity of the platform evolves enough",
    "start": "1257760",
    "end": "1263200"
  },
  {
    "text": "that even in that case it does bring a lot of benefits but at this point the pros just really do not outweigh the",
    "start": "1263200",
    "end": "1268440"
  },
  {
    "text": "cons for that kind of infrastructure the last thing down here which is kind of awkwardly placed is is",
    "start": "1268440",
    "end": "1274240"
  },
  {
    "text": "the security of containers and um I think the CTO of joyant uh Brian C Made",
    "start": "1274240",
    "end": "1280440"
  },
  {
    "start": "1277000",
    "end": "1357000"
  },
  {
    "text": "made a really good point about that where in Linux they're really trying to iterate their their iterate to security",
    "start": "1280440",
    "end": "1288200"
  },
  {
    "text": "whereas in things like Solaris again the people who have seen the light um they architect it for security right off the",
    "start": "1288200",
    "end": "1295279"
  },
  {
    "text": "bat and have achieved worldclass security at this at this point to a level where um um it is way way beyond",
    "start": "1295279",
    "end": "1302600"
  },
  {
    "text": "what Linux has so what they've done as Linux is they've kind of carried out all the functionality and now they're trying",
    "start": "1302600",
    "end": "1308200"
  },
  {
    "text": "to make it secure and that's just not really how it works that's kind of like Blacklist versus white list um so that's",
    "start": "1308200",
    "end": "1315279"
  },
  {
    "text": "that is one of my concerns for for a a lot of private for a lot of people who are running a a a cast or a pass",
    "start": "1315279",
    "end": "1321480"
  },
  {
    "text": "internally it doesn't matter too much um because as long as you don't rely on these Primitives um but for people who",
    "start": "1321480",
    "end": "1328039"
  },
  {
    "text": "are doing um who are writing cast like Google Amazon and so on who are now",
    "start": "1328039",
    "end": "1333799"
  },
  {
    "text": "providing container services this is a big deal because it means that they still have to run VMS underneath like",
    "start": "1333799",
    "end": "1338880"
  },
  {
    "text": "sen or VMware or whatever um because they can't rely on the security of the container so really you're running a VM",
    "start": "1338880",
    "end": "1344880"
  },
  {
    "text": "and then a container inside of it which is two two isolation layers and the virtualization",
    "start": "1344880",
    "end": "1349919"
  },
  {
    "text": "performance nowadays is good but it's still not amazing and and for some applications this really rules out this",
    "start": "1349919",
    "end": "1355520"
  },
  {
    "text": "approach still so the rest of this talk is is",
    "start": "1355520",
    "end": "1361200"
  },
  {
    "start": "1357000",
    "end": "1449000"
  },
  {
    "text": "basically about what kind of the road map that I wish that someone had handed us and explained to us before we went",
    "start": "1361200",
    "end": "1367480"
  },
  {
    "text": "into production it's somewhat it's somewhat biased towards a legacy stack and and",
    "start": "1367480",
    "end": "1374000"
  },
  {
    "text": "and our our stack but I think that there are a lot of lessons to be learned here from uh whatever you're looking at or",
    "start": "1374000",
    "end": "1379520"
  },
  {
    "text": "even if you're looking at this next year and again many people start kind of",
    "start": "1379520",
    "end": "1384559"
  },
  {
    "text": "in reverse and then go all the way up and uh we certainly did which was a big mistake and we ended up wasting a lot of",
    "start": "1384559",
    "end": "1390440"
  },
  {
    "text": "time from that and [Music] um so the first stage here is is the",
    "start": "1390440",
    "end": "1397039"
  },
  {
    "text": "exploration stage and that basically means that you have a bunch of developers sit down spend some time with",
    "start": "1397039",
    "end": "1403520"
  },
  {
    "text": "containers develop a feel for what kind of power can we Harvest from this and is it really worth our time um the next one",
    "start": "1403520",
    "end": "1410440"
  },
  {
    "text": "is about uh preparing your application I'll go into depth with these steps in a second uh preparing your application",
    "start": "1410440",
    "end": "1416200"
  },
  {
    "text": "preparing um the patterns within your organization to to allow for this stuff",
    "start": "1416200",
    "end": "1421440"
  },
  {
    "text": "and the third one is where you actually finally start um looking at containers actually using them in development or Ci",
    "start": "1421440",
    "end": "1427320"
  },
  {
    "text": "or in production and then in the fourth one is the Grand Vision that everyone is looking towards is that they can start",
    "start": "1427320",
    "end": "1433919"
  },
  {
    "text": "building these CS these buttons and the levers and so on um",
    "start": "1433919",
    "end": "1439000"
  },
  {
    "text": "but don't start there and don't try to paralyze across these stages don't try",
    "start": "1439000",
    "end": "1444240"
  },
  {
    "text": "to be refactoring application while you're putting it into containers and take",
    "start": "1444240",
    "end": "1449480"
  },
  {
    "start": "1449000",
    "end": "1599000"
  },
  {
    "text": "shortcuts so the first stage is is the is the exploration stage and what you're trying to do in",
    "start": "1449760",
    "end": "1457240"
  },
  {
    "text": "the exploration stage is really get that knowledge internally of what what would it take what would it",
    "start": "1457240",
    "end": "1463960"
  },
  {
    "text": "take to put some of our applications within uh containers some very modern applications are actually pretty much",
    "start": "1463960",
    "end": "1469679"
  },
  {
    "text": "ready to just be put in a container um which is great if they if they're looking for Solutions like this for CI",
    "start": "1469679",
    "end": "1475120"
  },
  {
    "text": "and development um but for many this will be uh like a multi-month half if",
    "start": "1475120",
    "end": "1480600"
  },
  {
    "text": "not even a full year for some of their application to make this transition and develop all the software that's compatible with whatever they have so",
    "start": "1480600",
    "end": "1487200"
  },
  {
    "text": "really it's about getting a good understanding of how containers works this means understanding Linux",
    "start": "1487200",
    "end": "1493279"
  },
  {
    "text": "namespaces in depth which is what Docker containers build on top of uh kind of the kernel API for isolating processes",
    "start": "1493279",
    "end": "1500960"
  },
  {
    "text": "um The Man pages are basically the only documentation and kind of speaking to the immaturity of the stuff um I had to",
    "start": "1500960",
    "end": "1507520"
  },
  {
    "text": "dig out a lot of it from like the Linux kernel U manual U mailing list where",
    "start": "1507520",
    "end": "1512600"
  },
  {
    "text": "they're discussing Man pages because they weren't actually into the Linux distribution yet um you should be",
    "start": "1512600",
    "end": "1518720"
  },
  {
    "text": "studying companies and their use cases and what they're doing with Docker and whether that that's something that you're excited about and fits into what",
    "start": "1518720",
    "end": "1524960"
  },
  {
    "text": "you're trying to accomplish cgroups is the same thing CP groups has been around for for quite a while to um work done by",
    "start": "1524960",
    "end": "1531799"
  },
  {
    "text": "Google many many years ago to isolate processes from each other it's also really under really important to",
    "start": "1531799",
    "end": "1537399"
  },
  {
    "text": "understand um and then really developing a feel for containers what what's right to do in a container what's not right uh",
    "start": "1537399",
    "end": "1544000"
  },
  {
    "text": "you shouldn't be putting a ton of State in your container you probably shouldn't be running Chef in your container and you should probably only be running one",
    "start": "1544000",
    "end": "1550039"
  },
  {
    "text": "or two processes per container and so on just kind of get that feel and it's important to not get stuck or Star",
    "start": "1550039",
    "end": "1557000"
  },
  {
    "text": "Struck and Starstruck here really means that you get obsessed with this vision of",
    "start": "1557000",
    "end": "1562480"
  },
  {
    "text": "building out a pass or a cast for your company because that's a much much much longer project you're taking the very",
    "start": "1562480",
    "end": "1568480"
  },
  {
    "text": "very first small steps toward this but you really can't STI the the next two stages to get there and in this stage I",
    "start": "1568480",
    "end": "1575600"
  },
  {
    "text": "really encourage rapid prototyping like trying out some of the ideas you have to figure out if your um mental model of",
    "start": "1575600",
    "end": "1582080"
  },
  {
    "text": "DACA really fits what you're actually able to do get get a feel for the software out there and it's really important that when you're done with all",
    "start": "1582080",
    "end": "1588080"
  },
  {
    "text": "this you throw it all away don't try to develop any any of this into production code just throw it away and move on to",
    "start": "1588080",
    "end": "1594640"
  },
  {
    "text": "the next stage so once you once you've explored",
    "start": "1594640",
    "end": "1603080"
  },
  {
    "text": "it and you've gotten some some level of of confidence and um and and knowledge of Docker within",
    "start": "1603080",
    "end": "1609799"
  },
  {
    "text": "your organization it means that you can start making decisions uh based on future architecture on whether that will",
    "start": "1609799",
    "end": "1615799"
  },
  {
    "text": "fit in a containerized world again you're trying to set yourself up for Success because containers in the future are going to be inevitable to escape how",
    "start": "1615799",
    "end": "1623039"
  },
  {
    "text": "long that will take we don't quite know but in the preparation stage you're really trying to evolve some of your",
    "start": "1623039",
    "end": "1629240"
  },
  {
    "text": "current stock into adopting some of the patterns that are uh compatible with running in containers and I'll get to a",
    "start": "1629240",
    "end": "1634760"
  },
  {
    "text": "few examples really debine said that you have to adopt and that you got that you",
    "start": "1634760",
    "end": "1641600"
  },
  {
    "start": "1637000",
    "end": "1781000"
  },
  {
    "text": "should have hopefully gotten out of the first stage is that you need to adapt a mindset of immutable infrastructure",
    "start": "1641600",
    "end": "1648120"
  },
  {
    "text": "this means being able to um build build something and then not do",
    "start": "1648120",
    "end": "1654240"
  },
  {
    "text": "any online changes to it but build it from scratch again or from some kind of caching infrastructure so you really",
    "start": "1654240",
    "end": "1659720"
  },
  {
    "text": "need to be thinking of your application at somewhat of a static binary that you're shipping around and running and so some of the some of the",
    "start": "1659720",
    "end": "1666559"
  },
  {
    "text": "very common things that that people have to address to fix this problem um is something like secrets I'll go into that",
    "start": "1666559",
    "end": "1673919"
  },
  {
    "text": "with that uh just after this slide and then there's logs a lot of people are are using vendors like Splunk and so on",
    "start": "1673919",
    "end": "1680360"
  },
  {
    "text": "which which don't work really well with with containers out of the box there's um some people who are using IP doing",
    "start": "1680360",
    "end": "1687120"
  },
  {
    "text": "IPC between processes on the same node um and that really has to be done via Network and not via VIA like file iio or",
    "start": "1687120",
    "end": "1695679"
  },
  {
    "text": "uh CIS 5 shared shared namespaces and stuff like that um really really you need to be doing all of this stuff all",
    "start": "1695679",
    "end": "1701919"
  },
  {
    "text": "of the communication with external things over the network uh one example we had was um all of our web traffic",
    "start": "1701919",
    "end": "1707960"
  },
  {
    "text": "went into an engine X on every node and then um sent down to the web service or a Unix domain socket but with containers",
    "start": "1707960",
    "end": "1714720"
  },
  {
    "text": "that doesn't really work um and which is just one of the many rabbit holes because it turns out Unix domain sockets",
    "start": "1714720",
    "end": "1720399"
  },
  {
    "text": "and TCP sockets act differently when you when you have like a listen backlog um",
    "start": "1720399",
    "end": "1725600"
  },
  {
    "text": "on on the socket so there's an incredible amount of of rabbit holes to",
    "start": "1725600",
    "end": "1730640"
  },
  {
    "text": "get into here and really the the important part is just starting to modernize your stack towards this um um",
    "start": "1730640",
    "end": "1738399"
  },
  {
    "text": "towards something that can eventually be put in containers that might not be this year but it is an an important R&D",
    "start": "1738399",
    "end": "1743440"
  },
  {
    "text": "effort to do if you do recognize the value of containers down to line there's a there's um kind of a paradigm or uh a",
    "start": "1743440",
    "end": "1750960"
  },
  {
    "text": "website called 12 factor which kind of list out 12 principles of what a modern application should look like I think",
    "start": "1750960",
    "end": "1756799"
  },
  {
    "text": "some of them are a little bit outdated in terms of Docker but it's really a great start to look at some of these for for what you should be doing and there's",
    "start": "1756799",
    "end": "1762840"
  },
  {
    "text": "a ton of other things like uh making your deploys more immutable uh you should be able to scale scaling your",
    "start": "1762840",
    "end": "1768440"
  },
  {
    "text": "application by adding new containers is a great place to be into before containerizing it but really just",
    "start": "1768440",
    "end": "1773960"
  },
  {
    "text": "depends a lot on your environment and this is why you have the first stage you can figure out what kind of things that you need to change to get to the second",
    "start": "1773960",
    "end": "1781120"
  },
  {
    "text": "one and again it's really just as much about what it's not in that stage you're",
    "start": "1781120",
    "end": "1786559"
  },
  {
    "text": "not trying to do containers you're not trying to change your routing layer you're not trying to switch to some um",
    "start": "1786559",
    "end": "1791960"
  },
  {
    "text": "cool new Linux distribution which can only run Docker on a readon file system you're not trying to do distributed",
    "start": "1791960",
    "end": "1797679"
  },
  {
    "text": "orchestration or anything like that you're just trying to evolve your current thing into something that's more modern and which is which enables you um",
    "start": "1797679",
    "end": "1804679"
  },
  {
    "text": "to do to run this stuff in the future so I'm going to just take take two examples from from Shopify and one one that we",
    "start": "1804679",
    "end": "1811760"
  },
  {
    "start": "1806000",
    "end": "1985000"
  },
  {
    "text": "did right and one that we did very wrong this is the one that we did somewhat right um which is Secrets a lot of",
    "start": "1811760",
    "end": "1819600"
  },
  {
    "text": "people nowadays when they do secrets for their applications is they have a configuration management layer like Chef",
    "start": "1819600",
    "end": "1824840"
  },
  {
    "text": "or puppet distributed files to all the servers with the secret they need the application boots read the reachs the secrets which is a very asynchronous",
    "start": "1824840",
    "end": "1832039"
  },
  {
    "text": "model and if you followed it before what we're really trying to do is is think of this as a binary and secrets having as",
    "start": "1832039",
    "end": "1838840"
  },
  {
    "text": "an asynchronous model with a file on system just doesn't work very well with containers because it means you have to",
    "start": "1838840",
    "end": "1844120"
  },
  {
    "text": "now have like a Secrets container with a file system that's linked into every other container or somewhere like have a",
    "start": "1844120",
    "end": "1850880"
  },
  {
    "text": "have a bind Mount from the host into every container where it can see files and it just gets very very iffy and",
    "start": "1850880",
    "end": "1856919"
  },
  {
    "text": "complic licated and really not something that I would recommend trying so Secrets should either live in",
    "start": "1856919",
    "end": "1863639"
  },
  {
    "text": "the image or be requested externally again you you're allowed in a container world to do IPC over the network that's",
    "start": "1863639",
    "end": "1869840"
  },
  {
    "text": "completely fine and um but you could also just put it in the image obviously you shouldn't be putting decrypted",
    "start": "1869840",
    "end": "1875279"
  },
  {
    "text": "Secrets inside of your images because you want to share the same images with your developers and your and your C and your CI and so on uh down the line um",
    "start": "1875279",
    "end": "1883480"
  },
  {
    "text": "which means that they need to be encrypted when they're in the image and decrypted when they when they boot up in",
    "start": "1883480",
    "end": "1889120"
  },
  {
    "text": "different environments so we built something for that and it's called e Json which is basically encrypted Json",
    "start": "1889120",
    "end": "1895200"
  },
  {
    "text": "so you have in every in every repository you have a e Json file which has all the",
    "start": "1895200",
    "end": "1900399"
  },
  {
    "text": "secrets laid out in plain Json uses asymmetric encryption so all of our developers have a public key can encrypt",
    "start": "1900399",
    "end": "1906600"
  },
  {
    "text": "those secrets and it all lives lives with the with the um with the application so when we build a new",
    "start": "1906600",
    "end": "1912080"
  },
  {
    "text": "container image the the secrets are in there they're encrypted and when we start the container we d decrypt them",
    "start": "1912080",
    "end": "1917880"
  },
  {
    "text": "with our custom init process now because of things like custom init process and um they're being",
    "start": "1917880",
    "end": "1925120"
  },
  {
    "text": "still stayed on the file system and so on this is not really an ideal solution I feel that what what the community",
    "start": "1925120",
    "end": "1931200"
  },
  {
    "text": "needs to move towards is somewhat of a secret broker and this is one of the problems that I have been extremely",
    "start": "1931200",
    "end": "1937039"
  },
  {
    "text": "surprised that the community that I haven't seen more solutions to in the community um Hashi Corp recently",
    "start": "1937039",
    "end": "1943039"
  },
  {
    "text": "released a really really interesting new project which is called The Vault and it has it's basically a secret broker so",
    "start": "1943039",
    "end": "1949840"
  },
  {
    "text": "your containers can when they start they can ask this container hey like give me this secret uh for example for uh it",
    "start": "1949840",
    "end": "1956120"
  },
  {
    "text": "could be for easy2 give me a secret for easy2 uh or S3 or whatever and it even",
    "start": "1956120",
    "end": "1961919"
  },
  {
    "text": "has the concept of leases so what you can do is you can request a a secret and then after 5 to 10 minutes you have to",
    "start": "1961919",
    "end": "1969320"
  },
  {
    "text": "refresh your lease this means that ideally you can actually move towards Secrets where every single container has",
    "start": "1969320",
    "end": "1975960"
  },
  {
    "text": "its own view its own Secrets entirely and they constantly expire which is any security person's uh wet",
    "start": "1975960",
    "end": "1984200"
  },
  {
    "start": "1985000",
    "end": "2211000"
  },
  {
    "text": "dream and so the another example uh is is logging and this is an an example of",
    "start": "1986240",
    "end": "1993200"
  },
  {
    "text": "where we completely failed and got ahead of ourselves we um we didn't really honor",
    "start": "1993200",
    "end": "2000639"
  },
  {
    "text": "the the container uh principles where um where you shouldn't you shouldn't put",
    "start": "2000639",
    "end": "2005720"
  },
  {
    "text": "State inside of your container that lived for an arbitrary amount of time after the container has died so we we decided okay we're going",
    "start": "2005720",
    "end": "2013240"
  },
  {
    "text": "to take a shortcut and we're going to continue log into files just like we've done before and then we will have",
    "start": "2013240",
    "end": "2019000"
  },
  {
    "text": "another container reach into the file system every other container and then take the logs and sent them off to our",
    "start": "2019000",
    "end": "2024639"
  },
  {
    "text": "Splunk server which in retrospect is is an embarrassing way of thinking about it",
    "start": "2024639",
    "end": "2030159"
  },
  {
    "text": "um but that is that's what we did and we thought that that would be a great shortcut to do um and one of the big problems here is really that the vendors",
    "start": "2030159",
    "end": "2036279"
  },
  {
    "text": "haven't caught up we we have Splunk and um for anyone else who uses Splunk like",
    "start": "2036279",
    "end": "2041840"
  },
  {
    "text": "it's paid for um and uh they they just haven't caught up yet they haven't figured out how how",
    "start": "2041840",
    "end": "2048200"
  },
  {
    "text": "to do Docker I um yet so we have to build this stuff ourselves so what we're doing is all of our containers are log",
    "start": "2048200",
    "end": "2054839"
  },
  {
    "text": "into files and we have that container that's reaching into all of them and this brings because this violates the",
    "start": "2054839",
    "end": "2060398"
  },
  {
    "text": "container Paradigm so deeply it brings a lot of issues with it like when a",
    "start": "2060399",
    "end": "2065560"
  },
  {
    "text": "container stops really the right way to do it is that when the container stops it's no longer there you can delete it",
    "start": "2065560",
    "end": "2070800"
  },
  {
    "text": "straight away Docker has a flag for it uh where you can do-- RM and then the container is gone but when you're doing",
    "start": "2070800",
    "end": "2078440"
  },
  {
    "text": "logging you can't really do that because what about the last logging lines just these few milliseconds before the",
    "start": "2078440",
    "end": "2083720"
  },
  {
    "text": "container stopped you still want these logged so you've got to keep it around for some arbitrary amount of time that",
    "start": "2083720",
    "end": "2088800"
  },
  {
    "text": "you think is enough for your Docker de or your logging demon to pick up the logs from the files so now you have to",
    "start": "2088800",
    "end": "2095878"
  },
  {
    "text": "have a sidekick process another sidekick container that is looking at all the other containers and then deleting these",
    "start": "2095879",
    "end": "2102280"
  },
  {
    "text": "containers off disk after a minute or 5 minutes or 10 minutes um which is just a",
    "start": "2102280",
    "end": "2108079"
  },
  {
    "text": "complexity that you definitely don't want this is getting better um and",
    "start": "2108079",
    "end": "2113119"
  },
  {
    "text": "really like most of the issues that I'm talking about with Docker um there's always an upstream issue and it's usually been discussed for about a year",
    "start": "2113119",
    "end": "2119800"
  },
  {
    "text": "but development does move a little bit slow in six they finally introduce login",
    "start": "2119800",
    "end": "2125520"
  },
  {
    "text": "drivers and this me that now with with Docker you can um you can write drivers",
    "start": "2125520",
    "end": "2130880"
  },
  {
    "text": "and kind of log to where you want um in our case we would love to log directly to spunk or directly to cafka or",
    "start": "2130880",
    "end": "2136400"
  },
  {
    "text": "something like that the problem though is that if you want to have your um if",
    "start": "2136400",
    "end": "2141599"
  },
  {
    "text": "you want to have your custom login driver in Docker you basically need to either Fork Docker or um contribute it",
    "start": "2141599",
    "end": "2147920"
  },
  {
    "text": "to core and go through an extensive review process and this really sucks uh",
    "start": "2147920",
    "end": "2153920"
  },
  {
    "text": "because a lot of people are doing a lot of custom things and you like you're not going to get your strange logging scheme",
    "start": "2153920",
    "end": "2160359"
  },
  {
    "text": "that you have found to be effective for your organization merged into Upstream Docker only if you're really really",
    "start": "2160359",
    "end": "2165400"
  },
  {
    "text": "lucky or you're okay with going through and violating a lot of that and changing a lot of that stuff in this stage um",
    "start": "2165400",
    "end": "2171000"
  },
  {
    "text": "fortunately what Docker is now looking towards is going to sort of an ex sensibility model where you can hook",
    "start": "2171000",
    "end": "2177000"
  },
  {
    "text": "into the demon and do and add in plugins at runtime but for logging that's still kind of far out what they're focusing on",
    "start": "2177000",
    "end": "2183000"
  },
  {
    "text": "for 17 which is scheduled um hopefully this summer is for uh Network and",
    "start": "2183000",
    "end": "2188240"
  },
  {
    "text": "storage to be plugable but this is a really really exciting Direction uh right now there are many",
    "start": "2188240",
    "end": "2193720"
  },
  {
    "text": "different solutions around uh CIS log log to log to the network directly from the application standard out Standard",
    "start": "2193720",
    "end": "2199280"
  },
  {
    "text": "air we're looking at standard out Standard air um and then [Music]",
    "start": "2199280",
    "end": "2204440"
  },
  {
    "text": "um yeah we we're still thinking about exactly what to do with loging but it is something that we're working on right",
    "start": "2204440",
    "end": "2211280"
  },
  {
    "start": "2211000",
    "end": "2376000"
  },
  {
    "text": "now and once you're once you're done with this you you have modernized some of your applications some set of your",
    "start": "2211480",
    "end": "2217040"
  },
  {
    "text": "application you figured out what are the principles that we're going to adopt within our organization to be ready for Docker you can finally get to the point",
    "start": "2217040",
    "end": "2223839"
  },
  {
    "text": "where you can start actually using containers um and maybe when you're at this point Docker is no longer the",
    "start": "2223839",
    "end": "2229280"
  },
  {
    "text": "popular container implementation and then you just go with whatever fortunately once you've done the things in stage two it's actually really really",
    "start": "2229280",
    "end": "2235599"
  },
  {
    "text": "easy to move to another container implementation if you needed to so what",
    "start": "2235599",
    "end": "2240680"
  },
  {
    "text": "you need to do in this stage is um get really confident with containers um the second stage um the",
    "start": "2240680",
    "end": "2249240"
  },
  {
    "text": "second stage usually can can take somewhere between uh months to years for your organization depending on what kind",
    "start": "2249240",
    "end": "2255920"
  },
  {
    "text": "of structure are you going for a green field thing in which case it will take less time but you do still need to choose the technologies that you need",
    "start": "2255920",
    "end": "2261920"
  },
  {
    "text": "for like logging secrets and so on um and some people can step can basically skip this step entirely um if they start",
    "start": "2261920",
    "end": "2269440"
  },
  {
    "text": "at a point where the cast Solutions like Google and and Amazon and so on are at a point where they solve all these most of",
    "start": "2269440",
    "end": "2275119"
  },
  {
    "text": "these problems for you so the the focus of this stage is really starting to actually adopt containers and as I've",
    "start": "2275119",
    "end": "2282599"
  },
  {
    "text": "been been preaching before I do recommend starting with development and CI and depending depending on your stock",
    "start": "2282599",
    "end": "2289079"
  },
  {
    "text": "one one might be face more of an immediate issue than the other uh if you're already looking at completely",
    "start": "2289079",
    "end": "2294599"
  },
  {
    "text": "revamping your development environment environment then that might be a good place to start I think a lot more",
    "start": "2294599",
    "end": "2300280"
  },
  {
    "text": "patterns are emerging in the development in CI environment about what to do with Docker uh Docker compose is something",
    "start": "2300280",
    "end": "2306240"
  },
  {
    "text": "that the docker Inc team has built to um manage multiple containers running at",
    "start": "2306240",
    "end": "2311400"
  },
  {
    "text": "once and updating them and so on there's still a lot of questions um question kind of left unanswered of for example",
    "start": "2311400",
    "end": "2317640"
  },
  {
    "text": "if you have um um if you have multiple applications and um you're tying",
    "start": "2317640",
    "end": "2324160"
  },
  {
    "text": "revisions to each other um so if you have service a and service B and you're uh you want to go into um",
    "start": "2324160",
    "end": "2333720"
  },
  {
    "text": "you want to test service a against service B which version of of service B do you actually test against and maybe",
    "start": "2333720",
    "end": "2340280"
  },
  {
    "text": "maybe you're using service Discovery to figure out which production which sha is in production maybe every time they deploy it they go and change the shine",
    "start": "2340280",
    "end": "2346240"
  },
  {
    "text": "every other one which also sucks but these are there are still some unanswered questions here and there but these are definitely very solvable",
    "start": "2346240",
    "end": "2352720"
  },
  {
    "text": "problems for your team and really in this stage is it's important to focus on the fact that",
    "start": "2352720",
    "end": "2358079"
  },
  {
    "text": "you're just trying to introduce containers you're not trying to uh build Crazy features or do do something that",
    "start": "2358079",
    "end": "2365200"
  },
  {
    "text": "you've never been able to do before it's great if that comes out of it but that shouldn't be your primary goal you're setting yourself up for success for",
    "start": "2365200",
    "end": "2371760"
  },
  {
    "text": "later and maybe this is where you go into production or or maybe not and this involves um a bunch of",
    "start": "2371760",
    "end": "2380040"
  },
  {
    "start": "2376000",
    "end": "2420000"
  },
  {
    "text": "things like you need to be able to you need to be really good at building container images you need to figure out Union file systems which I'll get into",
    "start": "2380040",
    "end": "2386520"
  },
  {
    "text": "in a second uh init in a container it's is also something that you might have to do monitoring you might have to run edgy",
    "start": "2386520",
    "end": "2393160"
  },
  {
    "text": "kernels if you're if you're running into uh kernel lockups like we did uh how do you do security updates what about the",
    "start": "2393160",
    "end": "2399440"
  },
  {
    "text": "docker registry where you host all the images how do you manage that how do you scale that uh how do you distribute",
    "start": "2399440",
    "end": "2405040"
  },
  {
    "text": "there's just a talk about deploys and how do you distribute all these Docker images because they're easily a gigabyte",
    "start": "2405040",
    "end": "2410640"
  },
  {
    "text": "or multiple gigabytes large um and the way that the um the algorithm Works to",
    "start": "2410640",
    "end": "2416880"
  },
  {
    "text": "uh send over diffs over the wire is not very very effective and again this is just as much about what it's this stage",
    "start": "2416880",
    "end": "2424520"
  },
  {
    "text": "is just as much about what it's not so don't change orchestration don't change your deployment don't change Linux",
    "start": "2424520",
    "end": "2429880"
  },
  {
    "text": "distribution and if you're changing anything but but containers make a conscious decision to go back to step two get it done right and then move on",
    "start": "2429880",
    "end": "2437200"
  },
  {
    "text": "you're not in a rush and so on some examples that speak to the IM maturity of of of Docker and",
    "start": "2437200",
    "end": "2443720"
  },
  {
    "start": "2439000",
    "end": "2514000"
  },
  {
    "text": "these are one of tens is um running in a knit in a container a lot of people just",
    "start": "2443720",
    "end": "2449720"
  },
  {
    "text": "kind of shove um their application into the container and then um expect it to",
    "start": "2449720",
    "end": "2455040"
  },
  {
    "text": "work but really because you're running in a completely isolated environment you're expected to have an init process",
    "start": "2455040",
    "end": "2460400"
  },
  {
    "text": "in there a good init process um that does everything that init and a nit process does what and a nit process for",
    "start": "2460400",
    "end": "2467119"
  },
  {
    "text": "example can't crash because that crashes the entire namespace but it also has the",
    "start": "2467119",
    "end": "2472880"
  },
  {
    "text": "duty of cleaning up zombie processes so when a when a process dies in in a Unix",
    "start": "2472880",
    "end": "2478520"
  },
  {
    "text": "environment it leaves it it goes into a zombie state so the colonel puts it in a zombie State and something has to",
    "start": "2478520",
    "end": "2484079"
  },
  {
    "text": "acknowledge that okay it entered a zombie State and now it's gone after you acknowledge that and if you don't if you",
    "start": "2484079",
    "end": "2489920"
  },
  {
    "text": "don't have an init inside your container that's doing that by waiting on all the children then you can keep accumulating",
    "start": "2489920",
    "end": "2495520"
  },
  {
    "text": "these zombie processes which is common if you're like forking out and you have timeouts around that forking um this is",
    "start": "2495520",
    "end": "2501440"
  },
  {
    "text": "this is really a common scenario and then you can exhaust a kernel data structure that stores all your processes",
    "start": "2501440",
    "end": "2507280"
  },
  {
    "text": "and your your operating system acts in very very undefined and interesting",
    "start": "2507280",
    "end": "2513800"
  },
  {
    "text": "ways and the other thing is building samples we at Shopify we were not able to get Docker files to work at at our for our",
    "start": "2513800",
    "end": "2521079"
  },
  {
    "start": "2514000",
    "end": "2578000"
  },
  {
    "text": "application at at scale so basically we had to build image infrastructure completely from scratch and this hasn't",
    "start": "2521079",
    "end": "2527640"
  },
  {
    "text": "gotten better at all in the past year and a half which is somewhat depressing we have about a th to 2,000 lines that",
    "start": "2527640",
    "end": "2534920"
  },
  {
    "text": "completely reimplement the um the image build system on top of Docker uh to get our builds fast enough we now have have",
    "start": "2534920",
    "end": "2541880"
  },
  {
    "text": "container builts in a minute which is remarkable Bas based on what we got we but after a lot of work with Docker",
    "start": "2541880",
    "end": "2547880"
  },
  {
    "text": "files we finally got it down to around six minutes but if you have requirements like being able to fix forward really",
    "start": "2547880",
    "end": "2553119"
  },
  {
    "text": "quickly if something breaks then you need to be able to build your containers quickly and really what Docker needs to",
    "start": "2553119",
    "end": "2559800"
  },
  {
    "text": "do is just expose these low-level Primitives of building so that you can build your arbitrarily large and complex build system on top of it but Docker",
    "start": "2559800",
    "end": "2566319"
  },
  {
    "text": "files just sit at a very a very strange and uh not great um abstraction level",
    "start": "2566319",
    "end": "2571920"
  },
  {
    "text": "because it doesn't enable you to do really great things it just enables you to do very very very simple",
    "start": "2571920",
    "end": "2578520"
  },
  {
    "start": "2578000",
    "end": "2652000"
  },
  {
    "text": "things and the last one is is Union file systems uh Docker needs kind of a copy",
    "start": "2578520",
    "end": "2583800"
  },
  {
    "text": "on right file system because you're taking these massive images down on the server and now you might be running",
    "start": "2583800",
    "end": "2589920"
  },
  {
    "text": "hundreds of containers based off of that image instead of doing a copy of the entire image for every single container",
    "start": "2589920",
    "end": "2595200"
  },
  {
    "text": "you want to be able to share share it and then do copy and write on disk um",
    "start": "2595200",
    "end": "2600359"
  },
  {
    "text": "and we tried a bunch of different approaches to this we tried Au FS with just one implementation of this out of Kernel uh better FS is an inernal",
    "start": "2600359",
    "end": "2608319"
  },
  {
    "text": "completely new file system and set FS is another approach but on Linux is still kind of sketchy because it runs in user",
    "start": "2608319",
    "end": "2614400"
  },
  {
    "text": "land because of uh licenses stuff and uh overlay is another completely new",
    "start": "2614400",
    "end": "2620160"
  },
  {
    "text": "implementation of this stuff that came into the kernel um we tried Au FS better fs and it is it was Agony like very bad",
    "start": "2620160",
    "end": "2630280"
  },
  {
    "text": "and uh finally we overlay came into the kernel and that's been working remarkably great for us so this is",
    "start": "2630280",
    "end": "2636160"
  },
  {
    "text": "getting somewhat of a solv problem but it just hasn't been very talked about and in general how Union file systems",
    "start": "2636160",
    "end": "2641440"
  },
  {
    "text": "work and how the build system works is very is not very very uh nicely exposed by by the docker documentation and",
    "start": "2641440",
    "end": "2647960"
  },
  {
    "text": "really requires reading a lot of lower level documentation to understand fully and once you're done with this",
    "start": "2647960",
    "end": "2653680"
  },
  {
    "text": "stage you can finally move on to the one that you've been dreaming about since you went into stage one which is where",
    "start": "2653680",
    "end": "2659319"
  },
  {
    "text": "you start building really really interesting features on top of this stuff this is what this is the stage that we have finally reached where we",
    "start": "2659319",
    "end": "2665079"
  },
  {
    "text": "get to the point what we can build uh where we can do CI in uh in 5 minutes do deploys in 3 minutes and start really",
    "start": "2665079",
    "end": "2671720"
  },
  {
    "text": "building uh infrastructure on top of this but there's been a lot of of really boring daunting work uh that came before",
    "start": "2671720",
    "end": "2679319"
  },
  {
    "text": "this this is where you can do things like distributed orchestration um someone talked about misas earlier today",
    "start": "2679319",
    "end": "2685319"
  },
  {
    "text": "that's one of them um there's tons there are so many companies building so many different ones uh most of them suck but",
    "start": "2685319",
    "end": "2691359"
  },
  {
    "text": "some of them probably work um this is where you start building Docker buttons for your developers this is where you",
    "start": "2691359",
    "end": "2698440"
  },
  {
    "text": "get a completely consistent deploy stock where you have like an overview of all your applications and you click on click on um you have like little sliders to",
    "start": "2698440",
    "end": "2705960"
  },
  {
    "text": "scale them up and down this is where you've really you you're able to build these things this is where you might be experimenting with minimal Linux",
    "start": "2705960",
    "end": "2712160"
  },
  {
    "text": "distributions where you might be running Docker as a nit and the only thing that the servers are running is actually Docker um but this is not really a place",
    "start": "2712160",
    "end": "2720079"
  },
  {
    "text": "that that we are at yet so kind of in the end I",
    "start": "2720079",
    "end": "2726599"
  },
  {
    "start": "2722000",
    "end": "2830000"
  },
  {
    "text": "there's a lot of there's a lot of problem with problems with containers and um some of the problems are with Docker uh I just I just got an email",
    "start": "2726599",
    "end": "2733480"
  },
  {
    "text": "that we had like a memory leak on one of our job servers because of Docker was leaking memory but the ma vast majority",
    "start": "2733480",
    "end": "2739160"
  },
  {
    "text": "of our issues are really around the just the Linux namespace is not being stable and the production tools just not being",
    "start": "2739160",
    "end": "2745760"
  },
  {
    "text": "there yet dad said we really believe in we really believe containers is the future and I think that the community",
    "start": "2745760",
    "end": "2752000"
  },
  {
    "text": "has also realized this that there's there's just too much there's too much there like there's too much talk about",
    "start": "2752000",
    "end": "2757960"
  },
  {
    "text": "it there's too many companies building on top of it like there must be something there maybe someone maybe they haven't quite nailed what it is but",
    "start": "2757960",
    "end": "2764359"
  },
  {
    "text": "there has to be something there and really what you should be looking at now is at least developing the the mindset",
    "start": "2764359",
    "end": "2770400"
  },
  {
    "text": "internally so that you know that you're Building Solutions now that work for this when you have to adopt this in a couple of years and Docker does have",
    "start": "2770400",
    "end": "2778000"
  },
  {
    "text": "open issues for pretty much everything we've seen there are some bucks here and there but most of the bigger bigger design decisions are already there and",
    "start": "2778000",
    "end": "2784520"
  },
  {
    "text": "being discussed but development in core unfortunately is slow I think really",
    "start": "2784520",
    "end": "2789720"
  },
  {
    "text": "that what what's going to be the next really interesting step and what hopefully will move us more towards production is when the extensibility",
    "start": "2789720",
    "end": "2795800"
  },
  {
    "text": "gets into Docker core what we can do like pluggable storage drivers pluggable networking pluggable logging and so on",
    "start": "2795800",
    "end": "2801480"
  },
  {
    "text": "and Docker just again becomes that agreed upon interface and really the images becomes the core of the docker",
    "start": "2801480",
    "end": "2807160"
  },
  {
    "text": "community and how you build that but again the build system sucks currently so they have to completely do the uh",
    "start": "2807160",
    "end": "2813160"
  },
  {
    "text": "redo that and um unfortunately I think the process ects for for example a new build system is is are not great",
    "start": "2813160",
    "end": "2820200"
  },
  {
    "text": "currently so with that um I'll also be up here if anyone has more questions",
    "start": "2820200",
    "end": "2825240"
  },
  {
    "text": "afterwards um yeah",
    "start": "2825240",
    "end": "2832400"
  }
]