[
  {
    "start": "0",
    "end": "68000"
  },
  {
    "text": "[Music]",
    "start": "3500",
    "end": "7820"
  },
  {
    "text": "[Applause] yeah so this is uh not actually my talk this is John and myself John and I",
    "start": "10830",
    "end": "18840"
  },
  {
    "text": "co-founded a company called jux about 12 years ago uh which has recently been acquired by a company called grid",
    "start": "18840",
    "end": "25599"
  },
  {
    "text": "Dynamics as of last week this is actually John's talk and about John's Tech journey and John's experiences and",
    "start": "25599",
    "end": "32398"
  },
  {
    "text": "I'm AP I'm going to apologize that John can't be here because um he's actually",
    "start": "32399",
    "end": "38200"
  },
  {
    "text": "at another conference he said he had to go to a more important conference in New York uh so he kind of asked me would I",
    "start": "38200",
    "end": "45160"
  },
  {
    "text": "give his talk for him I said sure what's what's the title and he said Dynamic and",
    "start": "45160",
    "end": "51800"
  },
  {
    "text": "proud um and so can I change the title he said no it's it's already been",
    "start": "51800",
    "end": "57199"
  },
  {
    "text": "submitted and accepted so you're just going to have have to to work with it and I feel I've been dealt quite a a bad",
    "start": "57199",
    "end": "64239"
  },
  {
    "text": "hand here because the truth is I really like statically type languages and in",
    "start": "64239",
    "end": "70360"
  },
  {
    "start": "68000",
    "end": "384000"
  },
  {
    "text": "fact I started with c and C++ but in 1995 Java came out and I became an avid",
    "start": "70360",
    "end": "77640"
  },
  {
    "text": "Java geek and I went through the whole every version of java up until you know",
    "start": "77640",
    "end": "83280"
  },
  {
    "text": "I was on the Java Train going to every single station up until the the end of the line which was Java 8 of course",
    "start": "83280",
    "end": "89960"
  },
  {
    "text": "course and and then there's been no real changes since but after that 15 years in",
    "start": "89960",
    "end": "95040"
  },
  {
    "text": "Java I moved into another language called closure so I I've had 15 years",
    "start": "95040",
    "end": "100320"
  },
  {
    "text": "with closure so this talk is really my perspective of having kind of half my",
    "start": "100320",
    "end": "105640"
  },
  {
    "text": "career in one camp and one in another John was concerned that the religious",
    "start": "105640",
    "end": "111680"
  },
  {
    "text": "war between Dynamic and static languages have has kind of tailed off and he I",
    "start": "111680",
    "end": "117399"
  },
  {
    "text": "think he wants to stoke up again and and uh and I was thinking about this who who actually won the war and is it still",
    "start": "117399",
    "end": "123719"
  },
  {
    "text": "going because I think there's a sense that a a new generation of programmers kind of think that the static languages",
    "start": "123719",
    "end": "131720"
  },
  {
    "text": "have won there's certainly a Resurgence and certainly if you talk to somebody in JavaScript who have discovered",
    "start": "131720",
    "end": "137879"
  },
  {
    "text": "typescript there is this feeling that Java that static languages have",
    "start": "137879",
    "end": "143120"
  },
  {
    "text": "one and I I really like uh static Lang languages the the thing the feeling that",
    "start": "143120",
    "end": "150760"
  },
  {
    "text": "you get when you immerse yourself in a type system and you run the compiler and",
    "start": "150760",
    "end": "156800"
  },
  {
    "text": "you think everything's going to work and the compiler says no look you did something wrong and you think gosh",
    "start": "156800",
    "end": "162720"
  },
  {
    "text": "imagine if that got into production and You Begin a sort of healthy relationship",
    "start": "162720",
    "end": "168159"
  },
  {
    "text": "a dependency relationship on this wonderful compiler there are some people who say and it's true that because",
    "start": "168159",
    "end": "175239"
  },
  {
    "text": "you're doing more checks the compiler is doing checks that you would have to do in runtime and therefore there is a",
    "start": "175239",
    "end": "181280"
  },
  {
    "text": "performance Improvement that you get um also back in the day of Java programming",
    "start": "181280",
    "end": "188040"
  },
  {
    "text": "when there was about 11 packages you could kind of learn all of the API calls that you would need on a dayto day basis",
    "start": "188040",
    "end": "194840"
  },
  {
    "text": "but now there are thousands so having an IDE pop up did you mean this this is your choice and it gets all of that from",
    "start": "194840",
    "end": "202239"
  },
  {
    "text": "the static type system of the language so that's very useful too the final",
    "start": "202239",
    "end": "207959"
  },
  {
    "text": "thing I think is what we all feel is when you are at one with the compiler",
    "start": "207959",
    "end": "213239"
  },
  {
    "text": "and you're building a type system and you're refactoring and we've been talking about today with um um Martin",
    "start": "213239",
    "end": "221200"
  },
  {
    "text": "Fowler's interview about that feeling you get when you you're designing and you're iterating the design and the",
    "start": "221200",
    "end": "227959"
  },
  {
    "text": "design almost gets better and better and better and more perfect and you spot opportunities to improve the design and",
    "start": "227959",
    "end": "234319"
  },
  {
    "text": "then you end up with a really good design rather than having to think about it up front you let the the design",
    "start": "234319",
    "end": "240439"
  },
  {
    "text": "evolve and that feeling of Designing through refactoring is something that I think is enabled by a good type",
    "start": "240439",
    "end": "248120"
  },
  {
    "text": "system um so I could talk about all the",
    "start": "248120",
    "end": "253560"
  },
  {
    "text": "benefits of static typing honestly I could spend a whole talk talking about how good static languages are could do",
    "start": "253560",
    "end": "260639"
  },
  {
    "text": "I'm not supposed to but the um if you want to go and find more information",
    "start": "260639",
    "end": "265680"
  },
  {
    "text": "about static type languages and the benefits I recommend this talk this was was done at strange Loop 10 years ago uh",
    "start": "265680",
    "end": "273280"
  },
  {
    "text": "type systems The Good the Bad and the Ugly I've put QR codes on some of these slides if you want to take uh take a",
    "start": "273280",
    "end": "279280"
  },
  {
    "text": "picture of them to for for um watching them uh later",
    "start": "279280",
    "end": "284960"
  },
  {
    "text": "on so Paul and Amanda asked strange Loop audience um you know they prepared this",
    "start": "284960",
    "end": "291479"
  },
  {
    "text": "talk and they went around on the corridor track and ask them what do you think of type systems and apparently",
    "start": "291479",
    "end": "298320"
  },
  {
    "text": "many people at strange Loop said well I don't need one um people who go to",
    "start": "298320",
    "end": "304039"
  },
  {
    "text": "strange Loop are a little strange and um they thought that this was because they",
    "start": "304039",
    "end": "309160"
  },
  {
    "text": "needed educating so the uh the feeling was that people who don't like type",
    "start": "309160",
    "end": "316080"
  },
  {
    "text": "systems or don't feel you know these Dynamic programmers who go to strange Loop perhaps they just haven't been",
    "start": "316080",
    "end": "321639"
  },
  {
    "text": "educated or perhaps they've been exposed to type systems and things like Java and cop they just haven't learned how to do",
    "start": "321639",
    "end": "329720"
  },
  {
    "text": "type systems with a a great type Checker like Scala or or hcll U maybe there's",
    "start": "329720",
    "end": "335680"
  },
  {
    "text": "you know something wrong with people who who don't enjoy static programs and in",
    "start": "335680",
    "end": "341319"
  },
  {
    "text": "fact ask the question in their talk is it even ethical ethical to use a dynamically",
    "start": "341319",
    "end": "347880"
  },
  {
    "text": "typed system uh today um so hands up if you've used a dynamic type system oh you",
    "start": "347880",
    "end": "355759"
  },
  {
    "text": "have are you feeling ashamed maybe you should breathe out and uh just",
    "start": "355759",
    "end": "363080"
  },
  {
    "text": "just spend a moment reflecting on that perhaps you should just breathe",
    "start": "363080",
    "end": "368400"
  },
  {
    "text": "in you feeling the shame breathe in the shame",
    "start": "368400",
    "end": "373759"
  },
  {
    "text": "good are there any reasons to adopt a dynamically typed",
    "start": "373759",
    "end": "378919"
  },
  {
    "text": "language um well there are there are some benefits um these are not for me",
    "start": "378919",
    "end": "385479"
  },
  {
    "start": "384000",
    "end": "518000"
  },
  {
    "text": "killer benefits um but it's true that if you if if you've ever had spent an",
    "start": "385479",
    "end": "391240"
  },
  {
    "text": "evening trying to get all your generics warnings to be completely zero and to try and fighting against the type system",
    "start": "391240",
    "end": "398800"
  },
  {
    "text": "um you may realize that that is time that you could have been spent coding",
    "start": "398800",
    "end": "403919"
  },
  {
    "text": "other things and so yes there is a little bit of experience in dynamic programming languages as of a freedom",
    "start": "403919",
    "end": "411160"
  },
  {
    "text": "they are supposedly easier to learn because there's just less of the language you don't have to learn the",
    "start": "411160",
    "end": "416599"
  },
  {
    "text": "type system I don't think that we should optimize laziness in developers I don't",
    "start": "416599",
    "end": "421680"
  },
  {
    "text": "think that's a good reason the ability to do metaprogramming so in in Dynamic languages you can do",
    "start": "421680",
    "end": "428560"
  },
  {
    "text": "more at runtime and that's kind of by Design you're you're",
    "start": "428560",
    "end": "434039"
  },
  {
    "text": "allowing you're having to do defensive checks at runtime and you've just got more that you can do because you can do",
    "start": "434039",
    "end": "441080"
  },
  {
    "text": "things that the compiler wouldn't allow you to do you can instantiate your own objects and do things very dynamically",
    "start": "441080",
    "end": "448639"
  },
  {
    "text": "and I think the other thing thing that people point to especially in languages like closure and lisp is this",
    "start": "448639",
    "end": "454440"
  },
  {
    "text": "interactive system that you have with the reppel where you can try things out very very quickly and evolve that design",
    "start": "454440",
    "end": "461080"
  },
  {
    "text": "by asking questions of the system and coding it from from",
    "start": "461080",
    "end": "467120"
  },
  {
    "text": "within is there any more to Dynamic languages I think uh well Nathan is a programmer Nathan Mars is a programmer",
    "start": "467120",
    "end": "473479"
  },
  {
    "text": "famous for work in distributed systems he went dark for about 10 years and just surfaced last October with distributed",
    "start": "473479",
    "end": "480120"
  },
  {
    "text": "system called Rama and Nathan uses closure and he thinks I mean this thinks is quite of a provocative statement but",
    "start": "480120",
    "end": "486479"
  },
  {
    "text": "I put this up here because I think that um there is something much deeper with",
    "start": "486479",
    "end": "492440"
  },
  {
    "text": "Dynamic languages if the the replies to this tweet are quite interesting because they cover most of the the debate the",
    "start": "492440",
    "end": "499240"
  },
  {
    "text": "old dat debate between static and dynamic um so it's worth exploring um",
    "start": "499240",
    "end": "504960"
  },
  {
    "text": "but the responses really Echo something that I feel that refactoring",
    "start": "504960",
    "end": "510039"
  },
  {
    "text": "towards a nice design is actually much nicer in static languages um so static",
    "start": "510039",
    "end": "516560"
  },
  {
    "text": "or dynamic it it depends and I think it depends on what is it that you want to",
    "start": "516560",
    "end": "523800"
  },
  {
    "start": "518000",
    "end": "703000"
  },
  {
    "text": "fix that you want the compiler to enforce and what is it that you want to",
    "start": "523800",
    "end": "529160"
  },
  {
    "text": "flex and I'm going to argue for the rest of this talk that I think there is something in the domain model that we",
    "start": "529160",
    "end": "535680"
  },
  {
    "text": "create in our languages that we want to flex we don't want to compile to check the domain",
    "start": "535680",
    "end": "544399"
  },
  {
    "text": "model so to to explain um what I mean by this",
    "start": "545279",
    "end": "552640"
  },
  {
    "text": "um I need to Define what we mean by a type because the word type actually",
    "start": "552640",
    "end": "558079"
  },
  {
    "text": "means many things at once and it leads to confusion when we use the word it's",
    "start": "558079",
    "end": "563279"
  },
  {
    "text": "just heavily overloaded as a word so I'm going to explain this by reference to",
    "start": "563279",
    "end": "569600"
  },
  {
    "text": "different types of type now most languages have primitive types Boolean",
    "start": "569600",
    "end": "575560"
  },
  {
    "text": "and Float integer and character and those things and we compose those into more compound types like a string is",
    "start": "575560",
    "end": "582440"
  },
  {
    "text": "really a collection of characters but I still think that these simple types are",
    "start": "582440",
    "end": "588560"
  },
  {
    "text": "worth having as as values as immutable and I call them Atomic I don't want to",
    "start": "588560",
    "end": "594200"
  },
  {
    "text": "break open a date and set the month I want a date to be a fix value and and be",
    "start": "594200",
    "end": "601880"
  },
  {
    "text": "immutable I don't want to break open a money class I've seen this happen in a bank where a money class money object",
    "start": "601880",
    "end": "607920"
  },
  {
    "text": "has had its currency set but not its amount giv some kind of set a method and all hell breaks loose I want these",
    "start": "607920",
    "end": "615160"
  },
  {
    "text": "things to be values and I want them to be checked by the compiler and and and the same with aggregate types which here",
    "start": "615160",
    "end": "622200"
  },
  {
    "text": "is the the arrays ass sets the lists the maps that we use in our code I don't",
    "start": "622200",
    "end": "627320"
  },
  {
    "text": "want to have a function that that is works on an array of strings and is",
    "start": "627320",
    "end": "633959"
  },
  {
    "text": "given an array of integers that's just something I want the compiler to check",
    "start": "633959",
    "end": "639279"
  },
  {
    "text": "for me but there is this idea of a record",
    "start": "639279",
    "end": "646040"
  },
  {
    "text": "type um Java 14 introduced Java record types it um it it's been and cotlin has",
    "start": "646040",
    "end": "652600"
  },
  {
    "text": "data classes and even closure has records um and these things are",
    "start": "652600",
    "end": "657839"
  },
  {
    "text": "composite aggreg ations of different",
    "start": "657839",
    "end": "663040"
  },
  {
    "text": "elements what I mean by that is that they often are records that reflect a",
    "start": "663040",
    "end": "669839"
  },
  {
    "text": "business domain so for this talk we could express this talk in Jason",
    "start": "669839",
    "end": "676120"
  },
  {
    "text": "uh Java here actually allows you to create a record which is allows it to",
    "start": "676120",
    "end": "682000"
  },
  {
    "text": "allow us to compose these things that are belonging together for a particular",
    "start": "682000",
    "end": "687240"
  },
  {
    "text": "business process or a business need I don't I think these types are Universal by the way and I think this is part of",
    "start": "687240",
    "end": "692600"
  },
  {
    "text": "the problem by putting them and codifying them into our programs like this we're kind of making statements",
    "start": "692600",
    "end": "699000"
  },
  {
    "text": "that these things are Universal when they're actually very contextual",
    "start": "699000",
    "end": "705000"
  },
  {
    "start": "703000",
    "end": "961000"
  },
  {
    "text": "um and the reason why I think you need the domain to flex is that the",
    "start": "705000",
    "end": "712959"
  },
  {
    "text": "domain is always evolving and I think most people are",
    "start": "712959",
    "end": "718800"
  },
  {
    "text": "aware that that change is something that we cannot stop you can't just stop the",
    "start": "718800",
    "end": "724920"
  },
  {
    "text": "progress where does progress come from it's it change is really divided up into two ideas that there's real change that",
    "start": "724920",
    "end": "732160"
  },
  {
    "text": "you want to produce a new feature or your boss is saying that there's there's a new product or you want to go to",
    "start": "732160",
    "end": "737760"
  },
  {
    "text": "market with a new you know Financial instrument you want to trade something new or might be having new regulations",
    "start": "737760",
    "end": "743720"
  },
  {
    "text": "these are things that the market or the external forces are bringing to bear and this is why we have to change our programs and then there is another",
    "start": "743720",
    "end": "750839"
  },
  {
    "text": "category of change which I call epistemological change so this is where",
    "start": "750839",
    "end": "756199"
  },
  {
    "text": "our approximations aren't accurate enough so a domain or a set of types is",
    "start": "756199",
    "end": "762720"
  },
  {
    "text": "only really a best guess as to what the business is and often we need to evolve",
    "start": "762720",
    "end": "767760"
  },
  {
    "text": "that and we find out that we're wrong and so as we improve our theories about the way the business works we can",
    "start": "767760",
    "end": "773959"
  },
  {
    "text": "improve our types and this is what's going on when we're refactoring we're trying to move towards a better",
    "start": "773959",
    "end": "779320"
  },
  {
    "text": "approximation or because we get a new feature request",
    "start": "779320",
    "end": "785800"
  },
  {
    "text": "um but I've noticed coming back to work on Java projects um having had some sort",
    "start": "785800",
    "end": "792680"
  },
  {
    "text": "of time away with closure that I see almost every project that I you know",
    "start": "792680",
    "end": "799120"
  },
  {
    "text": "I've witnessed and around the company has this quality",
    "start": "799120",
    "end": "805079"
  },
  {
    "text": "that we use good agile practices but they're constantly into change uh all",
    "start": "805079",
    "end": "811519"
  },
  {
    "text": "the time and we're trying to optimize that we're trying to make it quicker and quicker and quicker to change things and",
    "start": "811519",
    "end": "817240"
  },
  {
    "text": "I'm arguing that there are some things that should just be slowed down we don't",
    "start": "817240",
    "end": "822920"
  },
  {
    "text": "want to create systems where where there is a dependency that is created on the",
    "start": "822920",
    "end": "828120"
  },
  {
    "text": "developer team I've I work with some banks and there's big systems that don't have",
    "start": "828120",
    "end": "835040"
  },
  {
    "text": "anybody who can work on them because there are thousands of systems we need to work out an endgame for the programs",
    "start": "835040",
    "end": "842040"
  },
  {
    "text": "that we build and I think too often the agility in agile is actually a",
    "start": "842040",
    "end": "848399"
  },
  {
    "text": "characteristic of the team and not a characteristic of the the systems that",
    "start": "848399",
    "end": "853600"
  },
  {
    "text": "are produced because it depends on if you want if something change is required",
    "start": "853600",
    "end": "859759"
  },
  {
    "text": "you need the developers to come back into the room Stoke up the fires of the build machine produce a new system",
    "start": "859759",
    "end": "866160"
  },
  {
    "text": "redeploy it and it's okay if you can do that every 30 seconds or 15 seconds as businesses are due but it is dependent",
    "start": "866160",
    "end": "872839"
  },
  {
    "text": "on having people firing up the build these systems don't flex with change in",
    "start": "872839",
    "end": "879560"
  },
  {
    "text": "ways that they ought to ways that they used to do",
    "start": "879560",
    "end": "884759"
  },
  {
    "text": "um it didn't always used to be like this consider this piece of software here",
    "start": "884759",
    "end": "890680"
  },
  {
    "text": "spreadsheet if all of the Excel developers stopped working tomorrow and",
    "start": "890680",
    "end": "896040"
  },
  {
    "text": "retired how many Excel users would actually know",
    "start": "896040",
    "end": "901040"
  },
  {
    "text": "notice I don't think any hardly any of them would notice I I know people who work on EX",
    "start": "902800",
    "end": "910480"
  },
  {
    "text": "Excel versions that are decades old and they do their own home accounts",
    "start": "910480",
    "end": "915560"
  },
  {
    "text": "and they wouldn't notice that Excel didn't drop new features I mean Excel still does drop new features don't get",
    "start": "915560",
    "end": "921399"
  },
  {
    "text": "me wrong we still have to pay for it and there's subscription plans but if it didn't the world would carry on going",
    "start": "921399",
    "end": "927839"
  },
  {
    "text": "around because in these products the domain is actually flexed by the user you can put anything",
    "start": "927839",
    "end": "934639"
  },
  {
    "text": "into this it's an extreme example but it's what I'm talking about when I say dynamic system for me this is a dynamic",
    "start": "934639",
    "end": "942680"
  },
  {
    "text": "system and a dynamic this is this is really the goal this is if we want our",
    "start": "942680",
    "end": "948279"
  },
  {
    "text": "systems to flex and to outlive us and to be able to stop working on systems we",
    "start": "948279",
    "end": "953319"
  },
  {
    "text": "need more characteristics like this um",
    "start": "953319",
    "end": "960920"
  },
  {
    "start": "961000",
    "end": "1042000"
  },
  {
    "text": "so what is the alternative to the way that we code right now um I think one",
    "start": "961079",
    "end": "968319"
  },
  {
    "text": "way is that we could ban record types um when I first learned fun",
    "start": "968319",
    "end": "974800"
  },
  {
    "text": "functional programming I I was working with a colleague Tim Williams and he used to tell me that functional",
    "start": "974800",
    "end": "980720"
  },
  {
    "text": "programming was all about building little compilers and little interpreters and he was saying only build those",
    "start": "980720",
    "end": "986920"
  },
  {
    "text": "things and everything else should be input you just write functions that will",
    "start": "986920",
    "end": "992920"
  },
  {
    "text": "just be almost Universal and they will be told what to do by a stream of input and that input can",
    "start": "992920",
    "end": "999319"
  },
  {
    "text": "change and that really kind of has been a big inspiration on me so what we're seeing here",
    "start": "999319",
    "end": "1005880"
  },
  {
    "text": "is if we get rid of our record types from our static systems where do they go",
    "start": "1005880",
    "end": "1012600"
  },
  {
    "text": "uh I have some uh candidates for what schema you",
    "start": "1012600",
    "end": "1018360"
  },
  {
    "text": "can what scheme of choices you have and there's there's a lot of choices but it does require your systems to be more",
    "start": "1018360",
    "end": "1025240"
  },
  {
    "text": "abstract in a way they instead of knowing what the types are they're going to have to read the types up from some",
    "start": "1025240",
    "end": "1030438"
  },
  {
    "text": "sort of input they going to have to have some introspection it's going to be they're going to be harder to write basically",
    "start": "1030439",
    "end": "1037319"
  },
  {
    "text": "but it may be worth it one example is Jason schema hands up",
    "start": "1037319",
    "end": "1044199"
  },
  {
    "start": "1042000",
    "end": "1360000"
  },
  {
    "text": "if you've heard of Jason schema so I think",
    "start": "1044199",
    "end": "1050400"
  },
  {
    "text": "for actually specifying the constraints of what your",
    "start": "1050400",
    "end": "1055600"
  },
  {
    "text": "input arguments want to look like Jason schema may be too o overkill for this but for many",
    "start": "1055600",
    "end": "1064200"
  },
  {
    "text": "data shapes that we deal with that we use a type system for can actually be expressed more flexibly with a set of",
    "start": "1064200",
    "end": "1071360"
  },
  {
    "text": "constraints and you can code up these constraints in Json schema Json schema supports numerations all kinds of",
    "start": "1071360",
    "end": "1078440"
  },
  {
    "text": "dependen icies all kinds of combinations of things actually Jason schem is incredibly",
    "start": "1078440",
    "end": "1084679"
  },
  {
    "text": "powerful um you can be very contextual with these kind of specifications",
    "start": "1084679",
    "end": "1091120"
  },
  {
    "text": "instead of types let me let me explain what I mean by that um there are some you you may",
    "start": "1091120",
    "end": "1098559"
  },
  {
    "text": "create a um medical record for example where you want to capture somebody's",
    "start": "1098559",
    "end": "1105080"
  },
  {
    "text": "date of birth and name and address and they arrive at the hospital",
    "start": "1105080",
    "end": "1112240"
  },
  {
    "text": "and they're unconscious and you will you're not going to be able to ask them the date of birth sometimes you just",
    "start": "1112240",
    "end": "1119559"
  },
  {
    "text": "don't know and it'll have to be null but if later on you're trying to work out if theyve been at the hospital before or",
    "start": "1119559",
    "end": "1125840"
  },
  {
    "text": "what their medical history is you may need the date of birth so is sometimes the nullness of something is contextual",
    "start": "1125840",
    "end": "1132880"
  },
  {
    "text": "depending on whether you need it if you're shipping for example doing a shipping application and you're shipping Goods out of a factory",
    "start": "1132880",
    "end": "1139640"
  },
  {
    "text": "you may need just the name and the address of the recipient but you might not need to know how much the price of",
    "start": "1139640",
    "end": "1146440"
  },
  {
    "text": "the goods were to charge that might be a function of the accounts department so the nice thing about making types that",
    "start": "1146440",
    "end": "1153760"
  },
  {
    "text": "are well not types sort of specifications is that I allow you at point to point at different contexts to",
    "start": "1153760",
    "end": "1160520"
  },
  {
    "text": "say this is what I need and this is just what I need there is some elements in",
    "start": "1160520",
    "end": "1165679"
  },
  {
    "text": "typescript with structural typing that you might have seen where you who just say look I don't need it to be a type of",
    "start": "1165679",
    "end": "1171159"
  },
  {
    "text": "employee but I do need something that has these three attributes uh so that that's flexible",
    "start": "1171159",
    "end": "1177919"
  },
  {
    "text": "too the the other benefit of Json schemas and things like this is that we can pull them out of our programming",
    "start": "1177919",
    "end": "1186200"
  },
  {
    "text": "languages we can store them in files we can share them with colleagues who may",
    "start": "1186200",
    "end": "1191880"
  },
  {
    "text": "not be working in our programming language so this idea of being able to have a shared language",
    "start": "1191880",
    "end": "1198799"
  },
  {
    "text": "um and to to start putting records in in something that is external and can be versioned and put in Version Control too",
    "start": "1198799",
    "end": "1205640"
  },
  {
    "text": "often we are creating different representations of our domain in",
    "start": "1205640",
    "end": "1210840"
  },
  {
    "text": "different languages and then if you find you're serializing you're outputting and writing to Json or XML and then",
    "start": "1210840",
    "end": "1218480"
  },
  {
    "text": "colleagues working in other languages are writing der serializers that are bringing in that data there's a lot of",
    "start": "1218480",
    "end": "1224440"
  },
  {
    "text": "work that has done just by mapping one type system to another through Network boundaries and we do this kind of",
    "start": "1224440",
    "end": "1231440"
  },
  {
    "text": "unthinkingly but my argument is that Dynamic systems or or at least um there",
    "start": "1231440",
    "end": "1238240"
  },
  {
    "text": "is an opportunity here to start encoding what we mean by a domain in these scheme",
    "start": "1238240",
    "end": "1244799"
  },
  {
    "text": "of languages my company ju have had a number of experiences with Building",
    "start": "1244799",
    "end": "1250159"
  },
  {
    "text": "Systems just like this we built um we've built some Financial systems where new",
    "start": "1250159",
    "end": "1256159"
  },
  {
    "text": "products new Financial products can be onboarded with without one line of change of code that needs to be changed",
    "start": "1256159",
    "end": "1261400"
  },
  {
    "text": "without any releases and the way that's done is the people who structure the",
    "start": "1261400",
    "end": "1267000"
  },
  {
    "text": "products at the quants and the and the mathematicians can create a Jason schema",
    "start": "1267000",
    "end": "1273679"
  },
  {
    "text": "that represent the range the types of the type of the financial product what",
    "start": "1273679",
    "end": "1280320"
  },
  {
    "text": "kind whether it's a bond whether it's an equity whether it has some insurance whether it has a you know a cash flow leg or what all those kind of attributes",
    "start": "1280320",
    "end": "1287880"
  },
  {
    "text": "that you need need to know the notion or the price quantity of a product and so",
    "start": "1287880",
    "end": "1293200"
  },
  {
    "text": "they can create the type and then that type flows all the way Downstream user",
    "start": "1293200",
    "end": "1299000"
  },
  {
    "text": "interfaces can be generated from that description validators can be uh whole",
    "start": "1299000",
    "end": "1304080"
  },
  {
    "text": "trading systems can be can agree what the terms are by just agreeing and what",
    "start": "1304080",
    "end": "1309840"
  },
  {
    "text": "the what the Json schema is I didn't think Json schema would scale to an organization",
    "start": "1309840",
    "end": "1318360"
  },
  {
    "text": "but for a particular stream of five or six applications or talk to talking to each other it works very well and what",
    "start": "1318360",
    "end": "1325360"
  },
  {
    "text": "it does is it releases the burden of having to keep the cicd pipeline warming",
    "start": "1325360",
    "end": "1331840"
  },
  {
    "text": "warm all the time and doing release and after release and all the testing it just says look this stuff is done if we",
    "start": "1331840",
    "end": "1337000"
  },
  {
    "text": "need to make a fundamental change to these internal compilers and interpreters then sure we can do another",
    "start": "1337000",
    "end": "1342720"
  },
  {
    "text": "release but it does take a lot of Burden from the organization and allows them a",
    "start": "1342720",
    "end": "1347760"
  },
  {
    "text": "degree of agility that they that they can put something into production almost straight away",
    "start": "1347760",
    "end": "1355840"
  },
  {
    "text": "instantaneously there are other types of schema that I I want to just for",
    "start": "1356039",
    "end": "1361840"
  },
  {
    "start": "1360000",
    "end": "1530000"
  },
  {
    "text": "completeness mention if we talked about the you large if you're creating uh types for your whole",
    "start": "1361840",
    "end": "1369279"
  },
  {
    "text": "organization or the or the planet you might choose to use rdf and semantic web",
    "start": "1369279",
    "end": "1375559"
  },
  {
    "text": "technology there's a Renaissance on seman web Technologies partly because of",
    "start": "1375559",
    "end": "1380600"
  },
  {
    "text": "the ability for AI and large language models to learn well-known attributes",
    "start": "1380600",
    "end": "1386760"
  },
  {
    "text": "from the web and and learn all that information so that large language models actually know this rdf stuff",
    "start": "1386760",
    "end": "1392400"
  },
  {
    "text": "really really well so if you express your system in terms of rdf you find there's um a lot of Leverage that you",
    "start": "1392400",
    "end": "1399440"
  },
  {
    "text": "can get from gen we have I've had experience using",
    "start": "1399440",
    "end": "1405400"
  },
  {
    "text": "graphql schema to create large um type systems which then you can introspect",
    "start": "1405400",
    "end": "1411960"
  },
  {
    "text": "graphql has a quality that you can introspect at runtime you can ask queries of the",
    "start": "1411960",
    "end": "1417600"
  },
  {
    "text": "types um we we've also touched upon well",
    "start": "1417600",
    "end": "1422760"
  },
  {
    "text": "XML schema uh it's nobody talks about XML anymore but XML schema had this uh",
    "start": "1422760",
    "end": "1429960"
  },
  {
    "text": "that there was a nice competitor to XML schema about 20 years ago called relaxing and that had a nice property",
    "start": "1429960",
    "end": "1436440"
  },
  {
    "text": "that you could write XM specifications just for that minimal",
    "start": "1436440",
    "end": "1441559"
  },
  {
    "text": "those minimal cases like you're in that that ship that factory and you want to ship products and you can create them",
    "start": "1441559",
    "end": "1448039"
  },
  {
    "text": "such that an XML document didn't have to say this is the type it the type that",
    "start": "1448039",
    "end": "1453679"
  },
  {
    "text": "will Define all the XML documents it was just this a just in time specification for what you needed at the point that",
    "start": "1453679",
    "end": "1460120"
  },
  {
    "text": "you needed it and of course all these three have this quality that you can produce them in data and stall them in",
    "start": "1460120",
    "end": "1466640"
  },
  {
    "text": "databases um database schema you know there are a lot of systems that you put the database schema in place and it will",
    "start": "1466640",
    "end": "1472520"
  },
  {
    "text": "introspect and generate all your code for you and you have nice user interfaces um the problem kind of with",
    "start": "1472520",
    "end": "1478520"
  },
  {
    "text": "database schemas is that they don't allow you to have multiple schemas at",
    "start": "1478520",
    "end": "1484120"
  },
  {
    "text": "the same time it is a kind of All or Nothing you you can't really store a database schema in a database or at",
    "start": "1484120",
    "end": "1489360"
  },
  {
    "text": "least if you do it's a the database schemer is only of one schema at a time which then when we're talking about",
    "start": "1489360",
    "end": "1496120"
  },
  {
    "text": "evolving the domain over time you kind of get cut off from the past I've got something to say about that in",
    "start": "1496120",
    "end": "1502080"
  },
  {
    "text": "a minute um and and schemas are just one",
    "start": "1502080",
    "end": "1507760"
  },
  {
    "text": "aspect of something I call form so I think there's this is not just for for",
    "start": "1507760",
    "end": "1515360"
  },
  {
    "text": "types it's also for workflow business processes for rules there domain",
    "start": "1515360",
    "end": "1520559"
  },
  {
    "text": "language ontologies all of these things I put in this layer called form because I think they're an evolving",
    "start": "1520559",
    "end": "1527480"
  },
  {
    "text": "organizational knowledge in fact an organization it's its business knowledge",
    "start": "1527480",
    "end": "1533279"
  },
  {
    "start": "1530000",
    "end": "1695000"
  },
  {
    "text": "is really the sum of all of the constraints and forms and things that",
    "start": "1533279",
    "end": "1538360"
  },
  {
    "text": "you fill out and constraints and rules and you put them all together and that's what the business is and how it",
    "start": "1538360",
    "end": "1545080"
  },
  {
    "text": "understands its place in the world and that is the thing that evolves and so we",
    "start": "1545080",
    "end": "1550120"
  },
  {
    "text": "want to decouple that from our code so I've in this talk we're we're coming uh",
    "start": "1550120",
    "end": "1557720"
  },
  {
    "text": "to a close soon um we've touched on really the top level of this diagram",
    "start": "1557720",
    "end": "1563240"
  },
  {
    "text": "here um but at my company we have a methodology which says really you need",
    "start": "1563240",
    "end": "1569279"
  },
  {
    "text": "to keep all these four things separate the forms that we've described in schema they need to sit somewhere in a database",
    "start": "1569279",
    "end": "1577399"
  },
  {
    "text": "and we when we store facts we want to store those facts across the whole of",
    "start": "1577399",
    "end": "1582640"
  },
  {
    "text": "time we don't want to just capture today for reporting and all kinds of reasons",
    "start": "1582640",
    "end": "1587880"
  },
  {
    "text": "and for audit we need to capture yesterday as well so how do we solve this problem of evolving schemas across",
    "start": "1587880",
    "end": "1595760"
  },
  {
    "text": "time um at the database level this is something that is this is question has",
    "start": "1595760",
    "end": "1601080"
  },
  {
    "text": "what inspired us to try and build a bmal",
    "start": "1601080",
    "end": "1606640"
  },
  {
    "text": "database uh we heard today Martin Fowler talked about uh schema migrations and",
    "start": "1608600",
    "end": "1614559"
  },
  {
    "text": "and being agile in the database schema migrations can be very very important",
    "start": "1614559",
    "end": "1620000"
  },
  {
    "text": "the engineers behind xdb have have managed to relax the idea that every",
    "start": "1620000",
    "end": "1626880"
  },
  {
    "text": "table needs to have a fixed schema at one point and actually allow it to allows it to evolve across the timeline",
    "start": "1626880",
    "end": "1632720"
  },
  {
    "text": "this is one of the features that is almost necessary if you're building a database that has to allow you to do",
    "start": "1632720",
    "end": "1638320"
  },
  {
    "text": "queries across time so facts that you store in the database can be retrieved",
    "start": "1638320",
    "end": "1643720"
  },
  {
    "text": "um that when you do update statements in a database there's no way of getting rid of the old version It's kind of",
    "start": "1643720",
    "end": "1649960"
  },
  {
    "text": "everything is is then remembered in an immutable database um but uh there's whole more",
    "start": "1649960",
    "end": "1656799"
  },
  {
    "text": "talks on xtb and how this works but it is kind of partly our challenge of how",
    "start": "1656799",
    "end": "1662640"
  },
  {
    "text": "do we cope with change in our requirements and change in our data and change in our organization this is this",
    "start": "1662640",
    "end": "1668679"
  },
  {
    "text": "is really the next big challenge the system is dynamic and if",
    "start": "1668679",
    "end": "1675240"
  },
  {
    "text": "you want to hear more we've got a ju cast uh on this topic um this is where you",
    "start": "1675240",
    "end": "1681480"
  },
  {
    "text": "will hear John because John's on this episode um so look up J's cast on Google we're talking about um a few um other",
    "start": "1681480",
    "end": "1689679"
  },
  {
    "text": "aspects of this debate about static versus Dynamic so wrapping up we have a little",
    "start": "1689679",
    "end": "1697200"
  },
  {
    "start": "1695000",
    "end": "1790000"
  },
  {
    "text": "bit time for Q&A I would say let's Design Systems that can flex and adapt",
    "start": "1697200",
    "end": "1702360"
  },
  {
    "text": "to change not everything has to be static the picture of here is is of a of",
    "start": "1702360",
    "end": "1707720"
  },
  {
    "text": "a dam ER inside you know a building the large SK SK skyscrapers look like they're entirely rigid Affairs but",
    "start": "1707720",
    "end": "1715240"
  },
  {
    "text": "they're not entire inside them they've been built to flex With the Wind as the",
    "start": "1715240",
    "end": "1720320"
  },
  {
    "text": "weather changes you don't know what where you need to flex and what you need to keep rigid Skys scopers are much more",
    "start": "1720320",
    "end": "1725960"
  },
  {
    "text": "flexible than they look let's Design Systems that survive the development",
    "start": "1725960",
    "end": "1732200"
  },
  {
    "text": "phase I know it's very profitable for us as developers to never be out of a job",
    "start": "1732200",
    "end": "1739200"
  },
  {
    "text": "because the systems that we create always needs us to be there just in case of that change that we know is going to",
    "start": "1739200",
    "end": "1746640"
  },
  {
    "text": "happen it's almost like a safe bet but I think the challenge with now is this vast amount of Legacy that we've created",
    "start": "1746640",
    "end": "1754480"
  },
  {
    "text": "I think we need to start thinking about how how we more smoothly work out the",
    "start": "1754480",
    "end": "1759600"
  },
  {
    "text": "kind of the end game for systems how we sort of keep them alive without the constant attention of teams of",
    "start": "1759600",
    "end": "1767039"
  },
  {
    "text": "developers it's just we're in the long tail and the long tail is getting expensive for our customers and let's",
    "start": "1767039",
    "end": "1775159"
  },
  {
    "text": "build Dynamic systems let's aspire to building things that",
    "start": "1775159",
    "end": "1781440"
  },
  {
    "text": "look more like a spreadsheet uh than the brittle systems that we create today and",
    "start": "1781440",
    "end": "1787120"
  },
  {
    "text": "I think Dynamic languages can help so thank you very much",
    "start": "1787120",
    "end": "1795278"
  }
]