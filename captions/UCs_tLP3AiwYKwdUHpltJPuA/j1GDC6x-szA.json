[
  {
    "text": "I think we're good to go uh thank you everyone for making the time to come up",
    "start": "120",
    "end": "5319"
  },
  {
    "text": "and uh turn up this talk it's great to see so much interest in kind of large web applications and the the challenges",
    "start": "5319",
    "end": "12040"
  },
  {
    "text": "that we that we face um as developers I'd be really useful just to start to",
    "start": "12040",
    "end": "17359"
  },
  {
    "text": "get a kind of idea who in this room is a developer you just put your hand up okay",
    "start": "17359",
    "end": "22480"
  },
  {
    "text": "that's good um who writes front end code most of the time and a few less Okay so",
    "start": "22480",
    "end": "30279"
  },
  {
    "text": "who would I guess call themselves kind of like frontend uh",
    "start": "30279",
    "end": "35719"
  },
  {
    "text": "experts okay well yeah I I certainly wouldn't but and I think I think that's kind of the way of the the way of the",
    "start": "35719",
    "end": "42320"
  },
  {
    "text": "industry really um I I don't think you ever really feel like a a front-end expert because things change so much um",
    "start": "42320",
    "end": "49680"
  },
  {
    "text": "Okay cool so my name is gr hinchley I'm the engineering manager at FT Labs which",
    "start": "49680",
    "end": "55000"
  },
  {
    "text": "is part of the financial times so I live and and work in London and I work pretty",
    "start": "55000",
    "end": "61280"
  },
  {
    "text": "much exclusively on our web app which is app. f uh.com now the financial times",
    "start": "61280",
    "end": "68560"
  },
  {
    "text": "has got quite an interesting uh kind of model because we don't actually have a",
    "start": "68560",
    "end": "73640"
  },
  {
    "text": "native IOS app uh for iOS we rely solely on app. f.com if you search for the",
    "start": "73640",
    "end": "80119"
  },
  {
    "text": "financial times in the App Store you won't find an app and that's basically because the App Store regulations don't",
    "start": "80119",
    "end": "86439"
  },
  {
    "text": "fit in with our our business model uh I won't go into too much detail about that but it's all on the web if you want to",
    "start": "86439",
    "end": "91840"
  },
  {
    "text": "read read more about it so it means app. f.com is our core mobile experience and",
    "start": "91840",
    "end": "97600"
  },
  {
    "text": "it also forms the basis of our Android app and our Windows 8 app and we then put a a small wrapper around it but it",
    "start": "97600",
    "end": "105000"
  },
  {
    "text": "means we can't take advantage of the classic kind of native things that a lot of people can it means we need to work",
    "start": "105000",
    "end": "111680"
  },
  {
    "text": "pretty hard to make it work offline uh and it means we need to do things like swiping and momentum scrolling ourselves",
    "start": "111680",
    "end": "119119"
  },
  {
    "text": "rather than just using functionality that comes out of the box the result of which means we've got an awful lot of",
    "start": "119119",
    "end": "126320"
  },
  {
    "text": "front end code a load of JavaScript load of CSS and it's been built on by a",
    "start": "126320",
    "end": "131360"
  },
  {
    "text": "changing team for about four years so it's it can kind of be awkward",
    "start": "131360",
    "end": "138200"
  },
  {
    "text": "to to work with over the last couple of years we've done a pretty extensive rewrite and took it from what was a bit",
    "start": "138200",
    "end": "143879"
  },
  {
    "text": "of a kind of spaghetti mess uh to something that's a lot cleaner and a lot easier to work on now and again that's",
    "start": "143879",
    "end": "150440"
  },
  {
    "text": "the kind of lessons we've learned over the last couple of years are what I'm hoping to to share with you today so will say that the the content",
    "start": "150440",
    "end": "158160"
  },
  {
    "text": "of this talk is really aimed at front end developers um that wasn't really in the title of",
    "start": "158160",
    "end": "165159"
  },
  {
    "text": "the original talk I submitted to this um so if if you're not expecting a frontend talk I would suggest maybe going",
    "start": "165159",
    "end": "172000"
  },
  {
    "text": "elsewhere I won't be I won't be offended um but yeah just just so you're",
    "start": "172000",
    "end": "178000"
  },
  {
    "text": "aware so ultimately I think the problem is some things on the on the web as we know are hard and then when you multiply",
    "start": "178000",
    "end": "185120"
  },
  {
    "text": "that by having a load of code they become really really hard and actually",
    "start": "185120",
    "end": "190760"
  },
  {
    "text": "on the web it kind of feels like you don't need that much code for something to feel like a large amount of code I",
    "start": "190760",
    "end": "196920"
  },
  {
    "text": "think anyone who's worked on a project that's even been in production for more than a couple of months or worked on a",
    "start": "196920",
    "end": "203200"
  },
  {
    "text": "web application with a a team of kind more than a couple of people quite quickly it feels pretty large pretty",
    "start": "203200",
    "end": "209879"
  },
  {
    "text": "complex and pretty difficult to deal with so I think the really interesting",
    "start": "209879",
    "end": "215200"
  },
  {
    "text": "question for me is why is it that this is harder on the web than it is",
    "start": "215200",
    "end": "222120"
  },
  {
    "text": "elsewhere I mean you know we've been doing software engineering for for a long time managing all sorts of large",
    "start": "222120",
    "end": "228799"
  },
  {
    "text": "encaps uh large applications why is it so tough on the web and I think there's",
    "start": "228799",
    "end": "234720"
  },
  {
    "text": "a few things that we can kind of pick on really for me the primary one is that uh",
    "start": "234720",
    "end": "241599"
  },
  {
    "text": "languages for the web JavaScript and CSS just lack encapsulation so it's very",
    "start": "241599",
    "end": "246920"
  },
  {
    "text": "difficult to control what you're doing and scope it just to a particular part of um one module or one bit of your app",
    "start": "246920",
    "end": "254200"
  },
  {
    "text": "or or one component so that makes it pretty hard when you build up a lot of code when you don't have",
    "start": "254200",
    "end": "261040"
  },
  {
    "text": "encapsulation the browser rendering model was initially built for documents",
    "start": "261040",
    "end": "266320"
  },
  {
    "text": "pure HTML is is responsive it's it's really only kind of since we added a",
    "start": "266320",
    "end": "271840"
  },
  {
    "text": "load of interesting and exciting styles that I guess things don't become uh responsive but what that means is that",
    "start": "271840",
    "end": "278759"
  },
  {
    "text": "the browser out of the box just kind of takes your HTML and decides how to render it this kind of classic",
    "start": "278759",
    "end": "285120"
  },
  {
    "text": "declarative approach that we have which is fantastic for documents because you don't really need to worry about where",
    "start": "285120",
    "end": "291600"
  },
  {
    "text": "everything's positioned unfortunately for applications it's not so great because we do care specifically where",
    "start": "291600",
    "end": "297759"
  },
  {
    "text": "things are positioned and of course the web is generally built",
    "start": "297759",
    "end": "304479"
  },
  {
    "text": "around the Assumption of an always on and a stable internet connection unfortunately this is I think",
    "start": "304479",
    "end": "311600"
  },
  {
    "text": "an area where we really really struggle making things work offline and it's interesting how you know writing native",
    "start": "311600",
    "end": "318800"
  },
  {
    "text": "apps for IOS and Android of course the language and the SDK and and all the functionality has been built around",
    "start": "318800",
    "end": "326160"
  },
  {
    "text": "expecting you not to have a network connection of course on the we everything was kind of built around expecting you to have a network",
    "start": "326160",
    "end": "332319"
  },
  {
    "text": "connection so it's much harder as a web developer to deal with these kind of offline scenarios the flaky connection",
    "start": "332319",
    "end": "339639"
  },
  {
    "text": "scenarios the scenario where someone it may look like they have an internet connection but actually they can't",
    "start": "339639",
    "end": "345000"
  },
  {
    "text": "access the internet because it's it's actually connected to a captive",
    "start": "345000",
    "end": "350240"
  },
  {
    "text": "portal so the question is how do we deal with this and these are the kinds of issues that we've really been wrestling",
    "start": "350240",
    "end": "356199"
  },
  {
    "text": "with at the financial times so option one one I think we all feel like doing this occasionally go out",
    "start": "356199",
    "end": "362160"
  },
  {
    "text": "into the street scream as loud as we can stamp our feet and just complain about",
    "start": "362160",
    "end": "367319"
  },
  {
    "text": "stuff and to be honest that does sometimes work but as I put here your your mileage may may vary on this one",
    "start": "367319",
    "end": "374360"
  },
  {
    "text": "ultimately it's probably not a long-term solution I actually think there's three",
    "start": "374360",
    "end": "379960"
  },
  {
    "text": "kind of primary themes which deal with those problems that can really help us as web developers the first is employing",
    "start": "379960",
    "end": "387639"
  },
  {
    "text": "modularization to achieve that encapsulation and achieve the reusability that we strive",
    "start": "387639",
    "end": "393440"
  },
  {
    "text": "for the other is just being aware of performance knowing how to profile performance understanding where the",
    "start": "393440",
    "end": "399639"
  },
  {
    "text": "bottlenecks may be and then knowing a few tips and tricks to deal with that and the other is just knowing to",
    "start": "399639",
    "end": "407400"
  },
  {
    "text": "the best of your ability how to use the offline capabilities we do have in the browser at the moment HTML 5 kind of",
    "start": "407400",
    "end": "413960"
  },
  {
    "text": "gave us a a toolbox to help us uh do things offline which I'll talk about and",
    "start": "413960",
    "end": "419360"
  },
  {
    "text": "it's just really understanding the different the different types of storage you've got where their strengths are and",
    "start": "419360",
    "end": "425479"
  },
  {
    "text": "where their weaknesses are so I'd like to start by talking a",
    "start": "425479",
    "end": "431840"
  },
  {
    "text": "bit more in depth about modularization a thing that a lot of languages have how out have out of the box and we don't",
    "start": "431840",
    "end": "437960"
  },
  {
    "text": "really have on the web and I think this is kind of three things it's about achieving that encapsulation it's then",
    "start": "437960",
    "end": "443360"
  },
  {
    "text": "about how do you manage your dependencies how do you bring in those other encapsulated dependencies into",
    "start": "443360",
    "end": "448720"
  },
  {
    "text": "your code which Maybe be part of your codebase maybe part of someone else's codebase and how do you use components",
    "start": "448720",
    "end": "454599"
  },
  {
    "text": "how do you reuse components how do you take one widget from one place in your app and put it somewhere else how do you",
    "start": "454599",
    "end": "460400"
  },
  {
    "text": "take someone else's widget from your organization and put it into your web application or to your",
    "start": "460400",
    "end": "466599"
  },
  {
    "text": "website so it's pretty clear now that you know I think in cap station is your friend and JavaScript on the server side",
    "start": "466599",
    "end": "474599"
  },
  {
    "text": "uses the commonjs spec um who writes node codes at all and a few people okay",
    "start": "474599",
    "end": "482400"
  },
  {
    "text": "so a few people would be familiar with this but it's it's pretty simple so you declare your dependencies uh the top of",
    "start": "482400",
    "end": "488000"
  },
  {
    "text": "the file with a require statement and then you expose your public API at the bottom so this is",
    "start": "488000",
    "end": "495680"
  },
  {
    "text": "pretty clean right this is easy to understand we can say we want these dependencies we're going to rely on them",
    "start": "495680",
    "end": "501280"
  },
  {
    "text": "and by default our methods and our objects are hidden from the rest of the",
    "start": "501280",
    "end": "506639"
  },
  {
    "text": "code we decide specifically what to expose unfortunately this kind of",
    "start": "506639",
    "end": "512959"
  },
  {
    "text": "programming model isn't supported by the browser so we have to to turn to a tool",
    "start": "512959",
    "end": "518680"
  },
  {
    "text": "to allow us to do this and we use something called browserify which allows us to write clients side JavaScript like",
    "start": "518680",
    "end": "525920"
  },
  {
    "text": "that browsery processes the code that you've written like that and turns it into a file that can be included in the",
    "start": "525920",
    "end": "532200"
  },
  {
    "text": "browser it also then means we have a consistent approach to writing JavaScript on the client and the server",
    "start": "532200",
    "end": "538760"
  },
  {
    "text": "and as more people look to write JavaScript server side that's really useful so that's pretty cool for my my",
    "start": "538760",
    "end": "547120"
  },
  {
    "text": "app ride I mean I can I can pretty clearly uh encapsulate my JavaScript modules I can break it down into lots of",
    "start": "547120",
    "end": "553640"
  },
  {
    "text": "uh little bits and pieces I can require my dependencies in",
    "start": "553640",
    "end": "558959"
  },
  {
    "text": "explicitly but the question is what if I want to actually rely on stuff outside my application what if I want other",
    "start": "558959",
    "end": "565360"
  },
  {
    "text": "people's JavaScript code in separate repositories so to do that we use a tool called npm",
    "start": "565360",
    "end": "573079"
  },
  {
    "text": "which is a really great way of cleanly managing your JavaScript dependencies it's basically like the de facto package",
    "start": "573079",
    "end": "579320"
  },
  {
    "text": "manager for JavaScript of course a lot of a lot of other languages have these you know pretty much well welldeveloped",
    "start": "579320",
    "end": "585800"
  },
  {
    "text": "part of the ecosystem mpm's relatively new I guess addition to JavaScript to",
    "start": "585800",
    "end": "591320"
  },
  {
    "text": "allow us to manage our dependencies in this way great thing it does is allows you to",
    "start": "591320",
    "end": "596920"
  },
  {
    "text": "easily install or declare dependency on another library and then it resolves all",
    "start": "596920",
    "end": "602320"
  },
  {
    "text": "the dependencies of that dependencies for you so you don't have to worry about having a manual list of script tags in",
    "start": "602320",
    "end": "609079"
  },
  {
    "text": "exactly the right order you just say I want this dependency and npm deals with",
    "start": "609079",
    "end": "615040"
  },
  {
    "text": "all of it for you pairing this with browserify means",
    "start": "615040",
    "end": "620079"
  },
  {
    "text": "we can do some pretty cool stuff and really make our development work like pretty easy so we can install a library from",
    "start": "620079",
    "end": "627320"
  },
  {
    "text": "the mpm registry or simply specify git URL the example here is something called",
    "start": "627320",
    "end": "633600"
  },
  {
    "text": "Fast click which is an open source Library uh that we've put out there to deal with a touch delay on mobile",
    "start": "633600",
    "end": "640120"
  },
  {
    "text": "devices and it's as simple in your app as just doing npm install fast click or",
    "start": "640120",
    "end": "646160"
  },
  {
    "text": "whatever that's then included as a dependency in your package.json file and",
    "start": "646160",
    "end": "652920"
  },
  {
    "text": "npm will then install those dependencies for you when it comes to requiring that",
    "start": "652920",
    "end": "658839"
  },
  {
    "text": "file your code it's as simple as just again using the require statement which",
    "start": "658839",
    "end": "664399"
  },
  {
    "text": "will look at where these modules have been installed so mpm and browsery gives us a",
    "start": "664399",
    "end": "671079"
  },
  {
    "text": "really great workflow for just bringing other dependencies into our app and where we really found the value",
    "start": "671079",
    "end": "678680"
  },
  {
    "text": "in this and I think uh potentially quite a few people here will is if you've got a lot of Legacy JavaScript code if",
    "start": "678680",
    "end": "684120"
  },
  {
    "text": "you've got a monolithic JavaScript application this allows you to actually isolate modules take them out of the",
    "start": "684120",
    "end": "691200"
  },
  {
    "text": "application in their entirety put them in a separate repo and then write unit tests against that module in isolation",
    "start": "691200",
    "end": "698880"
  },
  {
    "text": "and then P it in in this manner so we didn't have any JavaScript uh unit tests",
    "start": "698880",
    "end": "704720"
  },
  {
    "text": "at all a couple of years ago and actually applying them to a legacy code base is really really hard but what we",
    "start": "704720",
    "end": "710560"
  },
  {
    "text": "were able to do is split out our modules in this way and then test them in",
    "start": "710560",
    "end": "716440"
  },
  {
    "text": "isolation of course with all of these things it's not quite perfect yet it's uh I think you know we're all finding",
    "start": "717040",
    "end": "722839"
  },
  {
    "text": "our feet a bit with it key things to be aware of when you include a dependency",
    "start": "722839",
    "end": "729240"
  },
  {
    "text": "you tend to specify a version uh based on a git tag those of you familiar I",
    "start": "729240",
    "end": "735600"
  },
  {
    "text": "guess some of the more inner workings of git uh tags don't actually uh lock that down to a specific commit so you don't",
    "start": "735600",
    "end": "742720"
  },
  {
    "text": "necessarily have that repeatability someone can republish a different commit with the same git tag",
    "start": "742720",
    "end": "749680"
  },
  {
    "text": "so when you run the install process for your dependencies as part of your build a couple of weeks later you may actually",
    "start": "749680",
    "end": "756240"
  },
  {
    "text": "get a different version of the code we use a tool called mpm shrink wrap uh",
    "start": "756240",
    "end": "761320"
  },
  {
    "text": "which has got a a lot better but it's still not perfect but that does lock it down to a specific commit hash so you've",
    "start": "761320",
    "end": "766399"
  },
  {
    "text": "got that security of exactly the same code that you installed as a dependency",
    "start": "766399",
    "end": "771959"
  },
  {
    "text": "previously so also worth bearing in mind that if you rely on the mpm registry like we did earlier when we just went",
    "start": "771959",
    "end": "778160"
  },
  {
    "text": "npm install fast click to know that that introduces a single point of failure especially if that's part of well as it",
    "start": "778160",
    "end": "784399"
  },
  {
    "text": "will be part of your um CI process and potentially part of your deploy process",
    "start": "784399",
    "end": "790440"
  },
  {
    "text": "to avoid that because it does go down periodically um we we use a private lazy",
    "start": "790440",
    "end": "795880"
  },
  {
    "text": "cach is pretty simple uh to to set up and that just protects us from periods when the registry may be",
    "start": "795880",
    "end": "803480"
  },
  {
    "text": "down so this all sounds pretty good for for JavaScript I actually kind of think we we've kind of got it with this",
    "start": "803480",
    "end": "810320"
  },
  {
    "text": "approach we we finally reached a bit of maturity in encapsulation and dependency",
    "start": "810320",
    "end": "815600"
  },
  {
    "text": "Management in JavaScript which is fantastic but unfortunately this kind of problem isn't just limited to",
    "start": "815600",
    "end": "823279"
  },
  {
    "text": "JavaScript as we all know CSS isn't encapsulated either and I think we've",
    "start": "823279",
    "end": "829399"
  },
  {
    "text": "all had those kind of issues where you've got collisions of classes or so",
    "start": "829399",
    "end": "835399"
  },
  {
    "text": "on and so forth where you want to style one bit of your code and yeah that's great it started it but actually that",
    "start": "835399",
    "end": "841720"
  },
  {
    "text": "styling has leaked out into another bit of code as well and that's just because we don't",
    "start": "841720",
    "end": "847759"
  },
  {
    "text": "have that encapsulation with CSS but we can achieve it by being",
    "start": "847759",
    "end": "853560"
  },
  {
    "text": "pretty strict with how we write our CSS and how we use our components in our app",
    "start": "853560",
    "end": "859279"
  },
  {
    "text": "so what we go for is kind of leak proof styling of reusable components so we aim for something",
    "start": "859279",
    "end": "866000"
  },
  {
    "text": "that's context agnostic your component should depend on where in your application it is where in the Dom it is",
    "start": "866000",
    "end": "873440"
  },
  {
    "text": "it shouldn't depend on its ancestors and its parents we use non-semantic naming to",
    "start": "873440",
    "end": "880440"
  },
  {
    "text": "make it clear that this component is reusable so when a new developer comes to it they don't think oh it's only used",
    "start": "880440",
    "end": "886680"
  },
  {
    "text": "in this place therefore I can do whatever I want and as long as that's okay in that place I'm fine it's clear",
    "start": "886680",
    "end": "893160"
  },
  {
    "text": "that it's used in multiple places because you just have a generic name and it looks something in our code a bit",
    "start": "893160",
    "end": "899279"
  },
  {
    "text": "like this and I'm sorry if you can't see the colors too well but basically we would name a component something like",
    "start": "899279",
    "end": "905040"
  },
  {
    "text": "apple so that doesn't mean anything has no semantic bearing at all and then the Apple may contain a headline a subhead",
    "start": "905040",
    "end": "912720"
  },
  {
    "text": "and body and we would just use one class for each of those elements of the",
    "start": "912720",
    "end": "918120"
  },
  {
    "text": "component and it would be prefixed with the name of the component apple and then",
    "start": "918120",
    "end": "923240"
  },
  {
    "text": "underscore and then the actual element um of that component and then that allows us",
    "start": "923240",
    "end": "930720"
  },
  {
    "text": "to um hit each of those elements specifically in our CSS by just a single",
    "start": "930720",
    "end": "936279"
  },
  {
    "text": "class which means we don't end up in these kind of specificity Wars where we rely on IDs importance and so on and so",
    "start": "936279",
    "end": "944040"
  },
  {
    "text": "forth because as soon as you do that you end up in a real mess because you're always increasing the specificity and",
    "start": "944040",
    "end": "950519"
  },
  {
    "text": "it's kind of an arms race then and that's when you can really get into problems with your with your",
    "start": "950519",
    "end": "956199"
  },
  {
    "text": "CSS and this is the approach that we've used for couple of years now on the on the web app and it really it really does",
    "start": "956199",
    "end": "962199"
  },
  {
    "text": "work it's put us into a much better place we spend a lot less time dealing with uh visual",
    "start": "962199",
    "end": "969920"
  },
  {
    "text": "aggressions but you obviously have to be pretty strict about how you write your CSS and how you write your",
    "start": "970160",
    "end": "976880"
  },
  {
    "text": "HTML and that's a lot harder when you start to think about doing that across an entire organization you can dictate",
    "start": "976880",
    "end": "983639"
  },
  {
    "text": "it pretty well with developers work on one code base but what about an entire organization where you may want to reuse",
    "start": "983639",
    "end": "990880"
  },
  {
    "text": "that component or that widget that someone else has used on their site to solve that problem we've come up",
    "start": "990880",
    "end": "997839"
  },
  {
    "text": "with a pretty robust and thorough set of Standards uh that we've called origami",
    "start": "997839",
    "end": "1002880"
  },
  {
    "text": "now this is all out in the open um all the components we're creating as part of origami are all open source they're all",
    "start": "1002880",
    "end": "1008880"
  },
  {
    "text": "on GitHub um so check out the kind of stuff that we've written about it on origami. f.com that has all the",
    "start": "1008880",
    "end": "1015040"
  },
  {
    "text": "standards but it's kind of clear that this can probably work really well with the ft and it can kind of be a guiding",
    "start": "1015040",
    "end": "1022639"
  },
  {
    "text": "principle for other organizations but it's not really good enough for the web Community as a whole",
    "start": "1022639",
    "end": "1028720"
  },
  {
    "text": "we can't dictate that everyone writes a CSS in in this very specific manner what",
    "start": "1028720",
    "end": "1033918"
  },
  {
    "text": "we need is genuine encapsulation and that's what we should get with with web components so I won't",
    "start": "1033919",
    "end": "1040079"
  },
  {
    "text": "go into detail about that now because it is changing quite quickly but the future",
    "start": "1040079",
    "end": "1045319"
  },
  {
    "text": "we'll have web components where we should be able to just kind of import bought a widget from someone else and",
    "start": "1045319",
    "end": "1051360"
  },
  {
    "text": "not worry about it affecting the rest of our",
    "start": "1051360",
    "end": "1055679"
  },
  {
    "text": "app so I think we can kind of achieve that modularization those components",
    "start": "1058039",
    "end": "1063960"
  },
  {
    "text": "reasonably well by using the kind a couple of the techniques that I just outlined the problem is I think where we",
    "start": "1063960",
    "end": "1070240"
  },
  {
    "text": "really struggle as an application grows and we have loads of components all kind of working slightly independently is",
    "start": "1070240",
    "end": "1077400"
  },
  {
    "text": "actually in keeping it performance maintaining smooth animations and uh",
    "start": "1077400",
    "end": "1082559"
  },
  {
    "text": "responsive UI and I think we've all very regularly uh interacted with websites",
    "start": "1082559",
    "end": "1087880"
  },
  {
    "text": "that just simply aren't responsive enough feel a bit janky don't don't feel quite right and then you compare that",
    "start": "1087880",
    "end": "1094799"
  },
  {
    "text": "and contrast it with Native applications where basically it's normally pretty",
    "start": "1094799",
    "end": "1100559"
  },
  {
    "text": "good right you don't you don't often get janky animations um so it's clear we've got a bit of work to do here um as a as",
    "start": "1100559",
    "end": "1107200"
  },
  {
    "text": "a web as a web community and really that's because of the single threaded nature of the browser so it",
    "start": "1107200",
    "end": "1114480"
  },
  {
    "text": "means a long running process which maybe many things blocks your user interactions so I think we've got this",
    "start": "1114480",
    "end": "1120720"
  },
  {
    "text": "kind of classic scenario where someone Taps once or something nothing happens they tap again still nothing happens",
    "start": "1120720",
    "end": "1127280"
  },
  {
    "text": "they tap again at this point they've probably already given up but just to kind of make a point they're just like furiously tapping their device to try",
    "start": "1127280",
    "end": "1133679"
  },
  {
    "text": "and get something to to happen and as if kind of tapping it harder or more will",
    "start": "1133679",
    "end": "1139640"
  },
  {
    "text": "will somehow kick it into life uh unfortunately it doesn't and okay at",
    "start": "1139640",
    "end": "1145039"
  },
  {
    "text": "this point we may have finished executing code stuff may happen more than likely that person has has",
    "start": "1145039",
    "end": "1151760"
  },
  {
    "text": "disappeared but it actually gets even worse cu the single-threaded nature of the browser means that actually",
    "start": "1151760",
    "end": "1158400"
  },
  {
    "text": "synchronous tasks block This Thread and actually block screen updates and the",
    "start": "1158400",
    "end": "1163559"
  },
  {
    "text": "problem is then you get this kind of this this missed frame you want consistent framework updates but",
    "start": "1163559",
    "end": "1169880"
  },
  {
    "text": "actually you're continually missing frames and this is what makes scrolling",
    "start": "1169880",
    "end": "1175640"
  },
  {
    "text": "and swiping feel kind of janky and that's the problem that you don't have really with Native apps and it's kind of",
    "start": "1175640",
    "end": "1181760"
  },
  {
    "text": "this classic you know you end up at about six frames per second or something which we know is fantastic for animated",
    "start": "1181760",
    "end": "1187760"
  },
  {
    "text": "gifts yeah six six frames per second has given us loads of cat gifts which is brilliant but it's really really kind of",
    "start": "1187760",
    "end": "1194600"
  },
  {
    "text": "crappy for your app um that's that's not the kind of USIC experience you're",
    "start": "1194600",
    "end": "1199799"
  },
  {
    "text": "you're striving for what we want is this consistent frame rate where you're getting screen updates at regular",
    "start": "1199799",
    "end": "1206600"
  },
  {
    "text": "intervals ideally we want to look towards 60 frames per second 60 frames per second that's when we know stuff",
    "start": "1206600",
    "end": "1213320"
  },
  {
    "text": "feels really really silky smooth it's kind of on the limit of human perception you don't really know that the screen is",
    "start": "1213320",
    "end": "1219600"
  },
  {
    "text": "is actually being updated in that manner it just feels like it's perfectly",
    "start": "1219600",
    "end": "1224840"
  },
  {
    "text": "smooth the problem is this actually only gives us this kind of magic figure of 16.6 milliseconds between frames to do",
    "start": "1224840",
    "end": "1233320"
  },
  {
    "text": "all the work that we need to do to update the screen and you really need to know what",
    "start": "1233320",
    "end": "1239640"
  },
  {
    "text": "actually is happening in that period because it's not just JavaScript and I think this is the kind of the classic",
    "start": "1239640",
    "end": "1245520"
  },
  {
    "text": "problem that we think something's a bit slow it's unresponsive well our JavaScript must be slow that's a problem",
    "start": "1245520",
    "end": "1251400"
  },
  {
    "text": "we've got we've got slow JavaScript we need to dive into these kind of microe",
    "start": "1251400",
    "end": "1256559"
  },
  {
    "text": "efficiencies but actually we we've got these other things happening on this thread we've got things called style",
    "start": "1256559",
    "end": "1261960"
  },
  {
    "text": "recalculation we've got layout and we've got paint which I'll go into in a bit more detail in a",
    "start": "1261960",
    "end": "1267320"
  },
  {
    "text": "moment the thing I would say JavaScript very rarely the bottleneck it may be but",
    "start": "1267320",
    "end": "1273080"
  },
  {
    "text": "we very rarely see it as as the bottle NE especially if you're kind of following good practices and this is basically because the JavaScript engines",
    "start": "1273080",
    "end": "1280159"
  },
  {
    "text": "have just been really really highly optimized over the last kind of decade or so the problems normally come in these",
    "start": "1280159",
    "end": "1287480"
  },
  {
    "text": "kind of areas uh star recalculation layout and paint and which means we actually need to understand what these",
    "start": "1287480",
    "end": "1292640"
  },
  {
    "text": "are and and why they can work well and why they can work maybe not so",
    "start": "1292640",
    "end": "1297960"
  },
  {
    "text": "well so style recalculation and layout kind of go hand in hand style recalculation is basically taking CSS",
    "start": "1297960",
    "end": "1305440"
  },
  {
    "text": "and the Dom and putting it together to work out what applies to what element and then the layout is actually working",
    "start": "1305440",
    "end": "1311520"
  },
  {
    "text": "out where each of these elements should be positioned on screen the interesting thing about layout as I talked about",
    "start": "1311520",
    "end": "1317640"
  },
  {
    "text": "earlier is because of the browsers generally uh are built around rendering documents that actually means that you",
    "start": "1317640",
    "end": "1324679"
  },
  {
    "text": "can make one little change to one element of your layout and actually the browser needs to recalculate where",
    "start": "1324679",
    "end": "1330240"
  },
  {
    "text": "everything is is on the page because of the way that it reflows and then we've got paint which",
    "start": "1330240",
    "end": "1336279"
  },
  {
    "text": "is the process of actually getting those pixels once it's worked out where all the pixels should be and actually putting them onto the screen and these",
    "start": "1336279",
    "end": "1344080"
  },
  {
    "text": "are the areas we really need to focus on if we want to make our animations smooth and our UI",
    "start": "1344080",
    "end": "1351200"
  },
  {
    "text": "responsive the best thing we can do is just avoid relayout and and paint and we",
    "start": "1351640",
    "end": "1358279"
  },
  {
    "text": "can do this with our animations by using a particular subset of transforms uh",
    "start": "1358279",
    "end": "1363840"
  },
  {
    "text": "such as translate scale rotation and opacity these use the GPU which is",
    "start": "1363840",
    "end": "1371080"
  },
  {
    "text": "highly optimized for graphics work and doing this kind of thing so we kind of want to avoid",
    "start": "1371080",
    "end": "1377799"
  },
  {
    "text": "positioning Earth absolutely with top or margin and actually use something like",
    "start": "1377799",
    "end": "1383080"
  },
  {
    "text": "transform the reason why this works is that basically the GPU can have everything on",
    "start": "1383080",
    "end": "1390640"
  },
  {
    "text": "separate layers so it's kind of like you've got a lot of glass sheets on top of each other each with a separate",
    "start": "1390640",
    "end": "1396880"
  },
  {
    "text": "painting a separate element the GPU puts all those together and it's shown on the screen to to show you the the full the",
    "start": "1396880",
    "end": "1403960"
  },
  {
    "text": "full page but actually what it can do is just take one of those layers and just move it really easily without having to",
    "start": "1403960",
    "end": "1410679"
  },
  {
    "text": "do anything else with the other layers which is why this kind of translation and scale is really really cheap if you",
    "start": "1410679",
    "end": "1417600"
  },
  {
    "text": "use other things it's a bit like taking a layer out throwing it away having to",
    "start": "1417600",
    "end": "1422960"
  },
  {
    "text": "repaint that layer and then putting it back in which is a much much slower operation than just kind of moving",
    "start": "1422960",
    "end": "1428679"
  },
  {
    "text": "something around a bit we may need to manually Force",
    "start": "1428679",
    "end": "1434360"
  },
  {
    "text": "something onto a layer and that's where we use this thing called a translate Z hack which which we may have heard of I",
    "start": "1434360",
    "end": "1439600"
  },
  {
    "text": "won't go into too much detail about that now but basically that's how we can take advantage of this kind of Hardware",
    "start": "1439600",
    "end": "1445200"
  },
  {
    "text": "accelerated rendering which is again critical for giving us those smooth animations because they avoid relayout",
    "start": "1445200",
    "end": "1451200"
  },
  {
    "text": "and they avoid paint but this is a pretty small subset",
    "start": "1451200",
    "end": "1456520"
  },
  {
    "text": "of of stuff you know we we need a a bigger toolbox than this um we can't eliminate all of the things that that",
    "start": "1456520",
    "end": "1463400"
  },
  {
    "text": "need layout and need Paint what we can do however is actually just reduce the",
    "start": "1463400",
    "end": "1468919"
  },
  {
    "text": "time spent uh in in layout and paint problem is there's no real hard",
    "start": "1468919",
    "end": "1475000"
  },
  {
    "text": "and fast rules for how to do that we actually need to do a bit of detective work and actually work out for our app",
    "start": "1475000",
    "end": "1482159"
  },
  {
    "text": "for our use case where we're spending time and we can do this by using",
    "start": "1482159",
    "end": "1488840"
  },
  {
    "text": "developer Tools in Chrome we've got the timeline and that actually shows us explicitly where we're spending time in",
    "start": "1488840",
    "end": "1495039"
  },
  {
    "text": "in JavaScript where we're spending time in layout and where we're spending time",
    "start": "1495039",
    "end": "1500320"
  },
  {
    "text": "in paint so profiling your app with this tool open and recording it actually lets",
    "start": "1500320",
    "end": "1506159"
  },
  {
    "text": "you know where you're spending that time it's also got this frames view which can show us for each frame how much work are",
    "start": "1506159",
    "end": "1512799"
  },
  {
    "text": "we doing we want to get all our frames within that kind of 60 frames per second limit making sure that we're not",
    "start": "1512799",
    "end": "1519240"
  },
  {
    "text": "blocking the thread and we're not losing frames and getting that kind of janky",
    "start": "1519240",
    "end": "1525600"
  },
  {
    "text": "animation we can also use things like continuous page repainting and the frames per second meter which tells us",
    "start": "1525919",
    "end": "1533279"
  },
  {
    "text": "what's currently in view how long would that take to paint and then we can do things like toggling elements toggling",
    "start": "1533279",
    "end": "1539880"
  },
  {
    "text": "styles to see whether it's actually uh having a real adverse impact on our",
    "start": "1539880",
    "end": "1545679"
  },
  {
    "text": "paint and try and minimize the time that we're spending in paint and the key thing is just try and",
    "start": "1545679",
    "end": "1551440"
  },
  {
    "text": "keep your paint simple do things you know designers",
    "start": "1551440",
    "end": "1557000"
  },
  {
    "text": "often come with these kind of great designs that use box Shadows they use radiuses and all that kind of stuff",
    "start": "1557000",
    "end": "1562760"
  },
  {
    "text": "which is great but make sure that they're aware that these kind of things can have an adverse impact on",
    "start": "1562760",
    "end": "1568039"
  },
  {
    "text": "performance they may look great on a static Photoshop document but actually on the web when people have to interact",
    "start": "1568039",
    "end": "1574600"
  },
  {
    "text": "with it and they have to scroll and they have to animate it might not work quite so",
    "start": "1574600",
    "end": "1580200"
  },
  {
    "text": "well okay so we can reduce the time spent in paint a bit so how do we reduce the time spent doing layout",
    "start": "1581120",
    "end": "1589200"
  },
  {
    "text": "so the real problem with with layout is you've got this model where if you write",
    "start": "1589200",
    "end": "1594880"
  },
  {
    "text": "something to the Dom or you change something that invalidates all the previous calculations that the browser has done that's fine until we need to",
    "start": "1594880",
    "end": "1602200"
  },
  {
    "text": "read it so as soon as you read from the Dom which may be before the next screen actually the next it has to be rendered",
    "start": "1602200",
    "end": "1609080"
  },
  {
    "text": "to the screen you're actually forcing this relayout which is synchronous and blocks the",
    "start": "1609080",
    "end": "1614760"
  },
  {
    "text": "thread forcy layout is the kind of the the Real Enemy here",
    "start": "1614760",
    "end": "1620440"
  },
  {
    "text": "because you can end up especially with a load of components having to do this loads of times before you get a chance",
    "start": "1620440",
    "end": "1626720"
  },
  {
    "text": "to actually render another frame because you're constantly reading and writing to the Dom and this often results in",
    "start": "1626720",
    "end": "1633559"
  },
  {
    "text": "dropped frames giving us this juny animations what we need to do instead is actually batch the reads and writes",
    "start": "1633559",
    "end": "1640240"
  },
  {
    "text": "together so we're just doing a load of read uh a load of wrs to the Dom and then we're doing the reads from the Dom",
    "start": "1640240",
    "end": "1647200"
  },
  {
    "text": "and trying to only do that once per frame so we minimize the amount of re relayout that we actually need to do and",
    "start": "1647200",
    "end": "1654720"
  },
  {
    "text": "this gives us the kind of consistent frame rate that we're hoping for and that sounds kind of confusing",
    "start": "1654720",
    "end": "1662080"
  },
  {
    "text": "and is is kind of hard to do so we use a library called Fast Dom written by",
    "start": "1662080",
    "end": "1667720"
  },
  {
    "text": "Wilson page which makes this a lot lot easier it maintains the cue of Dom reads and writes for you and I'd really",
    "start": "1667720",
    "end": "1673720"
  },
  {
    "text": "recommend using something like this if anyone's familiar with act from Facebook",
    "start": "1673720",
    "end": "1679679"
  },
  {
    "text": "this uses a similar kind of principle to minimize time spent in relayout they use",
    "start": "1679679",
    "end": "1685120"
  },
  {
    "text": "a virtual Dom because reading and writing to the virtual Dom is a lot quicker than accessing the the actual",
    "start": "1685120",
    "end": "1691600"
  },
  {
    "text": "Dom um so that they use a similar a similar method to this so if you're using react you probably also have this",
    "start": "1691600",
    "end": "1697559"
  },
  {
    "text": "kind of stuff out of the box putting all this stuff together",
    "start": "1697559",
    "end": "1703120"
  },
  {
    "text": "means that swiping on app. fd.com is is pretty smooth and it took us a while to",
    "start": "1703120",
    "end": "1708760"
  },
  {
    "text": "get there but we now have pretty consistent frame rate frame rates with not very many dropped frames which kind",
    "start": "1708760",
    "end": "1714440"
  },
  {
    "text": "of replicates the native experience that we were striving for we've open source",
    "start": "1714440",
    "end": "1719519"
  },
  {
    "text": "the library that does our swiping and momentum scroller it's on GitHub um under the Ft Labs organization and it's",
    "start": "1719519",
    "end": "1726399"
  },
  {
    "text": "called ft scroller so you can kind of get some of this stuff out of the box without necessarily having to worry",
    "start": "1726399",
    "end": "1732360"
  },
  {
    "text": "about all of it yourself there's a load more stuff online about this kind of stuff once you",
    "start": "1732360",
    "end": "1737760"
  },
  {
    "text": "get into it it is is really interesting it's pretty addictive um but if you get the slides afterwards which which I know",
    "start": "1737760",
    "end": "1743399"
  },
  {
    "text": "you will then then there's these kind of links to to learn a bit",
    "start": "1743399",
    "end": "1748559"
  },
  {
    "text": "more and so this brings us on to the the question of making something work",
    "start": "1749480",
    "end": "1755360"
  },
  {
    "text": "offline uh which is which is a real challenge we find it kind of consistently challenging and I think",
    "start": "1755360",
    "end": "1760840"
  },
  {
    "text": "because it's so challenging that's why very few web applications actually do work offline or do deal well with flaky",
    "start": "1760840",
    "end": "1767559"
  },
  {
    "text": "connections and that's a real shame because I think a lot of us are writing loads of code we're putting a load of",
    "start": "1767559",
    "end": "1773919"
  },
  {
    "text": "time into these web applications and then shying away from it actually working offline and actually giving that",
    "start": "1773919",
    "end": "1779399"
  },
  {
    "text": "kind of user experience that again people actually expect out of the box with Native",
    "start": "1779399",
    "end": "1785720"
  },
  {
    "text": "apps so I just want to kind of go through the options uh that we have to do this and some of their limitations so",
    "start": "1785720",
    "end": "1792120"
  },
  {
    "text": "if you approach this kind of problems yourself you roughly know the landscape you know what's available and you know",
    "start": "1792120",
    "end": "1797720"
  },
  {
    "text": "what to to try and avoid so we've got our old friend cookies which obviously been around for",
    "start": "1797720",
    "end": "1802840"
  },
  {
    "text": "rages we've got the application cache we've got local storage and we've got index DB Now application cach local",
    "start": "1802840",
    "end": "1810159"
  },
  {
    "text": "storage and index DB all came in with HTML 5 uh a few years ago all kind of",
    "start": "1810159",
    "end": "1815919"
  },
  {
    "text": "well intentioned but none of them are without their flaws so appcash I mean we rely on",
    "start": "1815919",
    "end": "1822840"
  },
  {
    "text": "appcash to make the web app work offline but it is pretty deeply flawed the implement ation is not as good as as we",
    "start": "1822840",
    "end": "1830559"
  },
  {
    "text": "would like it to be the real problem is that you have to specify a manifest file",
    "start": "1830559",
    "end": "1835679"
  },
  {
    "text": "and you explicit explicitly say I want you to cach these files the problem is",
    "start": "1835679",
    "end": "1841440"
  },
  {
    "text": "that's again that's a declarative model so the browser then deals with that manifest file and those files as it sees",
    "start": "1841440",
    "end": "1847279"
  },
  {
    "text": "fit so we don't really have control over it and that means we get kind of weird",
    "start": "1847279",
    "end": "1852480"
  },
  {
    "text": "Behavior which might not be fit for our purposes so for example if one file is changed",
    "start": "1852480",
    "end": "1858440"
  },
  {
    "text": "in the in the Manifest then it re-downloads all the files but if there's a single failure",
    "start": "1858440",
    "end": "1865000"
  },
  {
    "text": "from redownloading all those files it reverts to the previous version of all the cash files it has it's an automic",
    "start": "1865000",
    "end": "1871440"
  },
  {
    "text": "transaction basically so sometimes that's not the kind of thing we want and that makes it really hard to work",
    "start": "1871440",
    "end": "1877639"
  },
  {
    "text": "with it is usable but you have to be very careful uh follow the guidelines",
    "start": "1877639",
    "end": "1883519"
  },
  {
    "text": "follow tutorials online we use it for the very bare minimum the kind of the the boot bootstrap code which gets it up",
    "start": "1883519",
    "end": "1889200"
  },
  {
    "text": "and up and running uh some initial images and for fonts which we can't store in local",
    "start": "1889200",
    "end": "1896799"
  },
  {
    "text": "storage or indexdb because local storage and indexdb are both string based",
    "start": "1896799",
    "end": "1902760"
  },
  {
    "text": "storage so now we've got local storage which is actually pretty simple to use",
    "start": "1903360",
    "end": "1908600"
  },
  {
    "text": "um and is is not as deeply flawed as as appcash it's pretty fast as well um you",
    "start": "1908600",
    "end": "1913960"
  },
  {
    "text": "may have seen some research along these kind of lines this is from chap called Peter mclin at mobify is actually local",
    "start": "1913960",
    "end": "1920639"
  },
  {
    "text": "storage is actually faster than your browser cache in some cases on mobile and so there are recommendations that",
    "start": "1920639",
    "end": "1929000"
  },
  {
    "text": "rather than always relying on the browser cache to supply your JavaScript and your CSS maybe you should just store",
    "start": "1929000",
    "end": "1935080"
  },
  {
    "text": "it in local storage that is a bit of a controversial point but the point is it",
    "start": "1935080",
    "end": "1940720"
  },
  {
    "text": "is fast so it is it is pretty good it's faster than index DB the problem is you own only get",
    "start": "1940720",
    "end": "1948320"
  },
  {
    "text": "around 5 megabytes and this varies by device by browser but it's pretty limited and the I guess the real problem",
    "start": "1948320",
    "end": "1955039"
  },
  {
    "text": "going forward is it synchronous and this links us back to when we were talking about performance earlier anything synchronous blocks the",
    "start": "1955039",
    "end": "1962320"
  },
  {
    "text": "thread if we're blocking the thread potentially have a unresponsive UI and we're potentially dropping",
    "start": "1962320",
    "end": "1970320"
  },
  {
    "text": "frames it's pretty quick so it's not a problem all the time but sometimes it can be a problem because it relies on",
    "start": "1970320",
    "end": "1976440"
  },
  {
    "text": "file IO for persistence so most of the time that's really fast sometimes it can be really slow sometimes it can block",
    "start": "1976440",
    "end": "1982440"
  },
  {
    "text": "the thread sometimes it can be a real problem it also exhibits pretty odd behavior uh mobile Safari for example it",
    "start": "1982440",
    "end": "1990080"
  },
  {
    "text": "kind of says local storage is available and then if you try to store anything gives you a qu to exceeded error so",
    "start": "1990080",
    "end": "1995320"
  },
  {
    "text": "again it's kind of a bit awkward to use I would advise using a wrapper we use",
    "start": "1995320",
    "end": "2001559"
  },
  {
    "text": "one called Superstore by one of our developers mad Andrews again this is on GitHub that just abstracts some of that",
    "start": "2001559",
    "end": "2007480"
  },
  {
    "text": "pain for you so then we've got index DB which I",
    "start": "2007480",
    "end": "2013080"
  },
  {
    "text": "guess is kind of your your big storage mechanism where you You' put loads of stuff and this is a key value Object",
    "start": "2013080",
    "end": "2019679"
  },
  {
    "text": "Store and it's also asynchronous so it gets around some of the problems of local storage we use this for articles",
    "start": "2019679",
    "end": "2025799"
  },
  {
    "text": "and images because we can get up to something like 50 megabytes but to do this we do need to",
    "start": "2025799",
    "end": "2031960"
  },
  {
    "text": "base 64 encode the images you can't just put an image straight into it because it is string based storage",
    "start": "2031960",
    "end": "2038240"
  },
  {
    "text": "unfortunately it's not supported everywhere uh a lot of well some browsers mobile Safari still use uh web",
    "start": "2038240",
    "end": "2046039"
  },
  {
    "text": "SQL which was deprecated years ago but still persists we thought iOS 8 would bring index DB to mobile Safari uh but",
    "start": "2046039",
    "end": "2054280"
  },
  {
    "text": "unfortunately it does to the Safari browser but not to home screen apps so we're still stuck using polyfills to",
    "start": "2054280",
    "end": "2060839"
  },
  {
    "text": "support uh websql based browsers for a while unfortunately it's kind of hard to",
    "start": "2060839",
    "end": "2068638"
  },
  {
    "text": "deal with you have to deal with versioning and migrations manually which is kind of tricky and the documentation",
    "start": "2068639",
    "end": "2074560"
  },
  {
    "text": "out there is is pretty variable so you can come across examples which just might not work uh which is kind of",
    "start": "2074560",
    "end": "2082280"
  },
  {
    "text": "frustrating so the good news is after all that kind of bad news about why all these things are are so difficult to work with is that there is something",
    "start": "2082280",
    "end": "2089638"
  },
  {
    "text": "coming out in the future called service worker which will make this a lot lot easier and I think will make our lives",
    "start": "2089639",
    "end": "2094720"
  },
  {
    "text": "easier making things work offline service worker basically just sits in the middle of the browser and the",
    "start": "2094720",
    "end": "2101200"
  },
  {
    "text": "network and intercepts your network requests even when it's offline and it's",
    "start": "2101200",
    "end": "2106320"
  },
  {
    "text": "got loads of good things it's extensible it's lowlevel and we can have Gran control because it's all in JavaScript",
    "start": "2106320",
    "end": "2112720"
  },
  {
    "text": "so we don't have to worry about the limitations that appcash imposed on us we've got a cach API for storage which",
    "start": "2112720",
    "end": "2118599"
  },
  {
    "text": "is a lot easier to work with than the string based local storage or index DB and it's asynchronous again which is",
    "start": "2118599",
    "end": "2124720"
  },
  {
    "text": "what we're striving for we don't want to block that thread couple of limitations there won't be any",
    "start": "2124720",
    "end": "2131240"
  },
  {
    "text": "access to local storage because local storage is synchronous and it's https only so things need to be served over",
    "start": "2131240",
    "end": "2139480"
  },
  {
    "text": "SSL for this to work and that's basically because this gives you an awful lot of power over your network",
    "start": "2139480",
    "end": "2144640"
  },
  {
    "text": "requests and responses I mean it's it is you know effectively a a man in the middle so you need to make sure that",
    "start": "2144640",
    "end": "2150520"
  },
  {
    "text": "stuff is served over SSL basically at the moment there's only bits of it available to play with in",
    "start": "2150520",
    "end": "2156359"
  },
  {
    "text": "Chrome Canary and 5 nightly but it is progressing really really quickly what I would advise if you think you want to",
    "start": "2156359",
    "end": "2163000"
  },
  {
    "text": "make things work offline think you want to use service worker then just start moving things to being served over https",
    "start": "2163000",
    "end": "2169760"
  },
  {
    "text": "now so you're kind of ahead of the game and it obviously gives you a load of other benefits as",
    "start": "2169760",
    "end": "2175680"
  },
  {
    "text": "well there's more um information on online for kind of how to do this stuff",
    "start": "2176000",
    "end": "2181119"
  },
  {
    "text": "we've got a four-part tutorial series on how to build an offline web app which will kind of Step you through all the",
    "start": "2181119",
    "end": "2186520"
  },
  {
    "text": "pitfalls which is really really great um storage quots do vary by browser by",
    "start": "2186520",
    "end": "2192960"
  },
  {
    "text": "operating system so just find the latest kind of research on that like I said the storage is limited",
    "start": "2192960",
    "end": "2199920"
  },
  {
    "text": "you can double the amount of characters you store by using utf8 instead of utf16 we got a blog post on that and if you",
    "start": "2199920",
    "end": "2206400"
  },
  {
    "text": "want to know a bit more about using service worker there's a Blog that Jake archol one of the Chrome developer",
    "start": "2206400",
    "end": "2211760"
  },
  {
    "text": "relations guys has just uh published a couple of days ago so it's really kind of up-to-date information telling you how to use service",
    "start": "2211760",
    "end": "2219000"
  },
  {
    "text": "worker so that's pretty much it uh a quick recap of kind of where we are what",
    "start": "2219000",
    "end": "2224920"
  },
  {
    "text": "we talked about so modularization is great we use mpm and browsery and this",
    "start": "2224920",
    "end": "2230599"
  },
  {
    "text": "works really well for managing our JavaScript dependencies we use prefix class names for CSS components to keep",
    "start": "2230599",
    "end": "2237839"
  },
  {
    "text": "our styling just to that component performance there's really",
    "start": "2237839",
    "end": "2243599"
  },
  {
    "text": "good tools for profiling your performance but make sure you profile your own use case and don't just do it on desktop bear in mind that performance",
    "start": "2243599",
    "end": "2250240"
  },
  {
    "text": "on mobile will be probably a couple of factors worse so profile it on desktop",
    "start": "2250240",
    "end": "2256960"
  },
  {
    "text": "but also profile it on mobile relayout and paint are probably your bottlenecks and also look to use",
    "start": "2256960",
    "end": "2264200"
  },
  {
    "text": "something like Fast stom to batch your Dom reads and writes and finally offline we know it's",
    "start": "2264200",
    "end": "2270839"
  },
  {
    "text": "hard at the moment prefer asynchronous index DB where you can use it and look",
    "start": "2270839",
    "end": "2276359"
  },
  {
    "text": "out in the future for service worker which should hopefully make these things a lot easier for",
    "start": "2276359",
    "end": "2282359"
  },
  {
    "text": "us uh so that's all thank you very much for your for your time and and coming obviously I'm on on Twitter or you can",
    "start": "2282359",
    "end": "2290160"
  },
  {
    "text": "get me on email standard. hft.com uh we're we're hiring so if you want to",
    "start": "2290160",
    "end": "2295359"
  },
  {
    "text": "come and work in London in a pretty cool office with about 15 developers look on",
    "start": "2295359",
    "end": "2301480"
  },
  {
    "text": "labs. fd.com jobs and we've got a load of stuff open source on GitHub uh either",
    "start": "2301480",
    "end": "2308200"
  },
  {
    "text": "under the organization FD Labs or financial times so that's it thank you",
    "start": "2308200",
    "end": "2313400"
  },
  {
    "text": "very",
    "start": "2313400",
    "end": "2315559"
  },
  {
    "text": "much so we got any questions",
    "start": "2321280",
    "end": "2327319"
  },
  {
    "text": "sure uh sorry um yeah bow um Bow's good we",
    "start": "2330240",
    "end": "2338359"
  },
  {
    "text": "use bow for origami actually um I think generally we'd prefer bower",
    "start": "2338359",
    "end": "2344960"
  },
  {
    "text": "for kind of a combination of CSS JavaScript and HTML it works really well for components I think npm is probably",
    "start": "2344960",
    "end": "2352720"
  },
  {
    "text": "the stronger tool for just pure JavaScript if you're just dealing with pure JavaScript we've we found mpm a lot",
    "start": "2352720",
    "end": "2358000"
  },
  {
    "text": "a lot easier uh to work with but certainly bow has a place and I think B will probably be the mechanism used to",
    "start": "2358000",
    "end": "2364480"
  },
  {
    "text": "to bring in in web components but pure J script we prefer",
    "start": "2364480",
    "end": "2370799"
  },
  {
    "text": "npm oh so so we do I mean yeah we we we do use SAS we do we do pre-compile it I",
    "start": "2375359",
    "end": "2381640"
  },
  {
    "text": "think the the key thing when we're looking at CSS is",
    "start": "2381640",
    "end": "2387160"
  },
  {
    "text": "that SAS very quickly you get a load of kind of nested lectures and you end up",
    "start": "2387160",
    "end": "2392440"
  },
  {
    "text": "with multiple classes on an element and as soon as you start to have multiple classes on element you get these",
    "start": "2392440",
    "end": "2398200"
  },
  {
    "text": "problems with specificity so if something's got three glasses and you want to override The Styling you you",
    "start": "2398200",
    "end": "2403480"
  },
  {
    "text": "need to style it using a fourth class and that that kind of thing so just",
    "start": "2403480",
    "end": "2408839"
  },
  {
    "text": "having one class I mean would yeah would absolutely say you use S course but just using one class allows you to pick out",
    "start": "2408839",
    "end": "2416960"
  },
  {
    "text": "that style kind of very very specifically so it's basically class but",
    "start": "2416960",
    "end": "2422240"
  },
  {
    "text": "having a pretty strict specification for how you name your name your classes and",
    "start": "2422240",
    "end": "2427319"
  },
  {
    "text": "and there's there's other ways of kind of describing It Like a Block element modifier uh Syntax for example if if you",
    "start": "2427319",
    "end": "2433640"
  },
  {
    "text": "want to know more about that okay are there any fur yes",
    "start": "2433640",
    "end": "2440079"
  },
  {
    "text": "please well yeah so are there any good solutions for folling a web view for a",
    "start": "2448520",
    "end": "2453800"
  },
  {
    "text": "native app um I I don't know actually we don't really deal uh with Native apps I",
    "start": "2453800",
    "end": "2459680"
  },
  {
    "text": "mean on Android 4.4 and above uh the web view is is the Chrome uh browser so you",
    "start": "2459680",
    "end": "2466119"
  },
  {
    "text": "can use the Chrome developer tools for Android so that actually works pretty well um and then you know if you want to",
    "start": "2466119",
    "end": "2472280"
  },
  {
    "text": "go even deeper you can use stuff like uh Telemetry to really give you kind of lower stuff but but I don't know I mean",
    "start": "2472280",
    "end": "2478480"
  },
  {
    "text": "we don't deal with Native iOS whatsoever so so I wouldn't know that but but Android it's certainly a lot easier you",
    "start": "2478480",
    "end": "2484319"
  },
  {
    "text": "can use all these kind of tools and techniques um 4.4 and above",
    "start": "2484319",
    "end": "2490519"
  },
  {
    "text": "Webby are there any further",
    "start": "2491040",
    "end": "2495359"
  },
  {
    "text": "questions no okay well thank you again for your time and enjoy the rest of your",
    "start": "2496920",
    "end": "2502800"
  },
  {
    "text": "day than you",
    "start": "2502800",
    "end": "2506240"
  }
]