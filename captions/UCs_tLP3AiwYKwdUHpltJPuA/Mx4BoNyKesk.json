[
  {
    "text": "had a a little bit of trepidation when I realized Josh is going to be introducing me but he was very nice so that's I",
    "start": "9260",
    "end": "15480"
  },
  {
    "text": "appreciate that uh so I'm going to wrap up today by talking about something that",
    "start": "15480",
    "end": "20760"
  },
  {
    "text": "has plagued Us in software for a long time which is the ability to support constant change because the world we",
    "start": "20760",
    "end": "26820"
  },
  {
    "text": "live in is constantly changing and there are ways that we can better support this idea of constant change so if you look",
    "start": "26820",
    "end": "33480"
  },
  {
    "text": "in Merriam-Webster and look at the definition of change you see lots of different ways to think about change a",
    "start": "33480",
    "end": "39660"
  },
  {
    "text": "lot of these talk about Direction and going different for example but for us they're really two interesting aspects",
    "start": "39660",
    "end": "46620"
  },
  {
    "text": "of change that we deal with on a regular basis and one of those is business driven change",
    "start": "46620",
    "end": "53160"
  },
  {
    "text": "and this is the thing we've really been focusing on in the software world for the past 20 years or so the ability to",
    "start": "53160",
    "end": "59940"
  },
  {
    "text": "change requirements when one set of requirements changes because the Market's changed or because we're changing the way we do business or we",
    "start": "59940",
    "end": "67439"
  },
  {
    "text": "merge with another company in we have to take on all their stuff and so we have to deal with that kind of change and in",
    "start": "67439",
    "end": "73560"
  },
  {
    "text": "fact most of the books written about change in the agile world have been written about this kind of change this",
    "start": "73560",
    "end": "80040"
  },
  {
    "text": "business driven kind of change we're gradually getting better and better at this over time we incrementally learn",
    "start": "80040",
    "end": "85140"
  },
  {
    "text": "how to do this a little bit better but the kind of change that has really plagued this and we've been less well at",
    "start": "85140",
    "end": "91500"
  },
  {
    "text": "handling over time is this technology driven change it's the kind of change that happens to us whether we want it to",
    "start": "91500",
    "end": "98100"
  },
  {
    "text": "or not because one of the problems that we have particularly in architecture is that and",
    "start": "98100",
    "end": "103799"
  },
  {
    "text": "and in in uh big Corporation and design and Enterprise architecture in particular",
    "start": "103799",
    "end": "108960"
  },
  {
    "text": "is we seem like architectures like an equation to be solved if we could ever",
    "start": "108960",
    "end": "115860"
  },
  {
    "text": "just solve the equation one time we can drop the Whiteboard Mark and walk out of the room and never have to think about it again",
    "start": "115860",
    "end": "121740"
  },
  {
    "text": "but that's not the way our world Works everything is constantly shifting and changing all the time because the world",
    "start": "121740",
    "end": "128280"
  },
  {
    "text": "we live in is extremely Dynamic so think for a moment about the software development ecosystem",
    "start": "128280",
    "end": "134879"
  },
  {
    "text": "this is all the tools and the Frameworks and the best practices and approaches basically all the things we know about",
    "start": "134879",
    "end": "141300"
  },
  {
    "text": "building software up until about 10 minutes ago that is the software development ecosystem that we live and",
    "start": "141300",
    "end": "147000"
  },
  {
    "text": "work in on a regular basis but in the book that we just wrote called building evolutionary architectures we characterize this as a",
    "start": "147000",
    "end": "154560"
  },
  {
    "text": "dynamic equilibrium meaning it makes sense it's equal to equilibrium it's not chaotic but it's",
    "start": "154560",
    "end": "160860"
  },
  {
    "text": "also extremely Dynamic and can shift and change fundamentally in any way without notifying you a great example of this",
    "start": "160860",
    "end": "168480"
  },
  {
    "text": "Dynamic behavior is when Docker hit our ecosystem a few years ago even if you're not using Docker yet it",
    "start": "168480",
    "end": "175739"
  },
  {
    "text": "fundamentally changes the kinds of decisions now available for you in the software development ecosystem and the",
    "start": "175739",
    "end": "182580"
  },
  {
    "text": "problem is this happens all the time in our world one of the roles that I have is a",
    "start": "182580",
    "end": "188879"
  },
  {
    "text": "conference co-chair for the O'Reilly software architecture conference and at the end of every conference all the O'Reilly sales people come to me and say",
    "start": "188879",
    "end": "195360"
  },
  {
    "text": "okay Neil tell us what the next big thing in architecture is going to be next year and I keep telling them I have",
    "start": "195360",
    "end": "200640"
  },
  {
    "text": "no idea because the way that's going to come about is One Small Change is Going to trigger another small change which will",
    "start": "200640",
    "end": "207239"
  },
  {
    "text": "trigger another small change and fractally it'll fundamentally change the entire world we live in and ways we",
    "start": "207239",
    "end": "213360"
  },
  {
    "text": "never expected it to but this is a big problem for some roles in software architecture because they're",
    "start": "213360",
    "end": "220500"
  },
  {
    "text": "supposed to do long-term strategic planning but how's long-term planning possible in",
    "start": "220500",
    "end": "225780"
  },
  {
    "text": "a world like this so over the last year or so I've been traveling literally all over the world talking to Enterprise",
    "start": "225780",
    "end": "231659"
  },
  {
    "text": "Architects a lot of our clients and I don't know a group of people who are more terrified right now than Enterprise",
    "start": "231659",
    "end": "237900"
  },
  {
    "text": "Architects because slowly their standard Playbook has melted away and become invalidated one piece at a time and I",
    "start": "237900",
    "end": "245400"
  },
  {
    "text": "keep asking all of these Enterprise Architects the same question and none of",
    "start": "245400",
    "end": "250620"
  },
  {
    "text": "them have had a good answer for me so maybe somebody here over drinks can finally give me a good answer to this question",
    "start": "250620",
    "end": "255840"
  },
  {
    "text": "and the question is can you tell me the great confidence exactly what JavaScript web framework you'll be using two years",
    "start": "255840",
    "end": "261840"
  },
  {
    "text": "from now I can't because it probably hasn't been written yet",
    "start": "261840",
    "end": "267660"
  },
  {
    "text": "how is long-term planning possible in a world like that and of course the answer is it's not",
    "start": "267660",
    "end": "273960"
  },
  {
    "text": "but then that begs the question well why are we trying to do this long-term planning well you need to do that because change is",
    "start": "273960",
    "end": "280860"
  },
  {
    "text": "really expensive and difficult and if we can plan our way out of it then we can mitigate that change in difficulty",
    "start": "280860",
    "end": "286800"
  },
  {
    "text": "but what if change wasn't as expensive or difficult what if he built the notion of change into your architecture rather",
    "start": "286800",
    "end": "293940"
  },
  {
    "text": "than constantly being blindsided by all these changes that come about if you could do that then now you don't have to",
    "start": "293940",
    "end": "300360"
  },
  {
    "text": "have a better and better crystal ball you've actually built adaptability into your architecture and now it's not a",
    "start": "300360",
    "end": "306419"
  },
  {
    "text": "surprise when change comes you just adapt to it and support constant change at the architectural level",
    "start": "306419",
    "end": "313320"
  },
  {
    "text": "so two observations are kind of going to kind of drive my talk today",
    "start": "313320",
    "end": "318780"
  },
  {
    "text": "and one of them about architecture is that everything in architecture is a",
    "start": "318780",
    "end": "324539"
  },
  {
    "text": "trade-off including things that you don't think are trade-offs what that usually means",
    "start": "324539",
    "end": "330479"
  },
  {
    "text": "is you just haven't identified the trade-off yet and let me give you a couple examples of these things that we",
    "start": "330479",
    "end": "336360"
  },
  {
    "text": "never really realize were trade-offs for like a decade until we finally realized oh that's actually a trade-off that's",
    "start": "336360",
    "end": "343020"
  },
  {
    "text": "not a good thing uh purely by itself excuse me so let's talk for a moment",
    "start": "343020",
    "end": "350340"
  },
  {
    "text": "about code reuse which for a long time was viewed as a purely beneficial thing there's a great",
    "start": "350340",
    "end": "357300"
  },
  {
    "text": "quote by John Cook who does a lot of writing and thinking in the software world now says that we've been sold the",
    "start": "357300",
    "end": "363120"
  },
  {
    "text": "idea that code reuses like Lego blocks but it's a lot more like organ transplant the new snapping Lego blocks",
    "start": "363120",
    "end": "369000"
  },
  {
    "text": "together it's a lot Messier and more painful than you think it's going to be when you set out to do this but let's",
    "start": "369000",
    "end": "374880"
  },
  {
    "text": "talk for a second about two different ways of thinking about reusing code and",
    "start": "374880",
    "end": "379979"
  },
  {
    "text": "I'll start with the kind of retrograde retrograde case of the Enterprise service bus driven service oriented",
    "start": "379979",
    "end": "386400"
  },
  {
    "text": "architecture part of the goal of this architecture was to create this really rigid service taxonomy where all these",
    "start": "386400",
    "end": "393900"
  },
  {
    "text": "Services up at the top here these business services were designed to be the abstract thing that we do as a",
    "start": "393900",
    "end": "399000"
  },
  {
    "text": "business and the implementation for all these guys with these Enterprise Services down here at the bottom and",
    "start": "399000",
    "end": "404699"
  },
  {
    "text": "then the glue of this architecture was all this orchestration and choreography stuff here in the middle because and",
    "start": "404699",
    "end": "411660"
  },
  {
    "text": "people really said this with a straight face a decade ago what we'll do is if we write these Enterprise services to be",
    "start": "411660",
    "end": "418440"
  },
  {
    "text": "just exactly reusable enough there will come a day when we don't have to write any more",
    "start": "418440",
    "end": "425340"
  },
  {
    "text": "code that all new application development will be stitching together new things with orchestrations and we'd",
    "start": "425340",
    "end": "431940"
  },
  {
    "text": "be done with all this messy problem this of course ignores the fact that the world constantly changes and shifts ways",
    "start": "431940",
    "end": "439080"
  },
  {
    "text": "but that was what was thought in this world and in fact there was a specific reuse philosophy that pervaded this",
    "start": "439080",
    "end": "445740"
  },
  {
    "text": "architecture and in fact Architects were instructed to look for this pattern in architecture let's say you're an",
    "start": "445740",
    "end": "452280"
  },
  {
    "text": "insurance company you have all these divisions for insurance and you notice at some point",
    "start": "452280",
    "end": "459120"
  },
  {
    "text": "they all have the notion of a customer and as an architect you were supposed to notice and go hey look they all have",
    "start": "459120",
    "end": "466680"
  },
  {
    "text": "customer that must mean they're all different aspects of the same thing so",
    "start": "466680",
    "end": "472680"
  },
  {
    "text": "we should create a single customer service encapsulate all we know about customer there and just reference that",
    "start": "472680",
    "end": "479880"
  },
  {
    "text": "thing in our architecture some of you probably participated in some of these Jad sessions where you lock all the",
    "start": "479880",
    "end": "485880"
  },
  {
    "text": "business people in a windowless conference room and then dye them food or water until they finally tell us what customer is once and for all",
    "start": "485880",
    "end": "493620"
  },
  {
    "text": "but that never actually works because they're good you're going to change the business tomorrow or you're going to merge with another company so it's",
    "start": "493620",
    "end": "500039"
  },
  {
    "text": "always a shifting changing thing but this was viewed as purely a beneficial thing because duplication is bad right",
    "start": "500039",
    "end": "507479"
  },
  {
    "text": "and this eliminates all that duplication that you might have otherwise and so obviously this is purely a Force for",
    "start": "507479",
    "end": "514620"
  },
  {
    "text": "good but then we started realizing as we kept doing this more and more that it's not",
    "start": "514620",
    "end": "521039"
  },
  {
    "text": "necessarily purely a Force for good because the side effect of this is so in",
    "start": "521039",
    "end": "526260"
  },
  {
    "text": "this scenario I have auto insurance now to have auto insurance you have to have a driver's",
    "start": "526260",
    "end": "533160"
  },
  {
    "text": "license and that's a characteristic of the person not of the vehicle and of course we're going to back this",
    "start": "533160",
    "end": "539700"
  },
  {
    "text": "by relational database with a good dedicated Enterprise DBA when you can't have auto insurance without a driver's",
    "start": "539700",
    "end": "547200"
  },
  {
    "text": "license so that's got to be a required field but the problem is if I'm in disability",
    "start": "547200",
    "end": "552360"
  },
  {
    "text": "insurance now to instantiate one of these customer things I have to go dig up a driver's license somewhere and I",
    "start": "552360",
    "end": "558360"
  },
  {
    "text": "don't care anything about driver's license it has nothing to do with the problem I'm trying to solve and so the",
    "start": "558360",
    "end": "563519"
  },
  {
    "text": "fundamental problem you end up with here is that building that single reusable customer thing means you have to build",
    "start": "563519",
    "end": "568860"
  },
  {
    "text": "all this stuff into it to make it reusable and one of the observations we made in The evolutionary architectures",
    "start": "568860",
    "end": "575100"
  },
  {
    "text": "book is the more reusable something is the less usable it is",
    "start": "575100",
    "end": "580140"
  },
  {
    "text": "you build something to be ultimately reusable but it's hard to use it in one case this is also known in the software",
    "start": "580140",
    "end": "585600"
  },
  {
    "text": "world is used before reuse because if you build everything for reuse becomes really difficult to use it for a single",
    "start": "585600",
    "end": "591779"
  },
  {
    "text": "thing but there's another problem here as well and maybe a bigger problem",
    "start": "591779",
    "end": "598800"
  },
  {
    "text": "and that is when you have that single customer service like that now everything is coupled to that customer",
    "start": "598800",
    "end": "604920"
  },
  {
    "text": "service so if I make a change to that customer service it ripples out to all sorts of places in my architecture",
    "start": "604920",
    "end": "611399"
  },
  {
    "text": "and that Rippling coupling effect it turns out is really damaging to architecture if you want to make small",
    "start": "611399",
    "end": "617580"
  },
  {
    "text": "changes in an isolated way in architecture that's the other trade-off you have here is you not only build two",
    "start": "617580",
    "end": "625920"
  },
  {
    "text": "complicated things but you also end up creating these coupling points that make things like incremental change really",
    "start": "625920",
    "end": "631980"
  },
  {
    "text": "really difficult and so this is really the trade-off that we realized is reuse versus coupling and this is actually one",
    "start": "631980",
    "end": "638760"
  },
  {
    "text": "of the great Revelations I think one of the subtle realizations of domain-driven design because when he created this idea",
    "start": "638760",
    "end": "645899"
  },
  {
    "text": "of a bounded context he basically said duplication is better than coupling that",
    "start": "645899",
    "end": "651180"
  },
  {
    "text": "was the trade-off that he identified was you know sometimes duplicating those things and not coupling them allows you",
    "start": "651180",
    "end": "657480"
  },
  {
    "text": "better isolated change and if your goal is isolated chains that's the better trade-off than creating all these",
    "start": "657480",
    "end": "663480"
  },
  {
    "text": "coupling points in architecture but you know in software everything is two steps forward and one step back and",
    "start": "663480",
    "end": "670140"
  },
  {
    "text": "so one really good thing happened in this architecture which is around these infrastructure",
    "start": "670140",
    "end": "676019"
  },
  {
    "text": "services things like monitoring and logging and authentication authorization service",
    "start": "676019",
    "end": "681600"
  },
  {
    "text": "Discovery all the plumbing parts of your architecture it turns out it's really nice to have a single representation of",
    "start": "681600",
    "end": "687540"
  },
  {
    "text": "all those things but of course the philosophy that pervades the microservices world is the",
    "start": "687540",
    "end": "693120"
  },
  {
    "text": "one that comes from domain-driven design where you don't try to create single coupling points in your architecture in",
    "start": "693120",
    "end": "698339"
  },
  {
    "text": "fact the opposite is true you try to create things as decoupled as possible and even if catalog checkout and",
    "start": "698339",
    "end": "704820"
  },
  {
    "text": "shipping have the same notion of a customer you never try to reconcile that to a single class you just send",
    "start": "704820",
    "end": "710760"
  },
  {
    "text": "information back and forth through messages and so the philosophy in this world is that duplication is preferable",
    "start": "710760",
    "end": "717660"
  },
  {
    "text": "to coupling and this untangles all of our domains in a way that you might have minor",
    "start": "717660",
    "end": "723120"
  },
  {
    "text": "duplication but now you have a single unit of change which is nice",
    "start": "723120",
    "end": "728180"
  },
  {
    "text": "but now we've lost something because what about all that operational coupling so let's say that we make every",
    "start": "728279",
    "end": "734880"
  },
  {
    "text": "service team responsible for implementing the correct monitoring and logging and all that stuff so let's put",
    "start": "734880",
    "end": "740279"
  },
  {
    "text": "aside the moment that some teams maybe forget to do that or don't do it correctly what about things like I need",
    "start": "740279",
    "end": "746160"
  },
  {
    "text": "to update the version of our monitoring tool how can you possibly get that rolled out in any kind of consistent way",
    "start": "746160",
    "end": "751920"
  },
  {
    "text": "across your organization so we've come up with some interesting reuse philosophies in the microservices",
    "start": "751920",
    "end": "759720"
  },
  {
    "text": "world to solve that problem you frequently see microservices drawn on",
    "start": "759720",
    "end": "764880"
  },
  {
    "text": "top of a gray box like this and that's not accidental that gray box actually has semantic meaning this has been",
    "start": "764880",
    "end": "771000"
  },
  {
    "text": "called variably either service templates or sidecars the name has kind of shifted over time and the idea here is that",
    "start": "771000",
    "end": "777600"
  },
  {
    "text": "we have all these common shared operational concerns in microservices things like logging and monitoring",
    "start": "777600",
    "end": "783260"
  },
  {
    "text": "authentication authorization service Discovery circuit breakers all those",
    "start": "783260",
    "end": "788339"
  },
  {
    "text": "things that we want operationally common so why don't we build a common shared mechanism either a template that we can",
    "start": "788339",
    "end": "794100"
  },
  {
    "text": "subclass from or shared library that each one of our services has that's this idea of a sidecar and that led to this",
    "start": "794100",
    "end": "801420"
  },
  {
    "text": "idea that you hear this very popular in the microservices world right now about service meshes is this realization that",
    "start": "801420",
    "end": "807600"
  },
  {
    "text": "we have all these shared operational concerns that will actually benefit coupling together at the architectural",
    "start": "807600",
    "end": "814139"
  },
  {
    "text": "level and the idea of a service mesh is well if we know that every one of our service component has these exact same",
    "start": "814139",
    "end": "820079"
  },
  {
    "text": "kind of operational libraries in them we can actually build dashboards that allow us to wire those things together and",
    "start": "820079",
    "end": "825899"
  },
  {
    "text": "change things like monitoring the logging levels and other sorts of operational concerns and so what we've",
    "start": "825899",
    "end": "831480"
  },
  {
    "text": "managed to do here is coupled the part together the parts that we benefit from coupling together but decouple the parts",
    "start": "831480",
    "end": "838320"
  },
  {
    "text": "that we don't benefit from coupling together which are all these domain classes which allows us to have the kind",
    "start": "838320",
    "end": "844260"
  },
  {
    "text": "of change we want to have at the level we want to have because now we've unified change for the things we want",
    "start": "844260",
    "end": "850139"
  },
  {
    "text": "coupled together and broken apart the things that actually harm us to be coupled together",
    "start": "850139",
    "end": "855779"
  },
  {
    "text": "so that's a good example that reuses really actually a trade-off between reuse versus coupling and a few other",
    "start": "855779",
    "end": "862380"
  },
  {
    "text": "things here's another one of those trade-offs",
    "start": "862380",
    "end": "868160"
  },
  {
    "text": "and it's something that uh we refer to in The evolutionary architecture book as",
    "start": "868260",
    "end": "874019"
  },
  {
    "text": "the last 10 percent trap and a lot of tools and Frameworks end up suffering from what we call the last 10",
    "start": "874019",
    "end": "880139"
  },
  {
    "text": "trap including some very common Hot Topics right now so let me describe what",
    "start": "880139",
    "end": "885779"
  },
  {
    "text": "we mean by the last 10 percent trap and the difference between a fundamental",
    "start": "885779",
    "end": "891240"
  },
  {
    "text": "difference between what we call an evolvable architecture versus an adaptable architecture",
    "start": "891240",
    "end": "897300"
  },
  {
    "text": "so our book was called evolutionary architectures and we thought about adaptable architectures as a name as",
    "start": "897300",
    "end": "903000"
  },
  {
    "text": "well but there's an important distinction between Evolution versus adaptation because when I say",
    "start": "903000",
    "end": "908459"
  },
  {
    "text": "adaptability to a developer architect what they Envision is the configuration dialogue",
    "start": "908459",
    "end": "914760"
  },
  {
    "text": "in eclipse or Visual Studio that we've built all these possibilities and we've built switches in it to allow",
    "start": "914760",
    "end": "921779"
  },
  {
    "text": "you to adapt to all those things and there's a lot of software that's built to be adaptable where you can customize",
    "start": "921779",
    "end": "927660"
  },
  {
    "text": "it with little Snippets of code and switches and that sort of stuff but they all suffer from this last 10 trap so let",
    "start": "927660",
    "end": "933540"
  },
  {
    "text": "me describe what I mean here so this is based on some experience I had many many years ago I worked for a consulting",
    "start": "933540",
    "end": "938940"
  },
  {
    "text": "company that at application development for clients in Microsoft Access and we",
    "start": "938940",
    "end": "943980"
  },
  {
    "text": "ended up shutting down that part of the company because we realized that every Access Project had the same",
    "start": "943980",
    "end": "949019"
  },
  {
    "text": "characteristic it started as booming success and ended in total failure we wanted to understand the dynamic of why",
    "start": "949019",
    "end": "955320"
  },
  {
    "text": "that kept happening over and over again so we codified this as the last 10 trap and so",
    "start": "955320",
    "end": "961560"
  },
  {
    "text": "using a tool like access eighty percent of what the user wants is super fast and easy to build and it's stunning how fast",
    "start": "961560",
    "end": "968220"
  },
  {
    "text": "you can get it done the next 10 percent is possible but difficult because now you're trying to",
    "start": "968220",
    "end": "974760"
  },
  {
    "text": "do something the tool doesn't really natively want to do but you can kind of hack it and bend it and you know cheat a",
    "start": "974760",
    "end": "980279"
  },
  {
    "text": "little bit and figure out a way to get it to work problem though is the last 10 percent",
    "start": "980279",
    "end": "985560"
  },
  {
    "text": "you cannot get to work because you can't get far enough underneath the tool or the framework to make it happen it turns",
    "start": "985560",
    "end": "992160"
  },
  {
    "text": "out users always want a hundred percent of what they want and they're never satisfied with less than that",
    "start": "992160",
    "end": "998339"
  },
  {
    "text": "some of you have been around long enough and have enough gray hairs to remember the four GLS",
    "start": "998339",
    "end": "1005300"
  },
  {
    "text": "remember the four GLS in the late 90s these were all the rage in the late 90s everybody was doing application",
    "start": "1005300",
    "end": "1011779"
  },
  {
    "text": "development in 4gls so whatever happened to them why are we not doing development in these platforms now",
    "start": "1011779",
    "end": "1019160"
  },
  {
    "text": "they all suffered from this last 10 percent trap in fact what happened to these guys it turns out interestingly",
    "start": "1019160",
    "end": "1025760"
  },
  {
    "text": "enough is the really interesting ones became domain specific languages written on top of third generation languages",
    "start": "1025760",
    "end": "1032240"
  },
  {
    "text": "like Ruby or groovy but taking advantage of meta programming and a bunch of other stuff so you have a little more chance",
    "start": "1032240",
    "end": "1038720"
  },
  {
    "text": "to dip into the underlying language if you want but it still has limitations because you can't build every kind of",
    "start": "1038720",
    "end": "1044959"
  },
  {
    "text": "application you want in these Frameworks other things also suffer from this anti-pattern like every giant Erp",
    "start": "1044959",
    "end": "1052880"
  },
  {
    "text": "package you've ever seen they're selling you on this idea that we've built the adaptable piece of",
    "start": "1052880",
    "end": "1060320"
  },
  {
    "text": "software but think through just a second what they're suggesting there they're",
    "start": "1060320",
    "end": "1065360"
  },
  {
    "text": "suggesting that they've built a piece of software where they've modeled every possible business scenario on Earth",
    "start": "1065360",
    "end": "1074000"
  },
  {
    "text": "and tested every possible business scenario on Earth in every possible combination of all the",
    "start": "1074000",
    "end": "1082340"
  },
  {
    "text": "switches turned on and turned off Etc I don't know that that's really possible",
    "start": "1082340",
    "end": "1087500"
  },
  {
    "text": "and so what happens in all these but it has the same characteristic it starts out with a booming success because they",
    "start": "1087500",
    "end": "1092900"
  },
  {
    "text": "handle all the easy things first and then there Comes a Day when it's not easy to model the thing",
    "start": "1092900",
    "end": "1099559"
  },
  {
    "text": "and so you either decide from a business well do we Bend our business toward what the Erp tool wants or do we just not",
    "start": "1099559",
    "end": "1106039"
  },
  {
    "text": "model that part of the business which is why all these things don't end in success they just agree to",
    "start": "1106039",
    "end": "1112400"
  },
  {
    "text": "stop working nobody wants to say it's a failure because people get fired but we'll just",
    "start": "1112400",
    "end": "1117919"
  },
  {
    "text": "agree to stop working you know well I think we're done we're good here we'll just we'll just stop there and we'll say",
    "start": "1117919",
    "end": "1122960"
  },
  {
    "text": "it's good so what are things that currently have the same pattern of last 10 percent trap",
    "start": "1122960",
    "end": "1129559"
  },
  {
    "text": "one of the things that I'm really curious about is all the serverless stuff",
    "start": "1129559",
    "end": "1135919"
  },
  {
    "text": "and I don't know yet the jury's still out on this but it has all the exact characteristics of this last 10 percent",
    "start": "1135919",
    "end": "1142280"
  },
  {
    "text": "trap kind of platforms prototype stuff is great oh it's awesome look how easy it is Boom somebody else's computer",
    "start": "1142280",
    "end": "1147860"
  },
  {
    "text": "don't have to worry about it and then you try to put it in production oh leighton's oh start a o uh timeout oh",
    "start": "1147860",
    "end": "1156559"
  },
  {
    "text": "all these other kinds of things it may be that they build up these platforms and solve a bunch of these problems but",
    "start": "1156559",
    "end": "1161720"
  },
  {
    "text": "right now it reeks to me of this last 10 problem of really easy to build simple",
    "start": "1161720",
    "end": "1166760"
  },
  {
    "text": "things but trying to build real things in them you hit walls that you can't get around another big uh thing right now these low",
    "start": "1166760",
    "end": "1174020"
  },
  {
    "text": "code environments they're all the rage right now and I absolutely guarantee all",
    "start": "1174020",
    "end": "1180080"
  },
  {
    "text": "of these suffer from this last 10 percent trap this is a quick way so we did this in the 90s I've seen this movie",
    "start": "1180080",
    "end": "1186740"
  },
  {
    "text": "before and it doesn't end well this is rad environments in the 90s and the four GLS and the case tools it's the",
    "start": "1186740",
    "end": "1194120"
  },
  {
    "text": "exact same stuff every one of these things are going to have exactly those kind of limitations and now maybe it's",
    "start": "1194120",
    "end": "1199700"
  },
  {
    "text": "not 10 maybe it's the last eight percent maybe it's the last four percent but users always want 100 of what they want",
    "start": "1199700",
    "end": "1206600"
  },
  {
    "text": "and even if you can build something that works at some point they all have to be hosted in some kind of environment and",
    "start": "1206600",
    "end": "1212720"
  },
  {
    "text": "you're going to need some architectural characteristic that environment can't support like performance or scale or",
    "start": "1212720",
    "end": "1218179"
  },
  {
    "text": "elasticity or something like that which you can only get by Third Generation",
    "start": "1218179",
    "end": "1223460"
  },
  {
    "text": "low-level languages and traditional architecture patterns so far so both examples of things that are",
    "start": "1223460",
    "end": "1231380"
  },
  {
    "text": "trade-offs in our world so the second observation is that nothing in our world is a binary",
    "start": "1231380",
    "end": "1238820"
  },
  {
    "text": "everything exists along a spectrum and one of the things that I mentioned before that I want to talk a little bit",
    "start": "1238820",
    "end": "1245419"
  },
  {
    "text": "about is rethinking Enterprise architecture I can't think of another role that has",
    "start": "1245419",
    "end": "1250880"
  },
  {
    "text": "shifted more in the last decade or so that Enterprise architecture because if you look at the standard playbooks from",
    "start": "1250880",
    "end": "1256520"
  },
  {
    "text": "20 years ago when most of them written most of the assumptions they make are completely crazily untrue I like the",
    "start": "1256520",
    "end": "1263539"
  },
  {
    "text": "amount of time it takes to design things and you know spending several years working on a strategy when the entire",
    "start": "1263539",
    "end": "1270080"
  },
  {
    "text": "ecosystem has changed within the first year that you do that so let's talk for a second about",
    "start": "1270080",
    "end": "1276580"
  },
  {
    "text": "uh constraint but what Enterprise Architects refer to this as",
    "start": "1276580",
    "end": "1282500"
  },
  {
    "text": "governance so let's talk about governance for a second this is the fun thing about words",
    "start": "1282500",
    "end": "1288200"
  },
  {
    "text": "the origin of the word govern is actually from the Greek word kubernon",
    "start": "1288200",
    "end": "1293360"
  },
  {
    "text": "which is the same root as kubernetes so there's some little uh trivial factoid for you today so govern has",
    "start": "1293360",
    "end": "1300440"
  },
  {
    "text": "several different definitions to control direct or strongly influence the actions or conduct of to exert a determining or",
    "start": "1300440",
    "end": "1306860"
  },
  {
    "text": "guiding influence on or over or to hold in check and so a lot of Enterprise Architects",
    "start": "1306860",
    "end": "1312320"
  },
  {
    "text": "are playing this Playbook where governance is about holding things in check and making sure that we look at",
    "start": "1312320",
    "end": "1319299"
  },
  {
    "text": "software as overhead because if software is overhead the main",
    "start": "1319299",
    "end": "1325580"
  },
  {
    "text": "thing you want to do is minimize costs so that's one of the driving concerns and so that leads you to very often to",
    "start": "1325580",
    "end": "1332179"
  },
  {
    "text": "the sort of Monolithic governance model because this makes sense if we pick a single platform single database server",
    "start": "1332179",
    "end": "1338120"
  },
  {
    "text": "single reporting engine then we could move we only have one license we can move people between those tools on",
    "start": "1338120",
    "end": "1344120"
  },
  {
    "text": "projects and so that makes perfect sense from a cost-saving standpoint to do this monolithic governance model",
    "start": "1344120",
    "end": "1351260"
  },
  {
    "text": "here's the unfortunate side effect of that model is that okay I'm an Enterprise architect",
    "start": "1351260",
    "end": "1357919"
  },
  {
    "text": "and now I need to implement this model as a governance model and now I need to pick a relational database that everybody in the company can use",
    "start": "1357919",
    "end": "1364400"
  },
  {
    "text": "I have to go to every team now and find the team that has the worst awfullest gnarliest relational data problem and I",
    "start": "1364400",
    "end": "1371179"
  },
  {
    "text": "have to be able to pick a tool complex enough to solve their worst problem and I have to go to the reporting people and",
    "start": "1371179",
    "end": "1376760"
  },
  {
    "text": "find their worst office problem in the integration Architects and find their worst offless problem and you",
    "start": "1376760",
    "end": "1382460"
  },
  {
    "text": "standardize basically on the most complex stack that you need for every hardest problem and if you're like most",
    "start": "1382460",
    "end": "1389360"
  },
  {
    "text": "organizations 80 percent of your projects don't need an industrial strength relational database they just",
    "start": "1389360",
    "end": "1394460"
  },
  {
    "text": "need a simple thing place to store things and get them back but they're dealing with the complexity of an industrial strength relational database",
    "start": "1394460",
    "end": "1401179"
  },
  {
    "text": "because we standardized on that thing so the unfortunate side effect of this cost saving measure is you end up over",
    "start": "1401179",
    "end": "1408380"
  },
  {
    "text": "engineering everything to ridiculous degrees and that's really where this idea and",
    "start": "1408380",
    "end": "1413960"
  },
  {
    "text": "the micro Services world came from the decentralized governance model of",
    "start": "1413960",
    "end": "1420320"
  },
  {
    "text": "let's choose the right technology stack for the problem that we have and so one",
    "start": "1420320",
    "end": "1425659"
  },
  {
    "text": "of the controversial things in the microservices world is let different teams pick different technology Stacks if it makes sense for them to do so",
    "start": "1425659",
    "end": "1431780"
  },
  {
    "text": "because we're not trying to over engineer everything to death and excuse me this actually indicates a shift in",
    "start": "1431780",
    "end": "1439220"
  },
  {
    "text": "our attitude about governance which is the other definition of governance which doesn't serve as a precedent or deciding",
    "start": "1439220",
    "end": "1445100"
  },
  {
    "text": "principle for and so 20th century governance was very much about managing overhead and cost savings over guidance",
    "start": "1445100",
    "end": "1452840"
  },
  {
    "text": "so cost saving was the number one thing but we've seen a definite shift over the",
    "start": "1452840",
    "end": "1458179"
  },
  {
    "text": "last few years where now it's a lot more about guidance rather than cost savings and in fact what we're seeing is a",
    "start": "1458179",
    "end": "1464900"
  },
  {
    "text": "common model in a lot of organizations is this thing that we call Goldilocks governance which is kind of the spectrum",
    "start": "1464900",
    "end": "1470960"
  },
  {
    "text": "version of this it's not the binary of one size fits all or let every a thousand flowers bloom and let every",
    "start": "1470960",
    "end": "1477500"
  },
  {
    "text": "project pick their own artisanal development stack rather let's pick a few Stacks that we know we can",
    "start": "1477500",
    "end": "1483860"
  },
  {
    "text": "standardize on a simple one a complex one and a really industrial strength one",
    "start": "1483860",
    "end": "1489740"
  },
  {
    "text": "and we'll standardize across those",
    "start": "1489740",
    "end": "1494020"
  },
  {
    "text": "so let's talk about some engineering practices one of the ways to support constant change ironically enough is to",
    "start": "1495440",
    "end": "1502820"
  },
  {
    "text": "constrain some things because if you have a lot of energy going in random directions then you're wasting a lot of",
    "start": "1502820",
    "end": "1509419"
  },
  {
    "text": "energy and if you can lock down some of the things that you uh are not benefiting from having variability then",
    "start": "1509419",
    "end": "1516320"
  },
  {
    "text": "you can put more effort into going the direction you want so let's talk for a second about removing variability and",
    "start": "1516320",
    "end": "1521659"
  },
  {
    "text": "it's actually interesting that the the talk before mine talked about night Capital because that's the great example",
    "start": "1521659",
    "end": "1528020"
  },
  {
    "text": "here of uh automating things and and really the great lesson of",
    "start": "1528020",
    "end": "1535279"
  },
  {
    "text": "the lesson of devops because what did the world look like before the devops Revolution yet operations people running",
    "start": "1535279",
    "end": "1541700"
  },
  {
    "text": "around doing ad hoc work on a regular basis and things were constantly falling",
    "start": "1541700",
    "end": "1547820"
  },
  {
    "text": "through cracks what looks like that right now and I would say that a lot of",
    "start": "1547820",
    "end": "1553700"
  },
  {
    "text": "architectural governance looks like that right now because you have architects who are expensive running around doing",
    "start": "1553700",
    "end": "1559520"
  },
  {
    "text": "ad hoc code reviews and architecture review boards and that sort of stuff but important things are constantly falling",
    "start": "1559520",
    "end": "1565220"
  },
  {
    "text": "through the cracks so let me talk for a second about this is the book that Josh referenced written by myself Rebecca",
    "start": "1565220",
    "end": "1571760"
  },
  {
    "text": "Parsons and Pat qua building evolutionary architectures one of the things that we talk about in our book",
    "start": "1571760",
    "end": "1577340"
  },
  {
    "text": "this idea of being able to automate architectural governance taking the same rules from devops but applying it to the",
    "start": "1577340",
    "end": "1584120"
  },
  {
    "text": "architectural governance world so this is our definition of an evolutionary architecture which supports a guided",
    "start": "1584120",
    "end": "1589700"
  },
  {
    "text": "incremental change across multiple dimensions and I just want to talk about a couple of aspects of this definition and one of those is this idea of guided",
    "start": "1589700",
    "end": "1597080"
  },
  {
    "text": "change we part of our nomenclature that we've created for our book is this idea",
    "start": "1597080",
    "end": "1602240"
  },
  {
    "text": "of an architectural Fitness function which is an objective Integrity assessment of some architectural",
    "start": "1602240",
    "end": "1608120"
  },
  {
    "text": "characteristic or combination of architectural characteristics so let me give you just a couple of examples of",
    "start": "1608120",
    "end": "1613159"
  },
  {
    "text": "these things so let's say that you're an architect and you're building some sort of component-based system one of the",
    "start": "1613159",
    "end": "1618380"
  },
  {
    "text": "things that you don't want in that system are cyclic dependencies between your components where one component",
    "start": "1618380",
    "end": "1624500"
  },
  {
    "text": "references another one which refers another one which references the original one this is bad because now",
    "start": "1624500",
    "end": "1629600"
  },
  {
    "text": "it's hard to reuse one of those in some future scenario and so as an architect I'd like to be able to prevent this from",
    "start": "1629600",
    "end": "1636020"
  },
  {
    "text": "happening you can do this by writing a fitness function as a unit test this is using a tool in the Java world called JD",
    "start": "1636020",
    "end": "1643279"
  },
  {
    "text": "pin and what it does is check for Cycles in your code base and will fail a unit test if one of those exists there's a",
    "start": "1643279",
    "end": "1650000"
  },
  {
    "text": "similar tool in the dot net world called independent that does these same kind of cyclic checks here's another example",
    "start": "1650000",
    "end": "1656120"
  },
  {
    "text": "as an architect let's say that you've designed an architecture this traditional layered architecture with a",
    "start": "1656120",
    "end": "1662240"
  },
  {
    "text": "presentation layer business layer and a data layer and you hand this over to developers to implement it for you how",
    "start": "1662240",
    "end": "1667880"
  },
  {
    "text": "can you make sure that they implement this architecture correctly there's a really nice tool available now called",
    "start": "1667880",
    "end": "1673220"
  },
  {
    "text": "Arc unit that allows you to write architecture level governance rules as unit tests and here's a good example of",
    "start": "1673220",
    "end": "1680539"
  },
  {
    "text": "one of those I'll highlight the one in the middle here no classes that reside in a package server should access",
    "start": "1680539",
    "end": "1686360"
  },
  {
    "text": "classes that reside in a package controller now many of you as Architects have",
    "start": "1686360",
    "end": "1692480"
  },
  {
    "text": "written almost this same English sentence in a Wiki or SharePoint portal somewhere",
    "start": "1692480",
    "end": "1699140"
  },
  {
    "text": "and it was right once read Never by another human being",
    "start": "1699140",
    "end": "1705140"
  },
  {
    "text": "you wrote it there to build some governance rules but nobody's ever going to read that because there's nothing",
    "start": "1705140",
    "end": "1710539"
  },
  {
    "text": "that forces them to read it if you write it as a test they cannot ignore it anymore these are governance rules with",
    "start": "1710539",
    "end": "1717559"
  },
  {
    "text": "teeth that nobody can ignore so here's another example of a fitness",
    "start": "1717559",
    "end": "1723919"
  },
  {
    "text": "function some of these rely on tools like Arc unit but some of these are just ways to think about solving a problem",
    "start": "1723919",
    "end": "1729740"
  },
  {
    "text": "so I was working for a large financial services company in Manhattan and they were using a variety of Open Source",
    "start": "1729740",
    "end": "1735860"
  },
  {
    "text": "libraries and one of their lawyers got really concerned at one point about the license terms of some of these open",
    "start": "1735860",
    "end": "1742100"
  },
  {
    "text": "source libraries they didn't want to accidentally take on a viral license term which would affect their ability to",
    "start": "1742100",
    "end": "1748100"
  },
  {
    "text": "license their stuff and so we chased down all the license files for all these open source",
    "start": "1748100",
    "end": "1753320"
  },
  {
    "text": "libraries and Frameworks and let the lawyers look at them but then what a lawyer has asked a really awkward question",
    "start": "1753320",
    "end": "1759799"
  },
  {
    "text": "what happens if one of these libraries updates the term of their license during a software update",
    "start": "1759799",
    "end": "1767440"
  },
  {
    "text": "and we'd like to just say well you're just being a paranoid lawyer because that would never happen but of course he",
    "start": "1767480",
    "end": "1772640"
  },
  {
    "text": "had a case in his back pocket where it had happened the QT user interface Library fundamentally changed their Library",
    "start": "1772640",
    "end": "1778760"
  },
  {
    "text": "during a minor software update so now this is a problem that we have to deal with so here's how we ended up solving this",
    "start": "1778760",
    "end": "1785000"
  },
  {
    "text": "problem by building a fitness function that looked at licenses for open source libraries what we did was we knew the",
    "start": "1785000",
    "end": "1791360"
  },
  {
    "text": "location for the license file in each of these libraries and Frameworks so what we did was take that entire license file",
    "start": "1791360",
    "end": "1797120"
  },
  {
    "text": "and hashed it and put that value into a database then anytime one of these",
    "start": "1797120",
    "end": "1802340"
  },
  {
    "text": "libraries did an update we hash the license file compared that to the version of the database and if it",
    "start": "1802340",
    "end": "1807919"
  },
  {
    "text": "changed we call the lawyer okay look at the new one if that one looks okay we'll hash it put it in the",
    "start": "1807919",
    "end": "1813799"
  },
  {
    "text": "database and it's now the current value and so now we're basically notified every time one of these things changes",
    "start": "1813799",
    "end": "1820100"
  },
  {
    "text": "this is true for a lot of these governance rules because really what this is is a heartbeat",
    "start": "1820100",
    "end": "1825740"
  },
  {
    "text": "it's basically something that says it's okay it's okay it's okay it's okay whoops it's broken come fix me okay it's",
    "start": "1825740",
    "end": "1832940"
  },
  {
    "text": "okay it's okay it's okay but the problem if you don't have this is your whole",
    "start": "1832940",
    "end": "1838279"
  },
  {
    "text": "life is going is it okay is it okay is it okay I don't know is it okay is it",
    "start": "1838279",
    "end": "1844399"
  },
  {
    "text": "okay and you never know having this heartbeat there is one thing you don't have to think about until you need to",
    "start": "1844399",
    "end": "1850100"
  },
  {
    "text": "think about it and you can think about it really hard and you don't have to think about it anymore for a while that's a lot of what automating",
    "start": "1850100",
    "end": "1856399"
  },
  {
    "text": "governance is all about so I'll leave you with one last piece which is the other part of our",
    "start": "1856399",
    "end": "1862580"
  },
  {
    "text": "definition which talks about incremental change and this is really this idea of building all these uh on these agile",
    "start": "1862580",
    "end": "1869120"
  },
  {
    "text": "engineering practices like continuous integration and deployment pipelines and tools like that turns out this is the",
    "start": "1869120",
    "end": "1875179"
  },
  {
    "text": "perfect place to execute these Fitness functions once you've created them within your organization in fact this",
    "start": "1875179",
    "end": "1881120"
  },
  {
    "text": "gives you a kind of global reach so one of the lessons that devops taught us was that at some point a certain level of",
    "start": "1881120",
    "end": "1888200"
  },
  {
    "text": "automation gives you a platform you can rest upon and so",
    "start": "1888200",
    "end": "1893659"
  },
  {
    "text": "imagine a world for just a moment where all of your projects were running",
    "start": "1893659",
    "end": "1898940"
  },
  {
    "text": "a deployment Pipeline and your Enterprise Architects have a slot in that deployment Pipeline and maybe they",
    "start": "1898940",
    "end": "1905299"
  },
  {
    "text": "can put some Fitness functions in there for things like complexity or coupling or some other global concerns",
    "start": "1905299",
    "end": "1911899"
  },
  {
    "text": "and maybe your security team has a slot in that deployment pipeline as well so now I've got a question for you",
    "start": "1911899",
    "end": "1918620"
  },
  {
    "text": "what do you do in your organization right now if you have a zero day security exploit for one of the",
    "start": "1918620",
    "end": "1924679"
  },
  {
    "text": "libraries or Frameworks you're using for development this is not a random question this happened to a major financial institution in the U.S a",
    "start": "1924679",
    "end": "1931880"
  },
  {
    "text": "little over a year ago and they're still recovering from this so what they do they found out a zero day exploit is in",
    "start": "1931880",
    "end": "1937340"
  },
  {
    "text": "struts and so the security people ran around the organization looking for affected projects they found a bunch of",
    "start": "1937340",
    "end": "1943039"
  },
  {
    "text": "them and a bunch of them fell through the cracks because they didn't have automation",
    "start": "1943039",
    "end": "1948799"
  },
  {
    "text": "what if every one of your projects is running a deployment Pipeline and your security team had a slot in that",
    "start": "1948799",
    "end": "1954559"
  },
  {
    "text": "deployment pipeline so that when that zero day exploit comes out they can insert a test and that deployment",
    "start": "1954559",
    "end": "1960440"
  },
  {
    "text": "pipeline that triggers a build that says if you're using this affected version of struts fail your build and notify the",
    "start": "1960440",
    "end": "1967220"
  },
  {
    "text": "security team this is using automation to create a platform for governance across the entire organization so you",
    "start": "1967220",
    "end": "1974480"
  },
  {
    "text": "don't have to manually run around and miss a bunch of things in an ad hoc way",
    "start": "1974480",
    "end": "1980360"
  },
  {
    "text": "so last example I'll give you of incremental change is the ability to make small changes at the architectural",
    "start": "1980360",
    "end": "1986120"
  },
  {
    "text": "level and this is a case study from the GitHub engineering blog called move fast and fix things and this describes a",
    "start": "1986120",
    "end": "1992720"
  },
  {
    "text": "particular problem they had at GitHub about merge turns out since day one at",
    "start": "1992720",
    "end": "1997820"
  },
  {
    "text": "GitHub the way I merged two things is to Shell out to a shell script to a command line get to merge them and then suck it",
    "start": "1997820",
    "end": "2003880"
  },
  {
    "text": "back into GitHub and that works great because command line get knows how to merge things but it doesn't scale",
    "start": "2003880",
    "end": "2008919"
  },
  {
    "text": "particularly well and these guys operated extreme scale and also extreme agility they do continuous deployment",
    "start": "2008919",
    "end": "2016299"
  },
  {
    "text": "and they average 60 deploys a day and so now they need to make this major structural change",
    "start": "2016299",
    "end": "2021519"
  },
  {
    "text": "and so they bit the bullet and wrote the internal memory based merge routine and",
    "start": "2021519",
    "end": "2027640"
  },
  {
    "text": "did the due diligence testing but now here comes the scary part of my talk now they have to put it live but",
    "start": "2027640",
    "end": "2035019"
  },
  {
    "text": "here's the problem you can't break merge on GitHub it has literally worked perfectly since day one and the last",
    "start": "2035019",
    "end": "2041980"
  },
  {
    "text": "thing you want to do is start introducing regressions into something that's never been broken this is a",
    "start": "2041980",
    "end": "2047019"
  },
  {
    "text": "really common problem in architecture how do you make structural changes without introducing side effect",
    "start": "2047019",
    "end": "2052300"
  },
  {
    "text": "instabilities a bunch of other places the way they did this and open source it on your behalf is to create this tool",
    "start": "2052300",
    "end": "2059679"
  },
  {
    "text": "called scientist and they've already ported this to a bunch of different languages and what scientists allows you",
    "start": "2059679",
    "end": "2065020"
  },
  {
    "text": "to do is conduct experiments so scientists gives you a used block and",
    "start": "2065020",
    "end": "2070118"
  },
  {
    "text": "a try block the used block is the old thing we used to do and the try block is new stuff we're trying out and so you",
    "start": "2070119",
    "end": "2077560"
  },
  {
    "text": "set the threshold for how often it executes the try block so the merge experiment they did the try block for",
    "start": "2077560",
    "end": "2082780"
  },
  {
    "text": "one percent of the time it always executes use and that's where it always returns to the user but in one case it",
    "start": "2082780",
    "end": "2088839"
  },
  {
    "text": "also executes try it randomizes the order measures durations Compares results",
    "start": "2088839",
    "end": "2094540"
  },
  {
    "text": "swallows and recording exceptions and publishes all this stuff live so they first went live here are the",
    "start": "2094540",
    "end": "2101619"
  },
  {
    "text": "merges they were doing so at 220 they were doing a little over 2 000 merges if you look closely at the bottom you can",
    "start": "2101619",
    "end": "2107320"
  },
  {
    "text": "see some tiny red tick marks which is where using try disagreed so I'll zoom in on the bottom so you can see that's",
    "start": "2107320",
    "end": "2113140"
  },
  {
    "text": "where try and use disagreed but they're also measuring performance so here's the performance graph and the green line is",
    "start": "2113140",
    "end": "2119500"
  },
  {
    "text": "the new code and the blue line is the old one so this is a lot more performant they ended up running this experiment",
    "start": "2119500",
    "end": "2125859"
  },
  {
    "text": "for four days until they had 24 hours with no mismatches or slow cases they removed the oil merge code left the new",
    "start": "2125859",
    "end": "2133000"
  },
  {
    "text": "merge code in place no regressions whatsoever and during that four days",
    "start": "2133000",
    "end": "2138160"
  },
  {
    "text": "they did more than 10 million comparisons between the old code and the new code so I had really high confidence",
    "start": "2138160",
    "end": "2144220"
  },
  {
    "text": "when they left that new code in place that it wasn't going to break anything or cause any breakages or regressions",
    "start": "2144220",
    "end": "2149380"
  },
  {
    "text": "that's a great example of incremental change at the architectural level in a",
    "start": "2149380",
    "end": "2154900"
  },
  {
    "text": "safe controlled engineered way to make sure that you don't break stuff",
    "start": "2154900",
    "end": "2160839"
  },
  {
    "text": "so to summarize this stuff one of the ways that ways to change is",
    "start": "2160839",
    "end": "2166180"
  },
  {
    "text": "variability from your organization because that allows you to put more effort into things that you benefit from",
    "start": "2166180",
    "end": "2172060"
  },
  {
    "text": "being variable also automation gives you a platform that you can rely on to do all sorts of",
    "start": "2172060",
    "end": "2178359"
  },
  {
    "text": "interesting stuff everything is a trade-off and if you don't think it's a trade-off that just",
    "start": "2178359",
    "end": "2184000"
  },
  {
    "text": "means you haven't identified the trade-off yet and the best advice of course is constantly evolve your thinking don't",
    "start": "2184000",
    "end": "2190480"
  },
  {
    "text": "get caught up in this is the way we've always done it constantly put pressure on thinking about changing what you're",
    "start": "2190480",
    "end": "2196060"
  },
  {
    "text": "thinking because the world is going to continue to constantly change underneath you and the faster you adapt to that the",
    "start": "2196060",
    "end": "2202420"
  },
  {
    "text": "better off you'll be thanks very much for coming I hope you enjoyed it [Applause]",
    "start": "2202420",
    "end": "2211729"
  }
]