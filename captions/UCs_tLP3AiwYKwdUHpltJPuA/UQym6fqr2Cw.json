[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "hello everyone um my name is talip I'm the founder of uh",
    "start": "6359",
    "end": "11599"
  },
  {
    "text": "hazelcast um so today we're going to talk about clusters we're going to talk",
    "start": "11599",
    "end": "16720"
  },
  {
    "text": "about scalability cap term um caching so all",
    "start": "16720",
    "end": "22480"
  },
  {
    "text": "the all the fun stuff and I'll do a demo I'll take the risk um okay um",
    "start": "22480",
    "end": "31119"
  },
  {
    "text": "um okay so what is hazelcast hazelcast so",
    "start": "31119",
    "end": "37440"
  },
  {
    "start": "35000",
    "end": "95000"
  },
  {
    "text": "so we we all know hashmap it's key value it's the hashmap is not threat safe if",
    "start": "37440",
    "end": "43680"
  },
  {
    "text": "you want to share the map across multiple threads we use concurrent",
    "start": "43680",
    "end": "49879"
  },
  {
    "text": "hashmap or any thread safe hashmap right so what if we want to share the map",
    "start": "49879",
    "end": "56520"
  },
  {
    "text": "across multiple jvms not only threads but multiple",
    "start": "56520",
    "end": "61559"
  },
  {
    "text": "jvms that's hazelcast so you create an hazelcast instance um with a configuration and",
    "start": "61559",
    "end": "68600"
  },
  {
    "text": "then you say hisel cast give me a map so name of the map is my map customer",
    "start": "68600",
    "end": "75520"
  },
  {
    "text": "map um so whatever so so if the names are the same you're actually working on",
    "start": "75520",
    "end": "82439"
  },
  {
    "text": "the same exact map it doesn't matter which jvm you're accessing from so um so",
    "start": "82439",
    "end": "90280"
  },
  {
    "text": "I'll do a demo it's it's more than a map it's distributed cues and locks and all that stuff so I'll do a demo uh to make",
    "start": "90280",
    "end": "97640"
  },
  {
    "start": "95000",
    "end": "183000"
  },
  {
    "text": "it very clear all right so so when you unzip",
    "start": "97640",
    "end": "105759"
  },
  {
    "text": "hazelcast so you're going to you're going to see something like this so uh lip directory contains all",
    "start": "105759",
    "end": "112520"
  },
  {
    "text": "the hazelcast libraries hazelcast all contains all the other jars so take that",
    "start": "112520",
    "end": "119240"
  },
  {
    "text": "jar put into your class pad you're done there's no dependency so just Tech",
    "start": "119240",
    "end": "125360"
  },
  {
    "text": "single single jar okay so and we have Management Center for",
    "start": "125360",
    "end": "132239"
  },
  {
    "text": "managing the cluster um it's a web U UI and uh do documentation and all that",
    "start": "132239",
    "end": "138800"
  },
  {
    "text": "good stuff also uh I built a console application to demo hazelcast um so",
    "start": "138800",
    "end": "146160"
  },
  {
    "text": "let's look at what what we have here I'll I'll use okay Sublime and okay so",
    "start": "146160",
    "end": "153000"
  },
  {
    "text": "let's see what what we got here it's nothing other than it says include this",
    "start": "153000",
    "end": "158159"
  },
  {
    "text": "jar and run this console application basically um so make it",
    "start": "158159",
    "end": "164800"
  },
  {
    "text": "bigger okay single jar put into your class B and you start uh using the API",
    "start": "164800",
    "end": "170440"
  },
  {
    "text": "that's it okay so close this and I'm going to run",
    "start": "170440",
    "end": "177280"
  },
  {
    "text": "the console application all right sh",
    "start": "177280",
    "end": "182319"
  },
  {
    "text": "console so this will start his uh start my application which is a console",
    "start": "182319",
    "end": "187840"
  },
  {
    "start": "183000",
    "end": "255000"
  },
  {
    "text": "application it's a command line application um in internally we'll call",
    "start": "187840",
    "end": "193040"
  },
  {
    "text": "hazelcast and hazelcast will start so it says there's only one member in the CL cluster and it's me this is me so it",
    "start": "193040",
    "end": "201000"
  },
  {
    "text": "tells you the address and the port number is started on so I'll I'll do m.p",
    "start": "201000",
    "end": "206120"
  },
  {
    "text": "put which is like map. put right the key is one and",
    "start": "206120",
    "end": "211920"
  },
  {
    "text": "Chicago and if I do m.g like a map. I get the value of course now I um",
    "start": "211920",
    "end": "221760"
  },
  {
    "text": "so I'm going to fire up the management center to see how things are laid out so",
    "start": "221760",
    "end": "226920"
  },
  {
    "text": "it's will make everything more clear H so CD into men",
    "start": "226920",
    "end": "234280"
  },
  {
    "text": "Center and start so",
    "start": "234280",
    "end": "240360"
  },
  {
    "text": "it's a web web server starting so let me make this a little bigger",
    "start": "240360",
    "end": "247000"
  },
  {
    "text": "admin admin log in so so that's my cluster I",
    "start": "247000",
    "end": "254040"
  },
  {
    "text": "connect so let's look at the layout so I'll make this a little bigger yep so it",
    "start": "254040",
    "end": "261600"
  },
  {
    "start": "255000",
    "end": "480000"
  },
  {
    "text": "says there's only one member for this default map that we're looking at right",
    "start": "261600",
    "end": "267280"
  },
  {
    "text": "now these are the maps that uh that we working on so the map contains only one",
    "start": "267280",
    "end": "273960"
  },
  {
    "text": "member and there's only one entry in the in the in that member so there's no",
    "start": "273960",
    "end": "279440"
  },
  {
    "text": "backup because there's no other member so let's uh let's watch how things",
    "start": "279440",
    "end": "284759"
  },
  {
    "text": "change so I'll start another another Noe just",
    "start": "284759",
    "end": "291160"
  },
  {
    "text": "like running the same application or different application on another machine in the network so if I do console.",
    "start": "291160",
    "end": "299919"
  },
  {
    "text": "so it will use multicast by default and find other guy and join the cluster and",
    "start": "299919",
    "end": "305520"
  },
  {
    "text": "form two note cluster right now so so now we have so as you can see",
    "start": "305520",
    "end": "312840"
  },
  {
    "text": "here um I see the second note as you can see the entry actually moved to the",
    "start": "312840",
    "end": "318960"
  },
  {
    "text": "other other one so it was on that node but it moved after the second guide came",
    "start": "318960",
    "end": "325080"
  },
  {
    "text": "in so it rebalances the cluster and moves data around cluster okay so and",
    "start": "325080",
    "end": "333120"
  },
  {
    "text": "looks like also this guy is the owner of that uh entry and this second note is",
    "start": "333120",
    "end": "339080"
  },
  {
    "text": "the backup okay so so we extended the map so that we can",
    "start": "339080",
    "end": "345360"
  },
  {
    "text": "do more with the data so we can lock the entry I'm going to lock the entry here",
    "start": "345360",
    "end": "351680"
  },
  {
    "text": "and I'm I'm I'm just going to try to update it from here from the another",
    "start": "351680",
    "end": "356759"
  },
  {
    "text": "jvm put and one uh value pal Alto this is where we are from okay it's",
    "start": "356759",
    "end": "365440"
  },
  {
    "text": "not able to because it is locked by the other jvm of course as soon as I unlock from the first",
    "start": "365440",
    "end": "373319"
  },
  {
    "text": "one it will go through and uh and update do the update if I do a get one I get",
    "start": "373319",
    "end": "378720"
  },
  {
    "text": "the new entry so it's a map concurrent hashmap that we know from java but we",
    "start": "378720",
    "end": "386240"
  },
  {
    "text": "added things like uh blogs and list ERS so I can also listen for who's updating",
    "start": "386240",
    "end": "392520"
  },
  {
    "text": "what um so so I'll um I'll put more data put",
    "start": "392520",
    "end": "398919"
  },
  {
    "text": "many command we'll do it put thousand entries so and and we'll see that",
    "start": "398919",
    "end": "407599"
  },
  {
    "text": "um um data data uh so these two members are sharing the data so it's almost half",
    "start": "407599",
    "end": "414720"
  },
  {
    "text": "and half and uh backups are also also there so",
    "start": "414720",
    "end": "420160"
  },
  {
    "text": "I'll I'll start this SEC third note right now console",
    "start": "420160",
    "end": "426000"
  },
  {
    "text": "s so we'll let's look let's let's see how things change here so for this map",
    "start": "426000",
    "end": "432080"
  },
  {
    "text": "so how data is going to be moving around so so we'll see the third node joining I",
    "start": "432080",
    "end": "438240"
  },
  {
    "text": "see that one right here and then still 101 entries so these This Is How They",
    "start": "438240",
    "end": "445800"
  },
  {
    "text": "are uh sharted and backups eventually we catch on and become also the thousand",
    "start": "445800",
    "end": "452560"
  },
  {
    "text": "one so so we don't rush to get all the backups because that would impact the",
    "start": "452560",
    "end": "458720"
  },
  {
    "text": "network crazy if you have 100 million entries um So eventually it will be the",
    "start": "458720",
    "end": "466280"
  },
  {
    "text": "same so again it's one single jar print your class bad use concurrent hashmap",
    "start": "466280",
    "end": "474520"
  },
  {
    "text": "that you already know um and all jvms in the network will be sharing that",
    "start": "474520",
    "end": "480120"
  },
  {
    "start": "480000",
    "end": "783000"
  },
  {
    "text": "map um so is there anything you want me to do here like",
    "start": "480120",
    "end": "486599"
  },
  {
    "text": "any anything you want me to",
    "start": "486599",
    "end": "490280"
  },
  {
    "text": "try so so",
    "start": "491960",
    "end": "497879"
  },
  {
    "text": "um um locks are only for the rights while while the entry is locked you can",
    "start": "497879",
    "end": "504840"
  },
  {
    "text": "still read yes yes the",
    "start": "504840",
    "end": "511800"
  },
  {
    "text": "lockas should we try yeah yeah okay all right that's uh so let's lock from where",
    "start": "515719",
    "end": "524039"
  },
  {
    "text": "from here this is the third and do lock one this guy is the owner uh the owner",
    "start": "524039",
    "end": "530240"
  },
  {
    "text": "of the lock not the entry so we'll see the lock right here I see that it is already",
    "start": "530240",
    "end": "536440"
  },
  {
    "text": "locked so so the lock is on the second one right now second so we did the lock",
    "start": "536440",
    "end": "543200"
  },
  {
    "text": "operation from the third entry is owned by the second that's why there's a lock",
    "start": "543200",
    "end": "548920"
  },
  {
    "text": "on the second okay so which one do you want me to",
    "start": "548920",
    "end": "554720"
  },
  {
    "text": "kill the second one so if the second one go goes down the lock owner is still",
    "start": "555560",
    "end": "562279"
  },
  {
    "text": "three right what do you expect to happen uh should should the lock stay",
    "start": "562279",
    "end": "568800"
  },
  {
    "text": "lock will stay yes lock should stay come and and and so so probably the entry",
    "start": "568800",
    "end": "576160"
  },
  {
    "text": "will be owned by somebody else and you will still we still see see should we",
    "start": "576160",
    "end": "581399"
  },
  {
    "text": "should still see the lock all",
    "start": "581399",
    "end": "585720"
  },
  {
    "text": "right okay let's uh one minute pray and then uh then do",
    "start": "586600",
    "end": "593480"
  },
  {
    "text": "this so we're going to we're going to kill the we're going to kill the second one",
    "start": "593480",
    "end": "599640"
  },
  {
    "text": "right this this is the second one yeah all right contrl C they're going",
    "start": "599640",
    "end": "605480"
  },
  {
    "text": "down all right so the first uh we saw that the",
    "start": "605480",
    "end": "612440"
  },
  {
    "text": "the guy is dead now we saw that never Lo we didn't lose the data and we saw that",
    "start": "612440",
    "end": "619839"
  },
  {
    "text": "lock is there",
    "start": "619839",
    "end": "625680"
  },
  {
    "text": "okay so if I if I okay so still third third one is uh owning the log and and",
    "start": "625680",
    "end": "633680"
  },
  {
    "text": "this guy is still active so this guy is dead I'm going to just remove it from this scene so I'll I'll do so if I try",
    "start": "633680",
    "end": "641000"
  },
  {
    "text": "to do m. put on this entry I should not be able to do it because the third one still owns the lock okay so I'm I'm",
    "start": "641000",
    "end": "649320"
  },
  {
    "text": "originally from stanbul so I'll do I'll try to override yes I'm not able to because the",
    "start": "649320",
    "end": "656079"
  },
  {
    "text": "other guy has the lock now let's kill that guy and see if the the yeah lock is",
    "start": "656079",
    "end": "662279"
  },
  {
    "text": "released all right okay",
    "start": "662279",
    "end": "667600"
  },
  {
    "text": "uh all right this one is the third one yes all right so let's see uh first",
    "start": "667600",
    "end": "676200"
  },
  {
    "text": "let's see uh what happens the second guy should uh should",
    "start": "676200",
    "end": "681760"
  },
  {
    "text": "die and there's no lock which is good and then let's see if the if if it went",
    "start": "681760",
    "end": "688440"
  },
  {
    "text": "through let's see if if I get estambul right I should get estambul yes so that means you said",
    "start": "688440",
    "end": "696399"
  },
  {
    "text": "there are no locks on reads so so you would still get yeah yeah you can still get the but I'm just saying I'm just",
    "start": "696399",
    "end": "702920"
  },
  {
    "text": "double checking if the put went through right so because was waiting on the",
    "start": "702920",
    "end": "708320"
  },
  {
    "text": "dying member right right what have the so we have transaction so transaction is",
    "start": "708320",
    "end": "713600"
  },
  {
    "text": "in process and the Lo gets released after the node gets killed so we get",
    "start": "713600",
    "end": "719440"
  },
  {
    "text": "data for okay so are you so you want to you w to you want to start as transaction",
    "start": "719440",
    "end": "725760"
  },
  {
    "text": "first yeah and then do puts yeah and then before the commit you want who want",
    "start": "725760",
    "end": "734440"
  },
  {
    "text": "who who is going to die so just tell me like uh so the okay the the node that",
    "start": "734440",
    "end": "742240"
  },
  {
    "text": "has the data that's locked right so so so trans the caller transaction uh guy",
    "start": "742240",
    "end": "750480"
  },
  {
    "text": "is still alive right so the data is dying is in your case right the the the the lock owner is",
    "start": "750480",
    "end": "757440"
  },
  {
    "text": "dying no uh the uh entry owner is dying uh right right so so in this case uh",
    "start": "757440",
    "end": "766160"
  },
  {
    "text": "transaction will stay alive uh because uh the O owner of the entry died and the",
    "start": "766160",
    "end": "773160"
  },
  {
    "text": "ownership will be changing will be changing to somebody else and the from the from the transaction perspective",
    "start": "773160",
    "end": "779680"
  },
  {
    "text": "nothing happened right uh because uh the locks are going to be also transferred",
    "start": "779680",
    "end": "785920"
  },
  {
    "start": "783000",
    "end": "1033000"
  },
  {
    "text": "to the new guy we saw that so we killed the owner lock was carried over to the",
    "start": "785920",
    "end": "791040"
  },
  {
    "text": "other guy along with the entry and so from the from the transaction client",
    "start": "791040",
    "end": "797279"
  },
  {
    "text": "perspective nothing happened uh uh but if if the transaction",
    "start": "797279",
    "end": "803839"
  },
  {
    "text": "note dies like the note that started the transaction dies obviously all all the",
    "start": "803839",
    "end": "809360"
  },
  {
    "text": "locks associated with the transaction will be released and your transaction",
    "start": "809360",
    "end": "815600"
  },
  {
    "text": "didn't complete basically right but the guy already the guy who",
    "start": "815600",
    "end": "821639"
  },
  {
    "text": "owns runs the transaction code died like you cannot even roll back like just you",
    "start": "821639",
    "end": "827360"
  },
  {
    "text": "just died that means all we can do is release the locks associated with the",
    "start": "827360",
    "end": "832759"
  },
  {
    "text": "transaction right actually release all the locks that belongs to that guy not only the transaction but all the other",
    "start": "832759",
    "end": "839600"
  },
  {
    "text": "ones right yes can you use instead of maps I me which collections you could",
    "start": "839600",
    "end": "846160"
  },
  {
    "text": "use or oh so",
    "start": "846160",
    "end": "853000"
  },
  {
    "text": "um yeah so we we do Support also the cues uh I'll do I'll do play with that a",
    "start": "853000",
    "end": "859279"
  },
  {
    "text": "little bit I'll start this note again so Q's will work the same basically right",
    "start": "859279",
    "end": "865759"
  },
  {
    "text": "you're going to say hael cast get Q name of the Q will be the same for all all",
    "start": "865759",
    "end": "871240"
  },
  {
    "text": "jvms and then I'm talking particular about right",
    "start": "871240",
    "end": "877920"
  },
  {
    "text": "oneish that that would be topic and they will",
    "start": "877920",
    "end": "884959"
  },
  {
    "text": "be so so there two two things right like",
    "start": "884959",
    "end": "890360"
  },
  {
    "text": "cues and topics cu's are going to like you can only consume the item once from",
    "start": "890360",
    "end": "896000"
  },
  {
    "text": "the queue just like Java blocking queue exact same behavior and there's so if",
    "start": "896000",
    "end": "901480"
  },
  {
    "text": "that this is not what you want there's also okay so yeah yeah so so I'll start",
    "start": "901480",
    "end": "907759"
  },
  {
    "text": "the third one too it will be fun uh if when we have more jvms so q. take this",
    "start": "907759",
    "end": "913839"
  },
  {
    "text": "guy's trying to take oops s console sh",
    "start": "913839",
    "end": "919160"
  },
  {
    "text": "you can um so this guy's already trying to",
    "start": "919160",
    "end": "925000"
  },
  {
    "text": "take any take something so I'm going to try to take from here too so this guy is",
    "start": "925000",
    "end": "930480"
  },
  {
    "text": "trying to take two so these two are trying to take something and this third",
    "start": "930480",
    "end": "935680"
  },
  {
    "text": "jvm will offer something q. offer task so so if let's let's do this uh",
    "start": "935680",
    "end": "944759"
  },
  {
    "text": "okay only one of them will take and uh the other one will still be waiting right so take happens to be that this",
    "start": "944759",
    "end": "951639"
  },
  {
    "text": "guy is the winner so he took the uh task so that that's why I see that so this",
    "start": "951639",
    "end": "957040"
  },
  {
    "text": "guy's still blocked and still waiting so until somebody else offer something uh task",
    "start": "957040",
    "end": "966160"
  },
  {
    "text": "two and then this this guy will so just like the I mean blocking que that you",
    "start": "966319",
    "end": "972519"
  },
  {
    "text": "know but across multiple jvms the same transactional behaviors will will apply",
    "start": "972519",
    "end": "978360"
  },
  {
    "text": "so the cues are also uh backed up so it's so uh and on on the management",
    "start": "978360",
    "end": "985279"
  },
  {
    "text": "center you're you're going to see cues here so the this is the queue that we we worked on uh right now there's nothing",
    "start": "985279",
    "end": "991440"
  },
  {
    "text": "we we offered something and we consumed we offered something and we consumed that's why we saw that so those um",
    "start": "991440",
    "end": "999759"
  },
  {
    "text": "okay um yes a quick one in the very beginning we heard uh cases of network",
    "start": "999759",
    "end": "1005519"
  },
  {
    "text": "partitioning and question is you broadcast and everybody about",
    "start": "1005519",
    "end": "1010880"
  },
  {
    "text": "everyone so what happens okay so let's double check if the if Kyle is here",
    "start": "1010880",
    "end": "1016600"
  },
  {
    "text": "first if he's not here and we can uh okay looks like he's not here so",
    "start": "1016600",
    "end": "1024000"
  },
  {
    "text": "uh I can say whatever oh yeah oh it's recorded So",
    "start": "1024000",
    "end": "1029079"
  },
  {
    "text": "maybe I should be a little more careful um so multicast is only for disc",
    "start": "1029079",
    "end": "1034959"
  },
  {
    "start": "1033000",
    "end": "1318000"
  },
  {
    "text": "Discovery after multi Discovery and it it doesn't have to be multicast by the way we support tcpip and also for AWS if",
    "start": "1034959",
    "end": "1042880"
  },
  {
    "text": "you're running the app on AWS you don't have to tell us anything we we'll figure",
    "start": "1042880",
    "end": "1049160"
  },
  {
    "text": "out the nodes in the cluster um after discovery everything is tcpip uh it's unicast",
    "start": "1049160",
    "end": "1056799"
  },
  {
    "text": "basically um um so so let's say you have 10 note cluster and network partitioning",
    "start": "1056799",
    "end": "1064000"
  },
  {
    "text": "happen so something went wrong in the network um so so there there are there are simple",
    "start": "1064000",
    "end": "1071320"
  },
  {
    "text": "cases and super super crazy cases the simple case is this network is partition",
    "start": "1071320",
    "end": "1076919"
  },
  {
    "text": "right in the middle right so L five or like 55 or 28 right the clean separation so the",
    "start": "1076919",
    "end": "1084640"
  },
  {
    "text": "clean separation is is easier to handle but still when once you get into",
    "start": "1084640",
    "end": "1092120"
  },
  {
    "text": "um um Network partitioning is you can probably uh uh",
    "start": "1092120",
    "end": "1098679"
  },
  {
    "text": "keep running somehow but you should know that uh things are in memory so that",
    "start": "1098679",
    "end": "1103799"
  },
  {
    "text": "means there will be some funkiness at the end eventually you could you could",
    "start": "1103799",
    "end": "1109360"
  },
  {
    "text": "you you can you can have uh the same entry updated on both and uh so first",
    "start": "1109360",
    "end": "1116000"
  },
  {
    "text": "let me tell you what will happen from Hazel gas perspective so two separate clusters will happen right like let's",
    "start": "1116000",
    "end": "1122840"
  },
  {
    "text": "say four to six will happen five5 five5 will happen",
    "start": "1122840",
    "end": "1129200"
  },
  {
    "text": "right and then uh so they will think that they're they're they're the cluster and other guys are dead right um and",
    "start": "1129200",
    "end": "1137400"
  },
  {
    "text": "eventually the guy will fix the network and then um hazelcast will detect that",
    "start": "1137400",
    "end": "1142559"
  },
  {
    "text": "oh I was actually part of a bigger cluster I should join right so usually smaller will join to to the bigger one",
    "start": "1142559",
    "end": "1150240"
  },
  {
    "text": "if they are the exact same size like 55 the smaller uh hash of the IP will join",
    "start": "1150240",
    "end": "1155799"
  },
  {
    "text": "the bigger hash um so because when they're looking for each other they also send the hashes so so when so we we call",
    "start": "1155799",
    "end": "1164559"
  },
  {
    "text": "this merge of the split right so when the merge happens so there we have to to",
    "start": "1164559",
    "end": "1171280"
  },
  {
    "text": "manage the conflicts right so so because same entries will end up on on both and",
    "start": "1171280",
    "end": "1177919"
  },
  {
    "text": "and probably they will get updated in the meantime right so when you merge so",
    "start": "1177919",
    "end": "1183120"
  },
  {
    "text": "we have to fix that so there are built-in policies for that so like",
    "start": "1183120",
    "end": "1188280"
  },
  {
    "text": "override whatever you got or put only there's no entry for that uh so merge",
    "start": "1188280",
    "end": "1195200"
  },
  {
    "text": "policies already exist but if none of them fits for you so we're going to you can Implement a merge policy we we're",
    "start": "1195200",
    "end": "1202159"
  },
  {
    "text": "going to give you the entries you're going to look at the dates time stamp or or the value of the entry and you're",
    "start": "1202159",
    "end": "1208360"
  },
  {
    "text": "going to make a selection for us so that's why I said eventually will be Mass there's there's no perfect solution",
    "start": "1208360",
    "end": "1214679"
  },
  {
    "text": "to that other than you can say you know what when the split happens or when you when the number of nodes goes",
    "start": "1214679",
    "end": "1221400"
  },
  {
    "text": "below seven stop like freeze the whole thing should not so because you're",
    "start": "1221400",
    "end": "1227400"
  },
  {
    "text": "you're you're trying to be more consistent than available so the current behavior is behavior of ASAT is to",
    "start": "1227400",
    "end": "1234000"
  },
  {
    "text": "become available not so when uh from the cap uh perspective when when P happens",
    "start": "1234000",
    "end": "1242039"
  },
  {
    "text": "we choose to be a um but when there's no",
    "start": "1242039",
    "end": "1247400"
  },
  {
    "text": "p uh we uh we uh we we choose to be",
    "start": "1247400",
    "end": "1252840"
  },
  {
    "text": "strongly consistent when there's no network partitioning uh so which is beyond the cap",
    "start": "1252840",
    "end": "1259120"
  },
  {
    "text": "uh scope so why did I say that because um so all your reads and writes are",
    "start": "1259120",
    "end": "1265760"
  },
  {
    "text": "going to be going only to the owner of the entry uh so that means you cannot you cannot read stale data unless you",
    "start": "1265760",
    "end": "1273080"
  },
  {
    "text": "configure it so so so default replication and all that stuff are",
    "start": "1273080",
    "end": "1278279"
  },
  {
    "text": "synchronous and all reads have go goes to the owner owner even if you are the",
    "start": "1278279",
    "end": "1284600"
  },
  {
    "text": "uh the backup you still cannot read from yourself unless you configured like read",
    "start": "1284600",
    "end": "1290440"
  },
  {
    "text": "uh read backup so but just to follow up and if you connect try to get some data",
    "start": "1290440",
    "end": "1298080"
  },
  {
    "text": "the client knows exactly the owner of the data or he gets redirected to the",
    "start": "1298080",
    "end": "1303200"
  },
  {
    "text": "owner or the current owner of the data um so",
    "start": "1303200",
    "end": "1311000"
  },
  {
    "text": "um uh I should have moved on a little faster but uh um uh we",
    "start": "1311000",
    "end": "1316919"
  },
  {
    "text": "can I'll um yeah let let me go back to slides because there are some of the answers are already there um so",
    "start": "1316919",
    "end": "1324919"
  },
  {
    "start": "1318000",
    "end": "1508000"
  },
  {
    "text": "I'll all right I'll move on a little faster and I'll definitely answer that question okay so so it's open source 5",
    "start": "1324919",
    "end": "1333559"
  },
  {
    "text": "megabytes single jar no dependency Maven friendly just use Maven it's simple um",
    "start": "1333559",
    "end": "1340320"
  },
  {
    "text": "so so what is so how how is it how do we partition data so we basically there's a",
    "start": "1340320",
    "end": "1346559"
  },
  {
    "text": "there's a there's a fixed number of partitions in in the cluster ping is like a bucket uh or segment uh so it's",
    "start": "1346559",
    "end": "1353000"
  },
  {
    "text": "it's by default 271 you you can you can change it to th 5,000 that that doesn't",
    "start": "1353000",
    "end": "1358159"
  },
  {
    "text": "matter really but once it's set you cannot change while the while the cluster is up okay so it's a static fix",
    "start": "1358159",
    "end": "1365679"
  },
  {
    "text": "fixed uh number and then your keys are going to fold into one of these partitions so the way we calculate this",
    "start": "1365679",
    "end": "1373120"
  },
  {
    "text": "is like hash the key uh and then mod with the partition count will for for",
    "start": "1373120",
    "end": "1378640"
  },
  {
    "text": "given key it will always give us the same partition ID so we know for a G given key which partition the key is in",
    "start": "1378640",
    "end": "1385919"
  },
  {
    "text": "entry is in and then we're going to go to that uh go to the owner of the of the key and all this member in the cluster",
    "start": "1385919",
    "end": "1392720"
  },
  {
    "text": "will uh Define who owns what who who which member uh owns Which partition so",
    "start": "1392720",
    "end": "1399279"
  },
  {
    "text": "this called this internal partition table um so there's as as you saw",
    "start": "1399279",
    "end": "1405320"
  },
  {
    "text": "there's no like a master node or like a centralized location of all that stuff every everybody's uh peer and and",
    "start": "1405320",
    "end": "1412919"
  },
  {
    "text": "everyone uh is almost equal as I I said almost equal because the oldest member",
    "start": "1412919",
    "end": "1418880"
  },
  {
    "text": "the first guy in the cluster has a little more power because the oldest member knows more about the cluster and",
    "start": "1418880",
    "end": "1426279"
  },
  {
    "text": "and it and it will uh do the assignment of the partitions so it will say I give",
    "start": "1426279",
    "end": "1432279"
  },
  {
    "text": "you this par to you and this part that and all that stuff the the oldest member will do that eventually old member will",
    "start": "1432279",
    "end": "1439200"
  },
  {
    "text": "die that's the nature and then another guy will be the oldest member",
    "start": "1439200",
    "end": "1445120"
  },
  {
    "text": "so uh yes so it's not like the when it comes to replication it's not like my",
    "start": "1445120",
    "end": "1452279"
  },
  {
    "text": "entire data rep will be replicated onto one other guy it's not like that really",
    "start": "1452279",
    "end": "1457679"
  },
  {
    "text": "if you look at the picture uh so the these are the owned entries but if you",
    "start": "1457679",
    "end": "1462919"
  },
  {
    "text": "can see uh the blues or purples are on both two two notes right so the the idea",
    "start": "1462919",
    "end": "1469520"
  },
  {
    "text": "here is that when the node dies we are already partitioned like balanced we",
    "start": "1469520",
    "end": "1475080"
  },
  {
    "text": "don't have to rebalance things so so that's why it's not like oh this guy is",
    "start": "1475080",
    "end": "1480760"
  },
  {
    "text": "backed up by that guy it's not like that it's more like this partition is uh so",
    "start": "1480760",
    "end": "1486320"
  },
  {
    "text": "so so part backup for this partition is this guy so since since you will have",
    "start": "1486320",
    "end": "1492039"
  },
  {
    "text": "more partitions per member so uh when the node dies you're already balanced",
    "start": "1492039",
    "end": "1498600"
  },
  {
    "text": "there's no need to rebalance things we have we still have to take care of the backups of course because the guy died",
    "start": "1498600",
    "end": "1504960"
  },
  {
    "text": "and there's missing backup okay so so hazelcast can run as",
    "start": "1504960",
    "end": "1510679"
  },
  {
    "start": "1508000",
    "end": "1744000"
  },
  {
    "text": "an embedded um server so it's a jar right you put it into your VB",
    "start": "1510679",
    "end": "1516080"
  },
  {
    "text": "application War file and each War VB uh server can become a member of the",
    "start": "1516080",
    "end": "1523399"
  },
  {
    "text": "cluster so that's embedded hazelcast uh you can also run r as a client server",
    "start": "1523399",
    "end": "1530320"
  },
  {
    "text": "you can say oh no no no I don't want my web application to contain hazelcast node inside uh you can say I'll run",
    "start": "1530320",
    "end": "1537720"
  },
  {
    "text": "hazelcast nodes as a separate cluster and my my web application or net",
    "start": "1537720",
    "end": "1542760"
  },
  {
    "text": "application or C C++ application will be a client to it so like client server",
    "start": "1542760",
    "end": "1548679"
  },
  {
    "text": "architecture basically um so both have its goods and bads so it's not so so",
    "start": "1548679",
    "end": "1555080"
  },
  {
    "text": "your back to your question uh uh the client uh comes with two flavor one is like a",
    "start": "1555080",
    "end": "1561120"
  },
  {
    "text": "uh plain uh client that knows that talks to only one guy in the cluster and",
    "start": "1561120",
    "end": "1567840"
  },
  {
    "text": "everything will be propagated over from from that guy uh so it's like a um uh",
    "start": "1567840",
    "end": "1575240"
  },
  {
    "text": "the other one is smart client smart client knows exactly where the data is smart client will go to the owner of the",
    "start": "1575240",
    "end": "1581960"
  },
  {
    "text": "data right from here um you have both correct so so you're going smart is the",
    "start": "1581960",
    "end": "1588840"
  },
  {
    "text": "default one but if you have like 10,000 client you probably need I mean you",
    "start": "1588840",
    "end": "1594600"
  },
  {
    "text": "probably will choose the plane one because has only one connection right um",
    "start": "1594600",
    "end": "1601799"
  },
  {
    "text": "but if you have like hundreds go with the smart um the point is the data is",
    "start": "1601799",
    "end": "1608039"
  },
  {
    "text": "always sort of given or managed by one know right that's how you can guarantee",
    "start": "1608039",
    "end": "1613880"
  },
  {
    "text": "consistency correct so the client will say will do the exact same thing look at the key find the partition ID and then",
    "start": "1613880",
    "end": "1620520"
  },
  {
    "text": "look at the partition table and see oh who owns what that partition and then just go to that guy directly",
    "start": "1620520",
    "end": "1628399"
  },
  {
    "text": "um is dead yeah so it will happen even worse things will happen like uh so",
    "start": "1628399",
    "end": "1634039"
  },
  {
    "text": "imagine uh so so dead nodes are fine so it will it will say okay I lost the",
    "start": "1634039",
    "end": "1639559"
  },
  {
    "text": "connection so who's the new owner oh it looks like the first backup was that guy I'll go to that guy right or or the",
    "start": "1639559",
    "end": "1646559"
  },
  {
    "text": "patching table will be uh republished um by then and then and then you'll go to",
    "start": "1646559",
    "end": "1652480"
  },
  {
    "text": "the right guy but even worse um as I said the as you add more nodes data will",
    "start": "1652480",
    "end": "1658159"
  },
  {
    "text": "be moving so we call this migration of the partitions right so the question is",
    "start": "1658159",
    "end": "1663320"
  },
  {
    "text": "this so you do a call in uh when the when the par is migrating so what will",
    "start": "1663320",
    "end": "1669200"
  },
  {
    "text": "happen right so um same say uh same thing so the client thinks or it doesn't",
    "start": "1669200",
    "end": "1675240"
  },
  {
    "text": "matter who calls who makes the call the uh request comes in and you're going to say oh you I I think that you uh I know",
    "start": "1675240",
    "end": "1682559"
  },
  {
    "text": "that you think that I am the owner but I'm not so I'm not going to do the uh operation so you you so operation is",
    "start": "1682559",
    "end": "1690039"
  },
  {
    "text": "rejected basically and and then two things will happen either server will",
    "start": "1690039",
    "end": "1695440"
  },
  {
    "text": "get updated that you are the owner or the client will be updated uh by the",
    "start": "1695440",
    "end": "1701279"
  },
  {
    "text": "actual new owner right so either either one of them will happen and eventually you'll go to the right owner so you will",
    "start": "1701279",
    "end": "1708120"
  },
  {
    "text": "will never you can you it's not allowed to read from the like uh even if you have it on you right now but you can",
    "start": "1708120",
    "end": "1714679"
  },
  {
    "text": "you're going to say I migrating so that means during the migration the operations are blocked but only for that",
    "start": "1714679",
    "end": "1723880"
  },
  {
    "text": "partition the rest of the part like if you have thousand one out of thousand will be migrating so the rest will be",
    "start": "1723880",
    "end": "1731559"
  },
  {
    "text": "just flowing just fine so and migration will will be slower to to",
    "start": "1731559",
    "end": "1738679"
  },
  {
    "text": "uh to minimize the impact right um okay",
    "start": "1738679",
    "end": "1745720"
  },
  {
    "start": "1744000",
    "end": "1795000"
  },
  {
    "text": "So eventually API API will will be the same but the way you start the instance",
    "start": "1745720",
    "end": "1751440"
  },
  {
    "text": "will be different so you're starting the first server second server if you like to start two node in the same jvm you",
    "start": "1751440",
    "end": "1759039"
  },
  {
    "text": "can uh two two node on the same server uh so for example in our junit tests we",
    "start": "1759039",
    "end": "1766480"
  },
  {
    "text": "do start five nodes and then do do our assertions on those uh this is",
    "start": "1766480",
    "end": "1772120"
  },
  {
    "text": "how you start a client eventually the interface will be the same API will be the same for client and server you can",
    "start": "1772120",
    "end": "1779120"
  },
  {
    "text": "start as a server node and then you eventually say ah you know what I don't I don't like this uh embedded uh layout",
    "start": "1779120",
    "end": "1786240"
  },
  {
    "text": "topology I want to go back to client server and then you just change one line to get the instance rest will be the",
    "start": "1786240",
    "end": "1791880"
  },
  {
    "text": "same basically um so yes",
    "start": "1791880",
    "end": "1800039"
  },
  {
    "start": "1795000",
    "end": "1919000"
  },
  {
    "text": "oh um okay um we're not really counting the",
    "start": "1810640",
    "end": "1816440"
  },
  {
    "text": "entries we're counting the number of partitions we're saying oh how many partitions do I own and you own and",
    "start": "1816440",
    "end": "1822840"
  },
  {
    "text": "that's how uh so uh it is if you have enough data meaning like um 100,000 it",
    "start": "1822840",
    "end": "1830279"
  },
  {
    "text": "is very unlikely that your one will have bigger than the other or more than the other so it's will be uh very well",
    "start": "1830279",
    "end": "1837640"
  },
  {
    "text": "balanced uh so um from the data distribution perspective I think it will",
    "start": "1837640",
    "end": "1843440"
  },
  {
    "text": "be eventually equal um uh but um it is still we still don't",
    "start": "1843440",
    "end": "1851399"
  },
  {
    "text": "don't mean that like let's say you're you're writing an like a stock exchange stuff and and apple is is is having a",
    "start": "1851399",
    "end": "1858840"
  },
  {
    "text": "good day and all your requests for the for the for that um uh tick is going to",
    "start": "1858840",
    "end": "1865639"
  },
  {
    "text": "this exact same jvm all the time so when jvm is getting hot hotter that can",
    "start": "1865639",
    "end": "1872320"
  },
  {
    "text": "happen uh but I mean uh but other than that if you look at the amount of data",
    "start": "1872320",
    "end": "1878799"
  },
  {
    "text": "uh it's almost going to be the same uh so other than like adding new new nodes",
    "start": "1878799",
    "end": "1885080"
  },
  {
    "text": "um removing a node will be will will cause rebalance uh and",
    "start": "1885080",
    "end": "1891279"
  },
  {
    "text": "also um eviction will cause uh rebalance so if you have tons more you you're",
    "start": "1891279",
    "end": "1898720"
  },
  {
    "text": "using map as a cache eviction will kick in clean up some of the data rebalance",
    "start": "1898720",
    "end": "1903919"
  },
  {
    "text": "will happen too so everything has to be somehow sterilizable the entry doesn't",
    "start": "1903919",
    "end": "1909799"
  },
  {
    "text": "have to be sterilizable but but there has to be a way to make it uh sterilize",
    "start": "1909799",
    "end": "1915720"
  },
  {
    "text": "right so because eventually we're going to write it through the wire um and sterilization will be a biggest cost so",
    "start": "1915720",
    "end": "1922720"
  },
  {
    "text": "pay super high attention to sterilization uh so your network is probably very good and through is not a",
    "start": "1922720",
    "end": "1931880"
  },
  {
    "text": "problem usually a latency you you'll get uh um uh from from civilization so you",
    "start": "1931880",
    "end": "1938399"
  },
  {
    "text": "can you can learn about the cluster with the API listenting for the membership changes and all that good stuff you know",
    "start": "1938399",
    "end": "1944519"
  },
  {
    "start": "1943000",
    "end": "1982000"
  },
  {
    "text": "distributed map and put a faps in kind of stuff all supported uh I'll I'll I'll be quick so multimap",
    "start": "1944519",
    "end": "1950840"
  },
  {
    "text": "is easy stuff Q you know that stuff already uh so that's these are not really so fancy so yeah we you looked at",
    "start": "1950840",
    "end": "1958399"
  },
  {
    "text": "the map. loock stuff right so you know that stuff so topic is is that so very",
    "start": "1958399",
    "end": "1963880"
  },
  {
    "text": "similar to q but everybody every node listening will receive a message so it's just like jmss topic so that's the code",
    "start": "1963880",
    "end": "1971679"
  },
  {
    "text": "that not nothing else um uh okay I'll so events you can listen",
    "start": "1971679",
    "end": "1977320"
  },
  {
    "text": "for like who's is updating what on the map and cues that's fine so you say simple API uh transaction uh you can you",
    "start": "1977320",
    "end": "1985039"
  },
  {
    "start": "1982000",
    "end": "2005000"
  },
  {
    "text": "can we support two phase and single phase commits you say uh these are my transaction options uh I'll you'll get a",
    "start": "1985039",
    "end": "1992760"
  },
  {
    "text": "transa transactional queue or map and then you do your operation and you uh",
    "start": "1992760",
    "end": "1999080"
  },
  {
    "text": "commit uh commit here or roll back um Affinity data Affinity I I'll be",
    "start": "1999080",
    "end": "2008039"
  },
  {
    "text": "and I'll finish and then if you have time we I'll take more questions um so as long as the keys are the same data",
    "start": "2008039",
    "end": "2015039"
  },
  {
    "text": "will stay on the same node we don't care about the map names we care about the",
    "start": "2015039",
    "end": "2020519"
  },
  {
    "start": "2020000",
    "end": "2029000"
  },
  {
    "text": "keys um if you if you want to have the orders and the maps uh or orders and the",
    "start": "2020519",
    "end": "2026639"
  },
  {
    "text": "customers on the same node you have to come up with a with a key that's",
    "start": "2026639",
    "end": "2033440"
  },
  {
    "start": "2029000",
    "end": "2058000"
  },
  {
    "text": "partition aware that can tell us where this guy I should live on right so we",
    "start": "2033440",
    "end": "2040279"
  },
  {
    "text": "know that it is uh the the partition key is is pointing to the customer ID that",
    "start": "2040279",
    "end": "2045519"
  },
  {
    "text": "means don't use the don't use other stuff use this as the key to find the uh",
    "start": "2045519",
    "end": "2053240"
  },
  {
    "text": "um um owner all right so executive",
    "start": "2053240",
    "end": "2058599"
  },
  {
    "start": "2058000",
    "end": "2088000"
  },
  {
    "text": "service regular Java executive service but they're they're going to run on on",
    "start": "2058599",
    "end": "2063720"
  },
  {
    "text": "the nodes so you can say hey hazelcast run run this task on this member or run",
    "start": "2063720",
    "end": "2070480"
  },
  {
    "text": "this task on that particular key meaning go go to the owner of the key why would",
    "start": "2070480",
    "end": "2075560"
  },
  {
    "text": "you want to do that because your data is there right so that that's uh how you do it uh or you can say run on each member",
    "start": "2075560",
    "end": "2084079"
  },
  {
    "text": "and give me a collection as as the uh collection of results so we we we'll",
    "start": "2084079",
    "end": "2089638"
  },
  {
    "start": "2088000",
    "end": "2190000"
  },
  {
    "text": "work on a work on a uh scenario uh we're going to update an uh remove an order",
    "start": "2089639",
    "end": "2096560"
  },
  {
    "text": "from a customer so have a customer build customer object and there are orders inside it we're going to remove one of",
    "start": "2096560",
    "end": "2101839"
  },
  {
    "text": "the orders so that's the business logic so you get the customers's map you lock",
    "start": "2101839",
    "end": "2107320"
  },
  {
    "text": "the entry so that no one can touch it while you do you're you're doing it and then you're going to you're going to",
    "start": "2107320",
    "end": "2112480"
  },
  {
    "text": "remove it and then now the object changed you have to put it back into the",
    "start": "2112480",
    "end": "2117920"
  },
  {
    "text": "cluster and you unlock it the lock and unlock is not really required let's say this is required for our business case",
    "start": "2117920",
    "end": "2124359"
  },
  {
    "text": "uh like the requirement is that while you're updating things you don't want",
    "start": "2124359",
    "end": "2129920"
  },
  {
    "text": "anybody else to touch that's the requirement let's say uh normally you don't have to everything is is is is",
    "start": "2129920",
    "end": "2136680"
  },
  {
    "text": "atomic already but you're changing stuff let's say the buers requires this so",
    "start": "2136680",
    "end": "2142560"
  },
  {
    "text": "this looks good and simple but this is this is problematic can you tell me what",
    "start": "2142560",
    "end": "2147720"
  },
  {
    "text": "the problem is here what is it um it's it's yeah like uh it's it's",
    "start": "2147720",
    "end": "2156560"
  },
  {
    "text": "actually more more yes pessimistic lock is one right so you have to lock get the locks somehow but but also see there are",
    "start": "2156560",
    "end": "2164440"
  },
  {
    "text": "four distributor operations one two three four you don't know where the key",
    "start": "2164440",
    "end": "2170040"
  },
  {
    "text": "is right so you might be doing four distributed calls just to get this done can you do it better tell me your",
    "start": "2170040",
    "end": "2178200"
  },
  {
    "text": "way can we do it better without four dist calls can we do it in one shot you",
    "start": "2178200",
    "end": "2184560"
  },
  {
    "text": "do get get all but you're going to do an update So eventually yeah so you you can do uh a",
    "start": "2184560",
    "end": "2192680"
  },
  {
    "start": "2190000",
    "end": "2228000"
  },
  {
    "text": "deletion task order deletion task it's partition where so we know where to go",
    "start": "2192680",
    "end": "2197839"
  },
  {
    "text": "so the where to go is actually customer ID so hisas will take this object and",
    "start": "2197839",
    "end": "2203359"
  },
  {
    "text": "send it to the own owner of the customer ID and run this call over there so now",
    "start": "2203359",
    "end": "2210960"
  },
  {
    "text": "the the data is there so but still not perfect because we still cannot get rid",
    "start": "2210960",
    "end": "2216000"
  },
  {
    "text": "of the locks because it's another thread I still have to get the somehow get the locks uh to be safe so can we do it",
    "start": "2216000",
    "end": "2224319"
  },
  {
    "text": "better yes we can um that's that's called entro processor so entro",
    "start": "2224319",
    "end": "2231079"
  },
  {
    "start": "2228000",
    "end": "2316000"
  },
  {
    "text": "processor is also part of the jcash SPC which is huge uh for Java caching",
    "start": "2231079",
    "end": "2236960"
  },
  {
    "text": "standard uh so so what you're doing is is this so we created delete order which",
    "start": "2236960",
    "end": "2242880"
  },
  {
    "text": "is an entry processor uh and you in the process method you're you're saying we're going",
    "start": "2242880",
    "end": "2248200"
  },
  {
    "text": "to give you the customer object and then you do all your stuff there and then return it's the code is simpler easier",
    "start": "2248200",
    "end": "2256480"
  },
  {
    "text": "uh and this gives you an implicit lock on the entry so you don't have to have a",
    "start": "2256480",
    "end": "2262000"
  },
  {
    "text": "explicit lock on the entry so entry processor are processors are guaranteed",
    "start": "2262000",
    "end": "2267200"
  },
  {
    "text": "to run on the Node that owns the entry and it gives you the implicit lock you",
    "start": "2267200",
    "end": "2273880"
  },
  {
    "text": "can be sure that no one else is touching your entry while while you're touching it you you're it's guaranteed um um so",
    "start": "2273880",
    "end": "2283440"
  },
  {
    "text": "that's that's the best way of updating an entry so executive service is nice",
    "start": "2283440",
    "end": "2289720"
  },
  {
    "text": "but not quite osor is the way to go so so that means it's we care about",
    "start": "2289720",
    "end": "2295839"
  },
  {
    "text": "charting the data so that we can scale but also we care about how we update the",
    "start": "2295839",
    "end": "2301560"
  },
  {
    "text": "entry and entry processor is the best way to do that um of course as as as as",
    "start": "2301560",
    "end": "2308880"
  },
  {
    "text": "as you can uh imagine entry processor is per entry operation right so and this is",
    "start": "2308880",
    "end": "2316920"
  },
  {
    "start": "2316000",
    "end": "2332000"
  },
  {
    "text": "how you call it you say hey haast give me the customers map here's my delete order process",
    "start": "2316920",
    "end": "2323640"
  },
  {
    "text": "enterpriser execute on key this is the key this is the enterpriser just go and",
    "start": "2323640",
    "end": "2329760"
  },
  {
    "text": "run um that's it so the you can also query Hazel uh the the customers let's",
    "start": "2329760",
    "end": "2336280"
  },
  {
    "start": "2332000",
    "end": "2342000"
  },
  {
    "text": "say you have these fields you want to get the active and age less than uh",
    "start": "2336280",
    "end": "2341720"
  },
  {
    "text": "whatever 30 uh 30 this is how you do it so you can add indexes just like you",
    "start": "2341720",
    "end": "2347119"
  },
  {
    "text": "added in in in uh databases so so that your queries can be faster but then you",
    "start": "2347119",
    "end": "2353440"
  },
  {
    "text": "can say map. values and pass like an SQL work Clause hazelcast will go in",
    "start": "2353440",
    "end": "2360960"
  },
  {
    "text": "parallel go to nodes uh use index if there's any and get the get the get the",
    "start": "2360960",
    "end": "2367480"
  },
  {
    "text": "things that you really want and then uh combine the results back and give it to",
    "start": "2367480",
    "end": "2372520"
  },
  {
    "text": "you um persistence uh it's his is all in memory but in in the case of distributed",
    "start": "2372520",
    "end": "2379680"
  },
  {
    "start": "2379000",
    "end": "2391000"
  },
  {
    "text": "caching see these are your VB applications and these these are your databases you might you might have",
    "start": "2379680",
    "end": "2385359"
  },
  {
    "text": "multiple databases right so relational Oracle MySQL or",
    "start": "2385359",
    "end": "2391319"
  },
  {
    "start": "2391000",
    "end": "2416000"
  },
  {
    "text": "nosql um and hazus can sit right in between so that way you're touch we",
    "start": "2391319",
    "end": "2397560"
  },
  {
    "text": "talking to hazelcast and hazelcast will be talking to thegu behind the scenes um",
    "start": "2397560",
    "end": "2404119"
  },
  {
    "text": "so basically we're caching all your data layers and of course you're going to say",
    "start": "2404119",
    "end": "2410400"
  },
  {
    "text": "I know how to talk to hazelcast but how is how how is hazelcast talking to my databases uh this is this is how it is",
    "start": "2410400",
    "end": "2418760"
  },
  {
    "start": "2416000",
    "end": "2467000"
  },
  {
    "text": "so if you don't know uh uh how you access your database but we can if you",
    "start": "2418760",
    "end": "2425040"
  },
  {
    "text": "write the code if you implement map story map loader we can we will call you to talk to the database so uh when the",
    "start": "2425040",
    "end": "2433079"
  },
  {
    "text": "time is right let's say you did map. put uh as part of the put will call your",
    "start": "2433079",
    "end": "2439800"
  },
  {
    "text": "story implementation we'll give you the keym value and we'll ask you to write it to wherever you want to write to it",
    "start": "2439800",
    "end": "2446160"
  },
  {
    "text": "could be you it is possible that you're writing to a relational database or no SQL database we don't care uh of course",
    "start": "2446160",
    "end": "2452599"
  },
  {
    "text": "we have plugins for uh mongod DB and others uh but still you have the freedom",
    "start": "2452599",
    "end": "2459359"
  },
  {
    "text": "to implement the uh the business logic here and go to any store you like",
    "start": "2459359",
    "end": "2466680"
  },
  {
    "text": "um so yes is way to load dat that's also",
    "start": "2466680",
    "end": "2473440"
  },
  {
    "start": "2467000",
    "end": "2524000"
  },
  {
    "text": "that's also one of the yeah so so when when when you first time touch the map",
    "start": "2473440",
    "end": "2479680"
  },
  {
    "text": "we're going to call this load all keys so you might be loading all of the keys",
    "start": "2479680",
    "end": "2485880"
  },
  {
    "text": "or some of the keys that you care the most right like like the hottest Keys uh",
    "start": "2485880",
    "end": "2491920"
  },
  {
    "text": "so and in parallel let's say you loaded like 10 million of the 100 million okay",
    "start": "2491920",
    "end": "2498040"
  },
  {
    "text": "so in this 10 million uh keys are going to be loaded in parallel by the nodes in",
    "start": "2498040",
    "end": "2503520"
  },
  {
    "text": "the cluster so let's say you have 10 nodes each one will load a million of it",
    "start": "2503520",
    "end": "2508800"
  },
  {
    "text": "so in parallel you'll be loading and and warming up the cach um and then you're going to when",
    "start": "2508800",
    "end": "2515359"
  },
  {
    "text": "you do a put we're going to call call this when when we don't have the entry we're going to call this to load it back",
    "start": "2515359",
    "end": "2522119"
  },
  {
    "text": "from the from the data store actual data store so persistence can be right behind",
    "start": "2522119",
    "end": "2527720"
  },
  {
    "start": "2524000",
    "end": "2580000"
  },
  {
    "text": "or right through right behind means right through means uh it's part of the",
    "start": "2527720",
    "end": "2532839"
  },
  {
    "text": "put put returns after the store right behind means it will return before",
    "start": "2532839",
    "end": "2538440"
  },
  {
    "text": "touching that code but every 10 X or 10 or X seconds you configure that we're",
    "start": "2538440",
    "end": "2545680"
  },
  {
    "text": "going to we're going to run uh uh a batch operation to flush all the",
    "start": "2545680",
    "end": "2551240"
  },
  {
    "text": "D records to the database this scales crazy well uh even if the database is",
    "start": "2551240",
    "end": "2556440"
  },
  {
    "text": "not reachable it's fine we're going to we're going to mark them as dirty uh",
    "start": "2556440",
    "end": "2561800"
  },
  {
    "text": "until the connection is",
    "start": "2561800",
    "end": "2565480"
  },
  {
    "text": "established um okay I'll uh let me finish and then",
    "start": "2572920",
    "end": "2578559"
  },
  {
    "text": "uh let's uh it's actually almost we're almost there we didn't talk about configuration much because hopefully you",
    "start": "2578559",
    "end": "2585440"
  },
  {
    "text": "will never need that I I hate configuration uh so uh ha will come with",
    "start": "2585440",
    "end": "2590720"
  },
  {
    "text": "the the most meaningful U uh and uh defaults but in case you need",
    "start": "2590720",
    "end": "2598559"
  },
  {
    "text": "to uh so this is the network this is how we Define who the members are in the",
    "start": "2598559",
    "end": "2603920"
  },
  {
    "text": "cluster so that we can find other guys and this is the inter this is the this is how you define which port to",
    "start": "2603920",
    "end": "2610839"
  },
  {
    "text": "bind which IP to bind because your machine probably will have more than one IP and which IP do you want hazelcast to",
    "start": "2610839",
    "end": "2618240"
  },
  {
    "text": "use this is where you define that so that way you you like it's it's very",
    "start": "2618240",
    "end": "2625400"
  },
  {
    "text": "possible in a cluster environment one note starts at 192 the other note starts at 10 and they don't talk to each other",
    "start": "2625400",
    "end": "2631640"
  },
  {
    "text": "and then you try to like figure out like why why it's wrong uh basically you say hey when you start just look for the 192",
    "start": "2631640",
    "end": "2639240"
  },
  {
    "text": "address and bind to that because we know that they're they're they're talking to each other fine so per map you define",
    "start": "2639240",
    "end": "2646480"
  },
  {
    "text": "number of backup backups or asynchronous backup you can have one synchronous one asynchronous backup to time TTL for the",
    "start": "2646480",
    "end": "2654040"
  },
  {
    "text": "entries and all that stuff uh you define the map sword that we talked about um",
    "start": "2654040",
    "end": "2660400"
  },
  {
    "start": "2659000",
    "end": "2707000"
  },
  {
    "text": "per map you don't you don't have to Define you can say everything starting with this will use this configuration so",
    "start": "2660400",
    "end": "2667760"
  },
  {
    "text": "we we try to use wild card as much as we we can to simplify that the uh",
    "start": "2667760",
    "end": "2673559"
  },
  {
    "text": "configuration um yes um uh it's a single Java jar file that",
    "start": "2673559",
    "end": "2680839"
  },
  {
    "text": "can run as an embedded uh server or a remote uh server and and allows you to",
    "start": "2680839",
    "end": "2687520"
  },
  {
    "text": "do distributed uh caching or uh queuing uh",
    "start": "2687520",
    "end": "2694440"
  },
  {
    "text": "messaging um so it gives you all this data structures and uh",
    "start": "2694440",
    "end": "2700440"
  },
  {
    "text": "Services um yes um thanks so much",
    "start": "2700440",
    "end": "2706359"
  }
]