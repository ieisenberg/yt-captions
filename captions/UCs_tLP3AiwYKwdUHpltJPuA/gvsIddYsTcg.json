[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "Hello, welcome to the GOTO office. \nMy name is Christian Clausen. I'm the  ",
    "start": "13980",
    "end": "17699"
  },
  {
    "text": "author of the book \"Five Lines of Code\" about \nrefactoring. And I'm here with Adam Tornhill. ",
    "start": "17700",
    "end": "21960"
  },
  {
    "text": "Hi, everyone. I'm Adam Tornhill. \nMy background, I have a degree in  ",
    "start": "21960",
    "end": "28679"
  },
  {
    "text": "engineering and psychology. And what I \ndo these days is pretty much trying to  ",
    "start": "28680",
    "end": "32580"
  },
  {
    "text": "combine these two perspectives. I've written a \ncouple of books about it. \"Your Code As A Crime  ",
    "start": "32580",
    "end": "36780"
  },
  {
    "text": "Scene\" and \"Software Design X-Rays.\"\nYes. They are great books also. I wanted  ",
    "start": "36780",
    "end": "42180"
  },
  {
    "start": "40000",
    "end": "188000"
  },
  {
    "text": "to talk to you about this social side of tech I \nheard you talk about. Also because your take on  ",
    "start": "42180",
    "end": "46980"
  },
  {
    "text": "refactoring and code quality and stuff is entirely \nnew to me, at least I've never seen anyone do  ",
    "start": "46980",
    "end": "51180"
  },
  {
    "text": "forensic analysis, which is interesting. So maybe \nyou could start by saying something about that.",
    "start": "51180",
    "end": "56940"
  },
  {
    "text": "Sure. I think it's a perspective that we need \nto talk much more about. Because one thing  ",
    "start": "57600",
    "end": "64199"
  },
  {
    "text": "quickly learned is that there is so much more \nto code complexity than just the code itself.  ",
    "start": "64860",
    "end": "69420"
  },
  {
    "text": "We have this whole social dimension, like the \ncurrent team, are they familiar with the code?  ",
    "start": "69420",
    "end": "75479"
  },
  {
    "text": "And to me, one of the great tragedies of software \ndesign is that organization that builds the code,  ",
    "start": "76320",
    "end": "82260"
  },
  {
    "text": "they're actually invisible in the code itself, \nright? We cannot pick up a piece of code and say,  ",
    "start": "82260",
    "end": "86160"
  },
  {
    "text": "is this a major coordination bottleneck \nfor five feature teams? Or is it a  ",
    "start": "86160",
    "end": "90600"
  },
  {
    "text": "module that's written by just one developer? \nSo we have a massive key personnel dependency.  ",
    "start": "90600",
    "end": "94439"
  },
  {
    "text": "That dimension is simply missing.\nDefinitely. And there is so much about the  ",
    "start": "94980",
    "end": "100920"
  },
  {
    "text": "social part of the code. It's humans working with \nthe code, and it's them who need to refactor it,  ",
    "start": "100920",
    "end": "105600"
  },
  {
    "text": "and there are managers, and there are all of these \ndifferent things. Actually, about the manager,  ",
    "start": "105600",
    "end": "110400"
  },
  {
    "text": "it was a very interesting thing when I was seeing \nyour talk earlier, that you have these yellow,  ",
    "start": "110400",
    "end": "115260"
  },
  {
    "text": "red, and green categories for code. And then you \ncan use this to show to managers to say, \"Look,  ",
    "start": "115260",
    "end": "119580"
  },
  {
    "text": "we have all these red parts, and that's bad. We \nwant all these green parts.\" What I would expect  ",
    "start": "119580",
    "end": "123600"
  },
  {
    "text": "to happen in that case from the managers \nI've met in my career is a race to yellow,  ",
    "start": "123600",
    "end": "127619"
  },
  {
    "text": "right? They don't want to be the worst. They don't \nwant to be green, either. That seems wasteful,  ",
    "start": "127620",
    "end": "131340"
  },
  {
    "text": "right? Or at least that's my experience. \nOh, yes. That's interesting.  ",
    "start": "131340",
    "end": "135599"
  },
  {
    "text": "You could well be right. I think the challenge \nis that if you have a red code and want to move  ",
    "start": "136860",
    "end": "141600"
  },
  {
    "text": "to green, it's a long, long journey, right? It's \na lot of effort that goes into that. I've worked  ",
    "start": "141600",
    "end": "147960"
  },
  {
    "text": "with a customer just a couple of months ago, they \nactually spent a year trying to prove the health  ",
    "start": "147960",
    "end": "155760"
  },
  {
    "text": "of their code. I think they managed to get it \nup by 25%. So I don't have the absolute numbers,  ",
    "start": "155760",
    "end": "161159"
  },
  {
    "text": "but what was so interesting was that they also \nmeasure the amount of unplanned work that they  ",
    "start": "161160",
    "end": "165540"
  },
  {
    "text": "had. They use that as kind of a goal, can \nwe reduce the amount of unplanned work?  ",
    "start": "165540",
    "end": "169739"
  },
  {
    "text": "They measure of like an 80% reduction in \nunplanned work by doing all these refactorings.  ",
    "start": "170880",
    "end": "175560"
  },
  {
    "text": "So I find that really, really fascinating \nthat code quality is something that impacts  ",
    "start": "176280",
    "end": "181080"
  },
  {
    "text": "every business. And yet, it's something that we \nunderestimate the importance of it, in my opinion.",
    "start": "181080",
    "end": "187740"
  },
  {
    "text": "Yes. So there was both that they underestimate \nwhat the value is and it's been really hard for,  ",
    "start": "187740",
    "end": "192720"
  },
  {
    "start": "188000",
    "end": "482000"
  },
  {
    "text": "yeah, so I go and coach teams to do it. It’s \nreally hard to argue to the managers and to  ",
    "start": "192720",
    "end": "197400"
  },
  {
    "text": "the management teams in general that we need to \ninvest more in these things. I had the question,  ",
    "start": "197400",
    "end": "203159"
  },
  {
    "text": "how do you actually deal with people? How \ndo you tell them that you need to implement  ",
    "start": "203160",
    "end": "208620"
  },
  {
    "text": "more time for refactoring? And I just \nsaid, \"Well, we reserved 20% of the time,  ",
    "start": "208620",
    "end": "212819"
  },
  {
    "text": "every Monday in particular.\" That's \nmy experience based on the DevOps  ",
    "start": "212820",
    "end": "217200"
  },
  {
    "text": "handbook where it says 20% should be used \non just status quo, not even improvement,  ",
    "start": "217200",
    "end": "222540"
  },
  {
    "text": "that's just what you need to stay still. \nDo you have any experience with that? ",
    "start": "222540",
    "end": "227040"
  },
  {
    "text": "I do. I do. And I think I've seen it work. \nI've seen a lot of organizations tempted to  ",
    "start": "228360",
    "end": "236640"
  },
  {
    "text": "do things like having a technical debt budget. \nAnd I think it very much depends on what you do  ",
    "start": "236640",
    "end": "243180"
  },
  {
    "text": "with that time. During your talk, you pretty \nmuch use that Monday for allowing people an  ",
    "start": "243180",
    "end": "252239"
  },
  {
    "text": "opportunity to develop their skills, \nand to do self-improvement, and that's  ",
    "start": "252240",
    "end": "255720"
  },
  {
    "text": "something that benefits everyone, including the \ncodebase. But I've also seen organizations where  ",
    "start": "255720",
    "end": "261000"
  },
  {
    "text": "staff like, yeah, paying down technical debt was \nmandated from above, without necessarily giving  ",
    "start": "262020",
    "end": "267000"
  },
  {
    "text": "the skills and the toolset that the developers \nneed. What tends to happen then can be disastrous.  ",
    "start": "267000",
    "end": "273300"
  },
  {
    "text": "So I've seen organizations that run some static \nanalysis tool, then end up with a list of  ",
    "start": "273300",
    "end": "279060"
  },
  {
    "text": "8.000 major issues. The first thing that happens \nis you put a quantitative goal on it and say that,  ",
    "start": "279960",
    "end": "284400"
  },
  {
    "text": "okay, over three months, we got to reduce \nthis from 8,000 issues to 5,000. Have you  ",
    "start": "284400",
    "end": "290220"
  },
  {
    "text": "ever seen something like that happen too?\nI've seen it with warnings. When you turn  ",
    "start": "290220",
    "end": "294180"
  },
  {
    "text": "up warnings the first time people \nare like, \"Should we look at those?\" ",
    "start": "294180",
    "end": "296460"
  },
  {
    "text": "Exactly. But that's my experience too. The \nfirst thing that tends to happen is that I mean,  ",
    "start": "297720",
    "end": "303000"
  },
  {
    "text": "improvement possibilities, they just get \nthrown out, no one even looks at them,  ",
    "start": "303000",
    "end": "306480"
  },
  {
    "text": "right? Then you have warnings, we don't have \ntime for that, so you focus on the major issues,  ",
    "start": "306480",
    "end": "310020"
  },
  {
    "text": "the really critical stuff, and even then you might \nhave falseness of it. I think without taking this  ",
    "start": "310020",
    "end": "315660"
  },
  {
    "text": "proactive approach that we're doomed. I think \nthere was no way we were going to solve that. ",
    "start": "315660",
    "end": "320820"
  },
  {
    "text": "When we're talking about the social side of the \nrefactoring and stuff, also having just a number  ",
    "start": "322260",
    "end": "327180"
  },
  {
    "text": "show up, that's 5,000 problems or something, \nright? Or 99 plus, or whatever. Whenever it  ",
    "start": "327180",
    "end": "331740"
  },
  {
    "text": "gets too big, humans are like, \"Oh, I'm not going \nto deal with this, it's too many. Why even start,  ",
    "start": "331740",
    "end": "337139"
  },
  {
    "text": "because it's not going to make an impact?\" And \nthat sort of sets us further back, right? Because  ",
    "start": "337140",
    "end": "341220"
  },
  {
    "text": "then you just turn off the warnings, or you \nannotate your code to just not do those types  ",
    "start": "341220",
    "end": "345960"
  },
  {
    "text": "of warnings, or we don't use that or throw out \ntools. I've seen people just stop using tools  ",
    "start": "345960",
    "end": "350520"
  },
  {
    "text": "because they gave too many warnings and errors.\nExactly. It's where we're common. It's very much,  ",
    "start": "350520",
    "end": "355319"
  },
  {
    "text": "I mean, living with that amount of issues \nit's very much like a broken window, right?  ",
    "start": "355320",
    "end": "360660"
  },
  {
    "text": "So I always kind of compare it to, going from \n5,000 issues to 3,000 or something like that,  ",
    "start": "361260",
    "end": "367560"
  },
  {
    "text": "it's very much like choosing to jump from \nthe third instead of the fifth floor, right? ",
    "start": "367560",
    "end": "370980"
  },
  {
    "text": "Yes.\nMost likely,  ",
    "start": "370980",
    "end": "372180"
  },
  {
    "text": "none of them is a good idea. The reason I say \nthis is because taking a purely quantitative  ",
    "start": "372180",
    "end": "379440"
  },
  {
    "text": "view like the most important thing, and that's \nthe business impact, right? Maybe you don't have  ",
    "start": "379440",
    "end": "386160"
  },
  {
    "text": "to fix all 5,000 issues. Perhaps we just have to \nfix five of them. But there's no way of knowing,  ",
    "start": "386160",
    "end": "392220"
  },
  {
    "text": "right? Because if you just look at the code, you \nget, in my opinion, a very limited perspective,  ",
    "start": "392220",
    "end": "397200"
  },
  {
    "text": "because the code itself cannot tell you anything \nabout the interest rate or the business impact. ",
    "start": "397200",
    "end": "402300"
  },
  {
    "text": "Yes. For me, I've had situations where one of the \nwarnings actually turned out to be hiding a much  ",
    "start": "402300",
    "end": "407460"
  },
  {
    "text": "worse issue, but because we weren't looking into \nwarnings at the time, we would just have that go  ",
    "start": "407460",
    "end": "412800"
  },
  {
    "text": "unnoticed and we had this huge bug. And when \nwe started looking at the warnings, we found  ",
    "start": "412800",
    "end": "417000"
  },
  {
    "text": "errors afterward which were just amazing. \nI've started treating all warnings as if  ",
    "start": "417000",
    "end": "422460"
  },
  {
    "text": "it's the worst error I can have because they \nmight be hiding something really important.  ",
    "start": "422460",
    "end": "426000"
  },
  {
    "text": "I take warning signs really, really \nseriously. I'm really scared of that. ",
    "start": "426000",
    "end": "430980"
  },
  {
    "text": "Yeah. I mean, it's virtually free to treat \na warning as serious if you do it early on,  ",
    "start": "430980",
    "end": "437220"
  },
  {
    "text": "right? And for all the new code you write, \ndefinitely. And then gradually what do you  ",
    "start": "437220",
    "end": "441840"
  },
  {
    "text": "do with existing code, you gradually \ntry to enable a warning style or?",
    "start": "441840",
    "end": "444960"
  },
  {
    "text": "Yes. I would say, well, I actually make an error \nbudget, and then I have the trend go down. As you  ",
    "start": "444960",
    "end": "450720"
  },
  {
    "text": "said it's more important that we're actually doing \nsomething to get it down and stop the bleeding so  ",
    "start": "450720",
    "end": "455160"
  },
  {
    "text": "that it doesn't grow at least. Then over time, \nyou shave off a little. And also, I'm very big  ",
    "start": "455160",
    "end": "460320"
  },
  {
    "text": "on the human side, so I make sure to celebrate \nwith a lot of cake and drinks or whatever your  ",
    "start": "461100",
    "end": "466740"
  },
  {
    "text": "fancy is. Celebrate whenever something has gone \nright even slightly, and also celebrate when  ",
    "start": "466740",
    "end": "471599"
  },
  {
    "text": "something's gone wrong, right? So, long as you \nlearned something, I think it's really important. ",
    "start": "471600",
    "end": "475980"
  },
  {
    "text": "Yes, definitely I agree with that.\nYou actually have a code base  ",
    "start": "476820",
    "end": "480180"
  },
  {
    "text": "because you have a product company.\nI do. I do indeed have a code base.",
    "start": "480180",
    "end": "482100"
  },
  {
    "start": "482000",
    "end": "650000"
  },
  {
    "text": "How do you do product refactoring in CodeScene?\nSo, CodeScene is fascinating because we have been  ",
    "start": "482100",
    "end": "489300"
  },
  {
    "text": "using CodeScene on CodeScene from day one. It's \nmultiple reasons. First of all, I'm a big fan  ",
    "start": "489300",
    "end": "495780"
  },
  {
    "text": "of eating our own dog food. I think that's very \nimportant. And being software developers ourselves  ",
    "start": "495780",
    "end": "501840"
  },
  {
    "text": "and making tools for other software people, we \nare pretty much in the target audience. So it  ",
    "start": "501840",
    "end": "507060"
  },
  {
    "text": "kind of helps. I think this is where we're much \nunderestimated. I used to be a consultant back  ",
    "start": "507060",
    "end": "511680"
  },
  {
    "text": "in the day. And one thing I always found missing \nwas that my onboarding when I got to a new client  ",
    "start": "511680",
    "end": "516839"
  },
  {
    "text": "was very much focused on the tech and very little \non the actual problem domain. And my experience  ",
    "start": "516840",
    "end": "522360"
  },
  {
    "text": "is that the more we understand the problem \ndomain, the better we can optimize what we do. ",
    "start": "522360",
    "end": "526260"
  },
  {
    "text": "So I think that's really important. That's why \neveryone in CodeScene uses CodeScene. The second  ",
    "start": "527700",
    "end": "532500"
  },
  {
    "text": "reason is that we're all a pretty \nsmall company. So, our competitors,  ",
    "start": "532500",
    "end": "536520"
  },
  {
    "text": "might have like 10 times the engineering \ndepartment that we do, so it's very clear  ",
    "start": "536520",
    "end": "540720"
  },
  {
    "text": "that we cannot compete by doing the same thing \nas they do, right? So, for us as a small company,  ",
    "start": "540720",
    "end": "545519"
  },
  {
    "text": "we simply cannot afford much technical depth. So \nwe need to keep a really, really healthy codebase. ",
    "start": "545520",
    "end": "551160"
  },
  {
    "text": "So, it's all green, no red?\nNo red. A few yellow dots. But I think as  ",
    "start": "551160",
    "end": "558959"
  },
  {
    "text": "long as we're aware of where they are, and as long \nas they're stable and well-understood, then we can  ",
    "start": "558960",
    "end": "564000"
  },
  {
    "text": "live with that, right? Once we get to that area, \nthen we make sure to not make it worse. I think  ",
    "start": "564000",
    "end": "569280"
  },
  {
    "text": "that's my number zero rule for managing technical \ndepth. No matter where you start, don't make it  ",
    "start": "569280",
    "end": "574500"
  },
  {
    "text": "worse. If you do that, then you're already doing \nbetter than, I would say, 95% of our companies. ",
    "start": "574500",
    "end": "579180"
  },
  {
    "text": "How do you budget for refactoring \nand improvement in general? ",
    "start": "579180",
    "end": "581820"
  },
  {
    "text": "We don't. We don't.\nPeople just do them, automatically? ",
    "start": "582600",
    "end": "585899"
  },
  {
    "text": "People do it automatically. And it works \npretty well. I mean, we're a small team,  ",
    "start": "585900",
    "end": "592380"
  },
  {
    "text": "and we have this culture, where we really value \nhealthy code. But we actually started to think  ",
    "start": "592380",
    "end": "598380"
  },
  {
    "text": "about that a while ago that...I like what you said \nthat you know, you celebrate the wins. Even if it  ",
    "start": "598380",
    "end": "606840"
  },
  {
    "text": "just meant that something broke and we learned \nsomething, I think that's really important.  ",
    "start": "606840",
    "end": "610320"
  },
  {
    "text": "So, one thing we start to work on a couple of \nmonths ago was that, can we identify all the  ",
    "start": "610980",
    "end": "617100"
  },
  {
    "text": "successful refactorings in a code base and put \nthem up there under codes and the dashboard.  ",
    "start": "617100",
    "end": "622139"
  },
  {
    "text": "Because I think there's so much we can learn from \neach other. So I'm a big fan of refactoring. I'm  ",
    "start": "623100",
    "end": "630180"
  },
  {
    "text": "a big fan of the refactoring books that you \nmentioned in your talk. I also think that  ",
    "start": "630180",
    "end": "635580"
  },
  {
    "text": "there's value in having refactoring examples from \nour own code because it's code written by someone  ",
    "start": "635580",
    "end": "640320"
  },
  {
    "text": "on our team, right? So it's very likely, I would \nsay, it's in the same domain, but it's also in  ",
    "start": "640320",
    "end": "644880"
  },
  {
    "text": "the same style that we write code ourselves. So \nthat has been an interesting experiment as well.",
    "start": "644880",
    "end": "650520"
  },
  {
    "start": "650000",
    "end": "906000"
  },
  {
    "text": "Yes. And you mentioned to me beforehand that it's \na very functional codebase, like Clojure, right? ",
    "start": "650520",
    "end": "657000"
  },
  {
    "text": "Yes, it's Clojure.\nYes. So how do you  ",
    "start": "657000",
    "end": "660060"
  },
  {
    "text": "find people who can do functional programming?\nIt's interesting. When I started CodeScene in  ",
    "start": "660060",
    "end": "666480"
  },
  {
    "text": "2015, one investor I spoke to asked me that, \"Hey, \nwe're using this really odd, strange language that  ",
    "start": "666480",
    "end": "675600"
  },
  {
    "text": "no one has ever heard about. If you will use Java, \nyou can hire 10 people tomorrow.\" The thing is,  ",
    "start": "675600",
    "end": "681240"
  },
  {
    "text": "I don't necessarily want 10 people, right? So \nit turns out that Clojure, not only does it  ",
    "start": "681240",
    "end": "687839"
  },
  {
    "text": "allow each person to kind of do more than what \nwe could have done. And with the larger team,  ",
    "start": "687840",
    "end": "692640"
  },
  {
    "text": "we also have all the coordination aspects. So as \nlong as you can avoid it, it's a win. And I found  ",
    "start": "692640",
    "end": "697740"
  },
  {
    "text": "that Clojure is actually like a hiring magnet, \nright? The people who know Clojure, really, really  ",
    "start": "697740",
    "end": "704940"
  },
  {
    "text": "want to work with Clojure, because the drawback \nof learning Clojure or functional languages,  ",
    "start": "704940",
    "end": "709200"
  },
  {
    "text": "in general, is that you never want to go back \nto what you used before, right? It's a one-way  ",
    "start": "709200",
    "end": "713100"
  },
  {
    "text": "street. So we never had that problem.\nOk. ",
    "start": "713100",
    "end": "717360"
  },
  {
    "text": "And I think it's also kind of a good hiring filter \nbecause if you know Clojure, then you'll most  ",
    "start": "717360",
    "end": "723000"
  },
  {
    "text": "likely learn it in your spare time, and means \nyou're really, really interested in this stuff.",
    "start": "723000",
    "end": "726720"
  },
  {
    "text": "Yes. Also, Clojure is getting a great grip. A \nlot of very good names are recommending it at  ",
    "start": "726720",
    "end": "732180"
  },
  {
    "text": "conferences left and right as the new thing. \nAlthough it's dynamically it's acted in life  ",
    "start": "732180",
    "end": "736740"
  },
  {
    "text": "famously it's not a famous dynamic two-type \nlanguage. Coming from a type theory background,  ",
    "start": "736740",
    "end": "741660"
  },
  {
    "text": "it seems very difficult. It seems you need a lot \nof discipline. And if there's something that I'm  ",
    "start": "741660",
    "end": "746519"
  },
  {
    "text": "not trusting people with is having discipline. \nEspecially also because I exactly try to build  ",
    "start": "746520",
    "end": "753360"
  },
  {
    "text": "systems where humans' default behavior is \nthe right thing that I want actually also  ",
    "start": "753360",
    "end": "759360"
  },
  {
    "text": "on their worst days. I would find people would \ntend to skip on stuff like using dynamic types  ",
    "start": "759360",
    "end": "764399"
  },
  {
    "text": "and just I didn't quite get the tests for \nthis and stuff. Do I test for CodeScene? ",
    "start": "764400",
    "end": "769920"
  },
  {
    "text": "Yes. We pretty much have \ntests on multiple levels. And  ",
    "start": "770820",
    "end": "775140"
  },
  {
    "text": "I mean, it's vital no matter what programming \nlanguage you use. I'm a big fan of things  ",
    "start": "775920",
    "end": "780360"
  },
  {
    "text": "like test-driven development. We have the \nintegration tests, and then we have a bunch  ",
    "start": "780360",
    "end": "784860"
  },
  {
    "text": "of end-to-end tests that run on the whole \nthing that kind of complement each other.  ",
    "start": "784860",
    "end": "788880"
  },
  {
    "text": "But I think for dynamic-type language, I could \nnever imagine doing that without having tests.  ",
    "start": "789660",
    "end": "795779"
  },
  {
    "text": "I don't know how we should hold it together.\nYes. No, I would expect that in dynamic-type  ",
    "start": "795780",
    "end": "801780"
  },
  {
    "text": "testing that's way, way important because \nyou need something to keep the code in place,  ",
    "start": "801780",
    "end": "806760"
  },
  {
    "text": "right, when it started drifting, which is where \nI would usually use types or even proofs if I'm  ",
    "start": "806760",
    "end": "811920"
  },
  {
    "text": "being academic.\nYes. ",
    "start": "811920",
    "end": "814519"
  },
  {
    "text": "Yes. It seems very difficult to get some sort of \nIntelliSense, and all these different refactorings  ",
    "start": "814520",
    "end": "820500"
  },
  {
    "text": "where I want to move stuff and just check that it \nstill works without having to change the tests,  ",
    "start": "820500",
    "end": "824400"
  },
  {
    "text": "which is what I usually find also. You must \nhave also met the problem of, you know,  ",
    "start": "824400",
    "end": "828840"
  },
  {
    "text": "a lot of people end up even if they write \ntests, they write tests that don't support  ",
    "start": "828840",
    "end": "832920"
  },
  {
    "text": "refactoring. They actually hinder it because \nthey're too tightly coupled to the structure. ",
    "start": "833820",
    "end": "838140"
  },
  {
    "text": "Yes, I've seen that so many times. In fact, \nsome of the worst technical depth that I've  ",
    "start": "838140",
    "end": "843720"
  },
  {
    "text": "ever seen has not met the test code. I think \nwe, as developers, we make some kind of mental  ",
    "start": "843720",
    "end": "849720"
  },
  {
    "text": "distinction between application code, which \nwe know is important, and keep it clean,  ",
    "start": "850260",
    "end": "853680"
  },
  {
    "text": "nice and tidy. Then we have the test code, where, \nfrankly, we're happy if we get time to write any  ",
    "start": "853680",
    "end": "858420"
  },
  {
    "text": "of it at all. And I think it's really dangerous. \nAnd I've had so many arguments with people telling  ",
    "start": "858420",
    "end": "863100"
  },
  {
    "text": "me that it's just test code. But it's never just \ntest code. Because if it a test lacks in quality,  ",
    "start": "863100",
    "end": "868259"
  },
  {
    "text": "it will hold back your efforts. And the example \nyou gave is really good. Tests are supported to  ",
    "start": "868260",
    "end": "873900"
  },
  {
    "text": "simplify and even make refactoring possible, \nright? And if the tests are extremely tightly  ",
    "start": "875040",
    "end": "881220"
  },
  {
    "text": "tied to the implementation, then they're actually \nhindering you. And there's very little use in  ",
    "start": "881220",
    "end": "886860"
  },
  {
    "text": "having a test that breaks the moment you \nshare some internal detail in your code. ",
    "start": "886860",
    "end": "891300"
  },
  {
    "text": "I think we could talk about this for \nhours I can feel because my advice  ",
    "start": "892920",
    "end": "896160"
  },
  {
    "text": "would always be if your tests are too complicated,  ",
    "start": "896160",
    "end": "898259"
  },
  {
    "text": "you should refactor the code so that it's \neasier to test. That makes the test... Usually,  ",
    "start": "898260",
    "end": "903060"
  },
  {
    "text": "I always attack the code and never attack the \ntest. But I think we're about out of time,  ",
    "start": "903060",
    "end": "908400"
  },
  {
    "start": "906000",
    "end": "930000"
  },
  {
    "text": "more or less. It's been a pleasure talking to \nyou, Adam. Thank you very much for your time. ",
    "start": "908400",
    "end": "912240"
  },
  {
    "text": "Really nice to meet you. And thanks \na lot for that wonderful talk today.",
    "start": "912240",
    "end": "915300"
  }
]