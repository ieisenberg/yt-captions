[
  {
    "text": "all right good morning everybody thanks",
    "start": "11759",
    "end": "14360"
  },
  {
    "text": "for coming good day um I'm going to tell",
    "start": "14360",
    "end": "17480"
  },
  {
    "text": "you about trees that grow um before I do",
    "start": "17480",
    "end": "19720"
  },
  {
    "text": "I'm going to tell you why I even Dove",
    "start": "19720",
    "end": "22199"
  },
  {
    "text": "down the hole of trees that grow um it's",
    "start": "22199",
    "end": "24240"
  },
  {
    "text": "about a problem that has plagued me for",
    "start": "24240",
    "end": "26119"
  },
  {
    "text": "a long time in my",
    "start": "26119",
    "end": "27599"
  },
  {
    "text": "programming um and uh I've been using a",
    "start": "27599",
    "end": "30320"
  },
  {
    "text": "particular technique to to tackle this",
    "start": "30320",
    "end": "32279"
  },
  {
    "text": "problem and trees that grow is a paper",
    "start": "32279",
    "end": "34040"
  },
  {
    "text": "that came out it was written by",
    "start": "34040",
    "end": "36040"
  },
  {
    "text": "um um cheyen and and uh Simon pton Jones",
    "start": "36040",
    "end": "40280"
  },
  {
    "text": "um a couple of years ago and it promised",
    "start": "40280",
    "end": "42360"
  },
  {
    "text": "to solve this problem even better than I",
    "start": "42360",
    "end": "45520"
  },
  {
    "text": "was currently doing um so this problem",
    "start": "45520",
    "end": "48680"
  },
  {
    "text": "um is is a bit difficult to phrase um",
    "start": "48680",
    "end": "51280"
  },
  {
    "text": "especially in like 25 minutes I'm going",
    "start": "51280",
    "end": "52840"
  },
  {
    "text": "to do my best um but you can kind of",
    "start": "52840",
    "end": "55320"
  },
  {
    "text": "think of it like the expression problem",
    "start": "55320",
    "end": "57280"
  },
  {
    "text": "um that Phil wler talked about um and to",
    "start": "57280",
    "end": "60160"
  },
  {
    "text": "more to a more general form um in record",
    "start": "60160",
    "end": "62879"
  },
  {
    "text": "types and so on so I'll do my best to",
    "start": "62879",
    "end": "65040"
  },
  {
    "text": "communicate this problem and and what",
    "start": "65040",
    "end": "66760"
  },
  {
    "text": "I've seen in trying to solve this",
    "start": "66760",
    "end": "68240"
  },
  {
    "text": "problem and maybe you've had this",
    "start": "68240",
    "end": "69320"
  },
  {
    "text": "problem as well um hopefully you have",
    "start": "69320",
    "end": "71479"
  },
  {
    "text": "and and you maybe have a better idea",
    "start": "71479",
    "end": "72840"
  },
  {
    "text": "than I do um so trees that grow",
    "start": "72840",
    "end": "75560"
  },
  {
    "text": "originally came around or or was",
    "start": "75560",
    "end": "77040"
  },
  {
    "text": "motivated by this idea that there are",
    "start": "77040",
    "end": "78759"
  },
  {
    "text": "three different data types that",
    "start": "78759",
    "end": "80159"
  },
  {
    "text": "represent hcll three different syntax",
    "start": "80159",
    "end": "82479"
  },
  {
    "text": "trees so there was the the GHC data type",
    "start": "82479",
    "end": "84759"
  },
  {
    "text": "there was the template hll data type and",
    "start": "84759",
    "end": "86280"
  },
  {
    "text": "then there were libraries that",
    "start": "86280",
    "end": "87119"
  },
  {
    "text": "represented",
    "start": "87119",
    "end": "88479"
  },
  {
    "text": "hll and it was it was a very simple",
    "start": "88479",
    "end": "90759"
  },
  {
    "text": "question which is um how do we keep them",
    "start": "90759",
    "end": "93040"
  },
  {
    "text": "all in sync right so one bit of high",
    "start": "93040",
    "end": "95680"
  },
  {
    "text": "school changes they all need to be",
    "start": "95680",
    "end": "96880"
  },
  {
    "text": "updated and and there were more um we",
    "start": "96880",
    "end": "99600"
  },
  {
    "text": "you could have written one yesterday how",
    "start": "99600",
    "end": "101560"
  },
  {
    "text": "do we keep them all up to date and how",
    "start": "101560",
    "end": "103399"
  },
  {
    "text": "do we program against them in",
    "start": "103399",
    "end": "106960"
  },
  {
    "text": "general so um that stops working",
    "start": "107159",
    "end": "111640"
  },
  {
    "text": "no yeah so um there's another way to",
    "start": "111640",
    "end": "115520"
  },
  {
    "text": "look at this um and I'm going to give",
    "start": "115520",
    "end": "116920"
  },
  {
    "text": "you one of my use cases um have you ever",
    "start": "116920",
    "end": "120079"
  },
  {
    "text": "had this",
    "start": "120079",
    "end": "121360"
  },
  {
    "text": "problem so you writing a data type such",
    "start": "121360",
    "end": "124000"
  },
  {
    "text": "as data aircraft as I",
    "start": "124000",
    "end": "127759"
  },
  {
    "text": "was and an aircraft has a manufacturer",
    "start": "127759",
    "end": "130520"
  },
  {
    "text": "and then a designation registration and",
    "start": "130520",
    "end": "132680"
  },
  {
    "text": "so on so it's it's a product type it has",
    "start": "132680",
    "end": "135360"
  },
  {
    "text": "these fields and a category is a sum of",
    "start": "135360",
    "end": "138720"
  },
  {
    "text": "these kinds of aircraft type so you now",
    "start": "138720",
    "end": "141280"
  },
  {
    "text": "have a product of a sum and on the aane",
    "start": "141280",
    "end": "144120"
  },
  {
    "text": "Constructor you then have another",
    "start": "144120",
    "end": "145680"
  },
  {
    "text": "product so you now have a product of a",
    "start": "145680",
    "end": "147280"
  },
  {
    "text": "sum of a product and then you have",
    "start": "147280",
    "end": "149840"
  },
  {
    "text": "another product and so on and so on and",
    "start": "149840",
    "end": "152800"
  },
  {
    "text": "you have a sum and and so on and so",
    "start": "152800",
    "end": "155959"
  },
  {
    "text": "on so you've got this very complicated",
    "start": "155959",
    "end": "158680"
  },
  {
    "text": "object graph of products and sums so you",
    "start": "158680",
    "end": "161720"
  },
  {
    "text": "write over your code in terms of this",
    "start": "161720",
    "end": "163040"
  },
  {
    "text": "data",
    "start": "163040",
    "end": "163959"
  },
  {
    "text": "type you know you you might say right",
    "start": "163959",
    "end": "166800"
  },
  {
    "text": "down deep in the tree you know you're",
    "start": "166800",
    "end": "169120"
  },
  {
    "text": "programming against that data type um",
    "start": "169120",
    "end": "171239"
  },
  {
    "text": "you might even store it in a database uh",
    "start": "171239",
    "end": "173480"
  },
  {
    "text": "so you you know you create a database",
    "start": "173480",
    "end": "175159"
  },
  {
    "text": "table and it's got some columns and so",
    "start": "175159",
    "end": "178280"
  },
  {
    "text": "on and uh",
    "start": "178280",
    "end": "180319"
  },
  {
    "text": "and this has happened to me before quite",
    "start": "180319",
    "end": "182519"
  },
  {
    "text": "common um that this happens right and",
    "start": "182519",
    "end": "185400"
  },
  {
    "text": "they say hey can you just like go down",
    "start": "185400",
    "end": "187319"
  },
  {
    "text": "into this this uh object graph and just",
    "start": "187319",
    "end": "191000"
  },
  {
    "text": "add in another field and you're like oh",
    "start": "191000",
    "end": "193319"
  },
  {
    "text": "no I've programmed all the way down in",
    "start": "193319",
    "end": "196200"
  },
  {
    "text": "this tree and I need to just add one",
    "start": "196200",
    "end": "198159"
  },
  {
    "text": "thing it's going to Bubble all the way",
    "start": "198159",
    "end": "200000"
  },
  {
    "text": "up um so yeah this is very similar to",
    "start": "200000",
    "end": "203080"
  },
  {
    "text": "the expression problem uh where you have",
    "start": "203080",
    "end": "205080"
  },
  {
    "text": "a su type and you you know you want to",
    "start": "205080",
    "end": "207400"
  },
  {
    "text": "add a case you want to add a Constructor",
    "start": "207400",
    "end": "209799"
  },
  {
    "text": "which means you have to update all of",
    "start": "209799",
    "end": "211400"
  },
  {
    "text": "the use cases of that data",
    "start": "211400",
    "end": "214239"
  },
  {
    "text": "type um and trees that grow is is a is a",
    "start": "214239",
    "end": "218000"
  },
  {
    "text": "paper that's all about describing a",
    "start": "218000",
    "end": "219680"
  },
  {
    "text": "technique for resolving that so",
    "start": "219680",
    "end": "223080"
  },
  {
    "text": "um so for example we might have this uh",
    "start": "223080",
    "end": "225840"
  },
  {
    "text": "record data type um with four",
    "start": "225840",
    "end": "228319"
  },
  {
    "text": "fields and we want to uh we want to be",
    "start": "228319",
    "end": "231439"
  },
  {
    "text": "able to add fields to this data type um",
    "start": "231439",
    "end": "234560"
  },
  {
    "text": "and we Al so we want to be able to have",
    "start": "234560",
    "end": "236680"
  },
  {
    "text": "uh the undecorated case that is there",
    "start": "236680",
    "end": "238480"
  },
  {
    "text": "are no Fields added to it and we want to",
    "start": "238480",
    "end": "240000"
  },
  {
    "text": "come in later and potentially add fields",
    "start": "240000",
    "end": "241920"
  },
  {
    "text": "to",
    "start": "241920",
    "end": "242720"
  },
  {
    "text": "it so trees that grow promises um to",
    "start": "242720",
    "end": "246040"
  },
  {
    "text": "resolve this issue by um inserting in a",
    "start": "246040",
    "end": "248360"
  },
  {
    "text": "type family field as well and by adding",
    "start": "248360",
    "end": "251879"
  },
  {
    "text": "the unit instance um this is the",
    "start": "251879",
    "end": "254360"
  },
  {
    "text": "undecorated case all right so because",
    "start": "254360",
    "end": "256239"
  },
  {
    "text": "it's a product unit is uh one so we",
    "start": "256239",
    "end": "258400"
  },
  {
    "text": "multiply by one that gives us the same",
    "start": "258400",
    "end": "260440"
  },
  {
    "text": "thing so if we set that type family",
    "start": "260440",
    "end": "263040"
  },
  {
    "text": "field to unit we have the undecorated",
    "start": "263040",
    "end": "265800"
  },
  {
    "text": "case as if we had not added anything at",
    "start": "265800",
    "end": "267479"
  },
  {
    "text": "all um it talks about um this little",
    "start": "267479",
    "end": "270479"
  },
  {
    "text": "this little problem that you might",
    "start": "270479",
    "end": "272080"
  },
  {
    "text": "immediately run into which is we have to",
    "start": "272080",
    "end": "273520"
  },
  {
    "text": "patent match every time in the",
    "start": "273520",
    "end": "274520"
  },
  {
    "text": "undecorated case so the goal here being",
    "start": "274520",
    "end": "277199"
  },
  {
    "text": "using the undecorated case should be as",
    "start": "277199",
    "end": "279199"
  },
  {
    "text": "easy as if I didn't try to decorate it",
    "start": "279199",
    "end": "281479"
  },
  {
    "text": "to begin with so it's suddenly got",
    "start": "281479",
    "end": "283080"
  },
  {
    "text": "harder but of course we can just write a",
    "start": "283080",
    "end": "285080"
  },
  {
    "text": "patent C in to make that all go away and",
    "start": "285080",
    "end": "287120"
  },
  {
    "text": "therefore when we patent match it's as",
    "start": "287120",
    "end": "289440"
  },
  {
    "text": "if it was were",
    "start": "289440",
    "end": "291639"
  },
  {
    "text": "undecorated that that's exactly how we",
    "start": "291639",
    "end": "293840"
  },
  {
    "text": "would use it if uh if we had not used",
    "start": "293840",
    "end": "297520"
  },
  {
    "text": "trees that grow so we're currently on on",
    "start": "297520",
    "end": "299680"
  },
  {
    "text": "equal power at this point in terms of",
    "start": "299680",
    "end": "301440"
  },
  {
    "text": "ease of use and uh we have to do a",
    "start": "301440",
    "end": "303280"
  },
  {
    "text": "little bit of work in the library",
    "start": "303280",
    "end": "304919"
  },
  {
    "text": "itself so then we can add an image um as",
    "start": "304919",
    "end": "308720"
  },
  {
    "text": "our potential use case we can come along",
    "start": "308720",
    "end": "310440"
  },
  {
    "text": "and add a field to this data type um the",
    "start": "310440",
    "end": "312919"
  },
  {
    "text": "data type doesn't need to change the use",
    "start": "312919",
    "end": "315800"
  },
  {
    "text": "cases haven't yet needed to",
    "start": "315800",
    "end": "318360"
  },
  {
    "text": "change and similarly we can add",
    "start": "318360",
    "end": "321120"
  },
  {
    "text": "Constructors to some types so you know",
    "start": "321120",
    "end": "325880"
  },
  {
    "text": "have you ever wanted to add a",
    "start": "325880",
    "end": "326880"
  },
  {
    "text": "Constructor to either um probably not um",
    "start": "326880",
    "end": "329600"
  },
  {
    "text": "but suppose you did uh so this is this",
    "start": "329600",
    "end": "332360"
  },
  {
    "text": "is essentially the uh the expression",
    "start": "332360",
    "end": "334440"
  },
  {
    "text": "problem in this case um so uh actually",
    "start": "334440",
    "end": "338120"
  },
  {
    "text": "in this case we're adding a field to a",
    "start": "338120",
    "end": "340160"
  },
  {
    "text": "sum type um so when you think about it",
    "start": "340160",
    "end": "344960"
  },
  {
    "text": "um or there's actually a way to",
    "start": "344960",
    "end": "346440"
  },
  {
    "text": "algebraically express it but by adding a",
    "start": "346440",
    "end": "349520"
  },
  {
    "text": "uh a value to each Constructor of a sum",
    "start": "349520",
    "end": "351880"
  },
  {
    "text": "type is the same thing as pairing that",
    "start": "351880",
    "end": "354160"
  },
  {
    "text": "sum type up with that thing all right",
    "start": "354160",
    "end": "356680"
  },
  {
    "text": "and that's just the distributive law of",
    "start": "356680",
    "end": "358600"
  },
  {
    "text": "of um",
    "start": "358600",
    "end": "360160"
  },
  {
    "text": "multiplication over addition over",
    "start": "360160",
    "end": "362440"
  },
  {
    "text": "multiplication so",
    "start": "362440",
    "end": "364680"
  },
  {
    "text": "um again we just instant unit for this",
    "start": "364680",
    "end": "367599"
  },
  {
    "text": "value and we're back to the undecorated",
    "start": "367599",
    "end": "369240"
  },
  {
    "text": "case so each of these Constructors just",
    "start": "369240",
    "end": "370800"
  },
  {
    "text": "multiplies by one when we use",
    "start": "370800",
    "end": "373960"
  },
  {
    "text": "unit uh and we can we can add patent",
    "start": "373960",
    "end": "376479"
  },
  {
    "text": "synonyms again for some types and and uh",
    "start": "376479",
    "end": "378479"
  },
  {
    "text": "we don't have to keep matching out that",
    "start": "378479",
    "end": "380560"
  },
  {
    "text": "unit um and and the yeah the point that",
    "start": "380560",
    "end": "383039"
  },
  {
    "text": "I was making there was there is a lens",
    "start": "383039",
    "end": "385560"
  },
  {
    "text": "from our new either data type to that",
    "start": "385560",
    "end": "388400"
  },
  {
    "text": "field okay that is to say um there is",
    "start": "388400",
    "end": "391360"
  },
  {
    "text": "always one available um and you can see",
    "start": "391360",
    "end": "394000"
  },
  {
    "text": "them all on those",
    "start": "394000",
    "end": "396639"
  },
  {
    "text": "Constructors so here's an example of",
    "start": "398199",
    "end": "401080"
  },
  {
    "text": "having added a Constructor to either",
    "start": "401080",
    "end": "403919"
  },
  {
    "text": "okay so this is a common data type",
    "start": "403919",
    "end": "405720"
  },
  {
    "text": "called these um you may have heard of it",
    "start": "405720",
    "end": "408479"
  },
  {
    "text": "um it's basically got um either a or b",
    "start": "408479",
    "end": "410479"
  },
  {
    "text": "or you got",
    "start": "410479",
    "end": "412800"
  },
  {
    "text": "both so we can add this",
    "start": "412800",
    "end": "415440"
  },
  {
    "text": "Constructor um but uh we can also use",
    "start": "415440",
    "end": "419440"
  },
  {
    "text": "the undecorated case so in a sum type",
    "start": "419440",
    "end": "421759"
  },
  {
    "text": "where our cases are are summing they're",
    "start": "421759",
    "end": "424520"
  },
  {
    "text": "adding up we want to add zero in the",
    "start": "424520",
    "end": "426599"
  },
  {
    "text": "undecorated case or known as void so we",
    "start": "426599",
    "end": "429960"
  },
  {
    "text": "instance it for void um and we get that",
    "start": "429960",
    "end": "433080"
  },
  {
    "text": "undecorated",
    "start": "433080",
    "end": "434560"
  },
  {
    "text": "case we had the patent synonyms and we",
    "start": "434560",
    "end": "437039"
  },
  {
    "text": "get prisms for these things so the",
    "start": "437039",
    "end": "439240"
  },
  {
    "text": "technique that I was trying to to use to",
    "start": "439240",
    "end": "441520"
  },
  {
    "text": "resolve this problem is Implement trees",
    "start": "441520",
    "end": "443520"
  },
  {
    "text": "that grow um I had to make a few",
    "start": "443520",
    "end": "445360"
  },
  {
    "text": "variations to be satisfied with that um",
    "start": "445360",
    "end": "448759"
  },
  {
    "text": "and then use the lens library to um to",
    "start": "448759",
    "end": "453039"
  },
  {
    "text": "generically access these Constructors so",
    "start": "453039",
    "end": "455680"
  },
  {
    "text": "that my calling code doesn't need to",
    "start": "455680",
    "end": "457919"
  },
  {
    "text": "change when I do add a Constructor or a",
    "start": "457919",
    "end": "460400"
  },
  {
    "text": "new in this case instance for those type",
    "start": "460400",
    "end": "464759"
  },
  {
    "text": "families um and this Pro uh this paper",
    "start": "464759",
    "end": "467000"
  },
  {
    "text": "promises to continue working for ex",
    "start": "467000",
    "end": "468960"
  },
  {
    "text": "existential types and gats which is is",
    "start": "468960",
    "end": "471199"
  },
  {
    "text": "relevant because I've found cases in",
    "start": "471199",
    "end": "473680"
  },
  {
    "text": "alternative Solutions where that's not",
    "start": "473680",
    "end": "476800"
  },
  {
    "text": "true so um this this is more a question",
    "start": "476800",
    "end": "480680"
  },
  {
    "text": "um what am I doing wrong okay so I've",
    "start": "480680",
    "end": "482759"
  },
  {
    "text": "hit some problems um and what am I doing",
    "start": "482759",
    "end": "487840"
  },
  {
    "text": "wrong so there always seems to be a",
    "start": "487919",
    "end": "491599"
  },
  {
    "text": "pretty significant penalty every time I",
    "start": "491599",
    "end": "493280"
  },
  {
    "text": "try to do this and when I do try to do",
    "start": "493280",
    "end": "495159"
  },
  {
    "text": "this I really do use an incredibly deep",
    "start": "495159",
    "end": "498240"
  },
  {
    "text": "object graph just to demonstrate whether",
    "start": "498240",
    "end": "500520"
  },
  {
    "text": "or not I can actually get to the",
    "start": "500520",
    "end": "502440"
  },
  {
    "text": "goals so um I've been using um classy",
    "start": "502440",
    "end": "506800"
  },
  {
    "text": "lenses and classy prisms and and so on",
    "start": "506800",
    "end": "508879"
  },
  {
    "text": "for a while while um which uh Ed talked",
    "start": "508879",
    "end": "511599"
  },
  {
    "text": "about yesterday in our Workshop if",
    "start": "511599",
    "end": "512760"
  },
  {
    "text": "you're there um so who is familiar with",
    "start": "512760",
    "end": "516640"
  },
  {
    "text": "this approach can I just get a bit of a",
    "start": "516640",
    "end": "519000"
  },
  {
    "text": "cool right okay um so I've been using",
    "start": "519000",
    "end": "523080"
  },
  {
    "text": "that for a while um to try to resolve",
    "start": "523080",
    "end": "525720"
  },
  {
    "text": "this this problem um so it looks like",
    "start": "525720",
    "end": "528080"
  },
  {
    "text": "this for those of you who have not seen",
    "start": "528080",
    "end": "529440"
  },
  {
    "text": "it before um we basically have a typ",
    "start": "529440",
    "end": "531640"
  },
  {
    "text": "class and we say um this is the type",
    "start": "531640",
    "end": "534040"
  },
  {
    "text": "class of all things that have an",
    "start": "534040",
    "end": "535880"
  },
  {
    "text": "image okay and uh we instance it for in",
    "start": "535880",
    "end": "540519"
  },
  {
    "text": "this case the record type we had earlier",
    "start": "540519",
    "end": "542480"
  },
  {
    "text": "and the lens gives us the ability to get",
    "start": "542480",
    "end": "544240"
  },
  {
    "text": "and set on on all instances that have of",
    "start": "544240",
    "end": "548360"
  },
  {
    "text": "this Top",
    "start": "548360",
    "end": "550000"
  },
  {
    "text": "Class um the problem that I have with",
    "start": "550000",
    "end": "553000"
  },
  {
    "text": "this um this approach is if deep down in",
    "start": "553000",
    "end": "557880"
  },
  {
    "text": "the the object graph um and I want to",
    "start": "557880",
    "end": "561760"
  },
  {
    "text": "add an image or add add a field I have",
    "start": "561760",
    "end": "564600"
  },
  {
    "text": "to update that one down in the bottom",
    "start": "564600",
    "end": "567160"
  },
  {
    "text": "but then I have to update all of the",
    "start": "567160",
    "end": "568440"
  },
  {
    "text": "other ones as bubbles up to the top and",
    "start": "568440",
    "end": "571560"
  },
  {
    "text": "uh as I'm writing this code this this is",
    "start": "571560",
    "end": "573360"
  },
  {
    "text": "like in real life as I'm writing this",
    "start": "573360",
    "end": "574680"
  },
  {
    "text": "code I actually don't know where the top",
    "start": "574680",
    "end": "576320"
  },
  {
    "text": "is all right it goes you know I got up",
    "start": "576320",
    "end": "579000"
  },
  {
    "text": "to aircraft which is what I was doing um",
    "start": "579000",
    "end": "581399"
  },
  {
    "text": "but that's just one thing it just keeps",
    "start": "581399",
    "end": "583920"
  },
  {
    "text": "going um so the type variable that was",
    "start": "583920",
    "end": "587360"
  },
  {
    "text": "in that type family um has to Bubble up",
    "start": "587360",
    "end": "590279"
  },
  {
    "text": "to the top of the data type so if you",
    "start": "590279",
    "end": "592480"
  },
  {
    "text": "can imagine a tree of objects and and we",
    "start": "592480",
    "end": "594399"
  },
  {
    "text": "add a type variable here and it sits on",
    "start": "594399",
    "end": "595920"
  },
  {
    "text": "this object here and another one here",
    "start": "595920",
    "end": "597920"
  },
  {
    "text": "and another one here and eventually they",
    "start": "597920",
    "end": "599880"
  },
  {
    "text": "get up to the top of the tree all of",
    "start": "599880",
    "end": "602600"
  },
  {
    "text": "these type variables and uh just just to",
    "start": "602600",
    "end": "605560"
  },
  {
    "text": "write an engine which is what I was",
    "start": "605560",
    "end": "607200"
  },
  {
    "text": "modeling there were 18 type variables um",
    "start": "607200",
    "end": "610079"
  },
  {
    "text": "I can show you the code and uh like I'm",
    "start": "610079",
    "end": "613640"
  },
  {
    "text": "sitting here going am I doing this wrong",
    "start": "613640",
    "end": "615959"
  },
  {
    "text": "you know um and not only that I run out",
    "start": "615959",
    "end": "618680"
  },
  {
    "text": "of names at",
    "start": "618680",
    "end": "621240"
  },
  {
    "text": "26 so that's just",
    "start": "621800",
    "end": "624959"
  },
  {
    "text": "me so I I kind of packed it in and I",
    "start": "624959",
    "end": "627519"
  },
  {
    "text": "just said look I'm I must be doing",
    "start": "627519",
    "end": "628800"
  },
  {
    "text": "something wrong here um and uh yeah this",
    "start": "628800",
    "end": "631760"
  },
  {
    "text": "is a question um what am I doing wrong",
    "start": "631760",
    "end": "633959"
  },
  {
    "text": "here um aside from running out of",
    "start": "633959",
    "end": "636279"
  },
  {
    "text": "identify names at 26 I've heard there's",
    "start": "636279",
    "end": "640639"
  },
  {
    "text": "more so um I've just recently exploring",
    "start": "641320",
    "end": "647079"
  },
  {
    "text": "the backpack solution to this problem um",
    "start": "647079",
    "end": "649320"
  },
  {
    "text": "so backpacks uh module system for Haso",
    "start": "649320",
    "end": "651839"
  },
  {
    "text": "um since GHC 8.2 I",
    "start": "651839",
    "end": "654200"
  },
  {
    "text": "believe and uh the the immediate problem",
    "start": "654200",
    "end": "658440"
  },
  {
    "text": "I see with back backpack is I don't get",
    "start": "658440",
    "end": "659880"
  },
  {
    "text": "all the the abstractions and",
    "start": "659880",
    "end": "661240"
  },
  {
    "text": "generalizations that I do with Classy",
    "start": "661240",
    "end": "663440"
  },
  {
    "text": "prisms and lenses and so on however",
    "start": "663440",
    "end": "666519"
  },
  {
    "text": "perhaps I can use bits of backpack such",
    "start": "666519",
    "end": "669760"
  },
  {
    "text": "that I can continue using classy lenses",
    "start": "669760",
    "end": "671519"
  },
  {
    "text": "and so on afterwards um so I'm still",
    "start": "671519",
    "end": "673800"
  },
  {
    "text": "working on",
    "start": "673800",
    "end": "675000"
  },
  {
    "text": "that so the way backpack um just to give",
    "start": "675000",
    "end": "677720"
  },
  {
    "text": "you a brief um understanding of backpack",
    "start": "677720",
    "end": "680639"
  },
  {
    "text": "um because because I only have a brief",
    "start": "680639",
    "end": "682480"
  },
  {
    "text": "understanding myself is you write a",
    "start": "682480",
    "end": "684440"
  },
  {
    "text": "signature file um which basically defers",
    "start": "684440",
    "end": "687639"
  },
  {
    "text": "the definition of the module so you s um",
    "start": "687639",
    "end": "690720"
  },
  {
    "text": "you sort of say here's my data type",
    "start": "690720",
    "end": "692480"
  },
  {
    "text": "here's what instances it should have and",
    "start": "692480",
    "end": "694880"
  },
  {
    "text": "then in the implementation you provide",
    "start": "694880",
    "end": "696639"
  },
  {
    "text": "the value for that so um here's strings",
    "start": "696639",
    "end": "700360"
  },
  {
    "text": "we all love strings right",
    "start": "700360",
    "end": "702440"
  },
  {
    "text": "so um basically the signature file is",
    "start": "702440",
    "end": "705720"
  },
  {
    "text": "we're going to have a data type called",
    "start": "705720",
    "end": "707200"
  },
  {
    "text": "St it's going to have instances of EQ",
    "start": "707200",
    "end": "710040"
  },
  {
    "text": "it's going to have an instance of show",
    "start": "710040",
    "end": "712279"
  },
  {
    "text": "and uh the the uh second component there",
    "start": "712279",
    "end": "716680"
  },
  {
    "text": "is uh the implementation so the",
    "start": "716680",
    "end": "718279"
  },
  {
    "text": "implementation in in this case is a list",
    "start": "718279",
    "end": "720040"
  },
  {
    "text": "of",
    "start": "720040",
    "end": "722199"
  },
  {
    "text": "char all right um this this uh the one",
    "start": "723079",
    "end": "727200"
  },
  {
    "text": "problem I have run into in doing this is",
    "start": "727200",
    "end": "729160"
  },
  {
    "text": "uh you have to push some quantifiers up",
    "start": "729160",
    "end": "731600"
  },
  {
    "text": "again so you hit the same problem except",
    "start": "731600",
    "end": "734120"
  },
  {
    "text": "it's specialized this time like it in",
    "start": "734120",
    "end": "736440"
  },
  {
    "text": "the in the old case where I was uh put",
    "start": "736440",
    "end": "738959"
  },
  {
    "text": "having to put a type variable on every",
    "start": "738959",
    "end": "740600"
  },
  {
    "text": "single component inside the object graph",
    "start": "740600",
    "end": "742480"
  },
  {
    "text": "to push it up this only happens when",
    "start": "742480",
    "end": "744160"
  },
  {
    "text": "it's an existential quantifier and the",
    "start": "744160",
    "end": "746480"
  },
  {
    "text": "reason being I need to be able to access",
    "start": "746480",
    "end": "748240"
  },
  {
    "text": "that EX existential",
    "start": "748240",
    "end": "749800"
  },
  {
    "text": "quantifier and if it's sitting down in",
    "start": "749800",
    "end": "752079"
  },
  {
    "text": "the module I need it to Bubble up so",
    "start": "752079",
    "end": "753880"
  },
  {
    "text": "that I can so the example being here is",
    "start": "753880",
    "end": "756120"
  },
  {
    "text": "um St right so I need to be able to get",
    "start": "756120",
    "end": "758720"
  },
  {
    "text": "to that",
    "start": "758720",
    "end": "759639"
  },
  {
    "text": "s in order to um use what St does and I",
    "start": "759639",
    "end": "764720"
  },
  {
    "text": "need to Bubble it",
    "start": "764720",
    "end": "766399"
  },
  {
    "text": "up otherwise I just can't access",
    "start": "766399",
    "end": "769440"
  },
  {
    "text": "it um so I I still prefer using classy",
    "start": "769440",
    "end": "773000"
  },
  {
    "text": "lenses and prisms",
    "start": "773000",
    "end": "775040"
  },
  {
    "text": "um",
    "start": "775040",
    "end": "777199"
  },
  {
    "text": "so um I I can't I simply can't find a",
    "start": "777199",
    "end": "780920"
  },
  {
    "text": "better answer to this problem than than",
    "start": "780920",
    "end": "782600"
  },
  {
    "text": "this for",
    "start": "782600",
    "end": "784959"
  },
  {
    "text": "now um I seem to have finished very",
    "start": "784959",
    "end": "787680"
  },
  {
    "text": "early so um I'm I'm Keen to talk about",
    "start": "787680",
    "end": "791000"
  },
  {
    "text": "this problem with uh anyone so does",
    "start": "791000",
    "end": "793199"
  },
  {
    "text": "anyone have any",
    "start": "793199",
    "end": "794399"
  },
  {
    "text": "questions and",
    "start": "794399",
    "end": "797680"
  },
  {
    "text": "thanks thank you something about",
    "start": "803120",
    "end": "805680"
  },
  {
    "text": "questions I think you all just want to",
    "start": "805680",
    "end": "807800"
  },
  {
    "text": "make me run from one side to the other",
    "start": "807800",
    "end": "810800"
  },
  {
    "text": "there you go I'm Keen to hear your",
    "start": "810800",
    "end": "813199"
  },
  {
    "text": "question hi Tony um you could just talk",
    "start": "813199",
    "end": "815720"
  },
  {
    "text": "a bit about the use cases in the paper",
    "start": "815720",
    "end": "819199"
  },
  {
    "text": "where they're actually applying this",
    "start": "819199",
    "end": "820760"
  },
  {
    "text": "technique uh yeah so the the primary use",
    "start": "820760",
    "end": "823160"
  },
  {
    "text": "case given in the paper is",
    "start": "823160",
    "end": "825240"
  },
  {
    "text": "uh is the the different hasool Source",
    "start": "825240",
    "end": "827920"
  },
  {
    "text": "syntax trees um so um to to try and give",
    "start": "827920",
    "end": "831440"
  },
  {
    "text": "you um like a uh to sort of sympathize",
    "start": "831440",
    "end": "835240"
  },
  {
    "text": "with this problem a bit which is imagine",
    "start": "835240",
    "end": "837000"
  },
  {
    "text": "you had to write a hasool syntax tree",
    "start": "837000",
    "end": "838880"
  },
  {
    "text": "you would end up with products and of",
    "start": "838880",
    "end": "840839"
  },
  {
    "text": "sums and and so on and uh as you're",
    "start": "840839",
    "end": "844680"
  },
  {
    "text": "doing so perhaps you want to make a",
    "start": "844680",
    "end": "846399"
  },
  {
    "text": "change to the language okay so we want",
    "start": "846399",
    "end": "848399"
  },
  {
    "text": "to add backpack or something to half",
    "start": "848399",
    "end": "850000"
  },
  {
    "text": "school and so you make us you add this",
    "start": "850000",
    "end": "852199"
  },
  {
    "text": "new keyword called Signature to the to",
    "start": "852199",
    "end": "854040"
  },
  {
    "text": "the syntax tree and uh all of the all of",
    "start": "854040",
    "end": "858040"
  },
  {
    "text": "the syntax trees will now have to be",
    "start": "858040",
    "end": "859560"
  },
  {
    "text": "updated for however many there are what",
    "start": "859560",
    "end": "862040"
  },
  {
    "text": "we'd really like to say is um for any",
    "start": "862040",
    "end": "864240"
  },
  {
    "text": "syntax tree that has the notion of",
    "start": "864240",
    "end": "866519"
  },
  {
    "text": "signatures and program against this kind",
    "start": "866519",
    "end": "869079"
  },
  {
    "text": "of thing so trees that grow is basically",
    "start": "869079",
    "end": "872920"
  },
  {
    "text": "um they're trying to write the whole",
    "start": "872920",
    "end": "875399"
  },
  {
    "text": "syntax tree and put in that type family",
    "start": "875399",
    "end": "877600"
  },
  {
    "text": "so that later on when they say oh we're",
    "start": "877600",
    "end": "879360"
  },
  {
    "text": "going to add this feature they can just",
    "start": "879360",
    "end": "881000"
  },
  {
    "text": "slot it in with a type family",
    "start": "881000",
    "end": "883959"
  },
  {
    "text": "instance so that's the primary",
    "start": "883959",
    "end": "886639"
  },
  {
    "text": "motivation um I'm I'm motivated in in",
    "start": "886639",
    "end": "889680"
  },
  {
    "text": "like the aircraft case I have many other",
    "start": "889680",
    "end": "891240"
  },
  {
    "text": "case programming language cases um one",
    "start": "891240",
    "end": "893040"
  },
  {
    "text": "of our projects at at um in Brisbane is",
    "start": "893040",
    "end": "895920"
  },
  {
    "text": "uh is working with python the",
    "start": "895920",
    "end": "898079"
  },
  {
    "text": "programming language anguage so we have",
    "start": "898079",
    "end": "899240"
  },
  {
    "text": "a python syntax tree um the goal for for",
    "start": "899240",
    "end": "902240"
  },
  {
    "text": "that project is to help people write",
    "start": "902240",
    "end": "904360"
  },
  {
    "text": "python um so it's written in hasool and",
    "start": "904360",
    "end": "907160"
  },
  {
    "text": "we wrote it for version 3.5 of python",
    "start": "907160",
    "end": "909880"
  },
  {
    "text": "but what does the you can imagine",
    "start": "909880",
    "end": "911440"
  },
  {
    "text": "there's a 3.5 python syntax tree and a",
    "start": "911440",
    "end": "913759"
  },
  {
    "text": "3.6 version of syntax tree where do they",
    "start": "913759",
    "end": "917160"
  },
  {
    "text": "differ and so we could potentially use",
    "start": "917160",
    "end": "920560"
  },
  {
    "text": "trees that",
    "start": "920560",
    "end": "921680"
  },
  {
    "text": "grow so where there's additional",
    "start": "921680",
    "end": "923800"
  },
  {
    "text": "instructions in the two different uh",
    "start": "923800",
    "end": "925639"
  },
  {
    "text": "syntax",
    "start": "925639",
    "end": "926759"
  },
  {
    "text": "trees that helps",
    "start": "926759",
    "end": "930560"
  },
  {
    "text": "there's one here yep keeping going with",
    "start": "930560",
    "end": "933880"
  },
  {
    "text": "the",
    "start": "933880",
    "end": "936120"
  },
  {
    "text": "one",
    "start": "936199",
    "end": "938800"
  },
  {
    "text": "yeah so you mentioned that one issue was",
    "start": "938800",
    "end": "941120"
  },
  {
    "text": "that you had lots of type variables to",
    "start": "941120",
    "end": "942839"
  },
  {
    "text": "pass into these things mhm could you",
    "start": "942839",
    "end": "945360"
  },
  {
    "text": "pack those all up into a single variable",
    "start": "945360",
    "end": "948759"
  },
  {
    "text": "that ranges over products of type",
    "start": "948759",
    "end": "950399"
  },
  {
    "text": "variables uh yes and I I did try this",
    "start": "950399",
    "end": "952880"
  },
  {
    "text": "yeah so I probably should have mentioned",
    "start": "952880",
    "end": "954360"
  },
  {
    "text": "that which is I did try to pack them all",
    "start": "954360",
    "end": "956000"
  },
  {
    "text": "up into a single type variable the",
    "start": "956000",
    "end": "957839"
  },
  {
    "text": "problem with this is uh um the kind like",
    "start": "957839",
    "end": "961800"
  },
  {
    "text": "you lose a bit of flexibility with that",
    "start": "961800",
    "end": "963560"
  },
  {
    "text": "so whatever you set that value to it",
    "start": "963560",
    "end": "965680"
  },
  {
    "text": "propagates through the whole tree but I",
    "start": "965680",
    "end": "967240"
  },
  {
    "text": "I might need differences down the tree",
    "start": "967240",
    "end": "969800"
  },
  {
    "text": "so it is true if for example you know",
    "start": "969800",
    "end": "972199"
  },
  {
    "text": "your project manager said add an image",
    "start": "972199",
    "end": "973839"
  },
  {
    "text": "to everything right all the way down the",
    "start": "973839",
    "end": "976160"
  },
  {
    "text": "tree and there was just one type",
    "start": "976160",
    "end": "977920"
  },
  {
    "text": "variable I just go image and then that",
    "start": "977920",
    "end": "979959"
  },
  {
    "text": "that solves the problem but when you get",
    "start": "979959",
    "end": "981680"
  },
  {
    "text": "you want to discriminate at the",
    "start": "981680",
    "end": "983079"
  },
  {
    "text": "different values down in the tree um so",
    "start": "983079",
    "end": "986839"
  },
  {
    "text": "my goal was just to get like ultimate",
    "start": "986839",
    "end": "988560"
  },
  {
    "text": "flexibility like what can I get here um",
    "start": "988560",
    "end": "990880"
  },
  {
    "text": "but I I did experiment with that",
    "start": "990880",
    "end": "992720"
  },
  {
    "text": "compromise um but I found it",
    "start": "992720",
    "end": "994680"
  },
  {
    "text": "unsatisfactory well what I would have",
    "start": "994680",
    "end": "996279"
  },
  {
    "text": "done in that case is added coercion",
    "start": "996279",
    "end": "998399"
  },
  {
    "text": "functions that take let's say at one",
    "start": "998399",
    "end": "1001160"
  },
  {
    "text": "point you need a product of 26 variables",
    "start": "1001160",
    "end": "1003199"
  },
  {
    "text": "but another prod point you only need 13",
    "start": "1003199",
    "end": "1005360"
  },
  {
    "text": "of them yes right you have a coercion",
    "start": "1005360",
    "end": "1007839"
  },
  {
    "text": "function that extracts the 13 from the",
    "start": "1007839",
    "end": "1011000"
  },
  {
    "text": "26 okay um not familiar with that so can",
    "start": "1011000",
    "end": "1014240"
  },
  {
    "text": "you expand on that a little bit what do",
    "start": "1014240",
    "end": "1015440"
  },
  {
    "text": "you mean by that um typical subtype",
    "start": "1015440",
    "end": "1018519"
  },
  {
    "text": "typing okay right a product of 13 things",
    "start": "1018519",
    "end": "1022279"
  },
  {
    "text": "is product of 26 things is a subtype of",
    "start": "1022279",
    "end": "1024918"
  },
  {
    "text": "a product of 13 things y so you can",
    "start": "1024919",
    "end": "1027120"
  },
  {
    "text": "convert any product of 26 into a product",
    "start": "1027120",
    "end": "1030120"
  },
  {
    "text": "of",
    "start": "1030120",
    "end": "1030918"
  },
  {
    "text": "13 right so you could do that implicitly",
    "start": "1030919",
    "end": "1034240"
  },
  {
    "text": "sometimes or you do it explicitly",
    "start": "1034240",
    "end": "1036760"
  },
  {
    "text": "explicit coercion function yeah I",
    "start": "1036760",
    "end": "1039400"
  },
  {
    "text": "understand but what you mean by the",
    "start": "1039400",
    "end": "1040438"
  },
  {
    "text": "coercion function um I did not",
    "start": "1040439",
    "end": "1041839"
  },
  {
    "text": "experiment with that um perhaps I should",
    "start": "1041839",
    "end": "1045760"
  },
  {
    "text": "yeah maybe it would help the other thing",
    "start": "1045760",
    "end": "1047640"
  },
  {
    "text": "I was going to suggest is um have a look",
    "start": "1047640",
    "end": "1050320"
  },
  {
    "text": "at agda the reason for that being right",
    "start": "1050320",
    "end": "1054400"
  },
  {
    "text": "hasal sort of gets halfway to dependent",
    "start": "1054400",
    "end": "1056440"
  },
  {
    "text": "types agda is all the way so any of",
    "start": "1056440",
    "end": "1058799"
  },
  {
    "text": "these dependencies you want can be",
    "start": "1058799",
    "end": "1060480"
  },
  {
    "text": "written out in agda might be painful I",
    "start": "1060480",
    "end": "1062720"
  },
  {
    "text": "don't know but agda should give you the",
    "start": "1062720",
    "end": "1065000"
  },
  {
    "text": "right language for describing these",
    "start": "1065000",
    "end": "1066679"
  },
  {
    "text": "things one Hopes And if you could solve",
    "start": "1066679",
    "end": "1069200"
  },
  {
    "text": "it in agda maybe then once you saw what",
    "start": "1069200",
    "end": "1071320"
  },
  {
    "text": "the solution was you could back",
    "start": "1071320",
    "end": "1073559"
  },
  {
    "text": "translated to hll okay so so it might be",
    "start": "1073559",
    "end": "1075960"
  },
  {
    "text": "just worth fiddling with that because",
    "start": "1075960",
    "end": "1077840"
  },
  {
    "text": "ACTA might give you the right language",
    "start": "1077840",
    "end": "1079400"
  },
  {
    "text": "for describing your problem so in that",
    "start": "1079400",
    "end": "1081600"
  },
  {
    "text": "agda has full dependent types and",
    "start": "1081600",
    "end": "1083000"
  },
  {
    "text": "therefore I might be able to describe",
    "start": "1083000",
    "end": "1084120"
  },
  {
    "text": "the problem better the dependent types",
    "start": "1084120",
    "end": "1085760"
  },
  {
    "text": "being the thing more cleanly right okay",
    "start": "1085760",
    "end": "1088520"
  },
  {
    "text": "uh yeah good point I haven't done that",
    "start": "1088520",
    "end": "1090280"
  },
  {
    "text": "either okay so just an idea I think",
    "start": "1090280",
    "end": "1092440"
  },
  {
    "text": "you're working with a really hard I",
    "start": "1092440",
    "end": "1094039"
  },
  {
    "text": "think they're both excellent ideas lots",
    "start": "1094039",
    "end": "1095720"
  },
  {
    "text": "of different tools to get at it yep",
    "start": "1095720",
    "end": "1098679"
  },
  {
    "text": "thanks very",
    "start": "1098679",
    "end": "1100000"
  },
  {
    "text": "much uh",
    "start": "1100000",
    "end": "1103200"
  },
  {
    "text": "Brian could you uh show some code",
    "start": "1106440",
    "end": "1111280"
  },
  {
    "text": "okay uh let's see what I can do uh I",
    "start": "1111280",
    "end": "1113720"
  },
  {
    "text": "didn't prepare any but I can do my best",
    "start": "1113720",
    "end": "1115600"
  },
  {
    "text": "here",
    "start": "1115600",
    "end": "1118559"
  },
  {
    "text": "so oh yeah sorry you haven't had your",
    "start": "1120000",
    "end": "1122919"
  },
  {
    "text": "question so so my request was um I I",
    "start": "1122919",
    "end": "1126000"
  },
  {
    "text": "didn't quite follow the data structure",
    "start": "1126000",
    "end": "1128039"
  },
  {
    "text": "you walking through the first time you",
    "start": "1128039",
    "end": "1129480"
  },
  {
    "text": "walked through it the aircraft one or",
    "start": "1129480",
    "end": "1131520"
  },
  {
    "text": "the just the idea itself what that",
    "start": "1131520",
    "end": "1134320"
  },
  {
    "text": "looked like oh right um because it was",
    "start": "1134320",
    "end": "1137919"
  },
  {
    "text": "very fun do you want to see the real",
    "start": "1137919",
    "end": "1139080"
  },
  {
    "text": "code I can show you that code as well um",
    "start": "1139080",
    "end": "1141480"
  },
  {
    "text": "I I I can't show you the trees that grow",
    "start": "1141480",
    "end": "1143360"
  },
  {
    "text": "code cuz I deleted it and in a tantrum",
    "start": "1143360",
    "end": "1146600"
  },
  {
    "text": "um and",
    "start": "1146600",
    "end": "1148760"
  },
  {
    "text": "so it's probably there somewhere in my",
    "start": "1148760",
    "end": "1151039"
  },
  {
    "text": "history but um so I I'll show I'll",
    "start": "1151039",
    "end": "1154080"
  },
  {
    "text": "answer Brian's question um and then I'll",
    "start": "1154080",
    "end": "1156000"
  },
  {
    "text": "show you some code so um I've just",
    "start": "1156000",
    "end": "1158039"
  },
  {
    "text": "noticed that this is called trees that",
    "start": "1158039",
    "end": "1159520"
  },
  {
    "text": "grow that I like and it's probably not",
    "start": "1159520",
    "end": "1161440"
  },
  {
    "text": "true anymore um so ah hang on sorry let",
    "start": "1161440",
    "end": "1164520"
  },
  {
    "text": "me get an",
    "start": "1164520",
    "end": "1166159"
  },
  {
    "text": "internet um while I do that",
    "start": "1166159",
    "end": "1169559"
  },
  {
    "text": "uh I'll show you the real",
    "start": "1169559",
    "end": "1172399"
  },
  {
    "text": "code uh",
    "start": "1172440",
    "end": "1175240"
  },
  {
    "text": "so",
    "start": "1175240",
    "end": "1177159"
  },
  {
    "text": "uh so if we take for",
    "start": "1177159",
    "end": "1179960"
  },
  {
    "text": "example",
    "start": "1179960",
    "end": "1182960"
  },
  {
    "text": "uh no hang",
    "start": "1183480",
    "end": "1186280"
  },
  {
    "text": "on yeah exactly are you are you talking",
    "start": "1186280",
    "end": "1189919"
  },
  {
    "text": "about these data structures yeah that's",
    "start": "1189919",
    "end": "1192480"
  },
  {
    "text": "there's directories here as well",
    "start": "1192480",
    "end": "1195840"
  },
  {
    "text": "um uh so",
    "start": "1195840",
    "end": "1199720"
  },
  {
    "text": "if I go to so this is at the top",
    "start": "1199720",
    "end": "1203000"
  },
  {
    "text": "level um and and it uh it definitely",
    "start": "1203000",
    "end": "1205880"
  },
  {
    "text": "would have been uh more than 26 type",
    "start": "1205880",
    "end": "1209440"
  },
  {
    "text": "variables at this level so remember it",
    "start": "1209440",
    "end": "1210960"
  },
  {
    "text": "was 18 at propulsion which is just the",
    "start": "1210960",
    "end": "1213080"
  },
  {
    "text": "engine all right and at that point I",
    "start": "1213080",
    "end": "1215720"
  },
  {
    "text": "just threw the towel in um but uh here",
    "start": "1215720",
    "end": "1219720"
  },
  {
    "text": "I'm using classy lenses to get around",
    "start": "1219720",
    "end": "1221320"
  },
  {
    "text": "this problem um and and Ju Just to kind",
    "start": "1221320",
    "end": "1223679"
  },
  {
    "text": "of give you a bit of sympathy for this",
    "start": "1223679",
    "end": "1225039"
  },
  {
    "text": "problem um particularly in aviation um",
    "start": "1225039",
    "end": "1228799"
  },
  {
    "text": "very discreet questions get asked all",
    "start": "1228799",
    "end": "1230760"
  },
  {
    "text": "the time um like I'll give you a silly",
    "start": "1230760",
    "end": "1234280"
  },
  {
    "text": "example like um how many airplanes did",
    "start": "1234280",
    "end": "1237880"
  },
  {
    "text": "you fly on a Tuesday that had two",
    "start": "1237880",
    "end": "1240520"
  },
  {
    "text": "stripes down the fuselage like it's just",
    "start": "1240520",
    "end": "1243400"
  },
  {
    "text": "such a silly question but these kind of",
    "start": "1243400",
    "end": "1245480"
  },
  {
    "text": "things actually happen and uh I I have",
    "start": "1245480",
    "end": "1248559"
  },
  {
    "text": "seen uh I've seen these questions be",
    "start": "1248559",
    "end": "1251159"
  },
  {
    "text": "asked in a safety critical environment",
    "start": "1251159",
    "end": "1253960"
  },
  {
    "text": "where people with fancy t-shirts and",
    "start": "1253960",
    "end": "1256480"
  },
  {
    "text": "stuff sit there with a pen and paper on",
    "start": "1256480",
    "end": "1257840"
  },
  {
    "text": "the Monitor and start counting like",
    "start": "1257840",
    "end": "1260000"
  },
  {
    "text": "this to to answer these kinds of",
    "start": "1260000",
    "end": "1262120"
  },
  {
    "text": "questions and then always get the wrong",
    "start": "1262120",
    "end": "1263799"
  },
  {
    "text": "answer right every single time so I what",
    "start": "1263799",
    "end": "1267280"
  },
  {
    "text": "I'm trying to do here is is answer these",
    "start": "1267280",
    "end": "1269159"
  },
  {
    "text": "questions where I can just write the",
    "start": "1269159",
    "end": "1270480"
  },
  {
    "text": "lens and say there's the question and",
    "start": "1270480",
    "end": "1272640"
  },
  {
    "text": "then say get and there's the answer um",
    "start": "1272640",
    "end": "1276400"
  },
  {
    "text": "so um that's at the top level of the",
    "start": "1276400",
    "end": "1279200"
  },
  {
    "text": "tree there um but if you takes a uh is",
    "start": "1279200",
    "end": "1284039"
  },
  {
    "text": "it",
    "start": "1284039",
    "end": "1286240"
  },
  {
    "text": "propulsion uh that's a pretty",
    "start": "1287039",
    "end": "1288840"
  },
  {
    "text": "uninteresting one actually so uh",
    "start": "1288840",
    "end": "1291679"
  },
  {
    "text": "engine like you know aircraft have",
    "start": "1291679",
    "end": "1293799"
  },
  {
    "text": "engines and this is just talking about",
    "start": "1293799",
    "end": "1295559"
  },
  {
    "text": "aircraft right like that's not the only",
    "start": "1295559",
    "end": "1296960"
  },
  {
    "text": "thing we ever talk about um again this",
    "start": "1296960",
    "end": "1299919"
  },
  {
    "text": "is a record type um I have yeah you",
    "start": "1299919",
    "end": "1303440"
  },
  {
    "text": "associate media like of associated media",
    "start": "1303440",
    "end": "1305600"
  },
  {
    "text": "with it um because people want to see",
    "start": "1305600",
    "end": "1307159"
  },
  {
    "text": "the picture of the airplane or whatever",
    "start": "1307159",
    "end": "1308760"
  },
  {
    "text": "it might be um or um you know if you do",
    "start": "1308760",
    "end": "1313279"
  },
  {
    "text": "a flight for example you want the track",
    "start": "1313279",
    "end": "1315080"
  },
  {
    "text": "log the GPS track log or flight plan and",
    "start": "1315080",
    "end": "1317360"
  },
  {
    "text": "so on",
    "start": "1317360",
    "end": "1318679"
  },
  {
    "text": "so this is an example of where I'm",
    "start": "1318679",
    "end": "1320080"
  },
  {
    "text": "currently at in resolving this problem",
    "start": "1320080",
    "end": "1322440"
  },
  {
    "text": "um my use case being um I guess my my",
    "start": "1322440",
    "end": "1326000"
  },
  {
    "text": "thesis is basically uh I'm going to sit",
    "start": "1326000",
    "end": "1328760"
  },
  {
    "text": "at an airport one day and someone is",
    "start": "1328760",
    "end": "1330400"
  },
  {
    "text": "going to ask me the most obscene obtuse",
    "start": "1330400",
    "end": "1333080"
  },
  {
    "text": "question that you could possibly think",
    "start": "1333080",
    "end": "1334799"
  },
  {
    "text": "of like you know the date is a prime",
    "start": "1334799",
    "end": "1337360"
  },
  {
    "text": "number the registration has you know a",
    "start": "1337360",
    "end": "1342200"
  },
  {
    "text": "vow in the third position like just just",
    "start": "1342200",
    "end": "1344799"
  },
  {
    "text": "come up with the silliest question you",
    "start": "1344799",
    "end": "1346360"
  },
  {
    "text": "can come up with and I should be able to",
    "start": "1346360",
    "end": "1348200"
  },
  {
    "text": "answer it that's my goal right um it",
    "start": "1348200",
    "end": "1351520"
  },
  {
    "text": "sounds silly but these kinds of",
    "start": "1351520",
    "end": "1353039"
  },
  {
    "text": "questions actually get",
    "start": "1353039",
    "end": "1354720"
  },
  {
    "text": "asked um and and actually I guess the",
    "start": "1354720",
    "end": "1357240"
  },
  {
    "text": "other motivating thing is um I I have",
    "start": "1357240",
    "end": "1359480"
  },
  {
    "text": "this uh I guess perverse hobby of going",
    "start": "1359480",
    "end": "1362799"
  },
  {
    "text": "on Pilot Forums and tracking uh what",
    "start": "1362799",
    "end": "1366760"
  },
  {
    "text": "happens like people will go on there and",
    "start": "1366760",
    "end": "1369400"
  },
  {
    "text": "say oh you know um I'm using Microsoft",
    "start": "1369400",
    "end": "1371559"
  },
  {
    "text": "Excel to to for this data um but I got",
    "start": "1371559",
    "end": "1374840"
  },
  {
    "text": "asked this question today and I didn't",
    "start": "1374840",
    "end": "1376840"
  },
  {
    "text": "know what to do and you know",
    "start": "1376840",
    "end": "1379159"
  },
  {
    "text": "this happens and it's about once a week",
    "start": "1379159",
    "end": "1380960"
  },
  {
    "text": "on average um that I see this kind of",
    "start": "1380960",
    "end": "1383600"
  },
  {
    "text": "thing um but yeah it's it's it's a",
    "start": "1383600",
    "end": "1386640"
  },
  {
    "text": "problem that I'm trying to",
    "start": "1386640",
    "end": "1388000"
  },
  {
    "text": "solve um now to Brian's",
    "start": "1388000",
    "end": "1391600"
  },
  {
    "text": "question um this was my experiment with",
    "start": "1391600",
    "end": "1394159"
  },
  {
    "text": "trees that grow",
    "start": "1394159",
    "end": "1397840"
  },
  {
    "text": "um now let me try to remember what I was",
    "start": "1397919",
    "end": "1400960"
  },
  {
    "text": "doing so um yeah so what what I was this",
    "start": "1400960",
    "end": "1406360"
  },
  {
    "text": "doesn't work um it it like it especially",
    "start": "1406360",
    "end": "1408720"
  },
  {
    "text": "doesn't work um but what I was trying to",
    "start": "1408720",
    "end": "1410440"
  },
  {
    "text": "do is create a data type to which I",
    "start": "1410440",
    "end": "1412760"
  },
  {
    "text": "could add either fields or Constructors",
    "start": "1412760",
    "end": "1414799"
  },
  {
    "text": "all at once um and that that actually",
    "start": "1414799",
    "end": "1416880"
  },
  {
    "text": "doesn't work so um pardon me you can see",
    "start": "1416880",
    "end": "1420559"
  },
  {
    "text": "here this is adding a",
    "start": "1420559",
    "end": "1422320"
  },
  {
    "text": "field this this particular type family",
    "start": "1422320",
    "end": "1425200"
  },
  {
    "text": "here and uh there should be a lens for",
    "start": "1425200",
    "end": "1428919"
  },
  {
    "text": "it",
    "start": "1428919",
    "end": "1430080"
  },
  {
    "text": "somewhere um and then I am adding a",
    "start": "1430080",
    "end": "1433760"
  },
  {
    "text": "Constructor so basically I just I wanted",
    "start": "1433760",
    "end": "1436279"
  },
  {
    "text": "a general sum type to which I could",
    "start": "1436279",
    "end": "1437880"
  },
  {
    "text": "could add Constructors or fields and",
    "start": "1437880",
    "end": "1440200"
  },
  {
    "text": "then similarly I wanted a general",
    "start": "1440200",
    "end": "1442640"
  },
  {
    "text": "product type such as this one to which I",
    "start": "1442640",
    "end": "1445960"
  },
  {
    "text": "could add um Constructors or",
    "start": "1445960",
    "end": "1450360"
  },
  {
    "text": "Fields um",
    "start": "1450360",
    "end": "1452240"
  },
  {
    "text": "and you",
    "start": "1452240",
    "end": "1455159"
  },
  {
    "text": "know there should be a prism for this",
    "start": "1455159",
    "end": "1457240"
  },
  {
    "text": "there is a prism for that that works out",
    "start": "1457240",
    "end": "1460440"
  },
  {
    "text": "um that there is this little bit of a",
    "start": "1460440",
    "end": "1462600"
  },
  {
    "text": "problem here um if it depends how much",
    "start": "1462600",
    "end": "1464360"
  },
  {
    "text": "you know about prisms and and traversals",
    "start": "1464360",
    "end": "1466480"
  },
  {
    "text": "and so on which is um",
    "start": "1466480",
    "end": "1469279"
  },
  {
    "text": "uh even in the undecorated case you",
    "start": "1469279",
    "end": "1471279"
  },
  {
    "text": "don't get a prism that goes to just that",
    "start": "1471279",
    "end": "1475000"
  },
  {
    "text": "value so in this case we get a prism to",
    "start": "1475000",
    "end": "1476720"
  },
  {
    "text": "the",
    "start": "1476720",
    "end": "1477760"
  },
  {
    "text": "pair um so like you essentially you have",
    "start": "1477760",
    "end": "1481679"
  },
  {
    "text": "a traversal over this over this a",
    "start": "1481679",
    "end": "1484679"
  },
  {
    "text": "so uh I'm not sure if I can do a quick",
    "start": "1484679",
    "end": "1487440"
  },
  {
    "text": "lens tutorial but uh you think like if",
    "start": "1487440",
    "end": "1491320"
  },
  {
    "text": "you got a prism to a pair um there's a",
    "start": "1491320",
    "end": "1493600"
  },
  {
    "text": "lens from a pair to one component of",
    "start": "1493600",
    "end": "1495799"
  },
  {
    "text": "that pair and if you compose a lens and",
    "start": "1495799",
    "end": "1497880"
  },
  {
    "text": "a prism you end up with a traversal and",
    "start": "1497880",
    "end": "1499720"
  },
  {
    "text": "a traversal is weaker in power than a",
    "start": "1499720",
    "end": "1502559"
  },
  {
    "text": "prism and I was not prepared to make",
    "start": "1502559",
    "end": "1504840"
  },
  {
    "text": "that compromise so I immediately hit",
    "start": "1504840",
    "end": "1507000"
  },
  {
    "text": "that problem um and so on there are",
    "start": "1507000",
    "end": "1510120"
  },
  {
    "text": "prisms etc etc so is that a good enough",
    "start": "1510120",
    "end": "1514080"
  },
  {
    "text": "yeah cool uh we can talk all about this",
    "start": "1514080",
    "end": "1515799"
  },
  {
    "text": "code and and the subsequent revisions is",
    "start": "1515799",
    "end": "1517640"
  },
  {
    "text": "probably better to talk about um because",
    "start": "1517640",
    "end": "1519640"
  },
  {
    "text": "I I threw the tail in on that one as",
    "start": "1519640",
    "end": "1521320"
  },
  {
    "text": "well cool thanks for thanks for your",
    "start": "1521320",
    "end": "1524159"
  },
  {
    "text": "questions um quite interesting",
    "start": "1524159",
    "end": "1526679"
  },
  {
    "text": "cheers thank",
    "start": "1526679",
    "end": "1530158"
  },
  {
    "text": "you",
    "start": "1533080",
    "end": "1536080"
  }
]