[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "thanks a lot so good morning everyone so this session is not so much about one tool but it's about a lot of tools and I",
    "start": "5720",
    "end": "12400"
  },
  {
    "text": "will will give like small introduction on E each of the tools basically to get inspire you that in case you need some",
    "start": "12400",
    "end": "18680"
  },
  {
    "text": "functionality you know that tools like this exist out there um I work for",
    "start": "18680",
    "end": "24880"
  },
  {
    "text": "company called asml basically the chips you have in your phone and in your laptop are probably produced on one of",
    "start": "24880",
    "end": "30759"
  },
  {
    "text": "our machines but that's a topic for another day or during lunch breaks if you're interested and the examples I'm",
    "start": "30759",
    "end": "36559"
  },
  {
    "text": "going to show are actually on my GTO Repro so I will uh show that one in a second as well and the topics are",
    "start": "36559",
    "end": "43360"
  },
  {
    "start": "42000",
    "end": "78000"
  },
  {
    "text": "basically divided in uh architecture test implementation security and builds",
    "start": "43360",
    "end": "48440"
  },
  {
    "text": "so if later you're curious just have a look at my GitHub repository so if you go to github.com so you click on Java",
    "start": "48440",
    "end": "55320"
  },
  {
    "text": "hiden gems um you see it under the examples folder there are way more examples here",
    "start": "55320",
    "end": "61719"
  },
  {
    "text": "than I cover in this presentation I have like 60 70 different tools I can't cover all of them in 45 minutes so if you like",
    "start": "61719",
    "end": "68400"
  },
  {
    "text": "this session have a look later if there is more interesting stuff over there uh for you but let's simply get started",
    "start": "68400",
    "end": "75000"
  },
  {
    "text": "with the first two uh not to waste too much time so first tool is architecture related and we'll start with uh with Arc",
    "start": "75000",
    "end": "81759"
  },
  {
    "start": "78000",
    "end": "225000"
  },
  {
    "text": "unit so Arc unit you can basically use as uh like a junit based testing um",
    "start": "81759",
    "end": "88040"
  },
  {
    "text": "framework to test the architecture of your application so to start really simple we want to define a rule that",
    "start": "88040",
    "end": "94759"
  },
  {
    "text": "each class in a controller package which has a rest controller annotation which is used by spring for example should end",
    "start": "94759",
    "end": "102159"
  },
  {
    "text": "with controller and I can write that rule in in this way with Arc unit uh so",
    "start": "102159",
    "end": "107960"
  },
  {
    "text": "you see it's fairly simple I Define the package I search for some annotation and I check if they all have a controller",
    "start": "107960",
    "end": "114200"
  },
  {
    "text": "ending one um that's not the case we have one actually that's wrong named so",
    "start": "114200",
    "end": "121560"
  },
  {
    "text": "that one fails we get the proper error message and we know okay we need to fix this so I can name this one wrongly",
    "start": "121560",
    "end": "127000"
  },
  {
    "text": "named controller and then my architecture is fine of course use",
    "start": "127000",
    "end": "132599"
  },
  {
    "text": "better naming but you know that right um and then we can also Define other rules",
    "start": "132599",
    "end": "137640"
  },
  {
    "text": "let's say um nowadays we it's popular to have this modular mulet again we had the",
    "start": "137640",
    "end": "143760"
  },
  {
    "text": "microservice hype found out that wasn't the ideal way for a lot of uh problems so now we try to do more more analytic",
    "start": "143760",
    "end": "150400"
  },
  {
    "text": "applications again but then nicely divide them in separate like packages so with this we can actually check if the",
    "start": "150400",
    "end": "157360"
  },
  {
    "text": "code is nicely divided in that way so for example we say that everything in the payment package should only depend",
    "start": "157360",
    "end": "164680"
  },
  {
    "text": "on stuff in the common package or from one of the libraries that I'm using so it shouldn't depend on stuff in the user",
    "start": "164680",
    "end": "171040"
  },
  {
    "text": "package that's something that we want to separate and this way because it runs as part of your unit test it's checked",
    "start": "171040",
    "end": "176519"
  },
  {
    "text": "continuously so if someone by accident makes a mistake or you you have some new Junior developer or in general a new",
    "start": "176519",
    "end": "182760"
  },
  {
    "text": "developer joining your team this is automatically being checked um now for common it should only",
    "start": "182760",
    "end": "189840"
  },
  {
    "text": "depend on common so shouldn't depend on payment uh Etc so we can define a lot of different rules you can actually sort of",
    "start": "189840",
    "end": "197040"
  },
  {
    "text": "Define these layers to make it a little bit easier uh and just give them names so in this way I say okay I have this",
    "start": "197040",
    "end": "203560"
  },
  {
    "text": "controller layer uh it shouldn't be accessed by anything because of course nowadays everyone uses a JavaScript",
    "start": "203560",
    "end": "209799"
  },
  {
    "text": "front end instead of a Java based front end um so the controller layer is basically the first layer uh at the",
    "start": "209799",
    "end": "215920"
  },
  {
    "text": "front and the controller layer can depend on the surface layer because there we have other logic so this is",
    "start": "215920",
    "end": "221959"
  },
  {
    "text": "basically Arc unit in in really short and next we go to some more test",
    "start": "221959",
    "end": "227200"
  },
  {
    "start": "225000",
    "end": "1169000"
  },
  {
    "text": "related tooling and we start with a",
    "start": "227200",
    "end": "231319"
  },
  {
    "text": "utility um so basically uh if we if we normally write a test as we do something",
    "start": "232680",
    "end": "238560"
  },
  {
    "text": "async uh um which is happening here I have a really nasty feature basically that adds something to a list so I can",
    "start": "238560",
    "end": "245599"
  },
  {
    "text": "assert here that it's zero because it's happening async on the background then I do as sleep and after that basically I",
    "start": "245599",
    "end": "252720"
  },
  {
    "text": "know that there's something in my list or it should be there of course this is a little bit ugly uh this 2 second might",
    "start": "252720",
    "end": "259199"
  },
  {
    "text": "be enough for my laptop maybe it's not enough on the build server or if I get a FAS laptop we're now wasting a lot of",
    "start": "259199",
    "end": "265520"
  },
  {
    "text": "time because we are waiting for this to finish while it actually already finished and to solve this what we can",
    "start": "265520",
    "end": "271880"
  },
  {
    "text": "do is we can use a waity so we say await at most 2 seconds until some oh don't",
    "start": "271880",
    "end": "278720"
  },
  {
    "text": "remove the line until some condition so until the size is one so if we now run",
    "start": "278720",
    "end": "284039"
  },
  {
    "text": "these",
    "start": "284039",
    "end": "286280"
  },
  {
    "text": "two go on and so we see the old one took more",
    "start": "293560",
    "end": "300240"
  },
  {
    "text": "than two seconds and the normal one just one second of course is you don't win much one second but let's say you have a",
    "start": "300240",
    "end": "306720"
  },
  {
    "text": "lot of tests and maybe this value is 10 seconds instead of uh of two seconds",
    "start": "306720",
    "end": "311759"
  },
  {
    "text": "then it adds up after a while so I can really recommend if you do some asynchronous stuff and still have these threat sleeps in your test to replace",
    "start": "311759",
    "end": "319160"
  },
  {
    "text": "them with uh with a utility uh next one we going to dive into Yoko who knows Yoko",
    "start": "319160",
    "end": "326400"
  },
  {
    "text": "here so probably most of you use it it's it's being used used for basically coverage reports for your unit test",
    "start": "326400",
    "end": "332840"
  },
  {
    "text": "that's what most people know them for so sometimes you integrate it with Sonic Cube to have the coverage reports there",
    "start": "332840",
    "end": "337880"
  },
  {
    "text": "but actually you can do way more with your Coco and especially the Y Coco agent so let's see how that",
    "start": "337880",
    "end": "345160"
  },
  {
    "text": "works um so what we do is we start our normal application but this time we Supply that Joko agent you can just",
    "start": "346639",
    "end": "353240"
  },
  {
    "text": "download it from the internet on the Joko website it's there for free we specify where it should record the",
    "start": "353240",
    "end": "358759"
  },
  {
    "text": "coverage so in which file and we can add some extra stuff so I pen this fals in this case and I specify which classes it",
    "start": "358759",
    "end": "366479"
  },
  {
    "text": "should measure the coverage if you don't do this it will also measure the coverage for your libraries and the Java code Etc so you probably want to include",
    "start": "366479",
    "end": "374080"
  },
  {
    "text": "uh the bit more specific and then in the end I basically have my uh application",
    "start": "374080",
    "end": "379240"
  },
  {
    "text": "here so let's do this one",
    "start": "379240",
    "end": "384720"
  },
  {
    "text": "so we'll simply run the command uh we now have some application running in the background and let's see what's my",
    "start": "392520",
    "end": "399360"
  },
  {
    "text": "browser close 8080 it wasn't 8080 oh wait of course I",
    "start": "399360",
    "end": "406400"
  },
  {
    "text": "need to add the endpoint cor so just simply return some",
    "start": "406400",
    "end": "411840"
  },
  {
    "text": "basic information let not bothered too much with that one then we stop the application and then it writes back the",
    "start": "411840",
    "end": "418000"
  },
  {
    "text": "coverage I actually saw someone who uh um attended me like hey you can actually do this live so I need to stop it to",
    "start": "418000",
    "end": "425080"
  },
  {
    "text": "write the coverage there was actually solution now in an article some guy wrote that you can do this live so it will even do this for a live application",
    "start": "425080",
    "end": "432599"
  },
  {
    "text": "I still need to update my example to show that as well so uh if you want to do this on like a production example you",
    "start": "432599",
    "end": "439240"
  },
  {
    "text": "can uh actually do this live then we used the Joko CLI that's also available on the same website as the agent to",
    "start": "439240",
    "end": "446520"
  },
  {
    "text": "basically uh from that Target file that I have that J coco. xac which is like a",
    "start": "446520",
    "end": "452039"
  },
  {
    "text": "binary format it's not readable it creates a nice HTML report for me uh which is then in my target folder so",
    "start": "452039",
    "end": "459520"
  },
  {
    "text": "let's open this",
    "start": "459520",
    "end": "462198"
  },
  {
    "text": "one and I can click through and then basically um here I can",
    "start": "466400",
    "end": "471840"
  },
  {
    "text": "see what my coverage was so I I access the car get end point I didn't do any post uh requests or uh access the exit",
    "start": "471840",
    "end": "479960"
  },
  {
    "text": "method um so this was basically I just triggered the application myself so it's",
    "start": "479960",
    "end": "485479"
  },
  {
    "text": "like monkey testing or whatever um so maybe you're now wondering like yeah what's the use case for things like this",
    "start": "485479",
    "end": "491680"
  },
  {
    "text": "we for example used this uh we had a lot of acceptance test driven development scenarios written in cucumber and I was",
    "start": "491680",
    "end": "498319"
  },
  {
    "text": "curious how much of the code it would actually touch um so we ran it with this",
    "start": "498319",
    "end": "503800"
  },
  {
    "text": "agent enabled and we found out that quite large parts of the code weren't covered by the Cucumber tests",
    "start": "503800",
    "end": "510120"
  },
  {
    "text": "and then we dove in because I wasn't sure of your higher level test in general don't cover all the branches of",
    "start": "510120",
    "end": "517120"
  },
  {
    "text": "course but in this case it missed quite a lot so we investigated that a bit more and we found out it was actually that",
    "start": "517120",
    "end": "522680"
  },
  {
    "text": "code which we could remove it was no longer being used but with normal tools with with your normal junit coverage",
    "start": "522680",
    "end": "528480"
  },
  {
    "text": "yeah it always has coverage so it's used at least by your unit tests so that was",
    "start": "528480",
    "end": "533880"
  },
  {
    "text": "one scenario where we used it for so uh if you ever want to try it out it's really simple to uh to set",
    "start": "533880",
    "end": "540399"
  },
  {
    "text": "setup next one is a pie test so pie test is a form of mutation",
    "start": "540399",
    "end": "546640"
  },
  {
    "text": "testing actually I think if you ever uh want to do one Improvement for your tests I would say start with this one I",
    "start": "546640",
    "end": "553279"
  },
  {
    "text": "think it's the most interesting one so let's say we have production code like this it has some if else branches in it",
    "start": "553279",
    "end": "559360"
  },
  {
    "text": "don't bother too much about what's exactly going on that's that doesn't matter and we have a test which is this",
    "start": "559360",
    "end": "565160"
  },
  {
    "text": "one so I have a really simple test so it doesn't cover all the different brand is in my code by far now what I can do is I",
    "start": "565160",
    "end": "572720"
  },
  {
    "text": "can uh run P test it's",
    "start": "572720",
    "end": "578240"
  },
  {
    "text": "just uh a maven plugin you can also run it with Gradle or whatever it's also",
    "start": "579200",
    "end": "584399"
  },
  {
    "text": "available for multiple programming language so if you do JavaScript there is also one available it's uh it's used",
    "start": "584399",
    "end": "591279"
  },
  {
    "text": "more and more nowadays so we can run this and uh let's explain in the meantime what goes on then so it runs",
    "start": "591279",
    "end": "598880"
  },
  {
    "text": "the test on this code the the unit test I just show then it starts changing the",
    "start": "598880",
    "end": "604360"
  },
  {
    "text": "code and that it's called mutants so it makes several mutant so for example the bigger than it changes it in a smaller",
    "start": "604360",
    "end": "610720"
  },
  {
    "text": "than and then it runs the test again and see if the test still passes if the test still passes then basically your test",
    "start": "610720",
    "end": "617279"
  },
  {
    "text": "isn't really good because code is being changed without test failing and it has a lot of these variations so for example",
    "start": "617279",
    "end": "623880"
  },
  {
    "text": "uh here it can return zero instead of a fixed number Etc there's several mutations on on the same code basee and",
    "start": "623880",
    "end": "631160"
  },
  {
    "text": "for each of them it runs the test again so I would recommend running this like as a nightly job not for each commit",
    "start": "631160",
    "end": "637360"
  },
  {
    "text": "because it runs like eight times or something the amount of tests you normally run so it is it's not something",
    "start": "637360",
    "end": "642480"
  },
  {
    "text": "that's super fast and then it creates uh of course an HTML report which we can see you can",
    "start": "642480",
    "end": "649519"
  },
  {
    "text": "also integrate this I think still in in Sonic Cube and then we can see what went on so",
    "start": "649519",
    "end": "657120"
  },
  {
    "text": "here we see what was nicely covered and what not you can see what changes it made so for example on line 11 here um",
    "start": "657120",
    "end": "664760"
  },
  {
    "text": "it returns zero instead of uh the variable that I put in uh and it and it",
    "start": "664760",
    "end": "670120"
  },
  {
    "text": "made more changes so in this case it made all these changes you can also see which mutators are active so what things",
    "start": "670120",
    "end": "675800"
  },
  {
    "text": "it tries to change and you can also configure them if you want to have less enabled by default or not so this for me",
    "start": "675800",
    "end": "681920"
  },
  {
    "text": "is really a good way to make sure your unit tests are of proper quality I mean sometimes you see that people try to get",
    "start": "681920",
    "end": "689279"
  },
  {
    "text": "coverage to make management happy I mean we all know that 80% rule to satisfy management basically but it doesn't say",
    "start": "689279",
    "end": "695079"
  },
  {
    "text": "anything about the quality of your test if you don't have any asserts that's basically a quite useless metric with",
    "start": "695079",
    "end": "701320"
  },
  {
    "text": "this one you can actually see um if tests are being done properly or not and it also helps you as a developer I mean",
    "start": "701320",
    "end": "707760"
  },
  {
    "text": "if you have quite complex code with a lot of if else branches in it and you refactor it a bit or someone else makes",
    "start": "707760",
    "end": "713279"
  },
  {
    "text": "changes to it later maybe you forget one of these branches and it's hard to reason which one uh you miss but with",
    "start": "713279",
    "end": "719760"
  },
  {
    "text": "this tool it's basically automated for you the next one we're going to look at",
    "start": "719760",
    "end": "726440"
  },
  {
    "text": "is test containers anyone here familiar with Docker and containers guess everyone by",
    "start": "726440",
    "end": "732279"
  },
  {
    "text": "now right uh so with test containers we can basically automatically spin up a",
    "start": "732279",
    "end": "738160"
  },
  {
    "text": "container during our test so in this case I have a simple MySQL application and I want to spin up a MySQL Docker",
    "start": "738160",
    "end": "744720"
  },
  {
    "text": "container so for MySQL there is a standard object that you can use to instance shade whichever Docker image",
    "start": "744720",
    "end": "750440"
  },
  {
    "text": "you want but you can use any container so also if you make someone your some container yourself you can just use the",
    "start": "750440",
    "end": "756040"
  },
  {
    "text": "general container and spin it up this is mostly helpful uh for example with databases or messaging services like",
    "start": "756040",
    "end": "763440"
  },
  {
    "text": "Kfar rbit mq if you want to test them in your unit test and also want to test them on your build server it's easy if",
    "start": "763440",
    "end": "769959"
  },
  {
    "text": "the container is spun up automatically else you need to install my SQL locally need to install it on the build server",
    "start": "769959",
    "end": "775800"
  },
  {
    "text": "Etc with this it's all being done uh uh by default so it spins it up before your",
    "start": "775800",
    "end": "781160"
  },
  {
    "text": "container starts or before your test starts and tears it down later so we can",
    "start": "781160",
    "end": "786199"
  },
  {
    "text": "retrieve the URL the username password and then create a connection based on that uh I I created as simple as",
    "start": "786199",
    "end": "794240"
  },
  {
    "text": "possible example so I didn't use too many fancy Frameworks on this one it just uh puts some data in the database",
    "start": "794240",
    "end": "800760"
  },
  {
    "text": "and then retrieves it so we see automatically this container is being created",
    "start": "800760",
    "end": "808800"
  },
  {
    "text": "uh so this one's the MySQL one it waits for the database",
    "start": "812120",
    "end": "817560"
  },
  {
    "text": "connection and then normally it should also finish the test ah there it is and so this way you can easily integrate all",
    "start": "826360",
    "end": "832800"
  },
  {
    "text": "kinds of tools that you want uh as Docker containers into your application",
    "start": "832800",
    "end": "839839"
  },
  {
    "text": "um so next uh one I actually going to try and cover multiple ones at the same time so I'm going to show you how to use",
    "start": "841959",
    "end": "849320"
  },
  {
    "text": "Gatling Gatling is a Performance Tool anyone here using Gatling anyone using J",
    "start": "849320",
    "end": "854600"
  },
  {
    "text": "meter okay so if you haven't looked at the getlink yet and you're using J meter I can highly recommend it I worked with",
    "start": "854600",
    "end": "860759"
  },
  {
    "text": "J meter in the past as well uh but I really like Gatling a lot better so with Gatling we can write the",
    "start": "860759",
    "end": "868000"
  },
  {
    "text": "performance-based test so let's have a look at the code first so I I write a so-called",
    "start": "868000",
    "end": "875320"
  },
  {
    "text": "simulation uh so this is my endpoint basically then I write the scenario I do",
    "start": "875320",
    "end": "880639"
  },
  {
    "text": "the scenario in a loop so it's executed five times I go to an endpoint I check if the response is 200 okay I do a pause",
    "start": "880639",
    "end": "888040"
  },
  {
    "text": "call another endpoint Etc so you can do whatever you want in the past it had a Scala DSL nowadays it's all Java DSL",
    "start": "888040",
    "end": "894880"
  },
  {
    "text": "which you can use uh if you prefer it scolar you can still use that one but I prefer Java and then you can specify",
    "start": "894880",
    "end": "902639"
  },
  {
    "text": "different ways of ramping up the number of users I I use the ramp users because I like it it starts with zero users then",
    "start": "902639",
    "end": "909519"
  },
  {
    "text": "um after about 5 Seconds it has like four users and after 10 seconds it has about eight that's how ramp users",
    "start": "909519",
    "end": "915399"
  },
  {
    "text": "basically works so this is all you need to test a simple rest",
    "start": "915399",
    "end": "920880"
  },
  {
    "text": "endpoint uh let's see because I also need to start the application so it's a",
    "start": "920920",
    "end": "926320"
  },
  {
    "text": "simple application again to uh access some car",
    "start": "926320",
    "end": "931319"
  },
  {
    "text": "data and then I need to run",
    "start": "934440",
    "end": "941839"
  },
  {
    "text": "it but not before we also have a look at um mission control so you can use them",
    "start": "943600",
    "end": "949800"
  },
  {
    "text": "separately the only reason I use them both at the same time is basically to be able to quicker show more tools to you",
    "start": "949800",
    "end": "955959"
  },
  {
    "text": "so mission control is a way to see a lot of information of your application uh and it can use flight recorder as well",
    "start": "955959",
    "end": "962560"
  },
  {
    "text": "flight recorder is like a profiling tool which has really low overhead uh on your application before um it was available",
    "start": "962560",
    "end": "970120"
  },
  {
    "text": "as part of the jdk but you had to pay for it when it was uh used on production nowadays it's no longer part you need to",
    "start": "970120",
    "end": "975959"
  },
  {
    "text": "download it separately but uh it's free to use uh everywhere so if we start a recording uh we can say how long it",
    "start": "975959",
    "end": "983079"
  },
  {
    "text": "takes Etc we can say how much detail it should uh um cover of course the more",
    "start": "983079",
    "end": "988240"
  },
  {
    "text": "detail you name enable the more overhead will be on the application if you do it really minimal it has like a 1 to 3%",
    "start": "988240",
    "end": "995240"
  },
  {
    "text": "overhead on your application so it's it's quite effective uh it's like if you're used to visual VM or something",
    "start": "995240",
    "end": "1001160"
  },
  {
    "text": "you can do more or less the same things with this tool so let's start at recording and in the meantime quickly start my getlink test as well",
    "start": "1001160",
    "end": "1010160"
  },
  {
    "text": "so we see how many users are active and how many users are waiting so four we saw how many requests were okay and not",
    "start": "1026400",
    "end": "1032438"
  },
  {
    "text": "okay of course this still looks quite basic and we see that in the end it generated this uh index file so have a",
    "start": "1032439",
    "end": "1039798"
  },
  {
    "text": "look at that so for folks who are used to J meter J meter takes a bit of time to get used to",
    "start": "1039799",
    "end": "1046760"
  },
  {
    "text": "and then afterwards for me always took quite some time to create some nice reports out of it CU most of the time",
    "start": "1046760",
    "end": "1052120"
  },
  {
    "text": "you do these things for management and they like fancy graphs and plots and stuff like that um if you use Gatling",
    "start": "1052120",
    "end": "1059240"
  },
  {
    "text": "this you get for free basically the report just comes out so I can see the number of requests how fast the response",
    "start": "1059240",
    "end": "1065799"
  },
  {
    "text": "times are Max and mean the percentiles as well which is often used in in companies I can see how many users were",
    "start": "1065799",
    "end": "1072720"
  },
  {
    "text": "active during the simulation because my Loop was quite short actually the first",
    "start": "1072720",
    "end": "1077799"
  },
  {
    "text": "user is already finished before the last us will start so that's why you only see six instead of the I think it was eight",
    "start": "1077799",
    "end": "1083240"
  },
  {
    "text": "that I specified um we see response time distribution a lot of detail you can",
    "start": "1083240",
    "end": "1088640"
  },
  {
    "text": "basically see for free uh and then it's even more detail uh in here so you get a lot of information there so I can highly",
    "start": "1088640",
    "end": "1095480"
  },
  {
    "text": "recommend having a look at uh at this one if you need to do performance testing oh I wanted first show Mission",
    "start": "1095480",
    "end": "1101520"
  },
  {
    "text": "Control in the me time mission control um had the analysis which was done with the flight recorder available uh and it",
    "start": "1101520",
    "end": "1108919"
  },
  {
    "text": "out of the box already gives you some like warnings so this one for example says Heap content most of the Heap was",
    "start": "1108919",
    "end": "1114440"
  },
  {
    "text": "used by only a few classes in my case that's correct because I have a really simple application if you have a big",
    "start": "1114440",
    "end": "1120039"
  },
  {
    "text": "application and the Heap is still used by a few classes then probably that's something you want to investigate and see why that happened um next to that I",
    "start": "1120039",
    "end": "1128000"
  },
  {
    "text": "can see a lot of information so I can see which exceptions happened um I can see when which garbage collection took",
    "start": "1128000",
    "end": "1134520"
  },
  {
    "text": "place how large the Heap size was and all that that kind of information um I",
    "start": "1134520",
    "end": "1140440"
  },
  {
    "text": "can see which method took the longest in my case of course it's a simple example but if you have a big application for",
    "start": "1140440",
    "end": "1146720"
  },
  {
    "text": "example I did is on an application I worked on found out that a lot of time was spent in a specific method then we",
    "start": "1146720",
    "end": "1152799"
  },
  {
    "text": "found out that there was actually a for Loop inside a for Loop which we could extract to before the first for Loop uh",
    "start": "1152799",
    "end": "1159000"
  },
  {
    "text": "and that saved us quite some time so you can get a lot of details out of this so if you want to do some profiling or",
    "start": "1159000",
    "end": "1165400"
  },
  {
    "text": "performance analysis I can really recommend this one okay then we go to more implementation",
    "start": "1165400",
    "end": "1172440"
  },
  {
    "start": "1169000",
    "end": "1995000"
  },
  {
    "text": "related tools and we'll start with equals verifier anyone here who wrote their own equals method in the",
    "start": "1172440",
    "end": "1178159"
  },
  {
    "text": "past see a few do you think it was",
    "start": "1178159",
    "end": "1183000"
  },
  {
    "text": "correct I hear some people laughing maybe the others are quite certain that it was correct uh so let's say we create",
    "start": "1184640",
    "end": "1191600"
  },
  {
    "text": "a simple one I have a student class and I created an equals method for me looked quite okay right it compares the first",
    "start": "1191600",
    "end": "1199039"
  },
  {
    "text": "and the last name what could go wrong and then I use equals verifier so with equals verifier I can basically say okay",
    "start": "1199039",
    "end": "1205600"
  },
  {
    "text": "for that class verify if something went okay um and then I check in my case I",
    "start": "1205600",
    "end": "1211440"
  },
  {
    "text": "expected that there is an error message because I found out and it says hash code should be equal okay so then I was",
    "start": "1211440",
    "end": "1217320"
  },
  {
    "text": "like okay how do I need to improve my student to make it actually comply so",
    "start": "1217320",
    "end": "1223000"
  },
  {
    "text": "this is the fixed student so I added final uh to the first name and last name",
    "start": "1223000",
    "end": "1228360"
  },
  {
    "text": "and basically I added a lot of stuff to the equals method so this is a proper equals method and we can check that by",
    "start": "1228360",
    "end": "1236240"
  },
  {
    "text": "using the um equals verifier again and check that it doesn't throw any exceptions so this is a good method so",
    "start": "1236240",
    "end": "1243320"
  },
  {
    "text": "whenever you write an equals method really consider using this tool to make sure that it's a proper",
    "start": "1243320",
    "end": "1250360"
  },
  {
    "text": "one um and then we go to graphql",
    "start": "1252000",
    "end": "1257440"
  },
  {
    "text": "so what you often see if um if you have rest end points is that either um you",
    "start": "1259480",
    "end": "1266200"
  },
  {
    "text": "retrieve way too much information or too few let's say we have a huge object a student with all the courses that that",
    "start": "1266200",
    "end": "1273440"
  },
  {
    "text": "person followed in the past all the books the person read in the past Etc but on the first page I only want to",
    "start": "1273440",
    "end": "1279600"
  },
  {
    "text": "display his first and last name so it's quite overhead if I call that endpoint and for a student maybe it's not that",
    "start": "1279600",
    "end": "1285320"
  },
  {
    "text": "much but I've seen endpoints retrieving multiple Mega by only to display like one string and of course I can add like",
    "start": "1285320",
    "end": "1291840"
  },
  {
    "text": "a second endpoint for just that string but then you probably end up with a lot of end points uh with graphql you can",
    "start": "1291840",
    "end": "1298440"
  },
  {
    "text": "basically filter this so it's a little bit like SQL for your database so you sent like a query I want this",
    "start": "1298440",
    "end": "1304360"
  },
  {
    "text": "information back and then graphql make sure you get that information back uh so",
    "start": "1304360",
    "end": "1310000"
  },
  {
    "text": "here is an example I have an account with a user underneath it so in the first one I only request the account so",
    "start": "1310000",
    "end": "1316640"
  },
  {
    "text": "I get back the account and number but we can see here that the user is n because",
    "start": "1316640",
    "end": "1322640"
  },
  {
    "text": "I only requested the account then here I do more or less the same so I request the account but I also",
    "start": "1322640",
    "end": "1329000"
  },
  {
    "text": "say I want to have the user and the user's first name and the last name and then I can see okay uh first name and",
    "start": "1329000",
    "end": "1336320"
  },
  {
    "text": "last name are filled in uh so this is really like easy from a user if you do",
    "start": "1336320",
    "end": "1341840"
  },
  {
    "text": "the requests of course creating the endpoint is a bit more complicated because you need to support these kind",
    "start": "1341840",
    "end": "1347279"
  },
  {
    "text": "of things it's not as easy as is creating a simple rest end point uh but if you uh have different requests and",
    "start": "1347279",
    "end": "1353279"
  },
  {
    "text": "different um data that you want to show in the front end use this one uh there is support for Java so if you do a Java",
    "start": "1353279",
    "end": "1360120"
  },
  {
    "text": "to Java call but also all the major JavaScript Frameworks support this so it's widely used by",
    "start": "1360120",
    "end": "1368039"
  },
  {
    "text": "now next one is handle bars anyone got the recruiter emails",
    "start": "1369159",
    "end": "1374760"
  },
  {
    "text": "recently for a new job so you're curious probably right how they uh how they work recruiters cuz",
    "start": "1374760",
    "end": "1381080"
  },
  {
    "text": "maybe after this conference you're like ah I'm done with all the technology I become a recruiter myself",
    "start": "1381080",
    "end": "1386520"
  },
  {
    "text": "so I'm help I'm going to help you with that so you can use tools like handlebars or Pebble templates which is",
    "start": "1386520",
    "end": "1392520"
  },
  {
    "text": "a bit more advanced even uh so depending on your use case pick one or the other and it's like HTML but then with some",
    "start": "1392520",
    "end": "1399799"
  },
  {
    "text": "extra things in it like the title and we see here what was it here it's like a for Loop in it um and these are",
    "start": "1399799",
    "end": "1405840"
  },
  {
    "text": "basically automatically filled by our Java code so let's look at how that Java code looks",
    "start": "1405840",
    "end": "1412279"
  },
  {
    "text": "like um so here the person we fill in my name and then we create like a list of",
    "start": "1412279",
    "end": "1417720"
  },
  {
    "text": "all the expertise of course gu VM 20 years j2e some recruiters think it's",
    "start": "1417720",
    "end": "1423679"
  },
  {
    "text": "still relevant and of course you need like a really good function title",
    "start": "1423679",
    "end": "1428960"
  },
  {
    "text": "right um and then we can just run this one in my case I just output it to uh",
    "start": "1428960",
    "end": "1434120"
  },
  {
    "text": "the console but you can also output it to an HTML file or whatever you prefer",
    "start": "1434120",
    "end": "1439760"
  },
  {
    "text": "then it fills uh in all the variables basically and here you see what goes wrong for most recruiters right if they",
    "start": "1439760",
    "end": "1445760"
  },
  {
    "text": "again mess up your name H they just forgot to fill in everything of the template and so this of course I I",
    "start": "1445760",
    "end": "1453600"
  },
  {
    "text": "explain it a bit silly but a lot of systems nowadays they have some email functionality um which also is HTML",
    "start": "1453600",
    "end": "1460520"
  },
  {
    "text": "based where you need to fill in some details and of course you can do normal strings and stuff in Java uh but with",
    "start": "1460520",
    "end": "1465799"
  },
  {
    "text": "this templating engine it's actually relatively easy to fill in everything that you want yeah of",
    "start": "1465799",
    "end": "1473600"
  },
  {
    "text": "course um so the question is why not free marker yeah of course if you have another tool that does the same job fine",
    "start": "1478520",
    "end": "1483799"
  },
  {
    "text": "for me it's uh pick whatever you want but I think free marker maybe is a bit",
    "start": "1483799",
    "end": "1488840"
  },
  {
    "text": "bigger also as a dependency because it has a lot of functionality this is maybe relatively small but I'm not sure I",
    "start": "1488840",
    "end": "1494000"
  },
  {
    "text": "didn't look into the details indeed for some of the tools that I show there are other Alternatives which might do the",
    "start": "1494000",
    "end": "1500640"
  },
  {
    "text": "job just as well or maybe even better um next one is a Java",
    "start": "1500640",
    "end": "1509120"
  },
  {
    "text": "poet so let's say we want to create a Java file which looks like this so again",
    "start": "1510880",
    "end": "1516440"
  },
  {
    "text": "like a student with a first name and a last name of course you probably created a Java class yourself right you can do",
    "start": "1516440",
    "end": "1522520"
  },
  {
    "text": "this but there is an alternative way to do it you can also do it like this with Java poet so I can create a Setter",
    "start": "1522520",
    "end": "1529120"
  },
  {
    "text": "I get her Constructor and in the end I add it all",
    "start": "1529120",
    "end": "1534520"
  },
  {
    "text": "together in my student class uh and then do some logic and it's automatically being generated this file",
    "start": "1534520",
    "end": "1541640"
  },
  {
    "text": "and compared to uh the one I showed before don't do this on Monday on your",
    "start": "1541640",
    "end": "1547000"
  },
  {
    "text": "code base because probably your colleagues will be quite mad at me um because it's not you don't you normally",
    "start": "1547000",
    "end": "1553360"
  },
  {
    "text": "use this in like a standard project but a lot of the tools and libraries that you use do this under watch to",
    "start": "1553360",
    "end": "1558600"
  },
  {
    "text": "dynamically generate classes so if you ever create like a library or a framework yourself and have the need to",
    "start": "1558600",
    "end": "1564640"
  },
  {
    "text": "dynamically create these kind of things then you should consider this so it's just something you uh yeah might have to",
    "start": "1564640",
    "end": "1570799"
  },
  {
    "text": "use in the",
    "start": "1570799",
    "end": "1573278"
  },
  {
    "text": "future and then we go to uh lip phone number oh this is always one that I",
    "start": "1576399",
    "end": "1583440"
  },
  {
    "text": "doubt if I should actually show you because basically you have these websites right and they ask you for phone number but I don't like to be",
    "start": "1583440",
    "end": "1590159"
  },
  {
    "text": "called basically it's annoying so I fill in a wrong phone number and mostly just",
    "start": "1590159",
    "end": "1595440"
  },
  {
    "text": "some random number not from my mother or whatever CU she doesn't like that either um cuz most websites actually",
    "start": "1595440",
    "end": "1602320"
  },
  {
    "text": "they don't really parse the number they just accept more or less anything as long as it has like your country code or",
    "start": "1602320",
    "end": "1608440"
  },
  {
    "text": "whatever with lip phone number you can actually find out if a phone number is a valid phone number and if it's like a landline number I don't know if that's",
    "start": "1608440",
    "end": "1614640"
  },
  {
    "text": "still a thing in in Australia but back at home some old people and myself still have a landline number um and you can",
    "start": "1614640",
    "end": "1621600"
  },
  {
    "text": "actually see from which city it is so vanai is a city in the Netherlands um and I can also check like if that phone",
    "start": "1621600",
    "end": "1628039"
  },
  {
    "text": "number is valid um and if it's like a mobile number I can see what the carrier",
    "start": "1628039",
    "end": "1633679"
  },
  {
    "text": "is so in my case Capen is is a Dutch uh carrier um and I can use all kinds of",
    "start": "1633679",
    "end": "1639120"
  },
  {
    "text": "formats so this one this one this one I can just check any number that comes in",
    "start": "1639120",
    "end": "1644440"
  },
  {
    "text": "so if you ever need some validation for phone numbers and you don't like Expressions then I can recommend having",
    "start": "1644440",
    "end": "1650399"
  },
  {
    "text": "a look at this one next one we're going to is time",
    "start": "1650399",
    "end": "1658640"
  },
  {
    "text": "fold I think I still have application running somewhere yeah let's scill that",
    "start": "1659120",
    "end": "1666399"
  },
  {
    "text": "one so time fold is basically um uh used as a way to schedule all kinds of things",
    "start": "1666399",
    "end": "1674640"
  },
  {
    "text": "or calculate things like you can use it if you have a shipping company and you want to deliver packages as efficient as",
    "start": "1674640",
    "end": "1680600"
  },
  {
    "text": "possible calculate the optimal route uh so all kinds of these challenging um uh",
    "start": "1680600",
    "end": "1686200"
  },
  {
    "text": "things that you need to calculate you can do with with time fold in the past was called opop planner but they they",
    "start": "1686200",
    "end": "1691440"
  },
  {
    "text": "changed the name and I actually use it it to uh show you how you can plan a",
    "start": "1691440",
    "end": "1696720"
  },
  {
    "text": "conference and plan the sessions in a conference so I added some rules for example that a room can only have one",
    "start": "1696720",
    "end": "1703840"
  },
  {
    "text": "session at a time would be quite weird if there was another speaker next to me telling a different story right um for",
    "start": "1703840",
    "end": "1711159"
  },
  {
    "text": "speakers also a speaker can only do one session at a time it's a bit weird if I need to be in two rooms at the same time",
    "start": "1711159",
    "end": "1717880"
  },
  {
    "text": "um if I have multiple sessions I I prefer to do them in the same room because I know where the audio is and",
    "start": "1717880",
    "end": "1723320"
  },
  {
    "text": "all that kind of stuff so you see it's all relatively easy rules quite easy to uh set up um and if we have a speaker uh",
    "start": "1723320",
    "end": "1731840"
  },
  {
    "text": "who has multiple sessions mean that speakers should be grateful and for that we punish him or her a little bit and do",
    "start": "1731840",
    "end": "1738320"
  },
  {
    "text": "all the sessions back to back basically a nice extra Challenge and then we have one where I say okay um here everything",
    "start": "1738320",
    "end": "1745960"
  },
  {
    "text": "of course is in English but in the nland we had some conferences in the past where some of the sessions were in Dutch",
    "start": "1745960",
    "end": "1751240"
  },
  {
    "text": "and some in English uh and it would be nice if they were separated in separate rooms so that English uh people could",
    "start": "1751240",
    "end": "1757320"
  },
  {
    "text": "just go to the English sessions and the people who understood D Dutch could decide to not go to",
    "start": "1757320",
    "end": "1763240"
  },
  {
    "text": "them so let's start the application",
    "start": "1763240",
    "end": "1769158"
  },
  {
    "text": "and look it up in the browser should be up by now I guess y so",
    "start": "1782120",
    "end": "1788080"
  },
  {
    "text": "uh these are the the slots basically that we have these are the different rooms that we have and underneath we have a lot of sessions a lot and then I",
    "start": "1788080",
    "end": "1796519"
  },
  {
    "text": "simply press solve and it takes a little bit of time and I have my program",
    "start": "1796519",
    "end": "1801880"
  },
  {
    "text": "done um but then when I was looking I was like hey this is a bit weird I have room here a time slot two sessions in",
    "start": "1801880",
    "end": "1808760"
  },
  {
    "text": "the same time slot anyone an idea how that",
    "start": "1808760",
    "end": "1813840"
  },
  {
    "text": "happened this one was my own fault basically I have more sessions than I have room available so I basically uh",
    "start": "1813840",
    "end": "1820840"
  },
  {
    "text": "made it hard you see here the score is also minus two hard so there were two cases it couldn't properly solve uh so",
    "start": "1820840",
    "end": "1828440"
  },
  {
    "text": "yeah you should solve them by hand or make sure you have either less sessions or more rooms",
    "start": "1828440",
    "end": "1833799"
  },
  {
    "text": "available so this one I put in on purpose so that was easy to fix but then I had another one like this session is",
    "start": "1833799",
    "end": "1839840"
  },
  {
    "text": "by S Mock and this one is by S mock but here there is none by S Mo and we said should be back to back if a speaker has",
    "start": "1839840",
    "end": "1846360"
  },
  {
    "text": "multiple sessions so then I was like hey how did this happen and then I looked at the rule and I defined the rule that a",
    "start": "1846360",
    "end": "1854200"
  },
  {
    "text": "session was back to back as being within like a 30 minute interval",
    "start": "1854200",
    "end": "1859240"
  },
  {
    "text": "but there was a break in between of more than 30 minutes so it doesn't consider it as back toback anymore uh so if you",
    "start": "1859240",
    "end": "1864440"
  },
  {
    "text": "use software like this you still need to make sure that the rules that you specify are good because of course I",
    "start": "1864440",
    "end": "1869600"
  },
  {
    "text": "mean there are no computer mistakes it's human mistakes in the end and this was just me defining a rule in the wrong way",
    "start": "1869600",
    "end": "1875880"
  },
  {
    "text": "so uh once you define the rules properly it gives the good results that you you",
    "start": "1875880",
    "end": "1881320"
  },
  {
    "text": "waiting for then the next one we'll cover is",
    "start": "1881320",
    "end": "1886399"
  },
  {
    "text": "Apache Spark I'll quickly uh start the test because it takes a little bit of",
    "start": "1886399",
    "end": "1891840"
  },
  {
    "text": "time and then explain how it",
    "start": "1891840",
    "end": "1896200"
  },
  {
    "text": "works so Apachi spark is basically a way to parall parallelize your processing so",
    "start": "1897360",
    "end": "1902799"
  },
  {
    "text": "let's say you have a lot of machines uh and you have heavy algorithms or a lot of data that you need to process that",
    "start": "1902799",
    "end": "1908200"
  },
  {
    "text": "you want to distribute that work across those multiple machines and Spark helps you in doing that uh I run it on a",
    "start": "1908200",
    "end": "1914480"
  },
  {
    "text": "single machine because I only have one laptop with me but it's the same if do it for multiple machines um so in my",
    "start": "1914480",
    "end": "1921000"
  },
  {
    "text": "case I I wanted to have an example with a bigger data set so what I did was I downloaded all the reviews of Amazon of",
    "start": "1921000",
    "end": "1927240"
  },
  {
    "text": "the last I don't know how many years that's 29 gabyt 41 million records and I",
    "start": "1927240",
    "end": "1932399"
  },
  {
    "text": "start processing them so there was a little bit of of logic in here but most",
    "start": "1932399",
    "end": "1937480"
  },
  {
    "text": "important is in the end the where I filter it so basically I read all the review texts and I searched for Java",
    "start": "1937480",
    "end": "1943799"
  },
  {
    "text": "programming language you guys did a bad job cuz actually they only 28 so you should",
    "start": "1943799",
    "end": "1949880"
  },
  {
    "text": "write more reviews of Java books um let's see how far is the running",
    "start": "1949880",
    "end": "1957360"
  },
  {
    "text": "going it's still running um and actually so I I say it's",
    "start": "1957360",
    "end": "1963399"
  },
  {
    "text": "good for parying work but in this case I also quite liked it because I tried to create the same example with plain Java",
    "start": "1963399",
    "end": "1969480"
  },
  {
    "text": "but with plain Java I always first need to Google how to read the file and everything and once I had set that up",
    "start": "1969480",
    "end": "1974799"
  },
  {
    "text": "after like I don't know how many minutes it crashed because yeah it's 29 GB and I don't have that amount of memory in my",
    "start": "1974799",
    "end": "1980440"
  },
  {
    "text": "laptop so even for yeah some heavy stuff on one machine this this could be quite helpful and as you see it finished",
    "start": "1980440",
    "end": "1987559"
  },
  {
    "text": "processing in a bit more than one minute which I think is quite good for so much data that has been",
    "start": "1987559",
    "end": "1994440"
  },
  {
    "text": "processed so then we go to the next one which is O dependency",
    "start": "1994440",
    "end": "2000360"
  },
  {
    "start": "1995000",
    "end": "2190000"
  },
  {
    "text": "check uh so this a simple again a maven uh uh plugin which you can install and",
    "start": "2000360",
    "end": "2005840"
  },
  {
    "text": "then you can run it so let's run that",
    "start": "2005840",
    "end": "2010480"
  },
  {
    "text": "one so what happens is there are some uh uh sources out there that have a a big",
    "start": "2020120",
    "end": "2025240"
  },
  {
    "text": "like database of all the security vulnerabilities of the last couple of years OAS dependency check will download",
    "start": "2025240",
    "end": "2031320"
  },
  {
    "text": "those reports cash them locally and then analyze if your application has one of these vulnerabilities",
    "start": "2031320",
    "end": "2038000"
  },
  {
    "text": "um so like first time you do this it takes quite a while because it's like gigabytes of reports it will download so",
    "start": "2038000",
    "end": "2043840"
  },
  {
    "text": "make sure you don't have these like stateless builds going on and having it download every time again uh because",
    "start": "2043840",
    "end": "2049800"
  },
  {
    "text": "that can take quite a bit but after this has been uh processed it should be relatively quick um and then basically",
    "start": "2049800",
    "end": "2056200"
  },
  {
    "text": "it shows you the vulnerabilities that you have maybe now it's so I created a local",
    "start": "2056200",
    "end": "2062118"
  },
  {
    "text": "caching in in Docker because I don't want to use the internet because it's not always stable at conferences but it",
    "start": "2062119",
    "end": "2068118"
  },
  {
    "text": "looks like it still tries to maybe do a bit more than I want",
    "start": "2068119",
    "end": "2073158"
  },
  {
    "text": "it so let's leave leave this running in the background and see later how it uh results but it should give a report uh",
    "start": "2073159",
    "end": "2080240"
  },
  {
    "text": "on all the dependencies that have known vulnerabilities including the severity and stuff like that and it also creates",
    "start": "2080240",
    "end": "2085440"
  },
  {
    "text": "like an HTML report for you if you prefer that to just plain console output",
    "start": "2085440",
    "end": "2090520"
  },
  {
    "text": "let's look at another one in the meantime then maybe this one finishes uh once we're done with that one so Pai",
    "start": "2090520",
    "end": "2098119"
  },
  {
    "text": "is a um a tool basically to Define rules",
    "start": "2098119",
    "end": "2103680"
  },
  {
    "text": "for passwords so let's say you need some password validation when a user adds new",
    "start": "2103680",
    "end": "2109560"
  },
  {
    "text": "passwords to your application you could do like a RX and say okay it needs to have so many lowercase characters so",
    "start": "2109560",
    "end": "2116119"
  },
  {
    "text": "many uppercase characters reared characters numbers Etc but then yeah you get a regx I don't like them I can't",
    "start": "2116119",
    "end": "2122839"
  },
  {
    "text": "read them um and you have tools like this which make it way easier so I can find the rules in like a normal language",
    "start": "2122839",
    "end": "2130119"
  },
  {
    "text": "can say okay it should be between eight and 50 characters at least two uppercase at least three digits at least one weird",
    "start": "2130119",
    "end": "2137320"
  },
  {
    "text": "character um I can for example say it shouldn't be uh sequential so if I have",
    "start": "2137320",
    "end": "2143119"
  },
  {
    "text": "like three numbers it shouldn't be 1 two three that's not allowed but like 1",
    "start": "2143119",
    "end": "2148160"
  },
  {
    "text": "five8 it's okay um and it shouldn't contain any WID",
    "start": "2148160",
    "end": "2153599"
  },
  {
    "text": "space then if a password is being added I can use that validator and simply validate the new password and check if",
    "start": "2153599",
    "end": "2159720"
  },
  {
    "text": "it's valid and if it's not valid I can also retrieve all the messages so in this case uh yeah I forgot to follow",
    "start": "2159720",
    "end": "2166079"
  },
  {
    "text": "some of the rules and if you then later do like a proper password like something like this then it's valid this one as",
    "start": "2166079",
    "end": "2172640"
  },
  {
    "text": "well so if you ever need some password validation I can uh recommend having a look at this one in the meantime my OS",
    "start": "2172640",
    "end": "2179760"
  },
  {
    "text": "dependency thing uh finished and it found uh some issue with lock for J",
    "start": "2179760",
    "end": "2185000"
  },
  {
    "text": "apparently some security thingy in lock for maybe you heard of it um and then we'll go to um the more",
    "start": "2185000",
    "end": "2193359"
  },
  {
    "start": "2190000",
    "end": "2566000"
  },
  {
    "text": "build related tools so first one is uh is renovate so the oil dependency check is",
    "start": "2193359",
    "end": "2199960"
  },
  {
    "text": "quite good at detecting issues in your dependencies but it might be even better to try to prevent them and make sure",
    "start": "2199960",
    "end": "2206400"
  },
  {
    "text": "that you use the latest versions of your tools and libraries basically your dependencies and automatically update",
    "start": "2206400",
    "end": "2211920"
  },
  {
    "text": "them and for that there are different tools available so you have the panda bot and get up and there are other yeah",
    "start": "2211920",
    "end": "2219079"
  },
  {
    "text": "build tools that have their own tools um I set up renovate because it's simply",
    "start": "2219079",
    "end": "2224680"
  },
  {
    "text": "one that uh yeah that's okay but you can use anyone I think they work more or less the same maybe a little bit",
    "start": "2224680",
    "end": "2230359"
  },
  {
    "text": "different configuration options um okay internet's a little bit slow",
    "start": "2230359",
    "end": "2236839"
  },
  {
    "text": "doesn't matter so basically what renovate does it it create pool requests when there is a new version of your dependency so in my case job Runner has",
    "start": "2236839",
    "end": "2244040"
  },
  {
    "text": "a new version 721 and I'm still using six Street and the nice thing is you can completely",
    "start": "2244040",
    "end": "2249880"
  },
  {
    "text": "integrate this in your build setup so what we did at work is these pool requests are created a build is run",
    "start": "2249880",
    "end": "2255960"
  },
  {
    "text": "against the pool request and if we see it's a green build then basically we can merge it back and you could even automate that process so that if the",
    "start": "2255960",
    "end": "2263000"
  },
  {
    "text": "build is green it automatically merges it back and you can do a lot of configurations like uh only update these",
    "start": "2263000",
    "end": "2269040"
  },
  {
    "text": "ones or only upgrade to Major versions or whatever there are a lot of ways you can work with this and this basically",
    "start": "2269040",
    "end": "2275520"
  },
  {
    "text": "helps you to just say okay merge to this new version cuz what I saw in a lot of projects is that this is like a manual",
    "start": "2275520",
    "end": "2281800"
  },
  {
    "text": "step no one does this basically and then after a year it's like ah we should update it or after seven years or way",
    "start": "2281800",
    "end": "2288280"
  },
  {
    "text": "too long time um I've even seen it that uh if developers change the code and",
    "start": "2288280",
    "end": "2293920"
  },
  {
    "text": "they add some functionality add a new dependency then instead of using the latest version of the dependency they",
    "start": "2293920",
    "end": "2299400"
  },
  {
    "text": "simply use the version that was shown in the article they read which is often like three years old and they just add",
    "start": "2299400",
    "end": "2304839"
  },
  {
    "text": "it to your production project which is quite yeah not really nice CU maybe if you go to a new version the API breaks",
    "start": "2304839",
    "end": "2311720"
  },
  {
    "text": "and you need to do a lot of refactoring so I prefer to keep everything up to",
    "start": "2311720",
    "end": "2317520"
  },
  {
    "text": "date um then we have another one which is uh open rewrite so if you ever want",
    "start": "2319200",
    "end": "2324960"
  },
  {
    "text": "to like upgrade your version of Java or move to another tool or upgrade junit",
    "start": "2324960",
    "end": "2330480"
  },
  {
    "text": "from for example 4 to five which I think a lot of us spend some time on uh then I can really recommend having a look at uh",
    "start": "2330480",
    "end": "2336760"
  },
  {
    "text": "at open re right uh open rewrite basically is like a recipe based solution to um yeah change your code",
    "start": "2336760",
    "end": "2344920"
  },
  {
    "text": "base and changes but is in a really broad perspective so let's simply Show an",
    "start": "2344920",
    "end": "2351359"
  },
  {
    "text": "example did I now copy the wrong",
    "start": "2353000",
    "end": "2357079"
  },
  {
    "text": "one so this runs it creates local changes basically yeah g based so you",
    "start": "2361200",
    "end": "2366440"
  },
  {
    "text": "can still View if you like those changes or not you can decide if you accept them or not um and then you can basically",
    "start": "2366440",
    "end": "2373640"
  },
  {
    "text": "commit and push them to your G repository and what I find really nice is it's it's not only upgrading like",
    "start": "2373640",
    "end": "2379640"
  },
  {
    "text": "dependencies or your Java version for example if you go to newer versions of java you have this multi-line string",
    "start": "2379640",
    "end": "2385319"
  },
  {
    "text": "where basically you have a string covering multiple lines you add some quotes to it and it's okay instead of",
    "start": "2385319",
    "end": "2390359"
  },
  {
    "text": "having all these plus signs and and yeah really ugly looking code if you tell",
    "start": "2390359",
    "end": "2395680"
  },
  {
    "text": "open rewrite to upgrade to that version it will automatically convert your code to use these new features of the",
    "start": "2395680",
    "end": "2400920"
  },
  {
    "text": "language which I think is pretty amazing that way you can uh uh get started way",
    "start": "2400920",
    "end": "2406040"
  },
  {
    "text": "faster than yeah having to do all of these things manually so if we look at the diff of this",
    "start": "2406040",
    "end": "2413560"
  },
  {
    "text": "one for whatever reason my laptop is really getting slow",
    "start": "2413560",
    "end": "2419000"
  },
  {
    "text": "but not much ah there it is um so we see it changed the dependency so from junit",
    "start": "2420079",
    "end": "2426079"
  },
  {
    "text": "4 to junit 5 but it also fixed my formatting it also fixed these things like this could be",
    "start": "2426079",
    "end": "2432240"
  },
  {
    "text": "could possibly be nil right or in this case not possibly it's certainly n um and it fixes that automatically for me",
    "start": "2432240",
    "end": "2438680"
  },
  {
    "text": "it fixes my imports uh it fixes my asserts uh it uses the new basically",
    "start": "2438680",
    "end": "2444040"
  },
  {
    "text": "structure of junit 5 instead of the junit 4 one uh also for handling",
    "start": "2444040",
    "end": "2449400"
  },
  {
    "text": "exceptions it fixed it automatically for me so all these kind of things it does automatically for you so if you ever",
    "start": "2449400",
    "end": "2455560"
  },
  {
    "text": "need to upgrade to a new version of java want to make your life a bit easier try this one I mean you can just do it build",
    "start": "2455560",
    "end": "2461480"
  },
  {
    "text": "it and if it for whatever reason fails I mean you throw it away but it costs you like I don't know five minutes to set up",
    "start": "2461480",
    "end": "2468040"
  },
  {
    "text": "and then you're good to go it's just a maven plugin some command you run and uh you're",
    "start": "2468040",
    "end": "2473680"
  },
  {
    "text": "fine and then probably all of you or a lot of you use Maven right anyone using",
    "start": "2478520",
    "end": "2484760"
  },
  {
    "text": "something else that maven few hands so for the ones that are using Maven we all know it's sometimes slow",
    "start": "2484760",
    "end": "2492000"
  },
  {
    "text": "right I like it but it takes a bit of time so let's say we do a maven",
    "start": "2492000",
    "end": "2497400"
  },
  {
    "text": "compile and we wait and we sort of like this right because it gives us some time to grab a",
    "start": "2497400",
    "end": "2503200"
  },
  {
    "text": "coffee go to Netflix read a",
    "start": "2503200",
    "end": "2509200"
  },
  {
    "text": "book chat with your colleagues ah it's almost Friday ah 25",
    "start": "2509480",
    "end": "2516040"
  },
  {
    "text": "seconds and let's say I use the maven demon and do the same so Maven demon is",
    "start": "2516040",
    "end": "2521119"
  },
  {
    "text": "a bit like the the Gradle demon but then for Maven um so it automates all kinds of",
    "start": "2521119",
    "end": "2526800"
  },
  {
    "text": "things for you and and by the way so this like three that 7 seconds if we do",
    "start": "2526800",
    "end": "2531960"
  },
  {
    "text": "it again it's even faster like first time is slow relatively slow second time",
    "start": "2531960",
    "end": "2537040"
  },
  {
    "text": "it goes even faster so 1.4 seconds so this is one you can use but also Maven has like a thing it's called Cash",
    "start": "2537040",
    "end": "2543559"
  },
  {
    "text": "extensions which also optimize a lot of stuff and for example it also optimized",
    "start": "2543559",
    "end": "2548760"
  },
  {
    "text": "if you make a change in one of your Maven modules but don't change the others then it won't run all the tests",
    "start": "2548760",
    "end": "2553800"
  },
  {
    "text": "for all those other uh Maven modules so that way your build is way faster so now",
    "start": "2553800",
    "end": "2558920"
  },
  {
    "text": "yeah basically you can start doing this on Monday or you can continue drinking lots of",
    "start": "2558920",
    "end": "2565040"
  },
  {
    "text": "coffee um so now we basically near the end of the uh presentation anyone already knew all the",
    "start": "2565040",
    "end": "2571559"
  },
  {
    "start": "2566000",
    "end": "2594000"
  },
  {
    "text": "tools no and then probably you all learned something new and like mentioned if there if you found this interesting",
    "start": "2571559",
    "end": "2577480"
  },
  {
    "text": "have a look at the GitHub repository I think I covered like I don't know 20 30 of the tools out of all the 60 70 that",
    "start": "2577480",
    "end": "2584119"
  },
  {
    "text": "are available so there's much more interesting stuff going on there and with that I would like to thank you all",
    "start": "2584119",
    "end": "2591880"
  }
]