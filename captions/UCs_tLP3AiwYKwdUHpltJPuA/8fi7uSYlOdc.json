[
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "did you all hear me okay right yes okay a few technical issues okay so how many",
    "start": "16800",
    "end": "22529"
  },
  {
    "text": "of you in this room I'm currently using containers put your hands up and leave your hand up if you're totally confident",
    "start": "22529",
    "end": "28439"
  },
  {
    "text": "you really know what container is yeah yeah so I've been wanting with",
    "start": "28439",
    "end": "33930"
  },
  {
    "text": "containers for a few years now and I know there was a period of time where I",
    "start": "33930",
    "end": "38940"
  },
  {
    "text": "kind of heard like Islamic way desert through the air that didn't leave me",
    "start": "38940",
    "end": "46199"
  },
  {
    "text": "with a very sort of satisfying feeling that I really understood what was going on and then I saw a presentation by",
    "start": "46199",
    "end": "52650"
  },
  {
    "text": "attract for Julian treatment from IBM and he did something kind of similar to what I'm gonna do today and it really",
    "start": "52650",
    "end": "59699"
  },
  {
    "text": "helped me understand what we're talking about when we're talking about container so hopefully that knowledge you know",
    "start": "59699",
    "end": "66990"
  },
  {
    "text": "you're going to leave here with a much greater knowledge and a much greater understanding of what we really mean",
    "start": "66990",
    "end": "72180"
  },
  {
    "text": "when we talk about containers okay so I'm gonna be building a container",
    "start": "72180",
    "end": "79020"
  },
  {
    "text": "this afternoon and I'm gonna write it in a few lines of go if we got any gold programmers in the",
    "start": "79020",
    "end": "84570"
  },
  {
    "text": "room few hands going up you're going to be my peer reviewers who are gonna let me know when I go wrong hopefully for",
    "start": "84570",
    "end": "92249"
  },
  {
    "text": "the rest of you it you know doesn't really matter what the languages and we're going to build a container out of",
    "start": "92249",
    "end": "98009"
  },
  {
    "text": "three concepts in Linux namespaces changing the room and control groups so",
    "start": "98009",
    "end": "105929"
  },
  {
    "text": "I'm going to talk about what those different things are as well as we go along",
    "start": "105929",
    "end": "111140"
  },
  {
    "text": "but before we start building all right let's have a look at what happens when",
    "start": "111470",
    "end": "116480"
  },
  {
    "text": "we run a container under docker in the kind of normal way is that big enough",
    "start": "116480",
    "end": "122930"
  },
  {
    "text": "for the back you see wave your hands is not big enough gonna take it that that's studies okay so we can do something like",
    "start": "122930",
    "end": "131270"
  },
  {
    "text": "dock around and I wanted to be interactive and I'm going to remove it when it's done and maybe I run based on",
    "start": "131270",
    "end": "138320"
  },
  {
    "text": "the image it burn to and I ran a show so I can start with a container image and I",
    "start": "138320",
    "end": "145160"
  },
  {
    "text": "can run an arbitrary command sort of inside the container where that container is based on the image in this",
    "start": "145160",
    "end": "151760"
  },
  {
    "text": "case ability and we've got a host name",
    "start": "151760",
    "end": "156800"
  },
  {
    "text": "inside the container that is this is actually the the identity of the",
    "start": "156800",
    "end": "162110"
  },
  {
    "text": "container so it's some kind of random identity that's been allocated if I look",
    "start": "162110",
    "end": "168800"
  },
  {
    "text": "at the processes running inside the container I only see the processes",
    "start": "168800",
    "end": "173900"
  },
  {
    "text": "inside the container unless numbered starting from one whereas if I'm on the host this is the",
    "start": "173900",
    "end": "180080"
  },
  {
    "text": "same machine but from the hosts perspective I've got much higher process numbers going on okay so I'm going to",
    "start": "180080",
    "end": "190220"
  },
  {
    "text": "try and recreate something a bit like this docker run let me quit have this container and the",
    "start": "190220",
    "end": "199730"
  },
  {
    "text": "first thing I'm going to do is I'm going to talk about namespaces so and the",
    "start": "199730",
    "end": "207769"
  },
  {
    "text": "namespace is where we limit what the water process can see so we just saw a",
    "start": "207769",
    "end": "215269"
  },
  {
    "text": "container running and it could only see a few of the processes on the host and that's because it's got a namespace for",
    "start": "215269",
    "end": "222440"
  },
  {
    "text": "process IDs it could only see its own host name and that's of namespacing and we set up these",
    "start": "222440",
    "end": "229760"
  },
  {
    "text": "namespaces using Siskel's there are half",
    "start": "229760",
    "end": "234890"
  },
  {
    "text": "a dozen of them depending on your particular version of the Linux kernel and this is a big part of what makes a",
    "start": "234890",
    "end": "241189"
  },
  {
    "text": "container into a container it's restricting the view of the process have",
    "start": "241189",
    "end": "247099"
  },
  {
    "text": "has of the things that are going on on the host machine so I'm gonna build I'm",
    "start": "247099",
    "end": "254299"
  },
  {
    "text": "going to start with namespaces but before I do that let's remember we're",
    "start": "254299",
    "end": "260359"
  },
  {
    "text": "trying to do dr. Ron and I would normally do an image name and then some",
    "start": "260359",
    "end": "265490"
  },
  {
    "text": "command and some parameters in my go",
    "start": "265490",
    "end": "270740"
  },
  {
    "text": "program I can do I'm gonna say this as main go and then I can do go run main go",
    "start": "270740",
    "end": "278690"
  },
  {
    "text": "and that compiles and runs my executable so that's kind of the equivalent of",
    "start": "278690",
    "end": "285340"
  },
  {
    "text": "docker I'm gonna have a command called run it's going to become apparent why I",
    "start": "285340",
    "end": "291229"
  },
  {
    "text": "need that I'm not gonna pass in an image because I'm just gonna work you'll see",
    "start": "291229",
    "end": "296659"
  },
  {
    "text": "I'm gonna sort of give it an image later and then I want my containerized process",
    "start": "296659",
    "end": "302510"
  },
  {
    "text": "to run some arbitrary command and there might be some parameters so I'm gonna",
    "start": "302510",
    "end": "309199"
  },
  {
    "text": "have a main function and the first thing I'm going to do is look at the command",
    "start": "309199",
    "end": "317870"
  },
  {
    "text": "so where I've got run as argument one I want to check that I've got run and if I",
    "start": "317870",
    "end": "325669"
  },
  {
    "text": "am that's very happy function happy and if we get anything else there for",
    "start": "325669",
    "end": "332050"
  },
  {
    "text": "now we are going to class in a big heap and be sad because we don't like it okay",
    "start": "332050",
    "end": "340350"
  },
  {
    "text": "so now I need a brother function and for the moment all I'm going to do is print",
    "start": "340350",
    "end": "347710"
  },
  {
    "text": "out what it is that we're supposed to be running say we've been given the command",
    "start": "347710",
    "end": "356560"
  },
  {
    "text": "and parameters and they are in our arguments too and onwards so let's just",
    "start": "356560",
    "end": "365260"
  },
  {
    "text": "check that we can run this and I need",
    "start": "365260",
    "end": "373600"
  },
  {
    "text": "run as my command and I might say let's say hello Amsterdam so all it's done at",
    "start": "373600",
    "end": "382660"
  },
  {
    "text": "the moment is it's logging out the fact that I wanted to say hello answer that",
    "start": "382660",
    "end": "388510"
  },
  {
    "text": "but it's not even doing that yet so I need to write a bit of code to actually",
    "start": "388510",
    "end": "393640"
  },
  {
    "text": "run on my command and in Goa we do that with a command an exec package so I set",
    "start": "393640",
    "end": "401680"
  },
  {
    "text": "up a structure for my command that I want to run and when I I don't actually",
    "start": "401680",
    "end": "408310"
  },
  {
    "text": "run it until I hit this run method and what I wanted to run is whatever the",
    "start": "408310",
    "end": "415060"
  },
  {
    "text": "command is that was passed in in argument two and maybe there are some other parameters as well",
    "start": "415060",
    "end": "422430"
  },
  {
    "text": "really not maybe I also have to wire up",
    "start": "422520",
    "end": "428729"
  },
  {
    "text": "students to that mr. dirt so if I don't do this we can't see anything going on",
    "start": "428729",
    "end": "434430"
  },
  {
    "text": "so that would be really dull I get to do multi cursors which is very",
    "start": "434430",
    "end": "442470"
  },
  {
    "text": "exciting stood out",
    "start": "442470",
    "end": "448250"
  },
  {
    "text": "Studdard okay so now I should have the ability to",
    "start": "449539",
    "end": "456060"
  },
  {
    "text": "run an arbitrary commands let's check that out I can pass in I want you to",
    "start": "456060",
    "end": "466260"
  },
  {
    "text": "echo hello Amsterdam and it it does echoing hello monster damn and I could",
    "start": "466260",
    "end": "472970"
  },
  {
    "text": "do something like run a shell it's told",
    "start": "472970",
    "end": "479100"
  },
  {
    "text": "us it's running a shell you can't really tell because what's going on there's",
    "start": "479100",
    "end": "484530"
  },
  {
    "text": "some processes here this is our bash shell that I just started so now I just",
    "start": "484530",
    "end": "489690"
  },
  {
    "text": "kind of containerize this command as I started and we're going to do that by",
    "start": "489690",
    "end": "495440"
  },
  {
    "text": "creating some namespaces and I can do that by specifying here in this command",
    "start": "495440",
    "end": "502830"
  },
  {
    "text": "structure that I can name spaces which I do is this problem should be",
    "start": "502830",
    "end": "509990"
  },
  {
    "text": "to be structure and I'm passing it it's it's called",
    "start": "512570",
    "end": "517690"
  },
  {
    "text": "clone flags because cloning is what creates the new process that we're going",
    "start": "517690",
    "end": "524080"
  },
  {
    "text": "to run our arbitrary command in and as I do that I want to create a new we're",
    "start": "524080",
    "end": "534160"
  },
  {
    "text": "going to start with the flag for unix time sharing system which sounds incredibly fancy and powerful and you",
    "start": "534160",
    "end": "542290"
  },
  {
    "text": "know like it's going to be really significant but actually all there is in the unix time sharing system namespace",
    "start": "542290",
    "end": "548590"
  },
  {
    "text": "is the hostname but this is going to let us have our own hostname inside the",
    "start": "548590",
    "end": "555250"
  },
  {
    "text": "container so we can see its own it can't see what's happening on the host let's",
    "start": "555250",
    "end": "561730"
  },
  {
    "text": "give that a try so run my shell again",
    "start": "561730",
    "end": "566800"
  },
  {
    "text": "and if I do hostname it's inherited the host name from my my host machine will",
    "start": "566800",
    "end": "576520"
  },
  {
    "text": "just check though the same but I can change it here",
    "start": "576520",
    "end": "582839"
  },
  {
    "text": "check that that stuck yes I've changed it inside my container without affecting",
    "start": "583279",
    "end": "592069"
  },
  {
    "text": "what's happening on the host machine so I've started to containerize my process",
    "start": "592069",
    "end": "601930"
  },
  {
    "text": "so this is a star but it would be really nice if I could actually use this host",
    "start": "602920",
    "end": "608870"
  },
  {
    "text": "name if I could set the hostname up before I swore my shell so that I could",
    "start": "608870",
    "end": "614180"
  },
  {
    "text": "see it in the prompt because at the moment it's really hard to tell from the problem whether I'm in my container or",
    "start": "614180",
    "end": "620089"
  },
  {
    "text": "not and you might start by looking at",
    "start": "620089",
    "end": "625519"
  },
  {
    "text": "the the goal and sort of method for setting the hostname and you'd find set",
    "start": "625519",
    "end": "633769"
  },
  {
    "text": "hostname and we have to send it in as a series mr. bite so we might think we",
    "start": "633769",
    "end": "643069"
  },
  {
    "text": "could do something like that but we have a problem if I call that function here",
    "start": "643069",
    "end": "649160"
  },
  {
    "text": "after I've completed this run method that doesn't complete until after I've",
    "start": "649160",
    "end": "654290"
  },
  {
    "text": "exited the command that I want to run so I can't do it after and I can't really",
    "start": "654290",
    "end": "662000"
  },
  {
    "text": "do it before anywhere up here because I haven't actually although I specify that",
    "start": "662000",
    "end": "669439"
  },
  {
    "text": "I want my namespace here it's not until inside this run method that we actually",
    "start": "669439",
    "end": "675790"
  },
  {
    "text": "clone this new process and actually get in there namespace so I can't do it",
    "start": "675790",
    "end": "680990"
  },
  {
    "text": "before and I can't do it after so what",
    "start": "680990",
    "end": "686000"
  },
  {
    "text": "I'm gonna do is I'm gonna have this process clone a new process with the new",
    "start": "686000",
    "end": "694100"
  },
  {
    "text": "namespace and then I'm going to create another process in which I can have",
    "start": "694100",
    "end": "699360"
  },
  {
    "text": "in which I'm going to run on my command so I'm going to duplicate this have one",
    "start": "699360",
    "end": "707250"
  },
  {
    "text": "version called round and one version called child so the first one is going",
    "start": "707250",
    "end": "713399"
  },
  {
    "text": "to create your namespace but rather than",
    "start": "713399",
    "end": "719970"
  },
  {
    "text": "saying I want you to run the arbitrary command I want this to run this program",
    "start": "719970",
    "end": "727050"
  },
  {
    "text": "again run itself and we can do that by running from self XE the command we want",
    "start": "727050",
    "end": "736950"
  },
  {
    "text": "to run we'll have a look at that in a moment oops right and I want it to call itself",
    "start": "736950",
    "end": "743880"
  },
  {
    "text": "but instead of having run as that first command I'm gonna pass in child now I",
    "start": "743880",
    "end": "753540"
  },
  {
    "text": "have so when I come in here I'm going to see if I see child is that command I'm",
    "start": "753540",
    "end": "759870"
  },
  {
    "text": "gonna call this other version of the function down here I have to do a bit of",
    "start": "759870",
    "end": "766320"
  },
  {
    "text": "goes of syntactic eNOS I have to make this into a list of strings and then",
    "start": "766320",
    "end": "776490"
  },
  {
    "text": "I've got arguments to okay",
    "start": "776490",
    "end": "787450"
  },
  {
    "text": "so I'm gonna call it run runners gonna reinvest process but inside it's in your",
    "start": "787450",
    "end": "794110"
  },
  {
    "text": "namespace second time in its going to be calling child and we don't need to",
    "start": "794110",
    "end": "800920"
  },
  {
    "text": "create a namespace this time but we do",
    "start": "800920",
    "end": "806490"
  },
  {
    "text": "want to set the host name because this pro this time around it should already be in the new namespace so let's give",
    "start": "806490",
    "end": "815440"
  },
  {
    "text": "that a whirl so straight away we can see",
    "start": "815440",
    "end": "821920"
  },
  {
    "text": "a couple of things we see the log happening twice because we've called it once inside runner and once inside child",
    "start": "821920",
    "end": "827910"
  },
  {
    "text": "but more interestingly the bash prompt has picked up that host name so that's",
    "start": "827910",
    "end": "833650"
  },
  {
    "text": "done what I wanted it to do this is pretty good and then we can more easily tell whether in the container or not",
    "start": "833650",
    "end": "838750"
  },
  {
    "text": "which is pretty beneficial okay so if I",
    "start": "838750",
    "end": "844930"
  },
  {
    "text": "now want to have PS return me just the processes inside my container so at the",
    "start": "844930",
    "end": "853030"
  },
  {
    "text": "moment I haven't namespace process IDs and I'm still seeing the same kind of",
    "start": "853030",
    "end": "858100"
  },
  {
    "text": "higher numbered processes that I can see if I do if I look at all of them we'd",
    "start": "858100",
    "end": "864220"
  },
  {
    "text": "find all of those processes up here so like seven six I know whatever 76 to one example there",
    "start": "864220",
    "end": "873010"
  },
  {
    "text": "is my bash response to that okay so I'm",
    "start": "873010",
    "end": "878380"
  },
  {
    "text": "gonna see inside my container I want to see these starting from wow let's quit",
    "start": "878380",
    "end": "883630"
  },
  {
    "text": "out of that and there's another one of these namespace facts",
    "start": "883630",
    "end": "889920"
  },
  {
    "text": "cold new PID for process ID",
    "start": "889920",
    "end": "896210"
  },
  {
    "text": "and I'm also gonna print out the process",
    "start": "896210",
    "end": "901460"
  },
  {
    "text": "idea they were running s get process ID we'll do that inside run and we'll also",
    "start": "901460",
    "end": "907880"
  },
  {
    "text": "do back inside the child",
    "start": "907880",
    "end": "911290"
  },
  {
    "text": "that looks pretty promising right the first time we were running as some high numbered process when we Britain fine",
    "start": "917480",
    "end": "924439"
  },
  {
    "text": "child which should be inside this new process ID no space we've got the ID one that's exactly what we wanted so hands",
    "start": "924439",
    "end": "933829"
  },
  {
    "text": "up if you think I can do PS and it's gonna work yeah a few a few hands okay",
    "start": "933829",
    "end": "939439"
  },
  {
    "text": "are you going to disappoint you it's still finding those highly numbered",
    "start": "939439",
    "end": "945819"
  },
  {
    "text": "process IDs and the reason for that is because PS doesn't kind of magically get",
    "start": "945819",
    "end": "954319"
  },
  {
    "text": "the process information directly it gets it from the slash proper directory",
    "start": "954319",
    "end": "959899"
  },
  {
    "text": "remember a minute ago we looked at frosh proc self XE so such crock has",
    "start": "959899",
    "end": "965989"
  },
  {
    "text": "information about all of the running processes we can see them there's a directory for each of the numbered",
    "start": "965989",
    "end": "972649"
  },
  {
    "text": "processes I'm just going to go back to the host foot go back to the host for a",
    "start": "972649",
    "end": "979429"
  },
  {
    "text": "minute if I do something like LS - ow for proc self XE and you can see that",
    "start": "979429",
    "end": "990980"
  },
  {
    "text": "that is a link to my lab is running LS so it makes sense that if I do it again",
    "start": "990980",
    "end": "997689"
  },
  {
    "text": "well you know that's always what it's gonna be but if I go to prop self we can",
    "start": "997689",
    "end": "1005410"
  },
  {
    "text": "see every time I get a new process ID and prop self changes as we start a new",
    "start": "1005410",
    "end": "1013660"
  },
  {
    "text": "process and there's all sorts of interesting information inside slash",
    "start": "1013660",
    "end": "1019419"
  },
  {
    "text": "prop for each of the processes we'll see a little bit more of that in a moment",
    "start": "1019419",
    "end": "1025739"
  },
  {
    "text": "PS is looking prop directory so inside my container I",
    "start": "1026159",
    "end": "1033159"
  },
  {
    "text": "need my own version of frog at the moment it seemed the same you know from",
    "start": "1033159",
    "end": "1038380"
  },
  {
    "text": "inside the container it's seeing the same /proc and this is where should we come to I'm going to change the route of",
    "start": "1038380",
    "end": "1046048"
  },
  {
    "text": "what the container can see so at the moment if we look at the root directory",
    "start": "1046049",
    "end": "1052690"
  },
  {
    "text": "I have marked it with this routes the host file I also happen to have a copy",
    "start": "1052690",
    "end": "1063640"
  },
  {
    "text": "of an ability file system and this has",
    "start": "1063640",
    "end": "1071140"
  },
  {
    "text": "got route for container in it so I'm going to change the route for the",
    "start": "1071140",
    "end": "1076270"
  },
  {
    "text": "container so that it sees this as its root directory",
    "start": "1076270",
    "end": "1081600"
  },
  {
    "text": "in here we can do Charice and I want",
    "start": "1085990",
    "end": "1093899"
  },
  {
    "text": "that vagrant ability FS directory to be my reads I'm",
    "start": "1093899",
    "end": "1101409"
  },
  {
    "text": "also going to change the directory to read because why don't do this it's actually undefined where you end up when",
    "start": "1101409",
    "end": "1108429"
  },
  {
    "text": "after you've done it should read I run",
    "start": "1108429",
    "end": "1116409"
  },
  {
    "text": "my container again and now if I look in the root directory routes the container",
    "start": "1116409",
    "end": "1123100"
  },
  {
    "text": "is mine it's in my root directory I can't see anything higher up than roots",
    "start": "1123100",
    "end": "1130480"
  },
  {
    "text": "like that that is my really inside my container",
    "start": "1130480",
    "end": "1136529"
  },
  {
    "text": "I've limited its view of your filesystem but I could do something interesting",
    "start": "1136529",
    "end": "1144100"
  },
  {
    "text": "like so if I do sleep for a little while inside the container from the host we",
    "start": "1144100",
    "end": "1151750"
  },
  {
    "text": "can find that sleep process seven eight four zero and if we look again in /proc",
    "start": "1151750",
    "end": "1160779"
  },
  {
    "text": "four seven eight four zero this is all the information about that sleep process",
    "start": "1160779",
    "end": "1166570"
  },
  {
    "text": "and there's a root directory let's have",
    "start": "1166570",
    "end": "1172960"
  },
  {
    "text": "a look at what that tells us and that shows us that for that process the root",
    "start": "1172960",
    "end": "1182049"
  },
  {
    "text": "is actually the file system that we just mounted now that's pretty much the",
    "start": "1182049",
    "end": "1188380"
  },
  {
    "text": "equivalent of a container image when you specify the image it takes a copy of the",
    "start": "1188380",
    "end": "1194200"
  },
  {
    "text": "file system that's packed up in that image on unpacks it into a somewhere on",
    "start": "1194200",
    "end": "1199299"
  },
  {
    "text": "your host machine and Charice the container to see that new faster",
    "start": "1199299",
    "end": "1204670"
  },
  {
    "text": "so we've kind of done the equivalent okay so back to you the the prop",
    "start": "1204670",
    "end": "1213310"
  },
  {
    "text": "directory and back to EPS because if you remember we're trying to get PS to show us just the processes that are running",
    "start": "1213310",
    "end": "1221020"
  },
  {
    "text": "inside the container and I did that to read so that I would have a prop",
    "start": "1221020",
    "end": "1226090"
  },
  {
    "text": "directory inside the container and there's nothing in it and if I do PS",
    "start": "1226090",
    "end": "1232840"
  },
  {
    "text": "it's gonna tell us what it is we need to do so it turns out that proc is it's a",
    "start": "1232840",
    "end": "1242940"
  },
  {
    "text": "pseudo filesystem it's a mechanism for the kernel and the U and a user space to",
    "start": "1242940",
    "end": "1250060"
  },
  {
    "text": "share information and at the moment slash crop inside my container in the",
    "start": "1250060",
    "end": "1255310"
  },
  {
    "text": "charity filesystem has nothing in it and I need to mint that directory as a proxy",
    "start": "1255310",
    "end": "1262480"
  },
  {
    "text": "need a file system so that the colonel knows I'm going to populate that with all the information about these running",
    "start": "1262480",
    "end": "1268900"
  },
  {
    "text": "processes so in here",
    "start": "1268900",
    "end": "1275820"
  },
  {
    "text": "I can mount that very important but I get these parameters in the right order",
    "start": "1276610",
    "end": "1281649"
  },
  {
    "text": "as you can see all right and I'm gonna",
    "start": "1281649",
    "end": "1288760"
  },
  {
    "text": "tidy up after myself by unmounting them when we finish",
    "start": "1288760",
    "end": "1295200"
  },
  {
    "text": "absolutely it when we finish okay",
    "start": "1295200",
    "end": "1303000"
  },
  {
    "text": "so I need to run that again and this time what do you reckon will it",
    "start": "1303850",
    "end": "1310050"
  },
  {
    "text": "work hands off you think it work mixed",
    "start": "1310050",
    "end": "1315540"
  },
  {
    "text": "confidence here it works it works look very gay crisis ID number one thank you",
    "start": "1315540",
    "end": "1324470"
  },
  {
    "text": "right one other thing we did there was we mounted a prop and we can see that",
    "start": "1324470",
    "end": "1331650"
  },
  {
    "text": "amount inside the container that's kind of what we would expect there are quite",
    "start": "1331650",
    "end": "1337050"
  },
  {
    "text": "a lot of things mounted on my host so I'm just going to grab the things that relate to frog from my house I can see",
    "start": "1337050",
    "end": "1346020"
  },
  {
    "text": "this one at the bottom which is the same one that we've got mounted inside the",
    "start": "1346020",
    "end": "1351360"
  },
  {
    "text": "container we can tell that because it's it's inside that file system that I meant it now there is a namespace for",
    "start": "1351360",
    "end": "1360030"
  },
  {
    "text": "mount",
    "start": "1360030",
    "end": "1362720"
  },
  {
    "text": "it is called new NS and a school namespace apparently this was the first",
    "start": "1366350",
    "end": "1374390"
  },
  {
    "text": "of the namespaces to be invented and added to the kernel and I guess at the",
    "start": "1374390",
    "end": "1379549"
  },
  {
    "text": "time they didn't really think there would ever be a need for any other namespaces so they called it namespace",
    "start": "1379549",
    "end": "1384650"
  },
  {
    "text": "but it's really for maps I also have to do something else here now by default",
    "start": "1384650",
    "end": "1392900"
  },
  {
    "text": "under system D mounts get kind of this",
    "start": "1392900",
    "end": "1399429"
  },
  {
    "text": "recursively shared property and at the moment my root directory on my host",
    "start": "1400210",
    "end": "1407110"
  },
  {
    "text": "recursively shares between all namespaces any Mouse and I have to",
    "start": "1407110",
    "end": "1412580"
  },
  {
    "text": "deliberately turn that off with an unsure I'm going to say unshared flags",
    "start": "1412580",
    "end": "1418659"
  },
  {
    "text": "for the new namespace I'm probably doing that I can say I've",
    "start": "1418659",
    "end": "1426380"
  },
  {
    "text": "got this new manage space in my container and I don't want you to share",
    "start": "1426380",
    "end": "1432650"
  },
  {
    "text": "it with the hosts because by default it would have shared it back the best so if",
    "start": "1432650",
    "end": "1442700"
  },
  {
    "text": "I do this again we can run on mount inside the container we can still see",
    "start": "1442700",
    "end": "1449360"
  },
  {
    "text": "frog but on the house I no longer see",
    "start": "1449360",
    "end": "1454370"
  },
  {
    "text": "that truck and that's how we can end up with we can avoid having like hundreds of containers cluttering our heart our",
    "start": "1454370",
    "end": "1462620"
  },
  {
    "text": "main command with all sorts of information about mounts any fiber containers that we don't really care",
    "start": "1462620",
    "end": "1468230"
  },
  {
    "text": "about from the host I could find out about them by looking in the prop",
    "start": "1468230",
    "end": "1474169"
  },
  {
    "text": "directory though so I can do the same thing with sleep and find that process from",
    "start": "1474169",
    "end": "1482370"
  },
  {
    "text": "the hosts perspective and if I look I think I need to look at 802 9 this time",
    "start": "1482370",
    "end": "1494450"
  },
  {
    "text": "maybe yeah so I can still see the amount",
    "start": "1494480",
    "end": "1499920"
  },
  {
    "text": "that this process is aware of from the hosts perspective but they don't go cluttering up my my main command",
    "start": "1499920",
    "end": "1508370"
  },
  {
    "text": "ok so we have looked at the namespaces for the UNIX Tron shown system which is",
    "start": "1508370",
    "end": "1514350"
  },
  {
    "text": "the host name for process IDs and formats and you can imagine how",
    "start": "1514350",
    "end": "1519860"
  },
  {
    "text": "isolating things like your network interfaces so that your container only sees a specific set of network",
    "start": "1519860",
    "end": "1526680"
  },
  {
    "text": "interfaces and user IDs and inter-process communications all working the same sort of way ok",
    "start": "1526680",
    "end": "1536010"
  },
  {
    "text": "we also saw how it works and how that limits the container so can only see a",
    "start": "1536010",
    "end": "1541620"
  },
  {
    "text": "subset of the file system that the host can see and there's one last sort of",
    "start": "1541620",
    "end": "1547460"
  },
  {
    "text": "property of containers and that's control groups if no space is restricted",
    "start": "1547460",
    "end": "1554340"
  },
  {
    "text": "what we can see from inside the container a control group limits the",
    "start": "1554340",
    "end": "1560010"
  },
  {
    "text": "resources that we can use inside it and we do this it's configured using another",
    "start": "1560010",
    "end": "1566190"
  },
  {
    "text": "one of these pseudo file system interfaces so it's another set of what looks like directories and files but we",
    "start": "1566190",
    "end": "1572640"
  },
  {
    "text": "can manipulate them to set properties that we want the kernel to understand",
    "start": "1572640",
    "end": "1577800"
  },
  {
    "text": "and the kernel will write information into the file system so that we can read it back out again and we could be",
    "start": "1577800",
    "end": "1584160"
  },
  {
    "text": "talking about things like how much memory the container is allowed to be how much CPU how much Sherman IO band",
    "start": "1584160",
    "end": "1592029"
  },
  {
    "text": "width it's allowed and also how many processes were allowed which we're gonna use as an example see wrong direction",
    "start": "1592029",
    "end": "1602529"
  },
  {
    "text": "right before we do that let's have a look at how they have that file system",
    "start": "1602529",
    "end": "1611710"
  },
  {
    "text": "looks and it's typically in sis FSC group I'm gonna change into that",
    "start": "1611710",
    "end": "1617500"
  },
  {
    "text": "directory and we have a directory for",
    "start": "1617500",
    "end": "1623320"
  },
  {
    "text": "each of the different types of control group that we can set up and let's use memory as an example so we're go in here",
    "start": "1623320",
    "end": "1630960"
  },
  {
    "text": "and there's actually a large number of parameters that you can set related to",
    "start": "1630960",
    "end": "1636279"
  },
  {
    "text": "memory and I could look at let's say",
    "start": "1636279",
    "end": "1641350"
  },
  {
    "text": "memory limited by that because it's a",
    "start": "1641350",
    "end": "1646419"
  },
  {
    "text": "very very very large number which is basically saying by default processes",
    "start": "1646419",
    "end": "1652809"
  },
  {
    "text": "can use all the memory in the system also we've got this some docker",
    "start": "1652809",
    "end": "1659909"
  },
  {
    "text": "directory which docker presumably set up I have a look in there and at the moment",
    "start": "1659909",
    "end": "1667330"
  },
  {
    "text": "it's just another set of all the same parameters some of these are also sort",
    "start": "1667330",
    "end": "1673210"
  },
  {
    "text": "of statistics being reported back into the user space and let's see what",
    "start": "1673210",
    "end": "1678639"
  },
  {
    "text": "happens when we run a container so if I do exactly the same as I did before with",
    "start": "1678639",
    "end": "1685330"
  },
  {
    "text": "ability and I run a shell [Music]",
    "start": "1685330",
    "end": "1690390"
  },
  {
    "text": "and we've got a container that starts with the ID zero seven zero C and now",
    "start": "1690390",
    "end": "1699760"
  },
  {
    "text": "we've also got a directory inside the control room structure starting with zero seven zero C so doctor has created",
    "start": "1699760",
    "end": "1707920"
  },
  {
    "text": "a control group basically for this container but we didn't ask it for any",
    "start": "1707920",
    "end": "1713260"
  },
  {
    "text": "particular restrictions and if we were",
    "start": "1713260",
    "end": "1718300"
  },
  {
    "text": "to look at what's inside that memory limiting fight it's not restricted it's",
    "start": "1718300",
    "end": "1725500"
  },
  {
    "text": "still a max if I don't even want to count the digits of that let's see what",
    "start": "1725500",
    "end": "1731890"
  },
  {
    "text": "happens when we do constrain the memory so I can say memory is let's say 10",
    "start": "1731890",
    "end": "1740190"
  },
  {
    "text": "megabytes and this time it's F 4 9 7 is",
    "start": "1740190",
    "end": "1746620"
  },
  {
    "text": "the identity",
    "start": "1746620",
    "end": "1749340"
  },
  {
    "text": "we've got a control group F 497 and if I",
    "start": "1752540",
    "end": "1757679"
  },
  {
    "text": "look in the limit this time that's",
    "start": "1757679",
    "end": "1764190"
  },
  {
    "text": "basically 10 Meg so doctor wrote that number into that file and that's how it",
    "start": "1764190",
    "end": "1771150"
  },
  {
    "text": "tells the kernel to limit that particular container to that amount of memory so we're gonna do the same kind",
    "start": "1771150",
    "end": "1779760"
  },
  {
    "text": "of thing and we're going to do it for the number of processes actually let's",
    "start": "1779760",
    "end": "1786330"
  },
  {
    "text": "just have a quick look so inside pit we can see things like the",
    "start": "1786330",
    "end": "1800120"
  },
  {
    "text": "maximum number okay",
    "start": "1800120",
    "end": "1804080"
  },
  {
    "text": "well I know how we can look at it look at it inside docker and there should be",
    "start": "1806620",
    "end": "1811720"
  },
  {
    "text": "a pig's max yeah so by default when you",
    "start": "1811720",
    "end": "1817029"
  },
  {
    "text": "create a dr. container there is no limits to the number of processes that can be spawned inside that process but",
    "start": "1817029",
    "end": "1824740"
  },
  {
    "text": "I'm going to create a control group that does limit the number of processes and I've got a little bit of code that I",
    "start": "1824740",
    "end": "1831789"
  },
  {
    "text": "prepared earlier to save a little bit of time just copy that and we're going to",
    "start": "1831789",
    "end": "1844450"
  },
  {
    "text": "call that from here right so that is going to the C group",
    "start": "1844450",
    "end": "1852529"
  },
  {
    "text": "directory inside backgrounds of hits inside that going to the control group that I'm creating cordless and I'm gonna",
    "start": "1852529",
    "end": "1861499"
  },
  {
    "text": "write a fire I'm gonna write a limit of 20 so I'm saying inside my control group",
    "start": "1861499",
    "end": "1867830"
  },
  {
    "text": "there can only be 20 processes and the",
    "start": "1867830",
    "end": "1873259"
  },
  {
    "text": "other important thing I'm doing here is this last line here where I'm getting the current process ID with that get PID",
    "start": "1873259",
    "end": "1880429"
  },
  {
    "text": "and I'm writing it into a file inside my control group called C Group frogs and",
    "start": "1880429",
    "end": "1889279"
  },
  {
    "text": "that's adding my approach is saying this process is now a member of this control",
    "start": "1889279",
    "end": "1896749"
  },
  {
    "text": "group and is subject to the same limits okay let's run that",
    "start": "1896749",
    "end": "1906489"
  },
  {
    "text": "- okay from my host I should well I've",
    "start": "1910880",
    "end": "1920190"
  },
  {
    "text": "got a list are actually and let's make sure we've got the maximum that we",
    "start": "1920190",
    "end": "1929040"
  },
  {
    "text": "expect yeah so should be limited to 20 processes inside this secret and let's",
    "start": "1929040",
    "end": "1937260"
  },
  {
    "text": "just check again using that trick with sleep I'm gonna find the ID of that",
    "start": "1937260",
    "end": "1944700"
  },
  {
    "text": "process eight five six three and if we look in that secret profile eight five",
    "start": "1944700",
    "end": "1955590"
  },
  {
    "text": "six three automatically got added in there because it's a child process of whatever presumably eight five four",
    "start": "1955590",
    "end": "1962700"
  },
  {
    "text": "three which was the kind of first of these containerized processes inside my",
    "start": "1962700",
    "end": "1970710"
  },
  {
    "text": "container I should only be able to create Trinity processes and no more so",
    "start": "1970710",
    "end": "1980040"
  },
  {
    "text": "let's put that to the test with one of these",
    "start": "1980040",
    "end": "1985880"
  },
  {
    "text": "who knows what that is it is a fault bomb right so what that how that works",
    "start": "1985880",
    "end": "1995530"
  },
  {
    "text": "we define a function called : and in that function we call : we pipe",
    "start": "1995530",
    "end": "2004539"
  },
  {
    "text": "the results into code on which we run in the background that's the definition of our function",
    "start": "2004539",
    "end": "2011140"
  },
  {
    "text": "and then we invoke it so it should keep calling itself creating you know just",
    "start": "2011140",
    "end": "2016690"
  },
  {
    "text": "for King processes for everyone but hopefully it will be limited by my",
    "start": "2016690",
    "end": "2022960"
  },
  {
    "text": "control group just double check that I'm running inside the container okay okay",
    "start": "2022960",
    "end": "2033909"
  },
  {
    "text": "so it's having a bit of a go at trying to fork a lot of processes and it's clearly not able to form as many",
    "start": "2033909",
    "end": "2041020"
  },
  {
    "text": "processes as it would like from the host perspective well for a start I can type",
    "start": "2041020",
    "end": "2046330"
  },
  {
    "text": "perfectly okay nothing bad seems to be happening in terms of the responsiveness of my house and this is my here's my go",
    "start": "2046330",
    "end": "2054908"
  },
  {
    "text": "run main go here are some defunct processes we will never see more than 20",
    "start": "2054909",
    "end": "2063790"
  },
  {
    "text": "processes in there we can look at pigs",
    "start": "2063790",
    "end": "2070510"
  },
  {
    "text": "currents which should tell us the current number of processes and there should be 20 of them we can look at if",
    "start": "2070510",
    "end": "2077618"
  },
  {
    "text": "we look at see groups what we'll actually in sorry secret procs will actually see the parent processes we",
    "start": "2077619",
    "end": "2085060"
  },
  {
    "text": "don't see that the full threads but if we look in tasks we should see them probably maybe we didn't get the dead",
    "start": "2085060",
    "end": "2092980"
  },
  {
    "text": "ones anyway we can tell from the pins currents that there are no more than 20",
    "start": "2092980",
    "end": "2100589"
  },
  {
    "text": "being created and yet we can continue to",
    "start": "2100589",
    "end": "2106119"
  },
  {
    "text": "use the computer rather than it haven't been completely destroyed by that fork",
    "start": "2106119",
    "end": "2112150"
  },
  {
    "text": "bomb don't run a fault bomb on a machine unless you know is constrained by secret it's my advice to you okay so we have",
    "start": "2112150",
    "end": "2121000"
  },
  {
    "text": "seen how a container is created from namespaces and limited by control groups",
    "start": "2121000",
    "end": "2128289"
  },
  {
    "text": "we've seen how the file system works or how images work by pointing you at a",
    "start": "2128289",
    "end": "2133990"
  },
  {
    "text": "subset of the file system on the host we've seen how to bring a machine down",
    "start": "2133990",
    "end": "2139480"
  },
  {
    "text": "by using football don't do that if you want to check out the code you'll find",
    "start": "2139480",
    "end": "2145809"
  },
  {
    "text": "it in that is rice containers from scratch repo are you definitely",
    "start": "2145809",
    "end": "2151059"
  },
  {
    "text": "encourage doing that and playing about building your own container if you want to really kind of understand how these",
    "start": "2151059",
    "end": "2157150"
  },
  {
    "text": "things work now those of you who had your hands up earlier that running containers do that again you're using",
    "start": "2157150",
    "end": "2164140"
  },
  {
    "text": "trainers put your hand up and leave your hand up if you are doing vulnerability scanning on your containers yeah why if",
    "start": "2164140",
    "end": "2172599"
  },
  {
    "text": "you feel you or not it's a very good idea to scan your container images for",
    "start": "2172599",
    "end": "2178510"
  },
  {
    "text": "known exploits that my christiana is a free to use tool for scanning your",
    "start": "2178510",
    "end": "2185710"
  },
  {
    "text": "images so I just wanted to give a quick shout out to that with that I really",
    "start": "2185710",
    "end": "2191440"
  },
  {
    "text": "hope that you leave with a full of confidence that you understand what containers are thank you",
    "start": "2191440",
    "end": "2197690"
  },
  {
    "text": "very much [Applause]",
    "start": "2197690",
    "end": "2202349"
  },
  {
    "text": "and I think we have time for a few questions if they're yes please perchance start the first one what do",
    "start": "2205790",
    "end": "2215690"
  },
  {
    "text": "you think about dr. rising database like positive what do I think about docker",
    "start": "2215690",
    "end": "2221600"
  },
  {
    "text": "izing a database like Postgres why not",
    "start": "2221600",
    "end": "2229850"
  },
  {
    "text": "and you I think as you can see there",
    "start": "2229850",
    "end": "2236750"
  },
  {
    "text": "what you're doing when you run something in a container it's still a Linux process the thing that is different is",
    "start": "2236750",
    "end": "2243220"
  },
  {
    "text": "where the storage is so if anything that's what state if you want that",
    "start": "2243220",
    "end": "2248359"
  },
  {
    "text": "storage to persist you have to make sure that the the executable stuff is looking",
    "start": "2248359",
    "end": "2255500"
  },
  {
    "text": "at a storage system that's persistent if you were just talking about one host you",
    "start": "2255500",
    "end": "2262910"
  },
  {
    "text": "could just mount the you know Postgres or whatever into the container and that would be exactly the same as running",
    "start": "2262910",
    "end": "2269990"
  },
  {
    "text": "Postgres on the host looking at a local you know file on disk the difference is",
    "start": "2269990",
    "end": "2276230"
  },
  {
    "text": "that whenever we start talking about containers we're really talking about distributed systems we're talking about",
    "start": "2276230",
    "end": "2281810"
  },
  {
    "text": "that storage being somewhere else probably in the cluster and we're saying I want to be able to create my container",
    "start": "2281810",
    "end": "2288410"
  },
  {
    "text": "anywhere in that cluster and I wanted to point to that storage and then you know but mechanisms exist to do that so yeah",
    "start": "2288410",
    "end": "2295730"
  },
  {
    "text": "there's nothing wrong with running Postgres inside a container it's the storage",
    "start": "2295730",
    "end": "2301150"
  },
  {
    "text": "they're saying it's a good idea to run docker in docker do I think it's a good idea to run docker in Dhaka there are",
    "start": "2303470",
    "end": "2310790"
  },
  {
    "text": "very few occasions where you really need to run docker in docker there are",
    "start": "2310790",
    "end": "2316180"
  },
  {
    "text": "struggling to remember what they are but now one of the reasons why you might not",
    "start": "2316180",
    "end": "2322099"
  },
  {
    "text": "want to do it is that as soon as you do that you're you're running with the",
    "start": "2322099",
    "end": "2327230"
  },
  {
    "text": "privilege flag which means it's not just root it's rooted with full capabilities",
    "start": "2327230",
    "end": "2332480"
  },
  {
    "text": "across the whole machine run it up for and opera if you need to to do something",
    "start": "2332480",
    "end": "2338950"
  },
  {
    "text": "particular for your applications don't run topper in Dhaka just for the hell of it any other questions",
    "start": "2338950",
    "end": "2349750"
  },
  {
    "text": "oh it doesn't I think it just came on as you left so thank you it's actually",
    "start": "2355410",
    "end": "2361290"
  },
  {
    "text": "great but no nothing's been broken you'd ever make century I think it's very big achievement question if you have tools",
    "start": "2361290",
    "end": "2368490"
  },
  {
    "text": "like some of them like Java before them or I don't know the tree if I'm not",
    "start": "2368490",
    "end": "2373770"
  },
  {
    "text": "mistaken you know which are not contain you're aware where they're getting the information about the memory or CPU",
    "start": "2373770",
    "end": "2379859"
  },
  {
    "text": "which has been granted to the container itself so for example you know like a Java you're doing like amount of memory",
    "start": "2379859",
    "end": "2386520"
  },
  {
    "text": "basically shows that the whole machine is being available for the process why",
    "start": "2386520",
    "end": "2392400"
  },
  {
    "text": "it's originally not you know just salted on the UNIX level just to restrict it to",
    "start": "2392400",
    "end": "2398369"
  },
  {
    "text": "the process itself yeah I don't know enough about how Java works but I know there is the Java Virtual Machine I'm",
    "start": "2398369",
    "end": "2404130"
  },
  {
    "text": "not a Java person",
    "start": "2404130",
    "end": "2407839"
  },
  {
    "text": "so I'm definitely moving into the world of speculation here on your Linux kernel",
    "start": "2413970",
    "end": "2420359"
  },
  {
    "text": "your Linux kernel is using that mechanism for doing things like limiting memory my assumption would be that the",
    "start": "2420359",
    "end": "2427140"
  },
  {
    "text": "virtual machine the Java Virtual Machine would be grabbing a bunch of memory up front and then dividing that up in",
    "start": "2427140",
    "end": "2434010"
  },
  {
    "text": "different ways that the kernel is no longer aware of but I'm pretty much speculating at that point anybody any",
    "start": "2434010",
    "end": "2442500"
  },
  {
    "text": "Java experts want to tell us should I",
    "start": "2442500",
    "end": "2449970"
  },
  {
    "text": "still run they still use the M strong daughter on bare metal should I still",
    "start": "2449970",
    "end": "2456450"
  },
  {
    "text": "use VMs Toronto from bare metal and sort of depends on the application and sort",
    "start": "2456450",
    "end": "2462990"
  },
  {
    "text": "of depends on what you're you know if you're running your own data center you",
    "start": "2462990",
    "end": "2468900"
  },
  {
    "text": "might use the MS for for the ability to",
    "start": "2468900",
    "end": "2476420"
  },
  {
    "text": "create and destroy the enemies really quickly and so sort of repurpose your machines pretty quickly you might run",
    "start": "2476420",
    "end": "2483920"
  },
  {
    "text": "containers in VMs for isolation purposes so we've just seen that containers are",
    "start": "2483920",
    "end": "2489750"
  },
  {
    "text": "you know they're Linux processes if I had two of those they're still sharing",
    "start": "2489750",
    "end": "2495599"
  },
  {
    "text": "the same cat or all the containers within a virtual machine or sharing the same kernel so",
    "start": "2495599",
    "end": "2503380"
  },
  {
    "text": "they're armed to say it's if there were",
    "start": "2503380",
    "end": "2509900"
  },
  {
    "text": "a kernel exploits that allows you to escape it contain it well you know if",
    "start": "2509900",
    "end": "2516170"
  },
  {
    "text": "they were a kernel exploit it's a shared kernel so there is potentially at risk that says if I can escape container I",
    "start": "2516170",
    "end": "2523130"
  },
  {
    "text": "can see the other containers on that VM it's much harder to escape a VM safe or",
    "start": "2523130",
    "end": "2530500"
  },
  {
    "text": "pretty specific security reasons you might say I want to run on my containers",
    "start": "2530500",
    "end": "2538370"
  },
  {
    "text": "in separate the ends a really good application sort of that is if you doing kind of multi-tenancy so you have groups",
    "start": "2538370",
    "end": "2545060"
  },
  {
    "text": "of people who you know you're running code on their behalf but they don't trust each other so putting each of them",
    "start": "2545060",
    "end": "2551930"
  },
  {
    "text": "into their own VN makes the less it makes it more secure for each of those tenants",
    "start": "2551930",
    "end": "2559240"
  },
  {
    "text": "any more questions Thank You Liz thank you very much",
    "start": "2562070",
    "end": "2568250"
  },
  {
    "text": "[Applause]",
    "start": "2568250",
    "end": "2574949"
  }
]