[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "[Music] welcome to the goto podcast each episode",
    "start": "290",
    "end": "8080"
  },
  {
    "text": "covers the brightest and boldest ideas from the world's leading experts in software development tune in for",
    "start": "8080",
    "end": "14120"
  },
  {
    "text": "practical lessons compelling theories and plenty of",
    "start": "14120",
    "end": "19279"
  },
  {
    "text": "inspiration go to gathers the brightest Minds in the software Community to help developers tackle projects today plan",
    "start": "19960",
    "end": "26720"
  },
  {
    "text": "for tomorrow and create a better future stay up to dat with the latest in Tech through goto's top rated events held",
    "start": "26720",
    "end": "33320"
  },
  {
    "text": "online and in person in cities like Amsterdam London Copenhagen and Chicago",
    "start": "33320",
    "end": "39160"
  },
  {
    "text": "and by subscribing to the go-to conferences YouTube channel where you can find thousands more highquality de",
    "start": "39160",
    "end": "44719"
  },
  {
    "text": "talks learn more e [Music]",
    "start": "44719",
    "end": "51530"
  },
  {
    "text": "copa.del Advocate Josh long and I'm joined here for the go-to book club with",
    "start": "52239",
    "end": "58239"
  },
  {
    "text": "the illustrious the amazing the nimit the uh the really really great Thomas V",
    "start": "58239",
    "end": "63719"
  },
  {
    "text": "how are you my friend hey Josh I'm doing great thank you uh it's great to be here with you my",
    "start": "63719",
    "end": "71880"
  },
  {
    "text": "pleasure honestly I wish I I W wish that we could actually be in the same place having this conversation because then",
    "start": "71880",
    "end": "77759"
  },
  {
    "text": "I'm sure it would be uh we could have a longer one uh but it is good to talk to you um and and about a very interesting",
    "start": "77759",
    "end": "84759"
  },
  {
    "text": "thing no less a topic that I think we both appreciate uh something that uh",
    "start": "84759",
    "end": "90000"
  },
  {
    "text": "something on which both of us have written uh you far more recently than I on cloud native Java uh uh with spring",
    "start": "90000",
    "end": "98840"
  },
  {
    "text": "right um I I I love your book I just love it I'm a huge fan I read it uh and",
    "start": "98840",
    "end": "105880"
  },
  {
    "text": "I've recommended it to people uh and I uh I'm I'm just glad we could have this",
    "start": "105880",
    "end": "110960"
  },
  {
    "text": "conversation I think it'll be good so thank you for for that yeah thank you I really appreciate",
    "start": "110960",
    "end": "116640"
  },
  {
    "text": "that and yeah it means a lot that you you like the book and you wrote the forward so thank you for that no no love",
    "start": "116640",
    "end": "124680"
  },
  {
    "text": "it different there's a different word there not Mike I love it it's a masterpiece it is it is just it's an",
    "start": "124680",
    "end": "130759"
  },
  {
    "text": "updated modern holistic I mean it's just right it's",
    "start": "130760",
    "end": "136239"
  },
  {
    "text": "Cloud native so when you hear that term you think oh oh you know the cloud native Computing Foundation uh fractal",
    "start": "136239",
    "end": "142360"
  },
  {
    "text": "diagram or whatever no no this is not that this is a focused production Centric approach to building uh software",
    "start": "142360",
    "end": "149920"
  },
  {
    "text": "with spring which is the Premier toolkit for uh building our native app so I'm I",
    "start": "149920",
    "end": "155760"
  },
  {
    "text": "just I'm a huge fan and it was uh just well done sir well done thank you so",
    "start": "155760",
    "end": "161480"
  },
  {
    "text": "much there's a lot of topics though uh that I kind of want to talk about because I just think I mean there I just",
    "start": "161480",
    "end": "167680"
  },
  {
    "text": "like to get you on the record here and just to have this conversation so I was wondering if we could talk about some of the things that are in the book uh just",
    "start": "167680",
    "end": "176319"
  },
  {
    "text": "superficially and bear in mind this book is now already what 6 months old you know like uh I don't know when did it",
    "start": "176319",
    "end": "181800"
  },
  {
    "text": "come out feel yeah one year now actually it was uh November 2022 it was",
    "start": "181800",
    "end": "188760"
  },
  {
    "text": "officially released yeah I'm sure twice time",
    "start": "188760",
    "end": "194599"
  },
  {
    "text": "twice um wow congrats okay so one year here we are uh and there's just a lot of",
    "start": "194599",
    "end": "199760"
  },
  {
    "text": "stuff so what I'm trying to say is in this ecosystem uh one year is a long time",
    "start": "199760",
    "end": "205879"
  },
  {
    "text": "right a lot of things are already uh changing and uh so I just just want have a conversation maybe we can see if",
    "start": "205879",
    "end": "212200"
  },
  {
    "text": "things have uh uh changed in your opin in your perspective or you know I don't know just let's have a conversation so",
    "start": "212200",
    "end": "218840"
  },
  {
    "text": "first things first um we talk about Cloud native uh what is cloud native",
    "start": "218840",
    "end": "224879"
  },
  {
    "text": "like when you say the cloud native software what does that mean to you yeah that is a very interesting",
    "start": "224879",
    "end": "232560"
  },
  {
    "start": "230000",
    "end": "419000"
  },
  {
    "text": "question actually I spent a whole chapter of that because I really felt like defining the term was important",
    "start": "232560",
    "end": "239840"
  },
  {
    "text": "because uh probably means different things to different people like is it containers is it kubernetes and uh the",
    "start": "239840",
    "end": "247079"
  },
  {
    "text": "bottom line is clone native development is about building is about architecture so how we build application so that uh",
    "start": "247079",
    "end": "254079"
  },
  {
    "text": "they uh run uh better in the cloud so from that perspective but it doesn't",
    "start": "254079",
    "end": "260919"
  },
  {
    "text": "have to be containers in my opinion um I like uh what Cornelia Davis uh wrote in",
    "start": "260919",
    "end": "267800"
  },
  {
    "text": "her book about ctive patterns that cloud is the where where the computation",
    "start": "267800",
    "end": "273880"
  },
  {
    "text": "happens and Cloud native is the how how we build applications to run smoothly in",
    "start": "273880",
    "end": "279120"
  },
  {
    "text": "the cloud um so that that's one of my favorite definitions Cloud native she's",
    "start": "279120",
    "end": "286280"
  },
  {
    "text": "uh a genius and uh you know she was I don't know if you know this she was the",
    "start": "286280",
    "end": "291600"
  },
  {
    "text": "she she used to work at pivotal uh with with my you know I used to work with her in the same company and uh uh when I",
    "start": "291600",
    "end": "298400"
  },
  {
    "text": "launched my podcast she was the first guest of all the people I could have",
    "start": "298400",
    "end": "304080"
  },
  {
    "text": "asked to be my first guest I was like I want to aim as high as I can so she was my first guest she's a wow she's a",
    "start": "304080",
    "end": "311600"
  },
  {
    "text": "Legend um so okay I love that answer you're right that's a I we cannot improve upon that answer so let's not",
    "start": "311600",
    "end": "317520"
  },
  {
    "text": "even try uh so it is the how uh you you",
    "start": "317520",
    "end": "323680"
  },
  {
    "text": "uh build software right it's the how um and I like that you when of your way to",
    "start": "323680",
    "end": "330479"
  },
  {
    "text": "disconnect it from the idea of containers I I think that whole thing is",
    "start": "330479",
    "end": "335560"
  },
  {
    "text": "very confusing to a lot of people and I I tend to think that you know you don't need container it's you need automation",
    "start": "335560",
    "end": "343479"
  },
  {
    "text": "more than you need containers a lot a lot of times automation today is containers but it doesn't have to be if",
    "start": "343479",
    "end": "348880"
  },
  {
    "text": "you have an apid driven infrastructure layer you can get that result may not be",
    "start": "348880",
    "end": "354160"
  },
  {
    "text": "as efficient but you can get the same result you know um and also you know containers are kind",
    "start": "354160",
    "end": "361280"
  },
  {
    "text": "of uh the middle ground today aren't they I uh you've got VMS below that in",
    "start": "361280",
    "end": "366560"
  },
  {
    "text": "terms of like bigger bolier deployment units but above that you've got serverless so it's so like",
    "start": "366560",
    "end": "373160"
  },
  {
    "text": "even even in that even if you're looking at the new stuff like tying it to the containers just makes no sense you know",
    "start": "373160",
    "end": "380319"
  },
  {
    "text": "yeah exactly and it might be just an implementation detail perhaps serverless platform we just push our code and then",
    "start": "380319",
    "end": "387160"
  },
  {
    "text": "if behind the scenes it's wrapped in a container we don't even know or care for that matter uh as developers yeah",
    "start": "387160",
    "end": "394680"
  },
  {
    "text": "exactly love that and uh so what makes people build Cloud native software like why",
    "start": "394680",
    "end": "401919"
  },
  {
    "text": "would I do that instead of uh staying home and having an apple you know like",
    "start": "401919",
    "end": "408120"
  },
  {
    "text": "you have a choice between I'm going to build some cated software versus I don't know whatever else you",
    "start": "408120",
    "end": "414319"
  },
  {
    "text": "might do instead you know like what's the why do people do that yeah there are some goals that we",
    "start": "414319",
    "end": "421400"
  },
  {
    "start": "419000",
    "end": "524000"
  },
  {
    "text": "uh have when building Cloud native applications or at least wishes so that is the reason why we start adopting",
    "start": "421400",
    "end": "427560"
  },
  {
    "text": "Cloud native techniques for example we want to uh build software uh faster so",
    "start": "427560",
    "end": "434000"
  },
  {
    "text": "like the speed of development time to Market sometimes is really critical uh it's provides a competitive advantage or",
    "start": "434000",
    "end": "440879"
  },
  {
    "text": "we want to scale our software uh across different devices around the world so Cloud native Technologies can help with",
    "start": "440879",
    "end": "447479"
  },
  {
    "text": "that uh scalability uh Parts with resilience um and in general it could be",
    "start": "447479",
    "end": "454639"
  },
  {
    "text": "also for cost optimization of course that last one really depends on the use",
    "start": "454639",
    "end": "460440"
  },
  {
    "text": "case it's not always uh um it's not always true I would say like",
    "start": "460440",
    "end": "467039"
  },
  {
    "text": "for example in an organization uh working on more Legacy Technologies if you start onboarding Cloud native",
    "start": "467039",
    "end": "473240"
  },
  {
    "text": "techniques uh perhaps you don't get right away cost optimization because you need time to train stuff you need time",
    "start": "473240",
    "end": "479720"
  },
  {
    "text": "to learn about new technologies so uh that last one really depends but in",
    "start": "479720",
    "end": "485720"
  },
  {
    "text": "general I think those are the main reasons why people look into Cloud medic",
    "start": "485720",
    "end": "492080"
  },
  {
    "text": "techologies yeah",
    "start": "507199",
    "end": "511199"
  },
  {
    "start": "524000",
    "end": "678000"
  },
  {
    "text": "yeah so just like with containers uh I think microservices are quite popular for cloud native applications but it's",
    "start": "524440",
    "end": "530519"
  },
  {
    "text": "not a requirement I would say it's not part of the definition like when tracing back the term Cloud native I was",
    "start": "530519",
    "end": "536839"
  },
  {
    "text": "researching for the book then I found a definition from uh 2010 by P mantle and at that time dogger",
    "start": "536839",
    "end": "546000"
  },
  {
    "text": "didn't exist we were not talking about microservices yet we were talking about cative application so usually that's my",
    "start": "546000",
    "end": "551880"
  },
  {
    "text": "proof that it's not a requirement uh I think that uh the discussion around",
    "start": "551880",
    "end": "557680"
  },
  {
    "text": "microservices and modelis really depends uh so you can have clown native applications in both cases um probably",
    "start": "557680",
    "end": "565440"
  },
  {
    "text": "the I think the best or the uh the better point of view in that regard is",
    "start": "565440",
    "end": "571839"
  },
  {
    "text": "probably looking at the Domain uh or domains within your software and how you",
    "start": "571839",
    "end": "577600"
  },
  {
    "text": "design them using domain design techniques and looking at the bounded context so to have more um modularized",
    "start": "577600",
    "end": "585120"
  },
  {
    "text": "and self-contained modules now if those modules are then deployed independently",
    "start": "585120",
    "end": "590600"
  },
  {
    "text": "as microservices or are part of a monolith I think uh that shouldn't",
    "start": "590600",
    "end": "596279"
  },
  {
    "text": "matter that much uh it's important to look at the organizational needs and requirements I think and the deployment",
    "start": "596279",
    "end": "603000"
  },
  {
    "text": "needs because sometimes uh organizations adopt microservices but the organization is not ready to work with microservices",
    "start": "603000",
    "end": "609839"
  },
  {
    "text": "and then you don't get the benefits that a microservices architecture can provide so it's a mix between Technologies",
    "start": "609839",
    "end": "617240"
  },
  {
    "text": "organizational uh structure and culture and uh overall requirements for the",
    "start": "617240",
    "end": "624360"
  },
  {
    "text": "final system e",
    "start": "624360",
    "end": "632279"
  },
  {
    "start": "678000",
    "end": "887000"
  },
  {
    "text": "yeah so I cover both like rest in um",
    "start": "678040",
    "end": "683200"
  },
  {
    "text": "interactions traditional ones but also messaging and in that sense when working",
    "start": "683200",
    "end": "688279"
  },
  {
    "text": "with distributed system like usually clown na applications are then uh the challenge is like how do we",
    "start": "688279",
    "end": "696800"
  },
  {
    "text": "design a transaction so we don't want to have distributed transaction so then we we go into more like event driven",
    "start": "696800",
    "end": "703000"
  },
  {
    "text": "strategies uh patterns like Saga so that we can build an event based system and",
    "start": "703000",
    "end": "709519"
  },
  {
    "text": "ensure eventual consistency uh across different services in a distributed",
    "start": "709519",
    "end": "715160"
  },
  {
    "text": "system yeah I really like for example uh the well very new project in the spring",
    "start": "715160",
    "end": "721880"
  },
  {
    "text": "uh portfolio spring modul where you can build a modular monolith so it is based",
    "start": "721880",
    "end": "728040"
  },
  {
    "text": "on this domain J design principles so you get all these very nicely self-contained modules uh messaging is",
    "start": "728040",
    "end": "735720"
  },
  {
    "text": "used to talk between them and at any point in time you can just extract the module and make it an independent",
    "start": "735720",
    "end": "741560"
  },
  {
    "text": "application without any effort because it's already designed to be self-contained to be uh yeah it is built",
    "start": "741560",
    "end": "748320"
  },
  {
    "text": "around this concept of bonded context and the principles of the main design so I think it's a really powerful concept one I really like the project it's great",
    "start": "748320",
    "end": "754959"
  },
  {
    "text": "to have the new addition in the spring portfolio I couldn't agree more uh and",
    "start": "754959",
    "end": "760000"
  },
  {
    "text": "one of the nice things I love about it is it it lets you think in terms of events right application context events",
    "start": "760000",
    "end": "766560"
  },
  {
    "text": "but now with the the new 1. one uh you can just take it event and have it",
    "start": "766560",
    "end": "772000"
  },
  {
    "text": "automatically uh distributed over a messaging technology like rabit mq or Kafka so you can have the event within",
    "start": "772000",
    "end": "778800"
  },
  {
    "text": "the same MTH and then uh and then for the",
    "start": "778800",
    "end": "783920"
  },
  {
    "text": "interested services that are that exist outside that MTH you know maybe you still have some",
    "start": "783920",
    "end": "790440"
  },
  {
    "text": "uh they can get messages via rabbit mq or cofco or whatever uh so you can have this event event Centric approach and it",
    "start": "790440",
    "end": "798440"
  },
  {
    "text": "it distributes it or it stays local kind of like erang OTP you know um okay yeah that's really powerful it's it's good",
    "start": "798440",
    "end": "806199"
  },
  {
    "text": "and it just goes like like what you were saying earlier it's it just goes a show you you can build clean code whether",
    "start": "806199",
    "end": "812959"
  },
  {
    "text": "whether it's a micos service or Monet you can you can get good results um uh",
    "start": "812959",
    "end": "818120"
  },
  {
    "text": "okay so this this sort of if you do build",
    "start": "818120",
    "end": "823240"
  },
  {
    "text": "microservices and if you do build um you know smaller self-contained Services uh",
    "start": "823240",
    "end": "830639"
  },
  {
    "text": "then then probably you've got a lot of them right or you've got more than one",
    "start": "830639",
    "end": "835920"
  },
  {
    "text": "and any engineer that sees more than one of something is going to want to turn it into a for Loop instead of dealing with",
    "start": "835920",
    "end": "842839"
  },
  {
    "text": "each one uniquely right you don't want to have special case handling for each",
    "start": "842839",
    "end": "849279"
  },
  {
    "text": "uh thing in the system you want to automate right uh and so uh we get into things like how do I uh how do I deal",
    "start": "849279",
    "end": "855920"
  },
  {
    "text": "with uh resilience and infrastructure and development and so I guess the first question then is um like if I'm dealing",
    "start": "855920",
    "end": "862880"
  },
  {
    "text": "with lots of moving Parts uh for example databases and missed cues and other services no less uh I I think today",
    "start": "862880",
    "end": "870320"
  },
  {
    "text": "during development developers have a couple of really good choices uh one is test",
    "start": "870320",
    "end": "876839"
  },
  {
    "text": "containers uh and the other is uh dock compos and so you know how's a developer",
    "start": "876839",
    "end": "882639"
  },
  {
    "text": "supposed to pick and choose but what's your Insight on that yeah that's a really good point of",
    "start": "882639",
    "end": "890079"
  },
  {
    "start": "887000",
    "end": "1005000"
  },
  {
    "text": "uh the consequences of going uh distributed or going clown you might end",
    "start": "890079",
    "end": "895759"
  },
  {
    "text": "up having all these services and it's important to uh take care of the developer experience so of course we",
    "start": "895759",
    "end": "901240"
  },
  {
    "text": "don't want to make things more difficult for developers and having them to uh spend too much time on infrastructural",
    "start": "901240",
    "end": "907839"
  },
  {
    "text": "concerns uh because especially when using spring Boots the focus is like you get don't need to write all the boner",
    "start": "907839",
    "end": "913959"
  },
  {
    "text": "plate code you get uh all the infrastructure concerns taken care of uh by the framework you can focus on the",
    "start": "913959",
    "end": "920360"
  },
  {
    "text": "business logic but now we risk to add more complexity outside the application but we need to spin up all these other",
    "start": "920360",
    "end": "926839"
  },
  {
    "text": "uh dependencies so having something like dog compos and test containers really help and since since springb 3.1 both of",
    "start": "926839",
    "end": "934160"
  },
  {
    "text": "them are actually uh supported by spring so if you uh go to start the spring. and",
    "start": "934160",
    "end": "940360"
  },
  {
    "text": "you generate a new project and you're using postgress with spring data then you get automatically H either a dogger",
    "start": "940360",
    "end": "947519"
  },
  {
    "text": "compost file with the postgress you information to spin up a container and that happens automatically when you run",
    "start": "947519",
    "end": "953079"
  },
  {
    "text": "your up or test containers uh I really love test containers uh specifically",
    "start": "953079",
    "end": "959199"
  },
  {
    "text": "because uh I mean it's so great and you can use it both for automated testing so",
    "start": "959199",
    "end": "964680"
  },
  {
    "text": "when you run your test you can have test against the real dependency I don't want to use Mo if I'm using postgress in",
    "start": "964680",
    "end": "972560"
  },
  {
    "text": "production I want to use postgress also during testing so I can really trust my test because I have environment parody",
    "start": "972560",
    "end": "979319"
  },
  {
    "text": "and then I can use the same configuration to have postgress also uh Sprint up automatically uh when I'm",
    "start": "979319",
    "end": "985720"
  },
  {
    "text": "developing I mean that that's amazing so I do Sprint boot run and then I get both",
    "start": "985720",
    "end": "990880"
  },
  {
    "text": "the application and all the external dependencies with the life cycle managed by Spring boot itself yeah I love that",
    "start": "990880",
    "end": "998440"
  },
  {
    "text": "absolutely so which so you use test containers first then is that the",
    "start": "998440",
    "end": "1004480"
  },
  {
    "text": "idea um so I think it really depends on the use cases here and perhaps bit of",
    "start": "1004480",
    "end": "1010360"
  },
  {
    "start": "1005000",
    "end": "1168000"
  },
  {
    "text": "personal preferences what I like about test containers is that I have it both in for my auto test and for development",
    "start": "1010360",
    "end": "1017319"
  },
  {
    "text": "so if I have to specify a dependency on post version 15 I only have to write",
    "start": "1017319",
    "end": "1022519"
  },
  {
    "text": "that once so if I use for example test containers for testing and over compos for development then I have that",
    "start": "1022519",
    "end": "1028480"
  },
  {
    "text": "container defined in places so if I want to update the post dependency then I have to do it twice so",
    "start": "1028480",
    "end": "1035000"
  },
  {
    "text": "I tend to prefer test containers because uh it covers my full uh development",
    "start": "1035000",
    "end": "1040438"
  },
  {
    "text": "workflow basically uh I agree I I I quite like it um so Okay so we've got",
    "start": "1040439",
    "end": "1047480"
  },
  {
    "text": "this uh ability and by the way Docker that that that's another thing is I I I",
    "start": "1047480",
    "end": "1053160"
  },
  {
    "text": "think Docker has become as a company that sort reoriented themselves to focus",
    "start": "1053160",
    "end": "1059080"
  },
  {
    "text": "on the developer they're they are not the cloud runtime company as much as",
    "start": "1059080",
    "end": "1064120"
  },
  {
    "text": "they are seems a um a developer sort",
    "start": "1064120",
    "end": "1069360"
  },
  {
    "text": "of path to production Focus company right so they have tools to audit your",
    "start": "1069360",
    "end": "1074440"
  },
  {
    "text": "code and you have doctor compose and all these kinds of things so I I really think that kind of stuff is really cool",
    "start": "1074440",
    "end": "1079799"
  },
  {
    "text": "as well uh but yeah I do I do quite love the granular nature of test containers",
    "start": "1079799",
    "end": "1085039"
  },
  {
    "text": "let's we compos very nicely very discreet little things you know um yeah",
    "start": "1085039",
    "end": "1090280"
  },
  {
    "text": "okay we we talked about uh Automation and I I I I think automation I think",
    "start": "1090280",
    "end": "1096480"
  },
  {
    "text": "consistency is a huge part of that and so um uh you know for many for 15 years",
    "start": "1096480",
    "end": "1104440"
  },
  {
    "text": "something like that Heroku uh have had the the 12 Factor",
    "start": "1104440",
    "end": "1109520"
  },
  {
    "text": "Manifesto right this is the uh set of principles that uh they think they they",
    "start": "1109520",
    "end": "1118480"
  },
  {
    "text": "suggest um will make it easier to build software that is compatible with a",
    "start": "1118480",
    "end": "1124280"
  },
  {
    "text": "dynamic changing uh tulous Cloud environment and so it's principles for",
    "start": "1124280",
    "end": "1130520"
  },
  {
    "text": "architecture and application design uh that make your code make your project more compatible with cloud and of course",
    "start": "1130520",
    "end": "1137919"
  },
  {
    "text": "there when we say cloud we have to remember they're talking about a Heroku platform as a service uh but I think",
    "start": "1137919",
    "end": "1143799"
  },
  {
    "text": "generally the rules are pretty much you know whether you're running on a a",
    "start": "1143799",
    "end": "1149120"
  },
  {
    "text": "platform as a service or whether you build all that stuff yourself you're eventually going to run on a platform as a service right so they talk about the",
    "start": "1149120",
    "end": "1155520"
  },
  {
    "text": "12 Factor Manifesto but you in your book you also talk about 15 Factor one um so",
    "start": "1155520",
    "end": "1161159"
  },
  {
    "text": "first of all what is the 12 Factor Manifesto and and then what is this 15 Factor manest what's the Delta yeah so",
    "start": "1161159",
    "end": "1167600"
  },
  {
    "text": "as you said that 12 Factor up Manifesto came from Heroku to help customers uh",
    "start": "1167600",
    "end": "1172840"
  },
  {
    "start": "1168000",
    "end": "1373000"
  },
  {
    "text": "build applications that were more um seamlessly Deployable on their Cloud",
    "start": "1172840",
    "end": "1178880"
  },
  {
    "text": "platform but in general actually they became very good principles to build cognitive applications in general things",
    "start": "1178880",
    "end": "1184679"
  },
  {
    "text": "like we want to externalize configuration so that uh if we have separate configuration for testing and",
    "start": "1184679",
    "end": "1191320"
  },
  {
    "text": "production we don't bake that into the application artifact we want to keep it outside um over the years they I would",
    "start": "1191320",
    "end": "1198919"
  },
  {
    "text": "say they are still relevant but then I think back in 2016 Uh Kevin Hoffman wrote a book called beyond the 12 Factor",
    "start": "1198919",
    "end": "1206159"
  },
  {
    "text": "up and introduced three new factors and um review a bit some of the existing",
    "start": "1206159",
    "end": "1212679"
  },
  {
    "text": "ones so for example the configuration Factor he extended it so that he would",
    "start": "1212679",
    "end": "1218960"
  },
  {
    "text": "uh distinguish between uh credentials and non sensitive configuration code so",
    "start": "1218960",
    "end": "1226080"
  },
  {
    "text": "like we have a um three different uh parallel lines the code the credentials",
    "start": "1226080",
    "end": "1231960"
  },
  {
    "text": "and uh the configuration that should never uh cross never meet so I think",
    "start": "1231960",
    "end": "1237720"
  },
  {
    "text": "that was uh very important to have more attention to credentials like we don't",
    "start": "1237720",
    "end": "1243480"
  },
  {
    "text": "want to handle them just like we handle any other kind of configuration uh and introduce also new",
    "start": "1243480",
    "end": "1250039"
  },
  {
    "text": "factors my favorite one of the new addition is the one about Telemetry because he wrote like treat your",
    "start": "1250039",
    "end": "1256840"
  },
  {
    "text": "applications like space probes and I think that's a very powerful image to",
    "start": "1256840",
    "end": "1262039"
  },
  {
    "text": "have around observability and the fact that we want observability and not just",
    "start": "1262039",
    "end": "1267919"
  },
  {
    "text": "monitoring with observability we want to be able to ask uh any kind of question without",
    "start": "1267919",
    "end": "1274120"
  },
  {
    "text": "having to re instrument the application like we do for monitoring because for monitoring we look for known States for",
    "start": "1274120",
    "end": "1279760"
  },
  {
    "text": "observability we don't and if we consider the space probes it's not like we can uh continuously add new sensors",
    "start": "1279760",
    "end": "1286840"
  },
  {
    "text": "one the once the probe is out of the planet orbit so uh I really",
    "start": "1286840",
    "end": "1293320"
  },
  {
    "text": "like how like yeah how we frame this uh this new part I I quite like that as",
    "start": "1293320",
    "end": "1299559"
  },
  {
    "text": "well um so and and so can we can we talk briefly",
    "start": "1299559",
    "end": "1305279"
  },
  {
    "text": "about some of the uh the toll factors I mean I think I I they're so old I kind",
    "start": "1305279",
    "end": "1310799"
  },
  {
    "text": "of wonder if people know them um but uh I mean it's not hard there it's 12f",
    "start": "1310799",
    "end": "1316360"
  },
  {
    "text": "factor. net I think right that's the website yeah and so they've got these um",
    "start": "1316360",
    "end": "1322200"
  },
  {
    "text": "pretty solid basic ideas right one codebase track and revision control many deploy so whether you're going to",
    "start": "1322200",
    "end": "1329120"
  },
  {
    "text": "development prod and and uh Q&A and all that it's the same code base not different builds for different",
    "start": "1329120",
    "end": "1335039"
  },
  {
    "text": "environments right um uh and then uh dependencies explicitly declare and",
    "start": "1335039",
    "end": "1341640"
  },
  {
    "text": "isolate dependencies configuration we just talked about that basically you keep configuration in the environment",
    "start": "1341640",
    "end": "1347039"
  },
  {
    "text": "and you just you just make big Point there's a distinction between credentials and non-sensitive CR uh",
    "start": "1347039",
    "end": "1353799"
  },
  {
    "text": "values uh build release run strictly separate build and run stages what is",
    "start": "1353799",
    "end": "1359679"
  },
  {
    "text": "that is that is that just uh let just basically build the jar here and then",
    "start": "1359679",
    "end": "1364919"
  },
  {
    "text": "rent it over there right as opposed to you know you you put a thing together this the package thing and then you app",
    "start": "1364919",
    "end": "1371159"
  },
  {
    "text": "it somewhere else is that the idea yeah exactly you build your application once as part of your pipeline and then is the",
    "start": "1371159",
    "end": "1377520"
  },
  {
    "start": "1373000",
    "end": "1495000"
  },
  {
    "text": "same artifact that goes through all these stages uh uh we don't want to build an artifact specifically for",
    "start": "1377520",
    "end": "1384600"
  },
  {
    "text": "testing and then we build another one for production but it's the same one that needs to go through all the stages otherwise we cannot really qualify it",
    "start": "1384600",
    "end": "1390880"
  },
  {
    "text": "and ensure that uh it's the yeah yeah that is behaving correctly so we want to",
    "start": "1390880",
    "end": "1398400"
  },
  {
    "text": "build it once and then it must be mutable so if something changes we have to go back to the build pH build a new",
    "start": "1398400",
    "end": "1403640"
  },
  {
    "text": "one and then go through all the the steps again with the same immutable activ absolutely uh",
    "start": "1403640",
    "end": "1410440"
  },
  {
    "text": "and the one one of the other ones that I led is the idea of backing Services basically practically speaking all",
    "start": "1410440",
    "end": "1417360"
  },
  {
    "text": "things will be a network cop away right from your service and uh you'll treat them as things that can come and go uh",
    "start": "1417360",
    "end": "1425240"
  },
  {
    "text": "and that your application should be aware of um they're attached resources right they could be",
    "start": "1425240",
    "end": "1431240"
  },
  {
    "text": "unattached uh that as that's kind of interesting though when they talk about that in Heroku and in Cloud they're just",
    "start": "1431240",
    "end": "1439159"
  },
  {
    "text": "talking about environment variables that have credentials that you can use to then connect to your data source",
    "start": "1439159",
    "end": "1444520"
  },
  {
    "text": "whatever um but you know in the cloud native Computing Foundation uh they've",
    "start": "1444520",
    "end": "1449600"
  },
  {
    "text": "got a you know there's service bindings right that came out of the uh the work",
    "start": "1449600",
    "end": "1454960"
  },
  {
    "text": "there but that's actually from kubernetes yeah kubernetes now as well yeah um so it's kind of interesting how",
    "start": "1454960",
    "end": "1460640"
  },
  {
    "text": "that is evolved right I think people are codifying some of these good practices um processes execute the app as one or",
    "start": "1460640",
    "end": "1468600"
  },
  {
    "text": "more stateless processes uh yeah that's when they stay when they say stateless what are they talking about there",
    "start": "1468600",
    "end": "1474320"
  },
  {
    "text": "they're not talking about uh session state they're talking about well they maybe are talk they're",
    "start": "1474320",
    "end": "1480080"
  },
  {
    "text": "not saying they're saying they're saying if the app got killed then nothing would",
    "start": "1480080",
    "end": "1485520"
  },
  {
    "text": "be lost right I could restart the instance and then all the state that I had before would be somewhere else it be exactly reddis or SE database or",
    "start": "1485520",
    "end": "1493320"
  },
  {
    "text": "whatever yeah and that's the ultimate test so to ensure that you don't have any state in Europe up",
    "start": "1493320",
    "end": "1498919"
  },
  {
    "start": "1495000",
    "end": "1611000"
  },
  {
    "text": "you have multiple instances you shut down one if you lost data then it's not stess so there's something to fix yeah",
    "start": "1498919",
    "end": "1507000"
  },
  {
    "text": "right could um okay Port binding expose export Services via Port binding uh so",
    "start": "1507000",
    "end": "1515440"
  },
  {
    "text": "this is the idea that the platform gives you the port right yeah and I feel like with spring boot is kind of out of the",
    "start": "1515440",
    "end": "1521559"
  },
  {
    "text": "box actually many of these factors you get you get them out of the box with the Springwood experience because that was I",
    "start": "1521559",
    "end": "1528120"
  },
  {
    "text": "think I think uh back then we had these uh big application servers deploying multiple application packages or files",
    "start": "1528120",
    "end": "1535080"
  },
  {
    "text": "on it uh Expos through different endpoints but now we just like spring we",
    "start": "1535080",
    "end": "1540960"
  },
  {
    "text": "we have the separate applications each application exposed to a different port so uh I think it's really great that",
    "start": "1540960",
    "end": "1547559"
  },
  {
    "text": "some of these became so so I don't know part of the everyday life for a",
    "start": "1547559",
    "end": "1553120"
  },
  {
    "text": "developer because like spring W already from version one actually uh coding",
    "start": "1553120",
    "end": "1558919"
  },
  {
    "text": "this ensuring a nice clown native experience for developers yeah I I'm a I'm a Big Spring",
    "start": "1558919",
    "end": "1566600"
  },
  {
    "text": "boot fan but I will also say uh uh drop wizard did a lot of that stuff before spring Boot and you know we we owe a",
    "start": "1566600",
    "end": "1574039"
  },
  {
    "text": "debt uh to them for what was done there a lot of that a lot of that a lot of the",
    "start": "1574039",
    "end": "1579360"
  },
  {
    "text": "Innovation that we see now in the equal system uh started with drop wizard I",
    "start": "1579360",
    "end": "1584840"
  },
  {
    "text": "think spring boot obviously spring developer advate I you don't have to ask me I I I think it did a great job but",
    "start": "1584840",
    "end": "1592200"
  },
  {
    "text": "there's some really cool stuff a lot of that a lot of that initial uh wisdom you know um okay see",
    "start": "1592200",
    "end": "1600799"
  },
  {
    "text": "uh anyway there's just some good the logs oh treat logs as event streams this goes back to your observability point right like uh this is another kind of",
    "start": "1600799",
    "end": "1608640"
  },
  {
    "text": "observability isn't it yeah it is and the factor is about",
    "start": "1608640",
    "end": "1613919"
  },
  {
    "start": "1611000",
    "end": "1770000"
  },
  {
    "text": "having logs just as a stream of events so just output there them through the",
    "start": "1613919",
    "end": "1619120"
  },
  {
    "text": "standard output and not deal with log files and rotation of log files and",
    "start": "1619120",
    "end": "1624760"
  },
  {
    "text": "having to script those log files so that from a developer perspective we just output the stream of events and then we",
    "start": "1624760",
    "end": "1631640"
  },
  {
    "text": "rely on the platform to scrape them to collect them and then make them available uh in some yeah GUI where we",
    "start": "1631640",
    "end": "1638279"
  },
  {
    "text": "can query them so that move some responsibility from applications to to the underline",
    "start": "1638279",
    "end": "1644000"
  },
  {
    "text": "platform now this gets to another question um yeah you know we I hear this",
    "start": "1644000",
    "end": "1649159"
  },
  {
    "text": "all the time people ask me all the time why do I need spring Cloud if I have a steel",
    "start": "1649159",
    "end": "1654880"
  },
  {
    "text": "right which is which tells me that people don't understand either one of them uh uh because I I can do What mo I",
    "start": "1654880",
    "end": "1662080"
  },
  {
    "text": "can do 99% of what yo does without ISO but I can't",
    "start": "1662080",
    "end": "1667480"
  },
  {
    "text": "do most of what spring Cod does without spring Cod that is to say",
    "start": "1667480",
    "end": "1673519"
  },
  {
    "text": "you need the integration in the app to get that behavior uh even if you're",
    "start": "1673519",
    "end": "1678640"
  },
  {
    "text": "using is right so yeah what is the I don't know what what like logs you",
    "start": "1678640",
    "end": "1685120"
  },
  {
    "text": "mentioned logs the reason I'm talking about this is because that's a platform responsibility right uh and the platform",
    "start": "1685120",
    "end": "1690240"
  },
  {
    "text": "is responsible for when you it it runs your process and it then takes the logs",
    "start": "1690240",
    "end": "1695960"
  },
  {
    "text": "and S sends them off to you know CIS log or something right or or or Splunk or",
    "start": "1695960",
    "end": "1701799"
  },
  {
    "text": "elastic or whatever right it could be um but that's the contract you don't care about that all you know is you you write",
    "start": "1701799",
    "end": "1707799"
  },
  {
    "text": "to St standard out and then the platform takes care of taking those logs and then making them available somewhere for you",
    "start": "1707799",
    "end": "1714000"
  },
  {
    "text": "later right um yeah and and I I guess this brings the you know what other",
    "start": "1714000",
    "end": "1720000"
  },
  {
    "text": "contracts does a platform in your sort of opinion kind of have I'm thinking about things like um service Discovery",
    "start": "1720000",
    "end": "1727200"
  },
  {
    "text": "right and configuration we just talked about that you know yeah service Discovery and load balancing uh I guess",
    "start": "1727200",
    "end": "1733399"
  },
  {
    "text": "yeah I also get those types of question a lot like around spring cloud and we ready isq uh and I think it really",
    "start": "1733399",
    "end": "1740840"
  },
  {
    "text": "depends so for example service discover is something we get out of the box from kubernetes so we can just like if we",
    "start": "1740840",
    "end": "1746919"
  },
  {
    "text": "want to call another service we do it by name directly we don't need any additional dependency in the application",
    "start": "1746919",
    "end": "1753960"
  },
  {
    "text": "so for that for that specific use case we don't need something like pre Cloud Eureka for",
    "start": "1753960",
    "end": "1760240"
  },
  {
    "text": "example but other things like uh yeah a question I get a lot is spring Cloud",
    "start": "1760240",
    "end": "1765320"
  },
  {
    "text": "Gateway and e or right uh and I think the key part there",
    "start": "1765320",
    "end": "1772240"
  },
  {
    "text": "is who is responsible for what because a developer probably",
    "start": "1772240",
    "end": "1777519"
  },
  {
    "text": "shouldn't know or be responsible for working with e that's the platform responsibility so I feel like at the",
    "start": "1777519",
    "end": "1783840"
  },
  {
    "text": "platform level the platform Engineers use ISO to do things like I don't know",
    "start": "1783840",
    "end": "1789600"
  },
  {
    "text": "service to service um encrypted communication with mtls right that's",
    "start": "1789600",
    "end": "1794799"
  },
  {
    "text": "fine that's a platform responsibility but then as a developer working with uh something like sprink Cloud gateway then",
    "start": "1794799",
    "end": "1802360"
  },
  {
    "text": "I can manage the routing and security that I as a developer know about the",
    "start": "1802360",
    "end": "1807840"
  },
  {
    "text": "applications so it would be maybe not a good idea to push that",
    "start": "1807840",
    "end": "1813000"
  },
  {
    "text": "down to the platform team as a responsibility and so I think the it's not an or or I",
    "start": "1813000",
    "end": "1822159"
  },
  {
    "text": "think it's more of a coexistence yeah so we have something like spring Cloud Gateway that is very",
    "start": "1822159",
    "end": "1827279"
  },
  {
    "text": "developer Focus so it's application developers working with it and then there are other concerns that come from",
    "start": "1827279",
    "end": "1833399"
  },
  {
    "text": "the platform using other kubernetes native functionality or using something like yeah I yeah great answer I I think",
    "start": "1833399",
    "end": "1841480"
  },
  {
    "text": "it's a it's it works really well when you consider that they both have to be there you know uh like uh we mentioned",
    "start": "1841480",
    "end": "1850039"
  },
  {
    "text": "um imagine you're doing uh fallbacks you know um circuit breakers right well what",
    "start": "1850039",
    "end": "1856799"
  },
  {
    "text": "happens when there's a failure with this to all you can get is a a status code or",
    "start": "1856799",
    "end": "1862679"
  },
  {
    "text": "something like that right and I want to have a a default fa fallback uh Behavior",
    "start": "1862679",
    "end": "1869600"
  },
  {
    "text": "that's that's up to my code to do something interesting there okay what about distributed tracing right if the",
    "start": "1869600",
    "end": "1875120"
  },
  {
    "text": "platform supports propagating those Trace headers who cares if your program doesn't know how to handle it if there's",
    "start": "1875120",
    "end": "1881440"
  },
  {
    "text": "nothing in your code to know what to do with those headers to propagate them and to send them onward then it's not going",
    "start": "1881440",
    "end": "1887240"
  },
  {
    "text": "to work right you need need to have both sides there um yeah oh you know Federated authentication right like uh",
    "start": "1887240",
    "end": "1893960"
  },
  {
    "text": "you know single sign on somebody's got to provide the IDP but again that",
    "start": "1893960",
    "end": "1899000"
  },
  {
    "text": "identity that concept of identity doesn't mean anything unless like old knows to look for it you know um so it's",
    "start": "1899000",
    "end": "1904679"
  },
  {
    "text": "sort of these two sides and I I this is why I always get very confused when people say these things like I don't",
    "start": "1904679",
    "end": "1911039"
  },
  {
    "text": "need Sprint cut oh read okay I think you're confused um you mentioned the",
    "start": "1911039",
    "end": "1917039"
  },
  {
    "text": "Gateway the Gateway is like so obviously I like API gateways in general uh and I",
    "start": "1917039",
    "end": "1923279"
  },
  {
    "text": "love spring H Gateway in particular um uh like where do you use uh what are",
    "start": "1923279",
    "end": "1930080"
  },
  {
    "text": "some of the use cases what are some of the cool use cases you've seen for gateways I just wonder yeah so the the first use case",
    "start": "1930080",
    "end": "1937320"
  },
  {
    "start": "1935000",
    "end": "2106000"
  },
  {
    "text": "which is I think one of the main reasons why we uh use this uh we adopt the API gway pattern is if we have multiple",
    "start": "1937320",
    "end": "1944159"
  },
  {
    "text": "Services as part of our system we don't want our clients uh to keep having to keep track of all",
    "start": "1944159",
    "end": "1950519"
  },
  {
    "text": "those end points so we want one Central uh entry point uh Ingress point to our",
    "start": "1950519",
    "end": "1955760"
  },
  {
    "text": "system so that's the the basic use case so the all the request goes to the spring Cloud Gateway and then they are",
    "start": "1955760",
    "end": "1962519"
  },
  {
    "text": "routed uh across different Services based on some criterias and that's the basic but then on top of that there's uh",
    "start": "1962519",
    "end": "1969480"
  },
  {
    "text": "so many powerful features that we can do on top of that we can have we can adopt different resilience patterns for",
    "start": "1969480",
    "end": "1976000"
  },
  {
    "text": "example you mentioned the fail over so we can have circuit breakers in the Gateway so if I call in a service to",
    "start": "1976000",
    "end": "1982559"
  },
  {
    "text": "retrieve I don't know a list of books available in a catalog uh then and we go back to the",
    "start": "1982559",
    "end": "1989279"
  },
  {
    "text": "application developer responsibility I can Define directly in the Gateway that if the service is not available maybe I",
    "start": "1989279",
    "end": "1994679"
  },
  {
    "text": "cat the previous response in R and then I can return that um I can Define some",
    "start": "1994679",
    "end": "2000919"
  },
  {
    "text": "timeouts retries uh and I can do a lot of security stuff as well um I can have",
    "start": "2000919",
    "end": "2007919"
  },
  {
    "text": "that single entry point to the system for doing authentication delegating to O and open ID connect and on top of that I",
    "start": "2007919",
    "end": "2015080"
  },
  {
    "text": "can uhh customized the way I want my tokens uh to be shaped because I guess",
    "start": "2015080",
    "end": "2023240"
  },
  {
    "text": "we have a very standard authentication mechanism but then when it comes to authorization each application is",
    "start": "2023240",
    "end": "2028559"
  },
  {
    "text": "different so we need that power power of customization also in an easy way and",
    "start": "2028559",
    "end": "2033919"
  },
  {
    "text": "sprink Cloud Gateway provides that I love sprink Cloud Gateway so I think all these cross cutting concerns security",
    "start": "2033919",
    "end": "2039240"
  },
  {
    "text": "resilience and observability because then at that point we can keep track of all the traffic that enters the system",
    "start": "2039240",
    "end": "2045120"
  },
  {
    "text": "from the Gateway so we can start tracing from the Gateway and have full visibility into everything that is going",
    "start": "2045120",
    "end": "2051280"
  },
  {
    "text": "on we can have rate limiting and another thing I really like so if we provide an",
    "start": "2051280",
    "end": "2057040"
  },
  {
    "text": "apis service with different tiers then maybe the free tier has a low rate limit",
    "start": "2057040",
    "end": "2063760"
  },
  {
    "text": "and if you buy a subscription then it's a different rate limiting",
    "start": "2063760",
    "end": "2069720"
  },
  {
    "text": "policy yeah uh yeah perfect and you just mentioned resilience and uh and uh I",
    "start": "2069760",
    "end": "2076480"
  },
  {
    "text": "think that kind of leads me into my next question um well not resilience I'm",
    "start": "2076480",
    "end": "2081679"
  },
  {
    "text": "thinking of like scalability here you know uh you've got the Gateway the Gateway is sending traffic down your",
    "start": "2081679",
    "end": "2087440"
  },
  {
    "text": "back backend uh Services how do I make sure that my service is going to be able to meet that demand like uh what are",
    "start": "2087440",
    "end": "2094599"
  },
  {
    "text": "your thoughts on uh reactive programming versus Doom versus you know just",
    "start": "2094599",
    "end": "2100000"
  },
  {
    "text": "horizontal scaling I mean what do you what is your average developer going to do these",
    "start": "2100000",
    "end": "2105240"
  },
  {
    "text": "days yeah so spring Cloud Gateway originally was built with uh like on top of the reactive stack provided by Spring",
    "start": "2105240",
    "end": "2112760"
  },
  {
    "start": "2106000",
    "end": "2343000"
  },
  {
    "text": "and reactor and uh the reason was exactly about scalability because uh",
    "start": "2112760",
    "end": "2119200"
  },
  {
    "text": "with a more traditional model based on one threat one request uh it would become a huge bottleneck having a a",
    "start": "2119200",
    "end": "2126960"
  },
  {
    "text": "Gateway build with that um with that pattern or architecture uh with reactive",
    "start": "2126960",
    "end": "2132560"
  },
  {
    "text": "programming we get more scalability and more resilience because we can use just a few threads and then handle request in",
    "start": "2132560",
    "end": "2139599"
  },
  {
    "text": "a very um well in in a very a synchronous way so we don't have to assign a thread to a",
    "start": "2139599",
    "end": "2146440"
  },
  {
    "text": "request but if there's nothing to do maybe we're waiting for another service or a database to reply uh we can use",
    "start": "2146440",
    "end": "2153280"
  },
  {
    "text": "that computational power to do something else no need to to wait around and waste",
    "start": "2153280",
    "end": "2159359"
  },
  {
    "text": "resources and that's one of the power of reactive programming about building more scalable and resilient applications the",
    "start": "2159359",
    "end": "2166000"
  },
  {
    "text": "other side I think is the programming model I really like the programming model where everything is a a stream of",
    "start": "2166000",
    "end": "2172400"
  },
  {
    "text": "data we have this reactive stream and you can combine different data sources together but using the same the same",
    "start": "2172400",
    "end": "2179319"
  },
  {
    "text": "apis so I can have a flow of data with data coming from a database from a message que from an HTTP API and they",
    "start": "2179319",
    "end": "2187599"
  },
  {
    "text": "don't look the same in this reactive stream I can apply resilience patterns to all of them and uh I think it's a",
    "start": "2187599",
    "end": "2194720"
  },
  {
    "text": "really powerful way of programming of course it's very different from the more traditional imperative programming we",
    "start": "2194720",
    "end": "2199760"
  },
  {
    "text": "are used to and then we have Loom of course one",
    "start": "2199760",
    "end": "2205839"
  },
  {
    "text": "of the probably the main thing in Java 21 now is uh that we get this virtual",
    "start": "2205839",
    "end": "2212640"
  },
  {
    "text": "threads uh previously called project Loom where now we can have uh",
    "start": "2212640",
    "end": "2218160"
  },
  {
    "text": "uh virtual threats exactly doing all the computation so we don't uh use um like",
    "start": "2218160",
    "end": "2226079"
  },
  {
    "text": "machine threads to wait and hang around if there's a if they're waiting for a",
    "start": "2226079",
    "end": "2232079"
  },
  {
    "text": "request but we going to spin up tons of different virual threats that can that",
    "start": "2232079",
    "end": "2237920"
  },
  {
    "text": "can take care of that so in a way we also uh enter more into an as synchronous fashion where we have these",
    "start": "2237920",
    "end": "2245240"
  },
  {
    "text": "uh threads that are mounted and unmounted dynamically without having to uh block resources",
    "start": "2245240",
    "end": "2253240"
  },
  {
    "text": "while they're waiting for something to happen yeah it's Best of Both Worlds yeah that brings a lot of uh",
    "start": "2253240",
    "end": "2260280"
  },
  {
    "text": "capabilities for also building scalable uh applications also using more traditional imperative way um for",
    "start": "2260280",
    "end": "2268640"
  },
  {
    "text": "example spring CL Gateway now there's a a new version of it that is based on viritual threats instead of being based",
    "start": "2268640",
    "end": "2274960"
  },
  {
    "text": "on the reactive stack um he can use spiritual threats to be to reach that",
    "start": "2274960",
    "end": "2280640"
  },
  {
    "text": "skillability demand that a gway actually needs right so good okay so now we've",
    "start": "2280640",
    "end": "2286960"
  },
  {
    "text": "we've talked about a number of things a number of practices uh that we can use to build really robust Services right in",
    "start": "2286960",
    "end": "2294920"
  },
  {
    "text": "in Spring obviously but um you know that mcer you know mcer the artist he's got a",
    "start": "2294920",
    "end": "2300680"
  },
  {
    "text": "picture of a hand drawing itself right um he drew a picture of another of a",
    "start": "2300680",
    "end": "2306520"
  },
  {
    "text": "hand drawing a picture of the hand drawing the picture of itself basically uh and I I think about that picture a",
    "start": "2306520",
    "end": "2311640"
  },
  {
    "text": "lot because that to me describes the cloud is as useful as it is is to build",
    "start": "2311640",
    "end": "2317000"
  },
  {
    "text": "robust scalable services without the infrastructure and without the pipeline",
    "start": "2317000",
    "end": "2322319"
  },
  {
    "text": "it sort of just doesn't matter does it so um this brings us to continuous",
    "start": "2322319",
    "end": "2327880"
  },
  {
    "text": "delivery and and get Ops and uh and how would you distinguish um one from the",
    "start": "2327880",
    "end": "2335200"
  },
  {
    "text": "other like what is get UPS compared to continuous delivery in in the modern world you know the modern thinking of",
    "start": "2335200",
    "end": "2342520"
  },
  {
    "text": "it yeah so continuous delivery I see that's uh um that uh way that mindset",
    "start": "2342520",
    "end": "2349720"
  },
  {
    "start": "2343000",
    "end": "2786000"
  },
  {
    "text": "that's uh yeah that process that we use to build software so that it's always in",
    "start": "2349720",
    "end": "2354800"
  },
  {
    "text": "a releasable state and this is the main definition also from the uh awesome",
    "start": "2354800",
    "end": "2360000"
  },
  {
    "text": "continuous delivery uh book now I know that the term is used to mean different",
    "start": "2360000",
    "end": "2366440"
  },
  {
    "text": "things we always have this problem I feel in our industry with terminology uh but I I feel like continuous delivery",
    "start": "2366440",
    "end": "2372640"
  },
  {
    "text": "encompasses the whole process and mindset and then as part of continuous",
    "start": "2372640",
    "end": "2377720"
  },
  {
    "text": "delivery we can have different uh approaches and techniques for example continuous integration uh so that we",
    "start": "2377720",
    "end": "2385079"
  },
  {
    "text": "continuously uh push our changes to uh get repo we're not waiting around on a separate Branch because otherwise then",
    "start": "2385079",
    "end": "2392319"
  },
  {
    "text": "merging all together will be more difficult we're going to get conflicts and uh continuous delivery actually",
    "start": "2392319",
    "end": "2399560"
  },
  {
    "text": "gives control of when we release software uh to the business rather than",
    "start": "2399560",
    "end": "2406079"
  },
  {
    "text": "to be bound by a technical concern so we don't necessarily deploy but we always",
    "start": "2406079",
    "end": "2413560"
  },
  {
    "text": "have a release candidate which is approved which is qualified went through the pipeline and then if we also want to",
    "start": "2413560",
    "end": "2420720"
  },
  {
    "text": "uh every time we build a new uh release we want to deploy it then we reach continuous deployment so it of an",
    "start": "2420720",
    "end": "2427960"
  },
  {
    "text": "extension to our Pipeline and gitops is actually a way to implement continuous deployment because before gitops what we",
    "start": "2427960",
    "end": "2434720"
  },
  {
    "text": "would do is as final step in our pipeline then we will authenticate with",
    "start": "2434720",
    "end": "2440319"
  },
  {
    "text": "the I don't know with the production environment and then the pipeline would deploy the application directly in",
    "start": "2440319",
    "end": "2446800"
  },
  {
    "text": "production right GS we kind of reversing control is the production environment that pulls changes so whenever there's a",
    "start": "2446800",
    "end": "2454760"
  },
  {
    "text": "new release stem uh it pulls down the new release and updates the deployment uh relying on uh The",
    "start": "2454760",
    "end": "2461960"
  },
  {
    "text": "Continuous reconciliation capabilities within kubernetes right so the pipeline is not",
    "start": "2461960",
    "end": "2468560"
  },
  {
    "text": "responsible anymore to the deployment that gives several advantages one of them being the P doesn't need access to",
    "start": "2468560",
    "end": "2474440"
  },
  {
    "text": "all these environments but we can have a more uh yeah more decou system I I see",
    "start": "2474440",
    "end": "2481359"
  },
  {
    "text": "as a an event driven system because we don't have uh uh like is the gups agent",
    "start": "2481359",
    "end": "2488640"
  },
  {
    "text": "that listens to events so when there's a a new version of the application then it",
    "start": "2488640",
    "end": "2493760"
  },
  {
    "text": "acts upon it it doesn't need to know how that new jar file or container image has",
    "start": "2493760",
    "end": "2499240"
  },
  {
    "text": "been built right so kind of separation of concerns there I quite like that yeah that's a",
    "start": "2499240",
    "end": "2505400"
  },
  {
    "text": "good point you know everything before the platform has to be built into the pipeline otherwise uh whereas if you",
    "start": "2505400",
    "end": "2511119"
  },
  {
    "text": "just use giops you're just thinking about the thing that the platform takes in you don't care about everything",
    "start": "2511119",
    "end": "2516480"
  },
  {
    "text": "before that you know um okay so that's fantastic so so the",
    "start": "2516480",
    "end": "2521640"
  },
  {
    "text": "the uh these are different ways to get to production they're they're all uh based on the idea that you're constantly",
    "start": "2521640",
    "end": "2527960"
  },
  {
    "text": "shippable right they're all uh the goal is to be able to get to production",
    "start": "2527960",
    "end": "2533240"
  },
  {
    "text": "consistently and easily and without intervention from a human being uh as much as possible um uh but that that",
    "start": "2533240",
    "end": "2540440"
  },
  {
    "text": "does bring the question of okay suppose I'm uh I'm a developer and I'm making changes to my code um and somay we have",
    "start": "2540440",
    "end": "2547920"
  },
  {
    "text": "to go to production should I use a branch what's your opinion on this stuff like or should I do a feature flag or",
    "start": "2547920",
    "end": "2554400"
  },
  {
    "text": "what's your you know where do you stand on this discussion uh yeah so uh if possible my",
    "start": "2554400",
    "end": "2562680"
  },
  {
    "text": "preference would be towards trun based development where we have only one main branch and using continuous integration",
    "start": "2562680",
    "end": "2570040"
  },
  {
    "text": "we continuously uh push changes to that Branch uh of course uh doing continuous",
    "start": "2570040",
    "end": "2575760"
  },
  {
    "text": "integration means that uh we won't get like if it's a big feature we're implementing maybe we don't want to",
    "start": "2575760",
    "end": "2582480"
  },
  {
    "text": "enable part of the codes until it's fully complete so future Flex is a great",
    "start": "2582480",
    "end": "2588000"
  },
  {
    "text": "way of uh dealing with this like reconciling continuous integration with the feature is not ready to be out there",
    "start": "2588000",
    "end": "2594960"
  },
  {
    "text": "so we put the feature flag once all the code is uh implemented for that feature",
    "start": "2594960",
    "end": "2600640"
  },
  {
    "text": "then uh we can perhaps uh enable that feature flag on only certain environments or doing some H AB testing",
    "start": "2600640",
    "end": "2608280"
  },
  {
    "text": "enable it just for some users to try it out and so we can actually adop different Advanced deployment uh",
    "start": "2608280",
    "end": "2615880"
  },
  {
    "text": "patterns there but I think the key part for me is uh not keeping long lift uh",
    "start": "2615880",
    "end": "2621839"
  },
  {
    "text": "branches I mean it's fine to create a branch if it's short lived otherwise I",
    "start": "2621839",
    "end": "2627640"
  },
  {
    "text": "feel like it creates too many problems one I mentioned earlier with conflicts and not having the right state in the",
    "start": "2627640",
    "end": "2634839"
  },
  {
    "text": "main branch if we're testing that so we find problems later that's never good",
    "start": "2634839",
    "end": "2639960"
  },
  {
    "text": "and then the other one is uh more about yeah this Divergence like we have",
    "start": "2639960",
    "end": "2646920"
  },
  {
    "text": "codes that lives in a separate Branch for months and if that code is not in",
    "start": "2646920",
    "end": "2652920"
  },
  {
    "text": "the main branch and it's not in production is basically useless doesn't provide any value so I'm always for uh",
    "start": "2652920",
    "end": "2659359"
  },
  {
    "text": "uh pushing fast yeah and actuate that value because",
    "start": "2659359",
    "end": "2665520"
  },
  {
    "text": "that's why we write code so like it's not real until it's in production yeah",
    "start": "2665520",
    "end": "2671240"
  },
  {
    "text": "um I think uh I think we did it I think we covered I think we're if if I acted",
    "start": "2671240",
    "end": "2677480"
  },
  {
    "text": "on all the things that we talked about today uh I think I would have most probably not all but most of what I",
    "start": "2677480",
    "end": "2684640"
  },
  {
    "text": "would need to to get to production and uh you know obviously there's a lot of",
    "start": "2684640",
    "end": "2691680"
  },
  {
    "text": "details that we've left out we don't have 20 hours to have this conversation or 30 or 40 or 100 uh but I think if",
    "start": "2691680",
    "end": "2699559"
  },
  {
    "text": "people really want to spend uh a few more hours and really learn a lot more I think that book of yours is fantastic",
    "start": "2699559",
    "end": "2707000"
  },
  {
    "text": "fantastic way to do it uh and uh to help them get to production um so I I I guess",
    "start": "2707000",
    "end": "2712640"
  },
  {
    "text": "I kind of want to close down and you know just thank you for the really cool discussion uh is there anything you want",
    "start": "2712640",
    "end": "2719119"
  },
  {
    "text": "to leave people with that hasn't been said yeah just uh invite people to to",
    "start": "2719119",
    "end": "2725119"
  },
  {
    "text": "read the book if you're interested I always to receive some feedback so please reach out on Twitter or LinkedIn uh the book",
    "start": "2725119",
    "end": "2732319"
  },
  {
    "text": "is called clown native spring in action with spring Boot and kubernetes uh so if you read it let me know uh I love",
    "start": "2732319",
    "end": "2738640"
  },
  {
    "text": "getting some uh feedback also suggestion for improvements you know maybe second edition will uh arrive at some point so",
    "start": "2738640",
    "end": "2746760"
  },
  {
    "text": "uh let me know what you think about the book and I want to thank you Josh very much for for this conversation is always",
    "start": "2746760",
    "end": "2753160"
  },
  {
    "text": "very interesting to you oh my pleasure my friend uh I like I said we we'll continue at some at",
    "start": "2753160",
    "end": "2759440"
  },
  {
    "text": "some point soon that I hope um all right good stuff thank you my friend thank you",
    "start": "2759440",
    "end": "2765440"
  },
  {
    "text": "bye thanks for listening to this episode of the goto podcast head over to",
    "start": "2765440",
    "end": "2771119"
  },
  {
    "text": "goop.com content from the brightest minds and software development",
    "start": "2771119",
    "end": "2776670"
  },
  {
    "text": "[Music]",
    "start": "2776670",
    "end": "2786190"
  }
]