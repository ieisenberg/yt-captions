[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "and now on to my presentation so in this session we will talk about Java in the cloud with grow VM and how grow VM can",
    "start": "13280",
    "end": "20519"
  },
  {
    "text": "actually help you make your Java applications ready for the cloud and more efficient in the",
    "start": "20519",
    "end": "26679"
  },
  {
    "text": "cloud and a few words about myself because this is actually my first I'm speaking at this conference here in",
    "start": "26679",
    "end": "32040"
  },
  {
    "text": "Amsterdam so I'm Alina this is my Twitter handle so if you have any questions that you would rather ask privately in DMS my DMs are open so feel",
    "start": "32040",
    "end": "39719"
  },
  {
    "text": "free to and I'm a developer advocate for GR at Oracle labs and Oracle Labs is the",
    "start": "39719",
    "end": "45320"
  },
  {
    "text": "school R&D unit at Oracle where we doing a lot of research creating many projects uh from scratch and we usually work in",
    "start": "45320",
    "end": "52520"
  },
  {
    "text": "domains such as programming languages compilers machine learning security Etc so we are doing a lot of cool research",
    "start": "52520",
    "end": "60320"
  },
  {
    "text": "staff and I also love open source in communities and I'm very happy to work on grvm because it's also a huge open",
    "start": "60320",
    "end": "66280"
  },
  {
    "text": "source project so I'm very proud and happy to be working there and I love both programming and natural languages I",
    "start": "66280",
    "end": "73320"
  },
  {
    "text": "cannot say that I speak much Dutch but I'm open to learn it if you will give me a couple of lessons and I'm also",
    "start": "73320",
    "end": "80000"
  },
  {
    "text": "Ukrainian and what you can see here on the slide is my beautiful homeown leave so if you ever have a chance to travel",
    "start": "80000",
    "end": "85159"
  },
  {
    "text": "to one city in Ukraine I recommend that go straight to VI because it's beautiful and amazing and I hope that you will",
    "start": "85159",
    "end": "91079"
  },
  {
    "text": "like it as much as I do uh so now let's talk about Java and the cloud and grow VM and how it all",
    "start": "91079",
    "end": "98240"
  },
  {
    "text": "fits together so first thing I want to give you a brief overview of gram because",
    "start": "98240",
    "end": "103960"
  },
  {
    "start": "102000",
    "end": "284000"
  },
  {
    "text": "it's a huge project and there is so much you can do with it that it's sometimes confusing what exactly it is and where",
    "start": "103960",
    "end": "109880"
  },
  {
    "text": "you can use it and why and it's a good challenge to have right that there are so many things you can do with it but",
    "start": "109880",
    "end": "115040"
  },
  {
    "text": "still it can be a bit confusing so let's get that out of the way so one thing with grow VM is that it can act as a",
    "start": "115040",
    "end": "121799"
  },
  {
    "text": "normal jdk so maybe you're using open jdk or any other jdk distribution and grow VM is a jdk just like that and",
    "start": "121799",
    "end": "129520"
  },
  {
    "text": "underneath as a platform it's using hotspot VM so the same hotspot VM that you get in any other jdk distribution",
    "start": "129520",
    "end": "136120"
  },
  {
    "text": "and the only thing that is different is that we are replacing the top tier optimizing compiler so in hotspot VM",
    "start": "136120",
    "end": "142680"
  },
  {
    "text": "that is the C2 compiler and what we have is our own grow VM compiler that is",
    "start": "142680",
    "end": "147879"
  },
  {
    "text": "highly optimizing brand new and many applications will see additional performance benefits just by switching",
    "start": "147879",
    "end": "153480"
  },
  {
    "text": "to grow VM as a jdk now another big part of the grvm and that's the part that we will focus today",
    "start": "153480",
    "end": "159920"
  },
  {
    "text": "in this talk is native image and that is this part of gr VM that allows you to take your ja application and compile it",
    "start": "159920",
    "end": "167560"
  },
  {
    "text": "ahead of time into a platform specific native executable so then you can deploy it on a machine that doesn't have any",
    "start": "167560",
    "end": "174560"
  },
  {
    "text": "kind of Java run time on it and it will be fully functional fully working on its own and last but not least it's also a",
    "start": "174560",
    "end": "181800"
  },
  {
    "text": "polyglot VM so so far we talked about Java but in addition to Java it can also",
    "start": "181800",
    "end": "186840"
  },
  {
    "text": "execute all those other languages such as JavaScript python R Etc and the best",
    "start": "186840",
    "end": "192760"
  },
  {
    "text": "part best part is that not only it can execute one of those languages but it can also act as a polyglot VM giving you",
    "start": "192760",
    "end": "199680"
  },
  {
    "text": "a way to execute applications that use any mix of those languages and it will",
    "start": "199680",
    "end": "205120"
  },
  {
    "text": "give you those interrupt capabilities but also per performance optimizations for the whole thing out of the",
    "start": "205120",
    "end": "211599"
  },
  {
    "text": "box uh so that's the overview but let's talk about Java specifically because I",
    "start": "211599",
    "end": "217200"
  },
  {
    "text": "do assume most of the people here are Java developers in the room or work with Java in some way okay good and how many",
    "start": "217200",
    "end": "224200"
  },
  {
    "text": "of you have tried grow VM so far okay I would say roughly the half I",
    "start": "224200",
    "end": "229360"
  },
  {
    "text": "hope maybe a few more of you will have motivation to try it after this talk uh",
    "start": "229360",
    "end": "234439"
  },
  {
    "text": "so let's talk about what's uh in gr VM for Java developers so one thing is this",
    "start": "234439",
    "end": "240200"
  },
  {
    "text": "just in time compilation mode so your normal mode of executing Java applications where you can use grow VM",
    "start": "240200",
    "end": "245640"
  },
  {
    "text": "as your jdk and run your jav applications as you always would with the Java command but in addition to that",
    "start": "245640",
    "end": "252120"
  },
  {
    "text": "grow VM brings this whole new ahead of time execution mode for JA applications where you compile them at build Time",
    "start": "252120",
    "end": "259199"
  },
  {
    "text": "ahead of time and then you run them as n applications when you need to run them on run time and this second mode of",
    "start": "259199",
    "end": "266919"
  },
  {
    "text": "execution ahead of time compile applications is really great for cloud deployments because for cloud deployments you want to accomplish fast",
    "start": "266919",
    "end": "274080"
  },
  {
    "text": "startup low memory usage and that's exactly what you get with Native applications so in this talk we will",
    "start": "274080",
    "end": "280320"
  },
  {
    "text": "focus on this ahead of time n image compilation part and what is also great about grow",
    "start": "280320",
    "end": "286440"
  },
  {
    "start": "284000",
    "end": "338000"
  },
  {
    "text": "VM and Native image is that because it gives this fast startup and low memory footprint of native execution it's",
    "start": "286440",
    "end": "293759"
  },
  {
    "text": "widely adopted by many Java micros service Frameworks so if you are doing spring board if you're doing Micron not",
    "start": "293759",
    "end": "299560"
  },
  {
    "text": "corus hodon all of them support grvm native image and give you an easy way to build applications with grvm so talking",
    "start": "299560",
    "end": "307440"
  },
  {
    "text": "about those Frameworks uh I think yesterday there was Holly session about quarkus and she told me she mentioned gr",
    "start": "307440",
    "end": "313560"
  },
  {
    "text": "VM couple of times there so make sure to check that out and also I mentioned that later in the talk but right after this",
    "start": "313560",
    "end": "319840"
  },
  {
    "text": "talk and after the break there is drams session about Micronaut so uh grandma is the creative of Micron not so make sure",
    "start": "319840",
    "end": "325639"
  },
  {
    "text": "you check out that session as well uh long story short here is that all those friends Works will work nicely with grvm",
    "start": "325639",
    "end": "331440"
  },
  {
    "text": "Native image and they give you an easy way to build grow VM and Native image friendly",
    "start": "331440",
    "end": "337759"
  },
  {
    "text": "applications uh so let's talk about Java in the cloud and what are the goals there and how grow VM can help you meet",
    "start": "337759",
    "end": "344400"
  },
  {
    "start": "338000",
    "end": "432000"
  },
  {
    "text": "those goals so one thing you probably want to achieve in the cloud is to start fast because if your application starts",
    "start": "344400",
    "end": "351360"
  },
  {
    "text": "fast it means that it can scale more easily right because adding new instance is more smooth more fast but also it",
    "start": "351360",
    "end": "358120"
  },
  {
    "text": "means that it's better for your user users because if your users need to wait couple of seconds for your application to start probably this is not ideal and",
    "start": "358120",
    "end": "365280"
  },
  {
    "text": "this is something you would want to fix if you have a way to do so now another thing in the cloud and I",
    "start": "365280",
    "end": "371280"
  },
  {
    "text": "would argue maybe this is even more important is reducing resources usage because in the cloud you're paying for",
    "start": "371280",
    "end": "377199"
  },
  {
    "text": "the resources that you're using and also for how long you're using them so if you can deploy the same application but in a",
    "start": "377199",
    "end": "383080"
  },
  {
    "text": "way that it's using less resources or for less time that would reduce a cloud",
    "start": "383080",
    "end": "388639"
  },
  {
    "text": "cost so you you can either pay for it less or maybe you can use the same infrastructure but to deploy more",
    "start": "388639",
    "end": "394039"
  },
  {
    "text": "applications so this could be another goal you could be having and minimizing vulnerabilities is a goal that we",
    "start": "394039",
    "end": "400720"
  },
  {
    "text": "probably have no matter where we deploy applications but it applies to the cloud as well and we'll also talk about how",
    "start": "400720",
    "end": "407000"
  },
  {
    "text": "grow VM and N image specifically could also make your applications more secure and not last but not least you",
    "start": "407000",
    "end": "414440"
  },
  {
    "text": "might want to optimize for compact packaging size because this means that you can have small smaller more compact",
    "start": "414440",
    "end": "420680"
  },
  {
    "text": "images that once again are easier to scale but also easier to deploy and you can if you can reduce this packaging",
    "start": "420680",
    "end": "426800"
  },
  {
    "text": "size that will also be a great goal for the cloud so let's see how grow VM fits here",
    "start": "426800",
    "end": "433360"
  },
  {
    "start": "432000",
    "end": "834000"
  },
  {
    "text": "and how it can help you achieve either of those goals and for that let's talk about this",
    "start": "433360",
    "end": "438919"
  },
  {
    "text": "whole native image ahead of time compilation because it's kind of non trivial and very interesting how you can",
    "start": "438919",
    "end": "445360"
  },
  {
    "text": "even take something so dynamic as a Java application and compile it ahead of time",
    "start": "445360",
    "end": "450919"
  },
  {
    "text": "at Bild time uh so the way this works the way we turn Java applications into n",
    "start": "450919",
    "end": "456039"
  },
  {
    "text": "executables is that when you run of n image command and you give it your application your J application in a bite",
    "start": "456039",
    "end": "462199"
  },
  {
    "text": "code format what happens is the following so n image will look at your application starting from its main entry",
    "start": "462199",
    "end": "469120"
  },
  {
    "text": "point and it will try to find all the reachable code so all the code that is needed for your application to work to",
    "start": "469120",
    "end": "476039"
  },
  {
    "text": "perform whatever the tasks it is supposed to perform it will try to find all that code and that applies to your",
    "start": "476039",
    "end": "481919"
  },
  {
    "text": "application code but also to all the dependencies that you are using and even the jdk classes themselves so it will",
    "start": "481919",
    "end": "488599"
  },
  {
    "text": "try to find everything that is reachable so that then it can eliminate everything else and only put what is needed for",
    "start": "488599",
    "end": "495400"
  },
  {
    "text": "your application into this produced native executable and this way by eliminating everything else it makes",
    "start": "495400",
    "end": "502440"
  },
  {
    "text": "this native executable very slim very efficient so only the things that are needed for your application will be",
    "start": "502440",
    "end": "508520"
  },
  {
    "text": "included in the na to executable so this reachability is one part of the story and there is another",
    "start": "508520",
    "end": "514518"
  },
  {
    "text": "interesting part and that is that we are also performing Heap snapshotting so as we are building your",
    "start": "514519",
    "end": "520320"
  },
  {
    "text": "application we are also uh preparing kind of a snapshot version of your Hep",
    "start": "520320",
    "end": "525880"
  },
  {
    "text": "so that your application when it starts can start with prepopulated Hep and not spend time and resources on putting",
    "start": "525880",
    "end": "533519"
  },
  {
    "text": "those objects onto Heap and that's another way how gr VM and N image makes your application start fast but also use",
    "start": "533519",
    "end": "540600"
  },
  {
    "text": "fewer resources so what you get at the end is an N executable with the machine code",
    "start": "540600",
    "end": "546120"
  },
  {
    "text": "for your whole application and everything that is needed for it to run and we are used to having the hotspot VM",
    "start": "546120",
    "end": "552880"
  },
  {
    "text": "so that it provides us kind of VM functionality and VM features at runtime",
    "start": "552880",
    "end": "558040"
  },
  {
    "text": "in this case you don't have when you actually run your application you don't have Hotpot VM anymore but you do have",
    "start": "558040",
    "end": "563279"
  },
  {
    "text": "some VM kind of basic VM functionality and that is coming from a basic slim VM",
    "start": "563279",
    "end": "568760"
  },
  {
    "text": "implement a that we are putting inside the executable it's called substract VM so we get some basic VM functionality",
    "start": "568760",
    "end": "575800"
  },
  {
    "text": "but you no longer need a fullblown jvm to execute your code because it's a native executable in the",
    "start": "575800",
    "end": "582839"
  },
  {
    "text": "end and let's compare those two modes of execution so running on a jdk so it can",
    "start": "582839",
    "end": "588079"
  },
  {
    "text": "be grow VM open jdk whatever jdk of your taste so running on a jdk versus running",
    "start": "588079",
    "end": "593480"
  },
  {
    "text": "on ahead of time compilation on Native image so the way those those two different modes are different in terms",
    "start": "593480",
    "end": "599959"
  },
  {
    "text": "of startup time is the following when you first run your application on a jvm you start a new application what needs",
    "start": "599959",
    "end": "606760"
  },
  {
    "text": "to happen is quite a few operations so for your application to run and run at",
    "start": "606760",
    "end": "612160"
  },
  {
    "text": "some point in a a speak performance in a fully compiled mode uh there are the",
    "start": "612160",
    "end": "617399"
  },
  {
    "text": "following steps so you need to low out your classes you need to start interpreting and interpretation is a",
    "start": "617399",
    "end": "624040"
  },
  {
    "text": "nice easy way to go from loading your application to actually executing your code it's much f faster in terms of",
    "start": "624040",
    "end": "630360"
  },
  {
    "text": "getting your application to run than compilation but also interpreted code is slower so while you are inter in the",
    "start": "630360",
    "end": "637320"
  },
  {
    "text": "interpreted mode your application is not as fast that's why the jvm is collecting information about your application and",
    "start": "637320",
    "end": "643600"
  },
  {
    "text": "it's trying to get to uh the compilation step and interpretation is there to get",
    "start": "643600",
    "end": "649160"
  },
  {
    "text": "to execute your code faster but then initially as it's performed all those operations collected profile information",
    "start": "649160",
    "end": "654639"
  },
  {
    "text": "compile the application at some point when it warms up and it's done with all those steps your application can",
    "start": "654639",
    "end": "660279"
  },
  {
    "text": "actually run with the best Peak Performance but you can see that this is taken probably a while especially if you",
    "start": "660279",
    "end": "666760"
  },
  {
    "text": "have a larger application now if you're compiling ahead of time to an at executable what needs to happen in terms",
    "start": "666760",
    "end": "673600"
  },
  {
    "text": "of startup time is just the following so you Lo in executable and you can",
    "start": "673600",
    "end": "678720"
  },
  {
    "text": "immediately start running your application and do this like valuable job because all of those steps were",
    "start": "678720",
    "end": "685760"
  },
  {
    "text": "already performed when we were building your application and this is the idea of this half of time compilation that we",
    "start": "685760",
    "end": "691680"
  },
  {
    "text": "are taking all those operations of code loading analyzing compiling profiling",
    "start": "691680",
    "end": "696800"
  },
  {
    "text": "Etc and we are moving them from run time to build time because usually you have a",
    "start": "696800",
    "end": "702639"
  },
  {
    "text": "bit more time at the build time but also more application are more applications are started more often than they are",
    "start": "702639",
    "end": "709399"
  },
  {
    "text": "build so it kind of makes sense to do all of this work once at build time and then start much faster every single time",
    "start": "709399",
    "end": "716160"
  },
  {
    "text": "it's startup because we are no longer doing those kind of overhead operations so that was startup time and",
    "start": "716160",
    "end": "723720"
  },
  {
    "text": "also let's talk about resources usage because you can hear that okay startup time is great and it's interesting maybe",
    "start": "723720",
    "end": "729680"
  },
  {
    "text": "for microservices and sess applications but what if I have a long Runing application that doesn't start that",
    "start": "729680",
    "end": "735480"
  },
  {
    "text": "often and maybe I don't care about startup time that much and it indeed can",
    "start": "735480",
    "end": "741160"
  },
  {
    "text": "be the case and in that case let's also compare how much memory we are using if we are running in either of those modes",
    "start": "741160",
    "end": "748079"
  },
  {
    "text": "so if you're running on jvm in the jit execution mode you would need to keep around memory for your application",
    "start": "748079",
    "end": "754399"
  },
  {
    "text": "itself but also for all of that infrastructure that is there to execute your code and it's a very powerful code",
    "start": "754399",
    "end": "761399"
  },
  {
    "text": "execution infrastructure because if you're run on a jvm it can optimize for the best P throughput it can de optimize",
    "start": "761399",
    "end": "768160"
  },
  {
    "text": "it can collect profile information it's very powerful but it also has this kind of memory impact and memory",
    "start": "768160",
    "end": "775480"
  },
  {
    "text": "footprint while when we are running on a n image mode you need vess memory",
    "start": "775480",
    "end": "781120"
  },
  {
    "text": "because you are no longer dynamically executing code at run time and this gets even more interesting",
    "start": "781120",
    "end": "787160"
  },
  {
    "text": "if you want to scale such an application because if you're scaling on a jvm you would need to also kind of gradually",
    "start": "787160",
    "end": "793480"
  },
  {
    "text": "proportionally scale memory for all this code execution infrastructure while on Native image you are only scaling the",
    "start": "793480",
    "end": "799880"
  },
  {
    "text": "code for the application P itself and to make this even a bit more",
    "start": "799880",
    "end": "805000"
  },
  {
    "text": "visual here we are scaling a corus application by adding more instances of it and the yellow bars that is executing",
    "start": "805000",
    "end": "812639"
  },
  {
    "text": "in jet mode so on Hotspot VM and the red ones that is executing on gr VM n image",
    "start": "812639",
    "end": "818519"
  },
  {
    "text": "and you can see that in both scenarios we are kind of using a bit more memory over time but way less memory on the",
    "start": "818519",
    "end": "825000"
  },
  {
    "text": "native image because it doesn't need that much memory but also because some of the things are shared between native",
    "start": "825000",
    "end": "830639"
  },
  {
    "text": "image processes as native applications okay and I think this is enough of the slides let's see some",
    "start": "830639",
    "end": "837759"
  },
  {
    "start": "834000",
    "end": "1631000"
  },
  {
    "text": "code so I want to show you a demo of running",
    "start": "837759",
    "end": "844000"
  },
  {
    "text": "the same application on a jvm and in Native image mode and you will compare a",
    "start": "844000",
    "end": "849279"
  },
  {
    "text": "number of metrics there so let me get here uh which one is",
    "start": "849279",
    "end": "856480"
  },
  {
    "text": "this all good so this is as you can see a micron not application but this could have been any Asen framework it doesn't",
    "start": "856480",
    "end": "862639"
  },
  {
    "text": "matter that much it just I used this one for the demo so this is my Micron application and it basically just start",
    "start": "862639",
    "end": "869399"
  },
  {
    "text": "my app and I have a controller here that exposes a hello endpoint and we will run",
    "start": "869399",
    "end": "875120"
  },
  {
    "text": "this thing in both modes uh so let's run it on the jvm first and this is a micron note app so I",
    "start": "875120",
    "end": "882199"
  },
  {
    "text": "can just do the",
    "start": "882199",
    "end": "885519"
  },
  {
    "text": "following okay it's starting and it said that it started in something like 560",
    "start": "888199",
    "end": "893480"
  },
  {
    "text": "milliseconds and it's running on 8080 so let's go over there and check it",
    "start": "893480",
    "end": "900680"
  },
  {
    "text": "out okay it returns our hello go to seems all fine it's",
    "start": "903519",
    "end": "908639"
  },
  {
    "text": "working uh so let's kill this one and also let me move it a bit higher and",
    "start": "908639",
    "end": "914839"
  },
  {
    "text": "clear this so that time we were running on a jvm and we also have already a",
    "start": "914839",
    "end": "920120"
  },
  {
    "text": "compiled version of this application in my target directory so it's this simple",
    "start": "920120",
    "end": "926399"
  },
  {
    "text": "rest na executable over there so that previous process where we running on a jvm it's killed it's dead",
    "start": "926399",
    "end": "933680"
  },
  {
    "text": "but I will use the same port so let's run it again so now I will run it as a",
    "start": "933680",
    "end": "938759"
  },
  {
    "text": "native app Target simple rest and we see that this time our application started",
    "start": "938759",
    "end": "944279"
  },
  {
    "text": "in 20 milliseconds so what 25x faster than before but don't take my",
    "start": "944279",
    "end": "952040"
  },
  {
    "text": "word for it let's go and check that it's really running and it's really doing what it's supposed to be doing uh so",
    "start": "952040",
    "end": "958120"
  },
  {
    "text": "local host",
    "start": "958120",
    "end": "964440"
  },
  {
    "text": "hello okay what's wrong okay now it's on maybe that was a",
    "start": "964440",
    "end": "971040"
  },
  {
    "text": "glitch in my connection but yeah anyway it's on and it's doing the same thing",
    "start": "971040",
    "end": "976240"
  },
  {
    "text": "but uh here we are looking at the startup time and the numbers that we see here are reported by the framework so",
    "start": "976240",
    "end": "982880"
  },
  {
    "text": "maybe we want to do our own little benchmarking maybe we don't trust the numbers that the framework is reporting",
    "start": "982880",
    "end": "988279"
  },
  {
    "text": "Maybe we want to measure those things ourselves and from the operating system kind of level to make sure that we can",
    "start": "988279",
    "end": "994040"
  },
  {
    "text": "trust those numbers uh so let's do this and for that to speed things up I will have a couple of scripts so uh this one",
    "start": "994040",
    "end": "1001920"
  },
  {
    "text": "I will start my app and I will wait for the first successful request and then I will measure how much time it was used",
    "start": "1001920",
    "end": "1009399"
  },
  {
    "text": "to start my application and serve this first request successfully so uh let's go back let's",
    "start": "1009399",
    "end": "1017399"
  },
  {
    "text": "kill this one and let's start my app and I will use",
    "start": "1017399",
    "end": "1022800"
  },
  {
    "text": "this low switch to switch between jbm and Native execution modes so this says that my application",
    "start": "1022800",
    "end": "1029400"
  },
  {
    "text": "has started and it also started request and it printed out my loal report so we",
    "start": "1029400",
    "end": "1034839"
  },
  {
    "text": "see that the time elapsed as observed by the operating system here is 1.2 seconds",
    "start": "1034839",
    "end": "1041600"
  },
  {
    "text": "that was to start and also to serve this request so let's see how much it will",
    "start": "1041600",
    "end": "1046640"
  },
  {
    "text": "take in Native",
    "start": "1046640",
    "end": "1050400"
  },
  {
    "text": "so now it's 0.09 seconds so much faster but as we",
    "start": "1055280",
    "end": "1063440"
  },
  {
    "text": "said maybe we don't care that much about startup maybe we have a long grinding application and especially if you're in",
    "start": "1063440",
    "end": "1068799"
  },
  {
    "text": "the cloud maybe we are rather concerned by how much CPU and memory our application is using so let's see if we",
    "start": "1068799",
    "end": "1075520"
  },
  {
    "text": "can measure that and for that I will also use this nice visual tool called PS record so this will look at my process",
    "start": "1075520",
    "end": "1082280"
  },
  {
    "text": "and will output a nice visual chart of my application as a process and how much",
    "start": "1082280",
    "end": "1087960"
  },
  {
    "text": "memory and CPU it is using uh so let's go back and let's do",
    "start": "1087960",
    "end": "1094799"
  },
  {
    "text": "this record and let's run on the jvm and this will simulate some load so",
    "start": "1094799",
    "end": "1101039"
  },
  {
    "text": "that we can see how our application performs over time and how it reacts to get in this load and how much memory and",
    "start": "1101039",
    "end": "1107280"
  },
  {
    "text": "CPU it is using is it is serving this load so now this is done and we see some",
    "start": "1107280",
    "end": "1113200"
  },
  {
    "text": "metrics but we are more interested in memory and CPU usage so let's check that out and this is the uh picture that we",
    "start": "1113200",
    "end": "1121360"
  },
  {
    "text": "got for this jvm run and uh let's see what's happening here so we see so here",
    "start": "1121360",
    "end": "1127600"
  },
  {
    "text": "the way to read this is that the red vertical lines that a CPU usage and the blue horizontal line that is memory",
    "start": "1127600",
    "end": "1134320"
  },
  {
    "text": "usage so what is happening here is we see that up until I would say uh what one and a half seconds we see",
    "start": "1134320",
    "end": "1141799"
  },
  {
    "text": "that there are several more significant CPU spikes and that is when we are starting our application and jvm needs",
    "start": "1141799",
    "end": "1148240"
  },
  {
    "text": "to do all of that class loading interpretation profiling compilation Etc",
    "start": "1148240",
    "end": "1153440"
  },
  {
    "text": "so as we are starting our application it's quite busy and it's using some significant resources in the beginning",
    "start": "1153440",
    "end": "1159159"
  },
  {
    "text": "but also the memory usage is around I would say 200 megabytes and then we see",
    "start": "1159159",
    "end": "1164480"
  },
  {
    "text": "those spikes once in a while that is when our request arrive and need to be served it is still using some CPU to",
    "start": "1164480",
    "end": "1171520"
  },
  {
    "text": "serve those requests when they arrive so now let's see if we can uh observe",
    "start": "1171520",
    "end": "1177039"
  },
  {
    "text": "similar behavior for the native application so once again we are",
    "start": "1177039",
    "end": "1182600"
  },
  {
    "text": "starting our process we will send some load to see how our application handles it and we will see how much memory and",
    "start": "1182600",
    "end": "1189240"
  },
  {
    "text": "CPU it is",
    "start": "1189240",
    "end": "1192000"
  },
  {
    "text": "using okay and we have one more chart here so let's look at this and even as",
    "start": "1195760",
    "end": "1201480"
  },
  {
    "text": "we switch between images you can see how significantly different they are right so this one is from our previous CPU um",
    "start": "1201480",
    "end": "1208640"
  },
  {
    "text": "jvm run and this one is our new native process observations so what is",
    "start": "1208640",
    "end": "1214760"
  },
  {
    "text": "happening here is you no longer see those red CPU spikes in the beginning because we are no longer compiling code",
    "start": "1214760",
    "end": "1222320"
  },
  {
    "text": "when our application starts it all has been compiled and optimized at build time we do see some spikes when requests",
    "start": "1222320",
    "end": "1230080"
  },
  {
    "text": "arrive some of them but they are not as significant and in terms of memory usage",
    "start": "1230080",
    "end": "1235880"
  },
  {
    "text": "uh if you remember before it was around 200 megabytes now it's 100 but also I",
    "start": "1235880",
    "end": "1241440"
  },
  {
    "text": "think I wasn't limiting here memory in any way so if I wanted to I'm pretty sure I could have went very low here",
    "start": "1241440",
    "end": "1248039"
  },
  {
    "text": "even on something like I don't know 16 maybe megabytes and it will still be",
    "start": "1248039",
    "end": "1253679"
  },
  {
    "text": "operational so this is how much less memory and CPU are app is using if it's",
    "start": "1253679",
    "end": "1260080"
  },
  {
    "text": "in the native mode but we all know and love and use Java for high load",
    "start": "1260080",
    "end": "1265640"
  },
  {
    "text": "applications so let's see how our application can take an actual meaningful load for that let's do the",
    "start": "1265640",
    "end": "1274080"
  },
  {
    "text": "following so uh we will send some load and that will be 1 million requests to",
    "start": "1274080",
    "end": "1281640"
  },
  {
    "text": "our application in both jvm and Native modes and we will see how they conf",
    "start": "1281640",
    "end": "1286679"
  },
  {
    "text": "compare in terms of PX through and serving that significant load and for that here we are using the tool called",
    "start": "1286679",
    "end": "1293120"
  },
  {
    "text": "Hy so it will simulate our load but also it will print out performance metric for our application so let's do this and",
    "start": "1293120",
    "end": "1300840"
  },
  {
    "text": "let's run it on the jvm so now we are sending this",
    "start": "1300840",
    "end": "1308679"
  },
  {
    "text": "load okay our responses are back so we see the response codes all look fine if",
    "start": "1314440",
    "end": "1320279"
  },
  {
    "text": "we look at the latency we see that the majority of our requests stay within 7",
    "start": "1320279",
    "end": "1325440"
  },
  {
    "text": "milliseconds so not too bad and in terms of pix throughput what we see here is",
    "start": "1325440",
    "end": "1332320"
  },
  {
    "text": "103k request per second so maybe it's good maybe it's not hard to compare",
    "start": "1332320",
    "end": "1339080"
  },
  {
    "text": "unless you compare with something else right so let's compare with Native and",
    "start": "1339080",
    "end": "1344320"
  },
  {
    "text": "let's run this once again so now we are against an N application and we all know that jvm is",
    "start": "1344320",
    "end": "1351120"
  },
  {
    "text": "amazing and unbeatable for BX reput so who thinks this will be faster here in",
    "start": "1351120",
    "end": "1356679"
  },
  {
    "text": "Native mode okay some optimistic people who thinks that this will be slower in",
    "start": "1356679",
    "end": "1363240"
  },
  {
    "text": "Native okay my host is not too convinced about gr VM",
    "start": "1363240",
    "end": "1369120"
  },
  {
    "text": "yet okay but let's see let's see what the results are that we are getting here so again response quotes look good",
    "start": "1371640",
    "end": "1378520"
  },
  {
    "text": "uh latency stays within four milliseconds now for most of the requests and P throughput",
    "start": "1378520",
    "end": "1386720"
  },
  {
    "text": "is5 K request per second so comparable but slightly better so I think this is",
    "start": "1386720",
    "end": "1393640"
  },
  {
    "text": "very interesting thing to see because I usually speak at Java conferences and all Java developers are convinced that",
    "start": "1393640",
    "end": "1399440"
  },
  {
    "text": "jvm is unbeatable in terms of p throughput and jvm is indeed an amazing",
    "start": "1399440",
    "end": "1405840"
  },
  {
    "text": "example of software engineering because it's really really great at pix throughput because it has all those powerful tools so it's executing your",
    "start": "1405840",
    "end": "1412799"
  },
  {
    "text": "code dynamically it can adapt on the go it can make aggressive optimizations it can deoptimized if assumptions were not",
    "start": "1412799",
    "end": "1419640"
  },
  {
    "text": "right so jvm is indeed perfect for PX throughput but here what we can see is",
    "start": "1419640",
    "end": "1424799"
  },
  {
    "text": "that with iot and with n image you can achieve comparable PX throughput",
    "start": "1424799",
    "end": "1430120"
  },
  {
    "text": "comparable to the jvm in addition to all those startup and memory usage benefits that we've seen before but this is just",
    "start": "1430120",
    "end": "1437360"
  },
  {
    "text": "one piece of the the story so I ran this against a normal native uh produced by",
    "start": "1437360",
    "end": "1442960"
  },
  {
    "text": "grum application and I can take this even further so if I'm really concerned about pix put what I can do is that I",
    "start": "1442960",
    "end": "1449919"
  },
  {
    "text": "have yet another version of this application it's called here uh simple rest optimized and that one is built",
    "start": "1449919",
    "end": "1456440"
  },
  {
    "text": "with profile guided optimizations in mind so what uh this means is that uh n",
    "start": "1456440",
    "end": "1463720"
  },
  {
    "text": "image builds your application ahead of time under close World assumption and unlike a jvm the runtime hasn't happened",
    "start": "1463720",
    "end": "1471159"
  },
  {
    "text": "yet so n image doesn't know yet what will happen at run time and what exactly will be the most executed methods which",
    "start": "1471159",
    "end": "1478960"
  },
  {
    "text": "tabes will be called Etc so unlike the hotspot n image doesn't have access to",
    "start": "1478960",
    "end": "1484279"
  },
  {
    "text": "this runtime information and cannot adapt on the go to what your application does and what exactly and how exactly it",
    "start": "1484279",
    "end": "1490960"
  },
  {
    "text": "works so you would think that it cannot optimize as well as hotspot VM because it doesn't have this runtime information",
    "start": "1490960",
    "end": "1497640"
  },
  {
    "text": "but but there is this powerful optimization called profile guide optimization and the way this works is",
    "start": "1497640",
    "end": "1504120"
  },
  {
    "text": "that you can build an N executable uh then make an instrumented version out of",
    "start": "1504120",
    "end": "1509720"
  },
  {
    "text": "it and run relevant workloads on it so that it can collect profile information",
    "start": "1509720",
    "end": "1515440"
  },
  {
    "text": "of your application and then this profile information of what your application does at run time can be fil",
    "start": "1515440",
    "end": "1521399"
  },
  {
    "text": "into native image and kind of give it insight into runtime behavior of your app and let it figure out and optimize",
    "start": "1521399",
    "end": "1528159"
  },
  {
    "text": "your application kind of for the future so for what will happen at runtime and",
    "start": "1528159",
    "end": "1534679"
  },
  {
    "text": "this way you can achieve The Best of Both Worlds so you can still optimize and build your application at build time",
    "start": "1534679",
    "end": "1540880"
  },
  {
    "text": "but also you can build it in a way that is aware of runtime and optimize for runtime uh so let's see if we can make",
    "start": "1540880",
    "end": "1548720"
  },
  {
    "text": "this application even faster if we apply p uh for that let me send again the load",
    "start": "1548720",
    "end": "1555600"
  },
  {
    "text": "and I believe the profile I need is is called optimized uh so yeah we are now",
    "start": "1555600",
    "end": "1561399"
  },
  {
    "text": "executing the optimized version of our app and in the previous run if you remember I think we had 105k request per",
    "start": "1561399",
    "end": "1569240"
  },
  {
    "text": "second so now this is completed and if you look at throughput we have",
    "start": "1569240",
    "end": "1575919"
  },
  {
    "text": "120k so even slightly above than we had before and also above than we had in our",
    "start": "1575919",
    "end": "1581520"
  },
  {
    "text": "hotspot VM measurements now I will not claim that you will always see uh significant speed",
    "start": "1581520",
    "end": "1588840"
  },
  {
    "text": "up over running on the jvm because this is simply not true and this is just too simple way to put it every application",
    "start": "1588840",
    "end": "1595399"
  },
  {
    "text": "is very different because it's written differently it's using different dependencies there are many things in",
    "start": "1595399",
    "end": "1600600"
  },
  {
    "text": "play there so I cannot give you one specific number of how much faster your application would be if you switch to n",
    "start": "1600600",
    "end": "1606799"
  },
  {
    "text": "image but what I want to show here on the example of this kind of basic benchmarking web app is that you can",
    "start": "1606799",
    "end": "1613520"
  },
  {
    "text": "achieve PX through W comparable with the jbm if you're running on image as well",
    "start": "1613520",
    "end": "1618880"
  },
  {
    "text": "that is in addition to Startup and reduced resources usage uh so let's go on and let's see",
    "start": "1618880",
    "end": "1626399"
  },
  {
    "text": "what other things we want to accomplish in the cloud and if grow VM can help us with those there is one more interesting",
    "start": "1626399",
    "end": "1633799"
  },
  {
    "start": "1631000",
    "end": "1784000"
  },
  {
    "text": "of interesting aspect of grow VM and N image that I think is not talked about enough that's why I love talking about",
    "start": "1633799",
    "end": "1639520"
  },
  {
    "text": "it very much and that is security so n image comparing to running",
    "start": "1639520",
    "end": "1645080"
  },
  {
    "text": "on the jvm offers you uh some additional benefits around security and then come",
    "start": "1645080",
    "end": "1651279"
  },
  {
    "text": "out of the",
    "start": "1651279",
    "end": "1654200"
  },
  {
    "text": "following so as we said n image build application ahead of time at the build step and this means that no new unknown",
    "start": "1656559",
    "end": "1665039"
  },
  {
    "text": "code can be loaded at run time and in the way you can see this as a limitation right so maybe you want to load new code",
    "start": "1665039",
    "end": "1671760"
  },
  {
    "text": "at run time but I would rather see it as a maybe design decision or a different deployment model",
    "start": "1671760",
    "end": "1678039"
  },
  {
    "text": "and it is a limitation in a way but also gives you additional benefits for example no new code will be R loaded at",
    "start": "1678039",
    "end": "1685200"
  },
  {
    "text": "run time so you have more control over your application and you know exactly what is happening at run time and which",
    "start": "1685200",
    "end": "1691159"
  },
  {
    "text": "code will be executed at run time because n0 image verified all of that at build time when it was actually build in",
    "start": "1691159",
    "end": "1696440"
  },
  {
    "text": "your application now only the code as we saw before only the code that is reachable",
    "start": "1696440",
    "end": "1702440"
  },
  {
    "text": "by your application so something your application explicitly is using only that code will be included in the N",
    "start": "1702440",
    "end": "1709039"
  },
  {
    "text": "executable so maybe you are writing your application and you using many dependencies and maybe you're not so",
    "start": "1709039",
    "end": "1714840"
  },
  {
    "text": "sure about some of them and you don't trust them that much maybe you're just",
    "start": "1714840",
    "end": "1720320"
  },
  {
    "text": "using a fraction of that dependency but you're not so sure about that dependency overall so only the things that you",
    "start": "1720320",
    "end": "1726320"
  },
  {
    "text": "explicitly use in your application will be included in N executable and everything else will be eliminated so if",
    "start": "1726320",
    "end": "1732919"
  },
  {
    "text": "your application is not using that code it will not be there in the produced executable",
    "start": "1732919",
    "end": "1738120"
  },
  {
    "text": "and things like reflection and serialization are disabled by default and again in a way it will it can be",
    "start": "1738120",
    "end": "1744120"
  },
  {
    "text": "seen as limiting but also I think it gives you more control and more explicit",
    "start": "1744120",
    "end": "1749960"
  },
  {
    "text": "kind of idea of what is happening in your application and what is allowed and what is not allowed because for those",
    "start": "1749960",
    "end": "1755399"
  },
  {
    "text": "things to work you would need to provide configuration or maybe your framework and Library needs to provide configuration but those things will not",
    "start": "1755399",
    "end": "1761960"
  },
  {
    "text": "happen without you being aware of it and last but not least there are some certain attack vectors that are",
    "start": "1761960",
    "end": "1768799"
  },
  {
    "text": "targeting just in time code compilation and the compiler itself so those are",
    "start": "1768799",
    "end": "1774200"
  },
  {
    "text": "simply not possible in N image because at run time there is no just in time code compilation anymore it all has been",
    "start": "1774200",
    "end": "1780799"
  },
  {
    "text": "compiled ahead of time uh now let's see if I can uh demonstrate you how this works in",
    "start": "1780799",
    "end": "1788679"
  },
  {
    "start": "1784000",
    "end": "2109000"
  },
  {
    "text": "practice and for that we have another app here where is it which is called",
    "start": "1788679",
    "end": "1795120"
  },
  {
    "text": "unsa demo so please don't try try this at home please definitely don't try this in",
    "start": "1795120",
    "end": "1800760"
  },
  {
    "text": "production uh so what is happening here is this is my application and under",
    "start": "1800760",
    "end": "1806360"
  },
  {
    "text": "resources here we have my static folder with this simple hello",
    "start": "1806360",
    "end": "1812039"
  },
  {
    "text": "file so uh let's run my app let's just see that I killed all the previous",
    "start": "1812039",
    "end": "1817399"
  },
  {
    "text": "processes okay this looks good and this was again a micron not application so",
    "start": "1817399",
    "end": "1822880"
  },
  {
    "text": "let's run it on the jvm so MN MN",
    "start": "1822880",
    "end": "1829240"
  },
  {
    "text": "run okay it's running uh let's see what it does and if it",
    "start": "1832320",
    "end": "1838279"
  },
  {
    "text": "works so it's again on 880 and it's static folder so it's supposed to be",
    "start": "1838279",
    "end": "1844080"
  },
  {
    "text": "serving that HTML file that we saw in that static folder so you know no brainer task it just works right but",
    "start": "1844080",
    "end": "1852240"
  },
  {
    "text": "let's see maybe somebody else join our joins our team and they decide to implement this logic in a new way so",
    "start": "1852240",
    "end": "1858919"
  },
  {
    "text": "instead of exposing this file directly they want to serve this in this get endpoint and they want to serve this",
    "start": "1858919",
    "end": "1865960"
  },
  {
    "text": "file by its name by appending the static folder and then retrieving the file by the name so let's say that somebody else",
    "start": "1865960",
    "end": "1873240"
  },
  {
    "text": "on our team came up with that logic maybe they came up with it on its own or maybe they copy pasted it from some",
    "start": "1873240",
    "end": "1879320"
  },
  {
    "text": "place we all know so now we have this New Logic in our app let's see how that works so the end point is now get and we",
    "start": "1879320",
    "end": "1887679"
  },
  {
    "text": "are serving this file by file name okay this seems to be working as well but at",
    "start": "1887679",
    "end": "1893240"
  },
  {
    "text": "this point let me switch to curl to show you a couple more things uh so let's curl",
    "start": "1893240",
    "end": "1900600"
  },
  {
    "text": "this and let me wrap it into quotes and let's see if this works so this seems to",
    "start": "1900600",
    "end": "1905960"
  },
  {
    "text": "be working and also but you know we want to make sure things are working correctly so let's test this let's test",
    "start": "1905960",
    "end": "1912480"
  },
  {
    "text": "this Innovative curl some nonsense okay this doesn't return anything seems amazing let's ship it right but does",
    "start": "1912480",
    "end": "1919760"
  },
  {
    "text": "anyone see any problem with this implementation",
    "start": "1919760",
    "end": "1926279"
  },
  {
    "text": "sorry yeah the room is too large sorry I don't hear you but the issue with this",
    "start": "1926279",
    "end": "1931720"
  },
  {
    "text": "is that what I can do here is the following obviously this is not a very production wory code but we all made",
    "start": "1931720",
    "end": "1938000"
  },
  {
    "text": "some mistakes in our career right so what this opens is the following opportunity since I'm not uh kind of",
    "start": "1938000",
    "end": "1946279"
  },
  {
    "text": "verifying sanitizing my user input in any way what I can do here is I can do",
    "start": "1946279",
    "end": "1952320"
  },
  {
    "text": "application do yaml and this will return me my whole",
    "start": "1952320",
    "end": "1957519"
  },
  {
    "text": "yaml file including my database config right so again probably not very",
    "start": "1957519",
    "end": "1963159"
  },
  {
    "text": "production worthy code but it kind of shows you what could be one possible attack vector and it doesn't end there",
    "start": "1963159",
    "end": "1970240"
  },
  {
    "text": "so if I want to spend some time here or maybe if I know exactly what I'm looking for I can do something like the",
    "start": "1970240",
    "end": "1976080"
  },
  {
    "text": "following so example what's my it's Micron not Micron not",
    "start": "1976080",
    "end": "1983600"
  },
  {
    "text": "Hello contoller do",
    "start": "1983600",
    "end": "1989159"
  },
  {
    "text": "class and I'm not going to print it out but this would have given me my whole class file so this is probably not great",
    "start": "1989159",
    "end": "1998080"
  },
  {
    "text": "but uh let's see if we can expose the same things in the native app so again I",
    "start": "1998080",
    "end": "2005039"
  },
  {
    "text": "have my app compiled over here it's called Micron not guide so let's run it",
    "start": "2005039",
    "end": "2011480"
  },
  {
    "text": "and let's just check that we killed that one okay seems that let's do it so now",
    "start": "2011480",
    "end": "2018399"
  },
  {
    "text": "let's run the native app so Micron note guide okay it's on let's go",
    "start": "2018399",
    "end": "2025000"
  },
  {
    "text": "back uh and let's verify the same things so if we access the file directly static",
    "start": "2025000",
    "end": "2032240"
  },
  {
    "text": "HTML static why isn't this not picking up uh",
    "start": "2032240",
    "end": "2038120"
  },
  {
    "text": "um okay let me try uh",
    "start": "2038120",
    "end": "2043799"
  },
  {
    "text": "hello",
    "start": "2043919",
    "end": "2046919"
  },
  {
    "text": "HTML okay so it gets our message and if we do the same thing through our get",
    "start": "2051280",
    "end": "2058200"
  },
  {
    "text": "endpoint get equals uh get name was",
    "start": "2058200",
    "end": "2065878"
  },
  {
    "text": "it oh right thanks my bad yep okay so this is",
    "start": "2065879",
    "end": "2073320"
  },
  {
    "text": "working as well uh let's see if we can expose those config files so let's go",
    "start": "2073320",
    "end": "2079679"
  },
  {
    "text": "over here and let's curl our application yo file it gives us",
    "start": "2079679",
    "end": "2086839"
  },
  {
    "text": "nothing and if we curl our controller class it also gives us nothing because",
    "start": "2086839",
    "end": "2092919"
  },
  {
    "text": "all those file are no long those files are no longer there it all has been processed and compiled into native",
    "start": "2092919",
    "end": "2098800"
  },
  {
    "text": "executable so accessing those files like that is simply not possible with Native",
    "start": "2098800",
    "end": "2106000"
  },
  {
    "text": "image okay so that was talking about security and also let's briefly talk about packaging size and how Native",
    "start": "2106000",
    "end": "2111960"
  },
  {
    "start": "2109000",
    "end": "2211000"
  },
  {
    "text": "image can be helpful there so what you get when you build applications ahead of time with Native image is you get a",
    "start": "2111960",
    "end": "2118680"
  },
  {
    "text": "simple native executable just as one file and that includes everything that is needed for your application to run so",
    "start": "2118680",
    "end": "2125280"
  },
  {
    "text": "your application code your dependen code even relevant jvm code and all the code that is not used",
    "start": "2125280",
    "end": "2132800"
  },
  {
    "text": "by your application as we saw just now is eliminated from your application now",
    "start": "2132800",
    "end": "2138000"
  },
  {
    "text": "kind of a disadvantage that you can see there is that you cannot share share the Java runtime installation between the",
    "start": "2138000",
    "end": "2143960"
  },
  {
    "text": "instances of your app but also it's good in a way because if you want to you can patch and update your applications",
    "start": "2143960",
    "end": "2150079"
  },
  {
    "text": "individually as you go and talking about specifically for the cloud and how you can containerize",
    "start": "2150079",
    "end": "2156400"
  },
  {
    "text": "your application so if you want to really reduce your application image size you can go really",
    "start": "2156400",
    "end": "2162400"
  },
  {
    "text": "low with gr image so here the red bars represent still running on a jvm and the",
    "start": "2162400",
    "end": "2168520"
  },
  {
    "text": "green one that is running on a native image and if you want with Native image you can go really low uh you can compile",
    "start": "2168520",
    "end": "2175640"
  },
  {
    "text": "it as an IT executable and then you can compress it even further so there is this tool called upx and you can",
    "start": "2175640",
    "end": "2181680"
  },
  {
    "text": "compress a native executable just basically as any other native app so if you really care about the packaging size",
    "start": "2181680",
    "end": "2188960"
  },
  {
    "text": "you can go really low with n image and upx one thing to be aware of so if",
    "start": "2188960",
    "end": "2194079"
  },
  {
    "text": "you're doing this compression it can have runtime impact because it would need to then decompress your app so it's",
    "start": "2194079",
    "end": "2200440"
  },
  {
    "text": "kind of a trade-off and you need to choose if you care more about uh absolutely minimal pack packaging size",
    "start": "2200440",
    "end": "2206560"
  },
  {
    "text": "or if you want to maintain that good Peak Performance okay but this may have",
    "start": "2206560",
    "end": "2212480"
  },
  {
    "start": "2211000",
    "end": "2470000"
  },
  {
    "text": "seemed like a sales pitch so far so let's talk about what's the catch because I always get this question okay sounds good but what I need to be aware",
    "start": "2212480",
    "end": "2219240"
  },
  {
    "text": "of what is the catch in all this story uh so the question would be the following uh what about grow VM and",
    "start": "2219240",
    "end": "2226440"
  },
  {
    "text": "reflection and I don't know if youve heard it but sometimes I hear this misconception that grow VM doesn't",
    "start": "2226440",
    "end": "2231880"
  },
  {
    "text": "support reflection and that is not true grow VM does support reflection but there are",
    "start": "2231880",
    "end": "2239040"
  },
  {
    "text": "things to be aware of so one thing is that n image builds your application ahead of time meaning that it's under",
    "start": "2239040",
    "end": "2245880"
  },
  {
    "text": "close world assumption so more Dynamic Java features such as for example reflection is a very good example of",
    "start": "2245880",
    "end": "2251599"
  },
  {
    "text": "that more Dynamic Java features pose a challenge because runtime hasn't",
    "start": "2251599",
    "end": "2256960"
  },
  {
    "text": "happened yet all those things haven't been resolved yet so it's hard to figure this out on the closed World assumption",
    "start": "2256960",
    "end": "2264160"
  },
  {
    "text": "n image will try and it will figure out some more obvious kind of predictable",
    "start": "2264160",
    "end": "2269400"
  },
  {
    "text": "reflection calls on its own so that thing could be working out of the box but for things that are a bit more",
    "start": "2269400",
    "end": "2275640"
  },
  {
    "text": "advanced or a bit more complicated some more help might be needed and one",
    "start": "2275640",
    "end": "2281000"
  },
  {
    "text": "helpful thing is that n image comes with this tracing agent so the way to make ref reflection and also serialization",
    "start": "2281000",
    "end": "2287240"
  },
  {
    "text": "Etc work with Native image is that you would need to provide configuration and that configuration is coming in the",
    "start": "2287240",
    "end": "2293640"
  },
  {
    "text": "format of the Json file so you can write it yourself but probably writing Json files it's not very exciting so it will",
    "start": "2293640",
    "end": "2300480"
  },
  {
    "text": "be better if that Json file could be just automatically produced for you so it can happen indeed and you can can use",
    "start": "2300480",
    "end": "2306800"
  },
  {
    "text": "this tracing agent coming from native image to observe your application behavior on the jvm and produce this",
    "start": "2306800",
    "end": "2312560"
  },
  {
    "text": "configuration file for you and also uh we have this repo on gab",
    "start": "2312560",
    "end": "2318880"
  },
  {
    "text": "where we are collecting reflection and configuration information for many popular Frameworks and libraries so that",
    "start": "2318880",
    "end": "2324760"
  },
  {
    "text": "you can pull them from this reability repo automatically and make your dependencies work with Native image",
    "start": "2324760",
    "end": "2331079"
  },
  {
    "text": "without any configuration needed from your side and as an example of that uh",
    "start": "2331079",
    "end": "2336119"
  },
  {
    "text": "we also get this question so how do I know if I want to build my project as a n image how do I know that my library XY",
    "start": "2336119",
    "end": "2342920"
  },
  {
    "text": "Z will work on with Native image for that we have this page on the website where we have a list of libraries that",
    "start": "2342920",
    "end": "2349440"
  },
  {
    "text": "either provide configuration of native image within the library itself or it's coming from decentralized reability repo",
    "start": "2349440",
    "end": "2356640"
  },
  {
    "text": "so if you're using any of those and that are like I think almost 200 libraries by now all of that those are tested and",
    "start": "2356640",
    "end": "2363200"
  },
  {
    "text": "proven to be working with grow V M9 image out of the box and one more thing talking about 90",
    "start": "2363200",
    "end": "2369400"
  },
  {
    "text": "image and to be aware of or continuing that what's the catch story so the build",
    "start": "2369400",
    "end": "2374760"
  },
  {
    "text": "time step is more important now because you're performing compilation of your application at build time step so you",
    "start": "2374760",
    "end": "2380200"
  },
  {
    "text": "need to be aware that if you're building a larger application you will spend a bit more time than on the jvm when you",
    "start": "2380200",
    "end": "2386920"
  },
  {
    "text": "are building your app because there is a lot of work to be done when you actually build a new application and also uh n image produces",
    "start": "2386920",
    "end": "2395599"
  },
  {
    "text": "n execut able for the Target architecture and operating system so you would need a powerful machine because it",
    "start": "2395599",
    "end": "2402280"
  },
  {
    "text": "needs some resources but also you cannot cross compile across different platforms",
    "start": "2402280",
    "end": "2407599"
  },
  {
    "text": "right now so this is solved a bit in the last release of grow VM I would say because we introduce this NY image",
    "start": "2407599",
    "end": "2413800"
  },
  {
    "text": "bundles feature where I can for example build a bundle on my Mac and then if I",
    "start": "2413800",
    "end": "2419240"
  },
  {
    "text": "want to I can drop it on let's say a Linux machine and build an IT executable on that Linux machine but out of the box",
    "start": "2419240",
    "end": "2426079"
  },
  {
    "text": "some like cross compilation between platforms is not supported at the moment because we need some jdk specific",
    "start": "2426079",
    "end": "2432720"
  },
  {
    "text": "features for each platform and uh yes in terms of developer experience and development",
    "start": "2432720",
    "end": "2439200"
  },
  {
    "text": "modes and best practices we do recommend that you develop your application on a jvm in jet mode for kind of faster",
    "start": "2439200",
    "end": "2445720"
  },
  {
    "text": "feedback loop and then you compile to Native as a more or less last step in",
    "start": "2445720",
    "end": "2450920"
  },
  {
    "text": "your development process maybe in your cicd pipeline once in a while but most likely you don't need to recompile your",
    "start": "2450920",
    "end": "2456920"
  },
  {
    "text": "application to Native every time you make some minor change in your code especially around the business logic",
    "start": "2456920",
    "end": "2463720"
  },
  {
    "text": "okay am I running out of time yet five minutes four minutes okay uh",
    "start": "2463720",
    "end": "2468760"
  },
  {
    "text": "let me see if I can speed up uh so what's new in gr VM we had this brand new release uh recently so this is a",
    "start": "2468760",
    "end": "2475200"
  },
  {
    "start": "2470000",
    "end": "2535000"
  },
  {
    "text": "huge new feature release uh on June 1th so I do recommend that you check it out",
    "start": "2475200",
    "end": "2480640"
  },
  {
    "text": "we have a lot of new features and also we have a new intro new distribution of grvm where many of the features that I",
    "start": "2480640",
    "end": "2486920"
  },
  {
    "text": "mentioned for example profile guide optimizations are available in this new distribution and what's new in this new",
    "start": "2486920",
    "end": "2494040"
  },
  {
    "text": "release other than that uh new distribution is that we now have jdk 17 and 20 bolts so we always encourage you",
    "start": "2494040",
    "end": "2500319"
  },
  {
    "text": "to use the latest and Native image as a tool is now included in RM JK itself so",
    "start": "2500319",
    "end": "2506160"
  },
  {
    "text": "if you ever run du install native image you don't need to do it anymore because it is in the jdk and we now have this",
    "start": "2506160",
    "end": "2513200"
  },
  {
    "text": "build bundles so you can build like bundle and then easily recreate your build in the future or maybe recreate it",
    "start": "2513200",
    "end": "2519079"
  },
  {
    "text": "on a different machine different platform and we made several improvements to memory usage of the build process and also around developer",
    "start": "2519079",
    "end": "2526599"
  },
  {
    "text": "experience so you can more easily and smoothly build your applications with prum Native image okay let me speed up",
    "start": "2526599",
    "end": "2533640"
  },
  {
    "text": "through all of that so just to emphasize what we will work on next for night image uh we keep working with many",
    "start": "2533640",
    "end": "2540119"
  },
  {
    "start": "2535000",
    "end": "2568000"
  },
  {
    "text": "library and framework authors to make sure you can easily use those libraries and Frameworks with scvm and you don't",
    "start": "2540119",
    "end": "2545480"
  },
  {
    "text": "need to Prov provide any configuration on its own we keep working on improving Peak Performance so that you can get",
    "start": "2545480",
    "end": "2551760"
  },
  {
    "text": "Peak Performance on Native image the same or better than on the jvm uh we",
    "start": "2551760",
    "end": "2557040"
  },
  {
    "text": "working to reduce build times but also requirements in terms of memory of the build process and we also working to",
    "start": "2557040",
    "end": "2564079"
  },
  {
    "text": "improve existing GC uh implementations and add new ones so to get started you",
    "start": "2564079",
    "end": "2569800"
  },
  {
    "start": "2568000",
    "end": "2580000"
  },
  {
    "text": "can go to grow vm. org or you can use SDK man to easily install grow VM with just one command of let release is",
    "start": "2569800",
    "end": "2576839"
  },
  {
    "text": "already on SD command so you can easily get it from there uh so to summarize",
    "start": "2576839",
    "end": "2582280"
  },
  {
    "start": "2580000",
    "end": "2607000"
  },
  {
    "text": "what you can accomplish with grow VM in the cloud is you can have jav applications that start fast use very",
    "start": "2582280",
    "end": "2587800"
  },
  {
    "text": "little memory very little CPU that are more secure and also that are very Compact and easy to scale and I",
    "start": "2587800",
    "end": "2595359"
  },
  {
    "text": "mentioned but also just after the break there will be also gram session where we he will talk about Micron not and grvm",
    "start": "2595359",
    "end": "2601440"
  },
  {
    "text": "and how they come together and how you can build great Cloud applications with Micron not and gr VM with that uh that",
    "start": "2601440",
    "end": "2608800"
  },
  {
    "start": "2607000",
    "end": "2635000"
  },
  {
    "text": "is all that is my Twitter handle in case you want to ask questions and please once again the reminder from the",
    "start": "2608800",
    "end": "2614359"
  },
  {
    "text": "organizers write this session and ask questions and with that that's it from my side thank",
    "start": "2614359",
    "end": "2619710"
  },
  {
    "text": "[Applause]",
    "start": "2619710",
    "end": "2626289"
  },
  {
    "text": "you",
    "start": "2633720",
    "end": "2636720"
  }
]