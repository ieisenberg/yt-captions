[
  {
    "text": "so this presentation is it's called taking the hippie bus to the enterprise",
    "start": "6880",
    "end": "13100"
  },
  {
    "text": "it's about three problems that I have experienced as a in my life as a software developer and I'm going to show",
    "start": "13100",
    "end": "20330"
  },
  {
    "text": "a solution that I think is a pretty cool to these problems yeah my name is Monte",
    "start": "20330",
    "end": "29090"
  },
  {
    "text": "laba and I'm a software developer at a pretty cool bi consultancy and software",
    "start": "29090",
    "end": "35390"
  },
  {
    "text": "development consultancy called 80/60 and and I'm also a software developer at a",
    "start": "35390",
    "end": "40970"
  },
  {
    "text": "company called particular software that develops actually a competing product",
    "start": "40970",
    "end": "46160"
  },
  {
    "text": "called in-service bus so it's kind of a finicky situation for me but but I'm still",
    "start": "46160",
    "end": "53840"
  },
  {
    "text": "allowed to work on a rebus and I'm still allowed to talk about it so that's one well that's what I'm going to do today",
    "start": "53840",
    "end": "60460"
  },
  {
    "text": "if you have any questions or think of anything afterwards please write me an",
    "start": "60460",
    "end": "66409"
  },
  {
    "text": "email or contact me on Twitter yes this presentation will be about I will start",
    "start": "66409",
    "end": "73459"
  },
  {
    "text": "out by talking about what I think your problem is and by that I mean possibly",
    "start": "73459",
    "end": "80590"
  },
  {
    "text": "actually I may mean that that's my problem so I might be protecting here but in my life as a software developer I",
    "start": "80590",
    "end": "88459"
  },
  {
    "text": "have often come across these three problems that I'm going to talk about and I'm seeing them solved in a many bad",
    "start": "88459",
    "end": "96529"
  },
  {
    "text": "ways so I'm going to talk about how to how to solve it in a in a better way so that's the part where I introduce my",
    "start": "96529",
    "end": "104029"
  },
  {
    "text": "rebus project which is a dotnet service bus actually I like to think of it just",
    "start": "104029",
    "end": "111349"
  },
  {
    "text": "as a messaging library and then I'm going to show you some fairly concrete",
    "start": "111349",
    "end": "118159"
  },
  {
    "text": "examples on how these problems can be solved yeah and some wrap-up afterwards",
    "start": "118159",
    "end": "124249"
  },
  {
    "text": "I will start up with some slides and some talking and but after all this",
    "start": "124249",
    "end": "133940"
  },
  {
    "text": "talking on the architecture track I think some real live running code is in",
    "start": "133940",
    "end": "139430"
  },
  {
    "text": "place I'm going to show you some code as well I hope that's a ride alright so what's",
    "start": "139430",
    "end": "147860"
  },
  {
    "text": "your problem I'm guessing that some of you might be struggling with systems",
    "start": "147860",
    "end": "153980"
  },
  {
    "text": "that are challenged because they have become big and they will continue",
    "start": "153980",
    "end": "162220"
  },
  {
    "text": "becoming bigger and bigger it usually starts out like you have to build some",
    "start": "162220",
    "end": "168170"
  },
  {
    "text": "something as simple and then your customer or your employer wants something extra and then you add it and",
    "start": "168170",
    "end": "175520"
  },
  {
    "text": "you keep on adding stuff to the system and you end up with this huge monolithic pile of spaghetti so I think this has",
    "start": "175520",
    "end": "183110"
  },
  {
    "text": "pretty much been a recurring theme on the track today so I'm going to show you where one way to perhaps attack this",
    "start": "183110",
    "end": "190400"
  },
  {
    "text": "problem moreover I have seen many",
    "start": "190400",
    "end": "196310"
  },
  {
    "text": "problems with integration with external parties I think it was Sam Newman who",
    "start": "196310",
    "end": "203390"
  },
  {
    "text": "mentioned the elytis this problem with integration with external parties that's",
    "start": "203390",
    "end": "210110"
  },
  {
    "text": "basically an availability problem where the availability problems of those external parties are imposed on you so",
    "start": "210110",
    "end": "217790"
  },
  {
    "text": "if I've seen so many systems fail because some external party failed or",
    "start": "217790",
    "end": "222920"
  },
  {
    "text": "wasn't there so I'm going to show you a way to handle that moreover I have seen",
    "start": "222920",
    "end": "229130"
  },
  {
    "text": "in many systems very complex logic that is sort of stuff happening that makes",
    "start": "229130",
    "end": "236600"
  },
  {
    "text": "other stuff happen that makes other stuff happen and then maybe the system sort of waits for awhile and then some",
    "start": "236600",
    "end": "242690"
  },
  {
    "text": "other stuff happens again and usually I have seen stuff like this implement it",
    "start": "242690",
    "end": "249260"
  },
  {
    "text": "in a very implicit and fragmented way by possibly having a pool somewhere and an",
    "start": "249260",
    "end": "256220"
  },
  {
    "text": "integer in another place and together these things actually compose the state",
    "start": "256220",
    "end": "263270"
  },
  {
    "text": "of some kind of process that is going on in the system but it's a fragmented and it's it's implicit and spread all over",
    "start": "263270",
    "end": "269870"
  },
  {
    "text": "the system so I'm going to show you a way to perhaps make this a little more concrete",
    "start": "269870",
    "end": "277240"
  },
  {
    "text": "yeah so to sum it up you're struggling with a monolith perhaps you have some",
    "start": "277240",
    "end": "282890"
  },
  {
    "text": "integration problems and you have perhaps problem coordinating your logic or reasoning about which processes are",
    "start": "282890",
    "end": "291110"
  },
  {
    "text": "going on in your system and one solution here I'm saying dissolution but I don't",
    "start": "291110",
    "end": "298310"
  },
  {
    "text": "want to be so bold as to claim that this is the solution I mean maybe tomorrow we will figure out",
    "start": "298310",
    "end": "303920"
  },
  {
    "text": "a better way to handle these things but the best way that I know of at the moment to handle these things is by",
    "start": "303920",
    "end": "310970"
  },
  {
    "text": "using messaging in intelligent ways and",
    "start": "310970",
    "end": "316310"
  },
  {
    "text": "if you're if just so everyone is clear on what I mean by messaging I mean when",
    "start": "316310",
    "end": "322910"
  },
  {
    "text": "you want to perform some kind of operation you can model that operation as a chunk of data that can be persisted",
    "start": "322910",
    "end": "329540"
  },
  {
    "text": "somewhere and can be delivered to somewhere else so basically that's just that's messaging it's just storing and",
    "start": "329540",
    "end": "336290"
  },
  {
    "text": "representing operations as chunks of data that can be exchanged and saved",
    "start": "336290",
    "end": "342850"
  },
  {
    "text": "yeah but in order for all of this to work this messaging has to happen by",
    "start": "342850",
    "end": "350150"
  },
  {
    "text": "using durable asynchronous queues they had to be durable so that when we send a",
    "start": "350150",
    "end": "358070"
  },
  {
    "text": "message somewhere we can see that this message is saved so the message is just",
    "start": "358070",
    "end": "364190"
  },
  {
    "text": "as important as a piece of data that we might want to store in the database so it's very important that these messages",
    "start": "364190",
    "end": "370370"
  },
  {
    "text": "are treated with the same with the same care as the data in our database so",
    "start": "370370",
    "end": "376520"
  },
  {
    "text": "therefore we have to use durable message queues moreover it has to be asynchronous this way we have this a",
    "start": "376520",
    "end": "384860"
  },
  {
    "text": "fire-and-forget way of sending messages and this way we will we will never block",
    "start": "384860",
    "end": "390650"
  },
  {
    "text": "when sending a message so we will never wait for some recipient to be there or",
    "start": "390650",
    "end": "395900"
  },
  {
    "text": "anything like that we can always count on being able to deliver to get our",
    "start": "395900",
    "end": "401660"
  },
  {
    "text": "messages sent so whether they're actually delivered to the recipient that's",
    "start": "401660",
    "end": "406820"
  },
  {
    "text": "that's another story and that's handled by the Q's or whatever yes and other net",
    "start": "406820",
    "end": "415190"
  },
  {
    "text": "developers in here okay cool and if you're the nerve net developer chances",
    "start": "415190",
    "end": "421910"
  },
  {
    "text": "are that you are running your code on Windows and then you're in luck because Windows since Windows 2000 has had a",
    "start": "421910",
    "end": "429470"
  },
  {
    "text": "built in asynchronous durable missed cue called a miss FQ Microsoft message queue",
    "start": "429470",
    "end": "435160"
  },
  {
    "text": "that you can enable by putting a check mark and at remove windows components so their action actually is a queue that we",
    "start": "435160",
    "end": "442310"
  },
  {
    "text": "can use to do these things build into minnows so that's pretty cool yes and now I'm",
    "start": "442310",
    "end": "451400"
  },
  {
    "text": "going to talk about rebus rebus is it's an Enterprise Service bus but I think",
    "start": "451400",
    "end": "458870"
  },
  {
    "text": "when when I say Enterprise Service bus or service bus then people will be thinking in like they have people have",
    "start": "458870",
    "end": "466190"
  },
  {
    "text": "experiences with service buses and there's a lot of commercial products out",
    "start": "466190",
    "end": "471320"
  },
  {
    "text": "there that that are Service buses but then yeah so to avoid I mean to avoid",
    "start": "471320",
    "end": "479210"
  },
  {
    "text": "confusion and I just want to tell you that rebus is not a huge broker thing or",
    "start": "479210",
    "end": "485990"
  },
  {
    "text": "a huge monolithic central thing that can do everything in the world and and",
    "start": "485990",
    "end": "492380"
  },
  {
    "text": "translate messages and integrate with all kinds of systems it can't do anything like that rebus is actually",
    "start": "492380",
    "end": "499010"
  },
  {
    "text": "just a messaging library it's a very simple messaging library that can help you exchange messages in intelligent",
    "start": "499010",
    "end": "505340"
  },
  {
    "text": "ways so that's basically it so it's a it's a thin layer on top of some kind of",
    "start": "505340",
    "end": "510560"
  },
  {
    "text": "queues and I'm going to show you today with MS MQ underneath and yeah so that's",
    "start": "510560",
    "end": "517340"
  },
  {
    "text": "basically it and moreover I'm I like to call it a hippie bus but that's that's sort of to",
    "start": "517340",
    "end": "525140"
  },
  {
    "text": "to counter this a white collar and tie thing that people usually think of when",
    "start": "525140",
    "end": "531740"
  },
  {
    "text": "they think of service buses I like to think of rebus as a very very nice and",
    "start": "531740",
    "end": "538040"
  },
  {
    "text": "relaxed bus that is very forgiving and it's free and that's a lot of stuff that is kind of a",
    "start": "538040",
    "end": "543860"
  },
  {
    "text": "hippie like with it so and it's not capitalistic in any way yeah and yeah as",
    "start": "543860",
    "end": "550550"
  },
  {
    "text": "I said it's a messaging library and it sits there as a layer on top of an smq and Reba's core is one single letter",
    "start": "550550",
    "end": "558800"
  },
  {
    "text": "made for diello sorry you're guaranteed to be able to include rivers in your",
    "start": "558800",
    "end": "564020"
  },
  {
    "text": "project and not have any conflicts with anything and then if you want integration with the different",
    "start": "564020",
    "end": "569690"
  },
  {
    "text": "third-party stuff then that can be achieved with the small dedicated",
    "start": "569690",
    "end": "575350"
  },
  {
    "text": "integration projects so for instance rivers can actually use RabbitMQ as it's",
    "start": "575350",
    "end": "580970"
  },
  {
    "text": "a messaging transport and can save stuff in different kinds of databases and more",
    "start": "580970",
    "end": "586190"
  },
  {
    "text": "stuff my motivation for creating rebus was that I've worked with",
    "start": "586190",
    "end": "591710"
  },
  {
    "text": "I've worked professionally with in-service bus for a couple of years and but after a couple of years who lead on",
    "start": "591710",
    "end": "600350"
  },
  {
    "text": "the guy who created and service bus he changed the license so that you had to pay in order to use in service bus and",
    "start": "600350",
    "end": "607370"
  },
  {
    "text": "that made me really sad because I really like this I like open source and free software and so yeah moreover in service",
    "start": "607370",
    "end": "615710"
  },
  {
    "text": "bus had some problems it was really hard to to get this started a - I mean it had",
    "start": "615710",
    "end": "622460"
  },
  {
    "text": "some problems with the arrows it could would throw a null reference exception in the middle of when you were invoking",
    "start": "622460",
    "end": "628700"
  },
  {
    "text": "the configuration API and stuff like that so there were some stuff that really annoyed me about in-service bus",
    "start": "628700",
    "end": "634780"
  },
  {
    "text": "then I wanted to use mass transit with which is another free service pass",
    "start": "634780",
    "end": "640640"
  },
  {
    "text": "implementation and that net but I actually could I couldn't make it work I had two days in a summer cottage at some",
    "start": "640640",
    "end": "647810"
  },
  {
    "text": "point and I I just couldn't make it work so maybe I'd check out the code at some unfortunate at some unfortunate time or",
    "start": "647810",
    "end": "655460"
  },
  {
    "text": "something but I just I gave up on mass transit then I wanted to fork and",
    "start": "655460",
    "end": "661010"
  },
  {
    "text": "service bus from when it was still free but the in service bus was like a 250 C",
    "start": "661010",
    "end": "666770"
  },
  {
    "text": "sharp projects and 60 thousand lines of code and it was totally",
    "start": "666770",
    "end": "672080"
  },
  {
    "text": "at the time it was a complete mess so um actually they have have cleaned up a lot",
    "start": "672080",
    "end": "677810"
  },
  {
    "text": "I just want to say that but at the time the code base was really messy and huge",
    "start": "677810",
    "end": "684519"
  },
  {
    "text": "yeah so I wanted to create rebus and it has always been free and it will",
    "start": "684519",
    "end": "690589"
  },
  {
    "text": "continue to be and moreover I want it to be really easy and really a key part of",
    "start": "690589",
    "end": "697430"
  },
  {
    "text": "that is it has to have really awesome error messages so when you get an error message in rebus it's not it's not a",
    "start": "697430",
    "end": "704570"
  },
  {
    "text": "slap in the face it's always a step forward so each error message in rebus will explain you",
    "start": "704570",
    "end": "711050"
  },
  {
    "text": "exactly what is wrong in pedagogical terms and then it will it will suggest",
    "start": "711050",
    "end": "716810"
  },
  {
    "text": "some kind of solution so for example if you if you rebus can encrypt message",
    "start": "716810",
    "end": "722360"
  },
  {
    "text": "bodies so if you want to configure encryption and you forget to provide the key then rebus will generate a key for",
    "start": "722360",
    "end": "728329"
  },
  {
    "text": "you and actually type out the XML that you can put into your configuration file so it I just want to make stuff like",
    "start": "728329",
    "end": "736700"
  },
  {
    "text": "that really easy so that it's easy to to get going and easy to actually easy to get past all of the reaper stuff and",
    "start": "736700",
    "end": "743839"
  },
  {
    "text": "just start working on your real code and solving your real problems yeah moreover",
    "start": "743839",
    "end": "751250"
  },
  {
    "text": "I just because I've started out one is I wanted to create rebus in a way that you",
    "start": "751250",
    "end": "756589"
  },
  {
    "text": "could start out using it at the beginning of a project and then at some point if the project became more serious",
    "start": "756589",
    "end": "762560"
  },
  {
    "text": "and you could warrant the licensing licensing cost you could easily port all",
    "start": "762560",
    "end": "767630"
  },
  {
    "text": "your code to an service bus so therefore all the api's in rebus are actually",
    "start": "767630",
    "end": "772730"
  },
  {
    "text": "stolen from in service bus so all the api's you're going to see except from",
    "start": "772730",
    "end": "778399"
  },
  {
    "text": "the configuration api all of the other api's are stolen from in service bus so yeah right now it's a fairly small",
    "start": "778399",
    "end": "786740"
  },
  {
    "text": "project three thousand seven hundred lines of c-sharp code the code is on github and it has contributions from 12",
    "start": "786740",
    "end": "794269"
  },
  {
    "text": "developers besides me so I'm not the only one developing it and you get up and running",
    "start": "794269",
    "end": "803300"
  },
  {
    "text": "with rebus by using nougat so that's basically the way you you get started doing stuff internet nowadays",
    "start": "803300",
    "end": "810819"
  },
  {
    "text": "the current version is called 0:43 one it's a pretty cryptic version name and I",
    "start": "810819",
    "end": "818480"
  },
  {
    "text": "have often been asked when version 1o will be out but I don't think it makes",
    "start": "818480",
    "end": "824089"
  },
  {
    "text": "that much sense I mean at some point I wanted to create a version 1o because this sounds kind of unofficial and",
    "start": "824089",
    "end": "831380"
  },
  {
    "text": "sounds kind of alpha but rebus has been moving money around since version 0 14",
    "start": "831380",
    "end": "837769"
  },
  {
    "text": "alpha and here it has controlled a couple of power plants since 0 17 alpha",
    "start": "837769",
    "end": "843680"
  },
  {
    "text": "so and I mean the version is just that's just a number it doesn't mean anything",
    "start": "843680",
    "end": "849709"
  },
  {
    "text": "so that probably will never be one oh yeah I'm going to show you a previous",
    "start": "849709",
    "end": "858529"
  },
  {
    "text": "demo in a in a few seconds but before we begin there's just a few things that are good to know with rebus all messages are",
    "start": "858529",
    "end": "866509"
  },
  {
    "text": "plain old still our objects so when you want to create a new message type you just create a class and then you put in",
    "start": "866509",
    "end": "874130"
  },
  {
    "text": "some fields if you want some data along in your message and then instances of that class can be sent as messages and",
    "start": "874130",
    "end": "882680"
  },
  {
    "text": "in rebus all endpoints have their own input queue so the input queue of rebus",
    "start": "882680",
    "end": "889009"
  },
  {
    "text": "endpoint is sort of the ID of the of the endpoint and then each message type is",
    "start": "889009",
    "end": "897259"
  },
  {
    "text": "owned by one logical service so that means that for each message type that is",
    "start": "897259",
    "end": "903410"
  },
  {
    "text": "in in your in all your systems you can always map that message type to one",
    "start": "903410",
    "end": "909439"
  },
  {
    "text": "endpoint somewhere and that endpoint will be the owner of that message so so",
    "start": "909439",
    "end": "915290"
  },
  {
    "text": "this way there is a an ownership mapping you could say and I'm going to show you",
    "start": "915290",
    "end": "921589"
  },
  {
    "text": "that in a few seconds yeah and then it's already time for the first demo yeah so",
    "start": "921589",
    "end": "930649"
  },
  {
    "text": "let's hope that this works I have a simple solution here with two projects a",
    "start": "930649",
    "end": "935870"
  },
  {
    "text": "client and a server both our simple console applications that",
    "start": "935870",
    "end": "942750"
  },
  {
    "text": "don't do anything at the moment so now I want to now I want to be able to send",
    "start": "942750",
    "end": "949080"
  },
  {
    "text": "messages from the client to the server so in order to do that I will install",
    "start": "949080",
    "end": "956100"
  },
  {
    "text": "rebus into the server and now in the",
    "start": "956100",
    "end": "961920"
  },
  {
    "text": "server I can configure and then I",
    "start": "961920",
    "end": "967020"
  },
  {
    "text": "provide this container adapter in rebus rebus always wants some kind of",
    "start": "967020",
    "end": "972030"
  },
  {
    "text": "container adapter which is usually the place where you will use one of the",
    "start": "972030",
    "end": "977160"
  },
  {
    "text": "flavors that exist for the ioc container that you're using because it would use this container adapter to look up",
    "start": "977160",
    "end": "983190"
  },
  {
    "text": "message handlers so that's usually where you will bridge somehow to the ioc",
    "start": "983190",
    "end": "988800"
  },
  {
    "text": "container of your choice then you go transport this basically the avi always",
    "start": "988800",
    "end": "994980"
  },
  {
    "text": "starts like this and then you can dot and then you can discover all the different configuration options",
    "start": "994980",
    "end": "1000650"
  },
  {
    "text": "available here so this way the API the configuration API is has this discovery",
    "start": "1000650",
    "end": "1007100"
  },
  {
    "text": "thing going on and then I configure the",
    "start": "1007100",
    "end": "1012860"
  },
  {
    "text": "transport to use MSM queue and get input queue name from app config that's a",
    "start": "1012860",
    "end": "1019790"
  },
  {
    "text": "little long and then I just create the bus and start it so right now I will",
    "start": "1019790",
    "end": "1027319"
  },
  {
    "text": "have a bus running but the program will exit immediately so in order to avoid",
    "start": "1027319",
    "end": "1032720"
  },
  {
    "text": "that I will just go press ENTER to quit",
    "start": "1032720",
    "end": "1037959"
  },
  {
    "text": "like this I told it to pick up the input queue name from app config so I just",
    "start": "1037959",
    "end": "1044390"
  },
  {
    "text": "have to provide a little bit of XML in app config to tell it which input queue to use I do that with this rebus",
    "start": "1044390",
    "end": "1052820"
  },
  {
    "text": "configuration section that I will just make a little more simple so to reduce",
    "start": "1052820",
    "end": "1058550"
  },
  {
    "text": "the noise so basically what this one says is that this rebus endpoint has an",
    "start": "1058550",
    "end": "1064910"
  },
  {
    "text": "input queue called server dot input then it has an error queue called error this",
    "start": "1064910",
    "end": "1070730"
  },
  {
    "text": "means that if the message processing from server on input fails more than five times in a row then",
    "start": "1070730",
    "end": "1078090"
  },
  {
    "text": "it will move the message to the error Q so this way rebus will never lose a message it will never ever lose a",
    "start": "1078090",
    "end": "1084450"
  },
  {
    "text": "message actually it will always make sure that the message if something goes wrong is brought back to the queue from",
    "start": "1084450",
    "end": "1091769"
  },
  {
    "text": "where from where it came and then if it fails too many times it moves it to the air queue to avoid denial servicing your",
    "start": "1091769",
    "end": "1100289"
  },
  {
    "text": "endpoint right so now I should be able to start up the server and okay I got a",
    "start": "1100289",
    "end": "1111659"
  },
  {
    "text": "couple of errors now because actually it appears that there was some messages in the queue for this endpoint it says that",
    "start": "1111659",
    "end": "1119190"
  },
  {
    "text": "it couldn't find any handlers of type four message of type system that string",
    "start": "1119190",
    "end": "1124259"
  },
  {
    "text": "so actually that there was a couple of strings in the input queue of this endpoint so just to prove that I'm not",
    "start": "1124259",
    "end": "1130019"
  },
  {
    "text": "lying I can start out this a very simple MSM q q inspector and then you can see",
    "start": "1130019",
    "end": "1137039"
  },
  {
    "text": "now in the era queue we have the three strings from from just now so they're",
    "start": "1137039",
    "end": "1144899"
  },
  {
    "text": "sitting here safe and they're not gone all right so let's create a message",
    "start": "1144899",
    "end": "1155009"
  },
  {
    "text": "handler in here this usually you would you would register magic message",
    "start": "1155009",
    "end": "1162809"
  },
  {
    "text": "handlers in your ioc container but since i'm using this building container adapter which is very simple i will just",
    "start": "1162809",
    "end": "1168779"
  },
  {
    "text": "i can register handlers like this I will",
    "start": "1168779",
    "end": "1173789"
  },
  {
    "text": "just go register some type telling rebus it can use this one as a handler and then I make this one a message handler",
    "start": "1173789",
    "end": "1180570"
  },
  {
    "text": "by going I handle messages of type string this will this will force me to",
    "start": "1180570",
    "end": "1189239"
  },
  {
    "text": "implement this method called handle with the type that I specified here and in",
    "start": "1189239",
    "end": "1195059"
  },
  {
    "text": "this server I would like to handle strings by just going got a greeting",
    "start": "1195059",
    "end": "1201590"
  },
  {
    "text": "message so I'll just start the server again yes",
    "start": "1201590",
    "end": "1208120"
  },
  {
    "text": "and leave it running so let's create the client I will install the rebus package",
    "start": "1208120",
    "end": "1217720"
  },
  {
    "text": "into the client I will configure oh configure the container adapter I will",
    "start": "1217720",
    "end": "1227830"
  },
  {
    "text": "tell it to use an smq in one way client mode this way the client will not have",
    "start": "1227830",
    "end": "1233679"
  },
  {
    "text": "its own input queue so it will be able to send messages to the server but it will not be able to receive anything",
    "start": "1233679",
    "end": "1239289"
  },
  {
    "text": "back but that's okay and this time I will call this message ownership thing",
    "start": "1239289",
    "end": "1247330"
  },
  {
    "text": "which will allow me to tell readers how it can determine who owns messages of a",
    "start": "1247330",
    "end": "1253240"
  },
  {
    "text": "given type and in this case I will tell it to pick it up from the rebus",
    "start": "1253240",
    "end": "1258370"
  },
  {
    "text": "configuration section so I'll just provide that message ownership",
    "start": "1258370",
    "end": "1263529"
  },
  {
    "text": "information in a moment and I will just",
    "start": "1263529",
    "end": "1269309"
  },
  {
    "text": "read a greeting in here type greeting",
    "start": "1269309",
    "end": "1278039"
  },
  {
    "text": "like this and then when I'm using the buildin container adapter I can find the",
    "start": "1278039",
    "end": "1283899"
  },
  {
    "text": "bus the bus instance that that is the result of calling this API will be on",
    "start": "1283899",
    "end": "1289750"
  },
  {
    "text": "the bus privacy so I could just get it like this usually if you're using an icy",
    "start": "1289750",
    "end": "1294789"
  },
  {
    "text": "container you would resolve the AI bus from your container and I will just send",
    "start": "1294789",
    "end": "1301360"
  },
  {
    "text": "this greeting so notice how in on the client here I don't I don't worry about",
    "start": "1301360",
    "end": "1308019"
  },
  {
    "text": "who is going to receive this message I just tell rebus that I want to send this",
    "start": "1308019",
    "end": "1313360"
  },
  {
    "text": "message and then rivers will have to figure out where to send it so that's sort of where the sort of the this very",
    "start": "1313360",
    "end": "1320799"
  },
  {
    "text": "very simple bus layer kicks in and they uses these very simple ownership",
    "start": "1320799",
    "end": "1326490"
  },
  {
    "text": "mappings to determine where the message should go so in this case I will provide",
    "start": "1326490",
    "end": "1333279"
  },
  {
    "text": "a rebus configuration section here remove all the in perk you stuff and",
    "start": "1333279",
    "end": "1338909"
  },
  {
    "text": "then I will use one single endpoint mapping which is the way you map a",
    "start": "1338909",
    "end": "1346209"
  },
  {
    "text": "message type to an endpoint to the only endpoint in this case I want to map",
    "start": "1346209",
    "end": "1351459"
  },
  {
    "text": "system that string from a Miss call tip to server dot input so as you can see",
    "start": "1351459",
    "end": "1362289"
  },
  {
    "text": "this is a very very simple way of specifying that is messages of type",
    "start": "1362289",
    "end": "1367599"
  },
  {
    "text": "system string are owned by the endpoint hiding behind servitor input so now I should be able to start the client and",
    "start": "1367599",
    "end": "1376289"
  },
  {
    "text": "client is running and the server is running and sorry hi and I got the green",
    "start": "1376289",
    "end": "1383229"
  },
  {
    "text": "so as you can see I can now send messages from the client to the server",
    "start": "1383229",
    "end": "1388839"
  },
  {
    "text": "and to prove that no messages were lost I have these three strings in my arrack",
    "start": "1388839",
    "end": "1395289"
  },
  {
    "text": "you I can I can select these messages and then since rebus puts the original",
    "start": "1395289",
    "end": "1403749"
  },
  {
    "text": "the source Q which is the Q where these messages failed as an extra message",
    "start": "1403749",
    "end": "1409149"
  },
  {
    "text": "header rivers can return these messages to the sauce queue and this way delivered the messages to the server and",
    "start": "1409149",
    "end": "1415709"
  },
  {
    "text": "yeah this way no messages were lost yeah so that was a",
    "start": "1415709",
    "end": "1422679"
  },
  {
    "text": "very short demo showing how how simple it is to get up and running with with",
    "start": "1422679",
    "end": "1429219"
  },
  {
    "text": "rebus so now back to the to the three",
    "start": "1429219",
    "end": "1434529"
  },
  {
    "text": "problems that I talked about we talked about this system that was becoming too big and integration with external",
    "start": "1434529",
    "end": "1440229"
  },
  {
    "text": "parties and some complex logic with coordination and timing the first",
    "start": "1440229",
    "end": "1445239"
  },
  {
    "text": "problem and I have a sort of stolen the setting from from the work at one of our",
    "start": "1445239",
    "end": "1452889"
  },
  {
    "text": "clients at the t60 where we're building this trading platform yeah so imagine",
    "start": "1452889",
    "end": "1460329"
  },
  {
    "text": "that we're building a trading platform where traders in front office are striking deals with counterparties and",
    "start": "1460329",
    "end": "1466599"
  },
  {
    "text": "then some administrative personnel in back off this will make sure that these",
    "start": "1466599",
    "end": "1472299"
  },
  {
    "text": "counterparties are charged so we we have we have an application that can capture",
    "start": "1472299",
    "end": "1478390"
  },
  {
    "text": "trades and can do invoicing so already it feels like we have a system that is sort of doing too much and it's not",
    "start": "1478390",
    "end": "1484899"
  },
  {
    "text": "really focused so I want to pull in a few few of the things that have been",
    "start": "1484899",
    "end": "1492220"
  },
  {
    "text": "mentioned today and but I'm going to add distributed to this one because there is",
    "start": "1492220",
    "end": "1498370"
  },
  {
    "text": "a kind of a kind of domain driven design that has this extra T in front which is distributed domain different driven",
    "start": "1498370",
    "end": "1505059"
  },
  {
    "text": "design which later I think evolved into all this CQRS and",
    "start": "1505059",
    "end": "1510580"
  },
  {
    "text": "the bin sourcing stuff that is going on Internet at the moment and but the key",
    "start": "1510580",
    "end": "1515799"
  },
  {
    "text": "thing is that we use this concept of a bounding bounded context from the main",
    "start": "1515799",
    "end": "1521710"
  },
  {
    "text": "room design to to sort of capture the fact that we may have different",
    "start": "1521710",
    "end": "1529029"
  },
  {
    "text": "subdomains in our big domain so in this case we have this a big commodity trading domain but actually there are",
    "start": "1529029",
    "end": "1536769"
  },
  {
    "text": "two subdomains at play here we have this trading domain where the traders are punching trades into the system and we",
    "start": "1536769",
    "end": "1543549"
  },
  {
    "text": "have a billing domain where some people usually once a month or something like",
    "start": "1543549",
    "end": "1549610"
  },
  {
    "text": "that will go and select a lot of trades and then they will make sure that the counterparties are are invoiced yeah so",
    "start": "1549610",
    "end": "1558639"
  },
  {
    "text": "in this case in the first demo I will show how Reba's can perhaps help you",
    "start": "1558639",
    "end": "1564309"
  },
  {
    "text": "separate your big system into two separate domains so let's just stop this",
    "start": "1564309",
    "end": "1572080"
  },
  {
    "text": "again",
    "start": "1572080",
    "end": "1574440"
  },
  {
    "text": "that's demo 1 in this demo I have two",
    "start": "1578359",
    "end": "1586710"
  },
  {
    "text": "two solution folders called back office and front office in front office I have",
    "start": "1586710",
    "end": "1592979"
  },
  {
    "text": "the trading service here which is a simple Reapers endpoint that will it",
    "start": "1592979",
    "end": "1601109"
  },
  {
    "text": "will configure a subscription storage this means that this endpoint will be able to store subscribers it will be",
    "start": "1601109",
    "end": "1608909"
  },
  {
    "text": "able to publish messages to those subscribers so so this way Reba's can",
    "start": "1608909",
    "end": "1614119"
  },
  {
    "text": "has this implementation of publish subscribe that you can use and in this",
    "start": "1614119",
    "end": "1621179"
  },
  {
    "text": "trading endpoint I will input the name of a counterparty and an amount and a price and then it",
    "start": "1621179",
    "end": "1627029"
  },
  {
    "text": "will publish this new trade recorded event new trade recorded is just a simple class that I have made in this",
    "start": "1627029",
    "end": "1634979"
  },
  {
    "text": "trading type messages assembly so this way in billing this way billing can",
    "start": "1634979",
    "end": "1641099"
  },
  {
    "text": "include a reference to the train that messages assembly and have access to this type of event and billing which is",
    "start": "1641099",
    "end": "1648450"
  },
  {
    "text": "also a simple Reba's endpoint can subscribe to the new trade recorded",
    "start": "1648450",
    "end": "1654509"
  },
  {
    "text": "event so when it starts up it establishes a subscription to this event",
    "start": "1654509",
    "end": "1660229"
  },
  {
    "text": "since the publisher has is using a",
    "start": "1660229",
    "end": "1665309"
  },
  {
    "text": "MongoDB as a subscription storage it will remember this forever so even if I",
    "start": "1665309",
    "end": "1670769"
  },
  {
    "text": "restart the publisher or kill it or whatever I can think of it will it will",
    "start": "1670769",
    "end": "1676529"
  },
  {
    "text": "know that this subscriber exists when it starts up again yes and then the",
    "start": "1676529",
    "end": "1683580"
  },
  {
    "text": "subscriber registers this handler called charge the customer which just which",
    "start": "1683580",
    "end": "1691499"
  },
  {
    "text": "handles this new trade record event and just prints out the message the information on the console so let's try",
    "start": "1691499",
    "end": "1697589"
  },
  {
    "text": "and run this one that was billing and",
    "start": "1697589",
    "end": "1703789"
  },
  {
    "text": "that was trading so now what I'm trading I can do this",
    "start": "1703789",
    "end": "1708899"
  },
  {
    "text": "and we'll get the published events so this way you can you can use",
    "start": "1708899",
    "end": "1715450"
  },
  {
    "text": "publish/subscribe messaging between your applications and they will oh sorry",
    "start": "1715450",
    "end": "1722919"
  },
  {
    "text": "there was an error apparently a string is not a valid number I'm sorry let's just touch this",
    "start": "1722919",
    "end": "1733039"
  },
  {
    "text": "one out again I wanted to stop billing I want to kill building and then publish",
    "start": "1733039",
    "end": "1740690"
  },
  {
    "text": "some events and as you can see when building starts up again it will receive",
    "start": "1740690",
    "end": "1747679"
  },
  {
    "text": "these events as if nothing happened so this way we can have reliable messaging and these systems will be very loosely",
    "start": "1747679",
    "end": "1754460"
  },
  {
    "text": "coupled and will not care whether they're both there at the same time so that's pretty neat then our second",
    "start": "1754460",
    "end": "1763309"
  },
  {
    "text": "problem is integration with an external party in our trading domain here we have",
    "start": "1763309",
    "end": "1769190"
  },
  {
    "text": "we have this a new department called middle office that need to confirm all trades when they're made and they",
    "start": "1769190",
    "end": "1775519"
  },
  {
    "text": "confirm these trades by asking an external soap web service called credit assessment and asking it whether this",
    "start": "1775519",
    "end": "1782269"
  },
  {
    "text": "client is is good or not so it's a very simple a credit assessment service and",
    "start": "1782269",
    "end": "1788259"
  },
  {
    "text": "here we want it to be asynchronous so that we don't we don't wait for the",
    "start": "1788259",
    "end": "1793669"
  },
  {
    "text": "result basically so we if the soap web service is slow or if it's down the rest",
    "start": "1793669",
    "end": "1799639"
  },
  {
    "text": "of the system will just continue moreover it has to be reliable so we",
    "start": "1799639",
    "end": "1804950"
  },
  {
    "text": "will never forget what we were doing so if this is soap web service is it's not available then it's really important",
    "start": "1804950",
    "end": "1811639"
  },
  {
    "text": "that it will that this call will still go through when it becomes available in",
    "start": "1811639",
    "end": "1818210"
  },
  {
    "text": "order to do that we will use rebuses automatic retries and i've just made",
    "start": "1818210",
    "end": "1823309"
  },
  {
    "text": "this very simple a sequence diagram to show you what's going to happen now trading will publish this new trade",
    "start": "1823309",
    "end": "1829519"
  },
  {
    "text": "record event which will be now it would be subscribed to from confirmations confirmations will send get credit",
    "start": "1829519",
    "end": "1836869"
  },
  {
    "text": "status requests to an integration service this integration service is just a very very",
    "start": "1836869",
    "end": "1842730"
  },
  {
    "text": "simple rebus in point whose sole responsibility in the world is to receive these get created status",
    "start": "1842730",
    "end": "1848760"
  },
  {
    "text": "requests then make this external soap call which is the unsafe operation and",
    "start": "1848760",
    "end": "1854520"
  },
  {
    "text": "then it will return the reply containing the result of this call and then when",
    "start": "1854520",
    "end": "1861210"
  },
  {
    "text": "that happens where that reply is received in confirmations it will publish this trade confirmed or a trade",
    "start": "1861210",
    "end": "1867060"
  },
  {
    "text": "rejected event depending on the outcome yeah so let's see how we can make a web",
    "start": "1867060",
    "end": "1874020"
  },
  {
    "text": "service call by using a messaging facade let's demo - so now I have the same code",
    "start": "1874020",
    "end": "1888690"
  },
  {
    "text": "as before nothing has changed except I've added this middle of this thing",
    "start": "1888690",
    "end": "1894290"
  },
  {
    "text": "middle office has the confirmations service which was this one and then it",
    "start": "1894290",
    "end": "1901560"
  },
  {
    "text": "has a a couple of messages a couple of events that it can publish and then it",
    "start": "1901560",
    "end": "1907200"
  },
  {
    "text": "has this external folder containing the integration service which is this one",
    "start": "1907200",
    "end": "1912980"
  },
  {
    "text": "and and then I've put this credit assessment very unsafe soap which serves",
    "start": "1912980",
    "end": "1919470"
  },
  {
    "text": "in here which is has a very devious implementation as you can see it actually fails 75% of the times that you",
    "start": "1919470",
    "end": "1927150"
  },
  {
    "text": "call it and then 25% of the times it will use the the length of the",
    "start": "1927150",
    "end": "1932550"
  },
  {
    "text": "counterpart name to determine whether he's good or not so it's a pretty crazy implementation actually but the point is",
    "start": "1932550",
    "end": "1939480"
  },
  {
    "text": "that it fails almost every time you call it yeah in this integration service I've",
    "start": "1939480",
    "end": "1945660"
  },
  {
    "text": "made this very simple Handler that handles the get credit status request",
    "start": "1945660",
    "end": "1951870"
  },
  {
    "text": "that was this one and then it makes the call and returns the reply back to",
    "start": "1951870",
    "end": "1957330"
  },
  {
    "text": "whoever sent this one and it can do this by creating the client making the soap",
    "start": "1957330",
    "end": "1963390"
  },
  {
    "text": "web service call and then using the bus to reply so this way the bus will just reply back to whoever sent the message",
    "start": "1963390",
    "end": "1969900"
  },
  {
    "text": "that we're currently handling yeah last thing to show is in",
    "start": "1969900",
    "end": "1976830"
  },
  {
    "text": "confirmations we have the thing that invokes all of this it's the check credit status handler",
    "start": "1976830",
    "end": "1982670"
  },
  {
    "text": "this confirmation service has subscribed to the new trait recorded event and then",
    "start": "1982670",
    "end": "1987840"
  },
  {
    "text": "it has this handler that handles the reply when handling me the new trait",
    "start": "1987840",
    "end": "1993030"
  },
  {
    "text": "recorded it will just use the bus to send this one and then the bus has an endpoint mapping that map's this get",
    "start": "1993030",
    "end": "1999750"
  },
  {
    "text": "credit status request to the integration service and then since we are the sender of this request we will get the reply",
    "start": "1999750",
    "end": "2007190"
  },
  {
    "text": "and then depending on the status we will publish a trade confirmed or trade rejected event so let's just try and run",
    "start": "2007190",
    "end": "2015020"
  },
  {
    "text": "this so as you can see you oh that was a",
    "start": "2015020",
    "end": "2021260"
  },
  {
    "text": "call waiting in a queue so now the deeper debugger just broke into the",
    "start": "2021260",
    "end": "2027860"
  },
  {
    "text": "debugger here but yeah nothing really happened actually it's still running back here and let's just see if building",
    "start": "2027860",
    "end": "2036950"
  },
  {
    "text": "is hiding back here so now we have trading up here we have the new",
    "start": "2036950",
    "end": "2042350"
  },
  {
    "text": "confirmation service sorry we have the",
    "start": "2042350",
    "end": "2048290"
  },
  {
    "text": "confirmation service here and we have the integration service here so all the",
    "start": "2048290",
    "end": "2054350"
  },
  {
    "text": "all the gray and yellow logging is it's okay yellow is warning so this one actually",
    "start": "2054350",
    "end": "2060320"
  },
  {
    "text": "hasn't experienced any arrows so even though it got an exception because of",
    "start": "2060320",
    "end": "2065600"
  },
  {
    "text": "the automatic retry mechanism it will retry up to five times it will just lock",
    "start": "2065600",
    "end": "2070610"
  },
  {
    "text": "this error as a warning and then it looks like since there's no red logging in here the the call would eventually go",
    "start": "2070610",
    "end": "2077780"
  },
  {
    "text": "through so let's see if we can make this fail oh I couldn't make this one fail",
    "start": "2077780",
    "end": "2087220"
  },
  {
    "text": "yeah no actually I don't want to spend time making this one fail I will rather",
    "start": "2087220",
    "end": "2094340"
  },
  {
    "text": "see if I can make the last demo fail because it's more important there but important point is that the calls go",
    "start": "2094340",
    "end": "2100160"
  },
  {
    "text": "through even though it has some availability pretty obvious availability problems",
    "start": "2100160",
    "end": "2105440"
  },
  {
    "text": "over here yeah so the third prop problem",
    "start": "2105440",
    "end": "2111890"
  },
  {
    "text": "was this complex coordination and timing thing so imagine now that the building",
    "start": "2111890",
    "end": "2116900"
  },
  {
    "text": "needs to charge the customer but but this process can be optimized by sending",
    "start": "2116900",
    "end": "2122870"
  },
  {
    "text": "out one big invoice if the credit status of the client is good but but if the",
    "start": "2122870",
    "end": "2130190"
  },
  {
    "text": "credit status is bad then we want to send the invoice immediately to avoid any risks yeah so this way a billing",
    "start": "2130190",
    "end": "2139640"
  },
  {
    "text": "will now once this new trade record event is received it will await the credit status and then depending on this",
    "start": "2139640",
    "end": "2145670"
  },
  {
    "text": "credit status it will send the invoice in one way or another so so we have this",
    "start": "2145670",
    "end": "2153140"
  },
  {
    "text": "process going on now to avoid by forgetting to send these invoices in case this web service called fails and",
    "start": "2153140",
    "end": "2159740"
  },
  {
    "text": "never returns any reply we want to take and some kind of alternative action if",
    "start": "2159740",
    "end": "2165950"
  },
  {
    "text": "nothing has happened within 10 seconds this is actually what is called a",
    "start": "2165950",
    "end": "2173030"
  },
  {
    "text": "process manager in the literature which is a stateful service which is sort of a",
    "start": "2173030",
    "end": "2180650"
  },
  {
    "text": "state machine inside a service whose transitions are triggered by messages so",
    "start": "2180650",
    "end": "2185720"
  },
  {
    "text": "just imagine this state machine where all transitions are triggered by messages that's the process manager and",
    "start": "2185720",
    "end": "2191660"
  },
  {
    "text": "we can have any number of instances of this of this state machine then we want",
    "start": "2191660",
    "end": "2198410"
  },
  {
    "text": "to introduce some kind of a timeout concept to allow us to take alternative action if if this process hasn't",
    "start": "2198410",
    "end": "2204740"
  },
  {
    "text": "completed within 10 seconds and we want to be able to perform these compensating",
    "start": "2204740",
    "end": "2210740"
  },
  {
    "text": "actions which in this case is very simple we just want to send an email if nothing has happened so now the sequence",
    "start": "2210740",
    "end": "2217940"
  },
  {
    "text": "diagram looks like this trading will publish the new trade recorded event which will go to both confirmations and",
    "start": "2217940",
    "end": "2224540"
  },
  {
    "text": "billing in confirmations we have all this soap thing going on I just hit all the integration service stuff in this",
    "start": "2224540",
    "end": "2232100"
  },
  {
    "text": "small loop make external call so it has some some kind of local thing going on",
    "start": "2232100",
    "end": "2237800"
  },
  {
    "text": "but we don't have to care about that with this confirmations thing is over it will publish the tray confirmed event event which will end the",
    "start": "2237800",
    "end": "2245970"
  },
  {
    "text": "process in billing and then billing can do its invoicing the way that it wants to but in order to if if this trade",
    "start": "2245970",
    "end": "2254790"
  },
  {
    "text": "confirmed event never arrives then this process will sort of continue to live on and then at some point we",
    "start": "2254790",
    "end": "2262230"
  },
  {
    "text": "want to wake up this process so therefore in billing when we start the process we will send a timeout",
    "start": "2262230",
    "end": "2267450"
  },
  {
    "text": "request to a timeout service whose only responsibility in life is to receive a",
    "start": "2267450",
    "end": "2272610"
  },
  {
    "text": "time not request wait the time that that is specified in this timeout request and then will return a timeout reply after",
    "start": "2272610",
    "end": "2279600"
  },
  {
    "text": "that time so this way we can order a timeout request a sort of a wake-up call after 10 seconds so billing will use",
    "start": "2279600",
    "end": "2287130"
  },
  {
    "text": "that to wake up itself after 10 seconds if the process hasn't completed yes so",
    "start": "2287130",
    "end": "2294330"
  },
  {
    "text": "that will be demo 3 so now I have",
    "start": "2294330",
    "end": "2303570"
  },
  {
    "text": "changed I have changed billing and I",
    "start": "2303570",
    "end": "2309930"
  },
  {
    "text": "apologize in advance because this code may look a little bit crazy when you look at it at first but it is actually",
    "start": "2309930",
    "end": "2316980"
  },
  {
    "text": "really simple it trust me now the the",
    "start": "2316980",
    "end": "2322830"
  },
  {
    "text": "message handler in billing called charge the customer is now what in service boss",
    "start": "2322830",
    "end": "2328860"
  },
  {
    "text": "likes to call a saga but that's actually just that's what's called a process manager in the literature about",
    "start": "2328860",
    "end": "2335310"
  },
  {
    "text": "distributed systems so why he chose to call it saga I don't know that's a thing",
    "start": "2335310",
    "end": "2341250"
  },
  {
    "text": "he he stole from database theory I think this process processes state is made out",
    "start": "2341250",
    "end": "2350280"
  },
  {
    "text": "of this billing saga data class so I'm I've created this class that can model",
    "start": "2350280",
    "end": "2356760"
  },
  {
    "text": "the state of my state machine but this process is going on and not in my state machine I want to store the trade ID and",
    "start": "2356760",
    "end": "2363840"
  },
  {
    "text": "the counterparty a name and then I want to store the trade details and the result of the",
    "start": "2363840",
    "end": "2370560"
  },
  {
    "text": "credit assessment so and these are not able because I don't want to make any assumptions on",
    "start": "2370560",
    "end": "2376650"
  },
  {
    "text": "the order in which these pieces of information arrive so when I get the trade details I will remember those and",
    "start": "2376650",
    "end": "2383460"
  },
  {
    "text": "when I get the credit assessment result I will remember that and then I had this way of checking",
    "start": "2383460",
    "end": "2389520"
  },
  {
    "text": "whether I have received these statuses and trade details and I can use that to",
    "start": "2389520",
    "end": "2396120"
  },
  {
    "text": "complete the process now this saga is said it's triggered by",
    "start": "2396120",
    "end": "2401340"
  },
  {
    "text": "incoming messages so I have to I have to handle all the different kinds of",
    "start": "2401340",
    "end": "2407700"
  },
  {
    "text": "messages that can trigger transitions in my state machine in this case I use this special I am initiated by interface",
    "start": "2407700",
    "end": "2416220"
  },
  {
    "text": "which is actually just a derivation of I handle messages that adds some extra semantics because because it allows it",
    "start": "2416220",
    "end": "2426780"
  },
  {
    "text": "allows rebus to create a new saga if an existing one cannot be found for this incoming message so this way my saga",
    "start": "2426780",
    "end": "2434460"
  },
  {
    "text": "process here can actually be initiated both by this event but it can also be initiated by the trade confirm and trade",
    "start": "2434460",
    "end": "2441600"
  },
  {
    "text": "rejected events and I'm doing that because if this new trade recorded event",
    "start": "2441600",
    "end": "2448380"
  },
  {
    "text": "somehow fails while being handled in billing it will move to the era queue",
    "start": "2448380",
    "end": "2454230"
  },
  {
    "text": "and then the chances are that I will receive the trade confirmed before I received a new trade recorded or can",
    "start": "2454230",
    "end": "2461970"
  },
  {
    "text": "process the new trade recorded successfully in billing so this way I can make my system robust towards the",
    "start": "2461970",
    "end": "2469800"
  },
  {
    "text": "order of the messages yeah in here in",
    "start": "2469800",
    "end": "2477210"
  },
  {
    "text": "the saga I have to specify which fields should be correlated so for each incoming message I can point",
    "start": "2477210",
    "end": "2483120"
  },
  {
    "text": "out a field in the message and tell it that it should correlate that with a",
    "start": "2483120",
    "end": "2489690"
  },
  {
    "text": "field in the saga data so this saga instance if there if an incoming new",
    "start": "2489690",
    "end": "2496290"
  },
  {
    "text": "trade record event if there exists a saga instance with the traded ID that matches the trade ID of the incoming",
    "start": "2496290",
    "end": "2502320"
  },
  {
    "text": "message then that instance will be loaded and will be available to me otherwise since I used",
    "start": "2502320",
    "end": "2508400"
  },
  {
    "text": "this I am initiated by it will create a new instance of the saga for these events yeah I'm just going to run over",
    "start": "2508400",
    "end": "2517190"
  },
  {
    "text": "this code really quickly yeah the the code will be available afterwards and github so you can check it out later on",
    "start": "2517190",
    "end": "2524420"
  },
  {
    "text": "if you if you're curious since I handled this new trade record it and trade",
    "start": "2524420",
    "end": "2530599"
  },
  {
    "text": "confirmed and trade rejected events in the same way I have to possibly schedule",
    "start": "2530599",
    "end": "2537170"
  },
  {
    "text": "verification in all of them so that's the way I handled all of these in this",
    "start": "2537170",
    "end": "2542690"
  },
  {
    "text": "method I can ask whether the saga is new if it's new then I can use this defer",
    "start": "2542690",
    "end": "2548569"
  },
  {
    "text": "API in rebus to send a message into the future so I can send this verify",
    "start": "2548569",
    "end": "2555470"
  },
  {
    "text": "complete message ten seconds into the future so underneath the covers this will it will say lies this one into a",
    "start": "2555470",
    "end": "2562190"
  },
  {
    "text": "timeout request send it to the timeout manager which will wait for 10 seconds and then it will return it in a timeout",
    "start": "2562190",
    "end": "2567410"
  },
  {
    "text": "reply and then we will unpack this verify complete message and it will attempt to dispatch it to the saga the",
    "start": "2567410",
    "end": "2574819"
  },
  {
    "text": "way that I've specified here so this way if the saga has not been completed when",
    "start": "2574819",
    "end": "2580460"
  },
  {
    "text": "this message arrives then we can write out some information to the console or",
    "start": "2580460",
    "end": "2585589"
  },
  {
    "text": "send an email or whatever we want so yeah I'm just going to try and run this",
    "start": "2585589",
    "end": "2590690"
  },
  {
    "text": "one and then we'll see if it if it works so now I actually want to make this one",
    "start": "2590690",
    "end": "2597619"
  },
  {
    "text": "fail because then you can see the the timeout being triggered so I have the",
    "start": "2597619",
    "end": "2604430"
  },
  {
    "text": "confirmation and the expiration service and then let's do some trading and it's",
    "start": "2604430",
    "end": "2612319"
  },
  {
    "text": "checking the creditors and it's completed let's try again and now it",
    "start": "2612319",
    "end": "2617509"
  },
  {
    "text": "failed so the message is moved to the error cue so the process has stopped and then within ten seconds the process should be",
    "start": "2617509",
    "end": "2625430"
  },
  {
    "text": "woken up by the time I reply and then we can do whatever we want send an email or",
    "start": "2625430",
    "end": "2630579"
  },
  {
    "text": "warn an administrator or whatever it makes sense to do so this way we can",
    "start": "2630579",
    "end": "2636049"
  },
  {
    "text": "make sure that these even though messages might fail and might end up in our cues along the way and and these",
    "start": "2636049",
    "end": "2642650"
  },
  {
    "text": "processes might halt then we can resume the process and take alternative action yeah I hope that makes sense you can",
    "start": "2642650",
    "end": "2650900"
  },
  {
    "text": "check out the code if it if it looked weird yes so to sum it up I think that",
    "start": "2650900",
    "end": "2662000"
  },
  {
    "text": "the messaging provides a model that that they really can help you include the",
    "start": "2662000",
    "end": "2667309"
  },
  {
    "text": "pieces together when you break down this system into bounded contexts which is appears to be a recurring theme that has",
    "start": "2667309",
    "end": "2673520"
  },
  {
    "text": "been discussed all day on the architectures track moreover it can help you overcome glitches when you when",
    "start": "2673520",
    "end": "2681950"
  },
  {
    "text": "you're integrating with stuff that is not as available as you are and you can avoid other parties availability",
    "start": "2681950",
    "end": "2689750"
  },
  {
    "text": "problems being imposed on you so that's pretty nice and moreover it can be used",
    "start": "2689750",
    "end": "2695359"
  },
  {
    "text": "to make these these kind of processes that occur in these messaging based",
    "start": "2695359",
    "end": "2700640"
  },
  {
    "text": "systems make them explicit and they create a model that models one specific",
    "start": "2700640",
    "end": "2706790"
  },
  {
    "text": "process in a very tight and explicit way which I think it's really neat so I hope",
    "start": "2706790",
    "end": "2715250"
  },
  {
    "text": "you agree with me yeah and now I'm going to finish it this off really quickly and",
    "start": "2715250",
    "end": "2721190"
  },
  {
    "text": "as I mentioned rebus is not really tied to a mission MQ as such it can do a mess",
    "start": "2721190",
    "end": "2726470"
  },
  {
    "text": "MQ out of the box but it also happily uses rabbitmq and SEO service bus as a",
    "start": "2726470",
    "end": "2732829"
  },
  {
    "text": "transport layer they both support the same transactional guarantees so that if",
    "start": "2732829",
    "end": "2738230"
  },
  {
    "text": "a message fails it can be rolled back to the source queue and stuff like that and when you send many messages they will",
    "start": "2738230",
    "end": "2744859"
  },
  {
    "text": "either be sent all of them atomically or not so it has the same transactional",
    "start": "2744859",
    "end": "2750230"
  },
  {
    "text": "properties when you're using rabbitmq and SEO service bus as well and it can use sequel server as a transport so if",
    "start": "2750230",
    "end": "2756470"
  },
  {
    "text": "all you have in the world is it's a sequel server then you can still do this messaging thing then it can install",
    "start": "2756470",
    "end": "2763760"
  },
  {
    "text": "subscriptions and sagas in sequel server and rave in DB and MongoDB using a document database to store Sarah is",
    "start": "2763760",
    "end": "2771490"
  },
  {
    "text": "really obvious choice because the saga is just a document then you can use",
    "start": "2771490",
    "end": "2777310"
  },
  {
    "text": "these icy containers to activate handlers and use different kind of logging frameworks it can send messages",
    "start": "2777310",
    "end": "2782590"
  },
  {
    "text": "in patches so you can optimize certain stuff about the overhead so even though",
    "start": "2782590",
    "end": "2789040"
  },
  {
    "text": "you have small messages in your code you can avoid the overhead of sending many small messages then it can it can do",
    "start": "2789040",
    "end": "2795100"
  },
  {
    "text": "handle pipeline reordering so if you have multiple handlers that handle the same messages and you can tell rivers to",
    "start": "2795100",
    "end": "2801760"
  },
  {
    "text": "invoke one specific handler first so you can use that to for example do some kind",
    "start": "2801760",
    "end": "2806890"
  },
  {
    "text": "of authorization of incoming messages and then you can do polymorphic dispatch",
    "start": "2806890",
    "end": "2812619"
  },
  {
    "text": "which is a way that you can for example make an I handle messages of object and",
    "start": "2812619",
    "end": "2818619"
  },
  {
    "text": "then it will receive all messages so you can use inheritance and interfaces on messages and then use those interfaces",
    "start": "2818619",
    "end": "2826570"
  },
  {
    "text": "in your handlers then it can encrypt message buddies this is not the NSA",
    "start": "2826570",
    "end": "2833680"
  },
  {
    "text": "great encryption this is more meant for I mean if you want to send messages around in organization with payroll",
    "start": "2833680",
    "end": "2840070"
  },
  {
    "text": "information or some kind of a little bit sensitive information then you can just",
    "start": "2840070",
    "end": "2846730"
  },
  {
    "text": "tell rebus to encrypt the message buddy and then it will not be immediately visible in your queues what is in the",
    "start": "2846730",
    "end": "2853570"
  },
  {
    "text": "message and they can compress message buddies so you can send pretty big messages and yeah maybe I will call",
    "start": "2853570",
    "end": "2860530"
  },
  {
    "text": "rebus a100 at some point I don't know one of the contributors Eska is right",
    "start": "2860530",
    "end": "2866770"
  },
  {
    "text": "now working on having this central monitoring service for rebus that you can start off somewhere and then build",
    "start": "2866770",
    "end": "2873520"
  },
  {
    "text": "into the central monitoring thing there is a web endpoint that will show you all the rivers endpoints that you are",
    "start": "2873520",
    "end": "2879220"
  },
  {
    "text": "currently running and all the rivers endpoints will periodically send a",
    "start": "2879220",
    "end": "2884350"
  },
  {
    "text": "heartbeat to this central service so you can get a really good overview of what is running so when you have if you have",
    "start": "2884350",
    "end": "2891910"
  },
  {
    "text": "lots of endpoints then that's pretty neat then rebus actually already has a",
    "start": "2891910",
    "end": "2897910"
  },
  {
    "text": "HT and HTTP gateway which is provides a way to send messages",
    "start": "2897910",
    "end": "2904820"
  },
  {
    "text": "from one location to another over the internet for example so you can fairly easily proxy this one with an HTTP proxy",
    "start": "2904820",
    "end": "2913010"
  },
  {
    "text": "or something like that so you can make sure that the messages are securely transferred but this allows rivers to",
    "start": "2913010",
    "end": "2920210"
  },
  {
    "text": "cross boundaries where MSM queue for example would not work and then it could",
    "start": "2920210",
    "end": "2926960"
  },
  {
    "text": "be interesting to add some additional transports but right now it seems like no one has really asked for for more",
    "start": "2926960",
    "end": "2933680"
  },
  {
    "text": "than MSM queue and RabbitMQ and SEO service bus so maybe there will be additional transports in the future and",
    "start": "2933680",
    "end": "2941270"
  },
  {
    "text": "then since MSM q doesn't do competing consumers well it would make sense",
    "start": "2941270",
    "end": "2946910"
  },
  {
    "text": "perhaps to create some kind of distributor process that will load balance your MSM q3 percent points but",
    "start": "2946910",
    "end": "2953930"
  },
  {
    "text": "the SEO service bus and RabbitMQ don't need that so if you want to scale your",
    "start": "2953930",
    "end": "2958960"
  },
  {
    "text": "message processing you can just use web lmq and have multiple multiple endpoints",
    "start": "2958960",
    "end": "2964210"
  },
  {
    "text": "checking out with one queue if I've said something that the sounded that sounded",
    "start": "2964210",
    "end": "2970550"
  },
  {
    "text": "cool it probably came from one of these books which I really encourage you to read if you haven't done it already and",
    "start": "2970550",
    "end": "2976510"
  },
  {
    "text": "then I also yeah you could also read",
    "start": "2976510",
    "end": "2981640"
  },
  {
    "text": "what they would either Han and quick Young at the north and some other people",
    "start": "2981640",
    "end": "2986720"
  },
  {
    "text": "are writing they're doing some really cool stuff with these things which the",
    "start": "2986720",
    "end": "2992630"
  },
  {
    "text": "Han is the guy who created this service bus project whose ideas are still so",
    "start": "2992630",
    "end": "2999250"
  },
  {
    "text": "yeah and yeah thank you for listening",
    "start": "2999250",
    "end": "3007050"
  }
]