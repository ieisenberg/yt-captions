[
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "all right thank you all for coming I'm really glad that you chose my session today as was said I'm going to be",
    "start": "12789",
    "end": "18710"
  },
  {
    "text": "talking about how to secure api's and micro services using OAuth and open ID connect a little bit about myself",
    "start": "18710",
    "end": "25130"
  },
  {
    "text": "I'm identity specialist I've been working with OAuth and API security for",
    "start": "25130",
    "end": "30439"
  },
  {
    "text": "10 years I've been working prior to OAuth with previous protocols that were",
    "start": "30439",
    "end": "36020"
  },
  {
    "text": "used to do similar sorts of things so I have a pretty extensive background in this area and today what I want to talk",
    "start": "36020",
    "end": "42289"
  },
  {
    "text": "to you about is how to apply it to the API space which is pretty interesting we",
    "start": "42289",
    "end": "48110"
  },
  {
    "text": "talk a lot about this at Nordic api's which curity the company that I work for is in charge of organizing and hosting",
    "start": "48110",
    "end": "53920"
  },
  {
    "text": "we have various events where we talk about micro services and all aspects whether its design or business models or",
    "start": "53920",
    "end": "62120"
  },
  {
    "text": "other things of that sort in addition to security so if you're interested in that",
    "start": "62120",
    "end": "67550"
  },
  {
    "text": "a lot of the information that I'll be going through is provided in ebooks and",
    "start": "67550",
    "end": "73150"
  },
  {
    "text": "YouTube videos and other things if you want to take it a little slower or or go back and review those so you can find a",
    "start": "73150",
    "end": "78920"
  },
  {
    "text": "lot of that at Nordic api's and also for those of you don't know curity as a identity software company we provide an",
    "start": "78920",
    "end": "85610"
  },
  {
    "text": "OAuth server and an open ID connect server so we've implemented these protocols and understand in the very",
    "start": "85610",
    "end": "91040"
  },
  {
    "text": "very deep detail exactly how all of these work so without any more ado what",
    "start": "91040",
    "end": "97549"
  },
  {
    "text": "I would like to talk about is first of all some both basics so that we can understand how it works in general and",
    "start": "97549",
    "end": "104479"
  },
  {
    "text": "then begin applying it to a use case like micro services so if you do have",
    "start": "104479",
    "end": "109490"
  },
  {
    "text": "questions as I go through any of this please do jot them down if you don't have access to the app or something feel",
    "start": "109490",
    "end": "116390"
  },
  {
    "text": "free to grab me afterward we'll be at the the move now here also so you can find me there if you do have questions",
    "start": "116390",
    "end": "121939"
  },
  {
    "text": "because it does often spark a lot of thoughts there so please feel free at",
    "start": "121939",
    "end": "127430"
  },
  {
    "text": "the end or later on the basics what you need to know is that Olaf is a sort of",
    "start": "127430",
    "end": "132860"
  },
  {
    "text": "protocol of protocols it's a meta framework or a basis on which other protocols are",
    "start": "132860",
    "end": "139790"
  },
  {
    "text": "built and that's really the intention it's a predecessor of something called OAuth 1 0 no one ever uses that or talks",
    "start": "139790",
    "end": "147740"
  },
  {
    "text": "about that anymore and really it's a lot too or nothing so when I'm saying a lot",
    "start": "147740",
    "end": "153710"
  },
  {
    "text": "be aware that that's what I mean is version 2 the framework itself is used",
    "start": "153710",
    "end": "159830"
  },
  {
    "text": "by many other related standards some of which we'll talk about today like open ID connect and using that as the sort of",
    "start": "159830",
    "end": "166340"
  },
  {
    "text": "basis and how you you do that is the protocol will define or will define many",
    "start": "166340",
    "end": "172640"
  },
  {
    "text": "things like can be done or should be done or may be done whereas these other protocols will say you know they must be",
    "start": "172640",
    "end": "179660"
  },
  {
    "text": "done or they they have to be done so making them mandatory in different cases and besides open ID connect examples of",
    "start": "179660",
    "end": "188080"
  },
  {
    "text": "protocols that do that are uma Hart which is a sort of profile of Roth",
    "start": "188080",
    "end": "194690"
  },
  {
    "text": "for the health sector and the important thing that OAuth is doing is addressing some some use cases related to not",
    "start": "194690",
    "end": "202970"
  },
  {
    "text": "sharing your password with the application that you're you're delegating to so delegated access is one",
    "start": "202970",
    "end": "209330"
  },
  {
    "text": "of the primary use cases of both the reduction of password sharing is another",
    "start": "209330",
    "end": "215060"
  },
  {
    "text": "and thirdly is the relocation of access so that if I want to disallow a certain",
    "start": "215060",
    "end": "222380"
  },
  {
    "text": "application to access my resources I don't have to revoke all access to all",
    "start": "222380",
    "end": "227450"
  },
  {
    "text": "applications so in the bad old days when we would give our password out to all",
    "start": "227450",
    "end": "232700"
  },
  {
    "text": "sorts of different client applications the only way to revoke access was to reset my password which would revoke all",
    "start": "232700",
    "end": "238190"
  },
  {
    "text": "access to all apps so now using OAuth we have a more fine-grained way of revoking",
    "start": "238190",
    "end": "244100"
  },
  {
    "text": "access in a lot there are various actors",
    "start": "244100",
    "end": "249200"
  },
  {
    "text": "you can see them here so we have a resource owner a resource owner is a user the standard doesn't talk about a",
    "start": "249200",
    "end": "257180"
  },
  {
    "text": "user per se because the resource owner could also be an organization it could be some other sort of entity but",
    "start": "257180",
    "end": "264350"
  },
  {
    "text": "typically it is an end user and then there's a client and the client",
    "start": "264350",
    "end": "269659"
  },
  {
    "text": "the application and so this could be a web app it could be a mobile app and then there's the authorization server",
    "start": "269659",
    "end": "275899"
  },
  {
    "text": "this is the security token service or the entity that is in charge of issuing tokens and figuring out who the end-user",
    "start": "275899",
    "end": "283039"
  },
  {
    "text": "is and then there's the resource server the one that's actually serving up that resource so that's the API or the micro",
    "start": "283039",
    "end": "289520"
  },
  {
    "text": "service and the flow in general works like this where the client application",
    "start": "289520",
    "end": "295339"
  },
  {
    "text": "will get a token and then call an API to use a token so the basic float to the",
    "start": "295339",
    "end": "304639"
  },
  {
    "text": "end user looks like this where we request access and that requesting access can be done in all sorts of",
    "start": "304639",
    "end": "310550"
  },
  {
    "text": "different ways it could be automatic because you always need to authenticate so if you tried to come to a protected",
    "start": "310550",
    "end": "317569"
  },
  {
    "text": "resource it would just initially you over and get you logged in and authorizing that application it could be",
    "start": "317569",
    "end": "324559"
  },
  {
    "text": "something like click here to login click here to start click here to sign up things like that so requesting access",
    "start": "324559",
    "end": "331069"
  },
  {
    "text": "could look different in different cases afterward you'll see some sort of login",
    "start": "331069",
    "end": "336199"
  },
  {
    "text": "screen typically login could be done anonymously so this is also optional but",
    "start": "336199",
    "end": "341749"
  },
  {
    "text": "login will typically show some sort of interactive user dialog and that could",
    "start": "341749",
    "end": "347240"
  },
  {
    "text": "collect any kind of credential that you want of course there's the ubiquitous username password but this could be",
    "start": "347240",
    "end": "353419"
  },
  {
    "text": "other things like a an M ID or bank ID or SMS two-factor authentication the",
    "start": "353419",
    "end": "360529"
  },
  {
    "text": "OAuth spec itself doesn't make requirements on this just says in certain cases the user must be",
    "start": "360529",
    "end": "365779"
  },
  {
    "text": "authenticated to a sufficient degree and then the last thing that the user may see is a consent screen and this is an",
    "start": "365779",
    "end": "372740"
  },
  {
    "text": "interactive prompt asking the user do you want to allow the application or the client to access resources on your",
    "start": "372740",
    "end": "379610"
  },
  {
    "text": "behalf and so this consent screen will sometimes be implicit and not shown that",
    "start": "379610",
    "end": "384649"
  },
  {
    "text": "could be the case when you consented when you sign an employment agreement or opened an account at the bank or when",
    "start": "384649",
    "end": "392149"
  },
  {
    "text": "you became or when you downloaded the software it was in the software license agreement perhaps the consent isn't",
    "start": "392149",
    "end": "397759"
  },
  {
    "text": "required to be shown but very often it is when the application is provide",
    "start": "397759",
    "end": "403250"
  },
  {
    "text": "by one company and the authorization server is provided by another company so",
    "start": "403250",
    "end": "411410"
  },
  {
    "text": "there's a lot of flows in Waffen even more to find an open ID connect I'm not gonna go into all of them today we have",
    "start": "411410",
    "end": "417830"
  },
  {
    "text": "a workshop on Thursday where we'll actually delve into almost all of the flows actually so you can have that to",
    "start": "417830",
    "end": "425210"
  },
  {
    "text": "look forward to but at least for this morning what we're going to talk about is a very popular flow called the code",
    "start": "425210",
    "end": "430400"
  },
  {
    "text": "flow and the way that this works is that the application will start by requesting",
    "start": "430400",
    "end": "436190"
  },
  {
    "text": "the user to be authenticated and authorized that application to consume",
    "start": "436190",
    "end": "441790"
  },
  {
    "text": "resources on behalf of that user so the user will be redirected from the",
    "start": "441790",
    "end": "447470"
  },
  {
    "text": "application to the OAuth server the Ola server will authenticate the user like I",
    "start": "447470",
    "end": "455150"
  },
  {
    "text": "said in that previous slide and then after that the consent could take place and then what comes back to the",
    "start": "455150",
    "end": "462590"
  },
  {
    "text": "application is a short-lived authorization code this authorization code signifies that the end user has",
    "start": "462590",
    "end": "469580"
  },
  {
    "text": "authenticated and has consented to the application accessing resources on",
    "start": "469580",
    "end": "475040"
  },
  {
    "text": "behalf of that user this authorization code is called a nonce or and no more",
    "start": "475040",
    "end": "480470"
  },
  {
    "text": "than once so this short-lived authorization code can only be used one time and it can",
    "start": "480470",
    "end": "486290"
  },
  {
    "text": "only be used one time at the authorization server within a very short amount of time usually about thirty seconds or so and",
    "start": "486290",
    "end": "493060"
  },
  {
    "text": "it takes that authorization code and sends it to the OAuth server and it",
    "start": "493060",
    "end": "499669"
  },
  {
    "text": "sends it to the OAuth server through a back-channel communication so the initial request is happening through the",
    "start": "499669",
    "end": "505160"
  },
  {
    "text": "front channel in the users browser or user agent and then this step of the",
    "start": "505160",
    "end": "511820"
  },
  {
    "text": "flow is happening directly from the client application to the server and because it's back-channel we can also",
    "start": "511820",
    "end": "518690"
  },
  {
    "text": "authenticate the client so the client can prove who it is through different means maybe a client ID and a secret or",
    "start": "518690",
    "end": "525500"
  },
  {
    "text": "maybe a an x.509 certificate and a key that it has access to there's different",
    "start": "525500",
    "end": "530690"
  },
  {
    "text": "ways of doing this but the client is at this point able to authenticate which is important",
    "start": "530690",
    "end": "536170"
  },
  {
    "text": "if it does then the client will be given an access token and in the code flow in",
    "start": "536170",
    "end": "543220"
  },
  {
    "text": "addition to an access token you could be given a refresh token I'll explain what",
    "start": "543220",
    "end": "548529"
  },
  {
    "text": "those is what those are shortly so once it has the access token it can call",
    "start": "548529",
    "end": "553750"
  },
  {
    "text": "those back-end API so micro-services okay does that make sense if not jot down a question and we'll get",
    "start": "553750",
    "end": "560980"
  },
  {
    "text": "to it at the end in O auth actually",
    "start": "560980",
    "end": "566410"
  },
  {
    "text": "since or two even there is such a thing called scope or scopes and this this",
    "start": "566410",
    "end": "573940"
  },
  {
    "text": "creates a lot of confusion so I want to explain what this is and during that code flow you can say I",
    "start": "573940",
    "end": "579279"
  },
  {
    "text": "want a certain scope of access I want to have access to a certain number of",
    "start": "579279",
    "end": "585610"
  },
  {
    "text": "resources or a realm of resources and so those scopes are a sort of grouping of",
    "start": "585610",
    "end": "591760"
  },
  {
    "text": "claims and those claims can be used by the API for permissioning purposes so it",
    "start": "591760",
    "end": "596860"
  },
  {
    "text": "can in the API decide if you're allowed to call this API based on information",
    "start": "596860",
    "end": "602079"
  },
  {
    "text": "about the end user that is obtained and so that the application doesn't have to ask for lots and lots of scope or claims",
    "start": "602079",
    "end": "610240"
  },
  {
    "text": "it can ask for instead of scope which is a grouping of those claims very often you'll see it presented in something",
    "start": "610240",
    "end": "616899"
  },
  {
    "text": "like this hopefully not so egregious but they are reflected on the consent screen",
    "start": "616899",
    "end": "622420"
  },
  {
    "text": "because this is what the the user data is that the resource owner is release releasing and so in oh uh there are no",
    "start": "622420",
    "end": "630250"
  },
  {
    "text": "standardized scopes so you can invent your own so very often people will map the scopes into like their product",
    "start": "630250",
    "end": "636699"
  },
  {
    "text": "repair product portfolio but there's other ways to do it as well open ID",
    "start": "636699",
    "end": "641920"
  },
  {
    "text": "Connect does define a few scopes that are standard and and we'll look at some",
    "start": "641920",
    "end": "647680"
  },
  {
    "text": "of those during the the demo actually as",
    "start": "647680",
    "end": "652930"
  },
  {
    "text": "I mentioned there are different kinds of tokens we have access tokens and refresh tokens an access token is meant to be",
    "start": "652930",
    "end": "660790"
  },
  {
    "text": "sent to the API or the micro service the Refresh token is meant to be sent to the",
    "start": "660790",
    "end": "666130"
  },
  {
    "text": "OAuth server and it was sent to the OAuth server you order to extend the lifetime of access",
    "start": "666130",
    "end": "673150"
  },
  {
    "text": "to the resources so when the user authenticates and authorizes that access",
    "start": "673150",
    "end": "679180"
  },
  {
    "text": "token this issue typically lives for a short amount of time maybe 30 minutes 60 minutes not much more than that but you",
    "start": "679180",
    "end": "686740"
  },
  {
    "text": "don't want to keep asking user to login so frequently and so if you trust that application if that application was able",
    "start": "686740",
    "end": "693160"
  },
  {
    "text": "to prove its identity by authenticating you may also give it a refresh token so",
    "start": "693160",
    "end": "698320"
  },
  {
    "text": "that the client application can call to the OAuth server and present that and get back a new access token and in",
    "start": "698320",
    "end": "705430"
  },
  {
    "text": "effect then what's happening is the Refresh token is sort of like a password that you used a jump start a session",
    "start": "705430",
    "end": "711970"
  },
  {
    "text": "with a website so you don't have to ask with every HTTP request like prove who",
    "start": "711970",
    "end": "718150"
  },
  {
    "text": "you are although you can of course do that in basic authentication usually you start with a password you get a session",
    "start": "718150",
    "end": "724630"
  },
  {
    "text": "and you keep using that over and over again that's analogous to a refresh token whereas the access to a move be",
    "start": "724630",
    "end": "730690"
  },
  {
    "text": "more like that session that you have with that web server after bootstrapped it so I hope that analogy helps to",
    "start": "730690",
    "end": "738430"
  },
  {
    "text": "understand those two if not then jot down a question there are different profiles of tokens there are bear tokens",
    "start": "738430",
    "end": "746140"
  },
  {
    "text": "and then what's called a holder of key tokens to help understand this you could think of bear tokens like cash cash as a",
    "start": "746140",
    "end": "752500"
  },
  {
    "text": "bearer bond like the one who bears the note is the one who's able to use it the",
    "start": "752500",
    "end": "758800"
  },
  {
    "text": "one who gets the $10,000 bear bound in the in the spy movies or the bank heist",
    "start": "758800",
    "end": "765790"
  },
  {
    "text": "movies they can go and spend those because they bared them they carry them so bear tokens are a same sort of thing",
    "start": "765790",
    "end": "772900"
  },
  {
    "text": "if you have it you can use it so if I find some hundred Danish kroner out here",
    "start": "772900",
    "end": "778030"
  },
  {
    "text": "on the street I can go and buy a cafe coffee and the briefs is not going to ask me like did you find this on the",
    "start": "778030",
    "end": "783490"
  },
  {
    "text": "street who's going to give me a coffee alternatively there's something called holder of key tokens and this profile of",
    "start": "783490",
    "end": "790390"
  },
  {
    "text": "tokens is meant to lock down the presenter of the token to make sure that",
    "start": "790390",
    "end": "796390"
  },
  {
    "text": "it's the same entity or the same thing to whom that token was issued and this",
    "start": "796390",
    "end": "801490"
  },
  {
    "text": "is analogous to more like a credit card so if I find your credit card out on the street doesn't leave and I go to the",
    "start": "801490",
    "end": "808199"
  },
  {
    "text": "cafe and try to buy a coffee the baristas gonna ask me for my driver's license or ID card and know that hey",
    "start": "808199",
    "end": "814499"
  },
  {
    "text": "this credit card isn't the same isn't being presented by the same person to whom it was issued so I can't give you",
    "start": "814499",
    "end": "820769"
  },
  {
    "text": "this coffee so we can do that same sort of thing with tokens and the reason",
    "start": "820769",
    "end": "825809"
  },
  {
    "text": "being that we want to have more assurance that the entity we're talking to from our api's is really the one we",
    "start": "825809",
    "end": "833309"
  },
  {
    "text": "think it is there are different types of",
    "start": "833309",
    "end": "838439"
  },
  {
    "text": "tokens so Oh what doesn't define any certain type that must be used we",
    "start": "838439",
    "end": "843899"
  },
  {
    "text": "commonly hear about some of them but the ooit standard itself does not say any",
    "start": "843899",
    "end": "850290"
  },
  {
    "text": "certain kind of token that must be used so we can use legacy sort of tokens like",
    "start": "850290",
    "end": "856050"
  },
  {
    "text": "double yes security and sam'l tokens we can also have custom ones like just a",
    "start": "856050",
    "end": "861360"
  },
  {
    "text": "gooood like a unique identifier or some other homegrown kind of token format we",
    "start": "861360",
    "end": "868920"
  },
  {
    "text": "could also use stuff from back in the day like access managers and and that's",
    "start": "868920",
    "end": "874649"
  },
  {
    "text": "actually quite helpful for like migration so be aware that you can do that so that you can issue a right kind",
    "start": "874649",
    "end": "881370"
  },
  {
    "text": "of token that might simplify a mapping to a legacy system we can also use",
    "start": "881370",
    "end": "886559"
  },
  {
    "text": "something called seaboard web tokens or or caught CWT and of course you can use",
    "start": "886559",
    "end": "892769"
  },
  {
    "text": "a JSON web token which are very popular in the news a JSON web token pronounced",
    "start": "892769",
    "end": "900569"
  },
  {
    "text": "jok like English were to write something down quickly our lightweight tokens that are meant to be passed in HTTP headers",
    "start": "900569",
    "end": "906600"
  },
  {
    "text": "and query strings they're really meant to be used in mobile environments and constrained environments not as",
    "start": "906600",
    "end": "912329"
  },
  {
    "text": "constrained as you would use like a sea bore web token but still more constrained than something where you",
    "start": "912329",
    "end": "917910"
  },
  {
    "text": "would be using a an XML parser and sam'l tokens and things the encoding being",
    "start": "917910",
    "end": "923129"
  },
  {
    "text": "done with Jason makes them inherently more secure than XML in my opinion because you're not having to do things",
    "start": "923129",
    "end": "931019"
  },
  {
    "text": "like normalization there's no entity expansion so not only by using adjacent encoding",
    "start": "931019",
    "end": "939040"
  },
  {
    "text": "are you more secure but you also have a lower tech barrier you can find Jason and coders in every programming language",
    "start": "939040",
    "end": "945970"
  },
  {
    "text": "worse you wouldn't find that and an alternative formats even even Seymour but definitely XML so they're very",
    "start": "945970",
    "end": "953439"
  },
  {
    "text": "compact you can it's important to realize that you can encrypt them you can sign them and you can do neither so",
    "start": "953439",
    "end": "960100"
  },
  {
    "text": "the dots if you ever work jaws that you've heard about it was signed I thought it was signed by some sort of private key but you can also encrypt",
    "start": "960100",
    "end": "967569"
  },
  {
    "text": "them and you would encrypt them with a public key of the API so that only that certain API could decrypt it and you can",
    "start": "967569",
    "end": "975790"
  },
  {
    "text": "do neither if you want to and there are use cases for that so they're not the",
    "start": "975790",
    "end": "982209"
  },
  {
    "text": "only kind of tokens I hope you got that that you can use with OAuth in certain",
    "start": "982209",
    "end": "987550"
  },
  {
    "text": "cases with the Open ID connect you have to use jobs but with OAuth in particular and API security you have those options",
    "start": "987550",
    "end": "996149"
  },
  {
    "text": "other options that you have are the ways that you pass tokens so you can pass tokens by value and you can pass them by",
    "start": "996149",
    "end": "1003269"
  },
  {
    "text": "reference I assume that from the the naming of that as programmers you automatically",
    "start": "1003269",
    "end": "1009480"
  },
  {
    "text": "get it but let me explain if not so if you pass a token by value what I mean by",
    "start": "1009480",
    "end": "1016139"
  },
  {
    "text": "that is all of the identity data that represents that end user is in the token",
    "start": "1016139",
    "end": "1021449"
  },
  {
    "text": "itself so a JSON web token be an example I have my first you know I have my last",
    "start": "1021449",
    "end": "1026610"
  },
  {
    "text": "name I have my shoe size right there in the token whereas a by reference token is a handle token or an opaque gooood",
    "start": "1026610",
    "end": "1033839"
  },
  {
    "text": "that refers to the actual data and so if you want to get the shoe size with the hair color or the first name you have to",
    "start": "1033839",
    "end": "1040620"
  },
  {
    "text": "dereference it just like you would in program you call a function it's a point or you dereference that pointer now you",
    "start": "1040620",
    "end": "1046350"
  },
  {
    "text": "have access to the data and the way to dereference it is to ask the one who has the identity data and who is that one",
    "start": "1046350",
    "end": "1053100"
  },
  {
    "text": "that's the OAuth server so there's actually a standard API for dereferencing tokens and it's called",
    "start": "1053100",
    "end": "1058440"
  },
  {
    "text": "introspection I'd also like before I get",
    "start": "1058440",
    "end": "1063929"
  },
  {
    "text": "into applying this to micro services use case talk about the proper usages of OAuth and the improper usages",
    "start": "1063929",
    "end": "1070650"
  },
  {
    "text": "so Roth is not an authentication protocol it says in certain cases that",
    "start": "1070650",
    "end": "1078750"
  },
  {
    "text": "the user must authenticate but it doesn't say how it doesn't say to a level of assurance it doesn't say which",
    "start": "1078750",
    "end": "1084510"
  },
  {
    "text": "with what kind of credential anything like that so we can't really say as an",
    "start": "1084510",
    "end": "1089610"
  },
  {
    "text": "authentication protocol there's no challenge and response in exchange to",
    "start": "1089610",
    "end": "1095790"
  },
  {
    "text": "find anything like that it's also not a Federation protocol Federation is",
    "start": "1095790",
    "end": "1100860"
  },
  {
    "text": "figuring out who somebody is in one security domain and reusing the answer to that question in another domain and",
    "start": "1100860",
    "end": "1106040"
  },
  {
    "text": "none of that's defined in OAuth at all and it's not really for authorization which is kind of strange because it's",
    "start": "1106040",
    "end": "1113040"
  },
  {
    "text": "off and it's not for all ten dication or authorization so what's the auth part",
    "start": "1113040",
    "end": "1118410"
  },
  {
    "text": "for it's a misnomer Oh auth is for delegation so to help us understand the",
    "start": "1118410",
    "end": "1125010"
  },
  {
    "text": "distinction especially if English isn't their first language and need to dig into what I",
    "start": "1125010",
    "end": "1133770"
  },
  {
    "text": "mean by authorization versus delegation because even from other both experts I get pushback on this so let me justify",
    "start": "1133770",
    "end": "1140160"
  },
  {
    "text": "that imagine that you are the owner of a business and that you hire an assistant",
    "start": "1140160",
    "end": "1146760"
  },
  {
    "text": "to help you manage the accounts of the business and you saved it that new assistant you can go to the bank you can",
    "start": "1146760",
    "end": "1153360"
  },
  {
    "text": "take out money from the business account and do the work of the business so I don't have to and you do that and then",
    "start": "1153360",
    "end": "1161430"
  },
  {
    "text": "the assistant goes down to the bank and says okay I'd like to withdraw ten thousand anus kronor from the account",
    "start": "1161430",
    "end": "1166590"
  },
  {
    "text": "and the banker is gonna say sorry disallowed you're not able to do that",
    "start": "1166590",
    "end": "1172230"
  },
  {
    "text": "because neither you know the business owner signed the right paperwork or did the right process and procedure for me",
    "start": "1172230",
    "end": "1178620"
  },
  {
    "text": "believe that you were a legitimate assistant able to take those money out of the business account so I as the",
    "start": "1178620",
    "end": "1186600"
  },
  {
    "text": "business owner delegated my rights to have access to the account to the new assistant but the new assistant wasn't",
    "start": "1186600",
    "end": "1194010"
  },
  {
    "text": "authorized because the procedure wasn't followed and so the API all the time the",
    "start": "1194010",
    "end": "1199410"
  },
  {
    "text": "micro Service it's the entity's decision to return the data or not it's not the resource owner by",
    "start": "1199410",
    "end": "1206579"
  },
  {
    "text": "simply consenting and allowing a certain application to access data that is going",
    "start": "1206579",
    "end": "1211859"
  },
  {
    "text": "to finally determine if that data should be returned if the authorization policy",
    "start": "1211859",
    "end": "1217919"
  },
  {
    "text": "is very very simple and that is if the user says it's ok it's ok then sure the",
    "start": "1217919",
    "end": "1223379"
  },
  {
    "text": "delegation looks very much like authorization but they are different things because very often in high",
    "start": "1223379",
    "end": "1230940"
  },
  {
    "text": "security environments like banks or governments or healthcare gambling those",
    "start": "1230940",
    "end": "1236009"
  },
  {
    "text": "sorts of things the authorization policies are very very complicated and so it's important to realize that not",
    "start": "1236009",
    "end": "1242820"
  },
  {
    "text": "all of the things necessary to make that authorization decision need to be moved didn't if the OAuth server the api's and",
    "start": "1242820",
    "end": "1250169"
  },
  {
    "text": "the micro services remain in that important role so that's as you think",
    "start": "1250169",
    "end": "1256559"
  },
  {
    "text": "about a micro service based architecture don't think ok I'm gonna have to send everything to the server because that sort of contrary to micro services",
    "start": "1256559",
    "end": "1263459"
  },
  {
    "text": "philosophy right let's talk a little bit about Open ID Connect as well Open ID",
    "start": "1263459",
    "end": "1271739"
  },
  {
    "text": "Connect is used to build the web applications and the mobile applications that are gonna call our micro services",
    "start": "1271739",
    "end": "1277919"
  },
  {
    "text": "an API so it's important to know how hola extends is extended by open I didn't",
    "start": "1277919",
    "end": "1284159"
  },
  {
    "text": "connect because what's happened with OAuth is that the client is the sort of",
    "start": "1284159",
    "end": "1292289"
  },
  {
    "text": "left out of the party the app doesn't get access to any of the user information and very often they",
    "start": "1292289",
    "end": "1298589"
  },
  {
    "text": "front-end will need to know some amount of information about the end-user it will need to know maybe like at least",
    "start": "1298589",
    "end": "1306479"
  },
  {
    "text": "first name to greet the user or something of that nature but all of the",
    "start": "1306479",
    "end": "1311729"
  },
  {
    "text": "identity data is for the API and that's in the access token so open ID Connect defines a standard way of sort of",
    "start": "1311729",
    "end": "1317999"
  },
  {
    "text": "inviting the client application to the party by giving it its own token and that token is what's called an ID token",
    "start": "1317999",
    "end": "1325070"
  },
  {
    "text": "so it's important as you build your micro services to not mix things up so",
    "start": "1325070",
    "end": "1330329"
  },
  {
    "text": "don't like start sending your front-ends ID token your back-end microservices no micro service",
    "start": "1330329",
    "end": "1336670"
  },
  {
    "text": "should ever consume an ID token can write that down it should it should get",
    "start": "1336670",
    "end": "1343630"
  },
  {
    "text": "access to it or it should use an access token the front end should be using an ID token and an ID token defined by open",
    "start": "1343630",
    "end": "1351250"
  },
  {
    "text": "ID connect is a JSON web token and it's signed by the private key of the open ID",
    "start": "1351250",
    "end": "1358420"
  },
  {
    "text": "Connect provider of an ID connect provider is an unfortunate additional word that we get with this specification",
    "start": "1358420",
    "end": "1363820"
  },
  {
    "text": "that means an OAuth server that can do open ID and it's signed by the the key",
    "start": "1363820",
    "end": "1370540"
  },
  {
    "text": "of that open ID Connect provider and so this allows the client application to",
    "start": "1370540",
    "end": "1376150"
  },
  {
    "text": "verify that the identity was indeed issued by that provider in addition to",
    "start": "1376150",
    "end": "1381640"
  },
  {
    "text": "the ID token the other novelties of open ID Connect is that it provides a user information endpoint or user info",
    "start": "1381640",
    "end": "1388480"
  },
  {
    "text": "endpoint and this user info endpoint can be called with an access token and the",
    "start": "1388480",
    "end": "1393640"
  },
  {
    "text": "information that is returned from it is the user data but the resource owner the",
    "start": "1393640",
    "end": "1399040"
  },
  {
    "text": "user consented to allow the application to have access to so on that consent",
    "start": "1399040",
    "end": "1404170"
  },
  {
    "text": "screen if I see email and I see my profile data and I say no access to my",
    "start": "1404170",
    "end": "1409600"
  },
  {
    "text": "profile data the only thing that it's going to have access to when calling user info is the email not my profile so",
    "start": "1409600",
    "end": "1416890"
  },
  {
    "text": "that the consent and the delegation is related to the api's response and this",
    "start": "1416890",
    "end": "1422260"
  },
  {
    "text": "standard user API is provided by their hosted in the OAuth server or the an ID",
    "start": "1422260",
    "end": "1428770"
  },
  {
    "text": "connect server the third novelty of Open ID Connect is that it defines some",
    "start": "1428770",
    "end": "1433900"
  },
  {
    "text": "additional flows and those are for variations of what is called the hybrid",
    "start": "1433900",
    "end": "1439390"
  },
  {
    "text": "flow these are used to create",
    "start": "1439390",
    "end": "1444420"
  },
  {
    "text": "applications that have a single page front end and a back end and the single",
    "start": "1444420",
    "end": "1449650"
  },
  {
    "text": "page application can get an ID token then it can get also an access token and",
    "start": "1449650",
    "end": "1457590"
  },
  {
    "text": "[Music] you know ID token access token or both",
    "start": "1457660",
    "end": "1463260"
  },
  {
    "text": "so depending on what the front-end like JavaScript needs it get that plus the back end like a server",
    "start": "1463260",
    "end": "1471360"
  },
  {
    "text": "component of it will still be able to get an access token a refresh token and",
    "start": "1471360",
    "end": "1476540"
  },
  {
    "text": "an ID token which are distinct and separate from the ones that the front end gets and the last couple novelties I",
    "start": "1476540",
    "end": "1483090"
  },
  {
    "text": "listed up here are request objects and claims and if you want to know about",
    "start": "1483090",
    "end": "1488100"
  },
  {
    "text": "those you can grab me at the booth okay so let's bolt on open ID connect to that",
    "start": "1488100",
    "end": "1495630"
  },
  {
    "text": "code flow we went through before so here I have what's called a relying party another unfortunate additional name that",
    "start": "1495630",
    "end": "1502530"
  },
  {
    "text": "just means an OAuth client and the application or the client will make the",
    "start": "1502530",
    "end": "1508890"
  },
  {
    "text": "request like before with a code flow but this time it will include at least one additional scope and that scope will be",
    "start": "1508890",
    "end": "1515580"
  },
  {
    "text": "open ID and that will we receive by the Open ID Connect provider the OAuth server and when the Ola server sees that",
    "start": "1515580",
    "end": "1523800"
  },
  {
    "text": "scope of open ID it clicks itself into open ID mode so it's very very often",
    "start": "1523800",
    "end": "1531060"
  },
  {
    "text": "that an open ID Connect provider is an OAuth server as well and it can do both",
    "start": "1531060",
    "end": "1536520"
  },
  {
    "text": "of those and this is the way you tell it which of those protocols to follow so",
    "start": "1536520",
    "end": "1543420"
  },
  {
    "text": "then once the server receives that request and the user is authenticated and has delegated its rights to the",
    "start": "1543420",
    "end": "1551370"
  },
  {
    "text": "application that authorization code will be returned again to the to the",
    "start": "1551370",
    "end": "1556410"
  },
  {
    "text": "application the relying party relying party will send that authorization code to the open ID Connect provider at this",
    "start": "1556410",
    "end": "1563610"
  },
  {
    "text": "point authenticating on the back-channel like we talked about before and the results will be an access token and an",
    "start": "1563610",
    "end": "1569400"
  },
  {
    "text": "ID token and maybe even a refresh token so now inside of that ID token it can do",
    "start": "1569400",
    "end": "1577830"
  },
  {
    "text": "some additional checks on it to make sure that it's applicable to that application and if it needs more",
    "start": "1577830",
    "end": "1584820"
  },
  {
    "text": "information about the user it can use that access token to call the user info endpoint and get that and then the user",
    "start": "1584820",
    "end": "1592020"
  },
  {
    "text": "info will be returned okay so the code flow with the open ID scope and using",
    "start": "1592020",
    "end": "1599400"
  },
  {
    "text": "the extra are using the access going to call that extra end point user info so have questions on that just",
    "start": "1599400",
    "end": "1606120"
  },
  {
    "text": "write them down so again ID token is for the client now",
    "start": "1606120",
    "end": "1611879"
  },
  {
    "text": "the client is invited to the party so the access token remains for the API forevermore",
    "start": "1611879",
    "end": "1617250"
  },
  {
    "text": "okay so access token is for the micro service and the API the ID token it",
    "start": "1617250",
    "end": "1624090"
  },
  {
    "text": "provides the client with information about the username shoe size hair color things like that but it also additional",
    "start": "1624090",
    "end": "1631230"
  },
  {
    "text": "metadata who issued the ID token expiration time you can use this to pair sessions for example on the front end",
    "start": "1631230",
    "end": "1637639"
  },
  {
    "text": "and this is a good thing so that the security server is actually stipulating",
    "start": "1637639",
    "end": "1643409"
  },
  {
    "text": "those those sorts of things not required but a good recommendation the user info",
    "start": "1643409",
    "end": "1651029"
  },
  {
    "text": "endpoint you can use it for token issuance you can use it for user discovery you authenticate with the",
    "start": "1651029",
    "end": "1658470"
  },
  {
    "text": "access token like I mentioned and its output depends on the authorized scopes so if if I authorize more you'll get",
    "start": "1658470",
    "end": "1665850"
  },
  {
    "text": "more if I authorize less you'll get less all right download time excuse me all",
    "start": "1665850",
    "end": "1684690"
  },
  {
    "text": "right so here I have a application it's written in Python my favorite language",
    "start": "1684690",
    "end": "1690179"
  },
  {
    "text": "but one that is hard to do security in I feel so I've written this application",
    "start": "1690179",
    "end": "1697470"
  },
  {
    "text": "and it's not going to do any any sign in any any login anything like that it's",
    "start": "1697470",
    "end": "1703289"
  },
  {
    "text": "going to sort of outsource it to the open ID connect server so remember I",
    "start": "1703289",
    "end": "1708330"
  },
  {
    "text": "said in this slides it always starts with like a getting started or sign up or login button so that's this blue one",
    "start": "1708330",
    "end": "1714299"
  },
  {
    "text": "so I click that and I'm teleported over to the Oh vanity connect server",
    "start": "1714299",
    "end": "1720320"
  },
  {
    "text": "coincident makiura t's a while server but never mind and here like I'm already",
    "start": "1720320",
    "end": "1726269"
  },
  {
    "text": "outside of the standard I started the flow and then the OAuth server said ok I",
    "start": "1726269",
    "end": "1731490"
  },
  {
    "text": "need to figure out who the user is and in my setup this client is a able to login with three different login",
    "start": "1731490",
    "end": "1737920"
  },
  {
    "text": "methods I actually have like 30 configured on my server but only three",
    "start": "1737920",
    "end": "1742990"
  },
  {
    "text": "of them can be used for this application so as the end user I might see something",
    "start": "1742990",
    "end": "1748360"
  },
  {
    "text": "different if I'm using a different application I might not see anything here at all just to give you guys an",
    "start": "1748360",
    "end": "1754870"
  },
  {
    "text": "idea so I'll select username and password I'll log in and now after that",
    "start": "1754870",
    "end": "1760360"
  },
  {
    "text": "log in this initial request the authorization request using the code",
    "start": "1760360",
    "end": "1766450"
  },
  {
    "text": "flow finishes up sends it back to the Python application Python application",
    "start": "1766450",
    "end": "1771640"
  },
  {
    "text": "uses that authorization code and calls the token endpoint on my OS server and",
    "start": "1771640",
    "end": "1776770"
  },
  {
    "text": "gets back a few tokens a token that it gets firstly is the ID token so that's",
    "start": "1776770",
    "end": "1785590"
  },
  {
    "text": "that's what you see here in this particular case you're seeing things like who the user is we logged in as",
    "start": "1785590",
    "end": "1792940"
  },
  {
    "text": "John Doe we can see that this token has a purpose of being an ID token you can see the authentication method this",
    "start": "1792940",
    "end": "1800380"
  },
  {
    "text": "authentication class context reference ACR we can see other things like this ID",
    "start": "1800380",
    "end": "1807250"
  },
  {
    "text": "token was issued to a back-end because we did the code flow and other things we",
    "start": "1807250",
    "end": "1814030"
  },
  {
    "text": "also see that we have an access token and we can use that then to call api's and because this application logged in",
    "start": "1814030",
    "end": "1821680"
  },
  {
    "text": "might owe a server trusted it enough to give it a refresh token so now if I use",
    "start": "1821680",
    "end": "1826900"
  },
  {
    "text": "that access token I call the API and a few things that are interesting about this is that I can see who the user is I",
    "start": "1826900",
    "end": "1834720"
  },
  {
    "text": "mean we can see who the user is because we had this ID token our client was invited to the party but here I have the",
    "start": "1834720",
    "end": "1843220"
  },
  {
    "text": "access token how did the access the API turn that into John Doe and how did it",
    "start": "1843220",
    "end": "1849490"
  },
  {
    "text": "know the level of access or the Scopes associated with our token to answer that",
    "start": "1849490",
    "end": "1860170"
  },
  {
    "text": "question we need to talk a little bit about how to make all of this work with micro services",
    "start": "1860170",
    "end": "1867090"
  },
  {
    "text": "so if you have questions on the app and the demo write them down and we'll come",
    "start": "1867870",
    "end": "1873120"
  },
  {
    "text": "back to it at the end also to look at some more things that we can do with it if we have time okay so how did that API",
    "start": "1873120",
    "end": "1882330"
  },
  {
    "text": "figure out that it was John Doe we use something called a phantom token pattern",
    "start": "1882330",
    "end": "1887760"
  },
  {
    "text": "and the phantom token pattern is a privacy-preserving architectural token",
    "start": "1887760",
    "end": "1892799"
  },
  {
    "text": "usage pattern for making sure that we don't give too much information to the",
    "start": "1892799",
    "end": "1898770"
  },
  {
    "text": "front-end and only enough information to the backend api's and micro services",
    "start": "1898770",
    "end": "1905539"
  },
  {
    "text": "this is the pattern I believe that almost all of you should be following when building your micro services if",
    "start": "1905539",
    "end": "1912179"
  },
  {
    "text": "you're not following this pattern I think you have to have a very good justification for doing it so what is",
    "start": "1912179",
    "end": "1918179"
  },
  {
    "text": "that pattern let's talk about the basic approach first of all so initially we said the user is redirected to the OAuth",
    "start": "1918179",
    "end": "1924960"
  },
  {
    "text": "server user logs in and when the user",
    "start": "1924960",
    "end": "1930750"
  },
  {
    "text": "logs in it gets that good access token that you saw in my Python front-end",
    "start": "1930750",
    "end": "1936000"
  },
  {
    "text": "remember and that is completely useless it's a by reference token so we need to",
    "start": "1936000",
    "end": "1942419"
  },
  {
    "text": "dereference it and before I said that the way to dereference a gooood or",
    "start": "1942419",
    "end": "1948210"
  },
  {
    "text": "opaque access token was to call the introspection endpoint so we need to do",
    "start": "1948210",
    "end": "1954210"
  },
  {
    "text": "that because if we call the backend API is with that the API is themselves won't have any user information so they'll",
    "start": "1954210",
    "end": "1961020"
  },
  {
    "text": "have to do the dereferencing so usually what happens is the there's some sort of",
    "start": "1961020",
    "end": "1968549"
  },
  {
    "text": "intermediary in place in front of an API so the API will have some sort of broker",
    "start": "1968549",
    "end": "1975320"
  },
  {
    "text": "could be a bonafide gateway it could be one of the micro services job to",
    "start": "1975320",
    "end": "1981330"
  },
  {
    "text": "actually broker in access it could be other things but some sort of reverse",
    "start": "1981330",
    "end": "1986820"
  },
  {
    "text": "proxy or middleware will be in place almost all the time when accessing API is from an external an external network",
    "start": "1986820",
    "end": "1995130"
  },
  {
    "text": "so now we want to convert that reference token into a by value token",
    "start": "1995130",
    "end": "2001080"
  },
  {
    "text": "the reverse proxies is in an ideal position to help us with this so that every microservice doesn't have to do it",
    "start": "2001080",
    "end": "2006780"
  },
  {
    "text": "so as we call into the reverse proxy we can use introspection to actually switch",
    "start": "2006780",
    "end": "2012420"
  },
  {
    "text": "that by reference token to a by a value token so through the introspection",
    "start": "2012420",
    "end": "2018690"
  },
  {
    "text": "endpoint we can issue a new token or can change the representation to a new",
    "start": "2018690",
    "end": "2024630"
  },
  {
    "text": "format which is a by value format so the response then to the reverse proxy is a",
    "start": "2024630",
    "end": "2029850"
  },
  {
    "text": "full-blown JSON web token and there then it can it can cache that for an amount",
    "start": "2029850",
    "end": "2036720"
  },
  {
    "text": "of time that is specified in the HTTP response to that introspection call and",
    "start": "2036720",
    "end": "2043640"
  },
  {
    "text": "then it can forward the JSON web token so now the micro-service doesn't have to deal with the by reference token it does",
    "start": "2043640",
    "end": "2051780"
  },
  {
    "text": "so it doesn't have to do the conversion itself it can just use the jot access",
    "start": "2051780",
    "end": "2057570"
  },
  {
    "text": "token and this is provided in the HTTP authorization request header so it's all",
    "start": "2057570",
    "end": "2063510"
  },
  {
    "text": "the user data is right there and it can begin to operate on it without having to make any outbound calls to the OAuth",
    "start": "2063510",
    "end": "2071280"
  },
  {
    "text": "server or even a identity repository and",
    "start": "2071280",
    "end": "2076460"
  },
  {
    "text": "so what happens then is on the outside to the application like my Python app",
    "start": "2076460",
    "end": "2081929"
  },
  {
    "text": "all it sees is the gooood and not any user information whereas on the back end a might have lots of user information",
    "start": "2081930",
    "end": "2088500"
  },
  {
    "text": "and that JSON web token could even be extremely huge to big even to provide in",
    "start": "2088500",
    "end": "2094980"
  },
  {
    "text": "an HTTP request header we can use other related standards to actually serialize",
    "start": "2094980",
    "end": "2100290"
  },
  {
    "text": "that token in the request body so size also size constraints also go away with",
    "start": "2100290",
    "end": "2107130"
  },
  {
    "text": "this pattern ok that's phantom token pattern that's how I believe that all of",
    "start": "2107130",
    "end": "2112920"
  },
  {
    "text": "you guys should be integrating auth into your micro services in a nutshell",
    "start": "2112920",
    "end": "2120050"
  },
  {
    "text": "benefits of the phantom token approach you end up with a smaller regulated",
    "start": "2120050",
    "end": "2125430"
  },
  {
    "text": "space so if you're in a regulated industry like gambling or banking or healthcare whatnot the front end client",
    "start": "2125430",
    "end": "2132780"
  },
  {
    "text": "application is not regulated because doesn't have access to any PII personally identifiable information the",
    "start": "2132780",
    "end": "2140150"
  },
  {
    "text": "ID token could include PII or not so I don't have to include like medical",
    "start": "2140150",
    "end": "2146850"
  },
  {
    "text": "record information or social security information in that ID token and if I",
    "start": "2146850",
    "end": "2151860"
  },
  {
    "text": "don't then it's certainly not a regulated space so it's one of the benefits of the phantom token pattern",
    "start": "2151860",
    "end": "2156900"
  },
  {
    "text": "it's also not possible for an attacker to gain access to that identity",
    "start": "2156900",
    "end": "2165360"
  },
  {
    "text": "information by like decrypting the token because the opaque token isn't encrypted",
    "start": "2165360",
    "end": "2171240"
  },
  {
    "text": "it's it's just a handle to the information where the alternative is to",
    "start": "2171240",
    "end": "2176580"
  },
  {
    "text": "use a jwe an encrypted Jason token and if you do this then you are putting the",
    "start": "2176580",
    "end": "2184520"
  },
  {
    "text": "decryption inputs into the hands of the attacker and saying I dare you I dare you to decrypt this and it can happen",
    "start": "2184520",
    "end": "2192170"
  },
  {
    "text": "maybe about a year ago now there was a vulnerability in virtually every JSON",
    "start": "2192170",
    "end": "2197850"
  },
  {
    "text": "web token library out there that if you encrypted using elliptical curve it was",
    "start": "2197850",
    "end": "2203490"
  },
  {
    "text": "possible to gain access to the plaintext without having the private key so the",
    "start": "2203490",
    "end": "2210230"
  },
  {
    "text": "access token that is opaque is more secure inherently because is not input",
    "start": "2210230",
    "end": "2215790"
  },
  {
    "text": "into a decryption algorithm and the JSON",
    "start": "2215790",
    "end": "2220890"
  },
  {
    "text": "web token sent by value only requires a compromise over TLS or compromise of the",
    "start": "2220890",
    "end": "2229320"
  },
  {
    "text": "transport and thankfully that doesn't happen as much as it did 10 years ago",
    "start": "2229320",
    "end": "2234720"
  },
  {
    "text": "with things like beast attacks and stuff like that but it does still mean that if",
    "start": "2234720",
    "end": "2241170"
  },
  {
    "text": "we put the PII into a JSON web token and only rely on the transport if that is",
    "start": "2241170",
    "end": "2248010"
  },
  {
    "text": "compromised then the information is available in plaintext so the other",
    "start": "2248010",
    "end": "2254280"
  },
  {
    "text": "thing is that we don't want the front-end applications to gain a dependency on the access tokens content",
    "start": "2254280",
    "end": "2260430"
  },
  {
    "text": "so if we issue a JSON web token as the access token the front-end like my Python app could start peering into that",
    "start": "2260430",
    "end": "2267510"
  },
  {
    "text": "token and pulling out things like social security number or maybe the last name",
    "start": "2267510",
    "end": "2272730"
  },
  {
    "text": "because only got the first name in the in the toque in the ID token and wants to show my first name and last name and",
    "start": "2272730",
    "end": "2279600"
  },
  {
    "text": "now the API wants to remove last name and the front end breaks so by having different tokens for different entities",
    "start": "2279600",
    "end": "2286380"
  },
  {
    "text": "in all of this we control our dependencies which is also one of the important parts about micro-services",
    "start": "2286380",
    "end": "2292500"
  },
  {
    "text": "this pattern is standard compliant so it uses OAuth or open ID connect and then",
    "start": "2292500",
    "end": "2297690"
  },
  {
    "text": "it uses introspection and it's vendor-neutral",
    "start": "2297690",
    "end": "2303050"
  },
  {
    "text": "drawbacks we got the network hall for dereferencing the token I would say that",
    "start": "2303200",
    "end": "2309360"
  },
  {
    "text": "that's not really a big problem because we can cash the token and the token is",
    "start": "2309360",
    "end": "2315000"
  },
  {
    "text": "globally unique because it's a gooood so we can cash that actually across all of our api's and we can preemptively fill",
    "start": "2315000",
    "end": "2322650"
  },
  {
    "text": "that cache so if the OAuth server actually sends a message every time it",
    "start": "2322650",
    "end": "2328020"
  },
  {
    "text": "issues a token to the API gateway or the reverse proxy it could preemptively fill",
    "start": "2328020",
    "end": "2333900"
  },
  {
    "text": "that cash to avoid later cache misses we could also of course use a very fast",
    "start": "2333900",
    "end": "2339300"
  },
  {
    "text": "reverse proxy that could handle these things quickly and another drawback is",
    "start": "2339300",
    "end": "2345960"
  },
  {
    "text": "that it doesn't work with multi-tenant scenarios so if we have a gooood and it's coming in to an API and if there's",
    "start": "2345960",
    "end": "2352980"
  },
  {
    "text": "nothing in that API request to tell us which tenant we're operating on we need",
    "start": "2352980",
    "end": "2358530"
  },
  {
    "text": "to make sure we're calling the right introspection endpoint and that could be for ten to one or ten or two and if there's nothing in the API request to",
    "start": "2358530",
    "end": "2365070"
  },
  {
    "text": "tell us that then we're not going to be able to distinguish that so that is one",
    "start": "2365070",
    "end": "2370920"
  },
  {
    "text": "admitted drawback but I think there are other solutions for that that we can get around without having to sacrifice the",
    "start": "2370920",
    "end": "2377850"
  },
  {
    "text": "use of this pattern alternatives use a JSON web token that only contains the",
    "start": "2377850",
    "end": "2383040"
  },
  {
    "text": "issuer of the authorized party expiration some sort of identifier and maybe the audience of the API this would",
    "start": "2383040",
    "end": "2390660"
  },
  {
    "text": "definitely help us overcome the multi-tenant scenario this is what hard to remember one of those other protocols",
    "start": "2390660",
    "end": "2396060"
  },
  {
    "text": "I said built on top of OAuth this is what they define to be the access code and in that protocol but the thing about",
    "start": "2396060",
    "end": "2403020"
  },
  {
    "text": "it is you still have to introspect it so if the problem or the drawback here is around performance the way to actually",
    "start": "2403020",
    "end": "2409680"
  },
  {
    "text": "solve that is with the pre-emptive cash population and with cashing in general",
    "start": "2409680",
    "end": "2415430"
  },
  {
    "text": "so summary there are various actors in OAuth we have the resource owner and the",
    "start": "2415430",
    "end": "2420869"
  },
  {
    "text": "resource server we have the client we have the authorization server we have various flows I went through the code",
    "start": "2420869",
    "end": "2426420"
  },
  {
    "text": "flow but there are others like implicit flow and hybrid flow and various others",
    "start": "2426420",
    "end": "2433170"
  },
  {
    "text": "like relocation which I didn't have time to go into but at least we talked about the code flow we saw how that works with",
    "start": "2433170",
    "end": "2438630"
  },
  {
    "text": "when ID Connect as well we saw different kinds of tokens remember they have access tokens you have refresh tokens",
    "start": "2438630",
    "end": "2444960"
  },
  {
    "text": "and ID tokens we looked at ways that you could pass them around using PI reference and by value and we also",
    "start": "2444960",
    "end": "2452160"
  },
  {
    "text": "talked about profiles of tokens so we have bearer tokens that are like cash and we have holder of key tokens which",
    "start": "2452160",
    "end": "2458040"
  },
  {
    "text": "are like credit cards and we have appropriate users of both and it's not authentication it's not authorization",
    "start": "2458040",
    "end": "2464700"
  },
  {
    "text": "it's certainly not Federation it's for delegation so you need to be thinking about that and as you do apply that to a",
    "start": "2464700",
    "end": "2471720"
  },
  {
    "text": "micro services scenario I encourage you strongly to look at the phantom token",
    "start": "2471720",
    "end": "2476790"
  },
  {
    "text": "pattern where you issue a by reference token and convert that as it comes into your network to a by value token so that",
    "start": "2476790",
    "end": "2483690"
  },
  {
    "text": "your micro service has a very easy time operating over the identity data I want",
    "start": "2483690",
    "end": "2489450"
  },
  {
    "text": "to leave you with a little bit more information so if you come to our booth not only can you win a Nintendo switch",
    "start": "2489450",
    "end": "2495210"
  },
  {
    "text": "but I can answer your questions or maybe more importantly going winning Nintendo switch and and there's also some",
    "start": "2495210",
    "end": "2503580"
  },
  {
    "text": "tutorials if you go to cure d dot support there's various explanations of all these different flows even though as",
    "start": "2503580",
    "end": "2510420"
  },
  {
    "text": "we didn't talk about today there are a lot of code samples on github calm slash security io using different frameworks",
    "start": "2510420",
    "end": "2518190"
  },
  {
    "text": "and toolkits and we have the workshop that I mentioned on Thursday and you can go to cure di o if you want to download",
    "start": "2518190",
    "end": "2524310"
  },
  {
    "text": "our server and try some of these things out yourself so that's all I have for now thank you so much for listening",
    "start": "2524310",
    "end": "2531650"
  },
  {
    "text": "[Applause]",
    "start": "2531650",
    "end": "2541260"
  }
]