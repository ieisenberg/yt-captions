[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "Hi, everyone. I'm Kurt Bittner, and I'm \nhere today with my friend and colleague,   Pierre Pureur. We're going \nto talk about architecture,  ",
    "start": "12720",
    "end": "19919"
  },
  {
    "text": "specifically continuous architecture, but \nwe should lay some foundation first. Pierre,  ",
    "start": "21040",
    "end": "27200"
  },
  {
    "text": "people tend to throw around the \nword architecture rather loosely,   and I'm curious about what the \nword architecture means to you. ",
    "start": "29440",
    "end": "36640"
  },
  {
    "start": "30000",
    "end": "308000"
  },
  {
    "text": "Good morning, Kurt. Thank you for this \nconversation, this is going to be great.  ",
    "start": "38880",
    "end": "44320"
  },
  {
    "text": "So for me, architecture is really...I \nmean, a classical definition, right,   defined as the fundamental concepts of properties \nof the system, and we think of it as elements,  ",
    "start": "44320",
    "end": "55680"
  },
  {
    "text": "relationships, and design principles. So, I \nthink of architecture at a concept for level.  ",
    "start": "56400",
    "end": "62000"
  },
  {
    "text": "Typically, the objectives in architecture are to:\nachieve some quality attribute requirements,  ",
    "start": "63520",
    "end": "69280"
  },
  {
    "text": "to define some principles, standards, \nand blueprints, of course, blueprints   are what people think most about architecture, \nto build some usable, and if we are ambitious,  ",
    "start": "70960",
    "end": "81600"
  },
  {
    "text": "even reasonable services, and \nlastly, but definitely not least, ",
    "start": "81600",
    "end": "87040"
  },
  {
    "text": "to create a roadmap for some \nkind of artificial state.   So, those four things define \nwhat architecture is to me. ",
    "start": "87040",
    "end": "94400"
  },
  {
    "text": "So, it's interesting, the quality \nattributes that you mentioned.  ",
    "start": "96800",
    "end": "101200"
  },
  {
    "text": "I know we're sort of jumping into \nsomething fairly directly here, but  ",
    "start": "102880",
    "end": "107680"
  },
  {
    "text": "how do those quality attributes...what are \nthey, and how do they shape the architecture? ",
    "start": "109200",
    "end": "113840"
  },
  {
    "text": "I think of them as more important than functional \nrequirements because you can really design any  ",
    "start": "119600",
    "end": "125440"
  },
  {
    "text": "kind of blob of software that meets functional \nrequirements, and yes, the good news, it will  ",
    "start": "125440",
    "end": "132080"
  },
  {
    "text": "meet your functional requirements, the bad news, \nit will not work very well. So, quality attributes  ",
    "start": "132080",
    "end": "137920"
  },
  {
    "text": "are well-defined in architecture, and quality \nattributes tend to, a lot of them, they tend  ",
    "start": "137920",
    "end": "146160"
  },
  {
    "text": "to change over time, the importance of them. At \nthis point the ones in this age of cloud, agile,  ",
    "start": "146160",
    "end": "154160"
  },
  {
    "text": "we think of quality attributes, the \nmost important ones are scalability   because your system needs to be able to scale to a \nlevel to be able to handle your productive volumes  ",
    "start": "155120",
    "end": "165680"
  },
  {
    "text": "and number of users, performance, \nbecause if it doesn't perform well,  ",
    "start": "166400",
    "end": "170560"
  },
  {
    "text": "basically, nobody's going to use \nit, so you're dead on arrival,   security, because security is, as we all \nknow, becoming more and more critical,  ",
    "start": "171760",
    "end": "181200"
  },
  {
    "text": "and then resilience. Resilience is making \nsure your system goes to production and  ",
    "start": "182240",
    "end": "187440"
  },
  {
    "text": "stays in production without having to resort to \nextreme measures to keep it running. But those  ",
    "start": "187440",
    "end": "195920"
  },
  {
    "text": "are the four quality attributes we are thinking \nof right now. They change all the time, as I said. ",
    "start": "195920",
    "end": "200240"
  },
  {
    "text": "That resilience one is really interesting because \nI think a lot of people think of architecture as  ",
    "start": "203840",
    "end": "209680"
  },
  {
    "text": "being an upfront sort of thing, and in reality, \nat least in my experience, architecture has  ",
    "start": "209680",
    "end": "216799"
  },
  {
    "text": "a lot more to do with the overall lifetime \nof an application or a system or a product.  ",
    "start": "216800",
    "end": "222400"
  },
  {
    "text": "So, the resilience of it over time to changes \nin the environment, to changes in requirements,  ",
    "start": "224960",
    "end": "231280"
  },
  {
    "text": "to changes in the people working \non it ends up being interesting and  ",
    "start": "232080",
    "end": "238480"
  },
  {
    "text": "drives a lot of interesting decisions.\nYes. Yes. And resilience you're right,  ",
    "start": "238480",
    "end": "246080"
  },
  {
    "text": "resilience has become very, very \nimportant lately. A long time ago,  ",
    "start": "246080",
    "end": "250560"
  },
  {
    "text": "when we used to design, I don't even think we used \nthe word architect at the time, we used to design  ",
    "start": "251680",
    "end": "258079"
  },
  {
    "text": "a system on mainframes, resilience was not a big \nconcern, mainframes were considered almost...  ",
    "start": "258080",
    "end": "265680"
  },
  {
    "text": "they didn't break down, you could do anything \nyou wanted, and the thing would just run.  ",
    "start": "267680",
    "end": "272080"
  },
  {
    "text": "Nowadays, that's not the case anymore. I \nmean nowadays, systems, you're going to have  ",
    "start": "274160",
    "end": "278640"
  },
  {
    "text": "some hardware issues, some network issues, some \nsoftware issues, so resilience has become very,  ",
    "start": "279360",
    "end": "285599"
  },
  {
    "text": "very important. It's not a case of trying \nto prevent a failure, it is more a case of,  ",
    "start": "285600",
    "end": "294640"
  },
  {
    "text": "well, what do you do if a failure occurs? Because \na failure will occur, it's just a matter of when.   And being able to gracefully recover from \nfailure is becoming extremely important.",
    "start": "294640",
    "end": "304240"
  },
  {
    "text": "So, you mentioned that these quality attributes \ntend to change over time, and so if you were to   add a fifth one, is there a particular attribute \nthat you think is sort of lurking out there  ",
    "start": "307760",
    "end": "317600"
  },
  {
    "start": "308000",
    "end": "443000"
  },
  {
    "text": "on the sidelines, that you might think of \nadding to this list of four that you mentioned? ",
    "start": "318160",
    "end": "324720"
  },
  {
    "text": "Yes. So, in retrospect, of course, \nwe wrote a book about a year ago, so  ",
    "start": "326320",
    "end": "332480"
  },
  {
    "text": "we can look back and say, well, maybe I \nwould do things a little bit different if I   had the chance to do it again, we probably \nwould have added sustainability. If I think  ",
    "start": "333200",
    "end": "346800"
  },
  {
    "text": "of sustainability, the first thing that comes \nto mind is resilience because to be sustainable,  ",
    "start": "346800",
    "end": "352560"
  },
  {
    "text": "a system has to be able, of course, to stay \nin production, but it's much more than that.   Sustainability is really about your software \nsystem, to really be resilient to changes,  ",
    "start": "352560",
    "end": "365040"
  },
  {
    "text": "so to be...as things change, and things will \nalways change, you need your system to adapt, and  ",
    "start": "365600",
    "end": "372400"
  },
  {
    "text": "hopefully, and that's an important consideration, \nat manageable costs. Sustainability cannot be  ",
    "start": "372400",
    "end": "379440"
  },
  {
    "text": "adapted at any cost, it has to be basically, \nadaptation at, basically, an affordable cost.  ",
    "start": "379440",
    "end": "386320"
  },
  {
    "text": "It's kind of invisible or a stealth \nquality attribute. Cost is always present,  ",
    "start": "389920",
    "end": "395600"
  },
  {
    "text": "and you need to look at the cost \nof anything you do in architecture.  One thing about sustainability, I've read quite a \nfew articles lately that talk about sustainability  ",
    "start": "395600",
    "end": "408800"
  },
  {
    "text": "in...environmental sustainability. Especially some \ncloud vendors are trying very hard to prove that  ",
    "start": "410720",
    "end": "416240"
  },
  {
    "text": "their cloud is sustainable, it does not affect \nthe government too badly. Now, of course, with  ",
    "start": "416240",
    "end": "422639"
  },
  {
    "text": "bitcoin, that becomes even more important. I'm not \nthinking of sustainability in those terms, though  ",
    "start": "422640",
    "end": "428880"
  },
  {
    "text": "environmental sustainability is important. But \nI'm more thinking sustainability in terms of,   over time, can your system react nicely \nto changes, and at an affordable cost?",
    "start": "428880",
    "end": "440720"
  },
  {
    "start": "443000",
    "end": "927000"
  },
  {
    "text": "So, the principles are really interesting. What \nI would like to dive into next is basically,  ",
    "start": "443680",
    "end": "454240"
  },
  {
    "text": "how do you get started with this? And \nfor the listener who's not familiar,  ",
    "start": "455120",
    "end": "459520"
  },
  {
    "text": "Pierre has written a book on continuous \narchitecture, along with two of his   colleagues. This notion of what is continuous \narchitecture, and how do you get started with it,  ",
    "start": "460720",
    "end": "471920"
  },
  {
    "text": "it's really interesting because I think also, my \nexperience with architecture in the past is that  ",
    "start": "473360",
    "end": "478800"
  },
  {
    "text": "people tend to think of it as being something \nthat's upfront, and then you go develop it and you   deploy the system, and the architectural work is \ndone. So there's continuous from the standpoint  ",
    "start": "478800",
    "end": "489440"
  },
  {
    "text": "of the development cycle but also continuous \nfrom the standpoint of the actual lifetime   of the system, and I think both of those \nattributes, in this sense, are interesting. ",
    "start": "489440",
    "end": "498800"
  },
  {
    "text": "Yes. So broadly speaking, at this point, there are \ntwo schools of thought about architecture. One is  ",
    "start": "500320",
    "end": "506320"
  },
  {
    "text": "the one you describe, Kurt, which is the upfront \narchitecture, which is the traditional one,  ",
    "start": "506320",
    "end": "513360"
  },
  {
    "text": "we try to do everything up front, and we don't \nwrite a line of code until all the architecture is  ",
    "start": "514320",
    "end": "520880"
  },
  {
    "text": "nailed down. The problem with that approach is, of \ncourse, it's very hard to know everything at once.  ",
    "start": "520880",
    "end": "528000"
  },
  {
    "text": "I think that Kurt, you did mention that some \npeople believe that something like 40% to 60% of  ",
    "start": "529360",
    "end": "537120"
  },
  {
    "text": "requirements, and that includes quality \nattribute requirements, are not true, not real.  ",
    "start": "537120",
    "end": "543440"
  },
  {
    "text": "So, designing an architecture when more than half \nyour requirements are incorrect is not going to  ",
    "start": "544480",
    "end": "552560"
  },
  {
    "text": "give you good results. Also, it's really hard to \npredict how a system is going to evolve. So if you  ",
    "start": "553200",
    "end": "559680"
  },
  {
    "text": "try to design everything up front, you are in, I \nthink, for a bad surprise as time goes by. Plus,  ",
    "start": "559680",
    "end": "567279"
  },
  {
    "text": "the reality is people are going to lose patience a \nlittle bit with the time it takes to get a design  ",
    "start": "567280",
    "end": "573920"
  },
  {
    "text": "together, and people are going to start kind of \ntrying to get out of the starting gate and write  ",
    "start": "573920",
    "end": "580639"
  },
  {
    "text": "some code. So for all these reasons, more than \n20 years ago, people moved to an agile view.  ",
    "start": "580640",
    "end": "589040"
  },
  {
    "text": "The idea of the agile view was the \narchitecture was going to emerge,   and you write code, and somehow the architecture, \nlike a whale out of the water, kind of emerges.  ",
    "start": "589840",
    "end": "600640"
  },
  {
    "text": "The problem with that is that if you do that, \nyou're going to end up doing a lot of refactoring,  ",
    "start": "602160",
    "end": "607360"
  },
  {
    "text": "you're going to do a lot of, basically, \nadjustment because there is some planning  ",
    "start": "607360",
    "end": "612480"
  },
  {
    "text": "you can do upfront. Architecture is planning, \nand you should attempt to do some planning. ",
    "start": "612480",
    "end": "618240"
  },
  {
    "text": "So when we started thinking about what continuous \narchitecture could be, we started thinking about  ",
    "start": "618240",
    "end": "625440"
  },
  {
    "text": "getting some principles. None of the principles \nare new or earth-shattering, but I think together,  ",
    "start": "626320",
    "end": "632880"
  },
  {
    "text": "they make a lot of sense. The principles, there \nare six of them, the first one was architect  ",
    "start": "632880",
    "end": "638640"
  },
  {
    "text": "products rather than projects. And again, quite \nobvious, but people don't necessarily do that,  ",
    "start": "638640",
    "end": "644320"
  },
  {
    "text": "okay? The focus is on quality attributes, don't \nworry too much about functional requirements. Yes,  ",
    "start": "645120",
    "end": "651360"
  },
  {
    "text": "you need to have a system that meets these \nfunctional requirements, but again, if your  ",
    "start": "651360",
    "end": "656640"
  },
  {
    "text": "quality attribute requirements are not met, then \nyou're not going to have a very efficient system.  ",
    "start": "658000",
    "end": "663200"
  },
  {
    "text": "The third one was really to attempt to delay \ndecisions until you're sure that you have to make  ",
    "start": "664640",
    "end": "671280"
  },
  {
    "text": "the decision. Don't make decisions too early, \ntry to make decisions based on facts. The  ",
    "start": "671280",
    "end": "676840"
  },
  {
    "text": "fourth one, try to architect for change because \nthings will change. So, try to do things small.  ",
    "start": "677360",
    "end": "683440"
  },
  {
    "text": "That doesn't mean necessarily using microservices, \nbut think small design, if you can. The fifth one,  ",
    "start": "684160",
    "end": "690720"
  },
  {
    "text": "don't forget to build is fine, because most people \nare architects to build a system, but don't forget  ",
    "start": "691440",
    "end": "696640"
  },
  {
    "text": "you're going to have to test to deploy an \noperating system. And that's almost more   important than building a system. And the last \none is the well-known principle and model of  ",
    "start": "696640",
    "end": "707519"
  },
  {
    "text": "the organization of your teams after the \ndesign of the system you're working on.  ",
    "start": "707520",
    "end": "711360"
  },
  {
    "text": "If you try to organize the wrong group in \nthe layers, front, middle, back, that's not  ",
    "start": "712960",
    "end": "721120"
  },
  {
    "text": "going to work very well. The idea is trying to \ncut across layers, and have one kind of nice,  ",
    "start": "721120",
    "end": "727200"
  },
  {
    "text": "homogeneous team that deals with all aspects of \nthe system. So, those were the six principles. ",
    "start": "728400",
    "end": "736480"
  },
  {
    "text": "Those reflect a lot of similar experiences \nthat I've had too, that having an empowered,  ",
    "start": "740560",
    "end": "749680"
  },
  {
    "text": "self-managing cross-functional team that's \nfocused on delivering value is one of the real  ",
    "start": "749680",
    "end": "755680"
  },
  {
    "text": "sorts of foundational aspects of agile approaches, \nand a lot of people lose sight of that. One of  ",
    "start": "755680",
    "end": "763200"
  },
  {
    "text": "the things that were interesting in that is that \nnotion of delaying decisions until absolutely. And  ",
    "start": "763200",
    "end": "770880"
  },
  {
    "text": "so, one of the questions I think teams would ask \nthemselves is how do we know when a decision is  ",
    "start": "771680",
    "end": "779600"
  },
  {
    "text": "necessary? What kind of questions should we be \nasking ourselves about decisions to say to answer  ",
    "start": "781040",
    "end": "787839"
  },
  {
    "text": "the question, or to say we don't need to make that \ndecision right now, we can delay it until later?  ",
    "start": "787840",
    "end": "793600"
  },
  {
    "text": "Or the converse of that is to say we \nneed to make this decision right now   because this is going to fundamentally affect a \nlot of work going forward. And maybe, I'm sure  ",
    "start": "794800",
    "end": "805200"
  },
  {
    "text": "you have some thoughts about that. We've had \nsome conversations, I know, about those things.  Yes. Yes. I mean, look, I think one of the key \nattributes of an architect is to be patient,  ",
    "start": "805200",
    "end": "815920"
  },
  {
    "text": "okay? Don't rush into making decisions too \nearly. In my experience, I've seen teams  ",
    "start": "816720",
    "end": "824160"
  },
  {
    "text": "that start with the end in mind, and they \nknow they want to bring in some technology.  ",
    "start": "824160",
    "end": "830720"
  },
  {
    "text": "And the reason could be because someone told them, \nwell, we know we need to be on the Amazon cloud.  ",
    "start": "830720",
    "end": "835920"
  },
  {
    "text": "The answer is going to be Amazon cloud, and \nyou don't even ask that question, right?   If you do that, the problem is you're going to \nmiss a lot of things. The idea is to be patient,  ",
    "start": "839200",
    "end": "849920"
  },
  {
    "text": "and make your decisions when you have all \nthe facts. And that's important, try not to  ",
    "start": "850720",
    "end": "856160"
  },
  {
    "text": "make decisions based on guesses because at least \nhalf the time, your guess is going to be wrong.  ",
    "start": "856160",
    "end": "861199"
  },
  {
    "text": "If your guesses are wrong, your \ndecisions are going to be wrong, okay?   Try to make decisions when there is no other \nchoice when you have to, okay? Don't wait too  ",
    "start": "861200",
    "end": "870720"
  },
  {
    "text": "long, but don't rush into making your decisions. \nOne thing I will offer as a piece of advice  ",
    "start": "870720",
    "end": "877199"
  },
  {
    "text": "is beware of bringing in products, especially \nthe ones that may hijack the architecture, okay?  ",
    "start": "877840",
    "end": "885440"
  },
  {
    "text": "Make sure technology doesn't take over the \narchitecture because that's a problem, okay? ",
    "start": "885440",
    "end": "889840"
  },
  {
    "text": "Then we get into cost, back to cost, right? \nSome decisions are going to be not accurate,  ",
    "start": "890720",
    "end": "898800"
  },
  {
    "text": "some decisions are going to have to be reversed. \nSo for each decision, there is a cost of reversing  ",
    "start": "898800",
    "end": "904160"
  },
  {
    "text": "the decision. So I think by looking at, basically, \nthe cost of that decision, of reversing the  ",
    "start": "904160",
    "end": "910720"
  },
  {
    "text": "decision when you make that decision, you can \nget to a point where you can ask yourself, do I  ",
    "start": "910720",
    "end": "916800"
  },
  {
    "text": "need...am I so sure that I have to make a decision \nright now, or can I wait a little bit longer?",
    "start": "916800",
    "end": "923519"
  },
  {
    "text": "I think, when we were talking about this last \nweek, it occurred to me that if I put this into  ",
    "start": "925680",
    "end": "932160"
  },
  {
    "start": "927000",
    "end": "1086000"
  },
  {
    "text": "scrum terms, then I might say something like \nduring sprint planning, the team should ask  ",
    "start": "932960",
    "end": "938240"
  },
  {
    "text": "itself is anything that we're planning to do \nduring this sprint going to have an unacceptable  ",
    "start": "938240",
    "end": "944399"
  },
  {
    "text": "cost if we have to redo the work at some point \nin the future? So inevitably, as you said,  ",
    "start": "944400",
    "end": "949840"
  },
  {
    "text": "architecture work involves rework, you want to \nminimize that, and yet you don't want to lock  ",
    "start": "950480",
    "end": "956560"
  },
  {
    "text": "yourself into particular technologies or decisions \nif you find facts in the future that tell you that  ",
    "start": "956560",
    "end": "963600"
  },
  {
    "text": "you need to do something different. So, I \nthink that notion of unacceptable cost, it's   an interesting question for people to keep in the \nback of their mind anytime they're planning work,  ",
    "start": "963600",
    "end": "972880"
  },
  {
    "text": "and say, if we have to redo this in the future, \ndoes it have an acceptable cost? In that case,  ",
    "start": "972880",
    "end": "979840"
  },
  {
    "text": "then you need to make a decision now, and you need \nto, you know, understand the consequences of that  ",
    "start": "979840",
    "end": "985600"
  },
  {
    "text": "decision. Would you agree with that?\nYes. Yes, absolutely.  ",
    "start": "985600",
    "end": "991279"
  },
  {
    "text": "I feel that the continuous flow of decisions \nis more and more important because that's   really... I mean, people think of architecture \nas blueprints, nice diagrams, and so on. Yes,  ",
    "start": "995200",
    "end": "1005440"
  },
  {
    "text": "you have to have those things which you have \nto communicate as part of the architecture, but   most importantly, we think the basic unit \nof work is the architect, and the architect  ",
    "start": "1005440",
    "end": "1013840"
  },
  {
    "text": "polishes decisions. Doesn't necessarily \nmake decisions, but facilitates decisions.  ",
    "start": "1014480",
    "end": "1018720"
  },
  {
    "text": "As you make decisions continuously, you're going \nto learn, you're going to have his continuous loop  ",
    "start": "1020560",
    "end": "1026560"
  },
  {
    "text": "of learning, and you're going to learn from your \nmistakes. Because you're going to make mistakes,   everyone does, and as you learn, you're going to \ngo back and revisit your decisions continuously.  ",
    "start": "1026560",
    "end": "1036800"
  },
  {
    "text": "So, you kind of have this kind of full feedback \nloop and circle where you gain knowledge,  ",
    "start": "1037440",
    "end": "1044240"
  },
  {
    "text": "you make a decision, you gain knowledge, \nand you revisit that decision constantly. Yes, that's interesting. One of the things \nthat I've always tried to practice, and if I  ",
    "start": "1044240",
    "end": "1056960"
  },
  {
    "text": "were to add a principle to your principles, \nI might say, make everything replaceable,  ",
    "start": "1056960",
    "end": "1064159"
  },
  {
    "text": "or make everything replaceable at relatively low \ncost. That argues for very modular code, very  ",
    "start": "1064160",
    "end": "1072880"
  },
  {
    "text": "isolated services with loose connections between \nthem, and lots of things that are sort of becoming  ",
    "start": "1072880",
    "end": "1079360"
  },
  {
    "text": "either widely adopted now or more prevalent. So, \none of the things that sort of relate to that,  ",
    "start": "1079360",
    "end": "1089040"
  },
  {
    "start": "1086000",
    "end": "1465000"
  },
  {
    "text": "and relates to this question of \nhow to get started, is something   that I know you and I have talked about, this \nconcept of a minimum viable architecture,  ",
    "start": "1090560",
    "end": "1098640"
  },
  {
    "text": "in a sense. You know, what does the first \niteration of that architecture look like,  ",
    "start": "1099920",
    "end": "1104080"
  },
  {
    "text": "at least at a conceptual level, and then from \nthere you can start iterating and improving  ",
    "start": "1105040",
    "end": "1110880"
  },
  {
    "text": "and learning and replacing. But you know, how \nmuch architecture do you need to get started?",
    "start": "1110880",
    "end": "1116560"
  },
  {
    "text": "Yes. So, the concept of minimum viable \narchitecture came out of the minimum   viable product concept, and that kind of follows \nprinciple number one, which is thought products,  ",
    "start": "1118240",
    "end": "1129280"
  },
  {
    "text": "don't think projects. So, your first step in \nminimum viable architecture is going to be to  ",
    "start": "1130160",
    "end": "1140400"
  },
  {
    "text": "support the implementation of a minimum \nviable product, something which is small,  ",
    "start": "1140400",
    "end": "1147040"
  },
  {
    "text": "but good enough to be put in production. And \nthat's a keyword. Your first iteration has to  ",
    "start": "1148000",
    "end": "1154800"
  },
  {
    "text": "be something you can put in production because \nthe whole point of the minimum viable product  ",
    "start": "1154800",
    "end": "1161840"
  },
  {
    "text": "is really to get feedback from customers. Well, \nyou can't get feedback from customers if you don't   have something in production. So, the first \niteration, I'm thinking of the first iteration  ",
    "start": "1161840",
    "end": "1171919"
  },
  {
    "text": "of MVA is really to have something that \nsupports a minimum viable product functionally.  ",
    "start": "1171920",
    "end": "1179120"
  },
  {
    "text": "Your MVA is going to be good enough to be put \nin production, however, you're not going to  ",
    "start": "1180080",
    "end": "1188399"
  },
  {
    "text": "design an MVA based on guesses, and we go back \nto facts versus guesses. You're going to design  ",
    "start": "1188400",
    "end": "1195600"
  },
  {
    "text": "your MVA based on what you know. If you're \nthinking about performance or scalability,  ",
    "start": "1195600",
    "end": "1200000"
  },
  {
    "text": "you're not going to worry too much about \nscalability because the MVP is probably not going   to be released to a lot of customers, so you're \ngoing to have a small customer base. Performance  ",
    "start": "1201120",
    "end": "1211120"
  },
  {
    "text": "is going to be good because, typically, if \nyou don't have a lot of users, performance,  ",
    "start": "1211120",
    "end": "1215520"
  },
  {
    "text": "traditionally, is good? And resilience \nis also going to be acceptable. Security,  ",
    "start": "1216640",
    "end": "1222800"
  },
  {
    "text": "however, is still important because you don't \nwant to put something out that is not secure. ",
    "start": "1222800",
    "end": "1228320"
  },
  {
    "text": "Then I happen to believe that if there's one thing \nyou should do initially, it is to put some kind of  ",
    "start": "1229120",
    "end": "1235360"
  },
  {
    "text": "instrumentation framework so that you can monitor \nthe performance and scalability of your system  ",
    "start": "1235360",
    "end": "1240880"
  },
  {
    "text": "so as your system and your MVP becomes \npopular and successful and expands,  ",
    "start": "1241440",
    "end": "1247679"
  },
  {
    "text": "and we hope it does, at that point, you're \nnot kind of caught flat-footed, and you're not  ",
    "start": "1247680",
    "end": "1254320"
  },
  {
    "text": "facing a big problem. So, you know your \nimplementation framework is going to tell you,  ",
    "start": "1256000",
    "end": "1262160"
  },
  {
    "text": "basically, oops, be careful because it may be \ntime, and this is all part of the feedback loop,  ",
    "start": "1262160",
    "end": "1268400"
  },
  {
    "text": "it may be time to start considering performance \nscalability because your system is bigger,   being used by a lot of people, so more than \nyou expected, so time for a security measure. ",
    "start": "1268400",
    "end": "1278080"
  },
  {
    "text": "Yes, that's a really interesting \nconcept because I think a lot of people   in that minimum viable product, tend to focus on \nfunctional requirements. So they'll have a nice  ",
    "start": "1279760",
    "end": "1290480"
  },
  {
    "text": "sort of in the old days, we would call it \na demo, you know, they'd have a nice set   of visual capabilities that would be very \nexciting, and get everybody interested.  ",
    "start": "1291280",
    "end": "1300480"
  },
  {
    "text": "But your discussion reminds me of something \nthat I did with a team years ago, and that  ",
    "start": "1302640",
    "end": "1310560"
  },
  {
    "text": "we had an online transaction processing system, \nand we had certain, in a sense, service level  ",
    "start": "1310560",
    "end": "1318800"
  },
  {
    "text": "agreement kind of things about how scalable the \ndistributed system had to be, and so, there were  ",
    "start": "1318800",
    "end": "1324560"
  },
  {
    "text": "certain requirements around latency, and certain \nrequirements around response time, and certain  ",
    "start": "1324560",
    "end": "1329840"
  },
  {
    "text": "requirements around several concurrent users. Our \nfirst iteration on this particular application  ",
    "start": "1329840",
    "end": "1338880"
  },
  {
    "text": "had virtually no functional requirements, but what \nit did is it simulate the workload that would be  ",
    "start": "1340800",
    "end": "1347120"
  },
  {
    "text": "happening in that system. We knew approximately \nwhat kinds of things would be exchanged back   and forth, and so we wrote our first sort of \nminimum viable architecture, in your terms,  ",
    "start": "1347120",
    "end": "1357360"
  },
  {
    "text": "to basically, a startup that many concurrent \nusers, a startup that many concurrent processes,  ",
    "start": "1358560",
    "end": "1363680"
  },
  {
    "text": "simulate the distribution and the lag time and \nlatency in the system, and prove that some of  ",
    "start": "1365440",
    "end": "1370879"
  },
  {
    "text": "our most basic choices could be satisfied. Because \nif we couldn't do that, then we just really needed  ",
    "start": "1370880",
    "end": "1376080"
  },
  {
    "text": "to cancel the whole initiative, or significantly \nrethink it. So, that gave us a lot of confidence,  ",
    "start": "1376080",
    "end": "1382559"
  },
  {
    "text": "and then from then on, you know, we could \nstart replacing the fake transactions with   real transactions, and gradually building the \nsystem out. It very much worked in the way that  ",
    "start": "1382560",
    "end": "1393520"
  },
  {
    "text": "you described, with making these decisions over \ntime. We weren't concerned about the functional  ",
    "start": "1393520",
    "end": "1400320"
  },
  {
    "text": "requirements initially, it was more about the \nscalability, security, reliability, and latency  ",
    "start": "1400320",
    "end": "1407759"
  },
  {
    "text": "kinds of requirements. So, very interesting.\nThere is one more point on MVA and MVP.  ",
    "start": "1407760",
    "end": "1417120"
  },
  {
    "text": "Traditionally, an MVP system, a minimum \nviable product, is a throwaway system. That's  ",
    "start": "1418080",
    "end": "1424320"
  },
  {
    "text": "how people think of it. That's where I differ \nfrom that school of thought because I believe that  ",
    "start": "1424960",
    "end": "1431840"
  },
  {
    "text": "the idea of an MVA is building something \nyou're going to be able to grow and build upon,  ",
    "start": "1431840",
    "end": "1437039"
  },
  {
    "text": "and I think that's a key thing. Yes, you \ninitially, roll out a minimum viable product,  ",
    "start": "1437040",
    "end": "1444320"
  },
  {
    "text": "but you're going to build that product, and \nyou're going to build the architecture in  ",
    "start": "1444320",
    "end": "1448000"
  },
  {
    "text": "tandem. If you are lucky, you're going to end up \nwith a successful full-fledged system. If you're  ",
    "start": "1449440",
    "end": "1454799"
  },
  {
    "text": "unlucky, the system will not go anywhere, but you \nstill will have learned a lot, which is important.",
    "start": "1454800",
    "end": "1459680"
  },
  {
    "text": "Right. So now, the question I think in a lot \nof people's minds, certainly in mine, is that  ",
    "start": "1460240",
    "end": "1471840"
  },
  {
    "start": "1465000",
    "end": "1791000"
  },
  {
    "text": "architecture work is really...it's not easy, but \nit's less challenging on a new product. But if you  ",
    "start": "1472560",
    "end": "1480720"
  },
  {
    "text": "have existing products, or you have a new product \nthat relies upon existing products for some  ",
    "start": "1480720",
    "end": "1486559"
  },
  {
    "text": "transactions or services that it provides, and \nthat existing architecture is just often a mess,  ",
    "start": "1487280",
    "end": "1493840"
  },
  {
    "text": "you know, it's just a tangled web of, you know, \ndependencies and other things. Somebody I talked  ",
    "start": "1494480",
    "end": "1502240"
  },
  {
    "text": "to one time said if you use the building analogy, \nit resembles a ruin rather than a functioning   building, a ruin that people are squatting \nin and living in. So, how can an organization  ",
    "start": "1502240",
    "end": "1513760"
  },
  {
    "text": "apply continuous architecture concepts to a \nbunch of existing systems that they already have,  ",
    "start": "1515200",
    "end": "1521440"
  },
  {
    "text": "that they need to extend or that they need to \nbuild on top of? Let's start with that question,  ",
    "start": "1521440",
    "end": "1528799"
  },
  {
    "text": "and then we can move on to a related one.\nYes. So, it's interesting, Kurt, on Friday  ",
    "start": "1528800",
    "end": "1537520"
  },
  {
    "text": "I was talking to a common friend of ours and we \nwere talking about exactly that topic. Murad,  ",
    "start": "1537520",
    "end": "1545520"
  },
  {
    "text": "of course, I'm talking about Murad, and Murad \nright now works for a large international bank.  ",
    "start": "1546880",
    "end": "1552320"
  },
  {
    "text": "They are going exactly through that, they're going \nthrough, basically, reengineering of systems.  ",
    "start": "1555680",
    "end": "1561120"
  },
  {
    "text": "When I asked him about how are those decisions \nmade, decisions to start over versus to try to  ",
    "start": "1563280",
    "end": "1569200"
  },
  {
    "text": "keep on updating and enhancing, his answer was \nvery, very direct. He said those decisions have  ",
    "start": "1569200",
    "end": "1577279"
  },
  {
    "text": "often to do more in politics than technology. \nWhat happens is you get someone at a very high  ",
    "start": "1577280",
    "end": "1583600"
  },
  {
    "text": "level that says, well, you know, I've had it \nwith systems working on a mainframe, and so   on, time to move to a modern cloud, time to move \nto Amazon, Google, or pick one, right? Nothing  ",
    "start": "1583600",
    "end": "1596640"
  },
  {
    "text": "really to do with technology. So kind of leaving \nthat aside, okay, I think that the main issue with  ",
    "start": "1596640",
    "end": "1605040"
  },
  {
    "text": "a system that has been around for a long time is \nthat technical debt builds over time. Technical  ",
    "start": "1605040",
    "end": "1610880"
  },
  {
    "text": "debt is like entropy, ok? It's very hard to avoid \ntechnical debt. Every decision we make kind of  ",
    "start": "1610880",
    "end": "1617120"
  },
  {
    "text": "involves some technical debt. If you are lucky, \nwhen you make decisions, you get technical debt.  ",
    "start": "1617120",
    "end": "1622800"
  },
  {
    "text": "But that's luck.  Most of the time, you end up \nbeing saddled with more and more technical debt.",
    "start": "1622800",
    "end": "1628880"
  },
  {
    "text": "So, what happens over 10 years, 20 years, 30 \nyears, basically, at some point, your technical  ",
    "start": "1628880",
    "end": "1635520"
  },
  {
    "text": "debt becomes impossible to be paid, and you need \nto do something. You get to an inflection point  ",
    "start": "1635520",
    "end": "1641120"
  },
  {
    "text": "where you say, well, do I want to keep on kind \nof modifying the system, enhancing our system,  ",
    "start": "1641120",
    "end": "1647360"
  },
  {
    "text": "and maybe spending a lot of money on trying \nto make a system a bit better, or just  ",
    "start": "1648000",
    "end": "1653440"
  },
  {
    "text": "keeping it above water, afloat above water, \nor do I just want to give up and start again?  ",
    "start": "1653440",
    "end": "1660240"
  },
  {
    "text": "Another factor in this, in addition to \ncost, is some systems become impossible to  ",
    "start": "1661040",
    "end": "1667360"
  },
  {
    "text": "use to support the business strategy, and it's \nbecoming impossible to roll out new products,  ",
    "start": "1667360",
    "end": "1677920"
  },
  {
    "text": "okay? If you reach a point where the system stands \nin the way of a business strategy, then you have  ",
    "start": "1677920",
    "end": "1684560"
  },
  {
    "text": "no choice but to scrap it and start over.\nIf you haven't reached that point yet  ",
    "start": "1684560",
    "end": "1692400"
  },
  {
    "text": "and if you think that the system, and there \nis this almost zero investment discussion,  ",
    "start": "1693680",
    "end": "1700320"
  },
  {
    "text": "because at some point, the cost of physically \nmaking a system is going to be too high,  ",
    "start": "1700320",
    "end": "1705679"
  },
  {
    "text": "and you don't get enough return on investment. \nSo, there is a way to start replacing your system  ",
    "start": "1705680",
    "end": "1713120"
  },
  {
    "text": "kind of piece by piece, service by service, \nand that's, an example of that is the so-called  ",
    "start": "1713120",
    "end": "1718720"
  },
  {
    "text": "strangler pattern, where you strangle your \nservice in your system, and you replace the   service with a new system. That can work to \na point, except that some older systems are  ",
    "start": "1718720",
    "end": "1731280"
  },
  {
    "text": "far too compact and monolithic to be able to \nbe a kind of modernized service by service.  ",
    "start": "1732160",
    "end": "1739440"
  },
  {
    "text": "If that's the case, you have no choice but to \nreally go back to square one, and start again. ",
    "start": "1740480",
    "end": "1744799"
  },
  {
    "text": "One thing that I find sort of exacerbates \nthe dependencies between systems, which  ",
    "start": "1747280",
    "end": "1754320"
  },
  {
    "text": "is often...well, you mentioned monolithic, it's \nbecause there are too many dependencies between  ",
    "start": "1754320",
    "end": "1759840"
  },
  {
    "text": "things. But one of the things that I've \nnoticed is that it helps to start abstracting  ",
    "start": "1760480",
    "end": "1766799"
  },
  {
    "text": "the data, and not be tied to \nspecific database schemas, and not  ",
    "start": "1767760",
    "end": "1772320"
  },
  {
    "text": "interacting...basically, use services between \ndifferent parts of the application rather than   common data. That's a problem in a lot of \nolder systems, is that they synchronize,  ",
    "start": "1773680",
    "end": "1782320"
  },
  {
    "text": "basically, by using common data and common \ndatabases, and then that tends to ripple.",
    "start": "1782320",
    "end": "1788639"
  },
  {
    "text": "So switching gears a little bit, I'm sure a lot \nof the people listening to this are interested,  ",
    "start": "1789920",
    "end": "1798160"
  },
  {
    "start": "1791000",
    "end": "2267000"
  },
  {
    "text": "perhaps, in how do I become an architect? How \ndo I approach this from a career standpoint?  ",
    "start": "1798160",
    "end": "1807200"
  },
  {
    "text": "So one of the questions that we've talked about \nbefore is the question of is architecture a role,  ",
    "start": "1807200",
    "end": "1815679"
  },
  {
    "text": "or is it a skill set? Then if it's a skill \nset, what are the skills of the architect? ",
    "start": "1815680",
    "end": "1822080"
  },
  {
    "text": "Oh, yes. So absolutely, an architect is becoming \na skill set, not a role, okay? I predicted, a few  ",
    "start": "1822080",
    "end": "1832559"
  },
  {
    "text": "years back, that architect as a job description \nwill disappear. At the time, I was the chief   architect in a large insurance company, so \nthat didn't make me exactly popular, but  ",
    "start": "1832560",
    "end": "1843120"
  },
  {
    "text": "that's, unfortunately for long lifetime \narchitects, I think that's happening now.  ",
    "start": "1844160",
    "end": "1850240"
  },
  {
    "text": "In terms of skills, you need innovation...you're \nnot born an architect. Some people are born with  ",
    "start": "1851760",
    "end": "1861520"
  },
  {
    "text": "specific skills, like the ability \nto conceptualize, which helps,   but I don't think there's anything \nmagic about being an architect.  ",
    "start": "1862640",
    "end": "1869520"
  },
  {
    "text": "To be an architect, you have to, first \nof all, you have to be able to design. I mean, architecture is a design-oriented \nactivity, so if you can't design,  ",
    "start": "1870480",
    "end": "1877840"
  },
  {
    "text": "you're not going to be a very successful \narchitect. So, designing is important.   Leadership-  architects are technical leaders.  ",
    "start": "1878800",
    "end": "1886800"
  },
  {
    "text": "I know a friend of mine who used to say \nthat 50% of architecture is communication.   So, you have to be able to lead and communicate \nclearly. Communication skills are critical.  ",
    "start": "1887520",
    "end": "1899600"
  },
  {
    "text": "Stakeholder focus, architecture is about really \nserving your stakeholders. It's about serving a  ",
    "start": "1902240",
    "end": "1909360"
  },
  {
    "text": "business. If you're only focused on technology, \nyou're not going to be a very successful  ",
    "start": "1909360",
    "end": "1915040"
  },
  {
    "text": "architect. So, it's all about focusing on...number \none, knowing who your stakeholders are,  ",
    "start": "1915040",
    "end": "1921760"
  },
  {
    "text": "and number two, focusing on those stakeholders, \nwhich goes back to products versus projects. ",
    "start": "1921760",
    "end": "1925920"
  },
  {
    "text": "Conceptualization, concept, architecture is all \nabout concepts, right? You need to be able to   conceptualize and address system-wide concepts. \nArchitects are not just concerned about one little  ",
    "start": "1927920",
    "end": "1938800"
  },
  {
    "text": "module, they are concerned about the whole thing. \nThey have to be able to look at one module, but  ",
    "start": "1938800",
    "end": "1944560"
  },
  {
    "text": "they are also able to look at the whole story. \nThey have to be able to focus on systematic  ",
    "start": "1944560",
    "end": "1952320"
  },
  {
    "text": "qualities than little functions, that's \nvery important, back to quality attributes.  ",
    "start": "1952320",
    "end": "1956559"
  },
  {
    "text": "Lifecycle, remember principle number five, right? \nYou have to be able to architect for the build,  ",
    "start": "1958320",
    "end": "1964080"
  },
  {
    "text": "test, deploy and operate. You have to be involved \nwith the whole lifecycle. You shouldn't just  ",
    "start": "1965120",
    "end": "1972320"
  },
  {
    "text": "think that you're going to build something, and \nthrow it over the wall to some other people. No,  ",
    "start": "1972320",
    "end": "1977600"
  },
  {
    "text": "it doesn't work that way. Then the last one is \nthe ability to balance concerns and compromise.  ",
    "start": "1977600",
    "end": "1983840"
  },
  {
    "text": "Architecture is about compromising as \nwell, making decisions, and compromising.  ",
    "start": "1984400",
    "end": "1988240"
  },
  {
    "text": "Most often, you're going to have a lot of or at \nleast two of your quality attribute requirements  ",
    "start": "1989920",
    "end": "1995680"
  },
  {
    "text": "that are going to conflict. Performance \nmay conflict with usability,  ",
    "start": "1995680",
    "end": "2001600"
  },
  {
    "text": "security may conflict with a lot of quality \nattributes. You have to find a good enough   solution, you have to be able to compromise, \nand that's harder to do than it's said.  ",
    "start": "2003120",
    "end": "2013200"
  },
  {
    "text": "That would be kind of my quick list of skills.",
    "start": "2015360",
    "end": "2018880"
  },
  {
    "text": "Building on that a little bit, too, I think about   experiences that I've had, and that people I know, \nwho I respect as architects seem to have had.  ",
    "start": "2021760",
    "end": "2031840"
  },
  {
    "text": "This is more just adding a little bit of \ndetail to some of the things you mentioned. But  ",
    "start": "2034080",
    "end": "2037840"
  },
  {
    "text": "having to support an application in \nproduction, understanding what happens  ",
    "start": "2039600",
    "end": "2044799"
  },
  {
    "text": "with load, understanding what happens with \nsecurity, understanding how to instrument the  ",
    "start": "2045680",
    "end": "2051280"
  },
  {
    "text": "application, to anticipate failures, knowing what \nkind of things you have to do, the kinds of things  ",
    "start": "2051280",
    "end": "2059120"
  },
  {
    "text": "you have to do quickly when you need to patch \nsomething and get it running again I think helps   you understand what happens, and how to make that \napplication more supportable. I think introduction  ",
    "start": "2059120",
    "end": "2076800"
  },
  {
    "text": "or the start of my education around things like \narchitecture, I was both building and supporting,  ",
    "start": "2076800",
    "end": "2083679"
  },
  {
    "text": "building the application, and supporting it \nin production, so I learned a lot from that.  The other thing that I think helped me early \non was a stint that I did in a job where I was  ",
    "start": "2084560",
    "end": "2097680"
  },
  {
    "text": "focused a lot on performance and scalability, and \nit gave me some insights that I would not have had  ",
    "start": "2097680",
    "end": "2104160"
  },
  {
    "text": "if I was just building and deploying applications, \nso I was doing a lot of performance tuning. Then I  ",
    "start": "2104160",
    "end": "2111119"
  },
  {
    "text": "found I learned a lot as a developer, from having \nto maintain and modernize somebody else's code.  ",
    "start": "2111120",
    "end": "2117760"
  },
  {
    "text": "You start going into someone else's code, and you \nlook at it and you realize this is just a mess,  ",
    "start": "2118960",
    "end": "2123520"
  },
  {
    "text": "and you start seeing mistakes that you make  ",
    "start": "2124320",
    "end": "2128560"
  },
  {
    "text": "that other people are making, and you start \nrecognizing, oh, wait, I make that same   error, whether it's from having various kinds \nof services that have some weird side effects,  ",
    "start": "2129600",
    "end": "2143440"
  },
  {
    "text": "or other things, and isolating different \nparts of the code. I find those things,  ",
    "start": "2143440",
    "end": "2149520"
  },
  {
    "text": "if I was recommending to someone, who's maybe \njust a developer starting, I would say try to get  ",
    "start": "2150320",
    "end": "2157920"
  },
  {
    "text": "those kinds of experiences, because you'll learn \na lot from having to maintain someone else's code,   you'll learn a lot from supporting an \napplication, you'll learn a lot from,  ",
    "start": "2157920",
    "end": "2166319"
  },
  {
    "text": "you know, maybe even doing some work in \noperations. I know a lot of developers don't  ",
    "start": "2169200",
    "end": "2176800"
  },
  {
    "text": "like the idea of having to do that, that's \nmaybe not the fun part, but it's something  ",
    "start": "2177520",
    "end": "2182960"
  },
  {
    "text": "that pays a huge dividend over a long period, to \nunderstand what happens to things in production.  ",
    "start": "2182960",
    "end": "2189200"
  },
  {
    "text": "That's some advice I would add to what you said.\nAbsolutely. I mean, I think, you know, Kurt, when  ",
    "start": "2192400",
    "end": "2199680"
  },
  {
    "text": "we started basically, people didn't worry \ntoo much about when you were in development,  ",
    "start": "2199680",
    "end": "2206720"
  },
  {
    "text": "we didn't worry too much about how the application \nwas going to do in production, you started to  ",
    "start": "2206720",
    "end": "2212080"
  },
  {
    "text": "worry with scalability because mainframes, right? \nIt was great, the mainframe was there to scale. If  ",
    "start": "2212080",
    "end": "2218560"
  },
  {
    "text": "you didn't scale, you just bought a new mainframe, \none that would hopefully scale better. Security  ",
    "start": "2218560",
    "end": "2224400"
  },
  {
    "text": "was the domain, and it was until...I think it \nwas fairly standard, security was the domain  ",
    "start": "2224400",
    "end": "2229440"
  },
  {
    "text": "of some people's rooms, which usually were locked. \nYou couldn't get into the location where security  ",
    "start": "2229440",
    "end": "2237520"
  },
  {
    "text": "engineers are sitting. All you knew is from time \nto time, they would get out of that cave, and run  ",
    "start": "2237520",
    "end": "2245680"
  },
  {
    "text": "some kind of mysterious code against your code \nthat would flag all your security problems, and  ",
    "start": "2245680",
    "end": "2250720"
  },
  {
    "text": "then they would disappear again. This has changed \na lot. Nowadays, security is everybody's problem,  ",
    "start": "2250720",
    "end": "2255920"
  },
  {
    "text": "and especially it's the architect's problem. So \nif you want to be an architect, you have to get   involved in performance, scalability, \nresilience, security, that's critical.",
    "start": "2255920",
    "end": "2266480"
  },
  {
    "text": "I was thinking security is an interesting \nthing. In the old days, everything was  ",
    "start": "2266480",
    "end": "2272480"
  },
  {
    "start": "2267000",
    "end": "2640000"
  },
  {
    "text": "physically secured, so you know, you had to have \na badge to get into the room with the computer.  ",
    "start": "2272480",
    "end": "2277119"
  },
  {
    "text": "Once you opened everything up to the internet, \nthen it's a whole different set of problems.  ",
    "start": "2279520",
    "end": "2284800"
  },
  {
    "text": "When I think about continuous architecture, I also \nthink about continuous delivery, and one of the  ",
    "start": "2288400",
    "end": "2294319"
  },
  {
    "text": "keys to making continuous delivery work is having \na very high level of automated testing coverage.  ",
    "start": "2294320",
    "end": "2301040"
  },
  {
    "text": "I'm wondering if there are some examples and \nsome other things you can share on that. How  ",
    "start": "2302640",
    "end": "2309760"
  },
  {
    "text": "do you start testing those quality attributes \nearly, and build that into your automated  ",
    "start": "2309760",
    "end": "2315760"
  },
  {
    "text": "delivery pipeline so that you can have automation \nsupport, and more than just sort of thinking...?  ",
    "start": "2315760",
    "end": "2322320"
  },
  {
    "text": "So, continuous architecture isn't just the way \nyou think about the problem, it's the way that   you start instrumenting your delivery pipeline. \nAre there any things that you can suggest there? ",
    "start": "2323440",
    "end": "2332000"
  },
  {
    "text": "Yes. When people talk about what are we \ntesting, another shift left moment and you  ",
    "start": "2333520",
    "end": "2339520"
  },
  {
    "text": "try to test as early as you can, they usually \ntalk about functional testing. That's great,  ",
    "start": "2339520",
    "end": "2345600"
  },
  {
    "text": "but we are back to the blob, right? You can \nfunctionally test a blob of software, and yes,  ",
    "start": "2345600",
    "end": "2350640"
  },
  {
    "text": "it's going to meet your functional requirements, \nbut it won't perform at all in production. So,  ",
    "start": "2350640",
    "end": "2356480"
  },
  {
    "text": "the idea is really to try to test your \nquality attributes as early as possible   in the process, kind of shifting left in \nautomatic testing of quality attributes.  ",
    "start": "2356480",
    "end": "2364560"
  },
  {
    "text": "The one that comes to mind is performance. I think \nthat performance testing should be part of every  ",
    "start": "2365120",
    "end": "2370560"
  },
  {
    "text": "automated functional test. You should have a test \nand a series of tests that test performance as you  ",
    "start": "2371760",
    "end": "2382080"
  },
  {
    "text": "integrate your piece of code into the system. \nFor scalability, you probably are not going to  ",
    "start": "2382080",
    "end": "2388960"
  },
  {
    "text": "test scalability every time you run a functional \ntest, but you probably want to test scalability  ",
    "start": "2388960",
    "end": "2394640"
  },
  {
    "text": "quite often. Again, automate your \nscalability testing. There are a lot of  ",
    "start": "2394640",
    "end": "2398480"
  },
  {
    "text": "possible scalability tests, but the idea is \nyou need to be able to do some of those tests.  ",
    "start": "2399760",
    "end": "2406240"
  },
  {
    "text": "Which gets us into resilience, okay? At some \npoint, you're going to stress test your system.  ",
    "start": "2407200",
    "end": "2411359"
  },
  {
    "text": "And you're going to do that automatically, \nand you need to do that often, you should...  I still remember times when performance testing \nwas something you did at the end of a life cycle.  ",
    "start": "2414560",
    "end": "2423840"
  },
  {
    "text": "So typically, two or three days before going into \nproduction, you performance test your system.  ",
    "start": "2424480",
    "end": "2430240"
  },
  {
    "text": "What's wrong with that? Well, what's \nwrong is obvious, right? The problem is   you're going to find out, usually, whenever we \nexpect something to be in production on Monday,  ",
    "start": "2430800",
    "end": "2438560"
  },
  {
    "text": "you'll performance test your system on Friday, \nand more often than not, you're going to find   out your system isn't performing. What do you \ndo next now? Do you call off the implementation?  ",
    "start": "2438560",
    "end": "2447440"
  },
  {
    "text": "You're not going to have a lot of friends, \ndoing that. You go in with a system that   doesn't perform? That's not going to work \nvery well. Scalability is the same. So,  ",
    "start": "2448960",
    "end": "2457840"
  },
  {
    "text": "to avoid this Friday kind of crisis, you have to \ntest continuously your performance scalability,  ",
    "start": "2458560",
    "end": "2467440"
  },
  {
    "text": "as well as your resilience. Google, I believe, \ncame up with the concept of Simian Army, okay,  ",
    "start": "2468080",
    "end": "2473760"
  },
  {
    "text": "which the whole idea was you start disrupting your \nsystem...you don't do it, of course, every day,  ",
    "start": "2473760",
    "end": "2479200"
  },
  {
    "text": "but you start disrupting your system because \nit's much better to start disrupting your system  ",
    "start": "2479200",
    "end": "2484400"
  },
  {
    "text": "in the test than it is to be at the receiving \nend of a disruption in production. Then,  ",
    "start": "2484400",
    "end": "2490240"
  },
  {
    "text": "of course, security, that's probably the \none that people are most familiar with.  ",
    "start": "2490240",
    "end": "2494880"
  },
  {
    "text": "But again, the whole concept is don't run a \nsecurity inspection code...I'm sorry, a code  ",
    "start": "2495840",
    "end": "2505680"
  },
  {
    "text": "inspection for security at the end of a process, \ndo it at least, you know, once a week or from time  ",
    "start": "2505680",
    "end": "2513680"
  },
  {
    "text": "to time to make sure that you don't have problems \nin your codebase that cannot be resolved quickly. ",
    "start": "2513680",
    "end": "2521839"
  },
  {
    "text": "You mentioned the Google concept of the Simian \nArmy, and I also remember there was a similar kind  ",
    "start": "2524080",
    "end": "2530640"
  },
  {
    "text": "of thing at...I believe it was Netflix, and they \nhad this Chaos Monkey idea, where literally, they  ",
    "start": "2530640",
    "end": "2536559"
  },
  {
    "text": "inject random failures into the system, and then \nforce people to deal with that, the developers  ",
    "start": "2536560",
    "end": "2545680"
  },
  {
    "text": "to deal with that. In the security area, something \nthat comes to mind is the idea of ethical hacking,  ",
    "start": "2545680",
    "end": "2552640"
  },
  {
    "text": "literally having people trying to hack into your \nsystem to expose security flaws, but of course,  ",
    "start": "2553760",
    "end": "2559680"
  },
  {
    "text": "people that, in a sense, work for you, or at \nleast are working against you, but ultimately,  ",
    "start": "2560240",
    "end": "2568400"
  },
  {
    "text": "in your long-term interest. I think is an \ninteresting technique to throw in. Because  ",
    "start": "2568400",
    "end": "2574160"
  },
  {
    "text": "the problem with many of these things \nis you don't know what you don't know.  Correct.\nHaving someone  ",
    "start": "2574720",
    "end": "2579760"
  },
  {
    "text": "else coming in, injecting real-world \nkind of errors or real-world kind of  ",
    "start": "2579760",
    "end": "2584720"
  },
  {
    "text": "hacking or security breaches into your system \nis ultimately a good thing because developers  ",
    "start": "2585600",
    "end": "2591360"
  },
  {
    "text": "can very often have kind of a tunnel vision, where \nthey can only see the kinds of problems that they  ",
    "start": "2591360",
    "end": "2598720"
  },
  {
    "text": "have encountered before, they're not familiar \nwith, perhaps, new kinds of ways to get into  ",
    "start": "2598720",
    "end": "2604240"
  },
  {
    "text": "the system. I think those are really \ninteresting ways to make sure that the  ",
    "start": "2604800",
    "end": "2613280"
  },
  {
    "text": "architecture is evolving as you're developing, and \nas you're developing the rest of the application.",
    "start": "2613280",
    "end": "2618640"
  },
  {
    "text": "I was going to say the message here \nis don't wait for the Friday before   you roll things into production. Make sure that \nyour first performance, scalability, security,  ",
    "start": "2618640",
    "end": "2631599"
  },
  {
    "text": "resilience are run often so that you can learn \nfrom that, and hopefully, adjust your decisions.",
    "start": "2631600",
    "end": "2637440"
  },
  {
    "text": "One of the things that architects have \nbeen accused of doing in the past is,  ",
    "start": "2639600",
    "end": "2644720"
  },
  {
    "start": "2640000",
    "end": "3004000"
  },
  {
    "text": "in a sense, continuing to polish something \nand perfect it,  to overinvest in perfection.  ",
    "start": "2648160",
    "end": "2658480"
  },
  {
    "text": "I think an interesting question is how does an \narchitect decide what is good enough? Because,  ",
    "start": "2659760",
    "end": "2666080"
  },
  {
    "text": "you know, it's never going to be perfect, and \nyou know, you can waste a lot of time and effort,  ",
    "start": "2666080",
    "end": "2671040"
  },
  {
    "text": "in a sense, developing a solution \nto a problem that doesn't exist.  ",
    "start": "2673200",
    "end": "2678079"
  },
  {
    "text": "So, how does continuous...I can \nsee how continuous architecture   might work that way, but I think...could \nyou say a little bit more about that? ",
    "start": "2678800",
    "end": "2686640"
  },
  {
    "text": "Yes. So, we have principle number one, right, \nyou're trying to develop a product, not a project.  ",
    "start": "2688080",
    "end": "2695200"
  },
  {
    "text": "The difference is a product as a long-term view, \nbut also, you want the product to be in the hands  ",
    "start": "2696880",
    "end": "2702079"
  },
  {
    "text": "of your customers early, a minimal viable product \nso that you can get feedback. The whole point  ",
    "start": "2702080",
    "end": "2708080"
  },
  {
    "text": "is to get feedback on what you have done. So, \nI think that waiting for a system to be perfect  ",
    "start": "2708080",
    "end": "2714960"
  },
  {
    "text": "is pointless. What you do is you \nbuild a system that is good enough,  ",
    "start": "2715520",
    "end": "2722000"
  },
  {
    "text": "meets your quality attribute requirements as you \nknow them. Not the ones that may happen a year   from now, but the quality attribute requirements \nas you know them now, okay? And you move the  ",
    "start": "2723200",
    "end": "2732960"
  },
  {
    "text": "thing in production, and most importantly, \nyou implement so you can collect feedback  ",
    "start": "2732960",
    "end": "2738160"
  },
  {
    "text": "both on a functional basis, do people like it, \ndo your customers like it or not, do they use it,  ",
    "start": "2738880",
    "end": "2744720"
  },
  {
    "text": "and on an operational basis, which is doing \nthe system really perform to expectations,   does it scale, and so on. Based on that \nfeedback, your choice of decisions just  ",
    "start": "2745360",
    "end": "2754800"
  },
  {
    "text": "keeps on going and going and going, so the number \nof cycles is infinite. I mean, you're going to be  ",
    "start": "2754800",
    "end": "2760880"
  },
  {
    "text": "cycling forever. But the thing is, you build a \nsystem that is very, very resilient to change,  ",
    "start": "2761840",
    "end": "2768000"
  },
  {
    "text": "and at the end of the day, it is \nsustainable, which is the goal. ",
    "start": "2768560",
    "end": "2773840"
  },
  {
    "text": "Are there potential traps that people can run \ninto, that they go too far down a particular path,  ",
    "start": "2775120",
    "end": "2782400"
  },
  {
    "text": "and how could you recognize that you, in a \nsense, you're going too far down the path?  ",
    "start": "2782400",
    "end": "2787839"
  },
  {
    "text": "So, and what I see in what you just said \nis that there's this balance between  ",
    "start": "2790080",
    "end": "2795520"
  },
  {
    "text": "meeting the needs that you have today, \nand anticipating the potential growth  ",
    "start": "2796480",
    "end": "2803119"
  },
  {
    "text": "tomorrow. So, I don't know if this happened \nto anybody. Yesterday was the Super Bowl,  ",
    "start": "2803120",
    "end": "2809120"
  },
  {
    "text": "and you know, there were ads run on the Super \nBowl. I remember having a conversation with  ",
    "start": "2810560",
    "end": "2817440"
  },
  {
    "text": "someone one time, and they used this phrase \nthat I love, called \"catastrophic success.\"  ",
    "start": "2817440",
    "end": "2822560"
  },
  {
    "text": "And what that was is that...\nGood one.  You're a little startup, your company buys \ntime runs an ad, and gets a lot of interest,  ",
    "start": "2823280",
    "end": "2833119"
  },
  {
    "text": "and all of a sudden you have orders of magnitude \nmore interest in your product or your website or  ",
    "start": "2833120",
    "end": "2840080"
  },
  {
    "text": "your service than you've ever had before. So I see \nthat there's a certain amount of meeting the needs  ",
    "start": "2840080",
    "end": "2850240"
  },
  {
    "text": "today, but anticipating the possible \nsort of growth of that product over time  ",
    "start": "2850240",
    "end": "2857840"
  },
  {
    "text": "so that you're not caught up in sort of a \ncatastrophic success kind of thing, all of a  ",
    "start": "2858480",
    "end": "2864640"
  },
  {
    "text": "sudden your product takes off, and you have a lot \nmore things. Maybe that would be one thing that  ",
    "start": "2864640",
    "end": "2872480"
  },
  {
    "text": "we could talk about, and then I want \nto get to one other last question. Yes. So very quickly, because I think we're \nrunning a bit out of time, I think one of the  ",
    "start": "2874720",
    "end": "2884480"
  },
  {
    "text": "best examples, Kurt, was what happened in 2020 \nwith the COVID situation, where a lot of people  ",
    "start": "2884480",
    "end": "2891840"
  },
  {
    "text": "worked from home, and they got into retail \ntrading of securities, and a lot of companies  ",
    "start": "2892720",
    "end": "2900720"
  },
  {
    "text": "got very badly surprised with the volume. I'm \nnot only just talking about small companies,  ",
    "start": "2900720",
    "end": "2905440"
  },
  {
    "text": "not just the Robin Hood of this world, but also \nlarge brokers and large investment companies. They  ",
    "start": "2906080",
    "end": "2912960"
  },
  {
    "text": "started having some outages, and the outages will \nhappen at the worst possible time, typically when  ",
    "start": "2912960",
    "end": "2918720"
  },
  {
    "text": "the markets were gyrating crazily, and when people \nwanted to trade, they could not trade anymore. How  ",
    "start": "2919840",
    "end": "2926000"
  },
  {
    "text": "do you prevent that? There is no perfect recipe, \nbut at least as part of your resilience strategy,  ",
    "start": "2926000",
    "end": "2931600"
  },
  {
    "text": "you can build enough guardrails so that, \nnumber one, you know what's going on.   This is where instrumentation becomes so \nimportant, you know exactly what's going on.  ",
    "start": "2932320",
    "end": "2942320"
  },
  {
    "text": "The number two is you recover from failures. \nThere are strategies on that, there are  ",
    "start": "2942320",
    "end": "2948320"
  },
  {
    "text": "tactics on that. Actually, in the book, we \ntalk about quite a few of them, bulk walls,  ",
    "start": "2948320",
    "end": "2955440"
  },
  {
    "text": "circuit breakers, and so on. The idea is really \nto try to plan for failure, so to try to kind of  ",
    "start": "2955440",
    "end": "2963200"
  },
  {
    "text": "realize that failure will happen. Your \nad will be catastrophically successful,   to use your term, and basically, what's going \nto happen is you're going to have the volume  ",
    "start": "2963200",
    "end": "2974079"
  },
  {
    "text": "which you don't expect. What do you do \nat this point? Well, some people believe   when you run on the cloud, some people believe \nthat scalability is the primary cloud provider.  ",
    "start": "2974080",
    "end": "2983039"
  },
  {
    "text": "It's not, okay? It doesn't matter how much \nhorsepower you have on your infrastructure,  ",
    "start": "2983040",
    "end": "2989280"
  },
  {
    "text": "at some point, you're going to run out of \nsomething, and your systems will collapse. So,   the whole point is to anticipate that potential \ncollapse and to try to put measures in place  ",
    "start": "2989280",
    "end": "3000320"
  },
  {
    "text": "that will avoid the catastrophe thing happening.\nGreat. Well, I think just to wrap up, and this has  ",
    "start": "3000320",
    "end": "3009040"
  },
  {
    "start": "3004000",
    "end": "3114000"
  },
  {
    "text": "been a great discussion...\nAbsolutely. I always learn a lot from talking with you, \nI think to leave the listener with...could we  ",
    "start": "3009040",
    "end": "3019599"
  },
  {
    "text": "leave the listener with a couple of ideas they \ncould maybe just get started with tomorrow,  ",
    "start": "3019600",
    "end": "3025120"
  },
  {
    "text": "regardless of what their role is, whether they're \nan architect or developer, or perhaps a manager   who's got some oversight over teams that \nare dealing with architectural issues? What  ",
    "start": "3025680",
    "end": "3034799"
  },
  {
    "text": "are some things that people could take away to get \nstarted? Other than reading your book, of course. ",
    "start": "3034800",
    "end": "3040960"
  },
  {
    "text": "Of course. So, the two things I would advise our \nlisteners to look at to get started, number one,  ",
    "start": "3042400",
    "end": "3049839"
  },
  {
    "text": "look at the principles, the six principles. \nI mean, they are very, very useful. Again,   they are not revolutionary, but today, they really \nkind of define how we think about architecture.  ",
    "start": "3049840",
    "end": "3059520"
  },
  {
    "text": "But the second thing, I believe, is the four \nquality attributes. The four essential activities.  ",
    "start": "3060720",
    "end": "3066800"
  },
  {
    "text": "Focusing on quality attributes is the \nfirst one. That's very important. Drive  ",
    "start": "3069280",
    "end": "3074960"
  },
  {
    "text": "and revisit your architecture decisions. It's all \nabout decisions again, decisions are important.  ",
    "start": "3074960",
    "end": "3079680"
  },
  {
    "text": "Know your technical debt.  Anything you do is \ngoing to affect the thing called technical debt,  ",
    "start": "3081040",
    "end": "3087040"
  },
  {
    "text": "and probably have an impact on cost. The last \none is to implement your feedback loops. Feedback  ",
    "start": "3087600",
    "end": "3094400"
  },
  {
    "text": "loops are so important. It's important to \nknow what happens in your system. Again,   nobody is 100% right. Statistically, 50% \nof the time you're going to be wrong.  ",
    "start": "3094400",
    "end": "3104000"
  },
  {
    "text": "It's important to learn from your mistakes, \nand get better decisions next time around. ",
    "start": "3105200",
    "end": "3110000"
  },
  {
    "text": "That's great advice. For those of you who want to \nlearn more about this, I read the books, both the  ",
    "start": "3111520",
    "end": "3120080"
  },
  {
    "start": "3114000",
    "end": "3150000"
  },
  {
    "text": "original Continuous Architecture book, and the \nApplied book, and I'd recommend reading both  ",
    "start": "3120080",
    "end": "3126560"
  },
  {
    "text": "to learn more. So anyway, thank you, \nPierre. Thank you for a great conversation.  Thank you. That was great. \nHave a great day. Thank you.",
    "start": "3127600",
    "end": "3137840"
  }
]