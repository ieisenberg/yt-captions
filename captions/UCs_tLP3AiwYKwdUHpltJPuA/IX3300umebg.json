[
  {
    "start": "0",
    "end": "256000"
  },
  {
    "text": "[Music]",
    "start": "4370",
    "end": "8889"
  },
  {
    "text": "thanks y'all so yeah um I'm going to talk about scaling python for machine learning specifically I'm going to talk",
    "start": "14900",
    "end": "21539"
  },
  {
    "text": "about going Beyond data parallelism um I think a lot of us are probably",
    "start": "21539",
    "end": "27060"
  },
  {
    "text": "familiar with data parallelism but if you're not that's okay we'll we'll go into it a little bit",
    "start": "27060",
    "end": "32599"
  },
  {
    "text": "and there will be a lot of pictures of dogs because I miss my dog this is Professor Timbit and don't",
    "start": "32600",
    "end": "40739"
  },
  {
    "text": "actually remember the Stock's name not my dog but Professor Timbit will will",
    "start": "40739",
    "end": "45840"
  },
  {
    "text": "feature prominently throughout so if you someone out just look at the dog he's cute",
    "start": "45840",
    "end": "51120"
  },
  {
    "text": "okay so uh I guess we've already sort of met me but we're gonna we're gonna go on",
    "start": "51120",
    "end": "56219"
  },
  {
    "text": "a super fun motorcycle adventure together also known as uh the photos",
    "start": "56219",
    "end": "61739"
  },
  {
    "text": "that I have on my phone are of motorcycles and my dog um we're going to talk about what data",
    "start": "61739",
    "end": "67439"
  },
  {
    "text": "parallelism is why it might not be enough for all of our use cases we're gonna look at a use case which isn't",
    "start": "67439",
    "end": "75540"
  },
  {
    "text": "exactly machine learning but I think it does a really good job of illustrating one of the Alternatives data parallelism",
    "start": "75540",
    "end": "81420"
  },
  {
    "text": "which is actors and we'll also talk about why you should definitely come and work",
    "start": "81420",
    "end": "88560"
  },
  {
    "text": "for my employer because they like it when I say that apparently",
    "start": "88560",
    "end": "94860"
  },
  {
    "text": "um okay yeah so I'm holding um I move mostly work on spark for for",
    "start": "94860",
    "end": "101040"
  },
  {
    "text": "open source I'm on the PMC which is like",
    "start": "101040",
    "end": "106860"
  },
  {
    "text": "tenure except you don't guarantee that you get paid you just guarantee that you get work so it's like the shitty part of",
    "start": "106860",
    "end": "114600"
  },
  {
    "text": "tenure uh it's it's okay I've written a few books around mostly data processing",
    "start": "114600",
    "end": "121140"
  },
  {
    "text": "stuff I think they're pretty cool but I'm obviously pretty biased if you're",
    "start": "121140",
    "end": "126180"
  },
  {
    "text": "interested you should follow me on the social media I live stream a lot of my",
    "start": "126180",
    "end": "131420"
  },
  {
    "text": "mistakes so if you ever like feeling down about yourself and you're like I",
    "start": "131420",
    "end": "136739"
  },
  {
    "text": "really want to watch someone else struggle with incredibly basic tasks that she's done several times before",
    "start": "136739",
    "end": "143040"
  },
  {
    "text": "come and check out my live streams and you can feel good about yourself and sometimes you know we we do",
    "start": "143040",
    "end": "150239"
  },
  {
    "text": "interesting things that actually works but most of the time it's just failing",
    "start": "150239",
    "end": "155580"
  },
  {
    "text": "um in public together so you know keep it exciting uh yeah rocking so yeah in addition to",
    "start": "155580",
    "end": "163319"
  },
  {
    "text": "who I am professionally I'm trans queer Canadian part of the broader leather Community uh these things are not",
    "start": "163319",
    "end": "169920"
  },
  {
    "text": "directly related to software in in any particular way",
    "start": "169920",
    "end": "175260"
  },
  {
    "text": "um when I talk to jvm people I say there's no magic uh decoder ring for jvm",
    "start": "175260",
    "end": "180900"
  },
  {
    "text": "stack traces that they give to Canadians um similarly we don't have any magic uh",
    "start": "180900",
    "end": "187800"
  },
  {
    "text": "secret GDB Canadian only version for understanding python core dumps",
    "start": "187800",
    "end": "193680"
  },
  {
    "text": "um there's there's nothing magical about this but I think especially because we're talking about machine learning",
    "start": "193680",
    "end": "198900"
  },
  {
    "text": "it's important for us to try and have more diverse communities involved in",
    "start": "198900",
    "end": "204720"
  },
  {
    "text": "building our machine learning tools and models because otherwise we'll just end up reinforcing all of the world's",
    "start": "204720",
    "end": "212300"
  },
  {
    "text": "existing Badness but by putting inside of a magical black box that we can't introspect and so if when you you when",
    "start": "212300",
    "end": "220019"
  },
  {
    "text": "you are you know meeting with your team and you realize like hey we all went to",
    "start": "220019",
    "end": "225299"
  },
  {
    "text": "UC Berkeley class of 2020 and and someone from 2019 you know that's cool",
    "start": "225299",
    "end": "231239"
  },
  {
    "text": "that might not be a diverse enough crew to really be building uh good machine learning tools",
    "start": "231239",
    "end": "237840"
  },
  {
    "text": "um I make this joke slightly ingest but a lot of these tools are built by class",
    "start": "237840",
    "end": "244920"
  },
  {
    "text": "of 2019 and 2018. you see Berkeley um great folks but you know it's it's",
    "start": "244920",
    "end": "250920"
  },
  {
    "text": "good to have some people with different experiences and backgrounds in the room",
    "start": "250920",
    "end": "256159"
  },
  {
    "start": "256000",
    "end": "374000"
  },
  {
    "text": "so I also have a bunch of like more relevant biases I'm used to working with",
    "start": "256560",
    "end": "262079"
  },
  {
    "text": "really large scale data sets if you are working with smaller scale data sets the",
    "start": "262079",
    "end": "267600"
  },
  {
    "text": "things that I'm going to say may not be relevant to you you should you should be aware of that these you know I've mostly",
    "start": "267600",
    "end": "275699"
  },
  {
    "text": "worked at the platform level for the past while which means I'm a little bit out of touch with people who accomplish",
    "start": "275699",
    "end": "281400"
  },
  {
    "text": "actual tasks I make software to help other people make software and so as",
    "start": "281400",
    "end": "288060"
  },
  {
    "text": "such I I get distracted sometimes by shiny new things and you may like look",
    "start": "288060",
    "end": "293759"
  },
  {
    "text": "at these things and say like Holden this is a great shiny new abstraction it's not for me and and you should not",
    "start": "293759",
    "end": "300479"
  },
  {
    "text": "feel like you have to listen to me um also I think these tools are pretty",
    "start": "300479",
    "end": "305580"
  },
  {
    "text": "cool I've contributed to them there are other tools as well and there is that bias where when we've worked on tools we",
    "start": "305580",
    "end": "312900"
  },
  {
    "text": "can think they work well in my case I don't think they work well I think they're all garbage but they're garbage",
    "start": "312900",
    "end": "319500"
  },
  {
    "text": "that I'm familiar with and you might be familiar with other garbage and you should use that or if you're familiar with things that work that's amazing",
    "start": "319500",
    "end": "325800"
  },
  {
    "text": "that's that's great never heard of it I'm super excited also I think",
    "start": "325800",
    "end": "331080"
  },
  {
    "text": "functional programming is cool um you can see that I had a weird upbringing because my idea of what is",
    "start": "331080",
    "end": "337500"
  },
  {
    "text": "cool is largely formed from 1990s Genco jeans and functional programming",
    "start": "337500",
    "end": "344900"
  },
  {
    "text": "growing up next door to an engineer in the 90s gives you all kinds of weird Vibes but if you don't think functional",
    "start": "344900",
    "end": "352020"
  },
  {
    "text": "programming is cool that's okay uh some of the things that I'm going to say today you're probably going to just be",
    "start": "352020",
    "end": "357479"
  },
  {
    "text": "like um not for me once again and that's okay right like maybe you just really",
    "start": "357479",
    "end": "363120"
  },
  {
    "text": "love mutating state with locks and zookeeper and that's you do you not for",
    "start": "363120",
    "end": "369780"
  },
  {
    "text": "me but you know whatever these are these are all fine okay so what is data parallelism and and",
    "start": "369780",
    "end": "377580"
  },
  {
    "start": "374000",
    "end": "712000"
  },
  {
    "text": "why are we going to go beyond it so the classic version of data parallelism is we split up our our data into a bunch of",
    "start": "377580",
    "end": "384840"
  },
  {
    "text": "things called partitions often this will be keyed we'll have like a key value pairs but not always we could just have",
    "start": "384840",
    "end": "391319"
  },
  {
    "text": "thousands and thousands of like rows and they're just they're just there and we split them up",
    "start": "391319",
    "end": "397319"
  },
  {
    "text": "um generally speaking then we apply the same logic either row wise are partition wise but we generally apply the same",
    "start": "397319",
    "end": "404699"
  },
  {
    "text": "function to all of our data and then at some point we'll recombine the partitions in some way we'll do a",
    "start": "404699",
    "end": "411300"
  },
  {
    "text": "shuffle or we'll do a reduce or something because it turns out that we can't always just apply the same logic",
    "start": "411300",
    "end": "417660"
  },
  {
    "text": "to each partition but most of our work in data parallelism is sort of around",
    "start": "417660",
    "end": "423900"
  },
  {
    "text": "this idea of we have many many copies or different variations of a thing and we",
    "start": "423900",
    "end": "429060"
  },
  {
    "text": "want to do the same thing to that and that's great um I also have this fantastic fantastic",
    "start": "429060",
    "end": "435060"
  },
  {
    "text": "PDF that's in progress called distributed computing for kids which is",
    "start": "435060",
    "end": "440400"
  },
  {
    "text": "focused around data parallelism so if this like you know 10 second refresher",
    "start": "440400",
    "end": "445500"
  },
  {
    "text": "isn't enough for you that's okay you should definitely check out distributed computing for kids",
    "start": "445500",
    "end": "451520"
  },
  {
    "text": "to get sort of the vibe of how to do Apache spark programming in Python for",
    "start": "451520",
    "end": "459840"
  },
  {
    "text": "ages I would say six and up but people tell me that I'm crazy so maybe more like 12",
    "start": "459840",
    "end": "465599"
  },
  {
    "text": "and up whatever okay so when is this not enough right um",
    "start": "465599",
    "end": "471120"
  },
  {
    "text": "so here we see Professor Timbit and an empty bowl of food clearly this is not enough we have made a mistake there",
    "start": "471120",
    "end": "477900"
  },
  {
    "text": "should be more food um but there's there's a bunch of things where data parallelism just isn't really",
    "start": "477900",
    "end": "483720"
  },
  {
    "text": "well suited to to helping us scale right model weights uh if you saw the",
    "start": "483720",
    "end": "489900"
  },
  {
    "text": "reinforcement learning talk Yesterday by Dean it was amazing data parallelism not",
    "start": "489900",
    "end": "495780"
  },
  {
    "text": "great for reinforcement learning right we have all kinds of state that we need to keep track of and data parallelism",
    "start": "495780",
    "end": "501900"
  },
  {
    "text": "just really isn't designed to keep track of a lot of State for us the other one",
    "start": "501900",
    "end": "507240"
  },
  {
    "text": "is it our tasks are a bit like heavier weight in in sort of data parallelism",
    "start": "507240",
    "end": "513060"
  },
  {
    "text": "world and so if we've got lots of tiny tiny little tasks generally speaking the",
    "start": "513060",
    "end": "518219"
  },
  {
    "text": "schedulers for data parallelism aren't going to excel there non-uniform tasks this one is is really",
    "start": "518219",
    "end": "525000"
  },
  {
    "text": "the kicker yeah we could of course write a map expression which will just you",
    "start": "525000",
    "end": "530100"
  },
  {
    "text": "know have 200 if else conditions inside of it to apply different logic to each",
    "start": "530100",
    "end": "535800"
  },
  {
    "text": "element it's probably kind of ugly right we",
    "start": "535800",
    "end": "540899"
  },
  {
    "text": "probably don't want to do it you could but really if you've got non-uniform tasks data parallelism well you could",
    "start": "540899",
    "end": "548580"
  },
  {
    "text": "probably force it to do some of what you want to do it's not going to be the nice happy abstraction that you want",
    "start": "548580",
    "end": "555839"
  },
  {
    "text": "so what are we going to do instead so we've got choices right and here we see that Professor Timbit has chosen the",
    "start": "555839",
    "end": "562260"
  },
  {
    "text": "cream cheese over the kibble very smart similarly we're going to try and choose our version of the cream cheese instead",
    "start": "562260",
    "end": "568920"
  },
  {
    "text": "of the kibble so to be clear because of my bias I'm used to working with really",
    "start": "568920",
    "end": "575519"
  },
  {
    "text": "large data sets and so I tend to skip over local Solutions right if Solutions",
    "start": "575519",
    "end": "581100"
  },
  {
    "text": "are only going to work on one computer they're probably not going to work for dollar sign glorious employer",
    "start": "581100",
    "end": "587779"
  },
  {
    "text": "but they may work for your dollar sign glorious employer and so locally you can",
    "start": "587779",
    "end": "593279"
  },
  {
    "text": "use things like joblib and multi-processing and then you can do shared state with locks and",
    "start": "593279",
    "end": "598320"
  },
  {
    "text": "I mean that doesn't sound fun but you can do it and it'll probably be a lot",
    "start": "598320",
    "end": "603660"
  },
  {
    "text": "better alternatively in the distributed world we can do distributed tasks and we",
    "start": "603660",
    "end": "610019"
  },
  {
    "text": "can just distributed actors how many people are familiar with the actor model",
    "start": "610019",
    "end": "616279"
  },
  {
    "text": "so a few people this is exciting I'm really excited and and for those of you who are familiar with",
    "start": "616339",
    "end": "622620"
  },
  {
    "text": "my apologies for later but this this is fine okay um and we can also of course do that",
    "start": "622620",
    "end": "628500"
  },
  {
    "text": "same blocks and shared memory approach it's just going to be a lot slower because we're going to have to use distributed locks like zookeeper and all",
    "start": "628500",
    "end": "635519"
  },
  {
    "text": "that stuff and we can also use databases they're not bad um they're they're pretty good for",
    "start": "635519",
    "end": "640920"
  },
  {
    "text": "tracking State uh but there's there's some downsides of course okay",
    "start": "640920",
    "end": "646160"
  },
  {
    "text": "so why is this hard right why is moving beyond data parallelism hard so",
    "start": "646620",
    "end": "652680"
  },
  {
    "text": "fundamentally our our problems here come down to the fact that we're working with distributed computing and as Leslie",
    "start": "652680",
    "end": "659100"
  },
  {
    "text": "Lamport says a distributed system is one in which the failure of a computer you didn't even know existed can render your",
    "start": "659100",
    "end": "664800"
  },
  {
    "text": "own computer unusable um and this is we see this in spark we",
    "start": "664800",
    "end": "669839"
  },
  {
    "text": "see this in in pretty much everything dasque um and the problem is the computers are",
    "start": "669839",
    "end": "675899"
  },
  {
    "text": "are like you know they're the computers that I have in my little rack in the data center they're garbage I bought",
    "start": "675899",
    "end": "681180"
  },
  {
    "text": "them on eBay um and you might be going like Holden I run in the cloud my computers are of",
    "start": "681180",
    "end": "686700"
  },
  {
    "text": "course the finest best computers they're never going to fail I've got bad news for you they're",
    "start": "686700",
    "end": "692519"
  },
  {
    "text": "going to fail too they might not have been bought on eBay but they were certainly certainly put together by",
    "start": "692519",
    "end": "698279"
  },
  {
    "text": "someone who has not slept anywhere near as much as they should thanks to the",
    "start": "698279",
    "end": "703860"
  },
  {
    "text": "magic of capitalism okay um I can't joke too hard about",
    "start": "703860",
    "end": "709079"
  },
  {
    "text": "capitalism because I enjoy uh eating um okay yeah so what do our distributed",
    "start": "709079",
    "end": "715680"
  },
  {
    "start": "712000",
    "end": "769000"
  },
  {
    "text": "tasks look like now this is a bit of a stretch because this is a picture at Disneyland but it's",
    "start": "715680",
    "end": "721560"
  },
  {
    "text": "a picture at Disneyland Japan so we can think of our distributed tasks as like",
    "start": "721560",
    "end": "726839"
  },
  {
    "text": "we send someone to Disneyland and then we send someone else to Disneyland Japan",
    "start": "726839",
    "end": "732300"
  },
  {
    "text": "and we both ask them to go and get us some Mickey Mouse ears right and because",
    "start": "732300",
    "end": "737459"
  },
  {
    "text": "of this we can achieve a greater level of parallelism than we could if we only sent people to Disneyland California",
    "start": "737459",
    "end": "744180"
  },
  {
    "text": "because we've got two Disneylands to load balance over",
    "start": "744180",
    "end": "749459"
  },
  {
    "text": "okay there's like one person that likes Disneyland or at least is willing to to pretend okay the other one is uh",
    "start": "749459",
    "end": "756420"
  },
  {
    "text": "functions with decorators or in this case we can wear our Mickey mere hat Mickey Mouse ears or our Pooh Bear hats",
    "start": "756420",
    "end": "764160"
  },
  {
    "text": "um also acquired at Disneyland so what we do is we take a thing and we put a",
    "start": "764160",
    "end": "770040"
  },
  {
    "start": "769000",
    "end": "822000"
  },
  {
    "text": "decorator on it decorator magical at Das delayed so this",
    "start": "770040",
    "end": "776700"
  },
  {
    "text": "is our hat or Mickey Mouse ears that we put on top of our remote function and now our remote function can get",
    "start": "776700",
    "end": "783360"
  },
  {
    "text": "scheduled anywhere in our cluster um and normally you know we'll get the same result of regardless of where we're",
    "start": "783360",
    "end": "790139"
  },
  {
    "text": "running here intentionally I've written it so that we get different results depending on where we are running so",
    "start": "790139",
    "end": "796980"
  },
  {
    "text": "that we can actually verify that like yes this is running on a different computer so we can tell the difference",
    "start": "796980",
    "end": "802740"
  },
  {
    "text": "between uh Disneyland California and Disneyland Japan so it's very important the Mickey Mouse ears generally look the",
    "start": "802740",
    "end": "809579"
  },
  {
    "text": "same but if you pay attention the tags are a little bit different and that's that's essentially what we're doing here",
    "start": "809579",
    "end": "815160"
  },
  {
    "text": "with socket get hostname is we're checking to see if we're in California or Japan",
    "start": "815160",
    "end": "821300"
  },
  {
    "start": "822000",
    "end": "843000"
  },
  {
    "text": "okay and similarly the other toolkit that we can use to do this is Ray and uh",
    "start": "822360",
    "end": "828360"
  },
  {
    "text": "we can see very different instead of Das delayed it's Ray remote these things are",
    "start": "828360",
    "end": "835019"
  },
  {
    "text": "definitely different 100 percent 100",
    "start": "835019",
    "end": "840420"
  },
  {
    "text": "um so let's let's talk about how they are different so dasc uh and Ray are both Frameworks",
    "start": "840420",
    "end": "847019"
  },
  {
    "start": "843000",
    "end": "1121000"
  },
  {
    "text": "to allow us to go sort of Beyond data parallelism and they both give us this",
    "start": "847019",
    "end": "852480"
  },
  {
    "text": "sort of delayed slash remote concept and they're",
    "start": "852480",
    "end": "858420"
  },
  {
    "text": "very similar that's delay defaults to Lazy computation so what I like to think",
    "start": "858420",
    "end": "863940"
  },
  {
    "text": "of is dask is me as a teenager who when I ask them to go and take the garbage",
    "start": "863940",
    "end": "869579"
  },
  {
    "text": "out they don't they say they did but they don't and it's only once I go and I",
    "start": "869579",
    "end": "875459"
  },
  {
    "text": "check and I see that the garbage is there that they actually go around to taking the garbage out Ray remote on the",
    "start": "875459",
    "end": "882360"
  },
  {
    "text": "other hand is like I want to say like 10 year old me who still had hopes and dreams who when you",
    "start": "882360",
    "end": "889740"
  },
  {
    "text": "asked to take the garbage out would of course take the garbage out right away and then when you go to check yes the",
    "start": "889740",
    "end": "895199"
  },
  {
    "text": "garbage is not there it's it's great now functionally these these don't make a",
    "start": "895199",
    "end": "900600"
  },
  {
    "text": "huge difference right um lazy versus eager with lazy evaluation sometimes Das can",
    "start": "900600",
    "end": "908339"
  },
  {
    "text": "combine a bunch of work together which is nice and if you're used to working with spark you'll see or other data",
    "start": "908339",
    "end": "916139"
  },
  {
    "text": "parallel things lazy is a pretty common sort of approach used in the data",
    "start": "916139",
    "end": "921720"
  },
  {
    "text": "parallel world to allow for chaining of tasks you can also chain tasks with Ray",
    "start": "921720",
    "end": "927720"
  },
  {
    "text": "remote but it's more of a sort of schedule flow",
    "start": "927720",
    "end": "933240"
  },
  {
    "text": "rather than a strict saving of computation time",
    "start": "933240",
    "end": "938339"
  },
  {
    "text": "um another minor difference is dasc uses a centralized scheduler and Rey uses a",
    "start": "938339",
    "end": "945240"
  },
  {
    "text": "bottom up quasi-distributed scheduler uh and if you're going like I don't know",
    "start": "945240",
    "end": "951180"
  },
  {
    "text": "what the difference is between these two that's that's pretty normal and fine",
    "start": "951180",
    "end": "956459"
  },
  {
    "text": "essentially the the downside of dasc here is that if",
    "start": "956459",
    "end": "962220"
  },
  {
    "text": "we schedule like I don't know an Imperial uh I probably",
    "start": "962220",
    "end": "969540"
  },
  {
    "text": "shouldn't swear a very large large number of tasks uh everything does get",
    "start": "969540",
    "end": "974820"
  },
  {
    "text": "routed through this one Central Computer for scheduling purposes and that's you know not ideal at super large scales on",
    "start": "974820",
    "end": "982680"
  },
  {
    "text": "the other hand you know it's worked pretty well uh wheat centralized scheduling",
    "start": "982680",
    "end": "989279"
  },
  {
    "text": "has has many benefits um gray on the other hand allows for",
    "start": "989279",
    "end": "994440"
  },
  {
    "text": "computers to schedule their own tasks to a certain degree and only if it can't be",
    "start": "994440",
    "end": "999959"
  },
  {
    "text": "scheduled locally does it get bubbled up to this other scheduler and reread it out to another computer and so there's",
    "start": "999959",
    "end": "1006079"
  },
  {
    "text": "there's like some minor trade-offs here functionally though the big difference",
    "start": "1006079",
    "end": "1011420"
  },
  {
    "text": "is lazy versus eager um okay",
    "start": "1011420",
    "end": "1018199"
  },
  {
    "text": "so right how are they the same right so they they both have uh distributed and",
    "start": "1018500",
    "end": "1023720"
  },
  {
    "text": "local scheduler options um so this is this is actually really neat I don't how many people here have used Apache Spark",
    "start": "1023720",
    "end": "1030500"
  },
  {
    "text": "okay uh have you used spark in local mode okay did it go well",
    "start": "1030500",
    "end": "1038720"
  },
  {
    "text": "okay that's that's a zero zero out of a small sample admittedly",
    "start": "1038720",
    "end": "1044360"
  },
  {
    "text": "um so spark has a local mode which was a really nice idea and and it didn't",
    "start": "1044360",
    "end": "1051200"
  },
  {
    "text": "work um fundamentally you can kind of use it for testing and that's about it on the other hand desk and Rey both have pretty",
    "start": "1051200",
    "end": "1058940"
  },
  {
    "text": "good local schedulers which I think is really cool because it means that if",
    "start": "1058940",
    "end": "1063980"
  },
  {
    "text": "you're in sort of the state where yeah you know that your company might grow to the point that you want to scale to",
    "start": "1063980",
    "end": "1070160"
  },
  {
    "text": "multiple computers but you're not there right now you can still use the Frameworks without having to run on a",
    "start": "1070160",
    "end": "1076940"
  },
  {
    "text": "cluster um and so that's kind of cool similarly they both support recursive scheduling",
    "start": "1076940",
    "end": "1083179"
  },
  {
    "text": "the asterisk means of course read a book to find out the many intricate details",
    "start": "1083179",
    "end": "1089780"
  },
  {
    "text": "and cases where this will not work but this is this is much nicer because you",
    "start": "1089780",
    "end": "1096020"
  },
  {
    "text": "can have like actual function trees you can write your code in a much more natural way",
    "start": "1096020",
    "end": "1102280"
  },
  {
    "text": "and while desk does default to Lazy evaluation you can can force Das to be",
    "start": "1102280",
    "end": "1109580"
  },
  {
    "text": "eager and get futures out of it um in in the same way so they both support futures",
    "start": "1109580",
    "end": "1115880"
  },
  {
    "text": "raid doesn't have the equivalent of lazy evaluation though so",
    "start": "1115880",
    "end": "1122059"
  },
  {
    "start": "1121000",
    "end": "1313000"
  },
  {
    "text": "okay that's great and all but we we were talking about how what the hard part was is the failure of a computer that we",
    "start": "1122059",
    "end": "1129559"
  },
  {
    "text": "knew nothing about was going to cause our job to fail right and so how are we",
    "start": "1129559",
    "end": "1135919"
  },
  {
    "text": "going to get around this problem right because we don't want to depend on that random stack of computers that I happen",
    "start": "1135919",
    "end": "1141140"
  },
  {
    "text": "to have down in Fremont California so we handle it by restarting tasks on",
    "start": "1141140",
    "end": "1147740"
  },
  {
    "text": "failure this is this is the same sort of approach as spark it's not the same approach as",
    "start": "1147740",
    "end": "1153980"
  },
  {
    "text": "Hadoop Hadoop the solution is you write out three copies of everything and you read it back on failure",
    "start": "1153980",
    "end": "1161000"
  },
  {
    "text": "um slightly slightly different the downside here though is",
    "start": "1161000",
    "end": "1166280"
  },
  {
    "text": "this means that if we have failure we just run it again and if we write a function that's doing something like say",
    "start": "1166280",
    "end": "1172160"
  },
  {
    "text": "taking money out of someone's account they might complain that we take two hundred dollars out of their account",
    "start": "1172160",
    "end": "1177740"
  },
  {
    "text": "instead of five because we execute this like Intel it",
    "start": "1177740",
    "end": "1183380"
  },
  {
    "text": "finally works and so this can be not good um and so this this is not perfect you",
    "start": "1183380",
    "end": "1190220"
  },
  {
    "text": "have to make sure that the code that you write is code that can be executed multiple times and if it's not then you",
    "start": "1190220",
    "end": "1197419"
  },
  {
    "text": "have to manually add your own checks to make sure that you're not causing",
    "start": "1197419",
    "end": "1202720"
  },
  {
    "text": "excessive withdrawal of money or other things like this so",
    "start": "1202720",
    "end": "1207919"
  },
  {
    "text": "that's all well and good um also interestingly uh much like Boo",
    "start": "1207919",
    "end": "1213380"
  },
  {
    "text": "here who is a stuffed animal not an actual live dog we can dress up just",
    "start": "1213380",
    "end": "1219080"
  },
  {
    "text": "like a person and pretend to be very human she is Boo of Bart Corp of",
    "start": "1219080",
    "end": "1224480"
  },
  {
    "text": "Delaware very legitimate company I'm assured nothing Shady definitely filed",
    "start": "1224480",
    "end": "1230240"
  },
  {
    "text": "their taxes but we can also make our distributed clusters look kind of like",
    "start": "1230240",
    "end": "1236299"
  },
  {
    "text": "local clusters and this is really important because we want to use tools like tensorflow or",
    "start": "1236299",
    "end": "1244400"
  },
  {
    "text": "you know other machine learning tools that probably weren't written with the idea of running on top of desk or Ray in",
    "start": "1244400",
    "end": "1251360"
  },
  {
    "text": "mind but they were written with the idea that like hey computers can do more than",
    "start": "1251360",
    "end": "1256460"
  },
  {
    "text": "one thing at a time and so we kind of want to slip in there and use their their existing local parallelism",
    "start": "1256460",
    "end": "1263480"
  },
  {
    "text": "technique and just swap it out with a distributed parallelism technique and hope nothing breaks in case you can't",
    "start": "1263480",
    "end": "1270500"
  },
  {
    "text": "tell some things will break but it does kind of work and so both dask and Rey",
    "start": "1270500",
    "end": "1277039"
  },
  {
    "text": "expose a job lib interface which allows them to sort of",
    "start": "1277039",
    "end": "1283840"
  },
  {
    "text": "pretend to just be one really weird big computer um to certain machine learning",
    "start": "1283840",
    "end": "1290299"
  },
  {
    "text": "algorithms and underneath the hood they use these tasks to to accomplish that and that's that's kind of I think it's",
    "start": "1290299",
    "end": "1297260"
  },
  {
    "text": "kind of neat um so essentially they put on glasses and go up to tensorflow and say hello I",
    "start": "1297260",
    "end": "1303679"
  },
  {
    "text": "am 200 computers I mean one computer with 200 cores no questions",
    "start": "1303679",
    "end": "1309260"
  },
  {
    "text": "um and then things go predictably okay now",
    "start": "1309260",
    "end": "1314720"
  },
  {
    "start": "1313000",
    "end": "1659000"
  },
  {
    "text": "um for the five people who had used sparked sorry spark I should really know that I've worked on that project for 10",
    "start": "1314720",
    "end": "1321320"
  },
  {
    "text": "years um yes spark does have tasks right and technically we could maybe sort of",
    "start": "1321320",
    "end": "1328340"
  },
  {
    "text": "accomplish the same thing in spark but in practice spark does not expose tasks",
    "start": "1328340",
    "end": "1334039"
  },
  {
    "text": "it simply uses this this task concept to achieve data parallelism and Spark does",
    "start": "1334039",
    "end": "1339980"
  },
  {
    "text": "not trust us with the tasks and it will not let us make our own tasks it's very sad maybe that will change but honestly",
    "start": "1339980",
    "end": "1348080"
  },
  {
    "text": "I don't think so I think more likely you know we'll just use Ray or desk instead",
    "start": "1348080",
    "end": "1355360"
  },
  {
    "text": "okay cool and now we're going to talk about actors and here we can see um continuing the Disneyland tradition I",
    "start": "1355760",
    "end": "1363140"
  },
  {
    "text": "think this is Disneyland California not Japan but my photos are not super organized",
    "start": "1363140",
    "end": "1369080"
  },
  {
    "text": "um but actors sort of go beyond the the basic task principle so with tasks if we",
    "start": "1369080",
    "end": "1376880"
  },
  {
    "text": "have state right we're kind of up a creek because these are just getting scheduled randomly somewhere on our",
    "start": "1376880",
    "end": "1383480"
  },
  {
    "text": "cluster and if we try and change something you know the next task that gets run it's not going to necessarily",
    "start": "1383480",
    "end": "1389659"
  },
  {
    "text": "see the variables that we changed in our previous task whereas actors get scheduled in a more persistent way and",
    "start": "1389659",
    "end": "1396860"
  },
  {
    "text": "we can use this to track state and we pass messages between the actors here we",
    "start": "1396860",
    "end": "1403820"
  },
  {
    "text": "can see the passing of the message we've got the Disney Signature book",
    "start": "1403820",
    "end": "1409700"
  },
  {
    "text": "being passed from actor 1 to actor 2 to request actor 2's signature who will",
    "start": "1409700",
    "end": "1416539"
  },
  {
    "text": "then return the signature sorry Disneyland okay um really though the the important thing",
    "start": "1416539",
    "end": "1422780"
  },
  {
    "text": "here is what we do is each actor is responsible for some State and they",
    "start": "1422780",
    "end": "1429200"
  },
  {
    "text": "communicate with other actors but other actors cannot directly change the state",
    "start": "1429200",
    "end": "1434299"
  },
  {
    "text": "that is inside of that actor right and this allows us to avoid the problem of",
    "start": "1434299",
    "end": "1439880"
  },
  {
    "text": "having to deal with distributed locks because we only have one person who is",
    "start": "1439880",
    "end": "1444919"
  },
  {
    "text": "responsible for some State and provided their processing the messages serially were okay everything is fine",
    "start": "1444919",
    "end": "1453260"
  },
  {
    "text": "um that is also foreshadowing to the time when everything is not fine and we will",
    "start": "1453260",
    "end": "1458419"
  },
  {
    "text": "get there soon okay so um for our actor example we're going to use",
    "start": "1458419",
    "end": "1465799"
  },
  {
    "text": "one of my many side projects which is a satellite communication device called",
    "start": "1465799",
    "end": "1471200"
  },
  {
    "text": "space beaver I'm Canadian and satellite space beaver",
    "start": "1471200",
    "end": "1477500"
  },
  {
    "text": "okay I thought it was funny um so what we do is we make this",
    "start": "1477500",
    "end": "1482780"
  },
  {
    "text": "satellite client we have to put in a bunch of annoying setup work don't worry about it you can find the sort of",
    "start": "1482780",
    "end": "1489200"
  },
  {
    "text": "boilerplate Code online I'll link to it in a little bit but then we can write",
    "start": "1489200",
    "end": "1494860"
  },
  {
    "text": "our super happy fun main function here and so this this run function is",
    "start": "1494860",
    "end": "1501620"
  },
  {
    "text": "actually just really terrible polling and this is because",
    "start": "1501620",
    "end": "1507440"
  },
  {
    "text": "it I love Hardware Engineers they're amazing when they write software they",
    "start": "1507440",
    "end": "1512720"
  },
  {
    "text": "really love polling interfaces and so to pull messages off of the satellite devices we end up sort of just pulling",
    "start": "1512720",
    "end": "1519260"
  },
  {
    "text": "and waiting for a message to become available because I don't have a way to subscribe for notifications and so this",
    "start": "1519260",
    "end": "1526159"
  },
  {
    "text": "is this is kind of funky and we end up putting this polling function inside of an actor so that's running consistently",
    "start": "1526159",
    "end": "1532220"
  },
  {
    "text": "in one place and we can we can track our estate and so this function just talks to",
    "start": "1532220",
    "end": "1537620"
  },
  {
    "text": "itself which is you know I mean like me in high school but you know it's it's",
    "start": "1537620",
    "end": "1543440"
  },
  {
    "text": "important actors can have their own State and they don't necessarily only have to respond to external events they",
    "start": "1543440",
    "end": "1550100"
  },
  {
    "text": "can they can have polling and other things happening similarly here we have",
    "start": "1550100",
    "end": "1555200"
  },
  {
    "text": "an actual function which we expect another actor to call this is the send message function",
    "start": "1555200",
    "end": "1561220"
  },
  {
    "text": "this doesn't super have to be inside of an actor we could maybe put this as a",
    "start": "1561220",
    "end": "1567200"
  },
  {
    "text": "remote function but once again because Hardware developers writing software",
    "start": "1567200",
    "end": "1572539"
  },
  {
    "text": "they get really annoyed when I try and send too many messages uh to their to",
    "start": "1572539",
    "end": "1578779"
  },
  {
    "text": "their back end at the same time so I used an actor here so that we would know that we were only sending a fixed number",
    "start": "1578779",
    "end": "1585080"
  },
  {
    "text": "of messages to the back end rather than just randomly scheduling them anywhere in our cluster and so here we take a",
    "start": "1585080",
    "end": "1591260"
  },
  {
    "text": "bunch of things and and we base 64 encoded because hey if we don't it makes the computer sad",
    "start": "1591260",
    "end": "1599360"
  },
  {
    "text": "okay uh right okay and then this is where we",
    "start": "1599360",
    "end": "1605000"
  },
  {
    "text": "we take our client base and we turn it into an actor and you feel look at this",
    "start": "1605000",
    "end": "1610100"
  },
  {
    "text": "you can see The Decorator that we're using or the hat that we've put on our function is uh pretty much the same",
    "start": "1610100",
    "end": "1616460"
  },
  {
    "text": "thing as before right we've got our Ray remote the difference here is sorry that it's on a class instead of a function",
    "start": "1616460",
    "end": "1623000"
  },
  {
    "text": "and when we put this decorator on a class array we'll turn it into an actor",
    "start": "1623000",
    "end": "1628760"
  },
  {
    "text": "for us instead of turning it into a remote task the other thing here is that we've specified Max restarts equals",
    "start": "1628760",
    "end": "1636260"
  },
  {
    "text": "minus one this means that we will restart this an infinite number of times",
    "start": "1636260",
    "end": "1643100"
  },
  {
    "text": "there are perhaps some problems with this choice but it's it's okay right it's better",
    "start": "1643100",
    "end": "1648200"
  },
  {
    "text": "than just saying like oh there was a problem I'm just gonna I'm just gonna walk away so okay this is this is like one actor",
    "start": "1648200",
    "end": "1655400"
  },
  {
    "text": "but actor systems generally you know you have a bunch of different actors um and so here we can see like these are",
    "start": "1655400",
    "end": "1663020"
  },
  {
    "start": "1659000",
    "end": "1893000"
  },
  {
    "text": "a bunch of actors that are all going to sort of exist and how they're going to talk to each other we've got a user",
    "start": "1663020",
    "end": "1668240"
  },
  {
    "text": "actor who's responsible for tracking user State it's going to talk to a database the other things aren't going",
    "start": "1668240",
    "end": "1673640"
  },
  {
    "text": "to directly talk to that database so we don't have to worry about locking on it satellite actor talks to the user actor",
    "start": "1673640",
    "end": "1680480"
  },
  {
    "text": "the SMS service um our male client our our mail server",
    "start": "1680480",
    "end": "1686720"
  },
  {
    "text": "is separate because computers and then we similarly we just have one thing talking to the satellites and that's",
    "start": "1686720",
    "end": "1693020"
  },
  {
    "text": "because when we had two things talking to the satellites they got confused and told us to go away and here we can see",
    "start": "1693020",
    "end": "1700039"
  },
  {
    "text": "this diagram redrawn by someone who uh draws diagrams and we can see why I",
    "start": "1700039",
    "end": "1706220"
  },
  {
    "text": "should not be allowed to draw diagrams and so this is what happens when you work with a publisher is they take",
    "start": "1706220",
    "end": "1713500"
  },
  {
    "text": "this and turn it into this pretty thanks O'Reilly",
    "start": "1714260",
    "end": "1721520"
  },
  {
    "text": "um yeah anyways same thing just more more readable",
    "start": "1721520",
    "end": "1727520"
  },
  {
    "text": "um okay so that's that's cool to an extent right",
    "start": "1727520",
    "end": "1732980"
  },
  {
    "text": "but I've been talking about how we're just gonna have one actor responsible for the user information and one actor",
    "start": "1732980",
    "end": "1738919"
  },
  {
    "text": "responsible for talking to the satellite service and so on and you might be going like Holden that sounds great but I",
    "start": "1738919",
    "end": "1745100"
  },
  {
    "text": "serve ads and if I had one actor responsible for serving ads",
    "start": "1745100",
    "end": "1751039"
  },
  {
    "text": "um I would have an exciting opportunity to find a new job and and that's that's that's a very real possibility is like",
    "start": "1751039",
    "end": "1757220"
  },
  {
    "text": "we need to scale our actors because even even with uh having our different pieces",
    "start": "1757220",
    "end": "1763279"
  },
  {
    "text": "distributed we may need more copies of the individual pieces and so we'll just",
    "start": "1763279",
    "end": "1768559"
  },
  {
    "text": "we'll just do that right um oh yeah okay so admittedly the architecture",
    "start": "1768559",
    "end": "1776419"
  },
  {
    "text": "diagram does start to look a little bit more like one of those roshar tests or whatever it is where you're just like I",
    "start": "1776419",
    "end": "1782059"
  },
  {
    "text": "see hmm six cows and a cheeseburger um and here it's like well I mean the we",
    "start": "1782059",
    "end": "1790279"
  },
  {
    "text": "just we just made a copy of everything everything's fine no problems everything's fine everything's fine okay",
    "start": "1790279",
    "end": "1798278"
  },
  {
    "text": "um oh wait okay yeah so in in practice right uh there's there is some some",
    "start": "1799039",
    "end": "1804919"
  },
  {
    "text": "trickiness that that has to happen here uh and that is we need to Route things uh somewhat consistently because",
    "start": "1804919",
    "end": "1812240"
  },
  {
    "text": "otherwise uh the the guarantee that we had where there was only going to be one",
    "start": "1812240",
    "end": "1818480"
  },
  {
    "text": "actor who was going to be modifying the user state it's not going to be true anymore right",
    "start": "1818480",
    "end": "1824240"
  },
  {
    "text": "because if we send a message to user actor one and user actor 2 if we if we send messages about the same",
    "start": "1824240",
    "end": "1830899"
  },
  {
    "text": "user to those two separate actors they might both modify the state and then bad things will happen and so similarly to",
    "start": "1830899",
    "end": "1838760"
  },
  {
    "text": "how in data parallelism we have sort of keyed values we can use the same sort of idea of keying the the state and so user",
    "start": "1838760",
    "end": "1847760"
  },
  {
    "text": "actor one will be responsible for users a through J and user actor 2 will be",
    "start": "1847760",
    "end": "1853220"
  },
  {
    "text": "responsible through J through Z and and similar things like this",
    "start": "1853220",
    "end": "1858440"
  },
  {
    "text": "um and there's there's little abstractions that you can do you don't have to manually write your own partitioning here",
    "start": "1858440",
    "end": "1865580"
  },
  {
    "text": "um if you're used to working with Kafka you know this should not sound super out",
    "start": "1865580",
    "end": "1871159"
  },
  {
    "text": "of left field it's a similar idea where we're going to have different partitions and we're going to have consumers who",
    "start": "1871159",
    "end": "1876500"
  },
  {
    "text": "are responsible for one partition at a time and this is going to allow us to like have them work semi-independently",
    "start": "1876500",
    "end": "1883760"
  },
  {
    "text": "and that's that's all kinds of good okay so that's great we'll scale it we'll just add more",
    "start": "1883760",
    "end": "1889820"
  },
  {
    "text": "copies of things everything's fine no problems but that Max restarts equals minus one",
    "start": "1889820",
    "end": "1897260"
  },
  {
    "start": "1893000",
    "end": "2023000"
  },
  {
    "text": "thing what happens when we restart an actor right if if we have put all of our",
    "start": "1897260",
    "end": "1902480"
  },
  {
    "text": "state inside of this if we restart it some bad things might happen",
    "start": "1902480",
    "end": "1907640"
  },
  {
    "text": "um and that is that is indeed the case so while Rey does indeed support restartable actors uh it's",
    "start": "1907640",
    "end": "1916760"
  },
  {
    "text": "it's the kind of support which it's technically there you just have to do everything yourself",
    "start": "1916760",
    "end": "1923620"
  },
  {
    "text": "um so you get to write your own recovery code uh which is great",
    "start": "1924080",
    "end": "1930559"
  },
  {
    "text": "um so if your actor is like the user actor and it's been saving all of its state in a database that's totally fine",
    "start": "1930559",
    "end": "1935960"
  },
  {
    "text": "right all you do is you re-establish your connection to the database on the other hand if you've been using a bunch",
    "start": "1935960",
    "end": "1941539"
  },
  {
    "text": "of in-memory stores and the computer was on fails you are going to have a bad",
    "start": "1941539",
    "end": "1948080"
  },
  {
    "text": "time and so you need to write some kind of persistence layer there are a few",
    "start": "1948080",
    "end": "1953240"
  },
  {
    "text": "different options um my co-author for the ray book Boris has a wonderful example using I want to",
    "start": "1953240",
    "end": "1960740"
  },
  {
    "text": "say S3 as sort of the persistence layer now of course there's sort of a trade-off of like do you always want to",
    "start": "1960740",
    "end": "1967399"
  },
  {
    "text": "block all the time until your your right has propagated to S3 or you want to just",
    "start": "1967399",
    "end": "1973279"
  },
  {
    "text": "kind of let go yeah close enough and uh just hope and hopes and dreams",
    "start": "1973279",
    "end": "1979940"
  },
  {
    "text": "classic classic software strategy um speaking of hopes and dreams you can",
    "start": "1979940",
    "end": "1985580"
  },
  {
    "text": "see the code for hopes and dreams uh uh in these in these two examples so the",
    "start": "1985580",
    "end": "1991399"
  },
  {
    "text": "the message back-end example um is the one that we looked at with all of those all of those actors and if you",
    "start": "1991399",
    "end": "1998779"
  },
  {
    "text": "want to see a whole bunch of different variations of applying these patterns you can look at the scaling python ml",
    "start": "1998779",
    "end": "2005440"
  },
  {
    "text": "example and you can see this for both Ray and dasc and so I think that's",
    "start": "2005440",
    "end": "2012760"
  },
  {
    "text": "that's cool uh the scaling part sorry the message back end Ray example is of course just in Rey and this is because",
    "start": "2012760",
    "end": "2019679"
  },
  {
    "text": "I'm I'm lazy um okay right so you might be going",
    "start": "2019679",
    "end": "2025000"
  },
  {
    "start": "2023000",
    "end": "2079000"
  },
  {
    "text": "holding this sounds cool but like you work at Netflix and last I heard Netflix",
    "start": "2025000",
    "end": "2030100"
  },
  {
    "text": "is not building a satellite communication device and to be clear if they were they would probably not tell",
    "start": "2030100",
    "end": "2036039"
  },
  {
    "text": "me uh but as far as I know yes we we do not make Satellite Communication back ends at Netflix we use Rey to train",
    "start": "2036039",
    "end": "2043059"
  },
  {
    "text": "machine learning models however it turns out the training machine learning models is kind of complicated",
    "start": "2043059",
    "end": "2050560"
  },
  {
    "text": "um as illustrated by the r lib talk from yesterday and so if you're interested in applying these techniques to train",
    "start": "2050560",
    "end": "2056560"
  },
  {
    "text": "machine learning models you should definitely do that and you should use I think reinforcement learning is is",
    "start": "2056560",
    "end": "2062138"
  },
  {
    "text": "really cool and the rlib library in Ray is one of the great tools to do it but there are all kinds of different ones",
    "start": "2062139",
    "end": "2068020"
  },
  {
    "text": "that you can try out and there's a fantastic blog post on how we are doing this for machine learning at Netflix",
    "start": "2068020",
    "end": "2077760"
  },
  {
    "text": "um the other one is uh dask does have actors right but we only really did a",
    "start": "2078220",
    "end": "2084040"
  },
  {
    "start": "2079000",
    "end": "2248000"
  },
  {
    "text": "walk through on reactors and you might be wondering to yourself Holden why you already showed me that dask and Rey are",
    "start": "2084040",
    "end": "2091599"
  },
  {
    "text": "are pretty similar for tasks and that's true raise approach sorry desks approach",
    "start": "2091599",
    "end": "2097359"
  },
  {
    "text": "to fault tolerance is hopes and dreams um and that's not the hopes and dreams with the like you get to write it",
    "start": "2097359",
    "end": "2103540"
  },
  {
    "text": "yourself recovery this is the like hopes and dreams that our computers just don't break",
    "start": "2103540",
    "end": "2109780"
  },
  {
    "text": "uh also known as no yeah",
    "start": "2109780",
    "end": "2115599"
  },
  {
    "text": "um so desk actor fault tolerance is not ideal and if you find yourself needing actors you should probably not be using dask",
    "start": "2115599",
    "end": "2123220"
  },
  {
    "text": "and I don't even think the desk people will be too upset at me saying that they might not be like super stoked but like I I'm pretty sure",
    "start": "2123220",
    "end": "2131020"
  },
  {
    "text": "I can still get them to have coffee with me sometime okay",
    "start": "2131020",
    "end": "2136119"
  },
  {
    "text": "um and you might be going okay so you said spark has tasks inside of it they're just not exposed does spark have",
    "start": "2136119",
    "end": "2142300"
  },
  {
    "text": "actors inside of it no um unless you count",
    "start": "2142300",
    "end": "2149680"
  },
  {
    "text": "um code AS performance art uh which is also known as the like occasionally",
    "start": "2149680",
    "end": "2156280"
  },
  {
    "text": "someone will enjoy a little bit of the California products and write some very",
    "start": "2156280",
    "end": "2162640"
  },
  {
    "text": "wonderful code that should never be deployed to production and there are",
    "start": "2162640",
    "end": "2167740"
  },
  {
    "text": "some people who have essentially just completely done terrible things to",
    "start": "2167740",
    "end": "2173740"
  },
  {
    "text": "schedule actors using data parallelism and the fact that they can kind of leave little things running behind inside of",
    "start": "2173740",
    "end": "2180099"
  },
  {
    "text": "the jvm uh and so like yes technically but in the way that yes technically",
    "start": "2180099",
    "end": "2185680"
  },
  {
    "text": "everything is a turing machine and nothing is impossible but please God don't okay",
    "start": "2185680",
    "end": "2193060"
  },
  {
    "text": "and now a word from my employer if you've ever said to yourself I wish I",
    "start": "2193060",
    "end": "2198640"
  },
  {
    "text": "was riding a bus to Los Gatos and here I am riding a bus to Los Gatos uh you",
    "start": "2198640",
    "end": "2205480"
  },
  {
    "text": "should come and work at Netflix uh more seriously though we we have rules that are both remote and in person",
    "start": "2205480",
    "end": "2212740"
  },
  {
    "text": "um it is not on my specific team so you don't have to worry about working with me uh but it is on our sister team so",
    "start": "2212740",
    "end": "2220859"
  },
  {
    "text": "you won't be able to get that far away from me um and I believe the roles are mostly",
    "start": "2220859",
    "end": "2228579"
  },
  {
    "text": "remote friendly but limited to inside of the US there are some",
    "start": "2228579",
    "end": "2235540"
  },
  {
    "text": "in Europe and some in Mexico but I'm less familiar with with those teams",
    "start": "2235540",
    "end": "2241560"
  },
  {
    "text": "regardless this website is more up to date than I am okay",
    "start": "2241560",
    "end": "2247180"
  },
  {
    "text": "but most importantly most importantly if you have a corporate credit card now is",
    "start": "2247180",
    "end": "2252700"
  },
  {
    "start": "2248000",
    "end": "2359000"
  },
  {
    "text": "the time to purchase several copies of uh which one do I make the most money on uh I think it's going to be scaling",
    "start": "2252700",
    "end": "2259780"
  },
  {
    "text": "python with dask um you should buy several copies several",
    "start": "2259780",
    "end": "2265720"
  },
  {
    "text": "copies more seriously if you're interested in these things I think they're pretty cool books but I was",
    "start": "2265720",
    "end": "2272079"
  },
  {
    "text": "involved with writing them and I do make money on them so I'm obviously pretty biased if you don't have a corporate",
    "start": "2272079",
    "end": "2277540"
  },
  {
    "text": "credit card don't worry about it uh scaling python with disk will be",
    "start": "2277540",
    "end": "2283359"
  },
  {
    "text": "available uh under a Creative Commons non-commercial license so you can you",
    "start": "2283359",
    "end": "2290380"
  },
  {
    "text": "can read it online uh I don't think it'll have like the nice O'Reilly graphs",
    "start": "2290380",
    "end": "2295480"
  },
  {
    "text": "because of how the licensing works out you'll get the kind of shitty graphs that you've",
    "start": "2295480",
    "end": "2300579"
  },
  {
    "text": "seen uh my apologies but it's the free version so you know",
    "start": "2300579",
    "end": "2306700"
  },
  {
    "text": "uh uh and if you said to yourself wow I hate children um",
    "start": "2306700",
    "end": "2312460"
  },
  {
    "text": "distributed computing for kids is a great way to introduce children to out of memory exceptions",
    "start": "2312460",
    "end": "2318400"
  },
  {
    "text": "um and I encourage you to go give me your email address and I will let you know uh when we finish illustrating book",
    "start": "2318400",
    "end": "2326260"
  },
  {
    "text": "one uh and you too can share the joy of out of memory exceptions with children",
    "start": "2326260",
    "end": "2333700"
  },
  {
    "text": "okay I I think that's it for my slides I wanted to save the last like 10-ish minutes for questions and I think I did",
    "start": "2333700",
    "end": "2340420"
  },
  {
    "text": "that so does anyone have questions",
    "start": "2340420",
    "end": "2344700"
  }
]