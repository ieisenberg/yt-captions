[
  {
    "text": "hello everyone welcome to Yao um I'm not sure if it's a good thing if I uh that I",
    "start": "5759",
    "end": "11580"
  },
  {
    "text": "get to speak first and it looks like I've got a full house here so I think the pressure's on",
    "start": "11580",
    "end": "16740"
  },
  {
    "text": "um welcome to my talk it's just in time architecture I work with a company called vgw that's",
    "start": "16740",
    "end": "22680"
  },
  {
    "text": "virtual gaming worlds and we're a Perth startup turned not quite startup anymore",
    "start": "22680",
    "end": "27740"
  },
  {
    "text": "and we're also Platinum sponsors of the Yao conference this year in Sydney",
    "start": "27740",
    "end": "33960"
  },
  {
    "text": "here's the crew this is most of them almost all of them some of you might recognize the seasoned",
    "start": "33960",
    "end": "39960"
  },
  {
    "text": "DL speaker at the front there and this talk was originally put together for and presented for these",
    "start": "39960",
    "end": "46260"
  },
  {
    "text": "people at our internal Tech conference called tectonic the reason I point this out is the",
    "start": "46260",
    "end": "51960"
  },
  {
    "text": "target audience for tectonic was the the many new team members that we hired over the year prior that we wanted to level",
    "start": "51960",
    "end": "57539"
  },
  {
    "text": "up and a lot of them had sort of come from unconventional backgrounds we made a",
    "start": "57539",
    "end": "63840"
  },
  {
    "text": "conscious effort to bring people in from not just University but from all over and and learn and develop them teach and",
    "start": "63840",
    "end": "71880"
  },
  {
    "text": "develop them and bring them up so a lot of them have unconventional Pathways into the tech industry",
    "start": "71880",
    "end": "78000"
  },
  {
    "text": "this means you might hear about some topics that you already know about this talk covers some of the basics but",
    "start": "78000",
    "end": "83720"
  },
  {
    "text": "Yahweh is from my perspective usually a more experienced audience",
    "start": "83720",
    "end": "89159"
  },
  {
    "text": "but we try to make this talk so that people at any level can get something from it and hopefully you do",
    "start": "89159",
    "end": "95820"
  },
  {
    "text": "so I'm going to be talking about three main topics we'll start with the story",
    "start": "95820",
    "end": "101759"
  },
  {
    "text": "and the journey of a growing games company and then we'll take a detour and talk a",
    "start": "101759",
    "end": "107759"
  },
  {
    "text": "little bit about event-driven architectures and then we'll bring it home with communication patterns",
    "start": "107759",
    "end": "113820"
  },
  {
    "text": "so let's imagine we all work for a growing games company does anyone work in games does anyone make games",
    "start": "113820",
    "end": "120360"
  },
  {
    "text": "literally no one great okay um if someone had put their hand up I",
    "start": "120360",
    "end": "126180"
  },
  {
    "text": "would say that this meeting that I'm going to talk about might sound a bit familiar but maybe it'll sound familiar to you anyway",
    "start": "126180",
    "end": "133039"
  },
  {
    "text": "so the product managers and stakeholders of our company believe that we can make more Revenue by allowing customers to",
    "start": "133140",
    "end": "138959"
  },
  {
    "text": "personalize their experience in game that's a pretty pretty standard thing so all of our stakeholders call a meeting",
    "start": "138959",
    "end": "144420"
  },
  {
    "text": "with the team all of the engineers and the testers and the designers and there's lots of debate about how best to",
    "start": "144420",
    "end": "149940"
  },
  {
    "text": "approach this after the dust settles our product manager grabs the marker walks up to the",
    "start": "149940",
    "end": "156900"
  },
  {
    "text": "board and scribbles out some squares and some boxes that look a little bit like this what we've got here is an avatar",
    "start": "156900",
    "end": "162900"
  },
  {
    "text": "store where players can purchase uh choose which Avatar they want to buy we can see we've got a balance up the",
    "start": "162900",
    "end": "169200"
  },
  {
    "text": "top that's what we used to buy them with and then a preview of each Avatar is shown with the name and the cost and the",
    "start": "169200",
    "end": "175739"
  },
  {
    "text": "buy button so you can click that and purchase it if you want and the avatars importantly have artificial scarcity a bit like an nft",
    "start": "175739",
    "end": "182760"
  },
  {
    "text": "maybe I don't think we talk about nfts anymore um so once they run out they're gone",
    "start": "182760",
    "end": "189599"
  },
  {
    "text": "over in the corner you can see the front engineer front-end Engineers they've both lit up immediately they they've",
    "start": "189599",
    "end": "195659"
  },
  {
    "text": "both come up with the front ideal front-end architecture and they're ready to go so they just leave the room",
    "start": "195659",
    "end": "201599"
  },
  {
    "text": "now we just have to decide what the server-side application architecture is going to look like",
    "start": "201599",
    "end": "207420"
  },
  {
    "text": "so the server-side engineers get to work and we start to think a little bit about all the steps that might be involved in",
    "start": "207420",
    "end": "212640"
  },
  {
    "text": "this workflow firstly we have to figure out uh we'll have to have a step to validate the",
    "start": "212640",
    "end": "218040"
  },
  {
    "text": "request we don't want anyone cheating this system and buying up all the avatars uh then what will happen is the server",
    "start": "218040",
    "end": "223920"
  },
  {
    "text": "will need to deduct that cost from the customer's balance and then once that cost is deducted from the balance the",
    "start": "223920",
    "end": "230400"
  },
  {
    "text": "Avatar can be assigned to that player you're going to start noticing some reoccurring language so I've underlined",
    "start": "230400",
    "end": "236340"
  },
  {
    "text": "that here we have checkout deduct balance assign and inventory",
    "start": "236340",
    "end": "242959"
  },
  {
    "text": "the team decides that the easiest way to approach this is to integrating integrate into the existing monolithic",
    "start": "243659",
    "end": "249480"
  },
  {
    "text": "architecture so what we can see here is we're handling multiple operations within a single request lifecycle and there's no",
    "start": "249480",
    "end": "256380"
  },
  {
    "text": "need to communicate with any other systems it's just one server talking to its database",
    "start": "256380",
    "end": "262260"
  },
  {
    "text": "and we can leverage this really powerful thing here called Atomic database transactions so I've circled that there",
    "start": "262260",
    "end": "268020"
  },
  {
    "text": "but let's talk a little bit about that so they allow us to perform a series of",
    "start": "268020",
    "end": "273419"
  },
  {
    "text": "operations on the database such that either all of those operations succeed or all of those operations fail and this",
    "start": "273419",
    "end": "280380"
  },
  {
    "text": "prevents us fermenting any weird states where for example we take the customer's balance we take that the cost of the",
    "start": "280380",
    "end": "285600"
  },
  {
    "text": "Avatar but then we don't give them the Avatar because we don't complete that second step",
    "start": "285600",
    "end": "291139"
  },
  {
    "text": "hands up who bought a coffee here this morning could someone actually put their hand up",
    "start": "292320",
    "end": "297360"
  },
  {
    "text": "this time great um the flow I've just described is a bit like going to the cafe to order a coffee",
    "start": "297360",
    "end": "303320"
  },
  {
    "text": "so from the Cuffs customers perspective I'll give the cashier the money",
    "start": "303320",
    "end": "308880"
  },
  {
    "text": "uh the cashier will check that it's enough to buy the coffee put it in the till and then they'll make your coffee and",
    "start": "308880",
    "end": "314520"
  },
  {
    "text": "give it to you it's fairly straightforward but then fast forward a year the product",
    "start": "314520",
    "end": "320280"
  },
  {
    "text": "is successful and the team has grown in size we've got more Engineers on the team now and some problems are starting",
    "start": "320280",
    "end": "326100"
  },
  {
    "text": "to show up here the engineers are complaining that the IDE is taking a long time to load",
    "start": "326100",
    "end": "331860"
  },
  {
    "text": "the build time is increasing it takes a long time to run all the tests there are regular merge conflicts",
    "start": "331860",
    "end": "338520"
  },
  {
    "text": "because everyone's working on top of each other There's No Boundaries and no separation of concerns",
    "start": "338520",
    "end": "345000"
  },
  {
    "text": "and we've got a high batch size for small changes the changes themselves are not",
    "start": "345000",
    "end": "350340"
  },
  {
    "text": "individually Deployable so this isn't necessarily a problem from a downtime perspective the team",
    "start": "350340",
    "end": "356419"
  },
  {
    "text": "correctly set up zero downtime deployments from from day one but because it's so large they take 10",
    "start": "356419",
    "end": "362340"
  },
  {
    "text": "minutes so if we want to be doing 50 of those a day then we've got back-to-back deployments",
    "start": "362340",
    "end": "367620"
  },
  {
    "text": "all day we just take up that queue entirely productivity in morale is starting to",
    "start": "367620",
    "end": "372960"
  },
  {
    "text": "take a dive so why did this happen well if we remember the team is working",
    "start": "372960",
    "end": "378780"
  },
  {
    "text": "on a monolithic architecture how do I know it's a monolith how do I know one when I see it",
    "start": "378780",
    "end": "384900"
  },
  {
    "text": "we more we all might have some idea but let's define it for me it's associated with old software",
    "start": "384900",
    "end": "390840"
  },
  {
    "text": "so software packages like Microsoft Word or Adobe Photoshop or maybe your favorite video game anything that used",
    "start": "390840",
    "end": "398220"
  },
  {
    "text": "to come on a CD or DVD in a box but just because we built an application",
    "start": "398220",
    "end": "403560"
  },
  {
    "text": "recently using the latest modern framework react view JS something",
    "start": "403560",
    "end": "408720"
  },
  {
    "text": "doesn't mean it's not a monolith a monolithic architecture is usually hosted within one code base and it",
    "start": "408720",
    "end": "415080"
  },
  {
    "text": "couples all of the business concerns together to make a change to this sort of application requires updating the entire",
    "start": "415080",
    "end": "421919"
  },
  {
    "text": "stack this can make updating the stack quite restrictive and potentially time",
    "start": "421919",
    "end": "427199"
  },
  {
    "text": "consuming leading to infrequent updates that are costly relative to the package size",
    "start": "427199",
    "end": "434900"
  },
  {
    "text": "so to summarize this solution I think did what it needed to do at the time we",
    "start": "435240",
    "end": "440580"
  },
  {
    "text": "validated the hypothesis about personalized avatars we got to Market quickly and the chosen architecture",
    "start": "440580",
    "end": "446880"
  },
  {
    "text": "actually has some unique and Powerful characteristics we can do this really cool thing called Atomic transactions",
    "start": "446880",
    "end": "452280"
  },
  {
    "text": "for example but over time the developer experience has started to suck especially as the",
    "start": "452280",
    "end": "457800"
  },
  {
    "text": "team grew the boundaries of our monolithic architecture became unclear and we had a",
    "start": "457800",
    "end": "464039"
  },
  {
    "text": "lot of people working over the top of each other and the other part was that this workflow couldn't be deployed without",
    "start": "464039",
    "end": "469919"
  },
  {
    "text": "deploying everything else at the same time and there are a number of downsides there too so how could we fix this",
    "start": "469919",
    "end": "478340"
  },
  {
    "text": "let's go back to our Cafe for a minute a monolithic architecture might be a",
    "start": "478380",
    "end": "483539"
  },
  {
    "text": "little bit like a cafe operated by a single person so this is Adam he owns this Cafe",
    "start": "483539",
    "end": "488759"
  },
  {
    "text": "and he currently has three responsibilities he has to take orders and then he pulls the coffee and then he",
    "start": "488759",
    "end": "494520"
  },
  {
    "text": "pours the milk he works quickly so he's never had any issues keeping up with demand",
    "start": "494520",
    "end": "500160"
  },
  {
    "text": "but Adam feels he's better at talking to customers than he ever was at making coffee",
    "start": "500160",
    "end": "506039"
  },
  {
    "text": "so what does he do Adam hires two new employees of course so now we've got Sarah and James",
    "start": "506039",
    "end": "513419"
  },
  {
    "text": "Sarah is an expert in pulling coffee so she's responsible for operating the coffee machine and James has a master's",
    "start": "513419",
    "end": "519599"
  },
  {
    "text": "degree in latte art so he's responsible for pouring the milk this is now two less things that Adam",
    "start": "519599",
    "end": "526320"
  },
  {
    "text": "has to worry about and he can focus on providing really good customer service importantly everyone here can work",
    "start": "526320",
    "end": "533160"
  },
  {
    "text": "independently of each other I think this makes sense in a cafe this is probably what you usually see",
    "start": "533160",
    "end": "538560"
  },
  {
    "text": "so can we do something in software hands up if you can see where this is going",
    "start": "538560",
    "end": "543839"
  },
  {
    "text": "yeah that everyone's got their hand up now great microservices so the team has heard a",
    "start": "543839",
    "end": "550680"
  },
  {
    "text": "lot about this new architecture called microservices so they decide to do a little bit of research a microservices architecture is a way",
    "start": "550680",
    "end": "557519"
  },
  {
    "text": "that we can help enforce boundaries and it's also it also allows parts of the system to be deployed independently of",
    "start": "557519",
    "end": "563459"
  },
  {
    "text": "each other so it sounds like it could probably solve some of our problems right",
    "start": "563459",
    "end": "569120"
  },
  {
    "text": "the team has agreed to split up the monolith and create boundaries between each domain concept so we have and",
    "start": "569399",
    "end": "575700"
  },
  {
    "text": "you'll recognize this language from before the store that tells me what things are for sale",
    "start": "575700",
    "end": "581160"
  },
  {
    "text": "the balance that tells me how many coins I have and the inventory which tells me",
    "start": "581160",
    "end": "586200"
  },
  {
    "text": "what things I've purchased and what things I own and this is what the workflow looks like",
    "start": "586200",
    "end": "592500"
  },
  {
    "text": "now so we can see here that the client sends a checkout request to the store",
    "start": "592500",
    "end": "597600"
  },
  {
    "text": "the store sends a request to the balance service and deducts the balance and then once it gets a response it sends a",
    "start": "597600",
    "end": "604080"
  },
  {
    "text": "request to the inventory to assign the Avatar to the customer once it gets a response from the",
    "start": "604080",
    "end": "609300"
  },
  {
    "text": "inventory it returns a response to the client to say that the checkout is completed we have our entire workflow in",
    "start": "609300",
    "end": "616620"
  },
  {
    "text": "a single request lifecycle and the team's pretty happy with themselves we did a team we did microservices",
    "start": "616620",
    "end": "625100"
  },
  {
    "text": "but hold on a minute something isn't quite right our customers are unhappy so after doing some digging we find that a",
    "start": "625500",
    "end": "631740"
  },
  {
    "text": "lot of the customers are reporting that their balance gets deducted but they don't receive the avatar customer support is receiving thousands",
    "start": "631740",
    "end": "639180"
  },
  {
    "text": "of complaints from customers every single day and Engineers are wasting a lot of time helping customers sort",
    "start": "639180",
    "end": "644399"
  },
  {
    "text": "manually compensate those customers that didn't get their their Avatar and then perhaps worst of all Fed Up",
    "start": "644399",
    "end": "650100"
  },
  {
    "text": "customers are just leaving and revenue is dropping the team decided to look at the",
    "start": "650100",
    "end": "655200"
  },
  {
    "text": "architecture and investigate possible failure scenarios the team notices that occasionally the",
    "start": "655200",
    "end": "662459"
  },
  {
    "text": "balance Services crash after deducting the balance the store receives no response from the",
    "start": "662459",
    "end": "668519"
  },
  {
    "text": "balance service uh and then that means it times out it doesn't know whether the balance was",
    "start": "668519",
    "end": "674519"
  },
  {
    "text": "deducted or not we cannot proceed to the next step to send a request to the inventory and assign the Avatar because we don't know",
    "start": "674519",
    "end": "681060"
  },
  {
    "text": "what happened in this scenario the workflow timed out and was left in an incomplete state",
    "start": "681060",
    "end": "687000"
  },
  {
    "text": "the customer's balance was debited but the item was not assigned to the customer's inventory",
    "start": "687000",
    "end": "693079"
  },
  {
    "text": "so with that in mind couldn't we just retry let's just try it again maybe it'll work this time",
    "start": "693120",
    "end": "700140"
  },
  {
    "text": "if the balance service goes down how long is it before it comes back up it could be down for a little while",
    "start": "700140",
    "end": "706680"
  },
  {
    "text": "with that in mind this could cause more and more requests to keep piling up while they're retrying over and over",
    "start": "706680",
    "end": "712920"
  },
  {
    "text": "question is how many times do we keep retrying when the balance service comes back",
    "start": "712920",
    "end": "718200"
  },
  {
    "text": "online what's going to happen we might get a flood of these retrying requests all at the same time and then",
    "start": "718200",
    "end": "724560"
  },
  {
    "text": "it just crashes again so that's not ideal retrying doesn't really seem to be the solution here",
    "start": "724560",
    "end": "731839"
  },
  {
    "text": "on top of that what if our store crashed halfway through a workflow again it appears that the balance might be",
    "start": "731880",
    "end": "737880"
  },
  {
    "text": "deducted and an avatar not assigned to the customer although it's difficult to know for sure",
    "start": "737880",
    "end": "743399"
  },
  {
    "text": "I think generally this type of workflow is unreliable",
    "start": "743399",
    "end": "748800"
  },
  {
    "text": "there are many examples where the failure of one service in this workflow",
    "start": "748800",
    "end": "753839"
  },
  {
    "text": "leads to the failure of the entire workflow and this means we have what is called an",
    "start": "753839",
    "end": "760680"
  },
  {
    "text": "availability coupling this workflow needs all three services to be available at the same time",
    "start": "760680",
    "end": "767940"
  },
  {
    "text": "if each service has a 99.9 availability or 99 in this case",
    "start": "767940",
    "end": "774120"
  },
  {
    "text": "the availability of the workflow as a whole is a multiplication of all three of those availabilities which turns out",
    "start": "774120",
    "end": "780540"
  },
  {
    "text": "to be 97 percent so 97 might be very good if you're in University that's a high distinction",
    "start": "780540",
    "end": "786540"
  },
  {
    "text": "you've done really well but in our case that means this system as a whole can be",
    "start": "786540",
    "end": "792000"
  },
  {
    "text": "down for as many as 11 whole days per year imagine if Netflix is down for 11 whole",
    "start": "792000",
    "end": "797399"
  },
  {
    "text": "days per year I don't think that's really acceptable and it actually gets worse the more services we add into this workflow",
    "start": "797399",
    "end": "805820"
  },
  {
    "text": "if you're a coal there are now three employees in our Cafe Adam who works uh works the customers",
    "start": "806160",
    "end": "812880"
  },
  {
    "text": "and takes payments you've got Sarah who pulls the Coffee shots and James who handles the milk",
    "start": "812880",
    "end": "818760"
  },
  {
    "text": "let's say Adam takes the payment from a customer Adam then orders Sarah to pull",
    "start": "818760",
    "end": "823980"
  },
  {
    "text": "the coffee shot but at this time Sarah's just received an emergency call and she's had to leave her station",
    "start": "823980",
    "end": "830339"
  },
  {
    "text": "because Sarah is not there Adam drops the order and just moves on to the next customer",
    "start": "830339",
    "end": "835680"
  },
  {
    "text": "this results in the payment being taken but the coffee not made for the customer",
    "start": "835680",
    "end": "840839"
  },
  {
    "text": "here again there is an availability coupling and although Adam and Sarah are working",
    "start": "840839",
    "end": "847079"
  },
  {
    "text": "on different things and can work independently of each other Adam needs Sarah to be there when an order comes",
    "start": "847079",
    "end": "852360"
  },
  {
    "text": "through otherwise the order is lost I don't think cafes usually work like this",
    "start": "852360",
    "end": "857760"
  },
  {
    "text": "so what can we do we'll get that to that in a minute I",
    "start": "857760",
    "end": "864180"
  },
  {
    "text": "forgot this slide was here by splitting up into multiple Services we were able to enforce boundaries that allow each",
    "start": "864180",
    "end": "870300"
  },
  {
    "text": "team to independently deploy each service other different problems arose though uh",
    "start": "870300",
    "end": "876360"
  },
  {
    "text": "in terms of reliability when the team moved to multiple Services the availability of the system as a whole",
    "start": "876360",
    "end": "882260"
  },
  {
    "text": "decreased due to an availability coupling requiring all three services to be available at the same time",
    "start": "882260",
    "end": "889320"
  },
  {
    "text": "this leads to workflows becoming unreliable balances would be deducted but the avatars were not being assigned to the",
    "start": "889320",
    "end": "895440"
  },
  {
    "text": "customers what we'd actually implemented here was a distributed monolith not microservices",
    "start": "895440",
    "end": "902720"
  },
  {
    "text": "so I think we need to go back to the drawing board I think we can solve some of the issues that this team has with an",
    "start": "903240",
    "end": "909060"
  },
  {
    "text": "event-driven architecture so let's talk a little bit about that firstly let's cover exactly what an",
    "start": "909060",
    "end": "916260"
  },
  {
    "text": "event is so an event represents a change in state so it's a representation of a thing that",
    "start": "916260",
    "end": "921720"
  },
  {
    "text": "happened it's an immutable fact so ideally it shouldn't change we can't rewrite",
    "start": "921720",
    "end": "927060"
  },
  {
    "text": "history and generally it's also something that happened in the past so if we're looking at an event we should assume it could be",
    "start": "927060",
    "end": "934320"
  },
  {
    "text": "something that happened very recently or a long time ago",
    "start": "934320",
    "end": "939019"
  },
  {
    "text": "AWS defines event-driven architectures as an architecture that uses events to",
    "start": "939540",
    "end": "945120"
  },
  {
    "text": "trigger and communicate between decoupled services so it's a really common architecture",
    "start": "945120",
    "end": "950639"
  },
  {
    "text": "pattern applied to microservices and I think it could be a way to solve some of our microservices issues",
    "start": "950639",
    "end": "957660"
  },
  {
    "text": "the team starts doing some research about event-driven architectures when they start digging into it a few",
    "start": "957660",
    "end": "963800"
  },
  {
    "text": "patterns and and I guess terms keep coming up you have event notification and event carried State transfer so",
    "start": "963800",
    "end": "971399"
  },
  {
    "text": "let's see what these two mean this is what event notification looks",
    "start": "971399",
    "end": "976440"
  },
  {
    "text": "like so what happens is we send an event of something that happened all it gives us is the identifier of the",
    "start": "976440",
    "end": "984300"
  },
  {
    "text": "thing that changed and then it's up to the consumer to decide whether it needs to do anything",
    "start": "984300",
    "end": "989399"
  },
  {
    "text": "about that if the balance service gets this event to deduct the customer's balance that",
    "start": "989399",
    "end": "995639"
  },
  {
    "text": "there is the idea of the the checkout that got created so what we'll probably need to do is go back to the store and",
    "start": "995639",
    "end": "1002300"
  },
  {
    "text": "ask which customer and how much and which Avatar was it in this case the balance must query the",
    "start": "1002300",
    "end": "1009019"
  },
  {
    "text": "store for more checkout details and the source of the source of Truth is the store database",
    "start": "1009019",
    "end": "1015399"
  },
  {
    "text": "let's see what event notification is like in the context of a cafe So Adam is at the counter and takes an order and",
    "start": "1015860",
    "end": "1022880"
  },
  {
    "text": "then Adam shouts large takeaway to Sarah 's like okay hang on a minute I've got",
    "start": "1022880",
    "end": "1029058"
  },
  {
    "text": "to ask Adam for more details I don't have enough information hey Adam what kind of coffee is it it's",
    "start": "1029059",
    "end": "1034880"
  },
  {
    "text": "a long black great still don't have enough information is it small or large",
    "start": "1034880",
    "end": "1041540"
  },
  {
    "text": "it's a large so Sarah gets a bit frustrated that she has to keep asking Adam for more",
    "start": "1041540",
    "end": "1047058"
  },
  {
    "text": "information this probably isn't ideal in the context of a cafe but it's not all bad news it's",
    "start": "1047059",
    "end": "1053600"
  },
  {
    "text": "actually a totally common and acceptable way of doing an event-driven architecture with an event driven notification with event notification",
    "start": "1053600",
    "end": "1060140"
  },
  {
    "text": "when an event is raised we ask the source of that event for its view of the world",
    "start": "1060140",
    "end": "1065419"
  },
  {
    "text": "event notification is nice because the source of the event is always the source of Truth we can always go back there but",
    "start": "1065419",
    "end": "1071720"
  },
  {
    "text": "the downside here is that additional request for information if there are many things that are",
    "start": "1071720",
    "end": "1076820"
  },
  {
    "text": "interested in this event they'll all ask for more information at the same time as soon as that event is produced so I",
    "start": "1076820",
    "end": "1082520"
  },
  {
    "text": "guess this can be pretty chatty so what if we added some additional",
    "start": "1082520",
    "end": "1088580"
  },
  {
    "text": "state to the event this would be what's known as event Carriage State transfer",
    "start": "1088580",
    "end": "1093679"
  },
  {
    "text": "and you can see here this avoids the need for the balance service to query more information from the store because it's all on the event now",
    "start": "1093679",
    "end": "1100760"
  },
  {
    "text": "great but now as soon as we have this information it's potentially stale if we read it again later from our",
    "start": "1100760",
    "end": "1107419"
  },
  {
    "text": "database if we put it in there the information we have may not match the source anymore",
    "start": "1107419",
    "end": "1113299"
  },
  {
    "text": "the database in the store might have new events or new information about this checkout that the balance service is not",
    "start": "1113299",
    "end": "1119059"
  },
  {
    "text": "yet received and this would be known as eventual consistency",
    "start": "1119059",
    "end": "1124480"
  },
  {
    "text": "so back to the cafe again Adam has listened to Sarah's frustrations and he's bought a receipt printer",
    "start": "1124640",
    "end": "1130580"
  },
  {
    "text": "good job Adam now when he takes the orders he prints out a ticket and he places that ticket",
    "start": "1130580",
    "end": "1135740"
  },
  {
    "text": "on the little thing on the coffee machine where you put the tickets Sarah can see the order and it says",
    "start": "1135740",
    "end": "1141080"
  },
  {
    "text": "longback large takeaway two shots now she has all the information she needs and this works out pretty well almost",
    "start": "1141080",
    "end": "1147860"
  },
  {
    "text": "all of the time except occasionally a customer comes up and they've",
    "start": "1147860",
    "end": "1153260"
  },
  {
    "text": "uh Miss said something or they've changed their mind oh can you please make that a decaf",
    "start": "1153260",
    "end": "1159380"
  },
  {
    "text": "now the information on the ticket is no longer relevant we should produce a new ticket or an",
    "start": "1159380",
    "end": "1166160"
  },
  {
    "text": "event to say that the order has changed but Sarah maybe probably already through",
    "start": "1166160",
    "end": "1171380"
  },
  {
    "text": "pulling that shot that's not a decaf shot when she gets the update um so yeah it doesn't work all of the",
    "start": "1171380",
    "end": "1177200"
  },
  {
    "text": "time this mostly works better in the context of a cafe but it still has trade-offs",
    "start": "1177200",
    "end": "1183620"
  },
  {
    "text": "we're not making all of those extra requests anymore to get extra information so it's less chatty",
    "start": "1183620",
    "end": "1189980"
  },
  {
    "text": "but now we have potentially style events and stale data shared across multiple places",
    "start": "1189980",
    "end": "1195020"
  },
  {
    "text": "the assumption is that any of these events are essentially out of date immediately they may not actually be but",
    "start": "1195020",
    "end": "1201620"
  },
  {
    "text": "we don't know unless we check so I think we know about two different",
    "start": "1201620",
    "end": "1206720"
  },
  {
    "text": "event patterns but where all these events actually coming from",
    "start": "1206720",
    "end": "1212019"
  },
  {
    "text": "events are produced as a side effect to a change that has occurred in the system as an example when we insert a checkout",
    "start": "1212240",
    "end": "1219919"
  },
  {
    "text": "into our database then a checkout created event is created at the same time we can send that event to our message",
    "start": "1219919",
    "end": "1227059"
  },
  {
    "text": "broker for other systems to consume but the database and message broker are",
    "start": "1227059",
    "end": "1233299"
  },
  {
    "text": "two different systems so what if the message broker is unavailable this could cause our event to get lost",
    "start": "1233299",
    "end": "1239840"
  },
  {
    "text": "we don't have the luxury of an atomic transaction here we need to be able to guarantee that an",
    "start": "1239840",
    "end": "1245480"
  },
  {
    "text": "event gets published when a change occurs in the database",
    "start": "1245480",
    "end": "1250360"
  },
  {
    "text": "so there are three ways to do that you've got transaction logs the transactional outbox pattern and event",
    "start": "1250580",
    "end": "1257179"
  },
  {
    "text": "sourcing transaction logs are a feature offered by most databases they're created",
    "start": "1257179",
    "end": "1264080"
  },
  {
    "text": "whenever inserts updates or deletes occur on the database automatically for you",
    "start": "1264080",
    "end": "1269360"
  },
  {
    "text": "an event publisher could then poll these logs and translate these changes into events before sending them off to the",
    "start": "1269360",
    "end": "1275480"
  },
  {
    "text": "message broker the downside here would be that we're using these low-level database logs that",
    "start": "1275480",
    "end": "1281000"
  },
  {
    "text": "sort of give us a coupling to the database technology that we're using instead of something a bit more high level like business events",
    "start": "1281000",
    "end": "1289039"
  },
  {
    "text": "so alternatively we could use the transactional outbox pattern instead of using transaction logs so we",
    "start": "1289039",
    "end": "1296600"
  },
  {
    "text": "could save the business event into a separate table called the outbox table and then at the at the same time as the",
    "start": "1296600",
    "end": "1304100"
  },
  {
    "text": "change occurs and this can be done in an atomic transaction cool we like Atomic transactions this ensures both the row",
    "start": "1304100",
    "end": "1311360"
  },
  {
    "text": "and the table get updated and the event gets inserted at the same time after that a process could do what's",
    "start": "1311360",
    "end": "1318200"
  },
  {
    "text": "called a destructive breed for events from our outbox table before being sent to the message broker",
    "start": "1318200",
    "end": "1324140"
  },
  {
    "text": "and this now avoids using low-level database logs",
    "start": "1324140",
    "end": "1329259"
  },
  {
    "text": "and then as a third option instead of saving events as a side effect what if we just save events and keep that as a",
    "start": "1329299",
    "end": "1336620"
  },
  {
    "text": "single source of Truth so we can do this when the data in our append only event stream represents a superset of the",
    "start": "1336620",
    "end": "1342500"
  },
  {
    "text": "equivalent data in our mutable table and this is known as event sourcing Downstream Services can pull from the",
    "start": "1342500",
    "end": "1349340"
  },
  {
    "text": "event store directly without the need for a message broker although we can have one if we want and now we can",
    "start": "1349340",
    "end": "1356000"
  },
  {
    "text": "replace those existing tables our existing mutable tables with just an append only event stream",
    "start": "1356000",
    "end": "1361220"
  },
  {
    "text": "but if we ever want to bring them back we could do something like a projection or a read model",
    "start": "1361220",
    "end": "1367360"
  },
  {
    "text": "so now we understand a little bit hopefully about event-driven architectures how can we apply this to our workflows",
    "start": "1368120",
    "end": "1376240"
  },
  {
    "text": "there are two common event-driven communication patterns the first one we have is choreography",
    "start": "1376760",
    "end": "1382700"
  },
  {
    "text": "so choreography think of a bunch of services as participants participating in dance routine all they have to do is",
    "start": "1382700",
    "end": "1390860"
  },
  {
    "text": "look left for their cues the other option is orchestration so orchestration like an orchestra",
    "start": "1390860",
    "end": "1397880"
  },
  {
    "text": "there's a conductor and the conductor doesn't play an instrument but the orchestra doesn't",
    "start": "1397880",
    "end": "1403220"
  },
  {
    "text": "play without the conductor so choreography might look a little bit",
    "start": "1403220",
    "end": "1408860"
  },
  {
    "text": "like this in our workflow the workflow sequence is distributed to each of the participants the",
    "start": "1408860",
    "end": "1414860"
  },
  {
    "text": "participants communicate with each other through events the store receives requests to start the checkout from the",
    "start": "1414860",
    "end": "1420679"
  },
  {
    "text": "client when this happens it raises an event saying that a checkout created happened",
    "start": "1420679",
    "end": "1426380"
  },
  {
    "text": "the balance service is waiting for that checkout created event and when it gets one the balance is deducted and then a",
    "start": "1426380",
    "end": "1432860"
  },
  {
    "text": "balanced deducted event is produced inventory is waiting for that balance deducted event and when it gets one it",
    "start": "1432860",
    "end": "1440240"
  },
  {
    "text": "can assign that Avatar and produce the Avatar assigned event then we go back to the store you can see",
    "start": "1440240",
    "end": "1446840"
  },
  {
    "text": "it's waiting for that Avatar assigned event and then when that happens we can inform the client that the checkout is",
    "start": "1446840",
    "end": "1452780"
  },
  {
    "text": "complete choreography might be quite a lot sorry",
    "start": "1452780",
    "end": "1458900"
  },
  {
    "text": "choreography might be quite a lot like how a cafe operates naturally So Adam takes the order and passes that order to",
    "start": "1458900",
    "end": "1465799"
  },
  {
    "text": "Sarah Sarah pulls the coffee and passes that coffee to James and James handles the",
    "start": "1465799",
    "end": "1471620"
  },
  {
    "text": "milk and pours it and calls out the customer's name and the order is complete one problem with this is what happens",
    "start": "1471620",
    "end": "1478100"
  },
  {
    "text": "when a customer wants to know where their order is maybe it's taking too long who can answer that question",
    "start": "1478100",
    "end": "1486080"
  },
  {
    "text": "it depends on where the order is up to in the system if we ask Adam",
    "start": "1486080",
    "end": "1491840"
  },
  {
    "text": "all he knows is that he took the he took the customers money and passed it on to Sarah",
    "start": "1491840",
    "end": "1497120"
  },
  {
    "text": "if we asked Sarah she says I've already pulled the coffee I've already passed it on to James So Adam and Sarah both don't",
    "start": "1497120",
    "end": "1504559"
  },
  {
    "text": "know we look over to James and he has a big queue of coffees that he's got to add milk to he also looks a little bit",
    "start": "1504559",
    "end": "1510320"
  },
  {
    "text": "flustered so we should probably just leave him alone but he probably has our coffee so with choreography we may have to ask",
    "start": "1510320",
    "end": "1517460"
  },
  {
    "text": "each of the participants in a workflow to understand where we're up to",
    "start": "1517460",
    "end": "1523360"
  },
  {
    "text": "choreography choreography is elegant in the sense that a dance routine is elegant each person in a dance routine",
    "start": "1524299",
    "end": "1531500"
  },
  {
    "text": "only has to look left for their cues each participant in a choreographed",
    "start": "1531500",
    "end": "1536779"
  },
  {
    "text": "event driven architecture only consumes the events that they care about and",
    "start": "1536779",
    "end": "1541940"
  },
  {
    "text": "produce other events that become cues for the next participant the downsides might be that it's",
    "start": "1541940",
    "end": "1548360"
  },
  {
    "text": "difficult to observe if I want to know where this workflow is up to I may need to talk to each of the participants",
    "start": "1548360",
    "end": "1555140"
  },
  {
    "text": "there's no central place I can look to here for progress it's also a pattern that probably works",
    "start": "1555140",
    "end": "1561260"
  },
  {
    "text": "best with sequential workflows that's where each service does one step and then hands it off to the next",
    "start": "1561260",
    "end": "1566600"
  },
  {
    "text": "participant it gets tricky to manage when that flow becomes non-sequential",
    "start": "1566600",
    "end": "1571940"
  },
  {
    "text": "what if cafes well most cafes probably don't just make one type of coffee you've got filter",
    "start": "1571940",
    "end": "1577460"
  },
  {
    "text": "coffee hot chocolate decaf what about when that Cafe starts selling food as well suddenly there's a lot more",
    "start": "1577460",
    "end": "1583760"
  },
  {
    "text": "variables and moving parts so before I talk about orchestration",
    "start": "1583760",
    "end": "1589940"
  },
  {
    "text": "first let's look at the difference between events and commands you can see",
    "start": "1589940",
    "end": "1595039"
  },
  {
    "text": "here here our events are in orange Services can listen to events produced by each workflow they care about",
    "start": "1595039",
    "end": "1601580"
  },
  {
    "text": "uh and as we can see here the balance service is listening to events from many different workflows such as checkout",
    "start": "1601580",
    "end": "1607760"
  },
  {
    "text": "created game registered daily reward claimed achievement completed",
    "start": "1607760",
    "end": "1613640"
  },
  {
    "text": "for every new workflow it needs to describe subscribe to more events like a",
    "start": "1613640",
    "end": "1618740"
  },
  {
    "text": "lot of things in software what if we just flip this around would we be able to make that easier",
    "start": "1618740",
    "end": "1624140"
  },
  {
    "text": "so with commands which are in blue the service does not need to know about all of these workflows",
    "start": "1624140",
    "end": "1630320"
  },
  {
    "text": "now the balance service just does two things it handles the ad balance and deduct balance commands and they're",
    "start": "1630320",
    "end": "1636980"
  },
  {
    "text": "highlighted in blue so let's look at how orchestration uses commands instead of events to coordinate",
    "start": "1636980",
    "end": "1644179"
  },
  {
    "text": "a workflow now there's a lot going on here but with orchestration the workflow starts off",
    "start": "1644179",
    "end": "1651020"
  },
  {
    "text": "the same a checkout created event is created by the store the event is then received by a new",
    "start": "1651020",
    "end": "1656900"
  },
  {
    "text": "component called the checkout process manager this now manages the workflow from this point onwards it begins by sending a",
    "start": "1656900",
    "end": "1664220"
  },
  {
    "text": "deduct balance command to the balance service the balance deducted event is",
    "start": "1664220",
    "end": "1669260"
  },
  {
    "text": "produced and then triggers the next step of the workflow which is to send a fun checkout command to the store to notify",
    "start": "1669260",
    "end": "1675320"
  },
  {
    "text": "that the checkout has been funded the checkout funded event then triggers the next step of the workflow which is",
    "start": "1675320",
    "end": "1681559"
  },
  {
    "text": "to send the Avatar assign Avatar command to the inventory which is to which is to tell a store",
    "start": "1681559",
    "end": "1688520"
  },
  {
    "text": "that the no I'm lost the Avatar assigned event then triggers",
    "start": "1688520",
    "end": "1693740"
  },
  {
    "text": "the next step of the workflow which is to tell the store that the checkout has been completed workflow participants do not need to",
    "start": "1693740",
    "end": "1701299"
  },
  {
    "text": "subscribe to each of these events they just expose the commands the balance service exposes the deduct",
    "start": "1701299",
    "end": "1707240"
  },
  {
    "text": "balance command for example and the inventory exposes the assign Avatar command",
    "start": "1707240",
    "end": "1713120"
  },
  {
    "text": "workflow steps are still triggered by events for example the checkout created event",
    "start": "1713120",
    "end": "1718640"
  },
  {
    "text": "triggers the first step of this workflow and the balance deducted event triggers the next step of the workflow",
    "start": "1718640",
    "end": "1725440"
  },
  {
    "text": "and we can now also handle unsuccessful workloads due to business constraints so let's imagine a customer already has an",
    "start": "1726320",
    "end": "1733580"
  },
  {
    "text": "avatar they can't get two of the same Avatar that would probably be a bit meaningless",
    "start": "1733580",
    "end": "1739539"
  },
  {
    "text": "so if we send if we end up in this state what we need to do is you need to reverse any of the operations that have",
    "start": "1739539",
    "end": "1745520"
  },
  {
    "text": "already happened this workflow has already deducted the customer's balance so a reverse",
    "start": "1745520",
    "end": "1751159"
  },
  {
    "text": "operation an add balance command with the same value needs to be sent and handled",
    "start": "1751159",
    "end": "1756740"
  },
  {
    "text": "after the assignment failed a checkout failed event is raised and we can consume that",
    "start": "1756740",
    "end": "1762080"
  },
  {
    "text": "then at that event then triggers the process manager to send an add balance command to the balance service upon",
    "start": "1762080",
    "end": "1769460"
  },
  {
    "text": "success we can send a request to the store to notify that the checkout is being refunded",
    "start": "1769460",
    "end": "1776779"
  },
  {
    "text": "adding the balance back is what's known as a compensating transaction",
    "start": "1776779",
    "end": "1782380"
  },
  {
    "text": "so the cafes now growing and they also sell food So Adam decides it's time to hire a",
    "start": "1783020",
    "end": "1789500"
  },
  {
    "text": "manager to manage the staff and the orders a customer orders a soy latte and a",
    "start": "1789500",
    "end": "1794840"
  },
  {
    "text": "toasted sandwich Adam takes the order and takes the payment instead of passing the order to Sarah he",
    "start": "1794840",
    "end": "1800419"
  },
  {
    "text": "passes the order to the new manager the manager then orders Sarah to pull the coffee shot but at the same time the",
    "start": "1800419",
    "end": "1806539"
  },
  {
    "text": "manager can order the kitchen staff to start making that toasted sandwich after Sarah's done pulling the coffee",
    "start": "1806539",
    "end": "1811940"
  },
  {
    "text": "shot the manager then orders James to handle the milk and then if a customer needs to know the",
    "start": "1811940",
    "end": "1818120"
  },
  {
    "text": "status of the order at any time now they can go to the manager the manager is now responsible for the",
    "start": "1818120",
    "end": "1823580"
  },
  {
    "text": "workflow although this centralization now means that the manager is a single point of failure",
    "start": "1823580",
    "end": "1830380"
  },
  {
    "text": "so with orchestration the workflow logic is centralized events are still used to proceed through",
    "start": "1830960",
    "end": "1837320"
  },
  {
    "text": "the workflow but commands are also used by the orchestrator to communicate with the services",
    "start": "1837320",
    "end": "1843380"
  },
  {
    "text": "if someone wanted to figure out the current state of the workflow they can go to the orchestra orchestrator",
    "start": "1843380",
    "end": "1849679"
  },
  {
    "text": "this however also means that the workflow has a single source of failure if it ever goes down the whole workflow",
    "start": "1849679",
    "end": "1855500"
  },
  {
    "text": "stops in the end our team decided to implement the orchestration pattern as they found the workflow logic was easier to",
    "start": "1855500",
    "end": "1861679"
  },
  {
    "text": "understand if it was in a single place and they did want to be able to track the progress of this workflow as it went through",
    "start": "1861679",
    "end": "1868580"
  },
  {
    "text": "and this is the end of our journey this journey was about using the architecture for the problem that you were facing at hand",
    "start": "1868580",
    "end": "1875059"
  },
  {
    "text": "each of these architectures served a purpose at the time that they were needed we started by integrating into our",
    "start": "1875059",
    "end": "1881539"
  },
  {
    "text": "existing monolithic architecture that was already working well for a small team",
    "start": "1881539",
    "end": "1886640"
  },
  {
    "text": "the team got to Market quicker and we saw some success early however the team outgrew this",
    "start": "1886640",
    "end": "1892580"
  },
  {
    "text": "architecture and decided to later transition to microservices this architecture allowed multiple teams",
    "start": "1892580",
    "end": "1899120"
  },
  {
    "text": "to build and deploy things independently of each other but there was more planning and work required in order to build a reliable",
    "start": "1899120",
    "end": "1905899"
  },
  {
    "text": "system and they had to navigate a few bumps along the way it was better to make those bumps later",
    "start": "1905899",
    "end": "1912860"
  },
  {
    "text": "in the journey once the team was more established I think the decisions and the trade-offs",
    "start": "1912860",
    "end": "1918080"
  },
  {
    "text": "that were made at each stage of this journey were appropriate for the problem at hand the team did not start off with a",
    "start": "1918080",
    "end": "1924500"
  },
  {
    "text": "globally distributed fault tolerant microservices architecture and had the team chosen architecture like that they",
    "start": "1924500",
    "end": "1931520"
  },
  {
    "text": "would have probably run into those availability problems really early on and perhaps never have succeeded have",
    "start": "1931520",
    "end": "1937100"
  },
  {
    "text": "succeeded at all the key takeaway here is that there's no one-size-fits-all architecture at each",
    "start": "1937100",
    "end": "1944179"
  },
  {
    "text": "stage of the journey we required a different architecture and to evolve with the team and the product as we went",
    "start": "1944179",
    "end": "1950000"
  },
  {
    "text": "along quick recap we started with a software development",
    "start": "1950000",
    "end": "1956299"
  },
  {
    "text": "Journey so we went from building an avatar purchase workflow we went from monolith to microservices but really",
    "start": "1956299",
    "end": "1962120"
  },
  {
    "text": "what we produced was a distributed monolith with availability coupling we sought out ways to improve this with",
    "start": "1962120",
    "end": "1968299"
  },
  {
    "text": "an event-driven architecture so we looked at two types of events event notification and event Carriage State",
    "start": "1968299",
    "end": "1973760"
  },
  {
    "text": "transfer and three ways of producing events transaction logs transactional outbox",
    "start": "1973760",
    "end": "1978980"
  },
  {
    "text": "pattern and event sourcing then we dived into communication patterns choreography and orchestration",
    "start": "1978980",
    "end": "1986120"
  },
  {
    "text": "both patterns USE events to trigger the next workflow steps but with choreography we're using events to",
    "start": "1986120",
    "end": "1991700"
  },
  {
    "text": "communicate between Services it's elegant and decentralized but difficult to observe",
    "start": "1991700",
    "end": "1998120"
  },
  {
    "text": "with orchestration we have a centralized workflow that centralized workflow uses commands for communication but it",
    "start": "1998120",
    "end": "2005380"
  },
  {
    "text": "introduces a single origin of failure",
    "start": "2005380",
    "end": "2009240"
  },
  {
    "text": "before I wrap up uh I think that not enough presentations have code anymore so I've got some code here",
    "start": "2010480",
    "end": "2017620"
  },
  {
    "text": "um this is this is what we would call a checkout aggregate so we can see here the different functions that an",
    "start": "2017620",
    "end": "2022659"
  },
  {
    "text": "aggregate can accept I'm only going to go through this really quickly but you can see here we've got all our our",
    "start": "2022659",
    "end": "2028120"
  },
  {
    "text": "commands here this is a pretty simple command Handler so you input a command this is for",
    "start": "2028120",
    "end": "2034960"
  },
  {
    "text": "creating the initial checkout this is typescript by the way some handles can get a little bit more",
    "start": "2034960",
    "end": "2041200"
  },
  {
    "text": "complex though like this one this is the fun Handler um don't worry if you you don't get",
    "start": "2041200",
    "end": "2046539"
  },
  {
    "text": "enough time to read all this code or understand it all it's a little bit Scrappy as well it contains a projection",
    "start": "2046539",
    "end": "2052000"
  },
  {
    "text": "inside the Handler to play through the existing events that we've been through and that allows us to find the cost of",
    "start": "2052000",
    "end": "2058480"
  },
  {
    "text": "the Avatar and which customer it's for and lastly this is the checkout process",
    "start": "2058480",
    "end": "2064480"
  },
  {
    "text": "manager itself it's deliberately quite simple in this case they can obviously be a lot more complex sometimes they",
    "start": "2064480",
    "end": "2071858"
  },
  {
    "text": "require their own State Management for example but this one doesn't all it does is listen for events and decide to issue",
    "start": "2071859",
    "end": "2077800"
  },
  {
    "text": "commands and this is real code I actually built",
    "start": "2077800",
    "end": "2083138"
  },
  {
    "text": "it out I think my video is not going to work though see if I can get a video",
    "start": "2083139",
    "end": "2088740"
  },
  {
    "text": "how are we going to get it try again",
    "start": "2090339",
    "end": "2095879"
  },
  {
    "text": "so we can see here I'm going to move in front of the screen um uh when we click the the button to",
    "start": "2101740",
    "end": "2107140"
  },
  {
    "text": "claim that avatar for 50 or 50 000 coins you can observe here the eventual consistency as we have that process",
    "start": "2107140",
    "end": "2113560"
  },
  {
    "text": "manager working through those individual steps",
    "start": "2113560",
    "end": "2117660"
  },
  {
    "text": "and that's it thanks everyone [Applause]",
    "start": "2119560",
    "end": "2130960"
  },
  {
    "text": "oh thank you very much for that talk did anyone have any questions because we had a few spare minutes at the end",
    "start": "2130960",
    "end": "2136900"
  },
  {
    "text": "foreign",
    "start": "2136900",
    "end": "2139680"
  },
  {
    "text": "as you expanded out and started having more services did you have challenges",
    "start": "2142200",
    "end": "2147400"
  },
  {
    "text": "with them you have",
    "start": "2147400",
    "end": "2154500"
  },
  {
    "text": "um yeah I guess uh and and I think um probably probably a case there for",
    "start": "2156160",
    "end": "2161859"
  },
  {
    "text": "um uh that gets harder the more services you have right there's more propagation that needs to happen there",
    "start": "2161859",
    "end": "2168220"
  },
  {
    "text": "um so yeah that is a thing that happens uh there are obviously ways to to share that and make that easier to handle but",
    "start": "2168220",
    "end": "2174460"
  },
  {
    "text": "that is that is something that does happen did anyone else have any there was one",
    "start": "2174460",
    "end": "2180579"
  },
  {
    "text": "at the back I thought yeah I'll bring up them up",
    "start": "2180579",
    "end": "2184380"
  },
  {
    "text": "uh and thank you and thank you for the talk and a familiar journey to many of us",
    "start": "2190119",
    "end": "2195400"
  },
  {
    "text": "um and given a lot of subin on Journeys like this now um would we just start with the state machine all the time and just forget",
    "start": "2195400",
    "end": "2202060"
  },
  {
    "text": "about the journey now on um that that's a good point I guess um",
    "start": "2202060",
    "end": "2209859"
  },
  {
    "text": "I guess uh early days of a startup the a state machine State machine to me",
    "start": "2209859",
    "end": "2215380"
  },
  {
    "text": "represents something that's quite a considered design you might take some quite a bit of time to to design that if",
    "start": "2215380",
    "end": "2220839"
  },
  {
    "text": "you're really looking for a quick turnaround and I'm talking about um turning around and trying different",
    "start": "2220839",
    "end": "2226720"
  },
  {
    "text": "products within 24 hours that was sort of our our in the early days our sort of time frames where you might have time to",
    "start": "2226720",
    "end": "2233260"
  },
  {
    "text": "jump on a an idea and see if it works you might not have time to do that much upfront design",
    "start": "2233260",
    "end": "2239980"
  },
  {
    "text": "um and that represents I think that early stage we were kind of just building on top of that monolith there's a few people there's not a lot of people",
    "start": "2239980",
    "end": "2245619"
  },
  {
    "text": "working on top of each other I think it's a little bit more receptive to uh having a little bit less design but then",
    "start": "2245619",
    "end": "2252520"
  },
  {
    "text": "of course as we go go further if the team's successful if it scales doing more upfront design State machine good",
    "start": "2252520",
    "end": "2259000"
  },
  {
    "text": "idea um yeah thank you it was it was one in the",
    "start": "2259000",
    "end": "2265480"
  },
  {
    "text": "middle somewhere I think as well oh one down oh we might get the microphone just",
    "start": "2265480",
    "end": "2271420"
  },
  {
    "text": "because there's uh live streaming cheers thanks do you have suggestions for how we could observe a choreography",
    "start": "2271420",
    "end": "2278560"
  },
  {
    "text": "like how to make that problem easier um I guess you could have",
    "start": "2278560",
    "end": "2284140"
  },
  {
    "text": "uh yeah so it's not immediately observable we can't go to one one of these services and go tell me what we're up to",
    "start": "2284140",
    "end": "2289780"
  },
  {
    "text": "um you could have centralized monitoring so you could have all of them feedback to a central service some sort of a",
    "start": "2289780",
    "end": "2296380"
  },
  {
    "text": "status or update as they're going along um but I guess yeah just naturally those",
    "start": "2296380",
    "end": "2302020"
  },
  {
    "text": "Services if they are completely isolated from each other that you're not going to get that that observability for free",
    "start": "2302020",
    "end": "2311099"
  },
  {
    "text": "yep yeah at the end you said the team chose",
    "start": "2312579",
    "end": "2318640"
  },
  {
    "text": "a choreography uh sort of strategy and I was thinking as we're talking there's some law about how",
    "start": "2318640",
    "end": "2326280"
  },
  {
    "text": "organizations tend to structure themselves oh sorry the software instructors itself to fit the organization structure so I was",
    "start": "2326280",
    "end": "2332859"
  },
  {
    "text": "wondering if the company became more uh managed to sort of essentially managed during this time could that",
    "start": "2332859",
    "end": "2338980"
  },
  {
    "text": "explain the story are you talking about that's Conway's law isn't it yeah I think that sounds",
    "start": "2338980",
    "end": "2344320"
  },
  {
    "text": "right um yeah I think so so um and some of those process managers um not that one specifically but some of",
    "start": "2344320",
    "end": "2350200"
  },
  {
    "text": "those process managers replaced a job that an individual was doing not that you know the individual got made redundant or something like that but a a",
    "start": "2350200",
    "end": "2357160"
  },
  {
    "text": "job that you know someone was doing manually we could represent quite easily as a a process manager with a soap",
    "start": "2357160",
    "end": "2364119"
  },
  {
    "text": "machine that we could automate so we would take something that someone could maybe do a hundred times a day if they",
    "start": "2364119",
    "end": "2370060"
  },
  {
    "text": "were really fast and make that a process they could run millions of times an hour",
    "start": "2370060",
    "end": "2375220"
  },
  {
    "text": "and run through things really really fast so I think I think that's maybe a reflection of modeling or Conway's law",
    "start": "2375220",
    "end": "2381280"
  },
  {
    "text": "and you'd have these processes that we could start taking manual jobs that people had roles that were doing and",
    "start": "2381280",
    "end": "2388060"
  },
  {
    "text": "automate them and make them a lot faster and scale the business that way",
    "start": "2388060",
    "end": "2392940"
  },
  {
    "text": "um I was wondering did you do anything specifically for reporting purposes like did you have a query view was the",
    "start": "2396339",
    "end": "2402579"
  },
  {
    "text": "orchestration service responsible for recording you know for sort of statistical",
    "start": "2402579",
    "end": "2407800"
  },
  {
    "text": "analysis or looking back at you know reporting purposes for the business to",
    "start": "2407800",
    "end": "2413020"
  },
  {
    "text": "be able to report on what's happened in the past because that can be a tricky concern in an event driven architecture",
    "start": "2413020",
    "end": "2420579"
  },
  {
    "text": "yeah I think um I might need more time to consider that but I think um",
    "start": "2420579",
    "end": "2425859"
  },
  {
    "text": "like an event sourcing architecture was another thing that we went with um with an event sourcing architecture",
    "start": "2425859",
    "end": "2431260"
  },
  {
    "text": "because you've got that entire history of events you can always go back and quite easily look at you've got this um",
    "start": "2431260",
    "end": "2436660"
  },
  {
    "text": "it's a built-in audit log you can always go back and you can you can build reports on that is that sort of does",
    "start": "2436660",
    "end": "2441820"
  },
  {
    "text": "that answer your question yeah yeah for sure I guess it's just there's overhead in doing that and",
    "start": "2441820",
    "end": "2447820"
  },
  {
    "text": "sometimes you you might choose to push those events into some kind of query database to make it easy to query rather",
    "start": "2447820",
    "end": "2454359"
  },
  {
    "text": "than having to go back and you know replay all the events or I guess I was curious as to whether you implemented",
    "start": "2454359",
    "end": "2460180"
  },
  {
    "text": "something specifically like that or you know was that a concern that you put onto the the orchestration service for",
    "start": "2460180",
    "end": "2466720"
  },
  {
    "text": "example to handle you know reporting queries since it has you know some sort of central knowledge of what's occurred",
    "start": "2466720",
    "end": "2472900"
  },
  {
    "text": "in the system yeah um uh I think I think yeah well the the",
    "start": "2472900",
    "end": "2478420"
  },
  {
    "text": "business is mostly kind of running off this event sourced architecture now and we're looking at tools now that we're",
    "start": "2478420",
    "end": "2483940"
  },
  {
    "text": "sort of uh I guess aligned on that same pattern we're looking at tools things",
    "start": "2483940",
    "end": "2489220"
  },
  {
    "text": "like snowflake allow us to do uh interesting queries a very very powerful and get interesting queries over an",
    "start": "2489220",
    "end": "2495339"
  },
  {
    "text": "entire event store very very efficiently too um so yeah that's an example of one of the",
    "start": "2495339",
    "end": "2501700"
  },
  {
    "text": "ways we do that",
    "start": "2501700",
    "end": "2504240"
  },
  {
    "text": "where does the publisher subscriber model fit into this like because when we",
    "start": "2508599",
    "end": "2513760"
  },
  {
    "text": "talk about event driven architectures that's one of the most common models of the communication models that we use",
    "start": "2513760",
    "end": "2520200"
  },
  {
    "text": "uh yeah I think I mean it really you can sort of just append it to",
    "start": "2520200",
    "end": "2525940"
  },
  {
    "text": "um any of these these models that produce an event uh in in this case we have a message broker but if you if we",
    "start": "2525940",
    "end": "2532240"
  },
  {
    "text": "wanted to do different ways to to publish those events out for other things to look at so message broker in",
    "start": "2532240",
    "end": "2537520"
  },
  {
    "text": "this one message broker in this one and then the event sourced architecture they just read from the store itself but um you",
    "start": "2537520",
    "end": "2544240"
  },
  {
    "text": "could of course attach that to some sort of thing that can publish those messages for other things to consume",
    "start": "2544240",
    "end": "2551940"
  },
  {
    "text": "thank you uh just a quick question so um microservices and eventually",
    "start": "2560380",
    "end": "2566859"
  },
  {
    "text": "architecture always looks very satisfying at the beginning when you have two three maybe five but as soon as",
    "start": "2566859",
    "end": "2573220"
  },
  {
    "text": "you step the game and you have like 50 100 microservices starting to understand",
    "start": "2573220",
    "end": "2578680"
  },
  {
    "text": "what's happening when there is an air or we need to track something very specific and get really really messy and really",
    "start": "2578680",
    "end": "2586000"
  },
  {
    "text": "really complicated and that's usually the point where people start thinking maybe microservices was not such a great",
    "start": "2586000",
    "end": "2591640"
  },
  {
    "text": "idea after all so I was just wondering if you ended up to that level of complexity and what you did about it",
    "start": "2591640",
    "end": "2598319"
  },
  {
    "text": "uh we we didn't get to that point I think we made a conscious decision not to have that",
    "start": "2598319",
    "end": "2603400"
  },
  {
    "text": "um combinatorial explosion of hundreds and thousands of microservices um I'd point you to a a talk maybe uh we",
    "start": "2603400",
    "end": "2610720"
  },
  {
    "text": "can chat after this as a talk by the guy in the",
    "start": "2610720",
    "end": "2615940"
  },
  {
    "text": "first photo Lee Campbell um he describes I guess the different like",
    "start": "2615940",
    "end": "2623500"
  },
  {
    "text": "he asked the question what's the size what size should a service be you start with a monolith which might be a bear",
    "start": "2623500",
    "end": "2630220"
  },
  {
    "text": "you can get a visual representation of a bear it's quite large it's very very hard to go up against a bear",
    "start": "2630220",
    "end": "2638500"
  },
  {
    "text": "um and then you might have ants which are those tiny microservices the objective is we're trying to kill the",
    "start": "2638500",
    "end": "2645220"
  },
  {
    "text": "monolith we're trying to get rid of it I don't think there are really enough why how many ants would you need to kill a",
    "start": "2645220",
    "end": "2650740"
  },
  {
    "text": "bear probably quite a lot Millions um you're not really going to be able to do it very effectively",
    "start": "2650740",
    "end": "2656619"
  },
  {
    "text": "um so it puts puts together a um an idea of something in the middle that's not quite those microservices that are those",
    "start": "2656619",
    "end": "2662560"
  },
  {
    "text": "single function single responsibility single thing but hundreds of them that",
    "start": "2662560",
    "end": "2667780"
  },
  {
    "text": "are quite hard to manage something is that's in the middle that uh he describes as wolves you only probably",
    "start": "2667780",
    "end": "2674260"
  },
  {
    "text": "need a couple of wolves to kill a bear a wolf pack and they work together very effectively",
    "start": "2674260",
    "end": "2679500"
  },
  {
    "text": "and it Paints the idea that you should probably be able to count those services that that wolf pack on on two hands no",
    "start": "2679500",
    "end": "2686020"
  },
  {
    "text": "more than that and you should be able to name them all give them all a meaningful name so break them up into",
    "start": "2686020",
    "end": "2691900"
  },
  {
    "text": "um something that you can identify I've got the something service and this one and this one if you're trying to",
    "start": "2691900",
    "end": "2697300"
  },
  {
    "text": "identify 100 marker Services you probably get through a few and then just forget and get lost but yeah the idea",
    "start": "2697300",
    "end": "2703599"
  },
  {
    "text": "that a wolf pack is probably a very effective a number of ways to to break",
    "start": "2703599",
    "end": "2709240"
  },
  {
    "text": "up a microservice a wolf pack is enough to kill a bear that's that's I guess the takeaway there",
    "start": "2709240",
    "end": "2715420"
  },
  {
    "text": "but watch that talk it's a good one is there another movie",
    "start": "2715420",
    "end": "2723059"
  },
  {
    "text": "so you said when uh Services fail the orchestrator starts compensator",
    "start": "2728680",
    "end": "2733839"
  },
  {
    "text": "reactions um what happens when those actions themselves fail how do you handle that",
    "start": "2733839",
    "end": "2740319"
  },
  {
    "text": "uh I guess you might want to be retrying those actions so those workflows I'm",
    "start": "2740319",
    "end": "2745660"
  },
  {
    "text": "going to go back again um they work quite file because of a business rule so in this case it's not",
    "start": "2745660",
    "end": "2752619"
  },
  {
    "text": "the same as the failing earlier on that you know this service was down in this case because we've taken this out of",
    "start": "2752619",
    "end": "2758980"
  },
  {
    "text": "process we can just keep retrying that shouldn't be an issue um but in in this case the this is",
    "start": "2758980",
    "end": "2764740"
  },
  {
    "text": "failing because of business constraint so we actually have decided that um if we get into this state we can't",
    "start": "2764740",
    "end": "2770440"
  },
  {
    "text": "give someone the same Avatar twice like you can only do that once maybe we've ended up in this state because two",
    "start": "2770440",
    "end": "2775900"
  },
  {
    "text": "requests came in at the same time um so this one here you can you can bring that back and you can just retry",
    "start": "2775900",
    "end": "2782079"
  },
  {
    "text": "here retry the uh add balance command until it works",
    "start": "2782079",
    "end": "2788680"
  },
  {
    "text": "what if it never works is there sort of a manual intervention anywhere",
    "start": "2788680",
    "end": "2794319"
  },
  {
    "text": "uh you could do something like a dead letter Cube so if you try a couple of times I'm not really a believer in dead",
    "start": "2794319",
    "end": "2800079"
  },
  {
    "text": "letter cues because it's the sort of thing in this case adding the balance is something you want to do you don't you",
    "start": "2800079",
    "end": "2805119"
  },
  {
    "text": "don't want to keep the this customer's coins and and keep them indefinitely it is something that you want to do identifying dead letter cues",
    "start": "2805119",
    "end": "2812760"
  },
  {
    "text": "are just somewhere where these events go to never be looked at again they won't",
    "start": "2812760",
    "end": "2818440"
  },
  {
    "text": "ever trigger any sort of manual action we should we should be able to do uh this reversal this compensating",
    "start": "2818440",
    "end": "2824140"
  },
  {
    "text": "transaction even if we have to retry a couple of times",
    "start": "2824140",
    "end": "2828720"
  },
  {
    "text": "because you're all awake still obviously getting lots of questions",
    "start": "2834040",
    "end": "2839260"
  },
  {
    "text": "uh thank you for your talk that was very interesting so um in this model here you've effectively got a distributed",
    "start": "2839260",
    "end": "2844660"
  },
  {
    "text": "transaction and you've had to do all of that to avoid the um the problem of bits",
    "start": "2844660",
    "end": "2850000"
  },
  {
    "text": "of it failing did you consider the idea that you could keep the bits that are involved in the distributed transaction",
    "start": "2850000",
    "end": "2855940"
  },
  {
    "text": "together so you get transactional database functionality and use microservices for everything else",
    "start": "2855940",
    "end": "2863440"
  },
  {
    "text": "um yeah possibly um this is a this isn't a real example it's a fairly fairly contrived I'd say so um there are examples where we do",
    "start": "2863440",
    "end": "2870640"
  },
  {
    "text": "have to do quite a lot of things um and we did want to split that up into a distributed transaction potentially in",
    "start": "2870640",
    "end": "2876040"
  },
  {
    "text": "this one like I really like that Atomic Atomic database transaction um I kept going on about it it is just a",
    "start": "2876040",
    "end": "2883119"
  },
  {
    "text": "very very efficient way to to do things and I think in this case because it is quite simple it's really two things it's",
    "start": "2883119",
    "end": "2888579"
  },
  {
    "text": "a balance change and kind of assigning an avatar to someone",
    "start": "2888579",
    "end": "2893800"
  },
  {
    "text": "um really I kind of like leaning more towards that Atomic transaction it's just a very elegant way of handling that",
    "start": "2893800",
    "end": "2901000"
  },
  {
    "text": "does that answer your question it's um taking taking something that you",
    "start": "2901000",
    "end": "2907900"
  },
  {
    "text": "know a solution to a problem not going automatically with this monstrously complex thing because it is there's a",
    "start": "2907900",
    "end": "2913540"
  },
  {
    "text": "lot going on here um just making that call as to whether something you're looking at is really worth splitting up in this way",
    "start": "2913540",
    "end": "2921780"
  },
  {
    "text": "online question online question um is there a place for retry or failure at all if yes how deep do we need to go",
    "start": "2928359",
    "end": "2935319"
  },
  {
    "text": "for example what happened if the compensating transaction failed",
    "start": "2935319",
    "end": "2940720"
  },
  {
    "text": "I think I already answered that question yeah yeah that's that's fair I think um retrying",
    "start": "2940720",
    "end": "2947319"
  },
  {
    "text": "uh you will do retrying if uh it failed because the service is down something unexpected um I think in this case uh",
    "start": "2947319",
    "end": "2954220"
  },
  {
    "text": "this is something we're anticipating so this is something we are expecting and it's it's handling a business constraint",
    "start": "2954220",
    "end": "2960460"
  },
  {
    "text": "um so I think they're talking about like if your balance ad one failed right like adding it back in yep uh we would just",
    "start": "2960460",
    "end": "2967660"
  },
  {
    "text": "keep retrying that I don't I don't see I don't see why that would would fail because we're not doing something like",
    "start": "2967660",
    "end": "2974319"
  },
  {
    "text": "um deducting a balance and putting it into a negative or something like that",
    "start": "2974319",
    "end": "2979900"
  },
  {
    "text": "with adding balance assuming there's no maximum we're not going to hit any sort of business constraint there",
    "start": "2979900",
    "end": "2985780"
  },
  {
    "text": "um obviously if we if we do keep retrying it um we'd want that to be item potent so that we're not continuously adding the",
    "start": "2985780",
    "end": "2992020"
  },
  {
    "text": "balance and making it go up and up um but yeah that that for me uh that",
    "start": "2992020",
    "end": "2997180"
  },
  {
    "text": "would be something I would just retry did that answer their question",
    "start": "2997180",
    "end": "3003440"
  },
  {
    "text": "no other follow-up no cool um yeah",
    "start": "3003720",
    "end": "3008060"
  },
  {
    "text": "hey um two-part question firstly did you have any performance scalability issues",
    "start": "3010980",
    "end": "3016200"
  },
  {
    "text": "with your monolithic solution and secondly for I'll uh say a um like",
    "start": "3016200",
    "end": "3023280"
  },
  {
    "text": "company that doesn't have the ability or need to grow would you recommend moving",
    "start": "3023280",
    "end": "3029760"
  },
  {
    "text": "past the monolith uh cool so part one question was a",
    "start": "3029760",
    "end": "3035160"
  },
  {
    "text": "performance thing um this is again quite a contrived example it's not it's not really what happened but yeah in our",
    "start": "3035160",
    "end": "3041220"
  },
  {
    "text": "case we didn't hit that performance limit Adam Adam if you remember in his Cafe abusing Adam as the analogy he was",
    "start": "3041220",
    "end": "3047400"
  },
  {
    "text": "able to handle all the orders he wasn't actually having problems there but he was finding that keeping track in his",
    "start": "3047400",
    "end": "3053040"
  },
  {
    "text": "head of all the different things to do was was the hard part um so it was a case of growing the company",
    "start": "3053040",
    "end": "3060780"
  },
  {
    "text": "so that we could effectively manage those things it wasn't necessarily a performance thing we do know that in in",
    "start": "3060780",
    "end": "3066000"
  },
  {
    "text": "this particular case here we've taken handling most of this checkout at a process so there's not a performance",
    "start": "3066000",
    "end": "3071640"
  },
  {
    "text": "issue necessarily but there is that eventual consistency where a process that happens within a single request",
    "start": "3071640",
    "end": "3077280"
  },
  {
    "text": "life cycle now happens over a couple of seconds um but yeah that that we weren't hitting",
    "start": "3077280",
    "end": "3083760"
  },
  {
    "text": "any sort of those performance issues we we were uh mainly focused on growing the company",
    "start": "3083760",
    "end": "3089579"
  },
  {
    "text": "we're having more people having more people working on top of each other um how can we make that more efficient",
    "start": "3089579",
    "end": "3096059"
  },
  {
    "text": "remind me again what your second question was well for a company that doesn't have the ability or",
    "start": "3096059",
    "end": "3102420"
  },
  {
    "text": "um need to grow would you recommend going beyond the monolith",
    "start": "3102420",
    "end": "3108079"
  },
  {
    "text": "uh no I don't think so like obviously you you make um architectural decisions",
    "start": "3108079",
    "end": "3113460"
  },
  {
    "text": "and trade-offs based on the problem you have to solve at hand but I think it's unlikely or less likely that a small",
    "start": "3113460",
    "end": "3119760"
  },
  {
    "text": "team is going to have those problems where they're all working on top of each other where there's where they can't",
    "start": "3119760",
    "end": "3125460"
  },
  {
    "text": "keep on top of boundaries and separations of concerns it's really a problem that comes when",
    "start": "3125460",
    "end": "3131520"
  },
  {
    "text": "you take your team and you double the size of it or triple the size of it and there's a lot more of a network effect",
    "start": "3131520",
    "end": "3136859"
  },
  {
    "text": "that happens thank you",
    "start": "3136859",
    "end": "3141260"
  },
  {
    "text": "[Music] we got time for one more yeah",
    "start": "3142370",
    "end": "3148640"
  },
  {
    "text": "so when you take um something split into components it's easy to test each individual component one of the truth realities we found with",
    "start": "3150900",
    "end": "3157920"
  },
  {
    "text": "automated testing is if all you have a test on those individual components you cannot prove the system works you need",
    "start": "3157920",
    "end": "3164160"
  },
  {
    "text": "something that tests the entire system and we don't like testing in production what classical integration tests are all",
    "start": "3164160",
    "end": "3170460"
  },
  {
    "text": "based around API testing how what kind of strategy do you take for automatically proving and automatically",
    "start": "3170460",
    "end": "3175680"
  },
  {
    "text": "validating something like the checkup process manager and does it always require recreating the entire system or",
    "start": "3175680",
    "end": "3182339"
  },
  {
    "text": "can you if you found ways to prove it out with just in one component in isolation like the process manager",
    "start": "3182339",
    "end": "3188099"
  },
  {
    "text": "itself um I I tend to find that the the uh",
    "start": "3188099",
    "end": "3193380"
  },
  {
    "text": "unfortunately in this maybe this isn't uh maybe someone's got a better answer to this I tend to find that the the way to properly test that is to test fully",
    "start": "3193380",
    "end": "3199920"
  },
  {
    "text": "including all the integration points um that that whole system so it does require building it building it out sometimes quite manual um I've got close",
    "start": "3199920",
    "end": "3207660"
  },
  {
    "text": "to it before in the sense that we can create uh in-memory stores like the",
    "start": "3207660",
    "end": "3212940"
  },
  {
    "text": "in-memory event store and sort of bring it all up but it requires in in a sort of unit test context bringing all of",
    "start": "3212940",
    "end": "3219540"
  },
  {
    "text": "this stuff up just so that we can run through one workflow which isn't necessarily ideal be identifying this is",
    "start": "3219540",
    "end": "3225720"
  },
  {
    "text": "this is a like I think a pretty well known thing with um splitting everything into separate Services it does make it",
    "start": "3225720",
    "end": "3231420"
  },
  {
    "text": "harder to test in that way",
    "start": "3231420",
    "end": "3234619"
  },
  {
    "text": "I had a quick question before we finish up what was the name of the game I'm curious uh well I mean so I work with vgw we we",
    "start": "3237540",
    "end": "3244680"
  },
  {
    "text": "produce online social games so um we have three games jumper Casino Global poker and lucky landslots and we produce",
    "start": "3244680",
    "end": "3252000"
  },
  {
    "text": "stock games and Global poker and Casual games um multiplayer all those all that sort",
    "start": "3252000",
    "end": "3257940"
  },
  {
    "text": "of stuff um so this is meant to be a again a contrived example it sort of represents a bit of a mix of all three",
    "start": "3257940",
    "end": "3264359"
  },
  {
    "text": "awesome well obviously you picked a lot of people's interests with a number of questions you had",
    "start": "3264359",
    "end": "3269460"
  },
  {
    "text": "um if everyone could give him a warm-up thinking first time today and I think",
    "start": "3269460",
    "end": "3276380"
  }
]