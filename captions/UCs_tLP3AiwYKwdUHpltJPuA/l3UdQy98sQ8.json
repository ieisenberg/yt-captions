[
  {
    "text": "[Applause] for the record anybody who's not on",
    "start": "8200",
    "end": "15000"
  },
  {
    "text": "Twitter good idea it's a terrible terrible place so first off thank you so much for",
    "start": "15000",
    "end": "21960"
  },
  {
    "text": "coming to my talk I understand this is one of the last sessions and it was probably kind of mean of you out to",
    "start": "21960",
    "end": "28080"
  },
  {
    "text": "throw a super technical talk in the graveyard shift but hopefully everybody can remain awake enough to follow anyway",
    "start": "28080",
    "end": "33600"
  },
  {
    "text": "my name is Hillel Wayne and this is designing distributed systems with TLA plus AKA everything about distributed",
    "start": "33600",
    "end": "39180"
  },
  {
    "text": "systems is terrible AKA hey waterfall let's go back to that",
    "start": "39180",
    "end": "44399"
  },
  {
    "text": "so a quick outline we're going to be covering first what exactly we mean by a distributed system or dissem why they",
    "start": "44399",
    "end": "50640"
  },
  {
    "text": "are so terrible why a lot of the tools that people sell as obviously obviously fixing the problem don't actually fix",
    "start": "50640",
    "end": "57539"
  },
  {
    "text": "the problem and how TLA plus can help not solve it but help I am not trying to sell Miracles here a couple of things",
    "start": "57539",
    "end": "64260"
  },
  {
    "text": "before we begin though one like I do hate to say this but this is at least 30 percent of a sales pitch in the past",
    "start": "64260",
    "end": "70260"
  },
  {
    "text": "year or so my life has kind of wandered into giving these talks and giving um tutorials and workshops professionally",
    "start": "70260",
    "end": "75600"
  },
  {
    "text": "so if you're not a fan of sales pitches now's a good time to leave I'll give you five seconds",
    "start": "75600",
    "end": "81618"
  },
  {
    "text": "I'm pretty impressed with y'all second because it's pretty late in the day and I have a fairly involved work",
    "start": "82500",
    "end": "88200"
  },
  {
    "text": "example I figure it's a little bit cool to throw that all at you and hope you all follow so I put the full example at",
    "start": "88200",
    "end": "94020"
  },
  {
    "text": "this site you can see the example you can see all the slides and you can see any questions people have asked me",
    "start": "94020",
    "end": "99060"
  },
  {
    "text": "if people ask me questions after this talk too I will put them all at this site at some point so it's essentially a",
    "start": "99060",
    "end": "104520"
  },
  {
    "text": "canonical repo for this information so before we begin we do have to ask one",
    "start": "104520",
    "end": "110460"
  },
  {
    "text": "question what do we mean by distributed system anybody who gives any talk on dissims",
    "start": "110460",
    "end": "116399"
  },
  {
    "text": "must include this quote by contract a distributed system is one in which the failure of a computer you don't even",
    "start": "116399",
    "end": "122220"
  },
  {
    "text": "know existed can render your own unusable I think there are at least two other talks that yeah this year that also use",
    "start": "122220",
    "end": "127619"
  },
  {
    "text": "this quote note the author Leslie Lampard he's a",
    "start": "127619",
    "end": "134040"
  },
  {
    "text": "very very big deal in this space and we're going to come back to him later but with all due respect to him",
    "start": "134040",
    "end": "140040"
  },
  {
    "text": "I'm not the biggest fan of this definition because while it's funny and people remember it it doesn't really capture",
    "start": "140040",
    "end": "146640"
  },
  {
    "text": "the heart of what we mean by a distributed system and to show that I'd like to do a small",
    "start": "146640",
    "end": "151739"
  },
  {
    "text": "thought experiment first imagine we have two computers and",
    "start": "151739",
    "end": "156840"
  },
  {
    "text": "a server servers running a database both computers are pulling information from the database modifying it returning it",
    "start": "156840",
    "end": "162180"
  },
  {
    "text": "to the database raise your hand if you think this is a distributed system",
    "start": "162180",
    "end": "167300"
  },
  {
    "text": "okay I'm saying about how the hands go up this is maybe not like kubernetes or mapreduce but it sort of falls in the",
    "start": "168599",
    "end": "174540"
  },
  {
    "text": "same template multiple systems interacting now we have one computer two threads so the",
    "start": "174540",
    "end": "182160"
  },
  {
    "text": "database we have a file threads are reading from the files doing calculations right into the file is this",
    "start": "182160",
    "end": "187800"
  },
  {
    "text": "a distributed system okay I have seen two hands go wait one",
    "start": "187800",
    "end": "192840"
  },
  {
    "text": "hand go up okay now that's interesting to me that one is a dissim and one's not despite the fact",
    "start": "192840",
    "end": "199980"
  },
  {
    "text": "that as I described it they have the same functional semantics get process right",
    "start": "199980",
    "end": "205920"
  },
  {
    "text": "so what makes one that case in the other one not history mostly if you read the early",
    "start": "205920",
    "end": "213120"
  },
  {
    "text": "works on threading things by Deckard dixtra Etc in the 1960s they actually",
    "start": "213120",
    "end": "218580"
  },
  {
    "text": "treated threads the logically treat distance now they were concerned with the same issues they had the same",
    "start": "218580",
    "end": "223680"
  },
  {
    "text": "categories of solutions the solutions had the same failure modes our distance have now",
    "start": "223680",
    "end": "229560"
  },
  {
    "text": "it's only because in the past 20 30 years that we were able to do Hardware Advanced as an operating system advances",
    "start": "229560",
    "end": "235560"
  },
  {
    "text": "that make it easy for us to think about it one as a cohesive whole we essentially were able to use technology",
    "start": "235560",
    "end": "241260"
  },
  {
    "text": "to undistribute threats",
    "start": "241260",
    "end": "245000"
  },
  {
    "text": "now to suggests two things to me one threads and computers literally the exact same thing",
    "start": "247200",
    "end": "252959"
  },
  {
    "text": "two while they may not be identical we can probably unify the challenges both face and how both systems operate",
    "start": "252959",
    "end": "260280"
  },
  {
    "text": "under a single unifying idea we can create one extraction that covers both of them",
    "start": "260280",
    "end": "266639"
  },
  {
    "text": "the abstraction I like and the one that I'm going to use going forward is this a distributed system is one where we",
    "start": "266639",
    "end": "273240"
  },
  {
    "text": "have multiple agents agent can be a thread a process a computer a person all four",
    "start": "273240",
    "end": "278580"
  },
  {
    "text": "where they are all interacting in a global environment that means that we have emergent properties that only",
    "start": "278580",
    "end": "283740"
  },
  {
    "text": "matter when we look at all the agents together but at the same time each agent only has",
    "start": "283740",
    "end": "289320"
  },
  {
    "text": "a local information in order to get Global Information each agent has to talk to the other agents and that is",
    "start": "289320",
    "end": "295620"
  },
  {
    "text": "something that can also be problematic I like this definition because it naturally gives rise to all the",
    "start": "295620",
    "end": "302220"
  },
  {
    "text": "illnesses of a distributed system things like concurrency race conditions",
    "start": "302220",
    "end": "307400"
  },
  {
    "text": "non-deterministic action and everybody's favorite bug bear partial failure which",
    "start": "307400",
    "end": "312660"
  },
  {
    "text": "is simply saying that some agents are allowed to fail without the whole system going down so this distributed system terrible",
    "start": "312660",
    "end": "321060"
  },
  {
    "text": "why is it terrible it's terrible because it's very hard for us as humans to understand them and",
    "start": "321060",
    "end": "326460"
  },
  {
    "text": "reason about how they work that's also tautological that's kind of saying the same thing",
    "start": "326460",
    "end": "332699"
  },
  {
    "text": "but there's also a mechanism here that causes that that causes there to be this difficult to reason about",
    "start": "332699",
    "end": "338220"
  },
  {
    "text": "in this case it's something we call State space explosion the number of things the system can do the number of",
    "start": "338220",
    "end": "343380"
  },
  {
    "text": "states it can be in gets very very big very quickly to see this we need to talk about some",
    "start": "343380",
    "end": "348600"
  },
  {
    "text": "of the common issues that we see in these systems first one probably the most common one",
    "start": "348600",
    "end": "353940"
  },
  {
    "text": "concurrency concurrency being when agents can run at different rates and happen in different orders",
    "start": "353940",
    "end": "360479"
  },
  {
    "text": "new thought experiment we have two agents and one Global value X starts at",
    "start": "360479",
    "end": "366120"
  },
  {
    "text": "one one agent doubles X One agent increments X not a lot going on",
    "start": "366120",
    "end": "371820"
  },
  {
    "text": "we'll also assume that each of these is atomic so you can't have agent do x equals X Plus and the other agent go in",
    "start": "371820",
    "end": "378060"
  },
  {
    "text": "each one takes exactly one step but because the fact we have time time",
    "start": "378060",
    "end": "384660"
  },
  {
    "text": "being a thing they can't both happen in the same exact instant so question to the audience",
    "start": "384660",
    "end": "391740"
  },
  {
    "text": "after both threads run both agents run how many possible values connects have",
    "start": "391740",
    "end": "398060"
  },
  {
    "text": "water break okay",
    "start": "399479",
    "end": "405600"
  },
  {
    "text": "I'm seeing some people say too and that's correct either we increment then double or double the increment",
    "start": "405600",
    "end": "411419"
  },
  {
    "text": "now there's actually a subtle bit of hidden state in the system which agent",
    "start": "411419",
    "end": "417660"
  },
  {
    "text": "has run first when we think about that plus the value of x There is five observable",
    "start": "417660",
    "end": "423000"
  },
  {
    "text": "configurations of the system five different values everything in total can have",
    "start": "423000",
    "end": "428400"
  },
  {
    "text": "we call these the states the set of all of them is the state space in this case our state space",
    "start": "428400",
    "end": "434100"
  },
  {
    "text": "consists of five states we can also talk about timelines too how we go from start to finish",
    "start": "434100",
    "end": "440580"
  },
  {
    "text": "that's what we call Behavior this system has two behaviors now it's a very simple system right now",
    "start": "440580",
    "end": "447660"
  },
  {
    "text": "it's something that we can all keep in our heads five states two behaviors not really a big deal",
    "start": "447660",
    "end": "453479"
  },
  {
    "text": "but the challenge with concurrency is that if we add even a small amount of additional complexity",
    "start": "453479",
    "end": "459960"
  },
  {
    "text": "number of states increases very significantly I'm going to add a small amount of concurrency to this system",
    "start": "459960",
    "end": "466620"
  },
  {
    "text": "instead of first just modifying X atomically we assign it to a local variable then do the computation",
    "start": "466620",
    "end": "473280"
  },
  {
    "text": "now this is non-atomic we can have the agent first agent do something and then the second agent first agent run from",
    "start": "473280",
    "end": "479759"
  },
  {
    "text": "start to finish and then the second agent finished how many states does this system have",
    "start": "479759",
    "end": "485039"
  },
  {
    "text": "how many different possible configurations",
    "start": "485039",
    "end": "488720"
  },
  {
    "text": "now you might you might actually be finding this a lot easier a lot harder to reason about in your head and that's to be expected because the state space",
    "start": "492360",
    "end": "498720"
  },
  {
    "text": "is actually more complicated we've gone from five states and two behaviors to 13",
    "start": "498720",
    "end": "503879"
  },
  {
    "text": "states and eight behaviors so just adding a very small amount of concurrency caused a very large increase",
    "start": "503879",
    "end": "509940"
  },
  {
    "text": "in complexity in fact if we added a third two-step agent the maximum number",
    "start": "509940",
    "end": "515580"
  },
  {
    "text": "of states we could have is 540. so each additional agent we have almost pretty",
    "start": "515580",
    "end": "521520"
  },
  {
    "text": "much increases the order of magnitude by one this is really one of the fundamental heuristics of a descent any sort of",
    "start": "521520",
    "end": "528360"
  },
  {
    "text": "interesting system this being the ultimate alternating bit protocol will have a very very very large State",
    "start": "528360",
    "end": "534899"
  },
  {
    "text": "space one that's much much much too hard to keep all in our heads at once essentially concurrency makes the state",
    "start": "534899",
    "end": "542339"
  },
  {
    "text": "space grow fast of course that's only part of the issue",
    "start": "542339",
    "end": "548160"
  },
  {
    "text": "if that was the only issue this would be tolerable but not terrible see remember how we talked about partial",
    "start": "548160",
    "end": "554700"
  },
  {
    "text": "failure earlier that we have some agents being allowed to fail that's an instance of what we call",
    "start": "554700",
    "end": "559740"
  },
  {
    "text": "non-determinism the ability for the system to do one of many things at a point each agent to do one of many",
    "start": "559740",
    "end": "565800"
  },
  {
    "text": "things before our system was locally deterministic we had a race condition",
    "start": "565800",
    "end": "571260"
  },
  {
    "text": "between the agents but each agent did exactly two things in exactly one order",
    "start": "571260",
    "end": "576480"
  },
  {
    "text": "if I want to allow say an agent increment X by one or by two or crash that's now three things it is allowed to",
    "start": "576480",
    "end": "582540"
  },
  {
    "text": "do at that step and this doesn't do a whole lot to the state space but it can do pretty",
    "start": "582540",
    "end": "588959"
  },
  {
    "text": "terrible things to our Behavior space new example X is now trapped between zero and six one agent increments X One",
    "start": "588959",
    "end": "596279"
  },
  {
    "text": "agent decrements X how many possible States pardon no look at how the hell there's like",
    "start": "596279",
    "end": "602760"
  },
  {
    "text": "those if checks so it can't actually go yeah",
    "start": "602760",
    "end": "607459"
  },
  {
    "text": "this isn't a trick question close seven because zero is also a value",
    "start": "607800",
    "end": "613320"
  },
  {
    "text": "as it should be I believe that natural numbers start from zero like a real person",
    "start": "613320",
    "end": "619459"
  },
  {
    "text": "in any case we have seven distinct States and if we look only at behaviors that are five steps long about 14",
    "start": "620459",
    "end": "627180"
  },
  {
    "text": "distinct behaviors not a very complicated system",
    "start": "627180",
    "end": "632220"
  },
  {
    "text": "now again I make one change it can either increment by one or by two",
    "start": "632220",
    "end": "637680"
  },
  {
    "text": "note we're still keeping it to between zero and six it cannot go to seven or anything how many states do we have now",
    "start": "637680",
    "end": "644339"
  },
  {
    "text": "again not a trick question I shouldn't have done this after lunch",
    "start": "644339",
    "end": "650459"
  },
  {
    "text": "NT still seven yes we've not actually added any new nodes to the graph",
    "start": "650459",
    "end": "657000"
  },
  {
    "text": "but we have added five new edges ways we can go from one state to another state",
    "start": "657000",
    "end": "663600"
  },
  {
    "text": "and now instead of having 14 distinct five-step behaviors we have about 110.",
    "start": "663600",
    "end": "669959"
  },
  {
    "text": "again a very small change in the system order of magnitude increase in complexity basically any path you can draw through",
    "start": "669959",
    "end": "676620"
  },
  {
    "text": "the state space any path through the graph forms a distinct Behavior with distinct properties the number of",
    "start": "676620",
    "end": "682680"
  },
  {
    "text": "behaviors in a non-deterministic system grows very very fast",
    "start": "682680",
    "end": "688279"
  },
  {
    "text": "and both of these are things you need to pay attention to both the states and the behaviors we already have an intuitive sense as",
    "start": "690839",
    "end": "696480"
  },
  {
    "text": "Engineers that be that States can be dangerous there can be unsafe States",
    "start": "696480",
    "end": "701519"
  },
  {
    "text": "if this was the state space of say an email messaging queue corrupting an email would correspond to an exact",
    "start": "701519",
    "end": "708120"
  },
  {
    "text": "configuration snapshot of the system where our email was just filled with junk binary data we want to avoid that",
    "start": "708120",
    "end": "714480"
  },
  {
    "text": "that's bad if that's in our state space if it's a possible thing we can do that's a problem",
    "start": "714480",
    "end": "721019"
  },
  {
    "text": "but it's very easy to fall into a trap here to assume that if we fix all of the states we have a good system",
    "start": "721019",
    "end": "728100"
  },
  {
    "text": "that's not true behaviors can be unsafe too even if they only follow safe States",
    "start": "728100",
    "end": "733220"
  },
  {
    "text": "imagine that we have this little path in our system every single state is valid one of these states involves nothing",
    "start": "733220",
    "end": "739740"
  },
  {
    "text": "being on the queue one of these states involves one message being on the queue going from nothing to one message",
    "start": "739740",
    "end": "745399"
  },
  {
    "text": "totally fine but if we never send that message we still make we still made our customer",
    "start": "745399",
    "end": "751680"
  },
  {
    "text": "unhappy we've never entered an invalid state but we've never actually reached the state we want to reach our Behavior",
    "start": "751680",
    "end": "758160"
  },
  {
    "text": "itself is unsafe so it's not just enough to look at the states we also have to look at the timelines the behaviors make sure every",
    "start": "758160",
    "end": "765000"
  },
  {
    "text": "path through our system is also safe of course",
    "start": "765000",
    "end": "771360"
  },
  {
    "text": "I've just talked about how these states are huge big does having one or two invalid States or behaviors is that",
    "start": "771360",
    "end": "777480"
  },
  {
    "text": "really a big deal well if we have say one critical",
    "start": "777480",
    "end": "782779"
  },
  {
    "text": "Behavior one bad state that only happens one in a billion events so we have to",
    "start": "782779",
    "end": "788519"
  },
  {
    "text": "call this one path a billion times before we reach the outage and we only call 100 events a second",
    "start": "788519",
    "end": "794820"
  },
  {
    "text": "honestly I've worked for companies where we've had less than like a dozen engineers and this is not that hard to hit 100 events a second not really a big",
    "start": "794820",
    "end": "801120"
  },
  {
    "text": "thing for most distance how many years will it be before we have our first critical outage any guesses",
    "start": "801120",
    "end": "810260"
  },
  {
    "text": "actually that's probably the most accurate answer I've gotten from any audience on this it's about three months so every time you file your quarterly",
    "start": "817920",
    "end": "824160"
  },
  {
    "text": "taxes you'll have an outage in other words for any interesting system at any of any interesting scale",
    "start": "824160",
    "end": "830820"
  },
  {
    "text": "over a long enough time it will reach all possible States and follow all possible behaviors",
    "start": "830820",
    "end": "837480"
  },
  {
    "text": "you might know this as Murphy's Law",
    "start": "837480",
    "end": "841699"
  },
  {
    "text": "this means that even a single state that's invalid or a single Behavior that's problematic is",
    "start": "846540",
    "end": "852779"
  },
  {
    "text": "enough to cause a serious headaches in production that's something we need to solve",
    "start": "852779",
    "end": "858060"
  },
  {
    "text": "now the problem is we can't solve it but just thinking hard about it as I've said before these systems are just too big",
    "start": "858060",
    "end": "864660"
  },
  {
    "text": "too many season behaviors versus just a reason through it in our heads and that's why people keep selling",
    "start": "864660",
    "end": "870660"
  },
  {
    "text": "solutions that will just solve this problem for us things like oh if you just use CD far enough or just code review everything you're not gonna have",
    "start": "870660",
    "end": "877019"
  },
  {
    "text": "an issue if you just use immutable Haskell or immutable erlang or erlang Haskell no more problems",
    "start": "877019",
    "end": "882540"
  },
  {
    "text": "I mean the fact that erling Haskell hasn't taken over the world shows that doesn't really bear out in practice there's something more we need",
    "start": "882540",
    "end": "890100"
  },
  {
    "text": "and there's a lot of solutions people have sold saying we need some are so widespread we don't even think about",
    "start": "890100",
    "end": "896100"
  },
  {
    "text": "them anymore things like compare and swap instructions some of them are things that all of us",
    "start": "896100",
    "end": "901320"
  },
  {
    "text": "know about if we even if we don't necessarily use them things like locks and semaphores and some like software transactional",
    "start": "901320",
    "end": "907920"
  },
  {
    "text": "memory and nurseries are sort of on The Cutting Edge of programming",
    "start": "907920",
    "end": "913199"
  },
  {
    "text": "systems now don't get me wrong a lot of these are good ideas I use a lot of these they",
    "start": "913199",
    "end": "919980"
  },
  {
    "text": "help but they all do have a problem and they all have a problem that",
    "start": "919980",
    "end": "927660"
  },
  {
    "text": "they all share actually it's the same problem can anybody see it",
    "start": "927660",
    "end": "933019"
  },
  {
    "text": "now you can mix the match it's actually a",
    "start": "936839",
    "end": "942720"
  },
  {
    "text": "much more subtle problem that's that's a that's a good problem that you might see in systems but it's even submer than that",
    "start": "942720",
    "end": "948660"
  },
  {
    "text": "the problem with all of these is that their code what each of these does",
    "start": "948660",
    "end": "954959"
  },
  {
    "text": "is they reduce the state space we take them we apply them and after tear",
    "start": "954959",
    "end": "960240"
  },
  {
    "text": "sweating blood we make our state space go from this to this but remember one invalid state or one in",
    "start": "960240",
    "end": "968040"
  },
  {
    "text": "valid behavior is enough to cause a problem what if we don't actually remove the invalid State it's still over there we",
    "start": "968040",
    "end": "974160"
  },
  {
    "text": "still have an outage what if we don't get rid of the actual endowed Behavior we still have an angry",
    "start": "974160",
    "end": "979920"
  },
  {
    "text": "customer see the thing about using Code Solutions using implementation Solutions is that",
    "start": "979920",
    "end": "985860"
  },
  {
    "text": "we have to know where to apply them in the first place and oftentimes we don't the system is so",
    "start": "985860",
    "end": "991740"
  },
  {
    "text": "complicated we can't easily see where we need to use them in a sense State space explosion is is a",
    "start": "991740",
    "end": "998519"
  },
  {
    "text": "design problem not a code problem it's about our holistic understanding of the system and fundamentally code is not",
    "start": "998519",
    "end": "1004699"
  },
  {
    "text": "designed it can't be designed it's not supposed to be design trying to solve design problems with",
    "start": "1004699",
    "end": "1009800"
  },
  {
    "text": "code is like trying to use a set of lock picks to house train a puppy it's just fundamentally the wrong tool for the job",
    "start": "1009800",
    "end": "1017019"
  },
  {
    "text": "well in that case why do we always turn to code Solutions well because as I said these systems are",
    "start": "1017180",
    "end": "1022820"
  },
  {
    "text": "very complicated and if I wave a giant notebook in your face saying hey that system with 20 million States I made a",
    "start": "1022820",
    "end": "1029178"
  },
  {
    "text": "bunch of uml diagrams and thought about them really hard you're not going to believe me that it actually is going to fix the problem",
    "start": "1029179",
    "end": "1035380"
  },
  {
    "text": "designs aren't testable we can't use automated tooling to reason about them",
    "start": "1035380",
    "end": "1040640"
  },
  {
    "text": "and that makes code for however limited it is as a tool preferable to us",
    "start": "1040640",
    "end": "1047900"
  },
  {
    "text": "and this has led to a lot of people trying to make code more effective at eliminating some State space issues better at dealing with these problems",
    "start": "1047900",
    "end": "1055580"
  },
  {
    "text": "but more recently we've been trying a different approach we've been thinking what if we could test designs what if we",
    "start": "1055580",
    "end": "1061880"
  },
  {
    "text": "could use automated tooling to reason about our design this leads to the idea of formal",
    "start": "1061880",
    "end": "1067580"
  },
  {
    "text": "specification essentially debuggable designs taking a system",
    "start": "1067580",
    "end": "1072860"
  },
  {
    "text": "writing a design for it and testing the design itself and there are a lot of tools in the",
    "start": "1072860",
    "end": "1078679"
  },
  {
    "text": "space many tools have proven remarkably effective they just have really terrible marketing right now",
    "start": "1078679",
    "end": "1084559"
  },
  {
    "text": "that's why I'm here and there's a lot of different variety here but the one I want to focus on is",
    "start": "1084559",
    "end": "1090320"
  },
  {
    "text": "one that has proven remarkably effective for real world production distributed systems",
    "start": "1090320",
    "end": "1095360"
  },
  {
    "text": "which means it's finally time like 20 minutes in to introduce the entire pointer all here TLA Plus",
    "start": "1095360",
    "end": "1103419"
  },
  {
    "text": "yeah jelly plus is again in the invention of Leslie Lamport and I told you he'd come up again",
    "start": "1105200",
    "end": "1111380"
  },
  {
    "text": "his idea was that math is more expressive than programming so it would make good blueprints we can express",
    "start": "1111380",
    "end": "1116900"
  },
  {
    "text": "complicated ideas in mathematics this saying the maximum of a set is just choosing the element of a set bigger",
    "start": "1116900",
    "end": "1122780"
  },
  {
    "text": "than the other elements no implementation required maybe we could use that same mathematical formalisms to express both",
    "start": "1122780",
    "end": "1129440"
  },
  {
    "text": "systems and their properties whether over the states the behaviors or the transitions between states",
    "start": "1129440",
    "end": "1135020"
  },
  {
    "text": "then we can take a model Checker in this case a tool known as TLC to take our system take our properties",
    "start": "1135020",
    "end": "1142900"
  },
  {
    "text": "and look at the entire State space and see if anything has an error",
    "start": "1142900",
    "end": "1148340"
  },
  {
    "text": "then it can give us an error Trace showing us exactly where the bug is in our design",
    "start": "1148340",
    "end": "1153799"
  },
  {
    "text": "now that all sounds great in theory but a lot of things sound great in theory",
    "start": "1153799",
    "end": "1159559"
  },
  {
    "text": "I've been to a lot of talks where people have been like yeah check out this amazing tool also doesn't exist yet I'm",
    "start": "1159559",
    "end": "1164840"
  },
  {
    "text": "just trying to like bull you all and I'm really not a fan of snake oil talks I just I don't know snake oil it",
    "start": "1164840",
    "end": "1171740"
  },
  {
    "text": "just makes you not trust anything so I want to actually show you what this looks like I want to show you this is",
    "start": "1171740",
    "end": "1177679"
  },
  {
    "text": "actually a real tool and something that you can use in your day-to-day work which means having example that is more",
    "start": "1177679",
    "end": "1183440"
  },
  {
    "text": "complicated than hey let's get the Fibonacci sequence as most demos on a stage do and something less complex than",
    "start": "1183440",
    "end": "1190400"
  },
  {
    "text": "hey here's a 50 page thing proving raft so let's talk about file uploads",
    "start": "1190400",
    "end": "1196580"
  },
  {
    "text": "we have a person they're uploading a file that they want transformed maybe they're trying to transform a",
    "start": "1196580",
    "end": "1202700"
  },
  {
    "text": "video and transcribe it or turn an MP3 into a OGG file",
    "start": "1202700",
    "end": "1208640"
  },
  {
    "text": "or convert a news template into a News Post they also want to do this on their own",
    "start": "1208640",
    "end": "1214220"
  },
  {
    "text": "time they don't want to be restricted to wait while the thing is processed they want to be able to upload as many things",
    "start": "1214220",
    "end": "1219620"
  },
  {
    "text": "as they want so every time we put an upload into the system we put a message on a perfect",
    "start": "1219620",
    "end": "1224720"
  },
  {
    "text": "fifo queue Martini your heart out it's perfect fifo exactly once delivery",
    "start": "1224720",
    "end": "1230000"
  },
  {
    "text": "one of the um other speakers was talking about how that doesn't exist perfect exactly once delivery it does for my",
    "start": "1230000",
    "end": "1235880"
  },
  {
    "text": "example which is then taken by a worker who",
    "start": "1235880",
    "end": "1241100"
  },
  {
    "text": "takes that upload and produces the corresponding content we will delineate unique content by the",
    "start": "1241100",
    "end": "1246260"
  },
  {
    "text": "ID so we have upload one creates content one upload two creates content two Etc",
    "start": "1246260",
    "end": "1252440"
  },
  {
    "text": "the user is also allowed to delete content they delete the upload and then the worker takes down the content",
    "start": "1252440",
    "end": "1259820"
  },
  {
    "text": "finally they can edit existing content they edit the upload the worker will take down the old upload no old content",
    "start": "1259820",
    "end": "1267200"
  },
  {
    "text": "and put up the new content of the new version and finally just to make this horrible",
    "start": "1267200",
    "end": "1272720"
  },
  {
    "text": "we'll let it scale we'll say that we can add any number of workers on this one queue and it should still work fine",
    "start": "1272720",
    "end": "1279919"
  },
  {
    "text": "who's had to build a systems kind of like this before",
    "start": "1279919",
    "end": "1284260"
  },
  {
    "text": "about half of you cool so hopefully this won't bring back any horrible memories",
    "start": "1285320",
    "end": "1291980"
  },
  {
    "text": "so I want to model this in TLA Plus a couple of caveats though one and this is a very important caveat",
    "start": "1291980",
    "end": "1298520"
  },
  {
    "text": "I have to tell people this is not a miracle worker specs do not check code I am not giving",
    "start": "1298520",
    "end": "1304460"
  },
  {
    "text": "you a tool that tells you whether your code is perfect this helps you with your design you still have to do the hard",
    "start": "1304460",
    "end": "1310580"
  },
  {
    "text": "work of actually coding that design yourself if it was any otherwise then this would",
    "start": "1310580",
    "end": "1315679"
  },
  {
    "text": "just be again a miracle drug a panicky as something that nobody would actually trust so I'm telling you it is limited",
    "start": "1315679",
    "end": "1320960"
  },
  {
    "text": "in this regard and two it uses a mathematical notation Leslie Lamport was a computer scientist",
    "start": "1320960",
    "end": "1326900"
  },
  {
    "text": "and a mathematician and while people can learn the notation pretty quickly I don't like that extra cognitive",
    "start": "1326900",
    "end": "1333260"
  },
  {
    "text": "overhead in a 40-minute talk so I took the liberty of translating the notation to look something more like python",
    "start": "1333260",
    "end": "1339320"
  },
  {
    "text": "I have not changed any of the syntax or the semantics I am just changing the way things look",
    "start": "1339320",
    "end": "1345020"
  },
  {
    "text": "you can see the original spec with the original code again at this site",
    "start": "1345020",
    "end": "1350539"
  },
  {
    "text": "so to start boilerplate variables uploads is going to be the things that",
    "start": "1350539",
    "end": "1356539"
  },
  {
    "text": "the user uploads content is the set of produced content Q is the list of messages next ID is the next thing we're",
    "start": "1356539",
    "end": "1363020"
  },
  {
    "text": "going to create the um upload unique thingy thing",
    "start": "1363020",
    "end": "1367720"
  },
  {
    "text": "then we have what it means to send a message we take our cue and we append onto that queue a new message where a",
    "start": "1368659",
    "end": "1375140"
  },
  {
    "text": "new message consists of the ID of the upload and the action we take boilerplate done now let's actually talk",
    "start": "1375140",
    "end": "1381679"
  },
  {
    "text": "about our agents in this system we have two independent agents the person and the worker right",
    "start": "1381679",
    "end": "1389179"
  },
  {
    "text": "we can talk about both of them actually in a programming language we can't actually simulate a person we can only say what they can do here we can",
    "start": "1389179",
    "end": "1395960"
  },
  {
    "text": "actually just drop them in as a distinct agent and have them mess with our system so we'll say that the person is",
    "start": "1395960",
    "end": "1403159"
  },
  {
    "text": "constantly trying to either create edit or delete content but the thing is is that this is",
    "start": "1403159",
    "end": "1408860"
  },
  {
    "text": "actually non-deterministic I might want to create five pieces of content delete four of them and then",
    "start": "1408860",
    "end": "1414140"
  },
  {
    "text": "create two more create a piece of content edit it 25 times and then create a second piece of",
    "start": "1414140",
    "end": "1419960"
  },
  {
    "text": "content then delete both I don't want my model Checker I don't want my system to force me to specify",
    "start": "1419960",
    "end": "1426860"
  },
  {
    "text": "the order and how many things I do so I use this thing called either or",
    "start": "1426860",
    "end": "1431900"
  },
  {
    "text": "what it does is it tells the spec hey exactly one of these things three things will happen each Loop but I don't know",
    "start": "1431900",
    "end": "1438740"
  },
  {
    "text": "which one then when the model Checker sees it it'll create a separate Universe for creation edit destroy every single time",
    "start": "1438740",
    "end": "1446240"
  },
  {
    "text": "it hits that Loop this now means that this covers both create create destroy or create delete",
    "start": "1446240",
    "end": "1452360"
  },
  {
    "text": "create delete create delete edit creation is pretty straightforward",
    "start": "1452360",
    "end": "1458179"
  },
  {
    "text": "we Define a new upload as who it's from the version number and the ID unique ID of the database row",
    "start": "1458179",
    "end": "1464480"
  },
  {
    "text": "we then add it to the set of uploads send a message and increment the next ID counter",
    "start": "1464480",
    "end": "1470179"
  },
  {
    "text": "this is all Atomic this all happens in the same step nothing can interrupt these three steps",
    "start": "1470179",
    "end": "1476659"
  },
  {
    "text": "it would normally be synonymous we'd remove the correspond delete from the um set of uploads and send the",
    "start": "1476659",
    "end": "1482179"
  },
  {
    "text": "message the difference with deleting though is that it's also not deterministic",
    "start": "1482179",
    "end": "1487580"
  },
  {
    "text": "if I have two uploads I can choose which one I want to delete right",
    "start": "1487580",
    "end": "1492919"
  },
  {
    "text": "that's what that width does it says take something in the set and create a separate timeline for each thing in the",
    "start": "1492919",
    "end": "1498140"
  },
  {
    "text": "set if I have two uploads check two timelines one where I delete item a and",
    "start": "1498140",
    "end": "1503179"
  },
  {
    "text": "one where I delete item B finally edit is the same is the same",
    "start": "1503179",
    "end": "1509179"
  },
  {
    "text": "thing we select something undeterministically to edit we bump the version number by one",
    "start": "1509179",
    "end": "1514280"
  },
  {
    "text": "corresponding to us making a change then we change the upload set and send a message",
    "start": "1514280",
    "end": "1520820"
  },
  {
    "text": "now note that actually if we have two uploads this means the user can do one of five things create a third upload",
    "start": "1520820",
    "end": "1528799"
  },
  {
    "text": "delete one of those two uploads edit one of those two uploads that's a pretty complicated Behavior but",
    "start": "1528799",
    "end": "1535580"
  },
  {
    "text": "we've already covered it the user is now done we are never going to have to touch the user again everything they can do is",
    "start": "1535580",
    "end": "1540740"
  },
  {
    "text": "now represented okay so the worker time and you're probably gonna get to good stuff soon",
    "start": "1540740",
    "end": "1547039"
  },
  {
    "text": "the worker is going to wait for messages pop the message from the head of the queue and then process it",
    "start": "1547039",
    "end": "1554360"
  },
  {
    "text": "for processing it we just simply if the action is create we do the create which we Define as being a single step we get",
    "start": "1554360",
    "end": "1561140"
  },
  {
    "text": "the message then we create it if we edit we do this in two steps we first start the edit and then push the",
    "start": "1561140",
    "end": "1567020"
  },
  {
    "text": "edit this is not Atomic things can interrupt this process and then finally we allow to delete",
    "start": "1567020",
    "end": "1573140"
  },
  {
    "text": "messages for creation we Define that as step one select the corresponding upload that",
    "start": "1573140",
    "end": "1579559"
  },
  {
    "text": "matches that ID then we select that upload add it to the content set",
    "start": "1579559",
    "end": "1585200"
  },
  {
    "text": "delete is analogous finally first start edit we select the",
    "start": "1585200",
    "end": "1590419"
  },
  {
    "text": "corresponding upload remove it from the set and then the second step push the new content of the new version",
    "start": "1590419",
    "end": "1596900"
  },
  {
    "text": "and that's it we're done with the worker now we have a full specification of our entire system",
    "start": "1596900",
    "end": "1601900"
  },
  {
    "text": "so let's actually do something with this we just spent all this time building things out let's actually see if our system has",
    "start": "1604400",
    "end": "1611179"
  },
  {
    "text": "properties the first property I'm going to test is something called cohesiveness or comprehensiveness",
    "start": "1611179",
    "end": "1617600"
  },
  {
    "text": "did we fully specify what should happen in every situation I don't necessarily want to know whether",
    "start": "1617600",
    "end": "1622880"
  },
  {
    "text": "I specified the right thing I just want to know if there are any ambiguities anything where one of many things could",
    "start": "1622880",
    "end": "1628220"
  },
  {
    "text": "happen but it didn't make it clear what should be possible to happen what I'll do is I'll take my system I",
    "start": "1628220",
    "end": "1635480"
  },
  {
    "text": "will inject my runtime parameters how many workers how many users and then I'll take the toolbox",
    "start": "1635480",
    "end": "1641000"
  },
  {
    "text": "essentially the model Checker this is what it looks like I'm not asking you to read it I just want to show you that I'm not making all this up there's an actual",
    "start": "1641000",
    "end": "1647000"
  },
  {
    "text": "tool that does this here's what it looks like to run",
    "start": "1647000",
    "end": "1651340"
  },
  {
    "text": "so you might have noticed that thing up here on the right side that's an error bar it says that it",
    "start": "1655880",
    "end": "1661580"
  },
  {
    "text": "found a case where a system isn't necessarily comprehensive the error that happened is on the top",
    "start": "1661580",
    "end": "1668179"
  },
  {
    "text": "and then this thing along the side is the error trace the sequence of steps",
    "start": "1668179",
    "end": "1674059"
  },
  {
    "text": "that caused us to reach an ambiguous situation what happens is we first create an",
    "start": "1674059",
    "end": "1679220"
  },
  {
    "text": "upload and then immediately delete it the worker receives the create message and then tries to find the corresponding",
    "start": "1679220",
    "end": "1685279"
  },
  {
    "text": "upload it can't we already deleted it now there's many things you might want",
    "start": "1685279",
    "end": "1691220"
  },
  {
    "text": "to do here we might want to just sort of skip it we want to go on we might want to raise an error we might want to wait to see what happens",
    "start": "1691220",
    "end": "1697100"
  },
  {
    "text": "but we didn't say what should happen we didn't say what happens if it can't find the ID that's ambiguous it's not comprehensive",
    "start": "1697100",
    "end": "1703880"
  },
  {
    "text": "TLA plus catches that and tells us that I'm going to add a very very naive fix",
    "start": "1703880",
    "end": "1709580"
  },
  {
    "text": "here I'm going to say check to see if the I if the corresponding upload exists if it does",
    "start": "1709580",
    "end": "1714860"
  },
  {
    "text": "exist continue with the creation if it doesn't just skip it I make corresponding changes for the",
    "start": "1714860",
    "end": "1721820"
  },
  {
    "text": "edit and delete um actions I will also shorten this in the future to that",
    "start": "1721820",
    "end": "1727220"
  },
  {
    "text": "clean code hurray if I do this we no longer get an error and our system is comprehensive",
    "start": "1727220",
    "end": "1733520"
  },
  {
    "text": "and now we can check properties of the system so",
    "start": "1733520",
    "end": "1739400"
  },
  {
    "text": "there's a lot of different properties we might want to check but I just spent about 10 minutes rounding QR about how awful behaviors",
    "start": "1739400",
    "end": "1745100"
  },
  {
    "text": "are so let's check a behavioral property one of them is that I call no orphan",
    "start": "1745100",
    "end": "1750679"
  },
  {
    "text": "content if I delete something there should be pop if I delete an upload the",
    "start": "1750679",
    "end": "1756380"
  },
  {
    "text": "content should also be deleted at some point but not immediately they can fall out of sync if I edit and upload the content should",
    "start": "1756380",
    "end": "1763700"
  },
  {
    "text": "also eventually be updated but not immediately they're allowed to fall out of sync so I first expressed the property of",
    "start": "1763700",
    "end": "1770299"
  },
  {
    "text": "them being in sync for every piece of content there exists a corresponding",
    "start": "1770299",
    "end": "1775399"
  },
  {
    "text": "upload that's identical same ID same version same user then to say this is true over behaviors",
    "start": "1775399",
    "end": "1781880"
  },
  {
    "text": "that this is allowed to fall out of sync but get back into sync I add this the",
    "start": "1781880",
    "end": "1787340"
  },
  {
    "text": "for all eventually operator this now makes it over behaviors and makes it a staple thing this property is allowed to",
    "start": "1787340",
    "end": "1793880"
  },
  {
    "text": "be false for individual states but it must come back to being true over every possible Behavior",
    "start": "1793880",
    "end": "1799580"
  },
  {
    "text": "Chopin's who thinks we follow this yeah you're all smart people you see",
    "start": "1799580",
    "end": "1804740"
  },
  {
    "text": "that there's a trick here it does not follow this and it doesn't follow this for an interesting reason",
    "start": "1804740",
    "end": "1810320"
  },
  {
    "text": "it stutters that corresponds to the following issue",
    "start": "1810320",
    "end": "1815480"
  },
  {
    "text": "we create an upload we receive the create message we create the content we delete the upload we",
    "start": "1815480",
    "end": "1820940"
  },
  {
    "text": "receive the delete message and what happens next we crash",
    "start": "1820940",
    "end": "1826159"
  },
  {
    "text": "distribute systems crash all the time agents fail all the time TLA plus assumes that unless you specified",
    "start": "1826159",
    "end": "1831679"
  },
  {
    "text": "otherwise any agent can crash at any time no matter what and in some cases our system is designed",
    "start": "1831679",
    "end": "1838279"
  },
  {
    "text": "to do this and in some cases we can't prevent this for example the user agent is allowed to crash they're allowed to",
    "start": "1838279",
    "end": "1845179"
  },
  {
    "text": "any point say you know I'm tired of this I'm going outside get rid of all these snakes and then just walk away from",
    "start": "1845179",
    "end": "1850580"
  },
  {
    "text": "their computer and never touch it again that's a crash to us the worker though",
    "start": "1850580",
    "end": "1856159"
  },
  {
    "text": "for this demo I'm just going to say the worker can't ever crash I'm going to make it fair and if I do that now we no longer have",
    "start": "1856159",
    "end": "1862159"
  },
  {
    "text": "that issue so now our system works",
    "start": "1862159",
    "end": "1867380"
  },
  {
    "text": "for one machine one worker what if I had another that's going to create a huge increase",
    "start": "1867380",
    "end": "1873679"
  },
  {
    "text": "in the possible State space an explosion of combinatorial possibilities that would be extraordinarily hard to test in",
    "start": "1873679",
    "end": "1879740"
  },
  {
    "text": "a programming language in a specification language like TLA plus it's just change the parameter two workers done",
    "start": "1879740",
    "end": "1886399"
  },
  {
    "text": "now you're all smart people I'm not going to insult your intelligence by asking does this work this is a talk of",
    "start": "1886399",
    "end": "1892279"
  },
  {
    "text": "course it doesn't work otherwise they wouldn't be showing you this example so different question",
    "start": "1892279",
    "end": "1897620"
  },
  {
    "text": "how many steps does it take to fail how many how many to go wrong in order for us to see an issue who thinks like one to five",
    "start": "1897620",
    "end": "1905600"
  },
  {
    "text": "to ten 10 to 15. it's 16. 16 things have to go wrong",
    "start": "1905600",
    "end": "1912380"
  },
  {
    "text": "between the three agents for us to hit a bug specifically what has to happen is that",
    "start": "1912380",
    "end": "1917899"
  },
  {
    "text": "you have to make two edits two separate workers receive the edit and then have them race in that specific case you can",
    "start": "1917899",
    "end": "1924799"
  },
  {
    "text": "enter a situation where the upload is on version three the content is on version two and nothing ever synchronizes them",
    "start": "1924799",
    "end": "1931940"
  },
  {
    "text": "your consumer is really really mad at you and you've lost a lot of money now 15-step error not something you're",
    "start": "1931940",
    "end": "1939740"
  },
  {
    "text": "going to find in a testing Suite especially when it's this specific okay so how do we fix this",
    "start": "1939740",
    "end": "1946520"
  },
  {
    "text": "we could make a smarter editing process before we actually push the new version we check to see if we're up to date and",
    "start": "1946520",
    "end": "1954140"
  },
  {
    "text": "if we're not we start over and we push the actual new version and when we do this the error goes away",
    "start": "1954140",
    "end": "1959659"
  },
  {
    "text": "we no longer have that error actually a completely unrelated error",
    "start": "1959659",
    "end": "1965419"
  },
  {
    "text": "because there are actually two errors when we make that change this one involves deletions we can edit",
    "start": "1965419",
    "end": "1971299"
  },
  {
    "text": "and delete race condition to enter a situation where the upload is deleted and the content never is",
    "start": "1971299",
    "end": "1977299"
  },
  {
    "text": "this we can fix by adding a cleaning a nightly job that checks to see if there's any stale",
    "start": "1977299",
    "end": "1982460"
  },
  {
    "text": "content and gets rid of it and if we add this then finally our system now consistently works",
    "start": "1982460",
    "end": "1989360"
  },
  {
    "text": "but I've done something pretty interesting here I made two fixes one did not work one did",
    "start": "1989360",
    "end": "1995600"
  },
  {
    "text": "was the first change the smarter editing logic necessary",
    "start": "1995600",
    "end": "2000539"
  },
  {
    "text": "now in my experience with distributed systems it's usually a couple weeks between you pushing the new code and",
    "start": "2000700",
    "end": "2006039"
  },
  {
    "text": "everything going to hell so if even if I sort of have a lot of tests",
    "start": "2006039",
    "end": "2011620"
  },
  {
    "text": "there's a good chance that even after I make the change allowing removing the old thing it's going to be a while",
    "start": "2011620",
    "end": "2016899"
  },
  {
    "text": "before I see weather was necessary or not I don't have the time for that I don't have the money I'm going to leave that in and just let it be technical",
    "start": "2016899",
    "end": "2023019"
  },
  {
    "text": "debt extra code complexity interior plus though I can just spend a minute changing it and see that nope",
    "start": "2023019",
    "end": "2028240"
  },
  {
    "text": "still breaks we actually need both changes in order to actually have a stable system similarly I could spend another minute",
    "start": "2028240",
    "end": "2034779"
  },
  {
    "text": "and add things like an imperfect message maybe a duplicates or drops messages add things like multiple users with",
    "start": "2034779",
    "end": "2041019"
  },
  {
    "text": "permission consequences things like allowing some workers to fail but not all of them",
    "start": "2041019",
    "end": "2046120"
  },
  {
    "text": "these may not necessarily be easy to solve but they're easy to add I can just take a few steps and put",
    "start": "2046120",
    "end": "2052118"
  },
  {
    "text": "these into my model and then I consist in a few minutes test them to see if they actually have this",
    "start": "2052119",
    "end": "2057280"
  },
  {
    "text": "as a problem these are things that would take weeks or months to implement in the real world and I can already refactor them already",
    "start": "2057280",
    "end": "2064000"
  },
  {
    "text": "find the issues before I even start that's pretty cool",
    "start": "2064000",
    "end": "2069540"
  },
  {
    "text": "okay so that's still an example does this work in practice I've had the privilege of working with a",
    "start": "2069659",
    "end": "2076000"
  },
  {
    "text": "number of different companies other companies have been public about their uses of this some you'd expect AWS",
    "start": "2076000",
    "end": "2083200"
  },
  {
    "text": "Azure large companies that have a need for critical infrastructure but others on this list things like",
    "start": "2083200",
    "end": "2089858"
  },
  {
    "text": "sutorial and e-sparklearning are small consumer companies with less than a dozen engineers and they've also found",
    "start": "2089859",
    "end": "2096099"
  },
  {
    "text": "this incredibly useful turns out that distributed systems are everywhere and being able to plan them out even a",
    "start": "2096099",
    "end": "2102400"
  },
  {
    "text": "little bit ahead of time can save a lot of money so in conclusion series systems terrible",
    "start": "2102400",
    "end": "2109000"
  },
  {
    "text": "specification kind of neat Tilly plus maybe helps a bit",
    "start": "2109000",
    "end": "2114460"
  },
  {
    "text": "now I'm not convincing you to go out and try this immediately I just trying to",
    "start": "2114460",
    "end": "2120160"
  },
  {
    "text": "get you interested that maybe this is something worth looking into so if this is something that you're interested in I can recommend some",
    "start": "2120160",
    "end": "2125920"
  },
  {
    "text": "places to start first of all I wrote a book on this practical TLA plus came out last year",
    "start": "2125920",
    "end": "2131500"
  },
  {
    "text": "it's designed for people who have no mathematical background but are just in trying this out for their job",
    "start": "2131500",
    "end": "2137260"
  },
  {
    "text": "so it's got tons of practical examples in fact the last 60 pages of the book are just two large-scale examples with",
    "start": "2137260",
    "end": "2143680"
  },
  {
    "text": "pitfalls techniques everything that you'd run into if you did this yourself you can go to is.gd ptla Plus or if you",
    "start": "2143680",
    "end": "2151359"
  },
  {
    "text": "want a discount on the PDF just talk to me afterwards then Leslie Lamport",
    "start": "2151359",
    "end": "2157119"
  },
  {
    "text": "himself wrote a book too specifying systems this is free online you can get",
    "start": "2157119",
    "end": "2162220"
  },
  {
    "text": "this you can also buy it it's a bit more intermediate it assumes a mathematical background and it covers things in a",
    "start": "2162220",
    "end": "2169240"
  },
  {
    "text": "much more dense theoretical way it's also the canonical text finally I said this was a sales pitch a",
    "start": "2169240",
    "end": "2175420"
  },
  {
    "text": "bit you can also just hire me I do pretty intense workshops to the point where three-day workshops were by the",
    "start": "2175420",
    "end": "2181480"
  },
  {
    "text": "end of day two you're already starting to work on your production systems this has been described by at least one",
    "start": "2181480",
    "end": "2186700"
  },
  {
    "text": "attendee as not a complete waste of time so yeah probably a good sign",
    "start": "2186700",
    "end": "2193420"
  },
  {
    "text": "you can go to my link over there or again just talk to me afterwards if you're interested in learning more about this",
    "start": "2193420",
    "end": "2198460"
  },
  {
    "text": "and with that I'm happy to answer any questions [Applause] [Music] [Applause]",
    "start": "2198460",
    "end": "2207469"
  }
]