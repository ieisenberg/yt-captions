[
  {
    "text": "so yes so my name is Colin and I make a",
    "start": "10040",
    "end": "11679"
  },
  {
    "text": "living selling a lisp editor which is",
    "start": "11679",
    "end": "13200"
  },
  {
    "text": "kind of an unusual thing to do these",
    "start": "13200",
    "end": "14879"
  },
  {
    "text": "days um so it's called cursive and it's",
    "start": "14879",
    "end": "16920"
  },
  {
    "text": "an editor for closure code so it's been",
    "start": "16920",
    "end": "18720"
  },
  {
    "text": "around for a while I've been working on",
    "start": "18720",
    "end": "19760"
  },
  {
    "text": "it for a couple of years now my first",
    "start": "19760",
    "end": "21119"
  },
  {
    "text": "public beta was in October of",
    "start": "21119",
    "end": "23599"
  },
  {
    "text": "2013 um I then promptly had a daughter",
    "start": "23599",
    "end": "26279"
  },
  {
    "text": "so it took me two years to get to a 1.0",
    "start": "26279",
    "end": "29000"
  },
  {
    "text": "um but even when it was in beta it was",
    "start": "29000",
    "end": "31359"
  },
  {
    "text": "actually it became very popular really",
    "start": "31359",
    "end": "33000"
  },
  {
    "text": "quickly I think people were quite",
    "start": "33000",
    "end": "34160"
  },
  {
    "text": "interested in having an alternative to",
    "start": "34160",
    "end": "35480"
  },
  {
    "text": "emac and um so it quickly became the",
    "start": "35480",
    "end": "37960"
  },
  {
    "text": "second most used um development",
    "start": "37960",
    "end": "39600"
  },
  {
    "text": "environment for clure after emac um so",
    "start": "39600",
    "end": "42520"
  },
  {
    "text": "it's a plugin to intellig at the moment",
    "start": "42520",
    "end": "44000"
  },
  {
    "text": "you do need to download intellig and",
    "start": "44000",
    "end": "45320"
  },
  {
    "text": "install cursive into it but intellig has",
    "start": "45320",
    "end": "47520"
  },
  {
    "text": "a free and open source Community",
    "start": "47520",
    "end": "48879"
  },
  {
    "text": "addition so um and that works fine with",
    "start": "48879",
    "end": "51000"
  },
  {
    "text": "cursive you actually don't need to pay",
    "start": "51000",
    "end": "52079"
  },
  {
    "text": "for intell to use cursive at all um and",
    "start": "52079",
    "end": "55079"
  },
  {
    "text": "it will eventually be a standalone ID as",
    "start": "55079",
    "end": "56640"
  },
  {
    "text": "well so intellig is now essentially an",
    "start": "56640",
    "end": "59120"
  },
  {
    "text": "IDE building",
    "start": "59120",
    "end": "60480"
  },
  {
    "text": "platform um and then the Java um the",
    "start": "60480",
    "end": "63519"
  },
  {
    "text": "Java support is just built on top of",
    "start": "63519",
    "end": "64920"
  },
  {
    "text": "that as are all the other ideas that jet",
    "start": "64920",
    "end": "66640"
  },
  {
    "text": "brands have done so the python and Ruby",
    "start": "66640",
    "end": "68560"
  },
  {
    "text": "and everything else um but I do make my",
    "start": "68560",
    "end": "70960"
  },
  {
    "text": "living doing this so if you're using",
    "start": "70960",
    "end": "73320"
  },
  {
    "text": "cursive commercially you will have to",
    "start": "73320",
    "end": "74520"
  },
  {
    "text": "pay me some money um but I think it's",
    "start": "74520",
    "end": "77320"
  },
  {
    "text": "fairly reasonably priced hopefully and I",
    "start": "77320",
    "end": "79159"
  },
  {
    "text": "do also offer a non-commercial license",
    "start": "79159",
    "end": "80720"
  },
  {
    "text": "so if you're you just want to use",
    "start": "80720",
    "end": "82159"
  },
  {
    "text": "closure for um for non-commercial stuff",
    "start": "82159",
    "end": "85159"
  },
  {
    "text": "um open source work personal hacking",
    "start": "85159",
    "end": "87640"
  },
  {
    "text": "learning closure um academic work that's",
    "start": "87640",
    "end": "89920"
  },
  {
    "text": "sort of thing it's all free for that so",
    "start": "89920",
    "end": "91159"
  },
  {
    "text": "you can just go to my website and",
    "start": "91159",
    "end": "92320"
  },
  {
    "text": "download a free license and use",
    "start": "92320",
    "end": "95479"
  },
  {
    "text": "that so this is the data from the latest",
    "start": "95479",
    "end": "98000"
  },
  {
    "text": "uh closure Community survey um hopefully",
    "start": "98000",
    "end": "100360"
  },
  {
    "text": "you can you can read that it's a little",
    "start": "100360",
    "end": "101640"
  },
  {
    "text": "bit small but um so basically emac is",
    "start": "101640",
    "end": "103960"
  },
  {
    "text": "still the most commonly used editor for",
    "start": "103960",
    "end": "106159"
  },
  {
    "text": "uh for cl Cod about 50% of users um this",
    "start": "106159",
    "end": "109320"
  },
  {
    "text": "is data from the beginning of this year",
    "start": "109320",
    "end": "111439"
  },
  {
    "text": "uh and cursive was a little bit under",
    "start": "111439",
    "end": "112920"
  },
  {
    "text": "30% it 29% to the last one then Vim was",
    "start": "112920",
    "end": "115399"
  },
  {
    "text": "10% and then all the sort of standard",
    "start": "115399",
    "end": "117479"
  },
  {
    "text": "other editors atom and vs code and",
    "start": "117479",
    "end": "119560"
  },
  {
    "text": "things like they all have reasonbly good",
    "start": "119560",
    "end": "120920"
  },
  {
    "text": "closure support these days um but not",
    "start": "120920",
    "end": "122719"
  },
  {
    "text": "many people use them for their",
    "start": "122719",
    "end": "123680"
  },
  {
    "text": "day-to-day work so it's getting fairly",
    "start": "123680",
    "end": "125360"
  },
  {
    "text": "Consolidated and mostly emac and cursive",
    "start": "125360",
    "end": "128599"
  },
  {
    "text": "now so I want to talk a little bit about",
    "start": "128599",
    "end": "130879"
  },
  {
    "text": "what makes cursive different from a",
    "start": "130879",
    "end": "132599"
  },
  {
    "text": "technical point of view to the other",
    "start": "132599",
    "end": "133760"
  },
  {
    "text": "editors so the other editors uh in that",
    "start": "133760",
    "end": "136480"
  },
  {
    "text": "list are really what I would consider to",
    "start": "136480",
    "end": "137760"
  },
  {
    "text": "be Ripple based editors so they're",
    "start": "137760",
    "end": "140040"
  },
  {
    "text": "really just text editors they actually",
    "start": "140040",
    "end": "141440"
  },
  {
    "text": "don't understand um closure at any",
    "start": "141440",
    "end": "143959"
  },
  {
    "text": "really kind of fundamental level and the",
    "start": "143959",
    "end": "146000"
  },
  {
    "text": "way they work is that they actually",
    "start": "146000",
    "end": "147599"
  },
  {
    "text": "provide all the editing functionality by",
    "start": "147599",
    "end": "150280"
  },
  {
    "text": "introspecting um a live running system",
    "start": "150280",
    "end": "152560"
  },
  {
    "text": "over a ripple connection so the way this",
    "start": "152560",
    "end": "154680"
  },
  {
    "text": "usually works is you start your editor",
    "start": "154680",
    "end": "156480"
  },
  {
    "text": "you start your application with a ripple",
    "start": "156480",
    "end": "158120"
  },
  {
    "text": "server running in it and then you",
    "start": "158120",
    "end": "159920"
  },
  {
    "text": "connect your Editor to that running",
    "start": "159920",
    "end": "161400"
  },
  {
    "text": "system and then as you do things in your",
    "start": "161400",
    "end": "163760"
  },
  {
    "text": "editor um so say you want to get the",
    "start": "163760",
    "end": "165760"
  },
  {
    "text": "documentation for a function what the",
    "start": "165760",
    "end": "167680"
  },
  {
    "text": "editor will do is it will go out to the",
    "start": "167680",
    "end": "169560"
  },
  {
    "text": "running system over the Ripple",
    "start": "169560",
    "end": "170720"
  },
  {
    "text": "connection it will introspect the",
    "start": "170720",
    "end": "172360"
  },
  {
    "text": "function that you're asking about and",
    "start": "172360",
    "end": "174120"
  },
  {
    "text": "all this data enclosure is rarified at",
    "start": "174120",
    "end": "175680"
  },
  {
    "text": "runtime so um so functions can actually",
    "start": "175680",
    "end": "180280"
  },
  {
    "text": "contain their documentation at runtime",
    "start": "180280",
    "end": "182040"
  },
  {
    "text": "and they also contain things like Source",
    "start": "182040",
    "end": "183480"
  },
  {
    "text": "location so if you want to navigate to",
    "start": "183480",
    "end": "184879"
  },
  {
    "text": "the definition of a function something",
    "start": "184879",
    "end": "187200"
  },
  {
    "text": "like emix will go out and it will it",
    "start": "187200",
    "end": "189480"
  },
  {
    "text": "will interrogate the running system this",
    "start": "189480",
    "end": "190959"
  },
  {
    "text": "function where was it defined which file",
    "start": "190959",
    "end": "192680"
  },
  {
    "text": "was it defined and what's the source",
    "start": "192680",
    "end": "194080"
  },
  {
    "text": "location and then it will take you",
    "start": "194080",
    "end": "196280"
  },
  {
    "text": "there so this is very accurate for all",
    "start": "196280",
    "end": "198599"
  },
  {
    "text": "the information that does actually get",
    "start": "198599",
    "end": "200159"
  },
  {
    "text": "rified at runtime and closure this is",
    "start": "200159",
    "end": "202200"
  },
  {
    "text": "quite a lot um and obviously um",
    "start": "202200",
    "end": "206120"
  },
  {
    "text": "enclosure on any list you can do quite",
    "start": "206120",
    "end": "207879"
  },
  {
    "text": "crazy things in your source code but the",
    "start": "207879",
    "end": "210080"
  },
  {
    "text": "application that's actually running is",
    "start": "210080",
    "end": "211560"
  },
  {
    "text": "kind of like the ground truth right by",
    "start": "211560",
    "end": "213640"
  },
  {
    "text": "the time you've actually um compiled and",
    "start": "213640",
    "end": "216480"
  },
  {
    "text": "run your code the application is like",
    "start": "216480",
    "end": "218680"
  },
  {
    "text": "the kind of definitive source of what",
    "start": "218680",
    "end": "220120"
  },
  {
    "text": "that's actually going to do in the end",
    "start": "220120",
    "end": "221560"
  },
  {
    "text": "so so these systems are very very",
    "start": "221560",
    "end": "223200"
  },
  {
    "text": "accurate for for anything that actually",
    "start": "223200",
    "end": "225200"
  },
  {
    "text": "does exist in runtime but um that's not",
    "start": "225200",
    "end": "228319"
  },
  {
    "text": "everything so closure does have some",
    "start": "228319",
    "end": "229799"
  },
  {
    "text": "elements that don't actually make it",
    "start": "229799",
    "end": "231280"
  },
  {
    "text": "into runtime in any meaningful way and",
    "start": "231280",
    "end": "234000"
  },
  {
    "text": "obviously this does require the",
    "start": "234000",
    "end": "234959"
  },
  {
    "text": "application to be running as well um so",
    "start": "234959",
    "end": "237400"
  },
  {
    "text": "you get no editor support at all if you",
    "start": "237400",
    "end": "238840"
  },
  {
    "text": "don't have something running so so the",
    "start": "238840",
    "end": "240159"
  },
  {
    "text": "workflow is normally you like you start",
    "start": "240159",
    "end": "241560"
  },
  {
    "text": "your editor you start your application",
    "start": "241560",
    "end": "242840"
  },
  {
    "text": "and the two are sort of in this in the",
    "start": "242840",
    "end": "244879"
  },
  {
    "text": "symbiotic uh kind of relationship um but",
    "start": "244879",
    "end": "248439"
  },
  {
    "text": "people really like the experience this",
    "start": "248439",
    "end": "249720"
  },
  {
    "text": "gives you you sort of get this",
    "start": "249720",
    "end": "250920"
  },
  {
    "text": "experience that your application is kind",
    "start": "250920",
    "end": "252760"
  },
  {
    "text": "of like a living thing that you're",
    "start": "252760",
    "end": "254319"
  },
  {
    "text": "molding in real time and it's this real",
    "start": "254319",
    "end": "256239"
  },
  {
    "text": "sort of interactive feedback loop so you",
    "start": "256239",
    "end": "257880"
  },
  {
    "text": "work on a little bit of code you send it",
    "start": "257880",
    "end": "259359"
  },
  {
    "text": "over to your application you try it out",
    "start": "259359",
    "end": "261479"
  },
  {
    "text": "to see if it works you can poke around",
    "start": "261479",
    "end": "262960"
  },
  {
    "text": "with it a little bit um and then once",
    "start": "262960",
    "end": "265080"
  },
  {
    "text": "you're satisfied that it's working you",
    "start": "265080",
    "end": "266360"
  },
  {
    "text": "move on to something",
    "start": "266360",
    "end": "267960"
  },
  {
    "text": "else so one other thing with these",
    "start": "267960",
    "end": "269960"
  },
  {
    "text": "project with these editors is they only",
    "start": "269960",
    "end": "271639"
  },
  {
    "text": "have a very loose concept of a project",
    "start": "271639",
    "end": "273800"
  },
  {
    "text": "so they're really mostly file based um",
    "start": "273800",
    "end": "276600"
  },
  {
    "text": "and one thing that you lose with that is",
    "start": "276600",
    "end": "278120"
  },
  {
    "text": "you lose the ability to actually provide",
    "start": "278120",
    "end": "280600"
  },
  {
    "text": "a meaningful project-wide index um that",
    "start": "280600",
    "end": "283000"
  },
  {
    "text": "actually becomes quite hard it's not",
    "start": "283000",
    "end": "284759"
  },
  {
    "text": "impossible and emx uh some of the",
    "start": "284759",
    "end": "286759"
  },
  {
    "text": "closure support emac does have some",
    "start": "286759",
    "end": "288199"
  },
  {
    "text": "support for this but it's uh it is quite",
    "start": "288199",
    "end": "290919"
  },
  {
    "text": "um much more",
    "start": "290919",
    "end": "293600"
  },
  {
    "text": "difficult so a contrast cursive actually",
    "start": "293600",
    "end": "296039"
  },
  {
    "text": "works by analyzing source code so again",
    "start": "296039",
    "end": "298120"
  },
  {
    "text": "because it's built on intellig intellig",
    "start": "298120",
    "end": "299840"
  },
  {
    "text": "has a very very strong project model so",
    "start": "299840",
    "end": "301639"
  },
  {
    "text": "intell and and thus cursive it's not",
    "start": "301639",
    "end": "304120"
  },
  {
    "text": "something you're ever going to edit a",
    "start": "304120",
    "end": "305720"
  },
  {
    "text": "single file in basically all your",
    "start": "305720",
    "end": "307360"
  },
  {
    "text": "editing actually happens within uh",
    "start": "307360",
    "end": "309720"
  },
  {
    "text": "within the construct of a project um and",
    "start": "309720",
    "end": "312840"
  },
  {
    "text": "one thing this does actually allow is it",
    "start": "312840",
    "end": "314240"
  },
  {
    "text": "does allow full project-wide index of",
    "start": "314240",
    "end": "316199"
  },
  {
    "text": "all sorts of things which allows some",
    "start": "316199",
    "end": "317680"
  },
  {
    "text": "really interesting functionality lots of",
    "start": "317680",
    "end": "319160"
  },
  {
    "text": "nice navigation um all the documentation",
    "start": "319160",
    "end": "321720"
  },
  {
    "text": "lookup and stuff like that that all",
    "start": "321720",
    "end": "323199"
  },
  {
    "text": "happens on the IDE side and it's all um",
    "start": "323199",
    "end": "326199"
  },
  {
    "text": "done by the source analysis and this",
    "start": "326199",
    "end": "328680"
  },
  {
    "text": "actually allows indexes to be created",
    "start": "328680",
    "end": "330680"
  },
  {
    "text": "and and things to be manipulated that",
    "start": "330680",
    "end": "332280"
  },
  {
    "text": "actually don't exist um in runtime so",
    "start": "332280",
    "end": "334960"
  },
  {
    "text": "things like keywords and closure don't",
    "start": "334960",
    "end": "336720"
  },
  {
    "text": "exist in the runtime in any meaningful",
    "start": "336720",
    "end": "338319"
  },
  {
    "text": "way and things like reader macro forms",
    "start": "338319",
    "end": "340520"
  },
  {
    "text": "as well so cloer has a lot of these",
    "start": "340520",
    "end": "341880"
  },
  {
    "text": "shorthand forms that are later expanded",
    "start": "341880",
    "end": "343919"
  },
  {
    "text": "out into into built-in forms during the",
    "start": "343919",
    "end": "346720"
  },
  {
    "text": "actual code reading so systems and Inter",
    "start": "346720",
    "end": "349680"
  },
  {
    "text": "run times really struggle to provide",
    "start": "349680",
    "end": "351319"
  },
  {
    "text": "these because when you're using your",
    "start": "351319",
    "end": "352919"
  },
  {
    "text": "editor you're not actually thinking",
    "start": "352919",
    "end": "354840"
  },
  {
    "text": "always about what's actually in the",
    "start": "354840",
    "end": "356039"
  },
  {
    "text": "runtime you're thinking about the",
    "start": "356039",
    "end": "357240"
  },
  {
    "text": "surface syntax like the user that's what",
    "start": "357240",
    "end": "359319"
  },
  {
    "text": "they're actually working with normally",
    "start": "359319",
    "end": "361440"
  },
  {
    "text": "um and sometimes that can be difficult",
    "start": "361440",
    "end": "364440"
  },
  {
    "text": "um and by indexing source code cursive",
    "start": "364440",
    "end": "366000"
  },
  {
    "text": "can actually provide really good support",
    "start": "366000",
    "end": "367199"
  },
  {
    "text": "for",
    "start": "367199",
    "end": "368240"
  },
  {
    "text": "those and then one other really major",
    "start": "368240",
    "end": "370360"
  },
  {
    "text": "feature that it allows is that because",
    "start": "370360",
    "end": "372560"
  },
  {
    "text": "closure and closure strip so they're two",
    "start": "372560",
    "end": "374479"
  },
  {
    "text": "different dialects of cloer so clure",
    "start": "374479",
    "end": "376319"
  },
  {
    "text": "compiles to the jvm closure script uh",
    "start": "376319",
    "end": "378759"
  },
  {
    "text": "compiles to",
    "start": "378759",
    "end": "379840"
  },
  {
    "text": "JavaScript the source code is almost the",
    "start": "379840",
    "end": "382280"
  },
  {
    "text": "same there are some differences but",
    "start": "382280",
    "end": "383720"
  },
  {
    "text": "they're very very similar so most of",
    "start": "383720",
    "end": "385639"
  },
  {
    "text": "cursive functionality actually works",
    "start": "385639",
    "end": "387240"
  },
  {
    "text": "completely transparently for both uh",
    "start": "387240",
    "end": "389599"
  },
  {
    "text": "closure and closure script and this is",
    "start": "389599",
    "end": "391000"
  },
  {
    "text": "something that Ripple Bas to struggle",
    "start": "391000",
    "end": "392479"
  },
  {
    "text": "with because the closure and Clos script",
    "start": "392479",
    "end": "394000"
  },
  {
    "text": "ripples are quite different in quite",
    "start": "394000",
    "end": "395280"
  },
  {
    "text": "fundamental ways so they really end up",
    "start": "395280",
    "end": "397440"
  },
  {
    "text": "having to reimplement quite a lot of the",
    "start": "397440",
    "end": "399599"
  },
  {
    "text": "functionality um for cler",
    "start": "399599",
    "end": "403520"
  },
  {
    "text": "script so I want to talk a little bit",
    "start": "403520",
    "end": "405400"
  },
  {
    "text": "about the motivation of why I actually",
    "start": "405400",
    "end": "406800"
  },
  {
    "text": "started working on cursive and why I",
    "start": "406800",
    "end": "408639"
  },
  {
    "text": "might like this and uh I apologize in",
    "start": "408639",
    "end": "410639"
  },
  {
    "text": "advance I'm going to say nice thing sort",
    "start": "410639",
    "end": "412000"
  },
  {
    "text": "of in relation to Java um but so so why",
    "start": "412000",
    "end": "415680"
  },
  {
    "text": "might you want to use intellig and here",
    "start": "415680",
    "end": "417280"
  },
  {
    "text": "I am really talking about why you might",
    "start": "417280",
    "end": "418599"
  },
  {
    "text": "want to use intellig for Java so um",
    "start": "418599",
    "end": "421280"
  },
  {
    "text": "intell does have this kind of Base",
    "start": "421280",
    "end": "422720"
  },
  {
    "text": "platform and then a bunch of different",
    "start": "422720",
    "end": "423919"
  },
  {
    "text": "IDs built on top of it but Java is by",
    "start": "423919",
    "end": "425800"
  },
  {
    "text": "far the most mature ID product that they",
    "start": "425800",
    "end": "427680"
  },
  {
    "text": "offer it's been around for well over a",
    "start": "427680",
    "end": "430199"
  },
  {
    "text": "decade and it's had a lot of people a",
    "start": "430199",
    "end": "432240"
  },
  {
    "text": "lot of really smart people working on it",
    "start": "432240",
    "end": "433520"
  },
  {
    "text": "for a really long time it's a really",
    "start": "433520",
    "end": "435080"
  },
  {
    "text": "complete mature product and so it",
    "start": "435080",
    "end": "437440"
  },
  {
    "text": "actually has real syntactic analysis of",
    "start": "437440",
    "end": "440039"
  },
  {
    "text": "the code it'll actually go out and it it",
    "start": "440039",
    "end": "441919"
  },
  {
    "text": "knows again because it has a strong",
    "start": "441919",
    "end": "443599"
  },
  {
    "text": "project model it knows what all the code",
    "start": "443599",
    "end": "445240"
  },
  {
    "text": "in your project is and it will go out",
    "start": "445240",
    "end": "447360"
  },
  {
    "text": "and it paes the whole lot so it creates",
    "start": "447360",
    "end": "449319"
  },
  {
    "text": "you know you know lickes and passes all",
    "start": "449319",
    "end": "450560"
  },
  {
    "text": "the code it builds an a for each source",
    "start": "450560",
    "end": "453039"
  },
  {
    "text": "file and it links those together in such",
    "start": "453039",
    "end": "456000"
  },
  {
    "text": "a way that really what it's doing is",
    "start": "456000",
    "end": "458360"
  },
  {
    "text": "it's building an a for your entire",
    "start": "458360",
    "end": "460240"
  },
  {
    "text": "project and this allowed a lot of really",
    "start": "460240",
    "end": "462080"
  },
  {
    "text": "really interesting um functionality so",
    "start": "462080",
    "end": "464520"
  },
  {
    "text": "intell is quite famous for its",
    "start": "464520",
    "end": "465879"
  },
  {
    "text": "refactoring it actually started Life as",
    "start": "465879",
    "end": "467360"
  },
  {
    "text": "a refactoring product before it was an",
    "start": "467360",
    "end": "469479"
  },
  {
    "text": "IDE and and the refactoring is a really",
    "start": "469479",
    "end": "472000"
  },
  {
    "text": "intrinsic part of the workflow when",
    "start": "472000",
    "end": "473319"
  },
  {
    "text": "you're working on Java with intellig um",
    "start": "473319",
    "end": "475560"
  },
  {
    "text": "the navigation again is totally Flawless",
    "start": "475560",
    "end": "477240"
  },
  {
    "text": "because it understands everything so you",
    "start": "477240",
    "end": "478720"
  },
  {
    "text": "can you can navigate between your",
    "start": "478720",
    "end": "480680"
  },
  {
    "text": "program elements in quite sophisticated",
    "start": "480680",
    "end": "482520"
  },
  {
    "text": "ways and it's all it all just basically",
    "start": "482520",
    "end": "484840"
  },
  {
    "text": "works perfectly um it has a system of",
    "start": "484840",
    "end": "487919"
  },
  {
    "text": "inspection so it will actually it can",
    "start": "487919",
    "end": "489680"
  },
  {
    "text": "actually run static analysis over your",
    "start": "489680",
    "end": "491360"
  },
  {
    "text": "code um live in the editor while you're",
    "start": "491360",
    "end": "493440"
  },
  {
    "text": "working on it um and it can also propose",
    "start": "493440",
    "end": "495840"
  },
  {
    "text": "fixes as well so the inspections range",
    "start": "495840",
    "end": "498159"
  },
  {
    "text": "from like quite primitive things",
    "start": "498159",
    "end": "499680"
  },
  {
    "text": "sometimes just like checking naming",
    "start": "499680",
    "end": "501560"
  },
  {
    "text": "conventions you know did you start your",
    "start": "501560",
    "end": "503159"
  },
  {
    "text": "class name with an upper class with an",
    "start": "503159",
    "end": "504759"
  },
  {
    "text": "uppercase letter and your local variable",
    "start": "504759",
    "end": "506639"
  },
  {
    "text": "names with a lowercase letter they're",
    "start": "506639",
    "end": "508520"
  },
  {
    "text": "quite trivial but then that goes all the",
    "start": "508520",
    "end": "510280"
  },
  {
    "text": "way out to running like full data flow",
    "start": "510280",
    "end": "512399"
  },
  {
    "text": "inspections over your program using a",
    "start": "512399",
    "end": "514000"
  },
  {
    "text": "technique called symbolic execution and",
    "start": "514000",
    "end": "515640"
  },
  {
    "text": "it can actually tell you this",
    "start": "515640",
    "end": "517000"
  },
  {
    "text": "conditional through this really",
    "start": "517000",
    "end": "518039"
  },
  {
    "text": "complicated piece of code always turns",
    "start": "518039",
    "end": "519719"
  },
  {
    "text": "out to be true or false so it has a very",
    "start": "519719",
    "end": "522560"
  },
  {
    "text": "very deep knowledge of java and it",
    "start": "522560",
    "end": "525320"
  },
  {
    "text": "provides in a lot of ways much more",
    "start": "525320",
    "end": "527320"
  },
  {
    "text": "sophisticated analysis that even",
    "start": "527320",
    "end": "528480"
  },
  {
    "text": "compilers do these",
    "start": "528480",
    "end": "530360"
  },
  {
    "text": "days and it also has intentions so",
    "start": "530360",
    "end": "532640"
  },
  {
    "text": "intentions are kind of like you can",
    "start": "532640",
    "end": "533920"
  },
  {
    "text": "think of them as sort of like micro",
    "start": "533920",
    "end": "535080"
  },
  {
    "text": "refactoring so you know a little block",
    "start": "535080",
    "end": "537560"
  },
  {
    "text": "of code you might want to change it in",
    "start": "537560",
    "end": "539160"
  },
  {
    "text": "some way so for example an example of",
    "start": "539160",
    "end": "541560"
  },
  {
    "text": "that would be something like an if",
    "start": "541560",
    "end": "542600"
  },
  {
    "text": "statement you have an if statement with",
    "start": "542600",
    "end": "544360"
  },
  {
    "text": "a then and an else branch and for some",
    "start": "544360",
    "end": "546240"
  },
  {
    "text": "reason you decide the code would be",
    "start": "546240",
    "end": "547760"
  },
  {
    "text": "tidier or more readable with those",
    "start": "547760",
    "end": "549600"
  },
  {
    "text": "inverted so you can just say Okay swap",
    "start": "549600",
    "end": "551720"
  },
  {
    "text": "those two around and tell J will swap",
    "start": "551720",
    "end": "553760"
  },
  {
    "text": "the two blocks around and invert the uh",
    "start": "553760",
    "end": "555959"
  },
  {
    "text": "the condition for you um and again it's",
    "start": "555959",
    "end": "559240"
  },
  {
    "text": "a small thing it's something you could",
    "start": "559240",
    "end": "560560"
  },
  {
    "text": "easily do uh do by yourself just",
    "start": "560560",
    "end": "562959"
  },
  {
    "text": "changing it but it's actually provided",
    "start": "562959",
    "end": "564880"
  },
  {
    "text": "as a as a sort of single operation and",
    "start": "564880",
    "end": "567279"
  },
  {
    "text": "these things are contact sensitive so",
    "start": "567279",
    "end": "568560"
  },
  {
    "text": "you don't have to remember like a",
    "start": "568560",
    "end": "570000"
  },
  {
    "text": "thousand different key codes um uh",
    "start": "570000",
    "end": "572560"
  },
  {
    "text": "keystrokes rather to know how to do this",
    "start": "572560",
    "end": "574760"
  },
  {
    "text": "it just says you know where you are",
    "start": "574760",
    "end": "576040"
  },
  {
    "text": "you're on an if block you might want to",
    "start": "576040",
    "end": "577320"
  },
  {
    "text": "change the if Block in this way and you",
    "start": "577320",
    "end": "578600"
  },
  {
    "text": "can just do",
    "start": "578600",
    "end": "581120"
  },
  {
    "text": "it so the the the net effect of this",
    "start": "582440",
    "end": "585720"
  },
  {
    "text": "when you're when I'm actually",
    "start": "585720",
    "end": "587079"
  },
  {
    "text": "programming Java with intellig is that I",
    "start": "587079",
    "end": "590600"
  },
  {
    "text": "I get this very direct experience where",
    "start": "590600",
    "end": "592519"
  },
  {
    "text": "I feel like I'm actually directly",
    "start": "592519",
    "end": "594240"
  },
  {
    "text": "manipulating the syntax of my program",
    "start": "594240",
    "end": "596240"
  },
  {
    "text": "while I'm working on it and this is",
    "start": "596240",
    "end": "597800"
  },
  {
    "text": "actually quite a powerful experience I",
    "start": "597800",
    "end": "599160"
  },
  {
    "text": "think",
    "start": "599160",
    "end": "600120"
  },
  {
    "text": "um like no other tool that I've used has",
    "start": "600120",
    "end": "601519"
  },
  {
    "text": "really given me this where I actually",
    "start": "601519",
    "end": "602760"
  },
  {
    "text": "feel like I'm directly manipulating the",
    "start": "602760",
    "end": "604399"
  },
  {
    "text": "structure of my program because the",
    "start": "604399",
    "end": "605720"
  },
  {
    "text": "editor provides me with semantic",
    "start": "605720",
    "end": "608160"
  },
  {
    "text": "operations that directly reflect what I",
    "start": "608160",
    "end": "610279"
  },
  {
    "text": "conceptually want to do to my program",
    "start": "610279",
    "end": "612440"
  },
  {
    "text": "and this I think is really important um",
    "start": "612440",
    "end": "614839"
  },
  {
    "text": "you know you can really get very very",
    "start": "614839",
    "end": "616680"
  },
  {
    "text": "deeply into the flow of programming when",
    "start": "616680",
    "end": "618279"
  },
  {
    "text": "you like this because a lot of the",
    "start": "618279",
    "end": "619720"
  },
  {
    "text": "extraneous kind of complication is taken",
    "start": "619720",
    "end": "622279"
  },
  {
    "text": "away so this doesn't always come for",
    "start": "622279",
    "end": "624240"
  },
  {
    "text": "free right I mean these indexes and",
    "start": "624240",
    "end": "626040"
  },
  {
    "text": "things they take memory uh intell can be",
    "start": "626040",
    "end": "628480"
  },
  {
    "text": "quite a lot more resourc hungry than",
    "start": "628480",
    "end": "629839"
  },
  {
    "text": "other editors um and sometimes it can",
    "start": "629839",
    "end": "632640"
  },
  {
    "text": "slow down while it's indexing and all",
    "start": "632640",
    "end": "634200"
  },
  {
    "text": "these sorts of things but when the stars",
    "start": "634200",
    "end": "636160"
  },
  {
    "text": "aign which with intell they actually do",
    "start": "636160",
    "end": "637920"
  },
  {
    "text": "pretty frequently it's actually pretty",
    "start": "637920",
    "end": "639240"
  },
  {
    "text": "good it can provide a very uh a very",
    "start": "639240",
    "end": "642120"
  },
  {
    "text": "direct connection to your program that I",
    "start": "642120",
    "end": "644240"
  },
  {
    "text": "think um that I haven't really managed",
    "start": "644240",
    "end": "646240"
  },
  {
    "text": "to achieve with many other",
    "start": "646240",
    "end": "648320"
  },
  {
    "text": "tools and so this is always what I'm",
    "start": "648320",
    "end": "650279"
  },
  {
    "text": "actually trying to get to with cerve and",
    "start": "650279",
    "end": "652040"
  },
  {
    "text": "I'm a really long way away from doing it",
    "start": "652040",
    "end": "653519"
  },
  {
    "text": "mostly because it's just me and you know",
    "start": "653519",
    "end": "655279"
  },
  {
    "text": "they have you know teams of dozens of",
    "start": "655279",
    "end": "656800"
  },
  {
    "text": "people working on these idees and it's",
    "start": "656800",
    "end": "658560"
  },
  {
    "text": "just a lot of work but at least I always",
    "start": "658560",
    "end": "661200"
  },
  {
    "text": "have very clear that that's actually the",
    "start": "661200",
    "end": "662800"
  },
  {
    "text": "goal of what I'm trying to",
    "start": "662800",
    "end": "665440"
  },
  {
    "text": "achieve so this is something I see quite",
    "start": "665440",
    "end": "667519"
  },
  {
    "text": "a lot online you know intellig is great",
    "start": "667519",
    "end": "669040"
  },
  {
    "text": "but I type much faster in you know Vim",
    "start": "669040",
    "end": "671160"
  },
  {
    "text": "or emx or Sublime Text or whatever it",
    "start": "671160",
    "end": "674000"
  },
  {
    "text": "is and I think that I think this is a",
    "start": "674000",
    "end": "676120"
  },
  {
    "text": "bit misguided I think if you need to",
    "start": "676120",
    "end": "678079"
  },
  {
    "text": "type really quickly then that means",
    "start": "678079",
    "end": "679200"
  },
  {
    "text": "you're actually manipulating the text",
    "start": "679200",
    "end": "681360"
  },
  {
    "text": "and um if I'm in intelligy I don't",
    "start": "681360",
    "end": "684720"
  },
  {
    "text": "really have to type very fast I don't",
    "start": "684720",
    "end": "685880"
  },
  {
    "text": "have a problem with typing to be clear I",
    "start": "685880",
    "end": "687120"
  },
  {
    "text": "mean I know how to type and I can type",
    "start": "687120",
    "end": "688519"
  },
  {
    "text": "quite fast",
    "start": "688519",
    "end": "689800"
  },
  {
    "text": "but if I have to typee a lot in order to",
    "start": "689800",
    "end": "692120"
  },
  {
    "text": "program it feels to me like I'm working",
    "start": "692120",
    "end": "693760"
  },
  {
    "text": "at the wrong level of abstraction",
    "start": "693760",
    "end": "695600"
  },
  {
    "text": "because I'm not giving semantic commands",
    "start": "695600",
    "end": "697320"
  },
  {
    "text": "to the editor to reflect what I want to",
    "start": "697320",
    "end": "698839"
  },
  {
    "text": "do I'm having to actually do all in",
    "start": "698839",
    "end": "700279"
  },
  {
    "text": "nitty-gritty details myself so I think",
    "start": "700279",
    "end": "702680"
  },
  {
    "text": "lack of typing is really a feature",
    "start": "702680",
    "end": "703920"
  },
  {
    "text": "rather than a bug I think I just think",
    "start": "703920",
    "end": "706000"
  },
  {
    "text": "text manipulation directly manipulating",
    "start": "706000",
    "end": "707800"
  },
  {
    "text": "the text is the wrong level of",
    "start": "707800",
    "end": "710959"
  },
  {
    "text": "abstraction and so for those of you who",
    "start": "711040",
    "end": "712959"
  },
  {
    "text": "have actually um who have edited some",
    "start": "712959",
    "end": "715200"
  },
  {
    "text": "lisp code um in something like emx for",
    "start": "715200",
    "end": "717720"
  },
  {
    "text": "example or another editor that provides",
    "start": "717720",
    "end": "719440"
  },
  {
    "text": "this um you might be wondering about",
    "start": "719440",
    "end": "721160"
  },
  {
    "text": "paredit so for those who aren't familiar",
    "start": "721160",
    "end": "722680"
  },
  {
    "text": "with it paredit is a minor mode in emac",
    "start": "722680",
    "end": "725040"
  },
  {
    "text": "and it allows you to provide kind of",
    "start": "725040",
    "end": "727519"
  },
  {
    "text": "block operations on languages that work",
    "start": "727519",
    "end": "729839"
  },
  {
    "text": "with this expression so languages that",
    "start": "729839",
    "end": "731360"
  },
  {
    "text": "are built up as sequences of lists and",
    "start": "731360",
    "end": "733240"
  },
  {
    "text": "things so so you can uh move the last",
    "start": "733240",
    "end": "737079"
  },
  {
    "text": "element out of a list or drag the next",
    "start": "737079",
    "end": "739160"
  },
  {
    "text": "element from outside the list into it or",
    "start": "739160",
    "end": "740800"
  },
  {
    "text": "you can replace the parent of a list",
    "start": "740800",
    "end": "742880"
  },
  {
    "text": "with the contents to that list and that",
    "start": "742880",
    "end": "744160"
  },
  {
    "text": "sort of",
    "start": "744160",
    "end": "745120"
  },
  {
    "text": "thing the problem with it is it's not",
    "start": "745120",
    "end": "747079"
  },
  {
    "text": "really syntax aware so again paric",
    "start": "747079",
    "end": "748959"
  },
  {
    "text": "doesn't really understand clure so you",
    "start": "748959",
    "end": "750800"
  },
  {
    "text": "can use pedit with with racket with",
    "start": "750800",
    "end": "753120"
  },
  {
    "text": "common list with emx list or with",
    "start": "753120",
    "end": "755079"
  },
  {
    "text": "closure and it works equivalently with",
    "start": "755079",
    "end": "757360"
  },
  {
    "text": "all of them but it works equivalently",
    "start": "757360",
    "end": "759279"
  },
  {
    "text": "with all of them because it doesn't",
    "start": "759279",
    "end": "760519"
  },
  {
    "text": "really understand any of them at any",
    "start": "760519",
    "end": "762639"
  },
  {
    "text": "fundamental level so um so petta will",
    "start": "762639",
    "end": "765800"
  },
  {
    "text": "happily let you bump a catch block out",
    "start": "765800",
    "end": "768560"
  },
  {
    "text": "of its containing Tri block for example",
    "start": "768560",
    "end": "770760"
  },
  {
    "text": "because it doesn't know right it doesn't",
    "start": "770760",
    "end": "772000"
  },
  {
    "text": "know that a catch block makes no sense",
    "start": "772000",
    "end": "773680"
  },
  {
    "text": "outside of its Tri block it doesn't",
    "start": "773680",
    "end": "775160"
  },
  {
    "text": "really understand the semantics of what",
    "start": "775160",
    "end": "777000"
  },
  {
    "text": "you're doing so I think in English is is",
    "start": "777000",
    "end": "780399"
  },
  {
    "text": "equivalent to uh ending all these",
    "start": "780399",
    "end": "782199"
  },
  {
    "text": "sentences with full stops I mean you",
    "start": "782199",
    "end": "783720"
  },
  {
    "text": "have to do it right and in closure or",
    "start": "783720",
    "end": "786000"
  },
  {
    "text": "something similar you have to balance",
    "start": "786000",
    "end": "787160"
  },
  {
    "text": "your parentheses but it's not really the",
    "start": "787160",
    "end": "789519"
  },
  {
    "text": "most interesting thing it's not really",
    "start": "789519",
    "end": "791120"
  },
  {
    "text": "the most interesting problem we're",
    "start": "791120",
    "end": "792160"
  },
  {
    "text": "trying to solve",
    "start": "792160",
    "end": "793519"
  },
  {
    "text": "here so there is a tool for Emax called",
    "start": "793519",
    "end": "796040"
  },
  {
    "text": "clj refactor which provides some of the",
    "start": "796040",
    "end": "798000"
  },
  {
    "text": "sort of functionality I'm talking about",
    "start": "798000",
    "end": "799399"
  },
  {
    "text": "for editing closure code um and that's",
    "start": "799399",
    "end": "801760"
  },
  {
    "text": "much closer to the to the kind of",
    "start": "801760",
    "end": "803440"
  },
  {
    "text": "functionality I think we should be going",
    "start": "803440",
    "end": "804760"
  },
  {
    "text": "to but there's one interesting thing to",
    "start": "804760",
    "end": "806440"
  },
  {
    "text": "notice about it in the name it's clj",
    "start": "806440",
    "end": "808760"
  },
  {
    "text": "refa",
    "start": "808760",
    "end": "809839"
  },
  {
    "text": "so this sort of tooling has to be",
    "start": "809839",
    "end": "811279"
  },
  {
    "text": "specific to the language um because and",
    "start": "811279",
    "end": "813880"
  },
  {
    "text": "extracting a function in closure is very",
    "start": "813880",
    "end": "816360"
  },
  {
    "text": "different to extracting a function in",
    "start": "816360",
    "end": "817560"
  },
  {
    "text": "emx list so uh so these tool these tools",
    "start": "817560",
    "end": "821480"
  },
  {
    "text": "do have to be language",
    "start": "821480",
    "end": "824440"
  },
  {
    "text": "specific and this is something else I",
    "start": "824519",
    "end": "826360"
  },
  {
    "text": "see never send an Ida to a programming",
    "start": "826360",
    "end": "827880"
  },
  {
    "text": "language's job and I think that this is",
    "start": "827880",
    "end": "829320"
  },
  {
    "text": "something that comes out of people's",
    "start": "829320",
    "end": "831160"
  },
  {
    "text": "kind of visceral distaste for Java and",
    "start": "831160",
    "end": "833160"
  },
  {
    "text": "really most of the complicated IDE",
    "start": "833160",
    "end": "834600"
  },
  {
    "text": "functionality out there is for Java",
    "start": "834600",
    "end": "836399"
  },
  {
    "text": "these",
    "start": "836399",
    "end": "837800"
  },
  {
    "text": "days but think again I think edit of",
    "start": "837800",
    "end": "840519"
  },
  {
    "text": "functionality the sort of function I'm",
    "start": "840519",
    "end": "841839"
  },
  {
    "text": "talking about is kind of orthogonal to",
    "start": "841839",
    "end": "843279"
  },
  {
    "text": "the language right I definitely think we",
    "start": "843279",
    "end": "844759"
  },
  {
    "text": "should be trying to make more expressive",
    "start": "844759",
    "end": "846399"
  },
  {
    "text": "languages and more sophisticated",
    "start": "846399",
    "end": "848160"
  },
  {
    "text": "languages but um I wouldn't I'd say that",
    "start": "848160",
    "end": "851880"
  },
  {
    "text": "they're not a solution on their own I",
    "start": "851880",
    "end": "853120"
  },
  {
    "text": "mean obviously they're they're a great",
    "start": "853120",
    "end": "854639"
  },
  {
    "text": "Improvement but I actually think that",
    "start": "854639",
    "end": "856639"
  },
  {
    "text": "more sophisticated languages could",
    "start": "856639",
    "end": "858040"
  },
  {
    "text": "probably even benefit more from this",
    "start": "858040",
    "end": "859480"
  },
  {
    "text": "kind of editor functionality um but just",
    "start": "859480",
    "end": "861839"
  },
  {
    "text": "because there's a lot more operations",
    "start": "861839",
    "end": "863199"
  },
  {
    "text": "you could",
    "start": "863199",
    "end": "864240"
  },
  {
    "text": "perform um and I think the main reason",
    "start": "864240",
    "end": "868199"
  },
  {
    "text": "that this support doesn't exist for more",
    "start": "868199",
    "end": "869720"
  },
  {
    "text": "languages is just that it's really",
    "start": "869720",
    "end": "871120"
  },
  {
    "text": "really hard to develop it's just a ton",
    "start": "871120",
    "end": "872680"
  },
  {
    "text": "of work but that's actually distinct",
    "start": "872680",
    "end": "874959"
  },
  {
    "text": "from a not being desirable so I think a",
    "start": "874959",
    "end": "876360"
  },
  {
    "text": "lot of people tend to think well you",
    "start": "876360",
    "end": "877519"
  },
  {
    "text": "know this kind of support doesn't exist",
    "start": "877519",
    "end": "878839"
  },
  {
    "text": "for my favorite language so that's",
    "start": "878839",
    "end": "880240"
  },
  {
    "text": "probably because my favorite language",
    "start": "880240",
    "end": "881440"
  },
  {
    "text": "doesn't need it and I suspect It's",
    "start": "881440",
    "end": "883279"
  },
  {
    "text": "really because it's just really hard to",
    "start": "883279",
    "end": "884440"
  },
  {
    "text": "develop for your favorite language and",
    "start": "884440",
    "end": "886360"
  },
  {
    "text": "uh and it would be very useful if you",
    "start": "886360",
    "end": "887680"
  },
  {
    "text": "had",
    "start": "887680",
    "end": "889600"
  },
  {
    "text": "it so I'm going to make a Shameless",
    "start": "889600",
    "end": "891519"
  },
  {
    "text": "appeal to Authority here for those who",
    "start": "891519",
    "end": "892759"
  },
  {
    "text": "don't know oen Shivers he's been around",
    "start": "892759",
    "end": "894040"
  },
  {
    "text": "forever in the scheme World um I object",
    "start": "894040",
    "end": "896199"
  },
  {
    "text": "to doing things that computers can do",
    "start": "896199",
    "end": "897880"
  },
  {
    "text": "and so do I I would like my Editor to do",
    "start": "897880",
    "end": "900079"
  },
  {
    "text": "all of this and I'd like the edit to all",
    "start": "900079",
    "end": "901959"
  },
  {
    "text": "this for my users as",
    "start": "901959",
    "end": "904480"
  },
  {
    "text": "well so there's one big thing about",
    "start": "904480",
    "end": "906600"
  },
  {
    "text": "indexing surface source code syntax that",
    "start": "906600",
    "end": "909759"
  },
  {
    "text": "uh um that we need to talk about and",
    "start": "909759",
    "end": "912720"
  },
  {
    "text": "that is macros so for those who aren't",
    "start": "912720",
    "end": "915639"
  },
  {
    "text": "uh who aren't familiar with lisps the",
    "start": "915639",
    "end": "917120"
  },
  {
    "text": "whole promise of lisps really or one of",
    "start": "917120",
    "end": "919079"
  },
  {
    "text": "the main things that distinguishes lisps",
    "start": "919079",
    "end": "920680"
  },
  {
    "text": "from other um from other languages is",
    "start": "920680",
    "end": "923079"
  },
  {
    "text": "that this idea that they can be",
    "start": "923079",
    "end": "924279"
  },
  {
    "text": "programmable programming languages so",
    "start": "924279",
    "end": "927120"
  },
  {
    "text": "closure code like um like most Lis code",
    "start": "927120",
    "end": "929399"
  },
  {
    "text": "is actually represented using the data",
    "start": "929399",
    "end": "930920"
  },
  {
    "text": "structures of the language itself so",
    "start": "930920",
    "end": "932319"
  },
  {
    "text": "that means that you can trivially read",
    "start": "932319",
    "end": "933639"
  },
  {
    "text": "in a chunk of lisp code and you'll just",
    "start": "933639",
    "end": "936160"
  },
  {
    "text": "get back a bunch well in Clos case you",
    "start": "936160",
    "end": "938399"
  },
  {
    "text": "get back a bunch of like lists andap",
    "start": "938399",
    "end": "940560"
  },
  {
    "text": "maps and vectors and that actually",
    "start": "940560",
    "end": "941880"
  },
  {
    "text": "represents the program's source",
    "start": "941880",
    "end": "943920"
  },
  {
    "text": "code um and so closure code is always",
    "start": "943920",
    "end": "947040"
  },
  {
    "text": "compiled even when you're doing it",
    "start": "947040",
    "end": "948240"
  },
  {
    "text": "interactively at the Ripple so the way",
    "start": "948240",
    "end": "950000"
  },
  {
    "text": "it works is the code is read in and then",
    "start": "950000",
    "end": "953040"
  },
  {
    "text": "before it actually gets compiled um it",
    "start": "953040",
    "end": "955199"
  },
  {
    "text": "goes you go closure will go through and",
    "start": "955199",
    "end": "957560"
  },
  {
    "text": "all the macros are actually expand",
    "start": "957560",
    "end": "959000"
  },
  {
    "text": "handed out and so what's compiled",
    "start": "959000",
    "end": "960440"
  },
  {
    "text": "there's really only a handful of",
    "start": "960440",
    "end": "961759"
  },
  {
    "text": "built-in forms in",
    "start": "961759",
    "end": "963240"
  },
  {
    "text": "closure um and so you can use macros to",
    "start": "963240",
    "end": "966480"
  },
  {
    "text": "just like add a little bit to the",
    "start": "966480",
    "end": "968399"
  },
  {
    "text": "language syntax or you can change the",
    "start": "968399",
    "end": "970040"
  },
  {
    "text": "way the language Works in really quite",
    "start": "970040",
    "end": "971600"
  },
  {
    "text": "fundamental",
    "start": "971600",
    "end": "973319"
  },
  {
    "text": "ways so here's a little example a a",
    "start": "973319",
    "end": "976440"
  },
  {
    "text": "transcript of a simple uh Ripple session",
    "start": "976440",
    "end": "979079"
  },
  {
    "text": "so we just start up our",
    "start": "979079",
    "end": "980560"
  },
  {
    "text": "Ripple and then we uh we make this diff",
    "start": "980560",
    "end": "983440"
  },
  {
    "text": "macro call so if you're not familiar",
    "start": "983440",
    "end": "984800"
  },
  {
    "text": "with clure don't worry too much about",
    "start": "984800",
    "end": "986040"
  },
  {
    "text": "the details of what this is doing but",
    "start": "986040",
    "end": "987399"
  },
  {
    "text": "essentially we're defining a new macro",
    "start": "987399",
    "end": "988959"
  },
  {
    "text": "called 4H right because I miss my Java 5",
    "start": "988959",
    "end": "991560"
  },
  {
    "text": "4H when I'm programming",
    "start": "991560",
    "end": "993240"
  },
  {
    "text": "enclosure and then I call it right 4hx",
    "start": "993240",
    "end": "996399"
  },
  {
    "text": "and 123 printed out and 1 2 3 there it",
    "start": "996399",
    "end": "1000360"
  },
  {
    "text": "is but what's really interesting is",
    "start": "1000360",
    "end": "1002279"
  },
  {
    "text": "we've actually extended the language",
    "start": "1002279",
    "end": "1004319"
  },
  {
    "text": "syntax there and this macro use actually",
    "start": "1004319",
    "end": "1007680"
  },
  {
    "text": "contains these two these two x's here",
    "start": "1007680",
    "end": "1010079"
  },
  {
    "text": "that are highlighted and that's a new",
    "start": "1010079",
    "end": "1011639"
  },
  {
    "text": "local variable so an IDE to provide",
    "start": "1011639",
    "end": "1014519"
  },
  {
    "text": "support for this is going to have to",
    "start": "1014519",
    "end": "1016040"
  },
  {
    "text": "understand what that means it's going to",
    "start": "1016040",
    "end": "1017279"
  },
  {
    "text": "have to understand that X is a local",
    "start": "1017279",
    "end": "1019519"
  },
  {
    "text": "variable it's going to need to know what",
    "start": "1019519",
    "end": "1020639"
  },
  {
    "text": "its scope is it's going to need to know",
    "start": "1020639",
    "end": "1022800"
  },
  {
    "text": "which of these is the Declaration and",
    "start": "1022800",
    "end": "1024600"
  },
  {
    "text": "which is the",
    "start": "1024600",
    "end": "1025558"
  },
  {
    "text": "usage",
    "start": "1025559",
    "end": "1027839"
  },
  {
    "text": "um and in closure most of the core",
    "start": "1027839",
    "end": "1030438"
  },
  {
    "text": "functionality of the language is",
    "start": "1030439",
    "end": "1031558"
  },
  {
    "text": "actually provided by macros so things",
    "start": "1031559",
    "end": "1033199"
  },
  {
    "text": "like defen let um these aren't actually",
    "start": "1033199",
    "end": "1036160"
  },
  {
    "text": "built into the language as such they're",
    "start": "1036160",
    "end": "1037959"
  },
  {
    "text": "actually macros that expand out to the",
    "start": "1037959",
    "end": "1040038"
  },
  {
    "text": "really core forms of the language and C",
    "start": "1040039",
    "end": "1042640"
  },
  {
    "text": "have really has no way to actually look",
    "start": "1042640",
    "end": "1044120"
  },
  {
    "text": "inside these macros to see which symbols",
    "start": "1044120",
    "end": "1046199"
  },
  {
    "text": "they uh they Define and there are some",
    "start": "1046199",
    "end": "1048438"
  },
  {
    "text": "other tricky cases as well like symbols",
    "start": "1048439",
    "end": "1049880"
  },
  {
    "text": "defined by macros may not actually even",
    "start": "1049880",
    "end": "1051440"
  },
  {
    "text": "exist in your source code at all so",
    "start": "1051440",
    "end": "1053240"
  },
  {
    "text": "here's an example of that uh So Def",
    "start": "1053240",
    "end": "1055600"
  },
  {
    "text": "record is a built-in clure macro that",
    "start": "1055600",
    "end": "1057840"
  },
  {
    "text": "just defines essentially like a single a",
    "start": "1057840",
    "end": "1059720"
  },
  {
    "text": "simple struct or something so we're",
    "start": "1059720",
    "end": "1061000"
  },
  {
    "text": "defining a point here that has an X and",
    "start": "1061000",
    "end": "1062400"
  },
  {
    "text": "A Y",
    "start": "1062400",
    "end": "1063280"
  },
  {
    "text": "component and then we call this arot to",
    "start": "1063280",
    "end": "1066320"
  },
  {
    "text": "point function and that actually creates",
    "start": "1066320",
    "end": "1068039"
  },
  {
    "text": "one for us so that's a Constructor",
    "start": "1068039",
    "end": "1070120"
  },
  {
    "text": "function so if you look at the name of",
    "start": "1070120",
    "end": "1072080"
  },
  {
    "text": "this thing the diff record macro what it",
    "start": "1072080",
    "end": "1074280"
  },
  {
    "text": "actually does is it expands out into",
    "start": "1074280",
    "end": "1075880"
  },
  {
    "text": "code so the code that actually goes off",
    "start": "1075880",
    "end": "1077640"
  },
  {
    "text": "and creates the record itself but then",
    "start": "1077640",
    "end": "1079280"
  },
  {
    "text": "it also creates a Constructor function",
    "start": "1079280",
    "end": "1081200"
  },
  {
    "text": "that you can use to create instances of",
    "start": "1081200",
    "end": "1082919"
  },
  {
    "text": "this new type but the name of that",
    "start": "1082919",
    "end": "1085400"
  },
  {
    "text": "function doesn't exist anywhere in your",
    "start": "1085400",
    "end": "1087159"
  },
  {
    "text": "source code so if the user tries to",
    "start": "1087159",
    "end": "1089360"
  },
  {
    "text": "rename that what should you do should",
    "start": "1089360",
    "end": "1090840"
  },
  {
    "text": "you allow them to rename it",
    "start": "1090840",
    "end": "1091880"
  },
  {
    "text": "independently of the record itself that",
    "start": "1091880",
    "end": "1093640"
  },
  {
    "text": "doesn't really make any sense right so",
    "start": "1093640",
    "end": "1096480"
  },
  {
    "text": "really what what cursive does in that",
    "start": "1096480",
    "end": "1098080"
  },
  {
    "text": "case is if you try and rename the",
    "start": "1098080",
    "end": "1099440"
  },
  {
    "text": "Constructor function what it'll do is",
    "start": "1099440",
    "end": "1100799"
  },
  {
    "text": "it'll it will rename the actual record",
    "start": "1100799",
    "end": "1103400"
  },
  {
    "text": "and that will sort of implicitly rename",
    "start": "1103400",
    "end": "1105320"
  },
  {
    "text": "the Constructor function but there are",
    "start": "1105320",
    "end": "1107600"
  },
  {
    "text": "lots of tricky cases like this um that",
    "start": "1107600",
    "end": "1110280"
  },
  {
    "text": "macros make quite difficult for editor",
    "start": "1110280",
    "end": "1113960"
  },
  {
    "text": "support so the first thing everyone says",
    "start": "1113960",
    "end": "1116080"
  },
  {
    "text": "when I talk about this problem is why",
    "start": "1116080",
    "end": "1117200"
  },
  {
    "text": "used to expand the macros right it's",
    "start": "1117200",
    "end": "1118600"
  },
  {
    "text": "easy so the problem is that macros and",
    "start": "1118600",
    "end": "1120640"
  },
  {
    "text": "closure are completely arbitrary code so",
    "start": "1120640",
    "end": "1122320"
  },
  {
    "text": "a macro is literally just a function",
    "start": "1122320",
    "end": "1123880"
  },
  {
    "text": "that accepts a little bit of program and",
    "start": "1123880",
    "end": "1125960"
  },
  {
    "text": "returns another little bit bit of",
    "start": "1125960",
    "end": "1127240"
  },
  {
    "text": "program back and the bit you return gets",
    "start": "1127240",
    "end": "1129280"
  },
  {
    "text": "used in place of the original right so",
    "start": "1129280",
    "end": "1131760"
  },
  {
    "text": "this is a SE style common list style def",
    "start": "1131760",
    "end": "1135000"
  },
  {
    "text": "macro so it might never terminate and",
    "start": "1135000",
    "end": "1137360"
  },
  {
    "text": "you can't determine ahead of time",
    "start": "1137360",
    "end": "1138520"
  },
  {
    "text": "whether it's actually going to that's",
    "start": "1138520",
    "end": "1139679"
  },
  {
    "text": "the halting problem it might use a huge",
    "start": "1139679",
    "end": "1141559"
  },
  {
    "text": "amount of resources it might take for",
    "start": "1141559",
    "end": "1142880"
  },
  {
    "text": "ages it might use a lot of memory um and",
    "start": "1142880",
    "end": "1145799"
  },
  {
    "text": "again it's arbitary code it could format",
    "start": "1145799",
    "end": "1147360"
  },
  {
    "text": "your hard drive it could connect to your",
    "start": "1147360",
    "end": "1148760"
  },
  {
    "text": "database it could send Rockets to the",
    "start": "1148760",
    "end": "1150360"
  },
  {
    "text": "Moon you don't really know U because",
    "start": "1150360",
    "end": "1152280"
  },
  {
    "text": "it's not a pure language",
    "start": "1152280",
    "end": "1154400"
  },
  {
    "text": "right and this list is actually taken",
    "start": "1154400",
    "end": "1156679"
  },
  {
    "text": "from like directly from my issue tracker",
    "start": "1156679",
    "end": "1158280"
  },
  {
    "text": "I didn't actually write these um so",
    "start": "1158280",
    "end": "1160039"
  },
  {
    "text": "there's a guy called Franchesco below me",
    "start": "1160039",
    "end": "1161480"
  },
  {
    "text": "and he has this project called cross clj",
    "start": "1161480",
    "end": "1164320"
  },
  {
    "text": "and what that does it takes a bunch of",
    "start": "1164320",
    "end": "1165720"
  },
  {
    "text": "libraries from the clure ecosystem and",
    "start": "1165720",
    "end": "1167480"
  },
  {
    "text": "it indexes them AC cross refence",
    "start": "1167480",
    "end": "1168720"
  },
  {
    "text": "refences them so you can see how they",
    "start": "1168720",
    "end": "1169960"
  },
  {
    "text": "used you can see which libraries are",
    "start": "1169960",
    "end": "1171240"
  },
  {
    "text": "used by which other libraries and where",
    "start": "1171240",
    "end": "1172640"
  },
  {
    "text": "the functions are used and so on and he",
    "start": "1172640",
    "end": "1174640"
  },
  {
    "text": "doesn't have a static analysis engine",
    "start": "1174640",
    "end": "1176120"
  },
  {
    "text": "like um like cursive does so he just",
    "start": "1176120",
    "end": "1178760"
  },
  {
    "text": "expands the macros out to actually do",
    "start": "1178760",
    "end": "1180520"
  },
  {
    "text": "his analysis um and he said that the",
    "start": "1180520",
    "end": "1182919"
  },
  {
    "text": "first two there macros never actually",
    "start": "1182919",
    "end": "1184559"
  },
  {
    "text": "terminating and just hanging or macro's",
    "start": "1184559",
    "end": "1186200"
  },
  {
    "text": "using a lot of resource he's actually",
    "start": "1186200",
    "end": "1187360"
  },
  {
    "text": "seen those um seen real cases of them in",
    "start": "1187360",
    "end": "1190520"
  },
  {
    "text": "real code and he sees them quite",
    "start": "1190520",
    "end": "1192000"
  },
  {
    "text": "frequently and in fact I was at a scheme",
    "start": "1192000",
    "end": "1193919"
  },
  {
    "text": "Workshop a scheme Workshop a couple of",
    "start": "1193919",
    "end": "1195880"
  },
  {
    "text": "years ago talking to people about this",
    "start": "1195880",
    "end": "1197840"
  },
  {
    "text": "and someone there told me about a macro",
    "start": "1197840",
    "end": "1199559"
  },
  {
    "text": "that during macro expansion would shell",
    "start": "1199559",
    "end": "1201360"
  },
  {
    "text": "out to a c compiler to pass a header",
    "start": "1201360",
    "end": "1203600"
  },
  {
    "text": "file and based on the contents of the",
    "start": "1203600",
    "end": "1204799"
  },
  {
    "text": "header file it would generate a bunch of",
    "start": "1204799",
    "end": "1206600"
  },
  {
    "text": "code um so please don't ever do that but",
    "start": "1206600",
    "end": "1210400"
  },
  {
    "text": "uh um but people do do",
    "start": "1210400",
    "end": "1214240"
  },
  {
    "text": "this and it's also very difficult to",
    "start": "1214240",
    "end": "1216240"
  },
  {
    "text": "relate the macro expansion back to the",
    "start": "1216240",
    "end": "1217760"
  },
  {
    "text": "source right so you end up you expand",
    "start": "1217760",
    "end": "1220120"
  },
  {
    "text": "all your Macros you get this huge ball",
    "start": "1220120",
    "end": "1221679"
  },
  {
    "text": "of code and it's very hard to actually",
    "start": "1221679",
    "end": "1224000"
  },
  {
    "text": "relate that back to the original Source",
    "start": "1224000",
    "end": "1225799"
  },
  {
    "text": "often so prival cases are usually pretty",
    "start": "1225799",
    "end": "1227799"
  },
  {
    "text": "simple um but the complex cases get very",
    "start": "1227799",
    "end": "1230360"
  },
  {
    "text": "hard very quickly and so cases like that",
    "start": "1230360",
    "end": "1232679"
  },
  {
    "text": "virtual symbol for example if you just",
    "start": "1232679",
    "end": "1234640"
  },
  {
    "text": "naively expand a diff record and you end",
    "start": "1234640",
    "end": "1236440"
  },
  {
    "text": "up with this new symbol there's no",
    "start": "1236440",
    "end": "1238360"
  },
  {
    "text": "really no good way for cursor to",
    "start": "1238360",
    "end": "1239799"
  },
  {
    "text": "actually know what that represents and",
    "start": "1239799",
    "end": "1241960"
  },
  {
    "text": "what you what you you should do if the",
    "start": "1241960",
    "end": "1243799"
  },
  {
    "text": "user tries to manipulate",
    "start": "1243799",
    "end": "1246200"
  },
  {
    "text": "it so the solution I went for on cursive",
    "start": "1246200",
    "end": "1248760"
  },
  {
    "text": "is actually cursive has an extension API",
    "start": "1248760",
    "end": "1251080"
  },
  {
    "text": "basically so what this really means is I",
    "start": "1251080",
    "end": "1252520"
  },
  {
    "text": "basically have to teach cursive about",
    "start": "1252520",
    "end": "1254120"
  },
  {
    "text": "macroform so it can understand them um",
    "start": "1254120",
    "end": "1256840"
  },
  {
    "text": "so when it sees something that looks",
    "start": "1256840",
    "end": "1257960"
  },
  {
    "text": "like a macro form form while it's",
    "start": "1257960",
    "end": "1259039"
  },
  {
    "text": "analyzing its code it looks at the head",
    "start": "1259039",
    "end": "1261679"
  },
  {
    "text": "symbol and if it has support for that",
    "start": "1261679",
    "end": "1263280"
  },
  {
    "text": "macro then it will call the extension",
    "start": "1263280",
    "end": "1265480"
  },
  {
    "text": "which is just a function and that will",
    "start": "1265480",
    "end": "1267039"
  },
  {
    "text": "return some data to cursive that it will",
    "start": "1267039",
    "end": "1268440"
  },
  {
    "text": "actually use in its analysis so my plan",
    "start": "1268440",
    "end": "1271320"
  },
  {
    "text": "is to open source this API and to open",
    "start": "1271320",
    "end": "1273360"
  },
  {
    "text": "source the current implementations for",
    "start": "1273360",
    "end": "1274960"
  },
  {
    "text": "various boring reasons I haven't done",
    "start": "1274960",
    "end": "1276480"
  },
  {
    "text": "that yet but at that point users will be",
    "start": "1276480",
    "end": "1278480"
  },
  {
    "text": "able to add support for the macros",
    "start": "1278480",
    "end": "1280159"
  },
  {
    "text": "either they develop themselves or that",
    "start": "1280159",
    "end": "1282039"
  },
  {
    "text": "they uh that they use um so that cursive",
    "start": "1282039",
    "end": "1284360"
  },
  {
    "text": "can understand them",
    "start": "1284360",
    "end": "1286520"
  },
  {
    "text": "better and so there's all sorts of",
    "start": "1286520",
    "end": "1288320"
  },
  {
    "text": "things um I won't go through that whole",
    "start": "1288320",
    "end": "1289840"
  },
  {
    "text": "list but there's a lot of different",
    "start": "1289840",
    "end": "1290960"
  },
  {
    "text": "aspects of the way macros work that can",
    "start": "1290960",
    "end": "1292480"
  },
  {
    "text": "be customized in this",
    "start": "1292480",
    "end": "1294720"
  },
  {
    "text": "way so a really good question a question",
    "start": "1294720",
    "end": "1296840"
  },
  {
    "text": "I should actually ask myself more often",
    "start": "1296840",
    "end": "1298080"
  },
  {
    "text": "or more frequently with uh with this is",
    "start": "1298080",
    "end": "1300440"
  },
  {
    "text": "what would recit do so for those who",
    "start": "1300440",
    "end": "1301880"
  },
  {
    "text": "aren't familiar with recit it's a scheme",
    "start": "1301880",
    "end": "1303360"
  },
  {
    "text": "implementation it's been around for a",
    "start": "1303360",
    "end": "1304720"
  },
  {
    "text": "really long time um it's used a lot in",
    "start": "1304720",
    "end": "1306760"
  },
  {
    "text": "education and programming language",
    "start": "1306760",
    "end": "1308480"
  },
  {
    "text": "research um and interestingly it comes",
    "start": "1308480",
    "end": "1311120"
  },
  {
    "text": "with an IDE so it's interesting to",
    "start": "1311120",
    "end": "1313760"
  },
  {
    "text": "compare what recit does compared to what",
    "start": "1313760",
    "end": "1315200"
  },
  {
    "text": "cursive does so recit in the editor does",
    "start": "1315200",
    "end": "1317200"
  },
  {
    "text": "actually expand macros",
    "start": "1317200",
    "end": "1319120"
  },
  {
    "text": "um and you can see there's some",
    "start": "1319120",
    "end": "1321640"
  },
  {
    "text": "interesting examples here so here's a",
    "start": "1321640",
    "end": "1323000"
  },
  {
    "text": "little snippet of scheme code that",
    "start": "1323000",
    "end": "1324400"
  },
  {
    "text": "defines a distance function it takes two",
    "start": "1324400",
    "end": "1326200"
  },
  {
    "text": "points p uh P1 and P2 and record is",
    "start": "1326200",
    "end": "1329679"
  },
  {
    "text": "actually able to say well okay this",
    "start": "1329679",
    "end": "1331159"
  },
  {
    "text": "element in the source code is a usage of",
    "start": "1331159",
    "end": "1334000"
  },
  {
    "text": "this parameter",
    "start": "1334000",
    "end": "1336320"
  },
  {
    "text": "P2 even more interestingly it has this",
    "start": "1336320",
    "end": "1339559"
  },
  {
    "text": "PT which is again is a point kind of",
    "start": "1339559",
    "end": "1341360"
  },
  {
    "text": "data structure and that creates these",
    "start": "1341360",
    "end": "1343240"
  },
  {
    "text": "accessor functions PTX and PTY which you",
    "start": "1343240",
    "end": "1346360"
  },
  {
    "text": "can see there and it's actually able to",
    "start": "1346360",
    "end": "1348640"
  },
  {
    "text": "say well the PT part of PTX comes from",
    "start": "1348640",
    "end": "1351400"
  },
  {
    "text": "the name of the of the point structure",
    "start": "1351400",
    "end": "1354159"
  },
  {
    "text": "and the X and Y comes from the component",
    "start": "1354159",
    "end": "1355960"
  },
  {
    "text": "name and this actually requires",
    "start": "1355960",
    "end": "1357679"
  },
  {
    "text": "interaction from the macro itself so the",
    "start": "1357679",
    "end": "1359240"
  },
  {
    "text": "macro itself as it's producing the forms",
    "start": "1359240",
    "end": "1361520"
  },
  {
    "text": "that it returns um after the macro",
    "start": "1361520",
    "end": "1364000"
  },
  {
    "text": "expansion it actually uses a system",
    "start": "1364000",
    "end": "1365919"
  },
  {
    "text": "called syntax properties to annotate",
    "start": "1365919",
    "end": "1367559"
  },
  {
    "text": "them to say this part of this symbol",
    "start": "1367559",
    "end": "1369000"
  },
  {
    "text": "comes from over here this part of the",
    "start": "1369000",
    "end": "1370360"
  },
  {
    "text": "symbol comes from over over",
    "start": "1370360",
    "end": "1373520"
  },
  {
    "text": "here here's here's another example so",
    "start": "1373520",
    "end": "1375919"
  },
  {
    "text": "they've defined a myric which is just to",
    "start": "1375919",
    "end": "1378080"
  },
  {
    "text": "replace the built-in scheme lit R um and",
    "start": "1378080",
    "end": "1381559"
  },
  {
    "text": "they're using it to define a factorial",
    "start": "1381559",
    "end": "1383279"
  },
  {
    "text": "function and Dr ret can actually",
    "start": "1383279",
    "end": "1385720"
  },
  {
    "text": "determine that from the definition of",
    "start": "1385720",
    "end": "1387559"
  },
  {
    "text": "the factorial that the two uses actually",
    "start": "1387559",
    "end": "1389720"
  },
  {
    "text": "relate to that definition but the really",
    "start": "1389720",
    "end": "1391159"
  },
  {
    "text": "interesting thing about this is that in",
    "start": "1391159",
    "end": "1393400"
  },
  {
    "text": "the macro expanded code the name fact",
    "start": "1393400",
    "end": "1395919"
  },
  {
    "text": "doesn't appear anywhere at",
    "start": "1395919",
    "end": "1397760"
  },
  {
    "text": "all so and and I don't fully understand",
    "start": "1397760",
    "end": "1400760"
  },
  {
    "text": "how this works but basically as recet is",
    "start": "1400760",
    "end": "1403039"
  },
  {
    "text": "doing its macro expansion it maintains",
    "start": "1403039",
    "end": "1405320"
  },
  {
    "text": "the whole um the whole history of the",
    "start": "1405320",
    "end": "1408520"
  },
  {
    "text": "macro expansion and it's able to",
    "start": "1408520",
    "end": "1410600"
  },
  {
    "text": "actually analyze that information to",
    "start": "1410600",
    "end": "1412080"
  },
  {
    "text": "work out how the elements in the surface",
    "start": "1412080",
    "end": "1413760"
  },
  {
    "text": "syntax relate to some later point in the",
    "start": "1413760",
    "end": "1415960"
  },
  {
    "text": "macro expansion it's really very clever",
    "start": "1415960",
    "end": "1417679"
  },
  {
    "text": "it's uh surprisingly",
    "start": "1417679",
    "end": "1420760"
  },
  {
    "text": "impressive so the advantage of this",
    "start": "1420760",
    "end": "1422760"
  },
  {
    "text": "obviously that most many macros just",
    "start": "1422760",
    "end": "1424159"
  },
  {
    "text": "work out of the box you can add a new",
    "start": "1424159",
    "end": "1425559"
  },
  {
    "text": "macro you can immediately use it and it",
    "start": "1425559",
    "end": "1427120"
  },
  {
    "text": "will just work um assuming you're not",
    "start": "1427120",
    "end": "1429240"
  },
  {
    "text": "doing anything too crazy and in cases",
    "start": "1429240",
    "end": "1431600"
  },
  {
    "text": "where it's difficult uh for the IDE to",
    "start": "1431600",
    "end": "1434200"
  },
  {
    "text": "to just do that the macros can",
    "start": "1434200",
    "end": "1436039"
  },
  {
    "text": "communicate with the IDE using these",
    "start": "1436039",
    "end": "1437720"
  },
  {
    "text": "system uh these syntax properties so",
    "start": "1437720",
    "end": "1439600"
  },
  {
    "text": "they can annotate the various forms that",
    "start": "1439600",
    "end": "1441000"
  },
  {
    "text": "they return in different ways so they",
    "start": "1441000",
    "end": "1442880"
  },
  {
    "text": "can tell the ID to add tool tips on",
    "start": "1442880",
    "end": "1445279"
  },
  {
    "text": "particular forms and things like",
    "start": "1445279",
    "end": "1448159"
  },
  {
    "text": "that but it does have some problems as",
    "start": "1448159",
    "end": "1450559"
  },
  {
    "text": "well so I asked on the record mailing",
    "start": "1450559",
    "end": "1452480"
  },
  {
    "text": "list about this a while ago and uh they",
    "start": "1452480",
    "end": "1454200"
  },
  {
    "text": "went often did a couple of tests and uh",
    "start": "1454200",
    "end": "1456480"
  },
  {
    "text": "so a 3,000 line macro heavy file which",
    "start": "1456480",
    "end": "1459039"
  },
  {
    "text": "is not totally crazy in a big system um",
    "start": "1459039",
    "end": "1461960"
  },
  {
    "text": "takes about 8 seconds to macro expand so",
    "start": "1461960",
    "end": "1463960"
  },
  {
    "text": "that means you open your file you have",
    "start": "1463960",
    "end": "1465159"
  },
  {
    "text": "to wait 8 seconds to be able to really",
    "start": "1465159",
    "end": "1466520"
  },
  {
    "text": "do anything in your editor and",
    "start": "1466520",
    "end": "1468679"
  },
  {
    "text": "additionally every time you make a",
    "start": "1468679",
    "end": "1470440"
  },
  {
    "text": "modification to your file it has to go",
    "start": "1470440",
    "end": "1472320"
  },
  {
    "text": "off and do that again um so after every",
    "start": "1472320",
    "end": "1475240"
  },
  {
    "text": "sort of edit in your file you're waiting",
    "start": "1475240",
    "end": "1477360"
  },
  {
    "text": "8 seconds before you can do anything",
    "start": "1477360",
    "end": "1478919"
  },
  {
    "text": "again which is uh it's kind of a",
    "start": "1478919",
    "end": "1481120"
  },
  {
    "text": "non-starter I think in my opinion memory",
    "start": "1481120",
    "end": "1482679"
  },
  {
    "text": "use is also an issue so uh again like",
    "start": "1482679",
    "end": "1485600"
  },
  {
    "text": "from a 3,000 line macro heavy file the",
    "start": "1485600",
    "end": "1487440"
  },
  {
    "text": "macro expansion is going to be",
    "start": "1487440",
    "end": "1488640"
  },
  {
    "text": "absolutely enormous and ret also tracks",
    "start": "1488640",
    "end": "1491039"
  },
  {
    "text": "all the history as it's doing all these",
    "start": "1491039",
    "end": "1492360"
  },
  {
    "text": "macro expansion and that's more stuff",
    "start": "1492360",
    "end": "1493760"
  },
  {
    "text": "that has to be stored in memory so um so",
    "start": "1493760",
    "end": "1496760"
  },
  {
    "text": "the memor so I asked them about this and",
    "start": "1496760",
    "end": "1498840"
  },
  {
    "text": "they said that Dr racket is a memory hog",
    "start": "1498840",
    "end": "1500679"
  },
  {
    "text": "but they don't really know where all",
    "start": "1500679",
    "end": "1501840"
  },
  {
    "text": "that memory is going uh it's hard to say",
    "start": "1501840",
    "end": "1503720"
  },
  {
    "text": "how much of it is due to this and Cur",
    "start": "1503720",
    "end": "1505960"
  },
  {
    "text": "would actually have to macro expand in",
    "start": "1505960",
    "end": "1507080"
  },
  {
    "text": "many more situations than Dr racket does",
    "start": "1507080",
    "end": "1508799"
  },
  {
    "text": "so things like indexing um it would have",
    "start": "1508799",
    "end": "1511120"
  },
  {
    "text": "to macro expand in those cases and C",
    "start": "1511120",
    "end": "1513279"
  },
  {
    "text": "actually can't macro expand during",
    "start": "1513279",
    "end": "1514559"
  },
  {
    "text": "indexing um because the index data",
    "start": "1514559",
    "end": "1516720"
  },
  {
    "text": "there's a really strong and variant that",
    "start": "1516720",
    "end": "1517960"
  },
  {
    "text": "index data must depend only on the",
    "start": "1517960",
    "end": "1519480"
  },
  {
    "text": "contents of the file being indexed and",
    "start": "1519480",
    "end": "1521840"
  },
  {
    "text": "if you're macro expanding then that's",
    "start": "1521840",
    "end": "1523520"
  },
  {
    "text": "not the case right it's um it depends on",
    "start": "1523520",
    "end": "1525679"
  },
  {
    "text": "the definition of the macro and uh the",
    "start": "1525679",
    "end": "1528399"
  },
  {
    "text": "the file itself as well also recus macro",
    "start": "1528399",
    "end": "1531520"
  },
  {
    "text": "expander is much more sophisticated than",
    "start": "1531520",
    "end": "1533039"
  },
  {
    "text": "closures and so they have all these",
    "start": "1533039",
    "end": "1534640"
  },
  {
    "text": "abilities to annotate um things clure",
    "start": "1534640",
    "end": "1537360"
  },
  {
    "text": "provides something along those lines but",
    "start": "1537360",
    "end": "1538559"
  },
  {
    "text": "clure macros are pretty notorious for",
    "start": "1538559",
    "end": "1540080"
  },
  {
    "text": "dropping metadata on the floor during",
    "start": "1540080",
    "end": "1541520"
  },
  {
    "text": "macro expansion um and then finally Dr",
    "start": "1541520",
    "end": "1544960"
  },
  {
    "text": "ret and the ret world is totally",
    "start": "1544960",
    "end": "1546440"
  },
  {
    "text": "ubiquitous so um if a macro doesn't work",
    "start": "1546440",
    "end": "1549360"
  },
  {
    "text": "with Dr ret you can pretty much assume",
    "start": "1549360",
    "end": "1551399"
  },
  {
    "text": "that the macro author would just fix it",
    "start": "1551399",
    "end": "1552799"
  },
  {
    "text": "so it does cursive isn't ubiquitous and",
    "start": "1552799",
    "end": "1555480"
  },
  {
    "text": "in fact there are a bunch of core macros",
    "start": "1555480",
    "end": "1557000"
  },
  {
    "text": "that wouldn't work without this sort of",
    "start": "1557000",
    "end": "1558520"
  },
  {
    "text": "support um so I can't really rely on",
    "start": "1558520",
    "end": "1560840"
  },
  {
    "text": "that so while the recet solution is",
    "start": "1560840",
    "end": "1562919"
  },
  {
    "text": "actually really nice I don't think it",
    "start": "1562919",
    "end": "1564000"
  },
  {
    "text": "will ever actually work for cursive",
    "start": "1564000",
    "end": "1567200"
  },
  {
    "text": "unfortunately so if you'll take one",
    "start": "1567799",
    "end": "1570559"
  },
  {
    "text": "thing away from this talk I'd like it to",
    "start": "1570559",
    "end": "1571799"
  },
  {
    "text": "be this I think that when we're editing",
    "start": "1571799",
    "end": "1573720"
  },
  {
    "text": "our our um code I think we really should",
    "start": "1573720",
    "end": "1576440"
  },
  {
    "text": "be working directly on the structure of",
    "start": "1576440",
    "end": "1577799"
  },
  {
    "text": "our programs I think our editors should",
    "start": "1577799",
    "end": "1579440"
  },
  {
    "text": "provide semantic operations to us that",
    "start": "1579440",
    "end": "1581840"
  },
  {
    "text": "allow us to directly manipulate our",
    "start": "1581840",
    "end": "1583679"
  },
  {
    "text": "programs in sophisticated ways that",
    "start": "1583679",
    "end": "1586039"
  },
  {
    "text": "means that those tools need to be",
    "start": "1586039",
    "end": "1587559"
  },
  {
    "text": "language aware they need to be specific",
    "start": "1587559",
    "end": "1589159"
  },
  {
    "text": "to the particular language that you're",
    "start": "1589159",
    "end": "1591080"
  },
  {
    "text": "uh that you're working on and they need",
    "start": "1591080",
    "end": "1593440"
  },
  {
    "text": "to provide manipulations that are",
    "start": "1593440",
    "end": "1594840"
  },
  {
    "text": "specific to that language as well and",
    "start": "1594840",
    "end": "1597399"
  },
  {
    "text": "this is hard work it's it's really",
    "start": "1597399",
    "end": "1599200"
  },
  {
    "text": "difficult to implement this sort of",
    "start": "1599200",
    "end": "1600159"
  },
  {
    "text": "thing but it doesn't mean it's not",
    "start": "1600159",
    "end": "1601640"
  },
  {
    "text": "desirable um I definitely think that",
    "start": "1601640",
    "end": "1604080"
  },
  {
    "text": "most languages could benefit from this",
    "start": "1604080",
    "end": "1606840"
  },
  {
    "text": "and I guess men of you may go on to",
    "start": "1606840",
    "end": "1608440"
  },
  {
    "text": "design programming languages for fun or",
    "start": "1608440",
    "end": "1610120"
  },
  {
    "text": "profit and I would ask you to do this",
    "start": "1610120",
    "end": "1612720"
  },
  {
    "text": "try and bear this sort of Tooling in",
    "start": "1612720",
    "end": "1614200"
  },
  {
    "text": "mind when you're designing your language",
    "start": "1614200",
    "end": "1615760"
  },
  {
    "text": "so make them easy to pass keep the",
    "start": "1615760",
    "end": "1617679"
  },
  {
    "text": "semantics relatively simple and",
    "start": "1617679",
    "end": "1619240"
  },
  {
    "text": "relatively obvious um ideally developed",
    "start": "1619240",
    "end": "1622080"
  },
  {
    "text": "the tooling and locks it with the",
    "start": "1622080",
    "end": "1623240"
  },
  {
    "text": "language and that'll help keep you",
    "start": "1623240",
    "end": "1626120"
  },
  {
    "text": "honest thank you",
    "start": "1626120",
    "end": "1628370"
  },
  {
    "text": "[Applause]",
    "start": "1628370",
    "end": "1634920"
  }
]