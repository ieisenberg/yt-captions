[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "hello and good morning everyone and welcome to this session where we're going to talk about the business impact",
    "start": "7400",
    "end": "13740"
  },
  {
    "text": "of code quality and this is a pretty broad topic so I'd like us to approach it from the lens of",
    "start": "13740",
    "end": "19140"
  },
  {
    "text": "technical depth and we're probably all familiar with technical depth and we take on technical",
    "start": "19140",
    "end": "25500"
  },
  {
    "start": "20000",
    "end": "323000"
  },
  {
    "text": "debt for multiple reasons the classic case is that we try to go faster we try to trade quality for",
    "start": "25500",
    "end": "33540"
  },
  {
    "text": "delivering our feature quicker right so now our code is in a worse place than it used to be or perhaps we do",
    "start": "33540",
    "end": "40140"
  },
  {
    "text": "everything right but our understanding of the business problem we're trying to solve changes so our design is no longer",
    "start": "40140",
    "end": "46079"
  },
  {
    "text": "a good fit or maybe just maybe our design wasn't a good fit to start with",
    "start": "46079",
    "end": "52200"
  },
  {
    "text": "no matter where we come from with the passage of time those differences tend to lose their meaning and we simply end",
    "start": "52200",
    "end": "58440"
  },
  {
    "text": "up with technical depth being code that's more expensive to maintain than it should be",
    "start": "58440",
    "end": "64198"
  },
  {
    "text": "and this is the definition of technical depth that I'm going to use and run with throughout this presentation",
    "start": "64199",
    "end": "70439"
  },
  {
    "text": "now if you've been following the research of the posters there have been some pretty",
    "start": "70439",
    "end": "76020"
  },
  {
    "text": "interesting papers published that can actually quantify the impact of technical debt",
    "start": "76020",
    "end": "81900"
  },
  {
    "text": "and depending on which paper you look at you're going to see different numbers of course but it doesn't really matter because the",
    "start": "81900",
    "end": "88860"
  },
  {
    "text": "old kind of represent the pretty depressing read because depending on those papers you",
    "start": "88860",
    "end": "94439"
  },
  {
    "text": "will see that we software developers we waste on average 23 to 42 percent of our",
    "start": "94439",
    "end": "100920"
  },
  {
    "text": "work week dealing with the consequences of technical debt and bad code in general",
    "start": "100920",
    "end": "107220"
  },
  {
    "text": "42 percent waste what does that actually mean let's do a small fact experiment",
    "start": "107220",
    "end": "114180"
  },
  {
    "text": "let's say that we have an organization with 100 Engineers with a 42 waist we",
    "start": "114180",
    "end": "119759"
  },
  {
    "text": "will get the equivalent output of just 58 people right does that sound like a good deal to you",
    "start": "119759",
    "end": "126780"
  },
  {
    "text": "no of course not and I have to admit that that estimate of 58 people is",
    "start": "126780",
    "end": "132060"
  },
  {
    "text": "probably overly optimistic too because",
    "start": "132060",
    "end": "137099"
  },
  {
    "text": "could do something with 58 people it's always going to be cheaper and more efficient than having 100 people do the",
    "start": "137220",
    "end": "143099"
  },
  {
    "text": "same job due to the increases in coordination and communication overhead right so I like to think that that",
    "start": "143099",
    "end": "149580"
  },
  {
    "text": "number of 42 percent it's actually overly optimistic the actual waste from technical debt and bad code is probably",
    "start": "149580",
    "end": "155819"
  },
  {
    "text": "significantly larger but technical debt is not only about the",
    "start": "155819",
    "end": "161099"
  },
  {
    "text": "financial impact there's also an established link between a number of significant code smells",
    "start": "161099",
    "end": "167400"
  },
  {
    "text": "brain classes complex implementations the kind of stuff we're going to look at later in this session",
    "start": "167400",
    "end": "172620"
  },
  {
    "text": "and security vulnerabilities so",
    "start": "172620",
    "end": "179599"
  },
  {
    "text": "if we have a thing a problem technical depth that we as an industry need to deal with and it has a significant",
    "start": "179640",
    "end": "186120"
  },
  {
    "text": "impact not only on our financial bottling line but also in security you would expect technical depth to be",
    "start": "186120",
    "end": "192000"
  },
  {
    "text": "really really high on any decision makers agenda right is that's what's happening",
    "start": "192000",
    "end": "199260"
  },
  {
    "text": "no not really and the sexual research on these two and that research reveals that",
    "start": "199260",
    "end": "206040"
  },
  {
    "text": "we developers we are constantly forced to introduce even more technical debt as companies keep trading code quality for",
    "start": "206040",
    "end": "213060"
  },
  {
    "text": "the short-term gains of new features and I've been thinking about this for a",
    "start": "213060",
    "end": "218340"
  },
  {
    "text": "long time why is that that the case while we're making these trade-offs all the time",
    "start": "218340",
    "end": "223379"
  },
  {
    "text": "and I like to think that it's due to a difference in feedback timing because if we think about it the moment",
    "start": "223379",
    "end": "229500"
  },
  {
    "text": "we take a new feature and we put it in the hands of our users we get the positive reinforcement right we get a",
    "start": "229500",
    "end": "235680"
  },
  {
    "text": "happy user on the other side or at least a less angry one right the thing is we get an immediate reward",
    "start": "235680",
    "end": "241799"
  },
  {
    "text": "by pushing a feature into production technical depth on the other hand",
    "start": "241799",
    "end": "247860"
  },
  {
    "text": "is something that comes with the very delayed feedback right",
    "start": "247860",
    "end": "252900"
  },
  {
    "text": "so technical depth usually means a slow slow death and once we notice the symptoms it might already be too late",
    "start": "252900",
    "end": "259799"
  },
  {
    "text": "and this difference in feedback timing is like an open invitation to a decision-making bias known as hyperbolic",
    "start": "259799",
    "end": "265979"
  },
  {
    "text": "discounting and hyperbolic discounting simply means that we humans we make choices today",
    "start": "265979",
    "end": "272280"
  },
  {
    "text": "that our future selves regret so this is something to keep in the back",
    "start": "272280",
    "end": "277740"
  },
  {
    "text": "of your head as you go to conference party today hyperbolic discounting comes from the",
    "start": "277740",
    "end": "284100"
  },
  {
    "text": "psychology of addiction so it's frequently used to explain different addictions like substance abuse and so",
    "start": "284100",
    "end": "291000"
  },
  {
    "text": "on hyperbolic discounting is also coincidentally the best description I know of how we come as companies keep",
    "start": "291000",
    "end": "298380"
  },
  {
    "text": "taking on technical debt because just like the addicts we keep",
    "start": "298380",
    "end": "303419"
  },
  {
    "text": "trading our future on maintainable code base for the lure of quick fixes and short-term Rewards",
    "start": "303419",
    "end": "310500"
  },
  {
    "text": "or in the words of melcon way there seems somehow that there's never enough time",
    "start": "310500",
    "end": "315900"
  },
  {
    "text": "to do things right but there's always time to do them over and over again",
    "start": "315900",
    "end": "321979"
  },
  {
    "start": "323000",
    "end": "886000"
  },
  {
    "text": "so what can we do about this problem how can we fight the hyperbolic discounting",
    "start": "323699",
    "end": "329220"
  },
  {
    "text": "that keeps driving technical debt to accumulate well I like to think that one of the",
    "start": "329220",
    "end": "334560"
  },
  {
    "text": "main challenges with software is that it's extremely abstract software itself kind of lacks visibility",
    "start": "334560",
    "end": "340639"
  },
  {
    "text": "and consequently there's no way we can take our Software System pull them out inspect them turn them around and see",
    "start": "340639",
    "end": "347340"
  },
  {
    "text": "can we find any technical left here there's no way of doing that and yet I think that's what we actually",
    "start": "347340",
    "end": "353220"
  },
  {
    "text": "need so what I want us to do now is to look into different ways of visualizing",
    "start": "353220",
    "end": "358500"
  },
  {
    "text": "technical left and code quality and by doing that I hope that we can",
    "start": "358500",
    "end": "364500"
  },
  {
    "text": "finally put code quality pretty high on the business agenda where it needs to be",
    "start": "364500",
    "end": "371100"
  },
  {
    "text": "so before we can go down that route we have a challenge to solve",
    "start": "371100",
    "end": "376440"
  },
  {
    "text": "because before we can visualize something we need to know how to actually measure it how to quantify it",
    "start": "376440",
    "end": "382440"
  },
  {
    "text": "and code quality is pretty tricky so I have to admit that personally I",
    "start": "382440",
    "end": "389639"
  },
  {
    "text": "tend to avoid the word code quality because it kind of suggests an absolute whereas reality is way more complicated",
    "start": "389639",
    "end": "396960"
  },
  {
    "text": "and this is very well captured in the following paper that I've taken a lot of inspiration from",
    "start": "396960",
    "end": "403380"
  },
  {
    "text": "paper basically States it's a that from a measurement Theory perspective",
    "start": "403380",
    "end": "409380"
  },
  {
    "text": "the idea that we can measure on multifaceted concept like code quality or code complexity",
    "start": "409380",
    "end": "415020"
  },
  {
    "text": "by using one property it simply doesn't work right",
    "start": "415020",
    "end": "420720"
  },
  {
    "text": "code complexity is a multifaceted concept and we're doomed if we're looking for a single number to quantify",
    "start": "420720",
    "end": "426120"
  },
  {
    "text": "it so what I've done instead is that I've taken a lot of inspiration from the second paragraph here which states that",
    "start": "426120",
    "end": "433020"
  },
  {
    "text": "the most promising approach is to identify different aspects of complexity and measure these separately",
    "start": "433020",
    "end": "439560"
  },
  {
    "text": "and this is a concept I've been working on for the past five six years I've called it code health",
    "start": "439560",
    "end": "446520"
  },
  {
    "text": "and code health is based on exactly that that ID it's an Aggregate and Metric so what we do here is that we sample 25",
    "start": "446520",
    "end": "453060"
  },
  {
    "text": "factors in the source code and these 25 factors are known from research to correlate with increased",
    "start": "453060",
    "end": "460500"
  },
  {
    "text": "increased maintenance efforts so let me show you how this actually works",
    "start": "460500",
    "end": "465660"
  },
  {
    "text": "so first we have the source code because this is a file level metric code of and what we do now is we parse the code",
    "start": "465660",
    "end": "472259"
  },
  {
    "text": "and then we look for the presence of different code smells and these code smells that come at",
    "start": "472259",
    "end": "478319"
  },
  {
    "text": "different levels of abstraction right and I just want to give you a couple of examples I'm not going to go through all",
    "start": "478319",
    "end": "484919"
  },
  {
    "text": "25 factors but at the module level you have Classics like low cohesion",
    "start": "484919",
    "end": "491099"
  },
  {
    "text": "so who's familiar with low cohesion yeah some of you like one tenth may be",
    "start": "491099",
    "end": "496319"
  },
  {
    "text": "cool so low cohesion I like to explain it as a clause taking on too many",
    "start": "496319",
    "end": "501360"
  },
  {
    "text": "responsibilities so we stuff too many responsibilities into the same unit and now that unit is going to be much more",
    "start": "501360",
    "end": "508199"
  },
  {
    "text": "complicated to understand because I need to understand multiple different business Concepts it's also the case that once we stuff",
    "start": "508199",
    "end": "514979"
  },
  {
    "text": "too many responsibilities in a unit we also run the risk of unexpected feature interactions which are some of the worst",
    "start": "514979",
    "end": "521279"
  },
  {
    "text": "bugs you can ever have but of course we can take any problem and make it even worse and one way of",
    "start": "521279",
    "end": "528000"
  },
  {
    "text": "doing that is by turning a class with low cohesion into a brain clause so brain closure classes not only do they",
    "start": "528000",
    "end": "534000"
  },
  {
    "text": "have low cohesion they also tend to be really really large and they contain at least one brain method",
    "start": "534000",
    "end": "539519"
  },
  {
    "text": "and a brain method is a function level smell it's something also known as a gut",
    "start": "539519",
    "end": "544800"
  },
  {
    "text": "function right and this is something we're probably all seen so you know that",
    "start": "544800",
    "end": "550140"
  },
  {
    "text": "massive method because brain methods are always really really long it's overly complicated contains a lot of logic it's",
    "start": "550140",
    "end": "557339"
  },
  {
    "text": "really really hard to follow and it also tends to centralize the behavior of your module so that each time you want to a",
    "start": "557339",
    "end": "563820"
  },
  {
    "text": "extend that feature domain you end up in a brain method and over time it grows worse and worse and worse",
    "start": "563820",
    "end": "571320"
  },
  {
    "text": "then of course at the function level there might also be cop Classics like copy paste the logic and so on and at",
    "start": "571320",
    "end": "577860"
  },
  {
    "text": "the implementation level what I tend to look for are different complexity patterns",
    "start": "577860",
    "end": "583140"
  },
  {
    "text": "and just to give you one example a pattern that I always look for when assessing the code health is deeply",
    "start": "583140",
    "end": "589680"
  },
  {
    "text": "nested logic so deeply that's the logic that's the case we have if statements inside if",
    "start": "589680",
    "end": "595080"
  },
  {
    "text": "statements inside other if statements and then maybe a for Loop for good measure right",
    "start": "595080",
    "end": "601380"
  },
  {
    "text": "the problem with those kind of constructs is that they put a huge cognitive load on us as readers of the",
    "start": "601380",
    "end": "606720"
  },
  {
    "text": "code and consequently there's some pretty good research done on logical systems that show you that roughly 20",
    "start": "606720",
    "end": "612959"
  },
  {
    "text": "percent of all programming mistakes that we do are due to constructs like deepliness the logic right",
    "start": "612959",
    "end": "619860"
  },
  {
    "text": "so we sample these different code health issues we sum them up and use",
    "start": "619860",
    "end": "625860"
  },
  {
    "text": "algorithms to Simply Aggregate and categorize every single piece of code as being either healthy or unhealthy",
    "start": "625860",
    "end": "633060"
  },
  {
    "text": "so only use three different categories here for each piece of code and as always green is good because",
    "start": "633060",
    "end": "639779"
  },
  {
    "text": "green simply means it doesn't mean perfect right but it means healthy code in the sense that as a developer you can",
    "start": "639779",
    "end": "645660"
  },
  {
    "text": "pick up the piece of code and you're very likely to be able to understand it and extend it safely",
    "start": "645660",
    "end": "651180"
  },
  {
    "text": "then you have yellow code and this is code where you have taken on some code smells right so the code starts a bit",
    "start": "651180",
    "end": "656579"
  },
  {
    "text": "hard to understand and unless you're really really careful you might end up in a red category a red category simply signals a massive",
    "start": "656579",
    "end": "664380"
  },
  {
    "text": "amount of technical debt this is going to be code that's going to be really risky to work with",
    "start": "664380",
    "end": "669660"
  },
  {
    "text": "and I'm going to support all of these statements with data in just a minute now before I do that now that we finally",
    "start": "669660",
    "end": "677160"
  },
  {
    "text": "know how we can measure of things such as code alph what we can do now is we can finally visualize it",
    "start": "677160",
    "end": "684000"
  },
  {
    "text": "so what I want to show you here is our code of visualization looks so this is a real world code base this is Ephraim on",
    "start": "684000",
    "end": "690360"
  },
  {
    "text": "open source blockchain implementation and what you see on screen here is roughly 600 000 lines of code organized",
    "start": "690360",
    "end": "697620"
  },
  {
    "text": "into 50 different git repositories so the way you interpret this",
    "start": "697620",
    "end": "703019"
  },
  {
    "text": "visualization is that each one of these circles that I'm hovering over right now each one of those represents the code in",
    "start": "703019",
    "end": "709320"
  },
  {
    "text": "one git repo so if this was our monorepo each one of those top level circuits would simply",
    "start": "709320",
    "end": "715800"
  },
  {
    "text": "represent the top level folder so it's a hierarchical visualization that always follows the structure of",
    "start": "715800",
    "end": "722339"
  },
  {
    "text": "your code it's also interactive so I can click on any one of these circles and I can zoom",
    "start": "722339",
    "end": "728399"
  },
  {
    "text": "in to inspect the details and once I get to the lowest level of detail I see that each file with source",
    "start": "728399",
    "end": "734640"
  },
  {
    "text": "code is visualized as a circle and you see that those bubbles they are different size right so the size of the",
    "start": "734640",
    "end": "741480"
  },
  {
    "text": "circle just reflects the number of lines of code because that kind of gives us a quick idea on how big the potential",
    "start": "741480",
    "end": "747420"
  },
  {
    "text": "problem is the important thing here is the color which visualizes the code Hub category",
    "start": "747420",
    "end": "753660"
  },
  {
    "text": "so we see here two pieces of green and one piece of red code now",
    "start": "753660",
    "end": "759660"
  },
  {
    "text": "I'm a big big fan of visualizations because visualizations tap into one of the most powerful pattern detectors that",
    "start": "759660",
    "end": "766139"
  },
  {
    "text": "we have in the known universe the human brain we are really really good at spotting patterns in visualizations",
    "start": "766139",
    "end": "773639"
  },
  {
    "text": "and that makes it possible for us to very quickly compare different projects maybe different products in our",
    "start": "773639",
    "end": "779760"
  },
  {
    "text": "portfolio right and I want to show you an example here of just two code bases that you might be",
    "start": "779760",
    "end": "784920"
  },
  {
    "text": "familiar with the one to the left is react a UI library from Facebook extremely popular",
    "start": "784920",
    "end": "791459"
  },
  {
    "text": "these days so let's check how many of you are using react today to build your applications",
    "start": "791459",
    "end": "797880"
  },
  {
    "text": "wow so it's like one third of your cool so this is what you have under the hood",
    "start": "797880",
    "end": "803880"
  },
  {
    "text": "now what can we say about react without even looking at the source code well we can see that most of the code tends to",
    "start": "803880",
    "end": "810120"
  },
  {
    "text": "be green or yellow I mean it would say it looks pretty okay but there's one thing that concerns me and that's that",
    "start": "810120",
    "end": "816560"
  },
  {
    "text": "cluster of red code in the reactory concealer package now if I work on react this is important",
    "start": "816560",
    "end": "823680"
  },
  {
    "text": "information to me because it's going to constraint what I can actually do with that system right the moment attach",
    "start": "823680",
    "end": "829079"
  },
  {
    "text": "react reconciler and know that I'm in for some red code so this might be problematic",
    "start": "829079",
    "end": "834839"
  },
  {
    "text": "what I want you to do now is to contrast react to the code base on the right and",
    "start": "834839",
    "end": "840240"
  },
  {
    "text": "that's core CLR the.net runtime from Microsoft and core CLR it's a massive massive code",
    "start": "840240",
    "end": "847320"
  },
  {
    "text": "base so what you see on screen there is more than 8 million lines of code so that's a lot of code",
    "start": "847320",
    "end": "853560"
  },
  {
    "text": "and we can quickly see that core CLR from a code Health perspective looks to be in a little bit worse shape than",
    "start": "853560",
    "end": "859620"
  },
  {
    "text": "react right you see all that red code there it looks like a petri dish gone mad or something",
    "start": "859620",
    "end": "865320"
  },
  {
    "text": "right so the question is now how do I deal with that they found eight million lines",
    "start": "865320",
    "end": "871440"
  },
  {
    "text": "of code and several millions that are red what do I do with that information",
    "start": "871440",
    "end": "877560"
  },
  {
    "text": "towards the end of this session I'm going to show you how I prioritize red code depending on the impact it has on",
    "start": "877560",
    "end": "883800"
  },
  {
    "text": "us but before we go there we need to connect this to something",
    "start": "883800",
    "end": "889079"
  },
  {
    "start": "886000",
    "end": "1142000"
  },
  {
    "text": "that actually means something to the business because being able to draw this green and red colors that's all nice but",
    "start": "889079",
    "end": "895019"
  },
  {
    "text": "if we want to get that tension from our management from our leaders then we need to put some actual numbers on this",
    "start": "895019",
    "end": "901800"
  },
  {
    "text": "and the reason I think this is important is because I've spent more than three decades writing code and during those",
    "start": "901800",
    "end": "908040"
  },
  {
    "text": "years I heard so many people claim that code quality is important everyone in the industry seems to kind of agree on",
    "start": "908040",
    "end": "913380"
  },
  {
    "text": "that yet the moment a deadline hits the fan code quality is the first thing to fly",
    "start": "913380",
    "end": "919380"
  },
  {
    "text": "out of the window right and consequently and one of the reasons",
    "start": "919380",
    "end": "925680"
  },
  {
    "text": "for that is because historically no one has ever established a link between code quality and the business and that makes",
    "start": "925680",
    "end": "932579"
  },
  {
    "text": "it far too easy to dismiss code quality some kind of technical concern so what I want us to do now is to move",
    "start": "932579",
    "end": "939180"
  },
  {
    "text": "away from knowing within quotation marks that kill quality is important to actually knowing it",
    "start": "939180",
    "end": "946199"
  },
  {
    "text": "and to do this me and a colleague Mr Marcus Borg we set out to perform a large-scale study on actual code bases",
    "start": "946199",
    "end": "954420"
  },
  {
    "text": "so what we did here was that we collected data from 39 different companies they gave us access to their source code",
    "start": "954420",
    "end": "960839"
  },
  {
    "text": "and we simply measure the code health of every single module what we also did was that we collected a",
    "start": "960839",
    "end": "967380"
  },
  {
    "text": "lot of data on what are the lead times for implementing a new feature what happens when you do that how many of",
    "start": "967380",
    "end": "973380"
  },
  {
    "text": "those implementations come back as defects and so on I'm going to talk about that very soon",
    "start": "973380",
    "end": "978480"
  },
  {
    "text": "and we also made sure to include a code bases from many many different industry segments because we wanted to make sure",
    "start": "978480",
    "end": "985560"
  },
  {
    "text": "that the findings that we present here that they aren't unique to specific industry like automobile that this is",
    "start": "985560",
    "end": "991680"
  },
  {
    "text": "something that actually generalizes to software in general and for the very same reason we made",
    "start": "991680",
    "end": "997199"
  },
  {
    "text": "sure to include code written in 14 different programming languages so we had code in C plus plus Java go",
    "start": "997199",
    "end": "1004639"
  },
  {
    "text": "JavaScript python all the mainstream languages because again we wanted to make sure that this is something that's",
    "start": "1004639",
    "end": "1010220"
  },
  {
    "text": "generalizes and before I go into the results I want",
    "start": "1010220",
    "end": "1015680"
  },
  {
    "text": "to point out that actual paper is peer-reviewed was presented at the International",
    "start": "1015680",
    "end": "1020720"
  },
  {
    "text": "Conference on technical debt so what I'm going to show you here is that all these findings or statistical",
    "start": "1020720",
    "end": "1027020"
  },
  {
    "text": "are significant and that basically means that there seems to be some real signal in the data it's not just a statistical",
    "start": "1027020",
    "end": "1032780"
  },
  {
    "text": "fluke all right before looking at the results I want to make sure that we all know what we see",
    "start": "1032780",
    "end": "1041120"
  },
  {
    "text": "so to assess the business impact of code quality we simply wanted to measure",
    "start": "1041120",
    "end": "1046938"
  },
  {
    "text": "what's the time and development and how is that impacted by the various code of categories",
    "start": "1046939",
    "end": "1052040"
  },
  {
    "text": "and what we also wanted to do is we wanted to avoid plotting any administrative overhead on the",
    "start": "1052040",
    "end": "1057380"
  },
  {
    "text": "developers at those companies that participate in the study so we decided to try to measure the time",
    "start": "1057380",
    "end": "1063260"
  },
  {
    "text": "and development automatically and the way we did it was by piecing together gyro data with Version Control",
    "start": "1063260",
    "end": "1069860"
  },
  {
    "text": "Data from git and I just want to walk you through the algorithm very quickly",
    "start": "1069860",
    "end": "1075559"
  },
  {
    "text": "so basically what we did was that the moment you as a developer take a card in Gyra and you pull it on in progress",
    "start": "1075559",
    "end": "1081140"
  },
  {
    "text": "State that's where we start the clock and then at some point you do a commit referencing that card and that's where",
    "start": "1081140",
    "end": "1087559"
  },
  {
    "text": "we stop the clock and if your story is done now then your time and development was time between the card movement in",
    "start": "1087559",
    "end": "1093620"
  },
  {
    "text": "progress to the first commit simple right of course in reality many stories",
    "start": "1093620",
    "end": "1100100"
  },
  {
    "text": "require multiple commits to multiple files so what we do in that case is that we simply continue to calculate the time",
    "start": "1100100",
    "end": "1106700"
  },
  {
    "text": "between commits and at the end we simply piece them together",
    "start": "1106700",
    "end": "1111919"
  },
  {
    "text": "and that meant that by following this algorithm what we had now was that we had a massive data set containing um",
    "start": "1111919",
    "end": "1118160"
  },
  {
    "text": "tens of thousands of modules each one with the known codehouse score each one with the time and development for all",
    "start": "1118160",
    "end": "1124520"
  },
  {
    "text": "the features that attach that file and since we're gyro we could also figure out if it was a bug fix or if it was a",
    "start": "1124520",
    "end": "1131600"
  },
  {
    "text": "feature did I manage to explain that cool some of you are nodding I really",
    "start": "1131600",
    "end": "1137360"
  },
  {
    "text": "like that good good so what did we find out",
    "start": "1137360",
    "end": "1143600"
  },
  {
    "start": "1142000",
    "end": "1693000"
  },
  {
    "text": "does code quality actually matter it does otherwise this would be a very",
    "start": "1143600",
    "end": "1149539"
  },
  {
    "text": "short talk so the first thing we did was that we",
    "start": "1149539",
    "end": "1155240"
  },
  {
    "text": "looked at what's the average time it takes to implement a feature or fixing a bug depending on code Health category",
    "start": "1155240",
    "end": "1162620"
  },
  {
    "text": "and what we found here is pretty interesting we found that implementing a feature in green code is",
    "start": "1162620",
    "end": "1168559"
  },
  {
    "text": "more than twice as quick as implementing a similar scope feature in redcode",
    "start": "1168559",
    "end": "1174200"
  },
  {
    "text": "why is this relevant to a business well this basically represents speed to",
    "start": "1174200",
    "end": "1179840"
  },
  {
    "text": "Market so if we as a company would have read code and we can add a new capability in",
    "start": "1179840",
    "end": "1187039"
  },
  {
    "text": "let's say two months and our competitors having green code they could basically get exactly the same thing in less than",
    "start": "1187039",
    "end": "1193460"
  },
  {
    "text": "a month it's going to be virtually impossible for us to keep up so already here we can see that code",
    "start": "1193460",
    "end": "1200059"
  },
  {
    "text": "quality is vital to a business right it's speed to Market but I also have to admit that",
    "start": "1200059",
    "end": "1207380"
  },
  {
    "text": "these results that didn't really surprise me this is pretty much what I would have expected after spending all",
    "start": "1207380",
    "end": "1213020"
  },
  {
    "text": "that time writing code myself what did surprise me though was the second thing we looked at",
    "start": "1213020",
    "end": "1220100"
  },
  {
    "text": "so what we did know was that we kind of acknowledged that averages can be a little bit misleading",
    "start": "1220100",
    "end": "1226940"
  },
  {
    "text": "and actually hide the real problem with red code so what we did in the next part of the",
    "start": "1226940",
    "end": "1232820"
  },
  {
    "text": "study was that instead of looking at the averages we looked at what's the longest time it can take to implement something",
    "start": "1232820",
    "end": "1238520"
  },
  {
    "text": "depending on code of category right so we looked more at the variation than the averages",
    "start": "1238520",
    "end": "1244160"
  },
  {
    "text": "and what we found here is pretty interesting now first of all we see that for green",
    "start": "1244160",
    "end": "1249980"
  },
  {
    "text": "code the actual numbers there are pretty close to the average what does that mean well it simply means that",
    "start": "1249980",
    "end": "1256340"
  },
  {
    "text": "making a code change to Green code is pretty predictable it will take you roughly the same time each time you do",
    "start": "1256340",
    "end": "1262880"
  },
  {
    "text": "it but we see that for red code that relationship no longer holds in fact",
    "start": "1262880",
    "end": "1268640"
  },
  {
    "text": "changes to Red code can take up to an order of magnitude longer than green code",
    "start": "1268640",
    "end": "1274700"
  },
  {
    "text": "so how is this relevant to a business well I like to say that what this",
    "start": "1274700",
    "end": "1280100"
  },
  {
    "text": "represents is actually uncertainty and trust me on this one within software",
    "start": "1280100",
    "end": "1285260"
  },
  {
    "text": "no one likes uncertainty right so I'm currently working as a CTO",
    "start": "1285260",
    "end": "1290360"
  },
  {
    "text": "and if we would have read code that would",
    "start": "1290360",
    "end": "1296120"
  },
  {
    "text": "would put me in problem because now let's say I promise something to a customer maybe I promise something to you that yeah you know we're going to",
    "start": "1296120",
    "end": "1302299"
  },
  {
    "text": "have this feature ready in a month but if my code is red I can make no such promise because it could actually take",
    "start": "1302299",
    "end": "1308720"
  },
  {
    "text": "nine or even 10 months so at the end of the day I would look really really bad",
    "start": "1308720",
    "end": "1314000"
  },
  {
    "text": "not only that that was put a huge stress on the whole organization if I instead take on my developer hat I",
    "start": "1314000",
    "end": "1321440"
  },
  {
    "text": "also dislike red code I dislike uncertainty because uncertainty is what's causing me stress over time and",
    "start": "1321440",
    "end": "1328280"
  },
  {
    "text": "missed deadlines now last thing I want to show you with the",
    "start": "1328280",
    "end": "1335360"
  },
  {
    "text": "from this study is that since we had the gr access and we collected this data on",
    "start": "1335360",
    "end": "1340580"
  },
  {
    "text": "the defects and defect densities that also made it possible to establish a link between code health and correctness",
    "start": "1340580",
    "end": "1348440"
  },
  {
    "text": "so what we did here was that we looked at the number of defects depending on codeoff category and what we found out",
    "start": "1348440",
    "end": "1354380"
  },
  {
    "text": "was that red code can have an average 15 times more defects than green code",
    "start": "1354380",
    "end": "1360380"
  },
  {
    "text": "is this relevant to a business I like to think so for two reasons",
    "start": "1360380",
    "end": "1365539"
  },
  {
    "text": "first of all if you have red code all those defects they are going to impact the whole product maturity",
    "start": "1365539",
    "end": "1371480"
  },
  {
    "text": "experience they're going to impact your customer safe section and that's important enough",
    "start": "1371480",
    "end": "1377780"
  },
  {
    "text": "the other problem with the defect density of red code is that what's going to happen with those defects",
    "start": "1377780",
    "end": "1384380"
  },
  {
    "text": "you know that just like in the Stephen King movie they are going to come back and they're going to come back in the",
    "start": "1384380",
    "end": "1390500"
  },
  {
    "text": "shape of unplanned work and as Jin Kim told us unplanned work is the silent killer of all IT projects",
    "start": "1390500",
    "end": "1399080"
  },
  {
    "text": "and I've seen companies that I worked with they have like 60 70 percent of their work day being",
    "start": "1399080",
    "end": "1406580"
  },
  {
    "text": "unplanned work and I can imagine how stressful that is it's going to be virtually impossible to keep any",
    "start": "1406580",
    "end": "1411679"
  },
  {
    "text": "Commitment if 60 of your work is something you cannot anticipate up front",
    "start": "1411679",
    "end": "1417380"
  },
  {
    "text": "so red code has severe consequences for both speed to Market as well as the quality of what gets delivered",
    "start": "1417380",
    "end": "1424640"
  },
  {
    "text": "but how does it impact us as Developers",
    "start": "1424640",
    "end": "1429880"
  },
  {
    "text": "well I like to recommend a book to you this is a wonderful wonderful book it's called the rethinking productivity in",
    "start": "1429980",
    "end": "1435980"
  },
  {
    "text": "software engineering it's a collection of research papers and there's one paper in here that I",
    "start": "1435980",
    "end": "1442340"
  },
  {
    "text": "enjoyed a little bit extra and that's a paper that looked at developer happiness",
    "start": "1442340",
    "end": "1448520"
  },
  {
    "text": "because guess what happy developers seem to be productive Developers",
    "start": "1448520",
    "end": "1453980"
  },
  {
    "text": "right not a big surprise we're humans too but what's so interesting is that in",
    "start": "1453980",
    "end": "1459559"
  },
  {
    "text": "this paper they actually looked at what makes us developers unhappy and what what I want to show you now are",
    "start": "1459559",
    "end": "1465919"
  },
  {
    "text": "the top three reasons for unhappiness amongst Developers",
    "start": "1465919",
    "end": "1470620"
  },
  {
    "text": "reason number one we developers we strongly dislike to being stuck in",
    "start": "1471679",
    "end": "1477140"
  },
  {
    "text": "problem solving and given what we just saw about red code it's very easy to see how this",
    "start": "1477140",
    "end": "1482240"
  },
  {
    "text": "could happen so let's imagine that we do a daily stand-up or something like that right",
    "start": "1482240",
    "end": "1488240"
  },
  {
    "text": "and we hear that hey there was a crash in production we're really really we need to prioritize this and fix it you",
    "start": "1488240",
    "end": "1494480"
  },
  {
    "text": "jump on the problem because you're familiar with this particular area so you volunteer I'm going to fix it I'm going to investigate it",
    "start": "1494480",
    "end": "1500600"
  },
  {
    "text": "and it's probably going to be a quick fix right let's say you can wrap it up in two hours it seems like a simple",
    "start": "1500600",
    "end": "1506120"
  },
  {
    "text": "problem however your investigation leads into red code and once you're in red code as we have",
    "start": "1506120",
    "end": "1512900"
  },
  {
    "text": "seen all bets are off so pretty soon you're going to start to feel the time",
    "start": "1512900",
    "end": "1518900"
  },
  {
    "text": "pressure right and that time pressure is going to spread to the whole organization because hey you have a",
    "start": "1518900",
    "end": "1525020"
  },
  {
    "text": "crush in production right and you thought you could fix it in a couple of hours but now it's already been 10 days",
    "start": "1525020",
    "end": "1531020"
  },
  {
    "text": "so it's going to be extremely stressful and that's probably one of the main reasons for number three here that we",
    "start": "1531020",
    "end": "1537260"
  },
  {
    "text": "developers we strongly dislike to work with bad code in fact there's this wonderful quote that we developers we",
    "start": "1537260",
    "end": "1543440"
  },
  {
    "text": "suffer tremendously we have to work with code bad code that should have been avoided in the first place",
    "start": "1543440",
    "end": "1550159"
  },
  {
    "text": "and that's like the textbook definition of technical debt",
    "start": "1550159",
    "end": "1555220"
  },
  {
    "text": "now now that we have covered a theory and we know the costs and risk of red code",
    "start": "1556460",
    "end": "1563840"
  },
  {
    "text": "how can we use this data how can we put it into our daily workflows",
    "start": "1563840",
    "end": "1569659"
  },
  {
    "text": "well there are a couple of use cases I've seen work really well that I would like to share with you the first use",
    "start": "1569659",
    "end": "1575120"
  },
  {
    "text": "case is that I've one that I think is extremely important and that is the case that code quality as we have seen it's",
    "start": "1575120",
    "end": "1581720"
  },
  {
    "text": "going to constrain the business it's going to constraint what you can do with the product and one of the big wins of",
    "start": "1581720",
    "end": "1586820"
  },
  {
    "text": "having this data and in particular if we manage to visualize it like this is that now we can actually have everyone not",
    "start": "1586820",
    "end": "1593900"
  },
  {
    "text": "only we Engineers but also product people and our managers everyone can have the same situational awareness of",
    "start": "1593900",
    "end": "1600559"
  },
  {
    "text": "what the system looks like where the strong parts are and where the weak parts are",
    "start": "1600559",
    "end": "1606080"
  },
  {
    "text": "and by doing that we can finally start to fight hyperbolic discounting because the way you fight",
    "start": "1606080",
    "end": "1612919"
  },
  {
    "text": "hyperbolic discounting is by priming decision makers to think about future risks because only then are they going",
    "start": "1612919",
    "end": "1619760"
  },
  {
    "text": "to act upon them right so now you know if you this happens to be your code base and you're planning to do some massive",
    "start": "1619760",
    "end": "1627500"
  },
  {
    "text": "investment into let's say react reconciler you have 15 significant features planned I want to see that you",
    "start": "1627500",
    "end": "1632539"
  },
  {
    "text": "have all this red code then you can start to think about the risk of that uncertainty inherent in",
    "start": "1632539",
    "end": "1637580"
  },
  {
    "text": "that code right that's going to Prime you to make the right decisions",
    "start": "1637580",
    "end": "1642820"
  },
  {
    "text": "now finally and the thing I personally like the most about this data is that it",
    "start": "1643039",
    "end": "1649039"
  },
  {
    "text": "makes it possible for us finally to build a business case for improvements and logical refactorings",
    "start": "1649039",
    "end": "1654799"
  },
  {
    "text": "because refactorings can now actually come with the business expectation so just to give you an example let's say",
    "start": "1654799",
    "end": "1660919"
  },
  {
    "text": "that you identify some code here that's red what you can do now is that you can actually promise that you know if we",
    "start": "1660919",
    "end": "1667700"
  },
  {
    "text": "take this red code and we make it green by refactoring what we're going to do is that we're going to be able to move",
    "start": "1667700",
    "end": "1673880"
  },
  {
    "text": "twice as quick in that part of the code in the future and you see you have 10 things planned on your roadmap that",
    "start": "1673880",
    "end": "1678919"
  },
  {
    "text": "touches that area as a bonus you're also going to reduce the uncertainty with an order of",
    "start": "1678919",
    "end": "1684440"
  },
  {
    "text": "magnitude and you're going to have fewer defects it's going to be pretty hard to say no to don't you think",
    "start": "1684440",
    "end": "1692200"
  },
  {
    "start": "1693000",
    "end": "2347000"
  },
  {
    "text": "so with that covered I still have a couple of minutes to go so what I like to do now is to return to this challenge",
    "start": "1693020",
    "end": "1699440"
  },
  {
    "text": "that I kind of just skimmed over earlier and that's the challenge of massive",
    "start": "1699440",
    "end": "1705200"
  },
  {
    "text": "amounts of red code I like to illustrate that in core CLR",
    "start": "1705200",
    "end": "1712039"
  },
  {
    "text": "so core CLR just to repeat that it's more than 8 million lines of code and if",
    "start": "1712039",
    "end": "1717919"
  },
  {
    "text": "we sum up just a red areas of it we probably have like two two and a half million lines of red code",
    "start": "1717919",
    "end": "1725840"
  },
  {
    "text": "I mean how do you deal with that amount of risk do you just refactor all that",
    "start": "1725840",
    "end": "1730880"
  },
  {
    "text": "code how long would it take three years and that's the problem right we always",
    "start": "1730880",
    "end": "1736460"
  },
  {
    "text": "need to balance improvements with delivering new stuff because if we stop doing features for a couple of years you",
    "start": "1736460",
    "end": "1742760"
  },
  {
    "text": "would probably be out of business you would be Netscape and that's a good thing",
    "start": "1742760",
    "end": "1748460"
  },
  {
    "text": "so what can we do here well we can take inspiration from another thing that I",
    "start": "1748460",
    "end": "1754340"
  },
  {
    "text": "call behavioral code analysis and this is something I wrote about in software design x-rays a behavior code",
    "start": "1754340",
    "end": "1760640"
  },
  {
    "text": "analysis basically means that we approach code from the people side from behavioral side",
    "start": "1760640",
    "end": "1766940"
  },
  {
    "text": "and in a behavior code analysis the code itself if it's red or green that's important",
    "start": "1766940",
    "end": "1771980"
  },
  {
    "text": "but it's even more important to understand how we as a development organization interact with the cold code",
    "start": "1771980",
    "end": "1779000"
  },
  {
    "text": "we're building and to pull this off the first thing we",
    "start": "1779000",
    "end": "1784340"
  },
  {
    "text": "need is a behavioral data source so how can we track developer behavior",
    "start": "1784340",
    "end": "1789500"
  },
  {
    "text": "that sounds a bit scary doesn't it but it's not because you're already doing it you're probably just not",
    "start": "1789500",
    "end": "1795860"
  },
  {
    "text": "thinking about it as behavioral data because what I'm talking about is this Version Control git",
    "start": "1795860",
    "end": "1802940"
  },
  {
    "text": "and I kind of find it fascinating that over decades we as developers we have",
    "start": "1802940",
    "end": "1808039"
  },
  {
    "text": "used used Version Control more or less as an overly complicated backup system then occasionally as a calibration tool",
    "start": "1808039",
    "end": "1814340"
  },
  {
    "text": "but by doing so we have built up this absolutely wonderful data source over how our system evolved",
    "start": "1814340",
    "end": "1821419"
  },
  {
    "text": "and what I like in particular when it comes to technical debt is that birth control data gives us a Time Dimension",
    "start": "1821419",
    "end": "1826940"
  },
  {
    "text": "into our code base so we can figure out when we when we worked on each piece of code and",
    "start": "1826940",
    "end": "1832820"
  },
  {
    "text": "how frequently and this is data that we can use to prioritize technical debt",
    "start": "1832820",
    "end": "1839120"
  },
  {
    "text": "so let me show you how that works so what you see on screen here is a different visualization of course LR",
    "start": "1839120",
    "end": "1845600"
  },
  {
    "text": "it's the same visualization style right so each one of these bubbles they still represent a particular file in that",
    "start": "1845600",
    "end": "1851179"
  },
  {
    "text": "system the only difference is the color the caustic colors now reflect the",
    "start": "1851179",
    "end": "1856580"
  },
  {
    "text": "change frequency of that code that is how many commits have we done to that piece of code over the past year",
    "start": "1856580",
    "end": "1863179"
  },
  {
    "text": "and what's so interesting about the this change frequency it's something I call hotspots because by counting the change",
    "start": "1863179",
    "end": "1869600"
  },
  {
    "text": "frequency of each piece of code we can detect whether development hotspots are the parts of the code where we spend",
    "start": "1869600",
    "end": "1875720"
  },
  {
    "text": "most of our time and that in turn makes it possible to draw the distinction between low",
    "start": "1875720",
    "end": "1882380"
  },
  {
    "text": "interest technical depth I mean you see an example here I'm probably hiding it but you see an example here to your",
    "start": "1882380",
    "end": "1888020"
  },
  {
    "text": "right so you have a large chunk of code there several million lots of code and we see that there's virtually no development",
    "start": "1888020",
    "end": "1894140"
  },
  {
    "text": "activity in that part of the code so that means that even if we have red code there it that might be a future",
    "start": "1894140",
    "end": "1900679"
  },
  {
    "text": "risk that we want to know about but it's probably not the Urgent problem because where that code seems to be stable we're",
    "start": "1900679",
    "end": "1907340"
  },
  {
    "text": "virtually not doing any development work in that part with code on the other hand we see a cluster of",
    "start": "1907340",
    "end": "1912740"
  },
  {
    "text": "red modules here to the left and any technical depth in that part of",
    "start": "1912740",
    "end": "1918080"
  },
  {
    "text": "the code is going to be high interest technical debt because each one of those changes that we do is going to be more risky and expensive",
    "start": "1918080",
    "end": "1926799"
  },
  {
    "text": "now hotspots help a lot in kind of narrowing down a pretty big system to a few actionable starting points but",
    "start": "1927500",
    "end": "1934640"
  },
  {
    "text": "sometimes not even hotspots are enough ideas to show you that example if you look at this particular hotspot in",
    "start": "1934640",
    "end": "1941240"
  },
  {
    "text": "course your lower it's a C plus plus file called gentry.cpp and it consists",
    "start": "1941240",
    "end": "1947000"
  },
  {
    "text": "of 14 000 lines of code not only that it's 14 000 lines of C",
    "start": "1947000",
    "end": "1952820"
  },
  {
    "text": "plus plus that looks like this so let me ask you how many of you are C",
    "start": "1952820",
    "end": "1959000"
  },
  {
    "text": "plus plus Developers not that many of us are couple so I also",
    "start": "1959000",
    "end": "1964039"
  },
  {
    "text": "did say plus plus I used to do C plus plus for 10 years and I know what the rest of your thinking those are 10 years I never get",
    "start": "1964039",
    "end": "1970520"
  },
  {
    "text": "back but what I mean with that is that I have a lot of respect for code that looks",
    "start": "1970520",
    "end": "1976820"
  },
  {
    "text": "like this and I'm certainly not jealous at the archaeologists of the future right this is going to be harder not to",
    "start": "1976820",
    "end": "1983179"
  },
  {
    "text": "correct than even the hieroglyphs and imagine having 14 000 lines of code like that where do you start it's going",
    "start": "1983179",
    "end": "1989899"
  },
  {
    "text": "to take me months to refactor that it's going to be a huge risk so when I come across these really complex hotspots",
    "start": "1989899",
    "end": "1995299"
  },
  {
    "text": "what I do is I use a technique called x-ray so a hotspot x-ray works like this that",
    "start": "1995299",
    "end": "2001419"
  },
  {
    "text": "you take each one of those modules you parse them into separate functions then you look at your git log and see where",
    "start": "2001419",
    "end": "2007840"
  },
  {
    "text": "do each commit hit over time and you sum them up so that you get hotspots at the function level",
    "start": "2007840",
    "end": "2014620"
  },
  {
    "text": "and this is something we can use to find an actionable starting point for our refactorings without taking on a huge",
    "start": "2014620",
    "end": "2020620"
  },
  {
    "text": "risk so let's look at the data from gentry.cpp",
    "start": "2020620",
    "end": "2025779"
  },
  {
    "text": "so here's the actual x-ray analysis and what we see here is that the number one hotspot at the function level is a",
    "start": "2025779",
    "end": "2033580"
  },
  {
    "text": "function called GT clone expression and we can see the GT clone expression",
    "start": "2033580",
    "end": "2038799"
  },
  {
    "text": "has been modified 42 times just over the past year so like if we have any technical depth",
    "start": "2038799",
    "end": "2044200"
  },
  {
    "text": "in that function like almost once a week some developers impacted and unhappy due to that code right",
    "start": "2044200",
    "end": "2051700"
  },
  {
    "text": "and we also see in the column to the right called cyclomatic complexity",
    "start": "2051700",
    "end": "2057878"
  },
  {
    "text": "so before I go into that how many of you are familiar with cyclomatic complexity it's like plenty of maybe half so very",
    "start": "2057879",
    "end": "2065138"
  },
  {
    "text": "quick summary cyclomatic complexity is one of these really really old complexity measures from the 1970s and",
    "start": "2065139",
    "end": "2072280"
  },
  {
    "text": "the way it works is basically that it's a function level metric so what you do is you count the number of logical paths",
    "start": "2072280",
    "end": "2079358"
  },
  {
    "text": "through that function meaning that each time you can come across an if statement plus one each time we have a loop plus",
    "start": "2079359",
    "end": "2084700"
  },
  {
    "text": "one and so on right then you sum them up and for reference",
    "start": "2084700",
    "end": "2089980"
  },
  {
    "text": "the original paper defines very high complexity as being 15.",
    "start": "2089980",
    "end": "2096580"
  },
  {
    "text": "here we have almost 10 times that right and the reason I personally use",
    "start": "2096580",
    "end": "2101980"
  },
  {
    "text": "cyclomatic complexity because it's not a particular good complexity number but it's very good at one thing it's a very",
    "start": "2101980",
    "end": "2107980"
  },
  {
    "text": "good estimate on the minimum number of unit tests you would need to cover just that function",
    "start": "2107980",
    "end": "2114339"
  },
  {
    "text": "so 112 unit tests that sure says something right what's interesting is that if we look in",
    "start": "2114339",
    "end": "2120339"
  },
  {
    "text": "the column in the middle we see that we have roughly 500 lines of code at 500 lines of code for a single function",
    "start": "2120339",
    "end": "2126460"
  },
  {
    "text": "that's a lot isn't it it is it is but 500 lines of code is much less than 14",
    "start": "2126460",
    "end": "2133359"
  },
  {
    "text": "000 lines of code which was size of a total hotspot and 500 lines of code is definitely less",
    "start": "2133359",
    "end": "2138940"
  },
  {
    "text": "than 8 million lines of code which was size of a total code base so more important we're now at the point",
    "start": "2138940",
    "end": "2144760"
  },
  {
    "text": "where we can do a focused refactoring Based on data from how we as an organization interact with the code will",
    "start": "2144760",
    "end": "2150940"
  },
  {
    "text": "building so at the end of the day I like to view",
    "start": "2150940",
    "end": "2155980"
  },
  {
    "text": "hotspots ascending a positive message hotspots explain why we don't have to fix all our technical debt",
    "start": "2155980",
    "end": "2162820"
  },
  {
    "text": "and what I'm going to show you now is probably the most important graph in this talk because what you see here on the x-axis",
    "start": "2162820",
    "end": "2169359"
  },
  {
    "text": "is each file in the system and they are sorted according to the strange frequency that is how many commits have",
    "start": "2169359",
    "end": "2174760"
  },
  {
    "text": "you done to that file and the number of commits is what you see on the y-axis and as you see here",
    "start": "2174760",
    "end": "2180400"
  },
  {
    "text": "this particular code base that distribution shows a power law distribution",
    "start": "2180400",
    "end": "2185560"
  },
  {
    "text": "and this is not something that's unique to core CLR or react this is something I",
    "start": "2185560",
    "end": "2190599"
  },
  {
    "text": "have found in every single code base that I've ever analyzed and I probably analyzed around three 400 code bases by",
    "start": "2190599",
    "end": "2196240"
  },
  {
    "text": "now so this seems to be the way software evolves and this is important to us because",
    "start": "2196240",
    "end": "2201339"
  },
  {
    "text": "again what it means is that most of our code is going to be in the long tail so that's code that's rarely if ever",
    "start": "2201339",
    "end": "2206980"
  },
  {
    "text": "touched and that's the part of the code where we actually can live with a certain degree of technical depth",
    "start": "2206980",
    "end": "2214720"
  },
  {
    "text": "the hot spots on the other hand are at the head of the curve those are the parts of the code where we have so much",
    "start": "2214720",
    "end": "2220000"
  },
  {
    "text": "development activity that even a minor amount of technical adapt or code qualitations are going to be really really expensive right",
    "start": "2220000",
    "end": "2228400"
  },
  {
    "text": "so using hotspots you can usually take a large system and narrow it down to maybe just two three percent of the total code",
    "start": "2228400",
    "end": "2234940"
  },
  {
    "text": "base and that's the part of the code where it's really really important for to have green code",
    "start": "2234940",
    "end": "2242400"
  },
  {
    "text": "so what I want to show you in this session was that to address this massive challenge of",
    "start": "2242560",
    "end": "2249940"
  },
  {
    "text": "technical depth we actually need two different representations two different views on the problem",
    "start": "2249940",
    "end": "2255460"
  },
  {
    "text": "first of all we need some kind of quality Dimension that tells us how severe is the particular problem",
    "start": "2255460",
    "end": "2261160"
  },
  {
    "text": "but we cannot just use static data from the source code we also need to complement",
    "start": "2261160",
    "end": "2267760"
  },
  {
    "text": "that with the impact and what I want to show you today is how code health and hot spots go together to",
    "start": "2267760",
    "end": "2275260"
  },
  {
    "text": "help us identify High interest technical debt",
    "start": "2275260",
    "end": "2279838"
  },
  {
    "text": "and about the code red findings during all those years I spent in the",
    "start": "2281200",
    "end": "2286240"
  },
  {
    "text": "software industry I had so many people that have been telling me no no we don't have time to refactor no we",
    "start": "2286240",
    "end": "2293980"
  },
  {
    "text": "don't have time to automate tests no we don't have time to rethink our architecture",
    "start": "2293980",
    "end": "2299980"
  },
  {
    "text": "and somehow a lot of people in the industry have this this ID that there is some kind of",
    "start": "2299980",
    "end": "2306040"
  },
  {
    "text": "trade-off between speed and quality right but what we find in the code red",
    "start": "2306040",
    "end": "2311800"
  },
  {
    "text": "research and this pretty much Echoes the message from Dora is that there doesn't",
    "start": "2311800",
    "end": "2317440"
  },
  {
    "text": "seem to be any such trade-off in fact what our data indicate is that the contrary seems to be true in order",
    "start": "2317440",
    "end": "2323680"
  },
  {
    "text": "to go fast we also need to go really really well and I like to think that",
    "start": "2323680",
    "end": "2330220"
  },
  {
    "text": "given that in a healthy code base you can have twice the speed when implementing new features of fixing bugs",
    "start": "2330220",
    "end": "2335740"
  },
  {
    "text": "you can reduce uncertainty with an order of magnitude and you can have 15 times fewer defects I like to think that the",
    "start": "2335740",
    "end": "2341500"
  },
  {
    "text": "business impact of code quality is going to be unmistakably clear",
    "start": "2341500",
    "end": "2347280"
  },
  {
    "start": "2347000",
    "end": "2425000"
  },
  {
    "text": "now I hope that this session has inspired you to dive deeper into this topic and when it comes to the code red",
    "start": "2348280",
    "end": "2354520"
  },
  {
    "text": "papers to actually two papers so the first is a white paper that's a little bit more accessible includes all the",
    "start": "2354520",
    "end": "2361240"
  },
  {
    "text": "data from this talk the second one is the actual research paper it's also publicly available",
    "start": "2361240",
    "end": "2367000"
  },
  {
    "text": "contains all the details and how we handle all the possible biases in the data",
    "start": "2367000",
    "end": "2372339"
  },
  {
    "text": "and finally the tool I've been using to do the research and to do these visualizations is code scene",
    "start": "2372339",
    "end": "2379300"
  },
  {
    "text": "so if you're interested in checking out what color your own code has then please go to codeson.com and try it out",
    "start": "2379300",
    "end": "2386680"
  },
  {
    "text": "now if you want to read on hotspots and all these other Behavior code analysis techniques then I would recommend checking out software design x-rays",
    "start": "2386680",
    "end": "2394359"
  },
  {
    "text": "I'll be hanging around for the rest of the day and be happy to mingle with you and answer any questions you have and",
    "start": "2394359",
    "end": "2400300"
  },
  {
    "text": "also be happy to take questions now before I do that I really really just want to take this opportunity and say",
    "start": "2400300",
    "end": "2406599"
  },
  {
    "text": "thanks a lot for listening to me and may the code be with you thank you",
    "start": "2406599",
    "end": "2413700"
  },
  {
    "text": "does anyone have any questions for Adam hands everywhere okay",
    "start": "2418300",
    "end": "2424119"
  },
  {
    "text": "fantastic talk Adam thank you do you have any evidence that compared",
    "start": "2424119",
    "end": "2430180"
  },
  {
    "start": "2425000",
    "end": "3047000"
  },
  {
    "text": "to code Health that uh less healthy code gets even less healthy over time",
    "start": "2430180",
    "end": "2437380"
  },
  {
    "text": "and is that Dennis is does that then mean it's not the code it's the",
    "start": "2437380",
    "end": "2442599"
  },
  {
    "text": "developers that are causing the problem that's uh super interesting so I am",
    "start": "2442599",
    "end": "2450640"
  },
  {
    "text": "remember I read a really really good book A couple of years ago called a pragmatic programmer",
    "start": "2450640",
    "end": "2456160"
  },
  {
    "text": "and there was this um ID with a broken window so how many of you are familiar with the",
    "start": "2456160",
    "end": "2462160"
  },
  {
    "text": "Broken Window Theory yes it's pretty cool and that's something I see in code as well and actually have some data for",
    "start": "2462160",
    "end": "2467619"
  },
  {
    "text": "that I wrote a lot about it in softwares and x-rays that once code turns bad it kind of just",
    "start": "2467619",
    "end": "2473800"
  },
  {
    "text": "continues on that slope and code deteriorates much more frequently than it's being refactored",
    "start": "2473800",
    "end": "2481000"
  },
  {
    "text": "and one of the things that surprised me a lot with technical depth was that I always had this idea that code starts",
    "start": "2481000",
    "end": "2486460"
  },
  {
    "text": "out pretty pretty good but then something happens and that something is usually a deadline right",
    "start": "2486460",
    "end": "2493240"
  },
  {
    "text": "and we take on technical depth and from then there it's downhill but what the research tells us is that",
    "start": "2493240",
    "end": "2499540"
  },
  {
    "text": "technical debt usually starts already in the very first iteration on that piece",
    "start": "2499540",
    "end": "2504579"
  },
  {
    "text": "of code so that's why a lot of my focus these days is to kind of prevent",
    "start": "2504579",
    "end": "2510940"
  },
  {
    "text": "present us all the feedback as possible because I think that the earlier we can catch these problems the easier it",
    "start": "2510940",
    "end": "2516520"
  },
  {
    "text": "distract upon them because once the technical depth there is there it's going to be extremely challenging to",
    "start": "2516520",
    "end": "2521560"
  },
  {
    "text": "reverse that trend and for the second part of your question is it a problem with the programmers",
    "start": "2521560",
    "end": "2530680"
  },
  {
    "text": "I mean one thing I'm looking into right now because we want to do a follow-up study",
    "start": "2530680",
    "end": "2536260"
  },
  {
    "text": "to the code red paper because what I'm in particular interested in understanding is",
    "start": "2536260",
    "end": "2542320"
  },
  {
    "text": "what about this uncertainty red code can you remember that an order of magnitude longer uncertainty",
    "start": "2542320",
    "end": "2548380"
  },
  {
    "text": "what I think part of that cost comes from is sexual and onboarding cost",
    "start": "2548380",
    "end": "2553780"
  },
  {
    "text": "because understanding existing code is extremely challenging understanding existing code that we didn't write",
    "start": "2553780",
    "end": "2559240"
  },
  {
    "text": "ourselves is one of the hardest tasks Humanity I've ever attempted and I do think that a lot of that",
    "start": "2559240",
    "end": "2565000"
  },
  {
    "text": "uncertainties due to the fact that different people are doing their work because we're probably all seeing this",
    "start": "2565000",
    "end": "2570940"
  },
  {
    "text": "code basis right we have some code that's virtually impossible for anyone to understand except the person who",
    "start": "2570940",
    "end": "2576280"
  },
  {
    "text": "wrote it right so that that person becomes a bottleneck each time they want to fix the code",
    "start": "2576280",
    "end": "2581380"
  },
  {
    "text": "so um what we're trying to do now is to establish is there a link between the",
    "start": "2581380",
    "end": "2587440"
  },
  {
    "text": "experience of the people in general and in particular parts of the code and risk",
    "start": "2587440",
    "end": "2594520"
  },
  {
    "text": "enough sorry don't you so next time I get back here I hope I have a really good answer to that",
    "start": "2594520",
    "end": "2600220"
  },
  {
    "text": "question next question here",
    "start": "2600220",
    "end": "2604980"
  },
  {
    "text": "hey um did any of the languages perform better or worse than each other",
    "start": "2605260",
    "end": "2612720"
  },
  {
    "text": "that's a wonderful question if answer it some of you might kill me",
    "start": "2613960",
    "end": "2620940"
  },
  {
    "text": "well there are different perspectives if we look at research there is really no",
    "start": "2621339",
    "end": "2626560"
  },
  {
    "text": "such link right perhaps because it hasn't been studied so deeply but you don't really find that there are any",
    "start": "2626560",
    "end": "2632079"
  },
  {
    "text": "variations we didn't find that in our data either what we did find however was there are",
    "start": "2632079",
    "end": "2638079"
  },
  {
    "text": "huge differences in the type of code smells you take on in different languages and this is knowledge so I'm going to",
    "start": "2638079",
    "end": "2644079"
  },
  {
    "text": "reveal one of my secrets I use when putting together or article or or thought is that depending on what type",
    "start": "2644079",
    "end": "2651819"
  },
  {
    "text": "of problem with software I want to illustrate I Google for different type of languages",
    "start": "2651819",
    "end": "2657640"
  },
  {
    "text": "so if I want to show up code that's misusing design patterns that's overly abstract I Google GitHub",
    "start": "2657640",
    "end": "2664780"
  },
  {
    "text": "trending Java If instead look for a really really messy implementation then I take a safe",
    "start": "2664780",
    "end": "2670839"
  },
  {
    "text": "bet then go for C plus plus if I want to look for misuse of mock",
    "start": "2670839",
    "end": "2676000"
  },
  {
    "text": "Frameworks and overlay abstract tests that are tightly coupled to the implementation then I go for C sharp",
    "start": "2676000",
    "end": "2682180"
  },
  {
    "text": "so I like to think that there are different code smells but at the end of the day we can kind of see that there's no difference in code of across",
    "start": "2682180",
    "end": "2688960"
  },
  {
    "text": "implantation languages hope that answered your question",
    "start": "2688960",
    "end": "2694420"
  },
  {
    "text": "next question here uh hi thank you for the talk it was very insightful um if you had a team of five",
    "start": "2694420",
    "end": "2702099"
  },
  {
    "text": "developers and a new project and not a single line of code what would be your",
    "start": "2702099",
    "end": "2708040"
  },
  {
    "text": "best practice to start from day one and that can be any any best practice",
    "start": "2708040",
    "end": "2716280"
  },
  {
    "text": "so I think it's really really important to um have these techniques as part of your",
    "start": "2716560",
    "end": "2722680"
  },
  {
    "text": "regular workflow so by doing that you make sure that everyone in the team has shared",
    "start": "2722680",
    "end": "2728740"
  },
  {
    "text": "situation awareness of where your hotspots are what's happening to them what's a code Health overall",
    "start": "2728740",
    "end": "2734200"
  },
  {
    "text": "so what I always recommend is to make these techniques part of your recurring",
    "start": "2734200",
    "end": "2739720"
  },
  {
    "text": "activities right if you sit down and you do a planning meeting or priority meeting bring up all this alsatia for",
    "start": "2739720",
    "end": "2745060"
  },
  {
    "text": "code base and see are there any risks that need to be aware of anything I need to fix and also use this data as part of your",
    "start": "2745060",
    "end": "2752740"
  },
  {
    "text": "team's retrospectives because I think if you do that then you're already doing better than so many",
    "start": "2752740",
    "end": "2759339"
  },
  {
    "text": "other companies in the industry and the reason I think you need this from the beginning is that",
    "start": "2759339",
    "end": "2764980"
  },
  {
    "text": "I've seen so many companies that start out with a legacy migration project so they have this code base and like us in",
    "start": "2764980",
    "end": "2771160"
  },
  {
    "text": "this case just means that it's code we didn't write ourselves and now we're going to re-implement that",
    "start": "2771160",
    "end": "2776920"
  },
  {
    "text": "system and this time everything's going to be perfect however what very often happens is that",
    "start": "2776920",
    "end": "2782200"
  },
  {
    "text": "that usually moves a well moves along well for a couple of months and then something happens and that something is",
    "start": "2782200",
    "end": "2788859"
  },
  {
    "text": "almost always a deadline so it might be that you have a demo or you have an important stakeholder if you want to see",
    "start": "2788859",
    "end": "2794500"
  },
  {
    "text": "something or it's a proof of concept and it usually means that you're going to try to Fast Track certain user visible",
    "start": "2794500",
    "end": "2800859"
  },
  {
    "text": "features and I've seen so many code bases that kind of just takes a cold outfit and they never recover from that",
    "start": "2800859",
    "end": "2807940"
  },
  {
    "text": "right so I think that using these techniques regularly from the where we started so a big big help",
    "start": "2807940",
    "end": "2816060"
  },
  {
    "text": "still two minutes for another question",
    "start": "2816339",
    "end": "2820079"
  },
  {
    "text": "and I thank you for the talk that was really good um so we're aware for the fact that you",
    "start": "2823720",
    "end": "2829780"
  },
  {
    "text": "know code goes red often as a because short uh taking shortcuts deadlines did",
    "start": "2829780",
    "end": "2836740"
  },
  {
    "text": "your research look at all into how much extra time it actually takes to keep a",
    "start": "2836740",
    "end": "2841780"
  },
  {
    "text": "code base green while working on a feature or to create a new feature on on",
    "start": "2841780",
    "end": "2847119"
  },
  {
    "text": "a new code base and make it green rather than red so what's the extra hit you",
    "start": "2847119",
    "end": "2852220"
  },
  {
    "text": "take up front to keep something in at Green State versus just rushing it and",
    "start": "2852220",
    "end": "2857740"
  },
  {
    "text": "letting it go red uh interesting so I we actually we don't",
    "start": "2857740",
    "end": "2864160"
  },
  {
    "text": "have any data on it I haven't measured it and uh I mean the only thing I can do is",
    "start": "2864160",
    "end": "2870700"
  },
  {
    "text": "I can offer our guests and my guess is that it's actually not more expensive to",
    "start": "2870700",
    "end": "2875800"
  },
  {
    "text": "maintain code in a green State than to take on technical depth I think that a",
    "start": "2875800",
    "end": "2881680"
  },
  {
    "text": "lot of times those technical lab shortcuts they are not even saving us time to the NHL delivery",
    "start": "2881680",
    "end": "2886900"
  },
  {
    "text": "right I think many times they are just guesses and speculations that end up in",
    "start": "2886900",
    "end": "2892119"
  },
  {
    "text": "the end to take just as long as they were taken to do it properly uh but if anyone is familiar with any",
    "start": "2892119",
    "end": "2898359"
  },
  {
    "text": "work in that area then please point it my way be really interested",
    "start": "2898359",
    "end": "2904380"
  },
  {
    "text": "I think there was so much enthusiasm for questions one more last one and there's hands everywhere I'm sorry I",
    "start": "2904540",
    "end": "2910480"
  },
  {
    "text": "said yeah I'm reading between the lines it sounds like you also looked at code health over",
    "start": "2910480",
    "end": "2917440"
  },
  {
    "text": "time as a trend were there any other interesting patterns you were taking from that you mentioned that you know",
    "start": "2917440",
    "end": "2923680"
  },
  {
    "text": "red that sends to get redder or stay red if there's no investment in it were there any other trends at the time that",
    "start": "2923680",
    "end": "2929740"
  },
  {
    "text": "in the insights you got from that yeah that's right so in general I'm pretty much a fan of Trends over",
    "start": "2929740",
    "end": "2937000"
  },
  {
    "text": "absolute values because to me trends are actionable so one thing we did with code scene for",
    "start": "2937000",
    "end": "2943180"
  },
  {
    "text": "example is it coaching has a bunch of things like different quality Gates and whatnot but we're never firing off a",
    "start": "2943180",
    "end": "2949300"
  },
  {
    "text": "quality gate just because you have red code we're frying off a quality gate when you make red code worse or green",
    "start": "2949300",
    "end": "2954339"
  },
  {
    "text": "code worse because the earlier you can catch things the better so Trends are always actionable and the reasons say",
    "start": "2954339",
    "end": "2960099"
  },
  {
    "text": "this is because I spend a lot of time talking to c-level managers in different companies trying",
    "start": "2960099",
    "end": "2966460"
  },
  {
    "text": "to convince them to kind of Coach them on how to handle a tech depth and um",
    "start": "2966460",
    "end": "2973300"
  },
  {
    "text": "one pretty easy window is that if you focus on Trends you can always say that",
    "start": "2973300",
    "end": "2979180"
  },
  {
    "text": "no one ever wants your code to be worse tomorrow than it is today right so to me Step Zero when managing",
    "start": "2979180",
    "end": "2987220"
  },
  {
    "text": "technical adapt is not about refactoring improving stuff it's just putting a quality bar on what's already there",
    "start": "2987220",
    "end": "2992560"
  },
  {
    "text": "don't take on more technical debt unless you have it under control so that's one of the patterns I saw",
    "start": "2992560",
    "end": "2998680"
  },
  {
    "text": "another one that might be quite controversial is that what this data also shows us is that it's actually okay",
    "start": "2998680",
    "end": "3004680"
  },
  {
    "text": "to take on technical debt in the tail in the long tail right of our hotspot curve",
    "start": "3004680",
    "end": "3010079"
  },
  {
    "text": "this is something that I've been very careful with recommending because it's so easy to misuse like hey this crazy",
    "start": "3010079",
    "end": "3015480"
  },
  {
    "text": "sweet told me it's okay that's not what I'm saying right but once we have this visibility once we have this situational",
    "start": "3015480",
    "end": "3022020"
  },
  {
    "text": "awareness we can actually start to use technical depth in the way it was meant originally right we can take it on we",
    "start": "3022020",
    "end": "3028440"
  },
  {
    "text": "know what we're doing we know the consequences of it and we might not even have to pay it back if it continues to",
    "start": "3028440",
    "end": "3034380"
  },
  {
    "text": "be stable cool so please catch me during a break",
    "start": "3034380",
    "end": "3039599"
  },
  {
    "text": "I'll be happy to continue the discussions thank you very much [Applause]",
    "start": "3039599",
    "end": "3046539"
  }
]