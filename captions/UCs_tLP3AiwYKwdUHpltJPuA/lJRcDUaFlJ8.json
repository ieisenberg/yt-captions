[
  {
    "start": "0",
    "end": "143000"
  },
  {
    "text": "[Music] welcome everybody and I think you already had a lot of input",
    "start": "6990",
    "end": "13360"
  },
  {
    "text": "today and when I prepar this talk I well let's let's make a little",
    "start": "13360",
    "end": "20800"
  },
  {
    "text": "confession so I always invite those people who pick up just one idea and",
    "start": "20800",
    "end": "26640"
  },
  {
    "text": "then so and then spice that up and deliver a real nice talk about that describing that having lots of I said",
    "start": "26640",
    "end": "33680"
  },
  {
    "text": "hey this time I'm going to make it the same way so usually my talks are crammed",
    "start": "33680",
    "end": "40079"
  },
  {
    "text": "with way too much stuff and hard to deliver them at all with in time and so on and said this time I'm doing it",
    "start": "40079",
    "end": "47960"
  },
  {
    "text": "better what shall I say I failed again sorry so it's a lot of stuff so better",
    "start": "47960",
    "end": "54520"
  },
  {
    "text": "get started yeah",
    "start": "54520",
    "end": "60519"
  },
  {
    "text": "I Tred to make it um as convenient as possible but sorry up front so my name",
    "start": "60519",
    "end": "67000"
  },
  {
    "text": "is U frieden I work for a company called concentric on my business card it reads CTO I usually call myself hello so you",
    "start": "67000",
    "end": "74040"
  },
  {
    "text": "can pick whatever you like so it's who cares about titles and um so usually I",
    "start": "74040",
    "end": "81320"
  },
  {
    "text": "would just write nothing on it so but that's a different story maybe a different talk which I can deliver then",
    "start": "81320",
    "end": "87360"
  },
  {
    "text": "with again with way too much stuff in it so and part of the problem why it's too",
    "start": "87360",
    "end": "92759"
  },
  {
    "text": "much is because I wasn't able to focus on one topic so it's one and half and",
    "start": "92759",
    "end": "98200"
  },
  {
    "text": "here's the half topic so this one size fits all trap we come back to that later",
    "start": "98200",
    "end": "105640"
  },
  {
    "text": "when we talk about communication paradigms you know this idea of standardization as a virtue",
    "start": "105640",
    "end": "112119"
  },
  {
    "text": "and we really see that a lot I mean you all have seen that so the one programming language one framework one",
    "start": "112119",
    "end": "118920"
  },
  {
    "text": "build system one type of runtime unit one data store one type of database",
    "start": "118920",
    "end": "124560"
  },
  {
    "text": "access one application server one you name it and of course one communication Paradigm so we limit ourselves to using",
    "start": "124560",
    "end": "131800"
  },
  {
    "text": "one choice and nothing else and everything has to be solved with that no",
    "start": "131800",
    "end": "137319"
  },
  {
    "text": "matter if it makes sense or not and the core question of course is why are we doing",
    "start": "137319",
    "end": "143519"
  },
  {
    "start": "143000",
    "end": "326000"
  },
  {
    "text": "that and the idea behind that is we try to reduce complexity so in trying",
    "start": "143519",
    "end": "148959"
  },
  {
    "text": "avoiding intellectual overload I mean we have enough to do to deliver good software and solve the business problems",
    "start": "148959",
    "end": "155400"
  },
  {
    "text": "so let's reduce that complexity a bit so it's easier to understand to change and",
    "start": "155400",
    "end": "162000"
  },
  {
    "text": "ah faster to change oh didn't duplicate that then of course we can do it faster because it's easier",
    "start": "162000",
    "end": "169360"
  },
  {
    "text": "we grabed it better and it's easier to operate and we do less errors with that and so on and usually it's also a little",
    "start": "169360",
    "end": "175680"
  },
  {
    "text": "bit cheaper which shouldn't be the major driver in what we're doing which unfortunately often is but okay and",
    "start": "175680",
    "end": "185519"
  },
  {
    "text": "basically that's good reasons to do that but um you know I I'm working as an",
    "start": "185519",
    "end": "192720"
  },
  {
    "text": "architect for more than 20 years meanwhile so not this Ivory Tower guy",
    "start": "192720",
    "end": "198280"
  },
  {
    "text": "who tries to dictate everyone so these were my former years meanwhile I got a little bit older and did more than 15",
    "start": "198280",
    "end": "205519"
  },
  {
    "text": "years of agile meanwhile and so I try to help teams to succeed basically and um",
    "start": "205519",
    "end": "214040"
  },
  {
    "text": "but what you learn if you're working as an architect is there is no black and there's no white there's all only a",
    "start": "214040",
    "end": "221159"
  },
  {
    "text": "right range of gray and every up also has a down and every down often also has",
    "start": "221159",
    "end": "227200"
  },
  {
    "text": "an upside so that's this other side of the coin that we have to think",
    "start": "227200",
    "end": "234760"
  },
  {
    "text": "about and in one sentence it's hard to grasp my explain that a little bit more",
    "start": "235079",
    "end": "240720"
  },
  {
    "text": "in detail is that the complexity of your solution must match the complexity of",
    "start": "240720",
    "end": "248040"
  },
  {
    "text": "your original problem that you have to solve and if you put more or less into",
    "start": "248040",
    "end": "253599"
  },
  {
    "text": "the solution then you have a problem um you see that all the way uh you see that quite often um if people try to find",
    "start": "253599",
    "end": "261479"
  },
  {
    "text": "Simple Solutions for complex problems they usually fail miserably and um we also do that sometimes in it so",
    "start": "261479",
    "end": "270639"
  },
  {
    "text": "pick an analogy so if your task basically is to build a box from pre-cut",
    "start": "270639",
    "end": "276320"
  },
  {
    "text": "boards just having a hammer and a few Nails might be a good tooling for doing",
    "start": "276320",
    "end": "282360"
  },
  {
    "text": "that if you also have to paint the Box afterwards just having a hammer puts a",
    "start": "282360",
    "end": "289240"
  },
  {
    "text": "lot of fun out of that I mean imagine dipping the hammer into the collar and",
    "start": "289240",
    "end": "295280"
  },
  {
    "text": "then it's not really I mean you can do it this way but but it's not the best",
    "start": "295280",
    "end": "301600"
  },
  {
    "text": "way I think and now imagine building a whole house just with a hammer because you can do that with pre with a box and",
    "start": "301600",
    "end": "308440"
  },
  {
    "text": "pre-cut boards basically and nobody would say that's a great",
    "start": "308440",
    "end": "313639"
  },
  {
    "text": "idea unfortunately in it we quite often do that hey we have seen it works over",
    "start": "313639",
    "end": "320440"
  },
  {
    "text": "there so let's do everything with that yeah which",
    "start": "320440",
    "end": "327280"
  },
  {
    "start": "326000",
    "end": "490000"
  },
  {
    "text": "then leads to a complexity Miss match that our tooling doesn't fit the",
    "start": "327280",
    "end": "333639"
  },
  {
    "text": "complexity of the problem we have to solve which ends up in accidential",
    "start": "333639",
    "end": "339199"
  },
  {
    "text": "complexity so it's essential complexity is what we need and accidential is what we don't need and harder to understand",
    "start": "339199",
    "end": "346960"
  },
  {
    "text": "harder to change slower to change blah blah blah blah blah so basically the opposite of what we try to achieve with",
    "start": "346960",
    "end": "352759"
  },
  {
    "text": "that simplification idea and to put an error on that so if",
    "start": "352759",
    "end": "357960"
  },
  {
    "text": "you have the essential complexity of your problem up here then you try to fit",
    "start": "357960",
    "end": "365560"
  },
  {
    "text": "the solution complexity or you should try to if you put too much tooling into",
    "start": "365560",
    "end": "371599"
  },
  {
    "text": "it you get more accidential complexity there so it's an overly complex Solution that's what we always think about and",
    "start": "371599",
    "end": "378080"
  },
  {
    "text": "say yeah find the easiest solution that mat the problem but unfortunately quite",
    "start": "378080",
    "end": "383120"
  },
  {
    "text": "often we end up down there and now you don't have enough tooling to get your",
    "start": "383120",
    "end": "389360"
  },
  {
    "text": "job done so not enough choices in your database not enough choices in your",
    "start": "389360",
    "end": "394639"
  },
  {
    "text": "programming L Lang in your runtime environments whatever belongs to that and this makes you fighting against the",
    "start": "394639",
    "end": "401680"
  },
  {
    "text": "tooling which adds accidential complexity to the job you try to get done which is quite problematic it it",
    "start": "401680",
    "end": "410840"
  },
  {
    "text": "also comes from these um industrial thinking basically that U we so try to",
    "start": "410840",
    "end": "416680"
  },
  {
    "text": "be as cheap as possible and so on and yeah if if your tooling gets overly",
    "start": "416680",
    "end": "421879"
  },
  {
    "text": "cheap so yeah this one just as one tool then I've seen projects just fighting",
    "start": "421879",
    "end": "427599"
  },
  {
    "text": "against the tooling and that's no fun to see that instead of solving the business",
    "start": "427599",
    "end": "432639"
  },
  {
    "text": "problem so basically your overall solution",
    "start": "432639",
    "end": "438560"
  },
  {
    "text": "complexity is that essential complexity which you can't get away from plus your",
    "start": "438560",
    "end": "445039"
  },
  {
    "text": "mismatch either to the left or to the right which you have and it works in",
    "start": "445039",
    "end": "450759"
  },
  {
    "text": "both directions so to wrap that part up aim",
    "start": "450759",
    "end": "456039"
  },
  {
    "text": "for the least complex solution but with an addendum with respect to the problem",
    "start": "456039",
    "end": "462520"
  },
  {
    "text": "you have to solve not just well least complex solution I mean the least complex solution without looking at the",
    "start": "462520",
    "end": "469159"
  },
  {
    "text": "problem you have to solve is having nothing at tooling hey we're done period",
    "start": "469159",
    "end": "474400"
  },
  {
    "text": "and which usually isn't it okay having said that",
    "start": "474400",
    "end": "480199"
  },
  {
    "text": "let's move on to communication paradigms so this was the half part now this other",
    "start": "480199",
    "end": "486639"
  },
  {
    "text": "part which is also too much stuffed communication paradigms there a lot of Dimensions so",
    "start": "486639",
    "end": "493840"
  },
  {
    "start": "490000",
    "end": "778000"
  },
  {
    "text": "there's several paradigms out there so synchronous asynchronous request response versus message passing and um",
    "start": "493840",
    "end": "501800"
  },
  {
    "text": "whatever you send around could be commands could be events could be documents could be something else and",
    "start": "501800",
    "end": "507520"
  },
  {
    "text": "you also have the sender and receiver depend lenes Does the sender need to know the receiver does the receiver need",
    "start": "507520",
    "end": "513360"
  },
  {
    "text": "to know the sender and so on and you can mix them up all these Dimensions basically and create arbitrary",
    "start": "513360",
    "end": "519959"
  },
  {
    "text": "communication paradigms from that the typical ones that we see out there quite",
    "start": "519959",
    "end": "525720"
  },
  {
    "text": "often is this synchronous request response which we see very often and not",
    "start": "525720",
    "end": "531279"
  },
  {
    "text": "so often this asynchronous commands with a known receiver we have that for instance um if you work with AAR so the",
    "start": "531279",
    "end": "538000"
  },
  {
    "text": "actor model uses that one or asynchronous events um where you have",
    "start": "538000",
    "end": "543680"
  },
  {
    "text": "some kind of event bus in between so the pup sub model where the sender does not",
    "start": "543680",
    "end": "548959"
  },
  {
    "text": "care about the receiver it just sends out an event says hey here's something Whoever likes it pick it",
    "start": "548959",
    "end": "554720"
  },
  {
    "text": "up and what we see out there at least in the projects that I'm usually in maybe",
    "start": "554720",
    "end": "560560"
  },
  {
    "text": "I'm in the wrong projects but um can't tell I just can tell from my what what I've learned um in the last years and um",
    "start": "560560",
    "end": "568839"
  },
  {
    "text": "don't know about your experience so what I see quite often is this synchronous",
    "start": "568839",
    "end": "574320"
  },
  {
    "text": "request response trap how I call that so we are always doing our communication",
    "start": "574320",
    "end": "580279"
  },
  {
    "text": "between processes in a synchronous way with request response um paradig and in the former",
    "start": "580279",
    "end": "587480"
  },
  {
    "text": "days it was something like uh remote function calls or remote procedure calls",
    "start": "587480",
    "end": "592640"
  },
  {
    "text": "then we call that um then we called that corber afterwards we called that RMI",
    "start": "592640",
    "end": "597760"
  },
  {
    "text": "then we called it soap and at the moment we are calling it um rest style basically so HTTP and okay quite often",
    "start": "597760",
    "end": "605640"
  },
  {
    "text": "we just call it rest and we actually mean something across HTTP which isn't actually rest but that's a different",
    "start": "605640",
    "end": "612000"
  },
  {
    "text": "discussion a different talk again so we have that why is everything",
    "start": "612000",
    "end": "619040"
  },
  {
    "text": "request response H",
    "start": "619040",
    "end": "626160"
  },
  {
    "text": "yeah so this one size fits all Maybe but yeah that's part of the story",
    "start": "626160",
    "end": "632399"
  },
  {
    "text": "basically but why are we picking that one",
    "start": "632399",
    "end": "638800"
  },
  {
    "text": "and so why that one and I I heard different answers about",
    "start": "638800",
    "end": "645279"
  },
  {
    "text": "that the first one which you quite often hear especially from the rest of Arians is something like it's like the internet",
    "start": "645279",
    "end": "651720"
  },
  {
    "text": "works and what's good for the internet is good for you so pick it um basically which isn't wrong basically but we come",
    "start": "651720",
    "end": "659120"
  },
  {
    "text": "back back to that later and then you hear um arguments like um yeah the",
    "start": "659120",
    "end": "666560"
  },
  {
    "text": "library support is better than for the other stuff um but that's uh the other way around so it's like um I argue that",
    "start": "666560",
    "end": "674480"
  },
  {
    "text": "I can shoot shoot someone because he's dead afterwards and which isn't a good",
    "start": "674480",
    "end": "680120"
  },
  {
    "text": "idea basically and so I mean the library support is better because everybody did that and so it's the other way around",
    "start": "680120",
    "end": "687800"
  },
  {
    "text": "how it works and it's more like that I don't hear",
    "start": "687800",
    "end": "693040"
  },
  {
    "text": "that so often but I think it's the core reason is that we think it's easier to reason about it so because it's it work",
    "start": "693040",
    "end": "701480"
  },
  {
    "text": "it matches the way that we think basically we think in a single threat so",
    "start": "701480",
    "end": "706920"
  },
  {
    "text": "request response on so sort of call stack that's how our brain works so in",
    "start": "706920",
    "end": "713120"
  },
  {
    "text": "in this way and so it's quite easy to think that way it's not so easy to think in these communication networks which",
    "start": "713120",
    "end": "720120"
  },
  {
    "text": "are quite parallel and so on it's I mean our brain is wired that way but we can't think that way which is quite funny",
    "start": "720120",
    "end": "726839"
  },
  {
    "text": "actually but um if you think about that for a while um so that we don't understand with the conscious part of",
    "start": "726839",
    "end": "733399"
  },
  {
    "text": "our brains um how our brain works um but that's okay um again another",
    "start": "733399",
    "end": "740760"
  },
  {
    "text": "talk and um also I think another part of the story is it's the way that how we",
    "start": "740760",
    "end": "747560"
  },
  {
    "text": "learned how to design things because that's when we started with it",
    "start": "747560",
    "end": "752760"
  },
  {
    "text": "every told split up the problem in single parts so and then do this",
    "start": "752760",
    "end": "758480"
  },
  {
    "text": "subroutine call and all this stuff so call stack thinking that's the way we",
    "start": "758480",
    "end": "763680"
  },
  {
    "text": "learned how to do it which is",
    "start": "763680",
    "end": "770079"
  },
  {
    "text": "okay but there's again you know I'm spoiled as an architect so that's this",
    "start": "770079",
    "end": "775600"
  },
  {
    "text": "other side of the coin and the flip side is first of all about this um it's the way",
    "start": "775600",
    "end": "784120"
  },
  {
    "start": "778000",
    "end": "1286000"
  },
  {
    "text": "internet works yeah and it works great there problem is",
    "start": "784120",
    "end": "791120"
  },
  {
    "text": "um HTTP and also the rest architectural style was designed for a specific use",
    "start": "791120",
    "end": "797279"
  },
  {
    "text": "specific use case so hyper media content basically and what's up on it so it it",
    "start": "797279",
    "end": "804079"
  },
  {
    "text": "wasn't ever designed as a solution for everything it's a grade for solution",
    "start": "804079",
    "end": "809120"
  },
  {
    "text": "solution for some things but it's not necessarily the solution for everything",
    "start": "809120",
    "end": "814760"
  },
  {
    "text": "that's something different and then the worst downside is this easy",
    "start": "814760",
    "end": "822760"
  },
  {
    "text": "reasoning doesn't work across process boundaries within a process this",
    "start": "822760",
    "end": "828600"
  },
  {
    "text": "reasoning is quite easy because if this part that you're calling doesn't",
    "start": "828600",
    "end": "834920"
  },
  {
    "text": "respond because it's dead you're also dead which makes it really easy to",
    "start": "834920",
    "end": "840199"
  },
  {
    "text": "reason about things that happening because they're happening or nothing is happening in a distributed system so",
    "start": "840199",
    "end": "847079"
  },
  {
    "text": "across Network boundaries that's no longer true we have latency we have non non-deterministic behavior in the nodes",
    "start": "847079",
    "end": "853560"
  },
  {
    "text": "that we're calling and all that stuff easy reasoning is gone so um it's a probabilistic system and if you ever try",
    "start": "853560",
    "end": "861120"
  },
  {
    "text": "to reason about a probabilistic system with a deterministic mindset I tried that sometimes and I",
    "start": "861120",
    "end": "868560"
  },
  {
    "text": "also I I still fail even though I um deal with distributed systems for more",
    "start": "868560",
    "end": "874079"
  },
  {
    "text": "than 20 years now um they still catch me before my first cup of coffee and prove",
    "start": "874079",
    "end": "880600"
  },
  {
    "text": "me wrong so easy reasoning is gone and again we have that solution",
    "start": "880600",
    "end": "887320"
  },
  {
    "text": "mismatch that we might end with and um so it ends it could add complexity with",
    "start": "887320",
    "end": "896240"
  },
  {
    "text": "that so because um if our way we",
    "start": "896240",
    "end": "902959"
  },
  {
    "text": "communicate doesn't match the way of our problem how our problem works we end up",
    "start": "902959",
    "end": "909120"
  },
  {
    "text": "with strange encapsulations we end up with",
    "start": "909120",
    "end": "915000"
  },
  {
    "text": "um functionality which drains into different parts and with longer",
    "start": "915000",
    "end": "920279"
  },
  {
    "text": "activation paths and so on and that's what I'm going to explain you in the next minutes",
    "start": "920279",
    "end": "926480"
  },
  {
    "text": "so what I mean with that so how do we need to design with the right",
    "start": "926480",
    "end": "933680"
  },
  {
    "text": "communication Paradigm and I took a little bit unfair example to sketch that",
    "start": "933680",
    "end": "939639"
  },
  {
    "text": "so uh I say up front it's unfair a little bit so um the as synchronous",
    "start": "939639",
    "end": "945519"
  },
  {
    "text": "communication will basically look a lot better than the synchronous communication but it's just because",
    "start": "945519",
    "end": "950800"
  },
  {
    "text": "usually we just we always use that synchronous request response um for no",
    "start": "950800",
    "end": "956319"
  },
  {
    "text": "matter what problem we have and so I I on purpose picked an example where this",
    "start": "956319",
    "end": "962399"
  },
  {
    "text": "doesn't work so well it's basically order Del order fulfillment so this part",
    "start": "962399",
    "end": "969199"
  },
  {
    "text": "after you clicked I buy",
    "start": "969199",
    "end": "974800"
  },
  {
    "text": "until the products that you bought are shipped so in between that between the",
    "start": "974800",
    "end": "982560"
  },
  {
    "text": "um yeah you got the story basically so we start with request response and",
    "start": "982560",
    "end": "991560"
  },
  {
    "text": "how we would design the solution with that and I Tred to make it a little bit real world so starting with a simple",
    "start": "991560",
    "end": "998399"
  },
  {
    "text": "design which looks quite nicely and then the product owner coming along and saying oh I want to have this and that",
    "start": "998399",
    "end": "1004759"
  },
  {
    "text": "and that and that and that and that and we add and add and add and add and add to that and we end up with something",
    "start": "1004759",
    "end": "1010639"
  },
  {
    "text": "very different than we initially wanted to design basically so and I make it a",
    "start": "1010639",
    "end": "1015759"
  },
  {
    "text": "little bit naive in here so just to point it out so usually in reality you wouldn't make it this extreme and that",
    "start": "1015759",
    "end": "1023079"
  },
  {
    "text": "naive um still what I see in many problems",
    "start": "1023079",
    "end": "1028480"
  },
  {
    "text": "problems sorry projects fru and slip um isn't so far away from that so we start",
    "start": "1028480",
    "end": "1037798"
  },
  {
    "text": "easy yeah so here's a initial version so you uh in the checkout process you click",
    "start": "1037799",
    "end": "1045038"
  },
  {
    "text": "on buy and then you send over um some which includes the items amount the",
    "start": "1045039",
    "end": "1050880"
  },
  {
    "text": "prices and the total price and you can only do credit card payment and um just ah and only non digital items at the",
    "start": "1050880",
    "end": "1057919"
  },
  {
    "text": "moment so something that's really shipped out from your Warehouse system yeah and you could end up with a",
    "start": "1057919",
    "end": "1064080"
  },
  {
    "text": "solution like that here has the online shop sending the request here has an order fulfillment service which um",
    "start": "1064080",
    "end": "1071880"
  },
  {
    "text": "encapsulates the whole flow and it's split up then into and it uses two",
    "start": "1071880",
    "end": "1077919"
  },
  {
    "text": "additional services payment service and a shipment service and here has a credit card provider we're using I mean we",
    "start": "1077919",
    "end": "1083919"
  },
  {
    "text": "don't want to have pcidss compliance so we use uh um Outsource that part of them",
    "start": "1083919",
    "end": "1089440"
  },
  {
    "text": "and here we have to implement the API of that provider here and also here the API of the warehouse system and of course",
    "start": "1089440",
    "end": "1096200"
  },
  {
    "text": "because they two um Services we have to coordinate them in some way still still",
    "start": "1096200",
    "end": "1101400"
  },
  {
    "text": "quite nice and easy I mean it's quite obvious design for request response Paradigm and how to slice that",
    "start": "1101400",
    "end": "1109280"
  },
  {
    "text": "I mean could do that differently so yeah that's okay I mean it it's still activation pass of five request response",
    "start": "1109280",
    "end": "1117320"
  },
  {
    "text": "Cycles until you get the final answers but but yeah it's good enough",
    "start": "1117320",
    "end": "1122760"
  },
  {
    "text": "basically but as I said it doesn't stay that easy so",
    "start": "1122760",
    "end": "1128799"
  },
  {
    "text": "coupons we add coupons because um we it's little bit of our Customer",
    "start": "1128799",
    "end": "1135360"
  },
  {
    "text": "Loyalty so we get another ID in there and um so yeah the price already charged",
    "start": "1135360",
    "end": "1141360"
  },
  {
    "text": "in the checkout process basically um or calculated so this um discount but we",
    "start": "1141360",
    "end": "1147760"
  },
  {
    "text": "can only validate the coupon and the coupon system after the payment is done stay there please and yeah so we",
    "start": "1147760",
    "end": "1156799"
  },
  {
    "text": "think where are we doing that and the easiest and fastest way is to integrate that into the payment server so a little bit Upstream here that that's where it",
    "start": "1156799",
    "end": "1163200"
  },
  {
    "text": "fits quite nicely so yeah we have a little bit different API here because um",
    "start": "1163200",
    "end": "1168480"
  },
  {
    "text": "there's another value coming through and then here's the coupon API and we have of course some coordination logic which",
    "start": "1168480",
    "end": "1174880"
  },
  {
    "text": "we put in here yeah okay but coupons are not enough because",
    "start": "1174880",
    "end": "1180480"
  },
  {
    "text": "they work quite nicely so we have a campaign management system which we have to integrate now and we have to notify",
    "start": "1180480",
    "end": "1186159"
  },
  {
    "text": "the campaign management system about that um a part customer used a campaign",
    "start": "1186159",
    "end": "1191799"
  },
  {
    "text": "and yeah we we already are quite used to that how to do that so we add that in",
    "start": "1191799",
    "end": "1197600"
  },
  {
    "text": "here the AP I and we changed the coordination logic a little bit Yeah",
    "start": "1197600",
    "end": "1204640"
  },
  {
    "text": "okay but then we have also business to business so business customers which",
    "start": "1204640",
    "end": "1210120"
  },
  {
    "text": "have an account in our system",
    "start": "1210120",
    "end": "1215559"
  },
  {
    "text": "so which how um so we have to do very different payment terms so we put that",
    "start": "1215720",
    "end": "1223480"
  },
  {
    "text": "um so we just add the debit on our um accounting system so and",
    "start": "1223480",
    "end": "1229159"
  },
  {
    "text": "let's see how that turns out so yeah this became a little bit CRA stuffed a",
    "start": "1229159",
    "end": "1234440"
  },
  {
    "text": "meanwhile so and the logic is quite different from um accessing the credit card provider so we decided to create",
    "start": "1234440",
    "end": "1242120"
  },
  {
    "text": "another service for that and um yeah um then adding some coordination logic up",
    "start": "1242120",
    "end": "1248840"
  },
  {
    "text": "there in the payment service meanwhile it's not so easy to change that anymore this payment service quite a little bit",
    "start": "1248840",
    "end": "1255240"
  },
  {
    "text": "of stuff in there but unfortunately ly PayPal yeah of course PayPal yeah we",
    "start": "1255240",
    "end": "1262880"
  },
  {
    "text": "add that too and now um it wasn't possible anymore in there so we we got",
    "start": "1262880",
    "end": "1269720"
  },
  {
    "text": "two more weeks for refactoring stuff out into another payment provider service we",
    "start": "1269720",
    "end": "1274840"
  },
  {
    "text": "drag down the credit card logic and then added PayPal to that and of course we changed the coordination logic in here",
    "start": "1274840",
    "end": "1281559"
  },
  {
    "text": "and yeah so little bit of relief meanwhile uh not really because right",
    "start": "1281559",
    "end": "1288320"
  },
  {
    "start": "1286000",
    "end": "1455000"
  },
  {
    "text": "now they figured out the next idea they could do so they tortured us enough on the payment side so let's torture them a",
    "start": "1288320",
    "end": "1293960"
  },
  {
    "text": "little bit more on the delivery side and of course what are we doing digital assets so digital music so we have some",
    "start": "1293960",
    "end": "1301640"
  },
  {
    "text": "kind of digital music library that we can use and so we have a new shipment method of course because somehow this um",
    "start": "1301640",
    "end": "1309960"
  },
  {
    "text": "if I buy a piece of music it must be made available to me as a customer and I",
    "start": "1309960",
    "end": "1315200"
  },
  {
    "text": "want to be notified and get an URL where I can access that and so on so and I",
    "start": "1315200",
    "end": "1320240"
  },
  {
    "text": "should get this um email an email about that how I can access that stuff yeah",
    "start": "1320240",
    "end": "1326080"
  },
  {
    "text": "and it's also got its own Library so yeah story starts over here again of",
    "start": "1326080",
    "end": "1331720"
  },
  {
    "text": "course so we have to add this coordination logic because we have the music library which we added in here and",
    "start": "1331720",
    "end": "1338679"
  },
  {
    "text": "of course also we must be able to send out emails right now because the email",
    "start": "1338679",
    "end": "1344240"
  },
  {
    "text": "server doesn't support templating on its own so we have to also Implement a little bit of templating Lo logic in",
    "start": "1344240",
    "end": "1350320"
  },
  {
    "text": "here so setting up email templates and so on yeah we could also um put that in",
    "start": "1350320",
    "end": "1355520"
  },
  {
    "text": "a distinct service but um it was faster this way okay yeah and music is quite a",
    "start": "1355520",
    "end": "1363919"
  },
  {
    "text": "success so yeah videos come up so we turn that in generic Asset Management",
    "start": "1363919",
    "end": "1371159"
  },
  {
    "text": "API and changed the coordination logic of course we also changed the um",
    "start": "1371159",
    "end": "1376760"
  },
  {
    "text": "notification logic a little bit so to dealing with these other kinds of templates and so on and ebooks yeah",
    "start": "1376760",
    "end": "1384840"
  },
  {
    "text": "we're quite used to that meanwhile I mean yeah right straight forward I it's big piece of code",
    "start": "1384840",
    "end": "1393720"
  },
  {
    "text": "meanwhile the shipment service too so we have two big one and the last one that",
    "start": "1393720",
    "end": "1400520"
  },
  {
    "text": "we have here is I mean promotions and coupons are not enough so let's add also a little part of bonus card and we of",
    "start": "1400520",
    "end": "1408080"
  },
  {
    "text": "course can only put the points in there and um add them to our bonus card after",
    "start": "1408080",
    "end": "1413400"
  },
  {
    "text": "the payment is done and but we're used to that too so we added it here so at",
    "start": "1413400",
    "end": "1418720"
  },
  {
    "text": "least we have a nice balanced picture meanwhile but that's basically it so and",
    "start": "1418720",
    "end": "1424760"
  },
  {
    "text": "if you look into that yeah it's quite a lot I mean yeah our marketing and our",
    "start": "1424760",
    "end": "1430880"
  },
  {
    "text": "product owners have a lot more ideas but it's enough at the moment at least for this presentation you know that they",
    "start": "1430880",
    "end": "1438039"
  },
  {
    "text": "will come come up with the next one which really questions the whole design we had here so at least we could stick",
    "start": "1438039",
    "end": "1444600"
  },
  {
    "text": "with the initial design Somehow Here which isn't always the case but what can",
    "start": "1444600",
    "end": "1449799"
  },
  {
    "text": "we learn from that so if we do that in a pure way for the order fulfillment so",
    "start": "1449799",
    "end": "1456080"
  },
  {
    "start": "1455000",
    "end": "1981000"
  },
  {
    "text": "findings I mean it's what I call a divide and conquer design it's the way we learned that when we started with it",
    "start": "1456080",
    "end": "1463080"
  },
  {
    "text": "how to do that so this split up the problem in smaller parts and then implement the small smaller parts and",
    "start": "1463080",
    "end": "1469159"
  },
  {
    "text": "integrate all that until you solve the whole problem which isn't too bad basically what we end up is quite a",
    "start": "1469159",
    "end": "1476000"
  },
  {
    "text": "tight service coupling um so where all this logic is somehow connected to each",
    "start": "1476000",
    "end": "1481399"
  },
  {
    "text": "other especially draining parts of the logic of the downstream Services up into the Upstream Services how to coordinate",
    "start": "1481399",
    "end": "1487480"
  },
  {
    "text": "that how to access their apis how the logic how they work basically on the API level and so on also we have a quite",
    "start": "1487480",
    "end": "1494360"
  },
  {
    "text": "long activation path here I mean we never would Implement that in real life scenario would we so um having this all",
    "start": "1494360",
    "end": "1501840"
  },
  {
    "text": "these calls coming back before you respond to your",
    "start": "1501840",
    "end": "1506919"
  },
  {
    "text": "customer no we don't do that do we yeah okay of course latency creep come with",
    "start": "1506919",
    "end": "1513919"
  },
  {
    "text": "that availability erosion because um the underlying assumption on this design is",
    "start": "1513919",
    "end": "1518960"
  },
  {
    "text": "that all the servers are available because as soon as one of these servers isn't available you have to what are you",
    "start": "1518960",
    "end": "1525200"
  },
  {
    "text": "going to do so you need some kind of business compensation law logic and um",
    "start": "1525200",
    "end": "1530360"
  },
  {
    "text": "which adds another layer of complexity into that because you have to implement that into your coordination Logic on all",
    "start": "1530360",
    "end": "1536799"
  },
  {
    "text": "the levels and if you want to reschedule some requests and so on you'll have to",
    "start": "1536799",
    "end": "1542080"
  },
  {
    "text": "do even more stuff in here and you have quite a complex orchestration logic in",
    "start": "1542080",
    "end": "1547360"
  },
  {
    "text": "your services meanwhile and this all this coordination is basically a distributed coordin um orchestration",
    "start": "1547360",
    "end": "1553320"
  },
  {
    "text": "what you have in there including these business cross um service business transaction",
    "start": "1553320",
    "end": "1558960"
  },
  {
    "text": "which you somehow coordinate across all these services and um yeah and usually",
    "start": "1558960",
    "end": "1564640"
  },
  {
    "text": "whenever you add something Downstream you have have to change stuff Upstream so some changes leak Upstream basically",
    "start": "1564640",
    "end": "1573000"
  },
  {
    "text": "which is quite a lot but let's see if the synchronous",
    "start": "1573000",
    "end": "1579159"
  },
  {
    "text": "requests are doing it better I said before it's an unfair example so yeah but let's repeat the",
    "start": "1579159",
    "end": "1587720"
  },
  {
    "text": "story so we know that meanwhile and how would it look like",
    "start": "1587720",
    "end": "1595559"
  },
  {
    "text": "here's the online shop and it sends out an event including the order information so order confirmed and then we have",
    "start": "1595559",
    "end": "1603320"
  },
  {
    "text": "another service which listens to this kind of event and the credit card",
    "start": "1603320",
    "end": "1609559"
  },
  {
    "text": "service which does the job with the credit card provider and either it works so payment authorized or it doesn't work",
    "start": "1609559",
    "end": "1615559"
  },
  {
    "text": "so payment failed which is a little bit in Gray down in there and then um after",
    "start": "1615559",
    "end": "1621200"
  },
  {
    "text": "payment authorized is done then we the P the warehouse service picks that up and",
    "start": "1621200",
    "end": "1626440"
  },
  {
    "text": "make sure that um the items are delivered and shipped and delivered",
    "start": "1626440",
    "end": "1631559"
  },
  {
    "text": "so what we see in here as a difference to the other design is here is no",
    "start": "1631559",
    "end": "1638480"
  },
  {
    "text": "coordination logic in there so it's just an event sending out an event forgetting",
    "start": "1638480",
    "end": "1644679"
  },
  {
    "text": "about that and the next one picking it up so online shop doesn't know anything about the API of credit card except for",
    "start": "1644679",
    "end": "1651200"
  },
  {
    "text": "the event format and credit card service doesn't know anything about the warehouse service and there's no",
    "start": "1651200",
    "end": "1656399"
  },
  {
    "text": "coordination logic or anything in there and um I mean we're a little bit Lucky",
    "start": "1656399",
    "end": "1661919"
  },
  {
    "text": "in here because we can create some kind of ordering here so to create a working",
    "start": "1661919",
    "end": "1668399"
  },
  {
    "text": "flow but yeah so it would be a little bit more complicated if we need to do",
    "start": "1668399",
    "end": "1674080"
  },
  {
    "text": "that a different way but it works here so okay why shouldn't be lucky someone",
    "start": "1674080",
    "end": "1680000"
  },
  {
    "text": "sometime the coupons and here it's quite interesting because it doesn't change anything",
    "start": "1680000",
    "end": "1687399"
  },
  {
    "text": "because um coupon are just added as another service listening to the same event basically if the payment works I",
    "start": "1687399",
    "end": "1694600"
  },
  {
    "text": "plug it in don't need to change anything else so can keep that isolated",
    "start": "1694600",
    "end": "1699919"
  },
  {
    "text": "promotions basically same story now customer accounts now it's a",
    "start": "1699919",
    "end": "1707200"
  },
  {
    "text": "little bit different because right now I end up with a different kind of payment",
    "start": "1707200",
    "end": "1714679"
  },
  {
    "text": "and when we initially designed the stuff we assumed that we're the only one that",
    "start": "1714679",
    "end": "1721320"
  },
  {
    "text": "there won't be any different payment types and so of course right now a",
    "start": "1721320",
    "end": "1727039"
  },
  {
    "text": "payment type has been added to this so we might need to change that service a",
    "start": "1727039",
    "end": "1732440"
  },
  {
    "text": "little bit so also still to listen to these events but only process those events which has the right payment type",
    "start": "1732440",
    "end": "1739480"
  },
  {
    "text": "in there um if we are lucky and we assume or in initial design we already",
    "start": "1739480",
    "end": "1746399"
  },
  {
    "text": "anticipate that there might be different alternative options to process some kind of event we can all already built that",
    "start": "1746399",
    "end": "1755200"
  },
  {
    "text": "in so we say oh credit card payment we think that there might come other types",
    "start": "1755200",
    "end": "1761960"
  },
  {
    "text": "of payments later on then we would have added a payment uh a payment type into",
    "start": "1761960",
    "end": "1768559"
  },
  {
    "text": "the event data and this would only have processed the ones where credit cards in",
    "start": "1768559",
    "end": "1775919"
  },
  {
    "text": "there and then we wouldn't have needed to change that one but we assume we weren't that smart before but that's",
    "start": "1775919",
    "end": "1782000"
  },
  {
    "text": "basically it nothing else changed PayPal now it's straightforward let's just add it as a",
    "start": "1782000",
    "end": "1788600"
  },
  {
    "text": "search type music library same story maybe we have to",
    "start": "1788600",
    "end": "1796600"
  },
  {
    "text": "change the warehouse service a little little bit and then we add the additional delivery type so the music",
    "start": "1796600",
    "end": "1803200"
  },
  {
    "text": "library service which unlocks um the items or makes them uh available for us",
    "start": "1803200",
    "end": "1810159"
  },
  {
    "text": "and this we are smarter now so we say it's a digital asset provided and send",
    "start": "1810159",
    "end": "1816519"
  },
  {
    "text": "out the information with that invent and the notification server simply picks that up so this one does not need to",
    "start": "1816519",
    "end": "1823480"
  },
  {
    "text": "know about any email notifications or anything like that and yeah the rest",
    "start": "1823480",
    "end": "1829880"
  },
  {
    "text": "digital video library straightforward ebook Library also",
    "start": "1829880",
    "end": "1836159"
  },
  {
    "text": "straightforward now and also the bonus card yeah we have it in here so it's a",
    "start": "1836159",
    "end": "1843760"
  },
  {
    "text": "very different design and if you think about the way your services are sliced",
    "start": "1843760",
    "end": "1849360"
  },
  {
    "text": "here and there it's quite different isn't it so a yeah forgot one I mean we had the",
    "start": "1849360",
    "end": "1858120"
  },
  {
    "text": "speak coordination logic in the initial design yeah now I got you I got you with your synchronous design um because",
    "start": "1858120",
    "end": "1866760"
  },
  {
    "text": "what's going to happen if this flow of event doesn't go all all through to the",
    "start": "1866760",
    "end": "1873720"
  },
  {
    "text": "end if some of the service get stuck or fails or whatever goes wrong some",
    "start": "1873720",
    "end": "1879799"
  },
  {
    "text": "technical error and so on so don't we need some kind of coordination in here so where is it it",
    "start": "1879799",
    "end": "1888679"
  },
  {
    "text": "and yeah we need it so short story is we",
    "start": "1888679",
    "end": "1894080"
  },
  {
    "text": "need it so the services just listen to their events try to make sure that they",
    "start": "1894080",
    "end": "1899639"
  },
  {
    "text": "get that job done completely or not or not at all and that's basically it and",
    "start": "1899639",
    "end": "1905080"
  },
  {
    "text": "then send out the right appropriate event um if they were successful or not",
    "start": "1905080",
    "end": "1910679"
  },
  {
    "text": "um but we need some kind of supervisor on top of that which listens",
    "start": "1910679",
    "end": "1916159"
  },
  {
    "text": "to the events and makes sure or recognizes if some events just get lost",
    "start": "1916159",
    "end": "1921440"
  },
  {
    "text": "or get stuck or anything like that so if some chain isn't going to get completed",
    "start": "1921440",
    "end": "1927399"
  },
  {
    "text": "because some service has a problem and then taking the right counter measures",
    "start": "1927399",
    "end": "1932880"
  },
  {
    "text": "like rescheduling the events and so on and maybe making sure up before that to",
    "start": "1932880",
    "end": "1941279"
  },
  {
    "text": "um fix the error which caused that so usually these kinds of Supervisors are",
    "start": "1941279",
    "end": "1946600"
  },
  {
    "text": "on top of parts of the services you might have a whole supervisor tree up on",
    "start": "1946600",
    "end": "1951960"
  },
  {
    "text": "top of that and um it it listens to the events and it also listens to error",
    "start": "1951960",
    "end": "1957480"
  },
  {
    "text": "information which you usually Spawn from the services so um you can go into AKA",
    "start": "1957480",
    "end": "1964240"
  },
  {
    "text": "and look into that or inong or some other systems where you will see that how it's built up but yeah you have it",
    "start": "1964240",
    "end": "1970600"
  },
  {
    "text": "but it's encapsulated so the whole coordination logic is outside the business services which is a core point",
    "start": "1970600",
    "end": "1977159"
  },
  {
    "text": "in here so what did we see here the findings so",
    "start": "1977159",
    "end": "1983159"
  },
  {
    "start": "1981000",
    "end": "2091000"
  },
  {
    "text": "it's a sort of a go with Flow Design so I like to call it this way and the",
    "start": "1983159",
    "end": "1988679"
  },
  {
    "text": "services in the domain are really decoupled in here so no service needs to",
    "start": "1988679",
    "end": "1994799"
  },
  {
    "text": "know anything about the other services so the do the knowledge about how it all",
    "start": "1994799",
    "end": "2001000"
  },
  {
    "text": "fits together is outside the services we have very short activation",
    "start": "2001000",
    "end": "2006080"
  },
  {
    "text": "path in terms that uh um the um checkout process so the online shop just sends",
    "start": "2006080",
    "end": "2011720"
  },
  {
    "text": "out this one event and then it's done basically so it doesn't care about how long it takes the other stuff of course",
    "start": "2011720",
    "end": "2018120"
  },
  {
    "text": "we need some kind a different kind of customer communication for that to deal with that then very high responsive",
    "start": "2018120",
    "end": "2024519"
  },
  {
    "text": "right availability because we don't make any assumption about availability of other services in there we coordinate a",
    "start": "2024519",
    "end": "2031360"
  },
  {
    "text": "different way so that's a difference so it's no orchestration so Central coordination it's distributed",
    "start": "2031360",
    "end": "2037000"
  },
  {
    "text": "coordination so what we call choreog choreography which means every service",
    "start": "2037000",
    "end": "2042480"
  },
  {
    "text": "needs knows how it has to behave on which service on which events it um",
    "start": "2042480",
    "end": "2048079"
  },
  {
    "text": "listen which events it listens for and which events it sends out but it doesn't",
    "start": "2048079",
    "end": "2053240"
  },
  {
    "text": "care about the rest it just knows how to behave in its place basically and instead um we have that",
    "start": "2053240",
    "end": "2061520"
  },
  {
    "text": "functional compos um compensation logic outside the services in a supervision",
    "start": "2061520",
    "end": "2067240"
  },
  {
    "text": "service basically and we can quite easily integrate services without touching anything of the already",
    "start": "2067240",
    "end": "2074079"
  },
  {
    "text": "implemented system as I said before a little bit unfair a little bit oversimplified especially on the request",
    "start": "2074079",
    "end": "2080800"
  },
  {
    "text": "response side but helpful to understand how it how the basic idea is how it all",
    "start": "2080800",
    "end": "2088358"
  },
  {
    "text": "works so to wrap up that long example comparing the",
    "start": "2088359",
    "end": "2096358"
  },
  {
    "start": "2091000",
    "end": "2324000"
  },
  {
    "text": "paradigms we have two very different kinds of decomposition of functional decomposition so",
    "start": "2096359",
    "end": "2104280"
  },
  {
    "text": "the communication Paradigm drove how we did the functional decomposition which",
    "start": "2104280",
    "end": "2111000"
  },
  {
    "text": "is very important difference so we ended up with completely different designs for the services and what's in there so",
    "start": "2111000",
    "end": "2119920"
  },
  {
    "text": "coordination we had that orchestration which is built into the services we could also externalize from the services",
    "start": "2119920",
    "end": "2126240"
  },
  {
    "text": "but still it would be orchestration versus choreography and um event",
    "start": "2126240",
    "end": "2131760"
  },
  {
    "text": "chains we had um the transaction handling which is the business transaction handling I'm not talking",
    "start": "2131760",
    "end": "2138520"
  },
  {
    "text": "about technical transactions so never try to coordinate in the distributed system never try to make two-phase",
    "start": "2138520",
    "end": "2145040"
  },
  {
    "text": "commits or anything like that across Services that's a very bad idea so do that on a business level and stick to",
    "start": "2145040",
    "end": "2154280"
  },
  {
    "text": "transactions within one service otherwise probably your design",
    "start": "2154280",
    "end": "2160880"
  },
  {
    "text": "is smelly at least and so build and business",
    "start": "2160880",
    "end": "2166839"
  },
  {
    "text": "transaction handling versus uh external supervision error handling is also different um buildin error handling",
    "start": "2166839",
    "end": "2173520"
  },
  {
    "text": "versus externalized so we all we all these concerns we facture out in this",
    "start": "2173520",
    "end": "2178599"
  },
  {
    "text": "other design separation of concerns yeah sure we have several concerns which we",
    "start": "2178599",
    "end": "2184000"
  },
  {
    "text": "put into one Serv in one design and just one in the other design here in encapsulation um yeah you have this",
    "start": "2184000",
    "end": "2191160"
  },
  {
    "text": "domain logic usually leaking through several Services uh to through several levels upstream and downstream versus um",
    "start": "2191160",
    "end": "2198560"
  },
  {
    "text": "The Domain logic in one place and everything else factor out and complexity of both parts I mean it looks",
    "start": "2198560",
    "end": "2206680"
  },
  {
    "text": "like the right side is the winner which isn't so it's a draw basically in on the",
    "start": "2206680",
    "end": "2212880"
  },
  {
    "text": "one place you have this which looks a little bit easier to grasp to comp hand",
    "start": "2212880",
    "end": "2218000"
  },
  {
    "text": "because you don't have this big graph of events which flow around and Trigger",
    "start": "2218000",
    "end": "2224520"
  },
  {
    "text": "here and there and there some Services which you still have to get into your mind and to understand before you can",
    "start": "2224520",
    "end": "2230680"
  },
  {
    "text": "change anything in a reasonable way and on the other hand you have these overloaded big um Services which have",
    "start": "2230680",
    "end": "2238160"
  },
  {
    "text": "probably too much logic in it after a while so it's one of them is easier to",
    "start": "2238160",
    "end": "2245680"
  },
  {
    "text": "understand and to graph they have different tra tradeoffs but the core in here is to",
    "start": "2245680",
    "end": "2253160"
  },
  {
    "text": "understand and now I go back to my architectural point of view it's the",
    "start": "2253160",
    "end": "2259000"
  },
  {
    "text": "different communication paradigms and where just two of them there are more than these two paradigms lead to",
    "start": "2259000",
    "end": "2265760"
  },
  {
    "text": "different service designs give you different options how to slice your services or the from a functional point",
    "start": "2265760",
    "end": "2272520"
  },
  {
    "text": "of view and as an architect I like options I don't like to give away",
    "start": "2272520",
    "end": "2279240"
  },
  {
    "text": "options too early so there is a point where I have to decide where I have to",
    "start": "2279240",
    "end": "2286400"
  },
  {
    "text": "go either either this way or that way but we should try to find the last",
    "start": "2286400",
    "end": "2292119"
  },
  {
    "text": "responsible moment before we give away options so we shouldn't give it away before we even",
    "start": "2292119",
    "end": "2298040"
  },
  {
    "text": "have started and know how our problem domain looks like because maybe a go",
    "start": "2298040",
    "end": "2303280"
  },
  {
    "text": "with a Flow Design is a better idea than a top down slicing in other places might",
    "start": "2303280",
    "end": "2308760"
  },
  {
    "text": "look different so just a few more thoughts before we wrap up so related errors",
    "start": "2308760",
    "end": "2317079"
  },
  {
    "text": "limitations I mean can we mix communication paradigms I mean the",
    "start": "2317079",
    "end": "2322800"
  },
  {
    "text": "answer is obvious yeah we can it's it's it's always an option of course I mean",
    "start": "2322800",
    "end": "2328800"
  },
  {
    "start": "2324000",
    "end": "2542000"
  },
  {
    "text": "that's what we usually do in most places like um and um we either make it explicit or",
    "start": "2328800",
    "end": "2336359"
  },
  {
    "text": "implicit so if we take for instance this idea of the self-contained systems it",
    "start": "2336359",
    "end": "2341599"
  },
  {
    "text": "works with request response Paradigm but it says don't try to go out to different",
    "start": "2341599",
    "end": "2347560"
  },
  {
    "text": "Services while you have the actual function call or this actual functional request so basically we go out in an",
    "start": "2347560",
    "end": "2355440"
  },
  {
    "text": "asynchronous fashion to prefetch the data into that and have it in there gives us different tradeoffs but um",
    "start": "2355440",
    "end": "2362440"
  },
  {
    "text": "again we mix the Paradigm we can mix it also in here and maybe we could tweak the initial design which was a little",
    "start": "2362440",
    "end": "2368119"
  },
  {
    "text": "bit naive those synchronous request response design into a way that it really makes a lot of sense by mixing",
    "start": "2368119",
    "end": "2374800"
  },
  {
    "text": "synchronous and asynchronous um Communication in there and we would end up with another",
    "start": "2374800",
    "end": "2381960"
  },
  {
    "text": "different set of functional decomposition of our services which it would end up with",
    "start": "2381960",
    "end": "2387880"
  },
  {
    "text": "then so it's a trade-off yeah as I told you no black no white sorry so um if you",
    "start": "2387880",
    "end": "2395520"
  },
  {
    "text": "love um just having black or white right or one and zero or something like that or right and wrong um don't become an",
    "start": "2395520",
    "end": "2402599"
  },
  {
    "text": "architect so no matter if it looks good on your business card in your company",
    "start": "2402599",
    "end": "2407920"
  },
  {
    "text": "don't do that if you like black or white so it's gray it's tradeoffs it's only",
    "start": "2407920",
    "end": "2413920"
  },
  {
    "text": "dealing options and tradeoffs that's basically all you're doing all the day all the time and so yeah here's a trade",
    "start": "2413920",
    "end": "2421400"
  },
  {
    "text": "off between the design Purity which makes thinking a little bit easier and",
    "start": "2421400",
    "end": "2426640"
  },
  {
    "text": "the solution mismatch complexity which I talked about in the beginning so what's the best for",
    "start": "2426640",
    "end": "2432599"
  },
  {
    "text": "you so here's a very very simple puristic probably way too uh simple that",
    "start": "2432599",
    "end": "2438760"
  },
  {
    "text": "you can start with so if you have a single functionality which has some kind of All or Nothing properties within a",
    "start": "2438760",
    "end": "2444480"
  },
  {
    "text": "single domain synchronous request response is perfectly fine also splitting it up on a distributed system",
    "start": "2444480",
    "end": "2451640"
  },
  {
    "text": "if you have a lot of functionalities more of process of flow characteristic on across multiple domain means um",
    "start": "2451640",
    "end": "2458280"
  },
  {
    "text": "probably asynchronous messaging is a better approach to start with um as I",
    "start": "2458280",
    "end": "2463599"
  },
  {
    "text": "said before it's a very simple start huris stic um probably a lot smarter",
    "start": "2463599",
    "end": "2470200"
  },
  {
    "text": "than I to make a really usable cist uh heuristic out of that one so be careful",
    "start": "2470200",
    "end": "2478240"
  },
  {
    "text": "about that then we have these places where the",
    "start": "2478240",
    "end": "2484040"
  },
  {
    "text": "Paradigm is already set you're all doing X so it's company policy or the",
    "start": "2484040",
    "end": "2490480"
  },
  {
    "text": "architect this other kind of architect from the Ivory Tower already decided about that or whatever or we're doing",
    "start": "2490480",
    "end": "2496680"
  },
  {
    "text": "that all the time so we we doing that like as long as we can remember why",
    "start": "2496680",
    "end": "2501880"
  },
  {
    "text": "should we change now and um yeah basically you can emulate the",
    "start": "2501880",
    "end": "2509480"
  },
  {
    "text": "other Paradigm so simulate emulate so you can of course simulate synchronous request",
    "start": "2509480",
    "end": "2516640"
  },
  {
    "text": "response on top of an asynchronous messaging and also the other way around",
    "start": "2516640",
    "end": "2521839"
  },
  {
    "text": "so some kind of asynchronous commands on top on a synchronous request response just think about the HTTP um 202 so they",
    "start": "2521839",
    "end": "2529079"
  },
  {
    "text": "accept it no so yeah so we don't wait for the response we just take it and",
    "start": "2529079",
    "end": "2534760"
  },
  {
    "text": "that's it but it might help you with that service design mismatch topic a",
    "start": "2534760",
    "end": "2541559"
  },
  {
    "text": "little bit still I think it's a lame compromise I mean we all remember how",
    "start": "2541559",
    "end": "2547440"
  },
  {
    "start": "2542000",
    "end": "2573000"
  },
  {
    "text": "great soap on top of HTTP was and that's basically I like it isn't",
    "start": "2547440",
    "end": "2554599"
  },
  {
    "text": "it second last one what about user interactions I mean users always request",
    "start": "2555599",
    "end": "2561720"
  },
  {
    "text": "response aren't they I mean they send out a request to me and they want to have an response immediately so aren't",
    "start": "2561720",
    "end": "2567400"
  },
  {
    "text": "we bound to request response already from that if we have interactive",
    "start": "2567400",
    "end": "2573000"
  },
  {
    "start": "2573000",
    "end": "2671000"
  },
  {
    "text": "systems and yeah I mean there are several options to deal with",
    "start": "2573000",
    "end": "2579720"
  },
  {
    "text": "that web sofits become available meanwhile on a broader range it",
    "start": "2579720",
    "end": "2586119"
  },
  {
    "text": "still probably sucks in many places but it's getting better than it was two",
    "start": "2586119",
    "end": "2591800"
  },
  {
    "text": "years ago or so if you have that you have all the options in place that you need um if you don't have that you could",
    "start": "2591800",
    "end": "2598599"
  },
  {
    "text": "for instance use mediator pattern with timeout so I sent I get a synchronous request I send off an asynchronous event",
    "start": "2598599",
    "end": "2607440"
  },
  {
    "text": "or message and build in a Timeout how long I want to wait for some kind of",
    "start": "2607440",
    "end": "2612960"
  },
  {
    "text": "acknowledge or for an entry for an end event from a flow and if it takes too",
    "start": "2612960",
    "end": "2619400"
  },
  {
    "text": "long um I just go back to the user and tell them um sorry I wasn't able to",
    "start": "2619400",
    "end": "2626440"
  },
  {
    "text": "fulfill your request right in time but here is a status page where you can look up how far it is so what's the state of",
    "start": "2626440",
    "end": "2633200"
  },
  {
    "text": "your current request so that's usually a solution that you can use for that and",
    "start": "2633200",
    "end": "2638280"
  },
  {
    "text": "you can use a backend for frontend service to implement that it's it's not",
    "start": "2638280",
    "end": "2643880"
  },
  {
    "text": "perfect but it's good enough to translate the user experience or",
    "start": "2643880",
    "end": "2651520"
  },
  {
    "text": "decouple the user experience from the implementation that you use in the back end if you do it this way and the last",
    "start": "2651520",
    "end": "2658839"
  },
  {
    "text": "thing is do it always also make sense inside process boundaries are always",
    "start": "2658839",
    "end": "2665280"
  },
  {
    "text": "talked about distributed systems at the moment um so single process",
    "start": "2665280",
    "end": "2672000"
  },
  {
    "start": "2671000",
    "end": "2780000"
  },
  {
    "text": "and have this process context in mind as I said before if usually in a single",
    "start": "2672000",
    "end": "2678720"
  },
  {
    "text": "process single threat context it's if you're Deb or if the thing that your calling is dead you're also dead so",
    "start": "2678720",
    "end": "2685839"
  },
  {
    "text": "doesn't make a lot of sense so without threats it doesn't make a lot of sense to go for some asynchronous kind of",
    "start": "2685839",
    "end": "2692319"
  },
  {
    "text": "messaging so uh I mean you even would have to implement a single threaded",
    "start": "2692319",
    "end": "2697400"
  },
  {
    "text": "schedul and I don't see a lot of sense there might be special cases but usually not with threats yeah it can help you I",
    "start": "2697400",
    "end": "2704240"
  },
  {
    "text": "mean that's basically what you also have in AKA as long it runs in in a single virtual machine um then you have lots of",
    "start": "2704240",
    "end": "2712400"
  },
  {
    "text": "threats or several threads which are used to SK um from a Schuler from an actor scheduler which schedules all the",
    "start": "2712400",
    "end": "2719480"
  },
  {
    "text": "actors on the different threads and it gives you a very different Paradigm than just request response um with all these",
    "start": "2719480",
    "end": "2726000"
  },
  {
    "text": "Java Primitives um for coordination which you would use otherwise um if you go multi-threading with a different",
    "start": "2726000",
    "end": "2733960"
  },
  {
    "text": "model OKAY a lot of stuff as I said before I failed miserably in giving you",
    "start": "2733960",
    "end": "2741960"
  },
  {
    "text": "a easy to grasp light whatever talk and",
    "start": "2741960",
    "end": "2747440"
  },
  {
    "text": "so let's wrap up I talked about the one size fits all trap and giving away options too early I",
    "start": "2747440",
    "end": "2756599"
  },
  {
    "text": "talked about communication paradigms different options that you have and this",
    "start": "2756599",
    "end": "2762000"
  },
  {
    "text": "other kind of trap I had a big example in the middle part which showed you in",
    "start": "2762000",
    "end": "2768520"
  },
  {
    "text": "quite Extreme Ways what kind of service designs or functional designs you end up",
    "start": "2768520",
    "end": "2774160"
  },
  {
    "text": "with if you use different paradigms and this influence and the",
    "start": "2774160",
    "end": "2780559"
  },
  {
    "start": "2780000",
    "end": "3178000"
  },
  {
    "text": "bottom line of all of this is this core idea different communication paradigms",
    "start": "2780559",
    "end": "2787440"
  },
  {
    "text": "lead to very different service designs functional service designs that you can",
    "start": "2787440",
    "end": "2793200"
  },
  {
    "text": "use know your options use your options don't give them up too early prematurely",
    "start": "2793200",
    "end": "2800960"
  },
  {
    "text": "so and that's basically what I wanted to give you um or tell you in this talk and",
    "start": "2800960",
    "end": "2807599"
  },
  {
    "text": "or share with you and if that has been all way too much and you gave up in the",
    "start": "2807599",
    "end": "2813079"
  },
  {
    "text": "middle of my blah blah blah blah blah blah blah um at least keep that one in mind so",
    "start": "2813079",
    "end": "2819760"
  },
  {
    "text": "there's no one siiz fits-all solution that's what I got for you basically and",
    "start": "2819760",
    "end": "2826480"
  },
  {
    "text": "so don't forget to rate and thanks for your patience",
    "start": "2826480",
    "end": "2831880"
  },
  {
    "text": "first thanks a lot for the talk um are there any questions so right here in the",
    "start": "2837520",
    "end": "2844240"
  },
  {
    "text": "front hi uh can you go back to the event slide where you show all the events and",
    "start": "2844240",
    "end": "2849880"
  },
  {
    "text": "the services on event base um just let me try to not this one the",
    "start": "2849880",
    "end": "2857559"
  },
  {
    "text": "other one please yeah give me a second to find it there are way too many slides I don't know who",
    "start": "2857559",
    "end": "2863440"
  },
  {
    "text": "put that many slides in there um that one yeah um so when I see this I could",
    "start": "2863440",
    "end": "2870599"
  },
  {
    "text": "imagine that every service can be written in language blah blah blah I don't care and how would the event look",
    "start": "2870599",
    "end": "2878400"
  },
  {
    "text": "like um for example is it like a job queue or how you emit any event that the other services listen to it and can you",
    "start": "2878400",
    "end": "2885720"
  },
  {
    "text": "explain more about the event by themselves if you if you use events you",
    "start": "2885720",
    "end": "2891800"
  },
  {
    "text": "usually have some kind of dump communication infrastructure below that where you can submit events to some kind",
    "start": "2891800",
    "end": "2898720"
  },
  {
    "text": "of event queue system so um usually kind of a message bus system um which is um",
    "start": "2898720",
    "end": "2905640"
  },
  {
    "text": "either an active mq or rabbit mq or a kfka if you want to go with the new cool",
    "start": "2905640",
    "end": "2911119"
  },
  {
    "text": " and so on um nothing against Kafka Kafka is a great solution but it's a beast in production so uh be careful",
    "start": "2911119",
    "end": "2919160"
  },
  {
    "text": "before you just take it because it's cool cool isn't the right motivation for picking Kafka and um or something like",
    "start": "2919160",
    "end": "2927319"
  },
  {
    "text": "that and the events so basically um I usually would model events in a way that",
    "start": "2927319",
    "end": "2933119"
  },
  {
    "text": "I put part of the payload into that that could be just a piece of um Json or something like that so it's it's always",
    "start": "2933119",
    "end": "2941000"
  },
  {
    "text": "got a type it might it has an ID and it has got payload information so then the",
    "start": "2941000",
    "end": "2946040"
  },
  {
    "text": "follow-up question to this is um if some information getting lost because um",
    "start": "2946040",
    "end": "2951160"
  },
  {
    "text": "you're emitting an event some worker is doing the job to I don't know receive the event Etc and it's getting lost yeah",
    "start": "2951160",
    "end": "2959119"
  },
  {
    "text": "how you can uh found the reason why it's get lost so if the if the process just",
    "start": "2959119",
    "end": "2966040"
  },
  {
    "text": "dies um you need to find that out with um",
    "start": "2966040",
    "end": "2971359"
  },
  {
    "text": "monitoring um in some places um you won't be able to really find out the reason quite often the service is able",
    "start": "2971359",
    "end": "2979000"
  },
  {
    "text": "to give you some send you so the supervisor some information and you can program it this way said if it if I got",
    "start": "2979000",
    "end": "2985839"
  },
  {
    "text": "a problem to finish up my job properly just send out an error message to my",
    "start": "2985839",
    "end": "2991680"
  },
  {
    "text": "supervisor and then I give up before I give up if I just die I can't do that so",
    "start": "2991680",
    "end": "2997200"
  },
  {
    "text": "I have to use juristic for that one and say okay if after a certain time this",
    "start": "2997200",
    "end": "3002720"
  },
  {
    "text": "one isn't processed I assume it to be stuck in some place because distributed",
    "start": "3002720",
    "end": "3008000"
  },
  {
    "text": "systems are probabilistic they're nistic and I try to reschedule that one item",
    "start": "3008000",
    "end": "3013040"
  },
  {
    "text": "potency and so on helps a lot so here's the question from the app",
    "start": "3013040",
    "end": "3018079"
  },
  {
    "text": "and it's actually about this very slide so the question is um it's about the",
    "start": "3018079",
    "end": "3024280"
  },
  {
    "text": "supervisor on top and it says if done wrong that supervisor becomes a single point of failure what one thing can you",
    "start": "3024280",
    "end": "3030960"
  },
  {
    "text": "recommend to avoid that first",
    "start": "3030960",
    "end": "3036280"
  },
  {
    "text": "um read the AKA documentation it's all in there now um",
    "start": "3036480",
    "end": "3041640"
  },
  {
    "text": "basically um build up trees of Supervisors so um you usually also have supervisor for supervisor you make sure",
    "start": "3041640",
    "end": "3048119"
  },
  {
    "text": "that the topmost supervisor is at least a pair of two which make sure that um",
    "start": "3048119",
    "end": "3053799"
  },
  {
    "text": "each other lives so um then um you usually don't end up with a",
    "start": "3053799",
    "end": "3059559"
  },
  {
    "text": "single point of failure still be aware of one thing in distributed systems",
    "start": "3059559",
    "end": "3065839"
  },
  {
    "text": "there is no perfect solution so all Solutions in a distributed system",
    "start": "3065839",
    "end": "3071319"
  },
  {
    "text": "somehow have problems some have more some have few",
    "start": "3071319",
    "end": "3077640"
  },
  {
    "text": "fewer so one final question so do you want",
    "start": "3077640",
    "end": "3083160"
  },
  {
    "text": "it um the beauty of that is a message design can you comment how to come up",
    "start": "3083160",
    "end": "3089200"
  },
  {
    "text": "with a good message design how you design your messages I mean for fulfillment it's",
    "start": "3089200",
    "end": "3096319"
  },
  {
    "text": "pretty so the question was around uh how to do the message design and what steps",
    "start": "3100200",
    "end": "3105359"
  },
  {
    "text": "to take to come up with a good message design oh try and try and retry and",
    "start": "3105359",
    "end": "3111440"
  },
  {
    "text": "reshape and reshape there is no easy solution so designing a good solution is still art and that's basically the most",
    "start": "3111440",
    "end": "3121319"
  },
  {
    "text": "Troublesome thing that I've found out in the last 30 years that I'm around with it so coming up with a good solution and",
    "start": "3121319",
    "end": "3128920"
  },
  {
    "text": "a good design a good functional design is an our so things like domain driven designs can help you to find these",
    "start": "3128920",
    "end": "3135440"
  },
  {
    "text": "slicing and also domain driven designs can help you to find this kind of event",
    "start": "3135440",
    "end": "3140960"
  },
  {
    "text": "flow or message pass or something like that but it's not a silver bullet so",
    "start": "3140960",
    "end": "3146119"
  },
  {
    "text": "it's lot of brains lot of thinking lots of exploration and lots of bloody noses",
    "start": "3146119",
    "end": "3151319"
  },
  {
    "text": "because you just hit the wall again at least that's what happens to me all the",
    "start": "3151319",
    "end": "3156440"
  },
  {
    "text": "time so I'm honest about that I think I think those were quite nice final words",
    "start": "3156440",
    "end": "3162280"
  },
  {
    "text": "so thanks a lot again and uh thanks a lot for visiting the part",
    "start": "3162280",
    "end": "3169000"
  }
]