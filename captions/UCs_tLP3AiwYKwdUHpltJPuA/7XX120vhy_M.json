[
  {
    "text": "[Music] so quick show of hands who here has done",
    "start": "6990",
    "end": "15129"
  },
  {
    "text": "any work on like a surrealist paradigm using AWS lambda or other function as a",
    "start": "15129",
    "end": "22390"
  },
  {
    "text": "service right on and who here has done any work in blockchain or distributed",
    "start": "22390",
    "end": "29740"
  },
  {
    "text": "ledger right on okay well so I'm gonna bring both those topics together",
    "start": "29740",
    "end": "36750"
  },
  {
    "text": "something to know about distributed ledger is on the Gartner hype cycle it's",
    "start": "36750",
    "end": "43659"
  },
  {
    "text": "at the peak right now but it's it's buddy blockchain is in the middle of the",
    "start": "43659",
    "end": "49389"
  },
  {
    "text": "trough of disillusionment so we're gonna kick it while it's down and talk about",
    "start": "49389",
    "end": "55479"
  },
  {
    "text": "just doing distributed ledger without the blockchain server list is also in a",
    "start": "55479",
    "end": "60489"
  },
  {
    "text": "pretty good position on the hype cycle so this might be the most buzzword e of all the talks today my name is Chris",
    "start": "60489",
    "end": "67210"
  },
  {
    "text": "Anderson I'm the director of product at fauna and whew my background is as a",
    "start": "67210",
    "end": "77740"
  },
  {
    "text": "co-founder of Couchbase and a technical contributor to patchy couchdb so the",
    "start": "77740",
    "end": "87160"
  },
  {
    "text": "common thread through all that is building technologies that are you know super compelling easy and fun for",
    "start": "87160",
    "end": "93160"
  },
  {
    "text": "developers to be more productive with I'm Jake Reyes on Twitter and you can",
    "start": "93160",
    "end": "103260"
  },
  {
    "text": "reach out to me there or email me at chris at fauna comm whoo so my screen is",
    "start": "103440",
    "end": "114730"
  },
  {
    "text": "not twitching so the blockchain it's a",
    "start": "114730",
    "end": "120100"
  },
  {
    "text": "data structure it's essentially a linked list where every item in the list has a",
    "start": "120100",
    "end": "126640"
  },
  {
    "text": "pointer to the previous item and it's not just any pointer it's a pointer with a cryptographic signature so what that",
    "start": "126640",
    "end": "132700"
  },
  {
    "text": "means is that for any given head of that chain you can validate that the history",
    "start": "132700",
    "end": "138939"
  },
  {
    "text": "all aligned and works together so it's not",
    "start": "138939",
    "end": "143990"
  },
  {
    "text": "particularly useful in and of itself except for to validate you know the history of data set now blockchain has",
    "start": "143990",
    "end": "153260"
  },
  {
    "text": "been combined with some other stuff proof of work specifically to make",
    "start": "153260",
    "end": "158750"
  },
  {
    "text": "fighting over who gets to decide on that next head of the chain into the sort of",
    "start": "158750",
    "end": "164570"
  },
  {
    "text": "process that means that that the whole data structure becomes immutable because once you've added a few links to the",
    "start": "164570",
    "end": "171380"
  },
  {
    "text": "front any deep link the chances of it changing is very slim so the blockchain",
    "start": "171380",
    "end": "179920"
  },
  {
    "text": "doesn't really you know get us much",
    "start": "179920",
    "end": "185209"
  },
  {
    "text": "except for some guarantees about immutability if if you wanted to build a",
    "start": "185209",
    "end": "194090"
  },
  {
    "text": "distributed ledger you know you might be able to you know do it just fine without",
    "start": "194090",
    "end": "199820"
  },
  {
    "text": "the blockchain and so hopefully I don't know about you but myself I think also",
    "start": "199820",
    "end": "207440"
  },
  {
    "text": "that the the Bitcoin and blockchain world could be more imaginative is these",
    "start": "207440",
    "end": "214820"
  },
  {
    "text": "things just look like the money that we're used to so but that's that's on a side either way let's see what we can",
    "start": "214820",
    "end": "222049"
  },
  {
    "text": "get done without the blockchain and the hashtag for today's talk is no",
    "start": "222049",
    "end": "228410"
  },
  {
    "text": "blockchain so if you want to if you want to tweet about that then we can all we",
    "start": "228410",
    "end": "234500"
  },
  {
    "text": "can all join the hype cycle together so",
    "start": "234500",
    "end": "239600"
  },
  {
    "text": "a ledger alleges a very simple accounting concept it's just the idea of a table of transactions you know from an",
    "start": "239600",
    "end": "247549"
  },
  {
    "text": "account to another account and bankers can look over the ledger to see who has",
    "start": "247549",
    "end": "253489"
  },
  {
    "text": "how much money so ledger is an old technology it's kind of one of the",
    "start": "253489",
    "end": "258859"
  },
  {
    "text": "reasons that humans invented writing so it's it shouldn't be too surprising but",
    "start": "258859",
    "end": "266870"
  },
  {
    "text": "the question is sort of you know how can we get from there to a distributed",
    "start": "266870",
    "end": "272210"
  },
  {
    "text": "ledger without a blockchain so what do we need is we need a consensus we need all the",
    "start": "272210",
    "end": "279620"
  },
  {
    "text": "replication sites of the ledger to agree on the same data and if we have that",
    "start": "279620",
    "end": "286699"
  },
  {
    "text": "then we've got a distributed ledger there's nothing in the definition of a distributed ledger that says it has to",
    "start": "286699",
    "end": "293270"
  },
  {
    "text": "be immutable there's nothing that says it has to use a blockchain it just needs to be the same account balances at all",
    "start": "293270",
    "end": "300979"
  },
  {
    "text": "the replication sites so with Bitcoin",
    "start": "300979",
    "end": "306860"
  },
  {
    "text": "everyone who has a copy of you know the full Bitcoin database has has the ledger",
    "start": "306860",
    "end": "312879"
  },
  {
    "text": "in the architecture that I'll be talking about anyone who's running a database",
    "start": "312879",
    "end": "319159"
  },
  {
    "text": "cluster has the ledger so a distributed",
    "start": "319159",
    "end": "325249"
  },
  {
    "text": "ledger I think that the it doesn't like photographs it's just too much data but",
    "start": "325249",
    "end": "330939"
  },
  {
    "text": "a distributed ledger again will be where",
    "start": "330939",
    "end": "336349"
  },
  {
    "text": "we can all agree on the same column of numbers no matter you know which site",
    "start": "336349",
    "end": "341539"
  },
  {
    "text": "we're at so if we're gonna add a transaction in one place we need to know for sure that it's gonna appear in all",
    "start": "341539",
    "end": "347779"
  },
  {
    "text": "the other places at the same time so I'll talk about how to build this",
    "start": "347779",
    "end": "354139"
  },
  {
    "text": "distributed ledger outside of the blockchain world and the idea that it",
    "start": "354139",
    "end": "360770"
  },
  {
    "text": "gives me that you know it might be kind of obvious at this point because you've",
    "start": "360770",
    "end": "367009"
  },
  {
    "text": "talked to me at the booth but this ledger that we looked at just the plain simple ledger it looks like a regular",
    "start": "367009",
    "end": "373279"
  },
  {
    "text": "database application it just looks like a database table and it turns out that",
    "start": "373279",
    "end": "379069"
  },
  {
    "text": "when you go look at how people implemented Ledger's you know for the history of computers until now they use",
    "start": "379069",
    "end": "386419"
  },
  {
    "text": "the database it's the right tool for the job so my idea is like well if you have",
    "start": "386419",
    "end": "392599"
  },
  {
    "text": "a distributed database maybe a distributed ledger there's just a database application maybe the ledger",
    "start": "392599",
    "end": "399529"
  },
  {
    "text": "itself doesn't need to be concerned with the distribution mechanism so we'll talk",
    "start": "399529",
    "end": "406399"
  },
  {
    "text": "about how we can achieve that and specifically in the context of fauna DB so our logo",
    "start": "406399",
    "end": "414020"
  },
  {
    "text": "is a hummingbird but I like to look at real hummingbirds so this is a you know just a chance for us all to be happy",
    "start": "414020",
    "end": "421220"
  },
  {
    "text": "about the glory of nature and relax and look at hummingbird now how are we going",
    "start": "421220",
    "end": "431150"
  },
  {
    "text": "to build this distributed ledger on top of a distributed database well kind of",
    "start": "431150",
    "end": "436639"
  },
  {
    "text": "before we go actually before we get into that so what I did is I thought hey this",
    "start": "436639",
    "end": "444020"
  },
  {
    "text": "is a super easy idea like it's just a database application using you know",
    "start": "444020",
    "end": "449889"
  },
  {
    "text": "queries to maintain account balances I'll make a demo and so I made a pet",
    "start": "449889",
    "end": "455120"
  },
  {
    "text": "store application because you know if you're gonna do transactions we all start with a pet store and this this",
    "start": "455120",
    "end": "462229"
  },
  {
    "text": "should be a video of the demo but what and what you would see if the video is",
    "start": "462229",
    "end": "467539"
  },
  {
    "text": "playing is essentially there's multiple players and they all have account balances and you can put an item for",
    "start": "467539",
    "end": "474800"
  },
  {
    "text": "sale and you could buy an item and you know when you buy an item the money goes",
    "start": "474800",
    "end": "480110"
  },
  {
    "text": "from that player from the buyers account to the sellers account and when you you",
    "start": "480110",
    "end": "486889"
  },
  {
    "text": "know try to buy an item and you don't have enough money in your account then you get an insufficient funds error so",
    "start": "486889",
    "end": "493010"
  },
  {
    "text": "it's very simple basic stuff just kind of an e-commerce or banking application",
    "start": "493010",
    "end": "498410"
  },
  {
    "text": "and the the underlying table that",
    "start": "498410",
    "end": "504500"
  },
  {
    "text": "supports it or the underlying you know database looks like this it's a you know",
    "start": "504500",
    "end": "510800"
  },
  {
    "text": "here's the the prices of the purchases and the buyer and the seller we're listed in the table so you can look at",
    "start": "510800",
    "end": "517490"
  },
  {
    "text": "this distributed ledger and browse it like you know like any other data so",
    "start": "517490",
    "end": "526610"
  },
  {
    "text": "this demo is kind of a toy I mean I built it in a weekend it wasn't designed to actually be a fully distributed",
    "start": "526610",
    "end": "533110"
  },
  {
    "text": "ledger application it is distributed but some of the security concerns are not",
    "start": "533110",
    "end": "539390"
  },
  {
    "text": "completely implemented what we'll do in this talk is go look",
    "start": "539390",
    "end": "545570"
  },
  {
    "text": "about how you would take that demo and make it serious so the first thing that we want to do is",
    "start": "545570",
    "end": "552519"
  },
  {
    "text": "take a look and understand how fana DB implements global consensus and what",
    "start": "552519",
    "end": "558950"
  },
  {
    "text": "this means for a distributed ledger application then we're going to look at",
    "start": "558950",
    "end": "564529"
  },
  {
    "text": "the actual transaction query and the code that implements checking account",
    "start": "564529",
    "end": "569930"
  },
  {
    "text": "balances and moving credits from one account to another and changing the ownership of an item and so that's all",
    "start": "569930",
    "end": "576920"
  },
  {
    "text": "run in a single transaction that gets submitted to the fana DB cluster and runs and returns a result and we'll take",
    "start": "576920",
    "end": "583670"
  },
  {
    "text": "a look at that code and then sort of once you've understood the global",
    "start": "583670",
    "end": "589310"
  },
  {
    "text": "consistency and the way that we've implemented the transaction then you'll probably have some security questions",
    "start": "589310",
    "end": "595760"
  },
  {
    "text": "because if you're dealing with real money there's going to be people who are motivated to make your application do",
    "start": "595760",
    "end": "603529"
  },
  {
    "text": "things other than what you hoped it would so I'll talk about the security model like application and object level",
    "start": "603529",
    "end": "611000"
  },
  {
    "text": "security model there's plenty of concerns about encryption at rest or on the wire maybe I can answer questions",
    "start": "611000",
    "end": "618170"
  },
  {
    "text": "later on but this section of the talk will be about the security model as it's",
    "start": "618170",
    "end": "624079"
  },
  {
    "text": "implemented at the the database object level so back to this picture of global",
    "start": "624079",
    "end": "630770"
  },
  {
    "text": "consensus if what we're trying to do is keep these Ledger's in sync",
    "start": "630770",
    "end": "636010"
  },
  {
    "text": "then the architecture that I'm suggesting is we implement each Ledger",
    "start": "636010",
    "end": "642800"
  },
  {
    "text": "as a fana DB cluster so this can be the database in our in our diagram language",
    "start": "642800",
    "end": "649430"
  },
  {
    "text": "for today and what what this will look",
    "start": "649430",
    "end": "655910"
  },
  {
    "text": "like in practice is that so you've got a a group of members of the ledger and you",
    "start": "655910",
    "end": "666829"
  },
  {
    "text": "know maybe this is a good time I was a little distracted earlier what I wanted to say is that if you don't trust the people that you're trying to run a",
    "start": "666829",
    "end": "673130"
  },
  {
    "text": "distributed ledger with don't do it this way this is for when you know who your counterparties are so",
    "start": "673130",
    "end": "678910"
  },
  {
    "text": "like if you had a group of banks that we're all working together to maintain a transaction Clearing House or if you had",
    "start": "678910",
    "end": "687330"
  },
  {
    "text": "you know kind of like essentially any group of actors where you could you know",
    "start": "687330",
    "end": "692980"
  },
  {
    "text": "identify them and address them via the legal system instead of some kind of you",
    "start": "692980",
    "end": "698740"
  },
  {
    "text": "know a blockchain stuff so the members of this consortium of you know members",
    "start": "698740",
    "end": "708100"
  },
  {
    "text": "of the market each one runs a high availability fauna DB cluster so that cluster can be multiple machines and it",
    "start": "708100",
    "end": "716620"
  },
  {
    "text": "could even be in multiple physical sites itself but from a logical standpoint",
    "start": "716620",
    "end": "722680"
  },
  {
    "text": "what we're talking about is each member of the ledger has a copy of the ledger",
    "start": "722680",
    "end": "728110"
  },
  {
    "text": "running in a database and they can interact with it using database queries now within each one of those clusters",
    "start": "728110",
    "end": "739720"
  },
  {
    "text": "which contains the full copy of the data set there's probably more than one",
    "start": "739720",
    "end": "745090"
  },
  {
    "text": "machine so that you can have high availability Fano DB will handle partitioning the data across all the",
    "start": "745090",
    "end": "750730"
  },
  {
    "text": "available machines and adding and removing machines replicating between machines and keeping this whole cluster",
    "start": "750730",
    "end": "758020"
  },
  {
    "text": "in sync with the other clusters so if",
    "start": "758020",
    "end": "763390"
  },
  {
    "text": "your operations DevOps person you might wonder like what do I have to do to in",
    "start": "763390",
    "end": "769840"
  },
  {
    "text": "stand one of these clusters up it's a very simple operationally you have",
    "start": "769840",
    "end": "775780"
  },
  {
    "text": "database that gets delivered as a jar and you launch it in the right packaging",
    "start": "775780",
    "end": "781480"
  },
  {
    "text": "for your environment whether that is containers or Deb or rpm files so that's",
    "start": "781480",
    "end": "789040"
  },
  {
    "text": "kind of the physical architecture of the cluster that will support our",
    "start": "789040",
    "end": "794500"
  },
  {
    "text": "distributed ledger now how do we do consistency across that physical",
    "start": "794500",
    "end": "800170"
  },
  {
    "text": "architecture there's a protocol called Calvin which came out of research at Yale",
    "start": "800170",
    "end": "806230"
  },
  {
    "text": "and what it does it provides acid transactions by creating a distributed",
    "start": "806230",
    "end": "813910"
  },
  {
    "text": "log so in the same way that like the blockchain is a distributed log rather",
    "start": "813910",
    "end": "819910"
  },
  {
    "text": "than enforcing you know those semantics via via that kind of technology we use",
    "start": "819910",
    "end": "825250"
  },
  {
    "text": "the calven protocol which uses ours anyone familiar with raft or Paxos so",
    "start": "825250",
    "end": "832690"
  },
  {
    "text": "these are distributed consensus protocols that allow a group of machines to agree about something with the",
    "start": "832690",
    "end": "839500"
  },
  {
    "text": "minimum number of round trips so we use raft to decide what the next log segment",
    "start": "839500",
    "end": "846790"
  },
  {
    "text": "is there's some some secret sauce about you know making sure that the",
    "start": "846790",
    "end": "851920"
  },
  {
    "text": "transactions are ordered within the log in a way that you know makes sense according to the transactional",
    "start": "851920",
    "end": "857200"
  },
  {
    "text": "requirements so if two people submit transactions to touch the same key at the same time then the system will order",
    "start": "857200",
    "end": "863680"
  },
  {
    "text": "them in one way or the other but once it's ordered then it'll be stable and serializable this is the same sort of",
    "start": "863680",
    "end": "870130"
  },
  {
    "text": "thing that happens inside of your relational databases that you're familiar with so this Kalvin log which has the",
    "start": "870130",
    "end": "878530"
  },
  {
    "text": "transactions in it is where the commit actually occurs so just like when you",
    "start": "878530",
    "end": "884110"
  },
  {
    "text": "commit to Postgres it's an entry written in the right ahead log and if there was",
    "start": "884110",
    "end": "889150"
  },
  {
    "text": "a server crash it could recover from the right ahead log in the same way the",
    "start": "889150",
    "end": "894700"
  },
  {
    "text": "calven log you know runs ahead of the physical storage index storage etc and",
    "start": "894700",
    "end": "901680"
  },
  {
    "text": "everything that happens to the database layer is deterministic based on the transactions that got accepted into the",
    "start": "901680",
    "end": "908140"
  },
  {
    "text": "log so that makes consensus relatively cheap and focused on throughput there's",
    "start": "908140",
    "end": "917010"
  },
  {
    "text": "an alternate model in the marketplace for distributed consensus if you've",
    "start": "917010",
    "end": "923440"
  },
  {
    "text": "heard of Google spanner they use a different protocol which is based on time windows and looking at the right",
    "start": "923440",
    "end": "932080"
  },
  {
    "text": "effects of the transaction after it plays out and retrying things when they conflict so",
    "start": "932080",
    "end": "939149"
  },
  {
    "text": "and practice what that means is that under contention Google spanner style system will slow down on reads whereas",
    "start": "939149",
    "end": "947120"
  },
  {
    "text": "for fauna DB the reads can typically be done from snapshots in the uncoordinated",
    "start": "947120",
    "end": "953699"
  },
  {
    "text": "way but under contention it would slow down under writes so it's a different trade-off I think that the fauna DB",
    "start": "953699",
    "end": "961230"
  },
  {
    "text": "trade-off is better suited for interactive applications since most applications are mostly read so if",
    "start": "961230",
    "end": "969209"
  },
  {
    "text": "you're interested in learning more about the Calvin protocol there's this blog",
    "start": "969209",
    "end": "974939"
  },
  {
    "text": "post on our website that compares spanner versus Calvin and goes through a",
    "start": "974939",
    "end": "980399"
  },
  {
    "text": "lot of the trade-offs and you know kind of finds there's the scenarios at the",
    "start": "980399",
    "end": "985589"
  },
  {
    "text": "limit where one of them would be better than the other in a clearer way and then how those trade-offs apply at run time",
    "start": "985589",
    "end": "993620"
  },
  {
    "text": "so so that's we sort of maybe understand a little bit how we offer this global",
    "start": "994220",
    "end": "1000920"
  },
  {
    "text": "consistency now that we understand that you can have acid transactions at global",
    "start": "1000920",
    "end": "1007339"
  },
  {
    "text": "scale well what are we going to run in order to get the job done so this is the",
    "start": "1007339",
    "end": "1014689"
  },
  {
    "text": "actual transaction code it's meant to look complicated I hope your eyes glazed",
    "start": "1014689",
    "end": "1019850"
  },
  {
    "text": "over a little bit we'll go in and look at it one line at a time where you can actually see what the query language",
    "start": "1019850",
    "end": "1025250"
  },
  {
    "text": "looks like the story that I'm telling here with this is just so that you",
    "start": "1025250",
    "end": "1030529"
  },
  {
    "text": "understand that the complex logic of",
    "start": "1030529",
    "end": "1035569"
  },
  {
    "text": "like an actual rich transaction can be written as a single query and submitted",
    "start": "1035569",
    "end": "1041058"
  },
  {
    "text": "as a final cluster where it'll commit atomically so I'll go through first of",
    "start": "1041059",
    "end": "1047149"
  },
  {
    "text": "all bold the lines that matter as far as telling the story of what's going on and then I'll go through and show you what they do so this first one is just making",
    "start": "1047149",
    "end": "1058640"
  },
  {
    "text": "sure that the item is for sale we can't try to buy something that's not on the for sale list right here we just don't",
    "start": "1058640",
    "end": "1066710"
  },
  {
    "text": "want you to sell it to yourself instead of selling an item to yourself in this",
    "start": "1066710",
    "end": "1072740"
  },
  {
    "text": "we just remove it from sale so those are just a couple of preconditions to be met",
    "start": "1072740",
    "end": "1078679"
  },
  {
    "text": "here's where we actually removed from sale you don't need to worry too much about this except for to see that we're",
    "start": "1078679",
    "end": "1084559"
  },
  {
    "text": "just setting an application flag here this this last bit is the last",
    "start": "1084559",
    "end": "1091820"
  },
  {
    "text": "precondition check we're just making sure that the buyer has enough money in there enough credits and their account",
    "start": "1091820",
    "end": "1097970"
  },
  {
    "text": "to purchase the item if they don't then they'll get an insufficient funds error",
    "start": "1097970",
    "end": "1103690"
  },
  {
    "text": "so the second half of the query is where the transaction is actually written to",
    "start": "1103690",
    "end": "1109820"
  },
  {
    "text": "the objects here we're creating a purchase record it's just essentially",
    "start": "1109820",
    "end": "1116110"
  },
  {
    "text": "you know the receipt of that particular transaction with the buyer or the seller the price and the item so you can look",
    "start": "1116110",
    "end": "1123920"
  },
  {
    "text": "at the history of all the purchases through your system in that same block then we're also updating the buyer by",
    "start": "1123920",
    "end": "1132980"
  },
  {
    "text": "subtracting the item price from their balance and updating the seller by adding the item price to their balance",
    "start": "1132980",
    "end": "1139850"
  },
  {
    "text": "and finally we're marking the item with a new owner",
    "start": "1139850",
    "end": "1145250"
  },
  {
    "text": "so to summarize all that we're ensuring that the item is for sale we're making",
    "start": "1145250",
    "end": "1152000"
  },
  {
    "text": "sure the buyer is not the seller and we're making sure the buyer has enough money then we're writing out a purchase",
    "start": "1152000",
    "end": "1157730"
  },
  {
    "text": "record and we're deducting from the buyers balance adding to the seller's",
    "start": "1157730",
    "end": "1164059"
  },
  {
    "text": "balance and updating the item owner and all that commits atomically so if if you",
    "start": "1164059",
    "end": "1171410"
  },
  {
    "text": "had a very busy buyer and they submitted you know multiple purchase orders and",
    "start": "1171410",
    "end": "1178390"
  },
  {
    "text": "you know simultaneously some of those would succeed but only up until the",
    "start": "1178390",
    "end": "1184280"
  },
  {
    "text": "account balance would be you know deducted below zero by the next one so",
    "start": "1184280",
    "end": "1190370"
  },
  {
    "text": "there's never an ability to spend the money before the system has noticed that",
    "start": "1190370",
    "end": "1197179"
  },
  {
    "text": "you've spent it it's always consistent they're there if you go follow the link",
    "start": "1197179",
    "end": "1204980"
  },
  {
    "text": "to github you can the rest of the application there's the transaction or rather the query that",
    "start": "1204980",
    "end": "1210440"
  },
  {
    "text": "lists all the items that are for sale there's the query that you know lists for each player what items do they have",
    "start": "1210440",
    "end": "1217339"
  },
  {
    "text": "and how much money is in their balance so it's all very standard database interactions you query the database and",
    "start": "1217339",
    "end": "1223309"
  },
  {
    "text": "paint stuff to the UI so here it will",
    "start": "1223309",
    "end": "1229639"
  },
  {
    "text": "look at an example of how the query language actually looks up close so",
    "start": "1229639",
    "end": "1235820"
  },
  {
    "text": "what's going on here is it's actually a query builder this text does not ship to",
    "start": "1235820",
    "end": "1240950"
  },
  {
    "text": "the server this happens at runtime and it creates an abstract syntax tree and",
    "start": "1240950",
    "end": "1246679"
  },
  {
    "text": "the abstract syntax tree they shipped to the server so what that means is that in",
    "start": "1246679",
    "end": "1253969"
  },
  {
    "text": "this particular case the native language is JavaScript but you can write the same",
    "start": "1253969",
    "end": "1259070"
  },
  {
    "text": "query in Ruby and it'll have the same abstract syntax tree and give you the",
    "start": "1259070",
    "end": "1264320"
  },
  {
    "text": "same results so we've got clients available in Java JavaScript Scala which",
    "start": "1264320",
    "end": "1270379"
  },
  {
    "text": "is what the database server is implemented in Ruby c-sharp Python go",
    "start": "1270379",
    "end": "1275929"
  },
  {
    "text": "and Swift and if you need to query the database from a language that we don't",
    "start": "1275929",
    "end": "1281989"
  },
  {
    "text": "support the wire interface is JSON and HTTP so you should be able to submit",
    "start": "1281989",
    "end": "1288019"
  },
  {
    "text": "queries that way as well so to summarize",
    "start": "1288019",
    "end": "1295329"
  },
  {
    "text": "this section about acid transactions I think it's important to note that I've",
    "start": "1295329",
    "end": "1302989"
  },
  {
    "text": "been talking a lot about financial services and the reason I've been talking about it is because that",
    "start": "1302989",
    "end": "1308690"
  },
  {
    "text": "industry was left out of the no sequel revolution all these scalable databases",
    "start": "1308690",
    "end": "1314089"
  },
  {
    "text": "came out but they didn't have transaction support and so financial services was stuck you know running on",
    "start": "1314089",
    "end": "1319940"
  },
  {
    "text": "their Oracle's and their Postgres but now that we have acid transactions at",
    "start": "1319940",
    "end": "1325639"
  },
  {
    "text": "global scale the financial services firms that wanted to explore these new",
    "start": "1325639",
    "end": "1331269"
  },
  {
    "text": "large-scale databases but found that they did not have the features to meet",
    "start": "1331269",
    "end": "1336469"
  },
  {
    "text": "the requirements all of a sudden have this option so from my perspective in the",
    "start": "1336469",
    "end": "1343760"
  },
  {
    "text": "marketplace having you know worked through the first wave of no sequel and then seeing what different customers and",
    "start": "1343760",
    "end": "1351560"
  },
  {
    "text": "users are doing now companies are a lot more ready they they understand how to",
    "start": "1351560",
    "end": "1359000"
  },
  {
    "text": "evaluate database technology how to you know try out two or three alternatives",
    "start": "1359000",
    "end": "1364280"
  },
  {
    "text": "and figure out which one is the best fit and they're using that understanding",
    "start": "1364280",
    "end": "1369820"
  },
  {
    "text": "essentially to evaluate fana DB versus you know there's not much else versus",
    "start": "1369820",
    "end": "1376900"
  },
  {
    "text": "Postgres or Oracle or Google spanner which you know then you are stuck",
    "start": "1376900",
    "end": "1382880"
  },
  {
    "text": "running inside the Google cloud but so let's set aside financial services for",
    "start": "1382880",
    "end": "1388850"
  },
  {
    "text": "now because I also find that writing database applications using eventually",
    "start": "1388850",
    "end": "1396800"
  },
  {
    "text": "consistent databases can be a headache you you might write something in the",
    "start": "1396800",
    "end": "1403280"
  },
  {
    "text": "database and then go back to read it and it's not there yet and so that means in practice all your code that ever touches",
    "start": "1403280",
    "end": "1410900"
  },
  {
    "text": "an eventually consistent database like dynamo DB or cassandra has to be ready for that worst case scenario and you get",
    "start": "1410900",
    "end": "1418100"
  },
  {
    "text": "a ton of code complexity and repair work and your developers are kind of more",
    "start": "1418100",
    "end": "1423650"
  },
  {
    "text": "trying to second-guess the database than they are actually writing the application so if you use a consistent",
    "start": "1423650",
    "end": "1431840"
  },
  {
    "text": "database you know like a Postgres or a font ODB those problems go away and you",
    "start": "1431840",
    "end": "1437000"
  },
  {
    "text": "don't have to guess what's in the database you're just able to write queries and get the expected responses",
    "start": "1437000",
    "end": "1442930"
  },
  {
    "text": "now it is you know it's just the laws of physics that in order for us to commit a",
    "start": "1442930",
    "end": "1449270"
  },
  {
    "text": "Kalvin transaction across multiple data centers the speed of light between those",
    "start": "1449270",
    "end": "1455300"
  },
  {
    "text": "data centers starts to matter and so sure like it is possible to have lower",
    "start": "1455300",
    "end": "1461900"
  },
  {
    "text": "right Layton sees with an eventually consistent database but I'm not sure that actually makes your applications",
    "start": "1461900",
    "end": "1467540"
  },
  {
    "text": "faster because you know you're writing but there's this cloud of uncertainty and then you've always got to check up",
    "start": "1467540",
    "end": "1473470"
  },
  {
    "text": "that uncertainty when you're doing your reads and so it may balance out that that even by pay in a small round-trip",
    "start": "1473470",
    "end": "1480700"
  },
  {
    "text": "time cost on writes all the simplification of the reads and a simplification of developing against it",
    "start": "1480700",
    "end": "1486880"
  },
  {
    "text": "could mean you know simpler application and potentially better user experience",
    "start": "1486880",
    "end": "1494370"
  },
  {
    "text": "so we have this idea excuse me of how to",
    "start": "1494370",
    "end": "1500049"
  },
  {
    "text": "build a distributed ledger using the database queries and global consensus",
    "start": "1500049",
    "end": "1506980"
  },
  {
    "text": "and asset transactions but I haven't addressed the security model at all so",
    "start": "1506980",
    "end": "1513330"
  },
  {
    "text": "this is a you know just kind of to give the sense that there's you know the",
    "start": "1513330",
    "end": "1519880"
  },
  {
    "text": "approach to how you would avoid privilege escalation and get some of the",
    "start": "1519880",
    "end": "1525490"
  },
  {
    "text": "semantics that people appreciate from the blockchain without having you know",
    "start": "1525490",
    "end": "1532179"
  },
  {
    "text": "some of the downsides so you know we like that the blockchain is immutable except for when we don't and in the same",
    "start": "1532179",
    "end": "1540730"
  },
  {
    "text": "way you want to know what you're you want to know that your transaction code",
    "start": "1540730",
    "end": "1545950"
  },
  {
    "text": "can only you know write new transactions and won't be changing the history but you might have admin code that needs to",
    "start": "1545950",
    "end": "1552309"
  },
  {
    "text": "change the history so we take a layered approach where we essentially have you",
    "start": "1552309",
    "end": "1559960"
  },
  {
    "text": "know user code in the browser application code running in lambda but",
    "start": "1559960",
    "end": "1565630"
  },
  {
    "text": "the application code has the minimum privileges to talk to the database which has its own you know user-defined",
    "start": "1565630",
    "end": "1572679"
  },
  {
    "text": "functions which have the minimum privileges again to talk to the actual",
    "start": "1572679",
    "end": "1577870"
  },
  {
    "text": "storage parts of the database so it's very you there's no path there for a",
    "start": "1577870",
    "end": "1585940"
  },
  {
    "text": "privilege escalation that would allow an untrusted user to run transactions that",
    "start": "1585940",
    "end": "1590950"
  },
  {
    "text": "they're not supposed to so I'll talk about those in turn and how you know how",
    "start": "1590950",
    "end": "1597700"
  },
  {
    "text": "the layers work together so lambda is a function as a service provider there's",
    "start": "1597700",
    "end": "1603880"
  },
  {
    "text": "lots of them for purposes of this talk there interchangeable essentially it's just a",
    "start": "1603880",
    "end": "1610630"
  },
  {
    "text": "JavaScript function or in another language that runs in response to user",
    "start": "1610630",
    "end": "1616510"
  },
  {
    "text": "events so this could be you know authenticating users on an HTTP request",
    "start": "1616510",
    "end": "1622630"
  },
  {
    "text": "and running a function that kicks off transaction but it's also how at least",
    "start": "1622630",
    "end": "1630580"
  },
  {
    "text": "in practice when I talk to people who do a lot of stuff with AWS lambda they're",
    "start": "1630580",
    "end": "1635830"
  },
  {
    "text": "kind of using it for lightweight MapReduce so maybe processing files every time they're uploaded s3 it kind of straddles",
    "start": "1635830",
    "end": "1643090"
  },
  {
    "text": "both those worlds in our case we're using it for interactive code to trigger the transactions in the database so what",
    "start": "1643090",
    "end": "1652090"
  },
  {
    "text": "we'll have is a JavaScript function that uses the fana DB client to submit a query it looks very simple so that",
    "start": "1652090",
    "end": "1659799"
  },
  {
    "text": "complex query that we saw it was it was",
    "start": "1659799",
    "end": "1665080"
  },
  {
    "text": "the whole thing right it was all the actual logic that's going to happen but we don't want our lambdas to be able to",
    "start": "1665080",
    "end": "1670570"
  },
  {
    "text": "run that logic because like what if they only ran part of it what have you had a bad programmer and your organization and",
    "start": "1670570",
    "end": "1678429"
  },
  {
    "text": "they wrote a function that sold items to players without deducting from their balance right then all of a sudden you",
    "start": "1678429",
    "end": "1685210"
  },
  {
    "text": "might have to you know pay up yourself that money or something so it could be",
    "start": "1685210",
    "end": "1690610"
  },
  {
    "text": "very expensive mistakes but instead of having lambda call that complex function we saw we have a",
    "start": "1690610",
    "end": "1697900"
  },
  {
    "text": "call a predefined function so this is you know similar to relational database",
    "start": "1697900",
    "end": "1703960"
  },
  {
    "text": "API is where you can register a query and have it called there's essentially",
    "start": "1703960",
    "end": "1712140"
  },
  {
    "text": "query fragments that you register with the database and other queries can call",
    "start": "1712140",
    "end": "1717880"
  },
  {
    "text": "in to them and they can have different privileges so the function that is",
    "start": "1717880",
    "end": "1724659"
  },
  {
    "text": "called can only it does what it does in the divide at abase administrator knows",
    "start": "1724659",
    "end": "1731140"
  },
  {
    "text": "what it does and it's the only thing that lambda can call the function itself it's internals would look like that",
    "start": "1731140",
    "end": "1738039"
  },
  {
    "text": "complex transaction that we saw so it's easy to call but it doesn't give",
    "start": "1738039",
    "end": "1745210"
  },
  {
    "text": "you right you only said it some arguments and it does all the work so like a trigger in a relational database",
    "start": "1745210",
    "end": "1751749"
  },
  {
    "text": "and again that function doesn't have",
    "start": "1751749",
    "end": "1756969"
  },
  {
    "text": "administrator access so someone authoring that trigger wouldn't be able to go and zero out everyone's account",
    "start": "1756969",
    "end": "1764409"
  },
  {
    "text": "balance they would just be able to you know interact with the classes that they're supposed to now the last kind of",
    "start": "1764409",
    "end": "1774669"
  },
  {
    "text": "important feature for replacing the blockchain in this application is fana",
    "start": "1774669",
    "end": "1780580"
  },
  {
    "text": "DB's built in temporal data which can be used here to ensure that we understand",
    "start": "1780580",
    "end": "1789489"
  },
  {
    "text": "what the history of objects are which it can also be used in applications for auditing or for those times when you",
    "start": "1789489",
    "end": "1795609"
  },
  {
    "text": "have to change the past so what an architecture we're talking about for a",
    "start": "1795609",
    "end": "1802210"
  },
  {
    "text": "serverless distributed ledger application the functions that are touching the data and the tables will",
    "start": "1802210",
    "end": "1808869"
  },
  {
    "text": "run with privileges that can only talk about the present they can't mess with",
    "start": "1808869",
    "end": "1814719"
  },
  {
    "text": "the past and they also can't change the schema you don't want them to be able to change the rules so these functions with",
    "start": "1814719",
    "end": "1821259"
  },
  {
    "text": "limited privileges but in real life sometimes things happen like a user",
    "start": "1821259",
    "end": "1827169"
  },
  {
    "text": "might hit an extra zero and transfer you know twenty thousand dollars instead of",
    "start": "1827169",
    "end": "1833919"
  },
  {
    "text": "two thousand and rolling that back on a blockchain based application can be very",
    "start": "1833919",
    "end": "1839200"
  },
  {
    "text": "expensive because the history is actually immutable and you've got to come up with a compensating transaction",
    "start": "1839200",
    "end": "1846070"
  },
  {
    "text": "that would make up for the old one and it's probably not just those eighteen thousand dollars it's probably the tax",
    "start": "1846070",
    "end": "1852129"
  },
  {
    "text": "implications for the you know the ten hours before the bug got caught or whatever so it's better to have an",
    "start": "1852129",
    "end": "1859629"
  },
  {
    "text": "administrative client with additional privileges that can go back in the",
    "start": "1859629",
    "end": "1864940"
  },
  {
    "text": "history and say I didn't really mean 20,000 I'm in two thousand and when you change it there then of course all the",
    "start": "1864940",
    "end": "1870999"
  },
  {
    "text": "queries that are deriving you know things like taxes etc from that are",
    "start": "1870999",
    "end": "1876130"
  },
  {
    "text": "going to run on this revised history instead of on the you know instead of on",
    "start": "1876130",
    "end": "1882820"
  },
  {
    "text": "the erroneous data the the temporal data support it ought by to follow doodle",
    "start": "1882820",
    "end": "1889570"
  },
  {
    "text": "store like 30 days of history you could turn that up or you can turn it down but",
    "start": "1889570",
    "end": "1895290"
  },
  {
    "text": "it is not only supporting these kind of audit queries but also supporting the",
    "start": "1895290",
    "end": "1901510"
  },
  {
    "text": "ability to read from snapshots so that you can read from a consistent version of the database without waiting for",
    "start": "1901510",
    "end": "1907169"
  },
  {
    "text": "in-flight writes to complete so that's",
    "start": "1907169",
    "end": "1913690"
  },
  {
    "text": "the architecture of this distributed ledger application on a distributed",
    "start": "1913690",
    "end": "1919600"
  },
  {
    "text": "database and I'm happy to take questions now sure so the question is about the",
    "start": "1919600",
    "end": "1930730"
  },
  {
    "text": "cap theorem and how if we prioritize consistency over availability you know",
    "start": "1930730",
    "end": "1935950"
  },
  {
    "text": "what does what does that mean when there's an availability problem so in",
    "start": "1935950",
    "end": "1941740"
  },
  {
    "text": "practice we have you know that it's rare because we don't need 100% availability",
    "start": "1941740",
    "end": "1948880"
  },
  {
    "text": "of all the machines in the cluster we just need to maintain a quorum so as long as we maintain a quorum then the",
    "start": "1948880",
    "end": "1955030"
  },
  {
    "text": "transaction log can continue to be processed and we have uptime but if we",
    "start": "1955030",
    "end": "1960940"
  },
  {
    "text": "go below the quorum then we can't process transactions at all question so",
    "start": "1960940",
    "end": "1968620"
  },
  {
    "text": "yeah we get the consistency that you get you know that people use two-phase commits for we use the raft protocol for",
    "start": "1968620",
    "end": "1975940"
  },
  {
    "text": "that which is an optimization over like a raw two-phase commit or a paxos style",
    "start": "1975940",
    "end": "1982110"
  },
  {
    "text": "consensus algorithm and there's a great",
    "start": "1982110",
    "end": "1987419"
  },
  {
    "text": "website i think if you google learn raft",
    "start": "1987419",
    "end": "1992470"
  },
  {
    "text": "it'll it's a state machine that lets you see like exactly how the raft protocol is executed on a log and we essentially",
    "start": "1992470",
    "end": "2001350"
  },
  {
    "text": "use that same protocol so it's like two-phase commit but with some optimizations to cut down",
    "start": "2001350",
    "end": "2007260"
  },
  {
    "text": "around trips and where it fits in our architecture is how we decide the",
    "start": "2007260",
    "end": "2013860"
  },
  {
    "text": "ordering of that log the right ahead log for Calvin once the logs order is stable",
    "start": "2013860",
    "end": "2020100"
  },
  {
    "text": "and frozen then everything that happens on the database nodes is deterministic so all we need to do is agree on the log",
    "start": "2020100",
    "end": "2027660"
  },
  {
    "text": "ordering and then we get serializable consistency from there I've got a couple",
    "start": "2027660",
    "end": "2035880"
  },
  {
    "text": "of questions from me up why should I use phone at that way what's the use case for finally to be specific sure well",
    "start": "2035880",
    "end": "2043020"
  },
  {
    "text": "it's the consistency for the various reasons I outlined some applications",
    "start": "2043020",
    "end": "2048720"
  },
  {
    "text": "some use cases require consistency in for some use cases it just helps with",
    "start": "2048720",
    "end": "2053760"
  },
  {
    "text": "productivity but I think the real reason to use I don't know a database at least",
    "start": "2053760",
    "end": "2061919"
  },
  {
    "text": "as a developer who evaluates new technologies on a regular basis like we",
    "start": "2061919",
    "end": "2068730"
  },
  {
    "text": "like to think that we're rational and that we're taking a measured approach all the time but I think that probably",
    "start": "2068730",
    "end": "2074940"
  },
  {
    "text": "what's really happening is we have like a high-stakes game of picking what is",
    "start": "2074940",
    "end": "2080100"
  },
  {
    "text": "the low friction path and so if something gives you friction even for an",
    "start": "2080100",
    "end": "2085830"
  },
  {
    "text": "unrelated reason like you're probably going to throw it out and try something else because like oh the friction there",
    "start": "2085830",
    "end": "2091138"
  },
  {
    "text": "must be an indicator there's gonna be friction in other places so with that philosophy in mind we've tried very hard",
    "start": "2091139",
    "end": "2098130"
  },
  {
    "text": "at Fawna to make the on-ramps easy so you should be able to go to Fano comm and sign up and be using the api for",
    "start": "2098130",
    "end": "2104550"
  },
  {
    "text": "free within minutes if that stays easy",
    "start": "2104550",
    "end": "2110010"
  },
  {
    "text": "then you know there will be no friction and you won't even need good reasons to use it one question that's a little bit",
    "start": "2110010",
    "end": "2118290"
  },
  {
    "text": "next to that how does found out compared to Cassandra sure so fauna and Cassandra",
    "start": "2118290",
    "end": "2126600"
  },
  {
    "text": "have similar scalability characteristics the you know kind of rough size of",
    "start": "2126600",
    "end": "2133230"
  },
  {
    "text": "clusters that we expect people to run is about the same the read latency is",
    "start": "2133230",
    "end": "2138510"
  },
  {
    "text": "similar and it serves like the amount of aggregate IO that a given node can do is",
    "start": "2138510",
    "end": "2144760"
  },
  {
    "text": "similar when you start to do comparative benchmarks they're also pretty close in",
    "start": "2144760",
    "end": "2151570"
  },
  {
    "text": "some workloads we have a throughput advantage because we're batching the transactions together in a way that is",
    "start": "2151570",
    "end": "2158350"
  },
  {
    "text": "easier for the i/o systems to deal with but in other workloads you're with fana",
    "start": "2158350",
    "end": "2164500"
  },
  {
    "text": "you'll be waiting on round-trip times and consistent commits that you wouldn't",
    "start": "2164500",
    "end": "2169660"
  },
  {
    "text": "need to wait for with Cassandra of course then with Cassandra on the other end you'd have to go clean that",
    "start": "2169660",
    "end": "2174670"
  },
  {
    "text": "stuff up on read and have a bunch of extra code to deal with their cases and",
    "start": "2174670",
    "end": "2180090"
  },
  {
    "text": "so Sona found that to be as consistent and partition and casing bit more about",
    "start": "2180090",
    "end": "2186730"
  },
  {
    "text": "how availability is affected then about the partitioning now found at the base",
    "start": "2186730",
    "end": "2192550"
  },
  {
    "text": "consistent and partitioned so can you say a bit more about how availability is affected them maybe the one elaborate",
    "start": "2192550",
    "end": "2202110"
  },
  {
    "text": "type this question yeah I mean I was talking a little bit about the partitioning so we actually allow you to",
    "start": "2202740",
    "end": "2208720"
  },
  {
    "text": "partition the calven log into more than one log so that you know if the",
    "start": "2208720",
    "end": "2214210"
  },
  {
    "text": "throughput on the calven log is more than a single machine can handle then you can spread that out across machines",
    "start": "2214210",
    "end": "2219810"
  },
  {
    "text": "but typically you're gonna get best performance with about three Kalvin partitions it's through an open source",
    "start": "2219810",
    "end": "2228070"
  },
  {
    "text": "version no we're not open source we're implemented in Scala all our drivers are open source but the delivery",
    "start": "2228070",
    "end": "2235810"
  },
  {
    "text": "is a jar file and the query builder seems do you consider simplifying the",
    "start": "2235810",
    "end": "2246520"
  },
  {
    "text": "API with a DSL that's compiles to an ast so the question is about the query",
    "start": "2246520",
    "end": "2253090"
  },
  {
    "text": "builder and you know whether we've considered simpler api's so we",
    "start": "2253090",
    "end": "2260560"
  },
  {
    "text": "considered it we seriously considered like a rest style crowd API and it's in",
    "start": "2260560",
    "end": "2267130"
  },
  {
    "text": "there but it's uh it just turns out that the sweet spot",
    "start": "2267130",
    "end": "2273520"
  },
  {
    "text": "for a database like this is to submit a complex query so something like load",
    "start": "2273520",
    "end": "2280390"
  },
  {
    "text": "rose from an index out of a particular range and then loop over those rows all",
    "start": "2280390",
    "end": "2286240"
  },
  {
    "text": "inside of the transaction and load documents based on those rows from some",
    "start": "2286240",
    "end": "2291490"
  },
  {
    "text": "of those documents have conditional logic that maybe loads other data and",
    "start": "2291490",
    "end": "2297310"
  },
  {
    "text": "then update some of them based on all that and have that commit atomically so",
    "start": "2297310",
    "end": "2302380"
  },
  {
    "text": "just doing that over rest doesn't make much sense it's more like you know you want to write some of your application",
    "start": "2302380",
    "end": "2308170"
  },
  {
    "text": "logic up into the query language and push it to the cluster one less question",
    "start": "2308170",
    "end": "2315340"
  },
  {
    "text": "block change our public lectures meaning everyone can join a network notes those final debate also allowed to build such",
    "start": "2315340",
    "end": "2321490"
  },
  {
    "text": "open systems sure so the question is about could you use this kind of system",
    "start": "2321490",
    "end": "2327610"
  },
  {
    "text": "in place of the Bitcoin blockchain and the answer is no that's not what it's for if you need to run those kind of",
    "start": "2327610",
    "end": "2334480"
  },
  {
    "text": "applications among untrusted parties then you do need you know some way of you know proof of work or otherwise",
    "start": "2334480",
    "end": "2341530"
  },
  {
    "text": "making sure that people can't can't game the system with what we're talking about",
    "start": "2341530",
    "end": "2346900"
  },
  {
    "text": "a trusted consortium of market participants there are you know I didn't",
    "start": "2346900",
    "end": "2353170"
  },
  {
    "text": "go into that part of the architecture but there are places in the system where you could put monitors on the",
    "start": "2353170",
    "end": "2359020"
  },
  {
    "text": "transaction log and make sure that no one's you know trying to fuzz the system or something but you know typically if",
    "start": "2359020",
    "end": "2367330"
  },
  {
    "text": "somebody was you would know who was doing that and you could talk to them so that that's a it's a different use case",
    "start": "2367330",
    "end": "2373360"
  },
  {
    "text": "basically okay cool any other questions from the room yes so",
    "start": "2373360",
    "end": "2381310"
  },
  {
    "text": "the question is about the the TTL the time to live feature which it allows we",
    "start": "2381310",
    "end": "2387640"
  },
  {
    "text": "actually have two sets of TTL so I talked about how we keep object history",
    "start": "2387640",
    "end": "2393310"
  },
  {
    "text": "around for 30 days by default and then clean that up but we also have the",
    "start": "2393310",
    "end": "2398380"
  },
  {
    "text": "objects themselves can auto delete after a certain amount of time so that's really useful for use cases like GDP are",
    "start": "2398380",
    "end": "2405430"
  },
  {
    "text": "we you know the right to erase' land whatever so especially intermediate",
    "start": "2405430",
    "end": "2411559"
  },
  {
    "text": "processors may want to have a lot of their data use TTLs so that when they're done processing it",
    "start": "2411559",
    "end": "2416959"
  },
  {
    "text": "cleans itself up it's useful you know not just for gdpr but also for you know",
    "start": "2416959",
    "end": "2422989"
  },
  {
    "text": "caching use cases or anything where you want the database to you know not just",
    "start": "2422989",
    "end": "2428119"
  },
  {
    "text": "grow continuously over time sure so the",
    "start": "2428119",
    "end": "2436759"
  },
  {
    "text": "customer list at most of them I can't talk about we only launched the cloud",
    "start": "2436759",
    "end": "2442430"
  },
  {
    "text": "product earlier this year and we'll be launching the on-premise Enterprise version in the springtime currently",
    "start": "2442430",
    "end": "2450650"
  },
  {
    "text": "NVIDIA is running a big social network on top of fauna DB and they've had zero",
    "start": "2450650",
    "end": "2457430"
  },
  {
    "text": "downtime so we like that also Starbucks is talking a lot at conferences mostly",
    "start": "2457430",
    "end": "2464390"
  },
  {
    "text": "on the west coast about using us for payment card and loyalty program stuff",
    "start": "2464390",
    "end": "2471920"
  },
  {
    "text": "so essentially you know financial points across all of their retail locations",
    "start": "2471920",
    "end": "2478569"
  },
  {
    "text": "aside from that there's you know lots of the innovative American banks you know",
    "start": "2478569",
    "end": "2485509"
  },
  {
    "text": "have ongoing programs to evaluate new technologies so we're in that space for",
    "start": "2485509",
    "end": "2491479"
  },
  {
    "text": "sure thank you very much",
    "start": "2491479",
    "end": "2496749"
  },
  {
    "text": "[Applause]",
    "start": "2498800",
    "end": "2504719"
  }
]