[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "all right welcome welcome welcome today we'll be talking about leveraging",
    "start": "3639",
    "end": "8880"
  },
  {
    "text": "determinism or in more words trusting deterministic execution",
    "start": "8880",
    "end": "15280"
  },
  {
    "text": "to simplify scale and O stabilize system I flipped those all around but um so",
    "start": "15280",
    "end": "23439"
  },
  {
    "text": "before you know I talk about myself talk about two things I like y'all to get out",
    "start": "23439",
    "end": "29119"
  },
  {
    "text": "of this if in your system you've got some logic that is super super important and you're",
    "start": "29119",
    "end": "37079"
  },
  {
    "text": "confident in or it's uh something that is important to your business you know",
    "start": "37079",
    "end": "42640"
  },
  {
    "text": "make it deterministic we'll we'll talk about how that can help and then if you've already got deterministic",
    "start": "42640",
    "end": "51160"
  },
  {
    "text": "logic don't be afraid to trust it and replay it anywhere on your stack for",
    "start": "51160",
    "end": "58680"
  },
  {
    "text": "efficiency and profit it so just for some context let's talk about SNR",
    "start": "58680",
    "end": "66119"
  },
  {
    "start": "65000",
    "end": "350000"
  },
  {
    "text": "problems yeah so um again I'm Frank uh um I'm a director of engineering at",
    "start": "66119",
    "end": "73159"
  },
  {
    "text": "coinbase uh focusing on Exchange platforms so trading so coinbase is a",
    "start": "73159",
    "end": "79320"
  },
  {
    "text": "company uh for um where customers can do things with cryptocurrencies one of them",
    "start": "79320",
    "end": "84720"
  },
  {
    "text": "being trading and so we run exchanges um",
    "start": "84720",
    "end": "90200"
  },
  {
    "text": "let me get a quick show of hands to see you know how much I should explain um how many folks know what an exchange",
    "start": "90200",
    "end": "97560"
  },
  {
    "text": "is right on right on okay cool cool cool um so so yeah we um you know",
    "start": "97560",
    "end": "105040"
  },
  {
    "text": "fundamentally our job is we tell people the the price of a thing in the market",
    "start": "105040",
    "end": "110719"
  },
  {
    "text": "and we also um give fair prices to people who want to um trade things right",
    "start": "110719",
    "end": "118759"
  },
  {
    "text": "so sort of that's what an exchange should do it's also a fair third party",
    "start": "118759",
    "end": "124479"
  },
  {
    "text": "uh between two two people who want to trade some given thing right so um the",
    "start": "124479",
    "end": "130399"
  },
  {
    "text": "first thing that you want to think about with an exchange is that it's Financial",
    "start": "130399",
    "end": "136040"
  },
  {
    "text": "infrastructure meaning that um you know the exchange doesn't really make that much revenue from the the massive",
    "start": "136040",
    "end": "143200"
  },
  {
    "text": "amounts of funds that are going over the system um my my experience is actually in sort of traditional markets and know",
    "start": "143200",
    "end": "149959"
  },
  {
    "text": "in a previous life right folks would trade you know millions and billions of dollars worth of things on our system",
    "start": "149959",
    "end": "156879"
  },
  {
    "text": "and maybe we would uh make about",
    "start": "156879",
    "end": "162239"
  },
  {
    "text": "0.00001% on on the amount of uh money that comes over our system give or take",
    "start": "163120",
    "end": "169000"
  },
  {
    "text": "a zero so that means is um when I think of exchanges I think of uh scary",
    "start": "169000",
    "end": "177440"
  },
  {
    "text": "explosions that are possible so so exchanges are a place where people",
    "start": "177440",
    "end": "184400"
  },
  {
    "text": "place a lot of trust in them and for us an explosion on the exchange because of",
    "start": "184400",
    "end": "190599"
  },
  {
    "text": "how fast things are going could not only jeopardize our own business but could jeopardize the financial welfare of",
    "start": "190599",
    "end": "198159"
  },
  {
    "text": "every all of the folks who participate with us so you know when folks trust us with trading activity um we need to",
    "start": "198159",
    "end": "206640"
  },
  {
    "text": "absolutely be correct um the other thing that exchanges should",
    "start": "206640",
    "end": "213959"
  },
  {
    "text": "be for great service is that we should be very very consistent after all we're",
    "start": "213959",
    "end": "220400"
  },
  {
    "text": "infrastructure and so you don't want people to be surprised by how long something takes um how the market",
    "start": "220400",
    "end": "228319"
  },
  {
    "text": "behaves when you go ahead and you want to buy something or sell something we've got to really make sure that um we get",
    "start": "228319",
    "end": "235959"
  },
  {
    "text": "back to folks about the same amount of time because markets are constantly",
    "start": "235959",
    "end": "241000"
  },
  {
    "text": "going up and down and up and down if somehow you could abuse the fact that H",
    "start": "241000",
    "end": "246040"
  },
  {
    "text": "abuse latencies or whatnot you can effectively print money out of everyone else um who is participating in the",
    "start": "246040",
    "end": "251879"
  },
  {
    "text": "market so for us um uh specifically for our exchange over at coinbase we want to",
    "start": "251879",
    "end": "257919"
  },
  {
    "text": "keep our p99s under a millisecond so when somebody sends us a message we want to",
    "start": "257919",
    "end": "265720"
  },
  {
    "text": "confirm acknowledge or reject um or Express what happened back to them in",
    "start": "265720",
    "end": "271759"
  },
  {
    "text": "under a millisecond the other thing exchanges have to do being um you know these big",
    "start": "271759",
    "end": "278840"
  },
  {
    "text": "financial institutions that uh are regulated by a bunch of entities is we",
    "start": "278840",
    "end": "284759"
  },
  {
    "text": "need to remember everything so all of the transactions that happen over the",
    "start": "284759",
    "end": "290000"
  },
  {
    "text": "system need to be audited and this is like a massive volume of data um so we",
    "start": "290000",
    "end": "296479"
  },
  {
    "text": "might have to keep like billions of dollars or you know um millions of",
    "start": "296479",
    "end": "301680"
  },
  {
    "text": "trades for I think in some jurisdictions like up to like seven years it's just an insane amount of data and you know we",
    "start": "301680",
    "end": "308360"
  },
  {
    "text": "need to keep that for to do like inspection to see if someone was like kind of doing something weird or if a",
    "start": "308360",
    "end": "315400"
  },
  {
    "text": "debugger like me wants to go on and actually you know try to figure out what someone might be doing on the exchange at any point in time um so if right",
    "start": "315400",
    "end": "326520"
  },
  {
    "text": "we've got to be completely correct we have like zero tolerance for functional um sort of because everything happens so",
    "start": "326520",
    "end": "333720"
  },
  {
    "text": "quickly on an exchange and you can get runaway cases really quickly um you can't really reconcile it um and uh our",
    "start": "333720",
    "end": "342199"
  },
  {
    "text": "customers might notice immediately if our latencies just go up just a tiny amount",
    "start": "342199",
    "end": "348720"
  },
  {
    "text": "um how do we like change anything it's like terrifying right um well um what we",
    "start": "348720",
    "end": "356160"
  },
  {
    "start": "350000",
    "end": "585000"
  },
  {
    "text": "try to do to like continue to live in grow another day is try to keep things",
    "start": "356160",
    "end": "363880"
  },
  {
    "text": "simple right um you've got to remove as many sort of uh things that you need to",
    "start": "363880",
    "end": "369960"
  },
  {
    "text": "consider When developing your service right so what that means right um",
    "start": "369960",
    "end": "376720"
  },
  {
    "text": "instead of having right just a swath of things that can maybe fail partially or",
    "start": "376720",
    "end": "383599"
  },
  {
    "text": "whatnot and you have to do sort of distributed tracing right um we keep our",
    "start": "383599",
    "end": "389919"
  },
  {
    "text": "the vast majority of our mission critical logic right in one well tested",
    "start": "389919",
    "end": "395960"
  },
  {
    "text": "system right so it's very much a monolith right um",
    "start": "395960",
    "end": "401160"
  },
  {
    "text": "so what does that mean for us well what's also not simple right is you",
    "start": "401160",
    "end": "407759"
  },
  {
    "text": "can have um non-determinism when you have a bunch of services and then you",
    "start": "407759",
    "end": "413639"
  },
  {
    "text": "basically have to what uh handle the cross product of the program counter of",
    "start": "413639",
    "end": "419919"
  },
  {
    "text": "every that's ever running right um so please agree that that is not simple",
    "start": "419919",
    "end": "427759"
  },
  {
    "text": "but if you can make your system deterministic that's simple right like hopefully that's intuitive um if you can",
    "start": "427759",
    "end": "434319"
  },
  {
    "text": "do that uh you can do some fun things so how do you make a system like deterministic",
    "start": "434319",
    "end": "441280"
  },
  {
    "text": "right like um you can use sort of a finite State machine right like you can sort of model your big program as a",
    "start": "441280",
    "end": "447160"
  },
  {
    "text": "finite State machine where like the IND ual register like all the values of all your variables plus the program counter",
    "start": "447160",
    "end": "454759"
  },
  {
    "text": "going through your program is basically a finite State machine right um I stole",
    "start": "454759",
    "end": "461879"
  },
  {
    "text": "this slide from a talk that Martin Thompson gave at some DDD Europe some",
    "start": "461879",
    "end": "467159"
  },
  {
    "text": "some years ago but um it's kind of nice it's sort of like this like kind of academic thing but um you know we'll go",
    "start": "467159",
    "end": "473520"
  },
  {
    "text": "from there uh so given some state right it takes some input and then you might",
    "start": "473520",
    "end": "479159"
  },
  {
    "text": "have have um some new state right um instead of input I'll say requests but",
    "start": "479159",
    "end": "485879"
  },
  {
    "text": "actually let me get another show of hands who's familiar with like sort of event sourcing uh command",
    "start": "485879",
    "end": "492919"
  },
  {
    "text": "query uh okay so not as many which is I think requests are better than commands",
    "start": "492919",
    "end": "498919"
  },
  {
    "text": "so we'll use requests think of requests like an API call uh some some requests into your HTTP system right so a request",
    "start": "498919",
    "end": "507080"
  },
  {
    "text": "you know interacts with the existing state of your system and makes new State uh requests also interact with",
    "start": "507080",
    "end": "516039"
  },
  {
    "text": "your system and might create um events like the impact of a given request right",
    "start": "516039",
    "end": "522959"
  },
  {
    "text": "so we'll probably use a lot of those interchangeably but I'll try to use requests in events rather than commands",
    "start": "522959",
    "end": "528519"
  },
  {
    "text": "so hopefully I remember but what's really cool about you know if",
    "start": "528519",
    "end": "534320"
  },
  {
    "text": "your system is deterministic right if I order all of my AP calls right and then",
    "start": "534320",
    "end": "541120"
  },
  {
    "text": "apply deterministic execution I should end up in exactly the same state and have exactly the same number of events",
    "start": "541120",
    "end": "547800"
  },
  {
    "text": "that pop out right um hopefully that makes sense um so sequence requests right plus",
    "start": "547800",
    "end": "556240"
  },
  {
    "text": "determinism to save a few syllables right is going to basically get you you can replicate it right you can",
    "start": "556240",
    "end": "562600"
  },
  {
    "text": "have replicated state in events and so you know replicated State machines right",
    "start": "562600",
    "end": "567959"
  },
  {
    "text": "you know sort of is a nice little uh kind of hearkens to another thing",
    "start": "567959",
    "end": "573240"
  },
  {
    "text": "another show of hands how many folks are familiar with a consensus algorithms",
    "start": "573240",
    "end": "578519"
  },
  {
    "text": "raft uh okay great get to get to talk about that that wonderful um well okay",
    "start": "578519",
    "end": "584519"
  },
  {
    "text": "so um what are the benefits of having a nice little deterministic system well",
    "start": "584519",
    "end": "589920"
  },
  {
    "start": "585000",
    "end": "1212000"
  },
  {
    "text": "for us right we're mostly just worried about the exchange blowing up right and",
    "start": "589920",
    "end": "595560"
  },
  {
    "text": "uh mostly um so correctness and availab ility is like the most important thing on our minds and so one nice thing you",
    "start": "595560",
    "end": "602480"
  },
  {
    "text": "can do with determinism is you can really insulate yourself from failures and Hardware",
    "start": "602480",
    "end": "608040"
  },
  {
    "text": "so let's talk about I guess let's talk about it without ref um let's say you've",
    "start": "608040",
    "end": "613279"
  },
  {
    "text": "got some service right and you know it's got like a disc that's storing you know the what happened on the system right",
    "start": "613279",
    "end": "619480"
  },
  {
    "text": "and then for some reason you know it crashes you lose it um you know now",
    "start": "619480",
    "end": "625880"
  },
  {
    "text": "you're kind of sad right like uh what happened to the data did I have good backups what is my reconciliation going",
    "start": "625880",
    "end": "632320"
  },
  {
    "text": "to look like it's like quite painful right well with raft right you don't handle an",
    "start": "632320",
    "end": "642000"
  },
  {
    "text": "API request until the parameters until the API request itself and the basically",
    "start": "642000",
    "end": "648200"
  },
  {
    "text": "the parameters of it are replicated to",
    "start": "648200",
    "end": "653480"
  },
  {
    "text": "um most of a cluster so if you run say like a three node cluster um let's make",
    "start": "653480",
    "end": "658760"
  },
  {
    "text": "sure at least two out of the three have the data and if you're like really scared maybe you do five right um so if",
    "start": "658760",
    "end": "666480"
  },
  {
    "text": "I copy that data to uh to multiple machines and they're all deterministic I",
    "start": "666480",
    "end": "672639"
  },
  {
    "text": "should be able to just run multiple instances of my same service and get exactly the same data in all these blue",
    "start": "672639",
    "end": "678200"
  },
  {
    "text": "boxes right so then something kind of bad happens to uh",
    "start": "678200",
    "end": "683920"
  },
  {
    "text": "leader right um I can fail over and basically not have lost any data or",
    "start": "683920",
    "end": "690800"
  },
  {
    "text": "acknowledged any data that I received right because I'm not handling the request until um you know until it's",
    "start": "690800",
    "end": "700079"
  },
  {
    "text": "replicated so this is a lot better um you don't you don't end up being responsible for that million dollar",
    "start": "700079",
    "end": "706360"
  },
  {
    "text": "order that you lost which is great and now you get to go debug whatever that failure is Right Hardware restart or",
    "start": "706360",
    "end": "713079"
  },
  {
    "text": "whatnot so that's that's one huge nice thing about um determinism is that you can just like replicate your program and",
    "start": "713079",
    "end": "719560"
  },
  {
    "text": "have like extra extra you know Shields from bad",
    "start": "719560",
    "end": "725040"
  },
  {
    "text": "things so um latencies are or exchanges are latency sensitive and um there's a",
    "start": "725120",
    "end": "732639"
  },
  {
    "text": "lot of really great consensus implementations out there um but there was never something that was like super",
    "start": "732639",
    "end": "737760"
  },
  {
    "text": "fast so luckily right around when we started building this some nice open source fast raft implementation showed",
    "start": "737760",
    "end": "743720"
  },
  {
    "text": "up so we use that um and one thing that's cool about",
    "start": "743720",
    "end": "750320"
  },
  {
    "text": "is if your system is deterministic you can run the whole thing on one thread",
    "start": "750320",
    "end": "755760"
  },
  {
    "text": "and it'll be faster in it'll be way faster than somebody's multi-threaded",
    "start": "755760",
    "end": "761240"
  },
  {
    "text": "implementation if what you can do is you can basically like pin that thread to",
    "start": "761240",
    "end": "767120"
  },
  {
    "text": "the CPU and have basically minimal Jitter because you're now no longer",
    "start": "767120",
    "end": "772360"
  },
  {
    "text": "worried about the operating system coming in Contex switching out your um your program and so again you don't have",
    "start": "772360",
    "end": "779880"
  },
  {
    "text": "to you can start thinking less about all the other you know one set of things that can go wrong uh regarding your",
    "start": "779880",
    "end": "787680"
  },
  {
    "text": "performance the other nice thing that you get is well system is deterministic right so I hope it's intuitive that",
    "start": "787680",
    "end": "793880"
  },
  {
    "text": "testing would be super super straightforward right you can if you have your sequence log of API requests you can go back and like test um you",
    "start": "793880",
    "end": "801560"
  },
  {
    "text": "know you can create test cases out of what happened on production pretty easily um you can do a lot of great things right and one fancy thing",
    "start": "801560",
    "end": "809320"
  },
  {
    "text": "is that you can like troubleshoot you have like some superpowers when troubleshooting so again let's say I've",
    "start": "809320",
    "end": "816240"
  },
  {
    "text": "got my service uh it's super deterministic and happy and like some like weird Behavior starts happening on",
    "start": "816240",
    "end": "823079"
  },
  {
    "text": "it right well you know now I'm kind of worried right there's like some bug I",
    "start": "823079",
    "end": "828760"
  },
  {
    "text": "got to go investigate got a look at the logs right like what's going on um",
    "start": "828760",
    "end": "834480"
  },
  {
    "text": "well let's say with uh if I'm running the thing deterministically and I've got",
    "start": "834480",
    "end": "840519"
  },
  {
    "text": "you know access to log when the weird Behavior shows up right I can go and take that log copy it somewhere right",
    "start": "840519",
    "end": "848079"
  },
  {
    "text": "like my laptop and uh rerun it on my laptop and",
    "start": "848079",
    "end": "853519"
  },
  {
    "text": "if got deterministic system the same bug will show up right and what I can then",
    "start": "853519",
    "end": "860199"
  },
  {
    "text": "do with that execution is run the thing in a debugger so I know exactly what the",
    "start": "860199",
    "end": "867680"
  },
  {
    "text": "state of all my registers and uh and so that you can generally catch like sort of domain",
    "start": "867680",
    "end": "874160"
  },
  {
    "text": "logic bugs that way like complicated data like sort of data structure bugs right and so you know I use my debugger",
    "start": "874160",
    "end": "880440"
  },
  {
    "text": "I figure out the problem right um and now you know the question's gone but I still got to go like fix the bug and",
    "start": "880440",
    "end": "887680"
  },
  {
    "text": "like do something in production um so this is really cool we I can talk about",
    "start": "887680",
    "end": "893880"
  },
  {
    "text": "this now because we sort of recently shipped it was um you can actually take",
    "start": "893880",
    "end": "899480"
  },
  {
    "text": "production right you can stream that log to basically a mirrored",
    "start": "899480",
    "end": "905560"
  },
  {
    "text": "environment right and then go do run experiments on it exact same data it's",
    "start": "905560",
    "end": "912399"
  },
  {
    "text": "basically like sort of exactly what production log load is and you can like",
    "start": "912399",
    "end": "917440"
  },
  {
    "text": "see what happens if you go ahead and like try some weird configuration Improvement so this sort of mirrored s",
    "start": "917440",
    "end": "923560"
  },
  {
    "text": "Shadow stack thing that uh we've got gives us the ability to do a little bit of pre-production testing on like",
    "start": "923560",
    "end": "931720"
  },
  {
    "text": "infrastructure config changes which is something that like we could we've always had trouble testing in a",
    "start": "931720",
    "end": "937440"
  },
  {
    "text": "functional manner right so being able to like mirror not only a given State at",
    "start": "937440",
    "end": "943319"
  },
  {
    "text": "any one time but the state as it updates live is incredibly",
    "start": "943319",
    "end": "949040"
  },
  {
    "text": "powerful so yeah this is great like you know set us up um you know the thing should work it should be fast right so",
    "start": "949079",
    "end": "955720"
  },
  {
    "text": "um yeah we went ahead and uh built this um so the blue boxes right are service",
    "start": "955720",
    "end": "961839"
  },
  {
    "text": "that's like all of the interesting logic right all these you know it's a mon so",
    "start": "961839",
    "end": "966880"
  },
  {
    "text": "I'm saying it's a monolith in terms of logic right because all the interesting logic occurs inside that blue box and",
    "start": "966880",
    "end": "972120"
  },
  {
    "text": "then you have some ways to access it from the Internet or some local users",
    "start": "972120",
    "end": "977480"
  },
  {
    "text": "who are um who have some co-located uh machines right so that'll",
    "start": "977480",
    "end": "982560"
  },
  {
    "text": "that's in green um all the logic is happening in blue and then for things",
    "start": "982560",
    "end": "988000"
  },
  {
    "text": "like uh you know bi auditability kind of like",
    "start": "988000",
    "end": "993639"
  },
  {
    "text": "analytics right we go ahead and like store all the events uh send all the events that come out store them in the",
    "start": "993639",
    "end": "999440"
  },
  {
    "text": "cloud right and we've you know we've got persistence RDS and all this great stuff over there so cool let's let's go",
    "start": "999440",
    "end": "1007560"
  },
  {
    "text": "through an example right like so let's say Alice wants to go ahead and buy two Bitcoin for 20,000 bucks that request in",
    "start": "1007560",
    "end": "1014360"
  },
  {
    "text": "blue is going to come into our Gateway get sent to the leader right right you pick one of your cluster members to be a",
    "start": "1014360",
    "end": "1020639"
  },
  {
    "text": "leader and then the leader will send that uh that request to both of the",
    "start": "1020639",
    "end": "1026038"
  },
  {
    "text": "followers in the cluster and then it won't start handling that order request",
    "start": "1026039",
    "end": "1031438"
  },
  {
    "text": "until one of the followers confirms that it got the data so we'll go ahead and do",
    "start": "1031439",
    "end": "1036520"
  },
  {
    "text": "that now let's say at this point um Alice succeeds in buying some some",
    "start": "1036520",
    "end": "1044520"
  },
  {
    "text": "Bitcoin right but what if she goes ahead uh and um buys it from a bunch of people so",
    "start": "1044520",
    "end": "1053320"
  },
  {
    "text": "what we are going to go ahead and do is we're going to take the request right and then send out not the request she",
    "start": "1053320",
    "end": "1059919"
  },
  {
    "text": "sent us but like the event that had happened right like hey Alice's Alice wants to buy two Bitcoin everybody for",
    "start": "1059919",
    "end": "1066520"
  },
  {
    "text": "20,000 bucks right like so we go ahead and broadcast that message to everyone else in the market right so then saying",
    "start": "1066520",
    "end": "1072840"
  },
  {
    "text": "that hey the price of Bitcoin is $220,000 if you want to sell it so we also replicate it across the",
    "start": "1072840",
    "end": "1080400"
  },
  {
    "text": "wire over you know long connection to some AWS region right and then like",
    "start": "1080400",
    "end": "1086039"
  },
  {
    "text": "persisted in a database and so non- latency sensitive folks can like query",
    "start": "1086039",
    "end": "1091559"
  },
  {
    "text": "you know query with restful calls or whatnot so requests in this thing are in",
    "start": "1091559",
    "end": "1099320"
  },
  {
    "text": "blue right and then events are sort of in red all right um so this arrow in the",
    "start": "1099320",
    "end": "1107400"
  },
  {
    "text": "middle is kind of like big it's like a big red arrow and that's one thing we kind of found out when um",
    "start": "1107400",
    "end": "1114559"
  },
  {
    "text": "when running you know as a staring startup trying to just provide sustainable value for everybody um that",
    "start": "1114559",
    "end": "1121919"
  },
  {
    "text": "blue is basically five bits of data right it's like Alice buy to B but you know whatever but like let's say she",
    "start": "1121919",
    "end": "1127919"
  },
  {
    "text": "does successfully buy it meaning that there are other people who want to sell Bitcoin right um already that have",
    "start": "1127919",
    "end": "1135320"
  },
  {
    "text": "already submitted their orders into the system so Alice is going to successfully Buy buy two Bitcoin right well what if",
    "start": "1135320",
    "end": "1141120"
  },
  {
    "text": "she buys them from like two people so when Alice goes ahead and buys two",
    "start": "1141120",
    "end": "1147200"
  },
  {
    "text": "Bitcoin right let's say she bought one from Bob and one from Charlie so what'll",
    "start": "1147200",
    "end": "1152480"
  },
  {
    "text": "happen here is we've got to tell Alice that her order was accepted right we got to tell Alice she got one from Bob well",
    "start": "1152480",
    "end": "1160640"
  },
  {
    "text": "we don't tell her she got it from Bob we tell her she got one then we got to tell Bob he sold one then we got to tell",
    "start": "1160640",
    "end": "1166400"
  },
  {
    "text": "Alice that she got another one and we got to tell Charlie that uh she sold one um so the blue box right five bits of",
    "start": "1166400",
    "end": "1175480"
  },
  {
    "text": "data became this mouthful of events that came out right and so what we were kind of noticing is that our compute prices",
    "start": "1175480",
    "end": "1183159"
  },
  {
    "text": "reasonably cheap right like we sort of knew um you you have you know you provision your Cloud compute and that's",
    "start": "1183159",
    "end": "1190640"
  },
  {
    "text": "that's um some value that's not that expensive what they really get you is a network egress so this is like fairly",
    "start": "1190640",
    "end": "1197799"
  },
  {
    "text": "expensive we realized that like the bulk of our cost was actually sending data in between our regions right so okay what",
    "start": "1197799",
    "end": "1204919"
  },
  {
    "text": "do we do here right we're a starving startup we want to save some money",
    "start": "1204919",
    "end": "1210120"
  },
  {
    "text": "um you know can we optimize well okay how can we use the",
    "start": "1210120",
    "end": "1216080"
  },
  {
    "start": "1212000",
    "end": "1362000"
  },
  {
    "text": "fact what was the problem right like so kind of the Crux of the issue is in general and this is probably true even",
    "start": "1216080",
    "end": "1221360"
  },
  {
    "text": "for non- latency sensitive stuff is that your like business logic that you're coding up is like often like fast and",
    "start": "1221360",
    "end": "1227559"
  },
  {
    "text": "cheap as long as it's in memory right um you know the logic that you're running the if statements even some of the",
    "start": "1227559",
    "end": "1233440"
  },
  {
    "text": "hashmap lookups right sort of fairly fast and cheap but it's writing and reading data that is possibly slow and",
    "start": "1233440",
    "end": "1240799"
  },
  {
    "text": "expensive right so you know how can the fact that our system is deterministic help here right",
    "start": "1240799",
    "end": "1247640"
  },
  {
    "text": "like um well let's say you know Alis go buys to bitcoin",
    "start": "1247640",
    "end": "1254799"
  },
  {
    "text": "it'd be really really great if instead of lighting money on fire we like just",
    "start": "1254799",
    "end": "1262000"
  },
  {
    "text": "like sent five bits of data over instead and like we only sent that little box",
    "start": "1262000",
    "end": "1267520"
  },
  {
    "text": "over and like that'd be really great that would like cut our Network cost down by some um around 5 6X or whatever",
    "start": "1267520",
    "end": "1276919"
  },
  {
    "text": "right that'd be really great but well how do you transform blue",
    "start": "1276919",
    "end": "1283440"
  },
  {
    "text": "into red well if your system is deterministic it's just a finite State machine that takes",
    "start": "1283440",
    "end": "1289200"
  },
  {
    "text": "Alice's order then why don't I just rerun the thing and then send the data",
    "start": "1289200",
    "end": "1296440"
  },
  {
    "text": "to postgress or whatever or whatever thing is running the SQL or whatever the",
    "start": "1296440",
    "end": "1302080"
  },
  {
    "text": "thing is sending out over the cloud let's send that those events over IPC right so effectively then there's",
    "start": "1302080",
    "end": "1309039"
  },
  {
    "text": "like very limited network costs to all the events happening in your system so",
    "start": "1309039",
    "end": "1314559"
  },
  {
    "text": "we went ahead and implemented this and it was super great um saved a bunch of network cost but it also you know had",
    "start": "1314559",
    "end": "1321520"
  },
  {
    "text": "some other things that we kind of realized a little later that um that makes it sort of appealing why does this actually help",
    "start": "1321520",
    "end": "1328640"
  },
  {
    "text": "right well so instead of sending events everywhere we actually you know and like",
    "start": "1328640",
    "end": "1335799"
  },
  {
    "text": "doing all this and like letting money on fire right um you know we're just sending these small bits of data over",
    "start": "1335799",
    "end": "1342360"
  },
  {
    "text": "right so that's great um why does this work well um oh and you can like do this",
    "start": "1342360",
    "end": "1348760"
  },
  {
    "text": "take this to the extreme right you could like why do I need red stuff on this side I could just like replicate my",
    "start": "1348760",
    "end": "1353880"
  },
  {
    "text": "request and send it out over there on my local region too right you could you could do all this and go NES right well",
    "start": "1353880",
    "end": "1362720"
  },
  {
    "start": "1362000",
    "end": "1874000"
  },
  {
    "text": "this works right and actually improves our stuff because we found that in general it seems like inputs are often",
    "start": "1362720",
    "end": "1367919"
  },
  {
    "text": "smaller than outputs right like and and why is that the case well um you can sort of think of it like when you",
    "start": "1367919",
    "end": "1374000"
  },
  {
    "text": "receive an API request right um your backend system is like sort of",
    "start": "1374000",
    "end": "1379080"
  },
  {
    "text": "contextualizing it with the state of its own system and what comes out is sort of like both the new data coming in and the",
    "start": "1379080",
    "end": "1386559"
  },
  {
    "text": "data you've got right so if you weren't adding anything to the input your system",
    "start": "1386559",
    "end": "1393279"
  },
  {
    "text": "is I guess you're just a message passer which that's true but a lot of like logic tends to um decorate and make",
    "start": "1393279",
    "end": "1401159"
  },
  {
    "text": "things um more interesting right that's that's how you provide value so yeah inputs are just generally smaller than",
    "start": "1401159",
    "end": "1407520"
  },
  {
    "text": "outputs one thing else we kind of noticed is",
    "start": "1407520",
    "end": "1412559"
  },
  {
    "text": "that inputs are more consistent than outputs what does that like mean",
    "start": "1412559",
    "end": "1419519"
  },
  {
    "text": "well we all think about 99 percentile latency these days right um that's",
    "start": "1419880",
    "end": "1425159"
  },
  {
    "text": "pretty standard but one thing I came up is like what is your 99th percentile of",
    "start": "1425159",
    "end": "1430960"
  },
  {
    "text": "network load from given requests com in coming in right so here's here's like an",
    "start": "1430960",
    "end": "1437120"
  },
  {
    "text": "example like what if instead of just wanting to buy you know two Bitcoin like Alice is",
    "start": "1437120",
    "end": "1443240"
  },
  {
    "text": "like oh I'm going to sell like a thousand of them right and let's say we've got a thousand people over here ready to ready to buy her Bitcoin well",
    "start": "1443240",
    "end": "1451039"
  },
  {
    "text": "what's going to happen is that one message like you know is like 100 byes or something it's going to result in like a massive amount of events coming",
    "start": "1451039",
    "end": "1459400"
  },
  {
    "text": "through the system and a bunch of saturation right um in an example for like say a web",
    "start": "1459400",
    "end": "1468279"
  },
  {
    "text": "system is like how many folks are familiar with the postgress write ahead log or just general database write ahead",
    "start": "1468279",
    "end": "1474440"
  },
  {
    "text": "logs uh okay okay um so so like a databas so postgress one of the the big",
    "start": "1474440",
    "end": "1481320"
  },
  {
    "text": "web databases and a lot of them right will have the state of your tables in a file somewhere but also when um the way",
    "start": "1481320",
    "end": "1490159"
  },
  {
    "text": "a lot of replication um schemes work is they actually send a list of all the changes to the rows um as you make a SQL",
    "start": "1490159",
    "end": "1497279"
  },
  {
    "text": "statement that changes it so like insert one row creates kind of one tle in your WR ahead log that comes out but like",
    "start": "1497279",
    "end": "1503480"
  },
  {
    "text": "let's imagine if you have like I don't know uh a thousand accounts and then you submit a one simple SQL statement like",
    "start": "1503480",
    "end": "1510480"
  },
  {
    "text": "update account set blah blah blah and you forget your work Clause right like what'll happen is you will get a",
    "start": "1510480",
    "end": "1516399"
  },
  {
    "text": "thousand r a headlock entries and your replication pipeline is going to explode right um you know burst at least right",
    "start": "1516399",
    "end": "1524720"
  },
  {
    "text": "and if you're in event sourcing you've got an event sourcing system right and you kind of positive feedback where",
    "start": "1524720",
    "end": "1531720"
  },
  {
    "text": "you're handling a lot of these events and you're putting them back into your event stream that's how you kind of get Thundering Herd and bring down your like",
    "start": "1531720",
    "end": "1539000"
  },
  {
    "text": "massively provisioned cloud system with like tons and tons of compute because one burst can just fill all your buffers",
    "start": "1539000",
    "end": "1547600"
  },
  {
    "text": "so why is it that I say that input is more consistent well um I can validate",
    "start": "1547640",
    "end": "1555440"
  },
  {
    "text": "input right if it's like that I can reject it not have it go through the system right but I can also right do",
    "start": "1555440",
    "end": "1562039"
  },
  {
    "text": "rate limiting I can also make sure that people aren't sending a bunch of stuff over to fill up my my command log",
    "start": "1562039",
    "end": "1570279"
  },
  {
    "text": "so it is really difficult to do that with like things that happen you don't like something some result of executing",
    "start": "1570279",
    "end": "1577520"
  },
  {
    "text": "your program it's not so easy to reject that so that's sort of why um you know",
    "start": "1577520",
    "end": "1583360"
  },
  {
    "text": "kind of what the max amount of your input is right it's the summ",
    "start": "1583360",
    "end": "1588399"
  },
  {
    "text": "of your rate throttles right but output it's kind of hard so yeah um you can protect from",
    "start": "1588399",
    "end": "1596080"
  },
  {
    "text": "sort of this these like bursty behavior and get really consistent sort of network utilization by not sending you",
    "start": "1596080",
    "end": "1603159"
  },
  {
    "text": "know bursts of events that happen due to what your customer does another thing right so in summary",
    "start": "1603159",
    "end": "1610760"
  },
  {
    "text": "right like that's how we basically make use of deterministic execution right which takes a sequence of logs and we",
    "start": "1610760",
    "end": "1616720"
  },
  {
    "text": "just like rerun it in different places to way cut down on data transfer helps us sort of scale but it also stabilizes",
    "start": "1616720",
    "end": "1623159"
  },
  {
    "text": "by making it so that we have very minimal Jitter in terms of network load and results in less uh production",
    "start": "1623159",
    "end": "1632760"
  },
  {
    "text": "incidents another cool thing that you can do right is that so what we're doing now is with determin execution and",
    "start": "1633120",
    "end": "1640159"
  },
  {
    "text": "rerunning it we're effectively replicating compute right so replicating compute can also like simplify some of",
    "start": "1640159",
    "end": "1646000"
  },
  {
    "text": "your Downstream code um just a disclaimer though right like",
    "start": "1646000",
    "end": "1651720"
  },
  {
    "text": "you know we're not offering our firstborn up at the altar of dry right d duplication is just an optimization it's",
    "start": "1651720",
    "end": "1657919"
  },
  {
    "text": "not architecture right but it's kind of it's like fun so so let's take a look",
    "start": "1657919",
    "end": "1664200"
  },
  {
    "text": "right so um what if we go ahead and add a new color it's purple because a",
    "start": "1664200",
    "end": "1672559"
  },
  {
    "text": "request comes in like a read request comes in and it needs to be synchronous because Alice wants to know what her active open orders are right and so he",
    "start": "1672559",
    "end": "1680000"
  },
  {
    "text": "you know blue comes in red comes out it's purple right so this is like an RPC or just a simple restful get call right",
    "start": "1680000",
    "end": "1687240"
  },
  {
    "text": "um and you can imagine right that we could for Edge comp you know for uh if",
    "start": "1687240",
    "end": "1693640"
  },
  {
    "text": "you've got folks all around the world right they can maybe send their read requests from all over the place right",
    "start": "1693640",
    "end": "1700120"
  },
  {
    "text": "um well uh what you might do right to",
    "start": "1700120",
    "end": "1705320"
  },
  {
    "text": "limit the cross region traffic is you maybe cash local you know cash like",
    "start": "1705320",
    "end": "1711240"
  },
  {
    "text": "geographically locally some of your state so you can serve that information but how is that state populated right",
    "start": "1711240",
    "end": "1716480"
  },
  {
    "text": "you've got to like send um all that I should have made that",
    "start": "1716480",
    "end": "1722360"
  },
  {
    "text": "Arrow fatter but you got to send all the events over right or instead of sending all the events over you maybe have it be",
    "start": "1722360",
    "end": "1728440"
  },
  {
    "text": "kind of a lazy lazy request to the source of truth right and then you cash for later updates",
    "start": "1728440",
    "end": "1736399"
  },
  {
    "text": "um you know uh one thing that we can do here right is we want to segregate the",
    "start": "1736399",
    "end": "1742519"
  },
  {
    "text": "impact of read traffic from WR traffic so we really want our headwriter to to",
    "start": "1742519",
    "end": "1748080"
  },
  {
    "text": "just continue being able to write and not really have to serve a bunch of stuff so great we've got deter manistic",
    "start": "1748080",
    "end": "1754000"
  },
  {
    "text": "execution my little blue boxes have all of the state of the main blue box writer",
    "start": "1754000",
    "end": "1760320"
  },
  {
    "text": "and I can basically do the query over to my locally running version and send the response over via either IPC or or just",
    "start": "1760320",
    "end": "1768200"
  },
  {
    "text": "like run it inside the same VM or whatnot right inside the same process and now you basically get I think folks",
    "start": "1768200",
    "end": "1775360"
  },
  {
    "text": "call it like see command query responsibility segregation but in general we just call it like separate right the effect of Rights and reads on",
    "start": "1775360",
    "end": "1782240"
  },
  {
    "text": "your system so this will scale a lot better than having a bunch of synchronous reads slow down your",
    "start": "1782240",
    "end": "1789000"
  },
  {
    "text": "rights well now you don't need a cache so that saves saves a box um but you",
    "start": "1789000",
    "end": "1794240"
  },
  {
    "text": "know what if like uh so this is kind of cool right like you know if I took this all to the extreme right like I",
    "start": "1794240",
    "end": "1801399"
  },
  {
    "text": "replicate comput everywhere I'm just only sending these small requests all around and I can still respond with red",
    "start": "1801399",
    "end": "1808159"
  },
  {
    "text": "State purple state or whatever right it's all great but um you know I claim",
    "start": "1808159",
    "end": "1814880"
  },
  {
    "text": "here that it's not uh one trick that you've done but you've actually unlocked an entire spectrum of like cute little",
    "start": "1814880",
    "end": "1820679"
  },
  {
    "text": "optimizations you can do with your topology right like you know what if we just keep adding more services and I",
    "start": "1820679",
    "end": "1826600"
  },
  {
    "text": "don't know like just a bunch of business logic right um well like maybe now we",
    "start": "1826600",
    "end": "1832559"
  },
  {
    "text": "need a cach because I don't want to run another instance of our FSM again right",
    "start": "1832559",
    "end": "1838039"
  },
  {
    "text": "like let's say there's a ton of those but well if instead of a cache it's like",
    "start": "1838039",
    "end": "1844480"
  },
  {
    "text": "just another instance of the system and go ahead and replicate right all the state from you know my me my replicator",
    "start": "1844480",
    "end": "1850640"
  },
  {
    "text": "is like some message bus like you could use Kafka you could use something faster right um and then that thing can go",
    "start": "1850640",
    "end": "1857760"
  },
  {
    "text": "ahead and serf but I'm hoping that this kind of highlights that you don't have to go to the extremes with replicating",
    "start": "1857760",
    "end": "1863320"
  },
  {
    "text": "compute or replicating data you can kind of mix and match depending on your own system characteristics",
    "start": "1863320",
    "end": "1872200"
  },
  {
    "text": "right so yeah um running in this way what are some of",
    "start": "1872840",
    "end": "1879519"
  },
  {
    "start": "1874000",
    "end": "2282000"
  },
  {
    "text": "things that we need to kind of worry about well it's kind of like an fq um the",
    "start": "1879519",
    "end": "1886639"
  },
  {
    "text": "first thing we to worry about is this is really only useful if you are very confident in the logic that you are",
    "start": "1886639",
    "end": "1894399"
  },
  {
    "text": "replicating right um it's got It's it's best for things that you really need high performance out of your system on",
    "start": "1894399",
    "end": "1901360"
  },
  {
    "text": "and or mostly super super Mission critical you don't want anything to go wrong with it so presumably this stuff",
    "start": "1901360",
    "end": "1907440"
  },
  {
    "text": "is well tested right and if it's not well then you've just replicated a bunch of bugs everywhere too",
    "start": "1907440",
    "end": "1913320"
  },
  {
    "text": "right um the other thing about trying to to run a deterministic system is that",
    "start": "1913320",
    "end": "1919159"
  },
  {
    "text": "the system should be deterministic none of those boxes can do anything different given the same",
    "start": "1919159",
    "end": "1925279"
  },
  {
    "text": "sequence of requests right because otherwise like it's pretty horrible it's",
    "start": "1925279",
    "end": "1932120"
  },
  {
    "text": "like you've broken TCP right like what would happen if you know in your little set of services like",
    "start": "1932120",
    "end": "1938720"
  },
  {
    "text": "TCP was suddenly broken you couldn't trust anything right so what that means",
    "start": "1938720",
    "end": "1944200"
  },
  {
    "text": "is when you deploy code and you have different versions of your FSM running",
    "start": "1944200",
    "end": "1950120"
  },
  {
    "text": "right your finite State machine your replicated State machine you have to do the old thing um when replaying inputs",
    "start": "1950120",
    "end": "1958519"
  },
  {
    "text": "from the old times right so your new code must do the old thing um so well",
    "start": "1958519",
    "end": "1963880"
  },
  {
    "text": "how do you solve that how do you actually change your system um we basically send a message in",
    "start": "1963880",
    "end": "1972159"
  },
  {
    "text": "send an API request into our input log to actually change things after we've deployed code so this is like pretty",
    "start": "1972159",
    "end": "1978120"
  },
  {
    "text": "powerful um effectively you what you want to do is decouple code deploy from",
    "start": "1978120",
    "end": "1983720"
  },
  {
    "text": "Behavior change in your system once you do that right you can deploy whenever",
    "start": "1983720",
    "end": "1989279"
  },
  {
    "text": "you want um as long as you can maintain you know uh minimize like the switch",
    "start": "1989279",
    "end": "1996600"
  },
  {
    "text": "over costs or failover costs when you eventually bring down your leader right",
    "start": "1996600",
    "end": "2002480"
  },
  {
    "text": "so after we have all this right we can now run 24/7 and I mean everyone uh",
    "start": "2002480",
    "end": "2009639"
  },
  {
    "text": "raise your hands if you run a 247 system okay so so it's like pretty easy",
    "start": "2009639",
    "end": "2017440"
  },
  {
    "text": "like like 247 like y'all have been solving it for for a long time but in traditional markets like none of them are 24/7 so um but with this approach",
    "start": "2017440",
    "end": "2025519"
  },
  {
    "text": "even that can be 247 now so woohooo um well if you need Randomness",
    "start": "2025519",
    "end": "2033840"
  },
  {
    "text": "the random output should be deterministic so you've got you need to use a seed for that stuff or else you'll",
    "start": "2033840",
    "end": "2040440"
  },
  {
    "text": "get drift",
    "start": "2040440",
    "end": "2046960"
  },
  {
    "text": "finally when you're doing work and you're single-threaded right if you",
    "start": "2047560",
    "end": "2053118"
  },
  {
    "text": "start something that does a bunch of work and it locks you know is like say for example infinite looping or",
    "start": "2053119",
    "end": "2058358"
  },
  {
    "text": "something you've effect you've effectively caused an outage because you can't do anything while you're doing work right so that's the extreme example",
    "start": "2058359",
    "end": "2064520"
  },
  {
    "text": "but let's say you're not infinitely looping let's say you're doing I don't know like 100k a million items of",
    "start": "2064520",
    "end": "2070398"
  },
  {
    "text": "transactions spawned off by one request right um to get less Jitter in your",
    "start": "2070399",
    "end": "2077679"
  },
  {
    "text": "response times you may want to like make some trade-offs and dividing that work into stages right",
    "start": "2077679",
    "end": "2087000"
  },
  {
    "text": "um another thing about scaling is that at least for us it's really really easy",
    "start": "2087879",
    "end": "2093118"
  },
  {
    "text": "if everything fits in memory then it can run on your laptop and stuff right so that sounds kind of scary",
    "start": "2093119",
    "end": "2100960"
  },
  {
    "text": "but a lot of stuff can fit in memory um if so what we do because we care about",
    "start": "2101079",
    "end": "2107760"
  },
  {
    "text": "performance is we generally issue kind of variable length data and like arbitrarily nested stuff so basically",
    "start": "2107760",
    "end": "2114520"
  },
  {
    "text": "instead of having things kind of be document stores and just like nested objects you of what instead of strings",
    "start": "2114520",
    "end": "2120720"
  },
  {
    "text": "all of our data which is branching on our logic is fixed length so a lot of",
    "start": "2120720",
    "end": "2127920"
  },
  {
    "text": "kind of using registers right 64-bit integers 34- bit integer 32-bit integers",
    "start": "2127920",
    "end": "2133520"
  },
  {
    "text": "and instead of processing like massive arrays of things we try to process them one transaction at a time so if that's",
    "start": "2133520",
    "end": "2141200"
  },
  {
    "text": "the case with a few gigabytes of RAM how you know uh 64- bit integers about eight",
    "start": "2141200",
    "end": "2146480"
  },
  {
    "text": "bytes right you can fit like millions of customers stuff in memory unlike one",
    "start": "2146480",
    "end": "2152680"
  },
  {
    "text": "machine right so you don't really need to Shard if you're careful about how you",
    "start": "2152680",
    "end": "2159720"
  },
  {
    "text": "model how your data fits",
    "start": "2159720",
    "end": "2165720"
  },
  {
    "text": "also well you'd scale better if you could use multiple threads well I submit that having one thread a hot thread",
    "start": "2166040",
    "end": "2173599"
  },
  {
    "text": "running at I don't know like 3 point something gigahertz or whatever you can basically have programs that can handle",
    "start": "2173599",
    "end": "2180079"
  },
  {
    "text": "complicated business logic in like in the low number low digits of micros on",
    "start": "2180079",
    "end": "2186560"
  },
  {
    "text": "the cloud or and maybe in bare metal you can even go less than a micro what that a microsc right so what that means is",
    "start": "2186560",
    "end": "2193520"
  },
  {
    "text": "your throughput is like 700k per second up to maybe about a million right per",
    "start": "2193520",
    "end": "2200079"
  },
  {
    "text": "second should be generally plenty for you know a lot of systems right that",
    "start": "2200079",
    "end": "2206640"
  },
  {
    "text": "you can do all on one box of logic maybe replicated five times but instead of",
    "start": "2206640",
    "end": "2212560"
  },
  {
    "text": "having say like hundreds of machines running your logic right and a gigantic database so it's a lot",
    "start": "2212560",
    "end": "2220560"
  },
  {
    "text": "cheaper one thing you do have to worry about is you do have to apply a little bit of craft because your thing is single-threaded which means again it's",
    "start": "2222200",
    "end": "2229280"
  },
  {
    "text": "all handling it can only handle one thing at a time for Simplicity right but",
    "start": "2229280",
    "end": "2234359"
  },
  {
    "text": "um that means you don't want to do a lot of complicated stuff you want to make sure that you keep your 99s and 99.9",
    "start": "2234359",
    "end": "2242880"
  },
  {
    "text": "down to maintain the slos you like but if you got a lot of control over your system you can do",
    "start": "2242880",
    "end": "2249960"
  },
  {
    "text": "that and finally you have to rate limit your inputs right because uh a client um",
    "start": "2249960",
    "end": "2257480"
  },
  {
    "text": "that has a runaway case could just fill your Logs with junk right and now you're over here replicating junk and that's",
    "start": "2257480",
    "end": "2264079"
  },
  {
    "text": "generally not good for availability so it's like really really important to um",
    "start": "2264079",
    "end": "2270520"
  },
  {
    "text": "uh validate your input which in general we do right um so yeah",
    "start": "2270520",
    "end": "2278200"
  },
  {
    "text": "in conclusion what we say generally is that",
    "start": "2278200",
    "end": "2283720"
  },
  {
    "start": "2282000",
    "end": "2333000"
  },
  {
    "text": "like Simplicity right keeping things simple removing lots of other concerns right generally gets you stability right",
    "start": "2283720",
    "end": "2291760"
  },
  {
    "text": "um should get you performance um and get you speed development speed because",
    "start": "2291760",
    "end": "2297920"
  },
  {
    "text": "it'll U more logic more domain logic can fit in your head right um and how do we",
    "start": "2297920",
    "end": "2306200"
  },
  {
    "text": "get Simplicity right um hopefully I don't have to sell Simplicity right everyone wants to keep it simple but you",
    "start": "2306200",
    "end": "2312880"
  },
  {
    "text": "know if you've got like important logic right making it deterministic keeps it simple right and",
    "start": "2312880",
    "end": "2320200"
  },
  {
    "text": "then once you have that you can do you know some fun things to save money and",
    "start": "2320200",
    "end": "2325560"
  },
  {
    "text": "scale up right so yeah and if y'all already do this then really really happy",
    "start": "2325560",
    "end": "2333880"
  },
  {
    "start": "2333000",
    "end": "2342000"
  },
  {
    "text": "to to discuss stuff thanks [Applause]",
    "start": "2333880",
    "end": "2340839"
  },
  {
    "text": "everyone",
    "start": "2340839",
    "end": "2343839"
  }
]