[
  {
    "start": "0",
    "end": "104000"
  },
  {
    "text": "I'm Danielle frasa my name is Danielle frasa working at protin media Germany",
    "start": "12960",
    "end": "18240"
  },
  {
    "text": "I'm Italian from the accent and today we are going to talk",
    "start": "18240",
    "end": "23320"
  },
  {
    "text": "how we integrate Kafka with a sever applications we will move to couple of",
    "start": "23320",
    "end": "30519"
  },
  {
    "text": "Integrations and see some limitations in the end we'll see a fully",
    "start": "30519",
    "end": "36120"
  },
  {
    "text": "EV driven applications without uh any type of code and we will finish with my",
    "start": "36120",
    "end": "42360"
  },
  {
    "text": "AWS wishes proesa T media is a German TV",
    "start": "42360",
    "end": "47840"
  },
  {
    "text": "broadcaster Opera in three different segments dating e-commerce and entertainment and part of the",
    "start": "47840",
    "end": "54280"
  },
  {
    "text": "Entertainment Group we heavily invest in AWS this is our daily usage",
    "start": "54280",
    "end": "60440"
  },
  {
    "text": "and I contribute on the service side of the things with me there is Roman yeah",
    "start": "60440",
    "end": "67680"
  },
  {
    "text": "hi everyone my name is Roman and I work as a specialist Solutions architect for sist at AWS and usually what I do I work",
    "start": "67680",
    "end": "76439"
  },
  {
    "text": "with customers like proin and Daniel and they come to me with tons of questions",
    "start": "76439",
    "end": "81680"
  },
  {
    "text": "how to build things how to implement things and yeah we work as a team together uh to help them uh build uh all",
    "start": "81680",
    "end": "89400"
  },
  {
    "text": "that things and yeah today we are going to base our talk on our journey how we",
    "start": "89400",
    "end": "95320"
  },
  {
    "text": "buil this particular solution how we interact with each other and how we came",
    "start": "95320",
    "end": "100560"
  },
  {
    "text": "up to the uh solution in the end um this talk actually reflect the",
    "start": "100560",
    "end": "106399"
  },
  {
    "start": "104000",
    "end": "237000"
  },
  {
    "text": "way I work with AWS especially with Roman I usually get a challenge in a form of a team of a project I do my",
    "start": "106399",
    "end": "114200"
  },
  {
    "text": "analysis I come up with a plan and then I double check with Roman if my WS",
    "start": "114200",
    "end": "120520"
  },
  {
    "text": "design is missing some element as a team leader of content",
    "start": "120520",
    "end": "126119"
  },
  {
    "text": "Discovery team I own few services and we",
    "start": "126119",
    "end": "131160"
  },
  {
    "text": "currently have two products th those products are present in multiple regions",
    "start": "131160",
    "end": "137120"
  },
  {
    "text": "Germany Austria and Switzerland we call the dka Region H what they have in common is",
    "start": "137120",
    "end": "143480"
  },
  {
    "text": "just the naming and uh the two products they are built with two separate backand",
    "start": "143480",
    "end": "150400"
  },
  {
    "text": "they have different technology different framework my goal is to unify them and",
    "start": "150400",
    "end": "156280"
  },
  {
    "text": "give one simless experience to our end user regardless from the countries and the",
    "start": "156280",
    "end": "162480"
  },
  {
    "text": "platform what they have in common is the architecture at high level we have a",
    "start": "162480",
    "end": "167760"
  },
  {
    "text": "company bus and a cluster a cluster per service and the naming of the service",
    "start": "167760",
    "end": "174159"
  },
  {
    "text": "everything is duplicated when uh so I decide to move",
    "start": "174159",
    "end": "179200"
  },
  {
    "text": "to server because when when I was looking into the implementation of all these clusters I",
    "start": "179200",
    "end": "185319"
  },
  {
    "text": "know there a few problems the deployment times was very long H each of them implemented their",
    "start": "185319",
    "end": "192200"
  },
  {
    "text": "own type of subscription to the topic of cka sometimes they handle error in a",
    "start": "192200",
    "end": "197560"
  },
  {
    "text": "different way they throw they swallow the error but mostly all of those",
    "start": "197560",
    "end": "202599"
  },
  {
    "text": "cluster could not handle sudden Spike traffic so because the complexity of",
    "start": "202599",
    "end": "209200"
  },
  {
    "text": "merging to different backand is quite High I want to remove from my plates a",
    "start": "209200",
    "end": "215879"
  },
  {
    "text": "few problems like have ability and scalability so because of this I mve to",
    "start": "215879",
    "end": "221400"
  },
  {
    "text": "AWS to the AWS servess offering that is pretty much is two things they are",
    "start": "221400",
    "end": "227000"
  },
  {
    "text": "taking care of ability scalability and we developer just focus on what really",
    "start": "227000",
    "end": "232360"
  },
  {
    "text": "count implementing code and delivering values so this was my first question to",
    "start": "232360",
    "end": "240319"
  },
  {
    "start": "237000",
    "end": "552000"
  },
  {
    "text": "Roman why Kafka how can I implement it with servus yeah and actually when we",
    "start": "240319",
    "end": "246920"
  },
  {
    "text": "started looking at this uh solution uh it looked uh to me that yeah uh it",
    "start": "246920",
    "end": "253480"
  },
  {
    "text": "looked simple like one cluster consuming events from Kafka then and maybe another",
    "start": "253480",
    "end": "260000"
  },
  {
    "text": "cluster consuming also events from Kafka but it turned out uh quite uh soon that",
    "start": "260000",
    "end": "266160"
  },
  {
    "text": "yeah this Kafka was using like a central event Bridge so uh and I was asking uh",
    "start": "266160",
    "end": "273000"
  },
  {
    "text": "Daniel questions how you're using this CF car so you're using as a service bus",
    "start": "273000",
    "end": "279479"
  },
  {
    "text": "uh this was uh the the main case but it was also used for some other things as",
    "start": "279479",
    "end": "285520"
  },
  {
    "text": "well so uh it was used for as synchronous communication between different Services U probably some of",
    "start": "285520",
    "end": "292560"
  },
  {
    "text": "them were using it as a database which is not the good case and it it was more",
    "start": "292560",
    "end": "299759"
  },
  {
    "text": "look like a mess because now everyone was uh putting events to the Kafka event",
    "start": "299759",
    "end": "307759"
  },
  {
    "text": "buses and it was more like not as specific domain events but also quite",
    "start": "307759",
    "end": "314880"
  },
  {
    "text": "wide events uh and uh then uh different consumers from different departments",
    "start": "314880",
    "end": "320120"
  },
  {
    "text": "were also connecting to the these Central cfab bars and uh we started thinking that yeah probably there might",
    "start": "320120",
    "end": "327199"
  },
  {
    "text": "be another option how you can the couple events within a particular domain uh D",
    "start": "327199",
    "end": "333600"
  },
  {
    "text": "Danielle was responsible for and we start discussing different options and",
    "start": "333600",
    "end": "340479"
  },
  {
    "text": "one of the idea was uh if you have you still have this Kafka as a central bus",
    "start": "340479",
    "end": "346199"
  },
  {
    "text": "and you can't get rid of it anyway because it's like a company standard and you still have to do something uh uh but",
    "start": "346199",
    "end": "354160"
  },
  {
    "text": "uh if you want to decouple and you want to have like a better management of your own events within your own domain",
    "start": "354160",
    "end": "362080"
  },
  {
    "text": "probably there's another option how you can do that and we started looking at event Bridge uh bus as a central event",
    "start": "362080",
    "end": "370360"
  },
  {
    "text": "bus for a specific domain uh where Daniel was building things and yeah",
    "start": "370360",
    "end": "376120"
  },
  {
    "text": "event bus if you don't know it's like a sess uh AWS service which allows you to",
    "start": "376120",
    "end": "382199"
  },
  {
    "text": "uh get events from different producers then you can Define different rules uh",
    "start": "382199",
    "end": "387599"
  },
  {
    "text": "uh which allow you to Route those uh events to different consumers and the",
    "start": "387599",
    "end": "393160"
  },
  {
    "text": "next question uh we started to discuss between myself and Dani was uh whether",
    "start": "393160",
    "end": "401520"
  },
  {
    "text": "it is event router or whether it is uh an event store and it turned out that if",
    "start": "401520",
    "end": "407400"
  },
  {
    "text": "you use kovka you usually use it more like an event store and yeah it is more",
    "start": "407400",
    "end": "412919"
  },
  {
    "text": "like a buffer between different uh microservices or different components within your system uh but another",
    "start": "412919",
    "end": "420800"
  },
  {
    "text": "implication of Kafka is that now at the current architecture each consumer have",
    "start": "420800",
    "end": "426759"
  },
  {
    "text": "to pull events out of the Kafka topic and there were different",
    "start": "426759",
    "end": "431960"
  },
  {
    "text": "implementations uh maybe with different uh Solutions and some of uh the",
    "start": "431960",
    "end": "438800"
  },
  {
    "text": "developers decided to uh swallow errors some of them decided to uh process some",
    "start": "438800",
    "end": "446440"
  },
  {
    "text": "errors but there were no no consistency of how they consume events from uh Kar",
    "start": "446440",
    "end": "453720"
  },
  {
    "text": "uh and uh one of the ideas at first we we're talking about is that yeah we can",
    "start": "453720",
    "end": "459960"
  },
  {
    "text": "standardize if we move out from uh using ECS and and cluster with containers uh",
    "start": "459960",
    "end": "468120"
  },
  {
    "text": "to Lambda functions because yeah Lambda can implement this consuming uh events",
    "start": "468120",
    "end": "473680"
  },
  {
    "text": "from uh event uh from Kafka uh there's a Event Source mapper uh and bu built-in",
    "start": "473680",
    "end": "480159"
  },
  {
    "text": "functionality within Lambda and you can standardize how you can consume events but then uh we realize that yeah there's",
    "start": "480159",
    "end": "486960"
  },
  {
    "text": "another uh problem uh with Kafka is that yeah it's tightly coupled with all uh",
    "start": "486960",
    "end": "492479"
  },
  {
    "text": "the domains and we came to this event router uh mechanism when we want to uh",
    "start": "492479",
    "end": "499440"
  },
  {
    "text": "have like a dedicated uh system which allows us to Define different rules how",
    "start": "499440",
    "end": "506080"
  },
  {
    "text": "we want to distribute those events uh and uh yeah of course decoupled producers from consumers but uh now uh",
    "start": "506080",
    "end": "514159"
  },
  {
    "text": "uh one of the differences uh also we observed is that event bridge now pushes",
    "start": "514159",
    "end": "520640"
  },
  {
    "text": "events to the different consumers to Lambda functions or uh to API destinations for example and now it's",
    "start": "520640",
    "end": "527680"
  },
  {
    "text": "more like responsibility of the event bridge to make sure that the event is delivered to the Final Destination and",
    "start": "527680",
    "end": "534800"
  },
  {
    "text": "uh now on the consumer side you have like uh uh easier implement ation so you",
    "start": "534800",
    "end": "540399"
  },
  {
    "text": "don't need to work with many things and errors and it has additional",
    "start": "540399",
    "end": "546680"
  },
  {
    "text": "capabilities like retries and filtering but then uh came uh the",
    "start": "546680",
    "end": "553000"
  },
  {
    "start": "552000",
    "end": "678000"
  },
  {
    "text": "question yeah we have this Kafka Central bus and now we want to implement new",
    "start": "553000",
    "end": "559600"
  },
  {
    "text": "functionality with event brid and uh how but but still we need somehow connect",
    "start": "559600",
    "end": "565279"
  },
  {
    "text": "them because still we have this Central bus and we can't get rid of it uh so we need connect and Daniel asked how how",
    "start": "565279",
    "end": "574040"
  },
  {
    "text": "can we do that and my first uh uh suggestion to him was there's another",
    "start": "574040",
    "end": "580760"
  },
  {
    "text": "part of event Bridge which is called event Bridge pipes and probably it can solve your U uh question and it it can",
    "start": "580760",
    "end": "588640"
  },
  {
    "text": "help you to build this bridge between Kafka and event bridge and you started",
    "start": "588640",
    "end": "594040"
  },
  {
    "text": "to experiment with that yes so EV Bridge pipe is an amazing service it takes care",
    "start": "594040",
    "end": "599720"
  },
  {
    "text": "is taking sorry is taking care of our the point too connections for us and",
    "start": "599720",
    "end": "606279"
  },
  {
    "text": "when you associate with heavenridge as a Target it become very powerful because",
    "start": "606279",
    "end": "611640"
  },
  {
    "text": "now you can listen to the any type of changes and find out to your Downstream",
    "start": "611640",
    "end": "618320"
  },
  {
    "text": "Services H pipes are coming with so many features ER events filter events batch",
    "start": "618320",
    "end": "624600"
  },
  {
    "text": "events higher is the batch higher is the trut but is keep keep the order of the",
    "start": "624600",
    "end": "630360"
  },
  {
    "text": "event that are coming from Kafka but what is very interesting for me was the enrichment pattern they with the",
    "start": "630360",
    "end": "636880"
  },
  {
    "text": "enrichment I can intercept the source message modify in a way that my",
    "start": "636880",
    "end": "642639"
  },
  {
    "text": "Downstream Services can understand it all of this feature together allow me to",
    "start": "642639",
    "end": "647959"
  },
  {
    "text": "standardize the way we interact with cka topics and because a lot of feature are",
    "start": "647959",
    "end": "654760"
  },
  {
    "text": "already built in I don't write a quote I don't need to write an implementation",
    "start": "654760",
    "end": "660120"
  },
  {
    "text": "for whatever sorts we are using and whatever Target is all taken care from",
    "start": "660120",
    "end": "665680"
  },
  {
    "text": "the heavenridge pipe and these actually allow me to reduce the time to market",
    "start": "665680",
    "end": "671200"
  },
  {
    "text": "for our appliations even though if I was sold with EV Bridge pipe I always ask",
    "start": "671200",
    "end": "678120"
  },
  {
    "start": "678000",
    "end": "1025000"
  },
  {
    "text": "the next questions do we have alternative and it was a an interesting question uh",
    "start": "678120",
    "end": "686800"
  },
  {
    "text": "because yeah usually if you worked with AWS you know that there are different",
    "start": "686800",
    "end": "691959"
  },
  {
    "text": "ways to solve the same uh Sol problem uh there are similar services and similar",
    "start": "691959",
    "end": "698519"
  },
  {
    "text": "uh uh ways of doing that and when uh Daniel asked me this question uh really",
    "start": "698519",
    "end": "705800"
  },
  {
    "text": "uh I realized that yeah there there's another alternative how you can connect Kafka with event Bri and it was uh uh a",
    "start": "705800",
    "end": "716079"
  },
  {
    "text": "standard way so uh if you used Kafka uh you know that there's a certain",
    "start": "716079",
    "end": "721920"
  },
  {
    "text": "specification which is called Kafka connect and it allows you to uh either consume events from different uh sources",
    "start": "721920",
    "end": "730079"
  },
  {
    "text": "and push them to Kafka or it can also uh uh you can also build a connector uh",
    "start": "730079",
    "end": "738199"
  },
  {
    "text": "because it's like an interface and you can implement this interface uh to uh get to Kafka topic and uh to produce",
    "start": "738199",
    "end": "746360"
  },
  {
    "text": "those events uh to that event breach uh and uh then uh one of our colleagues",
    "start": "746360",
    "end": "754920"
  },
  {
    "text": "uh inside of AWS they built this open source uh C Kafka connector and",
    "start": "754920",
    "end": "760480"
  },
  {
    "text": "essentially uh it allows you to uh connect uh to different Kafka uh uh",
    "start": "760480",
    "end": "768560"
  },
  {
    "text": "implementations so it doesn't matter whether you have Kafka running on Prem or you have Kafka managed by confluent",
    "start": "768560",
    "end": "776120"
  },
  {
    "text": "or Kafka managed by msk uh uh it's the same implementation and the good thing",
    "start": "776120",
    "end": "783120"
  },
  {
    "text": "here is that uh for some customers who want to connect uh for example Kafka",
    "start": "783120",
    "end": "789720"
  },
  {
    "text": "running on premises there's uh no way uh to connect uh even Bridge pipes uh to",
    "start": "789720",
    "end": "796920"
  },
  {
    "text": "Kafka on Prem because uh there might be different uh network uh security",
    "start": "796920",
    "end": "803560"
  },
  {
    "text": "policies uh which don't allow you to expose a Kafka end point to the public internet or there might be different",
    "start": "803560",
    "end": "811760"
  },
  {
    "text": "connectivity issues with uh Kafka connector you can do that and then you can produce event Bridge uh uh events",
    "start": "811760",
    "end": "819920"
  },
  {
    "text": "and then yeah you can use event Bridge uh to just route those events to different destinations so the question",
    "start": "819920",
    "end": "828000"
  },
  {
    "text": "came uh from Danel as well uh how and what type of connector should I use uh",
    "start": "828000",
    "end": "834639"
  },
  {
    "text": "for uh my use case and essentially uh",
    "start": "834639",
    "end": "839920"
  },
  {
    "text": "if we look at differences first of all with event Bridge pipes uh in addition",
    "start": "839920",
    "end": "846360"
  },
  {
    "text": "to kofka you can also consume events and connect uh other uh sources like sqs s",
    "start": "846360",
    "end": "854680"
  },
  {
    "text": "uh Dynamo DB streams Kinesis so there are more uh different ways how you can consume",
    "start": "854680",
    "end": "862240"
  },
  {
    "text": "events uh and then you can publish them not only to event Bridge directly",
    "start": "862240",
    "end": "867839"
  },
  {
    "text": "sometimes for example if you want to get events from Kafka and invoke maybe step",
    "start": "867839",
    "end": "873800"
  },
  {
    "text": "functions State mchine you can do that with event Bridge pipes directly so you don't need to have like an intermediate",
    "start": "873800",
    "end": "880880"
  },
  {
    "text": "uh connector here and also event Bridge pipes uh allows you to do filtering and",
    "start": "880880",
    "end": "888440"
  },
  {
    "text": "enrichment so if you get an event from Kafka and you want to uh uh change it uh",
    "start": "888440",
    "end": "895279"
  },
  {
    "text": "and maybe enrich it or filter out uh you can also do that with event Bridge pipes",
    "start": "895279",
    "end": "902360"
  },
  {
    "text": "uh uh while with uh kovka connector you can only consume events from Kafka uh",
    "start": "902360",
    "end": "909199"
  },
  {
    "text": "topics and you can only produce U events to the event Bridge so you can't make",
    "start": "909199",
    "end": "916199"
  },
  {
    "text": "any changes to those events you can't enrich them uh and there was a quite",
    "start": "916199",
    "end": "922120"
  },
  {
    "text": "interesting uh limitation uh because uh when you start connecting different",
    "start": "922120",
    "end": "927440"
  },
  {
    "text": "Services uh you start to understand that there are different quarters and limits",
    "start": "927440",
    "end": "932800"
  },
  {
    "text": "for those services and for example if you use Kafka uh you can produce uh",
    "start": "932800",
    "end": "938160"
  },
  {
    "text": "messages or events up to 10 megabytes uh so they're quite huge uh but if you uh",
    "start": "938160",
    "end": "944120"
  },
  {
    "text": "USE events with eventbridge pipe or or eventbridge uh the limit is two 2 56",
    "start": "944120",
    "end": "952600"
  },
  {
    "text": "kilobytes and uh the problem here was that uh if you use Kafka connector and",
    "start": "952600",
    "end": "959079"
  },
  {
    "text": "and it sees that the event is bigger than 256 kilobytes and it cannot publish",
    "start": "959079",
    "end": "967600"
  },
  {
    "text": "the event to the event Bridge it will uh notify you and tell that yeah I can't",
    "start": "967600",
    "end": "973399"
  },
  {
    "text": "produce this event and put that event back to Kafka dlq or somewhere so this",
    "start": "973399",
    "end": "979920"
  },
  {
    "text": "event won't come to eventbridge and there's no option how you can do that",
    "start": "979920",
    "end": "984959"
  },
  {
    "text": "but in Daniel's case it was the case sometimes uh they produced because again",
    "start": "984959",
    "end": "990440"
  },
  {
    "text": "it was like a central uh event bus for all the domains so they tend to be to",
    "start": "990440",
    "end": "996319"
  },
  {
    "text": "have bigger events uh in these Kafka topics and the uh option with event",
    "start": "996319",
    "end": "1002240"
  },
  {
    "text": "Bridge pipes allowed us uh to solve this uh problem with claim check pattern and",
    "start": "1002240",
    "end": "1007959"
  },
  {
    "text": "with enrichment step and we will uh take tell you a little bit more details uh",
    "start": "1007959",
    "end": "1013759"
  },
  {
    "text": "during our talk uh how we implemented that so the choice was made and",
    "start": "1013759",
    "end": "1019360"
  },
  {
    "text": "uh for this use case we decided to move with event Bridge pipes so when we decide to to move with",
    "start": "1019360",
    "end": "1028199"
  },
  {
    "start": "1025000",
    "end": "1406000"
  },
  {
    "text": "Heaven Bridge pipe I raise other type of questions now the my original",
    "start": "1028199",
    "end": "1033678"
  },
  {
    "text": "architecture all my all the some microservices were sharing",
    "start": "1033679",
    "end": "1039079"
  },
  {
    "text": "internal private event to the company bus so this is not how a micr service",
    "start": "1039079",
    "end": "1045520"
  },
  {
    "text": "should work because if they if a microservice expose publicly is internal",
    "start": "1045520",
    "end": "1051919"
  },
  {
    "text": "State now you can have a random team in the company that subscribe to that event",
    "start": "1051919",
    "end": "1057520"
  },
  {
    "text": "and you titly cob together so if you want to change something you will break the other team so because of this I also",
    "start": "1057520",
    "end": "1066080"
  },
  {
    "text": "raise another type of questions how can we decouple this and uh and Roman explain it how to",
    "start": "1066080",
    "end": "1074919"
  },
  {
    "text": "deou it yes exactly uh another uh th uh we were uh right uh up until now we were",
    "start": "1074919",
    "end": "1083360"
  },
  {
    "text": "talking only how to get events from Kafka and publish them to the event bridge but also there was another thing",
    "start": "1083360",
    "end": "1091159"
  },
  {
    "text": "we had to solve how if we have some events originating from uh Daniel's uh",
    "start": "1091159",
    "end": "1098799"
  },
  {
    "text": "domain and Daniel's Services we still need to publish them back uh to this Central bus because yeah we still need",
    "start": "1098799",
    "end": "1106120"
  },
  {
    "text": "to notify other customers and other demands that yeah something has happened",
    "start": "1106120",
    "end": "1111679"
  },
  {
    "text": "so uh the solution uh we came up was that yeah we have this Kafka uh on Prem",
    "start": "1111679",
    "end": "1119720"
  },
  {
    "text": "uh running and managed by Conlin then we uh have an event Bridge pipe consuming",
    "start": "1119720",
    "end": "1127320"
  },
  {
    "text": "events from the uh uh these Kafka topics and Publishing them to the event bridge",
    "start": "1127320",
    "end": "1134799"
  },
  {
    "text": "and here the interesting thing you see that we have several event Bridges uh",
    "start": "1134799",
    "end": "1140280"
  },
  {
    "text": "because inside uh Daniel teams they also",
    "start": "1140280",
    "end": "1145640"
  },
  {
    "text": "have like uh different responsibilities and different uh contexts and different",
    "start": "1145640",
    "end": "1150679"
  },
  {
    "text": "teams building different parts of the application we decided that yeah uh like",
    "start": "1150679",
    "end": "1156919"
  },
  {
    "text": "uh there should be a central event Bridge which connects different uh",
    "start": "1156919",
    "end": "1162360"
  },
  {
    "text": "bounded contexts and different subdomains inside Daniel service but",
    "start": "1162360",
    "end": "1168200"
  },
  {
    "text": "each team inside U this uh particular project was also uh uh responsible for a",
    "start": "1168200",
    "end": "1175320"
  },
  {
    "text": "specific functionality and specific uh business logic and they will have like",
    "start": "1175320",
    "end": "1180720"
  },
  {
    "text": "their own internal event bus just to uh uh connect their specific things",
    "start": "1180720",
    "end": "1186880"
  },
  {
    "text": "internally not to expose and not to share uh uh unnecessary uh things and",
    "start": "1186880",
    "end": "1193240"
  },
  {
    "text": "unnecessary events to the outside world so uh the flow was like we can events",
    "start": "1193240",
    "end": "1199760"
  },
  {
    "text": "from Kafka then we use event Bridge uh Central Hub to uh subscribe uh to the",
    "start": "1199760",
    "end": "1207720"
  },
  {
    "text": "events from uh the Kafka uh to uh for the particular Services who are",
    "start": "1207720",
    "end": "1213120"
  },
  {
    "text": "interested in a specific events then those Services they do some processing they Implement their own business logic",
    "start": "1213120",
    "end": "1220080"
  },
  {
    "text": "and at some point of time they may also produce events back to this Central uh",
    "start": "1220080",
    "end": "1225520"
  },
  {
    "text": "uh Hub uh event Bridge Hub but now now uh the uh question came up how we can uh",
    "start": "1225520",
    "end": "1233480"
  },
  {
    "text": "publish those events back uh to the Kafka if we want and need to to do so",
    "start": "1233480",
    "end": "1239840"
  },
  {
    "text": "and we also uh considered two Alternatives here the first alternative was uh it's easy we we can create a",
    "start": "1239840",
    "end": "1248360"
  },
  {
    "text": "Lambda function uh we can have a an event B uh rule uh invoking this Lambda",
    "start": "1248360",
    "end": "1255240"
  },
  {
    "text": "function and then in in Lambda function in Java we write uh kka producer uh and",
    "start": "1255240",
    "end": "1260760"
  },
  {
    "text": "we just published those events but uh our ultimate uh goal was to write as uh",
    "start": "1260760",
    "end": "1267960"
  },
  {
    "text": "little code as possible because uh the team didn't want to maintain to test it",
    "start": "1267960",
    "end": "1273960"
  },
  {
    "text": "and want to uh have like a standard way of doing things so we looked at",
    "start": "1273960",
    "end": "1280080"
  },
  {
    "text": "Alternatives and uh the alternative was to produce events via API destination",
    "start": "1280080",
    "end": "1286600"
  },
  {
    "text": "because uh with confluent Kafka you can can also expose a rest API endpoint uh",
    "start": "1286600",
    "end": "1292000"
  },
  {
    "text": "where you can just send a rest API uh uh post message and it will just publish",
    "start": "1292000",
    "end": "1299159"
  },
  {
    "text": "that message to a specific Kafka topic and with event breach you can have this",
    "start": "1299159",
    "end": "1304760"
  },
  {
    "text": "API destination which uh automatically do do that for you you just uh have a",
    "start": "1304760",
    "end": "1310880"
  },
  {
    "text": "rule uh telling that yeah I want to publish that to the uh API destination and then you configure the API",
    "start": "1310880",
    "end": "1317039"
  },
  {
    "text": "destination just to point to this rest API endpoint and then uh uh the events",
    "start": "1317039",
    "end": "1323440"
  },
  {
    "text": "will be published but uh it worked well but uh as usual uh with any AWS or",
    "start": "1323440",
    "end": "1331640"
  },
  {
    "text": "external Services especially when you go to this serus domain you should be aware of different quarters and limits and",
    "start": "1331640",
    "end": "1339799"
  },
  {
    "text": "although we tested all the limits and quarters on eventbridge and API",
    "start": "1339799",
    "end": "1345720"
  },
  {
    "text": "destinations uh it turned out that confluent also has its own limitations",
    "start": "1345720",
    "end": "1351640"
  },
  {
    "text": "so uh if you publish more than uh three,",
    "start": "1351640",
    "end": "1357120"
  },
  {
    "text": "3,000 uh events uh to Confluence rest API end point your events uh and your",
    "start": "1357120",
    "end": "1364000"
  },
  {
    "text": "messages will be throttled and of course you there's uh things uh you should",
    "start": "1364000",
    "end": "1370039"
  },
  {
    "text": "consider and uh you should also think yeah if you don't write any code it",
    "start": "1370039",
    "end": "1376000"
  },
  {
    "text": "doesn't me mean that there won't be any issues any errors and you still have to",
    "start": "1376000",
    "end": "1382799"
  },
  {
    "text": "uh think how you will handle errors on the end points of of course you need to introduce some dead letter CU so that if",
    "start": "1382799",
    "end": "1389440"
  },
  {
    "text": "you don't want to lose any events or messages then uh you should Implement",
    "start": "1389440",
    "end": "1394919"
  },
  {
    "text": "retries and dead letter policy uh so that you preserve all the events but in",
    "start": "1394919",
    "end": "1400559"
  },
  {
    "text": "general uh this was the schema we wanted to implement and we went into the",
    "start": "1400559",
    "end": "1406120"
  },
  {
    "start": "1406000",
    "end": "1791000"
  },
  {
    "text": "implementation so after Roman explan this is how I work usually with Roman we",
    "start": "1406120",
    "end": "1411440"
  },
  {
    "text": "with this three questions he always give me all the speeches in the end I decide the final architecture so I I have",
    "start": "1411440",
    "end": "1419279"
  },
  {
    "text": "implemented The Bu to bus architecture for all my services remember as a Content Discovery I own multiple",
    "start": "1419279",
    "end": "1426080"
  },
  {
    "text": "Services now I expose one bus for the entire for all my microservices and each",
    "start": "1426080",
    "end": "1433960"
  },
  {
    "text": "microservices has his own local bus instead of implementing",
    "start": "1433960",
    "end": "1439559"
  },
  {
    "text": "instead of implementing an sqs SNS I all my microservices communicate to each",
    "start": "1439559",
    "end": "1445600"
  },
  {
    "text": "other with their local bus if a micros service a need to communicate to the microservice B it will pass through the",
    "start": "1445600",
    "end": "1453400"
  },
  {
    "text": "local bus local bus to the content Discovery bus and move move the",
    "start": "1453400",
    "end": "1459480"
  },
  {
    "text": "formation back to the other microservices all of them do not know anything about Kafka and all the the",
    "start": "1459480",
    "end": "1467919"
  },
  {
    "text": "integr is made through the comp the team uh bus the event this is called EV bus",
    "start": "1467919",
    "end": "1475320"
  },
  {
    "text": "mesh this actually allow me to uh fix the problem of exposing private event on",
    "start": "1475320",
    "end": "1481880"
  },
  {
    "text": "the company bus and now the microservice can actually grow in complete isolations",
    "start": "1481880",
    "end": "1487600"
  },
  {
    "text": "I can control the publishing and the subscribing of the message based on the",
    "start": "1487600",
    "end": "1492679"
  },
  {
    "text": "requirement of the microservice when we are talking about heav driven application we we need to",
    "start": "1492679",
    "end": "1498919"
  },
  {
    "text": "talk about the type of the schema so we usually have sparts event and full State",
    "start": "1498919",
    "end": "1505000"
  },
  {
    "text": "they have their own thir off essentially sparts event is the bare minimum",
    "start": "1505000",
    "end": "1510240"
  },
  {
    "text": "informations this means that the subscriber need to retrieve the data for functioning it could put some load to",
    "start": "1510240",
    "end": "1517799"
  },
  {
    "text": "the to the service that hold the data full State instead you are receiving",
    "start": "1517799",
    "end": "1523320"
  },
  {
    "text": "everything but if you want to change a property add something remove something",
    "start": "1523320",
    "end": "1529919"
  },
  {
    "text": "you will break the interface and you'll end up with different type of",
    "start": "1529919",
    "end": "1534960"
  },
  {
    "text": "problems why I'm talking about this we mentioned before the Kafka can have a",
    "start": "1534960",
    "end": "1540760"
  },
  {
    "text": "pad sides much bigger than any serverless service of",
    "start": "1540760",
    "end": "1547000"
  },
  {
    "text": "AWS this means that if the P that is coming from kfka is way bigger than 256",
    "start": "1547000",
    "end": "1555520"
  },
  {
    "text": "kilobytes of any EV Bridge sqs SNS the message is lost you have no idea why and",
    "start": "1555520",
    "end": "1564320"
  },
  {
    "text": "how so there is a solution for that and this is called the claiming check",
    "start": "1564320",
    "end": "1569880"
  },
  {
    "text": "pattern the claiming check pattern is very simple you are getting the original H message stored in this case S3 and",
    "start": "1569880",
    "end": "1578159"
  },
  {
    "text": "move the S3 reference to the uh Downstream service so in this case my",
    "start": "1578159",
    "end": "1583799"
  },
  {
    "text": "target is EV bridge and EV bridge will find out to the other down service the",
    "start": "1583799",
    "end": "1589320"
  },
  {
    "text": "advantage is now regardless from the payload sides the system will just work",
    "start": "1589320",
    "end": "1596960"
  },
  {
    "text": "H you improve the performances because you don't need to move a lot of data all around with just a reference and I can",
    "start": "1596960",
    "end": "1605159"
  },
  {
    "text": "actually fully use the target batch in this case 10 if you want to use consider",
    "start": "1605159",
    "end": "1612880"
  },
  {
    "text": "you always need to remember that one message in EV bridge is 256 kilobyte but",
    "start": "1612880",
    "end": "1618799"
  },
  {
    "text": "also 10 so uh if you want using if you want to use the full batch you need to",
    "start": "1618799",
    "end": "1625080"
  },
  {
    "text": "make sure that the 10 message that you are passing to the EV Bridge are a total",
    "start": "1625080",
    "end": "1630159"
  },
  {
    "text": "size of 256 kilobytes so I I will show you now h a service a",
    "start": "1630159",
    "end": "1639159"
  },
  {
    "text": "bookmark it's very simple bookmark essentially is a user that want to",
    "start": "1639159",
    "end": "1644200"
  },
  {
    "text": "bookmark a video and watching later on okay it's we it's a v ID and the user ID this",
    "start": "1644200",
    "end": "1652799"
  },
  {
    "text": "service use what everything that we just talk about um there is a Kafka event",
    "start": "1652799",
    "end": "1659120"
  },
  {
    "text": "this Kafka event will will end up inside the pipe with a richment pattern we will store it in S3 move the reference to",
    "start": "1659120",
    "end": "1666720"
  },
  {
    "text": "ebridge and we will find out the bookmark service is interest to know",
    "start": "1666720",
    "end": "1672000"
  },
  {
    "text": "when a video is Mark deleted because now need to find all the user with that",
    "start": "1672000",
    "end": "1677640"
  },
  {
    "text": "video and deleted right this uh uh we will use S3 notifications with Heaven bridge",
    "start": "1677640",
    "end": "1685519"
  },
  {
    "text": "where uh we will trigger H EV Bridge rule with an HTTP API destinations that",
    "start": "1685519",
    "end": "1692360"
  },
  {
    "text": "will go to n Gateway as a proxy where we will have some vtl that will delete an",
    "start": "1692360",
    "end": "1698600"
  },
  {
    "text": "item in Dynamo DB Dynamo DB will have a stream the stream will go inside another",
    "start": "1698600",
    "end": "1703840"
  },
  {
    "text": "pipe and then we will have other HTTP API Destin that will",
    "start": "1703840",
    "end": "1709799"
  },
  {
    "text": "synchronize the deletions operation with the cach and will send a message back to",
    "start": "1709799",
    "end": "1715840"
  },
  {
    "text": "kafa for synchronizing this operation with other teams no we will will emit an",
    "start": "1715840",
    "end": "1721279"
  },
  {
    "text": "event bookmark has been deleted now from this beautiful",
    "start": "1721279",
    "end": "1727080"
  },
  {
    "text": "animation you can see actually the flow so H here I actually leverage the seress",
    "start": "1727080",
    "end": "1735080"
  },
  {
    "text": "serverless offering I use their manage service all of them I then just put them",
    "start": "1735080",
    "end": "1740880"
  },
  {
    "text": "together and now I have an available scalable system all of these Services",
    "start": "1740880",
    "end": "1746640"
  },
  {
    "text": "all my services are multi- region because I we are present in multiple",
    "start": "1746640",
    "end": "1751799"
  },
  {
    "text": "regions and I actually wrote two Lambda in this case the first one to write to",
    "start": "1751799",
    "end": "1758279"
  },
  {
    "text": "to store the message inside S3 to get the reference and the",
    "start": "1758279",
    "end": "1763679"
  },
  {
    "text": "second one in the bookmark to find all the user that bookmarked that video and",
    "start": "1763679",
    "end": "1771360"
  },
  {
    "text": "store them in S3 for logging reason where there is the event that will",
    "start": "1771360",
    "end": "1777559"
  },
  {
    "text": "trigger the adom that's it it's very simple it took me two hours pretty much to write to",
    "start": "1777559",
    "end": "1785720"
  },
  {
    "text": "build this service instead to Reinventing the whe right so with this",
    "start": "1785720",
    "end": "1790799"
  },
  {
    "text": "we can actually move to my wishes integrating Kafka with seress service is not without",
    "start": "1790799",
    "end": "1799799"
  },
  {
    "start": "1791000",
    "end": "2089000"
  },
  {
    "text": "any issues so we saw that if the pad is bigger than sqs SNS EV Bridge the",
    "start": "1799799",
    "end": "1807720"
  },
  {
    "text": "messages got lost so and EV bridge will give you H pipes will tell you bad",
    "start": "1807720",
    "end": "1814799"
  },
  {
    "text": "request but it will not tell you P sides you will not you will not know why this",
    "start": "1814799",
    "end": "1820240"
  },
  {
    "text": "is failing so my first wish is an increase of pelot sides ideally up to 6 megabyte",
    "start": "1820240",
    "end": "1828159"
  },
  {
    "text": "like a Lambda so I don't need to take care to know every single quotas in the",
    "start": "1828159",
    "end": "1833760"
  },
  {
    "text": "Ws ecosystem and because the um Heaven",
    "start": "1833760",
    "end": "1839840"
  },
  {
    "text": "Bridge or pipes or HTTP API destination allow you to send a message a fail",
    "start": "1839840",
    "end": "1845799"
  },
  {
    "text": "delivery to a dlq I would like that automatically this dlq is actually",
    "start": "1845799",
    "end": "1851279"
  },
  {
    "text": "become an est3 because even if one of these service fail to deliver to the",
    "start": "1851279",
    "end": "1856720"
  },
  {
    "text": "Target they cannot store the failed message in any dlq I mean the dlq is",
    "start": "1856720",
    "end": "1861960"
  },
  {
    "text": "still 2 256 kilobytes so the message disappear from your system without you",
    "start": "1861960",
    "end": "1868960"
  },
  {
    "text": "knowing about right so this will be will become an issues because you can have",
    "start": "1868960",
    "end": "1874679"
  },
  {
    "text": "out of sync data some around and you will never find out better metrics pipes just got some",
    "start": "1874679",
    "end": "1882399"
  },
  {
    "text": "metrics in the last event but HT HTTP API destination is is still a black box",
    "start": "1882399",
    "end": "1888919"
  },
  {
    "text": "I don't know how much do I use if they get throttle I don't know anything about",
    "start": "1888919",
    "end": "1895200"
  },
  {
    "text": "and because we're talking about API destinations I would like to have better quota by default you are getting 300",
    "start": "1895200",
    "end": "1901840"
  },
  {
    "text": "requests per seconds maximum is 3,000 request per second if you want to go",
    "start": "1901840",
    "end": "1908080"
  },
  {
    "text": "more you cannot do it this is a hard quot that they cannot change the only",
    "start": "1908080",
    "end": "1913320"
  },
  {
    "text": "way to go around is to duplicate your HTTP a destination",
    "start": "1913320",
    "end": "1919120"
  },
  {
    "text": "add the custom rules where you're are setting a parameter uh at publishing",
    "start": "1919120",
    "end": "1924240"
  },
  {
    "text": "time so in this way let's say a random numbers and the ebridge rule will listen",
    "start": "1924240",
    "end": "1930559"
  },
  {
    "text": "to these numbers and root the message this is the only way Kafka ER Kafka as a",
    "start": "1930559",
    "end": "1937840"
  },
  {
    "text": "Target or also also S3 as a Target in this way I will actually stop I will",
    "start": "1937840",
    "end": "1944039"
  },
  {
    "text": "write less code currently um based on the service and the amount of request I",
    "start": "1944039",
    "end": "1951600"
  },
  {
    "text": "decide to use the cka proxy with HTTP a destination like in this case or I use a",
    "start": "1951600",
    "end": "1958679"
  },
  {
    "text": "Lambda if I could Target I could Target a CF as um with the with pipes I will",
    "start": "1958679",
    "end": "1966760"
  },
  {
    "text": "not even do this I know I will just configure it and I will have less problems AWS will take care S3 is",
    "start": "1966760",
    "end": "1975919"
  },
  {
    "text": "because in this way I will stop to write the the check claiming check pattern if",
    "start": "1975919",
    "end": "1983000"
  },
  {
    "text": "I can just move straight away the the payload to S3 from the S3 I can have the",
    "start": "1983000",
    "end": "1988320"
  },
  {
    "text": "events to EV bridge and from there I start so end of the day I don't want to write code I have so many problems less",
    "start": "1988320",
    "end": "1996159"
  },
  {
    "text": "I write less responsibility I get the better I am and because my",
    "start": "1996159",
    "end": "2002440"
  },
  {
    "text": "infrastructure is All multi- Region I would like to use the global end points of EV brid",
    "start": "2002440",
    "end": "2008279"
  },
  {
    "text": "that actually is not Global at all is a failover uh failover configuration that",
    "start": "2008279",
    "end": "2013639"
  },
  {
    "text": "allow you only to replicate the messages in two regions and you require to write",
    "start": "2013639",
    "end": "2019720"
  },
  {
    "text": "code in a Lambda so I would like to have it as a Target as well but last but not",
    "start": "2019720",
    "end": "2026679"
  },
  {
    "text": "least every time that a message fail to to theb deliver it go to a dlq in case",
    "start": "2026679",
    "end": "2033039"
  },
  {
    "text": "the below is small but you need to write custom code to to R drive and to resend",
    "start": "2033039",
    "end": "2040240"
  },
  {
    "text": "this message in so I would like to have this basically automatically as have all",
    "start": "2040240",
    "end": "2046720"
  },
  {
    "text": "all other services if I get all of this I will be super happy and I will actually don't",
    "start": "2046720",
    "end": "2053638"
  },
  {
    "text": "not not write a lot of code anything else from your side yeah thanks and it",
    "start": "2053639",
    "end": "2060118"
  },
  {
    "text": "it is always uh available for us as AWS",
    "start": "2060119",
    "end": "2065679"
  },
  {
    "text": "to talk to such customers who provide a lot of feedback and a lot of wishes and uh we take them into account and",
    "start": "2065679",
    "end": "2072358"
  },
  {
    "text": "hopefully uh sometime soon we will Implement them but if we look at the",
    "start": "2072359",
    "end": "2080280"
  },
  {
    "text": "summary of today's talk and what uh you should take take out of uh implementing",
    "start": "2080280",
    "end": "2086878"
  },
  {
    "text": "Kafka and integrating it with event Bridge pipes so yeah you can do that so",
    "start": "2086879",
    "end": "2092800"
  },
  {
    "start": "2089000",
    "end": "2185000"
  },
  {
    "text": "if you have like a kfka as a central event BS or you uh already use Kafka to",
    "start": "2092800",
    "end": "2100359"
  },
  {
    "text": "publish events and messages uh it doesn't prevent you from using event",
    "start": "2100359",
    "end": "2105480"
  },
  {
    "text": "bridge for certain use cases so you if you want to get most out of event bridge",
    "start": "2105480",
    "end": "2112200"
  },
  {
    "text": "and you want to have like an event router and uh publish those events to",
    "start": "2112200",
    "end": "2118079"
  },
  {
    "text": "different destinations you can integrate Kafka with eventbridge and there are two",
    "start": "2118079",
    "end": "2123760"
  },
  {
    "text": "options how you can do that either by using event Bridge pipes or using in open source kavka",
    "start": "2123760",
    "end": "2130560"
  },
  {
    "text": "connector also uh if you start implementing as much as possible with",
    "start": "2130560",
    "end": "2135680"
  },
  {
    "text": "surus first mindset and you start uh using uh different built-in functionality of those uh AWS servess",
    "start": "2135680",
    "end": "2143880"
  },
  {
    "text": "Services you can reduce your complexity and costs so that you don't uh use",
    "start": "2143880",
    "end": "2149800"
  },
  {
    "text": "unnecessary Lambda functions you don't write unnecessary code you don't have to maintain it uh and usually you can",
    "start": "2149800",
    "end": "2157200"
  },
  {
    "text": "increase your scalability and flexibility and of course uh uh the the",
    "start": "2157200",
    "end": "2162319"
  },
  {
    "text": "less code your developers are writing so the less responsibility are on your teams so the less you need to test and",
    "start": "2162319",
    "end": "2170280"
  },
  {
    "text": "to monitor so all all of that things uh if you go with serverless first approach",
    "start": "2170280",
    "end": "2175480"
  },
  {
    "text": "and using native capabilities of event Bridge event Bridge pipes and other AWS",
    "start": "2175480",
    "end": "2181160"
  },
  {
    "text": "Services they can bring a lot of value to you with that thank you very much",
    "start": "2181160",
    "end": "2189279"
  }
]