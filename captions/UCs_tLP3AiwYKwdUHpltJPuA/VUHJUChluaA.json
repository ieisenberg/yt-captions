[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "so hello and welcome to building single page applications the right way as Brian",
    "start": "440",
    "end": "6960"
  },
  {
    "text": "said my name is Justin Meyer I'm the CEO of Bovi and for the last eight years all",
    "start": "6960",
    "end": "13360"
  },
  {
    "text": "I've been doing is building big JavaScript applications um for in every",
    "start": "13360",
    "end": "18400"
  },
  {
    "text": "kind of situation you can imagine and uh this talk there was about 30 in that slide uh",
    "start": "18400",
    "end": "26000"
  },
  {
    "text": "this talk is about is about the top techniques or the most unique techniques",
    "start": "26000",
    "end": "33040"
  },
  {
    "text": "we use to build high performance maintainable and a little bit fun",
    "start": "33040",
    "end": "39680"
  },
  {
    "start": "36000",
    "end": "72000"
  },
  {
    "text": "JavaScript applications I've structured this talk into 10 five minute lightning talks so",
    "start": "39680",
    "end": "48039"
  },
  {
    "text": "I'm going to have to go extremely fast it will get a little technical if you uh",
    "start": "48039",
    "end": "53760"
  },
  {
    "text": "if you don't understand some of the code or the slides um just try to listen to the sound of my voice because it'll be",
    "start": "53760",
    "end": "59600"
  },
  {
    "text": "explain in principle what I'm doing just ignore what you see on the screen uh so uh with that in mind um oh",
    "start": "59600",
    "end": "70320"
  },
  {
    "text": "wait one first thing I got to talk about I created a place my order application that is a simple app that encompasses",
    "start": "70320",
    "end": "77680"
  },
  {
    "start": "72000",
    "end": "166000"
  },
  {
    "text": "all of the techniques thank you whoever just turned up the mic you can find it at Bovi place my",
    "start": "77680",
    "end": "84640"
  },
  {
    "text": "order and I'm going to be using it for all the examples and techniques I talk about today so I'm I'm just going to go",
    "start": "84640",
    "end": "90720"
  },
  {
    "text": "real quick and show what's in the app so that when we talk about these techniques you can see how it",
    "start": "90720",
    "end": "97439"
  },
  {
    "text": "applies uh very simple app has a homepage when you uh server side rendered when you um choose a restaurant",
    "start": "97520",
    "end": "105520"
  },
  {
    "text": "it's going to make a push state that allows you to pick a state and pick a",
    "start": "105520",
    "end": "111719"
  },
  {
    "text": "city and get information about a restaurant and place an",
    "start": "111719",
    "end": "118360"
  },
  {
    "text": "order so I'll do go to Chicago and 312 of",
    "start": "118360",
    "end": "125039"
  },
  {
    "text": "course and I'll place my order and once you place an order you can um see an",
    "start": "125039",
    "end": "131400"
  },
  {
    "text": "order history where you can walk through um each order through different states",
    "start": "131400",
    "end": "137319"
  },
  {
    "text": "so it's preparing out for delivery delivered and this is a real-time application if someone else was on it",
    "start": "137319",
    "end": "143319"
  },
  {
    "text": "making changes you would you would see those changes so this app if you do",
    "start": "143319",
    "end": "148519"
  },
  {
    "text": "check it out on get Hub has everything that I'm talking about so you can go",
    "start": "148519",
    "end": "154480"
  },
  {
    "text": "back and kind of learn these things in detail so despite how technical I said",
    "start": "154480",
    "end": "161720"
  },
  {
    "text": "this talk was going to be the first thing that I think we do unique at Bovi is make use of",
    "start": "161720",
    "end": "167959"
  },
  {
    "start": "166000",
    "end": "289000"
  },
  {
    "text": "checklists um checklists have a long history of making everything better um",
    "start": "167959",
    "end": "173400"
  },
  {
    "text": "from helping pilots fly to helping doctors save lives we have a checklist",
    "start": "173400",
    "end": "179599"
  },
  {
    "text": "project project that you can see here Bovi GitHub IO checklist that is a really simple checklist that has just a",
    "start": "179599",
    "end": "187360"
  },
  {
    "text": "bunch of um management ux and development questions things like",
    "start": "187360",
    "end": "195280"
  },
  {
    "text": "are there social events are there uh what what is the vision for the project in the road map um do you do user",
    "start": "195280",
    "end": "203120"
  },
  {
    "text": "experience testing do you um what another good one do you do Source uh",
    "start": "203120",
    "end": "209280"
  },
  {
    "text": "code review I think checklists have worked really well for us",
    "start": "209280",
    "end": "215080"
  },
  {
    "text": "because um let me get back to presenter viiew because I think everybody knows",
    "start": "215080",
    "end": "221720"
  },
  {
    "text": "what needs to be done on a project it's just hard sometimes prioritizing it we",
    "start": "221720",
    "end": "226840"
  },
  {
    "text": "all know we should be doing code reviews we all know we should be writing tests um sometimes we don't do it mostly",
    "start": "226840",
    "end": "232560"
  },
  {
    "text": "because you know we have other priorities other things we're thinking about a checklist makes it easy to make sure everybody's doing the right thing",
    "start": "232560",
    "end": "239079"
  },
  {
    "text": "at all times because we've done so many projects uh over probably like 34 projects now uh we",
    "start": "239079",
    "end": "246400"
  },
  {
    "text": "have some interesting data to regarding what um impacts what strongest uh what",
    "start": "246400",
    "end": "253560"
  },
  {
    "text": "correlates strongest with success so these are the highest",
    "start": "253560",
    "end": "259000"
  },
  {
    "text": "management related things that correlate to success obviously the the number one thing that correlates to success is can",
    "start": "259000",
    "end": "265520"
  },
  {
    "text": "you release a project within six months right that that's an obvious one things",
    "start": "265520",
    "end": "271840"
  },
  {
    "text": "like yearly trainings and companies that actually have social events for their team outside of work uh those also",
    "start": "271840",
    "end": "279000"
  },
  {
    "text": "strongly correlate to success the design things that correlate strongly to success doing user testing getting",
    "start": "279000",
    "end": "285160"
  },
  {
    "text": "design documentation now here's the really interesting thing these are the highest development related factors that",
    "start": "285160",
    "end": "292160"
  },
  {
    "start": "289000",
    "end": "472000"
  },
  {
    "text": "correlate to success and they're far uh they correlate to sex success far less",
    "start": "292160",
    "end": "298039"
  },
  {
    "text": "than most of the management and most of the ux uh",
    "start": "298039",
    "end": "304520"
  },
  {
    "text": "questions so this having checklist at least for us as a company has um guided",
    "start": "304520",
    "end": "310759"
  },
  {
    "text": "us and kind of humbled us because we realize that management and user experience decisions often matter much",
    "start": "310759",
    "end": "317280"
  },
  {
    "text": "more than uh technology decisions but as technologists we're constantly getting",
    "start": "317280",
    "end": "322919"
  },
  {
    "text": "hung up in framework battles and things like that where if you really care about the success of your project you might",
    "start": "322919",
    "end": "329120"
  },
  {
    "text": "look into to some of the more of the management user experience um items that your team should be",
    "start": "329120",
    "end": "335960"
  },
  {
    "text": "doing so that's the only non-technical one so let's get into the technical",
    "start": "335960",
    "end": "341479"
  },
  {
    "text": "stuff so I found this awesome quote on um G uh JavaScript Guru Chrome team",
    "start": "341479",
    "end": "348400"
  },
  {
    "text": "engineer add amman's website and it says the secret to building large apps is to never build large applications break",
    "start": "348400",
    "end": "355400"
  },
  {
    "text": "your applications into small pieces then assemble those testable bite-sized pieces pieces into your big",
    "start": "355400",
    "end": "361639"
  },
  {
    "text": "application uh it's extremely well said that that's that's me that's a joke but",
    "start": "361639",
    "end": "367240"
  },
  {
    "text": "I think it's too small so you guys can't read it realize how hilarious I am um so one of our earliest most important",
    "start": "367240",
    "end": "376479"
  },
  {
    "text": "development strategies um was the introduction of the modlet workflow which treats every module as its own",
    "start": "376479",
    "end": "384400"
  },
  {
    "text": "application what this means in practice is that instead of organizing your projects like this",
    "start": "384400",
    "end": "390560"
  },
  {
    "text": "where every module is grouped by type you have a folder for all your JavaScript files a folder for all your",
    "start": "390560",
    "end": "396039"
  },
  {
    "text": "CSS files we always group everything every module in its own folder every",
    "start": "396039",
    "end": "402880"
  },
  {
    "text": "module has its own folder has its own tests its own documentation um any other",
    "start": "402880",
    "end": "408120"
  },
  {
    "text": "files like CSS or templates that are associated with it go in that folder and there's two other things that",
    "start": "408120",
    "end": "414639"
  },
  {
    "text": "we include we always include a test page that runs just that module's test",
    "start": "414639",
    "end": "420800"
  },
  {
    "text": "tests and for visual widgets um visual modules we include a demo page that",
    "start": "420800",
    "end": "428400"
  },
  {
    "text": "shows off just that that uh module's functionality so the",
    "start": "428400",
    "end": "434840"
  },
  {
    "text": "benefits to this are it's easier to identify when someone's missing tests",
    "start": "434840",
    "end": "440599"
  },
  {
    "text": "right because you can look in the folder and say hey there's no test file also I think developers are much more likely to update a test when the uh when they're",
    "start": "440599",
    "end": "448360"
  },
  {
    "text": "working in a module and the test is staring them in the face because it's in the same folder and of course leading making",
    "start": "448360",
    "end": "455240"
  },
  {
    "text": "tests and making demo page leads to good API design and finally I think the biggest one is that it you can develop",
    "start": "455240",
    "end": "461240"
  },
  {
    "text": "an isolation you can work on your module and its tests just within one folder completely ignoring the rest of the",
    "start": "461240",
    "end": "468960"
  },
  {
    "text": "application so I have a quick example of",
    "start": "468960",
    "end": "474120"
  },
  {
    "start": "472000",
    "end": "673000"
  },
  {
    "text": "this in my so I have my uh app order",
    "start": "474120",
    "end": "484000"
  },
  {
    "text": "page which you can see here I can I can uh edit this I this is the just the",
    "start": "485400",
    "end": "490479"
  },
  {
    "text": "order uh widget and I can also run its",
    "start": "490479",
    "end": "498038"
  },
  {
    "text": "tests pretty pretty basic and this looks like in the code here's my order and I",
    "start": "498720",
    "end": "504080"
  },
  {
    "text": "have my demo page that loads Imports my um my order uh component and uses it in",
    "start": "504080",
    "end": "513360"
  },
  {
    "text": "the page and that's as simple it is to get a demo page and a test page I'm just loading the order test",
    "start": "513360",
    "end": "521560"
  },
  {
    "text": "tests highly encourage people to use this pattern",
    "start": "521560",
    "end": "527880"
  },
  {
    "text": "okay number three so we've taken lately we've taken the idea of every module is its own",
    "start": "527880",
    "end": "535720"
  },
  {
    "text": "application to the furthest extreme that I know by putting a lot lot of our modules in their own projects and then",
    "start": "535720",
    "end": "542519"
  },
  {
    "text": "publishing them to mpm and then importing them into our big",
    "start": "542519",
    "end": "547839"
  },
  {
    "text": "project so for example the place my order app has a tabs widget um instead",
    "start": "547839",
    "end": "555640"
  },
  {
    "text": "of you know hiding it away inside the place my orders code we created a a",
    "start": "555640",
    "end": "563079"
  },
  {
    "text": "standal loan uh put it put bit tabs in its own repository with own tests and to import",
    "start": "563079",
    "end": "572079"
  },
  {
    "text": "it into a project it's as simple as just npm",
    "start": "572079",
    "end": "577200"
  },
  {
    "text": "installing bit tabs which will add it to the node modules",
    "start": "577200",
    "end": "582959"
  },
  {
    "text": "folder and then to import it into that order um",
    "start": "586399",
    "end": "592920"
  },
  {
    "text": "that order module all I do is import bit tabs it is a custom element",
    "start": "592920",
    "end": "600000"
  },
  {
    "text": "and I'm using es6 syntax if people don't recognize that and because it's a custom element",
    "start": "600000",
    "end": "606720"
  },
  {
    "text": "all I have to do is add bit tabs to my page and I'm going to create a panel for",
    "start": "606720",
    "end": "612880"
  },
  {
    "text": "the lunch menu and I'll eventually create a panel",
    "start": "612880",
    "end": "618440"
  },
  {
    "text": "for the uh dinner menu as well and I to make it I just Loop through each menu lunch",
    "start": "618440",
    "end": "624560"
  },
  {
    "text": "item um add a checkbox for if the uh",
    "start": "624560",
    "end": "629839"
  },
  {
    "text": "if the if the lunch menu item is selected and add its name and price and then I'll just copy this",
    "start": "629839",
    "end": "637920"
  },
  {
    "text": "code to make the dinner menu",
    "start": "638079",
    "end": "644079"
  },
  {
    "text": "so hopefully you can see how one side of the putting things in its own repository",
    "start": "644079",
    "end": "649279"
  },
  {
    "text": "and pulling it from npm can be made extremely easy right and any other project that we have if we want bit tabs",
    "start": "649279",
    "end": "655279"
  },
  {
    "text": "we can just npm install it and use it as quickly as I just showed now if you're using commonjs and browserify you're",
    "start": "655279",
    "end": "660959"
  },
  {
    "text": "like this is old hat I've seen this before but if you're using commonjs and",
    "start": "660959",
    "end": "666200"
  },
  {
    "text": "browserify you only you're limiting who can use your code and what code you can",
    "start": "666200",
    "end": "672440"
  },
  {
    "text": "use because one of the biggest problems with client side JavaScript development is the fragmentation of all the",
    "start": "672440",
    "end": "678680"
  },
  {
    "start": "673000",
    "end": "777000"
  },
  {
    "text": "different module loading syntaxes right there's upcoming es uh",
    "start": "678680",
    "end": "683920"
  },
  {
    "text": "es6 syntax which is the import bit tabs there's commonjs and browserify",
    "start": "683920",
    "end": "689360"
  },
  {
    "text": "there's the for to start my timer there's the uh AMD and people still stuck in 2005 are using script tags and",
    "start": "689360",
    "end": "697240"
  },
  {
    "text": "um and Link tags to load their load load their JavaScript code so we use a project to build our",
    "start": "697240",
    "end": "704480"
  },
  {
    "text": "applications called steel JS and that allows us to here's bit tabs code no",
    "start": "704480",
    "end": "710959"
  },
  {
    "text": "matter what bit tabs is loading if it's CSS templates other uh commonjs modules",
    "start": "710959",
    "end": "716360"
  },
  {
    "text": "or AMD modules we can export this project so that it can be used by anybody who's",
    "start": "716360",
    "end": "722839"
  },
  {
    "text": "using AMD commonjs es6 so this will run a",
    "start": "722839",
    "end": "729680"
  },
  {
    "text": "script we I run my grun build script and you'll see It'll create a dist",
    "start": "730519",
    "end": "737360"
  },
  {
    "text": "folder with all of these exports so bit tabs can be used by anybody um and",
    "start": "738560",
    "end": "745279"
  },
  {
    "text": "you'll even see that the tabs uh less file was transpiled to CSS and we",
    "start": "745279",
    "end": "751240"
  },
  {
    "text": "inserted the uh CSS uh plugin for required JS so if",
    "start": "751240",
    "end": "756399"
  },
  {
    "text": "you're using AMD you can actually require this tabs and the Styles it depends on so my hope for all of this is",
    "start": "756399",
    "end": "764560"
  },
  {
    "text": "obviously we use it for reuse a lot we can create widgets use them in all their different projects really",
    "start": "764560",
    "end": "770079"
  },
  {
    "text": "easily also when you pull something out and you publish it to npm it adds that very useful bit of metadata um for the",
    "start": "770079",
    "end": "778160"
  },
  {
    "start": "777000",
    "end": "861000"
  },
  {
    "text": "semantic version of your package because when everything's tucked away in an application and someone makes a changes",
    "start": "778160",
    "end": "785279"
  },
  {
    "text": "a module that your code might depend on you don't know if they've added a new feature or they've broken the API or",
    "start": "785279",
    "end": "791320"
  },
  {
    "text": "they' fixed a bug when you publish something to npm people are putting that version number and typically it gives",
    "start": "791320",
    "end": "796800"
  },
  {
    "text": "you a good idea also it's made release management easier for us we'll actually put our",
    "start": "796800",
    "end": "802880"
  },
  {
    "text": "pages in different repositories for a big site and then if we want to assemble the full site we just point at specific",
    "start": "802880",
    "end": "809839"
  },
  {
    "text": "versions of different pages and if one page version is",
    "start": "809839",
    "end": "815000"
  },
  {
    "text": "breaking well we just roll back to an older version and redeploy the site which is really nice and finally my hope",
    "start": "815000",
    "end": "821279"
  },
  {
    "text": "is for projects like steel JS that it can improve client Side open source",
    "start": "821279",
    "end": "826560"
  },
  {
    "text": "there's a big problem in JavaScript open source Community right now compared if you look at nodes where there's few",
    "start": "826560",
    "end": "833800"
  },
  {
    "text": "projects that depend on other projects it's very hard to build like a rich hierarchy of advanced fun ality in",
    "start": "833800",
    "end": "839600"
  },
  {
    "text": "JavaScript because of all the different module loading syntaxes but if we can make it so that you can use any module",
    "start": "839600",
    "end": "846240"
  },
  {
    "text": "syntax you want and Export it to every other module syntax well then my hope is that we can start getting this Rich",
    "start": "846240",
    "end": "852759"
  },
  {
    "text": "topology of Open Source JavaScript projects so this is this what I just showed enables",
    "start": "852759",
    "end": "859639"
  },
  {
    "text": "that number four custom HTML composition Uh custom elements are",
    "start": "859639",
    "end": "866800"
  },
  {
    "start": "861000",
    "end": "1538000"
  },
  {
    "text": "everywhere um I'm going to talk about why they're awesome and I'm going to talk about what I think we do special",
    "start": "866800",
    "end": "871920"
  },
  {
    "text": "with custom elements so first why it's awesome some of you in this room might",
    "start": "871920",
    "end": "877320"
  },
  {
    "text": "be old enough to remember the old days when you wanted to add functionality to a site you would have to put add some",
    "start": "877320",
    "end": "884639"
  },
  {
    "text": "HTML to your page and then you'd have to in your JavaScript find that element and",
    "start": "884639",
    "end": "890240"
  },
  {
    "text": "invoke some behavior on it that's all gone now because every modern framework",
    "start": "890240",
    "end": "896560"
  },
  {
    "text": "lets you define custom elements and and a custom element when it's inserted into the page you know instantiates itself so",
    "start": "896560",
    "end": "904800"
  },
  {
    "text": "this is what it looks like in react this is what it looks like in angular this is what it looks like in",
    "start": "904800",
    "end": "911440"
  },
  {
    "text": "KJS which is what I'm using for this",
    "start": "911440",
    "end": "916240"
  },
  {
    "text": "presentation when we design um our applications or sorry when we design our",
    "start": "916519",
    "end": "923600"
  },
  {
    "text": "custom elements we design them with this guy in mind this is bov's ux director",
    "start": "923600",
    "end": "929279"
  },
  {
    "text": "right he doesn't know JavaScript but he knows HTML and CSS we have two goals we want to make",
    "start": "929279",
    "end": "936160"
  },
  {
    "text": "our templates so that he can understand them but we also want to make those custom elements powerful enough so that",
    "start": "936160",
    "end": "943240"
  },
  {
    "text": "he can express behaviors without Bo bothering the engineers right so you can change and add a lot of richness to the",
    "start": "943240",
    "end": "949560"
  },
  {
    "text": "page without uh himself just by understanding these elements and rearranging",
    "start": "949560",
    "end": "954959"
  },
  {
    "text": "them so we have one we have two strategies for that the first one is a",
    "start": "954959",
    "end": "960279"
  },
  {
    "text": "tag team of two different types of custom elements the first are custom",
    "start": "960279",
    "end": "965639"
  },
  {
    "text": "elements that can actually load data into the page into the template and the second are custom elements that are",
    "start": "965639",
    "end": "972399"
  },
  {
    "text": "composable themselves here's a ex for example I have a bit graph component where as I add different",
    "start": "972399",
    "end": "979240"
  },
  {
    "text": "series um it'll add you know new lines on the graph given some data so I'm I'm",
    "start": "979240",
    "end": "987160"
  },
  {
    "text": "G to show a quick example of this in",
    "start": "987160",
    "end": "991920"
  },
  {
    "text": "action Let me refresh the page okay so here I have a page that's",
    "start": "993440",
    "end": "998600"
  },
  {
    "text": "just showing a single restaurant's um order history the amount spent on per",
    "start": "998600",
    "end": "1003920"
  },
  {
    "text": "each order and this looks",
    "start": "1003920",
    "end": "1009120"
  },
  {
    "text": "like this where is this looks like this I used my order model to find all",
    "start": "1009120",
    "end": "1017839"
  },
  {
    "text": "orders for cheese curd City that's the name of a restaurant sounds like it's from",
    "start": "1017839",
    "end": "1023160"
  },
  {
    "text": "Wisconsin um and then I I I'm putting that data into the template and then I'm using",
    "start": "1023160",
    "end": "1029918"
  },
  {
    "text": "that data for this bit series now let's say the designer wants to add another uh",
    "start": "1029919",
    "end": "1036360"
  },
  {
    "text": "do a compar side-by-side comparison between cheese curd City and some other uh restaurant poutine Palace um I'm not",
    "start": "1036360",
    "end": "1044280"
  },
  {
    "text": "going to type it out instead I'm going to steal the code they can",
    "start": "1044280",
    "end": "1050280"
  },
  {
    "text": "add another order model so this is going to load poutine palace's data into the",
    "start": "1051080",
    "end": "1056440"
  },
  {
    "text": "page and then all they would have to do is add another bit series",
    "start": "1056440",
    "end": "1064160"
  },
  {
    "text": "for that data and then save the page refresh",
    "start": "1064520",
    "end": "1071640"
  },
  {
    "text": "it and they have created their own new Behavior right they've loaded data",
    "start": "1071640",
    "end": "1076720"
  },
  {
    "text": "themselves they've added a new line to the graph",
    "start": "1076720",
    "end": "1080840"
  },
  {
    "text": "so that's the first thing we do the second thing that we do is and you might",
    "start": "1086799",
    "end": "1092080"
  },
  {
    "text": "have noticed it we actually allow people to declare dependencies in the template themselves so here that can import from",
    "start": "1092080",
    "end": "1100080"
  },
  {
    "text": "UI bit graph bit graph that is actually doing the importing of that module into",
    "start": "1100080",
    "end": "1105840"
  },
  {
    "text": "the page this is great for our designers so if they wanted to bit tabs to the page well they just import bit tabs can",
    "start": "1105840",
    "end": "1113559"
  },
  {
    "text": "import bit tabs and start using it in the page again they don't have to bother us as the",
    "start": "1113559",
    "end": "1119679"
  },
  {
    "text": "engineers so the final thing that we do isn't for our designer it's for us and I really love the upcoming",
    "start": "1120000",
    "end": "1127400"
  },
  {
    "text": "um uh web component spec in that you can kind of Define lightweight components in",
    "start": "1127400",
    "end": "1134200"
  },
  {
    "text": "C kind of in in the page directly this is defining a hello world component that",
    "start": "1134200",
    "end": "1140679"
  },
  {
    "text": "you can see its template and its style and Its Behavior Uh we have our own",
    "start": "1140679",
    "end": "1146039"
  },
  {
    "text": "version of this where you can define a can component and give it its tag its Styles as less um and build things this",
    "start": "1146039",
    "end": "1155240"
  },
  {
    "text": "way so I I really like this for because what happens if in a big application is you tend to start actually getting a lot",
    "start": "1155240",
    "end": "1161679"
  },
  {
    "text": "of little widgets and you don't want to have like five different files a less",
    "start": "1161679",
    "end": "1166720"
  },
  {
    "text": "file a template and a view model for something that can be quite",
    "start": "1166720",
    "end": "1172559"
  },
  {
    "text": "small okay the the next one is number five is unit testable view models this",
    "start": "1173320",
    "end": "1179400"
  },
  {
    "text": "is all about how we um design and test and build our view models and building",
    "start": "1179400",
    "end": "1186240"
  },
  {
    "text": "view models is really like all a lot of times the most work that you're doing in",
    "start": "1186240",
    "end": "1191280"
  },
  {
    "text": "a big JavaScript application so I'm going to use as an",
    "start": "1191280",
    "end": "1196919"
  },
  {
    "text": "example the restaurants order or the sorry when you pick your restaurants page and this page loads the states then",
    "start": "1196919",
    "end": "1204400"
  },
  {
    "text": "you can pick a state then you can it loads your cities you can pick a city then you see your",
    "start": "1204400",
    "end": "1211679"
  },
  {
    "text": "list of restaurants and then if you change your",
    "start": "1211679",
    "end": "1217039"
  },
  {
    "text": "state it re it removes the restaurants and reloads new cities for that state",
    "start": "1217039",
    "end": "1222159"
  },
  {
    "text": "but then you have to pick and it clears the city um the city option right what",
    "start": "1222159",
    "end": "1228280"
  },
  {
    "text": "they chose for their city so first thing I always do is of course look at the functionality and then I identify the",
    "start": "1228280",
    "end": "1236200"
  },
  {
    "text": "values that represent the state right so the way that I always do this is I have some kind of JavaScript object that I",
    "start": "1236200",
    "end": "1242720"
  },
  {
    "text": "keep track of all of the stateful properties of this uh of this um",
    "start": "1242720",
    "end": "1249039"
  },
  {
    "text": "user um of this of the like you the design or the behavior whatever you want to call it",
    "start": "1249039",
    "end": "1257400"
  },
  {
    "text": "so first thing you can see is we're loading States so I'm going to have States as a promise that's going to be",
    "start": "1257600",
    "end": "1263520"
  },
  {
    "text": "an array of all the state data it's going to resolve to an array with all the state data I'm going to say that the",
    "start": "1263520",
    "end": "1270640"
  },
  {
    "text": "state that they pick I'm going to save that state as the um uh as a string for",
    "start": "1270640",
    "end": "1276960"
  },
  {
    "text": "which state they picked cities is going to be a promise of all the cities that are",
    "start": "1276960",
    "end": "1282039"
  },
  {
    "text": "loading and the city that they selected is going to be the name of the city and then finally there's going to be restaurants which is going to a promise",
    "start": "1282039",
    "end": "1289120"
  },
  {
    "text": "with all of the restaurants right this's the first thing I do when I'm coming to a page to design it is I figure out",
    "start": "1289120",
    "end": "1295279"
  },
  {
    "text": "these properties and the behavior for these properties the second thing I do",
    "start": "1295279",
    "end": "1300480"
  },
  {
    "text": "is I write a test for the view model I'm a big fan of test driven",
    "start": "1300480",
    "end": "1305640"
  },
  {
    "text": "development so this is all going to be I'm going to go through these slides really quick so if you don't understand it uh again listen to the words of my",
    "start": "1305640",
    "end": "1312279"
  },
  {
    "text": "voice pay no attention to the screen so to test it I set up my testing infrastructure load the mod modules that",
    "start": "1312279",
    "end": "1319000"
  },
  {
    "text": "I need then I create my fake data for my",
    "start": "1319000",
    "end": "1324640"
  },
  {
    "text": "test because my my view model is going to reach out to the model to ask for you know restaurants and states and",
    "start": "1324640",
    "end": "1331960"
  },
  {
    "text": "cities then I use this fixture utility to hijack all Ajax requests intercept",
    "start": "1331960",
    "end": "1338360"
  },
  {
    "text": "them and instead use the fake data that I'm providing so instead of when a when we",
    "start": "1338360",
    "end": "1343720"
  },
  {
    "text": "try to do an ax request to API States and instead we'll use our fake data that I'm",
    "start": "1343720",
    "end": "1350559"
  },
  {
    "text": "providing and then finally I'll create an instance of my view model that I'm going to create restaurant list view",
    "start": "1350559",
    "end": "1355679"
  },
  {
    "text": "model and then I'll just verify all the different steps I'm going to make sure that the um I'm going to make sure that",
    "start": "1355679",
    "end": "1363360"
  },
  {
    "text": "my State's property is a promise and I'm getting back all my fake States",
    "start": "1363360",
    "end": "1369520"
  },
  {
    "text": "data then I'm going to set the state to a uh State Property to a state and then",
    "start": "1369520",
    "end": "1374840"
  },
  {
    "text": "verify that I get my City's changes and I get a list of",
    "start": "1374840",
    "end": "1380320"
  },
  {
    "text": "cities um from the same same cities that match my fake data and then I'm going to",
    "start": "1380320",
    "end": "1386640"
  },
  {
    "text": "set the city and I'm just going to keep walking through this it's going to change the restaurants and I'm going to get the right restaurant data back and",
    "start": "1386640",
    "end": "1393320"
  },
  {
    "text": "then finally I'm going to set the state to a different state and verify",
    "start": "1393320",
    "end": "1399840"
  },
  {
    "text": "that the city uh value was removed and that I'm getting a list of all cities a",
    "start": "1399840",
    "end": "1405880"
  },
  {
    "text": "list of new cities so that's how I write a test just testing the behavior of the view model",
    "start": "1405880",
    "end": "1412799"
  },
  {
    "text": "and those properties so finally I'm going to write the view model and this is again this is",
    "start": "1412799",
    "end": "1418120"
  },
  {
    "text": "with KJS this is what it looks like it becomes really easy you just Define the behavior for your different properties",
    "start": "1418120",
    "end": "1424960"
  },
  {
    "text": "the state's initial value is all states loaded from the server the state behavior is is side",
    "start": "1424960",
    "end": "1433080"
  },
  {
    "text": "effectual whenever the state is set I want to remove whatever city was set",
    "start": "1433080",
    "end": "1438440"
  },
  {
    "text": "because if you're changing the set the state well then whatever City you've picked should not uh should not count so",
    "start": "1438440",
    "end": "1444440"
  },
  {
    "text": "remove it then I'm going to define the behavior of the cities cities is dependent on the state",
    "start": "1444440",
    "end": "1451440"
  },
  {
    "text": "so if there is a state I'm going to return all cities for that state and otherwise I'm going to return",
    "start": "1451440",
    "end": "1458320"
  },
  {
    "text": "null some of you might be asking that's that's not valid JavaScript syntax it is",
    "start": "1458320",
    "end": "1463559"
  },
  {
    "text": "I'm using es6 syntax that makes an object with State colon state",
    "start": "1463559",
    "end": "1470360"
  },
  {
    "text": "um next uh and finally I'm just going to define the behavior of uh of the restaurants which is just like cities if",
    "start": "1472640",
    "end": "1480919"
  },
  {
    "text": "there's a city in a state return all restaurants uh for that city state",
    "start": "1480919",
    "end": "1488200"
  },
  {
    "text": "combination okay and then the final thing is you just write your template so here the the template is just I'm just",
    "start": "1488200",
    "end": "1495559"
  },
  {
    "text": "showing the part of the template for the State uh drop down and you can see I'm doing things like disabling the select",
    "start": "1495559",
    "end": "1502960"
  },
  {
    "text": "until while States is pending while it's pending I'm showing loading as the only option and then if the person hasn't",
    "start": "1502960",
    "end": "1509679"
  },
  {
    "text": "picked a state I'm going to say choose a state and I'm going to go through the list of states and list them right so I",
    "start": "1509679",
    "end": "1516240"
  },
  {
    "text": "I think the benefits for this model are really that if you're figuring out the",
    "start": "1516240",
    "end": "1521480"
  },
  {
    "text": "stateful properties of your view model and then testing them then the implementation becomes easier to do and",
    "start": "1521480",
    "end": "1527960"
  },
  {
    "text": "then finally your templates become super straightforward right I I do everything in that",
    "start": "1527960",
    "end": "1534880"
  },
  {
    "text": "order okay the next one is two-way",
    "start": "1534880",
    "end": "1540039"
  },
  {
    "start": "1538000",
    "end": "2051000"
  },
  {
    "text": "routing um I'm going to explain the difference between two-way routing and one-way routing give an uh an example",
    "start": "1540039",
    "end": "1545960"
  },
  {
    "text": "use case and the talk about the benefits of two-way routing so everybody's familiar with",
    "start": "1545960",
    "end": "1551120"
  },
  {
    "text": "one-way routing especially if you come from the serers side world one way routing you take in",
    "start": "1551120",
    "end": "1556760"
  },
  {
    "text": "URLs and you get back typically in the server it'll call some method somewhere",
    "start": "1556760",
    "end": "1563760"
  },
  {
    "text": "but really one way routing means you get some URL and you get some data back out",
    "start": "1563760",
    "end": "1568960"
  },
  {
    "text": "from it it goes through the routing rules and gets back out some data so if you had restaurants chees",
    "start": "1568960",
    "end": "1574440"
  },
  {
    "text": "City goes through these routing rules you'll get restaurants chees city as data similarly if you had restaurants",
    "start": "1574440",
    "end": "1581159"
  },
  {
    "text": "cheese City loader goes through uh goes through the these routes you're",
    "start": "1581159",
    "end": "1587440"
  },
  {
    "text": "going to get this object back two-way routing allows you to go",
    "start": "1587440",
    "end": "1592919"
  },
  {
    "text": "from the data back through the routes to get your eventual",
    "start": "1592919",
    "end": "1597960"
  },
  {
    "text": "URL and I'll show why this is really nice a second just give one more example if I had paage restaurant State Illinois",
    "start": "1597960",
    "end": "1604679"
  },
  {
    "text": "City Chicago went through these routes I'll get a URL that looks like",
    "start": "1604679",
    "end": "1610760"
  },
  {
    "text": "that so the benefit the real benefit which I'm going to get to for two-way routing is that",
    "start": "1611840",
    "end": "1619360"
  },
  {
    "text": "you can change if you're using two-way routing you can write your applications so that you can change the routes at any",
    "start": "1619360",
    "end": "1624440"
  },
  {
    "text": "time and you only have to change the routes and the rest of your application just keeps working but to do that you",
    "start": "1624440",
    "end": "1629840"
  },
  {
    "text": "have to change your code slightly so I'm going to show the changes in code so a lot of times people write their apps",
    "start": "1629840",
    "end": "1635640"
  },
  {
    "text": "that look like this if the route matches some pattern do this otherwise the route matches some other pattern do",
    "start": "1635640",
    "end": "1643039"
  },
  {
    "text": "this to use two-way routing the first thing you need to do is change your code",
    "start": "1643039",
    "end": "1648320"
  },
  {
    "text": "to instead use stateful properties that are on the route so instead I'm going to",
    "start": "1648320",
    "end": "1653840"
  },
  {
    "text": "check if the route's page property is home then I'm going to render the home",
    "start": "1653840",
    "end": "1658919"
  },
  {
    "text": "custom element otherwise if it's restaurants I'm going to render the restaurant list",
    "start": "1658919",
    "end": "1665720"
  },
  {
    "text": "element so that's one change you need to make is go from this to this the next change is instead of um writing your",
    "start": "1665720",
    "end": "1673240"
  },
  {
    "text": "URLs like this where you're kind of writing them manually yourself in the template instead you use a template uh",
    "start": "1673240",
    "end": "1680159"
  },
  {
    "text": "you use a helper that is going to go through the reverse routing algorithm and this will take page",
    "start": "1680159",
    "end": "1687159"
  },
  {
    "text": "restaurant slug equals Slug and convert it to the same hre we saw before but the magic of two-way routing",
    "start": "1687159",
    "end": "1694720"
  },
  {
    "text": "is that if you go from uh this these routes to these routes well everything",
    "start": "1694720",
    "end": "1701519"
  },
  {
    "text": "still works cuz it's all just checking properties and all your URLs are created",
    "start": "1701519",
    "end": "1707559"
  },
  {
    "text": "through the re RSE routing algorithm so the benefits it allows you",
    "start": "1707559",
    "end": "1713519"
  },
  {
    "text": "to write your your URLs one way uh or sorry manage all your URLs in one space",
    "start": "1713519",
    "end": "1720360"
  },
  {
    "text": "and have the rest of your application just work no matter what your URLs look",
    "start": "1720360",
    "end": "1725679"
  },
  {
    "text": "like okay the next one is number seven and this is the one I'm probably personally most excited about talking",
    "start": "1726000",
    "end": "1731880"
  },
  {
    "text": "about um I think we've solved in a really good way how to do realtime",
    "start": "1731880",
    "end": "1736960"
  },
  {
    "text": "connections and um a lot of performance optimizations in the uh in the",
    "start": "1736960",
    "end": "1743799"
  },
  {
    "text": "client um real time and performance",
    "start": "1743799",
    "end": "1749679"
  },
  {
    "text": "optimizations can be really tricky to get right sometimes let's say I had two widgets that I wanted to put in the page",
    "start": "1749679",
    "end": "1756240"
  },
  {
    "text": "and write independently and these are each going to show one's going to show completed to-dos the other is going to show",
    "start": "1756240",
    "end": "1762320"
  },
  {
    "text": "incomplete to-dos just some questions to prompt you guys thinking how do we",
    "start": "1762320",
    "end": "1769080"
  },
  {
    "text": "make these two can be combined to make a single request for all to-dos how would we do that um when a serers side update",
    "start": "1769080",
    "end": "1777000"
  },
  {
    "text": "happens and a new to-do is created how do we manage which list to put it in how",
    "start": "1777000",
    "end": "1782399"
  },
  {
    "text": "do we manage when an update happens to Move It from one uh list to another list",
    "start": "1782399",
    "end": "1787880"
  },
  {
    "text": "and then how could we save this their data in local storage so um we don't",
    "start": "1787880",
    "end": "1793799"
  },
  {
    "text": "have to make the same request again the answer to all of these problems is surprisingly simple it's set",
    "start": "1793799",
    "end": "1801799"
  },
  {
    "text": "logic yes sets as in ven diagrams and you might be wondering why",
    "start": "1801799",
    "end": "1806919"
  },
  {
    "text": "sets the reason is is because whenever you request data from a page you're",
    "start": "1806919",
    "end": "1813000"
  },
  {
    "text": "actually providing a represent or you're requesting data from the server you're providing a representation of the set",
    "start": "1813000",
    "end": "1820720"
  },
  {
    "text": "that you want of the data that you want to load right if I wanted all to-dos for user five that are completed true uh I",
    "start": "1820720",
    "end": "1828240"
  },
  {
    "text": "might do something like this and set a represents you know a",
    "start": "1828240",
    "end": "1834279"
  },
  {
    "text": "set now if you treat that like a set and you can use that to compare it to other",
    "start": "1834279",
    "end": "1839640"
  },
  {
    "text": "sets so I have set B here set B is um user fives completed to-do not completed",
    "start": "1839640",
    "end": "1847480"
  },
  {
    "text": "todos who are critical set B represents a subset of",
    "start": "1847480",
    "end": "1853000"
  },
  {
    "text": "set a so I know if I've already loaded set a I don't have to load set B's data",
    "start": "1853000",
    "end": "1859080"
  },
  {
    "text": "so we created a low-l library that allows us to do set comparisons with",
    "start": "1859080",
    "end": "1864720"
  },
  {
    "text": "objects that look like these it also lets you create custom set",
    "start": "1864720",
    "end": "1870600"
  },
  {
    "text": "algebra so that you can um compare uh other things that are not",
    "start": "1870600",
    "end": "1877960"
  },
  {
    "text": "like just straight properties so if I wanted ranges or inumerable innumerable Properties or Boolean type properties",
    "start": "1877960",
    "end": "1883880"
  },
  {
    "text": "then I can do things like this which is compare knows that the a a range that",
    "start": "1883880",
    "end": "1889120"
  },
  {
    "text": "starts at zero and ends at 50 is a subset of a range that starts at zero and ends at 100 now with this set logic",
    "start": "1889120",
    "end": "1896799"
  },
  {
    "text": "I'm going to start walking through a lot of the performance optimizations that you can do so the first one is you have",
    "start": "1896799",
    "end": "1902679"
  },
  {
    "text": "two different widgets that are one's loading completed to-dos the other's loading incomplete to-dos you don't want them to know about each other but what",
    "start": "1902679",
    "end": "1910000"
  },
  {
    "text": "you can have them go through is the same model layer and that model layer can see",
    "start": "1910000",
    "end": "1916600"
  },
  {
    "text": "incoming requests way an instant until a few might have a chance to come together at least ones that are coming at the same time and it can do a union of those",
    "start": "1916600",
    "end": "1924760"
  },
  {
    "text": "sets and instead make a request for all data um let's say I went to a page",
    "start": "1924760",
    "end": "1931679"
  },
  {
    "text": "showing all completed to-do and that requested the just the completed to-dos",
    "start": "1931679",
    "end": "1937480"
  },
  {
    "text": "from the server and then I went to the page showing all to-dos well it's going",
    "start": "1937480",
    "end": "1942880"
  },
  {
    "text": "to request all to-dos like that but I can do a set difference and get and know",
    "start": "1942880",
    "end": "1948919"
  },
  {
    "text": "that I just actually need to because I've already loaded completed ones I know I need to only load the incomplete",
    "start": "1948919",
    "end": "1956320"
  },
  {
    "text": "ones now where the sets really kick in is real-time",
    "start": "1957159",
    "end": "1962880"
  },
  {
    "text": "connections so let's say the server pushed some data for a new to-do complete false",
    "start": "1962880",
    "end": "1969639"
  },
  {
    "text": "id5 U named to-do do dishes you can read",
    "start": "1969639",
    "end": "1975240"
  },
  {
    "text": "um now I've got now I know I've got two different sets in the page that I'm",
    "start": "1975240",
    "end": "1980480"
  },
  {
    "text": "currently showing I'm showing the complete and the incomplete we can do the same set logic to see that the new",
    "start": "1980480",
    "end": "1986960"
  },
  {
    "text": "to-do set is a subset of the incomplete set and then automatically insert that",
    "start": "1986960",
    "end": "1994039"
  },
  {
    "text": "new data into the list and Let Live binding take care of just actually inserting into the Dom with like no",
    "start": "1994039",
    "end": "2000600"
  },
  {
    "text": "additional logic right the supermodel will take care of this and I'll explain how in a",
    "start": "2000600",
    "end": "2006760"
  },
  {
    "text": "second so this place your order app place my order app has using sets all of",
    "start": "2006760",
    "end": "2012760"
  },
  {
    "text": "these things uh automatic live updates it does inline caching which I'm going to explain it can combine requests",
    "start": "2012760",
    "end": "2020039"
  },
  {
    "text": "similar to how we already saw and it also supports fall through caching and all of this stuff you get for free with",
    "start": "2020039",
    "end": "2026440"
  },
  {
    "text": "this underlying set logic I didn't have to like do anything special for this",
    "start": "2026440",
    "end": "2031480"
  },
  {
    "text": "just to work in my application so let's talk about how inline caching works so this is a great",
    "start": "2031480",
    "end": "2038440"
  },
  {
    "text": "technique if you're doing server side rendering when the user comes to the page they're going to request the HTML",
    "start": "2038440",
    "end": "2044919"
  },
  {
    "text": "the page and in line in the HTML of the page um you're going to put the data for",
    "start": "2044919",
    "end": "2053040"
  },
  {
    "start": "2051000",
    "end": "2178000"
  },
  {
    "text": "whatever that page is going to then request uh in this case we put in inline",
    "start": "2053040",
    "end": "2058480"
  },
  {
    "text": "cache variable and then the page is going to be drawn but then JavaScript is going to",
    "start": "2058480",
    "end": "2063878"
  },
  {
    "text": "start running and it's going to try to to make a request for the new preparing delivery",
    "start": "2063879",
    "end": "2070720"
  },
  {
    "text": "and delivered orders the supermodel it's going to go through the supermodel the supermodel is",
    "start": "2070720",
    "end": "2076280"
  },
  {
    "text": "going to see hey you're requesting sets of data that's already in the inline",
    "start": "2076280",
    "end": "2081398"
  },
  {
    "text": "cache I'm going to send that right back to you",
    "start": "2081399",
    "end": "2086520"
  },
  {
    "text": "and the page isn't going to change because it's just getting the same data that was already used to render the page",
    "start": "2086520",
    "end": "2092839"
  },
  {
    "text": "um but the page will now be live with the data that it needed to add behavior",
    "start": "2092839",
    "end": "2098839"
  },
  {
    "text": "and then it'll use that data to update local storage which is important for the next thing which is the fall through",
    "start": "2098839",
    "end": "2106320"
  },
  {
    "text": "cache so the fall through cache um works by",
    "start": "2106320",
    "end": "2114119"
  },
  {
    "text": "when someone goes to this page with push date it's going to make a request for",
    "start": "2114119",
    "end": "2120000"
  },
  {
    "text": "all the data for the page it's going to hit the super model",
    "start": "2120000",
    "end": "2125040"
  },
  {
    "text": "and the super model is going to say oh this is all well these uh different statuses represent all the order data so",
    "start": "2125040",
    "end": "2133440"
  },
  {
    "text": "I'm going to combine that into a single request and I'm going to first send that request to local storage local storage is going to respond with that data and",
    "start": "2133440",
    "end": "2139800"
  },
  {
    "text": "it's going to be used that to satisfy all four of these requests and draw the page but in the background it's going to",
    "start": "2139800",
    "end": "2146960"
  },
  {
    "text": "make a request to the server get the data um get the data from",
    "start": "2146960",
    "end": "2152920"
  },
  {
    "text": "the server it's going to make one request to the server and then use that to update the items in the",
    "start": "2152920",
    "end": "2159319"
  },
  {
    "text": "page and it'll do any insertions or removals with the new data in the new list",
    "start": "2159319",
    "end": "2166960"
  },
  {
    "text": "automatically and let's talk about how real time works so real time works by the server is going to push an updated",
    "start": "2170040",
    "end": "2175800"
  },
  {
    "text": "event the super model knows about all the lists that are active on the page",
    "start": "2175800",
    "end": "2180920"
  },
  {
    "start": "2178000",
    "end": "2463000"
  },
  {
    "text": "because when you requested the data and it gave you back a list it knows about that list and keeps track of it um so",
    "start": "2180920",
    "end": "2188400"
  },
  {
    "text": "when the when an update happens let's say it's changing a new item from new to Preparing it's going to see that the",
    "start": "2188400",
    "end": "2195240"
  },
  {
    "text": "item no longer belongs in the new list and it now belongs in preparing make that change to the um to the to the data",
    "start": "2195240",
    "end": "2202800"
  },
  {
    "text": "model but then live binding will just take care of moving it in the right",
    "start": "2202800",
    "end": "2208040"
  },
  {
    "text": "place so you get realtime behavior for free with sets so I think it's just",
    "start": "2208040",
    "end": "2215160"
  },
  {
    "text": "because I like it so much I think it's worth Worth showing real quick so if I have my",
    "start": "2215160",
    "end": "2221200"
  },
  {
    "text": "um place my",
    "start": "2221200",
    "end": "2224640"
  },
  {
    "text": "order so here I can just delete orders and they'll just disappear on the Left",
    "start": "2231880",
    "end": "2237560"
  },
  {
    "text": "Right real time but I didn't have to do anything other than just called destroy on my model because that'll send the",
    "start": "2237560",
    "end": "2244520"
  },
  {
    "text": "real-time connection out or that'll send a request and the real-time connection will say hey something's been deleted it",
    "start": "2244520",
    "end": "2250520"
  },
  {
    "text": "will go through all the lists that the page is currently rendering and just remove the item",
    "start": "2250520",
    "end": "2255680"
  },
  {
    "text": "automatically I don't know I think that's nuts that you can get real time for free hopefully you guys do",
    "start": "2255680",
    "end": "2263599"
  },
  {
    "text": "too um okay",
    "start": "2263599",
    "end": "2271680"
  },
  {
    "text": "number let me okay number eight live",
    "start": "2274680",
    "end": "2281280"
  },
  {
    "text": "reload so I'm just going to start with a demo for this so you guys if you've ever",
    "start": "2281280",
    "end": "2287680"
  },
  {
    "text": "used requirejs you know that sometimes in a very big application it can take a long time to reload your page so I'm",
    "start": "2287680",
    "end": "2296680"
  },
  {
    "text": "just going to see how long it takes to reload this",
    "start": "2296680",
    "end": "2301599"
  },
  {
    "text": "page okay it's taking 2.46 seconds um",
    "start": "2302000",
    "end": "2308040"
  },
  {
    "text": "we use a lot of live we use live reload technology so I can run and connect this",
    "start": "2308040",
    "end": "2313359"
  },
  {
    "text": "to a a live reload server and now what I can do actually",
    "start": "2313359",
    "end": "2319599"
  },
  {
    "text": "I'm going to do it in the order history",
    "start": "2319599",
    "end": "2322920"
  },
  {
    "text": "page I just want to show the speed difference in which you can develop with live reload",
    "start": "2325359",
    "end": "2333200"
  },
  {
    "text": "um so you can see that and I save and it's almost instantaneous how fast I can",
    "start": "2333920",
    "end": "2341440"
  },
  {
    "text": "see the results of changes in my code and all I have to do is save it and it",
    "start": "2341440",
    "end": "2346720"
  },
  {
    "text": "just just works so I'm going to talk about how this works um but first i'm G",
    "start": "2346720",
    "end": "2351800"
  },
  {
    "text": "to say why it's awesome if it's not",
    "start": "2351800",
    "end": "2355560"
  },
  {
    "text": "self-evident so it's awesome it's all about human attention span really uh if I have to wait 2 seconds for my page to",
    "start": "2359079",
    "end": "2366280"
  },
  {
    "text": "reload that's when I start think about Reddit or checking my emails or or something like that but if I can just",
    "start": "2366280",
    "end": "2371720"
  },
  {
    "text": "make a change and see the page update right away within a second then I'm staying focused on my task um live",
    "start": "2371720",
    "end": "2379079"
  },
  {
    "text": "reloading how it works um first let's talk about how loading Works without",
    "start": "2379079",
    "end": "2384240"
  },
  {
    "text": "live reload U with something like requirejs you go to your page it's going to load your main module then it's going",
    "start": "2384240",
    "end": "2391000"
  },
  {
    "text": "to load your main module's dependencies it's going to run any of the dependencies that don't have dependencies themselves",
    "start": "2391000",
    "end": "2398000"
  },
  {
    "text": "then it's going to keep loading dependencies after dependencies until it loads the whole dependency graph and",
    "start": "2398000",
    "end": "2404640"
  },
  {
    "text": "then it's going to uh start executing these things until it finally executes",
    "start": "2404640",
    "end": "2409839"
  },
  {
    "text": "the history module the main module which will typically write um right out what",
    "start": "2409839",
    "end": "2415760"
  },
  {
    "text": "the page looks like live reloading what it does and why it can be so fast is that when I change",
    "start": "2415760",
    "end": "2422760"
  },
  {
    "text": "history less um what it's going to do is it's going to delete that module modules code",
    "start": "2422760",
    "end": "2428760"
  },
  {
    "text": "and it's going to Mark any parent modules as um as needing to be",
    "start": "2428760",
    "end": "2434920"
  },
  {
    "text": "re-executed it's going to just have to download that one file now and then re-execute it and just only its parent",
    "start": "2434920",
    "end": "2442920"
  },
  {
    "text": "modules uh and then it will update the page with a different color like I showed so this saves a tremendous amount",
    "start": "2442920",
    "end": "2449160"
  },
  {
    "text": "of time you're not having to redownload jQuery you're not even having to execute jQuery you just make a change and all",
    "start": "2449160",
    "end": "2455480"
  },
  {
    "text": "the modules kind of re-execute themselves at need to which is cool that's all about that's a fun one not",
    "start": "2455480",
    "end": "2462400"
  },
  {
    "text": "about performance but this one is very much about performance um we like I feel like we've",
    "start": "2462400",
    "end": "2469760"
  },
  {
    "start": "2463000",
    "end": "2760000"
  },
  {
    "text": "solved how to do models really well I think we've solved how to build your application so it loads as fast as",
    "start": "2469760",
    "end": "2475960"
  },
  {
    "text": "possible really well and in a very unique way five minutes okay so I'll go",
    "start": "2475960",
    "end": "2481880"
  },
  {
    "text": "really fast uh through this Oh I thought I had eight minutes my timer is off",
    "start": "2481880",
    "end": "2488680"
  },
  {
    "text": "okay cool",
    "start": "2488680",
    "end": "2492880"
  },
  {
    "text": "um okay yeah so starting at the wrong slide",
    "start": "2493839",
    "end": "2500079"
  },
  {
    "text": "here so I'm going to explain um I'm G try to go through this really quick because I I like this I'm going to",
    "start": "2500079",
    "end": "2506760"
  },
  {
    "text": "explain uh how to optimize a site that's not progressively loaded because the same techniques apply to a site that is",
    "start": "2506760",
    "end": "2514240"
  },
  {
    "text": "just kind of different static Pages here's my static page pages and here's the modules that they load first thing",
    "start": "2514240",
    "end": "2520040"
  },
  {
    "text": "people do typically when they're building a site like this they'll just cram everything that a page needs into",
    "start": "2520040",
    "end": "2526119"
  },
  {
    "text": "one production file um which isn't great because then if things are used across",
    "start": "2526119",
    "end": "2532640"
  },
  {
    "text": "all the different sites every time the user switches Pages they're having to redownload more than they should have to",
    "start": "2532640",
    "end": "2538280"
  },
  {
    "text": "so the next thing people do is they'll say oh I'm I want to bundle that I want to create those modules in their own",
    "start": "2538280",
    "end": "2543960"
  },
  {
    "text": "bundle and then I'm G to have all my pages open that bundle right so that I",
    "start": "2543960",
    "end": "2549800"
  },
  {
    "text": "can experience some benefits of caching now the problem with this is that it can be tricky very tricky",
    "start": "2549800",
    "end": "2555680"
  },
  {
    "text": "without a lot of trial and error to get the optimal Arrangements of bundles what belongs in what um you know KJS was only",
    "start": "2555680",
    "end": "2563400"
  },
  {
    "text": "used in three of these modules maybe I should have another bundle that these three uh three of the pages load and",
    "start": "2563400",
    "end": "2569680"
  },
  {
    "text": "then they all still also load the core bundle you can make those decisions forever and never get it right but we",
    "start": "2569680",
    "end": "2576200"
  },
  {
    "text": "have an algorithm that can so I'm going to do my best to explain how the algorithm works if this is your",
    "start": "2576200",
    "end": "2581880"
  },
  {
    "text": "dependency graph the first thing it does is pulls out all modules that are the",
    "start": "2581880",
    "end": "2587480"
  },
  {
    "text": "most shared so jQuery and title CSS shared by everything combines",
    "start": "2587480",
    "end": "2592720"
  },
  {
    "text": "them these three things are used all together so combines them slider is used",
    "start": "2592720",
    "end": "2599839"
  },
  {
    "text": "by restaurants in order so I'm going to combine that and I'm just going to keep combining",
    "start": "2599839",
    "end": "2607680"
  },
  {
    "text": "modules until I get um this kind of setup where basically in this situation",
    "start": "2608760",
    "end": "2615079"
  },
  {
    "text": "I'm going to line up the dependencies homepage would have to load these bundles restaurants would have to load",
    "start": "2615079",
    "end": "2621920"
  },
  {
    "text": "these bundles order would have to load these bundles and history would have to load these bundles now this is a dependency",
    "start": "2621920",
    "end": "2628839"
  },
  {
    "text": "graph all of its own where you have perfect caching but and every page only",
    "start": "2628839",
    "end": "2635319"
  },
  {
    "text": "loads exactly what it needs so homepage is only loading what it needs but the problem is restaurants here is loading",
    "start": "2635319",
    "end": "2641640"
  },
  {
    "text": "five different scripts right and if you have 20 pages with overlapping weird dependencies you might have to start",
    "start": "2641640",
    "end": "2648319"
  },
  {
    "text": "loading a ton of bundles that's where the second phase of this bundling algorithm comes in what it can do is it",
    "start": "2648319",
    "end": "2654520"
  },
  {
    "text": "tries all the different combinations which is like you know an NP complete problem but typically hopefully you",
    "start": "2654520",
    "end": "2660400"
  },
  {
    "text": "don't have too many bundles uh so we can try every combination and try to combine",
    "start": "2660400",
    "end": "2665960"
  },
  {
    "text": "bundles um and then it checks how much extra",
    "start": "2665960",
    "end": "2671880"
  },
  {
    "text": "code any one page is going to have to load when you combine bundles so homepage is going have to load slider",
    "start": "2671880",
    "end": "2677440"
  },
  {
    "text": "it's having to load 2 kilobytes order is having to load 30 kilobytes because they have a loading can JS Carousel and",
    "start": "2677440",
    "end": "2684200"
  },
  {
    "text": "cart so it'll try different another combination in this case it's going to combine these two so now restaurants is",
    "start": "2684200",
    "end": "2691160"
  },
  {
    "text": "only loading four modules still and in this case the extra waste to any page is",
    "start": "2691160",
    "end": "2696319"
  },
  {
    "text": "only 7 k so it'll use that combination and then keep going on to if it has to to combine",
    "start": "2696319",
    "end": "2702240"
  },
  {
    "text": "other other modules this is a way that you can get perfect caching and the only cost is you're maybe loading a few extra",
    "start": "2702240",
    "end": "2709200"
  },
  {
    "text": "bytes of code that some other page is going to need that is you're likely to go to that page anyways so that's our",
    "start": "2709200",
    "end": "2715920"
  },
  {
    "text": "bundling algorithm",
    "start": "2715920",
    "end": "2720680"
  },
  {
    "text": "the back to this",
    "start": "2721640",
    "end": "2726240"
  },
  {
    "text": "the only other thing I want to say is how cool we can wire this up um our our",
    "start": "2727559",
    "end": "2733680"
  },
  {
    "text": "act our main module of our application is actually a template and because we can do um loading from the template this",
    "start": "2733680",
    "end": "2740880"
  },
  {
    "text": "is how what it actually looks like we kind of have a routing rules and we'll import if someone navigates to the",
    "start": "2740880",
    "end": "2746240"
  },
  {
    "text": "homepage we import the app Home bundle and when it's resolved we put that element in there and this way we can",
    "start": "2746240",
    "end": "2752319"
  },
  {
    "text": "show a spinner as the user's JavaScript code needs to load or anything like that",
    "start": "2752319",
    "end": "2758920"
  },
  {
    "text": "finally serers side rendering it's all about getting rid of these kind of",
    "start": "2759040",
    "end": "2764359"
  },
  {
    "start": "2760000",
    "end": "2790000"
  },
  {
    "text": "spinners um I'm going to just talk about real quick how we do it it's good for",
    "start": "2764359",
    "end": "2770599"
  },
  {
    "text": "SEO um I have four minutes so I can okay it's good you want server side rendering",
    "start": "2770599",
    "end": "2776079"
  },
  {
    "text": "for perceived performance so the app loads and the user can see their their page even if JavaScript hasn't fully",
    "start": "2776079",
    "end": "2782240"
  },
  {
    "text": "initialized yet and it's great for SEO uh the technique that we use is to run",
    "start": "2782240",
    "end": "2787319"
  },
  {
    "text": "everything in a single context virtual Dom right there's a lot of different techniques what this means what single",
    "start": "2787319",
    "end": "2793720"
  },
  {
    "start": "2790000",
    "end": "3001000"
  },
  {
    "text": "context means is a lot of times people well I'll talk about what it doesn't mean a lot of times people when a new",
    "start": "2793720",
    "end": "2800240"
  },
  {
    "text": "request comes in they will create a headless they'll create a new context in",
    "start": "2800240",
    "end": "2805359"
  },
  {
    "text": "node and which means like it has its own set timeout it's kind of like your own window in node own do new document and",
    "start": "2805359",
    "end": "2812160"
  },
  {
    "text": "run uh all the JavaScript code import all the JavaScript code and run it in there",
    "start": "2812160",
    "end": "2817599"
  },
  {
    "text": "we don't do that we always run in the same context so um basically that means",
    "start": "2817599",
    "end": "2824559"
  },
  {
    "text": "all of our rendering all of our code we only have to load that once and our our rendering um we're not we're not",
    "start": "2824559",
    "end": "2830720"
  },
  {
    "text": "creating like a new document every time to render um and we're using a very what",
    "start": "2830720",
    "end": "2837119"
  },
  {
    "text": "virtual Dom means is we're using a very lightweight Dom it really only has like append child and uh insert before and",
    "start": "2837119",
    "end": "2844680"
  },
  {
    "text": "like remove child it's like the the very few and set attribute very few methods",
    "start": "2844680",
    "end": "2849960"
  },
  {
    "text": "very lightweight very fast um and then I'll talk about when you do things this way the cost of it is you have",
    "start": "2849960",
    "end": "2856839"
  },
  {
    "text": "everything is connected to the render life cycle where because you aren't running in your own context it can be",
    "start": "2856839",
    "end": "2863640"
  },
  {
    "text": "tricky to know that all Ajax requests have finished because there might be in the same context other Ajax requests for",
    "start": "2863640",
    "end": "2869680"
  },
  {
    "text": "a different page response going on and you have to work that out and I'll explain how we work it out but first how",
    "start": "2869680",
    "end": "2876200"
  },
  {
    "text": "do we set up how does this app set up the serers side rendering in general we load our main",
    "start": "2876200",
    "end": "2883599"
  },
  {
    "text": "module which is that stash module uh with a special plugin because it adds",
    "start": "2883599",
    "end": "2888760"
  },
  {
    "text": "node rendering to it and then from uh we get a request",
    "start": "2888760",
    "end": "2894160"
  },
  {
    "text": "however you know in your application you get a request and response object from node um we do that then we take out just",
    "start": "2894160",
    "end": "2903160"
  },
  {
    "text": "the part of the path uh of the URL the requested URL that care about and we",
    "start": "2903160",
    "end": "2908440"
  },
  {
    "text": "have a special render node function that just takes care of um rendering that",
    "start": "2908440",
    "end": "2915480"
  },
  {
    "text": "template um with the with the virtual Dom and it returns a promise that",
    "start": "2915480",
    "end": "2921319"
  },
  {
    "text": "resolves to as you can see here the HTML of the rendered main template and",
    "start": "2921319",
    "end": "2927280"
  },
  {
    "text": "any data that was associated with that page request so if we're waiting for states to load that'll include the",
    "start": "2927280",
    "end": "2933760"
  },
  {
    "text": "states data and we basically pass this all to a layout uh we we also can see",
    "start": "2933760",
    "end": "2939119"
  },
  {
    "text": "here we loaded layout. stash which is just a template that has a body tag and HTML tag that we can insert our main",
    "start": "2939119",
    "end": "2946079"
  },
  {
    "text": "stash into and then we render that and send the result back to the",
    "start": "2946079",
    "end": "2952079"
  },
  {
    "text": "client the only other thing that is uh what I wanted to mention was",
    "start": "2952079",
    "end": "2959640"
  },
  {
    "text": "that um to hook up you know to to prevent the rendering and to send the",
    "start": "2959640",
    "end": "2965280"
  },
  {
    "text": "data along with the um page response for the inline caching we do",
    "start": "2965280",
    "end": "2971440"
  },
  {
    "text": "this so if we have our restaurant view model up at the top where was getting all the states for the component that it belongs",
    "start": "2971440",
    "end": "2978640"
  },
  {
    "text": "to we wait till it's inserted we get that promise and we get our topmost view",
    "start": "2978640",
    "end": "2985040"
  },
  {
    "text": "model and we say hey this is your wait for this page data pass the states promise it'll get serialized and added",
    "start": "2985040",
    "end": "2991280"
  },
  {
    "text": "to the cash this is just how I feel about",
    "start": "2991280",
    "end": "2996880"
  },
  {
    "text": "different techniques for server side rendering um you could duplicate all your code that's terrible for",
    "start": "2996880",
    "end": "3002040"
  },
  {
    "start": "3001000",
    "end": "3048000"
  },
  {
    "text": "maintainability but you can probably get great performance a headless browser is actually really great if you can cache all your pages because a headless",
    "start": "3002040",
    "end": "3008920"
  },
  {
    "text": "browser will almost always certainly run your CL front end code correctly but it's not slow enough or it's too too",
    "start": "3008920",
    "end": "3016000"
  },
  {
    "text": "slow for like Dynamic uh like on demand um server side rendering and I think",
    "start": "3016000",
    "end": "3021599"
  },
  {
    "text": "single context virtual Dom is like the perfect blend of fast enough for on demand server side rendering and uh",
    "start": "3021599",
    "end": "3028839"
  },
  {
    "text": "maintainable enough so you can actually write an application with it so those are my 10 Things I think everybody needs",
    "start": "3028839",
    "end": "3036000"
  },
  {
    "text": "for uh you know a modern JavaScript application I hope those 10 things help you turn your development up to 11 so",
    "start": "3036000",
    "end": "3043079"
  },
  {
    "text": "thank you [Applause]",
    "start": "3043079",
    "end": "3049599"
  }
]