[
  {
    "text": "[Music] welcome to the go-to podcast in this",
    "start": "260",
    "end": "7560"
  },
  {
    "text": "episode Richard Feldman author of Elm in action shares his passion about Elm in a",
    "start": "7560",
    "end": "13160"
  },
  {
    "text": "conversation with lead developer at humo and fellow Elm Advocate Thomas anagrius they discuss how learning to code in Elm",
    "start": "13160",
    "end": "21279"
  },
  {
    "text": "can help software developers whether or not they work with it on a daily",
    "start": "21279",
    "end": "27000"
  },
  {
    "text": "basis created for Developers by developers go-to gathers the best Minds",
    "start": "27439",
    "end": "32520"
  },
  {
    "text": "in the software Community stay up to date with the latest in Tech through goto's top rated events held online and",
    "start": "32520",
    "end": "39280"
  },
  {
    "text": "in person in Chicago Amsterdam and Copenhagen and by subscribing to the go-to conferences YouTube channel where",
    "start": "39280",
    "end": "46680"
  },
  {
    "text": "you can find thousands more highquality de talks learn more at gpa.",
    "start": "46680",
    "end": "53879"
  },
  {
    "text": "Tech we kicked off the conversation by asking Richard what is Elm",
    "start": "54440",
    "end": "61920"
  },
  {
    "text": "what is Elm um so Elm is my favorite programming language uh it's it's a language uh for building web apps uh",
    "start": "63480",
    "end": "71240"
  },
  {
    "text": "building web app uis um so specifically like building uis in the browser um and",
    "start": "71240",
    "end": "76439"
  },
  {
    "text": "generally it's used for building web applications as opposed to for example uh just adding a little bit of",
    "start": "76439",
    "end": "81759"
  },
  {
    "text": "interactivity for um a static page so uh Elm compiles to JavaScript so you can",
    "start": "81759",
    "end": "87920"
  },
  {
    "text": "use it instead of JavaScript um also it has JavaScript interop so if you want you can uh use it in conjunction with",
    "start": "87920",
    "end": "95040"
  },
  {
    "text": "JavaScript um the most popular way that people introduce Elm to an existing codebase is that they will uh start off",
    "start": "95040",
    "end": "101840"
  },
  {
    "text": "with an existing JavaScript code base in like react or angular view or something like that and then they'll introduce just a little bit of elm and then uh see",
    "start": "101840",
    "end": "108799"
  },
  {
    "text": "it grow and grow and grow and then maybe eventually it sort of shifts to where their codebase becomes majority Elm and",
    "start": "108799",
    "end": "114000"
  },
  {
    "text": "then eventually you know almost all or entirely all Elm um that's what we did at my job um back back in 2015 and so",
    "start": "114000",
    "end": "121759"
  },
  {
    "text": "now 5 years later we have uh somewhere around 400,000 lines of elm code um and",
    "start": "121759",
    "end": "127079"
  },
  {
    "text": "very very little almost no remaining Legacy JavaScript code um still a little bit um so yeah it's a it's a type",
    "start": "127079",
    "end": "134879"
  },
  {
    "text": "checked language um it's purely functional uh and it's it's got a lovely user experience I think we then asked",
    "start": "134879",
    "end": "142000"
  },
  {
    "text": "Richard will Elm eventually take over the world yeah that's a great question um personally I think that Elm will",
    "start": "142000",
    "end": "148800"
  },
  {
    "text": "become popular but not the most popular I think uh it's it's sort of seen a slow",
    "start": "148800",
    "end": "154400"
  },
  {
    "text": "and steady growth kind of like python did um so python came out in like the the 990s uh but initially it was not a",
    "start": "154400",
    "end": "161560"
  },
  {
    "text": "very widely used language it just kind of slowly and steadily grew and then it became used in more and more different",
    "start": "161560",
    "end": "166879"
  },
  {
    "text": "domains and then eventually it became quite popular now it's it's sort of among the most popular languages but I",
    "start": "166879",
    "end": "173080"
  },
  {
    "text": "think when it comes to building uh applications in the browser uh it's going to be uh it would take something",
    "start": "173080",
    "end": "179920"
  },
  {
    "text": "really serious uh of a change for something that's not a JavaScript dialect to like take over the world as",
    "start": "179920",
    "end": "186280"
  },
  {
    "text": "it were um JavaScript just has so much momentum having said that uh for me",
    "start": "186280",
    "end": "191319"
  },
  {
    "text": "personally like having spent a lot of time with Elm now I just can't imagine myself taking a JavaScript or typescript",
    "start": "191319",
    "end": "197400"
  },
  {
    "text": "or coffee script job ever again uh it's really just I mean if I'm building a web",
    "start": "197400",
    "end": "202640"
  },
  {
    "text": "app I'm I'm doing it an Elm um and I I think that while also thinking that",
    "start": "202640",
    "end": "207959"
  },
  {
    "text": "elm's not going to take over the world because as we all know um popularity is determined by a lot more things than",
    "start": "207959",
    "end": "213599"
  },
  {
    "text": "just sort of technical Merit um so I think it's it's a great tool for me to use and I'm very happy to teach it to",
    "start": "213599",
    "end": "219760"
  },
  {
    "text": "other people but at the same time I don't think it's going to be number one in terms of popularity that's my",
    "start": "219760",
    "end": "225000"
  },
  {
    "text": "prediction at any rate well maybe comparing it to python is is not um the",
    "start": "225000",
    "end": "231920"
  },
  {
    "text": "best com comparison either right because that's a general uh programming language",
    "start": "231920",
    "end": "238120"
  },
  {
    "text": "whereas Elm and that's I think that's one of the really the big strengths for Elm is that it was tailored to doing web",
    "start": "238120",
    "end": "245680"
  },
  {
    "text": "applications right that's very true yeah so I I I I think you're right I",
    "start": "245680",
    "end": "251599"
  },
  {
    "text": "don't think Elm is going to take over the world either um I think that it's a",
    "start": "251599",
    "end": "257120"
  },
  {
    "text": "somewhat Niche uh language it's focused it it's very",
    "start": "257120",
    "end": "263320"
  },
  {
    "text": "focused and it's very uh deliberate and it's very opinionated in uh in how it",
    "start": "263320",
    "end": "269199"
  },
  {
    "text": "does things and I think um the very popular things that you see out there are more General",
    "start": "269199",
    "end": "276520"
  },
  {
    "text": "right yeah they have sort of a broader scope and I think a big part in the like",
    "start": "276520",
    "end": "282000"
  },
  {
    "text": "on the web platform is that JavaScript is the Assembly Language of the web right and as long as it will remain that",
    "start": "282000",
    "end": "289400"
  },
  {
    "text": "people are going to write in JavaScript or sure things that are close to it",
    "start": "289400",
    "end": "294680"
  },
  {
    "text": "because there's just there are so many benefits to just being able to run the code directly the browser uh you don't",
    "start": "294680",
    "end": "301440"
  },
  {
    "text": "quite get that nilm right you are quite far removed actually when you execute uh",
    "start": "301440",
    "end": "307080"
  },
  {
    "text": "the code the code that's being executed from what you write um yeah and I mean",
    "start": "307080",
    "end": "312160"
  },
  {
    "text": "that's something I like about it is that uh it's sort of an escape from JavaScript and typescript and that whole",
    "start": "312160",
    "end": "317479"
  },
  {
    "text": "ecosystem and all the the uh complexity of it definitely I mean what one of the",
    "start": "317479",
    "end": "323160"
  },
  {
    "text": "things that struck me a couple of months ago is that we have at humo we have a a",
    "start": "323160",
    "end": "328960"
  },
  {
    "text": "code based of uh you know 100,000 plus 200,000 lines of elm code and we have",
    "start": "328960",
    "end": "335960"
  },
  {
    "text": "like 12 dependencies you know and yeah yours being some of them like",
    "start": "335960",
    "end": "343160"
  },
  {
    "text": "uh El test for instance right but nice nice yeah U but in a a similar",
    "start": "343160",
    "end": "348560"
  },
  {
    "text": "JavaScript uh application you would have uh hundreds of thousands probably of",
    "start": "348560",
    "end": "354639"
  },
  {
    "text": "dependencies and I'm not even I'm not even joking there right that which is the sad part of it and I I I mean",
    "start": "354639",
    "end": "362280"
  },
  {
    "text": "personally um you know when things are go wrong or",
    "start": "362280",
    "end": "367639"
  },
  {
    "text": "when when I start to hack in in my code is usually because I hack I need to hack around something that comes from a",
    "start": "367639",
    "end": "375080"
  },
  {
    "text": "dependency um right so when when it's your own code you don't really need to do that and sure it's it's a little bit",
    "start": "375080",
    "end": "382360"
  },
  {
    "text": "more effort but in the long run it's worth it right um yeah I I mean I I",
    "start": "382360",
    "end": "388919"
  },
  {
    "text": "would take that on a case-by casee basis I mean certainly some some uh packages that I get you know are really valuable",
    "start": "388919",
    "end": "394759"
  },
  {
    "text": "but yeah definitely there's a cultural difference where in Elm I think uh you don't get this micro package thing that",
    "start": "394759",
    "end": "400680"
  },
  {
    "text": "you see in the npm ecosystem where people write you know left pad being the most famous example of that um where you",
    "start": "400680",
    "end": "406919"
  },
  {
    "text": "have this like it's like a oneliner someone made a package out of that doesn't really happen in Elm at least",
    "start": "406919",
    "end": "412319"
  },
  {
    "text": "not from what I've seen um and yeah I appreciate that I I would if it's just a oneliner I'd kind of rather write it",
    "start": "412319",
    "end": "417840"
  },
  {
    "text": "myself and not have this ballooning explosion of dependencies I think we I don't know if we quite crossed it yet",
    "start": "417840",
    "end": "423840"
  },
  {
    "text": "but we're very close to 400,000 lines of elm code at work um and we still have under 100 total dependencies like direct",
    "start": "423840",
    "end": "430960"
  },
  {
    "text": "dependencies as well as their dependencies like if you out of all the dependencies we download on on a clean build it's less than 100 um I think",
    "start": "430960",
    "end": "438440"
  },
  {
    "text": "that's yeah that's that's normal for Elm it's it's you don't really see that same explosion of dependencies um which is",
    "start": "438440",
    "end": "446199"
  },
  {
    "text": "kind of funny because considering you got elm's dead Cod elimination that's like so much better than what's possible",
    "start": "446199",
    "end": "452280"
  },
  {
    "text": "in JavaScript uh you would think the downside of of getting more packages would be less like you don't because you",
    "start": "452280",
    "end": "458199"
  },
  {
    "text": "don't pay for it in terms of compiled asset size um and yet like we have we",
    "start": "458199",
    "end": "463879"
  },
  {
    "text": "have that great benefit uh as well as not having to uh deal with the like",
    "start": "463879",
    "end": "470280"
  },
  {
    "text": "mental complexity of having so many dependencies to keep up with I think it's also it might also be one of the",
    "start": "470280",
    "end": "476960"
  },
  {
    "text": "things that's a little bit scary about Elm um because for new people like I I often",
    "start": "476960",
    "end": "484120"
  },
  {
    "text": "encoun encounter people when um when they're just starting out NM they say",
    "start": "484120",
    "end": "489159"
  },
  {
    "text": "what like why is everything so hard and of course I don't I don't think that they're so hard if something's new then",
    "start": "489159",
    "end": "495720"
  },
  {
    "text": "you know of course it's it's unfamiliar it's by definition harder than what you're doing before yeah I think that there's more than that though right",
    "start": "495720",
    "end": "501639"
  },
  {
    "text": "there there elm is a very as I said before opinionated um in how it does things and it's very restrictive you",
    "start": "501639",
    "end": "508440"
  },
  {
    "text": "can't just go out and touch the Dom willy-nilly right true and uh like",
    "start": "508440",
    "end": "515120"
  },
  {
    "text": "you're used to in in JavaScript so so getting these um or hitting these",
    "start": "515120",
    "end": "521200"
  },
  {
    "text": "roadblocks can I I think is a source of frustration for people because you don't want to understand it right as you said",
    "start": "521200",
    "end": "528399"
  },
  {
    "text": "one of the motivations for writing the book is uh giving people beginners in particular um a way to understand how to",
    "start": "528399",
    "end": "535959"
  },
  {
    "text": "not just like learn the syntax of the language and the concepts behind it but actually like learn how to build things",
    "start": "535959",
    "end": "541920"
  },
  {
    "text": "with it because like you said I mean it is different from you know what you're used to if you're coming from a JavaScript background and hopefully uh",
    "start": "541920",
    "end": "548519"
  },
  {
    "text": "the book has made it easier yeah so so in the book you take",
    "start": "548519",
    "end": "553920"
  },
  {
    "text": "people from like learning the basic syntax right because it is not a a c family uh",
    "start": "553920",
    "end": "561680"
  },
  {
    "text": "language right so true so the syntax is quite uh some would say exotic some",
    "start": "561680",
    "end": "567200"
  },
  {
    "text": "would say arcane to to what people are used to right U and that can definitely",
    "start": "567200",
    "end": "573440"
  },
  {
    "text": "be a factor as well it's such a simple language at the same time right it is yeah I mean I I would say the syntax is",
    "start": "573440",
    "end": "579959"
  },
  {
    "text": "closer to python than JavaScript but it's also not quite the same as python either I mean in the sense that you have",
    "start": "579959",
    "end": "585800"
  },
  {
    "text": "uh you know fewer parentheses for example uh than you do in JavaScript or maybe even Ruby actually",
    "start": "585800",
    "end": "592480"
  },
  {
    "text": "but they are definitely differences yeah but syntax really is uh in my experience I mean i' I've taught Elm workshops as",
    "start": "592480",
    "end": "598279"
  },
  {
    "text": "well as um like online courses for frontend Masters and and the book uh and it seems to me based on my workshop",
    "start": "598279",
    "end": "604680"
  },
  {
    "text": "teaching experience that syntax is is actually the quickest thing that people get used to sure yeah exactly it it's",
    "start": "604680",
    "end": "610680"
  },
  {
    "text": "more the way of interacting that's what I meant right that you just don't go out and touch the Dom you do things in a",
    "start": "610680",
    "end": "615760"
  },
  {
    "text": "very strict Manner and a in a very strict order and and I think before",
    "start": "615760",
    "end": "621120"
  },
  {
    "text": "react uh got really popular um like the virtual Dom thing was uh was a very",
    "start": "621120",
    "end": "627360"
  },
  {
    "text": "unusual thing I think now people are more familiar with that and maybe even that's you know that's the most common",
    "start": "627360",
    "end": "633959"
  },
  {
    "text": "thing I would say uh that that people are used to but yeah like you said the difference is that um that's all you've",
    "start": "633959",
    "end": "639800"
  },
  {
    "text": "got right that's that's the only way to do things there is no like alternative fallback you know oh let me just reach out and mutate this one thing I mean yes",
    "start": "639800",
    "end": "646920"
  },
  {
    "text": "you can do that with JavaScript interop but um that's not till what chapter five I want to say in the book like halfway",
    "start": "646920",
    "end": "654000"
  },
  {
    "text": "through um but yeah I mean that that's it that's considered very normal in",
    "start": "654000",
    "end": "659160"
  },
  {
    "text": "JavaScript to be able to do that whenever you want and an Elm that's a very Advanced you know like you need to",
    "start": "659160",
    "end": "664639"
  },
  {
    "text": "learn several different techniques before you could do something like that and it's of course uh strongly",
    "start": "664639",
    "end": "670399"
  },
  {
    "text": "discouraged it's it's not like the language doesn't want you to do that the language really wants you to you know uh",
    "start": "670399",
    "end": "676680"
  },
  {
    "text": "buy into the like virtual Dom concept and use that as as your exclusive way of rendering things but if you do you get",
    "start": "676680",
    "end": "683560"
  },
  {
    "text": "all sorts of benefits so it's like restrictive but there's a there's a lot of benefits that come from those restrictions they're not sort of",
    "start": "683560",
    "end": "689680"
  },
  {
    "text": "arbitrary restrictions they're restrictions of a very very good purpose it's about getting people to appreciate",
    "start": "689680",
    "end": "694959"
  },
  {
    "text": "what those benefits give you right totally which is hard to see when you're just starting out at my company you know",
    "start": "694959",
    "end": "702200"
  },
  {
    "text": "we we're a lot of developers with on a big code base and it just I'm never afraid of breaking the",
    "start": "702200",
    "end": "710160"
  },
  {
    "text": "code base uh because I trust in compiler I trust right if it compiles it works",
    "start": "710160",
    "end": "718079"
  },
  {
    "text": "and that's something something that uh a feeling that you don't security sense of",
    "start": "718079",
    "end": "723839"
  },
  {
    "text": "security you don't really see even in in other strongly typed languages uh um",
    "start": "723839",
    "end": "730639"
  },
  {
    "text": "because they they allow you to do like Escape that safety right in really does",
    "start": "730639",
    "end": "735720"
  },
  {
    "text": "not people ask me like well you know what's the difference between Elm and typescript is Elm just like a you know a",
    "start": "735720",
    "end": "741320"
  },
  {
    "text": "typed language well typescripts got types you know what's the difference and one of the easiest differences to point to and maybe the biggest one is any like",
    "start": "741320",
    "end": "748480"
  },
  {
    "text": "in typ scpt you have any which is this escape hatch that means that any possible types could be a",
    "start": "748480",
    "end": "754880"
  },
  {
    "text": "lie uh and you actually can't it's not achievable to have the same level of trust in typescript as you do in Elm and",
    "start": "754880",
    "end": "761560"
  },
  {
    "text": "that sounds like kind of an abstract thing but like you said I mean the real benefit there is this feeling of like",
    "start": "761560",
    "end": "767800"
  },
  {
    "text": "invincibility of like I can make whatever change I want and I'm not like once I get it to compile again it's it's",
    "start": "767800",
    "end": "773880"
  },
  {
    "text": "probably going to work again and I've gotten so spoiled by that I like like you said I mean we have thise huge code",
    "start": "773880",
    "end": "779199"
  },
  {
    "text": "base and we just make big changes to it whenever we want to like if if we think that the code's going to be better if we",
    "start": "779199",
    "end": "785440"
  },
  {
    "text": "reorganize it in a particular way we just do it and then we follow the compilers until it works again and",
    "start": "785440",
    "end": "791240"
  },
  {
    "text": "usually I mean uh we don't even need to change tests unless you know there there are also corresponding type errors in",
    "start": "791240",
    "end": "796959"
  },
  {
    "text": "the tests but it's not like we we need to um like lean on handwritten tests to",
    "start": "796959",
    "end": "803560"
  },
  {
    "text": "to give us that same confidence like we do have tests too but uh but the compiler is like 90% of of what's",
    "start": "803560",
    "end": "809399"
  },
  {
    "text": "getting us back there and we didn't even have to write that code it's just you know the compiler just did it for us just because we were using Elm like the",
    "start": "809399",
    "end": "815560"
  },
  {
    "text": "the amount of like code cleanup that we can do in in like such a faster speed",
    "start": "815560",
    "end": "822199"
  },
  {
    "text": "has really been for me just just something that I I can't imagine giving up again um like the ability to just say",
    "start": "822199",
    "end": "828440"
  },
  {
    "text": "like I want to clean my code up in this way I'll just do it and it'll be fine um whereas I I've in even other type",
    "start": "828440",
    "end": "836079"
  },
  {
    "text": "languages I've used um in a lot of cases I'm like well if I change it is it going to work again afterwards am I going to",
    "start": "836079",
    "end": "842000"
  },
  {
    "text": "cause a bunch of regressions I just never have that fear in especially when it's someone else's code right oh yeah",
    "start": "842000",
    "end": "847639"
  },
  {
    "text": "absolutely right yeah I mean there we have you know we're coming up on 100",
    "start": "847639",
    "end": "853560"
  },
  {
    "text": "employees at the company um at nor R Inc uh where I work and and like you know",
    "start": "853560",
    "end": "859160"
  },
  {
    "text": "that's not a huge number of people I mean you know there's obviously companies of thousands and thousands of employees um but yeah I mean I don't",
    "start": "859160",
    "end": "865800"
  },
  {
    "text": "know uh you know necessarily like if any of my co-workers uh are even aware of",
    "start": "865800",
    "end": "871440"
  },
  {
    "text": "the code that I'm writing and I may not be aware of the code that they're writing there's like parts of the code base that I haven't even seen before",
    "start": "871440",
    "end": "876639"
  },
  {
    "text": "that's a it's a good point it's one of the things that like the the in in functional languages",
    "start": "876639",
    "end": "884279"
  },
  {
    "text": "um one of the key differences I think is that what you see is what you get what",
    "start": "884279",
    "end": "890600"
  },
  {
    "text": "what you're looking at right now is what's going to happen right it's you shouldn't be afraid of changing",
    "start": "890600",
    "end": "896440"
  },
  {
    "text": "something in the um um uh invoicing a part of the code and it all of a sudden",
    "start": "896440",
    "end": "902800"
  },
  {
    "text": "breaks uh the carousel on the front page right because because of side effects",
    "start": "902800",
    "end": "908399"
  },
  {
    "text": "because there are none um when everything is a pure function right and that that is such a game changer for",
    "start": "908399",
    "end": "915880"
  },
  {
    "text": "large code bases I think absolutely I mean I I usually don't mention that one when people ask about the difference",
    "start": "915880",
    "end": "921800"
  },
  {
    "text": "between el and typescript because it's it's a little bit harder to explain but um yeah I've really felt that one when I",
    "start": "921800",
    "end": "928279"
  },
  {
    "text": "uh have been comparing Elm and rust so rust uh I I've been spending time with as well um and I like it a lot uh",
    "start": "928279",
    "end": "935920"
  },
  {
    "text": "there's there's a lot of great things about rust um but the the refactoring ability is just not on the same level as",
    "start": "935920",
    "end": "942279"
  },
  {
    "text": "what I get in Elm and it's like you said it's because of site effects in mutation like rust even has a first class concept",
    "start": "942279",
    "end": "947839"
  },
  {
    "text": "of mutation tracking and they don't have any which typescript does um and it was a typed language from day one so like",
    "start": "947839",
    "end": "954240"
  },
  {
    "text": "the whole ecosystem is you know is typed um so in those ways I would say rust's",
    "start": "954240",
    "end": "960079"
  },
  {
    "text": "type system is a lot more reliable to me than than typescripts but even with that I've still had bugs where I took some",
    "start": "960079",
    "end": "966920"
  },
  {
    "text": "Rust cat and I just habitually because I can do this in Elm without any concern I'll just rearrange the order in which",
    "start": "966920",
    "end": "972519"
  },
  {
    "text": "things are happening I'm like oh actually I think it makes more sense to like call this and then call this and then call this um or or I did some other",
    "start": "972519",
    "end": "979800"
  },
  {
    "text": "refactor that resulted in code being in different places and it didn't work anymore afterwards it it was broken and",
    "start": "979800",
    "end": "986040"
  },
  {
    "text": "I was like why why how could this have broken cuz an Elm yeah like you said I mean when you have the guarantee that",
    "start": "986040",
    "end": "992000"
  },
  {
    "text": "functions don't have side effects you really can just rearange them however you want to make the code nicer and and",
    "start": "992000",
    "end": "998759"
  },
  {
    "text": "and really have the the the full expectation that it's going to work again afterwards um but even in Rust",
    "start": "998759",
    "end": "1004519"
  },
  {
    "text": "that has not been true for me I I've definitely broken stuff just by reordering it um whereas an El I'm like",
    "start": "1004519",
    "end": "1009839"
  },
  {
    "text": "yeah reordered it's fine if it compiles again it's going to work and and it almost always does to to almost a a",
    "start": "1009839",
    "end": "1016519"
  },
  {
    "text": "shocking degree you can still code through the wrong thing right you can still quote the wrong thing but it's going work it's not 100% there's there's",
    "start": "1016519",
    "end": "1023959"
  },
  {
    "text": "it's not possible to guarantee that if it compiles it just works um but it is just ridiculous how often it is I mean",
    "start": "1023959",
    "end": "1031120"
  },
  {
    "text": "it's it's certainly most of the time and it's like I don't know what exact percentage but it feels like it's like",
    "start": "1031120",
    "end": "1036360"
  },
  {
    "text": "in the like 80% plus range you know that like I when it compiles again like to",
    "start": "1036360",
    "end": "1041678"
  },
  {
    "text": "the point where if it compiles I just expect it to work and if it doesn't work I'm very surprised I'm like what",
    "start": "1041679",
    "end": "1047199"
  },
  {
    "text": "happened how did this compile and then not work which is a hard feeling to convey because it sounds",
    "start": "1047199",
    "end": "1053440"
  },
  {
    "text": "so ridiculous at face value I mean if if you spend a lot of time programming in other languages I mean it's that's not",
    "start": "1053440",
    "end": "1058600"
  },
  {
    "text": "normal one of the interesting things is that for for our application um whenever",
    "start": "1058600",
    "end": "1064919"
  },
  {
    "text": "we have bugs it's usually due to CSS because we don't use LM CSS right and",
    "start": "1064919",
    "end": "1072679"
  },
  {
    "text": "yeah um maybe you can talk a little bit about what that is oh sure um yeah so uh",
    "start": "1072679",
    "end": "1078080"
  },
  {
    "text": "El CSS is a library that I made um we use it at work uh although honestly I I",
    "start": "1078080",
    "end": "1084080"
  },
  {
    "text": "I feel like every time I bring up LM CSS I need to make a plug for lmui which I kind of wish we were using at work",
    "start": "1084080",
    "end": "1089360"
  },
  {
    "text": "except that we just have so much Legacy CSS it's it would be a a really project to convert to it um but lmui is one of",
    "start": "1089360",
    "end": "1097440"
  },
  {
    "text": "the most beloved and like most popular Elm packages um so Elm muui is uh it was",
    "start": "1097440",
    "end": "1103280"
  },
  {
    "text": "made by Matt Griffith and uh basically it's a CSS alternative where basically it's a way to do layout in the browser",
    "start": "1103280",
    "end": "1109679"
  },
  {
    "text": "without even knowing CSS like you don't have to do any no CSS Concepts not no",
    "start": "1109679",
    "end": "1115000"
  },
  {
    "text": "flexbox no grid no float no any of that it's just a complete groundup scratch",
    "start": "1115000",
    "end": "1120080"
  },
  {
    "text": "rewrite of like a layout system uh that works in the browser and the way that it works is of course that it behind the",
    "start": "1120080",
    "end": "1125120"
  },
  {
    "text": "scenes compiles to CSS in the same way that Elm compiles to JavaScript um but the point is it has a completely",
    "start": "1125120",
    "end": "1130600"
  },
  {
    "text": "unrelated set of Primitives and so uh some of the funny things are like I I saw actually on on Elm discourse I think",
    "start": "1130600",
    "end": "1137400"
  },
  {
    "text": "it was yesterday um somebody posted like hey uh I'm I'm entering the job market and they one of",
    "start": "1137400",
    "end": "1143640"
  },
  {
    "text": "the concerns that they listed was uh I I got into front-end web development and I learning Elm uh and I know lmui but I",
    "start": "1143640",
    "end": "1150720"
  },
  {
    "text": "don't really know CSS and I'm kind of concerned that that's that's going to you know be like make it difficult for",
    "start": "1150720",
    "end": "1156400"
  },
  {
    "text": "me to get a front-end job because most places you know do use CSS um but I love",
    "start": "1156400",
    "end": "1161520"
  },
  {
    "text": "that implication it's just like yeah like if you know LMI it's like CSS is a lot harder because we had a big um react",
    "start": "1161520",
    "end": "1169200"
  },
  {
    "text": "code base before we started using Elm uh we um we have Legacy CSS and so uh we",
    "start": "1169200",
    "end": "1176280"
  },
  {
    "text": "sort of incrementally moveed that over to LM CSS so LM CSS is um I guess it's",
    "start": "1176280",
    "end": "1181600"
  },
  {
    "text": "it's similar to uh it was originally um styled components I think was the the",
    "start": "1181600",
    "end": "1186919"
  },
  {
    "text": "one in uh react uh but I think there's new names for it now I think there's one that's more uh closely resembles the elm",
    "start": "1186919",
    "end": "1195240"
  },
  {
    "text": "CSS UI um or API but I forget what it's called I want to say it's emotion but I",
    "start": "1195240",
    "end": "1200640"
  },
  {
    "text": "might be misremembering that I've been like kind of out of the JS world for so long I don't know the names of things anymore um but the basic idea is that uh",
    "start": "1200640",
    "end": "1208919"
  },
  {
    "text": "it gives you a way to do um type checked CSS uh in your in your front end code uh",
    "start": "1208919",
    "end": "1215320"
  },
  {
    "text": "and and also you don't need to have a separate stles sheet so uh I can basically just add a an attribute to any",
    "start": "1215320",
    "end": "1221000"
  },
  {
    "text": "of my HTML values any of my elements that that just says CSS and then the CSS",
    "start": "1221000",
    "end": "1226720"
  },
  {
    "text": "attribute takes a list of types CSS properties so for example um if I want my button to have a one pixel border I",
    "start": "1226720",
    "end": "1233360"
  },
  {
    "text": "can just say CSS and then uh square bracket because you give it a list of of all the attributes that you want um and",
    "start": "1233360",
    "end": "1239640"
  },
  {
    "text": "I just say like you know border one pixel solid blah blah blah um and if I mess that up like if I if I mistype",
    "start": "1239640",
    "end": "1246320"
  },
  {
    "text": "something uh in there um then I'll I'll get an error at compile time um and then",
    "start": "1246320",
    "end": "1251520"
  },
  {
    "text": "it behind the scenes will automatically generate a class and then it's like a hash of the um of all the Styles in",
    "start": "1251520",
    "end": "1257360"
  },
  {
    "text": "there and then reference that and so on and so forth um so yeah uh it it makes things a a lot uh easier but it is at",
    "start": "1257360",
    "end": "1264559"
  },
  {
    "text": "the end of the day still fundamentally CSS so uh it's sort of a way to make CSS nicer we have I I counted at some point",
    "start": "1264559",
    "end": "1271279"
  },
  {
    "text": "it's like 600 and some odd different like typed CSS properties in there um so it's not like the entire 100% of the CSS",
    "start": "1271279",
    "end": "1277880"
  },
  {
    "text": "spec but it's you know it's a lot whenever I see people complain about typescript compile times I'm like what's",
    "start": "1277880",
    "end": "1283480"
  },
  {
    "text": "that what's what's a long compile time it's fun it's funny you said that because one of the reasons so we went",
    "start": "1283480",
    "end": "1290440"
  },
  {
    "text": "for you know having everything in Elm is is quite um a benefit right having like",
    "start": "1290440",
    "end": "1298279"
  },
  {
    "text": "thinking about thinking about your application as not just the behavior but also the way it looks because you can't",
    "start": "1298279",
    "end": "1304360"
  },
  {
    "text": "really separate the two right um in a web application but the at the time",
    "start": "1304360",
    "end": "1310960"
  },
  {
    "text": "which is now several years ago uh the compile times were so excruciatingly",
    "start": "1310960",
    "end": "1316000"
  },
  {
    "text": "long oh yeah that it just um it it wasn't feasible to you know you wanted",
    "start": "1316000",
    "end": "1321400"
  },
  {
    "text": "to see how does this look when it's uh has a rounded corner and you have to wait 80 seconds or something like that",
    "start": "1321400",
    "end": "1327440"
  },
  {
    "text": "when you get to a certain size right um that's it's not like that today right it's like a second so yeah yeah like",
    "start": "1327440",
    "end": "1335760"
  },
  {
    "text": "2017 Elum compile times were not great I think that was like everyone's favorite release uh of like the people who are",
    "start": "1335760",
    "end": "1343200"
  },
  {
    "text": "using Elm today but who are also using it in like 2017 like the one that just made the compiler just ridiculously fast",
    "start": "1343200",
    "end": "1349480"
  },
  {
    "text": "yeah I mean yeah that was a total Game Changer we went from like 2.8 SEC uh",
    "start": "1349480",
    "end": "1355480"
  },
  {
    "text": "minutes to 4 seconds for right and that's like that's like a",
    "start": "1355480",
    "end": "1360760"
  },
  {
    "text": "a a a scratch build right like the entire code base in four seconds yeah because like incremental compile times",
    "start": "1360760",
    "end": "1366520"
  },
  {
    "text": "are usually subsecond that was a nice release getting back to the book The amount of code that um you end up writing in the book even though it is",
    "start": "1366520",
    "end": "1372480"
  },
  {
    "text": "one application like starting in so chapters 2 through eight are all about uh building one application so like",
    "start": "1372480",
    "end": "1378760"
  },
  {
    "text": "chapter one is just basic syntax but then uh throughout the rest of the book it's all about building and application",
    "start": "1378760",
    "end": "1384960"
  },
  {
    "text": "uh from start start to finish and then each chapter you like at the beginning you get sort of feature requests you know from your manager um and then you",
    "start": "1384960",
    "end": "1391919"
  },
  {
    "text": "implement that that feature request over the course of the chapter and then uh o in the course of implementing that",
    "start": "1391919",
    "end": "1397720"
  },
  {
    "text": "feature you learn about the concepts necessary to do that um and uh and the",
    "start": "1397720",
    "end": "1402840"
  },
  {
    "text": "entire time I think unless you have I guess I haven't tried it on like a Chromebook",
    "start": "1402840",
    "end": "1408600"
  },
  {
    "text": "um but I would expect that all compile times like throughout the entire book would be less than a second um I'd be",
    "start": "1408600",
    "end": "1414880"
  },
  {
    "text": "surprised if if someone's machine took more than a second to compile something it's uh it's one thing that that um",
    "start": "1414880",
    "end": "1422279"
  },
  {
    "text": "struck me uh about the book is that it is really a journey from from absolute",
    "start": "1422279",
    "end": "1428360"
  },
  {
    "text": "novice to being able to write a fully-fledged uh single page application right where you even cover things like",
    "start": "1428360",
    "end": "1435679"
  },
  {
    "text": "web component like what you said before is that using JavaScript and so on is a big no no in Elm or at least you're",
    "start": "1435679",
    "end": "1443039"
  },
  {
    "text": "discouraged from doing it it's discouraged yeah why would you do it anyway and how does that work with web",
    "start": "1443039",
    "end": "1449279"
  },
  {
    "text": "components yeah I mean uh so so Elm has JavaScript interop um but it's it's generally speaking it's a fallback it's",
    "start": "1449279",
    "end": "1455480"
  },
  {
    "text": "not the it's not intended to be something that you use all the time it's just like you know if there's something that you need like there's a particular",
    "start": "1455480",
    "end": "1462520"
  },
  {
    "text": "um like there's one very specific JavaScript library and there's no Elm equivalent library of that thing then",
    "start": "1462520",
    "end": "1468440"
  },
  {
    "text": "you know if the alternative is like Well we'd have to write this whole thing from scratch in Elm um or maybe it's",
    "start": "1468440",
    "end": "1474679"
  },
  {
    "text": "something where Elm doesn't have first class support for that um like web RTC or something like that um then yeah you",
    "start": "1474679",
    "end": "1481960"
  },
  {
    "text": "you know you do JavaScript interop for that but the idea is that um you know I think most people want to have a ratio",
    "start": "1481960",
    "end": "1487919"
  },
  {
    "text": "of like 99.9% Elm to like 0.1% JavaScript in their code base or typescript or whatever it is um it's not",
    "start": "1487919",
    "end": "1494880"
  },
  {
    "text": "like you have like oh it's you know 7030 Elm JavaScript it's like no no no it's",
    "start": "1494880",
    "end": "1500159"
  },
  {
    "text": "very much like that for us as well um the things that we use JavaScript interrupt for is so we're a log",
    "start": "1500159",
    "end": "1508799"
  },
  {
    "text": "aggregation management platform right where we visualize uh people's log so we",
    "start": "1508799",
    "end": "1514039"
  },
  {
    "text": "have like live charts and uh Elm didn't have like a fully feature Rich featured",
    "start": "1514039",
    "end": "1520919"
  },
  {
    "text": "uh charting Library so what we could do then is use a web component and just plot things in there and just wrap this",
    "start": "1520919",
    "end": "1527399"
  },
  {
    "text": "little um web component as like a a micro application running inside a FM uh and",
    "start": "1527399",
    "end": "1534520"
  },
  {
    "text": "talk to that through a typ safe API which is just fits in perfectly with Elm",
    "start": "1534520",
    "end": "1539799"
  },
  {
    "text": "uh right or as close that as close as you can get to it uh without breaking the",
    "start": "1539799",
    "end": "1545399"
  },
  {
    "text": "model yeah totally yeah the analogy I like to use is that uh talking to JavaScript is like talking to a server",
    "start": "1545399",
    "end": "1551640"
  },
  {
    "text": "in the sense that you're sending immutable data just sending messages it's very much that feeling yeah um and",
    "start": "1551640",
    "end": "1557799"
  },
  {
    "text": "that's why so actually the chapters are titled that way so I think it's um chapter four is called talking to servers and then chapter five is talking",
    "start": "1557799",
    "end": "1564120"
  },
  {
    "text": "to JavaScript and the reason the titles chapter titles are that way is because they're so similar so you learn the",
    "start": "1564120",
    "end": "1569520"
  },
  {
    "text": "concepts of like here's how to talk to a server and then the next chapter it's like okay now we're going to do a very similar thing except instead we're",
    "start": "1569520",
    "end": "1575200"
  },
  {
    "text": "talking to JavaScript back and forth um I guess that's that's how it is with ports um but then with web components I",
    "start": "1575200",
    "end": "1581760"
  },
  {
    "text": "I I've um talked to people in like uh like I know people on like the react core team and the view core team angular",
    "start": "1581760",
    "end": "1587360"
  },
  {
    "text": "and um Ember uh and when I've talked to them about um web components it seems",
    "start": "1587360",
    "end": "1592760"
  },
  {
    "text": "like uh Elm users might be the biggest customers of web components or or specifically custom elements um and",
    "start": "1592760",
    "end": "1599399"
  },
  {
    "text": "specifically just for JavaScript interrupt because they're so convenient for that because uh in that case um if",
    "start": "1599399",
    "end": "1605080"
  },
  {
    "text": "you're if you're rendering something and you want to be like oh I want to take this um JavaScript widget of some sort",
    "start": "1605080",
    "end": "1610679"
  },
  {
    "text": "like I have a I don't know um like a embedded calendar or something that I really like or um because like there's",
    "start": "1610679",
    "end": "1616880"
  },
  {
    "text": "there's Elm visual ation libraries um there's a lot more a lot more robust now than they were uh in 2017 but um uh and",
    "start": "1616880",
    "end": "1625720"
  },
  {
    "text": "then there's also like you know calendar date picker type things um but let's say there is some JavaScript thing that you really want oh Google Maps that's a good",
    "start": "1625720",
    "end": "1631679"
  },
  {
    "text": "example um there definitely is not a you know Elm I I can't imagine anyone ever going all the trouble of like doing an",
    "start": "1631679",
    "end": "1637919"
  },
  {
    "text": "embedded Google Maps in pure Elm that would be very impressive um and actually I think there was an Elm Europe talk a couple years ago about doing a like a",
    "start": "1637919",
    "end": "1644840"
  },
  {
    "text": "pan and zoom type map but it's not like the full feature you know map thing but if you wanted to embed one of those yeah",
    "start": "1644840",
    "end": "1650360"
  },
  {
    "text": "I mean the way that I would do that is with a custom element um and yeah it's really convenient for that and yeah the",
    "start": "1650360",
    "end": "1656000"
  },
  {
    "text": "book goes into how to do that um I I I used uh both a custom element and also",
    "start": "1656000",
    "end": "1662360"
  },
  {
    "text": "uh ports in the in the JavaScript interrupt chapter because I think they're both useful techniques to use like you use them for different things",
    "start": "1662360",
    "end": "1667440"
  },
  {
    "text": "like custom elements are more for visual things whereas if you need to just talk to a JavaScript library that's going to do some calculations or whatever um or",
    "start": "1667440",
    "end": "1675880"
  },
  {
    "text": "or some sort of uh like a common thing that people will do is um if they've got like an analytics provider uh like",
    "start": "1675880",
    "end": "1682080"
  },
  {
    "text": "rollbar or bug snag or um something like that uh that provider will provide some",
    "start": "1682080",
    "end": "1687440"
  },
  {
    "text": "JavaScript library that just automatically does all the correct talking to their server thing um and",
    "start": "1687440",
    "end": "1693279"
  },
  {
    "text": "people will just talk to that out of a JavaScript Port rather than writing an Elm specific rapper like there's a couple of um rappers like Elm uh Elm",
    "start": "1693279",
    "end": "1701919"
  },
  {
    "text": "like entirely Elm rappers for like bug snag and rollbar um but I don't know about uh like yeah there's a lot of",
    "start": "1701919",
    "end": "1708840"
  },
  {
    "text": "services out there so they probably don't all have uh pure Elm implementations one of um one of the",
    "start": "1708840",
    "end": "1716480"
  },
  {
    "text": "biggest takeaways I think that I have from using like so if I if I were to",
    "start": "1716480",
    "end": "1721640"
  },
  {
    "text": "never touch Elm again and um I I I still think I would have I still think I've",
    "start": "1721640",
    "end": "1727360"
  },
  {
    "text": "benefited from being an Elm developer because the the focus or the the way",
    "start": "1727360",
    "end": "1734480"
  },
  {
    "text": "that I write Elm is I start by modeling things things right really modeling the problem and I don't think that I've ever",
    "start": "1734480",
    "end": "1742039"
  },
  {
    "text": "done that in any other um language or platform and I think I wonder whether",
    "start": "1742039",
    "end": "1748919"
  },
  {
    "text": "that's because of necessity or because why that is right that's a good point",
    "start": "1748919",
    "end": "1755440"
  },
  {
    "text": "yeah yeah just like getting getting the data model right like getting getting the data yeah and in Elm it is so",
    "start": "1755440",
    "end": "1761240"
  },
  {
    "text": "beneficial to um you know the the the famous phrase make illegal state",
    "start": "1761240",
    "end": "1769320"
  },
  {
    "text": "unrepresentable it it it but it's it's not just for Elm right it it's something that go into Java and you can do exactly",
    "start": "1769320",
    "end": "1776880"
  },
  {
    "text": "the same thing and get exactly the same benefits uh but you just don't feel the pain as much um if you don't do it and I",
    "start": "1776880",
    "end": "1785240"
  },
  {
    "text": "think that's because you like in Elm you have to handle every contingency like",
    "start": "1785240",
    "end": "1790360"
  },
  {
    "text": "right if if if your model allows you to both have um uh a field says you got a",
    "start": "1790360",
    "end": "1797720"
  },
  {
    "text": "server error and another where it says here's the successful data right those two are incompatible right you got to",
    "start": "1797720",
    "end": "1803559"
  },
  {
    "text": "remember to handle the failure possibility yeah the compiler tells you about edge cases it's not like you you",
    "start": "1803559",
    "end": "1808679"
  },
  {
    "text": "find out about them you know way after the fact after it's like a bug report it's like you find out about it when the",
    "start": "1808679",
    "end": "1814600"
  },
  {
    "text": "compiler tells you you didn't cover this case and then yeah I I I totally agree",
    "start": "1814600",
    "end": "1820039"
  },
  {
    "text": "um I also don't uh I I would say rust is maybe the the only other language where",
    "start": "1820039",
    "end": "1826120"
  },
  {
    "text": "I've done that because rust and Elm have have similar like type system capabilities um in terms of like some",
    "start": "1826120",
    "end": "1832360"
  },
  {
    "text": "types and product types uh but yeah it's it's definitely um changed the way that",
    "start": "1832360",
    "end": "1838399"
  },
  {
    "text": "I've thought about programming like for the better I I definitely um think that",
    "start": "1838399",
    "end": "1843919"
  },
  {
    "text": "the way that I write Elm code is just more robust and and better like the",
    "start": "1843919",
    "end": "1850360"
  },
  {
    "text": "language sort of guided me to do that I don't I don't think that was like a a thing that was just like a you know",
    "start": "1850360",
    "end": "1855919"
  },
  {
    "text": "cultural phenomenon that people people just decided to do I think it's like the the experience of using the language I",
    "start": "1855919",
    "end": "1861480"
  },
  {
    "text": "think just makes me move in that direction and it's a good direction thanks for listening to this",
    "start": "1861480",
    "end": "1868279"
  },
  {
    "text": "episode of the goto podcast head over to gp. Tech for lots more content from the",
    "start": "1868279",
    "end": "1873960"
  },
  {
    "text": "brightest Minds in software [Music]",
    "start": "1873960",
    "end": "1886159"
  },
  {
    "text": "development",
    "start": "1886159",
    "end": "1889159"
  }
]