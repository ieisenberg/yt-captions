[
  {
    "start": "0",
    "end": "74000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "hello everyone my name is Katie gamanche and currently I am a senior field engineer for Apple I joined this role",
    "start": "12840",
    "end": "18960"
  },
  {
    "text": "last year and part of my role is to bring Cloud native and kubernetes expertise to different services and",
    "start": "18960",
    "end": "24359"
  },
  {
    "text": "products within Apple as well I'm one of the TOC or technical oversight Committee Member for cncf or Cloud native",
    "start": "24359",
    "end": "31260"
  },
  {
    "text": "Computing Foundation in this role I'm joining 10 other Champions within the industry and who",
    "start": "31260",
    "end": "36360"
  },
  {
    "text": "try to provide a vision for the massive cncf landscape that you might aware might be aware of",
    "start": "36360",
    "end": "42059"
  },
  {
    "text": "I have many other roles in the community I am on The Advisory board for Captain which currently is an incubation project",
    "start": "42059",
    "end": "47520"
  },
  {
    "text": "a status very currently gained and I am the creator of the cloud native fundamental scores which you can find on",
    "start": "47520",
    "end": "53760"
  },
  {
    "text": "Udacity it's a free course and it pretty much takes everyone with little programming experience towards the",
    "start": "53760",
    "end": "58980"
  },
  {
    "text": "Journey of understanding and applying Cloud native principles today however I would like to talk I",
    "start": "58980",
    "end": "65518"
  },
  {
    "text": "would like to talk about bare metal Chronicles and more specifically the intertwinement between Tinkerbell cluster API and githubs",
    "start": "65519",
    "end": "73860"
  },
  {
    "text": "and to do so I would like to first talk about cluster API and more specifically how it provides a set of standards and",
    "start": "73860",
    "end": "79860"
  },
  {
    "start": "74000",
    "end": "253000"
  },
  {
    "text": "interfaces to provision your infrastructures anywhere next I'm going to focus on the bare",
    "start": "79860",
    "end": "85020"
  },
  {
    "text": "metal provisioning and here I'm going to bring Tinkerbell into the picture but more importantly if you want to",
    "start": "85020",
    "end": "90479"
  },
  {
    "text": "provision your kubernetes cluster on bare metal you're going to use something which is called kpt or class 3 by",
    "start": "90479",
    "end": "95880"
  },
  {
    "text": "provider for Tinkerbell and we're going to talk about that in more details and another thing I'd like to highlight",
    "start": "95880",
    "end": "102540"
  },
  {
    "text": "is how can we further automate the deployment of our infrastructure and in this case I would like to talk",
    "start": "102540",
    "end": "107939"
  },
  {
    "text": "about the cloud native getups and where we can integrate tools such as argosidium flux towards the automation",
    "start": "107939",
    "end": "112979"
  },
  {
    "text": "of our yaml manifests now before I move forward how many of you here are familiar with cluster API",
    "start": "112979",
    "end": "120540"
  },
  {
    "text": "oh not so many okay how many of you are familiar with kubernetes like and use okay cube is fine we understand Cube how",
    "start": "120540",
    "end": "128880"
  },
  {
    "text": "about Tinkerbell another character how many of you know about Tinkerbell is going to be a good a good topic to",
    "start": "128880",
    "end": "136319"
  },
  {
    "text": "start on and how many of you are using githubs or have heard about githubs",
    "start": "136319",
    "end": "141599"
  },
  {
    "text": "cool that's a fair amount of hands showed up okay there's like a varied level of",
    "start": "141599",
    "end": "147360"
  },
  {
    "text": "understanding I'm just gonna try to be very declarative throughout the talk just to make sure that everyone has an understanding",
    "start": "147360",
    "end": "152879"
  },
  {
    "text": "um my aim for this talk is to provide for you with an architecture and a solution of how you can provide Cloud",
    "start": "152879",
    "end": "158520"
  },
  {
    "text": "native bare metal kubernetes in a way now there is a very important reason why",
    "start": "158520",
    "end": "165420"
  },
  {
    "text": "I'm giving this talk at the moment if you look at the cloud native landscape you can see multiple tools crossing the chasm",
    "start": "165420",
    "end": "171360"
  },
  {
    "text": "when we have two scores in the Chasm by default we're going to have late adopters and these are defined by",
    "start": "171360",
    "end": "176400"
  },
  {
    "text": "Enterprise and regulated Industries I'm only talking about regulated Industries they have they need to",
    "start": "176400",
    "end": "182340"
  },
  {
    "text": "actually have a full ownership of their infrastructure so they need to manage and Deploy kubernetes on bare metal this",
    "start": "182340",
    "end": "188760"
  },
  {
    "text": "is the reason we're actually going to focus on this area today however to kind of solve this",
    "start": "188760",
    "end": "194519"
  },
  {
    "text": "challenging task the picture at the beginning was very very different to gain this massive adopter base we",
    "start": "194519",
    "end": "199800"
  },
  {
    "text": "actually had to go for multiple phases so if you look at the beginning the container orchestrator framework space",
    "start": "199800",
    "end": "204900"
  },
  {
    "text": "was very heavily Diversified we had tools such as docusworm Apache meso scorers Fleet and all of them provided a",
    "start": "204900",
    "end": "211260"
  },
  {
    "text": "viable solution to run containers at scale however given District the lead in defining the principles of how to run",
    "start": "211260",
    "end": "217260"
  },
  {
    "text": "containerized workloads nowadays kubernetes is known for its portability and adaptability but more importantly",
    "start": "217260",
    "end": "222900"
  },
  {
    "text": "for its approach there is declarative configuration and automation and we can see this in numbers as well",
    "start": "222900",
    "end": "229620"
  },
  {
    "text": "based on the VMware tensor report state of kubernetes which was released earlier this year 99 of the organizations see a",
    "start": "229620",
    "end": "236519"
  },
  {
    "text": "clear benefit of using kubernetes the first reason being a better utilization for your CPU and memory and",
    "start": "236519",
    "end": "242280"
  },
  {
    "text": "the second one being an East application management especially throughout the upgrade process",
    "start": "242280",
    "end": "247799"
  },
  {
    "text": "now a metric which is going to be very relevant for our talk is that 52 of the organization still have a need for bare",
    "start": "247799",
    "end": "254099"
  },
  {
    "start": "253000",
    "end": "299000"
  },
  {
    "text": "metal what is important though this trend is declining last year it was 55 this year",
    "start": "254099",
    "end": "260280"
  },
  {
    "text": "is 52 so we see a slow decline in there however we still have help with this organization needing to use on-prem",
    "start": "260280",
    "end": "268259"
  },
  {
    "text": "and another metric I would like to highlight is that currently 88 of the organizations use more than six clusters",
    "start": "268259",
    "end": "274320"
  },
  {
    "text": "throughout their production systems now with kubernetes it's going to be very challenging to bring up one cluster",
    "start": "274320",
    "end": "281160"
  },
  {
    "text": "the learning curve is very steep but once you have it won deployed once we can replicate that to different regions",
    "start": "281160",
    "end": "287100"
  },
  {
    "text": "and different providers if you pursue a multi-cloud strategy I'm going to come back to this metric later on",
    "start": "287100",
    "end": "294600"
  },
  {
    "text": "now in all of these growing adoption around kubernetes has been extremely beneficial for it because over time",
    "start": "294600",
    "end": "299759"
  },
  {
    "start": "299000",
    "end": "326000"
  },
  {
    "text": "multiple tools were built around it to extend its functionalities we're talking about different service mesh runtime",
    "start": "299759",
    "end": "305220"
  },
  {
    "text": "storage many other functionalities and this created what today we know as the cloud native landscape",
    "start": "305220",
    "end": "311639"
  },
  {
    "text": "this is actually the landscape that we as technical oversight committee provide a technical vision for and you try to",
    "start": "311639",
    "end": "317360"
  },
  {
    "text": "allow projects with the right mindset and the right um kind of contributor strategy to enter",
    "start": "317360",
    "end": "324180"
  },
  {
    "text": "the landscape now so far we have a landscape that",
    "start": "324180",
    "end": "330840"
  },
  {
    "start": "326000",
    "end": "832000"
  },
  {
    "text": "we can use to fully customize our stack we can choose the right networking tool",
    "start": "330840",
    "end": "336300"
  },
  {
    "text": "we can choose the right storage but at the same time we had multiple tools focused on developing and deploying your",
    "start": "336300",
    "end": "342780"
  },
  {
    "text": "clusters and we're talking about the bootstrap providers so you might be familiar with tools such as cubadium",
    "start": "342780",
    "end": "348840"
  },
  {
    "text": "cube spray cops tectonic installer if you go back to the corewest house",
    "start": "348840",
    "end": "354479"
  },
  {
    "text": "however if you look at all of these tools it's going to be difficult to find a common denominator what it actually means is if I use one tool to deploy my",
    "start": "354479",
    "end": "361919"
  },
  {
    "text": "infrastructure to Azure it's going to be probably quite difficult for me to use the same tool to deploy the gcp so what",
    "start": "361919",
    "end": "369120"
  },
  {
    "text": "happens if you pursue a multi-cloud strategy you need to bring a new tool to deploy to different Cloud providers and",
    "start": "369120",
    "end": "374639"
  },
  {
    "text": "this is not sustainable moving forward and this is where cluster API enters into the picture",
    "start": "374639",
    "end": "380520"
  },
  {
    "text": "so cluster API is a set of declarative apis for cluster creation deletion management and configuration",
    "start": "380520",
    "end": "386580"
  },
  {
    "text": "but more importantly it provides this one set of interfaces that allows you to deploy your infrastructure to any cloud",
    "start": "386580",
    "end": "392520"
  },
  {
    "text": "provider now when we talk about cluster API we talk about C cluster lifecycle within",
    "start": "392520",
    "end": "399060"
  },
  {
    "text": "the kubernetes umbrella and it had its first initial release in April 2019. pretty much it was introduced at kubecon",
    "start": "399060",
    "end": "405360"
  },
  {
    "text": "Barcelona if anyone remembers that now cluster pay current leads in V1 bit",
    "start": "405360",
    "end": "410580"
  },
  {
    "text": "1 endpoint which again showcase very good stability for the project and as I mentioned currently it integrates and",
    "start": "410580",
    "end": "416759"
  },
  {
    "text": "collaborates with more than 16 providers worldwide so we're going to have support for big cloud providers such as AWS gcp",
    "start": "416759",
    "end": "424440"
  },
  {
    "text": "Azure very important we're going to have support for Chinese providers such as Alibaba cloud tencent and by the cloud",
    "start": "424440",
    "end": "432000"
  },
  {
    "text": "and if you try to deploy your infrastructure to China you would know it's a very challenging task usually you",
    "start": "432000",
    "end": "437100"
  },
  {
    "text": "have to use tooling that's very specific to that region so what happens you end up with snowflake infrastructure",
    "start": "437100",
    "end": "442979"
  },
  {
    "text": "with cluster API you have the option to deploy your infrastructure to China in",
    "start": "442979",
    "end": "448259"
  },
  {
    "text": "the same manner you deploy it to AWS or anywhere else in the world",
    "start": "448259",
    "end": "453379"
  },
  {
    "text": "now some of you are new to Cluster API and I would like to kind of lay the base",
    "start": "453660",
    "end": "458880"
  },
  {
    "text": "understanding and fundamentals of how it works supposedly you'd like to deploy a couple of clusters in different regions",
    "start": "458880",
    "end": "464699"
  },
  {
    "text": "different Cloud providers with cluster API the first thing we need is a management cluster so we need",
    "start": "464699",
    "end": "470759"
  },
  {
    "text": "kubernetes to deploy kubernetes this is something I call cubeception and it's a bit bizarre but it works so if you want",
    "start": "470759",
    "end": "477539"
  },
  {
    "text": "to deploy a management cluster locally usually I recommend using kind which is a dockerized version of your kubernetes",
    "start": "477539",
    "end": "483780"
  },
  {
    "text": "if you want to use clustered pain production definitely recommend to use a full-fledged cluster mainly because it",
    "start": "483780",
    "end": "489300"
  },
  {
    "text": "comes with a more sophisticated feel of a strategy now once we have our management cluster",
    "start": "489300",
    "end": "495060"
  },
  {
    "text": "we'll require the dependencies installed on it or the controller managers",
    "start": "495060",
    "end": "500220"
  },
  {
    "text": "and currently there are three sets of controller managers we need to take care of one for cluster API crds or customer",
    "start": "500220",
    "end": "506039"
  },
  {
    "text": "Source definitions one for the bootstrap provider and one for the infrastructure provider",
    "start": "506039",
    "end": "511680"
  },
  {
    "text": "now going back to the first one that one so the cluster API serial",
    "start": "511680",
    "end": "517020"
  },
  {
    "text": "custom resource definitions will require a controller to make sure that we can create reconcile and delete any of these",
    "start": "517020",
    "end": "522360"
  },
  {
    "text": "resources so cluster paint uses five new customer Source definitions which allows you to define the state of your",
    "start": "522360",
    "end": "528540"
  },
  {
    "text": "infrastructure and we're going to look at those CRTs later on the second controller that we need is",
    "start": "528540",
    "end": "534300"
  },
  {
    "text": "going to be the bootstrap provider and this is the component that translates the yaml configuration into cloud in its script and it will make sure to attach",
    "start": "534300",
    "end": "541560"
  },
  {
    "text": "an instance from a cloud provider to the cluster as a node and currently this capability is provisioned by Cube ATM",
    "start": "541560",
    "end": "548220"
  },
  {
    "text": "Telus and eks AWS in eks which is quite a recent thing",
    "start": "548220",
    "end": "554279"
  },
  {
    "text": "and the first thing we're going to need is the infrastructure provider and this is the component that communicates with",
    "start": "554279",
    "end": "559620"
  },
  {
    "text": "the actual providers API and delivers or creates the actual infrastructure so talking about instances VPC subnet",
    "start": "559620",
    "end": "566399"
  },
  {
    "text": "security groups and so forth so the actual resources so if you want to create a cluster in",
    "start": "566399",
    "end": "571440"
  },
  {
    "text": "gcp and AWS using the controller or infrastructure provider controller for gcp Tinkerbell in this instance and AWS",
    "start": "571440",
    "end": "578580"
  },
  {
    "text": "so you need one for each of your providers once we have the controller managers",
    "start": "578580",
    "end": "583800"
  },
  {
    "text": "installed you'll be able to provision the target clusters and these are the Clusters that you can deliver to your",
    "start": "583800",
    "end": "589080"
  },
  {
    "text": "application teams to put their services on top of and these are going to be the Clusters that your customers will",
    "start": "589080",
    "end": "594180"
  },
  {
    "text": "interact with while consuming your services now another thing that I'd like to focus",
    "start": "594180",
    "end": "601320"
  },
  {
    "text": "on is how you can Define your infrastructure's code using cluster API manifest so as I mentioned it introduces",
    "start": "601320",
    "end": "607920"
  },
  {
    "text": "five new customer source definition cluster control plane machine deployment machine set and machine",
    "start": "607920",
    "end": "614940"
  },
  {
    "text": "the First Resource we need to configure is going to be cluster and this is going to take care of our networking",
    "start": "614940",
    "end": "620120"
  },
  {
    "text": "principles or configuration we can specify the pods the side of all pods",
    "start": "620120",
    "end": "625560"
  },
  {
    "text": "and services or any DNS suffix by default with any cluster we have a",
    "start": "625560",
    "end": "630839"
  },
  {
    "text": "controlled plane associated with it a control plane resource pretty much allows us to manage a set of machines",
    "start": "630839",
    "end": "636120"
  },
  {
    "text": "with the control plane label and machine this instance is very well actually this resource is very similar",
    "start": "636120",
    "end": "642180"
  },
  {
    "text": "to an instance we can specify the instance type the version of kubernetes any security groups you'd like to attach",
    "start": "642180",
    "end": "648300"
  },
  {
    "text": "and so forth so this is how you're going to manage your control plane machine Now by default we have a control plane",
    "start": "648300",
    "end": "654839"
  },
  {
    "text": "if you want to deploy any applications you're going to require a data plane well in cluster API this is manifested",
    "start": "654839",
    "end": "661320"
  },
  {
    "text": "through machine deployments so machine deployment you're familiar with kubernetes very similar to",
    "start": "661320",
    "end": "666360"
  },
  {
    "text": "deployment it will make sure to roll out configurations between different machine set resources machine set very similar",
    "start": "666360",
    "end": "673019"
  },
  {
    "text": "to replica set it will make sure that we have an amount of machine resources up and running at all time and machine",
    "start": "673019",
    "end": "678720"
  },
  {
    "text": "again same resource we've seen in the control plane however in this instance the machine is going to have a work",
    "start": "678720",
    "end": "685620"
  },
  {
    "text": "worker node label now here is where we have this concept",
    "start": "685620",
    "end": "690779"
  },
  {
    "text": "of cluster as a resource we can use yaml manifest to Define our infrastructure's",
    "start": "690779",
    "end": "696360"
  },
  {
    "text": "code so here is where we say that we want the cluster with 10 nodes three of them being the control plane seven of",
    "start": "696360",
    "end": "702360"
  },
  {
    "text": "them being the data plane here is where we say that we want to run on this specific subnet or we want this",
    "start": "702360",
    "end": "708360"
  },
  {
    "text": "particular SSH key names attached to our instances or security groups so here's where you define your infrastructure and",
    "start": "708360",
    "end": "715260"
  },
  {
    "text": "I'm going to come back to these resources later on and to actually see what is actually",
    "start": "715260",
    "end": "721500"
  },
  {
    "text": "happening underneath on how a resource looks like in terms of defining your infrastructure here I have a cluster",
    "start": "721500",
    "end": "726839"
  },
  {
    "text": "resource for AWS so I have a cluster resource in the V1 beta1 endpoint and in",
    "start": "726839",
    "end": "732779"
  },
  {
    "text": "the spec section you can see that I choose the slash 16 for all pods towards the end we have a control plane",
    "start": "732779",
    "end": "738240"
  },
  {
    "text": "reference again this is associated associated by default with any cluster",
    "start": "738240",
    "end": "743339"
  },
  {
    "text": "however I would like to draw your attention towards the infrastructure reference here is where we say that we want this cluster to be deployed in AWS",
    "start": "743339",
    "end": "752339"
  },
  {
    "text": "what's going to happen underneath is going to pull all of the configuration that we have defined for AWS so in this",
    "start": "752339",
    "end": "758579"
  },
  {
    "text": "particular case we say that we want this cluster to be deployed in EU Central one and we want to attach an SSH key name",
    "start": "758579",
    "end": "764519"
  },
  {
    "text": "with the name default to all of our instances now if we want to deploy the same",
    "start": "764519",
    "end": "770519"
  },
  {
    "text": "cluster in gcp these are going to be the changes required so on the cluster side we pretty much",
    "start": "770519",
    "end": "777300"
  },
  {
    "text": "had minimal changes the only thing we changed is infrastructure reference so we have that standardization and",
    "start": "777300",
    "end": "783000"
  },
  {
    "text": "interfaces that I was talking about but underneath this is going to pull all of the variables specific to gcp that we",
    "start": "783000",
    "end": "789480"
  },
  {
    "text": "have defined so in this case the region naming convention is quite different we want our cluster to be deployed in",
    "start": "789480",
    "end": "796019"
  },
  {
    "text": "Europe West free we have the concept of a project within gcp and we associate our cluster with project C API and if",
    "start": "796019",
    "end": "802980"
  },
  {
    "text": "you want to attach a network to your cluster you can Define it by using its name so it's going to be default see API in this case",
    "start": "802980",
    "end": "809220"
  },
  {
    "text": "and just kind of an overview if you want to deploy the same cluster using Tinkerbell kind of a preview of what's going on later",
    "start": "809220",
    "end": "815820"
  },
  {
    "text": "again the cluster resource changes are minimal we just point to Tinkerbell cluster but this is going to invoke all",
    "start": "815820",
    "end": "821880"
  },
  {
    "text": "the variables specific to Tinkerbell so in this case I'm specifying a registry but I would like to pull images from to",
    "start": "821880",
    "end": "828660"
  },
  {
    "text": "install on our operating system now",
    "start": "828660",
    "end": "834060"
  },
  {
    "start": "832000",
    "end": "1063000"
  },
  {
    "text": "so far we can see that with cluster API we can deploy our infrastructure to any",
    "start": "834060",
    "end": "839220"
  },
  {
    "text": "cloud provider but more importantly we can do so in a very standardized manner so we can reuse our manifests",
    "start": "839220",
    "end": "846060"
  },
  {
    "text": "and the way we Define our infrastructure however what happens if you don't want",
    "start": "846060",
    "end": "851160"
  },
  {
    "text": "to use a cloud provider if you're a regulated industry going back to the Preamble of the talk what if I'm an",
    "start": "851160",
    "end": "857040"
  },
  {
    "text": "Enterprise organization and I don't want to use a public cloud provider I'm very regulated and I want to use bare metal",
    "start": "857040",
    "end": "863639"
  },
  {
    "text": "well in this case we have Tinkerbell into the picture coming into the picture Tinkerbell is an open source engine for",
    "start": "863639",
    "end": "870180"
  },
  {
    "text": "bare metal provisioning anywhere not just kubernetes kubernetes is just a subset of that and we're going to see it",
    "start": "870180",
    "end": "876180"
  },
  {
    "text": "in action as well what we're going to see an architecture of that I would love to see it in action but I'm",
    "start": "876180",
    "end": "883740"
  },
  {
    "text": "going to come back to that Tinkerbell was built in 2019 by the equinix metal team and it was donated to",
    "start": "883740",
    "end": "890399"
  },
  {
    "text": "cncf in November 2020 as a Sandbox project now being a Sandbox projects",
    "start": "890399",
    "end": "895800"
  },
  {
    "text": "with project within the cncf means that we're still in a very Green Field state it requires a lot of diversification and",
    "start": "895800",
    "end": "902519"
  },
  {
    "text": "maintainership and feature development so he here I'm going to put my TLC hat on if you have a need for bare metal",
    "start": "902519",
    "end": "908220"
  },
  {
    "text": "provisioning and if you want to do it in a cloud native way please look at Tinkerbell but more importantly please contribute this is a very very important",
    "start": "908220",
    "end": "915180"
  },
  {
    "text": "kind of face for them and as mentioned Tinkerbell tries to reduce the time to provision bear metal",
    "start": "915180",
    "end": "920699"
  },
  {
    "text": "but at the same time to fully automate the process and tries the provision bare metal on public cloud data centers and",
    "start": "920699",
    "end": "927360"
  },
  {
    "text": "even Edge devices now let's look how Tinkerbell works in",
    "start": "927360",
    "end": "933480"
  },
  {
    "text": "the bigger picture so to provision any bare metal they're bare metal using Tinkerbell will require",
    "start": "933480",
    "end": "939120"
  },
  {
    "text": "a free sets of configuration Hardware template and workflow",
    "start": "939120",
    "end": "944279"
  },
  {
    "text": "the hardware configuration pretty much specifies our inventory so if you have 10 Raspberry Pi machines or",
    "start": "944279",
    "end": "951420"
  },
  {
    "text": "100 servers depends what kind of inventory you have you have to make Tinkerbell server aware of that so you",
    "start": "951420",
    "end": "957360"
  },
  {
    "text": "need to pretty much enumerate your hardware and you can do so by uniquely identifying your machine or Raspberry Pi",
    "start": "957360",
    "end": "964199"
  },
  {
    "text": "by Mac address and AP address the next thing we're going to do is a template or we're going to require is a",
    "start": "964199",
    "end": "970740"
  },
  {
    "text": "template a template pretty much is a set of actions that we'd like to perform on top of your bare metal so here we can",
    "start": "970740",
    "end": "976920"
  },
  {
    "text": "have an action to install an operating system any dependencies any middleware or any other applications in such a way",
    "start": "976920",
    "end": "983820"
  },
  {
    "text": "that the end result is going to be a server that's ready to be used in production",
    "start": "983820",
    "end": "989220"
  },
  {
    "text": "and workflow pretty much attaches a hardware to a template so for example",
    "start": "989220",
    "end": "994740"
  },
  {
    "text": "one if you have 10 Raspberry Pi machines I'm going to use this example for now if",
    "start": "994740",
    "end": "999779"
  },
  {
    "text": "you have 10 Raspberry Pi machines you want five for them to be installed with a Linux operating system and all their",
    "start": "999779",
    "end": "1005360"
  },
  {
    "text": "respective dependencies three of them I would like to install Windows and whatever dependents I have for that and",
    "start": "1005360",
    "end": "1011120"
  },
  {
    "text": "two of them maybe I want to install my quest and all their dependencies for that so here I'm pretty much having or",
    "start": "1011120",
    "end": "1017240"
  },
  {
    "text": "defining a strategy that I would like for my environmental machine provisioning so once we have all of this",
    "start": "1017240",
    "end": "1023959"
  },
  {
    "text": "configuration we can use the tin CLI and send all of this configuration to The Ting server which can be running locally",
    "start": "1023959",
    "end": "1029780"
  },
  {
    "text": "or somewhere within your environment pretty much it needs to be available and be able to communicate with your Hardware or connect your Hardware",
    "start": "1029780",
    "end": "1036620"
  },
  {
    "text": "a one by one based on your workflow and actions defining the template we're going to take a bare metal server",
    "start": "1036620",
    "end": "1042798"
  },
  {
    "text": "install all the dependencies or all of the actions that are performed or defined in a template and by the end you",
    "start": "1042799",
    "end": "1048980"
  },
  {
    "text": "should have a desire well you should have a server in the desired state that you wanted",
    "start": "1048980",
    "end": "1054799"
  },
  {
    "text": "foreign now what I'm having here is how we can provision bare metal anywhere",
    "start": "1054799",
    "end": "1060380"
  },
  {
    "text": "using Tinkerbell this is not kubernetes yet what happens if I want to provision a",
    "start": "1060380",
    "end": "1065960"
  },
  {
    "start": "1063000",
    "end": "1187000"
  },
  {
    "text": "bare metal machine as a kubernetes node here is where we have the Coalition between cluster API and Tinkerbell and",
    "start": "1065960",
    "end": "1072080"
  },
  {
    "text": "this is going to result with kpt or cluster API provider for Tinkerbell",
    "start": "1072080",
    "end": "1078080"
  },
  {
    "text": "so if you would like to add any bare metal machine as a to the cluster as a",
    "start": "1078080",
    "end": "1083299"
  },
  {
    "text": "node we're going to focus on three sets of configuration one from the tickable side one from the management cluster and",
    "start": "1083299",
    "end": "1089539"
  },
  {
    "text": "everything is going to result with our Target cluster now on the Tinkerbell side we'll require",
    "start": "1089539",
    "end": "1094880"
  },
  {
    "text": "the hardware again we need to declare our inventory we have those 10 Raspberry Pi machines and we need a dicting server",
    "start": "1094880",
    "end": "1101600"
  },
  {
    "text": "to be up and running built in locally or within your environment but more importantly again team server should be",
    "start": "1101600",
    "end": "1107600"
  },
  {
    "text": "able to connect to your server I think this is one of the most important Preamble for this to work",
    "start": "1107600",
    "end": "1113059"
  },
  {
    "text": "on the management cluster side this is going to be a recap of cluster API will require our dependencies we'll",
    "start": "1113059",
    "end": "1119059"
  },
  {
    "text": "control the managers installed on top of it but more importantly our infrastructure provider is going to be Tinkerbell so we're going to have kpt",
    "start": "1119059",
    "end": "1125960"
  },
  {
    "text": "installed the next thing we're going to need is our infrastructures code or yaml",
    "start": "1125960",
    "end": "1131179"
  },
  {
    "text": "manifest so all of those five custom resource definitions that I mentioned we're going to use those to Define our",
    "start": "1131179",
    "end": "1136760"
  },
  {
    "text": "cluster and the next thing we're going to need is a hardware ammo and here is where you",
    "start": "1136760",
    "end": "1142820"
  },
  {
    "text": "say that if we have the Raspberry Pi machines the Tinkerbell is aware of we can say that we want only six of them to",
    "start": "1142820",
    "end": "1148880"
  },
  {
    "text": "be part of the kubernetes node oh bring this cluster so here is where we say that we want only this subset to be",
    "start": "1148880",
    "end": "1156380"
  },
  {
    "text": "defined as um or to be part of the kubernetes set so it's actually going to happen",
    "start": "1156380",
    "end": "1162200"
  },
  {
    "text": "Tinkerbell already has a pretty fine set of templates and workflows so these",
    "start": "1162200",
    "end": "1167780"
  },
  {
    "text": "templates will actually install all of the binaries for kubernetes so take a bare metal machine all of the actions defined in the",
    "start": "1167780",
    "end": "1173900"
  },
  {
    "text": "template will be to install a Linux based operating system it will install cubelet it will pretty much configure",
    "start": "1173900",
    "end": "1179000"
  },
  {
    "text": "all the networking so by the end the machine will be able to attach to the cluster as a node",
    "start": "1179000",
    "end": "1186220"
  },
  {
    "start": "1187000",
    "end": "1485000"
  },
  {
    "text": "now let's take a breather we can see that cluster API allows us to",
    "start": "1187160",
    "end": "1193340"
  },
  {
    "text": "deploy our infrastructure anywhere we can see that in Coalition with Tinkerbell we can deploy kubernetes on",
    "start": "1193340",
    "end": "1198799"
  },
  {
    "text": "bare metal in a programmatic manner however what happens if you want to further automate the deployment of our",
    "start": "1198799",
    "end": "1204799"
  },
  {
    "text": "infrastructure well in this case I would like to introduce githubs and where exactly can be used within this architecture",
    "start": "1204799",
    "end": "1211340"
  },
  {
    "text": "now for anyone new the show hands was quite quite sparse gitops is pretty much a principle that has git repositories as",
    "start": "1211340",
    "end": "1219260"
  },
  {
    "text": "the state as the source of Truth for the desired state of your application and your infrastructure",
    "start": "1219260",
    "end": "1225260"
  },
  {
    "text": "now what it actually means is that you're going to have a PR based rollout that means that the Delta between your",
    "start": "1225260",
    "end": "1230480"
  },
  {
    "text": "local environment and production is just one PR way another feature that you have with",
    "start": "1230480",
    "end": "1236059"
  },
  {
    "text": "githubs is automatic reconciliation so when you have a kilos tool it's actually going to watch it's going to",
    "start": "1236059",
    "end": "1241940"
  },
  {
    "text": "watch and get repository if you have new commits or new changes apply to the repository the tool will be able to",
    "start": "1241940",
    "end": "1247760"
  },
  {
    "text": "identify those extrapolate and apply them to the cluster straight away but more importantly you're going to",
    "start": "1247760",
    "end": "1253400"
  },
  {
    "text": "have a version state of your cluster so you're going to have this different historical data points that you can very",
    "start": "1253400",
    "end": "1258740"
  },
  {
    "text": "easily refer to so if you are an incident or in the red State you can easily revert to a known state but by",
    "start": "1258740",
    "end": "1265160"
  },
  {
    "text": "using a couple of git commands now when you look into the cloud native space the github's principle is very",
    "start": "1265160",
    "end": "1272660"
  },
  {
    "text": "well supported by tools such as Argo City and flux currently both of them are incubated cncf projects however both of",
    "start": "1272660",
    "end": "1279380"
  },
  {
    "text": "them are undergoing the graduation process so hopefully quite soon probably after kubecon I don't know it's the",
    "start": "1279380",
    "end": "1286460"
  },
  {
    "text": "graduation process into dual chance is very far we're going to see these projects as graduated now being a",
    "start": "1286460",
    "end": "1292580"
  },
  {
    "text": "graduated project means that we have a very well and stable mature",
    "start": "1292580",
    "end": "1297679"
  },
  {
    "text": "contributor base and a doctor base so this project actually has a very stable",
    "start": "1297679",
    "end": "1303260"
  },
  {
    "text": "feature within different infrastructure stacks now",
    "start": "1303260",
    "end": "1309380"
  },
  {
    "text": "how exactly we can use githubs to automate the provisioning of our infrastructure and in this case I'm",
    "start": "1309380",
    "end": "1315020"
  },
  {
    "text": "going to focus only on the interaction between cluster API and githubs I'm going to make obstruction of Tinkerbell",
    "start": "1315020",
    "end": "1321080"
  },
  {
    "text": "for now because again with cluster API that's already standardized so even it's AWS gcp or any other cloud provider the",
    "start": "1321080",
    "end": "1328700"
  },
  {
    "text": "way you define your infrastructure is code the way these are actually reconciled is the same",
    "start": "1328700",
    "end": "1334640"
  },
  {
    "text": "so I'm just going to make obstruction of Tinkerbell for now so what we have here is a management cluster and of course our result which I",
    "start": "1334640",
    "end": "1341780"
  },
  {
    "text": "have to show it the other side we're going to have a management cluster and a Target cluster which is going to be our",
    "start": "1341780",
    "end": "1346880"
  },
  {
    "text": "result so on the management cluster we're going to have all of the cluster repair controllers up and running as well we're",
    "start": "1346880",
    "end": "1353240"
  },
  {
    "text": "going to have our yaml manifest or infrastructures code so this is going to Define what we want our cluster how we",
    "start": "1353240",
    "end": "1360140"
  },
  {
    "text": "want our clusters to be deployed now once we have this yaml manifest by default we can store that in git and by",
    "start": "1360140",
    "end": "1366620"
  },
  {
    "text": "default we can use a tool such as argocd to take care of of this manifest to be deployed so if you have any changes to",
    "start": "1366620",
    "end": "1374059"
  },
  {
    "text": "those manifest yaml manifests Argo City is going to pick them up and apply them first of all to the management cluster",
    "start": "1374059",
    "end": "1380240"
  },
  {
    "text": "which in its turn will be picked up by the controllers and applied to the Target cluster as an end result",
    "start": "1380240",
    "end": "1386960"
  },
  {
    "text": "now very optional we can use a template manager on top of our manifest and in",
    "start": "1386960",
    "end": "1392659"
  },
  {
    "text": "this case I've chosen help as an example now going back to our metrics we had 88",
    "start": "1392659",
    "end": "1399380"
  },
  {
    "text": "of the companies using more than six clusters who are managing more than six clusters that means you're never going",
    "start": "1399380",
    "end": "1405080"
  },
  {
    "text": "to have one cluster that you need to take care of you need to replicate your configuration you can of course have your all of your",
    "start": "1405080",
    "end": "1411620"
  },
  {
    "text": "yaml manifest store it for every single cluster or you can templatize them well in this case Helm can provide a solution",
    "start": "1411620",
    "end": "1417980"
  },
  {
    "text": "for that specifically so in this case I would like to parameterize with how the version of kubernetes which is going to be 124.0",
    "start": "1417980",
    "end": "1425059"
  },
  {
    "text": "the amount of control plane replicas which is going to be three of them and the amount of worker nodes which is",
    "start": "1425059",
    "end": "1431600"
  },
  {
    "text": "going to be one work note that we would like and I think this is going to be where I'm going to showcase the demo so I have",
    "start": "1431600",
    "end": "1438440"
  },
  {
    "text": "this set up already available on my local environment I'm using kind for my management cluster",
    "start": "1438440",
    "end": "1444200"
  },
  {
    "text": "because it's a demo it's a POC just to Showcase how all of this works I have",
    "start": "1444200",
    "end": "1449600"
  },
  {
    "text": "argosity installed on the management cluster as well Argo CD already watches a Helm chart so any changes to the helm",
    "start": "1449600",
    "end": "1456860"
  },
  {
    "text": "chart by default will be picked up and by end applied to the Target cluster so what I'm going to do I'm going to use",
    "start": "1456860",
    "end": "1462980"
  },
  {
    "text": "AWS as an example as I mentioned I would love to see or to have the ability to do a Tinkerbell specific demo as well",
    "start": "1462980",
    "end": "1469640"
  },
  {
    "text": "however the means of carrying a couple of Raspberry Pi's or servers across the border it's a bit more challenging so",
    "start": "1469640",
    "end": "1475480"
  },
  {
    "text": "unfortunately it's going to be AWS for now but hopefully things are going to get better and I'm going to have a",
    "start": "1475480",
    "end": "1481100"
  },
  {
    "text": "bigger suitcase to travel with so just making sure that oh",
    "start": "1481100",
    "end": "1488720"
  },
  {
    "start": "1485000",
    "end": "2114000"
  },
  {
    "text": "everyone can see what's going on can everyone see my screen what's reading cool I'm gonna go for everything step by",
    "start": "1488720",
    "end": "1495200"
  },
  {
    "text": "step so everyone can have an understanding of what's going on so here I have my management cluster I'm listing all of",
    "start": "1495200",
    "end": "1501440"
  },
  {
    "text": "the pods as you can see I have Argo CD up and running already we can actually",
    "start": "1501440",
    "end": "1506900"
  },
  {
    "text": "see it in action here I'm going to come back to that it's overwhelming this is how cluster API works",
    "start": "1506900",
    "end": "1513320"
  },
  {
    "text": "next we're going to have all of our free controller managers that I already mentioned so for cluster API to work we",
    "start": "1513320",
    "end": "1519500"
  },
  {
    "text": "need free controller managers minimum so the first one is going to be the cluster API crd",
    "start": "1519500",
    "end": "1525020"
  },
  {
    "text": "um so this this controller is going to take care of all of our resources for cluster API the bootstrap provider in",
    "start": "1525020",
    "end": "1531679"
  },
  {
    "text": "this particular case is going to be provisioned by qbdm and for our infrastructure provider I have a couple",
    "start": "1531679",
    "end": "1538039"
  },
  {
    "text": "controller Kappa stands for cluster API provider for AWS so this is going to take care of all of my Integrations and",
    "start": "1538039",
    "end": "1544700"
  },
  {
    "text": "deployment of our infrastructure to AWS now I think I wanted to show again what",
    "start": "1544700",
    "end": "1551000"
  },
  {
    "text": "we have in our Helm chart again my infrastructure currently is managed or argosity is watching a hell chart so any",
    "start": "1551000",
    "end": "1558080"
  },
  {
    "text": "changes to the helm chart are going to be seen within our Target cluster like the same thing that we've seen on the",
    "start": "1558080",
    "end": "1563120"
  },
  {
    "text": "slides nothing is new we want to parameterize the version of kubernetes amount of control plane nodes and amount",
    "start": "1563120",
    "end": "1568820"
  },
  {
    "text": "of worker nodes and for anyone kind of not familiar with Helm how this actually works if my internet is good enough oh I",
    "start": "1568820",
    "end": "1575720"
  },
  {
    "text": "hope it's good enough I have a template folder where I store all of my manifests so for example if I",
    "start": "1575720",
    "end": "1582679"
  },
  {
    "text": "go to the cluster yaml the relationship should be able to see the same example yaml example that we've",
    "start": "1582679",
    "end": "1589279"
  },
  {
    "text": "seen on the slides so here I have a cluster resource with a slash 16 for our pods we have our control plane reference",
    "start": "1589279",
    "end": "1596419"
  },
  {
    "text": "which is associated associated by default and we have our infrastructure reference which in this case is an AWS",
    "start": "1596419",
    "end": "1602539"
  },
  {
    "text": "cluster however if you go to our machine deployment which actually manages our data plane we can see how",
    "start": "1602539",
    "end": "1609980"
  },
  {
    "text": "some of these variable from the values files in hell are taken as an input",
    "start": "1609980",
    "end": "1615679"
  },
  {
    "text": "so in this case here I'm extrapolating the amount of replicas for work nodes which is going to be one",
    "start": "1615679",
    "end": "1621980"
  },
  {
    "text": "and again I'm parameterizing the version of kubernetes which is going to be 124.0 you can parameterize the full length of",
    "start": "1621980",
    "end": "1628520"
  },
  {
    "text": "your manifest you cannot parametrize any of it depends on your use case but for this particular example I've chosen",
    "start": "1628520",
    "end": "1634400"
  },
  {
    "text": "these three variables only now going back to the terminal",
    "start": "1634400",
    "end": "1640700"
  },
  {
    "text": "hopefully everyone can see here so what I have here on the top side I have the view from the management cluster view on",
    "start": "1640700",
    "end": "1647840"
  },
  {
    "text": "the bottom side I have the view from the target cluster actually this is not bright enough let",
    "start": "1647840",
    "end": "1653000"
  },
  {
    "text": "me do that so what I have here is free control plane replicas which you can see here so if I list all the machines in my",
    "start": "1653000",
    "end": "1660140"
  },
  {
    "text": "management cluster I'll be able to save free control plane machines if I look on my target cluster I see free control",
    "start": "1660140",
    "end": "1666980"
  },
  {
    "text": "plane machines running 124.0 and everything is we have one worker",
    "start": "1666980",
    "end": "1672919"
  },
  {
    "text": "node and this is defined by you have a here an MD which stands for machine deployment some cabinet knowledge that",
    "start": "1672919",
    "end": "1680120"
  },
  {
    "text": "if you want to would like to know but we have one worker node and we can see that in our Target cluster we have one work",
    "start": "1680120",
    "end": "1686600"
  },
  {
    "text": "node as well now let's change our infrastructure I would",
    "start": "1686600",
    "end": "1692539"
  },
  {
    "text": "like to increase the amount of nodes we have for our data plane so for that the only thing I need to change is our Helm",
    "start": "1692539",
    "end": "1699260"
  },
  {
    "text": "chart so instead of one replica here I would like to have four instead",
    "start": "1699260",
    "end": "1705080"
  },
  {
    "text": "and save the file I'm going to use a git commit",
    "start": "1705080",
    "end": "1710480"
  },
  {
    "text": "oh and it's blocked",
    "start": "1710480",
    "end": "1717340"
  },
  {
    "text": "okay here it is it's back so if I do a git commit",
    "start": "1719539",
    "end": "1725140"
  },
  {
    "text": "I'm just going to type all of it no more autocomplete yeah very meaningful demo",
    "start": "1726140",
    "end": "1731779"
  },
  {
    "text": "message just gonna oh that's interesting",
    "start": "1731779",
    "end": "1737500"
  },
  {
    "text": "hmm oh okay that's definitely not what I wanted live demos",
    "start": "1738380",
    "end": "1744320"
  },
  {
    "text": "let's meet again that didn't work oh are we gonna have a demo",
    "start": "1744320",
    "end": "1751960"
  },
  {
    "text": "oh oh no no no wait",
    "start": "1753440",
    "end": "1758600"
  },
  {
    "text": "let's start from scratch okay if I do a git div",
    "start": "1758600",
    "end": "1762880"
  },
  {
    "text": "right okay I was playing with some work stuff earlier on",
    "start": "1764000",
    "end": "1769100"
  },
  {
    "text": "um just gonna clear this up um let's see can we change this am I",
    "start": "1769100",
    "end": "1775460"
  },
  {
    "text": "able to edit it okay we're gonna do it from uh from the browser not the most ideal thing but it",
    "start": "1775460",
    "end": "1782659"
  },
  {
    "text": "will get us where we need to go uh Yes actually I don't want to modify this file",
    "start": "1782659",
    "end": "1789940"
  },
  {
    "text": "in the worst case I have a recorded demo so we're gonna see what's going on here like",
    "start": "1790220",
    "end": "1796100"
  },
  {
    "text": "right so I'm just gonna edit this and I would like to increase the amount of replicas to four and I'm just gonna",
    "start": "1796100",
    "end": "1803960"
  },
  {
    "text": "commit the changes straight away like we just want to change itself to be there now once we go to the Argo City",
    "start": "1803960",
    "end": "1811460"
  },
  {
    "text": "side I'm just going to make this slightly bigger I know it can be very overwhelming to see so many resources going on here but",
    "start": "1811460",
    "end": "1819200"
  },
  {
    "text": "it's pretty much what we have defined in our template or yaml Manifest this is our infrastructure's code so if I go to",
    "start": "1819200",
    "end": "1825320"
  },
  {
    "text": "the cluster resource if I click on it I should be able to see the actual yaml manifest so it's a cluster resource we",
    "start": "1825320",
    "end": "1832159"
  },
  {
    "text": "have our slash 16 for all pods we have AWS cluster for infrastructure reference and so forth so we can see all of that",
    "start": "1832159",
    "end": "1838640"
  },
  {
    "text": "there now if I hit a refresh ideally I should see",
    "start": "1838640",
    "end": "1844340"
  },
  {
    "text": "that we out of sync now for argosity in this particular case I've chosen a manual synchronization which means I",
    "start": "1844340",
    "end": "1849559"
  },
  {
    "text": "would like to review my changes before applying them you can have automatic reconciliation as well depends again",
    "start": "1849559",
    "end": "1854720"
  },
  {
    "text": "depends on your strategy now for this demo I would just like to review my changes so I'm just going to",
    "start": "1854720",
    "end": "1860840"
  },
  {
    "text": "click on the commit and we can see that I'm just going to make this bigger we have a new commit",
    "start": "1860840",
    "end": "1866720"
  },
  {
    "text": "changing the amount of our work nodes now going back it's manual",
    "start": "1866720",
    "end": "1872059"
  },
  {
    "text": "synchronization so I'm just going to click synchronize and we can see that some of the new machines are being spun",
    "start": "1872059",
    "end": "1879020"
  },
  {
    "text": "up in a in in Argo City in the view however if I go back to my terminal to",
    "start": "1879020",
    "end": "1884659"
  },
  {
    "text": "my machine deployment and Target cluster view I should be able to see new instances being provisioned so the",
    "start": "1884659",
    "end": "1891460"
  },
  {
    "text": "management cluster will already see two and this is the third one which are in the provisioning state",
    "start": "1891460",
    "end": "1897860"
  },
  {
    "text": "we can further emphasize that actual main trend is not that good but",
    "start": "1897860",
    "end": "1904580"
  },
  {
    "text": "it works I think yes so I'm just going to make this slightly bigger so everyone can see what's going on we can see that",
    "start": "1904580",
    "end": "1910760"
  },
  {
    "text": "we have one two three instances initializing here so the changes are already push to AWS and we're just",
    "start": "1910760",
    "end": "1916460"
  },
  {
    "text": "pending for those machines to be spun up so if we wait for a bit longer we can",
    "start": "1916460",
    "end": "1922520"
  },
  {
    "text": "see that while it's still in the provisioning ideally by the end of it we should see new machines being added to",
    "start": "1922520",
    "end": "1927860"
  },
  {
    "text": "the Target cluster I've already installed Calico for my cni so by default all my nodes are going to be in",
    "start": "1927860",
    "end": "1933919"
  },
  {
    "text": "the ready State as well ideally however I'm doing hotspotting for my",
    "start": "1933919",
    "end": "1939080"
  },
  {
    "text": "phone for the internet so hopefully this is going to be good enough okay we can see this happening so we see",
    "start": "1939080",
    "end": "1945980"
  },
  {
    "text": "here frame machines being brought up to the Target cluster they're not ready yet the cloud init script is still running",
    "start": "1945980",
    "end": "1951860"
  },
  {
    "text": "but by the end of it ideally we should have them in the right state now one important thing to notice is",
    "start": "1951860",
    "end": "1958640"
  },
  {
    "text": "that I didn't use a cubesatel apply to deploy my infrastructure so we have yaml manifest if you want to apply them you",
    "start": "1958640",
    "end": "1964580"
  },
  {
    "text": "use a cubesatel apply we don't do that all of this is taken care of by Argo City so we should have and hands off",
    "start": "1964580",
    "end": "1970580"
  },
  {
    "text": "fully provisioning of our infrastructure so here we can see that we have all of",
    "start": "1970580",
    "end": "1976039"
  },
  {
    "text": "our nodes in the ready State and we have four control four data node machines as",
    "start": "1976039",
    "end": "1981500"
  },
  {
    "text": "desired in our manifest now and all of these should be running",
    "start": "1981500",
    "end": "1987020"
  },
  {
    "text": "as well or maybe still in the initializing phase it is taking a while",
    "start": "1987020",
    "end": "1993340"
  },
  {
    "text": "in this case my terminal indeed actually failed me for this demo but we made it",
    "start": "1993740",
    "end": "1998779"
  },
  {
    "text": "work here's the recording as well same demo if you want to rewatch it or of course it's going to be part of this",
    "start": "1998779",
    "end": "2004299"
  },
  {
    "text": "recording as well now the most important thing that I want to bring up is that we can use the same",
    "start": "2004299",
    "end": "2009399"
  },
  {
    "text": "automation layer for our Tinkerbell provisioning and can bring this provisioning",
    "start": "2009399",
    "end": "2014460"
  },
  {
    "text": "so what if you would like to use automation with kpt provider you still",
    "start": "2014460",
    "end": "2020919"
  },
  {
    "text": "need free sets of configuration so from the Tinkle beside we need the same thing we need our inventory hardware and we",
    "start": "2020919",
    "end": "2026740"
  },
  {
    "text": "need the team server to be up and running at all time now in the management cluster we're going to have our controllers and we're going to have",
    "start": "2026740",
    "end": "2032740"
  },
  {
    "text": "the kpt controller so class 3 by provider for Tinkerbell already installed however all of our manifest is",
    "start": "2032740",
    "end": "2038980"
  },
  {
    "text": "going to be taken care of using Argo CD so Argo City is actually going to use or",
    "start": "2038980",
    "end": "2044559"
  },
  {
    "text": "look at the helm chart if new changes are identified these are going to be applied and by the end of it we should have a",
    "start": "2044559",
    "end": "2051099"
  },
  {
    "text": "Target cluster in the desired state that we wanted so this amount of replica nodes yeah replica machines",
    "start": "2051099",
    "end": "2058500"
  },
  {
    "text": "this particular subnet region and so forth so if you take a step by step if",
    "start": "2058500",
    "end": "2063820"
  },
  {
    "text": "you're on a provision a for example a new machine as a new bare metal machine",
    "start": "2063820",
    "end": "2070599"
  },
  {
    "text": "as a kubernetes node you're going to apply these changes to the helm chart again Helm chart is optional but it",
    "start": "2070599",
    "end": "2076780"
  },
  {
    "text": "helps now when you commit these changes to the helmet chart in git Argo City is going",
    "start": "2076780",
    "end": "2082300"
  },
  {
    "text": "to pick up these changes these changes are going to be applied to the Manifest in the management cluster in the",
    "start": "2082300",
    "end": "2088240"
  },
  {
    "text": "management cluster we have the kpt controller so the Tinkerbell provider Tinkerbell is going to say that oh we",
    "start": "2088240",
    "end": "2093940"
  },
  {
    "text": "need a new machine to be spawned up so it's going to take all of the pre-configured templates and workflows to install all of the kubernetes",
    "start": "2093940",
    "end": "2100599"
  },
  {
    "text": "binaries on the bare metal machine establish all the networking components as such that by the end we're going to",
    "start": "2100599",
    "end": "2106180"
  },
  {
    "text": "have a new machine added to the Target cluster as an instance and you can do this repeatedly but more importantly",
    "start": "2106180",
    "end": "2111520"
  },
  {
    "text": "completely hands off and just as an overview to see where the",
    "start": "2111520",
    "end": "2116980"
  },
  {
    "start": "2114000",
    "end": "2211000"
  },
  {
    "text": "overlap between these tool happens if you want to use or provision bare metal you're going to use Tinkerbell again",
    "start": "2116980",
    "end": "2122800"
  },
  {
    "text": "Tinkerbell Provisions bare metal anywhere if you want to provision kubernetes on",
    "start": "2122800",
    "end": "2127960"
  },
  {
    "text": "bare Meadow this is where you introduce class 3 behind to the picture and this is where you're going to have the kpt provider which allows you to",
    "start": "2127960",
    "end": "2134320"
  },
  {
    "text": "provision kubernetes on bare metal using a set of templates and workflows if you want to further automate the",
    "start": "2134320",
    "end": "2140859"
  },
  {
    "text": "provisioning of your infrastructure you're going to introduce a github's tool such as Argo City now if cluster",
    "start": "2140859",
    "end": "2146500"
  },
  {
    "text": "API we have the concept of cluster as a resource and this allows us to manual to actually define qualify infrastructure",
    "start": "2146500",
    "end": "2152980"
  },
  {
    "text": "using gamma can take care of it to be applied automatically so you can deploy",
    "start": "2152980",
    "end": "2158560"
  },
  {
    "text": "infrastructure in addition to that you can deploy any applications on top of your cluster so argue City can can go an",
    "start": "2158560",
    "end": "2165640"
  },
  {
    "text": "extra length over there and more importantly all of this complex",
    "start": "2165640",
    "end": "2171579"
  },
  {
    "text": "or intricate architecture has been possible because of the power of building blocks within the cloud native",
    "start": "2171579",
    "end": "2177160"
  },
  {
    "text": "landscape now it is a very powerful driving force that even focuses on the provisioning of",
    "start": "2177160",
    "end": "2182800"
  },
  {
    "text": "bare metal in an automatic declarable and interoperable way",
    "start": "2182800",
    "end": "2188700"
  },
  {
    "text": "now without saying we are hiring now if you'd like to work with my team or",
    "start": "2188920",
    "end": "2194920"
  },
  {
    "text": "within the Apple cloud services or ACS go to jobs at apple.com we have lots of",
    "start": "2194920",
    "end": "2199960"
  },
  {
    "text": "roles still available in Europe or us if you're looking to replicate do reach out to me if you have",
    "start": "2199960",
    "end": "2205960"
  },
  {
    "text": "any questions about the recruiting process I'm more than happy to make it very easy for you to go for it",
    "start": "2205960",
    "end": "2211180"
  },
  {
    "start": "2211000",
    "end": "2287000"
  },
  {
    "text": "now if you're curious about cluster API I have written quite extensively about it on my medium blog post so you can",
    "start": "2211180",
    "end": "2216700"
  },
  {
    "text": "find more about this combination of demos between Class review and githubs how can you do automatic updates for",
    "start": "2216700",
    "end": "2222400"
  },
  {
    "text": "your cluster using githubs and cluster API so make sure to check it out if you're interested in this topic",
    "start": "2222400",
    "end": "2229240"
  },
  {
    "text": "and if you have any questions I'm more than happy to answer them after this talk or you can reach out to me on Twitter and Linkedin definitely spending",
    "start": "2229240",
    "end": "2236440"
  },
  {
    "text": "a lot of time there you can find me there as well and here's the QR code for the cloud native fundamentals course now",
    "start": "2236440",
    "end": "2242380"
  },
  {
    "text": "if you have anyone new to Cloud native and trying to understand or enter into the cloud native space I'd recommend to",
    "start": "2242380",
    "end": "2248680"
  },
  {
    "text": "take this it's completely free you don't have to pay for it this is like very selfless promotion",
    "start": "2248680",
    "end": "2254859"
  },
  {
    "text": "um but again we definitely recommend for it I'm looking for feedback on this course as well so if you have anyone do",
    "start": "2254859",
    "end": "2261220"
  },
  {
    "text": "reach out and hopefully can grow our Cloud native practitioner community this is Katie Comanche and I look",
    "start": "2261220",
    "end": "2267160"
  },
  {
    "text": "forward to seeing how you can shape the cloud native ecosystem thank you and enjoy the rest of the conference [Applause]",
    "start": "2267160",
    "end": "2279009"
  }
]