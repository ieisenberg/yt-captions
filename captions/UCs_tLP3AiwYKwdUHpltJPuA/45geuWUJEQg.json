[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "i wish i was in copenhagen copenhagen is a beautiful place i was there um earlier uh last year um and it's",
    "start": "13040",
    "end": "19600"
  },
  {
    "text": "absolutely delightful unfortunately it's not to be at the moment we're all stuck at home which stuck at home for me means like",
    "start": "19600",
    "end": "25760"
  },
  {
    "text": "it's not actually a terrible place to be it's rather nice it's a place called yorkshire um it's in the north of",
    "start": "25760",
    "end": "31279"
  },
  {
    "text": "england halfway between london and scotland and it's rather nice it's like this town that's set in the the",
    "start": "31279",
    "end": "37120"
  },
  {
    "text": "country dales and you've got kind of countryside and lots of good walking and running but it's a fairly small place there's like the",
    "start": "37120",
    "end": "43760"
  },
  {
    "text": "shops and stuff like that but if you want to go and see a movie if you want to go to the big shops and stuff like that",
    "start": "43760",
    "end": "49600"
  },
  {
    "text": "you generally have to go to a city nearby so i'll pop in my car and go to one of my nearest cities which",
    "start": "49600",
    "end": "55600"
  },
  {
    "text": "is a place called bradford and i'll be driving to bradford and thinking as one does driving a car wherever get a pack like",
    "start": "55600",
    "end": "62320"
  },
  {
    "text": "oh i have to find a car park and so my mind turns to like well where is my newest car park that's",
    "start": "62320",
    "end": "68240"
  },
  {
    "start": "67000",
    "end": "166000"
  },
  {
    "text": "actually got some available spaces or there's a particular car park that's close to the movie theater so",
    "start": "68240",
    "end": "73680"
  },
  {
    "text": "are there any spaces in that particular one or maybe i'm driving around town and i can't find any car parks that have got",
    "start": "73680",
    "end": "79119"
  },
  {
    "text": "space so it'd be useful if i could be told when there is one with space that becomes available i'm being a bit of a data nerd i wonder",
    "start": "79119",
    "end": "86000"
  },
  {
    "text": "how occupancy varies over time if i could go and analyze the different car parks and how does that specifically trend so as i",
    "start": "86000",
    "end": "92479"
  },
  {
    "text": "say this is me uh developer advocate confluence uh confluence for one of the companies that contribute to",
    "start": "92479",
    "end": "98400"
  },
  {
    "text": "the open source apache kafka project we've got our own managed kafka service in the cloud called conference cloud",
    "start": "98400",
    "end": "104000"
  },
  {
    "text": "and follow me on twitter i've also got a youtube which i started thanks to lockdown so uh i'm off.dev youtube and there's much",
    "start": "104000",
    "end": "110560"
  },
  {
    "text": "more videos like this one on there so carfax well fortunately um there's",
    "start": "110560",
    "end": "116560"
  },
  {
    "text": "this kind of open data initiative and various places including bradford council publish feeds of data about um the whole",
    "start": "116560",
    "end": "124640"
  },
  {
    "text": "area and one of those feeds has information about the car park occupancy and this updates every few minutes and",
    "start": "124640",
    "end": "130959"
  },
  {
    "text": "from that feed we're going to build a system which is going to let us send to the user information about those car packs so for",
    "start": "130959",
    "end": "138239"
  },
  {
    "text": "our front end i'm using a tool called telegram which you may or may not be familiar with it's like whatsapp and facebook",
    "start": "138239",
    "end": "144959"
  },
  {
    "text": "messenger it's a messaging platform and it's got a really nifty api that you can write bots against",
    "start": "144959",
    "end": "150560"
  },
  {
    "text": "to automate these kind of things so that's the idea that's what we're going to build and it's kind of like it's just a hello",
    "start": "150560",
    "end": "156879"
  },
  {
    "text": "world type example of the kind of things that you can build with um these kind of tools but it's kind of",
    "start": "156879",
    "end": "162239"
  },
  {
    "text": "fun to show what you can do so let's actually see it in action so on the left hand side here i'm actually",
    "start": "162239",
    "end": "168319"
  },
  {
    "start": "166000",
    "end": "1823000"
  },
  {
    "text": "running my code and if we get chance i'll actually go into the code itself and show you and on the right hand side is telegram",
    "start": "168319",
    "end": "175040"
  },
  {
    "text": "so this is my my bot here on the left and here's telegram on the right telegram has got a mobile app as well or",
    "start": "175040",
    "end": "181680"
  },
  {
    "text": "ipad or however you want to access it but this is just on the desktop so i'm going to start talking to the",
    "start": "181680",
    "end": "186720"
  },
  {
    "text": "boss i'm going to click on start down here and you can see on the left hand side the bot says yeah i received a message and there's a command saying start so",
    "start": "186720",
    "end": "193920"
  },
  {
    "text": "the bot has now sent me some information about how to use it so we're going to say this we're going to say",
    "start": "193920",
    "end": "199040"
  },
  {
    "text": "based on our current location which is over here and we click on that and send it a location and then we're going to say",
    "start": "199040",
    "end": "205680"
  },
  {
    "text": "well let's see um where your nearest car park is so i said well",
    "start": "205680",
    "end": "211040"
  },
  {
    "text": "here's your longitude and latitude and we're going to say as the crew flies which park is which the car park is",
    "start": "211040",
    "end": "217200"
  },
  {
    "text": "closest to that point so not like which is the quickest to navigate to but which one if you just draw a direct",
    "start": "217200",
    "end": "222319"
  },
  {
    "text": "line on a map is going to be closest to it it says okay this is your closest one it's called westgate there's a map for it",
    "start": "222319",
    "end": "228080"
  },
  {
    "text": "and at the moment it's got 110 car park spaces free so that's pretty useful to do but maybe",
    "start": "228080",
    "end": "234000"
  },
  {
    "text": "i've got a particular car park in mind say that well there's this one here it's called broadway i think and i wonder if that's",
    "start": "234000",
    "end": "239360"
  },
  {
    "text": "got any spaces for you because i like to pack at that one and it turns in that way it's got a whole bunch of spaces free so over 1100 spaces free now in the uk",
    "start": "239360",
    "end": "247760"
  },
  {
    "text": "at the moment we're in the lockdown so there's very few people actually going out into cities and parking up so it's",
    "start": "247760",
    "end": "254000"
  },
  {
    "text": "kind of not surprising there's a bunch of space is free at the moment but let's say hypothetically that a",
    "start": "254000",
    "end": "259519"
  },
  {
    "text": "hundred thousand sorry hundreds um a thousand spaces isn't enough for me to park in and",
    "start": "259519",
    "end": "265120"
  },
  {
    "text": "actually we'd like to find a car back that's got a bunch more spaces so in fact tell me when there is a car pack that becomes available",
    "start": "265120",
    "end": "271440"
  },
  {
    "text": "with a certain number of spaces so that's going to say well set an alert and let's say wow let's say",
    "start": "271440",
    "end": "277280"
  },
  {
    "text": "500. it's still going to trigger for this one here but maybe there's other car parks as well so for that",
    "start": "277280",
    "end": "282720"
  },
  {
    "text": "we're going to see when a new message is received from that api when we get new data coming in we can check against that",
    "start": "282720",
    "end": "289759"
  },
  {
    "text": "threshold that we've set and that's going to push to the user whenever we get that data coming in so",
    "start": "289759",
    "end": "296000"
  },
  {
    "text": "this is the kind of things that we've built we've done lookups against the data we've done event driven notifications",
    "start": "296000",
    "end": "301440"
  },
  {
    "text": "against the data and i want to walk through now how i've actually built that and put it together so we're going to",
    "start": "301440",
    "end": "307600"
  },
  {
    "text": "close down telegram otherwise it's going to keep on pinging at us and we're going to kill the bot uh as well and we'll actually have a",
    "start": "307600",
    "end": "313600"
  },
  {
    "text": "look at the kind of code and the processes that sit behind it so what we've got over here",
    "start": "313600",
    "end": "319360"
  },
  {
    "text": "is the actual demo itself so if you actually want to go and try this for yourself you can because the",
    "start": "319360",
    "end": "324479"
  },
  {
    "text": "api it's a public api you don't need credentials so you go to the demo scene repository from",
    "start": "324479",
    "end": "329600"
  },
  {
    "text": "confluence on github and there's actually a docker compose there's a demo script that i'm following",
    "start": "329600",
    "end": "334720"
  },
  {
    "text": "and so you can try it out for yourself so get docker docker compose docker compose up and then you've got the full stack i'm",
    "start": "334720",
    "end": "340639"
  },
  {
    "text": "running here so to start off with let's have a look at the data itself",
    "start": "340639",
    "end": "346800"
  },
  {
    "text": "so the data itself comes from this api so i've got my demo script i just showed you on my screen down here which is why",
    "start": "346800",
    "end": "352400"
  },
  {
    "text": "i keep looking up and down and it looks like this the data so",
    "start": "352400",
    "end": "357600"
  },
  {
    "text": "here's the uh the rest endpoint we're just gonna use curl to pull that data in and to start with we're gonna pipe it",
    "start": "357600",
    "end": "363440"
  },
  {
    "text": "through tail which just strips off the header so the data we're getting from the api it's just a bunch of comma separated",
    "start": "363440",
    "end": "370080"
  },
  {
    "text": "data and we've got things like a field here which i guess is the date and this here which looks like a time and",
    "start": "370080",
    "end": "375680"
  },
  {
    "text": "the name of the car park capacity the spaces and so on we point it through tail to get rid of the header",
    "start": "375680",
    "end": "381280"
  },
  {
    "text": "because if we leave that off we'll see that the header itself tells us the field names but what we're",
    "start": "381280",
    "end": "386960"
  },
  {
    "text": "going to do is we're going to take this dump of data and stream it into kafka and each row on here is going to become a message and",
    "start": "386960",
    "end": "393680"
  },
  {
    "text": "kafka so what we're going to do is put onto a kafka topic this kind of thing here because that's just going to not make sense that's not",
    "start": "393680",
    "end": "399039"
  },
  {
    "text": "actually the payload that's just the metadata which we'll use later but we don't put it onto the topic itself",
    "start": "399039",
    "end": "405120"
  },
  {
    "text": "so to get this data onto our kafka topic we're going to pipe it out of tail and we're going to pipe it",
    "start": "405120",
    "end": "411360"
  },
  {
    "text": "through this really useful utility called kafka cat so i think there are several of you mentioned that you're using kafka",
    "start": "411360",
    "end": "416720"
  },
  {
    "text": "already if you're not familiar with kafka cars go and check it out it's super useful it's like netcat for kafka and it",
    "start": "416720",
    "end": "423759"
  },
  {
    "text": "integrates really nicely with the linux philosophy of pipes so we can pipe data into it as a producer we can consume",
    "start": "423759",
    "end": "430720"
  },
  {
    "text": "data from katherine piper out of it onto other applications using pipes so",
    "start": "430720",
    "end": "436560"
  },
  {
    "text": "we're going to pipe the output of tail into kafkacat here's my broker here's my topic and",
    "start": "436560",
    "end": "442960"
  },
  {
    "text": "we're going to act as a producer let's get rid of that t so that's now going to pull the data",
    "start": "442960",
    "end": "448240"
  },
  {
    "text": "from that endpoint and produce it to a kafka topic are we sure it's got into the kafka topic",
    "start": "448240",
    "end": "453360"
  },
  {
    "text": "well we can read messages from that kafka topic we could do so using kafka cat but now is a good time to have a look at",
    "start": "453360",
    "end": "460400"
  },
  {
    "text": "kc equal db so here's kc called db it's as the the tagline here says it's an event",
    "start": "460400",
    "end": "465599"
  },
  {
    "text": "streaming database for apache kafka it's very very cool because it's built using apache kafka",
    "start": "465599",
    "end": "473199"
  },
  {
    "text": "and it does two key things for us it does stream processing it does",
    "start": "473199",
    "end": "478720"
  },
  {
    "text": "uh streaming etl it lets you say i've got data here i'd like to manipulate it and transform it and join",
    "start": "478720",
    "end": "484800"
  },
  {
    "text": "it and do aggregates and stuff like that and write it back to another topic on the broker but it also lets us build materialized",
    "start": "484800",
    "end": "492240"
  },
  {
    "text": "views which we can query the state of directly from our applications and that's what i was doing in that",
    "start": "492240",
    "end": "497360"
  },
  {
    "text": "telegram bot where we said how many spaces are there in this car park that was querying directly against key",
    "start": "497360",
    "end": "503039"
  },
  {
    "text": "sql db anyway i'm skipping way ahead of myself here we've got kc called db and it does that stuff i just told you",
    "start": "503039",
    "end": "509440"
  },
  {
    "text": "but it also acts as a consumer and a producer also if you want to fork after topics so we say what topics",
    "start": "509440",
    "end": "516800"
  },
  {
    "text": "are there on the broker there's a topic called car parks and we can say print care packs from",
    "start": "516800",
    "end": "522240"
  },
  {
    "text": "beginning show me all the data and it just says i'm going to act as a consumer i'm going to go to the topic i'm going",
    "start": "522240",
    "end": "527360"
  },
  {
    "text": "to pull out the data guess at the serialization format it just looks like it's a string and here is my data and if we go back",
    "start": "527360",
    "end": "534880"
  },
  {
    "text": "to here and we run that same command that's saying curl piping through into kafkacat and we run that and we go back to um kc",
    "start": "534880",
    "end": "542560"
  },
  {
    "text": "called db you'll see we've got another screen full of data so 1504 was when i ran it before 1507 is that or rather",
    "start": "542560",
    "end": "550160"
  },
  {
    "text": "that's the time stamp from the api so it's not the actual timestamp of ingest so we've got data coming from an",
    "start": "550160",
    "end": "556320"
  },
  {
    "text": "api which was streaming into kafka i'm actually going to set this running on a",
    "start": "556320",
    "end": "561360"
  },
  {
    "text": "loop so piping data into kafka cat into kafka is an okay way of getting data in and",
    "start": "561360",
    "end": "567440"
  },
  {
    "text": "it's perfectly valid for like a proof of concept or just a demo like this you'd probably go for something a bit more resilient if you were doing this",
    "start": "567440",
    "end": "573440"
  },
  {
    "text": "for real in a production environment you do something like kafka connects which i'll talk about in a little bit",
    "start": "573440",
    "end": "578959"
  },
  {
    "text": "so we're going to take our slightly hacky method to make it really hacky just by dumping it inside a while loop and say like",
    "start": "578959",
    "end": "584640"
  },
  {
    "text": "every should you say every 10 seconds pull the api dump the return into a",
    "start": "584640",
    "end": "590160"
  },
  {
    "text": "kafka topic okay so that's now running and if we watch that screen for a moment you'll see it's going to dump",
    "start": "590160",
    "end": "596160"
  },
  {
    "text": "another set of data in any moment now and it'll take over with a bunch of our messages and what we're going to do is we're",
    "start": "596160",
    "end": "601920"
  },
  {
    "text": "going to take that data and we're gonna say well comma separated is okay enough",
    "start": "601920",
    "end": "607200"
  },
  {
    "text": "well it's not really because it's just comma separated fields of data what are those fields of data we want to",
    "start": "607200",
    "end": "612880"
  },
  {
    "text": "do something with it we want to be able to say how many spaces are there available in this particular car pack",
    "start": "612880",
    "end": "618480"
  },
  {
    "text": "and in making that question there are a bunch of assumptions we're making about the data that we can say in this car pack that car park is a",
    "start": "618480",
    "end": "625760"
  },
  {
    "text": "entity within that data spaces is an entity as a value within that data so we need to describe how",
    "start": "625760",
    "end": "632079"
  },
  {
    "text": "we're going to access it we need to describe the schema of the data so this is where that header of the data comes in it told us what the",
    "start": "632079",
    "end": "638720"
  },
  {
    "text": "field names are and we're going to do this we're going to say create a stream in case equal db and a stream is simply",
    "start": "638720",
    "end": "646079"
  },
  {
    "text": "a kafka topic which is an unbounded series of events it's a kafka topic with a schema now kafka topics can be",
    "start": "646079",
    "end": "653839"
  },
  {
    "text": "serialized in different ways you can serialize them as we saw here using csv we can use",
    "start": "653839",
    "end": "659040"
  },
  {
    "text": "json both of those don't have an explicit schema hence you have to enter them manually",
    "start": "659040",
    "end": "664880"
  },
  {
    "text": "like this if you're using avro if you're using protobuf if you're using json schema then you don't have to type in that",
    "start": "664880",
    "end": "670720"
  },
  {
    "text": "schema because it already exists in the schema registry so you simply write your program you write your code",
    "start": "670720",
    "end": "676399"
  },
  {
    "text": "here saying create stream against this topic and the value format is other or something and it pulls down the schema but how do",
    "start": "676399",
    "end": "683200"
  },
  {
    "text": "we do it we've now got a stream and we say clear that and show streams",
    "start": "683200",
    "end": "689360"
  },
  {
    "text": "we've got a stream called car park source against this kafka topic here and the data format is delimited",
    "start": "689360",
    "end": "696000"
  },
  {
    "text": "and because we've got a schema we can do this we can project fields from that data so",
    "start": "696000",
    "end": "702560"
  },
  {
    "text": "offsets reset to earliest means go back to the beginning of the kafka topic because data in kafka",
    "start": "702560",
    "end": "707839"
  },
  {
    "text": "doesn't get deleted when it's being read it gets deleted based on the retention policies which is something separate so we're going to read data from that",
    "start": "707839",
    "end": "714000"
  },
  {
    "text": "topic from the beginning of the topic we're going to apply that schema to it and say just show me",
    "start": "714000",
    "end": "719519"
  },
  {
    "text": "the date and time the name of the car pack and the number of empty places and just showing the first five so it",
    "start": "719519",
    "end": "726000"
  },
  {
    "text": "says okay here are those first five messages within that topic it says we've got this car pack here and this one here",
    "start": "726000",
    "end": "732240"
  },
  {
    "text": "and these are how many empty spaces there are so we can use key sql db to start to poke around inside the data",
    "start": "732240",
    "end": "739120"
  },
  {
    "text": "and see what fields exist and see what data exists we can use where clauses we",
    "start": "739120",
    "end": "744399"
  },
  {
    "text": "can apply predicates to it we can also join to data that sits in other topics perhaps we've ingested from",
    "start": "744399",
    "end": "750560"
  },
  {
    "text": "other systems we can also build aggregations so one of the things that we're going to",
    "start": "750560",
    "end": "755760"
  },
  {
    "text": "do first before we can build any aggregations is we're going to take this set of data i'm going to process it",
    "start": "755760",
    "end": "761440"
  },
  {
    "text": "a little bit further because so far all we've done is we said ingest this stream of data and show it to the user the kafka's",
    "start": "761440",
    "end": "768000"
  },
  {
    "text": "topic still remains as it is we're simply applying something on top which is reddit and outputs it to the console",
    "start": "768000",
    "end": "773839"
  },
  {
    "text": "but now we're going to do this instead of saying create a stream on top of an existing topic and that's",
    "start": "773839",
    "end": "779600"
  },
  {
    "text": "more kind of like registering or declaring a stream on top of a topic with a schema now",
    "start": "779600",
    "end": "784720"
  },
  {
    "text": "we're going to say create a stream here and we're going to create it as the results of this select",
    "start": "784720",
    "end": "792399"
  },
  {
    "text": "so like in the relational database world you say create table as select create a new table with the results of",
    "start": "792399",
    "end": "797920"
  },
  {
    "text": "this select statement executes the data and writes it to the new table and that's like a static thing and it does it and it's finished",
    "start": "797920",
    "end": "804639"
  },
  {
    "text": "in the streaming world we have the same concept create a new object populated by a select against an",
    "start": "804639",
    "end": "811120"
  },
  {
    "text": "existing object but the objects here are streams so a stream is an unbounded series of",
    "start": "811120",
    "end": "817920"
  },
  {
    "text": "events continues forever and so the select that we run against that stream is also unbounded",
    "start": "817920",
    "end": "823760"
  },
  {
    "text": "and runs forever the example i showed you previously said limit five just show me five messages",
    "start": "823760",
    "end": "829040"
  },
  {
    "text": "and then we're done without that limit clause it continues forever because the source data is",
    "start": "829040",
    "end": "834480"
  },
  {
    "text": "unbounded so we can take this idea of a continuous query and say here is my select statement and",
    "start": "834480",
    "end": "839920"
  },
  {
    "text": "explain what we're doing in that select in a moment take that select statement against this source stream here",
    "start": "839920",
    "end": "845920"
  },
  {
    "text": "and write the results of that select into this new stream here and a new stream",
    "start": "845920",
    "end": "851199"
  },
  {
    "text": "is backed by a kafka topic and we could override that topic name if we wanted to what we are overriding is",
    "start": "851199",
    "end": "857600"
  },
  {
    "text": "the format the serialization format in which we write that data because kafka topics the messages are",
    "start": "857600",
    "end": "863040"
  },
  {
    "text": "just bytes p value bytes so we're saying well instead of dumping csv onto there and every person who",
    "start": "863040",
    "end": "868480"
  },
  {
    "text": "wants to use that data has to find out the schema first and then type in schema up next which is error-prone and tedious",
    "start": "868480",
    "end": "874560"
  },
  {
    "text": "we say we're going to serialize it as protobuf we're going to write that data using protobuf we'd use alpha or json schema",
    "start": "874560",
    "end": "880720"
  },
  {
    "text": "if we wanted serialize that data which stores the schema in the schema registry and now anyone",
    "start": "880720",
    "end": "887040"
  },
  {
    "text": "who wants to use that data has got access to that schema so select the data from the source write it",
    "start": "887040",
    "end": "893519"
  },
  {
    "text": "to the target in protobuf select all of the data from the source that select style",
    "start": "893519",
    "end": "898639"
  },
  {
    "text": "but also do a few more things take that date and time which we kind of assume as a timestamp",
    "start": "898639",
    "end": "904639"
  },
  {
    "text": "but actually apply the logic tool which has here the particular values within it because did they use us or european date",
    "start": "904639",
    "end": "911440"
  },
  {
    "text": "formatting and what's the time zone well we notice it's london time zone and converts it from a string into an actual",
    "start": "911440",
    "end": "917680"
  },
  {
    "text": "timestamp format a timestamp type we can do some calculations on the data",
    "start": "917680",
    "end": "922800"
  },
  {
    "text": "we can also build objects within the data and change the schema this way we can create a struct",
    "start": "922800",
    "end": "928240"
  },
  {
    "text": "we can take the latitude and longitude that's returned from the api and we can build that into an object and",
    "start": "928240",
    "end": "934079"
  },
  {
    "text": "we can also add in some static data for kind of lineage purposes so we've done that and now instead of",
    "start": "934079",
    "end": "940639"
  },
  {
    "text": "dumping a bunch of output to the screen it'll say any moment now i've created that query i'm going to execute that",
    "start": "940639",
    "end": "946320"
  },
  {
    "text": "in the background and if we say show streams it's going to say okay we've got a new stream here called car park events",
    "start": "946320",
    "end": "952240"
  },
  {
    "text": "backed by a kafka topic of the same name the format though is protobuf",
    "start": "952240",
    "end": "957600"
  },
  {
    "text": "if we take this here we can say describe that stream it says well here's your new",
    "start": "957600",
    "end": "962880"
  },
  {
    "text": "schema with all the different fields in it we can also say describe extended",
    "start": "962880",
    "end": "968240"
  },
  {
    "text": "and this is okay how many messages have we processed when was the last message that we processed we got metrics because",
    "start": "968240",
    "end": "973680"
  },
  {
    "text": "we've written an application how many messages are we processing per second so we have processed 304 now we've",
    "start": "973680",
    "end": "980800"
  },
  {
    "text": "processed 312 because our api is pulling every 10 seconds so if i keep on talking and rerun that we're going to see that's",
    "start": "980800",
    "end": "987199"
  },
  {
    "text": "now gone up because we're getting new sets of data all the time so we're processing that data as it arrives i'm writing it to",
    "start": "987199",
    "end": "993120"
  },
  {
    "text": "that target topic if i say show topics we can see we've got one called car park events",
    "start": "993120",
    "end": "998480"
  },
  {
    "text": "i can say print car park events this is all here is the contents of that topic now we're just back to running running a",
    "start": "998480",
    "end": "1004480"
  },
  {
    "text": "consumer from within key sql db so now the point is we have a kafka",
    "start": "1004480",
    "end": "1009519"
  },
  {
    "text": "topic which any application can connect to and read from",
    "start": "1009519",
    "end": "1015360"
  },
  {
    "text": "let's have a sip my drink before my throat gives out",
    "start": "1015360",
    "end": "1019680"
  },
  {
    "text": "now what we're going to do is we're going to take this data that we've cleansed and put into a decent format",
    "start": "1022720",
    "end": "1028000"
  },
  {
    "text": "and applied a schema and written back onto kafka the purpose of that being now anyone can use that carpark data",
    "start": "1028000",
    "end": "1034240"
  },
  {
    "text": "now anyone can say well this is a timestamp it's a native timestamp format excuse me here is a struct here's the",
    "start": "1034240",
    "end": "1040720"
  },
  {
    "text": "schema we can just use this data for other applications that's why we wrote it back on to a",
    "start": "1040720",
    "end": "1045760"
  },
  {
    "text": "kafka topic but now we can do other things we can say let's build ourselves a materialized",
    "start": "1045760",
    "end": "1050799"
  },
  {
    "text": "view against that data so we're going to do the same thing here we're going to say",
    "start": "1050799",
    "end": "1056400"
  },
  {
    "text": "set the offset back to the earliest once process everything that's in that source and now we're",
    "start": "1056400",
    "end": "1062400"
  },
  {
    "text": "going to create another object but this object is a table before we create this stream stream",
    "start": "1062400",
    "end": "1069440"
  },
  {
    "text": "series of unbounded events with a schema a table is a kafka topic",
    "start": "1069440",
    "end": "1074960"
  },
  {
    "text": "but taking the data in that kafka topic and telling us the state telling us the value for a given key and",
    "start": "1074960",
    "end": "1082160"
  },
  {
    "text": "it's got a schema so now we're saying create a table called carpark with the results of this select statement and",
    "start": "1082160",
    "end": "1088799"
  },
  {
    "text": "this select statement gives us an aggregate which is why it's a table because an aggregate tells you the value",
    "start": "1088799",
    "end": "1094320"
  },
  {
    "text": "for a given key and the aggregate values are probably going to change for that key",
    "start": "1094320",
    "end": "1099520"
  },
  {
    "text": "which is why we don't want it as a stream we want it as a table we don't want to see like what was the aggregate all the time along through we",
    "start": "1099520",
    "end": "1104960"
  },
  {
    "text": "want to know what's the aggregate state even if we get new messages coming in and updating those fields and averages and so on",
    "start": "1104960",
    "end": "1110799"
  },
  {
    "text": "we want to see the state of that aggregate so we're going to group it by name the name of the car pack",
    "start": "1110799",
    "end": "1116400"
  },
  {
    "text": "and we're going to say what was the latest timestamp data that we've received for it what's the latest value in terms of the",
    "start": "1116400",
    "end": "1123120"
  },
  {
    "text": "capacity in the empty places what's the average number of empty places from our source stream here that we created",
    "start": "1123120",
    "end": "1130000"
  },
  {
    "text": "group it by the name of the car park so now we've created a table and again",
    "start": "1130000",
    "end": "1135520"
  },
  {
    "text": "this is a query in the background and again this is a kafka topic that we've built let's say show topics",
    "start": "1135520",
    "end": "1140799"
  },
  {
    "text": "we've got a topic called car pack and we can query it so we can do this we can say i would",
    "start": "1140799",
    "end": "1147360"
  },
  {
    "text": "like to see how many spaces are available and the average number of empty spaces for this particular car park and it says",
    "start": "1147360",
    "end": "1154559"
  },
  {
    "text": "well this is the current number of empty spaces in that particular car park and that was the time that the api gave us",
    "start": "1154559",
    "end": "1160799"
  },
  {
    "text": "and if you notice this here it says query terminated so we've gone from saying an unbounded",
    "start": "1160799",
    "end": "1166400"
  },
  {
    "text": "series of events that we query with a continuous query that keeps on outputting to saying we've built a materialized",
    "start": "1166400",
    "end": "1172080"
  },
  {
    "text": "view of state and i can query that state and state has got state and once you've queried it it",
    "start": "1172080",
    "end": "1177520"
  },
  {
    "text": "returns i could also say i would like to know when that state changes i say okay emit changes so now it says",
    "start": "1177520",
    "end": "1185520"
  },
  {
    "text": "well here is the current value and then i'm going to keep on telling you as that changes so as we receive new data as that",
    "start": "1185520",
    "end": "1192720"
  },
  {
    "text": "aggregate value changes or possibly doesn't unless someone comes and goes from the car pack which current environment is unlikely then",
    "start": "1192720",
    "end": "1199280"
  },
  {
    "text": "you're just going to see as the aggregate changes you get the new values coming from it it's coming from the same underlying",
    "start": "1199280",
    "end": "1205760"
  },
  {
    "text": "data which is modeling it semantically in uh in different semantic ways",
    "start": "1205760",
    "end": "1211360"
  },
  {
    "text": "so what i've shown you here is called a push sorry it's called a pull query and a",
    "start": "1211360",
    "end": "1216640"
  },
  {
    "text": "poll query says what's the current state in this materialized view it says okay i'll return that",
    "start": "1216640",
    "end": "1222559"
  },
  {
    "text": "and a push query is this here where we say i would like to in effect subscribe to a stream of changes",
    "start": "1222559",
    "end": "1228159"
  },
  {
    "text": "either from a table as the aggregate values change or indeed against the stream itself so if we have a stream so we could run",
    "start": "1228159",
    "end": "1234640"
  },
  {
    "text": "the same thing and we could say from car park events so that's the stream that we",
    "start": "1234640",
    "end": "1240000"
  },
  {
    "text": "built previously and it says we can't do that and i'll probably say you can't do a lot of that",
    "start": "1240000",
    "end": "1246159"
  },
  {
    "text": "because i'm living in a live demo which is always a silly idea so let's come back to that and instead let's see",
    "start": "1246159",
    "end": "1253280"
  },
  {
    "text": "what we can do with these poll queries so the pull queries that we saw it gives you the current answer",
    "start": "1253280",
    "end": "1260080"
  },
  {
    "text": "and what completes the next piece in the picture of what i showed you in that demo earlier is that not only can you run",
    "start": "1260080",
    "end": "1266400"
  },
  {
    "text": "portal queries from within the command line interface you can also run them using an external client",
    "start": "1266400",
    "end": "1272320"
  },
  {
    "text": "so there's a rest api that you can use there's a java client that ships with k sql db there are community python and go",
    "start": "1272320",
    "end": "1279200"
  },
  {
    "text": "clients that you can use for k sql db so you can build your applications that then make a call against case equal db",
    "start": "1279200",
    "end": "1285679"
  },
  {
    "text": "to say what's the current state so let's show you that briefly",
    "start": "1285679",
    "end": "1292000"
  },
  {
    "text": "here so if we open up another terminal window and we can use curl again we're going to",
    "start": "1292000",
    "end": "1298480"
  },
  {
    "text": "go against the k sql db rest endpoint here and we pass it the same query",
    "start": "1298480",
    "end": "1304080"
  },
  {
    "text": "here is our sql select from the car part where name equals this it says well here is the current value",
    "start": "1304080",
    "end": "1310080"
  },
  {
    "text": "so there i'm using the rest api but in practice you'll be using that from within your applications from",
    "start": "1310080",
    "end": "1315120"
  },
  {
    "text": "within your java applications you go your python however and if you don't have a native",
    "start": "1315120",
    "end": "1320400"
  },
  {
    "text": "client for those languages you can just use the rest api because all languages support making rest calls",
    "start": "1320400",
    "end": "1326000"
  },
  {
    "text": "so you can access the state of materialized view which we've built in case equal db and k sql db is a distributed",
    "start": "1326000",
    "end": "1332720"
  },
  {
    "text": "scalable system it's built on top of kafka or rather it's built on top of kafka's streams which is built on top of",
    "start": "1332720",
    "end": "1338480"
  },
  {
    "text": "kafka so kafka streams is part of apache kafka k sql db is a like further abstraction",
    "start": "1338480",
    "end": "1344400"
  },
  {
    "text": "above it but in terms of scaling workloads and partitioning and all that kind of good stuff",
    "start": "1344400",
    "end": "1349600"
  },
  {
    "text": "we get that with case equal db the other type of query i showed you was a push query the better example i should",
    "start": "1349600",
    "end": "1356559"
  },
  {
    "text": "have shown you instead of trying to make it up as i went along which is the whole reason for having a cheat sheet for a demo",
    "start": "1356559",
    "end": "1361679"
  },
  {
    "text": "is this one here where we say i've got a series of inbound events let's just",
    "start": "1361679",
    "end": "1367360"
  },
  {
    "text": "look at the latest messages that come in and it's going to do this",
    "start": "1367360",
    "end": "1372480"
  },
  {
    "text": "so by saying latest we've now gone to the end of the topic and we'll only see new messages as they arrive",
    "start": "1372480",
    "end": "1378799"
  },
  {
    "text": "so now we're going to say for this particular car park here show me if it matches this car park name",
    "start": "1378799",
    "end": "1384720"
  },
  {
    "text": "and it's got more than zero empty spaces so we do that and now every 10 seconds when we get a dump of data",
    "start": "1384720",
    "end": "1391039"
  },
  {
    "text": "from the api it's going to say is it greater than zero if it is write it out to the screen",
    "start": "1391039",
    "end": "1396159"
  },
  {
    "text": "and so instead of writing it out to the screen we can actually make that call again from our clients or from the rest",
    "start": "1396159",
    "end": "1402320"
  },
  {
    "text": "api which looks like this again it's the same query so you always kind of like prototype these things",
    "start": "1402320",
    "end": "1408320"
  },
  {
    "text": "within the command line and then run them for real from within your applications so here's what it looks like running a",
    "start": "1408320",
    "end": "1415039"
  },
  {
    "text": "call against the rest endpoint for a push query here we're subscribing to a stream",
    "start": "1415039",
    "end": "1420640"
  },
  {
    "text": "of events we're saying based on this predicate return these fields to my application",
    "start": "1420640",
    "end": "1425679"
  },
  {
    "text": "and your application will have to expect to not receive a closed connection and just sit there and process those results as they come",
    "start": "1425679",
    "end": "1432000"
  },
  {
    "text": "in so here's our first one so it's got that information that there's 591 spaces available",
    "start": "1432000",
    "end": "1438240"
  },
  {
    "text": "in this particular car park at that particular point in time so these event driven notifications that",
    "start": "1438240",
    "end": "1443760"
  },
  {
    "text": "we can set up obviously car parks and available space is one example but orders and order thresholds",
    "start": "1443760",
    "end": "1449760"
  },
  {
    "text": "or um any number like error rates in an application or any kind of things in which you want to receive an alert",
    "start": "1449760",
    "end": "1456000"
  },
  {
    "text": "when something happens rather than have to write an application which pulls to see has this happened yet so it's a",
    "start": "1456000",
    "end": "1462080"
  },
  {
    "text": "really important uh pattern to be able to take advantage of",
    "start": "1462080",
    "end": "1467279"
  },
  {
    "text": "the other thing that we want to do which i kind of hinted at in my opinion about car parks and driving into",
    "start": "1467279",
    "end": "1473039"
  },
  {
    "text": "bradford is to actually use this data to analyze what happens in the car parks over time",
    "start": "1473039",
    "end": "1479440"
  },
  {
    "text": "so the boss that we've written has said like i would like to know which is my nearest car park or how many spaces are available or tell me when",
    "start": "1479440",
    "end": "1485760"
  },
  {
    "text": "there's space available but this stream of data getting from the api and we're capturing into kafka it's also really useful to be",
    "start": "1485760",
    "end": "1492640"
  },
  {
    "text": "able to take that and to be able to put it into a system for analysis so within k sql db we can make a call",
    "start": "1492640",
    "end": "1499919"
  },
  {
    "text": "out to kafka connect so kafka connect is part of apache kafka",
    "start": "1499919",
    "end": "1505039"
  },
  {
    "text": "again and it's the integration api it lets you use configuration to say stream data in from this point or stream",
    "start": "1505039",
    "end": "1512000"
  },
  {
    "text": "data out to that point there so i did a talk uh this morning and yesterday about kafka the ecosystem so go and check out the",
    "start": "1512000",
    "end": "1518240"
  },
  {
    "text": "recording of that if you want to know more about kafka connect and what we're going to do here is we're going to say create a sync connector i'm going to",
    "start": "1518240",
    "end": "1525120"
  },
  {
    "text": "sync data down to elasticsearch so take data from this topic here which is the one that we've prepared and we",
    "start": "1525120",
    "end": "1531039"
  },
  {
    "text": "said like create this structured object here and apply the schema and do all of that kind of stuff take that",
    "start": "1531039",
    "end": "1536400"
  },
  {
    "text": "topic and push it down to this elasticsearch endpoint so we create that connector and we say",
    "start": "1536400",
    "end": "1543200"
  },
  {
    "text": "show connectors and it says this connector here is running and then what we can do is we",
    "start": "1543200",
    "end": "1548400"
  },
  {
    "text": "can head over into elasticsearch and say okay here is a dashboard that i built earlier",
    "start": "1548400",
    "end": "1554559"
  },
  {
    "text": "and you can actually look at that data as it changes over time and because we did things like create a",
    "start": "1554559",
    "end": "1560480"
  },
  {
    "text": "struct within the data with the latitude and longitude elasticsearch recognizes that as a geo",
    "start": "1560480",
    "end": "1565840"
  },
  {
    "text": "point so we can plot that data onto our map and say well here is one set of data here is another set of",
    "start": "1565840",
    "end": "1571520"
  },
  {
    "text": "data we can filter we can uh drill into particular areas we can see how it varies",
    "start": "1571520",
    "end": "1576720"
  },
  {
    "text": "over time but what we've done here is that same data that came in from the api once we're using that for driving a bot",
    "start": "1576720",
    "end": "1584159"
  },
  {
    "text": "we're also using it for building analytics let me show you a bit of the code",
    "start": "1584159",
    "end": "1589360"
  },
  {
    "text": "briefly um and then we'll finish off with some slides can i talk through the different things that we've seen so let's cancel that for",
    "start": "1589360",
    "end": "1597360"
  },
  {
    "text": "now because we don't need it anymore and we can say open up the uh text editor",
    "start": "1597360",
    "end": "1603120"
  },
  {
    "text": "so this is looking at the go code now i'm not actually like a legitimate programmer i just kind of hack my way around these things i'm much",
    "start": "1603120",
    "end": "1609360"
  },
  {
    "text": "more like a sql database type person but over the summer i thought i'd kind of be quite good to learn something",
    "start": "1609360",
    "end": "1615200"
  },
  {
    "text": "and to be able to talk if not knowledgeably then at least like relatively i've had experience in so i set myself a task of learning go so",
    "start": "1615200",
    "end": "1622000"
  },
  {
    "text": "if you look at this code and say like oh that's gross then do let me know but be gentle so",
    "start": "1622000",
    "end": "1627600"
  },
  {
    "text": "what i've got here in this code is we use the telegram bots api library like it's",
    "start": "1627600",
    "end": "1632799"
  },
  {
    "text": "super useful to work with and let's zoom that a bit so we can see what's going on",
    "start": "1632799",
    "end": "1638000"
  },
  {
    "text": "and so using that you authorize the telegram you get like an api token i'm going to pass that",
    "start": "1638000",
    "end": "1643520"
  },
  {
    "text": "across here and then it says okay if you authorized on a particular account and then you connect to your bot and then your bot receives",
    "start": "1643520",
    "end": "1650000"
  },
  {
    "text": "all of these different updates so i'd like to subscribe to my updates and it creates a channel and go",
    "start": "1650000",
    "end": "1656240"
  },
  {
    "text": "like an updates channel and then what we do is we simply iterate over those updates as they",
    "start": "1656240",
    "end": "1661840"
  },
  {
    "text": "arrive and update so we have different types so we can say we've got a a command",
    "start": "1661840",
    "end": "1668240"
  },
  {
    "text": "that's our case statement there's our case statements so it can either be a command it could be a location and if it's not",
    "start": "1668240",
    "end": "1673919"
  },
  {
    "text": "that we assume that it's actually just a string that they've sent us and we want to process that as a car pack lookup so if it's car park lookup",
    "start": "1673919",
    "end": "1680880"
  },
  {
    "text": "we're going to say we're assuming this is a status request for a given car pack we call a routine here called check",
    "start": "1680880",
    "end": "1686720"
  },
  {
    "text": "spaces and the name of the car pack that they've sent us which comes from a message text here and",
    "start": "1686720",
    "end": "1692399"
  },
  {
    "text": "if we're doing that and if i'm in the shortcuts and i forgot my shortcuts go to",
    "start": "1692399",
    "end": "1697919"
  },
  {
    "text": "definition that's the one and that hopefully is going to show us the code itself and that's going to be",
    "start": "1697919",
    "end": "1705840"
  },
  {
    "text": "over here so check spaces and it says i'm going to run this query",
    "start": "1705840",
    "end": "1711679"
  },
  {
    "text": "against k sql db so whilst it's like go code in the uh uh",
    "start": "1711679",
    "end": "1716880"
  },
  {
    "text": "the main part of it we're actually using the k sql db uh clients library which says well i'll",
    "start": "1716880",
    "end": "1722640"
  },
  {
    "text": "take this particular string that you give me and i'll run it as a pull request against key sql db",
    "start": "1722640",
    "end": "1728159"
  },
  {
    "text": "and then we get the outputs back we put our different values into the different variables and we can return that back to the",
    "start": "1728159",
    "end": "1733760"
  },
  {
    "text": "telegram client which will then send it back to the user",
    "start": "1733760",
    "end": "1739120"
  },
  {
    "text": "uh with this it'll send the response and it'll format it using city emojis and then it sends it back using the api",
    "start": "1739120",
    "end": "1744640"
  },
  {
    "text": "in the new message call so that's the kind of thing it does um for the location",
    "start": "1744640",
    "end": "1749679"
  },
  {
    "text": "for the um if it's a command like the alert the other one is done using a push query so if i show you that if they say",
    "start": "1749679",
    "end": "1757120"
  },
  {
    "text": "we want to create an alert this is okay we're going to take the threshold which is the arguments that are passed in so like",
    "start": "1757120",
    "end": "1762960"
  },
  {
    "text": "slash alert 500 so our threshold is 500 and we take that and we've got our alert",
    "start": "1762960",
    "end": "1768240"
  },
  {
    "text": "spaces because it's a push query it blocks so we're going to set this as a go routine",
    "start": "1768240",
    "end": "1773760"
  },
  {
    "text": "that runs in a separate thread and as when we receive results back from that push query we handle those and push them out to the",
    "start": "1773760",
    "end": "1780559"
  },
  {
    "text": "user so let's have a little talk",
    "start": "1780559",
    "end": "1786559"
  },
  {
    "text": "about what we actually built",
    "start": "1786559",
    "end": "1789679"
  },
  {
    "text": "we took data coming in from an api so in this case from northern data hub from the bradford council they publish an api",
    "start": "1792000",
    "end": "1797840"
  },
  {
    "text": "you can pull that and get data into a topic we use the data in that topic we enriched it we transformed it we",
    "start": "1797840",
    "end": "1804799"
  },
  {
    "text": "aggregated it we used it to serve up user-facing applications with telegrams our front-end",
    "start": "1804799",
    "end": "1810399"
  },
  {
    "text": "to do state for look-ups to do event-driven notifications we also took that same data and we",
    "start": "1810399",
    "end": "1817039"
  },
  {
    "text": "pushed it down to an analytics platform in this case using elasticsearch and cabana so some of the key things here that",
    "start": "1817039",
    "end": "1823600"
  },
  {
    "start": "1823000",
    "end": "2145000"
  },
  {
    "text": "might be useful as like patterns or ideas to take away into the kind of things that you might encounter",
    "start": "1823600",
    "end": "1828640"
  },
  {
    "text": "and things that you build in the future is this idea of event driven alerts is saying as events happen we can",
    "start": "1828640",
    "end": "1835360"
  },
  {
    "text": "actually build predicates against them you can either use the kafka consumer api directly or you can use k sql db to",
    "start": "1835360",
    "end": "1842000"
  },
  {
    "text": "manipulate the data or write a push query against it it's kind of like similar ideas i've",
    "start": "1842000",
    "end": "1847440"
  },
  {
    "text": "been using the api directly and i showed you using curl to pipe into kafka cap which is a little",
    "start": "1847440",
    "end": "1852480"
  },
  {
    "text": "bit funky but it works surprisingly well much more likely is you'll have your data coming into a",
    "start": "1852480",
    "end": "1857679"
  },
  {
    "text": "topic perhaps from a producer api that someone else is pushing it into or using kafka connect because with",
    "start": "1857679",
    "end": "1863840"
  },
  {
    "text": "kafka connect you can stream data in from any number of systems from databases",
    "start": "1863840",
    "end": "1869519"
  },
  {
    "text": "from message queues from rest endpoints from flat files from wherever you've got data and thus events",
    "start": "1869519",
    "end": "1875600"
  },
  {
    "text": "you can capture those events like any update or delete or insert made in a database is an event and you can capture that and",
    "start": "1875600",
    "end": "1881600"
  },
  {
    "text": "stream it into kafka and from there you can do event driven alerts out to your users",
    "start": "1881600",
    "end": "1886799"
  },
  {
    "text": "those alerts can be based on the particular events themselves they can also be based on aggregates",
    "start": "1886799",
    "end": "1893120"
  },
  {
    "text": "excuse me so you could say in a 15 minute window how many orders have we processed and if",
    "start": "1893120",
    "end": "1898880"
  },
  {
    "text": "that falls below what we would expect we could send a notification because that falling below is also in",
    "start": "1898880",
    "end": "1904960"
  },
  {
    "text": "events but you can build those stateful aggregations also within k sql db we can do key value",
    "start": "1904960",
    "end": "1911519"
  },
  {
    "text": "lookups using the materialized view idea that we have within k sql db so instead of saying we have a stream of",
    "start": "1911519",
    "end": "1917760"
  },
  {
    "text": "events coming in and more and more people nowadays are comfortable with this idea of a stream of events",
    "start": "1917760",
    "end": "1922799"
  },
  {
    "text": "they say okay we've got stream events we need to go and put it into another data store so we can then query it from our",
    "start": "1922799",
    "end": "1927919"
  },
  {
    "text": "application what i'm saying is well you could do that and that's fine and that's hard but also bear in mind you can take that",
    "start": "1927919",
    "end": "1934960"
  },
  {
    "text": "stream of defense and you can query the states within it directly you don't necessarily need",
    "start": "1934960",
    "end": "1940880"
  },
  {
    "text": "that separate data store which kind of upsets some people but it's true you can actually query that state directly so we say",
    "start": "1940880",
    "end": "1947760"
  },
  {
    "text": "we're going to build the materialized view we're going to run some ddl a sql statement which says create this table and i'm talking k sql",
    "start": "1947760",
    "end": "1955279"
  },
  {
    "text": "db and sql if you would like to use kafka streams which is what k sql db is built on if you'd like to use kafka streams which",
    "start": "1955279",
    "end": "1961519"
  },
  {
    "text": "is part of part of apache kafka and java which is why i'm not showing you because i don't call java you can do that kind of thing",
    "start": "1961519",
    "end": "1967919"
  },
  {
    "text": "within your own java application and build that state store and use interactive query to access it",
    "start": "1967919",
    "end": "1973519"
  },
  {
    "text": "so however you do it you can then say well my user would like to know something about the current state that state is",
    "start": "1973519",
    "end": "1980799"
  },
  {
    "text": "updated within that materialized view based on events as they arrive and my application can query that state",
    "start": "1980799",
    "end": "1987440"
  },
  {
    "text": "either using poll queries and kc call vb or interactive query and kafka streams api",
    "start": "1987440",
    "end": "1992799"
  },
  {
    "text": "we get the result back to our application and we send it back to the user",
    "start": "1992799",
    "end": "1998799"
  },
  {
    "text": "one of the really important things whether you're building applications whether you're building pipelines is",
    "start": "1998880",
    "end": "2005440"
  },
  {
    "text": "schemers and it's not a particularly cool thing to be talking about it's kind of boring it's like oh eat your vegetables like",
    "start": "2005440",
    "end": "2011360"
  },
  {
    "text": "you know you need to but it's not kind of it doesn't get you excited but it's the kind of thing which actually helps you lay the really solid",
    "start": "2011360",
    "end": "2017679"
  },
  {
    "text": "foundations for a successful project because if you're working with data that looks like this you're kind of like",
    "start": "2017679",
    "end": "2023360"
  },
  {
    "text": "starting off on the back foot you're having to like figure out what are these different fields you're having to say to the people who",
    "start": "2023360",
    "end": "2028640"
  },
  {
    "text": "wrote that data what are these different things and like what's the time zone and is it kind of face is it fascinating",
    "start": "2028640",
    "end": "2034080"
  },
  {
    "text": "i'm assuming that that's the number of empty spaces and you just don't know these things and you actually start to couple your systems",
    "start": "2034080",
    "end": "2039519"
  },
  {
    "text": "back together which you probably don't want to do and so it's a bad idea just to use this the schema",
    "start": "2039519",
    "end": "2045840"
  },
  {
    "text": "but a lot of time we have schemas data whether can like by design or not exists what we can do is we can take",
    "start": "2045840",
    "end": "2052960"
  },
  {
    "text": "that scheme on us data we can apply the schema to it once and write that back onto a kafka topic",
    "start": "2052960",
    "end": "2059358"
  },
  {
    "text": "and now multiple people can take advantage of that data with the schema so you can say here's the schema we're",
    "start": "2059359",
    "end": "2065200"
  },
  {
    "text": "going to apply that and then we write it back onto a topic",
    "start": "2065200",
    "end": "2070158"
  },
  {
    "text": "the last thing i showed you was this idea of integration and saying as data arrives in kafka yes",
    "start": "2072960",
    "end": "2078560"
  },
  {
    "text": "we build applications against it yes we do cool things like that yes we can also take that same data and",
    "start": "2078560",
    "end": "2084240"
  },
  {
    "text": "push it down to another system to drive our analytics the key thing that we're doing here",
    "start": "2084240",
    "end": "2089440"
  },
  {
    "text": "is that we're keeping things nice and loosely coupled if i want to change and like turns out that code that i",
    "start": "2089440",
    "end": "2095118"
  },
  {
    "text": "wrote and go was pretty awful as i suspected someone else wants to replace that piece of the puzzle with something that works",
    "start": "2095119",
    "end": "2100800"
  },
  {
    "text": "better they can without impacting this piece at all if someone says well elasticsearch is",
    "start": "2100800",
    "end": "2107119"
  },
  {
    "text": "great but for whatever reasons we're going to use snowflake or s3 or oracle or whatever you can",
    "start": "2107119",
    "end": "2112560"
  },
  {
    "text": "without impacting the other piece so you have the data in kafka and multiple",
    "start": "2112560",
    "end": "2117839"
  },
  {
    "text": "applications can use it you can do integration using kafka connect to push it out to other systems you can",
    "start": "2117839",
    "end": "2123359"
  },
  {
    "text": "use kafka connect to in ingest data from systems upstream as well like i mentioned databases and",
    "start": "2123359",
    "end": "2129119"
  },
  {
    "text": "message queues and so on so pushing it from kafka down to other places building these end-to-end integrations",
    "start": "2129119",
    "end": "2136000"
  },
  {
    "text": "it's a really useful thing you can do using kafka connects which part of apache kafka",
    "start": "2136000",
    "end": "2141200"
  },
  {
    "text": "so as we saw i built a nice little dashboard so there are some key reasons why we've done it like this part",
    "start": "2141200",
    "end": "2147200"
  },
  {
    "start": "2145000",
    "end": "2211000"
  },
  {
    "text": "of it is like it was kind of quite a fun project right poking around on the internet and there's like various different open data",
    "start": "2147200",
    "end": "2152320"
  },
  {
    "text": "sources and there's one about car parks near to where i live and you can't just start thinking and tinkering around with it and",
    "start": "2152320",
    "end": "2157760"
  },
  {
    "text": "i wonder what you can actually build with that and it makes quite a fun example to show but the key reason for actually building",
    "start": "2157760",
    "end": "2164160"
  },
  {
    "text": "it like this and why it's quite a good example of the kind of things that you can do is that we're working with events or are",
    "start": "2164160",
    "end": "2170800"
  },
  {
    "text": "the streams of events and events model the world around us a lot of the time we kind of take",
    "start": "2170800",
    "end": "2176720"
  },
  {
    "text": "events and just like roll them up into state we then go and store into our databases and no sql stores but that data usually started life as an",
    "start": "2176720",
    "end": "2184079"
  },
  {
    "text": "event so building systems on the basis of events even if we want to roll it up",
    "start": "2184079",
    "end": "2189359"
  },
  {
    "text": "into states like we did with that materialized view we still have those events available to build more loosely coupled systems",
    "start": "2189359",
    "end": "2195839"
  },
  {
    "text": "and to also drive those integrations we want to be able to react to things as they happen we want to build up",
    "start": "2195839",
    "end": "2201440"
  },
  {
    "text": "that state from that stream of events we also want to have that latest data available to us for our analytics so",
    "start": "2201440",
    "end": "2209119"
  },
  {
    "text": "a couple of links to share with you hopefully that's been interesting i'll be hanging out on slack uh if you have any more questions after",
    "start": "2209119",
    "end": "2214800"
  },
  {
    "start": "2211000",
    "end": "2267000"
  },
  {
    "text": "this but go and try it out for yourself scan the code or go to the url it's just docker compose up",
    "start": "2214800",
    "end": "2220160"
  },
  {
    "text": "like i said the api is an open one so you can actually try seeing about like next time you visit bradford where should you go and park",
    "start": "2220160",
    "end": "2226640"
  },
  {
    "text": "you can use confluent cloud that's what i've built the demo on here it's a managed kafka and key sql db and kafka connects",
    "start": "2226640",
    "end": "2232240"
  },
  {
    "text": "that's available and to go and try out more kafka tutorials and videos and so on",
    "start": "2232240",
    "end": "2237599"
  },
  {
    "text": "head to developer.confluence.io thank you very much for coming i hope",
    "start": "2237599",
    "end": "2243359"
  },
  {
    "text": "you've enjoyed it's going up here i think it's been brilliant um enjoy the remaining sessions of the day i'm at i'm off on twitter you can follow",
    "start": "2243359",
    "end": "2250320"
  },
  {
    "text": "me there check out our youtube channel uh as well and thank you very much",
    "start": "2250320",
    "end": "2257839"
  }
]