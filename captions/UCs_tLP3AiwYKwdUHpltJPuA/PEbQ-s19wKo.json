[
  {
    "start": "0",
    "end": "291000"
  },
  {
    "text": "this talk uh will not be about like explaining what the actor model",
    "start": "13080",
    "end": "19400"
  },
  {
    "text": "is um but uh even I I think even if you're not familiar with the actor model",
    "start": "19400",
    "end": "25920"
  },
  {
    "text": "um then um it will probably give you some insights and hopefully motivate you",
    "start": "25920",
    "end": "31920"
  },
  {
    "text": "to investigate what it is so who is familiar what actor model",
    "start": "31920",
    "end": "38800"
  },
  {
    "text": "is about half the people who tried AKA on jvm or akka.net or Microsoft",
    "start": "38800",
    "end": "46559"
  },
  {
    "text": "orans yeah few hands uh who is a big fan of O",
    "start": "46559",
    "end": "54399"
  },
  {
    "text": "objectoriented programming yeah more people who than who people who try right AR so um yeah",
    "start": "54399",
    "end": "62480"
  },
  {
    "text": "there there will be some op rent I I must say but uh my GitHub nickname is",
    "start": "62480",
    "end": "69479"
  },
  {
    "text": "object which actually uh says something about my passion in the past at least",
    "start": "69479",
    "end": "75880"
  },
  {
    "text": "for op for doing objectoriented programming so uh there are some sort of",
    "start": "75880",
    "end": "82799"
  },
  {
    "text": "mindset changes uh for me which uh act the actor model brought and I will try",
    "start": "82799",
    "end": "88280"
  },
  {
    "text": "to explain it to you and maybe to encourage you to to try it so my name is",
    "start": "88280",
    "end": "94240"
  },
  {
    "text": "uh vagif I'm um consultant at norian company miles I last years I've been",
    "start": "94240",
    "end": "100479"
  },
  {
    "text": "working mostly with FP and functional programming uh but what I'm going to",
    "start": "100479",
    "end": "105520"
  },
  {
    "text": "present it has nothing to do with functional programming uh or like C or Java it's Mo mostly about uh uh the",
    "start": "105520",
    "end": "114000"
  },
  {
    "text": "model itself so uh no matter what Lang language you choose you can use uh Z",
    "start": "114000",
    "end": "119560"
  },
  {
    "text": "Model so uh you can ask questions um I will try to um answer them in the end uh also",
    "start": "119560",
    "end": "127360"
  },
  {
    "text": "you can reach me outside uh if you don't have time uh please come come to me",
    "start": "127360",
    "end": "133720"
  },
  {
    "text": "after the talk or find me on Twitter or email and uh so our product I'm working",
    "start": "133720",
    "end": "142200"
  },
  {
    "text": "uh in a small group doing development for uh Norwegian Broadcasting",
    "start": "142200",
    "end": "147519"
  },
  {
    "text": "Corporation it's a Norwegian analog of bb DC so what we do we uh we make it",
    "start": "147519",
    "end": "154200"
  },
  {
    "text": "available for for the public uh media",
    "start": "154200",
    "end": "159400"
  },
  {
    "text": "files uh it can be TV programs radio programs news Clips I mean everything",
    "start": "159400",
    "end": "165319"
  },
  {
    "text": "which uh today is multimedia so this is uh our product uh it's called media",
    "start": "165319",
    "end": "171120"
  },
  {
    "text": "distribution engine so our architecture at large is uh we get some commands they",
    "start": "171120",
    "end": "179400"
  },
  {
    "text": "coming through some cues it can be we use very much rabbitmq uh which actually",
    "start": "179400",
    "end": "185239"
  },
  {
    "text": "also interally implemented using ACT model in a l um uh but for some cues",
    "start": "185239",
    "end": "191080"
  },
  {
    "text": "it's aure service bars it doesn't matter actually what what queuing system you",
    "start": "191080",
    "end": "196120"
  },
  {
    "text": "use uh then we uh enrich our data with",
    "start": "196120",
    "end": "201599"
  },
  {
    "text": "uh some uh media set metadata and uh then we fetch files from media archives",
    "start": "201599",
    "end": "207159"
  },
  {
    "text": "and we send them so they will become available from content delivery networks uh CDN and of course uh uh thinking",
    "start": "207159",
    "end": "216480"
  },
  {
    "text": "about that this is Norwegian analog of BBC it's a quite hard requirements for",
    "start": "216480",
    "end": "222720"
  },
  {
    "text": "scalability for availability so it's a really Mission critical uh system so it",
    "start": "222720",
    "end": "229040"
  },
  {
    "text": "uh and of course fail fail may happen but that's also one of the reasons why",
    "start": "229040",
    "end": "234879"
  },
  {
    "text": "we chose actor model with act we have resilience um uh so when actor goes",
    "start": "234879",
    "end": "241280"
  },
  {
    "text": "wrong uh there is a chance for to retry something so actors are",
    "start": "241280",
    "end": "248040"
  },
  {
    "text": "supervised uh so our architecture at large is uh uh what's uh like in the",
    "start": "248040",
    "end": "254519"
  },
  {
    "text": "center it's it's a AKA uh cluster we have command adapters uh we get we get",
    "start": "254519",
    "end": "260680"
  },
  {
    "text": "uh messages from durable qes we uh process these messages we uh transform",
    "start": "260680",
    "end": "268720"
  },
  {
    "text": "them into uh commands uh to uh file managers uh",
    "start": "268720",
    "end": "274960"
  },
  {
    "text": "and then we we go to command dispatcher and then later stage it's transfer protocol which uh uh uploads uh files to",
    "start": "274960",
    "end": "284520"
  },
  {
    "text": "so-called Origins which then uh send them to content delivery networks so why",
    "start": "284520",
    "end": "291000"
  },
  {
    "start": "291000",
    "end": "519000"
  },
  {
    "text": "did we choose akar uh and the ACT model uh the most important reason that",
    "start": "291000",
    "end": "298080"
  },
  {
    "text": "we believe that uh actor model is it gives you chance to proper model uh the",
    "start": "298080",
    "end": "304160"
  },
  {
    "text": "real world processes and interactions and I think that's the M the most important lessons which we have learned",
    "start": "304160",
    "end": "309639"
  },
  {
    "text": "um I will try to focus on it uh it has very simp uh simple threading model",
    "start": "309639",
    "end": "315039"
  },
  {
    "text": "basically you don't need to uh care about threats uh if you search in our code base you will not find an in uh an",
    "start": "315039",
    "end": "323919"
  },
  {
    "text": "single instance of word thread or lock and anyone who is working or who was",
    "start": "323919",
    "end": "330360"
  },
  {
    "text": "working with uh concurrency problems with uh thread sharing uh uh understand",
    "start": "330360",
    "end": "338080"
  },
  {
    "text": "that it's actually a big ad Advantage if uh uh you can abstract your model from",
    "start": "338080",
    "end": "345520"
  },
  {
    "text": "threading issues because I mean uh multi- threading is hard it's really hard to get it uh to get it right so uh",
    "start": "345520",
    "end": "353840"
  },
  {
    "text": "actors are great as finite State machines so each actor has its own State machine and just gets message just",
    "start": "353840",
    "end": "359840"
  },
  {
    "text": "sequentially process them uh acttiv are reactive so they are very cheap",
    "start": "359840",
    "end": "365400"
  },
  {
    "text": "to uh create an actor an empty actor it just takes few hundreds of bytes and",
    "start": "365400",
    "end": "372520"
  },
  {
    "text": "then while it's not processing message it's just sleeping it's it's reactive software so you can use a uh this laptop",
    "start": "372520",
    "end": "381759"
  },
  {
    "text": "which I'm I'm using now for presentation uh to run a actra system that will have",
    "start": "381759",
    "end": "387759"
  },
  {
    "text": "millions of actors uh for example for the for the whole Norway about 5 million population you",
    "start": "387759",
    "end": "394240"
  },
  {
    "text": "can actually uh process a lot for for",
    "start": "394240",
    "end": "399720"
  },
  {
    "text": "the whole population uh on on a a small machine as long as uh there are uh",
    "start": "399720",
    "end": "407080"
  },
  {
    "text": "limited sort of number of concurrent messages of course if you if you have billions of messages if it's if it's a",
    "start": "407080",
    "end": "413319"
  },
  {
    "text": "uh online trading system then of course you you need you need uh great Hardware",
    "start": "413319",
    "end": "418840"
  },
  {
    "text": "but as uh uh since um Acro system is reactive then you you don't really need",
    "start": "418840",
    "end": "425560"
  },
  {
    "text": "to preallocate threads to preallocate memory uh for them so you can you can just allocate them at uh uh as as you go",
    "start": "425560",
    "end": "432879"
  },
  {
    "text": "and and the actim model framework takes care of it and of course resilience which I already mentioned that if",
    "start": "432879",
    "end": "439360"
  },
  {
    "text": "something happens if exception happens then uh the supervisor the the parent",
    "start": "439360",
    "end": "444400"
  },
  {
    "text": "actor can can intervene and uh uh do decision for you what what to do so it",
    "start": "444400",
    "end": "450479"
  },
  {
    "text": "actually helps to uh have cleaner code you don't need to have this TR catch a",
    "start": "450479",
    "end": "455639"
  },
  {
    "text": "lot in uh in a lot of different places again unfortunately I can't say very much uh more about this because there is",
    "start": "455639",
    "end": "463120"
  },
  {
    "text": "another talk or maybe another course about that model here it's it's mostly about",
    "start": "463120",
    "end": "468360"
  },
  {
    "text": "lessons uh why AA cluster of course you can use uh uh that model on on in a",
    "start": "468360",
    "end": "475440"
  },
  {
    "text": "single process on a single machine but of course uh for for any like serious",
    "start": "475440",
    "end": "481440"
  },
  {
    "text": "large system you need to run in the cluster both for scalability also for uh",
    "start": "481440",
    "end": "488639"
  },
  {
    "text": "uh to implement failover uh so so you have uh redundant uh uh system you have",
    "start": "488639",
    "end": "495800"
  },
  {
    "text": "you have durable system and uh uh in case your your node goes down then uh uh",
    "start": "495800",
    "end": "501919"
  },
  {
    "text": "the system automatically will rebalance your nodes and will continue operating also actors they have referential",
    "start": "501919",
    "end": "508440"
  },
  {
    "text": "transparency so the actor itself doesn't know that it's running in a cluster it's also very good Advantage so you don't",
    "start": "508440",
    "end": "514240"
  },
  {
    "text": "really program individual actor as I'm a member of the cluster so the very uh important lesson",
    "start": "514240",
    "end": "521880"
  },
  {
    "start": "519000",
    "end": "939000"
  },
  {
    "text": "the most important lesson uh which uh I'm probably will be using like most",
    "start": "521880",
    "end": "527000"
  },
  {
    "text": "more time than I will use on uh uh some other lessons uh don't use op to model",
    "start": "527000",
    "end": "533320"
  },
  {
    "text": "interactions and uh it took time for me to really understand it because I I came",
    "start": "533320",
    "end": "540240"
  },
  {
    "text": "to the active model with my op background and then I I started uh",
    "start": "540240",
    "end": "546079"
  },
  {
    "text": "programming actors thinking about them as a uh like managers Dispatchers in in",
    "start": "546079",
    "end": "552519"
  },
  {
    "text": "a sense like we do using them in op and I think uh that was wrong and uh that",
    "start": "552519",
    "end": "559000"
  },
  {
    "text": "really gave me heavier uh model less readable code and",
    "start": "559000",
    "end": "564560"
  },
  {
    "text": "uh actually less reliable system so uh",
    "start": "564560",
    "end": "569680"
  },
  {
    "text": "Alan K who uh invented the term who coined the term op uh said that he never had C++ in mind",
    "start": "569680",
    "end": "579079"
  },
  {
    "text": "so this is an irony about like behind op term that when we think op uh What uh",
    "start": "579079",
    "end": "586600"
  },
  {
    "text": "comes to our uh uh Minds is said okay op this is C++ this is C Sharp this is Java",
    "start": "586600",
    "end": "594279"
  },
  {
    "text": "but uh in fact it was not when op uh was uh thought through by U",
    "start": "594279",
    "end": "603360"
  },
  {
    "text": "creator of the term Alan K and uh what Alan K uh was saying about objects",
    "start": "603360",
    "end": "611800"
  },
  {
    "text": "actually is essential for the active model so here we think about objects as",
    "start": "611800",
    "end": "617160"
  },
  {
    "text": "biological cells and uh individual computers on a network only able uh to",
    "start": "617160",
    "end": "622880"
  },
  {
    "text": "communicate with messages this is exactly what actors do also the actor",
    "start": "622880",
    "end": "627920"
  },
  {
    "text": "model U um it's quite popular now but uh the original principles were formulated",
    "start": "627920",
    "end": "634000"
  },
  {
    "text": "uh back around 1973 and uh they based them very much on",
    "start": "634000",
    "end": "640680"
  },
  {
    "text": "Real World um modeling so they were trying to follow uh uh to model uh make",
    "start": "640680",
    "end": "649120"
  },
  {
    "text": "it easy to model uh physical processes so uh op for to Alan it meant",
    "start": "649120",
    "end": "655480"
  },
  {
    "text": "only messaging so uh uh and again this is exactly what uh um actors do you you",
    "start": "655480",
    "end": "662800"
  },
  {
    "text": "don't call message on an actor just send a message and actor itself decides what it does with its message so",
    "start": "662800",
    "end": "672040"
  },
  {
    "text": "uh uh when I was uh uh learning op and",
    "start": "672040",
    "end": "677079"
  },
  {
    "text": "then I like probably most of you who went through op path uh in the University or when uh when we were",
    "start": "677079",
    "end": "685240"
  },
  {
    "text": "reading about op ourself uh about languages like C++ my first language was",
    "start": "685240",
    "end": "690959"
  },
  {
    "text": "first op language was C++ and then uh uh at that time I didn't uh really think",
    "start": "690959",
    "end": "697399"
  },
  {
    "text": "what what what was wrong with such representation of the dog okay we have a dog which inherits from mamals oh it's",
    "start": "697399",
    "end": "704320"
  },
  {
    "text": "great it's inheritance uh which I no longer uh value as much as I did when I",
    "start": "704320",
    "end": "710680"
  },
  {
    "text": "was learning o op uh but uh the most essential uh part of op is that you",
    "start": "710680",
    "end": "717079"
  },
  {
    "text": "combine your data with like uh operations on them you have operation bark and then you have a dog you create",
    "start": "717079",
    "end": "723360"
  },
  {
    "text": "object of dog and then you call my dog do bark and then you pass like it you",
    "start": "723360",
    "end": "728920"
  },
  {
    "text": "want to bark in English language for example um uh and then uh uh now when I",
    "start": "728920",
    "end": "735800"
  },
  {
    "text": "read this code and then actually ask myself I mean uh why didn't I why was I",
    "start": "735800",
    "end": "741959"
  },
  {
    "text": "so uh impressed with it and why didn't I understand that there is something wrong",
    "start": "741959",
    "end": "747600"
  },
  {
    "text": "with uh with that so uh immediately when you enter multiple threading when you",
    "start": "747600",
    "end": "753120"
  },
  {
    "text": "enter uh parall processing then there are some questions which hard to uh answer okay so you created a dog and",
    "start": "753120",
    "end": "761120"
  },
  {
    "text": "then you ask it bark and then uh somebody in a different threat get pointed to that dog and then uh calls at",
    "start": "761120",
    "end": "769440"
  },
  {
    "text": "the same time bark method and uh ask to bark on a different language or maybe to",
    "start": "769440",
    "end": "776120"
  },
  {
    "text": "ask to stop barking uh so what will happen and then in many cases such",
    "start": "776120",
    "end": "782160"
  },
  {
    "text": "objects they will uh crash or they will uh corrupt uh data and this is why uh",
    "start": "782160",
    "end": "789279"
  },
  {
    "text": "when we talk about classes in C uh um",
    "start": "789279",
    "end": "794800"
  },
  {
    "text": "C++ and Java in the computation uh often it says whether this class is thread",
    "start": "794800",
    "end": "800880"
  },
  {
    "text": "safe or not uh and you have in net you have dictionary which is not threat safe you have concurrent dictionary which is",
    "start": "800880",
    "end": "807720"
  },
  {
    "text": "uh uh uh which can uh handle concurrency so if you if you think about dog as a",
    "start": "807720",
    "end": "815680"
  },
  {
    "text": "real object uh then uh actually what op gives",
    "start": "815680",
    "end": "820720"
  },
  {
    "text": "us is is a dead dog basically or puppet dog because uh you know dogs are not",
    "start": "820720",
    "end": "828680"
  },
  {
    "text": "waiting for us to tell them to bark who has a dog who has",
    "start": "828680",
    "end": "834120"
  },
  {
    "text": "dogs yeah I have a dog and I I can tell you that no way I can control barking of",
    "start": "834120",
    "end": "840839"
  },
  {
    "text": "my dog uh I can just send a message to my dog bark or not bark but it's it's",
    "start": "840839",
    "end": "845959"
  },
  {
    "text": "his own uh justice what how Mo mostly people just ignore my messages yeah so",
    "start": "845959",
    "end": "852320"
  },
  {
    "text": "uh uh what op actually models U is uh is this puppets uh that are controlled from",
    "start": "852320",
    "end": "859720"
  },
  {
    "text": "outside without telling us anything how this outside control is implemented and",
    "start": "859720",
    "end": "866920"
  },
  {
    "text": "this is why uh uh the especially this Enterprise level uh software written in",
    "start": "866920",
    "end": "873839"
  },
  {
    "text": "Java and C is full of managers and dispatchers because uh even though there",
    "start": "873839",
    "end": "880399"
  },
  {
    "text": "is a bark method implemented on the object of the class of the dog dogs are",
    "start": "880399",
    "end": "887800"
  },
  {
    "text": "not entitled to decide when uh they they are about to uh to bark it's some dog",
    "start": "887800",
    "end": "895279"
  },
  {
    "text": "dog manager which can call all this method so so immediately we make this uh over",
    "start": "895279",
    "end": "903560"
  },
  {
    "text": "complicated I would say over complicated because wouldn't be uh closer to the real world if you",
    "start": "903560",
    "end": "912240"
  },
  {
    "text": "have a dog represented by an actor uh which receives a message which",
    "start": "912240",
    "end": "919680"
  },
  {
    "text": "can be please bark uh and decides what to do with that message so this is",
    "start": "919680",
    "end": "925320"
  },
  {
    "text": "exactly what uh was thought about op by Alan K uh many years ago and this is exactly",
    "start": "925320",
    "end": "931160"
  },
  {
    "text": "what the actor model does so uh so that's a sort of first important lesson",
    "start": "931160",
    "end": "937600"
  },
  {
    "text": "that uh took actually quite some time for me to grasp and to start changing",
    "start": "937600",
    "end": "942720"
  },
  {
    "start": "939000",
    "end": "1014000"
  },
  {
    "text": "the my code which I thought I I knew how the AR model works but it still took",
    "start": "942720",
    "end": "947759"
  },
  {
    "text": "time before I uh I got this code right and so please",
    "start": "947759",
    "end": "953959"
  },
  {
    "text": "even if you don't do the model question the roles of managers and dispatch es uh",
    "start": "953959",
    "end": "959480"
  },
  {
    "text": "in your system so and especially if you started doing uh the actor model so",
    "start": "959480",
    "end": "965680"
  },
  {
    "text": "every resource is a candidate for being an actor and uh uh typical mistake and",
    "start": "965680",
    "end": "971160"
  },
  {
    "text": "it was my mistake at least uh when you start using the actor model then we try",
    "start": "971160",
    "end": "976199"
  },
  {
    "text": "to uh put actors to um uh so-called aggregate Roots okay customer is an",
    "start": "976199",
    "end": "983720"
  },
  {
    "text": "actor uh user an actor shopping cart probably an actor but we deny uh actors",
    "start": "983720",
    "end": "991000"
  },
  {
    "text": "for things like files for example uh well file is not is not an actor uh",
    "start": "991000",
    "end": "998839"
  },
  {
    "text": "probably we need some file manager which is an actor which will manage some files",
    "start": "998839",
    "end": "1005120"
  },
  {
    "text": "and actually and anything with has some physical representation is a good",
    "start": "1005120",
    "end": "1010440"
  },
  {
    "text": "candate for actor and I will try to explain it actually on",
    "start": "1010440",
    "end": "1015560"
  },
  {
    "start": "1014000",
    "end": "1182000"
  },
  {
    "text": "uh uh uh files uh like how we can eliminate a file disp dispatcher so this",
    "start": "1015560",
    "end": "1022120"
  },
  {
    "text": "is uh was part uh which went uh through in our project so uh we we upload files",
    "start": "1022120",
    "end": "1032760"
  },
  {
    "text": "so every file of course need to be managed by uh same work same same thread",
    "start": "1032760",
    "end": "1039880"
  },
  {
    "text": "you can say so if uh uh uh if we have f file ABC and we uploading to the uh",
    "start": "1039880",
    "end": "1047360"
  },
  {
    "text": "origin then uh if there is a retry uh if there's a new version of the file if we",
    "start": "1047360",
    "end": "1052559"
  },
  {
    "text": "want this to go through the like through the same worker uh it's like uh uh managing bank account like you don't",
    "start": "1052559",
    "end": "1059600"
  },
  {
    "text": "want uh concurrently do updates to the same bank account you you want some sort of uh responsible for for this entity so",
    "start": "1059600",
    "end": "1069120"
  },
  {
    "text": "uh in the first uh version of our system we had file dispatcher which uh and we use cons consistent hashing to uh bring",
    "start": "1069120",
    "end": "1077799"
  },
  {
    "text": "files to file processors okay by uh evaluating hash based on file name or",
    "start": "1077799",
    "end": "1083320"
  },
  {
    "text": "file pass we can bring it to uh worker which is responsible for that file and",
    "start": "1083320",
    "end": "1089679"
  },
  {
    "text": "then uh so we have uh actors and they have the rooting strategies and",
    "start": "1089679",
    "end": "1094919"
  },
  {
    "text": "consistent hashing one of them uh some others is around Robin broadcast random T and so on so consistent hashing and we",
    "start": "1094919",
    "end": "1102559"
  },
  {
    "text": "thought that no we can't uh uh work without consistent caching because uh this is how we ensure that uh the uh",
    "start": "1102559",
    "end": "1111679"
  },
  {
    "text": "file is processed by that specific uh worker so there is no conflict the same file is not processed by multiple actors",
    "start": "1111679",
    "end": "1120480"
  },
  {
    "text": "uh so how this can be eliminated uh well",
    "start": "1120480",
    "end": "1125720"
  },
  {
    "text": "uh just assign an actor to uh to a file and those who are familiar with language",
    "start": "1125720",
    "end": "1131559"
  },
  {
    "text": "like erang you know this is how uh By Nature Works in in in ourang so uh uh",
    "start": "1131559",
    "end": "1139159"
  },
  {
    "text": "and it solves all your problems you don't uh need to think about consistent has okay I have a file okay I will",
    "start": "1139159",
    "end": "1146280"
  },
  {
    "text": "create an actor which is responsible for that file so all operations on that file",
    "start": "1146280",
    "end": "1152440"
  },
  {
    "text": "will be sent to that actor and actors are single threaded so there is no concurrency problems everything goes",
    "start": "1152440",
    "end": "1158919"
  },
  {
    "text": "sequentially you have this message ordering so uh uh so you uh immediately",
    "start": "1158919",
    "end": "1165000"
  },
  {
    "text": "simplify this architecture so uh that's uh",
    "start": "1165000",
    "end": "1170400"
  },
  {
    "text": "important uh maybe it looks like this detail is not very important but as a",
    "start": "1170400",
    "end": "1176159"
  },
  {
    "text": "mindset it's important change of mindset anything any resource is a potential",
    "start": "1176159",
    "end": "1182080"
  },
  {
    "start": "1182000",
    "end": "1389000"
  },
  {
    "text": "actor that bring us to uh second maybe the second most important lesson that we",
    "start": "1182080",
    "end": "1187760"
  },
  {
    "text": "have learned is uh keep actor persistance at aggregate root level unless you need it you really need it at",
    "start": "1187760",
    "end": "1194440"
  },
  {
    "text": "a lower scope so this um brings us uh to",
    "start": "1194440",
    "end": "1200520"
  },
  {
    "text": "dddd uh who um who is familiar with domain driven",
    "start": "1200520",
    "end": "1205760"
  },
  {
    "text": "design yeah almost uh almost everyone and with withd you have this aggregate Roots uh you have those value objects",
    "start": "1205760",
    "end": "1212919"
  },
  {
    "text": "and then uh in the uh uh beginning we uh",
    "start": "1212919",
    "end": "1218880"
  },
  {
    "text": "were we design how we Implement Persistence of our actors because actor can uh persist its state so when actor",
    "start": "1218880",
    "end": "1226799"
  },
  {
    "text": "is uh aw can with a message actor can load it State okay I'm in this state and",
    "start": "1226799",
    "end": "1232640"
  },
  {
    "text": "it's quite important for some actors so we have media set controls media set is a TV program for example or radio",
    "start": "1232640",
    "end": "1239240"
  },
  {
    "text": "program and then it consists of files and we have some workers which upload",
    "start": "1239240",
    "end": "1244320"
  },
  {
    "text": "these files to uh origins or CDN and uh",
    "start": "1244320",
    "end": "1249679"
  },
  {
    "text": "then first generation persistence had a uh persistence like almost every",
    "start": "1249679",
    "end": "1254880"
  },
  {
    "text": "everywhere we have media set events on like you have this TV program events then you have file events and it also",
    "start": "1254880",
    "end": "1261919"
  },
  {
    "text": "persisted and also this CDN events like from from from that original from akami",
    "start": "1261919",
    "end": "1267240"
  },
  {
    "text": "we get EV event that file was um uploaded from Microsoft we get that that there was a failure and so on so it was",
    "start": "1267240",
    "end": "1272799"
  },
  {
    "text": "persistence everywhere it was very efficient on each actor level but it was",
    "start": "1272799",
    "end": "1278080"
  },
  {
    "text": "really hard to get it uh the state of the of the aggregate truth because uh in",
    "start": "1278080",
    "end": "1284240"
  },
  {
    "text": "the end we need to know whether the TV program or radio program that we dealing",
    "start": "1284240",
    "end": "1289520"
  },
  {
    "text": "with is up upload is is it ready to be BR uh to be uh streamed so we need we",
    "start": "1289520",
    "end": "1297000"
  },
  {
    "text": "needed to uh get this events from Individual uh uh uh act get get it State",
    "start": "1297000",
    "end": "1304840"
  },
  {
    "text": "and it's uh it's really slow to get it State and uh uh it it brings um",
    "start": "1304840",
    "end": "1310840"
  },
  {
    "text": "unnecessary complexity so uh second generation persistence that all events all",
    "start": "1310840",
    "end": "1317400"
  },
  {
    "text": "persistent events EV they are accumulated on Maia set level Maia set again it's it's a TV or radio prr",
    "start": "1317400",
    "end": "1322520"
  },
  {
    "text": "anything that can that can be streamed so uh you can have uh a lot of uh child",
    "start": "1322520",
    "end": "1328559"
  },
  {
    "text": "actors worker actors who uh who doing their job but it's first of all uh uh it's always easy to deal with when they",
    "start": "1328559",
    "end": "1335120"
  },
  {
    "text": "are uh State stateless and if they're stateful what we do when uh they are",
    "start": "1335120",
    "end": "1342000"
  },
  {
    "text": "created they get their state from the from the parent from media set and then",
    "start": "1342000",
    "end": "1347400"
  },
  {
    "text": "continue working and then when they say change they send back events to parent who persist them so that uh made our",
    "start": "1347400",
    "end": "1354440"
  },
  {
    "text": "event journal and the whole persistent uh layer uh much more",
    "start": "1354440",
    "end": "1360679"
  },
  {
    "text": "simple uh so this is our secondary events flow so only media set controller uh rise to event journal and event",
    "start": "1360679",
    "end": "1367360"
  },
  {
    "text": "Journal it's a uh who who familiar with",
    "start": "1367360",
    "end": "1372400"
  },
  {
    "text": "event sourcing that this is uh basically uh implementation of event sourcing so",
    "start": "1372400",
    "end": "1377679"
  },
  {
    "text": "each Octor uh lives uh building its state from events that have been",
    "start": "1377679",
    "end": "1383880"
  },
  {
    "text": "persistent through its uh lifetime uh so lesson three don't expose",
    "start": "1383880",
    "end": "1391240"
  },
  {
    "start": "1389000",
    "end": "1505000"
  },
  {
    "text": "actor State directly from the pance layer that was uh uh another mistake we",
    "start": "1391240",
    "end": "1396600"
  },
  {
    "text": "uh we did uh so actors they leave in cluster and then have it state which",
    "start": "1396600",
    "end": "1402039"
  },
  {
    "text": "they get from uh uh event journal and then uh of course we often need to query",
    "start": "1402039",
    "end": "1409159"
  },
  {
    "text": "the state uh not just for operational reasons but also for like reporting reasons uh we have some dashboards so uh",
    "start": "1409159",
    "end": "1417840"
  },
  {
    "text": "in vir persistent everything went through AA cluster so uh there is some",
    "start": "1417840",
    "end": "1424400"
  },
  {
    "text": "uh dashboard which wants to show the state uh of upload of a TV program okay it goes to AA cluster give me the state",
    "start": "1424400",
    "end": "1431840"
  },
  {
    "text": "of this TV program okay we have a cluster we have multiple nodes find this uh uh actor requested State and of",
    "start": "1431840",
    "end": "1439200"
  },
  {
    "text": "course with uh with actors you don't have message on actors you can only send messages so you you just sending message",
    "start": "1439200",
    "end": "1444480"
  },
  {
    "text": "get State and then it sent you message back so it was uh really uh slow and",
    "start": "1444480",
    "end": "1453880"
  },
  {
    "text": "because we simply forgot uh about cqs and that was a bit ironic because uh we",
    "start": "1453880",
    "end": "1460880"
  },
  {
    "text": "uh uh actually we we all knew about and respected cqs before we started uh",
    "start": "1460880",
    "end": "1468320"
  },
  {
    "text": "working with AKA but often when you start with a new tool it's like you you get the only tool is a Hummer and then",
    "start": "1468320",
    "end": "1475120"
  },
  {
    "text": "uh okay uh then you you just uh deal with without Hummer so okay we have",
    "start": "1475120",
    "end": "1481120"
  },
  {
    "text": "actors let's just get uh stay through actors and no you know don't do that you",
    "start": "1481120",
    "end": "1487480"
  },
  {
    "text": "have separate reading and writing models event journals they mostly for actors to",
    "start": "1487480",
    "end": "1492679"
  },
  {
    "text": "leave and then if you want some reporting dashboards Implement uh your read side reporting side uh not uh using",
    "start": "1492679",
    "end": "1503399"
  },
  {
    "text": "your actors you will uh find much more performant and easier to to manage",
    "start": "1503399",
    "end": "1509880"
  },
  {
    "start": "1505000",
    "end": "1675000"
  },
  {
    "text": "system so then another lesson leave active State validation to actors themselves so and that's also about um",
    "start": "1509880",
    "end": "1518480"
  },
  {
    "text": "uh how to model real world processes and Real World objects so",
    "start": "1518480",
    "end": "1526039"
  },
  {
    "text": "uh uh when I wake up in the morning one way to act would be that uh I uh I get a",
    "start": "1526039",
    "end": "1535399"
  },
  {
    "text": "telephone from somebody who tells me that what I need to do uh another way is",
    "start": "1535399",
    "end": "1540440"
  },
  {
    "text": "that I probably should be able to manage sort of myself so when I when I build my State uh in in the morning uh I can use",
    "start": "1540440",
    "end": "1548159"
  },
  {
    "text": "of course some some tools maybe my phone with some reminders but I myself uh",
    "start": "1548159",
    "end": "1554080"
  },
  {
    "text": "should probably be responsible for finding out what do I what I need need to do today so uh with um with the actor",
    "start": "1554080",
    "end": "1563000"
  },
  {
    "text": "model our first uh generation uh we had a soall media set",
    "start": "1563000",
    "end": "1569559"
  },
  {
    "text": "monitor uh it was also actor which was uh trying to monitor which programs are",
    "start": "1569559",
    "end": "1575760"
  },
  {
    "text": "not fully uploaded and just uh trying to send commands Okay uh try again correct",
    "start": "1575760",
    "end": "1583520"
  },
  {
    "text": "error and so on and then uh if you think about uh TV program actor doesn't it",
    "start": "1583520",
    "end": "1590039"
  },
  {
    "text": "know that it's not fully uploaded I mean it's it's an actor it should be responsible for its uh uh doings and",
    "start": "1590039",
    "end": "1598200"
  },
  {
    "text": "wrongdoings and should be able to fix the state so uh actually whenever this actor is",
    "start": "1598200",
    "end": "1605000"
  },
  {
    "text": "alive it knows better than everyone else okay by the way I have uh TV program",
    "start": "1605000",
    "end": "1611320"
  },
  {
    "text": "consisting of 10 media files and this file was not fully uploaded I need to retry it of course it knows the best",
    "start": "1611320",
    "end": "1618360"
  },
  {
    "text": "uh but the the little problem with that is that actors are reactive so they don't need don't always stay in memory",
    "start": "1618360",
    "end": "1625320"
  },
  {
    "text": "and this is what make the actor model very efficient so uh we just implemented",
    "start": "1625320",
    "end": "1630360"
  },
  {
    "text": "a set of media set reminders so please remind some actors but don't remind what",
    "start": "1630360",
    "end": "1638360"
  },
  {
    "text": "they need to do that that's a principal difference first uh version We reminded",
    "start": "1638360",
    "end": "1643840"
  },
  {
    "text": "them okay you please wake up and fix that error you have uh with some files",
    "start": "1643840",
    "end": "1649240"
  },
  {
    "text": "no don't do that just remind them wake up aror wakes up and then he decides",
    "start": "1649240",
    "end": "1654399"
  },
  {
    "text": "okay I by the way my state is this and expected state is that actually we operate with soal desired and current",
    "start": "1654399",
    "end": "1660440"
  },
  {
    "text": "state so uh what AR does it just simply math Let's uh evaluate the difference between desired State and current state",
    "start": "1660440",
    "end": "1667080"
  },
  {
    "text": "okay okay the difference is that I have two files which need to be uploaded let's let's do that so it's simplified",
    "start": "1667080",
    "end": "1673720"
  },
  {
    "text": "um code quite a lot um lesson five uh and actually it's very",
    "start": "1673720",
    "end": "1680720"
  },
  {
    "start": "1675000",
    "end": "1784000"
  },
  {
    "text": "close to uh Lesson Four let actors schedule periodic Remis themselves until have nothing to worry about so actors uh",
    "start": "1680720",
    "end": "1688960"
  },
  {
    "text": "should be uh self-managed so they should know best what they need to do and they",
    "start": "1688960",
    "end": "1695880"
  },
  {
    "text": "should just uh schedule reminders to themselves to periodically wake up until",
    "start": "1695880",
    "end": "1701559"
  },
  {
    "text": "they have nothing to do until uh and typically in the media uh business like when you you have",
    "start": "1701559",
    "end": "1708679"
  },
  {
    "text": "a a news clip or radio program and then you you collect files and it can be",
    "start": "1708679",
    "end": "1714039"
  },
  {
    "text": "quite hectic where there is a transcoding process going on and you get necessary qualities once you done uh",
    "start": "1714039",
    "end": "1721399"
  },
  {
    "text": "that's it this this act responsible as TV program uh may not need to worry",
    "start": "1721399",
    "end": "1727080"
  },
  {
    "text": "about things at all or maybe sometimes they can be difference in uh rights uh",
    "start": "1727080",
    "end": "1733960"
  },
  {
    "text": "broadcasting rights so program needs to be uh removed D and then restored so",
    "start": "1733960",
    "end": "1739600"
  },
  {
    "text": "then actor wakes up so but they uh need to be able to take care of about",
    "start": "1739600",
    "end": "1746519"
  },
  {
    "text": "themselves so uh and to uh Implement that there is some uh uh R code which uh",
    "start": "1746519",
    "end": "1754480"
  },
  {
    "text": "we can use uh based on persistent reminders there is a uh uh quite popular",
    "start": "1754480",
    "end": "1761279"
  },
  {
    "text": "uh Library quarts which uh have a support for um in a",
    "start": "1761279",
    "end": "1768159"
  },
  {
    "text": "and uh uh we using uh different Library called AA persistent reminders uh which",
    "start": "1768159",
    "end": "1773399"
  },
  {
    "text": "is open source uh uh library for this is for actually for. net for for for on jvm",
    "start": "1773399",
    "end": "1780080"
  },
  {
    "text": "there are some other uh tools but but quars also available for Java so uh the",
    "start": "1780080",
    "end": "1786559"
  },
  {
    "start": "1784000",
    "end": "2056000"
  },
  {
    "text": "sixth lesson is tell actors what to do don't ask them again it's um like every",
    "start": "1786559",
    "end": "1792880"
  },
  {
    "text": "time uh uh I look at such of lessons it's always because we haven't properly",
    "start": "1792880",
    "end": "1799840"
  },
  {
    "text": "modeled uh real world processes uh with uh AKA you have a uh two methods uh or",
    "start": "1799840",
    "end": "1808799"
  },
  {
    "text": "available for actors well uh there are messages but uh one is tell uh you're",
    "start": "1808799",
    "end": "1815679"
  },
  {
    "text": "just sending message to actor but there's also ask where you send message to actor and then you wait until actors",
    "start": "1815679",
    "end": "1822840"
  },
  {
    "text": "uh uh responds and uh we know no longer use them in the beginning with oh so so",
    "start": "1822840",
    "end": "1829120"
  },
  {
    "text": "convenient I can just tell actor what to do uh when I don't need immediate reply",
    "start": "1829120",
    "end": "1834480"
  },
  {
    "text": "if I need immediate reply then I just ask and then I get the reply back that breaks the whole active model first of",
    "start": "1834480",
    "end": "1841320"
  },
  {
    "text": "all let look at at performance so uh if you tell uh on um that that that",
    "start": "1841320",
    "end": "1848399"
  },
  {
    "text": "performance Benchmark is a few years old so it it was less powerful machine than I'm I'm having now but basically uh on",
    "start": "1848399",
    "end": "1855720"
  },
  {
    "text": "that machine it was small laptop I was able to send like four million messages uh uh a second to the actor uh while",
    "start": "1855720",
    "end": "1865559"
  },
  {
    "text": "using async task it was uh about 500,000 and uh when using ask it was about uh",
    "start": "1865559",
    "end": "1873840"
  },
  {
    "text": "150,000 so it was like 30 times difference and uh it's a huge",
    "start": "1873840",
    "end": "1880480"
  },
  {
    "text": "performance difference because uh internally actually there there's a lot going on to implement this ask because",
    "start": "1880480",
    "end": "1887240"
  },
  {
    "text": "actor actor sort of aactor model doesn't natively support that so what it's done",
    "start": "1887240",
    "end": "1893559"
  },
  {
    "text": "there is a uh intermediate actor is uh created which uh uh uh which manages uh",
    "start": "1893559",
    "end": "1902480"
  },
  {
    "text": "these messages and implement this uh uh weight and and also uh it it breaks uh",
    "start": "1902480",
    "end": "1908840"
  },
  {
    "text": "the whole concept of reactive software like uh you suddenly you are model you don't do anything you're just uh waiting",
    "start": "1908840",
    "end": "1915960"
  },
  {
    "text": "for a message also in it breaks uh the um the nature of sequential messaging",
    "start": "1915960",
    "end": "1923399"
  },
  {
    "text": "for actors so actors get uh message and suddenly it gets asked which means that okay I need to answer that maybe it",
    "start": "1923399",
    "end": "1930159"
  },
  {
    "text": "takes time but what if actor gets another message okay should I process that message no they ask they I need to",
    "start": "1930159",
    "end": "1938279"
  },
  {
    "text": "uh answer to the ask so it's actually uh uh the logic of uh ask is qu is quite",
    "start": "1938279",
    "end": "1943960"
  },
  {
    "text": "complicated so uh uh it's very good explained in one of the um several",
    "start": "1943960",
    "end": "1950000"
  },
  {
    "text": "articles um I just mentioned uh this one uh and but okay how can we deal when we",
    "start": "1950000",
    "end": "1957840"
  },
  {
    "text": "really need an answer well you just use the soal aggregation pattern so let's",
    "start": "1957840",
    "end": "1963120"
  },
  {
    "text": "see you uh you want to find the cheapest uh hotel in the area uh and",
    "start": "1963120",
    "end": "1970440"
  },
  {
    "text": "then you want to ask thousand hotels and uh get the uh the best uh price what you",
    "start": "1970440",
    "end": "1977120"
  },
  {
    "text": "do instead of just asking every Hotel you just send thousand million what how many",
    "start": "1977120",
    "end": "1984600"
  },
  {
    "text": "hotels in the area messages and then you go in the state awaiting responses so",
    "start": "1984600",
    "end": "1992240"
  },
  {
    "text": "oors fsms find state machines reactor goes to different state okay I'm in the state I'm awaiting responses but I'm",
    "start": "1992240",
    "end": "1999080"
  },
  {
    "text": "still getting messages I can react I can uh uh so I which means that uh the actor",
    "start": "1999080",
    "end": "2005159"
  },
  {
    "text": "knows that he's ating respons but he doesn't block anything so and then uh uh",
    "start": "2005159",
    "end": "2011200"
  },
  {
    "text": "he can receive new messages he can receive responses from these hotels and then he doesn't need to wait for uh for",
    "start": "2011200",
    "end": "2018440"
  },
  {
    "text": "all thousand or million responses if suddenly comes price which is very good it's going to say okay let's I will stop",
    "start": "2018440",
    "end": "2025360"
  },
  {
    "text": "I will not wait for for other messages and if uh and those message which can't",
    "start": "2025360",
    "end": "2031600"
  },
  {
    "text": "be processed until the Act made the decision they are stashed so there is a stash it's a buffer of messages that",
    "start": "2031600",
    "end": "2037880"
  },
  {
    "text": "will be U processed later when I go to a different state so uh basically use fin",
    "start": "2037880",
    "end": "2044120"
  },
  {
    "text": "State machines to uh uh and use tell use",
    "start": "2044120",
    "end": "2049679"
  },
  {
    "text": "just uh uh oneway messages instead of using to uh pretending that you can do",
    "start": "2049679",
    "end": "2055000"
  },
  {
    "text": "two- ways messaging so uh seventh lesson is begin with non-cluster uh system it's um I",
    "start": "2055000",
    "end": "2063720"
  },
  {
    "start": "2056000",
    "end": "2156000"
  },
  {
    "text": "think it's U probably obvious that if you want to try um AKA or Microsoft or l or whatever",
    "start": "2063720",
    "end": "2073638"
  },
  {
    "text": "Proto actor whatever active framework you you will want to try you want to try first with non-cluster system because uh",
    "start": "2073639",
    "end": "2080040"
  },
  {
    "text": "it's a different dimensions Dimension uh uh which you need to sort of explore and",
    "start": "2080040",
    "end": "2085878"
  },
  {
    "text": "actors as I mentioned they have nothing to do with uh clustering actor doesn't know actually that uh it's running in",
    "start": "2085879",
    "end": "2091679"
  },
  {
    "text": "the cluster but uh the way you design the system can be different",
    "start": "2091679",
    "end": "2097680"
  },
  {
    "text": "um so first try to build noncluster system and then you uh try to deal with",
    "start": "2097680",
    "end": "2102920"
  },
  {
    "text": "clustering uh later and it also uh corresponds to what Martin far said",
    "start": "2102920",
    "end": "2109599"
  },
  {
    "text": "about distributed object design like don't distribute uh your object there is a risk that you will try you will start",
    "start": "2109599",
    "end": "2114920"
  },
  {
    "text": "Distributing your objects if you like start with cluster system um in the beginning so",
    "start": "2114920",
    "end": "2121880"
  },
  {
    "text": "uh uh in our case we uh implemented our system first as non-clustered and then",
    "start": "2121880",
    "end": "2129400"
  },
  {
    "text": "uh we realize that we need of course clustering and then uh with clustering",
    "start": "2129400",
    "end": "2134480"
  },
  {
    "text": "it uh yeah it took several more months before we got it right using AA clusters",
    "start": "2134480",
    "end": "2140000"
  },
  {
    "text": "now this is a um console application which uh shows",
    "start": "2140000",
    "end": "2145560"
  },
  {
    "text": "the state of nodes you see that most of nodes of up and somewhere in the beginning there's a node which is weekly",
    "start": "2145560",
    "end": "2151280"
  },
  {
    "text": "up which mean that node is starting so and load is uh distributed between the",
    "start": "2151280",
    "end": "2156800"
  },
  {
    "start": "2156000",
    "end": "2299000"
  },
  {
    "text": "these notes uh so uh apply domain driven design when planning cluster sharding so",
    "start": "2156800",
    "end": "2164160"
  },
  {
    "text": "uh once you start using uh uh the active model in the cluster then uh you will",
    "start": "2164160",
    "end": "2169800"
  },
  {
    "text": "want to take advantage of full advantage of it so when there is a message coming to your um your entity in our case it's",
    "start": "2169800",
    "end": "2177880"
  },
  {
    "text": "TV program for example then uh uh What uh the actor model framework does it",
    "start": "2177880",
    "end": "2183400"
  },
  {
    "text": "will find uh the node which is responsible for that message so",
    "start": "2183400",
    "end": "2189040"
  },
  {
    "text": "typically every message should should have some sort of entity ID which helps to identify who's responsible I can Bank",
    "start": "2189040",
    "end": "2195599"
  },
  {
    "text": "transactions it will be bank account so it's it's very important that uh you have this entity IDs it it helps",
    "start": "2195599",
    "end": "2202720"
  },
  {
    "text": "determine who is responsible to handle this message it uh and it will guarantee that there will be only one uh actor",
    "start": "2202720",
    "end": "2209520"
  },
  {
    "text": "processing that message and if the node goes down the system will be rebalanced so it's another actor will be created in",
    "start": "2209520",
    "end": "2215960"
  },
  {
    "text": "a different node which will be responsible for that M but it will only be one and then uh uh it's U think uh",
    "start": "2215960",
    "end": "2224400"
  },
  {
    "text": "very easily fall in its places when you apply uh DDD uh",
    "start": "2224400",
    "end": "2230400"
  },
  {
    "text": "rules so this is uh how in our case we have this media set publishing actor so we have this cluster sh and there entity",
    "start": "2230400",
    "end": "2236960"
  },
  {
    "text": "it's media set controller and then uh it it uh sends uh work to uh uh other uh",
    "start": "2236960",
    "end": "2246680"
  },
  {
    "text": "actors which also run in class but it's not shed actors they're just uh it's worker actors uh so you they use another",
    "start": "2246680",
    "end": "2254280"
  },
  {
    "text": "type of um U clustering act cluster pulled uh router so this is uh cluster",
    "start": "2254280",
    "end": "2262240"
  },
  {
    "text": "Shing so we have message Q message parer we have to uh extract entity ID from",
    "start": "2262240",
    "end": "2268599"
  },
  {
    "text": "that message so in our case it's it's a code of TV or radio program and then we find this entity and then it it it is",
    "start": "2268599",
    "end": "2275480"
  },
  {
    "text": "sent to uh to The Shard and then you uh this sharting and using a sharting",
    "start": "2275480",
    "end": "2282760"
  },
  {
    "text": "regions it's a uh basically if you read about how clusters are implemented uh it",
    "start": "2282760",
    "end": "2289319"
  },
  {
    "text": "does need to be the active model you can read about how database Works how rabbit mq works so it's the same",
    "start": "2289319",
    "end": "2296640"
  },
  {
    "text": "principle uh yes so uh I think we have about uh 10",
    "start": "2296640",
    "end": "2303079"
  },
  {
    "start": "2299000",
    "end": "2393000"
  },
  {
    "text": "minutes left uh couple of more lessons avoid class single it's uh the same U advice that also goes",
    "start": "2303079",
    "end": "2311400"
  },
  {
    "text": "for uh single tones don't create single tones without uh good reasons and the",
    "start": "2311400",
    "end": "2317839"
  },
  {
    "text": "same goes for for cluster single tones uh example of uh possible mistakes which",
    "start": "2317839",
    "end": "2323160"
  },
  {
    "text": "we made we have a health check uh which is now system running as a as a single tone why we did that because we thought",
    "start": "2323160",
    "end": "2330400"
  },
  {
    "text": "okay our health check it checks a uh network uh system it has checks rabbit",
    "start": "2330400",
    "end": "2336119"
  },
  {
    "text": "mq a service bus myos scale you name it so it it's it performs different a lot of different checks let's uh just run it",
    "start": "2336119",
    "end": "2343880"
  },
  {
    "text": "once there is one actor that responsible for all that but then we Implement as a single tone which means that if that not",
    "start": "2343880",
    "end": "2350720"
  },
  {
    "text": "goes down we don't have health check uh U alternative is just to run this health",
    "start": "2350720",
    "end": "2356400"
  },
  {
    "text": "check in every or in multiple not necessar in every note in multiple nodes so you",
    "start": "2356400",
    "end": "2361720"
  },
  {
    "text": "don't depend on one specific uh node uh yeah it's uh it's a bit more expensive",
    "start": "2361720",
    "end": "2368240"
  },
  {
    "text": "like you you do the check for whether rabbit mq is available or not from from",
    "start": "2368240",
    "end": "2373520"
  },
  {
    "text": "multiple no but it's probably uh advantage of uh having uh it in multiple",
    "start": "2373520",
    "end": "2381440"
  },
  {
    "text": "nodes it gives you uh more safety for uh for your for the",
    "start": "2381440",
    "end": "2388040"
  },
  {
    "text": "system than if you run just in s in a single not Al Al it makes it more performant and uh uh less 10 don't rush",
    "start": "2388040",
    "end": "2397440"
  },
  {
    "start": "2393000",
    "end": "2622000"
  },
  {
    "text": "to heal split brains who knows what a split brain",
    "start": "2397440",
    "end": "2402680"
  },
  {
    "text": "is um probably half of um the audience is that if you have a cluster then uh it",
    "start": "2402680",
    "end": "2410319"
  },
  {
    "text": "uh performs certain tasks and uh uh that can happen Network partition that parts",
    "start": "2410319",
    "end": "2417359"
  },
  {
    "text": "of the cluster will act as independent systems and the consequence can be",
    "start": "2417359",
    "end": "2423560"
  },
  {
    "text": "catastrophic catastrophic let's say you have you're running a bank system you you're sending out payments and then you",
    "start": "2423560",
    "end": "2429880"
  },
  {
    "text": "have a split in your cluster uh and then you start running uh duplicate payments",
    "start": "2429880",
    "end": "2435880"
  },
  {
    "text": "from from two partitions of your cluster so it's um uh so it it can lead to very",
    "start": "2435880",
    "end": "2443839"
  },
  {
    "text": "severe economical uh consequences and so in some uh environments some systems",
    "start": "2443839",
    "end": "2451000"
  },
  {
    "text": "that you you can't really uh afford that uh if you can afford that and now case",
    "start": "2451000",
    "end": "2456560"
  },
  {
    "text": "we can because we're just uploading files so the worst what happen if you have a split brain for few seconds let's",
    "start": "2456560",
    "end": "2464040"
  },
  {
    "text": "say or maybe some milliseconds uh perhaps the file will be",
    "start": "2464040",
    "end": "2469520"
  },
  {
    "text": "uploaded twice uh so we will handle that",
    "start": "2469520",
    "end": "2474880"
  },
  {
    "text": "uh um so uh because split brain resolution basically it's about killing nodes which we don't know",
    "start": "2474880",
    "end": "2482720"
  },
  {
    "text": "uh what's happening to uh to them and then so and and of course if you don't have",
    "start": "2482720",
    "end": "2488640"
  },
  {
    "text": "control with a node uh the network is split node itself should decide uh",
    "start": "2488640",
    "end": "2494560"
  },
  {
    "text": "should I kill myself or should I stay alive so often what is used is static",
    "start": "2494560",
    "end": "2500400"
  },
  {
    "text": "Quorum uh uh so uh okay we know that uh if if it goes below certain number of",
    "start": "2500400",
    "end": "2507160"
  },
  {
    "text": "nodes let's kill the whole partition it's dangerous to to run it that way so",
    "start": "2507160",
    "end": "2514800"
  },
  {
    "text": "uh another strategy So eventually you can actually kill the whole cluster uh",
    "start": "2514800",
    "end": "2521359"
  },
  {
    "text": "very popular strategies keep majority okay majority is always right so uh if",
    "start": "2521359",
    "end": "2526839"
  },
  {
    "text": "we have a split brain that those which are in minority they will kill themselves so we have a split and then",
    "start": "2526839",
    "end": "2532760"
  },
  {
    "text": "okay these guys they kill them so and uh there are some other uh just one of them is keep oldest",
    "start": "2532760",
    "end": "2540440"
  },
  {
    "text": "and the reason why I skip oldest and not newest because the oldest not always surrounds your single tones single tones",
    "start": "2540440",
    "end": "2545640"
  },
  {
    "text": "are created and at the start of the cluster and they of course created in the oldest node so uh we just keep the",
    "start": "2545640",
    "end": "2552720"
  },
  {
    "text": "one which has our has most functionality uh so and we keep the rest",
    "start": "2552720",
    "end": "2558520"
  },
  {
    "text": "even though we have only a couple of notes there so uh but what happens uh",
    "start": "2558520",
    "end": "2563760"
  },
  {
    "text": "especially if your uh system is running like in the same physical uh uh",
    "start": "2563760",
    "end": "2570720"
  },
  {
    "text": "Place uh uh that uh partitions are temporary and then within a few seconds",
    "start": "2570720",
    "end": "2576480"
  },
  {
    "text": "they will be resolved so consequences of your starting killing nodes uh and then maybe restarting them uh they are more",
    "start": "2576480",
    "end": "2584200"
  },
  {
    "text": "serious than uh if you uh simply wait again if you can afford waiting in case",
    "start": "2584200",
    "end": "2590400"
  },
  {
    "text": "of like Financial applications it may be situation may be different so your",
    "start": "2590400",
    "end": "2596200"
  },
  {
    "text": "domain your uh requirements to handling this situation with split brain will",
    "start": "2596200",
    "end": "2602559"
  },
  {
    "text": "probably tell you the answer but in majority of systems out say uh it's better to wait without uh having this",
    "start": "2602559",
    "end": "2610599"
  },
  {
    "text": "this radical action So currently our AA cluster is set up with no split brain",
    "start": "2610599",
    "end": "2616000"
  },
  {
    "text": "resolver and it works more stable than U when uh it had split uh brain resolver",
    "start": "2616000",
    "end": "2622040"
  },
  {
    "start": "2622000",
    "end": "2646000"
  },
  {
    "text": "strategy so uh those are uh 10 most important lessons from",
    "start": "2622040",
    "end": "2627920"
  },
  {
    "text": "implementing the active model in uh in our project and we continue learning and",
    "start": "2627920",
    "end": "2635000"
  },
  {
    "text": "we continue sort of uh revising our",
    "start": "2635000",
    "end": "2641400"
  },
  {
    "text": "decisions um and uh I think that brings me to the uh end of my",
    "start": "2641400",
    "end": "2649240"
  },
  {
    "start": "2646000",
    "end": "2664000"
  },
  {
    "text": "[Applause]",
    "start": "2649240",
    "end": "2653590"
  },
  {
    "text": "presentation",
    "start": "2662240",
    "end": "2665240"
  }
]