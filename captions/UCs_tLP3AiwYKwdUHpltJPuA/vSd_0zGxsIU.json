[
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "good afternoon I was I was almost gonna say good morning but you know time flies when you're when you're having fun I",
    "start": "11660",
    "end": "18480"
  },
  {
    "text": "want to start this this talk with a bit of an awkward moment for me I I need to",
    "start": "18480",
    "end": "23640"
  },
  {
    "text": "make a confession and I need to confess the fact that I have built some horrible",
    "start": "23640",
    "end": "30689"
  },
  {
    "text": "software in the past and on the other hand I'm pretty sure you did too and but",
    "start": "30689",
    "end": "38910"
  },
  {
    "text": "I'm especially afraid of saying this because some of you might be maintaining my software and and in that case I I'm",
    "start": "38910",
    "end": "47399"
  },
  {
    "text": "really sorry and yeah anyway so now that I got that off my chest let have a look",
    "start": "47399",
    "end": "52620"
  },
  {
    "text": "at what that horrible software looks like and it might look familiar to you actually so I used to build software",
    "start": "52620",
    "end": "59579"
  },
  {
    "text": "with this this nice domain mobile right we've we've learned that we need a domain model in our software and at",
    "start": "59579",
    "end": "66930"
  },
  {
    "text": "least that was that's what I was taught and when you when you build a new system",
    "start": "66930",
    "end": "72689"
  },
  {
    "text": "and I've worked a lot in Greenfield situations and some would say I was lucky some others would say are for you",
    "start": "72689",
    "end": "79290"
  },
  {
    "text": "you didn't get to the real the real stuff but in the beginning the the",
    "start": "79290",
    "end": "84360"
  },
  {
    "text": "services that you build map really nicely to to one of these concepts or",
    "start": "84360",
    "end": "90659"
  },
  {
    "text": "entities in your model and then as you start developing further you notice that",
    "start": "90659",
    "end": "99329"
  },
  {
    "text": "you know there's a second service and it really Maps nicely to another entity and and everything is nice and clean",
    "start": "99329",
    "end": "104610"
  },
  {
    "text": "you know that feeling of that that clean application all that feeling you see",
    "start": "104610",
    "end": "110009"
  },
  {
    "text": "little doesn't last longer than one or two Sprint's right it's it's about four weeks and then he'll starts kicking in",
    "start": "110009",
    "end": "116219"
  },
  {
    "text": "and this one service comes in that's only needs to map to about everything that you have this this clean mapping",
    "start": "116219",
    "end": "123540"
  },
  {
    "text": "and the whole architectural promises that you made in the beginning they just all fall apart and you end up with nice",
    "start": "123540",
    "end": "132060"
  },
  {
    "text": "sequel and you know Java is easy sequels no no",
    "start": "132060",
    "end": "138130"
  },
  {
    "text": "and this is an actual sequel query that somebody gave me and I hope you cannot",
    "start": "138130",
    "end": "143590"
  },
  {
    "text": "read it because I promise you couldn't but then I started reading the sequel",
    "start": "143590",
    "end": "148780"
  },
  {
    "text": "and I started reading the characters and even if you can read the characters you cannot read the sequel so I guess that's",
    "start": "148780",
    "end": "156010"
  },
  {
    "text": "okay I guess that's within the boundaries of what I was allowed to do with this sequel statement but just to",
    "start": "156010",
    "end": "161500"
  },
  {
    "text": "give you a summary there's 22 joins in six sub queries in here and this is normal unfortunately or fortunately it's",
    "start": "161500",
    "end": "170709"
  },
  {
    "text": "has to say you don't see this kind of queries in every and every applications",
    "start": "170709",
    "end": "175959"
  },
  {
    "text": "and I've built about sequel queries as well and building them is fine maintaining them it's a different story",
    "start": "175959",
    "end": "182670"
  },
  {
    "text": "but we're done with the apologies so what do we do to fix those problems",
    "start": "182670",
    "end": "188140"
  },
  {
    "text": "well these squares don't perform so we we solve all of our problems and we are tech guys so we add technology so we add",
    "start": "188140",
    "end": "200680"
  },
  {
    "text": "caches all over the place we use session replication so we can have distributed sessions where we would distribute",
    "start": "200680",
    "end": "207310"
  },
  {
    "text": "everything just because well one machine cannot handle everything anymore because that because of our sequel query we use",
    "start": "207310",
    "end": "213880"
  },
  {
    "text": "method invocation caches because in with spring cache you just put an annotation on a method and then it's cached right",
    "start": "213880",
    "end": "219670"
  },
  {
    "text": "so it's easy we can just do that why not we use worker pools because they think make stuff faster be careful if you make",
    "start": "219670",
    "end": "227080"
  },
  {
    "text": "that assumption so we add caches all over the place and there's a when I was",
    "start": "227080",
    "end": "233650"
  },
  {
    "text": "preparing this slide one thing struck me and I didn't really do that on purpose I was just exaggerating a bit with all the",
    "start": "233650",
    "end": "240010"
  },
  {
    "text": "caches and I noticed that I put all my solutions to the problem on the left but",
    "start": "240010",
    "end": "245080"
  },
  {
    "text": "the actual problem is in that domain model to the right the model is wrong and we're solving that by adding more",
    "start": "245080",
    "end": "251290"
  },
  {
    "text": "technology to it so what we wanted to build was something really fast and and",
    "start": "251290",
    "end": "258269"
  },
  {
    "text": "beautiful of course opinions may differ on whether this is beautiful or not but it's pretty fast compared to this but",
    "start": "258269",
    "end": "267479"
  },
  {
    "text": "this is what we've really built right it's probably built with all the best",
    "start": "267479",
    "end": "272580"
  },
  {
    "text": "intentions in the world and it has all the characteristics of the the car we",
    "start": "272580",
    "end": "277860"
  },
  {
    "text": "saw earlier but for some reason and I have not tested this I am making assumptions that this will not outrun",
    "start": "277860",
    "end": "284789"
  },
  {
    "text": "the other car but you know this is not software related this is cars and cars",
    "start": "284789",
    "end": "291060"
  },
  {
    "text": "are different worlds fortunately there's also a a pattern for for the type of software that we're we're building or I",
    "start": "291060",
    "end": "298860"
  },
  {
    "text": "say we that's a way of not saying I there's a pattern for the software I've built and it's called the big bowl of",
    "start": "298860",
    "end": "306000"
  },
  {
    "text": "mud and here's some news for you it's not mud hence the term coat smell and",
    "start": "306000",
    "end": "313050"
  },
  {
    "text": "all that everything comes together and in this case there's the there's an",
    "start": "313050",
    "end": "318930"
  },
  {
    "text": "architect on top I was about to say me but and the architect is proud of its",
    "start": "318930",
    "end": "325020"
  },
  {
    "text": "creation right this architect does not even notice the code smells in his",
    "start": "325020",
    "end": "330389"
  },
  {
    "text": "creation it doesn't he's not aware of what he has built this is a bad",
    "start": "330389",
    "end": "335849"
  },
  {
    "text": "architect and I hope it's not you don't recognize yourself in this and I I don't",
    "start": "335849",
    "end": "342300"
  },
  {
    "text": "like making mistakes well actually I do like making mistakes I like making them once but this was a mistake I've made",
    "start": "342300",
    "end": "349110"
  },
  {
    "text": "more than once right building an application every time you say next time I'm gonna think about my domain model",
    "start": "349110",
    "end": "354840"
  },
  {
    "text": "slightly better and yet here we go again big ball of mud me on top of it array here we go so I started experimenting a",
    "start": "354840",
    "end": "362580"
  },
  {
    "text": "bit with okay what do we need to do with this domain model and the way we",
    "start": "362580",
    "end": "368940"
  },
  {
    "text": "experimented in in the time where I was abraham's boss is we we did things in",
    "start": "368940",
    "end": "375569"
  },
  {
    "text": "public we put our experiments on github and then of course you have to give it a name and that name was not actual",
    "start": "375569",
    "end": "382860"
  },
  {
    "text": "framework at the time it had a different name really crappy I will not say it and we started experimenting it and then I",
    "start": "382860",
    "end": "389460"
  },
  {
    "text": "got a an email a couple of months later of a company said hey we're using your framework in production that was not my",
    "start": "389460",
    "end": "399509"
  },
  {
    "text": "response to that remark I was more like oh and but there was two pieces of",
    "start": "399509",
    "end": "407789"
  },
  {
    "text": "news in that one sentence first of all framework no it was an experiment that I should not use an",
    "start": "407789",
    "end": "414479"
  },
  {
    "text": "experiment in production okay and the other one was it's in production by you",
    "start": "414479",
    "end": "419880"
  },
  {
    "text": "know there's production and there's production there's all there's this excel sheet we normally used but now we",
    "start": "419880",
    "end": "424889"
  },
  {
    "text": "need two people to update it so we've built this little application and deployed it on a Raspberry Pi that's",
    "start": "424889",
    "end": "432120"
  },
  {
    "text": "sitting under the desk that we reset every day but I'm plugging the USB cable but no it was a medical system and it",
    "start": "432120",
    "end": "441060"
  },
  {
    "text": "was used to track the tools used in surgery ouch unfortunately nobody died",
    "start": "441060",
    "end": "447919"
  },
  {
    "text": "yet and the and from then on we started",
    "start": "447919",
    "end": "456270"
  },
  {
    "text": "calling it a framework and we decided to give it a proper name and then that was",
    "start": "456270",
    "end": "461849"
  },
  {
    "text": "really my sort of cue to say hey maybe I could use this myself in production so I",
    "start": "461849",
    "end": "467130"
  },
  {
    "text": "started using it myself since then and",
    "start": "467130",
    "end": "472849"
  },
  {
    "text": "the way it works and I'm not going too deep into into this but this is our this",
    "start": "472909",
    "end": "478409"
  },
  {
    "text": "is my sort of history into into micro services or in my the road I've taken to",
    "start": "478409",
    "end": "485880"
  },
  {
    "text": "to come to micro services and the way this the the we approach the the problem",
    "start": "485880",
    "end": "493469"
  },
  {
    "text": "of the big domain model was by separating it and in this case we've separated creating different models for",
    "start": "493469",
    "end": "499949"
  },
  {
    "text": "different purposes they nowadays it's called CQRS it has some different names in the in the past and basically what",
    "start": "499949",
    "end": "508110"
  },
  {
    "text": "you say is well you create a model that is focused on handling commands if you",
    "start": "508110",
    "end": "513209"
  },
  {
    "text": "were in the previous session with Alberto then command is a it's a trigger somebody does something somebody makes a",
    "start": "513209",
    "end": "519539"
  },
  {
    "text": "decision to have the system do something and it might be triggered by clicking a button doesn't matter and you need to make",
    "start": "519539",
    "end": "527250"
  },
  {
    "text": "decisions right what are the effects of this specific command what does the system need to do what and whatever it",
    "start": "527250",
    "end": "533610"
  },
  {
    "text": "does it starts emitting events based on what what's happening because of that trigger and those events are then",
    "start": "533610",
    "end": "542810"
  },
  {
    "text": "forwarded to what we call the projections and they are a model or they are models that focus on delivering",
    "start": "542810",
    "end": "549570"
  },
  {
    "text": "information usually to users because they have a screen they need some information they probably wanted now",
    "start": "549570",
    "end": "556260"
  },
  {
    "text": "because loaders are so 20:17 so we want to have this information readily",
    "start": "556260",
    "end": "561390"
  },
  {
    "text": "available and easy to navigate through so we want models that focus on that so",
    "start": "561390",
    "end": "567779"
  },
  {
    "text": "we can lose the difficult queries the the non performance queries and all the caches that we we try to put on it to",
    "start": "567779",
    "end": "575339"
  },
  {
    "text": "solve the problems and on this road when we started and this started about nine",
    "start": "575339",
    "end": "582810"
  },
  {
    "text": "years ago and we started noticing that you know monoliths are not really that",
    "start": "582810",
    "end": "589020"
  },
  {
    "text": "bad and you might have heard this before I mean I'm not the inventor of the fact",
    "start": "589020",
    "end": "594630"
  },
  {
    "text": "that monoliths aren't that bad but for one they don't smell usually unless",
    "start": "594630",
    "end": "600329"
  },
  {
    "text": "they're in a park and there's a lot of dogs passing by they might start smelling but it's not the same as a big",
    "start": "600329",
    "end": "605700"
  },
  {
    "text": "ball of mud right there's a big difference between a monolith in a big ball of mud it's possible to terror a",
    "start": "605700",
    "end": "610950"
  },
  {
    "text": "monolith apart okay it's also possible to tear the big ball of mother parts but",
    "start": "610950",
    "end": "616829"
  },
  {
    "text": "I don't think you'd that's a very nice job and there's notice of course there's",
    "start": "616829",
    "end": "622950"
  },
  {
    "text": "a lot of observations from the in the community and Marti Fowler put it very",
    "start": "622950",
    "end": "628770"
  },
  {
    "text": "nicely he said almost all of the successful stories that he's heard about micro-services have started with a",
    "start": "628770",
    "end": "634860"
  },
  {
    "text": "monolith and almost all cases where they did not start with the monolith but just",
    "start": "634860",
    "end": "640140"
  },
  {
    "text": "said hey here's a white piece of paper let's go for micro-services all the way those projects failed and I've been",
    "start": "640140",
    "end": "647370"
  },
  {
    "text": "involved in some projects myself fortunately not as a not as the end responsible for them and I've seen some",
    "start": "647370",
    "end": "653940"
  },
  {
    "text": "of those projects fail as well because it's incredibly hard to do micro-services there's a lot of",
    "start": "653940",
    "end": "659910"
  },
  {
    "text": "things you need to to worry about and the question is really are you are you",
    "start": "659910",
    "end": "667170"
  },
  {
    "text": "really up for it are you up to that maturity level in your organization and we're not talking about just just",
    "start": "667170",
    "end": "673680"
  },
  {
    "text": "technology do you understand the technology to implement banker services but do you even know where to cut your",
    "start": "673680",
    "end": "681000"
  },
  {
    "text": "to place your boundaries and this is actually a concept that came from",
    "start": "681000",
    "end": "687000"
  },
  {
    "text": "Alberto over beer so be careful and he said you know what he says in practice",
    "start": "687000",
    "end": "693300"
  },
  {
    "text": "is called noun driven design and it's a very simple technique and it is technique proven not to work but it's",
    "start": "693300",
    "end": "699870"
  },
  {
    "text": "used a lot and it's easy you just take the specification of your system and every noun you encounter that's a",
    "start": "699870",
    "end": "706560"
  },
  {
    "text": "service easy right unfortunately that's also what happens in practice so we have",
    "start": "706560",
    "end": "711960"
  },
  {
    "text": "order service customer service product service inventory service etc and now instead of having created this big bowl",
    "start": "711960",
    "end": "718410"
  },
  {
    "text": "of mud a monolithic big bowl of mud we have created a distributed big ball of mud hooray",
    "start": "718410",
    "end": "724080"
  },
  {
    "text": "gone with the code smell well good luck if you're in that environment and the",
    "start": "724080",
    "end": "730170"
  },
  {
    "text": "problem with these projects is not I mean a project failing is not a big problem but you want them to fail fast",
    "start": "730170",
    "end": "736680"
  },
  {
    "text": "and fail cheap so within the management scope of that project you can try again",
    "start": "736680",
    "end": "743030"
  },
  {
    "text": "right you've done an experiment that didn't really work out let's try something else out that does work okay",
    "start": "743030",
    "end": "749310"
  },
  {
    "text": "we've lost a week who cares so what does",
    "start": "749310",
    "end": "754800"
  },
  {
    "text": "a journey microservices journey look like and in our in our opinion and it",
    "start": "754800",
    "end": "760800"
  },
  {
    "text": "all starts with and this is a Greenfield situation right so it all starts with a an idea some some concepts that's gonna",
    "start": "760800",
    "end": "769800"
  },
  {
    "text": "make somebody rich usually that's what business cases are about maybe I should have put a little world a globe there",
    "start": "769800",
    "end": "777030"
  },
  {
    "text": "with two hands like an idea that makes the world better but for some of us a better world is just filled pockets and",
    "start": "777030",
    "end": "785780"
  },
  {
    "text": "what we know that migrating moving to micro services right away that's dangerous",
    "start": "785780",
    "end": "791430"
  },
  {
    "text": "that is a very dangerous trip and there's a lot of pitfalls there's a chance of ending up like whatever that",
    "start": "791430",
    "end": "797460"
  },
  {
    "text": "was when it used to be alive but there's also a big chance of you you just lose",
    "start": "797460",
    "end": "803399"
  },
  {
    "text": "the way and and end up not really where you wanted to be where to end up so we",
    "start": "803399",
    "end": "808950"
  },
  {
    "text": "want to take a different different route what we really would like to do and and",
    "start": "808950",
    "end": "814200"
  },
  {
    "text": "this is what we've seen the the users of action framework do it's not something that we intended but it just seemed to",
    "start": "814200",
    "end": "820770"
  },
  {
    "text": "happen is create a structured monolith make sure that within your monolith",
    "start": "820770",
    "end": "826140"
  },
  {
    "text": "there are clear boundaries there are clearly defined components in that in",
    "start": "826140",
    "end": "831600"
  },
  {
    "text": "that monolith that as the as time moves on and we discover some of the same",
    "start": "831600",
    "end": "839910"
  },
  {
    "text": "non-functional Zoar we we hit a point where the monoliths cannot do it anymore",
    "start": "839910",
    "end": "845720"
  },
  {
    "text": "we can start extracting these components and start deploying them separately because now we have actual reason to",
    "start": "845720",
    "end": "853770"
  },
  {
    "text": "split a certain component out of of the monolith we have a reason to tear it apart and it might be because the let's",
    "start": "853770",
    "end": "861870"
  },
  {
    "text": "say the deployments lifecycle of that blue component is different right we",
    "start": "861870",
    "end": "867209"
  },
  {
    "text": "need to deploy that more often or maybe it's not a stable and it's generating these out of memory errors all the time",
    "start": "867209",
    "end": "872760"
  },
  {
    "text": "so let's deploy it separately so we can let it crash without having the entire monolith crash because of because of it",
    "start": "872760",
    "end": "880430"
  },
  {
    "text": "it might be because the team is just too large right you can only work with so many team people on the same repository",
    "start": "880430",
    "end": "888200"
  },
  {
    "text": "so you might want to split because of that there's a lot of different reasons and they're all non-functional right and",
    "start": "888200",
    "end": "895970"
  },
  {
    "text": "as time progresses we can extract more components and we end up in a place",
    "start": "895970",
    "end": "901050"
  },
  {
    "text": "probably not in the place we intended to end up from from the beginning but we end up in a place where we have evolved",
    "start": "901050",
    "end": "908160"
  },
  {
    "text": "into into micro services and of course I then there's a question do we really",
    "start": "908160",
    "end": "914430"
  },
  {
    "text": "need to stop there what about server lists well that could be a next step maybe that we don't care how many",
    "start": "914430",
    "end": "919829"
  },
  {
    "text": "instances of that purple component we have maybe just say here it is run it I don't care whoops",
    "start": "919829",
    "end": "929779"
  },
  {
    "text": "and the the core concepts in being able",
    "start": "929779",
    "end": "934920"
  },
  {
    "text": "to do this being able to transition between these from monolith 2 to",
    "start": "934920",
    "end": "941279"
  },
  {
    "text": "micro-services is what we call location transparency and the concept of location transparency means that a component is",
    "start": "941279",
    "end": "948300"
  },
  {
    "text": "not aware of the location and maybe even the existence of the other component",
    "start": "948300",
    "end": "953819"
  },
  {
    "text": "that it interacts with it's about two components communicating and they don't",
    "start": "953819",
    "end": "959189"
  },
  {
    "text": "care where they are so are they in the same in our case it says it's Java based",
    "start": "959189",
    "end": "964860"
  },
  {
    "text": "but is it in the same JVM or is it on the same VM are they on the same host",
    "start": "964860",
    "end": "970740"
  },
  {
    "text": "but in different VMs or and different data centers across the globe it doesn't matter the communication they have does",
    "start": "970740",
    "end": "977189"
  },
  {
    "text": "not make any assumptions on that location and preferably a component doesn't even know it's speaking to that",
    "start": "977189",
    "end": "983610"
  },
  {
    "text": "specific other components and it all",
    "start": "983610",
    "end": "988620"
  },
  {
    "text": "starts with good API design and and nowadays event-driven micro services are implemented a lot to to overcome this",
    "start": "988620",
    "end": "996689"
  },
  {
    "text": "right events are a very location transparent means of communication because the sender of an event doesn't",
    "start": "996689",
    "end": "1004040"
  },
  {
    "text": "really care who's picking that event up right so we see a lot of these event-driven microservices emerging and",
    "start": "1004040",
    "end": "1011240"
  },
  {
    "text": "as it happens a lot in our industry we find a solution to a problem and then we",
    "start": "1011240",
    "end": "1018079"
  },
  {
    "text": "start finding problems to match our solution so event-driven micro services tend to appear where they should not be",
    "start": "1018079",
    "end": "1024860"
  },
  {
    "text": "but so just imagine an order service and there's another service that needs to",
    "start": "1024860",
    "end": "1030260"
  },
  {
    "text": "know about ordered items and a marker services it's good that every component",
    "start": "1030260",
    "end": "1035959"
  },
  {
    "text": "is isolated from the rest right don't use databases for integration I guess",
    "start": "1035959",
    "end": "1042530"
  },
  {
    "text": "we've learned that lesson over the years so there's a line of communication between those and the order services",
    "start": "1042530",
    "end": "1047870"
  },
  {
    "text": "publishing events not knowing that they end up in the other service of obviously but and it could be like oh there's",
    "start": "1047870",
    "end": "1053899"
  },
  {
    "text": "order created there's item added the item removed in this order confirmed and obviously there's a lot of other events",
    "start": "1053899",
    "end": "1059470"
  },
  {
    "text": "in the process it's not really that simple but none of these events will",
    "start": "1059470",
    "end": "1066070"
  },
  {
    "text": "really tell that component on the right what items have been ordered because",
    "start": "1066070",
    "end": "1071259"
  },
  {
    "text": "adding an item to an order doesn't make it an ordered item it's only an ordered item if it's added to an order which was",
    "start": "1071259",
    "end": "1078309"
  },
  {
    "text": "then confirmed so that means they some of the logic on what it means what all",
    "start": "1078309",
    "end": "1084580"
  },
  {
    "text": "these events mean has to be copied to the other side now the service on the",
    "start": "1084580",
    "end": "1089679"
  },
  {
    "text": "right has to have intricate knowledge of the mathematics of what it means for an item to be ordered and again this is a",
    "start": "1089679",
    "end": "1098649"
  },
  {
    "text": "really simple piece of math and it's fine to copy that but in practice it",
    "start": "1098649",
    "end": "1103750"
  },
  {
    "text": "gets much more complicated and it's the type of coupling that's really annoying because it's implicit implicit coupling",
    "start": "1103750",
    "end": "1110740"
  },
  {
    "text": "is the worst kind you can have because in the end you end up with a little ball",
    "start": "1110740",
    "end": "1117629"
  },
  {
    "text": "but it gets worse this is not the worst case I've seen orchestration or coordination using events in in system",
    "start": "1117629",
    "end": "1124990"
  },
  {
    "text": "that was impossible to comprehend and it's like Oh or the service says an order is created which was a trigger for",
    "start": "1124990",
    "end": "1131110"
  },
  {
    "text": "shipping and it's really sent as an intent to trigger shipping in this in",
    "start": "1131110",
    "end": "1136360"
  },
  {
    "text": "that case then the shipping service says I will confirm the inventory we confirm",
    "start": "1136360",
    "end": "1141580"
  },
  {
    "text": "that we have their stuff that we can actually ship this and the order services ok I'm ready for payment now",
    "start": "1141580",
    "end": "1148289"
  },
  {
    "text": "well that's again the type of communication where you're really pointing your finger at something right",
    "start": "1148289",
    "end": "1153820"
  },
  {
    "text": "here you're using an event to tell the other components I am ready for you now you can do your stuff and it says ok",
    "start": "1153820",
    "end": "1161379"
  },
  {
    "text": "orders paid our grades now I'm ready for shipping again we're pointing fingers so again there's a lot of dependencies",
    "start": "1161379",
    "end": "1167970"
  },
  {
    "text": "growing between these these services and we're not really as transparent as we as",
    "start": "1167970",
    "end": "1173740"
  },
  {
    "text": "we could be and that's because there's not really",
    "start": "1173740",
    "end": "1179159"
  },
  {
    "text": "one reason to send a message to another component we've noticed that there's",
    "start": "1179159",
    "end": "1188880"
  },
  {
    "text": "three reasons why a message would want to send our Soria why a component would want to send a message to another",
    "start": "1188880",
    "end": "1194789"
  },
  {
    "text": "component and that's an event to notify that something happened it's a legitimate message I'm not saying events",
    "start": "1194789",
    "end": "1201360"
  },
  {
    "text": "are bad but it's not all events there's also the command and that's a message that notifies that that notifies the",
    "start": "1201360",
    "end": "1209460"
  },
  {
    "text": "system that a we expect a side effect we expect the system to be in a different state after processing this command than",
    "start": "1209460",
    "end": "1216330"
  },
  {
    "text": "it was before right I want something done period and the other one is the",
    "start": "1216330",
    "end": "1221789"
  },
  {
    "text": "query I have a need for information somebody give me this I need to make a decision somewhere or I need to show",
    "start": "1221789",
    "end": "1229320"
  },
  {
    "text": "something to the to the user and I need information to show that show that user",
    "start": "1229320",
    "end": "1235760"
  },
  {
    "text": "so an event is typically a it could be a data change right so I'm an order was confirmed something like that it could",
    "start": "1235760",
    "end": "1242760"
  },
  {
    "text": "be a deadline like payment payment overdue or anything like that basically it's anything relevant in the",
    "start": "1242760",
    "end": "1249929"
  },
  {
    "text": "domain and events storming the the session before me is is a very",
    "start": "1249929",
    "end": "1257130"
  },
  {
    "text": "interesting technique to to uncover these events in in an organization and",
    "start": "1257130",
    "end": "1265500"
  },
  {
    "text": "the events typically follow a publish/subscribe mechanism right we are very aware of this i I assume so a",
    "start": "1265500",
    "end": "1272159"
  },
  {
    "text": "component just publishes the the events and any component that wants to know about that event can pick it up right",
    "start": "1272159",
    "end": "1278309"
  },
  {
    "text": "that's easy but it does get a bit more complex what if you have two instances",
    "start": "1278309",
    "end": "1284159"
  },
  {
    "text": "of a component and only one of them needs to know about that event what if they're updating some table in a in a",
    "start": "1284159",
    "end": "1291390"
  },
  {
    "text": "interview model or in a in a database it doesn't matter and there's just two of",
    "start": "1291390",
    "end": "1296730"
  },
  {
    "text": "two instances that can do that you want an event to be unhandled only once in that case you can use exclusive",
    "start": "1296730",
    "end": "1304799"
  },
  {
    "text": "consumers which basically means the the top instance here will get all the events and the other one will just wait",
    "start": "1304799",
    "end": "1311760"
  },
  {
    "text": "for his sibling to be killed and then you can take take the word work and if",
    "start": "1311760",
    "end": "1319680"
  },
  {
    "text": "that other one comes back he's in waiting mode oh this is a beautiful waste of resources not so much of CPU",
    "start": "1319680",
    "end": "1325500"
  },
  {
    "text": "because we have good technology to where to share that but probably that thing is trying to make a connection all the time",
    "start": "1325500",
    "end": "1330570"
  },
  {
    "text": "it's consuming memory so this is not really efficient in practice what we see",
    "start": "1330570",
    "end": "1336840"
  },
  {
    "text": "most is competing consumers that means that both of them are just reading",
    "start": "1336840",
    "end": "1341910"
  },
  {
    "text": "messages off the same queue and every message will be delivered to whoever takes it off first that's very easy at",
    "start": "1341910",
    "end": "1348720"
  },
  {
    "text": "least to to implement but again there's a little problem here in the sense that what about ordering of messages now you",
    "start": "1348720",
    "end": "1355680"
  },
  {
    "text": "cannot guarantee that the item added is handled before the order created so you",
    "start": "1355680",
    "end": "1362370"
  },
  {
    "text": "might be adding items to an order that hasn't been process of the creation",
    "start": "1362370",
    "end": "1367890"
  },
  {
    "text": "hasn't been processed yet now a message ordering is a completely different topic we can have a different session about",
    "start": "1367890",
    "end": "1373680"
  },
  {
    "text": "that but wouldn't it be nice if you know that events are emitted in a certain",
    "start": "1373680",
    "end": "1378870"
  },
  {
    "text": "order that you can also consume them in that same order so there's a different",
    "start": "1378870",
    "end": "1384570"
  },
  {
    "text": "way is there to use balance consumers use some hashing algorithm to decide okay if if modulo 2 ends up with 0 its",
    "start": "1384570",
    "end": "1392700"
  },
  {
    "text": "you if it's 1 it's you of course that's of the worst hashing algorithm out there but just for the sake of explanation so",
    "start": "1392700",
    "end": "1401550"
  },
  {
    "text": "if two events are are about the same order they will end up in the same components now that component doesn't",
    "start": "1401550",
    "end": "1408300"
  },
  {
    "text": "need to worry about event ordering anymore it knows that all the events of a specific order and sorry for",
    "start": "1408300",
    "end": "1413790"
  },
  {
    "text": "overloading that term all the events of the same order are handled in the order they were created so let's move to",
    "start": "1413790",
    "end": "1424110"
  },
  {
    "text": "command so commands are a request a side effect kind of message right we want the world of the application to be different",
    "start": "1424110",
    "end": "1431210"
  },
  {
    "text": "after the command that was before so it",
    "start": "1431210",
    "end": "1436440"
  },
  {
    "text": "could be change this state or usually they're a bit more explicit why you want",
    "start": "1436440",
    "end": "1441480"
  },
  {
    "text": "to change the states or maybe send an email I want an email",
    "start": "1441480",
    "end": "1446740"
  },
  {
    "text": "to be sent right and something happens which is the email was sent commands typically have a single",
    "start": "1446740",
    "end": "1452590"
  },
  {
    "text": "destination there's one component somewhere in our micro-services landscape or our component landscape so",
    "start": "1452590",
    "end": "1459550"
  },
  {
    "text": "to say and there's one destination for it and there's one component that will will handle that and typically a",
    "start": "1459550",
    "end": "1466090"
  },
  {
    "text": "commands do not have big replies they just have an OK type reply sometimes there's a little",
    "start": "1466090",
    "end": "1473560"
  },
  {
    "text": "bit of data if there's an altar generator or a generated value somewhere you might want to to return that value",
    "start": "1473560",
    "end": "1481080"
  },
  {
    "text": "but usually there's not a lot of information because it's not the reply that we care about now come on routing",
    "start": "1481080",
    "end": "1488290"
  },
  {
    "text": "could be done round-robin right a typical load balancer would do that every requests you get it will just go",
    "start": "1488290",
    "end": "1494680"
  },
  {
    "text": "any meenie miney moe to the next one but that again might be very inefficient",
    "start": "1494680",
    "end": "1500280"
  },
  {
    "text": "we've we've seen it during the keynotes you can use consistent hashing to route",
    "start": "1500280",
    "end": "1505770"
  },
  {
    "text": "commands for the same concept to the same machine so you can use local caches and not caches as we saw earlier to",
    "start": "1505770",
    "end": "1513430"
  },
  {
    "text": "solve big performance problems but caches the way they were meant to be as an optimization of a system that works",
    "start": "1513430",
    "end": "1520180"
  },
  {
    "text": "well without them right so again here we could use consistent hashing and with",
    "start": "1520180",
    "end": "1527380"
  },
  {
    "text": "commands commands typically target something like an order so in that",
    "start": "1527380",
    "end": "1532600"
  },
  {
    "text": "command if you target an order probably you mentioned the order ID somewhere as well that order ID is beautiful input",
    "start": "1532600",
    "end": "1539440"
  },
  {
    "text": "for this hashing algorithm so different commands that mention the same order IDs",
    "start": "1539440",
    "end": "1544930"
  },
  {
    "text": "should be routed to the same machine as long as that machine is alive and when that machine dies we just route it to",
    "start": "1544930",
    "end": "1551200"
  },
  {
    "text": "whatever remains right and the last one",
    "start": "1551200",
    "end": "1557020"
  },
  {
    "text": "is I want to know something that is query I need to have information and unlike the other messages this is a",
    "start": "1557020",
    "end": "1562870"
  },
  {
    "text": "message where the value is not on the message being sent but the value is in the message you get as a reply and in",
    "start": "1562870",
    "end": "1570490"
  },
  {
    "text": "practice we see this implemented use using HTTP usually get all the time",
    "start": "1570490",
    "end": "1577830"
  },
  {
    "text": "but that's only one one of the the patterns that we've we've seen and that's a point-to-point query right it's",
    "start": "1578000",
    "end": "1585960"
  },
  {
    "text": "just pointed someone and say hey you give me give me the answer to this question and that works really well when",
    "start": "1585960",
    "end": "1591870"
  },
  {
    "text": "you have a question that has a single true answer right and in this example",
    "start": "1591870",
    "end": "1597240"
  },
  {
    "text": "what is the price of a certain products well if that price is 49 then great that price is 49 but if you're in retail",
    "start": "1597240",
    "end": "1604919"
  },
  {
    "text": "you'll probably know that there's no such thing as the actual price pricing",
    "start": "1604919",
    "end": "1613889"
  },
  {
    "text": "may depend on things if you if you go to the Albert Heijn which is a large",
    "start": "1613889",
    "end": "1620879"
  },
  {
    "text": "supermarket here you can get a bonus card right and if you have that bonus",
    "start": "1620879",
    "end": "1626370"
  },
  {
    "text": "card you can get discounts so there's the same product and different people",
    "start": "1626370",
    "end": "1631620"
  },
  {
    "text": "will pay different price for that product so there's no true answer what does that product cost well it depends",
    "start": "1631620",
    "end": "1637799"
  },
  {
    "text": "are you do you have a bonus card right in other words did you give away your privacy to that other company and",
    "start": "1637799",
    "end": "1644250"
  },
  {
    "text": "obviously you get money back for it right you can sell your privacy that's fine so in this case what we will want",
    "start": "1644250",
    "end": "1651029"
  },
  {
    "text": "to do is it's got together query right we have a question and we let any component that has an answer for us",
    "start": "1651029",
    "end": "1656700"
  },
  {
    "text": "provide an answer and we have to be a bit careful here because we need some timeouts because we don't even know if",
    "start": "1656700",
    "end": "1662909"
  },
  {
    "text": "there's components providing us with an answer right so the top one could answer",
    "start": "1662909",
    "end": "1668340"
  },
  {
    "text": "just the the default list price right 199 let's assume it's a different",
    "start": "1668340",
    "end": "1674279"
  },
  {
    "text": "product than the previous one and if you are a bonus cardholder their price is 149 that's great and if that component",
    "start": "1674279",
    "end": "1682019"
  },
  {
    "text": "goes down it might happen it will just not reply and then unfortunately bonus card holders will pay the regular price",
    "start": "1682019",
    "end": "1687740"
  },
  {
    "text": "that will definitely piss them off but maybe they don't notice but something",
    "start": "1687740",
    "end": "1693330"
  },
  {
    "text": "nicer that we can do is we can change the behavior of the system without changing any of the components in the",
    "start": "1693330",
    "end": "1699480"
  },
  {
    "text": "system we can put a component here that says well if whatever condition if",
    "start": "1699480",
    "end": "1705210"
  },
  {
    "text": "they're if it's sunny outside ice creams are $0.99 I'll usually sales way around to get",
    "start": "1705210",
    "end": "1710440"
  },
  {
    "text": "more expensive but and then if we don't care about that anymore we can take it",
    "start": "1710440",
    "end": "1715539"
  },
  {
    "text": "away so we can change the behavior of the entire system without touching anything in the system and that's very",
    "start": "1715539",
    "end": "1724749"
  },
  {
    "text": "powerful and of course with power comes great responsibility you can also destroy a system like that you know don't touch anything and still",
    "start": "1724749",
    "end": "1731109"
  },
  {
    "text": "it breaks and there's another one",
    "start": "1731109",
    "end": "1736330"
  },
  {
    "text": "that we've seen in in use and that's a subscription query and that's the kind",
    "start": "1736330",
    "end": "1741729"
  },
  {
    "text": "of query where you say keep me up to date on the price of for example in this",
    "start": "1741729",
    "end": "1747729"
  },
  {
    "text": "case so the result is actually the initial price that you get and then all the deltas in whatever shape or form",
    "start": "1747729",
    "end": "1754330"
  },
  {
    "text": "that they come so in our case in our example the price could be 49 but as it",
    "start": "1754330",
    "end": "1759940"
  },
  {
    "text": "drops to 39 you send the Delta of minus 10 the Delta may also be the new price",
    "start": "1759940",
    "end": "1766330"
  },
  {
    "text": "that's really up to you to you to to decide in every specific case and this",
    "start": "1766330",
    "end": "1772839"
  },
  {
    "text": "is a very powerful way to keep components up-to-date on something that they want to be kept up-to-date on so",
    "start": "1772839",
    "end": "1779049"
  },
  {
    "text": "you don't have to do polling you don't have to replicate the logic of okay how do we keep this price up-to-date how do",
    "start": "1779049",
    "end": "1785200"
  },
  {
    "text": "we what kind of events do we need to listen to that that can update this",
    "start": "1785200",
    "end": "1790809"
  },
  {
    "text": "price or you say now as well give me a model and send me the deltas of a certain model as it changes and we've",
    "start": "1790809",
    "end": "1802149"
  },
  {
    "text": "we've implemented scenarios like this where the model was alive on the on the",
    "start": "1802149",
    "end": "1809259"
  },
  {
    "text": "client side usually in a browser you just have a model there and as data or",
    "start": "1809259",
    "end": "1815019"
  },
  {
    "text": "as the model on the server changes you send those deltas over and now you have a real-time UI which is scary for a lot",
    "start": "1815019",
    "end": "1823029"
  },
  {
    "text": "of users now still nowadays they are used to pressing refresh to get new information still so now if we look at",
    "start": "1823029",
    "end": "1830529"
  },
  {
    "text": "these event driven micro services and look at these different types of messages that we have we can take away",
    "start": "1830529",
    "end": "1836889"
  },
  {
    "text": "that duplication of logic we can now wait for in order to be confirmed and say okay give me the",
    "start": "1836889",
    "end": "1842809"
  },
  {
    "text": "details then and now I'm getting information about the items that were ordered right we know that this order",
    "start": "1842809",
    "end": "1850730"
  },
  {
    "text": "since it has been confirmed everything in there it's ordered and we can get the",
    "start": "1850730",
    "end": "1855769"
  },
  {
    "text": "details of all the items and we're not duplicating logic anymore we still have",
    "start": "1855769",
    "end": "1861169"
  },
  {
    "text": "an event to trigger so we don't have to do polling like Oh what what the orders do you have give me the total list of orders place in the last 24 hours",
    "start": "1861169",
    "end": "1867559"
  },
  {
    "text": "and then do a delta with what you already knew I'm pretty sure some of you have built integrations like that we",
    "start": "1867559",
    "end": "1874129"
  },
  {
    "text": "include it and it's horrible I don't like it and there's another thing about events",
    "start": "1874129",
    "end": "1881169"
  },
  {
    "text": "events they they retain value like commands are nice they trigger a side",
    "start": "1881169",
    "end": "1886759"
  },
  {
    "text": "effect and then really the value of those commands is gone a query you get your information and really the value of that query is gone",
    "start": "1886759",
    "end": "1893480"
  },
  {
    "text": "but the fact that something happened at a specific time is very valuable at any",
    "start": "1893480",
    "end": "1900919"
  },
  {
    "text": "moment in the future right there's a lot of value in those events they they represent something that happened in our",
    "start": "1900919",
    "end": "1907100"
  },
  {
    "text": "in our domain right an event sourcing is is a pattern that's being spoken about a",
    "start": "1907100",
    "end": "1914659"
  },
  {
    "text": "lot these days it's it's implemented a lot less for for some obvious and some",
    "start": "1914659",
    "end": "1920749"
  },
  {
    "text": "more or less obvious reasons and what you really need to to store events is an",
    "start": "1920749",
    "end": "1928460"
  },
  {
    "text": "event store obviously right what else would you call it and an event store is",
    "start": "1928460",
    "end": "1933860"
  },
  {
    "text": "a mechanism that allows you to not only store the events but also retrieve them in specific ways so with event sourcing",
    "start": "1933860",
    "end": "1943610"
  },
  {
    "text": "if there's a component sending out these events these events have value to that",
    "start": "1943610",
    "end": "1948860"
  },
  {
    "text": "component omitting it as well right we can feed those events back to the order service and now the only thing the order",
    "start": "1948860",
    "end": "1956570"
  },
  {
    "text": "service has in terms of state is the events that they emitted in the past because those events basically tell",
    "start": "1956570",
    "end": "1963409"
  },
  {
    "text": "everything that happened and theoretically unfortunately also in practice you can use those events to",
    "start": "1963409",
    "end": "1969830"
  },
  {
    "text": "reconstruct state of an order instead of storing the current state of an order you just",
    "start": "1969830",
    "end": "1976320"
  },
  {
    "text": "rebuild the current state of an order using all the events that were emitted about that order in the past and that",
    "start": "1976320",
    "end": "1983770"
  },
  {
    "text": "gives us a very powerful audit trail right because those events represent the facts that happened they're facts and",
    "start": "1983770",
    "end": "1990880"
  },
  {
    "text": "now we're not only publishing those facts as a side effect of an operation",
    "start": "1990880",
    "end": "1996700"
  },
  {
    "text": "but they are also the source of the decisions that we make and that's a very",
    "start": "1996700",
    "end": "2002400"
  },
  {
    "text": "important concept in event sourcing and unfortunately in some of the explanations of event sourcing that's",
    "start": "2002400",
    "end": "2007830"
  },
  {
    "text": "lacking the fact that you know they say it's the single source of truth and suddenly you notice that in the",
    "start": "2007830",
    "end": "2013410"
  },
  {
    "text": "description they still have two sources and they're basing the truth on something that is not the truth so how",
    "start": "2013410",
    "end": "2020250"
  },
  {
    "text": "true is the truth if you don't base it on the truth so the operations that you",
    "start": "2020250",
    "end": "2025890"
  },
  {
    "text": "need to know that an events or needs to be able to do are upend write only new things can happen unfortunately humans",
    "start": "2025890",
    "end": "2033300"
  },
  {
    "text": "still live in the now we don't have a way of traveling while you can make your",
    "start": "2033300",
    "end": "2038610"
  },
  {
    "text": "now go slower than other people's now's but that's about all we can do in terms",
    "start": "2038610",
    "end": "2044160"
  },
  {
    "text": "of time travel as far as I'm aware of and the other thing is we need to be",
    "start": "2044160",
    "end": "2050550"
  },
  {
    "text": "able to validate this sequence like we want to be sure that we are not allowing two conflicting events to be appended",
    "start": "2050550",
    "end": "2058700"
  },
  {
    "text": "right and that doesn't mean everything is full sequentially you can only have",
    "start": "2058700",
    "end": "2065220"
  },
  {
    "text": "one thread publishing events there's there's other ways but will will not go into too much detail now another",
    "start": "2065220",
    "end": "2072750"
  },
  {
    "text": "operation that we need to be able to do is a full sequential read so that service on the right that is interested",
    "start": "2072750",
    "end": "2078450"
  },
  {
    "text": "in in in in processing these events heed it can track this event stream basically",
    "start": "2078450",
    "end": "2085620"
  },
  {
    "text": "right it can fetch the first event and then when that's done it fetches the next one and the next one and then keep",
    "start": "2085620",
    "end": "2091980"
  },
  {
    "text": "them can keep a pointer on where it left off right some of you will probably now",
    "start": "2091980",
    "end": "2097110"
  },
  {
    "text": "think hey Kafka right yes Kafka is really good at doing this but here's the challenge now we need to",
    "start": "2097110",
    "end": "2104370"
  },
  {
    "text": "do this as well and this is where were Kafka abandons us unfortunately so read the events that",
    "start": "2104370",
    "end": "2111339"
  },
  {
    "text": "were emitted by a specific aggregates like without going all the way through",
    "start": "2111339",
    "end": "2116890"
  },
  {
    "text": "the entire stream right so you want to read those specific events that were emitted to represent changes in a",
    "start": "2116890",
    "end": "2124300"
  },
  {
    "text": "specific order or their meaning the thing you bought right in that order",
    "start": "2124300",
    "end": "2130030"
  },
  {
    "text": "not the sequence so those are only a few of the the events in the entire stream",
    "start": "2130030",
    "end": "2136780"
  },
  {
    "text": "other stuff is happening as well there's others other orders are being dealt with and there's other things beyond orders",
    "start": "2136780",
    "end": "2144400"
  },
  {
    "text": "that are happening as well and we need to be able to read those efficiently to reconstruct the current state of an",
    "start": "2144400",
    "end": "2150369"
  },
  {
    "text": "order so we can make decisions again based on the facts that we have emitted",
    "start": "2150369",
    "end": "2155470"
  },
  {
    "text": "in the past so with those with those",
    "start": "2155470",
    "end": "2161260"
  },
  {
    "text": "messages what I what I notice is for whatever reason we tend to forget the",
    "start": "2161260",
    "end": "2167109"
  },
  {
    "text": "fact that first we need to look at what our requirements and then choose technology and I fell into that trap a",
    "start": "2167109",
    "end": "2173680"
  },
  {
    "text": "lot as well you say okay HCP is here everybody uses HP so why should I not news HTTP for everything right so let's",
    "start": "2173680",
    "end": "2181750"
  },
  {
    "text": "do a query using HTTP GET well who says that's the best way to do it right you",
    "start": "2181750",
    "end": "2187420"
  },
  {
    "text": "need this consistent routing well let's create a URL pattern then that has a specific value somewhere so we count the",
    "start": "2187420",
    "end": "2194770"
  },
  {
    "text": "number of slashes and we'll tell the load balancer to routes whatever values in between those slashes",
    "start": "2194770",
    "end": "2201970"
  },
  {
    "text": "and if that's the same rather to the same machine well you can probably do that but is that really the kind of work",
    "start": "2201970",
    "end": "2207550"
  },
  {
    "text": "that brings most value to your to your customer or to the business that you're",
    "start": "2207550",
    "end": "2212560"
  },
  {
    "text": "running there's a lot of beautiful technologies to get information from A",
    "start": "2212560",
    "end": "2217780"
  },
  {
    "text": "to B and they all have different they've made different choices so we should really take a step back every now and",
    "start": "2217780",
    "end": "2224109"
  },
  {
    "text": "then I think okay what what is the message I'm trying to get across and then choose the technology that matches",
    "start": "2224109",
    "end": "2231430"
  },
  {
    "text": "that routing pattern",
    "start": "2231430",
    "end": "2236730"
  },
  {
    "text": "now this is only easy and nice and if you're in a controlled laboratory environment this will work why the",
    "start": "2236730",
    "end": "2243060"
  },
  {
    "text": "computer under your desk will be happily serving you all the commands queries and",
    "start": "2243060",
    "end": "2248070"
  },
  {
    "text": "and events but at scale things are different so you could wonder how how do",
    "start": "2248070",
    "end": "2254820"
  },
  {
    "text": "you when you have this massive scale system how do you get all these events routed correctly to all these other",
    "start": "2254820",
    "end": "2261570"
  },
  {
    "text": "components and how do you get this command to exactly that component that can actually handle this in this huge",
    "start": "2261570",
    "end": "2268050"
  },
  {
    "text": "deployment of systems how do you scale",
    "start": "2268050",
    "end": "2274980"
  },
  {
    "text": "this well fortunately the answer is really simple you don't this this",
    "start": "2274980",
    "end": "2280410"
  },
  {
    "text": "concept like this does not scale fortunately there there is a an actual solution for this we'll get to that in a",
    "start": "2280410",
    "end": "2288420"
  },
  {
    "text": "second apparently the what you get is an unmanageable mess of systems",
    "start": "2288420",
    "end": "2293670"
  },
  {
    "text": "communicating to each other right so there's this shipping module that wants",
    "start": "2293670",
    "end": "2299310"
  },
  {
    "text": "to know an order is placed right because it needs to ship that stuff that's great",
    "start": "2299310",
    "end": "2304579"
  },
  {
    "text": "but in the silo called order management they go like oh well it's not that",
    "start": "2304579",
    "end": "2311310"
  },
  {
    "text": "simple it's not just like an order was placed right there's stuff happening it's really complex don't worry you",
    "start": "2311310",
    "end": "2317520"
  },
  {
    "text": "don't understand but so they talked about an order cruise created items were",
    "start": "2317520",
    "end": "2323130"
  },
  {
    "text": "added I just removed shipping addresses for added billing addresses Lola and then maybe after a while they finally",
    "start": "2323130",
    "end": "2329940"
  },
  {
    "text": "confirmed the order right and there's a there's a language mismatch here and",
    "start": "2329940",
    "end": "2337550"
  },
  {
    "text": "again just like the example earlier we're going to copy knowledge or logic",
    "start": "2337550",
    "end": "2345060"
  },
  {
    "text": "of the mathematics in this case of what does it mean for in order to replace and what is the kind of information that we",
    "start": "2345060",
    "end": "2351000"
  },
  {
    "text": "need and they need to learn each other's language to be able to do this",
    "start": "2351000",
    "end": "2358970"
  },
  {
    "text": "fortunately the solution is in domain-driven design they define this",
    "start": "2359780",
    "end": "2365970"
  },
  {
    "text": "concept called bounded context and a bounded context is really a language barrier is within a bounded",
    "start": "2365970",
    "end": "2373500"
  },
  {
    "text": "context people speak the same language they they use words that have specific meaning and those words might also be",
    "start": "2373500",
    "end": "2379860"
  },
  {
    "text": "used in other contexts but it has a slightly different meaning right and we want to be very careful about",
    "start": "2379860",
    "end": "2386360"
  },
  {
    "text": "transitioning this boundary so within a",
    "start": "2386360",
    "end": "2392040"
  },
  {
    "text": "context is it's safe to share information is safe to share all these events that you're producing and it's",
    "start": "2392040",
    "end": "2398310"
  },
  {
    "text": "safe to consume events that were that are speaking the language you understand right but as soon as you cross that",
    "start": "2398310",
    "end": "2406590"
  },
  {
    "text": "boundary you want to be more conscious about what kind of events you emit right what kind of information do you want to",
    "start": "2406590",
    "end": "2413520"
  },
  {
    "text": "include and typically the events across these boundaries are the events we call",
    "start": "2413520",
    "end": "2418530"
  },
  {
    "text": "milestone events they represent something slightly more important than anything else that happens right and",
    "start": "2418530",
    "end": "2425310"
  },
  {
    "text": "especially if you use event sourcing everything is in events every little",
    "start": "2425310",
    "end": "2431040"
  },
  {
    "text": "change no matter how small is an event and you do not want others other",
    "start": "2431040",
    "end": "2437370"
  },
  {
    "text": "components to be tightly coupled to those nitty gritty details so we want to",
    "start": "2437370",
    "end": "2443040"
  },
  {
    "text": "be more conscious about those those events and in some cases that might mean they are very coarse-grained not as",
    "start": "2443040",
    "end": "2450900"
  },
  {
    "text": "frequent event containing a lot of hey an order was placed here's some information that we are going to or",
    "start": "2450900",
    "end": "2458790"
  },
  {
    "text": "here's all the information of the order and you get these fad events right so let's go see that example and there",
    "start": "2458790",
    "end": "2466140"
  },
  {
    "text": "might be there might be a component there in the middle of the boundary saying okay if all this happened I'm going to use that information to publish",
    "start": "2466140",
    "end": "2473040"
  },
  {
    "text": "publish this massive event but of course events were not the only building blocks",
    "start": "2473040",
    "end": "2478050"
  },
  {
    "text": "so we can also use an event as a trigger and then do a query and send that information out another approach would",
    "start": "2478050",
    "end": "2486990"
  },
  {
    "text": "be to have very small events just say hey this ID this order ID represents an",
    "start": "2486990",
    "end": "2494700"
  },
  {
    "text": "order that was just confirmed if you want to know anything query it right",
    "start": "2494700",
    "end": "2500240"
  },
  {
    "text": "because maybe the sender doesn't know what kind of information the ian's are really interested in both have",
    "start": "2500240",
    "end": "2507119"
  },
  {
    "text": "their pros and cons right basically in a small-scale event is a request for DDoS",
    "start": "2507119",
    "end": "2512480"
  },
  {
    "text": "right you send out this event hey this order changed now every component that receives that events will start querying",
    "start": "2512480",
    "end": "2519000"
  },
  {
    "text": "your your models for information so it's basically a DDoS me with a was a bunch",
    "start": "2519000",
    "end": "2525150"
  },
  {
    "text": "of queries now sometimes I got the",
    "start": "2525150",
    "end": "2531420"
  },
  {
    "text": "question or quite often I got the question okay you started off with this axon framework and now you started talking about messaging and etc where",
    "start": "2531420",
    "end": "2537960"
  },
  {
    "text": "does this axon framework thing fits in this large-scale micro-services story and basically it",
    "start": "2537960",
    "end": "2545460"
  },
  {
    "text": "since axon framework is more of an implementation framework it's it's Java based apache license so you can freely",
    "start": "2545460",
    "end": "2552690"
  },
  {
    "text": "grab a copy and start playing with it it works well I said within a certain bounded context within the applications",
    "start": "2552690",
    "end": "2559680"
  },
  {
    "text": "inside within the components inside and it gives you a Java based API towards an",
    "start": "2559680",
    "end": "2565770"
  },
  {
    "text": "event bus query bus and command bus which gives you the location transparency abstraction that you need",
    "start": "2565770",
    "end": "2571920"
  },
  {
    "text": "to be able to scale this system if if the necessity comes comes by and it's",
    "start": "2571920",
    "end": "2581250"
  },
  {
    "text": "very important that the business logic and the infrastructure logic are separated because the infrastructure",
    "start": "2581250",
    "end": "2586589"
  },
  {
    "text": "logic depends on your noun functionals right if you're non-functional change you do not want to change any of the",
    "start": "2586589",
    "end": "2593430"
  },
  {
    "text": "business logic code that you've written right so having that separation is very important so within the my within let's",
    "start": "2593430",
    "end": "2602220"
  },
  {
    "text": "say deployable units you would have a axon framework as a framework to handle",
    "start": "2602220",
    "end": "2610380"
  },
  {
    "text": "the communication for you and it communicates between components within that same VM but of course we might have",
    "start": "2610380",
    "end": "2619020"
  },
  {
    "text": "extracted some of those components to different VMs and now we need a way to get that communication across and",
    "start": "2619020",
    "end": "2624990"
  },
  {
    "text": "there's a lot of hooks and api's through a lot of libraries some of them open",
    "start": "2624990",
    "end": "2630390"
  },
  {
    "text": "source some of not that you can use to to get messages across from one VM to another and obviously we've",
    "start": "2630390",
    "end": "2637339"
  },
  {
    "text": "we've we've built some of those ourselves as well and the way that works",
    "start": "2637339",
    "end": "2644239"
  },
  {
    "text": "is we routing based on what we call just enough intelligence and we know that we",
    "start": "2644239",
    "end": "2649849"
  },
  {
    "text": "all know about es B's right are there any members of the ESP fan club in here oh that's it",
    "start": "2649849",
    "end": "2657049"
  },
  {
    "text": "surprise one he raises his hand like this but these bees are very smart",
    "start": "2657049",
    "end": "2663140"
  },
  {
    "text": "systems right they know they understand the messages that your you're sending and in in a lot of cases I will not say",
    "start": "2663140",
    "end": "2670759"
  },
  {
    "text": "all apparently in a lot of cases this means that there's a lot of logic also",
    "start": "2670759",
    "end": "2675979"
  },
  {
    "text": "implemented in this ESB and then the ESB Department as a lot of these installations end up with they they've",
    "start": "2675979",
    "end": "2683719"
  },
  {
    "text": "got control on everything so every project has to wait for these B guys to implement something that does not work",
    "start": "2683719",
    "end": "2690650"
  },
  {
    "text": "well in in certain environments so what do we do we go to the opposite we go to",
    "start": "2690650",
    "end": "2696019"
  },
  {
    "text": "typical message brokers like the JMS or AMQP based brokers and they are somewhat",
    "start": "2696019",
    "end": "2704029"
  },
  {
    "text": "Dumber when it comes to the meaning of messages they're just pops up systems and they're byte arrays in and byte",
    "start": "2704029",
    "end": "2710719"
  },
  {
    "text": "arrays outs and there might be a little bit of routing but we think the the",
    "start": "2710719",
    "end": "2716719"
  },
  {
    "text": "sweet spot is in just understanding whether it's a command the query our RA or an event because they have different",
    "start": "2716719",
    "end": "2722839"
  },
  {
    "text": "routing patterns and if you know that oh I've got a query I just need to route it to a component that has said it can",
    "start": "2722839",
    "end": "2729710"
  },
  {
    "text": "handle that query we can do very smart routing based on just that little",
    "start": "2729710",
    "end": "2735469"
  },
  {
    "text": "information of what type of message is it and now the sender doesn't need to know where a certain component is which",
    "start": "2735469",
    "end": "2742430"
  },
  {
    "text": "component is responsible for dealing with this specific request we don't need we don't need to know a service name or",
    "start": "2742430",
    "end": "2748309"
  },
  {
    "text": "or worse a URL of a specific service that we need to invoke basically that's",
    "start": "2748309",
    "end": "2755779"
  },
  {
    "text": "what we are about and this this whole talk is more or less our our experience",
    "start": "2755779",
    "end": "2762410"
  },
  {
    "text": "in what pragmatic event-driven micro services look like I I hope that you have some takeaways",
    "start": "2762410",
    "end": "2770160"
  },
  {
    "text": "from from this talk thank you",
    "start": "2770160",
    "end": "2774619"
  },
  {
    "text": "any questions hey think if we're to talk",
    "start": "2779460",
    "end": "2789130"
  },
  {
    "text": "a question about the event sourcing part how do you handle gdpr and people say I want my data delete it and it's in the",
    "start": "2789130",
    "end": "2795130"
  },
  {
    "text": "event yes so that's an interesting question gdpr is still fresh in our minds right",
    "start": "2795130",
    "end": "2800290"
  },
  {
    "text": "we we've passed a deadline but if we didn't get rid of the problem just quite yet there's there's two different",
    "start": "2800290",
    "end": "2806140"
  },
  {
    "text": "solutions that we see first of all is do not include any GDP are related so",
    "start": "2806140",
    "end": "2813400"
  },
  {
    "text": "personal information in your event store that's easier said than done because usually also that information is",
    "start": "2813400",
    "end": "2820090"
  },
  {
    "text": "very important to have events or an approach that we take personally is",
    "start": "2820090",
    "end": "2826240"
  },
  {
    "text": "crypto thrashing so basically you encrypt all the information that falls",
    "start": "2826240",
    "end": "2832450"
  },
  {
    "text": "under gdpr and that's usually slightly more than you anticipate you encrypt",
    "start": "2832450",
    "end": "2837640"
  },
  {
    "text": "that information in such a way that even when two values are the same and they're encrypted you have different encrypted",
    "start": "2837640",
    "end": "2843910"
  },
  {
    "text": "encryption results right that's important otherwise you just have certainly musician and you probably",
    "start": "2843910",
    "end": "2848920"
  },
  {
    "text": "still get a fine and but you encrypt that information with a key that is specific to the the subjects that you're",
    "start": "2848920",
    "end": "2860230"
  },
  {
    "text": "encrypting information of so if that subject says please forget about me you just say okay here's your key it's gone",
    "start": "2860230",
    "end": "2867520"
  },
  {
    "text": "and now that information is useless right and it will if encrypted properly",
    "start": "2867520",
    "end": "2873370"
  },
  {
    "text": "it will remain useless for so long that entire humanity will might know anyway",
    "start": "2873370",
    "end": "2878740"
  },
  {
    "text": "so that's that's some ways we we handled TV PR and we were doing that since",
    "start": "2878740",
    "end": "2885570"
  },
  {
    "text": "slightly more than a couple of weeks now any other questions then that is it",
    "start": "2885570",
    "end": "2895660"
  },
  {
    "text": "thank you very much alert you",
    "start": "2895660",
    "end": "2899680"
  }
]