[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "[Music] so a large organization for instance",
    "start": "6990",
    "end": "13230"
  },
  {
    "start": "12000",
    "end": "101000"
  },
  {
    "text": "let's take Netflix I guess I don't have an exact number but they at least have more than 1000 software engineers in",
    "start": "13230",
    "end": "21029"
  },
  {
    "text": "comparison we have 12 so there is a big difference between large organisations",
    "start": "21029",
    "end": "26880"
  },
  {
    "text": "and startups and unfortunately there exists no golden rule that you can easily apply damn so instead you have to",
    "start": "26880",
    "end": "34890"
  },
  {
    "text": "deal with a lot of trade-offs along your way Thanks slide please and before we go",
    "start": "34890",
    "end": "41040"
  },
  {
    "text": "before I go into the order into our journey details let's give me you a",
    "start": "41040",
    "end": "46110"
  },
  {
    "text": "little brief overview of what we are doing so my name is Ivana Kaiba I am the CTO of just software we are",
    "start": "46110",
    "end": "52829"
  },
  {
    "text": "start applicated at Hamburg and just software we developed just social that",
    "start": "52829",
    "end": "60420"
  },
  {
    "text": "b2b solution providing apps for collaboration and communicating to support teams working together more",
    "start": "60420",
    "end": "66780"
  },
  {
    "text": "efficiently and can you next slide",
    "start": "66780",
    "end": "72119"
  },
  {
    "text": "please and before I explain why we introduced as a start-up was very tall",
    "start": "72119",
    "end": "77970"
  },
  {
    "text": "with very less resources we introduced micro services I will take you on a",
    "start": "77970",
    "end": "84090"
  },
  {
    "text": "journey to our beginning so at the very beginning everything was one single unit",
    "start": "84090",
    "end": "89280"
  },
  {
    "text": "and every aspect so we were one team working on one collaboration product",
    "start": "89280",
    "end": "94979"
  },
  {
    "text": "implemented as one code base based on one technology stack next slide please",
    "start": "94979",
    "end": "100350"
  },
  {
    "text": "and after a while everything evolved",
    "start": "100350",
    "end": "105360"
  },
  {
    "start": "101000",
    "end": "203000"
  },
  {
    "text": "which is quite well but try it's fine because we added more and more features",
    "start": "105360",
    "end": "110549"
  },
  {
    "text": "to our product and we our number of user increased and the number of you and",
    "start": "110549",
    "end": "118670"
  },
  {
    "text": "the team was growing so that's supposed to be fantastic but instead reached a",
    "start": "118670",
    "end": "123980"
  },
  {
    "text": "point approximately one and a half years ago where everything felt kind of clunky",
    "start": "123980",
    "end": "129320"
  },
  {
    "text": "everything was kind of tied together so from the organizational perspective it",
    "start": "129320",
    "end": "134810"
  },
  {
    "text": "took quite long to get things done so discussions meetings or decisions and we",
    "start": "134810",
    "end": "141560"
  },
  {
    "text": "had no really clearly assigned responsibilities so it took a while someone felt responsible for a specific",
    "start": "141560",
    "end": "148070"
  },
  {
    "text": "action for example when a pact arise so who take takes the responsible for to analyze and fix it so our processes was",
    "start": "148070",
    "end": "156170"
  },
  {
    "text": "kind of work we're kind of slow and our productivity suffered and from the products perspective we were",
    "start": "156170",
    "end": "162440"
  },
  {
    "text": "continuously adding more features on top of it and so the user experience and user usability suffered from the",
    "start": "162440",
    "end": "169730"
  },
  {
    "text": "continuous feature amendments because instead of solving a loyal users",
    "start": "169730",
    "end": "175730"
  },
  {
    "text": "problems in a very easy way we were constantly or incurring increasingly confusing them so and from the software",
    "start": "175730",
    "end": "183200"
  },
  {
    "text": "attractor architecture perspective it was not very easy to add new features without affecting the entire system and",
    "start": "183200",
    "end": "189470"
  },
  {
    "text": "also not to release those changes that we did without redeploying without rebuilding and redeploying the entire",
    "start": "189470",
    "end": "195830"
  },
  {
    "text": "system so there involved a kind of need to split and shift things next slide",
    "start": "195830",
    "end": "202519"
  },
  {
    "text": "please so product wise that was one and",
    "start": "202519",
    "end": "209360"
  },
  {
    "start": "203000",
    "end": "250000"
  },
  {
    "text": "a half year ago we were thinking of we established the vision to divide our one",
    "start": "209360",
    "end": "214580"
  },
  {
    "text": "product or one big ball of mud into single ads and each of them taking",
    "start": "214580",
    "end": "220850"
  },
  {
    "text": "taking care of a specific use case and solving one problem and this one very well so we split it our one product into",
    "start": "220850",
    "end": "228610"
  },
  {
    "text": "several several collaboration apps taking care of document sharing or task",
    "start": "228610",
    "end": "235459"
  },
  {
    "text": "management or epinet for real-time collaboration and also for exchanging or",
    "start": "235459",
    "end": "241549"
  },
  {
    "text": "sharing corporate news and information with an enterprise social network next",
    "start": "241549",
    "end": "249140"
  },
  {
    "text": "slightly organizational wise we divided our 1",
    "start": "249140",
    "end": "255560"
  },
  {
    "start": "250000",
    "end": "349000"
  },
  {
    "text": "team into smaller multiple teams and with the goal to establish autonomous",
    "start": "255560",
    "end": "263410"
  },
  {
    "text": "cross-functional teams was well defined responsibilities so we want our teams to work on different parts of systems",
    "start": "263410",
    "end": "270040"
  },
  {
    "text": "independent furniture from each other at a different speed and with minimal impact impact across the teams we",
    "start": "270040",
    "end": "278000"
  },
  {
    "text": "assigned to each of these teams specific collaboration tabs so that the contact",
    "start": "278000",
    "end": "284330"
  },
  {
    "text": "can take care of it at these of these collaboration apps and develop and",
    "start": "284330",
    "end": "290630"
  },
  {
    "text": "deploy them at their own speed so we",
    "start": "290630",
    "end": "297050"
  },
  {
    "text": "want to release changes independently as well and fast and without affecting the entire system to gain autonomy we have",
    "start": "297050",
    "end": "304070"
  },
  {
    "text": "to get rid of dependencies and to achieve this we have also two kabobs within our software architecture so in",
    "start": "304070",
    "end": "309710"
  },
  {
    "text": "the long run we wanted to introduce micro services and after we have",
    "start": "309710",
    "end": "316340"
  },
  {
    "text": "petitioned our product into single app and split our one big team into smaller ones we were as well defined",
    "start": "316340",
    "end": "321580"
  },
  {
    "text": "responsibilities we the let the logical next step was to introduce micro",
    "start": "321580",
    "end": "327229"
  },
  {
    "text": "services to also gain autonomy and flexibility in our software architecture as well so this looks very easy at first",
    "start": "327229",
    "end": "338360"
  },
  {
    "text": "glance but it's a nice it's a lot easier to say then do because micro services",
    "start": "338360",
    "end": "347000"
  },
  {
    "text": "make slightly come with a lot of complexity that might not be obvious at",
    "start": "347000",
    "end": "352700"
  },
  {
    "start": "349000",
    "end": "454000"
  },
  {
    "text": "first glance so in a distributed systems or your micro services are communicating",
    "start": "352700",
    "end": "357740"
  },
  {
    "text": "over a slow and unreliable network and this means that these services can fail and at any time and you have to",
    "start": "357740",
    "end": "365750"
  },
  {
    "text": "establish a mechanism to make your system resilient and so you had to add complexity to handle partial failure in",
    "start": "365750",
    "end": "373130"
  },
  {
    "text": "your system and since microservices are dealing with partitioned data you are",
    "start": "373130",
    "end": "379950"
  },
  {
    "text": "losing consistency and a distributed system you also have to take care of",
    "start": "379950",
    "end": "385110"
  },
  {
    "text": "handling eventual consistency in your system and since you are now since your",
    "start": "385110",
    "end": "392330"
  },
  {
    "text": "operational complexities increases because you have to deal with more moving parts you have to add a complex",
    "start": "392330",
    "end": "399750"
  },
  {
    "text": "82-year to monitoring and deployment as well and since your micro services are",
    "start": "399750",
    "end": "405360"
  },
  {
    "text": "communicating over an API yes - you have to consider and refer to it in your testing phase as well with consumer",
    "start": "405360",
    "end": "412110"
  },
  {
    "text": "driven contractors for example and with all those complexities is that your",
    "start": "412110",
    "end": "417570"
  },
  {
    "text": "skill set is totally different than when implementing a micro service and this is",
    "start": "417570",
    "end": "422640"
  },
  {
    "text": "kind of like expensive on the other on the one hand because you either have to learn the new skill set or you hire",
    "start": "422640",
    "end": "429840"
  },
  {
    "text": "someone and hire some consultants for example and another thing that you have",
    "start": "429840",
    "end": "437250"
  },
  {
    "text": "to reflect is how to handle authentication authorization and another aspect is the development environment because you don't want your developers",
    "start": "437250",
    "end": "444420"
  },
  {
    "text": "setting up all your services and said you want to have an easy access so that they can develop their services smoothly",
    "start": "444420",
    "end": "452630"
  },
  {
    "text": "that's likely so untangling the monolith is hard work",
    "start": "452630",
    "end": "459630"
  },
  {
    "start": "454000",
    "end": "602000"
  },
  {
    "text": "and very time consuming so this development process is at first slowing down it's it's getting worse before it's",
    "start": "459630",
    "end": "466260"
  },
  {
    "text": "getting better and the transformation process itself takes far longer than you originally anticipated so at first when",
    "start": "466260",
    "end": "474360"
  },
  {
    "text": "we introduced them we missed a milestone and that's the reason why you have to take care of those complexities and take",
    "start": "474360",
    "end": "482310"
  },
  {
    "text": "your time to get your skills up to that you can run a micro service in the",
    "start": "482310",
    "end": "488010"
  },
  {
    "text": "ecosystem and if you have if you're dealing with core functionalities with a lot of dependencies it's very hard to",
    "start": "488010",
    "end": "494910"
  },
  {
    "text": "untangle all these dependencies and you don't can leave a side that you still",
    "start": "494910",
    "end": "500670"
  },
  {
    "text": "have running system that you still have to maintain and take care of so after if you look at",
    "start": "500670",
    "end": "514330"
  },
  {
    "text": "all these complexities and challenges of microservices you might ask yourself well shall I introduce Microsoft's",
    "start": "514330",
    "end": "522010"
  },
  {
    "text": "architecture or just stay on one of the architecture well and it depends it depends what you want to achieve and it",
    "start": "522010",
    "end": "529600"
  },
  {
    "text": "depends of in what what situation you are and for us it was the my procedure",
    "start": "529600",
    "end": "535990"
  },
  {
    "text": "Neetu micro-services was not only technical driven but it was organizational and product written so we",
    "start": "535990",
    "end": "542170"
  },
  {
    "text": "first divided our product into single collaboration apps and then also our one",
    "start": "542170",
    "end": "547270"
  },
  {
    "text": "team into multiple smaller team was ok with the goal to establish autonomous teams so and we want to assign to each",
    "start": "547270",
    "end": "554680"
  },
  {
    "text": "of the teams well-defined responsibilities so that everyone can work efficiently on their own",
    "start": "554680",
    "end": "559810"
  },
  {
    "text": "responsible services and in addition we want to develop and deploy independently",
    "start": "559810",
    "end": "565360"
  },
  {
    "text": "so each team should have the capability to implement it and to deploy it at",
    "start": "565360",
    "end": "571089"
  },
  {
    "text": "their own speed and rate without affecting the entire system and also without affecting the other teams and to",
    "start": "571089",
    "end": "578200"
  },
  {
    "text": "release changes quickly so that was our motivation why we introduced micro services and after you have decided well",
    "start": "578200",
    "end": "584650"
  },
  {
    "text": "next slide please let's start with micro service about how",
    "start": "584650",
    "end": "590230"
  },
  {
    "text": "how shall we start with micro services so we have your big ball of martin you try to to decompose like service out out",
    "start": "590230",
    "end": "598330"
  },
  {
    "text": "of it and so what we then derived was a kind of transformation process",
    "start": "598330",
    "end": "606209"
  },
  {
    "start": "602000",
    "end": "636000"
  },
  {
    "text": "existing consisting of different parts the first one is to identify candidates",
    "start": "606209",
    "end": "612040"
  },
  {
    "text": "which are good candidates for my per services the second one is the de coma decompose decomposition process itself",
    "start": "612040",
    "end": "619390"
  },
  {
    "text": "and the third one is the establish the micro services ecosystem that I won't have to go sequential that can also be",
    "start": "619390",
    "end": "626830"
  },
  {
    "text": "in parallel as well so let's start with identifying candidates and before we do it",
    "start": "626830",
    "end": "634100"
  },
  {
    "text": "that's next flatly we have to consider the key concepts of good modeling good",
    "start": "634100",
    "end": "639980"
  },
  {
    "start": "636000",
    "end": "705000"
  },
  {
    "text": "micro-services to achieve the main benefits out of micro services and these are the loose coupling between the",
    "start": "639980",
    "end": "649759"
  },
  {
    "text": "services and high cohesion within a service so no sorry",
    "start": "649759",
    "end": "656620"
  },
  {
    "text": "so when services are loosely coupled a change of one service shall not affect",
    "start": "656620",
    "end": "662389"
  },
  {
    "text": "the other services and you make changes easily I can make changes early to one service and deployed without changing",
    "start": "662389",
    "end": "668839"
  },
  {
    "text": "the entire system high cohesion is reflected by related that rate related",
    "start": "668839",
    "end": "674930"
  },
  {
    "text": "behavior she'll sit together so when when you change this behavior you want to change this behavior at one single",
    "start": "674930",
    "end": "681290"
  },
  {
    "text": "point if you have two changes at different parts of your system you have to redeploy all these services that are",
    "start": "681290",
    "end": "687560"
  },
  {
    "text": "related to this behavior and then your deployment process is coupled again together and that's something that we",
    "start": "687560",
    "end": "693110"
  },
  {
    "text": "don't want to achieve so this is all these are the key concepts that you have to keep in mind to to to identify",
    "start": "693110",
    "end": "700490"
  },
  {
    "text": "candidates for micro services so next slightly this related behavior is",
    "start": "700490",
    "end": "707750"
  },
  {
    "start": "705000",
    "end": "773000"
  },
  {
    "text": "usually reflected by the bounded context we have heard of before it's a pattern of the domain driven design and it's",
    "start": "707750",
    "end": "714740"
  },
  {
    "text": "reflecting the responsible cific responsibility for well-defined business",
    "start": "714740",
    "end": "720529"
  },
  {
    "text": "function a well-defined business capability okay",
    "start": "720529",
    "end": "729040"
  },
  {
    "text": "it's a half automated",
    "start": "729040",
    "end": "734170"
  },
  {
    "text": "miracle so in our case we used our collaboration abs working as bonnet",
    "start": "746399",
    "end": "753550"
  },
  {
    "text": "context as the coerce grain service boundaries and from that point we can go in and to find a great services as long",
    "start": "753550",
    "end": "759399"
  },
  {
    "text": "afterwards so and now the next part of",
    "start": "759399",
    "end": "765369"
  },
  {
    "text": "the transformation process starts the decomposition of the micro service candidates the first approach that we",
    "start": "765369",
    "end": "772540"
  },
  {
    "text": "did is that we established a coexisting",
    "start": "772540",
    "end": "779350"
  },
  {
    "start": "773000",
    "end": "874000"
  },
  {
    "text": "service from scratch and we used our drive collaboration amp with taking care",
    "start": "779350",
    "end": "785350"
  },
  {
    "text": "of document sharing and I'm spoiling it it was not a good idea but generally the",
    "start": "785350",
    "end": "792879"
  },
  {
    "text": "speaking there's nothing wrong with creating coexisting service from scratch but I will do forget to be to the",
    "start": "792879",
    "end": "800980"
  },
  {
    "text": "disadvantages in the next slide but what we did and this one's at the coexisting service we were creating it from scratch",
    "start": "800980",
    "end": "807819"
  },
  {
    "text": "and and established a document sharing",
    "start": "807819",
    "end": "812920"
  },
  {
    "text": "service itself which has the data authority over documents and so just joy",
    "start": "812920",
    "end": "820839"
  },
  {
    "text": "itself owns the data or thority over that means and each document has an author assigned and the author itself",
    "start": "820839",
    "end": "829179"
  },
  {
    "text": "it's still stemming from the profile management which is still kept in the monolith itself so the next question",
    "start": "829179",
    "end": "836679"
  },
  {
    "text": "arise so whenever we display a document shall we then request the author information directly directly from the",
    "start": "836679",
    "end": "842139"
  },
  {
    "text": "models or shall we then keep it redundant in our and our drive app so that's what we did we copied we kept a",
    "start": "842139",
    "end": "849429"
  },
  {
    "text": "redundant data of the profile information in our in our new service and to keep it in zinc we've established",
    "start": "849429",
    "end": "856299"
  },
  {
    "text": "a message broker that the monolith itself is then publishing modification",
    "start": "856299",
    "end": "861369"
  },
  {
    "text": "events to to whenever a profile data has been updated so that the marks of the",
    "start": "861369",
    "end": "867879"
  },
  {
    "text": "new one can consume it and update it and a tech accordingly well to be honest",
    "start": "867879",
    "end": "876449"
  },
  {
    "start": "874000",
    "end": "960000"
  },
  {
    "text": "it was very very heavy undertake because we did all at once as I was mentioning",
    "start": "876449",
    "end": "882930"
  },
  {
    "text": "before it was not an exact equivalent of the existing service instead we added",
    "start": "882930",
    "end": "888720"
  },
  {
    "text": "more features in the same process step and we introduced a totally new data",
    "start": "888720",
    "end": "894480"
  },
  {
    "text": "structure because we also had wanted to cover some specific requirements as well",
    "start": "894480",
    "end": "899639"
  },
  {
    "text": "and also a new user interface to to improve the user experience itself and",
    "start": "899639",
    "end": "906480"
  },
  {
    "text": "in the meantime we still have to maintain and run the current system so this took a long time and was kind of",
    "start": "906480",
    "end": "912959"
  },
  {
    "text": "frustrating because we didn't get those results very quickly and we could not really gain experience through the",
    "start": "912959",
    "end": "919920"
  },
  {
    "text": "process by taking this first document as a service and destructiveness of the",
    "start": "919920",
    "end": "926399"
  },
  {
    "text": "service and adding new features on top of it as well so instead we should have",
    "start": "926399",
    "end": "933240"
  },
  {
    "text": "focused on smaller chunks and so what we did instead were the next service that",
    "start": "933240",
    "end": "939540"
  },
  {
    "text": "we the next collaboration app that we used as a candidate for micro services is that we split it in smaller chunks",
    "start": "939540",
    "end": "946470"
  },
  {
    "text": "and going from top to down so we have",
    "start": "946470",
    "end": "955139"
  },
  {
    "text": "identified the next candidate for micro services and what we did first is that",
    "start": "955139",
    "end": "961889"
  },
  {
    "start": "960000",
    "end": "998000"
  },
  {
    "text": "we extracted the user interface first as a separate app extracting the web client and the business logic itself is at this",
    "start": "961889",
    "end": "970199"
  },
  {
    "text": "step still residing and then the monolith and the web client itself is the monolith it's introducing a numerous",
    "start": "970199",
    "end": "977819"
  },
  {
    "text": "API which can be addressed by the new extracted web web client so this gives us the advantage that we can develop and",
    "start": "977819",
    "end": "986069"
  },
  {
    "text": "deploy the web app independently and that we can iterate on the",
    "start": "986069",
    "end": "991320"
  },
  {
    "text": "on the user-interface very very rapidly so that's the first step that we did the",
    "start": "991320",
    "end": "999750"
  },
  {
    "start": "998000",
    "end": "1042000"
  },
  {
    "text": "second step is then extracting the business logic and that is more work",
    "start": "999750",
    "end": "1007430"
  },
  {
    "text": "than extracting the web client because you also have to take care of the dependency that it had before in the",
    "start": "1007430",
    "end": "1013339"
  },
  {
    "text": "monolith so for every dependency that you had and the ammonal is is that you have to specify or provide an api that",
    "start": "1013339",
    "end": "1022029"
  },
  {
    "text": "on your new servers so for example if the monitors are still accessing our new",
    "start": "1022029",
    "end": "1027199"
  },
  {
    "text": "service we provided for example a REST API console could also be another one and and at that point we are still",
    "start": "1027199",
    "end": "1036740"
  },
  {
    "text": "accessing the same data storage and that's the one that we are untangling the next because to become a standalone",
    "start": "1036740",
    "end": "1046100"
  },
  {
    "start": "1042000",
    "end": "1087000"
  },
  {
    "text": "decoupled service we finally need to split the data storage as well so that",
    "start": "1046100",
    "end": "1052970"
  },
  {
    "text": "our new service is becoming the data Authority or is getting the data authority of its own business functions",
    "start": "1052970",
    "end": "1059330"
  },
  {
    "text": "and in case that you had keeping redundant data that we did for example with our drive app like that we kept the",
    "start": "1059330",
    "end": "1065330"
  },
  {
    "text": "author data redundant as as soon as you do that you have to keep keep them somehow and zinc and you for example and",
    "start": "1065330",
    "end": "1072049"
  },
  {
    "text": "we did it by establishing a message broker so whenever the redundant data has been updated and the monoliths and",
    "start": "1072049",
    "end": "1078770"
  },
  {
    "text": "the event has been submitted and the consumer has been updating it accordingly so when you're dealing with",
    "start": "1078770",
    "end": "1091360"
  },
  {
    "start": "1087000",
    "end": "1174000"
  },
  {
    "text": "several candidates for micro services you ask yourself okay which one shall I do first which I will show the first",
    "start": "1091360",
    "end": "1097100"
  },
  {
    "text": "address and the easy principle is to extract those that are",
    "start": "1097100",
    "end": "1103309"
  },
  {
    "text": "very easy to extract because they have less or very few dependencies and",
    "start": "1103309",
    "end": "1110049"
  },
  {
    "text": "because when you start with those that are easy to extract you are gaining a lot of experience in a short period of",
    "start": "1110049",
    "end": "1116570"
  },
  {
    "text": "time and so you are then also getting experiences might",
    "start": "1116570",
    "end": "1121710"
  },
  {
    "text": "services but also with the extraction process in particular and then you can also focus on that one that gives you",
    "start": "1121710",
    "end": "1128700"
  },
  {
    "text": "the most benefit when extracting a true micro-services for example if you have some services or some candidates that",
    "start": "1128700",
    "end": "1134700"
  },
  {
    "text": "change frequently then it's a good candidate to use it as a next one and so",
    "start": "1134700",
    "end": "1141179"
  },
  {
    "text": "then after you have created all you have you converted into my per service you can then deploy changes faster than",
    "start": "1141179",
    "end": "1147899"
  },
  {
    "text": "before in other words another option is that you are extracting those that are using",
    "start": "1147899",
    "end": "1155730"
  },
  {
    "text": "different resource requirements for example if you using someone with high",
    "start": "1155730",
    "end": "1161100"
  },
  {
    "text": "memory consumption you can deploy it on server with high what high equipped",
    "start": "1161100",
    "end": "1167250"
  },
  {
    "text": "memory so you can scale your micro services world easily and other thing is",
    "start": "1167250",
    "end": "1174630"
  },
  {
    "start": "1174000",
    "end": "1357000"
  },
  {
    "text": "that you should stop feeding your monolith because when you're carving out",
    "start": "1174630",
    "end": "1180929"
  },
  {
    "text": "your services on your one side and you're adding new features or new functions on the monitors then your",
    "start": "1180929",
    "end": "1187649"
  },
  {
    "text": "monitors not going to shrink instead it's staying the same or in worst case",
    "start": "1187649",
    "end": "1192809"
  },
  {
    "text": "it's even growing and it slows down your transformation process so the next thing",
    "start": "1192809",
    "end": "1200220"
  },
  {
    "text": "is that I would like to address is establish a Microsoft ecosystem and it might be kind of particular for us",
    "start": "1200220",
    "end": "1206340"
  },
  {
    "text": "because we are running our services our product not only in the cloud but also on-premises so and we have large",
    "start": "1206340",
    "end": "1214980"
  },
  {
    "text": "customers that require to run our services on their own machines so we have also established a ecosystem and so",
    "start": "1214980",
    "end": "1223340"
  },
  {
    "text": "the first is that after we have untangled our micro services how do we",
    "start": "1223340",
    "end": "1230640"
  },
  {
    "text": "address them how do we access them from the internet from the public internet from the client from the user interface and one thing is you could directly",
    "start": "1230640",
    "end": "1238169"
  },
  {
    "text": "access them through a user interface but this runs into the problem that you are exposing some parts of your internal API",
    "start": "1238169",
    "end": "1245720"
  },
  {
    "text": "that are usually related to user service communication and in case of the",
    "start": "1245720",
    "end": "1251250"
  },
  {
    "text": "services are running on on different domains especially with the JavaScript liens you have also enabled",
    "start": "1251250",
    "end": "1257630"
  },
  {
    "text": "cross-origin resource sharing and also your client might do instead in terms of",
    "start": "1257630",
    "end": "1263960"
  },
  {
    "text": "in case of retrieving information from several micro services you have to do",
    "start": "1263960",
    "end": "1269240"
  },
  {
    "text": "multiple round trips and you also might have different clients a mobile client",
    "start": "1269240",
    "end": "1274640"
  },
  {
    "text": "and a desktop client and they might have different needs so what you can",
    "start": "1274640",
    "end": "1279919"
  },
  {
    "text": "establish then is an API gateway to work as an adapter as a single point of entry",
    "start": "1279919",
    "end": "1285320"
  },
  {
    "text": "for you micro services world and it this one eliminates your course requirements and because we are now running on one",
    "start": "1285320",
    "end": "1293480"
  },
  {
    "text": "single domain on one domain and it keeps your internal parts of your API inside",
    "start": "1293480",
    "end": "1299929"
  },
  {
    "text": "of your entire internal micro services world and it might be a gateway as well",
    "start": "1299929",
    "end": "1306340"
  },
  {
    "text": "also handled like protocol translation and also provides caching mechanism so",
    "start": "1306340",
    "end": "1313760"
  },
  {
    "text": "our monitors itself was mainly implemented in Java and we used for our",
    "start": "1313760",
    "end": "1323120"
  },
  {
    "text": "ecosystem we use mostly Netflix open source software and with the spring",
    "start": "1323120",
    "end": "1330889"
  },
  {
    "text": "cloud libraries and Netflix OSS provides a lot of frameworks libraries to build",
    "start": "1330889",
    "end": "1338330"
  },
  {
    "text": "your own micro service architecture and infrastructure so spring cloud provides",
    "start": "1338330",
    "end": "1343970"
  },
  {
    "text": "a very easy interaction with us most networks OSS just was adding dependencies to your class pass and",
    "start": "1343970",
    "end": "1350630"
  },
  {
    "text": "annotate something I really bring up some examples later on so the API",
    "start": "1350630",
    "end": "1360230"
  },
  {
    "start": "1357000",
    "end": "1619000"
  },
  {
    "text": "gateway is the first citizen of our micro services ecosystem now the next one is like the authorization service or",
    "start": "1360230",
    "end": "1367970"
  },
  {
    "text": "there's a reservation handling and securing a monolith is easy because you",
    "start": "1367970",
    "end": "1373070"
  },
  {
    "text": "usually have a common security component which takes care of the authorization in",
    "start": "1373070",
    "end": "1379789"
  },
  {
    "text": "your request handling chain and then propagates user formation to your subsequent method",
    "start": "1379789",
    "end": "1385620"
  },
  {
    "text": "calls and they can trust this information in securing microservice instead is a lot it's a lot difficult",
    "start": "1385620",
    "end": "1394830"
  },
  {
    "text": "because you have to figure out how services can trust each other and you",
    "start": "1394830",
    "end": "1401789"
  },
  {
    "text": "also have to avoid handling authorization in every micro-services and this something is something that can",
    "start": "1401789",
    "end": "1409289"
  },
  {
    "text": "be handled by introducing and global authorization server which takes care of",
    "start": "1409289",
    "end": "1414630"
  },
  {
    "text": "this cross-cutting concern of authorization so we established an all whole server to be to run as a own",
    "start": "1414630",
    "end": "1424409"
  },
  {
    "text": "service and our API gateway so this all",
    "start": "1424409",
    "end": "1430409"
  },
  {
    "text": "servers assessing is as a providing access token that the user interface can use Texas specific resources to address",
    "start": "1430409",
    "end": "1439820"
  },
  {
    "text": "resources from the micro services themselves and our API gateway in this in this context it's been used as an OS",
    "start": "1439820",
    "end": "1447899"
  },
  {
    "text": "token relay that means that after the the user interface has obtained this",
    "start": "1447899",
    "end": "1455399"
  },
  {
    "text": "access token it's probably it's publishing the access token along with the original request to the micro",
    "start": "1455399",
    "end": "1460500"
  },
  {
    "text": "services itself one downside is with this approaches that the micro service itself still have to check nabela G the",
    "start": "1460500",
    "end": "1467450"
  },
  {
    "text": "well validity of the token and additionally have also to retreat user",
    "start": "1467450",
    "end": "1473340"
  },
  {
    "text": "information so the skin causes to hire higher load on the authorization service so that could be also another approach",
    "start": "1473340",
    "end": "1480419"
  },
  {
    "text": "that you introduced in JSON web token instead to decrease the load of the",
    "start": "1480419",
    "end": "1488850"
  },
  {
    "text": "authorization service mm-hmm you have to eliminate the token validation and also the ritual of the user information and",
    "start": "1488850",
    "end": "1495799"
  },
  {
    "text": "we could instead carried the user information as an identity claim on a",
    "start": "1495799",
    "end": "1501179"
  },
  {
    "text": "JSON web token in addition this JSON web token is automatically be signed by the",
    "start": "1501179",
    "end": "1508080"
  },
  {
    "text": "authorization service so that the Micra services themselves can trust this information the able API gateway it",
    "start": "1508080",
    "end": "1515549"
  },
  {
    "text": "works as a Constanza lations so was it does when the user the user interface your client",
    "start": "1515549",
    "end": "1522350"
  },
  {
    "text": "requests an access token and obtained after it has obtained this access token",
    "start": "1522350",
    "end": "1527930"
  },
  {
    "text": "it sends this token along with its request to the API gateway and the API",
    "start": "1527930",
    "end": "1532970"
  },
  {
    "text": "gateway does do the translation so it extracts the access token and used this",
    "start": "1532970",
    "end": "1539300"
  },
  {
    "text": "one to the senses to the authorization server receives an JSON web token and",
    "start": "1539300",
    "end": "1545450"
  },
  {
    "text": "prevent publishes then forwards those JSON web token along with the request to",
    "start": "1545450",
    "end": "1552230"
  },
  {
    "text": "the underlying micro-services so that they that the Micra services themselves only have to take only have to process",
    "start": "1552230",
    "end": "1559160"
  },
  {
    "text": "this this web token which is quite easy to implement the next citizen of our",
    "start": "1559160",
    "end": "1567020"
  },
  {
    "text": "micro service ecosystem is the service discovery and my microsomes architecture",
    "start": "1567020",
    "end": "1573530"
  },
  {
    "text": "can contain up a large number of micro services and interacting with each other so how can services elia easily identify",
    "start": "1573530",
    "end": "1581650"
  },
  {
    "text": "all the running instances it would like to interact with a manual configuration",
    "start": "1581650",
    "end": "1588170"
  },
  {
    "text": "is totally impractical and is very brittle and so a service discovery",
    "start": "1588170",
    "end": "1593870"
  },
  {
    "text": "instead provides a single lookup service for each service instance registers",
    "start": "1593870",
    "end": "1598910"
  },
  {
    "text": "registering itself automatically at startup and other services can discover",
    "start": "1598910",
    "end": "1605120"
  },
  {
    "text": "those retrieve those already wretched services and discover them and then afterwards connecting to it so some",
    "start": "1605120",
    "end": "1612500"
  },
  {
    "text": "solutions are for example Netflix you agree Eureka console at cities or su PIPA and we had we used in our case we",
    "start": "1612500",
    "end": "1620720"
  },
  {
    "start": "1619000",
    "end": "1715000"
  },
  {
    "text": "used Eureka because it's together with",
    "start": "1620720",
    "end": "1625730"
  },
  {
    "text": "Sprint cloud because it's really easy integration it's very very easily to",
    "start": "1625730",
    "end": "1631730"
  },
  {
    "text": "integrate a bowler because it's only there you only have to provide you only",
    "start": "1631730",
    "end": "1638690"
  },
  {
    "text": "have to provide the respective dependencies to your class pass and",
    "start": "1638690",
    "end": "1645350"
  },
  {
    "text": "annotate on the one side your service and on the other side your service your clients that then automatically register",
    "start": "1645350",
    "end": "1651799"
  },
  {
    "text": "at startup the micro services that want to use our service itself can also be",
    "start": "1651799",
    "end": "1657799"
  },
  {
    "text": "can create on their side for example a load-balanced rest template and I come",
    "start": "1657799",
    "end": "1663409"
  },
  {
    "text": "to this one later and use the service ID and to the related rest template method",
    "start": "1663409",
    "end": "1671059"
  },
  {
    "text": "to connect to your service so and what happens in the background is that the load balance rest templates contain",
    "start": "1671059",
    "end": "1677059"
  },
  {
    "text": "connector ribbon that's the client-side dynamic load balancer to discover and to",
    "start": "1677059",
    "end": "1682159"
  },
  {
    "text": "connect your services automatically so that's the next citizen of our ecosystem",
    "start": "1682159",
    "end": "1688330"
  },
  {
    "text": "that introduced a client-side load balancer it traditionally little bundles",
    "start": "1688330",
    "end": "1694279"
  },
  {
    "text": "are our server-side components and the client-side load balancer itself is part",
    "start": "1694279",
    "end": "1699740"
  },
  {
    "text": "of the would find application and so it",
    "start": "1699740",
    "end": "1704779"
  },
  {
    "text": "makes itself aware of what services are available and makes it own choice like",
    "start": "1704779",
    "end": "1709820"
  },
  {
    "text": "what service to call at any given time",
    "start": "1709820",
    "end": "1714820"
  },
  {
    "start": "1715000",
    "end": "1791000"
  },
  {
    "text": "so we also in the service discovery",
    "start": "1715570",
    "end": "1721010"
  },
  {
    "text": "slide I was talking about the load balance rest template and that is automatic connects to ribbon and well",
    "start": "1721010",
    "end": "1727760"
  },
  {
    "text": "what ribbon itself it's a client-side load balancer and also from the Netflix OSS family and what does it does is",
    "start": "1727760",
    "end": "1734980"
  },
  {
    "text": "automatic in taghrida the service discovery to obtain the server list and",
    "start": "1734980",
    "end": "1740799"
  },
  {
    "text": "youth Eureka when its present on its last path and load balances",
    "start": "1740799",
    "end": "1745970"
  },
  {
    "text": "automatically if multiple services of our Microsoft's are available so there",
    "start": "1745970",
    "end": "1751850"
  },
  {
    "text": "is no implementation called it's all client site and you don't need your service ID configuration when carving",
    "start": "1751850",
    "end": "1761840"
  },
  {
    "text": "out services you have to in a distributed system you",
    "start": "1761840",
    "end": "1769420"
  },
  {
    "text": "have to face the fact that you have to challenge where the face of the",
    "start": "1769420",
    "end": "1775540"
  },
  {
    "text": "challenges that we are interacting over a slow and reliable network so we have to to make it more resilient we have to",
    "start": "1775540",
    "end": "1781990"
  },
  {
    "text": "define for failure that meaning that we have to introduce timeout handlings and have to provide four legs and also",
    "start": "1781990",
    "end": "1787810"
  },
  {
    "text": "circuit breaker pattern and what's the circuit breaker task we implemented as",
    "start": "1787810",
    "end": "1793300"
  },
  {
    "start": "1791000",
    "end": "1880000"
  },
  {
    "text": "with history it's another family of the another family member of the necklace",
    "start": "1793300",
    "end": "1798580"
  },
  {
    "text": "OSS it monitors every remote call that you defined as a hysterics command and",
    "start": "1798580",
    "end": "1806460"
  },
  {
    "text": "it tracks every request and creates and",
    "start": "1806460",
    "end": "1811480"
  },
  {
    "text": "counts the number of successful and failed requests that you did and with a",
    "start": "1811480",
    "end": "1818950"
  },
  {
    "text": "specific threshold the circuit breaker itself it opens and returns and failure",
    "start": "1818950",
    "end": "1826240"
  },
  {
    "text": "immediately it could be for example a failure at fallback that you have",
    "start": "1826240",
    "end": "1831430"
  },
  {
    "text": "previously previously defined or an exception as well so it's a fire fast strategy I have to make it a little",
    "start": "1831430",
    "end": "1841210"
  },
  {
    "text": "faster so I go so this happens a client-side as well so you don't need a",
    "start": "1841210",
    "end": "1846460"
  },
  {
    "text": "server you only need specific annotations to it so you define a",
    "start": "1846460",
    "end": "1852040"
  },
  {
    "text": "history command and define as public a message if you want to and you are then",
    "start": "1852040",
    "end": "1862140"
  },
  {
    "text": "automatically a history history is then monitoring your remote call and what is",
    "start": "1862140",
    "end": "1868090"
  },
  {
    "text": "also very important is that you don't forget to set your timeouts as well because this is something that history does not care care about it was taken",
    "start": "1868090",
    "end": "1875800"
  },
  {
    "text": "care of instead you have to set time off as well and what history does it does emit for",
    "start": "1875800",
    "end": "1884560"
  },
  {
    "start": "1880000",
    "end": "1921000"
  },
  {
    "text": "every acute event and its current States an activity stream which can be",
    "start": "1884560",
    "end": "1889570"
  },
  {
    "text": "displayed as through history dashboard that's kind of",
    "start": "1889570",
    "end": "1895100"
  },
  {
    "text": "a monitoring web interface which allows you to monitor your services on on service levels so we still usually have",
    "start": "1895100",
    "end": "1902210"
  },
  {
    "text": "monitoring animals on survey level and hystrix dashboard well together was turbine",
    "start": "1902210",
    "end": "1907850"
  },
  {
    "text": "that's another tool of the Netflix OSS allows you to to display the services",
    "start": "1907850",
    "end": "1914360"
  },
  {
    "text": "the status of each service and Kampala date the view itself so the current",
    "start": "1914360",
    "end": "1921800"
  },
  {
    "start": "1921000",
    "end": "1934000"
  },
  {
    "text": "ecosystem what we have covered so far is an api guideway authorization servers service discovery and monitoring",
    "start": "1921800",
    "end": "1928640"
  },
  {
    "text": "dashboard and you might think well we are done but that's not the case because",
    "start": "1928640",
    "end": "1934220"
  },
  {
    "start": "1934000",
    "end": "1986000"
  },
  {
    "text": "there are a lot of more to cover for example the central configuration management that you can establish or logging analyzing for debugging for",
    "start": "1934220",
    "end": "1941450"
  },
  {
    "text": "example that you can log across across service boundaries and what's what's",
    "start": "1941450",
    "end": "1946760"
  },
  {
    "text": "also very very important is the build process and this continues integration",
    "start": "1946760",
    "end": "1952310"
  },
  {
    "text": "continuous delivery pipeline which you already have in your in your monolith",
    "start": "1952310",
    "end": "1959930"
  },
  {
    "text": "but now you have to apply it per micro service and since the fact that you're dealing with api's now and more than",
    "start": "1959930",
    "end": "1967010"
  },
  {
    "text": "before you have to extend your testing with consumer-driven contract tests then",
    "start": "1967010",
    "end": "1972590"
  },
  {
    "text": "you have to make sure that you have a fully accessible environment for your development that you don't have to take",
    "start": "1972590",
    "end": "1979130"
  },
  {
    "text": "care as a developer for setting up all these services themselves so the lessons",
    "start": "1979130",
    "end": "1986240"
  },
  {
    "start": "1986000",
    "end": "2050000"
  },
  {
    "text": "that we learned is that during our journey and we are not there yet so we",
    "start": "1986240",
    "end": "1992150"
  },
  {
    "text": "are not at the end yet so it's that starting was decomposing and big chunks",
    "start": "1992150",
    "end": "1997370"
  },
  {
    "text": "frustrates because it takes a long time and before you get something done and",
    "start": "1997370",
    "end": "2002650"
  },
  {
    "text": "you return you receive a result and yes establishing your ecosystem takes a lot",
    "start": "2002650",
    "end": "2008890"
  },
  {
    "text": "of times and a lot of time and requires a lot of new skills and tools and so we",
    "start": "2008890",
    "end": "2015220"
  },
  {
    "text": "started at the very beginning with no explicit explicit infrastructure team and it was slowing",
    "start": "2015220",
    "end": "2022240"
  },
  {
    "text": "down the process because each team was kind of finding their own solution and so it was slowing down everything and",
    "start": "2022240",
    "end": "2029190"
  },
  {
    "text": "what also helps and which we didn't have at the very beginning as a holistic picture of the target architecture",
    "start": "2029190",
    "end": "2034629"
  },
  {
    "text": "because it keeps you focused on what's to do next and well in the end it took a",
    "start": "2034629",
    "end": "2040389"
  },
  {
    "text": "lot of takes it took and takes will take far longer than you originally anticipated because you are now going",
    "start": "2040389",
    "end": "2046690"
  },
  {
    "text": "into this completely new world so as a summary is that what we can derive from",
    "start": "2046690",
    "end": "2055809"
  },
  {
    "start": "2050000",
    "end": "2138000"
  },
  {
    "text": "our learned lessons is that it's better",
    "start": "2055809",
    "end": "2061569"
  },
  {
    "text": "just start small and split in manageable steps so service by service instead what",
    "start": "2061569",
    "end": "2066940"
  },
  {
    "text": "we did in the beginning was kind of mistake that our chunk were too too large and established teams that for",
    "start": "2066940",
    "end": "2073690"
  },
  {
    "text": "micro services that we already did with our collaboration apps but also first infrastructure because that's the",
    "start": "2073690",
    "end": "2079780"
  },
  {
    "text": "ecosystem has to to run and yet you as a developer I don't want to take care of the ecosystem all the time instead you",
    "start": "2079780",
    "end": "2086138"
  },
  {
    "text": "have to have that's our experience what we made an infrastructure team as well",
    "start": "2086139",
    "end": "2091419"
  },
  {
    "text": "and also define a target architecture to keep to stay focused on what you want to",
    "start": "2091419",
    "end": "2096700"
  },
  {
    "text": "achieve next and well yes it's from even",
    "start": "2096700",
    "end": "2102250"
  },
  {
    "text": "though it's still a long way to go we can say that's possible to transfer all",
    "start": "2102250",
    "end": "2108309"
  },
  {
    "text": "the models into micro services even with limited resources and so having said",
    "start": "2108309",
    "end": "2114640"
  },
  {
    "text": "this not only on her product but also our software architecture was made with",
    "start": "2114640",
    "end": "2121480"
  },
  {
    "text": "love sweat and tears a lot and now also with micro services thank you",
    "start": "2121480",
    "end": "2131160"
  },
  {
    "text": "you",
    "start": "2131160",
    "end": "2133220"
  }
]