[
  {
    "start": "0",
    "end": "115000"
  },
  {
    "text": "[Music]",
    "start": "990",
    "end": "7859"
  },
  {
    "text": "the hi I'm Dave McCallister I'm the strategic technologist for scalar scalars in log search and",
    "start": "12530",
    "end": "19170"
  },
  {
    "text": "management this is the only commercial portion you're going to get during this entire talk we search log files at one",
    "start": "19170",
    "end": "25680"
  },
  {
    "text": "and a half to R bytes per second we have no keyword indexing so fast simple and scalable that's our basic",
    "start": "25680",
    "end": "32668"
  },
  {
    "text": "model inside of here what I'm going to talk about today is a topic that's becoming more and more of interest to",
    "start": "32669",
    "end": "38520"
  },
  {
    "text": "people on distributed tracing and sort of where it came from as well as some of",
    "start": "38520",
    "end": "44489"
  },
  {
    "text": "the constructs and pieces behind it this is a fairly introductory talk if anybody",
    "start": "44489",
    "end": "50879"
  },
  {
    "text": "wants to go deep into this I can be bribed particularly with good guinness so as we move forward inside of that so",
    "start": "50879",
    "end": "59250"
  },
  {
    "text": "with that start off with one of my favorite lines abstractions make things easier which makes things harder this",
    "start": "59250",
    "end": "65729"
  },
  {
    "text": "applies a lot you hear this a lot in the cloud and in fact the original phrase is the cloud makes things easier which",
    "start": "65729",
    "end": "71280"
  },
  {
    "text": "makes things harder as we abstract away pieces or as we add additional",
    "start": "71280",
    "end": "76380"
  },
  {
    "text": "abstractions we create more distributed models and distributed systems we have more places for things like latency to",
    "start": "76380",
    "end": "83340"
  },
  {
    "text": "come up and bite us the problem is is that latency is one of those things to quote John mashie computer scientist I worked with back at",
    "start": "83340",
    "end": "90509"
  },
  {
    "text": "SGI bandwidth costs money latency lives forever so if you can control the latency aspects and not have",
    "start": "90509",
    "end": "98009"
  },
  {
    "text": "to be limited to the speed of light or if you are limited to speed of light you want to get as close as possible so",
    "start": "98009",
    "end": "103350"
  },
  {
    "text": "extractions make things harder the question is where things went wrong and what went wrong inside of that so world",
    "start": "103350",
    "end": "113369"
  },
  {
    "text": "it's not getting simpler this is loosely speaking the front end of an e-commerce",
    "start": "113369",
    "end": "119250"
  },
  {
    "start": "115000",
    "end": "140000"
  },
  {
    "text": "system attached to the back end of an e-commerce system and there's a ton of different pieces in service and society",
    "start": "119250",
    "end": "125340"
  },
  {
    "text": "that you're probably familiar with the concept of a PM application performance monitoring this is the new category we",
    "start": "125340",
    "end": "132540"
  },
  {
    "text": "need service this performance monitoring tracing will give us the first step in that pathway",
    "start": "132540",
    "end": "138840"
  },
  {
    "text": "and obviously connected systems are really complex a connected a distributed",
    "start": "138840",
    "end": "146110"
  },
  {
    "start": "140000",
    "end": "175000"
  },
  {
    "text": "system is one where the failure that occurs happens someplace you didn't even know you were connected to in the first",
    "start": "146110",
    "end": "151420"
  },
  {
    "text": "place and tracing will also help you identify where those pieces are inside of here interesting enough",
    "start": "151420",
    "end": "158020"
  },
  {
    "text": "Lamport wrote this in 1987 before things got really complex and we were worried",
    "start": "158020",
    "end": "163209"
  },
  {
    "text": "about things like microservices Internet of Things transports all those different",
    "start": "163209",
    "end": "168700"
  },
  {
    "text": "pieces and it's still as true today it just happens a whole heck of a lot more often so observability is one of",
    "start": "168700",
    "end": "177550"
  },
  {
    "start": "175000",
    "end": "230000"
  },
  {
    "text": "these phrases that you could hear a lot observability is basically monitoring on a chuck norris setting it's how to look",
    "start": "177550",
    "end": "183459"
  },
  {
    "text": "at deep pieces inside of here the reason that this is up here is that observability really encompasses to be",
    "start": "183459",
    "end": "190180"
  },
  {
    "text": "honest the what are called look for golden signals and the golden signals have break down into events into logs",
    "start": "190180",
    "end": "197590"
  },
  {
    "text": "into traces and into capacity and you need to be able to look at all for them",
    "start": "197590",
    "end": "203920"
  },
  {
    "text": "to truly be looking at a system otherwise you're going to be able to do this my favorite quote from Sherlock",
    "start": "203920",
    "end": "210400"
  },
  {
    "text": "Holmes you see but you do not observe for here and if all you're looking at is",
    "start": "210400",
    "end": "215680"
  },
  {
    "text": "one of those things you have no idea what you're going on underneath this is",
    "start": "215680",
    "end": "221230"
  },
  {
    "text": "like diving into the pool without knowing how deep it is so be sure that",
    "start": "221230",
    "end": "226420"
  },
  {
    "text": "you're actually looking at all of those pieces but today I want to spend some time particularly talking about the",
    "start": "226420",
    "end": "233290"
  },
  {
    "text": "tracing aspects of this and the fact that is that it's not one-dimensional for those of you who are not as maybe",
    "start": "233290",
    "end": "240880"
  },
  {
    "text": "they geometrically or geometrically challenged as I am that actually is a test rack so anything that slows you",
    "start": "240880",
    "end": "248110"
  },
  {
    "text": "down is bad so keep those all in mind so logs tracing dashboards but we're going",
    "start": "248110",
    "end": "256539"
  },
  {
    "start": "255000",
    "end": "315000"
  },
  {
    "text": "to talk about this observability is a signal-to-noise problem you start off",
    "start": "256539",
    "end": "262840"
  },
  {
    "text": "with we have a log category tracing category but data comes in randomly data does not",
    "start": "262840",
    "end": "269980"
  },
  {
    "text": "come in and nice little chunks for you in spite of the fact that people may tell you about how great their",
    "start": "269980",
    "end": "275980"
  },
  {
    "text": "structured code is the problem with structuring code is that you may not get all the information that you originally",
    "start": "275980",
    "end": "281020"
  },
  {
    "text": "had in a raw data file in an unstructured set so you've got to be able to work with both sets of",
    "start": "281020",
    "end": "286870"
  },
  {
    "text": "environments inside of here I'm gonna focus on tracing mainly because I like it for here but you actually then bring",
    "start": "286870",
    "end": "293470"
  },
  {
    "text": "it in to how you compute to it and both in a ad hoc basis as well as in a",
    "start": "293470",
    "end": "299500"
  },
  {
    "text": "recurring basis signal-to-noise is the issue that happens inside of it sort of ability don't get lost in the noise",
    "start": "299500",
    "end": "306570"
  },
  {
    "text": "tracing by the way will give you a whole heck of a lot of noise and so we're",
    "start": "306570",
    "end": "311860"
  },
  {
    "text": "gonna look at ways that people are refining that noise so distributed tracing is wrong it",
    "start": "311860",
    "end": "320680"
  },
  {
    "start": "315000",
    "end": "365000"
  },
  {
    "text": "should be distributed request tracing you can only trace things that are",
    "start": "320680",
    "end": "325870"
  },
  {
    "text": "unique so every single trace has to have a unique identifier to it it can be as",
    "start": "325870",
    "end": "334450"
  },
  {
    "text": "something as simple as the customer request ID and an e-commerce transaction",
    "start": "334450",
    "end": "339940"
  },
  {
    "text": "it could be as complex as one of the emerging standards for opa for tracing",
    "start": "339940",
    "end": "346090"
  },
  {
    "text": "distributed request tracing concepts but it has to be unique and once you have a",
    "start": "346090",
    "end": "352360"
  },
  {
    "text": "unique identifier there's all sorts of interesting data you can do without going elephant to the deep end without",
    "start": "352360",
    "end": "358780"
  },
  {
    "text": "without having to necessarily re instrument everything in the world so tracing analogs do fit together but",
    "start": "358780",
    "end": "366600"
  },
  {
    "start": "365000",
    "end": "420000"
  },
  {
    "text": "tracing is high volume high cardinality",
    "start": "366600",
    "end": "371830"
  },
  {
    "text": "it compares to log search tracing will tell you when things are not running correctly in a pattern match environment",
    "start": "371830",
    "end": "380010"
  },
  {
    "text": "tracing does not indicate what went wrong it only indicates that something",
    "start": "380010",
    "end": "385390"
  },
  {
    "text": "may be wrong and the logs at that same point in time allow you to dive into",
    "start": "385390",
    "end": "390520"
  },
  {
    "text": "what went wrong none of these solve your problem for you that's do your job",
    "start": "390520",
    "end": "396210"
  },
  {
    "text": "metrics there's another way of looking at this the monitoring capabilities from atheist for instance will indicate that",
    "start": "396210",
    "end": "402370"
  },
  {
    "text": "something may have gone wrong it'll indicate a time at that it thinks something went wrong and it does not",
    "start": "402370",
    "end": "407890"
  },
  {
    "text": "show you what went wrong the truth is still in the logs whether we like it or not because as we all know nobody reads",
    "start": "407890",
    "end": "414310"
  },
  {
    "text": "log files for fun so it's entire concept",
    "start": "414310",
    "end": "420520"
  },
  {
    "start": "420000",
    "end": "515000"
  },
  {
    "text": "is around bringing these events together I knew that was going to happen sooner or later the entire concept of this is",
    "start": "420520",
    "end": "430320"
  },
  {
    "text": "bringing these things into causal order and so when you have a distributed trace",
    "start": "430320",
    "end": "435370"
  },
  {
    "text": "environment you're actually looking at all these little events that happened with all the little segments and you want to put them into the performed",
    "start": "435370",
    "end": "442870"
  },
  {
    "text": "order that they occurred with the length of time that they occurred inside of here you want to know when something is",
    "start": "442870",
    "end": "449230"
  },
  {
    "text": "slow and what went slow not only just inside of the larger picture of the service but actually inside the service",
    "start": "449230",
    "end": "455320"
  },
  {
    "text": "itself you still want to know what's going on inside of that and then you want to be able to to in a sense look at",
    "start": "455320",
    "end": "460660"
  },
  {
    "text": "it visually this is a waterfall plot that's up at the top here slightly different version of that or even find",
    "start": "460660",
    "end": "467380"
  },
  {
    "text": "out down to the root cause analysis keep in mind that a lot of what I talk about is built on this concept of scale around",
    "start": "467380",
    "end": "474340"
  },
  {
    "text": "services whether it's a service environment somebody else is providing the service whether it's a service of",
    "start": "474340",
    "end": "479919"
  },
  {
    "text": "mesh environments such as working with sto or whether it's micro services that you built completely yourself these are",
    "start": "479919",
    "end": "486040"
  },
  {
    "text": "all really important if your problem is single threaded and monolithic you",
    "start": "486040",
    "end": "491770"
  },
  {
    "text": "probably don't need distributed tracing you can do some old technique like wool fencing and put in a little printf",
    "start": "491770",
    "end": "497410"
  },
  {
    "text": "statements that say hey I've gotten to this point at this point in time when life gets complex is when you're gonna",
    "start": "497410",
    "end": "503500"
  },
  {
    "text": "actually look at distributed tracing in a sense this is a way of how you aggregate logs and metrics together",
    "start": "503500",
    "end": "509100"
  },
  {
    "text": "rather than looking at the endpoints you're now looking at the passage of time in the middle of these two pieces",
    "start": "509100",
    "end": "515140"
  },
  {
    "text": "so terminology wise first thing you'll hear a spam a span is that the shortest",
    "start": "515140",
    "end": "523330"
  },
  {
    "text": "and smallest interval spans are the things that measure from your instrumented points and a span can be an",
    "start": "523330",
    "end": "529870"
  },
  {
    "text": "HTTP request it could be a database query let's come in here and for instance in databases you'll see",
    "start": "529870",
    "end": "535610"
  },
  {
    "text": "a query you'll see a fetch you'll see a complete you'll see all these different pieces and each one of those is its own",
    "start": "535610",
    "end": "541730"
  },
  {
    "text": "unique span inside of here and each span can have multiple sets of doing this",
    "start": "541730",
    "end": "549440"
  },
  {
    "text": "there are lots of ways of doing distributed tracing unfortunately and there are companies that are built their",
    "start": "549440",
    "end": "554960"
  },
  {
    "text": "own distributed tracing models but those things all suffer from the common thing",
    "start": "554960",
    "end": "560570"
  },
  {
    "text": "is that when you add something new to it if that service doesn't use your tracing",
    "start": "560570",
    "end": "566390"
  },
  {
    "text": "model you can't combine the traces and so you've got to make sure that you're dealing with that so spans you'll hear a",
    "start": "566390",
    "end": "573200"
  },
  {
    "text": "lot about spans you hear a lot about span IDs inside of this my slice out of",
    "start": "573200",
    "end": "578750"
  },
  {
    "text": "order sorry span elements span ID we just talked about it's the unique identifier",
    "start": "578750",
    "end": "584300"
  },
  {
    "start": "580000",
    "end": "660000"
  },
  {
    "text": "within the trace not the trace identifier there's a trace identify as",
    "start": "584300",
    "end": "590360"
  },
  {
    "text": "well the trace ID is the trace it is the start to finish of that request every",
    "start": "590360",
    "end": "597410"
  },
  {
    "text": "trace ID is unique span ideas are only unique within the trace ID they can be",
    "start": "597410",
    "end": "604190"
  },
  {
    "text": "reused and it's a pair that crosses those two things there's a parent ID",
    "start": "604190",
    "end": "609260"
  },
  {
    "text": "which said where the calls came from what the descending order looks like and there's a set of labels which are key",
    "start": "609260",
    "end": "614990"
  },
  {
    "text": "value pairs which could be whatever you want to inside of this you'll have this thing called a span context the span",
    "start": "614990",
    "end": "621320"
  },
  {
    "text": "context is a set of values which just gets shipped along for the ride in our",
    "start": "621320",
    "end": "627080"
  },
  {
    "text": "world we ship log files the raw log is part of the span context because the raw",
    "start": "627080",
    "end": "632570"
  },
  {
    "text": "log has information that's important to understanding what's going on inside of that trace environment those logs",
    "start": "632570",
    "end": "638810"
  },
  {
    "text": "provide this unique WTF moment so getting to the WTF as fast as possible",
    "start": "638810",
    "end": "645920"
  },
  {
    "text": "is really what this is about so by combining these together we can go from",
    "start": "645920",
    "end": "651100"
  },
  {
    "text": "identification to root cause analysis as fast as we possibly can so talked a",
    "start": "651100",
    "end": "658970"
  },
  {
    "text": "little bit about this but basically service one call the service to service to recall service 3 and service for up",
    "start": "658970",
    "end": "665780"
  },
  {
    "start": "660000",
    "end": "715000"
  },
  {
    "text": "here it's the starting call there is no parent ID it calls down",
    "start": "665780",
    "end": "671269"
  },
  {
    "text": "parent ID one refers back to service one it's call point parent ID two refers",
    "start": "671269",
    "end": "676819"
  },
  {
    "text": "back to service to its purview point if you know is the trace ID stays the same and the span IDs change on each one of",
    "start": "676819",
    "end": "684379"
  },
  {
    "text": "these very simple element this is a very simple model of doing this multiply that",
    "start": "684379",
    "end": "690410"
  },
  {
    "text": "time something like the FAA x' new data",
    "start": "690410",
    "end": "695989"
  },
  {
    "text": "services all microservices all planes track that data inside of there and you about 2000 those running for a single",
    "start": "695989",
    "end": "702769"
  },
  {
    "text": "transaction so all of a sudden you get life can get really confusing laser",
    "start": "702769",
    "end": "709489"
  },
  {
    "text": "doesn't work by the way are there any cats in the room so so tracers add the",
    "start": "709489",
    "end": "716839"
  },
  {
    "start": "715000",
    "end": "805000"
  },
  {
    "text": "logic so we've been talking about tracing and now we're switching to talk about tracers so tracers add that unique",
    "start": "716839",
    "end": "724850"
  },
  {
    "text": "logic that creates that unique ID and it is generated the first time the request",
    "start": "724850",
    "end": "730910"
  },
  {
    "text": "is made tracing requires instrumentation it doesn't happen for free so you've got",
    "start": "730910",
    "end": "739879"
  },
  {
    "text": "to do some work to be able to get this in the send spans are generated when the",
    "start": "739879",
    "end": "745189"
  },
  {
    "text": "request arrives at the service providing it so inbound it will create a new span",
    "start": "745189",
    "end": "750319"
  },
  {
    "text": "ID that span ID is actually coordinated to all of the others that have that same trace ID so you've got to make sure that",
    "start": "750319",
    "end": "756889"
  },
  {
    "text": "things do work correctly inside of that tracers work with your production apps",
    "start": "756889",
    "end": "762139"
  },
  {
    "text": "yeah you can work on debugging so forth but tracers are what the piece is inside the production app who actually provide",
    "start": "762139",
    "end": "768289"
  },
  {
    "text": "the information that's necessary for you to do this you still need logs logs interesting enough or the original",
    "start": "768289",
    "end": "773919"
  },
  {
    "text": "instrumentation people forget that logs are a form of instrumentation inside of here they do provide there's unique",
    "start": "773919",
    "end": "779359"
  },
  {
    "text": "details and they determine the Y inside of that by the way the little little bird here is a play on an Australian log",
    "start": "779359",
    "end": "788869"
  },
  {
    "text": "runner Australian along runners are uniquely and efficiently adapted for",
    "start": "788869",
    "end": "795889"
  },
  {
    "text": "search so I like to play on my little log runner thing so tracers goat this you'll also hear",
    "start": "795889",
    "end": "804330"
  },
  {
    "text": "the next topic which is called b3 propagation and this is how we pass data",
    "start": "804330",
    "end": "809940"
  },
  {
    "start": "805000",
    "end": "860000"
  },
  {
    "text": "from one span to another using this trace ID and decided that you'll see a",
    "start": "809940",
    "end": "815220"
  },
  {
    "text": "lot of things that I've already talked about in here the trace context that's the stuff that's just along for the ride",
    "start": "815220",
    "end": "820890"
  },
  {
    "text": "inside of here the trace ID the parent ID the span ID and then if you are doing",
    "start": "820890",
    "end": "826110"
  },
  {
    "text": "sampling within that that's where the sample counts will actually live inside of here that's extracted into a request",
    "start": "826110",
    "end": "832860"
  },
  {
    "text": "header in this case I'm using HTTP and sent back to the server span so we have a client's band or a serviceman the",
    "start": "832860",
    "end": "839160"
  },
  {
    "text": "piece that's sent into the middle that's the trace stuff is the just the stuff in the middle b3 as you can see came out of Zipkin",
    "start": "839160",
    "end": "846089"
  },
  {
    "text": "Zipkin was probably one of the first of the distributed trace environments big brother bird was a name but big brother",
    "start": "846089",
    "end": "852420"
  },
  {
    "text": "bird is too too hard to say so I began really quickly adapted to become b3 so",
    "start": "852420",
    "end": "859940"
  },
  {
    "text": "talked a little bit about how lots of companies do that so the question is do we need a standard to do this and the",
    "start": "859940",
    "end": "867660"
  },
  {
    "start": "860000",
    "end": "950000"
  },
  {
    "text": "answer very honestly is yes we have applications that are written in lots of",
    "start": "867660",
    "end": "873120"
  },
  {
    "text": "languages we actually have services that you may be receiving from your cloud vendor that you have no idea what they",
    "start": "873120",
    "end": "879540"
  },
  {
    "text": "were written in in the first place we can't write our own tracing for each one of those pieces and so we need a common",
    "start": "879540",
    "end": "887690"
  },
  {
    "text": "set of standards or common set of protocols to be able to share that",
    "start": "887690",
    "end": "892920"
  },
  {
    "text": "information through these various pieces and unfortunately like every other",
    "start": "892920",
    "end": "899280"
  },
  {
    "text": "standard having a source geek standards along in my history for this there is no",
    "start": "899280",
    "end": "907200"
  },
  {
    "text": "such thing as all standards merging together to one there is just yet another standard that approve appears",
    "start": "907200",
    "end": "912720"
  },
  {
    "text": "inside of this for this the nice thing is that if you follow widely adopted",
    "start": "912720",
    "end": "918150"
  },
  {
    "text": "standards you get to avoid vendor lock-in which is actually pretty important inside of this space there is",
    "start": "918150",
    "end": "926160"
  },
  {
    "text": "nothing quite as Lockean as having your distributor tracing where you've",
    "start": "926160",
    "end": "931620"
  },
  {
    "text": "reinvented all code and then all of a sudden somebody changes your vendor and you get to reinstall your code trust me",
    "start": "931620",
    "end": "939750"
  },
  {
    "text": "instrumenting your code once is more than enough especially for anything that's complex inside of this so let's",
    "start": "939750",
    "end": "947970"
  },
  {
    "text": "start with the ones that exist today open tracing open tracing is a project",
    "start": "947970",
    "end": "954930"
  },
  {
    "start": "950000",
    "end": "970000"
  },
  {
    "text": "in the cloud native compute foundation under the Linux Foundation auspices open tracing is pretty much been around for a",
    "start": "954930",
    "end": "962130"
  },
  {
    "text": "year a number of years now it is widely popular but it does have some",
    "start": "962130",
    "end": "968100"
  },
  {
    "text": "limitations inside of here you'll see the same set of languages inside of here",
    "start": "968100",
    "end": "974490"
  },
  {
    "start": "970000",
    "end": "1075000"
  },
  {
    "text": "we still have spans and we still have structured data that's recorded in the span we still have the span context",
    "start": "974490",
    "end": "980220"
  },
  {
    "text": "inside of here and we still have tracers that plug in for the open tracing",
    "start": "980220",
    "end": "985610"
  },
  {
    "text": "environment open tracing is just an API",
    "start": "985610",
    "end": "990680"
  },
  {
    "text": "there is no engine so you've got to be able to plug the data that's coming from",
    "start": "990680",
    "end": "996180"
  },
  {
    "text": "the traces into something else that knows how to interpret that how to build waterfall plots how to show you and how",
    "start": "996180",
    "end": "1003140"
  },
  {
    "text": "you allow you to do these things think of this pretty much as I'm gonna hand you a bunch of structured information what you do with it is your",
    "start": "1003140",
    "end": "1009770"
  },
  {
    "text": "problem and that's really where this comes into play place here some similar concepts and baggage you'll hear this",
    "start": "1009770",
    "end": "1017600"
  },
  {
    "text": "thing and only an open tracing about baggage it's stuff that gets carried along for the ride inside of here and",
    "start": "1017600",
    "end": "1023540"
  },
  {
    "text": "tracers can be anything that plug into this API popular ones are Jaeger Zipkin",
    "start": "1023540",
    "end": "1029709"
  },
  {
    "text": "Prometheus all these different things are open-source projects and they know how to deal with open tracing",
    "start": "1029709",
    "end": "1036230"
  },
  {
    "text": "environments they were also just as a sideline there were also products now",
    "start": "1036230",
    "end": "1041569"
  },
  {
    "text": "that are coming out particularly in the open source space that are of interest in building these applications that are already designed for tracing such as sto",
    "start": "1041570",
    "end": "1050570"
  },
  {
    "text": "service mesh if you're in micro services take a look at a service mesh in",
    "start": "1050570",
    "end": "1056360"
  },
  {
    "text": "particular if you're looking at Prometheus Prometheus itself is instrumented so these things have become",
    "start": "1056360",
    "end": "1063140"
  },
  {
    "text": "more and more important as we move on so can see what's going on inside of there",
    "start": "1063140",
    "end": "1069760"
  },
  {
    "text": "flying through this talk here so the",
    "start": "1069760",
    "end": "1074810"
  },
  {
    "text": "nice thing about this is that the open tracing API is also designed for scale",
    "start": "1074810",
    "end": "1080450"
  },
  {
    "start": "1075000",
    "end": "1155000"
  },
  {
    "text": "and I talked about how scale becomes more and more important inside of here so the nice thing is that the API itself",
    "start": "1080450",
    "end": "1086570"
  },
  {
    "text": "doesn't care what it goes into but it was built on scale so it was built with you know things that make it really",
    "start": "1086570",
    "end": "1095090"
  },
  {
    "text": "important to understand how they are and nice feature inside of this is that if",
    "start": "1095090",
    "end": "1102740"
  },
  {
    "text": "you do already have existing implementations you can do a crossover between your instrumentation into the",
    "start": "1102740",
    "end": "1109700"
  },
  {
    "text": "API and match it all into this environment so it becomes sort of a translator environment in this",
    "start": "1109700",
    "end": "1115940"
  },
  {
    "text": "exportation inside of here again the tracing infrastructure may live wherever it wants to and again for this light",
    "start": "1115940",
    "end": "1124280"
  },
  {
    "text": "step is probably the leader they actually created the open tracing API so that probably the would be instead of the leader inside of that marketplace",
    "start": "1124280",
    "end": "1130820"
  },
  {
    "text": "here again keep in mind your services may not be written by you may not be",
    "start": "1130820",
    "end": "1137000"
  },
  {
    "text": "written by anybody you know and so you have things like lambda surrealist environments those are also are now",
    "start": "1137000",
    "end": "1143390"
  },
  {
    "text": "being instrumented so that you can simply plug in and have the instrumentation for your service",
    "start": "1143390",
    "end": "1148610"
  },
  {
    "text": "environments as well the other major",
    "start": "1148610",
    "end": "1153800"
  },
  {
    "text": "player in the space is something called open census an open census is a google",
    "start": "1153800",
    "end": "1158840"
  },
  {
    "start": "1155000",
    "end": "1240000"
  },
  {
    "text": "open source project and has some significant differences it is an",
    "start": "1158840",
    "end": "1164900"
  },
  {
    "text": "umbrella amazing project in many ways video unlike the open tracing which is",
    "start": "1164900",
    "end": "1170420"
  },
  {
    "text": "an API only and yep I'm gonna have to sorry this is where my one slide got out of order",
    "start": "1170420",
    "end": "1177370"
  },
  {
    "text": "it's a common set of interfaces and it includes exporters so this has the",
    "start": "1181340",
    "end": "1189409"
  },
  {
    "text": "ability to plug in to almost anything and has the ability to display almost any of these players and so rather than",
    "start": "1189409",
    "end": "1196879"
  },
  {
    "text": "you having to worry about what your back-end exporter looks like open census has built that for you already",
    "start": "1196879",
    "end": "1203169"
  },
  {
    "text": "major difference not only now is my data standardized so are the ways that I'm",
    "start": "1203169",
    "end": "1210019"
  },
  {
    "text": "looking at the data I no longer need to learn a different series a different way",
    "start": "1210019",
    "end": "1215210"
  },
  {
    "text": "of seeing things I can nail actually look at this no matter where the data is coming from and see it as a common",
    "start": "1215210",
    "end": "1221509"
  },
  {
    "text": "environment so I it i use this a lot as make sure your data integrity matches up",
    "start": "1221509",
    "end": "1227590"
  },
  {
    "text": "because if you're looking at one set of tracing and you're looking at a different set of environments they may",
    "start": "1227590",
    "end": "1232850"
  },
  {
    "text": "not be anything even close to looking across so open sensing consists of three",
    "start": "1232850",
    "end": "1241820"
  },
  {
    "start": "1240000",
    "end": "1340000"
  },
  {
    "text": "basic pieces here it is libraries and the libraries you can see on the list here I actually go into some of the",
    "start": "1241820",
    "end": "1248299"
  },
  {
    "text": "feature capabilities of different libraries here it is a full implementation it's not just an API so",
    "start": "1248299",
    "end": "1254690"
  },
  {
    "text": "there are no real competing implementations inside of here it is an open source project and is incredibly",
    "start": "1254690",
    "end": "1262299"
  },
  {
    "text": "successful it's been adopted by a lot of the players that have already been open tracing a model inside of here and it",
    "start": "1262299",
    "end": "1269269"
  },
  {
    "text": "still uses propagation propagations aren't something that are called on each endpoint so it's not just an ad not just",
    "start": "1269269",
    "end": "1275990"
  },
  {
    "text": "an event based model but it's an endpoint based model so it's granularity is a little finer than we're seeing",
    "start": "1275990",
    "end": "1281749"
  },
  {
    "text": "inside of this and because it really doesn't care it can send the traces to anywhere you wanted to",
    "start": "1281749",
    "end": "1288019"
  },
  {
    "text": "Prometheus stackdriver which is the Google version for the Google Cloud Prometheus which is probably the most",
    "start": "1288019",
    "end": "1293899"
  },
  {
    "text": "popular open source monitoring tool if you haven't had a chance I strongly recommend looking at Prometheus for this",
    "start": "1293899",
    "end": "1300889"
  },
  {
    "text": "again to Zipkin which is already using open tracing Jagr already using up or tracing open",
    "start": "1300889",
    "end": "1307039"
  },
  {
    "text": "senses can just send the data there and so open census has been able to do that open census also has one major advantage",
    "start": "1307039",
    "end": "1315140"
  },
  {
    "text": "it can send it to more than one place without impacts so it's think of it in a sense check-in",
    "start": "1315140",
    "end": "1321530"
  },
  {
    "text": "data fork and send it to multiple sources at one time and that makes a big",
    "start": "1321530",
    "end": "1327049"
  },
  {
    "text": "difference in how you're dealing into that observability issue where you're trying to figure out everything that's",
    "start": "1327049",
    "end": "1332360"
  },
  {
    "text": "going on not just the one-dimensional The Horizon viewpoint of the world so",
    "start": "1332360",
    "end": "1339400"
  },
  {
    "text": "simple example I put the viewpoint a user has this goes to a front end in",
    "start": "1339400",
    "end": "1346670"
  },
  {
    "start": "1340000",
    "end": "1395000"
  },
  {
    "text": "this case this front gene was written in go there's a payment node there's a cart service node there's a spanner node",
    "start": "1346670",
    "end": "1352340"
  },
  {
    "text": "inside of here this is the services environments they're going off to it back in tracing here just HTTP tracing",
    "start": "1352340",
    "end": "1360230"
  },
  {
    "text": "for all these other pieces or something called G RPC Global RPC model also a cloud native compute foundation project",
    "start": "1360230",
    "end": "1367299"
  },
  {
    "text": "currently I believe just graduated so it's now version 1.0 inside of that and",
    "start": "1367299",
    "end": "1374350"
  },
  {
    "text": "exactly the same model trace ID still exists span ID still exists span",
    "start": "1374350",
    "end": "1380510"
  },
  {
    "text": "contacts still exist all these different pieces exist the difference is that the tracers are already built in means you",
    "start": "1380510",
    "end": "1388730"
  },
  {
    "text": "don't have to worry about building them and that's why I open census is probably there so since last year it started with",
    "start": "1388730",
    "end": "1396049"
  },
  {
    "start": "1395000",
    "end": "1505000"
  },
  {
    "text": "Java Java obviously is the most mature of these Java has the most outside",
    "start": "1396049",
    "end": "1402890"
  },
  {
    "text": "support for open census go it's starting with go and go is what Google uses",
    "start": "1402890",
    "end": "1410809"
  },
  {
    "text": "themselves and therefore it's a full API set that supports everything in the world plus things that Google doesn't",
    "start": "1410809",
    "end": "1416900"
  },
  {
    "text": "tell us about inside of that nodejs and Python all fall into place the other",
    "start": "1416900",
    "end": "1422270"
  },
  {
    "text": "languages interestingly enough are there and vary in how complete they are those",
    "start": "1422270",
    "end": "1430490"
  },
  {
    "text": "languages excuse me those languages all support the tracing concepts but they may not",
    "start": "1430490",
    "end": "1435950"
  },
  {
    "text": "support a statistical basis they may not support tagging they may not all support metrics inside of here all of them do",
    "start": "1435950",
    "end": "1442790"
  },
  {
    "text": "support context propagation because it is uniquely valuable to the determination of root cause inside",
    "start": "1442790",
    "end": "1449889"
  },
  {
    "text": "of here but as you can see what we are seeing over time is that for instance",
    "start": "1449889",
    "end": "1455609"
  },
  {
    "text": "nodejs a year ago had three of these boxes checked so nodejs has now moved",
    "start": "1455609",
    "end": "1462669"
  },
  {
    "text": "all the way up and has all the boxes checked we expected over the next year we'll see everybody every one of these",
    "start": "1462669",
    "end": "1468789"
  },
  {
    "text": "languages complete its in its checklist where it makes sense and just to add to",
    "start": "1468789",
    "end": "1478960"
  },
  {
    "text": "it if you want to keep track of it open census do is the place to go it's where",
    "start": "1478960",
    "end": "1484509"
  },
  {
    "text": "all the documentation lives it's where the status lives it's at the other place is there was a census geez",
    "start": "1484509",
    "end": "1493149"
  },
  {
    "text": "I'd tell him one of my slides but there's a place on the git er that won't actually go in and have the conversation",
    "start": "1493149",
    "end": "1498969"
  },
  {
    "text": "about what's going on at any given moment with open census so open census",
    "start": "1498969",
    "end": "1506320"
  },
  {
    "start": "1505000",
    "end": "1615000"
  },
  {
    "text": "when they built this it was purely tracing it was purely time-based information and the time based",
    "start": "1506320",
    "end": "1513549"
  },
  {
    "text": "information like I said it's useful but it's not necessarily complete and so what we're working on now is a logging",
    "start": "1513549",
    "end": "1520929"
  },
  {
    "text": "spec and the log expect is basically how to be correlate between the trace information and the log information that",
    "start": "1520929",
    "end": "1527259"
  },
  {
    "text": "the application or services is writing on I'll pick on crew banana teas it's",
    "start": "1527259",
    "end": "1532269"
  },
  {
    "text": "been a lot of time in the Kootenays world here Cobie days with its four levels of abstraction you have an",
    "start": "1532269",
    "end": "1537429"
  },
  {
    "text": "Orchestrator you have worker notes you have pods you have containers all of",
    "start": "1537429",
    "end": "1542769"
  },
  {
    "text": "those produce login information inside of this the trace information that you see is usually your application basis or",
    "start": "1542769",
    "end": "1549489"
  },
  {
    "text": "your service basis but not your abstraction level basis and so one of the challenges is how do we tie the time",
    "start": "1549489",
    "end": "1557649"
  },
  {
    "text": "frame from a distributed trace model into the abstraction level and one of",
    "start": "1557649",
    "end": "1563049"
  },
  {
    "text": "the ways that we're looking at this is through this logging structure so we want to be able to correlate logs across",
    "start": "1563049",
    "end": "1568210"
  },
  {
    "text": "all levels of abstraction to the trace content those logs and they're basically",
    "start": "1568210",
    "end": "1573639"
  },
  {
    "text": "going to be through a tagged API model inside of here we want to have the agent",
    "start": "1573639",
    "end": "1578889"
  },
  {
    "text": "pull in all the information first party through third party on the log information that's of interest for",
    "start": "1578889",
    "end": "1586150"
  },
  {
    "text": "this and then we want to have this so that people can understand how to write good first party log statements so not",
    "start": "1586150",
    "end": "1594670"
  },
  {
    "text": "necessarily replacing logging frameworks but enhancing logging frameworks so the",
    "start": "1594670",
    "end": "1603190"
  },
  {
    "text": "log frameworks themselves now understand how to pass trace information across",
    "start": "1603190",
    "end": "1608559"
  },
  {
    "text": "those various players so the nice news I gave you the two leading contenders open",
    "start": "1608559",
    "end": "1616210"
  },
  {
    "start": "1615000",
    "end": "1705000"
  },
  {
    "text": "tracing open census they're getting together so what's been going on since about",
    "start": "1616210",
    "end": "1624420"
  },
  {
    "text": "officially January really started in December is that open census and open",
    "start": "1624420",
    "end": "1630100"
  },
  {
    "text": "tracing have agreed to get together a full merger between the two projects for here it will be a single community and",
    "start": "1630100",
    "end": "1637059"
  },
  {
    "text": "it will standardize a single set of integrations inside a peer it's not",
    "start": "1637059",
    "end": "1642730"
  },
  {
    "text": "going to be one name or the other it will be a new name it's not a new project it'll just be a new name to",
    "start": "1642730",
    "end": "1649360"
  },
  {
    "text": "reflect the new combined environments the good news is that that you already",
    "start": "1649360",
    "end": "1655150"
  },
  {
    "text": "are using open tracing you won't have to rewrite a rest riman anything it'll just use the open tracing API if you're",
    "start": "1655150",
    "end": "1661960"
  },
  {
    "text": "already using open census you won't have to rewrite anything it'll use the open census API and if you're getting started",
    "start": "1661960",
    "end": "1667960"
  },
  {
    "text": "you won't have to choose so that's the nice pieces inside of here the two",
    "start": "1667960",
    "end": "1673090"
  },
  {
    "text": "things together are going to bring the two most active communities on distributed request tracing together so",
    "start": "1673090",
    "end": "1679420"
  },
  {
    "text": "we can actually make it better for everybody inside of here the open census blog has a tremendous",
    "start": "1679420",
    "end": "1685120"
  },
  {
    "text": "open census data okay and on flash blog has a tremendous amount of doing this and we'll the Google people not me will",
    "start": "1685120",
    "end": "1693640"
  },
  {
    "text": "be talking more about this in Kubik on EU coming up and very short timeframe",
    "start": "1693640",
    "end": "1698830"
  },
  {
    "text": "here so",
    "start": "1698830",
    "end": "1702809"
  },
  {
    "start": "1705000",
    "end": "1740000"
  },
  {
    "text": "if you want to play with it for yourself there's actually a fully functional demo",
    "start": "1705270",
    "end": "1711490"
  },
  {
    "text": "that's already put into place and down here at this microservices demo is",
    "start": "1711490",
    "end": "1720280"
  },
  {
    "text": "what's called the hipster store and the hipster store come on go away exit it's",
    "start": "1720280",
    "end": "1734410"
  },
  {
    "text": "not gonna let me get there is it so this",
    "start": "1734410",
    "end": "1740800"
  },
  {
    "text": "is the hipster store and the hipster store is a totally fictitious store that",
    "start": "1740800",
    "end": "1749440"
  },
  {
    "text": "Google put together purely for the sake of being able to put something together so it's a ecommerce model built on micro",
    "start": "1749440",
    "end": "1758950"
  },
  {
    "text": "services the micro service is very up-and-down on how much you're actually running inside of here it is completely",
    "start": "1758950",
    "end": "1765790"
  },
  {
    "text": "and fully instrumented it is completely in fully open sourced you can grab it",
    "start": "1765790",
    "end": "1771490"
  },
  {
    "text": "and build it well my Mac it takes me about two minutes to build it and have it up and running inside of here it's kind of not",
    "start": "1771490",
    "end": "1780640"
  },
  {
    "text": "necessarily the fastest thing on my little underpowered 2015 Mac but it's still there and it's a great way to",
    "start": "1780640",
    "end": "1788740"
  },
  {
    "text": "start looking at the code that's related as well as how the instrumentation goes together for that while I'm in here",
    "start": "1788740",
    "end": "1798970"
  },
  {
    "text": "let's go this is the github repository for the micro services demo and if you",
    "start": "1798970",
    "end": "1804730"
  },
  {
    "start": "1800000",
    "end": "1850000"
  },
  {
    "text": "notice there's STO which i mentioned which is service mesh service messages",
    "start": "1804730",
    "end": "1810550"
  },
  {
    "text": "are incredibly important when we get to micro services please take a look at those as well and then you can continue",
    "start": "1810550",
    "end": "1817300"
  },
  {
    "text": "to go down and see this so this demo if you've never played with these products",
    "start": "1817300",
    "end": "1823090"
  },
  {
    "text": "is the way to get started it will show you all the different pieces that are in place again grab this build it grab",
    "start": "1823090",
    "end": "1830830"
  },
  {
    "text": "something like prometheus Yeager or sip can play with them look at the code to understand how they were instrumented",
    "start": "1830830",
    "end": "1836770"
  },
  {
    "text": "you'll actually be impressed by how easy they they are to put in place and continue on from that oops so",
    "start": "1836770",
    "end": "1848940"
  },
  {
    "text": "how to get involved well for open census and now the combined projects mm-hmm",
    "start": "1848940",
    "end": "1855280"
  },
  {
    "start": "1850000",
    "end": "1920000"
  },
  {
    "text": "that was interesting sorry y'all are no interest in the fact",
    "start": "1855280",
    "end": "1861520"
  },
  {
    "text": "that my meeting is going on right now if you want to get involved the two places",
    "start": "1861520",
    "end": "1866550"
  },
  {
    "text": "census that instrumentation has open census it is the entire source code base",
    "start": "1866550",
    "end": "1873310"
  },
  {
    "text": "and all of the languages so github.com since this instrumentation does that likewise on get her sentence",
    "start": "1873310",
    "end": "1880060"
  },
  {
    "text": "instrumentation is the active discussion that's going on there is also an open community meeting every two weeks",
    "start": "1880060",
    "end": "1886870"
  },
  {
    "text": "anybody can come in join and find out what's going on Google runs that meeting and it varies between somewhere between",
    "start": "1886870",
    "end": "1894550"
  },
  {
    "text": "about twenty to twenty-five people every two weeks get together and talk about what's happening inside of open census and where we would like to see it go for",
    "start": "1894550",
    "end": "1902080"
  },
  {
    "text": "instance that's um one of the reasons that logs came into play is that it was obvious that while tracing information",
    "start": "1902080",
    "end": "1907540"
  },
  {
    "text": "is really important we needed to be able to go a little deeper than that these are technical meetings these are",
    "start": "1907540",
    "end": "1913390"
  },
  {
    "text": "not marketing there's no sales involved these are literally purely technical meetings but that's the best ways to get",
    "start": "1913390",
    "end": "1919750"
  },
  {
    "text": "involved here so I have two questions that come out of every time I do this",
    "start": "1919750",
    "end": "1924940"
  },
  {
    "start": "1920000",
    "end": "2065000"
  },
  {
    "text": "talk and so I'm going to cover both of them so that I don't have to answer them without slides behind it one can I store",
    "start": "1924940",
    "end": "1930880"
  },
  {
    "text": "traces for everything everywhere yes sir is if you've got a whole heck of a lot",
    "start": "1930880",
    "end": "1936400"
  },
  {
    "text": "of storage space traces are dense they take an amazing amount of space there's",
    "start": "1936400",
    "end": "1944170"
  },
  {
    "text": "a huge amount of data inside of those and they have what's called high cardinality so they don't compress well",
    "start": "1944170",
    "end": "1949930"
  },
  {
    "text": "in terms of cardinality you can kind of think of this as that columns have things that are not duplicates instead",
    "start": "1949930",
    "end": "1956560"
  },
  {
    "text": "of a database structure columns are unique values keep in mind I told you",
    "start": "1956560",
    "end": "1961750"
  },
  {
    "text": "early on that distributed request tracing must have a unique request so",
    "start": "1961750",
    "end": "1967330"
  },
  {
    "text": "you can guarantee at least one of your columns has to be unique on every single entry every single entry must have a unique",
    "start": "1967330",
    "end": "1973960"
  },
  {
    "text": "request ID so cardinality is a big deal it is not unusual in a traced",
    "start": "1973960",
    "end": "1980620"
  },
  {
    "text": "environment to have a single transaction request which is a seven-step request",
    "start": "1980620",
    "end": "1986680"
  },
  {
    "text": "have over 80 unique tracee pieces spans",
    "start": "1986680",
    "end": "1992220"
  },
  {
    "text": "nothing at all unique about that I've seen some that go to 200 spans just for",
    "start": "1992220",
    "end": "1998200"
  },
  {
    "text": "a single request transaction so this is high cardinality data so when you're",
    "start": "1998200",
    "end": "2005370"
  },
  {
    "text": "storing this keep in mind that storage unfortunately costs money if anybody's on AWS do the pricing for an SS eg SSD",
    "start": "2005370",
    "end": "2014250"
  },
  {
    "text": "drive it you know 10 terabytes and tell me what the cost looks like so keep in",
    "start": "2014250",
    "end": "2019260"
  },
  {
    "text": "mind the other thing is that when you're doing this you're gonna be writing a whole heck of a lot of data this is a",
    "start": "2019260",
    "end": "2025860"
  },
  {
    "text": "high write throughput there's a fair amount of read that happens but reads to rights rights outnumber them by about a",
    "start": "2025860",
    "end": "2032730"
  },
  {
    "text": "factor of five because you don't do the analysis as often as you're writing data inside of you",
    "start": "2032730",
    "end": "2038400"
  },
  {
    "text": "things like in Flex DB designed for time series information even Cassandra Monaco",
    "start": "2038400",
    "end": "2045300"
  },
  {
    "text": "DB are much better than your traditional databases if you're storing this data column or no sequel databases are the",
    "start": "2045300",
    "end": "2052560"
  },
  {
    "text": "way to store this type of data it is structured into a columnist approach to begin with and doesn't require munging",
    "start": "2052560",
    "end": "2059399"
  },
  {
    "text": "to do those so keep that in mind question number two I already a log",
    "start": "2059400",
    "end": "2064409"
  },
  {
    "text": "stuff isn't that good enough well the answer is for about 60% yeah it is because you're already doing this stuff",
    "start": "2064410",
    "end": "2071310"
  },
  {
    "start": "2065000",
    "end": "2165000"
  },
  {
    "text": "it's already instrumented inside of here is it as exact as what happened with the",
    "start": "2071310",
    "end": "2077669"
  },
  {
    "text": "distributive tracing no but it's gonna take you time to re instrument your application so while you're doing this",
    "start": "2077669",
    "end": "2084870"
  },
  {
    "text": "you can start doing tracing structures with your current existing logs if your",
    "start": "2084870",
    "end": "2090450"
  },
  {
    "text": "logs are sensible and have request IDs built into it any e-commerce application",
    "start": "2090450",
    "end": "2097410"
  },
  {
    "text": "I guarantee has a unique request ID for its transaction because otherwise you're",
    "start": "2097410",
    "end": "2102600"
  },
  {
    "text": "charging some customer for somebody else's purchase on their credit card every single request is going to be unique and when",
    "start": "2102600",
    "end": "2109430"
  },
  {
    "text": "you do that you end up with little things like a start a fetch a query this",
    "start": "2109430",
    "end": "2115940"
  },
  {
    "text": "one has an error that happened inside of here it came back to fix the error inside of this invoke the next",
    "start": "2115940",
    "end": "2121520"
  },
  {
    "text": "application server and ended there's a time stamp on every one of those and you",
    "start": "2121520",
    "end": "2127010"
  },
  {
    "text": "can't quite make it out but there is a time and M s how long each piece took",
    "start": "2127010",
    "end": "2132880"
  },
  {
    "text": "it's exactly the same amount of data it is not the same amount of granularity",
    "start": "2132880",
    "end": "2138080"
  },
  {
    "text": "that happened inside of that environment but it's the same kinds of data exist in",
    "start": "2138080",
    "end": "2143810"
  },
  {
    "text": "every single smart logging structure for transactions if there is no unique",
    "start": "2143810",
    "end": "2150590"
  },
  {
    "text": "identifier you can't do this but it's basically like you get to lose 50% of",
    "start": "2150590",
    "end": "2156350"
  },
  {
    "text": "your weight loss goal with no exercise it's really the model that happens inside of that so observability does",
    "start": "2156350",
    "end": "2165350"
  },
  {
    "text": "require these deep insights tracing gives you something that's unique and is something that is becoming more and more",
    "start": "2165350",
    "end": "2171290"
  },
  {
    "text": "important in a service world in a microservices world in a hybrid cloud world tracing gives you the information",
    "start": "2171290",
    "end": "2177860"
  },
  {
    "text": "about how long something took to perform and this becomes increasingly important",
    "start": "2177860",
    "end": "2183140"
  },
  {
    "text": "in times where in an e-commerce environment five seconds means somebody walked away from their shopping cart",
    "start": "2183140",
    "end": "2188870"
  },
  {
    "text": "ten seconds means they complain to their friends about you for this so it becomes really important to understand where",
    "start": "2188870",
    "end": "2194510"
  },
  {
    "text": "your slows point spots are and then figure out what caused them inside of here integrating tool sets means that",
    "start": "2194510",
    "end": "2201020"
  },
  {
    "text": "you can look into this and do deep dives without having to repeat the forensic exercise for each of these pieces is out",
    "start": "2201020",
    "end": "2207530"
  },
  {
    "text": "of here and then very honestly whatever you choose and a stay with a standard",
    "start": "2207530",
    "end": "2214190"
  },
  {
    "text": "for this and B make sure it's scales because these environments are not going",
    "start": "2214190",
    "end": "2220340"
  },
  {
    "text": "to get smaller they're not going to get get less abstract they may be easy to",
    "start": "2220340",
    "end": "2225470"
  },
  {
    "text": "produce an easy to deploy but they're not going to be any easier to resolve when something goes wrong and with that",
    "start": "2225470",
    "end": "2234080"
  },
  {
    "text": "there are questions in my last ten or so minutes you glad to take them",
    "start": "2234080",
    "end": "2240180"
  },
  {
    "text": "[Applause]",
    "start": "2240180",
    "end": "2246839"
  }
]