[
  {
    "text": "thank",
    "start": "10639",
    "end": "12519"
  },
  {
    "text": "you thank you uh I'm very honored to be",
    "start": "12519",
    "end": "15519"
  },
  {
    "text": "here uh this is my first Yao Lambda Jam",
    "start": "15519",
    "end": "18119"
  },
  {
    "text": "uh it's my first trip to Melbourne my",
    "start": "18119",
    "end": "19520"
  },
  {
    "text": "first trip to Australia I was in Sydney",
    "start": "19520",
    "end": "22119"
  },
  {
    "text": "last week uh spoke at Yao data I've had",
    "start": "22119",
    "end": "23760"
  },
  {
    "text": "a wonderful time I took a little trip to",
    "start": "23760",
    "end": "25160"
  },
  {
    "text": "Tasmania in between the conferences what",
    "start": "25160",
    "end": "27039"
  },
  {
    "text": "a fabulous and wonderful country and",
    "start": "27039",
    "end": "29000"
  },
  {
    "text": "thank you since cly to all the folks",
    "start": "29000",
    "end": "30960"
  },
  {
    "text": "from Yao for inviting me uh this is a",
    "start": "30960",
    "end": "33640"
  },
  {
    "text": "talk about Ecto Ecto is a library for",
    "start": "33640",
    "end": "36640"
  },
  {
    "text": "The Elixir programming language it is a",
    "start": "36640",
    "end": "38640"
  },
  {
    "text": "DSL over SQL um I'm I'm curious did uh",
    "start": "38640",
    "end": "42879"
  },
  {
    "text": "who here was in Dave's talk two talks",
    "start": "42879",
    "end": "44680"
  },
  {
    "text": "ago in which he did a DSL over uh yeah",
    "start": "44680",
    "end": "48239"
  },
  {
    "text": "what's interesting is this is also a DSL",
    "start": "48239",
    "end": "49760"
  },
  {
    "text": "over SQL only it's uh it's almost the",
    "start": "49760",
    "end": "52199"
  },
  {
    "text": "polar opposite philosophically um where",
    "start": "52199",
    "end": "55280"
  },
  {
    "text": "the uh DSL he showed um seeks to",
    "start": "55280",
    "end": "57280"
  },
  {
    "text": "abstract over SQL and encourage reuse uh",
    "start": "57280",
    "end": "60000"
  },
  {
    "text": "Ecto to some degree does the opposite uh",
    "start": "60000",
    "end": "63079"
  },
  {
    "text": "so you get kind of two sides of the coin",
    "start": "63079",
    "end": "64838"
  },
  {
    "text": "here which I think is an interesting",
    "start": "64839",
    "end": "66759"
  },
  {
    "text": "comparison uh so uh I am the principal",
    "start": "66759",
    "end": "69280"
  },
  {
    "text": "engineer at a company called procore we",
    "start": "69280",
    "end": "71439"
  },
  {
    "text": "build software for the construction",
    "start": "71439",
    "end": "73040"
  },
  {
    "text": "industry if you are building any sort of",
    "start": "73040",
    "end": "74799"
  },
  {
    "text": "skyscraper Stadium anything we create we",
    "start": "74799",
    "end": "77240"
  },
  {
    "text": "produce a full set of tools everything",
    "start": "77240",
    "end": "79080"
  },
  {
    "text": "you need to uh manage massive",
    "start": "79080",
    "end": "81280"
  },
  {
    "text": "construction projects here's an example",
    "start": "81280",
    "end": "83479"
  },
  {
    "text": "of one of our iPhone apps with uh",
    "start": "83479",
    "end": "85759"
  },
  {
    "text": "drawings uh you know floor plans for um",
    "start": "85759",
    "end": "88600"
  },
  {
    "text": "you know some sort of construction",
    "start": "88600",
    "end": "89720"
  },
  {
    "text": "project project uh we are in beautiful",
    "start": "89720",
    "end": "91960"
  },
  {
    "text": "sunny carpentry of California which is a",
    "start": "91960",
    "end": "94040"
  },
  {
    "text": "beautiful little Beach town on the",
    "start": "94040",
    "end": "95200"
  },
  {
    "text": "southern California coast we have a",
    "start": "95200",
    "end": "96640"
  },
  {
    "text": "large presence in Austin Texas uh and an",
    "start": "96640",
    "end": "99720"
  },
  {
    "text": "office on pit Street in Sydney um we are",
    "start": "99720",
    "end": "102119"
  },
  {
    "text": "hiring we're looking for a few Ruby on",
    "start": "102119",
    "end": "103880"
  },
  {
    "text": "Rails devs frontend JavaScript devs data",
    "start": "103880",
    "end": "106159"
  },
  {
    "text": "Engineers uh I'd love to chat with you",
    "start": "106159",
    "end": "108159"
  },
  {
    "text": "if you are interested in that it's a",
    "start": "108159",
    "end": "110399"
  },
  {
    "text": "fabulous place to work voted number four",
    "start": "110399",
    "end": "112360"
  },
  {
    "text": "place to work in the United States on",
    "start": "112360",
    "end": "113759"
  },
  {
    "text": "glass door and um I think that culture",
    "start": "113759",
    "end": "115680"
  },
  {
    "text": "translates to our Sydney office as",
    "start": "115680",
    "end": "118079"
  },
  {
    "text": "well uh I did a little talk uh just last",
    "start": "118079",
    "end": "121240"
  },
  {
    "text": "week in Sydney uh a talk called my five",
    "start": "121240",
    "end": "124240"
  },
  {
    "text": "biggest database blunders uh which is a",
    "start": "124240",
    "end": "126719"
  },
  {
    "text": "relational database talk um it got into",
    "start": "126719",
    "end": "129360"
  },
  {
    "text": "sort of an interesting conversation at",
    "start": "129360",
    "end": "130920"
  },
  {
    "text": "lunch uh with a gentleman uh uh who was",
    "start": "130920",
    "end": "133599"
  },
  {
    "text": "here um and uh we we were talking about",
    "start": "133599",
    "end": "137000"
  },
  {
    "text": "sort of different approaches to to data",
    "start": "137000",
    "end": "138800"
  },
  {
    "text": "engineering and he said uh after seeing",
    "start": "138800",
    "end": "140760"
  },
  {
    "text": "my talk about SQL uh and um what's",
    "start": "140760",
    "end": "143519"
  },
  {
    "text": "fundamentally a crud system crud is",
    "start": "143519",
    "end": "146000"
  },
  {
    "text": "create update delete uh he said yeah",
    "start": "146000",
    "end": "148280"
  },
  {
    "text": "just don't build systems like that",
    "start": "148280",
    "end": "149519"
  },
  {
    "text": "anymore um I like to send my data",
    "start": "149519",
    "end": "151800"
  },
  {
    "text": "through a a data Pipeline and then have",
    "start": "151800",
    "end": "154160"
  },
  {
    "text": "Downstream processors sort of uh process",
    "start": "154160",
    "end": "157080"
  },
  {
    "text": "the data and create different views of",
    "start": "157080",
    "end": "158640"
  },
  {
    "text": "the data and I thought to myself wow",
    "start": "158640",
    "end": "161400"
  },
  {
    "text": "what a wonderful great fantastic",
    "start": "161400",
    "end": "163200"
  },
  {
    "text": "architecture that's really scalable it's",
    "start": "163200",
    "end": "165480"
  },
  {
    "text": "distributed uh um but uh for a large",
    "start": "165480",
    "end": "168840"
  },
  {
    "text": "section of the economy of software",
    "start": "168840",
    "end": "171159"
  },
  {
    "text": "projects in the world it is simply not",
    "start": "171159",
    "end": "172959"
  },
  {
    "text": "an option uh um sir if you're making a",
    "start": "172959",
    "end": "175879"
  },
  {
    "text": "social network this is perfect uh if",
    "start": "175879",
    "end": "177800"
  },
  {
    "text": "you're doing anything to have to do with",
    "start": "177800",
    "end": "179640"
  },
  {
    "text": "uh medical uh or money um it is not an",
    "start": "179640",
    "end": "183360"
  },
  {
    "text": "option because uh in a system like that",
    "start": "183360",
    "end": "185120"
  },
  {
    "text": "there's no single source of Truth uh it",
    "start": "185120",
    "end": "187000"
  },
  {
    "text": "is also not assd compliant there's no",
    "start": "187000",
    "end": "189159"
  },
  {
    "text": "atomicity or consistency it's an",
    "start": "189159",
    "end": "191239"
  },
  {
    "text": "eventually consistent system you have",
    "start": "191239",
    "end": "193239"
  },
  {
    "text": "multiple Downstream processors of data",
    "start": "193239",
    "end": "195159"
  },
  {
    "text": "which could be out of sync leaving to",
    "start": "195159",
    "end": "197080"
  },
  {
    "text": "discrepancies uh for those of us who",
    "start": "197080",
    "end": "198959"
  },
  {
    "text": "work in domains where that uh is",
    "start": "198959",
    "end": "201120"
  },
  {
    "text": "unacceptable uh the old good",
    "start": "201120",
    "end": "202879"
  },
  {
    "text": "oldfashioned SQL relational database is",
    "start": "202879",
    "end": "205080"
  },
  {
    "text": "is really sort of the only choice uh",
    "start": "205080",
    "end": "207000"
  },
  {
    "text": "it's really the only database that",
    "start": "207000",
    "end": "208239"
  },
  {
    "text": "offers the sort of guaranteed you",
    "start": "208239",
    "end": "210280"
  },
  {
    "text": "guarantees you need if you were dealing",
    "start": "210280",
    "end": "211640"
  },
  {
    "text": "with someone's prescriptions someone's",
    "start": "211640",
    "end": "213439"
  },
  {
    "text": "bank account uh and as functional",
    "start": "213439",
    "end": "215400"
  },
  {
    "text": "programmers this can uh present some",
    "start": "215400",
    "end": "217080"
  },
  {
    "text": "challenges because we're dealing with a",
    "start": "217080",
    "end": "218560"
  },
  {
    "text": "fundamentally mutable data source right",
    "start": "218560",
    "end": "222360"
  },
  {
    "text": "and uh sometimes it can seem like these",
    "start": "222360",
    "end": "223799"
  },
  {
    "text": "things are at odds um you've noticed",
    "start": "223799",
    "end": "225640"
  },
  {
    "text": "there now been three database talks in a",
    "start": "225640",
    "end": "227480"
  },
  {
    "text": "row uh none of which have any sort of uh",
    "start": "227480",
    "end": "230280"
  },
  {
    "text": "rigorous math or category Theory uh",
    "start": "230280",
    "end": "232760"
  },
  {
    "text": "applied to them that is not uh by",
    "start": "232760",
    "end": "235079"
  },
  {
    "text": "coincidence uh it just turns out to be",
    "start": "235079",
    "end": "237000"
  },
  {
    "text": "tough to do truth be told there are sort",
    "start": "237000",
    "end": "238959"
  },
  {
    "text": "of intermediates Solutions you can Event",
    "start": "238959",
    "end": "241040"
  },
  {
    "text": "Source within a SQL database right you",
    "start": "241040",
    "end": "243599"
  },
  {
    "text": "can use materialized views within a SQL",
    "start": "243599",
    "end": "245519"
  },
  {
    "text": "database get your assd compliance",
    "start": "245519",
    "end": "247439"
  },
  {
    "text": "although tuning that can be hard uh it",
    "start": "247439",
    "end": "250120"
  },
  {
    "text": "is doable um but for the SQL developers",
    "start": "250120",
    "end": "253920"
  },
  {
    "text": "out there um this is for you so uh and",
    "start": "253920",
    "end": "257720"
  },
  {
    "text": "what I'm talking about is um this is an",
    "start": "257720",
    "end": "259880"
  },
  {
    "text": "example of a page in procore it is a",
    "start": "259880",
    "end": "261359"
  },
  {
    "text": "construction budget uh it is massively",
    "start": "261359",
    "end": "264080"
  },
  {
    "text": "this is a single web page uh which will",
    "start": "264080",
    "end": "266440"
  },
  {
    "text": "fire off 20 or 30 SQL queries Each of",
    "start": "266440",
    "end": "268600"
  },
  {
    "text": "which has seven or eight joints co uh in",
    "start": "268600",
    "end": "270960"
  },
  {
    "text": "a highly normalized database with over",
    "start": "270960",
    "end": "272479"
  },
  {
    "text": "800 tables in it um well uh uh as you",
    "start": "272479",
    "end": "276440"
  },
  {
    "text": "can imagine that's a complex app in a",
    "start": "276440",
    "end": "278080"
  },
  {
    "text": "complex domain construction management",
    "start": "278080",
    "end": "279520"
  },
  {
    "text": "is a very complex domain and a lot of",
    "start": "279520",
    "end": "281240"
  },
  {
    "text": "the complexity lives in the normalized",
    "start": "281240",
    "end": "282759"
  },
  {
    "text": "database schema so our choice of data",
    "start": "282759",
    "end": "285080"
  },
  {
    "text": "access Technologies and how we deal with",
    "start": "285080",
    "end": "286919"
  },
  {
    "text": "that is key and the right Tech uh can",
    "start": "286919",
    "end": "289520"
  },
  {
    "text": "make dealing with challenges like that",
    "start": "289520",
    "end": "291400"
  },
  {
    "text": "much easier uh in particular I want to",
    "start": "291400",
    "end": "294880"
  },
  {
    "text": "talk about Elixir uh how many of you",
    "start": "294880",
    "end": "296639"
  },
  {
    "text": "were in the uh The Elixir um sort of",
    "start": "296639",
    "end": "299919"
  },
  {
    "text": "Workshop yesterday how many of you are",
    "start": "299919",
    "end": "302840"
  },
  {
    "text": "Elixir users cool I I'll I'll kind of go",
    "start": "302840",
    "end": "305960"
  },
  {
    "text": "through this quickly because I think",
    "start": "305960",
    "end": "307039"
  },
  {
    "text": "some of you are familiar but uh Elixir",
    "start": "307039",
    "end": "308919"
  },
  {
    "text": "is a programming language it's created",
    "start": "308919",
    "end": "310400"
  },
  {
    "text": "by Jose valim uh he was a pillar of the",
    "start": "310400",
    "end": "312880"
  },
  {
    "text": "Ruby Community before he set off and",
    "start": "312880",
    "end": "314520"
  },
  {
    "text": "created his own programming language uh",
    "start": "314520",
    "end": "316600"
  },
  {
    "text": "it is functional it is very very fast uh",
    "start": "316600",
    "end": "320120"
  },
  {
    "text": "it's allows for highly concurrent data",
    "start": "320120",
    "end": "322199"
  },
  {
    "text": "processing uh it is dynamic it is",
    "start": "322199",
    "end": "324639"
  },
  {
    "text": "untyped um if you enjoyed the opening",
    "start": "324639",
    "end": "326960"
  },
  {
    "text": "keynote about type Theory this morning",
    "start": "326960",
    "end": "328840"
  },
  {
    "text": "you might hate it",
    "start": "328840",
    "end": "330280"
  },
  {
    "text": "um on the other hand um if you uh have",
    "start": "330280",
    "end": "334199"
  },
  {
    "text": "used um if you're coming from the oo",
    "start": "334199",
    "end": "336240"
  },
  {
    "text": "world if you're an application developer",
    "start": "336240",
    "end": "338080"
  },
  {
    "text": "if you are disillusioned with object",
    "start": "338080",
    "end": "339800"
  },
  {
    "text": "relational mappers and the way we've",
    "start": "339800",
    "end": "341400"
  },
  {
    "text": "dealt with Data before and slow",
    "start": "341400",
    "end": "343400"
  },
  {
    "text": "languages like JavaScript uh you might",
    "start": "343400",
    "end": "345880"
  },
  {
    "text": "absolutely love it and you might not",
    "start": "345880",
    "end": "347199"
  },
  {
    "text": "want to use anything",
    "start": "347199",
    "end": "348600"
  },
  {
    "text": "else uh it runs on the erlang virtual",
    "start": "348600",
    "end": "351520"
  },
  {
    "text": "machine uh erlang virtual machine is a a",
    "start": "351520",
    "end": "354800"
  },
  {
    "text": "some technology created in the 80s by",
    "start": "354800",
    "end": "357000"
  },
  {
    "text": "this man Joe Armstrong it was created to",
    "start": "357000",
    "end": "358840"
  },
  {
    "text": "run on telephone switches he had the",
    "start": "358840",
    "end": "360520"
  },
  {
    "text": "sort of interesting challenge of how do",
    "start": "360520",
    "end": "361880"
  },
  {
    "text": "I create a telephone system for all of",
    "start": "361880",
    "end": "364120"
  },
  {
    "text": "Europe that's highly highly highly",
    "start": "364120",
    "end": "366199"
  },
  {
    "text": "highly available highly concurrent and",
    "start": "366199",
    "end": "368840"
  },
  {
    "text": "created this wonderful virtual machine",
    "start": "368840",
    "end": "370720"
  },
  {
    "text": "with built-in parallel processing uh but",
    "start": "370720",
    "end": "373319"
  },
  {
    "text": "um it allows many many services and many",
    "start": "373319",
    "end": "376199"
  },
  {
    "text": "millions of intercommunicating processes",
    "start": "376199",
    "end": "377840"
  },
  {
    "text": "to connect together um but it's kind of",
    "start": "377840",
    "end": "380240"
  },
  {
    "text": "like an ugly Ferrari like yeah it's fast",
    "start": "380240",
    "end": "383000"
  },
  {
    "text": "but has terrible developer ergonomics",
    "start": "383000",
    "end": "385000"
  },
  {
    "text": "the syntax is obscure and strange uh the",
    "start": "385000",
    "end": "388880"
  },
  {
    "text": "tooling is showing its age is quite",
    "start": "388880",
    "end": "390680"
  },
  {
    "text": "dated and it's somewhat hard to use if",
    "start": "390680",
    "end": "392599"
  },
  {
    "text": "you're um if you're used to the nice",
    "start": "392599",
    "end": "394919"
  },
  {
    "text": "things we have today in modern",
    "start": "394919",
    "end": "396160"
  },
  {
    "text": "programming language so uh Along Came",
    "start": "396160",
    "end": "398680"
  },
  {
    "text": "Jose and he kind of mixed the best of",
    "start": "398680",
    "end": "400160"
  },
  {
    "text": "the Ruby world with the best of the",
    "start": "400160",
    "end": "401440"
  },
  {
    "text": "llang world and created Elixir uh and",
    "start": "401440",
    "end": "403759"
  },
  {
    "text": "now we have a beautiful Ferrari a",
    "start": "403759",
    "end": "405160"
  },
  {
    "text": "beautiful fast one that's both fun to",
    "start": "405160",
    "end": "406759"
  },
  {
    "text": "use and",
    "start": "406759",
    "end": "408280"
  },
  {
    "text": "performant uh and then Along Came this",
    "start": "408280",
    "end": "410880"
  },
  {
    "text": "gentleman Chris who created this uh",
    "start": "410880",
    "end": "412919"
  },
  {
    "text": "framework called Phoenix which is sort",
    "start": "412919",
    "end": "414560"
  },
  {
    "text": "of uh some people would say it's the",
    "start": "414560",
    "end": "415840"
  },
  {
    "text": "modern successor to Ruby un rails done",
    "start": "415840",
    "end": "418000"
  },
  {
    "text": "in a functional way with uh Elixir um",
    "start": "418000",
    "end": "421599"
  },
  {
    "text": "It's a Wonderful web framework buil uh",
    "start": "421599",
    "end": "423440"
  },
  {
    "text": "for creating monolithic web apps uh and",
    "start": "423440",
    "end": "425639"
  },
  {
    "text": "has built in support for database uh and",
    "start": "425639",
    "end": "428800"
  },
  {
    "text": "also at the same time support for",
    "start": "428800",
    "end": "430080"
  },
  {
    "text": "real-time communication so if you wanted",
    "start": "430080",
    "end": "431720"
  },
  {
    "text": "to make some sort of realtime",
    "start": "431720",
    "end": "433720"
  },
  {
    "text": "application uh but you're primarily a",
    "start": "433720",
    "end": "435639"
  },
  {
    "text": "web developer uh um uh Phoenix and",
    "start": "435639",
    "end": "438400"
  },
  {
    "text": "elixir gives you the best of both worlds",
    "start": "438400",
    "end": "440520"
  },
  {
    "text": "you can fundamentally use what's for the",
    "start": "440520",
    "end": "442639"
  },
  {
    "text": "most part a web framework to create for",
    "start": "442639",
    "end": "444160"
  },
  {
    "text": "instance the back end of a stream an MMO",
    "start": "444160",
    "end": "446639"
  },
  {
    "text": "RPG uh in which case you know sub",
    "start": "446639",
    "end": "449479"
  },
  {
    "text": "millisecond latencies is absolutely",
    "start": "449479",
    "end": "451160"
  },
  {
    "text": "essential um parallel uh these tools are",
    "start": "451160",
    "end": "454240"
  },
  {
    "text": "now available to um to uh developers in",
    "start": "454240",
    "end": "457599"
  },
  {
    "text": "a way that was previously inaccessible",
    "start": "457599",
    "end": "459160"
  },
  {
    "text": "and previously very hard uh this makes",
    "start": "459160",
    "end": "461120"
  },
  {
    "text": "it much much easier to create apps like",
    "start": "461120",
    "end": "462879"
  },
  {
    "text": "this um but I want to talk about a",
    "start": "462879",
    "end": "465000"
  },
  {
    "text": "specific section of this stack today uh",
    "start": "465000",
    "end": "467440"
  },
  {
    "text": "which is Ecto uh Ecto is the data access",
    "start": "467440",
    "end": "470560"
  },
  {
    "text": "portion of Phoenix although it can also",
    "start": "470560",
    "end": "472520"
  },
  {
    "text": "be used as a library to itself it's what",
    "start": "472520",
    "end": "474479"
  },
  {
    "text": "we use to interface with a relational",
    "start": "474479",
    "end": "476400"
  },
  {
    "text": "database uh and it was created by by",
    "start": "476400",
    "end": "478520"
  },
  {
    "text": "Jose uh who also created The Elixir",
    "start": "478520",
    "end": "480440"
  },
  {
    "text": "programming language uh he he follows a",
    "start": "480440",
    "end": "482520"
  },
  {
    "text": "sort of benevolent dictator model of uh",
    "start": "482520",
    "end": "484680"
  },
  {
    "text": "programming language design uh and I'm",
    "start": "484680",
    "end": "486440"
  },
  {
    "text": "really glad glad he created this library",
    "start": "486440",
    "end": "488319"
  },
  {
    "text": "because um I absolutely love it and I",
    "start": "488319",
    "end": "490560"
  },
  {
    "text": "think it solves a lot of problems with",
    "start": "490560",
    "end": "491919"
  },
  {
    "text": "sort of previous the previous generation",
    "start": "491919",
    "end": "493680"
  },
  {
    "text": "of data access libraries uh this is my",
    "start": "493680",
    "end": "496599"
  },
  {
    "text": "personal history of um using data access",
    "start": "496599",
    "end": "500280"
  },
  {
    "text": "uh starting way back in the 90s uh these",
    "start": "500280",
    "end": "503720"
  },
  {
    "text": "are mostly uh object relational mappers",
    "start": "503720",
    "end": "506319"
  },
  {
    "text": "from java and c and cold fusion and Ruby",
    "start": "506319",
    "end": "510560"
  },
  {
    "text": "um and uh it's sort of a a story of um",
    "start": "510560",
    "end": "515399"
  },
  {
    "text": "of of of of somewhat unhappiness uh most",
    "start": "515399",
    "end": "517839"
  },
  {
    "text": "of these things suffer severely from",
    "start": "517839",
    "end": "519719"
  },
  {
    "text": "flaws that uh make it really hard to uh",
    "start": "519719",
    "end": "522919"
  },
  {
    "text": "program an app well uh everything",
    "start": "522919",
    "end": "525720"
  },
  {
    "text": "problems from excessive boiler plate to",
    "start": "525720",
    "end": "528480"
  },
  {
    "text": "excessive generated code to uh a",
    "start": "528480",
    "end": "531680"
  },
  {
    "text": "proclivity for accidentally introducing",
    "start": "531680",
    "end": "533480"
  },
  {
    "text": "n plus1 queries uh in the case of Ruby's",
    "start": "533480",
    "end": "535640"
  },
  {
    "text": "active record and Ecto I think is a",
    "start": "535640",
    "end": "537760"
  },
  {
    "text": "massive massive massive Improvement sort",
    "start": "537760",
    "end": "539160"
  },
  {
    "text": "of light at the end of the tunnel if",
    "start": "539160",
    "end": "540640"
  },
  {
    "text": "you've come down this path like I have",
    "start": "540640",
    "end": "542560"
  },
  {
    "text": "uh Ecto for me is the light of the end",
    "start": "542560",
    "end": "543959"
  },
  {
    "text": "of the tunnel uh what are some problems",
    "start": "543959",
    "end": "546839"
  },
  {
    "text": "with the oldest generation of object",
    "start": "546839",
    "end": "548360"
  },
  {
    "text": "relational mappers uh a propensity to",
    "start": "548360",
    "end": "550399"
  },
  {
    "text": "accidentally create n plus1 queries is",
    "start": "550399",
    "end": "552360"
  },
  {
    "text": "one n plus1 is this is this problem say",
    "start": "552360",
    "end": "554880"
  },
  {
    "text": "you're rendering a table on a web page",
    "start": "554880",
    "end": "557560"
  },
  {
    "text": "uh you do one query to sort of Select uh",
    "start": "557560",
    "end": "561399"
  },
  {
    "text": "um sort of the the information about",
    "start": "561399",
    "end": "564000"
  },
  {
    "text": "this table like uh what records are here",
    "start": "564000",
    "end": "566079"
  },
  {
    "text": "and then as you Loop through it to",
    "start": "566079",
    "end": "567279"
  },
  {
    "text": "render the table rows you're firing a",
    "start": "567279",
    "end": "568839"
  },
  {
    "text": "query for every row uh certain object",
    "start": "568839",
    "end": "571079"
  },
  {
    "text": "relational mappers make it very easy to",
    "start": "571079",
    "end": "572720"
  },
  {
    "text": "make that mistake uh that requires a lot",
    "start": "572720",
    "end": "574839"
  },
  {
    "text": "of database round trips back and forth",
    "start": "574839",
    "end": "576519"
  },
  {
    "text": "which is devastating for performance uh",
    "start": "576519",
    "end": "579000"
  },
  {
    "text": "there's a problem that I call uh I",
    "start": "579000",
    "end": "580720"
  },
  {
    "text": "invented this term seeing Stars uh which",
    "start": "580720",
    "end": "583320"
  },
  {
    "text": "is that a lot of uh object relational",
    "start": "583320",
    "end": "585399"
  },
  {
    "text": "mappers uh will make it so that by",
    "start": "585399",
    "end": "587600"
  },
  {
    "text": "default it's select star on everything",
    "start": "587600",
    "end": "590240"
  },
  {
    "text": "uh and often times you don't want select",
    "start": "590240",
    "end": "591680"
  },
  {
    "text": "star if you have wide tables with a lot",
    "start": "591680",
    "end": "593600"
  },
  {
    "text": "of data usually you're only displaying a",
    "start": "593600",
    "end": "595519"
  },
  {
    "text": "few Fields you're pulling back a lot of",
    "start": "595519",
    "end": "596920"
  },
  {
    "text": "data that you don't need uh and that's a",
    "start": "596920",
    "end": "599920"
  },
  {
    "text": "a previous generation of Technologies",
    "start": "599920",
    "end": "601360"
  },
  {
    "text": "made that very easy to do and the other",
    "start": "601360",
    "end": "603399"
  },
  {
    "text": "one that I find a lot is forgotten",
    "start": "603399",
    "end": "605480"
  },
  {
    "text": "transactions so we're on to wrs now um",
    "start": "605480",
    "end": "608120"
  },
  {
    "text": "if you're using a relational database",
    "start": "608120",
    "end": "610120"
  },
  {
    "text": "you want to use uh the atomicity it",
    "start": "610120",
    "end": "613320"
  },
  {
    "text": "offers uh if you're doing multiple",
    "start": "613320",
    "end": "615000"
  },
  {
    "text": "rights inserts updates you want to wrap",
    "start": "615000",
    "end": "617000"
  },
  {
    "text": "that into transaction so they either all",
    "start": "617000",
    "end": "618800"
  },
  {
    "text": "fail or all succeed uh and it's a common",
    "start": "618800",
    "end": "621519"
  },
  {
    "text": "problem in application design for",
    "start": "621519",
    "end": "623120"
  },
  {
    "text": "developers to forget to wrap these",
    "start": "623120",
    "end": "625959"
  },
  {
    "text": "operations that should go together in a",
    "start": "625959",
    "end": "627480"
  },
  {
    "text": "transaction and uh Ecto makes that that",
    "start": "627480",
    "end": "629519"
  },
  {
    "text": "mistake very hard to do uh fundamentally",
    "start": "629519",
    "end": "632680"
  },
  {
    "text": "you've got this problem of like this",
    "start": "632680",
    "end": "633959"
  },
  {
    "text": "leaky abstraction where it's like this",
    "start": "633959",
    "end": "635480"
  },
  {
    "text": "database is kind of like this dog and",
    "start": "635480",
    "end": "637040"
  },
  {
    "text": "you just want to feed it dog food but",
    "start": "637040",
    "end": "638320"
  },
  {
    "text": "your programming language is like this",
    "start": "638320",
    "end": "639800"
  },
  {
    "text": "cat and you want to just feed it cat",
    "start": "639800",
    "end": "641120"
  },
  {
    "text": "food and you want to live in either one",
    "start": "641120",
    "end": "642800"
  },
  {
    "text": "world or the other but they sort of",
    "start": "642800",
    "end": "644480"
  },
  {
    "text": "force you to live in both um and that",
    "start": "644480",
    "end": "647079"
  },
  {
    "text": "creates challenges for the programmer",
    "start": "647079",
    "end": "648560"
  },
  {
    "text": "it's it's confusing mental models uh",
    "start": "648560",
    "end": "650760"
  },
  {
    "text": "that Force One to think harder than one",
    "start": "650760",
    "end": "652200"
  },
  {
    "text": "should um and and in a lot of cases I",
    "start": "652200",
    "end": "654720"
  },
  {
    "text": "think um you know this previous",
    "start": "654720",
    "end": "656959"
  },
  {
    "text": "generation of uh of data access",
    "start": "656959",
    "end": "658800"
  },
  {
    "text": "technology ORS and such uh it's like 90%",
    "start": "658800",
    "end": "661839"
  },
  {
    "text": "of the time it's your friend and it does",
    "start": "661839",
    "end": "663399"
  },
  {
    "text": "what you want and the other 10% of the",
    "start": "663399",
    "end": "665040"
  },
  {
    "text": "time it's a liability and it's wrong and",
    "start": "665040",
    "end": "666959"
  },
  {
    "text": "you're fighting",
    "start": "666959",
    "end": "668200"
  },
  {
    "text": "it uh as Joe Armstrong said you wanted",
    "start": "668200",
    "end": "670880"
  },
  {
    "text": "this banana right uh but you got this",
    "start": "670880",
    "end": "673160"
  },
  {
    "text": "gorilla which is this object holding",
    "start": "673160",
    "end": "674800"
  },
  {
    "text": "this banana um which is just uh sort of",
    "start": "674800",
    "end": "678200"
  },
  {
    "text": "a funny way I think to describe this the",
    "start": "678200",
    "end": "680040"
  },
  {
    "text": "problems uh but let's talk about what I",
    "start": "680040",
    "end": "681880"
  },
  {
    "text": "think Ecto got right uh and why I think",
    "start": "681880",
    "end": "684240"
  },
  {
    "text": "it's better uh number one is restraint",
    "start": "684240",
    "end": "686480"
  },
  {
    "text": "uh it doesn't try to do too much uh it's",
    "start": "686480",
    "end": "688760"
  },
  {
    "text": "a library that it's really solely",
    "start": "688760",
    "end": "690600"
  },
  {
    "text": "focused on uh on letting you access SQL",
    "start": "690600",
    "end": "693720"
  },
  {
    "text": "from Elixir um and it doesn't try to",
    "start": "693720",
    "end": "696240"
  },
  {
    "text": "overburden you with extra built-in",
    "start": "696240",
    "end": "698120"
  },
  {
    "text": "functionality on top uh that's a good",
    "start": "698120",
    "end": "701079"
  },
  {
    "text": "thing uh and the other is explicitness",
    "start": "701079",
    "end": "703160"
  },
  {
    "text": "uh when you write Ecto it makes it very",
    "start": "703160",
    "end": "704920"
  },
  {
    "text": "clear what's going on it makes it very",
    "start": "704920",
    "end": "706519"
  },
  {
    "text": "clear what operations you're sending",
    "start": "706519",
    "end": "707839"
  },
  {
    "text": "down to the database and what SQL you're",
    "start": "707839",
    "end": "709639"
  },
  {
    "text": "going to generate it doesn't hide the",
    "start": "709639",
    "end": "711600"
  },
  {
    "text": "SQL behind",
    "start": "711600",
    "end": "713240"
  },
  {
    "text": "abstractions uh so Ecto fundamentally",
    "start": "713240",
    "end": "715480"
  },
  {
    "text": "has four abstractions we have to worry",
    "start": "715480",
    "end": "717040"
  },
  {
    "text": "about um not worry about that we have to",
    "start": "717040",
    "end": "719000"
  },
  {
    "text": "use uh the schema the repo the query and",
    "start": "719000",
    "end": "721560"
  },
  {
    "text": "the change Set uh these are sort of the",
    "start": "721560",
    "end": "723440"
  },
  {
    "text": "four fundamental highlevel modules uh in",
    "start": "723440",
    "end": "726480"
  },
  {
    "text": "Elixir uh that uses Ecto um and so",
    "start": "726480",
    "end": "730120"
  },
  {
    "text": "imagine we've got this schema right uh",
    "start": "730120",
    "end": "731920"
  },
  {
    "text": "remember this this is what my examples",
    "start": "731920",
    "end": "733399"
  },
  {
    "text": "are built off we've got um we're we're",
    "start": "733399",
    "end": "735440"
  },
  {
    "text": "doing some conference party planning",
    "start": "735440",
    "end": "736880"
  },
  {
    "text": "right so we've got a table called",
    "start": "736880",
    "end": "738320"
  },
  {
    "text": "conferences a conference has many",
    "start": "738320",
    "end": "740160"
  },
  {
    "text": "parties and a party has many",
    "start": "740160",
    "end": "742399"
  },
  {
    "text": "attendees in Ecto what we first do is we",
    "start": "742399",
    "end": "745440"
  },
  {
    "text": "Define uh the models here we Define uh",
    "start": "745440",
    "end": "748160"
  },
  {
    "text": "the schema part",
    "start": "748160",
    "end": "749720"
  },
  {
    "text": "uh and you can see explicitly what we're",
    "start": "749720",
    "end": "751279"
  },
  {
    "text": "doing here is uh declaring the fields uh",
    "start": "751279",
    "end": "754920"
  },
  {
    "text": "even though Elixir is dynamically typed",
    "start": "754920",
    "end": "757320"
  },
  {
    "text": "we are uh strongly typing the columns",
    "start": "757320",
    "end": "759480"
  },
  {
    "text": "here to date time uh and then we",
    "start": "759480",
    "end": "761560"
  },
  {
    "text": "explicitly uh uh call out this",
    "start": "761560",
    "end": "763560"
  },
  {
    "text": "relationship has many attendees so right",
    "start": "763560",
    "end": "766079"
  },
  {
    "text": "there we're using database language",
    "start": "766079",
    "end": "767680"
  },
  {
    "text": "right that's has many is a term from",
    "start": "767680",
    "end": "769279"
  },
  {
    "text": "relational database design uh a party",
    "start": "769279",
    "end": "771920"
  },
  {
    "text": "has many attendees and it belongs to a",
    "start": "771920",
    "end": "773760"
  },
  {
    "text": "conference so that's a has many in the",
    "start": "773760",
    "end": "775240"
  },
  {
    "text": "other direction a conference has many",
    "start": "775240",
    "end": "776800"
  },
  {
    "text": "parties so a party belongs to a",
    "start": "776800",
    "end": "778720"
  },
  {
    "text": "conference",
    "start": "778720",
    "end": "779800"
  },
  {
    "text": "uh and then you've got this great little",
    "start": "779800",
    "end": "781360"
  },
  {
    "text": "uh function called time stamps uh what",
    "start": "781360",
    "end": "783240"
  },
  {
    "text": "this does is it says that this table",
    "start": "783240",
    "end": "785320"
  },
  {
    "text": "will have two Fields created at and",
    "start": "785320",
    "end": "787360"
  },
  {
    "text": "updated at uh and then Elixir",
    "start": "787360",
    "end": "789440"
  },
  {
    "text": "automatically will be in charge of",
    "start": "789440",
    "end": "791480"
  },
  {
    "text": "filling that in the created at date and",
    "start": "791480",
    "end": "793320"
  },
  {
    "text": "the updated every time it runs a query",
    "start": "793320",
    "end": "795000"
  },
  {
    "text": "against those tables so that is an",
    "start": "795000",
    "end": "796839"
  },
  {
    "text": "abstraction over SQL but it's not a real",
    "start": "796839",
    "end": "799360"
  },
  {
    "text": "high level abstraction uh it's going to",
    "start": "799360",
    "end": "801399"
  },
  {
    "text": "automatically fill in those time stamps",
    "start": "801399",
    "end": "802920"
  },
  {
    "text": "for you and assume that you want that on",
    "start": "802920",
    "end": "804480"
  },
  {
    "text": "every single table if you provide that",
    "start": "804480",
    "end": "806279"
  },
  {
    "text": "little call that little timestamps",
    "start": "806279",
    "end": "808120"
  },
  {
    "text": "function uh it's explicit ding ding ding",
    "start": "808120",
    "end": "811399"
  },
  {
    "text": "ding ding ding uh we have spelled out",
    "start": "811399",
    "end": "814040"
  },
  {
    "text": "the shape of our data what is in there",
    "start": "814040",
    "end": "816000"
  },
  {
    "text": "its types uh and there's no doubt about",
    "start": "816000",
    "end": "818920"
  },
  {
    "text": "what we're going to get what we're going",
    "start": "818920",
    "end": "819880"
  },
  {
    "text": "to get back and uh uh Elixir is going to",
    "start": "819880",
    "end": "822639"
  },
  {
    "text": "be sure that what you actually get",
    "start": "822639",
    "end": "823920"
  },
  {
    "text": "matches that schema uh this is our word",
    "start": "823920",
    "end": "826399"
  },
  {
    "text": "of the day by the way explicitness uh so",
    "start": "826399",
    "end": "828639"
  },
  {
    "text": "when we start actually writing uh uh",
    "start": "828639",
    "end": "830399"
  },
  {
    "text": "Ecto queries it looks like this so from",
    "start": "830399",
    "end": "832440"
  },
  {
    "text": "party in party uh we're going to filter",
    "start": "832440",
    "end": "835240"
  },
  {
    "text": "here uh where party. conference ID",
    "start": "835240",
    "end": "837279"
  },
  {
    "text": "equals and then we pin uh the conference",
    "start": "837279",
    "end": "839600"
  },
  {
    "text": "ID which is the parameter passed into",
    "start": "839600",
    "end": "841160"
  },
  {
    "text": "this function uh and then we have a",
    "start": "841160",
    "end": "843399"
  },
  {
    "text": "select uh and we're pulling back party",
    "start": "843399",
    "end": "845639"
  },
  {
    "text": "name start time and end time uh so this",
    "start": "845639",
    "end": "848279"
  },
  {
    "text": "looks like SQL doesn't it it looks a lot",
    "start": "848279",
    "end": "850839"
  },
  {
    "text": "like we just reexpressed SQL uh using",
    "start": "850839",
    "end": "853160"
  },
  {
    "text": "Elixir and that's exactly what we did",
    "start": "853160",
    "end": "854720"
  },
  {
    "text": "and that's exactly the goal uh this",
    "start": "854720",
    "end": "856920"
  },
  {
    "text": "actually takes advantage of uh the",
    "start": "856920",
    "end": "858759"
  },
  {
    "text": "syntax don't try to decode it all the",
    "start": "858759",
    "end": "860800"
  },
  {
    "text": "way but uh from is actually a macro",
    "start": "860800",
    "end": "863360"
  },
  {
    "text": "Elixir has a really neat built-in",
    "start": "863360",
    "end": "865720"
  },
  {
    "text": "hygienic macro system uh and then uh",
    "start": "865720",
    "end": "868800"
  },
  {
    "text": "where and select our keyword parameters",
    "start": "868800",
    "end": "871040"
  },
  {
    "text": "uh to a function uh but we have is this",
    "start": "871040",
    "end": "873560"
  },
  {
    "text": "sort of nifty SQL reading DSL uh that",
    "start": "873560",
    "end": "877160"
  },
  {
    "text": "the stated goal is to make it look like",
    "start": "877160",
    "end": "879199"
  },
  {
    "text": "SQL rather than abstract it away and",
    "start": "879199",
    "end": "881199"
  },
  {
    "text": "make it look like something",
    "start": "881199",
    "end": "883160"
  },
  {
    "text": "else uh we don't have the seeing Stars",
    "start": "883160",
    "end": "885759"
  },
  {
    "text": "problem because as you see uh we do",
    "start": "885759",
    "end": "888920"
  },
  {
    "text": "actually have the select statement down",
    "start": "888920",
    "end": "890480"
  },
  {
    "text": "there um you actually it's not actually",
    "start": "890480",
    "end": "891880"
  },
  {
    "text": "required but uh it the way this looks",
    "start": "891880",
    "end": "894959"
  },
  {
    "text": "like SQL it makes it hard to forget and",
    "start": "894959",
    "end": "896800"
  },
  {
    "text": "I love that uh whereas in other ORS and",
    "start": "896800",
    "end": "899959"
  },
  {
    "text": "things like that I find myself",
    "start": "899959",
    "end": "901079"
  },
  {
    "text": "forgetting to scope down the columns I'm",
    "start": "901079",
    "end": "902759"
  },
  {
    "text": "selected back I don't forget when I",
    "start": "902759",
    "end": "904399"
  },
  {
    "text": "write Ecto it nudges me in the right",
    "start": "904399",
    "end": "906320"
  },
  {
    "text": "direction to doing the right thing to",
    "start": "906320",
    "end": "907639"
  },
  {
    "text": "try to prevent that",
    "start": "907639",
    "end": "909639"
  },
  {
    "text": "problem uh here um I am now accessing a",
    "start": "909639",
    "end": "912839"
  },
  {
    "text": "relation at the same time uh with a",
    "start": "912839",
    "end": "914720"
  },
  {
    "text": "pre-load so we have parties parties have",
    "start": "914720",
    "end": "916680"
  },
  {
    "text": "many attendees uh presumably I'm",
    "start": "916680",
    "end": "918680"
  },
  {
    "text": "rendering a page or an API response",
    "start": "918680",
    "end": "920519"
  },
  {
    "text": "where I want both uh so in this case",
    "start": "920519",
    "end": "923360"
  },
  {
    "text": "what we've done is we've pre-loaded",
    "start": "923360",
    "end": "924680"
  },
  {
    "text": "attendees so when I fire this query uh",
    "start": "924680",
    "end": "927759"
  },
  {
    "text": "what's going to happen is it's going to",
    "start": "927759",
    "end": "928720"
  },
  {
    "text": "fire two queries uh it's going to get",
    "start": "928720",
    "end": "930920"
  },
  {
    "text": "all the parties right and uh based on",
    "start": "930920",
    "end": "933560"
  },
  {
    "text": "the IDS that it's come comes back it's",
    "start": "933560",
    "end": "935240"
  },
  {
    "text": "going to get all the attendees for those",
    "start": "935240",
    "end": "937079"
  },
  {
    "text": "parties uh so this is the preload",
    "start": "937079",
    "end": "939120"
  },
  {
    "text": "strategy uh which accomplishes what I",
    "start": "939120",
    "end": "941000"
  },
  {
    "text": "want in two queries uh rather than the",
    "start": "941000",
    "end": "943720"
  },
  {
    "text": "uh thankfully this this protects us from",
    "start": "943720",
    "end": "946000"
  },
  {
    "text": "the N plus1 problem uh which is",
    "start": "946000",
    "end": "948000"
  },
  {
    "text": "especially common in in uh Frameworks",
    "start": "948000",
    "end": "949759"
  },
  {
    "text": "like Ruby on Rails uh we avoid that here",
    "start": "949759",
    "end": "952000"
  },
  {
    "text": "with that um and there's actually it",
    "start": "952000",
    "end": "954120"
  },
  {
    "text": "actually gives you another possible",
    "start": "954120",
    "end": "955279"
  },
  {
    "text": "strategy to get the same data with a",
    "start": "955279",
    "end": "956800"
  },
  {
    "text": "different uh with a different query uh",
    "start": "956800",
    "end": "959319"
  },
  {
    "text": "so if I add this left join line up here",
    "start": "959319",
    "end": "961480"
  },
  {
    "text": "so I take parties I left outer join it",
    "start": "961480",
    "end": "963319"
  },
  {
    "text": "to attendees right uh and then pre-load",
    "start": "963319",
    "end": "965880"
  },
  {
    "text": "attendees uh I end up getting the same",
    "start": "965880",
    "end": "967600"
  },
  {
    "text": "data but in this case it's going to run",
    "start": "967600",
    "end": "969839"
  },
  {
    "text": "in one query uh so two strategies to get",
    "start": "969839",
    "end": "972759"
  },
  {
    "text": "the same data back uh the result is the",
    "start": "972759",
    "end": "974800"
  },
  {
    "text": "same but it's just the number of queries",
    "start": "974800",
    "end": "976120"
  },
  {
    "text": "you fire um so this is one of those",
    "start": "976120",
    "end": "978120"
  },
  {
    "text": "classic sort of trade-off problems with",
    "start": "978120",
    "end": "979680"
  },
  {
    "text": "the left join we have one query but more",
    "start": "979680",
    "end": "981440"
  },
  {
    "text": "data with the preload it's more queries",
    "start": "981440",
    "end": "983600"
  },
  {
    "text": "but left but less",
    "start": "983600",
    "end": "985440"
  },
  {
    "text": "data um you know so you could get into",
    "start": "985440",
    "end": "988120"
  },
  {
    "text": "the nitpicking of which one is better",
    "start": "988120",
    "end": "990240"
  },
  {
    "text": "but um ultimately uh both of them are",
    "start": "990240",
    "end": "993560"
  },
  {
    "text": "generally responsible SQL",
    "start": "993560",
    "end": "995319"
  },
  {
    "text": "querying uh and then we can Group by uh",
    "start": "995319",
    "end": "998240"
  },
  {
    "text": "with our Aggregates once again I mean",
    "start": "998240",
    "end": "1000040"
  },
  {
    "text": "this just reads like SQL and I love it",
    "start": "1000040",
    "end": "1002240"
  },
  {
    "text": "um I tend to be philosophically one of",
    "start": "1002240",
    "end": "1004279"
  },
  {
    "text": "those people who think that uh if your",
    "start": "1004279",
    "end": "1006560"
  },
  {
    "text": "app is powered by a database and you're",
    "start": "1006560",
    "end": "1008199"
  },
  {
    "text": "a heavy database user and and boy we",
    "start": "1008199",
    "end": "1010079"
  },
  {
    "text": "really fit that bill where I work I mean",
    "start": "1010079",
    "end": "1012279"
  },
  {
    "text": "everything we do is about database",
    "start": "1012279",
    "end": "1014560"
  },
  {
    "text": "performance proper representation of",
    "start": "1014560",
    "end": "1016519"
  },
  {
    "text": "things in a database it's database",
    "start": "1016519",
    "end": "1018160"
  },
  {
    "text": "database database all day long uh I tend",
    "start": "1018160",
    "end": "1020800"
  },
  {
    "text": "to think that um having a programming",
    "start": "1020800",
    "end": "1022720"
  },
  {
    "text": "language that makes you think in",
    "start": "1022720",
    "end": "1024199"
  },
  {
    "text": "database terms that reads like database",
    "start": "1024199",
    "end": "1025880"
  },
  {
    "text": "that reads like SQL instead of hiding it",
    "start": "1025880",
    "end": "1027400"
  },
  {
    "text": "from you is a good thing uh because you",
    "start": "1027400",
    "end": "1029918"
  },
  {
    "text": "don't forget what's going on under the",
    "start": "1029919",
    "end": "1031760"
  },
  {
    "text": "hood you don't uh you're not tempted to",
    "start": "1031760",
    "end": "1033480"
  },
  {
    "text": "think in terms of your programming",
    "start": "1033480",
    "end": "1034600"
  },
  {
    "text": "languages forget uh that for instance",
    "start": "1034600",
    "end": "1036520"
  },
  {
    "text": "this is a query and you have to tune",
    "start": "1036520",
    "end": "1038160"
  },
  {
    "text": "this query right and make sure it runs",
    "start": "1038160",
    "end": "1040120"
  },
  {
    "text": "fast um and things like that you can",
    "start": "1040120",
    "end": "1043480"
  },
  {
    "text": "compose these together so here I've",
    "start": "1043480",
    "end": "1045839"
  },
  {
    "text": "created one query snippet it's from",
    "start": "1045839",
    "end": "1047720"
  },
  {
    "text": "party with a join on a TD and a filter",
    "start": "1047720",
    "end": "1050640"
  },
  {
    "text": "uh and then I can reuse that and add a",
    "start": "1050640",
    "end": "1052600"
  },
  {
    "text": "select to that um so uh yes you can",
    "start": "1052600",
    "end": "1055520"
  },
  {
    "text": "compose these there's actually a better",
    "start": "1055520",
    "end": "1057280"
  },
  {
    "text": "uh composable syntax you can actually",
    "start": "1057280",
    "end": "1059000"
  },
  {
    "text": "use Elixir pipeline operator to pipe",
    "start": "1059000",
    "end": "1061480"
  },
  {
    "text": "little bits of queries and in that way",
    "start": "1061480",
    "end": "1062960"
  },
  {
    "text": "reuse bits of queries together I don't",
    "start": "1062960",
    "end": "1064640"
  },
  {
    "text": "have an example of that uh but you can",
    "start": "1064640",
    "end": "1068080"
  },
  {
    "text": "uh I will say um think real hard about",
    "start": "1068080",
    "end": "1070440"
  },
  {
    "text": "whether that's actually what you want to",
    "start": "1070440",
    "end": "1071640"
  },
  {
    "text": "do um because often times I prefer to do",
    "start": "1071640",
    "end": "1073720"
  },
  {
    "text": "things like this where I uh have one",
    "start": "1073720",
    "end": "1076159"
  },
  {
    "text": "query per function here um one thing",
    "start": "1076159",
    "end": "1079360"
  },
  {
    "text": "you'll notice is that there's a lot of",
    "start": "1079360",
    "end": "1080280"
  },
  {
    "text": "repeated code here uh I did not make any",
    "start": "1080280",
    "end": "1082360"
  },
  {
    "text": "attempts to reuse bits of SQL here um",
    "start": "1082360",
    "end": "1086159"
  },
  {
    "text": "that is intentional uh Elixir gives us",
    "start": "1086159",
    "end": "1088760"
  },
  {
    "text": "ways to reuse SQL um I often prefer not",
    "start": "1088760",
    "end": "1091400"
  },
  {
    "text": "to I think sometimes uh I've noticed",
    "start": "1091400",
    "end": "1094240"
  },
  {
    "text": "that uh a lot of web developers that I",
    "start": "1094240",
    "end": "1095919"
  },
  {
    "text": "work I I work with a massive web",
    "start": "1095919",
    "end": "1097400"
  },
  {
    "text": "development team dozens and dozens and",
    "start": "1097400",
    "end": "1098799"
  },
  {
    "text": "dozens of web developers on a single",
    "start": "1098799",
    "end": "1100400"
  },
  {
    "text": "application backed by a single database",
    "start": "1100400",
    "end": "1102720"
  },
  {
    "text": "I find that trying to reuse too many",
    "start": "1102720",
    "end": "1104480"
  },
  {
    "text": "parts of it uh leads to people losing",
    "start": "1104480",
    "end": "1107679"
  },
  {
    "text": "track of what SQL building right when",
    "start": "1107679",
    "end": "1109840"
  },
  {
    "text": "you start to string together SQL bits",
    "start": "1109840",
    "end": "1111960"
  },
  {
    "text": "from other parts different parts of your",
    "start": "1111960",
    "end": "1113240"
  },
  {
    "text": "codebase different modules different",
    "start": "1113240",
    "end": "1114760"
  },
  {
    "text": "files uh you kind of lose uh sight of",
    "start": "1114760",
    "end": "1117480"
  },
  {
    "text": "the whole big picture uh and you forget",
    "start": "1117480",
    "end": "1120320"
  },
  {
    "text": "things um one thing is indexes right um",
    "start": "1120320",
    "end": "1124400"
  },
  {
    "text": "every query needs to be tuned to be fast",
    "start": "1124400",
    "end": "1127159"
  },
  {
    "text": "if you don't have the right index it's",
    "start": "1127159",
    "end": "1128760"
  },
  {
    "text": "going to be slow and if you start",
    "start": "1128760",
    "end": "1130120"
  },
  {
    "text": "chaining together bits of SQL from",
    "start": "1130120",
    "end": "1131600"
  },
  {
    "text": "different files it's really easy to",
    "start": "1131600",
    "end": "1133480"
  },
  {
    "text": "forget like oh wait I have a where in",
    "start": "1133480",
    "end": "1135679"
  },
  {
    "text": "there I better make sure there's an",
    "start": "1135679",
    "end": "1136840"
  },
  {
    "text": "index on that column right",
    "start": "1136840",
    "end": "1139280"
  },
  {
    "text": "um I find that thinking in SQL helps you",
    "start": "1139280",
    "end": "1141480"
  },
  {
    "text": "write better SQL and uh makes you know",
    "start": "1141480",
    "end": "1144880"
  },
  {
    "text": "allows you to uh encourage you gently",
    "start": "1144880",
    "end": "1147679"
  },
  {
    "text": "nudges you to consider the performance",
    "start": "1147679",
    "end": "1149320"
  },
  {
    "text": "implications and tune it um rather than",
    "start": "1149320",
    "end": "1152120"
  },
  {
    "text": "trying to hide it from you in which case",
    "start": "1152120",
    "end": "1153640"
  },
  {
    "text": "you might forget that I need to actually",
    "start": "1153640",
    "end": "1155320"
  },
  {
    "text": "go and check the SQL that's outputed and",
    "start": "1155320",
    "end": "1157080"
  },
  {
    "text": "actually make sure it's efficient and",
    "start": "1157080",
    "end": "1158200"
  },
  {
    "text": "fast and I need to check the query plan",
    "start": "1158200",
    "end": "1159799"
  },
  {
    "text": "figure out what kind of joins it's doing",
    "start": "1159799",
    "end": "1161640"
  },
  {
    "text": "and is it getting back the data that I",
    "start": "1161640",
    "end": "1163000"
  },
  {
    "text": "actually want uh this nudges the",
    "start": "1163000",
    "end": "1165400"
  },
  {
    "text": "developer in the direction of write",
    "start": "1165400",
    "end": "1167080"
  },
  {
    "text": "better SQL in my opinion that doesn't",
    "start": "1167080",
    "end": "1169200"
  },
  {
    "text": "mean I'm advocating that you should",
    "start": "1169200",
    "end": "1170640"
  },
  {
    "text": "never reuse anything uh on the contrary",
    "start": "1170640",
    "end": "1173080"
  },
  {
    "text": "there are some great points where I",
    "start": "1173080",
    "end": "1174159"
  },
  {
    "text": "think you should reuse SQL uh one",
    "start": "1174159",
    "end": "1176360"
  },
  {
    "text": "example is like a soft delete so uh a",
    "start": "1176360",
    "end": "1178640"
  },
  {
    "text": "lot of our tables uh we have delete",
    "start": "1178640",
    "end": "1180720"
  },
  {
    "text": "functionality a user wants to delete I",
    "start": "1180720",
    "end": "1182520"
  },
  {
    "text": "don't know say an email right so you've",
    "start": "1182520",
    "end": "1183960"
  },
  {
    "text": "got the email table instead of actually",
    "start": "1183960",
    "end": "1185880"
  },
  {
    "text": "deleting the row uh we just have a",
    "start": "1185880",
    "end": "1187760"
  },
  {
    "text": "deleted at column with a timestamp so if",
    "start": "1187760",
    "end": "1190240"
  },
  {
    "text": "they delete it we just fill in the",
    "start": "1190240",
    "end": "1191520"
  },
  {
    "text": "timestamp and that row is deleted uh",
    "start": "1191520",
    "end": "1194320"
  },
  {
    "text": "that's something you don't want to for",
    "start": "1194320",
    "end": "1195679"
  },
  {
    "text": "you probably most of your queries you",
    "start": "1195679",
    "end": "1197120"
  },
  {
    "text": "want to filter out the deleted items so",
    "start": "1197120",
    "end": "1198919"
  },
  {
    "text": "you might want to create a snippet of",
    "start": "1198919",
    "end": "1200919"
  },
  {
    "text": "SQL with the filter where deleted at is",
    "start": "1200919",
    "end": "1203640"
  },
  {
    "text": "null right and reuse that um and that's",
    "start": "1203640",
    "end": "1207039"
  },
  {
    "text": "a perfectly acceptable case to reuse SQL",
    "start": "1207039",
    "end": "1209039"
  },
  {
    "text": "in other cases I would uh I'd be uh I",
    "start": "1209039",
    "end": "1212320"
  },
  {
    "text": "would use caution right and not overdo",
    "start": "1212320",
    "end": "1214080"
  },
  {
    "text": "it on trying to be too dry with SQL",
    "start": "1214080",
    "end": "1215520"
  },
  {
    "text": "Snippets that is more of a personal uh",
    "start": "1215520",
    "end": "1217960"
  },
  {
    "text": "um sort of preference than an Ecto or",
    "start": "1217960",
    "end": "1220320"
  },
  {
    "text": "Elixir preference a lot of people who",
    "start": "1220320",
    "end": "1222000"
  },
  {
    "text": "write Ecto reuse everything and pipe",
    "start": "1222000",
    "end": "1224000"
  },
  {
    "text": "things all over and have their sqls",
    "start": "1224000",
    "end": "1225320"
  },
  {
    "text": "spread out across files all over their",
    "start": "1225320",
    "end": "1226799"
  },
  {
    "text": "code base it's up to you if that's what",
    "start": "1226799",
    "end": "1229280"
  },
  {
    "text": "you want to do I prefer not",
    "start": "1229280",
    "end": "1230919"
  },
  {
    "text": "to uh as Josie says functional",
    "start": "1230919",
    "end": "1233840"
  },
  {
    "text": "programming is about making the complex",
    "start": "1233840",
    "end": "1235480"
  },
  {
    "text": "parts of your program explicit uh and",
    "start": "1235480",
    "end": "1237880"
  },
  {
    "text": "for us writing what are basically uh",
    "start": "1237880",
    "end": "1240320"
  },
  {
    "text": "Enterprise applications for an immensely",
    "start": "1240320",
    "end": "1242440"
  },
  {
    "text": "complex business of construction",
    "start": "1242440",
    "end": "1244280"
  },
  {
    "text": "management uh the complex parts are",
    "start": "1244280",
    "end": "1246159"
  },
  {
    "text": "often the data access um it's often the",
    "start": "1246159",
    "end": "1249120"
  },
  {
    "text": "the you know getting the data out of the",
    "start": "1249120",
    "end": "1251559"
  },
  {
    "text": "800 plus tables in our database uh in",
    "start": "1251559",
    "end": "1253760"
  },
  {
    "text": "the most efficient uh um fastest way so",
    "start": "1253760",
    "end": "1256520"
  },
  {
    "text": "that we can display it on a web page or",
    "start": "1256520",
    "end": "1258080"
  },
  {
    "text": "or an API response uh and so I want to",
    "start": "1258080",
    "end": "1260080"
  },
  {
    "text": "be as explicit as possible in those",
    "start": "1260080",
    "end": "1261919"
  },
  {
    "text": "particular parts of the",
    "start": "1261919",
    "end": "1263600"
  },
  {
    "text": "program uh when we actually want to fire",
    "start": "1263600",
    "end": "1265760"
  },
  {
    "text": "this query uh we use the repository",
    "start": "1265760",
    "end": "1267600"
  },
  {
    "text": "pattern so we have repo doall and we",
    "start": "1267600",
    "end": "1269640"
  },
  {
    "text": "passed the result of one of those",
    "start": "1269640",
    "end": "1271000"
  },
  {
    "text": "previous functions with uh party. for",
    "start": "1271000",
    "end": "1273480"
  },
  {
    "text": "conference that's what I showed you that",
    "start": "1273480",
    "end": "1274679"
  },
  {
    "text": "has like looks like SQL it returns a",
    "start": "1274679",
    "end": "1276400"
  },
  {
    "text": "function we uh pass that to repo doall",
    "start": "1276400",
    "end": "1278960"
  },
  {
    "text": "and we fire that off uh so this is uh uh",
    "start": "1278960",
    "end": "1281559"
  },
  {
    "text": "eagerly evaluated right this is not a",
    "start": "1281559",
    "end": "1283320"
  },
  {
    "text": "lazy evaluation framework like some of",
    "start": "1283320",
    "end": "1285080"
  },
  {
    "text": "the old ORS were uh we know exactly when",
    "start": "1285080",
    "end": "1287440"
  },
  {
    "text": "this query fires it's when we on this",
    "start": "1287440",
    "end": "1289440"
  },
  {
    "text": "line um and then if we writing a phoenix",
    "start": "1289440",
    "end": "1292159"
  },
  {
    "text": "app right this is what the controller",
    "start": "1292159",
    "end": "1293480"
  },
  {
    "text": "looks like uh we make our call to get",
    "start": "1293480",
    "end": "1296000"
  },
  {
    "text": "all our data we pass it to the render",
    "start": "1296000",
    "end": "1297880"
  },
  {
    "text": "method we tell it what view to render",
    "start": "1297880",
    "end": "1299840"
  },
  {
    "text": "and voila we have a",
    "start": "1299840",
    "end": "1302240"
  },
  {
    "text": "page uh this is kind of a it's kind of a",
    "start": "1302240",
    "end": "1304720"
  },
  {
    "text": "functional version of the old uh Martin",
    "start": "1304720",
    "end": "1306400"
  },
  {
    "text": "F's old repository pattern uh where we",
    "start": "1306400",
    "end": "1308720"
  },
  {
    "text": "have a module called repo that mediates",
    "start": "1308720",
    "end": "1310600"
  },
  {
    "text": "between the data and the data mapping",
    "start": "1310600",
    "end": "1312440"
  },
  {
    "text": "layers um I like it because once again",
    "start": "1312440",
    "end": "1315360"
  },
  {
    "text": "it's explicit there's that word ding",
    "start": "1315360",
    "end": "1316799"
  },
  {
    "text": "ding ding our word of the day EXP",
    "start": "1316799",
    "end": "1319200"
  },
  {
    "text": "it uh so let's talk about writing for a",
    "start": "1319200",
    "end": "1321520"
  },
  {
    "text": "second when we want to write to a",
    "start": "1321520",
    "end": "1322600"
  },
  {
    "text": "database uh I love this because this is",
    "start": "1322600",
    "end": "1324559"
  },
  {
    "text": "I think there's a novel approach here",
    "start": "1324559",
    "end": "1325960"
  },
  {
    "text": "that I I haven't seen I'm sure it exists",
    "start": "1325960",
    "end": "1327760"
  },
  {
    "text": "in other data you know data access",
    "start": "1327760",
    "end": "1330159"
  },
  {
    "text": "layers libraries and stuff like that I'm",
    "start": "1330159",
    "end": "1331919"
  },
  {
    "text": "not sure which ones I haven't seen it",
    "start": "1331919",
    "end": "1333799"
  },
  {
    "text": "but uh I think this is really neat the",
    "start": "1333799",
    "end": "1335159"
  },
  {
    "text": "way they did this uh okay so uh let's",
    "start": "1335159",
    "end": "1337600"
  },
  {
    "text": "say we have this uh schema called users",
    "start": "1337600",
    "end": "1339440"
  },
  {
    "text": "right with a name an email and an age um",
    "start": "1339440",
    "end": "1343480"
  },
  {
    "text": "cool we've got that explicitness we've",
    "start": "1343480",
    "end": "1345080"
  },
  {
    "text": "encoded in our codebase what these data",
    "start": "1345080",
    "end": "1346880"
  },
  {
    "text": "types are What fields to EXP ECT uh okay",
    "start": "1346880",
    "end": "1350400"
  },
  {
    "text": "so we want to create this uh we want to",
    "start": "1350400",
    "end": "1353559"
  },
  {
    "text": "create this thing called a uh change set",
    "start": "1353559",
    "end": "1356279"
  },
  {
    "text": "right and uh we have this sort of uh",
    "start": "1356279",
    "end": "1359400"
  },
  {
    "text": "pipeline kind of Syntax for validation",
    "start": "1359400",
    "end": "1361760"
  },
  {
    "text": "and casting uh so uh that little um pipe",
    "start": "1361760",
    "end": "1365159"
  },
  {
    "text": "sort of uh uh greater than that's Elixir",
    "start": "1365159",
    "end": "1367960"
  },
  {
    "text": "pipe operator so we're taking a user uh",
    "start": "1367960",
    "end": "1369880"
  },
  {
    "text": "what's a struct is being passed in there",
    "start": "1369880",
    "end": "1371640"
  },
  {
    "text": "a user struct is passed to this cast",
    "start": "1371640",
    "end": "1374240"
  },
  {
    "text": "operators uh which knows that uh name",
    "start": "1374240",
    "end": "1376400"
  },
  {
    "text": "and email are required and age is option",
    "start": "1376400",
    "end": "1378720"
  },
  {
    "text": "and it will enforce that and raise",
    "start": "1378720",
    "end": "1380080"
  },
  {
    "text": "validation errors if that is not if",
    "start": "1380080",
    "end": "1381840"
  },
  {
    "text": "that's not actually what it receives uh",
    "start": "1381840",
    "end": "1383760"
  },
  {
    "text": "we validate the email with a Rex uh we",
    "start": "1383760",
    "end": "1386799"
  },
  {
    "text": "validate that the age is between 18 and",
    "start": "1386799",
    "end": "1389080"
  },
  {
    "text": "100 uh and then we pipe it through this",
    "start": "1389080",
    "end": "1391120"
  },
  {
    "text": "unique constraint function this is kind",
    "start": "1391120",
    "end": "1392600"
  },
  {
    "text": "of a cool feature of ecto uh well unique",
    "start": "1392600",
    "end": "1395320"
  },
  {
    "text": "constraints are enforced at the database",
    "start": "1395320",
    "end": "1396760"
  },
  {
    "text": "level uh you cannot insert uh an email",
    "start": "1396760",
    "end": "1399080"
  },
  {
    "text": "address that already exists in email",
    "start": "1399080",
    "end": "1400960"
  },
  {
    "text": "addresses uh why then do we also um uh",
    "start": "1400960",
    "end": "1405279"
  },
  {
    "text": "encode that notion in our application",
    "start": "1405279",
    "end": "1407240"
  },
  {
    "text": "code right uh for better air messages so",
    "start": "1407240",
    "end": "1410320"
  },
  {
    "text": "if the database here returns uh a unique",
    "start": "1410320",
    "end": "1413120"
  },
  {
    "text": "constraint violation error Ecto will",
    "start": "1413120",
    "end": "1415120"
  },
  {
    "text": "tell you it's because you it will",
    "start": "1415120",
    "end": "1416640"
  },
  {
    "text": "generate a nice friendly air message",
    "start": "1416640",
    "end": "1418039"
  },
  {
    "text": "that says it's because you uh introduced",
    "start": "1418039",
    "end": "1420320"
  },
  {
    "text": "a duplicate email address so by encoding",
    "start": "1420320",
    "end": "1422679"
  },
  {
    "text": "that constraint in the code here Ecto is",
    "start": "1422679",
    "end": "1424559"
  },
  {
    "text": "able to better inform the programmer",
    "start": "1424559",
    "end": "1426400"
  },
  {
    "text": "what you did wrong if a constraint",
    "start": "1426400",
    "end": "1428480"
  },
  {
    "text": "violation",
    "start": "1428480",
    "end": "1430120"
  },
  {
    "text": "occurs uh and then what we can do is",
    "start": "1430120",
    "end": "1432520"
  },
  {
    "text": "have uh even though we have one user",
    "start": "1432520",
    "end": "1433960"
  },
  {
    "text": "table we can have multiple different",
    "start": "1433960",
    "end": "1435520"
  },
  {
    "text": "change sets with different validations",
    "start": "1435520",
    "end": "1437640"
  },
  {
    "text": "in this example we' you've got one set",
    "start": "1437640",
    "end": "1439080"
  },
  {
    "text": "for creating a new user which validates",
    "start": "1439080",
    "end": "1441200"
  },
  {
    "text": "the name the email and has that unique",
    "start": "1441200",
    "end": "1442880"
  },
  {
    "text": "constraint right uh in another change",
    "start": "1442880",
    "end": "1444880"
  },
  {
    "text": "set say you've got a form that allows a",
    "start": "1444880",
    "end": "1446240"
  },
  {
    "text": "user to update their email address right",
    "start": "1446240",
    "end": "1448159"
  },
  {
    "text": "we have another entire change Set uh",
    "start": "1448159",
    "end": "1451039"
  },
  {
    "text": "certain objectoriented uh you know omms",
    "start": "1451039",
    "end": "1454159"
  },
  {
    "text": "and things uh only allow you to do one",
    "start": "1454159",
    "end": "1456480"
  },
  {
    "text": "set of validations which always breaks",
    "start": "1456480",
    "end": "1458200"
  },
  {
    "text": "down and always causes problems and",
    "start": "1458200",
    "end": "1459559"
  },
  {
    "text": "allows you to do causes you to do to all",
    "start": "1459559",
    "end": "1461159"
  },
  {
    "text": "kind of messy conditionals and stuff in",
    "start": "1461159",
    "end": "1462760"
  },
  {
    "text": "your validations this just give you",
    "start": "1462760",
    "end": "1464640"
  },
  {
    "text": "different sets of validations for",
    "start": "1464640",
    "end": "1466279"
  },
  {
    "text": "different",
    "start": "1466279",
    "end": "1467120"
  },
  {
    "text": "operations uh I really like uh and then",
    "start": "1467120",
    "end": "1471080"
  },
  {
    "text": "to actually perform updates and inserts",
    "start": "1471080",
    "end": "1473760"
  },
  {
    "text": "uh you have to do this cool thing called",
    "start": "1473760",
    "end": "1475200"
  },
  {
    "text": "a",
    "start": "1475200",
    "end": "1475960"
  },
  {
    "text": "multi uh where we actually take this",
    "start": "1475960",
    "end": "1478080"
  },
  {
    "text": "multi and we pipe it an insert and an",
    "start": "1478080",
    "end": "1480159"
  },
  {
    "text": "update uh and then we have this thing",
    "start": "1480159",
    "end": "1482200"
  },
  {
    "text": "called a transaction where we call repo",
    "start": "1482200",
    "end": "1484039"
  },
  {
    "text": "do transaction on the multi to actually",
    "start": "1484039",
    "end": "1486559"
  },
  {
    "text": "do these inserts and updates uh at the",
    "start": "1486559",
    "end": "1489039"
  },
  {
    "text": "same time uh and there you go they're in",
    "start": "1489039",
    "end": "1491080"
  },
  {
    "text": "the transaction uh so it kind of forces",
    "start": "1491080",
    "end": "1493440"
  },
  {
    "text": "you to think about transactions you",
    "start": "1493440",
    "end": "1494880"
  },
  {
    "text": "cannot create uh Records that are not",
    "start": "1494880",
    "end": "1497440"
  },
  {
    "text": "part of this transaction",
    "start": "1497440",
    "end": "1498919"
  },
  {
    "text": "which makes you as a developer go hey",
    "start": "1498919",
    "end": "1501679"
  },
  {
    "text": "I'm doing multiple rights here this",
    "start": "1501679",
    "end": "1503600"
  },
  {
    "text": "should be in a transaction shouldn't it",
    "start": "1503600",
    "end": "1505559"
  },
  {
    "text": "Ecto is making me create this",
    "start": "1505559",
    "end": "1507039"
  },
  {
    "text": "transaction I'm not going to forget and",
    "start": "1507039",
    "end": "1508720"
  },
  {
    "text": "we have this it saves you massive",
    "start": "1508720",
    "end": "1510279"
  },
  {
    "text": "headaches over problems of Forgotten",
    "start": "1510279",
    "end": "1511720"
  },
  {
    "text": "transactions where you have uh orphaned",
    "start": "1511720",
    "end": "1514159"
  },
  {
    "text": "records and things like that that",
    "start": "1514159",
    "end": "1515440"
  },
  {
    "text": "problem more or less goes away uh",
    "start": "1515440",
    "end": "1518360"
  },
  {
    "text": "goodbye forgotten",
    "start": "1518360",
    "end": "1520360"
  },
  {
    "text": "transactions uh and there's some notion",
    "start": "1520360",
    "end": "1522440"
  },
  {
    "text": "of command query responsibility",
    "start": "1522440",
    "end": "1524200"
  },
  {
    "text": "segregation here maybe not in like this",
    "start": "1524200",
    "end": "1525840"
  },
  {
    "text": "sort of strict definition but in the",
    "start": "1525840",
    "end": "1527399"
  },
  {
    "text": "more abstract definition defition read",
    "start": "1527399",
    "end": "1529200"
  },
  {
    "text": "and update or using different models",
    "start": "1529200",
    "end": "1531039"
  },
  {
    "text": "that makes sense in a SQL World in a SQL",
    "start": "1531039",
    "end": "1533120"
  },
  {
    "text": "World reads are going to contain",
    "start": "1533120",
    "end": "1534840"
  },
  {
    "text": "Aggregates and joins wres is always run",
    "start": "1534840",
    "end": "1537399"
  },
  {
    "text": "row at a time those are fundamentally",
    "start": "1537399",
    "end": "1538919"
  },
  {
    "text": "different shapes of data uh this gives",
    "start": "1538919",
    "end": "1541000"
  },
  {
    "text": "you two different models to work with",
    "start": "1541000",
    "end": "1542399"
  },
  {
    "text": "those instead of forcing you to use like",
    "start": "1542399",
    "end": "1544080"
  },
  {
    "text": "for instance one model object to sort of",
    "start": "1544080",
    "end": "1546360"
  },
  {
    "text": "represent both of those types of",
    "start": "1546360",
    "end": "1547960"
  },
  {
    "text": "operations uh which leads",
    "start": "1547960",
    "end": "1550360"
  },
  {
    "text": "to problems so uh you know um we instead",
    "start": "1550360",
    "end": "1554360"
  },
  {
    "text": "of trying to express our sort of DSL",
    "start": "1554360",
    "end": "1556080"
  },
  {
    "text": "here in like a very English style syntax",
    "start": "1556080",
    "end": "1557760"
  },
  {
    "text": "it's a very SQL style intact it's",
    "start": "1557760",
    "end": "1560039"
  },
  {
    "text": "forcing us to think about what we're",
    "start": "1560039",
    "end": "1561440"
  },
  {
    "text": "selecting it is an eager instead of lazy",
    "start": "1561440",
    "end": "1563640"
  },
  {
    "text": "loaded framework which which uh avoids",
    "start": "1563640",
    "end": "1565840"
  },
  {
    "text": "problems like accidentally firing",
    "start": "1565840",
    "end": "1567240"
  },
  {
    "text": "queries off in the view layer of your",
    "start": "1567240",
    "end": "1568840"
  },
  {
    "text": "application uh and it kind of forces you",
    "start": "1568840",
    "end": "1570840"
  },
  {
    "text": "to confine all your queries to sort of",
    "start": "1570840",
    "end": "1572279"
  },
  {
    "text": "one layer of the stack um on the",
    "start": "1572279",
    "end": "1575240"
  },
  {
    "text": "downside there's more boilerplate more",
    "start": "1575240",
    "end": "1577279"
  },
  {
    "text": "complex mental model with repos and",
    "start": "1577279",
    "end": "1578880"
  },
  {
    "text": "schemas it is less dry at least if you",
    "start": "1578880",
    "end": "1581240"
  },
  {
    "text": "want to ride it that way like I do um is",
    "start": "1581240",
    "end": "1583760"
  },
  {
    "text": "it less readable I don't know it depends",
    "start": "1583760",
    "end": "1585440"
  },
  {
    "text": "what you used to if you love SQL it's",
    "start": "1585440",
    "end": "1587000"
  },
  {
    "text": "not I love SQL I think it's fantastic",
    "start": "1587000",
    "end": "1588840"
  },
  {
    "text": "it's my favorite language to write in um",
    "start": "1588840",
    "end": "1591399"
  },
  {
    "text": "and we have this trade-off explicitness",
    "start": "1591399",
    "end": "1593120"
  },
  {
    "text": "and performance over convenience um it",
    "start": "1593120",
    "end": "1596600"
  },
  {
    "text": "lets databases do what they're best at",
    "start": "1596600",
    "end": "1598799"
  },
  {
    "text": "uh encourages SQL usage it's constraint",
    "start": "1598799",
    "end": "1600840"
  },
  {
    "text": "aware encourage transactions it's very",
    "start": "1600840",
    "end": "1603720"
  },
  {
    "text": "easy to test if you're writing automated",
    "start": "1603720",
    "end": "1605559"
  },
  {
    "text": "tests for this kind of thing uh it it",
    "start": "1605559",
    "end": "1607960"
  },
  {
    "text": "has the best I can't I don't have time",
    "start": "1607960",
    "end": "1609279"
  },
  {
    "text": "to get into it but it has the best sort",
    "start": "1609279",
    "end": "1610520"
  },
  {
    "text": "of uh testing framework for um for query",
    "start": "1610520",
    "end": "1612799"
  },
  {
    "text": "generation that I've seen uh you can it",
    "start": "1612799",
    "end": "1615600"
  },
  {
    "text": "does have capacity for if you've got uh",
    "start": "1615600",
    "end": "1617360"
  },
  {
    "text": "semi-structured data in your database",
    "start": "1617360",
    "end": "1618760"
  },
  {
    "text": "like a Json column or if you're using it",
    "start": "1618760",
    "end": "1620480"
  },
  {
    "text": "against a document store uh it supports",
    "start": "1620480",
    "end": "1622279"
  },
  {
    "text": "that too and you can write your own",
    "start": "1622279",
    "end": "1624000"
  },
  {
    "text": "adapters here is Ecto being used to",
    "start": "1624000",
    "end": "1625840"
  },
  {
    "text": "query the GitHub API so you can it",
    "start": "1625840",
    "end": "1628440"
  },
  {
    "text": "doesn't have to be just for relational",
    "start": "1628440",
    "end": "1629799"
  },
  {
    "text": "databases right people have written",
    "start": "1629799",
    "end": "1631240"
  },
  {
    "text": "adapters for",
    "start": "1631240",
    "end": "1632520"
  },
  {
    "text": "apis I'm Brad uranie follow me on",
    "start": "1632520",
    "end": "1635200"
  },
  {
    "text": "Twitter I'll follow you back uh feel",
    "start": "1635200",
    "end": "1636679"
  },
  {
    "text": "free me connect with me uh I've got a",
    "start": "1636679",
    "end": "1638840"
  },
  {
    "text": "Blog although I don't update it very",
    "start": "1638840",
    "end": "1640279"
  },
  {
    "text": "much I work in beautiful sunny Santa",
    "start": "1640279",
    "end": "1642919"
  },
  {
    "text": "Barbara California at procore I love the",
    "start": "1642919",
    "end": "1645120"
  },
  {
    "text": "chat uh thank",
    "start": "1645120",
    "end": "1647159"
  },
  {
    "text": "you",
    "start": "1647159",
    "end": "1648270"
  },
  {
    "text": "[Applause]",
    "start": "1648270",
    "end": "1651920"
  }
]