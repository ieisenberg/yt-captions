[
  {
    "text": "hey everybody I'm Luke I came over here from Chicago",
    "start": "9200",
    "end": "14309"
  },
  {
    "text": "to tell you about my favorite programming language Elm so Elm is",
    "start": "14309",
    "end": "20360"
  },
  {
    "text": "friendly functional programming for the web that's the name of this it's the name of this session and you can see",
    "start": "20360",
    "end": "26340"
  },
  {
    "text": "that on the Elm homepage Elm - Lang org it kind of builds itself as a delightful",
    "start": "26340",
    "end": "31980"
  },
  {
    "text": "language for building reliable web apps so it's it's functional but it's it's",
    "start": "31980",
    "end": "38820"
  },
  {
    "text": "kind of like that's not really the important part the important part is that you can you can use Elm to build really really nice experiences oh really",
    "start": "38820",
    "end": "50120"
  },
  {
    "text": "that's way better all right all right for real this time",
    "start": "54170",
    "end": "60680"
  },
  {
    "text": "yeah so you can use Elm to build really nice user experiences so kind of as the",
    "start": "60949",
    "end": "69180"
  },
  {
    "text": "web was developing we had this progression of Technology where people were coming up with ways so that you",
    "start": "69180",
    "end": "75000"
  },
  {
    "text": "could build cool stuff and now we're in a place where we kind of understand how to build cool stuff and the idea is how",
    "start": "75000",
    "end": "83310"
  },
  {
    "text": "do we build technologies that make people really good at building cool stuff and so Elm is a really nice",
    "start": "83310",
    "end": "89909"
  },
  {
    "text": "solution to that problem it's a really thoughtful solution to to making people really capable of building really nice",
    "start": "89909",
    "end": "97409"
  },
  {
    "text": "things even as beginners so today I kind",
    "start": "97409",
    "end": "102570"
  },
  {
    "text": "of wanna understand how many of y'all just by a show of hands have used Elm before in any capacity oh wow that's a",
    "start": "102570",
    "end": "110640"
  },
  {
    "text": "pretty good amount okay and so how many people maybe haven't used alum but you",
    "start": "110640",
    "end": "115680"
  },
  {
    "text": "know you've heard of what it is and you're interested in it okay that's a lot more so the idea that I want to the",
    "start": "115680",
    "end": "123270"
  },
  {
    "text": "ideas that I want to kind of go through today all right so to get folks who are interested kind of from being interested",
    "start": "123270",
    "end": "129899"
  },
  {
    "text": "to having actually seen somebody build a little thing with elm and understanding",
    "start": "129899",
    "end": "135000"
  },
  {
    "text": "what the experience is like and so I'm going to do that just by by writing some so I have a terminal here I'm gonna",
    "start": "135000",
    "end": "146340"
  },
  {
    "text": "steal a a technique from Jose Jose that I saw yesterday all right and then I",
    "start": "146340",
    "end": "158040"
  },
  {
    "text": "think this is pretty big so let's see",
    "start": "158040",
    "end": "166020"
  },
  {
    "text": "the first thing you have to do when you when you set up any sort of technology just like install it and get your",
    "start": "166020",
    "end": "171720"
  },
  {
    "text": "project set up so I have most of y'all worked with a tool like web pack or or gulp or you know a whole long list of",
    "start": "171720",
    "end": "179130"
  },
  {
    "text": "those things yeah would anybody say that it's like a super",
    "start": "179130",
    "end": "184740"
  },
  {
    "text": "easy experience to set up a front-end build chain so sitting up Elm goes like",
    "start": "184740",
    "end": "194610"
  },
  {
    "text": "this and maybe you'll you'll find it a lot nicer so one of the things you can",
    "start": "194610",
    "end": "202140"
  },
  {
    "text": "do is click get started on the home page and you'll see here there are installers",
    "start": "202140",
    "end": "207750"
  },
  {
    "text": "for Mac or Windows and I think the most convenient way to do it is if you've",
    "start": "207750",
    "end": "213450"
  },
  {
    "text": "already got NPM you can NPM install - JEE elm and I'm not going to run this",
    "start": "213450",
    "end": "219900"
  },
  {
    "text": "because we are at a conference and I don't trust the Wi-Fi so once you've",
    "start": "219900",
    "end": "226230"
  },
  {
    "text": "done that it will end up with a few things in your terminal so we've got L make which is the compiler LM is a",
    "start": "226230",
    "end": "233250"
  },
  {
    "text": "compiled static language we have elm package which is the package manager LM",
    "start": "233250",
    "end": "239130"
  },
  {
    "text": "repple which is the repple and elm reactor which is a reactive debugging environment elm is all about really",
    "start": "239130",
    "end": "246480"
  },
  {
    "text": "descriptive names for things instead of kind of fancy marketing names so if you",
    "start": "246480",
    "end": "252690"
  },
  {
    "text": "want to install a package without me use Elm package it's just kind of how things go if you want to do HTTP use Elm HTTP",
    "start": "252690",
    "end": "260780"
  },
  {
    "text": "so we're going to set up a project what you need to do to set up a known project is run LM package install enter package",
    "start": "260780",
    "end": "270090"
  },
  {
    "text": "manager is going to ask you if it's ok if we install a couple libraries so we have core and we have",
    "start": "270090",
    "end": "275610"
  },
  {
    "text": "HTML which depends on virtual Dom so core is the all the core libraries you",
    "start": "275610",
    "end": "281310"
  },
  {
    "text": "know list different data structures math functions all the things like that that you would just have to have around in",
    "start": "281310",
    "end": "288030"
  },
  {
    "text": "order to be productive with an elm an elm program and then HTML is how we're going to take our stuff and show it to",
    "start": "288030",
    "end": "294150"
  },
  {
    "text": "the user so we'll get to that towards the end well tell the package manager that it's ok to install these things so",
    "start": "294150",
    "end": "301770"
  },
  {
    "text": "now we've got a bunch of dependencies I really wish that we're bigger ok it's",
    "start": "301770",
    "end": "307890"
  },
  {
    "text": "not letting me zoom in I'll just LS that's cool so we've got this album",
    "start": "307890",
    "end": "313230"
  },
  {
    "text": "package that JSON which tells us a few things about our project we got a",
    "start": "313230",
    "end": "318510"
  },
  {
    "text": "version and just some information if we were going to be building a third party",
    "start": "318510",
    "end": "323970"
  },
  {
    "text": "package and then we'll tell elm where to find our project files it's pretty conventional to put it in in source so",
    "start": "323970",
    "end": "331620"
  },
  {
    "text": "we'll make a source directory and then this is really important these",
    "start": "331620",
    "end": "338160"
  },
  {
    "text": "dependency specifications so Elms package manager has strict semantic",
    "start": "338160",
    "end": "344130"
  },
  {
    "text": "versioning requirements and the way it's able to do this is since elm is statically typed the compiler can run",
    "start": "344130",
    "end": "351090"
  },
  {
    "text": "while the package manager is working figure out ok you published you know version 4 of elm Lang slash",
    "start": "351090",
    "end": "358680"
  },
  {
    "text": "core and you've made a change you've changed the type of some function you've changed the type of add to not no longer",
    "start": "358680",
    "end": "366150"
  },
  {
    "text": "accept floats but now accept integers which would break everybody's code and so when you go to publish this and you",
    "start": "366150",
    "end": "372930"
  },
  {
    "text": "try to say well you know integers and floats are still numbers so maybe it's just like a behind-the-scenes kind of",
    "start": "372930",
    "end": "378540"
  },
  {
    "text": "thing and you you bump the the patch version you say it's now 4.0.1 the compiler is going to go in it's",
    "start": "378540",
    "end": "385500"
  },
  {
    "text": "going to figure out actually this is a breaking change and so you're not allowed to publish this unless you change the semantics version major",
    "start": "385500",
    "end": "391440"
  },
  {
    "text": "version to 5 so nobody is allowed to publish breaking changes under non major",
    "start": "391440",
    "end": "397350"
  },
  {
    "text": "versions it keeps everything really nice for the people who use packages so you've you've set up an elm project and",
    "start": "397350",
    "end": "404040"
  },
  {
    "text": "you don't have any fear that updating your tendencies is going to cause type discrepancies it doesn't protect you",
    "start": "404040",
    "end": "411210"
  },
  {
    "text": "from from bugs but it does protect you from mistakes in in types and things like that so we add just to quickly",
    "start": "411210",
    "end": "420180"
  },
  {
    "text": "recap we've run out package install we've changed this to point a source and we've created that directory and the",
    "start": "420180",
    "end": "426690"
  },
  {
    "text": "last thing we'll need to do is create an",
    "start": "426690",
    "end": "432960"
  },
  {
    "text": "index.html so we've got source",
    "start": "432960",
    "end": "439440"
  },
  {
    "text": "index.html and then our Elam things and then my cheat sheet of topics so I'll",
    "start": "439440",
    "end": "446970"
  },
  {
    "text": "just fill this in",
    "start": "446970",
    "end": "449720"
  },
  {
    "text": "so we'll point this at some some built file let's call it Thane and then we can",
    "start": "454830",
    "end": "469200"
  },
  {
    "text": "go ahead and create no file so in like three steps we've set up everything that",
    "start": "469200",
    "end": "474270"
  },
  {
    "text": "we need to to run a basic element and that's pretty cool so let's actually",
    "start": "474270",
    "end": "481800"
  },
  {
    "text": "write some own that's why we're here",
    "start": "481800",
    "end": "485449"
  },
  {
    "text": "so when Soros we've got this may not Elm file means a pretty a pretty standard name for for an entry point home file",
    "start": "490210",
    "end": "497740"
  },
  {
    "text": "and all m-files need to have a module so this files named mean so we have to call",
    "start": "497740",
    "end": "504400"
  },
  {
    "text": "it mean if we had a module called source slash whatever slash thing we'd have to",
    "start": "504400",
    "end": "511509"
  },
  {
    "text": "call that whatever dot thing module names have to map onto the directory",
    "start": "511509",
    "end": "517180"
  },
  {
    "text": "that they're in with the correct file name so if this is may not Elm the module name has to be main and then it",
    "start": "517180",
    "end": "523240"
  },
  {
    "text": "helps us keep our our module names kind of unique and avoid name clashes and",
    "start": "523240",
    "end": "531310"
  },
  {
    "text": "we'll say what it exposes so it's gonna just be everything right now dot dot means everything",
    "start": "531310",
    "end": "537240"
  },
  {
    "text": "so Elm is really lovely it's really easy to learn when you dig into it because",
    "start": "537240",
    "end": "542890"
  },
  {
    "text": "there are really few concepts that you need to understand so there are there's some data there's numbers integers",
    "start": "542890",
    "end": "550000"
  },
  {
    "text": "floats there's strings boolean's all the primitive types and then there are data",
    "start": "550000",
    "end": "555010"
  },
  {
    "text": "structures and combinations of those types all data has a type so we need to",
    "start": "555010",
    "end": "560110"
  },
  {
    "text": "say what our data is and what its shape is and then we create relationships with with data using functions so it's just",
    "start": "560110",
    "end": "567400"
  },
  {
    "text": "data and functions that's all we need to really understand to understand Elm and then sometimes data has a special",
    "start": "567400",
    "end": "574900"
  },
  {
    "text": "meaning to the to the UM runtime and it tells it to do things like render or or",
    "start": "574900",
    "end": "580180"
  },
  {
    "text": "do HTTP requests but it's still all just data so you don't you're not actually ever causing an HTTP request to happen",
    "start": "580180",
    "end": "587830"
  },
  {
    "text": "you're only ever describing what your request should look like and then at all it'll happen later kind of out of your",
    "start": "587830",
    "end": "594070"
  },
  {
    "text": "control and this has some really nice effects it allows us to think only in terms of what the state of the world is",
    "start": "594070",
    "end": "601089"
  },
  {
    "text": "in terms of data in terms of a model and it allows us to describe all the changes",
    "start": "601089",
    "end": "607270"
  },
  {
    "text": "in our system using only functions only stateless functions so there aren't little islands of state kind of all over",
    "start": "607270",
    "end": "613029"
  },
  {
    "text": "the place interacting with each other and being overwritten we've only ever got one state and we're only ever",
    "start": "613029",
    "end": "618910"
  },
  {
    "text": "allowed to do immutable updates to that state with a function so let's let's take a look here so let's",
    "start": "618910",
    "end": "626690"
  },
  {
    "text": "let's start with like some value and we'll say some value is an int and some",
    "start": "626690",
    "end": "631730"
  },
  {
    "text": "value is equal to 42 and I can compile",
    "start": "631730",
    "end": "638060"
  },
  {
    "text": "this with el meek I just say I'll make that's not source slash mean not elm",
    "start": "638060",
    "end": "643160"
  },
  {
    "text": "it'll tell it to output to build slash mean j/s and it compiles successfully",
    "start": "643160",
    "end": "651640"
  },
  {
    "text": "the generated code for alum is is interesting-looking it's a it's quite",
    "start": "651640",
    "end": "660290"
  },
  {
    "text": "large it's a lot of code goes on for a",
    "start": "660290",
    "end": "665930"
  },
  {
    "text": "while the the idea is that elm has no runtime errors it doesn't have a concept",
    "start": "665930",
    "end": "671870"
  },
  {
    "text": "of runtime errors and I'm going to be going progressively over what are some of the features of the language that make that possible",
    "start": "671870",
    "end": "677600"
  },
  {
    "text": "so you don't really ever need to like stick a a breakpoint on any line of this",
    "start": "677600",
    "end": "682850"
  },
  {
    "text": "of this interesting-looking code a nice property of this code however is that",
    "start": "682850",
    "end": "688540"
  },
  {
    "text": "since everything is kind of at the top level and just concatenated with dollar signs it's very amenable to minute",
    "start": "688540",
    "end": "694430"
  },
  {
    "text": "minification so you can end up with a really small you know 40 kilobyte after gzip file for a really complicated",
    "start": "694430",
    "end": "701690"
  },
  {
    "text": "application all right so we've got some value I will write a function add so add",
    "start": "701690",
    "end": "711140"
  },
  {
    "text": "is going to take an int and an int and it's going to produce a new int and we",
    "start": "711140",
    "end": "718400"
  },
  {
    "text": "define the body of the function like so so we have left as the first argument we write as the second and we're only going",
    "start": "718400",
    "end": "725630"
  },
  {
    "text": "to do two arguments so we'll say equals and then left + right so for folks",
    "start": "725630",
    "end": "732080"
  },
  {
    "text": "coming from like a JavaScript or Java background primarily this is like a weird way to look at a function because",
    "start": "732080",
    "end": "738170"
  },
  {
    "text": "there's no parentheses and there's no comma and there's like a weird random arrow in between these two ends here",
    "start": "738170",
    "end": "743780"
  },
  {
    "text": "it might make sense if it looked more like this but we do it like this because",
    "start": "743780",
    "end": "749210"
  },
  {
    "text": "you know all of your functions kind of progressively apply apply arguments so I",
    "start": "749210",
    "end": "755780"
  },
  {
    "text": "don't have to just all add with two numbers I don't have to call it like this necessarily I could",
    "start": "755780",
    "end": "761900"
  },
  {
    "text": "say that I want you know a premade function add ten and I want that to just",
    "start": "761900",
    "end": "767960"
  },
  {
    "text": "take an in tune add 10 to it produce another int and I can defy to add 10 in terms of add I just pass it",
    "start": "767960",
    "end": "776150"
  },
  {
    "text": "one so when you're reading function signatures you know you kind of go from",
    "start": "776150",
    "end": "781850"
  },
  {
    "text": "left to right and you say well add takes an int okay and then after this arrow we",
    "start": "781850",
    "end": "786920"
  },
  {
    "text": "have two more things so after it takes an int it's giving me a function back that's going to take another end which",
    "start": "786920",
    "end": "792920"
  },
  {
    "text": "will then give me my final result and this is true of all functions in Elm so",
    "start": "792920",
    "end": "800060"
  },
  {
    "text": "if I want to say our results is an int will produce the result and say we're",
    "start": "800060",
    "end": "808100"
  },
  {
    "text": "going to add some value to itself ah-ha I misspelled it cool so now now",
    "start": "808100",
    "end": "819080"
  },
  {
    "text": "we're all good we can compile this or we can run it in the repple I could say",
    "start": "819080",
    "end": "829880"
  },
  {
    "text": "import to mean exposing everything you can look at some value just 42 and I can",
    "start": "829880",
    "end": "840470"
  },
  {
    "text": "look at the result which is 84 excellent",
    "start": "840470",
    "end": "849430"
  },
  {
    "text": "so what's that let's like talk about a scenario so after this talk which is super good y'all have been convinced",
    "start": "849430",
    "end": "856970"
  },
  {
    "text": "that you're going to use elm and you've gone off and you've built like a massive project with it at your super successful startups and now you've got lots of",
    "start": "856970",
    "end": "864440"
  },
  {
    "text": "teams and we're gonna say that you know feature Team B is over here they're",
    "start": "864440",
    "end": "871250"
  },
  {
    "text": "responsible for the implementation of add and results and feature team a is up",
    "start": "871250",
    "end": "878660"
  },
  {
    "text": "here and they're responsible for some value so the project manager the product",
    "start": "878660",
    "end": "884000"
  },
  {
    "text": "manager for future team a comes via and they say well listen it's really important to our customers that that's",
    "start": "884000",
    "end": "889640"
  },
  {
    "text": "some value B implement as a string instead of an inch for some reason so we can go in and we can make",
    "start": "889640",
    "end": "895520"
  },
  {
    "text": "that change now this is problematic of",
    "start": "895520",
    "end": "902960"
  },
  {
    "text": "course if this was not this was not Elam we might we might be able to do this we",
    "start": "902960",
    "end": "908540"
  },
  {
    "text": "might be able to take some value pass it into to add and end up with something super weird like this stream for two for",
    "start": "908540",
    "end": "914600"
  },
  {
    "text": "two or maybe there's like weird casting going on somewhere in any case the user is currently expecting to see 84 as the",
    "start": "914600",
    "end": "921890"
  },
  {
    "text": "value of results as we as we see over here and they're not going to get that",
    "start": "921890",
    "end": "927710"
  },
  {
    "text": "if this runs but we're lucky because we're using Elam and when I try to",
    "start": "927710",
    "end": "933680"
  },
  {
    "text": "compile this the compiler has has some",
    "start": "933680",
    "end": "943220"
  },
  {
    "text": "words for us it's going to sell us the first argument to the function add is",
    "start": "943220",
    "end": "948620"
  },
  {
    "text": "causing a type mismatch it's wrong as expecting the first arguments be an int but actually it's a string I don't know",
    "start": "948620",
    "end": "956089"
  },
  {
    "text": "if you all have used compiled languages before but this is the most amazing compiler message that I've ever seen in",
    "start": "956089",
    "end": "961670"
  },
  {
    "text": "my whole life it's exactly where the problem is and what we did wrong and so",
    "start": "961670",
    "end": "967610"
  },
  {
    "text": "we've we've made a mistake we're on two totally separate teams there's a lot of",
    "start": "967610",
    "end": "973250"
  },
  {
    "text": "code in this code base but before we've even before we've run in CI before we",
    "start": "973250",
    "end": "978830"
  },
  {
    "text": "run any tests before we've gotten to production before users have started submitting tickets before we've done",
    "start": "978830",
    "end": "984500"
  },
  {
    "text": "anything before we've even seen any code run we already know that there's a problem with our program and so we can",
    "start": "984500",
    "end": "990740"
  },
  {
    "text": "go back to the the product manager and say we can't really do this we'll have to come up with a different way we're",
    "start": "990740",
    "end": "995780"
  },
  {
    "text": "going to be late on this deadline maybe and so we'll just change it back to an int and when we build it everything is",
    "start": "995780",
    "end": "1004240"
  },
  {
    "text": "okay now if you're like me you kind of get frustrated with process sometimes",
    "start": "1004240",
    "end": "1010540"
  },
  {
    "text": "and maybe you just like want to get it done and see how it goes so if it were me I'd be sneaky I try and",
    "start": "1010540",
    "end": "1015940"
  },
  {
    "text": "like take these types off I'm just going to take away the types and I'm going to",
    "start": "1015940",
    "end": "1021130"
  },
  {
    "text": "try and put one past the compiler",
    "start": "1021130",
    "end": "1025110"
  },
  {
    "text": "it's virtually the same message so I took away all the type annotations and",
    "start": "1027150",
    "end": "1032260"
  },
  {
    "text": "we're still being told add one some numbers and you're giving it a string so",
    "start": "1032260",
    "end": "1037870"
  },
  {
    "text": "this is this is really cool albums type system is it's thorough it's it's a hindley-milner type system for",
    "start": "1037870",
    "end": "1044290"
  },
  {
    "text": "for folks who are interested in in the computer science of it meaning it knows",
    "start": "1044290",
    "end": "1049450"
  },
  {
    "text": "what the type of AD is supposed to be because it knows what the type of the plus operator is the plus operator",
    "start": "1049450",
    "end": "1054640"
  },
  {
    "text": "itself is just a function find like this",
    "start": "1054640",
    "end": "1059880"
  },
  {
    "text": "rather it's a number it's kind of a generic so the compiler already knows",
    "start": "1059880",
    "end": "1067180"
  },
  {
    "text": "what plus is defined as and we've defined add entirely in terms of plus so it knows what add is supposed to be and",
    "start": "1067180",
    "end": "1073120"
  },
  {
    "text": "it knows what some value is because it's defined as a literal so the compiler is able to keep us in check even if we",
    "start": "1073120",
    "end": "1079030"
  },
  {
    "text": "don't feel like filling in those type annotations all the time so we've saved",
    "start": "1079030",
    "end": "1084580"
  },
  {
    "text": "ourselves a lot of debugging so so far",
    "start": "1084580",
    "end": "1096520"
  },
  {
    "text": "we've we've covered like basic basic data you know 42 is maybe interesting",
    "start": "1096520",
    "end": "1104530"
  },
  {
    "text": "but it's not interesting enough so what we're going to do is model some real data so like I said in Elm we have",
    "start": "1104530",
    "end": "1112900"
  },
  {
    "text": "primitive types we also have ways of combining them into data structures so the way that we do structured data in",
    "start": "1112900",
    "end": "1118150"
  },
  {
    "text": "almost with records so if I want to kind of define myself let's say my name is",
    "start": "1118150",
    "end": "1124510"
  },
  {
    "text": "Luke I have a name which is a string and I have an age which is an int and if I",
    "start": "1124510",
    "end": "1132640"
  },
  {
    "text": "want to fill this in this is a record type so we've got name fields with",
    "start": "1132640",
    "end": "1138070"
  },
  {
    "text": "particular types just in curly braces and colons for for each field and if I",
    "start": "1138070",
    "end": "1144340"
  },
  {
    "text": "want to create an instance of this if I want to create a value with this type I'll first fix the indentation",
    "start": "1144340",
    "end": "1151920"
  },
  {
    "text": "come on here we go",
    "start": "1156650",
    "end": "1161930"
  },
  {
    "text": "so my name is Luke I have an age and",
    "start": "1161930",
    "end": "1167250"
  },
  {
    "text": "then maybe I want to like model my fiancee - so death also has a name and",
    "start": "1167250",
    "end": "1173900"
  },
  {
    "text": "she also has an age",
    "start": "1173900",
    "end": "1177440"
  },
  {
    "text": "okay and then let's let's write a function on this because LM is all about data and functions so we'll get like um",
    "start": "1185080",
    "end": "1193240"
  },
  {
    "text": "you know person info it'll take a person with a name string",
    "start": "1193240",
    "end": "1201770"
  },
  {
    "text": "and an age which is an int and it'll produce some string message okay we'll",
    "start": "1201770",
    "end": "1212450"
  },
  {
    "text": "say a person named little penny string",
    "start": "1212450",
    "end": "1218410"
  },
  {
    "text": "is the string look at the string version",
    "start": "1218410",
    "end": "1225770"
  },
  {
    "text": "of their age and it'll say years old period so now we have a function on",
    "start": "1225770",
    "end": "1235580"
  },
  {
    "text": "these data types now if we jump back in to the repple let's see we can call we",
    "start": "1235580",
    "end": "1246410"
  },
  {
    "text": "can first import mean again and then if",
    "start": "1246410",
    "end": "1253520"
  },
  {
    "text": "we call person info let me I'll tell you how what my name is and how old I am",
    "start": "1253520",
    "end": "1259040"
  },
  {
    "text": "call it on Beth you'll get the same information so this is pretty cool",
    "start": "1259040",
    "end": "1264679"
  },
  {
    "text": "that's keeping us in check if I happen to misspell a parameter here I try and",
    "start": "1264679",
    "end": "1271970"
  },
  {
    "text": "evaluate this again it's going to tell us this is a really cool error message and actually I want to run it with the",
    "start": "1271970",
    "end": "1277760"
  },
  {
    "text": "compiler because it's better with color check this out it's awesome so it's",
    "start": "1277760",
    "end": "1286280"
  },
  {
    "text": "saying the type annotation for person info is wrong or it's it's disagreeing with with what you've given it it's",
    "start": "1286280",
    "end": "1292340"
  },
  {
    "text": "saying you pass in some record with a name field but what you actually tried",
    "start": "1292340",
    "end": "1298340"
  },
  {
    "text": "to pass in when you called it was something with name without an e at the end it's so smart it's done 11:15",
    "start": "1298340",
    "end": "1306260"
  },
  {
    "text": "distance comparison between what you gave it and what it actually got and actually figured out hey actually you",
    "start": "1306260",
    "end": "1312320"
  },
  {
    "text": "might have just misspelled this thing and that's totally the case so if I fix this",
    "start": "1312320",
    "end": "1317510"
  },
  {
    "text": "everything goes back to normal so we",
    "start": "1317510",
    "end": "1323030"
  },
  {
    "text": "might be seeing that error message a lot because I'm bad at spelling but it's totally just like a demo of the awesome",
    "start": "1323030",
    "end": "1328820"
  },
  {
    "text": "compiler messages it's totally on purpose okay sure",
    "start": "1328820",
    "end": "1336789"
  },
  {
    "text": "it'll be less direct so if I just like naturally key word a little bit so it's",
    "start": "1338770",
    "end": "1353120"
  },
  {
    "text": "not going to tell you that it wants something with name but you actually gave it something else but it's not",
    "start": "1353120",
    "end": "1358520"
  },
  {
    "text": "going to do that distance comparison it doesn't really know that's what you meant but it's still it's still pretty",
    "start": "1358520",
    "end": "1364400"
  },
  {
    "text": "close still telling you what you missed and what you had okay so pretty good so",
    "start": "1364400",
    "end": "1376040"
  },
  {
    "text": "far so we've we've kind of eliminated type errors we've kind of eliminated a sort of method missing errors these are",
    "start": "1376040",
    "end": "1382370"
  },
  {
    "text": "things that you're not going to have to deal with if you build a project with elm especially spelling mistakes which",
    "start": "1382370",
    "end": "1388580"
  },
  {
    "text": "is probably like the single most common source of undefined is not a function in",
    "start": "1388580",
    "end": "1394580"
  },
  {
    "text": "JavaScript so you can prepared it to like virtually never see that again if you use home so this this will this code",
    "start": "1394580",
    "end": "1403850"
  },
  {
    "text": "is not perfect though it's um it's prone to kind of refactoring problems it's Pro it's got a lot of",
    "start": "1403850",
    "end": "1409940"
  },
  {
    "text": "duplication so if I wanted to say well actually my age is afloat because I'm 25 and a half it's uh it'll still compile",
    "start": "1409940",
    "end": "1420740"
  },
  {
    "text": "okay because we have an actually called person info but if I open the repple and",
    "start": "1420740",
    "end": "1427190"
  },
  {
    "text": "I try and call person info with myself",
    "start": "1427190",
    "end": "1432919"
  },
  {
    "text": "we're gonna have a problem because it wants an int it's actually a float but things still work with with Beth so",
    "start": "1432919",
    "end": "1440570"
  },
  {
    "text": "we've got a refactoring issue I've got a code duplication issue unless let's get",
    "start": "1440570",
    "end": "1446240"
  },
  {
    "text": "around this by allowing us to assign you know qualified name to our to our complicated types so I can",
    "start": "1446240",
    "end": "1453050"
  },
  {
    "text": "just do this you see type person type alias rather person doesn't mean just",
    "start": "1453050",
    "end": "1463580"
  },
  {
    "text": "ring age which is a float I can replace",
    "start": "1463580",
    "end": "1470030"
  },
  {
    "text": "this",
    "start": "1470030",
    "end": "1472330"
  },
  {
    "text": "and now when I call it everything's fine",
    "start": "1486610",
    "end": "1491669"
  },
  {
    "text": "and I can go back and I can refactor this to be an int and I get helpful",
    "start": "1492659",
    "end": "1498549"
  },
  {
    "text": "minting errors and I get helpful compiler errors again tell me to go",
    "start": "1498549",
    "end": "1505210"
  },
  {
    "text": "through and fix my data before I even bother to deal with my function so it's saying that you've declared us as a",
    "start": "1505210",
    "end": "1511750"
  },
  {
    "text": "person this unified sort of source of information about the the shape of these things but you assigned it to be a float",
    "start": "1511750",
    "end": "1517870"
  },
  {
    "text": "so you need to go and fix that so when I do that everything's fine again",
    "start": "1517870",
    "end": "1525090"
  },
  {
    "text": "excellent let me see where we are okay",
    "start": "1532900",
    "end": "1544620"
  },
  {
    "text": "so let's now do something a little bit more complicated it's a best seller",
    "start": "1547270",
    "end": "1553370"
  },
  {
    "text": "Chicago so she's gonna leave us for now let's um let's make this let's make this",
    "start": "1553370",
    "end": "1560570"
  },
  {
    "text": "data model maybe a little bit more specific to two conferences let's say so the people here they have names we're",
    "start": "1560570",
    "end": "1567350"
  },
  {
    "text": "not interested in people's ages at conferences but maybe we are interested",
    "start": "1567350",
    "end": "1572540"
  },
  {
    "text": "in like their their role at the conference kind of what we're doing here what's written on our badge that I forgot in my room that's gonna hold it",
    "start": "1572540",
    "end": "1579230"
  },
  {
    "text": "up so let's say like role at conf",
    "start": "1579230",
    "end": "1585130"
  },
  {
    "text": "make this string instead of this we'll say well at cough is speak here but",
    "start": "1585130",
    "end": "1593540"
  },
  {
    "text": "maybe we also have like attendee or crew things like that and so I'm a speaker so",
    "start": "1593540",
    "end": "1602179"
  },
  {
    "text": "I will do this for person info will say",
    "start": "1602179",
    "end": "1608960"
  },
  {
    "text": "is a and then will do to what's already a string so we can do person dot role at",
    "start": "1608960",
    "end": "1616549"
  },
  {
    "text": "kampf it will say at go to C pH okay",
    "start": "1616549",
    "end": "1623290"
  },
  {
    "text": "save this okay so I'm gonna speaker it",
    "start": "1623290",
    "end": "1629299"
  },
  {
    "text": "go to C pH I'm pretty good but like I",
    "start": "1629299",
    "end": "1634580"
  },
  {
    "text": "said I'm not very good at spelling so it's more likely if I was doing a production application that I would do",
    "start": "1634580",
    "end": "1640280"
  },
  {
    "text": "something like this I'll leave off the R or something and so when this gets called eventually in our our nice UI",
    "start": "1640280",
    "end": "1647919"
  },
  {
    "text": "users are going to be pretty upset with us because you know this is a really",
    "start": "1647919",
    "end": "1653720"
  },
  {
    "text": "nice conference and even though I did the best I could I totally embarrassed everybody by spelling the word speaker wrong the",
    "start": "1653720",
    "end": "1661220"
  },
  {
    "text": "problem is this is totally valid code this is completely valid elm we've said",
    "start": "1661220",
    "end": "1666260"
  },
  {
    "text": "that role at conf is a string and it is like it's totally a valid string I've",
    "start": "1666260",
    "end": "1672590"
  },
  {
    "text": "done nothing wrong as far as the compiler is concerned I'm just bad at English",
    "start": "1672590",
    "end": "1678620"
  },
  {
    "text": "so what I need to do is make sure that I don't have the opportunity to make this mistake so we're totally sure that there",
    "start": "1678620",
    "end": "1686300"
  },
  {
    "text": "are three options for our role at Coffield we said there was going to be speaker and attendee and crew so Elm",
    "start": "1686300",
    "end": "1694040"
  },
  {
    "text": "let's just deal with this by defining our own data types with custom values so I can just sign this totally new type I",
    "start": "1694040",
    "end": "1700820"
  },
  {
    "text": "just say type role I say it's either a",
    "start": "1700820",
    "end": "1706550"
  },
  {
    "text": "speaker see what I mean by the spelling um speaker or attendee or crew so now if",
    "start": "1706550",
    "end": "1721880"
  },
  {
    "text": "I want to do this I can just assign this value this is now a first class thing",
    "start": "1721880",
    "end": "1728090"
  },
  {
    "text": "it's just a regular value just like any other I can pass it wherever I want if I",
    "start": "1728090",
    "end": "1733250"
  },
  {
    "text": "want to do person info I'm going to need to pattern match so I'll do case person",
    "start": "1733250",
    "end": "1739990"
  },
  {
    "text": "dot roll it keV of two the first option is speaker they can say there's not name",
    "start": "1740350",
    "end": "1750370"
  },
  {
    "text": "just speaking we can get a little bit more specific that go to CPH get rid of",
    "start": "1750370",
    "end": "1758300"
  },
  {
    "text": "this other stuff so also we can be an",
    "start": "1758300",
    "end": "1764270"
  },
  {
    "text": "attendee that name is attending go to UC",
    "start": "1764270",
    "end": "1773330"
  },
  {
    "text": "pH we could say crew person dot name is",
    "start": "1773330",
    "end": "1781429"
  },
  {
    "text": "a member of the go two's H crew and it's",
    "start": "1781429",
    "end": "1789890"
  },
  {
    "text": "upset at me because I haven't changed this so in addition to using the value",
    "start": "1789890",
    "end": "1796790"
  },
  {
    "text": "down here we also have to declare it in the type say this is now a role as opposed to a string person info looks",
    "start": "1796790",
    "end": "1805580"
  },
  {
    "text": "good so if I say person info of Luke now that's as I'm speaking",
    "start": "1805580",
    "end": "1811330"
  },
  {
    "text": "but if I change my role to be a 10 so after this I'll just be an attendee I can change that they'll be attending and",
    "start": "1811330",
    "end": "1818590"
  },
  {
    "text": "this is not the case but if I change this to Cru it would print out the crew message and if I misspell it now and I",
    "start": "1818590",
    "end": "1830080"
  },
  {
    "text": "try to compile it it's going to do that same kind of helpful information it's going to say I don't know what this is",
    "start": "1830080",
    "end": "1836980"
  },
  {
    "text": "but I found something pretty close so maybe this is what you meant so again",
    "start": "1836980",
    "end": "1842320"
  },
  {
    "text": "we've we've totally cut out like weird edge cases and spelling mistakes even for things where you might have a string",
    "start": "1842320",
    "end": "1849850"
  },
  {
    "text": "in other languages to denote innumerable options so we're just we're slowly",
    "start": "1849850",
    "end": "1856050"
  },
  {
    "text": "breaking down opportunities for for ways for your program to crash so I change",
    "start": "1856050",
    "end": "1862360"
  },
  {
    "text": "this back everything will compile just fine okay another nice thing about using",
    "start": "1862360",
    "end": "1872560"
  },
  {
    "text": "these kind of types is that if you're like me you're impatient you want to get like straight to the the cool visual",
    "start": "1872560",
    "end": "1878620"
  },
  {
    "text": "part of building that UI so maybe I only want to deal with speakers right now that's the kind of like piece of the UI",
    "start": "1878620",
    "end": "1886480"
  },
  {
    "text": "that I want to build so I'm just gonna fill in the speaker part and then maybe I'll come back to it later if I remember",
    "start": "1886480",
    "end": "1891910"
  },
  {
    "text": "and fill in the rest but I try to compile this the compiler is going to",
    "start": "1891910",
    "end": "1900160"
  },
  {
    "text": "have something to say about that it's gonna say that you did this case",
    "start": "1900160",
    "end": "1905230"
  },
  {
    "text": "statement your pattern matching on role at conf but you're missing two values so there's totally an opportunity here for",
    "start": "1905230",
    "end": "1912580"
  },
  {
    "text": "if this code were to theoretically execute for you to pass something in and not have code that deals with it so you",
    "start": "1912580",
    "end": "1918670"
  },
  {
    "text": "might return an undefined but we don't do undefined an elm so before I even let you run this code you're going to have",
    "start": "1918670",
    "end": "1924820"
  },
  {
    "text": "to finish writing the function so that",
    "start": "1924820",
    "end": "1931580"
  },
  {
    "text": "be a place where you can know or undefined reference error sneaks in and we just we can't have that so there's",
    "start": "1931580",
    "end": "1941000"
  },
  {
    "text": "there's a there's another way to deal with null in elm it's called maybe maybe is to find like",
    "start": "1941000",
    "end": "1948890"
  },
  {
    "text": "this so type maybe a so ace type",
    "start": "1948890",
    "end": "1953990"
  },
  {
    "text": "parameter meaning that maybe it's like a container for a thing a is any type so",
    "start": "1953990",
    "end": "1959060"
  },
  {
    "text": "you can have a maybe int maybe string maybe person maybe he's either just the",
    "start": "1959060",
    "end": "1965210"
  },
  {
    "text": "thing or it's nothing",
    "start": "1965210",
    "end": "1971410"
  },
  {
    "text": "this is incredibly elegant so this is the same kind of custom type as up here there's nothing special in the language",
    "start": "1971410",
    "end": "1977450"
  },
  {
    "text": "that defines maybe it's just kind of around defined exactly like this and it",
    "start": "1977450",
    "end": "1985520"
  },
  {
    "text": "has all kind of amazing properties what it forces you to do is deal with",
    "start": "1985520",
    "end": "1990620"
  },
  {
    "text": "emptiness before you deal with value so where as null is kind of interleaved with the idea of existence so you can",
    "start": "1990620",
    "end": "1997820"
  },
  {
    "text": "have some variable in Java or JavaScript and it can it can be it can be a you",
    "start": "1997820",
    "end": "2005020"
  },
  {
    "text": "know a person or it can be null and there's nothing about the name of the variable or any properties of that",
    "start": "2005020",
    "end": "2012040"
  },
  {
    "text": "variable that tells you which one that's going to be in elm since emptiness is represented outside of value you have to",
    "start": "2012040",
    "end": "2020320"
  },
  {
    "text": "deal with it first so just like we pattern matched on role it can't we have to pattern match one",
    "start": "2020320",
    "end": "2026620"
  },
  {
    "text": "maybe in order to get at the value inside so let's say there's a you know",
    "start": "2026620",
    "end": "2033990"
  },
  {
    "text": "we're going to represent the the person on the stage so sometimes there's a person up here and sometimes they're not",
    "start": "2033990",
    "end": "2039430"
  },
  {
    "text": "there's not that's a case where we there would maybe be somebody up here so we'll",
    "start": "2039430",
    "end": "2044710"
  },
  {
    "text": "have a person on stage and that's a maybe person",
    "start": "2044710",
    "end": "2051990"
  },
  {
    "text": "and so if we if we don't have anybody up",
    "start": "2055899",
    "end": "2061550"
  },
  {
    "text": "here we'll just say nothing is on the stage not to refer to people as things",
    "start": "2061550",
    "end": "2067190"
  },
  {
    "text": "that's a little bit weird but if somebody's up here so I'm up here right",
    "start": "2067190",
    "end": "2072260"
  },
  {
    "text": "now we could say just Luke and so now if we want to do a person info we can refactor",
    "start": "2072260",
    "end": "2078260"
  },
  {
    "text": "this code a little bit to accept a maybe person will rename this to be more clear",
    "start": "2078260",
    "end": "2088510"
  },
  {
    "text": "now we pattern match on maybe person it's a case maybe person of just person",
    "start": "2088510",
    "end": "2096908"
  },
  {
    "text": "then we'll deal with their info otherwise nothing we could say no one is",
    "start": "2096970",
    "end": "2106340"
  },
  {
    "text": "up on the stage fanni face great they will call this",
    "start": "2106340",
    "end": "2115790"
  },
  {
    "text": "person on the stage info if you look in",
    "start": "2115790",
    "end": "2123200"
  },
  {
    "text": "the repple we can do import we can do a",
    "start": "2123200",
    "end": "2131930"
  },
  {
    "text": "person on stage info a person on stage",
    "start": "2131930",
    "end": "2138310"
  },
  {
    "text": "so I'm up here right now tells you about me otherwise if this is empty it'll tell",
    "start": "2138310",
    "end": "2149300"
  },
  {
    "text": "us that no one's on the stage and will be really sad and so just like before",
    "start": "2149300",
    "end": "2156160"
  },
  {
    "text": "when I left off parts of this pattern matching statement part of this case statement if we want to be lazy like I",
    "start": "2156160",
    "end": "2163100"
  },
  {
    "text": "do always and leave off this part and just get like straight to building the",
    "start": "2163100",
    "end": "2168320"
  },
  {
    "text": "cool flashy UI for the case where somebody's there the compilers not going to let us",
    "start": "2168320",
    "end": "2175420"
  },
  {
    "text": "it's a little bit for those but it gets to the same kind of point it's saying Oh",
    "start": "2182780",
    "end": "2189010"
  },
  {
    "text": "part of me we don't need this because it's built in okay so it's saying um",
    "start": "2189010",
    "end": "2207460"
  },
  {
    "text": "your case here on maybe person you cover the jest but you also need to cover",
    "start": "2207460",
    "end": "2212870"
  },
  {
    "text": "nothing otherwise we're going to be in the same kind of situation we have with null and nulls not allowed in elm",
    "start": "2212870",
    "end": "2218480"
  },
  {
    "text": "because programs aren't allowed to crash a gnome so you need to deal with it",
    "start": "2218480",
    "end": "2224150"
  },
  {
    "text": "we're also not going to compile your code so we go back to nothing I'll just",
    "start": "2224150",
    "end": "2231290"
  },
  {
    "text": "undo for a while there we go and so now",
    "start": "2231290",
    "end": "2238610"
  },
  {
    "text": "we're all set again great",
    "start": "2238610",
    "end": "2244070"
  },
  {
    "text": "I got about 15 minutes left I think awesome so we've we've been doing raffle",
    "start": "2244070",
    "end": "2249740"
  },
  {
    "text": "stuff we've been doing kind of data stuff we've been looking at Elm syntax and exploring how it keeps us safe from",
    "start": "2249740",
    "end": "2257200"
  },
  {
    "text": "from runtime errors but we've didn't even actually like built a web app and this is like the front ends track so we",
    "start": "2257200",
    "end": "2263990"
  },
  {
    "text": "should probably do that so we've got a whole bunch of cool data stuff up top",
    "start": "2263990",
    "end": "2269920"
  },
  {
    "text": "now we want to actually get into building an app with Elm we again needs",
    "start": "2269920",
    "end": "2275900"
  },
  {
    "text": "to start thinking about data in functions and how they relate different data together Elam has a few things",
    "start": "2275900",
    "end": "2285470"
  },
  {
    "text": "built in a few things that you can use to create this paradigm that takes advantage of that property of elm and of",
    "start": "2285470",
    "end": "2291260"
  },
  {
    "text": "those special types that I mentioned before the special data types that tell the Elm runtime wants to do and create",
    "start": "2291260",
    "end": "2297560"
  },
  {
    "text": "an architecture around it this is called in the community it's called the Elm architecture because again we have very",
    "start": "2297560",
    "end": "2303050"
  },
  {
    "text": "straightforward names so it's an architecture about Elam that's the Elm architecture it uses Elm HTML for HTML",
    "start": "2303050",
    "end": "2311750"
  },
  {
    "text": "things and it kind of works in this paradigm of mV you the people of MV things so it's",
    "start": "2311750",
    "end": "2320469"
  },
  {
    "text": "model model is like the the cohesive unified representation of what's",
    "start": "2320469",
    "end": "2326799"
  },
  {
    "text": "happening in our program as a datatype update which is the U and M vu is how",
    "start": "2326799",
    "end": "2332829"
  },
  {
    "text": "that thing is allowed to change over time given different things that happen in your app and you have complete",
    "start": "2332829",
    "end": "2338199"
  },
  {
    "text": "control over what that's going to be and then the view is just a function of the model that converts it to virtual Dom",
    "start": "2338199",
    "end": "2346900"
  },
  {
    "text": "that the runtime will then render just like react kind of does or different",
    "start": "2346900",
    "end": "2352509"
  },
  {
    "text": "there's there's quite a few things that use virtual Dom now so in order to get",
    "start": "2352509",
    "end": "2358209"
  },
  {
    "text": "started with this I first need to import HTML so we've got HTML and then I'm",
    "start": "2358209",
    "end": "2367539"
  },
  {
    "text": "going to import HTML add I suppose a few things from HTML so I'm going to say",
    "start": "2367539",
    "end": "2374079"
  },
  {
    "text": "like when you divs I mean we're going to h1 and h2",
    "start": "2374079",
    "end": "2379920"
  },
  {
    "text": "we'll need text that's probably good for now maybe we'll have like a horizontal",
    "start": "2380309",
    "end": "2385599"
  },
  {
    "text": "rule and then HTML 2 app is just going to help us start our program so we will",
    "start": "2385599",
    "end": "2392469"
  },
  {
    "text": "do to start with a main the main is a magical sort of function in element says",
    "start": "2392469",
    "end": "2400869"
  },
  {
    "text": "this is the stuff that we want you to take from this module and display to the user you also have an HTML type so we'll say",
    "start": "2400869",
    "end": "2408729"
  },
  {
    "text": "HTML of a because HTML can can cause things to happen and those things need",
    "start": "2408729",
    "end": "2414819"
  },
  {
    "text": "to have a type as well and we'll look at that in a second so we'll say that main",
    "start": "2414819",
    "end": "2420339"
  },
  {
    "text": "is going to be a div all these things appear these are functions so like I",
    "start": "2420339",
    "end": "2425769"
  },
  {
    "text": "keep mentioning everything in alamos a function or data so for view stuff it's",
    "start": "2425769",
    "end": "2431140"
  },
  {
    "text": "all just functions and data again so we have this div function the first thing is going to be a list of attributes so",
    "start": "2431140",
    "end": "2437289"
  },
  {
    "text": "I'm going to give this a class I'd say like class hello and class is also a function that returns a datatype for",
    "start": "2437289",
    "end": "2443979"
  },
  {
    "text": "attributes we don't want to put any on here so give and they'll put it in each one and",
    "start": "2443979",
    "end": "2452730"
  },
  {
    "text": "in there we'll put some text looks awesome demo and then underneath that",
    "start": "2452730",
    "end": "2459559"
  },
  {
    "text": "we'll have another div and then here",
    "start": "2459559",
    "end": "2465839"
  },
  {
    "text": "we'll put an h2 text person on the stage",
    "start": "2465839",
    "end": "2471299"
  },
  {
    "text": "info baby we'll put an HR in here and",
    "start": "2471299",
    "end": "2481799"
  },
  {
    "text": "then underneath here we'll have another div and then we'll put in some text and",
    "start": "2481799",
    "end": "2486890"
  },
  {
    "text": "into this text we will render person on",
    "start": "2486890",
    "end": "2492569"
  },
  {
    "text": "stage info of person on stage so I'm",
    "start": "2492569",
    "end": "2502770"
  },
  {
    "text": "going to compile this everything looks good so we'll use um reactor which I",
    "start": "2502770",
    "end": "2511140"
  },
  {
    "text": "glossed over at the beginning so what this going to do is gonna start an HTTP server in our directory that serves us",
    "start": "2511140",
    "end": "2519000"
  },
  {
    "text": "and some nice debugging stuff and when I",
    "start": "2519000",
    "end": "2525210"
  },
  {
    "text": "go to the to the site we'll see a whole",
    "start": "2525210",
    "end": "2532740"
  },
  {
    "text": "listing of our directory here so I already created this index.html but well",
    "start": "2532740",
    "end": "2538440"
  },
  {
    "text": "while we're debugging we can actually just click straight in to the Elm file we're interested in and it will compile",
    "start": "2538440",
    "end": "2544470"
  },
  {
    "text": "it on the fly and render it right into our browser so there's the HTML that we",
    "start": "2544470",
    "end": "2549660"
  },
  {
    "text": "rendered statically but that's",
    "start": "2549660",
    "end": "2554749"
  },
  {
    "text": "you know that's that's cool but it's um it's static and we want to build an app",
    "start": "2554749",
    "end": "2560579"
  },
  {
    "text": "so we need to have this change so I already talked about Model View update",
    "start": "2560579",
    "end": "2566099"
  },
  {
    "text": "and we'll actually just build those out right now so model you know type alias model the model this program is just",
    "start": "2566099",
    "end": "2574170"
  },
  {
    "text": "gonna be a you know maybe user we're just gonna have an app that put someone",
    "start": "2574170",
    "end": "2580529"
  },
  {
    "text": "on the stage and takes them off again so we'll do maybe maybe person rather",
    "start": "2580529",
    "end": "2585619"
  },
  {
    "text": "that's our model that's all the information we need to display our application to keep track of what's",
    "start": "2585619",
    "end": "2592140"
  },
  {
    "text": "going on the next part is the update so update consists of two parts the",
    "start": "2592140",
    "end": "2597390"
  },
  {
    "text": "first is sort of a layout of the things that are allowed to happen in your app and we use a similar custom Union type",
    "start": "2597390",
    "end": "2606150"
  },
  {
    "text": "so we'll say type and these are commonly called messages abbreviate it like so so",
    "start": "2606150",
    "end": "2613799"
  },
  {
    "text": "we'll say the messages that our application is allowed to send to itself our put person on stage and take person",
    "start": "2613799",
    "end": "2625769"
  },
  {
    "text": "actually let's let's do this it's it's a little bit verbose let's do like come back and go away so updates tend to have",
    "start": "2625769",
    "end": "2638369"
  },
  {
    "text": "a signature that looks like this so we're going to take a message one of those two things that we can pattern match on later and we'll take whatever",
    "start": "2638369",
    "end": "2645569"
  },
  {
    "text": "the current model is and we will return a new version of that model so given a",
    "start": "2645569",
    "end": "2653369"
  },
  {
    "text": "message in the model we can say case message of come back so when come back",
    "start": "2653369",
    "end": "2661410"
  },
  {
    "text": "comes in will say the model is now just me and when everybody gets sick of me",
    "start": "2661410",
    "end": "2667140"
  },
  {
    "text": "being up here you say go away then it'll be nothing and this is how our",
    "start": "2667140",
    "end": "2672150"
  },
  {
    "text": "application is a lot of change so we've described the entire domain for this system and the way that it's allowed to",
    "start": "2672150",
    "end": "2677729"
  },
  {
    "text": "to modify itself in in like 18 lines of code including whitespace and that's",
    "start": "2677729",
    "end": "2683339"
  },
  {
    "text": "pretty cool and then the last part is the view",
    "start": "2683339",
    "end": "2688338"
  },
  {
    "text": "so we can take all this and kind of",
    "start": "2692080",
    "end": "2697700"
  },
  {
    "text": "refactor it into a function so few takes our model produces it's an HTML which",
    "start": "2697700",
    "end": "2704120"
  },
  {
    "text": "sends our messages so given the model which is a maybe person let's get the",
    "start": "2704120",
    "end": "2709970"
  },
  {
    "text": "person on stage info for that model and",
    "start": "2709970",
    "end": "2716660"
  },
  {
    "text": "then we need to actually send some information back into our app so what",
    "start": "2716660",
    "end": "2722390"
  },
  {
    "text": "lets us do that is events so we're interested in on clicks we're going to",
    "start": "2722390",
    "end": "2728210"
  },
  {
    "text": "do buttons so we'll get button here I'm gonna have on click on those buttons so",
    "start": "2728210",
    "end": "2737120"
  },
  {
    "text": "we're in a separate div we'll have one button that says one click come back the",
    "start": "2737120",
    "end": "2752360"
  },
  {
    "text": "text will be come back and another button similarly let's just go away let",
    "start": "2752360",
    "end": "2761300"
  },
  {
    "text": "me click in and on text we'll say go away so let's see that cover everything",
    "start": "2761300",
    "end": "2770960"
  },
  {
    "text": "I think it does and then the last step for wiring all this up just say this is",
    "start": "2770960",
    "end": "2778490"
  },
  {
    "text": "HTML message sorry rather it's a it's no",
    "start": "2778490",
    "end": "2784760"
  },
  {
    "text": "longer just HTML now it's a program it's a full totally legitimate program so we",
    "start": "2784760",
    "end": "2789950"
  },
  {
    "text": "could say this is a program with this type never which means there's no there's no information coming in from",
    "start": "2789950",
    "end": "2794960"
  },
  {
    "text": "the outside we also have the option to do that but we're not going to do that right now it said why are all the stuff",
    "start": "2794960",
    "end": "2801590"
  },
  {
    "text": "we say HTML to a beginner program which is really awesome for demos like this we",
    "start": "2801590",
    "end": "2808430"
  },
  {
    "text": "just tell it the initial model will be just me I'm up here right now this is",
    "start": "2808430",
    "end": "2814460"
  },
  {
    "text": "the initial condition for application how it updates itself is just that update function and how we view it",
    "start": "2814460",
    "end": "2820760"
  },
  {
    "text": "it's just the View Function oh haha so I",
    "start": "2820760",
    "end": "2829280"
  },
  {
    "text": "totally spelled program wrong and it told me about it so back to reactor",
    "start": "2829280",
    "end": "2838750"
  },
  {
    "text": "let's recompile so I'm on the stage right now me zoom in I click go away",
    "start": "2839619",
    "end": "2845720"
  },
  {
    "text": "little transfer to say no one is on the stage and we can go back and forth just like that so we've defined an entire",
    "start": "2845720",
    "end": "2853280"
  },
  {
    "text": "domain model to its model people and their presence to represent the stage and then we've built an interactive",
    "start": "2853280",
    "end": "2859490"
  },
  {
    "text": "application complete with a nice layout with with HTML in just about 100 lines",
    "start": "2859490",
    "end": "2864680"
  },
  {
    "text": "of code including whitespace so really concise totally free from runtime errors",
    "start": "2864680",
    "end": "2869810"
  },
  {
    "text": "and totally great for for building awesome front-end applications so that's",
    "start": "2869810",
    "end": "2876740"
  },
  {
    "text": "all the code that I wanted to show but I have a bunch of things you can look at to start your journey of getting",
    "start": "2876740",
    "end": "2883849"
  },
  {
    "text": "involved in the community really quickly and then I'm just going to take like one minute to tell you about myself at the end sure ok sounds good",
    "start": "2883849",
    "end": "2895339"
  },
  {
    "text": "so this is el mango work there's a bunch of examples you can scroll through here",
    "start": "2895339",
    "end": "2901040"
  },
  {
    "text": "and learn more about Elm you can try it interactively in your browser at Elm lang org slash try there's a meetup here",
    "start": "2901040",
    "end": "2908300"
  },
  {
    "text": "in Copenhagen so you can just go to meet up and find that there's some great people there and you should definitely",
    "start": "2908300",
    "end": "2914630"
  },
  {
    "text": "join the slack it's the most helpful aspect of the whole community you can get immediate feedback from from",
    "start": "2914630",
    "end": "2921109"
  },
  {
    "text": "community members and ask questions and answer questions and so that's Elma Heroku app comm and so really quickly",
    "start": "2921109",
    "end": "2928430"
  },
  {
    "text": "I'm Luke and I work at a company called humble spark where we build user",
    "start": "2928430",
    "end": "2933829"
  },
  {
    "text": "interfaces with JavaScript and elm and we are accepting a new client we're looking for a new client so if you need",
    "start": "2933829",
    "end": "2939920"
  },
  {
    "text": "help building a thing we will we will help and you can find me on twitter at luke underscore underscore Jas and",
    "start": "2939920",
    "end": "2948310"
  },
  {
    "text": "that's all I have so I'm ready for questions",
    "start": "2948310",
    "end": "2952359"
  },
  {
    "text": "so a quick one the type system is very similar to typescript can you paranoia",
    "start": "2959740",
    "end": "2965930"
  },
  {
    "text": "the benefit from using a functional language for web development which",
    "start": "2965930",
    "end": "2971869"
  },
  {
    "text": "typescript isn't I'm sorry I think I missed like the middle of that can you point out the",
    "start": "2971869",
    "end": "2977510"
  },
  {
    "text": "benefit of using a functional sure so the benefit of using a functional language is that it kind of it gives you",
    "start": "2977510",
    "end": "2986480"
  },
  {
    "text": "this paradigm of designing with constraint so you don't in typescript you have types but you still have the",
    "start": "2986480",
    "end": "2992060"
  },
  {
    "text": "option to not have types if you use the any type which is really just not a type and you can you can do whatever you want",
    "start": "2992060",
    "end": "3000160"
  },
  {
    "text": "so Elm kind of restricts you it says these are the things you're allowed to work with you just have stateless",
    "start": "3000160",
    "end": "3006820"
  },
  {
    "text": "functions that can't create side-effects and you have these kind of types and so it kind of answers a lot of questions",
    "start": "3006820",
    "end": "3014290"
  },
  {
    "text": "for you about what your architecture is supposed to look like just by being a functional language so you don't have to",
    "start": "3014290",
    "end": "3020619"
  },
  {
    "text": "think so much about how to like put like wire things together you just say okay I have functions and I have data and",
    "start": "3020619",
    "end": "3025900"
  },
  {
    "text": "that's all I have and that that helps you to focus on the the problem that you",
    "start": "3025900",
    "end": "3031000"
  },
  {
    "text": "need to solve instead of figuring out like okay like how do I use typescript and how do I use that to design a nice",
    "start": "3031000",
    "end": "3036670"
  },
  {
    "text": "system good don't think we have time for anything more but thank you Luke right",
    "start": "3036670",
    "end": "3045180"
  }
]