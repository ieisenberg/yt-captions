[
  {
    "start": "0",
    "end": "79000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "yeah thank you guys so um yeah I'm also a bit full of the launch I actually stole a second",
    "start": "14580",
    "end": "20760"
  },
  {
    "text": "sandwich but uh hopefully the energy kicks in and I give a good talk and keep you keep you entertained for for the",
    "start": "20760",
    "end": "27480"
  },
  {
    "text": "next 40 minutes um but I'm gonna give a talk about graph databases and how you can leverage those",
    "start": "27480",
    "end": "33059"
  },
  {
    "text": "to actually resolve security issues in your application um and this is a common issue today",
    "start": "33059",
    "end": "40320"
  },
  {
    "text": "where you have CI CD pipelines running different types of tests and we've been",
    "start": "40320",
    "end": "45420"
  },
  {
    "text": "talking a lot about tests earlier today as well but as we can see we can also have security tests and here we have",
    "start": "45420",
    "end": "52800"
  },
  {
    "text": "here we have one that says that you have failed because you seem to have vulnerabilities in this particular",
    "start": "52800",
    "end": "58199"
  },
  {
    "text": "application um well this can be a challenge because vulnerabilities can appear seemingly out",
    "start": "58199",
    "end": "64739"
  },
  {
    "text": "of nowhere nowhere and and maybe you have to ship this particular feature today because maybe",
    "start": "64739",
    "end": "71220"
  },
  {
    "text": "one of your most important customers are having down time because you are because of your application",
    "start": "71220",
    "end": "77939"
  },
  {
    "text": "um and Security in open source um is definitely not something new but",
    "start": "77939",
    "end": "83820"
  },
  {
    "start": "79000",
    "end": "277000"
  },
  {
    "text": "it's been something that's been emerging and there's been a lot of talks with things such as the Biden order and some",
    "start": "83820",
    "end": "90540"
  },
  {
    "text": "really uh high-profile vulnerabilities in the ecosystem of Open Source here we",
    "start": "90540",
    "end": "96840"
  },
  {
    "text": "have the a bit older one the heart bleed vulnerability from 2014 but uh just uh",
    "start": "96840",
    "end": "104340"
  },
  {
    "text": "just not many months ago we had both log for shell and spring for shell and the",
    "start": "104340",
    "end": "111479"
  },
  {
    "text": "basics with security and open source is that you publish vulnerabilities in open",
    "start": "111479",
    "end": "118259"
  },
  {
    "text": "security advisories the largest one is nvd it contains today almost 200 000",
    "start": "118259",
    "end": "124759"
  },
  {
    "text": "vulnerabilities and there are about 20 000 new vulnerabilities or weaknesses in",
    "start": "124759",
    "end": "130619"
  },
  {
    "text": "open source projects published to these databases every year",
    "start": "130619",
    "end": "135780"
  },
  {
    "text": "um but typically those vulnerabilities are not too hard to resolve for you as a consumer of those open source projects",
    "start": "135780",
    "end": "142800"
  },
  {
    "text": "you simply update the project to a safe version um sounds easy enough but in this talk",
    "start": "142800",
    "end": "149819"
  },
  {
    "text": "we'll go through why this can be trickier than you think",
    "start": "149819",
    "end": "154879"
  },
  {
    "text": "um so um looking at these different flaws it takes about 800 days for an open source",
    "start": "155400",
    "end": "163080"
  },
  {
    "text": "project to discover that they have a weakness in their code and publish uh a",
    "start": "163080",
    "end": "169319"
  },
  {
    "text": "vulnerability to report on that particular weakness and and updating as",
    "start": "169319",
    "end": "175620"
  },
  {
    "text": "an end user to us the safe version of that project takes about a hundred days",
    "start": "175620",
    "end": "182160"
  },
  {
    "text": "and you're constantly about a hundred days behind on the latest versions on",
    "start": "182160",
    "end": "188459"
  },
  {
    "text": "average for open source projects and if you happen if there happens to be a data",
    "start": "188459",
    "end": "195060"
  },
  {
    "text": "breach there is an average of about almost 300 days for it to actually contain that breach",
    "start": "195060",
    "end": "202739"
  },
  {
    "text": "um and all ecosystems or or a project or programming languages are not created",
    "start": "202739",
    "end": "208800"
  },
  {
    "text": "equally today uh we can see here that the time to discover in uh code and",
    "start": "208800",
    "end": "216659"
  },
  {
    "text": "publish a vulnerability that has a security flaw uh takes uh uh quite a lot",
    "start": "216659",
    "end": "222599"
  },
  {
    "text": "quite a lot longer for ecosystems such as npm and Maven",
    "start": "222599",
    "end": "228080"
  },
  {
    "text": "compared to nuget which is c-sharp and and pip Python which today perform a bit",
    "start": "228080",
    "end": "236640"
  },
  {
    "text": "better in terms of finding these security flaws in a timely manner and Publishing new vulnerabilities",
    "start": "236640",
    "end": "244819"
  },
  {
    "text": "um so this is my date I I work with this all day and every day for the past",
    "start": "245700",
    "end": "251760"
  },
  {
    "text": "um for the past about four years I was the co-founder of the bricked which",
    "start": "251760",
    "end": "257340"
  },
  {
    "text": "which is in the software composition analysis tool we help our customers manage their open source security with",
    "start": "257340",
    "end": "264479"
  },
  {
    "text": "the open source they consume and I had out our research and development department but I usually do a lot of",
    "start": "264479",
    "end": "271500"
  },
  {
    "text": "spaghetti coding when I have time as well and",
    "start": "271500",
    "end": "278400"
  },
  {
    "start": "277000",
    "end": "359000"
  },
  {
    "text": "open source is a graph so when you decide to Leverage The Power",
    "start": "278400",
    "end": "285360"
  },
  {
    "text": "of Open Source to increase your the value you can bring to your end customers you usually pick a few",
    "start": "285360",
    "end": "292080"
  },
  {
    "text": "projects or a project that you think you can have this type of Leverage with these",
    "start": "292080",
    "end": "298680"
  },
  {
    "text": "are your root dependencies these are the ones that you interface with in your",
    "start": "298680",
    "end": "303720"
  },
  {
    "text": "application layer and actually develop code width but that's not the only open source you",
    "start": "303720",
    "end": "310020"
  },
  {
    "text": "get you'll usually get a lot of other open source projects for free without actively choosing them these are called",
    "start": "310020",
    "end": "316740"
  },
  {
    "text": "transitive dependencies and they come throughout the layers of the open source",
    "start": "316740",
    "end": "321860"
  },
  {
    "text": "Community where we can where we can see that we have an example here of two root",
    "start": "321860",
    "end": "327840"
  },
  {
    "text": "dependencies that in turn depend on some other open source dependencies and we have this layered structure",
    "start": "327840",
    "end": "334919"
  },
  {
    "text": "and different communities are different have different tests as well and we'll go through a bit of why this is possible",
    "start": "334919",
    "end": "342740"
  },
  {
    "text": "in in npm to have a depth that's normally of 40 layers of of dependencies",
    "start": "342740",
    "end": "350520"
  },
  {
    "text": "while in Python you usually only have three four five layers of uh of transitive dependencies",
    "start": "350520",
    "end": "358340"
  },
  {
    "text": "and vulnerabilities in your open source project may not also come only from your",
    "start": "358380",
    "end": "364800"
  },
  {
    "start": "359000",
    "end": "661000"
  },
  {
    "text": "direct dependencies this can come from those transitive indirect dependencies as well so in this example we can see",
    "start": "364800",
    "end": "372060"
  },
  {
    "text": "that we have we have a project called jest of a particular version and down",
    "start": "372060",
    "end": "378180"
  },
  {
    "text": "and that in turns trickle down to a vulnerable dependency called Low Dash a very common JavaScript dependency",
    "start": "378180",
    "end": "385380"
  },
  {
    "text": "and so this is a typical case of a transitive vulnerability there's lots of vulnerabilities in in lodash in",
    "start": "385380",
    "end": "392340"
  },
  {
    "text": "particular and vulnerabilities appear as I said in",
    "start": "392340",
    "end": "399060"
  },
  {
    "text": "different depths depending on what programming language you use so we can see here that the most shallow",
    "start": "399060",
    "end": "406520"
  },
  {
    "text": "communities in terms of vulnerabilities are Maven and and go and so on on",
    "start": "406520",
    "end": "413520"
  },
  {
    "text": "average Java vulnerability appears on about 2.2 depths we're in npm the the JavaScript",
    "start": "413520",
    "end": "421740"
  },
  {
    "text": "package manager we have a much a much deeper vulnerability",
    "start": "421740",
    "end": "428180"
  },
  {
    "text": "vulnerability on average and I've um analyzing this and playing",
    "start": "428180",
    "end": "433440"
  },
  {
    "text": "around with the data it's not uncommon to see a vulnerable depth of about 40 down the the dependency tree for uh for",
    "start": "433440",
    "end": "442080"
  },
  {
    "text": "npm so that's uh quite interesting",
    "start": "442080",
    "end": "446840"
  },
  {
    "text": "but how do we fix these transitive vulnerabilities can we force update the",
    "start": "447900",
    "end": "453720"
  },
  {
    "text": "transitive dependency so of course low Dash fix their security",
    "start": "453720",
    "end": "459120"
  },
  {
    "text": "issue internally and release a safe version to the public to use but you as an end user installing yes then",
    "start": "459120",
    "end": "465539"
  },
  {
    "text": "interfacing with with that particular Library how do you make sure that that in turn trickles down to a safe version",
    "start": "465539",
    "end": "471720"
  },
  {
    "text": "of lodash well there are functionality too usually make",
    "start": "471720",
    "end": "477780"
  },
  {
    "text": "this force update you can do this in npm but there are challenges with this",
    "start": "477780",
    "end": "483539"
  },
  {
    "text": "um that that I think we should dig at it a bit deeper into and there's something called breaking",
    "start": "483539",
    "end": "490199"
  },
  {
    "text": "changes most of you have probably experienced this some time during your career this",
    "start": "490199",
    "end": "496740"
  },
  {
    "text": "one was particularly nice it broke my pipelines as well it was the library",
    "start": "496740",
    "end": "501960"
  },
  {
    "text": "cryptography that all of a sudden said that okay we're gonna need rust to uh",
    "start": "501960",
    "end": "507840"
  },
  {
    "text": "for this particular dependency and if you don't have a rust installed on on your on your machine then it will break",
    "start": "507840",
    "end": "514919"
  },
  {
    "text": "and they did this in a minor version update",
    "start": "514919",
    "end": "520080"
  },
  {
    "text": "so that was very nice of them um they did not they they have a",
    "start": "520080",
    "end": "525660"
  },
  {
    "text": "different version of somewhere I think but that makes uh makes it very hard to",
    "start": "525660",
    "end": "531060"
  },
  {
    "text": "actually follow so first question",
    "start": "531060",
    "end": "537360"
  },
  {
    "text": "how how common are breaking changes when do things break if we take and when",
    "start": "537360",
    "end": "544200"
  },
  {
    "text": "you release a major version so um so a major version release how common is it that you have a breaking change",
    "start": "544200",
    "end": "551279"
  },
  {
    "text": "from the pre from the previous version so the latest version of the last major",
    "start": "551279",
    "end": "556380"
  },
  {
    "text": "version any guesses",
    "start": "556380",
    "end": "561140"
  },
  {
    "text": "almost always but that's that's uh not quite true do",
    "start": "563459",
    "end": "569220"
  },
  {
    "text": "you think there's a difference in the minor version releases",
    "start": "569220",
    "end": "573860"
  },
  {
    "text": "so it turns out each major version release there's about the 35 percent uh",
    "start": "575100",
    "end": "580560"
  },
  {
    "text": "36 chance of breaking changes I thought it would be higher but I",
    "start": "580560",
    "end": "585959"
  },
  {
    "text": "definitely thought in the minor and Patch releases that it would be lower",
    "start": "585959",
    "end": "591120"
  },
  {
    "text": "so this is uh quite interesting um and there are like what actually",
    "start": "591120",
    "end": "597360"
  },
  {
    "text": "breaks is actually quite um uh there's a pattern here as well usually you have method removal cloth",
    "start": "597360",
    "end": "603899"
  },
  {
    "text": "remover or or um or a field removal within uh within the maven Community when it uh when it",
    "start": "603899",
    "end": "610500"
  },
  {
    "text": "breaks but then there's one one particular question that I think is",
    "start": "610500",
    "end": "615779"
  },
  {
    "text": "especially interesting here that I'm wondering about me being a data scientist and a python developer",
    "start": "615779",
    "end": "622140"
  },
  {
    "text": "so what about python um well Maven is actually quite good in",
    "start": "622140",
    "end": "627779"
  },
  {
    "text": "terms of breaking changes compared to other communities so if you look at dynamic programming languages it's",
    "start": "627779",
    "end": "634200"
  },
  {
    "text": "actually much much worse um I didn't manage to find any good research on how common it is with",
    "start": "634200",
    "end": "640140"
  },
  {
    "text": "breaking changes in Python because it's so hard to derive you don't know what type you're in is essentially returning",
    "start": "640140",
    "end": "646440"
  },
  {
    "text": "from a function so does it break does it not break it's hard to know uh but it",
    "start": "646440",
    "end": "652500"
  },
  {
    "text": "but it's uh but they could determine that it's worse than in the maven community so it's not great",
    "start": "652500",
    "end": "660620"
  },
  {
    "start": "661000",
    "end": "755000"
  },
  {
    "text": "um so what we really want here to update is is not to force update low Dash",
    "start": "661440",
    "end": "667980"
  },
  {
    "text": "because if we have breaking changes uh in between uh Patra minor a major",
    "start": "667980",
    "end": "674160"
  },
  {
    "text": "version release of lodash we will have those breaking changes in the interface between the dependency that's actually",
    "start": "674160",
    "end": "681060"
  },
  {
    "text": "using low Dash so so someone core will have breaking changes in low Dash common",
    "start": "681060",
    "end": "687420"
  },
  {
    "text": "utils will have breaking changes in their interface to low Dash and that's going to be really tricky for us as",
    "start": "687420",
    "end": "692640"
  },
  {
    "text": "developers to actually fix those and manage those as time goes on and so what",
    "start": "692640",
    "end": "698760"
  },
  {
    "text": "we want to do is that we want to update just to us to a version that in turn trickles down to a safe version of",
    "start": "698760",
    "end": "705600"
  },
  {
    "text": "lodash so it turns out that this is a graph",
    "start": "705600",
    "end": "710880"
  },
  {
    "text": "problem and graph problems are tricky for many reasons and but they're especially",
    "start": "710880",
    "end": "717600"
  },
  {
    "text": "tricky here as well because communities are different we have different types of resolution algorithms",
    "start": "717600",
    "end": "724500"
  },
  {
    "text": "for how how a package manager resolves its dependencies",
    "start": "724500",
    "end": "729720"
  },
  {
    "text": "um and they affect the community quite a lot so I I think we should do a",
    "start": "729720",
    "end": "735360"
  },
  {
    "text": "community review here looking at um if uh if that matters for instance",
    "start": "735360",
    "end": "742019"
  },
  {
    "text": "um and also looking at if you can install multiple versions of a single dependency um and what happens if you don't have",
    "start": "742019",
    "end": "748800"
  },
  {
    "text": "overlapping version ranges down in the tree will it break will it install more",
    "start": "748800",
    "end": "754380"
  },
  {
    "text": "versions will it pick one which one does it pick and so on and so",
    "start": "754380",
    "end": "760500"
  },
  {
    "start": "755000",
    "end": "768000"
  },
  {
    "text": "let's Venture into to into the into this into the world of ecosystems and here we",
    "start": "760500",
    "end": "767220"
  },
  {
    "text": "have Python and I've given them personas because I think they're kind of a query relent to uh to the resolutions",
    "start": "767220",
    "end": "773760"
  },
  {
    "start": "768000",
    "end": "884000"
  },
  {
    "text": "algorithm algorithms so python is a hipster that just turned 30 and I identify a lot with this uh particular",
    "start": "773760",
    "end": "780959"
  },
  {
    "text": "particular Persona and it multiple the depth does not matter in",
    "start": "780959",
    "end": "787260"
  },
  {
    "text": "Python it and multiple versions cannot",
    "start": "787260",
    "end": "792420"
  },
  {
    "text": "be installed at all when uh even when you don't have overlapping version",
    "start": "792420",
    "end": "797700"
  },
  {
    "text": "ranges um and if there is incompatibility meaning that the version ranges don't",
    "start": "797700",
    "end": "803279"
  },
  {
    "text": "overlap it will just break it will break your pipeline or try to install the different versions forever if you're a",
    "start": "803279",
    "end": "810300"
  },
  {
    "text": "python developer you probably have seen this about a year ago when they first actually released any resolution at all",
    "start": "810300",
    "end": "817260"
  },
  {
    "text": "before 2020 python did not resolve dependencies they just picked the first one they saw and that's how they chose",
    "start": "817260",
    "end": "823440"
  },
  {
    "text": "which version to uh uh to install",
    "start": "823440",
    "end": "828980"
  },
  {
    "text": "um so let's have an example here um we can we can pretend that uh",
    "start": "829440",
    "end": "835740"
  },
  {
    "text": "um that the pink dots are can be any package but we're actually looking at the gray Dots here so here we have two",
    "start": "835740",
    "end": "843180"
  },
  {
    "text": "version ranges uh one that's equals two are greater than 2.0 or",
    "start": "843180",
    "end": "849120"
  },
  {
    "text": "smaller than or equals to 3 0.3 and here we have another version range",
    "start": "849120",
    "end": "855120"
  },
  {
    "text": "down here of the same dependency but it's not overlapping so in this particular example python",
    "start": "855120",
    "end": "862980"
  },
  {
    "text": "will break you will not be able to install it will break your pipeline and you will have a bad day that particular",
    "start": "862980",
    "end": "869880"
  },
  {
    "text": "day because you what your task will be to find root dependencies or bring transitive dependency up to the root",
    "start": "869880",
    "end": "876060"
  },
  {
    "text": "level to find compatibility somewhere and that's going to be that's going to",
    "start": "876060",
    "end": "881160"
  },
  {
    "text": "be a bad day as a developer um and then we have Java",
    "start": "881160",
    "end": "887100"
  },
  {
    "start": "884000",
    "end": "987000"
  },
  {
    "text": "I call that the Boomer depending on because it's our solution algorithm um",
    "start": "887100",
    "end": "893160"
  },
  {
    "text": "marketing said it was okay that I said Boomer on the talk yeah so but they're all Millennials so I'm not sure but uh",
    "start": "893160",
    "end": "900300"
  },
  {
    "text": "please send me complaints otherwise um but uh Java and Maven cannot resolve",
    "start": "900300",
    "end": "907199"
  },
  {
    "text": "multiple versions as well but that does matter in its resolution algorithms but",
    "start": "907199",
    "end": "912720"
  },
  {
    "text": "the thing is if you don't have overlapping just nothing happens and what they do is that they find the",
    "start": "912720",
    "end": "920940"
  },
  {
    "text": "most shallow uh shallow shallow shallow occurrence of that",
    "start": "920940",
    "end": "929339"
  },
  {
    "text": "particular package you're trying to resolve and installs that and even and even if if there are",
    "start": "929339",
    "end": "936480"
  },
  {
    "text": "multiple versions on the same depth the resolution algorithm is to pick the one that's highest up in the opponent in the",
    "start": "936480",
    "end": "942360"
  },
  {
    "text": "poem files and so actually not maybe not a great resolution algorithm if you want",
    "start": "942360",
    "end": "949079"
  },
  {
    "text": "to make sure that you don't get breaking changes um so in this case we will actually install",
    "start": "949079",
    "end": "957199"
  },
  {
    "text": "uh 0.3 because I picked that that's highest up in the pump file for this example",
    "start": "957199",
    "end": "963839"
  },
  {
    "text": "um but what will happen down there well that's your problem",
    "start": "963839",
    "end": "970160"
  },
  {
    "text": "so yeah no no particular help from even there uh hopefully you have really",
    "start": "970680",
    "end": "977040"
  },
  {
    "text": "really good test coverage that tests all the edge cases down the down to this particular uh uh this particular",
    "start": "977040",
    "end": "984120"
  },
  {
    "text": "execution path then we come to npm",
    "start": "984120",
    "end": "990480"
  },
  {
    "start": "987000",
    "end": "1088000"
  },
  {
    "text": "the hippie and the party everything is okay here everything goes",
    "start": "990480",
    "end": "995579"
  },
  {
    "text": "um and that does not matter here either but and you can have multiple versions uh of the of the same dependency that",
    "start": "995579",
    "end": "1003380"
  },
  {
    "text": "you're looking for and it just installs everything uh even when there's no overlapping version ranges for uh in",
    "start": "1003380",
    "end": "1010759"
  },
  {
    "text": "down the dependency tree just install everything which can be pretty which I think is a",
    "start": "1010759",
    "end": "1015920"
  },
  {
    "text": "pretty interesting choice here because I've I'm not an npm or front-end developer but I've heard that it's",
    "start": "1015920",
    "end": "1022519"
  },
  {
    "text": "pretty important with build size um in your front-end applications and it",
    "start": "1022519",
    "end": "1028220"
  },
  {
    "text": "seems quite inefficient to have duplicate code over different dependencies in that for your application",
    "start": "1028220",
    "end": "1034760"
  },
  {
    "text": "um just a thought here that I haven't dug too deep into um but this means that you're always",
    "start": "1034760",
    "end": "1040640"
  },
  {
    "text": "compatible you cannot break the tree you will not get breaking changes and I think this is a vital part of why",
    "start": "1040640",
    "end": "1047240"
  },
  {
    "text": "the mpm community has moved and thrived in such a way where you have small",
    "start": "1047240",
    "end": "1052520"
  },
  {
    "text": "dependencies that are imported everywhere in different versions and you have very very deep dependency trees",
    "start": "1052520",
    "end": "1059299"
  },
  {
    "text": "because they won't break and you won't have breaking changes or incompatibility between in between the different nodes",
    "start": "1059299",
    "end": "1066140"
  },
  {
    "text": "in the in the open source tree so this enables this behavior of small projects",
    "start": "1066140",
    "end": "1072679"
  },
  {
    "text": "and a lot of projects when you when you use open source",
    "start": "1072679",
    "end": "1078500"
  },
  {
    "text": "so this one will install both 0.3 and 0.6",
    "start": "1078500",
    "end": "1085120"
  },
  {
    "text": "and then we have the last one the same dictator golang",
    "start": "1087440",
    "end": "1093140"
  },
  {
    "start": "1088000",
    "end": "1217000"
  },
  {
    "text": "so golang was partly developed by two googlers and",
    "start": "1093140",
    "end": "1098660"
  },
  {
    "text": "they and it's a common story that well if you don't either you have a strong",
    "start": "1098660",
    "end": "1105740"
  },
  {
    "text": "consent to some of our community or how you should develop a language um or you have two googlers that spend a",
    "start": "1105740",
    "end": "1111799"
  },
  {
    "text": "lot of time thinking about really hard problems and come up with quite nice Solutions um",
    "start": "1111799",
    "end": "1117260"
  },
  {
    "text": "so in golang you can actually install multiple versions of the same dependency",
    "start": "1117260",
    "end": "1122419"
  },
  {
    "text": "and that doesn't matter at all but if you have incompatibilities it's",
    "start": "1122419",
    "end": "1128179"
  },
  {
    "text": "different but I think it's kind of nice so golang always picks the largest",
    "start": "1128179",
    "end": "1135640"
  },
  {
    "text": "version within um within a miner or patch within in a",
    "start": "1135640",
    "end": "1142760"
  },
  {
    "text": "minor patch range but can install multiple major releases of a package",
    "start": "1142760",
    "end": "1148700"
  },
  {
    "text": "and actually it actually views major releases as completely different package so V one bottle is the different package",
    "start": "1148700",
    "end": "1156140"
  },
  {
    "text": "from v2.0 and so you can install both of them but it will always pick the largest",
    "start": "1156140",
    "end": "1161660"
  },
  {
    "text": "occurrence down the down the tree and this actually forces the community to kind of behave because then you",
    "start": "1161660",
    "end": "1169880"
  },
  {
    "text": "always have to make sure that your application or your open source project is forward compatible which is",
    "start": "1169880",
    "end": "1175039"
  },
  {
    "text": "essentially not doing breaking changes and and if there if it's not forward",
    "start": "1175039",
    "end": "1181400"
  },
  {
    "text": "compatible then you yeah then you instead you release a new major release",
    "start": "1181400",
    "end": "1187100"
  },
  {
    "text": "which enables people to use both versions without breaking changes",
    "start": "1187100",
    "end": "1193940"
  },
  {
    "text": "um I think that's a quite interesting approach in the uh for this particular case",
    "start": "1193940",
    "end": "1199160"
  },
  {
    "text": "and inversion range is another thing really you can do it but it's very uncommon in the uh in go mod so I've put",
    "start": "1199160",
    "end": "1206419"
  },
  {
    "text": "explicit versions here and it will install 0.6 and 1.2 for this particular",
    "start": "1206419",
    "end": "1211820"
  },
  {
    "text": "case",
    "start": "1211820",
    "end": "1214120"
  },
  {
    "start": "1217000",
    "end": "1356000"
  },
  {
    "text": "um so let's get into the graphs so we um at bricked I've worked a lot with the",
    "start": "1217580",
    "end": "1225020"
  },
  {
    "text": "with this type of problem to try to find the route that trickles down independent of the community to exactly the safe",
    "start": "1225020",
    "end": "1232660"
  },
  {
    "text": "transitive dependencies you want and so we use neo4j",
    "start": "1232660",
    "end": "1238419"
  },
  {
    "text": "which is a graph database it's a startup or scale up at this point I think this",
    "start": "1238419",
    "end": "1244340"
  },
  {
    "text": "closed their series B quite recently um that is an open that's open source",
    "start": "1244340",
    "end": "1250220"
  },
  {
    "text": "um and that has a query language called Cipher um it's quite",
    "start": "1250220",
    "end": "1255919"
  },
  {
    "text": "um it's quite similar to any query language it's just that it's very much focused on graphs and relations and",
    "start": "1255919",
    "end": "1263360"
  },
  {
    "text": "querying multiple hops within within relations of the graph",
    "start": "1263360",
    "end": "1269120"
  },
  {
    "text": "and then as a community version which is which is free um not as powerful but really nice to",
    "start": "1269120",
    "end": "1274220"
  },
  {
    "text": "get out to get started and play with and what we did is that we scrape diff",
    "start": "1274220",
    "end": "1281660"
  },
  {
    "text": "we built a system based on uh on a pub sub architecture uh so in the center",
    "start": "1281660",
    "end": "1288380"
  },
  {
    "text": "here we have rabbitmq which is uh broker for event-driven systems",
    "start": "1288380",
    "end": "1294140"
  },
  {
    "text": "um we have this uh we have a a small python application that scrapes all the",
    "start": "1294140",
    "end": "1299600"
  },
  {
    "text": "different package communities to see when they release new versions and every time they",
    "start": "1299600",
    "end": "1305600"
  },
  {
    "text": "release a new version We input that particular package into the queue and that in turn scrapes the the the on the",
    "start": "1305600",
    "end": "1313820"
  },
  {
    "text": "direct level dependencies for that particular package so we don't build the",
    "start": "1313820",
    "end": "1319940"
  },
  {
    "text": "full tree in each particular task we just take the direct level dependency and then recursively re-queue each",
    "start": "1319940",
    "end": "1326659"
  },
  {
    "text": "dependency it found it finds so it's a recursive algorithm to build the the",
    "start": "1326659",
    "end": "1332480"
  },
  {
    "text": "full graph but it's a recursive through a queue um and then it and in each task we",
    "start": "1332480",
    "end": "1339679"
  },
  {
    "text": "simply insert each node and its relation to its parents and children depending on",
    "start": "1339679",
    "end": "1344900"
  },
  {
    "text": "what we find in the in the particular data we fetch from these package managers",
    "start": "1344900",
    "end": "1352840"
  },
  {
    "text": "and um I think it's uh I did sacrifice this morning",
    "start": "1355760",
    "end": "1361760"
  },
  {
    "start": "1356000",
    "end": "2323000"
  },
  {
    "text": "so let's see if we can show some some real data um",
    "start": "1361760",
    "end": "1366980"
  },
  {
    "text": "from neo4j so this is the",
    "start": "1366980",
    "end": "1374120"
  },
  {
    "text": "can you see good this is the interface you're met with um if you have if you interact with",
    "start": "1374120",
    "end": "1381140"
  },
  {
    "text": "neo4j um and their basic deployments um we can have a look at the data model",
    "start": "1381140",
    "end": "1387320"
  },
  {
    "text": "that we have Let's ignore those it's only these ones that I'm after it's quite a simple data",
    "start": "1387320",
    "end": "1393260"
  },
  {
    "text": "model in an in the end we have a dependency and this dependency is for is a",
    "start": "1393260",
    "end": "1398720"
  },
  {
    "text": "particular version so if dependency has multiple versions it will be unique",
    "start": "1398720",
    "end": "1404299"
  },
  {
    "text": "nodes for this uh for each version so the unique idea is the is the package",
    "start": "1404299",
    "end": "1411799"
  },
  {
    "text": "name plus the version string in the end and it has two relations it has uses to",
    "start": "1411799",
    "end": "1418159"
  },
  {
    "text": "go down the tree and it has an as transitive off to go up",
    "start": "1418159",
    "end": "1423919"
  },
  {
    "text": "the tree again if we want to do that um we also have another node",
    "start": "1423919",
    "end": "1430120"
  },
  {
    "text": "storing the version ranges of uh of the",
    "start": "1430120",
    "end": "1435200"
  },
  {
    "text": "unknown that this uses so just maybe uses a version some version range of low",
    "start": "1435200",
    "end": "1441799"
  },
  {
    "text": "Dash then that's stored in a version range node that connected to to just but",
    "start": "1441799",
    "end": "1449179"
  },
  {
    "text": "the version range node is of the ID low Dash so then we can populate parent and link to parents as well throughout as we",
    "start": "1449179",
    "end": "1456440"
  },
  {
    "text": "find more nodes in a tree and traverses and Traverse those",
    "start": "1456440",
    "end": "1461679"
  },
  {
    "text": "and I've picked a particular dependency here",
    "start": "1463640",
    "end": "1469280"
  },
  {
    "text": "um this dependency is chain change log conventional change log here",
    "start": "1469280",
    "end": "1475460"
  },
  {
    "text": "and let's",
    "start": "1475460",
    "end": "1480400"
  },
  {
    "text": "um",
    "start": "1480740",
    "end": "1482860"
  },
  {
    "text": "it is this one so here this is the exact version",
    "start": "1488960",
    "end": "1495919"
  },
  {
    "text": "I'm I'm looking at so convention change log 1.1.24",
    "start": "1495919",
    "end": "1502340"
  },
  {
    "text": "and if we look at the npm package manager this is a node dependency we can",
    "start": "1502340",
    "end": "1510500"
  },
  {
    "text": "see that we have 97 versions of this particular package and when I acquired the when I looked",
    "start": "1510500",
    "end": "1519919"
  },
  {
    "text": "for all the instances we have of this dependency of this particular package ID corresponds to this dependency we find",
    "start": "1519919",
    "end": "1527179"
  },
  {
    "text": "that we have all these 27 1997 different occurrences in our graph",
    "start": "1527179",
    "end": "1535760"
  },
  {
    "text": "but we don't have any relations because of course different they don't use each other in this in this case but we can",
    "start": "1535760",
    "end": "1543620"
  },
  {
    "text": "expand here and see and kind of get an understanding visually so I expanded this particular node here",
    "start": "1543620",
    "end": "1551419"
  },
  {
    "text": "we can see that this has some direct dependencies here and they interact with",
    "start": "1551419",
    "end": "1556820"
  },
  {
    "text": "each other as well in something that's somewhat complex um and then we can expand even further",
    "start": "1556820",
    "end": "1563840"
  },
  {
    "text": "and it it gets even more complex quite quite fast",
    "start": "1563840",
    "end": "1571000"
  },
  {
    "text": "so let's target this particular depend this particular version that that we",
    "start": "1571820",
    "end": "1577400"
  },
  {
    "text": "looked at so one point it was it was 1.1.24 here",
    "start": "1577400",
    "end": "1585340"
  },
  {
    "text": "and yeah it has quite a lot of different dependencies",
    "start": "1587720",
    "end": "1592880"
  },
  {
    "text": "and some version ranges and each node since each node is not the other",
    "start": "1592880",
    "end": "1599179"
  },
  {
    "text": "aversion range but one particular version of dependency I actually have duplicate uh duplicate packages here but",
    "start": "1599179",
    "end": "1607820"
  },
  {
    "text": "of different versions so all versions it could potentially result that's how we",
    "start": "1607820",
    "end": "1612980"
  },
  {
    "text": "have built the data model here",
    "start": "1612980",
    "end": "1616179"
  },
  {
    "text": "um but we are looking for a particular path so we have a vulnerability here in the",
    "start": "1618440",
    "end": "1624799"
  },
  {
    "text": "Stream new lines Library and we can see that it is vulnerable",
    "start": "1624799",
    "end": "1630380"
  },
  {
    "text": "everything before three or one and also",
    "start": "1630380",
    "end": "1636140"
  },
  {
    "text": "some versions here in the four major release Here and it's npm so of course we can have",
    "start": "1636140",
    "end": "1643580"
  },
  {
    "text": "multiple versions of the same Library so we get a few instances of trim lines",
    "start": "1643580",
    "end": "1648799"
  },
  {
    "text": "streamlines2.0 but also we have one instance of trim",
    "start": "1648799",
    "end": "1654380"
  },
  {
    "text": "lines 1.0 so what we really want now is to find",
    "start": "1654380",
    "end": "1660020"
  },
  {
    "text": "the versions the version of a conventional change log that will",
    "start": "1660020",
    "end": "1665179"
  },
  {
    "text": "resolve through all out through all its path to a safe version of trim new lines",
    "start": "1665179",
    "end": "1672340"
  },
  {
    "text": "um so let's look at the path to the vulnerability",
    "start": "1672980",
    "end": "1680080"
  },
  {
    "text": "so here we can see this is the root",
    "start": "1682880",
    "end": "1690320"
  },
  {
    "text": "dependence here that we checked out and the this one is the vulnerable one",
    "start": "1690320",
    "end": "1697400"
  },
  {
    "text": "and this one is the other vulnerable version so as we can see here we have version one one dot uh",
    "start": "1697400",
    "end": "1705860"
  },
  {
    "text": "if you look further down to the right there version string is",
    "start": "1705860",
    "end": "1711880"
  },
  {
    "text": "1.0.0 is one version that we are able to resolve and then we can see we have",
    "start": "1711880",
    "end": "1717440"
  },
  {
    "text": "paths to 2.0.0 as well",
    "start": "1717440",
    "end": "1722840"
  },
  {
    "text": "so the beautiful thing with neo4j and Cipher is that you can query different depths and different jumps in this",
    "start": "1722840",
    "end": "1730100"
  },
  {
    "text": "really in this graph database um and the syntax is quite simple in the",
    "start": "1730100",
    "end": "1736400"
  },
  {
    "text": "end so looking at here we have I extract the path with this match statement",
    "start": "1736400",
    "end": "1742580"
  },
  {
    "text": "and I have the root dependency and I want to query the relation uses in",
    "start": "1742580",
    "end": "1748940"
  },
  {
    "text": "the direction Downstream and until I reach this vulnerable",
    "start": "1748940",
    "end": "1755179"
  },
  {
    "text": "dependency whether and then I've filtered on the root package need to needs to be this",
    "start": "1755179",
    "end": "1760700"
  },
  {
    "text": "particular packet package ID and I'm looking for the root version which is",
    "start": "1760700",
    "end": "1765980"
  },
  {
    "text": "this particular version of string and then I'm trying to resolve looking at all occurrences of",
    "start": "1765980",
    "end": "1773659"
  },
  {
    "text": "the vulnerable package in the end um",
    "start": "1773659",
    "end": "1779600"
  },
  {
    "text": "so thinking of can I try to use some smart filtering in how I resolve this",
    "start": "1779600",
    "end": "1786700"
  },
  {
    "text": "and find find and find the safe route dependency",
    "start": "1786700",
    "end": "1793580"
  },
  {
    "text": "um can I filter on that there is no paths to the vulnerable versions",
    "start": "1793580",
    "end": "1800360"
  },
  {
    "text": "um well that may be that may be possible but if there's no paths to the",
    "start": "1800360",
    "end": "1808100"
  },
  {
    "text": "vulnerable version that means I'm all that that means I'm probably gonna overshoot a lot",
    "start": "1808100",
    "end": "1813440"
  },
  {
    "text": "uh when I update my root dependency because uh because that means there is",
    "start": "1813440",
    "end": "1818600"
  },
  {
    "text": "no connection between air to any of these vulnerable versions in in trim new",
    "start": "1818600",
    "end": "1824059"
  },
  {
    "text": "lines and but that can of course be okay because there can I just need to it's not about",
    "start": "1824059",
    "end": "1831380"
  },
  {
    "text": "they're not being a connection there's a about what the package managers actually will choose in the end when there is all",
    "start": "1831380",
    "end": "1838039"
  },
  {
    "text": "the dependencies um but for fun we can we can try to make such a",
    "start": "1838039",
    "end": "1844460"
  },
  {
    "text": "um we can try to make such a question is it safe",
    "start": "1844460",
    "end": "1849679"
  },
  {
    "text": "um meaning that I can have the same query but I also filter on",
    "start": "1849679",
    "end": "1855620"
  },
  {
    "text": "um the version string so here we have a representation of the version string",
    "start": "1855620",
    "end": "1860840"
  },
  {
    "text": "which is padded this is a technique to make similar version strings comparable to each other as they're not directly",
    "start": "1860840",
    "end": "1868340"
  },
  {
    "text": "comparable to each other so it's just but it's essentially three",
    "start": "1868340",
    "end": "1873500"
  },
  {
    "text": "0 1 here so we're trying to find any ver we're trying to see if we have any",
    "start": "1873500",
    "end": "1879500"
  },
  {
    "text": "connections to versions that are larger than larger larger than zero or three zero",
    "start": "1879500",
    "end": "1887659"
  },
  {
    "text": "one which as of this vulnerability should be",
    "start": "1887659",
    "end": "1894200"
  },
  {
    "text": "within the safe range here as long as it's not four but we can check that out later",
    "start": "1894200",
    "end": "1900260"
  },
  {
    "text": "and it turns out we actually do have connections here",
    "start": "1900260",
    "end": "1905320"
  },
  {
    "text": "um",
    "start": "1905480",
    "end": "1907539"
  },
  {
    "text": "here it is but as we know that we have already tried in",
    "start": "1910640",
    "end": "1916460"
  },
  {
    "text": "our scanner that we will resolve down to the vulnerable version so this is not sufficient in actually how we how we do",
    "start": "1916460",
    "end": "1923659"
  },
  {
    "text": "the how we do a mock the dependency resolution algorithm in the graph database",
    "start": "1923659",
    "end": "1929120"
  },
  {
    "text": "and and it turns out that yes Cipher is great but it's also very limited we need",
    "start": "1929120",
    "end": "1934760"
  },
  {
    "text": "to have a traversal strategy so how we search in the graph is very specific to",
    "start": "1934760",
    "end": "1940159"
  },
  {
    "text": "each package manager and we need to adapt to that problem",
    "start": "1940159",
    "end": "1945559"
  },
  {
    "text": "um and we won't be able to write anything uh um anything that will resolve this in pure Cipher I actually",
    "start": "1945559",
    "end": "1952399"
  },
  {
    "text": "called neo4j and got the got a few of their senior Engineers to help me out to try to resolve this in in Cipher and",
    "start": "1952399",
    "end": "1959240"
  },
  {
    "text": "they simply and they came to the conclusion together maybe that we won't be able to do this but they do have one really really cool",
    "start": "1959240",
    "end": "1966440"
  },
  {
    "text": "feature in neo4j which is called procedures so neo4j is built using Java and you can",
    "start": "1966440",
    "end": "1976279"
  },
  {
    "text": "actually inject your own custom algorithms implemented in Java directly",
    "start": "1976279",
    "end": "1981320"
  },
  {
    "text": "into the database which is quite insane I think like uh that feature in",
    "start": "1981320",
    "end": "1989120"
  },
  {
    "text": "my scale would be that's quite far away I think so uh so I'm very very happy",
    "start": "1989120",
    "end": "1995659"
  },
  {
    "text": "with that feature so you get the underlying data structure is a property",
    "start": "1995659",
    "end": "2000760"
  },
  {
    "text": "graph for neo4j and you get direct access to the property graph and can",
    "start": "2000760",
    "end": "2006340"
  },
  {
    "text": "build super efficient Graph Search algorithms with these with these",
    "start": "2006340",
    "end": "2013899"
  },
  {
    "text": "procedures um so",
    "start": "2013899",
    "end": "2020740"
  },
  {
    "text": "um so in the end I just need to set these parameters we have built",
    "start": "2020740",
    "end": "2027159"
  },
  {
    "text": "um we have built a procedure that for npm",
    "start": "2027159",
    "end": "2032220"
  },
  {
    "text": "that is called get Max get maxpath vulnerable",
    "start": "2032220",
    "end": "2037720"
  },
  {
    "text": "um which is um if you think about how near how npm resolves vulnerabilities error results",
    "start": "2037720",
    "end": "2044500"
  },
  {
    "text": "dependencies um it always resolves a Max path",
    "start": "2044500",
    "end": "2050980"
  },
  {
    "text": "so traversing down the tree and in any intersection or in any node when you",
    "start": "2050980",
    "end": "2057099"
  },
  {
    "text": "decide what children to Traverse for each for each package that you have",
    "start": "2057099",
    "end": "2062740"
  },
  {
    "text": "in that particular relation you always just Traverse the max path and you save that path",
    "start": "2062740",
    "end": "2068440"
  },
  {
    "text": "if you do that for all potential paths to until you reach this package that",
    "start": "2068440",
    "end": "2075158"
  },
  {
    "text": "we're targeting the vulnerable package if all the max paths are safe it turns out that this is a",
    "start": "2075159",
    "end": "2081520"
  },
  {
    "text": "mathematically complete that then we can guarantee that you are secure we may overshoot a little bit in what versions",
    "start": "2081520",
    "end": "2088898"
  },
  {
    "text": "We recommend at the root level but the algorithm is much more efficient",
    "start": "2088899",
    "end": "2094000"
  },
  {
    "text": "than doing it the real way and trying to agree exactly what versions will resolve and and looking at the times when we",
    "start": "2094000",
    "end": "2102880"
  },
  {
    "text": "implemented this um so this one is not went quite fast and",
    "start": "2102880",
    "end": "2111040"
  },
  {
    "text": "now we only Traverse in a depth of four but we can do 15 and it's still more or",
    "start": "2111040",
    "end": "2116680"
  },
  {
    "text": "less instant uh when we try to do this in Cipher we could get query times easily up to like",
    "start": "2116680",
    "end": "2123640"
  },
  {
    "text": "four hours in large trees while this uh working directly with the property",
    "start": "2123640",
    "end": "2128680"
  },
  {
    "text": "graphs with these injected algorithms essentially um is",
    "start": "2128680",
    "end": "2134079"
  },
  {
    "text": "um speeds that speeds the uh the graph search up so so much",
    "start": "2134079",
    "end": "2140680"
  },
  {
    "text": "um and [Music] um so this is I'm testing the same version",
    "start": "2140680",
    "end": "2147280"
  },
  {
    "text": "as before and if I return a node it uh it deems it that we did find a path to a",
    "start": "2147280",
    "end": "2152920"
  },
  {
    "text": "vulnerable node um and we will not recommend this root version as safe",
    "start": "2152920",
    "end": "2158800"
  },
  {
    "text": "and but if I change the version so now now we",
    "start": "2158800",
    "end": "2163839"
  },
  {
    "text": "just updated this version ID that we're testing to 3.1.10",
    "start": "2163839",
    "end": "2170920"
  },
  {
    "text": "and and it does not return a node so that that's great that",
    "start": "2171400",
    "end": "2177400"
  },
  {
    "text": "means that all Max paths are not returning uh vulnerable version range of",
    "start": "2177400",
    "end": "2183160"
  },
  {
    "text": "the vulnerable dependency that we're targeting to fix and I can even try I even commented in",
    "start": "2183160",
    "end": "2190900"
  },
  {
    "text": "the ID that's the version before um and we can see that",
    "start": "2190900",
    "end": "2197020"
  },
  {
    "text": "um that then we return a node so there is some path that may resolve the uh the",
    "start": "2197020",
    "end": "2203440"
  },
  {
    "text": "vulnerable dependency here and um",
    "start": "2203440",
    "end": "2211000"
  },
  {
    "text": "and looking how this would look in the if we try to install this",
    "start": "2211000",
    "end": "2216700"
  },
  {
    "text": "and make the change this would be um exactly what we looked like in the",
    "start": "2216700",
    "end": "2222760"
  },
  {
    "text": "package files so we would get the conventional change load changing to",
    "start": "2222760",
    "end": "2229900"
  },
  {
    "text": "and to the version that we that this the graph would recommend",
    "start": "2229900",
    "end": "2235300"
  },
  {
    "text": "and then we have the log file we have trim you",
    "start": "2235300",
    "end": "2241900"
  },
  {
    "text": "what was it trim new lines",
    "start": "2241900",
    "end": "2247540"
  },
  {
    "text": "ux system stuff was removed and that's just a version range",
    "start": "2247540",
    "end": "2254680"
  },
  {
    "text": "and down here we see what version is resold so we actually get 3.0.1 exactly in the graph",
    "start": "2254680",
    "end": "2263380"
  },
  {
    "text": "um which is um yeah I think this is quite cool I know graphs was a very very hyped",
    "start": "2263380",
    "end": "2270520"
  },
  {
    "text": "a few years ago and uh um maybe maybe blockchain is the thing",
    "start": "2270520",
    "end": "2275800"
  },
  {
    "text": "now but I think this is a really cool thing in terms of like what you can do with with this graph technology and it's",
    "start": "2275800",
    "end": "2282579"
  },
  {
    "text": "a perfect problem for like what uh for what we're trying to solve um and we we tried it out as a master",
    "start": "2282579",
    "end": "2290920"
  },
  {
    "text": "thesis to begin with and have developed it further since then um and yeah it's been really really fun",
    "start": "2290920",
    "end": "2298119"
  },
  {
    "text": "to work with and neo4j is so powerful in graph traversal algorithms especially",
    "start": "2298119",
    "end": "2304240"
  },
  {
    "text": "with these procedures that you can Implement virtually any custom graph algorithm you like",
    "start": "2304240",
    "end": "2311740"
  },
  {
    "text": "um and Traverse graphs efficiently",
    "start": "2311740",
    "end": "2316440"
  },
  {
    "text": "so thank you for listening",
    "start": "2320140",
    "end": "2326600"
  },
  {
    "start": "2323000",
    "end": "2342000"
  },
  {
    "text": "[Applause]",
    "start": "2326600",
    "end": "2333889"
  }
]