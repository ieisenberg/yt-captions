[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "Welcome to another session of GOTO Unscripted. I am here with Matt Turner.",
    "start": "14410",
    "end": "20880"
  },
  {
    "text": "Hey. And I'm Eric Johnson. I'm a principal developer for Serverless from\nAWS.",
    "start": "20880",
    "end": "27110"
  },
  {
    "text": "But, we might talk about some AWS today. I don't know, I think we can talk a little... We might, yes, a little Serverless maybe. Yeah.",
    "start": "27110",
    "end": "32960"
  },
  {
    "text": "Tell them who you are. What do you do? So, I'm Matt Turner. I'm a software engineer at Tetrate. We do service mesh, and Istio stuff.",
    "start": "32960",
    "end": "39059"
  },
  {
    "text": "Ok. We're a vendor in that space. I do some software engineering and some community,\nand dev relations.",
    "start": "39059",
    "end": "44760"
  },
  {
    "text": "I take our stuff, I see what it can do. I try to explain that to people. I'm like, \"Can we plug it into that system\nand that system?\"",
    "start": "44760",
    "end": "50910"
  },
  {
    "text": "And if I can make that work \"Here's a GitHub\nrepo full of that, here's a blog, here's a talk about it.\" You do a lot of consulting then, right?",
    "start": "50910",
    "end": "57039"
  },
  {
    "text": "Yes, I do. I have been an independent consultant, but\nyeah, I'm kind of out in the field now with",
    "start": "57039",
    "end": "62289"
  },
  {
    "text": "Tetrate.. Nice. All right. Well, just before we get too much, just so\nyou know, we're coming live from GOTO Amsterdam",
    "start": "62289",
    "end": "69380"
  },
  {
    "text": "here. And guess where we are? Amsterdam. Amsterdam. Yes.",
    "start": "69380",
    "end": "74760"
  },
  {
    "text": "You can tell from the... Clever naming. Yes.\n...the view. This is actually a beautiful room. Yes. It's such a really cool...",
    "start": "74760",
    "end": "80760"
  },
  {
    "text": "This is the first room I ever spoke in. Wow. So yeah, years ago I did a talk called Attitude\nof Iteration.",
    "start": "80760",
    "end": "86040"
  },
  {
    "text": "Nice. It was about overcoming challenges. I just did a bunch of one-finger jokes and\nwe had a good time. Anyway...\nIt was more than that.",
    "start": "86040",
    "end": "92409"
  },
  {
    "text": "Eric Johnson's talks are worth a watch. They are more than...there are one-finger\njokes. They're great. But there's also great content.",
    "start": "92409",
    "end": "98570"
  },
  {
    "text": "Have you ever seen this one? Hang on, wait, let's see if I can do it.",
    "start": "98570",
    "end": "104159"
  },
  {
    "text": "Okay, I want that on tape. That needs to be in the video. That's gonna be a GIF now.",
    "start": "104159",
    "end": "109688"
  },
  {
    "text": "It'll be a meme. So, let's jump in. So tell me, do you have a talk coming up?",
    "start": "109689",
    "end": "114829"
  },
  {
    "start": "110000",
    "end": "322000"
  },
  {
    "text": "I do. I have a talk this afternoon. Yes. What are you talking about? I'm talking about, I call it cloud-native\nProgressive Delivery.",
    "start": "114829",
    "end": "120650"
  },
  {
    "text": "So, I'm talking about, spoiler alert, I guess,\nfor the talk because this will go out afterward. Yeah, watch this after the talk, so, yeah.",
    "start": "120650",
    "end": "126909"
  },
  {
    "text": "Yeah, right. I guess a lot of people talk about CI and\nCD, right? They talk about continuous integration, and\ncontinuous deployment.",
    "start": "126910",
    "end": "132870"
  },
  {
    "text": "And those are sort of the two stages. Or continuous... Or delivery. ...delivery.",
    "start": "132870",
    "end": "138599"
  },
  {
    "text": "And this is the thing. I mean, people have written books on this\ntopic. I'm not hopefully going to do like a 101,\nlike sucking eggs.",
    "start": "138599",
    "end": "144090"
  },
  {
    "text": "I think the GOTO audience is a bit better\nthan that. There's quite some quite good understanding.",
    "start": "144090",
    "end": "150340"
  },
  {
    "text": "But it's basically saying that yes if you\nseparate build from deployment, which obviously you should, and then separate deployment from\nrelease.",
    "start": "150340",
    "end": "157140"
  },
  {
    "text": "So deploying, like getting your software,\ngetting your container image, say running in production, is deployment.",
    "start": "157140",
    "end": "164610"
  },
  {
    "text": "And then it sat there, it can talk to production\ndatabases, it reads production configuration, it can talk to the other production services,\nbut it's not released if it's not getting",
    "start": "164610",
    "end": "173349"
  },
  {
    "text": "user queries. So, if you've got something like an API gateway,\nor a service mesh that can do that more advanced",
    "start": "173349",
    "end": "180510"
  },
  {
    "text": "traffic control, then you can have that thing\nrunning in production. You can test it, you can port forward to it,\nyou can set some headers, or whatever.",
    "start": "180510",
    "end": "187540"
  },
  {
    "text": "You can hit it with test traffic, you can\nget automated, you know, regression testing and load testing, you can start canarying\ntraffic into it, or you can roll it back.",
    "start": "187540",
    "end": "196049"
  },
  {
    "text": "So, you're getting the most representative\ntest because it's in prod. I've had services, we had one, right, that\njust got deployed to staging, everything looked",
    "start": "196049",
    "end": "204430"
  },
  {
    "text": "great, rolled it out into prod. CrashLoop just wouldn't start because somebody\nchanged the config file format, right?",
    "start": "204430",
    "end": "209709"
  },
  {
    "text": "It hadn't changed, and just silly things like\nthat plus actually access to prod data and access to other prod services.",
    "start": "209709",
    "end": "215190"
  },
  {
    "text": "So, you can deploy like that, and that's risk-free,\nright? You can just do that and you really do it\ncontinuously.",
    "start": "215190",
    "end": "222180"
  },
  {
    "text": "Because so many organizations, I think, have\ncontinuous deployment, they have the machinery for it, but somebody somewhere has to go press\nan approve button, or it has to happen on",
    "start": "222180",
    "end": "230239"
  },
  {
    "text": "a Tuesday. So you can deploy, and you do that. You just move that prod, don't get me wrong,\nin some ways you are moving that product to",
    "start": "230239",
    "end": "235850"
  },
  {
    "text": "release, but you get so much more value automatically\nby at least wrapping deployment up. I do a lot of speaking, specifically for Serverless,\nbut speaking on CI/CD pipelines.",
    "start": "235850",
    "end": "245140"
  },
  {
    "text": "I mean, I always thought it should be CI/CD\nor D. You know what mean? Just like, is this deployment, or is this\na deployment?",
    "start": "245140",
    "end": "252349"
  },
  {
    "text": "But anyway, that's, you know. And one of the jokes I say, but truly honest\nis, if your deployment process includes somebody's",
    "start": "252349",
    "end": "261880"
  },
  {
    "text": "name, it's not automated. Because I can't tell you how many companies\nI've worked as a solutions architect for a",
    "start": "261880",
    "end": "267500"
  },
  {
    "text": "partner company, and how many times I would\ncome in, like, \"Okay, tell me about your CI/CD process. How do you deploy?",
    "start": "267500",
    "end": "273150"
  },
  {
    "text": "How do you release?\" \"Oh, we're fully automated.\" \"Awesome. Right, so tell me about it.\"",
    "start": "273150",
    "end": "279860"
  },
  {
    "text": "\"Well, Bob, does whatever, and then Jan does\nwhatever.\" It's like, \"Stop.\" \"Jan's got delegation of authority.",
    "start": "279860",
    "end": "286160"
  },
  {
    "text": "If Jan's off sick we know who to call. So we're automated. We're redundant, man.\" Jan's husband will drive down and push the\nbuttons.",
    "start": "286160",
    "end": "291970"
  },
  {
    "text": "Yes, we're going to the mood, yes. So yes, so it's like, that doesn't work.",
    "start": "291970",
    "end": "298840"
  },
  {
    "text": "I think you're right because... I know for me and I don't want to steal your\nthunder. And I won't, you're much more eloquent than\nI am obviously.",
    "start": "298840",
    "end": "305550"
  },
  {
    "text": "Well, you're British. It's the British accent, yes, absolutely. Yes, exactly. I tried the British accent, my wife just says... Say banana?",
    "start": "305550",
    "end": "311100"
  },
  {
    "text": "Yeah. No, I'm not doing banana. No, I did it. You're not doing it?",
    "start": "311100",
    "end": "316240"
  },
  {
    "text": "Oh, no. Oh, you got it. It's an old movie stunt. Well, you know what? Never mind.",
    "start": "316240",
    "end": "322240"
  },
  {
    "start": "322000",
    "end": "591000"
  },
  {
    "text": "Anyway, yeah, so that always interests me\nin how people approach that.",
    "start": "322240",
    "end": "329400"
  },
  {
    "text": "One of the things that I really encourage\nfolks with CI/CD is, we talked about why, well, why would we go through the process\nof automating?",
    "start": "329400",
    "end": "336860"
  },
  {
    "text": "Because we do have Bob and Jan, right? But the reason is, is that repeatable?",
    "start": "336860",
    "end": "342540"
  },
  {
    "text": "We know that every time it's going to go A,\nB, C, D. And it's not one time because Jan",
    "start": "342540",
    "end": "348360"
  },
  {
    "text": "was sick and Jan's husband had to come. It's gonna go A, B, D, C, you know?",
    "start": "348360",
    "end": "354130"
  },
  {
    "text": "And so that automation is so critical. But the interesting thing that you're talking\nabout, and we've",
    "start": "354130",
    "end": "359599"
  },
  {
    "text": "had these long debates about, whether\nshould you test in production. Should you not? And I do think you should test it in production.",
    "start": "359600",
    "end": "364639"
  },
  {
    "text": "Yes, I cover testing in production. I just don't think you should only test in\nproduction. No.",
    "start": "364640",
    "end": "369949"
  },
  {
    "text": "Yes. So, that's where we're at. But why do you think testing in production? I mean, you kind of alluded to that.",
    "start": "369949",
    "end": "375669"
  },
  {
    "text": "Why do you think testing in production is\nso important? Because I think it's the only way you'll catch\ncertain classes of bugs.",
    "start": "375669",
    "end": "382510"
  },
  {
    "text": "I'm a Rust fan, right? You should do as much testing as possible\nbefore production. And testing, you go to an interview and people\nsay, \"Can you draw that agile testing pyramid,",
    "start": "382510",
    "end": "391050"
  },
  {
    "text": "right?\" And I'm like, \"There's a layer on the bottom,\nyou've got your unit tests on the bottom, I think.\" I literally had this in an interview once. No way.",
    "start": "391050",
    "end": "397000"
  },
  {
    "text": "Well, I won't throw any company under the\nbus. But there's this thing on the bottom, it's\nlike unit testing. And I know below that we've got a compiler.",
    "start": "397000",
    "end": "403680"
  },
  {
    "text": "If you've got a language with a strong type\nsystem, you catch a whole...and a borrow checker and a lifetime checker with a plug for Rust,\nyou catch classes and classes of error down",
    "start": "403680",
    "end": "412599"
  },
  {
    "text": "there, right? I know there's the formal methods people,\nand the, you know, the Haskell people, and whatever. So there's all of the...you should do as much\nas possible before production.",
    "start": "412599",
    "end": "419020"
  },
  {
    "text": "But I think Charity Majors puts it well, you\nhave to admit that you test in production, because everybody does.",
    "start": "419020",
    "end": "424099"
  },
  {
    "text": "That's good. There is zero use. I mean, what's a regression test, right? It's a test case we didn't think of. It's a unit test we didn't have.",
    "start": "424099",
    "end": "430199"
  },
  {
    "text": "The user sent us input that we never thought\nof. A user made that request. What, why did they do that? Okay, write that one down, and store it.",
    "start": "430199",
    "end": "436470"
  },
  {
    "text": "We probably did every version of the software\nbecause that's so crazy. We need to see what happens. So it's like, testing in production is undiscovered\nregression tests, maybe is the way to put",
    "start": "436470",
    "end": "444448"
  },
  {
    "text": "it. I love that. I just came up with that. No, it's good. I'm going to take credit for it though because\nI think I pulled it out of you.",
    "start": "444449",
    "end": "450080"
  },
  {
    "text": "But, so that's the Johnson-Turner. Turner? Yes, Turner. So I did remember the..",
    "start": "450080",
    "end": "455960"
  },
  {
    "text": "The Johnson-Turner hypothesis. Johnson-Turner, it's alphabetical. You get it. Turner et al. I see what you're doing.",
    "start": "455960",
    "end": "462530"
  },
  {
    "text": "I know your game. Oh, yes. But once you deploy something, it's\nreleased out there, what's the first thing",
    "start": "462530",
    "end": "470349"
  },
  {
    "text": "you do? You go test it. So you are testing in production. I love that.",
    "start": "470349",
    "end": "476300"
  },
  {
    "text": "But  I think you're right. You've got to test. There are classes of things you're never going\nto get.",
    "start": "476300",
    "end": "481490"
  },
  {
    "text": "The talk is talking about, you can have something\ndeployed, right, standard production, so you",
    "start": "481490",
    "end": "487599"
  },
  {
    "text": "hit it with explicit test traffic, you set\na header or something. Explicit test traffic, so it's no users are\naffected.",
    "start": "487599",
    "end": "493569"
  },
  {
    "text": "But it's testing in a representative environment. It just means that how many staging environments\nhave you seen that are exactly like prod,",
    "start": "493569",
    "end": "499949"
  },
  {
    "text": "right? So, it can't be by definition because they're\nnot prod. Or you just put in huge amounts of time and\nmoney.",
    "start": "499949",
    "end": "505169"
  },
  {
    "text": "I mean, you must have seen organizations with\na huge AWS estate, and then like, \"We do IAC,",
    "start": "505169",
    "end": "510229"
  },
  {
    "text": "this is great. So, why can't we just make another copy of\nprod over here for, like, a staging test environment?\"",
    "start": "510229",
    "end": "515659"
  },
  {
    "text": "It's costing you $10,000 a month, like, or\nwhatever. But, in Serverless that changes some.",
    "start": "515660",
    "end": "522610"
  },
  {
    "text": "It changes some. It changes some. We had this conversation yesterday, but I\ndon't think it changes enough where we go,",
    "start": "522610",
    "end": "528510"
  },
  {
    "text": "\"Don't do that. Don't test it in prod.\" I do think that tests in production and like,\nyou're approaching it with, especially with the canaries, and saying, \"Look, just the\ndevelopers are seeing this,\" things like that.",
    "start": "528510",
    "end": "537660"
  },
  {
    "text": "But with Serverless, if you're not, I mean,\nI know you are familiar with Serverless. So if you're watching this and not familiar\nwith Serverless, Matt Turner's very familiar",
    "start": "537660",
    "end": "548480"
  },
  {
    "text": "with Serverless. Say I don't. When you're doing a release, your infrastructure\nas code because you are...that infrastructure,",
    "start": "548480",
    "end": "558990"
  },
  {
    "text": "it's the same infrastructure regardless of\nwhich account, right? Because we at AWS are managing all that, right?",
    "start": "558990",
    "end": "565120"
  },
  {
    "text": "So, it's the same infrastructure. Because that's what a lot of what you're testing\nis. I guess, let me say it this way, you're going\nto  come a lot closer to having an identical",
    "start": "565120",
    "end": "574339"
  },
  {
    "text": "environment on Serverless. I won't commit to 100, although we probably\nare there.",
    "start": "574339",
    "end": "579730"
  },
  {
    "text": "But, you know, I don't want somebody to come\nback, \"You said it.\" So, you know, well, I'll say, \"That was Turner.\"",
    "start": "579730",
    "end": "584930"
  },
  {
    "text": "It's just the Johnson. That's just the Johnson hypothesis. Well, there's the boss, right? Yeah, there we go.",
    "start": "584930",
    "end": "591050"
  },
  {
    "start": "591000",
    "end": "1108000"
  },
  {
    "text": "So, you do Serverless? But no, you're right. Some? I've done a little.",
    "start": "591050",
    "end": "596950"
  },
  {
    "text": "I've not done that much. Well, okay, so what is Serverless? Okay, I can see. You said you had some questions. Well, because I feel like you say Serverless,\na lot of people think...",
    "start": "596950",
    "end": "603209"
  },
  {
    "text": "I'm glad you asked. ...Lambda. So, you say cloud-native, and those aren't\nthe same, although we fall into that cloud-native",
    "start": "603209",
    "end": "610100"
  },
  {
    "text": "meaning. So, define cloud-native to me first? Well, yeah, that's difficult. There are people out there so much more qualified,\nI gonna get roasted for this.",
    "start": "610100",
    "end": "618980"
  },
  {
    "text": "I mean, to me it's... Do the 100 level. Ok. So to me, it is cloud.",
    "start": "618980",
    "end": "624279"
  },
  {
    "text": "I mean, that sounds silly. But like we got no data centers, we got no\nlead time, we've cut...",
    "start": "624279",
    "end": "629339"
  },
  {
    "text": "I mean, this is probably getting to what you're\ngoing to say about Serverless. We've cut several layers of infrastructure\nthat we have to understand, an operational",
    "start": "629340",
    "end": "636720"
  },
  {
    "text": "burden off the bottom of the stack, right,\nwe don't have to do physical security for the data center, and we don't have to think\nabout power redundancy, right, we've got rid",
    "start": "636720",
    "end": "642610"
  },
  {
    "text": "of some lead times. So there are the advantages of the cloud,\nsomebody else's computer. Then I think the native part says, we were\nborn there.",
    "start": "642610",
    "end": "652019"
  },
  {
    "text": "The system is designed to be there. So, lifting and shifting into the cloud is\nabsolutely a ground thing to do, right?",
    "start": "652019",
    "end": "657410"
  },
  {
    "text": "You should get out of a data center, you should\nget off-prem, like out of the broom cupboard, lifting and shifting into an easy to and then\ngoing, for now, the first step on a journey",
    "start": "657410",
    "end": "664079"
  },
  {
    "text": "absolutely valid. But to me, cloud-native is something that\nwas either if you're lucky enough greenfields,",
    "start": "664079",
    "end": "669910"
  },
  {
    "text": "born in the cloud, designed and only ever\nrun in the cloud, or something that's where the engines have been changed in flight and\nyou've re-architected something to work in",
    "start": "669910",
    "end": "678360"
  },
  {
    "text": "a cloudy way, right? Such as it's stateless as far as possible\nso that you can get redundancy by horizontally",
    "start": "678360",
    "end": "688420"
  },
  {
    "text": "scaling, and can get performance from horizontally\nscaling. You've got infrastructure as code so that\nyour environments are reproducible around",
    "start": "688420",
    "end": "694630"
  },
  {
    "text": "the world and reproducible for tests. So all of that kind of stuff. Yes, and you're right.",
    "start": "694630",
    "end": "699790"
  },
  {
    "text": "So, you take that and kind of go to the next\nlevel. Serverless is just probably more abstract.",
    "start": "699790",
    "end": "705490"
  },
  {
    "text": "Although we say the cloud-native level of\nservice as well. Just simply because we say it's a service\nin the cloud, rather than you spinning up",
    "start": "705490",
    "end": "717510"
  },
  {
    "text": "a VM in the cloud and building your own service. So, the service is abstracting a lot of that\nwork away from you.",
    "start": "717510",
    "end": "724050"
  },
  {
    "text": "And with Serverless, at AWS, you can put 100\npeople in a room and get 100 different definitions",
    "start": "724050",
    "end": "731050"
  },
  {
    "text": "of Serverless. Right? So at AWS, we have several tiers that we say\nthere are several pillars.",
    "start": "731050",
    "end": "738230"
  },
  {
    "text": "They're not the same as tiers. No. They're like...",
    "start": "738230",
    "end": "743629"
  },
  {
    "text": "So the first is, you know, no management,\nthere's no computer, no patching, you don't",
    "start": "743630",
    "end": "750769"
  },
  {
    "text": "do any infrastructure management. The second thing is, you pay for only what\nyou use.",
    "start": "750769",
    "end": "759620"
  },
  {
    "text": "And that's where we get into some debate. There are people who go, \"Oh, they scale to\nzero because Serverless, you know, at least,",
    "start": "759620",
    "end": "764870"
  },
  {
    "text": "a Lambda function, a step function, things\nlike that, they scale to zero.\"",
    "start": "764870",
    "end": "770139"
  },
  {
    "text": "And lots of services can scale to infinity\nand beyond. That's a good reference right there.",
    "start": "770139",
    "end": "775712"
  },
  {
    "text": "I like it. Spicy. But they... We might have to trademark that one. But not a lot of services can come back to\nzero.",
    "start": "775712",
    "end": "783520"
  },
  {
    "text": "And I think that's a critical point. However we have some services like a Fargate\nor something like that, that may not come",
    "start": "783520",
    "end": "790610"
  },
  {
    "text": "to zero, but they come pretty close. But they provide massive scalability. And they can be faster as well.",
    "start": "790610",
    "end": "797450"
  },
  {
    "text": "mean, a lot of the cloud-native technology\nwill get you a long way there. I can get a...I pay for what you use, I can\nget a Kubernetes cluster, and the cluster",
    "start": "797450",
    "end": "805260"
  },
  {
    "text": "scales based on VMs. There are many vendors out there, it'll do\ncleverly....",
    "start": "805260",
    "end": "810529"
  },
  {
    "text": "When your cluster is going to scale it'll\ngo to the spot market versus on-demand versus your reserved usage.",
    "start": "810529",
    "end": "816040"
  },
  {
    "text": "It'll do clever optimizations. And then within the cluster, your workloads,\nyour Kubernetes deployments can scale up and",
    "start": "816040",
    "end": "823329"
  },
  {
    "text": "down as well. So you can be pretty elastic. You're always playing for that control plane. And you can… You always have a base.",
    "start": "823329",
    "end": "828790"
  },
  {
    "text": "You get down to one of every service and you\nalways pay for the control plane. Maybe that's good enough, right? If you're huge, and like maybe that's fine.",
    "start": "828790",
    "end": "835830"
  },
  {
    "text": "And there are lots of advantages I think to\nliving at that level of abstraction. Because you can extend the Kubernetes control\nplane, you can add a service mesh, you can",
    "start": "835830",
    "end": "845009"
  },
  {
    "text": "add all the things. So there are a lot of reasons I think to live\nat that level of complexity. But if you don't have to...",
    "start": "845009",
    "end": "851490"
  },
  {
    "text": "You don't have to, but, of course, you'd want\nto. But so, as in if you don't have the requirements\nfor it, I would say that you'd want to.",
    "start": "851490",
    "end": "857750"
  },
  {
    "text": "If you don't have the requirements for it,\nthen yeah, maybe you could use...you know. One of the things we talked, I was playing\nwith you honestly, but one of the things we",
    "start": "857750",
    "end": "864339"
  },
  {
    "text": "talked about, and you make some good points\nis when we talk, because why Serverless, or when Serverless, when Kubernetes, things like\nthat, or when ECS, when Fargate.",
    "start": "864339",
    "end": "874069"
  },
  {
    "text": "At AWS, the way we kind of look at it is,\nfirst of all, right tool, right job, right?",
    "start": "874070",
    "end": "882320"
  },
  {
    "text": "And I am a fan of this, we have a lot of companies\nthat go, \"We're Serverless first. But if it doesn't work in Serverless, then\nwe roll.\"",
    "start": "882320",
    "end": "889040"
  },
  {
    "text": "Serverless native. Yes. Serverless companies, you know. I won't name a bunch of them because some\nof them are U.S., things like that.",
    "start": "889040",
    "end": "894980"
  },
  {
    "text": "But we have companies that say, \"We build\neverything Serverless first, but some workloads don't work. So we'll roll that off to containers.",
    "start": "894980",
    "end": "901600"
  },
  {
    "text": "But the other option we have,\" this leans\nmore to what you were saying, is, we have some folks that say, \"Look, I want to be able\nto turn more knobs and levers than Serverless",
    "start": "901600",
    "end": "910420"
  },
  {
    "text": "gets me.\" And so if you look at the spectrum of compute\nin AWS, you start with the EC2 instance, right?",
    "start": "910420",
    "end": "916870"
  },
  {
    "text": "Where you manage all the knobs and levers,\nhow long is it up, how powerful compute, all",
    "start": "916870",
    "end": "922130"
  },
  {
    "text": "those kinds of things. But, you patch, you know, you do security,\nyou're up in the middle of the night when",
    "start": "922130",
    "end": "928759"
  },
  {
    "text": "it goes down, things like that. Then you kind of move up the stack, and you\nhave the EKS and ECS, where you're managing",
    "start": "928759",
    "end": "935959"
  },
  {
    "text": "clusters. And you still may, there's a lot of things,\nbut you get some... You know, patching operating systems and stuff.",
    "start": "935960",
    "end": "942040"
  },
  {
    "text": "Yes, well, you might be depending on what\nyou want. Exactly. Well, you can, but you don't have to. But not the core, you know, right?",
    "start": "942040",
    "end": "948560"
  },
  {
    "text": "Then you can kind of keep...you know, Fargate\nworks a lot of the...a lot more is abstract down, then finally Serverless.",
    "start": "948560",
    "end": "954769"
  },
  {
    "text": "What we talk about with folks is that some\nof it come down to preference. We know our app more than anybody else, even\nmore than AWS, we being the company, right?",
    "start": "954769",
    "end": "966639"
  },
  {
    "text": "We want to be able to modify and turn that,\nwe have the skill set, and that's fine. That's when we say, \"Okay, go to EC2, go to\nEKS, go to ECS,\" depending on where you are.",
    "start": "966639",
    "end": "974069"
  },
  {
    "text": "We have a lot of companies, \"Okay, look, we\ndon't want to deal with all that. We just want to put our code in and we want\nto get moving really fast, proof of concept.",
    "start": "974069",
    "end": "983279"
  },
  {
    "text": "We don't have the skill set to patch, manage,\nand turn all those knobs and levers.\" That's really when people say, \"What should\nI use?\"",
    "start": "983279",
    "end": "989750"
  },
  {
    "text": "That's kind of one of the things I lean towards,\nis this is, you know, where you definitely say.",
    "start": "989750",
    "end": "994810"
  },
  {
    "text": "And of course, you know, being a Serverless\nDA for Amazon, I'm gonna say Serverless, because I do believe in Serverless. I'm a huge fan of it.",
    "start": "994810",
    "end": "1003769"
  },
  {
    "text": "But the right tool, the right job. Exactly. I believe in Kubernetes and Istio and a whole\nbunch of problems that they can solve.",
    "start": "1003769",
    "end": "1009360"
  },
  {
    "text": "I think that's what we look at Tetrate, is\nif you're a slightly larger organization, your software's been around for longer like\nyou have, there's so much to know, and you've",
    "start": "1009360",
    "end": "1018050"
  },
  {
    "text": "got the people that know all of it. Those levers you don't want to be patching\nOses, you don't want to be doing data center",
    "start": "1018050",
    "end": "1023180"
  },
  {
    "text": "physical security. But you maybe want to extend your Kubernetes,\nextend your network, so you can write some",
    "start": "1023180",
    "end": "1030350"
  },
  {
    "text": "Rust or some JavaScript, you can compile it\nto WASM, you can inject it into so many places for your network proxies, you can use our\nWazero product to embed that into any Golang",
    "start": "1030350",
    "end": "1039329"
  },
  {
    "text": "program. So, you can get that kind of control. I think we're looking at people saying, cloud-native\nis great.",
    "start": "1039329",
    "end": "1045159"
  },
  {
    "text": "Like, if you've been born in the cloud, you've\nonly ever done greenfield on a cloud provider",
    "start": "1045160",
    "end": "1050230"
  },
  {
    "text": "then that's awesome. But actually, if you're an enterprise with\na bunch of site offices, and a bunch of some",
    "start": "1050230",
    "end": "1055880"
  },
  {
    "text": "stuff is still on-prem, or there are regulatory\nrequirements, or you're multi-cloud, or any of these reasons, and you want, you know,\nsmart, observable, elastic compute, and smart,",
    "start": "1055880",
    "end": "1066150"
  },
  {
    "text": "observable, secure networking. But you've got to plug those things together\nacross continents and across cloud providers,",
    "start": "1066150",
    "end": "1071640"
  },
  {
    "text": "then you need to have that understanding,\nyou need to have that control. We try to take as much of that burden off\nyou. We've got our management playing, we try to\ntake as much of that burden off of you as",
    "start": "1071640",
    "end": "1079679"
  },
  {
    "text": "possible and do what we're good at so that\nyou can do what you're good at. But what you're good at has got to be running\nthose bigger legacy systems.",
    "start": "1079680",
    "end": "1086649"
  },
  {
    "text": "Yes. And, again, as a DA at AWS that was a lot\nof the conversations we had, as well, as like...",
    "start": "1086650",
    "end": "1093539"
  },
  {
    "text": "You said it earlier, get to the cloud as fast\nas you can.",
    "start": "1093539",
    "end": "1098909"
  },
  {
    "text": "The folks that run their own data centers,\nI really, just probably turned into more of a relic. Probably.",
    "start": "1098910",
    "end": "1104390"
  },
  {
    "text": "Get to the cloud. Get to the cloud. One of the things that need an answer is,\nhow do we get to the cloud?",
    "start": "1104390",
    "end": "1109890"
  },
  {
    "start": "1108000",
    "end": "1387000"
  },
  {
    "text": "A lot of times it's that lift and shift as\nyou referred to earlier. Well, we found that we can help people with\nthat, actually. So, if you get things into a service mesh,\nif you have, you can establish like a beachhead",
    "start": "1109890",
    "end": "1119440"
  },
  {
    "text": "in the cloud. You can then get your layers, your smart layer\nserver networking. You can actually apply it in the data center\non VMs before you've gone to the cloud before",
    "start": "1119440",
    "end": "1127679"
  },
  {
    "text": "you've gone to containers. We've got ways to get that stuff, right, really\neasily into the data center and into VMs and",
    "start": "1127679",
    "end": "1136230"
  },
  {
    "text": "get that stuff observable and under control. Because then, you know, you try to move... Then you start that process.",
    "start": "1136230",
    "end": "1141711"
  },
  {
    "text": "Being in the cloud is great. Being in a data center is better than being\nsplit across two because then you've got a",
    "start": "1141711",
    "end": "1147880"
  },
  {
    "text": "VPN link or like whatever. So, if we can help with that stage, then we\nactually help find that people find that lift",
    "start": "1147880",
    "end": "1154179"
  },
  {
    "text": "and shift a lot easier. They think, \"Oh, well, you know, my stages,\nI'm going to build up the tech stack,\" right? \"So I'm going to dockerize everything, and\nthen I'm going to put it in Kubernetes, and",
    "start": "1154179",
    "end": "1161080"
  },
  {
    "text": "then I'm going to add a service mesh.\" And then I'm...\" We're like, \"No, actually, if you start by\ngetting control of what really counts,\" which",
    "start": "1161080",
    "end": "1167039"
  },
  {
    "text": "is the sort of resiliency and security of\nyour requests. It's the preparation for...",
    "start": "1167039",
    "end": "1172710"
  },
  {
    "text": "And I think that's where a lot of companies\nfall, here we are.",
    "start": "1172710",
    "end": "1179330"
  },
  {
    "text": "We don't know how it works, but just get us\non the cloud. But if you can come in and go, \"Okay, now,\nwe've organized this, we know how it works.\"",
    "start": "1179330",
    "end": "1188250"
  },
  {
    "text": "Much like what you're saying, \"Well, let's\nadd these layers, let's add this. We now have a good...\"",
    "start": "1188250",
    "end": "1193360"
  },
  {
    "text": "Because, how many companies have you talked\nto that would go, \"It's kind of a black box to us?\"",
    "start": "1193360",
    "end": "1198420"
  },
  {
    "text": "You know, a lot of them. Okay, we know how it works. Now we can, you know. And we talk about strangler patterns, things\nlike that, where we say, okay, let's start",
    "start": "1198420",
    "end": "1204970"
  },
  {
    "text": "pulling some of those out. Excuse me, you have the ability to start plucking\nthose much if you know your application.",
    "start": "1204970",
    "end": "1213570"
  },
  {
    "text": "That's one of like long conversations that\nI'd have with customers is, \"Tell me about your application.\" \"Well...\"",
    "start": "1213570",
    "end": "1219570"
  },
  {
    "text": "That's the first... Because that's like, \"Oh, Dave wrote it. And Dave left 20 years ago.\" Yes, exactly.",
    "start": "1219570",
    "end": "1225170"
  },
  {
    "text": "That's the first... That's how I describe Kubernetes to people,\nright? Because you can talk about, I mean, I've been\non panels where you talk about Kubernetes as the new POSIX.",
    "start": "1225170",
    "end": "1231760"
  },
  {
    "text": "It's this great, flexible, extensible API\nfor accessing compute, and it doesn't actually have to be containers underneath, and it doesn't\nhave to be real VMs, it can be some kind of",
    "start": "1231760",
    "end": "1240139"
  },
  {
    "text": "Serverless compute. But, you know, that's the very abstract way\nto look at it.",
    "start": "1240140",
    "end": "1245920"
  },
  {
    "text": "To a lot of people, it's like, I've got some\ncontainers, I've got lots of...and I can run on a container on one computer by typing docker\nrun, right?",
    "start": "1245920",
    "end": "1252580"
  },
  {
    "text": "I've now got 1000 computers. Kubernetes is the thing that, like, does that. So, what I say to people is, okay, all of\nthese configurations, all of these different",
    "start": "1252580",
    "end": "1260330"
  },
  {
    "text": "resources you can make, you're describing\nyour application to Kubernetes. Just saying this is what it looks like when\nit's healthy and when it's unhealthy.",
    "start": "1260330",
    "end": "1266908"
  },
  {
    "text": "This is how it scales. Oh, you need the minimum this thing forms\na Paxos consensus, so I need a minimum of three.",
    "start": "1266909",
    "end": "1272669"
  },
  {
    "text": "You have to tell Kubernetes that stuff. And the same with Istio or any other service\nmesh. You tell it, \"Oh, this is an idempotent operation,\nthis is not.\"",
    "start": "1272669",
    "end": "1279309"
  },
  {
    "text": "So, you can retry this. You have to know. So you have to know. It starts with what you have to know.",
    "start": "1279309",
    "end": "1284409"
  },
  {
    "text": "That's where I think a lot of our companies\nfail in preparing for that move.",
    "start": "1284410",
    "end": "1291029"
  },
  {
    "text": "How many times? You go, \"I don't know, we don't know.\" And I get that because of what you said, the\nperson who built it is gone.",
    "start": "1291029",
    "end": "1297350"
  },
  {
    "text": "We have to have it. You know, there's no end of life to this,\nit has to happen.",
    "start": "1297350",
    "end": "1303419"
  },
  {
    "text": "And so, that's a painful point. Or it's, you know, it's on a mainframe.",
    "start": "1303419",
    "end": "1310100"
  },
  {
    "text": "Oh, yeah, or something like, I would take... Or it's on a mainframe. I probably can't help you with a mainframe. Ancient side note.",
    "start": "1310100",
    "end": "1315980"
  },
  {
    "text": "We just had somebody in and I can't reference\nit right now, but I'll have to find, who is running as a custom runtime.",
    "start": "1315980",
    "end": "1322940"
  },
  {
    "text": "They're running RGP. What's the IBM, RPG?",
    "start": "1322940",
    "end": "1328059"
  },
  {
    "text": "I'm quite old, but I'm not that old, maybe... What's that? I'm quite old, but I'm not that old.",
    "start": "1328059",
    "end": "1333260"
  },
  {
    "text": "Oh, no. But, anyway, it's what you run on it is 400. It's a mainframe and they're running that\ncode inside of a Lambda function.",
    "start": "1333260",
    "end": "1340860"
  },
  {
    "text": "Wow, I think that Kubernetes was ported, I'm\ngoing to get this wrong. I think it was ported to the Z-Series architecture.",
    "start": "1340860",
    "end": "1346640"
  },
  {
    "text": "And I think it was ported to z/OS. I think you can run it. I think you can run the Kube and all of the\nsort of, data plane components.",
    "start": "1346640",
    "end": "1354100"
  },
  {
    "text": "I think you can run on z/OS, on a z390 processor. If those are even things that exist.",
    "start": "1354100",
    "end": "1360100"
  },
  {
    "text": "I think they did do work. You're, \"What did we need that we had to do\nthat?\" You're like... It's like, \"Who?\" \"We don't need it.",
    "start": "1360100",
    "end": "1365309"
  },
  {
    "text": "We just could do it.\" It's either that or it's somebody who will\nnever agree to be named funded that development.",
    "start": "1365309",
    "end": "1372549"
  },
  {
    "text": "Like, \"I need this. I don't even want to talk about why we're\nhere. Here is a million dollars.",
    "start": "1372549",
    "end": "1378140"
  },
  {
    "text": "Can you all just go and like do these ports\nfor me? And I'll take it away and I won't talk to\nyou again.\" It's a step backward... Well, I don't know, but yeah.",
    "start": "1378140",
    "end": "1384049"
  },
  {
    "text": "It's a step sideways, whatever, I don't know. Yeah. So let's jump forward a little bit.",
    "start": "1384049",
    "end": "1390429"
  },
  {
    "start": "1387000",
    "end": "1727000"
  },
  {
    "text": "So we talked\nabout cloud-native, things like that.",
    "start": "1390430",
    "end": "1396170"
  },
  {
    "text": "One of the things is Serverless, I'm gonna\npost-Serverless on this, yeah. Event-driven architecture, not all event-driven\narchitecture is Serverless, but all Serverless",
    "start": "1396170",
    "end": "1408290"
  },
  {
    "text": "is event-driven architecture. Does that make sense? Okay.",
    "start": "1408290",
    "end": "1413710"
  },
  {
    "text": "So, define Serverless. Because I think a lot of people will say Serverless\nLambda. Now I'm moving to, you know, I'm talking step\nfunctions.",
    "start": "1413710",
    "end": "1421010"
  },
  {
    "text": "I'm talking about Lambda functions. Chris Munns would have tackled me right there. You can't say lambdas.",
    "start": "1421010",
    "end": "1426800"
  },
  {
    "text": "It has to be Lambda functions. So, yes, but... Like Aurora. What's that?",
    "start": "1426800",
    "end": "1432500"
  },
  {
    "text": "Aurora. Aurora, there's an Aurora Serverless. Yes. It's that kind of stuff that I'm asked to\nread because obviously I'm deep in the Kubernetes",
    "start": "1432500",
    "end": "1438370"
  },
  {
    "text": "world and whatever, like compute networking,\nI got it, I want to pull the levers, I understand",
    "start": "1438370",
    "end": "1444158"
  },
  {
    "text": "it. I don't understand databases. I just want to call it a database. I just want there to be a network endpoint. I don't want to upgrade the database.",
    "start": "1444159",
    "end": "1450390"
  },
  {
    "text": "I don't want to back up the database. I don't want to certainly patch its OS, because\nI do not understand that stuff. You want DynamoDB.",
    "start": "1450390",
    "end": "1455820"
  },
  {
    "text": "So, to me, yeah, like, I want something... So I can name other vendors. I want a Cockroach, right, or I want a Spanner,\nor something.",
    "start": "1455820",
    "end": "1465000"
  },
  {
    "text": "Yes, Cockroach Mongo. Exactly. So, it's just ambient. Like, I just hit the network endpoint and\nit just always works.",
    "start": "1465000",
    "end": "1470769"
  },
  {
    "text": "All right, so let me go back. So, Serverless, we talked about, you know,\nyou don't patch, you don't manage, you know,",
    "start": "1470770",
    "end": "1476549"
  },
  {
    "text": "it's a skill zero or it skills as you need\nit. We talked about paying for only what you use,\nand then all the security and stuff is built",
    "start": "1476549",
    "end": "1483830"
  },
  {
    "text": "in, and we handled that. In this, well, I'm just going to manually\nbox it to say that at this point I'm talking",
    "start": "1483830",
    "end": "1493240"
  },
  {
    "text": "about, you know, get Lambda function, step\nfunctions, event bridge. I'm talking obviously AWS services.",
    "start": "1493240",
    "end": "1502490"
  },
  {
    "text": "API gateway. Do you work with EDA at all, like event-driven\narchitectures?",
    "start": "1502490",
    "end": "1510080"
  },
  {
    "text": "I haven't done too much in the cloud. It's something I need to get to. Okay. That's something that we're driving at as\nwe're teaching folks.",
    "start": "1510080",
    "end": "1519929"
  },
  {
    "text": "So, this again, kind of comes back to the\nknobs and levers, right?",
    "start": "1519929",
    "end": "1525070"
  },
  {
    "text": "We have a lot of folks, it's like this mentality,\nwho say, \"We don't want to do all the knobs and levers, we just want to say, this happened,\ndo something.\"",
    "start": "1525070",
    "end": "1532920"
  },
  {
    "text": "And this is where Serverless really sells. And you think Serverless is the best way to\ndo that?",
    "start": "1532920",
    "end": "1538440"
  },
  {
    "text": "I do. Yeah, I do in this respect because I'm not... One, I shouldn't have to have a server sitting\nout there, or a cluster, or anything saying,",
    "start": "1538440",
    "end": "1546320"
  },
  {
    "text": "when did it happen? Listening on port 80 or port 443 and saying,\nwhen did it happen? When did it happen?",
    "start": "1546320",
    "end": "1551470"
  },
  {
    "text": "Instead, I should just be able to say, \"That\nhappened, I'm gonna do something,\" right? And so, for instance, an IoT button, data\nsaved to a database.",
    "start": "1551470",
    "end": "1562870"
  },
  {
    "text": "You know, files dropped in a bucket, things\nlike that. So it's a different way of thinking, of pooling,\nor always listening.",
    "start": "1562870",
    "end": "1572179"
  },
  {
    "text": "And what we're seeing, it allows customers... And it's also kind of a shift more...maybe\nthis is another question for you, it's a shift",
    "start": "1572179",
    "end": "1579179"
  },
  {
    "text": "more to asynchronous processing versus synchronous\nprocessing. So, I'm a big fan.",
    "start": "1579179",
    "end": "1585190"
  },
  {
    "text": "And actually, I'm quite an old guy. You see things come around in cycles, right? So, it's like, I'm thinking, I was always\na massive fan of Rx, the Rx libraries, RxJS,",
    "start": "1585190",
    "end": "1595070"
  },
  {
    "text": "RxGo, RxC#, that kind of observable base,\nyou know, that's asynchronous, it's pool-based.",
    "start": "1595070",
    "end": "1600090"
  },
  {
    "text": "And those things though, they kind of...you\ndownload that library into your program, and it just kind of works.",
    "start": "1600090",
    "end": "1606380"
  },
  {
    "text": "But then sometimes you need to take more control\nof like, here's the compute pool, here's the thread pool for like this stage, because this\nis the bit that's the bottleneck or something.",
    "start": "1606380",
    "end": "1614850"
  },
  {
    "text": "So we were doing that in process. And I've done a bunch of Elixir in my time,\nso sort of Erlang stuff.",
    "start": "1614850",
    "end": "1621309"
  },
  {
    "text": "So the actor model is also a really nice kind\nof event-driven architecture. These tended to be on one, like in one process\non one machine.",
    "start": "1621309",
    "end": "1627799"
  },
  {
    "text": "These were like monoliths. And I talk about this when I talk about microservices. I'm like microservices are great.",
    "start": "1627800",
    "end": "1632960"
  },
  {
    "text": "They've got a bunch of advantages. They were about decoupling deployment.",
    "start": "1632960",
    "end": "1638380"
  },
  {
    "text": "They're about making architecture... Distributed. ...understandable to teams. They're about distributing things.",
    "start": "1638380",
    "end": "1644630"
  },
  {
    "text": "They're about getting those independent security\ncontexts and sort of scaling boundaries and stuff. People just talk about all modularity, but\nlike we will never be bad at...",
    "start": "1644630",
    "end": "1653830"
  },
  {
    "text": "I mean, there was definitely some mess made,\nbut like we knew how to make...the knowledge was out there of how to make a good monolith.",
    "start": "1653830",
    "end": "1662289"
  },
  {
    "text": "You had interface-driven development, you\nhad compartmentalization, you had DDD, right, we were pretty good at making a sort of nice,\ncompartmentalized, dependency injection frameworks,",
    "start": "1662289",
    "end": "1670230"
  },
  {
    "text": "all of that kind of stuff. We were quite good at doing that with monoliths. And yeah, all this event-driven asynchronous\narchitecture.",
    "start": "1670230",
    "end": "1675570"
  },
  {
    "text": "I've seen it inside a monolithic, inside one\nBEAM VM, right, one Erlang program, or inside one massive piece of Java, right?",
    "start": "1675570",
    "end": "1682309"
  },
  {
    "text": "You can have a million lines of Java, that\nthis utterly sprawling mess with your dependency inversion problems and all kinds of stuff.",
    "start": "1682309",
    "end": "1688390"
  },
  {
    "text": "Or you can have something that's actually\nAkka Scala or it's actually RxJava, and it's really, really nice.",
    "start": "1688390",
    "end": "1694059"
  },
  {
    "text": "So I've always been a fan of Akka and stuff. And I didn't even know we're saying we invented\nevent-driven. I know it's been reg-...",
    "start": "1694059",
    "end": "1700289"
  },
  {
    "text": "So, I wasn't saying that. You're welcome. That's the Johnson. Yes. Just Johnson's event-driven model.",
    "start": "1700289",
    "end": "1705940"
  },
  {
    "text": "So, no, event-driven has been around for quite\na while. But I think there's a power, we struggle with\nfolks who can't understand.",
    "start": "1705940",
    "end": "1714190"
  },
  {
    "text": "Just like asynchronous versus synchronous. That's not always the case.",
    "start": "1714190",
    "end": "1719500"
  },
  {
    "text": "You can have synchronous events being thrown\nin and responded to, but most of it does kind of move to an asynchronous move, but yeah,\nI know...",
    "start": "1719500",
    "end": "1727559"
  },
  {
    "start": "1727000",
    "end": "2081000"
  },
  {
    "text": "So, kind of a side quest here. The last time I did one of these interviews\nseveral years ago, was actually with one of",
    "start": "1727559",
    "end": "1736010"
  },
  {
    "text": "them, I don't think he was the founder but\nhe one of the core users of Erlang.",
    "start": "1736010",
    "end": "1742130"
  },
  {
    "text": "And I'll have to come up with the name, and\nI know that the folks probably hanging out probably know.",
    "start": "1742130",
    "end": "1747380"
  },
  {
    "text": "Because it came out of Ericsson right in Sweden. It was the Ericsson language. Oh, wow. He was there when all this was happening.",
    "start": "1747380",
    "end": "1755110"
  },
  {
    "text": "Ulf Wiger. Do you know him? No, I've not heard of him. They were... And then the other guy was like the genius\nof Elixir and how Elixir was based on...",
    "start": "1755110",
    "end": "1764399"
  },
  {
    "text": "I mean, I can't spell. Either one of them, you know, so...",
    "start": "1764399",
    "end": "1769660"
  },
  {
    "text": "Apologies to the Danish speakers. I couldn't do that. Yes, Elixir is something you mix in a bottle,\nright?",
    "start": "1769660",
    "end": "1776010"
  },
  {
    "text": "It was fascinating, and I've done a little\nErlang.",
    "start": "1776010",
    "end": "1781480"
  },
  {
    "text": "Erlang has a great framework for communication\nbetween devices. And we had to set up RabbitMQ.",
    "start": "1781480",
    "end": "1788340"
  },
  {
    "text": "And you had to, I mean, literally, I'm just\nreading docs, and pushing buttons, and stuff, but I got it working.",
    "start": "1788340",
    "end": "1794320"
  },
  {
    "text": "And it was this event-driven kind of queueing\nsystem. But within a process, everything is an actor.",
    "start": "1794320",
    "end": "1800020"
  },
  {
    "text": "So, you sort of take the textbook definition\nof object-orientated programming, I guess, came from Smalltalk.",
    "start": "1800020",
    "end": "1805840"
  },
  {
    "text": "So, they say that your passing message, think\nof it as passing messages between objects. But of course, you're like in Smalltalk, maybe\nyou are in Objective-C, actually, you kind",
    "start": "1805840",
    "end": "1813330"
  },
  {
    "text": "of are. But in C#, or Java, or C++, you're making\na function call, right? You're pushing some arguments onto a stack,\nyou're changing the program counter.",
    "start": "1813330",
    "end": "1821440"
  },
  {
    "text": "Like it's very coupled. It's very synchronous. But Erlang actually says no, each instance\nof an object, of a class, if you want to look",
    "start": "1821440",
    "end": "1831020"
  },
  {
    "text": "at it like that, each one of these actors\ngenuinely does have like an inbox and it has messages. So, it has its own little thread.",
    "start": "1831020",
    "end": "1836870"
  },
  {
    "text": "I mean, it's a lightweight thread, but it\nhas its own little thread of execution that it'll sort of churn through the messages in\nits inbox. And if it goes down...",
    "start": "1836870",
    "end": "1843630"
  },
  {
    "text": "And if it goes down, then there's actually\na service discovery. If it goes down it'll get restarted. Like, if it crashes, it's isolated.",
    "start": "1843630",
    "end": "1849070"
  },
  {
    "text": "It doesn't take the rest of the monolithic\nprocess down. And that's built into the framework. Yeah, so that's good. So, the BEAM, BEAM is the name of the VM.",
    "start": "1849070",
    "end": "1856420"
  },
  {
    "text": "On the JVM you can compile Java, Kotlin, Scala\nfor JVM. Erlang was the original language.",
    "start": "1856420",
    "end": "1862120"
  },
  {
    "text": "So Elixir is like Ruby for the Erlang VM,\nis how I describe it. So it's a much nicer, more modern-friendly\nlanguage, it just compiles to BEAM bytecode.",
    "start": "1862120",
    "end": "1870760"
  },
  {
    "text": "So, you can look at one running like Linux\nprocess. That can even be a distributed system and\nhave a bunch of actors inside it.",
    "start": "1870760",
    "end": "1878169"
  },
  {
    "text": "Then as you say, you can take that, they had\nlike a native mechanism to take that across machines, where you would run BEAM.",
    "start": "1878169",
    "end": "1885290"
  },
  {
    "text": "Your actors, you would have like 10,000 on\nthis machine or 10,000 on that machine. And you'd have to set up a message boss for\nthem to communicate over.",
    "start": "1885290",
    "end": "1892250"
  },
  {
    "text": "I'd say this has been... I know it says in my title, developer advocate. And really, it's because they can't fit somewhat\nof a developer cum advocate.",
    "start": "1892250",
    "end": "1899909"
  },
  {
    "text": "I'm an architect. That's what I do.I'm a Serverless architect\nworking with Serverless. So, this has been a...",
    "start": "1899909",
    "end": "1906350"
  },
  {
    "text": "I learned a lot from you, honestly. You obviously know deep knowledge, and I love\nit.",
    "start": "1906350",
    "end": "1911888"
  },
  {
    "text": "But I've just been around it. But I've always liked that stuff. Well, yeah. Well, you're a nerd. I've always liked those patterns. Yes.",
    "start": "1911889",
    "end": "1917889"
  },
  {
    "text": "big time. It's all right. I played with a lot of this stuff. And so, you can... I'm not judging. But this guy's a nerd.",
    "start": "1917889",
    "end": "1923889"
  },
  {
    "text": "But I love how much information is in this. This is a session in itself on just understanding\na lot of your thought processes in coding",
    "start": "1923889",
    "end": "1934409"
  },
  {
    "text": "and development in language and things of\nthat sort. Well, maybe. I'd have to really think about it. And this session would have to mean not like... What's the best way to put this?",
    "start": "1934409",
    "end": "1943549"
  },
  {
    "text": "This session can't be like, oh, this is audio. What are you all talking about? Like, this has all been done before. What does Turner know?",
    "start": "1943550",
    "end": "1949429"
  },
  {
    "text": "Well, either that or like, \"Oh, shut up about\nyour Kubernetes. It's just Erlang.",
    "start": "1949429",
    "end": "1954679"
  },
  {
    "text": "Shut up about your Erlang. It's just Smalltalk.\" You obviously love it. And I love this. I mean, I think I love that pattern when you\ntalk about adventure in architecture.",
    "start": "1954679",
    "end": "1959690"
  },
  {
    "text": "It's a pattern I've always loved. And it works. So to say, and it works.",
    "start": "1959690",
    "end": "1965549"
  },
  {
    "text": "We're kind of taking it to the next level,\nputting it, you know, in the cloud. As I say, you had all these actors in one\nUnix process, and you had them across machines.",
    "start": "1965549",
    "end": "1973870"
  },
  {
    "text": "Now each one is a pod, or each one is a Lambda\nfunction or something. I really loved Elixir could do it.",
    "start": "1973870",
    "end": "1980210"
  },
  {
    "text": "And Scala was very good at it. There was a DSL you could write. Because how many of those independent little\ncommunicating processes are just state machines?",
    "start": "1980210",
    "end": "1990460"
  },
  {
    "text": "Desired State Language, is that what DSL? Oh, Domain-Specific Language. Okay. All right.I think the desired state was Microsoft.",
    "start": "1990460",
    "end": "1998000"
  },
  {
    "text": "Oh, maybe. There's maybe talking about your... Yes, there was the desired state process.",
    "start": "1998000",
    "end": "2004630"
  },
  {
    "text": "There are these things, these TIs have been\nreused many times. I can't remember that one. A language that's got a syntax that's flexible\nenough that you can sort of extend it.",
    "start": "2004630",
    "end": "2014429"
  },
  {
    "text": "So, you can make, like, a language within\na language. So, in Scala or Erlang, you could write...you\ncould just be very explicit about a state",
    "start": "2014429",
    "end": "2023240"
  },
  {
    "text": "machine. Like, here's my state table what state am\nI in? What input did I get? Do this little thing.",
    "start": "2023240",
    "end": "2028539"
  },
  {
    "text": "Because you find out that so many of your... Think about how many classes in Java, if you\nreally squint at them, actually could be reduced",
    "start": "2028539",
    "end": "2034730"
  },
  {
    "text": "to quite as simple as, I'm in this state,\nI've got this event, do this, go to that state. Like, just that tuple of...",
    "start": "2034730",
    "end": "2040760"
  },
  {
    "text": "Simple. One thing. Yes, that three tuples of, where am I? What came in? Like, what am I outputting? Where am I going?",
    "start": "2040760",
    "end": "2046760"
  },
  {
    "text": "Okay, that's a four-tuple life and there's\na fifth element actually, like a formal definition of a state machine. But in these systems, you could often just\nwrite.",
    "start": "2046760",
    "end": "2051770"
  },
  {
    "text": "I think that's where something like Serverless,\nsomething where we don't care about the infrastructure",
    "start": "2051770",
    "end": "2056909"
  },
  {
    "text": "underneath is really great. Because maybe something does need to be a\ncomplicated piece of compute, maybe I've lifted",
    "start": "2056910",
    "end": "2062460"
  },
  {
    "text": "and shifted it, maybe I've bought it from\na vendor, maybe it's whatever, something on an EC2 or in a pod. But then this part of the system, we can just\nmodel that as a state machine.",
    "start": "2062460",
    "end": "2071099"
  },
  {
    "text": "So I'm just gonna write it in SAM or whatever,\nand we're just gonna let it hum. And I don't care about any levers on that.",
    "start": "2071100",
    "end": "2076960"
  },
  {
    "text": "Like, you know? There's a lot of power in that. I know we are out of time.",
    "start": "2076960",
    "end": "2082270"
  },
  {
    "start": "2081000",
    "end": "2146000"
  },
  {
    "text": "We are. We need to wrap it up. So, yeah, I'm gonna wrap this up. You might get one last pitch in first for...",
    "start": "2082270",
    "end": "2088878"
  },
  {
    "text": "Fantastic. Elixir and DSL. We are live from Amsterdam, Matt Turner. Eric Johnson.",
    "start": "2088879",
    "end": "2094009"
  },
  {
    "text": "And Eric Johnson Johnson. The Johnson-Turner hour. And Turner after Johnson hour.",
    "start": "2094009",
    "end": "2101190"
  },
  {
    "text": "And so, no, enjoy the time. I hope you enjoyed this. I hope you get some stuff out of this.",
    "start": "2101190",
    "end": "2107540"
  },
  {
    "text": "And anything you want to say before we go? No, it's been fun. That's the great thing about being unscripted,\nisn't it?",
    "start": "2107540",
    "end": "2113300"
  },
  {
    "text": "We just sit down, we see what we chat about. We've kept it pretty civil. We've agreed on most things.",
    "start": "2113300",
    "end": "2118870"
  },
  {
    "text": "No, I've fairly enjoyed the talk. No, it's been fun. It's been a lot of fun. Great pleasure to speak with you, Eric Johnson.",
    "start": "2118870",
    "end": "2126430"
  },
  {
    "text": "You bet. Enjoy the rest of the conference. And we'll see you later. See you around.",
    "start": "2126430",
    "end": "2130099"
  }
]