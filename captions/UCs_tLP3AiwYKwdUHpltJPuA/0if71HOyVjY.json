[
  {
    "text": "[Music]",
    "start": "3510",
    "end": "7529"
  },
  {
    "text": "thank you so I am indeed Russells and I want to talk to you about functional",
    "start": "14809",
    "end": "20310"
  },
  {
    "text": "programming this morning just briefly about me I am kind of a programming",
    "start": "20310",
    "end": "25320"
  },
  {
    "text": "language geek I have been learning programming languages and occasionally writing books about them for most of my",
    "start": "25320",
    "end": "31529"
  },
  {
    "text": "career and lately I've been doing functional programming so a couple of",
    "start": "31529",
    "end": "38280"
  },
  {
    "text": "things about this talk before I really get started it's you might be thanking functional programming in 40 minutes how",
    "start": "38280",
    "end": "45360"
  },
  {
    "text": "is he going to cover functional programming in 40 minutes and I'm thinking what am I gonna do with",
    "start": "45360",
    "end": "50910"
  },
  {
    "text": "the last 10 minutes because I I think the whole theme of this talk is that functional programming has been",
    "start": "50910",
    "end": "57180"
  },
  {
    "text": "mystified and people get very excited about new technologies or technologies",
    "start": "57180",
    "end": "63059"
  },
  {
    "text": "that are new themselves and they start talking about them in big expansive terms about how it's gonna change",
    "start": "63059",
    "end": "68850"
  },
  {
    "text": "everything and in fact functional programming",
    "start": "68850",
    "end": "74580"
  },
  {
    "text": "really is a fundamentally simple idea and that's what I'm going to try and get across this morning I do want to warn",
    "start": "74580",
    "end": "82619"
  },
  {
    "text": "you that I'm a closure programmer so my flavour of functional programming is with closure so necessarily my point of",
    "start": "82619",
    "end": "91050"
  },
  {
    "text": "view and what I'm gonna tell you is going to have sort of a closure spin to it I'm going to try to point out in",
    "start": "91050",
    "end": "98160"
  },
  {
    "text": "places where this is the way closure does it and other programming languages do it differently but keep in mind that",
    "start": "98160",
    "end": "105270"
  },
  {
    "text": "I'm kind of a closure programmer so I",
    "start": "105270",
    "end": "110550"
  },
  {
    "text": "really want to cover three things this morning and really one main thing and",
    "start": "110550",
    "end": "116009"
  },
  {
    "text": "the main thing is what is functional programming where did it come from like what's the ideas behind functional",
    "start": "116009",
    "end": "123509"
  },
  {
    "text": "programming how did we come to them and that's most of what I'm going to talk about this morning and then from there",
    "start": "123509",
    "end": "130020"
  },
  {
    "text": "I'm going to move on to what's it like to be a functional programmer what's it like to actually do it and in particular",
    "start": "130020",
    "end": "135390"
  },
  {
    "text": "what's it like to do it as a beginner I may be from the object-oriented",
    "start": "135390",
    "end": "141840"
  },
  {
    "text": "tradition and I start programming in a functional style what's that light that transition",
    "start": "141840",
    "end": "148660"
  },
  {
    "text": "like and then finally I'm going to try and answer the question which is maybe a little subjective which is does it work",
    "start": "148660",
    "end": "154440"
  },
  {
    "text": "can you can you make it work and again I'm sort of a practical software",
    "start": "154440",
    "end": "161500"
  },
  {
    "text": "engineer I write applications for my day job and so this is going to be a sort of",
    "start": "161500",
    "end": "166810"
  },
  {
    "text": "functional programming for you no ordinary programmers who want to write",
    "start": "166810",
    "end": "172630"
  },
  {
    "text": "applications and libraries so let's start with what it is and there is so",
    "start": "172630",
    "end": "180910"
  },
  {
    "text": "when I was first getting involved in functional programming you know you google functional programming how do I",
    "start": "180910",
    "end": "186040"
  },
  {
    "text": "learn functional programming and there was one thing that I saw over and over",
    "start": "186040",
    "end": "191349"
  },
  {
    "text": "and over and it is functional programming forget everything you know",
    "start": "191349",
    "end": "196780"
  },
  {
    "text": "about programming or even worse functional programming forget everything",
    "start": "196780",
    "end": "202900"
  },
  {
    "text": "you think you know about programming yeah I think software developers",
    "start": "202900",
    "end": "211180"
  },
  {
    "text": "programmers here it turns out we know quite a lot about programming what do we",
    "start": "211180",
    "end": "217060"
  },
  {
    "text": "know about programming we know about things like programs are full of names and you assign values to those names",
    "start": "217060",
    "end": "224079"
  },
  {
    "text": "programs are full of conditional logic they're full of iteration they're full of procedures and",
    "start": "224079",
    "end": "229959"
  },
  {
    "text": "subroutines and things like that there's all sorts of data types that you find in",
    "start": "229959",
    "end": "235600"
  },
  {
    "text": "every programming language strings and boolean x' and numbers one of the things",
    "start": "235600",
    "end": "240790"
  },
  {
    "text": "we know about programming is indentation should we forget about indentation with",
    "start": "240790",
    "end": "246519"
  },
  {
    "text": "functional I don't think so we have namespaces because you need to",
    "start": "246519",
    "end": "251920"
  },
  {
    "text": "segregate those names so that they don't collide we know that there's a raised and hashes or maps another if you're",
    "start": "251920",
    "end": "260620"
  },
  {
    "text": "doing object-oriented programming then you have classes and inheritance and methods and then finally we have",
    "start": "260620",
    "end": "266800"
  },
  {
    "text": "programs right and this is I don't know sort of everything we know about programming if we're doing",
    "start": "266800",
    "end": "272190"
  },
  {
    "text": "object-oriented programming are we going to forget all of this are we gonna forget about in pation really comments no of course not",
    "start": "272190",
    "end": "280990"
  },
  {
    "text": "what we really want to do with functional programming I think of it as more of a refactoring okay and it's more",
    "start": "280990",
    "end": "291159"
  },
  {
    "text": "like I'm gonna take some of the things that I know about programming and hold on to them but I'm gonna refactor my",
    "start": "291159",
    "end": "297520"
  },
  {
    "text": "ideas of how how to do programming so I think of it imagine you're working on",
    "start": "297520",
    "end": "303490"
  },
  {
    "text": "some ordinary application I don't know an accounting application and I apologize the people who actually work",
    "start": "303490",
    "end": "310449"
  },
  {
    "text": "on accounting applications I think of those as sort of the dull applications but some application and maybe your",
    "start": "310449",
    "end": "317169"
  },
  {
    "text": "application it has a design there's a series of modules or services and they",
    "start": "317169",
    "end": "323979"
  },
  {
    "text": "all go together reasonably well and it's not perfect but it works and it's okay",
    "start": "323979",
    "end": "330310"
  },
  {
    "text": "you have a pretty good design but time goes by and requirements change and you",
    "start": "330310",
    "end": "335860"
  },
  {
    "text": "start fixing bugs and maybe you add a new module rearrange things a little bit",
    "start": "335860",
    "end": "340870"
  },
  {
    "text": "maybe you add another one maybe you get rid of a couple because you don't need them anymore and then maybe you start",
    "start": "340870",
    "end": "347110"
  },
  {
    "text": "adding dependencies that weren't there before right this is what happens in ordinary systems as they go through",
    "start": "347110",
    "end": "354159"
  },
  {
    "text": "their life and after a while you start to develop what we technically call a",
    "start": "354159",
    "end": "361810"
  },
  {
    "text": "mess right it gets to the point where it works but it works but it's hard to",
    "start": "361810",
    "end": "369370"
  },
  {
    "text": "explain it works but the next bug that you have to fix is really a lot harder",
    "start": "369370",
    "end": "375819"
  },
  {
    "text": "to fix them and then it should be and you spend a lot of time you know you're in this situation when somebody says how",
    "start": "375819",
    "end": "384219"
  },
  {
    "text": "does this thing work and you say well it works this way except when this happens except when you",
    "start": "384219",
    "end": "391719"
  },
  {
    "text": "have this except on Tuesdays when it's raining you know we've all been there",
    "start": "391719",
    "end": "396939"
  },
  {
    "text": "right the thing is just it works and maybe the users or the customers they like it but it's it's just getting hard",
    "start": "396939",
    "end": "404889"
  },
  {
    "text": "and messy and so what do you do in those situations I've got my",
    "start": "404889",
    "end": "410330"
  },
  {
    "text": "counting system and it's just kind of become a mess well if you're lucky your boss or maybe you whoever is making up",
    "start": "410330",
    "end": "417889"
  },
  {
    "text": "their mind you sit down and you say I'm starting with a clean sheet of paper I'm starting with the completely clean sheet",
    "start": "417889",
    "end": "425180"
  },
  {
    "text": "of paper like it's the funny thing about clean sheet of paper we're gonna redesign the system there's clean sheet",
    "start": "425180",
    "end": "430490"
  },
  {
    "text": "of paper what's the first thing you do when you redesign something from a clean sheet of paper funny thing is you pull",
    "start": "430490",
    "end": "438379"
  },
  {
    "text": "in all the pieces that already work right nobody you like rewrite something from the ground up every single line",
    "start": "438379",
    "end": "445120"
  },
  {
    "text": "frequently when you're rewriting a system refactoring redesigning it what",
    "start": "445120",
    "end": "450830"
  },
  {
    "text": "you do is you pull in all the pieces you say oh this piece works fine it's just sort of out of sync with everything this",
    "start": "450830",
    "end": "457099"
  },
  {
    "text": "other piece works fine maybe I'm gonna change them a little bit but there's",
    "start": "457099",
    "end": "462710"
  },
  {
    "text": "pieces that work okay there's a pieces you throw away certainly but there's pieces that you keep so then you you",
    "start": "462710",
    "end": "469639"
  },
  {
    "text": "have all these pieces that work and what you say is the reason my design is not working is because the pieces I don't",
    "start": "469639",
    "end": "476810"
  },
  {
    "text": "have like an overriding idea of how they all go together I need a paradigm to",
    "start": "476810",
    "end": "482750"
  },
  {
    "text": "pull this system together so a redesign is mostly or a refactor is mostly let me",
    "start": "482750",
    "end": "488919"
  },
  {
    "text": "reorganize the pieces that I have maybe add some new ones in eighth with a new",
    "start": "488919",
    "end": "494870"
  },
  {
    "text": "paradigm so maybe in our accounting system we have a message bus so we pull",
    "start": "494870",
    "end": "501979"
  },
  {
    "text": "all of our pieces together but we have this new organizing idea it's a message",
    "start": "501979",
    "end": "506990"
  },
  {
    "text": "bus all right well what about programming is programming and by",
    "start": "506990",
    "end": "512959"
  },
  {
    "text": "programming I mean sort of the traditional kind of mainstream object-oriented programming is that",
    "start": "512959",
    "end": "519709"
  },
  {
    "text": "getting messy does that need refactoring I think maybe it does and so you remember I said oh it works",
    "start": "519709",
    "end": "526760"
  },
  {
    "text": "this way except on Tuesdays Thursdays and Saturdays right that's one of the signs well this is from the Java",
    "start": "526760",
    "end": "534560"
  },
  {
    "text": "tutorial during type of racers process first bound if the type parameter is",
    "start": "534560",
    "end": "539990"
  },
  {
    "text": "bound or object as the type parameter is unbounded right it has that feeling of sort of ad hoc",
    "start": "539990",
    "end": "546089"
  },
  {
    "text": "Ness that you know it's the Tuesdays Thursdays and Saturdays thing and I",
    "start": "546089",
    "end": "551310"
  },
  {
    "text": "don't mean to pick on Java right I think it's this has kind of been a sign that",
    "start": "551310",
    "end": "557339"
  },
  {
    "text": "maybe the object-oriented thing has gotten to the point where it's not really working for us anymore one thing",
    "start": "557339",
    "end": "563190"
  },
  {
    "text": "I am sure of is that if they ever build the monument to programmers the software",
    "start": "563190",
    "end": "569339"
  },
  {
    "text": "development may be a giant statue of a keyboard or something there'll be a plaque at the bottom one thing I am",
    "start": "569339",
    "end": "575759"
  },
  {
    "text": "absolutely sure of is those words will not be on the plaque right now but it's",
    "start": "575759",
    "end": "583920"
  },
  {
    "text": "not just Java I quite like Ruby and here is a description of Hell protected methods work in Ruby but the receiver is",
    "start": "583920",
    "end": "592319"
  },
  {
    "text": "always self it's the finding class or an object that it it it's sort of complicated but for the ultimate in this",
    "start": "592319",
    "end": "599579"
  },
  {
    "text": "sort of thing you just look the C++ which is just kind of full of convoluted",
    "start": "599579",
    "end": "604610"
  },
  {
    "text": "rules like this okay so maybe our object-oriented approach to life to",
    "start": "604610",
    "end": "612389"
  },
  {
    "text": "programming has gotten a little messy maybe we need to do something else maybe",
    "start": "612389",
    "end": "618899"
  },
  {
    "text": "we need to start with a clean sheet of paper and if I have any sympathy for the",
    "start": "618899",
    "end": "624000"
  },
  {
    "text": "forget everything you know about programming it's starting with this clean sheet of paper except except the",
    "start": "624000",
    "end": "632310"
  },
  {
    "text": "first thing we do with clean sheet of paper is we pull in all the stuff that works right the idea of a program or a",
    "start": "632310",
    "end": "639449"
  },
  {
    "text": "service works we can keep that namespaces work or raise work now maybe",
    "start": "639449",
    "end": "645089"
  },
  {
    "text": "we're gonna change these things a little bit as we go but all of the stuff works we are not going to throw away the idea",
    "start": "645089",
    "end": "651389"
  },
  {
    "text": "of a string right in functional programming you don't have to forget everything all right so like our",
    "start": "651389",
    "end": "659040"
  },
  {
    "text": "accounting system what we're looking for is a new organizing principle we need a",
    "start": "659040",
    "end": "664560"
  },
  {
    "text": "new paradigm for pulling all the stuff that works into a whole into a",
    "start": "664560",
    "end": "669569"
  },
  {
    "text": "functional whole so where can we find a a new paradigm",
    "start": "669569",
    "end": "677220"
  },
  {
    "text": "well it turns out there's another group of people there's another bunch of people who were doing work very similar",
    "start": "677220",
    "end": "684330"
  },
  {
    "text": "to the work that we're doing the mathematicians now it's no it wouldn't be any surprise if I told you right that",
    "start": "684330",
    "end": "691050"
  },
  {
    "text": "there's a huge overlap between computer science and math I think computer science probably is a sub branch of",
    "start": "691050",
    "end": "696390"
  },
  {
    "text": "mathematics but I think what we is working software developers don't really",
    "start": "696390",
    "end": "702150"
  },
  {
    "text": "appreciate is that mathematicians you know the people who do the really serious stuff they have the same kind of",
    "start": "702150",
    "end": "710880"
  },
  {
    "text": "problems that we have in terms of so if you ever like design the system and you",
    "start": "710880",
    "end": "718410"
  },
  {
    "text": "say oh I'm gonna have this abstraction and and that's gonna be a part of my system and I'm gonna have this other one",
    "start": "718410",
    "end": "723930"
  },
  {
    "text": "and I'm working to a point where I want to have my system do something and then you've got five or seven abstractions",
    "start": "723930",
    "end": "731130"
  },
  {
    "text": "and you're trying to keep them all in your head you're making notes and writing all over the whiteboard trying",
    "start": "731130",
    "end": "736140"
  },
  {
    "text": "to hold all of those abstractions together till you get to the point where where you've done something where it's",
    "start": "736140",
    "end": "742320"
  },
  {
    "text": "functional well mathematicians do very much the same thing at least the",
    "start": "742320",
    "end": "748650"
  },
  {
    "text": "abstract ones this is the cover of a book called principia mathematica it was published in the early 1900s by two",
    "start": "748650",
    "end": "755900"
  },
  {
    "text": "British guys and what they were trying to do is derive all of mathematics from",
    "start": "755900",
    "end": "762120"
  },
  {
    "text": "very simple principles right and let me tell you this is serious stuff let me",
    "start": "762120",
    "end": "770700"
  },
  {
    "text": "also say I have never read this book so don't I don't pretend but it is just",
    "start": "770700",
    "end": "777330"
  },
  {
    "text": "page after page after page of the most ridiculous abstractions you can imagine",
    "start": "777330",
    "end": "783540"
  },
  {
    "text": "until you get to this page and on this page in the middle of this page they",
    "start": "783540",
    "end": "789450"
  },
  {
    "text": "prove something really interesting one plus one equals two",
    "start": "789450",
    "end": "794990"
  },
  {
    "text": "now you think your life is hard pity the mathematicians",
    "start": "794990",
    "end": "800100"
  },
  {
    "text": "because the significant part there's two significant things on this page one plus one equals two and the page number look",
    "start": "800100",
    "end": "808470"
  },
  {
    "text": "at the page number it's three 179 it took them 379 pages the proof",
    "start": "808470",
    "end": "815339"
  },
  {
    "text": "that one plus one equals two mathematicians have the same kind of problems they've got these abstractions",
    "start": "815339",
    "end": "821399"
  },
  {
    "text": "that they are trying to drive towards some goals some something in this case",
    "start": "821399",
    "end": "827970"
  },
  {
    "text": "one plus one equals two all right is there something we can borrow from the",
    "start": "827970",
    "end": "832980"
  },
  {
    "text": "mathematicians that will help us do they",
    "start": "832980",
    "end": "838799"
  },
  {
    "text": "have some organizing principle that will that helps them do their work that maybe we can steal and the answer is yes they",
    "start": "838799",
    "end": "846389"
  },
  {
    "text": "have functions and you say well we have functions subroutines procedures methods",
    "start": "846389",
    "end": "853079"
  },
  {
    "text": "it's not the same thing a mathematical function is a relationship between two",
    "start": "853079",
    "end": "859439"
  },
  {
    "text": "sets okay there's like the input set and the output set and it's a it's a mapping",
    "start": "859439",
    "end": "866339"
  },
  {
    "text": "from one to the other okay there's no time involved it's not like you mathematicians in principle compute",
    "start": "866339",
    "end": "873600"
  },
  {
    "text": "a function really it just is right this is very abstract stuff so this might be",
    "start": "873600",
    "end": "879419"
  },
  {
    "text": "the function for like double the number one goes the two four goes to eight that kind of thing now these things are",
    "start": "879419",
    "end": "888029"
  },
  {
    "text": "different the mathematical idea of a function is different than our idea of a",
    "start": "888029",
    "end": "893069"
  },
  {
    "text": "method of procedure a subroutine or a function those things that we have because our things are code there are a",
    "start": "893069",
    "end": "900899"
  },
  {
    "text": "mechanism and in principle our subroutines procedures functions can",
    "start": "900899",
    "end": "907309"
  },
  {
    "text": "delete a file they can update a database they can compute some result from the",
    "start": "907309",
    "end": "914459"
  },
  {
    "text": "from the input they can change the input they can compute nothing return nothing",
    "start": "914459",
    "end": "919889"
  },
  {
    "text": "right we can do anything we want we it's just some code and it's not quite the same thing as a mathematical function",
    "start": "919889",
    "end": "926429"
  },
  {
    "text": "mathematical function it's always the same for any given input it always gives",
    "start": "926429",
    "end": "932549"
  },
  {
    "text": "you the same output it's not like five can give you a 42 on Tuesdays Thursdays and Saturdays and other time no it's",
    "start": "932549",
    "end": "939929"
  },
  {
    "text": "that would be a different function and in particular they don't change or time mathematical functions they you",
    "start": "939929",
    "end": "946740"
  },
  {
    "text": "know it's summer rain spring it doesn't matter they're always all the same",
    "start": "946740",
    "end": "952340"
  },
  {
    "text": "mathematical functions are also a thing right they're values that you can",
    "start": "952340",
    "end": "957360"
  },
  {
    "text": "manipulate and if this were ten or fifteen years ago I might go into a long talk about first-class functions",
    "start": "957360",
    "end": "966150"
  },
  {
    "text": "I think first-class functions are kind of seeped into all of the major languages right a function is a thing",
    "start": "966150",
    "end": "972210"
  },
  {
    "text": "you can make or really a procedure a subroutine a you know our computer e things are also things that you can make",
    "start": "972210",
    "end": "978930"
  },
  {
    "text": "their values that you can pass around first-class functions in a programming",
    "start": "978930",
    "end": "984090"
  },
  {
    "text": "language all right so what if we wanted to borrow this idea of a function from",
    "start": "984090",
    "end": "990780"
  },
  {
    "text": "the mathematicians well really we can't like really borrow it because there's is completely abstract but we can have a",
    "start": "990780",
    "end": "998040"
  },
  {
    "text": "bunch of rules on our functions that that make our functions act something",
    "start": "998040",
    "end": "1004250"
  },
  {
    "text": "like the mathematical functions people call functions that behave according to",
    "start": "1004250",
    "end": "1010100"
  },
  {
    "text": "these rules pure functions it's not a term I really like because it's sort of like good bad you know and these are",
    "start": "1010100",
    "end": "1016970"
  },
  {
    "text": "just this is an engineering decision so what if we we just made these completely",
    "start": "1016970",
    "end": "1022670"
  },
  {
    "text": "arbitrary rules and apply them to our programming things and the rule the main",
    "start": "1022670",
    "end": "1028819"
  },
  {
    "text": "rule is that you only look at your input you only look at the parameters and you only produce output you only produce the",
    "start": "1028820",
    "end": "1036589"
  },
  {
    "text": "result okay so what does that mean that means no changing anything no side",
    "start": "1036589",
    "end": "1041870"
  },
  {
    "text": "effects no going in and changing the fourth element of your array if if",
    "start": "1041870",
    "end": "1048439"
  },
  {
    "text": "there's a array parameter it means no deleting the file updating the database",
    "start": "1048440",
    "end": "1054110"
  },
  {
    "text": "none of that you just look at the parameters and transform them into some output all right we're doing this in the",
    "start": "1054110",
    "end": "1062780"
  },
  {
    "text": "hope that it will make our programs easier to write easier to understand and",
    "start": "1062780",
    "end": "1068360"
  },
  {
    "text": "that is the only reason we're doing it's not a good bad thing it's just we're",
    "start": "1068360",
    "end": "1074300"
  },
  {
    "text": "doing it in the hope that it will make our programs to understand well would it actually",
    "start": "1074300",
    "end": "1079790"
  },
  {
    "text": "make our programs easier to understand well maybe and here's why let's say we",
    "start": "1079790",
    "end": "1085460"
  },
  {
    "text": "start with the three element array X and we call some function on X and that",
    "start": "1085460",
    "end": "1091340"
  },
  {
    "text": "function is a function that a Bay's these rules so we produce some output Y",
    "start": "1091340",
    "end": "1096950"
  },
  {
    "text": "from that function now the question is what's X at the end of this it's the",
    "start": "1096950",
    "end": "1103820"
  },
  {
    "text": "same thing we those are the rules okay so now what if instead of just",
    "start": "1103820",
    "end": "1112820"
  },
  {
    "text": "calling one function we call some incredibly complicated combination of",
    "start": "1112820",
    "end": "1117830"
  },
  {
    "text": "functions on X right just just an absurdly complicated sequence of",
    "start": "1117830",
    "end": "1123680"
  },
  {
    "text": "functions to compute Y what's X it's the same thing all right you can see how",
    "start": "1123680",
    "end": "1130550"
  },
  {
    "text": "these rules might actually help you make sense of your programs right i I had",
    "start": "1130550",
    "end": "1136580"
  },
  {
    "text": "this thing I call a bunch of functions I still have the same thing I don't have to look through 25 pages of code trying",
    "start": "1136580",
    "end": "1144980"
  },
  {
    "text": "to figure out if some of they stuck something in the middle of X or something alright so here's what we're",
    "start": "1144980",
    "end": "1151340"
  },
  {
    "text": "gonna do we started with our clean sheet of paper and we pulled in all of the pieces of our current programming",
    "start": "1151340",
    "end": "1157820"
  },
  {
    "text": "language that we thought might work for us that we thought are working right now and now we're gonna pull in these",
    "start": "1157820",
    "end": "1163940"
  },
  {
    "text": "special rules for functions okay and we're gonna see where that gets us",
    "start": "1163940",
    "end": "1169190"
  },
  {
    "text": "alright so we think about that for a while and then we have a problem and the",
    "start": "1169190",
    "end": "1174770"
  },
  {
    "text": "problem is that in most programming languages data structures like arrays and hashes or maps and lists and things",
    "start": "1174770",
    "end": "1181970"
  },
  {
    "text": "like that they're mutable so if you had a little three element array anytime you felt like it you could look at that",
    "start": "1181970",
    "end": "1188540"
  },
  {
    "text": "middle element and jam some other value in it you can mutate your array alright",
    "start": "1188540",
    "end": "1194150"
  },
  {
    "text": "that's a problem because if we go back to our example and we have that",
    "start": "1194150",
    "end": "1199460"
  },
  {
    "text": "incredibly complicated functional expression there in the middle and we changed it a little bit so that we just",
    "start": "1199460",
    "end": "1206270"
  },
  {
    "text": "jam a new value in X now we are right back to head look through all of this code to try and",
    "start": "1206270",
    "end": "1213810"
  },
  {
    "text": "figure out what's what sex and that we've just lost any gains that we",
    "start": "1213810",
    "end": "1219630"
  },
  {
    "text": "thought we might get so I'd like to propose a radical solution to fix this",
    "start": "1219630",
    "end": "1226710"
  },
  {
    "text": "particular problem let's make all of our data structures immutable once you make",
    "start": "1226710",
    "end": "1231870"
  },
  {
    "text": "that array you can't change it once you make that hash your map you can't change",
    "start": "1231870",
    "end": "1236940"
  },
  {
    "text": "it we're just going to make them completely immutable you can see how that fixes the problem right I am now unable to change any of",
    "start": "1236940",
    "end": "1244680"
  },
  {
    "text": "the data in my data structures but it might feel like well how do you get anything done if you can't like mutate",
    "start": "1244680",
    "end": "1251970"
  },
  {
    "text": "anything the answer is really quite simple we provide all of our data structures with an operation which says",
    "start": "1251970",
    "end": "1258360"
  },
  {
    "text": "give me a copy of yourself except that's just like you except a little different",
    "start": "1258360",
    "end": "1264930"
  },
  {
    "text": "so give me a copy of yourself mr. ABC array that's exactly like you but the",
    "start": "1264930",
    "end": "1271320"
  },
  {
    "text": "middle element is Q if it's a hash or a map give me a copy of yourself that has",
    "start": "1271320",
    "end": "1277440"
  },
  {
    "text": "all the keys associated with the same values except for this one which is different or this new one or delete one",
    "start": "1277440",
    "end": "1284810"
  },
  {
    "text": "okay so we do that and now we no longer",
    "start": "1284810",
    "end": "1291300"
  },
  {
    "text": "have to worry about anybody changing or data out from underneath us but now we",
    "start": "1291300",
    "end": "1297060"
  },
  {
    "text": "have another problem and that other problem is copies right and and you",
    "start": "1297060",
    "end": "1303930"
  },
  {
    "text": "could sort of frame it this way what if I have a million element array and I want to change three elements in the",
    "start": "1303930",
    "end": "1311070"
  },
  {
    "text": "middle do I change the first one and make a copy of a million elements and then change the second one and make",
    "start": "1311070",
    "end": "1316830"
  },
  {
    "text": "another copy and after a while I've got three or four million elements of arrays that I've kind of created and things",
    "start": "1316830",
    "end": "1322980"
  },
  {
    "text": "like that turns out no you don't have to do that so there was the problem right",
    "start": "1322980",
    "end": "1328740"
  },
  {
    "text": "am I gonna copy I've got a 27 LM in array here I'm trying to mess with the element in the middle do I have to copy",
    "start": "1328740",
    "end": "1334500"
  },
  {
    "text": "all 27 elements it turns out we can do better than that turns out some very clever people have come up with",
    "start": "1334500",
    "end": "1340970"
  },
  {
    "text": "something called persistent data structures and here persistent doesn't mean save to",
    "start": "1340970",
    "end": "1347320"
  },
  {
    "text": "the database or saved in a file it's just an unfortunate word they picked for something completely different",
    "start": "1347320",
    "end": "1354930"
  },
  {
    "text": "but what persistent data structures are is their versions of all the familiar",
    "start": "1354930",
    "end": "1360400"
  },
  {
    "text": "data structures things like arrays and hashes and lists and trees and all of",
    "start": "1360400",
    "end": "1366460"
  },
  {
    "text": "that there's basically one for all of the familiar data structures and they're there they have two key characteristics",
    "start": "1366460",
    "end": "1373630"
  },
  {
    "text": "one they're immutable and two they support this VIP this copy on modification operation but they do it",
    "start": "1373630",
    "end": "1381400"
  },
  {
    "text": "very efficiently without a lot of copying which seems ironic the way it",
    "start": "1381400",
    "end": "1387430"
  },
  {
    "text": "works is think of that that 27 element array right and what if you implemented",
    "start": "1387430",
    "end": "1394390"
  },
  {
    "text": "that 27 element array all the letters of the English alphabet I guess and the exclamation point what if you",
    "start": "1394390",
    "end": "1400960"
  },
  {
    "text": "implemented it as a sort of tree and each tree node has has sort of three",
    "start": "1400960",
    "end": "1406960"
  },
  {
    "text": "slots so each node has is like a block of three and that block of three if it's",
    "start": "1406960",
    "end": "1412240"
  },
  {
    "text": "an interior node either points at something or if it's a leaf node it actually has the data okay and this is",
    "start": "1412240",
    "end": "1419980"
  },
  {
    "text": "how I this is how I represent my array sort of behind the scenes well if I want",
    "start": "1419980",
    "end": "1425710"
  },
  {
    "text": "to get at the twenty twenty second element I just have to traverse a couple",
    "start": "1425710",
    "end": "1431230"
  },
  {
    "text": "of nodes and I'm there at my twenty second element right but what happens if I want to modify this thing which really",
    "start": "1431230",
    "end": "1438640"
  },
  {
    "text": "means make a modified copy of this thing let's think of how much copying we actually have to do well if we want to",
    "start": "1438640",
    "end": "1446410"
  },
  {
    "text": "modify the middle element there well obviously we'd have to copy that",
    "start": "1446410",
    "end": "1452740"
  },
  {
    "text": "little three node block there we'd have to copy the one that point set it we'd",
    "start": "1452740",
    "end": "1457990"
  },
  {
    "text": "have to copy the one that points it and then we don't have to copy anything else because we can reuse everything else",
    "start": "1457990",
    "end": "1464500"
  },
  {
    "text": "from the old from the original so you get this the the new one and the old one",
    "start": "1464500",
    "end": "1472420"
  },
  {
    "text": "share most of the data particularly as the data gets bigger and bigger and bigger",
    "start": "1472420",
    "end": "1477910"
  },
  {
    "text": "which is exactly what you want now you might be thinking but what if that data in the in the old one changed this out",
    "start": "1477910",
    "end": "1483490"
  },
  {
    "text": "from underneath me it's all immutable so you see how this all sort of hangs",
    "start": "1483490",
    "end": "1488620"
  },
  {
    "text": "together all right so that's that I think solves our problem of immutability",
    "start": "1488620",
    "end": "1499450"
  },
  {
    "text": "and principle now I'm showing this as three elements but in real in that's",
    "start": "1499450",
    "end": "1505270"
  },
  {
    "text": "just to get it on the slide in real life people tend to use more like a branching factor of 32 so all of the nodes are 32",
    "start": "1505270",
    "end": "1513520"
  },
  {
    "text": "wide and if you do the math it turns out that a three element tree like this with",
    "start": "1513520",
    "end": "1518950"
  },
  {
    "text": "32 wide nodes you can you can support more than a million elements so it's",
    "start": "1518950",
    "end": "1525670"
  },
  {
    "text": "really pretty efficient if you if you put your mind to it all right so here's",
    "start": "1525670",
    "end": "1530980"
  },
  {
    "text": "my hokey icon it's a lock for immutable data structures so we've now got",
    "start": "1530980",
    "end": "1536580"
  },
  {
    "text": "everything that we borrowed from our original language we've got these",
    "start": "1536580",
    "end": "1542400"
  },
  {
    "text": "mathematical like pure functions and we've got immutable data structures all",
    "start": "1542400",
    "end": "1548740"
  },
  {
    "text": "right and we've now built this lovely functional world we've built this lovely",
    "start": "1548740",
    "end": "1553990"
  },
  {
    "text": "functional world where there are no side effects and the programs are easy to think about because you never have to",
    "start": "1553990",
    "end": "1559750"
  },
  {
    "text": "like dig in to see who the heck is changing my array and now we have",
    "start": "1559750",
    "end": "1564790"
  },
  {
    "text": "another problem and that other problem has to do with those side effects we got",
    "start": "1564790",
    "end": "1569800"
  },
  {
    "text": "rid of you see if people still use two",
    "start": "1569800",
    "end": "1575680"
  },
  {
    "text": "business cards I would print business cards and I'd have my name on it and I",
    "start": "1575680",
    "end": "1582070"
  },
  {
    "text": "and the only thing the business card would say is side effects if you think about what a side effect is like writing",
    "start": "1582070",
    "end": "1589150"
  },
  {
    "text": "a file or deleting a file or updating a database or hitting some service side",
    "start": "1589150",
    "end": "1595750"
  },
  {
    "text": "effects are what we get paid to do all of the things that our customers care",
    "start": "1595750",
    "end": "1602290"
  },
  {
    "text": "about our side effects our customer does not care about our code right we care",
    "start": "1602290",
    "end": "1608200"
  },
  {
    "text": "about the code we want the code to be easy to understand fundamentally the the person",
    "start": "1608200",
    "end": "1616370"
  },
  {
    "text": "behind that accounting system the banker or whoever does not care at all about",
    "start": "1616370",
    "end": "1621769"
  },
  {
    "text": "the accounting system they care that the database is updated that the reports are generated that the files are created",
    "start": "1621769",
    "end": "1628370"
  },
  {
    "text": "that the services are hit right we are we are all in the side effects business",
    "start": "1628370",
    "end": "1634309"
  },
  {
    "text": "right and in fact our customers don't think of them the side effects they think of them as the desired effect and",
    "start": "1634309",
    "end": "1640039"
  },
  {
    "text": "what we've just done is we've built this beautiful lovely functional environment",
    "start": "1640039",
    "end": "1646029"
  },
  {
    "text": "that can't do anything right which seems to be a little bit of a problem so what",
    "start": "1646029",
    "end": "1652009"
  },
  {
    "text": "we need is a bridge from our beautiful lovely functional code into the real",
    "start": "1652009",
    "end": "1658820"
  },
  {
    "text": "messy world of side-effects right we want our programs to be able to do stuff so how do we do that well here here is",
    "start": "1658820",
    "end": "1666980"
  },
  {
    "text": "the point where I have to sort of take off my functional hat and put on my closure hat because all programming all",
    "start": "1666980",
    "end": "1673370"
  },
  {
    "text": "functional programming languages sort of approach this problem differently but in general they're kind of the same but",
    "start": "1673370",
    "end": "1680269"
  },
  {
    "text": "here here's some of the closure solutions to the bridge to be outside",
    "start": "1680269",
    "end": "1685460"
  },
  {
    "text": "messy world one problem in the outside messy world is how do i implement",
    "start": "1685460",
    "end": "1693789"
  },
  {
    "text": "mutable state within my program okay think of like the classic hit counter in",
    "start": "1693789",
    "end": "1700399"
  },
  {
    "text": "a web application congratulations you're the 57th visitor to this web application",
    "start": "1700399",
    "end": "1705500"
  },
  {
    "text": "if you think through the functional world that I just described you can't do that there's no mutable state there's",
    "start": "1705500",
    "end": "1712279"
  },
  {
    "text": "nothing that can change so what we need is some way to represent mutable state",
    "start": "1712279",
    "end": "1717620"
  },
  {
    "text": "what closure does this through something called atoms and an atom is the closest",
    "start": "1717620",
    "end": "1722870"
  },
  {
    "text": "thing the closure has to a variable it's a container for some mutable state",
    "start": "1722870",
    "end": "1729440"
  },
  {
    "text": "that's what an atom is well that sounds like a variable what's the difference the difference is that what is the way",
    "start": "1729440",
    "end": "1736970"
  },
  {
    "text": "you update an atom because an atom is a bridge between the lovely functional we're all",
    "start": "1736970",
    "end": "1742279"
  },
  {
    "text": "that we've built in the messy outside world that people pay us to to mutate",
    "start": "1742279",
    "end": "1748639"
  },
  {
    "text": "and affect and what the way you update an atom is you throw a function at it",
    "start": "1748639",
    "end": "1753950"
  },
  {
    "text": "okay so if that's a hit counter you would throw a function at the atom that",
    "start": "1753950",
    "end": "1759289"
  },
  {
    "text": "knows how to increment a number and what the atom does is you throw a function at it the atom takes that function gets the",
    "start": "1759289",
    "end": "1767359"
  },
  {
    "text": "current value of the atom sense that into the function gets the result that",
    "start": "1767359",
    "end": "1773330"
  },
  {
    "text": "comes out of the function so it evaluates the function and the value that comes out of the function becomes",
    "start": "1773330",
    "end": "1778460"
  },
  {
    "text": "the new value of the atom all right it's a bridge between the nice clean",
    "start": "1778460",
    "end": "1783710"
  },
  {
    "text": "functional world on the one side and the messy stateful world of the real life on",
    "start": "1783710",
    "end": "1789830"
  },
  {
    "text": "the other side now to get a real feeling for like the power of this kind of",
    "start": "1789830",
    "end": "1795139"
  },
  {
    "text": "approach let's think about what happens if you have to you're trying to update",
    "start": "1795139",
    "end": "1801049"
  },
  {
    "text": "this atom on two different threads and that and the updates come in at the same",
    "start": "1801049",
    "end": "1806719"
  },
  {
    "text": "time right this is the classic oh jeez I don't want to lose an update kind of",
    "start": "1806719",
    "end": "1811729"
  },
  {
    "text": "problem that anyone who's ever messed with threads is familiar with well what",
    "start": "1811729",
    "end": "1817279"
  },
  {
    "text": "what atoms do is you know both of the functions will come in they'll both see the same value of the atom 59 and you",
    "start": "1817279",
    "end": "1825229"
  },
  {
    "text": "know this is where the trouble is lurking because we don't want to lose an update they will both calculate 60 as",
    "start": "1825229",
    "end": "1831379"
  },
  {
    "text": "the new value of the atom but one of those functions will get there get in a little faster and change the value to 60",
    "start": "1831379",
    "end": "1838639"
  },
  {
    "text": "and what will happen at that point is the atom will notice that when the",
    "start": "1838639",
    "end": "1844159"
  },
  {
    "text": "second function comes in and tries to update the atom it will notice that the value changed out from underneath it and",
    "start": "1844159",
    "end": "1850489"
  },
  {
    "text": "what does it do it just runs the function again this is sort of collision detection and you know rerunning so it's",
    "start": "1850489",
    "end": "1858679"
  },
  {
    "text": "it's similar to what a database does with transactions now you might be thinking oh is it okay to run that",
    "start": "1858679",
    "end": "1865070"
  },
  {
    "text": "function a second time what about side effects guess what there are no side",
    "start": "1865070",
    "end": "1870619"
  },
  {
    "text": "effects allowed the only side effect is updating the atom and that's what we're controlling",
    "start": "1870619",
    "end": "1875809"
  },
  {
    "text": "so atoms are a lovely bridge between the clean functional world that we're",
    "start": "1875809",
    "end": "1882769"
  },
  {
    "text": "building and the messy outside world and are the things that closure uses to",
    "start": "1882769",
    "end": "1888049"
  },
  {
    "text": "maintain program state okay there's another stateful problem which is how do",
    "start": "1888049",
    "end": "1895460"
  },
  {
    "text": "I update the database delete the file write the file hit the webservice the sort of I need to do something to the",
    "start": "1895460",
    "end": "1901969"
  },
  {
    "text": "outside world and there's a bunch of different solutions to this including a bunch inside of closure but most of them",
    "start": "1901969",
    "end": "1909469"
  },
  {
    "text": "all rely on some kind of cue and you put requests of one kind or another",
    "start": "1909469",
    "end": "1915710"
  },
  {
    "text": "on the queue and then there is some nasty stateful side-effect decode",
    "start": "1915710",
    "end": "1921559"
  },
  {
    "text": "connected to the queue which is pulling things off the queue and doing things with it so you put a request hey update",
    "start": "1921559",
    "end": "1928940"
  },
  {
    "text": "the database and somewhere on the other side of the queue is some messy code that is pulling that request off and",
    "start": "1928940",
    "end": "1936109"
  },
  {
    "text": "doing something side-effect e right the reason you have the queue there is then",
    "start": "1936109",
    "end": "1942440"
  },
  {
    "text": "you can sequence there's a clear sequence of what of these operations so",
    "start": "1942440",
    "end": "1948889"
  },
  {
    "text": "that things that sort of happen all at the same time close your agents which is",
    "start": "1948889",
    "end": "1954679"
  },
  {
    "text": "one form of this thing have the same kind of bridge to the functional world",
    "start": "1954679",
    "end": "1960320"
  },
  {
    "text": "that atoms do in that what you throw at the at the agent is not data but you",
    "start": "1960320",
    "end": "1966499"
  },
  {
    "text": "throw a function at it and the function gets executed in sequence and it's the",
    "start": "1966499",
    "end": "1971869"
  },
  {
    "text": "thing that does the nasty stateful write the file delete the file whatever all",
    "start": "1971869",
    "end": "1978019"
  },
  {
    "text": "right so here is our functional world right we have all the things we pulled",
    "start": "1978019",
    "end": "1984589"
  },
  {
    "text": "in from our old programming style arrays and namespaces and things like that we",
    "start": "1984589",
    "end": "1991999"
  },
  {
    "text": "have these pure mathematical style functions we have immutable data structures and we have the bridge to be",
    "start": "1991999",
    "end": "1999229"
  },
  {
    "text": "outside nasty stateful world alright and that's as far as I'm concerned that is",
    "start": "1999229",
    "end": "2005320"
  },
  {
    "text": "what functional programming is that is functional programming in the not you don't have to forget everything you",
    "start": "2005320",
    "end": "2010630"
  },
  {
    "text": "know about programming so what's it like to program in a functional style and in",
    "start": "2010630",
    "end": "2017110"
  },
  {
    "text": "particular what's it like the program and a functional style if you're new at it yeah no there is no magic here okay I",
    "start": "2017110",
    "end": "2030340"
  },
  {
    "text": "think it's a better way to write programs but there's no magic none okay",
    "start": "2030340",
    "end": "2035799"
  },
  {
    "text": "you still have off-by-one errors like this is a new slide I put the slide in day before yesterday because the day",
    "start": "2035799",
    "end": "2042280"
  },
  {
    "text": "before that guess what I spent half a day finding it and off by one problem",
    "start": "2042280",
    "end": "2047409"
  },
  {
    "text": "you still have those kinds of things you can still have redundant code we can be",
    "start": "2047409",
    "end": "2052419"
  },
  {
    "text": "working on something together and you go down the hall and sit down and write",
    "start": "2052419",
    "end": "2057790"
  },
  {
    "text": "some stuff and I sit down and write some stuff and then at the end of the day we realize oh we just solved the same",
    "start": "2057790",
    "end": "2064330"
  },
  {
    "text": "problem functional programming and not gonna help you with that maybe it'll help you talk about it and figure it out",
    "start": "2064330",
    "end": "2069760"
  },
  {
    "text": "quicker but those kinds of things are still gonna happen you can still write bad code right I have as many",
    "start": "2069760",
    "end": "2076210"
  },
  {
    "text": "conversations you know that conversation you have right oh you're going along you're you're you're in the system and",
    "start": "2076210",
    "end": "2083020"
  },
  {
    "text": "you find something and you're like it's this as bad as I think it is and you go to your colleague and they're like yep",
    "start": "2083020",
    "end": "2088690"
  },
  {
    "text": "yep that is as bad as you think it you still have that the database is still",
    "start": "2088690",
    "end": "2094540"
  },
  {
    "text": "down right in the database always down one bit of magic that you do have is",
    "start": "2094540",
    "end": "2100510"
  },
  {
    "text": "with threads one bit of magic that functional programming gives you is with",
    "start": "2100510",
    "end": "2105850"
  },
  {
    "text": "threads functions take their input operate on it and give you output right",
    "start": "2105850",
    "end": "2112450"
  },
  {
    "text": "it it reduces the amount of state but particularly overwhelmingly the",
    "start": "2112450",
    "end": "2118240"
  },
  {
    "text": "immutable data structures mean that one thread cannot change the data out from",
    "start": "2118240",
    "end": "2123430"
  },
  {
    "text": "underneath another thread one thread can get the wrong version of the array or",
    "start": "2123430",
    "end": "2129460"
  },
  {
    "text": "the hash or the whatever it is but it can't it can't change things out from",
    "start": "2129460",
    "end": "2135700"
  },
  {
    "text": "underneath another thread and in particular you cannot get the situation where one thread is in mid",
    "start": "2135700",
    "end": "2142480"
  },
  {
    "text": "update and the data structure is complete garbage and another thread looks at it that cannot happen with",
    "start": "2142480",
    "end": "2149890"
  },
  {
    "text": "immutable data structures because the thing is either there or it's not and",
    "start": "2149890",
    "end": "2155560"
  },
  {
    "text": "the new version either exists or it doesn't when the new version of your array or your hash or whatever exists it",
    "start": "2155560",
    "end": "2162700"
  },
  {
    "text": "is at least consistent so there is some thread magic it doesn't solve all your thread problems think about atoms but it",
    "start": "2162700",
    "end": "2171250"
  },
  {
    "text": "eliminates a whole class of them and after all isn't that what funk our programming paradigms are supposed to do",
    "start": "2171250",
    "end": "2177240"
  },
  {
    "text": "but so what's it like to program using effectively these are rules right these",
    "start": "2177240",
    "end": "2184300"
  },
  {
    "text": "are arbitrary rules that we are saying we're going to adopt in our programs because we think that those rules are",
    "start": "2184300",
    "end": "2191050"
  },
  {
    "text": "going to help us build better programs well initially it feels like programming",
    "start": "2191050",
    "end": "2196089"
  },
  {
    "text": "wearing handcuffs right you know you have if you've never programmed with the",
    "start": "2196089",
    "end": "2202450"
  },
  {
    "text": "beautiful data structures you spend your first week like oh I'll just change the third element in that no I can't I need",
    "start": "2202450",
    "end": "2209770"
  },
  {
    "text": "to return something and it's a it really feels like you are burdened by all of",
    "start": "2209770",
    "end": "2216640"
  },
  {
    "text": "these rules and it's hard to see why you have to program with these rules in your",
    "start": "2216640",
    "end": "2222310"
  },
  {
    "text": "gut but you do it for a while and after a while you realize that oh okay my code",
    "start": "2222310",
    "end": "2228220"
  },
  {
    "text": "is easier to understand I can reason about the code because I don't I spend a lot less time looking through all the",
    "start": "2228220",
    "end": "2234730"
  },
  {
    "text": "code to see what's going on after a while those handcuffs feel like a bicycle right a bicycle right you got to",
    "start": "2234730",
    "end": "2241359"
  },
  {
    "text": "hold your arms like this there's all kinds of rules in riding a bicycle right it's only most of us can only ride a",
    "start": "2241359",
    "end": "2247210"
  },
  {
    "text": "bicycle and a pretty flat even surface but it reduces the friction between you",
    "start": "2247210",
    "end": "2252609"
  },
  {
    "text": "and where you want to go and that really is my feeling about functional",
    "start": "2252609",
    "end": "2257740"
  },
  {
    "text": "programming all right and we have left all right we're doing pretty well so does it work I think is",
    "start": "2257740",
    "end": "2266480"
  },
  {
    "text": "the final question I want to try and answer and for that I'd like to",
    "start": "2266480",
    "end": "2272660"
  },
  {
    "text": "introduce you to pedestal pedestal is a library or actually set of libraries",
    "start": "2272660",
    "end": "2278660"
  },
  {
    "text": "it's produced by the company I work for a cognate ech and pedestal and it's open source and",
    "start": "2278660",
    "end": "2284960"
  },
  {
    "text": "it's widely used in the closure world so forget about the fact that it's produced",
    "start": "2284960",
    "end": "2290960"
  },
  {
    "text": "by my company that's not really important it happens to be a production library that I'm familiar with and",
    "start": "2290960",
    "end": "2297010"
  },
  {
    "text": "pedestal is that library in the closure world that oh I've got a request that",
    "start": "2297010",
    "end": "2302090"
  },
  {
    "text": "came in I need the parts of the parameters I need to route it to the right place I need to authenticate it",
    "start": "2302090",
    "end": "2309020"
  },
  {
    "text": "closure provides or I'm sorry pedestal provides the plumbing to do all of that it's that library right there's",
    "start": "2309020",
    "end": "2315170"
  },
  {
    "text": "basically one or more in in every programming environment okay but think",
    "start": "2315170",
    "end": "2320270"
  },
  {
    "text": "of it pedestal is just a giant pile of production closure code written in a functional style",
    "start": "2320270",
    "end": "2326030"
  },
  {
    "text": "so let's look inside pedestal what what what is in pedestal",
    "start": "2326030",
    "end": "2331310"
  },
  {
    "text": "well there's eighteen thousand seven hundred and six lines of code and pedestal as of last week I gotta tell ya",
    "start": "2331310",
    "end": "2339740"
  },
  {
    "text": "closure is a pretty dense language so eighteen almost nineteen thousand lines",
    "start": "2339740",
    "end": "2344870"
  },
  {
    "text": "of code that is a lot of closure that is more closer than than is in most",
    "start": "2344870",
    "end": "2352070"
  },
  {
    "text": "applications okay what if we look a little deeper what's in those about nineteen thousand lines of code there's",
    "start": "2352070",
    "end": "2359060"
  },
  {
    "text": "28 protocols a closure protocol is a bundle of method signature or function",
    "start": "2359060",
    "end": "2365630"
  },
  {
    "text": "signatures and it's the way that you define interfaces between different parts of closure application or library",
    "start": "2365630",
    "end": "2372050"
  },
  {
    "text": "makes sense that a library would define a bunch of interfaces so there's 28 protocols in pedestal there's eight of",
    "start": "2372050",
    "end": "2378890"
  },
  {
    "text": "these bridges to the outside world right agents and atoms and things like that",
    "start": "2378890",
    "end": "2385250"
  },
  {
    "text": "there's nine record types a record type enclosure is as close as closure gets the object-oriented programming it's",
    "start": "2385250",
    "end": "2391820"
  },
  {
    "text": "like here's the thing and it has the fields in these operations just nine of them there's one multi-method a multi",
    "start": "2391820",
    "end": "2398990"
  },
  {
    "text": "method is a completely general form of polymorphism all right and then there's",
    "start": "2398990",
    "end": "2405460"
  },
  {
    "text": "944 functions think about that there's nine all of those small numbers there's",
    "start": "2405460",
    "end": "2411320"
  },
  {
    "text": "twenty eight of these and eight of these and one of these and then there's 944 functions and if you don't remember",
    "start": "2411320",
    "end": "2418190"
  },
  {
    "text": "anything else from this talk remember this pie chart this giant pile",
    "start": "2418190",
    "end": "2423770"
  },
  {
    "text": "of production functional programming is almost entirely functions and it has a",
    "start": "2423770",
    "end": "2431210"
  },
  {
    "text": "little sliver of interfaces and then a trivial amount of everything else and if",
    "start": "2431210",
    "end": "2437060"
  },
  {
    "text": "you want to know what functional programming is like for like I get up every morning and I write applications",
    "start": "2437060",
    "end": "2443180"
  },
  {
    "text": "kind of programmer it is this you spend all of your time or most of your time",
    "start": "2443180",
    "end": "2448790"
  },
  {
    "text": "just writing functions if that sounds a little boring yes it is boring it was",
    "start": "2448790",
    "end": "2455720"
  },
  {
    "text": "boring in that good way of I can do the same thing over and over and over",
    "start": "2455720",
    "end": "2461360"
  },
  {
    "text": "without having to negotiate with my language without having to negotiate with libraries I just write these",
    "start": "2461360",
    "end": "2467860"
  },
  {
    "text": "testable straightforward functions for the most part and then maybe a few",
    "start": "2467860",
    "end": "2473090"
  },
  {
    "text": "protocols so there we have it that's kind of the working programmers guide to",
    "start": "2473090",
    "end": "2480500"
  },
  {
    "text": "functional programming does it work I think so I hope you'll try and find out for yourself thanks for listening",
    "start": "2480500",
    "end": "2488740"
  },
  {
    "text": "you",
    "start": "2491960",
    "end": "2494020"
  }
]