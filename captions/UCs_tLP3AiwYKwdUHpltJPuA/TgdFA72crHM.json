[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "so the first talk I'm going to talk about is about schinus data",
    "start": "3639",
    "end": "9040"
  },
  {
    "text": "structures um it's a fashionable thing to talk about at the moment because um",
    "start": "9040",
    "end": "15120"
  },
  {
    "text": "if you've all looked at no seal databases one of the things that's common to pretty much all of the no seal",
    "start": "15120",
    "end": "21920"
  },
  {
    "text": "databases is that they talk about the fact that they're wonderfully schless and all the Fantastic things you",
    "start": "21920",
    "end": "28000"
  },
  {
    "text": "can have with a schless database but when a lot of people talk about",
    "start": "28000",
    "end": "33360"
  },
  {
    "text": "schem lessness I think they miss out a lot of the subtleties that you need to",
    "start": "33360",
    "end": "39520"
  },
  {
    "text": "understand to really understand whether it's a good idea to be schem ofus and also how to use it",
    "start": "39520",
    "end": "45239"
  },
  {
    "text": "effectively so that's what this my first two talk first of the talks is going to",
    "start": "45239",
    "end": "50280"
  },
  {
    "text": "talk about talk a little bit about this and I'm going to divide it into two",
    "start": "50280",
    "end": "56199"
  },
  {
    "start": "53000",
    "end": "85000"
  },
  {
    "text": "parts first I'm going to talk about what scheal lessness is and then in the second part I will talk about when you",
    "start": "56199",
    "end": "63160"
  },
  {
    "text": "might want to use it and I'm going to move around the stage a lot as I talk partly because I normally do that partly",
    "start": "63160",
    "end": "69520"
  },
  {
    "text": "because it really makes life hard for the cameraman so he's got to spend a lot of time trying to catch up with",
    "start": "69520",
    "end": "75799"
  },
  {
    "text": "me so to begin thinking about schem lessness let's think about what we typically imagine in a relational",
    "start": "75799",
    "end": "83520"
  },
  {
    "text": "database SCH so we typically expect when we create a table we Define the columns",
    "start": "83520",
    "end": "90040"
  },
  {
    "start": "85000",
    "end": "120000"
  },
  {
    "text": "to that table we say what they are we give them each a particular name and we",
    "start": "90040",
    "end": "95159"
  },
  {
    "text": "give some indication what type they are and then at some point should we wish to insert data into that table we have to",
    "start": "95159",
    "end": "103079"
  },
  {
    "text": "follow that schema and if we try to insert something that isn't defined in the schema then we'll actually be",
    "start": "103079",
    "end": "111000"
  },
  {
    "text": "prevented from putting the data in there now with a a Seamus database which",
    "start": "111000",
    "end": "117799"
  },
  {
    "text": "is a typical non simple database of course we can store we can store whatever we like in there we can have",
    "start": "117799",
    "end": "124479"
  },
  {
    "start": "120000",
    "end": "210000"
  },
  {
    "text": "records of people with different fields and different capabilities and that is",
    "start": "124479",
    "end": "129640"
  },
  {
    "text": "the thing that you hear most people talk about when they talk about the great thing about scheal lessness and Nole",
    "start": "129640",
    "end": "135160"
  },
  {
    "text": "databases that would say it's really good because you don't have to fit yourself to the rigid structure of the",
    "start": "135160",
    "end": "142319"
  },
  {
    "text": "relational database instead what you can do is store whatever it is you need to",
    "start": "142319",
    "end": "148519"
  },
  {
    "text": "have in whatever form to come but there are",
    "start": "148519",
    "end": "154720"
  },
  {
    "text": "disadvantages being schem let's imagine we just want to be",
    "start": "154720",
    "end": "159920"
  },
  {
    "text": "storing some data in the database and we just want to find certain parts of data",
    "start": "159920",
    "end": "165599"
  },
  {
    "text": "with a nice simple query and with that query that will allow us to find the records that are",
    "start": "165599",
    "end": "172599"
  },
  {
    "text": "interested in unless of course one of those records is effective itively what we",
    "start": "172599",
    "end": "180599"
  },
  {
    "text": "should be looking for but there is some difference in its schema so in this case obviously I'm",
    "start": "180599",
    "end": "186360"
  },
  {
    "text": "using an American zip code idea but I mean what do you call that do you call it zip do you call it zip code do you",
    "start": "186360",
    "end": "192840"
  },
  {
    "text": "call it postcode how do you know which to match",
    "start": "192840",
    "end": "198040"
  },
  {
    "text": "to and what this leads you I think to the way to think about this is saying",
    "start": "198040",
    "end": "203599"
  },
  {
    "text": "that the data may not have an explicit schema that says how you might want to",
    "start": "203599",
    "end": "208959"
  },
  {
    "text": "store it but there's always an implicit Steemer you are making an assumption",
    "start": "208959",
    "end": "215760"
  },
  {
    "start": "210000",
    "end": "268000"
  },
  {
    "text": "whether do we use the word zip for the ZIP code do we use zip code for the dip code or do we use both what we that that",
    "start": "215760",
    "end": "224159"
  },
  {
    "text": "is in there in the data but it's all implicit it's not an explicit thing and the implicit schema is effectively",
    "start": "224159",
    "end": "231159"
  },
  {
    "text": "defined by all the code that accesses that database all the code that reads",
    "start": "231159",
    "end": "236200"
  },
  {
    "text": "from it all the code that writes to it that's where implicit scheme re is there",
    "start": "236200",
    "end": "242280"
  },
  {
    "text": "and just because you're using a schema database doesn't truly mean you are",
    "start": "242280",
    "end": "247400"
  },
  {
    "text": "scheal it just means that your schema is purely an implicit",
    "start": "247400",
    "end": "253239"
  },
  {
    "text": "one now I've talked about this in the context of databases because that's",
    "start": "253360",
    "end": "259160"
  },
  {
    "text": "where the chatter is most at the moment in terms of schema lessness but in fact the same ideas apply to in memory",
    "start": "259160",
    "end": "266160"
  },
  {
    "text": "programming as well let's look at um you know an example in a couple of well-known",
    "start": "266160",
    "end": "272440"
  },
  {
    "text": "programming languages and what you see is we can Define certain classes of objects and",
    "start": "272440",
    "end": "279280"
  },
  {
    "text": "Define what field is present on that class that is in effectively a schema and it doesn't have to be just in an",
    "start": "279280",
    "end": "286440"
  },
  {
    "text": "objectoriented setting oldfashioned C has the same thing structs anytime",
    "start": "286440",
    "end": "292840"
  },
  {
    "text": "you're defining your types you are defining what you have um with that with a schema and similarly in an inmemory",
    "start": "292840",
    "end": "301479"
  },
  {
    "text": "language you can also go schemes and you go schem typically by using some kind of",
    "start": "301479",
    "end": "307680"
  },
  {
    "text": "dictionary hashmap associative array something of that kind and most languages have this as a built-in data",
    "start": "307680",
    "end": "314080"
  },
  {
    "text": "type or as easily available through standard libraries and that allows you",
    "start": "314080",
    "end": "319840"
  },
  {
    "text": "that same degree of flexibility you can store whatever values in the map you don't have to predefine them by",
    "start": "319840",
    "end": "326400"
  },
  {
    "text": "predefining the fields and the classes or struct but the question many is well what's the",
    "start": "326400",
    "end": "333240"
  },
  {
    "text": "advantage of doing one or the other is it really a matter of a difference between saying um dot something as opposed to",
    "start": "333240",
    "end": "341560"
  },
  {
    "text": "putting something in whatever the the property access is where is the tradeoff",
    "start": "341560",
    "end": "347520"
  },
  {
    "text": "here now in general my feeling is that if you're going to use a field",
    "start": "347520",
    "end": "353520"
  },
  {
    "text": "explicitly you really want to have a defined field again it's this explicit schema thing if you've got and if you're",
    "start": "353520",
    "end": "360720"
  },
  {
    "text": "using a dictionary and you're putting data into it you've got the same kind of implicit schema that I mentioned with",
    "start": "360720",
    "end": "366520"
  },
  {
    "text": "the database case earlier on how do I know what I'm going to use for the first name I'm going to decide on what my keys",
    "start": "366520",
    "end": "373039"
  },
  {
    "text": "are that I'm putting into that dictionary and where do I find them out if I'm going to probe around the code to",
    "start": "373039",
    "end": "378840"
  },
  {
    "text": "find what whether I'm using first name or Christian name um where do I find",
    "start": "378840",
    "end": "384840"
  },
  {
    "text": "this well I've gotve got H around in the code if I've got an impl schema but if I've got defined class with clearly",
    "start": "384840",
    "end": "391840"
  },
  {
    "text": "defined Fields then it's easy to see what I'm using for the different things now where a dictionary really",
    "start": "391840",
    "end": "398599"
  },
  {
    "text": "comes in useful is when you're not actually explicitly typing in the field",
    "start": "398599",
    "end": "404919"
  },
  {
    "text": "name with a literal value but you're pulling it in from some other source maybe you've got a displayer fields on",
    "start": "404919",
    "end": "411599"
  },
  {
    "text": "the user interface where you are treating them as as a purely Dynamic thing and you've got property name",
    "start": "411599",
    "end": "416800"
  },
  {
    "text": "property value something of that kind in that situation the that's where having",
    "start": "416800",
    "end": "423520"
  },
  {
    "text": "the kind of implicit lookup is quite useful on the whole my view is that if",
    "start": "423520",
    "end": "429800"
  },
  {
    "text": "you're using something like a map or a dictionary and you're typing in literal",
    "start": "429800",
    "end": "434840"
  },
  {
    "text": "values for the keys that's a bad smell that's an indication that you should be instead thinking about having defined",
    "start": "434840",
    "end": "441160"
  },
  {
    "text": "Fields because it's easier to see what's going on that way now just because you're using look",
    "start": "441160",
    "end": "448039"
  },
  {
    "text": "of properties do necessarily mean you have to use a hashmap you can most",
    "start": "448039",
    "end": "454800"
  },
  {
    "text": "languages will give you some kind of reflection capability which you can use to get hold of that as well so there's",
    "start": "454800",
    "end": "461120"
  },
  {
    "text": "definitely a choice between the two and sometimes I find that there",
    "start": "461120",
    "end": "466319"
  },
  {
    "text": "advantages one way or the other various things that you've got to trade off now this is actually a very old tradeoff um",
    "start": "466319",
    "end": "474360"
  },
  {
    "start": "474000",
    "end": "647000"
  },
  {
    "text": "back many years ago K Beck wrote Small Talk best practice patterns and he coin",
    "start": "474360",
    "end": "479919"
  },
  {
    "text": "this as a difference between what he called common state which is when you have the defined fields and variable",
    "start": "479919",
    "end": "486319"
  },
  {
    "text": "state where you use something like a dictionary and what he pointed out is that the variable state is useful when",
    "start": "486319",
    "end": "492159"
  },
  {
    "text": "different instances have different things that need to be stored by themselves and then it's useful to have",
    "start": "492159",
    "end": "498120"
  },
  {
    "text": "a in this variable state with with a hatch rack but when you've got most of",
    "start": "498120",
    "end": "503240"
  },
  {
    "text": "the instances having the same things then it's better Define them clearly and with fields",
    "start": "503240",
    "end": "509599"
  },
  {
    "text": "and this isn't an either all choice you can combine both techniques in the same",
    "start": "509599",
    "end": "515479"
  },
  {
    "text": "class so in this example here I can have defined fields for the first name and",
    "start": "515479",
    "end": "521640"
  },
  {
    "text": "the last name but also include A hashmap in the class for any other values I",
    "start": "521640",
    "end": "527320"
  },
  {
    "text": "might want to stick in so this allows me effectively to use both patterns at the same",
    "start": "527320",
    "end": "533959"
  },
  {
    "text": "time now just because I'm using both patterns I can don't actually have to",
    "start": "533959",
    "end": "539040"
  },
  {
    "text": "use explicit fields for the storage and with this example here what",
    "start": "539040",
    "end": "546000"
  },
  {
    "text": "I'm doing is saying I've got a single customer class it's got an interface that looks like it uses explicit Fields",
    "start": "546000",
    "end": "553640"
  },
  {
    "text": "but it actually stores all these in an underlying hashack now this can be quite a useful",
    "start": "553640",
    "end": "559320"
  },
  {
    "text": "technique particularly um these days where we're seeing a lot of people store",
    "start": "559320",
    "end": "564720"
  },
  {
    "text": "data in things like no secal databases in say adjacent format and then",
    "start": "564720",
    "end": "569959"
  },
  {
    "text": "pull it out to a user interface or a service interface in Json or through single page applications that take Json",
    "start": "569959",
    "end": "577560"
  },
  {
    "text": "if you're going to do that you might as well store the data in your objects that you might want to manipulate as Json as",
    "start": "577560",
    "end": "584040"
  },
  {
    "text": "well or deserialize them in a um into a dictionary because that kind of stuff is",
    "start": "584040",
    "end": "589240"
  },
  {
    "text": "easily built in The crucial thing to remember about objects is that the interface and the implementation can be",
    "start": "589240",
    "end": "595600"
  },
  {
    "text": "two different things the point of encapsulation is to what your actual data representation is and as a result",
    "start": "595600",
    "end": "603399"
  },
  {
    "text": "using a dictionary internally but exposing something that looks like defined fields from the outside is a",
    "start": "603399",
    "end": "609240"
  },
  {
    "text": "perfectly reasonable way to go that way you've got an explicit schema of your",
    "start": "609240",
    "end": "614600"
  },
  {
    "text": "defined Fields but at the same time you don't have to be always having an awkward copy into different data",
    "start": "614600",
    "end": "620760"
  },
  {
    "text": "structures as you're flowing data through the",
    "start": "620760",
    "end": "625360"
  },
  {
    "text": "application so here we see that in in memory programming we can combine the",
    "start": "627000",
    "end": "633519"
  },
  {
    "text": "Notions of the explicit schema and the schema lessness but you can do the same",
    "start": "633519",
    "end": "639399"
  },
  {
    "text": "thing even in a traditional relational database and in fact we do we see this",
    "start": "639399",
    "end": "645040"
  },
  {
    "text": "all the time there are three common patterns to how this is done um the",
    "start": "645040",
    "end": "650240"
  },
  {
    "start": "647000",
    "end": "753000"
  },
  {
    "text": "first one is to use um effectively custom columns that don't really have a",
    "start": "650240",
    "end": "656920"
  },
  {
    "text": "name that they're used by convention we program another technique is to actually",
    "start": "656920",
    "end": "663519"
  },
  {
    "text": "have a custom data field which you then fill with some kind of structure that",
    "start": "663519",
    "end": "669320"
  },
  {
    "text": "allows you to put the variable state in there so it may be Json data embedded",
    "start": "669320",
    "end": "675040"
  },
  {
    "text": "within a string field or something of that kind this second technique is the closest one to the inmemory technique",
    "start": "675040",
    "end": "681079"
  },
  {
    "text": "that I showed earlier on and then the third approach is to use some kind of",
    "start": "681079",
    "end": "686959"
  },
  {
    "text": "associative lookup table that allows you to add custom fields to tables you've",
    "start": "686959",
    "end": "692160"
  },
  {
    "text": "probably all seen this technique if you've ever dealt with any largish relational database application because",
    "start": "692160",
    "end": "698200"
  },
  {
    "text": "there's always a need to put this stuff in and to be quite honest it is a clunk all three are rather clunky",
    "start": "698200",
    "end": "705320"
  },
  {
    "text": "mechanisms and this is where if you find yourself having to do this a lot you",
    "start": "705320",
    "end": "710360"
  },
  {
    "text": "begin to feel the the need for some kind of schem ofus approach instead but this is really just a way of kind of hacking",
    "start": "710360",
    "end": "717120"
  },
  {
    "text": "schemes into the relatively inflexible and fairly rigid relational",
    "start": "717120",
    "end": "724200"
  },
  {
    "text": "structures so covering what I've made so far we can",
    "start": "726200",
    "end": "731519"
  },
  {
    "text": "do schemas and scheal lessness both in databases and in memory and it's not",
    "start": "731519",
    "end": "736800"
  },
  {
    "text": "necessarily 100% choice between one or the other we can combine a fix schema",
    "start": "736800",
    "end": "742079"
  },
  {
    "text": "and a Vari the one thing that's been fairly true of what I've said so far is that",
    "start": "742079",
    "end": "748920"
  },
  {
    "text": "we've seen the schema as what I think of as a storage schema by what I mean is by",
    "start": "748920",
    "end": "755560"
  },
  {
    "start": "753000",
    "end": "839000"
  },
  {
    "text": "a storage schema is it says if I want to store some data in my store whether it",
    "start": "755560",
    "end": "760760"
  },
  {
    "text": "be an inmemory store or a database store the schema will prevent me from storing",
    "start": "760760",
    "end": "766440"
  },
  {
    "text": "something that doesn't fit that's how a relational schema operates and it's",
    "start": "766440",
    "end": "772839"
  },
  {
    "text": "effectively how defining classes and Fields in a record structure or a class",
    "start": "772839",
    "end": "778560"
  },
  {
    "text": "Works in memory as well you can't fit something in there that doesn't fit but",
    "start": "778560",
    "end": "784000"
  },
  {
    "text": "that's not the only way that we can use a schema a less common way of using the",
    "start": "784000",
    "end": "789160"
  },
  {
    "text": "schema but also quite a useful way is what I call a predicate schema now in a",
    "start": "789160",
    "end": "794480"
  },
  {
    "text": "predicate schema what you're doing is you're allowing anything to be stored in whatever your storage mechanism is but",
    "start": "794480",
    "end": "801680"
  },
  {
    "text": "the schema is can be used to detect what shape of things it is so that way you",
    "start": "801680",
    "end": "808760"
  },
  {
    "text": "can detect have I got anything that doesn't fit the def defined balce opening in place I might store something",
    "start": "808760",
    "end": "816399"
  },
  {
    "text": "that says zip code even though my schema says zip and then as a separate step",
    "start": "816399",
    "end": "821480"
  },
  {
    "text": "I'll go through and say does anything not fit the schema or perhaps when I read the data I can first test to see if",
    "start": "821480",
    "end": "827600"
  },
  {
    "text": "it fits the schema and then if it does I can make circuit assumptions about how to deal with that",
    "start": "827600",
    "end": "833240"
  },
  {
    "text": "data now predicant schemas relatively unusual but one place where you may have run into them something like",
    "start": "833240",
    "end": "840399"
  },
  {
    "start": "839000",
    "end": "941000"
  },
  {
    "text": "XML if you've got some kind of XML data it's just text you can store whatever",
    "start": "840399",
    "end": "846040"
  },
  {
    "text": "you like in there but there are various ways to test XML against the schema now",
    "start": "846040",
    "end": "852639"
  },
  {
    "text": "the best known one for this I guess these days is XML schema perhaps because",
    "start": "852639",
    "end": "858320"
  },
  {
    "text": "it's got schema in its name but it's not a terribly good schema language and the one I've shown up here is something",
    "start": "858320",
    "end": "865480"
  },
  {
    "text": "called relax compact notation which is a much nicer schema notation but it's easier to read and",
    "start": "865480",
    "end": "872120"
  },
  {
    "text": "understand and this gives you a way to be have then test a deal document and say does it pass the",
    "start": "872120",
    "end": "878279"
  },
  {
    "text": "schema this brings up an interesting point that in when you've got things like predicate schemas you don't have to",
    "start": "878279",
    "end": "885199"
  },
  {
    "text": "limit yourself to only one scheme of defition language for the kinds of schemes you're operating with you can",
    "start": "885199",
    "end": "891199"
  },
  {
    "text": "use different schem of defition languages depending on different contexts and",
    "start": "891199",
    "end": "896959"
  },
  {
    "text": "needs what's more you can actually separate the schema from the storage in",
    "start": "896959",
    "end": "902920"
  },
  {
    "text": "order to be able to have different schemas for different circumstances so here I've got one of my basic",
    "start": "902920",
    "end": "909720"
  },
  {
    "text": "appointment schema but I can have another schema that says let's take that",
    "start": "909720",
    "end": "915639"
  },
  {
    "text": "basic one and extend it because if I want to have a confirmed appointment I need to actually Define who the",
    "start": "915639",
    "end": "922360"
  },
  {
    "text": "physician is as well as patient information and so this allows me to take the same data but have more",
    "start": "922360",
    "end": "928959"
  },
  {
    "text": "multiple schemas that I cont tested that depending on where I am in the process that I'm working with this is actually a",
    "start": "928959",
    "end": "936160"
  },
  {
    "text": "very valuable thing because it introduces the notion of contextual validation now what I mean by that is",
    "start": "936160",
    "end": "943600"
  },
  {
    "start": "941000",
    "end": "1091000"
  },
  {
    "text": "that when people talk about whether they want to validate something they often look at it as a purely binary thing some",
    "start": "943600",
    "end": "951480"
  },
  {
    "text": "class or record or piece of data is valid or not but that although that",
    "start": "951480",
    "end": "956800"
  },
  {
    "text": "works a lot of the time it isn't really a very complete way of looking at things",
    "start": "956800",
    "end": "963560"
  },
  {
    "text": "usually when you want to validate something the validation rules will change according to the particular",
    "start": "963560",
    "end": "969079"
  },
  {
    "text": "context you want and the context is usually of something you want to do some action you want to take and so",
    "start": "969079",
    "end": "976680"
  },
  {
    "text": "validation rules you may well have multiple different sets of validations for a particular thing so if I've got an",
    "start": "976680",
    "end": "984000"
  },
  {
    "text": "appointment I might have one validation that says okay the appointment is set up and ready to go a different validation",
    "start": "984000",
    "end": "990880"
  },
  {
    "text": "that is says okay this is confirmed and something that's actually going to go ahead and the validation rules will",
    "start": "990880",
    "end": "996680"
  },
  {
    "text": "suddenly differ in fact what we're talking about with a storage schema is saying the context the context of this",
    "start": "996680",
    "end": "1003519"
  },
  {
    "text": "validation is that I'm allowed to put it in the database at all and this is I think where a lot of",
    "start": "1003519",
    "end": "1009000"
  },
  {
    "text": "people kind of go down an awward route is that they put very strong rules on",
    "start": "1009000",
    "end": "1014199"
  },
  {
    "text": "this validation of storing something in a database often it's useful to have relatively weaks rules for storing it",
    "start": "1014199",
    "end": "1022360"
  },
  {
    "text": "and then be able to follow up with validation checks later on to say is it actually I may have stored this but is",
    "start": "1022360",
    "end": "1028880"
  },
  {
    "text": "it actually something I can do something with and what is that thing I want to do if I'm storing an order information is",
    "start": "1028880",
    "end": "1036079"
  },
  {
    "text": "it enough or enough information that I can actually ship the order is it enough um information perhaps that I can demand",
    "start": "1036079",
    "end": "1043038"
  },
  {
    "text": "payment and calculate a price for it or am I still unsure people are often reluctant to",
    "start": "1043039",
    "end": "1049600"
  },
  {
    "text": "store partial information things of that kind and that's because you confuse the",
    "start": "1049600",
    "end": "1055160"
  },
  {
    "text": "rules for the validation step of storing with the validation steps of the actual actions you might want to",
    "start": "1055160",
    "end": "1062919"
  },
  {
    "text": "take so in fact schemas I hope that's giving you a sense that there's a lot more to schemas than just the notion of",
    "start": "1064640",
    "end": "1072760"
  },
  {
    "text": "what a relational schema might be they're actually quite interesting and subtle things and we could arguably use",
    "start": "1072760",
    "end": "1080280"
  },
  {
    "text": "them a lot more widely in our programming anyway as a way of trying to describe rules for validation things of",
    "start": "1080280",
    "end": "1086320"
  },
  {
    "text": "that kind but now I want to move on having sort of talked about schemas to when we",
    "start": "1086320",
    "end": "1093000"
  },
  {
    "start": "1091000",
    "end": "1146000"
  },
  {
    "text": "might want to use a schem approach as opposed to using actually defining the",
    "start": "1093000",
    "end": "1100400"
  },
  {
    "text": "schema so to start with I like to think myself when what what is the consequence",
    "start": "1100400",
    "end": "1107080"
  },
  {
    "text": "of this going with something schema saying that we've got the customer and we're just going to make it a hashmap",
    "start": "1107080",
    "end": "1112400"
  },
  {
    "text": "we're not going to define a class or make any scheme or anything of that kind the question then comes in and I've",
    "start": "1112400",
    "end": "1119600"
  },
  {
    "text": "alluded to this quite a few times already is what are the legal keys by which I can access that hash how do I",
    "start": "1119600",
    "end": "1126200"
  },
  {
    "text": "find that out well I've got to look through the code and I've got to find out where are all the places in the code",
    "start": "1126200",
    "end": "1132400"
  },
  {
    "text": "where I access that customer and there could be a lot of code but I've got to",
    "start": "1132400",
    "end": "1138200"
  },
  {
    "text": "hunt around to try and find those spots so my general advice as a kind of",
    "start": "1138200",
    "end": "1144320"
  },
  {
    "text": "first approximation is to say don't go with implicit schemas because if you've",
    "start": "1144320",
    "end": "1150559"
  },
  {
    "start": "1146000",
    "end": "1209000"
  },
  {
    "text": "got an implicit schema you've got to FK around all over the place and try and find out what the legal values are have",
    "start": "1150559",
    "end": "1156840"
  },
  {
    "text": "some form of explicit schema if you can that may be some defined storage schema",
    "start": "1156840",
    "end": "1163159"
  },
  {
    "text": "or it may be some way of testing against a predicate but have some place that people can go to and say okay what do I",
    "start": "1163159",
    "end": "1170520"
  },
  {
    "text": "call this what do I look for the ZIP code do I call it zip do I call it zip code make that as explicit as you can",
    "start": "1170520",
    "end": "1177760"
  },
  {
    "text": "and it is certainly a common theme that I've run into where I've talked to projects that have used uh schema",
    "start": "1177760",
    "end": "1184080"
  },
  {
    "text": "Solutions where they say yeah it all worked really well for a while and then we started having great difficulty",
    "start": "1184080",
    "end": "1189280"
  },
  {
    "text": "trying to find out what was actually being stored in the database an explicit schema that help",
    "start": "1189280",
    "end": "1194960"
  },
  {
    "text": "deal with that but that's just the first point there are cases where having a schem",
    "start": "1194960",
    "end": "1203240"
  },
  {
    "text": "approach can be valuable and it overrides the general advantage of an explicit schema and I'm going to boil",
    "start": "1203240",
    "end": "1211000"
  },
  {
    "start": "1209000",
    "end": "1467000"
  },
  {
    "text": "this down into um this bunch of cases here the first category of cases is",
    "start": "1211000",
    "end": "1218320"
  },
  {
    "text": "cases where the data you're actually storing isn't uniform if most of your data has the same Fields then it's easy",
    "start": "1218320",
    "end": "1225720"
  },
  {
    "text": "to see what to do with an explicit schema but if you get variant information from instance to instance",
    "start": "1225720",
    "end": "1232760"
  },
  {
    "text": "then having a fixed schema is just just too hard because you've got to come up with some kind of flexibility mechanism",
    "start": "1232760",
    "end": "1239720"
  },
  {
    "text": "and a relational one as we saw is particularly ugly there's two main situations where",
    "start": "1239720",
    "end": "1245400"
  },
  {
    "text": "you get this kind of non-uniform data the first case is where you want people to be able to Define custom Fields this",
    "start": "1245400",
    "end": "1252480"
  },
  {
    "text": "is quite common in products um where different customers want want to score different custom values but you find",
    "start": "1252480",
    "end": "1258640"
  },
  {
    "text": "find it on various other situations as well whenever you have this kind of custom field that's a situation where",
    "start": "1258640",
    "end": "1265240"
  },
  {
    "text": "you may want to use and some kind of schem approach at least for that custom Fields part of it and this is again",
    "start": "1265240",
    "end": "1272159"
  },
  {
    "text": "where it can be very useful to find a way to combine both a fixed and a",
    "start": "1272159",
    "end": "1277320"
  },
  {
    "text": "variable State the other situation is where you've got different types that are very",
    "start": "1277320",
    "end": "1284880"
  },
  {
    "text": "variant in their own case a great example of this is is um if you're doing",
    "start": "1284880",
    "end": "1290200"
  },
  {
    "text": "some kind of event logging where each event type carries its own different kind of data and they can vary quite",
    "start": "1290200",
    "end": "1296360"
  },
  {
    "text": "enormously between the different kinds of events you have to log in that situation again a more Schamus approach",
    "start": "1296360",
    "end": "1303159"
  },
  {
    "text": "um can be very handy now the other main reason that I",
    "start": "1303159",
    "end": "1308919"
  },
  {
    "text": "hear people talk about the benefits of going schless is in when it comes to",
    "start": "1308919",
    "end": "1315240"
  },
  {
    "text": "migration as you want to change your data storage needs over time if you've got a schemes approach this is great if",
    "start": "1315240",
    "end": "1322320"
  },
  {
    "text": "you change your data structure you can just score that change data structure and have old versions as well as new",
    "start": "1322320",
    "end": "1327840"
  },
  {
    "text": "versions in your storage area but I think this is actually a somewhat oversold Advantage because the",
    "start": "1327840",
    "end": "1336279"
  },
  {
    "text": "problem with schema migration is you've still got the implicit schemas and what's worse they're changing over time",
    "start": "1336279",
    "end": "1342279"
  },
  {
    "text": "on you now you can manage this to some",
    "start": "1342279",
    "end": "1347400"
  },
  {
    "text": "degree if you for instance just rename zip code to zip you can actually have a",
    "start": "1347400",
    "end": "1352720"
  },
  {
    "text": "reader that's able to look for either value and then a writer that only writes out the new value so you get some",
    "start": "1352720",
    "end": "1359039"
  },
  {
    "text": "flexibility there but as you get to more complicated migrations you do reach the point at which you have to do a more",
    "start": "1359039",
    "end": "1365600"
  },
  {
    "text": "formal migration step and when it comes down to it that's not necessarily be a terribly",
    "start": "1365600",
    "end": "1371919"
  },
  {
    "text": "complicated exercise uh I've heard people say well the problem with fixed scheme of databases such as relational",
    "start": "1371919",
    "end": "1378520"
  },
  {
    "text": "databases is that it's very hard to change a schema over time well actually that's not terribly true um a projects",
    "start": "1378520",
    "end": "1386320"
  },
  {
    "text": "that that we do at PWS we change our schemas all the time as part of we've had to as part of an agile way of",
    "start": "1386320",
    "end": "1392159"
  },
  {
    "text": "working and it it requires is the disciplined practice of schema migration",
    "start": "1392159",
    "end": "1397520"
  },
  {
    "text": "what boils down to making sure that every time you change a schema it's logged tied in with a version control",
    "start": "1397520",
    "end": "1403679"
  },
  {
    "text": "system and you use lots of small migrations for every change that you make migrate the data and then you can",
    "start": "1403679",
    "end": "1411039"
  },
  {
    "text": "change from one version of a database to another by composing migrations together",
    "start": "1411039",
    "end": "1416200"
  },
  {
    "text": "I've glossed over the process um but you can find details of it in various places",
    "start": "1416200",
    "end": "1421720"
  },
  {
    "text": "um but it is actually a very welln technique and the same technique really has to be used for no SQL schem",
    "start": "1421720",
    "end": "1428520"
  },
  {
    "text": "databases as well eventually all of those special hooks to deal with old",
    "start": "1428520",
    "end": "1433559"
  },
  {
    "text": "versions of the data get too complicated and it's better just to migrate the data and then only have a simple mapping to",
    "start": "1433559",
    "end": "1440360"
  },
  {
    "text": "the up up toate structure so you pretty much have to go through the same migration process with a schem database",
    "start": "1440360",
    "end": "1447600"
  },
  {
    "text": "as you do with a fixed schema database you get a bit more flexibility you don't have to do it every time but eventually",
    "start": "1447600",
    "end": "1453799"
  },
  {
    "text": "you're going to have to pay that cost and so again a common theme I here for",
    "start": "1453799",
    "end": "1459000"
  },
  {
    "text": "projects that have used schless databases is we still have to worry about migration it doesn't go away as a",
    "start": "1459000",
    "end": "1466960"
  },
  {
    "start": "1467000",
    "end": "1487000"
  },
  {
    "text": "problem but on on the whole use an explicit schema as much as",
    "start": "1467039",
    "end": "1472840"
  },
  {
    "text": "you can be very clear about what data you've expect to store in structures use",
    "start": "1472840",
    "end": "1478000"
  },
  {
    "text": "the implicit schemas really only in the places where you really need that ability to handle the nonuniform",
    "start": "1478000",
    "end": "1486240"
  },
  {
    "text": "data and that's the first part of the talk um if you want to review the stuff",
    "start": "1486240",
    "end": "1492559"
  },
  {
    "start": "1487000",
    "end": "1524000"
  },
  {
    "text": "that I've gone through um in general if you look at my talk notes um page on my",
    "start": "1492559",
    "end": "1497600"
  },
  {
    "text": "website point to where my notes are but I actually have a info deck version of",
    "start": "1497600",
    "end": "1502760"
  },
  {
    "text": "this talk that you can read through it's got all the reading stuff there not just me talking um so you got a better feel",
    "start": "1502760",
    "end": "1508760"
  },
  {
    "text": "for going through the material and that's the first",
    "start": "1508760",
    "end": "1514760"
  },
  {
    "text": "[Applause]",
    "start": "1516420",
    "end": "1519579"
  },
  {
    "text": "[Applause] one so for the second talk I'm going to shift into a completely different mode",
    "start": "1521990",
    "end": "1529440"
  },
  {
    "start": "1524000",
    "end": "1614000"
  },
  {
    "text": "first one was kind of very programy handson and this is going to be much more process like and talk a bit more",
    "start": "1529440",
    "end": "1535919"
  },
  {
    "text": "about agile stuff and it's this one is really very much um",
    "start": "1535919",
    "end": "1542960"
  },
  {
    "text": "influenced by a paper that appeared about a year ago um about levels of",
    "start": "1542960",
    "end": "1550720"
  },
  {
    "text": "agile fluency it's a paper was written by Diana LW and James Shaw to um people who",
    "start": "1550720",
    "end": "1558039"
  },
  {
    "text": "been involved in the agel world for for a great deal of time and I first saw it when they sent it around various people",
    "start": "1558039",
    "end": "1564760"
  },
  {
    "text": "just looking for comments and I asked them have you decided where you going to publish this paper and they said they hadn't and I",
    "start": "1564760",
    "end": "1571159"
  },
  {
    "text": "offered to put it on my site and then they ended up publishing it through Martin",
    "start": "1571159",
    "end": "1576399"
  },
  {
    "text": "f.com and I was very happy that they did that because I think it was a very good way of thinking about how teams adopt",
    "start": "1576399",
    "end": "1584360"
  },
  {
    "text": "and where teams want to be in the agile adoption process",
    "start": "1584360",
    "end": "1589679"
  },
  {
    "text": "and I'm going to talk about that but before I talk about that I'm going to talk about what I see as the essence of",
    "start": "1589679",
    "end": "1596559"
  },
  {
    "text": "what agile software development is about and I think it's important to talk about the essence because it's something that",
    "start": "1596559",
    "end": "1603720"
  },
  {
    "text": "easily gets lost in all of the Chinese Whispers and stuff that's gone from 10",
    "start": "1603720",
    "end": "1608960"
  },
  {
    "text": "years plus of the of the agile world so to think about there about what",
    "start": "1608960",
    "end": "1617080"
  },
  {
    "start": "1614000",
    "end": "1769000"
  },
  {
    "text": "agile means it's it's important to think about where it came from the ideas that kind of coales into",
    "start": "1617080",
    "end": "1624840"
  },
  {
    "text": "agile software development appeared in the 1990s and they were a result of a bunch",
    "start": "1624840",
    "end": "1630480"
  },
  {
    "text": "of people relatively independently doing their own things and developing stuff in",
    "start": "1630480",
    "end": "1636559"
  },
  {
    "text": "the '90s the general situation was projects are full of problems ah projects are full of problems now we",
    "start": "1636559",
    "end": "1643000"
  },
  {
    "text": "hope the agile is make things a little bit better but these problems would certainly very apparent then as well but",
    "start": "1643000",
    "end": "1650960"
  },
  {
    "text": "at the time there was a kind of expected idea of what the Cure was for those",
    "start": "1650960",
    "end": "1656320"
  },
  {
    "text": "problems and that was what we think of now as the plan driven processes um",
    "start": "1656320",
    "end": "1662240"
  },
  {
    "text": "capability maturity models very much Vis the idea of defined processes we need to",
    "start": "1662240",
    "end": "1669120"
  },
  {
    "text": "you know get get rid of the human element we need to Define steps that people can just follow we need to come",
    "start": "1669120",
    "end": "1675159"
  },
  {
    "text": "up with plans and designs in advance progam in is really just something we can kind of ship off to some minor",
    "start": "1675159",
    "end": "1682720"
  },
  {
    "text": "organization preferably in a poor country where we pay them less um and it",
    "start": "1682720",
    "end": "1688279"
  },
  {
    "text": "was really seen in that kind of white and that was sense of if we wanted to cure the problems of software",
    "start": "1688279",
    "end": "1694240"
  },
  {
    "text": "development that was the direction to go but the people who are working in the agile World said no we have a different",
    "start": "1694240",
    "end": "1701039"
  },
  {
    "text": "vision and it was a vision that was put together in in the agile Manifesto that",
    "start": "1701039",
    "end": "1706679"
  },
  {
    "text": "said we have a different way of thinking and when I sort of came across",
    "start": "1706679",
    "end": "1713200"
  },
  {
    "text": "agile methods in the late 90s um one of the things that struck me was how they",
    "start": "1713200",
    "end": "1719279"
  },
  {
    "text": "all related with each other and I ended up writing an article about this which I called the new methodology because I",
    "start": "1719279",
    "end": "1725279"
  },
  {
    "text": "wrote this before the agel manifesto came out and it was my attempt to try and synthesize together um the thinking",
    "start": "1725279",
    "end": "1732080"
  },
  {
    "text": "that led to Agile and the way I looked at it is that there was really a distinction between",
    "start": "1732080",
    "end": "1739039"
  },
  {
    "text": "agile and the plan driven approaches ways of thinking and there were two main areas where they differed the first was",
    "start": "1739039",
    "end": "1747039"
  },
  {
    "text": "that the agile world was adaptive in its approach of planning while the plan driven world was predictive and the",
    "start": "1747039",
    "end": "1754200"
  },
  {
    "text": "second was that the agile world was very much oriented around people in front while the plan driven world was around",
    "start": "1754200",
    "end": "1760480"
  },
  {
    "text": "the process of front and I'll explore what I mean by those things in a little bit more detail starting with plan",
    "start": "1760480",
    "end": "1769279"
  },
  {
    "start": "1769000",
    "end": "1819000"
  },
  {
    "text": "in the in the plan driven world it was very much operated on the basis of first you you",
    "start": "1769279",
    "end": "1776480"
  },
  {
    "text": "plan your work then you work your plan come up with a plan and then carry that",
    "start": "1776480",
    "end": "1783600"
  },
  {
    "text": "out and the two were very much separated steps and this is what I thought it was",
    "start": "1783600",
    "end": "1790200"
  },
  {
    "text": "predictive planning because the idea was if all went well everything goes",
    "start": "1790200",
    "end": "1795679"
  },
  {
    "text": "according to plan and in fact the way which flen processes typically measured success was according to plan whenever",
    "start": "1795679",
    "end": "1803360"
  },
  {
    "text": "you hear someone saying we were on time and on budget and a project and therefore we succeeded that's predictive",
    "start": "1803360",
    "end": "1809880"
  },
  {
    "text": "planning thinking it says success is we follow what went on in the",
    "start": "1809880",
    "end": "1816039"
  },
  {
    "text": "plan and this is all very well but the problem is that the plans that people",
    "start": "1816039",
    "end": "1821080"
  },
  {
    "start": "1819000",
    "end": "1892000"
  },
  {
    "text": "made had a very strong dependency on the fact that they understood what the requirements were hence even the word",
    "start": "1821080",
    "end": "1828399"
  },
  {
    "text": "requirements if you're going to come up with a plan for how you're going to do something you need to know what it is you're trying to",
    "start": "1828399",
    "end": "1834120"
  },
  {
    "text": "build but the problem of course is not just does this tie your plan out of that",
    "start": "1834120",
    "end": "1840159"
  },
  {
    "text": "your entire software development process gets tied into it",
    "start": "1840159",
    "end": "1845240"
  },
  {
    "text": "and the problem then is do we ever actually have stable requirements I",
    "start": "1845240",
    "end": "1851360"
  },
  {
    "text": "always like to do this how many of you have been on a project recently where your requirements have been very unstable they keep changing a lot",
    "start": "1851360",
    "end": "1858919"
  },
  {
    "text": "yeah nearly everybody in right um and that's the pro that's the kind of the",
    "start": "1858919",
    "end": "1864639"
  },
  {
    "text": "where this whole thing breaks down so the pl driven people said okay we've got to stabilize we've got to get",
    "start": "1864639",
    "end": "1870919"
  },
  {
    "text": "rid of this requirements churn and we come up with all sorts of techniques about getting rid of that and stopping",
    "start": "1870919",
    "end": "1877559"
  },
  {
    "text": "it the agile approach is to shift away from that and say well if software",
    "start": "1877559",
    "end": "1882760"
  },
  {
    "text": "development is dependent upon requirement stability and and that's causing all of these problems",
    "start": "1882760",
    "end": "1888480"
  },
  {
    "text": "maybe what we need to do is break dependency and instead find a way to get",
    "start": "1888480",
    "end": "1894240"
  },
  {
    "start": "1892000",
    "end": "1993000"
  },
  {
    "text": "rid of that link so hence the subtext the subtitle",
    "start": "1894240",
    "end": "1900440"
  },
  {
    "text": "of Kent Beck's book on Extreme programming was Embrace change let's look at change as something that we can",
    "start": "1900440",
    "end": "1906639"
  },
  {
    "text": "work with instead of something we have to prevent and that shifting mindset is",
    "start": "1906639",
    "end": "1912159"
  },
  {
    "text": "very fundamental to the whole thinking of of agile and in fact it even goes",
    "start": "1912159",
    "end": "1917360"
  },
  {
    "text": "beyond that to my favorite quote of Mary",
    "start": "1917360",
    "end": "1922120"
  },
  {
    "text": "popps let's actually take that change and see it as something good something that gives us advantages because we can",
    "start": "1923559",
    "end": "1930559"
  },
  {
    "text": "respond to about and so as a result if you're in an agile",
    "start": "1930559",
    "end": "1936440"
  },
  {
    "text": "environment you can't claim success as going according to plan and in fact if",
    "start": "1936440",
    "end": "1941639"
  },
  {
    "text": "anybody says when project according to plan that's really not at all agile thinking agile thinking says success has",
    "start": "1941639",
    "end": "1948760"
  },
  {
    "text": "to be defined something differently you know like we produced some useful value",
    "start": "1948760",
    "end": "1953960"
  },
  {
    "text": "for the business or something of that kind whether it was according to plan or not is kind of irrelevant because the plan has changed 20 or 30 different",
    "start": "1953960",
    "end": "1961000"
  },
  {
    "text": "times since you actually did the first version of the plan the other notion that I rather",
    "start": "1961000",
    "end": "1967480"
  },
  {
    "text": "liked was a project manager who said to me once that a plan is rather like a lettuce it looks good on the day you got",
    "start": "1967480",
    "end": "1974320"
  },
  {
    "text": "it after a few days it's looking rather wrinkly and crummy around the edges and",
    "start": "1974320",
    "end": "1979440"
  },
  {
    "text": "after a couple of weeks it's unrecognizable and that is again a kind of agile thinking doesn't mean you don't",
    "start": "1979440",
    "end": "1986360"
  },
  {
    "text": "plan you plan a lot but it's a changing thing it's a very different attitude you take towards it so that says that",
    "start": "1986360",
    "end": "1994080"
  },
  {
    "start": "1993000",
    "end": "2098000"
  },
  {
    "text": "planning is adaptive it's about understanding the consequences of",
    "start": "1994080",
    "end": "1999360"
  },
  {
    "text": "change and making informed and controlled decision to that will change instead of a predictive thing that says",
    "start": "1999360",
    "end": "2005320"
  },
  {
    "text": "this is how things ought to work out and of course that's part of what makes it hard to go down the aile route we would",
    "start": "2005320",
    "end": "2012760"
  },
  {
    "text": "like it if things go according to plan we like predictive planning we hate it",
    "start": "2012760",
    "end": "2017960"
  },
  {
    "text": "when most people tend to dislike things that are being unpredictable in this",
    "start": "2017960",
    "end": "2023320"
  },
  {
    "text": "way the agile way of mindset I think is saying well yeah it would be nice if we",
    "start": "2023320",
    "end": "2028840"
  },
  {
    "text": "could do predictive plans we would all love it that way but sadly reality forces us to work in a different mod of",
    "start": "2028840",
    "end": "2035760"
  },
  {
    "text": "mode entirely but it's not it's an easy thing to say not necessarily an easy thing to",
    "start": "2035760",
    "end": "2042240"
  },
  {
    "text": "do and if that distinction is easy to say but hard to do the second one the",
    "start": "2042240",
    "end": "2049638"
  },
  {
    "text": "shift to people thirst and process thirst is an even part and even stronger",
    "start": "2049639",
    "end": "2055839"
  },
  {
    "text": "one now here Linda spoiled my usual line which used to say who is this person who",
    "start": "2055839",
    "end": "2062079"
  },
  {
    "text": "is this person Taylor Taylor winow Taylor uh um",
    "start": "2062079",
    "end": "2069158"
  },
  {
    "text": "and as Linda said he was the guy who came up with Scientific Management um",
    "start": "2069159",
    "end": "2074480"
  },
  {
    "text": "basically saying now we in the past in the past before he started operating in",
    "start": "2074480",
    "end": "2080398"
  },
  {
    "text": "in the late 19th century people would decide how to do work themselves the manual but now we come up with a system",
    "start": "2080399",
    "end": "2088800"
  },
  {
    "text": "and we make me the system essentially what it says that if we want to if we think about this in",
    "start": "2088800",
    "end": "2094878"
  },
  {
    "text": "software process terms we say well we Define software process as some combination of steps and links between",
    "start": "2094879",
    "end": "2103040"
  },
  {
    "text": "steps we now in the late 90s we saw lots of diagrams like this except there would be words of course in the boxes but",
    "start": "2103040",
    "end": "2109960"
  },
  {
    "text": "words usually didn't really mean that much um so I show them without and so we",
    "start": "2109960",
    "end": "2115440"
  },
  {
    "text": "got a bunch of steps and we find a bunch of people that are crudely classified either project managers programmers",
    "start": "2115440",
    "end": "2122800"
  },
  {
    "text": "testers business analysts whatever your classification wants to be and the way for the project team is we get all the",
    "start": "2122800",
    "end": "2130960"
  },
  {
    "text": "people and we fit them into those appropriate boxes the notion is the process comes",
    "start": "2130960",
    "end": "2137560"
  },
  {
    "text": "first the people then just SWAT in and go with it now in the agile mon completely",
    "start": "2137560",
    "end": "2144760"
  },
  {
    "text": "reverses that it says if you want to do a project in agile terms the first thing",
    "start": "2144760",
    "end": "2149800"
  },
  {
    "text": "you think about is assembling a team of people who are individually good and work well together at a human level that",
    "start": "2149800",
    "end": "2156680"
  },
  {
    "text": "they get on with each other as it were and then once you've assembled your",
    "start": "2156680",
    "end": "2161920"
  },
  {
    "text": "team the team decides what process they wish to follow they come up with a",
    "start": "2161920",
    "end": "2167040"
  },
  {
    "text": "process that's suitable for the problem they're working on and suitable for them",
    "start": "2167040",
    "end": "2172200"
  },
  {
    "text": "different people will choose different ways of working because different people are different and when people work",
    "start": "2172200",
    "end": "2177760"
  },
  {
    "text": "together they will work in different kinds of ways and that's why in my view it's",
    "start": "2177760",
    "end": "2184079"
  },
  {
    "text": "completely wrong to in to push and and command the team to go agile a team has",
    "start": "2184079",
    "end": "2191079"
  },
  {
    "text": "to choose it themselves if you're pushing the process of the team that's fundamentally an un agile",
    "start": "2191079",
    "end": "2199480"
  },
  {
    "text": "idea and so a lot of the time when I hear people saying well agile says I've got to do this and therefore the team",
    "start": "2199920",
    "end": "2205920"
  },
  {
    "text": "has to follow certain steps that's where the thinking has gone backwards the team",
    "start": "2205920",
    "end": "2211760"
  },
  {
    "text": "has to decide what to try out and if a team chooses not to do Agile then that",
    "start": "2211760",
    "end": "2217400"
  },
  {
    "text": "cu it's not going to work for them that's fine too it's important that the team makes that",
    "start": "2217400",
    "end": "2224079"
  },
  {
    "text": "decision another element of of this as well is that it says that in the end the quality of the",
    "start": "2224079",
    "end": "2231680"
  },
  {
    "text": "software team is going to depend very much upon the quality of individuals in that team a lot of the thinking in the",
    "start": "2231680",
    "end": "2239240"
  },
  {
    "text": "plan driven approach was to say we actually don't care about having good people in fact good people are kind of",
    "start": "2239240",
    "end": "2245160"
  },
  {
    "text": "awkward so we'd rather not have them and because they tend to be argumentative and they want to do their own thing and",
    "start": "2245160",
    "end": "2251920"
  },
  {
    "text": "they cost a lot more so we want to have a process that works pretty much anybody and part of the agile thinking",
    "start": "2251920",
    "end": "2258960"
  },
  {
    "text": "was to say no that doesn't necessarily work terribly well um and in fact if you",
    "start": "2258960",
    "end": "2264119"
  },
  {
    "text": "run run to have a very effective group of people you need to have a you",
    "start": "2264119",
    "end": "2269760"
  },
  {
    "text": "actually need to go out and get good people and then those good people will want to work in a particular way hence",
    "start": "2269760",
    "end": "2275880"
  },
  {
    "text": "the need to have them Define how the process works for them and this of course appes I think",
    "start": "2275880",
    "end": "2282280"
  },
  {
    "text": "well at the at the limits of um where or where when or where you should or",
    "start": "2282280",
    "end": "2288319"
  },
  {
    "text": "shouldn't use agile processes um in the early days when we",
    "start": "2288319",
    "end": "2293359"
  },
  {
    "text": "said where are the boundaries where agile is an appropriate process to use people might look at the kind of problem",
    "start": "2293359",
    "end": "2300359"
  },
  {
    "text": "or the size of team has been the typical boundary areas and most of those boundaries have been crossed but the one",
    "start": "2300359",
    "end": "2306640"
  },
  {
    "text": "boundary that has being very very solid really lays in the nature and culture of",
    "start": "2306640",
    "end": "2312280"
  },
  {
    "text": "an organization if you've got an environment that's very distrustful but doesn't really um is interested in being",
    "start": "2312280",
    "end": "2320520"
  },
  {
    "text": "people oriented that will be a hard barrier to making agile work it's that",
    "start": "2320520",
    "end": "2326160"
  },
  {
    "text": "cultural element that really is the dominant one and certainly we've seen that part of organizations we've spent a",
    "start": "2326160",
    "end": "2332119"
  },
  {
    "text": "lot of time forwards helping people go the agile path and that is the clearest",
    "start": "2332119",
    "end": "2338880"
  },
  {
    "text": "indication of where that thing goes wrong if you're in an organization where you can't build up the trust and you",
    "start": "2338880",
    "end": "2345920"
  },
  {
    "text": "can't build up the the mutual respect then that's a huge barrier to have to overcome and cultural change of",
    "start": "2345920",
    "end": "2352520"
  },
  {
    "text": "organizations is the longest and hardest thing to have to do and that I think is",
    "start": "2352520",
    "end": "2357760"
  },
  {
    "text": "the biggest barrier to but let's move on to the the the next",
    "start": "2357760",
    "end": "2364400"
  },
  {
    "text": "part which is this notion of fluency uh said this is a a model that was developed by di L James sh it was one",
    "start": "2364400",
    "end": "2371400"
  },
  {
    "text": "that I particularly liked when I saw it and they said that lumy is really as",
    "start": "2371400",
    "end": "2377040"
  },
  {
    "text": "they look at the various teams that they've seen they they have observed what they defined as four um star points",
    "start": "2377040",
    "end": "2385920"
  },
  {
    "text": "of how the teams operate they're very careful to avoid maturity levels uh and",
    "start": "2385920",
    "end": "2391079"
  },
  {
    "text": "things of that kind in their arguments I'll try not to use that word although it kind of obviously leads to that point",
    "start": "2391079",
    "end": "2397119"
  },
  {
    "text": "um every team has to pass through these um star points but teams don't always",
    "start": "2397119",
    "end": "2403720"
  },
  {
    "text": "make it all the way through and it's often okay for them want to make it all the way through so the first not level as it",
    "start": "2403720",
    "end": "2411920"
  },
  {
    "start": "2409000",
    "end": "2556000"
  },
  {
    "text": "were the one start point is typically a team that is getting the kind of basics",
    "start": "2411920",
    "end": "2419560"
  },
  {
    "text": "of the management processes of agile in place they've broken down work into",
    "start": "2419560",
    "end": "2424920"
  },
  {
    "text": "iterations um they have a certain degree of some degree of self-organization it",
    "start": "2424920",
    "end": "2430680"
  },
  {
    "text": "may not be that strong but the key thing is they're choosing work in small",
    "start": "2430680",
    "end": "2436119"
  },
  {
    "text": "chunks um usually with some kind of iterative approach and then delivering those individual chunks and they have",
    "start": "2436119",
    "end": "2442720"
  },
  {
    "text": "the ability to begin to shift direction that adaptive planning thing is beginning to kick in where they can",
    "start": "2442720",
    "end": "2448680"
  },
  {
    "text": "actually change their minds and they're starting to talk about their what",
    "start": "2448680",
    "end": "2454160"
  },
  {
    "text": "they're doing in terms of business features as a opposed to software layers and things of that",
    "start": "2454160",
    "end": "2460280"
  },
  {
    "text": "kind so the great benefit of operating at this level is you have this",
    "start": "2460280",
    "end": "2466040"
  },
  {
    "text": "visibility as to what the team is doing even if you're not part of the team itself you can begin to see what",
    "start": "2466040",
    "end": "2471160"
  },
  {
    "text": "features are being built what order they get built in and you've got some ability to control that you begin to say I want",
    "start": "2471160",
    "end": "2477280"
  },
  {
    "text": "to push this one feature forward push this one",
    "start": "2477280",
    "end": "2482400"
  },
  {
    "text": "back and when the team reports how well it's doing it's typically doing that in terms of these kind of business value",
    "start": "2482400",
    "end": "2489480"
  },
  {
    "text": "driven features that are describing it now to get here it requires as any of",
    "start": "2489480",
    "end": "2496599"
  },
  {
    "text": "these kinds of does a certain degree of investment we got to invest in how the team operates and how it develops and",
    "start": "2496599",
    "end": "2503400"
  },
  {
    "text": "also in kind of the basic work processes to get there and it's going to take you a certain amount of time their",
    "start": "2503400",
    "end": "2509119"
  },
  {
    "text": "observation is to get to this point teams usually take a few months to reach this kind of point but a large amount of",
    "start": "2509119",
    "end": "2516359"
  },
  {
    "text": "teams Reach This level and in fact stay at this level um you ver estimate was",
    "start": "2516359",
    "end": "2522160"
  },
  {
    "text": "was just under half of teams actually get this points you could also look at this point as this is typical of a team",
    "start": "2522160",
    "end": "2528880"
  },
  {
    "text": "that has taken on scrum and just vanilla scrum as it were",
    "start": "2528880",
    "end": "2534440"
  },
  {
    "text": "it's doing the various things that are described by um scrum but it hasn't gone for the some more extra things that you",
    "start": "2534440",
    "end": "2541480"
  },
  {
    "text": "might want to build in in particular the technical practices a team like this has",
    "start": "2541480",
    "end": "2546720"
  },
  {
    "text": "the management side of scrum sorted out but not any of the technical things such as test development or things of that",
    "start": "2546720",
    "end": "2554280"
  },
  {
    "text": "kind to go to that level that is their their second star level and this is a",
    "start": "2554280",
    "end": "2561680"
  },
  {
    "text": "hard step to do less teams get this farar and also it takes a good bit",
    "start": "2561680",
    "end": "2567760"
  },
  {
    "text": "longer we're talking perhaps about a couple of years of this point the investment is now much higher because",
    "start": "2567760",
    "end": "2574680"
  },
  {
    "text": "you've got to develop all of these technical skills You' got to figure out what is continuous integration what is",
    "start": "2574680",
    "end": "2579839"
  },
  {
    "text": "continuous delivery get those working you got to get refactoring straight you got to get test driven development straight you may want to explore things",
    "start": "2579839",
    "end": "2586520"
  },
  {
    "text": "like care programming things of that kind you got to understand how evolutionary design works and be able to",
    "start": "2586520",
    "end": "2592280"
  },
  {
    "text": "operate in that kind of way but the benefit you get from it is",
    "start": "2592280",
    "end": "2598079"
  },
  {
    "text": "how you get a much more productive team more noly you could be get a team with a lot less",
    "start": "2598079",
    "end": "2603839"
  },
  {
    "text": "defects um this is one of the things that certainly stes me very much when I talk to Agile teams um often what I hear",
    "start": "2603839",
    "end": "2612920"
  },
  {
    "text": "from reasonably well performing teams on the technical level is how they go into production with far less defects and is",
    "start": "2612920",
    "end": "2618839"
  },
  {
    "text": "typical for their organization that is kind of an interesting thing because something that",
    "start": "2618839",
    "end": "2623880"
  },
  {
    "text": "people often say oh well agile's kind of Loosey Goosey and not very and you would",
    "start": "2623880",
    "end": "2629319"
  },
  {
    "text": "expect you get problems with quality but actually a good performing agile team",
    "start": "2629319",
    "end": "2634520"
  },
  {
    "text": "will actually have strikingly low def and that's because of the emphas of things like P and development and these",
    "start": "2634520",
    "end": "2641160"
  },
  {
    "text": "other technical practices the shift that this leades",
    "start": "2641160",
    "end": "2646559"
  },
  {
    "text": "from visible sense is that you get to the point where a team can effectively",
    "start": "2646559",
    "end": "2652400"
  },
  {
    "text": "do their shipping they're delivering not on whether the software is ready but when business wants those shipments to",
    "start": "2652400",
    "end": "2659280"
  },
  {
    "text": "make this is what the the phrase that they use is the market Cadence it's basically saying we can go live whenever",
    "start": "2659280",
    "end": "2666280"
  },
  {
    "text": "you want to it's really now a business decision not a technical limitation and this is where you see teams shipping",
    "start": "2666280",
    "end": "2672920"
  },
  {
    "text": "maybe every couple of weeks and going into production or even more frequently quite often run into teams where um they",
    "start": "2672920",
    "end": "2680400"
  },
  {
    "text": "will commit to production every day or something of that kind and that is because the technical practices the",
    "start": "2680400",
    "end": "2686800"
  },
  {
    "text": "quality has allowed them to get to the point where they can do this reliably now describ these two levels",
    "start": "2686800",
    "end": "2693960"
  },
  {
    "text": "and obviously the second level is somewhat Superior to that first level but not as you as I've indicated not",
    "start": "2693960",
    "end": "2699480"
  },
  {
    "text": "every team gets to that second level and perhaps not every team wants to try and get to that level there is significant",
    "start": "2699480",
    "end": "2705520"
  },
  {
    "text": "investment in getting to that second level and you will typically pass through the first one before you get to",
    "start": "2705520",
    "end": "2711040"
  },
  {
    "text": "the second one but you worth thinking when you begin do I want to try and aim",
    "start": "2711040",
    "end": "2716480"
  },
  {
    "text": "at that second level because you've got to make those kinds of Investments on the technical practices early",
    "start": "2716480",
    "end": "2722760"
  },
  {
    "text": "on the third level in their bubble this really switches more into the",
    "start": "2722760",
    "end": "2729680"
  },
  {
    "start": "2723000",
    "end": "2904000"
  },
  {
    "text": "thinking of this is where you begin to get into the Lean Startup kind of territory but says at this",
    "start": "2729680",
    "end": "2736359"
  },
  {
    "text": "point up to the second level you're very much receptive of what the business of",
    "start": "2736359",
    "end": "2741720"
  },
  {
    "text": "what business people say this is what we should be building you have a good conversations but you're very much more",
    "start": "2741720",
    "end": "2748520"
  },
  {
    "text": "the receiver of ideas once you get to the third level you're beginning to initiate them much",
    "start": "2748520",
    "end": "2754839"
  },
  {
    "text": "more the team is actually taking much more active role in saying this is what we should be building and they're using",
    "start": "2754839",
    "end": "2761520"
  },
  {
    "text": "techniques that come out of lead startups such as AB testing and things of that kind to try and decide what the",
    "start": "2761520",
    "end": "2766880"
  },
  {
    "text": "good thing is to do but reaching this point is a lot more effort both in",
    "start": "2766880",
    "end": "2774040"
  },
  {
    "text": "amounts of time as you can see there um several years and very few teams",
    "start": "2774040",
    "end": "2779720"
  },
  {
    "text": "actually get this thought and there's a large amount of investment involved because in order to do this people",
    "start": "2779720",
    "end": "2786920"
  },
  {
    "text": "people within the team must be much more aware of what's going on in terms of the business and they have to take a much",
    "start": "2786920",
    "end": "2793240"
  },
  {
    "text": "more visible role in the organization of the overall company the first two levels",
    "start": "2793240",
    "end": "2799839"
  },
  {
    "text": "you can kind of do within a relatively small bubble um it's really having a good software development engine is",
    "start": "2799839",
    "end": "2806480"
  },
  {
    "text": "really what that second level says this means taking it further out as a bigger impact on an organization so a lot of",
    "start": "2806480",
    "end": "2813680"
  },
  {
    "text": "organizations are just not ready um to go this um third path and often I think",
    "start": "2813680",
    "end": "2819480"
  },
  {
    "text": "it's important when again when working through our child de side are you in an organization that could really tolerably",
    "start": "2819480",
    "end": "2826079"
  },
  {
    "text": "even do this third level are they ready to take this on in most organizations",
    "start": "2826079",
    "end": "2831599"
  },
  {
    "text": "that answer is not going to be yes they're going to say no we're not at a point where we could actually go for this",
    "start": "2831599",
    "end": "2837960"
  },
  {
    "text": "point but the advantage and the be benefit of this is you get a much um you",
    "start": "2837960",
    "end": "2844480"
  },
  {
    "text": "get much more focus on building things are more valuable because the team is making um is much more engaged in the",
    "start": "2844480",
    "end": "2852040"
  },
  {
    "text": "process of making these kinds of decisions now the fourth level they have",
    "start": "2852040",
    "end": "2858559"
  },
  {
    "text": "is really a much more broader organizational view this is I mean the",
    "start": "2858559",
    "end": "2864720"
  },
  {
    "text": "test at this level is this is a team that would uh spontaneously disband the",
    "start": "2864720",
    "end": "2870040"
  },
  {
    "text": "project they're working on because they realize the entire program of work that they're doing is the most valuable thing",
    "start": "2870040",
    "end": "2875160"
  },
  {
    "text": "for the business and they should dis expand themselves and work on more profitable things it's questionable",
    "start": "2875160",
    "end": "2881000"
  },
  {
    "text": "whether they whether this really ought to even be in there because they said they haven't really seen this at this",
    "start": "2881000",
    "end": "2886440"
  },
  {
    "text": "point and the comment in the paper is um where we've seen this we've only seen this in small organizations where really",
    "start": "2886440",
    "end": "2893559"
  },
  {
    "text": "you can't tell the difference between the third and fourth level so this is a some speculative idea of where that next",
    "start": "2893559",
    "end": "2899319"
  },
  {
    "text": "level might be and that's why I'm not going to spend much time on it but I think that that model of",
    "start": "2899319",
    "end": "2906280"
  },
  {
    "text": "thinking about about agile um fluency is a useful one to think about",
    "start": "2906280",
    "end": "2913200"
  },
  {
    "text": "it's worth it's it's certainly something that seems to match a lot of people's experience in practice as I've talked to",
    "start": "2913200",
    "end": "2919480"
  },
  {
    "text": "people a lot of people have said yes this model makes sense to me it's something that I've seen resonates in my",
    "start": "2919480",
    "end": "2925200"
  },
  {
    "text": "experience and it also gives you an idea of where you might be or where you and",
    "start": "2925200",
    "end": "2930400"
  },
  {
    "text": "where you want to be going within um the organization that you're part of what is a realistic to aim at what do you what",
    "start": "2930400",
    "end": "2939240"
  },
  {
    "text": "should be your expectations about how long it takes to get there and I think it Rams home the point that this is not",
    "start": "2939240",
    "end": "2945200"
  },
  {
    "text": "a rapid process um in order to get even to a two Star level you're taking",
    "start": "2945200",
    "end": "2951200"
  },
  {
    "text": "typically a couple of years to team to actually get to that kind of Point It's Not Unusual to get spend a lot of time",
    "start": "2951200",
    "end": "2957680"
  },
  {
    "text": "getting there and I think that's a useful Point thing to point out to a lot of people who like to feel that going",
    "start": "2957680",
    "end": "2964280"
  },
  {
    "text": "agile is really very straightforward usually Tru isn't because that shift from saying we want our planning process",
    "start": "2964280",
    "end": "2971440"
  },
  {
    "text": "not to be a predictive thing but a much more adaptive thing and we really are going to put people first and let them",
    "start": "2971440",
    "end": "2977359"
  },
  {
    "text": "decide how they want to work those are very big shifts shifts that",
    "start": "2977359",
    "end": "2982400"
  },
  {
    "text": "organizations don't find easy so that's uh all I have I guess",
    "start": "2982400",
    "end": "2988680"
  },
  {
    "text": "there'll be some questions I don't know whether there's much time for questions but I'll let I know beside that and uh",
    "start": "2988680",
    "end": "2995559"
  },
  {
    "text": "from there",
    "start": "2995559",
    "end": "2998640"
  }
]