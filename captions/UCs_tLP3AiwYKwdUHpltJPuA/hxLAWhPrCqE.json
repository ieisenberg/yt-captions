[
  {
    "start": "0",
    "end": "225000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "well thank you so much Adam you already asked the question about kubernetes one",
    "start": "15440",
    "end": "20779"
  },
  {
    "text": "more question that I like to ask is who knows excellent framework so quite a few",
    "start": "20779",
    "end": "25820"
  },
  {
    "text": "some very enthusiastic waves from Frank thank you for so my name is Franz von",
    "start": "25820",
    "end": "32719"
  },
  {
    "text": "bulow I'm an evangelist at exonic exonic is still very new company we were founded about a year ago and it's a",
    "start": "32719",
    "end": "38090"
  },
  {
    "text": "company around the open-source axon framework and we'll tell a little bit more about action framework later on in",
    "start": "38090",
    "end": "44360"
  },
  {
    "text": "this presentation I'd like to start by very quickly go over the question why would you like to use micro services",
    "start": "44360",
    "end": "50089"
  },
  {
    "text": "what are people trying to get out of that because that will influence later on when we think about micro services",
    "start": "50089",
    "end": "56649"
  },
  {
    "text": "and look at why kubernetes some of you are already using kubernetes in production so you would know but it's",
    "start": "56649",
    "end": "62239"
  },
  {
    "text": "good to have shared understanding about these things that will be quite quick then I'd like to go to a sample",
    "start": "62239",
    "end": "68330"
  },
  {
    "text": "application a very simple sample application I've uploaded a source code to get up as well so you can can have a",
    "start": "68330",
    "end": "74360"
  },
  {
    "text": "look at it and then examine how we can split that sample application into micro",
    "start": "74360",
    "end": "79430"
  },
  {
    "text": "services what will be the good parts to split it in and how they should communicate and how we can deploy all",
    "start": "79430",
    "end": "84950"
  },
  {
    "text": "that stuff in kubernetes and make it work and make it scalable so that's the stuff I'd like to cover so if you look",
    "start": "84950",
    "end": "91220"
  },
  {
    "text": "at why micro services I think there are two key drivers and you need drivers right because the alternative to market",
    "start": "91220",
    "end": "96410"
  },
  {
    "text": "services would be to deploy a monolith a monolith is way simpler to manage and deploy and run down marker services so",
    "start": "96410",
    "end": "103160"
  },
  {
    "text": "you need to have a good reason to make stuff so complex and I think there are good reasons one major driver behind",
    "start": "103160",
    "end": "110480"
  },
  {
    "text": "marker services is the need for agility as an industry we have been looking at that for many years introducing stuff",
    "start": "110480",
    "end": "116090"
  },
  {
    "text": "like agile and scrum and DevOps and all that kind of stuff all geared towards",
    "start": "116090",
    "end": "121310"
  },
  {
    "text": "being able to push new business functionality quicker into production but if at the end you have this very big",
    "start": "121310",
    "end": "128629"
  },
  {
    "text": "monolith that takes a month to test before you can put it into production you will never reach that actual agility",
    "start": "128629",
    "end": "134120"
  },
  {
    "text": "so very big driver behind marker services to keep your units small so you can update them independently and add",
    "start": "134120",
    "end": "139730"
  },
  {
    "text": "four Jannetty our main driver is scalability if your business is really successful",
    "start": "139730",
    "end": "145799"
  },
  {
    "text": "and you're gonna need to process many transactions it's great if you can simply add notes to your system and make",
    "start": "145799",
    "end": "152340"
  },
  {
    "text": "it do more work without having to rethink your entire architecture or being limited to scaling up using more",
    "start": "152340",
    "end": "158909"
  },
  {
    "text": "heavy hardware so I think those are the main drivers between behind micro services so if we're going to think",
    "start": "158909",
    "end": "164909"
  },
  {
    "text": "about what's good and bad practice in that context I think we should keep these goals in mind",
    "start": "164909",
    "end": "170840"
  },
  {
    "text": "so why could burn it is that so it starts with our need to deploy micro services we want to do that for the",
    "start": "170840",
    "end": "176670"
  },
  {
    "text": "reasons we just covered so if you're going to deploy marker services you need some isolation between them to make sure",
    "start": "176670",
    "end": "185159"
  },
  {
    "text": "they're technically independent but but separate virtual physical machines is too heavy because you're going to have",
    "start": "185159",
    "end": "190739"
  },
  {
    "text": "many marker services so that's going to create too much overhead so what are we",
    "start": "190739",
    "end": "195900"
  },
  {
    "text": "going to do we're going to use docker I'm going to create containers to run these micro services but when that means",
    "start": "195900",
    "end": "202590"
  },
  {
    "text": "we need to manage many containers we need to make sure they run that we can scale them that it can communicate that",
    "start": "202590",
    "end": "208560"
  },
  {
    "text": "we have fill overload balancing all that kind of stuff well that's exactly the stuff that kubernetes manages for us and",
    "start": "208560",
    "end": "214949"
  },
  {
    "text": "so that's that's where it sits there are multiple alternatives to kubernetes but kubernetes seems to have kind of won",
    "start": "214949",
    "end": "220919"
  },
  {
    "text": "this space and quickly becoming a standard there so what does kubernetes",
    "start": "220919",
    "end": "227280"
  },
  {
    "start": "225000",
    "end": "352000"
  },
  {
    "text": "look like and in the center of it are containers ultimately it's a tool for",
    "start": "227280",
    "end": "232290"
  },
  {
    "text": "managing containers it can run these containers for you so to run these containers you spin up a kubernetes",
    "start": "232290",
    "end": "238319"
  },
  {
    "text": "cluster that consists of multiple worker nodes and communities will make sure that containers are actually being",
    "start": "238319",
    "end": "244859"
  },
  {
    "text": "executed all one of these worker nodes so you don't have to care about that anymore so how do you get a kubernetes",
    "start": "244859",
    "end": "251129"
  },
  {
    "text": "cluster well you can of course install that from scratch yourself that's entirely possible or you can use many",
    "start": "251129",
    "end": "256650"
  },
  {
    "text": "cube which is like a small communities deployment for running on an individual laptop for testing purposes but you can",
    "start": "256650",
    "end": "264210"
  },
  {
    "text": "also purchase managed communities Google was the first one to offer that a google",
    "start": "264210",
    "end": "269280"
  },
  {
    "text": "kubernetes engine but nowadays AWS and I've also started offering that so it's",
    "start": "269280",
    "end": "275639"
  },
  {
    "text": "actually possible to spin up a kubernetes cluster in just five minutes and I've actually done so just prior to",
    "start": "275639",
    "end": "280650"
  },
  {
    "text": "this presentation to have a fresh cluster for demoing later on now on top",
    "start": "280650",
    "end": "287400"
  },
  {
    "text": "of containers it has a couple of no cup of concepts that describe how containers are actually being executed on that",
    "start": "287400",
    "end": "293819"
  },
  {
    "text": "kubernetes cluster importantly it has the notion of ports supports consist of one or more containers that always have",
    "start": "293819",
    "end": "300210"
  },
  {
    "text": "to be deployed in tandem so you talk to one another ports are described or managed through",
    "start": "300210",
    "end": "306960"
  },
  {
    "text": "as workloads describe parser and controller and that ultimately determines the replication of pods so if",
    "start": "306960",
    "end": "313770"
  },
  {
    "text": "you want to have a particular service deploy it three times you would have a deployment controller saying I want",
    "start": "313770",
    "end": "320189"
  },
  {
    "text": "three instances of this bot and that's where you would do the auto scaling so you could say I want to have more",
    "start": "320189",
    "end": "325919"
  },
  {
    "text": "instances of this or less or depending on the load what we'll look at that in an example they were wrong and then to",
    "start": "325919",
    "end": "332759"
  },
  {
    "text": "make everything to tie everything together we have a notion of services to make the ports talk to one another over",
    "start": "332759",
    "end": "338189"
  },
  {
    "text": "the network and we now have a notion of volumes to enable the pulse to store our persistent data so much more to tell",
    "start": "338189",
    "end": "346289"
  },
  {
    "text": "about communities of course but in essence if it's new to you and this would be the essential part now let's",
    "start": "346289",
    "end": "354719"
  },
  {
    "start": "352000",
    "end": "385000"
  },
  {
    "text": "look at that sample application so it's a super simple application it's the simplest thing that I could think of",
    "start": "354719",
    "end": "361050"
  },
  {
    "text": "that would still be complex enough to show some of these micro services concept that I want to discuss and it's",
    "start": "361050",
    "end": "366599"
  },
  {
    "text": "about gift cards so gift cards are issued at a certain value if you buy a",
    "start": "366599",
    "end": "372300"
  },
  {
    "text": "gift card to give to someone and then after you've giving that that gift card to someone they can use it to buy stuff",
    "start": "372300",
    "end": "378089"
  },
  {
    "text": "so that's the Redeem process so essentially there are just two things going on in this domain gift cards are",
    "start": "378089",
    "end": "383669"
  },
  {
    "text": "being issued and then being redeemed very simple we've created a sample application around that topic it has",
    "start": "383669",
    "end": "390149"
  },
  {
    "start": "385000",
    "end": "416000"
  },
  {
    "text": "just one screen and we see it here and now so you can issue a single gift card",
    "start": "390149",
    "end": "395279"
  },
  {
    "text": "that's the command window to the left in this case we're issuing demo card one you can redeem against cards that have",
    "start": "395279",
    "end": "402599"
  },
  {
    "text": "been issued to the right and then in the bottom we see an overview of the current state of gift",
    "start": "402599",
    "end": "407840"
  },
  {
    "text": "cards so it's just a table showing the gift cards that have been issued and a remaining value so it's a very simple",
    "start": "407840",
    "end": "413960"
  },
  {
    "text": "sample application and you can download the source code later on so right now",
    "start": "413960",
    "end": "419840"
  },
  {
    "start": "416000",
    "end": "582000"
  },
  {
    "text": "that's initially a monolith right so we have a data store in this case for the sound publication just using an h2",
    "start": "419840",
    "end": "425570"
  },
  {
    "text": "database we access the application through a browser and it's just one thing running in fact it's running on",
    "start": "425570",
    "end": "430790"
  },
  {
    "text": "spring boot so I want to look at how we can transform that into a Microsoft",
    "start": "430790",
    "end": "436610"
  },
  {
    "text": "System and that means that we need to decide on how to split this what would be an appropriate segmentation of this",
    "start": "436610",
    "end": "443150"
  },
  {
    "text": "monolith once we have segmented it how are these components going to talk to",
    "start": "443150",
    "end": "449480"
  },
  {
    "text": "one another so how is messaging going to work now finally we need to actually do that so I want to cover all these three",
    "start": "449480",
    "end": "455750"
  },
  {
    "text": "topics looking at the first part splitting it up very the obvious split",
    "start": "455750",
    "end": "462230"
  },
  {
    "text": "would be to pull out the business logic and the GUI that's just a good practice",
    "start": "462230",
    "end": "467500"
  },
  {
    "text": "clearly separated concerns so that's that's a good thing to do but that business logic is still quite complex",
    "start": "467500",
    "end": "474830"
  },
  {
    "text": "that's a big chunk right so in this sample application of course the business logic is simple but in general",
    "start": "474830",
    "end": "480590"
  },
  {
    "text": "just spitting out the business logic and a GUI is not chadmarco cirrhosis that's still very big so how can we split it",
    "start": "480590",
    "end": "486080"
  },
  {
    "text": "out further one thing that we sometimes see that you might consider is this kind",
    "start": "486080",
    "end": "492170"
  },
  {
    "text": "of layering so you would have a separate data access layer which is not in the business logic layer and then the data",
    "start": "492170",
    "end": "498350"
  },
  {
    "text": "access layer would directly communicate with the data store and then you would expose the pker type operations over",
    "start": "498350",
    "end": "504560"
  },
  {
    "text": "rest endpoints which is something you can very easily program but what's Pring data you could implement the data access",
    "start": "504560",
    "end": "511490"
  },
  {
    "text": "layer in minutes the thing though is that doesn't really offer any clear",
    "start": "511490",
    "end": "517340"
  },
  {
    "text": "advantages if you look at the key drivers for why doing microservices this is not going to provide you with any",
    "start": "517340",
    "end": "523130"
  },
  {
    "text": "more agility because whenever you need to change something probably you're going to change it in every and every",
    "start": "523130",
    "end": "528530"
  },
  {
    "text": "layer doesn't really do anything for scalability does offer some clear",
    "start": "528530",
    "end": "533660"
  },
  {
    "text": "disadvantages it's a performance drawback you cannot do transaction so for that if you do if you need to",
    "start": "533660",
    "end": "539400"
  },
  {
    "text": "execute multiple things on the database so it's not really something that works",
    "start": "539400",
    "end": "544670"
  },
  {
    "text": "another thing that you might consider is splitting it out all the way across the",
    "start": "544670",
    "end": "551730"
  },
  {
    "text": "functionality so we have issuing we are free deeming and we have the report it was like the three things that we saw on",
    "start": "551730",
    "end": "556950"
  },
  {
    "text": "the user interface and these could could be separate marker services implemented in Java talking to the same datastore",
    "start": "556950",
    "end": "565050"
  },
  {
    "text": "which you could work and it would work functionally but again this would not",
    "start": "565050",
    "end": "570840"
  },
  {
    "text": "really provide you with lots of agility or scalability you would still have that single datastore and that would become",
    "start": "570840",
    "end": "576060"
  },
  {
    "text": "the bottleneck for both changes as well as performance so it doesn't really help you to do this so what should we do one",
    "start": "576060",
    "end": "585120"
  },
  {
    "start": "582000",
    "end": "653000"
  },
  {
    "text": "it's just two pretty old ideas that you probably already know but that are really useful in this context to help us",
    "start": "585120",
    "end": "591210"
  },
  {
    "text": "guide us to a better splitting components so the first of those is command query responsibility segregation",
    "start": "591210",
    "end": "598230"
  },
  {
    "text": "it's at a familiar notion to anyone yeah many yeses so the basic idea is that you",
    "start": "598230",
    "end": "604650"
  },
  {
    "text": "split your system into two sides one the processes commands or changes to the system and another that reads data from",
    "start": "604650",
    "end": "612390"
  },
  {
    "text": "a database at producing data to the user but not changing any state these two",
    "start": "612390",
    "end": "617550"
  },
  {
    "text": "sides have their own data stores but they are kept synchronous is a good they are being synchronized to events and the",
    "start": "617550",
    "end": "624690"
  },
  {
    "text": "benefit of this would be that your queries become very simple because you can denormalize their you can use",
    "start": "624690",
    "end": "630810"
  },
  {
    "text": "whatever technology fits best for your query needs you can scale that query",
    "start": "630810",
    "end": "636030"
  },
  {
    "text": "site very easily because you don't have any consistency concerns there because all the business validation is done on",
    "start": "636030",
    "end": "641550"
  },
  {
    "text": "the command side and finally because you are using the query side to do all the querying you you're taking a lot of load",
    "start": "641550",
    "end": "648660"
  },
  {
    "text": "away from your command side so this is definitely a useful thing if you want to go to micro services another important",
    "start": "648660",
    "end": "656790"
  },
  {
    "start": "653000",
    "end": "798000"
  },
  {
    "text": "concept is domain driven design and within the broad set of thoughts at the",
    "start": "656790",
    "end": "663990"
  },
  {
    "text": "man driven design is the notion of aggregates so the main driven design has the notion of bounded contexts or pieces",
    "start": "663990",
    "end": "669990"
  },
  {
    "text": "of your domain that speak the same language and tend to change together so",
    "start": "669990",
    "end": "675750"
  },
  {
    "text": "in a very complex micro-services situation using these bounded context",
    "start": "675750",
    "end": "681360"
  },
  {
    "text": "and letting them guide your split into market services is going to help you our giftcard domain is obviously too small",
    "start": "681360",
    "end": "688140"
  },
  {
    "text": "to make that work what is very useless the concept of aggregates so aggregates",
    "start": "688140",
    "end": "695120"
  },
  {
    "text": "within DDD is the notion of having consistency boundaries within your",
    "start": "695120",
    "end": "700920"
  },
  {
    "text": "domain model you don't have everything connecting to everything you don't expect every entity in your your domain",
    "start": "700920",
    "end": "708360"
  },
  {
    "text": "to be updated consistently in all cases which you have some boundaries there and",
    "start": "708360",
    "end": "714240"
  },
  {
    "text": "if you have these boundaries then you can split out your system or easily separate aggregates can easily live in",
    "start": "714240",
    "end": "720900"
  },
  {
    "text": "separate micro-services but you should never try to split out a single aggregate across micro-services because",
    "start": "720900",
    "end": "727080"
  },
  {
    "text": "then you're going to need to implement some kind of consistency guarantee across microservices which is a very",
    "start": "727080",
    "end": "732570"
  },
  {
    "text": "difficult thing to do so the DDD bounded context notion of error rates are good",
    "start": "732570",
    "end": "739200"
  },
  {
    "text": "guidances to help you split your application into two components that can be deployed separately so if we apply",
    "start": "739200",
    "end": "746700"
  },
  {
    "text": "that here starting from this picture what we would do is split our data store",
    "start": "746700",
    "end": "752280"
  },
  {
    "text": "you would have a giftcard aggregates that's for the consistency boundary of giftcards just processing those two",
    "start": "752280",
    "end": "759210"
  },
  {
    "text": "commands we would have a separate service producing that report on gift",
    "start": "759210",
    "end": "764550"
  },
  {
    "text": "cards so the gift cards it has been it have been issued and the remaining value has has its own data store and we would",
    "start": "764550",
    "end": "771960"
  },
  {
    "text": "send events from the command side to the query side to keep everything up to date",
    "start": "771960",
    "end": "777020"
  },
  {
    "text": "so now we have identified these components now of course we want to scale that out we want to have many",
    "start": "777020",
    "end": "783240"
  },
  {
    "text": "instances of all of those potentially and we need to make sure that we have",
    "start": "783240",
    "end": "789270"
  },
  {
    "text": "some way to exchange those messages that would be our next topic so what what kind of requirements would we have for",
    "start": "789270",
    "end": "795210"
  },
  {
    "text": "transmitting these three types of messages commands if in queries so generally speaking if we",
    "start": "795210",
    "end": "802070"
  },
  {
    "start": "798000",
    "end": "963000"
  },
  {
    "text": "want to make this work at scale as a market service system our messaging should be efficient fast asynchronous we",
    "start": "802070",
    "end": "807830"
  },
  {
    "text": "should have to have dynamic scaling these are all very generic requirements but importantly there are also specific",
    "start": "807830",
    "end": "814490"
  },
  {
    "text": "requirements for these three individual stereo types of messages commands events and queries looking at those starting",
    "start": "814490",
    "end": "822290"
  },
  {
    "text": "with the command side if you look at how these commands are being sent from the user interface to the command side even",
    "start": "822290",
    "end": "830000"
  },
  {
    "text": "if you have multiple worker nodes processing these commands you would always like your command to be processed",
    "start": "830000",
    "end": "835370"
  },
  {
    "text": "exactly once that's typical of a command if you do a redeem against the gift card",
    "start": "835370",
    "end": "840500"
  },
  {
    "text": "that should be processed once and not multiple times so it's kind of like doing low balancing the difference",
    "start": "840500",
    "end": "848540"
  },
  {
    "text": "between traditional load balancing is that there is an important optimization that you would like to do in that messaging and that's that commands that",
    "start": "848540",
    "end": "855500"
  },
  {
    "text": "are being sent to the same aggregate instance in this case the same gift card should be routed to the same command",
    "start": "855500",
    "end": "862880"
  },
  {
    "text": "handler instance or to the same node processing yet the reason for that is that if you do this then this this node",
    "start": "862880",
    "end": "870890"
  },
  {
    "text": "can keep a cache of aggregates it has been processing recently which is a huge performance improvements so you would",
    "start": "870890",
    "end": "877850"
  },
  {
    "text": "like to do low balancing for commands but any consistent way they can show that commands targeting the same era",
    "start": "877850",
    "end": "882860"
  },
  {
    "text": "grits typically go to the same node would you also like to see with commands as a result so you don't want to see",
    "start": "882860",
    "end": "890240"
  },
  {
    "text": "data coming back from a command because data should come from the query side but success or failure is an important thing",
    "start": "890240",
    "end": "897200"
  },
  {
    "text": "that you should know as a clients right so that's that's what we expect from commands low balancing consistent",
    "start": "897200",
    "end": "902570"
  },
  {
    "text": "routing and a response if you compare that with events it's a totally",
    "start": "902570",
    "end": "907670"
  },
  {
    "text": "different situation so events don't require a response they have already",
    "start": "907670",
    "end": "912920"
  },
  {
    "text": "happens and they should not be handled just once they should handle by everyone",
    "start": "912920",
    "end": "918160"
  },
  {
    "text": "who's interested in that event that can be multiple listeners and the component generating those events wouldn't know",
    "start": "918160",
    "end": "924140"
  },
  {
    "text": "that so it's a very different messaging pattern so typically they should be handled only",
    "start": "924140",
    "end": "930070"
  },
  {
    "text": "once or typically they should be handled by everyone if particularly Fantan verse",
    "start": "930070",
    "end": "935560"
  },
  {
    "text": "are deployed multiple times as well and are updating the same data store that",
    "start": "935560",
    "end": "942640"
  },
  {
    "text": "you might want to only process that even once within that replica set relating to",
    "start": "942640",
    "end": "948190"
  },
  {
    "text": "the same data store so there is a notion of pops up but then within replicated",
    "start": "948190",
    "end": "955029"
  },
  {
    "text": "event numbers you may want to handle that only once in that set so the general rule is that you wanna landal",
    "start": "955029",
    "end": "961420"
  },
  {
    "text": "them once for every logical event handler if you look at events there may",
    "start": "961420",
    "end": "967149"
  },
  {
    "start": "963000",
    "end": "1038000"
  },
  {
    "text": "be a notion of parallel processing but there's a specific thing to take into account there so suppose that you have",
    "start": "967149",
    "end": "974080"
  },
  {
    "text": "multiple instances of that read side of our gift card application so yeah if",
    "start": "974080",
    "end": "980350"
  },
  {
    "text": "you're going to update that query the table of gift cards but your multiple processes doing that now there could be",
    "start": "980350",
    "end": "987550"
  },
  {
    "text": "one event saying a gift card has been issued and the next event saying well I'm gonna there has been a redeem",
    "start": "987550",
    "end": "993520"
  },
  {
    "text": "against a gift occurrence these two these two events get reordered you would",
    "start": "993520",
    "end": "998529"
  },
  {
    "text": "have a problem because the the redeem event would lead to an update on the",
    "start": "998529",
    "end": "1003930"
  },
  {
    "text": "gift card balance and and the issuing would be the insert if you assume in your use relational database technology",
    "start": "1003930",
    "end": "1010490"
  },
  {
    "text": "those have reordered the system wouldn't work anymore so if you're going to do parallel processing of events he needs",
    "start": "1010490",
    "end": "1017790"
  },
  {
    "text": "some type of ordering guarantees so you want to configure that we call that",
    "start": "1017790",
    "end": "1023970"
  },
  {
    "text": "concept a sequencing policy the simplest example of a sequencing policy would be to have the guarantee that events",
    "start": "1023970",
    "end": "1030270"
  },
  {
    "text": "relating to the same average would always be processed on the same note but you may need to have more advanced",
    "start": "1030270",
    "end": "1036420"
  },
  {
    "text": "sequencing policies in particular cases I finally suppose that you're",
    "start": "1036420",
    "end": "1042089"
  },
  {
    "text": "introducing a new read model so we saw the overview of all the gift card",
    "start": "1042089",
    "end": "1047970"
  },
  {
    "text": "balances you might want to have a read model that includes all the detailed transactions for individual gift cards",
    "start": "1047970",
    "end": "1053820"
  },
  {
    "text": "so that would be a separate read model if you deploy that if the application is already in production you need to",
    "start": "1053820",
    "end": "1059790"
  },
  {
    "text": "initialize that read model from scratch the easiest way",
    "start": "1059790",
    "end": "1064900"
  },
  {
    "text": "of doing that would be to replay all the events that have already taken place and then processing them as if they just",
    "start": "1064900",
    "end": "1071740"
  },
  {
    "text": "occurred and updating the new read model accordingly but you can only do that if you have remembered those events so",
    "start": "1071740",
    "end": "1078190"
  },
  {
    "text": "ideally in this kind of setup these events would not just be published and then be gone but you would store them in",
    "start": "1078190",
    "end": "1084220"
  },
  {
    "text": "an event store to enable replays of those events so those would be some requirements for events processing now",
    "start": "1084220",
    "end": "1092110"
  },
  {
    "text": "looking at the third type of message crevasse curries are more like commands",
    "start": "1092110",
    "end": "1098140"
  },
  {
    "text": "and like events they should typically be load balanced so going to different instances of the query handler you would",
    "start": "1098140",
    "end": "1106300"
  },
  {
    "text": "like to see response from a query all right overall wise it doesn't make any sense to do a query but more advanced",
    "start": "1106300",
    "end": "1113250"
  },
  {
    "text": "query patterns may do more than just low balancing sometimes you get multiple",
    "start": "1113250",
    "end": "1119020"
  },
  {
    "text": "answers to the same question and the application client can look for the best answer a very typical application of",
    "start": "1119020",
    "end": "1124930"
  },
  {
    "text": "that would be in in pricing situations where products that you're selling can have a regular price but maybe also a",
    "start": "1124930",
    "end": "1131530"
  },
  {
    "text": "discounted price and if your your shop implementation finds different prices it",
    "start": "1131530",
    "end": "1137650"
  },
  {
    "text": "could select the best one or the cheapest one and offer that to the to the end user that kind of pattern is",
    "start": "1137650",
    "end": "1143140"
  },
  {
    "text": "called scatter Ghadir so you send a query there may be multiple results and somehow you combine",
    "start": "1143140",
    "end": "1148330"
  },
  {
    "text": "them or select them to see what's the actual answer so those are some query",
    "start": "1148330",
    "end": "1153340"
  },
  {
    "text": "messaging veterans so what we've seen is there are some generic messaging",
    "start": "1153340",
    "end": "1159280"
  },
  {
    "text": "requirements in the situation if we want to split out our system into mark services and a few very specific ones",
    "start": "1159280",
    "end": "1164770"
  },
  {
    "text": "that differentiate between commands events and queries so we've covered how",
    "start": "1164770",
    "end": "1172420"
  },
  {
    "start": "1168000",
    "end": "1190000"
  },
  {
    "text": "to break up the system into components we saw that they will exchange commands",
    "start": "1172420",
    "end": "1177430"
  },
  {
    "text": "events and queries we've saw some requirements on those three types of messages and now let's look how to",
    "start": "1177430",
    "end": "1182680"
  },
  {
    "text": "actually implement this with excel framework and how to run that on on",
    "start": "1182680",
    "end": "1188200"
  },
  {
    "text": "communities so excellent framework some some of you",
    "start": "1188200",
    "end": "1194690"
  },
  {
    "start": "1190000",
    "end": "1287000"
  },
  {
    "text": "already knew it is an open-source Java framework has been around for quite a while since since 2010 approximately but",
    "start": "1194690",
    "end": "1202970"
  },
  {
    "text": "became really big when micro-services became a big thing so that was the end",
    "start": "1202970",
    "end": "1208610"
  },
  {
    "text": "of 2014 approximately that's when people really started using this framework and we saw",
    "start": "1208610",
    "end": "1213680"
  },
  {
    "text": "the download numbers go up it's approaching a million downloads now 50% of them are in the past six months so",
    "start": "1213680",
    "end": "1221180"
  },
  {
    "text": "it's going off Pro rapidly started out specifically as a CQRS framework but",
    "start": "1221180",
    "end": "1227030"
  },
  {
    "text": "currently we would position it more as a framework for evolutionary microservices and we'll talk a little bit more about",
    "start": "1227030",
    "end": "1232760"
  },
  {
    "text": "that evolutionary aspect later on a key principle of a framework is location",
    "start": "1232760",
    "end": "1238460"
  },
  {
    "text": "transparency and location transparency means that you program in such a way that your components wouldn't know",
    "start": "1238460",
    "end": "1244490"
  },
  {
    "text": "whether the other components they talked to our local on the same node or remote on what a note and you wouldn't have to",
    "start": "1244490",
    "end": "1250730"
  },
  {
    "text": "know where that is so the components can just talk to one another exchange commands events and queries and acts on",
    "start": "1250730",
    "end": "1257150"
  },
  {
    "text": "framework will take care of the correct distribution of those messages so use in",
    "start": "1257150",
    "end": "1263570"
  },
  {
    "text": "production around the world some important customers or barclays for instance big United States bank Kazuma",
    "start": "1263570",
    "end": "1271220"
  },
  {
    "text": "is a big online casino we have for the Dutch people and maybe if you need",
    "start": "1271220",
    "end": "1276920"
  },
  {
    "text": "roadside assistance then that would go through accent framework we have",
    "start": "1276920",
    "end": "1282460"
  },
  {
    "text": "airfields healthcare institutions say uses around the world now the location",
    "start": "1282580",
    "end": "1290300"
  },
  {
    "start": "1287000",
    "end": "1428000"
  },
  {
    "text": "transparency stuff that's one of the key things that Exxon is providing works like this so all the communications in",
    "start": "1290300",
    "end": "1297410"
  },
  {
    "text": "Exxon go through a bus we have three buses for the three stereotypes there's",
    "start": "1297410",
    "end": "1302960"
  },
  {
    "text": "a Commandos event bus on a query bus and here I'm using the command bus for illustration so if you have code that",
    "start": "1302960",
    "end": "1310160"
  },
  {
    "text": "needs to send the commands so here in the GUI we have commands that are being sent if",
    "start": "1310160",
    "end": "1315440"
  },
  {
    "text": "we issue or redeem a gift card that command would be sent to the command bus",
    "start": "1315440",
    "end": "1321980"
  },
  {
    "text": "and then on the other side we have parts of the application that handle commands and they would register themselves with",
    "start": "1321980",
    "end": "1329149"
  },
  {
    "text": "the bus as a candidate for handling that particular command type and then whenever you send a command to the bus",
    "start": "1329149",
    "end": "1335620"
  },
  {
    "text": "Exxon's boss would take care of delivering that command to an appropriate handler that's the basic",
    "start": "1335620",
    "end": "1341269"
  },
  {
    "text": "idea and the nice thing is that this these buses are abstract these are interfaces and there are a bunch of",
    "start": "1341269",
    "end": "1347659"
  },
  {
    "text": "implementations of those interfaces and you could even provide your own from scratch if you have some reason to do",
    "start": "1347659",
    "end": "1352880"
  },
  {
    "text": "that and in particular we deliver a simple command bus as part of the framework and a simple event bus and a",
    "start": "1352880",
    "end": "1359539"
  },
  {
    "text": "query bus and the simple buses just keep everything within the JVM so there would",
    "start": "1359539",
    "end": "1366559"
  },
  {
    "text": "not be any actual messaging taking taking place in the traditional sense of the world but then you can replace that",
    "start": "1366559",
    "end": "1372889"
  },
  {
    "text": "command bus with it with the distributed command bus and the distributed command bus would do what the name suggests",
    "start": "1372889",
    "end": "1378289"
  },
  {
    "text": "which is distributing messages across a network and you can make that change",
    "start": "1378289",
    "end": "1383480"
  },
  {
    "text": "without having to change anything else in your application code that will be entirely transparent so that's location",
    "start": "1383480",
    "end": "1389870"
  },
  {
    "text": "transparency and what location transparency enables is an evolutionary approach to our smoke resources so you",
    "start": "1389870",
    "end": "1395690"
  },
  {
    "text": "don't need to worry too much about speeding up your simple system into",
    "start": "1395690",
    "end": "1401240"
  },
  {
    "text": "dozens of services from day one what you can do is just start programming start",
    "start": "1401240",
    "end": "1406940"
  },
  {
    "text": "programming a monolith but using these concepts of separate command sites read sides and those three types of messages",
    "start": "1406940",
    "end": "1414289"
  },
  {
    "text": "between them and then whenever the need arises when you actually need to split out your system into market services you",
    "start": "1414289",
    "end": "1420260"
  },
  {
    "text": "can do so without changing the rest of your code so location transparency",
    "start": "1420260",
    "end": "1425299"
  },
  {
    "text": "enables evolution of Lamarque services that's the key story looking at how that",
    "start": "1425299",
    "end": "1431659"
  },
  {
    "start": "1428000",
    "end": "1502000"
  },
  {
    "text": "actually looks like in code so this is a part of the gift card application the aggregate part so we see that this is",
    "start": "1431659",
    "end": "1439250"
  },
  {
    "text": "annotated as an aggregates in the code and then we have some of these command handler methods so it's just a Java",
    "start": "1439250",
    "end": "1446120"
  },
  {
    "text": "annotation that we put on the methods which will tell X on",
    "start": "1446120",
    "end": "1452090"
  },
  {
    "text": "that this is a method that can handle commands and the commands themselves are represented as simple Java objects",
    "start": "1452090",
    "end": "1459620"
  },
  {
    "text": "typically these are immutable people tend to use a colon or a project long",
    "start": "1459620",
    "end": "1465500"
  },
  {
    "text": "block or something to create all those classes this is part of the the code",
    "start": "1465500",
    "end": "1471500"
  },
  {
    "text": "that of the GUI code that actually send those commands and here we have an injected command gateway objects and we",
    "start": "1471500",
    "end": "1478640"
  },
  {
    "text": "can simply say command gateway sends a new issue commands and that's it and",
    "start": "1478640",
    "end": "1484490"
  },
  {
    "text": "anything that's going on between the previous code sample and this would not",
    "start": "1484490",
    "end": "1490520"
  },
  {
    "text": "be coded at all that's what excellent takes care of takes care of getting this command this issue commands to this",
    "start": "1490520",
    "end": "1496909"
  },
  {
    "text": "issue enter and that's it now if you",
    "start": "1496909",
    "end": "1504649"
  },
  {
    "start": "1502000",
    "end": "1594000"
  },
  {
    "text": "look at how to do that practically the distribution so if you want to take your your axon monolith and make it an actual",
    "start": "1504649",
    "end": "1511820"
  },
  {
    "text": "micro-services system you would have to replace the simple buses by distributed",
    "start": "1511820",
    "end": "1518059"
  },
  {
    "text": "versions of those buses and so recently we had these options so for commands you",
    "start": "1518059",
    "end": "1523250"
  },
  {
    "text": "could either use print cloud for discovery an actual transportation of those commands over HTTP or you could",
    "start": "1523250",
    "end": "1530659"
  },
  {
    "text": "use J groups for events that was either using AMQP which could send events to",
    "start": "1530659",
    "end": "1539630"
  },
  {
    "text": "multiple listeners but you wouldn't be able to do a replay or you would use a tracking database table with event",
    "start": "1539630",
    "end": "1545929"
  },
  {
    "text": "distribution actually being handled by pulling a database table which would enable replays of events which is one of",
    "start": "1545929",
    "end": "1551539"
  },
  {
    "text": "our requirements but it doesn't really allow pushing of events too robust and",
    "start": "1551539",
    "end": "1557840"
  },
  {
    "text": "therefore queries there was not really a standard way of distributing those query messages so what we saw that most of our",
    "start": "1557840",
    "end": "1563210"
  },
  {
    "text": "customers were creating ad hoc ways of doing that by exposing query handlers as rest endpoints so until recently we had",
    "start": "1563210",
    "end": "1571279"
  },
  {
    "text": "a nice theory but wasn't actually that easy to evolve a system into a",
    "start": "1571279",
    "end": "1578090"
  },
  {
    "text": "distributed system so what we did is create a new system for that called X on",
    "start": "1578090",
    "end": "1584870"
  },
  {
    "text": "up so X on top is the thing that sits in between all the accent components and make sure that it communicates easily",
    "start": "1584870",
    "end": "1590930"
  },
  {
    "text": "and there are excellent hub versions of those three buses so what it is",
    "start": "1590930",
    "end": "1596690"
  },
  {
    "start": "1594000",
    "end": "1637000"
  },
  {
    "text": "essentially it's it's a server system so it's something that you deploy a separate lead axle hub server either as",
    "start": "1596690",
    "end": "1603260"
  },
  {
    "text": "a running a single instance or running a cluster of hub instances there is a",
    "start": "1603260",
    "end": "1609140"
  },
  {
    "text": "driver for that that you would include in your Java program it's a unified messaging system for all",
    "start": "1609140",
    "end": "1614840"
  },
  {
    "text": "three types of messages so it can handle commands events and queries instead of having to set up three different",
    "start": "1614840",
    "end": "1620390"
  },
  {
    "text": "mechanisms there and it's designed to be very intelligence in particular to allow",
    "start": "1620390",
    "end": "1626330"
  },
  {
    "text": "zero configuration so you don't have to come you don't have to tell X on hub",
    "start": "1626330",
    "end": "1632900"
  },
  {
    "text": "which commanders there are and which you find others it will simply know that so",
    "start": "1632900",
    "end": "1638840"
  },
  {
    "start": "1637000",
    "end": "1705000"
  },
  {
    "text": "how does that work so if you have those three types of X on hub buses configured in your application and you start up the",
    "start": "1638840",
    "end": "1645110"
  },
  {
    "text": "X on application two things will happen so first of all because you have those buses the application will be able to",
    "start": "1645110",
    "end": "1651950"
  },
  {
    "text": "send messages on those buses and then you will end up with X on top so XML can then decide what to do with them the",
    "start": "1651950",
    "end": "1659960"
  },
  {
    "text": "second thing that will happen and that's that's more important for the magic is that the client will look at which",
    "start": "1659960",
    "end": "1665960"
  },
  {
    "text": "handlers are present in the in the applications which commanders event handlers and query embers and it will",
    "start": "1665960",
    "end": "1671630"
  },
  {
    "text": "inform X on hub that this application is able to handle those types of messages",
    "start": "1671630",
    "end": "1678410"
  },
  {
    "text": "or is interested in those types of messages now since X will have knows the",
    "start": "1678410",
    "end": "1685730"
  },
  {
    "text": "mated metadata of messages it understands things like which message type is being sense which aggregate is",
    "start": "1685730",
    "end": "1692150"
  },
  {
    "text": "being targeted and it has to a connections between the clients and the server using all of that it can do fully",
    "start": "1692150",
    "end": "1699860"
  },
  {
    "text": "automatic routing of those messages so that's what enables the zero configuration aspect of it we use X on",
    "start": "1699860",
    "end": "1708830"
  },
  {
    "start": "1705000",
    "end": "1740000"
  },
  {
    "text": "hub in conjunction with X on DB so we saw that one of the requirements that we",
    "start": "1708830",
    "end": "1713840"
  },
  {
    "text": "had for events in this architecture is that events are playable so we need to store them",
    "start": "1713840",
    "end": "1719539"
  },
  {
    "text": "somewhere Exxon huh by itself doesn't store any messages it's stateless",
    "start": "1719539",
    "end": "1725230"
  },
  {
    "text": "excellent EB is the event store that we use in conjunction with Exxon up and it kind of sits behind Exxon hub so",
    "start": "1725230",
    "end": "1732320"
  },
  {
    "text": "applications would communicate through axle hub and events would also get stored in Exxon DB so we're going to see",
    "start": "1732320",
    "end": "1738620"
  },
  {
    "text": "them work together so if we want to have",
    "start": "1738620",
    "end": "1743690"
  },
  {
    "start": "1740000",
    "end": "1792000"
  },
  {
    "text": "an act if we start with an excellent application that's running locally and we want to make that into a distributed",
    "start": "1743690",
    "end": "1749179"
  },
  {
    "text": "system there are very few changes that we have to do so to switch out these buses we have to include a single maven",
    "start": "1749179",
    "end": "1758029"
  },
  {
    "text": "dependency which is on the Exxon hub clients assuming you're using Exxon with spring",
    "start": "1758029",
    "end": "1763580"
  },
  {
    "text": "boot which is which is what most people do that will take care of everything that will simply make sure that action",
    "start": "1763580",
    "end": "1770059"
  },
  {
    "text": "starts using those distributed buses instead of the simple locally operating buses one other thing we need to",
    "start": "1770059",
    "end": "1777500"
  },
  {
    "text": "configure is that we need to tell an application where Exxon hub can be found in this example on localhost and that's",
    "start": "1777500",
    "end": "1785330"
  },
  {
    "text": "it there is no not anymore configuration to do this will be sufficient to make to make this into a distributed system so",
    "start": "1785330",
    "end": "1795470"
  },
  {
    "start": "1792000",
    "end": "1929000"
  },
  {
    "text": "now how to deploy all of this on kubernetes so the application itself as",
    "start": "1795470",
    "end": "1802340"
  },
  {
    "text": "we have seen will be split into three different components so we have two command side we have the query sight and",
    "start": "1802340",
    "end": "1807889"
  },
  {
    "text": "we have two GUI side and then we're also going to run X on top and X on DB not as",
    "start": "1807889",
    "end": "1814220"
  },
  {
    "text": "individual micro services but as infrastructure enabling those other micro services so those are the five",
    "start": "1814220",
    "end": "1820039"
  },
  {
    "text": "things that we need to the five workloads that we need to run on kubernetes so for those three the three",
    "start": "1820039",
    "end": "1829309"
  },
  {
    "text": "actual micro services they'll actually be really easy we get the simplest kind",
    "start": "1829309",
    "end": "1835429"
  },
  {
    "text": "of workload that you can run on kubernetes is a deployment so in the deployments the individual containers do",
    "start": "1835429",
    "end": "1841789"
  },
  {
    "text": "not have any identity or any state they can be deleted and come back again but",
    "start": "1841789",
    "end": "1847970"
  },
  {
    "text": "that's all fine because all the there's zero configure of the messaging so these components",
    "start": "1847970",
    "end": "1853179"
  },
  {
    "text": "when they come and go will simply check in with the Exxon hub and and then",
    "start": "1853179",
    "end": "1858520"
  },
  {
    "text": "become part of the micro-services system and it can't go back or you can go down again and it will not pose any problem",
    "start": "1858520",
    "end": "1865679"
  },
  {
    "text": "looking at Exxon hop and Exxon DB situation is a little bit more more",
    "start": "1865679",
    "end": "1871510"
  },
  {
    "text": "difficult those come those components actually have state and we need to they",
    "start": "1871510",
    "end": "1877840"
  },
  {
    "text": "need to have stable Network identity in order to form a cluster internet and to be found by the other components so with",
    "start": "1877840",
    "end": "1885010"
  },
  {
    "text": "the standard kubernetes deployment which is the simplest type of workload that wouldn't work but luckily kubernetes has",
    "start": "1885010",
    "end": "1890830"
  },
  {
    "text": "a different solution for that and it's called a stateful set so if you have a stateful",
    "start": "1890830",
    "end": "1896380"
  },
  {
    "text": "set kubernetes deployment what it tells kubernetes is that these spots actually",
    "start": "1896380",
    "end": "1902559"
  },
  {
    "text": "do have an identity they will be taken brought up and brought down in a predictable order they you will have the",
    "start": "1902559",
    "end": "1910090"
  },
  {
    "text": "ability to attach some or some persistent storage to do spots and they",
    "start": "1910090",
    "end": "1916570"
  },
  {
    "text": "will register in the DNS of the cluster so they can be found by other by other containers running there so yeah so for",
    "start": "1916570",
    "end": "1925660"
  },
  {
    "text": "the individual micro services very easy deployment for Exxon hub Exxon to be a little bit more difficult looking at",
    "start": "1925660",
    "end": "1932410"
  },
  {
    "start": "1929000",
    "end": "2005000"
  },
  {
    "text": "what what we actually have to do to run it on kubernetes of course we need to wrap our application in a container",
    "start": "1932410",
    "end": "1938200"
  },
  {
    "text": "first for the individual market services that's entirely trivial this is actually",
    "start": "1938200",
    "end": "1945340"
  },
  {
    "text": "just a copy from the docker file that you could find on spring boots docker",
    "start": "1945340",
    "end": "1950590"
  },
  {
    "text": "page and then we need to send one property to the application and that's to point it to our axle hub cluster so",
    "start": "1950590",
    "end": "1958240"
  },
  {
    "text": "this is all that we need to configure on the application side just wrap our application in a docker container and tell it where Exim hub can be found on",
    "start": "1958240",
    "end": "1965350"
  },
  {
    "text": "the kubernetes cluster which is easy because communities will register our",
    "start": "1965350",
    "end": "1970480"
  },
  {
    "text": "stateful set in the DNS then we would",
    "start": "1970480",
    "end": "1975640"
  },
  {
    "text": "say we would build the image we would push it in this case to the Google cloud regal container repository I'm using a",
    "start": "1975640",
    "end": "1983110"
  },
  {
    "text": "version of kubernetes that's managed by by Google so to run any image there would first push it to",
    "start": "1983110",
    "end": "1988240"
  },
  {
    "text": "Google and then I can just run it like this in this case I'm saying I want to run GC commands when I use an image that",
    "start": "1988240",
    "end": "1995710"
  },
  {
    "text": "I've already pushed to Google and I want to have one replica after so that would",
    "start": "1995710",
    "end": "2002280"
  },
  {
    "text": "be it and of course for query and GUI it would work exactly the same then for",
    "start": "2002280",
    "end": "2008130"
  },
  {
    "start": "2005000",
    "end": "2094000"
  },
  {
    "text": "exome hub the kubernetes deployment is a little bit more involved because we need",
    "start": "2008130",
    "end": "2014130"
  },
  {
    "text": "to do that stateful set stuff so the way this would work is that you would create a Yama file describing the the",
    "start": "2014130",
    "end": "2021419"
  },
  {
    "text": "kubernetes deployment in this case to the right up to the right you would see",
    "start": "2021419",
    "end": "2027059"
  },
  {
    "text": "that we're deploying a stateful set with named axel now I'm saying that I want to",
    "start": "2027059",
    "end": "2032370"
  },
  {
    "text": "have three replicas of that I'm specifying the container that's going to",
    "start": "2032370",
    "end": "2038400"
  },
  {
    "text": "run there and the image it's children and it's exposing two ports so 8 0 2 4",
    "start": "2038400",
    "end": "2043740"
  },
  {
    "text": "is a port where we will expose a GUI to manage the X on top and 8 1 2 4 is the",
    "start": "2043740",
    "end": "2049888"
  },
  {
    "text": "portrait will actually exchange some some data and then to make this the",
    "start": "2049889",
    "end": "2055290"
  },
  {
    "text": "defaults in the stateful set accessible to other parts of the cluster we would",
    "start": "2055290",
    "end": "2060898"
  },
  {
    "text": "need to expose to services so one service X on hub GUI in the middle will",
    "start": "2060899",
    "end": "2067320"
  },
  {
    "text": "be a load balancer that's the standard HTTP load balancer that will allow me to look at the XML GUI from the outside",
    "start": "2067320",
    "end": "2072990"
  },
  {
    "text": "world and then there will be what's",
    "start": "2072990",
    "end": "2078030"
  },
  {
    "text": "called a headless service in kubernetes that has a service without an IP address that will make sure that these",
    "start": "2078030",
    "end": "2084270"
  },
  {
    "text": "individual parts of that cluster will be available to other node so in particular to my micro services that are going to",
    "start": "2084270",
    "end": "2092310"
  },
  {
    "text": "exchange messages through hub so now",
    "start": "2092310",
    "end": "2097500"
  },
  {
    "text": "let's have a look at this life",
    "start": "2097500",
    "end": "2101390"
  },
  {
    "text": "so this is the Google cloud platform where our spawn of the kubernetes cluster that's just a few clicks and you",
    "start": "2111960",
    "end": "2121000"
  },
  {
    "text": "have to wait for five minutes which is very boring to do in talk so I've already done that half an hour ago",
    "start": "2121000",
    "end": "2127420"
  },
  {
    "text": "ci running here it's it's a so-called regional cluster where the notes of the",
    "start": "2127420",
    "end": "2133150"
  },
  {
    "text": "worker nodes of that cluster were in different data centers and currently I've already deployed the X on the B and",
    "start": "2133150",
    "end": "2139810"
  },
  {
    "text": "X on the hub the stateful sets and both are running as as three as clusters of",
    "start": "2139810",
    "end": "2145960"
  },
  {
    "text": "three parts here we see the services",
    "start": "2145960",
    "end": "2153970"
  },
  {
    "text": "that we have exposed so for X on top we have the cluster IP which is the data",
    "start": "2153970",
    "end": "2159040"
  },
  {
    "text": "service that will be used by the individual America services and we have the exon hub GUI which has a load",
    "start": "2159040",
    "end": "2166090"
  },
  {
    "text": "balancer in front of it meaning that I can access it through my browser so I couldn't go here see the three nodes of",
    "start": "2166090",
    "end": "2173680"
  },
  {
    "text": "the exon hub cluster and here we haven't what we call the architecture overview so here we see how excellent hub sees",
    "start": "2173680",
    "end": "2180310"
  },
  {
    "text": "the world now there are three nodes in the axle hub cluster it's talking to an exon DB cluster but there isn't there's",
    "start": "2180310",
    "end": "2187270"
  },
  {
    "text": "no application running here so now that's deploy the application i've",
    "start": "2187270",
    "end": "2197440"
  },
  {
    "text": "already pushed that image so all - all that we have to do now simply run this this command image",
    "start": "2197440",
    "end": "2204299"
  },
  {
    "text": "we'll run the query site as well and the",
    "start": "2213100",
    "end": "2220120"
  },
  {
    "text": "GUI sides and we see that as these containers being spun up they report in to X on up an excellent app will show",
    "start": "2220120",
    "end": "2226480"
  },
  {
    "text": "them now in the architecture overview so",
    "start": "2226480",
    "end": "2233020"
  },
  {
    "text": "there we have three instances so these are now running on the kubernetes cluster and they communicate via X on",
    "start": "2233020",
    "end": "2239650"
  },
  {
    "text": "hub so we can give it a spin",
    "start": "2239650",
    "end": "2244710"
  },
  {
    "text": "that's still creating the load balancer for the GUI",
    "start": "2247500",
    "end": "2252300"
  },
  {
    "text": "so now we have this gift card application running as three different microservices I can issue a cards for",
    "start": "2264430",
    "end": "2271100"
  },
  {
    "text": "say 1000s pops up here now in the read",
    "start": "2271100",
    "end": "2276110"
  },
  {
    "text": "model and I can redeem and the read",
    "start": "2276110",
    "end": "2282710"
  },
  {
    "text": "model would be updated so that's the entire functionality the nice thing here",
    "start": "2282710",
    "end": "2288140"
  },
  {
    "text": "is that I can scale this out which was one of the important reasons of doing marker so services in the first place so",
    "start": "2288140",
    "end": "2293690"
  },
  {
    "text": "if we go back to the overview and I say that I want to scale my deployments",
    "start": "2293690",
    "end": "2300250"
  },
  {
    "text": "commands I could say I want to have three five replicas of those and maybe",
    "start": "2300250",
    "end": "2309190"
  },
  {
    "text": "three replicas of my query model or",
    "start": "2309190",
    "end": "2316820"
  },
  {
    "text": "maybe two replicas of the GUI",
    "start": "2316820",
    "end": "2320470"
  },
  {
    "text": "we can see these instance counts going up now so we now already have 2/5 of",
    "start": "2324089",
    "end": "2329249"
  },
  {
    "text": "those we have 3 of the query we're still waiting for one GUI which is there now as well so now all of a sudden we have",
    "start": "2329249",
    "end": "2335849"
  },
  {
    "text": "scaled out on micro-services system it's still running on the same amount of work",
    "start": "2335849",
    "end": "2341219"
  },
  {
    "text": "on notes and kubernetes but on communities I could have dynamic scaling of the number of worker nodes to spin",
    "start": "2341219",
    "end": "2347910"
  },
  {
    "text": "them up whenever that's needed if I combine that then I have a fully scalable system message routing will",
    "start": "2347910",
    "end": "2355769"
  },
  {
    "text": "still go very well in this case and just to demonstrate that let's create many",
    "start": "2355769",
    "end": "2360979"
  },
  {
    "text": "commands targeting the same gift cards so I'm gonna do demo two again for 1000",
    "start": "2360979",
    "end": "2370609"
  },
  {
    "text": "and now we do a bunch of redeems against that same error rate so it's all commands being targeted targeting the",
    "start": "2371029",
    "end": "2377849"
  },
  {
    "text": "same memories so there's still 962 left",
    "start": "2377849",
    "end": "2385529"
  },
  {
    "text": "of a thousand so I have executed 38 redeem commands if we go to the exon hub",
    "start": "2385529",
    "end": "2390599"
  },
  {
    "text": "overview and look at the command counters you see that for those two commands I have five different",
    "start": "2390599",
    "end": "2396150"
  },
  {
    "text": "candidates but all these commands have been sent to the same command have for instance so that's this consistent",
    "start": "2396150",
    "end": "2403109"
  },
  {
    "text": "routing in action which would enable this command handler to keep a cache of this particular aggregate and be more",
    "start": "2403109",
    "end": "2408900"
  },
  {
    "text": "efficient if I would bulk issue cards",
    "start": "2408900",
    "end": "2415439"
  },
  {
    "text": "with different identities so now I'm issuing 1,000 cards you would see that",
    "start": "2415439",
    "end": "2422189"
  },
  {
    "text": "these actually get distributed over the five instances of the command adverts",
    "start": "2422189",
    "end": "2427759"
  },
  {
    "text": "this kind of detailed information about what's going on is available in queries as well so you can see the queries being",
    "start": "2427759",
    "end": "2434400"
  },
  {
    "text": "executed on various query handlers and we can zoom into all of these components",
    "start": "2434400",
    "end": "2439699"
  },
  {
    "text": "see what kind of where they are deployed what commands they are handling in this",
    "start": "2439699",
    "end": "2445619"
  },
  {
    "text": "case what queries they were handling which events they are listening for so",
    "start": "2445619",
    "end": "2451079"
  },
  {
    "text": "we have lots of information here about what's going on in this cluster",
    "start": "2451079",
    "end": "2455929"
  },
  {
    "text": "so essentially this is what I wants to show you so using X 1 and X on our",
    "start": "2456819",
    "end": "2462499"
  },
  {
    "text": "technology we can deploy our application on kubernetes very easily and benefit",
    "start": "2462499",
    "end": "2468109"
  },
  {
    "text": "from that auto scaling in general if you want to do that they need to have some",
    "start": "2468109",
    "end": "2473599"
  },
  {
    "text": "kind of solution for the messaging that's not as easy as it might sound because you need to distinguish between",
    "start": "2473599",
    "end": "2480109"
  },
  {
    "text": "commands events and queries and they're different requirements using this type",
    "start": "2480109",
    "end": "2485479"
  },
  {
    "text": "of technology with exome and X on up that actually is very very easy you can just deploy micro sources system like",
    "start": "2485479",
    "end": "2492829"
  },
  {
    "text": "this so I guess now we have some time for questions",
    "start": "2492829",
    "end": "2498940"
  },
  {
    "start": "2498000",
    "end": "2900000"
  },
  {
    "text": "I'm not an SEO expert so that's so can",
    "start": "2528010",
    "end": "2537650"
  },
  {
    "text": "tell too much about that but one one key thing about XML which I think differentiates it from Sto is that we",
    "start": "2537650",
    "end": "2544460"
  },
  {
    "text": "don't focus so much on the on the transport layer so sto as far as I",
    "start": "2544460",
    "end": "2549620"
  },
  {
    "text": "understand that is primarily an HTTP proxy we technically use G RPC as an",
    "start": "2549620",
    "end": "2556940"
  },
  {
    "text": "underlying transportation protocol which is technically a Google product on top of HTTP two but it doesn't matter at all",
    "start": "2556940",
    "end": "2564740"
  },
  {
    "text": "in our infrastructure we logically allow the exchange of commands events and queries and there are certain using",
    "start": "2564740",
    "end": "2571250"
  },
  {
    "text": "their associated writing patterns without caring about the underlying transport protocol Thanks and just a",
    "start": "2571250",
    "end": "2580130"
  },
  {
    "text": "quick follow-up whoever asked that question there's a whole talk on this to you later today is anyone having",
    "start": "2580130",
    "end": "2590030"
  },
  {
    "text": "troubles asking questions through the app no let's talk after it so we can",
    "start": "2590030",
    "end": "2595640"
  },
  {
    "text": "troubleshoot I just wanted to know how did you implement the different",
    "start": "2595640",
    "end": "2601480"
  },
  {
    "text": "requirements for the different messages as you said for commands you need the",
    "start": "2601480",
    "end": "2606920"
  },
  {
    "text": "policy in everything can you show it I",
    "start": "2606920",
    "end": "2611930"
  },
  {
    "text": "actually can't because it's another hood that goes automatic so the way it works",
    "start": "2611930",
    "end": "2617750"
  },
  {
    "text": "is that exon hub actually understands the messages coming by so as these",
    "start": "2617750",
    "end": "2623810"
  },
  {
    "text": "messages get serialized and being sent to excellent up they would have like a",
    "start": "2623810",
    "end": "2629630"
  },
  {
    "text": "message below describing the actual command so in this case the issue command or redeem command and axle hub",
    "start": "2629630",
    "end": "2635570"
  },
  {
    "text": "wouldn't know anything about that that's that's location-specific but it would know the fact that it is a command it would know",
    "start": "2635570",
    "end": "2642500"
  },
  {
    "text": "the type of the commands and it would know the aggregate it is targeting and because it has just enough understanding",
    "start": "2642500",
    "end": "2649820"
  },
  {
    "text": "of that metadata and understanding of what differentiates these three things it can handle it automatically kinda so",
    "start": "2649820",
    "end": "2660380"
  },
  {
    "text": "let me show you",
    "start": "2660380",
    "end": "2663970"
  },
  {
    "text": "so further for the command this is what you would do so you would have the",
    "start": "2675319",
    "end": "2681539"
  },
  {
    "text": "aggregate annotation on top of there and you would have the aggregates identifier and you would say that our command",
    "start": "2681539",
    "end": "2687209"
  },
  {
    "text": "answers so these annotations are also being understood by the Exxon hub client and then being sent in the sense to the",
    "start": "2687209",
    "end": "2694199"
  },
  {
    "text": "Exxon web server so that would tell Exxon observer hey I have a command under here and it would tell that",
    "start": "2694199",
    "end": "2700619"
  },
  {
    "text": "aggregate identifier is an interesting thing and then here and you you wouldn't",
    "start": "2700619",
    "end": "2708900"
  },
  {
    "text": "actually see it here but indeed in the definition of the issue commands there's also an annotation called target",
    "start": "2708900",
    "end": "2714359"
  },
  {
    "text": "aggregate identifier that helps to identify if you haven't command to this",
    "start": "2714359",
    "end": "2720630"
  },
  {
    "text": "type which part of it contains the aggregate metadata it's a great identifier metadata and then we have",
    "start": "2720630",
    "end": "2728959"
  },
  {
    "text": "here the issue command being sent on the command gateway so what the process is actually if this happens the sent and",
    "start": "2729019",
    "end": "2735509"
  },
  {
    "text": "wait line here with the new issue commands the issue command would be serialized it would be sent to the X on",
    "start": "2735509",
    "end": "2742890"
  },
  {
    "text": "top as metadata you would have the fact that it is an issue commands and it",
    "start": "2742890",
    "end": "2749489"
  },
  {
    "text": "would have the aggregate identifier being targeted here so that's this case the value of ID don't get value is that",
    "start": "2749489",
    "end": "2756390"
  },
  {
    "text": "got that that gets in the first argument of that constructor of the issue command and that has been annotated as a target",
    "start": "2756390",
    "end": "2762449"
  },
  {
    "text": "aggregate identifier in this command so then the total message that will be sent",
    "start": "2762449",
    "end": "2767939"
  },
  {
    "text": "to the XO knob is the serialized version of the issue commands aggregate ID and the name of the command and then action",
    "start": "2767939",
    "end": "2775619"
  },
  {
    "text": "hub would already have seen these handlers being registered so it knows",
    "start": "2775619",
    "end": "2782339"
  },
  {
    "text": "that there is an antler for the type issue commands and that's enough then it has enough information to do the routing",
    "start": "2782339",
    "end": "2788880"
  },
  {
    "text": "and you wouldn't you wouldn't see that that's in the and construction of the action table itself",
    "start": "2788880",
    "end": "2795650"
  },
  {
    "text": "so we have customers processing up to 10,000 events per seconds or to a",
    "start": "2803520",
    "end": "2810119"
  },
  {
    "text": "billion per day and that works what tends to be the bottleneck in those",
    "start": "2810119",
    "end": "2815490"
  },
  {
    "text": "cases is the events store like all the other stuff can be quite easily scaled and we've seen that we can do horizontal",
    "start": "2815490",
    "end": "2822270"
  },
  {
    "text": "scaling of many of these components but storing many events in the table becomes a bottleneck you can if you run that on",
    "start": "2822270",
    "end": "2831390"
  },
  {
    "text": "a relational database people make that work by doing things like partitioning making sure that you don't store all",
    "start": "2831390",
    "end": "2837390"
  },
  {
    "text": "events in the same table but this is actually one of the reasons why we develop that exon DB component because",
    "start": "2837390",
    "end": "2843720"
  },
  {
    "text": "it's like a database that's specifically scalable for having very large volumes of events and there are no 250 million a",
    "start": "2843720",
    "end": "2850830"
  },
  {
    "text": "days is definitely not I'm not an issue for excellently be cool and last question can you tell us a little bit",
    "start": "2850830",
    "end": "2856560"
  },
  {
    "text": "about graceful shutdown grace what",
    "start": "2856560",
    "end": "2862170"
  },
  {
    "text": "exactly who asked that question all",
    "start": "2862170",
    "end": "2868770"
  },
  {
    "text": "right there's a lot more questions actually and as and I wanted respect all of those but also respect your time that",
    "start": "2868770",
    "end": "2874560"
  },
  {
    "text": "lunch has started a few things Franz is here there's other folks from Mac sonic who would be more than happy to answer",
    "start": "2874560",
    "end": "2880530"
  },
  {
    "text": "these questions and lots of them were really good ones like about with legacy systems and things like that can we do",
    "start": "2880530",
    "end": "2888390"
  },
  {
    "text": "one more round of applause for Franz",
    "start": "2888390",
    "end": "2891950"
  },
  {
    "text": "you",
    "start": "2894670",
    "end": "2896730"
  }
]