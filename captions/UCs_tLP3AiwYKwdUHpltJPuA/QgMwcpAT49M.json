[
  {
    "text": "[Music]",
    "start": "3490",
    "end": "7529"
  },
  {
    "text": "thank you thank you very much I know you have a choice of picking lots of other sessions but I'm glad you pick mine so",
    "start": "13629",
    "end": "20060"
  },
  {
    "text": "thank you very much less people ask me about what is this mustache for this",
    "start": "20060",
    "end": "25580"
  },
  {
    "text": "mustache is mustache November or Movember it's a statement for saying",
    "start": "25580",
    "end": "30949"
  },
  {
    "text": "that too many men are dying young so as much as women's health is important men's",
    "start": "30949",
    "end": "37730"
  },
  {
    "text": "health is equally important as well so make sure you rest enough make sure you",
    "start": "37730",
    "end": "42860"
  },
  {
    "text": "eat healthy make sure you work out regularly particularly for programmers our lifestyle is very sedentary so if",
    "start": "42860",
    "end": "49670"
  },
  {
    "text": "there is a man in your life you know yourself your dad your father your partner your brother encourage them to",
    "start": "49670",
    "end": "56239"
  },
  {
    "text": "live healthy so that's sort of my 30 seconds of message that I want to tell everybody let's get back to real life so",
    "start": "56239",
    "end": "63369"
  },
  {
    "text": "this talk is gonna be about kubernetes sizing your java application I'm a Java",
    "start": "63369",
    "end": "68900"
  },
  {
    "text": "developer be any Java developer for many many years actually I joined Sun Microsystems back when we were releasing",
    "start": "68900",
    "end": "75440"
  },
  {
    "text": "JDK 1.2 as a Java developer what is it that I need to do to kubernetes eyes my",
    "start": "75440",
    "end": "81680"
  },
  {
    "text": "application you know my boss comes into my room Hey this new thing Cuban it is comes up packaged to this application",
    "start": "81680",
    "end": "87530"
  },
  {
    "text": "and deploy it into a kubernetes architecture so what do i do so this is sort of my journey on how I see sort of",
    "start": "87530",
    "end": "95090"
  },
  {
    "text": "the flow looking like this is open source github repo on AWS samples",
    "start": "95090",
    "end": "100780"
  },
  {
    "text": "kubernetes for Java developer so the name is very intuitive in that sense everything I'm gonna do there are",
    "start": "100780",
    "end": "106760"
  },
  {
    "text": "absolutely no slides is going to be walked through this github repo essentially so if you look at the table",
    "start": "106760",
    "end": "112190"
  },
  {
    "text": "of contents here I'm gonna quickly walk through what my basic application is the",
    "start": "112190",
    "end": "117290"
  },
  {
    "text": "application is by purpose very simple is just a spring boot application that",
    "start": "117290",
    "end": "122450"
  },
  {
    "text": "returns HelloWorld that's it oh that's all it does you know and you can mimic your complex server application from it if you want to then",
    "start": "122450",
    "end": "129739"
  },
  {
    "text": "I'll talk about the journey on how we go through kubernetes sizing your java application what is it required to",
    "start": "129739",
    "end": "135700"
  },
  {
    "text": "docker package your application what are my different options as a Java developer",
    "start": "135700",
    "end": "140900"
  },
  {
    "text": "what do I need to do to create a kubernetes manifests around it and how do I deploy my entire thing as an",
    "start": "140900",
    "end": "146510"
  },
  {
    "text": "application then we talked about a little bit of you know as a Java developer I'm used to tools like",
    "start": "146510",
    "end": "152090"
  },
  {
    "text": "IntelliJ Eclipse NetBeans debugging my application how do I bring those paradigms you know as I'm carbonate",
    "start": "152090",
    "end": "158239"
  },
  {
    "text": "resizing my application essentially we'll talk about particularly from Java perspective and when you are creating",
    "start": "158239",
    "end": "164989"
  },
  {
    "text": "micro-services based application you really need to trim down your image size so we'll pay a little bit special",
    "start": "164989",
    "end": "170810"
  },
  {
    "text": "attention to how do we trim the image size over there particularly with features of starting with jdk 11 onwards",
    "start": "170810",
    "end": "176810"
  },
  {
    "text": "or 9 onwards actually but now 11 essentially we'll talk about how do you",
    "start": "176810",
    "end": "182329"
  },
  {
    "text": "migrate your application from dev to staging to prod those different stages we'll talk a little bit about how do you",
    "start": "182329",
    "end": "189019"
  },
  {
    "text": "create a kubernetes cluster on AWS for that and then will depending upon the",
    "start": "189019",
    "end": "194450"
  },
  {
    "text": "time towards the end we'll talk a little bit about your cross-cutting concerns like monitoring metrics logging Canary",
    "start": "194450",
    "end": "202280"
  },
  {
    "text": "deployments a B blue-green whatever name you call it as so we'll talk a little bit about that and then the last thing",
    "start": "202280",
    "end": "208549"
  },
  {
    "text": "would be of course a little bit about running a deployment pipeline not just on your local laptop where I can see",
    "start": "208549",
    "end": "213799"
  },
  {
    "text": "quick feedback but possibly running it on the cloud as well okay so this is pretty much the flow of the repo here as",
    "start": "213799",
    "end": "219980"
  },
  {
    "text": "well and I'm just going to literally walk through one by one copy paste the code that should really work if it",
    "start": "219980",
    "end": "226489"
  },
  {
    "text": "doesn't work that's a problem you know so more than encourage to you to file",
    "start": "226489",
    "end": "231500"
  },
  {
    "text": "issues send pull requests any way that you can contribute you know everything is welcome essentially so my application",
    "start": "231500",
    "end": "241010"
  },
  {
    "text": "is pretty simple it's a simple spring boot application so I'm going to fire up my IntelliJ here while it comes up it's a spring boot",
    "start": "241010",
    "end": "248269"
  },
  {
    "text": "application all it does is returns a simple hello so host port and slash",
    "start": "248269",
    "end": "254120"
  },
  {
    "text": "hello okay let me walk you through the application here so here is my gradient",
    "start": "254120",
    "end": "264199"
  },
  {
    "text": "controller and as you can see it's a simple Springwood application just returns hello so nothing fancy in there",
    "start": "264199",
    "end": "270289"
  },
  {
    "text": "if you look at say Palm D'Or XML it's again a standard for map map XML",
    "start": "270289",
    "end": "278810"
  },
  {
    "text": "here I'm using spring boot start or web I have a spring good maven plugin that allows me to run the application in my",
    "start": "278810",
    "end": "285410"
  },
  {
    "text": "console and I have a jib maven plug-in here that I'll talk about a little bit later and that's in a separate profile",
    "start": "285410",
    "end": "292040"
  },
  {
    "text": "so ignore that profile for a second but for all practical purpose this is a very standard java application the way you",
    "start": "292040",
    "end": "298340"
  },
  {
    "text": "will start with so now I'm gonna go into my console here well first of all if I",
    "start": "298340",
    "end": "305960"
  },
  {
    "text": "go back to the repo here the source code is in the app directory so you look at",
    "start": "305960",
    "end": "311570"
  },
  {
    "text": "app and that's where all my source code is over there and that's the directory that I showed in IntelliJ as well okay",
    "start": "311570",
    "end": "317300"
  },
  {
    "text": "so I'm in the app directory which is kubernetes for Java developers app and all I'm gonna say is maven spring boot :",
    "start": "317300",
    "end": "324260"
  },
  {
    "text": "run okay so let's kind of see what my application behavior looks like to begin with at least so it fires up my",
    "start": "324260",
    "end": "330680"
  },
  {
    "text": "application you know downloads Internet if it needs to and then I'm gonna say curl well the",
    "start": "330680",
    "end": "338090"
  },
  {
    "text": "application is running locally on port 8080 and holo is the URL for the application if I do this it just returns",
    "start": "338090",
    "end": "346280"
  },
  {
    "text": "a response hello very simple very clean response and the application is intentionally very simple because the",
    "start": "346280",
    "end": "352910"
  },
  {
    "text": "whole point is to show the journey from there onwards you know you are the subject matter experts for how your application looks like so let's go back",
    "start": "352910",
    "end": "360950"
  },
  {
    "text": "here for a second and terminate my",
    "start": "360950",
    "end": "366229"
  },
  {
    "text": "application so that I can free up my port here okay so that's a very simple step here the next thing I want to do is",
    "start": "366229",
    "end": "374120"
  },
  {
    "text": "I want to start converting this image a Java image into a darker package now or",
    "start": "374120",
    "end": "379250"
  },
  {
    "text": "darker image now okay so how do I take that and what are my different options well I can use there are tools called as",
    "start": "379250",
    "end": "386210"
  },
  {
    "text": "docker maven plug-in or Gradle maven docker Gradle plugin those are the plugins that lock into",
    "start": "386210",
    "end": "392240"
  },
  {
    "text": "your paw mixer now and you can tie the phase and the goal together so even if",
    "start": "392240",
    "end": "397280"
  },
  {
    "text": "you say maven package as part of the maven package it will invoke that particular goal like you know in case of",
    "start": "397280",
    "end": "403070"
  },
  {
    "text": "a docker maven plug-in it will build the docker image and it will generate the docker image as part of your application itself so",
    "start": "403070",
    "end": "409789"
  },
  {
    "text": "you see me win package and if you specify a profile depending upon if it's specified in the profile or in the main",
    "start": "409789",
    "end": "415849"
  },
  {
    "text": "form XML you can generate a darker image right there itself similarly works for Gradle as well well",
    "start": "415849",
    "end": "421489"
  },
  {
    "text": "that's one approach the other approach that I've seen customers using all the time is actually a few months ago a few",
    "start": "421489",
    "end": "427039"
  },
  {
    "text": "weeks ago rather I ran a survey I asked how do developers prefer to generate their darker image there's a docker",
    "start": "427039",
    "end": "433399"
  },
  {
    "text": "plugin there's a Gradle plugin there's a docker file which is sort of the standard syntax or that docker",
    "start": "433399",
    "end": "439159"
  },
  {
    "text": "provides on how you create your docker images by overwhelming majority I would say pretty much 70% of the developers",
    "start": "439159",
    "end": "445159"
  },
  {
    "text": "that I surveyed and they were about 400 plus words to that survey so they were about 70 percent of developers said they",
    "start": "445159",
    "end": "452479"
  },
  {
    "text": "use docker file so let's take a look at docker file and essentially what we can do over there so if I look at my docker",
    "start": "452479",
    "end": "463489"
  },
  {
    "text": "file here so here I am let me close",
    "start": "463489",
    "end": "468559"
  },
  {
    "text": "these here so here is my docker file now the way docker file looks like is you know it has a bunch of instructions in",
    "start": "468559",
    "end": "474860"
  },
  {
    "text": "there you the very first statement in a docker file is typically a from line which says okay there is my base image so I'm going to start with the base",
    "start": "474860",
    "end": "480889"
  },
  {
    "text": "image and then on that base operating system I'm gonna build my application now in this case I'm using maven 3.5 JDK",
    "start": "480889",
    "end": "489139"
  },
  {
    "text": "8 on very line first that is sort of my base image over there why is that relevant",
    "start": "489139",
    "end": "494719"
  },
  {
    "text": "well that is relevant because if I am giving I can literally give this docker file to any other machine I don't need",
    "start": "494719",
    "end": "501919"
  },
  {
    "text": "any other third-party tools to be installed were there because now I'm using maven as the base image itself so",
    "start": "501919",
    "end": "508489"
  },
  {
    "text": "I could literally say docker image build and it will download the base image",
    "start": "508489",
    "end": "514638"
  },
  {
    "text": "which includes maven tooling as part of that itself so it kind of allows me to package my dependencies of my",
    "start": "514639",
    "end": "521508"
  },
  {
    "text": "application independent of runtime also build time as part of the docker file itself so it can easily package it in",
    "start": "521509",
    "end": "528410"
  },
  {
    "text": "there now one of the typical ways is that you will if you run it every time",
    "start": "528410",
    "end": "533449"
  },
  {
    "text": "you run it the because the way docker provides the image layering it would download the maven artifacts all the",
    "start": "533449",
    "end": "539449"
  },
  {
    "text": "time so that could really bloat up your build time essentially so one of the ways that I've seen people doing is",
    "start": "539449",
    "end": "545300"
  },
  {
    "text": "where they can say create a maven repository and make me in my case m2 door tarde or GZ so I've created a clean",
    "start": "545300",
    "end": "552590"
  },
  {
    "text": "maven repository and then I can just copy that maven repository into the file system of the image itself and the",
    "start": "552590",
    "end": "563300"
  },
  {
    "text": "difference here is it's called as add the next command is copy well what add does it it takes em to",
    "start": "563300",
    "end": "568790"
  },
  {
    "text": "door turd or GZ and it expands automatically expands into the root directory what copy does is just as a copy it",
    "start": "568790",
    "end": "576020"
  },
  {
    "text": "doesn't really expand anything so depending upon you know how you're structuring your docker file you can start leveraging it accordingly now I",
    "start": "576020",
    "end": "583700"
  },
  {
    "text": "have my maven dependencies copied in there then I'm saying maven use the pom.xml coming from the abbe de rectory",
    "start": "583700",
    "end": "589940"
  },
  {
    "text": "and do the clean package so clean and simple that allows me to build it now typically your docker file will have a",
    "start": "589940",
    "end": "596750"
  },
  {
    "text": "single from statement this one has two from statements and that's called as a multi-stage docker file and what's",
    "start": "596750",
    "end": "603380"
  },
  {
    "text": "happening here is on line one essentially I'm saying here is my first stage and the name is called as build my",
    "start": "603380",
    "end": "610010"
  },
  {
    "text": "second stage really starts from line eight and there I'm saying oh user open JDK 8 : eight - JRE image okay one of",
    "start": "610010",
    "end": "618620"
  },
  {
    "text": "the big design patterns rather anti patterns that I've seen is customers will build their java applications and",
    "start": "618620",
    "end": "623750"
  },
  {
    "text": "they'll use open JDK as the base image or I mean open JDK is just one distribution essentially but they'll use",
    "start": "623750",
    "end": "630440"
  },
  {
    "text": "JDK as a base image do you really need JDK as a base image so my point here is instead of using JDK as a base image try",
    "start": "630440",
    "end": "637640"
  },
  {
    "text": "to use JRE as a base image because if you are only packaging a runtime artifact which is your jar file all you",
    "start": "637640",
    "end": "644540"
  },
  {
    "text": "need is just a JRE you don't need the entire development kit or what they are essentially and that could significantly",
    "start": "644540",
    "end": "649850"
  },
  {
    "text": "reduce the size of your docker image itself so that's a big difference in",
    "start": "649850",
    "end": "655370"
  },
  {
    "text": "terms of size and it's very relevant particularly in a micro-services world because your image could be dynamically",
    "start": "655370",
    "end": "660470"
  },
  {
    "text": "downloaded on any host at any point of time so you want to make sure your image size kind of stays lean and clean in",
    "start": "660470",
    "end": "666890"
  },
  {
    "text": "that sense alright so in my second stage I'm using JRE as a base image I'm",
    "start": "666890",
    "end": "671990"
  },
  {
    "text": "exposing certain ports all I'm doing is the build stage on copying the target",
    "start": "671990",
    "end": "678170"
  },
  {
    "text": "directory into my second stage I remember in the first stage I have em to Todd or Jeezy all the class files etc",
    "start": "678170",
    "end": "684440"
  },
  {
    "text": "generated over there I don't need that as part of my darker image so I'm explicitly copying the generated target",
    "start": "684440",
    "end": "691580"
  },
  {
    "text": "jar file into my second stage I set up",
    "start": "691580",
    "end": "696920"
  },
  {
    "text": "the work there set up some Java options these are useful for me when I'm using debugging my applications later and then",
    "start": "696920",
    "end": "702440"
  },
  {
    "text": "I just fire up the application so a couple of important points here using multi stage file first stage for",
    "start": "702440",
    "end": "709070"
  },
  {
    "text": "building discarding everything from the first stage just picking the jar file copying it to the second stage and the",
    "start": "709070",
    "end": "714650"
  },
  {
    "text": "second stage particularly again using JRE as a base image not JDK that's an important aspect okay so that's sort of",
    "start": "714650",
    "end": "722060"
  },
  {
    "text": "the command that we can use over here I can literally copy this command here and if I go to my console here I can just",
    "start": "722060",
    "end": "730100"
  },
  {
    "text": "say docker image build I give it a tag in this case Aruna Gupta slash gridding and I say dot it takes dot as the",
    "start": "730100",
    "end": "737270"
  },
  {
    "text": "current context and of course I don't have m2 dot or dot G Z so I won't spend",
    "start": "737270",
    "end": "746600"
  },
  {
    "text": "time on creating m2 dot dot or GZ but there are instructions essentially on how you can create em to Todd or GZ here",
    "start": "746600",
    "end": "752300"
  },
  {
    "text": "so I can say maven create a clean em to Todd or GZ for me but once I have m to",
    "start": "752300",
    "end": "758390"
  },
  {
    "text": "Todd or GZ then I can just create a docker image out of it very conveniently so that's one way of creating dock",
    "start": "758390",
    "end": "763940"
  },
  {
    "text": "that's the second way of degrading docker image actually we talked about docker maven plug-in multistage docker",
    "start": "763940",
    "end": "769190"
  },
  {
    "text": "file and then the third tool that is done by the Google container team as well as Jim Jim is again plugged in as a",
    "start": "769190",
    "end": "777770"
  },
  {
    "text": "docker maven plugin and it has certain advantages that are very relevant particularly for Java developers because",
    "start": "777770",
    "end": "784580"
  },
  {
    "text": "first of all it doesn't need a docker demon so in my case like you know docker",
    "start": "784580",
    "end": "789710"
  },
  {
    "text": "maven plug-in or docker file it always talks to a docker demon or docker engine running on my local host or somewhere",
    "start": "789710",
    "end": "795860"
  },
  {
    "text": "whatever my daugher client is configured to the outer developers may not have a docker demon in that sense so that's",
    "start": "795860",
    "end": "802130"
  },
  {
    "text": "where jib tool works very handy it doesn't need a docker demon second thing is you know if you look at the",
    "start": "802130",
    "end": "807470"
  },
  {
    "text": "hawker files you know something the files could be really scary you know and how complex the darker file could be even though the whole intention and",
    "start": "807470",
    "end": "814040"
  },
  {
    "text": "design was to keep it simple but doctor files could be really hard sometimes to write so in that sense you know if you",
    "start": "814040",
    "end": "820070"
  },
  {
    "text": "are affirmed or XML programmer if you like the format over there it just allows you to write everything in the",
    "start": "820070",
    "end": "826040"
  },
  {
    "text": "Palm D'Or XML format over there and the third part which is actually the fourth part the other which is very very",
    "start": "826040",
    "end": "831650"
  },
  {
    "text": "relevant is if you understand how the images are layered you know even if you take a look at a darker image is",
    "start": "831650",
    "end": "837770"
  },
  {
    "text": "essentially a bunch of layers the very first layer is a base operating system then top of that then you have a JDK",
    "start": "837770",
    "end": "843470"
  },
  {
    "text": "then you have your application and so on and so forth but now in a maven world or",
    "start": "843470",
    "end": "848690"
  },
  {
    "text": "enjoy our world if you're building a spring boot application what is the part that changes the most the part that",
    "start": "848690",
    "end": "854810"
  },
  {
    "text": "changes the most is your application not your snapshot dependencies or your other jar file dependencies so essentially",
    "start": "854810",
    "end": "861530"
  },
  {
    "text": "what Jib does is it provides a huge advantage it creates those layers where",
    "start": "861530",
    "end": "866570"
  },
  {
    "text": "there is a layer for jar dependencies there is a layer for snapshot dependencies and there is a layer for",
    "start": "866570",
    "end": "871910"
  },
  {
    "text": "your application classes only so essentially when you are building the image is only rewriting that application",
    "start": "871910",
    "end": "879770"
  },
  {
    "text": "class layer those other dependencies if they are not changed it identifies them and it keeps it exactly alike what that",
    "start": "879770",
    "end": "887270"
  },
  {
    "text": "means is now when you're pushing the image the image is again pushed to the docker hub repo as a set of layers so",
    "start": "887270",
    "end": "894350"
  },
  {
    "text": "when you're pushing the repo pushing the image as well you know you're not pushing like a hundred megabyte image but you're pushing only your application",
    "start": "894350",
    "end": "901790"
  },
  {
    "text": "classes which are typically in the few kilobytes fragment as well so I think that's a very big advantage of Jib essentially so I've seen customers using",
    "start": "901790",
    "end": "909380"
  },
  {
    "text": "docker maven plugin docker file and jib in all possible cases so see you know",
    "start": "909380",
    "end": "914900"
  },
  {
    "text": "there's no golden hammer here see what works for you and see and then how you can actually create an image for yourself now if I take a look at it here",
    "start": "914900",
    "end": "922010"
  },
  {
    "text": "so what I can do is in my intelligence",
    "start": "922010",
    "end": "927050"
  },
  {
    "text": "entually I can go to the profile that we were hiding earlier here's a jib maven",
    "start": "927050",
    "end": "933860"
  },
  {
    "text": "plug-in I'm using version zero point nine point three n-- all I want to say specify is I just want to use open JDK",
    "start": "933860",
    "end": "939530"
  },
  {
    "text": "eight Jerry as my base image as I was doing an my dockerfile essentially I just give it",
    "start": "939530",
    "end": "944850"
  },
  {
    "text": "a darker image I specify my options the ports I want to expose and I tie the",
    "start": "944850",
    "end": "950550"
  },
  {
    "text": "package to the build phase so now I can go back here in my terminal essentially",
    "start": "950550",
    "end": "958440"
  },
  {
    "text": "I can say maven compile jib rocker bill - P jib and this is gonna use the jib",
    "start": "958440",
    "end": "965490"
  },
  {
    "text": "maven plug-in and build my docker image as well and then when I look at the history of the image it will show you",
    "start": "965490",
    "end": "971100"
  },
  {
    "text": "exactly how the layering is being done",
    "start": "971100",
    "end": "974750"
  },
  {
    "text": "now this is a sort of a bug in the gem itself because it's saying retrieving registry credentials for registry hub",
    "start": "976130",
    "end": "982380"
  },
  {
    "text": "docker comm if it's not building to the local docker engine what it's doing is it's actually building the image but",
    "start": "982380",
    "end": "989250"
  },
  {
    "text": "it's pushing the image to the docker hub directly so the jib plugin I filed a bug on this they need to provide a little",
    "start": "989250",
    "end": "994740"
  },
  {
    "text": "bit more active feedback on it but until then what is really doing is right now pushing the image directly using the",
    "start": "994740",
    "end": "1000200"
  },
  {
    "text": "conference Wi-Fi to my docker hub so we'll wait for it to complete and then",
    "start": "1000200",
    "end": "1006020"
  },
  {
    "text": "we'll come back to it essentially now let's say if your image is up and running what I want to do is I wanna i",
    "start": "1006020",
    "end": "1012950"
  },
  {
    "text": "created my docker image i can copy this command here so let me fire it up in my",
    "start": "1012950",
    "end": "1019010"
  },
  {
    "text": "terminal here so all i'm gonna do is i",
    "start": "1019010",
    "end": "1025490"
  },
  {
    "text": "want to run that container now my java application is packaged as a docker image now I'm saying docker container",
    "start": "1025490",
    "end": "1031250"
  },
  {
    "text": "run I'm giving it a name greeting doing the port forwarding 8080 on the",
    "start": "1031250",
    "end": "1037220"
  },
  {
    "text": "localhost 8080 in the container and I'm running it in a detached mode so in a background container and then I'm using",
    "start": "1037220",
    "end": "1043459"
  },
  {
    "text": "this particular image so if I fire it up it's gonna run my container here okay and now I can say docker container logs",
    "start": "1043459",
    "end": "1053210"
  },
  {
    "text": "and my name is greeting so it will show me the container logs essentially and",
    "start": "1053210",
    "end": "1058340"
  },
  {
    "text": "the same logs that was shown in my console for my java application are now visible using my docker image itself so",
    "start": "1058340",
    "end": "1065420"
  },
  {
    "text": "now I can give the same command here if we go back here I can say a curl HTTP",
    "start": "1065420",
    "end": "1070970"
  },
  {
    "text": "localhost 8080 hello I'm getting the exact same response but this time now",
    "start": "1070970",
    "end": "1076520"
  },
  {
    "text": "the response is actually coming from darker image so first step is get your java application up and running second step",
    "start": "1076520",
    "end": "1083299"
  },
  {
    "text": "is to package your java application as a darker image make sure you're actually getting the exact same results okay",
    "start": "1083299",
    "end": "1089090"
  },
  {
    "text": "so what I'm gonna do is I'm gonna go back here to my container the logs look",
    "start": "1089090",
    "end": "1095809"
  },
  {
    "text": "good so I'm gonna just remove the container to free up the port here so",
    "start": "1095809",
    "end": "1101659"
  },
  {
    "text": "there goes my container away so as I terminated my application my Java can't docker container goes away as well so",
    "start": "1101659",
    "end": "1108529"
  },
  {
    "text": "what is sort of my now if I look at here for example docker image LS grab",
    "start": "1108529",
    "end": "1117730"
  },
  {
    "text": "greeting I do have a lot of greetings over here but if I look at say Aruna Gupta slash greeting and say latest",
    "start": "1117730",
    "end": "1124519"
  },
  {
    "text": "image here okay if I look at the latest image this is about 490 megabytes now if I look at it's a darker image history",
    "start": "1124519",
    "end": "1132040"
  },
  {
    "text": "[Music] slash greeting if I look at this greeting here here is my base image here",
    "start": "1132040",
    "end": "1139610"
  },
  {
    "text": "which is about hundred megabytes then apt-get app install you know installing",
    "start": "1139610",
    "end": "1144830"
  },
  {
    "text": "some packages over here here comes all of my JDK about three hundred nine megabytes and here is my application",
    "start": "1144830",
    "end": "1151820"
  },
  {
    "text": "here itself forty six point eight megabytes so overall it does become quite bulky now imagine on the fly you",
    "start": "1151820",
    "end": "1158419"
  },
  {
    "text": "are scaling your microservices up and down and this 490 megabytes of image needs to be downloaded on a host on the",
    "start": "1158419",
    "end": "1165830"
  },
  {
    "text": "fly that basically adds to your service scaling time that's where is super critical that you keep your image size",
    "start": "1165830",
    "end": "1172789"
  },
  {
    "text": "really small now Jerry canine introduced the concept",
    "start": "1172789",
    "end": "1179990"
  },
  {
    "text": "of modularity so you can really you know they're what they have done is they've taken the JDK and other splitted into multiple modules and your application",
    "start": "1179990",
    "end": "1187070"
  },
  {
    "text": "could be one of the modules and for example if you're writing a spring boot application you don't really need like a",
    "start": "1187070",
    "end": "1193429"
  },
  {
    "text": "colbaugh or you know a WT or swing kind of modules that's the important aspect",
    "start": "1193429",
    "end": "1198470"
  },
  {
    "text": "okay so what you can do here is you can use jdk 11 which is are the latest jdk",
    "start": "1198470",
    "end": "1204740"
  },
  {
    "text": "from oracle essentially but and you can create a custom JRE you don't need the full-blown",
    "start": "1204740",
    "end": "1210230"
  },
  {
    "text": "re you can create a custom JRE very easily and for that we essentially use two tools j-link and jade apps okay so",
    "start": "1210230",
    "end": "1218210"
  },
  {
    "text": "let's see how we're gonna use those tools well the first tool that we're gonna use is called as Jade apps jaidev's is a",
    "start": "1218210",
    "end": "1224150"
  },
  {
    "text": "tool package in JDK itself and all we are saying is that okay",
    "start": "1224150",
    "end": "1229250"
  },
  {
    "text": "Jade apps print the module dependencies for my app dot jar file okay that's the",
    "start": "1229250",
    "end": "1235429"
  },
  {
    "text": "jar file that is generated from Singapore Springwood application and spring by a to spring boot by itself is",
    "start": "1235429",
    "end": "1242030"
  },
  {
    "text": "not modular so I have to specify all the modules that spring boot really depends upon and this is the list of modules",
    "start": "1242030",
    "end": "1248720"
  },
  {
    "text": "that it depends upon but essentially I'm picking handpicking the modules that are",
    "start": "1248720",
    "end": "1253820"
  },
  {
    "text": "really needed for my spring boot application and then if there are my application has any dependencies so",
    "start": "1253820",
    "end": "1259460"
  },
  {
    "text": "those are the only modules especially the role of jade apps is to give me the list of modules that the application",
    "start": "1259460",
    "end": "1264950"
  },
  {
    "text": "depends upon and then I'm using the tool called as J link with J link I'm saying create a custom JRE for me by adding all",
    "start": "1264950",
    "end": "1273620"
  },
  {
    "text": "these modules now what I get is a custom JRE which is exactly tuned for my",
    "start": "1273620",
    "end": "1279530"
  },
  {
    "text": "application as opposed to the full-blown GRE which I don't really care about if",
    "start": "1279530",
    "end": "1286130"
  },
  {
    "text": "you take a look at the docker file here for that so I have docker file door JRE so all I'm doing is instead of using",
    "start": "1286130",
    "end": "1292460"
  },
  {
    "text": "maven Apache Apache maven as a base image or open JDK Joey is a base image",
    "start": "1292460",
    "end": "1297530"
  },
  {
    "text": "I'm using debian 9 slim I generated my custom JRE and then in that custom JRE",
    "start": "1297530",
    "end": "1304490"
  },
  {
    "text": "is my VM so I'm using my jury bin slash Java to fire up my docker image essentially or my java application well",
    "start": "1304490",
    "end": "1312919"
  },
  {
    "text": "what is the size difference essentially what you see here is huge actually my",
    "start": "1312919",
    "end": "1318220"
  },
  {
    "text": "regular image was 490 megabytes the image that I generated using custom",
    "start": "1318220",
    "end": "1323600"
  },
  {
    "text": "cherry is 162 megabytes so that's literally less than one third the size of my regular image so would recommend",
    "start": "1323600",
    "end": "1331460"
  },
  {
    "text": "taking a look at it if you can really fine-tune the size of your docker image by using custom JRE alright so",
    "start": "1331460",
    "end": "1343090"
  },
  {
    "text": "second step is essentially creating a darker image out of my java application and then making sure that application",
    "start": "1343090",
    "end": "1349840"
  },
  {
    "text": "continues to work whether you are using docker maven plugin docker file J whatever tool you're using to package",
    "start": "1349840",
    "end": "1355420"
  },
  {
    "text": "the application but now the third step is really to write a kubernetes manifest",
    "start": "1355420",
    "end": "1360970"
  },
  {
    "text": "for that application essentially so what I'm gonna do is I need a kubernetes cluster for my machine there are a",
    "start": "1360970",
    "end": "1367240"
  },
  {
    "text": "couple of options for that the first one that has been prevalent for a long time is mini cube so people download mini",
    "start": "1367240",
    "end": "1372880"
  },
  {
    "text": "cube that gives you a single node kubernetes cluster on your machine but you can get and you can get very easily started with that now the other option",
    "start": "1372880",
    "end": "1380350"
  },
  {
    "text": "is if you do have the her engine on your install on your machine so for example this is a macbook and on macbook I have",
    "start": "1380350",
    "end": "1387010"
  },
  {
    "text": "docker for Mac install so if you see on the top here you can see it yeah I can",
    "start": "1387010",
    "end": "1393100"
  },
  {
    "text": "click on preferences later in docker for Mac I'm seeing this",
    "start": "1393100",
    "end": "1401800"
  },
  {
    "text": "kubernetes tab essentially now docker used to have only docker swarm as an orchestration engine it has kubernetes",
    "start": "1401800",
    "end": "1408880"
  },
  {
    "text": "baked into the latest version of docker itself so you can say you know what enable kubernetes as part of my cluster",
    "start": "1408880",
    "end": "1415330"
  },
  {
    "text": "itself of my darker for Mac itself and what it gives you is again a single node cluster so to me I mean I've not used",
    "start": "1415330",
    "end": "1422200"
  },
  {
    "text": "mini cube for several months now if I need a single node kubernetes cluster I just literally click on enable",
    "start": "1422200",
    "end": "1429100"
  },
  {
    "text": "kubernetes here apply and that's it and here is you can see it's showing you docker is running and kubernetes is",
    "start": "1429100",
    "end": "1435010"
  },
  {
    "text": "running so I can very easily get started with a single node kubernetes cluster if I have the docker for Mac or whatever",
    "start": "1435010",
    "end": "1441070"
  },
  {
    "text": "your local talker version is once you create a kubernetes cluster then the",
    "start": "1441070",
    "end": "1447970"
  },
  {
    "text": "idea is that now I need to take that docker image and convert it into a",
    "start": "1447970",
    "end": "1453190"
  },
  {
    "text": "kubernetes manifest and then deploy that application think of your application your application has typically multiple",
    "start": "1453190",
    "end": "1459400"
  },
  {
    "text": "components you know and then each component will have to have a kubernetes manifest so for the first time is good",
    "start": "1459400",
    "end": "1467050"
  },
  {
    "text": "to start with the kubernetes manifest that okay i'm going to write a kubernetes service or a kubernetes deployment and i'm going to create that",
    "start": "1467050",
    "end": "1473230"
  },
  {
    "text": "manifest but then pretty soon you start have multiple services and multiple",
    "start": "1473230",
    "end": "1478870"
  },
  {
    "text": "deployments and then it becomes a challenge that how do I really start deploying multiple of those objects",
    "start": "1478870",
    "end": "1484450"
  },
  {
    "text": "together how do I bring consistency across multiple of those objects and that's sort of the challenge that you",
    "start": "1484450",
    "end": "1490630"
  },
  {
    "text": "have to face that's where he'll charge comes in handy so helm charts is an abstraction on top",
    "start": "1490630",
    "end": "1496750"
  },
  {
    "text": "of multiple kubernetes manifests which basically defines how a kubernetes application should look like so you have",
    "start": "1496750",
    "end": "1503050"
  },
  {
    "text": "a kubernetes application defined as a helmet art which has multiple manifests in there so let's take a look at it what",
    "start": "1503050",
    "end": "1509680"
  },
  {
    "text": "my manifest could potentially look like",
    "start": "1509680",
    "end": "1513540"
  },
  {
    "text": "so I'm going to go to my manifest directory here in manifest I have a my app directory well let's take a look at",
    "start": "1520500",
    "end": "1526990"
  },
  {
    "text": "you know a simple manifest first of all here is a typical kubernetes manifest",
    "start": "1526990",
    "end": "1532870"
  },
  {
    "text": "I'm saying this is apps slash v1 API I'm defining deployment manifest here",
    "start": "1532870",
    "end": "1539340"
  },
  {
    "text": "deployment object which is a standard kubernetes object on how you create a deployment in kubernetes I this",
    "start": "1539340",
    "end": "1545770"
  },
  {
    "text": "deployment has some metadata I'm saying I want a single replica of this",
    "start": "1545770",
    "end": "1550990"
  },
  {
    "text": "particular deployment I define certain match labels which we'll get to in a second but then in the deployment what I",
    "start": "1550990",
    "end": "1558160"
  },
  {
    "text": "have is a pod which is first-class kubernetes concept and pod is the lowest",
    "start": "1558160",
    "end": "1563740"
  },
  {
    "text": "kubernetes object that you can create by yourself essentially and pod will have like one or more containers now",
    "start": "1563740",
    "end": "1570880"
  },
  {
    "text": "containers is a part that we just learned about as part of creating a docker image so that's exactly sort of",
    "start": "1570880",
    "end": "1576130"
  },
  {
    "text": "my intersection point over there now if I go back to my manifest here so our deployment I have a replica I have",
    "start": "1576130",
    "end": "1582240"
  },
  {
    "text": "metadata here and then in the pod spec which is called as a pod spec essentially I can define my containers",
    "start": "1582240",
    "end": "1589210"
  },
  {
    "text": "and this is sort of my image that I just created so once you have your java application ready created your darker",
    "start": "1589210",
    "end": "1595450"
  },
  {
    "text": "image pushed to a docker hub then you can put it into a kubernetes manifest just like this exactly as shown over",
    "start": "1595450",
    "end": "1601120"
  },
  {
    "text": "here okay and if once again here I'm exposing my ports here 8080 for HTTP now",
    "start": "1601120",
    "end": "1607320"
  },
  {
    "text": "what this deployment will create is a pod each board is given an IP address and",
    "start": "1607320",
    "end": "1613840"
  },
  {
    "text": "that IP address is ephemeral what that means is a pod if it's terminated on a machine and if it started in a different",
    "start": "1613840",
    "end": "1620950"
  },
  {
    "text": "machine will may be given a different IP address but you want to be sub you wanna have some means to be able to refer to",
    "start": "1620950",
    "end": "1627220"
  },
  {
    "text": "that part so IP address is not the way by which you will refer it so what you do is you really create a kubernetes",
    "start": "1627220",
    "end": "1634450"
  },
  {
    "text": "service so what i'm doing here is i'm creating a kubernetes service here and",
    "start": "1634450",
    "end": "1639970"
  },
  {
    "text": "in this I'm saying and my service specification essentially I'm saying selector is app : greeting and what app",
    "start": "1639970",
    "end": "1647980"
  },
  {
    "text": ": greeting is is a name value pair that is attached to any kubernetes pod so if",
    "start": "1647980",
    "end": "1654220"
  },
  {
    "text": "I go back to my pods back here and my parts back I'm attaching the metadata here and in the metadata I'm saying the",
    "start": "1654220",
    "end": "1660639"
  },
  {
    "text": "labels are app : greeting so nothing of it this way you create a kubernetes",
    "start": "1660639",
    "end": "1665740"
  },
  {
    "text": "deployment with a single replica of the pod with a particular label app : greeting and then you create a",
    "start": "1665740",
    "end": "1672190"
  },
  {
    "text": "kubernetes service and the service says oh give me a pod that is has that",
    "start": "1672190",
    "end": "1677889"
  },
  {
    "text": "particular label it doesn't know who is creating that part but it's a loosely coupled architecture essentially anybody",
    "start": "1677889",
    "end": "1684039"
  },
  {
    "text": "can create that part but it's highly recommended that your service and deployment are kind of coupled together",
    "start": "1684039",
    "end": "1689769"
  },
  {
    "text": "essentially and then in the service again I'm saying what are the ports I",
    "start": "1689769",
    "end": "1695500"
  },
  {
    "text": "need to expose if I say type : load balancer and now if the service is",
    "start": "1695500",
    "end": "1700840"
  },
  {
    "text": "deployed on a cloud provider it uses the cloud provider specific load balancer so",
    "start": "1700840",
    "end": "1707080"
  },
  {
    "text": "for example if you deploy this service on AWS it will basically create an instance of elastic load balancer for",
    "start": "1707080",
    "end": "1713710"
  },
  {
    "text": "you okay so from developer perspective the way it works is you create a",
    "start": "1713710",
    "end": "1718960"
  },
  {
    "text": "deployment you create a service if you want a reference able name to the all",
    "start": "1718960",
    "end": "1724330"
  },
  {
    "text": "the pods and then behind the scene your number of replicas for the deployment",
    "start": "1724330",
    "end": "1729519"
  },
  {
    "text": "can scale up and down but your referenceable name stays exactly the same and there are multiple ways by",
    "start": "1729519",
    "end": "1735580"
  },
  {
    "text": "which those number of replicas can go up and down now you can set up health metrics you can set up thresholds CPU",
    "start": "1735580",
    "end": "1742840"
  },
  {
    "text": "memory thresholds based upon replicas can automatically go up and down or you can manually scale them up",
    "start": "1742840",
    "end": "1748060"
  },
  {
    "text": "and down and there are ways and mechanisms in kubernetes to scale those itself no truly enough stream Bay as we",
    "start": "1748060",
    "end": "1757000"
  },
  {
    "text": "were talking this is literally done for one service your application is typically not just one service",
    "start": "1757000",
    "end": "1763120"
  },
  {
    "text": "application is multiple services so you'll have deployments and service for pretty much all the services and that's",
    "start": "1763120",
    "end": "1769510"
  },
  {
    "text": "exactly the role that is played very well by a covenant is helm chart so let's go back here take a look at say my",
    "start": "1769510",
    "end": "1776110"
  },
  {
    "text": "AB this is in the manifest directory my app and here I'm seeing sort of how my",
    "start": "1776110",
    "end": "1781780"
  },
  {
    "text": "application really looks like okay so let's take a look at chart dot yeah Mel first this is sort of the metadata about",
    "start": "1781780",
    "end": "1788020"
  },
  {
    "text": "the chart itself version etc that you want to specify here then I have a values dot Yambol this is where I",
    "start": "1788020",
    "end": "1795280"
  },
  {
    "text": "specify all sort of the hard coding of my different image types my ports my",
    "start": "1795280",
    "end": "1802180"
  },
  {
    "text": "number of replicas all that information can be specified over here because essentially what helm charts are are",
    "start": "1802180",
    "end": "1808720"
  },
  {
    "text": "they're templatized kubernetes manifest so if I look at say templates now I look",
    "start": "1808720",
    "end": "1816430"
  },
  {
    "text": "at greeting deployment for example or including deployment I'm still saying so v1 beta one API is a deployment object",
    "start": "1816430",
    "end": "1823090"
  },
  {
    "text": "but now I'm using release dot name which is a name value pair that comes from",
    "start": "1823090",
    "end": "1828490"
  },
  {
    "text": "values dot Yama I can start defining what labels are needed I can start putting up replicas count so similarly",
    "start": "1828490",
    "end": "1836140"
  },
  {
    "text": "if I look at my service here service again has release name labels external",
    "start": "1836140",
    "end": "1844480"
  },
  {
    "text": "port internal port so what this gives me is the ability to specify all my constraints or hard-coding of the values",
    "start": "1844480",
    "end": "1851080"
  },
  {
    "text": "into values or - yeah mal itself and then repurpose them over here so I'm truly following the DRI principle of",
    "start": "1851080",
    "end": "1857320"
  },
  {
    "text": "don't repeat yourself okay and it also brings a lot of consistency to if I'm",
    "start": "1857320",
    "end": "1863080"
  },
  {
    "text": "using multiple services and deployments across my application so now I have my",
    "start": "1863080",
    "end": "1870310"
  },
  {
    "text": "kubernetes cluster let's take a look at that first of all so cube Caudill is the CLI you just download the CLI from you",
    "start": "1870310",
    "end": "1877850"
  },
  {
    "text": "find the link for it from cuba kubernetes or io or you can install it brew install as well but once you have",
    "start": "1877850",
    "end": "1884330"
  },
  {
    "text": "the coop cuddle CLI then you can say cube cuddle config get context and what",
    "start": "1884330",
    "end": "1890480"
  },
  {
    "text": "is telling me is that okay show me all the like typically you will have is a multiple kubernetes cluster is created",
    "start": "1890480",
    "end": "1896600"
  },
  {
    "text": "and at a given point of time you will configure your cube cuddle CLI which is to CLI to manage your kubernetes cluster",
    "start": "1896600",
    "end": "1903280"
  },
  {
    "text": "so you will configure the cube cuddle CLI to talk to one of the kubernetes clusters and how do you identify which",
    "start": "1903280",
    "end": "1910670"
  },
  {
    "text": "of the kubernetes cluster is talking to so you say cube cuddles config get context it shows the context of all the",
    "start": "1910670",
    "end": "1917570"
  },
  {
    "text": "clusters that has been created for you so in this case i have an e KS cluster and a docker for desktop cluster now",
    "start": "1917570",
    "end": "1924230"
  },
  {
    "text": "docker for desktop cluster is the one that we created using docker for desktop so if i need to change my context so I",
    "start": "1924230",
    "end": "1932540"
  },
  {
    "text": "can just say cubicle config use context and I can say docker for desktop here",
    "start": "1932540",
    "end": "1938120"
  },
  {
    "text": "and by default it for showing me star on this particular namespace and or this",
    "start": "1938120",
    "end": "1945620"
  },
  {
    "text": "particular cluster name that means my cue cuddle CLI any command that I give to queue quadrille CLI will be",
    "start": "1945620",
    "end": "1951110"
  },
  {
    "text": "redirected to that particular cluster but now I changed it so let's look at get context again now the star has come",
    "start": "1951110",
    "end": "1957530"
  },
  {
    "text": "to docker for desktop so basically what I'm doing is I'm simply switching what",
    "start": "1957530",
    "end": "1962690"
  },
  {
    "text": "my cube cuddle CLI is going to be talking to is it talking to my local docker local kubernetes cluster or is it",
    "start": "1962690",
    "end": "1969110"
  },
  {
    "text": "talking to my Coburn ideas cluster that is running elsewhere in this case it happens to be running on the AWS cloud",
    "start": "1969110",
    "end": "1975940"
  },
  {
    "text": "alright let's go back here",
    "start": "1976300",
    "end": "1980410"
  },
  {
    "text": "so what I've done is I have a kubernetes cluster I have Q cuddle CLI configured",
    "start": "1984780",
    "end": "1990090"
  },
  {
    "text": "to talk to the right kubernetes cluster now I need to install helm into my",
    "start": "1990090",
    "end": "1995430"
  },
  {
    "text": "kubernetes cluster as well at least he'll version 2.0 has a client-server architecture so again you need to say",
    "start": "1995430",
    "end": "2001820"
  },
  {
    "text": "brew install helm CLI so you get the helm CLI here and then once your cube cuddle CLI is configured to talk to a",
    "start": "2001820",
    "end": "2008090"
  },
  {
    "text": "particular kubernetes cluster you say helm in it so it installs a server side component in your kubernetes cluster as",
    "start": "2008090",
    "end": "2014840"
  },
  {
    "text": "well so you have your helm CLI as well configured cube cuddle CLI configured you have your help charlie to go now",
    "start": "2014840",
    "end": "2022730"
  },
  {
    "text": "you're finally ready to deploy your application okay so what we're going to do is essentially here is I am just",
    "start": "2022730",
    "end": "2029300"
  },
  {
    "text": "going to say helm install give me the application name and manifest slash my",
    "start": "2029300",
    "end": "2035090"
  },
  {
    "text": "app is where my chart exists so I'm going to take that command here all I'm",
    "start": "2035090",
    "end": "2043340"
  },
  {
    "text": "gonna do is help install give it a plain and char directory well the app already",
    "start": "2043340",
    "end": "2050690"
  },
  {
    "text": "exists so what we're gonna do is we're gonna say delete my app and we will purge it as well and let's deploy it",
    "start": "2050690",
    "end": "2061070"
  },
  {
    "text": "again so this takes my helm chart which consists of multiple kubernetes",
    "start": "2061070",
    "end": "2066740"
  },
  {
    "text": "manifests and it creates all the deployment and services important part to understand is it does deploy all the",
    "start": "2066740",
    "end": "2074240"
  },
  {
    "text": "artifacts together it does you know allow you to delete all the artifacts together but at runtime how do these",
    "start": "2074240",
    "end": "2080929"
  },
  {
    "text": "artifacts really correlate with each other is completely applications responsibility okay so now in this case",
    "start": "2080929",
    "end": "2086388"
  },
  {
    "text": "for example is saying alright it's creating my app greeting this is my deployment here this is the pods here",
    "start": "2086389",
    "end": "2093408"
  },
  {
    "text": "these are my service here so what I can say cube Caudill get deployments okay so",
    "start": "2093409",
    "end": "2101000"
  },
  {
    "text": "it'll show me your deployment and he says one desired pod one is current one is up-to-date one is available there",
    "start": "2101000",
    "end": "2108020"
  },
  {
    "text": "could be depending upon how frequently your app is changing how frequently you are scaling up and down your deployment",
    "start": "2108020",
    "end": "2113300"
  },
  {
    "text": "these numbers could differ I could say service showing",
    "start": "2113300",
    "end": "2118610"
  },
  {
    "text": "me the service here and in case of service is saying that because you said load balancer as external and I",
    "start": "2118610",
    "end": "2126230"
  },
  {
    "text": "recognize yeah it's not a cloud provider but I'm deploying my service on the localhost so I'm gonna expose your",
    "start": "2126230",
    "end": "2132380"
  },
  {
    "text": "service on localhost here essentially okay and once again the port here is 80 which is in mapping to 3 0 to 5 8 on my",
    "start": "2132380",
    "end": "2140530"
  },
  {
    "text": "container in there so what I can do here is now let's see if we can give this command here so now I'm getting the",
    "start": "2140530",
    "end": "2150680"
  },
  {
    "text": "exact same result from my kubernetes application so the point that I'm trying",
    "start": "2150680",
    "end": "2155810"
  },
  {
    "text": "to say here is you start for the java application packet it is a docker container get the exact same result from",
    "start": "2155810",
    "end": "2160820"
  },
  {
    "text": "the docker container package it has a kubernetes manifest helm chart and get",
    "start": "2160820",
    "end": "2166280"
  },
  {
    "text": "the exact same results so you continue to make sure that your application is continuing to progress in the same",
    "start": "2166280",
    "end": "2171530"
  },
  {
    "text": "direction now what I can also do is I",
    "start": "2171530",
    "end": "2177320"
  },
  {
    "text": "can go to my intelligent I've already set up a breakpoint over",
    "start": "2177320",
    "end": "2183440"
  },
  {
    "text": "here now I can say run and I can go to debug ok I have a profile already",
    "start": "2183440",
    "end": "2190100"
  },
  {
    "text": "created but essentially what I need to do is I need to create a remote profile here and once I create a remote profile",
    "start": "2190100",
    "end": "2197480"
  },
  {
    "text": "these are the instructions that are shown to me out of default and it says that ok take this command here so copy",
    "start": "2197480",
    "end": "2204560"
  },
  {
    "text": "paste this command and this is a command that we had in our docker file because that's sort of where my JVM is",
    "start": "2204560",
    "end": "2209630"
  },
  {
    "text": "interacting so I take this command put it into my docker file essentially and it says now my VM is listening on local",
    "start": "2209630",
    "end": "2216590"
  },
  {
    "text": "host and port 5005 okay so let's debug this here so my IntelliJ is now connected and",
    "start": "2216590",
    "end": "2223850"
  },
  {
    "text": "waiting for somebody to invoke on localhost : five thousand five so I go back to my terminal here let's invoke",
    "start": "2223850",
    "end": "2230840"
  },
  {
    "text": "this thing again and as soon as I invoke it it switches to my IntelliJ now this",
    "start": "2230840",
    "end": "2236300"
  },
  {
    "text": "is a little bit more detailed function then you will see all your class variables everything and you can start",
    "start": "2236300",
    "end": "2242090"
  },
  {
    "text": "debugging it through the point being whatever tools that you have been using in your java application development",
    "start": "2242090",
    "end": "2249080"
  },
  {
    "text": "those are all completely and still very relevant in the kubernetes land as well and I'm",
    "start": "2249080",
    "end": "2254210"
  },
  {
    "text": "showing you this for kubernetes but you could certainly do the debugging at an earlier stage as if you were doing debugging the docker container itself ok",
    "start": "2254210",
    "end": "2260960"
  },
  {
    "text": "so now in this case of course if I look at this it says class has no fields so it's not showing me any values here but",
    "start": "2260960",
    "end": "2268040"
  },
  {
    "text": "what I can do is I can just say go ahead run it and I get my result back hello I've never been so happy to see hello in",
    "start": "2268040",
    "end": "2275090"
  },
  {
    "text": "my life three times in a row all right so we got that part covered and by the",
    "start": "2275090",
    "end": "2282980"
  },
  {
    "text": "way all of these instructions are fully detailed on the github repo so in case",
    "start": "2282980",
    "end": "2288170"
  },
  {
    "text": "you want to follow along literally copy/paste should work you know I'm very lazy programmer I don't I don't remember",
    "start": "2288170",
    "end": "2294560"
  },
  {
    "text": "things I just put it into the github repo and then let the github repo reminds me back alright so now I have",
    "start": "2294560",
    "end": "2301460"
  },
  {
    "text": "been able to test my application on a local cluster my next step is really that okay I've tested this thing on a",
    "start": "2301460",
    "end": "2307700"
  },
  {
    "text": "single node cluster here on my local machine I'm ready to go to the cloud so that means I need to run my coven IDs",
    "start": "2307700",
    "end": "2314270"
  },
  {
    "text": "cluster in the cloud well you can definitely choose a cloud provider of your choice we certainly hope it is Amazon so if you're running if you want",
    "start": "2314270",
    "end": "2321680"
  },
  {
    "text": "to run kubernetes cluster on AWS there are a variety of choices a lot of our",
    "start": "2321680",
    "end": "2326960"
  },
  {
    "text": "customers use cops which is a community provided a tool by which you can create kubernetes cluster on AWS or if you",
    "start": "2326960",
    "end": "2334520"
  },
  {
    "text": "don't want to go through the heavy lifting of creating and managing a kubernetes cluster by yourself you can",
    "start": "2334520",
    "end": "2339890"
  },
  {
    "text": "certainly use Amazon eks this is a managed kubernetes cluster this is a service that we announced at reinvent",
    "start": "2339890",
    "end": "2347230"
  },
  {
    "text": "2017 and a lot of our customers are loving it so they literally all you do",
    "start": "2347230",
    "end": "2352670"
  },
  {
    "text": "is you go to the AWS console and you say create an AW kubernetes cluster and",
    "start": "2352670",
    "end": "2358130"
  },
  {
    "text": "voila you get a coven Aires cluster what you get is a highly managed or fully",
    "start": "2358130",
    "end": "2364130"
  },
  {
    "text": "available fully managed control plane you still have to attach the data plane to it those are the nodes where the",
    "start": "2364130",
    "end": "2371510"
  },
  {
    "text": "containers are running essentially but it's pretty straightforward process and well-documented now in my case but",
    "start": "2371510",
    "end": "2377570"
  },
  {
    "text": "though no I mean again as I said I'm very lazy so I don't want to go through the process of doing this through the and it's fun when you're doing it for",
    "start": "2377570",
    "end": "2383930"
  },
  {
    "text": "the first time you know in the console oh I click on it for it but the second time it becomes like oh it's very repetitive and I was",
    "start": "2383930",
    "end": "2389800"
  },
  {
    "text": "very boring so I always like to automate things so that's where the stool call as",
    "start": "2389800",
    "end": "2394990"
  },
  {
    "text": "eks cuttle very much like cube kernel is like eks cartel that creates an e KS",
    "start": "2394990",
    "end": "2400630"
  },
  {
    "text": "cluster for you and he case cartel is a tool created by one of our partners we books so a really huge props to them so essentially what",
    "start": "2400630",
    "end": "2408100"
  },
  {
    "text": "you do is you create the ich es cuddle tool and with this single command you can just say ich es cuddle create",
    "start": "2408100",
    "end": "2414310"
  },
  {
    "text": "cluster give it a cluster name I need four nodes and in this particular region and that's it that command really",
    "start": "2414310",
    "end": "2421780"
  },
  {
    "text": "creates an entire ETS cluster for you highly available fully managed control plane it also creates a data plane and",
    "start": "2421780",
    "end": "2428350"
  },
  {
    "text": "attaches those to the data control plane and your cluster is ready in a few minutes basically okay now if I go back",
    "start": "2428350",
    "end": "2436600"
  },
  {
    "text": "here if you remember our cube cuddle is configured for local desktop here I can",
    "start": "2436600",
    "end": "2444640"
  },
  {
    "text": "say cube card will get nodes it says oh there's a single node over here so now I can switch the context here so I can say",
    "start": "2444640",
    "end": "2456100"
  },
  {
    "text": "get context and I can say use context",
    "start": "2456100",
    "end": "2462100"
  },
  {
    "text": "and I can switch it and I have a eks cluster pre created so I can switch it to this my eks cluster now if I say get",
    "start": "2462100",
    "end": "2470500"
  },
  {
    "text": "nodes this is basically showing a four node cluster that is already created on",
    "start": "2470500",
    "end": "2477370"
  },
  {
    "text": "us OS - okay so what does it take to switch your app from development to a",
    "start": "2477370",
    "end": "2486220"
  },
  {
    "text": "test staging environment in the cloud or even a production in the cloud so a lot",
    "start": "2486220",
    "end": "2492370"
  },
  {
    "text": "of customers the way they do this is they literally switch their context from one cluster to another cluster and",
    "start": "2492370",
    "end": "2498730"
  },
  {
    "text": "redeploy the entire application and the important part over there is literally redeploy the entire application because",
    "start": "2498730",
    "end": "2505270"
  },
  {
    "text": "all you have is you know the docker image is the source of the truth so your",
    "start": "2505270",
    "end": "2510580"
  },
  {
    "text": "java application in the darker image you know and that's exactly the source of artifact that is being deployed across",
    "start": "2510580",
    "end": "2515770"
  },
  {
    "text": "different clusters so you're really cutting down the impedance mismatch with your different environments essentially",
    "start": "2515770",
    "end": "2521559"
  },
  {
    "text": "over there now a lot of time customers what they do is they customize the docker image the tag etcetera that they",
    "start": "2521559",
    "end": "2527589"
  },
  {
    "text": "wanna play around because my database environment is different and my test and staging environments are different so",
    "start": "2527589",
    "end": "2533200"
  },
  {
    "text": "all those capabilities do very much exist but the point being you literally just switch the cluster and redeploy the",
    "start": "2533200",
    "end": "2539049"
  },
  {
    "text": "application another tool that I've seen customers using is by hep tio and it's",
    "start": "2539049",
    "end": "2544059"
  },
  {
    "text": "called as the arc so if you look at arc",
    "start": "2544059",
    "end": "2551849"
  },
  {
    "text": "this tool is very useful it is typically meant for managing your disaster recovery but essentially what it does it",
    "start": "2551849",
    "end": "2559150"
  },
  {
    "text": "it takes a back up off your kubernetes cluster you can take a backup and then",
    "start": "2559150",
    "end": "2564220"
  },
  {
    "text": "you can restore it on a different cluster so it's very handy essentially if you think about the kubernetes",
    "start": "2564220",
    "end": "2569589"
  },
  {
    "text": "architecture it has a whole bunch of stateless components like my service my",
    "start": "2569589",
    "end": "2574930"
  },
  {
    "text": "deployments but all of that state is still stored in at CD which is my",
    "start": "2574930",
    "end": "2580329"
  },
  {
    "text": "back-end database essentially so what arc does it's it automatically takes a backup of your HDD and restores it in a",
    "start": "2580329",
    "end": "2587290"
  },
  {
    "text": "new cluster so that's another way we have seen customers kind of migrating between different environments essentially so once again I've shown",
    "start": "2587290",
    "end": "2597369"
  },
  {
    "text": "here you know how you can migrate from dev to prod you can check the list of pods your application is up and running",
    "start": "2597369",
    "end": "2603220"
  },
  {
    "text": "so what I can do is now I can say if I",
    "start": "2603220",
    "end": "2609910"
  },
  {
    "text": "say helm list I have helm already installed on the eks cluster it says yep all it has is sto",
    "start": "2609910",
    "end": "2618280"
  },
  {
    "text": "system install so now I can say install",
    "start": "2618280",
    "end": "2625770"
  },
  {
    "text": "the exact same application is now getting deployed on my eks cluster running on AWS so if I say cube Caudill",
    "start": "2625770",
    "end": "2633609"
  },
  {
    "text": "get service and deployments and is showing me my service and deployments it",
    "start": "2633609",
    "end": "2640180"
  },
  {
    "text": "is showing a whole bunch of others as well but then I can say label name equals greeting",
    "start": "2640180",
    "end": "2648660"
  },
  {
    "text": "actually deployments only have that label Oh have written you back",
    "start": "2651340",
    "end": "2661540"
  },
  {
    "text": "yeah the label depending upon if you're deploying it as a help chart the label could be a bit different so if we can",
    "start": "2668850",
    "end": "2674940"
  },
  {
    "text": "what we can do is cube Caudill describe [Music] deployments my greeting and if we go up",
    "start": "2674940",
    "end": "2686370"
  },
  {
    "text": "here labels is OC chart equals app that's one it has created release",
    "start": "2686370",
    "end": "2693650"
  },
  {
    "text": "there's a different set of labels here oh there you go Oh app equals my app : greeting here so oh we wouldn't dig in",
    "start": "2693650",
    "end": "2711000"
  },
  {
    "text": "too much into it but the key part is now",
    "start": "2711000",
    "end": "2716790"
  },
  {
    "text": "because I said type : load balancer in this case it's gonna create a ELB ELB",
    "start": "2716790",
    "end": "2722160"
  },
  {
    "text": "takes about two to three minutes to be provision and ready to be used but essentially once it's deployed the",
    "start": "2722160",
    "end": "2727530"
  },
  {
    "text": "exact same application is now accessible on my elastic load balancer here okay",
    "start": "2727530",
    "end": "2733880"
  },
  {
    "text": "so let's switch gears you know we talked about sort of my daugher you know java application docker image kubernetes helm",
    "start": "2733880",
    "end": "2741810"
  },
  {
    "text": "you know deploying it into a cluster migrating across clusters now what I",
    "start": "2741810",
    "end": "2747060"
  },
  {
    "text": "want to do is I want to be able to I create a new version of my application how do I bring that new version of the",
    "start": "2747060",
    "end": "2753780"
  },
  {
    "text": "application into the cluster how do i do my canary testing how do i do my a be testing over there and when I'm doing",
    "start": "2753780",
    "end": "2759390"
  },
  {
    "text": "canary testing I want to direct only 5% of the traffic to my new version not a",
    "start": "2759390",
    "end": "2765000"
  },
  {
    "text": "whole lot but that's where the concept of service mesh comes in handy and the most popular service mesh is essentially",
    "start": "2765000",
    "end": "2771030"
  },
  {
    "text": "is to you today that we see a lot of our customers using and the way sto works is",
    "start": "2771030",
    "end": "2776310"
  },
  {
    "text": "it really relies upon the concept of a sidecar remember we talked about that in",
    "start": "2776310",
    "end": "2781740"
  },
  {
    "text": "a pod there's a single container is there it can have one or more containers so you",
    "start": "2781740",
    "end": "2788040"
  },
  {
    "text": "know in my pod there is one application container and what I do is as each pod",
    "start": "2788040",
    "end": "2793380"
  },
  {
    "text": "is getting created I could inject a sidecar container to it and that sidecar",
    "start": "2793380",
    "end": "2798540"
  },
  {
    "text": "container for sto is basically used on on Y and Y is a CNC F project and it was contributed by lift",
    "start": "2798540",
    "end": "2804570"
  },
  {
    "text": "so lift has been using unwire for a while and they're able to do up to two million concurrent requests per second",
    "start": "2804570",
    "end": "2810390"
  },
  {
    "text": "essentially using on why and that's the capability there's a scale it brings it's about a very small memory footprint",
    "start": "2810390",
    "end": "2816600"
  },
  {
    "text": "and I've written in C++ so it doesn't add a huge overload but essentially for imagine each pod in your cluster that is",
    "start": "2816600",
    "end": "2824760"
  },
  {
    "text": "getting created it has an unwise sidecar injected okay now the container in a pod",
    "start": "2824760",
    "end": "2831960"
  },
  {
    "text": "can talk to each other because they share the network file system all of that they can talk to each other using",
    "start": "2831960",
    "end": "2838350"
  },
  {
    "text": "localhost so now imagine there is a greeting service and there's a name service they want to talk to each other",
    "start": "2838350",
    "end": "2844800"
  },
  {
    "text": "they don't talk to each other directly they talk to their own why proxy the on",
    "start": "2844800",
    "end": "2851220"
  },
  {
    "text": "why proxies then figure out who they need to talk to and then these services talk to each other like that so imagine",
    "start": "2851220",
    "end": "2858540"
  },
  {
    "text": "all the network traffic in the kubernetes cluster for your application at least is going through the Envoy",
    "start": "2858540",
    "end": "2864420"
  },
  {
    "text": "proxy and the fact that is going through on why proxy allows you to do a lot of",
    "start": "2864420",
    "end": "2869970"
  },
  {
    "text": "no magic over there imagine if you were to do a canary deployment how do people",
    "start": "2869970",
    "end": "2876060"
  },
  {
    "text": "typically do canary deployment in kubernetes without service mesh well they have a deployment they scale the",
    "start": "2876060",
    "end": "2882150"
  },
  {
    "text": "deployment there are 10 replicas in the deployment now let's say you want to",
    "start": "2882150",
    "end": "2887610"
  },
  {
    "text": "have another deployment over there and in that deployment you want to hide only 5% of the traffic well the minimum",
    "start": "2887610",
    "end": "2895470"
  },
  {
    "text": "number of replicas I can have is 1 but this is 10 so that makes it at least 10 percent so I don't have that granularity",
    "start": "2895470",
    "end": "2901770"
  },
  {
    "text": "so I need to really make it 20 and keep this one to bring 5% of the traffic so",
    "start": "2901770",
    "end": "2908820"
  },
  {
    "text": "it's not very efficient way and that's exactly where on why kind of fits in very well because all we are doing is",
    "start": "2908820",
    "end": "2914870"
  },
  {
    "text": "because all the traffic is going through on why I can literally start creating traffic shifting patterns within my",
    "start": "2914870",
    "end": "2921570"
  },
  {
    "text": "kubernetes cluster very easily so let me quickly walk you through one of those files over here so essentially what we",
    "start": "2921570",
    "end": "2927210"
  },
  {
    "text": "do is",
    "start": "2927210",
    "end": "2929540"
  },
  {
    "text": "so once I have still installed into my kubernetes cluster I serve a smash so",
    "start": "2935740",
    "end": "2941319"
  },
  {
    "text": "basically you download the sto toolkit and then you install a steel into kubernetes cluster now the kubernetes",
    "start": "2941319",
    "end": "2948400"
  },
  {
    "text": "cluster recognizes different sto components that can be created for in for example in this case I'm creating a",
    "start": "2948400",
    "end": "2954970"
  },
  {
    "text": "virtual service I'm creating a destination rule and in the virtual service what I'm saying is here's a",
    "start": "2954970",
    "end": "2961030"
  },
  {
    "text": "greeting virtual service that is taking greeting hosts and I want to be able to",
    "start": "2961030",
    "end": "2966700"
  },
  {
    "text": "guide traffic to greeting hello and I have a new service which is saying greeting howdy and I wanted guide 75%",
    "start": "2966700",
    "end": "2975819"
  },
  {
    "text": "traffic to greeting hello and 25% traffic to greeting howdy how are greeting hello and how do you define",
    "start": "2975819",
    "end": "2981460"
  },
  {
    "text": "they are defined in the destination rule and those are defined using greeting :",
    "start": "2981460",
    "end": "2986710"
  },
  {
    "text": "hello label and greeting : howdy so now imagine you can keep deploying your",
    "start": "2986710",
    "end": "2992020"
  },
  {
    "text": "applications you know just change the labels on them accordingly and accordingly create the right virtual",
    "start": "2992020",
    "end": "2998530"
  },
  {
    "text": "service and destination rules to alter know how much traffic needs to be shifted between different applications",
    "start": "2998530",
    "end": "3004020"
  },
  {
    "text": "so that's one use case that's typically the most common use case for a service mesh there are a lot of other things",
    "start": "3004020",
    "end": "3010559"
  },
  {
    "text": "that you can do over here so we talk about traffic shifting how that works you can do canary deployment how that",
    "start": "3010559",
    "end": "3017520"
  },
  {
    "text": "works is T also comes with distributed tracing if your apps are using multiple languages using different docker images",
    "start": "3017520",
    "end": "3024559"
  },
  {
    "text": "you can enable distributed tracing across all of these different apps it's",
    "start": "3024559",
    "end": "3029640"
  },
  {
    "text": "completely language agnostic in that sense you can also start injecting false",
    "start": "3029640",
    "end": "3037710"
  },
  {
    "text": "in your application and now doing talking about chaos engineering using kubernetes is a full topic by its own so",
    "start": "3037710",
    "end": "3043799"
  },
  {
    "text": "I won't dig into the details but essentially if you look at the timeout section it talks about how can you",
    "start": "3043799",
    "end": "3048809"
  },
  {
    "text": "inject like HTTP 404 or 500 or timeouts into your application to make your",
    "start": "3048809",
    "end": "3055589"
  },
  {
    "text": "applications more resilient so that's again a huge benefit of Sto and the last",
    "start": "3055589",
    "end": "3061950"
  },
  {
    "text": "part that I quickly want to talk about healing like last 30 seconds is how easy it is to create your deployment",
    "start": "3061950",
    "end": "3068069"
  },
  {
    "text": "pipelines so but of course we use Jenkins so there is a project by the company cloud based",
    "start": "3068069",
    "end": "3074700"
  },
  {
    "text": "called as Jenkins X and I particularly love that project because Jenkins X makes Java applications well any",
    "start": "3074700",
    "end": "3080940"
  },
  {
    "text": "kubernetes applications you know and it brings kubernetes to them in a very cloud native way so that's definitely a",
    "start": "3080940",
    "end": "3087060"
  },
  {
    "text": "tool that you want to look at the other tool that I use actively on my day-to-day development is scaffold that's by a Google container tools team",
    "start": "3087060",
    "end": "3093840"
  },
  {
    "text": "and it basically allows you every time I make a change into my code repository if",
    "start": "3093840",
    "end": "3099390"
  },
  {
    "text": "I save it it'll automatically build my docker image update my kubernetes artifacts and deploy it to my company's",
    "start": "3099390",
    "end": "3106470"
  },
  {
    "text": "cluster so I would recommend taking a look at that all the code as I said is",
    "start": "3106470",
    "end": "3111810"
  },
  {
    "text": "still on the github repo I would love for you to file issues and we pull requests or tell me what else you would",
    "start": "3111810",
    "end": "3117330"
  },
  {
    "text": "like to see over here I'm gonna be at the conference for the next few hours if you want to talk to me or come find me",
    "start": "3117330",
    "end": "3122880"
  },
  {
    "text": "at the AWS booth thank you so much [Applause]",
    "start": "3122880",
    "end": "3133459"
  }
]