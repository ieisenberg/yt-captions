[
  {
    "start": "0",
    "end": "249000"
  },
  {
    "text": "[Music]",
    "start": "4350",
    "end": "8870"
  },
  {
    "text": "okay so i'm impressed that this number of people are coming in to watch a talk on testing given that there's lots of kind of",
    "start": "11599",
    "end": "18080"
  },
  {
    "text": "sexy stuff going on um except for the fact that yesterday obviously i gave a talk about failure there is a kind of a",
    "start": "18080",
    "end": "24640"
  },
  {
    "text": "natural kind of symmetry to this now i'm not going to teach you how to get rid of failure that would be wonderful",
    "start": "24640",
    "end": "31599"
  },
  {
    "text": "there is no silver bullet i have that in another talk this is about the structure and",
    "start": "31599",
    "end": "37200"
  },
  {
    "text": "interpretation of test cases specifically unit tests i think it's great to see so many people",
    "start": "37200",
    "end": "43600"
  },
  {
    "text": "in a talk on unit testing there is i have been doing this long enough that i can remember when proposing a talk on",
    "start": "43600",
    "end": "51360"
  },
  {
    "text": "testing was one of two gave you one of two outcomes either rejection",
    "start": "51360",
    "end": "57360"
  },
  {
    "text": "or an empty room so you could have a rest but these days people are paying a little more attention to this now i'm",
    "start": "57360",
    "end": "64080"
  },
  {
    "text": "going to choose a number of small examples and before people sit here going like uh",
    "start": "64080",
    "end": "70240"
  },
  {
    "text": "you know oh he's only choosing toy examples you're right i'm not choosing code bases that are 10 million lines long you are exactly right those are",
    "start": "70240",
    "end": "76479"
  },
  {
    "text": "surprisingly hard to actually put on a slide but it turns out that there is a",
    "start": "76479",
    "end": "82720"
  },
  {
    "text": "fundamental thing that a lot of people do not realize about small examples if you choose the right example",
    "start": "82720",
    "end": "88479"
  },
  {
    "text": "you can through that lens of a small example you can actually see the techniques you need to apply to a larger",
    "start": "88479",
    "end": "93680"
  },
  {
    "text": "system more importantly it can teach you how to keep things small every single one of",
    "start": "93680",
    "end": "99200"
  },
  {
    "text": "the examples they're all standard i have actually used in production or use the testing techniques",
    "start": "99200",
    "end": "105840"
  },
  {
    "text": "in production in other words saying oh i recognize this this is this problem it's just this big but the same testing",
    "start": "105840",
    "end": "111600"
  },
  {
    "text": "mindset is what i'm interested in and i'm very much a believer in the idea",
    "start": "111600",
    "end": "116719"
  },
  {
    "text": "that architecture happens at all levels sometimes people think architecture is",
    "start": "116719",
    "end": "122079"
  },
  {
    "text": "just a big picture thing and then they mess up the small picture and wonder why they have pain",
    "start": "122079",
    "end": "127200"
  },
  {
    "text": "the point here is the bad news is you have to pay attention to everything that's one of the things that makes",
    "start": "127200",
    "end": "132560"
  },
  {
    "text": "software development both frustrating and exciting so i'm going to concentrate on this",
    "start": "132560",
    "end": "137760"
  },
  {
    "text": "aspect i'm not going to say anything about the other kinds of testing except many lessons that we can take from here apply elsewhere i want to have a very",
    "start": "137760",
    "end": "143920"
  },
  {
    "text": "specific focus especially given that this talk is normally 90 minutes long we have significantly less than 90",
    "start": "143920",
    "end": "150480"
  },
  {
    "text": "minutes i will try and leave time for questions but don't count on it i am available for",
    "start": "150480",
    "end": "156160"
  },
  {
    "text": "lunch okay so why have i given this talk with a such a",
    "start": "156160",
    "end": "162000"
  },
  {
    "text": "mundane name um very simple reason structured interpretation of test cases",
    "start": "162000",
    "end": "169200"
  },
  {
    "text": "let me just go and find if this thing has the focus because i don't think it has ah there it is",
    "start": "169200",
    "end": "174319"
  },
  {
    "text": "i've kind of patented after this book structural interpretation of computer programs which is kind of a computer computer science classic",
    "start": "174319",
    "end": "181360"
  },
  {
    "text": "because i thought that this was quite a good way of trying to approach this question of why do we do this what is the purpose",
    "start": "181360",
    "end": "187599"
  },
  {
    "text": "of all this stuff now clearly one aspect of testing is one that i covered yesterday when i talked about failure",
    "start": "187599",
    "end": "194319"
  },
  {
    "text": "we don't really want to have failure we'd like to minimize that we can't eliminate it i'm these days i'm very",
    "start": "194319",
    "end": "199840"
  },
  {
    "text": "careful about using the word minimize rather than eliminate we see lots of slides which say eliminate this you know",
    "start": "199840",
    "end": "206720"
  },
  {
    "text": "eliminate waste eliminate it elimination we've got to get real let's bring the",
    "start": "206720",
    "end": "211840"
  },
  {
    "text": "number down if you can ever get to zero well done but it's very unlikely so let's do what we can",
    "start": "211840",
    "end": "217519"
  },
  {
    "text": "but there's more to testing than just having fewer bugs there is a different",
    "start": "217519",
    "end": "224000"
  },
  {
    "text": "there's another idea here it's an expression of intention it's about how do we interpret this",
    "start": "224000",
    "end": "230640"
  },
  {
    "text": "i want to go beyond the idea of you know my tests are green that gives me some confidence i've got a red test",
    "start": "230640",
    "end": "237280"
  },
  {
    "text": "oh there must be something broken that is an interpretation it's useful but it's quite small and it's not the whole",
    "start": "237280",
    "end": "242720"
  },
  {
    "text": "story it turns out the testing can give us an awful lot more if we pay attention to it",
    "start": "242720",
    "end": "248560"
  },
  {
    "text": "there is a point here programs must be written for people to read and only incidentally for machines to execute although that tends to help",
    "start": "248560",
    "end": "255200"
  },
  {
    "start": "249000",
    "end": "327000"
  },
  {
    "text": "you know let's not dismiss that but the same is true of tests we often",
    "start": "255200",
    "end": "260239"
  },
  {
    "text": "treat tests as kind of being a second class citizen they're not real it's not real code because it's not in production",
    "start": "260239",
    "end": "268720"
  },
  {
    "text": "it's a bit like scaffolding when you're building putting up a building oh yeah that's not really important oh",
    "start": "268720",
    "end": "274560"
  },
  {
    "text": "yes it is you really can't reach the higher floors safely unless you have scaffolding and",
    "start": "274560",
    "end": "280080"
  },
  {
    "text": "cranes and all these other things you need all of this without this support system",
    "start": "280080",
    "end": "286400"
  },
  {
    "text": "you don't have a software system all of your tooling all of your config files all of your tests those are part of the",
    "start": "286400",
    "end": "293280"
  },
  {
    "text": "system we have to narrow a focus it's a bit like saying oh here i'm a human being i'm perfectly self-contained yeah",
    "start": "293280",
    "end": "299440"
  },
  {
    "text": "until you take away the air the food and all and gravity and all kinds of stuff like that it turns out that we are part",
    "start": "299440",
    "end": "304960"
  },
  {
    "text": "of our context all of this is first class code it deserves your attention uh in the same way that the production code",
    "start": "304960",
    "end": "311199"
  },
  {
    "text": "does the production code is merely a small footprint of a much larger system so i'm going to quote so this is a book",
    "start": "311199",
    "end": "317680"
  },
  {
    "text": "that was finished under lockdown um 97 things every java programmer should know i edited it with trisha g and i'm going",
    "start": "317680",
    "end": "324639"
  },
  {
    "text": "to quote from local girl marie van dyke here using testing to develop better software faster",
    "start": "324639",
    "end": "330479"
  },
  {
    "start": "327000",
    "end": "656000"
  },
  {
    "text": "and so she summarizes really nicely what it is that we want from a test and",
    "start": "330479",
    "end": "337039"
  },
  {
    "text": "i like the way that she approaches this because we are so focused on",
    "start": "337039",
    "end": "343039"
  },
  {
    "text": "what does a passing test tell us that we forget what does a failing test tell us if if all a failing test",
    "start": "343039",
    "end": "350160"
  },
  {
    "text": "tells us is hey there's something that was passing and it's now it's not that's really not very helpful",
    "start": "350160",
    "end": "355600"
  },
  {
    "text": "i want more information there's probably more information to be had i want that failure to be informative",
    "start": "355600",
    "end": "362720"
  },
  {
    "text": "i want it to be meaningful to me as a developer i wanted to be meaningful to my colleagues",
    "start": "362720",
    "end": "367840"
  },
  {
    "text": "failing tests should tell you exactly what is wrong quickly without you having to spend a lot of time analyzing the failure i'm sure we've all encountered",
    "start": "367840",
    "end": "375440"
  },
  {
    "text": "you know test five failed what does that mean and whatever",
    "start": "375440",
    "end": "380720"
  },
  {
    "text": "happened to test four and three and you know what what is it with this test what does it mean there have been a",
    "start": "380720",
    "end": "386880"
  },
  {
    "text": "number of cases where we're kind of left with a sense of mystery well murder mystery in this case",
    "start": "386880",
    "end": "392880"
  },
  {
    "text": "okay something's dead but we don't know who what and why and there's an idea here",
    "start": "392880",
    "end": "398479"
  },
  {
    "text": "and this actually actually had with a team a few years ago as we were looking not at test five but at test three they had",
    "start": "398479",
    "end": "404960"
  },
  {
    "text": "numbered their tests one two and three we'll come back to that in a moment what does the numbering tell you it",
    "start": "404960",
    "end": "411280"
  },
  {
    "text": "tells you the order in which they were written is that useful no okay test three was an interesting challenge",
    "start": "411280",
    "end": "418479"
  },
  {
    "text": "because i was trying to get them to name things more meaningfully and they said kevin this is where your testing technique doesn't work and i",
    "start": "418479",
    "end": "424960"
  },
  {
    "text": "said why not we don't know what this test does wait a minute you don't know what it does so that's my problem i think you've",
    "start": "424960",
    "end": "431360"
  },
  {
    "text": "got this the wrong way around i said what happens what does it mean when this test fails",
    "start": "431360",
    "end": "436560"
  },
  {
    "text": "and they said we don't know i said what does it mean when it passes we have no idea right that is the root of our problem",
    "start": "436560",
    "end": "442160"
  },
  {
    "text": "let's work on that so this means in practice each test should test one thing whatever we mean",
    "start": "442160",
    "end": "448080"
  },
  {
    "text": "by one thing an objective do not mistake this for each test should have one assertion i keep seeing people making",
    "start": "448080",
    "end": "454240"
  },
  {
    "text": "this recommendation please don't do that obviously you don't want a barrage of assertion",
    "start": "454240",
    "end": "459280"
  },
  {
    "text": "but it might be one logical assertion which requires one or more uh one or more",
    "start": "459280",
    "end": "465039"
  },
  {
    "text": "actual physical assertions don't make it brittle with respect to the granularity of the assertion and your api and your",
    "start": "465039",
    "end": "471120"
  },
  {
    "text": "choice of testing framework some testing frameworks are very expressive in their assertions some are less so but there's",
    "start": "471120",
    "end": "476960"
  },
  {
    "text": "one idea okay let's let's see what that is and that should be reflected in the name",
    "start": "476960",
    "end": "483039"
  },
  {
    "text": "okay in fact sometimes people like to start as it is useful clarifying technique but this again this this is",
    "start": "483039",
    "end": "489039"
  },
  {
    "text": "only a suggestion it's not a rule start with the end in mind where do i want to get",
    "start": "489039",
    "end": "494479"
  },
  {
    "text": "to what am i trying to show with this test of course sometimes with kind of more exploratory code tests i'm just writing",
    "start": "494479",
    "end": "500240"
  },
  {
    "text": "stuff and i'm just going to throw in some assertions there that's absolutely fine you're thinking you're thinking on screen you're thinking aloud but when",
    "start": "500240",
    "end": "506560"
  },
  {
    "text": "you come back to it to tidy it up you know you're kind of like your stream of consciousness that has been dumped onto screen over 50 lines and is currently",
    "start": "506560",
    "end": "513360"
  },
  {
    "text": "called test please rename me when you come back to it say what are",
    "start": "513360",
    "end": "519039"
  },
  {
    "text": "the things i can pull out of it what are the things that i have demonstrated here and you'll probably find there's quite a few and you can identify what those are",
    "start": "519039",
    "end": "525760"
  },
  {
    "text": "so never be afraid to make a mess that you know that you're going to clean up otherwise obviously we'd never be",
    "start": "525760",
    "end": "531680"
  },
  {
    "text": "able to cook anything okay sometimes people kind of get so worried about oh i need to produce all my code must be perfect and clean no it can be as messy",
    "start": "531680",
    "end": "538640"
  },
  {
    "text": "as you like as long as the thing that you check in looks good yeah",
    "start": "538640",
    "end": "543760"
  },
  {
    "text": "again i refer you to cooking do not look at the kitchen when i am cooking but what i produce should be should be",
    "start": "543760",
    "end": "549839"
  },
  {
    "text": "decent okay use meaningful descriptive names okay right we've got to be careful with the",
    "start": "549839",
    "end": "555279"
  },
  {
    "text": "such advice we need to be more precise meaning remember test three what does that mean",
    "start": "555279",
    "end": "560959"
  },
  {
    "text": "it means the third test i wrote that's a meaningful name okay we're going to have to do better",
    "start": "560959",
    "end": "566320"
  },
  {
    "text": "than that fortunately it goes more specific she said don't just describe what the test does",
    "start": "566320",
    "end": "571360"
  },
  {
    "text": "tell us why this can help decide help us decide whether a test should be updated in line",
    "start": "571360",
    "end": "576800"
  },
  {
    "text": "with change of functionality in other words why is this test breaking oh because i've updated something else and",
    "start": "576800",
    "end": "582240"
  },
  {
    "text": "i forgot to update this in line with new functionality so it's not a bug it's just an oversight on my",
    "start": "582240",
    "end": "589040"
  },
  {
    "text": "part okay or whether an actual failure that should be fixed has been found have i broken a",
    "start": "589040",
    "end": "595040"
  },
  {
    "text": "constraint that i was unaware of we need to be able to distinguish between these two cases",
    "start": "595040",
    "end": "601519"
  },
  {
    "text": "important one never trust a test you haven't seen fail",
    "start": "601519",
    "end": "607120"
  },
  {
    "text": "are you actually testing anything or have you ended up with the equivalent of assert true true",
    "start": "607440",
    "end": "613760"
  },
  {
    "text": "yeah there's there's a lot of cases with that i get this when people say oh i'm going to allocate an object",
    "start": "613760",
    "end": "619360"
  },
  {
    "text": "something you know variable equals new whatever assert that the variable is not null",
    "start": "619360",
    "end": "624480"
  },
  {
    "text": "well according to the laws of the language it's never going to be null and if it does fail",
    "start": "624480",
    "end": "630480"
  },
  {
    "text": "you have bigger problems so this also puts us in mind of things like",
    "start": "630480",
    "end": "636399"
  },
  {
    "text": "our style of development now i'm not going to really focus on this today but i do want to touch on it briefly to",
    "start": "636399",
    "end": "641760"
  },
  {
    "text": "understand the timing essence uh the aspect of timing let's say i'm working on a feature",
    "start": "641760",
    "end": "647040"
  },
  {
    "text": "i want to talk about the testing approach that i might take i want to give you a broad sketch a sort of mental framework",
    "start": "647040",
    "end": "653120"
  },
  {
    "text": "sadly in the industry this is still the most popular option no testing is the most popular testing",
    "start": "653120",
    "end": "658959"
  },
  {
    "start": "656000",
    "end": "804000"
  },
  {
    "text": "approach do not walk please don't leave now with that as the recommendation just just just sit down for another minute",
    "start": "658959",
    "end": "665040"
  },
  {
    "text": "and okay test long after development okay",
    "start": "665040",
    "end": "670800"
  },
  {
    "text": "where are we now june yeah i wrote some code in january maybe now's a good time to test it",
    "start": "670800",
    "end": "676160"
  },
  {
    "text": "that's a long time after i have lost the context i mean it's good that i'm doing it it's better than the previous option",
    "start": "676160",
    "end": "682560"
  },
  {
    "text": "but i've lost the context i'm going to have to do a lot of rediscovery a lot of detective work or",
    "start": "682560",
    "end": "688880"
  },
  {
    "text": "my colleagues going to have to do that discovery and detective work or they're going to say hey kevlin would you like to pair you know would you like to mob",
    "start": "688880",
    "end": "694800"
  },
  {
    "text": "with us so that we can write tests for this and they're going to discover that i've completely forgotten everything that i did in january",
    "start": "694800",
    "end": "700880"
  },
  {
    "text": "okay but at least we're making an effort there's another aspect here is that",
    "start": "700880",
    "end": "706240"
  },
  {
    "text": "testing shows up on the radar it shows up in our schedule it's very visible therefore sometimes",
    "start": "706240",
    "end": "712399"
  },
  {
    "text": "people try to optimize it away that is not what people mean by testing production these days though be very",
    "start": "712399",
    "end": "718800"
  },
  {
    "text": "careful test just after development everything's still fresh i understand",
    "start": "718800",
    "end": "725279"
  },
  {
    "text": "the assumptions i've spoken to my colleagues about this we're working on something it's still relatively fresh but i have a little slight objective",
    "start": "725279",
    "end": "731519"
  },
  {
    "text": "separation from it there is still a danger that in my head i've written this off as done so imagine yesterday i",
    "start": "731519",
    "end": "738240"
  },
  {
    "text": "finished writing some code and then today i decided to test there is a nice separation of a day or a lunch",
    "start": "738240",
    "end": "744000"
  },
  {
    "text": "time or something like that okay a mental separation and now i can go back with a different point of view i was",
    "start": "744000",
    "end": "750079"
  },
  {
    "text": "inside the code now i'm outside trying to talk about it and reason about it so that can be very healthy very valuable",
    "start": "750079",
    "end": "756000"
  },
  {
    "text": "but i haven't lost all the context i probably still carry some of my assumptions with me",
    "start": "756000",
    "end": "762320"
  },
  {
    "text": "but in my head there is still the danger that i mark this as done oh i've done the code",
    "start": "762320",
    "end": "768560"
  },
  {
    "text": "hey how are you doing i am done what are you doing now i'm just doing the test oh tests are not part of done see there's a",
    "start": "768560",
    "end": "774240"
  },
  {
    "text": "very simple thing we fool ourselves with are you done with cooking yeah i've just",
    "start": "774240",
    "end": "779360"
  },
  {
    "text": "been into the kitchen you apparently have used every single dish and not put it away oh yeah but i'm done except for",
    "start": "779360",
    "end": "785040"
  },
  {
    "text": "the tidying up yeah see we do that all over that's a human thing don't blame developers for this this is very human",
    "start": "785040",
    "end": "791519"
  },
  {
    "text": "but nonetheless be aware that this is a this is both a strength and a weakness of this approach just after development",
    "start": "791519",
    "end": "797680"
  },
  {
    "text": "plain old unit testing is what jacob profit used to call it yeah just like the traditional approach",
    "start": "797680",
    "end": "803279"
  },
  {
    "text": "okay now let's get to the continuous testing tdd is the most obvious example of this",
    "start": "803279",
    "end": "809760"
  },
  {
    "start": "804000",
    "end": "892000"
  },
  {
    "text": "but there's another thing iterative tests last either you lead with a failing test",
    "start": "809760",
    "end": "815680"
  },
  {
    "text": "and you fulfill it or you write a little piece and then you match it with a test either way the idea",
    "start": "815680",
    "end": "822399"
  },
  {
    "text": "is that you're interleaving your time that's the thing that is the big big difference here it is continuous so when",
    "start": "822399",
    "end": "828480"
  },
  {
    "text": "somebody says what were you doing this morning were you working on production code or test code the answer is yes",
    "start": "828480",
    "end": "835040"
  },
  {
    "text": "well which one well both of them well could you specify which minutes you i don't know",
    "start": "835040",
    "end": "840160"
  },
  {
    "text": "it's like specifying you know how much time did you spend putting semicolons in",
    "start": "840160",
    "end": "846800"
  },
  {
    "text": "and for those of you in semicolon in this language you know how much time did you put you know tab spaces let's have that war um in",
    "start": "846800",
    "end": "854000"
  },
  {
    "text": "the point there is that's not how i divide my time it's all continuous it's in the flow so let's just pick on an example here",
    "start": "854000",
    "end": "861440"
  },
  {
    "text": "um i'm going to talk about i can talk about uh what my favorite simple example",
    "start": "861440",
    "end": "867519"
  },
  {
    "text": "leap years because in this it's incredibly rich one of the things i like about this is this",
    "start": "867519",
    "end": "872720"
  },
  {
    "text": "is a beautifully arbitrary rule that you don't get to change okay in other words it's like business",
    "start": "872720",
    "end": "880000"
  },
  {
    "text": "which means that most people get get it wrong they oversimplify it they misunderstand it",
    "start": "880000",
    "end": "885519"
  },
  {
    "text": "and it turns out that if i walk out on the streets of amsterdam and i ask most people hey can you tell me",
    "start": "885519",
    "end": "892720"
  },
  {
    "start": "892000",
    "end": "1735000"
  },
  {
    "text": "when is a year a leap year most of them will look at me and go go away you weirdo",
    "start": "892720",
    "end": "899839"
  },
  {
    "text": "but there are a few people who will give me some answers and most of them will be wrong in fact i've been using this as a",
    "start": "899839",
    "end": "905519"
  },
  {
    "text": "teaching example since the end of last century one way or another even amongst developers who are fairly",
    "start": "905519",
    "end": "912160"
  },
  {
    "text": "geeky and care about stuff like this i would say it's only around five to ten percent of people that actually know the",
    "start": "912160",
    "end": "918079"
  },
  {
    "text": "full gregorian leap year rule so this is perfect the implementation is not hard it's just knowing what the rule is and",
    "start": "918079",
    "end": "925519"
  },
  {
    "text": "then having my tests reflect that so this is c sharp so i'm going to do this in n unit",
    "start": "925519",
    "end": "930880"
  },
  {
    "text": "here's our starting point let's call our test test okay well at least we're testing",
    "start": "930880",
    "end": "938160"
  },
  {
    "text": "okay let's be a little more descriptive although probably it's in the class name as well and it's in the file name",
    "start": "939040",
    "end": "945839"
  },
  {
    "text": "ah yes this test smell you've seen it you know it it's is this thing correct",
    "start": "947120",
    "end": "955120"
  },
  {
    "text": "is this thing working okay is it okay test that such and such works",
    "start": "955120",
    "end": "962000"
  },
  {
    "text": "if you have never done this well done because i know i've done it but you sit and they go like that's a really bad na of course i'm testing that",
    "start": "962000",
    "end": "968480"
  },
  {
    "text": "it works there's an invitation there it doesn't mean that the name is bad it just means we have not yet",
    "start": "968480",
    "end": "975759"
  },
  {
    "text": "discovered sometimes i use placeholder names i'm kind of moving towards where i want to be but maybe i'm not i'm not",
    "start": "975759",
    "end": "981199"
  },
  {
    "text": "quite there yet the name is treat the name as being very temporary okay it's it's i'm i'm trying to learn what this",
    "start": "981199",
    "end": "988079"
  },
  {
    "text": "is and then maybe i think you know what i put everything in one place i need to put it in more than one place",
    "start": "988079",
    "end": "994880"
  },
  {
    "text": "this is not the way we do this let's start looking at the domain itself what is the what does the domain of",
    "start": "994880",
    "end": "1001040"
  },
  {
    "text": "years tell us well there are leap years and non-leap years in fact technically those are called common years but let's just stick",
    "start": "1001040",
    "end": "1007519"
  },
  {
    "text": "with the term non-leap years so this is a starting point we're still not done yet but at least i'm making an",
    "start": "1007519",
    "end": "1013680"
  },
  {
    "text": "attempt to reflect my understanding i'm not just testing that the code works i'm trying to explain what do i mean by it",
    "start": "1013680",
    "end": "1021199"
  },
  {
    "text": "works that's the harder bit you don't turn up on a new you know on a new team on monday and say",
    "start": "1021199",
    "end": "1027199"
  },
  {
    "text": "hey how's it going oh it's good here's all our code oh right does it work",
    "start": "1027199",
    "end": "1033678"
  },
  {
    "text": "your question is what does it do what's it supposed to do how does it do it these are much more complex questions",
    "start": "1034160",
    "end": "1040160"
  },
  {
    "text": "tests are not going to give you all the answers but they can help they're part of that kind of like ecosystem of",
    "start": "1040160",
    "end": "1045520"
  },
  {
    "text": "knowledge that surrounds the code we want to have that informational content let's try and reflect that and of course",
    "start": "1045520",
    "end": "1051440"
  },
  {
    "text": "your understanding improves with time now here i'm going to pick a couple of leap",
    "start": "1051440",
    "end": "1056960"
  },
  {
    "text": "years 2020 and 2000. now if i look at those",
    "start": "1056960",
    "end": "1062720"
  },
  {
    "text": "the reason that 2020 is a leap year is for quite different reasons for the reason that 2000 is a leap year i might",
    "start": "1062720",
    "end": "1069440"
  },
  {
    "text": "be tempted to separate these out so this is the one of the next test",
    "start": "1069440",
    "end": "1074880"
  },
  {
    "text": "smells people end up putting hard coding their examples into the name",
    "start": "1074880",
    "end": "1081679"
  },
  {
    "text": "test 2020 is leap year test 2000 is it test 2022 great but what about all the others",
    "start": "1081679",
    "end": "1087039"
  },
  {
    "text": "you've picked some examples but you haven't you haven't yet given me the reader a model of reasoning all of",
    "start": "1087039",
    "end": "1093440"
  },
  {
    "text": "these examples are valid it they each demonstrate a different aspect of the leap year rule there are",
    "start": "1093440",
    "end": "1099440"
  },
  {
    "text": "indeed four different aspects to the leap year rule the problem is i don't know what they are i'm left with a sense",
    "start": "1099440",
    "end": "1105039"
  },
  {
    "text": "of mystery i could equally so the first thing i'm going to do as well is i'm going to stop the repetition",
    "start": "1105039",
    "end": "1111840"
  },
  {
    "text": "dry don't repeat yourself it's not about sometimes people think the dry recommendation is simply about",
    "start": "1111840",
    "end": "1117919"
  },
  {
    "text": "duplicate code it's not it's about duplicating information okay don't tell me where how do i know",
    "start": "1117919",
    "end": "1124000"
  },
  {
    "text": "that this is a test everything's annotated test it's probably even in a in a folder that's",
    "start": "1124000",
    "end": "1129600"
  },
  {
    "text": "got the word test in it it's probably in a file that has the word you know",
    "start": "1129600",
    "end": "1134960"
  },
  {
    "text": "give use the bandwidth more wisely and i don't need to say that it's a test now",
    "start": "1134960",
    "end": "1140799"
  },
  {
    "text": "i can be a little more expressive ah okay i'm going to use underscores",
    "start": "1140799",
    "end": "1146640"
  },
  {
    "text": "now there is although that breaks with various language conventions that use camelcase and pascal case",
    "start": "1146640",
    "end": "1153039"
  },
  {
    "text": "these names are different this is an important idea to recognize that just because you are using a language so net",
    "start": "1153039",
    "end": "1158640"
  },
  {
    "text": "has very well respected conventions for naming so we're stepping outside those",
    "start": "1158640",
    "end": "1165760"
  },
  {
    "text": "why for readability because what we're going to see is that our test names are more statements",
    "start": "1165760",
    "end": "1171600"
  },
  {
    "text": "normally your method names for example are verb phrases or adjectival phrases",
    "start": "1171600",
    "end": "1176960"
  },
  {
    "text": "you know your class names and type names are normally noun phrases here we're actually moving to a different kind of",
    "start": "1176960",
    "end": "1182559"
  },
  {
    "text": "part of speech but also these names have a different property",
    "start": "1182559",
    "end": "1187840"
  },
  {
    "text": "they're never used they are never explicitly called you never need to refactor these names",
    "start": "1188080",
    "end": "1194559"
  },
  {
    "text": "you write them and then they are called by reflection in other words the role that they serve is different although the language is",
    "start": "1194559",
    "end": "1200559"
  },
  {
    "text": "the same these are not methods in the conventional sense that's not their job they don't do that and this is important",
    "start": "1200559",
    "end": "1207280"
  },
  {
    "text": "to recognize that you may be in a language but the conventions you're using are slightly different so for example",
    "start": "1207280",
    "end": "1213440"
  },
  {
    "text": "i'm speaking english i was just messaging my younger son is doing an exam today",
    "start": "1213440",
    "end": "1218480"
  },
  {
    "text": "and i messaged him in english but the way that i messaged him",
    "start": "1218480",
    "end": "1227120"
  },
  {
    "text": "was slightly different to the way that i would normally speak and it's different to the way that i would write a blog",
    "start": "1227200",
    "end": "1233280"
  },
  {
    "text": "and it's different to the way that i would write a shopping list or tweet in other words the language has",
    "start": "1233280",
    "end": "1239280"
  },
  {
    "text": "different conventions for different contexts there are contexts where you're saying ah this is production code there are",
    "start": "1239280",
    "end": "1245039"
  },
  {
    "text": "contexts where you're saying this is test code the rules of what defines good test code may be different to the rules of what defined good production code",
    "start": "1245039",
    "end": "1251200"
  },
  {
    "text": "there's clearly overlap but you know respect that our names are going to get long it turns",
    "start": "1251200",
    "end": "1256320"
  },
  {
    "text": "out that camel case is not a very good thing it doesn't scale above about 30 characters",
    "start": "1256320",
    "end": "1261600"
  },
  {
    "text": "okay so i'm gonna go with the underscores let's drop away everything else now",
    "start": "1261600",
    "end": "1267520"
  },
  {
    "text": "let's get back to these numbers i mean i could easily replace them with a bunch of other numbers",
    "start": "1267520",
    "end": "1274240"
  },
  {
    "text": "now the problem here is i still i've just given you more examples but i haven't told you why what is the leap year rule",
    "start": "1274480",
    "end": "1282159"
  },
  {
    "text": "now we're getting there now i'm starting to tell you something useful i'm explaining it",
    "start": "1282480",
    "end": "1288400"
  },
  {
    "text": "a year divisible by four is a leap year a year divisible by 400 is a leap year yeah okay we're getting somewhere let's reorder this",
    "start": "1288400",
    "end": "1294880"
  },
  {
    "text": "so that i start with the largest category notice that the order in which people often think of things is not necessarily the order you want to read",
    "start": "1294880",
    "end": "1301280"
  },
  {
    "text": "them you have to establish a reading order okay even though you're even though the",
    "start": "1301280",
    "end": "1306640"
  },
  {
    "text": "methods will be called potentially out of sequence the way we read things is from the top",
    "start": "1306640",
    "end": "1312240"
  },
  {
    "text": "to the bottom you know in source code that's going to be so what's the narrative for this sometimes there's a",
    "start": "1312240",
    "end": "1317600"
  },
  {
    "text": "natural narrative if i'm dealing with an object that has a life cycle we start at the beginning of its life that feels very natural if i'm",
    "start": "1317600",
    "end": "1324640"
  },
  {
    "text": "dealing with something that deals with a lot of data so i've been doing some work with uh some folks who do a lot of numeric",
    "start": "1324640",
    "end": "1330080"
  },
  {
    "text": "computing high performance computing so a lot of algorithms on a lot of arrays",
    "start": "1330080",
    "end": "1336159"
  },
  {
    "text": "or matrices well let's start with the easy things",
    "start": "1336159",
    "end": "1341600"
  },
  {
    "text": "how does this algorithm work in the empty case okay start start easy what about with",
    "start": "1341600",
    "end": "1347520"
  },
  {
    "text": "one item what about with many what about with many that are like this what about with many that are like that in other",
    "start": "1347520",
    "end": "1352799"
  },
  {
    "text": "words build the story start from somewhere simple make sure that you have that pin down",
    "start": "1352799",
    "end": "1358080"
  },
  {
    "text": "for leap years it doesn't have a natural kind of zero or life cycle so here i've chosen quite potentially arbitrarily but",
    "start": "1358080",
    "end": "1364640"
  },
  {
    "text": "i think quite reasonably i've chosen the largest category most years are not leap years most years are",
    "start": "1364640",
    "end": "1370480"
  },
  {
    "text": "not new years because they're not divisible by four so let's start with 75 percent of years",
    "start": "1370480",
    "end": "1375520"
  },
  {
    "text": "we're done first test case awesome now because when people do this they latch",
    "start": "1375520",
    "end": "1382559"
  },
  {
    "text": "on to the thing that they think is important which is leap years that's normally the first test i see",
    "start": "1382559",
    "end": "1388480"
  },
  {
    "text": "people writing whenever i do this in a workshop they test four leap years actually most years aren't leap years",
    "start": "1388480",
    "end": "1393840"
  },
  {
    "text": "so i'm going to change the sequence here but also people have a bias a year divisible by four is a leap year hmm",
    "start": "1393840",
    "end": "1400480"
  },
  {
    "text": "then look at the next one a year divisible by 100 is not a leap year wait a minute",
    "start": "1400480",
    "end": "1406400"
  },
  {
    "text": "these two statements cannot simultaneously be true if i'm using base 10. let's just assume",
    "start": "1406400",
    "end": "1411840"
  },
  {
    "text": "that i'm using base 10 okay i don't want to keep restating that those statements can't be simultaneously true",
    "start": "1411840",
    "end": "1418640"
  },
  {
    "text": "given my understanding of mathematics so clearly i've done that human thing",
    "start": "1418640",
    "end": "1425440"
  },
  {
    "text": "you know the way that sometimes you say oh i always do this oh i never do that humans exaggerate",
    "start": "1425440",
    "end": "1431679"
  },
  {
    "text": "we pick the common case and make it 100 but it's not 100",
    "start": "1431679",
    "end": "1437039"
  },
  {
    "text": "so let's be more precise a year divisible by 4 but not by 100 is a leap year ah okay we're going to",
    "start": "1437039",
    "end": "1442799"
  },
  {
    "text": "resize okay that is the rule now i've now i've got mutually exclusive",
    "start": "1442799",
    "end": "1450000"
  },
  {
    "text": "categories that mutual exclusivity is also important in the larger scale",
    "start": "1450000",
    "end": "1455120"
  },
  {
    "text": "particularly where you're dealing with business rules when somebody has i'm testing this business rule",
    "start": "1455120",
    "end": "1460559"
  },
  {
    "text": "and you say oh okay cool so what's this test i'm testing this business rule under this slightly different convention or this slightly",
    "start": "1460559",
    "end": "1466320"
  },
  {
    "text": "different context well wait a minute is that what was the other one then so tell me what that one is find the",
    "start": "1466320",
    "end": "1472559"
  },
  {
    "text": "name that says what this is",
    "start": "1472559",
    "end": "1476080"
  },
  {
    "text": "there are other naming conventions that contain the same information this is roy usheroff's naming convention that",
    "start": "1477840",
    "end": "1483279"
  },
  {
    "text": "he talks about in the arts of unit testing okay this basically the unit of work",
    "start": "1483279",
    "end": "1488640"
  },
  {
    "text": "the condition of call the expectation if you look at this you will realize",
    "start": "1488640",
    "end": "1493919"
  },
  {
    "text": "and we've used conventions differently but it has exactly the same information for me i am most interested in the",
    "start": "1493919",
    "end": "1499200"
  },
  {
    "text": "information what am i learning from this um you can even use the kind of bdd approach um using should in front of",
    "start": "1499200",
    "end": "1505360"
  },
  {
    "text": "everything again it's got exactly the same information you know i have a preference for a",
    "start": "1505360",
    "end": "1510480"
  },
  {
    "text": "particular style the propositional style i'll come back to that in a moment but i don't really care because all of these",
    "start": "1510480",
    "end": "1515760"
  },
  {
    "text": "contain the same information they're all better than test one test two they're all better than tests that is leap year works",
    "start": "1515760",
    "end": "1522400"
  },
  {
    "text": "they all contain the same information now i i'm never very keen on should",
    "start": "1522400",
    "end": "1528480"
  },
  {
    "text": "as my wife points out she says wagging her finger at me that's something you software people you",
    "start": "1528480",
    "end": "1533679"
  },
  {
    "text": "computer people do a lot she says that word i hate it whenever somebody involved in software",
    "start": "1533679",
    "end": "1541039"
  },
  {
    "text": "says should that's really bad oh it should work yes but it doesn't yeah but it should",
    "start": "1541039",
    "end": "1549200"
  },
  {
    "text": "that is the least helpful word ever to be uttered by a person in software so no",
    "start": "1549200",
    "end": "1554240"
  },
  {
    "text": "i don't think it's a good practice and the bdd community can quite happily disagree me with me even though they're",
    "start": "1554240",
    "end": "1559840"
  },
  {
    "text": "wrong they can have their enemy some people react to that and go yo must no we don't",
    "start": "1559840",
    "end": "1565840"
  },
  {
    "text": "need that we can just keep it really simple just like is and is not let's just try and find our statements of truth now one of the values of this",
    "start": "1565840",
    "end": "1572799"
  },
  {
    "text": "let's here's a simple implementation now this also explains by the way why oh",
    "start": "1572799",
    "end": "1578720"
  },
  {
    "text": "by the way i've seen this implemented in some staggering ways i've this is one line but i've enlarged the font",
    "start": "1578720",
    "end": "1584799"
  },
  {
    "text": "and in fact if you use an expression a body then it's really short",
    "start": "1584799",
    "end": "1590559"
  },
  {
    "text": "in c sharp i have seen this implemented in 28 lines of python",
    "start": "1590559",
    "end": "1595679"
  },
  {
    "text": "it was a it was a work of art",
    "start": "1595679",
    "end": "1599840"
  },
  {
    "text": "but here's the point once you've got tests you can refactor freely but this also demonstrates why people",
    "start": "1600720",
    "end": "1607360"
  },
  {
    "text": "struggle to remember the leap year rule why i like it as a simple example because it's got an",
    "start": "1607360",
    "end": "1612400"
  },
  {
    "text": "and and an o and a not i mean good grief we've just used all three boolean connectives that humans aren't good with",
    "start": "1612400",
    "end": "1618559"
  },
  {
    "text": "that we're really good with and on its own so i've been at goto",
    "start": "1618559",
    "end": "1624640"
  },
  {
    "text": "on monday and tuesday and wednesday and we're really good lots of hands in a row don't mess it up with any other",
    "start": "1624640",
    "end": "1630559"
  },
  {
    "text": "connectives okay and the sun will shine on monday or",
    "start": "1630559",
    "end": "1637120"
  },
  {
    "text": "tuesday or wednesday fine it's all ors as long as they're all the same connective that's fine what",
    "start": "1637120",
    "end": "1644000"
  },
  {
    "text": "really messes up is you put an and no in the same thing and then you throw a knot in it's just like nope sorry",
    "start": "1644000",
    "end": "1650880"
  },
  {
    "text": "that's just not how humans work even software developers okay anyway back to the code and the tests",
    "start": "1650880",
    "end": "1658080"
  },
  {
    "text": "all these test pass but notice their names the names",
    "start": "1658080",
    "end": "1664080"
  },
  {
    "text": "i'm not going to give you a guarantee i'm not saying that of course they it works because you can't really test you",
    "start": "1664080",
    "end": "1669200"
  },
  {
    "text": "know that there are no bugs but what it does is the passing tests raise your level of confidence it does not offer",
    "start": "1669200",
    "end": "1675039"
  },
  {
    "text": "certainty but it raises confidence have i got no tests i've got no tests less confidence more tests more",
    "start": "1675039",
    "end": "1681440"
  },
  {
    "text": "confidence yeah it's this kind of simple thing but we want to focus on the quality the information quality what i'm",
    "start": "1681440",
    "end": "1687279"
  },
  {
    "text": "saying is when this is green that that statement has a reasonable probability of being",
    "start": "1687279",
    "end": "1693360"
  },
  {
    "text": "true i'm saying that a year is not a year not divisible by four is not a leap year you know that's what i'm saying it's a",
    "start": "1693360",
    "end": "1699200"
  },
  {
    "text": "statement about the code it's a proposition let's implement the uh rather than gregorian rule let us",
    "start": "1699200",
    "end": "1705279"
  },
  {
    "text": "implement the julian calendar which he really is every four years at that point",
    "start": "1705279",
    "end": "1711039"
  },
  {
    "text": "we discover that one of these no longer works a year divisible by 100 but not by 400 is not a",
    "start": "1711039",
    "end": "1717919"
  },
  {
    "text": "leap year the reason i like this naming convention is because when something fails then it means the opposite is true",
    "start": "1717919",
    "end": "1723840"
  },
  {
    "text": "apparently a year divisible by 100 but by 400 is a leap year that's what we learned from this statement so in other",
    "start": "1723840",
    "end": "1729600"
  },
  {
    "text": "words the proposition is demonstrated to be false in this case",
    "start": "1729600",
    "end": "1735360"
  },
  {
    "start": "1735000",
    "end": "1784000"
  },
  {
    "text": "so there's a point here about communication nat price and steve freeman made this in a session",
    "start": "1736000",
    "end": "1741520"
  },
  {
    "text": "that they ran at xp day in london many years ago are your tests really driving your development",
    "start": "1741520",
    "end": "1747440"
  },
  {
    "text": "and they said for test drive development they must do more than just tests the code performs its required functionality",
    "start": "1747440",
    "end": "1752720"
  },
  {
    "text": "they must clearly express that required functionality to the reader that is they must be clear",
    "start": "1752720",
    "end": "1758559"
  },
  {
    "text": "specifications in other words these ideas your tests are specifying so you can use the",
    "start": "1758559",
    "end": "1764320"
  },
  {
    "text": "language of specification and thinking specification if you come in from the bdd angle some of this will be very",
    "start": "1764320",
    "end": "1769440"
  },
  {
    "text": "familiar to you but a lot of people make a false separation between the ideas of bdd and the ideas",
    "start": "1769440",
    "end": "1775360"
  },
  {
    "text": "of tdd they overlap they come from the same source it's all software",
    "start": "1775360",
    "end": "1781600"
  },
  {
    "text": "so let's take it a step further what i'm doing here is i'm structuring",
    "start": "1781600",
    "end": "1788080"
  },
  {
    "start": "1784000",
    "end": "2253000"
  },
  {
    "text": "given the con given the constraints of the language and let's drop away things",
    "start": "1788080",
    "end": "1793120"
  },
  {
    "text": "i'm using a namespace as a container i could also use a class as a container nesting of",
    "start": "1793120",
    "end": "1798640"
  },
  {
    "text": "classes what i'm now doing is i'm grouping things i'm saying oh yeah there's a leap here spec a year is a leap year if it is divisible by four but",
    "start": "1798640",
    "end": "1804880"
  },
  {
    "text": "not by 100. a year is a leap year if it is divisible by 400 a year is not a leap year and so on",
    "start": "1804880",
    "end": "1810960"
  },
  {
    "text": "this has an interesting there's two two things that are interesting about this one sometimes when people say oh my names",
    "start": "1810960",
    "end": "1816480"
  },
  {
    "text": "are getting really long even though you're not calling them you still have to read them but they are not arbitrarily long they",
    "start": "1816480",
    "end": "1823279"
  },
  {
    "text": "often contain repeating parts what do we do with repetition we extract it",
    "start": "1823279",
    "end": "1828320"
  },
  {
    "text": "so in other words when you start seeing your test cases and this is something that people often this is a step that",
    "start": "1828320",
    "end": "1834240"
  },
  {
    "text": "people often miss they end up with a test class that has 100 test methods and thinking i'm doing good work because i'm",
    "start": "1834240",
    "end": "1839279"
  },
  {
    "text": "doing tests yes you are doing good work but it could be better because 100 methods",
    "start": "1839279",
    "end": "1844640"
  },
  {
    "text": "is still 100 methods and that's not easy to read so give it some structure give it some shape okay you take",
    "start": "1844640",
    "end": "1851039"
  },
  {
    "text": "advantage of the fact that we're really good at differentiating levels so put things on a level and now i can say oh",
    "start": "1851039",
    "end": "1857440"
  },
  {
    "text": "the commonality is that these this is a classifier function or it classifies stuff so what's the",
    "start": "1857440",
    "end": "1863600"
  },
  {
    "text": "classification ah use the leap years or non-leap years group them accordingly use that second dimension",
    "start": "1863600",
    "end": "1871278"
  },
  {
    "text": "and i've got data i've got an example here but i can take it further",
    "start": "1871600",
    "end": "1878240"
  },
  {
    "text": "these days most testing frameworks not all but most testing frameworks will support some kind of parameterization",
    "start": "1878240",
    "end": "1885039"
  },
  {
    "text": "they can be more data driven okay and some are better at this than others but the idea is that now you've",
    "start": "1885039",
    "end": "1891440"
  },
  {
    "text": "got the opportunity to use representative data examples and really kind of express",
    "start": "1891440",
    "end": "1897600"
  },
  {
    "text": "here's some examples we like examples it's like yeah yeah 2020 was a leap year as was 2016. i i don't really remember",
    "start": "1897600",
    "end": "1904399"
  },
  {
    "text": "year four i'm not that old but four is the canonical year that is divisible by four",
    "start": "1904399",
    "end": "1911840"
  },
  {
    "text": "and i can do this with other connectives you know divisible by 400 i can even set up this range operator 400 800 1200 1600",
    "start": "1911840",
    "end": "1920559"
  },
  {
    "text": "so immediately i've got far better value coverage but i'm also trying to choose",
    "start": "1920559",
    "end": "1926000"
  },
  {
    "text": "examples from the domain your examples may not be simple integers you may have much richer and more complex examples",
    "start": "1926000",
    "end": "1931519"
  },
  {
    "text": "most testing frameworks will allow you a way of getting those in but this is the way you build it up so that people can look at that and",
    "start": "1931519",
    "end": "1937679"
  },
  {
    "text": "importantly somebody who is not a programmer but maybe a domain specialist can look",
    "start": "1937679",
    "end": "1943200"
  },
  {
    "text": "through and go yeah those look right always remember that people can actually read more than you think they can read",
    "start": "1943200",
    "end": "1949600"
  },
  {
    "text": "okay they might not be able to read the curly bracket stuff but they can really spot the words and the numbers there is no doubt about that it's like if you",
    "start": "1949600",
    "end": "1956159"
  },
  {
    "text": "look at a newspaper in a language that you can't read you will still pick out oh that's a name that's a country that's",
    "start": "1956159",
    "end": "1961679"
  },
  {
    "text": "a you pick out all of these things so work with the way that people read this stuff",
    "start": "1961679",
    "end": "1966799"
  },
  {
    "text": "take advantage of that so we've got a nice classification here let's organize",
    "start": "1966799",
    "end": "1973600"
  },
  {
    "text": "the way that we understand the kinds of coverage that we might have there are common cases",
    "start": "1973600",
    "end": "1980559"
  },
  {
    "text": "there are also simple cases so this is a really kind of a simple checklist how do i check through things",
    "start": "1980559",
    "end": "1987200"
  },
  {
    "text": "common cases and simple cases some simple cases are common but not all so this is a venn diagram",
    "start": "1987200",
    "end": "1994880"
  },
  {
    "text": "but there are four categories boundary cases the edge cases",
    "start": "1994880",
    "end": "1999919"
  },
  {
    "text": "often that things happen around the empty state or the zero or the upper limits or whatever they are",
    "start": "1999919",
    "end": "2007039"
  },
  {
    "text": "include those you know some of those are going to be common some of those aren't they're often simple but not always",
    "start": "2007039",
    "end": "2014399"
  },
  {
    "text": "and error cases just as a small note this is the correct way to draw a venn diagram",
    "start": "2014399",
    "end": "2020240"
  },
  {
    "text": "with four sets such that all combinations are possible the one that you normally see on the internet no that's not right yeah",
    "start": "2020240",
    "end": "2027679"
  },
  {
    "text": "the clover version is not correct i like to think of this as a tulip and this seems strangely appropriate i call this",
    "start": "2027679",
    "end": "2033840"
  },
  {
    "text": "the kind of like the tulip of coverage but let's talk about the error cases",
    "start": "2033840",
    "end": "2039679"
  },
  {
    "text": "so i'm going to arbitrarily say we're creating our own calendar okay if you want to deal with real",
    "start": "2039679",
    "end": "2045919"
  },
  {
    "text": "calendar problems good luck",
    "start": "2045919",
    "end": "2051118"
  },
  {
    "text": "there is calendars are yeah humans and conventions for telling time are",
    "start": "2051119",
    "end": "2058398"
  },
  {
    "text": "difficult but let us just say i'm for the purposes of this i'm creating a calendar it's a",
    "start": "2058399",
    "end": "2064320"
  },
  {
    "text": "proleptic common era gregorian calendar in other words it is backdated common era year one onwards",
    "start": "2064320",
    "end": "2072240"
  },
  {
    "text": "and um we're basically saying that it has always existed for that period but we're not supporting anything outside",
    "start": "2072240",
    "end": "2078158"
  },
  {
    "text": "that okay so a year is not supported so i've created this concept of a calendar i've created",
    "start": "2078159",
    "end": "2084000"
  },
  {
    "text": "a calendar right here if it is zero i'm going to focus on zero because zero is often special",
    "start": "2084000",
    "end": "2089118"
  },
  {
    "text": "zero is often overlooked people even debate whether or not there is a year zero in the calendar",
    "start": "2089119",
    "end": "2094638"
  },
  {
    "text": "you probably have an answer in your head it's probably wrong the answer is it",
    "start": "2094639",
    "end": "2100839"
  },
  {
    "text": "depends if you if you got that well done because it depends which calorie you're using the calorie that most people in",
    "start": "2100839",
    "end": "2107359"
  },
  {
    "text": "the world are using does have a year zero yeah a lot of people say no no we're using the gregorian calendar that doesn't have a user no you're using the",
    "start": "2107359",
    "end": "2114480"
  },
  {
    "text": "iso 8601 calendar you just didn't know it yeah it's like i've been breathing air",
    "start": "2114480",
    "end": "2120880"
  },
  {
    "text": "all my life and even if i didn't even even nobody told me i just didn't know it",
    "start": "2120880",
    "end": "2126480"
  },
  {
    "text": "so yeah and then there's the negatives i'll leave those out",
    "start": "2126480",
    "end": "2131760"
  },
  {
    "text": "those are being excluded i'm going to sample those but while we're here",
    "start": "2131760",
    "end": "2137359"
  },
  {
    "text": "is your integer bounded i talked a lot yesterday about boundary cases there is a minimum value",
    "start": "2137359",
    "end": "2143839"
  },
  {
    "text": "show it yeah this one's not supported either i'm going to keep zero distinct i could",
    "start": "2143839",
    "end": "2149760"
  },
  {
    "text": "fold zero in and basically say non-positive but i want to make this visible sometimes we separate test cases",
    "start": "2149760",
    "end": "2154960"
  },
  {
    "text": "not for reasons of coverage but for reasons of emphasis just as you would write something in an",
    "start": "2154960",
    "end": "2160640"
  },
  {
    "text": "email if you want somebody to read it give it its own paragraph put it in bold you know make it visible oh yeah we've",
    "start": "2160640",
    "end": "2166560"
  },
  {
    "text": "accounted for year zero don't worry about it but because of the naming style",
    "start": "2166560",
    "end": "2173040"
  },
  {
    "text": "it invites me to think wait a minute if i've talked about when it is not supported i'm missing something what about when it is supported it's implied",
    "start": "2173040",
    "end": "2180800"
  },
  {
    "text": "but it's not explicit that positive years are supported it's implied i'm expecting the following",
    "start": "2180800",
    "end": "2186560"
  },
  {
    "text": "test to pass even if i'm doing tdd because i just want to say yes your assumption is correct i want to confirm",
    "start": "2186560",
    "end": "2193680"
  },
  {
    "text": "that it's not just you know something you have to guess and i'm going to choose two ends of the scale i'm going",
    "start": "2193680",
    "end": "2199200"
  },
  {
    "text": "to choose the smallest positive into journal i'm going to choose the maximum one one of the things i have found funny is",
    "start": "2199200",
    "end": "2205760"
  },
  {
    "text": "and again remember i said that you can normally see through this lens the habits of many developers whenever i run",
    "start": "2205760",
    "end": "2212079"
  },
  {
    "text": "this as a training lab the number of times i get somebody people arbitrarily",
    "start": "2212079",
    "end": "2217760"
  },
  {
    "text": "put in a limit an upper limit it's not in the requirements and they don't have a test for it normally it's around ten thousand",
    "start": "2217760",
    "end": "2224640"
  },
  {
    "text": "normally an exception is thrown if you choose a date that is 10 000 or beyond",
    "start": "2224640",
    "end": "2230079"
  },
  {
    "text": "but the point here is i want to say so this is the case of developers inventing behavior",
    "start": "2230079",
    "end": "2235200"
  },
  {
    "text": "of course we're going to do that because developers are creative what else were you expecting",
    "start": "2235200",
    "end": "2240400"
  },
  {
    "text": "but the point here is i want to confirm no it's all the way up so we've got quite a",
    "start": "2240400",
    "end": "2245599"
  },
  {
    "text": "nice model here when we drop away everything that kind of works quite nicely",
    "start": "2245599",
    "end": "2251279"
  },
  {
    "text": "so let's move on to something else i've only got a couple of minutes",
    "start": "2251599",
    "end": "2256800"
  },
  {
    "start": "2253000",
    "end": "2340000"
  },
  {
    "text": "let's talk about fizzbuzz that well-known enterprise",
    "start": "2256800",
    "end": "2262000"
  },
  {
    "text": "actually there is an enterprise fizzbuzz if you have not come across it google enterprise fizzbuzz now that is a work of art",
    "start": "2262000",
    "end": "2270440"
  },
  {
    "text": "so fizzbuzz is a counting game there's a drinking game",
    "start": "2270480",
    "end": "2276079"
  },
  {
    "text": "um fizz buzz of one is one as a string of",
    "start": "2276079",
    "end": "2281280"
  },
  {
    "text": "two is two three oh it's fizz four it's just four five is buzz ah divisible",
    "start": "2281280",
    "end": "2287280"
  },
  {
    "text": "by five fizz yeah seven yeah yeah and then fizz buzz",
    "start": "2287280",
    "end": "2292720"
  },
  {
    "text": "divisible by three and five it's not the world's hardest most challenging piece of software but you'd",
    "start": "2292720",
    "end": "2298960"
  },
  {
    "text": "be surprised how challenging it can be now the interesting thing is how do we implement it well i can implement it",
    "start": "2298960",
    "end": "2305760"
  },
  {
    "text": "like this a lot of developers are always so i've got some python here a lot of developers are always delighted",
    "start": "2305760",
    "end": "2311119"
  },
  {
    "text": "to discover this accumulated effect oh isn't it",
    "start": "2311119",
    "end": "2317200"
  },
  {
    "text": "really cool i never actually have to do the fizzbuzz case",
    "start": "2317200",
    "end": "2321599"
  },
  {
    "text": "this like it feels cool actually there's some problems with it i'll come back to those in a moment",
    "start": "2322320",
    "end": "2327838"
  },
  {
    "text": "and then there's this case which actually is the more functional of the two it's the more structured of the two",
    "start": "2328079",
    "end": "2333280"
  },
  {
    "text": "it involves no intermediate state no control state i personally prefer this but i'll also give you a reason why you",
    "start": "2333280",
    "end": "2338480"
  },
  {
    "text": "should personally prefer as well but it allows me to talk about coverage so brian merrick observed in and he was",
    "start": "2338480",
    "end": "2346160"
  },
  {
    "start": "2340000",
    "end": "2376000"
  },
  {
    "text": "quoted in uh a blog by martin fowler i expect a high level of coverage sometimes managers",
    "start": "2346160",
    "end": "2351520"
  },
  {
    "text": "require one there's a subtle difference don't use it as a control",
    "start": "2351520",
    "end": "2357839"
  },
  {
    "text": "coverage is terrible as a control thing but it is information sometimes we just need information so",
    "start": "2357839",
    "end": "2363839"
  },
  {
    "text": "how are we doing but the minute we set a target the nature of the numbers changes their",
    "start": "2363839",
    "end": "2369119"
  },
  {
    "text": "purpose their role and how people experience them and relate to them changes radically",
    "start": "2369119",
    "end": "2374800"
  },
  {
    "text": "so let's talk about that coverage that's the first example",
    "start": "2374800",
    "end": "2381359"
  },
  {
    "start": "2376000",
    "end": "2595000"
  },
  {
    "text": "what i'm going to do is i'm going to highlight the fact that there are multiple forms of coverage and then",
    "start": "2381359",
    "end": "2387440"
  },
  {
    "text": "we'll kind of close a third fizz buzz of one is one",
    "start": "2387440",
    "end": "2393119"
  },
  {
    "text": "what kind of coverage have i got from that well it turns out when people say coverage",
    "start": "2393119",
    "end": "2400000"
  },
  {
    "text": "it's as if they think there's only one form of coverage and that's the problem is that often it's the",
    "start": "2400000",
    "end": "2405200"
  },
  {
    "text": "because we don't like to have long phrases we will often just shorten the most common form of coverage people are talking about statement or line coverage",
    "start": "2405200",
    "end": "2413040"
  },
  {
    "text": "the two are almost equivalent but i'm going to treat them as if they were but that's not the only form there's a",
    "start": "2413040",
    "end": "2418960"
  },
  {
    "text": "lower form function coverage did we even call the function okay we called it yeah 100 coverage you",
    "start": "2418960",
    "end": "2425359"
  },
  {
    "text": "can claim as long as you call each function once you have 100 coverage are you sure kevin",
    "start": "2425359",
    "end": "2430800"
  },
  {
    "text": "yes 100 function coverage oh you mean there's more than one kind of coverage yeah",
    "start": "2430800",
    "end": "2437040"
  },
  {
    "text": "i've got 50 branch coverage every if describes two options",
    "start": "2437040",
    "end": "2443040"
  },
  {
    "text": "there is always an else in an if even if you don't put it there there's still an else",
    "start": "2443040",
    "end": "2448800"
  },
  {
    "text": "because there are two paths you can go by and i'm not going to quote the full lead zap but feel free to do that as",
    "start": "2448800",
    "end": "2454640"
  },
  {
    "text": "extra research so the point here is there are two parts two branches",
    "start": "2454640",
    "end": "2462079"
  },
  {
    "text": "i've got 50 branch coverage there are three branches i have taken half of them",
    "start": "2462079",
    "end": "2467760"
  },
  {
    "text": "or three sorry three branches i have taken half of those options okay",
    "start": "2467760",
    "end": "2473040"
  },
  {
    "text": "i've taken the false of the first one the false of the second one and the true of the third one",
    "start": "2473040",
    "end": "2480160"
  },
  {
    "text": "but i've only got 25 path coverage in this case that's the number of possible paths i can go through",
    "start": "2480160",
    "end": "2488160"
  },
  {
    "text": "each decision point gives me 2 that's 2 times 2 times 2 there's eight paths through this",
    "start": "2488319",
    "end": "2495040"
  },
  {
    "text": "potentially kind of it doesn't actually work like that because of the values so it's actually really only four parts",
    "start": "2495040",
    "end": "2501920"
  },
  {
    "text": "because of the interactions of state huh that's the issue now that second",
    "start": "2501920",
    "end": "2506960"
  },
  {
    "text": "thing now gives me 100 statement coverage for a lot of people 100 means done go home",
    "start": "2506960",
    "end": "2513520"
  },
  {
    "text": "how are we doing i've got 100 branch coverage come on kevin yeah but 50 path coverage and you know by understanding",
    "start": "2513520",
    "end": "2520880"
  },
  {
    "text": "the nature of the problem that there are four categories just as in leap years so the one thing i want you to walk away from is however many categories you",
    "start": "2520880",
    "end": "2527200"
  },
  {
    "text": "think there are there might be more there's always a wrinkle there's always an exception to that it's not just leap years and only peers there are two cases",
    "start": "2527200",
    "end": "2533760"
  },
  {
    "text": "in each one the same for this you you know we haven't seen all of them we've seen numbers and fizzbuzz but we haven't",
    "start": "2533760",
    "end": "2538880"
  },
  {
    "text": "seen fizz or buzz let's go to this one this one's much more honest it doesn't",
    "start": "2538880",
    "end": "2544000"
  },
  {
    "text": "have intermediate state this is an interesting thing this function is simpler it doesn't use",
    "start": "2544000",
    "end": "2549280"
  },
  {
    "text": "control state or variable state and it's also more honest",
    "start": "2549280",
    "end": "2554960"
  },
  {
    "text": "at this point i have 25 path coverage i have 25 branch coverage but more importantly 62.5",
    "start": "2554960",
    "end": "2562560"
  },
  {
    "text": "statement coverage now i add another test case i'm at 75 statement coverage",
    "start": "2562560",
    "end": "2567920"
  },
  {
    "text": "oh we're not at 100 we were last time",
    "start": "2567920",
    "end": "2571920"
  },
  {
    "text": "and now we're all at 100 it turns out if you use a more functional flow style in other words",
    "start": "2573040",
    "end": "2579680"
  },
  {
    "text": "something that could be reduced potentially to an expression rather than something that accumulates state",
    "start": "2579680",
    "end": "2584880"
  },
  {
    "text": "just watch out for this because we are normally working in imperative languages and it turns out that this kind of",
    "start": "2584880",
    "end": "2591280"
  },
  {
    "text": "coverage statistic can kind of mislead you into thinking you are you have better coverage than you do",
    "start": "2591280",
    "end": "2597280"
  },
  {
    "start": "2595000",
    "end": "2623000"
  },
  {
    "text": "so that is the important observation",
    "start": "2597280",
    "end": "2602720"
  },
  {
    "text": "it's very easy to use the numbers and mislead yourselves and",
    "start": "2602720",
    "end": "2609040"
  },
  {
    "text": "that becomes the key so i will close with the observation of what would tests for this look like",
    "start": "2609040",
    "end": "2614720"
  },
  {
    "text": "because i recognize i'm standing between you and lunch and that's really not a good thing from a perspective of the developer",
    "start": "2614720",
    "end": "2621838"
  },
  {
    "text": "let's phrase this one out what are the properties we're interested in so this is property based testing",
    "start": "2622720",
    "end": "2628960"
  },
  {
    "start": "2623000",
    "end": "2714000"
  },
  {
    "text": "effectively every result is fizz buzz fizz buzz or a decimal string is that true yes it is",
    "start": "2628960",
    "end": "2634560"
  },
  {
    "text": "have we understood the domain enough yes that's a true statement okay if that fails we've done something wrong",
    "start": "2634560",
    "end": "2640960"
  },
  {
    "text": "every decimal result 1 2 4 7 etc",
    "start": "2640960",
    "end": "2646640"
  },
  {
    "text": "corresponds to its ordinal position in other words we don't expect to find one at index 33 okay there's a one",
    "start": "2646640",
    "end": "2653760"
  },
  {
    "text": "should be at one and so on every third result contains fizz every fifth result contains buzz every 15th",
    "start": "2653760",
    "end": "2660720"
  },
  {
    "text": "result is fizzbuzz a lot of people stop here this is one of the reasons that property-based testing can be challenging because it's not how",
    "start": "2660720",
    "end": "2667119"
  },
  {
    "text": "humans think this is not enough you need this one as well",
    "start": "2667119",
    "end": "2673839"
  },
  {
    "text": "the ordinal position of every fizz result is divisible by three you need the reverse",
    "start": "2673839",
    "end": "2679359"
  },
  {
    "text": "buzz divisible by five fizzbuzz divisible by 15. th this now constrains exactly what we have and therefore i can",
    "start": "2680000",
    "end": "2687040"
  },
  {
    "text": "write this is one of the reasons i chose python because the difference between pseudocode and python is only a few characters",
    "start": "2687040",
    "end": "2693920"
  },
  {
    "text": "these are all the properties that i want for the data set that i've got and i want to assert that they are all true",
    "start": "2693920",
    "end": "2701680"
  },
  {
    "text": "so it's not the world's most sophisticated set of testing but in that",
    "start": "2701680",
    "end": "2706720"
  },
  {
    "text": "what we can see is we can see that there is a way of thinking that is thorough",
    "start": "2706720",
    "end": "2712560"
  },
  {
    "text": "and it moves us beyond the classic 1970s view from nicholas verth the inventor of",
    "start": "2712560",
    "end": "2719200"
  },
  {
    "start": "2714000",
    "end": "2767000"
  },
  {
    "text": "pascal he wrote a book called algorithms plus data structures equals programs which must have infuriated his publishers i",
    "start": "2719200",
    "end": "2725680"
  },
  {
    "text": "mean these days publishers are used to putting emoji in titles but back in the 1970s what",
    "start": "2725680",
    "end": "2731280"
  },
  {
    "text": "you've used a plus and an equals we don't do that here especially in switzerland",
    "start": "2731280",
    "end": "2736800"
  },
  {
    "text": "but no apparently they had to do it we want to move to a point here where we have a much richer",
    "start": "2736800",
    "end": "2742880"
  },
  {
    "text": "understanding of our code and the relationship with the non-code parts the test code the",
    "start": "2742880",
    "end": "2749119"
  },
  {
    "text": "configuration code all of those other bits and pieces those little fragments including your head and adrs and bits",
    "start": "2749119",
    "end": "2756000"
  },
  {
    "text": "and pieces like that there's a larger system we want to have a richer system of interpretation and to feed that we're",
    "start": "2756000",
    "end": "2761119"
  },
  {
    "text": "not just testing for right and wrong we're trying to communicate what we understand by right",
    "start": "2761119",
    "end": "2766640"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "2766640",
    "end": "2777199"
  },
  {
    "start": "2767000",
    "end": "2785000"
  },
  {
    "text": "you",
    "start": "2784160",
    "end": "2786240"
  }
]