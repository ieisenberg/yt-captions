[
  {
    "start": "0",
    "end": "228000"
  },
  {
    "text": "All right. Hey, everyone. Welcome back to another \nepisode of the \"GoTo Bookclub.\" My name is Danica   Fine. I'm a developer advocate in the data \nstreaming space. And I'm probably entirely  ",
    "start": "4160",
    "end": "13760"
  },
  {
    "text": "too excited to be here today with Kate Stanley \nand Mickael Maison to discuss the release of  ",
    "start": "13760",
    "end": "20160"
  },
  {
    "text": "their latest book, \"Kafka Connect: Build and Run \nData Pipelines.\" And throughout the conversation,  ",
    "start": "20160",
    "end": "25640"
  },
  {
    "text": "I think you'll figure out why I'm so excited to \nbe here chatting with the two of them. But before   we get into the book itself and Kafka \nConnect, how about each of you introduce  ",
    "start": "25640",
    "end": "34440"
  },
  {
    "text": "yourselves? Kate, do you want to kick it off?\nYeah. Thanks, Danica. It's great to be here.  ",
    "start": "34440",
    "end": "40000"
  },
  {
    "text": "So yeah, I'm Kate. I'm a principal software \nengineer working in the Kafka team at Red Hat.  ",
    "start": "40000",
    "end": "46720"
  },
  {
    "text": "And I've actually been working on Kafka-related \nproducts since 2018. And alongside my day job,  ",
    "start": "46720",
    "end": "53320"
  },
  {
    "text": "I also love sharing my experience. So I've \ndone lots of presenting at conferences about  ",
    "start": "53320",
    "end": "58720"
  },
  {
    "text": "Kafka Connect. And then, of course, now \nbranched out slightly into writing a book. ",
    "start": "58720",
    "end": "64960"
  },
  {
    "text": "Yeah. And Mickael?\nRight. So Mickael. I'm   also a software engineer also in the Kafka team at \nRed Hat. I've been working with Kafka for a very  ",
    "start": "64960",
    "end": "73280"
  },
  {
    "text": "long time. I think I started around 2015. I'm also \na committer on the project since 2019. And for the  ",
    "start": "73280",
    "end": "81360"
  },
  {
    "text": "past about year and a half, I'm the chair of the \nproject management committee for Apache Kafka. ",
    "start": "81360",
    "end": "86720"
  },
  {
    "text": "Nice. And I think based on what we just heard \nabout both of your experiences in Apache Kafka  ",
    "start": "86720",
    "end": "92880"
  },
  {
    "text": "and your involvement in the Kafka community and \nbeing out at conferences speaking, I think the two  ",
    "start": "92880",
    "end": "98200"
  },
  {
    "text": "of you are clearly qualified to be writing a book \nabout Kafka Connect. But I'm curious to hear more  ",
    "start": "98200",
    "end": "104439"
  },
  {
    "text": "details about sort of this journey that brought \nyou to writing this book. You both are very active   in Kafka, but what was the motivation for getting \ninto Kafka Connect and writing this resource? ",
    "start": "104440",
    "end": "114600"
  },
  {
    "text": "Right. So it's come from a pretty long time, \nbut I think at the time I was in a team that was  ",
    "start": "114600",
    "end": "119680"
  },
  {
    "text": "running Kafka in production. We were running Kafka \nConnect as well, especially running MirrorMaker at   scale. And I started basically contributing back \nto Connect. So anytime we found an issue or a bug,  ",
    "start": "120840",
    "end": "132480"
  },
  {
    "text": "or an improvement, we'd do it. So at the time \nI was becoming a committer, there were not very   many other committers working on Connect. So \nthey were mostly working on the brokers and  ",
    "start": "132480",
    "end": "141560"
  },
  {
    "text": "clients. So basically I became one of the regular \nmaintainers on Connect. That's basically where I  ",
    "start": "141560",
    "end": "147599"
  },
  {
    "text": "grew my experience. So from using it in production \nand also helping merge contributions from other  ",
    "start": "147600",
    "end": "153720"
  },
  {
    "text": "members of the community. And at the time I was \nalso working with Kate, so we're not in the same  ",
    "start": "153720",
    "end": "159880"
  },
  {
    "text": "team, but we're interacting regularly. And I knew \nshe also had experience working with Connect.  ",
    "start": "159880",
    "end": "166120"
  },
  {
    "text": "So Kate, do you want to share yours?\nYeah. I'd written at Connect as part   of my team. And then, as part of that as well, \nworking with lots of customers, helping them to  ",
    "start": "167000",
    "end": "175880"
  },
  {
    "text": "run Kafka Connect. And I just realized how kind \nof few resources there were around Connect. And  ",
    "start": "175880",
    "end": "183360"
  },
  {
    "text": "so I started presenting at conferences and things \nlike that. And obviously, Mickael had seen some of   my sessions and approached me and said, you know, \n\"Would you be interested in writing a book?\" And  ",
    "start": "183360",
    "end": "192640"
  },
  {
    "text": "I think one of the great things about Connect \nis it can be used for so many different use   cases. But it then felt like, you know, that's \nquite a lot to cover. But actually, the more we  ",
    "start": "192640",
    "end": "202400"
  },
  {
    "text": "talked about the content and what we might want \nto include, we realized that because we did work   in different teams and we'd come at Connect from \nkind of different angles, we actually felt like  ",
    "start": "202400",
    "end": "212200"
  },
  {
    "text": "between us, we had quite a good covering of the \nentirety of what we wanted to include. So yeah,  ",
    "start": "212200",
    "end": "219160"
  },
  {
    "text": "kind of said, \"Actually, this feels like the \nperfect sort of pairing of our experiences.\"",
    "start": "219160",
    "end": "226080"
  },
  {
    "text": "Yeah. No, that's awesome. And I love what you \nsaid about, you know, Kafka Connect being used   for a lot of different use cases. I think that's \none of the major selling points of it. It's just  ",
    "start": "226080",
    "end": "234760"
  },
  {
    "start": "228000",
    "end": "451000"
  },
  {
    "text": "so versatile. And I think that speaks to sort of \nthe reality of, you know, when it comes to writing  ",
    "start": "234760",
    "end": "240319"
  },
  {
    "text": "data pipelines, to architecting these systems \nthat can either, you know, move data from A to   B or whatever other purpose we're using it for. \nEveryone who's using Kafka Connect is starting  ",
    "start": "240320",
    "end": "249920"
  },
  {
    "text": "from a slightly different perspective. They have \na different programming background. And even in  ",
    "start": "249920",
    "end": "255160"
  },
  {
    "text": "some cases, their title is going to affect how \nthey actually approach building a data pipeline   and approach that problem. And so that must \nhave been a challenge for the both of you for,  ",
    "start": "255160",
    "end": "263960"
  },
  {
    "text": "you know, going into writing a resource in Kafka \nConnect. How did you cater to the different types   of people who are looking to use your resource \nand learn something about this technology? ",
    "start": "263960",
    "end": "275000"
  },
  {
    "text": "Yeah, definitely. So we started off \nlooking at kind of the different topics,   and we quickly realized that the best way \nwe felt to structure the whole book was to  ",
    "start": "275000",
    "end": "284680"
  },
  {
    "text": "look at the different personas that we had \nand kind of group the chapters in that way.  So there are three different personas that we kind \nof identified around Connect. You have the data  ",
    "start": "284680",
    "end": "293759"
  },
  {
    "text": "engineers who are building the pipelines and kind \nof determining how does my data flow from A to B.  ",
    "start": "293760",
    "end": "299640"
  },
  {
    "text": "Then you have the site reliability engineers, or \nSREs, who are running the infrastructure, standing  ",
    "start": "300400",
    "end": "305560"
  },
  {
    "text": "up Connect, managing it. And then developers who \nwant to actually customize Kafka Connect as well. ",
    "start": "305560",
    "end": "312480"
  },
  {
    "text": "And so what we know is that there isn't \nnecessarily a one-to-one correlation between  ",
    "start": "312480",
    "end": "318440"
  },
  {
    "text": "those roles and a real person. Often you're doing \nmultiple roles, or it might be there's different   teams. So we decided to have four sections to the \nbook. So the first part is kind of more general,  ",
    "start": "318440",
    "end": "329800"
  },
  {
    "text": "and then we have one section for each of those \npersonas. But we really wanted people to be able   to read the book beginning to end. So even if \nyou are on a specific role and you're just an  ",
    "start": "329800",
    "end": "341520"
  },
  {
    "text": "SRE or you're specifically a developer, you'll \ndefinitely gain something by reading it all. ",
    "start": "341520",
    "end": "347160"
  },
  {
    "text": "But then by grouping the chapters by \npersona, we're hoping that this really   means that people can more easily refer back \nto it and be able to say, \"Okay, you know,  ",
    "start": "347160",
    "end": "356280"
  },
  {
    "text": "this is my primary role day-to-day, so these \nare the chapters that I'm going to be going   back to again and again.\" And certainly that's \nhow I use the book. So I definitely have the  ",
    "start": "356280",
    "end": "365760"
  },
  {
    "text": "book on my desk to kind of flick through and \nmake sure that if I want to check things,  ",
    "start": "365760",
    "end": "371160"
  },
  {
    "text": "it just makes it really easy to find things. \nSo that's how we kind of chose to structure it. ",
    "start": "371160",
    "end": "377040"
  },
  {
    "text": "And I definitely...I love that. I really do \nappreciate how this was broken up for this   particular book. Because speaking as someone \nwho is in developer relations, you know,  ",
    "start": "377040",
    "end": "386760"
  },
  {
    "text": "constantly thinking about how best to approach \nthe writing of any sort of content, whether that  ",
    "start": "386760",
    "end": "392360"
  },
  {
    "text": "is a written blog post or a resource like this, \nor a guide, or even a conference presentation,  ",
    "start": "392360",
    "end": "398120"
  },
  {
    "text": "I have personally found that anytime that \npeople who are consuming these resources  ",
    "start": "398120",
    "end": "403720"
  },
  {
    "text": "can see themselves reflected in the resource \nitself, it's just going to do that much better,  ",
    "start": "403720",
    "end": "410360"
  },
  {
    "text": "right? And so I think by, like, clearly defining \nthese personas, even if it doesn't, you know,   really match up for that one-to-one mapping, it's \nstill going to be way more successful, right?  ",
    "start": "410360",
    "end": "419960"
  },
  {
    "text": "So I really, really appreciate that. Good job.\nBut I mean, looking at sort of you mentioned  ",
    "start": "419960",
    "end": "426440"
  },
  {
    "text": "all the personas, but I noticed that the first \nsection of the book is effectively for everyone,  ",
    "start": "426440",
    "end": "432440"
  },
  {
    "text": "right? So any person who's Kafka \nConnect curious or wants a little   bit more motivation around the technology as \na whole. And so I think you also do a really  ",
    "start": "432440",
    "end": "440120"
  },
  {
    "text": "good job there in setting the stage and \nalso giving a little bit of a background   around Apache Kafka and then going into some \nreally great use cases to get people thinking.",
    "start": "440120",
    "end": "450160"
  },
  {
    "text": "And again, going back to that, seeing yourself \nin the resource, I think use cases are a great  ",
    "start": "450160",
    "end": "455880"
  },
  {
    "start": "451000",
    "end": "818000"
  },
  {
    "text": "way to, you know, get people more interested. \nSo you cover things like Change Data Capture,  ",
    "start": "455880",
    "end": "461560"
  },
  {
    "text": "migrating databases, or, you know, mirroring \nKafka clusters. And speaking of someone who  ",
    "start": "461560",
    "end": "468400"
  },
  {
    "text": "loves Apache Kafka, I'd say these are all really \ngreat use cases, but I'm very curious for the  ",
    "start": "468400",
    "end": "473639"
  },
  {
    "text": "both of you. How many times have you been in \na conversation with someone who's, you know,  ",
    "start": "473640",
    "end": "479200"
  },
  {
    "text": "either maybe thinking about Kafka Connect or \nmaybe has ignored it for a little while and   you're talking about these use cases, and how \nmany times have they looked at you and said,  ",
    "start": "479200",
    "end": "486600"
  },
  {
    "text": "\"Oh yeah, I can just write a script to do that?\"\nYeah, I mean, it's presenting a lot. I get a lot  ",
    "start": "486600",
    "end": "494880"
  },
  {
    "text": "of people kind of coming up and sort of really \nwanting to know, you know, \"Why should I be   using Connect over other things?\" And I think it's \nreally noticeable, you know, when people are first  ",
    "start": "494880",
    "end": "505360"
  },
  {
    "text": "learning about Kafka Connect, the first thing they \nlearn to do is write a producer and a consumer   application. And so then when you're introducing \nthat external system, it's easy to just say, \"Oh,  ",
    "start": "505360",
    "end": "516240"
  },
  {
    "text": "well, I'll just extend that application that \nI've already written.\" And so for that reason,  ",
    "start": "516240",
    "end": "523000"
  },
  {
    "text": "Connect just isn't something that's kind of \nfront of mind that you think of straight away,   but Connect is designed to flow data to \nand from Kafka in a scalable and reliable,  ",
    "start": "523000",
    "end": "534839"
  },
  {
    "text": "resilient way. And I think resiliency is one of \nthe key pieces here of why you really should be  ",
    "start": "534840",
    "end": "540640"
  },
  {
    "text": "looking at Connect rather than writing your \nown script. Because it's really easy to write   a script that works when everything works, the \ngolden path, but things go wrong all the time. ",
    "start": "540640",
    "end": "551983"
  },
  {
    "text": "They always will.\nAnd it's much harder to write   a script that's going to count for all of that. \nSo there's different ways that Connect does this.  ",
    "start": "551983",
    "end": "558640"
  },
  {
    "text": "It's got a lot of resiliency built in, in terms \nof, you know, if one of the workers goes down,  ",
    "start": "558640",
    "end": "564080"
  },
  {
    "text": "it will rebalance work onto a different worker. \nSo that workload management's really useful.  ",
    "start": "564080",
    "end": "569720"
  },
  {
    "text": "But even just things like you can configure \nConnect so that if it's processing a record  ",
    "start": "569720",
    "end": "574800"
  },
  {
    "text": "and something goes wrong, it pushes it to a dead \nletter queue rather than the connector failing. ",
    "start": "574800",
    "end": "580600"
  },
  {
    "text": "So there's so much in Connect that helps you on \nthat journey. And I really think the big motivator  ",
    "start": "580600",
    "end": "589240"
  },
  {
    "text": "for using Kafka Connect is this idea that rather \nthan you writing all of these different custom  ",
    "start": "589240",
    "end": "595200"
  },
  {
    "text": "applications and having to handle all these custom \nfailures and things, every time you introduce a  ",
    "start": "595200",
    "end": "600240"
  },
  {
    "text": "new external system, you still just use Connect. \nSo you have that knowledge base that you can start  ",
    "start": "600240",
    "end": "605600"
  },
  {
    "text": "with, and then you're just adding a different \nconnector for the different external systems.   So it gives you a really good way to easily \nextend your pipeline without having to write  ",
    "start": "605600",
    "end": "614640"
  },
  {
    "text": "everything again from scratch.\nThat's really helpful.  I think it's also a great tool when you're \nadopting Apache Kafka. So sometimes when you  ",
    "start": "614640",
    "end": "624080"
  },
  {
    "text": "adopt it, you say, \"I'm going to build something \nbrand new, a new use case, and that's going to   be my entry to Apache Kafka,\" but what we see \nin practice is that all organizations have many  ",
    "start": "624080",
    "end": "634240"
  },
  {
    "text": "data systems already, and very rarely when you \nbuild something new, it's going to be itself in  ",
    "start": "634240",
    "end": "641040"
  },
  {
    "text": "a vacuum. So you'll have to interact with your \nexisting data, and this is where really Connect   shines. So it allows you to really easily \nconnect with some of your data systems and  ",
    "start": "641040",
    "end": "649320"
  },
  {
    "text": "reuse that to build something new.\nSo in your journey to adopt Apache  ",
    "start": "649320",
    "end": "654600"
  },
  {
    "text": "Kafka, it really speeds things up and makes things \neasier to use. So for example, like use case,  ",
    "start": "654600",
    "end": "660399"
  },
  {
    "text": "like Change Data Capture is really powerful \nbecause it really lets you expose something  ",
    "start": "660400",
    "end": "665800"
  },
  {
    "text": "you have in a database to all sorts of new use \ncases. And you don't put more stress in database.  ",
    "start": "665800",
    "end": "671920"
  },
  {
    "text": "So then once it's connected, you only have this \nextra process, not like every application goes   to your database and suddenly your production \ndatabase goes down because it's just overloaded. ",
    "start": "671920",
    "end": "682120"
  },
  {
    "text": "And also with the script approach, a very \neasy trap, very common anti-pattern we see is  ",
    "start": "682120",
    "end": "690600"
  },
  {
    "text": "dual writes. So we say, \"Oh, I got my application \nthat's writing to the database. We just change it  ",
    "start": "690600",
    "end": "696160"
  },
  {
    "text": "slightly, add a new line of code, and then write \nto Kafka as well.\" Obviously, this works well in   the golden path. So this may work well for a week \nor two, and suddenly it goes to one place and the  ",
    "start": "696160",
    "end": "706000"
  },
  {
    "text": "other, and you're in trouble. So really, so all \nthe points Kate said really, Kafka can actually  ",
    "start": "706000",
    "end": "715120"
  },
  {
    "text": "abstract that from you, so you only have to \nfocus on the pipeline you're building and forget   about the details of the infrastructure.\nAnd for the Change Data Capture use case,  ",
    "start": "715120",
    "end": "726640"
  },
  {
    "text": "I think we see a lot of that being supported by \nthe Debezium project. And so I think here it's,  ",
    "start": "726640",
    "end": "734160"
  },
  {
    "text": "yeah, sure, you might be able to do it yourself, \nbut here we have a whole project dedicated to this  ",
    "start": "734160",
    "end": "739759"
  },
  {
    "text": "very specific thing and doing it well, right? \nSo those connectors are sort of battle tested,  ",
    "start": "739760",
    "end": "745000"
  },
  {
    "text": "and you can trust them a lot more.\nExactly. We have a team of database   experts that have built these connectors, \nand they've done the job already for you. ",
    "start": "745000",
    "end": "756040"
  },
  {
    "text": "Yeah. And so why not take advantage of \nthat? And so I think to summarize, yeah,  ",
    "start": "756040",
    "end": "762320"
  },
  {
    "text": "sure, you could write a script, but Kafka \nConnect has so much more to offer on top of   that. And I actually think, thinking back to \nthis sort of conversation, the mentality of,  ",
    "start": "762320",
    "end": "774120"
  },
  {
    "text": "\"I can be scrappy and I can do it myself,\" I \nthink, is a common mentality. It's always fun  ",
    "start": "774120",
    "end": "779240"
  },
  {
    "text": "to test yourself and see if you can do it. But I \nthink that's sort of the biggest hurdle in getting   folks to use Kafka Connect these days, even \nthough it's really great and it's very useful. ",
    "start": "779240",
    "end": "788400"
  },
  {
    "text": "I mean, it's maybe fine for proof of concepts, but \nif you want to go at enterprise scale or if you  ",
    "start": "788400",
    "end": "793560"
  },
  {
    "text": "want something very reliable, then...\nYeah, absolutely. ",
    "start": "793560",
    "end": "799279"
  },
  {
    "text": "...it's much harder to write a \nscript that works 90% of the time.  Yeah. No, and I think that's what, you know, \nConnect has to offer there on the things that  ",
    "start": "799280",
    "end": "805279"
  },
  {
    "text": "you don't necessarily anticipate. And I've \nseen many of those issues myself in writing  ",
    "start": "805280",
    "end": "811640"
  },
  {
    "text": "those scripts and then giving up and using \nKafka Connect. So I feel that. I really do.",
    "start": "811640",
    "end": "817000"
  },
  {
    "text": "And so actually, maybe it's not, just to shift \ngears here, maybe it's not actually that scrappy  ",
    "start": "817000",
    "end": "822360"
  },
  {
    "start": "818000",
    "end": "985000"
  },
  {
    "text": "mentality that's the hurdle for Kafka Connect. \nI'm really excited to bring this up with you,  ",
    "start": "822360",
    "end": "827760"
  },
  {
    "text": "but I think one of the biggest hurdles for getting \npeople to use Kafka Connect is actually a lot of   the terminology and the naming, and the technology \nthat's been introduced. We've got Connect,  ",
    "start": "827760",
    "end": "837360"
  },
  {
    "text": "we've got Connector, we've got Connector \nPlugin, the list goes on and on and on.   What is with that? Why is it so difficult?\nI mean, yeah, terminology is a topic that I  ",
    "start": "837360",
    "end": "848720"
  },
  {
    "text": "could just go on about. Because I just remember \nso clearly sitting in a customer meeting and we  ",
    "start": "848720",
    "end": "854959"
  },
  {
    "text": "were discussing their Kafka Connect architecture \nand, you know, what they deployed and what was   working and what wasn't. And I just realized every \ntime somebody used the word Connect or Connectors,  ",
    "start": "854960",
    "end": "866279"
  },
  {
    "text": "they meant something slightly different. And \nit just made the meeting really difficult   because we were kind of talking cross purposes.\nAnd I think it goes back to those different  ",
    "start": "866280",
    "end": "877959"
  },
  {
    "text": "personas that Connect caters to. So you have your \nword Connect, that could be the Connect runtime.  ",
    "start": "877960",
    "end": "884880"
  },
  {
    "text": "So that's someone who's actually deployed Connect. \nOr it could be the framework that you're using   to implement your Connector. And similarly with \nthe word Connector, you have a Connector Plugin  ",
    "start": "884880",
    "end": "894800"
  },
  {
    "text": "could be, you know, the code sitting in GitHub or \na jar file that you've installed in Kafka Connect,  ",
    "start": "894800",
    "end": "900839"
  },
  {
    "text": "or it could be the actual running process. \nAnd then even the word Connector Plugin is  ",
    "start": "900840",
    "end": "905960"
  },
  {
    "text": "overloaded because you could mean a Connector or \nyou could mean a Converter or a Transformation,   which are all still types of Connector Plugin.\nSo I think it's really important to be clear on  ",
    "start": "905960",
    "end": "917360"
  },
  {
    "text": "the terminology, and we have tried really hard to \ncheck in the book that we're using the right terms  ",
    "start": "917360",
    "end": "923079"
  },
  {
    "text": "in the right places. But also, I think when people \nare talking about Connect, if you can get in your  ",
    "start": "923080",
    "end": "928440"
  },
  {
    "text": "head, \"What persona am I looking at? What context \nam I thinking about?\" then that I think helps  ",
    "start": "928440",
    "end": "934000"
  },
  {
    "text": "with the terminology because then it's easier to \ndetermine, \"Okay, you know, we're talking about  ",
    "start": "934000",
    "end": "939080"
  },
  {
    "text": "deploying this thing. We're probably talking about \nthe Connect runtime here.\" And so that does make   it easier. And yeah, it is something where just \nnow I start all of my presentations with, \"This is  ",
    "start": "939080",
    "end": "950520"
  },
  {
    "text": "the terminology we're going to use,\" just to kind \nof level set, but it is a tricky one with Connect. ",
    "start": "950520",
    "end": "957360"
  },
  {
    "text": "And I guess it's too late to change and clarify \na little bit better, but I think that is good  ",
    "start": "957360",
    "end": "962440"
  },
  {
    "text": "advice to, you know, first of all, think about the \npersona who you're actually talking to. Know your  ",
    "start": "962440",
    "end": "967560"
  },
  {
    "text": "audience. That's also something I'm constantly \nthinking about in developer relations. But I also  ",
    "start": "967560",
    "end": "972880"
  },
  {
    "text": "do definitely appreciate. I sat through a couple \nof your presentations. They're wonderful. And I  ",
    "start": "972880",
    "end": "978560"
  },
  {
    "text": "do definitely appreciate that, you know, there's \ncouple slides in the beginning to clarify things.",
    "start": "978560",
    "end": "983920"
  },
  {
    "text": "And so yeah, so with that settled for posterity, \nthank you for that. I feel like people,  ",
    "start": "984440",
    "end": "989800"
  },
  {
    "start": "985000",
    "end": "1511000"
  },
  {
    "text": "with their definition set, they can actually start \nto actually build things with Kafka Connect. And   conveniently, that is the focus of the second \nsection of the book. It's mostly for those  ",
    "start": "989800",
    "end": "999240"
  },
  {
    "text": "data engineers who want to set up pipelines. \nAnd maybe you can speak a little bit more to this,   Mickael, but I feel like the open source Kafka \nCommunity has done a great job in designing Kafka  ",
    "start": "999240",
    "end": "1009640"
  },
  {
    "text": "Connect so that this part is relatively simple.\nYeah. So a lot of work has been done for sure.  ",
    "start": "1009640",
    "end": "1017320"
  },
  {
    "text": "So the thing is, nowadays, if you're building a \ndata pipeline, I think the majority of users will   not have to write any code. So you just write \nthe definition of your pipeline, and you reuse  ",
    "start": "1017320",
    "end": "1027280"
  },
  {
    "text": "existing plugins that have been built there for \nyou. So the Apache Kafka project itself provides  ",
    "start": "1027280",
    "end": "1032839"
  },
  {
    "text": "the runtime where you run the connectors and \nthe APIs for building them, but doesn't provide   any connectors. The only connectors provided are \nfor MirrorMaker, for mirroring between clusters. ",
    "start": "1032840",
    "end": "1042079"
  },
  {
    "text": "So as you pointed, the community around the \nproject has done a great job building all  ",
    "start": "1042080",
    "end": "1049080"
  },
  {
    "text": "those connectors. Obviously, this wouldn't work \n[inaudible 00:17:32] without the connectors. So  ",
    "start": "1049080",
    "end": "1054679"
  },
  {
    "text": "there was a bit of a debate whether Kafka should \nhave implementations, but you just need to stay  ",
    "start": "1054680",
    "end": "1060320"
  },
  {
    "text": "focused on core Kafka and the expertise of \nthe maintenance. And since Kafka was created,  ",
    "start": "1060320",
    "end": "1067840"
  },
  {
    "text": "there's been literally hundreds of new data \nsystems. So if you have to integrate with   every one of them, you can't have this knowledge \nin the Kafka, it's just not scalable. So instead,  ",
    "start": "1067840",
    "end": "1076160"
  },
  {
    "text": "we've let the community build them, and most \nconnectors are built by the people that build  ",
    "start": "1076160",
    "end": "1081360"
  },
  {
    "text": "the data system. So for example, people \nthat built, let's say, Datadog or, like,  ",
    "start": "1081360",
    "end": "1092160"
  },
  {
    "text": "Snowflake, they build their own connector. \nAnd so they have some dedicated knowledge   for that. And that's great. That works well.\nSo that has worked very well. And an example  ",
    "start": "1092160",
    "end": "1103600"
  },
  {
    "text": "like Debezium you mentioned earlier as \nwell. So you have all the specialized  ",
    "start": "1103600",
    "end": "1109000"
  },
  {
    "text": "expertise that's put in a true connector, and \nthen anybody can use them. So I mean, there's  ",
    "start": "1109000",
    "end": "1116760"
  },
  {
    "text": "literally connectors for any data system that's \n[inaudible 00:18:42] pretty much. I mean, apart  ",
    "start": "1116760",
    "end": "1122860"
  },
  {
    "text": "from using something custom or something very new \nor very esoteric, it'll probably be a connector  ",
    "start": "1122860",
    "end": "1128040"
  },
  {
    "text": "already for you to reuse. Just checking earlier \non today, just on Confluent Hub, there's over 200  ",
    "start": "1128040",
    "end": "1134680"
  },
  {
    "text": "connectors, and that's just on Confluent \nHub. Probably there's a whole lot more.   If you look on GitHub or just the internet, \nyou can find probably hundreds more. So all  ",
    "start": "1134680",
    "end": "1147200"
  },
  {
    "text": "that work done by the community has made \nusing Kafka Connect to build a pipeline,  ",
    "start": "1147200",
    "end": "1153159"
  },
  {
    "text": "yeah, as you said, relatively simple.\nYeah, that's incredible. And I always  ",
    "start": "1153160",
    "end": "1159280"
  },
  {
    "text": "forget how impressive it is that the \nApache Kafka project itself, as you said,  ",
    "start": "1159280",
    "end": "1165600"
  },
  {
    "text": "only provides the MirrorMaker. That's the only \nconnector that it has issued itself. And so it  ",
    "start": "1165600",
    "end": "1171600"
  },
  {
    "text": "is absolutely crazy. We always quote this number \nof over 200 connectors, and there's hundreds more,  ",
    "start": "1171600",
    "end": "1177120"
  },
  {
    "text": "as you just said. And it's crazy to think that \nthose are all from independent companies and  ",
    "start": "1177120",
    "end": "1182960"
  },
  {
    "text": "systems and data experts that are using what \nthey know and their expertise about the system  ",
    "start": "1182960",
    "end": "1188919"
  },
  {
    "text": "to release that. And so that's pretty crazy. \nI already appreciate and love the Apache Kafka  ",
    "start": "1188920",
    "end": "1194360"
  },
  {
    "text": "community, but when you think about something like \nthis, about how folks have rallied together to   really build onto the framework, is pretty cool.\nAnd many are open source as well. ",
    "start": "1194360",
    "end": "1203880"
  },
  {
    "text": "Yeah. And then from there, you don't have to... \nIf the documentation for the connector is good,  ",
    "start": "1203880",
    "end": "1211440"
  },
  {
    "text": "then all you have to do is spin up the connector \nwith your configuration. And so you don't have to,  ",
    "start": "1211440",
    "end": "1217200"
  },
  {
    "text": "or the average person doesn't have to write \nany real connector code, which is a huge   selling point for it. So once you've made that \ndecision on how you want to run Kafka Connect,  ",
    "start": "1217200",
    "end": "1227559"
  },
  {
    "text": "you just set up your configuration and then you \ngo from there, right? \"So there's very little  ",
    "start": "1227560",
    "end": "1233320"
  },
  {
    "text": "that could go wrong,\" she said very sarcastically.\nYeah. I mean, it just sounds so straightforward,  ",
    "start": "1233320",
    "end": "1239360"
  },
  {
    "text": "doesn't it? And yeah, I mean, well, yeah, \nthere is some complexity that we sort of  ",
    "start": "1239360",
    "end": "1245520"
  },
  {
    "text": "talk about in the book. And I think for \nme, the big piece that is overlooked I   think with Connect is people think that the \ncomplexity is in the terminology. Actually,  ",
    "start": "1245520",
    "end": "1255560"
  },
  {
    "text": "once you've worked out the terminology, then it's \na lot easier from there. But you do have to think   about the configuration. And specifically, \nyou have to think about it in kind of layers,  ",
    "start": "1255560",
    "end": "1265000"
  },
  {
    "text": "I think. There's not just your one piece.\nSo if you think about, say, a source pipeline,  ",
    "start": "1265000",
    "end": "1271920"
  },
  {
    "text": "so taking data from an external system, and then \nthrough your connector and into Kafka, you have  ",
    "start": "1271920",
    "end": "1277480"
  },
  {
    "text": "your connector that runs first and fetches the \ndata from the external system, but then it passes   it to a converter. And that is going to serialize \nthe data to put it into Kafka. And so it's often  ",
    "start": "1277480",
    "end": "1288519"
  },
  {
    "text": "easy to kind of overlook the configuration for \nyour converter because there's a default, and you  ",
    "start": "1288520",
    "end": "1294000"
  },
  {
    "text": "can just run your pipeline without really thinking \nabout it. But I've had multiple instances where,  ",
    "start": "1294000",
    "end": "1299320"
  },
  {
    "text": "actually, the configuration for the converter was \nwhat was missing in terms of getting that data in  ",
    "start": "1299320",
    "end": "1305080"
  },
  {
    "text": "the right format when you get it into Kafka.\nAnd it doesn't just end at Kafka. Normally,  ",
    "start": "1305080",
    "end": "1310559"
  },
  {
    "text": "the pipelines then continue from there. So you \nmight have applications that are then consuming.   And whatever converter you use is going to \ninfluence then the downstream consumers,  ",
    "start": "1310560",
    "end": "1321560"
  },
  {
    "text": "which serialize and deserialize that they'll have \nto use. So when you then add in schemas as well,  ",
    "start": "1321560",
    "end": "1327040"
  },
  {
    "text": "it gets even more complicated. So you do have \nto think about not just those individual pieces,  ",
    "start": "1327040",
    "end": "1332640"
  },
  {
    "text": "but how do I look at this as a whole, my \nconnector, my converter, transformations,  ",
    "start": "1332640",
    "end": "1338560"
  },
  {
    "text": "if you're using them, and thinking at all levels \nabout \"How am I partitioning this data? And how am  ",
    "start": "1338560",
    "end": "1345640"
  },
  {
    "text": "I going to structure the format? What's changing?\" \nTo make sure that you're flowing it in a way that   really works. And that can be quite hard to \nget your head around. And so we tried to make  ",
    "start": "1345640",
    "end": "1357360"
  },
  {
    "text": "it a little bit easier for people to look at by \nintroducing some real life examples in the book. ",
    "start": "1357360",
    "end": "1363679"
  },
  {
    "text": "So two of the chapters that we definitely \nwant people to really look at are the ones  ",
    "start": "1363680",
    "end": "1368880"
  },
  {
    "text": "Chapter 5 and Chapter 6. So in five, we picked \nthree specific connectors. So the Confluent S3  ",
    "start": "1368880",
    "end": "1375400"
  },
  {
    "text": "sync connector, the Confluent JDBC source \nconnector, and the Debezium MySQL source  ",
    "start": "1375400",
    "end": "1385200"
  },
  {
    "text": "connector. And then in Chapter 6, we look at \nthe MirrorMaker connectors. And for each one,   we talked about the configuration options, \nbut we also show an example of, \"Okay,  ",
    "start": "1385200",
    "end": "1394720"
  },
  {
    "text": "let's take some data, how is it partitioned? \nWhat's the format? How do we flow it through   the connector into Kafka or from Kafka into the \nexternal system?\" And I think that really helps to  ",
    "start": "1394720",
    "end": "1404760"
  },
  {
    "text": "kind of ground people in I'm not just running this \ntiny connector, I'm building a whole pipeline.  ",
    "start": "1404760",
    "end": "1410520"
  },
  {
    "text": "And how do I do this in a way that works?\nYeah, and that won't, like, bite you later  ",
    "start": "1410520",
    "end": "1417320"
  },
  {
    "text": "on when you're trying to, you know, extend it \nor add something else to the pipeline. Yeah,  ",
    "start": "1417320",
    "end": "1422840"
  },
  {
    "text": "and again, I really, you know, I love the \ngrounding of these examples throughout  ",
    "start": "1422840",
    "end": "1427960"
  },
  {
    "text": "the book. And I think generally, that's great \nadvice. What you said about kind of, you know,  ",
    "start": "1427960",
    "end": "1433440"
  },
  {
    "text": "not just focusing on the tiny bit that you \nyourself are implementing in this larger pipeline,  ",
    "start": "1433440",
    "end": "1438840"
  },
  {
    "text": "you need to take a step back and think about, \nyou know, without driving yourself crazy, right?  ",
    "start": "1438840",
    "end": "1444159"
  },
  {
    "text": "Because you can't always anticipate everything \nthat's going to happen with your pipeline or   every way that it's going to be extended, or every \nother application is going to get tapped into that  ",
    "start": "1444160",
    "end": "1451480"
  },
  {
    "text": "data later on. But I think just thinking about it \nreasonably in a way that does open it up to those  ",
    "start": "1451480",
    "end": "1457919"
  },
  {
    "text": "sort of extensions in a smartly architected way. \nAnd I think that's a great advice for, you know,  ",
    "start": "1457920",
    "end": "1464200"
  },
  {
    "text": "not just Kafka Connect, but anybody who's working \nwith real-time systems or Apache Kafka, I think   that's a common thing that comes up in, you \nknow, discussions that I have with users. ",
    "start": "1464200",
    "end": "1474920"
  },
  {
    "text": "Yeah, I think it's about making \ndecisions as well and being really,   like, mindful of them. So with the converters, \nit's easy to just use the default. But if you  ",
    "start": "1474920",
    "end": "1484800"
  },
  {
    "text": "actively configure a converter in all of your \npipelines, then you're actively being mindful of  ",
    "start": "1484800",
    "end": "1491000"
  },
  {
    "text": "that decision you're making rather than just using \nthe default that was configured by somebody else.",
    "start": "1491000",
    "end": "1497200"
  },
  {
    "text": "Yeah, absolutely. And so converters, those \nare, you know, really important. Usually  ",
    "start": "1497200",
    "end": "1502240"
  },
  {
    "text": "the defaults probably could be okay, but \nagain, like you said, it's good to have a  ",
    "start": "1502240",
    "end": "1507559"
  },
  {
    "text": "more active role in that decision-making. But \nanother thing that you mentioned in addition  ",
    "start": "1507560",
    "end": "1513280"
  },
  {
    "start": "1511000",
    "end": "2588000"
  },
  {
    "text": "to the converters were transforms, and I think \nthat deserves a little more air time as far as,  ",
    "start": "1513280",
    "end": "1519400"
  },
  {
    "text": "you know, Kafka Connect components can \ngo because those can be pretty powerful. ",
    "start": "1519400",
    "end": "1525160"
  },
  {
    "text": "Yes. So this is a part of Connect that's not very \nwell known is that you can do transformations  ",
    "start": "1525160",
    "end": "1530320"
  },
  {
    "text": "that records flow through your pipeline. So you \ncan basically just connect to an ETL pipeline,  ",
    "start": "1530320",
    "end": "1537759"
  },
  {
    "text": "so extract, transform on the fly, and then \nload into Connect onto your target system. ",
    "start": "1537760",
    "end": "1544440"
  },
  {
    "text": "So actually, we said earlier on that Kafka \ndoesn't provide any plugins but provides a  ",
    "start": "1544440",
    "end": "1549559"
  },
  {
    "text": "bunch of transformations. That's the only type \nit provides. There's also a bunch of converters,  ",
    "start": "1549560",
    "end": "1554800"
  },
  {
    "text": "but yeah, there's a bunch of transformations. \nSo you can use them to do all sorts of things.   We can direct which topics the record will \ngo. We can sanitize or change some fields on  ",
    "start": "1554800",
    "end": "1564560"
  },
  {
    "text": "the fly. You can, as I said, modify the fields. \nSo you can do some formatting, add some fields,  ",
    "start": "1564560",
    "end": "1570800"
  },
  {
    "text": "remove some fields, inject some more \ndata into records as they flow through. ",
    "start": "1570800",
    "end": "1577440"
  },
  {
    "text": "And it's really flexible. So transformations can \nbe chained. So you can have transformations as a  ",
    "start": "1577440",
    "end": "1582919"
  },
  {
    "text": "single thing and basically reuse them \nand compose your pipeline with them.  ",
    "start": "1583680",
    "end": "1588240"
  },
  {
    "text": "So it's very usable. It's very useful in many \nuse cases. And you can also pair them with  ",
    "start": "1589680",
    "end": "1595360"
  },
  {
    "text": "Predicate to have them run conditionally \ndepending on the record they receive. ",
    "start": "1595360",
    "end": "1600440"
  },
  {
    "text": "So using that is really useful, but there are \nsome limitations. Obviously, you don't want to  ",
    "start": "1600440",
    "end": "1606480"
  },
  {
    "text": "have a chain of 50 transformations that adds loads \nof latency in your position. Transformation has  ",
    "start": "1606480",
    "end": "1612760"
  },
  {
    "text": "to be stateless. It's one record at a time. So \nif you want to do a lot of processing with the   remote calls for every single record, obviously \nthat doesn't work very well with Connect. But  ",
    "start": "1612760",
    "end": "1624040"
  },
  {
    "text": "apart from that, if you want to do something \nfast, just change the field or add something   to do a bit of formatting that you cannot do \nin your converter. That's very useful. So it's  ",
    "start": "1624040",
    "end": "1632840"
  },
  {
    "text": "useful to know about them. Also, it's very easy \nto implement. Also, it's only a single method.   Just take the record and spit the record back.\nBasically, if you want to do something more  ",
    "start": "1632840",
    "end": "1642760"
  },
  {
    "text": "involved, do some more changes, or do other \nremote calls, you're probably more looking  ",
    "start": "1642760",
    "end": "1648240"
  },
  {
    "text": "forward to building an ELT pipeline where you \nwill basically do the processing later and  ",
    "start": "1648240",
    "end": "1655960"
  },
  {
    "text": "use something better suited, for example, Kafka \nStream or Flink, where you can do something more  ",
    "start": "1655960",
    "end": "1662039"
  },
  {
    "text": "involved processing and you can do aggregation \nand all the computation of multiple records.  ",
    "start": "1662040",
    "end": "1668040"
  },
  {
    "text": "Transformations are really not designed for \nthat. So with this, knowing the limitations,  ",
    "start": "1668040",
    "end": "1674600"
  },
  {
    "text": "then you're free to build transformations. \nAnd as I said, it's really composable,   so you can have a suite of transformations you \nbuild and reuse them as needed in your pipelines. ",
    "start": "1674600",
    "end": "1685800"
  },
  {
    "text": "No, they're absolutely wonderful, speaking from \nexperience. And I think, yeah, that's something   that people forget. You think about Kafka \nConnect, you think more or less a dumb pipeline,  ",
    "start": "1686440",
    "end": "1697800"
  },
  {
    "text": "right? You're just moving from A to B. Great. \nBut you really unlock so many additional use  ",
    "start": "1697800",
    "end": "1703080"
  },
  {
    "text": "cases here when you realize you can do the single \nmessage transform and take advantage of those. ",
    "start": "1703080",
    "end": "1708120"
  },
  {
    "text": "But I do want to call out something else because \nI know you said some remote calls and whatnot,   but I've also seen issues, and you don't want \nto get too wild in moving that process into  ",
    "start": "1708920",
    "end": "1718120"
  },
  {
    "text": "Kafka Stream and doing some external calls. And \nI've seen people get a bit...about that as well. ",
    "start": "1718120",
    "end": "1724778"
  },
  {
    "text": "Yeah. So Kafka Stream is not well \nsuited for remote calls either.  Yeah. So big asterisk there.\nYeah, big asterisk. Yeah, I'm not saying you  ",
    "start": "1724778",
    "end": "1732840"
  },
  {
    "text": "should use Kafka Stream to remote call, basically.\nYeah, don't do it. But yeah, so I think while it's  ",
    "start": "1732840",
    "end": "1740159"
  },
  {
    "text": "all fun and games to set up these connectors, \nrealize the power that you have with transforms  ",
    "start": "1740160",
    "end": "1746280"
  },
  {
    "text": "and really thinking about your data pipelines, \nI think it's an entirely different beast when  ",
    "start": "1746280",
    "end": "1752200"
  },
  {
    "text": "it comes to deploying and maintaining, \nand monitoring that pipeline that you've   just implemented. And it's really my least \nfavorite part. But thankfully, you have an  ",
    "start": "1752200",
    "end": "1762399"
  },
  {
    "text": "entire section of the book dedicated to, as you \nsay, \"Running Kafka Connect in production.\" So  ",
    "start": "1762400",
    "end": "1768240"
  },
  {
    "text": "are there any general best practices that people \nshould abide by or any gotchas that we can avoid? ",
    "start": "1768240",
    "end": "1775880"
  },
  {
    "text": "Yeah, it's certainly something that people need \nto know how to do well is run Connect. I think  ",
    "start": "1775880",
    "end": "1783160"
  },
  {
    "text": "in terms of best practices, the one that comes \nto mind to me is metrics. So there are so many  ",
    "start": "1783160",
    "end": "1789000"
  },
  {
    "text": "metrics for Kafka Connect and Kafka as well, \nwhich is really great, but it can be a little  ",
    "start": "1789000",
    "end": "1794320"
  },
  {
    "text": "bit overwhelming, especially when you're first \ngetting started with running a system like this.  So think carefully about how you're going to use \nthem. And this is something we did in the book.  ",
    "start": "1794320",
    "end": "1804799"
  },
  {
    "text": "So rather than just listing all the metrics, we \nwanted to give a bit more of our experience. So  ",
    "start": "1804800",
    "end": "1811560"
  },
  {
    "text": "we've listed specifically if you're starting out, \nlike, \"Here are the ones that you should alert on.  ",
    "start": "1811560",
    "end": "1816680"
  },
  {
    "text": "These are the ones you should graph so that you \ncan kind of see trends over time. And then these   are the ones that you just want to collect so \nyou can do debugging and that sort of thing.\" ",
    "start": "1816680",
    "end": "1825000"
  },
  {
    "text": "So I think being familiar with your \nmetrics, having a starting point like that,  ",
    "start": "1825000",
    "end": "1830320"
  },
  {
    "text": "but then for your specific system, evolving your \nuse of the metrics is really important. I think   it's so easy to just forget that they're \nthere until something goes wrong. Whereas  ",
    "start": "1830320",
    "end": "1840080"
  },
  {
    "text": "if you're taking an active role...\nYeah. And then it's almost too late.  Yeah. In looking at your metrics and \nknowing what your system looks like,  ",
    "start": "1840080",
    "end": "1846080"
  },
  {
    "text": "then that's definitely the better way to go. And \nthen I think in terms of gotchas, it's for me,  ",
    "start": "1846080",
    "end": "1854000"
  },
  {
    "text": "the big one is the fact that if a connector \nfails, it doesn't get restarted automatically. ",
    "start": "1854000",
    "end": "1859720"
  },
  {
    "text": "Yeah. It didn't work.\nSo this kind of comes   back into the monitoring, right? You need to \nmonitor to know that your connector has failed,  ",
    "start": "1859720",
    "end": "1866520"
  },
  {
    "text": "and then you need to restart it yourself using \nthe REST API. So that's how you generally manage  ",
    "start": "1866520",
    "end": "1872000"
  },
  {
    "text": "all of the connectors in Kafka Connect. Or \nyou need to have some automation around it,  ",
    "start": "1872000",
    "end": "1878600"
  },
  {
    "text": "and this is where actually in the book we do \ntalk about how you can run Connect on Kubernetes,  ",
    "start": "1878600",
    "end": "1884200"
  },
  {
    "text": "which can help with some of that automation.\nSo for example, in the book, we do explicitly  ",
    "start": "1884200",
    "end": "1889840"
  },
  {
    "text": "talk about Strimzi, which is a CNCF project that \nallows you to run Apache Kafka on Kubernetes.  ",
    "start": "1889840",
    "end": "1897760"
  },
  {
    "text": "And that handily has an option to allow you \nto automatically restart the connector. So  ",
    "start": "1897760",
    "end": "1904440"
  },
  {
    "text": "that does give you some help there, but if \nyou're running Connect yourself, then yeah,   you do need to think about how you're going \nto monitor and then restart those connectors. ",
    "start": "1904440",
    "end": "1913760"
  },
  {
    "text": "Yeah. Yeah.\nI mean, a trend we see a lot as well is   SRE teams adopting the GitOps practices. So \nGitOps is basically when you treat configuration,  ",
    "start": "1913760",
    "end": "1925440"
  },
  {
    "text": "when you use a control manual system like Git to \nstore the configuration. So basically, there's  ",
    "start": "1925440",
    "end": "1932080"
  },
  {
    "text": "more auditing, and you can be sure of what's \nrunning now it's what's in the repository. And  ",
    "start": "1932080",
    "end": "1938679"
  },
  {
    "text": "as we said before, so Kafka Connect pipeline is \nonly configuration. So you can already basically   use Git for that to deploy your connectors. But if \nyou use something like Strimzi, you can also use,  ",
    "start": "1938680",
    "end": "1949400"
  },
  {
    "text": "Strimzi is also a configuration-based \ndefinition like Kubernetes. So you can  ",
    "start": "1949400",
    "end": "1954960"
  },
  {
    "text": "also use basically GitOps for everything. So \nyou have your GitOps, where you have your data   pipelines, but also the definition for the \ninfrastructure and connect workers you use,  ",
    "start": "1954960",
    "end": "1963640"
  },
  {
    "text": "what's that configuration. So that really brings \nthings together. It makes it a lot easier to  ",
    "start": "1963640",
    "end": "1970640"
  },
  {
    "text": "manage for operation teams, basically.\nYeah. I think the addition of Strimzi as  ",
    "start": "1970640",
    "end": "1977160"
  },
  {
    "text": "a technology has really made a lot of this \nprocess so much easier. And again, speaking   from experience, having all these configurations \njust thrown around willy-nilly, it's nice to keep  ",
    "start": "1977160",
    "end": "1987440"
  },
  {
    "text": "them somewhere and have the whole thing be \nautomated. And it just takes one less thing  ",
    "start": "1987440",
    "end": "1993000"
  },
  {
    "text": "off your plate of maintaining your connectors.\nYeah. Your production environment is only touched  ",
    "start": "1993000",
    "end": "1998280"
  },
  {
    "text": "by the CI/CD pipeline, and nobody touches it. \nAnd what's in the repo is what's running. Easy. ",
    "start": "1998280",
    "end": "2003560"
  },
  {
    "text": "And then going back to something that you had \nkind of mentioned, Kate, touching on like, yeah,  ",
    "start": "2005800",
    "end": "2011200"
  },
  {
    "text": "your connectors aren't automatically restarted, \nand you need to be monitoring those. But on sort  ",
    "start": "2011200",
    "end": "2017799"
  },
  {
    "text": "of a related note, I'm thinking back to when I was \na developer working at Kafka Connect, if I say,  ",
    "start": "2017800",
    "end": "2023240"
  },
  {
    "text": "wanted to restart my source connector, like I \ndeliberately wanted to restart it from scratch  ",
    "start": "2023240",
    "end": "2028640"
  },
  {
    "text": "so that it would, if it were monitoring a database \ntable, if I wanted to reprocess all of the rows,  ",
    "start": "2028640",
    "end": "2035160"
  },
  {
    "text": "I would have to stop the connector manually. I \nwould have to send a tombstone to the internal   topic containing the connector's offsets. And then \nI would have to manually restart that connector  ",
    "start": "2035160",
    "end": "2046600"
  },
  {
    "text": "with my fingers crossed and hoping that everything \nwas okay. But I understand that this workflow,  ",
    "start": "2046600",
    "end": "2053240"
  },
  {
    "text": "it's not actually like that anymore, is \nit? We've made some improvements, right?  Let's be clear about tombstone is a Kafka thing, \nright? You're not selling tombstones. So, yeah,  ",
    "start": "2053240",
    "end": "2065440"
  },
  {
    "text": "this used to be really a major pain point to \nmanage the position of your connectors. So,  ",
    "start": "2065440",
    "end": "2071760"
  },
  {
    "text": "since Kafka 3.6, there's a dedicated REST API \nfor that. There's a REST endpoint where you  ",
    "start": "2071760",
    "end": "2078000"
  },
  {
    "text": "can see where your connectors are and you can \nchange positions, you can reset, delete. So,  ",
    "start": "2078000",
    "end": "2085360"
  },
  {
    "text": "3.6 was released in October, so last year, October \n2023. So, yeah, that's a huge relief to any Kafka  ",
    "start": "2085360",
    "end": "2095000"
  },
  {
    "text": "Connect operator. Now there's an API to do that. \nYou don't need to send tombstones to specific  ",
    "start": "2095000",
    "end": "2101400"
  },
  {
    "text": "internal topics and do something manually.\nYeah. No, I was always surprised when I   was doing it. I'm like, \"This seems like a \nlittle too low level for me to be doing just  ",
    "start": "2101400",
    "end": "2110960"
  },
  {
    "text": "to manage my connector.\" So, I'm personally...\nYeah, there've been basically a few improvements.   So, when you define a connector now, you can \ndefine it and not start automatically. You  ",
    "start": "2110960",
    "end": "2120000"
  },
  {
    "text": "can define it, and it stays stopped. Now that \nI've defined you, I'm going to maybe touch your   offset and start you whenever I want. Before, you \nwould define it. It would automatically start,  ",
    "start": "2120000",
    "end": "2127720"
  },
  {
    "text": "and you would have to first stop it and change the \nposition or do something. So, this has improved  ",
    "start": "2127720",
    "end": "2134560"
  },
  {
    "text": "quite dramatically over the past few years.\nYeah. And this is what I love about Kafka  ",
    "start": "2134560",
    "end": "2139960"
  },
  {
    "text": "Connect and the broader open-source Apache \nKafka community. So much has changed in such  ",
    "start": "2139960",
    "end": "2146560"
  },
  {
    "text": "a short amount of time, and for the better. \nAnd so, I think honestly, at this point,  ",
    "start": "2146560",
    "end": "2151760"
  },
  {
    "text": "keeping up with all the improvements is a \ndifficult part. There's just so much going on. ",
    "start": "2151760",
    "end": "2157640"
  },
  {
    "text": "Yeah, definitely. I mean, even just the \nConnect offset endpoint that you were saying  ",
    "start": "2158160",
    "end": "2163960"
  },
  {
    "text": "about for Strimzi fans, that's something \nthat's now integrated into Strimzi. So,  ",
    "start": "2163960",
    "end": "2170440"
  },
  {
    "text": "it's not just people using Connect, it's all \nof the downstream applications, the connectors,  ",
    "start": "2170440",
    "end": "2176119"
  },
  {
    "text": "and everybody that are constantly having to \nupdate and use the new features, which is  ",
    "start": "2176120",
    "end": "2181680"
  },
  {
    "text": "great because we want to see all the new features. \nBut it means as somebody not only using Connect,  ",
    "start": "2181680",
    "end": "2187240"
  },
  {
    "text": "but also creating things for Connect, you \nreally should be keeping an eye on what's   coming because there's just so many improvements.\nAnd it was something we really had to keep on  ",
    "start": "2187240",
    "end": "2195400"
  },
  {
    "text": "top of for the book. So, we had to fix on a \nspecific version. So, I think in the book,   we in the end settled on 3.5. So, there's things \nlike exactly-once support for source connectors  ",
    "start": "2195400",
    "end": "2207800"
  },
  {
    "text": "that came out in KIP-618, and it was released in \nKafka 3.3. So, we included that in the book. But  ",
    "start": "2207800",
    "end": "2216360"
  },
  {
    "text": "I think the MirrorMaker source connector \nonly supported that in actual Kafka 3.5,  ",
    "start": "2216360",
    "end": "2221640"
  },
  {
    "text": "so we kind of had to go back and add that in.\nAnd then there were parts that didn't really   make it. So, there's a new mechanism that's \ncoming in Kafka 3.6 to improve the discovery  ",
    "start": "2221640",
    "end": "2233359"
  },
  {
    "text": "and loading of plugins. And we do talk about that \nin the book. But as we were writing the book,   the KIP-898 was agreed, but it hadn't been \nimplemented. So, we were kind of talking about,  ",
    "start": "2233360",
    "end": "2243640"
  },
  {
    "text": "\"This is what's been agreed that is going to \ncome,\" but it hadn't actually landed yet. So,   we did have to keep that in mind. So, in the \nbook, we do talk about some things that are  ",
    "start": "2243640",
    "end": "2252400"
  },
  {
    "text": "coming down the pipeline. So, hopefully that will \nhelp for people who are reading it after it's come  ",
    "start": "2252400",
    "end": "2258359"
  },
  {
    "text": "out. But yeah, there is just so much going \non in Connect, which is really great to see. ",
    "start": "2258360",
    "end": "2263720"
  },
  {
    "text": "Yeah. And for the exactly-once support for source \nconnectors, that one especially, thinking back to  ",
    "start": "2263720",
    "end": "2270119"
  },
  {
    "text": "selfishly, a lot of my pain points, that was \na huge one. And I was so excited to see that  ",
    "start": "2270120",
    "end": "2276280"
  },
  {
    "text": "released. And then also sort of the wave of \nadditional resources that came out after that,  ",
    "start": "2276280",
    "end": "2282000"
  },
  {
    "text": "just like if you're curious to dive more \ninto it, there's a couple of really good   conference talks on how that was implemented. \nSo, that's my shameless plug is you should check  ",
    "start": "2282000",
    "end": "2289680"
  },
  {
    "text": "them out because they're really nice.\nTry including that in your script.  Yeah. That's the challenge for the day. Are we \negging them on? Yeah. Try to do that and see how  ",
    "start": "2289680",
    "end": "2300800"
  },
  {
    "text": "it gets better. Actually, think about it a little \nbit. Try to write a script and then watch Chris  ",
    "start": "2300800",
    "end": "2308880"
  },
  {
    "text": "Edgerton's talk on KIP-618 and then decide how \ndifficult it is. It's not simple. It's crazy.  ",
    "start": "2308880",
    "end": "2316960"
  },
  {
    "text": "And so, that's why I appreciate the community.\nBut if we... So, we've got to get back on topic  ",
    "start": "2316960",
    "end": "2323280"
  },
  {
    "text": "here. So, one of the first questions I \nthink that a developer has when looking  ",
    "start": "2323280",
    "end": "2329240"
  },
  {
    "text": "at a new framework of technology is to look \nat it with skepticism, but then also to say,  ",
    "start": "2329240",
    "end": "2335280"
  },
  {
    "text": "\"Well, how can I break that/customize it? How \ncan I tailor this to my experience?\" And sure,  ",
    "start": "2335280",
    "end": "2342840"
  },
  {
    "text": "Kafka Connect is customizable in that it is \nconfigurable. That's just the default. But   we can always take it a step further, right? \nThere's so much more you can do with Connect. ",
    "start": "2342840",
    "end": "2351640"
  },
  {
    "text": "It is very customizable. So, literally, every \nstage in a pipeline is a plugin that can be  ",
    "start": "2351640",
    "end": "2357279"
  },
  {
    "text": "customized. So, as Kate mentioned, there \nare connectors, there are transformations,   there are predicates for transformations, there \nare converters. All of that is pluggable. So,  ",
    "start": "2357280",
    "end": "2365800"
  },
  {
    "text": "you can write your own. There's an API \nfor that. Most of the APIs are relatively  ",
    "start": "2365800",
    "end": "2371040"
  },
  {
    "text": "straightforward. There's only a few methods, \nso you can implement them. And that gives   you really a lot of flexibility. So, you can \nbasically pick a connector that already exists,  ",
    "start": "2371040",
    "end": "2378960"
  },
  {
    "text": "but maybe build your own transformation and reuse \none of the predicates and recompose them together. ",
    "start": "2378960",
    "end": "2386160"
  },
  {
    "text": "So, yeah, all stages in the pipeline are \npluggable and customizable. But also the   runtime itself is customizable. So, the runtime, \nas it's a Kafka component, you can plug the same  ",
    "start": "2386160",
    "end": "2397040"
  },
  {
    "text": "kind of things as a regular Kafka client. So, \nthe authorization or the configuration provider,   that's all customizable. It's the same way \nas it works in the broker and the client.  ",
    "start": "2397040",
    "end": "2406960"
  },
  {
    "text": "You can also customize REST APIs. So, you can \nwrite standard JAX-RS extensions and plug them  ",
    "start": "2406960",
    "end": "2416040"
  },
  {
    "text": "into your Connect REST APIs. For example, \nif you want to have some authentication,   that's something you can implement and connect.\nAnd there's also an override policy that you  ",
    "start": "2416040",
    "end": "2426359"
  },
  {
    "text": "can implement basically to define what connectors \ncan override. So, the runtime comes with default  ",
    "start": "2426360",
    "end": "2431920"
  },
  {
    "text": "configuration that connectors can reuse or can \nchange, and you can write an override policy to  ",
    "start": "2431920",
    "end": "2437640"
  },
  {
    "text": "decide, \"Okay, connectors can change that, but not \nthat configuration because that's a secret. It's  ",
    "start": "2437640",
    "end": "2444319"
  },
  {
    "text": "about authentication, and I don't want connectors \nto mess with that set at the runtime level.\" So,  ",
    "start": "2444320",
    "end": "2450960"
  },
  {
    "text": "yeah, as we said, it's very customizable.\nYeah. Yeah, definitely. And you cover most  ",
    "start": "2450960",
    "end": "2456960"
  },
  {
    "text": "of that, if not all of that, in another very \nconveniently written section of your book. ",
    "start": "2456960",
    "end": "2462312"
  },
  {
    "text": "We have sections for every single \ntype of plugin, and we show you the   API and how the method goes together and \nwhat's the workflow for the connectors,  ",
    "start": "2462312",
    "end": "2470440"
  },
  {
    "text": "and also all the plugins that can be connected.\nYeah. And personally, I think that was one of my  ",
    "start": "2470440",
    "end": "2477359"
  },
  {
    "text": "favorite parts of the book because I've \nin the past ventured down that custom   connector path before, many years ago. And \nlooking back, I'm really frustrated, really  ",
    "start": "2477360",
    "end": "2487080"
  },
  {
    "text": "disappointed that I didn't have your book \nto guide me through that process because,   as I was writing a connector, because I figured \nwhat could go wrong? It's only a couple of methods  ",
    "start": "2487880",
    "end": "2496000"
  },
  {
    "text": "that you have to implement. But really in \nthe middle of it, I was up to my eyeballs,   digging through the source code, trying to figure \nout when those different methods were called by  ",
    "start": "2496000",
    "end": "2505120"
  },
  {
    "text": "the framework and what exactly I had to implement \nand do in them. And so, it was very, very trying. ",
    "start": "2505120",
    "end": "2512640"
  },
  {
    "text": "Yeah. And that's what we tried to do in the book \nis we take that away from you so you don't have  ",
    "start": "2512640",
    "end": "2517760"
  },
  {
    "text": "to do that yourself. We've done that for you. So, \nyeah, when you're trying to implement a connector,  ",
    "start": "2517760",
    "end": "2524000"
  },
  {
    "text": "as you say, there aren't that many methods, but \nthe really crucial bit is how am I integrating  ",
    "start": "2524000",
    "end": "2529920"
  },
  {
    "text": "this external system with Kafka? When am I going \nto commit my records? When am I going to flush the  ",
    "start": "2529920",
    "end": "2537119"
  },
  {
    "text": "data? You have to think about all of these pieces.\nAnd like you say, in order to write a good   connector that works really well at high \nload and handles failures and everything,  ",
    "start": "2537120",
    "end": "2546080"
  },
  {
    "text": "you need to really understand where in the life \ncycle of your connector the different methods   are being called. So, in the final section of \nthe book, we talk about how to write your own  ",
    "start": "2546080",
    "end": "2555120"
  },
  {
    "text": "connector plugin. But rather than just listing \nthe methods, we explain, \"This is when they'll be  ",
    "start": "2555120",
    "end": "2560800"
  },
  {
    "text": "called,\" and kind of give some recommendations as \nmuch as we can, because obviously, it depends on  ",
    "start": "2560800",
    "end": "2565920"
  },
  {
    "text": "the use case. But what are the kind of things you \nshould consider when you're writing a connector?",
    "start": "2565920",
    "end": "2571960"
  },
  {
    "text": "Yeah. And I think just having that high level \nof guidance would have saved me so much time.  ",
    "start": "2571960",
    "end": "2577599"
  },
  {
    "text": "So, I think that's great for future readers of \nthe book. If you want to write a custom connector  ",
    "start": "2577600",
    "end": "2583800"
  },
  {
    "text": "or plugin, please read through that section. And \nso, I'm very excited for this book. I find myself  ",
    "start": "2584440",
    "end": "2591640"
  },
  {
    "start": "2588000",
    "end": "2880000"
  },
  {
    "text": "flipping through it and just wishing, like I said, \nthat I'd had access to it as a resource before.  ",
    "start": "2591640",
    "end": "2597559"
  },
  {
    "text": "Because there's just so much great information in \nhere. But it's not just the book, right? There's a   lot of other Kafka Connect resources out there. \nSo much now than even a few years ago, right? ",
    "start": "2597560",
    "end": "2609319"
  },
  {
    "text": "Yeah, that's really a good point. So, if you go \nback just three years ago, five years ago, there  ",
    "start": "2609320",
    "end": "2614680"
  },
  {
    "text": "were a lot less content online about Connect. \nConnect was really a niche topic even within   the Apache Kafka ecosystem. People would often \nnot even know about it, because we were using  ",
    "start": "2614680",
    "end": "2624000"
  },
  {
    "text": "Kafka and running Kafka API. And I'd say, well, \nyou have this thing, it's part of Apache Kafka,  ",
    "start": "2624000",
    "end": "2629200"
  },
  {
    "text": "you have this Connect, and you're already familiar \nwith the concept because it's similar to Kafka. ",
    "start": "2629200",
    "end": "2635240"
  },
  {
    "text": "So, the past few years, there has been a lot \nof content and awareness around Connect. And we  ",
    "start": "2635240",
    "end": "2641360"
  },
  {
    "text": "see use cases like mirroring with MirrorMaker \nand Change Data Capture really be very common  ",
    "start": "2641360",
    "end": "2647680"
  },
  {
    "text": "with the organization, literally any industry \nnowadays that are using those use cases and are  ",
    "start": "2647680",
    "end": "2655000"
  },
  {
    "text": "building solutions based on that. So, it's \nmuch more easier nowadays to find resources  ",
    "start": "2655000",
    "end": "2660800"
  },
  {
    "text": "online. So, I've seen plenty of good talks \nfrom the previous Kafka Summit and current,   and other conferences, plenty of articles online. \nSo, clearly, it's much easier nowadays to get  ",
    "start": "2660800",
    "end": "2672400"
  },
  {
    "text": "started with Connect than it was a few years ago.\nYeah, definitely. And it's even just noticeable,  ",
    "start": "2672400",
    "end": "2679039"
  },
  {
    "text": "you know, when I've been speaking at \nconferences. So, I spoke at Kafka Summit   this year and did a session about Connect and \nhow the rebalancing works and specifically how  ",
    "start": "2679040",
    "end": "2687519"
  },
  {
    "text": "it's kind of evolved over time. And there were so \nmany people approaching me saying that, you know,   they'd already started looking at Connect, \nand they were now wanting to go deeper and  ",
    "start": "2687520",
    "end": "2695480"
  },
  {
    "text": "really kind of appreciated the deeper topic. And \nI think that's just such a change from, you know,  ",
    "start": "2695480",
    "end": "2701640"
  },
  {
    "text": "a few years ago where I would do a kind of Connect \ntalk and people were coming up after me afterwards  ",
    "start": "2701640",
    "end": "2706720"
  },
  {
    "text": "and saying, you know, \"Oh, like, why can't I \njust run a producer and consumer?\" We've kind   of gone beyond that now where people know they \nwant to use Connect and they're getting started,  ",
    "start": "2706720",
    "end": "2715800"
  },
  {
    "text": "so they are wanting that kind of deeper knowledge.\nYeah. No, and I think that's fantastic. And also,  ",
    "start": "2715800",
    "end": "2722760"
  },
  {
    "text": "just it's reassuring. And I think those \nsorts of talks, just like I mentioned before,  ",
    "start": "2722760",
    "end": "2728200"
  },
  {
    "text": "and I'm always going to keep mentioning this, is \nthat, like, people see themselves in those talks,   right? Because if you approach it as sort of a, \n\"Here's an interesting tidbit maybe motivated by  ",
    "start": "2728200",
    "end": "2735880"
  },
  {
    "text": "a frustration from the technology,\" then they're \nexcited to use that as a new jumping off point. ",
    "start": "2735880",
    "end": "2742960"
  },
  {
    "text": "And so, I think maybe on that note, you \nknow, people wanting to go deeper in Connect,  ",
    "start": "2742960",
    "end": "2748359"
  },
  {
    "text": "what should we leave folks with to mull \nover, right? If you could sort of distill   down your experience and knowledge into \na couple takeaways, what would they be? ",
    "start": "2749320",
    "end": "2761039"
  },
  {
    "text": "Yeah, I think for me, the bigger takeaway would \nbe just not being kind of scared or intimidated  ",
    "start": "2761040",
    "end": "2767080"
  },
  {
    "text": "by the technology. I think, like I alluded to at \nthe beginning, once you get your head around the  ",
    "start": "2767080",
    "end": "2772120"
  },
  {
    "text": "terminology, then it's such a powerful tool, \nand there're so many customizations that you  ",
    "start": "2772120",
    "end": "2778040"
  },
  {
    "text": "can really do whatever you want with it. So, don't \nlisten to your first Connect talk and then think,  ",
    "start": "2778040",
    "end": "2785240"
  },
  {
    "text": "\"Oh gosh, there's just too much use of \nthe word Connect here. I can't get my   head around it.\" But actually, if you can push \npast that, yeah, it's just such an amazing tool. ",
    "start": "2785240",
    "end": "2796320"
  },
  {
    "text": "Yeah, as Kate said, it's a really powerful \ntool. So, it enables many use cases, from  ",
    "start": "2796320",
    "end": "2801480"
  },
  {
    "text": "CDC to mirroring. These are very common scenarios \nnowadays. If you already use Kafka, it's a tool  ",
    "start": "2801480",
    "end": "2810600"
  },
  {
    "text": "you already have. It's available for you. You're \nalready aware of it. So, the barrier of entry is   relatively low compared to other solutions. So, \nreally consider it. Get started. It's the easiest  ",
    "start": "2810600",
    "end": "2823400"
  },
  {
    "text": "way to learn and use Kafka Connect, really.\nAnd I think kind of going back to all the  ",
    "start": "2823400",
    "end": "2833920"
  },
  {
    "text": "use cases that it enables, I think that \nreally speaks to just the power of the open  ",
    "start": "2833920",
    "end": "2840520"
  },
  {
    "text": "source community. And I would like to encourage \npeople asking me for takeaways, but I think that  ",
    "start": "2840520",
    "end": "2846840"
  },
  {
    "text": "it's also great just to think about \nthe Apache Kafka community. And so,   if people want to dive deeper into this \ntechnology, I think the best way to do  ",
    "start": "2848560",
    "end": "2855760"
  },
  {
    "text": "that is to contribute to the community, get \ninvolved, poke around, and see what pieces are  ",
    "start": "2855760",
    "end": "2861480"
  },
  {
    "text": "of interest to you. And then...\nAnd they're very friendly.  Yeah, they are. We all are very friendly. So, \nI think, yeah, selfishly, I think the Kafka  ",
    "start": "2861480",
    "end": "2871680"
  },
  {
    "text": "community is probably the friendliest open source \ncommunity. Someone can challenge me on that,  ",
    "start": "2871680",
    "end": "2876920"
  },
  {
    "text": "but you'll be wrong. And then I'm disappointed. As \na takeaway, neither of you mentioned that people  ",
    "start": "2876920",
    "end": "2883400"
  },
  {
    "start": "2880000",
    "end": "2967000"
  },
  {
    "text": "should go out and get the book. It's got a \nbullfrog on it, which is very fun. I don't  ",
    "start": "2883400",
    "end": "2888839"
  },
  {
    "text": "know why. We'll have to talk about that more. But \nseriously, this is a fantastic resource, and yeah,  ",
    "start": "2888840",
    "end": "2896520"
  },
  {
    "text": "everyone should dive more into Connect. And so, \nI think on that note, maybe, I think that's it.  ",
    "start": "2896520",
    "end": "2903680"
  },
  {
    "text": "We've covered everything, right?\nYeah.  Thank you very much, Danica.\nThank you so much, Danica. ",
    "start": "2903680",
    "end": "2909640"
  },
  {
    "text": "Yeah. So, and thank you for both of you for being \nhere today. And thank you also to the GoToBookClub  ",
    "start": "2909640",
    "end": "2915680"
  },
  {
    "text": "for having all of us for this conversation. And \nthanks again to GoTo for organizing this. It's  ",
    "start": "2915680",
    "end": "2923599"
  },
  {
    "text": "been really great to chat, dive into Kafka Connect \na little bit more, and learning about some of   the additional takeaways and tidbits. I've had a \ngreat time here, and I hope you've all enjoyed it. ",
    "start": "2923600",
    "end": "2933720"
  },
  {
    "text": "Yeah, thanks so much.\nThank you.",
    "start": "2933720",
    "end": "2935680"
  }
]