[
  {
    "text": "but I thought I'd start today with something which is a slightly more boring topic but uh to my mind the far",
    "start": "4279",
    "end": "9519"
  },
  {
    "text": "more important one which tends to get ignored in our industry so for context there's a fa we've gone through a fair",
    "start": "9519",
    "end": "16960"
  },
  {
    "text": "amount of Cycles within our industry uh we go through feds we realize things we relearn lessons over and over and some",
    "start": "16960",
    "end": "23800"
  },
  {
    "text": "of those are brought us to a place where we went from a fairly simple ability to deal with state in a fairly simple",
    "start": "23800",
    "end": "29400"
  },
  {
    "text": "manner through to a very complex state right now so some of those things for a time",
    "start": "29400",
    "end": "34520"
  },
  {
    "text": "we kind of we like this idea of canonical we kind of thought it was it would be awesome if we could get everything together into a single format",
    "start": "34520",
    "end": "40879"
  },
  {
    "text": "so we had data warehouses with economical formats we had Enterprise service buses Etc and we like this idea",
    "start": "40879",
    "end": "46520"
  },
  {
    "text": "of one to one instead of point to point uh we realized after a little while that",
    "start": "46520",
    "end": "51920"
  },
  {
    "text": "actually this created a whole lot of delivery coupling and we didn't like it anymore so we went more towards microservices we went more towards late",
    "start": "51920",
    "end": "58719"
  },
  {
    "text": "conformance instead of early performance and we accepted the complexity that gave us but we liked the idea that we could",
    "start": "58719",
    "end": "64400"
  },
  {
    "text": "deliver independently we went from monolithic applications the quintessential Java app",
    "start": "64400",
    "end": "72200"
  },
  {
    "text": "uh a whole lot of XML stringing together a bunch of todos and copy and pastes uh giving us a little bit of scaling uh",
    "start": "72200",
    "end": "78759"
  },
  {
    "text": "backing onto essentially what was a very large monolithic single databas and this",
    "start": "78759",
    "end": "84000"
  },
  {
    "text": "had lots of bad outcomes but it had this very nice outcome that we didn't have to worry so much about how we dealt with",
    "start": "84000",
    "end": "89360"
  },
  {
    "text": "the state from operational point of view there was lots of business level complexity functional complexity in what we were doing but there was this thing",
    "start": "89360",
    "end": "96159"
  },
  {
    "text": "in the background that took away a lot of the complexity about dealing with state for",
    "start": "96159",
    "end": "101320"
  },
  {
    "text": "us uh with big data emerging we we came up with lots of really crazy architectures right uh Lambda",
    "start": "101320",
    "end": "108000"
  },
  {
    "text": "architecture was kind of the popular one which everyone spoke about not many people implemented um but we essentially",
    "start": "108000",
    "end": "113960"
  },
  {
    "text": "went to a state where we had a huge amount of different backing State Stores we uh everyone La labeled themselves as",
    "start": "113960",
    "end": "119640"
  },
  {
    "text": "big data and we suddenly had the emergence of like 4,500 different databases all tackling different",
    "start": "119640",
    "end": "125439"
  },
  {
    "text": "problems and for any given implementation practically you land up choosing to use a lot of those and so",
    "start": "125439",
    "end": "132120"
  },
  {
    "text": "instead of having this one place where we had this large problem of dealing with State we've now got lots of places where we're dealing with State and as an",
    "start": "132120",
    "end": "138920"
  },
  {
    "text": "industry we don't have much conversation around how do we keep moving our entire stack forward our entire technical space",
    "start": "138920",
    "end": "145400"
  },
  {
    "text": "forward under the weight of all the state and all we've done is created more places in which they is being",
    "start": "145400",
    "end": "151200"
  },
  {
    "text": "managed so just a little bit about me uh so I head up engineering for a part of",
    "start": "151200",
    "end": "156680"
  },
  {
    "text": "Commonwealth Bank called ANS and information and we kind of have the group data warehouse which is a fairly",
    "start": "156680",
    "end": "162879"
  },
  {
    "text": "large terata instance and we've got a couple of instances lying around and the overall context for this is that we load",
    "start": "162879",
    "end": "169640"
  },
  {
    "text": "all of the data from our source systems verious latency uh through our Hado instance into the group data warehouse",
    "start": "169640",
    "end": "175599"
  },
  {
    "text": "and there's broadly two Downstream use cases for doing this the first is the that people want to consume data and",
    "start": "175599",
    "end": "181840"
  },
  {
    "text": "this is a very very broad set of use cases um they want to report to the regulator they want to understand that",
    "start": "181840",
    "end": "187519"
  },
  {
    "text": "what's going on inside their business they generate reports they do self-service they do fairly basic",
    "start": "187519",
    "end": "192640"
  },
  {
    "text": "statistical analysis on the data uh and that's largely about Downstream integration work but it's also about",
    "start": "192640",
    "end": "198799"
  },
  {
    "text": "supporting a broad range of access patterns for users um and to a large extent wrangling users and their",
    "start": "198799",
    "end": "204519"
  },
  {
    "text": "behaviors and then off to the left it's more about integrating within product systems you kind of you go through this",
    "start": "204519",
    "end": "210400"
  },
  {
    "text": "organizational maturity uh when you start dabbling in b data and analytics where you start off going cool we're",
    "start": "210400",
    "end": "216439"
  },
  {
    "text": "going to build some models and that's awesome you show that you can predict things with models then you realize well",
    "start": "216439",
    "end": "221760"
  },
  {
    "text": "now that we predicted stuff we're going to have to figure out how we get it into production because it doesn't help predicting things but not actually",
    "start": "221760",
    "end": "227120"
  },
  {
    "text": "having that impact our business and so you you spend a lot of time figuring out how you're going to operationalize",
    "start": "227120",
    "end": "232480"
  },
  {
    "text": "Features how you're going to monitor features how you're going to monitor model so on and so forth then you kind of get into the space of well 9 SCP this",
    "start": "232480",
    "end": "240239"
  },
  {
    "text": "into our product systems and the product systems need a combination of analytics and static B business rules Etc and so",
    "start": "240239",
    "end": "246120"
  },
  {
    "text": "you kind of get into operational analytics experimentation all integrated into the channel systems and so you land",
    "start": "246120",
    "end": "252239"
  },
  {
    "text": "up with these two broad areas of use case this is a architecture diagram um",
    "start": "252239",
    "end": "259359"
  },
  {
    "text": "it's useful internally but uh the only reason for showing it here is that um a",
    "start": "259359",
    "end": "265560"
  },
  {
    "text": "large number of these use cases that I've just described different access patterns from users but also different query semantics going into the channels",
    "start": "265560",
    "end": "272919"
  },
  {
    "text": "when you hit netbank and you you want to understand your transactions going back in history um you want that to be an",
    "start": "272919",
    "end": "279720"
  },
  {
    "text": "interactive experience that requires certain access patterns different states store uh for the bulk of architecture we",
    "start": "279720",
    "end": "285800"
  },
  {
    "text": "use more batch operations different states St so on and so forth so this kind of overall architecture requires us",
    "start": "285800",
    "end": "292280"
  },
  {
    "text": "to bring a lot of these different State Management Systems along for the journey so as a summary we kind of",
    "start": "292280",
    "end": "299960"
  },
  {
    "text": "that's the high level context of what we do what we land up with today is well over 4,000 batch jobs uh about 6 pyes of",
    "start": "299960",
    "end": "308240"
  },
  {
    "text": "states and growing this is the state stores that we run today so hbas Cassandra hdfs",
    "start": "308240",
    "end": "316320"
  },
  {
    "text": "Cassandra and hbas and hdfs are the primary ones and then increasingly influx elastic search and in the",
    "start": "316320",
    "end": "321919"
  },
  {
    "text": "background etcd and Zoe keeper um they come along the journey mostly because uh",
    "start": "321919",
    "end": "328000"
  },
  {
    "text": "for cluster management or for Network management and increasingly open stack Swift as an object store so that's what",
    "start": "328000",
    "end": "335600"
  },
  {
    "text": "seems like a fairly simple set of use cases right you've got users accessing data and you're integrating into Channel systems and those are the state stores",
    "start": "335600",
    "end": "341919"
  },
  {
    "text": "that come along the journey it's not one big monolithic Oracle but it's a whole lot of different ones oh and we have Oracle of course",
    "start": "341919",
    "end": "349280"
  },
  {
    "text": "can't get rid of the relational databases uh we run hundreds of services",
    "start": "349280",
    "end": "355600"
  },
  {
    "text": "so you it doesn't help to get all the data in one place and present it via interface you've also got to put up",
    "start": "355600",
    "end": "360680"
  },
  {
    "text": "dashboards you've got to make the data accessible through API so on and so forth and so increasingly there's a",
    "start": "360680",
    "end": "366039"
  },
  {
    "text": "rather large number of services available and we run huge amounts of different processing Frameworks mr1 MR2",
    "start": "366039",
    "end": "372680"
  },
  {
    "text": "increasingly spark uh and some I off to the side uh that's a story for another",
    "start": "372680",
    "end": "378840"
  },
  {
    "text": "day and obviously you've got environments and these are all important",
    "start": "378840",
    "end": "384360"
  },
  {
    "text": "hopefully they don't all live for all that much time but the bottom line is that you land it with a fair amount of complexity",
    "start": "384360",
    "end": "390199"
  },
  {
    "text": "right so with all of that all those things are necessary or we think they're necessary whether they are or aren't is",
    "start": "390199",
    "end": "396120"
  },
  {
    "text": "kind of you can only tell with hindsight the bottom line is that you still have to be able to move forward you can't",
    "start": "396120",
    "end": "402319"
  },
  {
    "text": "stop where you are comfortable with what you are you have to be able to upgrade and it's it's not purely from a purus",
    "start": "402319",
    "end": "409240"
  },
  {
    "text": "point of view you have to be able to upgrade because of lots of practical reasons as an app developer I want a ni",
    "start": "409240",
    "end": "414759"
  },
  {
    "text": "stable contract with my infrastructure but the moment that I want some new feature in the infrastructure can't grade I'm fundamentally hampered by it",
    "start": "414759",
    "end": "421800"
  },
  {
    "text": "and that operating system Docker any any particular portion of the provider um",
    "start": "421800",
    "end": "427639"
  },
  {
    "text": "contract that I have with my infrastructure provider there's also the requirements around an everchanging",
    "start": "427639",
    "end": "433199"
  },
  {
    "text": "landscape in terms of regulatory environment especially within a bank um but an increasing understanding of",
    "start": "433199",
    "end": "439039"
  },
  {
    "text": "what's going right and what's going wrong so we understand operational failure better in the face of time and",
    "start": "439039",
    "end": "444840"
  },
  {
    "text": "there's a continuous threat environment um people do practically go after your environment and you have to continuously",
    "start": "444840",
    "end": "450599"
  },
  {
    "text": "upgrade otherwise they find new and better ways so as new threats are identified as those databases are",
    "start": "450599",
    "end": "455759"
  },
  {
    "text": "updated you have to move things forward so you've got all this complexity you have this requirement to move forward",
    "start": "455759",
    "end": "461840"
  },
  {
    "text": "how do you deal with those two things you have to keep bushing that ball up the hill but in general it's not a conversation we have",
    "start": "461840",
    "end": "468680"
  },
  {
    "text": "often so before I start talking about some of the technical stuff I'm going to quickly mention something about culture",
    "start": "468680",
    "end": "474840"
  },
  {
    "text": "um I'm not going to dive deeply into it because it's kind of something you could talk about for many many days and we'll leave that to the NBAs but if you don't",
    "start": "474840",
    "end": "482000"
  },
  {
    "text": "address the cultural aspects in what you're trying to do here uh it doesn't matter what technical solution you come",
    "start": "482000",
    "end": "487199"
  },
  {
    "text": "up with it fails um you can choose a particular architecture set of patterns you can write as much code as you like",
    "start": "487199",
    "end": "494680"
  },
  {
    "text": "but it becomes unsustainable if you don't have the right organizational constructs in place uh Conway's law kind",
    "start": "494680",
    "end": "500639"
  },
  {
    "text": "of talks about your architecture reflects your communication lines uh you can extend that a little bit further to",
    "start": "500639",
    "end": "507080"
  },
  {
    "text": "say your communication lines reflect your odd structure reflect the way that you're funded and so if you really want",
    "start": "507080",
    "end": "512599"
  },
  {
    "text": "to understand a precursor of what your architecture is going to look like go and have an understanding of what your your strategic planning process looks",
    "start": "512599",
    "end": "518800"
  },
  {
    "text": "like before that figure out what your funding mechanisms are and that's going to tell you more or less what your architecture might look like in the",
    "start": "518800",
    "end": "524399"
  },
  {
    "text": "future and if you haven't fundamentally addressed the need to move forward in everything that you're doing your",
    "start": "524399",
    "end": "529959"
  },
  {
    "text": "strategy process the way you've organized yourselves the people that you've hired so on and so forth you",
    "start": "529959",
    "end": "535440"
  },
  {
    "text": "won't continue to upgrade you'll just come to a place where everything is too different ult to move and you're sitting",
    "start": "535440",
    "end": "541000"
  },
  {
    "text": "there going we can't get off Java 16 or we can't get off a particular version of the kernel um regardless of what",
    "start": "541000",
    "end": "547040"
  },
  {
    "text": "architecture you choose so coming to architecture um I'm",
    "start": "547040",
    "end": "552120"
  },
  {
    "text": "going to present uh a portion of our architecture um a lot of that won't necessarily make sense so I'll start by",
    "start": "552120",
    "end": "558360"
  },
  {
    "text": "saying architect is about making choices right we don't know exactly what it is but we know they're important choices",
    "start": "558360",
    "end": "564120"
  },
  {
    "text": "and there's a set of functional requirements that we have that I can't go through uh in this talk but there's",
    "start": "564120",
    "end": "571519"
  },
  {
    "text": "also a set of architectural principles which we've applied which hopefully give you a bit more context as to as to the architecture that we've",
    "start": "571519",
    "end": "578399"
  },
  {
    "text": "chosen so the first thing from an infrastructure point of view is we wanted everything to be immutable and",
    "start": "578399",
    "end": "584240"
  },
  {
    "text": "we've taken this kind of to the end degree um in our in our environment going forward you can't if you want to",
    "start": "584240",
    "end": "590120"
  },
  {
    "text": "change a folder on an operating system it's a pull request it's not no one can into a box this is into a box we've",
    "start": "590120",
    "end": "596680"
  },
  {
    "text": "taken it as far as humanly possible boxes are completely immutable containers are immutable absolutely",
    "start": "596680",
    "end": "602040"
  },
  {
    "text": "everything is immutable and we've done this because it just simplifies absolutely everything and it allows us",
    "start": "602040",
    "end": "608240"
  },
  {
    "text": "to incrementally automate away tool away pain as long as we can reason about what the environment is and it's sitting in",
    "start": "608240",
    "end": "614600"
  },
  {
    "text": "Source control some way um cloud is you know uh it means a",
    "start": "614600",
    "end": "621800"
  },
  {
    "text": "lot of things to lots of different people the economic model is someone else's computer for us the more",
    "start": "621800",
    "end": "627240"
  },
  {
    "text": "important part of our cloud is having IPI addressable resources otherwise the immutability becomes a problem to actually Implement so we do have a cloud",
    "start": "627240",
    "end": "634680"
  },
  {
    "text": "internally but it's not someone else's computers it's our computers um we've chosen State locality",
    "start": "634680",
    "end": "641200"
  },
  {
    "text": "so what I mean by this is you take the workload to the data not the data to the workload uh a lot of people reach for an",
    "start": "641200",
    "end": "646320"
  },
  {
    "text": "architecture that allows you to scale independently storage and compute uh we specifically stayed away from that for",
    "start": "646320",
    "end": "652240"
  },
  {
    "text": "two reasons the first one is that we want absolutely all workload to be",
    "start": "652240",
    "end": "657519"
  },
  {
    "text": "non-local to servers so uh I want to be able to run any workload anywhere within my fleet and I can't do that if I've got",
    "start": "657519",
    "end": "663760"
  },
  {
    "text": "appliances and other things in there and the second one is that it becomes really really easy for us to reason about our",
    "start": "663760",
    "end": "669360"
  },
  {
    "text": "Network performance so if you take the workload to the data the likelihood of",
    "start": "669360",
    "end": "674639"
  },
  {
    "text": "you blowing out any portion of your networking infrastructure is significantly less and we don't feel",
    "start": "674639",
    "end": "679920"
  },
  {
    "text": "that we have the economic model to retain an engineering team to look after the network well enough if we went for",
    "start": "679920",
    "end": "685600"
  },
  {
    "text": "different scaling factors um we don't want any particular",
    "start": "685600",
    "end": "691399"
  },
  {
    "text": "we we don't like pets in our Fleet so if there's a process that's pinned to a server we want to get rid of it right",
    "start": "691399",
    "end": "697760"
  },
  {
    "text": "you want to be able to move anything anywhere obviously within the bounds of scheduling",
    "start": "697760",
    "end": "702920"
  },
  {
    "text": "normality uh We've chosen flexible of optimal so a lot of our workload if you come and take it any look at any",
    "start": "702920",
    "end": "709160"
  },
  {
    "text": "particular workload you go it's not it's not awesome right now uh it's not optimal for that particular workload but",
    "start": "709160",
    "end": "714920"
  },
  {
    "text": "on average it's good enough for all of our workload and we'd prefer that over having of over being over optimal",
    "start": "714920",
    "end": "721360"
  },
  {
    "text": "because in the face of time the flexibility is more valuable than being optimal um a lot of people get fooled",
    "start": "721360",
    "end": "729360"
  },
  {
    "text": "into thinking that because they're in public cloud or public clouds exist today that they kind of have infinite resource and the way that they can deal",
    "start": "729360",
    "end": "736720"
  },
  {
    "text": "with problems is just to latch into this infinite resource but practically you don't have infinite resources",
    "start": "736720",
    "end": "743000"
  },
  {
    "text": "practically whether you're in your own data center or in someone else's data center you're in a closed system uh the",
    "start": "743000",
    "end": "748880"
  },
  {
    "text": "long term effects of entropy you have to stare into you have to deal with you can't just keep shuffling things around shuffling does help but a lot of the",
    "start": "748880",
    "end": "755600"
  },
  {
    "text": "underlying pathologies that you develop over time you have to actually tackle you can't just treat it as an open",
    "start": "755600",
    "end": "760680"
  },
  {
    "text": "system because practically it's not so in our particular case we have to",
    "start": "760680",
    "end": "765839"
  },
  {
    "text": "deal with State Management um we can't just build stateless things and rely on a state Management Service that someone",
    "start": "765839",
    "end": "772079"
  },
  {
    "text": "else has built we have to stare into the State Management problem for a lot of you that's not necessarily true for a",
    "start": "772079",
    "end": "777519"
  },
  {
    "text": "lot of you you get to leverage other services but for those of you who do actually do actually have to look after Services which manage States uh you'll",
    "start": "777519",
    "end": "784760"
  },
  {
    "text": "you'll uh find this useful um the final thing is even if you",
    "start": "784760",
    "end": "790519"
  },
  {
    "text": "are leveraging someone else's State Management Services all abstractions leak it's just a guaranteed thing uh",
    "start": "790519",
    "end": "796880"
  },
  {
    "text": "apis are useful they allow upgrade independently to an extent uh abstractions are always going to leak",
    "start": "796880",
    "end": "803160"
  },
  {
    "text": "underlying performance semantics of the of the thing on the other side of the API uh upgrades on the other side of the",
    "start": "803160",
    "end": "808639"
  },
  {
    "text": "API Etc they're always at some point going to break and so it doesn't matter what you do you have to Tool away that",
    "start": "808639",
    "end": "814120"
  },
  {
    "text": "pain you can't just assume that something like an API is going to uh keep you safe in the face of",
    "start": "814120",
    "end": "820360"
  },
  {
    "text": "time so with that this is the simplest way to represent our chosen architecture",
    "start": "820360",
    "end": "827360"
  },
  {
    "text": "um and in the context of this architecture I'll talk about how we deal with stateful upgrades so at the bottom",
    "start": "827360",
    "end": "833199"
  },
  {
    "text": "layer we have open stack and we use specifically open stack ironic um it's",
    "start": "833199",
    "end": "838480"
  },
  {
    "text": "important to have Harper visor which is an hypervisor um on top of that we run",
    "start": "838480",
    "end": "845000"
  },
  {
    "text": "essentially an abun operating system which is just that host uh Docker so the",
    "start": "845000",
    "end": "850240"
  },
  {
    "text": "way we build the operating system is essentially a Docker file um which gives you a a declarative version of the",
    "start": "850240",
    "end": "855680"
  },
  {
    "text": "operating system instance and then we use ironic to load that onto the operating system ipmi pixie boot Etc in",
    "start": "855680",
    "end": "861639"
  },
  {
    "text": "the background uh we use Calico as the network provider for Docker for Docker Li network uh that's mostly because we",
    "start": "861639",
    "end": "869519"
  },
  {
    "text": "feel again from a networking operations point point of view Calico is much simpler it's what we know it's just",
    "start": "869519",
    "end": "875399"
  },
  {
    "text": "layer three and bgp and so it's much easier to fit into our existing Network operation structures than any of the",
    "start": "875399",
    "end": "881320"
  },
  {
    "text": "overlay networking um for resource scheduling we rely on misos for a fair portion of the",
    "start": "881320",
    "end": "887360"
  },
  {
    "text": "workload and then for the Hadoop Centric stuff withon and then on top of that uh",
    "start": "887360",
    "end": "892800"
  },
  {
    "text": "marthan Kronos at various scheduling Frameworks on top of misos and Spark map",
    "start": "892800",
    "end": "898680"
  },
  {
    "text": "producers Etc on top of yarn and then the apps deploy into there now off to the left of the diagram you'll see a",
    "start": "898680",
    "end": "904920"
  },
  {
    "text": "whole lot of references to continuous delivery integration these different people who are not interacting with our",
    "start": "904920",
    "end": "910440"
  },
  {
    "text": "infrastructure but they're interacting via a repository into a continuous set of continuous delivery tooling and",
    "start": "910440",
    "end": "916000"
  },
  {
    "text": "across into one of those layers I'm not going to dive into it too deeply at the moment except to say that the way we we",
    "start": "916000",
    "end": "922040"
  },
  {
    "text": "achieve immutability is absolutely everything is a pull request uh firmware is code infrastructures code apps are",
    "start": "922040",
    "end": "928680"
  },
  {
    "text": "code deployment is code and all of that is driven through the continuous delivery processes at those",
    "start": "928680",
    "end": "934880"
  },
  {
    "text": "layers so um that architecture hosts our stateful applications and our stateless",
    "start": "934880",
    "end": "940959"
  },
  {
    "text": "applications so what are the strategies one can generically use to deal with stateful uh",
    "start": "940959",
    "end": "947519"
  },
  {
    "text": "services so the first one like I've mentioned is Outsource the problem right if you're in AWS uh you've got column",
    "start": "947519",
    "end": "954480"
  },
  {
    "text": "family as a as a service that's cool it works um of course abstractions leaky so",
    "start": "954480",
    "end": "959600"
  },
  {
    "text": "whatever choice you make you're going to have to Tool away the pain and that's okay um a lot of people are kind of they",
    "start": "959600",
    "end": "966759"
  },
  {
    "text": "they hoard State one really good strategy which is not implemented as often as I was like it's just deleted",
    "start": "966759",
    "end": "972560"
  },
  {
    "text": "right when it comes time to upgrade you could rebuild it to continue with life uh be stateless as far as possible",
    "start": "972560",
    "end": "979560"
  },
  {
    "text": "so um try and push the complexity of state to the outside of your architecture and not to what people need",
    "start": "979560",
    "end": "986000"
  },
  {
    "text": "to deal with dayto day I know that sounds hard it is actually actually difficult but it's a valid",
    "start": "986000",
    "end": "991199"
  },
  {
    "text": "strategy uh and in our particular case implement some patterns improve them incrementally and Tool away the pain so",
    "start": "991199",
    "end": "997720"
  },
  {
    "text": "in all cases you're going to make choices you're going to experience a certain amount of pain you're going to have to to that away but you got to be",
    "start": "997720",
    "end": "1003120"
  },
  {
    "text": "clear on which strategy in all cases uh focus on excess capacity um if you don't have space to",
    "start": "1003120",
    "end": "1010360"
  },
  {
    "text": "move you you it becomes incrementally hard uh if you can over if you can double provision if you can have 100%",
    "start": "1010360",
    "end": "1017000"
  },
  {
    "text": "excess capacity your Life's a lot easier than if you got 20% excess capacity again that just comes down to economic",
    "start": "1017000",
    "end": "1023079"
  },
  {
    "text": "models so let's talk about some really simple patterns for upgrading um there",
    "start": "1023079",
    "end": "1028558"
  },
  {
    "text": "this is not like a Enterprise Integrations pattern there aren't 40 or 50 of them there's one or two really",
    "start": "1028559",
    "end": "1034678"
  },
  {
    "text": "really simple patterns that we typically use when deploying stateless apps and they're readily applicable Beyond just",
    "start": "1034679",
    "end": "1041160"
  },
  {
    "text": "stateless approaches so the first one is just a blue green deployment this is not news to anyone in the room uh I've got",
    "start": "1041160",
    "end": "1048160"
  },
  {
    "text": "an existing stack someone's consuming it so I've got a r of some form as a logical construct in the middle uh I",
    "start": "1048160",
    "end": "1054840"
  },
  {
    "text": "stand up a new instance of the stack I put it there I make sure it's working I convince myself that it's working through testing and then I update the r",
    "start": "1054840",
    "end": "1062039"
  },
  {
    "text": "in configuration and the user is now using the new version of the stack this is nice because it gives me the space to",
    "start": "1062039",
    "end": "1067760"
  },
  {
    "text": "do the deployment to test the deployment um and it also gives me a nice roll back strategy I can just update therea it",
    "start": "1067760",
    "end": "1074520"
  },
  {
    "text": "doesn't really deal with the underlying problem of how do I keep those two databases in sync but in principle it's a nice simple",
    "start": "1074520",
    "end": "1080480"
  },
  {
    "text": "approach you can extend this to Rolling upgrades it's pretty much the same thing but just happening incrementally so it's",
    "start": "1080480",
    "end": "1087039"
  },
  {
    "text": "not two it's now n and so I've got a bunch of old Services I've got a a load",
    "start": "1087039",
    "end": "1092600"
  },
  {
    "text": "balancer in the middle uh I can deplay the new version so upgrade new uh new",
    "start": "1092600",
    "end": "1098840"
  },
  {
    "text": "strongly version service running I can do my tests convince myself it's working add it into the load balancing pool",
    "start": "1098840",
    "end": "1105240"
  },
  {
    "text": "remove the old one and then do that incrementally add new ones remove old ones add new ones remove old ones until",
    "start": "1105240",
    "end": "1110840"
  },
  {
    "text": "I've got all the new ones there and all I'm really doing in these really simple patterns is I'm incrementally buying",
    "start": "1110840",
    "end": "1116760"
  },
  {
    "text": "down risk I can do all the testing I want to do up front uh I can do all the unit testing integration testing and you",
    "start": "1116760",
    "end": "1122520"
  },
  {
    "text": "should do all of those things but even having done all of those things still fail in the deployment process and",
    "start": "1122520",
    "end": "1128280"
  },
  {
    "text": "that's okay and we need to accept that and the way we accept that is to uh accept that risk in a small incremental",
    "start": "1128280",
    "end": "1134240"
  },
  {
    "text": "fashion and limit the blast radius so",
    "start": "1134240",
    "end": "1139360"
  },
  {
    "text": "um sort I just State the obvious at this point for us imp Place upgrades not not",
    "start": "1139360",
    "end": "1144480"
  },
  {
    "text": "something anyone should be doing these days uh I know it still happens for lots of Legacy reasons but if you're in a",
    "start": "1144480",
    "end": "1150559"
  },
  {
    "text": "place where you need to do in place upgrades it should be telling you something about your architecture uh it",
    "start": "1150559",
    "end": "1156200"
  },
  {
    "text": "means that you've created single point dependencies that it doesn't matter how good those inplace upgrades are you're",
    "start": "1156200",
    "end": "1161960"
  },
  {
    "text": "asking for trouble at some point there are going to be operational failures that you can't deal with in your architecture so broadly in place",
    "start": "1161960",
    "end": "1168280"
  },
  {
    "text": "upgrades for us not an approach so let's talk about stateful so stateful Services um there's",
    "start": "1168280",
    "end": "1177039"
  },
  {
    "text": "a huge number of considerations and it's a huge part of computer science research uh now and in the future and it's really",
    "start": "1177039",
    "end": "1184320"
  },
  {
    "text": "really complex but at the same time from an upgrade point of view we need to think about it in a really simple sense",
    "start": "1184320",
    "end": "1189360"
  },
  {
    "text": "we need to tease back all of the complexity and just go what a fun what's fundamentally happening here now any",
    "start": "1189360",
    "end": "1196000"
  },
  {
    "text": "distributed state store is going to want to distribute portions of the overall partitions or the overall data space and",
    "start": "1196000",
    "end": "1202840"
  },
  {
    "text": "distribute it across multiple running instances of some kind uh servers VMS",
    "start": "1202840",
    "end": "1208120"
  },
  {
    "text": "whatever it is uh any of your stateful services are going to create replicas or subdivide the uh the data space into",
    "start": "1208120",
    "end": "1215760"
  },
  {
    "text": "smaller blocks and place them somewhere uh and there's lots of different placement strategies and placement",
    "start": "1215760",
    "end": "1220880"
  },
  {
    "text": "strategies are there to try and help you deal with obvious operational failure cases so this picture will obviously",
    "start": "1220880",
    "end": "1227280"
  },
  {
    "text": "make you think well that's those are racks and those are servers but the it's just a logical construct for me inside",
    "start": "1227280",
    "end": "1233280"
  },
  {
    "text": "my data center I'm concerned about racks and and servers but if you're in a cloud it's availability zones and vpcs or",
    "start": "1233280",
    "end": "1240159"
  },
  {
    "text": "other things the blocks simply represent logical constructs that you can reason around the operational semantics of",
    "start": "1240159",
    "end": "1246600"
  },
  {
    "text": "those things you know broadly how often they fail and given that knowledge you can place workload and behavior in a way",
    "start": "1246600",
    "end": "1253280"
  },
  {
    "text": "that you can deal with those operational failures as they happen so in our particular case it is rx and servers",
    "start": "1253280",
    "end": "1259400"
  },
  {
    "text": "and we would typically have a placement strategy in the example of hdfs that says one locally here and two in a",
    "start": "1259400",
    "end": "1266280"
  },
  {
    "text": "remote rack that of course isn't the whole story right you've you you can place",
    "start": "1266280",
    "end": "1271520"
  },
  {
    "text": "replicas you can place sub portions of the data uh you also need to take cap into account um and you also need to in",
    "start": "1271520",
    "end": "1278200"
  },
  {
    "text": "the normal running State take into account consistency versus latency uh I'm not going to go into those things in",
    "start": "1278200",
    "end": "1283320"
  },
  {
    "text": "any level of detail but uh those are considerations that each of the implementers of a stateful store are",
    "start": "1283320",
    "end": "1288799"
  },
  {
    "text": "taking into account there's also different data models there's key value stores there's column families uh",
    "start": "1288799",
    "end": "1294760"
  },
  {
    "text": "there's relational databases so on and so forth uh you've got to take into account atomicity um and you've also got",
    "start": "1294760",
    "end": "1303159"
  },
  {
    "text": "various access patterns you optimize for read you optimize for write scan single uh request",
    "start": "1303159",
    "end": "1309120"
  },
  {
    "text": "Etc um and all of this means that you've got a huge number of different implementations right you're uh on hdfs",
    "start": "1309120",
    "end": "1316120"
  },
  {
    "text": "or Swift or hbas or Cass so on and so forth and each of them treat these different concerns in very",
    "start": "1316120",
    "end": "1322799"
  },
  {
    "text": "slightly different ways and it's important to understand these differences because if I want to upgrade",
    "start": "1322799",
    "end": "1328120"
  },
  {
    "text": "underneath one of those State Stores or I want to upgrade the state store itself I've got to understand those semantics",
    "start": "1328120",
    "end": "1333799"
  },
  {
    "text": "in order to upgrade underneath in a way that doesn't break that particular service so if I want to do a rolling",
    "start": "1333799",
    "end": "1339919"
  },
  {
    "text": "upgrade of an operating system I've got Cassandra sitting on top of it I've got to think about those things I can't just go and",
    "start": "1339919",
    "end": "1346320"
  },
  {
    "text": "upgrade so let's talk what what is the naive implementation of this so the any",
    "start": "1346320",
    "end": "1351919"
  },
  {
    "text": "of those State stores are trying to optimize around availability or some other thing and a naive implementation",
    "start": "1351919",
    "end": "1358640"
  },
  {
    "text": "is just to go well let's just upgrade one note at a time right so I've got an upgrade duration which increases",
    "start": "1358640",
    "end": "1364760"
  },
  {
    "text": "linearly with the number of nodes that I've got in any particular cluster so here's some pseudo code it's",
    "start": "1364760",
    "end": "1370480"
  },
  {
    "text": "kind of path Andes uh for every node that I've got in my cluster for each node if it's valid on some notion of",
    "start": "1370480",
    "end": "1377000"
  },
  {
    "text": "validity is it in state that I can actually go and perform an upgrade so is it busy uh with some kind of rebalancing",
    "start": "1377000",
    "end": "1384240"
  },
  {
    "text": "process or something which is operationally important or something else and I need to be able to understand those things is it available right now",
    "start": "1384240",
    "end": "1390520"
  },
  {
    "text": "to do an upgrade if it is I need to put it into some kind of maintenance mode and that's generally uh either trivial",
    "start": "1390520",
    "end": "1396960"
  },
  {
    "text": "or quite complex and it depends again on what particular state store you're dealing with I can then run my upgrade",
    "start": "1396960",
    "end": "1402640"
  },
  {
    "text": "which might mean rebooting doing an inplace upgrade something uh do my health tests and health tests are",
    "start": "1402640",
    "end": "1409760"
  },
  {
    "text": "actually significantly more complex than it seems on the face of it um there's a lot of questions around uh subjectivity",
    "start": "1409760",
    "end": "1416720"
  },
  {
    "text": "so do I test from which portion of the network do I understand what those Network failures mean in terms of the",
    "start": "1416720",
    "end": "1423799"
  },
  {
    "text": "service pardon me and eventually I can update my status and and move through",
    "start": "1423799",
    "end": "1428919"
  },
  {
    "text": "this thing and obviously these are fairly long running processes and because they're long running they're pretty fundamentally brittle um Health",
    "start": "1428919",
    "end": "1435880"
  },
  {
    "text": "tests are slow complex rely on lots of brittle things things like timeouts upgrades themselves",
    "start": "1435880",
    "end": "1441880"
  },
  {
    "text": "similar so here's an example this is actual python code that deals with uh",
    "start": "1441880",
    "end": "1447400"
  },
  {
    "text": "the CDH Cloud manager interface try and figure out whether rodde is in a healthy State um what you'll notice about this",
    "start": "1447400",
    "end": "1454120"
  },
  {
    "text": "code apart from the fact that it's really ugly is um the I'm kind of",
    "start": "1454120",
    "end": "1460360"
  },
  {
    "text": "putting it up on the screen for two reasons the first one is uh Health tests are actually quite hard and the second",
    "start": "1460360",
    "end": "1465480"
  },
  {
    "text": "one is that generally when you're dealing with these kind of services the services themselves are optimized for Consumer side and not optimized for",
    "start": "1465480",
    "end": "1473480"
  },
  {
    "text": "below them in terms of what functionality they surface to you as a user of those services so um if I want",
    "start": "1473480",
    "end": "1481000"
  },
  {
    "text": "to do an in place upgrade of a Hadoop cluster or if I want to upgrade the operating systems or the hardware or",
    "start": "1481000",
    "end": "1486240"
  },
  {
    "text": "anything else below a Hado cluster it's really quite hard to reach and find API that make that safe for me so in this",
    "start": "1486240",
    "end": "1493039"
  },
  {
    "text": "particular case you'll see I have to go from a service perspective instead of a host perspective and therefore I've got",
    "start": "1493039",
    "end": "1498120"
  },
  {
    "text": "to go to every single service ask it for all its hosts and then go to that host and ask it for all its services in order",
    "start": "1498120",
    "end": "1503520"
  },
  {
    "text": "to figure out whether I've got something healthy or not so instead of having this this turns into a really chatty nasty",
    "start": "1503520",
    "end": "1509799"
  },
  {
    "text": "set of API calls it's kind of n byn instead of what you would hope was being in and each of those calls is a remote",
    "start": "1509799",
    "end": "1516720"
  },
  {
    "text": "API call and is fundamentally brittle and has timeouts and so on and so forth and so really this process is not get",
    "start": "1516720",
    "end": "1522440"
  },
  {
    "text": "for me as a person who's trying to upgrade safely below uh this cluster it's G for us users of the cluster not",
    "start": "1522440",
    "end": "1529679"
  },
  {
    "text": "people providing services to the cluster and that's generally true as you look across uh Cassandra is not too bad age",
    "start": "1529679",
    "end": "1535559"
  },
  {
    "text": "base is pretty bad hdfs influx Etc They Don't Really provide you with much to",
    "start": "1535559",
    "end": "1541360"
  },
  {
    "text": "try and make these kind of processes safe so let's move",
    "start": "1541360",
    "end": "1547120"
  },
  {
    "text": "Beyond uh the naive implementation because that one there if I have uh 300",
    "start": "1547120",
    "end": "1552880"
  },
  {
    "text": "nodes and I'm 20 minutes a node for that process you can see how this quickly becomes an untenable",
    "start": "1552880",
    "end": "1559080"
  },
  {
    "text": "process so in order to move Beyond just the naive implementation we have to introduce some other Concepts we can't",
    "start": "1559080",
    "end": "1565480"
  },
  {
    "text": "just rely on the placement strategies and the internal constructs of those Services which are there to provide the",
    "start": "1565480",
    "end": "1571840"
  },
  {
    "text": "availability or the consistency or the read semantics that those services are there to provide we have to introduce",
    "start": "1571840",
    "end": "1577880"
  },
  {
    "text": "other constructs that allow us to reason about those services in the face of upgrades below them and so these are",
    "start": "1577880",
    "end": "1584440"
  },
  {
    "text": "called upgrade domains upgrade groups something to that effect and it's surprising how few of the state Services",
    "start": "1584440",
    "end": "1590080"
  },
  {
    "text": "I mentioned actually Implement these things and so on the left you've got your your placement strategy um and on",
    "start": "1590080",
    "end": "1596039"
  },
  {
    "text": "the right of your screen you've got this idea of upgrade groups and what the service has to guarantee is that when it",
    "start": "1596039",
    "end": "1601159"
  },
  {
    "text": "placees blocks or replicas or subsets of the data uh it's going to place it based on the operational semantics it knows",
    "start": "1601159",
    "end": "1607600"
  },
  {
    "text": "about but also that it's not going to place more than one replica or portion of that data in the same upgrade group",
    "start": "1607600",
    "end": "1614360"
  },
  {
    "text": "it's always going to spread them across multiple upgrade groups and what that that means from an upgrader point of",
    "start": "1614360",
    "end": "1619640"
  },
  {
    "text": "view then is that I can upgrade that entire group safely without causing operational failures on the service that",
    "start": "1619640",
    "end": "1625760"
  },
  {
    "text": "I'm upgrading below of course I introduce operational risk because I've taken my replication Factor down and so",
    "start": "1625760",
    "end": "1631679"
  },
  {
    "text": "that's inherently there but um I haven't damaged the service",
    "start": "1631679",
    "end": "1637080"
  },
  {
    "text": "necessarily so what that looks like is something that you can paralyze and this is like fundamentally",
    "start": "1637080",
    "end": "1645120"
  },
  {
    "text": "important I I need to be able to start an upgrade process and complete it tonight whether I've got 10 nodes or",
    "start": "1645120",
    "end": "1650600"
  },
  {
    "text": "whether I've got 400 nodes or whether I've got thousands of noes I need to know that I can start an upgrade process",
    "start": "1650600",
    "end": "1655880"
  },
  {
    "text": "complet it tonight because if I can't do that I'm always upgrading and when I'm always upgrading everyone stops me from",
    "start": "1655880",
    "end": "1661640"
  },
  {
    "text": "upgrading and the longer the time takes between my upgrade and now the less likely I am to upgrade and so over time",
    "start": "1661640",
    "end": "1667760"
  },
  {
    "text": "you fall back into this process of not upgrading so coming back to the",
    "start": "1667760",
    "end": "1674880"
  },
  {
    "text": "architecture I proposed the con the set of Integrations off to the left of the architecture now",
    "start": "1674880",
    "end": "1681360"
  },
  {
    "text": "start to make a little bit more sense we've gone for immutability and we've said the way we're going to achieve that",
    "start": "1681360",
    "end": "1686559"
  },
  {
    "text": "is everything is code and at each layer of this architecture everyone is",
    "start": "1686559",
    "end": "1691919"
  },
  {
    "text": "following that code is code infrastructure is code version codification Etc um but they can't move",
    "start": "1691919",
    "end": "1698000"
  },
  {
    "text": "forward in that form unless they talk to each other or unless the continuous delivery layers talk to each other and",
    "start": "1698000",
    "end": "1704559"
  },
  {
    "text": "so the what I'm saying is and what the architecture lends towards is that if you want to deal with stateful Services",
    "start": "1704559",
    "end": "1710760"
  },
  {
    "text": "you have to do a certain amount of vertical integration between these layers then if you want to safely",
    "start": "1710760",
    "end": "1715880"
  },
  {
    "text": "upgrade underneath a a set of stateful services you have to integrate the delivery mechanisms of those Services",
    "start": "1715880",
    "end": "1722320"
  },
  {
    "text": "the applications and the infrastructure infrastructure in some way needs to know about the operational semantics of the",
    "start": "1722320",
    "end": "1728080"
  },
  {
    "text": "workload in order to safely upgrade underneath the workload this is true more or less regardless of what provider",
    "start": "1728080",
    "end": "1735120"
  },
  {
    "text": "you on or if you're a provider yourself um and any other way to deal with that is a huge amount of excess capacity or a",
    "start": "1735120",
    "end": "1741360"
  },
  {
    "text": "huge amount of extra testing and tooling which is geared in a different way you",
    "start": "1741360",
    "end": "1746480"
  },
  {
    "text": "can't assume that someone else's upgrades aren't going to affect you so you have to test continuously instead of testing at the time of",
    "start": "1746480",
    "end": "1753279"
  },
  {
    "text": "upgrade so to kind of make this a little bit more concrete let me talk to you about the workflow that we go",
    "start": "1753279",
    "end": "1759200"
  },
  {
    "text": "after so we have lots of repositories a repository is an application or some kind of module and then we have repos",
    "start": "1759200",
    "end": "1766240"
  },
  {
    "text": "which represents environments declarative instances of an environment and this is the git workflow that we",
    "start": "1766240",
    "end": "1771840"
  },
  {
    "text": "follow for a particular environment so you've got the declarative form these are all the servers Services apps these",
    "start": "1771840",
    "end": "1778080"
  },
  {
    "text": "are the particular versions and some metadata metadata that they need you do",
    "start": "1778080",
    "end": "1783399"
  },
  {
    "text": "a branch uh off Master you do some work you issue a pull request not back onto",
    "start": "1783399",
    "end": "1788880"
  },
  {
    "text": "Master but onto a deploy branch and it's a protected deploy branch and it has to go through a pull request process and it",
    "start": "1788880",
    "end": "1795559"
  },
  {
    "text": "has to go through approvals but in the the pool request process Jenkins also goes off and derives a Bard plan so in",
    "start": "1795559",
    "end": "1802200"
  },
  {
    "text": "the background we have some tooling we call Mission planner which is uh orchestrated by Jenkins and it'll take a",
    "start": "1802200",
    "end": "1808919"
  },
  {
    "text": "look at your current declarative version of your environment your future version of your environment and it'll",
    "start": "1808919",
    "end": "1814640"
  },
  {
    "text": "automatically derive a build plan for you uh that gets attached to the pull request everyone approves it once the",
    "start": "1814640",
    "end": "1820679"
  },
  {
    "text": "pull request merges uh you do a deployment into the environment you do smoke testing of the environment and",
    "start": "1820679",
    "end": "1826039"
  },
  {
    "text": "then you merge back onto Master J merges back onto master and so the point there being that whatever's on Master is",
    "start": "1826039",
    "end": "1832919"
  },
  {
    "text": "actually what's running in the environment and if you land up in a state where the deployment fails the difference between deploy and master is",
    "start": "1832919",
    "end": "1839880"
  },
  {
    "text": "some your system is somewhere in between those States uh and when the failures happen you've got some way to go and",
    "start": "1839880",
    "end": "1845360"
  },
  {
    "text": "start debugging here's an example of what that declarative form might look like so it's",
    "start": "1845360",
    "end": "1850960"
  },
  {
    "text": "for a cluster um we for the control tiers for our clusters open stack misil",
    "start": "1850960",
    "end": "1856639"
  },
  {
    "text": "Etc we also do blue green deployments so we would typically deploy a new openstack control tier and then we",
    "start": "1856639",
    "end": "1862480"
  },
  {
    "text": "forklift uh some of the nodes from one control tier to the other so that we can move uh open stack forward without",
    "start": "1862480",
    "end": "1869039"
  },
  {
    "text": "affecting anyone else and it takes similar operational semantics into account as I've described uh we'll open",
    "start": "1869039",
    "end": "1874760"
  },
  {
    "text": "source that code under big tent in the next month or two um so this gives you an idea of what",
    "start": "1874760",
    "end": "1880440"
  },
  {
    "text": "that declarative form looks like and then the pull request process kind of looks like this it's not the best",
    "start": "1880440",
    "end": "1885880"
  },
  {
    "text": "picture of Ron um so you do a pull request you're showing a change between",
    "start": "1885880",
    "end": "1891000"
  },
  {
    "text": "one declarative form of that file and another and the CR till will gol and",
    "start": "1891000",
    "end": "1896279"
  },
  {
    "text": "derive a build plan that says based on what you've asked me to do I think I need to add remove delete do the",
    "start": "1896279",
    "end": "1901840"
  },
  {
    "text": "following things and some of those are going to involve me starting and stopping Services waiting for health checks on and so forth uh you'll see",
    "start": "1901840",
    "end": "1909240"
  },
  {
    "text": "here that the uh the view of that build plan is still pretty Raw it's it's kind of a two string um but it's fully the",
    "start": "1909240",
    "end": "1917120"
  },
  {
    "text": "build plan is fully described uh well typed Etc so recommendations uh if you're",
    "start": "1917120",
    "end": "1923760"
  },
  {
    "text": "about to go undertake this kind of initiative or if you're currently undertaking this kind of initiative if you're having to run stateful Services",
    "start": "1923760",
    "end": "1930279"
  },
  {
    "text": "um instrument as much of the deployment as you can um it's true of any kind of",
    "start": "1930279",
    "end": "1936200"
  },
  {
    "text": "system that if you don't instrument enough you can't do Performance Management but for getting uh anything",
    "start": "1936200",
    "end": "1942480"
  },
  {
    "text": "other than a naive n upgrade process in an automated fashion is just a huge amount of mentation and uh optimization",
    "start": "1942480",
    "end": "1950080"
  },
  {
    "text": "you have to do over time those 20 minute reboot times or those 4minute health checks because of all of the timeouts",
    "start": "1950080",
    "end": "1955720"
  },
  {
    "text": "which all seem logical all become a real problem at scale optimize incrementally um so once",
    "start": "1955720",
    "end": "1962519"
  },
  {
    "text": "you've got that data instrumented don't just optimize everything go after the most concrete problem you have uh um AOW",
    "start": "1962519",
    "end": "1970320"
  },
  {
    "text": "for manual intervention so this is all about automating upgrades and making that deterministic and doing it often um",
    "start": "1970320",
    "end": "1977240"
  },
  {
    "text": "but quite often often things strange things happen right overheating fans poor performing fans failure dis",
    "start": "1977240",
    "end": "1983639"
  },
  {
    "text": "failures representing in different ways Etc at some point you have to be able to step in and manually intervene and make",
    "start": "1983639",
    "end": "1989279"
  },
  {
    "text": "sure that your automation doesn't prude the manual intervention otherwise you find yourself in difficult places of needing to do a lot more than what you",
    "start": "1989279",
    "end": "1996799"
  },
  {
    "text": "expected in big chunks uh encourage people to intervene",
    "start": "1996799",
    "end": "2001960"
  },
  {
    "text": "um I know we don't want people to we we want to Tool away any manual intervention but when failures happen",
    "start": "2001960",
    "end": "2008639"
  },
  {
    "text": "don't have an environment where people are scared to step in encourage people step in burn their fingers to it",
    "start": "2008639",
    "end": "2015519"
  },
  {
    "text": "away prevent pets uh as soon as you're building either stateful or stateless",
    "start": "2015519",
    "end": "2020799"
  },
  {
    "text": "services or you're hosting them in some way people will create pets your users will create pets they'll start up",
    "start": "2020799",
    "end": "2027279"
  },
  {
    "text": "something and they'll go it's working and they'll walk away from it and over time it be it becomes special in its own",
    "start": "2027279",
    "end": "2032559"
  },
  {
    "text": "particular way and you need to figure out protocols and mechanisms with your tenants such that those things don't",
    "start": "2032559",
    "end": "2037880"
  },
  {
    "text": "become Pets the simple thing is just to kill their workload but obviously you need to have that conversation up",
    "start": "2037880",
    "end": "2044639"
  },
  {
    "text": "front and ultimately all of these things you can't automate any of the stuff away unless you've got a very clear view on",
    "start": "2045039",
    "end": "2051398"
  },
  {
    "text": "how you're going to test any of it because all of it is fundamentally brittle if you go about uh asserting",
    "start": "2051399",
    "end": "2057320"
  },
  {
    "text": "that something is in a healthy State and moving on to the next step in the process without it actually being in a healthy state so regardless of how much",
    "start": "2057320",
    "end": "2064280"
  },
  {
    "text": "time you thought you were going to invest on building automation testing and health check uh triple it and that's it for me thanks",
    "start": "2064280",
    "end": "2071599"
  },
  {
    "text": "very much guys",
    "start": "2071599",
    "end": "2075040"
  }
]