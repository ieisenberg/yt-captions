[
  {
    "text": "all right today I've got Louis pilfall with me who's the inventor of the relatively new language called gleam",
    "start": "299",
    "end": "8040"
  },
  {
    "text": "which is on the bmvm uh Louis loves uh erling and the beam it's a jack of all",
    "start": "8040",
    "end": "14700"
  },
  {
    "text": "trades software developer loves type safe languages and the productivity they bring and the safety that they bring to",
    "start": "14700",
    "end": "21359"
  },
  {
    "text": "developer workflows um and he's here to talk to us about gleam so what is Glenn Louis",
    "start": "21359",
    "end": "28980"
  },
  {
    "text": "Hey so uh gleam as you said is a new functional programming language that I've been working on for the past",
    "start": "28980",
    "end": "35760"
  },
  {
    "text": "um or five years or so and a bit more research prior to that as well and",
    "start": "35760",
    "end": "40800"
  },
  {
    "text": "um it attempts to unify you know the strengths of two different families of functional program languages so from the",
    "start": "40800",
    "end": "45960"
  },
  {
    "text": "beam World we're trying to take all the multi-core and distributor Computing and fault tolerance that we all know and",
    "start": "45960",
    "end": "51660"
  },
  {
    "text": "love and from the more typed functional program languages we try and take um both that safety that you get from a",
    "start": "51660",
    "end": "58620"
  },
  {
    "text": "from a strict static um type system but also that ability for the compiler to",
    "start": "58620",
    "end": "64080"
  },
  {
    "text": "act as a pair program partner who knows loads about the code and can tell you about any regularities or",
    "start": "64080",
    "end": "69540"
  },
  {
    "text": "inconsistencies you might have to make things like refactoring or exploring unfamiliar codes much easier",
    "start": "69540",
    "end": "75060"
  },
  {
    "text": "foreign so what would you say the most interesting high level features that",
    "start": "75060",
    "end": "81299"
  },
  {
    "text": "people would want to know about so as I just touched on WE we've got that wonderful power of the airline",
    "start": "81299",
    "end": "88560"
  },
  {
    "text": "runtime so we have concurrency and and parallel Computing based upon the actor",
    "start": "88560",
    "end": "93659"
  },
  {
    "text": "model which I think is a really nice way of developing um you know programs that aren't just",
    "start": "93659",
    "end": "99479"
  },
  {
    "text": "single threaded um but in addition to that we've got the uh the type system as I mentioned but",
    "start": "99479",
    "end": "105720"
  },
  {
    "text": "we've also got a few other things so for example we really think the developer experience of writing is really important so we consider editor tooling",
    "start": "105720",
    "end": "112439"
  },
  {
    "text": "to be a first-class concern so um recently we've released the first version of a language server which will",
    "start": "112439",
    "end": "117780"
  },
  {
    "text": "give you all the sort of IDE like features that you you might expect with you know any of the popular modern",
    "start": "117780",
    "end": "123479"
  },
  {
    "text": "languages across any editor you want whether you're a Vim person or an emacs person or a vs code person you can get",
    "start": "123479",
    "end": "129239"
  },
  {
    "text": "all the features you might want and then in addition to that as well as",
    "start": "129239",
    "end": "134400"
  },
  {
    "text": "compiling to um The Yearling virtual machine we can also compile to javascripts and this might seem a bit",
    "start": "134400",
    "end": "139860"
  },
  {
    "text": "strange at first because that means we don't get all of those nice Airline properties when we're compiling into JavaScript so why why would we want that",
    "start": "139860",
    "end": "146280"
  },
  {
    "text": "well it means that if you are a glean person or you know an Alexa person or an",
    "start": "146280",
    "end": "151620"
  },
  {
    "text": "airline person you normally can't run code in web browsers or on cdns or in",
    "start": "151620",
    "end": "159239"
  },
  {
    "text": "Mobile phones or or on desktop apps these sort of places but can you also",
    "start": "159239",
    "end": "164640"
  },
  {
    "text": "can run anywhere so now we can take gleam and reach a much wider set of",
    "start": "164640",
    "end": "170160"
  },
  {
    "text": "problems a much wider set of users which is quite useful I think yeah interesting",
    "start": "170160",
    "end": "177120"
  },
  {
    "text": "um is it worth just covering quickly some of the the tooling things that you think",
    "start": "177120",
    "end": "183120"
  },
  {
    "text": "are quite interesting and as a part of most modern uh tool chains",
    "start": "183120",
    "end": "189360"
  },
  {
    "text": "sure so we've just released our first version of of the language server so we've got quite a small feature set at",
    "start": "189360",
    "end": "194819"
  },
  {
    "text": "the moment we've we've got um you know inline errors and warnings um also we've also formatting of your",
    "start": "194819",
    "end": "200340"
  },
  {
    "text": "code so similar to mixed formats if you're an Elixir person",
    "start": "200340",
    "end": "205680"
  },
  {
    "text": "um and we've got go to definition and we can show type information on Hover so",
    "start": "205680",
    "end": "210720"
  },
  {
    "text": "all pretty standard things and we're going to fill out the the remaining ones everyone expects such as",
    "start": "210720",
    "end": "216500"
  },
  {
    "text": "multi-completion in the near future releases and then beyond that I think there's a",
    "start": "216500",
    "end": "222599"
  },
  {
    "text": "lot of really interesting scope for doing things like um type directed refactorings because",
    "start": "222599",
    "end": "227760"
  },
  {
    "text": "The Gleam compiler has so much information about your glean code that we can do things that just wouldn't be",
    "start": "227760",
    "end": "232860"
  },
  {
    "text": "possible in some other languages so I think it's going to be quite an exciting time",
    "start": "232860",
    "end": "238379"
  },
  {
    "text": "awesome and I think I noticed that it sort of had similar things like mix new for Elixir which is just a really nice",
    "start": "238379",
    "end": "244560"
  },
  {
    "text": "convenience with getting started on any new project as well um I was able to get started within",
    "start": "244560",
    "end": "250379"
  },
  {
    "text": "minutes and you know had a program running with with a test Suite which gets you a lot further a lot quicker",
    "start": "250379",
    "end": "257459"
  },
  {
    "text": "totally I I don't you know gleam is very much focused on productivity and I and if we have to spend a lot of time",
    "start": "257459",
    "end": "263759"
  },
  {
    "text": "faffing around with oh I want to make a new project okay which build tool do I use I wish to test framework do I use",
    "start": "263759",
    "end": "269040"
  },
  {
    "text": "how do I plug it all together you know that that stuff that just gets in the way and stops you from doing the thing that you actually want to do which is",
    "start": "269040",
    "end": "274979"
  },
  {
    "text": "you know solving whatever problem that you set up the beginning of the day no one looks forward to configuring their build tool so uh mix and and rust in",
    "start": "274979",
    "end": "283199"
  },
  {
    "text": "particular have been real Inspirations because they've they've come really easy to use um command line tools that just do well",
    "start": "283199",
    "end": "290820"
  },
  {
    "text": "99 percent of people want to do and so we're trying to get that same experience",
    "start": "290820",
    "end": "296040"
  },
  {
    "text": "great so what brought you to the beam and why did you choose to build a language on top of it",
    "start": "296040",
    "end": "302180"
  },
  {
    "text": "so I've been um a Bean program for a number of years I first",
    "start": "302180",
    "end": "308040"
  },
  {
    "text": "um was drawn to it um through Alexa I got into Elixir about version one and then I wrote an awful",
    "start": "308040",
    "end": "314100"
  },
  {
    "text": "lot of Elixir but before that I um like to dabble in high school and and type to functional programming languages",
    "start": "314100",
    "end": "320400"
  },
  {
    "text": "and after a few years of being tremendously happy with Alexa a little thing sort of sort of tickled me at the",
    "start": "320400",
    "end": "327060"
  },
  {
    "text": "back of my head going oh you know this one particular thing would be easier if you had you know this feature from",
    "start": "327060",
    "end": "332160"
  },
  {
    "text": "Haskell or this thing would be easy if you had this feature from a camel and then I wrote a bunch of elm and that",
    "start": "332160",
    "end": "337320"
  },
  {
    "text": "really solidified in mind that oh actually a type system can be an assistant and it's a real shame that I",
    "start": "337320",
    "end": "343380"
  },
  {
    "text": "don't have that in in Elixir and erlang but then when I'd be writing those languages I would really miss the beam",
    "start": "343380",
    "end": "349440"
  },
  {
    "text": "I'd really miss selection say oh I wish I had some actors now or like oh I wish I had a better way of dealing with these",
    "start": "349440",
    "end": "354780"
  },
  {
    "text": "errors and so wherever I was I was getting a little bit frustrated and then I sort of realized I don't",
    "start": "354780",
    "end": "360539"
  },
  {
    "text": "think these things are in Conflict you know we could have one language that takes the best of both hopefully",
    "start": "360539",
    "end": "367860"
  },
  {
    "text": "um and so I I started working on that and it's going quite well I think brilliant",
    "start": "367860",
    "end": "374759"
  },
  {
    "text": "um so what I mean you've mentioned Elm and the ml family of languages and elixir as well",
    "start": "374759",
    "end": "380520"
  },
  {
    "text": "um for the language and it's tooling what other languages most inspired what you've been doing with Colleen foreign",
    "start": "380520",
    "end": "389180"
  },
  {
    "text": "so I mentioned rust a second ago so rust isn't hasn't been as much of an inspiration for the the core of the",
    "start": "389600",
    "end": "397139"
  },
  {
    "text": "language the way that it works but it was a bit of an inspiration for the syntax and it's been a really big",
    "start": "397139",
    "end": "402900"
  },
  {
    "text": "inspiration for tooling you know the idea of everything sort of just working hopefully uh if he doesn't let me know",
    "start": "402900",
    "end": "408720"
  },
  {
    "text": "and I'll make sure it does just work afterwards um but another one which I think might surprise people is go so gleamago are",
    "start": "408720",
    "end": "416400"
  },
  {
    "text": "very different languages but there's a few things in the go philosophy which I find really um",
    "start": "416400",
    "end": "422120"
  },
  {
    "text": "uh really valuable and similar to Elm as well like Elm and go both trying to be",
    "start": "422120",
    "end": "427919"
  },
  {
    "text": "very small and very easy to learn and in this way they",
    "start": "427919",
    "end": "433560"
  },
  {
    "text": "um particularly go enable people to write kinds of programs they wouldn't be able to do before like there are lots of",
    "start": "433560",
    "end": "439560"
  },
  {
    "text": "programs that you might have to write in C or C plus plus traditionally and go can't do all of them but it can do a lot",
    "start": "439560",
    "end": "446160"
  },
  {
    "text": "of them so people who wouldn't be able to write these you know more hardcore languages could achieve better things",
    "start": "446160",
    "end": "451800"
  },
  {
    "text": "with um and I think that that's that's that's excellent you know leveling the",
    "start": "451800",
    "end": "456840"
  },
  {
    "text": "playing field a little bit if we can make things that are difficult um that were traditionally difficult",
    "start": "456840",
    "end": "462060"
  },
  {
    "text": "easier and more accessible to people that's a huge win yeah so I mean you've talked a little",
    "start": "462060",
    "end": "467759"
  },
  {
    "text": "bit about the philosophy and some of the goals of gleam but fast forward five years into the future or ten years",
    "start": "467759",
    "end": "474120"
  },
  {
    "text": "where do you see gleam then I'd really like to see lots of",
    "start": "474120",
    "end": "481560"
  },
  {
    "text": "businesses using clean quite happily to build their you know all sorts of things",
    "start": "481560",
    "end": "486599"
  },
  {
    "text": "um gleam isn't an academic language it's not a research project and I'm not trying to",
    "start": "486599",
    "end": "492240"
  },
  {
    "text": "um you know make something that only really works in Niche areas I want this to be something that people make websites with people something that",
    "start": "492240",
    "end": "497580"
  },
  {
    "text": "people make apis with you know normal normal mundane sort of business things that aren't very sexy but what we spend",
    "start": "497580",
    "end": "504780"
  },
  {
    "text": "a lot well I spend most of my time on um and if we can make that experience nicer for the people working on it and",
    "start": "504780",
    "end": "511800"
  },
  {
    "text": "you know more uh productive and financially valuable for the for the companies that'd be fantastic and then",
    "start": "511800",
    "end": "517919"
  },
  {
    "text": "hopefully we can push the beam out a little more and get more people into this this ecosystem as well",
    "start": "517919",
    "end": "523620"
  },
  {
    "text": "yeah interesting that sounds great um so a little bit about sort of how you",
    "start": "523620",
    "end": "529740"
  },
  {
    "text": "design the language um you know what sort of things did you",
    "start": "529740",
    "end": "534899"
  },
  {
    "text": "have to think about um and how did you arrive about some of the syntax choices and tooling choices",
    "start": "534899",
    "end": "543260"
  },
  {
    "text": "so Glenn doesn't try and reinvent the wheel or anything it's all very much curating uh you know what I think of",
    "start": "544200",
    "end": "551160"
  },
  {
    "text": "being the best of a set of really excellent languages so a lot of the time has been thinking about",
    "start": "551160",
    "end": "557160"
  },
  {
    "text": "you know what is the interaction between things you know if you've got one feature and it does these things and",
    "start": "557160",
    "end": "562440"
  },
  {
    "text": "there's enough feature does these things the combination is not you know X Plus y it's x times y you've got to think about",
    "start": "562440",
    "end": "567899"
  },
  {
    "text": "all the different interactions and the way that they can fall into each other so there's there's a there's a lot of careful consideration and the philosophy",
    "start": "567899",
    "end": "574320"
  },
  {
    "text": "we're sort of going for with gleam is we're trying to work out the smallest set of things that can can be the most",
    "start": "574320",
    "end": "580860"
  },
  {
    "text": "useful um because the more you add the more challenging it becomes to to learn the",
    "start": "580860",
    "end": "586320"
  },
  {
    "text": "language and we want it to be um As Nice and predictable and hopefully fun as possible",
    "start": "586320",
    "end": "593600"
  },
  {
    "text": "yeah there you go yeah I think um keeping a language really simple is is quite hard elixir's",
    "start": "594180",
    "end": "601260"
  },
  {
    "text": "done a pretty good job um it's sort of written in itself as well which is quite helpful",
    "start": "601260",
    "end": "606660"
  },
  {
    "text": "um how do you keep the Simplicity in blame over time",
    "start": "606660",
    "end": "612980"
  },
  {
    "text": "a lot of it is saying uh no to things you know people love those ideas for",
    "start": "613380",
    "end": "618420"
  },
  {
    "text": "exciting new features and they go oh that's really cool and it's really easy to go oh wow that'd be amazing if we had",
    "start": "618420",
    "end": "623760"
  },
  {
    "text": "that that'd be really fun um but quite often you sort of you know you sit down you think about it if I go",
    "start": "623760",
    "end": "630540"
  },
  {
    "text": "that would be really fun but is that because it's fun to implement and fun to tell people about or would it actually be fun to use or would it be one of",
    "start": "630540",
    "end": "637440"
  },
  {
    "text": "those things where we write a linter and say don't use that thing or only use it in these these situations or you know or",
    "start": "637440",
    "end": "643560"
  },
  {
    "text": "somebody uses it and then you look at it oh god I've actually no idea how to how to use this piece of code that uses that thing so it's um It's Tricky and and but",
    "start": "643560",
    "end": "651899"
  },
  {
    "text": "one one nice thing about this philosophy is that if we say no to a feature and",
    "start": "651899",
    "end": "657660"
  },
  {
    "text": "then it turns out we were wrong we should have said yes to it you can add things quite easily later but it's much",
    "start": "657660",
    "end": "663420"
  },
  {
    "text": "harder to take away so you know add things in small incremental amounts and if there if there's a large amount",
    "start": "663420",
    "end": "669899"
  },
  {
    "text": "of if you know if there's quite a powerful feature well what happens if we just add the first you know 20 of that",
    "start": "669899",
    "end": "675000"
  },
  {
    "text": "where does that get us and you may find that last bit never never becomes useful",
    "start": "675000",
    "end": "680160"
  },
  {
    "text": "you mentioned the thing called the weirdest weirdness budget a while back um can you talk about that idea and how",
    "start": "680160",
    "end": "689040"
  },
  {
    "text": "you're spending your awareness budget sure um like I really I think who came",
    "start": "689040",
    "end": "694380"
  },
  {
    "text": "up this term I'm afraid but I thought it was great uh it's somebody from the rust Community was talking about how",
    "start": "694380",
    "end": "700160"
  },
  {
    "text": "languages have this weirdness budget and the idea is that when a person is approaching a new piece of technology or",
    "start": "700160",
    "end": "706380"
  },
  {
    "text": "particularly a language there's only a certain amount of like oh that's strange that they will tolerate",
    "start": "706380",
    "end": "711839"
  },
  {
    "text": "before they go oh no that's too strange I'm going to go away and so you've got to think quite carefully about",
    "start": "711839",
    "end": "717720"
  },
  {
    "text": "um you know what you do that is seen as not the norm um because people will get hung up on",
    "start": "717720",
    "end": "723420"
  },
  {
    "text": "those things so uh in the early days of gleam we had a syntax that's quite similar to a camel or Haskell or one of",
    "start": "723420",
    "end": "730320"
  },
  {
    "text": "these things and it the language worked exactly the same way it was just a slightly different syntax but we had a",
    "start": "730320",
    "end": "736440"
  },
  {
    "text": "lot of people sort of going oh it looks a bit odd you know and then deciding it wasn't for them and then at some point we decided to",
    "start": "736440",
    "end": "744180"
  },
  {
    "text": "um to some degree it's like a little experiment see what it looked like if we had a more um you know mainstream C inspired uh",
    "start": "744180",
    "end": "751620"
  },
  {
    "text": "syntax with curly braces and and all this sort of thing and then suddenly it was a real there",
    "start": "751620",
    "end": "756660"
  },
  {
    "text": "was a real noticeable surge of people going oh wow this is it's much more friendly the language now it's much easier to understand and use we haven't",
    "start": "756660",
    "end": "763440"
  },
  {
    "text": "actually changed anything about how it works the way you program is exactly the same but that initial first hurdle had",
    "start": "763440",
    "end": "769139"
  },
  {
    "text": "gone you know people looked at it and thought Oh this I'm a JavaScript developer I'm a I'm a scholar developer",
    "start": "769139",
    "end": "774540"
  },
  {
    "text": "this looks like it's for me I'm going to get on board and that's great so so we removed a bunch of we've got a bunch of",
    "start": "774540",
    "end": "780120"
  },
  {
    "text": "weirdness back and then we can spend that in other places and I think where we're probably going to be spending this is in um you know the erlang based actor",
    "start": "780120",
    "end": "788160"
  },
  {
    "text": "system because most people when they're doing concurrency they're used to probably promise probably futures or",
    "start": "788160",
    "end": "794040"
  },
  {
    "text": "promises you know async awake this sort of thing and that's a really good concurrency model I personally think the",
    "start": "794040",
    "end": "800399"
  },
  {
    "text": "actor model is is better and stronger but it's definitely weirder people aren't using when you've got to learn a",
    "start": "800399",
    "end": "805500"
  },
  {
    "text": "bunch of new things so you know let's make it so that people don't bounce off for the beginning and then they can",
    "start": "805500",
    "end": "811860"
  },
  {
    "text": "um you know invest their time into working how to do actors I know one of the questions that Elm got",
    "start": "811860",
    "end": "818459"
  },
  {
    "text": "a lot was do you have type classes and I suspect some people might be wondering the same",
    "start": "818459",
    "end": "824700"
  },
  {
    "text": "yeah one of the big questions so I I'm sorry to all the Haskell people in the room and all the mass people remember we",
    "start": "824700",
    "end": "830459"
  },
  {
    "text": "we don't have type classes or traits or any any of these sort of um ad hoc",
    "start": "830459",
    "end": "835680"
  },
  {
    "text": "polymorphism features and in some ways that's a shame because they are super powerful and super",
    "start": "835680",
    "end": "842339"
  },
  {
    "text": "capable and you can do all sorts of amazing things with them but there's a real tension between",
    "start": "842339",
    "end": "847380"
  },
  {
    "text": "adding that level of expressive power to a language and making it so that it's uh",
    "start": "847380",
    "end": "853260"
  },
  {
    "text": "always easy to understand code written in their language and and easy to learn it's very easy at least when I'm using",
    "start": "853260",
    "end": "860040"
  },
  {
    "text": "type classes of tricks and trying to be a clever it's very easy to write something that I come back to later and go oh oh I wish I'd been a bit less",
    "start": "860040",
    "end": "867000"
  },
  {
    "text": "clever about this because I'm I'm now really struggling to work with this code you know if it's if it's code as clever",
    "start": "867000",
    "end": "873420"
  },
  {
    "text": "as I am and debugging is harder than writing I've now gone past how clever I am and I'm not going to be able to do it anymore",
    "start": "873420",
    "end": "879240"
  },
  {
    "text": "but that doesn't mean we're not interested in something like that um we just need to work out how",
    "start": "879240",
    "end": "884279"
  },
  {
    "text": "we could add it in such a fashion so that it doesn't provide um such a large drawback and other languages such as a",
    "start": "884279",
    "end": "891540"
  },
  {
    "text": "camel have a few proposals for like an implicit argument system which looks quite interesting uh and uh seems a",
    "start": "891540",
    "end": "899100"
  },
  {
    "text": "little bit easier to wrap your head around the liberal predictable so in future I'm interested in exploring a more constrained version of that but",
    "start": "899100",
    "end": "906120"
  },
  {
    "text": "um whether or not it will ever happen I I can't commit to fair enough so let's talk about how",
    "start": "906120",
    "end": "913199"
  },
  {
    "text": "you've approached the beam language compatibility um and you know what were the",
    "start": "913199",
    "end": "918300"
  },
  {
    "text": "considerations or or the big challenges in to building a language on the beam",
    "start": "918300",
    "end": "923699"
  },
  {
    "text": "and with all of the interoperability that needs to happen as well so I I think interop is one of the you",
    "start": "923699",
    "end": "931560"
  },
  {
    "text": "know the core pillars of gleam it's really important that we that we play nicely with",
    "start": "931560",
    "end": "937680"
  },
  {
    "text": "um erlang and Alexa and LFE and any of the other beam languages because by",
    "start": "937680",
    "end": "943560"
  },
  {
    "text": "itself I think gleam is a pretty good language but I think gleam really excels if you think of it as being one part of",
    "start": "943560",
    "end": "949500"
  },
  {
    "text": "a much wider richer ecosystem you know if we made the lean we had to",
    "start": "949500",
    "end": "954720"
  },
  {
    "text": "make everything from scratch you know it's not it's not quite so clear why you'd want to use it even if the runtime",
    "start": "954720",
    "end": "960300"
  },
  {
    "text": "was really good I've got to write all the libraries but because we can draw from everything that exists in the airline world and such",
    "start": "960300",
    "end": "967920"
  },
  {
    "text": "um we've got some of the best web servers in the world we've got Cowboy we've got um excellent Json passing we've got hdb clients we you know you",
    "start": "967920",
    "end": "975000"
  },
  {
    "text": "name it we've got a whole ecosystem things that we can use so suddenly we sort of blasted through",
    "start": "975000",
    "end": "981540"
  },
  {
    "text": "several years of Library developments we're already at a place where you know well I can definitely trust the runtime",
    "start": "981540",
    "end": "986639"
  },
  {
    "text": "because that's been used in anger I can definitely trust other libraries because they've all been you know used in Anger the language well that's a much smaller",
    "start": "986639",
    "end": "993360"
  },
  {
    "text": "thing that I've got to personally evaluate and decide whether or not there's something I want to buy into and you know I personally think the language",
    "start": "993360",
    "end": "999180"
  },
  {
    "text": "is pretty good and pretty solid now um but also the other way as well you know we don't just want to draw from the",
    "start": "999180",
    "end": "1006079"
  },
  {
    "text": "other ecosystem the other communities on the theme we also want to give back so a lot of work has been put into making it",
    "start": "1006079",
    "end": "1012139"
  },
  {
    "text": "so that when glean code is written you can use it from your erlang and elixir program easily",
    "start": "1012139",
    "end": "1018440"
  },
  {
    "text": "um and to the extent where I'm hoping that in the not not so distant future there will be glean packages in the",
    "start": "1018440",
    "end": "1025520"
  },
  {
    "text": "shared beam virtual machine package manager that people are even really really realize are written in gleam so",
    "start": "1025520",
    "end": "1031339"
  },
  {
    "text": "they just add it to their Elixir project they add it to their Airline project and they just start using it they don't have to install glean they don't have to",
    "start": "1031339",
    "end": "1037100"
  },
  {
    "text": "worry about time so they have to do anything it's just normal function course",
    "start": "1037100",
    "end": "1042100"
  },
  {
    "text": "um yes so so and as a result of that we've got a really good interop and there's absolutely zero cost to calling",
    "start": "1042140",
    "end": "1048500"
  },
  {
    "text": "to or from the other languages awesome um is it worth talking a little bit",
    "start": "1048500",
    "end": "1054380"
  },
  {
    "text": "about the the JavaScript interop story because I think that's a really interesting feature of gleam that that I",
    "start": "1054380",
    "end": "1061220"
  },
  {
    "text": "hadn't quite realized was going to be quite so powerful and I think being able",
    "start": "1061220",
    "end": "1066559"
  },
  {
    "text": "to have a foot in both worlds is is super interesting so where's where is the JavaScript",
    "start": "1066559",
    "end": "1072260"
  },
  {
    "text": "um compatibility at um and where's it going it's very much a similar story for",
    "start": "1072260",
    "end": "1078919"
  },
  {
    "text": "javascripts uh again there's a huge wealth of uh you know libraries of projects and all sorts of things that",
    "start": "1078919",
    "end": "1085340"
  },
  {
    "text": "we'd want to use in the the JavaScript world so the the interrupt story is the same it is slightly more awkward in the",
    "start": "1085340",
    "end": "1091760"
  },
  {
    "text": "fact that there's a there's a bigger gap between um gleam and JavaScript than there is between for example gleam and erling",
    "start": "1091760",
    "end": "1098960"
  },
  {
    "text": "um you know what rather than being both functional languages but one with an extra layer of types on top you know one",
    "start": "1098960",
    "end": "1104600"
  },
  {
    "text": "is a sort of mutable procedural object-oriented scripting thing and so",
    "start": "1104600",
    "end": "1110000"
  },
  {
    "text": "it doesn't map up quite so cleanly but there's still no overhead and you can still do it in trouble um if you're going to be calling gleam",
    "start": "1110000",
    "end": "1116780"
  },
  {
    "text": "from JavaScript one thing that you've got to bear in mind there's a gleam uses only immutable data structures and we",
    "start": "1116780",
    "end": "1123320"
  },
  {
    "text": "don't mutate we don't do all these things so when you uh when you appear yeah of course we want this it's a shame",
    "start": "1123320",
    "end": "1129740"
  },
  {
    "text": "that we don't have and but there isn't um there are a few libraries in JavaScript but they're all quite large and they're very much tailored for for",
    "start": "1129740",
    "end": "1137000"
  },
  {
    "text": "um for JavaScript and they weren't a good fit for killing if nothing else just because they were very large and we can be much more constrained with with",
    "start": "1137000",
    "end": "1143000"
  },
  {
    "text": "how we use them so we do ship our own you know a mutable list and these sorts of things",
    "start": "1143000",
    "end": "1148460"
  },
  {
    "text": "and so if you're going to be calling gleam from JavaScript you just need to make sure that you um convert your",
    "start": "1148460",
    "end": "1154039"
  },
  {
    "text": "JavaScript arrays into clean lists and stuff like that which is one only a single function called but there's just something to keep in mind",
    "start": "1154039",
    "end": "1160100"
  },
  {
    "text": "yeah that's interesting that you you actually ship out an entire standard library is that correct",
    "start": "1160100",
    "end": "1166940"
  },
  {
    "text": "yeah it's it but it's it's um we we ship both of them and we release the standard",
    "start": "1166940",
    "end": "1172640"
  },
  {
    "text": "library and the language at the same time but they are actually modular you could write a gleam program but never import the standard library and that",
    "start": "1172640",
    "end": "1179299"
  },
  {
    "text": "would be fine or you could bring your own standard library in that work at work as well the standard library is just a normal uh hex package if you're",
    "start": "1179299",
    "end": "1185900"
  },
  {
    "text": "familiar with the hex the beam package manager so you can pick whichever version you",
    "start": "1185900",
    "end": "1191120"
  },
  {
    "text": "want but yes um we we want the sort of batteries included uh experience so we've got all",
    "start": "1191120",
    "end": "1196940"
  },
  {
    "text": "the sort of nice data structurally stuff that you would expect from a standard Library and I haven't looked at the generated",
    "start": "1196940",
    "end": "1202760"
  },
  {
    "text": "JavaScript code uh but you did mention that it is quite readable so can you",
    "start": "1202760",
    "end": "1208700"
  },
  {
    "text": "talk a little bit about that design decision sure and and this is true on on erlang",
    "start": "1208700",
    "end": "1214940"
  },
  {
    "text": "as well so when we when we compile when we target the beam virtual machine we compile to erlang code and if we want to",
    "start": "1214940",
    "end": "1220460"
  },
  {
    "text": "Target JavaScript runtimes weak compared to JavaScript code and in both instances we wanted the the code to be",
    "start": "1220460",
    "end": "1227120"
  },
  {
    "text": "um human readable ideally it would look like a human wrote it and so um you know it's all spaced correctly it's indented",
    "start": "1227120",
    "end": "1233720"
  },
  {
    "text": "as you might expect you know if it's a really big would break onto multiple lines all that sort of stuff and we try and make that the the",
    "start": "1233720",
    "end": "1239960"
  },
  {
    "text": "generated code isn't uh super complicated and gnarly it actually you know something that could be understood",
    "start": "1239960",
    "end": "1245120"
  },
  {
    "text": "and this is good for a few reasons first from you know us the Gloom developers point of view it makes it much easier to",
    "start": "1245120",
    "end": "1250940"
  },
  {
    "text": "debug sorry it makes it much easier to test because you know we can have to test the say this gleam code turns into",
    "start": "1250940",
    "end": "1257299"
  },
  {
    "text": "this Geographic total this airline code and we you can understand the mapping between the two that's quite straightforward so we've got thousands",
    "start": "1257299",
    "end": "1263600"
  },
  {
    "text": "of tests working that way fantastic um it all it also makes a really easy debug because you know if you're all",
    "start": "1263600",
    "end": "1269360"
  },
  {
    "text": "something something strange is going on or I I would like to understand how this gleam code works better you can open up",
    "start": "1269360",
    "end": "1276080"
  },
  {
    "text": "the the build directory and just read what it can pass to and if you're familiar with JavaScript or if you're feeling familiar with erlang that will",
    "start": "1276080",
    "end": "1282559"
  },
  {
    "text": "make sense to you the last thing which is sort of a almost like a hidden feature of Glenn is that you may write a",
    "start": "1282559",
    "end": "1288980"
  },
  {
    "text": "bunch of glean for a few months and then decide this language is rubbish I don't like it I don't I don't want to do this",
    "start": "1288980",
    "end": "1294260"
  },
  {
    "text": "anymore and then traditionally you would be stuck with you know this this project in this language that you don't want to use anymore that's a real shame but if",
    "start": "1294260",
    "end": "1300980"
  },
  {
    "text": "you're using clean you could just compile the code into JavaScript or compiling to erlang whichever one you",
    "start": "1300980",
    "end": "1306320"
  },
  {
    "text": "prefer and then you can just maintain that code going forwards and you can edit that and you can just forget the",
    "start": "1306320",
    "end": "1311840"
  },
  {
    "text": "glim as everything that sounds like a pretty good story",
    "start": "1311840",
    "end": "1317120"
  },
  {
    "text": "um so what were the biggest challenges in building a language on top of the beam",
    "start": "1317120",
    "end": "1323320"
  },
  {
    "text": "particularly a typesafe one so there's a few things one of them was",
    "start": "1323320",
    "end": "1329720"
  },
  {
    "text": "probably the type system development tends to be very academic fields and I",
    "start": "1329720",
    "end": "1335240"
  },
  {
    "text": "don't have an academic background or you know I don't have any formal Computer Science Education I'm I was an",
    "start": "1335240",
    "end": "1340900"
  },
  {
    "text": "enthusiastic or you know buttered the head against the wall a lot until until it broke but I just couldn't find much",
    "start": "1340900",
    "end": "1347120"
  },
  {
    "text": "good information on how you get started with this which is a real shame because once you once you've find out what the",
    "start": "1347120",
    "end": "1353240"
  },
  {
    "text": "basics are it's not actually that challenging or it is quite challenging but like it's not unachievable you know",
    "start": "1353240",
    "end": "1358700"
  },
  {
    "text": "if you put a bit of work into it you could you can build a cute little language as a hobby project and it's really fun I'd love to get more people",
    "start": "1358700",
    "end": "1365000"
  },
  {
    "text": "involved in you know both working on glean you know if you want to work on if you want to work in compiler type",
    "start": "1365000",
    "end": "1370039"
  },
  {
    "text": "systems come on over and hack on clean with us but also just make your own things it's a really rewarding",
    "start": "1370039",
    "end": "1375500"
  },
  {
    "text": "um field to be involved in so it's a real shame that there is more of that the other thing I think is that a lot of",
    "start": "1375500",
    "end": "1381740"
  },
  {
    "text": "people have said for a long time that oh you can't type erlang because you know you can't type message passing or you",
    "start": "1381740",
    "end": "1387860"
  },
  {
    "text": "can't type um you know hot upgrades so you can't type supervise and all sort of stuff and",
    "start": "1387860",
    "end": "1392960"
  },
  {
    "text": "I think I took that as as a given for a long time and the strategy was okay well if I can't do you know those special",
    "start": "1392960",
    "end": "1398900"
  },
  {
    "text": "erlang bits I know that I can do the core of a language and that's probably like 95 of our um erlang and elixir",
    "start": "1398900",
    "end": "1405260"
  },
  {
    "text": "programs let's get let's get the nice properties for that and then we just say well here be dragons when you go to your",
    "start": "1405260",
    "end": "1410659"
  },
  {
    "text": "your active stuff and that would really well but then in doing that I realized no I don't think",
    "start": "1410659",
    "end": "1415700"
  },
  {
    "text": "this is true I think we can also do um typed message passing and all these sort of things to the point where we now have",
    "start": "1415700",
    "end": "1421760"
  },
  {
    "text": "a gleam OTP Library which has a bunch of uh typed abstractions",
    "start": "1421760",
    "end": "1427640"
  },
  {
    "text": "um which they don't wrap uh erlang's OTP but they have a bunch of Primitives that",
    "start": "1427640",
    "end": "1433700"
  },
  {
    "text": "are actually powerful enough to in a type-safe way rebuild OTP so we've got we've implemented the equivalent of gen",
    "start": "1433700",
    "end": "1439520"
  },
  {
    "text": "server we've implemented the equivalent of supervisor and and we can do it in entirely type safe way I think that",
    "start": "1439520",
    "end": "1445100"
  },
  {
    "text": "really shows that this is a this is a solvable problem we've got something um potentially really useful here and",
    "start": "1445100",
    "end": "1451400"
  },
  {
    "text": "it's still early days because you know fairly new experimental library but people are using it for for real things",
    "start": "1451400",
    "end": "1456919"
  },
  {
    "text": "and I think that's fantastic so let's talk about uh the future of",
    "start": "1456919",
    "end": "1462500"
  },
  {
    "text": "Glenn you just released 0.21 uh what are the latest sort of headline features in",
    "start": "1462500",
    "end": "1467960"
  },
  {
    "text": "that and talks about the language server protocol um you know what what's that doing and",
    "start": "1467960",
    "end": "1473059"
  },
  {
    "text": "what else is in there so that so um the latest released is mostly about",
    "start": "1473059",
    "end": "1479360"
  },
  {
    "text": "the language of a protocol as you say so that is the thing where um regardless of what editor you're using you can connect up to the glean",
    "start": "1479360",
    "end": "1487159"
  },
  {
    "text": "language server which is shipped as part of the compiler and your editor will just know how to run it if you've got an",
    "start": "1487159",
    "end": "1492679"
  },
  {
    "text": "appropriate plugin and then it will add all the special IDE like features to to your editor and for this first release",
    "start": "1492679",
    "end": "1499840"
  },
  {
    "text": "that is it will compile your project for you and you get errors and warnings in line so you can jump to them and you",
    "start": "1499840",
    "end": "1506000"
  },
  {
    "text": "know read the advice it gives you and work out how to resolve the problems um it will show you type information of",
    "start": "1506000",
    "end": "1511820"
  },
  {
    "text": "us you can hover over any expression and it will show you what the result and type is um we can automatically format your code",
    "start": "1511820",
    "end": "1519080"
  },
  {
    "text": "I like to do it when I hit save but whenever you fancy really so that's kind of similar to mix format or any of these",
    "start": "1519080",
    "end": "1525500"
  },
  {
    "text": "uh other things uh and lastly we've got go to definition so you can like control click or command click on on a function",
    "start": "1525500",
    "end": "1532880"
  },
  {
    "text": "or a variable or something like that and it will jump to where it comes from so it's all the usual things you'll sort of see and in going forward in future",
    "start": "1532880",
    "end": "1539779"
  },
  {
    "text": "releases we're going to flesh out with all of the sort of usual things you would expect and I think the big one is",
    "start": "1539779",
    "end": "1545000"
  },
  {
    "text": "probably Auto completion sort of intellisense Auto completion so we're going to start adding that as well for modules and functions and variables and",
    "start": "1545000",
    "end": "1551240"
  },
  {
    "text": "all sorts of all sorts of stuff and then once we've covered all the things you would expect to see in in most Ides I've",
    "start": "1551240",
    "end": "1558320"
  },
  {
    "text": "really um I think we're going to explore a lot a type directed refactorings because the",
    "start": "1558320",
    "end": "1563720"
  },
  {
    "text": "gleaming compiler has a lot of information about your code more that more than a lot of other compilers",
    "start": "1563720",
    "end": "1568820"
  },
  {
    "text": "especially ones that don't have a type system and because of that I think that we can um suggest how to how to do a lot more",
    "start": "1568820",
    "end": "1575240"
  },
  {
    "text": "things um and and you know generate a lot more of your code that might be a bit tedious",
    "start": "1575240",
    "end": "1580400"
  },
  {
    "text": "to do otherwise it sounds amazing so what does the roadmap look for the language itself and",
    "start": "1580400",
    "end": "1587900"
  },
  {
    "text": "you know what other tooling might you look at in the future so as you know the fact that we're",
    "start": "1587900",
    "end": "1594679"
  },
  {
    "text": "currently looking at tooling as a big part of releases kind of suggests that the language is",
    "start": "1594679",
    "end": "1600740"
  },
  {
    "text": "um you know a lot more stable and mature and I think that's true I think that the core language is pretty close to getting",
    "start": "1600740",
    "end": "1607039"
  },
  {
    "text": "um to where it would be for a version one release so I don't expect there to be any super major changes",
    "start": "1607039",
    "end": "1613940"
  },
  {
    "text": "um to how the language works but there are a couple things we want to add at the moment we've got",
    "start": "1613940",
    "end": "1619460"
  },
  {
    "text": "um a form of basic exhaustiveness check-in that being if you have a you",
    "start": "1619460",
    "end": "1624559"
  },
  {
    "text": "know a type that has could be one one or more different things so for example Boolean can be true or false when you um",
    "start": "1624559",
    "end": "1631340"
  },
  {
    "text": "pattern match on on that type and you only write it true you only handle the",
    "start": "1631340",
    "end": "1636799"
  },
  {
    "text": "true case we will say oh you forgot the false you know you have to write in order for you to continue for us to",
    "start": "1636799",
    "end": "1641900"
  },
  {
    "text": "compile your code you must provide us the false case as well so we've got a basic form of that that works for",
    "start": "1641900",
    "end": "1648020"
  },
  {
    "text": "um uh like typical custom types you know ones that are just this or this or this",
    "start": "1648020",
    "end": "1653059"
  },
  {
    "text": "but it doesn't happen recursively so if you had things necess inside things inside things it won't always capture",
    "start": "1653059",
    "end": "1658520"
  },
  {
    "text": "for you so we're going to upgrade that in future to to cover everything and then we're going to use that",
    "start": "1658520",
    "end": "1663860"
  },
  {
    "text": "information as well to do a bunch of performance improvements to your generated code so once we have that your your JavaScript",
    "start": "1663860",
    "end": "1669860"
  },
  {
    "text": "code should run a bit faster erlin code probably about the same because they already do very clever things with their",
    "start": "1669860",
    "end": "1674960"
  },
  {
    "text": "their pattern matching already the other thing that um uh we're still doing sort of research on but I think is",
    "start": "1674960",
    "end": "1682340"
  },
  {
    "text": "likely to to come in if some form of optional arguments inspired by languages such as",
    "start": "1682340",
    "end": "1688279"
  },
  {
    "text": "um Python and and a camel um it doesn't really change much about the you know it doesn't doesn't enable",
    "start": "1688279",
    "end": "1694700"
  },
  {
    "text": "you to do anything new with the language but it will make you it will enable you to make nice and more concise apis and I think it could improve the sort of",
    "start": "1694700",
    "end": "1700760"
  },
  {
    "text": "developer experience a whole bunch as well foreign did you talk about the exhaustiveness",
    "start": "1700760",
    "end": "1707779"
  },
  {
    "text": "checking because I found that was a really interesting idea that",
    "start": "1707779",
    "end": "1712900"
  },
  {
    "text": "certainly would you know make more correct programs totally so in gleam we try and and catch",
    "start": "1712940",
    "end": "1720799"
  },
  {
    "text": "as many mistakes as possible or um I guess more precisely if something",
    "start": "1720799",
    "end": "1726020"
  },
  {
    "text": "crashes in production in in your code we want it to be because",
    "start": "1726020",
    "end": "1731720"
  },
  {
    "text": "um you've made a decision saying well this error should never happen so I'm just going to assert here you know",
    "start": "1731720",
    "end": "1737539"
  },
  {
    "text": "assert that this succeeds and then you move on and so you've made a decision to deliberately opt into a crashing",
    "start": "1737539",
    "end": "1742700"
  },
  {
    "text": "Behavior I don't want it to ever be oh well I made a typo you know oh I made a mistake oh I forgot I forgot to handle",
    "start": "1742700",
    "end": "1748700"
  },
  {
    "text": "something you know any any time when you opt into that behavior of okay well I'll let the",
    "start": "1748700",
    "end": "1753799"
  },
  {
    "text": "the higher level construct do my my error handling for me in a sort of Let It crash way that you find in airline",
    "start": "1753799",
    "end": "1759380"
  },
  {
    "text": "that should always be intentional so we wanna we want everything to be super explicit and",
    "start": "1759380",
    "end": "1766399"
  },
  {
    "text": "um forgetting to to match on a new on a new variant on a new you know on on my",
    "start": "1766399",
    "end": "1772880"
  },
  {
    "text": "contrived example if I forget matching untrue but not matching a false you know that could cause your programs to crash and",
    "start": "1772880",
    "end": "1778340"
  },
  {
    "text": "um you know that would be a very embarrassing mistake but it happens a lot in the world so once we've plugged that whole uh that would be one of the",
    "start": "1778340",
    "end": "1784039"
  },
  {
    "text": "the last ways you can get runtime error single so just wrapping up I mean I think it",
    "start": "1784039",
    "end": "1792140"
  },
  {
    "text": "sounds like you've got language design ideas and also the tooling",
    "start": "1792140",
    "end": "1797899"
  },
  {
    "text": "um kind of pretty much figured out uh what about the community how sort of active is that and how do you think",
    "start": "1797899",
    "end": "1804260"
  },
  {
    "text": "you're going to grow that over time so communities really the you know the",
    "start": "1804260",
    "end": "1809659"
  },
  {
    "text": "most important thing in my eyes there's no point having a uh you know a perfect little language if nobody's using it you",
    "start": "1809659",
    "end": "1816919"
  },
  {
    "text": "know you've really got to make sure that um you know people find out about it and then people can try it easily and then",
    "start": "1816919",
    "end": "1823460"
  },
  {
    "text": "they can learn it and hopefully enjoy it and hopefully continue using it um and then those people can contribute",
    "start": "1823460",
    "end": "1830360"
  },
  {
    "text": "back into the system whether it be you know working on the language itself whether if they feel like they want to",
    "start": "1830360",
    "end": "1835580"
  },
  {
    "text": "be a bit of a compiler hacker they can do that sort of stuff or um you know writing their own glean programs and you know showing that hey",
    "start": "1835580",
    "end": "1842779"
  },
  {
    "text": "this is a language where you can do all these cool things or making libraries that other people can use in the code these are all super useful and we're at",
    "start": "1842779",
    "end": "1849860"
  },
  {
    "text": "a point where that probably is the most um important thing in gleam getting that",
    "start": "1849860",
    "end": "1854960"
  },
  {
    "text": "momentum so companies can look at the language say well oh you know okay this",
    "start": "1854960",
    "end": "1860779"
  },
  {
    "text": "seems like a thing that I could uh you know bet some degree of my business on because there's loads of people using it",
    "start": "1860779",
    "end": "1866419"
  },
  {
    "text": "and it looks like a useful and productive tool so we've really got to draw in as many people and I think we're",
    "start": "1866419",
    "end": "1872240"
  },
  {
    "text": "doing really well we've got a lovely little Discord server that's got quite a lot of people in it now and you know",
    "start": "1872240",
    "end": "1877580"
  },
  {
    "text": "every day there's lots of discussion and and friendly faces and you know people both um talking about gleam and how they",
    "start": "1877580",
    "end": "1885020"
  },
  {
    "text": "could improve it or sharing their projects or or you know just chatting in the off topic Channel and having a bit",
    "start": "1885020",
    "end": "1891799"
  },
  {
    "text": "of fun so how are we going to grow this well I think we're going to continue to have",
    "start": "1891799",
    "end": "1897380"
  },
  {
    "text": "the you know focus on being welcoming and friendly but there's other things we can do as well",
    "start": "1897380",
    "end": "1902539"
  },
  {
    "text": "um I think that um the onboarding process is going to be",
    "start": "1902539",
    "end": "1907640"
  },
  {
    "text": "something we're going to be focused on over the next year so at the moment if you want to try gleam you've got to go",
    "start": "1907640",
    "end": "1913640"
  },
  {
    "text": "to the website and then you've got to install it and install erlang and then set up your text editor and you know go",
    "start": "1913640",
    "end": "1920179"
  },
  {
    "text": "through the documentation which is you know not terrible especially for such a new language but it could definitely be",
    "start": "1920179",
    "end": "1926000"
  },
  {
    "text": "a lot better it's not as good as you would find in in a lot of these more mature languages",
    "start": "1926000",
    "end": "1931520"
  },
  {
    "text": "um and that's quite that's quite a lot of Hoops to jump through to trying a new language there's a lot there's a lot to ask for someone so what I'd really like",
    "start": "1931520",
    "end": "1937220"
  },
  {
    "text": "is that if you could say yeah I want to try clean I'm typing um gleam and then I get taken to the home page and I press",
    "start": "1937220",
    "end": "1943340"
  },
  {
    "text": "you know a try button and it immediately takes you to a text editor in your in your browser and there you can write",
    "start": "1943340",
    "end": "1949880"
  },
  {
    "text": "link code and maybe there's a little tutorial on the site that tells you you know what you can do and then even go as",
    "start": "1949880",
    "end": "1956179"
  },
  {
    "text": "far as to being able to run it inside the browser and immediately get back your results or even have the language",
    "start": "1956179",
    "end": "1961279"
  },
  {
    "text": "server in the browser so you can have all these IDE light features without installing anything on your computer at",
    "start": "1961279",
    "end": "1967159"
  },
  {
    "text": "all so you know you could see the errors and warnings and and you know get refractions and all sort of stuff",
    "start": "1967159",
    "end": "1972260"
  },
  {
    "text": "and then hopefully people will try this and say wow if it's this good in the browser imagine what it would be like if",
    "start": "1972260",
    "end": "1977299"
  },
  {
    "text": "I had it on my computer imagine it would be like if I could use this um you know for my day job and hopefully that will",
    "start": "1977299",
    "end": "1982700"
  },
  {
    "text": "uh you know give people more of a motivation to try it I can confirm it's super easy to get",
    "start": "1982700",
    "end": "1988760"
  },
  {
    "text": "into install and get started so well done on the existing onboarding and look",
    "start": "1988760",
    "end": "1994100"
  },
  {
    "text": "forward to seeing how it improves over time uh I think that's all we've got time for Louise so thank thanks for your",
    "start": "1994100",
    "end": "2000159"
  },
  {
    "text": "time and thanks for giving us a little tour around gleam",
    "start": "2000159",
    "end": "2005200"
  },
  {
    "text": "thanks for thanks for having me and I I do pay if anyone's interested in clean come try it out and and drop by the",
    "start": "2005200",
    "end": "2011320"
  },
  {
    "text": "Discord server and say hi thanks Larry",
    "start": "2011320",
    "end": "2017159"
  }
]