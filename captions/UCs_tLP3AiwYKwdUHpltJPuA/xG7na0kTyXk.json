[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "[Music]",
    "start": "2550",
    "end": "10100"
  },
  {
    "text": "I'm gonna talk a little bit about the lessons from the backhand we've been doing a project here for the past year",
    "start": "10100",
    "end": "16830"
  },
  {
    "text": "and that's actually live so we actually used you choosing this stuff not going",
    "start": "16830",
    "end": "22590"
  },
  {
    "text": "to talk about a lot of the fancy stuff or at least I think it's not not not the",
    "start": "22590",
    "end": "27779"
  },
  {
    "text": "fancy stuff because I'm gonna talk about what we actually use when we actually enjoy from the from the language itself",
    "start": "27779",
    "end": "34380"
  },
  {
    "text": "as has been said I'm CTO of machine learning although this this is nothing to do with that but I just really like",
    "start": "34380",
    "end": "41310"
  },
  {
    "text": "the language and I wanted to share this with you so so like I said features we",
    "start": "41310",
    "end": "47490"
  },
  {
    "start": "46000",
    "end": "46000"
  },
  {
    "text": "use so a little bit about the basics may be a good show of hands would be how",
    "start": "47490",
    "end": "53280"
  },
  {
    "text": "many are using Copland live in an actual application okay so many people so I",
    "start": "53280",
    "end": "61320"
  },
  {
    "text": "will do this slide by slide if people are not interested in seeing examples of basic stuff then we'll move on otherwise",
    "start": "61320",
    "end": "67470"
  },
  {
    "text": "I have examples of basic stuff good so I'll talk a little bit about the",
    "start": "67470",
    "end": "72539"
  },
  {
    "text": "integration with frameworks spring and Jackson keto and then discuss some of",
    "start": "72539",
    "end": "80909"
  },
  {
    "text": "the some of the things that we sort of struggled with or not really struggle but sort of had a first struggle with",
    "start": "80909",
    "end": "87359"
  },
  {
    "text": "and then one oh yeah before I say PHP and so I have so I have",
    "start": "87359",
    "end": "95909"
  },
  {
    "text": "a background in PHP no I wanted to show you this a this is the way I got",
    "start": "95909",
    "end": "103590"
  },
  {
    "text": "introduced into Cokely and indeed somebody got that right that's what I",
    "start": "103590",
    "end": "110219"
  },
  {
    "text": "wanted to say and by applying this to an internal application that I made for",
    "start": "110219",
    "end": "115619"
  },
  {
    "text": "myself and that was initially built in PHP okay so I chose PHP at that point",
    "start": "115619",
    "end": "120689"
  },
  {
    "start": "119000",
    "end": "119000"
  },
  {
    "text": "because that's what I learned to do when I was fifteen or something like that so fine it was very fast to to make",
    "start": "120689",
    "end": "127079"
  },
  {
    "text": "software it's very simple you know it's very it's very nice to do these kinds of things but you hit sometimes you are at",
    "start": "127079",
    "end": "133680"
  },
  {
    "text": "some point you hit hit the wall and you gladly change in that speed and simplicity for scale",
    "start": "133680",
    "end": "139349"
  },
  {
    "text": "the assurance of a strongly typed thing and that really makes you happy at that point because you just want the thing to",
    "start": "139349",
    "end": "145650"
  },
  {
    "text": "work but then you know in I think",
    "start": "145650",
    "end": "151560"
  },
  {
    "text": "October November 2016 I I ran into this Coquelin thing and I",
    "start": "151560",
    "end": "158340"
  },
  {
    "text": "decided to do something to check it out basically and I got simplicity back less",
    "start": "158340",
    "end": "168000"
  },
  {
    "text": "code I always loved less less desu code and I got functional stuff back I I",
    "start": "168000",
    "end": "174540"
  },
  {
    "text": "worked on eight months I worked on Scala and that had a lot of functional stuff in it but I couldn't we couldn't really",
    "start": "174540",
    "end": "181109"
  },
  {
    "text": "make that work in a simple way so it's nice that we could have that mix here so",
    "start": "181109",
    "end": "189389"
  },
  {
    "text": "that's was my own introduction and then when last year in May we started a new",
    "start": "189389",
    "end": "194400"
  },
  {
    "text": "project for a major client I said why don't we do this in this stuff because that's really interesting to do let's make this happen it's gonna be this is",
    "start": "194400",
    "end": "201150"
  },
  {
    "text": "gonna be hot and you know you you guys here show that so major clients they need to move away of course from an",
    "start": "201150",
    "end": "207509"
  },
  {
    "start": "205000",
    "end": "205000"
  },
  {
    "text": "existing monolith most clients do and we needed to replace a part of that so",
    "start": "207509",
    "end": "215549"
  },
  {
    "text": "that's what we did start at the May like I said spring boots to buy now",
    "start": "215549",
    "end": "220620"
  },
  {
    "text": "climbing a trellis Gradle initially Java but pretty soon move to move to the",
    "start": "220620",
    "end": "226590"
  },
  {
    "text": "common stuff so oh yeah this is gonna be lessons from it so this is lesson one",
    "start": "226590",
    "end": "233189"
  },
  {
    "text": "it's cool so for those that are already using Copelan it's pretty obvious but I",
    "start": "233189",
    "end": "239009"
  },
  {
    "text": "guess some of the others want to have some some some ammunition to tell your",
    "start": "239009",
    "end": "244079"
  },
  {
    "text": "to tell your team why they should really start to learn this this stuff so I'm here to help you out so first of all why",
    "start": "244079",
    "end": "253169"
  },
  {
    "start": "251000",
    "end": "251000"
  },
  {
    "text": "do I want the Kotlin I don't like to type or read fluff I want to get to the point",
    "start": "253169",
    "end": "258469"
  },
  {
    "text": "Coughlin's allows me to do this I'd like to understand the errors that that I",
    "start": "258469",
    "end": "263849"
  },
  {
    "text": "cause I make faults I'm a man I make false women never make faults and",
    "start": "263849",
    "end": "270289"
  },
  {
    "text": "so I I like to understand why by what it is",
    "start": "270289",
    "end": "277050"
  },
  {
    "text": "I love up-to-date documentation everybody does I'm really into predictable and relevant",
    "start": "277050",
    "end": "283469"
  },
  {
    "text": "api's and people pick this up very easily so that's I think pretty good",
    "start": "283469",
    "end": "289289"
  },
  {
    "text": "then there's of course a bunch of other reasons so I put them all in a word cloud with animation anyway so lots of",
    "start": "289289",
    "end": "297780"
  },
  {
    "text": "reasons so now let's get to the code and this may be the basic stuff so I'm gonna",
    "start": "297780",
    "end": "303270"
  },
  {
    "start": "298000",
    "end": "298000"
  },
  {
    "text": "just browse and see what we need right what I need to get into deeper because also talk to people that haven't used",
    "start": "303270",
    "end": "309780"
  },
  {
    "text": "coding as much so yeah I want to strike a nice balance in it so I'm going to talk about these subjects very basic",
    "start": "309780",
    "end": "317129"
  },
  {
    "text": "stuff first implicit types no more no more specifying the type when you",
    "start": "317129",
    "end": "322169"
  },
  {
    "text": "declare somes something no no safety is",
    "start": "322169",
    "end": "328139"
  },
  {
    "text": "a feature that we have a lot of fun with the methods that we can do on lists so",
    "start": "328139",
    "end": "333659"
  },
  {
    "text": "the functional programming part of that and something about extensions and type aliases that's basically what what this",
    "start": "333659",
    "end": "340319"
  },
  {
    "text": "talk is about for in terms of the the basic Copland stuff so first of all",
    "start": "340319",
    "end": "347039"
  },
  {
    "start": "347000",
    "end": "347000"
  },
  {
    "text": "implicit types very simple you get to define a function looks like this it's a",
    "start": "347039",
    "end": "353879"
  },
  {
    "text": "function that turns a string into another string so we can call that with my ever creative blaah example string",
    "start": "353879",
    "end": "361589"
  },
  {
    "text": "which you will see a lot more off I think and then if I just opposed it to Java then we get a little bit longer",
    "start": "361589",
    "end": "368339"
  },
  {
    "text": "piece of code but we still sort of like this new syntax that Scala that that",
    "start": "368339",
    "end": "373469"
  },
  {
    "text": "Java introduced although I don't like apply I don't know why it has to say apply here I never asked for that I",
    "start": "373469",
    "end": "380310"
  },
  {
    "text": "don't care about apply but you know okay that's fine no good reason yes so now I",
    "start": "380310",
    "end": "386550"
  },
  {
    "text": "want to do a function that has a little bit more arguments because I write",
    "start": "386550",
    "end": "394199"
  },
  {
    "text": "software and that has functions with note for arguments I stutter as well so",
    "start": "394199",
    "end": "401159"
  },
  {
    "text": "you know sometimes it's really really exciting what's going to happen next again I did it",
    "start": "401159",
    "end": "408870"
  },
  {
    "text": "so yeah but but sadly that that sort of looks nice in Koplin and then in java",
    "start": "408870",
    "end": "416570"
  },
  {
    "text": "it's bits of sad story but there's two two ways to be sad there's one where you",
    "start": "416570",
    "end": "422670"
  },
  {
    "text": "where you sort of where you sort of nest these functions so then it looks like",
    "start": "422670",
    "end": "429570"
  },
  {
    "text": "you're doing something that's nice so that's cool and then you get to apply",
    "start": "429570",
    "end": "435270"
  },
  {
    "text": "some more so that's nice of course this isn't going to be a Java bashing evening",
    "start": "435270",
    "end": "440490"
  },
  {
    "text": "but I cannot say resist the the other thing is where you have to determine",
    "start": "440490",
    "end": "446090"
  },
  {
    "text": "determine a separate interface that sort of gives you what you want and then you can use that and that says you know",
    "start": "446090",
    "end": "452280"
  },
  {
    "text": "secret interesting yeah that sort of gets closer to where I want to be although I don't want to be there and I",
    "start": "452280",
    "end": "459450"
  },
  {
    "text": "still get the one apply does anybody want to see an example of this stuff yeah",
    "start": "459450",
    "end": "467150"
  },
  {
    "text": "it's this visible for everyone yeah oh yeah so it's a very stupid and simple",
    "start": "471380",
    "end": "477170"
  },
  {
    "text": "example but we can run it at least and then it's too big thing but you know so",
    "start": "477170",
    "end": "488590"
  },
  {
    "text": "okay that's interesting so it generates",
    "start": "488980",
    "end": "495860"
  },
  {
    "text": "a function or it's it it it generates string oh yeah right I call this string",
    "start": "495860",
    "end": "503330"
  },
  {
    "text": "how that's stupid that should have been blah right I don't like that make that",
    "start": "503330",
    "end": "508550"
  },
  {
    "text": "obvious so there is there you go so it's very very basic stuff we can we can",
    "start": "508550",
    "end": "513680"
  },
  {
    "text": "define a function without it being the member of a class or anything just an inline thing and then just use use use",
    "start": "513680",
    "end": "520340"
  },
  {
    "text": "that so far so simple I would say if there's questions and I'm looking at my",
    "start": "520340",
    "end": "526790"
  },
  {
    "text": "screen a lot please just shout out and say hey but wait you know sort of thing",
    "start": "526790",
    "end": "532300"
  },
  {
    "text": "and then of course a Java equivalent is this is like I said like I showed on a",
    "start": "532300",
    "end": "537380"
  },
  {
    "text": "slide it's a little bit more involved okay good let's look at something else",
    "start": "537380",
    "end": "544280"
  },
  {
    "text": "no null safety so one of these sort of billion dollar mistakes is that as it",
    "start": "544280",
    "end": "549920"
  },
  {
    "start": "545000",
    "end": "545000"
  },
  {
    "text": "has been dubbed is is is to the introduction of no because of all the",
    "start": "549920",
    "end": "556370"
  },
  {
    "text": "faults that dead are made and then we still try to deal with this stuff and",
    "start": "556370",
    "end": "561980"
  },
  {
    "text": "coughlin does this I think in a really nice way in principle basically you say in a very short way you say well this",
    "start": "561980",
    "end": "568640"
  },
  {
    "text": "could be a string it could also not be a string in this case I'm very being really explicit that it's not a string",
    "start": "568640",
    "end": "575600"
  },
  {
    "text": "but that could have been a var or it could have been something that comes out of a function and that could have been",
    "start": "575600",
    "end": "580700"
  },
  {
    "text": "not that obvious and then we have a way to say well let's get a default value so",
    "start": "580700",
    "end": "587270"
  },
  {
    "text": "here what you also see is that an if statement actually returns a value so you can use that as an inline thing as a",
    "start": "587270",
    "end": "594110"
  },
  {
    "text": "replacement for the ternary operator so here we say if it's no than then give me",
    "start": "594110",
    "end": "601100"
  },
  {
    "text": "anonymous or the otherwise use that string and what's nice about cotton is well is that it does a smart cost so that",
    "start": "601100",
    "end": "607220"
  },
  {
    "text": "maybe string outside of this outside of this else block was a string that might",
    "start": "607220",
    "end": "613280"
  },
  {
    "text": "be a no but in here it's gonna be an actual string like a hard string because we know that we've already checked",
    "start": "613280",
    "end": "619580"
  },
  {
    "text": "whether the question mark was there and if that's not the case then we know that this is gonna be an actual string so",
    "start": "619580",
    "end": "625190"
  },
  {
    "text": "that's really nice but we could make that a little shorter by using the Elvis",
    "start": "625190",
    "end": "630470"
  },
  {
    "text": "operator which is nice and then yeah that that becomes a nice small thing so",
    "start": "630470",
    "end": "636320"
  },
  {
    "text": "far so good I really like it save calls here we can sort of chain the",
    "start": "636320",
    "end": "642590"
  },
  {
    "text": "calls that we would want to do on an object in this case this string but do it on a precondition that it's not no so",
    "start": "642590",
    "end": "649640"
  },
  {
    "text": "here we would say here would say get me",
    "start": "649640",
    "end": "655100"
  },
  {
    "text": "the length of the string if that string is not no okay fine do you want an example of that sure less",
    "start": "655100",
    "end": "663800"
  },
  {
    "text": "enthusiasm already okay that's good that's good no that's fine it's fine I",
    "start": "663800",
    "end": "668900"
  },
  {
    "text": "just spent hours on this stuff man no is",
    "start": "668900",
    "end": "676190"
  },
  {
    "text": "there anything else that I showed on the slide yes a little bit I didn't show this part where you say well I know that",
    "start": "676190",
    "end": "682220"
  },
  {
    "text": "it might be no but in this case I'm really certain that it's not gonna be no there's just you know I I just know that",
    "start": "682220",
    "end": "690350"
  },
  {
    "text": "it's not gonna be no ideally wouldn't have much of this in your code but in the end you're using frameworks that don't really know about this stuff and",
    "start": "690350",
    "end": "696860"
  },
  {
    "text": "then you'll see that you're using this more than you would like but it's yeah I",
    "start": "696860",
    "end": "701960"
  },
  {
    "text": "mean it works so yeah that's that's it good next I'm so happy I brought a",
    "start": "701960",
    "end": "710690"
  },
  {
    "text": "clicker because I'm never at a keyboard and oh yeah I have a question I guess so",
    "start": "710690",
    "end": "720110"
  },
  {
    "text": "there's one thing that I like about Java or for that matter another language that",
    "start": "720110",
    "end": "726860"
  },
  {
    "text": "also does the optional thing class and that is that I can map over the optional",
    "start": "726860",
    "end": "734050"
  },
  {
    "text": "which more often than not I would like to do the because what is mapping of an optional",
    "start": "734050",
    "end": "740540"
  },
  {
    "text": "no other than just a generalized form of this this final case right right here",
    "start": "740540",
    "end": "747050"
  },
  {
    "text": "here here I'm saying if I have a string I want the length field okay fine",
    "start": "747050",
    "end": "752269"
  },
  {
    "text": "but maybe I would like to do an arbitrary operation once that that that",
    "start": "752269",
    "end": "757519"
  },
  {
    "text": "string is an actual string and Java gives me that I can make an optional",
    "start": "757519",
    "end": "764240"
  },
  {
    "text": "which is you know sort of the equivalent of that question mark thing and then I can do map map on that stuff so that",
    "start": "764240",
    "end": "772249"
  },
  {
    "text": "means that if this were this were an actual string that would become value plus that string but if it were no it",
    "start": "772249",
    "end": "778999"
  },
  {
    "text": "puts or if it was if it was an empty optional or no in this case that would",
    "start": "778999",
    "end": "784189"
  },
  {
    "text": "just leave that be so I I would like to",
    "start": "784189",
    "end": "789649"
  },
  {
    "text": "see this however this does not work which basically says well we have to go we have our favorite string here again",
    "start": "789649",
    "end": "796730"
  },
  {
    "text": "and then we say well if that is there do this operation we with it and then its",
    "start": "796730",
    "end": "802839"
  },
  {
    "text": "variables to default that you use within these within these within these",
    "start": "802839",
    "end": "807860"
  },
  {
    "text": "operations however it's got its got the crossed fingers there it's not it's not",
    "start": "807860",
    "end": "812870"
  },
  {
    "text": "in maybe in the future future version of this let's",
    "start": "812870",
    "end": "821170"
  },
  {
    "text": "okay cool thanks I guess I made a mistake okay cool I'll look that up oh",
    "start": "826140",
    "end": "833839"
  },
  {
    "text": "yeah so down then that that point doesn't matter I've got ya",
    "start": "833839",
    "end": "840829"
  },
  {
    "text": "moving on okay functionals just for everyone who isn't aware of functional",
    "start": "840829",
    "end": "846240"
  },
  {
    "start": "842000",
    "end": "842000"
  },
  {
    "text": "programming I didn't put a full list of what what what sort of I mean by by that",
    "start": "846240",
    "end": "852990"
  },
  {
    "text": "but these these are three of the most common functions how many of you don't",
    "start": "852990",
    "end": "859980"
  },
  {
    "text": "do functional programming cool but for",
    "start": "859980",
    "end": "865410"
  },
  {
    "text": "you for guys I've made this slide so it's really really simple Mac turns a",
    "start": "865410",
    "end": "872430"
  },
  {
    "text": "list of something into some into a list of something else flat map turns a list of lists which more often than you would",
    "start": "872430",
    "end": "879420"
  },
  {
    "text": "expect actually happens in code into a list of something else which is really nice and then group by does the group",
    "start": "879420",
    "end": "886649"
  },
  {
    "text": "bias you would expect it from SQL or whatever you have which turns a list into X into a map of something else and",
    "start": "886649",
    "end": "895850"
  },
  {
    "text": "pointing to a list of things that have the same Y so to say then that looks in",
    "start": "895850",
    "end": "906449"
  },
  {
    "text": "that looks like this which is bigger do this so here what I",
    "start": "906449",
    "end": "917430"
  },
  {
    "text": "created is this short transformation function it takes a list of these report",
    "start": "917430",
    "end": "923720"
  },
  {
    "text": "object on the top there in this case it's only one but you know I was lazy",
    "start": "923720",
    "end": "929089"
  },
  {
    "text": "and it turns that into an object that holds the average of the scores that are",
    "start": "929089",
    "end": "936570"
  },
  {
    "text": "included in the original objects and some things called something some a list",
    "start": "936570",
    "end": "942660"
  },
  {
    "text": "of some things called score records now",
    "start": "942660",
    "end": "947760"
  },
  {
    "text": "which is really nice is the averages is pretty easy to to get you just do a you",
    "start": "947760",
    "end": "956730"
  },
  {
    "text": "just make sure that the score that you're talking about is not no and by that time you're certain that that score",
    "start": "956730",
    "end": "963300"
  },
  {
    "text": "that used to be a nullable int is is an",
    "start": "963300",
    "end": "969360"
  },
  {
    "text": "actual int and then you can you can you can have the average of that then you",
    "start": "969360",
    "end": "974399"
  },
  {
    "text": "group by which again sort of speaks for for itself there and IntelliJ is is nice",
    "start": "974399",
    "end": "982110"
  },
  {
    "text": "enough to sort of show us but then that type would be and and we we flat map of",
    "start": "982110",
    "end": "990390"
  },
  {
    "text": "over that stuff turning a a list which are they which is",
    "start": "990390",
    "end": "996240"
  },
  {
    "text": "the list of River reports into a list of his score records that is that is what",
    "start": "996240",
    "end": "1004070"
  },
  {
    "text": "we want and then by flat map we get one list that holds all of these things all",
    "start": "1004070",
    "end": "1011540"
  },
  {
    "text": "together and then finally finally we have a sort of a check that says well if that reports thing used to be empty or",
    "start": "1011540",
    "end": "1017270"
  },
  {
    "text": "was was actually empty then nevermind give me nothing in otherwise give me",
    "start": "1017270",
    "end": "1022760"
  },
  {
    "text": "this new thing okay so that's good so how does it look in Java and that's",
    "start": "1022760",
    "end": "1031188"
  },
  {
    "text": "great so you've got sort of the same",
    "start": "1031189",
    "end": "1036500"
  },
  {
    "text": "thing I have to have to get that get it a little bit out of the way but the average becomes a wonderful",
    "start": "1036500",
    "end": "1044569"
  },
  {
    "text": "of stream weird collector stuff",
    "start": "1044570",
    "end": "1054310"
  },
  {
    "text": "averaging double then get the double value for the standards it's just a very",
    "start": "1054310",
    "end": "1060890"
  },
  {
    "text": "very hard to read bunch of stuff then here there's a for each that generates",
    "start": "1060890",
    "end": "1067820"
  },
  {
    "text": "that value and collecting a group thing it's to me I know what I like better and",
    "start": "1067820",
    "end": "1076850"
  },
  {
    "text": "in fact if I look at the actual code this actually turns into very hard to",
    "start": "1076850",
    "end": "1082190"
  },
  {
    "text": "read stuff just very hard to read um alright I'm hearing sighs so I'm moving",
    "start": "1082190",
    "end": "1091610"
  },
  {
    "start": "1089000",
    "end": "1089000"
  },
  {
    "text": "on Coughlin's hands say oh it's fine you know it's been a long day so Kotlin has a bias towards",
    "start": "1091610",
    "end": "1098480"
  },
  {
    "text": "immutability so that's so and and that's actually some something that I really",
    "start": "1098480",
    "end": "1103730"
  },
  {
    "text": "really like in my in my local very variables and in my fields that I can",
    "start": "1103730",
    "end": "1109250"
  },
  {
    "text": "say well there's actually a vowel in common terms and we don't want that to be changed ever again so that's that's",
    "start": "1109250",
    "end": "1117740"
  },
  {
    "text": "really nice and and it's a nice shortcut they have the valve for the 40 things that for the things that that may not",
    "start": "1117740",
    "end": "1124340"
  },
  {
    "text": "change in the VAR for the things that may and for classes they did a little",
    "start": "1124340",
    "end": "1129380"
  },
  {
    "text": "bit of a different thing they just said well the default thing is final so when you declare a class you you you",
    "start": "1129380",
    "end": "1136160"
  },
  {
    "text": "automatically get a final final class and when only when you explicitly say this is open then then you get a class",
    "start": "1136160",
    "end": "1144440"
  },
  {
    "text": "that that may be extended which I will come back to but it's important to keep",
    "start": "1144440",
    "end": "1150680"
  },
  {
    "text": "this in mind that that that that is there another nice feature of Copelan",
    "start": "1150680",
    "end": "1159980"
  },
  {
    "start": "1156000",
    "end": "1156000"
  },
  {
    "text": "that we use not that much but it's still nice to show is the extensions feature",
    "start": "1159980",
    "end": "1167240"
  },
  {
    "text": "where you can say well actually put this method on any anything that debt debt is",
    "start": "1167240",
    "end": "1174020"
  },
  {
    "text": "of a certain type much akin to what you can do in JavaScript as well you can just extend",
    "start": "1174020",
    "end": "1180050"
  },
  {
    "text": "the API of a standard standard object in this way or an object that is final or",
    "start": "1180050",
    "end": "1185360"
  },
  {
    "text": "something like that in this case I wanted a random range of a certain list so I could just say well add that to the",
    "start": "1185360",
    "end": "1193520"
  },
  {
    "text": "list to the list interface another thing which is nice here is that you get this",
    "start": "1193520",
    "end": "1199030"
  },
  {
    "text": "operator that will give you a range with an infix function which is more to the",
    "start": "1199030",
    "end": "1206110"
  },
  {
    "text": "DSL side of things but still a nice feature to be aware of as well",
    "start": "1206110",
    "end": "1212230"
  },
  {
    "start": "1212000",
    "end": "1212000"
  },
  {
    "text": "type aliases are really useful for sort of abstracting the complexity in your",
    "start": "1213400",
    "end": "1219620"
  },
  {
    "text": "data structures I showed that Java function sort of signature it would be",
    "start": "1219620",
    "end": "1226220"
  },
  {
    "text": "really handy for that stuff now we cannot use it in Java so so that doesn't go but but for all the other",
    "start": "1226220",
    "end": "1232420"
  },
  {
    "text": "cases within within Cokely itself it's",
    "start": "1232420",
    "end": "1237710"
  },
  {
    "text": "really really handy to have where you can say well if I talk about a file",
    "start": "1237710",
    "end": "1244420"
  },
  {
    "text": "table then actually really what I'm talking about is a mute mutable map of",
    "start": "1244420",
    "end": "1249500"
  },
  {
    "text": "things and then I can use that in assignments now it's actually not that useful in this example but what we found",
    "start": "1249500",
    "end": "1256790"
  },
  {
    "text": "it to be really useful at is when we're passing around these sorts of objects from one method into another but we're",
    "start": "1256790",
    "end": "1263720"
  },
  {
    "text": "not really doing anything we're just passing it in in to the next then it's",
    "start": "1263720",
    "end": "1270050"
  },
  {
    "text": "really handy to have a shortcut so you don't have this signature of this of this of this object all over the place",
    "start": "1270050",
    "end": "1279070"
  },
  {
    "text": "that's a good one and so and as sec",
    "start": "1279070",
    "end": "1285410"
  },
  {
    "text": "secondly you can also do that it with with with functions where it looks like",
    "start": "1285410",
    "end": "1290420"
  },
  {
    "text": "you have a class now but it's really just an anonymous function that says I'm turning a string into something else",
    "start": "1290420",
    "end": "1295510"
  },
  {
    "text": "whatever it may may be and then we can actually use you choose that in that way",
    "start": "1295510",
    "end": "1302750"
  },
  {
    "text": "it's a really nice one as well I think typing is is yeah just just that it does",
    "start": "1302750",
    "end": "1317320"
  },
  {
    "text": "that so just yeah did I think cars it",
    "start": "1317320",
    "end": "1323679"
  },
  {
    "text": "okay good so that was lesson one it's cool any",
    "start": "1323679",
    "end": "1331029"
  },
  {
    "text": "questions so far",
    "start": "1331029",
    "end": "1333600"
  },
  {
    "text": "yeah this one you mean this this on the on the bottom",
    "start": "1338070",
    "end": "1344169"
  },
  {
    "text": "line yeah what do you want to know about the ballot or just observing that as",
    "start": "1344169",
    "end": "1351039"
  },
  {
    "text": "viewers yeah okay",
    "start": "1351039",
    "end": "1359130"
  },
  {
    "text": "well you've got the type of the function which is this so this basically says this is the",
    "start": "1359130",
    "end": "1364690"
  },
  {
    "text": "signature of what you're going to create which says I take a string and I generate a key yes I get it I got it",
    "start": "1364690",
    "end": "1372309"
  },
  {
    "text": "yeah I was going there I was going from you know and and then the assignment",
    "start": "1372309",
    "end": "1377710"
  },
  {
    "text": "says well if I want something of that type which is in the end what this thing is saying or at least it's int then I",
    "start": "1377710",
    "end": "1384520"
  },
  {
    "text": "want to I want to declare that so this is the Declaration of that function itself in this case a curly bracket",
    "start": "1384520",
    "end": "1391840"
  },
  {
    "text": "saying you know give me a string and I will give you the length of that string",
    "start": "1391840",
    "end": "1398100"
  },
  {
    "text": "you mean could you take this out I actually I tried that and I think you",
    "start": "1403050",
    "end": "1411550"
  },
  {
    "text": "can't although I would expect that you would be able to but if somebody smarter",
    "start": "1411550",
    "end": "1417640"
  },
  {
    "text": "than me please please let me know that I'm wrong but I would expect indeed that you would be able to take this out",
    "start": "1417640",
    "end": "1423130"
  },
  {
    "text": "because it would be able to find that type by going through through the Declaration and sort of seeing ah that",
    "start": "1423130",
    "end": "1428530"
  },
  {
    "text": "must be a string not you know let's try it out",
    "start": "1428530",
    "end": "1435390"
  },
  {
    "text": "oh sorry sorry you're competing right yeah that's not that's not helping",
    "start": "1453650",
    "end": "1460690"
  },
  {
    "text": "that may be meanness yeah exactly and we",
    "start": "1461990",
    "end": "1467330"
  },
  {
    "text": "can do this so it becomes even more even more short yeah you're you're absolutely",
    "start": "1467330",
    "end": "1473960"
  },
  {
    "text": "right I think I try to remove there or something I must have been doing doing the same thing that's stupid but yeah",
    "start": "1473960",
    "end": "1480200"
  },
  {
    "text": "indeed so then it becomes even more even more interesting where it says okay we",
    "start": "1480200",
    "end": "1488510"
  },
  {
    "text": "can take this shortcut because if this is this is if we don't want to give that",
    "start": "1488510",
    "end": "1494210"
  },
  {
    "text": "an explicit name then we have the default name of it so we don't have to do any of the I'm getting this and now I",
    "start": "1494210",
    "end": "1500059"
  },
  {
    "text": "want to do that with it no it's just gonna be I want to do that and that's that's basically what that does good",
    "start": "1500059",
    "end": "1509330"
  },
  {
    "text": "stuff okay right so that was lesson one and any",
    "start": "1509330",
    "end": "1515990"
  },
  {
    "text": "other questions also super super clear good let's get the one about",
    "start": "1515990",
    "end": "1522980"
  },
  {
    "text": "implementing Copland into your projects there is I made a funny slide I remember",
    "start": "1522980",
    "end": "1531440"
  },
  {
    "text": "now it's with the Simpsons I haven't decided how to do this yet so this",
    "start": "1531440",
    "end": "1538250"
  },
  {
    "text": "you're you're gonna be the big the big experimental group so this is Homer",
    "start": "1538250",
    "end": "1543920"
  },
  {
    "text": "talking right Homer decided to change you need a little little little bit of",
    "start": "1543920",
    "end": "1549020"
  },
  {
    "text": "story here Homer at some point decided to change his name into max power don't",
    "start": "1549020",
    "end": "1556700"
  },
  {
    "text": "know why why he did did it well that's that's a part of the story as well but",
    "start": "1556700",
    "end": "1561740"
  },
  {
    "text": "let's not go into the details and now he's telling his kids what it's like to be that man so he says kids there are",
    "start": "1561740",
    "end": "1569990"
  },
  {
    "text": "three ways of doing things the right way the wrong way and the max power way cool",
    "start": "1569990",
    "end": "1577490"
  },
  {
    "text": "so Bart asks isn't that the wrong way and Homer says yes but faster",
    "start": "1577490",
    "end": "1585570"
  },
  {
    "text": "so let's talk about ways to make this change good so the first one is woohoo",
    "start": "1585570",
    "end": "1592919"
  },
  {
    "start": "1591000",
    "end": "1591000"
  },
  {
    "text": "do do do everything in coupling just throw out all that Java stuff it's all way too much and it's annoying and just",
    "start": "1592919",
    "end": "1600389"
  },
  {
    "text": "make it all nice and clean stuff get it to me provided that you were not super guru at",
    "start": "1600389",
    "end": "1609919"
  },
  {
    "text": "Coughlin yet and you and you've got some experience in Java this is probably a pretty bad idea",
    "start": "1610489",
    "end": "1618320"
  },
  {
    "text": "so that would I would call it the next power way of doing things although this",
    "start": "1618320",
    "end": "1623429"
  },
  {
    "text": "isn't the wrong way faster I must admit but still this is pretty pretty yeah pretty surely the other one",
    "start": "1623429",
    "end": "1629399"
  },
  {
    "text": "is to say well I really like the Scotland stuff it's really short and nice and I can do details and it's very",
    "start": "1629399",
    "end": "1635009"
  },
  {
    "text": "nice data class way and whoohoo let's use it only for the tests I don't really",
    "start": "1635009",
    "end": "1642210"
  },
  {
    "text": "get that to me that's also that's strange on my side but yeah so that's",
    "start": "1642210",
    "end": "1651840"
  },
  {
    "text": "also the wrong way because then you're losing out on on on a lot more fun that you would be having if you were to just",
    "start": "1651840",
    "end": "1658289"
  },
  {
    "text": "use it everywhere but then using it everywhere shouldn't be done all in one big big big blow but doing it step by",
    "start": "1658289",
    "end": "1666299"
  },
  {
    "text": "step so what did the team say when I when I said when when they sort of",
    "start": "1666299",
    "end": "1671759"
  },
  {
    "start": "1668000",
    "end": "1668000"
  },
  {
    "text": "joined and they said well ok we apparently are doing this thing so initially somebody said who is here",
    "start": "1671759",
    "end": "1679470"
  },
  {
    "text": "right now maybe they can do it what is this right because I'm used to Java",
    "start": "1679470",
    "end": "1684840"
  },
  {
    "text": "what is this crap about var and Val's this JavaScript or some something and",
    "start": "1684840",
    "end": "1691919"
  },
  {
    "text": "then pretty soon they get to the real realization and it actually works really",
    "start": "1691919",
    "end": "1697169"
  },
  {
    "text": "really well it's very it's a very intuitive way what I found is that apart",
    "start": "1697169",
    "end": "1703710"
  },
  {
    "text": "from setting up the initial application and doing the sort of the the hard parts",
    "start": "1703710",
    "end": "1710279"
  },
  {
    "text": "of making sure the framer works sort of the little nooks and crannies apart from",
    "start": "1710279",
    "end": "1716309"
  },
  {
    "text": "that it went really really smoothly in terms of a team that wasn't used to the language at all applying it and you",
    "start": "1716309",
    "end": "1723720"
  },
  {
    "text": "you choosing it and finding it really really nice to the point where they they",
    "start": "1723720",
    "end": "1730130"
  },
  {
    "text": "RiRi rejoined another Java thing and actually said you know I'd rather do the",
    "start": "1730130",
    "end": "1735450"
  },
  {
    "text": "co clean thing instead but you know its life so that's so that's that's really",
    "start": "1735450",
    "end": "1742440"
  },
  {
    "text": "really good however you cannot have this unless you do this in a smart way because you don't want to be the guy",
    "start": "1742440",
    "end": "1747870"
  },
  {
    "text": "that's that that that this that has to",
    "start": "1747870",
    "end": "1753179"
  },
  {
    "text": "tell the clients yeah we spent a week trying to figure out how this flatmap thing works and yeah for volunteer but I",
    "start": "1753179",
    "end": "1761850"
  },
  {
    "text": "don't know what luckily it never happened because we did it step by step we did the small stuff first the simple",
    "start": "1761850",
    "end": "1767670"
  },
  {
    "text": "stuff and then we incrementally took over the other classes as well but don't",
    "start": "1767670",
    "end": "1774570"
  },
  {
    "start": "1774000",
    "end": "1774000"
  },
  {
    "text": "be don't be the team that sort of ends up with some cause in Java and some some",
    "start": "1774570",
    "end": "1780450"
  },
  {
    "text": "in Koplin because then you're losing out on a lot of this simplicity that you",
    "start": "1780450",
    "end": "1787559"
  },
  {
    "text": "would be having because then you still have to keep in your mind oh yeah this is the way it's going to work in Java and and how does that work with the",
    "start": "1787559",
    "end": "1794040"
  },
  {
    "text": "getters in the setters and all that stuff just make sure that you're honest slow and steady road towards just a pure",
    "start": "1794040",
    "end": "1800850"
  },
  {
    "text": "of your cosine application that was",
    "start": "1800850",
    "end": "1807900"
  },
  {
    "text": "lesson two any questions about this",
    "start": "1807900",
    "end": "1812809"
  },
  {
    "text": "yeah",
    "start": "1813060",
    "end": "1815720"
  },
  {
    "text": "yeah so the question is how do you how do you introduce Kotlin on a on a on a",
    "start": "1821990",
    "end": "1828080"
  },
  {
    "text": "on a team that is already working on a big Java project basically I think",
    "start": "1828080",
    "end": "1835250"
  },
  {
    "text": "there's a there's a number of ways to do this the nice thing about cotton is that it's not you don't have to do it all in",
    "start": "1835250",
    "end": "1842330"
  },
  {
    "text": "Cortland so one of the sub steps might be to take for instance the tests say",
    "start": "1842330",
    "end": "1849980"
  },
  {
    "text": "well let me do a test let me create this test suite in Kotlin and see how far we can take this but if you want to get",
    "start": "1849980",
    "end": "1858140"
  },
  {
    "text": "people really riled up and enthusiastic let them let them do this on their own",
    "start": "1858140",
    "end": "1863149"
  },
  {
    "text": "have a session where you start saying well what if we could create this part",
    "start": "1863149",
    "end": "1868279"
  },
  {
    "text": "of the application again and then using this using this new thing and then",
    "start": "1868279",
    "end": "1873770"
  },
  {
    "text": "people actually get their hands on it instead of this guy that you know does does the new and hot stuff it becomes a",
    "start": "1873770",
    "end": "1880460"
  },
  {
    "text": "thing that's owned by the entire team that says hey we really really like this stuff we would like to do this as a team",
    "start": "1880460",
    "end": "1887899"
  },
  {
    "text": "learn this stuff and move towards this this this new thing so I think those are",
    "start": "1887899",
    "end": "1893860"
  },
  {
    "text": "those are the things that you could you could look duke at does that sort of",
    "start": "1893860",
    "end": "1900140"
  },
  {
    "text": "answer your question okay yeah you",
    "start": "1900140",
    "end": "1906340"
  },
  {
    "text": "productive member happens within two or three days I would say the change and",
    "start": "1917260",
    "end": "1924040"
  },
  {
    "text": "and then I'm talking about making cheap changes on existing code that is due to",
    "start": "1924040",
    "end": "1931780"
  },
  {
    "text": "a very intuitive API you know you have a list you would like to do something with",
    "start": "1931780",
    "end": "1936790"
  },
  {
    "text": "that list and that API is likely to have been written already so you don't have",
    "start": "1936790",
    "end": "1943420"
  },
  {
    "text": "to work around the API you just use the API so that's that's that's very very nice to become to actually master this",
    "start": "1943420",
    "end": "1950800"
  },
  {
    "text": "stuff there are a few sort of like I said nooks and crannies where work where",
    "start": "1950800",
    "end": "1957910"
  },
  {
    "text": "the the mix of Copelan with an existing framework will give you some sort of",
    "start": "1957910",
    "end": "1964740"
  },
  {
    "text": "some sort of headaches where you need some experience and need some time to",
    "start": "1964740",
    "end": "1970000"
  },
  {
    "text": "figure out how you should do this stuff so yeah that's that's that's the way",
    "start": "1970000",
    "end": "1977920"
  },
  {
    "text": "that I would describe it I would say with the team members that I've I've discussed this and and I don't see a",
    "start": "1977920",
    "end": "1985210"
  },
  {
    "text": "very steep learning curve as well because the interoperability is good so",
    "start": "1985210",
    "end": "1992590"
  },
  {
    "text": "if somebody says something like I want this list to be of type",
    "start": "1992590",
    "end": "1998640"
  },
  {
    "text": "arraylist for example which isn't a thing that you would need to do it would",
    "start": "1999059",
    "end": "2004380"
  },
  {
    "text": "still accept it it would still say yeah sure fine I'll make this an aerialist you know but it'll yeah they'll just say",
    "start": "2004380",
    "end": "2011010"
  },
  {
    "text": "fine I'll turn it into my own little coupling list and and move on so in that",
    "start": "2011010",
    "end": "2016350"
  },
  {
    "text": "respect it's very forgiving in its syntax as well and then of course you need to have in mind that you sometimes",
    "start": "2016350",
    "end": "2022860"
  },
  {
    "text": "clean it up and say well where do we get a lot of java.util things let's let's",
    "start": "2022860",
    "end": "2031350"
  },
  {
    "text": "clean that stuff out because we don't need it but yeah so that's the way we go",
    "start": "2031350",
    "end": "2038240"
  },
  {
    "text": "answer your question another question there in the back yeah",
    "start": "2038240",
    "end": "2044059"
  },
  {
    "text": "I didn't and I'm going to talk about it in in in minutes we basically used JJ",
    "start": "2049320",
    "end": "2057138"
  },
  {
    "text": "units for it any other questions okay cool so here I",
    "start": "2057139",
    "end": "2067200"
  },
  {
    "text": "here I get to talk about sort of the problems that can be constant one hand in other words there are very few",
    "start": "2067200",
    "end": "2072629"
  },
  {
    "text": "problems in far foreign widening between so first of all you get the interoperability with Java very simple",
    "start": "2072630",
    "end": "2079230"
  },
  {
    "start": "2075000",
    "end": "2075000"
  },
  {
    "text": "example of this is let's look at collections transformer again this code",
    "start": "2079230",
    "end": "2086490"
  },
  {
    "text": "has more lines than the Copelan than a",
    "start": "2086490",
    "end": "2091820"
  },
  {
    "text": "kolten Wong well the cotinine one actually also has",
    "start": "2091820",
    "end": "2097740"
  },
  {
    "text": "it also has the classes of the objects that were that we're working on and the java one actually you chooses that so",
    "start": "2097740",
    "end": "2107580"
  },
  {
    "text": "just it gets a report which isn't the java class it's just a a class that we",
    "start": "2107580",
    "end": "2114360"
  },
  {
    "text": "declared here and then we get you know we get our study getters and setters and all that stuff just just out of the",
    "start": "2114360",
    "end": "2122340"
  },
  {
    "text": "books which is again very very nice if you're gonna be building a part of this",
    "start": "2122340",
    "end": "2128190"
  },
  {
    "text": "in Koplin you're going to be able to use",
    "start": "2128190",
    "end": "2133320"
  },
  {
    "text": "that in java and the other way other way around as well",
    "start": "2133320",
    "end": "2140330"
  },
  {
    "text": "next to that some i already talked about the lists and their errand lists and stuff like that",
    "start": "2140720",
    "end": "2146700"
  },
  {
    "text": "next to that is when in java you do declare a string that turns into a",
    "start": "2146700",
    "end": "2152250"
  },
  {
    "text": "string that may be no so here you find some clashes with frameworks where are",
    "start": "2152250",
    "end": "2157410"
  },
  {
    "text": "you saying well this is going to be a string but you know it turns into a string that may be no and now you have",
    "start": "2157410",
    "end": "2162900"
  },
  {
    "text": "to deal with all these things that may be mill while you're really certain that they're that they're not know so yeah",
    "start": "2162900",
    "end": "2170690"
  },
  {
    "text": "let's look at a bit little bit a little bit of jackson because it in the pins",
    "start": "2170690",
    "end": "2176880"
  },
  {
    "text": "the rest stuff that spring does and I think it's a nice way to sort of start simply which the length of this code",
    "start": "2176880",
    "end": "2186630"
  },
  {
    "text": "will reveal okay so what I did is a very simple mapper and just just a few",
    "start": "2186630",
    "end": "2198870"
  },
  {
    "text": "examples of this of this thing let me run it so yes so I have a class that I",
    "start": "2198870",
    "end": "2210120"
  },
  {
    "text": "would like to read I would do it like this basically passing in a type parameter saying well this is supposed",
    "start": "2210120",
    "end": "2215970"
  },
  {
    "text": "to be an instance of this type and then and then passing in the Jade Jade JSON",
    "start": "2215970",
    "end": "2223050"
  },
  {
    "text": "string what I did is I added a couple of interesting things here first of all I",
    "start": "2223050",
    "end": "2229770"
  },
  {
    "text": "made a data class which is a shorthand way to declare a class you immediately get to you only have to write this part",
    "start": "2229770",
    "end": "2237270"
  },
  {
    "text": "basically and that just deep yet",
    "start": "2237270",
    "end": "2242840"
  },
  {
    "text": "declares the entire thing from setters to gathers to do all the things what is",
    "start": "2243410",
    "end": "2252390"
  },
  {
    "text": "what is then interesting to see is that we can have we can have an ID that has",
    "start": "2252390",
    "end": "2258930"
  },
  {
    "text": "to be there but the description need needs the description need not so if we",
    "start": "2258930",
    "end": "2265860"
  },
  {
    "text": "skip that it becomes know what is and",
    "start": "2265860",
    "end": "2271530"
  },
  {
    "text": "the same thing goes for the fancy code and the and these awesome actually does",
    "start": "2271530",
    "end": "2277950"
  },
  {
    "text": "need to be there we also see that we're getting default value values which",
    "start": "2277950",
    "end": "2283770"
  },
  {
    "text": "doesn't make me super happy for instance for the falls and for the zero but you know that's that's I guess what we get",
    "start": "2283770",
    "end": "2290790"
  },
  {
    "text": "I'll get back to that in a minute what is nice here is that we can override the not to my liking feature of",
    "start": "2290790",
    "end": "2300920"
  },
  {
    "text": "removing the is prefix from from JSON",
    "start": "2300920",
    "end": "2307920"
  },
  {
    "text": "objects so we can just pass in an actual thing that actually matches the field that we",
    "start": "2307920",
    "end": "2313810"
  },
  {
    "text": "want to fill which I like better than the other way so then we have to do this sort of new to me annotation that allows",
    "start": "2313810",
    "end": "2322090"
  },
  {
    "text": "us to to to manipulate how the value is",
    "start": "2322090",
    "end": "2327940"
  },
  {
    "text": "set so that's one the second thing is very nice it's a DC réaliser for in this",
    "start": "2327940",
    "end": "2334000"
  },
  {
    "text": "case a sort of a magically formatted string which I would like to have inside",
    "start": "2334000",
    "end": "2339430"
  },
  {
    "text": "of an object so here I create a D serializer that goes into goes into the",
    "start": "2339430",
    "end": "2346180"
  },
  {
    "text": "JSON node tree and sort of gets that string if it's there and otherwise doesn't well it's nice here to see or",
    "start": "2346180",
    "end": "2353830"
  },
  {
    "text": "what is interesting here to see is that we have here an annotation that indicates that that we're doing an",
    "start": "2353830",
    "end": "2359260"
  },
  {
    "text": "overload on a java class for the",
    "start": "2359260",
    "end": "2364270"
  },
  {
    "text": "constructor here was also nice to see is that we immediately can pass the value that we got here immediately into there",
    "start": "2364270",
    "end": "2371230"
  },
  {
    "text": "we're in Java you would do a constructor which then calls super etc etc here we",
    "start": "2371230",
    "end": "2379390"
  },
  {
    "text": "can just have that within that one line saying well this maps directly to that argument on the on the class that we are",
    "start": "2379390",
    "end": "2386290"
  },
  {
    "text": "extending which i think is a nice feature as well any questions about this",
    "start": "2386290",
    "end": "2393510"
  },
  {
    "text": "none yet yeah I don't have any questions prepared so either you're gonna have to",
    "start": "2393780",
    "end": "2399600"
  },
  {
    "text": "eat the chocolates on your own or if you have any questions you can pass it to",
    "start": "2399600",
    "end": "2404770"
  },
  {
    "text": "the room okay sorry I should have told you okay so that's Jackson yes",
    "start": "2404770",
    "end": "2417060"
  },
  {
    "text": "yeah",
    "start": "2417500",
    "end": "2420500"
  },
  {
    "text": "that is a good question and I don't have an answer for you for that and B yeah",
    "start": "2424380",
    "end": "2433970"
  },
  {
    "text": "how does it differ from any is that a what can anybody indicate the difference",
    "start": "2437140",
    "end": "2444260"
  },
  {
    "text": "between that there's also in any sort of rude rude okay rise okay",
    "start": "2444260",
    "end": "2455530"
  },
  {
    "text": "okay okay so it's really it's really beyond that it doesn't need to be",
    "start": "2461090",
    "end": "2466460"
  },
  {
    "text": "anything basic basically",
    "start": "2466460",
    "end": "2469570"
  },
  {
    "text": "okay oh cool that's cool I didn't didn't dive into that yet",
    "start": "2476510",
    "end": "2484630"
  },
  {
    "text": "alright next is clauses are final by",
    "start": "2484630",
    "end": "2491090"
  },
  {
    "start": "2488000",
    "end": "2488000"
  },
  {
    "text": "default which is absolutely great when you're not using any frameworks because then you get exactly what you want you",
    "start": "2491090",
    "end": "2496670"
  },
  {
    "text": "want everything to be final and fixed unless you open it up you know this is this is a new way of doing things and we",
    "start": "2496670",
    "end": "2502160"
  },
  {
    "text": "really love it I love it for valve values but for classes hmm it's sort of",
    "start": "2502160",
    "end": "2508490"
  },
  {
    "text": "it's sort of annoying because we used to not we used to not know which was nice",
    "start": "2508490",
    "end": "2513890"
  },
  {
    "text": "spring would do all kinds of magic stuff extending our classes and wrapping it around things and and and I used to not",
    "start": "2513890",
    "end": "2521840"
  },
  {
    "text": "not be really really prayer of that and",
    "start": "2521840",
    "end": "2526970"
  },
  {
    "text": "now we have to we have to do that because it turns out that any of the",
    "start": "2526970",
    "end": "2532760"
  },
  {
    "text": "classes that are annotated with this stuff actually need to be open because",
    "start": "2532760",
    "end": "2538400"
  },
  {
    "text": "they will be extended at runtime so we can do this in two ways you can either",
    "start": "2538400",
    "end": "2543710"
  },
  {
    "text": "go through our code and at the open word for all the things that we know spring will extend or we centralize that",
    "start": "2543710",
    "end": "2550550"
  },
  {
    "text": "knowledge and use the coupling all open",
    "start": "2550550",
    "end": "2555640"
  },
  {
    "text": "hmm ergun for which you see the Gradle",
    "start": "2555640",
    "end": "2561260"
  },
  {
    "text": "syntax and sort of add the list of annotations that we for which we want",
    "start": "2561260",
    "end": "2566960"
  },
  {
    "text": "the class and the methods to be fully open which is nice I can show the Gradle",
    "start": "2566960",
    "end": "2572869"
  },
  {
    "text": "file but it doesn't show anything more than this so I'll forego that any questions or observations about this",
    "start": "2572869",
    "end": "2580569"
  },
  {
    "text": "excellent then I guess the knowledge is centralized which would be nice indeed",
    "start": "2584359",
    "end": "2589460"
  },
  {
    "text": "that's good",
    "start": "2589460",
    "end": "2592450"
  },
  {
    "start": "2594000",
    "end": "2594000"
  },
  {
    "text": "so about the interoperability with framework so like I already mentioned a bunch of these frameworks will say well",
    "start": "2594980",
    "end": "2601489"
  },
  {
    "text": "this returns a string in Java and that 10 turns into a string which may be no in Koplin which is really annoying for",
    "start": "2601489",
    "end": "2608690"
  },
  {
    "text": "stuff for which you just know that it's gonna be a string and if it's not a string then just give me an error I",
    "start": "2608690",
    "end": "2614630"
  },
  {
    "text": "don't want to deal with this stuff luckily with spring boot 2 they added a",
    "start": "2614630",
    "end": "2620329"
  },
  {
    "text": "lot of annotations saying specifically this is not never going to be known so that's that's really a useful useful",
    "start": "2620329",
    "end": "2627130"
  },
  {
    "text": "development for Kotlin a 2 point where where spring accurately talks about yeah",
    "start": "2627130",
    "end": "2635059"
  },
  {
    "text": "this is this is an optimization for Kaufmann and this is how you you choose",
    "start": "2635059",
    "end": "2640880"
  },
  {
    "text": "it so next to the Android stack now also spring actively looks at this language",
    "start": "2640880",
    "end": "2646519"
  },
  {
    "text": "as a serious serious option let's look a little bit at the rest controller there",
    "start": "2646519",
    "end": "2652779"
  },
  {
    "text": "yeah time cool that is ridiculous",
    "start": "2652779",
    "end": "2660670"
  },
  {
    "text": "so what I did here is I wanted to go",
    "start": "2661390",
    "end": "2666589"
  },
  {
    "text": "pretty deep into this which basically in the end is your argument against using",
    "start": "2666589",
    "end": "2672140"
  },
  {
    "text": "data classes but it and it may be due to my lack of lack of understanding so I",
    "start": "2672140",
    "end": "2677269"
  },
  {
    "text": "would really like to I basically may made three three alternative ways of reading a JSON",
    "start": "2677269",
    "end": "2684650"
  },
  {
    "text": "object and actually sponsoring it back in to whomever sent it and the sort of",
    "start": "2684650",
    "end": "2692210"
  },
  {
    "text": "the most the most long way is the only way that that actually gives me what I",
    "start": "2692210",
    "end": "2697400"
  },
  {
    "text": "want but it's also a bit weird because I annotate a field to not be no and then I",
    "start": "2697400",
    "end": "2703549"
  },
  {
    "text": "say yeah that thing maybe no which sucks to me but the only thing that actually",
    "start": "2703549",
    "end": "2710509"
  },
  {
    "text": "works it actually gives me an error when I send ID that is no it actually says this is this is wrong",
    "start": "2710509",
    "end": "2716779"
  },
  {
    "text": "etc etc let's see if I've got that thing open five minutes",
    "start": "2716779",
    "end": "2724009"
  },
  {
    "text": "that's depressing so let's look at that",
    "start": "2724009",
    "end": "2729410"
  },
  {
    "text": "so I removed the idea from the coal and I get a wonderful in 17 fold error that",
    "start": "2729410",
    "end": "2735230"
  },
  {
    "text": "says somebody give me give me a handle I can't get a handle there it is",
    "start": "2735230",
    "end": "2742849"
  },
  {
    "text": "just above the line of course so I give a 7 I get a huge huge amount of",
    "start": "2742849",
    "end": "2748730"
  },
  {
    "text": "information that tells me this one field is missing which is gay I guess what I wanted or or I should do something with",
    "start": "2748730",
    "end": "2755599"
  },
  {
    "text": "this exception on the back end that makes it shorter but if I use any of the other methods I get again my dreaded",
    "start": "2755599",
    "end": "2761539"
  },
  {
    "text": "zero default for for for missing stuff and then I try it another way I get the",
    "start": "2761539",
    "end": "2766609"
  },
  {
    "text": "same thing so not not super not super happy about that does anybody have any",
    "start": "2766609",
    "end": "2773089"
  },
  {
    "text": "experience with that and sort of did this in a nicer way that they solve this",
    "start": "2773089",
    "end": "2778809"
  },
  {
    "text": "sorry I want to get an error when I pass in know for an ID or missing the half",
    "start": "2778809",
    "end": "2787279"
  },
  {
    "text": "the field missing and I would I would",
    "start": "2787279",
    "end": "2792410"
  },
  {
    "text": "actually I would like to say this and in fact I would like to also say this this",
    "start": "2792410",
    "end": "2798950"
  },
  {
    "text": "is gonna be set only once so I don't want this I want to see this doesn't",
    "start": "2798950",
    "end": "2806420"
  },
  {
    "text": "work but I I would be seeing this because this thing is sense and I don't",
    "start": "2806420",
    "end": "2812089"
  },
  {
    "text": "want to change I don't want anybody to change this this this thing because this is what the client said I don't want anybody to",
    "start": "2812089",
    "end": "2818089"
  },
  {
    "text": "operate on it I want to have that very very very tight my mitts I have in fact",
    "start": "2818089",
    "end": "2826119"
  },
  {
    "text": "this this should be enough right the ad not know is not even necessary but let's suppose that I'm sort of",
    "start": "2826119",
    "end": "2832960"
  },
  {
    "text": "flexible fine but that should should really not be there so that's what I",
    "start": "2832960",
    "end": "2839000"
  },
  {
    "text": "would like to achieve that's on VARs and that's that doesn't",
    "start": "2839000",
    "end": "2847200"
  },
  {
    "text": "do well for forints I think was a yeah",
    "start": "2847200",
    "end": "2852359"
  },
  {
    "text": "it's gonna say that it's not allowed on primitive types so then what I then",
    "start": "2852359",
    "end": "2858359"
  },
  {
    "text": "would do is I would have a bunch of these fields that would be that but then the ins wouldn't be that which is also",
    "start": "2858359",
    "end": "2863810"
  },
  {
    "text": "making making my face go all frowny and stuff so yeah I I remember something",
    "start": "2863810",
    "end": "2871020"
  },
  {
    "text": "about five minutes so unless somebody now says oh you wanted to do that that's easy just use let no okay yeah cool",
    "start": "2871020",
    "end": "2891660"
  },
  {
    "text": "thanks excellent so that was some time",
    "start": "2891660",
    "end": "2897720"
  },
  {
    "text": "ago no those five minutes let's go and oh yeah about the tests I don't want you guys to miss out on that and neither",
    "start": "2897720",
    "end": "2904619"
  },
  {
    "text": "would Adele right transformer test so",
    "start": "2904619",
    "end": "2913980"
  },
  {
    "text": "very very very simple the most basic basic form of test it's just the thing that oh yeah I have to show you the",
    "start": "2913980",
    "end": "2920280"
  },
  {
    "text": "transformer class that transforms a string and does basically what the anonymous function did in the past I just want to make it simple but have a",
    "start": "2920280",
    "end": "2926400"
  },
  {
    "text": "class around it so it turns a string into an int fine and the test then says well assert that",
    "start": "2926400",
    "end": "2932460"
  },
  {
    "text": "that transformer is actually actually think the only thing that's that's sort of annoying and interesting here is that",
    "start": "2932460",
    "end": "2938730"
  },
  {
    "text": "because this is a keyword we have to do the backticks thing which is annoying",
    "start": "2938730",
    "end": "2944970"
  },
  {
    "text": "but you know well we'll get used to that I guess then we have something that does",
    "start": "2944970",
    "end": "2953310"
  },
  {
    "text": "sort of a dependency injection so it says well this is a surface and it gets a transformer I don't know what the",
    "start": "2953310",
    "end": "2958589"
  },
  {
    "text": "transformer is but when I get it I'm going to call that transform on a transformer from I transform friction on",
    "start": "2958589",
    "end": "2963869"
  },
  {
    "text": "said something about transformers so so how do we deal with that we we we make",
    "start": "2963869",
    "end": "2972150"
  },
  {
    "text": "Mach now we again get the tactics for when because there's also a wind thing and we get and now sort of a little bit",
    "start": "2972150",
    "end": "2980310"
  },
  {
    "text": "of a nastiness which is which is a framework issue that we have to pass in the Java flavor of the class now okay",
    "start": "2980310",
    "end": "2986640"
  },
  {
    "text": "well there are there are ways and means to get around that but it basically ends up making and making a function that",
    "start": "2986640",
    "end": "2992970"
  },
  {
    "text": "does it for you and it can be is and etc we can mock that stuff what is",
    "start": "2992970",
    "end": "3000160"
  },
  {
    "text": "interesting to see is that that class then has to be open for mojito to work",
    "start": "3000160",
    "end": "3006260"
  },
  {
    "text": "it needs to be able to to extend that class so and if let me see that's sort",
    "start": "3006260",
    "end": "3014270"
  },
  {
    "text": "of that yeah I can show you what all the stuff that happens when you don't do that there is example for closed class",
    "start": "3014270",
    "end": "3021920"
  },
  {
    "text": "that fails a an open class with a close method that fails and then something",
    "start": "3021920",
    "end": "3027589"
  },
  {
    "text": "that's open it actually works in line",
    "start": "3027589",
    "end": "3040359"
  },
  {
    "text": "okay",
    "start": "3040540",
    "end": "3043290"
  },
  {
    "text": "and it's instead of the standard mojito okay yeah yeah by an hire month or",
    "start": "3046440",
    "end": "3056099"
  },
  {
    "text": "something like that right yeah yeah I'm using that one as well but then that",
    "start": "3056099",
    "end": "3061710"
  },
  {
    "text": "doesn't open your classes I think it just gives yeah yeah excellent good good",
    "start": "3061710",
    "end": "3067410"
  },
  {
    "text": "point Thanks any other questions yes",
    "start": "3067410",
    "end": "3071240"
  },
  {
    "text": "what's your xx question",
    "start": "3078390",
    "end": "3081769"
  },
  {
    "text": "yes that may be true by the time I tried",
    "start": "3086170",
    "end": "3091790"
  },
  {
    "text": "mojito - it didn't interoperate well or it was an experimental feature that that",
    "start": "3091790",
    "end": "3097340"
  },
  {
    "text": "that did the class extension in that I don't know if it's stabilized now but",
    "start": "3097340",
    "end": "3103630"
  },
  {
    "text": "okay okay oh that's that's good that's that's",
    "start": "3104470",
    "end": "3112260"
  },
  {
    "text": "a great one as well thank you for for that great okay we are probably in the",
    "start": "3112260",
    "end": "3121230"
  },
  {
    "text": "negative only amounts of minutes left so let's go on oh yeah",
    "start": "3121230",
    "end": "3127049"
  },
  {
    "text": "future lessons so I'm I'm almost there that's that's that's good so the fancy stuff we haven't used yet",
    "start": "3127049",
    "end": "3132690"
  },
  {
    "text": "so we didn't use the routines I heard one or two people be really excited",
    "start": "3132690",
    "end": "3140250"
  },
  {
    "text": "about that we don't use lazy evaluation yet although it's it's a pretty nice nice",
    "start": "3140250",
    "end": "3147089"
  },
  {
    "text": "feature and there's an example which I would show you we don't use to copelan",
    "start": "3147089",
    "end": "3154190"
  },
  {
    "text": "to your cell and said of the gradle standard one I looked into it shortly",
    "start": "3156559",
    "end": "3162510"
  },
  {
    "text": "but then I ran into API troubles and I was like Gradle still has some issues",
    "start": "3162510",
    "end": "3167730"
  },
  {
    "text": "and we don't use dear cells in general and we have looked at cotton native or any any other of that other language",
    "start": "3167730",
    "end": "3175140"
  },
  {
    "text": "stuff so not on the client side not on the JavaScript side either um concluding thoughts yeah it's free",
    "start": "3175140",
    "end": "3182819"
  },
  {
    "start": "3181000",
    "end": "3181000"
  },
  {
    "text": "lessons I hope that's come across so it's cool I really like it really really enjoy that it's so easy to learn but if",
    "start": "3182819",
    "end": "3190920"
  },
  {
    "text": "you do this do it step by step really have the advantage of using Java and Kotlin next to each other for some time",
    "start": "3190920",
    "end": "3197579"
  },
  {
    "text": "at least to make sure that you're not inside of a new world where you're like yeah I used to be a really good Java",
    "start": "3197579",
    "end": "3202650"
  },
  {
    "text": "developer and now I suck at this so sorry client you have to wait for three weeks before I figure it stuff out",
    "start": "3202650",
    "end": "3208680"
  },
  {
    "text": "don't be at that at that point that's not good and then but the problems that",
    "start": "3208680",
    "end": "3213750"
  },
  {
    "text": "you will hit are really really minor or really limited in number so yeah that's",
    "start": "3213750",
    "end": "3220170"
  },
  {
    "text": "it you",
    "start": "3220170",
    "end": "3226109"
  }
]