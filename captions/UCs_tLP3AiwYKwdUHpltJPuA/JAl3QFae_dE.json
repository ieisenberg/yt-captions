[
  {
    "start": "0",
    "end": "147000"
  },
  {
    "text": "Good morning, good afternoon, good evening \nwherever you are and whenever you are. My   name is Kevlin Henney and we are recording this \ninterview at GOTO Amsterdam 2022, which has been  ",
    "start": "12840",
    "end": "24360"
  },
  {
    "text": "delayed from 2020. But here we are at last and \nI'm joined by Sander Hoogendoorn. What is it  ",
    "start": "24360",
    "end": "32340"
  },
  {
    "text": "you're doing these days? Tell us about yourself.\nOh, yeah. Well, lots of stuff actually. I'm really  ",
    "start": "32340",
    "end": "39120"
  },
  {
    "text": "happy that we can get back on stage, right? \nThat's really part of the joy in this industry.  ",
    "start": "39120",
    "end": "43800"
  },
  {
    "text": "I'm the CTO for an eCommerce company actually. \nI'm trying to, well, move my team in directions  ",
    "start": "46200",
    "end": "53340"
  },
  {
    "text": "that I think they should move. That includes \nboth the architecture and the structure and how  ",
    "start": "53340",
    "end": "59040"
  },
  {
    "text": "they collaborate and autonomy and how to write \ncode and how to test and how to do TDD and DDD  ",
    "start": "59040",
    "end": "65220"
  },
  {
    "text": "and all this stuff. And...\nSo software development.  Yes.\nEverything.  Yes. And I spend a lot of time writing code, \nactually, so it's...then I truly enjoy that. ",
    "start": "65220",
    "end": "74460"
  },
  {
    "text": "That really came out. So, you've just done \na keynote here, the Zen of Programming, and  ",
    "start": "77280",
    "end": "84060"
  },
  {
    "text": "there's a lot of talks which have the \"Zen of,\" \nbut yours actually does actually work for that. Oh, thank you.\nBecause it was very  ",
    "start": "84060",
    "end": "90899"
  },
  {
    "text": "much a personal journey. It was very much the \nconsistent theme of simplification. Rather than  ",
    "start": "90900",
    "end": "97800"
  },
  {
    "text": "being a list of, here's a bunch of individual \ncoherent things that are specific pieces of  ",
    "start": "97800",
    "end": "104940"
  },
  {
    "text": "vice principles or practice, whatever, is that \nit mixed a bit of that but they were lessons   and it was genuinely a story. Out of it, it \nincluded everything from \"Hey, monads,\" to,  ",
    "start": "104940",
    "end": "119340"
  },
  {
    "text": "\"Take your mother out more,\" but actually there \nwas a properly resonant theme of simplification.  ",
    "start": "119340",
    "end": "126179"
  },
  {
    "text": "Really, that came through, which I kind of, \nlike, I have to say, that was very nice.   And there was code, most of which you said, \"Yeah, \nthis code, I touched it yesterday.\" And that was  ",
    "start": "126900",
    "end": "136379"
  },
  {
    "text": "very, very clear. But that constant journey \ntowards simplicity is...you made some really  ",
    "start": "136380",
    "end": "142920"
  },
  {
    "text": "interesting points about complexity to get to \nthat. So that whole idea is the Neil Ford quote,  ",
    "start": "142920",
    "end": "150180"
  },
  {
    "start": "147000",
    "end": "459000"
  },
  {
    "text": "that developers are...\nI love that quote actually. It's a fantastic quote. Developers are drawn to \ncomplexity like moths to a flame and often with  ",
    "start": "150180",
    "end": "159060"
  },
  {
    "text": "the same result. And that's something \nyou see a lot of. Why do we do this?  ",
    "start": "159060",
    "end": "165840"
  },
  {
    "text": "Why do we do this to ourselves?\nThat is a good question, I've been wondering   the same question actually for years, I suppose, \nand it's... I don't know, actually. It's like we  ",
    "start": "165840",
    "end": "179640"
  },
  {
    "text": "all do this, right? We are constantly saying, \n\"Oh, let's pick that up too, and let's do that,  ",
    "start": "179640",
    "end": "186900"
  },
  {
    "text": "and let's try this too.\" Then it becomes bigger \nand bigger and bigger. Then somebody comes up   with a new framework or a new technology \nor whatever, and they're like, \"Oh, yeah,  ",
    "start": "186900",
    "end": "195720"
  },
  {
    "text": "that would be a much better solution to do this,\" \nbefore even having delivered anything, right?  So, we tend to add stuff to what we do before we \nactually push it out to business or to whoever,  ",
    "start": "195720",
    "end": "206579"
  },
  {
    "text": "right, which makes it more complex all the time. \nThe problem is with complexity, you can never get  ",
    "start": "206580",
    "end": "213720"
  },
  {
    "text": "rid of it. So, it actually started this idea about \ntalking about making it simpler when I was doing  ",
    "start": "213720",
    "end": "223980"
  },
  {
    "text": "consultancy for a large bank in the Netherlands. \nWell, I probably shouldn't mention the name, but  ",
    "start": "225000",
    "end": "231300"
  },
  {
    "text": "they're here anyway. And a couple of years ago, \nby the way, and they had an 11-layer architecture. ",
    "start": "231300",
    "end": "236580"
  },
  {
    "text": "Oh, wow. Okay. That's a winner.\nMade up entirely by architects who never code,   right? And there was no way they could ever \ndeliver any software, so they took, like,  ",
    "start": "236580",
    "end": "247140"
  },
  {
    "text": "a small project and it took 300 people for two \nand a half years to actually deliver a small   part of it. So, that's the kind of culture \nthat a lot of companies come from, right? ",
    "start": "247140",
    "end": "257459"
  },
  {
    "text": "And the second thing that also changes when I \nstopped working for large consultancies, which is  ",
    "start": "257460",
    "end": "264479"
  },
  {
    "text": "about eight years ago. So, I worked for Capgemini \nand for Ordina, which is a Dutch consultancy firm,  ",
    "start": "264480",
    "end": "270960"
  },
  {
    "text": "and CMG, which is now CGI, I think, and \nthey all make stuff more complex because  ",
    "start": "270960",
    "end": "277680"
  },
  {
    "text": "well that's where the money is basically, right? \nSo, it's better to sell 300 people than sell 2. ",
    "start": "277680",
    "end": "282780"
  },
  {
    "text": "Also when I moved away from that, I \nstopped working for larger organizations   because they all have this culture \nof making everything more complex,  ",
    "start": "285420",
    "end": "292740"
  },
  {
    "text": "and I wanted to go in the opposite direction \nbasically. So I started working for companies  ",
    "start": "292740",
    "end": "298080"
  },
  {
    "text": "that became smaller and smaller and smaller. \nAnd that is...I like that a lot more these days. ",
    "start": "298080",
    "end": "303539"
  },
  {
    "text": "There's an interesting thing there. There's \ntwo themes that seem to emerge there. One is  ",
    "start": "303540",
    "end": "308580"
  },
  {
    "text": "the additive nature of how we try and \nsolve things. It's always by addition,   it's very rarely by removal.\nYeah, we never take anything out. ",
    "start": "309240",
    "end": "316980"
  },
  {
    "text": "You made an interesting point when you talk about \nimprovement of skill, which is that there may be  ",
    "start": "318780",
    "end": "324540"
  },
  {
    "text": "jumps in your improvement of skill, but often if \nyou look closely, there is a dip before that. That  ",
    "start": "324540",
    "end": "332580"
  },
  {
    "text": "what happens is that true learning doesn't come \nabout purely by addition of knowledge. It comes  ",
    "start": "332580",
    "end": "339060"
  },
  {
    "text": "about by reformation of knowledge. It comes about \nby unlearning and rewiring and throwing stuff out. ",
    "start": "339060",
    "end": "345480"
  },
  {
    "text": "Having epiphanies. I like that word actually.\nExactly. So, there's this kind of moment,   there's ka-chunk, something happens \nand it's not always up. There's a down,  ",
    "start": "345480",
    "end": "353280"
  },
  {
    "text": "we become less effective for a period.\nThat is because you have to try out stuff,   right? It's the experimental phase.\nThat feels like if we want to get simplicity,  ",
    "start": "353280",
    "end": "362820"
  },
  {
    "text": "then we are gonna have to get better at \nthe recognition that this is a learning   exercise, and that means throwing stuff away.\nThat is exactly what organizations need to do,  ",
    "start": "362820",
    "end": "371220"
  },
  {
    "text": "right? And they need to start understanding that \nlearning is the...basically the core concept of   how we improve, of how we...well, that makes \nsense, but how we get better at delivering  ",
    "start": "371220",
    "end": "380880"
  },
  {
    "text": "software.\nYes. And not by repeating ourselves. There's lots of \npeople who are in the industry that just repeat  ",
    "start": "380880",
    "end": "386760"
  },
  {
    "text": "what they do all the time, right? And they \ndeliver the same thing that they delivered   all the time. But that doesn't make you better. \nI think it's like...a lot of people say, \"Oh,  ",
    "start": "386760",
    "end": "397440"
  },
  {
    "text": "this is what I can do.\" Whether that's React \nor they can just build a functional component   and whether it's doing Java, right? Lots of people \nin Java are building the same code in exactly the  ",
    "start": "397440",
    "end": "409800"
  },
  {
    "text": "same way as they did, like, five years ago.\nYes.  SpringOne, basically, that's okay. Everything \nSpring and Spring Boot and that's the way you  ",
    "start": "409800",
    "end": "418979"
  },
  {
    "text": "write code. No discussion. And they like \nthat actually, which is really good. Those   are the people like my mom, right, who \nwent to the same campsite for 25 years,  ",
    "start": "418980",
    "end": "426479"
  },
  {
    "text": "and never questioned whether to go somewhere else. \nAnd that's also good because you need lots of   those people in this industry as well. It's just \nnot what I do. It's like, I like to discover new  ",
    "start": "427980",
    "end": "438360"
  },
  {
    "text": "stuff. That's not about learning a new language \nor learning a new framework. I couldn't care less.   But it's about making code that is slightly more \nbeautiful, more elegant than it was yesterday.  ",
    "start": "438360",
    "end": "449640"
  },
  {
    "text": "And the funny thing is, in the 44 years that \nI've been doing this, there's always a step up.",
    "start": "451380",
    "end": "459060"
  },
  {
    "start": "459000",
    "end": "850000"
  },
  {
    "text": "That's a really interesting one. \nBecause there's that idea of the   beauty of the code. In other words, that idea \nof coming back to it and there's kind of like,  ",
    "start": "460920",
    "end": "469319"
  },
  {
    "text": "have I left something here that somebody \nelse will appreciate, myself included,   but other people won't curse my \nname when they come to this code? ",
    "start": "469320",
    "end": "476940"
  },
  {
    "text": "They will.\nBut it's that idea of like,   maybe they'll curse me less, you know? But our \nidea of beauty changes over time. We know more,  ",
    "start": "477720",
    "end": "486480"
  },
  {
    "text": "we get older, we develop technologies.\nThat's the same with everything in life,   right? So, when I was 19 I used to date \n19-year-old girls, right? And those were  ",
    "start": "486480",
    "end": "496560"
  },
  {
    "text": "the best at those times. If I now look at my kids \nor friends of my kids, I'm like, I would never be  ",
    "start": "496560",
    "end": "502919"
  },
  {
    "text": "able to date people like this anymore, right? \nI'm much more happier with someone who, well,   is more mature or well-aged or whatever you call \nit, but we change our perspective all the time. ",
    "start": "502920",
    "end": "515159"
  },
  {
    "text": "And also there, there's big steps, \nright? Well, there's these holes,   right? I went to a really deep hole in 2009, 2010 \nwhen I got this huge burnout. Then I realized,  ",
    "start": "515760",
    "end": "527340"
  },
  {
    "text": "well, it's the same. You add more stuff to \nyour life and it's too complex. You cannot  ",
    "start": "528900",
    "end": "534360"
  },
  {
    "text": "do it anymore, so you have to move back to \nsimplicity. And I took a deep plunge and I   sort of, well, stripped out everything \nthat wasn't really important or fun. ",
    "start": "534360",
    "end": "544860"
  },
  {
    "text": "You mentioned that in your talk as well, the whole \nkind of prioritization, it's just like, \"Okay,   gotta get back to... What's all this other stuff? \nWhat are the things that I don't enjoy, that,  ",
    "start": "546840",
    "end": "555720"
  },
  {
    "text": "you know, don't bring me joy, don't add value?\"\nAnd I literally ask myself those questions,   like, well, do I really enjoy doing this? If \nnot, I stop doing it. And that's... And I'm  ",
    "start": "555720",
    "end": "565800"
  },
  {
    "text": "not sure a lot of people do that actually. \nAnd that's okay by the way, right? It's not   worse or better, it's just what I do.\nBut I also think that that plays out,  ",
    "start": "565800",
    "end": "574740"
  },
  {
    "text": "that's a very...I guess most people don't do \nthat, most of the time, and when we do do it,  ",
    "start": "574740",
    "end": "580500"
  },
  {
    "text": "it's normally as a result of an event. It's just \nlike, \"Ah, maybe I need to reevaluate things.\" But   I think that also goes to the nature of how we \nwork, more broadly, not just personally. And I  ",
    "start": "580500",
    "end": "591600"
  },
  {
    "text": "think that that's kind of an interesting one.\nWe are looking for...again, it's the additive  ",
    "start": "591600",
    "end": "596819"
  },
  {
    "text": "thing. We add stuff rather than throwing things \nout, rather than asking ourselves, could we do   this with less? And that's that self-fulfilling \nprophecy. You talked about large organizations,  ",
    "start": "596820",
    "end": "605880"
  },
  {
    "text": "how do you create a large system? Well, if you \nwork for a large organization then that will   create a large system. A large organization \nis incapable of creating a small system. ",
    "start": "607440",
    "end": "616380"
  },
  {
    "text": "Yes, they are.\nAnd I think that that's the interesting thing,   is that it becomes a self-fulfilling prophecy, \nis that somebody says, \"We're gonna have 300  ",
    "start": "616380",
    "end": "624900"
  },
  {
    "text": "developers on this.\" And you go, \"Okay.\"\nIt becomes a goal basically. Right?  The headcount becomes the goal. And somebody might \nestimate and say, \"Oh, for this architecture,  ",
    "start": "624900",
    "end": "632519"
  },
  {
    "text": "we might need it.\" Well, the point is that \nif you chose half the developers or a 10th   of the developers, you could probably also \ndeliver something more effective. If you get  ",
    "start": "632520",
    "end": "640860"
  },
  {
    "text": "300 developers to deliver Hello World, it will be \nquite amazingly complex, probably with 11 layers. ",
    "start": "640860",
    "end": "646260"
  },
  {
    "text": "Yeah. And it will probably not work.\nBut the important thing is you couldn't   develop a small version of Hello World with 300 \ndevelopers. It's almost impossible. So you are  ",
    "start": "646260",
    "end": "656100"
  },
  {
    "text": "necessarily anchored at that scale, \nwhich is kind of interesting because   you also talked about scaling. You made a \ncouple of comments about scaling. And you…",
    "start": "656100",
    "end": "664064"
  },
  {
    "text": "Did I? I always do that.\nYou kind of quoted Abraham   Wolf and the observation pretty much that scaling \nis the number one problem that people don't have. ",
    "start": "664064",
    "end": "673860"
  },
  {
    "text": "Yes.\nAnd we are in an obsession phase at   the moment, and we see it with things like SAFe.\nYes, that's the scaling method, I] was talking  ",
    "start": "675180",
    "end": "682380"
  },
  {
    "text": "about scalability of microservices in that quote. \nBut it's the same for organizations, right? ",
    "start": "682380",
    "end": "687780"
  },
  {
    "text": "Yes and that's the thing, is that we get it. \nAgain, it's the number of people who go like,   microservices. It's just like, and what are you \nlooking to do here? And I had this exchange with  ",
    "start": "687780",
    "end": "700259"
  },
  {
    "text": "a friend in Norway a while back, and he was just \nlike, \"They're rewriting this architecture we   developed in PHP and now they're doing it \nin scalable microservices. The point is,  ",
    "start": "700260",
    "end": "709620"
  },
  {
    "text": "our business is the same size. The industry is \nthe same size. Nothing has changed. Why do we  ",
    "start": "710220",
    "end": "716220"
  },
  {
    "text": "need that?\" He couldn't understand it. He said, \n\"Kevlin, help me understand it.\" I couldn't.  No, you have to do stuff for the right reasons, \nright? So, that's why...basically the question I  ",
    "start": "716220",
    "end": "726120"
  },
  {
    "text": "ask my teams, and now they're asking me actually \nis, so do you really need this? Like, with every  ",
    "start": "726120",
    "end": "731400"
  },
  {
    "text": "solution that... One of the guys on my team came \nup with, \"Oh, we might introduce Kafka here.\"  ",
    "start": "731400",
    "end": "737700"
  },
  {
    "text": "And I'm like, \"Okay, so what problem does it \nsolve?\" And he said, \"Well, it becomes more  ",
    "start": "738420",
    "end": "745079"
  },
  {
    "text": "scalable.\" \"So aren't we scalable enough then?\" He \nsaid, \"Well, yeah, we are, but...\" When I develop,  ",
    "start": "745080",
    "end": "753180"
  },
  {
    "text": "even this morning in the standup this \nmorning, one of developers on my team said,   \"I'm doing the tree shaking on our framework.\" \nAnd I'm like, \"Okay, why?\" And there's nothing  ",
    "start": "753180",
    "end": "766259"
  },
  {
    "text": "wrong with tree shaking, especially when you're \ndoing node, but it wasn't solving a problem. ",
    "start": "766260",
    "end": "773160"
  },
  {
    "text": "Because the problem he would have solved with it \nis everything would've gotten a little bit faster,  ",
    "start": "773160",
    "end": "778440"
  },
  {
    "text": "but it is already fast. Nobody in the \nbusiness will see the difference, right? So,  ",
    "start": "778440",
    "end": "784020"
  },
  {
    "text": "why would we spend our time while we have so many \nother stuff that we really need to take care of?  ",
    "start": "784020",
    "end": "787860"
  },
  {
    "text": "And he was like, \"Yeah, you're right.\" \nBut my teams do it to me as well. Right?  I'm thinking, \"Oh, yeah, maybe I should remove \nthis flex box and put in another one, which is  ",
    "start": "789480",
    "end": "799140"
  },
  {
    "text": "slightly better.\" Then they say to me, \"But the \nother one works.\" \"Yes, it works. But this one,  ",
    "start": "799140",
    "end": "804720"
  },
  {
    "text": "it would be slightly better.\" I'm still doing it, \nby the way. So that was like 2:00 at night and I'm   starting to write a new flexbox or whatever. \nBut we all do this, right? We all do stuff for  ",
    "start": "805740",
    "end": "817259"
  },
  {
    "text": "no apparent reason, just because we think it's \nbetter or it's better in the future or later we  ",
    "start": "817260",
    "end": "822720"
  },
  {
    "text": "will reuse it, which we never do. It's become \nan industry inside of an industry, basically. ",
    "start": "822720",
    "end": "829079"
  },
  {
    "text": "I think that's a really \nimportant observation, is that  ",
    "start": "829740",
    "end": "834060"
  },
  {
    "text": "particularly for those of us who end up dishing \nout advice or, yeah, it's always to recognize  ",
    "start": "836340",
    "end": "841980"
  },
  {
    "text": "actually half the reason we dish this advice out \nis that we know something about ourselves. We are   as guilty of this as anybody else.\nOh, yes. Very much.",
    "start": "841980",
    "end": "850019"
  },
  {
    "start": "850000",
    "end": "1178000"
  },
  {
    "text": "But I think that's... But you also \nasked the most important question there,   which is what problems does this solve? \nAnd I don't think we ask that enough,  ",
    "start": "850020",
    "end": "856440"
  },
  {
    "text": "that is actually...and again, the \narchitects who created the 11-layer   system if somebody had stopped and \nsaid, what problem does that solve? ",
    "start": "857160",
    "end": "864240"
  },
  {
    "text": "Yes. And then they could... So that's \nbasically...so that's why I said, well,   you should always be able to ask the newcomer \nquestions, right? It's like, always ask questions  ",
    "start": "864840",
    "end": "875520"
  },
  {
    "text": "like this. So, okay, what are we gonna solve \nwith this? Why do we do this? What does it do?  ",
    "start": "875520",
    "end": "879480"
  },
  {
    "text": "And people forget to ask those questions all the \ntime. It's because they're afraid to because they  ",
    "start": "880860",
    "end": "887820"
  },
  {
    "text": "are expected to know all that stuff, right? And \nespecially when you ask simple questions, because   how simple can a question be? Like, what does \nthis do? What problem does this solution if we do  ",
    "start": "887820",
    "end": "898740"
  },
  {
    "text": "this? And asking yourself those questions all the \ntime it saves a lot of time, actually, I think. ",
    "start": "898740",
    "end": "904380"
  },
  {
    "text": "I think that point about the...tying back \ninto learning, what you're describing there is  ",
    "start": "905160",
    "end": "911579"
  },
  {
    "text": "this idea...I guess I refer to it as the idea \nof, like, software development is a process of   inquiry. It's not a process of production. And \nyou're actually quite strong about the idea of,  ",
    "start": "912840",
    "end": "923220"
  },
  {
    "text": "like, \"Hey, we don't do the production.\" \nProduction is a word that doesn't...you know,   productivity, to be precise, is not a word \nwe should really apply. We can use it in  ",
    "start": "923220",
    "end": "930600"
  },
  {
    "text": "certain cases, but actually, we use it too \nbroadly. Productivity is not a helpful term. ",
    "start": "930600",
    "end": "935399"
  },
  {
    "text": "Here it seems that that's very much the same \nkind of things that we are trying to... It's   a process of inquiry and we're trying to \nlearn stuff. There's a whole bunch of stuff  ",
    "start": "936360",
    "end": "945000"
  },
  {
    "text": "we don't know. We don't know exactly...\nYes, stuff needs to emerge, actually.  It needs to emerge. We don't know everything \nabout the tools that we are using. We don't know  ",
    "start": "945000",
    "end": "950580"
  },
  {
    "text": "everything about the problem domain, because if \nwe did, then that meant we'd already built it, so   what are we doing now? So therefore it's a process \nof inquiry, and inquiry requires questions. And I  ",
    "start": "950580",
    "end": "961260"
  },
  {
    "text": "don't know if we value that enough.\nAnd it's hard to estimate.  Oh, yes. Because it's a process \nof inquiry. How long is this gonna  ",
    "start": "961260",
    "end": "967680"
  },
  {
    "text": "take? I'll tell you when I'm done.\nI had to explain to the board of  ",
    "start": "967680",
    "end": "974160"
  },
  {
    "text": "commissioners for the company I work for, like, \nwhy is it so hard for the tech to do estimates.  ",
    "start": "974160",
    "end": "978360"
  },
  {
    "text": "And I took the Cynefin framework and so the CEO \nsaid, \"Well, they're not gonna appreciate your  ",
    "start": "979740",
    "end": "985860"
  },
  {
    "text": "model.\" Right? Because I think, well, maybe \nthey do, right? So, I explained, okay. If   you're in the obvious or the clear context, \nthere is the best practice. You applied it,  ",
    "start": "985860",
    "end": "993540"
  },
  {
    "text": "done. Right? That's the stuff we can all do in \nthis industry. Then there's the stuff that is   in the complicated context where we have a bunch \nof good practices and we need to choose one. So,  ",
    "start": "993540",
    "end": "1003680"
  },
  {
    "text": "you do some analysis and you make it work, \nand then you build it. That's the stuff that   you can plan, right? You can even do it in \na waterfall style if you want to basically. ",
    "start": "1003680",
    "end": "1012440"
  },
  {
    "text": "Then you move to the other side. Where it's the \ncomplex and chaotic zones where, well, practices   at best emerge or are not present at all, meaning \nnobody's ever done that before, at least in our  ",
    "start": "1012440",
    "end": "1022639"
  },
  {
    "text": "company. And I said, well, we are now there on the \nleft side where we have to question ourselves. So  ",
    "start": "1022640",
    "end": "1030199"
  },
  {
    "text": "how are we gonna solve it? We don't know. We're in \nthe unknown unknowns. That I shouldn't have said,   by the way, because now the whole company \nevery time they're like, \"So how long is it  ",
    "start": "1030200",
    "end": "1039379"
  },
  {
    "text": "gonna take?\" \"Yeah, we don't know. We're in the \nunknown unknowns,\" for everything, basically.   Right? They don't like to distinguish. So the \nthing is, so what I explained to him, I said,  ",
    "start": "1039380",
    "end": "1046040"
  },
  {
    "text": "well, we are now here, right? We're sort of in \nthe middle between chaotic and complex. We sort of   started to make some sense of what we were doing.\nThen slowly, the whole thing will turn towards  ",
    "start": "1046040",
    "end": "1057380"
  },
  {
    "text": "being in complicated. Meaning when we've automated \nenough of the stuff that we now don't know what  ",
    "start": "1057380",
    "end": "1064160"
  },
  {
    "text": "we don't know, it will slowly move towards the \ncomplicated zone, in which case we can estimate,  ",
    "start": "1064160",
    "end": "1069440"
  },
  {
    "text": "right? So once we've got all the pipelines \nautomated, we figure out how to do the   performance on our market service landscape, \nhow to deploy our apps, all this stuff that we  ",
    "start": "1069440",
    "end": "1079280"
  },
  {
    "text": "need to take care of, once it's taken care \nof, we can actually start making some more   speed because it moves to the complicated \nzone. Meaning we will be able to estimate  ",
    "start": "1079280",
    "end": "1087140"
  },
  {
    "text": "stuff at some point in time. And we are working \nour way towards being in the complicated zone.",
    "start": "1087140",
    "end": "1092480"
  },
  {
    "text": "The nice thing about the model, I love Cynefin \nby the way, is that it also turns...it doesn't   stop there, right? You move from complicated \ninto the clear context, meaning, \"Oh, yeah,  ",
    "start": "1092480",
    "end": "1101720"
  },
  {
    "text": "I know how to do this. It's da, da, da, done.\" But \nat some point in time, and that is, in my mind,  ",
    "start": "1101720",
    "end": "1107299"
  },
  {
    "text": "when you reach the innovator's dilemma, is \nthat you pass over from clear into complex  ",
    "start": "1107300",
    "end": "1114500"
  },
  {
    "text": "again because well, you have to do something new \nbecause what you did doesn't work anymore. So you   have to reinvent yourself and then you move back \ninto the chaotic zone. And that's basically the  ",
    "start": "1114500",
    "end": "1124940"
  },
  {
    "text": "circle of this industry, or actually of companies \nin this industry and probably in most industries. ",
    "start": "1124940",
    "end": "1130580"
  },
  {
    "text": "That's an interesting cycle because if \nyou realize where you are in that cycle   then you finally have some arguments \nto talk to management and say, \"Sorry,  ",
    "start": "1131420",
    "end": "1139220"
  },
  {
    "text": "we cannot estimate and this is why. \" And \nactually, they understood. And I was a bit  ",
    "start": "1139220",
    "end": "1146419"
  },
  {
    "text": "surprised about it, not because they're \ndumb, they're really extremely smart, but   because managers in our industry and outside \nof the industry are used to looking at software  ",
    "start": "1146420",
    "end": "1156860"
  },
  {
    "text": "development as if it is production. And \nlike, why can't you estimate this? Well,  ",
    "start": "1156860",
    "end": "1161960"
  },
  {
    "text": "because of the Cynefin framework and this \nis why we're there. And they're like,  ",
    "start": "1161960",
    "end": "1167120"
  },
  {
    "text": "the manager said, \"How hard can it be?\"\nAnd you give them the answer.  Yes. And well, \"It's hard because...\" \nAnd yes. And they slowly get that, right?",
    "start": "1167120",
    "end": "1177440"
  },
  {
    "start": "1178000",
    "end": "1610000"
  },
  {
    "text": "It's about mental models, you know, is that a \npoint, as you said, there are a lot of smart  ",
    "start": "1178580",
    "end": "1183980"
  },
  {
    "text": "people in this industry in all different roles. \nIt's not the question of intelligence, it's the  ",
    "start": "1183980",
    "end": "1189200"
  },
  {
    "text": "question of the mental model that they bring \nto it. And we all bring mental models to things  ",
    "start": "1189200",
    "end": "1192440"
  },
  {
    "text": "and that's the problem, is where those \nmental models...and our language as well,   it betrays the models that.. we talk a lot \nabout projects. I still do it, even though  ",
    "start": "1195200",
    "end": "1206420"
  },
  {
    "text": "I've known that that is not the right word for \nmany years. It's just like, actually most of what  ",
    "start": "1206420",
    "end": "1211700"
  },
  {
    "text": "we're building is products, it's not a project. \nA project is something with a well-defined end   state. Software development is mostly about \nnot ending. It's about keeping on going. ",
    "start": "1211700",
    "end": "1220580"
  },
  {
    "text": "It's a journey. That's why a roadmap worked \nmuch better. I actually persuaded the company  ",
    "start": "1220580",
    "end": "1225860"
  },
  {
    "text": "that I now worked for, and I did with \nprevious companies as well, to use the   word roadmap instead of planning because it \nhas a very different meaning basically. Well,  ",
    "start": "1225860",
    "end": "1236840"
  },
  {
    "text": "it still looks pretty much the same. Right? But \nthe roadmap is much more flexible in the sense   that you can always change it, which we do.\nAnd it may have more than one route. ",
    "start": "1236840",
    "end": "1244340"
  },
  {
    "text": "Yes. That is the whole point. And yeah. \nRight. And also that it's hard to estimate. ",
    "start": "1244340",
    "end": "1250340"
  },
  {
    "text": "And I think that you're offering people \nenough information. You're saying,  ",
    "start": "1250940",
    "end": "1256340"
  },
  {
    "text": "here's what we know at the moment. Given what \nwe know and what we don't know, here's what's   possible and these are the paths.\nSort your priorities, please. ",
    "start": "1256340",
    "end": "1263600"
  },
  {
    "text": "Whereas planning is a word with a very different \nsuggestion, set of suggestions, and likewise,   project, well-defined end states. And whereas \nproduct, the goal of developing a product is  ",
    "start": "1263600",
    "end": "1273080"
  },
  {
    "text": "to keep on developing the product. In an ideal \nuniverse, I mean, it becomes an infinite game,  ",
    "start": "1273080",
    "end": "1277340"
  },
  {
    "text": "and the idea is to always be developing. \nIn one sense, you're never truly done. ",
    "start": "1278240",
    "end": "1284059"
  },
  {
    "text": "Which is true.\nDone means you retire the system.  There's one point when you are done that is  ",
    "start": "1284900",
    "end": "1291920"
  },
  {
    "text": "once you read... So, I like the analogy \nof the innovators' dilemma. It says, well,  ",
    "start": "1293540",
    "end": "1299720"
  },
  {
    "text": "you're building a product, it gets successful, \nyou add more stuff to it, and eventually you go   to a point where, well, adoption doesn't grow \nanymore, independent of how many new features  ",
    "start": "1299720",
    "end": "1308960"
  },
  {
    "text": "you put into it. Right? And that's where \npossibly another competitor or somebody  ",
    "start": "1308960",
    "end": "1315020"
  },
  {
    "text": "from outside of your industry comes in, uses \nnewer technology, and goes into the same cycle,   but has a head start where you are. So at that \npoint, you need to either jump or die basically.  ",
    "start": "1315020",
    "end": "1325580"
  },
  {
    "text": "You need to reinvent yourself. So that is \nbasically where the gap is. The funny thing is  ",
    "start": "1327620",
    "end": "1334820"
  },
  {
    "text": "that I usually...usually when companies ask me to \njoin in is when they get to this particular point. ",
    "start": "1334820",
    "end": "1341600"
  },
  {
    "text": "They don't always realize it. And then when I \nshowed them the model and they're like, \"Oh,   fuck, we're doomed.\" Actually, my previous client \nactually died. They added so much. They invented  ",
    "start": "1341600",
    "end": "1352760"
  },
  {
    "text": "the smart thermostat, like, 15 years ago. That \nwas a great device basically, but they added stuff  ",
    "start": "1352760",
    "end": "1359060"
  },
  {
    "text": "to it like weather information, and traffic \ninformation on your thermostat on the wall,   really useful. They had all sorts of features \nthat eventually they got to a point where they  ",
    "start": "1359060",
    "end": "1369139"
  },
  {
    "text": "could literally predict when your washing machine \nwas on. Right? It was really cool that they could  ",
    "start": "1369140",
    "end": "1374180"
  },
  {
    "text": "actually do that, but nobody cared. Now people \nslowly do, but it was too early basically. And  ",
    "start": "1374180",
    "end": "1380300"
  },
  {
    "text": "at that point, well, Google came out with their \nNest thermostat and Dial came out with stuff and   they were like, \"Oh, fuck, they have this too \nwith cheaper technology. We can't survive.\" ",
    "start": "1380300",
    "end": "1391400"
  },
  {
    "text": "So that's kind of an interesting one, \nit's also...there's an idea there that,   again, going back to the cycle, there's \na kind of like a...there's a wave motion  ",
    "start": "1391400",
    "end": "1398960"
  },
  {
    "text": "as it were. You're going through periods of \nconsolidation. This actually kind of reminds me,  ",
    "start": "1398960",
    "end": "1403460"
  },
  {
    "text": "based on what we've just been talking about, Henry \nPetroski is a civil engineer and a historian, and  ",
    "start": "1404720",
    "end": "1412580"
  },
  {
    "text": "he wrote this book, \"To Engineer Is Human\" which \nwas published in the 1990s. Really interesting.   He talks about the role of failure in successful \ndesign. He talks about this idea of industries,  ",
    "start": "1412580",
    "end": "1425179"
  },
  {
    "text": "particularly engineering. He focuses very much \non that there's an experimentation period,   and then something doesn't work out and everybody, \nyou find a period of consolidation, things become  ",
    "start": "1425180",
    "end": "1435560"
  },
  {
    "text": "very normalized, and so on. Then there's the next, \nit's cyclic. It's just like, then we move on to   the next thing that's exciting and experimental.\nWhich is pretty much what Weinberg describes,  ",
    "start": "1435560",
    "end": "1444200"
  },
  {
    "text": "right? It's like the learning curve with the...\nYes. Yes. Cool.\nThere's this idea of,  ",
    "start": "1444200",
    "end": "1450740"
  },
  {
    "text": "in one sense, I think a lot of people are looking \nfor stasis. They're looking for the one answer or   the one thing when, actually, it's a very dynamic \nthing. And therefore the kind of map that you need  ",
    "start": "1451520",
    "end": "1462980"
  },
  {
    "text": "needs to demonstrate these different domains \nof complexity. But I think that that's...but  ",
    "start": "1462980",
    "end": "1468620"
  },
  {
    "text": "that also probably tells us why there might be a \nlittle instinct in some people when they're adding  ",
    "start": "1468620",
    "end": "1474440"
  },
  {
    "text": "stuff. Part of our complexity comes from additive \nthings, but there's also that idea, and you talked   about it as well, that idea of future-proofing \nor, \"Maybe one day we'll do this.\" And again,  ",
    "start": "1474440",
    "end": "1486020"
  },
  {
    "text": "not solving a problem we have today, but \nalso not necessarily solving what we have   tomorrow. But in our mind that could be a \ntomorrow and then we make it a commitment. ",
    "start": "1486020",
    "end": "1494720"
  },
  {
    "text": "Yeah, yeah. A lot of people think like \nthat actually. Most of us, I would say. But  ",
    "start": "1494720",
    "end": "1500299"
  },
  {
    "text": "it makes it really, really hard to... So the \nproblem is if you build something now for  ",
    "start": "1501680",
    "end": "1506720"
  },
  {
    "text": "something that might happen, what happens if it \ndoesn't happen? So, what are you gonna do with all   this added complexity in your code? You're never \ngonna take it out again, and that's why you end up  ",
    "start": "1506720",
    "end": "1516140"
  },
  {
    "text": "with 11 layers of architecture. So not putting it \nin, in the first place, yeah, it's just way more  ",
    "start": "1516140",
    "end": "1523220"
  },
  {
    "text": "effective. But it's counterintuitive I would say, \nthat people find that really scary and especially  ",
    "start": "1523220",
    "end": "1530299"
  },
  {
    "text": "developers that we want to make everything more \ngeneric. Right? That's what we do. It's actually   what I love the most is writing frameworks. \nIt's like, there's nothing more enjoyable than  ",
    "start": "1530300",
    "end": "1541220"
  },
  {
    "text": "writing a good framework actually, so I've \nbeen doing it for most of my life actually. ",
    "start": "1541220",
    "end": "1544460"
  },
  {
    "text": "But you always have to, even doing that, \nalways limit yourself to what is now   necessary. So the open-source framework \nthat my team and I are now building,  ",
    "start": "1548300",
    "end": "1555620"
  },
  {
    "text": "which is an open-source TypeScript framework \nfor building microservices, is actually we   only add stuff after we've used it. It's not \nbefore, so only after. So, oh, we now build  ",
    "start": "1556400",
    "end": "1567740"
  },
  {
    "text": "whatever...what did I do? Oh, I added something \non the gateway class to Mongo earlier this week,  ",
    "start": "1567740",
    "end": "1575540"
  },
  {
    "text": "and it could have been there a year ago, but we \nhadn't needed it. And now we see the need for it  ",
    "start": "1575540",
    "end": "1582800"
  },
  {
    "text": "because, well, we see stuff in our code. We say, \nokay, what if it would add that in the framework,   then we wouldn't have to write this code anymore. \nWe wouldn't have to write any tests for it because  ",
    "start": "1582800",
    "end": "1591620"
  },
  {
    "text": "the framework would already cover that. Okay, \nlet's do that and then we'll add it to it, and   then somebody from the team will add it. And it \ngrows organically from stuff that you actually do. ",
    "start": "1591620",
    "end": "1600740"
  },
  {
    "text": "So it's empirically driven. This is a real \nthing as opposed to, you know, maybe, what if? ",
    "start": "1600740",
    "end": "1606080"
  },
  {
    "text": "Yeah, there's no, what-if. There are also \nno IF statements in the code, actually, but… Oh, we'll come to that in a moment. \nThere's an interesting thing again  ",
    "start": "1606080",
    "end": "1614120"
  },
  {
    "start": "1610000",
    "end": "1832000"
  },
  {
    "text": "about that approach that you're describing, \nwhich I think is quite important in terms of  ",
    "start": "1614120",
    "end": "1620840"
  },
  {
    "text": "how we drive the development. If we have the \nwhat-if approach, the danger of what-ifing  ",
    "start": "1622040",
    "end": "1630080"
  },
  {
    "text": "is that the better your imagination is, the \nmore what-ifs you have, and therefore the more  ",
    "start": "1630080",
    "end": "1635240"
  },
  {
    "text": "complex code. You know, if you are a person \nof limited imagination, then it turns out...  Your world is easy. Yes.\nThe world is...you might still get the what-if  ",
    "start": "1635240",
    "end": "1643159"
  },
  {
    "text": "wrong, but there's gonna be a lot less what-ifery\nThat's a very nice observation actually. So,   that would suggest that people would... It's \nactually, I think this is a very true observation. ",
    "start": "1643160",
    "end": "1652340"
  },
  {
    "text": "So the more imagination, the more complex it could \nbe, the more generic or whatever it might be.  ",
    "start": "1653000",
    "end": "1657860"
  },
  {
    "text": "It's probably coming from \nlong, long ago, being able to,  ",
    "start": "1661940",
    "end": "1667279"
  },
  {
    "text": "when we still lived in trees or whatever we \ndid, right? Being able to go through more  ",
    "start": "1668540",
    "end": "1675440"
  },
  {
    "text": "what-if scenarios would help you survive \nbasically. That's a very basic instinct. ",
    "start": "1675440",
    "end": "1680659"
  },
  {
    "text": "I think that explains where this comes from, \nbut it doesn't tell us that we need to, but   our temptation is not... There's no harm in the \nwhat-if questions, the problem is we then commit  ",
    "start": "1682460",
    "end": "1690740"
  },
  {
    "text": "them into a piece of code rather than say, you \nknow, \"That's really interesting. Let's hold that   one and see if it happens. You know, let's...\"\nIt's an interesting realization to figure out  ",
    "start": "1690740",
    "end": "1698059"
  },
  {
    "text": "that it probably comes from, well, survival mode \nbasically. And the more possible dangers you can,  ",
    "start": "1698060",
    "end": "1705500"
  },
  {
    "text": "well, you can meet is helping you survive. \nSo it's probably the people...well,  ",
    "start": "1707420",
    "end": "1714260"
  },
  {
    "text": "really early on, it's probably the people who \nhad the most imagination who survived longer. ",
    "start": "1714260",
    "end": "1718760"
  },
  {
    "text": "So there's an interesting thing there in terms \nof when we think about things that make a good  ",
    "start": "1720080",
    "end": "1725840"
  },
  {
    "text": "developer is actually being able to think through \nlots of different scenarios. I'd be not surprised.  ",
    "start": "1725840",
    "end": "1731120"
  },
  {
    "text": "So therefore it's a positively selected for trait \nin the industry, but it clearly has...it has a  ",
    "start": "1731120",
    "end": "1736820"
  },
  {
    "text": "potential failure mode if we are not aware of it \nin that sense. We overcommit, \"What if? What if?   Well, let's put it in the code.\" I and I know, \nit's great to ask the question, but maybe... ",
    "start": "1736820",
    "end": "1744440"
  },
  {
    "text": "I think that that's the interesting thing, is \nthis idea, again, coming back to being able to   ask the question. And there's a question that's \nbeing asked there, but we put it in the code  ",
    "start": "1745700",
    "end": "1752720"
  },
  {
    "text": "without ever asking it, whereas what you were \nvaluing in your talk was actually asking the  ",
    "start": "1752720",
    "end": "1758480"
  },
  {
    "text": "question out loud before, you know, actually \nbeing able to ask that question is probably   more...is far more important in the long term.\nAlso to ourselves, right, being able to ask those  ",
    "start": "1758480",
    "end": "1765620"
  },
  {
    "text": "questions to other developers on the team. \nIt's not only just business, but it's also   just the developers on my team. And the nice \nthing is that if I would've been a manager  ",
    "start": "1765620",
    "end": "1777920"
  },
  {
    "text": "then asking those questions get a very different \nconnotation to it, right? But because I write the  ",
    "start": "1777920",
    "end": "1786020"
  },
  {
    "text": "code myself, I can actually ask those questions \nand it's easier to, like, if you develop...well,  ",
    "start": "1786020",
    "end": "1792680"
  },
  {
    "text": "the situation this morning where they were doing \ntree shaking while we actually don't need it,   we'll probably need it at some point, probably, \nbut we don't know, right? It's fast enough now. ",
    "start": "1792680",
    "end": "1801140"
  },
  {
    "text": "But because I could have done \nthis myself, I could also fall   into the same trap and have done stuff that I \nreally...which I do all the time by the way,  ",
    "start": "1803240",
    "end": "1812179"
  },
  {
    "text": "and it's writing the code yourself that \nallows...well, it makes it possible for  ",
    "start": "1813380",
    "end": "1820280"
  },
  {
    "text": "me to ask those questions to other developers \nbecause they know that I do the same things.   Right? I make the same mistakes and...\nYou are real and you have skin in the  ",
    "start": "1820280",
    "end": "1829340"
  },
  {
    "text": "game in that sense. \nYes. I guess.  So, okay, you've taken us into the code. \nLet's talk about the code. Because you  ",
    "start": "1829340",
    "end": "1836060"
  },
  {
    "start": "1832000",
    "end": "2314000"
  },
  {
    "text": "mentioned basically if-less code. \nLet's talk about that. So paradigms.  ",
    "start": "1836060",
    "end": "1841340"
  },
  {
    "text": "So you're working primarily in TypeScript.\nYes. I love TypeScript by the way. ",
    "start": "1841340",
    "end": "1847100"
  },
  {
    "text": "You shared a whole lot of TypeScript \nearlier on the slides. And so  ",
    "start": "1847100",
    "end": "1851720"
  },
  {
    "text": "how would you characterize the kind of the style \nand nature of the code, at the compositional  ",
    "start": "1852380",
    "end": "1857540"
  },
  {
    "text": "level, you know, at statement to the function \nlevel? How are you thinking about the code?  Well, first of all, it's all asynchronous, \nright? So it's their microservices,  ",
    "start": "1857540",
    "end": "1867020"
  },
  {
    "text": "but also absolutely use React as well. So, \nmost of the code we write is in a promise,  ",
    "start": "1867020",
    "end": "1873680"
  },
  {
    "text": "which basically means you then, then and a \ncatch and etc, right? So, that means that, well,  ",
    "start": "1874220",
    "end": "1879320"
  },
  {
    "text": "a promise is a monad and then it becomes tough, \nright? Because you have to explain to people   what a monad is, which is according to Douglas \nCrockford, impossible to do once you get it. ",
    "start": "1879320",
    "end": "1888620"
  },
  {
    "text": "So, I would probably say that my style of \ncoding has evolved into a highly monadic,  ",
    "start": "1891260",
    "end": "1898880"
  },
  {
    "text": "call it functional, but pure functional \ncode is a little bit harder to write,  ",
    "start": "1899780",
    "end": "1904880"
  },
  {
    "text": "also to read actually. But it's moved away from,  ",
    "start": "1904880",
    "end": "1908600"
  },
  {
    "text": "well, let's say more procedural code. I started \nthinking about it differently and that took  ",
    "start": "1910820",
    "end": "1918440"
  },
  {
    "text": "place over the last probably seven to eight years.\nAnd it started when I was the CTO for an insurance  ",
    "start": "1918440",
    "end": "1925759"
  },
  {
    "text": "company and we did Java and we were writing \nbasically the first microservices architecture   here in the Netherlands, so late 2014 or early \n2015. There was a guy on my team who actually  ",
    "start": "1925760",
    "end": "1936380"
  },
  {
    "text": "came with the trial class and he got it from \nScala, and Scala has a trial class in it. And  ",
    "start": "1937280",
    "end": "1944600"
  },
  {
    "text": "he like, \"What if we would port this \nto Java?\" So lots of the developers are  ",
    "start": "1944600",
    "end": "1950000"
  },
  {
    "text": "on the team. I had a big team, like 40 people, \nand they were very traditional Java developers,   right? If you look at the code, you open it up \nand it's like, if, if, if, four, if, if, four,  ",
    "start": "1950000",
    "end": "1959059"
  },
  {
    "text": "if, like 10 levels deep, right? And I'm like, \nhow do you test this stuff? And they're like,   yeah, we do integration testing. Yes, okay.\nBut there are probably lots of exceptions  ",
    "start": "1959060",
    "end": "1968600"
  },
  {
    "text": "that you probably missed along the way, \nright? So what if you don't do that?   And then he came up with a trial class \nand we ported it to Java. And in the first  ",
    "start": "1968600",
    "end": "1976700"
  },
  {
    "text": "couple of weeks that I looked at it, I had no \nidea what it was, right? It was so very much   different from how I was used to writing code, \nand we started out by saying, okay, what if we  ",
    "start": "1978500",
    "end": "1987560"
  },
  {
    "text": "put this in a try? Okay, we'll put it in the try, \nbut there are no try-catch blocks anymore. Okay.   And then what if we nested throughout the \nlayers in the architecture? So meaning we  ",
    "start": "1987560",
    "end": "1996500"
  },
  {
    "text": "pass the tries all the way up and down again, and \nthen only in the end do we evaluate what happens.   And the code became so much more, well, shorter \nbasically, and so much more robust because you  ",
    "start": "1996500",
    "end": "2008559"
  },
  {
    "text": "take away a lot of these side effects.\nSo for people who don't know monads,   monads take away side effects. And \nthe try-catch block is one of them.  ",
    "start": "2008560",
    "end": "2015700"
  },
  {
    "text": "The code became very, very robust actually. \nSo I took that along to other teams and other  ",
    "start": "2017560",
    "end": "2024640"
  },
  {
    "text": "teams find it hard to grasp first, especially if \nyou, well, if you're a newer developer basically,  ",
    "start": "2024640",
    "end": "2030880"
  },
  {
    "text": "it's a harder concept to get. So the code is...the \nfirst time you see it, it's really different,  ",
    "start": "2031840",
    "end": "2037840"
  },
  {
    "text": "and people find that really hard, but once you get \nit, you actually never go back. So I would never  ",
    "start": "2038980",
    "end": "2045220"
  },
  {
    "text": "write code anymore without having all this monadic \nstuff in it and all the lambdas and stuff. And  ",
    "start": "2045220",
    "end": "2049840"
  },
  {
    "text": "it's a very different way of programming.\nI start all my functions by writing the return   word first, right? I'm thinking, \"Okay, what do \nI need to return and how do I get there?\" And  ",
    "start": "2052120",
    "end": "2061060"
  },
  {
    "text": "reasoning backward instead of reasoning, let's do \nall this stuff, and eventually this comes out. And  ",
    "start": "2061060",
    "end": "2066580"
  },
  {
    "text": "it's a very, very different style of programming.\nSo that was something also that you said in  ",
    "start": "2066580",
    "end": "2074200"
  },
  {
    "text": "your talk, I can come back to that in \na moment, the starting with the returns   because I found that was a very useful way of \nintegrating something I'd already understood,  ",
    "start": "2074200",
    "end": "2082960"
  },
  {
    "text": "but I had not thought of making explicit. And \nnow that's what I'm absolutely gonna tell people. ",
    "start": "2082960",
    "end": "2088060"
  },
  {
    "text": "But that other idea of the kind of \nthe monadic moment, monadic style,  ",
    "start": "2088060",
    "end": "2092680"
  },
  {
    "text": "I think there's an interesting shift \nthere, and one of them is to do with  ",
    "start": "2094300",
    "end": "2100300"
  },
  {
    "text": "the thing that you're abstracting. You know, \nit's like if you learn a procedural language,   one of the first things that you have to \nlearn to move out, you learn to do procedural  ",
    "start": "2100300",
    "end": "2109840"
  },
  {
    "text": "abstraction. You know, you just, like, I can pull \nout procedures, although not everybody does that.  ",
    "start": "2109840",
    "end": "2114100"
  },
  {
    "text": "I do remember the time I had to teach a Fortran \nprogrammer, I was teaching them C and I said,  ",
    "start": "2115540",
    "end": "2120880"
  },
  {
    "text": "\"Oh, yeah, functions in C,\" and I said, you know, \n\"the concept is like, you know, subroutines and   functions in Fortran,\" which I knew, and I was \nusing that as a kind of the point of engagement. ",
    "start": "2120880",
    "end": "2129640"
  },
  {
    "text": "They said I don't think I've ever written \none of those. It's like, they used to write   everything in just one big routine, so they'd \nnever really started. So for them, the big  ",
    "start": "2129640",
    "end": "2138220"
  },
  {
    "text": "boundary was actually procedural abstraction was \nthe first that they had not yet decomposed. Then  ",
    "start": "2138220",
    "end": "2144160"
  },
  {
    "text": "we start hitting data approaches and start \ntalking about our data and, you know, object   orientation is a data abstraction technique. \nIn other words, we have procedural abstraction,  ",
    "start": "2144160",
    "end": "2153040"
  },
  {
    "text": "we have data abstraction, and then we start \nmoving into other spaces, and you've got control  ",
    "start": "2153040",
    "end": "2159400"
  },
  {
    "text": "flow abstraction, which is effectively what \nyou're describing. Is full behavior, but not   necessarily data-driven...it's not driven by the \ndata, it's driven by something else. And perhaps  ",
    "start": "2159400",
    "end": "2169839"
  },
  {
    "text": "that's a little less visible to people that, \nyou know, that's why they find it disorienting. Oh, yes. Likely.\nYeah. It's just like you're  ",
    "start": "2169840",
    "end": "2177220"
  },
  {
    "text": "actually offering a different...it's \nnot just a different construct, it's   actually a different abstraction universe.\nIt's a different way of thinking. It is. ",
    "start": "2177220",
    "end": "2184240"
  },
  {
    "text": "I can understand that's disorienting, \nbut yeah, it's quite powerful that way.  It is. It is extremely powerful actually. But it \nis disorienting, that's true. And when I first  ",
    "start": "2185980",
    "end": "2196180"
  },
  {
    "text": "met with it in like 2015 and I didn't realize \nactually the full possibilities of doing this.  ",
    "start": "2198940",
    "end": "2207040"
  },
  {
    "text": "We only had to trial class, right? And despite \nthe fact that Java has the optional thing in it,   right, which is a, well, it's basically a poor \nman's monad, but it doesn't do much, and they  ",
    "start": "2207040",
    "end": "2218200"
  },
  {
    "text": "could go so much further with it. And I did a talk \nat a Java conference in...when was it, November,  ",
    "start": "2218200",
    "end": "2226540"
  },
  {
    "text": "and I'm like, you guys have lambda for, \nlike, what is it, a decade now or something?  2014, Java it was 2014, yes.\nYou should be able to write much more  ",
    "start": "2226540",
    "end": "2237700"
  },
  {
    "text": "monadic code. And people are like, yeah, yeah, but \nthat's not how you write Java. And I'm like, yeah,  ",
    "start": "2237700",
    "end": "2243280"
  },
  {
    "text": "well, you can. So yes it is. They're like, no, \nno, no, we write it like this. And I'm like, okay.  ",
    "start": "2243280",
    "end": "2248320"
  },
  {
    "text": "Those are the people that go to the same campsite \nfor 25 years, right? It's like, there's nothing  ",
    "start": "2249640",
    "end": "2255279"
  },
  {
    "text": "wrong with it, it's just yeah, well, you can do so \nmuch more with it. And it's even like well-known  ",
    "start": "2255280",
    "end": "2260860"
  },
  {
    "text": "Java developers had these discussions on, let's \nsay, on Twitter or something, or like, they're   like, \"Yeah, why don't you solve this problem? \nTry some monadic stuff to it instead of writing  ",
    "start": "2260860",
    "end": "2271780"
  },
  {
    "text": "all these stupid if-statements.\" And they're like, \n\"No, no, no, but this is how we write Java.\" Okay.  This is how we've always done it.\nYeah. Right. Exactly that. So that's  ",
    "start": "2271780",
    "end": "2279400"
  },
  {
    "text": "why Java's becoming the new COBOL basically.\nSpeaking of which, actually, the wonderful Grace  ",
    "start": "2279400",
    "end": "2286180"
  },
  {
    "text": "Hopper who was responsible for the invention of \nCOBOL, she did actually have this wonderful quote,   which was, people hate change. People are \nfond of always saying, we've always done  ",
    "start": "2286180",
    "end": "2295960"
  },
  {
    "text": "it this way. And she said that's why I have a \nclock on my wall that goes counterclockwise. ",
    "start": "2295960",
    "end": "2300160"
  },
  {
    "text": "We don't always have to do it this way. This is \nthe whole point. And I think that that is, again,  ",
    "start": "2301420",
    "end": "2308559"
  },
  {
    "text": "it's that kind of incomplete knowledge. It's that \nnotion of going around a cycle that rings that. So in closing, just... Actually, I do wanna pick \nup on that point about the return statements.  ",
    "start": "2308560",
    "end": "2321160"
  },
  {
    "start": "2314000",
    "end": "2598000"
  },
  {
    "text": "Because I think that's quite an interesting \none because I've seen that with, as it were,  ",
    "start": "2321160",
    "end": "2325599"
  },
  {
    "text": "I found it a helpful technique sometimes \nwith test writing is writing, not the return,   but writing your assertions and \nthen working back. In other words,  ",
    "start": "2327160",
    "end": "2334180"
  },
  {
    "text": "what's the journey that got me to this point? And \nthe same actually applies to return statements   and actually it makes it simpler. Something I've \nfound, people have been, in the last decade or so,  ",
    "start": "2334180",
    "end": "2343900"
  },
  {
    "text": "making their control flow far more complex, \nhaving gone through the structured programming   revolution and understood why it was actually \nimportant, I'm finding people are doing a lot  ",
    "start": "2343900",
    "end": "2352720"
  },
  {
    "text": "of unstructured programming. You're like, this \nis really imperative programming. It's very,   very, it's not quite an assembler, \nbut kind of object-oriented assembler. ",
    "start": "2352720",
    "end": "2359500"
  },
  {
    "text": "They got a very, very messy control flow. And \nit's just like, actually, what do you wanna  ",
    "start": "2360160",
    "end": "2365260"
  },
  {
    "text": "return from this? \"Oh, we're gonna do this, \ndo this, do this.\" Which you talked about, you   mentioned it in your talk, it's a very procedural \napproach. \"This is what I'm doing,\" as opposed to,  ",
    "start": "2365260",
    "end": "2373300"
  },
  {
    "text": "\"What do I wanna receive?\" Let's turn the question \naround. And that gives you a much simpler thing.  ",
    "start": "2373300",
    "end": "2378460"
  },
  {
    "text": "There's a flow there, it will come more naturally.\nYes. It's like you turn around a funnel, right? ",
    "start": "2378460",
    "end": "2383980"
  },
  {
    "text": "Yeah. Yeah, and I think that drawing out \nwhy this abstraction exists, therefore,  ",
    "start": "2383980",
    "end": "2390700"
  },
  {
    "text": "what do I want from it? Let's start with that \nquestion rather than, what am I doing? Well,   we can organize that into the flow, and if we \ncan't, we've just learned something. You know,  ",
    "start": "2390700",
    "end": "2398980"
  },
  {
    "text": "I think that's a very, you know, again, \nthat comes from a questioning approach.   It allows us to reshape based on questions.\nI guess that's basically what I do,  ",
    "start": "2398980",
    "end": "2407440"
  },
  {
    "text": "right? If you would summarize it, is \nI ask questions? Whatever I'm doing,  ",
    "start": "2407440",
    "end": "2412480"
  },
  {
    "text": "also what I'm doing myself, right? Also, asking \nthe question, is this what I want to do? Is this  ",
    "start": "2412480",
    "end": "2417280"
  },
  {
    "text": "what I find important? Right? Like, yeah. And I \nthink I do that with most of the stuff in my life,  ",
    "start": "2418360",
    "end": "2425380"
  },
  {
    "text": "just wondering, why am I doing this? Am I doing \nthis because I like to, or...and I actually narrow  ",
    "start": "2425380",
    "end": "2431799"
  },
  {
    "text": "down the things I do, the way I spend my time \nbecause there's always more that you can do,   not just with the cover but with everything that \nyou have time for. Right? So what do you wanna  ",
    "start": "2431800",
    "end": "2441700"
  },
  {
    "text": "spend your time on? And I don't have to plan \nthat. I take that, like, in every day. Like,  ",
    "start": "2441700",
    "end": "2445480"
  },
  {
    "text": "well, a simple example, there's a speakers' \ndinner tonight, I didn't register for it   because on Mondays I normally have my kids.\nAnd then for some reason, actually my  ",
    "start": "2447340",
    "end": "2457839"
  },
  {
    "text": "mother-in-law died last week. So my kids are now \nwith their mom as they should be, which all of   a sudden opens the opportunity, do I want to go \nto the speakers' dinner? And I'm like, yeah, why  ",
    "start": "2457840",
    "end": "2466180"
  },
  {
    "text": "not? And it's a matter of, how do you spend your \ntime. So I ask myself, what would I do tonight  ",
    "start": "2466180",
    "end": "2474040"
  },
  {
    "text": "if I wouldn't go to the speaker, I'd probably \ngo to the cinema or have a beer somewhere on a   terrace here in the city, but having a speaker's \ndinner is also fun, so let's do that. Right? And  ",
    "start": "2474580",
    "end": "2483820"
  },
  {
    "text": "it's like...or I try to spend as much time \nas I can with my mother. She's 83, she's in  ",
    "start": "2483820",
    "end": "2491320"
  },
  {
    "text": "a wheelchair, and she has one leg. So, she gave \nme a lot of attention throughout my life. So,  ",
    "start": "2491320",
    "end": "2496540"
  },
  {
    "text": "I think she deserves to get my priority, right? \nSo I do. Not always, but I try to do that. Right? ",
    "start": "2496540",
    "end": "2503200"
  },
  {
    "text": "So, there's a very limited amount of things \nthat I love to spend time on, but they're very  ",
    "start": "2503200",
    "end": "2511420"
  },
  {
    "text": "deliberate choices. I'll give you one more \nexample. So we were in Belfast, as you know,  ",
    "start": "2512680",
    "end": "2519099"
  },
  {
    "text": "right? Like a couple of weeks ago.\nYes, indeed, where you   also learned...you learned something.\nYes. As a big Led Zeppelin fan,  ",
    "start": "2519100",
    "end": "2526180"
  },
  {
    "text": "I should have known, right? But I didn't know \nthat until you mentioned it, like the Giant's   Causeway is the \"House of the Holy\" cover. So we \nfigured out when we were in Belfast, there was a  ",
    "start": "2526180",
    "end": "2535660"
  },
  {
    "text": "performance of the Holy Grail with, so I \ndon't know, it's called a Folio, I think,  ",
    "start": "2537400",
    "end": "2545260"
  },
  {
    "text": "right? Where you make the noises yourself. \nSo it was in a church, and so I raised my  ",
    "start": "2545260",
    "end": "2551020"
  },
  {
    "text": "kids with Monty Python, as you should, and \ncoincidentally all three of them were there. And  ",
    "start": "2551020",
    "end": "2558520"
  },
  {
    "text": "I said we are going to go to the show, right?\nSo we phoned up and they were fully booked.   Then we said, well, we came specifically from the \nNetherlands to go to the show. And they were like,  ",
    "start": "2558520",
    "end": "2566320"
  },
  {
    "text": "\"Oh, yeah, we'll pull up three chairs and \nwe'll...five chairs.\" And so we went there   and there were people coming in with, what's \nit called? A habit in English as well as what  ",
    "start": "2566320",
    "end": "2575500"
  },
  {
    "text": "monks wear and stuff like wooden boards \nto hit themselves in the head. So I had a  ",
    "start": "2575500",
    "end": "2581260"
  },
  {
    "text": "tremendous laugh. And then I went out and, \nand the woman from the show said, \"Well,   this must have concluded your upbringing of \nyour kids.\" I say, \"Yes, I'm now fully.\" So  ",
    "start": "2581260",
    "end": "2589120"
  },
  {
    "text": "we're traveling and we're seeing Monty Python in \na church in Belfast, which is done. I'm complete. ",
    "start": "2589900",
    "end": "2597279"
  },
  {
    "start": "2598000",
    "end": "2621000"
  },
  {
    "text": "That's brilliant. So there is nothing \nthat I can say that will follow that,   except thank you very much. That's a \nperfect ending. Thank you very much,  ",
    "start": "2599680",
    "end": "2605980"
  },
  {
    "text": "Sander.\nYou're welcome.",
    "start": "2605980",
    "end": "2606640"
  }
]