[
  {
    "start": "0",
    "end": "115000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "[Applause] thank you I'm really happy to be here",
    "start": "12990",
    "end": "18349"
  },
  {
    "text": "addressing you today coupling and uncoupling has been a subject on my mind for a long time more than 10 years as it",
    "start": "18349",
    "end": "26240"
  },
  {
    "text": "turns out though I didn't recognize it as such at the time so some ways back I",
    "start": "26240",
    "end": "32300"
  },
  {
    "text": "got exposed to operations and spent some time living with my software and other",
    "start": "32300",
    "end": "37820"
  },
  {
    "text": "people's software and discovered that it didn't really perform that well when it met contact with the real world that led",
    "start": "37820",
    "end": "45140"
  },
  {
    "text": "me to write this book release it a few things have changed since 2007 when it",
    "start": "45140",
    "end": "50510"
  },
  {
    "text": "was originally published I think I had a comment somewhere in there that virtualization may be a solution to this",
    "start": "50510",
    "end": "56930"
  },
  {
    "text": "problem in the future if it becomes mainstream well yeah since",
    "start": "56930",
    "end": "62780"
  },
  {
    "text": "then quite a few things have changed so I wrote this second edition and released",
    "start": "62780",
    "end": "69159"
  },
  {
    "text": "release it second edition back in January I am currently with a company called cognate",
    "start": "69159",
    "end": "75770"
  },
  {
    "text": "echt we're the stewards behind closure and closure script so we helped run the",
    "start": "75770",
    "end": "81290"
  },
  {
    "text": "community so the language creator can think big thoughts and do big things",
    "start": "81290",
    "end": "86440"
  },
  {
    "text": "we are the people behind the database des Tomic and a number of open-source",
    "start": "86440",
    "end": "91610"
  },
  {
    "text": "tools in the closure space so when I",
    "start": "91610",
    "end": "96890"
  },
  {
    "text": "think about coupling I think about the kind of molasses that we all have to",
    "start": "96890",
    "end": "102770"
  },
  {
    "text": "deal with the mud the difficulty of changing things especially when we go to micro services we think about coupling a",
    "start": "102770",
    "end": "110090"
  },
  {
    "text": "lot and we need to uncouple them and usually the story goes something like this you've been working on your system",
    "start": "110090",
    "end": "116990"
  },
  {
    "text": "for a long time you think things are going pretty well you've got to decomposed into small pieces in an",
    "start": "116990",
    "end": "122600"
  },
  {
    "text": "orderly arrangement there's even some beauty in the complexity of the system",
    "start": "122600",
    "end": "127940"
  },
  {
    "text": "you've got and then one day everything changes that one requirement comes in",
    "start": "127940",
    "end": "134000"
  },
  {
    "text": "that requires a kind of variation that you never contemplated before it's",
    "start": "134000",
    "end": "139520"
  },
  {
    "text": "something that just doesn't fit and there's no way to accommodate it in the model you've got so you make a",
    "start": "139520",
    "end": "145670"
  },
  {
    "text": "change and you discover somehow you need a corresponding change on the other side of the world you change that and find",
    "start": "145670",
    "end": "153260"
  },
  {
    "text": "that something else breaks for no apparent reason what you start to realize is that your system is not this",
    "start": "153260",
    "end": "160490"
  },
  {
    "text": "lovely arrangement of independent pieces rather than the small buckyballs like that it's a different buckminster fuller",
    "start": "160490",
    "end": "167480"
  },
  {
    "text": "structure something called tensegrities a tensegrities structure is made up of beams and ropes or elastic and it holds",
    "start": "167480",
    "end": "177140"
  },
  {
    "text": "itself together by the tension on the parts and by the beams resistance to",
    "start": "177140",
    "end": "182510"
  },
  {
    "text": "tension it's a nest of opposing forces and if you remove the wrong beam the",
    "start": "182510",
    "end": "188630"
  },
  {
    "text": "whole thing flies apart it's held back from chaos by a network of interwoven",
    "start": "188630",
    "end": "193700"
  },
  {
    "text": "dependencies you pull one part and it pushes a different part you push another piece and it pushes back at some point",
    "start": "193700",
    "end": "202280"
  },
  {
    "text": "you start making enough changes that you realize you've descended into no Tegrity it's not integrity not tensegrities it's",
    "start": "202280",
    "end": "210590"
  },
  {
    "text": "just nothing and the blob engulfs you and your system the system fights your",
    "start": "210590",
    "end": "218989"
  },
  {
    "text": "changes and at some point a rewrite starts to sound like a pretty good idea because you know how long could it take",
    "start": "218989",
    "end": "225620"
  },
  {
    "text": "it's only like two weeks to rewrite it right this is when we say we've fallen",
    "start": "225620",
    "end": "231560"
  },
  {
    "text": "prey to coupling that there was unexpected coupling hidden coupling latent coupling tight coupling and so on",
    "start": "231560",
    "end": "238550"
  },
  {
    "text": "we use this word but we don't often define what it means we have a sort of a",
    "start": "238550",
    "end": "245030"
  },
  {
    "text": "gut feeling that coupling means two things are linked together but there's a",
    "start": "245030",
    "end": "250070"
  },
  {
    "text": "more precise definition of coupling that comes from other industries in large",
    "start": "250070",
    "end": "257919"
  },
  {
    "start": "254000",
    "end": "418000"
  },
  {
    "text": "engineering systems a coupling can be something that provides safety rather",
    "start": "257919",
    "end": "263390"
  },
  {
    "text": "than resistance we use coupling as kind of a dirty word we say coupled you know",
    "start": "263390",
    "end": "269810"
  },
  {
    "text": "these services are coupled and it's kind of synonymous with just bad we don't like the way they in",
    "start": "269810",
    "end": "276080"
  },
  {
    "text": "but this is an example of a coupling on a train this is the Scharffen Berger",
    "start": "276080",
    "end": "282600"
  },
  {
    "text": "plur it was invented about a hundred years ago and is still in use today",
    "start": "282600",
    "end": "287660"
  },
  {
    "text": "inside of this device you have a cone-shaped depression on one side and a",
    "start": "287660",
    "end": "293040"
  },
  {
    "text": "cone-shaped outdent on the other side and there's a rod that extends from the cone and engages with a",
    "start": "293040",
    "end": "300080"
  },
  {
    "text": "slot in a disc on the other side the disc rotates increasing the length of a",
    "start": "300080",
    "end": "306180"
  },
  {
    "text": "spring until it rotates far enough then it shortens the spring and latches the coupling closed",
    "start": "306180",
    "end": "312590"
  },
  {
    "text": "well this coupling provides safety you don't want your trains uncoupling",
    "start": "312590",
    "end": "318450"
  },
  {
    "text": "somewhere as you're you know racing along the tracks although apparently in",
    "start": "318450",
    "end": "323700"
  },
  {
    "text": "the UK for quite some time this is a way to drop passengers off at a station without stopping the Train you would",
    "start": "323700",
    "end": "330300"
  },
  {
    "text": "just unhook their cars and let them drift to a stop it's not used so much",
    "start": "330300",
    "end": "335430"
  },
  {
    "text": "these days we like our trains to stay together in engineering we have these",
    "start": "335430",
    "end": "342810"
  },
  {
    "text": "things called linkages which are bars connected by couplers now in this case",
    "start": "342810",
    "end": "348330"
  },
  {
    "text": "this is Watts linkage named for the Scottish engineer who invented it and it was a way of translating rotary motion",
    "start": "348330",
    "end": "354990"
  },
  {
    "text": "into linear motion it's a simple arrangement of three bars and four couplers the couplers allow the movement",
    "start": "354990",
    "end": "363090"
  },
  {
    "text": "to take place but keep the movement along this arc sometime later another",
    "start": "363090",
    "end": "369960"
  },
  {
    "text": "person named chebyshev invented a different linkage that provides a better version of linear motion from rotary",
    "start": "369960",
    "end": "376620"
  },
  {
    "text": "it's also three bars and four couplers but they're arranged differently and so",
    "start": "376620",
    "end": "384000"
  },
  {
    "text": "we get a different style of coupling that provides different motion coupling",
    "start": "384000",
    "end": "391440"
  },
  {
    "text": "is absolutely everywhere and I really mean everywhere in the standard model of",
    "start": "391440",
    "end": "398039"
  },
  {
    "text": "physics that describes all of matter we talk about the coupling coefficients and",
    "start": "398039",
    "end": "403530"
  },
  {
    "text": "the way that these different fields coupled to each other so coupling actually allows",
    "start": "403530",
    "end": "409229"
  },
  {
    "text": "and everything to exist so this is not really synonymous with bad anymore it's",
    "start": "409229",
    "end": "415529"
  },
  {
    "text": "something necessary when we think about coupling we want to think about specific",
    "start": "415529",
    "end": "422580"
  },
  {
    "start": "418000",
    "end": "767000"
  },
  {
    "text": "aspects of it and we're gonna dissect coupling and look at different varieties",
    "start": "422580",
    "end": "427860"
  },
  {
    "text": "of coupling and how we can change them but it's important to keep in mind that coupling determines the degrees of",
    "start": "427860",
    "end": "434610"
  },
  {
    "text": "freedom in a system degrees of freedom simply means the ways that it can move",
    "start": "434610",
    "end": "439699"
  },
  {
    "text": "so if you imagine the human knee it allows movement in one plane basically",
    "start": "439699",
    "end": "447300"
  },
  {
    "text": "you know back and forth I would demo this but you've all seen knees and mine",
    "start": "447300",
    "end": "452520"
  },
  {
    "text": "aren't working so well lately so I'm gonna avoid that the idea is that the knee enables certain movements like",
    "start": "452520",
    "end": "459089"
  },
  {
    "text": "walking and running it inhibits other movements if your knee bends the wrong",
    "start": "459089",
    "end": "465360"
  },
  {
    "text": "way something has gone very wrong a coupling",
    "start": "465360",
    "end": "473009"
  },
  {
    "text": "also connects effects from one place to another so with the knee we're",
    "start": "473009",
    "end": "478169"
  },
  {
    "text": "connecting the effect of a muscle motion in one part of the body to a movement of another part of the body in watts and",
    "start": "478169",
    "end": "484500"
  },
  {
    "text": "chebyshev's linkages we were connecting the effects of motion at the pivot points on the fixed ends of the rods to",
    "start": "484500",
    "end": "491699"
  },
  {
    "text": "the motion of the center point of the bar but I have another example of",
    "start": "491699",
    "end": "497069"
  },
  {
    "text": "coupling connecting effects in a much bigger scale and that has to do with",
    "start": "497069",
    "end": "503639"
  },
  {
    "text": "this this is Iapetus moon of Saturn it's",
    "start": "503639",
    "end": "508800"
  },
  {
    "text": "sometimes been called the Death Star moon because of that very prominent crater with the central feature there",
    "start": "508800",
    "end": "515029"
  },
  {
    "text": "it's a weird moon it's got a bunch of anomalies you may not be able to see it",
    "start": "515029",
    "end": "520680"
  },
  {
    "text": "on the the darker picture but there's a sort of a ridge all the way around the equator that probably came from when the",
    "start": "520680",
    "end": "528029"
  },
  {
    "text": "impact created that Death Star crater liquefied the surface of the Moon and",
    "start": "528029",
    "end": "533720"
  },
  {
    "text": "waves rippling back and forth solidified to form that Ridge we don't know this",
    "start": "533720",
    "end": "540300"
  },
  {
    "text": "for sure but it's the only theory that seems to explain it otherwise it may just be a enormous",
    "start": "540300",
    "end": "546000"
  },
  {
    "text": "walnut waiting to be cracked but perhaps the most obvious feature is this",
    "start": "546000",
    "end": "551880"
  },
  {
    "text": "two-tone coloration it's bright on one side and dark on the other side that two-tone coloration was actually",
    "start": "551880",
    "end": "558270"
  },
  {
    "text": "observed by Giovanni Cassini for whom the probe is named and for whom the gap",
    "start": "558270",
    "end": "564390"
  },
  {
    "text": "in the Rings is named so we've known about this dual coloration for hundreds",
    "start": "564390",
    "end": "570210"
  },
  {
    "text": "of years in 2009 we discovered the likely cause of this coloration and that",
    "start": "570210",
    "end": "576600"
  },
  {
    "text": "is this moon called Phoebe Phoebe is a tiny insignificant little moon we can",
    "start": "576600",
    "end": "584370"
  },
  {
    "text": "judge it we can look down on it it's not even big enough to pull itself together into a sphere it's this sort of potato",
    "start": "584370",
    "end": "590490"
  },
  {
    "text": "shape 213 kilometers across at its widest if you were on the surface of",
    "start": "590490",
    "end": "597930"
  },
  {
    "text": "Phoebe you could throw a baseball off of the moon you could hit a golf ball out",
    "start": "597930",
    "end": "603330"
  },
  {
    "text": "of orbit and hit you know hit with escape velocity to send a golf ball to Saturn Phoebe is very far out from",
    "start": "603330",
    "end": "611850"
  },
  {
    "text": "Saturn in fact it is at the outer edge of this ring system here this diffuse",
    "start": "611850",
    "end": "618690"
  },
  {
    "text": "faint red ring that we discovered in 2009 it's 40 times bigger than the",
    "start": "618690",
    "end": "624210"
  },
  {
    "text": "entirety of the rest of the ring system that we know but we couldn't see it from Earth because it's very faint and very",
    "start": "624210",
    "end": "630180"
  },
  {
    "text": "diffuse Phoebe is at the outer edge of this ring being ablated by micro",
    "start": "630180",
    "end": "635820"
  },
  {
    "text": "meteoroids that blast material off the surface because it's gravity is so weak that material reaches escape velocity",
    "start": "635820",
    "end": "642420"
  },
  {
    "text": "and goes into orbit around Saturn where it forms this ring over time solar",
    "start": "642420",
    "end": "648450"
  },
  {
    "text": "pressure on this side of this ring closer to the Sun causes the particles to move or get a little force a little",
    "start": "648450",
    "end": "656370"
  },
  {
    "text": "acceleration toward Saturn it's weaker on the far side so they don't get the acceleration there this causes a",
    "start": "656370",
    "end": "662970"
  },
  {
    "text": "spiraling orbit where they move inward to the inner edge of this ring which",
    "start": "662970",
    "end": "667980"
  },
  {
    "text": "you've probably guessed by now is where we find a Appetit I happy toises they're sweeping up the",
    "start": "667980",
    "end": "674070"
  },
  {
    "text": "dust from Phoebe so we think that that too coloration is caused by this long-distance long-term coupling of",
    "start": "674070",
    "end": "682190"
  },
  {
    "text": "micrometeoroids Phoebe photons from the Sun gravity from Saturn and a tidally",
    "start": "682190",
    "end": "689010"
  },
  {
    "text": "locked moon when I say everything is coupled I mean everything but we don't",
    "start": "689010",
    "end": "697140"
  },
  {
    "text": "think about the coupling of this moon system around Saturn when we're designing software we can ignore it",
    "start": "697140",
    "end": "703980"
  },
  {
    "text": "because its effects are relatively small so we we often look at these systems as",
    "start": "703980",
    "end": "711120"
  },
  {
    "text": "independent because the coupling effect is small but it doesn't mean it's absent so we have the ambient temperature",
    "start": "711120",
    "end": "719760"
  },
  {
    "text": "well it's certain levels of temperature your servers begin to fail and so you are actually coupled to the ambient",
    "start": "719760",
    "end": "725910"
  },
  {
    "text": "temperature in your data center we're coupled to atmospheric pressure",
    "start": "725910",
    "end": "730940"
  },
  {
    "text": "your disk drives are evacuated for the most part if you start punching holes in",
    "start": "730940",
    "end": "736110"
  },
  {
    "text": "them you let air in the heads crash bad things happen acoustic vibrations over",
    "start": "736110",
    "end": "742680"
  },
  {
    "text": "time can cause parts to come loose and they actually can cause discs to fail there was an online backup company that",
    "start": "742680",
    "end": "749730"
  },
  {
    "text": "wrote a paper about the effect of acoustic vibrations on hard disk failure rates they tested this by having",
    "start": "749730",
    "end": "756060"
  },
  {
    "text": "somebody go into the data center and scream at the disks and that was enough",
    "start": "756060",
    "end": "761340"
  },
  {
    "text": "to cause some failure rate that they could observe and measure and report on",
    "start": "761340",
    "end": "766730"
  },
  {
    "text": "well we don't worry about all of these things all of the time if you're a data",
    "start": "766730",
    "end": "772980"
  },
  {
    "text": "center engineer you may worry about temperature and and pressure and vibration all the time but when you're writing software probably not there are",
    "start": "772980",
    "end": "781230"
  },
  {
    "text": "kinds of coupling that affect us the most and I've taken some time to try to analyze this and break it down and see",
    "start": "781230",
    "end": "789120"
  },
  {
    "text": "if there were ways to classify the coupling and I found that there are so",
    "start": "789120",
    "end": "795960"
  },
  {
    "start": "795000",
    "end": "958000"
  },
  {
    "text": "we have these different types of coupling that affect us at different times and in different strengths all of",
    "start": "795960",
    "end": "802500"
  },
  {
    "text": "these may be present at the same time in varying degrees so operational coupling",
    "start": "802500",
    "end": "808410"
  },
  {
    "text": "is the kind that we think about the most when weird services if the provider is calling a or",
    "start": "808410",
    "end": "814410"
  },
  {
    "text": "if the consumer is calling the provider and the provider goes away the consumer either fails or has to adapt to it and",
    "start": "814410",
    "end": "821130"
  },
  {
    "text": "if you've read my book you know I have some suggestions about how to adapt to that failure another kind of coupling",
    "start": "821130",
    "end": "827790"
  },
  {
    "text": "that we encounter though is this development time coupling this is when somebody changes a function or a method",
    "start": "827790",
    "end": "834150"
  },
  {
    "text": "signature in such a way that you also have to make a change this can happen",
    "start": "834150",
    "end": "839190"
  },
  {
    "text": "with external api's as well as internal api's when somebody makes a breaking change we should think about breaking",
    "start": "839190",
    "end": "846990"
  },
  {
    "text": "changes as meaning that you go and break a kneecap on whoever makes the change but we need that coupler to move in in a",
    "start": "846990",
    "end": "854640"
  },
  {
    "text": "certain plane so we're not actually gonna break kneecaps metaphorical kneecaps that's what we want to break",
    "start": "854640",
    "end": "861589"
  },
  {
    "text": "semantic coupling occurs when you have the same concept represented in more than one place and someone changes the",
    "start": "861589",
    "end": "868440"
  },
  {
    "text": "concept I'll have an example of this a little bit later on but it happens a lot",
    "start": "868440",
    "end": "874050"
  },
  {
    "text": "because within a company or within a domain we start to think of certain concepts as being real and fundamental",
    "start": "874050",
    "end": "881640"
  },
  {
    "text": "would in fact they're abstractions for bundles of attributes and we spread this concept throughout our systems up and",
    "start": "881640",
    "end": "888720"
  },
  {
    "text": "down the chain when we might do better to separate it into its constituent",
    "start": "888720",
    "end": "894000"
  },
  {
    "text": "facets and only have other systems deal with those facets they need functional",
    "start": "894000",
    "end": "900810"
  },
  {
    "text": "coupling occurs when you have several components that have similar responsibilities and so they create",
    "start": "900810",
    "end": "906839"
  },
  {
    "text": "similar code and similar mechanisms for working with them this can affect multiple places when you",
    "start": "906839",
    "end": "912510"
  },
  {
    "text": "need to change one of those especially cross-cutting concerns like logging and monitoring and then we have incidental",
    "start": "912510",
    "end": "920430"
  },
  {
    "text": "coupling which in some ways is the the worst things break for no good reason",
    "start": "920430",
    "end": "927350"
  },
  {
    "text": "any of these can be visible or they can be latent so you can imagine that latent",
    "start": "927620",
    "end": "935070"
  },
  {
    "text": "incidental coupling is is the absolute worst when something breaks for no good",
    "start": "935070",
    "end": "940410"
  },
  {
    "text": "reason and you don't know why it broke until you figure it out after the fact",
    "start": "940410",
    "end": "945869"
  },
  {
    "text": "well I'd like to take some examples and analyze how these different kinds of",
    "start": "945869",
    "end": "953259"
  },
  {
    "text": "coupling manifest in some systems that that we can look at so we've got one",
    "start": "953259",
    "end": "959589"
  },
  {
    "start": "958000",
    "end": "1354000"
  },
  {
    "text": "here that's taken from Simon Browns excellent c4 model comm where he's",
    "start": "959589",
    "end": "967509"
  },
  {
    "text": "presenting a way of representing systems and this is one of the example systems represented there I'm taking some",
    "start": "967509",
    "end": "975039"
  },
  {
    "text": "liberties with his system so apologies if I mischaracterized any of these",
    "start": "975039",
    "end": "982689"
  },
  {
    "text": "things in one of the components he's looking at something that sends email",
    "start": "982689",
    "end": "988600"
  },
  {
    "text": "via an off-the-shelf email system in this case Microsoft Exchange",
    "start": "988600",
    "end": "994199"
  },
  {
    "text": "operationally we would say that this is strong coupling smtp is a conversational",
    "start": "994679",
    "end": "1001350"
  },
  {
    "text": "protocol it's synchronous and it has to have a connection active for the whole conversation if it's interrupted at any",
    "start": "1001350",
    "end": "1008039"
  },
  {
    "text": "point you have to restart the conversation the email sender obviously",
    "start": "1008039",
    "end": "1014039"
  },
  {
    "text": "can't do anything useful if the email receiver is not there or not functioning",
    "start": "1014039",
    "end": "1019459"
  },
  {
    "text": "but if we think about the development time coupling we would say that that's relatively weak SMTP is well understood",
    "start": "1019459",
    "end": "1027209"
  },
  {
    "text": "it's been around for decades there are plenty of standards written about it plenty of libraries and vendors and",
    "start": "1027209",
    "end": "1034678"
  },
  {
    "text": "providers have done these interoperability swap meets where they get together with their different pieces",
    "start": "1034679",
    "end": "1039839"
  },
  {
    "text": "of software and try them out together and make sure they work together so I'm not that concerned that developers will",
    "start": "1039839",
    "end": "1046199"
  },
  {
    "text": "change Microsoft Exchange in a way that requires me to change my email sending",
    "start": "1046199",
    "end": "1051210"
  },
  {
    "text": "component we do have very strong semantic coupling the notions of email",
    "start": "1051210",
    "end": "1059789"
  },
  {
    "text": "and senders and recipients attachments mime types are deeply embedded in both",
    "start": "1059789",
    "end": "1065490"
  },
  {
    "text": "exchange and the email sender component here but I don't necessarily worry about",
    "start": "1065490",
    "end": "1071100"
  },
  {
    "text": "that very much because again they're unlikely to change and when they do",
    "start": "1071100",
    "end": "1076710"
  },
  {
    "text": "change there's going to be a very long period of overlap and in terms",
    "start": "1076710",
    "end": "1084060"
  },
  {
    "text": "of functional coupling also quite weak because you know they both use networks",
    "start": "1084060",
    "end": "1089370"
  },
  {
    "text": "but other than that their responsibilities are distinct the job of the exchange server is to validate",
    "start": "1089370",
    "end": "1096060"
  },
  {
    "text": "addresses store and forward make connections the job of the email component is really about marshalling",
    "start": "1096060",
    "end": "1102510"
  },
  {
    "text": "the initial message and sending it across the wire there's not that much that I'm gonna worry about there let's",
    "start": "1102510",
    "end": "1109560"
  },
  {
    "text": "take another example in this case a component in the system that was reading reference data from an external system",
    "start": "1109560",
    "end": "1117330"
  },
  {
    "text": "inside the same enterprise so this data importer is making a sequel connection",
    "start": "1117330",
    "end": "1123840"
  },
  {
    "text": "to a database very strong operational coupling if the database goes away the",
    "start": "1123840",
    "end": "1130050"
  },
  {
    "text": "importer can't do its job and even if the database is in a clustered topology",
    "start": "1130050",
    "end": "1136020"
  },
  {
    "text": "the caller still has to deal with failover semantics sequel exceptions",
    "start": "1136020",
    "end": "1141270"
  },
  {
    "text": "don't really distinguish very well between one exception that says you should retry this because I've just done",
    "start": "1141270",
    "end": "1147240"
  },
  {
    "text": "a failover and you can get results from the new database versus your query is",
    "start": "1147240",
    "end": "1152400"
  },
  {
    "text": "bad and you should go away and feel bad and never send it again development",
    "start": "1152400",
    "end": "1158460"
  },
  {
    "text": "coupling very strong changes that they make in the reference data system will almost certainly cause me to make",
    "start": "1158460",
    "end": "1164220"
  },
  {
    "text": "changes in the importer semantic coupling also very strong the database",
    "start": "1164220",
    "end": "1170790"
  },
  {
    "text": "server uses concepts like tables columns joins and the reference data importer",
    "start": "1170790",
    "end": "1176820"
  },
  {
    "text": "certainly knows about querying from tables and doing joins functional",
    "start": "1176820",
    "end": "1181950"
  },
  {
    "text": "coupling week we don't have to worry about it very much the job of the database server and the job of the",
    "start": "1181950",
    "end": "1187650"
  },
  {
    "text": "importer are non-overlapping now let's",
    "start": "1187650",
    "end": "1192810"
  },
  {
    "text": "imagine that we want to change this to get better characteristics we would say",
    "start": "1192810",
    "end": "1198720"
  },
  {
    "text": "instead of a direct sequel connection maybe there is a rest interface to the",
    "start": "1198720",
    "end": "1204180"
  },
  {
    "text": "reference data system so what does that look like in terms of coupling",
    "start": "1204180",
    "end": "1210350"
  },
  {
    "text": "operationally it's strong coupling but it's not as strong so if the reference data system",
    "start": "1210350",
    "end": "1216550"
  },
  {
    "text": "goes away we still can't do our job but the failover story is a lot easier",
    "start": "1216550",
    "end": "1221890"
  },
  {
    "text": "for clients to deal with than it is in the case of the sequel server the",
    "start": "1221890",
    "end": "1227710"
  },
  {
    "text": "development coupling strong but a little bit less so we have at least one place",
    "start": "1227710",
    "end": "1233290"
  },
  {
    "text": "where we can isolate ourselves from data format changes we can also use open",
    "start": "1233290",
    "end": "1239560"
  },
  {
    "text": "formats like JSON with extensible fields so there are some kinds of changes on",
    "start": "1239560",
    "end": "1244990"
  },
  {
    "text": "the reference data system that would not impact us on the importer semantic",
    "start": "1244990",
    "end": "1250300"
  },
  {
    "text": "coupling is still pretty strong you've got an HTTP server on one side an HTTP",
    "start": "1250300",
    "end": "1255370"
  },
  {
    "text": "client on the other side they both understand things about headers cookies",
    "start": "1255370",
    "end": "1261270"
  },
  {
    "text": "media types and so on functional coupling still weak not too",
    "start": "1261270",
    "end": "1267730"
  },
  {
    "text": "worried about this we can take the same interface and invert the flow of control",
    "start": "1267730",
    "end": "1273580"
  },
  {
    "text": "and see what that does to our coupling story so in this case we would say instead of me going and importing data",
    "start": "1273580",
    "end": "1280540"
  },
  {
    "text": "whenever I needed I'm going to have the reference system publish its data as it changes and we'll go through some kind",
    "start": "1280540",
    "end": "1286600"
  },
  {
    "text": "of a message broker in this case the operational coupling is quite weak the",
    "start": "1286600",
    "end": "1292030"
  },
  {
    "text": "reference data system can disappear for some period of time and the receiver no",
    "start": "1292030",
    "end": "1298120"
  },
  {
    "text": "longer an importer but a receiver can operate with stale data for some period of time depending on how long the outage",
    "start": "1298120",
    "end": "1305050"
  },
  {
    "text": "is relative to the rate of change of data the development coupling is now",
    "start": "1305050",
    "end": "1310360"
  },
  {
    "text": "weak we have at least two places where we can insulate ourselves from format",
    "start": "1310360",
    "end": "1315910"
  },
  {
    "text": "changes we've got the message broker that can do some translation for us and we've got the receiver that can receive",
    "start": "1315910",
    "end": "1322630"
  },
  {
    "text": "in one format and translate it to an internal format to vend out to the rest of the system the semantic coupling is",
    "start": "1322630",
    "end": "1331030"
  },
  {
    "text": "pretty strong although somewhat less we do have a place where we can remap some",
    "start": "1331030",
    "end": "1336640"
  },
  {
    "text": "of the concepts then the functional coupling now is increased because",
    "start": "1336640",
    "end": "1342610"
  },
  {
    "text": "everybody's dealing with messages everybody has to connect broker everybody's probably using the",
    "start": "1342610",
    "end": "1347950"
  },
  {
    "text": "same message technology even if they're in different languages and using different libraries so in all of those",
    "start": "1347950",
    "end": "1355600"
  },
  {
    "start": "1354000",
    "end": "1375000"
  },
  {
    "text": "examples we had coupling there with different strengths of different kinds",
    "start": "1355600",
    "end": "1361020"
  },
  {
    "text": "not only is it inescapable but it's actually necessary if you fully isolate",
    "start": "1361020",
    "end": "1366100"
  },
  {
    "text": "two systems they can't work together they can't do anything they don't accomplish anything so some degree of coupling is necessary",
    "start": "1366100",
    "end": "1375240"
  },
  {
    "start": "1375000",
    "end": "1624000"
  },
  {
    "text": "places where we want to really have caution are around chains of coupling so",
    "start": "1375330",
    "end": "1383110"
  },
  {
    "text": "this is an example from retailer they had a far upstream system for managing",
    "start": "1383110",
    "end": "1388750"
  },
  {
    "text": "the the retail data this is called recheck they had a product information management system they had a variety of",
    "start": "1388750",
    "end": "1395620"
  },
  {
    "text": "feeds and down streams and like a lot of retailers they had this concept called ask you ask you for those of you who",
    "start": "1395620",
    "end": "1403660"
  },
  {
    "text": "haven't done ecommerce is a stock keeping unit and it keeps track of the kind of thing that you're selling you",
    "start": "1403660",
    "end": "1410920"
  },
  {
    "text": "can think of it as a class for retailers the SKU represents how much a thing",
    "start": "1410920",
    "end": "1417430"
  },
  {
    "text": "costs how much it weighs what shelf space it takes up what it where it gets",
    "start": "1417430",
    "end": "1424750"
  },
  {
    "text": "placed in distribution centers and a variety of other things once we get to online selling it also includes display",
    "start": "1424750",
    "end": "1431200"
  },
  {
    "text": "attributes like what name should we show it as and what long description what imagery do we have well over time people",
    "start": "1431200",
    "end": "1440050"
  },
  {
    "text": "began to think of this stock keeping unit as a real thing even though it just",
    "start": "1440050",
    "end": "1446020"
  },
  {
    "text": "began as a number that you could use to relate together these different facets of information when you start thinking",
    "start": "1446020",
    "end": "1453070"
  },
  {
    "text": "about breaking this into services you'll be tempted to say we need a SKU service or we need an item service that holds",
    "start": "1453070",
    "end": "1460960"
  },
  {
    "text": "all of that information but in fact that information didn't naturally belong together anyway we now sell things that",
    "start": "1460960",
    "end": "1468130"
  },
  {
    "text": "don't take up any shelf space we could just null out those columns or return zeros or negative one or something like",
    "start": "1468130",
    "end": "1474940"
  },
  {
    "text": "that but isn't it better to just say there are things which take up shelf space and there things that don't likewise we have some",
    "start": "1474940",
    "end": "1483640"
  },
  {
    "text": "things that have a price and a cost we have other things that have a price but",
    "start": "1483640",
    "end": "1489130"
  },
  {
    "text": "we don't know the cost until we're done selling them for example skins in video",
    "start": "1489130",
    "end": "1494380"
  },
  {
    "text": "games are priced by tier if you sell a million of them you get a better break on the price than a vendor that sells a",
    "start": "1494380",
    "end": "1502179"
  },
  {
    "text": "hundred thousand of them so we could separate those attributes as well when",
    "start": "1502179",
    "end": "1507580"
  },
  {
    "text": "you start slicing it apart you realize I don't need a SKU service but I do need",
    "start": "1507580",
    "end": "1513250"
  },
  {
    "text": "an identifier that I can use to get all of these different types of attributes",
    "start": "1513250",
    "end": "1518789"
  },
  {
    "text": "now another thing that happened in this same location was that they started",
    "start": "1519149",
    "end": "1525010"
  },
  {
    "text": "selling these digital items and had many many more SKUs than they had in the past",
    "start": "1525010",
    "end": "1530710"
  },
  {
    "text": "and managing the prices had previously been done by manually entering prices on",
    "start": "1530710",
    "end": "1536350"
  },
  {
    "text": "specific items no longer viable and so they invented the notion of a price",
    "start": "1536350",
    "end": "1541960"
  },
  {
    "text": "point this was a new concept I would say this track is available for $0.99 and",
    "start": "1541960",
    "end": "1548130"
  },
  {
    "text": "then when they wanted to change it to 89 cents they could change the price point and it would take effect for all of the",
    "start": "1548130",
    "end": "1554559"
  },
  {
    "text": "tracks this was a reasonable concept it was a way of getting leverage in a",
    "start": "1554559",
    "end": "1560200"
  },
  {
    "text": "particular set of use cases but the trouble came when the price point went",
    "start": "1560200",
    "end": "1565720"
  },
  {
    "text": "from a mechanism for managing prices in one system to being visible throughout",
    "start": "1565720",
    "end": "1571390"
  },
  {
    "text": "all the other systems so the price point became a new feed where you would get a",
    "start": "1571390",
    "end": "1576490"
  },
  {
    "text": "SKU that had a price and he would get other SKUs that related to a price point which meant that all of the downstream",
    "start": "1576490",
    "end": "1583059"
  },
  {
    "text": "systems needed to accommodate this new concept and this change became very",
    "start": "1583059",
    "end": "1588370"
  },
  {
    "text": "widespread very pervasive everybody had to update for this idea of a price point when all they really wanted was a price",
    "start": "1588370",
    "end": "1596190"
  },
  {
    "text": "if it had been flattened out upstream everyone else would have been able to",
    "start": "1596190",
    "end": "1601720"
  },
  {
    "text": "avoid introducing this new concept and would have saved a ton of money and a lot of change for the system when you",
    "start": "1601720",
    "end": "1609399"
  },
  {
    "text": "have this kind of concept leakage that knits together a whole string of two tendencies like that I think of it as a",
    "start": "1609399",
    "end": "1615340"
  },
  {
    "text": "semantic polymer it's like a long chain molecule where everything is tied together by these shared concepts",
    "start": "1615340",
    "end": "1623730"
  },
  {
    "start": "1624000",
    "end": "1685000"
  },
  {
    "text": "another kind of coupling to watch out for is something called a long arrow so",
    "start": "1624660",
    "end": "1630130"
  },
  {
    "text": "this is when you're looking at one of these system diagrams and you think that this arrow represents a simple call",
    "start": "1630130",
    "end": "1636520"
  },
  {
    "text": "between two components but you discover that each interface is actually a chain of different moving parts so one example",
    "start": "1636520",
    "end": "1643930"
  },
  {
    "text": "you know involves tables to files files across a network files into tables and",
    "start": "1643930",
    "end": "1648940"
  },
  {
    "text": "then reprocessed into a new database and then swapping databases quite a number",
    "start": "1648940",
    "end": "1654580"
  },
  {
    "text": "of moving parts there if we were to examine the coupling of all of those we",
    "start": "1654580",
    "end": "1659770"
  },
  {
    "text": "would find that we get the worst characteristics the whole interface has",
    "start": "1659770",
    "end": "1665290"
  },
  {
    "text": "the characteristics of the worst of each of those steps so latency is strictly",
    "start": "1665290",
    "end": "1673900"
  },
  {
    "text": "worse than the slowest part of the chain availability is strictly worse than the",
    "start": "1673900",
    "end": "1679120"
  },
  {
    "text": "least available link and so on so I've",
    "start": "1679120",
    "end": "1686950"
  },
  {
    "start": "1685000",
    "end": "1901000"
  },
  {
    "text": "presented some places where we can analyze coupling and look at these different aspects of it but what can we",
    "start": "1686950",
    "end": "1694450"
  },
  {
    "text": "do about it how do we how do we find solutions that uncouple operationally",
    "start": "1694450",
    "end": "1700720"
  },
  {
    "text": "reduce the functional and development coupling to acceptable levels for this I",
    "start": "1700720",
    "end": "1706170"
  },
  {
    "text": "often go back to David Parnas who gave us the term information hiding he later",
    "start": "1706170",
    "end": "1713860"
  },
  {
    "text": "said he wishes he had called it decision hiding because that's a better encapsulation of his paper but this",
    "start": "1713860",
    "end": "1720040"
  },
  {
    "text": "paper provides a specific example as a way of understanding how to assign",
    "start": "1720040",
    "end": "1726280"
  },
  {
    "text": "behavior to modules in a system and even though he wrote this in the days when it",
    "start": "1726280",
    "end": "1731770"
  },
  {
    "text": "was running on core memory and only on one machine I think there's a lot that",
    "start": "1731770",
    "end": "1737620"
  },
  {
    "text": "we can learn from this about how we create interfaces in our systems today so the system he was talking about was",
    "start": "1737620",
    "end": "1744580"
  },
  {
    "text": "to create a keyword index where every keyword appears in a",
    "start": "1744580",
    "end": "1751780"
  },
  {
    "text": "circular shift of every place every sentence in which that keyword is used and so I just have an example here to",
    "start": "1751780",
    "end": "1759250"
  },
  {
    "text": "try and illustrate that we take the sentence software comprises an endless supply of structures it's got six words",
    "start": "1759250",
    "end": "1765280"
  },
  {
    "text": "so we find it under six different shifts did I miss count yeah seven words seven",
    "start": "1765280",
    "end": "1771130"
  },
  {
    "text": "different shifts each time rotating it so different word is first and then we alphabetize the whole thing if you've",
    "start": "1771130",
    "end": "1777460"
  },
  {
    "text": "ever used the UNIX command apropos that's how this is how apropos works it takes a circular shift that's been",
    "start": "1777460",
    "end": "1784179"
  },
  {
    "text": "sorted by the keyword and then it finds you all the documents that include that word now in this paper Parnas presents",
    "start": "1784179",
    "end": "1793030"
  },
  {
    "text": "two different modular ization x' and you sort of get the sense reading it that he",
    "start": "1793030",
    "end": "1798130"
  },
  {
    "text": "lost a design argument with his team and in his company and then he wrote the paper to try and win the argument in",
    "start": "1798130",
    "end": "1804429"
  },
  {
    "text": "print that he lost in person but he doesn't present a straw man he presents",
    "start": "1804429",
    "end": "1810460"
  },
  {
    "text": "two working solutions so one of them starts with the input module that packs",
    "start": "1810460",
    "end": "1817480"
  },
  {
    "text": "characters into an array it's got the circular shifter that looks at that first array and makes an in index array",
    "start": "1817480",
    "end": "1825340"
  },
  {
    "text": "with pairs of addresses the alphabetize er takes two arrays makes a new array of",
    "start": "1825340",
    "end": "1832630"
  },
  {
    "text": "pairs but alphabetized and then the output sort of walks through the alphabetized array finds the index looks",
    "start": "1832630",
    "end": "1840220"
  },
  {
    "text": "into the original array and uses that to format the output the control module just calls each of these in sequence now",
    "start": "1840220",
    "end": "1849160"
  },
  {
    "text": "it's not hard to see that this approach would work you could write this program and it would do the job you expect but",
    "start": "1849160",
    "end": "1856809"
  },
  {
    "text": "what partners points out is that changes tend to ripple through every part of that system so if you wanted to change",
    "start": "1856809",
    "end": "1863830"
  },
  {
    "text": "from the episodic character encoding to ASCII encoding or Unicode what would",
    "start": "1863830",
    "end": "1872140"
  },
  {
    "text": "need to change essentially every module in that first design would need to change with the possible exception of",
    "start": "1872140",
    "end": "1878950"
  },
  {
    "text": "the control module if we wanted to stop using pack characters and store one per word in the",
    "start": "1878950",
    "end": "1885220"
  },
  {
    "text": "most profligate waste of memory they would have seen at that time then you",
    "start": "1885220",
    "end": "1890470"
  },
  {
    "text": "would have to change essentially every module because they were all using the addresses created by the first module we",
    "start": "1890470",
    "end": "1896889"
  },
  {
    "text": "would say that they were functionally coupled the second modular ization uses",
    "start": "1896889",
    "end": "1904989"
  },
  {
    "start": "1901000",
    "end": "2217000"
  },
  {
    "text": "this extra piece so we actually have more modules here the first one is now",
    "start": "1904989",
    "end": "1910629"
  },
  {
    "text": "called line storage and it presents this functional interface what we would represent or understand today is an API",
    "start": "1910629",
    "end": "1917679"
  },
  {
    "text": "to set a character get a character get a word delete a word delete a line and so on the input module still reads the",
    "start": "1917679",
    "end": "1925359"
  },
  {
    "text": "episode it character z' but this time instead of directly stuffing them into an indexed array it calls line storage",
    "start": "1925359",
    "end": "1932230"
  },
  {
    "text": "to place the characters into storage the circular shifter now does something very interesting it presents the same",
    "start": "1932230",
    "end": "1939609"
  },
  {
    "text": "story the same interface as line storage and just makes it look like all the",
    "start": "1939609",
    "end": "1945489"
  },
  {
    "text": "shifts are there do you know if it actually did the shifts or not we don't",
    "start": "1945489",
    "end": "1951399"
  },
  {
    "text": "know we're not allowed to know and we're not supposed to care the alphabetize er",
    "start": "1951399",
    "end": "1959289"
  },
  {
    "text": "has a different interface where it is it's got an init because sorting takes a",
    "start": "1959289",
    "end": "1965559"
  },
  {
    "text": "long time and then it's got an indexed access er that says you know walk me through the array output then just calls",
    "start": "1965559",
    "end": "1972789"
  },
  {
    "text": "everything through the alphabetize ER and prints each line so let's think",
    "start": "1972789",
    "end": "1978460"
  },
  {
    "text": "about similar sets of changes now if we wanted to change from a episodic to ASCII we might only have to change the",
    "start": "1978460",
    "end": "1985629"
  },
  {
    "text": "input module and possibly the output module depending on how the printer works if we wanted to stop using packed",
    "start": "1985629",
    "end": "1992499"
  },
  {
    "text": "characters we would only change the line storage module if we wanted to use",
    "start": "1992499",
    "end": "1998109"
  },
  {
    "text": "offline storage instead of core we would only have to change the the line storage",
    "start": "1998109",
    "end": "2003960"
  },
  {
    "text": "module so one interesting difference here is that we have defined interfaces",
    "start": "2003960",
    "end": "2010080"
  },
  {
    "text": "and multiple implementers of the same interface",
    "start": "2010080",
    "end": "2015139"
  },
  {
    "text": "that helps us hide decisions because that functional interface provides no",
    "start": "2015520",
    "end": "2021230"
  },
  {
    "text": "insight for external callers to try and find out how is this really being done",
    "start": "2021230",
    "end": "2027170"
  },
  {
    "text": "under the covers it's got this abstraction it's got the information",
    "start": "2027170",
    "end": "2032330"
  },
  {
    "text": "hiding crucially decision hiding the decision about how we store characters",
    "start": "2032330",
    "end": "2038780"
  },
  {
    "text": "is hidden inside the line storage module the decision about whether we sort immediately or we sort only when you",
    "start": "2038780",
    "end": "2045500"
  },
  {
    "text": "start asking for results is hidden inside the alphabetize er if I diagram",
    "start": "2045500",
    "end": "2050810"
  },
  {
    "text": "this it looks kind of like this in UML ish ball-and-socket notation apologies",
    "start": "2050810",
    "end": "2060320"
  },
  {
    "text": "to anyone who's been traumatized by UML in the past I still find it useful to do sketches like this sometimes what we",
    "start": "2060320",
    "end": "2067070"
  },
  {
    "text": "have here are components that offer interfaces and require interfaces so the",
    "start": "2067070",
    "end": "2074419"
  },
  {
    "text": "input module requires the line storage interface it doesn't really care who's",
    "start": "2074420",
    "end": "2080870"
  },
  {
    "text": "providing that interface the storage module does provide the line interface",
    "start": "2080870",
    "end": "2086120"
  },
  {
    "text": "so that's good circular shifter does something very interesting it requires and provides the same interface what we",
    "start": "2086120",
    "end": "2095330"
  },
  {
    "text": "find is having a smaller number of interfaces improves our composability",
    "start": "2095330",
    "end": "2101180"
  },
  {
    "text": "and reduces the coupling between things it's somewhat counterintuitive we often",
    "start": "2101180",
    "end": "2107570"
  },
  {
    "text": "think coupling is reduced if we have more AP is a smaller number of",
    "start": "2107570",
    "end": "2113390"
  },
  {
    "text": "well-defined interfaces with a smaller number of data types is more composable and this is the composition that we",
    "start": "2113390",
    "end": "2121130"
  },
  {
    "text": "would get if we plug these things together and if we if we went through this and analyzed it we could look at",
    "start": "2121130",
    "end": "2127910"
  },
  {
    "text": "each connector with respect to each of those kinds of of coupling we'd find",
    "start": "2127910",
    "end": "2133100"
  },
  {
    "text": "that operational coupling was high in every case for Parnas because this is all running in one process you know they",
    "start": "2133100",
    "end": "2140060"
  },
  {
    "text": "hadn't really thought of distributed systems yet because you know there was probably only a market for six computers",
    "start": "2140060",
    "end": "2145520"
  },
  {
    "text": "in the world the development coupling is greatly weakened by that functional interface",
    "start": "2145520",
    "end": "2152210"
  },
  {
    "text": "the semantic coupling is also reduced due to using interfaces rather than",
    "start": "2152210",
    "end": "2157410"
  },
  {
    "text": "direct access and the functional coupling is reduced because we don't have that repeated notion of character",
    "start": "2157410",
    "end": "2164670"
  },
  {
    "text": "indexing and array manipulation so",
    "start": "2164670",
    "end": "2171619"
  },
  {
    "text": "somewhat surprisingly composability is inversely proportional to your number of interfaces and your number of data types",
    "start": "2171619",
    "end": "2178339"
  },
  {
    "text": "so if you find that you have services with too broad and interface they may be",
    "start": "2178339",
    "end": "2183630"
  },
  {
    "text": "exposing too much of their internals which is going to encourage semantic and functional coupling you're better off",
    "start": "2183630",
    "end": "2191130"
  },
  {
    "text": "finding ways to split that interface and break it down into different facets so",
    "start": "2191130",
    "end": "2197310"
  },
  {
    "text": "that then you're more likely to find the interface here is doing the same thing as the interface they're just with",
    "start": "2197310",
    "end": "2203099"
  },
  {
    "text": "different names at that point you can bring them together and raise the level of abstraction by saying I now have a",
    "start": "2203099",
    "end": "2209910"
  },
  {
    "text": "common interface that's implemented by different services or components so when",
    "start": "2209910",
    "end": "2219000"
  },
  {
    "start": "2217000",
    "end": "2413000"
  },
  {
    "text": "we're uncoupling things we want to think about orthogonality as well and orthogonality in math has a great",
    "start": "2219000",
    "end": "2225690"
  },
  {
    "text": "definition you take the dot product of two vectors if there's no overlap than they're orthogonal meaning there's no",
    "start": "2225690",
    "end": "2232760"
  },
  {
    "text": "projection of one onto the other no shadow from one vector to the other in",
    "start": "2232760",
    "end": "2238319"
  },
  {
    "text": "software when we talk about orthogonality we're talking about separating concerns creating high",
    "start": "2238319",
    "end": "2243329"
  },
  {
    "text": "cohesion low coupling and little overlap this is how we achieve the decision",
    "start": "2243329",
    "end": "2250079"
  },
  {
    "text": "hiding I'm gonna walk through just a few more examples from this same system that",
    "start": "2250079",
    "end": "2256500"
  },
  {
    "text": "was in C for model this is a component view inside a container so the container",
    "start": "2256500",
    "end": "2263700"
  },
  {
    "text": "is the light colored box there that's labeled batch process it does have a",
    "start": "2263700",
    "end": "2270030"
  },
  {
    "text": "dashed line around it but that may be sort of impossible to discern from the back that's fine inside the components",
    "start": "2270030",
    "end": "2277619"
  },
  {
    "text": "or inside the container we have the components in this case they're all running inside",
    "start": "2277619",
    "end": "2282930"
  },
  {
    "text": "that batch process they're all part of the same codebase they've been linked together so the operational coupling is",
    "start": "2282930",
    "end": "2290549"
  },
  {
    "text": "going to be very high in all cases I am borrowing this from c4 model comm",
    "start": "2290549",
    "end": "2296969"
  },
  {
    "text": "there's the URL when we look at this even from this distant and altitude we",
    "start": "2296969",
    "end": "2305249"
  },
  {
    "text": "can start to see some places where there's likely to be different kinds of coupling sneaking in so for instance",
    "start": "2305249",
    "end": "2311819"
  },
  {
    "text": "over here on the right hand side we have two components where the risk calculator",
    "start": "2311819",
    "end": "2317880"
  },
  {
    "text": "is producing something that the report generator is meant to consume and so we",
    "start": "2317880",
    "end": "2323400"
  },
  {
    "text": "expect that there is some shared knowledge some semantic coupling between those components over here on the left",
    "start": "2323400",
    "end": "2331680"
  },
  {
    "text": "we have a couple of different data importers that are both talking to external systems they probably have very",
    "start": "2331680",
    "end": "2337979"
  },
  {
    "text": "similar implementations and so we're likely to find some functional coupling between those two we have this report",
    "start": "2337979",
    "end": "2347219"
  },
  {
    "text": "checker up here that says it checks to see if the report has been generated by a particular time of day if not it uses",
    "start": "2347219",
    "end": "2354509"
  },
  {
    "text": "the alert er to send an alert and presumably you know go wake somebody up to produce the risk report before it",
    "start": "2354509",
    "end": "2360690"
  },
  {
    "text": "gets seen or the absence of it gets seen but the report checker and the report",
    "start": "2360690",
    "end": "2366269"
  },
  {
    "text": "distributor don't have any direct connection even though presumably the report checker knows where to look in",
    "start": "2366269",
    "end": "2373140"
  },
  {
    "text": "the file system to see if the report was created so this is an example of latent",
    "start": "2373140",
    "end": "2380849"
  },
  {
    "text": "coupling where we have shared knowledge baked into both of these components and it's shared knowledge about a third",
    "start": "2380849",
    "end": "2386910"
  },
  {
    "text": "party and so it's likely to be quite a nasty surprise once we finally discover",
    "start": "2386910",
    "end": "2393119"
  },
  {
    "text": "it this thing called an Orchestrator",
    "start": "2393119",
    "end": "2398219"
  },
  {
    "text": "it's not going to surprise anybody that the orchestrator is probably doing a lot of well orchestration calling things and",
    "start": "2398219",
    "end": "2404640"
  },
  {
    "text": "translating formats back and forth that's kind of the nature of an Orchestrator so we won't dig into it too",
    "start": "2404640",
    "end": "2411239"
  },
  {
    "text": "much more but I do want to look at some things we can do about those",
    "start": "2411239",
    "end": "2417210"
  },
  {
    "text": "problem areas we highlighted so here",
    "start": "2417210",
    "end": "2422340"
  },
  {
    "text": "we've got these an excerpt of an excerpt just the interaction among the risk",
    "start": "2422340",
    "end": "2427650"
  },
  {
    "text": "calculator and report generator so what can we do to reduce the semantic",
    "start": "2427650",
    "end": "2433890"
  },
  {
    "text": "coupling among these in this case we're inside a windows service but in other",
    "start": "2433890",
    "end": "2439980"
  },
  {
    "text": "styles of architecture we would apply other decisions like making a standard document format within a single service",
    "start": "2439980",
    "end": "2448470"
  },
  {
    "text": "I would say we take the simple approach and create a shared library to represent",
    "start": "2448470",
    "end": "2453660"
  },
  {
    "text": "that interface between those two over on",
    "start": "2453660",
    "end": "2459480"
  },
  {
    "text": "the other side of the diagram we had some possibly redundant implementation details and so that might be something",
    "start": "2459480",
    "end": "2465360"
  },
  {
    "text": "that we factor out and have both of the components using it and up here with the",
    "start": "2465360",
    "end": "2472980"
  },
  {
    "text": "report checker and our file system layout I would say we would want to hide",
    "start": "2472980",
    "end": "2478980"
  },
  {
    "text": "the decision about the file system layout from both of those by creating a module that they could both call on now",
    "start": "2478980",
    "end": "2488040"
  },
  {
    "text": "in all three of those situations I'm using a library but in different ways so",
    "start": "2488040",
    "end": "2494700"
  },
  {
    "text": "one of them was a meeting point between two components to hide the decision about how that data was being held and",
    "start": "2494700",
    "end": "2502200"
  },
  {
    "text": "represented in the other I was using it to extract repeated functionality to",
    "start": "2502200",
    "end": "2507270"
  },
  {
    "text": "hide the decision about how we handle retries and reconnects and so on and",
    "start": "2507270",
    "end": "2513480"
  },
  {
    "text": "then for the file system layout it was to isolate this shared concept to",
    "start": "2513480",
    "end": "2519060"
  },
  {
    "text": "encapsulate a decision about where to put files that would need to be used in",
    "start": "2519060",
    "end": "2524490"
  },
  {
    "text": "at least those two places and probably also in the web server that lets people view the report so we were looking at a",
    "start": "2524490",
    "end": "2532620"
  },
  {
    "text": "component diagram that was representing the runtime structure we were analyzing the functional and semantic and",
    "start": "2532620",
    "end": "2540570"
  },
  {
    "text": "development time coupling when we found solutions by introducing more parts",
    "start": "2540570",
    "end": "2546440"
  },
  {
    "text": "which would seem to increase coupling but by using the",
    "start": "2546440",
    "end": "2551640"
  },
  {
    "text": "modules at development time we are hiding those decisions and weakening some of the kinds of coupling and",
    "start": "2551640",
    "end": "2558770"
  },
  {
    "text": "strengthening other kinds but strengthening it in a single location instead of spreading it out so we have",
    "start": "2558770",
    "end": "2565619"
  },
  {
    "text": "one place to make a change later and I often find that you can sort of rotate a",
    "start": "2565619",
    "end": "2571710"
  },
  {
    "text": "diagram by 90 degrees so when you're looking at components think about the modules that make up those components",
    "start": "2571710",
    "end": "2577650"
  },
  {
    "text": "maybe there's a solution to your your problem in sharing code or reducing",
    "start": "2577650",
    "end": "2582960"
  },
  {
    "text": "shared code when you're looking at the code think about the components the",
    "start": "2582960",
    "end": "2588690"
  },
  {
    "text": "runtime structure maybe there's a solution in running in more places or",
    "start": "2588690",
    "end": "2593760"
  },
  {
    "text": "fewer places and because I work in closure a lot I have to you know say",
    "start": "2593760",
    "end": "2599820"
  },
  {
    "text": "when I'm looking at data I think about code when I'm looking at code I think about data because code is data and I",
    "start": "2599820",
    "end": "2605609"
  },
  {
    "text": "can kind of go back and forth the idea though is to use all of the tools you",
    "start": "2605609",
    "end": "2610980"
  },
  {
    "text": "have at your disposal so use the layout of your libraries in your code use the component structure",
    "start": "2610980",
    "end": "2618390"
  },
  {
    "text": "and use the ability to abstract so find higher-level interfaces that speak more",
    "start": "2618390",
    "end": "2624990"
  },
  {
    "text": "generally and find ways to split into smaller interfaces that are more",
    "start": "2624990",
    "end": "2630960"
  },
  {
    "text": "specific to the task at hand so to recap when we talk about coupling",
    "start": "2630960",
    "end": "2639420"
  },
  {
    "text": "it is necessary it's essential every time we have a coupling it allows",
    "start": "2639420",
    "end": "2646079"
  },
  {
    "text": "movement in one direction the sort of expected direction of the coupling but it does inhibit other movements and",
    "start": "2646079",
    "end": "2653520"
  },
  {
    "text": "usually we don't notice when we're using a coupling that allows a particular kind",
    "start": "2653520",
    "end": "2658710"
  },
  {
    "text": "of change because it's it's easy and we we notice when things are hard we don't",
    "start": "2658710",
    "end": "2663930"
  },
  {
    "text": "notice as much when it's easy coupling does connect effects and when we run",
    "start": "2663930",
    "end": "2670349"
  },
  {
    "text": "into trouble is when we've got these long chains of effects that are connected from far distant parts of the",
    "start": "2670349",
    "end": "2675930"
  },
  {
    "text": "system we want to keep in mind all four",
    "start": "2675930",
    "end": "2681000"
  },
  {
    "text": "of these kinds of coupling operational development semantics functional and that they can all be",
    "start": "2681000",
    "end": "2686309"
  },
  {
    "text": "present in varying degrees some of them are more difficult to deal with in",
    "start": "2686309",
    "end": "2693299"
  },
  {
    "text": "different architectural styles some of them are easier to deal with in other styles where you can hide your decisions",
    "start": "2693299",
    "end": "2702289"
  },
  {
    "text": "hide them behind api's hide them inside modules hide them inside components pick",
    "start": "2702289",
    "end": "2708359"
  },
  {
    "text": "which degrees of freedom matter for your system and accept that some changes that",
    "start": "2708359",
    "end": "2714000"
  },
  {
    "text": "come along later will require degrees of freedom that you didn't anticipate and didn't build in watch out for those",
    "start": "2714000",
    "end": "2721109"
  },
  {
    "text": "semantics polymers concept leakage is one of the biggest things that will",
    "start": "2721109",
    "end": "2727349"
  },
  {
    "text": "damage your enterprise over time use both the static structure of your code and the dynamic structure of your",
    "start": "2727349",
    "end": "2733470"
  },
  {
    "text": "components not everything needs to be a service there's still room for shared",
    "start": "2733470",
    "end": "2738630"
  },
  {
    "text": "libraries and find more instances of fewer more general interfaces and of",
    "start": "2738630",
    "end": "2745410"
  },
  {
    "text": "course prefer explicit coupling to tacit or latent coupling so if you if the",
    "start": "2745410",
    "end": "2750900"
  },
  {
    "text": "coupling is going to be there but it's only in your head find some way to write it down in the code and make it visible",
    "start": "2750900",
    "end": "2756720"
  },
  {
    "text": "in the code to whoever comes after you so that is my somewhat abstract thesis",
    "start": "2756720",
    "end": "2764609"
  },
  {
    "start": "2760000",
    "end": "3169000"
  },
  {
    "text": "on coupling and especially uncoupling thank you for your attention",
    "start": "2764609",
    "end": "2771630"
  },
  {
    "text": "[Applause]",
    "start": "2771630",
    "end": "2775409"
  },
  {
    "text": "thank you Michael any questions",
    "start": "2779990",
    "end": "2785630"
  },
  {
    "text": "yeah one so there's a strategy design pattern which is kind of a that you",
    "start": "2791940",
    "end": "2799270"
  },
  {
    "text": "start looking at your system and you'll find out where places they're likely to change and you isolate them and you",
    "start": "2799270",
    "end": "2805930"
  },
  {
    "text": "abstract them and a lot of frameworks in Java came up with very over bloated",
    "start": "2805930",
    "end": "2811690"
  },
  {
    "text": "frameworks for that and solutions for that or and you when you try to avoid",
    "start": "2811690",
    "end": "2819040"
  },
  {
    "text": "these kind of situations and over coupling you tend to over abstract and",
    "start": "2819040",
    "end": "2824910"
  },
  {
    "text": "abstract and isolate everything start with so is there a good solution to",
    "start": "2824910",
    "end": "2831520"
  },
  {
    "text": "start with or is this all just learning and refactoring as you go so you",
    "start": "2831520",
    "end": "2839610"
  },
  {
    "text": "mentioned over abstracting the the problem with that notion is it's a bit",
    "start": "2839610",
    "end": "2846340"
  },
  {
    "text": "of a tautology what is it - over abstract well you know when you've done it you've gone too far it's too",
    "start": "2846340",
    "end": "2853750"
  },
  {
    "text": "difficult to work with I could do another long talk just on abstraction",
    "start": "2853750",
    "end": "2860160"
  },
  {
    "text": "but I won't do that now the key to abstraction is that you are bringing",
    "start": "2860160",
    "end": "2866560"
  },
  {
    "text": "together dissimilar things and emphasizing the the the similarities",
    "start": "2866560",
    "end": "2872860"
  },
  {
    "text": "they do have so I often go back to this seek abstraction in closure seek has two",
    "start": "2872860",
    "end": "2880720"
  },
  {
    "text": "things it has a head and it has a next and when you get the next you get a seatback that abstraction is super",
    "start": "2880720",
    "end": "2889960"
  },
  {
    "text": "simple literally irreducible you can't make it any smaller and yet it allows us to",
    "start": "2889960",
    "end": "2897340"
  },
  {
    "text": "treat strings and vectors and lists and xml documents and file systems all with",
    "start": "2897340",
    "end": "2904600"
  },
  {
    "text": "the same set of functions so i would regard that as a successful example of an abstraction over abstraction is",
    "start": "2904600",
    "end": "2914620"
  },
  {
    "text": "probably what you mean by someone who's who's getting close to the inner",
    "start": "2914620",
    "end": "2920530"
  },
  {
    "text": "platform effect where you take your relational database and you make table tables object attribute and relationship and",
    "start": "2920530",
    "end": "2928090"
  },
  {
    "text": "you sort of build a new database inside of your old database when you get to the",
    "start": "2928090",
    "end": "2934660"
  },
  {
    "text": "point where your API is expressing a general-purpose programming language you've probably over abstracted but if",
    "start": "2934660",
    "end": "2941770"
  },
  {
    "text": "you focus on emphasizing similarities and papering over differences you're not",
    "start": "2941770",
    "end": "2948280"
  },
  {
    "text": "going to run into that any other",
    "start": "2948280",
    "end": "2955480"
  },
  {
    "text": "questions",
    "start": "2955480",
    "end": "2958020"
  },
  {
    "text": "and do you think that there are certain like pairings or coding languages that influence",
    "start": "2960520",
    "end": "2967770"
  },
  {
    "text": "coupling that like favor rice coupling or favor i's uncoupling hmm boy you guys",
    "start": "2967770",
    "end": "2975010"
  },
  {
    "text": "are really trying to load me into or lure me into dangerous territory I'm",
    "start": "2975010",
    "end": "2982690"
  },
  {
    "text": "gonna speak primarily in the context of distributed service based systems",
    "start": "2982690",
    "end": "2988650"
  },
  {
    "text": "personally I favor frameworks that allow me to treat requests and entities coming",
    "start": "2988650",
    "end": "2994300"
  },
  {
    "text": "over the network as data rather than trying to turn them into objects at the earliest possible opportunity and partly",
    "start": "2994300",
    "end": "3001650"
  },
  {
    "text": "that's because when you map them to objects it's like saying I have a concrete type that I'm receiving on this",
    "start": "3001650",
    "end": "3008670"
  },
  {
    "text": "this interface so imagine an analogy in the functions inside of your your",
    "start": "3008670",
    "end": "3015450"
  },
  {
    "text": "program if I write a function that takes a collection say for Java programmers",
    "start": "3015450",
    "end": "3022110"
  },
  {
    "text": "takes a collection you're allowed to pass me any kind of a collection if I",
    "start": "3022110",
    "end": "3027330"
  },
  {
    "text": "write something that takes ArrayList then you must pass me an ArrayList right",
    "start": "3027330",
    "end": "3032580"
  },
  {
    "text": "and so sort of the more concrete I get in my function definition the less",
    "start": "3032580",
    "end": "3037800"
  },
  {
    "text": "freedom I'm allowing you as a caller conversely the more abstract I am in my",
    "start": "3037800",
    "end": "3045870"
  },
  {
    "text": "interface actually the more restricted the provider is because there's less you",
    "start": "3045870",
    "end": "3051480"
  },
  {
    "text": "can assume about the data coming in and so you you have to be more careful",
    "start": "3051480",
    "end": "3057680"
  },
  {
    "text": "so the languages and frameworks that allow you to treat your calls as data",
    "start": "3057680",
    "end": "3062900"
  },
  {
    "text": "upfront allow you to be in that more abstract area rather than saying you",
    "start": "3062900",
    "end": "3068839"
  },
  {
    "text": "know this is an ArrayList that's directly mapped to JSON last question",
    "start": "3068839",
    "end": "3078460"
  },
  {
    "text": "what do you think about graph QL versus versus rest in terms of coupling I'm not",
    "start": "3080079",
    "end": "3092329"
  },
  {
    "text": "gonna do a versus on them I'm gonna look at each of them in terms of those dimensions of coupling so graph QL and",
    "start": "3092329",
    "end": "3099920"
  },
  {
    "text": "rest they both have exactly the same functional or operational coupling you know it's orthogonal to how you express",
    "start": "3099920",
    "end": "3106970"
  },
  {
    "text": "the query I think the semantic coupling in graph QL is probably stronger because you've",
    "start": "3106970",
    "end": "3113540"
  },
  {
    "text": "got a web of objects that you're querying and have knowledge about",
    "start": "3113540",
    "end": "3122049"
  },
  {
    "text": "somewhat mitigated by the fact that those could be interface layer objects they don't have to be your domain layer",
    "start": "3122049",
    "end": "3128450"
  },
  {
    "text": "objects and I think in in rest the",
    "start": "3128450",
    "end": "3134020"
  },
  {
    "text": "semantic coupling if you do pure rest you know level five Richardson",
    "start": "3134020",
    "end": "3139069"
  },
  {
    "text": "style rest the semantic coupling is quite strong because consumers are sort",
    "start": "3139069",
    "end": "3146359"
  },
  {
    "text": "of allowed to change any aspect of the representation and and put it back and so they're sort of encouraged to develop",
    "start": "3146359",
    "end": "3153260"
  },
  {
    "text": "knowledge about everything in that resource thank you Michael",
    "start": "3153260",
    "end": "3161170"
  },
  {
    "text": "[Applause]",
    "start": "3161170",
    "end": "3167749"
  }
]