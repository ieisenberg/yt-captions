[
  {
    "start": "0",
    "end": "151000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "Thank You Bridget it's really great to be here presenting to all it's very exciting if you missed the first",
    "start": "15049",
    "end": "22460"
  },
  {
    "text": "instance of this track it is a very therapeutic topic talk I think for all of us who work in distributed systems",
    "start": "22460",
    "end": "28109"
  },
  {
    "text": "because so many of the problems that Jeff talked about in his talk we see in Manta to a giant so I really recommend",
    "start": "28109",
    "end": "34350"
  },
  {
    "text": "that you check that out so the name of my talk as it says on the slide is designing features for mature",
    "start": "34350",
    "end": "39510"
  },
  {
    "text": "systems lessons learned from Manta so Manta is an object storage application",
    "start": "39510",
    "end": "45540"
  },
  {
    "text": "that is a distributed system that I work on a joint and I've been there a couple years and so I've seen quite a bit of",
    "start": "45540",
    "end": "52619"
  },
  {
    "text": "the system now and I also got the opportunity to design a new feature for it which is what this talk is mostly",
    "start": "52619",
    "end": "57739"
  },
  {
    "text": "motivated by and that's my my twitter handle if you want to see all the terrible things that I tweet first of",
    "start": "57739",
    "end": "65189"
  },
  {
    "text": "all just a quick aside on the website for this talk there was a description",
    "start": "65189",
    "end": "70320"
  },
  {
    "text": "that I submitted several months ago and that that I wrote myself and then I noticed a couple weeks ago that there",
    "start": "70320",
    "end": "75690"
  },
  {
    "text": "were also these additional tags added to it and I say tags in quotation marks because I couldn't click on them so I",
    "start": "75690",
    "end": "81390"
  },
  {
    "text": "don't know actually what other talks have these same tags but one of them in particular you might be able to guess",
    "start": "81390",
    "end": "86820"
  },
  {
    "text": "which one stuck out to me and the the first three distributed open source",
    "start": "86820",
    "end": "91860"
  },
  {
    "text": "cloud those are all things that I think makes sense based on my the description",
    "start": "91860",
    "end": "97650"
  },
  {
    "text": "that I submitted it's a distributed system all of our software giant is open source including Manta and it is",
    "start": "97650",
    "end": "103200"
  },
  {
    "text": "infrastructure for a cloud so that that's good and then there's this other word legacy that was that's on there and",
    "start": "103200",
    "end": "109620"
  },
  {
    "text": "I think legacy through no fault of the word itself has kind of has a negative connotation and it's also really amusing",
    "start": "109620",
    "end": "116100"
  },
  {
    "text": "to me that Manta which is only a system that's five years old is already legacy but that's the world we live in I guess",
    "start": "116100",
    "end": "124940"
  },
  {
    "text": "so before we get into the new feature that I added to Manta I want to kind of",
    "start": "124940",
    "end": "130769"
  },
  {
    "text": "give you guys overview of what Manta is and how it's designed so that you can understand the",
    "start": "130769",
    "end": "135980"
  },
  {
    "text": "different trade-offs and design decisions made for Manta before we add new functionality to it and so this is",
    "start": "135980",
    "end": "142340"
  },
  {
    "text": "kind of an abridged version of the talk that we give to new joint engineers that are joining the Manta team so that's",
    "start": "142340",
    "end": "147850"
  },
  {
    "text": "you're gonna get that for free today the basic elevator pitch marketing pitch for",
    "start": "147850",
    "end": "154820"
  },
  {
    "start": "151000",
    "end": "151000"
  },
  {
    "text": "Manta is that it's an object store and if that doesn't mean anything to you if you are familiar with Amazon s3 it's",
    "start": "154820",
    "end": "161780"
  },
  {
    "text": "the same sort of API same idea if that doesn't mean anything to you it's a place where you can upload files and get",
    "start": "161780",
    "end": "168170"
  },
  {
    "text": "them back and that API itself is not the most interesting I guess from a user",
    "start": "168170",
    "end": "173180"
  },
  {
    "text": "perspective but what makes it really cool for us infrastructure people and people that work on distributed systems",
    "start": "173180",
    "end": "178250"
  },
  {
    "text": "is that it's highly scalable and distributed and has the ability to scale out lots of different components to add",
    "start": "178250",
    "end": "183440"
  },
  {
    "text": "capacity to the system as you need to the API itself of Manta is HTTP based so",
    "start": "183440",
    "end": "189260"
  },
  {
    "text": "to get an object you do an HTTP GET for a put you do a HTTP put and so on and",
    "start": "189260",
    "end": "195920"
  },
  {
    "text": "the thing that makes Manta really different I think from other object storage solutions out there is that compute was designed to be a first-class",
    "start": "195920",
    "end": "202880"
  },
  {
    "text": "citizen in the Manta world we call these Manta jobs and what that means is that",
    "start": "202880",
    "end": "208489"
  },
  {
    "text": "the system itself is is designed with us in mind and we will when you submit a",
    "start": "208489",
    "end": "216680"
  },
  {
    "text": "Manta job the program is actually shipped to your data at rest instead of to say assembling your object with a",
    "start": "216680",
    "end": "223070"
  },
  {
    "text": "program in some container somewhere the program that you want to run will run on the data on the storage server that it's",
    "start": "223070",
    "end": "228590"
  },
  {
    "text": "stored on and this allows for a couple nice things such as not having to copy objects around the system and and",
    "start": "228590",
    "end": "235550"
  },
  {
    "text": "running it directly on your data as close as you can to running it on your local machine the interface for Manta",
    "start": "235550",
    "end": "242900"
  },
  {
    "text": "looks and feels a lot like a UNIX file system so this is an example path to an",
    "start": "242900",
    "end": "248269"
  },
  {
    "text": "object J Hendricks is my username oops sorry store is the home directory basically",
    "start": "248269",
    "end": "254720"
  },
  {
    "text": "for Manta and then there's a directory there and an object called my object text so I have a short demo I don't know",
    "start": "254720",
    "end": "263900"
  },
  {
    "start": "260000",
    "end": "260000"
  },
  {
    "text": "if it'll play through all of it where I get through this slide but this is these are the CLI tools you can use",
    "start": "263900",
    "end": "269340"
  },
  {
    "text": "to interact with manta for our nude Manta CLI and I'm just creating a",
    "start": "269340",
    "end": "274880"
  },
  {
    "text": "directory putting a file in that directory getting it back out",
    "start": "274880",
    "end": "280410"
  },
  {
    "text": "removing the objects deleting the directory so all the sort of operations that you would kind of expect to have in",
    "start": "280410",
    "end": "286050"
  },
  {
    "text": "a file system you can do with our command-line tools so Manta system",
    "start": "286050",
    "end": "294569"
  },
  {
    "start": "292000",
    "end": "292000"
  },
  {
    "text": "primitives as I started to allude to our objects and directories and objects are our files and file system speak and from",
    "start": "294569",
    "end": "303300"
  },
  {
    "text": "a storage perspective they're actually stored as a flat file on disk so we don't break up the object into chunks",
    "start": "303300",
    "end": "309389"
  },
  {
    "text": "and put it on different storage servers to start out for instance it's just whatever object you upload is exists on",
    "start": "309389",
    "end": "315599"
  },
  {
    "text": "storage servers somewhere on disk objects themselves from a user perspective are immutable so if you want",
    "start": "315599",
    "end": "322620"
  },
  {
    "text": "to change what a path points to you just overwrite that object completely and",
    "start": "322620",
    "end": "327659"
  },
  {
    "text": "then we have directories which are a lot like what you expect directories to be like and importantly they are a list of",
    "start": "327659",
    "end": "334169"
  },
  {
    "text": "all which maybe sounds obvious for a directory but is actually something that was really thought of from first",
    "start": "334169",
    "end": "341340"
  },
  {
    "text": "principles in the design and will so we'll see what that looks like some",
    "start": "341340",
    "end": "346860"
  },
  {
    "start": "345000",
    "end": "345000"
  },
  {
    "text": "other distributed systems the designs constraints that you might be interested in is that mantas a CP system in terms",
    "start": "346860",
    "end": "353310"
  },
  {
    "text": "of the cap theorem which is why there's a cap on the slide so what this means in",
    "start": "353310",
    "end": "358860"
  },
  {
    "text": "practical and practical terms is that if there's a network partition within Manta it's going to choose having a consistent",
    "start": "358860",
    "end": "364440"
  },
  {
    "text": "view of the world for the entire system over having your data be available and one of the motivating factors for this",
    "start": "364440",
    "end": "370710"
  },
  {
    "text": "is that you can build an AP system on top of a CP system but not the other way around so when the Mansi team was",
    "start": "370710",
    "end": "377580"
  },
  {
    "text": "originally designing Manta they decided that was a good trade-off because if you're interested in an AP system you can still use Manta to build that and",
    "start": "377580",
    "end": "385169"
  },
  {
    "text": "the other big thing is that Manta is horizontally scalable where possible and that basically means if there's a",
    "start": "385169",
    "end": "392430"
  },
  {
    "text": "bottleneck in some component of the system we can just deploy more instances thing whatever is the bottleneck and",
    "start": "392430",
    "end": "398990"
  },
  {
    "text": "hopefully solve that problem and we've seen that to be true as we've scaled Manta up to really big deployments",
    "start": "398990",
    "end": "405940"
  },
  {
    "text": "Samsung actually purchased giant a couple years ago with especially with an interest in Manta and using that for",
    "start": "405940",
    "end": "411889"
  },
  {
    "text": "their infrastructure so we have these giant deployments of Manta and we've been able to scale them up for Samsung's",
    "start": "411889",
    "end": "417860"
  },
  {
    "text": "needs which have been really cool to watch so now I'm gonna walk through a request a basic get request of an object",
    "start": "417860",
    "end": "425510"
  },
  {
    "text": "and that's going to give you the whirlwind view of the system and then we'll use that to talk about the new",
    "start": "425510",
    "end": "430729"
  },
  {
    "text": "feature that I wanted to add so the first thing you do as a client is make a",
    "start": "430729",
    "end": "435740"
  },
  {
    "text": "get request - this is the URL for our public Manta deployment for joint u.s.",
    "start": "435740",
    "end": "442430"
  },
  {
    "text": "East man so join comm and functionally that's going to become a request at this",
    "start": "442430",
    "end": "447770"
  },
  {
    "text": "muppet service which is it's named after the Muppets but it's a TLS and load-balancing service and that's more",
    "start": "447770",
    "end": "454280"
  },
  {
    "text": "or less just going to proxy the request to an API server called muskie and muskie is going to be doing all the",
    "start": "454280",
    "end": "459680"
  },
  {
    "text": "coordinating and heavy lifting for figuring out where this object is and streaming it back to the user so Muskies",
    "start": "459680",
    "end": "466250"
  },
  {
    "text": "going to authorize the user for this request with mahi you're gonna start to see a nautical theme and all of our",
    "start": "466250",
    "end": "472130"
  },
  {
    "text": "component names if you haven't picked out a picked up on that already and now",
    "start": "472130",
    "end": "478010"
  },
  {
    "start": "475000",
    "end": "475000"
  },
  {
    "text": "we're going to see the architectural separation and within Manta between metadata and storage so the metadata",
    "start": "478010",
    "end": "485570"
  },
  {
    "text": "tier is what stores metadata about objects and directories but importantly",
    "start": "485570",
    "end": "491180"
  },
  {
    "text": "it stores where the objects are in the system so this separation is logical in",
    "start": "491180",
    "end": "497270"
  },
  {
    "text": "terms of how we think about the system when we write it down a diagram it but also in really big production systems",
    "start": "497270",
    "end": "503090"
  },
  {
    "text": "will actually optimize servers for metadata servers or storage servers and choose different properties based on",
    "start": "503090",
    "end": "508550"
  },
  {
    "text": "what type of server it is and then the storage tier is responsible for both storing the objects itself and also for",
    "start": "508550",
    "end": "515750"
  },
  {
    "text": "running compute jobs on the object so I mentioned earlier that when you run a job in Manta you ship the program to the",
    "start": "515750",
    "end": "521900"
  },
  {
    "text": "where the data lives so these servers are optimized for running compute they have a bunch of software",
    "start": "521900",
    "end": "527329"
  },
  {
    "text": "there already that you need if you need like the JVM or a node or bash whatever that's gonna be there okay so at this",
    "start": "527329",
    "end": "536480"
  },
  {
    "text": "point muskie is going to do a metadata request because it needs to figure out where this data food text is stored so",
    "start": "536480",
    "end": "544040"
  },
  {
    "text": "it's going to talk to Electric Moray which is a generally data backing",
    "start": "544040",
    "end": "550100"
  },
  {
    "text": "database agnostic service on top of staple storage and it speaks a basic key",
    "start": "550100",
    "end": "556370"
  },
  {
    "text": "value protocol and it also has another function which is that it shards keys within within the key value protocol",
    "start": "556370",
    "end": "563180"
  },
  {
    "text": "into different shards and that's you're not familiar shards it's it's the idea of consistent hashing across a key space",
    "start": "563180",
    "end": "571250"
  },
  {
    "text": "so we will have roughly even number of keys across those shards so electric",
    "start": "571250",
    "end": "578990"
  },
  {
    "text": "Moray is now going to find this metadata record within the shards and it's going to do consistent it's consistent hashing",
    "start": "578990",
    "end": "585860"
  },
  {
    "text": "algorithm and you'll notice on the slide that we actually don't catch the key itself but the dur name of that and the",
    "start": "585860",
    "end": "593810"
  },
  {
    "text": "reason for that is that we want in order for directories to be listable we want all objects that are in the same",
    "start": "593810",
    "end": "599060"
  },
  {
    "text": "directory to be on the same shard this way we can request them within a bounded amount of time and know that",
    "start": "599060",
    "end": "605839"
  },
  {
    "text": "we'll be able to to list the directory so we hashed the dur name of that object and see that it's on free dot mooring",
    "start": "605839",
    "end": "612860"
  },
  {
    "text": "for this example and then electric more I will just for that request out to",
    "start": "612860",
    "end": "618079"
  },
  {
    "text": "three more to that particular charge and more is a like electric Maury it speaks the same protocol it just doesn't have",
    "start": "618079",
    "end": "624560"
  },
  {
    "text": "this additional hashing step within it and then it's going to reach out to hits actual data store and for Amanda we use",
    "start": "624560",
    "end": "633260"
  },
  {
    "text": "a service called manatee which is a post grass cluster with replication for both",
    "start": "633260",
    "end": "638449"
  },
  {
    "text": "high availability and durability guarantees and more ease going to ask a",
    "start": "638449",
    "end": "644449"
  },
  {
    "text": "Postgres for this particular object and it's going to look something like this",
    "start": "644449",
    "end": "649670"
  },
  {
    "text": "this is what most of our metadata records look like so there's a key a type which is",
    "start": "649670",
    "end": "655080"
  },
  {
    "text": "gonna be either an object or a directory there are user headers you can store in the objects these are actually system",
    "start": "655080",
    "end": "661680"
  },
  {
    "text": "headers not user headers but content length is the size of the object durability level reflects the number of",
    "start": "661680",
    "end": "667230"
  },
  {
    "text": "copies that we store and by default Manta will store two copies of your data and we'll see a little bit more about",
    "start": "667230",
    "end": "673080"
  },
  {
    "text": "that in a second content type and then there's also this object called sharks and if you have been following along",
    "start": "673080",
    "end": "679380"
  },
  {
    "text": "almost all of our components are nautically themed sharks isn't is another nautically themed component and",
    "start": "679380",
    "end": "685440"
  },
  {
    "text": "that refers to the storage servers themselves so this object is telling us that food tax is stored in dc2 on five",
    "start": "685440",
    "end": "693420"
  },
  {
    "text": "dot store which is a dns name for a server and dc37 dot store so this is",
    "start": "693420",
    "end": "700530"
  },
  {
    "text": "going to get forwarded all the way back to muskie through Moray through Electric Moray and at this point muskie has",
    "start": "700530",
    "end": "707550"
  },
  {
    "text": "completed what it needs from the meditates here and will reach out to the storage here to actually get this object and return return it for the request and",
    "start": "707550",
    "end": "714810"
  },
  {
    "text": "so it's going to just pick one of these at random and ask for that object and it",
    "start": "714810",
    "end": "721500"
  },
  {
    "text": "returns back there's the object contents and in the event that this storage node is not",
    "start": "721500",
    "end": "727020"
  },
  {
    "text": "available because it's crashed because the DC is unavailable I'm struck by lightning whatever it is there's another",
    "start": "727020",
    "end": "734040"
  },
  {
    "text": "server and we found that in most cases having a durability level of two is sufficient for having your data be",
    "start": "734040",
    "end": "740910"
  },
  {
    "text": "available always regardless of how many servers are restarting or crashing",
    "start": "740910",
    "end": "746280"
  },
  {
    "text": "across the fleet and so seven dots or can respond and that request is good I",
    "start": "746280",
    "end": "752760"
  },
  {
    "text": "won't go through a full put because it looks a lot a lot of it is pretty similar but the the key things that are",
    "start": "752760",
    "end": "761010"
  },
  {
    "text": "this the same are that muskie does authorization and it's going to do contacting the metadata to your in the",
    "start": "761010",
    "end": "766890"
  },
  {
    "text": "storage tier in the case of putting a new object muskie needs to pick which",
    "start": "766890",
    "end": "771960"
  },
  {
    "text": "sharks which storage nodes to store the object on upfront and it will make sure that it that the",
    "start": "771960",
    "end": "777120"
  },
  {
    "text": "copies are spread across at least two data centers and again that provides us availability and the loss of an entire",
    "start": "777120",
    "end": "782400"
  },
  {
    "text": "day just or in the loss of stress servers so both durability and availability guarantees and then muskie sends those to the",
    "start": "782400",
    "end": "789920"
  },
  {
    "text": "Sharks and then inserts a new metadata record for that objects to electric mooring that's the water so I mentioned",
    "start": "789920",
    "end": "804470"
  },
  {
    "start": "795000",
    "end": "795000"
  },
  {
    "text": "up front that Manta was really designed with compute in mind and some of the",
    "start": "804470",
    "end": "810500"
  },
  {
    "text": "things that motivate this or that objects can be very very large and often the things that you want to run compute",
    "start": "810500",
    "end": "816800"
  },
  {
    "text": "jobs are and are going to be large that's why you're probably interested in them and so we want in general to avoid",
    "start": "816800",
    "end": "823220"
  },
  {
    "text": "copying data back and forth so like I mentioned objects are stored as flat",
    "start": "823220",
    "end": "828440"
  },
  {
    "text": "files they're not assembled at runtime or anything like that it's a single file on disk that that is your file and by",
    "start": "828440",
    "end": "836240"
  },
  {
    "text": "shipping the the job to the storage server itself we prevent having to copy that around and so a quick illustration",
    "start": "836240",
    "end": "843860"
  },
  {
    "text": "of this a little hand waving of parts but this is the basic idea if I wanted",
    "start": "843860",
    "end": "849530"
  },
  {
    "text": "to run the program WC on this object then I would the client send that to muskie and Messi's gonna ship that",
    "start": "849530",
    "end": "856820"
  },
  {
    "text": "request directly to the storage server it's going to run it on a read-only version of this file and return those",
    "start": "856820",
    "end": "863480"
  },
  {
    "text": "results back to the user okay so that's Manta 101 and now we're going to talk",
    "start": "863480",
    "end": "869360"
  },
  {
    "start": "865000",
    "end": "865000"
  },
  {
    "text": "about the new feature that I added to Manta which was multi-part uploads and if you're familiar with s3 again this",
    "start": "869360",
    "end": "876410"
  },
  {
    "text": "might be something you've seen before multi-part uploads basic idea is that you want to upload a file in parts and",
    "start": "876410",
    "end": "884089"
  },
  {
    "text": "then when you're ready commit it at the end and expose the new objects instead of doing a single put say and for data",
    "start": "884089",
    "end": "892760"
  },
  {
    "text": "storage systems that use like block based metadata or extant based metadata this is a lot more obvious I think how",
    "start": "892760",
    "end": "899930"
  },
  {
    "text": "to implement because you just are changing pointers to where the blocks of the file are instead of doing that in a",
    "start": "899930",
    "end": "906290"
  },
  {
    "text": "different way so for Manta we really needed to start from first principles and think about what sort of things do",
    "start": "906290",
    "end": "913040"
  },
  {
    "start": "907000",
    "end": "907000"
  },
  {
    "text": "we want from this API what sort of things is Manta going to construe or give us the freedom to do and that",
    "start": "913040",
    "end": "918319"
  },
  {
    "text": "was the real key I think to thinking through this so like I said you upload",
    "start": "918319",
    "end": "924649"
  },
  {
    "text": "an object in parts and then when it's done you want to do a commit as three calls us complete if that makes sense to",
    "start": "924649",
    "end": "930649"
  },
  {
    "text": "you and importantly I think from a design perspective we want to make sure that objects created via this separate",
    "start": "930649",
    "end": "937339"
  },
  {
    "text": "API don't look any different from the normal put object API and because that",
    "start": "937339",
    "end": "942860"
  },
  {
    "text": "would just be really bizarre so that's an important thing to keep in mind some use cases for this are really big files",
    "start": "942860",
    "end": "949459"
  },
  {
    "text": "or like flappy network connections if you're on a phone trying to upload some",
    "start": "949459",
    "end": "954499"
  },
  {
    "text": "video and you're going in and out of Wi-Fi it might be nice if you can chunk that up instead of having to rely on a",
    "start": "954499",
    "end": "960110"
  },
  {
    "text": "single request maintaining its connection for a long time another use",
    "start": "960110",
    "end": "965689"
  },
  {
    "text": "case which is kind of near and dear to my heart because I have a background in chemistry and streaming data from a",
    "start": "965689",
    "end": "971509"
  },
  {
    "text": "source so when I was doing p-chem we would often do laser experiments and have to collect a lot of data at once",
    "start": "971509",
    "end": "976939"
  },
  {
    "text": "and we didn't necessarily know how much data we were gonna be collecting but we knew that we needed a really big hard drive to hold it all and it might have",
    "start": "976939",
    "end": "982939"
  },
  {
    "text": "been nice to be able to upload it to manta as we went but that's too late now",
    "start": "982939",
    "end": "989139"
  },
  {
    "start": "988000",
    "end": "988000"
  },
  {
    "text": "so some basic design questions thinking about this again for first principles how do identify a multi-part upload this",
    "start": "989290",
    "end": "997100"
  },
  {
    "text": "is something that has a life cycle over several requests and this whole system is distributed so no single component",
    "start": "997100",
    "end": "1004449"
  },
  {
    "text": "has a view of the entire system so we need a unique identifier that can allow any component in the system to know what",
    "start": "1004449",
    "end": "1011680"
  },
  {
    "text": "multi-part output it's working with how do we store parts we know that we can't",
    "start": "1011680",
    "end": "1017500"
  },
  {
    "text": "just append them to an object because that's not something we have two supports with immutable objects and what",
    "start": "1017500",
    "end": "1023679"
  },
  {
    "text": "does this commit operation look like and commit again is the process of taking all the parts making them into a new",
    "start": "1023679",
    "end": "1029620"
  },
  {
    "text": "object and exposing that in Manta and then some other considerations which are",
    "start": "1029620",
    "end": "1034870"
  },
  {
    "start": "1032000",
    "end": "1032000"
  },
  {
    "text": "important if you think about the perspective of someone using this API which is really important is if I have",
    "start": "1034870",
    "end": "1041199"
  },
  {
    "text": "an MP u how do I make sure that I can see what parts I've uploaded can i list them for an",
    "start": "1041199",
    "end": "1047660"
  },
  {
    "text": "if I have a bunch of these things can I see all of the ongoing and P use I have what happens if I'm using several",
    "start": "1047660",
    "end": "1055190"
  },
  {
    "text": "clients maybe your friend is working on the same mpu or more likely like your",
    "start": "1055190",
    "end": "1060830"
  },
  {
    "text": "application has a bunch of instances of this thing what happens if they're operating on the same imp you do they need to coordinate amongst themselves",
    "start": "1060830",
    "end": "1066410"
  },
  {
    "text": "how do we want to deal with that and because this is distributed systems there's going to be failure we already",
    "start": "1066410",
    "end": "1073100"
  },
  {
    "text": "know that so we need to think about failure yeah how will the parts be cleaned up if we haven't thought about",
    "start": "1073100",
    "end": "1079669"
  },
  {
    "text": "that yet and while we're at it it'd be great if I can cancel an imp you if I don't want to commit it I think s3 calls",
    "start": "1079669",
    "end": "1086570"
  },
  {
    "text": "this aborting which we also call call call aborting infuse in Manta alright so",
    "start": "1086570",
    "end": "1094580"
  },
  {
    "text": "getting into the details of the design identifying MP use is difficult if you",
    "start": "1094580",
    "end": "1101720"
  },
  {
    "text": "were to only use the what we call the target object path so if I wanted to expose some big objects called /j",
    "start": "1101720",
    "end": "1108890"
  },
  {
    "text": "hindered slash store slash big object text if I were to just use that as the identifier from a client perspective",
    "start": "1108890",
    "end": "1114760"
  },
  {
    "text": "it's not really sufficient because that path could be cut to buy another client",
    "start": "1114760",
    "end": "1120200"
  },
  {
    "text": "or buy another MP you even so we probably want a different unique",
    "start": "1120200",
    "end": "1125210"
  },
  {
    "text": "identifier for a specific instance of this thing so we're just gonna use a u ad because that's the way we do that",
    "start": "1125210",
    "end": "1131780"
  },
  {
    "text": "things here drawing parts so this is one",
    "start": "1131780",
    "end": "1137840"
  },
  {
    "text": "area where Manta already has a lot of infrastructure available to us to develop this feature which is that we",
    "start": "1137840",
    "end": "1143630"
  },
  {
    "text": "have objects that's a thing in the system there's tons of code to deal with objects they under they're understood throughout the system so we'll just do",
    "start": "1143630",
    "end": "1150830"
  },
  {
    "text": "that and we'll put them all on a single directory and this solves the problem of being able to list them there is a limit",
    "start": "1150830",
    "end": "1158000"
  },
  {
    "text": "on the number of entries you can have in a directory but it's the number of parts we wanted to be able to support in the",
    "start": "1158000",
    "end": "1163250"
  },
  {
    "text": "API is far less than that so that wasn't a concern and that convention of 10,000",
    "start": "1163250",
    "end": "1170179"
  },
  {
    "text": "parts being the maximum you could have is another convention from Amazon's us which we adopted a lot of their",
    "start": "1170179",
    "end": "1175440"
  },
  {
    "text": "conventions because they were reasonable and our users already understood them and only really deviated where it made",
    "start": "1175440",
    "end": "1180540"
  },
  {
    "text": "sense for us to so we have these part",
    "start": "1180540",
    "end": "1186510"
  },
  {
    "text": "directories a given multi-part upload has a directory where all its parts go where do we put those and luckily Manta",
    "start": "1186510",
    "end": "1192690"
  },
  {
    "text": "has some precedent for us already on how to do this our jobs I didn't mention",
    "start": "1192690",
    "end": "1198300"
  },
  {
    "text": "this before but your jobs are stored under another directory called slash jobs and all of the state for ongoing",
    "start": "1198300",
    "end": "1204270"
  },
  {
    "text": "jobs live in a directory structure there so with that okay we'll just have a new",
    "start": "1204270",
    "end": "1209460"
  },
  {
    "text": "top level directory that's something our users are familiar with it's something that the system understands and we can",
    "start": "1209460",
    "end": "1215490"
  },
  {
    "text": "put multi-part uploads there as they're ongoing but the uploads directory itself",
    "start": "1215490",
    "end": "1220800"
  },
  {
    "text": "is also a directory which means that it has that that cap of 1 million directory entries that I mentioned before and that",
    "start": "1220800",
    "end": "1228000"
  },
  {
    "text": "would for very large customers such as Samsung or other of our customers 1 million is not not that many ongoing",
    "start": "1228000",
    "end": "1235130"
  },
  {
    "text": "uploads as you could imagine so we don't really want to limit ourselves to just how much we can fit in that directory so",
    "start": "1235130",
    "end": "1241530"
  },
  {
    "text": "instead we did add a little bit of a compromise where we have one layer of indirection within this directory",
    "start": "1241530",
    "end": "1247500"
  },
  {
    "text": "structure what we call prefix directories and they're called prefix directories because they match on the",
    "start": "1247500",
    "end": "1253890"
  },
  {
    "text": "prefix of the UID of the NPU and you can adjust the length of how long that",
    "start": "1253890",
    "end": "1259530"
  },
  {
    "text": "prefix is to either increase or decrease the number of directories we have and this means that you can still lists all",
    "start": "1259530",
    "end": "1266880"
  },
  {
    "text": "the multi-part uploads on an account and it's bounded by the number of prefix directories so it's not an arbitrarily",
    "start": "1266880",
    "end": "1273900"
  },
  {
    "text": "long operation which is good but we still have the trade-off that you have potentially more requests to do but we",
    "start": "1273900",
    "end": "1281670"
  },
  {
    "text": "decided that was acceptable and to really make this concrete this is an example of that directory structure for",
    "start": "1281670",
    "end": "1288120"
  },
  {
    "start": "1283000",
    "end": "1283000"
  },
  {
    "text": "a given upload ID so that's the UUID I mentioned to identify this lifecycle of",
    "start": "1288120",
    "end": "1293490"
  },
  {
    "text": "an MP you the parts directory is where its parts get uploaded and we see that prefix directory yeah yeah so there",
    "start": "1293490",
    "end": "1301110"
  },
  {
    "text": "could be up to like 4096 directories I think based on the number of prefixes possible",
    "start": "1301110",
    "end": "1307749"
  },
  {
    "text": "and the example parts are just parts are identified by what order they go in so",
    "start": "1307749",
    "end": "1313570"
  },
  {
    "text": "zero is the first one one is the second one and so on and these are just again Manta objects so again all system",
    "start": "1313570",
    "end": "1319149"
  },
  {
    "text": "primitives that we know and understand so now I'm going to talk about something",
    "start": "1319149",
    "end": "1325299"
  },
  {
    "start": "1322000",
    "end": "1322000"
  },
  {
    "text": "that I think is probably the most interesting part of this whole API which is the commit operation and so when we",
    "start": "1325299",
    "end": "1332049"
  },
  {
    "text": "were starting out thinking about this we wanted to think about what our constraints were and what sort of properties we want this operation have",
    "start": "1332049",
    "end": "1337960"
  },
  {
    "text": "so the commit operation again is the thing that will take the parts make an object on disk somehow and then expose a",
    "start": "1337960",
    "end": "1345639"
  },
  {
    "text": "new metadata record and Manta saying big object text is stored on these storage",
    "start": "1345639",
    "end": "1351220"
  },
  {
    "text": "servers and we don't want that to look any different than normal objects so the",
    "start": "1351220",
    "end": "1356649"
  },
  {
    "text": "first thing that we decided was that this operation really needs to be idempotent idempotency is the property",
    "start": "1356649",
    "end": "1362859"
  },
  {
    "text": "that a given operation that if you try the operation again or you do an operation once and then do it again the",
    "start": "1362859",
    "end": "1368470"
  },
  {
    "text": "result is the same as the first time so a really trivial trivial example of an item potent operation is multiplying by",
    "start": "1368470",
    "end": "1374320"
  },
  {
    "text": "one so if you take a value multiplied by one however many times it's always going to be the same result and distributed",
    "start": "1374320",
    "end": "1380139"
  },
  {
    "text": "systems this usually means if you retry an operation that has the same effect which is what we want here and the",
    "start": "1380139",
    "end": "1386080"
  },
  {
    "text": "reason we want that is that in distributed systems things go missing all the time you won't hear a request or",
    "start": "1386080",
    "end": "1391899"
  },
  {
    "text": "a response from a server that you think you should and in that case you need to know as a client or as yeah as a client",
    "start": "1391899",
    "end": "1398830"
  },
  {
    "text": "what to do Wow whether that means that your request failed whether that means that that server is gone and being able",
    "start": "1398830",
    "end": "1404200"
  },
  {
    "text": "to safely retry it really removes a lot of those concerns and the other thing we",
    "start": "1404200",
    "end": "1409629"
  },
  {
    "text": "decide is that it needs to be atomic attempt atom necessity refers to for an",
    "start": "1409629",
    "end": "1416169"
  },
  {
    "text": "operation means that either the operation happened or didn't happen at all from a client's perspective and the reason this is important is that we will",
    "start": "1416169",
    "end": "1422679"
  },
  {
    "text": "have concurrent clients within the system working on the same mpu we don't really want them to end up in a weird",
    "start": "1422679",
    "end": "1428769"
  },
  {
    "text": "undefined state where maybe one of them have completed it and the other one didn't and we if we lose that state that can be",
    "start": "1428769",
    "end": "1434980"
  },
  {
    "text": "problematic so these are the two goals we really have with this operation and",
    "start": "1434980",
    "end": "1440710"
  },
  {
    "text": "so thinking back to what we learned about mantis architecture what actual implementation steps need to happen for",
    "start": "1440710",
    "end": "1446680"
  },
  {
    "text": "this - for that further commit to complete and the metadata tier we need",
    "start": "1446680",
    "end": "1451990"
  },
  {
    "text": "to as I mentioned insert that object record within the metadata tier for the final object and in the storage tier we",
    "start": "1451990",
    "end": "1459040"
  },
  {
    "text": "need to somehow take all those parts which are stored as Manta objects and make them into the final object so we're",
    "start": "1459040",
    "end": "1466929"
  },
  {
    "start": "1466000",
    "end": "1466000"
  },
  {
    "text": "gonna start with the storage layer implementation first and the constraints are we can't append or mutate Manta",
    "start": "1466929",
    "end": "1474940"
  },
  {
    "text": "objects that's just not something the system supports it would be a lot of confusing work and potentially losing",
    "start": "1474940",
    "end": "1480820"
  },
  {
    "text": "out on other guarantees that manta has and we'd also if we can like to avoid copying data back and forth because it's",
    "start": "1480820",
    "end": "1487420"
  },
  {
    "text": "expensive it's a latency hit it's just not ideal if we can help it so what does",
    "start": "1487420",
    "end": "1493360"
  },
  {
    "text": "this design look like the first thing we decided is that we'll tweak the definition of what parts look like with",
    "start": "1493360",
    "end": "1501309"
  },
  {
    "text": "respect to Manta objects just a little bit so instead of randomly choosing with what storage node each part goes on",
    "start": "1501309",
    "end": "1507309"
  },
  {
    "text": "we'll just pick what storage nodes we want the final object to live on up front and then co-locate parts on these",
    "start": "1507309",
    "end": "1512890"
  },
  {
    "text": "servers and as you might be able to infer this has the nice property of only having to copy data locally which is a",
    "start": "1512890",
    "end": "1518830"
  },
  {
    "text": "much faster operation than sending it out over the network and you know through to TCP stacks and so on and so",
    "start": "1518830",
    "end": "1528820"
  },
  {
    "text": "we created this new operation called Mako finalized Mako like mako sharks the",
    "start": "1528820",
    "end": "1533890"
  },
  {
    "text": "storage storage node service I know there are a lot of nautical terms sorry I hope I'm not confusing you a new",
    "start": "1533890",
    "end": "1540760"
  },
  {
    "text": "operation called Mako finalized which is the finalization of an MP you and it's going to take as input an array of party",
    "start": "1540760",
    "end": "1547420"
  },
  {
    "text": "tags which are identifiers as for the parts or any object amantha really and",
    "start": "1547420",
    "end": "1553480"
  },
  {
    "text": "so this is a visualization of that we have this storage node 3 dot store and",
    "start": "1553480",
    "end": "1559960"
  },
  {
    "text": "this request coming in for combine these parts and this new object with this name and these",
    "start": "1559960",
    "end": "1567220"
  },
  {
    "text": "are all the parts as they're on disk and their sizes and you see the old IDs map to the request so make will finalize",
    "start": "1567220",
    "end": "1573340"
  },
  {
    "text": "will create that new target object file and then it'll pinned parts to this file",
    "start": "1573340",
    "end": "1579780"
  },
  {
    "text": "and that is going to be the final flat file that lives on disk and at this",
    "start": "1579780",
    "end": "1586180"
  },
  {
    "text": "point we don't really want to have you know double the data for every MP you lying around so Mako finalize will",
    "start": "1586180",
    "end": "1592090"
  },
  {
    "text": "remove those parts and so there we have that flat object on disk and we can expose that in Manta instead so the next",
    "start": "1592090",
    "end": "1600310"
  },
  {
    "text": "question is returning to our design constraints is this an atomic operation is this an item potent operation and",
    "start": "1600310",
    "end": "1607240"
  },
  {
    "text": "it's for thinking through this I think it's really helpful to think about different points at which the server can",
    "start": "1607240",
    "end": "1612280"
  },
  {
    "text": "crash so first let's think about if Mako crashes while it's writing out this",
    "start": "1612280",
    "end": "1617320"
  },
  {
    "text": "chart target object file while it's appending those parts so crash what what",
    "start": "1617320",
    "end": "1624610"
  },
  {
    "text": "happens in that case well because we made the decision not to remove the parts until after this file is flush to",
    "start": "1624610",
    "end": "1631720"
  },
  {
    "text": "disk then we know that the parts are still there and no matter what we can reconstruct that object so that's okay",
    "start": "1631720",
    "end": "1638790"
  },
  {
    "text": "what happens if it's already written out the target object file it's there and then it's removing parts and it crashes",
    "start": "1638790",
    "end": "1644770"
  },
  {
    "text": "what what sort of state are we left in so that looks something like that in",
    "start": "1644770",
    "end": "1653020"
  },
  {
    "text": "this case it's still okay to retry because the file is there we just really",
    "start": "1653020",
    "end": "1659710"
  },
  {
    "text": "need a way to verify that the file is not corrupted it matches what the request wants so to do this we also do",
    "start": "1659710",
    "end": "1667000"
  },
  {
    "text": "an md5 sum of the file as as we as its created and also check the number of",
    "start": "1667000",
    "end": "1673690"
  },
  {
    "text": "bytes just as an additional check that this file is what we expect and so in this case Mako would verify that the md5",
    "start": "1673690",
    "end": "1679330"
  },
  {
    "text": "sum on the target object file matches what the request expects even though that's not on the slide sorry and it",
    "start": "1679330",
    "end": "1685060"
  },
  {
    "text": "also would see that it's 16 Meg's which is expected and then say okay this has already been tried once I can just",
    "start": "1685060",
    "end": "1690760"
  },
  {
    "text": "remove these parts and move on I'll return success",
    "start": "1690760",
    "end": "1695910"
  },
  {
    "text": "so one thing I didn't talk about in those previous slides are what happens",
    "start": "1695910",
    "end": "1701920"
  },
  {
    "text": "if a request sends a different set of parts so instead of saying like you know",
    "start": "1701920",
    "end": "1708070"
  },
  {
    "text": "these four parts I only send the first three and if you have two of those operations ongoing at the same time",
    "start": "1708070",
    "end": "1714250"
  },
  {
    "text": "where they conflict with one another it's possible that one of the operations will remove one of the parts the other",
    "start": "1714250",
    "end": "1720400"
  },
  {
    "text": "one needs and then we're in a weird state where we have like 3/4 of a target object file written out and it's not",
    "start": "1720400",
    "end": "1726820"
  },
  {
    "text": "necessarily what the user wanted so we added some additional constraints at the API level outside of maker finalize to",
    "start": "1726820",
    "end": "1734170"
  },
  {
    "text": "prevent this sort of thing from happening so the key thing here is we don't want two clients to be committing",
    "start": "1734170",
    "end": "1740440"
  },
  {
    "text": "a different set of parts because as soon as that operation happens it's possible that we've started removing them and we",
    "start": "1740440",
    "end": "1745540"
  },
  {
    "text": "no longer have the data we need to reconstruct that file so this is outside of Mako finalized but an important part",
    "start": "1745540",
    "end": "1751030"
  },
  {
    "text": "of the operation being idempotent and so we check for those conflicts",
    "start": "1751030",
    "end": "1756370"
  },
  {
    "text": "again before even invoking it and we also want to have aborts conflict with",
    "start": "1756370",
    "end": "1763450"
  },
  {
    "text": "commits mostly for convenience sake because it would be more complicated to implement it otherwise it isn't very possible I think to do that but we",
    "start": "1763450",
    "end": "1770020"
  },
  {
    "text": "decided that up front so what all this",
    "start": "1770020",
    "end": "1775120"
  },
  {
    "text": "indicates is that we need some additional state here Mako finalize does not have information about what clients",
    "start": "1775120",
    "end": "1782170"
  },
  {
    "text": "are trying what things on the same in PU and we don't need to protect against that so now we're gonna think back to",
    "start": "1782170",
    "end": "1788920"
  },
  {
    "text": "the implementation details about the metadata tier we have the storage tier covered let's think about the metadata",
    "start": "1788920",
    "end": "1793990"
  },
  {
    "text": "so where should we store this state we already have some metadata records",
    "start": "1793990",
    "end": "1800590"
  },
  {
    "text": "associated with an MP you specifically the parts directory record which is the directory that contains all the parts",
    "start": "1800590",
    "end": "1806740"
  },
  {
    "text": "and we can just add arbitrary things to that metadata record basically because it's just a JSON object we can do that",
    "start": "1806740",
    "end": "1814600"
  },
  {
    "text": "we can change the implementation so Singh considerations here MP you commit",
    "start": "1814600",
    "end": "1821560"
  },
  {
    "text": "as a whole needs to be atomic an item potent which also means that it's sub operations need to either be atomic",
    "start": "1821560",
    "end": "1828910"
  },
  {
    "text": "or idempotent on their own or work together to create that so if we only",
    "start": "1828910",
    "end": "1836230"
  },
  {
    "text": "had the state about the NP you stored in the parts directory like I mentioned before is this atomic this is a question",
    "start": "1836230",
    "end": "1843610"
  },
  {
    "text": "to think about and it may be immediately apparent from the slide that it is not",
    "start": "1843610",
    "end": "1849270"
  },
  {
    "start": "1845000",
    "end": "1845000"
  },
  {
    "text": "based on the way I've structured it but we have the upload record shard referring to the shard that the upload",
    "start": "1849270",
    "end": "1855970"
  },
  {
    "text": "or parts directory record that's the same thing sorry it's also gone and then",
    "start": "1855970",
    "end": "1861250"
  },
  {
    "text": "we also have the target object shard which is the shard where the metadata of that final target object is going to live and there's not these aren't",
    "start": "1861250",
    "end": "1867160"
  },
  {
    "text": "necessarily the same chart at all because they're not the same directory right that's the only thing we know guarantees are on the same shard and so",
    "start": "1867160",
    "end": "1874660"
  },
  {
    "text": "this is another example multi-part upload and this is muskie coordinating an MP you commit request so it's going",
    "start": "1874660",
    "end": "1882400"
  },
  {
    "text": "to ask for the state and this is an example of how things don't work just to be clear and it says it's been created",
    "start": "1882400",
    "end": "1889120"
  },
  {
    "text": "no one's committed or aborted it yet and so it says ok right that the state is",
    "start": "1889120",
    "end": "1894790"
  },
  {
    "text": "committed to this record I'm claiming that this client has the the final say on what happens to this MP you and now",
    "start": "1894790",
    "end": "1901660"
  },
  {
    "text": "muskie will go right that target object record to expose big object in Manta and the shard says ok cool",
    "start": "1901660",
    "end": "1908020"
  },
  {
    "text": "ok now example of where this could go wrong the same thing happens but instead",
    "start": "1908020",
    "end": "1915280"
  },
  {
    "text": "of hearing or response muskie doesn't hear a response so at this point we're in an undefined state because we don't",
    "start": "1915280",
    "end": "1921910"
  },
  {
    "text": "know for sure that the target object shard responded to this particular request it's possible we could just look",
    "start": "1921910",
    "end": "1927580"
  },
  {
    "text": "to see if that object is in Manta but because it's a normal object it could immediately be deleted so its presence",
    "start": "1927580",
    "end": "1933390"
  },
  {
    "text": "or its absence is a guarantee of neither that it was committed or aborted it",
    "start": "1933390",
    "end": "1938980"
  },
  {
    "text": "could be deleted by other users so that's not going to work",
    "start": "1938980",
    "end": "1944760"
  },
  {
    "text": "so clearly this is not not the way forward so in order for this operation",
    "start": "1945910",
    "end": "1951760"
  },
  {
    "text": "to be atomic we need the state change of the multi-part upload and the exposed exposing of the target object in Manta",
    "start": "1951760",
    "end": "1958840"
  },
  {
    "text": "to be in the same transaction and an atomic energy ama quai so either that",
    "start": "1958840",
    "end": "1964570"
  },
  {
    "text": "happens or it doesn't happen at all but both of those things need to happen at the same time on the same shard so the",
    "start": "1964570",
    "end": "1970630"
  },
  {
    "text": "solution is we will put the official state of the amp you on the shard of the target object that seems like it would",
    "start": "1970630",
    "end": "1977020"
  },
  {
    "text": "work and we can still put some state on the parts directory record simply as an optimization but ultimately the final",
    "start": "1977020",
    "end": "1983050"
  },
  {
    "text": "state is what exists on that target object shard and to do this we created a new type of metadata record of Manta",
    "start": "1983050",
    "end": "1988570"
  },
  {
    "text": "called the finalizing record and it's in a different database table and it has a",
    "start": "1988570",
    "end": "1995320"
  },
  {
    "text": "unique identifier to both the mpu and the target object so you can you can see that for a particular identifier some",
    "start": "1995320",
    "end": "2002520"
  },
  {
    "text": "client committed or aborted this thing and that's there regardless of whether the target object record is there so",
    "start": "2002520",
    "end": "2010980"
  },
  {
    "text": "that's going to look something like this muskie rights the state finalising",
    "start": "2010980",
    "end": "2017790"
  },
  {
    "text": "instead of committed to the upload record and this is the optimization part but it basically is telling any future",
    "start": "2017790",
    "end": "2024360"
  },
  {
    "text": "Muskies that ask for this record go look at the target object shard instead to see if this impe you is committed and so",
    "start": "2024360",
    "end": "2031940"
  },
  {
    "text": "when the commit actually happens is in this transaction",
    "start": "2031940",
    "end": "2036960"
  },
  {
    "text": "so at muskie rights both the big object metadata record and then this finalising record that's just kind of what the key",
    "start": "2036960",
    "end": "2043230"
  },
  {
    "text": "looks like but those go in the same transaction and so if we hear a response from that then we know we're in the",
    "start": "2043230",
    "end": "2048600"
  },
  {
    "text": "clear that is an atomic operation that the mpu is now done and that this object record is there and it doesn't matter",
    "start": "2048600",
    "end": "2054720"
  },
  {
    "text": "what happens to it afterwards because we have this additional metadata record to tell us what happened to that particular",
    "start": "2054720",
    "end": "2059820"
  },
  {
    "text": "MPU so in the event that that response is lost that's fine we can just ask for",
    "start": "2059820",
    "end": "2065790"
  },
  {
    "text": "that finalizing record again and know that it was completed even if the target object was deleted",
    "start": "2065790",
    "end": "2072549"
  },
  {
    "text": "and so I've kind of been referring to states of imp use I think it's useful to",
    "start": "2072549",
    "end": "2078289"
  },
  {
    "start": "2074000",
    "end": "2074000"
  },
  {
    "text": "see the really really basic state machine for what they look like so as a client when you initiate an MP you you",
    "start": "2078289",
    "end": "2085669"
  },
  {
    "text": "move it into state created and then you upload your parts at this stage and then you can either commit or abort it which",
    "start": "2085669",
    "end": "2091970"
  },
  {
    "text": "moves it into the finalizing state and that's the space between initiating the",
    "start": "2091970",
    "end": "2097490"
  },
  {
    "text": "request and actually seeing that atomic batch transaction that we just saw in the previous slide and so once the",
    "start": "2097490",
    "end": "2105319"
  },
  {
    "text": "finalizing record commit abort commit or abort record is written out then it's done and that's the end of it no more",
    "start": "2105319",
    "end": "2112190"
  },
  {
    "text": "requests can happen on it and for the sake of completeness this is all the",
    "start": "2112190",
    "end": "2118009"
  },
  {
    "start": "2115000",
    "end": "2115000"
  },
  {
    "text": "steps sort of in pseudocode on muskie side I'm not going to read through them but I'll have them in this size if",
    "start": "2118009",
    "end": "2124400"
  },
  {
    "text": "you're interested in want to kind of just revalidate everything I've said and",
    "start": "2124400",
    "end": "2131119"
  },
  {
    "start": "2130000",
    "end": "2130000"
  },
  {
    "text": "for other multi-part upload operations concurrency and idempotency atomicity all these things are important but",
    "start": "2131119",
    "end": "2137630"
  },
  {
    "text": "commit is really the most interesting one which is why I focused on it but for aborting and mpu we don't invoke",
    "start": "2137630",
    "end": "2144049"
  },
  {
    "text": "invoke Mako finalized to create the object it's but it has the same finalizing record insertion property so",
    "start": "2144049",
    "end": "2152239"
  },
  {
    "text": "instead of inserting a target object record and the finalizing record we just inserted the finalizing record to say",
    "start": "2152239",
    "end": "2157940"
  },
  {
    "text": "this impe use aborted you can't commit it anymore yeah so thinking back to kind",
    "start": "2157940",
    "end": "2167390"
  },
  {
    "start": "2165000",
    "end": "2165000"
  },
  {
    "text": "of the high-level bird's-eye view of what I wanted this talk to be I was thinking a lot about the design",
    "start": "2167390",
    "end": "2172910"
  },
  {
    "text": "constraints that we had both for this new feature and also what Manta already had hits it the mature system a legacy",
    "start": "2172910",
    "end": "2179480"
  },
  {
    "text": "system that has its own invariants and trade-offs that were made five years ago",
    "start": "2179480",
    "end": "2185630"
  },
  {
    "text": "when it was created and we have to work around those so some things that we wanted to achieve of multi-part uploads",
    "start": "2185630",
    "end": "2191480"
  },
  {
    "text": "were atomic commits and aborts also item potency there and sane listing of both parts and all",
    "start": "2191480",
    "end": "2198950"
  },
  {
    "text": "of the IMP use in your account but we had to work with these things so immutable objects the metadata in",
    "start": "2198950",
    "end": "2205309"
  },
  {
    "text": "store bridge implementation of Manta we don't have support for cross shard",
    "start": "2205309",
    "end": "2210349"
  },
  {
    "text": "transactions so one thing you might have been wondering in the slides where I was talking about different the uploaded",
    "start": "2210349",
    "end": "2216890"
  },
  {
    "text": "record shard and the target object shard as well why can't you just do a batch operation across those two and that's",
    "start": "2216890",
    "end": "2222200"
  },
  {
    "text": "just not something that we have in our system and would have a lot of other considerations if we were to introduce it so we just decided not to go with",
    "start": "2222200",
    "end": "2228829"
  },
  {
    "text": "that and because this is distributed systems everything can fail all the time unexpectedly",
    "start": "2228829",
    "end": "2233869"
  },
  {
    "text": "so we have to think about that no matter what so how do we work around these things immutable objects we decided that",
    "start": "2233869",
    "end": "2241059"
  },
  {
    "start": "2236000",
    "end": "2236000"
  },
  {
    "text": "mutating Manta objects was a non-starter we just don't have the support for that",
    "start": "2241059",
    "end": "2246289"
  },
  {
    "text": "so that was not a solution there's this separation between metadata and storage",
    "start": "2246289",
    "end": "2251359"
  },
  {
    "text": "which means that we had to think about all the properties we wanted these API operations to have both from a metadata",
    "start": "2251359",
    "end": "2257660"
  },
  {
    "text": "perspective and a storage perspective because they both are going to be involved without the cross shard",
    "start": "2257660",
    "end": "2262700"
  },
  {
    "text": "transaction support we just hat use a single shard that works that's our single layer our single unit of",
    "start": "2262700",
    "end": "2268460"
  },
  {
    "text": "atomicity in Manta and we thought for the distributed systems failing",
    "start": "2268460",
    "end": "2274220"
  },
  {
    "text": "unexpectedly we just thought about what would happen if different things don't respond and how each component would",
    "start": "2274220",
    "end": "2281059"
  },
  {
    "text": "deal with that but there were some trade-offs here so make o finalize is",
    "start": "2281059",
    "end": "2287599"
  },
  {
    "start": "2283000",
    "end": "2283000"
  },
  {
    "text": "actually kind of a weird operation in Manta compared to the rest of the things that Mako does it is basically engine X",
    "start": "2287599",
    "end": "2295430"
  },
  {
    "text": "which if you use that mostly Maps a file system on a server to a URI requested so",
    "start": "2295430",
    "end": "2303920"
  },
  {
    "text": "it's pretty bounded in terms of its request time and and really straightforward but then we added this",
    "start": "2303920",
    "end": "2309440"
  },
  {
    "text": "kind of like complex file system thing or thing or operation that's interacting",
    "start": "2309440",
    "end": "2315829"
  },
  {
    "text": "with file system rather and it has variable latency because it's going to depend on the size of the the object and",
    "start": "2315829",
    "end": "2321049"
  },
  {
    "text": "so that's not something that we really like to introduce in Manta but we decided was an acceptable trade-off for",
    "start": "2321049",
    "end": "2326150"
  },
  {
    "text": "all the other things that we mentioned I mentioned before such as copying data",
    "start": "2326150",
    "end": "2332059"
  },
  {
    "text": "across the network that would probably be even slower and another thing that may not have been",
    "start": "2332059",
    "end": "2337920"
  },
  {
    "text": "immediately obvious is that the musky when it's uploading these parts it kind",
    "start": "2337920",
    "end": "2345030"
  },
  {
    "text": "of deviates from the normal object put path a bit because it has to put them all on the same Sharks and this can have",
    "start": "2345030",
    "end": "2351510"
  },
  {
    "text": "some implications for the availability of these parts so if for instance an imp",
    "start": "2351510",
    "end": "2357119"
  },
  {
    "text": "you is created and it picked sharks 1 and 4 and then shark 4 goes away well now we can't upload parts to that shark",
    "start": "2357119",
    "end": "2363960"
  },
  {
    "text": "so there's this window where we lose a little bit of durability just while",
    "start": "2363960",
    "end": "2369840"
  },
  {
    "text": "we're uploading it and that that's another trade-off we had to make but after doing some analysis of it we",
    "start": "2369840",
    "end": "2376109"
  },
  {
    "text": "decided it was it was probably fine because most of these things are really short-lived so if a shark is going away",
    "start": "2376109",
    "end": "2381720"
  },
  {
    "text": "it's likely that it won't hit within that window but it's a little trade-off",
    "start": "2381720",
    "end": "2387750"
  },
  {
    "text": "it's still there and so some final thoughts are if you want to see a really",
    "start": "2387750",
    "end": "2394260"
  },
  {
    "start": "2389000",
    "end": "2389000"
  },
  {
    "text": "complete discussion of everything I just talked about I have an RFT rfds are a",
    "start": "2394260",
    "end": "2399720"
  },
  {
    "text": "thing we do at Giant where if we want to discuss ideas functionality changes and",
    "start": "2399720",
    "end": "2405810"
  },
  {
    "text": "and they range from software to hiring practices to you know organizational things and we all we do it all in the",
    "start": "2405810",
    "end": "2413310"
  },
  {
    "text": "open because everything we do is open source so you can see that our ft if you're interested in reading more about all this in much more detail and when",
    "start": "2413310",
    "end": "2422820"
  },
  {
    "text": "you're adding a new functionality to a system you know you'll have you have to think about the invariance of the system",
    "start": "2422820",
    "end": "2427830"
  },
  {
    "text": "and if you violate them what what costs are what things are you losing in the process and what things are you gaining",
    "start": "2427830",
    "end": "2433109"
  },
  {
    "text": "because everything is just a trade-off for pretty much all technical decisions and even legacy systems can have new",
    "start": "2433109",
    "end": "2441000"
  },
  {
    "text": "features that we're kind of outside the design scope of what they're imagined the operating system I guess is a legacy",
    "start": "2441000",
    "end": "2448290"
  },
  {
    "text": "system and we still innovate on that a joint - so you know dream big so I can't",
    "start": "2448290",
    "end": "2455010"
  },
  {
    "text": "wait to see another presentation about a new feature for Manta on its 10th birthday which is in five years and I",
    "start": "2455010",
    "end": "2461100"
  },
  {
    "text": "think that's all thank you great thank you",
    "start": "2461100",
    "end": "2467270"
  },
  {
    "text": "and we have just a couple of minutes if we have a question or two I feel like my",
    "start": "2467720",
    "end": "2473850"
  },
  {
    "text": "brain is teeming I have so many questions myself but we'll let other people ask them so we talked about",
    "start": "2473850",
    "end": "2483960"
  },
  {
    "text": "multi-part applauds right let's say a file has five uploads it fails on the",
    "start": "2483960",
    "end": "2490380"
  },
  {
    "text": "third upload third or fourth upload we didn't discuss that scenario what will happen will I have to go through so is",
    "start": "2490380",
    "end": "2497580"
  },
  {
    "text": "there something like a save point or something I know you have a commit but",
    "start": "2497580",
    "end": "2503670"
  },
  {
    "text": "if we come half way and then fail what would you do you say you're talking about the the process of uploading parts",
    "start": "2503670",
    "end": "2510810"
  },
  {
    "text": "to an MP you in that case you can just retry so I didn't talk about the API for that much but it's it's like like I said",
    "start": "2510810",
    "end": "2517859"
  },
  {
    "text": "there there man to object so it's just a cut to the system so you would just retry it and because there are objects",
    "start": "2517859",
    "end": "2524010"
  },
  {
    "text": "you can overwrite them and change them as you wish I don't know if I answer your question yeah yeah well yeah",
    "start": "2524010",
    "end": "2534800"
  },
  {
    "text": "sorry let me let me sorry let me give you the mic it's also kind of hard yeah it's hard to hear you about the mic yeah",
    "start": "2535260",
    "end": "2542880"
  },
  {
    "text": "so what I'm trying to focus here is will I have to repeat step one and two if it fails on third I am no right so if there",
    "start": "2542880",
    "end": "2555060"
  },
  {
    "text": "is a transaction which fails during the commit or during the finalize so I the",
    "start": "2555060",
    "end": "2562950"
  },
  {
    "text": "first question was would I have to repeat you answered no that's done now",
    "start": "2562950",
    "end": "2569160"
  },
  {
    "text": "if it fails during finalized when I'm hitting finalize and it fails yeah so is",
    "start": "2569160",
    "end": "2574620"
  },
  {
    "text": "that object treated as orphan or something no so in the case where it",
    "start": "2574620",
    "end": "2579750"
  },
  {
    "text": "failed during finalized like either the Mako finalise operation or the insertion of the metadata step you can still retry",
    "start": "2579750",
    "end": "2588510"
  },
  {
    "text": "it though that was one of the things we really wanted to make sure so you don't have to start from scratch",
    "start": "2588510",
    "end": "2595460"
  },
  {
    "text": "I have hopefully three short questions okay is okay",
    "start": "2596310",
    "end": "2602580"
  },
  {
    "text": "one fine is there an s3 compatibility layer for Manta I we do have software",
    "start": "2602580",
    "end": "2611430"
  },
  {
    "text": "for doing that I don't know what the status of it is because it's not a different team but we do have software",
    "start": "2611430",
    "end": "2617310"
  },
  {
    "text": "written by joint that does that but not a server side there okay thank you and",
    "start": "2617310",
    "end": "2623310"
  },
  {
    "text": "we're we're actually just coming right up against lunch so you'll be available to chat with people at lunch",
    "start": "2623310",
    "end": "2629900"
  },
  {
    "text": "[Applause]",
    "start": "2629900",
    "end": "2634380"
  }
]