[
  {
    "start": "0",
    "end": "136000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "hi everyone um well it's it's good evening so it's uh it's it's evening over here in the uk at the moment um",
    "start": "12639",
    "end": "17840"
  },
  {
    "text": "thank you very much for joining um the title of the talk is uh kafka devops and resilience for all",
    "start": "17840",
    "end": "25039"
  },
  {
    "text": "so what do i mean by this so um i'm using kind of devops as a bit of",
    "start": "25039",
    "end": "30400"
  },
  {
    "text": "a lazy way to kind of catch all of these kind of modern um",
    "start": "30400",
    "end": "35760"
  },
  {
    "text": "uh software delivery techniques you know git ops infrastructure as code configures code um",
    "start": "35760",
    "end": "42399"
  },
  {
    "text": "basically this basket of all of these different kind of um techniques um and how we can apply that to a kafka",
    "start": "42399",
    "end": "48719"
  },
  {
    "text": "cluster because it's quite easy to kind of just overlook um you know overlook kafka and just say",
    "start": "48719",
    "end": "54879"
  },
  {
    "text": "well it's just a message but who cares kind of thing um so what i'm going to do is i'm going to talk through um",
    "start": "54879",
    "end": "61280"
  },
  {
    "text": "i'm going to do a little bit of a kafka primer i won't spend too much uh time on that because i i had no guarantee as to",
    "start": "61280",
    "end": "67040"
  },
  {
    "text": "who would turn up and i've already seen that um we've got some of you folks are out there kind of",
    "start": "67040",
    "end": "72240"
  },
  {
    "text": "running kafka in prod so hopefully what we'll do is we'll we'll pick up some hints and tips along",
    "start": "72240",
    "end": "77360"
  },
  {
    "text": "the way of mistakes i've made i'll be brutally honest",
    "start": "77360",
    "end": "83920"
  },
  {
    "text": "and some of the tools that we've we've got to kind of get around that in fact and then go on to the kind of the the",
    "start": "84640",
    "end": "90479"
  },
  {
    "text": "why what in the house so you know why do i need to think about this stuff what do i need to think about and how can i",
    "start": "90479",
    "end": "96159"
  },
  {
    "text": "implement these ideas so some tools and some some different tips and tricks so um a little bit about me um",
    "start": "96159",
    "end": "104240"
  },
  {
    "text": "um i'm based in the uk um i've had a career in finance and i work for a company called open credo",
    "start": "104240",
    "end": "110560"
  },
  {
    "text": "we're a booty consultancy in the uk we mainly delivering in kind of data and",
    "start": "110560",
    "end": "116159"
  },
  {
    "text": "graph uh cloud native architectures and platform engineering so",
    "start": "116159",
    "end": "121759"
  },
  {
    "text": "what that means is that actually this talk will hopefully be somewhere in the middle of those three different um",
    "start": "121759",
    "end": "128959"
  },
  {
    "text": "three different disciplines that we have um so without further ado um thinking about",
    "start": "128959",
    "end": "135920"
  },
  {
    "text": "kafka um so what's the difference you know i do hear some people kind of go well it's",
    "start": "135920",
    "end": "141760"
  },
  {
    "start": "136000",
    "end": "229000"
  },
  {
    "text": "just a message queue who cares um but the the um the the the posh term which is very",
    "start": "141760",
    "end": "148560"
  },
  {
    "text": "english word uh the posh term for for kafka is it's in a append only a mutable event block",
    "start": "148560",
    "end": "154840"
  },
  {
    "text": "so you've got a um an ordered sequence of events a queue by",
    "start": "154840",
    "end": "160959"
  },
  {
    "text": "any other name yeah um and that is immutable um",
    "start": "160959",
    "end": "166640"
  },
  {
    "text": "you write to the end of the queue so a producer will write to the end of that log and keep writing to the end of that log",
    "start": "166640",
    "end": "172879"
  },
  {
    "text": "and one of the key differences between kafka as a as a an event sourcing platform",
    "start": "172879",
    "end": "180000"
  },
  {
    "text": "versus a message queue is that you can have multiple consumers within that data",
    "start": "180000",
    "end": "185599"
  },
  {
    "text": "and they can be blissfully unaware of each other because kafka will keep track of",
    "start": "185599",
    "end": "191680"
  },
  {
    "text": "where you have read up to within the stream of data within that ordered sequence of events",
    "start": "191680",
    "end": "198000"
  },
  {
    "text": "um what's great about this and why am i such a kind of a paid up member of the kafka fan club",
    "start": "198000",
    "end": "203200"
  },
  {
    "text": "is is that we can create architectures that piggyback on kafka's scalability came out of linkedin",
    "start": "203200",
    "end": "209599"
  },
  {
    "text": "and you can do all sorts of interesting data sharing use cases like choreograph micro services or you can use it as a as",
    "start": "209599",
    "end": "216000"
  },
  {
    "text": "a data bus or confluence say as a digital nervous system they have this kind of concept of of it being the",
    "start": "216000",
    "end": "223200"
  },
  {
    "text": "backbone of the data throughout an enterprise um key concepts to kind of bear in mind",
    "start": "223200",
    "end": "230319"
  },
  {
    "start": "229000",
    "end": "450000"
  },
  {
    "text": "is that kafka is a it's a multi-node cluster and that gives it its resilience it's",
    "start": "230319",
    "end": "235920"
  },
  {
    "text": "horizontal scaling the offset where you've read up to within a kafka topic that can be managed",
    "start": "235920",
    "end": "243040"
  },
  {
    "text": "by kafka um and that becomes really really powerful as well um but we'll look at some of the",
    "start": "243040",
    "end": "250480"
  },
  {
    "text": "pitfalls around offset management a little bit later on as well",
    "start": "250480",
    "end": "255599"
  },
  {
    "text": "another interesting uh or a key concept to think about is is partitions",
    "start": "255599",
    "end": "261759"
  },
  {
    "text": "so a topic within kafka is physically divided into partitions and",
    "start": "261759",
    "end": "269600"
  },
  {
    "text": "kafka makes one guarantee around partitions is that um as data is written into a partition its",
    "start": "269600",
    "end": "276240"
  },
  {
    "text": "order is preserved and we'll see what that actually means in terms of your",
    "start": "276240",
    "end": "281280"
  },
  {
    "text": "application architecture you know applying devops to this this kind of stuff um and partitions also enable",
    "start": "281280",
    "end": "288160"
  },
  {
    "text": "scale out as well um the other thing to do to bear in mind at",
    "start": "288160",
    "end": "293440"
  },
  {
    "text": "the moment and they've just had a a recent milestone on this at the moment",
    "start": "293440",
    "end": "300320"
  },
  {
    "text": "you also have to have a zookeeper cluster as well so there is yet another moving part to your kafka cluster but",
    "start": "300320",
    "end": "306960"
  },
  {
    "text": "they've just recently got a working version where they've pushed the zookeeper data down into",
    "start": "306960",
    "end": "313280"
  },
  {
    "text": "kafka so it's actually simplified that deployment but i don't believe that seen the light of day just yet um",
    "start": "313280",
    "end": "319680"
  },
  {
    "text": "so if you have worked with kafka um that's that's the um that's the kind of the primer out of the way by the way um",
    "start": "319680",
    "end": "325919"
  },
  {
    "text": "but if you have worked with catholic you might be sitting there saying well well look kafka creates topics automatically",
    "start": "325919",
    "end": "331039"
  },
  {
    "text": "on the fly for me i don't need to worry about devops um hopefully that's being said by no one",
    "start": "331039",
    "end": "337039"
  },
  {
    "text": "but it might be but so what so what if you leave that config up to kafka",
    "start": "337039",
    "end": "342160"
  },
  {
    "text": "um uh config effects performance because kafka's got this really",
    "start": "342160",
    "end": "347680"
  },
  {
    "text": "um neat way um of able to kind of configure a topic",
    "start": "347680",
    "end": "354880"
  },
  {
    "text": "topic by topic you can tune a topic for performance but you can also tune it for uh resilience for instance",
    "start": "354880",
    "end": "362240"
  },
  {
    "text": "so you really want to be thinking about what it is that you're or how you are configuring those topics um and making",
    "start": "362240",
    "end": "369840"
  },
  {
    "text": "it consistent across all your environments but what if you leave it up to kafka's",
    "start": "369840",
    "end": "374960"
  },
  {
    "text": "defaults what if the defaults change what if the defaults are different for different environments you might have you know this is a horrible place to be",
    "start": "374960",
    "end": "381199"
  },
  {
    "text": "if you've got a different version of kafka you know each of your environments is some kind of magical snowflake",
    "start": "381199",
    "end": "387199"
  },
  {
    "text": "um that that's not a good place to be you know i always think back to",
    "start": "387199",
    "end": "392400"
  },
  {
    "text": "um the the kind of the mythical sre guy that or person that's that's at three",
    "start": "392400",
    "end": "398000"
  },
  {
    "text": "o'clock in the morning that someone's kicking out of bed um yeah alexander's nodding he's he's",
    "start": "398000",
    "end": "404000"
  },
  {
    "text": "he's he's staying up tonight because he he has to be up on he's on call um",
    "start": "404000",
    "end": "409120"
  },
  {
    "text": "but um you know the mythical sre guy or the the the or even the developer you know",
    "start": "409120",
    "end": "414479"
  },
  {
    "text": "getting kicked out of bed at three o'clock in the morning you know you want to make that three o'clock in the morning cool as easy and painless as",
    "start": "414479",
    "end": "420319"
  },
  {
    "text": "possible and hopefully some of these techniques will actually give you some of that and when i think about architecture and",
    "start": "420319",
    "end": "426000"
  },
  {
    "text": "i think about my applications i think about the 12-factor application um",
    "start": "426000",
    "end": "431199"
  },
  {
    "text": "and one of the main thing is one code base several deploy so how can i boil my config down and materialize my config",
    "start": "431199",
    "end": "437280"
  },
  {
    "text": "into a point where i can make sure that i can just have that all in uh in git",
    "start": "437280",
    "end": "442479"
  },
  {
    "text": "and i'm just blasting it out into different environments",
    "start": "442479",
    "end": "447759"
  },
  {
    "text": "so hopefully you're sitting there thinking i'm interested what can i devopsify um if you pardon me for making",
    "start": "447759",
    "end": "454240"
  },
  {
    "start": "450000",
    "end": "640000"
  },
  {
    "text": "up a word um broker setup um we'll look at security coming up in in a",
    "start": "454240",
    "end": "461680"
  },
  {
    "text": "few slides time about how to kind of set that up um server.properties um i was at a",
    "start": "461680",
    "end": "468560"
  },
  {
    "text": "conference a few years ago and somebody stood on stage and they said um it's a really great idea if you take for",
    "start": "468560",
    "end": "475360"
  },
  {
    "text": "example something like kafka when it's box fresh when you just downloaded it you take its",
    "start": "475360",
    "end": "480879"
  },
  {
    "text": "server.properties and you stick it straight in your source control because then you know",
    "start": "480879",
    "end": "486560"
  },
  {
    "text": "this is the baseline this gives you your baseline and when you apply any updates to that you can then track why you've",
    "start": "486560",
    "end": "493199"
  },
  {
    "text": "made those updates because hopefully you're going to have a jira ticket or you know bugzilla ticket or whatever it might be",
    "start": "493199",
    "end": "499120"
  },
  {
    "text": "that you've got the traceability as to why you made that change because you really want to do that you know come back to our three o'clock in the morning",
    "start": "499120",
    "end": "505199"
  },
  {
    "text": "cool you want to know precisely what config is running um",
    "start": "505199",
    "end": "510800"
  },
  {
    "text": "other things that you can look at putting devops rigor around topic setup and partitioning so i said",
    "start": "510800",
    "end": "517839"
  },
  {
    "text": "earlier that partitions affect ordering and if they affect ordering they also affect your application behavior so a",
    "start": "517839",
    "end": "525279"
  },
  {
    "text": "few years ago i was working at a on a nikitu project",
    "start": "525279",
    "end": "530399"
  },
  {
    "text": "in london for a french bank and um we hadn't really paid attention to the uh the partitioning strategy and",
    "start": "530399",
    "end": "538640"
  },
  {
    "text": "what we found is that we were getting updates for trades before we were getting the",
    "start": "538640",
    "end": "545120"
  },
  {
    "text": "trade the original trade image itself and so therefore some of our logic was kind of all all over the place and we",
    "start": "545120",
    "end": "551680"
  },
  {
    "text": "were getting we were getting negative amounts for trades because we were taking one away from the other",
    "start": "551680",
    "end": "556880"
  },
  {
    "text": "um now the fix is pretty straightforward to do but it it's a lot easier to fix that before",
    "start": "556880",
    "end": "563519"
  },
  {
    "text": "you go into production as i've learned to my cost um rather than once you've put you know pumped a few thousand",
    "start": "563519",
    "end": "569680"
  },
  {
    "text": "trades through something yeah um next thing is is kind of tuning kafka on",
    "start": "569680",
    "end": "576240"
  },
  {
    "text": "an individual topic basis because when you set its defaults you say hey a new topic will have these kind of defaults",
    "start": "576240",
    "end": "582160"
  },
  {
    "text": "but tuning topics on an individual basis for durability or throughput if any of",
    "start": "582160",
    "end": "588000"
  },
  {
    "text": "you are in finance um the example i always give is kind of prices versus trades prices i want that",
    "start": "588000",
    "end": "594720"
  },
  {
    "text": "to go really really quickly through the system but trades i can afford for them to go slowly because i can't lose a",
    "start": "594720",
    "end": "600080"
  },
  {
    "text": "trade you know because guaranteed that trade you lose will be the 10 million trade of that day",
    "start": "600080",
    "end": "606560"
  },
  {
    "text": "um and if you're actually tuning your um",
    "start": "606560",
    "end": "611680"
  },
  {
    "text": "if you're tuning your your your cluster um you can actually tune it for being able",
    "start": "611680",
    "end": "617519"
  },
  {
    "text": "to to support rolling upgrades as well so if you um change your kind of replication factor or how many kind of",
    "start": "617519",
    "end": "623680"
  },
  {
    "text": "in-sync replicas you need for a particular cluster you can actually add in a little bit of extra redundancy",
    "start": "623680",
    "end": "629839"
  },
  {
    "text": "which will allow you to do a rolling live upgrade um",
    "start": "629839",
    "end": "634959"
  },
  {
    "text": "so hopefully that's good we know we want to do this stuff we know why we want to do it what are the options",
    "start": "634959",
    "end": "640959"
  },
  {
    "start": "640000",
    "end": "681000"
  },
  {
    "text": "so there's kind of three categories of options on the table at the moment so um",
    "start": "640959",
    "end": "646079"
  },
  {
    "text": "it's bash the whole world runs on bash um you know um uh people in the devops",
    "start": "646079",
    "end": "652079"
  },
  {
    "text": "world you know it's either bash python or ruby or something like this or go um but bash is a perfectly fine choice and",
    "start": "652079",
    "end": "658399"
  },
  {
    "text": "this i've got some tips and techniques on that um there's a terraform provider or there's a number of terraform providers",
    "start": "658399",
    "end": "664160"
  },
  {
    "text": "um and there's also our good friend duke who is socially distancing from the other the other icons in the slide um",
    "start": "664160",
    "end": "671200"
  },
  {
    "text": "that we have there's a there's a java client that a friend of mine wrote um",
    "start": "671200",
    "end": "676720"
  },
  {
    "text": "that i wanted that i want to introduce you to as well um so bash um",
    "start": "676720",
    "end": "682880"
  },
  {
    "start": "681000",
    "end": "737000"
  },
  {
    "text": "you can roll your own and that will call kafka topics it's a good idea though if",
    "start": "682880",
    "end": "688160"
  },
  {
    "text": "you're going to write your own script and it's a perfectly decent solution um is to have your configuration declarative so",
    "start": "688160",
    "end": "694720"
  },
  {
    "text": "there's a little bit of bash there on the screen there so topics equals inventory.0 is the name of the topic and",
    "start": "694720",
    "end": "700880"
  },
  {
    "text": "that naming convention i'll come back to in a few slides time",
    "start": "700880",
    "end": "706000"
  },
  {
    "text": "the first figure is the partition count the replication factor and then the number of in-sync replicas",
    "start": "706240",
    "end": "711360"
  },
  {
    "text": "so what that means is if you've got that in one place i can go into source control and i can see what is the list",
    "start": "711360",
    "end": "718240"
  },
  {
    "text": "of topics and how are they set up and how are they set up under a labeled version of my build as well",
    "start": "718240",
    "end": "724079"
  },
  {
    "text": "rather than relying on some kind of defaults which might have changed over time as well so you might not know",
    "start": "724079",
    "end": "729839"
  },
  {
    "text": "what's the what the defaults were when your topic was created",
    "start": "729839",
    "end": "735440"
  },
  {
    "text": "so the next option is terraform there are a number of terraform providers but not all of them",
    "start": "735920",
    "end": "743040"
  },
  {
    "start": "737000",
    "end": "813000"
  },
  {
    "text": "um give you the same you know i'm not as feature-rich as or they're not all as feature-rich as each",
    "start": "743040",
    "end": "749120"
  },
  {
    "text": "other um but you really want to be thinking about changing your topics your access control lists and your tls",
    "start": "749120",
    "end": "756839"
  },
  {
    "text": "config and so for us most recently we were provisioning a kafka cluster",
    "start": "756839",
    "end": "762160"
  },
  {
    "text": "in um in aws we were using msk um now the thing was you know we were doing",
    "start": "762160",
    "end": "768959"
  },
  {
    "text": "a it was a microservices it was microservices estate with uh it was",
    "start": "768959",
    "end": "774480"
  },
  {
    "text": "managed by kubernetes for scheduling um and we needed we wanted some infrastructure as code for for",
    "start": "774480",
    "end": "781440"
  },
  {
    "text": "for msk um and so we kind of we could we we didn't want to expose kafka",
    "start": "781440",
    "end": "789200"
  },
  {
    "text": "the kafka platform to to the outside world because it was private to our client",
    "start": "789200",
    "end": "795519"
  },
  {
    "text": "we didn't particularly want to have the terraform state on a on a storage node within the kafka within the kubernetes",
    "start": "795519",
    "end": "802720"
  },
  {
    "text": "cluster and so none of these things are kind of um insurmountable but it all became a little bit messy so",
    "start": "802720",
    "end": "809440"
  },
  {
    "text": "we plumped for um a a client that a colleague of mine jolt",
    "start": "809440",
    "end": "816480"
  },
  {
    "start": "813000",
    "end": "887000"
  },
  {
    "text": "wrote and that uses kafka itself as the state of the of the current state of the cluster",
    "start": "816480",
    "end": "823519"
  },
  {
    "text": "um and we just wrote a kind of a docker ephemeral container which basically on",
    "start": "823519",
    "end": "828800"
  },
  {
    "text": "deployment runs the config manager changes the state of kafka and then that",
    "start": "828800",
    "end": "834160"
  },
  {
    "text": "that container dies so the kafka config manager is quite a nice piece of kit",
    "start": "834160",
    "end": "839920"
  },
  {
    "text": "you can declare that config in yaml you can check it into source control um it's nice and declarative um",
    "start": "839920",
    "end": "847120"
  },
  {
    "text": "it's got a nice little thing where you can define config sets so you might have a config set for a durable topic or you",
    "start": "847120",
    "end": "852880"
  },
  {
    "text": "might have a config set for a uh you know as a speedy topic or something like that a fast delivery topic",
    "start": "852880",
    "end": "859120"
  },
  {
    "text": "um so you can you can kind of really dry that up within that one kind of yaml",
    "start": "859120",
    "end": "864160"
  },
  {
    "text": "file so um check it out it's all on github um but uh you know free to download free to",
    "start": "864160",
    "end": "871680"
  },
  {
    "text": "use please do use it we use it it's it's a good thing um",
    "start": "871680",
    "end": "877600"
  },
  {
    "text": "coming on to some more kind of specific um uh specific things that we can we can",
    "start": "878000",
    "end": "883279"
  },
  {
    "text": "change uh we can manage um secrets management so kafka has kind of two main kind of",
    "start": "883279",
    "end": "891199"
  },
  {
    "start": "887000",
    "end": "1008000"
  },
  {
    "text": "categories of secret management sasel which is kind of username and password kind of usual",
    "start": "891199",
    "end": "896480"
  },
  {
    "text": "stuff that you're used to um or we've got kind of mutual tls",
    "start": "896480",
    "end": "902720"
  },
  {
    "text": "um username password that can be a bit of a pain um",
    "start": "902720",
    "end": "908959"
  },
  {
    "text": "most people are storing their secrets involved or github secrets or something like that but when you deploy",
    "start": "908959",
    "end": "915920"
  },
  {
    "text": "you need to get those you need to get at those secrets so what some people do is they kind of they'll they'll read the secrets and",
    "start": "915920",
    "end": "922320"
  },
  {
    "text": "then they'll write that into a complete time deployment time that is a bit",
    "start": "922320",
    "end": "928000"
  },
  {
    "text": "that's a bit messy to be honest with you um if you can avoid doing that then do",
    "start": "928000",
    "end": "933040"
  },
  {
    "text": "because you want to maintain you want your infrastructure as much as possible to be immutable from what you had in",
    "start": "933040",
    "end": "939519"
  },
  {
    "text": "source control you want to tie those things together and you want to keep them the same you want to know that there's no variation",
    "start": "939519",
    "end": "946240"
  },
  {
    "text": "so what you can do instead is to actually kind of reference those things and pull them",
    "start": "946240",
    "end": "952480"
  },
  {
    "text": "down from vaults pull your secrets down from vaults or github um",
    "start": "952480",
    "end": "957839"
  },
  {
    "text": "at runtime or something like that um that's not always possible because you know github lives on the on the web you",
    "start": "957839",
    "end": "963920"
  },
  {
    "text": "might you might behind a million firewalls and things um so you can do things like um mutual tls",
    "start": "963920",
    "end": "971360"
  },
  {
    "text": "if you if you want to use mutual tls kafka is a multi-node system",
    "start": "971360",
    "end": "976560"
  },
  {
    "text": "it's always going to be a pain to manage because you've got servers and clients um uh mutual key",
    "start": "976560",
    "end": "983759"
  },
  {
    "text": "exchange that you they need to understand each other they need to they need to they need to communicate so",
    "start": "983759",
    "end": "989040"
  },
  {
    "text": "you've got you've already got a number of moving parts and um so",
    "start": "989040",
    "end": "994720"
  },
  {
    "text": "if you're not doing infrastructure as code you're probably in a world of hurt if",
    "start": "994720",
    "end": "1000079"
  },
  {
    "text": "you've got to do mutual tls um but anyway how would this work um in an",
    "start": "1000079",
    "end": "1006240"
  },
  {
    "text": "ideal world so in an ideal world we've got some kind of um",
    "start": "1006240",
    "end": "1012480"
  },
  {
    "start": "1008000",
    "end": "1113000"
  },
  {
    "text": "a bunch of docker containers that are doing something you know whatever that might be um",
    "start": "1012480",
    "end": "1018800"
  },
  {
    "text": "we've got a root certificate authority um maybe that's something like let's encrypt or you know maybe you've got a",
    "start": "1018800",
    "end": "1025280"
  },
  {
    "text": "vendor product like venify and at startup",
    "start": "1025280",
    "end": "1031678"
  },
  {
    "text": "there'll be an init or a sidecar container alongside each of your services",
    "start": "1031679",
    "end": "1038000"
  },
  {
    "text": "and that will go and grab the certificate from vault and then that sidecar will",
    "start": "1038000",
    "end": "1044880"
  },
  {
    "text": "die but it will be placing that certificate in the file system for your for your pod",
    "start": "1044880",
    "end": "1050799"
  },
  {
    "text": "for your service and then once your service starts up it's got it it doesn't know any different it doesn't care how",
    "start": "1050799",
    "end": "1056480"
  },
  {
    "text": "the the certificate got there um it's now got it on its file system and it's able to do",
    "start": "1056480",
    "end": "1062640"
  },
  {
    "text": "its tls exchange with um kafka um",
    "start": "1062640",
    "end": "1067760"
  },
  {
    "text": "now that allows us to kind of decouple the the security and and harden that innit",
    "start": "1067760",
    "end": "1073440"
  },
  {
    "text": "container separate from a service and it allows us to kind of um dry that up as well you know that in it container could",
    "start": "1073440",
    "end": "1079120"
  },
  {
    "text": "be the same for all of those kinds of services assuming they're getting their secret from the same place",
    "start": "1079120",
    "end": "1085120"
  },
  {
    "text": "um so if i can just plug another colleague of mine a guy called mathias",
    "start": "1085120",
    "end": "1091520"
  },
  {
    "text": "he did a presentation on just uh doing exactly this um at uh hashicom i think",
    "start": "1091520",
    "end": "1097600"
  },
  {
    "text": "it was it was the last year or the year before um so that's on youtube check it out um if that's something you want to do he",
    "start": "1097600",
    "end": "1103520"
  },
  {
    "text": "kind of walks you through an example um i think he's even i think he's braver than me he's i think he does a live",
    "start": "1103520",
    "end": "1109039"
  },
  {
    "text": "coding example as well um but what about in the kubernetes world",
    "start": "1109039",
    "end": "1114080"
  },
  {
    "start": "1113000",
    "end": "1227000"
  },
  {
    "text": "um so you've got a few more um a few more options in the kubernetes world um",
    "start": "1114080",
    "end": "1120000"
  },
  {
    "text": "so you can generate inserts in vault using infrastructure as code",
    "start": "1120000",
    "end": "1126400"
  },
  {
    "text": "and then you can create a sealed secret in the bitnami operator within kubernetes so this works rather",
    "start": "1126400",
    "end": "1132559"
  },
  {
    "text": "nicely actually so at when the service wants a",
    "start": "1132559",
    "end": "1138480"
  },
  {
    "text": "once that encrypted secret kubernetes will actually hand it to them at runtime",
    "start": "1138480",
    "end": "1144640"
  },
  {
    "text": "so and then the certificate is then available",
    "start": "1144640",
    "end": "1150640"
  },
  {
    "text": "um for mutual significance exchange with kafka um now the thing with this is that it's the",
    "start": "1150640",
    "end": "1157679"
  },
  {
    "text": "the bitnami operator that is encrypting that that certificate and it means you've got an encrypted version that",
    "start": "1157679",
    "end": "1163120"
  },
  {
    "text": "certificate that only kubernetes understands how to decrypt which means you can check that",
    "start": "1163120",
    "end": "1168480"
  },
  {
    "text": "um you can check that encrypted secret into your source control which feels a little bit weird but it makes it really nice",
    "start": "1168480",
    "end": "1174480"
  },
  {
    "text": "and immutable the only drawback with this is that what we've seen with one client is that kubernetes will take that secret",
    "start": "1174480",
    "end": "1181600"
  },
  {
    "text": "to the grave so if you don't do a rolling upgrade of your kubernetes cluster",
    "start": "1181600",
    "end": "1186720"
  },
  {
    "text": "um then uh and if you shut down your kubernetes cluster for any reason you",
    "start": "1186720",
    "end": "1192000"
  },
  {
    "text": "will soon find out who your friends and your enemies are because you'll have to go back to all of your dev teams and go hey um can we can we regenerate all of",
    "start": "1192000",
    "end": "1199039"
  },
  {
    "text": "your certificates please because um we can no longer decrypt any of your certificate any of your secrets",
    "start": "1199039",
    "end": "1205280"
  },
  {
    "text": "um if you're interested in doing this um uh the compliment documentation on this",
    "start": "1205280",
    "end": "1211440"
  },
  {
    "text": "is really really good so they've got a step-by-step kind of cookbook to go through with um you know how to set up",
    "start": "1211440",
    "end": "1218159"
  },
  {
    "text": "this exact kind of a cluster as well so that is that's well worth checking out um",
    "start": "1218159",
    "end": "1224720"
  },
  {
    "text": "thinking about backups um so not not too many people kind of think",
    "start": "1224720",
    "end": "1230880"
  },
  {
    "start": "1227000",
    "end": "1314000"
  },
  {
    "text": "about kafka as a system that you need to back up they think of the data as being very very transient",
    "start": "1230880",
    "end": "1236640"
  },
  {
    "text": "um well that's true for a lot of use cases but actually confluent would prefer you to think",
    "start": "1236640",
    "end": "1242320"
  },
  {
    "text": "about kafka as as if it were a database so it's your central nervous system it's",
    "start": "1242320",
    "end": "1248559"
  },
  {
    "text": "your database this is this is how they want you to think about their data um so if if kafka is a is a database or",
    "start": "1248559",
    "end": "1255679"
  },
  {
    "text": "is like a database then we should have a blackup plan um as mila kunis specifies",
    "start": "1255679",
    "end": "1262559"
  },
  {
    "text": "um so the database equivalent of a some kind of cloud system is yeah a database",
    "start": "1262559",
    "end": "1267919"
  },
  {
    "text": "would be running with raid and you would have point in time backups of um",
    "start": "1267919",
    "end": "1272960"
  },
  {
    "text": "of a database um so replication within a within a cluster",
    "start": "1272960",
    "end": "1278159"
  },
  {
    "text": "is not total resilience you know what if you have you know in these days of gdpr",
    "start": "1278159",
    "end": "1283200"
  },
  {
    "text": "for instance what if a service is leaking uh pii information into a topic for instance",
    "start": "1283200",
    "end": "1290559"
  },
  {
    "text": "you then can't keep that data you're gonna have to kind of um either mix that you're gonna have to kind of",
    "start": "1290559",
    "end": "1296559"
  },
  {
    "text": "kill that topic but what if there's data on there what if it's a mix of data you've got you might",
    "start": "1296559",
    "end": "1302640"
  },
  {
    "text": "need you might find yourself needing a point-in-time recovery um if you do do that",
    "start": "1302640",
    "end": "1308880"
  },
  {
    "text": "don't forget to back up and restore the offsets and have a plan for this as well",
    "start": "1308880",
    "end": "1314480"
  },
  {
    "start": "1314000",
    "end": "1537000"
  },
  {
    "text": "so backup options um i think maker has had at least two rewrites um",
    "start": "1314480",
    "end": "1320320"
  },
  {
    "text": "compliment replicator is a little bit better um or there's kafka connect to s3 where you",
    "start": "1320320",
    "end": "1326080"
  },
  {
    "text": "can just kind of plug it into the back of kafka and you can stream it out as a as a series of documents into some kind",
    "start": "1326080",
    "end": "1332159"
  },
  {
    "text": "of file system now the thing i really want to dwell on here though is um",
    "start": "1332159",
    "end": "1337840"
  },
  {
    "text": "how you recover from having backups and it's just i just want to give you a",
    "start": "1337840",
    "end": "1343280"
  },
  {
    "text": "simple kind of use case of how what to think about um",
    "start": "1343280",
    "end": "1348880"
  },
  {
    "text": "what to think about and how to avoid um kind of like a runaway process kind of thing so",
    "start": "1348880",
    "end": "1354880"
  },
  {
    "text": "if we consider a kind of a fairly generic microservices architecture this this",
    "start": "1354880",
    "end": "1361440"
  },
  {
    "text": "exact these three services are actually taken from a recent project that we delivered for a manufacturing company in",
    "start": "1361440",
    "end": "1366799"
  },
  {
    "text": "denmark um now their default um",
    "start": "1366799",
    "end": "1373039"
  },
  {
    "text": "the the kafka default for for any consumer is um auto offset reset",
    "start": "1373039",
    "end": "1379679"
  },
  {
    "text": "to earliest so if i don't have an offset for you i will give you the earliest data on that topic",
    "start": "1379679",
    "end": "1386559"
  },
  {
    "text": "now we've got three kafka topics here we've got inbound orders persisted",
    "start": "1386559",
    "end": "1392480"
  },
  {
    "text": "orders validated orders and you know it goes a to b to c in here",
    "start": "1392480",
    "end": "1397919"
  },
  {
    "text": "now what if our kafka cluster dies but we've got a backup of it now that's great so i'm going to",
    "start": "1397919",
    "end": "1404400"
  },
  {
    "text": "reinstall kafka or i'm going to start a new kafka cluster if i'm using msk for instance",
    "start": "1404400",
    "end": "1409600"
  },
  {
    "text": "and i can reinstate the data brilliant now i'm going to start these three services and that data has already been",
    "start": "1409600",
    "end": "1416640"
  },
  {
    "text": "persisted for all of those three topics but this new kafka cluster doesn't have",
    "start": "1416640",
    "end": "1422000"
  },
  {
    "text": "an offset for any of these three actors so the order persistence service starts up and goes ah great i'm going to start",
    "start": "1422000",
    "end": "1427520"
  },
  {
    "text": "reading from the start of my inbound orders so it's now going to",
    "start": "1427520",
    "end": "1432880"
  },
  {
    "text": "start creating new records on the persisted orders topic however",
    "start": "1432880",
    "end": "1439200"
  },
  {
    "text": "the persisted orders topic already has the previous work that it's already done so therefore the persisted orders topic",
    "start": "1439200",
    "end": "1445679"
  },
  {
    "text": "now is twice the size that it should be and the order validator when it started",
    "start": "1445679",
    "end": "1451039"
  },
  {
    "text": "up it said oh great i don't have an offset kafka has given it the earliest offset and the order validator is going",
    "start": "1451039",
    "end": "1456880"
  },
  {
    "text": "to start its work from the start of the persisted orders topic which is already twice the size that it should be",
    "start": "1456880",
    "end": "1462400"
  },
  {
    "text": "so the order validator is now going to do twice as much work as it would have done and so that is now going to put",
    "start": "1462400",
    "end": "1471360"
  },
  {
    "text": "now three times the amount of work onto the validated orders topic because there's now",
    "start": "1471600",
    "end": "1477360"
  },
  {
    "text": "that amount of work it's it's two times plus the third time amount of work onto the last topic",
    "start": "1477360",
    "end": "1484320"
  },
  {
    "text": "so you see that actually because we haven't been careful enough to think about kind of how i'm um how we're going",
    "start": "1484320",
    "end": "1491600"
  },
  {
    "text": "to recover we can restart our cluster and then all of a sudden our processes spin up into",
    "start": "1491600",
    "end": "1497760"
  },
  {
    "text": "life and they start just run away and they kind of go oh great i've got loads of work to do now that is a horrible place to be to be honest with you",
    "start": "1497760",
    "end": "1504240"
  },
  {
    "text": "because you're already in um in a difficult situation because you're restoring from",
    "start": "1504240",
    "end": "1509279"
  },
  {
    "text": "a backup so something has gone wrong somewhere along the lines so then when you're about to go hey great",
    "start": "1509279",
    "end": "1514480"
  },
  {
    "text": "production's back up and running um ah actually it's doing a bunch of stuff i wasn't expecting it to do and then you",
    "start": "1514480",
    "end": "1520880"
  },
  {
    "text": "go okay i need some kind of circuit breaker or something i need to be able to switch this off so this is the kind of thing that you",
    "start": "1520880",
    "end": "1526880"
  },
  {
    "text": "really need to kind of just just have a plan for yeah resilience isn't just about devops what about the application",
    "start": "1526880",
    "end": "1533679"
  },
  {
    "text": "itself so something i like to do with my kafka architectures is um",
    "start": "1533679",
    "end": "1539360"
  },
  {
    "start": "1537000",
    "end": "1880000"
  },
  {
    "text": "i like to kind of hard code or at least centralize the um",
    "start": "1539360",
    "end": "1544799"
  },
  {
    "text": "config that i'm going to be using for my producers and consumers that i'm um i'm",
    "start": "1544799",
    "end": "1549919"
  },
  {
    "text": "actually creating at runtime the reason i put this in here is that",
    "start": "1549919",
    "end": "1555039"
  },
  {
    "text": "you see a lot of examples on the web of people starting to use something like kafka",
    "start": "1555039",
    "end": "1561200"
  },
  {
    "text": "and they might have a baseline properties file then they apply some code",
    "start": "1561200",
    "end": "1566320"
  },
  {
    "text": "created property object and then they might then apply some system properties as well",
    "start": "1566320",
    "end": "1571440"
  },
  {
    "text": "that were specified at the command line so who knows what precedence those have",
    "start": "1571440",
    "end": "1576960"
  },
  {
    "text": "been applied who knows what was specified at the command line unless you're logging that out you just don't know",
    "start": "1576960",
    "end": "1582799"
  },
  {
    "text": "and that is you know that is i found i've said this more than once already in",
    "start": "1582799",
    "end": "1588000"
  },
  {
    "text": "this talk that's a bad place to be because you don't know what your current running config is unless you're logging it out",
    "start": "1588000",
    "end": "1593840"
  },
  {
    "text": "um that lack of the determinism you definitely don't want that i never want to see that",
    "start": "1593840",
    "end": "1600080"
  },
  {
    "text": "um you know and also you can then almost um specify sets of",
    "start": "1600080",
    "end": "1607520"
  },
  {
    "text": "the kinds of conflict that you want you know maybe you want axed or all for some topics you know whether it's a resilient topic or you might just say x minus one",
    "start": "1607520",
    "end": "1614880"
  },
  {
    "text": "i don't really act zero because i don't really care just fire and forget um another tip um",
    "start": "1614880",
    "end": "1621600"
  },
  {
    "text": "please do this please please do this you will you will thank me later i promise log the offset and partition as you read",
    "start": "1621600",
    "end": "1629039"
  },
  {
    "text": "so if you if you've got a consumer um if you log the offset in the partition as you read you go i've read",
    "start": "1629039",
    "end": "1635279"
  },
  {
    "text": "this i've read this event this is this is where it is on the topic because if ever you get something wrong",
    "start": "1635279",
    "end": "1642240"
  },
  {
    "text": "with that um with that event that you've read it gives you a fighting chance you go straight into the log here's the",
    "start": "1642240",
    "end": "1648320"
  },
  {
    "text": "exception i can then go back and i can go i can query kafka and i can find that exact event that gave rise to this bunch",
    "start": "1648320",
    "end": "1654960"
  },
  {
    "text": "of errors and i can give that document in a bug report somebody can run it up on their local machine and they can",
    "start": "1654960",
    "end": "1661440"
  },
  {
    "text": "debug it and they can fix it and that will give you a much faster time to recovery than it would be if you don't",
    "start": "1661440",
    "end": "1668399"
  },
  {
    "text": "have it which is ah something went wrong you know it's that kind of a thing",
    "start": "1668399",
    "end": "1674159"
  },
  {
    "text": "um the last um last point i have on that side as well is that i like to manipulate the offset myself",
    "start": "1674159",
    "end": "1680640"
  },
  {
    "text": "you can get kafka to say hey look every five seconds or something um commit the offset wherever i'm up to",
    "start": "1680640",
    "end": "1687760"
  },
  {
    "text": "i much prefer to manipulate that offset myself because it allows me to do composite transactions because usually what i'm doing is i'm reading from a",
    "start": "1687760",
    "end": "1693840"
  },
  {
    "text": "topic i'm doing a thing whatever that might be and then i want to say to kafka right",
    "start": "1693840",
    "end": "1699840"
  },
  {
    "text": "i'm done with that piece of input data don't give it to me again and i want to have control over that and that's not a",
    "start": "1699840",
    "end": "1705440"
  },
  {
    "text": "temporal thing that's a i've done my work kind of thing um if you want it truly atomic with the",
    "start": "1705440",
    "end": "1711440"
  },
  {
    "text": "database you know that thing that you're doing if you're doing a database operation",
    "start": "1711440",
    "end": "1717200"
  },
  {
    "text": "if you want your read from kafka to be um to be truly atomic",
    "start": "1717200",
    "end": "1723200"
  },
  {
    "text": "um you have to have you have to you know you have to",
    "start": "1723200",
    "end": "1728399"
  },
  {
    "text": "sorry i've lost my train of thought um if you're doing something that's transactional with kafka you don't want",
    "start": "1728399",
    "end": "1734880"
  },
  {
    "text": "to do you don't want kafka to be storing your offset you need to store that offset",
    "start": "1734880",
    "end": "1740480"
  },
  {
    "text": "with the database system that you're doing the commit onto because then you can have a composite commit on the",
    "start": "1740480",
    "end": "1746000"
  },
  {
    "text": "database system that you're committing to rather than with kafka so that you roll",
    "start": "1746000",
    "end": "1751120"
  },
  {
    "text": "back either the um change to the offset along with the data because you've still",
    "start": "1751120",
    "end": "1756399"
  },
  {
    "text": "got um the opportunity for kind of a failure to happen if you still allow kafka to commit the offset at the same",
    "start": "1756399",
    "end": "1763120"
  },
  {
    "text": "time as the database um this is a nice example so this is",
    "start": "1763120",
    "end": "1769360"
  },
  {
    "text": "another piece of code taken from a takeover project that i worked on most",
    "start": "1769360",
    "end": "1774480"
  },
  {
    "text": "recently we had an order received topic and this was a",
    "start": "1774480",
    "end": "1779679"
  },
  {
    "text": "typescript project um anyone who's a java programmer will think this looks like java because it",
    "start": "1779679",
    "end": "1785120"
  },
  {
    "text": "really does to me so therefore it's a typescript project",
    "start": "1785120",
    "end": "1790399"
  },
  {
    "text": "so we had types at compile time but not at runtimes they were just json objects so we said well actually we might as",
    "start": "1790399",
    "end": "1797440"
  },
  {
    "text": "well just use json on the on the topic as we're kind of moving these things around but we didn't really want to have kind of",
    "start": "1797440",
    "end": "1803520"
  },
  {
    "text": "like a schema and things like this on top because you know it's just json and it makes life a lot easier when you're working with javascript",
    "start": "1803520",
    "end": "1811120"
  },
  {
    "text": "but you do have options so what we did is we actually we coupled the runtime type to the topic name so",
    "start": "1811120",
    "end": "1818720"
  },
  {
    "text": "the topic name here is orders order received order received says that's the um order dash received says the um thank",
    "start": "1818720",
    "end": "1826159"
  },
  {
    "text": "you to the class name and dot one is just an arbitrary version number that we gave to it so when the schema for an",
    "start": "1826159",
    "end": "1833520"
  },
  {
    "text": "order received class kind of moved on we would bump the version number up so that what that",
    "start": "1833520",
    "end": "1840480"
  },
  {
    "text": "meant is that whenever we were asking for order received where can i find that topic we'd always ask this class and we",
    "start": "1840480",
    "end": "1847279"
  },
  {
    "text": "get an an object on the topic that was compatible with the class version here",
    "start": "1847279",
    "end": "1854399"
  },
  {
    "text": "um because you don't have real compiled classes um so that is that is a very cheap and",
    "start": "1854399",
    "end": "1859679"
  },
  {
    "text": "easy way to make sure that you kind of keep your um the rollouts that you're doing of code in",
    "start": "1859679",
    "end": "1867200"
  },
  {
    "text": "lockstep with the data that is currently stored within your kafka cluster so you know that you can always rely on that",
    "start": "1867200",
    "end": "1873679"
  },
  {
    "text": "compatibility thinking a little bit about monitoring i think i'm gonna try and speed up a",
    "start": "1873679",
    "end": "1880080"
  },
  {
    "start": "1880000",
    "end": "2118000"
  },
  {
    "text": "little bit um because i've been going through this a little while um think about monitoring so",
    "start": "1880080",
    "end": "1885760"
  },
  {
    "text": "if you're not familiar with lag um lag is",
    "start": "1885760",
    "end": "1890799"
  },
  {
    "text": "how far behind the top of the um how far behind the top of the",
    "start": "1890799",
    "end": "1896559"
  },
  {
    "text": "topic any given consumer is lag is a really great statistic for you",
    "start": "1896559",
    "end": "1903679"
  },
  {
    "text": "to find out what the health of a consumer really is um you want to monitor that lag you can",
    "start": "1903679",
    "end": "1910159"
  },
  {
    "text": "alert on it and graphing it is even better and i've got a couple of graphs i'm going to show you",
    "start": "1910159",
    "end": "1916000"
  },
  {
    "text": "but it allows you to understand patterns in your in your application as well so if i give you an example",
    "start": "1916000",
    "end": "1922960"
  },
  {
    "text": "um this is from a project most recently and we were polling um",
    "start": "1922960",
    "end": "1928399"
  },
  {
    "text": "amazon for new orders because they wouldn't they couldn't push them to us they had a rest endpoint we had to go",
    "start": "1928399",
    "end": "1933440"
  },
  {
    "text": "and get them and every rest call we would say we would poll it every 10 minutes say give me all the orders that you had",
    "start": "1933440",
    "end": "1940159"
  },
  {
    "text": "since the last time i polled so we thought well this is orders so this is going to smooth that out really",
    "start": "1940159",
    "end": "1945360"
  },
  {
    "text": "nicely all along the day but actually it didn't because if you look the orders",
    "start": "1945360",
    "end": "1951039"
  },
  {
    "text": "that we were seeing we would get spikes at certain points in the day so we didn't realize this but we were actually",
    "start": "1951039",
    "end": "1957279"
  },
  {
    "text": "subject to a batch system on the other end of this um that was kind of dumping orders on us",
    "start": "1957279",
    "end": "1964720"
  },
  {
    "text": "when we were expecting that to be nice and smooth throughout the day all of this data i mean you can find that i mean orders ended up in a",
    "start": "1964720",
    "end": "1970640"
  },
  {
    "text": "database table you could query it and the data is there but just",
    "start": "1970640",
    "end": "1977039"
  },
  {
    "text": "monitoring the lag of where we were getting spikes of data dumped on us",
    "start": "1977039",
    "end": "1982240"
  },
  {
    "text": "um allowed us to kind of just see that and understand our application in a new and interesting way",
    "start": "1982240",
    "end": "1989039"
  },
  {
    "text": "another good example is um is an event storm so this is an event storm that we had if you're not familiar with the term",
    "start": "1989760",
    "end": "1995279"
  },
  {
    "text": "of install and this is where in its simplest case you might have um two services service",
    "start": "1995279",
    "end": "2000399"
  },
  {
    "text": "aim service b a sends b a message and for whatever reason",
    "start": "2000399",
    "end": "2005919"
  },
  {
    "text": "b doesn't do anything in time a then sends that message again and then again and again and again and it just",
    "start": "2005919",
    "end": "2012320"
  },
  {
    "text": "makes b slower and slower and slower and a might keep on sending events back to",
    "start": "2012320",
    "end": "2018000"
  },
  {
    "text": "be thus making a bad problem even worse so what we had here is that we had a um",
    "start": "2018000",
    "end": "2025919"
  },
  {
    "text": "we had a small batch process that was creating new events",
    "start": "2025919",
    "end": "2031120"
  },
  {
    "text": "to then go and query amazon and so what was happening",
    "start": "2031120",
    "end": "2036399"
  },
  {
    "text": "is that the during black friday in fact is that the",
    "start": "2036399",
    "end": "2042480"
  },
  {
    "text": "the query to amazon became very very busy and so it couldn't respond in time and so the thing the batch process kept",
    "start": "2042480",
    "end": "2049599"
  },
  {
    "text": "on saying hey can you go and do this thing for me can you go and do this thing for me and then the query is for",
    "start": "2049599",
    "end": "2054800"
  },
  {
    "text": "amazon got smarter and slower and got further and further behind and so actually what you can see is that the",
    "start": "2054800",
    "end": "2061200"
  },
  {
    "text": "two graphs there um there's um one service in blue another service in red",
    "start": "2061200",
    "end": "2066638"
  },
  {
    "text": "um and they were making each other worse because actually there was a little bit of a feedback loop in there so",
    "start": "2066639",
    "end": "2072638"
  },
  {
    "text": "the moral of the story is is that actually you can see that happening quite clearly from a graph",
    "start": "2072639",
    "end": "2079520"
  },
  {
    "text": "and you can also add monitoring thresholds and things like this but also the moral of the story is um",
    "start": "2079520",
    "end": "2086878"
  },
  {
    "text": "don't mix batch and event streaming the things are like oil and water they do not play well together um what we ended",
    "start": "2086879",
    "end": "2093839"
  },
  {
    "text": "up doing here was actually um altering that batch process to be a bit more event driven",
    "start": "2093839",
    "end": "2101200"
  },
  {
    "text": "and so it was able to kind of be a little bit more kind of um they played a lot nicer together after that um but we",
    "start": "2101200",
    "end": "2107040"
  },
  {
    "text": "did learn out i think there's something like 90 000 events that really shouldn't have been there and a lot of them were duplicates as well which was nice",
    "start": "2107040",
    "end": "2114839"
  },
  {
    "text": "um thinking about tooling as well um i won't go into too much detail there",
    "start": "2114839",
    "end": "2120000"
  },
  {
    "start": "2118000",
    "end": "2193000"
  },
  {
    "text": "because um you can read the um uh you can read the slides afterwards i think they'll be published um",
    "start": "2120000",
    "end": "2126800"
  },
  {
    "text": "one thing i will say though is that um you can tune your lag thresholds accordingly because different consumers",
    "start": "2126800",
    "end": "2133839"
  },
  {
    "text": "will tolerate lag at different um at different rates so things like a you know a fast-moving",
    "start": "2133839",
    "end": "2141280"
  },
  {
    "text": "topic we could probably have lag for ages or maybe you don't want lag on that topic but maybe there's other topics that are",
    "start": "2141280",
    "end": "2149280"
  },
  {
    "text": "lazy or they get a big amount of data three times a day or something so",
    "start": "2149280",
    "end": "2154640"
  },
  {
    "text": "therefore they can afford to have lag because they will have it three times a day so there's not a one size fits all",
    "start": "2154640",
    "end": "2160240"
  },
  {
    "text": "in terms of what your monitoring threshold for um lag metrics are you um",
    "start": "2160240",
    "end": "2166480"
  },
  {
    "text": "you need to have a little bit of an understanding as to what your what your application needs for that um",
    "start": "2166480",
    "end": "2173680"
  },
  {
    "text": "uh yeah you can read those slides afterwards there's there's not much more to add than what's on the slide there to",
    "start": "2173680",
    "end": "2179200"
  },
  {
    "text": "be honest with you but you know feed those stats into your favorite monitoring",
    "start": "2179200",
    "end": "2184960"
  },
  {
    "text": "your favorite monitoring tool um prometheus grafana whatever it might be um",
    "start": "2184960",
    "end": "2191040"
  },
  {
    "text": "uh there's some tooling around here uh yeah i've got three slides left and then",
    "start": "2191040",
    "end": "2196400"
  },
  {
    "start": "2193000",
    "end": "2234000"
  },
  {
    "text": "addition take away some questions um um conductor uh is a great tool um it's",
    "start": "2196400",
    "end": "2203680"
  },
  {
    "text": "free for development use it becomes a little bit more expensive for commercial licenses but you can look at all the things you need to look at you know",
    "start": "2203680",
    "end": "2209839"
  },
  {
    "text": "cluster health you can write to topics you can tell topics and things it's worth mentioning",
    "start": "2209839",
    "end": "2216960"
  },
  {
    "text": "confluent command center as well if complement is your bag",
    "start": "2216960",
    "end": "2223040"
  },
  {
    "text": "then the command center does a pretty good job of showing you stats around your cluster as",
    "start": "2223040",
    "end": "2228160"
  },
  {
    "text": "you would imagine from the from the makers of of kafka um",
    "start": "2228160",
    "end": "2233920"
  },
  {
    "text": "one of the open source uh tools that we used was um akhq",
    "start": "2233920",
    "end": "2240560"
  },
  {
    "start": "2234000",
    "end": "2281000"
  },
  {
    "text": "and that's a screenshot from akhq the ui was a little bit buggy it was still a little bit immature when we were using",
    "start": "2240560",
    "end": "2245760"
  },
  {
    "text": "it um but the main thing you want from your tooling on this uh on this side is is",
    "start": "2245760",
    "end": "2252320"
  },
  {
    "text": "basically you want to be able to produce messages consume from a topic or a partition in real time",
    "start": "2252320",
    "end": "2258720"
  },
  {
    "text": "and you want to have a look and be able to manipulate a message as well those are the main things if you can do",
    "start": "2258720",
    "end": "2264960"
  },
  {
    "text": "that then those are the main things that you kind of really need to do um",
    "start": "2264960",
    "end": "2270640"
  },
  {
    "text": "okay i think i've got i've got two minutes left is that right alexander",
    "start": "2270640",
    "end": "2275760"
  },
  {
    "text": "yeah but no worries we can go over time i have i have one slide left so um so my",
    "start": "2275920",
    "end": "2282000"
  },
  {
    "start": "2281000",
    "end": "2412000"
  },
  {
    "text": "key takeaway takeaways um user provisioning tool and version the config i mean that's not just for kafka",
    "start": "2282000",
    "end": "2288800"
  },
  {
    "text": "can we just agree that that's just for everything please that just that's that just should be now",
    "start": "2288800",
    "end": "2293920"
  },
  {
    "text": "um um do the same rigor for kafka as you would a production database you know um",
    "start": "2293920",
    "end": "2301119"
  },
  {
    "text": "backups secrets that kind of stuff um and again topic partitioning affects the",
    "start": "2301119",
    "end": "2306880"
  },
  {
    "text": "ordering which can affect your application logic um i provisioned in a in a recent",
    "start": "2306880",
    "end": "2312079"
  },
  {
    "text": "project we had provisioned different environments at different",
    "start": "2312079",
    "end": "2318079"
  },
  {
    "text": "times and they had different pieces of config and the last environment to be provisioned was production and that was",
    "start": "2318079",
    "end": "2325280"
  },
  {
    "text": "that had a different number of partitions and it turned out there was a bug in the way that we were writing offsets",
    "start": "2325280",
    "end": "2331440"
  },
  {
    "text": "back from multiple partitions which meant that we couldn't actually provision production and we couldn't",
    "start": "2331440",
    "end": "2337200"
  },
  {
    "text": "understand why at all because we had actually not had the right amount of hygiene um",
    "start": "2337200",
    "end": "2343680"
  },
  {
    "text": "and it's one of the reasons i wrote this talk actually was because um that was our own fault that we hadn't",
    "start": "2343680",
    "end": "2350079"
  },
  {
    "text": "had the hygiene for all of the environments and we really do need that um",
    "start": "2350079",
    "end": "2355440"
  },
  {
    "text": "uh tame your application config put that into some code",
    "start": "2355440",
    "end": "2361280"
  },
  {
    "text": "check that code in you know name that code nicely like resilient topic config or you know speed",
    "start": "2361280",
    "end": "2367359"
  },
  {
    "text": "topic config or something like that but really materialize that and don't don't um mutate that at runtime or anything",
    "start": "2367359",
    "end": "2373760"
  },
  {
    "text": "like that keep it keep it clear keep it immutable keep it consistent um",
    "start": "2373760",
    "end": "2380480"
  },
  {
    "text": "and you know when you're on coal and you need some help monitor the key metrics you know lag",
    "start": "2380480",
    "end": "2386320"
  },
  {
    "text": "replication counts um broker health that kind of stuff you know kafka is scalar scalable and observable so observe it",
    "start": "2386320",
    "end": "2393680"
  },
  {
    "text": "basically um take advantage of it in your architectures and your data platforms um",
    "start": "2393680",
    "end": "2399359"
  },
  {
    "text": "and you know ultimately your stakeholders will love you for it because they can see what's going on and you can you can",
    "start": "2399359",
    "end": "2404480"
  },
  {
    "text": "give them pretty graphs and dashboards as to what's happening within the state of their application and stakeholders love that stuff so",
    "start": "2404480",
    "end": "2412160"
  },
  {
    "start": "2412000",
    "end": "2429000"
  },
  {
    "text": "and that is the end of my talk",
    "start": "2412160",
    "end": "2417240"
  },
  {
    "text": "you",
    "start": "2428400",
    "end": "2430480"
  }
]