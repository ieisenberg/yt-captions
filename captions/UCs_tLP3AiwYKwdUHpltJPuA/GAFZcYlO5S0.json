[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "[Music]",
    "start": "2540",
    "end": "9920"
  },
  {
    "text": "I'm Simon and the purpose of this talk is basically to look at architecture",
    "start": "9920",
    "end": "15400"
  },
  {
    "text": "versus code so as I said in the opening session this morning picture the scene you pitch up to an existing team and",
    "start": "15400",
    "end": "23359"
  },
  {
    "text": "somebody buys your coffee and they take you to the Whiteboard and they draw an architecture picture and then you get to",
    "start": "23359",
    "end": "29320"
  },
  {
    "text": "the code basic and guess what it's completely different right so that's basically the the thesis of the",
    "start": "29320",
    "end": "35280"
  },
  {
    "text": "talk I live in Jersey and T Islands um why is a a long answer basically it's a",
    "start": "35280",
    "end": "42600"
  },
  {
    "text": "nice place to live right it's as simple as this what I've been doing over the past couple of years is really helping teams",
    "start": "42600",
    "end": "49600"
  },
  {
    "text": "understand how they can do softare architecture in you know a lightweight pragmatic way but I still do right Coda",
    "start": "49600",
    "end": "55120"
  },
  {
    "text": "and I think we should drag architecture Kicking and Screaming back down to earth",
    "start": "55120",
    "end": "60879"
  },
  {
    "text": "if anyone tried to read any of the classic architecture books I think they're quite inaccessible so I put my own book together and what I'm going to",
    "start": "60879",
    "end": "67320"
  },
  {
    "text": "be talking about is basically some of that stuff I'm really interested in the",
    "start": "67320",
    "end": "73520"
  },
  {
    "start": "71000",
    "end": "118000"
  },
  {
    "text": "intersection between software architecture and code so although the title pictures these these two things head-to-head it's really how we can make",
    "start": "73520",
    "end": "80040"
  },
  {
    "text": "the Two Worlds converge and therefore make sense to the rest of us as software developers now you know what's software",
    "start": "80040",
    "end": "86240"
  },
  {
    "text": "architecture all about well a lot of people think it's this big big conceptual fluffy thing right and this",
    "start": "86240",
    "end": "93399"
  },
  {
    "text": "is evidenced in a lot of the software architecture diagrams that I see out there in the world for me software",
    "start": "93399",
    "end": "98799"
  },
  {
    "text": "architecture is basically about two things it's structure in other words how we see the thing we're building and hows",
    "start": "98799",
    "end": "103920"
  },
  {
    "text": "break it up into modules component Services layers and it's also about the Journey of getting to that structure",
    "start": "103920",
    "end": "110520"
  },
  {
    "text": "right so weaving in all the significant things that we need to think about and then communicating them to the rest of",
    "start": "110520",
    "end": "116240"
  },
  {
    "text": "the team and that's really what I'm focusing on here so my my real interest is how we",
    "start": "116240",
    "end": "122240"
  },
  {
    "start": "118000",
    "end": "206000"
  },
  {
    "text": "best communicate software architecture to a team of developers why so we can all build the same thing in the same",
    "start": "122240",
    "end": "128160"
  },
  {
    "text": "way show hands who uses uml here on a regular basis part of their job it's like a tiny tiny percentage so",
    "start": "128160",
    "end": "136519"
  },
  {
    "text": "what's everybody else doing I've asked this question a lot from the US all around Europe China and",
    "start": "136519",
    "end": "144040"
  },
  {
    "text": "yeah most people don't seem to use uml anymore and this seems kind of odd",
    "start": "144040",
    "end": "149560"
  },
  {
    "text": "because umls you know the the one standard notation that we have as an industry to share our ideas but few",
    "start": "149560",
    "end": "157680"
  },
  {
    "text": "people use it so I guess we're doing this I guess we're doing no uml or something right just boxes and lines and",
    "start": "157680",
    "end": "163319"
  },
  {
    "text": "this is a great way to screw up very very quickly if you don't follow some simple tips so why is um falling out of favor",
    "start": "163319",
    "end": "170400"
  },
  {
    "text": "falling out of fashion I guess a bunch of different reasons um you know it's too complex it's too low",
    "start": "170400",
    "end": "176239"
  },
  {
    "text": "level it takes you down certain paths the notation is a bit scary now there",
    "start": "176239",
    "end": "182040"
  },
  {
    "text": "are a bunch of reasons that people throw at me for just not using uml people often throw it this at me as well you",
    "start": "182040",
    "end": "187720"
  },
  {
    "text": "know we're agile we do tdd instead of doing uml okay some people say well actually",
    "start": "187720",
    "end": "194680"
  },
  {
    "text": "we don't need to do architecture because we do tdd and they think that tdd is somehow a",
    "start": "194680",
    "end": "199840"
  },
  {
    "text": "substitute or a placement for doing architecture and that's not the case for me architecture provides boundaries in",
    "start": "199840",
    "end": "205080"
  },
  {
    "text": "which you can do tdd inside so when we're communicating ures",
    "start": "205080",
    "end": "210360"
  },
  {
    "start": "206000",
    "end": "300000"
  },
  {
    "text": "it's really hard to show everything on a single picture right because we want to show lots of different views of the same",
    "start": "210360",
    "end": "217280"
  },
  {
    "text": "system and this is why those classic architecture books talk about these things",
    "start": "217280",
    "end": "222360"
  },
  {
    "text": "views The Logical view the physical view the development view you know the list is endless this is Philip kron's uh 4",
    "start": "222360",
    "end": "230080"
  },
  {
    "text": "plus1 model there's a logical view a development view a process View and a physical View and basically these are",
    "start": "230080",
    "end": "236280"
  },
  {
    "text": "brought together by the use use cases that you're trying to implement who anybody use",
    "start": "236280",
    "end": "242599"
  },
  {
    "text": "this I like hands are getting fewer one or two people it's a nice way to think",
    "start": "242599",
    "end": "248200"
  },
  {
    "text": "about a software system but it's kind of confusing so if you read Philip kon's",
    "start": "248200",
    "end": "253799"
  },
  {
    "text": "original paper this all makes perfect sense if you read people's interpretations of Philip kron's paper",
    "start": "253799",
    "end": "259680"
  },
  {
    "text": "all the names have jiggled around and they mean different things in different versions and that's the thing I find",
    "start": "259680",
    "end": "267440"
  },
  {
    "text": "most confusing about this whole views thing right so I've had arguments with Architects about the difference between",
    "start": "267440",
    "end": "272759"
  },
  {
    "text": "a conceptual and a logical view of an architecture what right maybe I'm just too stupid but they sound like the same",
    "start": "272759",
    "end": "279280"
  },
  {
    "text": "sort of thing to me if I'm a developer writing lines of code you know is the physical view some view of the files on",
    "start": "279280",
    "end": "285400"
  },
  {
    "text": "the file system no because the physical view is normally an infrastructure related view but what happens if our",
    "start": "285400",
    "end": "291080"
  },
  {
    "text": "infrastructure is virtualized do we have like a physical virtual view or a virtual physical view the whole thing",
    "start": "291080",
    "end": "296800"
  },
  {
    "text": "doesn't make much sense and and this is what I often see with these different ways of representing",
    "start": "296800",
    "end": "302080"
  },
  {
    "start": "300000",
    "end": "328000"
  },
  {
    "text": "software architecture you know the The Logical view is separated from well the",
    "start": "302080",
    "end": "308680"
  },
  {
    "text": "code right we're trying to force ourselves to think about the architecture of a",
    "start": "308680",
    "end": "314680"
  },
  {
    "text": "system independently of the code and you get this weird situation",
    "start": "314680",
    "end": "320280"
  },
  {
    "text": "where you have your software system with views around it and The Logical views over one side and the development views of the other",
    "start": "320280",
    "end": "326400"
  },
  {
    "text": "side and this makes my head hurt right so my kids eat ice cream too fast",
    "start": "326400",
    "end": "332720"
  },
  {
    "start": "328000",
    "end": "703000"
  },
  {
    "text": "and they get brain freeze if you go to Wikipedia and do a search for brain freeze there are some hints and methods",
    "start": "332720",
    "end": "339919"
  },
  {
    "text": "to prevent this drinking a hot drink beforehand these are just workarounds",
    "start": "339919",
    "end": "346000"
  },
  {
    "text": "the easiest way to avoid brain freeze is not to eat ice cream fast the easiest way to not to get brain",
    "start": "346000",
    "end": "352919"
  },
  {
    "text": "freeze when we're looking these logical views and things is just to do something else right so how do we do something",
    "start": "352919",
    "end": "358199"
  },
  {
    "text": "else well if I need to communicate a software",
    "start": "358199",
    "end": "365360"
  },
  {
    "text": "system maybe I should just go to Google and ask Google what it thinks I should do right so if we go to Google you get",
    "start": "365360",
    "end": "371560"
  },
  {
    "text": "stuff like this right if you do a search for software architecture diagram on Google you get stuff like this and it",
    "start": "371560",
    "end": "377680"
  },
  {
    "text": "just goes on for page and page and page and page and page now there are some um Emil pictures in here but guess what if",
    "start": "377680",
    "end": "383919"
  },
  {
    "text": "you guys don't know uml those options kind of go away",
    "start": "383919",
    "end": "389918"
  },
  {
    "text": "block diagrams let's draw a block diagram of our architecture and you get",
    "start": "389960",
    "end": "395599"
  },
  {
    "text": "stuff like this I can see people nodding you've all seen these in your documents haven't you Enterprise Architects love",
    "start": "395599",
    "end": "401680"
  },
  {
    "text": "these things because you can do them in PowerPoints nice gradi shading that kind of thing this one here is great you know we",
    "start": "401680",
    "end": "408160"
  },
  {
    "text": "always talk about layering being important so we have horizontal layers some are different sizes don't know why some of the boxes are different widths",
    "start": "408160",
    "end": "414639"
  },
  {
    "text": "don't know why nice gradient shading though you know these diagrams don't make much sense",
    "start": "414639",
    "end": "420479"
  },
  {
    "text": "and what I've discovered over the past few years is that that teams really do struggle to communicate the design of",
    "start": "420479",
    "end": "426319"
  },
  {
    "text": "their software so I was running uh my architecture sketching Workshop uh here",
    "start": "426319",
    "end": "431759"
  },
  {
    "text": "on Wednesday and I've put some diagrams at the front here there are two piles there's a pile that we did in the",
    "start": "431759",
    "end": "437160"
  },
  {
    "text": "morning kind of before guidance and there's an after pile and if you look through the before pile you'll you'll see that people do",
    "start": "437160",
    "end": "444560"
  },
  {
    "text": "struggle so I'm a big fan of doing architecture cars as way to practice this stuff and something I do very",
    "start": "444560",
    "end": "451319"
  },
  {
    "text": "simply is just a Financial Risk system which basically takes in data from one source takes in data from another source",
    "start": "451319",
    "end": "457520"
  },
  {
    "text": "merges the data together performs some calculations and essentially produces some Excel reports right it's a simple",
    "start": "457520",
    "end": "463280"
  },
  {
    "text": "batch style system how hard can it be right but",
    "start": "463280",
    "end": "468919"
  },
  {
    "text": "these are the sorts of people um sorts of pictures people draw right so we have like a shopping list of stuff right",
    "start": "468919",
    "end": "474879"
  },
  {
    "text": "let's weave all these Technologies in and let's just draw a picture of it it doesn't tell us anything about the system",
    "start": "474879",
    "end": "481360"
  },
  {
    "text": "we get boxes and no line star pictures right this is a three something layer or tier Microsoft solution why because it's",
    "start": "481360",
    "end": "489520"
  },
  {
    "text": "got asp.net at the top there are no people using it so I hope we're not building this for for no reason um",
    "start": "489520",
    "end": "495599"
  },
  {
    "text": "databases stuff in the middle module Services don't know the functional view",
    "start": "495599",
    "end": "501120"
  },
  {
    "text": "right people love drawing functional views of systems imagine you were getting a new",
    "start": "501120",
    "end": "507000"
  },
  {
    "text": "house built and you're Building architecture Drew you a functional view of your house it's basically a bunch of",
    "start": "507000",
    "end": "513240"
  },
  {
    "text": "boxes sleeping eating relaxing right it's it just doesn't tell us much this",
    "start": "513240",
    "end": "520640"
  },
  {
    "text": "color coding on this picture I don't know what it means but I'm sure the people drawing it",
    "start": "520640",
    "end": "526279"
  },
  {
    "text": "did do you like this one the central spine's kind of nice it",
    "start": "526279",
    "end": "531959"
  },
  {
    "text": "outlines the major steps in the process that we're trying to implement here this green blob is like skipple it's a huge",
    "start": "531959",
    "end": "538399"
  },
  {
    "text": "airport Hub Lots connect stuff on the left no idea different colors shapes lines styles of lines this",
    "start": "538399",
    "end": "546279"
  },
  {
    "text": "box here says UI upside down I don't know",
    "start": "546279",
    "end": "552839"
  },
  {
    "text": "why Australia this is like architecture",
    "start": "552839",
    "end": "558279"
  },
  {
    "text": "101 doesn't tell us even we're building risk calculator look we're building a system with business logic excellent I'm",
    "start": "558279",
    "end": "565680"
  },
  {
    "text": "glad we cleared that up uh this is our logical View I've you know had architecture diagrams",
    "start": "565680",
    "end": "572800"
  },
  {
    "text": "and documentation reviewed in the past by Architects and they've complained because my logical view includes",
    "start": "572800",
    "end": "578720"
  },
  {
    "text": "technology choices so apparently your logical view should not include technology I see a lot of",
    "start": "578720",
    "end": "584839"
  },
  {
    "text": "this you've heard of pocos plain old C objects and pojos plain old Java objects",
    "start": "584839",
    "end": "590760"
  },
  {
    "text": "homeless Edition nobody tells you about right it's just a bunch of C objects kind of floating around the cyberspace I",
    "start": "590760",
    "end": "597279"
  },
  {
    "text": "just want to give them a home you know wrap them up in",
    "start": "597279",
    "end": "601319"
  },
  {
    "text": "something this is like the middle part of a bigger picture it's a complex asynchronous event the style of",
    "start": "604120",
    "end": "610880"
  },
  {
    "text": "architecture you start at the top you weave your way down through the picture like the story books you had when you",
    "start": "610880",
    "end": "616160"
  },
  {
    "text": "were a kid you choose your own path through the book by turning to different pages eventually in the story you",
    "start": "616160",
    "end": "623680"
  },
  {
    "text": "die this diagram is exactly the same you follow different paths you will end up in the Trap",
    "start": "623680",
    "end": "631279"
  },
  {
    "text": "this is a lot of architecture for basically look adding two numbers up we love over engineering things so",
    "start": "632160",
    "end": "639519"
  },
  {
    "text": "when I kind of do these architecture Carters I ask people what they find challenging and they say well yeah we don't know where to start we don't know",
    "start": "639519",
    "end": "645279"
  },
  {
    "text": "how to express the solution we don't know what your um notation we should be using we don't know what level of detail",
    "start": "645279",
    "end": "650639"
  },
  {
    "text": "we should be dropping down to there are normally a whole bunch of unanswered questions right so people can't draw",
    "start": "650639",
    "end": "657680"
  },
  {
    "text": "pictures is a summary so how do we communicate our",
    "start": "657680",
    "end": "663600"
  },
  {
    "text": "architectures well maybe we're tackling this from the wrong perspective so let's look at code right",
    "start": "663600",
    "end": "670519"
  },
  {
    "text": "let's start from the bottom up and see if we can um weave some magic in here",
    "start": "670519",
    "end": "676240"
  },
  {
    "text": "somewhere when I'm drawing diagrams during the design exercise",
    "start": "676240",
    "end": "682279"
  },
  {
    "text": "really this is the question that I'm trying to get to the bottom of right so is this what we are planning to build",
    "start": "682279",
    "end": "689720"
  },
  {
    "text": "right can I see the implementation strategy and of course if we're drawing pictures",
    "start": "689720",
    "end": "695680"
  },
  {
    "text": "retrospectively then we're trying to answer the other question right is this what we actually",
    "start": "695680",
    "end": "701959"
  },
  {
    "start": "703000",
    "end": "751000"
  },
  {
    "text": "built code is really you know the single source of Truth and it's our",
    "start": "703360",
    "end": "709320"
  },
  {
    "text": "representation or realization or embodiment of the architecture so when we draw",
    "start": "709320",
    "end": "717200"
  },
  {
    "text": "pictures do we want to show all of that stuff right so if we have a system with two million lines of code do we want to",
    "start": "717200",
    "end": "723600"
  },
  {
    "text": "draw a diagram with two million things on it not really so this is why we drop up to the",
    "start": "723600",
    "end": "730279"
  },
  {
    "text": "the architecture views and we're talking about abstractions here aren't we right so we're talking about abstract",
    "start": "730279",
    "end": "736480"
  },
  {
    "text": "Concepts that allow us to essentially reason about a complex or large system",
    "start": "736480",
    "end": "742920"
  },
  {
    "text": "we chunk stuff up so we can refer to things much more easily and this raises a bunch of",
    "start": "742920",
    "end": "748600"
  },
  {
    "text": "interesting questions I think you know does the code reflect those abstractions that we think about and this is really",
    "start": "748600",
    "end": "755160"
  },
  {
    "start": "751000",
    "end": "1023000"
  },
  {
    "text": "the whole question I started out with you have a nice architecture picture on the wall and you look at the code and",
    "start": "755160",
    "end": "760440"
  },
  {
    "text": "the codee's complete mess but on the wall it says we've got this nice neat stacked lay architecture with diagram",
    "start": "760440",
    "end": "766440"
  },
  {
    "text": "with um lines going in One Direction only and the codee's not like",
    "start": "766440",
    "end": "771480"
  },
  {
    "text": "that and of course we often think in terms of components when we're drawing pictures but",
    "start": "771480",
    "end": "776639"
  },
  {
    "text": "actually Java C doesn't have a component keyword does it right we're writing",
    "start": "776639",
    "end": "782560"
  },
  {
    "text": "classes and interfaces and packages and name spaces and these sorts of things so of course there's a mismatch between our",
    "start": "782560",
    "end": "788240"
  },
  {
    "text": "coding world and our architecture world who here uses a layer",
    "start": "788240",
    "end": "794800"
  },
  {
    "text": "architecture ah now we got loads of hands going up yeah so most people adopt a layered style of architecture what's a",
    "start": "794800",
    "end": "801160"
  },
  {
    "text": "layered architecture something like this maybe you know we have presentation stuff and",
    "start": "801160",
    "end": "806199"
  },
  {
    "text": "business stuff and data stuff and we wire them together neat in six services or components in each and the world is",
    "start": "806199",
    "end": "812560"
  },
  {
    "text": "happy place why do we do this a bunch of reasons separation concerns substitution",
    "start": "812560",
    "end": "818480"
  },
  {
    "text": "mocking testing you know the list goes on why do we do this um people tell us it's a good thing",
    "start": "818480",
    "end": "827360"
  },
  {
    "text": "right if you go and read lots of books about software development they'll normally start out with here is a St",
    "start": "827360",
    "end": "833360"
  },
  {
    "text": "stereotypical application so this picture is from uh one of the introducing spring books and it basically says yeah do stuff like this",
    "start": "833360",
    "end": "840320"
  },
  {
    "text": "have a presentation layer a business e layer and a data access layer what's a layer well it's all about",
    "start": "840320",
    "end": "846680"
  },
  {
    "text": "decoupling right so the the the purpose of using layers is decoupling it's about",
    "start": "846680",
    "end": "853720"
  },
  {
    "text": "isolating changes making sure the changes you make here don't Ripple up unnecessarily to the",
    "start": "853720",
    "end": "860120"
  },
  {
    "text": "top you download a bunch of tutorials and starting points you know this is an empty",
    "start": "860120",
    "end": "866639"
  },
  {
    "text": "project for spring this is the sort of thing you should build notice here look a domain package",
    "start": "866639",
    "end": "874560"
  },
  {
    "text": "or a pro package a service package so if this is your starting point how do you make your application you just plug",
    "start": "874560",
    "end": "880199"
  },
  {
    "text": "stuff in each of those levels you go to St overflow how do I structure my project people respond with",
    "start": "880199",
    "end": "886759"
  },
  {
    "text": "this kind of device in fact there are even tools out there which generate the sty of project for you and of course",
    "start": "886759",
    "end": "893040"
  },
  {
    "text": "it's exactly the same with Microsoft world right so all of the starting points for learning spring MVC asp.net",
    "start": "893040",
    "end": "898639"
  },
  {
    "text": "MVC see they're basically starting with layer architectures and that's fine but what",
    "start": "898639",
    "end": "904399"
  },
  {
    "text": "happens to a layer architecture does it stay nice and",
    "start": "904399",
    "end": "910320"
  },
  {
    "text": "clean not so much s ends up looking like that doesn't",
    "start": "910320",
    "end": "916240"
  },
  {
    "text": "it people",
    "start": "916240",
    "end": "919519"
  },
  {
    "text": "nodding because this is all public we can kind of skip round layers I did a sketching workshop with a customer a",
    "start": "921440",
    "end": "927480"
  },
  {
    "text": "couple of weeks ago and they Drew their diagram as a nice set of layers and then we looked at the code and we had to add",
    "start": "927480",
    "end": "933399"
  },
  {
    "text": "some more arrows and the the resulting diagram kind of look like this uh we have other",
    "start": "933399",
    "end": "939839"
  },
  {
    "text": "options we can use hexagons and onions and all this kind of stuff these are basically just layer architectures as",
    "start": "939839",
    "end": "945120"
  },
  {
    "text": "well right so essentially it's all about isolating your business code decoupling that kind of",
    "start": "945120",
    "end": "951959"
  },
  {
    "text": "thing hexagons onions still lay at architectures right in terms of how we organize our code we normally scking",
    "start": "951959",
    "end": "958680"
  },
  {
    "text": "these things into different projects or packages or name spaces that kind of thing and we can still screw",
    "start": "958680",
    "end": "966000"
  },
  {
    "text": "up a lay is actually bad a lay is hurting the way that we",
    "start": "967600",
    "end": "973560"
  },
  {
    "text": "build software because I do see lots of software systems that start out nice and neat but end up as Big Balls of",
    "start": "973560",
    "end": "981880"
  },
  {
    "text": "mud well I don't think so I think layers are useful",
    "start": "981880",
    "end": "987839"
  },
  {
    "text": "but are they architectural the starting point for",
    "start": "989720",
    "end": "996319"
  },
  {
    "text": "most people's architecture diagrams is we'll draw a big box representing our system and then we'll have layers and",
    "start": "996319",
    "end": "1002240"
  },
  {
    "text": "that's the first thing that they show about Software System is that really interesting to us",
    "start": "1002240",
    "end": "1008319"
  },
  {
    "text": "though you know are the layers the structural elements or is it the things inside the layers that are actually the",
    "start": "1008319",
    "end": "1014199"
  },
  {
    "text": "structural elements that we're really interested in so maybe the whole layers thing is just an mation detail that we",
    "start": "1014199",
    "end": "1019880"
  },
  {
    "text": "don't necessarily want to see and of course this reflects itself in the organization of the",
    "start": "1019880",
    "end": "1026400"
  },
  {
    "start": "1023000",
    "end": "1202000"
  },
  {
    "text": "c-base and a lot of the ways that we describe software architectures again it",
    "start": "1026480",
    "end": "1032839"
  },
  {
    "text": "pits The Logical view of the world versus the organization",
    "start": "1032839",
    "end": "1037520"
  },
  {
    "text": "code and there's a gap so we think in terms of components",
    "start": "1037919",
    "end": "1043720"
  },
  {
    "text": "layers services but we're not writing those things we're writing classes in",
    "start": "1043720",
    "end": "1048919"
  },
  {
    "text": "packages and layers George Fairbanks uh he was here I think last year or the year",
    "start": "1048919",
    "end": "1053960"
  },
  {
    "text": "before he's got a book called just enough software architecture and in his book he talks about this the model code",
    "start": "1053960",
    "end": "1059799"
  },
  {
    "text": "Gap he basically says when we think about architecture we have a bunch of abstract Concepts so things like modules",
    "start": "1059799",
    "end": "1066240"
  },
  {
    "text": "Services layers Etc but these things don't exist in the code so he's way smarter than I did um because he came",
    "start": "1066240",
    "end": "1072559"
  },
  {
    "text": "out the 8 ago in his book as well he has a a table",
    "start": "1072559",
    "end": "1077799"
  },
  {
    "text": "which basically shows different ways to conceptualize or visualize or think about software",
    "start": "1077799",
    "end": "1083720"
  },
  {
    "text": "architecture and they mostly have a design model and a code model so again most of these ways that we think about",
    "start": "1083720",
    "end": "1090039"
  },
  {
    "text": "software systems split out code from design and architecture so maybe the trick here is",
    "start": "1090039",
    "end": "1096840"
  },
  {
    "text": "to merge the code and the",
    "start": "1096840",
    "end": "1102400"
  },
  {
    "text": "model right who's now getting scared that I'm talking about model driven architecture yeah no",
    "start": "1102400",
    "end": "1109480"
  },
  {
    "text": "but we do want these two worlds to overlap and align so maybe there's something in this",
    "start": "1109480",
    "end": "1115320"
  },
  {
    "text": "without the whole scary generating everything for model thing please George's answer is very simple he",
    "start": "1115320",
    "end": "1122640"
  },
  {
    "text": "says well why don't you just use an architecturally evident coding style so in other words when you're writing your",
    "start": "1122640",
    "end": "1128520"
  },
  {
    "text": "code you're organizing your code why don't you make it so that the things in your code reflect your architectural",
    "start": "1128520",
    "end": "1135280"
  },
  {
    "text": "Concepts your abstractions so in other words you know maybe a naming convention that says all of our",
    "start": "1135280",
    "end": "1143240"
  },
  {
    "text": "services will be suffixed with the word service maybe we'll we'll have a",
    "start": "1143240",
    "end": "1149400"
  },
  {
    "text": "packaging convention that says each service or component will be in its own",
    "start": "1149400",
    "end": "1155640"
  },
  {
    "text": "package who does this good is it",
    "start": "1155640",
    "end": "1164159"
  },
  {
    "text": "useful is it hard work do you have to think about it",
    "start": "1164159",
    "end": "1169919"
  },
  {
    "text": "good if you're doing that and I'm talking about diagrams and communicating software systems why can't",
    "start": "1172200",
    "end": "1179159"
  },
  {
    "text": "we just generate pictures so if you're using an architecturally evident coding",
    "start": "1179159",
    "end": "1185280"
  },
  {
    "text": "style the diagramming tools we have available to us should be able to automatically generate those pictures",
    "start": "1185280",
    "end": "1190640"
  },
  {
    "text": "for you right but they can't why because they don't know what a service or component",
    "start": "1190640",
    "end": "1197159"
  },
  {
    "text": "is we have to teach them about this architecturally evident cing style and these diagramming tools basically see",
    "start": "1197159",
    "end": "1202880"
  },
  {
    "start": "1202000",
    "end": "1267000"
  },
  {
    "text": "packages and classes and that's when whenever you run you know a structure 101 latex and depend over your cbase it",
    "start": "1202880",
    "end": "1209559"
  },
  {
    "text": "just shows you a mess you have to start cleaning the pictures",
    "start": "1209559",
    "end": "1214640"
  },
  {
    "text": "up you get stuff like this you know they start drawing pictures of layers for example you get pictures like this it",
    "start": "1214640",
    "end": "1221720"
  },
  {
    "text": "shows you lots of dependencies between things normally between packages or between classes again these are not",
    "start": "1221720",
    "end": "1227480"
  },
  {
    "text": "showing services or compon same thing over and over and over",
    "start": "1227480",
    "end": "1233200"
  },
  {
    "text": "again so maybe we' not using an appropriate language for modern software",
    "start": "1233200",
    "end": "1242720"
  },
  {
    "text": "systems so maybe we do need a language which you know has component or service",
    "start": "1242720",
    "end": "1249120"
  },
  {
    "text": "or microservice as a first class thing I'm not a language guy so I'm not",
    "start": "1249120",
    "end": "1256159"
  },
  {
    "text": "going to write this but there are some thoughts there so how do we get these two world to",
    "start": "1256159",
    "end": "1264120"
  },
  {
    "text": "overlap well when we draw pictures the pictures",
    "start": "1264120",
    "end": "1269640"
  },
  {
    "start": "1267000",
    "end": "1636000"
  },
  {
    "text": "should reflect the code and vice versa of course and what I really care about is a set of",
    "start": "1269640",
    "end": "1276760"
  },
  {
    "text": "abstractions so for me a common set of abstractions is way way more powerful and",
    "start": "1276760",
    "end": "1282440"
  },
  {
    "text": "important than a common notation and if you look ATL uml gives you two things it",
    "start": "1282440",
    "end": "1288000"
  },
  {
    "text": "gives you a set of abstractions right use case bubbles classes components deployment",
    "start": "1288000",
    "end": "1294120"
  },
  {
    "text": "nodes and it gives you a set of boxes and lines notations to essentially represent those things now when I see",
    "start": "1294120",
    "end": "1300880"
  },
  {
    "text": "people using uml they're normally abusing both things so they have a diagram and there'll be a class and it",
    "start": "1300880",
    "end": "1307360"
  },
  {
    "text": "won't be a class it will be a message bus or they'll just use a class diagram",
    "start": "1307360",
    "end": "1312799"
  },
  {
    "text": "because it's a convenient way to draw boxes and lines and they'll scrub all the information out and just use it as boxes and lines so therefore maybe we",
    "start": "1312799",
    "end": "1319039"
  },
  {
    "text": "should just focus on the abstractions and forget the whole notation thing to some people this kind of sounds",
    "start": "1319039",
    "end": "1324600"
  },
  {
    "text": "foolish but if we went to find two maps of Amsterdam those Maps would both show the",
    "start": "1324600",
    "end": "1331720"
  },
  {
    "text": "rivers the canals the Tramway the roads the districts the points of interest but",
    "start": "1331720",
    "end": "1337679"
  },
  {
    "text": "they might use different colors notational elements shapes",
    "start": "1337679",
    "end": "1344960"
  },
  {
    "text": "symbols but we can understand them because there's a self self describing notation here there's a key or Legends",
    "start": "1344960",
    "end": "1350720"
  },
  {
    "text": "in the bottom corner essentially but it's the abstractions that they show that are really",
    "start": "1350720",
    "end": "1356240"
  },
  {
    "text": "important so how do I do this well I kind of put the whole logical physical",
    "start": "1356240",
    "end": "1362440"
  },
  {
    "text": "view thing aside and think about a software system is basically being made up of a number of containers what's a",
    "start": "1362440",
    "end": "1368360"
  },
  {
    "text": "container it's something like a web server a web application a sty loone application an application server a",
    "start": "1368360",
    "end": "1374520"
  },
  {
    "text": "message bus a database a file system basically it's something that you need to have running and deployed somewhere that hosts code or",
    "start": "1374520",
    "end": "1382799"
  },
  {
    "text": "data I break my software systems up into components so I'm a big fan of you know chunking stuff up into components this",
    "start": "1383000",
    "end": "1389520"
  },
  {
    "text": "is a massively abused word right my definition of a component is very simple it's a bunch of related stuff with a",
    "start": "1389520",
    "end": "1396640"
  },
  {
    "text": "nice clean interface something you can substitute Out and because I'm mostly dealing with",
    "start": "1396640",
    "end": "1401919"
  },
  {
    "text": "ja.et systems these components are made off of classes right so these are your lowest level building blocks um maybe",
    "start": "1401919",
    "end": "1408000"
  },
  {
    "text": "these are fun functions if you're using functional languages tables views or procedures that kind of",
    "start": "1408000",
    "end": "1413640"
  },
  {
    "text": "thing and it turns out this is really really nice simple way to think about software systems and once you have this",
    "start": "1413640",
    "end": "1419679"
  },
  {
    "text": "in your mind you can draw pictures at each of those levels in turn so I'll",
    "start": "1419679",
    "end": "1425440"
  },
  {
    "text": "start with a context diagram which shows my system and stuff around it I'll then zoom into my system and basically show",
    "start": "1425440",
    "end": "1432360"
  },
  {
    "text": "the containers so the you know combinations of app servers web service databases and how they make my app work",
    "start": "1432360",
    "end": "1438880"
  },
  {
    "text": "I'll then maybe open up some interesting containers and look inside them you know show a components view of the world and",
    "start": "1438880",
    "end": "1444000"
  },
  {
    "text": "how I've decomposed my system and then I might optionally do some class level design optionally I don't normally do",
    "start": "1444000",
    "end": "1452320"
  },
  {
    "text": "this to show you some examples I built a really simple content aggregator in Jersey it's just an aggregator for",
    "start": "1452320",
    "end": "1459240"
  },
  {
    "text": "people in the tech World it lists tweets blog posts jobs businesses local people",
    "start": "1459240",
    "end": "1465080"
  },
  {
    "text": "that kind of thing and this is an example context diagram so this is my system here the monkey the system I",
    "start": "1465080",
    "end": "1470919"
  },
  {
    "text": "built it has people actors roles personas at the top who use my system",
    "start": "1470919",
    "end": "1476000"
  },
  {
    "text": "and essentially my key system dependencies at the bottom so in this case I'm pulling data from Twitter blogs",
    "start": "1476000",
    "end": "1482120"
  },
  {
    "text": "GitHub if I zoom into the monkey head and blow him up right we get a containers view of the world so this",
    "start": "1482120",
    "end": "1487720"
  },
  {
    "text": "basically says my tech tribe system is made up of a web application a",
    "start": "1487720",
    "end": "1492799"
  },
  {
    "text": "standalone application that updates data content information from Twitter blogs GitHub and a bunch of data sources in",
    "start": "1492799",
    "end": "1499000"
  },
  {
    "text": "the middle right it's nice and simple and then if we open up the content of data thing we get to see the components",
    "start": "1499000",
    "end": "1504720"
  },
  {
    "text": "view of the world it's just a nice logical decomposition of the world we've got some tech choices on",
    "start": "1504720",
    "end": "1511320"
  },
  {
    "text": "here some responsibilities you know it shows us quite a lot of nice things about our software these diagrams are all",
    "start": "1511320",
    "end": "1517720"
  },
  {
    "text": "available to to download off the website for free by the way these things are like Maps aren't",
    "start": "1517720",
    "end": "1523600"
  },
  {
    "text": "they right so if you go on to Google Maps and do a search for Jersey you get that view by default",
    "start": "1523600",
    "end": "1528840"
  },
  {
    "text": "which is great if you want to know what's in Jersey and how it's broken up it's completely useless if you have no",
    "start": "1528840",
    "end": "1534200"
  },
  {
    "text": "idea where Jersey is so you have to do the is it pinch in or pinch out inverse pinch I I don't know to zoom out and",
    "start": "1534200",
    "end": "1541360"
  },
  {
    "text": "eventually you get the kind of 30,000 foot view it's the same with these diagrams sometimes we want the zoomed in view of the world and sometimes we just",
    "start": "1541360",
    "end": "1548039"
  },
  {
    "text": "want to step out and see the big",
    "start": "1548039",
    "end": "1551120"
  },
  {
    "text": "picture I'm not trying to create a new standard here I just want to provide some ideas about how people should think",
    "start": "1553480",
    "end": "1559200"
  },
  {
    "text": "about their Software System right so it's the abstractions that are really important to me and it was interesting",
    "start": "1559200",
    "end": "1564919"
  },
  {
    "text": "when when we ran the sketching workshop on Wednesday when I asked the teams what",
    "start": "1564919",
    "end": "1570120"
  },
  {
    "text": "they found challenging one of the things I said was we don't know how to describe our thoughts to other people because",
    "start": "1570120",
    "end": "1576840"
  },
  {
    "text": "essentially these are small groups of two or three people and these people have never met before they've never worked together",
    "start": "1576840",
    "end": "1582679"
  },
  {
    "text": "before so they're coming at this from different perspectives they have different reference points and they're all calling different things different",
    "start": "1582679",
    "end": "1589080"
  },
  {
    "text": "names and it's making the design process much much harder what this is basically doing is",
    "start": "1589080",
    "end": "1596039"
  },
  {
    "text": "is it sticking the static structure of the software back in the middle right at different levels of abstraction and once",
    "start": "1596039",
    "end": "1602080"
  },
  {
    "text": "you understand the static structure of what you're building it's really easy to fold in the other stuff so you can have",
    "start": "1602080",
    "end": "1607279"
  },
  {
    "text": "runtime and behavior models based upon your static structure you can have infrastructure models and therefore",
    "start": "1607279",
    "end": "1613360"
  },
  {
    "text": "deployment models that take containers onto infrastructure right so so for me",
    "start": "1613360",
    "end": "1618640"
  },
  {
    "text": "getting the static model right is really really important this all comes back to",
    "start": "1618640",
    "end": "1627000"
  },
  {
    "text": "code right so the static structure of a system is ultimately about the code and that's where we as developers spend most",
    "start": "1627000",
    "end": "1632919"
  },
  {
    "text": "of our lives and basically what this admits is that you know actually when we're talking about architecture and",
    "start": "1632919",
    "end": "1639200"
  },
  {
    "start": "1636000",
    "end": "1765000"
  },
  {
    "text": "drawing pictures we as developers are the most important",
    "start": "1639200",
    "end": "1644320"
  },
  {
    "text": "stakeholders now when I'm drawing pictures of my Software System I'm doing it for me as a software",
    "start": "1644320",
    "end": "1650320"
  },
  {
    "text": "developer and I'm doing it for my team yeah operations people support",
    "start": "1650320",
    "end": "1656159"
  },
  {
    "text": "people maybe there are a few other people who want to know something about what we're doing but essentially it's us as",
    "start": "1656159",
    "end": "1662200"
  },
  {
    "text": "developers so we have diagrams we have code and as I said before the Two Worlds",
    "start": "1665519",
    "end": "1670559"
  },
  {
    "text": "need to meet and if they",
    "start": "1670559",
    "end": "1676080"
  },
  {
    "text": "don't the diagrams are pointless aren't and this is what I see in a lot of organizations they have these big",
    "start": "1676080",
    "end": "1682279"
  },
  {
    "text": "grandiose a Zer cell taped together a few times pictures of their",
    "start": "1682279",
    "end": "1687760"
  },
  {
    "text": "system and nobody looks at them why number one they're out of date",
    "start": "1687760",
    "end": "1693799"
  },
  {
    "text": "number two they just can't comprehend that amount of stuff and number three they don't match the",
    "start": "1693799",
    "end": "1700000"
  },
  {
    "text": "code they're the creation of some grandio architect who basically drew a bunch of conceptual fluffy boxes on a",
    "start": "1700000",
    "end": "1706799"
  },
  {
    "text": "picture and then the team ignored it and did what they",
    "start": "1706799",
    "end": "1711320"
  },
  {
    "text": "want ah this is a rather embarrassing question to ask me isn't it how did this sneak in here so I showed you some",
    "start": "1712399",
    "end": "1719600"
  },
  {
    "text": "pictures of my tech dribe site down to components level does it match the code",
    "start": "1719600",
    "end": "1726679"
  },
  {
    "text": "H well I sort of accidentally open sourced the code base so you guys can go",
    "start": "1726679",
    "end": "1733080"
  },
  {
    "text": "and have a look at GitHub and figure this out for yourself but I can save you the pain the answer is",
    "start": "1733080",
    "end": "1739000"
  },
  {
    "text": "yes get in because I'm",
    "start": "1739000",
    "end": "1744120"
  },
  {
    "text": "awesome I practice what I preach so yeah so you know there's a component view of",
    "start": "1744519",
    "end": "1749640"
  },
  {
    "text": "the world and I've used a convention where each component sits in a Java package there's a nice bunch of stuff a",
    "start": "1749640",
    "end": "1758080"
  },
  {
    "text": "nice traceability between code and diagram awesome",
    "start": "1758080",
    "end": "1765399"
  },
  {
    "start": "1765000",
    "end": "1934000"
  },
  {
    "text": "did it start out this way not really is the honest answer um I drew my tech drives pictures from my book in my",
    "start": "1770600",
    "end": "1776559"
  },
  {
    "text": "training course and that's the way I'd thought about the architecture in my",
    "start": "1776559",
    "end": "1783519"
  },
  {
    "text": "head but the code didn't really look like that so I was essentially creating a a a fantasy",
    "start": "1783519",
    "end": "1790240"
  },
  {
    "text": "land why because I use layers right I did the stereotypical Java thing of just",
    "start": "1790240",
    "end": "1796720"
  },
  {
    "text": "basically building a web app with layers so to give you an example there's a tweet component and basically there's a",
    "start": "1796720",
    "end": "1802640"
  },
  {
    "text": "mongod DB store and it stores tweets and it's a simple component to get access to",
    "start": "1802640",
    "end": "1808120"
  },
  {
    "text": "that store that's it my first implementation was this there was a Services package a Services",
    "start": "1808120",
    "end": "1814000"
  },
  {
    "text": "layer with an interface and an implementation and there was a data access layer with an interface and an",
    "start": "1814000",
    "end": "1821559"
  },
  {
    "text": "implementation I'm using spring can you tell that serves",
    "start": "1821559",
    "end": "1828480"
  },
  {
    "text": "that's layers that's not a tweet component but my diagram had a tweet component on it so really what I was",
    "start": "1828480",
    "end": "1834200"
  },
  {
    "text": "doing here I was I was you know mapping in my head the layers in the",
    "start": "1834200",
    "end": "1839320"
  },
  {
    "text": "code and transposing them to a single component but it's wrong isn't",
    "start": "1839320",
    "end": "1846240"
  },
  {
    "text": "it the mapping isn't",
    "start": "1846240",
    "end": "1851360"
  },
  {
    "text": "explicit two choices redraw the picture or change the",
    "start": "1851360",
    "end": "1856919"
  },
  {
    "text": "code I didn't want to redraw the picture because it looks complex right because we have all these layers and things",
    "start": "1856919",
    "end": "1862200"
  },
  {
    "text": "inside it relationships and interactions and stuff so I refactored the code and now I have something like this so all of",
    "start": "1862200",
    "end": "1869039"
  },
  {
    "text": "my components sit in a package there's a nice clean public interface and all of",
    "start": "1869039",
    "end": "1874960"
  },
  {
    "text": "the implementation details are package protected so they can't be nudged from the outside world this is kind of",
    "start": "1874960",
    "end": "1883720"
  },
  {
    "text": "cool but I don't have a lay architecture anymore is what people say I do it's just that my layers are",
    "start": "1885679",
    "end": "1892639"
  },
  {
    "text": "inside my component so I still have a Services layer and I still have a data access layer but they're wrapped up you",
    "start": "1892639",
    "end": "1898399"
  },
  {
    "text": "know that this an implementation detail ah but now you can't mock your",
    "start": "1898399",
    "end": "1903440"
  },
  {
    "text": " DB thing out and test it unit test",
    "start": "1903440",
    "end": "1909000"
  },
  {
    "text": "it uh I can but I have to jump through a few hoops",
    "start": "1909000",
    "end": "1916559"
  },
  {
    "text": "that annoys me actually you know I've lost the ability to unit test this thing easily that's",
    "start": "1920159",
    "end": "1925760"
  },
  {
    "text": "one of the big advantages lay architectures give you you know that's why we talk about clean architecture and clean code and that kind of",
    "start": "1925760",
    "end": "1931880"
  },
  {
    "text": "thing ah so what I'm just not going to do unit testing right so that's the other approach here don't do unit",
    "start": "1931880",
    "end": "1937360"
  },
  {
    "start": "1934000",
    "end": "2056000"
  },
  {
    "text": "testing and I don't mean don't test I mean don't do unit testing so with my simple example here what benefit does",
    "start": "1937360",
    "end": "1944080"
  },
  {
    "text": "unit testing actually give me essentially all my tweet components doing is giving us a way to access a  database so what maybe I should",
    "start": "1944080",
    "end": "1951159"
  },
  {
    "text": "just do component testing through the component interface right so it's another approach there's this whole",
    "start": "1951159",
    "end": "1956919"
  },
  {
    "text": "interesting thing and inry in the moment about testing and how tdd is",
    "start": "1956919",
    "end": "1961759"
  },
  {
    "text": "dead some of it is quite controversial some of it you probably agree with this is one of the original papers",
    "start": "1963080",
    "end": "1969480"
  },
  {
    "text": "that sparked all of this stuff um we've come a long way since we",
    "start": "1969480",
    "end": "1975120"
  },
  {
    "text": "started doing things like mocking you know mocking out a database Bas collection because it was slow we got",
    "start": "1975120",
    "end": "1980360"
  },
  {
    "text": "ssds servers are fast we can provision infrastructure with anable or vagrant or whatever and do these things really",
    "start": "1980360",
    "end": "1986279"
  },
  {
    "text": "really quickly so a lot of the original reasons for unit testing have kind of disappeared I love this line in the uh",
    "start": "1986279",
    "end": "1993519"
  },
  {
    "text": "gyle paper he basically says maybe we're not good at doing design uh and dhh the",
    "start": "1993519",
    "end": "2000159"
  },
  {
    "text": "rails guy picks up on a lot of this stuff and said yeah actually we are abusing we you know we've got test",
    "start": "2000159",
    "end": "2006320"
  },
  {
    "text": "induced design damage why because we're having to separate all this stuff out order in order to create",
    "start": "2006320",
    "end": "2012600"
  },
  {
    "text": "simple isolated unit tests and again I think he's got a point",
    "start": "2012600",
    "end": "2017960"
  },
  {
    "text": "you know I think we're blindly walking into a bunch of these architectures and Designs because we think we should",
    "start": "2017960",
    "end": "2023559"
  },
  {
    "text": "because we think it's good to unit test everything in isolation but maybe we need to just think a bit",
    "start": "2023559",
    "end": "2029639"
  },
  {
    "text": "more so yeah maybe it's the significant elements that we want to test and we",
    "start": "2029639",
    "end": "2035320"
  },
  {
    "text": "don't want to blindly unit test everything so that's why maybe thinking about your system in terms of components",
    "start": "2035320",
    "end": "2041279"
  },
  {
    "text": "instead of layers opens up some different avenues for doing testing for",
    "start": "2041279",
    "end": "2047840"
  },
  {
    "text": "example what's the point of all this apart from I get to talk about drawing pictures and that kind of stuff",
    "start": "2048919",
    "end": "2055638"
  },
  {
    "text": "well essentially a good architecture enables agility doesn't it right so if we have a nice clean structure this",
    "start": "2055639",
    "end": "2063560"
  },
  {
    "start": "2056000",
    "end": "2167000"
  },
  {
    "text": "provides us the ability to change it to flex it to enhance it to extend it in the face of changing",
    "start": "2063560",
    "end": "2069878"
  },
  {
    "text": "requirements but of course there are different ways to build software systems right so on the one hand we have the big",
    "start": "2069879",
    "end": "2076240"
  },
  {
    "text": "monolith you know these things are normally easier to write single",
    "start": "2076240",
    "end": "2082240"
  },
  {
    "text": "deployment unit often look like a big ball of money if you open them up especially if they",
    "start": "2082240",
    "end": "2088398"
  },
  {
    "text": "evolve over years these things can be hard to change",
    "start": "2088399",
    "end": "2093440"
  },
  {
    "text": "unless you're Etsy and then you a at it over here service based architectures",
    "start": "2093440",
    "end": "2100720"
  },
  {
    "text": "microservices this is what Josh is going to be talking about later right microservices gives you lots of agility",
    "start": "2100720",
    "end": "2106599"
  },
  {
    "text": "and flexibility because instead of deploying a single thing you're deploying lots of smaller things and you",
    "start": "2106599",
    "end": "2112280"
  },
  {
    "text": "can change them whenever you want to you can write them in different languages this buys you a ton of agility but guess",
    "start": "2112280",
    "end": "2118599"
  },
  {
    "text": "what it's more complex than that it requires orchestration you know there's",
    "start": "2118599",
    "end": "2124400"
  },
  {
    "text": "a bunch of other things we have to think about it's not a free lunch",
    "start": "2124400",
    "end": "2129640"
  },
  {
    "text": "whenever I go and stay in hotels and I get my cereals for breakfast I go to the milk station and it's either full fat or",
    "start": "2130200",
    "end": "2137599"
  },
  {
    "text": "or skimmed right extremes there's never anything in the middle there has to be something in the",
    "start": "2137599",
    "end": "2143320"
  },
  {
    "text": "middle here and again you know if you're if you really do want to create monolithic systems maybe this is about",
    "start": "2143320",
    "end": "2148480"
  },
  {
    "text": "structure so maybe it's about injecting structure and this is why I'm a big fan of the components",
    "start": "2148480",
    "end": "2153599"
  },
  {
    "text": "thing right so even with monolithic systems I like chunking my monolithic system systems up into nice neat",
    "start": "2153599",
    "end": "2160000"
  },
  {
    "text": "structures in this case",
    "start": "2160000",
    "end": "2163240"
  },
  {
    "text": "components the decomposition strategy that you use is really important here you know whether it's functional versus",
    "start": "2166200",
    "end": "2172640"
  },
  {
    "start": "2167000",
    "end": "2279000"
  },
  {
    "text": "volatility based decomposition essentially that's how we get to a nice neat structure and you have to take lots",
    "start": "2172640",
    "end": "2179720"
  },
  {
    "text": "and lots of stuff into account right so you have to understand which bits might change and why and try and isolate the",
    "start": "2179720",
    "end": "2185720"
  },
  {
    "text": "impact of those changes the thing I see in Industry the most is that people really",
    "start": "2185720",
    "end": "2191440"
  },
  {
    "text": "struggle with these Concepts applied to monolithic systems and over time you know",
    "start": "2191440",
    "end": "2198520"
  },
  {
    "text": "monolithic systems evolve and they do turn into Big Balls of",
    "start": "2198520",
    "end": "2204280"
  },
  {
    "text": "mud I've spoken about this whole component based thing to audiences and they're like yeah we don't like it we",
    "start": "2204280",
    "end": "2211560"
  },
  {
    "text": "just going to do layers right we're comfortable Building Systems that are just layers and they think the whole breaking",
    "start": "2211560",
    "end": "2217680"
  },
  {
    "text": "system into components is hard because you have to think about responsibilities yeah guess what it's hard right but if",
    "start": "2217680",
    "end": "2224720"
  },
  {
    "text": "people can't think about components in monoliths guess what we're building",
    "start": "2224720",
    "end": "2229760"
  },
  {
    "text": "microservices are the next big balls of mud they're just distributed Big Balls of mud so the same principles that we",
    "start": "2229760",
    "end": "2235680"
  },
  {
    "text": "have to go through for decomposing our software systems and monoliths are equally as applicable to",
    "start": "2235680",
    "end": "2241520"
  },
  {
    "text": "microservices you know design is key here design thinking is key architecture is key the whole whole agility thing is",
    "start": "2241520",
    "end": "2248400"
  },
  {
    "text": "basically you know inspecting and adapting it's about reflecting on stuff that's worked and changing what",
    "start": "2248400",
    "end": "2255880"
  },
  {
    "text": "hasn't how do we apply this to software systems right if we have an existing architecture and we need to change it in",
    "start": "2255880",
    "end": "2261800"
  },
  {
    "text": "the face of changing requirements we need to see what we've got and this is the thing people are really hard at",
    "start": "2261800",
    "end": "2267440"
  },
  {
    "text": "doing this is the whole visualizing thing but once you understand what you have it's really really easy to see",
    "start": "2267440",
    "end": "2273440"
  },
  {
    "text": "where you want to go to so again thinking about structure conscious is really important",
    "start": "2273440",
    "end": "2279000"
  },
  {
    "start": "2279000",
    "end": "2345000"
  },
  {
    "text": "here so my key tip here is basically have a think about how to align the",
    "start": "2279000",
    "end": "2284480"
  },
  {
    "text": "architecture view of the world and the code view of the world and by creating a",
    "start": "2284480",
    "end": "2290319"
  },
  {
    "text": "really nice clean explicit simple mapping it opens up a bunch of",
    "start": "2290319",
    "end": "2295720"
  },
  {
    "text": "opportunities it makes your software systems easy to work with easy to understand it makes those conversations",
    "start": "2295720",
    "end": "2301839"
  },
  {
    "text": "over a whiteboard much easier to have as well because you can draw things on the Whiteboard and then go look and this is that thing in the cop",
    "start": "2301839",
    "end": "2309440"
  },
  {
    "text": "there are no silver bullets right so I'm not pitching a single approach I'm not saying that",
    "start": "2311560",
    "end": "2317560"
  },
  {
    "text": "layers are bad and you should do component based design I'm not saying you should do microservices you know all",
    "start": "2317560",
    "end": "2322720"
  },
  {
    "text": "of us are building different systems we have different contexts different needs so we still do need to think and we",
    "start": "2322720",
    "end": "2328960"
  },
  {
    "text": "shouldn't blindly apply the same approaches over and over again you know layers decoupling unit testing maybe",
    "start": "2328960",
    "end": "2335040"
  },
  {
    "text": "thinking about our architectures in different ways in terms of structural elements as I",
    "start": "2335040",
    "end": "2340200"
  },
  {
    "text": "said earlier leads us to other options and my final point is basically this if",
    "start": "2340200",
    "end": "2345319"
  },
  {
    "start": "2345000",
    "end": "2733000"
  },
  {
    "text": "your software system is really hard to work with change it and make sure you have a nice Arc View and a code",
    "start": "2345319",
    "end": "2352280"
  },
  {
    "text": "view that overlap and reflect each other thank you very",
    "start": "2352280",
    "end": "2358680"
  },
  {
    "text": "much so so the question was when I showed you the C very quickly there was an annotation at component with some",
    "start": "2364640",
    "end": "2369920"
  },
  {
    "text": "documentation there do I use that to generate diagrams the answer is not yet",
    "start": "2369920",
    "end": "2375359"
  },
  {
    "text": "but that's exactly why it's in there so I'm working on a tool to uh shoot through a code base extract components",
    "start": "2375359",
    "end": "2382079"
  },
  {
    "text": "or services or microservices and then we could automatically draw the pictures based upon relationships and dependencies so it's a it's a work in",
    "start": "2382079",
    "end": "2388720"
  },
  {
    "text": "progress thing I'm doing sorry some of it's on get already yeah",
    "start": "2388720",
    "end": "2394920"
  },
  {
    "text": "yeah so the uh The annotation process of Java stuff on GitHub I'm not sure if that was a question or statement but",
    "start": "2394920",
    "end": "2400960"
  },
  {
    "text": "basically if you go for a component based approach um mocking still important and and I agree so I guess",
    "start": "2400960",
    "end": "2406800"
  },
  {
    "text": "there are two two things here in my simple example of you know tweet component access in I can just go",
    "start": "2406800",
    "end": "2413520"
  },
  {
    "text": "straight through right there's there's very little point in decoupling my data access object if I wasn't accessing",
    "start": "2413520",
    "end": "2419119"
  },
  {
    "text": " and I was sending email or sending a JMS message or accessing a third party",
    "start": "2419119",
    "end": "2424480"
  },
  {
    "text": "that probably still needs to be mocked so you know there's not one rule fits all um if you look at my my web layer my",
    "start": "2424480",
    "end": "2430760"
  },
  {
    "text": "web layer is essentially very slim MVC style controllers orchestrating a bunch",
    "start": "2430760",
    "end": "2436720"
  },
  {
    "text": "of components how do I test those I can actually mock out the components wholesale so yeah we we can just apply",
    "start": "2436720",
    "end": "2443480"
  },
  {
    "text": "moing to a different level of granularity good point right so so I guess the question",
    "start": "2443480",
    "end": "2449240"
  },
  {
    "text": "is how do you how do you make sure your you're thinking about your architecture in a clean way and you're not mixing up",
    "start": "2449240",
    "end": "2455599"
  },
  {
    "text": "these different levels of of abstraction essentially",
    "start": "2455599",
    "end": "2460720"
  },
  {
    "text": "um it's all about so so the easiest way to think about this is where does the",
    "start": "2460760",
    "end": "2465800"
  },
  {
    "text": "code live and how do I deploy the code separately so if I was implementing a user story uh that I was deploying some",
    "start": "2465800",
    "end": "2472200"
  },
  {
    "text": "code in my web server and some code in my database so maybe there's a sore procedure and a bunch of code in in the",
    "start": "2472200",
    "end": "2477280"
  },
  {
    "text": "web server I would treat those things as two separate components rather than one component that has kind of two",
    "start": "2477280",
    "end": "2483920"
  },
  {
    "text": "implementation sides if you see what I mean um and again once you that you can start thinking if you think about them",
    "start": "2483920",
    "end": "2489359"
  },
  {
    "text": "as separate things with separate interfaces then they can be changed in different um different frequencies and",
    "start": "2489359",
    "end": "2495640"
  },
  {
    "text": "stuff so it's really about forcing yourself to think about stuff in isolation I",
    "start": "2495640",
    "end": "2501359"
  },
  {
    "text": "guess if you want some good examples of what the container stuff is there's a pile of diagrams here from the workshop",
    "start": "2501359",
    "end": "2507760"
  },
  {
    "text": "which show the kind of second interation of the pictures uh these ones should be much much clearer than these ones and",
    "start": "2507760",
    "end": "2513839"
  },
  {
    "text": "this shows you that nice kind of decomposition of a software system so the question is if you have an architecture how do you make sure that",
    "start": "2513839",
    "end": "2520200"
  },
  {
    "text": "you communicate that to the team effectively so that we essentially build the same thing in the same way with the same principles and the answer is",
    "start": "2520200",
    "end": "2527319"
  },
  {
    "text": "pictures right so this is exactly why we draw the pictures um these pictures go into enough detail that we can get a",
    "start": "2527319",
    "end": "2534640"
  },
  {
    "text": "view of the implementation strategy we can see uh relationships with between our structural elements and we can see",
    "start": "2534640",
    "end": "2540000"
  },
  {
    "text": "technology choices there's a lower level of design inside the components you know design",
    "start": "2540000",
    "end": "2545480"
  },
  {
    "text": "patterns that sort of thing maybe we should leave that to the developers unless we want to enforce certain principles and patterns so that's",
    "start": "2545480",
    "end": "2552680"
  },
  {
    "text": "exactly the purpose of these diagrams is to set a scene this could change right I'm happy for the architecture to evolve",
    "start": "2552680",
    "end": "2558599"
  },
  {
    "text": "over time but let's do so in a structured way so the question is um basically how",
    "start": "2558599",
    "end": "2564480"
  },
  {
    "text": "how do you effectively communicate to non-technical stakeholders and um what sort of questions crop",
    "start": "2564480",
    "end": "2570880"
  },
  {
    "text": "up the easiest way to do this is you know to use a model where",
    "start": "2570880",
    "end": "2576640"
  },
  {
    "text": "you can draw different pictures at different levels of abstraction so this is a an example context picture there's",
    "start": "2576640",
    "end": "2582520"
  },
  {
    "text": "nothing technical on here it just describes our system and how fits in with the rest of the environment so this is my starting point for having those",
    "start": "2582520",
    "end": "2588720"
  },
  {
    "text": "non-technical conversations if I'm talking to operations and support people maybe I go down to a container view of",
    "start": "2588720",
    "end": "2594839"
  },
  {
    "text": "the world what it shows you know web servers databases app servers but I'll stop and the next levels are just for",
    "start": "2594839",
    "end": "2599880"
  },
  {
    "text": "technical people so again it's by forcing yourself to think um in terms of",
    "start": "2599880",
    "end": "2605280"
  },
  {
    "text": "clean abstraction uh levels and layers that you have a story to tell from",
    "start": "2605280",
    "end": "2610839"
  },
  {
    "text": "non-technical down to technical essentially do that answer your question the pinching thing yeah yeah if someone",
    "start": "2610839",
    "end": "2618000"
  },
  {
    "text": "could make me a web tool to do that please have be awesome uh the question is how do you",
    "start": "2618000",
    "end": "2624240"
  },
  {
    "text": "take this kind of approach and communicate your architecture to operations people who want to know about",
    "start": "2624240",
    "end": "2629480"
  },
  {
    "text": "deployment and infrastructure concerns for example so my containers picture only shows web application database file",
    "start": "2629480",
    "end": "2635240"
  },
  {
    "text": "systems it doesn't show that there's you know a mongod DV cluster a web server F that kind of thing so this is a separate",
    "start": "2635240",
    "end": "2641800"
  },
  {
    "text": "diagram so I'd have a deployment diagram which basically shows how my containers are mapped onto the infrastructure",
    "start": "2641800",
    "end": "2647480"
  },
  {
    "text": "obviously if you've got a thousand noes maybe drawing a diagram is crazy but it's it's a separate view of the world you know the static view of the world",
    "start": "2647480",
    "end": "2653160"
  },
  {
    "text": "and then the deployment view is separate so so I guess some of the questions how how do I work is the short way to put",
    "start": "2653160",
    "end": "2659880"
  },
  {
    "text": "this um and the simplest way to to to to describe this is I do do some upfront",
    "start": "2659880",
    "end": "2666440"
  },
  {
    "text": "thinking so when I'm you know attacking a problem I'll draw these types of diagrams because you can do that level",
    "start": "2666440",
    "end": "2671880"
  },
  {
    "text": "of decomposition very very quickly and then if we're doing it if you know if we want to go down the tdd route maybe we",
    "start": "2671880",
    "end": "2676960"
  },
  {
    "text": "do tdd in the components or we tdd from the outside in so there's there's still lots of opportunities for evolving and using tdd or or you know test first test",
    "start": "2676960",
    "end": "2684079"
  },
  {
    "text": "last um but that's you know this is the starting point for all of that",
    "start": "2684079",
    "end": "2689400"
  },
  {
    "text": "stuff design your enli I'll generally go down to this kind",
    "start": "2689400",
    "end": "2696040"
  },
  {
    "text": "of detail which which puts a framework in place so in in terms of high level components and and chunking up",
    "start": "2696040",
    "end": "2702200"
  },
  {
    "text": "responsibilities it's the same thing if you're kind of doing a microservices architecture you have to figure out what the services are same thing so I have to",
    "start": "2702200",
    "end": "2708839"
  },
  {
    "text": "figure out what the major components are and therefore how they interact cool well thank you very much",
    "start": "2708839",
    "end": "2715240"
  },
  {
    "text": "um back in here at 11:34 Josh's talk about Godzilla",
    "start": "2715240",
    "end": "2723079"
  },
  {
    "text": "[Music]",
    "start": "2724120",
    "end": "2732500"
  }
]