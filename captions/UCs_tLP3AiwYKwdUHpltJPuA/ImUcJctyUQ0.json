[
  {
    "start": "0",
    "end": "221000"
  },
  {
    "text": "oh this is a talk that i gave a couple days ago for the first time so i actually know i could finish in an",
    "start": "240",
    "end": "6720"
  },
  {
    "text": "hour which i didn't i wasn't completely sure when i gave it the last time and i fixed a couple of bugs in the talk",
    "start": "6720",
    "end": "13599"
  },
  {
    "text": "the first time so it's been slightly tested uh the idea this has been something i've been thinking about for a while",
    "start": "13599",
    "end": "19760"
  },
  {
    "text": "is uh is uh looking at uh things that that i don't like you know",
    "start": "19760",
    "end": "25680"
  },
  {
    "text": "things i can see are mistakes in design patterns now uh we wrote that this book 20 years",
    "start": "25680",
    "end": "31760"
  },
  {
    "text": "ago it still sells i don't know how many people have uh have right how many people own a",
    "start": "31760",
    "end": "37760"
  },
  {
    "text": "copy of design patterns okay for a pretty high percentage so how many people actually looked at it",
    "start": "37760",
    "end": "44239"
  },
  {
    "text": "the last six months oh that's pretty good so you're seeing programmers",
    "start": "44239",
    "end": "50960"
  },
  {
    "text": "uh yeah so one of the issues of course is that a c plus was the main language of the book",
    "start": "52239",
    "end": "57680"
  },
  {
    "text": "now i actually uh was at the time i suppose still it was more of a small",
    "start": "57680",
    "end": "64559"
  },
  {
    "text": "talk programmer than a c plus plus programmer uh the operating operating systems course and we used c plus plus there i",
    "start": "64559",
    "end": "70479"
  },
  {
    "text": "had several projects involved c plus so i certainly knew it but my heart was much more in small town so all the",
    "start": "70479",
    "end": "76240"
  },
  {
    "text": "small talk code in the book is is my fault um but one of the points of the book was",
    "start": "76240",
    "end": "83600"
  },
  {
    "text": "that these patterns were not uh specific to a language and we often hear a complaint about the book that's",
    "start": "83600",
    "end": "89759"
  },
  {
    "text": "really just a bunch of hacks to make up for problems in c plus but in fact most of",
    "start": "89759",
    "end": "96720"
  },
  {
    "text": "those patterns not all of them but most of them are things that small talk programmers use and and and java",
    "start": "96720",
    "end": "103680"
  },
  {
    "text": "programmers as well and it's sort of interesting to see how these patterns have carried over into into java and c",
    "start": "103680",
    "end": "111200"
  },
  {
    "text": "sharp and so now java was interesting because it was the first",
    "start": "111200",
    "end": "116320"
  },
  {
    "text": "language to come out where uh where and if the language was actually a",
    "start": "116320",
    "end": "122880"
  },
  {
    "text": "few it came out in the book uh says 95 on it actually came out in",
    "start": "122880",
    "end": "128000"
  },
  {
    "text": "october of 94 so it's getting close to the exactly 20 years from when uh when the",
    "start": "128000",
    "end": "134640"
  },
  {
    "text": "book came out but java hit the world",
    "start": "134640",
    "end": "139760"
  },
  {
    "text": "uh nine months later so so if it wasn't really out at all when our",
    "start": "139760",
    "end": "145680"
  },
  {
    "text": "book came out and the libraries of java are the first libraries that were written by people who had read",
    "start": "145680",
    "end": "152480"
  },
  {
    "text": "the book and the a lot of the names were there because we've got i think the",
    "start": "152480",
    "end": "158959"
  },
  {
    "text": "people who wrote the libraries they were very competent option programs they knew all the patterns before we wrote the book now we were not",
    "start": "158959",
    "end": "165280"
  },
  {
    "text": "inventing things in the book and our goal in the book was to describe the things the experts knew but",
    "start": "165280",
    "end": "171360"
  },
  {
    "text": "but beginners didn't and they ought to know uh so i'm not saying that the java folks",
    "start": "171360",
    "end": "178959"
  },
  {
    "text": "learned the patterns from the book but they did use the names and but what's happened is over time things",
    "start": "178959",
    "end": "185360"
  },
  {
    "text": "have have diverged and some of the patterns the way people use patterns are pretty different from",
    "start": "185360",
    "end": "190560"
  },
  {
    "text": "what the book says and that's sort of what i i want to uh to explore and the question is",
    "start": "190560",
    "end": "196560"
  },
  {
    "text": "and so people know what root cause analysis is usually talking about bugs you know what's the real cause of this",
    "start": "196560",
    "end": "203120"
  },
  {
    "text": "bug what what is there something we can change our process so we won't be making bugs like this",
    "start": "203120",
    "end": "208319"
  },
  {
    "text": "anymore that's when you're doing root cause analysis so i gave this talk so this episode my",
    "start": "208319",
    "end": "214879"
  },
  {
    "text": "goal is to to say why is it wrong",
    "start": "214879",
    "end": "220239"
  },
  {
    "text": "i gave this talk at a conference a pattern languages of",
    "start": "220239",
    "end": "225599"
  },
  {
    "start": "221000",
    "end": "402000"
  },
  {
    "text": "programs which is a very small conference of the of people who write patterns so it's",
    "start": "225599",
    "end": "233200"
  },
  {
    "text": "patterned writers get together and and uh you know work on making the the writing",
    "start": "233200",
    "end": "239680"
  },
  {
    "text": "better one of the things that i'm happiest about the effect of the book is it's caused lots of other people to",
    "start": "239680",
    "end": "246560"
  },
  {
    "text": "write patterns there's a lot of very good patterns books out there none",
    "start": "246560",
    "end": "251760"
  },
  {
    "text": "of them have sold as well as ours but that doesn't mean they aren't as good it's just a lot of this has to do with",
    "start": "251760",
    "end": "257919"
  },
  {
    "text": "publicity and all my favorite book is domain driven design by aircraft how many people know that",
    "start": "257919",
    "end": "264000"
  },
  {
    "text": "book okay oh that's pretty good very good it's a really great book um and there's books on on user",
    "start": "264000",
    "end": "270800"
  },
  {
    "text": "interface design and embedded systems design all sorts of stuff",
    "start": "270800",
    "end": "275840"
  },
  {
    "text": "and so this is sort of been an effect of our book has been uh that",
    "start": "275840",
    "end": "283840"
  },
  {
    "text": "it's made it okay to write this practical knowledge that we need when we're building systems",
    "start": "283840",
    "end": "290639"
  },
  {
    "text": "which before there really wasn't a good avenue for for writing about it so we had this",
    "start": "290639",
    "end": "298240"
  },
  {
    "text": "conference and one of my complaints about patterns is that people write the patterns down",
    "start": "298240",
    "end": "305919"
  },
  {
    "text": "and then there's a sense of you know the work is over now that we've written these patterns down and in fact",
    "start": "305919",
    "end": "312560"
  },
  {
    "text": "patterns are a description of what we've seen out there it's what people do does that mean it's what people ought to do maybe there's a",
    "start": "312560",
    "end": "318720"
  },
  {
    "text": "better way of doing it in fact there usually is a better way of doing this time goes by we keep picking up better and better",
    "start": "318720",
    "end": "324560"
  },
  {
    "text": "ways of doing things and so we really should not treat these these pattern descriptions uh",
    "start": "324560",
    "end": "330320"
  },
  {
    "text": "statically as as just uh as uh as the truth uh they",
    "start": "330320",
    "end": "335520"
  },
  {
    "text": "are you know obviously we trying as much as we can to be doing part of what i was uh telling the",
    "start": "335520",
    "end": "342400"
  },
  {
    "text": "folks at klopp was that we need to be constantly trying to",
    "start": "342400",
    "end": "347600"
  },
  {
    "text": "improve them and that we they ought to be constantly trying to improve them i've been working with",
    "start": "347600",
    "end": "352720"
  },
  {
    "text": "people on security patterns and the security patterns to me are particularly a case where uh",
    "start": "352720",
    "end": "359199"
  },
  {
    "text": "you know where people think that because we've written lots of patterns that somehow our work is done and and figuring out which ones are",
    "start": "359199",
    "end": "365759"
  },
  {
    "text": "really because i know that a lot of these patterns when you actually use them in practice they make your system a lot more",
    "start": "365759",
    "end": "371199"
  },
  {
    "text": "complicated harder to to reason about and maybe you have to do that to get security but it sure would be",
    "start": "371199",
    "end": "378240"
  },
  {
    "text": "nice it would come with a better way so that it didn't make our system so complicated doesn't something that doesn't seem like",
    "start": "378240",
    "end": "383280"
  },
  {
    "text": "the right patterns but that's this is like i said i i'm",
    "start": "383280",
    "end": "389280"
  },
  {
    "text": "applying that now because i figured most of you are probably not pattern writers and so really are interested in that",
    "start": "389280",
    "end": "395360"
  },
  {
    "text": "i'm applying that to design patterns things you are interested in and see how they uh they go okay",
    "start": "395360",
    "end": "402960"
  },
  {
    "start": "402000",
    "end": "548000"
  },
  {
    "text": "so why when you look at design patterns and you see that um it gives bad advice",
    "start": "402960",
    "end": "411280"
  },
  {
    "text": "uh why is this well there's basically you know two ways you can think about it one is",
    "start": "411280",
    "end": "416639"
  },
  {
    "text": "that it was actually decent advice for the time but times have changed that's that's one",
    "start": "416639",
    "end": "422000"
  },
  {
    "text": "possibility and another possibility is ah we were actually should have known better back in in 1994 you know",
    "start": "422000",
    "end": "429120"
  },
  {
    "text": "it was it was a sort of a weakness a mistake another a third possibility and that is that",
    "start": "429120",
    "end": "436160"
  },
  {
    "text": "um that in fact we did know but somehow we didn't realize how people were going",
    "start": "436160",
    "end": "441280"
  },
  {
    "text": "to interpret what we wrote and there's been a number of cases where uh where",
    "start": "441280",
    "end": "450080"
  },
  {
    "text": "you know now that i can see people's reaction you know people read the book and they go off and do something and",
    "start": "450080",
    "end": "456560"
  },
  {
    "text": "and now i say well we shouldn't have read it that way because because we should have headed them off in the past",
    "start": "456560",
    "end": "461599"
  },
  {
    "text": "an example of this is a singleton pattern you probably have read critiques of the singleton pattern and",
    "start": "461599",
    "end": "467199"
  },
  {
    "text": "the the thing about singleton pattern i'm not going to talk about that here uh but the point",
    "start": "467199",
    "end": "472720"
  },
  {
    "text": "i'm going to make is the the point of the singleton pattern is to manage global state and of course ideally you",
    "start": "472720",
    "end": "479599"
  },
  {
    "text": "don't have global state you really want to try to get rid of it and if you can't get rid of it then you need to have a way of managing it",
    "start": "479599",
    "end": "485759"
  },
  {
    "text": "but instead people think of the pattern as somehow a way of blessing global state now we'll just we'll just",
    "start": "485759",
    "end": "490879"
  },
  {
    "text": "have a singleton pattern and that makes global state good well that's that's ridiculous and and",
    "start": "490879",
    "end": "498400"
  },
  {
    "text": "but you know nothing in our description tells you that this is that something that you you",
    "start": "498400",
    "end": "505120"
  },
  {
    "text": "use only when you can't get rid of it um and so people just yeah",
    "start": "505120",
    "end": "512800"
  },
  {
    "text": "and the way i learned about this was a year or two after the book coming up",
    "start": "512800",
    "end": "517919"
  },
  {
    "text": "coming to little conferences and talking to people and someone would come up and say oh you're so wonderful we love it we're",
    "start": "517919",
    "end": "523919"
  },
  {
    "text": "using it and we're we're getting into it starting these patterns and and yeah in our system you know we've got 40",
    "start": "523919",
    "end": "530560"
  },
  {
    "text": "cases where we're using singleton",
    "start": "530560",
    "end": "535839"
  },
  {
    "text": "it's hard to tell them you're you idiot they just tells you how how much they like your",
    "start": "537279",
    "end": "542399"
  },
  {
    "text": "look so i can't can't say that",
    "start": "542399",
    "end": "548640"
  },
  {
    "start": "548000",
    "end": "606000"
  },
  {
    "text": "so i'm going to focus on the observer pattern um how many people have used the",
    "start": "548640",
    "end": "553760"
  },
  {
    "text": "observer pattern pretty much everybody so when the book",
    "start": "553760",
    "end": "559040"
  },
  {
    "text": "says its definition if you find a one-to-many dependency between",
    "start": "559040",
    "end": "564480"
  },
  {
    "text": "objects or if one object changes state all dependents are notified and updated automatically",
    "start": "564480",
    "end": "571279"
  },
  {
    "text": "high level vague doesn't really tell you anything at all about how it's done so i've been teaching an",
    "start": "571279",
    "end": "577440"
  },
  {
    "text": "object right design class for since 85 actually that used uh small",
    "start": "577440",
    "end": "584399"
  },
  {
    "text": "talk almost always use small talk and the uh the observer pattern",
    "start": "584399",
    "end": "591040"
  },
  {
    "text": "is a key thing it's called dependence that's actually the name the dependence",
    "start": "591040",
    "end": "596320"
  },
  {
    "text": "and i wanted to call it dependency we thought about this but it didn't uh it ended up the observer instead of",
    "start": "596320",
    "end": "602880"
  },
  {
    "text": "the pendants and this is a slide that i use from",
    "start": "602880",
    "end": "608480"
  },
  {
    "start": "606000",
    "end": "924000"
  },
  {
    "text": "in my course and i like this example because it is a little shocking when you",
    "start": "608480",
    "end": "615200"
  },
  {
    "text": "think about everything so then i'd say we're doing a simulation where uh the fbi",
    "start": "615200",
    "end": "621200"
  },
  {
    "text": "is uh looking at some chicago gangsters or mobsters we think back in the 20s",
    "start": "621200",
    "end": "626720"
  },
  {
    "text": "and uh there's uh when you do the observer there this fbi agent is",
    "start": "626720",
    "end": "632160"
  },
  {
    "text": "probably in a hotel room across with binoculars right because they didn't have high-tech equipment nowadays they would be tapping",
    "start": "632160",
    "end": "638720"
  },
  {
    "text": "the phone or something but uh the the",
    "start": "638720",
    "end": "644000"
  },
  {
    "text": "the way you implement this if you're going to do a simulation of this the way you implement this is you have these two different roles",
    "start": "644000",
    "end": "650880"
  },
  {
    "text": "there's the the subject and observer a lot of times people call this observable an observer but the book calls them",
    "start": "650880",
    "end": "657360"
  },
  {
    "text": "subject and observer and small talk they actually call it a model and uh",
    "start": "657360",
    "end": "664079"
  },
  {
    "text": "the the dependent i suppose is what it's usually called small talk uh but so the subject and the observer",
    "start": "665839",
    "end": "672320"
  },
  {
    "text": "and then the observer is really an interface it has a single operation",
    "start": "672320",
    "end": "677600"
  },
  {
    "text": "update that's what it's called in small talk and you make a uh you'll actually have to make a sub",
    "start": "677600",
    "end": "684160"
  },
  {
    "text": "class of it in small talk because it's just an interface and small talk is dynamically typed so you know all you",
    "start": "684160",
    "end": "689920"
  },
  {
    "text": "have to do is implement an operation called update and you're good that's really all you have is duct typing",
    "start": "689920",
    "end": "696320"
  },
  {
    "text": "and but with subject you would make a subtype because uh there's there's some code that",
    "start": "696320",
    "end": "703279"
  },
  {
    "text": "implements operations to add a dependent and remove a dependent and to notify that it's changed",
    "start": "703279",
    "end": "708959"
  },
  {
    "text": "so when you implement your mobster class your mobster class is going to have things like rob a bank or",
    "start": "708959",
    "end": "714880"
  },
  {
    "text": "drive the getaway car so you have these operations and when they do that they would have to you",
    "start": "714880",
    "end": "720800"
  },
  {
    "text": "know inside your raw bank operation it would say self-changed as a sort of changing state",
    "start": "720800",
    "end": "726399"
  },
  {
    "text": "and doing something and with itself changed all the observers would be notified now part of the observer pattern is that",
    "start": "726399",
    "end": "734480"
  },
  {
    "text": "the the subjects don't actually know for sure whether they have any observers or how many observers they",
    "start": "734480",
    "end": "740959"
  },
  {
    "text": "have or what type of observers they have but they do have to be programmed so that if",
    "start": "740959",
    "end": "746320"
  },
  {
    "text": "they do have any observers they will be notified about important changes and part of what happens in small talk",
    "start": "746320",
    "end": "753920"
  },
  {
    "text": "this protocol is actually in class objects so every single object can be a subject you don't have to do something",
    "start": "753920",
    "end": "760720"
  },
  {
    "text": "special for that but in every every class um",
    "start": "760720",
    "end": "768399"
  },
  {
    "text": "so when an observer depends on a subject you will the subject has a list of the",
    "start": "768399",
    "end": "775600"
  },
  {
    "text": "observers and when you say self-change it actually updates sends the update message to each",
    "start": "775600",
    "end": "782880"
  },
  {
    "text": "of them and this is funny because if you think about it this means that every mobster has a list of all the fbi agents that",
    "start": "782880",
    "end": "790399"
  },
  {
    "text": "are looking at them and that doesn't quite compute in terms",
    "start": "790399",
    "end": "795839"
  },
  {
    "text": "of real life that's just not the way it would ever be but that has to be the way the observer",
    "start": "795839",
    "end": "801519"
  },
  {
    "text": "pattern there's many many variations of this and all of them do the same thing you've got to have a list so that when you",
    "start": "801519",
    "end": "807120"
  },
  {
    "text": "go to generate this event somehow or another you are able to notify everything that's",
    "start": "807120",
    "end": "812320"
  },
  {
    "text": "subscribed to that and that has to be that that dependence and of course when you actually",
    "start": "812320",
    "end": "817839"
  },
  {
    "text": "implement these classes your fbi agent is going to know about mobsters but you",
    "start": "817839",
    "end": "822880"
  },
  {
    "text": "probably will program the mobsters in a way that they don't know anything about anything else right they don't have to do anything about anything else so there's this",
    "start": "822880",
    "end": "829680"
  },
  {
    "text": "sort of a pointer in this direction there's pointers in that direction in the concrete classes not the abstract",
    "start": "829680",
    "end": "836240"
  },
  {
    "text": "lesson sort of the reusable stuff that's invisible and you don't see it keeps track of the pointer in the other direction and that's when you program it",
    "start": "836240",
    "end": "842639"
  },
  {
    "text": "you don't you don't have to think about it it just is there and it just sort of works and that's that's sort of nice but you actually do",
    "start": "842639",
    "end": "849040"
  },
  {
    "text": "have those those pointers one of the interesting things about the observer pattern then is also the class dependencies again it's harder",
    "start": "849040",
    "end": "855839"
  },
  {
    "text": "to see it in small talk when you're in a strongly typed language it's easier to see these because observer is an",
    "start": "855839",
    "end": "861519"
  },
  {
    "text": "interface and so you have a class that implements that interface",
    "start": "861519",
    "end": "866560"
  },
  {
    "text": "and then there's going to be some actually reusable code over here that that you get and but all it knows",
    "start": "866560",
    "end": "874160"
  },
  {
    "text": "about this observer is it's got objects to implement that interface so both of these depend upon this interface",
    "start": "874160",
    "end": "880639"
  },
  {
    "text": "and they don't really depend upon each other at all and when you make the concrete class here it will",
    "start": "880639",
    "end": "886079"
  },
  {
    "text": "reuse sort of whatever subject implementation stuff you have however it's going to reuse it",
    "start": "886079",
    "end": "892000"
  },
  {
    "text": "and then the um but none of them depend on the observers",
    "start": "892000",
    "end": "897279"
  },
  {
    "text": "the observers are uh depend on that there's no cycles in the dependency graph",
    "start": "897279",
    "end": "902639"
  },
  {
    "text": "at the at the class level survey if you look at includes uh links there's no dependency there's a very nice coupling and you end up with",
    "start": "902639",
    "end": "910079"
  },
  {
    "text": "if you have a layered system but this is sort of up in the top layer and then these are all down down below",
    "start": "910079",
    "end": "915760"
  },
  {
    "text": "it so it results in pretty loosely coupled systems",
    "start": "915760",
    "end": "922000"
  },
  {
    "start": "924000",
    "end": "1091000"
  },
  {
    "text": "again this is from my my the class notes you just sort of pulled this out there's when you look at the protocols",
    "start": "924959",
    "end": "931839"
  },
  {
    "text": "of on these objects there's three uh three types of operations that you have",
    "start": "931839",
    "end": "937199"
  },
  {
    "text": "uh well the first is registration you have to somehow say this observer is observing this",
    "start": "937199",
    "end": "943279"
  },
  {
    "text": "subject you have to set up that link between them and in small talk it's called that pendant but every every system that have",
    "start": "943279",
    "end": "950560"
  },
  {
    "text": "different names for that you have to have this registration and then you have to have notification where you're saying okay we changed this",
    "start": "950560",
    "end": "956720"
  },
  {
    "text": "thing and again the standard way is if you can make it so that the object uh when you when you set a variable it",
    "start": "956720",
    "end": "963759"
  },
  {
    "text": "automatically well we'll call this then you're less likely to have bugs",
    "start": "963759",
    "end": "969440"
  },
  {
    "text": "sometimes what people would do is to um",
    "start": "969440",
    "end": "975040"
  },
  {
    "text": "turned off the power",
    "start": "979360",
    "end": "983839"
  },
  {
    "text": "the power's back on and somebody may have to reset this",
    "start": "986959",
    "end": "997839"
  },
  {
    "text": "so the third part is the update and you can make this which is that when you make mention the new observer you have",
    "start": "1003839",
    "end": "1010160"
  },
  {
    "text": "to implement the update operation you can make mistakes on all three of those i you can tell my students",
    "start": "1010160",
    "end": "1016800"
  },
  {
    "text": "that the mistakes you make in the update protocol are like the easiest to detect because you",
    "start": "1016800",
    "end": "1022959"
  },
  {
    "text": "try to try to update a a widget that you try to display the widget and it does something",
    "start": "1022959",
    "end": "1028880"
  },
  {
    "text": "wrong you see it right away so you we tend to write more update code than anything else but it's",
    "start": "1028880",
    "end": "1034160"
  },
  {
    "text": "it's you know it's generally the easiest the uh you get more problems with you know",
    "start": "1034160",
    "end": "1040798"
  },
  {
    "text": "forgetting to to notify those are being careful to make sure that notifications always get",
    "start": "1040799",
    "end": "1046480"
  },
  {
    "text": "propagated the way they are supposed to and look at problems with with",
    "start": "1046480",
    "end": "1051600"
  },
  {
    "text": "registration um so the next thing i was going to do is show you the c-plus plus code in the",
    "start": "1051600",
    "end": "1057440"
  },
  {
    "text": "book but you're not going to be able to see that yeah i don't think this is a",
    "start": "1057440",
    "end": "1064799"
  },
  {
    "text": "problem is this",
    "start": "1064799",
    "end": "1067840"
  },
  {
    "start": "1091000",
    "end": "1147000"
  },
  {
    "text": "okay so this is the observer side you're going to have an interface",
    "start": "1091840",
    "end": "1097039"
  },
  {
    "text": "for the subject interfacing observer and you can see how update was described",
    "start": "1097039",
    "end": "1102480"
  },
  {
    "text": "in the book the only argument is a pointer to the subjects an object of change so that you could and the reason",
    "start": "1102480",
    "end": "1108960"
  },
  {
    "text": "for this is you might want to be observing several different things and so you get update operations you",
    "start": "1108960",
    "end": "1114799"
  },
  {
    "text": "like to know which one caused it but there really isn't very much information that gets",
    "start": "1114799",
    "end": "1120160"
  },
  {
    "text": "passed along the way we described it in the book uh in small talk there usually was a a",
    "start": "1120160",
    "end": "1126640"
  },
  {
    "text": "strang a symbol actually that that often got uh sensed to say but they also didn't",
    "start": "1126640",
    "end": "1134720"
  },
  {
    "text": "have a lot of information in sort of the classic way that it was done and both of these have",
    "start": "1134720",
    "end": "1141520"
  },
  {
    "text": "a single operation a single update operation now",
    "start": "1141520",
    "end": "1148480"
  },
  {
    "start": "1147000",
    "end": "1373000"
  },
  {
    "text": "and in java it's generally called of course listening you have listeners instead of",
    "start": "1148480",
    "end": "1154000"
  },
  {
    "text": "observers and some people seem to think that somehow listening and observing are very different to me they're almost like",
    "start": "1154000",
    "end": "1159760"
  },
  {
    "text": "synonyms if you're talking about you know that computers don't either listen literally or observe literally so they're clearly they're",
    "start": "1159760",
    "end": "1165840"
  },
  {
    "text": "metaphors as far as metaphors go it's hard for me to see the difference and i think they just said okay that",
    "start": "1165840",
    "end": "1171200"
  },
  {
    "text": "wasn't quite right because what actually happened was in the very very first version of java they literally copied what was in design",
    "start": "1171200",
    "end": "1178320"
  },
  {
    "text": "patterns and it didn't take them very long at all to figure out that wasn't going to work and so then the next version came out",
    "start": "1178320",
    "end": "1185120"
  },
  {
    "text": "and they had listeners so if you go back and look at the these various early earliest versions you'll",
    "start": "1185120",
    "end": "1190559"
  },
  {
    "text": "see this and in the sense that you might say that didn't work well they obviously get their their code",
    "start": "1190559",
    "end": "1196640"
  },
  {
    "text": "to work uh but uh there were lots of different types of of of events you wanted to to generate and",
    "start": "1196640",
    "end": "1205280"
  },
  {
    "text": "um he met up with lots of case statements and complicated logic on the observer side",
    "start": "1205280",
    "end": "1211120"
  },
  {
    "text": "and they could just imagine doing this over and over again and multiplying the code and it didn't look like it was going to be",
    "start": "1211120",
    "end": "1216640"
  },
  {
    "text": "very good so to do something else so what they did was and sort of the listening instead of",
    "start": "1216640",
    "end": "1222480"
  },
  {
    "text": "observing is they standardized um an argument to the event so when you",
    "start": "1222480",
    "end": "1227840"
  },
  {
    "text": "do this update operation you're going to pass an object along called an event which describes",
    "start": "1227840",
    "end": "1233919"
  },
  {
    "text": "the kind of change you have a place to put more arguments instead of just this object change",
    "start": "1233919",
    "end": "1239600"
  },
  {
    "text": "you can say something about what kind of change it was and then there's a lot of different instead of just one update",
    "start": "1239600",
    "end": "1246240"
  },
  {
    "text": "there's a lot of different uh variations different kind of listeners so you make",
    "start": "1246240",
    "end": "1251600"
  },
  {
    "text": "a number of different types of listeners and each of them has their own interface and in fact",
    "start": "1251600",
    "end": "1257039"
  },
  {
    "text": "you can even have more than one update method on the interface now i keep saying update",
    "start": "1257039",
    "end": "1262159"
  },
  {
    "text": "method that's never where it's called of course so there's like action listener and the operation there is action performed",
    "start": "1262159",
    "end": "1269360"
  },
  {
    "text": "and a component listener they have component resize component move",
    "start": "1269360",
    "end": "1274400"
  },
  {
    "text": "components shown in the shown so so component listener is one of those that has a number of different",
    "start": "1274400",
    "end": "1280240"
  },
  {
    "text": "uh update methods and a single type uh this was um i think",
    "start": "1280240",
    "end": "1286559"
  },
  {
    "text": "uh i'm not sure that or if it was in swing when that",
    "start": "1286559",
    "end": "1292240"
  },
  {
    "text": "came in but there aren't actually a lot of listeners that have multiple um what's",
    "start": "1292240",
    "end": "1298000"
  },
  {
    "text": "happened so if there's something the property change listener there's a one for collections that uh",
    "start": "1298000",
    "end": "1306480"
  },
  {
    "text": "has an argument that tells you something about the kind of changes that's another possibility you could you could look if you think about how",
    "start": "1306480",
    "end": "1312240"
  },
  {
    "text": "you would describe different type of operations you could perhaps subtype the event you could",
    "start": "1312240",
    "end": "1319280"
  },
  {
    "text": "have an argument in the event that has an enum that tells you something about what kind there's a variety of ways",
    "start": "1319280",
    "end": "1324799"
  },
  {
    "text": "that it's done and i can see the different ways i'm not quite sure",
    "start": "1324799",
    "end": "1329840"
  },
  {
    "text": "the trade-offs are exactly and i actually think it's you know coding up a lot of stuff and just trying",
    "start": "1329840",
    "end": "1335200"
  },
  {
    "text": "different ones and get a feel for it never know when you see uh trends whether it's just a whether the trend is",
    "start": "1335200",
    "end": "1343280"
  },
  {
    "text": "just a a fad you know just people copying other people",
    "start": "1343280",
    "end": "1348799"
  },
  {
    "text": "uh or if there's if there's no strong reasons uh behind it uh in the sense of having",
    "start": "1348799",
    "end": "1355840"
  },
  {
    "text": "an event object that's that's clearly a a a great standard to have it's a good",
    "start": "1355840",
    "end": "1363600"
  },
  {
    "text": "standard to have because you just need more information",
    "start": "1363600",
    "end": "1373919"
  },
  {
    "start": "1373000",
    "end": "1626000"
  },
  {
    "text": "so the book i was trying to say this did the book describe it at the at one",
    "start": "1373919",
    "end": "1380960"
  },
  {
    "text": "level clearly the book does not describe this it just doesn't so i'm trying to look for hints so maybe we were thinking",
    "start": "1380960",
    "end": "1386559"
  },
  {
    "text": "about that and and and there's something there that you could apply all this the closest i could come is there's a",
    "start": "1386559",
    "end": "1392400"
  },
  {
    "text": "section that talks about push and pull model so the push means an event gets",
    "start": "1392400",
    "end": "1398640"
  },
  {
    "text": "generated and all the information about this event sort of comes with the event",
    "start": "1398640",
    "end": "1403760"
  },
  {
    "text": "poll means the event gets generated and then the observer gets told gets notified and then the observer grabs whatever it",
    "start": "1403760",
    "end": "1410159"
  },
  {
    "text": "wants out of the the subject and so our",
    "start": "1410159",
    "end": "1415759"
  },
  {
    "text": "for example you have a distributed system and these are real messages going over the wire you really want uh",
    "start": "1416640",
    "end": "1423360"
  },
  {
    "text": "on a push because you can get a single message whereas you can do pull you're gonna have to have a message and it's gonna come back and you're gonna get you",
    "start": "1423360",
    "end": "1429200"
  },
  {
    "text": "know three ways uh before so uh and look didn't talk",
    "start": "1429200",
    "end": "1434240"
  },
  {
    "text": "about that by the way we were we never thought about distributed systems when we were writing the book uh this was uh we didn't we didn't really",
    "start": "1434240",
    "end": "1441919"
  },
  {
    "text": "have experience with that anyway so talking about push and pull of implementation of the observer pattern",
    "start": "1441919",
    "end": "1448559"
  },
  {
    "text": "often have the subject broadcast additional information about the change the subject passes this information as",
    "start": "1448559",
    "end": "1454640"
  },
  {
    "text": "argument to update so yeah argument to update that sounds like maybe this could be events",
    "start": "1454640",
    "end": "1460159"
  },
  {
    "text": "the amount of information may vary widely as the experienced writer this is you know this is fudge",
    "start": "1460159",
    "end": "1466320"
  },
  {
    "text": "but you don't want to commit yourself so it's about me very widely and then there's a little bit about a",
    "start": "1466320",
    "end": "1471600"
  },
  {
    "text": "push and pull and then the pool model emphasizes the subject's ignorance of its observers in",
    "start": "1471600",
    "end": "1477360"
  },
  {
    "text": "other words if it's going to uh the pull model you have the subject you can let the observer grab whatever",
    "start": "1477360",
    "end": "1484080"
  },
  {
    "text": "it wants out of the subject the subject doesn't have to make predictions about what the observer wants whereas the push model assumes",
    "start": "1484080",
    "end": "1491279"
  },
  {
    "text": "subjects knows something about the observer's needs the push model might make observers",
    "start": "1491279",
    "end": "1496720"
  },
  {
    "text": "less reusable because subject classes make assumptions about observer classes that might not",
    "start": "1496720",
    "end": "1501840"
  },
  {
    "text": "always be true as i was reading that i said that's",
    "start": "1501840",
    "end": "1507360"
  },
  {
    "text": "baloney push model does not make observers less",
    "start": "1507360",
    "end": "1512960"
  },
  {
    "text": "reusable but having an event that's a push model is that we're going to have an event that carries all this stuff with us and",
    "start": "1512960",
    "end": "1520159"
  },
  {
    "text": "it does not make it more reusable if you think about a mouse",
    "start": "1520159",
    "end": "1525440"
  },
  {
    "text": "then part of that is it depends what the when you have these when you have these uh specialized",
    "start": "1525440",
    "end": "1530880"
  },
  {
    "text": "interfaces of specialized observer interfaces it can be about a thing and if you can describe that",
    "start": "1530880",
    "end": "1536720"
  },
  {
    "text": "thing well you can give all the information you need in the event so a match what can you do with a mouse what events",
    "start": "1536720",
    "end": "1543840"
  },
  {
    "text": "can a mouse generate you know it's a button up button that can have lots of buttons maybe you know 17 bucks in the house or something",
    "start": "1543840",
    "end": "1550559"
  },
  {
    "text": "you have a lot of buttons but a button up button down and then mouse moves now what else is there there's nothing",
    "start": "1550559",
    "end": "1556799"
  },
  {
    "text": "else so if you generate those events you have complete understanding of the mouse",
    "start": "1556799",
    "end": "1563039"
  },
  {
    "text": "and and it doesn't depend on the application it doesn't depend so this is this thing of sort of the push model assumes",
    "start": "1563039",
    "end": "1570159"
  },
  {
    "text": "subjects know something about their observer's needs sounds sort of logical but it isn't logical",
    "start": "1570159",
    "end": "1576000"
  },
  {
    "text": "if you have well-defined uh interfaces for a particular type",
    "start": "1576000",
    "end": "1581120"
  },
  {
    "text": "of of events and so and the result actually i mean if you look at at the",
    "start": "1581120",
    "end": "1587200"
  },
  {
    "text": "java is it it has led to uh reusable classes of the reasonable",
    "start": "1587200",
    "end": "1594320"
  },
  {
    "text": "observers and so this last bit is is just wrong",
    "start": "1594320",
    "end": "1600400"
  },
  {
    "text": "so reality is the push bottle can be used to make observers more reusable",
    "start": "1601679",
    "end": "1606960"
  },
  {
    "text": "i mean i'm not saying that invariably or always or necessarily would be used but you can use it because",
    "start": "1606960",
    "end": "1613440"
  },
  {
    "text": "you have specialized observer interfaces for particular kinds of changes and lists and and strings and so on",
    "start": "1613440",
    "end": "1621440"
  },
  {
    "text": "anyway so if you enter the library of both subjects and servers if you take this course so there",
    "start": "1621440",
    "end": "1627360"
  },
  {
    "start": "1626000",
    "end": "1691000"
  },
  {
    "text": "is a so one thing that sort of bit of change was listeners instead of observers and",
    "start": "1627360",
    "end": "1634480"
  },
  {
    "text": "then having events and thinking about that in fact i think back to to small talk",
    "start": "1634480",
    "end": "1641679"
  },
  {
    "text": "early 90s and there were small talk systems that passed events because",
    "start": "1641679",
    "end": "1648799"
  },
  {
    "text": "small talk is dynamically typed it's pretty easy to like add anything you want to the update operator and if your observers",
    "start": "1648799",
    "end": "1657440"
  },
  {
    "text": "are ready to take it they can take it you know they don't all have to be the same and even though it's always called",
    "start": "1657440",
    "end": "1665200"
  },
  {
    "text": "update update with one argument or two arguments and what the things in the arguments were",
    "start": "1665200",
    "end": "1670559"
  },
  {
    "text": "uh they're already different interfaces and this can be a problem actually with dynamic languages as you can be varying the the interface",
    "start": "1670559",
    "end": "1677039"
  },
  {
    "text": "you can in your mind you know the difference between these interfaces but when you look at the code it's not so obvious",
    "start": "1677039",
    "end": "1682159"
  },
  {
    "text": "that it's there and these are these are tricks that that people use a lot and added language which can have one",
    "start": "1682159",
    "end": "1687840"
  },
  {
    "text": "benefits sometimes but so there's another thing that's happened",
    "start": "1687840",
    "end": "1694159"
  },
  {
    "start": "1691000",
    "end": "1873000"
  },
  {
    "text": "which uh is often called data binding and i didn't actually use anything that",
    "start": "1694159",
    "end": "1701600"
  },
  {
    "text": "was called data binding i think i used this before but it wasn't called data binding but i started using something called data binder two years",
    "start": "1701600",
    "end": "1708000"
  },
  {
    "text": "ago and i was actually talking to eric gamma not too long ago and he was saying oh",
    "start": "1708000",
    "end": "1713120"
  },
  {
    "text": "data binding is sort of a specialization of observer i said this and i thought about it for half an",
    "start": "1713120",
    "end": "1720000"
  },
  {
    "text": "hour and said well you're right it is it isn't i",
    "start": "1720000",
    "end": "1725760"
  },
  {
    "text": "data bindings a little bit different and i think it it sometimes means a little bit other things as well but the part of",
    "start": "1725760",
    "end": "1731520"
  },
  {
    "text": "data binding and this maybe is something you do in order to get data binding",
    "start": "1731520",
    "end": "1737520"
  },
  {
    "text": "is uh definitely related to observance so the idea here is that we're going to uh implement our",
    "start": "1737520",
    "end": "1743200"
  },
  {
    "text": "subject as a composite subject rather than having a big object and we just depend",
    "start": "1743200",
    "end": "1749120"
  },
  {
    "text": "on the whole thing and we let it we're going to break it up into little pieces and we're going to depend on a little piece",
    "start": "1749120",
    "end": "1754799"
  },
  {
    "text": "and and let it and one of the obvious things is being able to just depend on a single",
    "start": "1754799",
    "end": "1760399"
  },
  {
    "text": "property and when that property changes you'll get notified and this is all this is",
    "start": "1760399",
    "end": "1766320"
  },
  {
    "text": "all part of of having these specialized interfaces specialized listener interfaces when you",
    "start": "1766320",
    "end": "1771840"
  },
  {
    "text": "have a separate object to store a list versus a just a regular property",
    "start": "1771840",
    "end": "1777360"
  },
  {
    "text": "then you can have specialized observers for them and the great thing about this is you don't have to write",
    "start": "1777360",
    "end": "1784159"
  },
  {
    "text": "notification or or event handlers because you've got",
    "start": "1784159",
    "end": "1790159"
  },
  {
    "text": "standard subjects and you've got standard observers and they they sort of",
    "start": "1790159",
    "end": "1795279"
  },
  {
    "text": "know how to fit themselves you still have to register so you still have to do the registration but as long as you're sticking with your",
    "start": "1795279",
    "end": "1801760"
  },
  {
    "text": "standards you avoid all the other stuff so this is actually a nice benefit and you end",
    "start": "1801760",
    "end": "1808799"
  },
  {
    "text": "up instead of because instead of like assigning to a variable",
    "start": "1808799",
    "end": "1814000"
  },
  {
    "text": "you're going to have an object that holds this value and you're going to be performing an operation on that little",
    "start": "1814000",
    "end": "1819279"
  },
  {
    "text": "component object to set a value so you know set value of property rather than assigning to a variable there's",
    "start": "1819279",
    "end": "1825279"
  },
  {
    "text": "little changes you make in your in your program um sort of picture i like",
    "start": "1825279",
    "end": "1832159"
  },
  {
    "text": "is that we now some big object we have to be made up of these these smaller objects with each of these",
    "start": "1832159",
    "end": "1838399"
  },
  {
    "text": "things we think of as a as something we can depend on and discover when it changes and so then",
    "start": "1838399",
    "end": "1844559"
  },
  {
    "text": "when you build your user interface you can have various widgets each widget depends on",
    "start": "1844559",
    "end": "1851039"
  },
  {
    "text": "on one of these smaller pieces and the data binding libraries always have this characteristic that",
    "start": "1851039",
    "end": "1857679"
  },
  {
    "text": "that you are supposed to build your your uh your your",
    "start": "1857679",
    "end": "1862799"
  },
  {
    "text": "application objects out of lots of little things and then you build your user interface",
    "start": "1862799",
    "end": "1867919"
  },
  {
    "text": "and and connect them together now",
    "start": "1867919",
    "end": "1871919"
  },
  {
    "start": "1873000",
    "end": "2377000"
  },
  {
    "text": "the the consequences here are as i said you don't have to invoke these update events explicitly and that makes",
    "start": "1874399",
    "end": "1881519"
  },
  {
    "text": "makes observers more reusable and as well as those little data holy",
    "start": "1881519",
    "end": "1887120"
  },
  {
    "text": "objects become more reusable you don't really get a benefit from this until you get",
    "start": "1887120",
    "end": "1892480"
  },
  {
    "text": "a library of components but once you have that library of components it's easy to use and you another thing before",
    "start": "1892480",
    "end": "1900559"
  },
  {
    "text": "you can make this happen you've got to have a set of standard observers listeners whatever you're",
    "start": "1900559",
    "end": "1906320"
  },
  {
    "text": "going to call them you sort of need those standard interfaces before you can build the libraries and and really",
    "start": "1906320",
    "end": "1912080"
  },
  {
    "text": "achieve it but once you have that it's pretty beneficial now there's an issue though",
    "start": "1912080",
    "end": "1918880"
  },
  {
    "text": "which is you can't do everything with this there are there are uh kind of events or",
    "start": "1918880",
    "end": "1926320"
  },
  {
    "text": "things you ways you want to respond to events that can't be handled uh automatically again",
    "start": "1926320",
    "end": "1931840"
  },
  {
    "text": "there's various ways of dealing with design but if you think of the classic application",
    "start": "1931840",
    "end": "1938320"
  },
  {
    "text": "where you've got a list of file names and you click on a file name and you want to go read the file and you",
    "start": "1938320",
    "end": "1944559"
  },
  {
    "text": "want to display the file somewhere else other you somehow you you have to",
    "start": "1944559",
    "end": "1949840"
  },
  {
    "text": "put a a click maybe it's a operation read or something on a menu or",
    "start": "1949840",
    "end": "1955600"
  },
  {
    "text": "maybe you just click and depend on how you want to implement it but you're going to do something here and it's the the the standard",
    "start": "1955600",
    "end": "1963519"
  },
  {
    "text": "objects are going to um are going to implement the fact that when you select a line it gets",
    "start": "1963519",
    "end": "1970159"
  },
  {
    "text": "highlighted and and that sort of stuff but when you want to do this application behavior",
    "start": "1970159",
    "end": "1975360"
  },
  {
    "text": "of reading a file you've got to put that in somewhere and there's a variety of different ways",
    "start": "1975360",
    "end": "1981120"
  },
  {
    "text": "to do that but one of the common ones is to just have an object that's going to be a",
    "start": "1981120",
    "end": "1987679"
  },
  {
    "text": "listener and listen to this especially and you can you and you add in a uh your application code there",
    "start": "1987679",
    "end": "1995519"
  },
  {
    "text": "and this i always think of this as a as a mediator because",
    "start": "1995519",
    "end": "2004880"
  },
  {
    "text": "so in in java you tend to do this",
    "start": "2004880",
    "end": "2010559"
  },
  {
    "text": "but the problem is actually it grows",
    "start": "2012159",
    "end": "2019760"
  },
  {
    "text": "so in in java um you tend to do this on a component so",
    "start": "2019760",
    "end": "2025840"
  },
  {
    "text": "something like with a panel or something you'll sub class that and have it be the uh the listener and",
    "start": "2025840",
    "end": "2034640"
  },
  {
    "text": "and that's often where you'll put the uh the uh",
    "start": "2034640",
    "end": "2040880"
  },
  {
    "text": "those little anonymous classes that are uh you're making a little class just to",
    "start": "2042320",
    "end": "2050800"
  },
  {
    "text": "be a specialized listener in small talk it was done more on the uh on the subject side and",
    "start": "2050800",
    "end": "2058800"
  },
  {
    "text": "those are these are your your your components are",
    "start": "2058800",
    "end": "2064720"
  },
  {
    "text": "uh so it smells like they had a notion of an application model and you would usually put these extra",
    "start": "2065919",
    "end": "2072960"
  },
  {
    "text": "operations in the application model",
    "start": "2072960",
    "end": "2076800"
  },
  {
    "text": "so in both cases those were were really a mediator because you were",
    "start": "2078480",
    "end": "2085679"
  },
  {
    "text": "just picking some object and as often as the case with mediator uh",
    "start": "2085679",
    "end": "2090878"
  },
  {
    "text": "you you don't really want to add a new object to the design so you look for some object you're going to have to have anyway and say well i'm",
    "start": "2090879",
    "end": "2097520"
  },
  {
    "text": "going to let it be the one that that acts as a mediator for me so you say this is the one that's going to handle these events",
    "start": "2097520",
    "end": "2103760"
  },
  {
    "text": "and you know sometimes you can not really have to add any special event handling stuff and when you need",
    "start": "2103760",
    "end": "2109359"
  },
  {
    "text": "something it's a little oddball then you go and you you put that in",
    "start": "2109359",
    "end": "2117839"
  },
  {
    "text": "so",
    "start": "2121040",
    "end": "2123280"
  },
  {
    "text": "i said a reusable observers might handle 95 of events which might actually be too",
    "start": "2128079",
    "end": "2133440"
  },
  {
    "text": "high i suppose it's on how good your your framework is uh maybe it's only 80 percent or 90",
    "start": "2133440",
    "end": "2142160"
  },
  {
    "text": "but the point is these other patterns uh make a lot of things reusable but not",
    "start": "2142160",
    "end": "2149520"
  },
  {
    "text": "everything and you have to deal with the exceptions and the usual way is to have a mediator to do",
    "start": "2149520",
    "end": "2157040"
  },
  {
    "text": "that now the book actually mentions mediator as being",
    "start": "2157040",
    "end": "2164000"
  },
  {
    "text": "related to observer but what it talks about when you actually go in and read the detail",
    "start": "2164000",
    "end": "2169040"
  },
  {
    "text": "it's talking about something different it's talking about cases where you",
    "start": "2169040",
    "end": "2174880"
  },
  {
    "text": "um you are trying to uh implement constraint a more generalized",
    "start": "2174880",
    "end": "2181119"
  },
  {
    "text": "constraint system and your you you delegate all updates to this mediator which",
    "start": "2181119",
    "end": "2189440"
  },
  {
    "text": "uh which can like optimize things uh what this is it's called the change",
    "start": "2189440",
    "end": "2196240"
  },
  {
    "text": "manager which is what we called it but that is it's gonna optimize uh and",
    "start": "2196240",
    "end": "2201839"
  },
  {
    "text": "because like there's problems with with observer pattern you can't have cycles and observers because you took",
    "start": "2201839",
    "end": "2207359"
  },
  {
    "text": "this infinite loop of updates and there's problems like that where you can eliminate those",
    "start": "2207359",
    "end": "2212480"
  },
  {
    "text": "by having this complex mediator that is able to figure things out so it",
    "start": "2212480",
    "end": "2218480"
  },
  {
    "text": "really was talking about something different and uh the things i saw that we were thinking of with change manager are way",
    "start": "2218480",
    "end": "2224560"
  },
  {
    "text": "more complicated than the kind of mediators that people people make so it really wasn't quite",
    "start": "2224560",
    "end": "2231119"
  },
  {
    "text": "the same and we didn't talk about how adapters get used so this is a classic thing you do in java",
    "start": "2231119",
    "end": "2239040"
  },
  {
    "text": "if you want to make some object is listening to two different sources of events they say you've got two buttons",
    "start": "2239040",
    "end": "2245359"
  },
  {
    "text": "and you want to be able to listen to both of them well they're both buttons so they're both going to give you the same kind of event on the action",
    "start": "2245359",
    "end": "2251200"
  },
  {
    "text": "uh action of their so action listeners say what you can do is uh",
    "start": "2251200",
    "end": "2259440"
  },
  {
    "text": "we've got some button we're going to say they're red and green or something so we have our ad action listener and",
    "start": "2259440",
    "end": "2266400"
  },
  {
    "text": "you can define the new class without even defining its name uh just",
    "start": "2266400",
    "end": "2272480"
  },
  {
    "text": "by defining the the actually performed operation which is what what you'll need and so then you",
    "start": "2272480",
    "end": "2280160"
  },
  {
    "text": "can do this again say for the green button and add another action to it and you've actually defined two little",
    "start": "2280160",
    "end": "2287280"
  },
  {
    "text": "subclasses tiny little subclasses without any uh without actually having to give them a name that's really what's",
    "start": "2287280",
    "end": "2293359"
  },
  {
    "text": "going on but what do these classes do what these classes are doing is they are converting an action",
    "start": "2293359",
    "end": "2300400"
  },
  {
    "text": "performed operation into something else perform red action perform greed action whatever",
    "start": "2300400",
    "end": "2307440"
  },
  {
    "text": "on a slightly different object you're calling these methods on your bigger object and that's",
    "start": "2307440",
    "end": "2313920"
  },
  {
    "text": "that's an adapter you're converting from one interface to another you know very very simple",
    "start": "2313920",
    "end": "2320160"
  },
  {
    "text": "but and it's interesting in small talk it was done a different way because in small talk you can just",
    "start": "2320160",
    "end": "2327599"
  },
  {
    "text": "pass we had what they called unpluggable adapters and you could just tell them they'd have",
    "start": "2327599",
    "end": "2334000"
  },
  {
    "text": "a variable that would hold the name of the message that they're supposed to send and so when the event got generated it",
    "start": "2334000",
    "end": "2341040"
  },
  {
    "text": "would sort of turn around and send this other message on so you could uh you could",
    "start": "2341040",
    "end": "2347520"
  },
  {
    "text": "do a inflatable adapter on the on your red button with with your",
    "start": "2347520",
    "end": "2355119"
  },
  {
    "text": "perform red action message to this object and then you do a pluggable adapter on the green uh",
    "start": "2355119",
    "end": "2361599"
  },
  {
    "text": "button with a perform green action and a bit it's basically the same thing",
    "start": "2361599",
    "end": "2368160"
  },
  {
    "text": "you didn't actually have to make a new class but it was the same thing you'd get these simple little adapters",
    "start": "2368160",
    "end": "2375920"
  },
  {
    "start": "2377000",
    "end": "2642000"
  },
  {
    "text": "okay so um",
    "start": "2378800",
    "end": "2384720"
  },
  {
    "text": "so i'm going to shift gears a little bit i'm going to come back to observer but before i come back to observer i",
    "start": "2388079",
    "end": "2393680"
  },
  {
    "text": "want to look at iterator then we're going to sort of apply iterating to observation",
    "start": "2393680",
    "end": "2399520"
  },
  {
    "text": "so iterator is one of those patterns that everybody thinks they know it is",
    "start": "2399520",
    "end": "2410240"
  },
  {
    "text": "one of the things that that some people miss i'm not saying any of you do but i know",
    "start": "2410240",
    "end": "2415280"
  },
  {
    "text": "some people miss is is it isn't just having an internet it's not just the fact that an iterator",
    "start": "2415280",
    "end": "2420960"
  },
  {
    "text": "has operations to advance to the next element and so on that's not what's what really",
    "start": "2420960",
    "end": "2426160"
  },
  {
    "text": "was a key in the pattern was that you would have some sort of a class hierarchy",
    "start": "2426160",
    "end": "2431760"
  },
  {
    "text": "a bunch of aggregates and that they would all have an interface for giving you an iterator even though",
    "start": "2431760",
    "end": "2438240"
  },
  {
    "text": "they would implement their internals differently and that as a client you didn't not care",
    "start": "2438240",
    "end": "2446160"
  },
  {
    "text": "did they have a list of stuff do they only have two maybe they didn't have any at all you",
    "start": "2446160",
    "end": "2451760"
  },
  {
    "text": "would just say give me your iterator and then give you something and you would iterate through it and it was a",
    "start": "2451760",
    "end": "2457040"
  },
  {
    "text": "way of making everything more uh more uniform and and gave you a uniform interface of",
    "start": "2457040",
    "end": "2464160"
  },
  {
    "text": "the outside world so that was really the main emphasis of of the pattern was sort of using interfaces to give",
    "start": "2464160",
    "end": "2471599"
  },
  {
    "text": "yourself a uniform interface uh using adapt giving iterators to give",
    "start": "2471599",
    "end": "2478240"
  },
  {
    "text": "yourself a uniform interface um now one of the things",
    "start": "2478240",
    "end": "2484079"
  },
  {
    "text": "that the book talks about is the difference between internal iterators and external literatures",
    "start": "2484079",
    "end": "2489359"
  },
  {
    "text": "and i read this a long time ago back when you were a c plus programmer you would basically skip",
    "start": "2489359",
    "end": "2495760"
  },
  {
    "text": "over all the stuff about internal iterators because it didn't make any sense to you you couldn't use it anyway uh the external iterators were what um",
    "start": "2495760",
    "end": "2503920"
  },
  {
    "text": "you know what c plus plus programmers think of as real iterators and that's pretty much true in java two because internal iterators require",
    "start": "2503920",
    "end": "2511119"
  },
  {
    "text": "having closures or or whatever you you need the ability to pass",
    "start": "2511119",
    "end": "2516480"
  },
  {
    "text": "code in the idea with the internal iterator well you basically just ask the collection itself",
    "start": "2516480",
    "end": "2522560"
  },
  {
    "text": "to to iterate and if you were doing an internal iterator here you would uh",
    "start": "2522560",
    "end": "2530160"
  },
  {
    "text": "so so i mean you might have an image and you could say",
    "start": "2530160",
    "end": "2535280"
  },
  {
    "text": "for all bits do and give it some closure and it would just it knew what its bits",
    "start": "2535280",
    "end": "2541040"
  },
  {
    "text": "were and would would uh would iterate over them so the image isn't necessarily a collection",
    "start": "2541040",
    "end": "2547359"
  },
  {
    "text": "you don't necessarily know what the representation of it as a collection would be so you do this directly if you had an",
    "start": "2547359",
    "end": "2553520"
  },
  {
    "text": "array or you had a set you can ask the iterator over its elements but anything where you can think of",
    "start": "2553520",
    "end": "2558800"
  },
  {
    "text": "that has elements and you might implement it with a collection but maybe not you don't know how it's implemented",
    "start": "2558800",
    "end": "2564240"
  },
  {
    "text": "you would still be able to pass the closures in directly to it and the same way of course with",
    "start": "2564240",
    "end": "2570880"
  },
  {
    "text": "external iterators that you can you can if you ask it for an external",
    "start": "2570880",
    "end": "2577760"
  },
  {
    "text": "iterator and then iterate it over those those components",
    "start": "2577760",
    "end": "2583280"
  },
  {
    "text": "so one of the things that we didn't didn't talk about though is that when you have systems with",
    "start": "2584720",
    "end": "2591040"
  },
  {
    "text": "internal iterators they always have a lot more operations than just",
    "start": "2591040",
    "end": "2596560"
  },
  {
    "text": "iterate they always do",
    "start": "2596560",
    "end": "2601599"
  },
  {
    "text": "in theory you could have somebody that has closures and don't once you get closures you immediately",
    "start": "2601599",
    "end": "2607760"
  },
  {
    "text": "want to be able to map every element onto a new element of",
    "start": "2607760",
    "end": "2614319"
  },
  {
    "text": "the collection to select out all the elements of a collection so you start passing in closure",
    "start": "2614319",
    "end": "2619440"
  },
  {
    "text": "and make a whole bunch of operations and all things closures and this is actually pretty standard you know the sets of operations that",
    "start": "2619440",
    "end": "2626160"
  },
  {
    "text": "this was done uh were were started in the 60s",
    "start": "2626160",
    "end": "2631599"
  },
  {
    "text": "with apl and lisp and languages like that they were doing all this and and small talk actually had a pretty",
    "start": "2631599",
    "end": "2638319"
  },
  {
    "text": "good set of them too which i was quite familiar with but of course",
    "start": "2638319",
    "end": "2644160"
  },
  {
    "start": "2642000",
    "end": "2895000"
  },
  {
    "text": "c plus didn't have closures and java didn't have closures and so",
    "start": "2644160",
    "end": "2649920"
  },
  {
    "text": "you know people weren't doing that but as soon as we have languages so so scala uh iprogramming groovy",
    "start": "2649920",
    "end": "2658640"
  },
  {
    "text": "and you know they use they use these as soon as you get closures you start doing other things so",
    "start": "2658640",
    "end": "2665920"
  },
  {
    "text": "this is groovy uh you can iterate directly like this uh then collect to",
    "start": "2665920",
    "end": "2673359"
  },
  {
    "text": "take every element and and convert it into a new element so you get a new",
    "start": "2673359",
    "end": "2678400"
  },
  {
    "text": "collection of the same size you can select out the elements you want",
    "start": "2678400",
    "end": "2685040"
  },
  {
    "text": "and then you can collapse the set of elements into a single element in",
    "start": "2685040",
    "end": "2690160"
  },
  {
    "text": "this case you're adding them all up and these are just like typical every library you see has these sort of",
    "start": "2690160",
    "end": "2696480"
  },
  {
    "text": "things well with it i don't think this particular set of names is so great uh but everybody has",
    "start": "2696480",
    "end": "2704079"
  },
  {
    "text": "different names and we probably ought to standardize on the set of names so you can move from one language to the next because i'm",
    "start": "2704079",
    "end": "2709920"
  },
  {
    "text": "always you know you a new language and it takes a little while to figure out what they call these things",
    "start": "2709920",
    "end": "2715200"
  },
  {
    "text": "and all the languages now one of the things that people often seem to miss",
    "start": "2715200",
    "end": "2720960"
  },
  {
    "text": "and is in fact implied by the iterator pattern",
    "start": "2720960",
    "end": "2726240"
  },
  {
    "text": "is that you can do these things on streams not just on collections because if you think of what an iterator",
    "start": "2726240",
    "end": "2731920"
  },
  {
    "text": "is doing i mean the iterator interface give me the next give me the next get it is it done give it the next",
    "start": "2731920",
    "end": "2738400"
  },
  {
    "text": "is it done give me the next is it done that's that's the interface on streams and when i program in small talk",
    "start": "2738400",
    "end": "2744560"
  },
  {
    "text": "i always define the collection interface on streams as well it's funny because that's not part of",
    "start": "2744560",
    "end": "2750079"
  },
  {
    "text": "any of the standard small talk libraries they don't they don't do that so other languages do that people",
    "start": "2750079",
    "end": "2758480"
  },
  {
    "text": "realize that that streams and collections are sort of the same thing and they make",
    "start": "2758480",
    "end": "2764960"
  },
  {
    "text": "them be more similar",
    "start": "2764960",
    "end": "2769119"
  },
  {
    "text": "so in particular in javascript um so javascript has before each and",
    "start": "2771920",
    "end": "2779040"
  },
  {
    "text": "map and filter and this is i'm actually i've never written a real javascript program i've taken this out of some",
    "start": "2779040",
    "end": "2785839"
  },
  {
    "text": "of the lecture that i'll tell you about pretty soon and this is apparently new javascript notation where",
    "start": "2785839",
    "end": "2790960"
  },
  {
    "text": "you get more compact uh more compact notation so it's sort of what's what's",
    "start": "2790960",
    "end": "2796000"
  },
  {
    "text": "coming up and john looks good but there's uh they have this notion of event streams",
    "start": "2796000",
    "end": "2802640"
  },
  {
    "text": "and the the event streams are going to be streams of",
    "start": "2802640",
    "end": "2808160"
  },
  {
    "text": "of observer events so the events the observers are are generating you can think of an",
    "start": "2808160",
    "end": "2813280"
  },
  {
    "text": "observer as a stream of events all the events that this guy's the subject is going to generate",
    "start": "2813280",
    "end": "2819280"
  },
  {
    "text": "over over time and they take map and filter",
    "start": "2819280",
    "end": "2825359"
  },
  {
    "text": "were designed on array and they put them on event stream they say well after all",
    "start": "2825359",
    "end": "2831359"
  },
  {
    "text": "event stream and arrays are so much the same because an event stream is like an array only",
    "start": "2831359",
    "end": "2837520"
  },
  {
    "text": "laid out in time instead of memory and and i thought that was a very nice way",
    "start": "2837520",
    "end": "2843760"
  },
  {
    "text": "of putting it",
    "start": "2843760",
    "end": "2846640"
  },
  {
    "text": "so and in fact the book did not say a stream is a kind of iterator and it didn't say anything about how",
    "start": "2848800",
    "end": "2855200"
  },
  {
    "text": "when you have internal iterators then then",
    "start": "2855200",
    "end": "2860319"
  },
  {
    "text": "it's really easy to put map filter and reduce and stuff like that on your on your uh i mean didn't mention",
    "start": "2860319",
    "end": "2866400"
  },
  {
    "text": "that at all uh and you you you can do that",
    "start": "2866400",
    "end": "2873680"
  },
  {
    "text": "you can even do that in a language without closures otherwise a real pain in the neck and you can sort of do it as a as an",
    "start": "2873680",
    "end": "2880960"
  },
  {
    "text": "exercise to see why you probably aren't going to want to do that in a real program but",
    "start": "2880960",
    "end": "2886079"
  },
  {
    "text": "there are times when it's worth it it's even in a language without closures you're basically faking closures and",
    "start": "2886079",
    "end": "2892000"
  },
  {
    "text": "there are times when it's working so the the the",
    "start": "2892000",
    "end": "2900800"
  },
  {
    "start": "2895000",
    "end": "3270000"
  },
  {
    "text": "thing that i i heard about is this reactive program how many people have seen reactive programming",
    "start": "2900800",
    "end": "2906079"
  },
  {
    "text": "okay so so fair number it's a apparently a fairly a new thing it came out of microsoft and",
    "start": "2906079",
    "end": "2913040"
  },
  {
    "text": "the the talk i saw was from netflix so the number of people are using it there's a lot of",
    "start": "2913040",
    "end": "2918720"
  },
  {
    "text": "different implementations of the of the library and the key idea here is that you think of a subject as an",
    "start": "2918720",
    "end": "2926480"
  },
  {
    "text": "event stream and so an observer now becomes a",
    "start": "2926480",
    "end": "2931520"
  },
  {
    "text": "function on an event stream and",
    "start": "2931520",
    "end": "2936559"
  },
  {
    "text": "um and then you can use these type of high level operations on collections or",
    "start": "2936559",
    "end": "2942480"
  },
  {
    "text": "streams or whatever on events and it leads to a lot simpler code now",
    "start": "2942480",
    "end": "2950720"
  },
  {
    "text": "in those cases when you could just plug a reusable observer to a reusable",
    "start": "2950720",
    "end": "2956160"
  },
  {
    "text": "subject and you know who needs it because you're not going to be writing this stuff anyway but all the things that that doesn't",
    "start": "2956160",
    "end": "2963359"
  },
  {
    "text": "cover and it doesn't cover 100 at all there's a lot of stuff you have to write and whenever you",
    "start": "2963359",
    "end": "2968480"
  },
  {
    "text": "have to start writing these it's always going to be the tricky one you basically eliminated writing all the easy stuff",
    "start": "2968480",
    "end": "2974559"
  },
  {
    "text": "and now you're going to be leaving all the tricky stuff to be done by hand and the reactive programming is there for",
    "start": "2974559",
    "end": "2980880"
  },
  {
    "text": "for the tricky stuff a lot of this is sort of asynchronous and so they often talk about um",
    "start": "2980880",
    "end": "2986800"
  },
  {
    "text": "they include in this not just what you would normally do with um with observer but",
    "start": "2986800",
    "end": "2994319"
  },
  {
    "text": "with asynchronous programming as well so uh again i haven't actually done any of",
    "start": "2994319",
    "end": "3001440"
  },
  {
    "text": "this programming this is something i'm planning to do pretty soon because it looks very cool and and i",
    "start": "3001440",
    "end": "3007119"
  },
  {
    "text": "understand it you know it's very logical to me because i've done all the pieces of it i just haven't put",
    "start": "3007119",
    "end": "3013200"
  },
  {
    "text": "it all together at once and again it takes work to make the libraries other people have done that",
    "start": "3013200",
    "end": "3019119"
  },
  {
    "text": "i'm going to grab the libraries start start trying to use them so the",
    "start": "3019119",
    "end": "3024240"
  },
  {
    "text": "the arguments in favor of it are that you don't need to uh you get to a",
    "start": "3024240",
    "end": "3030480"
  },
  {
    "text": "lot of these cases where you're having state to synchronize these different event streams and it makes error having a lot easier",
    "start": "3030480",
    "end": "3037839"
  },
  {
    "text": "it doesn't necessarily completely eliminate but it reduces a lot of the race conditions and memory leaks",
    "start": "3037839",
    "end": "3045359"
  },
  {
    "text": "and and problems just happen because one of the things about observers is",
    "start": "3045359",
    "end": "3052799"
  },
  {
    "text": "you know they make your program they they they reduce coupling you have maybe say abstract",
    "start": "3053200",
    "end": "3058480"
  },
  {
    "text": "coupling and they make your programming more abstract which is both a benefit and it's a",
    "start": "3058480",
    "end": "3063680"
  },
  {
    "text": "liability because when things go wrong it's harder to figure out what's causing what and",
    "start": "3063680",
    "end": "3070160"
  },
  {
    "text": "and trying to debug complex observer networks can be pretty painful so so having a mechanism",
    "start": "3070160",
    "end": "3079200"
  },
  {
    "text": "to simplify that is a big advantage okay so a secret of streams is a couple of extra operations we're",
    "start": "3079200",
    "end": "3086000"
  },
  {
    "text": "going to have concat all",
    "start": "3086000",
    "end": "3091039"
  },
  {
    "text": "takes uh takes a list of a list of lists",
    "start": "3092640",
    "end": "3098079"
  },
  {
    "text": "and returns a single list by basically concatenating them so this is important when you have",
    "start": "3098079",
    "end": "3104400"
  },
  {
    "text": "a uh we're going to be applying a map",
    "start": "3104400",
    "end": "3111040"
  },
  {
    "text": "to to some collection getting back collections and so you get a collection of collections and it's going to to flatten",
    "start": "3111040",
    "end": "3118559"
  },
  {
    "text": "them all and actually flattened was what was called the old list of days i remember",
    "start": "3118559",
    "end": "3124400"
  },
  {
    "text": "correctly um and this take until something interesting i've never seen anything like it before because it's",
    "start": "3124400",
    "end": "3129760"
  },
  {
    "text": "non-deterministic you have two streams one stream is sort of your mainstream where you you expect to be getting lots",
    "start": "3129760",
    "end": "3136400"
  },
  {
    "text": "of events the other one is sort of an error stream and maybe something will happen so you just basically keep",
    "start": "3136400",
    "end": "3141680"
  },
  {
    "text": "reading events from here until an event happens here then you stop so it's non-deterministic because",
    "start": "3141680",
    "end": "3147040"
  },
  {
    "text": "you don't know how long it's going to be before you get an event over here so this is sort of cool because",
    "start": "3147040",
    "end": "3153839"
  },
  {
    "text": "typically these are all very deterministic and they they're injecting some non-determination for async you need to",
    "start": "3153839",
    "end": "3159760"
  },
  {
    "text": "be able to handle asynchrony you've got to be able to handle the non-deterministic",
    "start": "3159760",
    "end": "3164800"
  },
  {
    "text": "so here is a little piece of code from there and there's a a function this get",
    "start": "3164800",
    "end": "3171599"
  },
  {
    "text": "element drags is a function which is uh",
    "start": "3171599",
    "end": "3177040"
  },
  {
    "text": "going to give you a sequence of points that you're dragging so you're dragging the mouse it's going to give you that",
    "start": "3177040",
    "end": "3183599"
  },
  {
    "text": "sequence of points that you drive your drag your mouse along so the way it works is it's given",
    "start": "3183599",
    "end": "3189680"
  },
  {
    "text": "some image or element and we're going to get the mouse down stream",
    "start": "3189680",
    "end": "3195119"
  },
  {
    "text": "from the element so this is going to be sort of the sequence of mouse down events and then we're going to",
    "start": "3195119",
    "end": "3203040"
  },
  {
    "text": "map a particular mouse down event and it doesn't actually use that just",
    "start": "3203040",
    "end": "3208800"
  },
  {
    "text": "for every mouse down we're going to hit the stream of mouse moves we're going to take until there's a mouse up",
    "start": "3208800",
    "end": "3214880"
  },
  {
    "text": "and that's going to return now all the points between mouse down and mouse up and so we're",
    "start": "3214880",
    "end": "3220640"
  },
  {
    "text": "going to get that collection and then we get a whole bunch of these collections because of the map and so we can cut all to get the total",
    "start": "3220640",
    "end": "3228400"
  },
  {
    "text": "list and we're going to use this function uh in this",
    "start": "3228400",
    "end": "3234720"
  },
  {
    "text": "over here and what we're doing given an image we do this get element drags on",
    "start": "3234800",
    "end": "3240800"
  },
  {
    "text": "the image and that gives us that whole list of points in the image so now we're going to iterate over those points and for each position",
    "start": "3240800",
    "end": "3248400"
  },
  {
    "text": "we're going to basically set the position of the image as that point",
    "start": "3248400",
    "end": "3253760"
  },
  {
    "text": "and so that's going to you know as you drag the mouse it's going to move the image along it's pretty",
    "start": "3253760",
    "end": "3261359"
  },
  {
    "text": "pretty compact and sort of cool of course this isn't really that complicated compared to stuff you want to do but it's all i",
    "start": "3261359",
    "end": "3268319"
  },
  {
    "text": "could put on the screen and i didn't write it i copied it",
    "start": "3268319",
    "end": "3273839"
  },
  {
    "start": "3270000",
    "end": "3327000"
  },
  {
    "text": "because it was cool okay so if you are interested in finding this you should look for",
    "start": "3273839",
    "end": "3279520"
  },
  {
    "text": "reactive extensions that's the that's the search term uh and there are a bunch of",
    "start": "3279520",
    "end": "3285040"
  },
  {
    "text": "these different libraries uh i think it's like four or five years ago is when it first",
    "start": "3285040",
    "end": "3290960"
  },
  {
    "text": "first came out and people haven't used it and there's this really great talk on youtube",
    "start": "3290960",
    "end": "3296240"
  },
  {
    "text": "uh half an hour very very very good uh clever talk uh you can google for netflix javascript",
    "start": "3296240",
    "end": "3304079"
  },
  {
    "text": "talk spacing javascript with reactive extensions uh if you don't want to very quickly write down that url",
    "start": "3304079",
    "end": "3312640"
  },
  {
    "text": "but there's a bunch let's say a bunch of different languages that that people have made libraries in for",
    "start": "3315440",
    "end": "3320720"
  },
  {
    "text": "this it's a cool extension of observers",
    "start": "3320720",
    "end": "3326640"
  },
  {
    "text": "okay so if we look at we look at the",
    "start": "3326640",
    "end": "3333599"
  },
  {
    "text": "the sort of different topics that i've raised and we go back to this issue of",
    "start": "3333599",
    "end": "3341520"
  },
  {
    "text": "um well maybe times have changed and it was pretty good at the time but but",
    "start": "3342079",
    "end": "3347440"
  },
  {
    "text": "you know it's it's new things have happened or it wasn't that we just",
    "start": "3347440",
    "end": "3352559"
  },
  {
    "text": "missed stuff that should have been known to us and of course the thing to remember is it wasn't just us to missed",
    "start": "3352559",
    "end": "3359520"
  },
  {
    "text": "it we had we had several hundred people reading our book in a mailing list this is this is",
    "start": "3359520",
    "end": "3364960"
  },
  {
    "text": "back before the world wide web so that was how long ago it was the world wide web had not",
    "start": "3364960",
    "end": "3370799"
  },
  {
    "text": "uh really come into existence and we had an ftp server and a mailing",
    "start": "3370799",
    "end": "3377839"
  },
  {
    "text": "list so people could join our mailing list we had several hundred people on our mailing list and every couple of weeks",
    "start": "3377839",
    "end": "3383520"
  },
  {
    "text": "we put a new pattern out there on our ftp server and then people would all discuss we got a lot of feedback from people um",
    "start": "3383520",
    "end": "3390559"
  },
  {
    "text": "even though back then i calculated only 10 of the people on our mailing list ever posted anything right",
    "start": "3390559",
    "end": "3396960"
  },
  {
    "text": "same as today but but we did get lots and lots of comments and and people helped improve the book a lot",
    "start": "3396960",
    "end": "3405200"
  },
  {
    "text": "by by doing that so uh you know it wasn't like no one had thought about that but still",
    "start": "3405200",
    "end": "3411440"
  },
  {
    "text": "we miss things and when you think of this listener",
    "start": "3411440",
    "end": "3418000"
  },
  {
    "text": "i mean one of the things is it was true that when you looked at these different c plus libraries and you looked at how",
    "start": "3418000",
    "end": "3424960"
  },
  {
    "text": "small talk did things they both did them the same way so language like java which is like",
    "start": "3424960",
    "end": "3431680"
  },
  {
    "text": "halfway in between small talk and c plus plus if it was good enough for c plus plus good enough for small talk",
    "start": "3431680",
    "end": "3437520"
  },
  {
    "text": "it was bound to be good enough for java right you know but it wasn't why",
    "start": "3437520",
    "end": "3444799"
  },
  {
    "text": "why was that well i actually think part of it was small talk uh was dynamically tight",
    "start": "3444799",
    "end": "3451520"
  },
  {
    "text": "so it was not a big issue as as with java and c plus",
    "start": "3451520",
    "end": "3459200"
  },
  {
    "text": "pete nobody had a version of a server that was going to get reused across multiple frameworks because everybody in",
    "start": "3459200",
    "end": "3467040"
  },
  {
    "text": "c plus plus like make their own framework they did their own version of observer so in fact there really were",
    "start": "3467040",
    "end": "3473359"
  },
  {
    "text": "hundreds of versions of observer in c plus plus they just weren't particularly reusable they were all these these specialized ones",
    "start": "3473359",
    "end": "3479440"
  },
  {
    "text": "so so the c plus people didn't really have the reuse which would have forced this and java",
    "start": "3479440",
    "end": "3485920"
  },
  {
    "text": "both had the static type checking and then it really needed that reuse and that was what forced showing that",
    "start": "3485920",
    "end": "3494079"
  },
  {
    "text": "that that old observer interface wasn't really good enough this again this is my guess this is my",
    "start": "3494079",
    "end": "3501200"
  },
  {
    "text": "who knows for sure but that's my interpretation of why we we missed that and and there were other",
    "start": "3501200",
    "end": "3507760"
  },
  {
    "text": "languages like we had worked in eiffel where we had worked in there's other languages out there that",
    "start": "3507760",
    "end": "3513040"
  },
  {
    "text": "had this stuff and i have never actually used them enough to know but i bet that there were several of",
    "start": "3513040",
    "end": "3519280"
  },
  {
    "text": "them that were doing things like this because you just can't really get uh you know",
    "start": "3519280",
    "end": "3524799"
  },
  {
    "text": "get the large scale reuse with static",
    "start": "3524799",
    "end": "3530160"
  },
  {
    "text": "type checking and events as arguments i had seen",
    "start": "3530160",
    "end": "3536799"
  },
  {
    "text": "in small talk people who would pass events as are you that make event objects so it wasn't necessarily",
    "start": "3536799",
    "end": "3543760"
  },
  {
    "text": "the standard but it was it was not rare either and",
    "start": "3543760",
    "end": "3549359"
  },
  {
    "text": "you know we i believe that um i believe that in that gap that they did",
    "start": "3549359",
    "end": "3554880"
  },
  {
    "text": "that so we we could have we could have picked up on that but but we missed that um the data binding",
    "start": "3554880",
    "end": "3563200"
  },
  {
    "text": "again visual works was one particular small talk system and visual works didn't ever use the",
    "start": "3563200",
    "end": "3569760"
  },
  {
    "text": "word data binding but it definitely had this notion of reusable had widgets and",
    "start": "3569760",
    "end": "3577680"
  },
  {
    "text": "and value holders and the value holders were these little tiny subjects that you could depend on and so",
    "start": "3577680",
    "end": "3584400"
  },
  {
    "text": "you'd build your model with a bunch of different value holders for different types kind of values and then you hooked the right header a",
    "start": "3584400",
    "end": "3590720"
  },
  {
    "text": "gui builder that would let you hook the right type of widgets to it and and again we could have talked about how if",
    "start": "3590720",
    "end": "3598559"
  },
  {
    "text": "you uh made your subjects out of those smaller subjects you could get this advantage you wouldn't have to",
    "start": "3598559",
    "end": "3604880"
  },
  {
    "text": "write all those interfaces but but we didn't talk about that we didn't we didn't have anything about that",
    "start": "3604880",
    "end": "3612000"
  },
  {
    "text": "and and again well the thing about me this use of how one pattern uses another",
    "start": "3613359",
    "end": "3620160"
  },
  {
    "text": "uh six months before the book",
    "start": "3620160",
    "end": "3626559"
  },
  {
    "text": "hit the streets we didn't have anything about how one pattern used another that diagram in the back with all the",
    "start": "3626559",
    "end": "3632559"
  },
  {
    "text": "patterns pointing to each other we didn't and we started oh we really ought to talk about this this is actually something that comes out of the",
    "start": "3632559",
    "end": "3639440"
  },
  {
    "text": "you might say pattern theory the people who talk about people at plop who are very concerned",
    "start": "3639440",
    "end": "3645520"
  },
  {
    "text": "with collections of patterns and how the patterns are related to each other and we knew this and we",
    "start": "3645520",
    "end": "3650799"
  },
  {
    "text": "felt guilty that we weren't doing that with our patterns so you know near the end of the book after we got everything else in the shape okay",
    "start": "3650799",
    "end": "3657040"
  },
  {
    "text": "let's figure out how these patterns are related to each other and it was done pretty fast and and and so naturally you all know",
    "start": "3657040",
    "end": "3664079"
  },
  {
    "text": "the features you had last year program are most likely to have bugs in them so it's not not too surprising that uh",
    "start": "3664079",
    "end": "3670480"
  },
  {
    "text": "that works with books in the same way um on the other hand uh things like this",
    "start": "3670480",
    "end": "3678240"
  },
  {
    "text": "last reactive extensions i mean it was only invented five years ago so you know how can we have been expected to have that",
    "start": "3678240",
    "end": "3686000"
  },
  {
    "text": "but on the other hand like i said uh the fact that iterators tend to be",
    "start": "3686000",
    "end": "3691520"
  },
  {
    "text": "related to these other kind of functions this has been around since the 60s we do it we just didn't want to talk",
    "start": "3691520",
    "end": "3698480"
  },
  {
    "text": "about it because i don't know seems like it was sort of a complicated thing that was a little bit esoteric",
    "start": "3698480",
    "end": "3704160"
  },
  {
    "text": "and we were trying to avoid you know talking about the stuff you learn in grad school and",
    "start": "3704160",
    "end": "3710079"
  },
  {
    "text": "focus on you know practical programming things but this actually is very practical programming",
    "start": "3710079",
    "end": "3715440"
  },
  {
    "text": "so that was something that we probably should have talked about anyway that might be it might be too",
    "start": "3715440",
    "end": "3720480"
  },
  {
    "text": "hard on us but uh we always had high standards when we were writing it we we",
    "start": "3720480",
    "end": "3725680"
  },
  {
    "text": "and and these are clearly things that would have made the book a lot better if we had talked about them",
    "start": "3725680",
    "end": "3732000"
  },
  {
    "text": "okay so that is the end of what i have and i think it's supposed to be about an hour and then have plenty of time for",
    "start": "3732559",
    "end": "3738319"
  },
  {
    "text": "questions so i'm happy to take questions",
    "start": "3738319",
    "end": "3743760"
  },
  {
    "text": "and i have a",
    "start": "3743760",
    "end": "3750160"
  },
  {
    "text": "my email address for anyone who wants to contact me um but i'll take questions",
    "start": "3750160",
    "end": "3760240"
  },
  {
    "text": "sure i'll ask a question okay uh so the quintessential example i remember about the book and the how the patterns fit together is the",
    "start": "3761599",
    "end": "3767839"
  },
  {
    "text": "undo redo framework right that's memento and mediator and what else well actually command is the main one",
    "start": "3767839",
    "end": "3774000"
  },
  {
    "text": "we're doing undo the command pattern is the first one this is when i when i ask questions on",
    "start": "3774000",
    "end": "3779599"
  },
  {
    "text": "exams about patterns people often do",
    "start": "3779599",
    "end": "3785119"
  },
  {
    "text": "memento instead of of command because there is this example in",
    "start": "3785599",
    "end": "3792720"
  },
  {
    "text": "the book of some complicated situation where you where you need something like momento but",
    "start": "3792720",
    "end": "3798160"
  },
  {
    "text": "but most of the time that is the expensive way of doing it and it's the the command pattern",
    "start": "3798160",
    "end": "3806960"
  },
  {
    "text": "actually look at it i learned this from mac app that cat makes heavy use of command we started doing it in small",
    "start": "3806960",
    "end": "3812079"
  },
  {
    "text": "talk it wasn't a tradition in small talk at all but we started doing it in small talk and it",
    "start": "3812079",
    "end": "3817440"
  },
  {
    "text": "it works amazingly well so one of the things when i was in grad school we had a seminar a group of us",
    "start": "3817440",
    "end": "3825119"
  },
  {
    "text": "had a seminar and for one semester we were reading a whole bunch of papers about reverse execution",
    "start": "3825119",
    "end": "3831039"
  },
  {
    "text": "now you take a program and figure out how you can run it back it's a program that goes from a to b",
    "start": "3831039",
    "end": "3836240"
  },
  {
    "text": "and figure out how to go from b to a and you know it's it's in general impossible it's just you you",
    "start": "3836240",
    "end": "3842000"
  },
  {
    "text": "just can't do it and we we are reading these papers and struggling for a while and said you know this is really not a worthwhile thing to work on",
    "start": "3842000",
    "end": "3848480"
  },
  {
    "text": "because it's just so impossible and sure they're going to be special cases where you can do it",
    "start": "3848480",
    "end": "3853599"
  },
  {
    "text": "but but that was our conclusion after spending a semester reading these papers was we have better",
    "start": "3853599",
    "end": "3859119"
  },
  {
    "text": "things to waste our time on and i was really amazed working with",
    "start": "3859119",
    "end": "3864720"
  },
  {
    "text": "matt capp about how even though in general it's impossible to undo computation that pattern because what",
    "start": "3864720",
    "end": "3871440"
  },
  {
    "text": "you do is you save it up and it always changes what you're doing you because you you save in your command",
    "start": "3871440",
    "end": "3877839"
  },
  {
    "text": "enough information that you can go backwards and it is a pretty general mechanism and",
    "start": "3877839",
    "end": "3883200"
  },
  {
    "text": "once you practice it it's really not all that that hard and then it has other benefits because",
    "start": "3883200",
    "end": "3889039"
  },
  {
    "text": "you start putting you start putting uh",
    "start": "3889039",
    "end": "3895599"
  },
  {
    "text": "you make your menus out of commands and you put commands in in your your key bindings so you can use",
    "start": "3895599",
    "end": "3900880"
  },
  {
    "text": "commands in a variety of ways so one of the things people will say about the book being a collection of c plus hacks is that if you had closures",
    "start": "3900880",
    "end": "3908000"
  },
  {
    "text": "in your language you wouldn't need something like command because if you want to pass an operation in",
    "start": "3908000",
    "end": "3913200"
  },
  {
    "text": "just pass the closure in and again in small talk we often just pass the closure in the",
    "start": "3913200",
    "end": "3918480"
  },
  {
    "text": "small talk this is i think one reason why why undo was not as prevalent in small talk was people didn't use",
    "start": "3918480",
    "end": "3925119"
  },
  {
    "text": "command objects nearly as much and closures are wonderful but they don't",
    "start": "3925119",
    "end": "3930559"
  },
  {
    "text": "you know they don't remember enough done you can't undo a closure any more than do a regular subroutine call",
    "start": "3930559",
    "end": "3935760"
  },
  {
    "text": "so if you're just sticking and saying well closures do everything in the world and now that i have closures",
    "start": "3935760",
    "end": "3941520"
  },
  {
    "text": "i don't ever need the command pattern but you you forget you know you you lose this ability to",
    "start": "3941520",
    "end": "3947599"
  },
  {
    "text": "implement undo it and i mean closures are wonderful and",
    "start": "3947599",
    "end": "3953920"
  },
  {
    "text": "and i don't want to program in languages that have them but the patterns and it changes it changes",
    "start": "3953920",
    "end": "3959359"
  },
  {
    "text": "all your patterns a little bit in terms of how frequently you use them and and things like uh like strategy a",
    "start": "3959359",
    "end": "3965599"
  },
  {
    "text": "lot of times you just pass into closure you don't need to have a real object there but there are still times when you do",
    "start": "3965599",
    "end": "3971520"
  },
  {
    "text": "want to have those real objects those patterns are still useful even when you have closures in",
    "start": "3971520",
    "end": "3976880"
  },
  {
    "text": "your language",
    "start": "3976880",
    "end": "3979838"
  },
  {
    "text": "any more questions yeah do you think it's time",
    "start": "3984880",
    "end": "3992079"
  },
  {
    "text": "for you to write a new revision oh about 10 years ago it was time",
    "start": "3992079",
    "end": "3997359"
  },
  {
    "text": "because the reason i'm asking is all the new graduates are not even referring to did straight go to",
    "start": "3997359",
    "end": "4002960"
  },
  {
    "text": "a simple programming languages that are already built in without understanding where it originated from",
    "start": "4002960",
    "end": "4008400"
  },
  {
    "text": "whether actually that's not entirely true there are other books out there like heads first uh",
    "start": "4008400",
    "end": "4013760"
  },
  {
    "text": "design patterns that do a good job of explaining so it is true that that fewer people are reading design",
    "start": "4013760",
    "end": "4021359"
  },
  {
    "text": "you know the official design patterns and as somebody who gets royalties off of it you know i",
    "start": "4021359",
    "end": "4026720"
  },
  {
    "text": "wish we could have something out there to do and of course my biggest concern i mean the serious concern",
    "start": "4026720",
    "end": "4032240"
  },
  {
    "text": "is just that there's so much we should have said that we didn't and uh and and when you look at",
    "start": "4032240",
    "end": "4038160"
  },
  {
    "text": "something like head's first design patterns which is which is very good and it actually says some good things we didn't say",
    "start": "4038160",
    "end": "4043280"
  },
  {
    "text": "but there's an awful lot of stuff that could be said that they're not not saying either and i think we sort of need to raise our",
    "start": "4043280",
    "end": "4049839"
  },
  {
    "text": "you know sort of the base point understanding of these patterns to to a new level so i",
    "start": "4049839",
    "end": "4054880"
  },
  {
    "text": "am very interested in i mean i'm part of giving the talk is motivating me to",
    "start": "4054880",
    "end": "4061520"
  },
  {
    "text": "you know to write more stuff and i have started you know writing new things and one of the reasons i want",
    "start": "4061520",
    "end": "4067520"
  },
  {
    "text": "to put this up here is looking for people who would like to you know be reviewers and",
    "start": "4067520",
    "end": "4075200"
  },
  {
    "text": "you'll be be working like one of the things i have thought of doing is is uh getting together with",
    "start": "4075200",
    "end": "4081520"
  },
  {
    "text": "with people um to have maybe workshops looking at",
    "start": "4081520",
    "end": "4088079"
  },
  {
    "text": "particular patterns and uh you know looking how different libraries use them and looking to see",
    "start": "4088079",
    "end": "4094880"
  },
  {
    "text": "how the descriptions need to be improved and if there's somebody i figure there's",
    "start": "4094880",
    "end": "4099920"
  },
  {
    "text": "probably a few people here who'd be interested in something like that send us send me email and i mean what",
    "start": "4099920",
    "end": "4105040"
  },
  {
    "text": "i'm thinking of is coming up here and doing evening events or saturday events",
    "start": "4105040",
    "end": "4112000"
  },
  {
    "text": "or something like that and so people could be interested in that should send me email",
    "start": "4112000",
    "end": "4117120"
  },
  {
    "text": "so that ties in very well with your question yes with kind of the popularity of multi-core",
    "start": "4117120",
    "end": "4122318"
  },
  {
    "text": "systems and distributed computing how does that impact you know what patterns would be an emphasis on on say",
    "start": "4122319",
    "end": "4128960"
  },
  {
    "text": "a new book sure well so it would not change the paragraph book because um even when we wrote the book",
    "start": "4128960",
    "end": "4136960"
  },
  {
    "text": "when we wrote the book uh there was a grad student student out in california who's the only",
    "start": "4136960",
    "end": "4142798"
  },
  {
    "text": "person who actually reviewed it twice you know went through it and marked it up and gave it twice and",
    "start": "4142799",
    "end": "4147920"
  },
  {
    "text": "he told us i remember the first time he did it he criticized it because these are all just gui patterns",
    "start": "4147920",
    "end": "4154000"
  },
  {
    "text": "and that was basically because that was what our examples were and we convinced that by the second time he read the book",
    "start": "4154000",
    "end": "4159600"
  },
  {
    "text": "he agreed that they weren't just just gui patterns but what he said was you guys are",
    "start": "4159600",
    "end": "4165120"
  },
  {
    "text": "missing a lot of really cool patterns about distributed programming and real time programming and and",
    "start": "4165120",
    "end": "4172880"
  },
  {
    "text": "i remember that we you know wrote him back and said you're right but we don't know those patterns you",
    "start": "4172880",
    "end": "4178238"
  },
  {
    "text": "seem to know a lot more about them maybe you should write a book well that was doug schmidt you know so",
    "start": "4178239",
    "end": "4183600"
  },
  {
    "text": "so he he didn't he did end up writing books on that and and that's um there's been a lot of people working",
    "start": "4183600",
    "end": "4190000"
  },
  {
    "text": "on parallel programming patterns in fact i've worked on them some and uh one of the one of the i mean if i",
    "start": "4190000",
    "end": "4196800"
  },
  {
    "text": "i could talk about parallel programming patterns one of the uh things that people don't often realize",
    "start": "4196800",
    "end": "4202080"
  },
  {
    "text": "about parallel programming is that these kind of collection operators actually are pretty good for parallel programming in particular",
    "start": "4202080",
    "end": "4208719"
  },
  {
    "text": "for you know gpu programming and and stream systems and that's really what they are",
    "start": "4208719",
    "end": "4213920"
  },
  {
    "text": "and that when you learn how to program using map and filter and these other type of things and it takes",
    "start": "4213920",
    "end": "4219679"
  },
  {
    "text": "a little bit of adjustment we're also used to writing loops we write our loops explicitly and when",
    "start": "4219679",
    "end": "4224800"
  },
  {
    "text": "you when you force yourself to learn to program this way you quit writing loops you just everything just becomes one function",
    "start": "4224800",
    "end": "4232239"
  },
  {
    "text": "applied to another function and that it's",
    "start": "4232239",
    "end": "4239600"
  },
  {
    "text": "that is parallel with the right hardware that just runs in parallel and so so it doesn't capture",
    "start": "4239600",
    "end": "4247600"
  },
  {
    "text": "a lot of parallelism there's a lot of things you can't do with it so it's a certain class and one of the",
    "start": "4247600",
    "end": "4253440"
  },
  {
    "text": "other things i learned when you are doing apparel programming is that there are these different levels",
    "start": "4253440",
    "end": "4258960"
  },
  {
    "text": "of parallelism different styles so there is uh is it deterministic versus non-deterministic",
    "start": "4258960",
    "end": "4264880"
  },
  {
    "text": "is it um is it because you need non-determinism if",
    "start": "4264880",
    "end": "4271040"
  },
  {
    "text": "you're dealing with events from the outside world dealing with io and so on but if you've got some",
    "start": "4271040",
    "end": "4277120"
  },
  {
    "text": "mathematical algorithms you're trying to improve you you can stick with a more",
    "start": "4277120",
    "end": "4283360"
  },
  {
    "text": "deterministic style it's a lot simpler eliminates certain kind of bugs",
    "start": "4283360",
    "end": "4289199"
  },
  {
    "text": "and so there's these various styles of parallel programming and and that's part of what",
    "start": "4289199",
    "end": "4295280"
  },
  {
    "text": "makes it complicated is there's no not one way of doing it",
    "start": "4295280",
    "end": "4300560"
  },
  {
    "text": "so i'm i like both this sort of a stream oriented uh you know",
    "start": "4300560",
    "end": "4307440"
  },
  {
    "text": "very functional view and also the message passing you sort of active sending messages to each other that's",
    "start": "4307440",
    "end": "4313600"
  },
  {
    "text": "another a completely different style and and both of them are good making they sort of fit",
    "start": "4313600",
    "end": "4319040"
  },
  {
    "text": "together um anyway i'm not going to take anything about if i if we did ever get",
    "start": "4319040",
    "end": "4324960"
  },
  {
    "text": "a new version of design patterns out there undoubtedly be a few new patterns in it but it's mostly going",
    "start": "4324960",
    "end": "4330400"
  },
  {
    "text": "to be updated understanding of these patterns",
    "start": "4330400",
    "end": "4336080"
  },
  {
    "text": "that's our plan whether we will achieve it i've been telling my wife for quite a few years that we were going to do it so",
    "start": "4336080",
    "end": "4344158"
  },
  {
    "text": "yeah so to what extent do you expect the uh evolution in in the languages people",
    "start": "4344320",
    "end": "4349920"
  },
  {
    "text": "actually use to uh have an impact on oh i expect i expected i expected to have an impact",
    "start": "4349920",
    "end": "4357520"
  },
  {
    "text": "now the ear question is how will it have an impact well i don't know how has i why would i be any better at predicting the future than anybody else well i mean",
    "start": "4357520",
    "end": "4364239"
  },
  {
    "text": "the recent let's say 20 years since the since the last book you know so you're using guru there are",
    "start": "4364239",
    "end": "4370239"
  },
  {
    "text": "people who use scotland yeah so uh so i mean the functional languages have different sets of",
    "start": "4370239",
    "end": "4375360"
  },
  {
    "text": "patterns so that's one of the things that sort of annoyed me is that none of the functional programming people have",
    "start": "4375360",
    "end": "4380960"
  },
  {
    "text": "written pattern balls because they really ought to uh and they are it's a different style of programming",
    "start": "4380960",
    "end": "4386800"
  },
  {
    "text": "and yeah it requires emits a different set of patterns and so when you start trying to mix the",
    "start": "4386800",
    "end": "4392560"
  },
  {
    "text": "two then you that is going to change your balance of things",
    "start": "4392560",
    "end": "4398480"
  },
  {
    "text": "i mean one of the things about small talk is that in large small talk systems there's",
    "start": "4398480",
    "end": "4404560"
  },
  {
    "text": "often fairly big pieces of it which are purely functional and there's sort of this state-oriented thing that plays with the",
    "start": "4404560",
    "end": "4411040"
  },
  {
    "text": "function oriented thing and there's that sort of architecture and i haven't seen that as much out in",
    "start": "4411040",
    "end": "4417840"
  },
  {
    "text": "the you know the the java world but as as as we get more powerful functional languages then",
    "start": "4417840",
    "end": "4423440"
  },
  {
    "text": "they're probably going to be more of that but i don't know really how to characterize that",
    "start": "4423440",
    "end": "4429840"
  },
  {
    "text": "so one of the changes that happened the design patterns book has the divides",
    "start": "4430159",
    "end": "4436320"
  },
  {
    "text": "patterns up into three sections there's a creational patterns and then there's the behavioral and",
    "start": "4436320",
    "end": "4442400"
  },
  {
    "text": "structural and behavioral and structural are sort of funny categories you can often",
    "start": "4442400",
    "end": "4449199"
  },
  {
    "text": "argue with some of the patterns you can argue that they're in either one of them it's not really a clear distinction",
    "start": "4449199",
    "end": "4454400"
  },
  {
    "text": "between behavioral and structural the creation on the other hand are pretty well defined it's obvious that those things",
    "start": "4454400",
    "end": "4459920"
  },
  {
    "text": "are creational and they're not behavioral and structural the creational patterns have actually",
    "start": "4459920",
    "end": "4465440"
  },
  {
    "text": "took a pretty big hit because you have techniques like dependency injection have eliminated the need for a lot of",
    "start": "4465440",
    "end": "4472400"
  },
  {
    "text": "those creational patterns at least don't see them nearly as often as you used to so there's a case where",
    "start": "4472400",
    "end": "4478320"
  },
  {
    "text": "a sort of a new design technique has come along and has had an impact it's it's sort of",
    "start": "4478320",
    "end": "4483600"
  },
  {
    "text": "replaced some of these other patterns um and that's not really i mean a language thing",
    "start": "4483600",
    "end": "4489600"
  },
  {
    "text": "uh as a sort of a design style thing and then a lot and",
    "start": "4489600",
    "end": "4494719"
  },
  {
    "text": "framework supported and so on but but it is you know time passes and things",
    "start": "4494719",
    "end": "4499920"
  },
  {
    "text": "change and so you know that's that's a good reason to update the book you know i think the",
    "start": "4499920",
    "end": "4505440"
  },
  {
    "text": "unfortunate reality too is that people you take a guy who programs and list or scheme for instance and then put him in you",
    "start": "4505440",
    "end": "4512560"
  },
  {
    "text": "know the strongly typed uh top-down modular you know object-oriented world of c",
    "start": "4512560",
    "end": "4517760"
  },
  {
    "text": "plus plus or c-sharp or java or something and he's going to write everything recursive you know everything's going to be like",
    "start": "4517760",
    "end": "4523760"
  },
  {
    "text": "you said the loops will be gone and he's going to be up against the jury of his peers for instance you know and i think that's that's kind of a",
    "start": "4523760",
    "end": "4530480"
  },
  {
    "text": "that's kind of a that's kind of a more of a real world problem for developers as they transition from languages sure",
    "start": "4530480",
    "end": "4539600"
  },
  {
    "text": "every language has this different style and the first language you learn this is",
    "start": "4539600",
    "end": "4546080"
  },
  {
    "text": "wonderful and the second language you learn you're always trying to redo the first one in your second language but",
    "start": "4546080",
    "end": "4551920"
  },
  {
    "text": "actually about your 17th language you kind of have given up on that",
    "start": "4551920",
    "end": "4557678"
  },
  {
    "text": "and i mean part of the problem is people just haven't done it enough they haven't had this happen to them enough times",
    "start": "4558159",
    "end": "4563280"
  },
  {
    "text": "yeah and you sort of learn so so uh what are one of my stories is",
    "start": "4563280",
    "end": "4569679"
  },
  {
    "text": "that i was teaching uh intra the only and i've never taught object programming to newbies it's sort",
    "start": "4569679",
    "end": "4576480"
  },
  {
    "text": "of funny i teach to people who know how to program already and then i've taught an intro",
    "start": "4576480",
    "end": "4582320"
  },
  {
    "text": "programming course to to scientists and engineers and we use",
    "start": "4582320",
    "end": "4591600"
  },
  {
    "text": "portrait scientists and engineers use at least back in the 90s uh that was probably i think when i was",
    "start": "4591600",
    "end": "4597360"
  },
  {
    "text": "teaching so anyway i teach this course it was in fortran and i i've done fortran uh in college",
    "start": "4597360",
    "end": "4603440"
  },
  {
    "text": "you know so it wasn't a big deal and i had to figure out how to make fortran interesting and all we had all these",
    "start": "4603440",
    "end": "4609040"
  },
  {
    "text": "very engineering oriented stuff that basically high school physics uh probably everybody had college",
    "start": "4609040",
    "end": "4616480"
  },
  {
    "text": "physics a little bit of calculus and and that was all the homeworks were that way and i remember one",
    "start": "4616480",
    "end": "4622159"
  },
  {
    "text": "year everything had to do with uh with shooting missiles and going into space",
    "start": "4622159",
    "end": "4627840"
  },
  {
    "text": "and it was just all the homeworks were like that and engineers are all they're smart",
    "start": "4627840",
    "end": "4632960"
  },
  {
    "text": "people and they picked up and they all thought that programming would be good for them and interesting so they",
    "start": "4632960",
    "end": "4638000"
  },
  {
    "text": "were all happy with the class we also had another course like this for business majors which i stayed with they all hated the",
    "start": "4638000",
    "end": "4643600"
  },
  {
    "text": "course and you get really bad reviews when you teach that course so i stayed awake but the engine is",
    "start": "4643600",
    "end": "4649040"
  },
  {
    "text": "teaching this workforce and the the engineering college",
    "start": "4649040",
    "end": "4655120"
  },
  {
    "text": "was sort of in charge of this it was a service course by the cs department engineering college and the engineering college voted to change the language",
    "start": "4655120",
    "end": "4661760"
  },
  {
    "text": "there's a committee and they said let's have this new language which was mathematical",
    "start": "4661760",
    "end": "4666960"
  },
  {
    "text": "now i didn't know about this i was going to teach it in the spring i learned about it in october and i",
    "start": "4666960",
    "end": "4674000"
  },
  {
    "text": "learned about it by talking to some student who is in the class who is complaining about this bizarre class where none of the tas knew the",
    "start": "4674000",
    "end": "4680800"
  },
  {
    "text": "programming language and everything was just didn't work very well and it actually they they had the guy who's",
    "start": "4680800",
    "end": "4687840"
  },
  {
    "text": "teaching the course had spent the summer redoing all the notes from mathematica jumped he taught the course a lot in",
    "start": "4687840",
    "end": "4694560"
  },
  {
    "text": "fortran but he was actually a graphics guy a pretty good teacher actually but not a programming language guy at all",
    "start": "4694560",
    "end": "4700560"
  },
  {
    "text": "he probably didn't know more than a few programming languages and then they jumped into the semester with",
    "start": "4700560",
    "end": "4706880"
  },
  {
    "text": "no training of the tas or like 400 people in the class bad bad scene so uh when when i did it i",
    "start": "4706880",
    "end": "4714400"
  },
  {
    "text": "said well i know something i've heard about mathematica yes it's one of these functional programming languages right how many people have",
    "start": "4714400",
    "end": "4719520"
  },
  {
    "text": "actually used mathematica for a long time it's not really a functional programming language it's not like scheme",
    "start": "4719520",
    "end": "4725360"
  },
  {
    "text": "and and so i i got the book i got the system i started doing stuff and it's like i'm not sure what is a really good",
    "start": "4725360",
    "end": "4731679"
  },
  {
    "text": "mathematica program like i found an expert on chem so i would i would do my",
    "start": "4731679",
    "end": "4736800"
  },
  {
    "text": "all the lecture notes i would go to him i would have him critique everything because one of the things is what's the sweet spot for mathematica",
    "start": "4736800",
    "end": "4744080"
  },
  {
    "text": "you don't want the sort of programs that you would program in fortran are primitives in",
    "start": "4744080",
    "end": "4750880"
  },
  {
    "text": "mathematica you don't want to have people you have to write completely different programs you would write completely different",
    "start": "4750880",
    "end": "4756560"
  },
  {
    "text": "programs in mathematica than you would in in fortran but it ended up being",
    "start": "4756560",
    "end": "4761920"
  },
  {
    "text": "pretty successful but again my perspective was of somebody who knew i'm an uncountable number i mean",
    "start": "4761920",
    "end": "4767679"
  },
  {
    "text": "i i can't count how many languages i know and program lots of different styles and i can remember taking a functional",
    "start": "4767679",
    "end": "4774239"
  },
  {
    "text": "programming language uh learning my functional programs in grad school",
    "start": "4774239",
    "end": "4779520"
  },
  {
    "text": "and just being shocked just i finally knew how to program and i i don't know how to program i can't get this thing to",
    "start": "4779520",
    "end": "4785199"
  },
  {
    "text": "work and so when object programming came along and people said what's a paradigm shift i sort of expected it would be a bit of",
    "start": "4785199",
    "end": "4791840"
  },
  {
    "text": "a struggle and it was a bit of a struggle but i was prepared for it and i went through it and so people parallel programming it's hard",
    "start": "4791840",
    "end": "4797679"
  },
  {
    "text": "there okay it's going to be different they can't count on what you know you have to figure out what you know is wrong and what you know is",
    "start": "4797679",
    "end": "4804320"
  },
  {
    "text": "right and the fact is of course if you've been programming a lot you have a lot of experience that will work but the problem is",
    "start": "4804320",
    "end": "4810719"
  },
  {
    "text": "there's a fair bit of what you know isn't true anymore and you have to figure out what that is and it's just little pieces here and",
    "start": "4810719",
    "end": "4816480"
  },
  {
    "text": "there they're significant pieces but but still there's a huge amount you know so you have to have self-confidence",
    "start": "4816480",
    "end": "4822880"
  },
  {
    "text": "you got to be prepared you're going to keep on working on it until until you figure it out and anyway there's there's new things",
    "start": "4822880",
    "end": "4830080"
  },
  {
    "text": "all the time it does not throw out all the old stuff but what it does is make you worry about all the old stuff you have",
    "start": "4830080",
    "end": "4836159"
  },
  {
    "text": "to figure out what it is that is still true and what isn't true and it's interesting to talk to guys who were ibm",
    "start": "4836159",
    "end": "4844000"
  },
  {
    "text": "green screen stuff and punch card people and they'll tell you how much of what is today is",
    "start": "4844000",
    "end": "4850239"
  },
  {
    "text": "the same as that of course there's plenty that's different and it it's hard you know to know exactly",
    "start": "4850239",
    "end": "4856719"
  },
  {
    "text": "what's going to transfer when you get some new technology and what's not but having that experience really does help",
    "start": "4856719",
    "end": "4862400"
  },
  {
    "text": "there's an awful lot of stuff does transfer just you have to test it out you have to test out all your old stuff",
    "start": "4862400",
    "end": "4868320"
  },
  {
    "text": "to see what's going to work in the next generation because it doesn't all carry over you know a lot carries over but it doesn't always",
    "start": "4868320",
    "end": "4874719"
  },
  {
    "text": "carry over so what is going to work in the future what the future is going to be like",
    "start": "4874719",
    "end": "4880320"
  },
  {
    "text": "one of the things to me that's pretty amazing is all this concern about energy efficiency and",
    "start": "4880320",
    "end": "4886400"
  },
  {
    "text": "people rate algorithms on how energy efficient there are i can guarantee you you know when i was",
    "start": "4886400",
    "end": "4893040"
  },
  {
    "text": "learning even 20 years ago this would have been considered bizarre and what are we going to be doing next",
    "start": "4893040",
    "end": "4899920"
  },
  {
    "text": "connections to people's brain waves and then worrying about about psychedelic effects of different",
    "start": "4899920",
    "end": "4907600"
  },
  {
    "text": "algorithms or something you know how can you predict what what how your program is supposed to",
    "start": "4907600",
    "end": "4914080"
  },
  {
    "text": "behave in 20 years when people just completely throw out the ground rules and start worrying about things like that",
    "start": "4914080",
    "end": "4920159"
  },
  {
    "text": "and what you know uh is that there will be it's like one of the things has become",
    "start": "4920159",
    "end": "4925600"
  },
  {
    "text": "really big as security and 20 years ago security was not a big deal because the internet wasn't really a big",
    "start": "4925600",
    "end": "4932400"
  },
  {
    "text": "deal then and so things were not so connected now there were there were companies 40 years ago doing heavy research in computer",
    "start": "4932400",
    "end": "4939679"
  },
  {
    "text": "security because they were working for the military and you have banks and you have certain places that that really worry",
    "start": "4939679",
    "end": "4946000"
  },
  {
    "text": "about a lot of average programmers just didn't care it wasn't important it wasn't a big deal",
    "start": "4946000",
    "end": "4951040"
  },
  {
    "text": "now there is something where you could actually predict that okay this will be a big deal someday um",
    "start": "4951040",
    "end": "4959760"
  },
  {
    "text": "energy efficiency of algorithms how could you predict that to me that's just completely bizarre",
    "start": "4959760",
    "end": "4965199"
  },
  {
    "text": "what does that mean they're faster what essentially if they spend less",
    "start": "4965199",
    "end": "4971120"
  },
  {
    "text": "cycles they will be more efficient hence also better",
    "start": "4971120",
    "end": "4977040"
  },
  {
    "text": "oh um well i mean that is like i mean obviously if you",
    "start": "4980159",
    "end": "4985520"
  },
  {
    "text": "make your program",
    "start": "4985520",
    "end": "4988480"
  },
  {
    "text": "the old way of sort of using a login algorithm instead of an n squared algorithm a will",
    "start": "4991440",
    "end": "4998159"
  },
  {
    "text": "will burn less power i think that's usually the case but uh given a bunch of",
    "start": "4998159",
    "end": "5005040"
  },
  {
    "text": "n squared algorithms uh apparently again this is not something i know about i just",
    "start": "5005040",
    "end": "5010560"
  },
  {
    "text": "go to poster sessions where the grad students are talking about all this and it's a hot topic and both in the super computer world",
    "start": "5010560",
    "end": "5016960"
  },
  {
    "text": "where there you're counting how many processors are you're actually using how many of the processors you can turn off",
    "start": "5016960",
    "end": "5022159"
  },
  {
    "text": "these big super computer setters and actually over the course of the lifetime of a computer which isn't very long like five",
    "start": "5022159",
    "end": "5028800"
  },
  {
    "text": "or six years the cost of the energy is greater than the cost of the computer okay so this is a big deal and and",
    "start": "5028800",
    "end": "5037280"
  },
  {
    "text": "we all know that the reason our computers aren't getting any faster now is because they burn you know if they if",
    "start": "5037280",
    "end": "5043920"
  },
  {
    "text": "they were any faster they would melt they get too hot and we have to water cool them and we don't want to water",
    "start": "5043920",
    "end": "5049520"
  },
  {
    "text": "cool our laptops so of course with laptops you worry about the battery how long the battery lasts",
    "start": "5049520",
    "end": "5056000"
  },
  {
    "text": "so everything we're doing now is limited by energy and so people put a huge amount of effort into",
    "start": "5056000",
    "end": "5061199"
  },
  {
    "text": "figuring out how to how to use but and it turns out that you can actually measure the energy efficiency",
    "start": "5061199",
    "end": "5066560"
  },
  {
    "text": "of different algorithms again to me it's just sort of weird i i grew up",
    "start": "5066560",
    "end": "5071760"
  },
  {
    "text": "i've been spending a long long time not thinking about any of that stuff and the real point i'm making is okay",
    "start": "5071760",
    "end": "5077840"
  },
  {
    "text": "what's the next thing we have no idea and anyone who says i can predict how these patterns",
    "start": "5077840",
    "end": "5083199"
  },
  {
    "text": "are going to be you know after this next thing it's it's just you can't possibly it's why it's such a",
    "start": "5083199",
    "end": "5089760"
  },
  {
    "text": "wonderful field",
    "start": "5089760",
    "end": "5099840"
  },
  {
    "text": "any more questions thank you very much",
    "start": "5100400",
    "end": "5105198"
  }
]