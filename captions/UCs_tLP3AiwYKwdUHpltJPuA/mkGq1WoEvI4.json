[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "[Music] thank you",
    "start": "3600",
    "end": "9420"
  },
  {
    "text": "hi everyone I'm Jose Valene creator of Elixir and I'm here to talk about the Elixir programming language so the title",
    "start": "9420",
    "end": "15900"
  },
  {
    "text": "of this talk is idioms for building distributed and fault tolerant applications and that's exactly not",
    "start": "15900",
    "end": "22859"
  },
  {
    "text": "surprisingly it's exactly what we're going to explore today we're going to learn a new set of words and how we can",
    "start": "22859",
    "end": "28619"
  },
  {
    "text": "use these words to write software differently when targeting airlink or elixir",
    "start": "28619",
    "end": "34620"
  },
  {
    "text": "but before we get to this point I want to talk a little bit about why a new programming language what was my journey",
    "start": "34620",
    "end": "42120"
  },
  {
    "text": "uh for creating one and uh to do that we're going to go back to 2008 and uh back in 2008 so",
    "start": "42120",
    "end": "53340"
  },
  {
    "start": "49000",
    "end": "287000"
  },
  {
    "text": "um it was a little bit before I joined the rails core team so we have for those",
    "start": "53340",
    "end": "58559"
  },
  {
    "text": "who are not familiar uh Ruben rails is a is a web framework for the Ruby programming language and back in 2008 we",
    "start": "58559",
    "end": "67320"
  },
  {
    "text": "there was a new rails release where they said that rails 2.2 is tried safe right",
    "start": "67320",
    "end": "73320"
  },
  {
    "text": "and what does it mean to be trade safe so uh what was happening at the time is",
    "start": "73320",
    "end": "78420"
  },
  {
    "text": "that we were starting to have machines with more cores with two cores four cores right and uh people there Say Hey",
    "start": "78420",
    "end": "86220"
  },
  {
    "text": "I want to run uh rails in production and on a machine that has multiple cores and",
    "start": "86220",
    "end": "93119"
  },
  {
    "text": "I want it to work so the idea behind Trad safety is that if you have multiple cores the way that you use all those",
    "start": "93119",
    "end": "100979"
  },
  {
    "text": "scores is by using threads and the fact that it is thread safe it means that you",
    "start": "100979",
    "end": "106079"
  },
  {
    "text": "can do that and everything is going to work right nothing is going to blow up but today in retrospect right I find the",
    "start": "106079",
    "end": "112799"
  },
  {
    "text": "word tread safety very very funny because it's about the lowest possible",
    "start": "112799",
    "end": "118020"
  },
  {
    "text": "guarantee that you can give in software right that hey it's not going to to blow",
    "start": "118020",
    "end": "123180"
  },
  {
    "text": "up you're not going to get a segmentation fault or the memory is not going to be corrupted right it's a very",
    "start": "123180",
    "end": "128640"
  },
  {
    "text": "low guarantee right it doesn't say that the apis are going to be ergonomic it",
    "start": "128640",
    "end": "134040"
  },
  {
    "text": "doesn't mean that it's going to be performant that the developer is going to be productive it's just like hey it's",
    "start": "134040",
    "end": "140220"
  },
  {
    "text": "not going to blow up right casing Point uh when threat safety was added in rails",
    "start": "140220",
    "end": "146640"
  },
  {
    "text": "2.2 what they did is that they put a a mutex around your application which",
    "start": "146640",
    "end": "152700"
  },
  {
    "text": "means that sure nothing's going to blow up but you would never serve that application would never use both cores",
    "start": "152700",
    "end": "160260"
  },
  {
    "text": "at the same time when serving a request right which I expect is not what people",
    "start": "160260",
    "end": "165840"
  },
  {
    "text": "wanted but sure with time um the trade safety situation improved",
    "start": "165840",
    "end": "172220"
  },
  {
    "text": "but at the same time we would often get reports that uh were very hard to to to",
    "start": "172220",
    "end": "179819"
  },
  {
    "text": "reproduce and to fix so for example we would get a report that said hey you know uh when we are having",
    "start": "179819",
    "end": "186360"
  },
  {
    "text": "sorry about that we're having a spike in production uh how to scale kicks in that",
    "start": "186360",
    "end": "192540"
  },
  {
    "text": "brings a new instance and while that instance is you know it has to hit the",
    "start": "192540",
    "end": "197940"
  },
  {
    "text": "ground running and in that process we get some errors and sometimes it doesn't boot properly right and uh those errors",
    "start": "197940",
    "end": "206159"
  },
  {
    "text": "they were related uh to threads right and to high traffic so there was some paths that would just be exercised when",
    "start": "206159",
    "end": "214140"
  },
  {
    "text": "there was a high traffic coming exactly after the machine boots",
    "start": "214140",
    "end": "220200"
  },
  {
    "text": "so those errors you know they are very hard to reproduce very hard to replicate and therefore they are hard to fix so uh",
    "start": "220200",
    "end": "228239"
  },
  {
    "text": "and that was you know at this point I was already working on the radio score team and I was like well if concurrency",
    "start": "228239",
    "end": "235799"
  },
  {
    "text": "is going to become more and more important which I believe is the case today right today we have uh uh watches",
    "start": "235799",
    "end": "243299"
  },
  {
    "text": "right before cores uh so I was thinking well if concurrency is going to become more and more important uh we need to",
    "start": "243299",
    "end": "250319"
  },
  {
    "text": "have better tools better obstructions to solve those problems right and that was my starting point I was like hey you",
    "start": "250319",
    "end": "256560"
  },
  {
    "text": "know I want to see what people are doing to tackle those problems because if this",
    "start": "256560",
    "end": "262320"
  },
  {
    "text": "is the future I need to have better tools and I like to say that in this journey to figure out how to tackle",
    "start": "262320",
    "end": "270000"
  },
  {
    "text": "concurrency uh there were two points of no return two points where I said wait",
    "start": "270000",
    "end": "276000"
  },
  {
    "text": "you know uh this changes everything and it changed the way I fought an approach",
    "start": "276000",
    "end": "281340"
  },
  {
    "text": "about software and the first of those things is functional programming right and functional programming means",
    "start": "281340",
    "end": "287340"
  },
  {
    "start": "287000",
    "end": "506000"
  },
  {
    "text": "different things to to to a lot of people but to me at the time it meant",
    "start": "287340",
    "end": "293160"
  },
  {
    "text": "two things right so the first one is that estate is explicit instead of implicit",
    "start": "293160",
    "end": "299880"
  },
  {
    "text": "because if you think about you know object-oriented languages like Ruby is",
    "start": "299880",
    "end": "305340"
  },
  {
    "text": "that one of the purposes of objects is to encapsulate state right so you know",
    "start": "305340",
    "end": "310500"
  },
  {
    "text": "sometimes you have this object with this state and then an object around it and then an object around it uh Joe",
    "start": "310500",
    "end": "317280"
  },
  {
    "text": "Armstrong the creator of overlink he has a fantastic quote on this or he says well well in in an objective language",
    "start": "317280",
    "end": "322740"
  },
  {
    "text": "you thought you you got a banana right but you got the banana the gorilla holding the banana and the whole jungle",
    "start": "322740",
    "end": "329820"
  },
  {
    "text": "with it right and I think that's exactly the point is that you know the state is always encapsulated and there is always",
    "start": "329820",
    "end": "335940"
  },
  {
    "text": "something around it right the fact that um the behavior right which is often where",
    "start": "335940",
    "end": "342840"
  },
  {
    "text": "we have the logic is co-located with the state means that if you have complex code right you need to create new",
    "start": "342840",
    "end": "349080"
  },
  {
    "text": "objects which put extra barriers around the state just end up adding to this complexity right so what if we don't do",
    "start": "349080",
    "end": "355800"
  },
  {
    "text": "that right what do you feed the couple behavior from from the state and what if they state is explicit if somebody asked",
    "start": "355800",
    "end": "362940"
  },
  {
    "text": "me where is this state in the system can say the state is here right so that's the first thing that functional",
    "start": "362940",
    "end": "368220"
  },
  {
    "text": "programming brought to my attention I was like wait you know I've been chasing State all this time to solve those",
    "start": "368220",
    "end": "374100"
  },
  {
    "text": "issues if the state is explicit and clear that's going to make my life much easier but not only that right if we",
    "start": "374100",
    "end": "381120"
  },
  {
    "text": "have a state what if we stop mutating it and start transforming it so in Elixir",
    "start": "381120",
    "end": "386580"
  },
  {
    "text": "if you have a list with three elements and you say hey I want to delete one element from the list you get a new list",
    "start": "386580",
    "end": "393720"
  },
  {
    "text": "we don't change the the the the old list in place right and the reason why this",
    "start": "393720",
    "end": "399419"
  },
  {
    "text": "matters uh there are two reasons right so the first one is that far concurrency a lot of so why we have issues with",
    "start": "399419",
    "end": "405180"
  },
  {
    "text": "concurrency a lot of the times we have data races which means that you have two threads right running two separate cores",
    "start": "405180",
    "end": "411000"
  },
  {
    "text": "and they are trying to change the same place in memory if they try to do that what is going to happen is that safe",
    "start": "411000",
    "end": "416100"
  },
  {
    "text": "right or if even if that's safe you have a race condition how are you going to reason about that so if you say well",
    "start": "416100",
    "end": "422160"
  },
  {
    "text": "what if we start transforming things more and start instead of mutating them that solves a bunch of the problem and",
    "start": "422160",
    "end": "428280"
  },
  {
    "text": "then but not only that it's not only about concurrency is that your code is going to be much more clear if you don't",
    "start": "428280",
    "end": "435539"
  },
  {
    "text": "have mutation because you know have you ever like called a method in an object passing an argument and then you're not",
    "start": "435539",
    "end": "442020"
  },
  {
    "text": "sure and then when you try to access the argument that you passed that object",
    "start": "442020",
    "end": "448319"
  },
  {
    "text": "modified it like remove the key where you did not expect it to remove it right so it makes much harder for you to",
    "start": "448319",
    "end": "454080"
  },
  {
    "text": "understand the software because you're passing an argument and now it can be implicitly changed and and there is",
    "start": "454080",
    "end": "459539"
  },
  {
    "text": "nothing telling you that that thing can be implicitly changed right and then you have to track this thing now in your",
    "start": "459539",
    "end": "465599"
  },
  {
    "text": "head it becomes your responsibility as a developer so you know when I saw those principles I was like hey you know not",
    "start": "465599",
    "end": "472259"
  },
  {
    "text": "only this is going to solve all the issues with concurrency not all they should actually it's going to solve a",
    "start": "472259",
    "end": "477660"
  },
  {
    "text": "bunch of the issues that I have been facing with concurrency all this time I think my software is going to be much",
    "start": "477660",
    "end": "483240"
  },
  {
    "text": "clearer much clearer uh for me to reason about it right or for my co-worker to",
    "start": "483240",
    "end": "488639"
  },
  {
    "text": "reason about it two years later down the road so that was the first point of no return",
    "start": "488639",
    "end": "494099"
  },
  {
    "text": "and then I started exploring and learning more about a bunch of different functional programming languages",
    "start": "494099",
    "end": "499940"
  },
  {
    "text": "and that's when I met my second point of no return which is when I found out about airlink and the Arling virtual",
    "start": "499940",
    "end": "506340"
  },
  {
    "start": "506000",
    "end": "660000"
  },
  {
    "text": "machine so for those who are not familiar with it airlink is a runtime a",
    "start": "506340",
    "end": "511680"
  },
  {
    "text": "virtual machine that was created by Erickson a telecommunication company and",
    "start": "511680",
    "end": "517080"
  },
  {
    "text": "um what is really interesting about Airline is that it was designed to solve a particular set of use cases okay so",
    "start": "517080",
    "end": "524339"
  },
  {
    "text": "Erickson has a telecommunication company one of the things they were doing is that they were building telephone switches right and you can think that",
    "start": "524339",
    "end": "530459"
  },
  {
    "text": "one of the things that a telephone switch needs to do is that it needs to be able to connect person a to talk to",
    "start": "530459",
    "end": "536220"
  },
  {
    "text": "person B but it's not a telephone switch should be able to handle as many people",
    "start": "536220",
    "end": "542220"
  },
  {
    "text": "talking at the same time as possible right so you start to have this idea that well this needs to be a highly",
    "start": "542220",
    "end": "548399"
  },
  {
    "text": "concurrent run times right you need to be able to have a lot of things going on at the same time right but not only that",
    "start": "548399",
    "end": "553920"
  },
  {
    "text": "you don't have a telephone switch right sometimes you want to call somebody that it's actually in you know in another",
    "start": "553920",
    "end": "560820"
  },
  {
    "text": "city or another neighborhood right and there is another telephone switch and that person may be busy talking to",
    "start": "560820",
    "end": "566880"
  },
  {
    "text": "another person from another neighborhood so you need to be able to exchange all this information right those machines",
    "start": "566880",
    "end": "571920"
  },
  {
    "text": "that you need to be able to communicate with each other and to distribute this information so uh",
    "start": "571920",
    "end": "578880"
  },
  {
    "text": "so they have to think about this as well and a bunch of other requirements for example how do I degrade the code that",
    "start": "578880",
    "end": "584339"
  },
  {
    "text": "is running in production right because you you can't right you can say you're going to maintenance mode you're not",
    "start": "584339",
    "end": "590279"
  },
  {
    "text": "going to say hey don't use your phone from two to three a.m right that's not an option and there's always somebody on",
    "start": "590279",
    "end": "596459"
  },
  {
    "text": "the phone right you cannot say hey you know what if we just turn off everybody disconnect everybody",
    "start": "596459",
    "end": "601680"
  },
  {
    "text": "and then they call again no there's always a connection going so how can you upgrade the system live without bringing",
    "start": "601680",
    "end": "607800"
  },
  {
    "text": "the system down so how can you do hot code upgrades so they had all those requirements and then they built around",
    "start": "607800",
    "end": "613140"
  },
  {
    "text": "time specific to to solve those issues and um everything was used for",
    "start": "613140",
    "end": "618600"
  },
  {
    "text": "telemedication for a long period of time until people started to realize that",
    "start": "618600",
    "end": "624600"
  },
  {
    "text": "these use cases that erlang was solving you know three decades ago it's the",
    "start": "624600",
    "end": "630839"
  },
  {
    "text": "exact same use cases that we are starting to see on the web today right where",
    "start": "630839",
    "end": "636600"
  },
  {
    "text": "um you know our service applications they need to handle many connections millions of connections at the same time",
    "start": "636600",
    "end": "642060"
  },
  {
    "text": "and exchange information and talk to all different kinds of systems with all different kinds of clients and that's",
    "start": "642060",
    "end": "648000"
  },
  {
    "text": "what erlang so back in 2005 2006 that's when Airlines saw Resurgence because a",
    "start": "648000",
    "end": "654300"
  },
  {
    "text": "lot of people do realize hey you know if Airlines going to be great for the web right so",
    "start": "654300",
    "end": "659339"
  },
  {
    "text": "we see we saw companies like Amazon Facebook um teleportation companies hero correct",
    "start": "659339",
    "end": "665940"
  },
  {
    "start": "660000",
    "end": "859000"
  },
  {
    "text": "all using Airline back then and one of the most popular cases for erling",
    "start": "665940",
    "end": "671220"
  },
  {
    "text": "and this is back in 2012 so this was just when I was just starting with Elixir was WhatsApp so WhatsApp",
    "start": "671220",
    "end": "677940"
  },
  {
    "text": "um they they I built they're built on top of our link and you know for all time they gave presentations they were",
    "start": "677940",
    "end": "684060"
  },
  {
    "text": "very clear about it they said how they were using the technology and back then they wrote a blog post where they were",
    "start": "684060",
    "end": "690000"
  },
  {
    "text": "able to get two million connections on a single node and I look at that and say like this is perfect right this is",
    "start": "690000",
    "end": "695399"
  },
  {
    "text": "exactly what I want I want to be able to write code that runs on my machine but if I put it in production and that's a",
    "start": "695399",
    "end": "702000"
  },
  {
    "text": "machine with 24 cores with 48 cores I want to see it for it using all the",
    "start": "702000",
    "end": "708060"
  },
  {
    "text": "cores as efficiently as possible right and that's something that today I also take to my development experience right",
    "start": "708060",
    "end": "714660"
  },
  {
    "text": "I expect all the tools that I use to be using all the cores on my machine if",
    "start": "714660",
    "end": "719940"
  },
  {
    "text": "you're compiling some code and that compiler is not using all the cords in your machine it's you know it's",
    "start": "719940",
    "end": "726360"
  },
  {
    "text": "disrespecting your time right I'm serious like the same for like testing if you're only in the tests and you're",
    "start": "726360",
    "end": "732420"
  },
  {
    "text": "using only one core in your machine right your task could potentially be four times eight times faster right of",
    "start": "732420",
    "end": "740220"
  },
  {
    "text": "using all the resources that are available right now so it's not doing it so I like to say that everything that we",
    "start": "740220",
    "end": "745440"
  },
  {
    "text": "do in our machine should they should be using your cars and erling was doing that uh for production uh way back then",
    "start": "745440",
    "end": "754800"
  },
  {
    "text": "right and I think it's worth saying that it's not only about concurrency because the thing that it's more in a",
    "start": "754800",
    "end": "762120"
  },
  {
    "text": "concurrency because the thing that made me fall in love uh with erling was that",
    "start": "762120",
    "end": "767820"
  },
  {
    "text": "so back in 2010 when I was 2009 when I was doing this exploration concurrency",
    "start": "767820",
    "end": "773519"
  },
  {
    "text": "was a Hot Topic still is but it was a Hot Topic and we are starting to see a bunch of new technologies that were",
    "start": "773519",
    "end": "779519"
  },
  {
    "text": "designed with concurrency in mind but the thing is if you're if you are",
    "start": "779519",
    "end": "785100"
  },
  {
    "text": "writing software and that's using the machine that you it has available as efficiently as possible it's using all",
    "start": "785100",
    "end": "791339"
  },
  {
    "text": "the resources the machine provides but that machine is not enough what is the next step right the next step is to get",
    "start": "791339",
    "end": "796440"
  },
  {
    "text": "another machine right is to is to make it run on multiple machines now so we",
    "start": "796440",
    "end": "802079"
  },
  {
    "text": "start we need to think about distribution right it's not only about scaling vertically on the same machine",
    "start": "802079",
    "end": "807120"
  },
  {
    "text": "but horizontally as well and that's what airline solves Right airlink comes with distribution so we're saying when the",
    "start": "807120",
    "end": "812880"
  },
  {
    "text": "switches they're communicating with each other so for for me while everybody was trying to answer the question to",
    "start": "812880",
    "end": "818519"
  },
  {
    "text": "concurrency and then it was like well we answered that and by the way we also answered the question to to distribution",
    "start": "818519",
    "end": "825480"
  },
  {
    "text": "and that that's what made the airlink be the second point of no return I said hey I want to write software that runs on",
    "start": "825480",
    "end": "833160"
  },
  {
    "text": "this platform right that's what I want for me I think it's a beautiful platform it made a bunch of excellent design",
    "start": "833160",
    "end": "839940"
  },
  {
    "text": "choices that really resonate with me and that's what I want to use so I started",
    "start": "839940",
    "end": "845279"
  },
  {
    "text": "using Airline more and more and I say you know I loved everything I saw but I",
    "start": "845279",
    "end": "850980"
  },
  {
    "text": "really missed some of the things that I think it's really important for software development and that's what led to Elixir so from this brief",
    "start": "850980",
    "end": "858620"
  },
  {
    "text": "discussion right we can start to get an idea what Elixir is about right we can",
    "start": "858620",
    "end": "864360"
  },
  {
    "start": "859000",
    "end": "915000"
  },
  {
    "text": "see it's a functional programming language right it's a concurrent programming language and it's also a distributed more than concurrent right",
    "start": "864360",
    "end": "871139"
  },
  {
    "text": "it's a distributed programming language so what does that means okay so now we're going to get to the second part of",
    "start": "871139",
    "end": "877200"
  },
  {
    "text": "the talk we are going to talk about the idioms and what we're going to do here is that we're going to learn a new set of words and how we are starting to",
    "start": "877200",
    "end": "885060"
  },
  {
    "text": "think and design software differently with this new set of words okay so here's the code that we're right okay",
    "start": "885060",
    "end": "892220"
  },
  {
    "text": "uh so if you're using Java Ruby c",
    "start": "892220",
    "end": "897720"
  },
  {
    "text": "um Pro um this is the code this is the code level right right sequential code",
    "start": "897720",
    "end": "904740"
  },
  {
    "text": "um you know that's going to secure things in some particular order right and elixir is not different okay we",
    "start": "904740",
    "end": "912120"
  },
  {
    "text": "write sequential code in Elixir as well and the difference is that we get the",
    "start": "912120",
    "end": "917519"
  },
  {
    "start": "915000",
    "end": "1033000"
  },
  {
    "text": "sequential code in Elixir and we put into something very very small very very",
    "start": "917519",
    "end": "923100"
  },
  {
    "text": "cheap very very lightweight that we call a process and we create a bunch of those processes",
    "start": "923100",
    "end": "930060"
  },
  {
    "text": "okay so that's the new word process so those processes they are cheap they are lightweight and from now on to the end",
    "start": "930060",
    "end": "936899"
  },
  {
    "text": "of the talk every time I say process we're not talking about operating system processes we are talking about this",
    "start": "936899",
    "end": "942620"
  },
  {
    "text": "lightweight thread of executions that we have in in the airline VM right and they",
    "start": "942620",
    "end": "949680"
  },
  {
    "text": "are very cheap we can create literally millions of those in the WhatsApp case I said they had two million connections",
    "start": "949680",
    "end": "955440"
  },
  {
    "text": "right so they had at least two million processes okay so you create a bunch of those and those processes they're",
    "start": "955440",
    "end": "961620"
  },
  {
    "text": "isolated they don't know about each other by default okay they are completely isolated which means that",
    "start": "961620",
    "end": "967199"
  },
  {
    "text": "they can all run at the same time right so that's how we're starting to get the idea of concurrency we have all this",
    "start": "967199",
    "end": "973860"
  },
  {
    "text": "very cheap lightweight uh processes then they are isolated so they can all run at",
    "start": "973860",
    "end": "979320"
  },
  {
    "text": "the same time and then if by any chance they need to communicate to get something done together they do so",
    "start": "979320",
    "end": "986279"
  },
  {
    "text": "explicitly by message passing by sending messages to each other okay so we are",
    "start": "986279",
    "end": "992579"
  },
  {
    "text": "talking about processes now we are talking about message passing but let's continue going let's continue to go",
    "start": "992579",
    "end": "997980"
  },
  {
    "text": "deeper let's imagine that you know we have the system here running all those processes and let's imagine that this",
    "start": "997980",
    "end": "1003440"
  },
  {
    "text": "system is a web application and in a web application you can there's a bunch of stuff that we need to do right we need",
    "start": "1003440",
    "end": "1009019"
  },
  {
    "text": "to talk to the database uh we need to accept the web requests so if somebody you know types the address in the",
    "start": "1009019",
    "end": "1015500"
  },
  {
    "text": "browser URL that's going to come as a request through TCP something that we need to serve uh maybe we have a process",
    "start": "1015500",
    "end": "1022220"
  },
  {
    "text": "that is responsible for Gathering statistics or metrics to show in a dashboard or something similar and you",
    "start": "1022220",
    "end": "1029780"
  },
  {
    "text": "know you may have a mailer that is responsible for sending email right because those processes they are all",
    "start": "1029780",
    "end": "1037100"
  },
  {
    "start": "1033000",
    "end": "1173000"
  },
  {
    "text": "isolated from each other right if something goes wrong in here in any of those processes it does not affect the",
    "start": "1037100",
    "end": "1043819"
  },
  {
    "text": "other processes right the other process they do not know about it and this leads to a very interesting style of",
    "start": "1043819",
    "end": "1049340"
  },
  {
    "text": "development where we're saying well it's okay for things to crash it's okay to let it crash it's okay for things to",
    "start": "1049340",
    "end": "1055460"
  },
  {
    "text": "fail fast right so let's take an example if you're if you're going back to no to those usual imperative object oriented",
    "start": "1055460",
    "end": "1061700"
  },
  {
    "text": "languages right what happens if you are trying to send there is a request you are trying to send an email and sending",
    "start": "1061700",
    "end": "1068480"
  },
  {
    "text": "that email fails right what can happen is that is sending that email fails",
    "start": "1068480",
    "end": "1074360"
  },
  {
    "text": "there can be an exception that can blow the whole system up right can you shut down everything you can shut down the",
    "start": "1074360",
    "end": "1080539"
  },
  {
    "text": "database it can shut down the web request it can shut down the statistic server right because we have this huge",
    "start": "1080539",
    "end": "1086299"
  },
  {
    "text": "chunk of sequential code right uh and the only reason we don't see that",
    "start": "1086299",
    "end": "1092600"
  },
  {
    "text": "happening in practice right except for some very rare cases the only reason we",
    "start": "1092600",
    "end": "1097640"
  },
  {
    "text": "don't see that happening in practice is because we put like try catch blocks",
    "start": "1097640",
    "end": "1102860"
  },
  {
    "text": "right around your class so if you have a web framework it's very likely that your app framework when it's calling your",
    "start": "1102860",
    "end": "1108080"
  },
  {
    "text": "code there is a huge try catch around that thing right to make sure that you",
    "start": "1108080",
    "end": "1113539"
  },
  {
    "text": "know if something goes wrong it doesn't leak right so we say well we need to catch errors we need to to to catch",
    "start": "1113539",
    "end": "1120080"
  },
  {
    "text": "exceptions right which is very weird because the exception if you think about it right the exception and network is",
    "start": "1120080",
    "end": "1126799"
  },
  {
    "text": "the way of resistance to say hey something went wrong and we're like sure fine whatever right just continue doing",
    "start": "1126799",
    "end": "1132799"
  },
  {
    "text": "uh whatever you're doing right and then and that's why sometimes we get into a weird state where we're asking something",
    "start": "1132799",
    "end": "1138500"
  },
  {
    "text": "that we shouldn't and then the system going through in the state that it can never that it's permanently corrupted",
    "start": "1138500",
    "end": "1144860"
  },
  {
    "text": "okay right what happens if the mailer for example what if what happens if the media started Fame because there was in",
    "start": "1144860",
    "end": "1151039"
  },
  {
    "text": "a corruption in the connection how we are going to handle that right if you're just saying hey continue going continue doing the same thing over and over again",
    "start": "1151039",
    "end": "1158660"
  },
  {
    "text": "in Elixir we don't do that we don't like we don't really like uh catchy exceptions what we say is that is that",
    "start": "1158660",
    "end": "1164419"
  },
  {
    "text": "hey you know if there's something wrong with the Mater sure that process can crash we know that those processes are",
    "start": "1164419",
    "end": "1169760"
  },
  {
    "text": "isolated so it's not going to affect the other process in the system and what we have is that we Define supervisors for",
    "start": "1169760",
    "end": "1175400"
  },
  {
    "text": "the process say hey if something goes wrong with the mailer there is this particular kind of process called a",
    "start": "1175400",
    "end": "1180919"
  },
  {
    "text": "supervisor where its only job is to look at the other processes to say oh that one shut down something went wrong let's",
    "start": "1180919",
    "end": "1187880"
  },
  {
    "text": "start a new process back in its place to continue doing uh whatever it was doing",
    "start": "1187880",
    "end": "1193520"
  },
  {
    "text": "right and why this is a good idea right why this is such a powerful idea I mean we see that happening in in practice in",
    "start": "1193520",
    "end": "1201380"
  },
  {
    "text": "real life all the time right like sometimes you're using our computer and our computer is not working or you know sometimes you want to print a document",
    "start": "1201380",
    "end": "1208299"
  },
  {
    "text": "and the printer doesn't work what do we do right we say okay I'll restart the",
    "start": "1208299",
    "end": "1213559"
  },
  {
    "text": "printer and then you restart it and then it just works beautifully the document prints now and it goes back to working",
    "start": "1213559",
    "end": "1220400"
  },
  {
    "text": "to a working state and the reason we do that the reason why we start things and the reason why I started restarting",
    "start": "1220400",
    "end": "1226280"
  },
  {
    "text": "things work is that every time we start the system we put the system back into that initial state right that is",
    "start": "1226280",
    "end": "1232760"
  },
  {
    "text": "guaranteed to work the manufacturer tests that initial state that boot procedure a lot because if that fails",
    "start": "1232760",
    "end": "1239179"
  },
  {
    "text": "right then then there is no solution right so it's really well tasked right",
    "start": "1239179",
    "end": "1244220"
  },
  {
    "text": "so here's the same idea if there's something earlier software instead of say Hey you know you may be corrupted I",
    "start": "1244220",
    "end": "1249559"
  },
  {
    "text": "don't know your state right but just continue working we say it's fine let it crash there is a supervised the",
    "start": "1249559",
    "end": "1255200"
  },
  {
    "text": "supervisor is going to notice it and start a new one in its place with a fresh State that's guaranteed to work",
    "start": "1255200",
    "end": "1260960"
  },
  {
    "text": "right and sometimes the supervisor they have supervisors themselves right so we start to building this thing that",
    "start": "1260960",
    "end": "1266720"
  },
  {
    "start": "1261000",
    "end": "1684000"
  },
  {
    "text": "resembles a supervision tree and we package the supervision Trace into things that we call applications right",
    "start": "1266720",
    "end": "1273860"
  },
  {
    "text": "so I know at this point I've been talking a lot and adding new words to",
    "start": "1273860",
    "end": "1279200"
  },
  {
    "text": "our vocabularies we are talking about processes we're talking about um supervised applications so that sees",
    "start": "1279200",
    "end": "1286340"
  },
  {
    "text": "a little bit more practical okay so here I have so in Elixir we have a web framework called Phoenix okay and this",
    "start": "1286340",
    "end": "1294200"
  },
  {
    "text": "is an application built on top of things called live Book Live book is a collaborative and interactive code a",
    "start": "1294200",
    "end": "1301039"
  },
  {
    "text": "notebook editor and elixir so if you want if you want to learn Elixir it's a great way of doing so because uh you",
    "start": "1301039",
    "end": "1306799"
  },
  {
    "text": "just need to run a Docker command it's going to install live book in your machine and then you can come here and you know you can write some notes you",
    "start": "1306799",
    "end": "1313880"
  },
  {
    "text": "can execute some Elixir code you can do whatever you want you can write some code and play with those ideas right not",
    "start": "1313880",
    "end": "1320539"
  },
  {
    "text": "the focus right now but one of the things I want to show here is that because this is a is using the Phoenix",
    "start": "1320539",
    "end": "1326840"
  },
  {
    "text": "lab framework that is a web framework for Elixir it's built on all those principles that we have been talking",
    "start": "1326840",
    "end": "1332539"
  },
  {
    "text": "about and Phoenix cons is something that we call a live dashboard right that is a way to introspect the system so in this",
    "start": "1332539",
    "end": "1340400"
  },
  {
    "text": "live dashboard here um you know we can see information about what is the version that is running",
    "start": "1340400",
    "end": "1346780"
  },
  {
    "text": "memory allocation and so on not going to go into that I'm going to focus on two things so the first one is processes by",
    "start": "1346780",
    "end": "1354260"
  },
  {
    "text": "clicking on the process tab we can actually see all the processes in the",
    "start": "1354260",
    "end": "1359659"
  },
  {
    "text": "system right and not only that I can you know I can double click them and get",
    "start": "1359659",
    "end": "1365539"
  },
  {
    "text": "some information about you know who they are connected to how that process started uh some information about",
    "start": "1365539",
    "end": "1371360"
  },
  {
    "text": "garbage collection what is the stack trace of what it's doing right now right so you can get a lot of information out",
    "start": "1371360",
    "end": "1377720"
  },
  {
    "text": "of a running system and this is fantastic right because we're talking about hey you know I want this state to be explicit all they stayed in Elixir",
    "start": "1377720",
    "end": "1384140"
  },
  {
    "text": "exist inside processes and I can list all the processes which means that I can go through things right I can go for all",
    "start": "1384140",
    "end": "1391039"
  },
  {
    "text": "this state right and um and double click and try to understand how my system works right and",
    "start": "1391039",
    "end": "1397640"
  },
  {
    "text": "not only that this is great for understanding a life system and finding",
    "start": "1397640",
    "end": "1402799"
  },
  {
    "text": "potential issues so for example uh we talked about process they communicate by sending messages to each other right so",
    "start": "1402799",
    "end": "1409940"
  },
  {
    "text": "uh when when you send a message to a process that that message goes to the process inbox to the message queue okay",
    "start": "1409940",
    "end": "1418159"
  },
  {
    "text": "so for example we said that in WhatsApp we were able to get 2 million connections on a single machine and the",
    "start": "1418159",
    "end": "1423980"
  },
  {
    "text": "Phoenix framework team they were they actually they were produced over those results so we think you can build like",
    "start": "1423980",
    "end": "1429620"
  },
  {
    "text": "real-time applications where you connect for websocket for example and start receiving events from the server right",
    "start": "1429620",
    "end": "1436400"
  },
  {
    "text": "they they actually replicated they were able to get 2 million connections on a single machine as well the same case",
    "start": "1436400",
    "end": "1442340"
  },
  {
    "text": "that WhatsApp did and what was really interesting is that when the when when we try to reproduce this Benchmark right",
    "start": "1442340",
    "end": "1449480"
  },
  {
    "text": "we we had to set up like 50 different machines to to simulate all of those load that we had to send to the server",
    "start": "1449480",
    "end": "1456080"
  },
  {
    "text": "and we started doing that we reached our first bottleneck I think it was about 50k connections right which is way too",
    "start": "1456080",
    "end": "1463760"
  },
  {
    "text": "short right like imagine like hey let's try to get to Builder connections and then you get 50k and you and you know",
    "start": "1463760",
    "end": "1469520"
  },
  {
    "text": "you can't go further than that right you reach a bottleneck but how do we solve that bottleneck we literally open up",
    "start": "1469520",
    "end": "1475340"
  },
  {
    "text": "Observer so which is a tool that comes with verling it's not web based it's a it's a desktop application but the",
    "start": "1475340",
    "end": "1482419"
  },
  {
    "text": "dashboard is inspired on that so the same thing here that we can do here which is well we said well if there's a",
    "start": "1482419",
    "end": "1489080"
  },
  {
    "text": "bottleneck most likely there is a process in the system that everybody's trying to talk to but and that makes",
    "start": "1489080",
    "end": "1496039"
  },
  {
    "text": "that and that process cannot keep up so the message queue is likely growing and growing and growing so what we did is",
    "start": "1496039",
    "end": "1502580"
  },
  {
    "text": "they were like okay uh so what if we order by message queue we order my message queue and we immediately saw",
    "start": "1502580",
    "end": "1509000"
  },
  {
    "text": "that there was indeed a process that was a bottleneck everybody was trying to talk to that process that process could",
    "start": "1509000",
    "end": "1515000"
  },
  {
    "text": "not keep up so we saw that bottleneck and then we're able to go to I think",
    "start": "1515000",
    "end": "1520600"
  },
  {
    "text": "hundreds of thousands of connections then we found the next bottleneck and then we solved that in a very similar",
    "start": "1520600",
    "end": "1526039"
  },
  {
    "text": "way and when we saw already which we got two million connections two million connections on the single machine use Phoenix as well right so this shows like",
    "start": "1526039",
    "end": "1533480"
  },
  {
    "text": "how powerful those words and those ideas are right of expressing everything with processes and make sure that they are",
    "start": "1533480",
    "end": "1540320"
  },
  {
    "text": "isolated and we can see them write and introspect them and not only we can list",
    "start": "1540320",
    "end": "1545779"
  },
  {
    "text": "all the processes we can list all the applications so remember we have processes they have supervisors and",
    "start": "1545779",
    "end": "1552380"
  },
  {
    "text": "sometimes they become supervision trees that we package into applications so any addictive system any Airline system is",
    "start": "1552380",
    "end": "1559340"
  },
  {
    "text": "made of multiple applications all running at the same time with their supervision trees and it's all listed",
    "start": "1559340",
    "end": "1565279"
  },
  {
    "text": "here and I can double click it so for example Elixir itself is an application I can double click and I can see Elixir",
    "start": "1565279",
    "end": "1571580"
  },
  {
    "text": "supervision 3 or nail this application in particular is live book right so I",
    "start": "1571580",
    "end": "1577640"
  },
  {
    "text": "can come here I can find a live book and you know I can see all the supervision three that makes this web",
    "start": "1577640",
    "end": "1584000"
  },
  {
    "text": "application right everything related to supervising the sessions to the",
    "start": "1584000",
    "end": "1589279"
  },
  {
    "text": "supervising the end points so we accept the web requests and so on everything is here I can go I can click around I can",
    "start": "1589279",
    "end": "1595400"
  },
  {
    "text": "see it right so it really brings a lot of understand each of the system a lot of introspection and monitoring into the",
    "start": "1595400",
    "end": "1602360"
  },
  {
    "text": "system too so um yeah so let's go back to the",
    "start": "1602360",
    "end": "1608179"
  },
  {
    "text": "presentation so you know we talked about applications we saw how it brings introspection and",
    "start": "1608179",
    "end": "1614059"
  },
  {
    "text": "monitoring uh how it gives a visibility the application State because you know everything is in processes and I can see",
    "start": "1614059",
    "end": "1620179"
  },
  {
    "text": "the supervision 3 I can see the processes that are part of an application it's also easy to break into",
    "start": "1620179",
    "end": "1625640"
  },
  {
    "text": "components right so imagine that you're working these applications applications growing growing and growing and we want",
    "start": "1625640",
    "end": "1631940"
  },
  {
    "text": "to break it apart now I can look at the supervision tree and say well what if I get this part of the supervision 3 and",
    "start": "1631940",
    "end": "1637820"
  },
  {
    "text": "move elsewhere right or what if I get this Branch right it's a very visible",
    "start": "1637820",
    "end": "1643220"
  },
  {
    "text": "way for to look at your application and it also brings the reasoning when things go wrong I did not show that but I can",
    "start": "1643220",
    "end": "1649520"
  },
  {
    "text": "actually go there and say Hey I want to terminate this process in the supervision 3 and I can see the",
    "start": "1649520",
    "end": "1654740"
  },
  {
    "text": "supervisor kicking and bringing another process in its place right and we're",
    "start": "1654740",
    "end": "1659840"
  },
  {
    "text": "able to get all those features all this Behavior because we added new words right to our vocabulary and now talking",
    "start": "1659840",
    "end": "1665779"
  },
  {
    "text": "about processes that are lightweight cheap and isolated we are talking about",
    "start": "1665779",
    "end": "1671179"
  },
  {
    "text": "supervisors right that uh our particular kind of processes that have this",
    "start": "1671179",
    "end": "1676580"
  },
  {
    "text": "specific responsibility of restarting part of our code we are talking about applications we're talking about message passing and what we gain from that is",
    "start": "1676580",
    "end": "1683720"
  },
  {
    "text": "that we are not talking about systems that are concurrent right we are not talking about failing fast if there's",
    "start": "1683720",
    "end": "1688940"
  },
  {
    "start": "1684000",
    "end": "1978000"
  },
  {
    "text": "something wrong you're like no I'm not catching exceptions anymore it's fine if something goes wrong because I'm going",
    "start": "1688940",
    "end": "1695299"
  },
  {
    "text": "to restart a new version and which are a new version of that process right with",
    "start": "1695299",
    "end": "1701120"
  },
  {
    "text": "the initial State that's going to work so we are thinking about fault tolerance now we are thinking about systems that",
    "start": "1701120",
    "end": "1707179"
  },
  {
    "text": "can heal themselves because if something goes wrong they restart that particular branches that particular processes those",
    "start": "1707179",
    "end": "1713120"
  },
  {
    "text": "particular trees and there's one word that is actually in the in the talk description that we",
    "start": "1713120",
    "end": "1718640"
  },
  {
    "text": "haven't explored so far right which is well everything is also distributed and how",
    "start": "1718640",
    "end": "1724820"
  },
  {
    "text": "does that work given everything is done with processes and those processes they communicate by",
    "start": "1724820",
    "end": "1731480"
  },
  {
    "text": "exchanging messages it actually doesn't matter if a message is in the same",
    "start": "1731480",
    "end": "1736580"
  },
  {
    "text": "machine or is in a different machine everything just works you can send messages across machines out of the box",
    "start": "1736580",
    "end": "1742580"
  },
  {
    "text": "you don't need to do anything else right you just need to say hey those two different nodes exist and now processes",
    "start": "1742580",
    "end": "1748520"
  },
  {
    "text": "between them can communicate and I can actually show an example of this if we go back to to",
    "start": "1748520",
    "end": "1755720"
  },
  {
    "text": "to live book right so again live book is built with the Phoenix lab framework in Elixir and it's a fully collaborative",
    "start": "1755720",
    "end": "1763340"
  },
  {
    "text": "and interactive application and in order to show it working what I have is that I",
    "start": "1763340",
    "end": "1768380"
  },
  {
    "text": "have two instances running I just started before the talk two instances of this web application it's running on my",
    "start": "1768380",
    "end": "1774020"
  },
  {
    "text": "machine but it would work fine on separate machines but those are two separate operating system processes two",
    "start": "1774020",
    "end": "1779240"
  },
  {
    "text": "separate instances running separate ports okay so if I copy the address of this notebook here and I just change the",
    "start": "1779240",
    "end": "1787460"
  },
  {
    "text": "port because now I'm going to a separate instance um",
    "start": "1787460",
    "end": "1792799"
  },
  {
    "text": "and hold on I am I want to put those side by side",
    "start": "1792799",
    "end": "1800980"
  },
  {
    "text": "so and then I put them side by side now",
    "start": "1801380",
    "end": "1806679"
  },
  {
    "text": "you can see here so you can see it's the same is the same session right but I'm running on different nodes right this in",
    "start": "1807919",
    "end": "1814640"
  },
  {
    "text": "production this would be separate machines right and you can see here that um as I change this thing here",
    "start": "1814640",
    "end": "1821679"
  },
  {
    "text": "the the right side here as well is automatically update updating right",
    "start": "1821679",
    "end": "1828500"
  },
  {
    "text": "so um you can see how it just works even with different machines and that's all",
    "start": "1828500",
    "end": "1835039"
  },
  {
    "text": "built on top of the distribution so the way it works is that when you start the session a a notebook that's running on a",
    "start": "1835039",
    "end": "1841640"
  },
  {
    "text": "on a particular machine right and then when the other machine comes up it asks in the cluster hey you know who is",
    "start": "1841640",
    "end": "1848000"
  },
  {
    "text": "responsible for this session in the whole cluster of machines right and then the other node is like hey I have the",
    "start": "1848000",
    "end": "1853760"
  },
  {
    "text": "session right it's this thing is I have this process that is responsible for understanding this code notebook and",
    "start": "1853760",
    "end": "1859700"
  },
  {
    "text": "then the other note is like okay it's you so whenever anything does something on it just let me know so you have an",
    "start": "1859700",
    "end": "1866600"
  },
  {
    "text": "event system where we have this notebook process right here that has you know everything that we wrote and then all",
    "start": "1866600",
    "end": "1873320"
  },
  {
    "text": "the clients regardless where they are on the cluster they are receiving updates uh of those changes as they come in okay",
    "start": "1873320",
    "end": "1881860"
  },
  {
    "text": "so yeah so this is an example of distribution",
    "start": "1881860",
    "end": "1887059"
  },
  {
    "text": "and again all you need to do this you don't need you don't need a separate database you don't need a a message key",
    "start": "1887059",
    "end": "1892880"
  },
  {
    "text": "right it's all part of of uh the airline runtime their laborator machine",
    "start": "1892880",
    "end": "1898580"
  },
  {
    "text": "all right so let's go back to the presentation so yeah distribution it comes for free",
    "start": "1898580",
    "end": "1904460"
  },
  {
    "text": "we evolve that and we can leverage that to build really you know collaborative",
    "start": "1904460",
    "end": "1909620"
  },
  {
    "text": "interactive applications as live book is an example of right and it just it just",
    "start": "1909620",
    "end": "1915620"
  },
  {
    "text": "works right um all right so okay so we talked about the",
    "start": "1915620",
    "end": "1921320"
  },
  {
    "text": "idioms right we talked about all those new words and we saw an actual example in live book how we can leverage that in",
    "start": "1921320",
    "end": "1926779"
  },
  {
    "text": "practice to to to build something that is collaborative and works in a cluster and with as little and forward as",
    "start": "1926779",
    "end": "1933200"
  },
  {
    "text": "possible because they're just using message passing okay so um but the thing",
    "start": "1933200",
    "end": "1938419"
  },
  {
    "text": "is everything I've talked so far it actually comes from erlang right none of",
    "start": "1938419",
    "end": "1943520"
  },
  {
    "text": "it's specific to Elixir I didn't create to be clear I didn't create any of those things that I have been talking about so",
    "start": "1943520",
    "end": "1949039"
  },
  {
    "text": "far right any of those abstractions right so um",
    "start": "1949039",
    "end": "1954500"
  },
  {
    "text": "so why Elixir right so what Elixir brings different to the table okay and",
    "start": "1954500",
    "end": "1959539"
  },
  {
    "text": "that's the last part of the talk that I want to that we're going to explore now so and I like to talk about Elixir uh",
    "start": "1959539",
    "end": "1965960"
  },
  {
    "text": "using its goals what were the goals that we had when we created the language and the goals are compatibility",
    "start": "1965960",
    "end": "1971440"
  },
  {
    "text": "extensibility and productivity and the first goal compatibility is easy right it just means that everything I've",
    "start": "1971440",
    "end": "1978080"
  },
  {
    "start": "1978000",
    "end": "2280000"
  },
  {
    "text": "shown so far right it comes from our link and you can just leverage use that from Elixir right with no performance",
    "start": "1978080",
    "end": "1984860"
  },
  {
    "text": "costs no performance barrier whatsoever in fact you can call airline from Elixir and vice versa with no cost at all okay",
    "start": "1984860",
    "end": "1993559"
  },
  {
    "text": "so everything is compatible that's easy goal number one goal number two is about",
    "start": "1993559",
    "end": "1998840"
  },
  {
    "text": "accessibility and I love this quote from guys too uh at the end of growing a",
    "start": "1998840",
    "end": "2003880"
  },
  {
    "text": "language a talk he gave where he says now we need to go meta we should now think of a language design as being a",
    "start": "2003880",
    "end": "2010960"
  },
  {
    "text": "pattern for language designs a tool for making more tools of the same kind and",
    "start": "2010960",
    "end": "2017440"
  },
  {
    "text": "you know like today computer science there are like so many applications that is impossible for us to design a",
    "start": "2017440",
    "end": "2022779"
  },
  {
    "text": "language that is going to excel at all of them right so what we need to do is we need to design a language where we",
    "start": "2022779",
    "end": "2028779"
  },
  {
    "text": "can extend the language and bring this language to new domains okay so here's an example right which is uh so I think",
    "start": "2028779",
    "end": "2037600"
  },
  {
    "text": "this is the first time we are seeing some proper Elixir code okay so this is the Unitas framework that calls with",
    "start": "2037600",
    "end": "2043720"
  },
  {
    "text": "Elixir okay and so here's some Elixir code we first Define a module then we say hey we want to Define our test case",
    "start": "2043720",
    "end": "2051040"
  },
  {
    "text": "in here and then we start defining our tests like you know uh I want to test some basic operations and then we do",
    "start": "2051040",
    "end": "2057339"
  },
  {
    "text": "assertions so depending on language you are coming from right this is an old",
    "start": "2057339",
    "end": "2062740"
  },
  {
    "text": "goal right you can say like hey assert this right because uh you you actually have to be very pleased like hey I want",
    "start": "2062740",
    "end": "2069638"
  },
  {
    "text": "to assert that those things are equal I want to assert that those things are different I want to assert this assert",
    "start": "2069639",
    "end": "2074980"
  },
  {
    "text": "that like you need to be tested you need to be telling the test framework precisely what you want to do okay but",
    "start": "2074980",
    "end": "2082599"
  },
  {
    "text": "with Elixir uh we just use assert and that's because assert is a macro that",
    "start": "2082599",
    "end": "2088658"
  },
  {
    "text": "looks at the code and by looking at the code it can say hey I can see here that they're trying to compare things and",
    "start": "2088659",
    "end": "2094419"
  },
  {
    "text": "then so it doesn't put any pressure on the developer to be using a very large",
    "start": "2094419",
    "end": "2100359"
  },
  {
    "text": "testing API you just put assert in front of the things that you want to insert and that's and that's just a macro it's",
    "start": "2100359",
    "end": "2106839"
  },
  {
    "text": "not really part of the language right and then when there is an error report it's going to be very precise very",
    "start": "2106839",
    "end": "2112420"
  },
  {
    "text": "specific about let's say hey I saw that we're trying to compare these two things this thing is this this thing is that",
    "start": "2112420",
    "end": "2118000"
  },
  {
    "text": "but this thing you are missing the exclamation mark that is in the other one so it's very specific very clear",
    "start": "2118000",
    "end": "2124240"
  },
  {
    "text": "about what you're trying to do right and all you need to do is to say assert every the language figures everything",
    "start": "2124240",
    "end": "2129940"
  },
  {
    "text": "else so that's a very simple example of getting Elixir as a programming language and extend it to a particular domain",
    "start": "2129940",
    "end": "2136780"
  },
  {
    "text": "but let's see another example so acto is a library that comes uh uh a river",
    "start": "2136780",
    "end": "2142240"
  },
  {
    "text": "Elixir that allows you to talk to databases and here's an example of a nacto query how you would write a query",
    "start": "2142240",
    "end": "2148660"
  },
  {
    "text": "and what acto is going to do is that it's going to make sure that there are no sequence action attacks is going to",
    "start": "2148660",
    "end": "2154060"
  },
  {
    "text": "make sure that those queries are composable and it's going to convert that to SQL and send that to the",
    "start": "2154060",
    "end": "2159820"
  },
  {
    "text": "database right so you can write those queries using the Alexa constructs that you get familiar with and and have that",
    "start": "2159820",
    "end": "2168099"
  },
  {
    "text": "automatically transform into something that um that you can run again against postgres my SQL and so on",
    "start": "2168099",
    "end": "2175180"
  },
  {
    "text": "right and the interesting thing that acto is a library right it's not part of Alexa as a programming language so for",
    "start": "2175180",
    "end": "2181660"
  },
  {
    "text": "example developers coming from.net uh we have link in.net and you're going to see",
    "start": "2181660",
    "end": "2188440"
  },
  {
    "text": "a lot of similarities but link is literally language integrated query they change the language in order to add",
    "start": "2188440",
    "end": "2194380"
  },
  {
    "text": "those features while in Elixir actor is just a library they didn't have to change the language in order to",
    "start": "2194380",
    "end": "2199839"
  },
  {
    "text": "implement it because the language is accessible so they're able to get the language and bring it to the domain of",
    "start": "2199839",
    "end": "2205300"
  },
  {
    "text": "you know SQL queries and how to write all those complex constructs that you may want to do when you want to",
    "start": "2205300",
    "end": "2210400"
  },
  {
    "text": "interface with a database another example this is a more recent one is an X so an X stands for numerical",
    "start": "2210400",
    "end": "2218440"
  },
  {
    "text": "Elixir and one of the things that you can do with NX is that you can write this thing that we call numerical",
    "start": "2218440",
    "end": "2224980"
  },
  {
    "text": "definitions so instead of saying def which is how we we Define a function as",
    "start": "2224980",
    "end": "2230500"
  },
  {
    "text": "Elixir you say that fan and that defend is a subset of Elixir right it has very",
    "start": "2230500",
    "end": "2235900"
  },
  {
    "text": "similar semantics to exactly how Elixir Works looks exactly like elixir but we can actually get the code inside that",
    "start": "2235900",
    "end": "2242260"
  },
  {
    "text": "fan and compile it to run on the GPU and that enables a whole class of",
    "start": "2242260",
    "end": "2247780"
  },
  {
    "text": "applications with numerical Computing machine learning neural networks by",
    "start": "2247780",
    "end": "2252940"
  },
  {
    "text": "having the subset of the language that it's we can compile and it's guarantee it around the GPU right so this again",
    "start": "2252940",
    "end": "2259960"
  },
  {
    "text": "another example of getting Elixir as a programming language and extend it to a whole new domain okay",
    "start": "2259960",
    "end": "2267640"
  },
  {
    "text": "so that's accessibility and those are some examples we saw testing and",
    "start": "2267640",
    "end": "2272920"
  },
  {
    "text": "numerical Computing uh databases and there are many more you're going to find the community and the third goal is",
    "start": "2272920",
    "end": "2279700"
  },
  {
    "text": "productivity right and productivity is hard to talk about because how can you",
    "start": "2279700",
    "end": "2285160"
  },
  {
    "start": "2280000",
    "end": "2616000"
  },
  {
    "text": "say that one language is more productive than the other right so instead of going to this discussion uh the way we think",
    "start": "2285160",
    "end": "2291760"
  },
  {
    "text": "about productivity is well we want to make sure that you are going to have a good time you are going to feel",
    "start": "2291760",
    "end": "2297280"
  },
  {
    "text": "productive right and especially important because Elixir is a functional programming language and a lot of people",
    "start": "2297280",
    "end": "2303520"
  },
  {
    "text": "they don't have any they didn't have any introductions of functional programming so a lot of those Concepts they're going",
    "start": "2303520",
    "end": "2309760"
  },
  {
    "text": "to be new right when you're talking about you know transformation instead of mutation or when we're talking about",
    "start": "2309760",
    "end": "2315040"
  },
  {
    "text": "processes all those Concepts all those words they are new so we need to make sure that the documentation is really",
    "start": "2315040",
    "end": "2321400"
  },
  {
    "text": "first class uh the link documentation needs to be easy to write easy to read",
    "start": "2321400",
    "end": "2327400"
  },
  {
    "text": "it should be accessible because we want to make sure that if you watch the stock you're like hey I want to give it a try you're going to have a good time and",
    "start": "2327400",
    "end": "2333700"
  },
  {
    "text": "you're going to feel productive doing it and you're going to to have fun doing that so first class documentation first",
    "start": "2333700",
    "end": "2340000"
  },
  {
    "text": "class tooling so in the language it comes with X unit which is the the task framework it comes viax which is",
    "start": "2340000",
    "end": "2346960"
  },
  {
    "text": "interactive Elixir it comes with mix which is kind of your build tool so if you're starting a project that's what",
    "start": "2346960",
    "end": "2352780"
  },
  {
    "text": "you're going to use and that's only what is part of the language right there is a whole ecosystem as well I showed live",
    "start": "2352780",
    "end": "2357940"
  },
  {
    "text": "book um a couple minutes ago which is another way you can explore and learn about the language and so on and there's also a",
    "start": "2357940",
    "end": "2365079"
  },
  {
    "text": "fantastic community of packages so we have a package manager called hex and you know as uh as the community grows we",
    "start": "2365079",
    "end": "2372760"
  },
  {
    "text": "start publishing those packages and sharing we're using Code so let's see some examples of that so here's how a",
    "start": "2372760",
    "end": "2377920"
  },
  {
    "text": "documentation looks like so if you start you know if you go look into Elixir start looking at our docs this is",
    "start": "2377920",
    "end": "2383200"
  },
  {
    "text": "exactly how they look like uh we put a lot of effort and attention into our",
    "start": "2383200",
    "end": "2388420"
  },
  {
    "text": "docs not only when writing them but in our documentation tools and this documentation too is a bit that we use",
    "start": "2388420",
    "end": "2394359"
  },
  {
    "text": "for Elixir is available for the whole community so you know as you go and start using different packages you're",
    "start": "2394359",
    "end": "2399700"
  },
  {
    "text": "going to see that everything is standardized uh on these two and that provides a very good unified experience",
    "start": "2399700",
    "end": "2405820"
  },
  {
    "text": "and as I said documentation should be easy to write and easy to read so making",
    "start": "2405820",
    "end": "2411400"
  },
  {
    "text": "it easy to read means that it should be accessible everywhere right should be accessible in your browser it should be",
    "start": "2411400",
    "end": "2416560"
  },
  {
    "text": "accessible in your IDE if you are in the terminal and you want to access documentation or any module or function",
    "start": "2416560",
    "end": "2422440"
  },
  {
    "text": "just type h and then the name of the module or the function and that comes up immediately so um very very important",
    "start": "2422440",
    "end": "2430119"
  },
  {
    "text": "right and then there is the hex package manager which is not only the package manager for Elixir but for the whole",
    "start": "2430119",
    "end": "2435940"
  },
  {
    "text": "online ecosystem okay and in there we are going to find",
    "start": "2435940",
    "end": "2442240"
  },
  {
    "text": "um a bunch of libraries and a bunch of high-level Frameworks such as the Phoenix framework that we're talking",
    "start": "2442240",
    "end": "2447339"
  },
  {
    "text": "about for building web applications and it's going to be a highlight especially if you're building interactive web",
    "start": "2447339",
    "end": "2454420"
  },
  {
    "text": "real-time applications another example is nerves so nerves is a framework for",
    "start": "2454420",
    "end": "2460240"
  },
  {
    "text": "building high-ended embedded applications embedded software and the idea behind nerves it's really",
    "start": "2460240",
    "end": "2466359"
  },
  {
    "text": "interesting it well because imagine you're building embedded software right and then you have to manage things like",
    "start": "2466359",
    "end": "2472060"
  },
  {
    "text": "you know camera Wi-Fi Bluetooth so what is going to happen if something goes",
    "start": "2472060",
    "end": "2477400"
  },
  {
    "text": "wrong with the the Wi-Fi driver right like how do you handle that right do you",
    "start": "2477400",
    "end": "2483280"
  },
  {
    "text": "tell users to restart the device so what the nerves team realize right is when they looked at erlang they said well you",
    "start": "2483280",
    "end": "2490300"
  },
  {
    "text": "know this supervision I three ideas great because if something goes wrong with the Wi-Fi I just want to restart it",
    "start": "2490300",
    "end": "2497079"
  },
  {
    "text": "right I want to restart that driver so what if we use those principles to manage a embedded device right to manage",
    "start": "2497079",
    "end": "2503740"
  },
  {
    "text": "our embedded software and that's exactly the principles that nerves was built on top of okay and there are a bunch of",
    "start": "2503740",
    "end": "2509800"
  },
  {
    "text": "exciting ideas that you can go to nerves uh to explore there is the main brain framework about",
    "start": "2509800",
    "end": "2515500"
  },
  {
    "text": "audio video streaming and a bunch more that we cannot explore all of them right so if you want to learn more go to our",
    "start": "2515500",
    "end": "2521500"
  },
  {
    "text": "website we have a learning a learning page that lists a bunch of the",
    "start": "2521500",
    "end": "2529060"
  },
  {
    "text": "uh books and casts and learning materials that you're going to find the community and we also have guides on the",
    "start": "2529060",
    "end": "2535420"
  },
  {
    "text": "website which is a fast-paced introduction to the main language Concepts okay and on the website you're",
    "start": "2535420",
    "end": "2541300"
  },
  {
    "text": "also going to find cases so we started last year a bunch of production cases from companies using elixir in",
    "start": "2541300",
    "end": "2547720"
  },
  {
    "text": "production one of the case I want to mention in this talk is the one from Pinterest um",
    "start": "2547720",
    "end": "2553300"
  },
  {
    "text": "so at Pinterest we have this quote from Steve Cohen where he said well when when",
    "start": "2553300",
    "end": "2559540"
  },
  {
    "text": "I started this painting we had close to 1400 servers running when we converted",
    "start": "2559540",
    "end": "2565060"
  },
  {
    "text": "several parts of the system to Elixir they reduce they reduce the amount of servers by 95 percent and when they did",
    "start": "2565060",
    "end": "2571960"
  },
  {
    "text": "that the performance and reliability of the system went up right they were running on less Hardware but the",
    "start": "2571960",
    "end": "2577300"
  },
  {
    "text": "response times dropped right as did the hours so at the end he says that the combined",
    "start": "2577300",
    "end": "2583300"
  },
  {
    "text": "effect of better architecture and elixir saved Pinterest over 2 million dollars a year inside in server costs so uh there",
    "start": "2583300",
    "end": "2592900"
  },
  {
    "text": "are many other cases on the Alexa website we are adding more every month and two months now so you can go to the",
    "start": "2592900",
    "end": "2599859"
  },
  {
    "text": "website you can learn more about the cases that we have or you can follow us and learn more about the upcoming cases",
    "start": "2599859",
    "end": "2604960"
  },
  {
    "text": "we're going to have in the next most and that's what I had to share about that extra today so thank you for our time",
    "start": "2604960",
    "end": "2613020"
  }
]