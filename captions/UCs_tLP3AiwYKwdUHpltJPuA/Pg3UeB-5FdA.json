[
  {
    "start": "0",
    "end": "144000"
  },
  {
    "text": "I",
    "start": "0",
    "end": "5400"
  },
  {
    "text": "Want to talk to you today about programming paradigms so with everybody here for David Nolan's kino last night",
    "start": "11040",
    "end": "17180"
  },
  {
    "text": "Very cool talk a little philosophical I hope you like that because that's what we're going to be doing today again a little big picture",
    "start": "17650",
    "end": "23820"
  },
  {
    "text": "So a little bit about me. I'm Anjana. I am an engineer at Uber research",
    "start": "23820",
    "end": "29369"
  },
  {
    "text": "No affiliation with Taxis or cars with any kind we do Data about scientific research funding and I work on developing a custom query language for that data",
    "start": "29529",
    "end": "39089"
  },
  {
    "text": "I'm an alumni of the recurse center which is an amazing programming retreat and community in New York City",
    "start": "39430",
    "end": "45509"
  },
  {
    "text": "I'm also an alum of the outreach II program which is another amazing initiative to get more women and underrepresented",
    "start": "45570",
    "end": "51570"
  },
  {
    "text": "Folks involved in open source at organizations like Mozilla, so Mozilla [Community] member of a moz tech speaker",
    "start": "51940",
    "end": "57750"
  },
  {
    "text": "And I'm more than happy to talk about any of those things In the hallway come and grab me after if you're curious about any of that, but today",
    "start": "57750",
    "end": "64499"
  },
  {
    "text": "I'm here to talk about the paradigms of programming The notion of a programming paradigm one of the first times that this kind of came to light in the the programming community was in",
    "start": "65260",
    "end": "77250"
  },
  {
    "text": "1978 when this guy Robert Floyd won the turing award and in his turing award lecture and subsequent paper",
    "start": "77680",
    "end": "85049"
  },
  {
    "text": "he decided to focus on this notion of paradigms in programming And I guess when you win a turing award you get to start your paper with a with a quote from the oxford dictionary",
    "start": "85570",
    "end": "94559"
  },
  {
    "text": "Which is something I've never been allowed to do But he did and he said ok a paradigm is this notion of having an of a pattern or an exemplar an example?",
    "start": "95020",
    "end": "103319"
  },
  {
    "text": "I think pattern is the is the key word here and he then says",
    "start": "103320",
    "end": "108810"
  },
  {
    "text": "thinking about paradigms more in How they affect our [programming] so in this paper",
    "start": "109509",
    "end": "114970"
  },
  {
    "text": "He said I believe the best chance we have to improve the general record's programming is to",
    "start": "114970",
    "end": "120220"
  },
  {
    "text": "attent to our paradigm and that's really what I like to run through today If you get nothing else out of [the] talk, I hope you just get the idea that",
    "start": "120950",
    "end": "129250"
  },
  {
    "text": "It's useful and can help us all become better Programmers and individuals and [communities] for [us] focus on paradigms and how to [center] that and put our attention on that?",
    "start": "129350",
    "end": "138969"
  },
  {
    "text": "Think about how they affect our code So this of course brings us to the question. What are we talking about? So what is a paradigm?",
    "start": "139310",
    "end": "147309"
  },
  {
    "start": "144000",
    "end": "300000"
  },
  {
    "text": "this is something that I probably a Learned code and the cable programmer something that I kind of brought them within and more superficial ways at first and then as I learn",
    "start": "148160",
    "end": "157239"
  },
  {
    "text": "More [about] a different paradigm I got [into] kind of a deeper dialogue with this question But actually the first time that I came in contact with this question was not through code at all it was when I was studying",
    "start": "157239",
    "end": "167769"
  },
  {
    "text": "Philosophy as an undergraduate I was a philosophy major and in our philosophy of science class we read this book called the structure of scientific revolutions",
    "start": "167769",
    "end": "175719"
  },
  {
    "text": "by a guy named Thomas Kuhn [and] [this] book came out. I think the first edition was around 1960 and in this book",
    "start": "176390",
    "end": "184959"
  },
  {
    "text": "He is a historian of science, and he wants to help us understand kind of how",
    "start": "184959",
    "end": "189429"
  },
  {
    "text": "Science has [made] progress over the years how we have been able to advance the state of human understanding, so you know small questions",
    "start": "190040",
    "end": "197829"
  },
  {
    "text": "and he sort of centers the whole dialogue around this notion of a paradigm and so he",
    "start": "198410",
    "end": "205179"
  },
  {
    "text": "Frames a paradigm kind of as a worldview a way of looking at the universe a way of understanding the universe",
    "start": "205430",
    "end": "211480"
  },
  {
    "text": "for example we had as a notion of a paradigm as an example of a paradigm the idea of the the",
    "start": "212989",
    "end": "219699"
  },
  {
    "text": "sceno systematic model of the Cosmos like the ptolematic model where we have this model of the universe [where] the",
    "start": "220340",
    "end": "227049"
  },
  {
    "text": "Earth we are like the bright shining center of the universe and all of the celestial bodies orbit us in these",
    "start": "227359",
    "end": "232599"
  },
  {
    "text": "celestial spheres and so this is as I said kind of a model of the universe that we're in a",
    "start": "233150",
    "end": "238958"
  },
  {
    "text": "Paradigm can be looked at as [kind] of a way of understanding of conceptualizing that universe",
    "start": "239180",
    "end": "244269"
  },
  {
    "text": "and in that sense It's something that's necessary for us to have scientific progress says [kuhn] that",
    "start": "246020",
    "end": "252889"
  },
  {
    "text": "Until we as a community can rally around a model that we can all agree upon. [it's] not possible for us to",
    "start": "253560",
    "end": "259880"
  },
  {
    "text": "Actually advance our understanding of the universe [he] talks about the pre paradigm",
    "start": "260400",
    "end": "265250"
  },
  {
    "text": "phase of its kind of like pre science where people are just sort of stumbling around and [when] one person [is] over here doing that and other person is over here doing that but as a",
    "start": "266310",
    "end": "273860"
  },
  {
    "text": "Community we're not able to move forward until we all Rally behind a particular model a particular paradigm",
    "start": "273860",
    "end": "279830"
  },
  {
    "text": "but if a paradigm is [a] model then It doesn't just contain the idea about what's in the universe. He says it",
    "start": "280350",
    "end": "288888"
  },
  {
    "text": "Tells us also the theory and methods and standards",
    "start": "289800",
    "end": "294199"
  },
  {
    "text": "together in an inextricable Mixture so what does he mean here the theory is kind of this this view of the universe what entities make up the universe how?",
    "start": "295230",
    "end": "304129"
  },
  {
    "start": "300000",
    "end": "584000"
  },
  {
    "text": "Do they behave and interact? But it also tells us not just about the universe that we live in about but about how we do the science that helps us",
    "start": "304130",
    "end": "312048"
  },
  {
    "text": "Better understand that universe and so that's where the methods and standards come in a paradigm also tells us",
    "start": "312050",
    "end": "319460"
  },
  {
    "text": "Which problems are we're solving which questions it makes sense to ask Which questions are worth exploring and it tells us which solutions are actually legitimate",
    "start": "319860",
    "end": "330559"
  },
  {
    "text": "Which answers are our good answers to those questions? so this is all wrapped up in the notion of paradigm and",
    "start": "331010",
    "end": "338089"
  },
  {
    "text": "Kuhn talks about this in terms of Mostly you know the physical sciences things like chemistry physics But these notions apply to programs as well, so if a paradigm tells us in science",
    "start": "338880",
    "end": "349669"
  },
  {
    "text": "What entities make up the universe if we're doing you know cosmology or astrophysics in programming it tells us",
    "start": "349669",
    "end": "355219"
  },
  {
    "text": "What makes up a program what conceptual units is a program made up of how do they interact and it also tells us?",
    "start": "355220",
    "end": "362899"
  },
  {
    "text": "Which problems we need to address as programmers it sort of defines the task of programming?",
    "start": "363180",
    "end": "370250"
  },
  {
    "text": "What do we need to do as programmers given this model of how programs are composed what they're comprised of and which",
    "start": "370250",
    "end": "376790"
  },
  {
    "text": "solutions which parts of you know which Creations which programs that we write are good ones, so the theory methods and standards are all wrapped up in this",
    "start": "377220",
    "end": "387199"
  },
  {
    "text": "[Worldview] in this Model But if it's a model, then we also have to remember this this phrase from George box",
    "start": "387719",
    "end": "394069"
  },
  {
    "text": "He's a statistician, and he's talking about statistical models. He says all models are wrong",
    "start": "394219",
    "end": "398629"
  },
  {
    "text": "Kind of a famous phrase none of them are an accurate picture of reality. They're all wrong and",
    "start": "399300",
    "end": "405289"
  },
  {
    "text": "This is where the the notion that kuhn is probably most famous for the notion of paradigm shift comes in",
    "start": "406919",
    "end": "413389"
  },
  {
    "text": "So kuhn says that you know Finally the scientific community has emerged from the pre paradigm phase of darkness and we found a paradigm",
    "start": "413819",
    "end": "422688"
  },
  {
    "text": "It's a model like the pTolemaic model of the universe let's say and we can do science this way",
    "start": "422789",
    "end": "428209"
  },
  {
    "text": "But eventually we'll start to notice anomalies So let's say observations that don't really fit [the] model that the model has difficulty explaining things that we have to kind of shoehorn",
    "start": "428210",
    "end": "436969"
  },
  {
    "text": "into the model using complex ideas like epicycles and all kinds of strange [contraptions] and",
    "start": "437339",
    "end": "443719"
  },
  {
    "text": "this happens in programming too right these are these are the types of programs where it just seems in Elegant and clunky and awkward and",
    "start": "444180",
    "end": "450798"
  },
  {
    "text": "It's hard to maintain and hard to read. It's hard to think about these are anomalies and",
    "start": "450800",
    "end": "455719"
  },
  {
    "text": "Once you know if you have one anomaly here one anomaly there you can even make an epicyclic",
    "start": "456509",
    "end": "461209"
  },
  {
    "text": "Trinomial model and you can account for it once in a while But enough of them accumulate or perhaps some of them are so egregious that",
    "start": "461969",
    "end": "468500"
  },
  {
    "text": "Eventually the scientific community gets thrown into this kind of state of crisis where the model has broken down it",
    "start": "468750",
    "end": "475459"
  },
  {
    "text": "No, longer works. It's no longer helping us advance, and then there's you know Arguments over which paradigm is right?",
    "start": "475460",
    "end": "482209"
  },
  {
    "text": "There's the adherents of the old model that refused to let it die there's people coming out with competing new models",
    "start": "482210",
    "end": "487488"
  },
  {
    "text": "It's kind of this chaotic period In which not much gets done until Finally the community decides to Rally around a new model",
    "start": "487490",
    "end": "495228"
  },
  {
    "text": "And that's where the notion of shift comes in and so then that new model becomes the dominant paradigm",
    "start": "495229",
    "end": "500809"
  },
  {
    "text": "But of course they're all models are wrong they're going to be anomalies for that one and so we go through the loop again and",
    "start": "500810",
    "end": "506718"
  },
  {
    "text": "again and again and it never really stops and so the The example we had before of the [pTolemy] model that eventually was superseded by the copernican Model a heliocentric",
    "start": "506819",
    "end": "518388"
  },
  {
    "text": "World solar system in which the sun's at the center you know the predicate is like hey wouldn't it be so [much] easier to explain all of these like anomalies like the retrograde motion of",
    "start": "519240",
    "end": "528109"
  },
  {
    "text": "Mars and stuff like that if we didn't have to posit all these crazy epicycles And we just said well is the suns of the center then it all kind of works out",
    "start": "528110",
    "end": "534649"
  },
  {
    "text": "But these shifts don't happen overnight copernicus came up with this idea But it was wasn't for you know another couple hundred years before the community had really fully shifted",
    "start": "534959",
    "end": "543889"
  },
  {
    "text": "They say that actually the copernican revolution didn't really finish or didn't really conclude until Newton came along with his sort of unifying theories of",
    "start": "543899",
    "end": "553129"
  },
  {
    "text": "How everything works together what the universe is made up of and how those things interact? But of course his model was also wrong",
    "start": "553410",
    "end": "560359"
  },
  {
    "text": "You know this guy came along einstein came along, but actually you know Newton had some good ideas",
    "start": "560519",
    "end": "566508"
  },
  {
    "text": "but that was also an incorrect model there are also anomalies that a different model like relativity can account for",
    "start": "566509",
    "end": "571579"
  },
  {
    "text": "So ok This has all been you know nice scientific history exploration, but y'all aren't here to talk about",
    "start": "572160",
    "end": "578930"
  },
  {
    "text": "Newton and Einstein [you're] here to talk about programming paradigms, right? So let's take a look then at the field of programming at kind of our",
    "start": "579870",
    "end": "587628"
  },
  {
    "start": "584000",
    "end": "596000"
  },
  {
    "text": "Scientific or pSeudo scientific evolution and see what kind of paradigm shifts we went through there",
    "start": "588269",
    "end": "594979"
  },
  {
    "text": "So in the beginning there was imperative programming something kind of Miraculous happened, and we like as a as a species figured out how to",
    "start": "595860",
    "end": "604188"
  },
  {
    "start": "596000",
    "end": "784000"
  },
  {
    "text": "Electrify rocks and like make them do what we want",
    "start": "605399",
    "end": "607969"
  },
  {
    "text": "pretty amazing and in this kind of this first sort of dominant paradigm",
    "start": "610529",
    "end": "615588"
  },
  {
    "text": "we we [conceive] those programs as made up of things like statements and expressions and those combined to create commands that we",
    "start": "616230",
    "end": "623539"
  },
  {
    "text": "human overlords for now give to the computers and so this is a kind of the to me the sort of the the",
    "start": "624420",
    "end": "631459"
  },
  {
    "text": "crucial Entity that the imperative programming model turns around is the notion of the imperative statement which is a command?",
    "start": "632130",
    "end": "640790"
  },
  {
    "text": "Do this then do that then do that other thing, so?",
    "start": "641220",
    "end": "645230"
  },
  {
    "text": "Programming what we have to do as programmers in the imperative paradigm becomes saying things like hey You computer follow my commands do what I say follow them in the order that I give them imperative programs read like top to bottom",
    "start": "646800",
    "end": "659059"
  },
  {
    "text": "Mostly there's a little jumping around, but in general. It's kind of a linear way of thinking and",
    "start": "659370",
    "end": "665510"
  },
  {
    "text": "So time is important in the imperative paradigm And so that's where state comes in state being you know remembering values over time how they change over time",
    "start": "665790",
    "end": "673940"
  },
  {
    "text": "This is all sort of central to the imperative programming worldview so for me the the mental kind of",
    "start": "674399",
    "end": "682190"
  },
  {
    "text": "Visual analogy that I like to use for imperative programming is kind of that of a complex clock or sort of Clockwork machinery?",
    "start": "683339",
    "end": "690469"
  },
  {
    "text": "It's very intricate very precise very amazing sort of when we think [about] how all of these tiny pieces fit together",
    "start": "690540",
    "end": "697399"
  },
  {
    "text": "[but] it means that we have to be very very close attention to every little tooth on every little cog in that machine",
    "start": "698250",
    "end": "706070"
  },
  {
    "text": "Precision becomes extremely important and of course you know the clock is also kind of a good metaphor because time",
    "start": "706649",
    "end": "712578"
  },
  {
    "text": "State that also matters in this paradigm, so here's some imperative code This is some C. Code C",
    "start": "712770",
    "end": "718520"
  },
  {
    "text": "Is sort of one of the the classic sort of archetypal imperative languages that people still write lots of useful code in",
    "start": "718520",
    "end": "724879"
  },
  {
    "text": "This has just pulled at [random] from the C python Interpreter, this is a little function it just rounds [up] to",
    "start": "725220",
    "end": "730819"
  },
  {
    "text": "The next highest power of [two] over a number and it reads very much And it's top to bottom you know do this do [that] kind of fashion?",
    "start": "731459",
    "end": "738769"
  },
  {
    "text": "It's like you to remember this number Assert something about it something about the input enter a while loop in each iteration do this in this",
    "start": "738770",
    "end": "746149"
  },
  {
    "text": "Check a condition if you condition meet you know jump out [of] the while loop and then return the result do this do that",
    "start": "746399",
    "end": "751639"
  },
  {
    "text": "in that order [so] the metaphor of a clock this this sort of intricate",
    "start": "751790",
    "end": "759349"
  },
  {
    "text": "Machinery it's really great when it's working But as soon as one little thing breaks down in there the whole thing freezes up and so some people found that this started to",
    "start": "760290",
    "end": "768949"
  },
  {
    "text": "Be sort of an anomaly for the paradigm [of] imperative programming that as programs get more complex",
    "start": "768950",
    "end": "774739"
  },
  {
    "text": "They become much harder to manage and one little thing can go wrong and bring down the whole the whole system. The whole eight, so",
    "start": "774740",
    "end": "780560"
  },
  {
    "text": "new ideas for a new paradigm starting to come about Like for example in the late 70s and early 80s the idea of object-oriented programming with a paradigm that",
    "start": "781290",
    "end": "789920"
  },
  {
    "start": "784000",
    "end": "980000"
  },
  {
    "text": "Started a rather seismic shift towards that way of thinking so",
    "start": "790440",
    "end": "795779"
  },
  {
    "text": "Object-Oriented programming is still sort of imperative We're still telling the computer what to do but and we're still paying attention to state, but we're breaking it up into little chunks",
    "start": "795780",
    "end": "803600"
  },
  {
    "text": "So that now programs the universe of programs is no longer comprised of commands It's comprised of these things called objects, whatever that means objects are kind of like these little units",
    "start": "803610",
    "end": "813859"
  },
  {
    "text": "That keep a little portion of state to themselves, so [we] say hey you object remember your little portion of the world the state and",
    "start": "814770",
    "end": "823639"
  },
  {
    "text": "The other thing that that's important for a paradigm We said is not just what entities are out there, but how they interact so these little chunks these little objects they interact",
    "start": "824220",
    "end": "831979"
  },
  {
    "text": "According to people like alan kay one of the founders of the paradigm by sending messages to each other and this is what happens when?",
    "start": "833040",
    "end": "838670"
  },
  {
    "text": "We call methods on each object basically sending a message like hey Object you have some state that you do here's a here's a method that I want you to",
    "start": "838670",
    "end": "847310"
  },
  {
    "text": "Run on whatever state you have and then give me some response back do something in the world",
    "start": "848130",
    "end": "853369"
  },
  {
    "text": "Maybe change something in the state, but but do something Based on my message respond as you see fit respond as your internals are telling you to respond",
    "start": "853440",
    "end": "863688"
  },
  {
    "text": "We'll take a look at a little bit later. How that works because this for me was kind of",
    "start": "864210",
    "end": "868910"
  },
  {
    "text": "Counterintuitive. I always thought object-oriented programming with all about classes and [inheritance] and whatnot but it's not really the central notion which we'll come back",
    "start": "869460",
    "end": "876379"
  },
  {
    "text": "to a little bit later so the the visual metaphor that I like for Object-Oriented programming is the one that alan kay talks about a lot when [he] talks about the kind of history of how we came up",
    "start": "876380",
    "end": "885379"
  },
  {
    "text": "with these ideas and he and other folks as well, which is biological really in its metaphor",
    "start": "885380",
    "end": "890930"
  },
  {
    "text": "it's kind of the notion of cells in a body if we think about each object as kind of like a",
    "start": "890930",
    "end": "896449"
  },
  {
    "text": "cell in a larger tissue I so has its own internal structure have its own",
    "start": "896640",
    "end": "902270"
  },
  {
    "text": "State has its own molecules inside has its own little organelles and things going on that that make it whatever type of cell it is",
    "start": "902670",
    "end": "910399"
  },
  {
    "text": "And it has a membrane that sort of protects Whatever is inside it from the rest of the world and it received it on that membrane",
    "start": "911510",
    "end": "918199"
  },
  {
    "text": "It has receptors for molecules that are floating around in the system and so all of the cells together pass these molecules back and forth and they do things with them with their receptors and",
    "start": "918200",
    "end": "927139"
  },
  {
    "text": "this makes a larger system like a body or an organ function",
    "start": "927210",
    "end": "933199"
  },
  {
    "text": "So object-oriented code we're probably all familiar with this is some python again pulled at [random] from C python from the from the python interpreter and",
    "start": "934110",
    "end": "941780"
  },
  {
    "text": "We have these things like classes. We have inheritance as I said [that's] [what's] there, but it's not necessarily crucial",
    "start": "943590",
    "end": "949309"
  },
  {
    "text": "We also have we have methods we have this notion of self We see this Keyword self a lot in object-oriented programming we have this idea of identity of each little cell being sort of its own",
    "start": "950220",
    "end": "961189"
  },
  {
    "text": "beautiful snowflake And they're all kind of have an idea of who am I and who is the rest of the world I keep everything to myself?",
    "start": "961440",
    "end": "968929"
  },
  {
    "text": "So these are some things typical of the [object-oriented] programming paradigm which we are likely familiar with",
    "start": "969840",
    "end": "974959"
  },
  {
    "text": "Meanwhile the problem of the rigidity [of]",
    "start": "976410",
    "end": "981830"
  },
  {
    "start": "980000",
    "end": "1164000"
  },
  {
    "text": "imperative programming and the problems created by having to Maintain Complex States also sparked",
    "start": "982650",
    "end": "988280"
  },
  {
    "text": "Working towards another paradigm a different way of solving basically that same problem, which is functional programming so the origins of [that] go back like even earlier to",
    "start": "989160",
    "end": "998059"
  },
  {
    "text": "Alonzo Church, and the Lambda Calculus in the 30s but the As this became kind of more a thing in [everyday] programmers life which now in the last you know 10 years or so we've seen",
    "start": "999210",
    "end": "1009759"
  },
  {
    "text": "Like a huge interest in this because [we] found ways to make it efficient the idea that comes",
    "start": "1009760",
    "end": "1014950"
  },
  {
    "text": "Let's like do things a completely different way let's forget all [about] these",
    "start": "1015650",
    "end": "1020410"
  },
  {
    "text": "Commands and saying do this do that let's forget about time and state and things like that. Let's beautiful state is dangerous",
    "start": "1020750",
    "end": "1027459"
  },
  {
    "text": "It causes us a lot of problems [we] have so many so many bugs and headaches and just like stress in our lives because of mutable state let's forget it instead",
    "start": "1027459",
    "end": "1035650"
  },
  {
    "text": "Let's conceive of the universe of programs as made up of pure functions Where pure functions are really safe because all they do is take in some inputs whatever arguments you give them",
    "start": "1035650",
    "end": "1046809"
  },
  {
    "text": "They do whatever Complicated computations, or maybe not so complicated computations. They need to do and then they spit out their output their return values",
    "start": "1047120",
    "end": "1057278"
  },
  {
    "text": "that's all they do all they look at is the arguments that they get in they don't look at anything else about the rest of",
    "start": "1057280",
    "end": "1062499"
  },
  {
    "text": "The world and all they do is return a value. They don't make any other changes [they're] kind of like these these little transformers of Data Data goes in",
    "start": "1062500",
    "end": "1070749"
  },
  {
    "text": "Data comes out and We can hook them all up together so that we sort of flow Data through our programs which are themselves",
    "start": "1071300",
    "end": "1079179"
  },
  {
    "text": "like giant pure functions, they just take input and give output and So the visual metaphor that works for me for this is kind of like a factory",
    "start": "1079940",
    "end": "1088028"
  },
  {
    "text": "Where a factory gets in like the trucks come in with the raw? materials and then at the end of the day the trucks go out with the assembled whatever cars in this case and",
    "start": "1088580",
    "end": "1097749"
  },
  {
    "text": "inside the Factory We have like something like an assembly line where lots of little stations kind of do one",
    "start": "1098210",
    "end": "1103539"
  },
  {
    "text": "specialized task and the Data Sort of the raw materials flow through them and get to Transformed in little ways bit by bit on that assembly line",
    "start": "1103670",
    "end": "1111310"
  },
  {
    "text": "so functional languages probably familiar with lisp This is some scheme",
    "start": "1113360",
    "end": "1119240"
  },
  {
    "text": "the dialect of lisp they do a lot of things like this like map function right it's very typical of the",
    "start": "1119240",
    "end": "1124809"
  },
  {
    "text": "Functional [paradigm] where we are taking in a list and we're kind of processing it little by little by applying a function",
    "start": "1125090",
    "end": "1131860"
  },
  {
    "text": "This f that we've gotten applying it to the first thing in the list And then cleverly recursively calling myself my I find the map function on the rest of the list",
    "start": "1132470",
    "end": "1141820"
  },
  {
    "text": "Which then means I apply f [to] the first thing of the rest of the list and then I Recursively call myself on the rest of the rest of the list and so on and so forth until I process the whole list like",
    "start": "1142280",
    "end": "1151419"
  },
  {
    "text": "the whole Assembly line You know the list has passed by me on the assembly line",
    "start": "1151420",
    "end": "1156039"
  },
  {
    "text": "So functional programming is actually a kind of sub paradigm or one type of paradigm that falls under the larger",
    "start": "1157430",
    "end": "1164470"
  },
  {
    "start": "1164000",
    "end": "1386000"
  },
  {
    "text": "[umbrella] of Declarative Programming and Declarative programming is usually put in contrast with imperative programming",
    "start": "1164750",
    "end": "1170230"
  },
  {
    "text": "So if imperative programming concedes of the universe of being made up of commands that we give the computer",
    "start": "1170540",
    "end": "1176019"
  },
  {
    "text": "Declarative programming says it's made up of declarative statements. It's made up of Instead of do this do that. It's made of statements like these are the facts this is what I know",
    "start": "1176660",
    "end": "1186160"
  },
  {
    "text": "This is what I want from you computer, and I don't care how you go about giving it to me",
    "start": "1186740",
    "end": "1192670"
  },
  {
    "text": "I'm not going to give you in split instructions do this than that so",
    "start": "1192670",
    "end": "1197800"
  },
  {
    "text": "The the metaphor that I like to use for myself [for] this is kind of like a logic puzzle like sudoku, and you sudoku fans",
    "start": "1198230",
    "end": "1205780"
  },
  {
    "text": "Anyway, so it's the kind of thing where you have you have constraints you have like rules and facts about the world so for example",
    "start": "1206930",
    "end": "1213939"
  },
  {
    "text": "every 3x3 Square has to have the numbers 1 through 9 the digits 1 through 9 every row and every Column has to have those numbers these are like a",
    "start": "1214070",
    "end": "1221620"
  },
  {
    "text": "Just general facts about the universe it must be done this way and then you have these sort of",
    "start": "1222020",
    "end": "1226719"
  },
  {
    "text": "Constraints about what what you see like there's a 1 in the top left corner And you have to work around that to complete the puzzle in this metaphor",
    "start": "1228170",
    "end": "1235359"
  },
  {
    "text": "You are the computer as you fill this out and So the point is that it doesn't matter what order you enter the numbers in all that matters is at the end of the day",
    "start": "1235360",
    "end": "1242740"
  },
  {
    "text": "You have a solved pSeudo [Ku] grid And that's kind of what we're telling the computer when we use a declarative language like sequel for example",
    "start": "1242740",
    "end": "1249549"
  },
  {
    "text": "We just say ok I want some books. I want I care about their titles and their prices and ETc Etc",
    "start": "1249710",
    "end": "1255789"
  },
  {
    "text": "I only want books where the price is above a certain thing. I want them ordered in a certain way. This is what I want",
    "start": "1255790",
    "end": "1261969"
  },
  {
    "text": "Go get it for me. We don't tell any we don't say anything about how exactly it should",
    "start": "1262730",
    "end": "1267730"
  },
  {
    "text": "Retrieve that information from the database we don't say anything if we're asking for you know joins And we don't say anything about how it should integrate other information",
    "start": "1268460",
    "end": "1275620"
  },
  {
    "text": "Or how it should perform the ordering process none of that just saying I want this Please give it to me",
    "start": "1275620",
    "end": "1282290"
  },
  {
    "text": "[and] another sub paradigm of declarative programming is like logic programming which makes the pSeudo [coos] metaphor even",
    "start": "1282290",
    "end": "1288609"
  },
  {
    "text": "Sort of more fitting so a language like prolog for example. I think makes this declarative style even more explicit",
    "start": "1288740",
    "end": "1294729"
  },
  {
    "text": "We're saying these are the facts about the world you know wanted [Anna's] Parent Kim the Dennis parent Kim is my parent these are some things I know and then we're saying there are also some facts",
    "start": "1294730",
    "end": "1303339"
  },
  {
    "text": "About the world like you can you can make deductions in a certain way using certain rules of logic?",
    "start": "1303340",
    "end": "1308020"
  },
  {
    "text": "Like for [example] x and y [are] siblings if there's something [@z] who is both x's parent and y's parent?",
    "start": "1308360",
    "end": "1315130"
  },
  {
    "text": "and so then I can say prolog I want to know is ana [my] sibling and",
    "start": "1315559",
    "end": "1320799"
  },
  {
    "text": "Prolog will tell me yes But I haven't said anything about how I want it to make that deduction [all] I've said is this is the scenario",
    "start": "1321530",
    "end": "1328479"
  },
  {
    "text": "Tell me what I want Okay, [so] there are a few more programming paradigms than these these are just a couple",
    "start": "1328820",
    "end": "1335650"
  },
  {
    "text": "This guy peter van roy took it upon himself to write down lots of them not even all of them these are just the principal ones and",
    "start": "1336320",
    "end": "1342870"
  },
  {
    "text": "He categorizes them in terms of the concepts that make them up. He gives some you know languages that support them and",
    "start": "1343429",
    "end": "1349059"
  },
  {
    "text": "Interestingly you know he points out in some of his work on programming paradigms that sometimes paradigms that we think are",
    "start": "1350690",
    "end": "1357820"
  },
  {
    "text": "really different [I] think things that we think of as being totally diametrically opposed paradigms really only differ in maybe one or two concepts",
    "start": "1359540",
    "end": "1366849"
  },
  {
    "text": "So this sort of got me thinking, and you don't have to read [all] this as so. There's links at the end. Don't worry",
    "start": "1367340",
    "end": "1372340"
  },
  {
    "text": "But this got me thinking, okay? Well, you know a lot of the time I've been told I [feel] like as especially as kind of you know a",
    "start": "1373340",
    "end": "1379299"
  },
  {
    "text": "junior ish, Coder have been told a lot of things about these program these paradigms are super different, but",
    "start": "1380330",
    "end": "1385149"
  },
  {
    "text": "Are they all really that different? do they have things in common that we're kind of not seeing if we're getting so fixed in our ideas of one paradigm and",
    "start": "1385850",
    "end": "1393999"
  },
  {
    "start": "1386000",
    "end": "1768000"
  },
  {
    "text": "I start especially wondering about object-Oriented programming and functional programming which seem to be like placed in this epic rivalry in",
    "start": "1394130",
    "end": "1402819"
  },
  {
    "text": "Programming culture that like the die-hard functional programmers hate object-oriented Methods and object-oriented programmers are like you have schools [grows]",
    "start": "1403340",
    "end": "1411490"
  },
  {
    "text": "Everybody's fighting each other and saying these are super different, but maybe they have [more] in common than we thought [so]",
    "start": "1412040",
    "end": "1418899"
  },
  {
    "text": "[be] again the problem that they were both trying to solve [or] one of the problems were they were both trying to solve was kind of the rigidity and the and the",
    "start": "1419809",
    "end": "1426609"
  },
  {
    "text": "Complexity of the imperative paradigm [I] wasn't very good at managing Complexity and the problem one of the problems [on] the main issues that they both take with it is",
    "start": "1427160",
    "end": "1436719"
  },
  {
    "text": "Shared mutable state so both Hopi and functional programming reject this notion that we should have shared mutable state",
    "start": "1437179",
    "end": "1443799"
  },
  {
    "text": "They just do it in different ways so functional programming says just forget mutating anything just make everything",
    "start": "1444600",
    "end": "1450289"
  },
  {
    "text": "Immutable just forget state forget time and then you can share as much as you want you can pass around Data as much as you",
    "start": "1450809",
    "end": "1456559"
  },
  {
    "text": "want to as long as nobody's changing anything and each function is just churning out new Data that sort of replaces the old and",
    "start": "1456559",
    "end": "1463100"
  },
  {
    "text": "Olp also rejected it it just said okay. You know let's Divide up the state into little chunks little cells that all keep to themselves",
    "start": "1464009",
    "end": "1473000"
  },
  {
    "text": "so that we're not sharing any of it, and in that way, we'll kind of avoid those problems, so",
    "start": "1473509",
    "end": "1477229"
  },
  {
    "text": "Going back to this idea about the central the core of the object-oriented paradigm Alan Kay said in around 1998 that he's sorry that he coined the term objects for",
    "start": "1480210",
    "end": "1490970"
  },
  {
    "text": "Object-Oriented programming because it gets people to focus on the lesser idea the big idea He says is messaging right so what we were saying before that these kind of these cells that make up the universe of a program",
    "start": "1491309",
    "end": "1501439"
  },
  {
    "text": "Send messages back and forth and that's how we get a larger system So to understand that a little bit better. Let's take a look okay. This is some very very very complicated",
    "start": "1501570",
    "end": "1511579"
  },
  {
    "text": "object-Oriented code right here but it usually looks something like that right we have like thing dot method and then some arguments and",
    "start": "1512190",
    "end": "1518268"
  },
  {
    "text": "in The way that I 1k would like us to [think] about Okie what we're really saying when we say thing dot do some stuff is",
    "start": "1519480",
    "end": "1526849"
  },
  {
    "text": "we're sending a message to the object in this case thing and the content of that message is usually the method name and",
    "start": "1527399",
    "end": "1534768"
  },
  {
    "text": "then some arguments that some data that we want it to do something with",
    "start": "1535110",
    "end": "1539299"
  },
  {
    "text": "so Some languages like for example in [Ruby] Apparently you have the luxury of making that's actually explicit you can either say you know sing dot do some stuff or you can explicitly",
    "start": "1540330",
    "end": "1551059"
  },
  {
    "text": "Use this dot send method which shows us that we're really like sending a message to the object where the first thing in that message is a",
    "start": "1551129",
    "end": "1559908"
  },
  {
    "text": "symbol representing the name of the method that we're trying to call and then the rest is the",
    "start": "1560250",
    "end": "1565129"
  },
  {
    "text": "Arguments of the Data that were passing along, so here's some also extremely useful [object-oriented] code",
    "start": "1565769",
    "end": "1573439"
  },
  {
    "text": "Let's say we had a type of object called a friend because we all like to be friends we don't want to be arguing like the opie and the functional programming people [a]",
    "start": "1575600",
    "end": "1583909"
  },
  {
    "text": "friend all does is remember that it has a certain list of friends, and then it can tell you whether somebody is a",
    "start": "1584640",
    "end": "1590300"
  },
  {
    "text": "Friend of me, so if I have a buddy is an instance of friend who's friends with Allen and Alonzo",
    "start": "1590820",
    "end": "1596480"
  },
  {
    "text": "I can ask you know buddy. Are you? [friends] with guy and of course the answer is false because I'm not [sure] guys buddy",
    "start": "1596850",
    "end": "1603859"
  },
  {
    "text": "But when we think about that is South park, yes, oh",
    "start": "1605130",
    "end": "1609559"
  },
  {
    "text": "When we think about that in the in the message notation that we were just looking at we could replace this call buddy that is",
    "start": "1610890",
    "end": "1616970"
  },
  {
    "text": "friend of guy with buddy dot [send] and then send the message where the the first part [of] the content is the name of the method that we're trying to call and",
    "start": "1616970",
    "end": "1624860"
  },
  {
    "text": "The rest is the data that we're passing to it But we could just clean up the syntax there a little bit right like why do we really need that dot [send] [for] if we're?",
    "start": "1625110",
    "end": "1632480"
  },
  {
    "text": "always sending messages couldn't we just get rid of that and then it starts to look a lot [more] like a function and",
    "start": "1632480",
    "end": "1638389"
  },
  {
    "text": "so we could actually write our we could create our friend object a",
    "start": "1639150",
    "end": "1643790"
  },
  {
    "text": "Functional way by representing it at the closure Because all a friend has to do is it has to when we create it it has to remember its list of friends",
    "start": "1645030",
    "end": "1654439"
  },
  {
    "text": "Allen and Alonzo and then it has to be able to tell me for any given name whether it's friends with that person whose name it is so",
    "start": "1654930",
    "end": "1662810"
  },
  {
    "text": "Instead of having a class definition with you know constructor method and some some object methods on there",
    "start": "1663210",
    "end": "1669648"
  },
  {
    "text": "I could set this up as a closure where I'm kind of Remembering by wrapping the context in which the object itself [dude] the the instance is created",
    "start": "1669650",
    "end": "1678620"
  },
  {
    "text": "I'm wrapping that up into this Disclosure and then I can pass as an argument just the name of a method in this case",
    "start": "1679290",
    "end": "1686689"
  },
  {
    "text": "It's only set up to support one method. I can pass that in with whatever arguments and",
    "start": "1686690",
    "end": "1691340"
  },
  {
    "text": "Get basically the same Behavior that I was having before so like this is functional",
    "start": "1692010",
    "end": "1697130"
  },
  {
    "text": "This is object oriented This is functional. This is object oriented like they're really not that different",
    "start": "1697890",
    "end": "1706249"
  },
  {
    "text": "And so when we look at this code, this is this is functional right? I mean, it's not in haskell. That's okay",
    "start": "1708530",
    "end": "1714019"
  },
  {
    "text": "[but] it's all it's all pure function. That's using these very very functional ideas of you know higher order closures, Etc",
    "start": "1715140",
    "end": "1721849"
  },
  {
    "text": "but in a sense if I look at the bottom two lines, [I'm] a Programmer I end up having [to] kind of interact with this code in a similar way to what I was using",
    "start": "1722010",
    "end": "1730639"
  },
  {
    "text": "Whatever used to doing in object-oriented Programming so this is kind of one [of] those optical",
    "start": "1730800",
    "end": "1735710"
  },
  {
    "text": "Illusion things [note] that the old lady is that the young girl is at the dock is it the rabbit? It's like it's sort of both depending on my frame of mind",
    "start": "1735930",
    "end": "1744110"
  },
  {
    "text": "and that's where we get back into the idea of a paradigm being just a Worldview a mindset that you're using so this is we could actually like write",
    "start": "1744110",
    "end": "1752750"
  },
  {
    "text": "Object-Oriented code in the Lambda calculus if we wanted to you wouldn't probably do that",
    "start": "1753180",
    "end": "1758330"
  },
  {
    "text": "But you could because it's all about how we conceive [of] the universe of our program and what what makes it up?",
    "start": "1758330",
    "end": "1764239"
  },
  {
    "text": "And how those entities will talk to each other? Okay, so but then everybody wants to know right especially with this [o] p versus [Sp]",
    "start": "1764240",
    "end": "1773179"
  },
  {
    "start": "1768000",
    "end": "1906000"
  },
  {
    "text": "Rivalry which paradigm is the best? Well you probably [guess]? What answer is going to come up to this and I think David Nolan also did a bit of foreshadowing?",
    "start": "1774450",
    "end": "1782300"
  },
  {
    "text": "Yesterday, but let's go back to this quote from George box. He said all models are wrong",
    "start": "1782880",
    "end": "1787340"
  },
  {
    "text": "but that wasn't the end of the quote [these] of all models are wrong, but some are useful and",
    "start": "1788040",
    "end": "1793129"
  },
  {
    "text": "This is really the main idea paradigms are useful in different ways",
    "start": "1795090",
    "end": "1799999"
  },
  {
    "text": "So going back to [our] Newton versus einstein thing like there is a sense in which Newton was wrong about",
    "start": "1800460",
    "end": "1807169"
  },
  {
    "text": "The universe and his model Maybe doesn't match the universe as closely as Einsteins model But that doesn't mean that we need to throw out newton's mechanics entirely. It's still super useful for certain situations like",
    "start": "1807600",
    "end": "1818809"
  },
  {
    "text": "Dealing with things on the surface of the earth that aren't going very fast building bridges. You know sending [rockets] to",
    "start": "1819690",
    "end": "1826849"
  },
  {
    "text": "Places nearby we can do all of that stuff using the Newtonian model. It's still very useful and in some sense",
    "start": "1827580",
    "end": "1833059"
  },
  {
    "text": "[it's] probably more useful to think about cars, and you know a Apple falling out of trees in the Newtonian paradigm",
    "start": "1833060",
    "end": "1840680"
  },
  {
    "text": "I'm then thinking about them as being able to be converted to energy and whatever and thinking in a kind of Einstein [ian's] way",
    "start": "1840740",
    "end": "1846140"
  },
  {
    "text": "depending on the problem You're trying to solve the old model might still be very useful and so peter van roy the guy who made the paradigm diagram also",
    "start": "1846570",
    "end": "1854960"
  },
  {
    "text": "comes back to this idea He says each paradigm supports a set of concepts that make it the best for a certain kind of problem",
    "start": "1855210",
    "end": "1861709"
  },
  {
    "text": "So these little bundles of concepts which are our paradigms They are all particularly well matched or particularly poorly matched to certain problems",
    "start": "1861990",
    "end": "1872030"
  },
  {
    "text": "so it's really just a matter of matching up your problem that you have with the best paradigm for solving it [and]",
    "start": "1872100",
    "end": "1877610"
  },
  {
    "text": "George box says that you know then the question to ask of a given model, isn't whether it's true because you know it's not",
    "start": "1879480",
    "end": "1886760"
  },
  {
    "text": "But you can ask is the model illuminating does it tell us something new does it give us some",
    "start": "1887520",
    "end": "1892759"
  },
  {
    "text": "Some insight into the particular problem that makes it easier to solve and sometimes switching your paradigm",
    "start": "1893130",
    "end": "1899510"
  },
  {
    "text": "makes a problem that was impossible under your old paradigm super trivial under the new one, so",
    "start": "1900000",
    "end": "1905300"
  },
  {
    "start": "1906000",
    "end": "2560000"
  },
  {
    "text": "[then] this brings us to the question of what can a paradigm teach us as programmers what can you teach us as a community of programmers and what kind of teach us as individuals and",
    "start": "1906809",
    "end": "1914929"
  },
  {
    "text": "Each paradigm kind of has something unique to contribute to the dialogue so I think that imperative programming is a really great teacher of how to be explicit and how to focus on and understand the",
    "start": "1916740",
    "end": "1929000"
  },
  {
    "text": "Implementation as being crucial to the particular program, so that's why you still see You know a lot of really really important especially like performance critical code written in this imperative paradigm because it",
    "start": "1929309",
    "end": "1940400"
  },
  {
    "text": "Forces you to think about those very very precise small Changes that need to be made for the implementation to work",
    "start": "1940800",
    "end": "1948859"
  },
  {
    "text": "So for example. This is [something] I ran into Hawaii. I gave a talk last year at Europe I thought about a strange little thing I found out in python",
    "start": "1949890",
    "end": "1957349"
  },
  {
    "text": "did you know that in python if you have a for loop like on the left here for look that doesn't do anything useful but",
    "start": "1957350",
    "end": "1963020"
  },
  {
    "text": "It does it a lot of times if you put that inside a function and you [call] the function that actually runs way faster than if you just",
    "start": "1963020",
    "end": "1969619"
  },
  {
    "text": "execute the for loop in the global context So I thought this was sort of weird and as an object-oriented",
    "start": "1970200",
    "end": "1975579"
  },
  {
    "text": "Python programmer I was looking at these two pieces of code and was like I don't see the difference if anything there's like more lines",
    "start": "1976160",
    "end": "1981759"
  },
  {
    "text": "on the on the right side, so Shouldn't it have more to do it has to like create a function object and yadda yadda",
    "start": "1981760",
    "end": "1987640"
  },
  {
    "text": "But if you think really imperative ly about this and you drill [down] And you actually look at what the [C] python interpreter is seeing",
    "start": "1988130",
    "end": "1995500"
  },
  {
    "text": "If we look at the byte code that we disassembled for each of these these code objects you can actually see that",
    "start": "1995870",
    "end": "2001949"
  },
  {
    "text": "There's a difference so The the python code on the left is using some kind of action called store name and load name and on the right",
    "start": "2001950",
    "end": "2008488"
  },
  {
    "text": "It's using something called store fast and load fast which must be faster It's in the name",
    "start": "2008490",
    "end": "2014950"
  },
  {
    "text": "but it turns out that this is because you know [python] has this the solution everything's an object and whatever and the Objects that it's using to represent these",
    "start": "2014950",
    "end": "2021690"
  },
  {
    "text": "These values are different so on the left hand side just as a factoid about python in the global context we don't know how many",
    "start": "2022419",
    "end": "2028888"
  },
  {
    "text": "Variables are going to be declaring a program So the global context has to be big it has to be this big [dictionary] that [it] kind of remembers anything we throw at it",
    "start": "2029200",
    "end": "2035760"
  },
  {
    "text": "But when we define a function on the right hand side The function body already contains all of the variables that it's going to contain it's we know exactly how many values are going to have",
    "start": "2035830",
    "end": "2044729"
  },
  {
    "text": "to remember there so we can pre allocate a little array for all those values and then when I need to go retrieve one of Them it's just a really quick. You know Index lookup into there, so the the",
    "start": "2044730",
    "end": "2054570"
  },
  {
    "text": "difference in these is not something that the high-level python sort of Way of thinking this object-oriented way of thinking was able to help me understand",
    "start": "2055330",
    "end": "2064229"
  },
  {
    "text": "I had to go down into the details and if you're interested [in] this kind of thing and how like Getting really nitty-Gritty into the details of the implementation can help you become a better programmer. I highly recommend that you check out",
    "start": "2064230",
    "end": "2074520"
  },
  {
    "text": "Julia Evans [works] because she gives lots of great talks and writes really cool blog articles and Dean's about all the amazing Wizard",
    "start": "2075369",
    "end": "2082078"
  },
  {
    "text": "Magic you can learn by doing this kind of imperative exploration okay, what about",
    "start": "2082240",
    "end": "2088770"
  },
  {
    "text": "Declarative programming this is kind of the counterpart the yin to imperative programming the yang or vice versa",
    "start": "2089109",
    "end": "2094979"
  },
  {
    "text": "If imperative programming teaches us to be explicit and get nitty-Gritty into the implementation",
    "start": "2095500",
    "end": "2100199"
  },
  {
    "text": "Declarative programming teaches us to get really abstract and to really think more about the domain",
    "start": "2101350",
    "end": "2106259"
  },
  {
    "text": "And the big picture ideas that we're trying to represent in our program and not how they're implemented",
    "start": "2106760",
    "end": "2111590"
  },
  {
    "text": "so Martin Fowler II spoke [yesterday] has a great book called domain-specific languages where he talks about this idea of having kind of a",
    "start": "2112470",
    "end": "2120560"
  },
  {
    "text": "Better domain model of what it is you're trying to do that that can sometimes make your life as a programmer and especially",
    "start": "2121860",
    "end": "2127519"
  },
  {
    "text": "Your your task of communicating to let's say your clients a lot easier when you have code that looks like this",
    "start": "2127890",
    "end": "2133670"
  },
  {
    "text": "So this is a Java code in which we have an embedded or when he calls an internal DSL domain-specific language?",
    "start": "2133740",
    "end": "2140750"
  },
  {
    "text": "Where we are focused on? representing calendars and the things that they have like events which have dates and times and location and",
    "start": "2141030",
    "end": "2149990"
  },
  {
    "text": "[somewhere] we also have a bunch of Java code that's telling the telling us exactly how",
    "start": "2150900",
    "end": "2156619"
  },
  {
    "text": "We're remembering those events and exactly how we're associating various bits of Data with them, and how it's all implemented",
    "start": "2156930",
    "end": "2162500"
  },
  {
    "text": "But that's not important when we're thinking declaratively what we want to be thinking about is like really the big picture",
    "start": "2162500",
    "end": "2167540"
  },
  {
    "text": "What am [I] trying to do here? I'm trying to represent a calendar I'm trying to represent events and this can be sometimes a much easier way of thinking about certain problems when the",
    "start": "2167540",
    "end": "2176300"
  },
  {
    "text": "Implementation is [not] what's at Stake. We can change the implementation But the the big picture stays the same",
    "start": "2176460",
    "end": "2182600"
  },
  {
    "text": "So really having both of those mentalities both of those worldviews they complement each other we can switch between them to do whatever is necessary for the particular problem at hand and",
    "start": "2183450",
    "end": "2195499"
  },
  {
    "text": "the same is true of object-oriented programming and functional programming so if Object-oriented programming teaches us you know this idea of objects of kind of cells that I'll communicate with one another",
    "start": "2195990",
    "end": "2204859"
  },
  {
    "text": "Sometimes this can be a better fit for a particular problem then even an amazing program like functional programming",
    "start": "2205890",
    "end": "2211369"
  },
  {
    "text": "So this is from a cool article by Eric fellows whose name. I probably just very much mispronounced. Sorry",
    "start": "2211830",
    "end": "2217999"
  },
  {
    "text": "It's called y [oo] [p] matters in f sharp, so he's an f sharp Co-direct Sharp is a really interesting language. It's like Ml inspired functional programming, but it also supports",
    "start": "2218450",
    "end": "2228889"
  },
  {
    "text": "Object-Oriented programming is kind of a generally secondary paradigm and So he's saying okay if we're trying to make an api which has to be kind of aware [of] some sort of context of Diff",
    "start": "2229740",
    "end": "2239060"
  },
  {
    "text": "and dependencies that I have typically as a Functional F-Sharp programmer my first instinct would be to do what's on the top here?",
    "start": "2239140",
    "end": "2246010"
  },
  {
    "text": "Which is to have a module where we have a bunch of different function? But each [of] those functions have to know about the dependencies that we pass them all [Anna's] arguments",
    "start": "2246010",
    "end": "2253000"
  },
  {
    "text": "This is sort of okay If you have just a couple of things but as you get more and more dependencies and more more functions as things get more complex this starts to get really ugly and",
    "start": "2253220",
    "end": "2261399"
  },
  {
    "text": "Inelegant and kind of hard to to keep track of and it stops being the best fit for that particular case whereas",
    "start": "2261710",
    "end": "2269139"
  },
  {
    "text": "Since object-oriented program is all about interfaces. It's all about kind of this like Molecule Membranes that",
    "start": "2270110",
    "end": "2275680"
  },
  {
    "text": "Take inputs and give outputs Perhaps object-oriented programming is a better fit for this problem where we could just define an api that you know when you construct it you",
    "start": "2276740",
    "end": "2285490"
  },
  {
    "text": "Pass in the dependencies once and then all of its methods kind of know that from their internal encapsulated context",
    "start": "2285490",
    "end": "2293349"
  },
  {
    "text": "so this is just an example of how you know sometimes bringing in a little bit o p into your",
    "start": "2293840",
    "end": "2298690"
  },
  {
    "text": "Functional code can also sometimes be a good idea and of course it works the other way around as well",
    "start": "2298940",
    "end": "2304779"
  },
  {
    "text": "functional programming can teach us the mindset of specializing of focusing on doing one particular transformation to the data like one little station on our assembly line and",
    "start": "2305840",
    "end": "2316719"
  },
  {
    "text": "Jessica, Kerr actually a couple years ago. I think 2014 [maybe] [I] go to Chicago talked about this",
    "start": "2317990",
    "end": "2323319"
  },
  {
    "text": "She was talking about how she had this she was white boarding a probably you know a program on her",
    "start": "2324170",
    "end": "2329558"
  },
  {
    "text": "that she needed to make that that had to deal with deposits and Payments and kind of pair them up",
    "start": "2330290",
    "end": "2335470"
  },
  {
    "text": "And she found herself making this really convoluted diagram where she to like go back and forth and say okay",
    "start": "2335470",
    "end": "2340480"
  },
  {
    "text": "If that happens then we need to loop back over here And it became really kind of hard to to reason about and also hard to",
    "start": "2340480",
    "end": "2346268"
  },
  {
    "text": "Understand how as a team they should go though out like putting this together so she said that one she started when she switched into a functional Mindset it became it sort of",
    "start": "2346820",
    "end": "2355599"
  },
  {
    "text": "Fell into place, so it became a notion of an issue of transforming data",
    "start": "2356660",
    "end": "2361838"
  },
  {
    "text": "We have two kind of Data streams coming in they get filtered in certain ways They they get merged together and then they go to a store and each of those things is like one little transformation",
    "start": "2361840",
    "end": "2370450"
  },
  {
    "text": "That we can make which we can then break up into chunks as the yellow boxes here, and then I can divvy it up",
    "start": "2370790",
    "end": "2376690"
  },
  {
    "text": "She says you know I can divvy it up to my team [members] and everybody has you know [just] their one little chunks to work on and we put it all back together at the end and",
    "start": "2376690",
    "end": "2383469"
  },
  {
    "text": "It works great, and the [Whiteboard] is way cleaner like the whiteboard makes much more sense [so] sometimes the functional approach can make a convoluted",
    "start": "2383470",
    "end": "2391150"
  },
  {
    "text": "what am I trying to do here situation just almost trivial and",
    "start": "2392060",
    "end": "2396279"
  },
  {
    "text": "So this is this is kind of the take away like none of these paradigms are",
    "start": "2397310",
    "end": "2401860"
  },
  {
    "text": "Best all models are wrong But each is best for something each is best at something like all of them are special snowflakes",
    "start": "2402650",
    "end": "2410410"
  },
  {
    "text": "And they all have their [unique] moments in the sun Sounds a little hippie dippie, but I think it's actually true, and this is you know what what Peter van was talking [about]",
    "start": "2410410",
    "end": "2419079"
  },
  {
    "text": "They're kind of like a set of concepts. That's paired particularly well with a set of problem and",
    "start": "2419080",
    "end": "2424269"
  },
  {
    "text": "So that's why fluid says in his turing a word paper. He [said] that we actually need more",
    "start": "2425210",
    "end": "2432220"
  },
  {
    "text": "Paradigms he says the advancement of the general art of programming requires the continuing",
    "start": "2433160",
    "end": "2437949"
  },
  {
    "text": "invention and elaboration of paradigms [I] think this is also What David Nolan was touching on last night this idea that we?",
    "start": "2438200",
    "end": "2444910"
  },
  {
    "text": "We need to develop new models new worldviews new ways of thinking",
    "start": "2445400",
    "end": "2450099"
  },
  {
    "text": "So that we can add those to our kind of toolbox We already have a bunch of you know pretty cool paradigms peter and roy like diagram them all out for us",
    "start": "2450740",
    "end": "2458920"
  },
  {
    "text": "There we have a lot, but we could always use core and advancing the state of the art of [programming] will involve",
    "start": "2459170",
    "end": "2464288"
  },
  {
    "text": "advancing our worldviews coming up with different ways of conceiving of the universe of programs and",
    "start": "2465500",
    "end": "2470229"
  },
  {
    "text": "So if the advancement of the general art means we need new paradigms then the advancement of the art of the individual programmer",
    "start": "2471050",
    "end": "2478420"
  },
  {
    "text": "Requires that they expand their repertory of paradigms so as individuals we need to get comfortable with all of the paradigms",
    "start": "2479360",
    "end": "2486610"
  },
  {
    "text": "We can we need to add as many of these tools to our personal tool boxes as possible",
    "start": "2486610",
    "end": "2491259"
  },
  {
    "text": "so the idea here [is] that As individuals we should really not get set in our ways. Just like as a the community we should try to",
    "start": "2493070",
    "end": "2501100"
  },
  {
    "text": "Explore new things like what David Nolan was talking about last night And one great way to do that is to work in multi-paradigm languages",
    "start": "2501710",
    "end": "2510289"
  },
  {
    "text": "So like we mentioned f sharps before is a language that lets you pull in a little bit of olp",
    "start": "2510290",
    "end": "2514850"
  },
  {
    "text": "sometimes even if most of the time you're [in] a functional Mindset and Other [parrot] other languages like python for example is very",
    "start": "2515430",
    "end": "2522498"
  },
  {
    "text": "oriented but you can also write it as just scripts and imperative file or you can even do a little bit of functional programming it's",
    "start": "2523470",
    "end": "2528949"
  },
  {
    "text": "Maybe not the [best] fit, and there are other languages like like erlang for example where it's functional at core",
    "start": "2528950",
    "end": "2535399"
  },
  {
    "text": "but then the the notion of this kind of actor model all that starts you start thinking in a more kind of",
    "start": "2535500",
    "end": "2540919"
  },
  {
    "text": "Object-oriented more like cells communicating with each other sort of way So working in languages that support multiple paradigms is a great way to be able to",
    "start": "2541590",
    "end": "2549679"
  },
  {
    "text": "Switch between those mindsets and that way you don't have to learn a whole new Syntax when you want to learn a paradigm you can just try something new out and the language already comfortable with",
    "start": "2550110",
    "end": "2559578"
  },
  {
    "start": "2560000",
    "end": "2948000"
  },
  {
    "text": "[okay], so we're going to last on time. So what's the point then for this whole thing?",
    "start": "2560730",
    "end": "2565250"
  },
  {
    "text": "[basically] [I] point has been this paradigms enable programming just like paradigms enable scientific progress according to kuhn",
    "start": "2566550",
    "end": "2574069"
  },
  {
    "text": "we need as a community to be able to agree on a certain model of programs and a model of",
    "start": "2574350",
    "end": "2581270"
  },
  {
    "text": "programming and what it means to write programs what it means to write good programs in order for us to get anything done [and]",
    "start": "2581640",
    "end": "2588379"
  },
  {
    "text": "In that sense the paradigm you use also sort of defines The task of Programming the the [worldview] that you're in",
    "start": "2588870",
    "end": "2596989"
  },
  {
    "text": "As we saw earlier it tells you not only what entities make up a program, but also",
    "start": "2597600",
    "end": "2602539"
  },
  {
    "text": "What type of problems it makes sense to solve and what type of solutions?",
    "start": "2603150",
    "end": "2608480"
  },
  {
    "text": "It makes sense to bring to those problems, so in that way it defines like what it means to do programming",
    "start": "2608480",
    "end": "2613909"
  },
  {
    "text": "So this is why it's really important that we Not fight the paradigms that we work in that we understand them and we kind of embrace them for like their beautiful",
    "start": "2614550",
    "end": "2624019"
  },
  {
    "text": "Snowflake nests, and we we use them to solve the programs that they're best of the problems that they're best at",
    "start": "2624240",
    "end": "2629300"
  },
  {
    "text": "but we remain open to Shift to a new paradigm as soon as those anomalies [start] accumulating and we realize that we're looking at a bunch of really combo",
    "start": "2629970",
    "end": "2638419"
  },
  {
    "text": "[would] code That's super hard to understand super hard to [refactor] super hard to teach the new DEv on the team like what's going on in this",
    "start": "2638540",
    "end": "2645110"
  },
  {
    "text": "Codebase those are kind of moments where it's great to be open to shift to a new way of thinking about it and",
    "start": "2645110",
    "end": "2651199"
  },
  {
    "text": "The main point is just basically the point that had that [Floyd] made in 1979 which I think it's kind of interesting cuz we don't really have a whole ton of new paradigm since then",
    "start": "2652740",
    "end": "2662749"
  },
  {
    "text": "[which] is maybe a little bit what David no one was getting at last night, so this is something that we all together and individually",
    "start": "2663570",
    "end": "2670489"
  },
  {
    "text": "Should be doing is kind of focusing on This this meta level of like what am I even doing here? What am I conceiving of a program is made up of and?",
    "start": "2671100",
    "end": "2680959"
  },
  {
    "text": "How am I? Approaching the task of programming given that model that worldview, so if we can go out of this",
    "start": "2681510",
    "end": "2689390"
  },
  {
    "text": "Attending a little bit more to the paradigms we use I'll be happy that's sort of what I want you all to take away",
    "start": "2689970",
    "end": "2695509"
  },
  {
    "text": "So that's all I had big thanks to the recurse Center community Especially these folks who helped me put together the materials for this talk and big things to go to Chicago for having me",
    "start": "2695940",
    "end": "2705169"
  },
  {
    "text": "Thank you Here are some references to anybody watch",
    "start": "2705750",
    "end": "2713350"
  },
  {
    "text": "Okay anybody has questions, or you know just wants to engage in some philosophical, dialogue ah",
    "start": "2714710",
    "end": "2722559"
  },
  {
    "text": "Technology now we have about five minutes for questions. So if you can stick around You might even have a chance to ask another one, so I have one here [that] says",
    "start": "2723950",
    "end": "2732790"
  },
  {
    "text": "Would you mix paradigms in the same system, or is it more a question of picking the right paradigm for this particular problem?",
    "start": "2733400",
    "end": "2739808"
  },
  {
    "text": "well, I think you know it depends on the Granularity that we're looking at I personally think that there is absolutely nothing wrong with mixing",
    "start": "2740840",
    "end": "2749110"
  },
  {
    "text": "Paradigms at a system as long as you know you're working [in] the same in a language that supports them both It becomes a little bit more complicated when you have to start mixing and matching different",
    "start": "2749270",
    "end": "2756640"
  },
  {
    "text": "Languages because then you know maybe different people on the team at different levels of comfort with those languages But let's say you're working in a language like python so and my company for example. We have a lot [of] python and",
    "start": "2756710",
    "end": "2766779"
  },
  {
    "text": "Different parts of it are structured in different ways and sometimes you find that within a generally",
    "start": "2768290",
    "end": "2773739"
  },
  {
    "text": "object-Oriented part of the Codebase there are some chunks [that] are really like look functional that are that are very pure and",
    "start": "2774410",
    "end": "2781119"
  },
  {
    "text": "Isolated and so we can actually do that We can have an object that does a lot of its computation in a pure functional style",
    "start": "2781580",
    "end": "2787180"
  },
  {
    "text": "But is nevertheless kind of a wrapped in this object Interface, so yeah, you can mix them",
    "start": "2787180",
    "end": "2792279"
  },
  {
    "text": "[click] one here does assembly slash machine language belong to any of the paradigms. Well. I would say that it's imperative I",
    "start": "2796820",
    "end": "2804100"
  },
  {
    "text": "Suppose, it's possible to conceive of assembly foetid some other paradigm, but I've never really seen it. Maybe somebody else has but",
    "start": "2806510",
    "end": "2813370"
  },
  {
    "text": "generally assembly code is extremely explicit and has this very usually like when you read the human readable forms of it like the",
    "start": "2813890",
    "end": "2820298"
  },
  {
    "text": "Python bytecode that I just thought that I just showed it usually has these very command oriented",
    "start": "2820430",
    "end": "2825970"
  },
  {
    "text": "Phrases right like load this push this onto the stack. Do you know pop these things Etc?",
    "start": "2826400",
    "end": "2831518"
  },
  {
    "text": "So it has this kind of do this then that and we have to execute it in that particular order So it's pretty I think it's a pretty good actually a pretty good representation of the imperative paradigm",
    "start": "2831520",
    "end": "2841599"
  },
  {
    "text": "It's also important to remember that our machines are like stuck in that paradise They don't have the luxury that we have of being able to sit comfortably",
    "start": "2841640",
    "end": "2849328"
  },
  {
    "text": "Between different paradigms and different [worldviews] [their] like yet Tell me what to do and what order. I need to do it in because I am stupid",
    "start": "2849940",
    "end": "2856230"
  },
  {
    "text": "I [don't] know yeah, so hope that answered that question",
    "start": "2856230",
    "end": "2859980"
  },
  {
    "text": "Our micro service is a paradigm Ah-so, I personally think micro services have kind of",
    "start": "2862360",
    "end": "2869789"
  },
  {
    "text": "reinvented Allen [Kay's] ideal vision of Okey That's sort of the personal conclusion that I've come [due] that this idea of breaking things up into little chunks",
    "start": "2870310",
    "end": "2879929"
  },
  {
    "text": "But then all pass messages back [and] Forth together and create a larger system. That's sort of more decentralized in a way",
    "start": "2880030",
    "end": "2886260"
  },
  {
    "text": "I think that actually kind of fits when you read when you read what Alan kay writes about",
    "start": "2886260",
    "end": "2892630"
  },
  {
    "text": "Object-Oriented programming I don't know if I have the reference up there But he talks it and there's a paper called the history an early history of small talk. Where he sort of",
    "start": "2892630",
    "end": "2901110"
  },
  {
    "text": "explains his ideas about this and it sounds a lot like what we're doing with micro services to me, so",
    "start": "2901330",
    "end": "2906000"
  },
  {
    "text": "But then again if you think about like I said you know functional programming and opie They're kind of a duck rabbit",
    "start": "2906730",
    "end": "2912039"
  },
  {
    "text": "situation if you ask me and so we can also consider that if a micro service is just responsible for [getting] its input and",
    "start": "2912040",
    "end": "2917130"
  },
  {
    "text": "Getting its output you could also conceive of it as pure functions, and we're all just you know passing things from one into another",
    "start": "2917200",
    "end": "2922649"
  },
  {
    "text": "It's all a matter of perspective That's what we have so far of anyone's has any any any last-minute questions. [now's] the time to [ask] them",
    "start": "2923500",
    "end": "2933179"
  },
  {
    "text": "No takers all right in that case give it up for Angela, please. Thanks very much",
    "start": "2934900",
    "end": "2940889"
  }
]