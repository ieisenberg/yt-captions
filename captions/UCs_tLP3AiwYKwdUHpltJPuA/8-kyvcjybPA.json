[
  {
    "start": "0",
    "end": "97000"
  },
  {
    "text": "[Music]",
    "start": "2540",
    "end": "11619"
  },
  {
    "text": "thanks okay so before we get started uh the minor exercise of raising your hand",
    "start": "16640",
    "end": "22240"
  },
  {
    "text": "who of you is using the ER stack okay I take that as majority is",
    "start": "22240",
    "end": "27679"
  },
  {
    "text": "anyone using Shield already for security it's like two did anyone do his own homegrown solution to secure elastic",
    "start": "27679",
    "end": "35239"
  },
  {
    "text": "search and is happy with it oh that went down fast okay um so this talk is about",
    "start": "35239",
    "end": "42160"
  },
  {
    "text": "U Shield which is a security extension to elastic search but I just don't want to talk about its features um I also",
    "start": "42160",
    "end": "49079"
  },
  {
    "text": "want to talk about like why did we do it and how did we do it like what was our thought process to like write Shield um",
    "start": "49079",
    "end": "56719"
  },
  {
    "text": "to get up and running with Shield to make it secure what's the design high and stuff like that um I will cover a",
    "start": "56719",
    "end": "62719"
  },
  {
    "text": "couple of the features um how easy it is to get up and running because this is one of the important parts of elastic",
    "start": "62719",
    "end": "68000"
  },
  {
    "text": "search it should be easy to get up and running and it should also be easy to get up and running with Shield because",
    "start": "68000",
    "end": "73320"
  },
  {
    "text": "security itself is hard enough we try to not stand in the way in terms of the uh implementation of",
    "start": "73320",
    "end": "78840"
  },
  {
    "text": "security um I will cover like a couple of use cases what can it be used for I'm going to cover like what will be next",
    "start": "78840",
    "end": "85280"
  },
  {
    "text": "because Shield basically just started this year with the first official release um and yeah we obviously have",
    "start": "85280",
    "end": "91600"
  },
  {
    "text": "time for Q&A and if you have questions just raise your hand and I will hopefully see it uh before we get going just a quick",
    "start": "91600",
    "end": "99119"
  },
  {
    "start": "97000",
    "end": "258000"
  },
  {
    "text": "history of elastic because I think it's important to know that elastic search or that the company is not only covering",
    "start": "99119",
    "end": "105200"
  },
  {
    "text": "elastic search anymore but a couple of products so the company was founded 2012",
    "start": "105200",
    "end": "110960"
  },
  {
    "text": "uh and it was basically to provide an ecosystem and uh economic system around elastic search uh the year after we had",
    "start": "110960",
    "end": "118880"
  },
  {
    "text": "the lack of rashed KH and Jordan Cel joining so we created the X stack with elastic search lockstation kban and a",
    "start": "118880",
    "end": "125600"
  },
  {
    "text": "Hado integration we also created the elastic search clients which is a small layer between HTTP and any programming",
    "start": "125600",
    "end": "131680"
  },
  {
    "text": "language like uh python Ruby PHP Pearl because it's that important today um and",
    "start": "131680",
    "end": "139800"
  },
  {
    "text": "at that point in time in 2014 we launched the first commercial product being Marvel um 2014 we also find out it takes",
    "start": "139800",
    "end": "147360"
  },
  {
    "text": "some time to actually build a team around the Onan product like kib or lock stash uh that eats a fair share of time",
    "start": "147360",
    "end": "154000"
  },
  {
    "text": "and this year uh Shield when GA um packet beats and found joint elastic",
    "start": "154000",
    "end": "160080"
  },
  {
    "text": "search and Watcher our next commercial plugin is about to be released um one of the interesting Parts about elastic",
    "start": "160080",
    "end": "166319"
  },
  {
    "text": "itself is we a completely distributed company um we have a couple of offices like here in Amsterdam Mountain View",
    "start": "166319",
    "end": "172920"
  },
  {
    "text": "London Phoenix bin uh I myself live in Munich being the only one basically have",
    "start": "172920",
    "end": "179560"
  },
  {
    "text": "my small little room doing home office uh I joined in March 2013 and I work on elastic search and shield so if you have",
    "start": "179560",
    "end": "186040"
  },
  {
    "text": "questions on both of them I'm happy to answer them uh if you have questions after the talk I'll be downstairs at the",
    "start": "186040",
    "end": "191799"
  },
  {
    "text": "booth um so just come by ask questions and yeah let's let's get up",
    "start": "191799",
    "end": "197000"
  },
  {
    "text": "and running so the first question is why did we do shield and back in the days when you",
    "start": "197000",
    "end": "203840"
  },
  {
    "text": "installed elastic search there was no security out of the box so you all know this wonderful feature Peter already",
    "start": "203840",
    "end": "209920"
  },
  {
    "text": "talked about it this morning if you execute the delete statement at the/ URL all your data is gone we considered it",
    "start": "209920",
    "end": "215920"
  },
  {
    "text": "feature once you executed it you did not consider it a feature obviously um the question is should everybody be able to",
    "start": "215920",
    "end": "222040"
  },
  {
    "text": "delete data not and our stance was with security it's a tricky topic either you",
    "start": "222040",
    "end": "227560"
  },
  {
    "text": "do it right or you don't do it at all if you do anything in between it's a bad idea usually because you introduce",
    "start": "227560",
    "end": "234319"
  },
  {
    "text": "inconsistencies um so elastic surge didn't have any encrypted communication elastic surge didn't have any authorization or authentication no audit",
    "start": "234319",
    "end": "241400"
  },
  {
    "text": "logging and like as a company grew the customers grew as well in size and for",
    "start": "241400",
    "end": "247560"
  },
  {
    "text": "many companies and users it's like either there or it's not if there's no security we cannot use this product so",
    "start": "247560",
    "end": "254680"
  },
  {
    "text": "we thought okay we need to do something about it luckily the community thought about the same and there were many",
    "start": "254680",
    "end": "260919"
  },
  {
    "start": "258000",
    "end": "400000"
  },
  {
    "text": "people implementing their own Solutions and like one of the well-known ones was I just put an engine X in front of",
    "start": "260919",
    "end": "266400"
  },
  {
    "text": "elastic search and then everything is kind of secured and and you could configure engine X or any other web",
    "start": "266400",
    "end": "272120"
  },
  {
    "text": "server like uh Apache or Lighty you name it um to block by URL to block by HTTP",
    "start": "272120",
    "end": "278320"
  },
  {
    "text": "method to block by IP so you had some control of basically rejecting requests and allowing rights only by a certain IP",
    "start": "278320",
    "end": "285479"
  },
  {
    "text": "or whatever um you could Implement basic user management using basic ORS and like",
    "start": "285479",
    "end": "290960"
  },
  {
    "text": "using HD Pass based files in aach or any other web server you could Al use aliases and filters to like um yeah",
    "start": "290960",
    "end": "298960"
  },
  {
    "text": "reduce the number of documents a single user is able to see um and it worked it",
    "start": "298960",
    "end": "305360"
  },
  {
    "text": "had some basic functionality for basic security but how to solve multi-index operations",
    "start": "305360",
    "end": "312160"
  },
  {
    "text": "like imagine you have two indices and you filter by regular expression and you want one user only to access your lock",
    "start": "312160",
    "end": "318440"
  },
  {
    "text": "data um in this example there's the evil index which user shouldn't have access to and it's just somewhere in between so",
    "start": "318440",
    "end": "324720"
  },
  {
    "text": "you need some smart handling of the URL in engine X to make sure that this index doesn't get filtered",
    "start": "324720",
    "end": "330639"
  },
  {
    "text": "uh or use you use aliases and you always make sure there's only one index being queried but it's something you need to",
    "start": "330639",
    "end": "336280"
  },
  {
    "text": "take into account and you need to keep in mind in order to secure a system uh bulk and multi operations are",
    "start": "336280",
    "end": "342919"
  },
  {
    "text": "another problem engine X is really nice to configure URL end points and to only allow certain certain HTTP methods or",
    "start": "342919",
    "end": "350360"
  },
  {
    "text": "something like that but if you want to filter buik request you actually have to go inside of the um HTP body and find",
    "start": "350360",
    "end": "358440"
  },
  {
    "text": "out is this an index the user is supposed to write or is this not an index and this is really tedious and",
    "start": "358440",
    "end": "364000"
  },
  {
    "text": "this also implies that you have to pass the body twice once with engine X and elastic surge is doing the same",
    "start": "364000",
    "end": "370160"
  },
  {
    "text": "obviously to find out where to index the data so you have twice the work the next thing is um elastic search",
    "start": "370160",
    "end": "378800"
  },
  {
    "text": "is not only HTTP we have our own protocol called the transport protocol which is used for Noe to node",
    "start": "378800",
    "end": "383840"
  },
  {
    "text": "communication so you need to make sure that no one is able to bypass your tiny little engine X config figuration which",
    "start": "383840",
    "end": "390160"
  },
  {
    "text": "is supposed to be secure um it's easy you can put a firewall in between uh and",
    "start": "390160",
    "end": "395400"
  },
  {
    "text": "off you go everything's blocked everything is fine um if you take a look at this",
    "start": "395400",
    "end": "401280"
  },
  {
    "start": "400000",
    "end": "705000"
  },
  {
    "text": "you're going to find out that you have some sort of operational overhead at this stage you have elastic search which",
    "start": "401280",
    "end": "406400"
  },
  {
    "text": "SES the data you have engine X which is used for ACLS you have potentially engine X which is used for user",
    "start": "406400",
    "end": "412759"
  },
  {
    "text": "management but maybe you have somewhere an Lup server which is used from user management so you basically start to",
    "start": "412759",
    "end": "419000"
  },
  {
    "text": "scatter all of your configuration across you use your firewall for IP filtering and the operational overhead of running",
    "start": "419000",
    "end": "425639"
  },
  {
    "text": "this especially if you want to scale and you're a big company and you need to ask one department for uh changing your",
    "start": "425639",
    "end": "431960"
  },
  {
    "text": "firewall configuration you need to ask the other department for changing your engine X configuration it just gets huge",
    "start": "431960",
    "end": "437400"
  },
  {
    "text": "because you don't have a central pcee to configure this and when the operational overhead gets too huge people don't use",
    "start": "437400",
    "end": "443280"
  },
  {
    "text": "systems and this was one of the thoughts behind Shield we want to keep things easy you can solve security like this",
    "start": "443280",
    "end": "450319"
  },
  {
    "text": "but it's going to be a lot more work okay so how did we do it one of the",
    "start": "450319",
    "end": "457720"
  },
  {
    "text": "things most people know is that elastic surch is highly pluggable and one of our first considerations when writing",
    "start": "457720",
    "end": "464319"
  },
  {
    "text": "something like security is that you don't want to have elastic search the open source version and then you have elastic search the secure version and",
    "start": "464319",
    "end": "471280"
  },
  {
    "text": "you have to maintain two different elastic search versions this would just kill your productivity as part of the internal team um because elastic search",
    "start": "471280",
    "end": "478720"
  },
  {
    "text": "is modular un we didn't have to do this we just had to create the right hooks inside of elastic search so we could plug in a security",
    "start": "478720",
    "end": "485960"
  },
  {
    "text": "plugin and that's what we basically did it's it's much more easy uh it's much",
    "start": "485960",
    "end": "491159"
  },
  {
    "text": "easier so a lot of work when we buil Shield was actually to change the core to support all of those features because",
    "start": "491159",
    "end": "498000"
  },
  {
    "text": "the core was not built with security mind at the beginning this means we had to change like 50% of the work for",
    "start": "498000",
    "end": "504120"
  },
  {
    "text": "shield was in the core to actually get the core where we wanted it to have um",
    "start": "504120",
    "end": "509159"
  },
  {
    "text": "and then after we did this we were finally able to build security as a plug-in and uh another thing is that we",
    "start": "509159",
    "end": "516880"
  },
  {
    "text": "don't have some sort of first or second class protocols so HTTP is as important to be secured as a transport protocol",
    "start": "516880",
    "end": "523360"
  },
  {
    "text": "when they talk into the notet toote communication and the last part obviously became more important as the",
    "start": "523360",
    "end": "530160"
  },
  {
    "text": "number of products inside of our company grew is the integration part it's not sufficient to just secure elastic search",
    "start": "530160",
    "end": "536440"
  },
  {
    "text": "we also need to make sure that kimana keeps working with it we need need to make sure that lock stash is able to index into elastic search uh even if",
    "start": "536440",
    "end": "544000"
  },
  {
    "text": "it's secured with Shield uh stuff like that so integration is really important as well as testing in this",
    "start": "544000",
    "end": "550040"
  },
  {
    "text": "case one of the nice Parts about this is if you secure elastic search um and you",
    "start": "550040",
    "end": "555480"
  },
  {
    "text": "do this on on an elastic search level um you basically get security for kibana as",
    "start": "555480",
    "end": "561720"
  },
  {
    "text": "well because kibana just queres elastic search and we just need to pass through all of the authentication information",
    "start": "561720",
    "end": "567519"
  },
  {
    "text": "and we don't need to add security inside of ke everything is just there and",
    "start": "567519",
    "end": "572839"
  },
  {
    "text": "ready so how how does it work or how does it look like um if you take a stock",
    "start": "572839",
    "end": "579279"
  },
  {
    "text": "elastic search which is the green line um the basic idea behind Shield is that the hooks are at a certain positions we",
    "start": "579279",
    "end": "586160"
  },
  {
    "text": "just put an additional layer around elastic search and this layer is doing all of the authentication of",
    "start": "586160",
    "end": "591480"
  },
  {
    "text": "authorization checks so a request comes in it contains some authentication information username password session",
    "start": "591480",
    "end": "598120"
  },
  {
    "text": "You Name It We Don't Care um and basically the layer around first checks does this user exist if it exists",
    "start": "598120",
    "end": "605800"
  },
  {
    "text": "is the user allowed to execute this action and only if this both is granted and given we just basically pass it onto",
    "start": "605800",
    "end": "612160"
  },
  {
    "text": "the elastic search core which is doing the work as usual and yeah you either return in 200",
    "start": "612160",
    "end": "618240"
  },
  {
    "text": "okay or you just return that user is not allowed to to execute this action um",
    "start": "618240",
    "end": "624120"
  },
  {
    "text": "also the layer can just do IP filtering like we can check at this layer already is the IP where this request is coming",
    "start": "624120",
    "end": "630320"
  },
  {
    "text": "from authenticated or do we allow it or do we reject",
    "start": "630320",
    "end": "635920"
  },
  {
    "text": "it again one of the yeah basic ideas um behind elastic search and security was",
    "start": "636079",
    "end": "642600"
  },
  {
    "text": "that it should be really really easy to get up and running and all you have to do is basically you have to install",
    "start": "642600",
    "end": "648120"
  },
  {
    "text": "elastic search stock elastic search 1.6 um there's a licensing plugin for Shield",
    "start": "648120",
    "end": "653680"
  },
  {
    "text": "or for commercial products and you need to install Shield so it's basically just two plug-in installations as well",
    "start": "653680",
    "end": "660120"
  },
  {
    "text": "and once you start elastic search after you did this you can immediately see that it's working because by default it just rejects every request if you",
    "start": "660120",
    "end": "666720"
  },
  {
    "text": "haven't configured anything you need to add a user to actually get back even the the basic request at the SL URL by",
    "start": "666720",
    "end": "673800"
  },
  {
    "text": "default you get an authorization eror okay so before we start with what",
    "start": "673800",
    "end": "681120"
  },
  {
    "text": "any questions about this great so what kind of features do we",
    "start": "681120",
    "end": "687120"
  },
  {
    "text": "have um the first one is IP filtering as I said you can completely implement",
    "start": "687120",
    "end": "692160"
  },
  {
    "text": "this in your firewall configuration if you want but it might actually be a lot of work if you have like adding or if",
    "start": "692160",
    "end": "698040"
  },
  {
    "text": "you keep adding or removing notes continuously and you don't want to change the configuration somewhere else",
    "start": "698040",
    "end": "703160"
  },
  {
    "text": "all the time um the IP filtering is basically just a simple parameter uh in the elastic search yl",
    "start": "703160",
    "end": "710519"
  },
  {
    "start": "705000",
    "end": "1037000"
  },
  {
    "text": "file which is shield. transport. filter and you can add IP addresses which should be allowed or rejected so in this",
    "start": "710519",
    "end": "717519"
  },
  {
    "text": "example I'm basically rejecting the whole class CNET using the the sit notation here and I'm allowing a single",
    "start": "717519",
    "end": "723440"
  },
  {
    "text": "IP I could also just write underscore all in the deny parameter and it would",
    "start": "723440",
    "end": "728760"
  },
  {
    "text": "reject any incoming connection um one important part is that the setting can be updated dynamically",
    "start": "728760",
    "end": "735639"
  },
  {
    "text": "because if you put it in the configuration file and you add a new note you would have to restart the note in order to take the configuration into",
    "start": "735639",
    "end": "741959"
  },
  {
    "text": "effect but using the cluster update settings API you can change it at runtime so you can add nodes remove",
    "start": "741959",
    "end": "747440"
  },
  {
    "text": "nodes and change the setting if you want um yeah this this filter is basically um",
    "start": "747440",
    "end": "754639"
  },
  {
    "text": "internally we use NY for network communication and basically uh this IP filter just kicks in first checks if the",
    "start": "754639",
    "end": "761360"
  },
  {
    "text": "incoming IP of a t6p connection is supposed to be allowed and closes a connection if it doesn't so it's a",
    "start": "761360",
    "end": "766519"
  },
  {
    "text": "simple check we even do this before we do SSL negotiation for example uh",
    "start": "766519",
    "end": "771839"
  },
  {
    "text": "because it does make a lot of sense to spend CPU Cycles in SSL negotiation if you then reject the request",
    "start": "771839",
    "end": "778120"
  },
  {
    "text": "afterwards okay that's the quick introduction into",
    "start": "778120",
    "end": "784440"
  },
  {
    "text": "into IP filtering um encrypted communication uh when do you need it why",
    "start": "784440",
    "end": "790160"
  },
  {
    "text": "do you need it one reason might be that you want to use it because um you want",
    "start": "790160",
    "end": "795959"
  },
  {
    "text": "to use https for external communication so if you have an HTTP client accessing you data um another reason might be that",
    "start": "795959",
    "end": "803600"
  },
  {
    "text": "you don't know enough about your infrastructure if it's secure like take AWS for example you don't know who's in",
    "start": "803600",
    "end": "809680"
  },
  {
    "text": "between you don't know how big the distance between two servers is maybe they're in the same Zone but maybe there",
    "start": "809680",
    "end": "815600"
  },
  {
    "text": "are still potential hackers in between which are able to read your clear Text data so if you don't know about your",
    "start": "815600",
    "end": "821839"
  },
  {
    "text": "infrastructure encryption even from not to no makes a lot of sense if you're absolutely sure that you have a secure",
    "start": "821839",
    "end": "828360"
  },
  {
    "text": "network maybe the notet to node communication doesn't need to be encrypted at all it's it's a matter of taste and maybe a matter of requirement",
    "start": "828360",
    "end": "835199"
  },
  {
    "text": "depending on your setup um so how does the configuration book and I wrote that there's a key",
    "start": "835199",
    "end": "841800"
  },
  {
    "text": "store required key store are basically it's a Java invention and the key store",
    "start": "841800",
    "end": "847360"
  },
  {
    "text": "is basically just a container to like handle certificates in Java um if you use Apache or engine X or something like",
    "start": "847360",
    "end": "854120"
  },
  {
    "text": "that you don't use a specific files but you just refer to the certificates as clear text files and in Java you need to",
    "start": "854120",
    "end": "859880"
  },
  {
    "text": "put them into a specific format so the Java application can read it and this is",
    "start": "859880",
    "end": "865160"
  },
  {
    "text": "basically the the key store configuration which is mentioned here so you need a path which is a file to this key store um and you need a",
    "start": "865160",
    "end": "873360"
  },
  {
    "text": "password uh the password is basically just to unlock this key store so it can be read uh since elastic search 1.6 you",
    "start": "873360",
    "end": "880519"
  },
  {
    "text": "can also read the password on Startup so you don't have to store it in the configuration file if you think it's",
    "start": "880519",
    "end": "885680"
  },
  {
    "text": "it's a very important secure password um so you're going to get prompted when you start elastic",
    "start": "885680",
    "end": "891959"
  },
  {
    "text": "search um you can configure SSL or TLS um based on the transport so if you just",
    "start": "891959",
    "end": "898519"
  },
  {
    "text": "want to sec secure HTTP uh you can just configure this setting if you want to secure HTP and",
    "start": "898519",
    "end": "903720"
  },
  {
    "text": "the transport protocol so the note to node communication you can do this as well who of you works with SSL and has a",
    "start": "903720",
    "end": "910320"
  },
  {
    "text": "fun of dealing with certificates and Casas and stuff like that awesome when I said fun everyone",
    "start": "910320",
    "end": "917600"
  },
  {
    "text": "raised his hand that's scary SSL is really it's complex and hard to get",
    "start": "917600",
    "end": "922680"
  },
  {
    "text": "right and one of the things that you shouldn't do which you can do is that you use self-signed certificates which",
    "start": "922680",
    "end": "929519"
  },
  {
    "text": "basically means you don't have a CAA you have a single certificate and when you have two noes they have to sign each",
    "start": "929519",
    "end": "934759"
  },
  {
    "text": "other certificate when you at a third note each note again has to sign those certificates so when you have 10 notes",
    "start": "934759",
    "end": "941839"
  },
  {
    "text": "every certificate needs to be signed with the certificate of the other note and this doesn't scale you can do this",
    "start": "941839",
    "end": "947720"
  },
  {
    "text": "but only because you can you should not the correct solution is to use actually a CA which signs each certificate once",
    "start": "947720",
    "end": "954600"
  },
  {
    "text": "and because it's signed by the ca it's done then this certificate is considered",
    "start": "954600",
    "end": "959639"
  },
  {
    "text": "trusted and this is how you should usually do this everything else is just a maintenance overhead and you should",
    "start": "959639",
    "end": "965399"
  },
  {
    "text": "refrain from that um yeah you can use a different config um for HTP and transport we also",
    "start": "965399",
    "end": "973199"
  },
  {
    "text": "have the notion of profiles in the lastic search since 1.4 which basically allows you to uh listen on a different",
    "start": "973199",
    "end": "980639"
  },
  {
    "text": "IP address and a different port so elastic search can listen on several IP port combinations um and you can even",
    "start": "980639",
    "end": "987079"
  },
  {
    "text": "configure certain certain of those combinations that they are only considered to have incoming client",
    "start": "987079",
    "end": "992480"
  },
  {
    "text": "traffic so if you use the Java API and you configure those explicitly you can",
    "start": "992480",
    "end": "998000"
  },
  {
    "text": "configure Shield to automatically reject requests which will never come from the outside but are supposed to be sent",
    "start": "998000",
    "end": "1003480"
  },
  {
    "text": "inside of a cluster like Shard level requests um and you could also configure",
    "start": "1003480",
    "end": "1009319"
  },
  {
    "text": "uh another setting you can do if you use the Java client is that the external communication from the Java client is encrypted but the notet to node",
    "start": "1009319",
    "end": "1015720"
  },
  {
    "text": "communication internally is not encrypted if you want it if you use SSL I would highly recommend",
    "start": "1015720",
    "end": "1022480"
  },
  {
    "text": "you to use Java 8 because SSL and encryption performance is much more faster because it uses the CPU",
    "start": "1022480",
    "end": "1029038"
  },
  {
    "text": "extensions which exist for AES encryption for example Java 7 doesn't support this",
    "start": "1029039",
    "end": "1035640"
  },
  {
    "text": "yet okay let's talk about authentication who are you the useless thing of",
    "start": "1035640",
    "end": "1040959"
  },
  {
    "start": "1037000",
    "end": "1239000"
  },
  {
    "text": "authentication is that you supply a username and a password and the service",
    "start": "1040959",
    "end": "1046038"
  },
  {
    "text": "receiving the username and the password goes somewhere and validates that you actually are user and that you actually",
    "start": "1046039",
    "end": "1052520"
  },
  {
    "text": "have this password um the off mechanisms in Shield are called reals and reals can have like",
    "start": "1052520",
    "end": "1059960"
  },
  {
    "text": "different implementations right now they're three and the next release of Shield will have fourth one the P pki",
    "start": "1059960",
    "end": "1066360"
  },
  {
    "text": "pki i1 the simplest one is the es users realm it's basically just a file based",
    "start": "1066360",
    "end": "1072280"
  },
  {
    "text": "realm and we'll see a couple of examples for this in a second the second one is the ELD up real so if you don't want to",
    "start": "1072280",
    "end": "1077679"
  },
  {
    "text": "manage users yourself but but you already have most of your users uh in some Lup directory or in some active",
    "start": "1077679",
    "end": "1083440"
  },
  {
    "text": "directory that's the ad real H you can just use this for authentication one of the nice Parts",
    "start": "1083440",
    "end": "1089480"
  },
  {
    "text": "here is that reals can be chained so you can have an es users real and then an addab one the main reason for this is",
    "start": "1089480",
    "end": "1097080"
  },
  {
    "text": "that you may want to be able to still access your node even if the EP real is actually down if someone is doing Lop",
    "start": "1097080",
    "end": "1103280"
  },
  {
    "text": "maintenance and you can't get any monitoring statistics out of your cluster because your user is in this Lop",
    "start": "1103280",
    "end": "1108880"
  },
  {
    "text": "directory as well it's bad and that's a moment when you should have certain users in the es users rooms and other in",
    "start": "1108880",
    "end": "1115400"
  },
  {
    "text": "the Lup directory and there's support for caching so imagine you index with",
    "start": "1115400",
    "end": "1121480"
  },
  {
    "text": "100,000 requests a second what you don't want to do is Hammer the Lop server behind that also with 100,000",
    "start": "1121480",
    "end": "1127640"
  },
  {
    "text": "authentication requests a second because that's that's not really sustainable so there's a caching mechanism in between",
    "start": "1127640",
    "end": "1133799"
  },
  {
    "text": "which can can be used for reals and you can clear that one as well",
    "start": "1133799",
    "end": "1139240"
  },
  {
    "text": "the real the pka pki real basically allows you to use client side certificates so what this means is that",
    "start": "1139240",
    "end": "1147000"
  },
  {
    "text": "you give every client who wants to access elastic search its own certificate and the certificate contains",
    "start": "1147000",
    "end": "1153480"
  },
  {
    "text": "some more information which user this is and instead of supplying a username and a password with each request the",
    "start": "1153480",
    "end": "1160120"
  },
  {
    "text": "identity of the users automatically defined when the connection is initiated",
    "start": "1160120",
    "end": "1165159"
  },
  {
    "text": "uh with SSL so this means you don't have to care for for any username password in your",
    "start": "1165159",
    "end": "1170880"
  },
  {
    "text": "applications and you can potentially just reject this certificate if you don't want to use it anymore as part of",
    "start": "1170880",
    "end": "1176360"
  },
  {
    "text": "the trust store which is in",
    "start": "1176360",
    "end": "1179880"
  },
  {
    "text": "use okay how does this look like so this is a basic configuration for the rims uh",
    "start": "1182280",
    "end": "1188120"
  },
  {
    "text": "again this is the elastic search yaml File um you can see here the the name of the reals you can freely choose those",
    "start": "1188120",
    "end": "1195440"
  },
  {
    "text": "the type is important and the order and what you should usually always do is that the es users reals has the order",
    "start": "1195440",
    "end": "1201600"
  },
  {
    "text": "zero which is the real which is going to be tried first and that's the local one this is always going to be the fastest",
    "start": "1201600",
    "end": "1207480"
  },
  {
    "text": "and doesn't need any any network round trip and yeah the other ones can be stacked arbitrarily but I highly suspect",
    "start": "1207480",
    "end": "1214480"
  },
  {
    "text": "you won't have more than three Realms in your regular configuration um yeah the first one is",
    "start": "1214480",
    "end": "1221080"
  },
  {
    "text": "usually used for stuff like monitoring users if you have a NE a user which queres every minute for some nous check",
    "start": "1221080",
    "end": "1227840"
  },
  {
    "text": "or whatever you would not want to put this into Lup and it's it's likely like if you're",
    "start": "1227840",
    "end": "1234480"
  },
  {
    "text": "in a big Corporation you don't have El up right access anyway to add new users so how does the users the es users",
    "start": "1234480",
    "end": "1242640"
  },
  {
    "start": "1239000",
    "end": "1319000"
  },
  {
    "text": "real actually work um at the end it's just some configuration files which are",
    "start": "1242640",
    "end": "1247720"
  },
  {
    "text": "local and there's a CLI on top of that so instead of you using an Editor to to",
    "start": "1247720",
    "end": "1252960"
  },
  {
    "text": "handle adding or removing users there's a couple of command line tools which ship with Shield",
    "start": "1252960",
    "end": "1259679"
  },
  {
    "text": "um internally we basically create two files and those two files are continuously watched by elastic search",
    "start": "1259679",
    "end": "1265240"
  },
  {
    "text": "so as soon as you change them and they are being written uh we basically reload the whole",
    "start": "1265240",
    "end": "1271840"
  },
  {
    "text": "configuration and there's one users file which basically looks like the files from a HD passw they contain a username",
    "start": "1271840",
    "end": "1278000"
  },
  {
    "text": "and a password and there's a user roles file which is like Etc group at the end of the day which contains the username",
    "start": "1278000",
    "end": "1284559"
  },
  {
    "text": "and the groups the user belongs to",
    "start": "1284559",
    "end": "1289720"
  },
  {
    "text": "this is a kind of command line options you can execute um you can add a new user you can change the roles of a user",
    "start": "1289720",
    "end": "1297480"
  },
  {
    "text": "this one adds the admin role and removes the user role you can list all users and",
    "start": "1297480",
    "end": "1302880"
  },
  {
    "text": "their specific roles there's also check that if a user has certain role that don't exist you will get a warning",
    "start": "1302880",
    "end": "1309159"
  },
  {
    "text": "because you most likely have a configuration issue there and you can delete users but again this is just a",
    "start": "1309159",
    "end": "1314440"
  },
  {
    "text": "tiny little layer on top of the files one of the features you can also",
    "start": "1314440",
    "end": "1320320"
  },
  {
    "start": "1319000",
    "end": "1408000"
  },
  {
    "text": "have with the authentication is anonymous access um by default we just reject any request in Shield that is not",
    "start": "1320320",
    "end": "1327360"
  },
  {
    "text": "associated with the user um because we think this is an error either you provide the user or you don't in a",
    "start": "1327360",
    "end": "1333440"
  },
  {
    "text": "secure cluster but if you want to create something like a readon system so that",
    "start": "1333440",
    "end": "1338919"
  },
  {
    "text": "you only need authentication and authorization if you write data this actually might make sense so you can",
    "start": "1338919",
    "end": "1344720"
  },
  {
    "text": "always read data you can always search for data then you can enable the Anonymous user specify some username",
    "start": "1344720",
    "end": "1351159"
  },
  {
    "text": "specify some roles which a request without any authentication info should have and from then on this",
    "start": "1351159",
    "end": "1358000"
  },
  {
    "text": "works this has been added in Shield 1.1 so whenever you install an up toate Shield this is up and",
    "start": "1358000",
    "end": "1365720"
  },
  {
    "text": "running okay the second big thing is the authorization so are you allowed to do",
    "start": "1365720",
    "end": "1371840"
  },
  {
    "text": "that um and this is the this is a configuration file it's a yaml file so again we use the same kind of syntax you",
    "start": "1371840",
    "end": "1378279"
  },
  {
    "text": "know from the elastic search configuration um and you basically Define a role the name of a role admin",
    "start": "1378279",
    "end": "1385760"
  },
  {
    "text": "and you define what kind of privileges this role is supposed to be allowed to execute so the admin user is allowed to",
    "start": "1385760",
    "end": "1391679"
  },
  {
    "text": "do anything in this example and we basically decide between three different",
    "start": "1391679",
    "end": "1396760"
  },
  {
    "text": "namings here so we have a role which is a name set of permissions we have a permission for example all is a",
    "start": "1396760",
    "end": "1404400"
  },
  {
    "text": "permission which is very coose um and there are Privileges and privileges are",
    "start": "1404400",
    "end": "1410919"
  },
  {
    "start": "1408000",
    "end": "1480000"
  },
  {
    "text": "basically uh the single operations so um a permission like all is just a group of",
    "start": "1410919",
    "end": "1419159"
  },
  {
    "text": "privileges so a couple of more examples here um you have an example that you",
    "start": "1420360",
    "end": "1427120"
  },
  {
    "text": "have a user role which is allowed to read all indices and read again is just a grouping for stuff like executing",
    "start": "1427120",
    "end": "1434279"
  },
  {
    "text": "searches executing suggestions executing gets for single documents so everything",
    "start": "1434279",
    "end": "1439880"
  },
  {
    "text": "that allows you to extract data out of an index the events user is a bit more limited because you can only read data",
    "start": "1439880",
    "end": "1447000"
  },
  {
    "text": "with an index that starts with events underscore but you can still read data and you can go even further you can",
    "start": "1447000",
    "end": "1453679"
  },
  {
    "text": "define a lock file user readon role that's only allowed to read data from this",
    "start": "1453679",
    "end": "1459240"
  },
  {
    "text": "decate something with 2011 in here um and this is basically the the",
    "start": "1459240",
    "end": "1465159"
  },
  {
    "text": "privileged example this user is only allowed to get data so it's not even allowed to search from the events index",
    "start": "1465159",
    "end": "1472440"
  },
  {
    "text": "and this is how you build your configuration and your roles inside of elastic",
    "start": "1472440",
    "end": "1478158"
  },
  {
    "text": "search okay the the last common feature here is the audit Trail um that's going",
    "start": "1479520",
    "end": "1485039"
  },
  {
    "start": "1480000",
    "end": "1546000"
  },
  {
    "text": "to be released in the next Shield version which is hopefully coming very soon um and the audit Trail",
    "start": "1485039",
    "end": "1492600"
  },
  {
    "text": "no this feature is already there an extension to this is missing so the audit Trail basically allows you to lock",
    "start": "1492600",
    "end": "1499880"
  },
  {
    "text": "every action which is being executed and you can decide about the granularity um you may want only you may",
    "start": "1499880",
    "end": "1507039"
  },
  {
    "text": "only want to know about um access violations so someone with an IP address that have been rejected can be locked",
    "start": "1507039",
    "end": "1513600"
  },
  {
    "text": "someone with broken authentication wrong password someone trying to execute an operation which he's not supposed to",
    "start": "1513600",
    "end": "1520679"
  },
  {
    "text": "execute so you can kind of configure the the granularity and the lock level here",
    "start": "1520679",
    "end": "1525919"
  },
  {
    "text": "but you can also just lock everything but this means every search request on every single shart will produce a lock",
    "start": "1525919",
    "end": "1531279"
  },
  {
    "text": "line so this is pretty rose um and it's disabled by default if you want audit enabled there's the the",
    "start": "1531279",
    "end": "1538559"
  },
  {
    "text": "configuration setting and the granularity is just in its own login configuration file which you can",
    "start": "1538559",
    "end": "1545398"
  },
  {
    "start": "1546000",
    "end": "1623000"
  },
  {
    "text": "set okay let's talk about integration here um as I said at the beginning uh we",
    "start": "1546039",
    "end": "1552480"
  },
  {
    "text": "have not only elastic search anymore so we need to take a bit more care of the different features and the different products um and the first integration is",
    "start": "1552480",
    "end": "1560000"
  },
  {
    "text": "pretty easy the transport client because it's a Java API we can just apply the same configuration we did for the for",
    "start": "1560000",
    "end": "1566080"
  },
  {
    "text": "elastic search itself um the lock stash with its elastic search outputs and its elastic search inputs basically needs a",
    "start": "1566080",
    "end": "1572600"
  },
  {
    "text": "configuration for username and password which it needs to send with every request whenever it's indexing",
    "start": "1572600",
    "end": "1577679"
  },
  {
    "text": "data um kibana 3 is pretty simple because it directly accesses elastic search and just uses the HTTP response",
    "start": "1577679",
    "end": "1584640"
  },
  {
    "text": "codes for authentication and stuff like that so it's just a open up Beto window",
    "start": "1584640",
    "end": "1590159"
  },
  {
    "text": "um kibana 4 right now also just forwards requests back and forth between elastic search in",
    "start": "1590159",
    "end": "1596399"
  },
  {
    "text": "the browser so it also just forward the htb basic off information um Watcher needs to work",
    "start": "1596399",
    "end": "1603000"
  },
  {
    "text": "with Shield obviously it's the next commercial plugin um Marvel needs to work with Shield Marvel has basically",
    "start": "1603000",
    "end": "1609799"
  },
  {
    "text": "some buil-in reporter that continuously writ statistics into elastic search and this one also needs to supply",
    "start": "1609799",
    "end": "1615960"
  },
  {
    "text": "authentication information when writing data and that's the the kind of integration",
    "start": "1615960",
    "end": "1621440"
  },
  {
    "text": "we have and the interesting part is the transport client um this is a regular configuration for in transpor client you",
    "start": "1621440",
    "end": "1627760"
  },
  {
    "start": "1623000",
    "end": "1734000"
  },
  {
    "text": "configure cluster name and the the um connection where to connect to but the",
    "start": "1627760",
    "end": "1633799"
  },
  {
    "text": "interesting part is The Shield user configuration because whatever you put in here is used uh with every single",
    "start": "1633799",
    "end": "1641039"
  },
  {
    "text": "request being sent so this is a lock stash use case with every request that is being sent for indexing more lock",
    "start": "1641039",
    "end": "1647120"
  },
  {
    "text": "data or whatever data index with lock stash those credentials are added this works for lock stash but imagine you",
    "start": "1647120",
    "end": "1653360"
  },
  {
    "text": "have a web application which uses tenant based approach so that the user",
    "start": "1653360",
    "end": "1659080"
  },
  {
    "text": "depending on the user that is logged in in your session you want to write with different permissions uh this doesn't",
    "start": "1659080",
    "end": "1664600"
  },
  {
    "text": "work with this approach but what you can do is you can configure a header in every single request so you extract the",
    "start": "1664600",
    "end": "1670679"
  },
  {
    "text": "username out of the session of the user configure this for every index operation and you can be sure that the user is",
    "start": "1670679",
    "end": "1675919"
  },
  {
    "text": "only allowed to write in the inds you granted him to write",
    "start": "1675919",
    "end": "1680760"
  },
  {
    "text": "into okay uh couple of more use cases here and we will see a couple of configuration files we will see a couple",
    "start": "1681200",
    "end": "1687679"
  },
  {
    "text": "of yeah more common use cases and the first one is um the the monitoring",
    "start": "1687679",
    "end": "1693200"
  },
  {
    "text": "application so what's special about that usually monitoring doesn't need any right access it just reads data the",
    "start": "1693200",
    "end": "1700120"
  },
  {
    "text": "simple approach would be to Grant anomymous access to this however I'm not so sure if all of the note stats and",
    "start": "1700120",
    "end": "1706600"
  },
  {
    "text": "infos and IND statistics which may reveal a lot of information should be accessed in in a readon phase",
    "start": "1706600",
    "end": "1713399"
  },
  {
    "text": "you may want to protect those because they contain potentially sensitive data",
    "start": "1713399",
    "end": "1718440"
  },
  {
    "text": "um so what you can do is you just add a um a specific role which has the monitor",
    "start": "1718440",
    "end": "1723840"
  },
  {
    "text": "roles attached for indices and cluster Privileges and this means you can read all of the statistics which are used to",
    "start": "1723840",
    "end": "1730440"
  },
  {
    "text": "create the Marvel stats for example second us case is lock stash um",
    "start": "1730440",
    "end": "1736840"
  },
  {
    "start": "1734000",
    "end": "1769000"
  },
  {
    "text": "lock stash usually doesn't need any read access unless you use the elastic search input but I think 95% of the people are",
    "start": "1736840",
    "end": "1743320"
  },
  {
    "text": "just using the elastic search output through WR lock files or whatever data they have on lock stash and obviously",
    "start": "1743320",
    "end": "1749640"
  },
  {
    "text": "you need index permissions to your indices if you use the default configuration to all the lock Das Dash",
    "start": "1749640",
    "end": "1756120"
  },
  {
    "text": "indices um and you need to the allow of writing for index templates because when",
    "start": "1756120",
    "end": "1761279"
  },
  {
    "text": "lock starts up it tries to store an index template you can disable this on lock stash or you need to Grant the",
    "start": "1761279",
    "end": "1767039"
  },
  {
    "text": "permission uh then there's Marvel Marvel consists",
    "start": "1767039",
    "end": "1772200"
  },
  {
    "start": "1769000",
    "end": "1939000"
  },
  {
    "text": "of two components one component is used to display all of the metrics which are being stored the the monitoring part and",
    "start": "1772200",
    "end": "1779279"
  },
  {
    "text": "the other one is the component which reports and stores into elastic search and this one is called an agent and the",
    "start": "1779279",
    "end": "1786080"
  },
  {
    "text": "agent also needs to write uh index templates and get them and it needs to",
    "start": "1786080",
    "end": "1791559"
  },
  {
    "text": "write into the Marvel indices and create them because it also uses rolling indices per day",
    "start": "1791559",
    "end": "1798640"
  },
  {
    "text": "um on the other hand if you're a Marvel user using the Marvel component via the web the web front end thing um you need",
    "start": "1798640",
    "end": "1805440"
  },
  {
    "text": "to get information about the license you get to information about the noes and you need to have access to all of the",
    "start": "1805440",
    "end": "1810720"
  },
  {
    "text": "Marvel indices uh this is this is just another",
    "start": "1810720",
    "end": "1817000"
  },
  {
    "text": "yeah use case and we should talk about the kind of setup I think it's pretty common in e-commerce uh this is how I",
    "start": "1817000",
    "end": "1822880"
  },
  {
    "text": "started with elastic search um I used elastic search as a product search engine and",
    "start": "1822880",
    "end": "1828679"
  },
  {
    "text": "usually you have or you potentially have one component which is doing some sort of bulk index in the night like",
    "start": "1828679",
    "end": "1833960"
  },
  {
    "text": "reindexing all of your data um and this one needs to write into an index called",
    "start": "1833960",
    "end": "1839039"
  },
  {
    "text": "products underscore anything the idea behind this is that you that you have one index products one and another index",
    "start": "1839039",
    "end": "1846080"
  },
  {
    "text": "products two and you have an alias called products which always points to one of those indices and in the night",
    "start": "1846080",
    "end": "1851880"
  },
  {
    "text": "you execute a bulk indexing into the one index that is not used for Life searches then you wait until this is done and you",
    "start": "1851880",
    "end": "1858159"
  },
  {
    "text": "flip the switch and point the Alias to the other index so uh complete reindexing does not affect your search",
    "start": "1858159",
    "end": "1865159"
  },
  {
    "text": "your search that's currently going on um and if you have a bulk role which is basically just executing this nightly",
    "start": "1865159",
    "end": "1871480"
  },
  {
    "text": "Cron job you need to allow to write it to both of the indices you need to add this manage capabilities because you",
    "start": "1871480",
    "end": "1877320"
  },
  {
    "text": "need to fit the switch for the Alias um and you may want to add read capabilities as well to maybe ensure",
    "start": "1877320",
    "end": "1883399"
  },
  {
    "text": "that all of the data You' written is complete like counting it for example",
    "start": "1883399",
    "end": "1888919"
  },
  {
    "text": "um then you may have another process which continuously updates things over the day so for example if the stock",
    "start": "1888919",
    "end": "1895559"
  },
  {
    "text": "changes of a certain product you may want to update this on a per document base the moment it comes in instead of",
    "start": "1895559",
    "end": "1900799"
  },
  {
    "text": "having a nightly import job and this one interesting enough points to products so",
    "start": "1900799",
    "end": "1907159"
  },
  {
    "text": "it doesn't point to real index it's always only allowed to update the index",
    "start": "1907159",
    "end": "1913360"
  },
  {
    "text": "which the Alias is actually pointing to so this one always updates the life index",
    "start": "1913360",
    "end": "1918960"
  },
  {
    "text": "and it doesn't care if it's the products one or products 2 index and it can potentially also delete",
    "start": "1918960",
    "end": "1925639"
  },
  {
    "text": "documents the next role would be the application executing the searches itself so this one just needs the search",
    "start": "1925639",
    "end": "1932440"
  },
  {
    "text": "operation and the get operation that's potentially it everything around search no writing nothing like that uh you may",
    "start": "1932440",
    "end": "1939639"
  },
  {
    "start": "1939000",
    "end": "1978000"
  },
  {
    "text": "potentially have a monitoring role which needs to extract all the information you want to graph somewhere or this is",
    "start": "1939639",
    "end": "1944880"
  },
  {
    "text": "Marvel or you have your own homegrown graphing solution um and in addition you may have a sales representative because",
    "start": "1944880",
    "end": "1951840"
  },
  {
    "text": "you're also storing your your sales in the lastic search or some social events you want to read whatever so you have",
    "start": "1951840",
    "end": "1958840"
  },
  {
    "text": "additional tenant specific functionality okay so this was the kind",
    "start": "1958840",
    "end": "1965159"
  },
  {
    "text": "of kind of use cases if you read The Shield documentation we have kind of extensively covered this and explained",
    "start": "1965159",
    "end": "1970600"
  },
  {
    "text": "it when and how you need this um next chapter is what's next so Shield is",
    "start": "1970600",
    "end": "1976679"
  },
  {
    "text": "still pretty young uh the first release or the public release was in January of this year 1.0 now it's it's uh 1 Point",
    "start": "1976679",
    "end": "1984679"
  },
  {
    "start": "1978000",
    "end": "2216000"
  },
  {
    "text": "1.2 1.3 is coming up and we still have tons of ideas like how to extend it um",
    "start": "1984679",
    "end": "1991399"
  },
  {
    "text": "we may potentially want to simplify the SSL configuration because this whole key store handling Java people are used to",
    "start": "1991399",
    "end": "1997600"
  },
  {
    "text": "this but mere models are not uh we may want to simplify that a bit by just specifying certificates instead of",
    "start": "1997600",
    "end": "2004200"
  },
  {
    "text": "taking certificates putting it into a Java specific file and then telling some want to use this it's just a bit more",
    "start": "2004200",
    "end": "2010080"
  },
  {
    "text": "tedious um one of the weaknesses of the es users real is that you need to copy",
    "start": "2010080",
    "end": "2016080"
  },
  {
    "text": "the file that are generated to all of the notes because all of the notes need to have the information of usernames and",
    "start": "2016080",
    "end": "2021519"
  },
  {
    "text": "passwords and roles um you can automate this obviously with puppet whatever you name it um but it would be much more",
    "start": "2021519",
    "end": "2028440"
  },
  {
    "text": "easier if the cluster would do it we already have a component which talks over the network so might actually make",
    "start": "2028440",
    "end": "2034080"
  },
  {
    "text": "sense to to use this and So the plan is to have an apid driven user and rooll",
    "start": "2034080",
    "end": "2039320"
  },
  {
    "text": "management so you don't have to care for files stored on disk you just send a command to some API and we distribute",
    "start": "2039320",
    "end": "2045960"
  },
  {
    "text": "this over over the cluster um opening up the reals API is a",
    "start": "2045960",
    "end": "2051000"
  },
  {
    "text": "big topic for us so as soon as you start having a sort of modular mechanism for",
    "start": "2051000",
    "end": "2056919"
  },
  {
    "text": "authentication people are like yeah it would be great if you supported Jason web token we really want oo what about",
    "start": "2056919",
    "end": "2063040"
  },
  {
    "text": "Cabos and all the things and we really want a session based authen ication",
    "start": "2063040",
    "end": "2068158"
  },
  {
    "text": "mechanism because right now you always have to sply username and password with every request but it would be nice if",
    "start": "2068159",
    "end": "2073440"
  },
  {
    "text": "you had something that times out after some point in time um we could write all of those ourselves but this would be",
    "start": "2073440",
    "end": "2080358"
  },
  {
    "text": "really really tedious and people would always have want to have another real around that um so our idea is that we",
    "start": "2080359",
    "end": "2087638"
  },
  {
    "text": "basically open up the whole API around that that we have tell people this is how you implement your own realm we",
    "start": "2087639",
    "end": "2093118"
  },
  {
    "text": "already have caching in place and stuff like that so you can just reuse a lot of components think of elastic search",
    "start": "2093119",
    "end": "2098440"
  },
  {
    "text": "plugins but just a plugin for shield on top of that um another thing is field level",
    "start": "2098440",
    "end": "2104040"
  },
  {
    "text": "security everything I was talking about was basically not on index level so you can protect an index that it's not being",
    "start": "2104040",
    "end": "2110240"
  },
  {
    "text": "able to read you can use aliases to make sure that the user can only read certain parts of an index but a user can always",
    "start": "2110240",
    "end": "2118079"
  },
  {
    "text": "read the full document or it can there's nothing in between um but if you have document that contain really sensitive",
    "start": "2118079",
    "end": "2124280"
  },
  {
    "text": "data you may want to make sure that these documents can be searched for but you don't want to return this data and",
    "start": "2124280",
    "end": "2130400"
  },
  {
    "text": "you want to make sure that some users cannot even search for certain fields and this is field level security we have",
    "start": "2130400",
    "end": "2136680"
  },
  {
    "text": "some ideas about this we have some prototypes going to that direction this implementation is tricky and potentially",
    "start": "2136680",
    "end": "2143359"
  },
  {
    "text": "has a performance impact as well so it will take some time until we get up with the solution but this is something which",
    "start": "2143359",
    "end": "2148640"
  },
  {
    "text": "is up on our Ro map because it's a wellknown requirement and the last part which is",
    "start": "2148640",
    "end": "2154119"
  },
  {
    "text": "being worked on right now is the um audit Trail I just talked about which is currently written into a lock file might",
    "start": "2154119",
    "end": "2161040"
  },
  {
    "text": "actually just make sense to write it into elastic search because then you can search the audit Trail um and another",
    "start": "2161040",
    "end": "2167160"
  },
  {
    "text": "nice feature is that you could use Watcher and get automatically notified in case you have a certain amount of uh",
    "start": "2167160",
    "end": "2172760"
  },
  {
    "text": "login failures or security violations or stuff like that so reusing stuff makes a lot of sense and so the next release is",
    "start": "2172760",
    "end": "2180200"
  },
  {
    "text": "able to actually um inex the audit train into elastic search instead of writing it into",
    "start": "2180200",
    "end": "2185720"
  },
  {
    "text": "file yeah Cabos is is another thing uh actually Java has pretty pretty good",
    "start": "2185720",
    "end": "2190800"
  },
  {
    "text": "support for Cabos so maybe we can come up with another real there as well um",
    "start": "2190800",
    "end": "2196400"
  },
  {
    "text": "kibana integration is another topic we want to share so that users can only see their specific dashboards instead of all",
    "start": "2196400",
    "end": "2202520"
  },
  {
    "text": "of them um but this are all things which are on the kind of long-term road map so we don't have definitive dates for",
    "start": "2202520",
    "end": "2210160"
  },
  {
    "text": "that okay um I think I'm almost done um couple of resources before we're",
    "start": "2210160",
    "end": "2217200"
  },
  {
    "start": "2216000",
    "end": "2329000"
  },
  {
    "text": "done uh there's a shield documentation available online uh there's a talk by URI bones also the kind of uh yeah team",
    "start": "2217200",
    "end": "2225079"
  },
  {
    "text": "lead behind behind Shield um there's another webinar if you want to know more",
    "start": "2225079",
    "end": "2232200"
  },
  {
    "text": "um there's a discuss Forum so we recently switched our forums away from Google Groups to discuss which is under",
    "start": "2232200",
    "end": "2238680"
  },
  {
    "text": "discuss. elastic Co there's a specific Shield Forum so if you try it out and you run against any wall please please",
    "start": "2238680",
    "end": "2245240"
  },
  {
    "text": "please please write uh we give our best best to answer so but just make sure you tell us when something is",
    "start": "2245240",
    "end": "2252040"
  },
  {
    "text": "broken uh yeah if you want to read stuff uh for the first book I heard you just have to ask a single question it must be",
    "start": "2252040",
    "end": "2257960"
  },
  {
    "text": "good so um this is a great book about search in general um if you work a lot",
    "start": "2257960",
    "end": "2263760"
  },
  {
    "text": "with SSL and TS TLS read this book it explains a lot about the vulnerabilities",
    "start": "2263760",
    "end": "2269680"
  },
  {
    "text": "of the last years and how to treat SSL in the right way and the guy I think his name is Ian witit he also has an awesome",
    "start": "2269680",
    "end": "2275800"
  },
  {
    "text": "block so if you don't want to read the 500 Pages take your time to read this blog it's really important to kind of",
    "start": "2275800",
    "end": "2280880"
  },
  {
    "text": "keep to up to date what happens with SSL TLS with all the vulnerabilities which happened the last one and a half years",
    "start": "2280880",
    "end": "2287359"
  },
  {
    "text": "and the last one is called security engineering that's a free ebook as well uh it just covers a lot of aspects when",
    "start": "2287359",
    "end": "2292800"
  },
  {
    "text": "you need to implement security and distributed systems so this is this is important we have tons of meetups uh",
    "start": "2292800",
    "end": "2300079"
  },
  {
    "text": "come by join Bon uh if you're missing your city in the 81 cities where you",
    "start": "2300079",
    "end": "2305160"
  },
  {
    "text": "live talk to Leslie she will totally make meet up happen um and we",
    "start": "2305160",
    "end": "2311480"
  },
  {
    "text": "can cover everything about elastic search okay um that's",
    "start": "2311480",
    "end": "2318319"
  },
  {
    "text": "[Music]",
    "start": "2319100",
    "end": "2327560"
  },
  {
    "text": "it",
    "start": "2327560",
    "end": "2330560"
  }
]