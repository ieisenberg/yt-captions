[
  {
    "start": "0",
    "end": "77000"
  },
  {
    "text": "so thank you proven so I'm Francesco a Founder technical director at Ireland Solutions",
    "start": "3440",
    "end": "9840"
  },
  {
    "text": "um I've been working with Aaron I've been privileged enough to be working with Airlines since the mid 90s and I think that was",
    "start": "9840",
    "end": "16198"
  },
  {
    "text": "you know that's allowed me to actually see a programming language become an ecosystem of languages uh on the side in",
    "start": "16199",
    "end": "22380"
  },
  {
    "text": "my spare time I ended up writing two of the main titles which came up with O'Reilly and also in my spare time I",
    "start": "22380",
    "end": "29160"
  },
  {
    "text": "teach at Oxford University the concurrency rented programming course for the master students",
    "start": "29160",
    "end": "35100"
  },
  {
    "text": "okay so I'm Robert um hello Robert thank you",
    "start": "35100",
    "end": "40920"
  },
  {
    "text": "sorry that's an that's a joke um so I used to work at",
    "start": "40920",
    "end": "46200"
  },
  {
    "text": "um Ericsson in their computer science lab and I was one of the three together with Joe and Mike who did the initial",
    "start": "46200",
    "end": "52320"
  },
  {
    "text": "development of the airline language I now work for airline Solutions um",
    "start": "52320",
    "end": "57780"
  },
  {
    "text": "principal language expert I did not devise that um I",
    "start": "57780",
    "end": "63440"
  },
  {
    "text": "mainly work with training and doing some Consulting as well too well hello Robert",
    "start": "63559",
    "end": "69780"
  },
  {
    "text": "hello Francesco and this is not working wait wait you have",
    "start": "69780",
    "end": "75000"
  },
  {
    "text": "to do this no now try it that way and hello Joe yes yes",
    "start": "75000",
    "end": "80580"
  },
  {
    "start": "77000",
    "end": "378000"
  },
  {
    "text": "um so what we're looking at is uh concurrency rented programming and this",
    "start": "80580",
    "end": "86040"
  },
  {
    "text": "was a term which was coined by Joe Armstrong at least your debts you know",
    "start": "86040",
    "end": "91140"
  },
  {
    "text": "searching around that's what we found a previous term I found was concurrency oriented object a concurrency rented",
    "start": "91140",
    "end": "98280"
  },
  {
    "text": "object-oriented programming which was not quite it but yeah there might be a link and it was first used during his",
    "start": "98280",
    "end": "105479"
  },
  {
    "text": "opening keynote at the MIT lightweight languages Workshop in 2002 uh Paul",
    "start": "105479",
    "end": "110579"
  },
  {
    "text": "Graham at the time was the chair um I recall you know Joe coming back Really enthusiastic about it uh trying",
    "start": "110579",
    "end": "117060"
  },
  {
    "text": "to explain to Ruby mats and and trying to convince him to add distribution to Ruby uh the language and you know back",
    "start": "117060",
    "end": "123960"
  },
  {
    "text": "then no one you were erlang was uh no one knew who Joe Armstrong was so I think it was really really big",
    "start": "123960",
    "end": "130679"
  },
  {
    "text": "and in this in his talk he actually introduced his tenants his tenants if",
    "start": "130679",
    "end": "136980"
  },
  {
    "text": "you've not heard the term before is a principal or a belief and",
    "start": "136980",
    "end": "142620"
  },
  {
    "text": "we actually need to chase up you know the the program chair because you know the videos which was there are no longer",
    "start": "142620",
    "end": "148319"
  },
  {
    "text": "accessible I don't know if they've put them on YouTube but it was a really interesting talk um again probably ahead of its time and",
    "start": "148319",
    "end": "155220"
  },
  {
    "text": "there he went in and explained that the world is concurrent so think of as every one of you in this room as an",
    "start": "155220",
    "end": "161580"
  },
  {
    "text": "independent actor and it's an independent process um things in the world don't share data so we don't share brains we don't share",
    "start": "161580",
    "end": "168959"
  },
  {
    "text": "we each store a copy of you know the data we deem is necessary I can just I can just say",
    "start": "168959",
    "end": "175080"
  },
  {
    "text": "Francesco that depends which science fiction books you read but never mind we go the ones we don't share and things",
    "start": "175080",
    "end": "181980"
  },
  {
    "text": "communicate you know through message passing so right now I'm broadcasting a message to all of you I'm doing it",
    "start": "181980",
    "end": "188160"
  },
  {
    "text": "asynchronously and you take on board you know the message I'm sending you and you decide",
    "start": "188160",
    "end": "194280"
  },
  {
    "text": "what to keep what's relevant to you and what's irrelevant and Chuck away and",
    "start": "194280",
    "end": "199739"
  },
  {
    "text": "well we're in London I don't live in London anymore so the first rule if you are coming from outside London or",
    "start": "199739",
    "end": "205980"
  },
  {
    "text": "outside the UK when you cross the road is look both sides before Crossing and because obviously yeah",
    "start": "205980",
    "end": "213060"
  },
  {
    "text": "I don't know how many tourists get hit when you know by a bus when they look right and the bus hits them from the",
    "start": "213060",
    "end": "218280"
  },
  {
    "text": "left point is things fail um and yeah when things fail sometimes they do",
    "start": "218280",
    "end": "224819"
  },
  {
    "text": "recover sometimes they don't but you know based on these principles how",
    "start": "224819",
    "end": "232200"
  },
  {
    "text": "do you actually go in and design a programming language and and that's exactly what Joe Mike and Robert did",
    "start": "232200",
    "end": "240000"
  },
  {
    "text": "yeah so we were so one of the things the computer science laboratory everything we're looking at is how could they",
    "start": "240000",
    "end": "245519"
  },
  {
    "text": "improve the programming of their Telecom systems so they were very successful but they were difficult and costly to",
    "start": "245519",
    "end": "252000"
  },
  {
    "text": "maintain and to management programs so we started looking and we went through a large number of languages we",
    "start": "252000",
    "end": "258540"
  },
  {
    "text": "could run and test we did tests against Real systems the whole time and we found the no language releases so we started",
    "start": "258540",
    "end": "265560"
  },
  {
    "text": "looking at developing a language for doing this um I can say now we didn't start off it",
    "start": "265560",
    "end": "273060"
  },
  {
    "text": "didn't have goals of making it functional we didn't have a goal of making obey the actor model we were",
    "start": "273060",
    "end": "278699"
  },
  {
    "text": "looking at the problem and how we thought would be the best way to solve the problem I mean there's a lot of concurrency in Telecom systems there's a",
    "start": "278699",
    "end": "285419"
  },
  {
    "text": "lot of necessity for fault tolerance and things like this for it so we started",
    "start": "285419",
    "end": "291060"
  },
  {
    "text": "looking at that and we were very um",
    "start": "291060",
    "end": "294919"
  },
  {
    "text": "you weren't even looking to inventing a programming language what just happened we're looking at programming the system",
    "start": "296540",
    "end": "301860"
  },
  {
    "text": "up the initial system was actually done it done in a prologue system talking with it and we were modifying the system",
    "start": "301860",
    "end": "307500"
  },
  {
    "text": "around that prologue to do it and the language modified as we went and developed Etc if you look at the I can't",
    "start": "307500",
    "end": "313979"
  },
  {
    "text": "say if you look at the old movie I'm sitting in front of the I'm sitting in front of the screen",
    "start": "313979",
    "end": "320220"
  },
  {
    "text": "Joe and Mike they're just talking right I'm that one actually fixing if you look at that syntax it's the old syntax",
    "start": "320220",
    "end": "326340"
  },
  {
    "text": "won't run today but anyway we'll look at this thing and we've we felt that nothing really worked out and what we",
    "start": "326340",
    "end": "332699"
  },
  {
    "text": "found was so important was things like concurrency the processes the error handling these were so fundamental",
    "start": "332699",
    "end": "338580"
  },
  {
    "text": "things to the problem that were not something you put in a library on top of it you put them in the language right",
    "start": "338580",
    "end": "343979"
  },
  {
    "text": "and the whole language development was extremely pragmatic we had to use a group who are using it",
    "start": "343979",
    "end": "349380"
  },
  {
    "text": "and they they were testing this to make a prototype for a market architecture and they came back with feedback on",
    "start": "349380",
    "end": "355740"
  },
  {
    "text": "ideas of the language and how you use these properties so it came with comments and feedback and said yes this",
    "start": "355740",
    "end": "361259"
  },
  {
    "text": "idea works this is great this is fantastic this is a fantastic idea but we can't use it anyway right type of",
    "start": "361259",
    "end": "367560"
  },
  {
    "text": "thing and this is bad so the whole language evolved extremely pragmatically and as I said it became functional along",
    "start": "367560",
    "end": "373860"
  },
  {
    "text": "the way it became implementing the actor model along the way",
    "start": "373860",
    "end": "378960"
  },
  {
    "start": "378000",
    "end": "459000"
  },
  {
    "text": "yeah that that's me working right that's me working seriously so uh we were going",
    "start": "378960",
    "end": "385020"
  },
  {
    "text": "to an I.T show in 93 and we want to show our like display alley and we thought",
    "start": "385020",
    "end": "390240"
  },
  {
    "text": "how can we get people to come and look and listen to us what we're saying and we had a small exchange this thing here",
    "start": "390240",
    "end": "396180"
  },
  {
    "text": "that's a small business exchange we had in the lab which we were using to do all our tests and we thought no one would",
    "start": "396180",
    "end": "402180"
  },
  {
    "text": "come on one look at that right doesn't even have blinking lights right so we thought maybe a little train set",
    "start": "402180",
    "end": "407759"
  },
  {
    "text": "so um we started implementing a train set and implementing a train control system in LA and I will freely admit I",
    "start": "407759",
    "end": "415080"
  },
  {
    "text": "went slightly overboard okay this was not the board that was being used but we had a train we had an",
    "start": "415080",
    "end": "420900"
  },
  {
    "text": "automatic training control system uh we had blocks in the track you could detect when trains were in the blocks you could",
    "start": "420900",
    "end": "426120"
  },
  {
    "text": "stop trains from coming to avoid collisions you could program give the train a path to go through and the whole",
    "start": "426120",
    "end": "431160"
  },
  {
    "text": "thing the ATC system would control this for you to do everything for you it even had a",
    "start": "431160",
    "end": "437240"
  },
  {
    "text": "Fail-Safe system so sometimes happened there were magnetic sensors and sometimes the train would wouldn't be",
    "start": "437240",
    "end": "444120"
  },
  {
    "text": "able to trans uh trigger that sensor so the system would think it's in the wrong place and something was going wrong and",
    "start": "444120",
    "end": "451440"
  },
  {
    "text": "then it just stopped everything so we never had a collision right but it was fun it worked yes but yeah concurrence",
    "start": "451440",
    "end": "458280"
  },
  {
    "text": "in full torrent at his best so going back I mean the main building block",
    "start": "458280",
    "end": "463319"
  },
  {
    "start": "459000",
    "end": "1117000"
  },
  {
    "text": "um and now we're talking about erling here but we're referring to any language in the ecosystem so the syntax here is",
    "start": "463319",
    "end": "470280"
  },
  {
    "text": "actually Elixir but uh the main building block which you tend to work with uh",
    "start": "470280",
    "end": "475800"
  },
  {
    "text": "when you work in the ecosystem is a process and they decided very very early on to decouple",
    "start": "475800",
    "end": "482160"
  },
  {
    "text": "um the concurrency model from that of the underlying operating system I mean these were the days where you could have",
    "start": "482160",
    "end": "487919"
  },
  {
    "text": "a maximum of 16 threads per machine and so they had to use a virtual machine to",
    "start": "487919",
    "end": "493979"
  },
  {
    "text": "go in and Achieve concurrency at scale your concurrence at scale I think back then I think when I started was maybe 10",
    "start": "493979",
    "end": "500759"
  },
  {
    "text": "15 000 processes went up to around 30 000 I think which the VM could handle in",
    "start": "500759",
    "end": "506879"
  },
  {
    "text": "the mid 90s and then yeah and then you know we'll see very soon you know to where it got to but it's",
    "start": "506879",
    "end": "513479"
  },
  {
    "text": "um and and even today I mean looking back you still can't use you know OS threads even though you know did they",
    "start": "513479",
    "end": "519539"
  },
  {
    "text": "scale much more as lightweight processes um if you look at the beam VM to create a process we'll take microseconds",
    "start": "519539",
    "end": "527339"
  },
  {
    "text": "and you know they will utilize just a few bytes of memory obviously that allocation will increase as needed",
    "start": "527339",
    "end": "535200"
  },
  {
    "text": "so so yeah the basic the basic concept is a process so we hear the spawn that spawns a",
    "start": "535200",
    "end": "541440"
  },
  {
    "text": "process and we're running a we're spoiling a process running the function print ad which just prints just adds two",
    "start": "541440",
    "end": "546959"
  },
  {
    "text": "numbers together and prints them out right and but when the process that that the code the processing started with ends",
    "start": "546959",
    "end": "553260"
  },
  {
    "text": "the process dies there's nothing more afford to do so it just terminates and dies",
    "start": "553260",
    "end": "558360"
  },
  {
    "text": "and this in this case because it's not crashing into anything strange is dying normally right",
    "start": "558360",
    "end": "563940"
  },
  {
    "text": "and here well here we're doing it we're starting another process",
    "start": "563940",
    "end": "570240"
  },
  {
    "text": "we're going to run the function in Kaboom in Foo that's going to divide one by zero and that's going to cause an",
    "start": "570240",
    "end": "576899"
  },
  {
    "text": "error and when an error occurs in a process the process terminates it crashes right",
    "start": "576899",
    "end": "582240"
  },
  {
    "text": "so we're very strict on that and once uh once a process dies everything about that process goes away there's nothing",
    "start": "582240",
    "end": "588480"
  },
  {
    "text": "left to that process at all anywhere how do we communicate we send messages",
    "start": "588480",
    "end": "593580"
  },
  {
    "text": "there's a send here we have a PID the process identifier we can send a message to it that that's asynchronous it will",
    "start": "593580",
    "end": "600959"
  },
  {
    "text": "eventually arrive at the process sometime so it's very getting back to what you were talking to yesterday it's quite",
    "start": "600959",
    "end": "606300"
  },
  {
    "text": "close in many ways right so for those of you who saw a bag of",
    "start": "606300",
    "end": "611339"
  },
  {
    "text": "stock yes yesterday um this is the very construct he actually went in described it's asynchronous message passing and it's at",
    "start": "611339",
    "end": "619980"
  },
  {
    "text": "the most one semantics you send the message but you've got no guarantee that the receiving process will receive it",
    "start": "619980",
    "end": "625800"
  },
  {
    "text": "for a simple reason that the receiving process might have terminated or might have crashed and this is something I",
    "start": "625800",
    "end": "632040"
  },
  {
    "text": "think we've realized you know how do you handle this failure it's something you need to do in the business logic of your",
    "start": "632040",
    "end": "637140"
  },
  {
    "text": "system it's not something you can abstract or or automate or look away because every system behaves differently",
    "start": "637140",
    "end": "643680"
  },
  {
    "text": "every message in a system needs to be handled differently and",
    "start": "643680",
    "end": "649380"
  },
  {
    "text": "so you have you send a message but you've got no guarantees that it's uh you know that has has been received if",
    "start": "649380",
    "end": "656220"
  },
  {
    "text": "you do need those guarantees you need to put libraries on top of it or Frameworks",
    "start": "656220",
    "end": "661519"
  },
  {
    "text": "and and through that you can create synchronous message passing you send a message and then you wait until you",
    "start": "661519",
    "end": "668100"
  },
  {
    "text": "receive a response um you can send a message and wait and",
    "start": "668100",
    "end": "674579"
  },
  {
    "text": "if you don't receive a response you can send a message to another process so you can start using different types of",
    "start": "674579",
    "end": "679860"
  },
  {
    "text": "patterns but we tend to use that and we've always done that and handle them in the business logic itself",
    "start": "679860",
    "end": "685920"
  },
  {
    "text": "and you know so Magnus talk I think was very interesting seeing how he came to that realization uh that you needed to",
    "start": "685920",
    "end": "693060"
  },
  {
    "text": "do it in the business logic and I think yeah we came to various very similar conclusions uh as he did",
    "start": "693060",
    "end": "698880"
  },
  {
    "text": "now messages which are sent are actually received in a mailbox so they're just",
    "start": "698880",
    "end": "704279"
  },
  {
    "text": "stored in a mailbox and whenever a process executes in a",
    "start": "704279",
    "end": "709920"
  },
  {
    "text": "received Clause the mailbox is scanned sequentially so messages are just stored and when the process is ready to",
    "start": "709920",
    "end": "716160"
  },
  {
    "text": "retrieve them they're scanned and we go in and can do a selective receive so we",
    "start": "716160",
    "end": "721200"
  },
  {
    "text": "can decide exactly which messages we leave in the mailbox and which messages we extract from the mailbox and you",
    "start": "721200",
    "end": "729600"
  },
  {
    "text": "might think yeah this is you know why not receive them and hand limit order in which they arrive this is very important when you for",
    "start": "729600",
    "end": "737100"
  },
  {
    "text": "example doing things such as finite State machines where messages come out of sequence it really simplifies the",
    "start": "737100",
    "end": "742560"
  },
  {
    "text": "task of doing them because if a message comes out of sequence you just don't match it you don't extract it just leave",
    "start": "742560",
    "end": "748500"
  },
  {
    "text": "it in the mailbox until in the FSM you reach a state where you can handle it so it's",
    "start": "748500",
    "end": "755100"
  },
  {
    "text": "um these are the building blocks and it actually simplifies the overall code base when you're doing it I can also",
    "start": "755100",
    "end": "761940"
  },
  {
    "text": "make a comment having the selective received means you can avoid a combinatorial explosion otherwise in",
    "start": "761940",
    "end": "767639"
  },
  {
    "text": "principle you you should be if you had to receive every message everywhere you would have to handle every message that",
    "start": "767639",
    "end": "773339"
  },
  {
    "text": "could come to this process everywhere and you might have hundreds of thousands or thousands of processes messages sorry that'd be sent around processes here I",
    "start": "773339",
    "end": "780300"
  },
  {
    "text": "can be extremely selective I'm interested in this message anyone else I'll just leave it for someone else yeah",
    "start": "780300",
    "end": "786420"
  },
  {
    "text": "so This Is How We Do failure detection in in Airline what we do is we've got two",
    "start": "786420",
    "end": "792240"
  },
  {
    "text": "processes and processing can link to each other and I think this failure detection is actual",
    "start": "792240",
    "end": "799019"
  },
  {
    "text": "reason as to why Airline became concurrent they realized that in order to detect that something had gone wrong",
    "start": "799019",
    "end": "805260"
  },
  {
    "text": "you needed something else to detect it so if to detect that a processor crashed you needed another process and you know",
    "start": "805260",
    "end": "811860"
  },
  {
    "text": "this reminds me of a similar story where you know Mike Williams one of the free co-inventors worked on the very very first mobile phone systems so this was a",
    "start": "811860",
    "end": "819600"
  },
  {
    "text": "time when a mobile phone could only call another mobile phone and the way you know that the supporting",
    "start": "819600",
    "end": "826019"
  },
  {
    "text": "systems and make sure that you know that there was I don't know how many nines up time it was but it was basically they",
    "start": "826019",
    "end": "831300"
  },
  {
    "text": "had a human sitting in front of a screen and as soon as the text started scrolling very very fast they knew the",
    "start": "831300",
    "end": "836880"
  },
  {
    "text": "system had crashed and manually they'd go in and restart it and so in a way you did that human looking at that screen",
    "start": "836880",
    "end": "843060"
  },
  {
    "text": "was a process you know the system he was looking at was another process and and",
    "start": "843060",
    "end": "849060"
  },
  {
    "text": "that's how they dealt with it and that's how they I think came to the realization that at least you know you needed at",
    "start": "849060",
    "end": "854160"
  },
  {
    "text": "least two of everything to make a well to to make a a reliable system yeah and",
    "start": "854160",
    "end": "861360"
  },
  {
    "text": "then yeah and then okay we're dealing with phone calls you know there are thousands of phone calls happening at",
    "start": "861360",
    "end": "866459"
  },
  {
    "text": "any one point in time you know that's how they expanded so this you know so",
    "start": "866459",
    "end": "871740"
  },
  {
    "text": "this failure mechanism this looking at a screen was recreated for process links",
    "start": "871740",
    "end": "877079"
  },
  {
    "text": "and yeah so what what happens is that when two processes linked together",
    "start": "877079",
    "end": "883079"
  },
  {
    "text": "when the process dies it crashes for example the PID one here it sends an exit signal to all the processes linked",
    "start": "883079",
    "end": "889800"
  },
  {
    "text": "to that's just a basic underlying mechanism and when that happens when the signal reaches PID 2 here",
    "start": "889800",
    "end": "896880"
  },
  {
    "text": "that will crash it if you thanks a lot yeah that will crash that good",
    "start": "896880",
    "end": "902699"
  },
  {
    "text": "so that means all the process to link together one crashes they'll crash which means you can take down a lot of processes",
    "start": "902699",
    "end": "908459"
  },
  {
    "text": "cooperating and working together this is the base of the airline let it crash principle right we just let protesters",
    "start": "908459",
    "end": "914459"
  },
  {
    "text": "crash because we know that the system is built in such a way that other processes will detect the process of crashing and",
    "start": "914459",
    "end": "921360"
  },
  {
    "text": "know what to do when that happens right and yeah so yeah I mean processes well",
    "start": "921360",
    "end": "929220"
  },
  {
    "text": "you obviously we don't want processes crashing all the time we want to detect",
    "start": "929220",
    "end": "934320"
  },
  {
    "text": "that something's gone wrong and by the way process crashes when maybe the state becomes corrupt or you know there's a",
    "start": "934320",
    "end": "939959"
  },
  {
    "text": "bug in your code yeah and Kaboom from the boom yes or yeah you basically let it terminate abnormally yeah and so this",
    "start": "939959",
    "end": "947940"
  },
  {
    "text": "is detected by processes which what we what we denominate you know process which are trapping exit we usually have",
    "start": "947940",
    "end": "953699"
  },
  {
    "text": "to move the double circle and what happens is if a process is linked which is trapping X is linked to a process",
    "start": "953699",
    "end": "959459"
  },
  {
    "text": "which terminates abnormally an exit signal which is sent to the process is",
    "start": "959459",
    "end": "965519"
  },
  {
    "text": "actually converted to a message and this message of the format exhibit reason is stored in the mailbox with all the other",
    "start": "965519",
    "end": "972300"
  },
  {
    "text": "messages and again when going into receive course it can be selectively received the process which received Echo",
    "start": "972300",
    "end": "979440"
  },
  {
    "text": "notices oh something's going wrong with this process it could potentially go in and restart it or it could decide to",
    "start": "979440",
    "end": "986459"
  },
  {
    "text": "terminate itself or not do anything so it makes that decision over you know how",
    "start": "986459",
    "end": "992399"
  },
  {
    "text": "to go in and manage and handle it and also when an exit signal is caught",
    "start": "992399",
    "end": "997920"
  },
  {
    "text": "it no longer propagates to other processes so if paid one is linked to pid2 bit use linked to bit free if bid 2",
    "start": "997920",
    "end": "1004220"
  },
  {
    "text": "catches that six single PID 3 you know continues executing and nothing happens",
    "start": "1004220",
    "end": "1010519"
  },
  {
    "text": "this can be used this can be used for monitoring processes know what to clean up about often so processes of allocated",
    "start": "1010519",
    "end": "1016880"
  },
  {
    "text": "resources if they terminate and crash then the resource handle will detectors to know how to clean up the one we can",
    "start": "1016880",
    "end": "1022880"
  },
  {
    "text": "also use things we have super processes we call supervisors who are monitoring their child processes and if a child",
    "start": "1022880",
    "end": "1029839"
  },
  {
    "text": "process dies the supervisor knows what to do do I restart the child or not",
    "start": "1029839",
    "end": "1035120"
  },
  {
    "text": "maybe depending on how terminated things like this for maybe I want to kill off all my children and restart them all",
    "start": "1035120",
    "end": "1041480"
  },
  {
    "text": "because we know they're all linked together but this is the supervisor's job of doing that it's not not my job",
    "start": "1041480",
    "end": "1047540"
  },
  {
    "text": "when I crash my supervisor will know what to do this is how we can make truly",
    "start": "1047540",
    "end": "1052940"
  },
  {
    "text": "false tolerance systems because the process crashing might be service providers that just have to be in the",
    "start": "1052940",
    "end": "1059120"
  },
  {
    "text": "system for the system to run and they will have a supervisor and then if and when they die then their supervisor will",
    "start": "1059120",
    "end": "1065480"
  },
  {
    "text": "know I have to restart this we'll do that yeah I'd say none of this",
    "start": "1065480",
    "end": "1070700"
  },
  {
    "text": "is new um think of small talk Small Talk you've got objects",
    "start": "1070700",
    "end": "1075919"
  },
  {
    "text": "objects don't share memory and surprise surprise objects communicate with each",
    "start": "1075919",
    "end": "1081080"
  },
  {
    "text": "other through message passing and yeah this is a quote from lnk which",
    "start": "1081080",
    "end": "1086840"
  },
  {
    "text": "Joe Armstrong was very glad to discover uh Alan Kayo coined the term object-oriented programming and",
    "start": "1086840",
    "end": "1095240"
  },
  {
    "text": "this is the quote you know Joe Armstrong used when saying erling might be the only object to rent a language because",
    "start": "1095240",
    "end": "1100280"
  },
  {
    "text": "it was based on message passing you've got isolation between objects and you have polymorphism and he said this with",
    "start": "1100280",
    "end": "1106039"
  },
  {
    "text": "a bit of tongue-in-cheek of course uh you know not everyone agrees but it got them to go out and and basically tell",
    "start": "1106039",
    "end": "1112280"
  },
  {
    "text": "the world earnings the only pure objective language out there it's uh yeah not everyone agrees but but you",
    "start": "1112280",
    "end": "1119059"
  },
  {
    "start": "1117000",
    "end": "1362000"
  },
  {
    "text": "know why is this relevant today you know why why you know why are we here on stage today I mean this is stuff which",
    "start": "1119059",
    "end": "1125179"
  },
  {
    "text": "happened in the 90s today's systems are all distributed uh mobile phone",
    "start": "1125179",
    "end": "1131419"
  },
  {
    "text": "it's a dis you know your apps or distributed system connecting to a server systems running in the cloud running in the edge iot networks iot",
    "start": "1131419",
    "end": "1139100"
  },
  {
    "text": "devices any system connected to the internet today has to be both scalable and",
    "start": "1139100",
    "end": "1145820"
  },
  {
    "text": "reliable there's no getting out of it and we've got a concurrency model here",
    "start": "1145820",
    "end": "1151340"
  },
  {
    "text": "based on no shared memory and this is basically key um you know to distribution because if",
    "start": "1151340",
    "end": "1158419"
  },
  {
    "text": "you've got two processes it doesn't matter if you place them on separate machines because you know you",
    "start": "1158419",
    "end": "1164419"
  },
  {
    "text": "don't have the problem where you place your your shared memory they each have a copy of the data so if you get a network",
    "start": "1164419",
    "end": "1169760"
  },
  {
    "text": "partition between these two machines they can still continue running independently so you know once so basically once you",
    "start": "1169760",
    "end": "1178340"
  },
  {
    "text": "have the distribution you can actually go in and distribute your processes uh you know and the state of course and for",
    "start": "1178340",
    "end": "1184400"
  },
  {
    "text": "scale you can actually copy your processes in their states for resilience because if one machine fails the other",
    "start": "1184400",
    "end": "1190400"
  },
  {
    "text": "machines takes over and these are these are basically your concurrency models",
    "start": "1190400",
    "end": "1195860"
  },
  {
    "text": "based on notion memory and message passing which give you both and not only if you go in and add multi-core you get",
    "start": "1195860",
    "end": "1202940"
  },
  {
    "text": "parallelism into the mix as well and this was became really really evident in",
    "start": "1202940",
    "end": "1208460"
  },
  {
    "text": "I think 2018 when I went in and managed to get you know Carl Hewitt",
    "start": "1208460",
    "end": "1214820"
  },
  {
    "text": "um Joe Armstrong and Tony on the same sofa uh in in a discussion and",
    "start": "1214820",
    "end": "1220580"
  },
  {
    "text": "panel discussion and an interview and what I asked them was what problem were",
    "start": "1220580",
    "end": "1226100"
  },
  {
    "text": "you trying to solve uh and I started with you I think I started with Joe Armstrong what problem were you trying",
    "start": "1226100",
    "end": "1231440"
  },
  {
    "text": "to solve when you invented when you co-invented erlang and he replied oh I was trying to figure out how to build",
    "start": "1231440",
    "end": "1236480"
  },
  {
    "text": "fault tolerant systems I asked to call you at the same question oh I was trying to figure out you know",
    "start": "1236480",
    "end": "1244760"
  },
  {
    "text": "so Crystal called Hewitt invented the actor model and he went in I was trying to figure out how to program distributed",
    "start": "1244760",
    "end": "1251360"
  },
  {
    "text": "systems and went and asked Tony harder question so I was trying to figure out how to program transporters",
    "start": "1251360",
    "end": "1258020"
  },
  {
    "text": "so things which you know seem very different which which are very very much connected to each other because you've",
    "start": "1258020",
    "end": "1263419"
  },
  {
    "text": "got concurrency with no shared memory that gives you distribution once you have distribution you've got scalability and reliability but also with multi-core",
    "start": "1263419",
    "end": "1272059"
  },
  {
    "text": "you get parallelism so they're all connected and these were three people who you know was working independently",
    "start": "1272059",
    "end": "1278360"
  },
  {
    "text": "of each other came out with very very similar uh conclusions yeah I met Carl",
    "start": "1278360",
    "end": "1283820"
  },
  {
    "text": "Hewitt well three years ago now and I was talking with him about the actor model I mentioned we implemented the",
    "start": "1283820",
    "end": "1288860"
  },
  {
    "text": "actor model but we did he didn't have a goal of doing this in fact I didn't even know about the actor model until later I",
    "start": "1288860",
    "end": "1295640"
  },
  {
    "text": "read reports blogs saying Allen implemented the actor model so I had to go and find out what it was he thought",
    "start": "1295640",
    "end": "1302120"
  },
  {
    "text": "but he saw this as very positive because they had worked from the active model from a more theoretical point of view",
    "start": "1302120",
    "end": "1307299"
  },
  {
    "text": "the weird worked we'd worked from an extremely pragmatic point of view and arrived at something very close so he",
    "start": "1307299",
    "end": "1313460"
  },
  {
    "text": "saw this as a strength of the actor model itself we came came to the same thing from both sides",
    "start": "1313460",
    "end": "1318640"
  },
  {
    "text": "and you can find this interview on YouTube just search on um hashtag talk",
    "start": "1318640",
    "end": "1323659"
  },
  {
    "text": "concurrency and and it comes up yeah so yeah this is concurrency we we",
    "start": "1323659",
    "end": "1330700"
  },
  {
    "text": "separate concurrency in parallelism we see these are two different things in many many places you'll see people",
    "start": "1330700",
    "end": "1337820"
  },
  {
    "text": "um equate these you you read you read a paper about concurrency and they're talking about parallelism in the other",
    "start": "1337820",
    "end": "1343460"
  },
  {
    "text": "way around we separate these things so concurrency that's about doing lots of things at the same time",
    "start": "1343460",
    "end": "1349280"
  },
  {
    "text": "okay again this this quote is from Rob Pike whereas parallelism is doing lots of",
    "start": "1349280",
    "end": "1354679"
  },
  {
    "text": "things at once they're two separate things when you start thinking about it really they interact perhaps but they're",
    "start": "1354679",
    "end": "1359900"
  },
  {
    "text": "not this exactly the same thing right so here very simple concurrency versus",
    "start": "1359900",
    "end": "1365360"
  },
  {
    "start": "1362000",
    "end": "1492000"
  },
  {
    "text": "parallelism here we have two tasks A and B now a is going to do a1a2 A3 and B is",
    "start": "1365360",
    "end": "1370460"
  },
  {
    "text": "going to do B1 B2 B3 what we can do we can run these concurrently which you see in the upper one here on one thread",
    "start": "1370460",
    "end": "1377720"
  },
  {
    "text": "So This Thread is doing some Aid then it's doing some B then it's doing some a there's doing some B Etc doing things",
    "start": "1377720",
    "end": "1383299"
  },
  {
    "text": "so here we're running these A and B here concurrently but we're not not in parallel down here we have two threads",
    "start": "1383299",
    "end": "1390500"
  },
  {
    "text": "or two processors a heavier one to view it and here one is running a and one is running B and now we're running them in",
    "start": "1390500",
    "end": "1396860"
  },
  {
    "text": "parallel and that's not the same thing what airline gives you is a concurrency model",
    "start": "1396860",
    "end": "1402380"
  },
  {
    "text": "it gives you concurrency I can start up a hundred thousand processes a million processes and it will run these",
    "start": "1402380",
    "end": "1410179"
  },
  {
    "text": "processes concurrently and it will use the underlying parallelism in the system this is what Francesca was in if I've",
    "start": "1410179",
    "end": "1417380"
  },
  {
    "text": "got a 10 core machine like that one is it will run 10 things in parallel I don't see this when I'm running it I'm",
    "start": "1417380",
    "end": "1424039"
  },
  {
    "text": "programming concurrently if I'm running on a single core just running my singly why won't notice",
    "start": "1424039",
    "end": "1430159"
  },
  {
    "text": "this in my programs how many of you have a bed for my care a few of you do okay so if you were to",
    "start": "1430159",
    "end": "1437480"
  },
  {
    "text": "assemble that that you know assume you'd buy two beds if you're to assemble your beds concurrently I mean you take your",
    "start": "1437480",
    "end": "1443900"
  },
  {
    "text": "partner one of you would do one bed the other would do the other bed if you were to do it using parallelism you would",
    "start": "1443900",
    "end": "1450380"
  },
  {
    "text": "both first work on the first bed get it finished and when you're done you'd go in and assemble the second bed so I",
    "start": "1450380",
    "end": "1455900"
  },
  {
    "text": "think that's the main difference so you know concurrency is basically built on top of uh parallelism and it it it makes",
    "start": "1455900",
    "end": "1464240"
  },
  {
    "text": "it appear like concurrency makes it appear like things are happening at the same time you just model it that way",
    "start": "1464240",
    "end": "1470179"
  },
  {
    "text": "whilst parallelism actually makes sure you know that they do happen at the same time so it's a different it's a way of",
    "start": "1470179",
    "end": "1476419"
  },
  {
    "text": "modeling versus a way of executing so I see concurrency as a property of the",
    "start": "1476419",
    "end": "1482120"
  },
  {
    "text": "problem and of the solution to that problem and parallelism as a property of the system you're running on",
    "start": "1482120",
    "end": "1489020"
  },
  {
    "text": "so yeah that's that's my view of it here I mean how you know so we've been talking about erlang I think a lot of it",
    "start": "1489020",
    "end": "1495799"
  },
  {
    "start": "1492000",
    "end": "1651000"
  },
  {
    "text": "is built around the beam uh the virtual machine and",
    "start": "1495799",
    "end": "1501080"
  },
  {
    "text": "I think the beam and and the jvm I think more or less you know were born at the",
    "start": "1501080",
    "end": "1507860"
  },
  {
    "text": "same time uh development on the started more or less at the same time and I was at the computer science lab back in the",
    "start": "1507860",
    "end": "1513080"
  },
  {
    "text": "mid 90s with Robert and one of my colleagues I think it was clacker came up and put the Java white paper uh on on",
    "start": "1513080",
    "end": "1519980"
  },
  {
    "text": "my desk and I had a sense of deja vu it was a concurrency model it was green threads",
    "start": "1519980",
    "end": "1525740"
  },
  {
    "text": "at the time so it was lightweight processes it was a garbage collector you know built-in memory management and",
    "start": "1525740",
    "end": "1532880"
  },
  {
    "text": "you know that that and it's been interesting to see the jvm and the beam it'll take very different routes",
    "start": "1532880",
    "end": "1539659"
  },
  {
    "text": "um you know and there are lots of talks comparing the jvm and the beam but I would say the three major differences uh",
    "start": "1539659",
    "end": "1546200"
  },
  {
    "text": "when we look at them uh the jvm is built with Fred's and",
    "start": "1546200",
    "end": "1551659"
  },
  {
    "text": "versus concurrency yeah the airline is built you know the beam is built for",
    "start": "1551659",
    "end": "1556820"
  },
  {
    "text": "concurrency you've got shared memory versus nurture memory and mutable State versus immutable State and",
    "start": "1556820",
    "end": "1564380"
  },
  {
    "text": "the concurrency of based on shared memory will mean your stop the world garbage collector and it also means it's",
    "start": "1564380",
    "end": "1570679"
  },
  {
    "text": "harder to use your code base for distributed programming because you need to deal with the shared memory you need",
    "start": "1570679",
    "end": "1576740"
  },
  {
    "text": "to deal with libraries which have the shared memory and you know the location of the memory always becomes uh always",
    "start": "1576740",
    "end": "1582980"
  },
  {
    "text": "becomes a sticking point and I tend to say you know when I compare and contrast them is that the jvm was built for Speed",
    "start": "1582980",
    "end": "1589700"
  },
  {
    "text": "and parallelism and the beam was built for scale and resilience",
    "start": "1589700",
    "end": "1594919"
  },
  {
    "text": "and it doesn't say that you can't you know do one with the other but that was very much I think the focus as they were",
    "start": "1594919",
    "end": "1602120"
  },
  {
    "text": "working on it and yeah if you look at the jvm world I think the power of concurrency got added through akka",
    "start": "1602120",
    "end": "1609320"
  },
  {
    "text": "um you know right before this talk on top of Vaca uh yeah Martin introduced mentioned colleagues which again are",
    "start": "1609320",
    "end": "1615440"
  },
  {
    "text": "similar ideas which we've had ourselves and what happens yeah when Eunice moner",
    "start": "1615440",
    "end": "1620600"
  },
  {
    "text": "what units were there did when he created that case he took ideas from erlang and implemented him on top of the",
    "start": "1620600",
    "end": "1626900"
  },
  {
    "text": "jvm and I'm happy to have Martin you know Thompson sitting in the first row here today but you know you go in and",
    "start": "1626900",
    "end": "1633320"
  },
  {
    "text": "find any of his Talks on YouTube uh and what he will do is he will be describing",
    "start": "1633320",
    "end": "1638600"
  },
  {
    "text": "at least in my eyes you know what we're talking about today but he takes the ideas of what we're talking about today",
    "start": "1638600",
    "end": "1644600"
  },
  {
    "text": "and he uses and implements them on the jvm you know to get this this amazing speed",
    "start": "1644600",
    "end": "1651158"
  },
  {
    "start": "1651000",
    "end": "1757000"
  },
  {
    "text": "you know and what has this yeah no no oh okay yeah what does this what what has",
    "start": "1651740",
    "end": "1659240"
  },
  {
    "text": "this concurrency model led us to um this is a blog post from you know WhatsApp from 2012 and",
    "start": "1659240",
    "end": "1666860"
  },
  {
    "text": "you know back in the early days of WhatsApp we were meeting there with the founders John and Brian in cafes in",
    "start": "1666860",
    "end": "1672200"
  },
  {
    "text": "Downtown Palo Alto business you know they didn't even have an office and since day one I think one of their goals",
    "start": "1672200",
    "end": "1678799"
  },
  {
    "text": "was to actually reduce operational overhead and Hardware costs you know this was even before they had their a",
    "start": "1678799",
    "end": "1685279"
  },
  {
    "text": "series you know that they were still um it was still very very early days and they really wanted to try to pack as",
    "start": "1685279",
    "end": "1692600"
  },
  {
    "text": "many users as possible on a single machine you know to reduce the actual costs and they did that by maximizing",
    "start": "1692600",
    "end": "1699919"
  },
  {
    "text": "the concurrency uh on you know both the beam and you",
    "start": "1699919",
    "end": "1705320"
  },
  {
    "text": "know being able to handle the amount of users which were able to connect simultaneously you know through sockets and and what they did is you know in",
    "start": "1705320",
    "end": "1711980"
  },
  {
    "text": "2012 January 2012 they managed to achieve uh by hacking FreeBSD and doing",
    "start": "1711980",
    "end": "1718159"
  },
  {
    "text": "minor changes on the beam Virtual Machine 2 million TCP connections and you know and how they did it they",
    "start": "1718159",
    "end": "1725480"
  },
  {
    "text": "did they're concurrently at the same time so you know this was you know 10 years ago so that that was pretty",
    "start": "1725480",
    "end": "1730580"
  },
  {
    "text": "impressive back then it but of course you know there were changes in FreeBSD there were changes in the beam yeah yeah",
    "start": "1730580",
    "end": "1735980"
  },
  {
    "text": "they were quite minor I was talking to one of them later on in 2012 and he said",
    "start": "1735980",
    "end": "1741260"
  },
  {
    "text": "occasionally they would Peak at three million concurrent connections now from my point of view running three million",
    "start": "1741260",
    "end": "1747140"
  },
  {
    "text": "processors nowling is Trivial having how do you get three three thousand three million TCP connections into one machine",
    "start": "1747140",
    "end": "1753679"
  },
  {
    "text": "that's a difficult bit right I don't know how they did that but and that's exactly the problem they found",
    "start": "1753679",
    "end": "1759740"
  },
  {
    "start": "1757000",
    "end": "2388000"
  },
  {
    "text": "um a few years later uh 2015 so Phoenix um I don't know how many of you have",
    "start": "1759740",
    "end": "1765260"
  },
  {
    "text": "heard of Phoenix but it's uh a few of you have yeah it's uh a modern day Ruben",
    "start": "1765260",
    "end": "1770840"
  },
  {
    "text": "rails it's written in Elixir and it runs on the beam so it's it's part of its ecosystem and the changes WhatsApp did",
    "start": "1770840",
    "end": "1779779"
  },
  {
    "text": "uh in 2011 on the bmvm and FreeBSD it took a few years but they all trickle",
    "start": "1779779",
    "end": "1785299"
  },
  {
    "text": "down to you know to kind of mainstream operating systems as well as uh the beam",
    "start": "1785299",
    "end": "1792559"
  },
  {
    "text": "itself a lot of those changes were eventually merged and so",
    "start": "1792559",
    "end": "1797620"
  },
  {
    "text": "three years later running on an AWS instance uh they were able using Phoenix",
    "start": "1797620",
    "end": "1804080"
  },
  {
    "text": "they were able to open up 2 million uh socket connections so web socket",
    "start": "1804080",
    "end": "1809120"
  },
  {
    "text": "connections and keep them open in a very very stable way and",
    "start": "1809120",
    "end": "1814399"
  },
  {
    "text": "that they actually even mentioned you know if well if you scroll down in the blog post that",
    "start": "1814399",
    "end": "1819559"
  },
  {
    "text": "they could have you know gone further they weren't utilizing all of the CPU they weren't utilizing all of the memory what was actually blocking them was",
    "start": "1819559",
    "end": "1826600"
  },
  {
    "text": "opening up yeah what was the network uh which AWS was was basically uh limiting",
    "start": "1826600",
    "end": "1832940"
  },
  {
    "text": "them on and I think this is you know this is the blog post which turned",
    "start": "1832940",
    "end": "1838399"
  },
  {
    "text": "um Elixir into a first-class citizen of the beam but it's also what made me",
    "start": "1838399",
    "end": "1843500"
  },
  {
    "text": "realize that all of a sudden a programming language had become an ecosystem of programming languages",
    "start": "1843500",
    "end": "1848779"
  },
  {
    "text": "yeah so from my point of view I don't see our language as a language with concurrency I see it as a system",
    "start": "1848779",
    "end": "1856039"
  },
  {
    "text": "with a language on top of it um in this case what's happened now of course there are many languages",
    "start": "1856039",
    "end": "1861919"
  },
  {
    "text": "therefore but when you look at systems written on top in Airline on top of our line You'll Find they're very much",
    "start": "1861919",
    "end": "1867440"
  },
  {
    "text": "operating system like they seldom have a central thread of execution they'll be doing lots of different things at the",
    "start": "1867440",
    "end": "1873860"
  },
  {
    "text": "same time I'm running my web server I can open up a browser and I can run in that I can open up a shelf from the",
    "start": "1873860",
    "end": "1879679"
  },
  {
    "text": "Galaxy or outling system on that just like a normal operating system and what's happened now is that have",
    "start": "1879679",
    "end": "1885679"
  },
  {
    "text": "come a lot of other languages implemented on top of the beam and they all inherit all the basic properties",
    "start": "1885679",
    "end": "1891440"
  },
  {
    "text": "they get from our so here well caramel gleam that's uh",
    "start": "1891440",
    "end": "1897260"
  },
  {
    "text": "static experiments so far on statically typed languages we haven't mentioned but",
    "start": "1897260",
    "end": "1902299"
  },
  {
    "text": "our language is dynamically tight Fez and alpaca as well I mean there's",
    "start": "1902299",
    "end": "1907640"
  },
  {
    "text": "talk over there if you want if you're curious about F sharp on the beam yep that's the person to speak to yeah call",
    "start": "1907640",
    "end": "1913760"
  },
  {
    "text": "your Nielsen right here so yeah it's uh and it's interesting to see all of these",
    "start": "1913760",
    "end": "1918980"
  },
  {
    "text": "experiments happening you know it's uh I mean Robert started off with this flavored Airline and uh parentheses raw",
    "start": "1918980",
    "end": "1925220"
  },
  {
    "text": "parentheses rule that's it right there are there are I think two or three prologue implementations uh on the beam",
    "start": "1925220",
    "end": "1931520"
  },
  {
    "text": "there was a c like implementation FM FM which I think was the first language ever written on the beam in 2008. yeah",
    "start": "1931520",
    "end": "1939200"
  },
  {
    "text": "it was sort of python inspired yeah since python but it is python inspired in many ways for it and yeah Lou Earl",
    "start": "1939200",
    "end": "1945500"
  },
  {
    "text": "and many many others but obviously the largest one today without doubt is elixir yeah um and",
    "start": "1945500",
    "end": "1953059"
  },
  {
    "text": "and why is that why is kind of Elixir now you're becoming much much larger uh",
    "start": "1953059",
    "end": "1959240"
  },
  {
    "text": "and and it's interesting again you know it boils down to what problem you're trying to solve when Robert Mike",
    "start": "1959240",
    "end": "1966200"
  },
  {
    "text": "and Joe started off they were trying to figure out how to program the next generation of Telecom switches and",
    "start": "1966200",
    "end": "1972620"
  },
  {
    "text": "that's the problem they sold you you go in and you asked Josephine the creator of Elixir what problem was",
    "start": "1972620",
    "end": "1978140"
  },
  {
    "text": "he trying to solve and he'll tell you he's trying to bring the power of erlang to new communities and in doing so you",
    "start": "1978140",
    "end": "1983960"
  },
  {
    "text": "want to start with the web you know followed by embedded and you know now you'll keep an eye out over what's",
    "start": "1983960",
    "end": "1989240"
  },
  {
    "text": "happening the machine learning space there's a new framework called Axon which you know they're looking at making",
    "start": "1989240",
    "end": "1995419"
  },
  {
    "text": "ensuring you know that you've got the same level of accessibility and ease of use as you have uh in the web space but",
    "start": "1995419",
    "end": "2002860"
  },
  {
    "text": "also in uh in the embedded space so Jose valene's Focus had not been on solving",
    "start": "2002860",
    "end": "2010000"
  },
  {
    "text": "problems but on the adoption of a solid runtime and language principles you know through good Frameworks accessibility",
    "start": "2010000",
    "end": "2016799"
  },
  {
    "text": "and really top and high-end documentation I can say one thing I was",
    "start": "2016799",
    "end": "2022120"
  },
  {
    "text": "extremely surprised what what Francesco was saying we were out to solve a problem and then I heard there's someone written a web browser or web server in",
    "start": "2022120",
    "end": "2030220"
  },
  {
    "text": "um an hour long I thought why would anyone want to do that right it was just weird because that's not",
    "start": "2030220",
    "end": "2035799"
  },
  {
    "text": "what we're thinking about when you start looking at the problems you'll find that very very similar in",
    "start": "2035799",
    "end": "2042100"
  },
  {
    "text": "many cases very similar type of things thereafter that they want to run massive things at the same time you don't want",
    "start": "2042100",
    "end": "2047679"
  },
  {
    "text": "your server to crash right if I'm if I've got a company with a web server and it crashes that just gives the companies",
    "start": "2047679",
    "end": "2053320"
  },
  {
    "text": "a bad name so you might lose connections but the server should keep running you want to keep it running the whole",
    "start": "2053320",
    "end": "2058599"
  },
  {
    "text": "time and things like this for it so they're very many many cases the properties they want us they want to",
    "start": "2058599",
    "end": "2063700"
  },
  {
    "text": "handle are the same that's why it works in that sense as well",
    "start": "2063700",
    "end": "2069158"
  },
  {
    "text": "and I think the interesting part again a web server I mean this was um I recall that web server I was",
    "start": "2069159",
    "end": "2075580"
  },
  {
    "text": "actually using it and playing with it back in 95 but if you go in and look at some of the benchmarks they had with",
    "start": "2075580",
    "end": "2081220"
  },
  {
    "text": "yours which is yet another web server which came around from was open source from nortel networks in 2000 2001. uh",
    "start": "2081220",
    "end": "2089858"
  },
  {
    "text": "that server completely crashed Apache and it managed to handle",
    "start": "2089859",
    "end": "2096040"
  },
  {
    "text": "um probably 70 000 simultaneously open TCP connections you know when those benchmarks were made whilst Apache was",
    "start": "2096040",
    "end": "2102460"
  },
  {
    "text": "still kind of hovering seven eight thousand with no degradation of throughput and service but no one",
    "start": "2102460",
    "end": "2108099"
  },
  {
    "text": "thought of packaging it up as a standalone application similar to what they've done for example with rabidmq",
    "start": "2108099",
    "end": "2113980"
  },
  {
    "text": "because again that's not what we were doing you know we would take probably what was one of the fastest web servers",
    "start": "2113980",
    "end": "2119560"
  },
  {
    "text": "available at the time when we'd embed it and use it you know to to you know to to serve pages to operational team you know",
    "start": "2119560",
    "end": "2125680"
  },
  {
    "text": "telling them that the system was down so uh yeah it's and again because yeah",
    "start": "2125680",
    "end": "2130960"
  },
  {
    "text": "it's depends from what angle you're coming from and what types of problems you have to solve but uh yeah I think",
    "start": "2130960",
    "end": "2139119"
  },
  {
    "text": "you know Jose really did the right thing putting in a ruby like syntax uh to",
    "start": "2139119",
    "end": "2144160"
  },
  {
    "text": "Elixir because yeah there's not much Ruby in Elixir but apart from the syntax but it opens up",
    "start": "2144160",
    "end": "2151359"
  },
  {
    "text": "the doors and you know with a sense of familiarity and it reduces you know the psychological barrier to entry yeah",
    "start": "2151359",
    "end": "2158440"
  },
  {
    "text": "added macros uh kind of inspired from closure again to create a dynamic",
    "start": "2158440",
    "end": "2163900"
  },
  {
    "text": "language which could easily be adapted and changed for different uh use cases",
    "start": "2163900",
    "end": "2169180"
  },
  {
    "text": "as well and and we had that I mean we had macros in erlang as well but we made sure that they were very very hard to",
    "start": "2169180",
    "end": "2175300"
  },
  {
    "text": "use because yeah we were discouraging people from using them yeah because maintainability becomes a nightmare and",
    "start": "2175300",
    "end": "2181420"
  },
  {
    "text": "I think that was one of the key concerns yeah we always had yeah they're very the airline macros are very primitive and",
    "start": "2181420",
    "end": "2188200"
  },
  {
    "text": "they're not going to change they haven't changed in 30 years not going to change now so and I think yeah it's going to be really",
    "start": "2188200",
    "end": "2194320"
  },
  {
    "text": "interesting to see what the next language is you know and you know where we're today is is well one of the areas",
    "start": "2194320",
    "end": "2200440"
  },
  {
    "text": "which I think you know we've been strong in is around orchestration and you know",
    "start": "2200440",
    "end": "2206500"
  },
  {
    "text": "I think even there you know the whole semantics of a language and the distribution which is built in allows",
    "start": "2206500",
    "end": "2212740"
  },
  {
    "text": "nodes in your cluster to come and go dynamically without having to change",
    "start": "2212740",
    "end": "2218140"
  },
  {
    "text": "your code base or having to worry about any of that and again you know this this is happening today uh with",
    "start": "2218140",
    "end": "2223660"
  },
  {
    "text": "containerization and and kubernetes where you can spin off containers and tear them down so it's it's you know",
    "start": "2223660",
    "end": "2230800"
  },
  {
    "text": "fairly fairly straightforward so it's uh you know the Big Challenge we have now",
    "start": "2230800",
    "end": "2236740"
  },
  {
    "text": "is the overlap of functionality what functionality is provided by kubernetes versus the ecosystem",
    "start": "2236740",
    "end": "2244180"
  },
  {
    "text": "and how do you convince a devops team you know who doesn't know anything about Alexa or erlang not to use utilize",
    "start": "2244180",
    "end": "2251560"
  },
  {
    "text": "features in kubernetes when they already exist in the ecosystem because that's when you then end up getting a lock-in",
    "start": "2251560",
    "end": "2258640"
  },
  {
    "text": "um in a particular tool which you want to go in and try to avoid",
    "start": "2258640",
    "end": "2265319"
  },
  {
    "text": "um yeah let's oh well this is just me uh yes so I don't know there is a quote by",
    "start": "2265660",
    "end": "2273040"
  },
  {
    "text": "a guy called Greenspun and I have to get the quote here right it's is his tenth rule of programming",
    "start": "2273040",
    "end": "2280900"
  },
  {
    "text": "um any sufficiently complicated C or Fortran program contains an ad hoc informally specified bug ridden slow",
    "start": "2280900",
    "end": "2288099"
  },
  {
    "text": "implementation of half of common lisp in there is no he he doesn't have a rule",
    "start": "2288099",
    "end": "2293800"
  },
  {
    "text": "one tonight you're Central for it but I thought this was quite funny and I'm Elizabeth so of course I assume I know",
    "start": "2293800",
    "end": "2301300"
  },
  {
    "text": "it's correct right for it but this would also this would actually migrate quite well over into la and the fact that any",
    "start": "2301300",
    "end": "2308380"
  },
  {
    "text": "sufficiently complex complicated current concurrent program in another language contains an ad hoc informally specified",
    "start": "2308380",
    "end": "2314859"
  },
  {
    "text": "bug written slow implementation of half of our language because you're attacking exactly the same problems right",
    "start": "2314859",
    "end": "2320980"
  },
  {
    "text": "that's what you're doing that's well the same properties here that's that's that's where you end up and the fact",
    "start": "2320980",
    "end": "2326440"
  },
  {
    "text": "that airline does it at a very low level at the base of the system means they can be extremely efficiently done they are",
    "start": "2326440",
    "end": "2332740"
  },
  {
    "text": "extremely efficiently done because it is at the low level you build your language and stuff on top of it",
    "start": "2332740",
    "end": "2338800"
  },
  {
    "text": "and this is yes I thought that was very funny so I mean the point is it is very very",
    "start": "2338800",
    "end": "2345040"
  },
  {
    "text": "hard if not impossible to bolt on a concurrency model to language as an afterthought it is something which you",
    "start": "2345040",
    "end": "2352420"
  },
  {
    "text": "you need to think about from the start because not only does it go in and affect",
    "start": "2352420",
    "end": "2358300"
  },
  {
    "text": "your whole runtime environment it will actually even affect how you code in that particular language",
    "start": "2358300",
    "end": "2364119"
  },
  {
    "text": "and I think you know it's going to be very very very interesting I think you know we come to conferences to learn one of the things I learned from this",
    "start": "2364119",
    "end": "2369820"
  },
  {
    "text": "conference is uh that they recently added concurrency to Swift and I think",
    "start": "2369820",
    "end": "2375460"
  },
  {
    "text": "it's going to be interesting to see if it works out because right now you've got a whole community of developers used",
    "start": "2375460",
    "end": "2381940"
  },
  {
    "text": "to doing things in a particular way and migrating the mindset to to using",
    "start": "2381940",
    "end": "2388599"
  },
  {
    "start": "2388000",
    "end": "2550000"
  },
  {
    "text": "concurrency uh as the key building block will probably not be easy not only how",
    "start": "2388599",
    "end": "2393700"
  },
  {
    "text": "do you go in and actually use the library so it's something which needs to be part of the language yeah from day one yeah I can just continue what",
    "start": "2393700",
    "end": "2401260"
  },
  {
    "text": "Francesco's saying if you're coming into these languages it is a big rethink and how how do I structure my system how do",
    "start": "2401260",
    "end": "2408160"
  },
  {
    "text": "I structure what do I need to take care of what can I let the underlying system take care of for me how do I use the",
    "start": "2408160",
    "end": "2413680"
  },
  {
    "text": "best things for it I mean we have these things for handling errors how do I use those in a very nice way you get the",
    "start": "2413680",
    "end": "2420520"
  },
  {
    "text": "right functionality I want in a good way and that that can be a quite a large rethink on how I structure my system",
    "start": "2420520",
    "end": "2426579"
  },
  {
    "text": "before so it's not always trivial to do it but once you get in there do it and",
    "start": "2426579",
    "end": "2432940"
  },
  {
    "text": "like the letter crash philosophy that feels very bad right if something goes wrong why should I crash the",
    "start": "2432940",
    "end": "2439180"
  },
  {
    "text": "process because that can do an awful lot of stuff like make things very much worse of course in the airline point of",
    "start": "2439180",
    "end": "2444280"
  },
  {
    "text": "view we're letting one hourlying process crash we're not talking about the airline system crashing I can just have",
    "start": "2444280",
    "end": "2450520"
  },
  {
    "text": "one very funny thing I read um stack Overflow a number of years ago they were discussing the letter crash",
    "start": "2450520",
    "end": "2455800"
  },
  {
    "text": "philosophy in Allen and one guy was getting very worked up about this so he said how can you let just let things",
    "start": "2455800",
    "end": "2461320"
  },
  {
    "text": "crash if my systems crash it's going to cost me a few hundred thousand dollars every time right so I cannot let it",
    "start": "2461320",
    "end": "2467140"
  },
  {
    "text": "crash of course what no one had explained to him we're not talking about the whole system crashing we're talking about tiny",
    "start": "2467140",
    "end": "2474220"
  },
  {
    "text": "chunks inside the system crashing and the system designed in such a way it can handle this keep on going restart when",
    "start": "2474220",
    "end": "2480880"
  },
  {
    "text": "necessary and not crash it's very hard to crash an airline system unless you know what you're doing",
    "start": "2480880",
    "end": "2486700"
  },
  {
    "text": "and you know how the system's designed right and the whole let it crash doesn't mean you're not",
    "start": "2486700",
    "end": "2491800"
  },
  {
    "text": "ignoring your errors you're just taking care of your errors in a slightly different way in a way which is",
    "start": "2491800",
    "end": "2497320"
  },
  {
    "text": "standardized from across the board and so by letting a process crash you know you're handling",
    "start": "2497320",
    "end": "2503520"
  },
  {
    "text": "software errors you're handling corrupt data errors you're handling network errors you're handling distributed",
    "start": "2503520",
    "end": "2509680"
  },
  {
    "text": "programming errors so basically what happens if your remote machine crashes what happens if your remote uh",
    "start": "2509680",
    "end": "2515380"
  },
  {
    "text": "container crashes what if if the VM crashes what happens if the the answer",
    "start": "2515380",
    "end": "2520839"
  },
  {
    "text": "is lost so you all handle all of those things which can happen in exactly the same way and in a consistent way across",
    "start": "2520839",
    "end": "2528099"
  },
  {
    "text": "programs yeah there's one error we can't handle if if the machine itself crashes",
    "start": "2528099",
    "end": "2534099"
  },
  {
    "text": "that we can't do much about I'm afraid but that's about it right that's why you have two machines that's why I have two",
    "start": "2534099",
    "end": "2539200"
  },
  {
    "text": "yes if you want to make a truly fault solar system you have to have at least two machines preferably they should be",
    "start": "2539200",
    "end": "2544240"
  },
  {
    "text": "far away as well too because the power goes or one it doesn't go from both of them but yeah okay I'm not going to get further into that yes all right thank",
    "start": "2544240",
    "end": "2550599"
  },
  {
    "start": "2550000",
    "end": "2556000"
  },
  {
    "text": "you for having us thank you [Applause]",
    "start": "2550599",
    "end": "2555920"
  }
]