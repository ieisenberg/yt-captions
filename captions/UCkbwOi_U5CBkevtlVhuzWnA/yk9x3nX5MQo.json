[
  {
    "start": "0",
    "end": "66000"
  },
  {
    "text": "hopefully yes hopefully it's pretty embarrassing if you don't test the initial State and this is beautiful this",
    "start": "120",
    "end": "5759"
  },
  {
    "text": "is absolutely beautiful right because I can look at the Cod and the Cod is always clear this is like 10 lines of go",
    "start": "5759",
    "end": "13320"
  },
  {
    "text": "code all standard library imitability is going to give you I can argue that",
    "start": "13320",
    "end": "19080"
  },
  {
    "text": "confidently is going to give you better software maintenance because it's going to make it much clearer to understand",
    "start": "19080",
    "end": "25430"
  },
  {
    "text": "[Music]",
    "start": "25430",
    "end": "30920"
  },
  {
    "text": "today I'm here with Jose valim and and I'm I'm butchering I'm butchering the last name can can can you say it",
    "start": "30920",
    "end": "36760"
  },
  {
    "text": "correctly uh for everybody listening yeah Jose valim and uh it's funny you say that because uh usually people they",
    "start": "36760",
    "end": "43920"
  },
  {
    "text": "go in the comments and say it's Jose it's Portuguese right but I I honestly I",
    "start": "43920",
    "end": "49320"
  },
  {
    "text": "don't mind Jose valim and the funny thing is I knew that and it it's still like I I",
    "start": "49320",
    "end": "56719"
  },
  {
    "text": "speak Spanish it still destroys me like I can't I don't have the mental capacity to go two language hops like through",
    "start": "56719",
    "end": "64158"
  },
  {
    "text": "Spanish all the way into Portuguese so when I was University I studied French",
    "start": "64159",
    "end": "70759"
  },
  {
    "start": "66000",
    "end": "178000"
  },
  {
    "text": "and English at the same time and it was horrible because I would go like to the English classes and suddenly say",
    "start": "70759",
    "end": "77000"
  },
  {
    "text": "entertain more right like suddenly like the French word the French some French",
    "start": "77000",
    "end": "82439"
  },
  {
    "text": "sounds would come up to my head and completely mess everything up so could",
    "start": "82439",
    "end": "87520"
  },
  {
    "text": "not speak any of those properly okay I've had a very similar experience I think and it's it's terrible I so living",
    "start": "87520",
    "end": "94159"
  },
  {
    "text": "down in Paraguay speaking Spanish I came to kind of associate people not",
    "start": "94159",
    "end": "99280"
  },
  {
    "text": "understanding me with like oh I need to tell them in Spanish especially like when I was new there cuz I'd like say",
    "start": "99280",
    "end": "104759"
  },
  {
    "text": "something in English forgetting and they'd be like I don't understand and then I like try to think of the Spanish word there have been a few very",
    "start": "104759",
    "end": "110040"
  },
  {
    "text": "embarrassing times when I've been like speaking to a Japanese person and then I'll be like oh you",
    "start": "110040",
    "end": "116000"
  },
  {
    "text": "don't understand let me tell you in Spanish and I just like and I'm like oh my God like what am I doing yeah yeah if",
    "start": "116000",
    "end": "123759"
  },
  {
    "text": "you're if we going to embarrassing stories uh I I I can contribute one as",
    "start": "123759",
    "end": "129280"
  },
  {
    "text": "well so I live in Poland right and Ola is a Polish name it's a shortcut I",
    "start": "129280",
    "end": "136519"
  },
  {
    "text": "believe for Alexandra but people introduce themselves as Ola right but if",
    "start": "136519",
    "end": "141599"
  },
  {
    "text": "you speak Spanish or Portuguese allaha is a greeting right so so yeah so you",
    "start": "141599",
    "end": "149280"
  },
  {
    "text": "can see where this is going right like my wife was introducing me to to her friend right and then she's like oh my",
    "start": "149280",
    "end": "155360"
  },
  {
    "text": "name is AA and then I'm like H like repeating the name all the time right people like why is he repeating my name",
    "start": "155360",
    "end": "163319"
  },
  {
    "text": "until like one weekend later you're like oh now I know now I know I didn't get",
    "start": "163319",
    "end": "171120"
  },
  {
    "text": "her name she was not greting me that sounds exactly like something I",
    "start": "171120",
    "end": "176879"
  },
  {
    "text": "would do oh what a struggle cool well today hey so for everyone who who didn't already pick up on this just by me name",
    "start": "176879",
    "end": "183959"
  },
  {
    "start": "178000",
    "end": "411000"
  },
  {
    "text": "dropping you um today I'm speaking with the creator of The Elixir programming language which I was doing some research",
    "start": "183959",
    "end": "191440"
  },
  {
    "text": "Elixir is I mean it is it's a popular language I don't want to not do it justice it's it's not JavaScript it's",
    "start": "191440",
    "end": "198040"
  },
  {
    "text": "not python but it is a popular language and it really kind of blew me away to find out that it's",
    "start": "198040",
    "end": "203599"
  },
  {
    "text": "arguably the most popular functional programming language used in industry",
    "start": "203599",
    "end": "209480"
  },
  {
    "text": "there's some contenders but I mean Elixir is really up there when I was checking the stack Overflow survey I'm",
    "start": "209480",
    "end": "215480"
  },
  {
    "text": "sure you're happy with those numbers yeah yeah oh it's I think I think yeah I",
    "start": "215480",
    "end": "221120"
  },
  {
    "text": "I think just in that quick stat there's so much we can talk about but I think like depending on the Matrix that you",
    "start": "221120",
    "end": "228519"
  },
  {
    "text": "are looking at so for example like there are Matrix from like the GitHub stat",
    "start": "228519",
    "end": "233879"
  },
  {
    "text": "statistics like number of commits PO requests and elixir is usually like top",
    "start": "233879",
    "end": "240400"
  },
  {
    "text": "three we are kind of like between some sometimes we are above Scala and hasco in other ring in other metrics they are",
    "start": "240400",
    "end": "247360"
  },
  {
    "text": "above us uh which is definitely very interesting but I think but one of the",
    "start": "247360",
    "end": "253439"
  },
  {
    "text": "things that uh uh it's curious to me is that when people think about like",
    "start": "253439",
    "end": "260320"
  },
  {
    "text": "functional programming languages or they would describe it like elixir or airling",
    "start": "260320",
    "end": "266639"
  },
  {
    "text": "is not necessarily what comes to mind right yeah so it's it's it's it's a",
    "start": "266639",
    "end": "272479"
  },
  {
    "text": "funny curious place to be at I think yeah the the stack over flow I don't",
    "start": "272479",
    "end": "279160"
  },
  {
    "text": "believe it was the most popular it was the most loved or most",
    "start": "279160",
    "end": "285560"
  },
  {
    "text": "admired yeah and that was let show that one too second second most loved second",
    "start": "285560",
    "end": "291880"
  },
  {
    "text": "most admired oh but you're saying like in the stack Overflow it also came as the most popular between the FP ones",
    "start": "291880",
    "end": "298840"
  },
  {
    "text": "yeah it so obvious like if you cut down to the FP languages which like takes it down pretty small admittedly like Scala",
    "start": "298840",
    "end": "305039"
  },
  {
    "text": "is the only one I'm seeing that at least that I recognized as a functional language that comes in just a like. 3%",
    "start": "305039",
    "end": "312280"
  },
  {
    "text": "higher than than Elixir Elixir is sitting there at 2.3% usage amongst professional developers oh that's I",
    "start": "312280",
    "end": "318759"
  },
  {
    "text": "actually so that's new to me I actually did not look at that part of the stacks over oh really okay cool yeah I was",
    "start": "318759",
    "end": "324199"
  },
  {
    "text": "blown away like it's got I mean if you compare it to say o camel which is something for some reason like we hear",
    "start": "324199",
    "end": "329880"
  },
  {
    "text": "about it all the time I like five people on this podcast talking about o camel it's at half a percent of usage amongst",
    "start": "329880",
    "end": "335880"
  },
  {
    "text": "professional developers Elixir is like five times that um according to stack Overflow yeah yeah and and then I know",
    "start": "335880",
    "end": "341960"
  },
  {
    "text": "we got most loved or admired the second most loved be behind",
    "start": "341960",
    "end": "348240"
  },
  {
    "text": "rest and which is crazy impressive by the way yeah yeah and then and then",
    "start": "348240",
    "end": "354000"
  },
  {
    "text": "there is a yeah we can talk a lot about that as well uh and then there is also",
    "start": "354000",
    "end": "359240"
  },
  {
    "text": "the I think the Phoenix web framework came as the which is how we build web applications in Elixir and that one came",
    "start": "359240",
    "end": "367080"
  },
  {
    "text": "as you know s first uh most loved or most admired which is really really nice",
    "start": "367080",
    "end": "372319"
  },
  {
    "text": "I haven't done Phoenix uh Elixir Phoenix yet I am very curious I've always been",
    "start": "372319",
    "end": "379919"
  },
  {
    "text": "critical of like full stack web development Frameworks um I like I said",
    "start": "379919",
    "end": "385240"
  },
  {
    "text": "I've not tried Phoenix so it's absolutely not fair for me to like lump it in with the others but like I've",
    "start": "385240",
    "end": "390479"
  },
  {
    "text": "always been very critical of uh D Jango python that's the one I've had the most experience with um and I've always kind",
    "start": "390479",
    "end": "397080"
  },
  {
    "text": "of unfairly lumped Ruby on Rails in with it because I know they're similar again I know they're not the same they're",
    "start": "397080",
    "end": "403120"
  },
  {
    "text": "similar because I'm such a go Fanboy minimalist that I've always struggled",
    "start": "403120",
    "end": "409919"
  },
  {
    "text": "with with the Frameworks actually that that brings up an interesting question how much like obviously you created",
    "start": "409919",
    "end": "414960"
  },
  {
    "start": "411000",
    "end": "508000"
  },
  {
    "text": "Elixir you've done a lot of Elixir you've done a lot of earling do you do much with",
    "start": "414960",
    "end": "420160"
  },
  {
    "text": "in terms of using the framework ah yeah so it's definitely I would say it",
    "start": "420160",
    "end": "426440"
  },
  {
    "text": "doesn't consist a huge amount of my time but I definitely do it so I'm working on",
    "start": "426440",
    "end": "432360"
  },
  {
    "text": "a product which is obviously using Phoenix we have this amazing tool called",
    "start": "432360",
    "end": "437599"
  },
  {
    "text": "a live book which is like Jupiter trying to summarize like Jupiter notebooks but",
    "start": "437599",
    "end": "442720"
  },
  {
    "text": "for Elixir but with a bunch of different takes into a bunch of things so like distributed programming is part of the",
    "start": "442720",
    "end": "449280"
  },
  {
    "text": "whole infrastructure and that like Jupiter notebooks is like it's a web application so it's built with Phoenix",
    "start": "449280",
    "end": "455120"
  },
  {
    "text": "as well it's also built with live view which is this uh tool that we have in",
    "start": "455120",
    "end": "461599"
  },
  {
    "text": "Phoenix for writing you know client side applications as well um how would I say",
    "start": "461599",
    "end": "469520"
  },
  {
    "text": "well you want to write like a full stack application but you don't want to be split into writing JavaScript right and",
    "start": "469520",
    "end": "474919"
  },
  {
    "text": "then going and writing Elixir so you want to have tools that unify the the",
    "start": "474919",
    "end": "480159"
  },
  {
    "text": "the front end with the back end and Phoenix live view it's one of the first actually libraries to do that and it",
    "start": "480159",
    "end": "487360"
  },
  {
    "text": "does it with a very unique uh fixy elixiry approach which we can talk about",
    "start": "487360",
    "end": "494159"
  },
  {
    "text": "as well so I do I do some but it's not like the the bulk of my time I usually",
    "start": "494159",
    "end": "500039"
  },
  {
    "text": "prefer to be like one or two layers below that yeah I",
    "start": "500039",
    "end": "506280"
  },
  {
    "text": "I would imagine as a as a programming language author okay you mentioned this idea of elixiry",
    "start": "506280",
    "end": "513719"
  },
  {
    "start": "508000",
    "end": "1011000"
  },
  {
    "text": "phoenixyoutube at least in my mind is like oh this is like one of the more popular functional programming languages",
    "start": "538440",
    "end": "543480"
  },
  {
    "text": "particularly for web stuff not statically typed no it isn't tell me",
    "start": "543480",
    "end": "548800"
  },
  {
    "text": "about that decision yeah yeah yeah so that decision pretty much came from it",
    "start": "548800",
    "end": "553839"
  },
  {
    "text": "it didn't come from me we may need to have a three- hours episode but uh since like this is just the discovery there",
    "start": "553839",
    "end": "560079"
  },
  {
    "text": "are so many topics right but so alexir runs on top of theing virtual machine",
    "start": "560079",
    "end": "566399"
  },
  {
    "text": "and the Arling vtu machine was created by Eric which is a telecommunication company and the the lab the team like uh",
    "start": "566399",
    "end": "575360"
  },
  {
    "text": "who who built airling the language and the runtime what they had to do is to",
    "start": "575360",
    "end": "580399"
  },
  {
    "text": "build telephone switches right so a telephone switch needs to be needs to deal with concurrency a lot of people",
    "start": "580399",
    "end": "586640"
  },
  {
    "text": "talking at the same time right it needs to be able to deal with distribution right because it's literally a Global",
    "start": "586640",
    "end": "593560"
  },
  {
    "text": "Network and uh it needs to be able to deal uh with tolerance you don't want",
    "start": "593560",
    "end": "599480"
  },
  {
    "text": "like if something goes wrong that system needs to recover itself right it's basic infrastructure right and there are even",
    "start": "599480",
    "end": "605480"
  },
  {
    "text": "other requirements like you need to be able to upgrade the code live in",
    "start": "605480",
    "end": "612279"
  },
  {
    "text": "production while the system is running right because it cannot be like oh just",
    "start": "612279",
    "end": "617680"
  },
  {
    "text": "do like a blue green or whatever deployment where you go and shut everybody off and then you start again",
    "start": "617680",
    "end": "624000"
  },
  {
    "text": "because you know there's always going to be somebody on the phone you cannot like just cut everyone's telephone calls just",
    "start": "624000",
    "end": "629320"
  },
  {
    "text": "just end call them back yeah I also like to say like we don't receive like",
    "start": "629320",
    "end": "635160"
  },
  {
    "text": "messages from our phone operators saying hey the system is going to be maintenance mode from 2: a.m. to 3:00",
    "start": "635160",
    "end": "640240"
  },
  {
    "text": "a.m. please don't do any calls right so they had to solve all those problems and they came with verling right and and and",
    "start": "640240",
    "end": "648600"
  },
  {
    "text": "you know when they did that so it was like very pragmatic IND like problem",
    "start": "648600",
    "end": "654880"
  },
  {
    "text": "solve driven like so people are going to say airling has the actor model but like when they created Airline they did not",
    "start": "654880",
    "end": "660839"
  },
  {
    "text": "know that there was this thing called the actor model it just turned out that for the kind of fault tolerant",
    "start": "660839",
    "end": "667399"
  },
  {
    "text": "concurrent distributed software they wanted to build the actor model which they didn't know at the time was the",
    "start": "667399",
    "end": "672920"
  },
  {
    "text": "actor model that kind of solution was what they wanted and then they say like",
    "start": "672920",
    "end": "678120"
  },
  {
    "text": "look if we thought a type system would have been helpful for us to write this",
    "start": "678120",
    "end": "685120"
  },
  {
    "text": "kind of fa tolerant software resilient uh we we would have Implement",
    "start": "685120",
    "end": "690200"
  },
  {
    "text": "a type system but we just don't think that would that was the essential part",
    "start": "690200",
    "end": "695920"
  },
  {
    "text": "of it right and then if you tell this to people right some people are not going to be happy with that at all right but",
    "start": "695920",
    "end": "702399"
  },
  {
    "text": "if you get from their point of view right like it's literally a distributed system running over the network you",
    "start": "702399",
    "end": "709079"
  },
  {
    "text": "cannot you cannot model like all the states that can go wrong right like",
    "start": "709079",
    "end": "715200"
  },
  {
    "text": "sometimes like oh you know like a bit flipped things went wrong wrong right like the whole thing disappeared the",
    "start": "715200",
    "end": "721680"
  },
  {
    "text": "other node is not responding how are you going to deal with this so they realize that the important thing to have in that",
    "start": "721680",
    "end": "728800"
  },
  {
    "text": "system is if something goes wrong the system needs to be able to heal itself",
    "start": "728800",
    "end": "734680"
  },
  {
    "text": "and recover and go back to a working State and that's what they worked on and we can talk a lot about what makes that",
    "start": "734680",
    "end": "741440"
  },
  {
    "text": "possible but that was their focus I think like today so when I came with",
    "start": "741440",
    "end": "747160"
  },
  {
    "text": "Elixir I was like I was coming from Ruby I Dynamic language and then I was like all right air Lang is dynamic Elixir is",
    "start": "747160",
    "end": "754360"
  },
  {
    "text": "going to be dynamic and uh and I was happy with that decision because that was my background that was where I was",
    "start": "754360",
    "end": "762199"
  },
  {
    "text": "coming from but today we're actually I have been for three years I think at",
    "start": "762199",
    "end": "767440"
  },
  {
    "text": "this point working with the cnrs which is like the largest research institution",
    "start": "767440",
    "end": "772639"
  },
  {
    "text": "in Europe for bringing a type system to Elixir and I have been working on those problems and I to I think there are a",
    "start": "772639",
    "end": "779560"
  },
  {
    "text": "lot of benefits that we can get from a type system in finding some class of",
    "start": "779560",
    "end": "785639"
  },
  {
    "text": "bugs and uh and make sure that we get feedback quick but I have to say that",
    "start": "785639",
    "end": "792680"
  },
  {
    "text": "also the benefits of the of a type system they tend to",
    "start": "792680",
    "end": "799399"
  },
  {
    "text": "be like overblown right like what you hear the things that people say online",
    "start": "799399",
    "end": "805120"
  },
  {
    "text": "about type systems like you know like oh you know like if I had have a type system I can write fewer tests for me",
    "start": "805120",
    "end": "812040"
  },
  {
    "text": "it's like no like that that should not",
    "start": "812040",
    "end": "817079"
  },
  {
    "text": "be the case like maybe you can write fewer bad tests right maybe or maybe if",
    "start": "817079",
    "end": "823079"
  },
  {
    "text": "you're using like a language like uh JavaScript or PHP where you have weak",
    "start": "823079",
    "end": "830120"
  },
  {
    "text": "typing and kind of anything goes but for the huge majority of languages that's not going to be true right because types",
    "start": "830120",
    "end": "838279"
  },
  {
    "text": "they are representing types right like your code is all about about values",
    "start": "838279",
    "end": "843480"
  },
  {
    "text": "right so I like to say like if you take like the Boolean or operation right like if you receive uh false and false",
    "start": "843480",
    "end": "850519"
  },
  {
    "text": "returns false if you receive true and false returns true and so on right the type of that thing is receives a bullion",
    "start": "850519",
    "end": "857360"
  },
  {
    "text": "receives a bullion returns a Boolean which means that implementation that returns true or false randomly would",
    "start": "857360",
    "end": "863680"
  },
  {
    "text": "completely satisfy the type system and it would be obviously wrong so yeah so",
    "start": "863680",
    "end": "868720"
  },
  {
    "text": "El is the long story short uh Elixir is",
    "start": "868720",
    "end": "873839"
  },
  {
    "text": "uh dynamically typed language we have been researching and bringing a gradual",
    "start": "873839",
    "end": "880639"
  },
  {
    "text": "type system into Elixir and a lot of people are going to think oh typescript it's typescript is the closest thing but",
    "start": "880639",
    "end": "888399"
  },
  {
    "text": "what we're working on is quite different from uh typescript in many ways we have a lot of things in our blog explaining",
    "start": "888399",
    "end": "894880"
  },
  {
    "text": "our design decisions but yeah but I I think today it's still very fair to say",
    "start": "894880",
    "end": "900279"
  },
  {
    "text": "that it is a dynamically typed language I don't want to get into a discussion about whether static or dynamic typing",
    "start": "900279",
    "end": "906759"
  },
  {
    "text": "is better because I do sit pretty firmly on the side of of really liking static types and I would even go so far as to",
    "start": "906759",
    "end": "912600"
  },
  {
    "text": "say I do believe that static types can eliminate a lot of unit tests that you",
    "start": "912600",
    "end": "918120"
  },
  {
    "text": "would otherwise need but I'm sitting here with the creator of The Elixir programming language and I feel very",
    "start": "918120",
    "end": "923680"
  },
  {
    "text": "outclassed so it's not even a discussion I want to get into um the",
    "start": "923680",
    "end": "930000"
  },
  {
    "text": "people have heard my opinions on on static types before so I won't like shy away from my opinions uh but it is",
    "start": "930000",
    "end": "936399"
  },
  {
    "text": "pretty intimidating to be like oh yes you've created a programming language I've shipped a few web apps why don't I tell you how to write uh why don't I",
    "start": "936399",
    "end": "942800"
  },
  {
    "text": "tell you how to write some code um so I I'll I'll encourage people to do",
    "start": "942800",
    "end": "948480"
  },
  {
    "text": "their own research on that plus there's a lot of really interesting stuff to talk about about the concurrency model so I don't want to get too far into it",
    "start": "948480",
    "end": "953600"
  },
  {
    "text": "but I am really excited to hear that you guys are thinking about types because okay maybe I'll say like a couple things",
    "start": "953600",
    "end": "958800"
  },
  {
    "text": "and I'll ask you a question about it too um when you were talking about the earling uh folks which I know that we",
    "start": "958800",
    "end": "964800"
  },
  {
    "text": "don't have any of the earling creators here on this call so we can't speak for them but we can maybe suppose what they were thinking or",
    "start": "964800",
    "end": "972880"
  },
  {
    "text": "guess at it you said something that I thought was really interesting which was like okay when they were designing",
    "start": "972880",
    "end": "978240"
  },
  {
    "text": "earling they were more worried about and I'm paraphrasing you here they were more worried about like faulty stuff",
    "start": "978240",
    "end": "985880"
  },
  {
    "text": "happening almost at like the hardware level or at the network level right like I'm receiving maybe payloads over the",
    "start": "985880",
    "end": "991079"
  },
  {
    "text": "network that are invalid and I need to parse and check those and make sure that they're valid I'm worried about like nodes not being able to talk to each",
    "start": "991079",
    "end": "997399"
  },
  {
    "text": "other I'm worried about one part of the system being down and that it's almost like that class of problem was so large",
    "start": "997399",
    "end": "1005199"
  },
  {
    "text": "that it just completely dwarfed any issues with like oh I forgot I was supposed to pass in a string here instead of a instead of an integer that",
    "start": "1005199",
    "end": "1012480"
  },
  {
    "start": "1011000",
    "end": "1696000"
  },
  {
    "text": "like what's happening in my code just wasn't as much of a concern because I have to worry so much about what's what's coming into my system almost as",
    "start": "1012480",
    "end": "1019000"
  },
  {
    "text": "like external inputs is that kind of what you were thinking yes I think I",
    "start": "1019000",
    "end": "1024558"
  },
  {
    "text": "think it's a lot about that uh so for example like in in the process of adding",
    "start": "1024559",
    "end": "1030240"
  },
  {
    "text": "types to Elixir we have to think a lot about our idioms right what we want to",
    "start": "1030240",
    "end": "1035360"
  },
  {
    "text": "do what we want to express right so one of the things is that like imagine that",
    "start": "1035360",
    "end": "1040438"
  },
  {
    "text": "you're are calling another service right and IM and imagine",
    "start": "1040439",
    "end": "1047678"
  },
  {
    "text": "that there is a well-defined contract between those two things and what happens if for some",
    "start": "1047679",
    "end": "1056080"
  },
  {
    "text": "reason can be anything to the different Services running over the network it",
    "start": "1056080",
    "end": "1061679"
  },
  {
    "text": "sends some data that does not adhere to your contract right to what you're expecting right",
    "start": "1061679",
    "end": "1068400"
  },
  {
    "text": "like there is like what can you like it's not is is not something that like",
    "start": "1068400",
    "end": "1074799"
  },
  {
    "text": "it's something that you can model but after you model that exactly what what are you going to do like you can think",
    "start": "1074799",
    "end": "1080760"
  },
  {
    "text": "about things like oh I'm going well probably the best thing that I can do is",
    "start": "1080760",
    "end": "1085880"
  },
  {
    "text": "to to drop what I'm doing because that's an important partner for my service it's",
    "start": "1085880",
    "end": "1091720"
  },
  {
    "text": "clearly saying gibberish it's clearly saying something that does do not part of our standard so I should probably",
    "start": "1091720",
    "end": "1099760"
  },
  {
    "text": "just like assume that whatever I have done this far is is not good there's",
    "start": "1099760",
    "end": "1105120"
  },
  {
    "text": "something going wrong I should probably start again yeah so that's the things",
    "start": "1105120",
    "end": "1110159"
  },
  {
    "text": "those are the kind of idioms that they established right so wait something unexpected is happening and again it can",
    "start": "1110159",
    "end": "1116960"
  },
  {
    "text": "be can be a separate service maybe it can be a hardware component that uses",
    "start": "1116960",
    "end": "1123000"
  },
  {
    "text": "radio that they need to handle in the system or whatever I don't know much about Telecom right but anything that",
    "start": "1123000",
    "end": "1128640"
  },
  {
    "text": "your system needs to interact to right which is what a lot of us are doing every day in the web anyway right we're",
    "start": "1128640",
    "end": "1135280"
  },
  {
    "text": "all talking to apis database all those kind of things uh um so they think about well you know it something went wrong",
    "start": "1135280",
    "end": "1142799"
  },
  {
    "text": "how how can we recover to a working State that's the question they wanted to answer because that's the thing right",
    "start": "1142799",
    "end": "1149480"
  },
  {
    "text": "because one thing that you can say is well maybe the fault is on the separate",
    "start": "1149480",
    "end": "1156360"
  },
  {
    "text": "system right and then I'm going to retry but maybe the fault was a bug in our",
    "start": "1156360",
    "end": "1162520"
  },
  {
    "text": "system for example if you're talking with something in the network imagine if somewhere you accidentally read one",
    "start": "1162520",
    "end": "1169880"
  },
  {
    "text": "extra bite of the socket right if you had read one extra bite of the socket",
    "start": "1169880",
    "end": "1175280"
  },
  {
    "text": "everything else that socket sends to you is going to appear clear gibberish right so the error is not the separate system",
    "start": "1175280",
    "end": "1182600"
  },
  {
    "text": "the error was a bug in your system right which you know can happen you can",
    "start": "1182600",
    "end": "1188520"
  },
  {
    "text": "accidentally read more than you want that makes everything go crazy and then if you're like oh I'm just going to",
    "start": "1188520",
    "end": "1194360"
  },
  {
    "text": "retry yeah retry unless you're like oh I am restarting the whole connection and",
    "start": "1194360",
    "end": "1200039"
  },
  {
    "text": "setting up everything again like if we just say I'm going to do the request again it's not going to fix that right",
    "start": "1200039",
    "end": "1206320"
  },
  {
    "text": "so so so that's the thing like if you really think like what what are the kinds of things that can go wrong and",
    "start": "1206320",
    "end": "1214159"
  },
  {
    "text": "how much of those we can model with type systems like you know like there is a",
    "start": "1214159",
    "end": "1220600"
  },
  {
    "text": "huge like there's a there's a lot of things that are going to overlap but there is a lot that is not going you're",
    "start": "1220600",
    "end": "1226720"
  },
  {
    "text": "not going to to be able to do that right so they're like look the important thing the most important is for us to have a",
    "start": "1226720",
    "end": "1233480"
  },
  {
    "text": "mechanism where if something goes wrong we can risk we can put the system it",
    "start": "1233480",
    "end": "1238520"
  },
  {
    "text": "doesn't matter if it's the separate thing it doesn't matter if it's a lost State uh a state that was corrupted the",
    "start": "1238520",
    "end": "1244520"
  },
  {
    "text": "system can go back to to a working State and that's why we have like supervision trees right so we build everything on",
    "start": "1244520",
    "end": "1252240"
  },
  {
    "text": "top of that like so we organize our code into like processes so like for this",
    "start": "1252240",
    "end": "1259039"
  },
  {
    "text": "podcast now whenever I say process I mean like I do not mean an operating system process I mean a very",
    "start": "1259039",
    "end": "1265039"
  },
  {
    "text": "cheap lightweight thread of execution like a go routine so we organize all of our code like in those processes in",
    "start": "1265039",
    "end": "1271840"
  },
  {
    "text": "those go routines where they are completely isolated from each other right they do not have shared state",
    "start": "1271840",
    "end": "1277200"
  },
  {
    "text": "which is very important because if they have shared State and something goes wrong and if something goes wrong",
    "start": "1277200",
    "end": "1283840"
  },
  {
    "text": "because of that shared State you just corrupted the whole system right so their whole design principle was you",
    "start": "1283840",
    "end": "1288880"
  },
  {
    "text": "know how can we write software that things are isolated when a crash happens",
    "start": "1288880",
    "end": "1295120"
  },
  {
    "text": "the crash is going to be isolated to that part of the system and we can restart it which again is not really",
    "start": "1295120",
    "end": "1301279"
  },
  {
    "text": "much different than how our operating system works right like the programs the operating system process they are all",
    "start": "1301279",
    "end": "1307400"
  },
  {
    "text": "isolated and one something crashes should not affect the other one right so there's a lot of similarity there but",
    "start": "1307400",
    "end": "1313799"
  },
  {
    "text": "that's what they were going for yeah that makes sense I mean type system to",
    "start": "1313799",
    "end": "1319480"
  },
  {
    "text": "me help me primarily with my own and my team's own skill issues regarding like",
    "start": "1319480",
    "end": "1327799"
  },
  {
    "text": "just passing data throughout a program and obviously I come from the context of web development so like for example in",
    "start": "1327799",
    "end": "1333760"
  },
  {
    "text": "Ino work with the network a lot but usually what happens at the network boundary is like we get a payload and then we unmarshal it into some in-memory",
    "start": "1333760",
    "end": "1340400"
  },
  {
    "text": "structure and so it's like at that moment like my that is where all these",
    "start": "1340400",
    "end": "1345720"
  },
  {
    "text": "problems can happen right if if if the if the data is garbled it's not going to unmarshal it's going to fail to",
    "start": "1345720",
    "end": "1350960"
  },
  {
    "text": "unmarshal at that point and I'll get an error but in theory at least once I've unmarshal into an in-memory structure",
    "start": "1350960",
    "end": "1358000"
  },
  {
    "text": "like now my type system can somewhat keep me safe as I pass that data throughout my program and in and out of",
    "start": "1358000",
    "end": "1364120"
  },
  {
    "text": "functions and things like that but like at that Network boundary it doesn't really help other",
    "start": "1364120",
    "end": "1370679"
  },
  {
    "text": "than to like ensure that it's in the the proper State and to your point like I usually design these types of web",
    "start": "1370679",
    "end": "1376679"
  },
  {
    "text": "systems just like fail outright like oh the data is a little bit off screw it we'll just log an error and we'll blow",
    "start": "1376679",
    "end": "1383360"
  },
  {
    "text": "the world up and it's not going to work and we'll just fix it it'll show up in our logs and we'll fix it but that's not",
    "start": "1383360",
    "end": "1389600"
  },
  {
    "text": "acceptable in other types of systems where you can't just like hot deploy you know 20 minutes later once you see the",
    "start": "1389600",
    "end": "1396360"
  },
  {
    "text": "error show up in your log so I totally understand that like in some systems",
    "start": "1396360",
    "end": "1401559"
  },
  {
    "text": "that's the whole problem like that's the 80% of the problem and I'm kind of just hand waving it away and being like well I'll just throw an error right there so",
    "start": "1401559",
    "end": "1407679"
  },
  {
    "text": "it makes a lot of sense to me that they that like they were they had bigger concerns almost or at least different concerns yeah and and again like there",
    "start": "1407679",
    "end": "1414480"
  },
  {
    "text": "are that's only one aspect right but there is also like they are building a distributed system how you're going to",
    "start": "1414480",
    "end": "1421360"
  },
  {
    "text": "deal with uh with typing in a distributed system and also they have",
    "start": "1421360",
    "end": "1427279"
  },
  {
    "text": "like the hot code loading they want to change the code live in production while",
    "start": "1427279",
    "end": "1433559"
  },
  {
    "text": "the system is running how does types play into that as well so from their",
    "start": "1433559",
    "end": "1439440"
  },
  {
    "text": "point of view they were like look and one of the things about airling is that the amount of observability that you get",
    "start": "1439440",
    "end": "1447200"
  },
  {
    "text": "into the system is amazing is like so so for example like I think a lot of the",
    "start": "1447200",
    "end": "1453679"
  },
  {
    "text": "audience is like python developers and go developers I'm going to make like a lot of comparisons to go because I think",
    "start": "1453679",
    "end": "1459559"
  },
  {
    "text": "they are closer but like in because all the code in in in in Elixir and airling",
    "start": "1459559",
    "end": "1466440"
  },
  {
    "text": "runs in their own process our kind of equivalent to go routines and they have their own State we actually have tools",
    "start": "1466440",
    "end": "1473360"
  },
  {
    "text": "that allow you to jump into the system into a running system and say show me",
    "start": "1473360",
    "end": "1478919"
  },
  {
    "text": "how the pro all the processes that are running right now so you can go through all the processes see how much memory",
    "start": "1478919",
    "end": "1485240"
  },
  {
    "text": "they are using and they State like it's an insane amount of visibility that you",
    "start": "1485240",
    "end": "1490559"
  },
  {
    "text": "get into the system and because the processes they communicate by sending messages they have an inbox which is",
    "start": "1490559",
    "end": "1496640"
  },
  {
    "text": "where the message is delivered so you can actually go and see the process uh",
    "start": "1496640",
    "end": "1502880"
  },
  {
    "text": "how many items they have in their inbox and what are those items so from their point and like and this is amazing",
    "start": "1502880",
    "end": "1509080"
  },
  {
    "text": "because for example like sometimes when we are doing optimizations like oh there's something going wrong in the system like I literally multiple times",
    "start": "1509080",
    "end": "1516600"
  },
  {
    "text": "solve bonx by just saying list me the process which has the most entries in",
    "start": "1516600",
    "end": "1521840"
  },
  {
    "text": "its messageq you know like oh this process has 200 entries it's a bottleneck boom I go and I solve the",
    "start": "1521840",
    "end": "1527840"
  },
  {
    "text": "problem and I continue with my life so like from their perspective like look we are thinking about distribution H code",
    "start": "1527840",
    "end": "1535080"
  },
  {
    "text": "swapping a system that can heal itself A system that should come with a huge amount of introspection visibility into",
    "start": "1535080",
    "end": "1541760"
  },
  {
    "text": "it right so it it's a dynamic system so uh so when you rank all those other",
    "start": "1541760",
    "end": "1547720"
  },
  {
    "text": "things that they needed right like sure like are they saying that type system is not important that's not what they are",
    "start": "1547720",
    "end": "1554320"
  },
  {
    "text": "saying right but they are saying like from the things they needed they are priority the list the the type system",
    "start": "1554320",
    "end": "1560799"
  },
  {
    "text": "was not at the top right and and the other thing is that like as I we work on",
    "start": "1560799",
    "end": "1566679"
  },
  {
    "text": "the types for Elixir uh like first thing the type system they are using is",
    "start": "1566679",
    "end": "1571960"
  },
  {
    "text": "something called a set theoretic type system and research on those kind of type systems only caught up in it's like",
    "start": "1571960",
    "end": "1581279"
  },
  {
    "text": "uh two decades ago so it's relatively recent as far as it comes to Theory",
    "start": "1581279",
    "end": "1586440"
  },
  {
    "text": "right like they are like important uh uh researchers that tried to add typ",
    "start": "1586440",
    "end": "1592080"
  },
  {
    "text": "six shling in the past and and they could not they failed because because of",
    "start": "1592080",
    "end": "1597240"
  },
  {
    "text": "how because of how the language is so like the one we're adding to Elixir is not only relatively recent it did not",
    "start": "1597240",
    "end": "1604080"
  },
  {
    "text": "exist when airlan was created but even in this process we are actually like",
    "start": "1604080",
    "end": "1609799"
  },
  {
    "text": "writing new Theory so it supports the Elixir type system like literally like",
    "start": "1609799",
    "end": "1615679"
  },
  {
    "text": "the theory that existed before war is not enough to type some of our idioms",
    "start": "1615679",
    "end": "1621960"
  },
  {
    "text": "right so it is and we're not even going into like the the the parts like uh that",
    "start": "1621960",
    "end": "1629279"
  },
  {
    "text": "talk about like the concurrency aspects and the the hot Cod swapping aspects",
    "start": "1629279",
    "end": "1636159"
  },
  {
    "text": "like I'm working on like I'm working on something that is related with uh upgrading code live uh and how we can",
    "start": "1636159",
    "end": "1644600"
  },
  {
    "text": "model that with types but it's like it's new it's fresh there is not there is not",
    "start": "1644600",
    "end": "1649679"
  },
  {
    "text": "a lot we can like lean into so I I think like when you consider all those things",
    "start": "1649679",
    "end": "1655840"
  },
  {
    "text": "right it makes a lot of sense the uh the tradeoffs they made and how they prioritize those and I am definitely not",
    "start": "1655840",
    "end": "1663640"
  },
  {
    "text": "capable to be if I went back in typ back in time I would definitely not have the",
    "start": "1663640",
    "end": "1669080"
  },
  {
    "text": "credentials to enter the laboratory that created their L they would leave me out of the door but if I was there I would",
    "start": "1669080",
    "end": "1674799"
  },
  {
    "text": "probably like agree with them like yeah no it it makes total sense like I'm not",
    "start": "1674799",
    "end": "1680279"
  },
  {
    "text": "I'm not worried about types right now very cool okay I want to shift gears a little bit and talk about erlang beam VM",
    "start": "1680279",
    "end": "1688960"
  },
  {
    "text": "Elixir and in particular like you said comparing it to the distribution model",
    "start": "1688960",
    "end": "1694159"
  },
  {
    "text": "of go so to set the stage a little bit uh let me catch the audience up just",
    "start": "1694159",
    "end": "1699360"
  },
  {
    "start": "1696000",
    "end": "1883000"
  },
  {
    "text": "just a little on on some of these key key facts so um llang as you said",
    "start": "1699360",
    "end": "1704919"
  },
  {
    "text": "language developed for telecoms um it the the earling code is and correct me",
    "start": "1704919",
    "end": "1711720"
  },
  {
    "text": "if I get any of these details slightly wrong the earling code is compiled to a bite code that runs on beam which is the",
    "start": "1711720",
    "end": "1717559"
  },
  {
    "text": "llang VM and it's designed like at the",
    "start": "1717559",
    "end": "1722799"
  },
  {
    "text": "language level which is so cool to me it's designed to run as a distributed system on multiple machines which like",
    "start": "1722799",
    "end": "1729919"
  },
  {
    "text": "I'm not familiar with other languages that do this like go is a highly concurrent language it's designed at the",
    "start": "1729919",
    "end": "1736399"
  },
  {
    "text": "language level to be concurrent but if you want to build a distributed system and go like the language doesn't have",
    "start": "1736399",
    "end": "1742240"
  },
  {
    "text": "Primitives that span machines I'm I'm still writing you know my own code",
    "start": "1742240",
    "end": "1748000"
  },
  {
    "text": "essentially to handle all of that stuff and so that's something that's like really unique about earling and then",
    "start": "1748000",
    "end": "1753320"
  },
  {
    "text": "Elixir is a lang is a different language but that uses the erlang VM beam and",
    "start": "1753320",
    "end": "1759919"
  },
  {
    "text": "takes advantage of all those Primitives am I am I doing all right so far yes yes that's perfect right so just uh one",
    "start": "1759919",
    "end": "1766799"
  },
  {
    "text": "example like the same way you have the uh Java VM it runs Java iscala cotl you",
    "start": "1766799",
    "end": "1772640"
  },
  {
    "text": "have the earling VM runs earling Elixir and other languages awesome what are are",
    "start": "1772640",
    "end": "1777840"
  },
  {
    "text": "there any other like major languages that run on beam or is it primarily just Elixir I believe the I think the other",
    "start": "1777840",
    "end": "1783840"
  },
  {
    "text": "true that would uh come up is gleam uh which does have like a hindler miner",
    "start": "1783840",
    "end": "1789679"
  },
  {
    "text": "type system I believe and uh LF which is a lisp flavored Airline so",
    "start": "1789679",
    "end": "1797000"
  },
  {
    "text": "it's a lisp running uh on theine virtual machine I think those would be like the the four main",
    "start": "1797000",
    "end": "1803080"
  },
  {
    "text": "ones got it okay cool let's let's talk about then this idea of distributed",
    "start": "1803080",
    "end": "1810480"
  },
  {
    "text": "erlang distributed elixir on the llang VM so again just to catch up the",
    "start": "1810480",
    "end": "1815799"
  },
  {
    "text": "audience so in go we have this idea of go routines essentially lightweight",
    "start": "1815799",
    "end": "1822159"
  },
  {
    "text": "threads so where you can maybe have I'm going to butcher the numbers but like you know hundreds to thousands of",
    "start": "1822159",
    "end": "1829039"
  },
  {
    "text": "operating system threads you could have millions of lightweight go routines go routines sort of Multiplex over",
    "start": "1829039",
    "end": "1835080"
  },
  {
    "text": "operating system threads and the whole point is in when you're working in go you don't really think too much about operating system threads you mostly just",
    "start": "1835080",
    "end": "1841480"
  },
  {
    "text": "think about go routines they're highly concurrent and when you need to communicate between go routines you have",
    "start": "1841480",
    "end": "1846960"
  },
  {
    "text": "two options you can share State between go routines so like maybe a shared map in memory a shared struct pointer to a",
    "start": "1846960",
    "end": "1853919"
  },
  {
    "text": "struct and then You' use like a mutex mutual exclusion lock so that the the individual go routines don't access the",
    "start": "1853919",
    "end": "1860320"
  },
  {
    "text": "same memory at the exact same time like corrupt stuff um that's like one option the preferred option actually is to use",
    "start": "1860320",
    "end": "1866159"
  },
  {
    "text": "the go primitive which is channels essentially pass messages um safely across go routines like one me one",
    "start": "1866159",
    "end": "1872840"
  },
  {
    "text": "channel or sorry one go routine could be publishing into a channel like hey I I did this work I did this work I did this work and another uh go routin could be",
    "start": "1872840",
    "end": "1879880"
  },
  {
    "text": "listening on that channel be like oh I see that this work was done now I'm going to do my work on top of it what is",
    "start": "1879880",
    "end": "1886639"
  },
  {
    "start": "1883000",
    "end": "2563000"
  },
  {
    "text": "the elixir equivalent to essentially go routines and channels yeah perfect so in",
    "start": "1886639",
    "end": "1892919"
  },
  {
    "text": "Elixir we have those same called processes which we're talking about can also create millions of those they're",
    "start": "1892919",
    "end": "1899080"
  },
  {
    "text": "also multiplexed over the operating system Treads so very similar I believe",
    "start": "1899080",
    "end": "1905360"
  },
  {
    "text": "G routines are they fully preemptive today they were not at the beginning I know they slowly add pre preemption on",
    "start": "1905360",
    "end": "1912760"
  },
  {
    "text": "top I don't know at which stage it is today but in airling the the they are",
    "start": "1912760",
    "end": "1918519"
  },
  {
    "text": "fully preemptive they all get you explain what that term means yeah so preemptive means that uh maybe I cannot",
    "start": "1918519",
    "end": "1927080"
  },
  {
    "text": "but I'll try so preemptive means that I I think the simplest way to say that is",
    "start": "1927080",
    "end": "1932360"
  },
  {
    "text": "that they cannot run forever they can only do some amount of work and then",
    "start": "1932360",
    "end": "1937440"
  },
  {
    "text": "they are automatically scheduled out for another process to run so it cannot do a",
    "start": "1937440",
    "end": "1945360"
  },
  {
    "text": "starvation cannot have so I know go at the beginning had this like a go routine could just not send something through a",
    "start": "1945360",
    "end": "1953000"
  },
  {
    "text": "Channel or something like that so it would run forever and not give the opportunity for other go routines to run",
    "start": "1953000",
    "end": "1960240"
  },
  {
    "text": "because at no moment it could like give somebody else a turn like if it's hogging the CPU it could just like keep",
    "start": "1960240",
    "end": "1966399"
  },
  {
    "text": "hogging the CPU yes yes so so operating system process they are preemptive as",
    "start": "1966399",
    "end": "1971760"
  },
  {
    "text": "well right they cannot run forever they are going to get some amount of work and then the operating system process like",
    "start": "1971760",
    "end": "1977880"
  },
  {
    "text": "all right you did too much it's time for somebody else to run right so the preemption there is a proper formal",
    "start": "1977880",
    "end": "1984080"
  },
  {
    "text": "definition which I'm not going to recall right now but uh but that's what I'm not sure about go is what I would say uh I I",
    "start": "1984080",
    "end": "1991360"
  },
  {
    "text": "know that like in practice what seems to happen is if I have a bunch of gou Team",
    "start": "1991360",
    "end": "1997039"
  },
  {
    "text": "reading off of a channel they they seem to like Round Rob in the work but yeah they they will definitely preempt uh",
    "start": "1997039",
    "end": "2004559"
  },
  {
    "text": "around the channel so when they like need to wait for the channel they will",
    "start": "2004559",
    "end": "2009600"
  },
  {
    "text": "preempt and I know over time they allowed like other things other",
    "start": "2009600",
    "end": "2015760"
  },
  {
    "text": "operations should preempt so for example oh maybe when they send a message we",
    "start": "2015760",
    "end": "2022200"
  },
  {
    "text": "could see if we should preempt and allow somebody else to run I I'm I'm guessing",
    "start": "2022200",
    "end": "2027320"
  },
  {
    "text": "but I know like with time they added more opportunities for a go routine to",
    "start": "2027320",
    "end": "2032480"
  },
  {
    "text": "say oh maybe I should give my turn to somebody else right but I don't know",
    "start": "2032480",
    "end": "2038120"
  },
  {
    "text": "like there used to be probably more uh grug like locking is that and it's",
    "start": "2038120",
    "end": "2043440"
  },
  {
    "text": "probably gotten better over time is that yes something along those lines I'm not saying with 100% confidence but I know",
    "start": "2043440",
    "end": "2050599"
  },
  {
    "text": "that airling is 100% preemptive right like the process will eventually uh give",
    "start": "2050599",
    "end": "2056118"
  },
  {
    "text": "its turn so I like to so one of the examples that I like so when I mention preemptive the way I like to explain it",
    "start": "2056119",
    "end": "2062560"
  },
  {
    "text": "it's like gas all processes get some amount of gas some amount of Fu fuel fuel whatever you pronounce that uh yeah",
    "start": "2062560",
    "end": "2071040"
  },
  {
    "text": "yeah uh I just had to recall the Metallica song to to think like yeah so give me anyway uh yeah F and and then",
    "start": "2071040",
    "end": "2080878"
  },
  {
    "text": "they use the F the the gas whatever and",
    "start": "2080879",
    "end": "2086480"
  },
  {
    "text": "and give the turn for somebody uh somebody else to run right so it's",
    "start": "2086480",
    "end": "2091760"
  },
  {
    "text": "preemptive so that's uh so when it comes to that con that's one one of the first differences and the other thing is that",
    "start": "2091760",
    "end": "2098920"
  },
  {
    "text": "we don't use channels we use actors there is like some research that say like they are actually Duos of each",
    "start": "2098920",
    "end": "2106040"
  },
  {
    "text": "other right but the idea is that you don't put a message in a channel and",
    "start": "2106040",
    "end": "2111640"
  },
  {
    "text": "then somebody picks up is that you send a message so each process that you create has an identifier and you send a",
    "start": "2111640",
    "end": "2119040"
  },
  {
    "text": "message directly to that process which has a message Quee and that goes into",
    "start": "2119040",
    "end": "2125680"
  },
  {
    "text": "the message queue so that's one of the so that's one of the important properties here like we are sending",
    "start": "2125680",
    "end": "2132440"
  },
  {
    "text": "messages to to something in a particular a given process and the",
    "start": "2132440",
    "end": "2139119"
  },
  {
    "text": "important thing is that the way that the run time that the virtual machine works is that when you send a message to a",
    "start": "2139119",
    "end": "2146599"
  },
  {
    "text": "process it doesn't matter if that process is in this machine or running in",
    "start": "2146599",
    "end": "2152680"
  },
  {
    "text": "another airling virtual machine in the cluster the message passing is going to",
    "start": "2152680",
    "end": "2157960"
  },
  {
    "text": "work transparently and all of the concurrency Primitives that we have work",
    "start": "2157960",
    "end": "2164800"
  },
  {
    "text": "like that so for example you can we have those process you can actually monitor a process because maybe you want to say",
    "start": "2164800",
    "end": "2171040"
  },
  {
    "text": "hey if that process crashes if something if something goes wrong with that process I want to notice that and do",
    "start": "2171040",
    "end": "2178160"
  },
  {
    "text": "something about it so that's how a supervisor would work the the job of a supervisor is to know how toart the",
    "start": "2178160",
    "end": "2184000"
  },
  {
    "text": "system and then if one of its children termin it's like oh I can see that this part of",
    "start": "2184000",
    "end": "2190880"
  },
  {
    "text": "the system went wrong so I'm going toart it again and that's a lot of the fa",
    "start": "2190880",
    "end": "2196560"
  },
  {
    "text": "tolerant principles in the earling virtual machine it's just turning over right which is like which is something",
    "start": "2196560",
    "end": "2201760"
  },
  {
    "text": "that we do all the time right like oh my printer is not working yeah right it's",
    "start": "2201760",
    "end": "2208200"
  },
  {
    "text": "right so that that's like codified have you have you tried it have you tried",
    "start": "2208200",
    "end": "2213400"
  },
  {
    "text": "turn it on and off right like it's the codified thing why but why does it work right because when you restart the thing",
    "start": "2213400",
    "end": "2220720"
  },
  {
    "text": "you go back to the initial State the initial state is the one that you tested",
    "start": "2220720",
    "end": "2225760"
  },
  {
    "text": "for sure is the one that when you push through staging that's the thing that you tested it's the only one that you",
    "start": "2225760",
    "end": "2231640"
  },
  {
    "text": "tested for sure yes yes maybe right cuz hopefully yes",
    "start": "2231640",
    "end": "2239359"
  },
  {
    "text": "hopefully it's pretty embarrassing if you don't test the initial State yeah yes yes hopefully I mean you test any",
    "start": "2239359",
    "end": "2244880"
  },
  {
    "text": "state yeah so you know it's um so so those are we start seeing the",
    "start": "2244880",
    "end": "2251880"
  },
  {
    "text": "differences right so it's like oh uh now I those the pre we have processes they",
    "start": "2251880",
    "end": "2258680"
  },
  {
    "text": "can send messages uh between them it doesn't matter if it's in the same node or any other nodes and we have",
    "start": "2258680",
    "end": "2264400"
  },
  {
    "text": "Primitives right for like hey has this process gone down or not that also works",
    "start": "2264400",
    "end": "2270000"
  },
  {
    "text": "for concurrency and distribution right so that's so those are the difference",
    "start": "2270000",
    "end": "2277000"
  },
  {
    "text": "there's more that I can talk about but I I'm going to pause and and do a checkpoint with you yeah yeah yeah so",
    "start": "2277000",
    "end": "2282760"
  },
  {
    "text": "okay I I have a few questions about the distribution system going to talk about",
    "start": "2282760",
    "end": "2288599"
  },
  {
    "text": "a second it's in it sounds incredible and and very different from what I'm used to before we do that you mentioned",
    "start": "2288599",
    "end": "2294319"
  },
  {
    "text": "something really interesting that I just want to follow up on and make sure I understood properly so when processes",
    "start": "2294319",
    "end": "2299359"
  },
  {
    "text": "are communicating in the earling VM and in Elixir it sounds like one process can",
    "start": "2299359",
    "end": "2304520"
  },
  {
    "text": "send another message to another process by like explicitly using the ID of that",
    "start": "2304520",
    "end": "2310200"
  },
  {
    "text": "process in other words if process let's just say 12 wants to send a message to process 17 it would like explicitly say",
    "start": "2310200",
    "end": "2318680"
  },
  {
    "text": "I'm sending a like process 12 needs to be aware of process 17 say I'm sending process 17 that's really interesting",
    "start": "2318680",
    "end": "2325160"
  },
  {
    "text": "because like I would consider that to be a model that's like I don't even know what the the name is it's like a push system like I'm pushing a message",
    "start": "2325160",
    "end": "2331680"
  },
  {
    "text": "directly to um a specific recipient whereas like go channels for example are",
    "start": "2331680",
    "end": "2336800"
  },
  {
    "text": "much more like Pub subby in the sense that like you just publish to a channel and you actually don't know who's on the",
    "start": "2336800",
    "end": "2342880"
  },
  {
    "text": "other end and maybe it's multiple multiple go routines listening and so you just kind of send it off into the",
    "start": "2342880",
    "end": "2348560"
  },
  {
    "text": "ether and like hope someone's listening um and picking up that message is that an accurate distinction and is there",
    "start": "2348560",
    "end": "2355160"
  },
  {
    "text": "kind of a built-in way to do the pub sub or is that something you build on top of uh to get working in like the things",
    "start": "2355160",
    "end": "2361440"
  },
  {
    "text": "about them doing Duos is that you can use one to implement the other so you",
    "start": "2361440",
    "end": "2367640"
  },
  {
    "text": "can use the actors to implement the Channel with style communication and",
    "start": "2367640",
    "end": "2373480"
  },
  {
    "text": "vice versa and the and and you're right like we have the process identifier and we send a message but we also have what",
    "start": "2373480",
    "end": "2380720"
  },
  {
    "text": "we call name Registries uh you can go like the Yellow Pages of process maybe I",
    "start": "2380720",
    "end": "2386880"
  },
  {
    "text": "should not use that as a reference because it's goings yeah so a process can say your",
    "start": "2386880",
    "end": "2394640"
  },
  {
    "text": "Facebook contact list wait Facebook's too old yeah contact it's like you know uh the",
    "start": "2394640",
    "end": "2402319"
  },
  {
    "text": "pr can say hey I I have this name uh so if you want to talk to me uh send me the",
    "start": "2402319",
    "end": "2408319"
  },
  {
    "text": "message right and then you can also have like Dynamic Registries so for example what you can do if you're building a web",
    "start": "2408319",
    "end": "2413760"
  },
  {
    "text": "application that you want to make it real time you allow people to connect with websockets you you give like a dynamic",
    "start": "2413760",
    "end": "2422040"
  },
  {
    "text": "name oh this is user ID 13 and now you know when some somebody else is join",
    "start": "2422040",
    "end": "2428200"
  },
  {
    "text": "it's very easy for her to say oh this person is a friend of user ID 242 13",
    "start": "2428200",
    "end": "2436319"
  },
  {
    "text": "whatever in case they are online I'm going to send messages to them and then they just send the messages to them and",
    "start": "2436319",
    "end": "2442200"
  },
  {
    "text": "that's it just this you've implemented like a real time feature all within the",
    "start": "2442200",
    "end": "2447960"
  },
  {
    "text": "vir machine you don't have to bring a separate messaging system again it's going to work in a cluster mode right so",
    "start": "2447960",
    "end": "2455920"
  },
  {
    "text": "uh what what you would usually use like external infrastructure for it's very",
    "start": "2455920",
    "end": "2461200"
  },
  {
    "text": "easy to do it within uh within the earling virtal machine so so yeah you",
    "start": "2461200",
    "end": "2467640"
  },
  {
    "text": "also have the name Registries kind of thing and and what is really cool is that I I love to use this example so in",
    "start": "2467640",
    "end": "2474640"
  },
  {
    "text": "earling you have a module uh named um",
    "start": "2474640",
    "end": "2479960"
  },
  {
    "text": "Global and usually when we thinking about programming languages we say oh what is something Global right you think",
    "start": "2479960",
    "end": "2485440"
  },
  {
    "text": "like Global state in the program right right but the module Global in earling is global for the cluster right so it",
    "start": "2485440",
    "end": "2493440"
  },
  {
    "text": "allows you to register a name that is unique in the cluster so the cluster is",
    "start": "2493440",
    "end": "2499040"
  },
  {
    "text": "like okay uh in in those five machines only one process is going to be named",
    "start": "2499040",
    "end": "2505640"
  },
  {
    "text": "Jose right and then when anything happens you can route to that particular",
    "start": "2505640",
    "end": "2510880"
  },
  {
    "text": "process so yeah a lot of is built like we have those building blocks and a lot",
    "start": "2510880",
    "end": "2516640"
  },
  {
    "text": "is built on top of it yeah okay yeah let's talk about this idea this is so",
    "start": "2516640",
    "end": "2521760"
  },
  {
    "text": "fascinating to me especially as a go go programmer so for anyone that's worked in go we use go routines we use channels",
    "start": "2521760",
    "end": "2528240"
  },
  {
    "text": "and you know for example we deploy our boot dodev backend in kubernetes and at",
    "start": "2528240",
    "end": "2534880"
  },
  {
    "text": "any given time there's probably like three to six PODS of our main like API server running and they actually don't",
    "start": "2534880",
    "end": "2541480"
  },
  {
    "text": "communicate directly with each other we have the way they communicate if they need to is like through a pub sub system",
    "start": "2541480",
    "end": "2547200"
  },
  {
    "text": "very similar to Rabbit mq which is built in earling but the point is like they have no shared anything like there's no",
    "start": "2547200",
    "end": "2554119"
  },
  {
    "text": "shared memory and it's not like I can publish to a channel and have a different pod on a different machine",
    "start": "2554119",
    "end": "2560640"
  },
  {
    "text": "read from that channel there's there's no abstraction layer but if I'm understanding correctly in Elixir erlang",
    "start": "2560640",
    "end": "2567559"
  },
  {
    "start": "2563000",
    "end": "2955000"
  },
  {
    "text": "there is an abstraction layer within like the languages standard Library API",
    "start": "2567559",
    "end": "2574520"
  },
  {
    "text": "whatever that handles machine communication almost like I can",
    "start": "2574520",
    "end": "2580800"
  },
  {
    "text": "publish to a channel I can read from a channel uh in go but now it's happening across like physical Hardware yeah it's",
    "start": "2580800",
    "end": "2588280"
  },
  {
    "text": "uh so so in order to build on your example in your scenario so theing",
    "start": "2588280",
    "end": "2593480"
  },
  {
    "text": "virtual machine it doesn't have node Discovery in it so you need to say look",
    "start": "2593480",
    "end": "2600040"
  },
  {
    "text": "in this IP address in this network uh there is going to be a nerling instance which is great with",
    "start": "2600040",
    "end": "2606760"
  },
  {
    "text": "kubernets because kubernetes is going to give you exactly that you can you can go to a kubernetes at the point or you can",
    "start": "2606760",
    "end": "2612880"
  },
  {
    "text": "just do like a DNS query which kubernetes also set up for you right you",
    "start": "2612880",
    "end": "2618000"
  },
  {
    "text": "say like oh what are all the machines that are running my web server or like",
    "start": "2618000",
    "end": "2623079"
  },
  {
    "text": "my back end I do a DNS query uh looking for the back end in a particular DNS it",
    "start": "2623079",
    "end": "2629160"
  },
  {
    "text": "returns me a bunch of ips I do that query each node can do that query like every 30 seconds every minute and then",
    "start": "2629160",
    "end": "2636440"
  },
  {
    "text": "as node come up and down they are going to to join the cluster they're going to",
    "start": "2636440",
    "end": "2642000"
  },
  {
    "text": "leave the cluster all you have to do is that thing is those 10 lines of code which is like qu the DNS give me the IP",
    "start": "2642000",
    "end": "2649520"
  },
  {
    "text": "tell airling to connect and as soon as you tell airling to connect then everything else is handled by you like",
    "start": "2649520",
    "end": "2656160"
  },
  {
    "text": "airling is going to do the connection there is a cookie which you use for kind of like authentication so uh the cookie",
    "start": "2656160",
    "end": "2662839"
  },
  {
    "text": "needs to be matching but you know it does a connection and now processes from from those things they can communicate",
    "start": "2662839",
    "end": "2670680"
  },
  {
    "text": "transparently and you're not really worried about that right so for example one of the features that Phoenix has and",
    "start": "2670680",
    "end": "2677599"
  },
  {
    "text": "there is really like no as far as I know there is no other web framework that",
    "start": "2677599",
    "end": "2683319"
  },
  {
    "text": "offers this out of the box which is multi-party presence right so if you're",
    "start": "2683319",
    "end": "2689240"
  },
  {
    "text": "imagine like on bab I don't know if you have the possibility of doing courses as a group right so if you want be doing as",
    "start": "2689240",
    "end": "2697960"
  },
  {
    "text": "a group what you're going to have is that you're going to have maybe we are",
    "start": "2697960",
    "end": "2703440"
  },
  {
    "text": "doing a curse together I'm going to be connected to a node you're going to be connected in another node right and then",
    "start": "2703440",
    "end": "2709680"
  },
  {
    "text": "maybe you disconnect in that other node how you're going so how you're going to deal with this state which is by",
    "start": "2709680",
    "end": "2715359"
  },
  {
    "text": "definition like a cluster state right it's spread out around the cluster right",
    "start": "2715359",
    "end": "2721640"
  },
  {
    "text": "and then uh I've seen like people trying to implement this with the database but it's like it's really really hard",
    "start": "2721640",
    "end": "2727400"
  },
  {
    "text": "because what happens is this is what we use Pub sub for but like again it's an",
    "start": "2727400",
    "end": "2732800"
  },
  {
    "text": "external system that we have to hook into to get this kind of real timey",
    "start": "2732800",
    "end": "2738680"
  },
  {
    "text": "event management yeah but how how for example how do you know if somebody is still alive so you keep you wait for",
    "start": "2738680",
    "end": "2745400"
  },
  {
    "text": "them to send like pings for you and then if you don't receive a ping in time you consider they are not yeah to be fair",
    "start": "2745400",
    "end": "2751920"
  },
  {
    "text": "like we don't just because of the nature of boot Dev we actually don't care so we'd have to do something differently",
    "start": "2751920",
    "end": "2757400"
  },
  {
    "text": "for that uh we essentially all we do is like have to broadcast events to each other they're dead they just don't get",
    "start": "2757400",
    "end": "2763920"
  },
  {
    "text": "it yeah if you're doing a messaging then the fire and forget is fine but if you're like hey who is online right now",
    "start": "2763920",
    "end": "2769640"
  },
  {
    "text": "like that's yeah that's not a trivial like who need to show a Green Dot right",
    "start": "2769640",
    "end": "2774960"
  },
  {
    "text": "yeah right like it's something that feels it simple but it's not simple at all and then you like oh I'm going to keep this in the database well if that",
    "start": "2774960",
    "end": "2781720"
  },
  {
    "text": "node goes down suddenly because of an error who is going to clear up all all",
    "start": "2781720",
    "end": "2787079"
  },
  {
    "text": "the users that were on that node but you did not have the opport so like it becomes such a complex problem because",
    "start": "2787079",
    "end": "2793839"
  },
  {
    "text": "it is a distributed problem right and then when you're trying to centralize it",
    "start": "2793839",
    "end": "2799000"
  },
  {
    "text": "in any way by putting it into a message que putting to a database you just make",
    "start": "2799000",
    "end": "2804440"
  },
  {
    "text": "the problem harder because it is a decentralized problem and you're trying to centralize it so you know with Elixir",
    "start": "2804440",
    "end": "2812480"
  },
  {
    "text": "it's very straightforward right because you're like oh okay I am",
    "start": "2812480",
    "end": "2817720"
  },
  {
    "text": "uh I am in this group and when a new when a new node joins it asks the other",
    "start": "2817720",
    "end": "2822800"
  },
  {
    "text": "nodes oh uh who who who is running in your cluster right now send me the",
    "start": "2822800",
    "end": "2827839"
  },
  {
    "text": "information they synchronize that users up to date and now as processes leave",
    "start": "2827839",
    "end": "2833119"
  },
  {
    "text": "terminate they receive the messages and we are all happy it it works right so",
    "start": "2833119",
    "end": "2838640"
  },
  {
    "text": "for us like it's a feature that we offer Out of the Box nobody else offers them",
    "start": "2838640",
    "end": "2843880"
  },
  {
    "text": "right and it's just like you don't need to bring again you don't need to bring an external too right so uh something",
    "start": "2843880",
    "end": "2849359"
  },
  {
    "text": "that we say a lot like when it comes to Phoenix right like Phoenix and we say",
    "start": "2849359",
    "end": "2854880"
  },
  {
    "text": "Phoenix and postgress it's like it's all you need Phenix in your database you can bring my SQL if you want as well SQL",
    "start": "2854880",
    "end": "2861040"
  },
  {
    "text": "life right but you know that's all you my sequel but like bring post grass yeah",
    "start": "2861040",
    "end": "2867400"
  },
  {
    "text": "so because like if you take everything that you can do with post grass nowadays with all the extensions and you have",
    "start": "2867400",
    "end": "2874000"
  },
  {
    "text": "like this amazing technology that allows you to do everything else that is",
    "start": "2874000",
    "end": "2880040"
  },
  {
    "text": "distributed and concurrent right you can go really really far with it and and the beauty of it is that we say also like it",
    "start": "2880040",
    "end": "2889520"
  },
  {
    "text": "brings operational Simplicity right it's like oh you're going to deploy to production yeah just a database in your",
    "start": "2889520",
    "end": "2896319"
  },
  {
    "text": "web server don't need to bring other stuff right when you're going to develop right you don't have to like oh you know",
    "start": "2896319",
    "end": "2902520"
  },
  {
    "text": "now you have to run this uh message kill Service as well right or you run a mock",
    "start": "2902520",
    "end": "2908040"
  },
  {
    "text": "of the massage kill service which comes with other problems which is like well what if there's an narrow in the mock",
    "start": "2908040",
    "end": "2913520"
  },
  {
    "text": "now you're just going to finding production right like being able to say when I'm deploying I'm using two things",
    "start": "2913520",
    "end": "2920319"
  },
  {
    "text": "and only those two things uh it's really wonderful so I've used a lot of rabid mq",
    "start": "2920319",
    "end": "2926760"
  },
  {
    "text": "in the past it's this uh essentially this pubsub broker written on top of",
    "start": "2926760",
    "end": "2932000"
  },
  {
    "text": "earling and the beam uh virtual machine and it's in it's my favorite one",
    "start": "2932000",
    "end": "2937760"
  },
  {
    "text": "actually there's actually a course on boot Dev called learn Pub sub using rabbit mq so if anyone's like super",
    "start": "2937760",
    "end": "2943520"
  },
  {
    "text": "interested in in in rabbit mq they go figure that out one thing that's interesting to me though is I've always used rabbit mq in the context of other",
    "start": "2943520",
    "end": "2950240"
  },
  {
    "text": "programming languages so like I've connected to rabbit mq from Ruby from python from",
    "start": "2950240",
    "end": "2955799"
  },
  {
    "start": "2955000",
    "end": "3293000"
  },
  {
    "text": "go is it fair to say that like if I'm writing like to your point about like all you need is Phoenix and postgress if",
    "start": "2955799",
    "end": "2963400"
  },
  {
    "text": "I'm writing Elixir do I ever need rabbit mq or is that almost redundant excellent",
    "start": "2963400",
    "end": "2969359"
  },
  {
    "text": "question so that's something that comes up a lot when people there are joining the community in the ecosystem and to me the",
    "start": "2969359",
    "end": "2977359"
  },
  {
    "text": "rule is does it need to be durable which means like is the state that you are",
    "start": "2977359",
    "end": "2983839"
  },
  {
    "text": "tracking does it need to be persisted somewhere do you need to guarantee for example that a message was delivered",
    "start": "2983839",
    "end": "2991839"
  },
  {
    "text": "because when it gets so you could obviously implement it right the rabbit",
    "start": "2991839",
    "end": "2996920"
  },
  {
    "text": "kill folks they did it you could obviously implement it in their Lane and elixir but when it gets to a point where",
    "start": "2996920",
    "end": "3001960"
  },
  {
    "text": "the thing that you're running needs to preserve State somewhere in dis and now",
    "start": "3001960",
    "end": "3009119"
  },
  {
    "text": "you have to worry about backups restoring that backups I think going",
    "start": "3009119",
    "end": "3014760"
  },
  {
    "text": "with an off-the-shelf solution like rabbit mq or even post grass which you",
    "start": "3014760",
    "end": "3020280"
  },
  {
    "text": "can use for a bunch of those purposes as well is going to be it then I would",
    "start": "3020280",
    "end": "3025319"
  },
  {
    "text": "choose those tools when ability Becomes of concern the way I like to phrase this is that uh a lot of things that they",
    "start": "3025319",
    "end": "3034319"
  },
  {
    "text": "need to be day one I'm going I'm going to use a not nice word like day one a",
    "start": "3034319",
    "end": "3040799"
  },
  {
    "text": "lot of things that are they one like technical depth they're like oh in order to run this application we need full bar",
    "start": "3040799",
    "end": "3047079"
  },
  {
    "text": "and bath a lot of those things in Elixir you can either not have to do it or",
    "start": "3047079",
    "end": "3054760"
  },
  {
    "text": "postpone it you're like no I don't need it now right and I think I'll just do it in memory for now and it'll be fine yeah",
    "start": "3054760",
    "end": "3061400"
  },
  {
    "text": "like a go developer like people coming from Python and go they will have a very good example of that which like in",
    "start": "3061400",
    "end": "3067440"
  },
  {
    "text": "Python when sometimes they need to do things concurrency the first thing they need to do is to push that rabbit mq",
    "start": "3067440",
    "end": "3074000"
  },
  {
    "text": "right or to push to something to do that in the background even if you don't need the durable part just because you don't",
    "start": "3074000",
    "end": "3079400"
  },
  {
    "text": "want to block the main thread and all this kind of stuff right where a go developer will be like nah I'm just",
    "start": "3079400",
    "end": "3085359"
  },
  {
    "text": "going to do a good routine right I don't have to right so so that's one example if you're going from python to go you're",
    "start": "3085359",
    "end": "3092640"
  },
  {
    "text": "like oh I can I can let go of some like complexity now because I have good routines and you can think if you're now",
    "start": "3092640",
    "end": "3099559"
  },
  {
    "text": "going to airling on Elixir they're going to have like more opportunities for you",
    "start": "3099559",
    "end": "3105280"
  },
  {
    "text": "to do that right so I think that's like kind of one of the point of views like it allows you to to to opting later to",
    "start": "3105280",
    "end": "3113799"
  },
  {
    "text": "some of the technical depth or complexity uh but I also think that it",
    "start": "3113799",
    "end": "3119400"
  },
  {
    "text": "does bring so uh so developers that have gone from python to go they're going to",
    "start": "3119400",
    "end": "3125160"
  },
  {
    "text": "probably relate to this as well because when you have like concurrency as first class you start",
    "start": "3125160",
    "end": "3133319"
  },
  {
    "text": "sometimes you start thinking about problems differently and solutions that were not apparent to you they become",
    "start": "3133319",
    "end": "3140760"
  },
  {
    "text": "much more apparent and easier to design oh I have to talk to four different apis",
    "start": "3140760",
    "end": "3146200"
  },
  {
    "text": "and uh I can talk to all four of them at the same time right very trivial to do it in go very trivial to do it in Elixir",
    "start": "3146200",
    "end": "3153599"
  },
  {
    "text": "so when you have that two available you start thinking all the time oh all right uh I have concurrency I can use this and",
    "start": "3153599",
    "end": "3159960"
  },
  {
    "text": "this for this problem because it's straightforward it's very reachable and the same thing applies here when you have distribution available when you",
    "start": "3159960",
    "end": "3167079"
  },
  {
    "text": "have like oh I can just keep uh a million websocket connections open to",
    "start": "3167079",
    "end": "3172440"
  },
  {
    "text": "the server and have all users of my web application do kind of things right",
    "start": "3172440",
    "end": "3178319"
  },
  {
    "text": "distributed or not it opens up a bunch of different kinds of things like oh you",
    "start": "3178319",
    "end": "3183440"
  },
  {
    "text": "want to do a video upload where we are streaming thumbnails of the video in",
    "start": "3183440",
    "end": "3189880"
  },
  {
    "text": "real time as the video is being uploaded yeah I can do that because I can keep",
    "start": "3189880",
    "end": "3195040"
  },
  {
    "text": "the connection open I can do the work as I receive the video right it means that",
    "start": "3195040",
    "end": "3200799"
  },
  {
    "text": "I don't need from day one to do the upload to S3 which completely removes",
    "start": "3200799",
    "end": "3206119"
  },
  {
    "text": "some of the processing abilities that I can do with that data and that goes for",
    "start": "3206119",
    "end": "3211280"
  },
  {
    "text": "everything so it's like you get a richer tool set this is such a good point that",
    "start": "3211280",
    "end": "3216880"
  },
  {
    "text": "I I really want to emphasize especially to our newer listeners so I love that you made the analogy to to go routines",
    "start": "3216880",
    "end": "3222839"
  },
  {
    "text": "because I experienced this firsthand pretty early in my career so we're working on a rails monolith sorry to",
    "start": "3222839",
    "end": "3227880"
  },
  {
    "text": "dunk on Rails again it happens a lot which is again isn't really fair cuz",
    "start": "3227880",
    "end": "3232960"
  },
  {
    "text": "I've done a pretty minimal amount of rails but what was happening was okay we got this rails we got this rails",
    "start": "3232960",
    "end": "3238079"
  },
  {
    "text": "application I shouldn't even say monolith it's a rails micr service it does very few things like this is not a complex application um it's part of a",
    "start": "3238079",
    "end": "3245200"
  },
  {
    "text": "larger more complex system but it's a very small rails app and it had two dependencies uh that I thought were",
    "start": "3245200",
    "end": "3251880"
  },
  {
    "text": "absurd um when I first got introduced to the system the first was one called sidekick uh which is like a a rails way",
    "start": "3251880",
    "end": "3259119"
  },
  {
    "text": "to fire off background jobs and I was like wait this is just a go routine and a ticker like these are just two things",
    "start": "3259119",
    "end": "3265119"
  },
  {
    "text": "built into the go language like I don't need to install a dependency in order to get cron the essentially the equivalent",
    "start": "3265119",
    "end": "3270720"
  },
  {
    "text": "of cron jobs working and then the other one was caching where it was like this is a very minimal amount of caching that",
    "start": "3270720",
    "end": "3276720"
  },
  {
    "text": "needed to happen like seriously like megabytes of data that needed to be cached and it was like we were calling",
    "start": "3276720",
    "end": "3282359"
  },
  {
    "text": "across the network to like a redus instance dedicated to this service uh in order to do caching was like this is a",
    "start": "3282359",
    "end": "3288599"
  },
  {
    "text": "map in memory like what are we doing and I'm not saying you can't do hashmaps at Ruby I know you can I'm sure it was just",
    "start": "3288599",
    "end": "3293760"
  },
  {
    "start": "3293000",
    "end": "3712000"
  },
  {
    "text": "like implemented poorly but I was just like this is like like 10 lines of go code all standard Library this is",
    "start": "3293760",
    "end": "3300760"
  },
  {
    "text": "something that you know to your point we could have done the simple thing and",
    "start": "3300760",
    "end": "3306280"
  },
  {
    "text": "kind of kicked the can down the road because it's not to say that reddis is never a good solution but like you probably want caching at much larger",
    "start": "3306280",
    "end": "3312160"
  },
  {
    "text": "scale not just something you can do like in memory with a map right and with like sidekick like we have something",
    "start": "3312160",
    "end": "3317960"
  },
  {
    "text": "equivalent to sidekick in Elixir uh called Oben because sometimes you do",
    "start": "3317960",
    "end": "3323160"
  },
  {
    "text": "need retries you need the durability aspect right to guarantee that the thing runs right so we do have that but it's",
    "start": "3323160",
    "end": "3330720"
  },
  {
    "text": "like so some so I have seen like in my experience using these other Stacks like",
    "start": "3330720",
    "end": "3335799"
  },
  {
    "text": "people they bring in sidekick because they had to call to a service uh that",
    "start": "3335799",
    "end": "3342520"
  },
  {
    "text": "had to do like some credit card processing and they had to move it off the main thread because of scalability",
    "start": "3342520",
    "end": "3349640"
  },
  {
    "text": "concerns right and and that's something that you're like and you know like credit card today is like uh it's not",
    "start": "3349640",
    "end": "3358079"
  },
  {
    "text": "like you completely hand off right it's a back and forth because you put the credit card and then there is the",
    "start": "3358079",
    "end": "3364119"
  },
  {
    "text": "authorization I think it's like sucku in Europe where you need to go back to the user and come up with the things right",
    "start": "3364119",
    "end": "3370880"
  },
  {
    "text": "so so they were forced to like oh now we go to now we put this in this skill take back from the queue put it back try to",
    "start": "3370880",
    "end": "3377720"
  },
  {
    "text": "pick it back up put the user on the page if you just if you could just do the",
    "start": "3377720",
    "end": "3382799"
  },
  {
    "text": "thing right there right it would be much easier and and and and the thing about",
    "start": "3382799",
    "end": "3387960"
  },
  {
    "text": "this is that it's really hard to convince like people how much difference",
    "start": "3387960",
    "end": "3394960"
  },
  {
    "text": "it makes because they they haven't it's it's like",
    "start": "3394960",
    "end": "3400319"
  },
  {
    "text": "you know it's like somebody's carrying like 20 kilos on their back every day or",
    "start": "3400319",
    "end": "3405720"
  },
  {
    "text": "Pounds or whatever right you're carrying something heavy and then you're like and then I come and say oh I only carry half",
    "start": "3405720",
    "end": "3412720"
  },
  {
    "text": "of that right and I'm like it's fine fine I carry 20 kilos every day it has",
    "start": "3412720",
    "end": "3419359"
  },
  {
    "text": "been fine right like they have an experience like having like half of the",
    "start": "3419359",
    "end": "3424599"
  },
  {
    "text": "weight of her back right and then as soon as you experience that you're like oh my God like where why was doing that",
    "start": "3424599",
    "end": "3431480"
  },
  {
    "text": "for so long and your point to caching actually comes back to concurrency as",
    "start": "3431480",
    "end": "3436680"
  },
  {
    "text": "well because if you don't have a good concurrency model like in Python and in",
    "start": "3436680",
    "end": "3442920"
  },
  {
    "text": "Ruby right like when they are deploying to production if you have a machine with eight cores they start eight operating",
    "start": "3442920",
    "end": "3450880"
  },
  {
    "text": "system processes one per core they're they cannot have one process efficiently",
    "start": "3450880",
    "end": "3457119"
  },
  {
    "text": "using all the cores of the machine because of the global interpreter lock and this kind of stuff right which means",
    "start": "3457119",
    "end": "3463039"
  },
  {
    "text": "that so imagine that you have three machines each with eight cores right uh",
    "start": "3463039",
    "end": "3468920"
  },
  {
    "text": "if you're using Elixir if you're using go we are going to start three OS programs and if we say look we are going",
    "start": "3468920",
    "end": "3475000"
  },
  {
    "text": "to cach in memory we going to put that in a hash map when we do that the chance",
    "start": "3475000",
    "end": "3480200"
  },
  {
    "text": "of your hitting at cash is going to be 1/3 if it's cashing on a machine right",
    "start": "3480200",
    "end": "3485280"
  },
  {
    "text": "so worst case scenario you compute that cache three times one per machine right",
    "start": "3485280",
    "end": "3492160"
  },
  {
    "text": "but if you're using python or you're using raos right because it's one operating system process per core you're",
    "start": "3492160",
    "end": "3500160"
  },
  {
    "text": "going to comp compute that cach 24 times right and they're like I can't do that",
    "start": "3500160",
    "end": "3506160"
  },
  {
    "text": "right I can't do that I have to put that on Radice right and now you are exchanging something that is meant to be",
    "start": "3506160",
    "end": "3512720"
  },
  {
    "text": "a memory access which is something really really fast to a network access right while you don't need to right so",
    "start": "3512720",
    "end": "3520680"
  },
  {
    "text": "there are a lot of those things where it comes that you know like it's really",
    "start": "3520680",
    "end": "3525960"
  },
  {
    "text": "hard for you to say like oh like it's so much better and again like it's not",
    "start": "3525960",
    "end": "3532280"
  },
  {
    "text": "because like I I'm obviously biased right but it's like like I was there",
    "start": "3532280",
    "end": "3537880"
  },
  {
    "text": "right and when I came here it was like such a relief I was like oh I don't need this I don't need that this is amazing",
    "start": "3537880",
    "end": "3544640"
  },
  {
    "text": "right for me like the whole appeal of airling is like so I was I was I I",
    "start": "3544640",
    "end": "3551039"
  },
  {
    "text": "started looking at other programming languages for uh to learn to learn more",
    "start": "3551039",
    "end": "3556359"
  },
  {
    "text": "about concurrency and the thing that attracted me about earling was exactly that like wait do you are you telling me",
    "start": "3556359",
    "end": "3564079"
  },
  {
    "text": "that when I learned concur Cy I'm also going to learn distribution kind of for",
    "start": "3564079",
    "end": "3569720"
  },
  {
    "text": "free because it's the same model right and also follow tolerance right for me it's like that was like that's the combo",
    "start": "3569720",
    "end": "3577400"
  },
  {
    "text": "pack I want it right I want like for like in terms of like learning",
    "start": "3577400",
    "end": "3583119"
  },
  {
    "text": "experience that's going to be like the best return over investment right and",
    "start": "3583119",
    "end": "3588160"
  },
  {
    "text": "this comes like to interesting discussions in the community because people are like like when you when when",
    "start": "3588160",
    "end": "3595119"
  },
  {
    "text": "you are learning a Elixir and then you start learning about concurrency like you you you may you don't have",
    "start": "3595119",
    "end": "3601440"
  },
  {
    "text": "necessarily need to learn about distribution right you have to learn about distribution how you you start thinking about how things can fail right",
    "start": "3601440",
    "end": "3607960"
  },
  {
    "text": "people are like well that there is definitely a learning curve on that right because you have to learn those",
    "start": "3607960",
    "end": "3614200"
  },
  {
    "text": "principles where in other programming languages you wouldn't necessarily have to right but the thing is that if you",
    "start": "3614200",
    "end": "3621319"
  },
  {
    "text": "look at the whole curve we are way compressed with everything else because if I want to learn how to do all those",
    "start": "3621319",
    "end": "3626920"
  },
  {
    "text": "things in go I have to learn go but then I have to learn something completely different for doing that for doing the",
    "start": "3626920",
    "end": "3634319"
  },
  {
    "text": "distribution aspect and it's also like the same like about fault tolerance at",
    "start": "3634319",
    "end": "3639799"
  },
  {
    "text": "the beginning when we started thinking like oh how about software can fail so sometimes people they're like wait wait",
    "start": "3639799",
    "end": "3646039"
  },
  {
    "text": "I'm looking at this code but now it can fail and I don't know what to do but",
    "start": "3646039",
    "end": "3652200"
  },
  {
    "text": "when I was writing I don't know like python or JavaScript I didn't have to think about",
    "start": "3652200",
    "end": "3658520"
  },
  {
    "text": "this and and and and what they're saying is like so I I would rather go about",
    "start": "3658520",
    "end": "3664160"
  },
  {
    "text": "like JavaScript and they I say no like the JavaScript code would have crashed would have gone in the exact same way it",
    "start": "3664160",
    "end": "3672160"
  },
  {
    "text": "would all those things that we were talking about it could have happened there the the benefit of Elixir is that",
    "start": "3672160",
    "end": "3678760"
  },
  {
    "text": "it's actually M it's actually allowing you to ask about it right you're like oh",
    "start": "3678760",
    "end": "3686680"
  },
  {
    "text": "wait this thing can go wrong right so it's not like in a way it's kind of like",
    "start": "3686680",
    "end": "3691839"
  },
  {
    "text": "we can do like a comparison with a type system right where the type system is like oh have you considered this case",
    "start": "3691839",
    "end": "3697920"
  },
  {
    "text": "and then you look like oh I didn't consider about this case right and",
    "start": "3697920",
    "end": "3703039"
  },
  {
    "text": "having uh idioms or all tolerance being such an important part of the language is also going to highlight cases and",
    "start": "3703039",
    "end": "3710839"
  },
  {
    "text": "scenarios that you wouldn't otherwise your analogy of someone kind of carrying",
    "start": "3710839",
    "end": "3717119"
  },
  {
    "start": "3712000",
    "end": "3862000"
  },
  {
    "text": "this 20 pound weight on their back I imagine someone like lugging a boulder around right like doing all this extra",
    "start": "3717119",
    "end": "3722279"
  },
  {
    "text": "work they don't need to do uh and then you take the of course you take the weight off and they feel relieved and they're so happy my experience has been",
    "start": "3722279",
    "end": "3728440"
  },
  {
    "text": "that a lot of people come to love that rock that's on their back and they probably like draw a face on it and it's",
    "start": "3728440",
    "end": "3734319"
  },
  {
    "text": "their friend and they call it Bob and when you take it away they get really sad uh because they're so used to doing",
    "start": "3734319",
    "end": "3740000"
  },
  {
    "text": "everything with the rock on their back uh and I'm sure I'm guilty of this too I think we all to some extent are right",
    "start": "3740000",
    "end": "3745039"
  },
  {
    "text": "like we love the way that we're currently doing things and so when you take away what can can be perceived as a",
    "start": "3745039",
    "end": "3751520"
  },
  {
    "text": "burden some people will say of course no I I I I love doing it that way about the rock I have like this uh this theory",
    "start": "3751520",
    "end": "3759400"
  },
  {
    "text": "that like most communities they end up like closing all themselves so it's like",
    "start": "3759400",
    "end": "3766880"
  },
  {
    "text": "so I like to say like if imagine that I took a feature from Elixir today and",
    "start": "3766880",
    "end": "3772119"
  },
  {
    "text": "it's a feature everybody loves everybody appreciates so like we have this feature called called protocols is one of my favorite features in the language if I",
    "start": "3772119",
    "end": "3779000"
  },
  {
    "text": "took them if I took it off from the language when the language began right",
    "start": "3779000",
    "end": "3784440"
  },
  {
    "text": "and now 10 years later I'm like hey folks I've learned about this feature protocols it would allow us to write",
    "start": "3784440",
    "end": "3791599"
  },
  {
    "text": "like some amazing alexir programs and I propose people would like no we don't need it right which is we and this works",
    "start": "3791599",
    "end": "3799359"
  },
  {
    "text": "like both for features both for Flaws we try to we we tend to the go Community is famous for this by the way like f",
    "start": "3799359",
    "end": "3806079"
  },
  {
    "text": "generics for many many many years right yeah so and I think in some ways it I",
    "start": "3806079",
    "end": "3812599"
  },
  {
    "text": "it's natural right like that's that's probably expected we are all going to you know people probably came to Elixir",
    "start": "3812599",
    "end": "3819799"
  },
  {
    "text": "because of the features that are there right so that's very expected but I think I I you know I don't like that",
    "start": "3819799",
    "end": "3829039"
  },
  {
    "text": "right because it means that we are we are and of course like there are some",
    "start": "3829039",
    "end": "3834160"
  },
  {
    "text": "things like if you're if you come ask oh let's change alexir syntax uh there are some things that are clearly not going",
    "start": "3834160",
    "end": "3840240"
  },
  {
    "text": "to happen but I don't like that it's very easy for us just close on that and",
    "start": "3840240",
    "end": "3846400"
  },
  {
    "text": "and Miss opportunities and Miss like uh interesting and important discussions because we got attach it to to Bob to",
    "start": "3846400",
    "end": "3853680"
  },
  {
    "text": "the boulder yeah that definitely happens I'm guilty of it I think everyone is we get stuck in our ways we're used to",
    "start": "3853680",
    "end": "3859520"
  },
  {
    "text": "doing things the way we're doing them and it's friction and hard to change here's a question for you you used to do",
    "start": "3859520",
    "end": "3865119"
  },
  {
    "start": "3862000",
    "end": "4081000"
  },
  {
    "text": "rails a lot and then you made a new language Elixir and which of course you love it's your baby um are you still",
    "start": "3865119",
    "end": "3872400"
  },
  {
    "text": "like friends with dhh do you know dhh how does he feel about you abandoning the rails ecosystem to go build your own",
    "start": "3872400",
    "end": "3879079"
  },
  {
    "text": "thing um I'm not um no like we're not we're not friends in the in the",
    "start": "3879079",
    "end": "3884839"
  },
  {
    "text": "association of the world being friends I definitely know him we definitely uh interacted when I was in the in the",
    "start": "3884839",
    "end": "3891839"
  },
  {
    "text": "rails steam uh I've my passive through through through raos was like very big",
    "start": "3891839",
    "end": "3901520"
  },
  {
    "text": "like learning opportunity for me in terms of like how to do with Community like cuz when I joined raos was uh it",
    "start": "3901520",
    "end": "3910039"
  },
  {
    "text": "was like I believe still at the when rail was at its peak in terms of like",
    "start": "3910039",
    "end": "3915680"
  },
  {
    "text": "people talking about it and people joining the community a lot of like experiences learning that and you know",
    "start": "3915680",
    "end": "3922400"
  },
  {
    "text": "and not only from the HH but from the whole C team so yeah I don't have I have",
    "start": "3922400",
    "end": "3927920"
  },
  {
    "text": "very little contact uh with Ruby and Rayos uh nowadays I was invited to to go",
    "start": "3927920",
    "end": "3934440"
  },
  {
    "text": "to the European Ruby conference uh this year after I think eight years and it",
    "start": "3934440",
    "end": "3942200"
  },
  {
    "text": "was uh really nice really nice I love talk about Elixir yeah they invited me",
    "start": "3942200",
    "end": "3947480"
  },
  {
    "text": "to talk about Elixir and uh you know I've I love talking to mats uh the",
    "start": "3947480",
    "end": "3954440"
  },
  {
    "text": "creator of Ruby he's like he's one of the I think uh when he gives a talk uh I",
    "start": "3954440",
    "end": "3962880"
  },
  {
    "text": "always come back inspired from his talk like inspired to be to be better to do",
    "start": "3962880",
    "end": "3968400"
  },
  {
    "text": "better so I always appreciate his talks and how he he leads uh the Ruby",
    "start": "3968400",
    "end": "3974640"
  },
  {
    "text": "Community uh with a lot of Grace so so yeah there is still like some you know",
    "start": "3974640",
    "end": "3981079"
  },
  {
    "text": "sometimes there's something here I still have some friends in in the Ruby Community but it it has been quite some",
    "start": "3981079",
    "end": "3987119"
  },
  {
    "text": "time that you know I have like uh participated makes sense I mean you're focused on a very different project now",
    "start": "3987119",
    "end": "3994400"
  },
  {
    "text": "yeah I say a lot of about Ruby on Rails which I I try to always caveat which like with like but don't listen to",
    "start": "3994400",
    "end": "4000319"
  },
  {
    "text": "me like I don't actually know enough about rails to be criticizing it the way I do I just I just have been scarred by a few experiences of you know old Ruby",
    "start": "4000319",
    "end": "4007319"
  },
  {
    "text": "code bases and Reporting them to go and then everything being happy afterwards but there's a lot of bias there like",
    "start": "4007319",
    "end": "4012559"
  },
  {
    "text": "Legacy code's always shitty even go Legacy code is shitty and so uh I would love to have dhh on the",
    "start": "4012559",
    "end": "4018920"
  },
  {
    "text": "show I promise I'll be nice um but uh that's that's that's cool",
    "start": "4018920",
    "end": "4024400"
  },
  {
    "text": "hear that yeah I actually like you say I'll probably be nice but I I think like",
    "start": "4024400",
    "end": "4029640"
  },
  {
    "text": "even even if you bring your legit concerns and uh and bad experiences I'm",
    "start": "4029640",
    "end": "4036000"
  },
  {
    "text": "pretty sure the HH is going to have a good and uh valid opinions on that as",
    "start": "4036000",
    "end": "4041279"
  },
  {
    "text": "well and and good insights what I'm saying like you you don't have to promise to be nice and I'm and I'm sure",
    "start": "4041279",
    "end": "4047079"
  },
  {
    "text": "uh he'll take it really well as well so no he's I've I've heard dhh on so many",
    "start": "4047079",
    "end": "4052559"
  },
  {
    "text": "podcasts I uh yeah have crazy respect even not just for like his work on Ruby",
    "start": "4052559",
    "end": "4058680"
  },
  {
    "text": "on Rails but also like base camp and the 37 signal stuff like they have like such a good such a good business and",
    "start": "4058680",
    "end": "4065960"
  },
  {
    "text": "entrepreneur person as well as you know framework maintainer but anyways enough about dhh dhh is great about we're here",
    "start": "4065960",
    "end": "4073680"
  },
  {
    "text": "to talk about you uh cool so we spent a lot of time talking about like infrastructure level Elixir distributed",
    "start": "4073680",
    "end": "4080359"
  },
  {
    "text": "system earling stuff and I know we're getting close here on time but I want to give you just a chance really quick to plug maybe like",
    "start": "4080359",
    "end": "4086720"
  },
  {
    "start": "4081000",
    "end": "4669000"
  },
  {
    "text": "your one or two favorite like earling spec or not earling Elixir specific features like language features um that",
    "start": "4086720",
    "end": "4093760"
  },
  {
    "text": "might get people excited to come check it out yeah so um I'll answer that soon or maybe I'll answer part half of this",
    "start": "4093760",
    "end": "4100520"
  },
  {
    "text": "question one of the features which is I I want to try to wrap it all up so yeah",
    "start": "4100520",
    "end": "4105960"
  },
  {
    "text": "uh at the beginning we were talking about Elixir being a functional programming language right and I I was",
    "start": "4105960",
    "end": "4112120"
  },
  {
    "text": "saying like well you know when when Elixir like elixir is a functional programing language maybe it doesn't",
    "start": "4112120",
    "end": "4118520"
  },
  {
    "text": "have a hindler type system so maybe it isn't but you know we would say it's a functional programming language and I",
    "start": "4118520",
    "end": "4125520"
  },
  {
    "text": "also said that you know when people mention functional programming languages uh airling and elixir they do",
    "start": "4125520",
    "end": "4131480"
  },
  {
    "text": "not necessarily come up right and I think like by at this point in the episode it's kind of clear what they not",
    "start": "4131480",
    "end": "4138838"
  },
  {
    "text": "come up like because the things that we are focusing on is like well I want to build a concurrent and a distributed",
    "start": "4138839",
    "end": "4146318"
  },
  {
    "text": "system right that is f tolerant right and uh so it's like if you think of a of",
    "start": "4146319",
    "end": "4152838"
  },
  {
    "text": "a tag Cloud here I here I am showing My Age Again right but if you're thinking like a of a keyword space like those are",
    "start": "4152839",
    "end": "4159758"
  },
  {
    "text": "the the the words that we are kind of embedding ourselves into",
    "start": "4159759",
    "end": "4165560"
  },
  {
    "text": "but the one thing that allows Elixir anding to kind of",
    "start": "4165560",
    "end": "4171480"
  },
  {
    "text": "make a claim that they are functional is also the thing that powers everything we",
    "start": "4171480",
    "end": "4177318"
  },
  {
    "text": "have been talking about today which is immutability right so I want to talk",
    "start": "4177319",
    "end": "4182560"
  },
  {
    "text": "about so in terms of like favorite features I think the feature the goat of",
    "start": "4182560",
    "end": "4189838"
  },
  {
    "text": "the like elixir of darling v machine is immutability and the idea of immutability is that if you have a data",
    "start": "4189839",
    "end": "4197159"
  },
  {
    "text": "structure in memory you're not in want to change something that data structure",
    "start": "4197159",
    "end": "4202679"
  },
  {
    "text": "so if I have a list I want or an array and I want to remove something from a list and array we don't go and we change",
    "start": "4202679",
    "end": "4208880"
  },
  {
    "text": "it in memory we we get a new list we transform it so",
    "start": "4208880",
    "end": "4214840"
  },
  {
    "text": "instead of mutations we're not thinking about transformation we get a new list without that that element so all the",
    "start": "4214840",
    "end": "4220760"
  },
  {
    "text": "butin DAT structures in the language they are imut",
    "start": "4220760",
    "end": "4225840"
  },
  {
    "text": "right so Maps which are equivalent to Hash Maps dictionaries right uh lists uh",
    "start": "4225840",
    "end": "4231440"
  },
  {
    "text": "toppos right everything is strings everything is immutable right and and",
    "start": "4231440",
    "end": "4238080"
  },
  {
    "text": "the reason why that is is important so the reason why it Powers it you get I think four features I think can talk",
    "start": "4238080",
    "end": "4243840"
  },
  {
    "text": "about four features when you get when you have immutability so the first one which I actually learned with time I did",
    "start": "4243840",
    "end": "4251159"
  },
  {
    "text": "not when I started this I did not actually know this but it it's maintenance because we have all written",
    "start": "4251159",
    "end": "4256960"
  },
  {
    "text": "this code where we have an object or something and then we call a method in it and then you pass like another object",
    "start": "4256960",
    "end": "4264800"
  },
  {
    "text": "as argument and then that object modify the object that we were passing as",
    "start": "4264800",
    "end": "4269920"
  },
  {
    "text": "argument in a way that we not expect it we all had to debug this code we're like wait there was a key here but it",
    "start": "4269920",
    "end": "4276400"
  },
  {
    "text": "disappeared Who removed the key from this dictionary right uh Who removed the",
    "start": "4276400",
    "end": "4281760"
  },
  {
    "text": "thing who who mutated my list right and and the idea with functional programming",
    "start": "4281760",
    "end": "4287920"
  },
  {
    "text": "and the idea with immutability is that look because you Cann not mutate the",
    "start": "4287920",
    "end": "4294480"
  },
  {
    "text": "structures if you need to pass something to a function and that or a method and that thing needs to change that thing it",
    "start": "4294480",
    "end": "4302000"
  },
  {
    "text": "needs to explicitly return the change thing as an output and this is beautiful",
    "start": "4302000",
    "end": "4308280"
  },
  {
    "text": "this is absolutely beautiful right because I can look at the code and the code is always clear oh this function",
    "start": "4308280",
    "end": "4314800"
  },
  {
    "text": "needs this and this and that to work it's being passed as argument oh this function needs to return this and this",
    "start": "4314800",
    "end": "4321040"
  },
  {
    "text": "and that it's there in the return type so we were talking about Boulders that",
    "start": "4321040",
    "end": "4326239"
  },
  {
    "text": "by itself me like not having to worry about hey when I call this thing is it",
    "start": "4326239",
    "end": "4331520"
  },
  {
    "text": "going to change the arguments or not right like that's a huge bur uh burden like liftoff our back right I like to",
    "start": "4331520",
    "end": "4338440"
  },
  {
    "text": "say like now when I have to go back like to usually imperative languages it's",
    "start": "4338440",
    "end": "4343840"
  },
  {
    "text": "like programming paranoid mode I am like I am insecure most of the time because",
    "start": "4343840",
    "end": "4349280"
  },
  {
    "text": "I'm like I'm going to call this thing but what is it going to do with the world around it right like what are the",
    "start": "4349280",
    "end": "4355800"
  },
  {
    "text": "things that is going to change what are the objects right and then immutability allows us to ditch a bunch of those",
    "start": "4355800",
    "end": "4363480"
  },
  {
    "text": "concerns and like okay everything's clear inputs and outputs is going to be clear which is something very common in",
    "start": "4363480",
    "end": "4370320"
  },
  {
    "text": "functional programming as well right so the first one is maintenance immutability is going to to give you I",
    "start": "4370320",
    "end": "4376480"
  },
  {
    "text": "can argue that confidently is going to give you better software maintenance because it's going to make it much",
    "start": "4376480",
    "end": "4381679"
  },
  {
    "text": "clearer to understand the other thing that immutability gives you is that it gives",
    "start": "4381679",
    "end": "4387719"
  },
  {
    "text": "you a better Foundation from writing concurrent software because so for example when I started when when I",
    "start": "4387719",
    "end": "4395040"
  },
  {
    "text": "started searching for concurrency was because I was dealing with data races in Ruby we are trying to write concurrent",
    "start": "4395040",
    "end": "4401480"
  },
  {
    "text": "Ruby software and now what you had is that you have two threads trying to change the same place in memory right",
    "start": "4401480",
    "end": "4408280"
  },
  {
    "text": "and then uh if you don't have a global inter you can add a global interpretor",
    "start": "4408280",
    "end": "4413520"
  },
  {
    "text": "lock but that makes things low right or you don't deal with that and then you have segmentation fault and or now you",
    "start": "4413520",
    "end": "4420560"
  },
  {
    "text": "have to learn about threads M taxes make sure that two different pieces of code is not going to change but if your data",
    "start": "4420560",
    "end": "4428400"
  },
  {
    "text": "structures are immutable by default a lot of the issues with data races two things trying to change the same place",
    "start": "4428400",
    "end": "4435600"
  },
  {
    "text": "in memory literally cannot happen right yeah is that to say that you don't have",
    "start": "4435600",
    "end": "4441800"
  },
  {
    "text": "any mutability in elixir of course you have we have things like high performance counters for optimization",
    "start": "4441800",
    "end": "4447840"
  },
  {
    "text": "that are mutable right but the default by large is immutable right so this is",
    "start": "4447840",
    "end": "4455040"
  },
  {
    "text": "great we're doing we are getting maintainability uh and we are getting concurrency out of that like way easier",
    "start": "4455040",
    "end": "4461040"
  },
  {
    "text": "concurrency there are less things are we to worry about the third thing that you get is also theault tolerance aspect and",
    "start": "4461040",
    "end": "4469080"
  },
  {
    "text": "we've hinted at this right like imagine that you have two go routines right and now those go routines if they have some",
    "start": "4469080",
    "end": "4475920"
  },
  {
    "text": "shared state right imagine that one go routine crashes something goes wrong",
    "start": "4475920",
    "end": "4482000"
  },
  {
    "text": "what can you assume about the other go routine if they're shared State you can't assume anything you don't know if like when this go routine was corrupted",
    "start": "4482000",
    "end": "4489639"
  },
  {
    "text": "if it left the state in a good place or in a bad State like if now it's",
    "start": "4489639",
    "end": "4496159"
  },
  {
    "text": "depending on like a reader or a writer or something then the other one effectively is like blocked and useless",
    "start": "4496159",
    "end": "4502440"
  },
  {
    "text": "yeah right so like so the shared State like when you think when you think about like fault tolerance oh I want to have",
    "start": "4502440",
    "end": "4509400"
  },
  {
    "text": "like Parts on my system that restart shared state is a liability right because it means that whenever have",
    "start": "4509400",
    "end": "4516400"
  },
  {
    "text": "shared State when one of those things crashes and they have shared State the",
    "start": "4516400",
    "end": "4522199"
  },
  {
    "text": "safest thing for you to do is to assume that they all bad right so the more shared State you have the the less let's",
    "start": "4522199",
    "end": "4530080"
  },
  {
    "text": "say like the harder it is to make that code fa tolerant or to make that it's",
    "start": "4530080",
    "end": "4536560"
  },
  {
    "text": "not that it is impossible is but it's most like you know going back to the to the boulders like if we assume that the",
    "start": "4536560",
    "end": "4542960"
  },
  {
    "text": "state is not shared the restarting thing comes for free but if you have shared",
    "start": "4542960",
    "end": "4548960"
  },
  {
    "text": "State you have work to do right now you have to check double check triple check write the tests right so again like so",
    "start": "4548960",
    "end": "4556480"
  },
  {
    "text": "immutability you don't have shared state right getting theault tolerance aspect",
    "start": "4556480",
    "end": "4561560"
  },
  {
    "text": "is very very important but it's also the thing that gives you distribution right",
    "start": "4561560",
    "end": "4566760"
  },
  {
    "text": "because if you have shared state right what happens now if I have two processes",
    "start": "4566760",
    "end": "4571920"
  },
  {
    "text": "that are collaborating and they they use shared State well now they are across",
    "start": "4571920",
    "end": "4577800"
  },
  {
    "text": "nodes how you're going to have that shared State across nodes right but again if you're writing the software",
    "start": "4577800",
    "end": "4582920"
  },
  {
    "text": "with the assumption that they state is not shared if you need to communicate you're are going to send a message",
    "start": "4582920",
    "end": "4589520"
  },
  {
    "text": "writing distributed software is going to be much easier and again like it's not",
    "start": "4589520",
    "end": "4594719"
  },
  {
    "text": "that you necessarily sometimes you are lucky you write the code to like you write your alixir code to run concurrent",
    "start": "4594719",
    "end": "4601280"
  },
  {
    "text": "they're like oh I want to make it distributed and then you just flip a flag say oh now run on that node and it",
    "start": "4601280",
    "end": "4607480"
  },
  {
    "text": "works sometimes they're not that lucky but it's the difference between me doing like me doing one day of work to get the",
    "start": "4607480",
    "end": "4616360"
  },
  {
    "text": "distribution feature working compared to weeks or months right I know because",
    "start": "4616360",
    "end": "4622239"
  },
  {
    "text": "there's no world in like my go code where I'm even close to being able to",
    "start": "4622239",
    "end": "4627280"
  },
  {
    "text": "just run it distribute it like it's going to be a whole it's going to be a whole rewrite or a whole you know cementing of extra features on top to",
    "start": "4627280",
    "end": "4633840"
  },
  {
    "text": "make that work yeah so you know so it when it comes your favorite feature and now it goes back right like uh I think",
    "start": "4633840",
    "end": "4640440"
  },
  {
    "text": "it's immutability so for me like if you're talking about functional programming for me like what I really",
    "start": "4640440",
    "end": "4646320"
  },
  {
    "text": "care about in the functional programming language is immutability because if",
    "start": "4646320",
    "end": "4651600"
  },
  {
    "text": "that's the driving principle of the software you get so many properties from it that uh yeah that's that's the key",
    "start": "4651600",
    "end": "4659040"
  },
  {
    "text": "property that I'm looking for and makes a lot of sense um I don't program in a",
    "start": "4659040",
    "end": "4665440"
  },
  {
    "text": "functional PR like a purely functional programming language full-time but I can confidently say that",
    "start": "4665440",
    "end": "4672199"
  },
  {
    "start": "4669000",
    "end": "4895000"
  },
  {
    "text": "my favorite feature of functional programming is feature my favorite like idea or",
    "start": "4672199",
    "end": "4677400"
  },
  {
    "text": "Paradigm is pure functions which is a direct derivative of immutability right",
    "start": "4677400",
    "end": "4682560"
  },
  {
    "text": "the idea that inputs don't get mutated my functions are are pure they're black boxes that's my absolute favorite thing",
    "start": "4682560",
    "end": "4689600"
  },
  {
    "text": "my next favorite thing is is is typing yeah so we're getting there though yeah",
    "start": "4689600",
    "end": "4695920"
  },
  {
    "text": "yeah so the the the idea of Purity which is what a lot of functional program languages uh are going to bring is a a",
    "start": "4695920",
    "end": "4703280"
  },
  {
    "text": "super set of immutability because Purity is going to include IO",
    "start": "4703280",
    "end": "4709080"
  },
  {
    "text": "operations as well right so you cannot like write to a socket right or read",
    "start": "4709080",
    "end": "4715080"
  },
  {
    "text": "from dis the function would have to disclaim so does Elixir not enforce that level of strictness no we don't enforce",
    "start": "4715080",
    "end": "4722880"
  },
  {
    "text": "uh Purity uh it is one of the cases uh so that's a b a boulder that we carry",
    "start": "4722880",
    "end": "4730040"
  },
  {
    "text": "right so uh so in the sense I mean yeah I kind of I kind of like that",
    "start": "4730040",
    "end": "4736960"
  },
  {
    "text": "I I don't know like I've always felt like a lot of functional programming languages take it way too far to the extreme CU IO is so fundamental to",
    "start": "4736960",
    "end": "4743480"
  },
  {
    "text": "everything at least that I do on a computer that like kind of trying to handwave it too much and like put it in",
    "start": "4743480",
    "end": "4749159"
  },
  {
    "text": "a corner too much results in issues so sorry go on I cut you no no no yeah yeah",
    "start": "4749159",
    "end": "4754239"
  },
  {
    "text": "no I think it's exactly that I I like that I think it's a very pragmatic approach and the other thing is that the",
    "start": "4754239",
    "end": "4760480"
  },
  {
    "text": "io in Elixir is done by massage passing anyway so so it's not like kind of like oh",
    "start": "4760480",
    "end": "4769120"
  },
  {
    "text": "you're writing two bites Willy NE kind of thing we have some abstraction and",
    "start": "4769120",
    "end": "4775080"
  },
  {
    "text": "observability around that right so but we don't track it like you can do it from anywhere right uh you can do it",
    "start": "4775080",
    "end": "4781960"
  },
  {
    "text": "from anywhere which I agree it's a positive but I'm also saying like a fun a purely functional programmer could be",
    "start": "4781960",
    "end": "4788000"
  },
  {
    "text": "looking at us right now I was like ah they they chose to carry this Boulder",
    "start": "4788000",
    "end": "4793080"
  },
  {
    "text": "and if they took off their back right they would know how better the software is which is fair right but uh",
    "start": "4793080",
    "end": "4800600"
  },
  {
    "text": "yeah so we we care about mutability",
    "start": "4800600",
    "end": "4806120"
  },
  {
    "text": "yeah uh that that's F yeah I I I love that take actually I like I like the",
    "start": "4806639",
    "end": "4812400"
  },
  {
    "text": "idea of immutable by default it's going to lead to a lot of your functions being pure unless you're doing IO but like",
    "start": "4812400",
    "end": "4819679"
  },
  {
    "text": "it's important to point out that like I've worked in a lot of languages like for example just in my daily work and go",
    "start": "4819679",
    "end": "4825679"
  },
  {
    "text": "in Python I have to constantly remind myself and my team like hey guys when a",
    "start": "4825679",
    "end": "4830760"
  },
  {
    "text": "function can be pure let's make it pure when something can be immutable let's make it immutable we have to go to that extra effort to do it um a lot of times",
    "start": "4830760",
    "end": "4839159"
  },
  {
    "text": "and you know we of course we just do IO wherever it's convenient I mean we try to isolate it to like keep It Sane but I",
    "start": "4839159",
    "end": "4846239"
  },
  {
    "text": "love the idea of like if you're not doing IO it's kind of just pure by",
    "start": "4846239",
    "end": "4852159"
  },
  {
    "text": "default because at least the immutability as aspect is is enforced yeah and then if you do IO most of it is",
    "start": "4852159",
    "end": "4860280"
  },
  {
    "text": "happening through message passing and you do have this great amount of",
    "start": "4860280",
    "end": "4866960"
  },
  {
    "text": "visibility into it which I think it's important uh so so yeah and again like",
    "start": "4866960",
    "end": "4873880"
  },
  {
    "text": "like a lot of the things that we talked uh today it's really they are all from",
    "start": "4873880",
    "end": "4878960"
  },
  {
    "text": "Merling right those are not alexir features right so those are not ideas",
    "start": "4878960",
    "end": "4884679"
  },
  {
    "text": "that I came up if or things I created it's just earing right and elixir",
    "start": "4884679",
    "end": "4890320"
  },
  {
    "text": "running on top of that and leveraging all that yeah amazing thank you so much for coming on Jose um can you tell",
    "start": "4890320",
    "end": "4897320"
  },
  {
    "start": "4895000",
    "end": "5006000"
  },
  {
    "text": "everyone I I want you to plug any and all of your projects and educational resources where you know you want to",
    "start": "4897320",
    "end": "4902800"
  },
  {
    "text": "send people who are listening to this podcast they can they can learn more yeah uh fantastic so on the alixir ab",
    "start": "4902800",
    "end": "4908760"
  },
  {
    "text": "website we have like U we have links to documentation we have I believe a learning page where you can find books",
    "start": "4908760",
    "end": "4915840"
  },
  {
    "text": "videos and all this kind of stuff uh so I recom if you heard or if you listen to",
    "start": "4915840",
    "end": "4921920"
  },
  {
    "text": "this podcast in anyway you want to try it out uh check those resources out uh there is a book called uh elixir in",
    "start": "4921920",
    "end": "4929080"
  },
  {
    "text": "action from Manning that people really uh people really love it uh there is",
    "start": "4929080",
    "end": "4935840"
  },
  {
    "text": "also uh a talk from Sasha Urich uh the so of earling and elixir which also",
    "start": "4935840",
    "end": "4943360"
  },
  {
    "text": "talks about about a lot of things that I mentioned today through a different angle uh good resource uh to share as",
    "start": "4943360",
    "end": "4951000"
  },
  {
    "text": "well and uh the one other thing one last thing I'll plug is livebook dodev I",
    "start": "4951000",
    "end": "4957400"
  },
  {
    "text": "mentioned it it's a it's a it's a cold notebook platform where you get to write",
    "start": "4957400",
    "end": "4964679"
  },
  {
    "text": "uh Elixir and document at the same time it has a lot of features in there but if",
    "start": "4964679",
    "end": "4970040"
  },
  {
    "text": "you like if you want to start learning Elixir and you want an environment that is going to give you really quick",
    "start": "4970040",
    "end": "4975520"
  },
  {
    "text": "feedback and allow you to play with different things um it's it's a great tool for for",
    "start": "4975520",
    "end": "4981480"
  },
  {
    "text": "getting started uh and learning more amazing awesome thanks so much Jose we'll talk to you later I really",
    "start": "4981480",
    "end": "4987560"
  },
  {
    "text": "appreciate you coming on this was a this was an fascinating talk for me and I've got a lot of research to do on Elixir",
    "start": "4987560",
    "end": "4994120"
  },
  {
    "text": "yeah thank you for having me [Music]",
    "start": "4994120",
    "end": "5003189"
  }
]