[
  {
    "text": "imagine somebody like primagen salary and how much money they cost and at the 30 on top at what point does it make",
    "start": "0",
    "end": "5520"
  },
  {
    "text": "sense to hire someone like that to optimize your service you have to be spending 500k a year that could",
    "start": "5520",
    "end": "11160"
  },
  {
    "text": "theoretically be reduced to nothing by that person or a million a year that could be cut in half and that's a huge",
    "start": "11160",
    "end": "17039"
  },
  {
    "text": "ask like what at your company even at a big company costs a million dollars a year that one engineer could make cost",
    "start": "17039",
    "end": "23039"
  },
  {
    "text": "half that much there are very very few problems that fit that which is why something like rust is not that",
    "start": "23039",
    "end": "28500"
  },
  {
    "text": "interesting to me",
    "start": "28500",
    "end": "31400"
  },
  {
    "text": "[Music]",
    "start": "39810",
    "end": "54059"
  },
  {
    "text": "welcome to back in banter the show about back-end development technology and careers I'm joined today by Theo Brown",
    "start": "54059",
    "end": "60620"
  },
  {
    "text": "Theo who are you um depends on who you ask I am a web dev",
    "start": "60620",
    "end": "67200"
  },
  {
    "text": "software engineer used to be much more back in person still do a lot of back-end stuff I'm a YouTuber",
    "start": "67200",
    "end": "73200"
  },
  {
    "text": "skateboarder an influencer all things Creator world and AV hardcore gear nerd",
    "start": "73200",
    "end": "79560"
  },
  {
    "text": "about cameras and mics apparently I got you set up with your camera and mic so yeah they do a lot of different stuff",
    "start": "79560",
    "end": "84900"
  },
  {
    "text": "yeah probably didn't even know it that's okay I sent you an email like nine months ago you told me to buy all this",
    "start": "84900",
    "end": "90299"
  },
  {
    "text": "stuff and it and it worked which was good for me because I have no idea what I'm doing with mics and cameras",
    "start": "90299",
    "end": "95460"
  },
  {
    "text": "good stuff yeah I always happy to recommend those types of things especially for people who who care enough to hit up the right people to ask",
    "start": "95460",
    "end": "101640"
  },
  {
    "text": "yeah totally okay so you just mentioned a lot of things and uh I want to jump",
    "start": "101640",
    "end": "107460"
  },
  {
    "text": "into some of at least some of the most relevant things right out of the gate so I know that you worked at twitch that's",
    "start": "107460",
    "end": "113939"
  },
  {
    "text": "fantastic I interviewed Melky recently um what did you do at twitch were you working on the same kinds of teams did",
    "start": "113939",
    "end": "120000"
  },
  {
    "text": "you do go was it all typescript how did that work what didn't I do at twitch so I don't think milky and my teams touched",
    "start": "120000",
    "end": "126960"
  },
  {
    "text": "too often he's always been more on the payment side I would like dance around the payments team a bit but most of my",
    "start": "126960",
    "end": "132180"
  },
  {
    "text": "effort was other places I originally started on the creative team focused on non-gaming stuff at twitch before I had",
    "start": "132180",
    "end": "138180"
  },
  {
    "text": "joined if you were not a gamer and you were streaming on Twitch you were actually breaking terms of service they're countless stories of people like",
    "start": "138180",
    "end": "144060"
  },
  {
    "text": "Devin Nash who would be playing games of League of Legends and if they won a game they would dance between rounds and then",
    "start": "144060",
    "end": "149819"
  },
  {
    "text": "get hit up by partnership uh contacts and like their partner I forgot the name of the person but like they'd have a",
    "start": "149819",
    "end": "156360"
  },
  {
    "text": "partner manager and the partner manager would hit them up and be like no you need to not dance it's not a dancing platform it's a gaming platform we'll",
    "start": "156360",
    "end": "162239"
  },
  {
    "text": "have to ban your account if you keep doing that it was that crazy yeah weird to think now because none of",
    "start": "162239",
    "end": "168300"
  },
  {
    "text": "us are software devs or all the software devs are not Gamers on Twitch but the the times have changed and a lot of that",
    "start": "168300",
    "end": "174180"
  },
  {
    "text": "change came from me working with the new formed creative team at twitch focused",
    "start": "174180",
    "end": "180360"
  },
  {
    "text": "on making non-gaming content possible the first big thing was the Bob Ross Marathon which blew up having like all",
    "start": "180360",
    "end": "187260"
  },
  {
    "text": "of the original Bob Ross televisions or television series being played back on Twitch with twitch chat live was an",
    "start": "187260",
    "end": "193980"
  },
  {
    "text": "incredible experience the team formed around that to support that technically to build additional streaming",
    "start": "193980",
    "end": "199319"
  },
  {
    "text": "Technologies both for creatives doing painting and other types of stuff on Twitch to have a better streaming experience on their Macs as well as",
    "start": "199319",
    "end": "205860"
  },
  {
    "text": "helping us internally stream those Marathon content eventually we became just the marathon team doing premium",
    "start": "205860",
    "end": "211440"
  },
  {
    "text": "content eventually that got folded into the VOD team where I was told I was gonna have to give up my beloved Elixir",
    "start": "211440",
    "end": "217620"
  },
  {
    "text": "stack and move to going I tried for three weeks I hated myself I was so miserable that my manager pulled",
    "start": "217620",
    "end": "223980"
  },
  {
    "text": "me a sign was like yo you're miserable you're not doing I know you hate this front end stuff but we're about to",
    "start": "223980",
    "end": "229019"
  },
  {
    "text": "start this rewrite of the twitch website in react and typescript you might actually like it there's a",
    "start": "229019",
    "end": "234299"
  },
  {
    "text": "little bit of functional programming in here it was like sure fine I'll give it a shot and yeah a month later I was in",
    "start": "234299",
    "end": "239819"
  },
  {
    "text": "love and now mostly known as a friend in person okay yeah I love hearing this story because yeah I kind of always assumed that you did front-end stuff at",
    "start": "239819",
    "end": "246060"
  },
  {
    "text": "twitch um and it's so funny I mean I I'm a huge go fan so it makes me a little sad he",
    "start": "246060",
    "end": "252659"
  },
  {
    "text": "didn't like it but this should be interesting to listeners um I don't know if I've talked about Elixir yet on the Pod could you give us",
    "start": "252659",
    "end": "259380"
  },
  {
    "text": "like the 60 second overview of the language why did you like it so Elixir exists because one of the main like Ruby",
    "start": "259380",
    "end": "266520"
  },
  {
    "text": "ecosystem people was really tired of Ruby's gotcha specifically the performance concurrency and general like",
    "start": "266520",
    "end": "272160"
  },
  {
    "text": "networking model just aren't there so he looked here he did a soul search looked around the language ecosystem fell in",
    "start": "272160",
    "end": "279120"
  },
  {
    "text": "love with erlings virtual machine and not at syntax curling and C or erling",
    "start": "279120",
    "end": "284160"
  },
  {
    "text": "and C kind of diverged early in the history of programming languages and erling for whatever reason before we had an idea of the internet went deep on a",
    "start": "284160",
    "end": "291060"
  },
  {
    "text": "networked model and it's really powerful for that reason Elixir was written to give us the syntax",
    "start": "291060",
    "end": "297180"
  },
  {
    "text": "and like composability of something like Ruby but it compiles to and runs on the",
    "start": "297180",
    "end": "302699"
  },
  {
    "text": "erlang ecosystem on beam so it's kind of a Best of Both Worlds where it feels like you're writing Ruby but then it",
    "start": "302699",
    "end": "308460"
  },
  {
    "text": "runs incredibly performantly on top of this really really powerful ecosystem of tools and it let me take like my",
    "start": "308460",
    "end": "314880"
  },
  {
    "text": "functional programming mindset and scale it in ways I never had imagined before it was the first time I really felt like a 10x engineer where I could have like",
    "start": "314880",
    "end": "321960"
  },
  {
    "text": "an idea for something to build and then just go hack it out and it would work and scale that's really cool I've always been a",
    "start": "321960",
    "end": "327539"
  },
  {
    "text": "functional programming affectionato but I've never actually like worked in a purely functional language is it as",
    "start": "327539",
    "end": "334020"
  },
  {
    "text": "strict on like purely functional paradigms is something like Haskell or a",
    "start": "334020",
    "end": "339180"
  },
  {
    "text": "little different not as strict I would say it like it takes a lot of influence from Ruby it still has that concept of",
    "start": "339180",
    "end": "346020"
  },
  {
    "text": "modules that is relatively extensible but it really does push you towards functional patterns like pattern",
    "start": "346020",
    "end": "351419"
  },
  {
    "text": "matching is a first class citizen like the majority of the functions we had in our code base were overloaded which meant that you would have the same",
    "start": "351419",
    "end": "357360"
  },
  {
    "text": "function defined three times with different patterns as the input like uh method so your actual Arguments for the",
    "start": "357360",
    "end": "363720"
  },
  {
    "text": "function determine whether or not that function is called when you make a call to it so if I had like withdraw in like",
    "start": "363720",
    "end": "370500"
  },
  {
    "text": "a bank app in that withdrawal function could take from either like a user account or a business account I could",
    "start": "370500",
    "end": "376740"
  },
  {
    "text": "literally in the argument for that function define the type as user or business and it will call the right function accordingly no checks in the",
    "start": "376740",
    "end": "383639"
  },
  {
    "text": "function to send it off to the right thing you just over it with the property so when I hear that like immediately",
    "start": "383639",
    "end": "390720"
  },
  {
    "text": "like when you say no runtime checks like that's a big like green thumbs up from",
    "start": "390720",
    "end": "396060"
  },
  {
    "text": "me but I'm also like could you explain why you would want to use the same name of the function have three different",
    "start": "396060",
    "end": "402240"
  },
  {
    "text": "like that sounds like it could be confusing like you're calling a function it's named a certain thing maybe you grep through the code base you find a",
    "start": "402240",
    "end": "407639"
  },
  {
    "text": "function that's not being called because it has different arguments is that ever a problem I found that",
    "start": "407639",
    "end": "414840"
  },
  {
    "text": "to me it feels less like ER words for this I feel like that's the oop mindset",
    "start": "414840",
    "end": "420720"
  },
  {
    "text": "really hard where you're starting with the object and trying to find the right function the beauty of FP is you start",
    "start": "420720",
    "end": "427199"
  },
  {
    "text": "with the function and try to like build the use Case by chaining those functions and I found that when you really get",
    "start": "427199",
    "end": "433560"
  },
  {
    "text": "into that mindset the thing that changes especially when you're pattern matching as a first class citizen is the function itself defines",
    "start": "433560",
    "end": "440580"
  },
  {
    "text": "what it does and doesn't need to run so if you have a function that runs against",
    "start": "440580",
    "end": "445680"
  },
  {
    "text": "the object or the arguments you're passing it you can reasonably expect it to run and if it doesn't it just won't",
    "start": "445680",
    "end": "451500"
  },
  {
    "text": "call the function it'll say no function matching this pattern is found the type safety isn't quite there yet but they're",
    "start": "451500",
    "end": "456720"
  },
  {
    "text": "working really hard on that and once that is solved I actually see Elixir being really strong language again but honestly like I haven't shifted in",
    "start": "456720",
    "end": "462060"
  },
  {
    "text": "production since 2018 and I I'm all in on typescript at the moment but I do miss the functional patterns the pattern",
    "start": "462060",
    "end": "468660"
  },
  {
    "text": "matching being a first class Citizen and a lot of the like magic around their names facing and network stuff yeah I can't believe like we're already I don't",
    "start": "468660",
    "end": "475139"
  },
  {
    "text": "know 10 minutes into this and I've just been asking about Elixir this happens a lot my not many people know that I'm an",
    "start": "475139",
    "end": "482039"
  },
  {
    "text": "Elixir Fanboy though so I'm sure people will be excited to hear yeah I'm glad it's coming out a little bit okay so so",
    "start": "482039",
    "end": "488400"
  },
  {
    "text": "type script did you start doing so you started doing typescript at twitch yes I wrote my first line of typescript",
    "start": "488400",
    "end": "495960"
  },
  {
    "text": "and react code about March 2018 if I recall okay and did you immediately like",
    "start": "495960",
    "end": "502919"
  },
  {
    "text": "it were you hesitant what was your experience there I was incredibly hesitant getting started I had dabbled",
    "start": "502919",
    "end": "510539"
  },
  {
    "text": "in web dev many a time especially like early on in my career when I was more hosting Minecraft servers I was learning",
    "start": "510539",
    "end": "515700"
  },
  {
    "text": "enough web dev to make my WordPress site function to collect all the donations from people who wanted pots of land in",
    "start": "515700",
    "end": "520800"
  },
  {
    "text": "my servers and I hated it I actively hated everything I did on the web I did",
    "start": "520800",
    "end": "526260"
  },
  {
    "text": "despised PHP and I still do I get that like it's productive but it is not a",
    "start": "526260",
    "end": "531540"
  },
  {
    "text": "pleasant experience it doesn't give me the joy of programming and the more I did web dev the more I felt like I",
    "start": "531540",
    "end": "538320"
  },
  {
    "text": "wouldn't end up being an engineer in the end because I hated it so much and it was when I got more into doing like back-end server stuff with Java that I",
    "start": "538320",
    "end": "545160"
  },
  {
    "text": "started to really enjoy things which is why when my manager told me hey you should try out this modern front-end",
    "start": "545160",
    "end": "550260"
  },
  {
    "text": "thing you might actually like it this time I was like what the there's no way and it took about two weeks before I",
    "start": "550260",
    "end": "556740"
  },
  {
    "text": "started really feeling it and then like under a month in it had clicked and around the same time like two or three",
    "start": "556740",
    "end": "563519"
  },
  {
    "text": "weeks after I had started taking it more seriously hooks happened and when react",
    "start": "563519",
    "end": "568800"
  },
  {
    "text": "hooks happened and I could actually be like the functional programming person bringing that to Twitch I I was all in",
    "start": "568800",
    "end": "575519"
  },
  {
    "text": "that I could like preach the magic of FP to the whole front-end side of the company and get us bought in get us",
    "start": "575519",
    "end": "581580"
  },
  {
    "text": "adopting hooks for everything push the major version updates to all the packages that need it and be the team that has zero classes in all of our",
    "start": "581580",
    "end": "588480"
  },
  {
    "text": "features that was so cool that's really cool",
    "start": "588480",
    "end": "593580"
  },
  {
    "text": "I have a question about so I'm not an expert from that person I'm kind of a",
    "start": "593580",
    "end": "598800"
  },
  {
    "text": "self-taught front-end Dev I've done way more on the back end side of the stack um but I have a question about react hook specifically so",
    "start": "598800",
    "end": "605700"
  },
  {
    "text": "react hooks like functional components right I want to understand a little bit better how they enable functional",
    "start": "605700",
    "end": "612959"
  },
  {
    "text": "programming or or maybe they all they have functional programming built in because one thing that really confused me out of the gate is how you can have a",
    "start": "612959",
    "end": "619680"
  },
  {
    "text": "function like use State that's like the most anti-functional pattern",
    "start": "619680",
    "end": "625680"
  },
  {
    "text": "in theory because it's like holding state within it somehow was that a like was that a red flag to you as a",
    "start": "625680",
    "end": "632100"
  },
  {
    "text": "functional programmer coming into the hooks world or did it feel natural I'd say somewhere between the two it felt",
    "start": "632100",
    "end": "637620"
  },
  {
    "text": "like a a really clever solution as a rapper to what now feels like a necessary evil which is for functional",
    "start": "637620",
    "end": "645300"
  },
  {
    "text": "programming to work in user land it has to be stateful some amount so what's the",
    "start": "645300",
    "end": "651540"
  },
  {
    "text": "most minimal abstraction of state that we can have that allows our components to work in a like Lively updating",
    "start": "651540",
    "end": "659779"
  },
  {
    "text": "Dynamic sense without necessarily destroying the Purity or at",
    "start": "659779",
    "end": "665279"
  },
  {
    "text": "the very least the inheritance and composability of functional programming I think that if we were to compare oop",
    "start": "665279",
    "end": "671820"
  },
  {
    "text": "and FP FPS inherently more composable I will",
    "start": "671820",
    "end": "677100"
  },
  {
    "text": "gladly die on that hill and I think we're at a point now in the industry where we agree like most of the composition or methods that exist within",
    "start": "677100",
    "end": "683220"
  },
  {
    "text": "oop are considered like bad words now like we we don't say inheritance too loudly or people get mad which is a good",
    "start": "683220",
    "end": "689579"
  },
  {
    "text": "thing inheritance was a mistake and we've understood that now but with FP the idea of composing functions around",
    "start": "689579",
    "end": "695040"
  },
  {
    "text": "functions that's just called programming we barely even have a term for it because that's just how we do it and",
    "start": "695040",
    "end": "700680"
  },
  {
    "text": "while in this type of composition with a hook the composition results in the parent function being triggered to rerun",
    "start": "700680",
    "end": "707579"
  },
  {
    "text": "in certain scenarios I find that the composition which is one of the strongest parts of FP is stronger than",
    "start": "707579",
    "end": "713579"
  },
  {
    "text": "ever in this new model that makes sense I mean that's like arguably one of the most important parts of functional programming like function",
    "start": "713579",
    "end": "720180"
  },
  {
    "text": "currying composing different functions and it's always funny to me to hear people like compare oop and functional",
    "start": "720180",
    "end": "727740"
  },
  {
    "text": "programming and it's like rightfully so especially when you look at like the react Paradigm of like moving from class-based components to functional",
    "start": "727740",
    "end": "734399"
  },
  {
    "text": "components um I teach object-oriented programming on boot Dev and there's like four pillars",
    "start": "734399",
    "end": "741300"
  },
  {
    "text": "of functional program if you take like the academic uh definition and it's like inheritance is one of them and there's",
    "start": "741300",
    "end": "746339"
  },
  {
    "text": "like polymorphism abstraction and encapsulation and I always argue that",
    "start": "746339",
    "end": "752220"
  },
  {
    "text": "like inheritance is the least good of the four I'm a huge fan of good encapsulation right but the interesting",
    "start": "752220",
    "end": "758880"
  },
  {
    "text": "thing to me about like object-oriented programming and functional programming if you just like throw inheritance out there's a lot of really good software",
    "start": "758880",
    "end": "765420"
  },
  {
    "text": "engineering principles to be learned in from both worlds um and",
    "start": "765420",
    "end": "771360"
  },
  {
    "text": "I think a lot of the more modern programming languages take a lot of the best ideas from both",
    "start": "771360",
    "end": "777540"
  },
  {
    "text": "um I know go is a is a decent example of that is typescript a good example of that I don't know if typescript's",
    "start": "777540",
    "end": "783420"
  },
  {
    "text": "intentionally a good example of any pattern but uh there's a lot of Concepts in there that are usable in fun ways but",
    "start": "783420",
    "end": "790440"
  },
  {
    "text": "there's also a lot of parts missing like in my opinion any strong functional programming language should have pattern",
    "start": "790440",
    "end": "796380"
  },
  {
    "text": "matching in the arguments as a first-class Citizen and typescript might have pattern matching in the next few",
    "start": "796380",
    "end": "802500"
  },
  {
    "text": "years I'm actually going to record a video next week about how badly I want it and why we need to like get this proposal pushed through because it is",
    "start": "802500",
    "end": "809100"
  },
  {
    "text": "effectively necessary like it's a silly thing but when I wrote Elixir I didn't write a single switch statement for a",
    "start": "809100",
    "end": "815160"
  },
  {
    "text": "year and a half I'll just write a function with different inputs and that was a better experience and what I found",
    "start": "815160",
    "end": "822000"
  },
  {
    "text": "is with functional programming I generally feel like I have fewer Tools in my toolbox to worry about and I understand",
    "start": "822000",
    "end": "828779"
  },
  {
    "text": "those tools much better which is why I very much lean into that especially for teaching new programmers",
    "start": "828779",
    "end": "834540"
  },
  {
    "text": "because the a problem I've seen a lot and it's actually something I'm guilty of with like the T3 stack just having multiple",
    "start": "834540",
    "end": "842100"
  },
  {
    "text": "different things with names it doesn't matter how complex they are people get overwhelmed by the number of things before they get overwhelmed by the",
    "start": "842100",
    "end": "848579"
  },
  {
    "text": "complexity of the thing so if you have an option that has 20 things in it that are all relatively easy to learn or an",
    "start": "848579",
    "end": "854760"
  },
  {
    "text": "option that is four things in it that'll  suck to learn the vast majority of people are going to feel more",
    "start": "854760",
    "end": "859920"
  },
  {
    "text": "comfortable getting familiar with that four peace thing simply because the the top",
    "start": "859920",
    "end": "866220"
  },
  {
    "text": "level of understanding what they have to learn is easier and I get this pushback a ton with the T3 stack it's like oh my",
    "start": "866220",
    "end": "872339"
  },
  {
    "text": "God I have to learn all these things or with the new react server component model it's oh my God there's so many parts to react now it doesn't matter",
    "start": "872339",
    "end": "879060"
  },
  {
    "text": "that all of those parts are one-tenth the complexity they used to be and that the average feature I build has one tenth of the complexity it used to have",
    "start": "879060",
    "end": "885540"
  },
  {
    "text": "because there's now nine proper nouns when there used to be two proper nouns which makes everybody's heads",
    "start": "885540",
    "end": "891360"
  },
  {
    "text": "explode so yeah yeah so are you talking about like I'm trying to like relate this to my",
    "start": "891360",
    "end": "896820"
  },
  {
    "text": "mental model of the world like like there's a larger API surface area like there's more functions and methods and",
    "start": "896820",
    "end": "901980"
  },
  {
    "text": "types to be aware of but each individual one is like pretty easy to understand when you look up the docs yes where like",
    "start": "901980",
    "end": "908639"
  },
  {
    "text": "we could compare the many different ways to fetch data in the new react model with something like use effect use",
    "start": "908639",
    "end": "915000"
  },
  {
    "text": "effect takes two arguments one of which is a function that optionally returns a callback the second argument is an array",
    "start": "915000",
    "end": "922260"
  },
  {
    "text": "that can be optionally removed and then just break your whole application it's like the relationship between all the",
    "start": "922260",
    "end": "928800"
  },
  {
    "text": "different things use effect can do makes it incredibly powerful and there's a person who's a nerd about composition",
    "start": "928800",
    "end": "934320"
  },
  {
    "text": "like the use effect API is like oh that's really clever and full of like unique ways I can compose this into",
    "start": "934320",
    "end": "939660"
  },
  {
    "text": "crazy but then when I take the step back and realize I have to teach this fatigue or when I take a step back and realize I",
    "start": "939660",
    "end": "945660"
  },
  {
    "text": "have to teach this and integrate it in our projects and review it in code reviews that cleverness stops being clever and",
    "start": "945660",
    "end": "952560"
  },
  {
    "text": "starts being painful the new model has like four ways to do the type of thing",
    "start": "952560",
    "end": "957600"
  },
  {
    "text": "you would do with use effect before but none of them have this huge pile of foot guns it's just you fetch data you pass",
    "start": "957600",
    "end": "963240"
  },
  {
    "text": "data from a client's component to a server component to a client component and you render it it's it's the distance",
    "start": "963240",
    "end": "968880"
  },
  {
    "text": "between the the problem and the solution tends to feel significantly smaller because the piece will fit much better",
    "start": "968880",
    "end": "976500"
  },
  {
    "text": "in the problem you have I don't feel like I am massaging the pieces as much I'm just assembling them to a solution",
    "start": "976500",
    "end": "982800"
  },
  {
    "text": "that works well and feels good yeah that resonates with me a lot when I was learning use effect I was like Blown",
    "start": "982800",
    "end": "989100"
  },
  {
    "text": "Away by the difference between like you call use effect with like an empty dependency array to like run it once or",
    "start": "989100",
    "end": "994740"
  },
  {
    "text": "like no array to run it on every render I was like this is a weird API uh so I",
    "start": "994740",
    "end": "1000800"
  },
  {
    "text": "get definitely get what you're saying yeah exactly and I am excited for a future where those types of things are",
    "start": "1000800",
    "end": "1007040"
  },
  {
    "text": "only necessary as a library Dev that knows them really well because uh I actually have a video coming out soon I called the billion dollar problem with",
    "start": "1007040",
    "end": "1013399"
  },
  {
    "text": "react it's meant to be our take on the like null pointer issue but instead of no pointers we have empty arrays or bad",
    "start": "1013399",
    "end": "1020420"
  },
  {
    "text": "at Ray dependencies that cause millions of requests to fire on any person's machine yeah that sounds really",
    "start": "1020420",
    "end": "1026660"
  },
  {
    "text": "interesting uh definitely excited to check that out okay so typescript at",
    "start": "1026660",
    "end": "1032360"
  },
  {
    "text": "twitch you started doing typescript at twitch how long were you at twitch writing typescript before I know you",
    "start": "1032360",
    "end": "1038540"
  },
  {
    "text": "eventually moved on to like do some startups and some other projects um yeah what was that time frame like",
    "start": "1038540",
    "end": "1043640"
  },
  {
    "text": "yeah I did about a year and a half pre-type script and that leaves about",
    "start": "1043640",
    "end": "1049460"
  },
  {
    "text": "three three-ish years post-type script I was like a bit over four years total so",
    "start": "1049460",
    "end": "1055460"
  },
  {
    "text": "okay awesome and after twitch I mean I know your most famous project clearly is",
    "start": "1055460",
    "end": "1060679"
  },
  {
    "text": "upload thing but there's the more lesser known projects the T3 stack and ping.gg",
    "start": "1060679",
    "end": "1066679"
  },
  {
    "text": "how do those fit into the timeline post twitch so I worked at a startup right",
    "start": "1066679",
    "end": "1072080"
  },
  {
    "text": "after and every time I say anything about them the founder threatens to sue me and I he's a man child so I just",
    "start": "1072080",
    "end": "1078020"
  },
  {
    "text": "don't deal with him anymore I do owe him a lot because if it wasn't for him being such a man child I wouldn't have realized oh maybe I can run a startup",
    "start": "1078020",
    "end": "1084500"
  },
  {
    "text": "myself like if this dumbass can do it it can't be that hard so six months into that I gave up quit and",
    "start": "1084500",
    "end": "1090980"
  },
  {
    "text": "started my own thing I quickly learned it it's hard to to start a company and",
    "start": "1090980",
    "end": "1096200"
  },
  {
    "text": "it's pretty hard to run a company but I just loved building so much that I was down so when I first started my",
    "start": "1096200",
    "end": "1102799"
  },
  {
    "text": "company I took a bunch of what I had learned from the past I combined a bunch of piece of technology I was familiar with and solved the problem I cared a",
    "start": "1102799",
    "end": "1109160"
  },
  {
    "text": "lot about which is part of why I'm so offended using Riverside right now I built a better Riverside for live video",
    "start": "1109160",
    "end": "1114919"
  },
  {
    "text": "experiences well we called it better Zoom because I knew a lot of streamers were trying to do live podcasts and",
    "start": "1114919",
    "end": "1120740"
  },
  {
    "text": "collaborations that were struggling a lot with the tools that existed so I started hacking together a web app with webrtc and video infra trying to make it",
    "start": "1120740",
    "end": "1127760"
  },
  {
    "text": "as easy as possible to do powerful live collapse I knew a lot of creators who needed a better way to do five collaborations it was just obvious that",
    "start": "1127760",
    "end": "1134780"
  },
  {
    "text": "was the case I need to fix my hair holy  yeah you can leave this and this will be",
    "start": "1134780",
    "end": "1140480"
  },
  {
    "text": "funny so like collaborations sucked Discord was not good enough having to screen capture",
    "start": "1140480",
    "end": "1147080"
  },
  {
    "text": "your like web app and hope it fit your layout properly and then one person leaves and the whole thing falls apart",
    "start": "1147080",
    "end": "1152600"
  },
  {
    "text": "it was it was such a mess and trying to do a live show with more than just even two people was miserable so I built ping",
    "start": "1152600",
    "end": "1159620"
  },
  {
    "text": "I try and fix that hit up my Creator friends who I thought would benefit from it if you were like I need this right",
    "start": "1159620",
    "end": "1164900"
  },
  {
    "text": "now can you quit your job and work on it full-time already because like we we need this so I did I quit my job took it",
    "start": "1164900",
    "end": "1170480"
  },
  {
    "text": "full time tried raising money from some friends got a little bit but not enough applied to a couple accelerators didn't",
    "start": "1170480",
    "end": "1176840"
  },
  {
    "text": "get into any of the medium-sized ones got rejected surprisingly early and somehow got into my combinator",
    "start": "1176840",
    "end": "1183740"
  },
  {
    "text": "so yeah anybody who says like Y combinator is like the the one that's impossible to get into is like a new",
    "start": "1183740",
    "end": "1190160"
  },
  {
    "text": "founder and like you should go with one of the smaller us accelerators they're  lying the smaller accelerators",
    "start": "1190160",
    "end": "1196880"
  },
  {
    "text": "take themselves way too seriously and aren't willing to try new things as much they're looking for like a cookie cutter",
    "start": "1196880",
    "end": "1202280"
  },
  {
    "text": "copy paste of something that worked for someone else before not something new and the fact that I was showing it was",
    "start": "1202280",
    "end": "1207679"
  },
  {
    "text": "something new was a huge part of how I got it in the first place and uh yeah that point we started taking it more",
    "start": "1207679",
    "end": "1213500"
  },
  {
    "text": "seriously that's really cool and I did not mean to offend you by inviting you onto a Riverside call can I use ping for",
    "start": "1213500",
    "end": "1220760"
  },
  {
    "text": "podcasting I assumed it was like for just for twitch live streams but if it solves my problems with Riverside then I",
    "start": "1220760",
    "end": "1227480"
  },
  {
    "text": "need to take another look well you at the very least you would be more than 100 pixels on my screen right now if you",
    "start": "1227480",
    "end": "1233000"
  },
  {
    "text": "were using Bing the thing that's different with us is we do not want to compromise on the live quality because",
    "start": "1233000",
    "end": "1238280"
  },
  {
    "text": "the majority of our creators are streaming out live like they're doing a Twitter space or a YouTube live stream or like mixer whatever else still exists",
    "start": "1238280",
    "end": "1246500"
  },
  {
    "text": "it's not just twitch we went out of our way to support everything we could but you're still streaming on your end you're still using OBS on your end we",
    "start": "1246500",
    "end": "1252860"
  },
  {
    "text": "provide you individual browser embeds so you can compose your layout in your stream yourself we didn't want to like",
    "start": "1252860",
    "end": "1259039"
  },
  {
    "text": "give you here's how your video should look here's how you stream out like if you were to use Riverside for a stream",
    "start": "1259039",
    "end": "1264740"
  },
  {
    "text": "you would be using Riverside to stream out in the quality is garbage like absolute garbage if you use ping for",
    "start": "1264740",
    "end": "1271340"
  },
  {
    "text": "your stream you embed the full HD sources into your OBS setup and then stream out your OBS to wherever you want",
    "start": "1271340",
    "end": "1277760"
  },
  {
    "text": "to go so it's more Hands-On in that sense I would call Riverside more like the Weebly or like a drag and drop type",
    "start": "1277760",
    "end": "1284539"
  },
  {
    "text": "like Wix style interface where what we're building is like a real Linux server you're composing the content",
    "start": "1284539",
    "end": "1291080"
  },
  {
    "text": "yourself we just give you the Primitives you need to have HD video in that composition",
    "start": "1291080",
    "end": "1296299"
  },
  {
    "text": "as an engineer you just told me I'm using Wix I'm definitely gonna have to shake some things up because that can't",
    "start": "1296299",
    "end": "1302000"
  },
  {
    "text": "that can't stand it is what it is so a bit more about the",
    "start": "1302000",
    "end": "1307039"
  },
  {
    "text": "history and how all these things got mangled when I started paying I made the whole thing a single page web app using",
    "start": "1307039",
    "end": "1312980"
  },
  {
    "text": "Veet and react so traditional Spa old school way I also really wanted to get like the",
    "start": "1312980",
    "end": "1320360"
  },
  {
    "text": "back end working in the same project at the time I was starting to use for sell more so I leaned into the versel API",
    "start": "1320360",
    "end": "1326360"
  },
  {
    "text": "directory it's something that not a lot of people know but in any GitHub project you link to versel you can just have a",
    "start": "1326360",
    "end": "1331940"
  },
  {
    "text": "folder named API input code files in it it can be a JavaScript or typescript",
    "start": "1331940",
    "end": "1337340"
  },
  {
    "text": "file it could be a goaling file a python file even now like PHP and rust and it",
    "start": "1337340",
    "end": "1342620"
  },
  {
    "text": "will just turn that file in whatever it's named into an endpoint on your project so if you have slash API hello",
    "start": "1342620",
    "end": "1348919"
  },
  {
    "text": "world.go now you can go to slash API hello world on your deployment and whatever function you're exporting there",
    "start": "1348919",
    "end": "1355220"
  },
  {
    "text": "gets called with a request and then you return a response and you can just make a web app that way without having to",
    "start": "1355220",
    "end": "1360380"
  },
  {
    "text": "even set up a back-end router or server you just process request response and Versa will handle it for you I fell in",
    "start": "1360380",
    "end": "1368600"
  },
  {
    "text": "love with that it was for me as a person who came from back into front end it was a superpower and not have to like spin",
    "start": "1368600",
    "end": "1374299"
  },
  {
    "text": "up a server instead of all this infrastructure just to run one function on my servers",
    "start": "1374299",
    "end": "1379340"
  },
  {
    "text": "and quickly I started abusing this and I had like 20-ish functions in that API",
    "start": "1379340",
    "end": "1385039"
  },
  {
    "text": "directory but they were all like individual files and as such versus deploying them all as individual lambdas",
    "start": "1385039",
    "end": "1391640"
  },
  {
    "text": "so my deploy time started getting pretty bad I looked into it trying to figure out like how I was going to like",
    "start": "1391640",
    "end": "1396919"
  },
  {
    "text": "condense all this and accepted that next.js was the simplest way even if I didn't want to",
    "start": "1396919",
    "end": "1402080"
  },
  {
    "text": "use it for my web app at the very least it would give me the ability to deploy all of my endpoints in a single Lambda",
    "start": "1402080",
    "end": "1408919"
  },
  {
    "text": "trivially so I adopted next to try that and slowly fell in love with all the problems it took away from me and now",
    "start": "1408919",
    "end": "1415400"
  },
  {
    "text": "I'm kind of known as the next JS guy but that literally only happened because I was using the back end and API directory",
    "start": "1415400",
    "end": "1421220"
  },
  {
    "text": "on versel alongside my veed app so at that point I poured it over from Veet",
    "start": "1421220",
    "end": "1426919"
  },
  {
    "text": "plus like the API directory to full on next found I needed a few more Tools in",
    "start": "1426919",
    "end": "1432380"
  },
  {
    "text": "particular the relationship between the back end and the front end wasn't well defined and I was just exporting types all over the place and it was a mess",
    "start": "1432380",
    "end": "1438260"
  },
  {
    "text": "I talked to Tanner Lindsley the creator of react query about my crazy proposal for a hook I was going to write use back",
    "start": "1438260",
    "end": "1443539"
  },
  {
    "text": "end where you would write back-end code in your front-end component and a compiler step would rip that out throw it in an end point and stub in a use",
    "start": "1443539",
    "end": "1449840"
  },
  {
    "text": "Query fetch call and he was like that sounds pretty cool you should go check out these two projects I heard are doing",
    "start": "1449840",
    "end": "1455059"
  },
  {
    "text": "something simpler or similar blitz.js and trpc I look into both Blitz gives me an",
    "start": "1455059",
    "end": "1461539"
  },
  {
    "text": "aneurysm because it wants to take over my entire stack top to bottom and it's a new way to like build projects and",
    "start": "1461539",
    "end": "1467120"
  },
  {
    "text": "there's no modularity it's all its own solution trpc is just a back-end front end like interface similar to something",
    "start": "1467120",
    "end": "1473960"
  },
  {
    "text": "like a graphql where you define backend functions and then through their type definitions inherited and imported on",
    "start": "1473960",
    "end": "1480080"
  },
  {
    "text": "the front end you can now build a relationship that's strongly typed between your back and front end without",
    "start": "1480080",
    "end": "1485360"
  },
  {
    "text": "having to build a middleman in between so I fell in love with trpc as I fell in love with Prisma as a type safe way to",
    "start": "1485360",
    "end": "1491179"
  },
  {
    "text": "do databases inside of my stuff and I'd been slowly getting Tailwind pill this whole time",
    "start": "1491179",
    "end": "1496520"
  },
  {
    "text": "I realized I had this new assembly of things that didn't seem like what other people were doing or talking about and I",
    "start": "1496520",
    "end": "1502100"
  },
  {
    "text": "was moving much faster than them like objectively the speed I could move at was stupid as a one-man team I was",
    "start": "1502100",
    "end": "1507380"
  },
  {
    "text": "running circles around Zoom during covid so it's like okay there's something here",
    "start": "1507380",
    "end": "1512900"
  },
  {
    "text": "I want to talk about this wait I don't have my 600 front-end engineered",
    "start": "1512900",
    "end": "1518000"
  },
  {
    "text": "slack Channel at twitch anymore to talk about this with who do I talk about this with now I miss my talented engineers",
    "start": "1518000",
    "end": "1524720"
  },
  {
    "text": "so I started streaming a little bit again and eventually I took one of those streams where I built something with a T3 stack and I put it on YouTube and",
    "start": "1524720",
    "end": "1531260"
  },
  {
    "text": "then somehow conned Dan abramov into doing an interview with me live so you wanted to do like mock job interviews and I'm really nerdy about interview",
    "start": "1531260",
    "end": "1537200"
  },
  {
    "text": "culture the Dan earmuff interview did really well it actually caused the video I'd",
    "start": "1537200",
    "end": "1542539"
  },
  {
    "text": "done before about what at that point I called the T3 stack to start blowing up and that was kind of the birth of the T3",
    "start": "1542539",
    "end": "1548480"
  },
  {
    "text": "stack it was the the pile of things that slowly had been settled in on for ping",
    "start": "1548480",
    "end": "1554600"
  },
  {
    "text": "and it just had it just felt so good to use and let us move so fast that I",
    "start": "1554600",
    "end": "1560840"
  },
  {
    "text": "wanted to talk about it and slowly that video became one of the most pop it was the most popular on my channel for a while and the T3 Stack's now a thing",
    "start": "1560840",
    "end": "1567260"
  },
  {
    "text": "that's like listed in job listings and such because it's that productive in more and more companies especially small",
    "start": "1567260",
    "end": "1572779"
  },
  {
    "text": "to medium-sized companies as well as big companies with small focus group teams building Greenfield stuff",
    "start": "1572779",
    "end": "1578539"
  },
  {
    "text": "it's really hard to make a faster moving stack than what we built there that's really cool I I did not know the history",
    "start": "1578539",
    "end": "1584600"
  },
  {
    "text": "of T3 I knew you were using T3 with ping it's also really vindicating to hear you",
    "start": "1584600",
    "end": "1589760"
  },
  {
    "text": "explain this issue that you had where you were deploying all these Lambda functions through versel's API wrapper I",
    "start": "1589760",
    "end": "1595940"
  },
  {
    "text": "had a very similar story this is back in 2017 or 2018. I'd asked the devops guy",
    "start": "1595940",
    "end": "1601279"
  },
  {
    "text": "at my job how he would deploy a new rest API right we were using kubernetes at",
    "start": "1601279",
    "end": "1607159"
  },
  {
    "text": "the time I was like are there any new technologies what should I experiment with and it was like serverless you need to use lambdas and uh you know invocable",
    "start": "1607159",
    "end": "1613640"
  },
  {
    "text": "functions and I was like cool I'll take a look I deployed an entire rest API on top of the serverless framework and the",
    "start": "1613640",
    "end": "1619520"
  },
  {
    "text": "deploy times were abysmal to the point of yeah like developer productivity was terrible",
    "start": "1619520",
    "end": "1625460"
  },
  {
    "text": "um so I ended up scrapping that but what I didn't do was look into next and go down the route that you ended up going",
    "start": "1625460",
    "end": "1631159"
  },
  {
    "text": "down I kind of just like ah I'd give up and go back to kubernetes um so this is really interesting to me",
    "start": "1631159",
    "end": "1637900"
  },
  {
    "text": "typescript you ended up with typescript on the front end and the back end that's kind of the the T3 where's the third T",
    "start": "1637900",
    "end": "1644960"
  },
  {
    "text": "if is it typescript on the front and typescript T3 is just Theo it's the three letters after the T I've had t3.gg",
    "start": "1644960",
    "end": "1652460"
  },
  {
    "text": "since like GG domains were a thing it just bought it as soon as I thought of it and it's been my brand for a while",
    "start": "1652460",
    "end": "1658940"
  },
  {
    "text": "now so everybody thinks it's like the three T's are tail and trpc and typescript they're not it's just by name",
    "start": "1658940",
    "end": "1666880"
  },
  {
    "text": "okay all right that that makes a lot more sense I was I was definitely puzzling about that",
    "start": "1666880",
    "end": "1672500"
  },
  {
    "text": "okay so you do you do run typescripts on the back end for Ping is that the only language that runs on the back end yes",
    "start": "1672500",
    "end": "1679220"
  },
  {
    "text": "and I'm super curious about this you're streaming live video",
    "start": "1679220",
    "end": "1685220"
  },
  {
    "text": "have you run into any sort of performance implications using the JavaScript typescript stack or has it",
    "start": "1685220",
    "end": "1690740"
  },
  {
    "text": "just been just fine we're not rolling your own infra for that we found an info provider that's really good their sdks",
    "start": "1690740",
    "end": "1697880"
  },
  {
    "text": "are utter utter and we've Rewritten them from scratch ourselves for our use case this is a big part of like again",
    "start": "1697880",
    "end": "1703700"
  },
  {
    "text": "like we're a startup we're looking for our Edge we found infrastructure that is groundbreakingly good that is almost",
    "start": "1703700",
    "end": "1711080"
  },
  {
    "text": "impossible to develop on the way that we need to so rather than deal with that we solved that yeah no that makes a lot of",
    "start": "1711080",
    "end": "1718400"
  },
  {
    "text": "sense and I think this is something that confused me as an early developer I don't know if it was like the Cs degree",
    "start": "1718400",
    "end": "1723919"
  },
  {
    "text": "education or what but I was under the impression early on in my career that like you have to invent everything like you have to build everything yourself",
    "start": "1723919",
    "end": "1730159"
  },
  {
    "text": "and that's the best way to do it that's how real Engineers do it what I found is like there's definitely Two Worlds out",
    "start": "1730159",
    "end": "1736340"
  },
  {
    "text": "there right like larger companies are interested in solving a lot of their own problems um sometimes for like legal or financial",
    "start": "1736340",
    "end": "1743600"
  },
  {
    "text": "or whatever reasons but like like at startups it is very much just about shipping application code a lot of the",
    "start": "1743600",
    "end": "1749720"
  },
  {
    "text": "time have you seen my line of prime diagram or video um it's been a while I remember seeing",
    "start": "1749720",
    "end": "1755240"
  },
  {
    "text": "the diagram I think on on what is now x.com formerly known as Twitter I can probably pull it up quick if you can do",
    "start": "1755240",
    "end": "1761000"
  },
  {
    "text": "a screen share yeah yeah for sure I need the Audio I just need the video so this is the line of prime diagram the tldr is",
    "start": "1761000",
    "end": "1770000"
  },
  {
    "text": "on the left side something's new on the right side something's been around for a while I was getting a lot of requests on",
    "start": "1770000",
    "end": "1775760"
  },
  {
    "text": "the top the amount of features being built is high and on the bottom the amount of features and changes in",
    "start": "1775760",
    "end": "1780919"
  },
  {
    "text": "general amount of like flexibility necessary is allowed there's a point at which the amount of change happening in",
    "start": "1780919",
    "end": "1787700"
  },
  {
    "text": "your service has gone down enough and the amount of traffic your service is getting has gone up enough that optimizing like the per request cost",
    "start": "1787700",
    "end": "1794539"
  },
  {
    "text": "starts to make much more sense but that point is significantly further along than most people give it credit",
    "start": "1794539",
    "end": "1799760"
  },
  {
    "text": "especially at large companies because when a large company is trying something new like they're building a new feature",
    "start": "1799760",
    "end": "1805940"
  },
  {
    "text": "or they're trying a new technology or a new solution to a problem it takes a long time before even like at",
    "start": "1805940",
    "end": "1812419"
  },
  {
    "text": "the scale of millions of users takes a while before you hit the point where multiple 200 000 plus a year Engineers",
    "start": "1812419",
    "end": "1818360"
  },
  {
    "text": "are worth dedicating to the problem if you could just spend 100K on a third-party service",
    "start": "1818360",
    "end": "1823460"
  },
  {
    "text": "and it's one of the most common misunderstandings I see and I've seen the problem a lot when Engineers have never been hiring managers or had a",
    "start": "1823460",
    "end": "1830179"
  },
  {
    "text": "budget to manage which a lot of Big Fang company Engineers haven't they've never had to worry about how like the per",
    "start": "1830179",
    "end": "1836779"
  },
  {
    "text": "person cost and the the big Theory here the underlying thing is I don't think",
    "start": "1836779",
    "end": "1841940"
  },
  {
    "text": "this is going to stay that way anymore because companies now have to cut costs the cost that your company's eating more",
    "start": "1841940",
    "end": "1848419"
  },
  {
    "text": "often than not is not your infrastructure it's your engineers if I can fire half my team and use versel it",
    "start": "1848419",
    "end": "1854779"
  },
  {
    "text": "doesn't matter if her sells 200 000 a year because I just saved 800 000 a year right it's I'm always amazed especially",
    "start": "1854779",
    "end": "1862340"
  },
  {
    "text": "especially new developers right especially people new new to maybe even the business side of software but like",
    "start": "1862340",
    "end": "1869659"
  },
  {
    "text": "developers are expensive like really expensive like the the thirty",
    "start": "1869659",
    "end": "1875899"
  },
  {
    "text": "dollars a month or whatever we spend on like your GitHub subscription is not a big deal I've had I've had Engineers come to me and like but if it's too",
    "start": "1875899",
    "end": "1881299"
  },
  {
    "text": "expensive it's like a 50 thing they want if it's too expensive to give me that Mouse I understand I'm like I'm paying you 100K a year like I'll get you the",
    "start": "1881299",
    "end": "1888679"
  },
  {
    "text": "mouse it's fine yep like 100k a year is not 100K in the end either once you're on the other side because you have",
    "start": "1888679",
    "end": "1894080"
  },
  {
    "text": "insurance benefits uh like a bunch of taxes and things you have to deal with these types of like Hardware purchases",
    "start": "1894080",
    "end": "1899779"
  },
  {
    "text": "and such I tend to just mentally put a 30 addition on top of whatever someone's",
    "start": "1899779",
    "end": "1905000"
  },
  {
    "text": "salary is for accounting for how much they cost as a business and when you start thinking in that way like imagine",
    "start": "1905000",
    "end": "1911059"
  },
  {
    "text": "somebody like primagen salary and how much money they cost and at the 30 on top at what point does it make sense to",
    "start": "1911059",
    "end": "1917659"
  },
  {
    "text": "hire someone like that to optimize your service you have to be spending 500k a year that could theoretically be reduced",
    "start": "1917659",
    "end": "1924260"
  },
  {
    "text": "to nothing by that person or a million a year that could be cut in half and that's a huge ask like what at your",
    "start": "1924260",
    "end": "1930740"
  },
  {
    "text": "company even at a big company costs a million dollars a year that one engineer could make cost half that much there are",
    "start": "1930740",
    "end": "1936980"
  },
  {
    "text": "very very few problems that fit that which is why something like rust is not that interesting to me because while",
    "start": "1936980",
    "end": "1943220"
  },
  {
    "text": "when you're in that scenario you've reduced the number of features that are changing a ton and you get a ton of traffic how expensive is it actually to",
    "start": "1943220",
    "end": "1949520"
  },
  {
    "text": "run that service using JavaScript using a less ideal technology and how much would it cost you to move to something",
    "start": "1949520",
    "end": "1955580"
  },
  {
    "text": "more performant if it does like at Netflix scale for their video processing type stuff absolutely higher primogen to",
    "start": "1955580",
    "end": "1962419"
  },
  {
    "text": "save that but even at big companies if the problem is space is still changing",
    "start": "1962419",
    "end": "1967880"
  },
  {
    "text": "doing that now it doesn't make sense because it's more expensive to build on the right side of that line which I call",
    "start": "1967880",
    "end": "1973520"
  },
  {
    "text": "the line of prime this vertical line here on the right side is when the like",
    "start": "1973520",
    "end": "1978559"
  },
  {
    "text": "amount of flexibility that you need has gone down the amount of churn and change in your feature set has gone down but",
    "start": "1978559",
    "end": "1984380"
  },
  {
    "text": "your traffic is high enough now to justify that investment it takes a long time to get there for any new project",
    "start": "1984380",
    "end": "1990559"
  },
  {
    "text": "and I think we we overestimate how expensive our things are and underestimate how expensive we are as",
    "start": "1990559",
    "end": "1996740"
  },
  {
    "text": "Engineers because the vast majority of Engineers have never made hiring decisions yeah you heard it here first",
    "start": "1996740",
    "end": "2003039"
  },
  {
    "text": "hiring managers don't hire primagen he's too expensive all right yes cool",
    "start": "2003039",
    "end": "2009059"
  },
  {
    "text": "moving on um you had a fascinating video this this was like",
    "start": "2009059",
    "end": "2015039"
  },
  {
    "text": "I've seen a lot of your videos this was maybe my favorite one at least in in recent times where you claim typescript",
    "start": "2015039",
    "end": "2021700"
  },
  {
    "text": "is not a programming language and I loved this video can you give me just",
    "start": "2021700",
    "end": "2027399"
  },
  {
    "text": "the quick thesis behind the video absolutely so typescript is very",
    "start": "2027399",
    "end": "2033159"
  },
  {
    "text": "different from other programming languages in that it can't be run like typescript itself",
    "start": "2033159",
    "end": "2038559"
  },
  {
    "text": "does not run it's not even the code that gets handled that gets handed to your traditional like run time in the end",
    "start": "2038559",
    "end": "2045279"
  },
  {
    "text": "this isn't like a compiler step like in C plus where it gets converted to assembly it's a transpilation step where",
    "start": "2045279",
    "end": "2051638"
  },
  {
    "text": "you go from typescript code that nothing can read to JavaScript code that a lot of things can read and then that",
    "start": "2051639",
    "end": "2057520"
  },
  {
    "text": "JavaScript code gets interpreted underneath the role of typescript is interesting in that yes it is the thing",
    "start": "2057520",
    "end": "2063638"
  },
  {
    "text": "that we're writing that gets turned into JavaScript but the stated goal of typescript was to be a strong strict",
    "start": "2063639",
    "end": "2069580"
  },
  {
    "text": "super set of typescript that has Syntax for checking your JavaScript code it is the goal of typescript to effectively be",
    "start": "2069580",
    "end": "2076000"
  },
  {
    "text": "the best linter ever and it does a pretty good job at that it is effectively like you could do most of",
    "start": "2076000",
    "end": "2083440"
  },
  {
    "text": "what you do with typescript with a really well done code comment system with a bunch of checks and things built",
    "start": "2083440",
    "end": "2088480"
  },
  {
    "text": "on top typescript is a You could argue typescript the syntax sugar for JS stock that's stricter in a lot of ways and it",
    "start": "2088480",
    "end": "2095560"
  },
  {
    "text": "is really powerful for that reason because anything you do in JavaScript you can do in typescript but you can be",
    "start": "2095560",
    "end": "2102099"
  },
  {
    "text": "much more confident when you're writing that JavaScript yeah so the reason this was like so",
    "start": "2102099",
    "end": "2108220"
  },
  {
    "text": "perfect when I watched it is I'm writing some typescript on the front end which I hate the front end but here we are right",
    "start": "2108220",
    "end": "2114339"
  },
  {
    "text": "in the front end and I get a hard typescript error in vs code",
    "start": "2114339",
    "end": "2120760"
  },
  {
    "text": "like underlined red right this is a problem can't compile typescript but for",
    "start": "2120760",
    "end": "2126040"
  },
  {
    "text": "whatever reason my Dev server was still working and I was very confused by that",
    "start": "2126040",
    "end": "2131500"
  },
  {
    "text": "because in go if I get a compiler error I'm like I just can't run my thing I",
    "start": "2131500",
    "end": "2136720"
  },
  {
    "text": "don't get to execute it when I'm working in typescript I get it",
    "start": "2136720",
    "end": "2141880"
  },
  {
    "text": "it's almost like they're just really strong suggestions and I also have eslints in the project and so I have",
    "start": "2141880",
    "end": "2147040"
  },
  {
    "text": "these two linters that are doing maybe the same thing do you use both eslint and typescript how do you",
    "start": "2147040",
    "end": "2153579"
  },
  {
    "text": "approach that problem there's a long history between those two uh Josh Goldberg is the person to reach out to",
    "start": "2153579",
    "end": "2159880"
  },
  {
    "text": "to better understand those things he's a legend we actually went to University together great dude the long story short",
    "start": "2159880",
    "end": "2166119"
  },
  {
    "text": "there is that eslint is for all sorts of like syntactic things behavioral like",
    "start": "2166119",
    "end": "2171880"
  },
  {
    "text": "rural things structure things typescript is do the inputs and outputs exist have you checked that they exist and is this",
    "start": "2171880",
    "end": "2178839"
  },
  {
    "text": "going to execute or not they are different in that way and then there's also formatting which is separate too I",
    "start": "2178839",
    "end": "2185200"
  },
  {
    "text": "would argue that type checking linting and formatting are three different categories that all have a bit of overlap and I've actually found that",
    "start": "2185200",
    "end": "2191980"
  },
  {
    "text": "linting and formatting are the ones people have more problems trying to understand the relationship between I",
    "start": "2191980",
    "end": "2197500"
  },
  {
    "text": "have a video that's you're using prettier wrong because a lot of people have eslint doing formatting rules like",
    "start": "2197500",
    "end": "2203619"
  },
  {
    "text": "semicolons or commas like trailing and stuff like that that's what prettier does and prettier doesn't have to check",
    "start": "2203619",
    "end": "2208900"
  },
  {
    "text": "this structure of your code it just has to check each line and say Yes or this files the rules or no it doesn't and",
    "start": "2208900",
    "end": "2214119"
  },
  {
    "text": "make a change so you could also look at this as like a scale of how much work does each of these have to do to do its",
    "start": "2214119",
    "end": "2220540"
  },
  {
    "text": "role formatting can be done in a single pass super cheap super quick linting takes a little bit more of the",
    "start": "2220540",
    "end": "2227320"
  },
  {
    "text": "context especially of the file that you're in typescript requires the whole system to be understood but all three of",
    "start": "2227320",
    "end": "2233859"
  },
  {
    "text": "those allow us to have a better developer experience in slightly different ways that makes a lot of sense so a lot of my",
    "start": "2233859",
    "end": "2241599"
  },
  {
    "text": "listeners to this podcast are like pre-first job and they're hearing us talk about linters and formatters two",
    "start": "2241599",
    "end": "2247900"
  },
  {
    "text": "things which I had really no idea what they were until I started working in the industry why should anyone care about",
    "start": "2247900",
    "end": "2256060"
  },
  {
    "text": "formatting or linting their code it sounds like just a bunch of arbitrary rules that are going to make coding a",
    "start": "2256060",
    "end": "2261099"
  },
  {
    "text": "lot harder as a beginner if you're setting up your own projects don't bother with eslint use prettier",
    "start": "2261099",
    "end": "2268240"
  },
  {
    "text": "and I would say definitely use typescript too eslint is too much random",
    "start": "2268240",
    "end": "2274660"
  },
  {
    "text": "craft to get set up correctly right now if you're setting it up yourself and don't have another engineer who like is familiar with it like even to this day I",
    "start": "2274660",
    "end": "2281740"
  },
  {
    "text": "go back and forth with Julius and uh my friend Josh just trying to figure out how to get our eslin stuff working",
    "start": "2281740",
    "end": "2286960"
  },
  {
    "text": "correctly that ecosystem has been through so much because like eslint",
    "start": "2286960",
    "end": "2292420"
  },
  {
    "text": "started before typescript was even a thought and then TS lint happened which was typescript's equivalent of eslint",
    "start": "2292420",
    "end": "2299099"
  },
  {
    "text": "Airbnb realized they made a huge mistake there not just being part of the eslint foundation and slowly merged to what",
    "start": "2299099",
    "end": "2305380"
  },
  {
    "text": "became tses lint and now a bunch of new lint rules for eslint and it it's a mess it's not fun what I recommend for",
    "start": "2305380",
    "end": "2312760"
  },
  {
    "text": "beginners always I have a video I made called your goals kind of suck because as beginners as engineers in general we",
    "start": "2312760",
    "end": "2318640"
  },
  {
    "text": "suck at goal setting and that's the thing you should be focused on is setting realistic goals that aren't necessarily about the code because I",
    "start": "2318640",
    "end": "2325359"
  },
  {
    "text": "want to learn JavaScript I'm going to be a JavaScript engineer that's a goal that's an absolutely terrible you going",
    "start": "2325359",
    "end": "2331660"
  },
  {
    "text": "to fail type goal that's like imagine a skateboarder says I want to be a professional skateboarder no you don't",
    "start": "2331660",
    "end": "2337780"
  },
  {
    "text": "get good because you want to be a professional you get good because you have specific tricks you want to learn and you're down to hit the ground over",
    "start": "2337780",
    "end": "2342820"
  },
  {
    "text": "and over again until you get good at it you certainly don't get good at skateboarding by watching a bunch of skateboard tutorials on YouTube and",
    "start": "2342820",
    "end": "2348760"
  },
  {
    "text": "thinking about it all day or certainly not going to University and sitting in a class where somebody tells you which chapters of a book to read about",
    "start": "2348760",
    "end": "2355000"
  },
  {
    "text": "skateboards you get good by getting your reps in you got to hit the ground over and over again trying to",
    "start": "2355000",
    "end": "2361300"
  },
  {
    "text": "do something specific a good example of a goal for an early engineer is I really like this video game there is some math",
    "start": "2361300",
    "end": "2367900"
  },
  {
    "text": "in it that's annoying to do I want to build a calculator to keep track of these events in this game that's a",
    "start": "2367900",
    "end": "2373839"
  },
  {
    "text": "fantastic first goal because you will know when it's done with a traditional like the common type of goal like I'm",
    "start": "2373839",
    "end": "2379540"
  },
  {
    "text": "going to learn JavaScript when are you done learning JavaScript because I've been writing JavaScript for 15 years now",
    "start": "2379540",
    "end": "2384700"
  },
  {
    "text": "and I'm not done learning JavaScript so it's so important to have that natural I",
    "start": "2384700",
    "end": "2390099"
  },
  {
    "text": "have achieved my goal like endpoint and I find that most goals for engineers especially beginner goals don't have a",
    "start": "2390099",
    "end": "2396460"
  },
  {
    "text": "point where they can reflect and say yes I have achieved this which makes it a bad goal this is the first time we've talked whoa",
    "start": "2396460",
    "end": "2402579"
  },
  {
    "text": "this is the first time we've talked about goals on the podcast which I think is fantastic so to like kind of sum that",
    "start": "2402579",
    "end": "2407680"
  },
  {
    "text": "up into like I don't know a heuristic that people can use is it Project based goals is that yes the best thing to do",
    "start": "2407680",
    "end": "2414280"
  },
  {
    "text": "absolutely I'm a massive advocate for project-based learning especially in this field I would argue in almost all",
    "start": "2414280",
    "end": "2420220"
  },
  {
    "text": "Fields it's a strong way of doing things but in software Dev in particular it's the only way you're not going to go",
    "start": "2420220",
    "end": "2425500"
  },
  {
    "text": "insane like you cannot learn golang you can learn how to build X and golang you",
    "start": "2425500",
    "end": "2431079"
  },
  {
    "text": "can build X and golang and use x and be proud of it but you can't learn going you can't yeah learn JavaScript you",
    "start": "2431079",
    "end": "2437500"
  },
  {
    "text": "can't learn these things you can learn how to use them for specific things I couldn't agree more I always talk",
    "start": "2437500",
    "end": "2442720"
  },
  {
    "text": "about type feedback loops like you you learn a concept you use the concept to do a thing and then you can move on to",
    "start": "2442720",
    "end": "2448180"
  },
  {
    "text": "the next concept at least that's that's how it's always worked for me absolutely I'd go even further and say you have a",
    "start": "2448180",
    "end": "2453400"
  },
  {
    "text": "problem you want to solve you're trying to figure out what thing you need to learn to solve the problem and then you have another really powerful opportunity",
    "start": "2453400",
    "end": "2459640"
  },
  {
    "text": "where if you pick the wrong thing and you start to recognize that's the wrong thing you can bail out but you've still",
    "start": "2459640",
    "end": "2465160"
  },
  {
    "text": "learned enough of that thing to know where it might fit in the future so like for me I knew that nextjs had the API",
    "start": "2465160",
    "end": "2470980"
  },
  {
    "text": "directory and they did some cool things with it but I quickly learned I could stay on Veet and just use the API directory on versel once I hit a problem",
    "start": "2470980",
    "end": "2478720"
  },
  {
    "text": "with that which was the number of things I was deploying I remember that next had a better built-in version of the same",
    "start": "2478720",
    "end": "2483880"
  },
  {
    "text": "thing so I went back to it and from the the pain points I had before suddenly the value proposition there made much",
    "start": "2483880",
    "end": "2489220"
  },
  {
    "text": "more sense to me and these are like those like big brain like thousand IQ moments that make you really really grow",
    "start": "2489220",
    "end": "2496000"
  },
  {
    "text": "quick it's when you identify something as the wrong thing use the thing that works for you then and then bring back",
    "start": "2496000",
    "end": "2502660"
  },
  {
    "text": "that wrong thing once it's right for you that makes a ton of sense I feel like this plays into something I see people",
    "start": "2502660",
    "end": "2509680"
  },
  {
    "text": "that are learning to a lot which is like I heard X was cool sorry not X that's like I can't use accent yeah I hate that",
    "start": "2509680",
    "end": "2516160"
  },
  {
    "text": "I can't use x is the like thing to stand it yeah okay uh I've I'm trying to I want",
    "start": "2516160",
    "end": "2523720"
  },
  {
    "text": "to learn rust because I heard about rust on YouTube and then you're right the goal is is",
    "start": "2523720",
    "end": "2529660"
  },
  {
    "text": "vague and hard there's like all this crap in Rust I don't even get why it's useful because I've never done C before",
    "start": "2529660",
    "end": "2535359"
  },
  {
    "text": "so I don't even understand why memory management is hard in the first place that is such a hard way to learn and it",
    "start": "2535359",
    "end": "2541660"
  },
  {
    "text": "ends up I think resulting in this like shiny object syndrome of like I'm gonna learn this thing for three weeks give up",
    "start": "2541660",
    "end": "2547480"
  },
  {
    "text": "learn the next thing for three weeks give up whereas like you said if you're setting milestones and you're hitting",
    "start": "2547480",
    "end": "2552579"
  },
  {
    "text": "them I mean not only is that like way more dopamine inducing because you're getting done I think you actually",
    "start": "2552579",
    "end": "2557980"
  },
  {
    "text": "do make deeper progress when you when you go that round absolutely almost all the best Engineers I know are people who",
    "start": "2557980",
    "end": "2563560"
  },
  {
    "text": "only learn to code because I had some specific problem they had to solve like one of my favorite Engineers is an",
    "start": "2563560",
    "end": "2569740"
  },
  {
    "text": "engineer named Jason dockton he's the founder of the urad mental health charity he's actually like if I recall a",
    "start": "2569740",
    "end": "2576640"
  },
  {
    "text": "certified therapist and got really into mental health through his World of Warcraft Guild that became a charity",
    "start": "2576640",
    "end": "2582760"
  },
  {
    "text": "that now became this like huge way for people to get their first therapist and it's okay they're not financially if",
    "start": "2582760",
    "end": "2588099"
  },
  {
    "text": "they need it and organization wise if they don't it's such a cool orc I love them he started looking into getting a",
    "start": "2588099",
    "end": "2593980"
  },
  {
    "text": "website made for them and like the lowest quote he could get for a Charities website was like four hundred thousand dollars he's like the",
    "start": "2593980",
    "end": "2601839"
  },
  {
    "text": "it can't be that hard to build a website right and taught himself from scratch modern web dev and now he's like one of",
    "start": "2601839",
    "end": "2608200"
  },
  {
    "text": "the best Tailwind Engineers I know he's really into typography and type setting and particularly just nerdy about it and like regularly files PR's to my projects",
    "start": "2608200",
    "end": "2614980"
  },
  {
    "text": "just fixing things he's the best and he like onboarded himself to that point in under three months solo and we he had",
    "start": "2614980",
    "end": "2622660"
  },
  {
    "text": "one engineer friend who used to work at twitch with me that he quickly superseded and that",
    "start": "2622660",
    "end": "2628180"
  },
  {
    "text": "friend was like yo man I'm sorry I I you know more about this than me now uh can I put you in touch with my friend Theo",
    "start": "2628180",
    "end": "2633940"
  },
  {
    "text": "he might be able to help because you're using this next JS thing so he got thrown into my circle he was still using vanilla.js so he rewrote his project in",
    "start": "2633940",
    "end": "2640480"
  },
  {
    "text": "typescript over the weekend he became a huge typescript advocate after that point but like he got good because he",
    "start": "2640480",
    "end": "2646000"
  },
  {
    "text": "had a problem to solve and he knew when it was solved he needed a website for his charity so that people could sign up",
    "start": "2646000",
    "end": "2651400"
  },
  {
    "text": "join the guild and do what they need to find a therapist and he had that very",
    "start": "2651400",
    "end": "2656740"
  },
  {
    "text": "Noble driving goal pushing him to learn how to code and there's no way you can",
    "start": "2656740",
    "end": "2661839"
  },
  {
    "text": "do better than that I mean yeah that's that's like top one percentile of people learning to go",
    "start": "2661839",
    "end": "2667900"
  },
  {
    "text": "that's that's crazy but there is a lesson to learn there I think you know something I tell people when they're trying to think of portfolio projects",
    "start": "2667900",
    "end": "2674319"
  },
  {
    "text": "like you know so they can find their first job is like try to solve a real problem like real problems tend to be",
    "start": "2674319",
    "end": "2680440"
  },
  {
    "text": "interesting like that story you just told is a fantastic story it's going to be a great clip on this podcast like",
    "start": "2680440",
    "end": "2686800"
  },
  {
    "text": "imagine telling that story in an interview like that does that does really really well frankly yeah and you",
    "start": "2686800",
    "end": "2693099"
  },
  {
    "text": "come out of better engineer too like it's not the story does well because it sounds good it's the story does well because you did good like as an engineer",
    "start": "2693099",
    "end": "2699760"
  },
  {
    "text": "you will be so much more proud of the things you build if they solve problems that you have and understand",
    "start": "2699760",
    "end": "2706480"
  },
  {
    "text": "awesome okay now I want to just really quickly get a few hot takes from you",
    "start": "2706480",
    "end": "2711880"
  },
  {
    "text": "before we wrap up all typescript related the first is what's your favorite part",
    "start": "2711880",
    "end": "2717460"
  },
  {
    "text": "of typescript so I know that you use it for a plethora of reasons but like what's the one thing",
    "start": "2717460",
    "end": "2724020"
  },
  {
    "text": "I absolutely love the inference model I know that inference means something",
    "start": "2724480",
    "end": "2729700"
  },
  {
    "text": "different in a lot of different languages but the reality that I have when I use typescript is that on one",
    "start": "2729700",
    "end": "2735460"
  },
  {
    "text": "side I have a type definition that that exists it's inherent or almost like",
    "start": "2735460",
    "end": "2740500"
  },
  {
    "text": "natural in a way in many cases it'll be like your database schema so my database schema it's strictly defined it has",
    "start": "2740500",
    "end": "2747400"
  },
  {
    "text": "these models that have these values in them that could be null or could be straying could be number",
    "start": "2747400",
    "end": "2752440"
  },
  {
    "text": "and then I have a component I want to render on my front end in my UI the relationship between the model and",
    "start": "2752440",
    "end": "2759220"
  },
  {
    "text": "my back end and the data that my client component gets to render on front end can be inferred back to front such that",
    "start": "2759220",
    "end": "2766540"
  },
  {
    "text": "if I make a change of the structure in my database without having to make any code changes whatsoever I get a type",
    "start": "2766540",
    "end": "2772300"
  },
  {
    "text": "error on my front end if it no longer is in the shape that it expects the amount of flexibility I get out of that and the",
    "start": "2772300",
    "end": "2778540"
  },
  {
    "text": "ability to like confidently make sweeping changes across any size of project knowing that I'll get that red",
    "start": "2778540",
    "end": "2784300"
  },
  {
    "text": "squiggly line if something's wrong is so so powerful and I've yet to find another language that has inference that",
    "start": "2784300",
    "end": "2790300"
  },
  {
    "text": "strong primes even said recently that as much as he loves rust now that he's using it",
    "start": "2790300",
    "end": "2795579"
  },
  {
    "text": "in more green field stuff once the spec changes once the like look if he said if",
    "start": "2795579",
    "end": "2801339"
  },
  {
    "text": "he understands exactly how to build something start to finish Russ is a great option but if anything changes throughout suddenly Russ stops being a",
    "start": "2801339",
    "end": "2808420"
  },
  {
    "text": "great option and that is the reality of software Dev if the projects were understood fully from the start AI would",
    "start": "2808420",
    "end": "2815200"
  },
  {
    "text": "take our jobs the reason it won't is because of product managers like things change way too much for our jobs to be",
    "start": "2815200",
    "end": "2821760"
  },
  {
    "text": "overridden by like quickly writable like unchangeable code and typescript gives",
    "start": "2821760",
    "end": "2828339"
  },
  {
    "text": "me the flexibility of something like JavaScript to write something really quickly but also the maintainability and",
    "start": "2828339",
    "end": "2835240"
  },
  {
    "text": "reliability not of a rust level thing but pretty damn close while still",
    "start": "2835240",
    "end": "2840400"
  },
  {
    "text": "honoring that level of flexibility that JavaScript comes with as long as you use inference for as much as you can which",
    "start": "2840400",
    "end": "2845680"
  },
  {
    "text": "is also why I have the strongest takes I do about return types and strictly defining everything in your code base because you're throwing away one of",
    "start": "2845680",
    "end": "2851200"
  },
  {
    "text": "gives us benefits but that's an aside yeah we might need to touch on that I'll",
    "start": "2851200",
    "end": "2856720"
  },
  {
    "text": "just say quickly that your favorite thing about typescript plays into one of my least favorite things about go in a",
    "start": "2856720",
    "end": "2862960"
  },
  {
    "text": "full stack context in the sense that I did a lot of go that was just strictly back end work and I loved it now that",
    "start": "2862960",
    "end": "2869079"
  },
  {
    "text": "I'm doing a little more go in the full stack context I basically have to take the structs that my handlers return paste them into a tool that generates",
    "start": "2869079",
    "end": "2876339"
  },
  {
    "text": "typescript interfaces or types or whatever and paste those into my front end so I don't get this back to front",
    "start": "2876339",
    "end": "2881859"
  },
  {
    "text": "inference that you're talking about and it's a giant pain in the ass it is rough I helped build a bunch of",
    "start": "2881859",
    "end": "2888819"
  },
  {
    "text": "this at twitch where we had a compile step that would take the schema that we would Define in golang compile out the",
    "start": "2888819",
    "end": "2895119"
  },
  {
    "text": "graphql schema and then compile out type definitions that would be inherited in the front end as you were consuming it",
    "start": "2895119",
    "end": "2900339"
  },
  {
    "text": "but there was like four compile steps necessary for this to work we had to compile the schema through going we had",
    "start": "2900339",
    "end": "2906339"
  },
  {
    "text": "to compile that schema into type definitions for typescript and then when we wrote the actual queries in our app",
    "start": "2906339",
    "end": "2912099"
  },
  {
    "text": "we'd have to run a compiler to go against that schema to then generate the correct type in that query instance",
    "start": "2912099",
    "end": "2917560"
  },
  {
    "text": "which is like just so much where with typescript and trpc in Prisma I go in my",
    "start": "2917560",
    "end": "2923560"
  },
  {
    "text": "database model I Define something I go to my trpc endpoint I",
    "start": "2923560",
    "end": "2929339"
  },
  {
    "text": "prisma.user.find first return now that's the exact type of my Prisma schema model",
    "start": "2929339",
    "end": "2934660"
  },
  {
    "text": "and now I consume that in my client just by calling trpc.getuser and the types honored back to front if I",
    "start": "2934660",
    "end": "2941500"
  },
  {
    "text": "go make a change to the model in Prisma the client side there will infer it correctly and like yes if you have",
    "start": "2941500",
    "end": "2948579"
  },
  {
    "text": "different languages on the back end in front end something like graphql is that translation layer is really powerful but if you don't have to have it you're just",
    "start": "2948579",
    "end": "2956079"
  },
  {
    "text": "spending a bunch of time doing something you don't need to and managing complexity that doesn't need to exist",
    "start": "2956079",
    "end": "2961660"
  },
  {
    "text": "yeah managing away complexity I love it what's your favorite thing what's the",
    "start": "2961660",
    "end": "2968200"
  },
  {
    "text": "one thing you'd be up in arms about if they removed from the language",
    "start": "2968200",
    "end": "2973740"
  },
  {
    "text": "I think it would be inference just because there's so many people coming from other languages that say that's not",
    "start": "2974859",
    "end": "2980020"
  },
  {
    "text": "how inference works I need to strictly Define my return Types on everything or I'm not really using a type language I",
    "start": "2980020",
    "end": "2986079"
  },
  {
    "text": "have a whole video about this uh the dangers of return types I think what a statement now change the name a bunch it's probably the most effort I put into",
    "start": "2986079",
    "end": "2992980"
  },
  {
    "text": "a single video other than like one of my long form tutorials I'm really proud of that video because I specifically break",
    "start": "2992980",
    "end": "2998740"
  },
  {
    "text": "down all of the stupid gotchas around return types most of which I'll admit are unique to typescript and it's",
    "start": "2998740",
    "end": "3004260"
  },
  {
    "text": "implementation of them but generally speaking it's not a great Paradigm if",
    "start": "3004260",
    "end": "3010200"
  },
  {
    "text": "you can do inference that is as strictest typescripts so yeah take away inference and I'm gonna go write my own",
    "start": "3010200",
    "end": "3016140"
  },
  {
    "text": "language thankfully they would never but yeah okay all right this plays back into",
    "start": "3016140",
    "end": "3021619"
  },
  {
    "text": "the comment from a couple minutes ago and now I have to dive into it so backstory you and Prime had this famous",
    "start": "3021619",
    "end": "3029220"
  },
  {
    "text": "argument on Twitter over return types or I should say inferred return types in",
    "start": "3029220",
    "end": "3035160"
  },
  {
    "text": "typescript when I first saw that happening uh I was actually pretty new",
    "start": "3035160",
    "end": "3041160"
  },
  {
    "text": "to typescript I'd written a lot of JavaScript in the past I was just getting into the language and coming from go my my default position was like",
    "start": "3041160",
    "end": "3048180"
  },
  {
    "text": "Prime's right like we we should just put types in our function signature I can",
    "start": "3048180",
    "end": "3054240"
  },
  {
    "text": "read the function signature I can see what it returns over the last few months as I've been using typescript I now have",
    "start": "3054240",
    "end": "3061079"
  },
  {
    "text": "a much more nuanced take on that because it's a giant pain in the butt a to put",
    "start": "3061079",
    "end": "3067020"
  },
  {
    "text": "the return type there but as you've pointed out it can be wrong sometimes when you explicitly state it or at the",
    "start": "3067020",
    "end": "3075240"
  },
  {
    "text": "very least it's often a superset of what you actually wanted so like for example you have Union types which are an",
    "start": "3075240",
    "end": "3081540"
  },
  {
    "text": "amazing thing in typescript where it's like you know this this type is literally only this string or this string it can be no other strings and if",
    "start": "3081540",
    "end": "3088380"
  },
  {
    "text": "I put string as my return type like I wouldn't go I'm essentially casting something that can only be this thing or this thing",
    "start": "3088380",
    "end": "3094140"
  },
  {
    "text": "into like just a generalized string so I've come around a lot on that there is",
    "start": "3094140",
    "end": "3099300"
  },
  {
    "text": "one question I want to ask you though because I think there's still one hold out use case for uh for explicitly",
    "start": "3099300",
    "end": "3106319"
  },
  {
    "text": "putting something on your return type and that is to protect yourself from",
    "start": "3106319",
    "end": "3111599"
  },
  {
    "text": "writing something into your function that you didn't want so like for example in go let's say I I know that I want",
    "start": "3111599",
    "end": "3118079"
  },
  {
    "text": "this function to return a string and because I have multiple return statements somewhere in there I return",
    "start": "3118079",
    "end": "3124500"
  },
  {
    "text": "something else my understanding is that in typescript the default would be to just return a uni it's now a union type",
    "start": "3124500",
    "end": "3130800"
  },
  {
    "text": "right because I have multiple return statements one of them is returning thing a one of them is returning thing B",
    "start": "3130800",
    "end": "3136680"
  },
  {
    "text": "so typescript infers this function returns thing a or thing B whereas in go if I did that it would just yell at me",
    "start": "3136680",
    "end": "3143460"
  },
  {
    "text": "and say like no you wanted to return thing a here you need to fix it I think we kid ourselves when we say that at the",
    "start": "3143460",
    "end": "3149160"
  },
  {
    "text": "point of writing every function we know exactly how we want it to be consumed from that point forward and the argument",
    "start": "3149160",
    "end": "3155819"
  },
  {
    "text": "I make against the strong return type case here is that it's not a problem",
    "start": "3155819",
    "end": "3161400"
  },
  {
    "text": "until you consume it like if you have a function that's supposed to return a string but there's one case where it returns a null that's not a problem",
    "start": "3161400",
    "end": "3167760"
  },
  {
    "text": "until I run the function and then I run dot to uppercase and it gives me an error saying hey that might be null",
    "start": "3167760",
    "end": "3172980"
  },
  {
    "text": "which point I'm like oh why I hover over the function definition it says string or no I'm like oh I'm returning a null",
    "start": "3172980",
    "end": "3178079"
  },
  {
    "text": "in there I shouldn't be and I fix it then but I shouldn't have to to put in that mental overhead with the",
    "start": "3178079",
    "end": "3183540"
  },
  {
    "text": "possibility of making my functions less strict and less safe by doing it because I might consume it incorrectly in the",
    "start": "3183540",
    "end": "3189960"
  },
  {
    "text": "future I think that the strength of typescript and its inference is that the point of consumption is when you know if",
    "start": "3189960",
    "end": "3195359"
  },
  {
    "text": "a type definition is correct or incorrect you don't have to worry about that when you're defining the function that makes sense and apologies if you've",
    "start": "3195359",
    "end": "3202140"
  },
  {
    "text": "already I mean I'm sure you've already talked about this but for my listeners um do you draw a distinction when you're",
    "start": "3202140",
    "end": "3208800"
  },
  {
    "text": "like building a library because like in an application what you're saying makes perfect sense right it's like you define",
    "start": "3208800",
    "end": "3214260"
  },
  {
    "text": "your function you call your function it'll yell at you when you call it when you're defining libraries exporting stuff so are you a bigger fan of",
    "start": "3214260",
    "end": "3220920"
  },
  {
    "text": "explicit return types there it writing Library code in typescript and writing application coded typescript",
    "start": "3220920",
    "end": "3226740"
  },
  {
    "text": "feel like not just different languages but like whole different worlds and mindsets and like it's a lot of why",
    "start": "3226740",
    "end": "3232440"
  },
  {
    "text": "typescript is so powerful is it's just straight up shifted that burden of complexity onto library devs to do and",
    "start": "3232440",
    "end": "3238980"
  },
  {
    "text": "if most of your time is spent doing Library work like I'm sure primogens is his stance makes much more sense in that regard but if you're building",
    "start": "3238980",
    "end": "3245579"
  },
  {
    "text": "applications that are facing users with apis that might change because some user has an issue with their screen reader or",
    "start": "3245579",
    "end": "3251819"
  },
  {
    "text": "another issue has an AV another has an AV device that's not supporting a specific expectation that you've encoded",
    "start": "3251819",
    "end": "3257040"
  },
  {
    "text": "the flexibility you get from inference allows you to make those changes confidently but with a library you need",
    "start": "3257040",
    "end": "3263460"
  },
  {
    "text": "that to work for all the different use cases that you can't see because they're not in your code base so if I make a type change to one of my functions and",
    "start": "3263460",
    "end": "3270540"
  },
  {
    "text": "that breaks somebody else's code in a different project that speaks a different language than me how does that get to me to make the fix it probably",
    "start": "3270540",
    "end": "3277740"
  },
  {
    "text": "doesn't so at that point absolutely return types and a lot of other things make sense like but I talk about trpc a",
    "start": "3277740",
    "end": "3284460"
  },
  {
    "text": "lot it's a fantastic project for full stack type safety the number of enemies in the types or the number of enemies in",
    "start": "3284460",
    "end": "3289680"
  },
  {
    "text": "the trpc code base is baffling because they're not trying to make a super",
    "start": "3289680",
    "end": "3294720"
  },
  {
    "text": "strict internal typescript solution it actually makes making changes in trpc really scary because you don't have much",
    "start": "3294720",
    "end": "3300420"
  },
  {
    "text": "type safety internally in the type or in the trbc code base because they're not using typescript as a way to keep their",
    "start": "3300420",
    "end": "3307020"
  },
  {
    "text": "code safe they're using typescript as a contract system for you to keep your own code safe hmm",
    "start": "3307020",
    "end": "3313140"
  },
  {
    "text": "that's really interesting I had no idea that's how it worked I've also never tried to write a library in typescript",
    "start": "3313140",
    "end": "3319380"
  },
  {
    "text": "um but whenever I have to dive into the type definitions for one of the libraries I use I count myself lucky",
    "start": "3319380",
    "end": "3325200"
  },
  {
    "text": "that I don't write libraries in typescript yeah it's something I've been doing a lot more this past year and it",
    "start": "3325200",
    "end": "3331800"
  },
  {
    "text": "is rough it's changed my tune on a lot of things I actually did a video recently why these important devs hate",
    "start": "3331800",
    "end": "3336900"
  },
  {
    "text": "typescript and react where I specifically talk about how library maintainers and authors especially in",
    "start": "3336900",
    "end": "3342780"
  },
  {
    "text": "like the react ecosystem right now a big part of why they are frustrated and why they're pushing back is for very good",
    "start": "3342780",
    "end": "3348900"
  },
  {
    "text": "reason it's that their job as maintainers is continuing to get harder as these tools enable more behaviors",
    "start": "3348900",
    "end": "3354720"
  },
  {
    "text": "that require these Library authors to to take on the burden to make things easier for the user like the new react model",
    "start": "3354720",
    "end": "3360480"
  },
  {
    "text": "with server components enables what I call npm installable infrastructure when you install upload thing which is our",
    "start": "3360480",
    "end": "3367140"
  },
  {
    "text": "alternative to S3 for full stack web devs you host an endpoint on your service that handles authentication",
    "start": "3367140",
    "end": "3373859"
  },
  {
    "text": "authorization and the callbacks for when the files are done uploading that's a piece of infra that you're deploying on",
    "start": "3373859",
    "end": "3379500"
  },
  {
    "text": "your servers that we manage with you with a package that is fully open source you can change however you want and a",
    "start": "3379500",
    "end": "3385800"
  },
  {
    "text": "bunch of customization built in and then that endpoint gets called by a user doing an upload",
    "start": "3385800",
    "end": "3391140"
  },
  {
    "text": "once you've authenticated them on your server you call our server to get the pre-signed post URL that you then",
    "start": "3391140",
    "end": "3396839"
  },
  {
    "text": "forward down to the user who then sends the file to us and we call you back when the file is done uploading so there's",
    "start": "3396839",
    "end": "3402359"
  },
  {
    "text": "none of the weird security exploits that a third fully third-party host would have nor are there the edge cases that a",
    "start": "3402359",
    "end": "3408599"
  },
  {
    "text": "fully first party host would have such as the user posts to S3 and then blocks your site so they never call back to you",
    "start": "3408599",
    "end": "3414240"
  },
  {
    "text": "when the file is done uploading they need to put ghost files all over your infrastructure we found a solution there",
    "start": "3414240",
    "end": "3419339"
  },
  {
    "text": "by npm installing a little piece of infra that you host in your existing project and now that is the in between",
    "start": "3419339",
    "end": "3426240"
  },
  {
    "text": "of your users and our infra and by allowing for these types of composition to exist a whole new type of software as",
    "start": "3426240",
    "end": "3434520"
  },
  {
    "text": "a service industry can now exist companies like clerk upload thing upstash Axiom all of these businesses",
    "start": "3434520",
    "end": "3441059"
  },
  {
    "text": "that are effectively building back-end as a service but your back end is the",
    "start": "3441059",
    "end": "3446099"
  },
  {
    "text": "service but it's so much more work now for the library maintainers too yeah npm",
    "start": "3446099",
    "end": "3452940"
  },
  {
    "text": "installable infrastructure I hope that uh I hope that catchphrase catches on I like that yeah",
    "start": "3452940",
    "end": "3459240"
  },
  {
    "text": "there's a bunch of us pushing for it cool yeah I'll make sure to I'll make sure to say it more often",
    "start": "3459240",
    "end": "3465000"
  },
  {
    "text": "if if the two previous things we've talked about were not already it what is",
    "start": "3465000",
    "end": "3470160"
  },
  {
    "text": "your most unpopular engineering opinion",
    "start": "3470160",
    "end": "3475099"
  },
  {
    "text": "I think it's the video I I just published it's a redo of one I had done",
    "start": "3477359",
    "end": "3482460"
  },
  {
    "text": "before which is about betting on Technologies I think people overvalue",
    "start": "3482460",
    "end": "3490319"
  },
  {
    "text": "the benefit of getting to a technology early like let's say rust replaces",
    "start": "3490319",
    "end": "3495599"
  },
  {
    "text": "golang and even C plus in the next five years where rust becomes the dominant performant memory safe back-end solution",
    "start": "3495599",
    "end": "3504720"
  },
  {
    "text": "if you got into rust right now how much better off are you five years from now many think you'll be much better off",
    "start": "3504720",
    "end": "3511319"
  },
  {
    "text": "getting in that early I'd argue neutral to possibly even worse off",
    "start": "3511319",
    "end": "3517280"
  },
  {
    "text": "I mean the the like I imagine where most people's heads first go where my head first goes is like well now I have five",
    "start": "3518700",
    "end": "3525180"
  },
  {
    "text": "years of experience in language as it's dominant why why would that be a bad thing because a huge part of how it gets",
    "start": "3525180",
    "end": "3531599"
  },
  {
    "text": "dominant is by changing and if your mindset is five years behind because that's when you put in your time and",
    "start": "3531599",
    "end": "3537660"
  },
  {
    "text": "your reps are for an old version it's no longer how it works you're actually at a huge disadvantage like for me I got into",
    "start": "3537660",
    "end": "3543599"
  },
  {
    "text": "react halfway through react's current life I was very late to react but I got in right as hooks were happening so I",
    "start": "3543599",
    "end": "3550440"
  },
  {
    "text": "was able to make the mental shift to the new model and be one of like the early people pushing it because I didn't have",
    "start": "3550440",
    "end": "3555720"
  },
  {
    "text": "the baggage in my brain of this old model slowing me down and I was actually able to look at the old model in the new model and have a more neutral comparison",
    "start": "3555720",
    "end": "3562140"
  },
  {
    "text": "because I didn't have any horses in the race yet it's like yeah obviously this is better obviously I'm going to do this",
    "start": "3562140",
    "end": "3568140"
  },
  {
    "text": "and as I've spent more time in the react ecosystem it's actually been harder and harder for me to have that level of neutrality looking at new Solutions like",
    "start": "3568140",
    "end": "3575160"
  },
  {
    "text": "I didn't like next when I saw it initially because I had my mental model of react it's a single page app and I",
    "start": "3575160",
    "end": "3580680"
  },
  {
    "text": "didn't like server components initially because I had my mental model of the T3 stack experience with trpc but the more",
    "start": "3580680",
    "end": "3587579"
  },
  {
    "text": "you're invested in the way things work now the less less likely you are to make the jump for why they're successful in",
    "start": "3587579",
    "end": "3593040"
  },
  {
    "text": "the future YouTube's my favorite example for this because all 100 of the top 100 creators for the first five years of",
    "start": "3593040",
    "end": "3599160"
  },
  {
    "text": "YouTube every single one is irrelevant now just flat out period Point Blank we don't argue about it because the way",
    "start": "3599160",
    "end": "3606540"
  },
  {
    "text": "YouTube worked before didn't really work it worked for the smallish audience YouTube had then but for YouTube to",
    "start": "3606540",
    "end": "3613020"
  },
  {
    "text": "become the huge thing it is now it had to change it any creator that found the formula when it was too early now has so",
    "start": "3613020",
    "end": "3620760"
  },
  {
    "text": "much brain rot they can't get out of it anymore and it's so so common in every",
    "start": "3620760",
    "end": "3626040"
  },
  {
    "text": "field that if you get into early before the critical masses hit any biases that existed before said critical mass are",
    "start": "3626040",
    "end": "3632160"
  },
  {
    "text": "going to be really hard for you to shake that is fascinating I've never heard this before",
    "start": "3632160",
    "end": "3637380"
  },
  {
    "text": "um I got in to go like yeah halfway into its current life cycle I guess like 2015 2016. so I was like halfway in if you",
    "start": "3637380",
    "end": "3644339"
  },
  {
    "text": "consider like when it when it came out to now and I feel like I've had a great time and go and when generics came out I",
    "start": "3644339",
    "end": "3651359"
  },
  {
    "text": "was really excited about it but like it's almost like an old dog new tricks thing that you're kind of explaining",
    "start": "3651359",
    "end": "3656819"
  },
  {
    "text": "here where it can be a lot easier to pick up the new tricks if you were never stuck in the old Paradigm that and you",
    "start": "3656819",
    "end": "3663839"
  },
  {
    "text": "don't know which old tricks are even relevant because half the tricks you learned in that early window might no",
    "start": "3663839",
    "end": "3669839"
  },
  {
    "text": "longer matter in the later window so when you get in late you you get to benefit from all the work everybody's",
    "start": "3669839",
    "end": "3676380"
  },
  {
    "text": "done for that past period figuring out what doesn't doesn't matter and like I can't imagine somebody who like was",
    "start": "3676380",
    "end": "3683040"
  },
  {
    "text": "trying really hard to learn react and they had to memorize all the weird patterns around like mix-ins should component update the class behavior is",
    "start": "3683040",
    "end": "3689880"
  },
  {
    "text": "changing between minor versions and all of this chaos well now I can just write a function throw a you state in there",
    "start": "3689880",
    "end": "3695700"
  },
  {
    "text": "and I'm doing the same thing with one-fourth the cognitive load like yeah it just it doesn't make sense to get in",
    "start": "3695700",
    "end": "3702299"
  },
  {
    "text": "early even if you are confident that thing is going to succeed the one caveat I might throw in is you",
    "start": "3702299",
    "end": "3710880"
  },
  {
    "text": "will be ahead in hr's eyes even if you're not ahead from an engineering perspective right yeah yeah",
    "start": "3710880",
    "end": "3718020"
  },
  {
    "text": "and I did not value that yeah that doesn't matter as much uh yeah but definitely",
    "start": "3718020",
    "end": "3724500"
  },
  {
    "text": "take away you're not wrong but you can also just why which isn't the worst thing or take a project that you had for",
    "start": "3724500",
    "end": "3731280"
  },
  {
    "text": "a while Port it into the new thing and then say the Project's been around for four years and it's written in this thing you would have really been using the thing for six months and you can get",
    "start": "3731280",
    "end": "3737400"
  },
  {
    "text": "away with that like no one double checks like these are all like like on like Edge case like benefits that aren't as",
    "start": "3737400",
    "end": "3744359"
  },
  {
    "text": "viable and The more I've thought about it the more I realize like the engineers I look up to the most that I consider the best at their craft almost always",
    "start": "3744359",
    "end": "3750599"
  },
  {
    "text": "got into the thing that they're doing relatively late yeah and I'm very clear because we do have a lot",
    "start": "3750599",
    "end": "3756780"
  },
  {
    "text": "of people listening to this that are that are very new to engineering if you like it is way more important to be a",
    "start": "3756780",
    "end": "3763619"
  },
  {
    "text": "good engineer that can ship good stuff than to be able to placate HR like you",
    "start": "3763619",
    "end": "3768900"
  },
  {
    "text": "will have a much more successful career if that's the thing you're you're worried about so don't read too much into my joke about HR liking your resume",
    "start": "3768900",
    "end": "3776819"
  },
  {
    "text": "cool absolutely and just build cool things with technologies that you want to use and if you have some new thing",
    "start": "3776819",
    "end": "3782700"
  },
  {
    "text": "that's really exciting to you like you're just super into spell to rust like you love what it's doing you're aligned with the mission you want to be",
    "start": "3782700",
    "end": "3788099"
  },
  {
    "text": "part of why it's the next thing do it that energy and that excitement is going to bring you much more success",
    "start": "3788099",
    "end": "3793980"
  },
  {
    "text": "than any given technology or philosophy well if you're just so excited you're going to push the thing push it I",
    "start": "3793980",
    "end": "3799980"
  },
  {
    "text": "shouldn't stop you I should in fact invigorate you to prove me wrong but yeah like anybody who says I am being",
    "start": "3799980",
    "end": "3806520"
  },
  {
    "text": "like the take I get is I am bad for engineering so I'm telling people to not use rusters felt no I'm telling people",
    "start": "3806520",
    "end": "3812880"
  },
  {
    "text": "to make realistic bests and if they really want to use those things they can say you'll feel you're wrong I'm gonna",
    "start": "3812880",
    "end": "3819480"
  },
  {
    "text": "go use it cool awesome I love that that's how change happens but don't be a driver of change unless you want to be a",
    "start": "3819480",
    "end": "3825299"
  },
  {
    "text": "driver of change be a driver of good software that's what our job is it's not our job to change Which languages we're",
    "start": "3825299",
    "end": "3830640"
  },
  {
    "text": "using every six months is our job to solve problems for users and letting all of this like pissing fests on Twitter",
    "start": "3830640",
    "end": "3836880"
  },
  {
    "text": "and get in the way of building great software that doesn't lead to good engineering",
    "start": "3836880",
    "end": "3842819"
  },
  {
    "text": "I love that Twitter's fun for me it's not productive for me and it's probably not productive for anyone listening to",
    "start": "3842819",
    "end": "3849420"
  },
  {
    "text": "this either uh you build cool stuff that's what's going to help thanks so much for coming on Theo where can",
    "start": "3849420",
    "end": "3855540"
  },
  {
    "text": "everybody find your stuff you can check out my YouTube and Twitter t3.gg my twitch is just my name Theo and",
    "start": "3855540",
    "end": "3862380"
  },
  {
    "text": "the website t3.gg has links to absolutely everything if for some reason you're into like the Creator or economy",
    "start": "3862380",
    "end": "3869520"
  },
  {
    "text": "stuff like what's going on with YouTube how do the algorithms work if you're just a nerd about camera gear and stuff I do have another Channel theorance",
    "start": "3869520",
    "end": "3875700"
  },
  {
    "text": "where I just talk about all that type of stuff too I didn't even know about that channel I'm definitely going to check my most",
    "start": "3875700",
    "end": "3880920"
  },
  {
    "text": "popular videos on that channel actually I complain about Red's camera patents and how they're destroying the camera",
    "start": "3880920",
    "end": "3886200"
  },
  {
    "text": "industry and has half a million plays wow that's bigger than your normal YouTube videos on your main way bigger",
    "start": "3886200",
    "end": "3892619"
  },
  {
    "text": "yeah it's the second video on that second Channel and it just it blew up because I branded it right it was a topic nobody was talking about and yeah",
    "start": "3892619",
    "end": "3899339"
  },
  {
    "text": "hit the Right audience that's really cool everybody go check that out t3.gg is like the main Hub I'll",
    "start": "3899339",
    "end": "3905040"
  },
  {
    "text": "make sure to link it down in the description below thanks again Theo talk to you later appreciate it thank you",
    "start": "3905040",
    "end": "3910220"
  },
  {
    "text": "[Music] thank you [Music]",
    "start": "3910220",
    "end": "3919099"
  }
]