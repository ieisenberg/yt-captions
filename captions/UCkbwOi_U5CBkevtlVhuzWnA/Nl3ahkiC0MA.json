[
  {
    "text": "Byron could you answer again from a high level what is a pub sub architecture specifically as it relates to kind of",
    "start": "40",
    "end": "6240"
  },
  {
    "text": "backend development and like what should we compare and contrast it to to make sense of",
    "start": "6240",
    "end": "13480"
  },
  {
    "text": "[Music]",
    "start": "20490",
    "end": "28960"
  },
  {
    "text": "it [Music]",
    "start": "28960",
    "end": "35120"
  },
  {
    "text": "before we jump into today's conversation I've got a recommendation Jonathan Hall a friend of mine who was on the show 10",
    "start": "35120",
    "end": "41960"
  },
  {
    "text": "or so episodes back well he's got his own podcast that you should definitely check out it's called cupo go and we do",
    "start": "41960",
    "end": "49320"
  },
  {
    "text": "talk a lot about go development here on this podcast but we also talk about a lot of other stuff and cup a go is a",
    "start": "49320",
    "end": "55320"
  },
  {
    "text": "great podcast if you really just want to keep going deeper on the go programming language so cup AO go check them out",
    "start": "55320",
    "end": "62239"
  },
  {
    "text": "they're on all the major podcasting platforms and on YouTube Welcome to this episode of back in banter I'm super",
    "start": "62239",
    "end": "68400"
  },
  {
    "text": "excited I've got two Engineers here from Cadia now this of course is the show about backend development and backend",
    "start": "68400",
    "end": "75119"
  },
  {
    "text": "careers but today we're going to dive into kind of more specifically pubsub",
    "start": "75119",
    "end": "80400"
  },
  {
    "text": "architecture something we haven't really had a chance to talk about on the show yet so I've got Byron Ruth and David",
    "start": "80400",
    "end": "85840"
  },
  {
    "text": "ghee today with me um I want you guys to go ahead and just give a quick introduction uh Byron do you want to",
    "start": "85840",
    "end": "91960"
  },
  {
    "text": "start off oh yeah sure um thanks for having us and uh yeah so i' I've been I",
    "start": "91960",
    "end": "98799"
  },
  {
    "text": "actually came originally from uh the healthcare background so I was in biomedical research for 15 years prior",
    "start": "98799",
    "end": "106399"
  },
  {
    "text": "to uh joining Cadia so I have a lot of experience I I manage a couple software",
    "start": "106399",
    "end": "112200"
  },
  {
    "text": "teams um building uh Tech to facilitate pediatric research um I've been a long",
    "start": "112200",
    "end": "119159"
  },
  {
    "text": "time now user which we'll get into um probably later in the episode we'll bring that up and um yeah so joined",
    "start": "119159",
    "end": "125920"
  },
  {
    "text": "Sadia about a year and a half ago and have been doing primarily developer relations but I'm also uh doing the Nats",
    "start": "125920",
    "end": "134080"
  },
  {
    "text": "FM podcast with David and um also a release manager for the Nats uh server",
    "start": "134080",
    "end": "139440"
  },
  {
    "text": "itself oh very cool yeah yeah amazing thanks for that uh David you want to go",
    "start": "139440",
    "end": "144680"
  },
  {
    "text": "ahead yeah sure yeah no pressure on Barron he's got all the all the hard things to deal with yeah so hi I'm David",
    "start": "144680",
    "end": "149879"
  },
  {
    "text": "G um been a network kind of software engineer Network designer architect for",
    "start": "149879",
    "end": "155120"
  },
  {
    "text": "20 years or so drawn to the communication landscape and I've kind of been fortunate enough um even though I",
    "start": "155120",
    "end": "160280"
  },
  {
    "text": "live in the UK to work for a lot of kind of blue chips and a large Network vendors um but I started out in life as",
    "start": "160280",
    "end": "166040"
  },
  {
    "text": "an electronics engineer working believe it or not on distributed Machinery where you know you have a communication system",
    "start": "166040",
    "end": "171280"
  },
  {
    "text": "on a machine and then it became how to make those machines communicate together on a factory floor and then that's how I",
    "start": "171280",
    "end": "176720"
  },
  {
    "text": "got inter networking in the first place because I realized it was more money to be be made building networks and there was Machinery um but the love for the",
    "start": "176720",
    "end": "183519"
  },
  {
    "text": "machinery and how they communicate never went away so I then got involved heavily Communications and software and I've",
    "start": "183519",
    "end": "189239"
  },
  {
    "text": "kind of like you know the pendulums swung the opposite way and I'm back now in software looking at communications",
    "start": "189239",
    "end": "195159"
  },
  {
    "text": "and not the other the physical aspects so yeah over Sadia um I'm I've got like a million hats maybe not a million maybe",
    "start": "195159",
    "end": "201480"
  },
  {
    "text": "about four but a little bit of devil little bit of community little bit of engineering a lot of customer facing",
    "start": "201480",
    "end": "206920"
  },
  {
    "text": "stuff and I'm fortunate as well for a to go lot of the conferences and talks and represent the the next project and Cadia",
    "start": "206920",
    "end": "214120"
  },
  {
    "text": "as well yeah well I mean I was amazed I was just talking to Byron before we went",
    "start": "214120",
    "end": "219680"
  },
  {
    "text": "live um Cadia is about 40 people and I've worked at companies of much larger",
    "start": "219680",
    "end": "226599"
  },
  {
    "text": "than 40 people uh that I don't think were quite as well known for their product so I mean I've heard of nats",
    "start": "226599",
    "end": "232400"
  },
  {
    "text": "independently obviously before we kind of connected on Twitter to put this this episode together um but you guys are",
    "start": "232400",
    "end": "237640"
  },
  {
    "text": "doing some pretty cool things with with only 4 people one kind of preliminary question I have before we even dive into",
    "start": "237640",
    "end": "242799"
  },
  {
    "text": "the more technical stuff is just like how like what's the seniority level like",
    "start": "242799",
    "end": "248159"
  },
  {
    "text": "over at Cadia like is everyone this like tenure 10e senior developer or do you",
    "start": "248159",
    "end": "253480"
  },
  {
    "text": "have a pretty wide mix of Junior up to senior gotta watch what we say here but",
    "start": "253480",
    "end": "259160"
  },
  {
    "text": "yes that gen generally true there's a lot of really really senior people there",
    "start": "259160",
    "end": "264479"
  },
  {
    "text": "have diverse backgrounds a lot of people clearly in messaging uh Pub sub type",
    "start": "264479",
    "end": "270520"
  },
  {
    "text": "stuff uh and right yeah it's it's um it's really fun that was actually one of",
    "start": "270520",
    "end": "275680"
  },
  {
    "text": "the reasons why I personally wanted given the opportunity I wanted to join because I knew I was going to be working",
    "start": "275680",
    "end": "281440"
  },
  {
    "text": "with a whole bunch of really senior people with again diverse backgrounds and I knew like I have this my my",
    "start": "281440",
    "end": "288120"
  },
  {
    "text": "personal opinion is that I I enjoy being surrounded by people who are much smarter than me so I want to I wanted to",
    "start": "288120",
    "end": "294880"
  },
  {
    "text": "take advantage of that um joining joining Cadia so it's it's been a a good time and um I think at the same time we",
    "start": "294880",
    "end": "303800"
  },
  {
    "text": "all play off one another fairly well um and we respect one another so that's that's it's been a good time for me",
    "start": "303800",
    "end": "310160"
  },
  {
    "text": "personally I think that's great advice generally I can't so there's there's the story of like there's Bill Murray is it",
    "start": "310160",
    "end": "316960"
  },
  {
    "text": "is it David akroy like the guys from the Ghostbusters movie The Original Ghostbusters movie and there's there's a",
    "start": "316960",
    "end": "322120"
  },
  {
    "text": "famous quote and I'm G to butcher it because I can't remember which one of them said it but basically if you find yourself as like the best actor in the",
    "start": "322120",
    "end": "328160"
  },
  {
    "text": "room like you need to find a new room right because like you kind of stop learning um which is unfortunate because",
    "start": "328160",
    "end": "333360"
  },
  {
    "text": "if you take any room there's always going to be a best person in that room uh you just don't want to be that person",
    "start": "333360",
    "end": "339919"
  },
  {
    "text": "right uh so I think it makes a lot of sense to continuously try to seek out uh either new organizations or new teams",
    "start": "339919",
    "end": "346199"
  },
  {
    "text": "where you have seniors to learn from um Sadia yeah it's really interesting think",
    "start": "346199",
    "end": "352000"
  },
  {
    "text": "the things with n that we come across though as well the just the general",
    "start": "352000",
    "end": "357600"
  },
  {
    "text": "width and breadth and depth of what we've got going on and what we interact with you know one day you're an expert",
    "start": "357600",
    "end": "363960"
  },
  {
    "text": "in top one topic and the next day you are completely fresh you're not winging it but you're hot on the heels of going",
    "start": "363960",
    "end": "370160"
  },
  {
    "text": "like I don't know where to begin with this and then luckily somebody in the team somewhere leans in and you think ah and that's why I love this place yeah",
    "start": "370160",
    "end": "377440"
  },
  {
    "text": "it's great and and just on that on that to second that point yeah it's like the stuff that we're doing with",
    "start": "377440",
    "end": "383720"
  },
  {
    "text": "Nats and again we'll get into the pub sub more generally we'll take a step back but like we're we're working with",
    "start": "383720",
    "end": "389520"
  },
  {
    "text": "distributed systems at the end of the day and there are so many aspects to that clearly and it's like there's a lot",
    "start": "389520",
    "end": "395080"
  },
  {
    "text": "of moving Parts you have to consider architecture and and and yeah you might",
    "start": "395080",
    "end": "400560"
  },
  {
    "text": "have a person on the team who just like really knows Raph consensus super well or really understands you know the",
    "start": "400560",
    "end": "406360"
  },
  {
    "text": "mechanics of that and then someone's else like topology design how do you create this like Hub and spoke model",
    "start": "406360",
    "end": "411960"
  },
  {
    "text": "properly to power cars and blah blah blah like there's all sorts of deep",
    "start": "411960",
    "end": "417319"
  },
  {
    "text": "knowledge um everyone has a really great breadth but yeah you definitely encounter different people who have very",
    "start": "417319",
    "end": "424080"
  },
  {
    "text": "deep vertical backgrounds um so it's it's very fun yeah yeah well I mean it's",
    "start": "424080",
    "end": "430360"
  },
  {
    "text": "one of the more complex topics I so in my four-year CS degree I think my hardest my my like",
    "start": "430360",
    "end": "437039"
  },
  {
    "text": "quote unquote hardest class just from a conceptual standpoint was probably computational Theory which was like",
    "start": "437039",
    "end": "442240"
  },
  {
    "text": "touring machines um finite automa and but then the second hardest class was",
    "start": "442240",
    "end": "447680"
  },
  {
    "text": "probably distributed systems um from a coding perspective it was definitely cont uh distributed systems",
    "start": "447680",
    "end": "453759"
  },
  {
    "text": "computational theory was like all theoretical right it's like oh maybe like in the future this will matter like I haven't had to worry about finite",
    "start": "453759",
    "end": "460479"
  },
  {
    "text": "automa in my day job as a backend developer yet uh but distributed systems very much so especially you know in the",
    "start": "460479",
    "end": "466280"
  },
  {
    "text": "last decade a lot of a lot of progress has been made so let's let's like you said let's zoom out and I just want to",
    "start": "466280",
    "end": "471639"
  },
  {
    "text": "talk about just just really quick before we even talk about specifically Pub sub let's talk about what is a distributed",
    "start": "471639",
    "end": "478039"
  },
  {
    "text": "system could could you may answer that David a dish R system oh I knew you was",
    "start": "478039",
    "end": "483560"
  },
  {
    "text": "going to call my name out there a dish Ritt system okay so let's I",
    "start": "483560",
    "end": "488960"
  },
  {
    "text": "think the easiest way to mentally project this if we take something to be done so let's come up with a complex",
    "start": "488960",
    "end": "495879"
  },
  {
    "text": "calculation instead of doing that in one place in one algorithm on one run time let's split that apart into separate",
    "start": "495879",
    "end": "501120"
  },
  {
    "text": "chunks and let's Source parts of the inputs parts of the calculation and let's Stitch it all back together to try",
    "start": "501120",
    "end": "506400"
  },
  {
    "text": "and provide a single answer and we we're going to get all sorts of fun with that we're going to have fast passs and slow",
    "start": "506400",
    "end": "511759"
  },
  {
    "text": "paths and we might have errors and all sorts of things but it's when we don't have visibility of doing a single job in",
    "start": "511759",
    "end": "517039"
  },
  {
    "text": "a single place and we lose visibility of that and spread it around to to different parts and that might be for different reasons power latency just",
    "start": "517039",
    "end": "524399"
  },
  {
    "text": "user experience you know language localization regulatory who knows I mean Byron I'm going to do that thing go what",
    "start": "524399",
    "end": "530760"
  },
  {
    "text": "do you think Byron is that reasonable did I do it justice yeah I would I would um I was",
    "start": "530760",
    "end": "537000"
  },
  {
    "text": "going to butcher lesli Leslie lamport's quote of saying distributed system is one that a computer can basically make",
    "start": "537000",
    "end": "544279"
  },
  {
    "text": "your computer um not work anymore a failure in one it's like okay it's",
    "start": "544279",
    "end": "551640"
  },
  {
    "text": "notur yeah because if you think you think of it it's it's the the fundamental term here is it's a system",
    "start": "551640",
    "end": "557200"
  },
  {
    "text": "it's not just independent distributed computers right that aren't talking to one another so there's connectivity",
    "start": "557200",
    "end": "564320"
  },
  {
    "text": "there's communication happening between them whether you're breaking up breaking up some work and they have to you know coordinate and do something or you're",
    "start": "564320",
    "end": "571120"
  },
  {
    "text": "scaling out and whatever whatever it may be you in in the non-happy path case in",
    "start": "571120",
    "end": "578279"
  },
  {
    "text": "the happy path if you design it properly everything should go swimmingly and great but the second you have a fault",
    "start": "578279",
    "end": "584640"
  },
  {
    "text": "somewhere that's where distributed systems gets hard and you're like okay",
    "start": "584640",
    "end": "589839"
  },
  {
    "text": "if I have you know I'm Distributing load across these three computers and let's say it's a simple work CU or something",
    "start": "589839",
    "end": "595200"
  },
  {
    "text": "and you know I'm taking off these jobs and I'm processing within some amount of time what if one of your what if the",
    "start": "595200",
    "end": "601560"
  },
  {
    "text": "third server goes down and now all the load is now being redistributed to your two servers if they can't keep up",
    "start": "601560",
    "end": "606600"
  },
  {
    "text": "they're eventually going to fall over as well and then you're you know you're down to nothing so it's like it's one of",
    "start": "606600",
    "end": "612440"
  },
  {
    "text": "those cases of saying understanding your fault domains within your system and you",
    "start": "612440",
    "end": "618200"
  },
  {
    "text": "know there's human systems and distributed systems whether they're like computers or human humans in the loop and that kind of thing but you have to",
    "start": "618200",
    "end": "624720"
  },
  {
    "text": "understand where your areas of fault are and understand you know if the happens",
    "start": "624720",
    "end": "629800"
  },
  {
    "text": "how isolated is it what's the blast radius is it how what like what's the ripple effect going to have across the",
    "start": "629800",
    "end": "635880"
  },
  {
    "text": "system and so it is you know you can build a distributed system for various reasons people gravitate you know they",
    "start": "635880",
    "end": "642160"
  },
  {
    "text": "hear buzzwords like microservices and they're like ah that seems cool I should just go do that and it's like well you",
    "start": "642160",
    "end": "647399"
  },
  {
    "text": "have to have a reason for doing it like don't don't jump to that conclusion but it's like a simple one is like I want to",
    "start": "647399",
    "end": "653760"
  },
  {
    "text": "use two different programming languages so I need two services so now I have to have network communication or I have a",
    "start": "653760",
    "end": "659040"
  },
  {
    "text": "certain problem that needs to scale you know given the input as David said and it's like you have to break up the work",
    "start": "659040",
    "end": "664399"
  },
  {
    "text": "you fun you physically can't I mean you get crazy computers in the cloud today that have massive amount of Hardware but",
    "start": "664399",
    "end": "671000"
  },
  {
    "text": "you're also spending you know 2 200 bucks a month to to to cost uh to afford",
    "start": "671000",
    "end": "676160"
  },
  {
    "text": "it you could maybe have commodity Hardware that you can just split the problem up more so you got to know you",
    "start": "676160",
    "end": "682480"
  },
  {
    "text": "know like why you're building a distributed system in the first place um High availability replication what what",
    "start": "682480",
    "end": "688680"
  },
  {
    "text": "have you breaking up work but yeah it fundamentally is is like you know these things are all coordinated in some form",
    "start": "688680",
    "end": "695279"
  },
  {
    "text": "or fashion together it's independent processes or M physical machines yeah can I step in I know this is going to be",
    "start": "695279",
    "end": "701920"
  },
  {
    "text": "the longest intro question ever the longest possible answer I think this is for later on ready for this one this is",
    "start": "701920",
    "end": "708440"
  },
  {
    "text": "going to be this is going to be a curve ball like a boomerang and later on it's going to come back I promise so Google",
    "start": "708440",
    "end": "713880"
  },
  {
    "text": "is a really good and that's not me saying go and Google it no Google is a system is really interesting because it's set a an expectation of what a",
    "start": "713880",
    "end": "720880"
  },
  {
    "text": "distributed system is so Google on a good day if you go you what is a penguin and it might come back and it will give",
    "start": "720880",
    "end": "726279"
  },
  {
    "text": "you different breed where they are they kind of eating habits and you know everything else on a bad day it might",
    "start": "726279",
    "end": "731639"
  },
  {
    "text": "come back and say it's a bird thing that's got some you know flippers",
    "start": "731639",
    "end": "736920"
  },
  {
    "text": "whatever because it's not offline and what happens with these systems is you build them for survivability as well so",
    "start": "736920",
    "end": "743199"
  },
  {
    "text": "you know like an experience you know you might say my dis system can never be offline something always need to happen",
    "start": "743199",
    "end": "749639"
  },
  {
    "text": "so in terms of Google it's like parts of it is all it's always broken in some degree but it's always functional in",
    "start": "749639",
    "end": "755079"
  },
  {
    "text": "your mind's eye so you're going to get an answer might not be very good answer today or you know the algorithm is broken or whatever it is um and I think",
    "start": "755079",
    "end": "763040"
  },
  {
    "text": "this these conversations are always great because with Nats and what we do for a living we can attack this from so",
    "start": "763040",
    "end": "768560"
  },
  {
    "text": "many different different ways whether it's programming language and you know skill in a different team and whatever",
    "start": "768560",
    "end": "773800"
  },
  {
    "text": "you know picky poison functional versus you know imperative and stuff we we've got all the kind of different Corner cases covered but they allow you to",
    "start": "773800",
    "end": "779720"
  },
  {
    "text": "build the systems that people expect when you use the word distributed right and then Boomerang",
    "start": "779720",
    "end": "785199"
  },
  {
    "text": "thrown and I I'll throw one one final term and I won't say anymore but um for",
    "start": "785199",
    "end": "790240"
  },
  {
    "text": "web developers you might be able to think of it as Progressive enhancement in the sense that you want to be able to",
    "start": "790240",
    "end": "795880"
  },
  {
    "text": "have this ability to have a minimum functioning thing like the the bird with flippers but if you can go beyond that",
    "start": "795880",
    "end": "804399"
  },
  {
    "text": "if if you know certain elements of the page can render better and improve the experience JavaScript can load all this",
    "start": "804399",
    "end": "810920"
  },
  {
    "text": "kind of stuff you're enhancing the you know the functionality or the experience that you're providing but the goal is to",
    "start": "810920",
    "end": "818160"
  },
  {
    "text": "like David said survivability it's like you want that minimum you know I can render in my like a web page in my",
    "start": "818160",
    "end": "824240"
  },
  {
    "text": "terminal I'm I'm blanking even on uh the names of those programs right now um but",
    "start": "824240",
    "end": "829600"
  },
  {
    "text": "it's like this ability to have the minimum information available that will still get the job done but if the",
    "start": "829600",
    "end": "835399"
  },
  {
    "text": "experience can be improved beyond that that's sort of one of those one of those factors as well yeah Progressive",
    "start": "835399",
    "end": "842360"
  },
  {
    "text": "enhancement is an interesting way I think to come at the definition of a distributed system so let me kind of",
    "start": "842360",
    "end": "848720"
  },
  {
    "text": "echo back some of what I heard and and you guys can tell me if I'm if I'm on the right track uh so a non-distributed",
    "start": "848720",
    "end": "857320"
  },
  {
    "text": "system might be for example I'm running a let's just say I have a very typical",
    "start": "857320",
    "end": "863000"
  },
  {
    "text": "kind of crud application backend so I've got my server written in go and it responds with like Json resources when",
    "start": "863000",
    "end": "869639"
  },
  {
    "text": "they're requested over HTTP right if I'm running that on my local machine one instance of that and it's con connected",
    "start": "869639",
    "end": "876320"
  },
  {
    "text": "to like a local postgress database we might not call that a distributed system",
    "start": "876320",
    "end": "881639"
  },
  {
    "text": "we might refer to that as a monolith right kind of one one server doing one thing but if we took that service and",
    "start": "881639",
    "end": "891079"
  },
  {
    "text": "distributed it across I don't know 10 or 20 different servers so different machines running the cloud slap the load",
    "start": "891079",
    "end": "898079"
  },
  {
    "text": "balancer in Fr front of it and now they're all communicating with either with each other and with the load balancer and responding to",
    "start": "898079",
    "end": "904680"
  },
  {
    "text": "requests could we consider that a distributed system this is a lovely",
    "start": "904680",
    "end": "912959"
  },
  {
    "text": "question you you want to go for that I know that it's like a very simple one um",
    "start": "913199",
    "end": "918279"
  },
  {
    "text": "because they're not necessarily well I'll let you guys answer",
    "start": "918279",
    "end": "923360"
  },
  {
    "text": "yeah go on bar all right I'll I'll I'll start I'll give you the first shot go for it yeah so so I think that is a it",
    "start": "923360",
    "end": "931279"
  },
  {
    "text": "is a distributed system first and foremost because you have at a minimum",
    "start": "931279",
    "end": "936959"
  },
  {
    "text": "you know two components you have the web server that's has your application on it whether it's a monolithic application or",
    "start": "936959",
    "end": "943279"
  },
  {
    "text": "not Ruby on Rails Jango what have you laravel but then you have this database",
    "start": "943279",
    "end": "948560"
  },
  {
    "text": "dependency if that database is offline your application is going to break in variety of ways so it's a unit it's a",
    "start": "948560",
    "end": "956319"
  },
  {
    "text": "unit of you know that has a particular responsibility no different than if you implemented two different services that",
    "start": "956319",
    "end": "962160"
  },
  {
    "text": "I'm you know an addition function and a subtraction function you know everyone's loving lambdas and you can have like",
    "start": "962160",
    "end": "968959"
  },
  {
    "text": "these two things well part of your service is going to not work you know that that front that client experience",
    "start": "968959",
    "end": "975720"
  },
  {
    "text": "that client interaction if I try to Subs like do SUB subtraction and it's offline it's not going to work and so if if you",
    "start": "975720",
    "end": "982360"
  },
  {
    "text": "hit an an API endpoint that requires the database and it's offline it's not going",
    "start": "982360",
    "end": "987959"
  },
  {
    "text": "to work and so the question is like when you do you know distributed system design and I would include that there",
    "start": "987959",
    "end": "994079"
  },
  {
    "text": "it's like well what is what is the experience like if it fails if the database is offline and that H that",
    "start": "994079",
    "end": "1000079"
  },
  {
    "text": "happy path fails one example could be for uh for instance if you had a cache a",
    "start": "1000079",
    "end": "1005920"
  },
  {
    "text": "local cache in your application server in process that just basically returned a stale read that that like a stale copy",
    "start": "1005920",
    "end": "1014120"
  },
  {
    "text": "of the data and it doesn't actually have to hit the database so you have to make that tradeoff to say does this stale",
    "start": "1014120",
    "end": "1019639"
  },
  {
    "text": "data is that still useful enough for this particular API endpoint or do I really need the freshest data in a",
    "start": "1019639",
    "end": "1025678"
  },
  {
    "text": "within a transaction in my database um so and then writes are obviously different from from reads and all that",
    "start": "1025679",
    "end": "1030959"
  },
  {
    "text": "kind of stuff but that is a distributed system and then the the the the second half the question of saying well how",
    "start": "1030959",
    "end": "1037558"
  },
  {
    "text": "would you if you just replicated your application server now if you ask the question of replicating your database",
    "start": "1037559",
    "end": "1044038"
  },
  {
    "text": "that's that's a whole other fun ball of weeds but um the question there if you",
    "start": "1044039",
    "end": "1049640"
  },
  {
    "text": "wanted you know High availability of your application server like you said you know three instances through a load",
    "start": "1049640",
    "end": "1055600"
  },
  {
    "text": "bouncer in front of it by default at least they would all still be hitting the same database so that's still the",
    "start": "1055600",
    "end": "1061880"
  },
  {
    "text": "single point of failure at the end of the day so if that's down all three it doesn't matter how highly available you get your application server it's still",
    "start": "1061880",
    "end": "1067919"
  },
  {
    "text": "gonna it's still not going to work in in in certain cases so um that's where I",
    "start": "1067919",
    "end": "1073919"
  },
  {
    "text": "mean distributed databases and and all that kind of stuff are um increasingly",
    "start": "1073919",
    "end": "1079320"
  },
  {
    "text": "being adopted and you know it's like just use a cloud database they handle like ha and all that kind of stuff and",
    "start": "1079320",
    "end": "1085760"
  },
  {
    "text": "so don't worry about it but David any any other additional points there I'm gonna",
    "start": "1085760",
    "end": "1092200"
  },
  {
    "text": "use the most famous term in it it depends I think it depends which which angle you're looking at things from so",
    "start": "1092200",
    "end": "1097960"
  },
  {
    "text": "what you described there I'm going to I think probably for the first time in my life ever disagree with Byron certainly",
    "start": "1097960",
    "end": "1103039"
  },
  {
    "text": "in public anyway where I think that's right don't worry I'm we call it back in banter yeah yeah there we go",
    "start": "1103039",
    "end": "1110360"
  },
  {
    "text": "um I'd consider that just a a vanilla low balance system but there's a question are all the low balance",
    "start": "1110360",
    "end": "1116760"
  },
  {
    "text": "machines in the same rack are they in the same cloud and the same tenant are they on the same VPC if they're all in",
    "start": "1116760",
    "end": "1122880"
  },
  {
    "text": "the same general proximity then what you're doing you're low balancing a path and I think for me distributed systems",
    "start": "1122880",
    "end": "1128720"
  },
  {
    "text": "is where aspects of um a data Journey have been spread around so I'd probably make an addendum to that maybe you're",
    "start": "1128720",
    "end": "1135039"
  },
  {
    "text": "getting the logo for your site from a local CDN coming in from somewhere in entirely different from you know the initial low balance front end you might",
    "start": "1135039",
    "end": "1142320"
  },
  {
    "text": "have some you know sound effects coming from you know whatever from a different place you might be on your website",
    "start": "1142320",
    "end": "1147440"
  },
  {
    "text": "subscribing to a random noise generator because hey you know I like the way the wind sounds outside I want a true random",
    "start": "1147440",
    "end": "1153120"
  },
  {
    "text": "number Source I think when you try and build a system with inputs from",
    "start": "1153120",
    "end": "1159320"
  },
  {
    "text": "different places from different data sources I I don't just mean you going through a low balancer for kind of ha or reliancy or resiliency purposes I think",
    "start": "1159320",
    "end": "1166559"
  },
  {
    "text": "distributed means for me very different things than just kind of you know let's let's scale It Up by sticking a low",
    "start": "1166559",
    "end": "1172360"
  },
  {
    "text": "balancer on the front and again it's not to be offensive to anybody it's just I think things have you know that pattern",
    "start": "1172360",
    "end": "1177400"
  },
  {
    "text": "was around for decades um yeah not in so much distributed there's a no true Scots",
    "start": "1177400",
    "end": "1184000"
  },
  {
    "text": "I'm starting to hear like the beginnings of a no true Scotsman uh like that's not really a distributed system even though",
    "start": "1184000",
    "end": "1190280"
  },
  {
    "text": "it's it's it's uh spread across machines because uh you know this either this is",
    "start": "1190280",
    "end": "1196440"
  },
  {
    "text": "a pattern that we've had for a while or doesn't solve all of the problems that we can solve with distributed systems",
    "start": "1196440",
    "end": "1202400"
  },
  {
    "text": "which I think is fair um maybe it's best to think of distributed systems almost as like a gradient and and what I mean",
    "start": "1202400",
    "end": "1208440"
  },
  {
    "text": "is like I could have a distributed system that's running just on my MacBook right and it's bound to like different",
    "start": "1208440",
    "end": "1214159"
  },
  {
    "text": "ports um and they're communicating with each other they're using distributed systems protocols right and balancing",
    "start": "1214159",
    "end": "1220039"
  },
  {
    "text": "data across different services on my MacBook but at the end of the day if I drop my MacBook in a lake like the system stops running right which is one",
    "start": "1220039",
    "end": "1226039"
  },
  {
    "text": "of the things that a distributed system is is uh kind of supposed to solve so",
    "start": "1226039",
    "end": "1231520"
  },
  {
    "text": "like it's most basic and again kind of correct me if I'm wrong I think of a distributed system as just kind of any",
    "start": "1231520",
    "end": "1237400"
  },
  {
    "text": "system that requires components that are distributed across either you know multip ideally multiple machines maybe",
    "start": "1237400",
    "end": "1244280"
  },
  {
    "text": "just multiple processes when you're testing them um and some of the benefits of distributed systems in include things",
    "start": "1244280",
    "end": "1249919"
  },
  {
    "text": "like resiliency right like hopefully if one component goes down the rest of the system kind of like to your point David",
    "start": "1249919",
    "end": "1256120"
  },
  {
    "text": "um earlier can keep functioning even if it means it has to function at like a lower level like maybe not all features",
    "start": "1256120",
    "end": "1262760"
  },
  {
    "text": "are available but at least most of them are or maybe all features are available um the quality of the responses just",
    "start": "1262760",
    "end": "1268720"
  },
  {
    "text": "aren't as good are we kind of on the right track I like what you what you're saying there so that whole thing of",
    "start": "1268720",
    "end": "1274159"
  },
  {
    "text": "survivability for me defines it I guess I I always put a network slant on things I know Byron you know takes a brunt of",
    "start": "1274159",
    "end": "1279760"
  },
  {
    "text": "this most days but I think if a user journey goes across a network and different points on the network then it",
    "start": "1279760",
    "end": "1285679"
  },
  {
    "text": "has a more distributed feel even though you could build and emulate an entire system on on your you know on your local",
    "start": "1285679",
    "end": "1290799"
  },
  {
    "text": "machine so that whole thing of well if my low balancer goes offline what's happened my whole user experience is dead but in a true distributed system",
    "start": "1290799",
    "end": "1297720"
  },
  {
    "text": "just realized I've mangled that word um let's you can talk about any cast and you could have the same you your your",
    "start": "1297720",
    "end": "1303159"
  },
  {
    "text": "front end on the same IP so if that goes offline and disappears from the default free internet room table or whatever",
    "start": "1303159",
    "end": "1308559"
  },
  {
    "text": "you'll get to the next one and all of a sudden that for me becomes then all of a sudden interesting and distributed in",
    "start": "1308559",
    "end": "1314360"
  },
  {
    "text": "the in the true tense but going back to your original one where you've got a front end and a database if you stand far enough back away from that like you",
    "start": "1314360",
    "end": "1320440"
  },
  {
    "text": "said gradient well you've got two components having a conversation so why isn't that distributed in its own right",
    "start": "1320440",
    "end": "1325640"
  },
  {
    "text": "because it doesn't belong in you know one place anyway I'm I'm being a fool but yeah that's interesting convos no",
    "start": "1325640",
    "end": "1331640"
  },
  {
    "text": "that makes sense like in in the example of like one database three application servers and one load balancer You could",
    "start": "1331640",
    "end": "1338039"
  },
  {
    "text": "argue there's maybe some distribution going on between the application servers but you still have single points of failure at the database and at the load",
    "start": "1338039",
    "end": "1343360"
  },
  {
    "text": "balancer level um so there are ways to distribute databases um there's ways to",
    "start": "1343360",
    "end": "1348760"
  },
  {
    "text": "distribute other things uh so we have like the beginnings of of something",
    "start": "1348760",
    "end": "1354320"
  },
  {
    "text": "interesting so I want to now shift and so we've talked about like kind of just the very high level like what is a",
    "start": "1354320",
    "end": "1360880"
  },
  {
    "text": "distributed system it's it's this thing where we have many processes on many machines hopefully that are resilient",
    "start": "1360880",
    "end": "1367440"
  },
  {
    "text": "and I want to narrow down our conversation now specifically to pubsub um Byron could you answer again from a",
    "start": "1367440",
    "end": "1375279"
  },
  {
    "text": "high level what is a pub sub architecture specifically as it relates to kind of backend development and like",
    "start": "1375279",
    "end": "1381679"
  },
  {
    "text": "what should we compare and contrast it to to make sense of it sure yeah so Pub Pub sub is is really",
    "start": "1381679",
    "end": "1388880"
  },
  {
    "text": "a pattern um there's plenty of different ways to implement that um in in practice",
    "start": "1388880",
    "end": "1395480"
  },
  {
    "text": "and we'll get into I guess a couple implementations in a bit but yeah so",
    "start": "1395480",
    "end": "1400760"
  },
  {
    "text": "I'll start actually with the contrast or like the thing that people are most familiar with which",
    "start": "1400760",
    "end": "1406000"
  },
  {
    "text": "is sort of Point too request reply type style interactions so this idea that we",
    "start": "1406000",
    "end": "1412919"
  },
  {
    "text": "use you know our browser every day we enter a URL in the browser and it you",
    "start": "1412919",
    "end": "1418640"
  },
  {
    "text": "know loads a web page that's a h HTTP call request reply",
    "start": "1418640",
    "end": "1424080"
  },
  {
    "text": "interaction no matter you know ignoring all the load balancers all of the you know many replicas of the application",
    "start": "1424080",
    "end": "1431279"
  },
  {
    "text": "service that is actually serving the traffic fundamentally that interaction model is a point-to-point uh interaction",
    "start": "1431279",
    "end": "1438120"
  },
  {
    "text": "um so in contrast and that I think that's what people tend to you know",
    "start": "1438120",
    "end": "1444919"
  },
  {
    "text": "understand because we do it all like we deal with that interaction style all the time it would be similar in the real",
    "start": "1444919",
    "end": "1452440"
  },
  {
    "text": "world let's say is that you have you're having a conversation with a single individual and it's like you're you know",
    "start": "1452440",
    "end": "1458039"
  },
  {
    "text": "talking back and forth and there's nobody else in the room however the second that you get up",
    "start": "1458039",
    "end": "1463200"
  },
  {
    "text": "on a Podium and you have a whole audience in front of you now you're speech just like we're talking here this",
    "start": "1463200",
    "end": "1470559"
  },
  {
    "text": "is this is a pub sub interaction right now because I am talking it is you're being you're both receiving you know",
    "start": "1470559",
    "end": "1477520"
  },
  {
    "text": "this communication at the same time barring latencies because of where we're",
    "start": "1477520",
    "end": "1482919"
  },
  {
    "text": "physically located but this is that style of interaction so in a in a backend sense",
    "start": "1482919",
    "end": "1489799"
  },
  {
    "text": "it's it's this ability to say I am you know publishing something a message",
    "start": "1489799",
    "end": "1494840"
  },
  {
    "text": "whatever the communication medium is and there's the ability on the other side for people to actively",
    "start": "1494840",
    "end": "1501559"
  },
  {
    "text": "subscribe um and we can talk about you know there's terminology like topics and channels and subjects and all sorts of",
    "start": "1501559",
    "end": "1507880"
  },
  {
    "text": "things but there's some mechanism to say I am I I I'm showing interest in this",
    "start": "1507880",
    "end": "1513200"
  },
  {
    "text": "message that is being published and I'm listening for it and so anybody who is actively subscribed at that time um is",
    "start": "1513200",
    "end": "1521480"
  },
  {
    "text": "is able to receive that basically a copy of that communication and so you can you know",
    "start": "1521480",
    "end": "1528600"
  },
  {
    "text": "fundamentally you have rather than one: one communication you have M to n communication any number of Publishers",
    "start": "1528600",
    "end": "1534399"
  },
  {
    "text": "any number of subscribers um to be able to do sort of that that communication style so that",
    "start": "1534399",
    "end": "1540600"
  },
  {
    "text": "would be like the maybe hopefully simplest definition of what that kind of pattern and mental model of that pattern",
    "start": "1540600",
    "end": "1546799"
  },
  {
    "text": "uh is I've got okay cool that that makes sense and I've got an analogy and I want to see if it holds up you can tell me",
    "start": "1546799",
    "end": "1553919"
  },
  {
    "text": "where it where it breaks down so let's think of zitter right uh Twitter X um if",
    "start": "1553919",
    "end": "1560200"
  },
  {
    "text": "I DM you that's kind of a point-to-point interaction right like Lane is reaching",
    "start": "1560200",
    "end": "1565760"
  },
  {
    "text": "out to Byron um this is what we're kind of used to with our HTTP request response system like and you could argue",
    "start": "1565760",
    "end": "1572520"
  },
  {
    "text": "that maybe there's 17 clones of Byron but at the end of the day like I'm going to reach one of the Clones of Byron with",
    "start": "1572520",
    "end": "1579039"
  },
  {
    "text": "my DM and then he might respond right um whereas a pub sub architecture might",
    "start": "1579039",
    "end": "1584760"
  },
  {
    "text": "look more like a tweet in the sense that like I could just tweet something and then however many followers I have have",
    "start": "1584760",
    "end": "1591880"
  },
  {
    "text": "all sort of subscribed to that tweet and they'll each get their own like copy of it so like I tweet something and now",
    "start": "1591880",
    "end": "1598159"
  },
  {
    "text": "like 500 copies have been sent to my 500 followers and then like you said also on",
    "start": "1598159",
    "end": "1603399"
  },
  {
    "text": "the publishing side you can have M to n so it's not just a variable number of subscribers but you could have a variable number of Publishers so maybe",
    "start": "1603399",
    "end": "1609320"
  },
  {
    "text": "that's like a Twitter Community or like I'm part of a community and uh I have 10 other friends that are part of the",
    "start": "1609320",
    "end": "1615080"
  },
  {
    "text": "community we can all publish to the same community and just the followers of the community will all will all get that tweet is that",
    "start": "1615080",
    "end": "1622600"
  },
  {
    "text": "kind of yeah yeah for sure yeah it like just like slack you know chat channels and",
    "start": "1622600",
    "end": "1628480"
  },
  {
    "text": "all that kind of stuff it's like that like and and this is where we get into sort of this notion of like topics or",
    "start": "1628480",
    "end": "1634360"
  },
  {
    "text": "channels or subjects like there's a unit of there's basically some representation",
    "start": "1634360",
    "end": "1639440"
  },
  {
    "text": "of the medium the the the the the thing that is being joined it's not a it's not a single message per se but it's really",
    "start": "1639440",
    "end": "1645679"
  },
  {
    "text": "like you know there's a sub that I'm publishing a message on behalf of so you know like a mailing address or a",
    "start": "1645679",
    "end": "1652960"
  },
  {
    "text": "physical home or something or a slack Channel or what have you and you can have multiple members whether and some",
    "start": "1652960",
    "end": "1659000"
  },
  {
    "text": "members might only be sending messages in that channel if it's like you know administrators it's a readon channel for",
    "start": "1659000",
    "end": "1664600"
  },
  {
    "text": "a handful of people so they're actively subscribed and observing these messages flowing in so yeah it's yeah there's I",
    "start": "1664600",
    "end": "1671720"
  },
  {
    "text": "mean Pub sub is everywhere but I think it's like from a specifically with the",
    "start": "1671720",
    "end": "1676799"
  },
  {
    "text": "backend development kind of audience I think people are most familiar with HTTP Point too interactions grpc maybe is",
    "start": "1676799",
    "end": "1684399"
  },
  {
    "text": "another one and um but yeah we we deal with you know M to end communication all",
    "start": "1684399",
    "end": "1689440"
  },
  {
    "text": "day long everywhere um so that yeah that's a great great",
    "start": "1689440",
    "end": "1694679"
  },
  {
    "text": "analogy I'm familiar with rabbit mq Kafka um Google pubsub right these are",
    "start": "1696600",
    "end": "1703200"
  },
  {
    "text": "kind of implementations of the pubsub idea they all have different features and stuff Nats is is one of those right",
    "start": "1703200",
    "end": "1710000"
  },
  {
    "text": "it's it's it's another implementation could we maybe dive just I want to dive into like just very high level um like a",
    "start": "1710000",
    "end": "1718240"
  },
  {
    "text": "very high level example of like what what is the process of using Nats like someone publishing a message to a I",
    "start": "1718240",
    "end": "1725640"
  },
  {
    "text": "don't know if they're called topics in Nats so like you publish a message and then and some people subscribing like",
    "start": "1725640",
    "end": "1731120"
  },
  {
    "text": "what is that actually look like with a real world example like like let's say that I have within my distributed back",
    "start": "1731120",
    "end": "1737799"
  },
  {
    "text": "end um one service that's responsible for sending emails to customers but like",
    "start": "1737799",
    "end": "1743679"
  },
  {
    "text": "lots of other um areas of my system can kind of trigger events that would result",
    "start": "1743679",
    "end": "1749200"
  },
  {
    "text": "in an email right like maybe to use the example of Twitter maybe uh a user",
    "start": "1749200",
    "end": "1755559"
  },
  {
    "text": "followed me and so that event happened and now I want an email to be sent just",
    "start": "1755559",
    "end": "1760840"
  },
  {
    "text": "from a high level how would we use gats to accomplish something like",
    "start": "1760840",
    "end": "1766320"
  },
  {
    "text": "that we're looking at faren I can either say that I I I talked a lot before so go for",
    "start": "1766320",
    "end": "1773000"
  },
  {
    "text": "it so I'm I'm trying to see the social cues I'm terrible of that um so I love",
    "start": "1773000",
    "end": "1778279"
  },
  {
    "text": "the question uh because I'm about to launch into a whole set of other questions and reliability and durability",
    "start": "1778279",
    "end": "1784200"
  },
  {
    "text": "and all these other things and and also definitions really really matter so Pub",
    "start": "1784200",
    "end": "1789640"
  },
  {
    "text": "so architecture in this case Nats elevates itself away from Kafka and",
    "start": "1789640",
    "end": "1795880"
  },
  {
    "text": "rabid mq and zero mq and everything else because n historically has been",
    "start": "1795880",
    "end": "1801159"
  },
  {
    "text": "misrepresented and this is a great way to kind of actually maybe level up here a little bit where it's not just Pub sub",
    "start": "1801159",
    "end": "1806399"
  },
  {
    "text": "you know Pub sub is like the one of the just kind of core functionality um and you have request",
    "start": "1806399",
    "end": "1812519"
  },
  {
    "text": "reply patterns which are those kind of unicast point-to-point you know systems it still pops up it's just you know you kind of limit your audience to one um",
    "start": "1812519",
    "end": "1819679"
  },
  {
    "text": "but then we we go a step further and then we can add streams so you know your messages that go onto a subject and go",
    "start": "1819679",
    "end": "1825120"
  },
  {
    "text": "into an order stream and when we have a key value store which is a projection of a stream it's the same kind of",
    "start": "1825120",
    "end": "1831039"
  },
  {
    "text": "technology and then if you imagine then well what if I have multiple keys and they were in certain orders could I put an object into there then we have the",
    "start": "1831039",
    "end": "1836880"
  },
  {
    "text": "object store as well so for me pubsub architecture it kind of depends what are we talking about a comparison in which",
    "start": "1836880",
    "end": "1843080"
  },
  {
    "text": "case it's like an apple versus a pineapple it's kind of like might be fruity and nice but they're two very",
    "start": "1843080",
    "end": "1848880"
  },
  {
    "text": "different two very different beasts so your um your question I I love it right so you have a signal from a platform",
    "start": "1848880",
    "end": "1855480"
  },
  {
    "text": "whether it's Twitter whether it's LinkedIn or something you want to send an email you want to do some you know convert kit stuff whatever sign them up onto a mailing list so the problem then",
    "start": "1855480",
    "end": "1862039"
  },
  {
    "text": "becomes well how valuable is that operation to you do you want that thing to be durable do you need it to to work",
    "start": "1862039",
    "end": "1867960"
  },
  {
    "text": "or are you happy with it being well you know what's the delivery mode if the message makes it it would be nice but",
    "start": "1867960",
    "end": "1873039"
  },
  {
    "text": "it's it's not critical um if I was building it what I do is I take that message and I put it into a stream so",
    "start": "1873039",
    "end": "1878760"
  },
  {
    "text": "asynchronously grab that and make sure that that signal reach something that I am going to be 100% confident of of it",
    "start": "1878760",
    "end": "1885200"
  },
  {
    "text": "happening so I need I need at least know at least once or yeah guess at least once guarantees on that um and then what",
    "start": "1885200",
    "end": "1892399"
  },
  {
    "text": "I'll have is I'll have a consumer so in in asynchronous time it would then go ah I've got something in my hopper in my",
    "start": "1892399",
    "end": "1898720"
  },
  {
    "text": "stream I need to do something with I can then go and send an email now what I'd do is I'd open up whatever it is whether",
    "start": "1898720",
    "end": "1904360"
  },
  {
    "text": "you've written an email application whether you took some template code or or whatever but that the process would look like you know create email template",
    "start": "1904360",
    "end": "1910679"
  },
  {
    "text": "send it to SMTP whatever did it send get an error code back yes and then I'd acknowledge the message on the stream so",
    "start": "1910679",
    "end": "1917240"
  },
  {
    "text": "got a guaranteed process pipeline to send an email but if we don't do any of that stuff and you go well what if it",
    "start": "1917240",
    "end": "1922799"
  },
  {
    "text": "was just pop sub then a we've got no guarantees of the message being handled and then the if the email system that",
    "start": "1922799",
    "end": "1928799"
  },
  {
    "text": "the component that sends emails offline the message is lost in The Ether but the second you insert the stream and you",
    "start": "1928799",
    "end": "1934279"
  },
  {
    "text": "insert the durability even if the email system goes offline and you've done some work on it you go oops you know bad Dave",
    "start": "1934279",
    "end": "1940960"
  },
  {
    "text": "I wrote some terrible code and I you know relaunched that and push it back out the second it comes back online it carries on where it lefts off and goes",
    "start": "1940960",
    "end": "1947440"
  },
  {
    "text": "hey there's an email I need to go and transact upon and then I've introduces guarantees into the system but then that introduces all sorts of fun problems",
    "start": "1947440",
    "end": "1954720"
  },
  {
    "text": "like you know not many developers are good at kind of going well hang on a minute this parallelism is a little bit mad because you end up having to",
    "start": "1954720",
    "end": "1960480"
  },
  {
    "text": "acknowledge messages and kind of manage your own you know Reliance or reliability within within the system so",
    "start": "1960480",
    "end": "1967200"
  },
  {
    "text": "does that help in terms of real world it it definitely does let me again like I like to just play back answers to make",
    "start": "1967200",
    "end": "1973039"
  },
  {
    "text": "sure that I understand and hopefully to give kind of the audience a second take on on whatever was being said okay so",
    "start": "1973039",
    "end": "1979880"
  },
  {
    "text": "instead of just taking my service that handles like you know people being",
    "start": "1979880",
    "end": "1986039"
  },
  {
    "text": "followed on Twitter and having that service either send an email directly or send an HTTP request over to a server",
    "start": "1986039",
    "end": "1994679"
  },
  {
    "text": "that will send an email to alert somebody that they have a new follower",
    "start": "1994679",
    "end": "1999919"
  },
  {
    "text": "I'm going to publish a message to gats and for now we can just like I'm at least thinking about Nats as just like",
    "start": "1999919",
    "end": "2006000"
  },
  {
    "text": "some other system and if I'm hearing right that message can depending on your configuration kind",
    "start": "2006000",
    "end": "2011240"
  },
  {
    "text": "of go sit in a stream or in like it's stateful right it's going to like sit in",
    "start": "2011240",
    "end": "2017360"
  },
  {
    "text": "that system and even if my email service happens to be offline at the",
    "start": "2017360",
    "end": "2023799"
  },
  {
    "text": "moment that message will sit there until the email service is back online",
    "start": "2023799",
    "end": "2029480"
  },
  {
    "text": "essentially and ready to process that message so like let's just say maybe it was rebooting right maybe we' pushed some changes to that service and we had",
    "start": "2029480",
    "end": "2035639"
  },
  {
    "text": "to restart it so now it's back online it can actually go reach out to Nats or maybe it's a a push versus a pull I",
    "start": "2035639",
    "end": "2041559"
  },
  {
    "text": "don't know exactly how it works but like let's just say it gets that message from the n's system so that it can process it",
    "start": "2041559",
    "end": "2048118"
  },
  {
    "text": "kind of asynchronously and and you're saying when it's done it's going to tell Nats",
    "start": "2048119",
    "end": "2053560"
  },
  {
    "text": "hey I process this message so it doesn't like reprocess it um and that's kind of",
    "start": "2053560",
    "end": "2059240"
  },
  {
    "text": "as opposed to if we didn't have that system in place if if my original like",
    "start": "2059240",
    "end": "2064520"
  },
  {
    "text": "following service had just reached out via HTTP to my email service it would have just like gotten a 500 error right",
    "start": "2064520",
    "end": "2071000"
  },
  {
    "text": "like hey service is off yeah I can go another level deally so if we paint this",
    "start": "2071000",
    "end": "2076040"
  },
  {
    "text": "from let's paint by numbers so your your follower service does a HTTP C because that's the sticky glue of the Internet",
    "start": "2076040",
    "end": "2081560"
  },
  {
    "text": "it's a PVA glue of everything we do so HP call comes in hey Lane new follower",
    "start": "2081560",
    "end": "2086839"
  },
  {
    "text": "Dave's followed you great now what could happen here let's say with the Net Solution that we we've just talked about",
    "start": "2086839",
    "end": "2093040"
  },
  {
    "text": "um your HTTP call gets an immediate response I have I've got your message",
    "start": "2093040",
    "end": "2098079"
  },
  {
    "text": "thank you very much and you're off the hook you know go do your thing but actually what will happen we'll we'll getet that message we'll put it into a",
    "start": "2098079",
    "end": "2104320"
  },
  {
    "text": "stream and as soon as it's into the stream or published an apps then we respond to you which has decoupled your",
    "start": "2104320",
    "end": "2110280"
  },
  {
    "text": "Upstream follower service from the email chain so your uping services right i' I've announced the signal Dave's",
    "start": "2110280",
    "end": "2116560"
  },
  {
    "text": "followed linke and then in the background in your HTTP sorry in your email servers Leisure it's notified hey",
    "start": "2116560",
    "end": "2122880"
  },
  {
    "text": "I've got a new message in the queue and that can be push or pull by the way um then the service will go off send an",
    "start": "2122880",
    "end": "2128160"
  },
  {
    "text": "email um and then it will acknowledge I mean you can configure different things but in its most simple terms it will",
    "start": "2128160",
    "end": "2134440"
  },
  {
    "text": "acknowledge to n in that stream that this message has been sent and then the kind of like an index moves forward uh",
    "start": "2134440",
    "end": "2140680"
  },
  {
    "text": "ready for the next one um so then you end up with this kind of reliable reliable system and then in terms of",
    "start": "2140680",
    "end": "2145760"
  },
  {
    "text": "well what if um how does knats handle reliability then we can also replicate that stream into different places as",
    "start": "2145760",
    "end": "2151880"
  },
  {
    "text": "well and you could also then ready for this distribute the number of workers your email workers in different data and",
    "start": "2151880",
    "end": "2157000"
  },
  {
    "text": "there different clouds one in a WS one in aure one in your mom's basement you know whatever wherever you like and",
    "start": "2157000",
    "end": "2162839"
  },
  {
    "text": "that's going to handle that for you Byron taking deep breaths yeah yeah",
    "start": "2162839",
    "end": "2169880"
  },
  {
    "text": "go ahead you got something to say I I always have something to say um",
    "start": "2169880",
    "end": "2175400"
  },
  {
    "text": "so yeah I think I I think that's a good kind of Baseline example just to con connect you know back in developers it's",
    "start": "2175400",
    "end": "2181319"
  },
  {
    "text": "a very common thing that needs to get get done so it's a I mean there's always there's always",
    "start": "2181319",
    "end": "2186800"
  },
  {
    "text": "questions of saying well why can't I just like throw this thing in a database you know and there there's different ways of implementing that particular",
    "start": "2186800",
    "end": "2193400"
  },
  {
    "text": "solution so we can kind of get into the nuances in a bit but I wanted to step back just to say kind of reiterate a",
    "start": "2193400",
    "end": "2200440"
  },
  {
    "text": "little bit of what David said in terms of the the the the set of Nat's capabilities and we we get into this you",
    "start": "2200440",
    "end": "2208200"
  },
  {
    "text": "know every technology can get kind of get bundled in a bucket and and say oh you're just another one of these um I",
    "start": "2208200",
    "end": "2216359"
  },
  {
    "text": "think where Nats is interesting um from a purely from a developer Centric view",
    "start": "2216359",
    "end": "2221839"
  },
  {
    "text": "right now because we can get into you know topologies and all these other fancy things later but from a developer",
    "start": "2221839",
    "end": "2228000"
  },
  {
    "text": "standpoint again and and tying it back into distributed systems there's this",
    "start": "2228000",
    "end": "2233560"
  },
  {
    "text": "spectrum of communication capabilities uh that Nats provides so we have you",
    "start": "2233560",
    "end": "2240000"
  },
  {
    "text": "know I typically refer to it as like stateless Pub sub messaging so this idea",
    "start": "2240000",
    "end": "2245760"
  },
  {
    "text": "that and this was what it was originally designed for and optimized for which is this idea that the comp the the",
    "start": "2245760",
    "end": "2253000"
  },
  {
    "text": "components that are that are up let's say your distributed system components they're connected into NS they could be",
    "start": "2253000",
    "end": "2258680"
  },
  {
    "text": "Publishers they could be subscribers and out of the box you can a publisher can literally say send this",
    "start": "2258680",
    "end": "2266319"
  },
  {
    "text": "message which is just a bite slice at the end of the day you're it's like it doesn't it's not opinion opinionated",
    "start": "2266319",
    "end": "2271640"
  },
  {
    "text": "about encoding or or or any of that type of stuff it says I'm publishing a mage message any active online subscribers",
    "start": "2271640",
    "end": "2279520"
  },
  {
    "text": "are going to connected in are going to all receive that message by default and",
    "start": "2279520",
    "end": "2285920"
  },
  {
    "text": "it's optimized for not actually storing anything so out of the gate so no",
    "start": "2285920",
    "end": "2291079"
  },
  {
    "text": "streams are involved in that no persistence no no storage of any kind",
    "start": "2291079",
    "end": "2296440"
  },
  {
    "text": "and so like in our example from earlier if the email service was offline it kind of would just miss that message in it",
    "start": "2296440",
    "end": "2302520"
  },
  {
    "text": "would fire and forget yep so so you can think of it the way that works with and and this is a common thing among most",
    "start": "2302520",
    "end": "2309280"
  },
  {
    "text": "Pub sub architectures which is this idea of decoupling space so with Nats we we",
    "start": "2309280",
    "end": "2315359"
  },
  {
    "text": "refer to this as like subject-based addressing so once you establish that initial TCP connection between the",
    "start": "2315359",
    "end": "2322119"
  },
  {
    "text": "clients to the server now Nats as a sort of it's It's its own like Network",
    "start": "2322119",
    "end": "2328640"
  },
  {
    "text": "effectively and all those clients have to care about is being able to publish And subscribe to subjects as we refer to",
    "start": "2328640",
    "end": "2335960"
  },
  {
    "text": "them that's a analogous to topics and channels a little bit it's a little bit more fanciful um we we can again get",
    "start": "2335960",
    "end": "2342119"
  },
  {
    "text": "into that more but the basic idea is that you're you're publishing and subscribing on these subjects and they",
    "start": "2342119",
    "end": "2348680"
  },
  {
    "text": "don't care where they physically are located they could be all in in process to your point be all you know one",
    "start": "2348680",
    "end": "2355280"
  },
  {
    "text": "monolithic process application but they're still decoupled from from Nat's perspective from the location",
    "start": "2355280",
    "end": "2360920"
  },
  {
    "text": "perspective or they could be completely distributed across you know any number of data centers out to vehicles whatever",
    "start": "2360920",
    "end": "2367440"
  },
  {
    "text": "depending on the use case but as long as they're connected into the one n system whether it's a single server or like",
    "start": "2367440",
    "end": "2373280"
  },
  {
    "text": "some large topology all of the messages just flow transparently so that's like the",
    "start": "2373280",
    "end": "2378359"
  },
  {
    "text": "foundation of it and um but but as as",
    "start": "2378359",
    "end": "2383800"
  },
  {
    "text": "David said this is like an app most want delivery guarantee so it's fire and forget if you're if the subscribers",
    "start": "2383800",
    "end": "2389880"
  },
  {
    "text": "offline and you connect up after the message has been published you're not going to get it Nats doesn't persist by",
    "start": "2389880",
    "end": "2395400"
  },
  {
    "text": "default in that case so for use cases that expect all of these components or have enough you know",
    "start": "2395400",
    "end": "2402359"
  },
  {
    "text": "High availability or redundancy of components that will one of which will receive a message uh we have this notion",
    "start": "2402359",
    "end": "2408599"
  },
  {
    "text": "of like a q Group which is like you know a basically free you know distribution High availability of a set of members of",
    "start": "2408599",
    "end": "2415760"
  },
  {
    "text": "a group that one of them would receive it depending on which one is online um",
    "start": "2415760",
    "end": "2420839"
  },
  {
    "text": "without any additional dependencies you can basically build up your your your components like that join these Q groups",
    "start": "2420839",
    "end": "2426359"
  },
  {
    "text": "grp and then one of them will probably be online and they'll receive the message they can do the work whatever so",
    "start": "2426359",
    "end": "2432680"
  },
  {
    "text": "it's super high throughput super low latency type of messaging um from that",
    "start": "2432680",
    "end": "2437800"
  },
  {
    "text": "standpoint and it's completely location transparent again no they don't have to care or know where clients and",
    "start": "2437800",
    "end": "2443599"
  },
  {
    "text": "Publishers are physically located so so that's like yeah go ahead",
    "start": "2443599",
    "end": "2449599"
  },
  {
    "text": "no I just want to make like we there was a lot there and I want to make sure that some of it makes sense so would we say like loc sorry did you say location",
    "start": "2449599",
    "end": "2456680"
  },
  {
    "text": "transparent was that the terminology or location independent um yeah I've worked in",
    "start": "2456680",
    "end": "2463760"
  },
  {
    "text": "microservices architectures were like say we had like seven different like quote unquote services and if you",
    "start": "2463760",
    "end": "2470000"
  },
  {
    "text": "haven't seen the croam YouTube video on microservices like you might want to pause this video and go watch it because",
    "start": "2470000",
    "end": "2475240"
  },
  {
    "text": "it's hilarious and and and then come back and finish this episode but like seven different microservices um and they're all kind of",
    "start": "2475240",
    "end": "2482319"
  },
  {
    "text": "responsible for different things and I've definitely worked in systems where we don't use a pub sub AR architecture",
    "start": "2482319",
    "end": "2487720"
  },
  {
    "text": "and each service like has to have coded into like its environment variables the kind of URLs right the end",
    "start": "2487720",
    "end": "2495319"
  },
  {
    "text": "points of the other services so that it can explicitly send uh you know data across the wire to",
    "start": "2495319",
    "end": "2502000"
  },
  {
    "text": "these other systems if I'm hearing properly one of the benefits like the location",
    "start": "2502000",
    "end": "2507760"
  },
  {
    "text": "independent thing is like I really just need to know where Nats is so that I can communicate with Nats and that at least",
    "start": "2507760",
    "end": "2514839"
  },
  {
    "text": "from a configuration standpoint Point can simplify a lot of things yeah 100% and again we can get",
    "start": "2514839",
    "end": "2523920"
  },
  {
    "text": "into to this but um in general like people think hear about service",
    "start": "2523920",
    "end": "2529079"
  },
  {
    "text": "Discovery you hear about you know yeah needing to know phys like whether you're using service discovery which is another",
    "start": "2529079",
    "end": "2535160"
  },
  {
    "text": "another component you would have to deploy in your infrastructure you have DNS you know all all of this stuff to be",
    "start": "2535160",
    "end": "2541800"
  },
  {
    "text": "able to resolve whether it's internal DNS or external whatever however you're managing that the key thing is is that",
    "start": "2541800",
    "end": "2548880"
  },
  {
    "text": "like you literally need like one DNS entry for where Nats lives yeah yeah and",
    "start": "2548880",
    "end": "2554559"
  },
  {
    "text": "you can you can you can have a whole bunch of you know a records like if it's replicated you have different entry points or whatever but once it's",
    "start": "2554559",
    "end": "2561079"
  },
  {
    "text": "connected none of the none of the components the clients that are connected have to know or care or do any",
    "start": "2561079",
    "end": "2566680"
  },
  {
    "text": "kind of resolution of Ip DNS any of that um so that's one of those things where",
    "start": "2566680",
    "end": "2572559"
  },
  {
    "text": "it's like significantly simplifies in a in a an actual production kind of",
    "start": "2572559",
    "end": "2579079"
  },
  {
    "text": "environment where you have a lot of moving Parts you might have multiple teams even if you're a single person you",
    "start": "2579079",
    "end": "2584640"
  },
  {
    "text": "still it's still one less thing that you have to you know deal with um but it reduces the operational complexity it",
    "start": "2584640",
    "end": "2592280"
  },
  {
    "text": "reduces you know the the number of components in your in in your infrastructure you know the the funny",
    "start": "2592280",
    "end": "2597920"
  },
  {
    "text": "thing which is always true is that DNS is always the problem that goes away you know as long as you can connect to Nats",
    "start": "2597920",
    "end": "2603880"
  },
  {
    "text": "you're you're Off to the Races so yeah so that's like that's more I would say",
    "start": "2603880",
    "end": "2610160"
  },
  {
    "text": "it's it's less of a developer Centric thing because we try to have like when we talk about Nats we try to like break",
    "start": "2610160",
    "end": "2616119"
  },
  {
    "text": "it up into sort of different audience types because you have like the the developer which I care about building my",
    "start": "2616119",
    "end": "2622000"
  },
  {
    "text": "application these are The Primitives that Nats gives me I I can choose you know stateless messaging I can choose",
    "start": "2622000",
    "end": "2627720"
  },
  {
    "text": "streams and consumers which give me durability which means I'm not just DEC decoupling space which is the location",
    "start": "2627720",
    "end": "2633760"
  },
  {
    "text": "transparent aspect I'm also decoupling time I don't need to be online at the time a message is published it'll it'll",
    "start": "2633760",
    "end": "2641440"
  },
  {
    "text": "be stored and I can deal with that when I'm when I'm ready kind of thing or when I'm back online so you're decoupling",
    "start": "2641440",
    "end": "2647119"
  },
  {
    "text": "space decoupling time and then we have these other two client abstractions on top um which are very common Primitives",
    "start": "2647119",
    "end": "2655119"
  },
  {
    "text": "that people need for basic state management management which is like a KV abstraction and a object store",
    "start": "2655119",
    "end": "2660880"
  },
  {
    "text": "abstraction that actually is built on top of the stream uh layer itself so",
    "start": "2660880",
    "end": "2667119"
  },
  {
    "text": "there's a whole bunch of you know configuration options and things like that for the stream layer it is very",
    "start": "2667119",
    "end": "2672760"
  },
  {
    "text": "different from other um stream implementations or like write ahead log implementations or log structures like",
    "start": "2672760",
    "end": "2678880"
  },
  {
    "text": "aova um it's more like a message store like a proper message store you can actually delete individual messages and",
    "start": "2678880",
    "end": "2684640"
  },
  {
    "text": "things like that and there's all sorts of fun fun things in there interesting but yeah yeah but you you do have you",
    "start": "2684640",
    "end": "2691119"
  },
  {
    "text": "know the whole point of rambling on about this is that like the developer has like the suite of primitive these",
    "start": "2691119",
    "end": "2696720"
  },
  {
    "text": "capabilities that are very common when you're building any kind of application and you can just use like one API",
    "start": "2696720",
    "end": "2703160"
  },
  {
    "text": "effectively one client SDK or multilanguage you know go python a whole bunch we have like 11 official ones I",
    "start": "2703160",
    "end": "2709680"
  },
  {
    "text": "think and then a whole mess of other community contributed ones so you can still pick and choose which you know",
    "start": "2709680",
    "end": "2715319"
  },
  {
    "text": "language you you want but it's all you have the same client abstraction using the same uh server at the end of the day",
    "start": "2715319",
    "end": "2723400"
  },
  {
    "text": "and for my audience most importantly you have a go SDK and Nat is written in go",
    "start": "2723400",
    "end": "2728720"
  },
  {
    "text": "right yep it yeah yeah no I always yeah",
    "start": "2728720",
    "end": "2733800"
  },
  {
    "text": "I always like to promote technologies that uh use my favorite use my favorite programming language that's it's pretty",
    "start": "2733800",
    "end": "2740319"
  },
  {
    "text": "cool I think I think rabbit is earling oh yeah no I was say I think rabbit is earling and um I was talking with you",
    "start": "2740319",
    "end": "2747400"
  },
  {
    "text": "earlier Java is Kafka I have no idea what Google's Pub sub is um but it's",
    "start": "2747400",
    "end": "2752440"
  },
  {
    "text": "cool to see that we have we have a pub sub system uh written in",
    "start": "2752440",
    "end": "2758040"
  },
  {
    "text": "go I want to just really quickly I feel like we've talked about some of the like",
    "start": "2758040",
    "end": "2763280"
  },
  {
    "text": "tangible like features of Pub sub over HTTP right things like the resiliency",
    "start": "2763280",
    "end": "2770520"
  },
  {
    "text": "location Independence I want to dive in to a very",
    "start": "2770520",
    "end": "2776520"
  },
  {
    "text": "tangible example of like when in a real application would you care to switch",
    "start": "2776520",
    "end": "2783559"
  },
  {
    "text": "from like microservices that are communicating either over HTTP or grpc",
    "start": "2783559",
    "end": "2789079"
  },
  {
    "text": "right single point communication to something like",
    "start": "2789079",
    "end": "2794720"
  },
  {
    "text": "gats yeah I've got a very simple answer to that and the second that you take a look at a monolith and you decide to",
    "start": "2796240",
    "end": "2802160"
  },
  {
    "text": "split some other functionality out then it's probably a good time to do it I think we me and baron have spoke at",
    "start": "2802160",
    "end": "2808440"
  },
  {
    "text": "length and even on other podcast about this like um imagine that you have a an",
    "start": "2808440",
    "end": "2814599"
  },
  {
    "text": "application that you've taken from monolith you have a landing functional endpoint whether that you access over HTTP or or you know whatever gopc who",
    "start": "2814599",
    "end": "2821880"
  },
  {
    "text": "cares but there is a landing function and it might be hey you know give me my settings profile for assass or you know",
    "start": "2821880",
    "end": "2828920"
  },
  {
    "text": "what whatever it is um and that data might get sourced from multiple locations but the thing is that there's a number of procedural steps one go do",
    "start": "2828920",
    "end": "2836319"
  },
  {
    "text": "database dip over there two go get I don't know billing data is is can the user even see this stuff have they got a",
    "start": "2836319",
    "end": "2842280"
  },
  {
    "text": "you know a valid subscription whatever it is um um the second that you start",
    "start": "2842280",
    "end": "2848720"
  },
  {
    "text": "taking apart that application then Nats has a home in my opinion because you end",
    "start": "2848720",
    "end": "2854240"
  },
  {
    "text": "up having kind of like I always call them front door functions but something that's got the business logic you know it's like right I need to go and get",
    "start": "2854240",
    "end": "2859800"
  },
  {
    "text": "these things and assemble this stuff and you can do it one or two ways it's a little bit like in networking where you got Source routing you can kind of go my",
    "start": "2859800",
    "end": "2866280"
  },
  {
    "text": "schema for the data that I want is X so it's like a whatever it is you know Json schemer XML schema and then you can say",
    "start": "2866280",
    "end": "2872280"
  },
  {
    "text": "and I'm going to literally pass this thing I'm going to throw it at the first function and that's going to you know fulfill part of it and that one's going",
    "start": "2872280",
    "end": "2878400"
  },
  {
    "text": "to throw it at the second one and for and you end up with this kind of like fulfillment ring which is kind of crazy or you got the scatter and gather",
    "start": "2878400",
    "end": "2884359"
  },
  {
    "text": "approach so your Landing Zone your you know your front door function grabs that and then fires off all the separate kind of requests in the background waits for",
    "start": "2884359",
    "end": "2890559"
  },
  {
    "text": "everything to come back in reassembles the answer and then pushes it back you know back out um I think the second you",
    "start": "2890559",
    "end": "2896280"
  },
  {
    "text": "start doing anything like that naps is is kind of a really sorry N I use Nats",
    "start": "2896280",
    "end": "2901599"
  },
  {
    "text": "and obviously Pub sub architectures interchangeably um but even if I was trying to find um even if I was you",
    "start": "2901599",
    "end": "2910000"
  },
  {
    "text": "mentioned gradient ear and I love that that if I was trying to go from monolith to something a little bit more scalable",
    "start": "2910000",
    "end": "2915520"
  },
  {
    "text": "what I'd start doing is i' break apart the direct Paths of communication in a single application so he T me like go I",
    "start": "2915520",
    "end": "2922359"
  },
  {
    "text": "might create a bunch of go routines that all have their own you know kind of nat subjects where you might subscribe it",
    "start": "2922359",
    "end": "2928160"
  },
  {
    "text": "might be listening for an email thing or listening for you know authentication or whatever it is so there you have a",
    "start": "2928160",
    "end": "2933200"
  },
  {
    "text": "single distributable program that doesn't communicate internally but it's actually communicates across a network",
    "start": "2933200",
    "end": "2939079"
  },
  {
    "text": "see what you might have is one instance that communicates with itself over NS now that sounds mad but you can turn",
    "start": "2939079",
    "end": "2945000"
  },
  {
    "text": "bits of your program on and off with flags and then you could you know copy that and place it in different locations and all of a sudden you've got this",
    "start": "2945000",
    "end": "2950880"
  },
  {
    "text": "means to scale out so I think to to Really wind it up I mean I kind of start",
    "start": "2950880",
    "end": "2956480"
  },
  {
    "text": "these days by thinking how do I design my program to work effectively with NS which means that I can put it wherever I",
    "start": "2956480",
    "end": "2962280"
  },
  {
    "text": "want to put it in the future and that combat fire because you know you're try and kill something you've WR like that and it's actually really hard you",
    "start": "2962280",
    "end": "2967880"
  },
  {
    "text": "realize I've got it running on a Raspberry Pi at home on an ec2 instance on my MacBook and you think where are all these instances running obviously",
    "start": "2967880",
    "end": "2974640"
  },
  {
    "text": "helps you with that but yeah you you made a bold claim and I want to make sure that I understood it properly",
    "start": "2974640",
    "end": "2980480"
  },
  {
    "text": "because it's big if true uh so essentially what I heard was if you have",
    "start": "2980480",
    "end": "2986760"
  },
  {
    "text": "a microsystem a microservices architecture in other words your your app isn't just one monolith running on",
    "start": "2986760",
    "end": "2992960"
  },
  {
    "text": "one server or I mean you could have a monolith that is distributed across multiple servers but the idea is it's",
    "start": "2992960",
    "end": "2998160"
  },
  {
    "text": "the same code right running on multiple servers that we would consider that a monolith versus um you know different",
    "start": "2998160",
    "end": "3004119"
  },
  {
    "text": "services that do different things if you have those different services that do different",
    "start": "3004119",
    "end": "3009760"
  },
  {
    "text": "things are you saying that there's basically no place for this like synchronous point-to-point communication",
    "start": "3009760",
    "end": "3016599"
  },
  {
    "text": "like essentially if you're Crossing that threshold it is time for pubsub or it is",
    "start": "3016599",
    "end": "3022359"
  },
  {
    "text": "time for Nats so I'll I'll jump in so I so I I think",
    "start": "3022359",
    "end": "3030119"
  },
  {
    "text": "it's I think it's it's not an either or so again if we separate out the",
    "start": "3030119",
    "end": "3035240"
  },
  {
    "text": "interaction style of a request reply versus saying I now I have to do",
    "start": "3035240",
    "end": "3041839"
  },
  {
    "text": "everything asynchronous those are two different those are two different things the problem with a straightup HTTP and again",
    "start": "3041839",
    "end": "3050599"
  },
  {
    "text": "the again P patterns interaction Style versus protocols let's you know decouple those two things now says its own",
    "start": "3050599",
    "end": "3055839"
  },
  {
    "text": "protocol it has a server it's a broker effectively and and and so on whereas",
    "start": "3055839",
    "end": "3061160"
  },
  {
    "text": "with an HTP server you you are literally hosting the HTP server and you are",
    "start": "3061160",
    "end": "3066920"
  },
  {
    "text": "mounting endpoints into your server whether you're using a PA whether you're using Lambda whatever you're like an API",
    "start": "3066920",
    "end": "3073200"
  },
  {
    "text": "Gateway you're you're composing these end points and you're effectively needing to take in that traffic and then",
    "start": "3073200",
    "end": "3080559"
  },
  {
    "text": "go do something with that so in a traditional thing like a rails like a like ajango whatever",
    "start": "3080559",
    "end": "3086200"
  },
  {
    "text": "um or even a standard go you know web server you're you're mounting these endpoints and you're expecting to",
    "start": "3086200",
    "end": "3095240"
  },
  {
    "text": "respond in some way you could still model an asynchronous behavior in the sense that a HTTP request comes in I you",
    "start": "3095240",
    "end": "3102880"
  },
  {
    "text": "know store it in a database somewhere I put it store it safely and I respond but maybe I'm not going to get to that work",
    "start": "3102880",
    "end": "3108960"
  },
  {
    "text": "as as David said we can model that very easily with Nats as well with a durable stream but",
    "start": "3108960",
    "end": "3116640"
  },
  {
    "text": "you can still choose to have point-to-point interaction styles with Nats as well so because we said it's m",
    "start": "3116640",
    "end": "3122720"
  },
  {
    "text": "to n you could have M and N equal one and then you could still have a synchronous one toone",
    "start": "3122720",
    "end": "3128599"
  },
  {
    "text": "interaction got it you have waiting for an acknowledgement or something like exactly",
    "start": "3128599",
    "end": "3134960"
  },
  {
    "text": "rather okay yeah yeah so we actually have a built-in yeah we have a built-in",
    "start": "3134960",
    "end": "3140720"
  },
  {
    "text": "um part of all the client sdks there's literally a as we typically off the",
    "start": "3140720",
    "end": "3146319"
  },
  {
    "text": "natat connection the client connection there's literally a helper method that says request and it does exactly that",
    "start": "3146319",
    "end": "3152920"
  },
  {
    "text": "because people and and you you pass the subject you pass a payload you pass a timeout and it'll sit there your client",
    "start": "3152920",
    "end": "3159839"
  },
  {
    "text": "will lock up and sit there and wait and for a response to come back because that's a very common it's like you",
    "start": "3159839",
    "end": "3165200"
  },
  {
    "text": "you're asking a question you want a you want a response on demand you don't want to you know do all this choreography of",
    "start": "3165200",
    "end": "3171359"
  },
  {
    "text": "events and you know it'll get to me eventually but the the challenge with it",
    "start": "3171359",
    "end": "3176599"
  },
  {
    "text": "starting with HTTP and again as David said HTTP is the glue of the web so we're not dissing on that but if you're",
    "start": "3176599",
    "end": "3182760"
  },
  {
    "text": "choosing a backend protocol a backend technology to connect all your things um",
    "start": "3182760",
    "end": "3189200"
  },
  {
    "text": "you you would you immediately limit Yourself by choosing HTTP or grpc versus",
    "start": "3189200",
    "end": "3194640"
  },
  {
    "text": "something that implements an actual endtoend communication style and you",
    "start": "3194640",
    "end": "3200319"
  },
  {
    "text": "don't have to you don't have to go you know right into the microservices realm that's not what Pub Pub sub does not",
    "start": "3200319",
    "end": "3206319"
  },
  {
    "text": "imply you know microservices you can for example still create like from a physical deployment",
    "start": "3206319",
    "end": "3213040"
  },
  {
    "text": "unit style you can still for example and this is a maybe mostly go Community um",
    "start": "3213040",
    "end": "3220400"
  },
  {
    "text": "you can embed the N server if you want you could go real extreme you can embed the server in process you can embed your",
    "start": "3220400",
    "end": "3226000"
  },
  {
    "text": "client applications you can have you know n number of subscribers that still decouple all the subjects and you know",
    "start": "3226000",
    "end": "3232440"
  },
  {
    "text": "the work that they have to do every uh client subscription actually does under the hood run in its own go routine by",
    "start": "3232440",
    "end": "3238760"
  },
  {
    "text": "default so you have all of the concurrency already baked in and you can deploy that but over time if you say I",
    "start": "3238760",
    "end": "3246000"
  },
  {
    "text": "have a you know this subscription is actually taking up a lot of memory this this com little thing I need to break",
    "start": "3246000",
    "end": "3251520"
  },
  {
    "text": "that out you got it so still you still have a Nat server you still have the endpoint",
    "start": "3251520",
    "end": "3257880"
  },
  {
    "text": "to connect to you you break out your client code into a new Deployable unit",
    "start": "3257880",
    "end": "3264280"
  },
  {
    "text": "you you deploy that up it's still connecting it's still subscribed to the same subjects you're not changing",
    "start": "3264280",
    "end": "3269760"
  },
  {
    "text": "anything it doesn't care about location it just you just point it to the N server that's are in this case embedded",
    "start": "3269760",
    "end": "3275240"
  },
  {
    "text": "eventually you can say I actually need a haats cluster great break out the Ser embedded server deploy that",
    "start": "3275240",
    "end": "3281240"
  },
  {
    "text": "independently still just a Nats client connection it's so you can you can choose to break it up um o over time but",
    "start": "3281240",
    "end": "3288760"
  },
  {
    "text": "starting with that model you don't have to change like versus you know the the extreme contrast which is like I have a",
    "start": "3288760",
    "end": "3295559"
  },
  {
    "text": "rails app a Django app or something and it's like I have method invocations between all my components you could have",
    "start": "3295559",
    "end": "3301359"
  },
  {
    "text": "a really great modular modularized codebase but transitioning from a",
    "start": "3301359",
    "end": "3306760"
  },
  {
    "text": "function call to a network call is a completely different thing and you're gonna have to rewrite your application",
    "start": "3306760",
    "end": "3313000"
  },
  {
    "text": "so here it's like you can you can have this sort of you know asynchron already",
    "start": "3313000",
    "end": "3318359"
  },
  {
    "text": "baked in um or concurrency model already baked in using gats and and having all that decoupling but you still have a",
    "start": "3318359",
    "end": "3324319"
  },
  {
    "text": "single Deployable unit and then you can gradually break it out over time if you need to yeah I might have confused things",
    "start": "3324319",
    "end": "3331559"
  },
  {
    "text": "earli on Sorry by the way let me just explain this and I promise I'll I'll I'll yield um things when we talk about",
    "start": "3331559",
    "end": "3337520"
  },
  {
    "text": "Pub sub we I think naturally think about all the menu items that NS offers and",
    "start": "3337520",
    "end": "3342559"
  },
  {
    "text": "not just pops up and what I do is I kind of jump the gun sometimes or shoot myself in the face with a foot gun that",
    "start": "3342559",
    "end": "3347680"
  },
  {
    "text": "that's the other trick I'm I'm pretty good at doing um so yeah apologies for the uh the language on the on that",
    "start": "3347680",
    "end": "3353319"
  },
  {
    "text": "because Nat itself is like this interesting Network so you can do you know fan in fan out you can have point-to-point communications over NS",
    "start": "3353319",
    "end": "3360440"
  },
  {
    "text": "and that's sometimes where I fail to explain yeah no I think you were talking about exactly what I was trying to get",
    "start": "3360440",
    "end": "3365640"
  },
  {
    "text": "at with which is like um and it's it's good uh Byron that you jumped in and mentioned that Nats doesn't just do Pub",
    "start": "3365640",
    "end": "3371480"
  },
  {
    "text": "sub but it is what I like what I'm trying to get out with my question which is like we've got Pub sub things which",
    "start": "3371480",
    "end": "3377160"
  },
  {
    "text": "is like MTN um asynchronous right like you architect your application a certain way",
    "start": "3377160",
    "end": "3383119"
  },
  {
    "text": "and then we have synchronous which is sounds like you could just do the synchronous thing throughs anyways which",
    "start": "3383119",
    "end": "3388640"
  },
  {
    "text": "is great it's a feature ofs but what I'm trying to get at for my audience is like",
    "start": "3388640",
    "end": "3394280"
  },
  {
    "text": "when do I need to do one or the other and and obviously like I'm glad that you mentioned that like we can just use gats",
    "start": "3394280",
    "end": "3399920"
  },
  {
    "text": "and you can choose right either I need a synchronous um either I need to use Nat",
    "start": "3399920",
    "end": "3405039"
  },
  {
    "text": "Nats synchronously for like immediate request response or I need to use its asynchronous features but like when when",
    "start": "3405039",
    "end": "3414119"
  },
  {
    "text": "would I use one or the other yeah know yeah it's a great great",
    "start": "3414119",
    "end": "3419720"
  },
  {
    "text": "question I it does it does boil down I mean it's the it's it's the it depends",
    "start": "3419720",
    "end": "3424799"
  },
  {
    "text": "type of thing but you can think of you know which is an unfortunate answer but",
    "start": "3424799",
    "end": "3430920"
  },
  {
    "text": "it it boils down to and and David mentioned this in his example before which is like does the work need to",
    "start": "3430920",
    "end": "3436520"
  },
  {
    "text": "there's two things does the work need to get done right now so if it doesn't then",
    "start": "3436520",
    "end": "3442280"
  },
  {
    "text": "you need to put it somewhere and then you can reply back um so that's more of like you know",
    "start": "3442280",
    "end": "3449680"
  },
  {
    "text": "request reply style but on the back end you're choosing to be a synchronous and actually performing the work you're",
    "start": "3449680",
    "end": "3454920"
  },
  {
    "text": "still acknowledging maybe back to the client so it's still technically you know a single interaction that could be",
    "start": "3454920",
    "end": "3460680"
  },
  {
    "text": "one thing right so you know click follower it's still coming through it's it's about you and you know David's the",
    "start": "3460680",
    "end": "3467119"
  },
  {
    "text": "follower and I need to like you know build up some cash now because or or add add your tweets to his feed or something",
    "start": "3467119",
    "end": "3474520"
  },
  {
    "text": "or whatever they call them these days X's um yeah",
    "start": "3474520",
    "end": "3479760"
  },
  {
    "text": "so yeah Z Zs so so there's like that that style so",
    "start": "3479760",
    "end": "3485640"
  },
  {
    "text": "the interaction style is still request reply but you're choosing on the back end to be a synchronous and how you",
    "start": "3485640",
    "end": "3491880"
  },
  {
    "text": "handle that work so there there's like that bit but then there's the other sort",
    "start": "3491880",
    "end": "3497280"
  },
  {
    "text": "of component which is like as a client and this is something again it's like",
    "start": "3497280",
    "end": "3502680"
  },
  {
    "text": "fuzzy because you can't you can and you can't do this with with HTTP HTTP always expects a reply right you can't yeah you",
    "start": "3502680",
    "end": "3510920"
  },
  {
    "text": "can't just say I am sending a request and I don't I'm not I don't care like the client could cut the connection off you know break my you know whatever but",
    "start": "3510920",
    "end": "3518359"
  },
  {
    "text": "it's not designed that for that it's designed to be inherently request reply whereas with Nats you publish the public",
    "start": "3518359",
    "end": "3524839"
  },
  {
    "text": "the client literally fires and forgets it hits the server I don't care anymore",
    "start": "3524839",
    "end": "3529880"
  },
  {
    "text": "it's it's out in The Ether and whoever is interested in that is going to receive it and this is most most",
    "start": "3529880",
    "end": "3535119"
  },
  {
    "text": "applicable for like broadcasting events broadcasting you know clickstream data",
    "start": "3535119",
    "end": "3541079"
  },
  {
    "text": "events whatever it might be but it's like I am literally just relaying information who's ever online whoever",
    "start": "3541079",
    "end": "3546880"
  },
  {
    "text": "cares and whoever is online could be a durable stream behind the scenes a durable stream internally in the N",
    "start": "3546880",
    "end": "3553000"
  },
  {
    "text": "server is actually just another subscriber so it's not just it might not be a client application it's literally",
    "start": "3553000",
    "end": "3559680"
  },
  {
    "text": "an internal subscriber just my job is to store this data into a durable stream",
    "start": "3559680",
    "end": "3565400"
  },
  {
    "text": "so it's like you have this flexibility of saying I'm just publishing uh giving that information",
    "start": "3565400",
    "end": "3570640"
  },
  {
    "text": "out I don't expect anything any response but anyone who is interested in this um",
    "start": "3570640",
    "end": "3575880"
  },
  {
    "text": "there you go so I've got an example go ahead sorry this is gonna happen a lot",
    "start": "3575880",
    "end": "3581079"
  },
  {
    "text": "with me Byron sorry it's like kind of like clones in some ways but I talk way more than he does um HTTP examples I",
    "start": "3581079",
    "end": "3588359"
  },
  {
    "text": "think htb is a great thing to talk about so let's say if we talk about the same straw man application in two different",
    "start": "3588359",
    "end": "3593880"
  },
  {
    "text": "ways number one so I've got a um really crappy web service you put a description of something that you want to know about",
    "start": "3593880",
    "end": "3599319"
  },
  {
    "text": "in and then you click submit what happens obviously the browser then it might do a post and then it will sit there waiting waiting for a response and",
    "start": "3599319",
    "end": "3606280"
  },
  {
    "text": "and there are confines in the browser like a timeout that's just gonna it's just going to go a you know no",
    "start": "3606280",
    "end": "3611599"
  },
  {
    "text": "connection well it's going to first of all it's going to do a DNS look up then it's going to do a post and then it's going to sit there and spin and wait um",
    "start": "3611599",
    "end": "3617720"
  },
  {
    "text": "and a lot of kind of naive designs it might be the the HTTP Handler gets information it gets a post it might you",
    "start": "3617720",
    "end": "3624039"
  },
  {
    "text": "know take the data values out of the form and then it Go and does some work on the back end and then what it does",
    "start": "3624039",
    "end": "3629319"
  },
  {
    "text": "it's it's kind of like yeah screw you browser and it leaves a connection open waiting and then it goes off and does some backend work and eventually the",
    "start": "3629319",
    "end": "3635000"
  },
  {
    "text": "answer comes through and it goes yep here you go here's the answer transaction complete now you could use",
    "start": "3635000",
    "end": "3640160"
  },
  {
    "text": "Nats in in that in that design so you could like you know your front end function keeps the data Keeps The",
    "start": "3640160",
    "end": "3646119"
  },
  {
    "text": "Connection open and then it sits there and says right I am now going to do either a request reply so think about it point to point on that or a pub up and",
    "start": "3646119",
    "end": "3652760"
  },
  {
    "text": "go right I need an answer please for for this input and then it can sit there and wait and then it'll wait for the answer",
    "start": "3652760",
    "end": "3658359"
  },
  {
    "text": "and once it gets the answer it can respond but mode two of that depending on what you want to do is your web app",
    "start": "3658359",
    "end": "3666200"
  },
  {
    "text": "could fire off the post and then the response comes back and it says now",
    "start": "3666200",
    "end": "3671480"
  },
  {
    "text": "listen or watch this key value or listen for this subject and it could subscribe",
    "start": "3671480",
    "end": "3676640"
  },
  {
    "text": "or listen basically listen for an inbox so then what happens is your browser's gone I'm happy I've fired off the first",
    "start": "3676640",
    "end": "3682319"
  },
  {
    "text": "request bang it's gone off and I I'm I'm sitting here but my web logic my you know whatever it is my react app my",
    "start": "3682319",
    "end": "3688280"
  },
  {
    "text": "nextjs app or whatever can sit there now and wait for an event to come back so you've decoupled things so even if that",
    "start": "3688280",
    "end": "3694280"
  },
  {
    "text": "first connection is you know whatever it's gone who cares you you've now moved on and you've got this distributed",
    "start": "3694280",
    "end": "3699799"
  },
  {
    "text": "workflow a by Design where then your app can listen for you know event coming in from the back end in its own time and",
    "start": "3699799",
    "end": "3705079"
  },
  {
    "text": "space which means you could even do a Refresh on the browser and providing that some local States been set it can",
    "start": "3705079",
    "end": "3711240"
  },
  {
    "text": "carry on listening to what it was listening for and you can get on a plane go on a train and you get back and ah",
    "start": "3711240",
    "end": "3716599"
  },
  {
    "text": "magic my application sorted out you've designed within the constraints but n can provide for both patterns so it's",
    "start": "3716599",
    "end": "3721920"
  },
  {
    "text": "not really when should use it it's like well I think Byron said it probably the best way in a much easier way it depends",
    "start": "3721920",
    "end": "3727960"
  },
  {
    "text": "what are you designing for what user experience do you want how reliable do you want it to be that's a fantastic",
    "start": "3727960",
    "end": "3733359"
  },
  {
    "text": "example I the the problem with a lot of these conversations is like the right answer is it depends but like I don't",
    "start": "3733359",
    "end": "3739880"
  },
  {
    "text": "really care um because that's not interesting I like to come up with like rules of thumb so like we can just kind of leave at the door like yes it depends",
    "start": "3739880",
    "end": "3746680"
  },
  {
    "text": "there's a billion edge cases but like what are some rules of thumb that we can kind of talk about so that at least from",
    "start": "3746680",
    "end": "3752559"
  },
  {
    "text": "a high level we can understand when it when it would be like good to at least start investigating this other route so",
    "start": "3752559",
    "end": "3757760"
  },
  {
    "text": "like I I think one of you said I think it was uh Barron you said um like do I",
    "start": "3757760",
    "end": "3763160"
  },
  {
    "text": "need something to happen immediately or do I need something or like do I not really care when it happens so I think a",
    "start": "3763160",
    "end": "3768400"
  },
  {
    "text": "great example of this is in bootd when you're doing lessons in the app you're",
    "start": "3768400",
    "end": "3773799"
  },
  {
    "text": "completing exercises and in the first iteration of boot Dev we had the HTTP",
    "start": "3773799",
    "end": "3779440"
  },
  {
    "text": "Handler that you would post your answer to respond with any like earned",
    "start": "3779440",
    "end": "3785200"
  },
  {
    "text": "achievements that you unlocked when you submitted that answer right so submit answer back in does a bunch of logic and",
    "start": "3785200",
    "end": "3791760"
  },
  {
    "text": "responds with like oh you happen to unlock this achievement and you earned Three Gems and 200 XP in a later",
    "start": "3791760",
    "end": "3798480"
  },
  {
    "text": "iteration of boot Dev that started to get fairly complex and we realized we didn't need like all of that stuff a to",
    "start": "3798480",
    "end": "3804839"
  },
  {
    "text": "happen within the same HTTP response and B we actually needed",
    "start": "3804839",
    "end": "3810000"
  },
  {
    "text": "to trigger other things off of like that that submission so we did end up",
    "start": "3810000",
    "end": "3817279"
  },
  {
    "text": "transitioning part of our system to a pub sub event so essentially what happens now is you submit your",
    "start": "3817279",
    "end": "3823160"
  },
  {
    "text": "assignment all you get back is like was the assignment correct or not and then on the back end if the assignment was",
    "start": "3823160",
    "end": "3829440"
  },
  {
    "text": "correct that message is published and we have other services that are looking to check like oh we're achievement unlocked",
    "start": "3829440",
    "end": "3835000"
  },
  {
    "text": "was XP um unlocked right did you level up those events are transmitted through",
    "start": "3835000",
    "end": "3841520"
  },
  {
    "text": "our backend system and anything that's unlocked gets pushed back down through a websocket so like David said you can",
    "start": "3841520",
    "end": "3847520"
  },
  {
    "text": "like refresh your browser and even if it takes a couple seconds to process all of those events like those things are going",
    "start": "3847520",
    "end": "3854000"
  },
  {
    "text": "to get pushed back down to you on the client um you know eventually um and I",
    "start": "3854000",
    "end": "3859880"
  },
  {
    "text": "think eventually is a really good operative word for some of this stuff it's like a puristic like if you only",
    "start": "3859880",
    "end": "3865920"
  },
  {
    "text": "care eventually if that email gets sent right if it only if like it just needs to go out sometime within the next",
    "start": "3865920",
    "end": "3871559"
  },
  {
    "text": "couple minutes right um then it could be a good candidate for this kind of asynchronous",
    "start": "3871559",
    "end": "3878279"
  },
  {
    "text": "stuff yeah yeah for sure and and that's a you hit on a key point there which is",
    "start": "3878480",
    "end": "3884480"
  },
  {
    "text": "when you design a system let's say from a new feature whatever it does doesn't matter what it",
    "start": "3884480",
    "end": "3890799"
  },
  {
    "text": "is it's always very shortsighted to assume that the thing the some event that occurs in",
    "start": "3890799",
    "end": "3897440"
  },
  {
    "text": "your system there's only ever going to be one thing that is interested in that because even if you have the use",
    "start": "3897440",
    "end": "3904200"
  },
  {
    "text": "case of saying I need to log these events I need to you know archive these events I need yeah two different",
    "start": "3904200",
    "end": "3910920"
  },
  {
    "text": "handlers that this like user registered there's a whole bunch of stuff that goes on as a result of you",
    "start": "3910920",
    "end": "3917119"
  },
  {
    "text": "know a user registering on a website it's not just one thing or it's not just going to be one component that can do",
    "start": "3917119",
    "end": "3922359"
  },
  {
    "text": "all the work you might maybe you can you can start with that and that's fine but there's going to be you know this event",
    "start": "3922359",
    "end": "3928799"
  },
  {
    "text": "is going to be listened to subscribed to have different components will have interest in that that thing that",
    "start": "3928799",
    "end": "3935079"
  },
  {
    "text": "happened in your system and you want to be able to design up front to to allow for that when that time comes and",
    "start": "3935079",
    "end": "3941240"
  },
  {
    "text": "frankly it's no more difficult to start with something like gats versus going",
    "start": "3941240",
    "end": "3946480"
  },
  {
    "text": "the HTTP route you know but it's like you have you know much more adaptability",
    "start": "3946480",
    "end": "3951960"
  },
  {
    "text": "scalability and evolvability of your system when you have this Pub sub sort",
    "start": "3951960",
    "end": "3957559"
  },
  {
    "text": "of thing baked into it and you still can satisfy the request reply Point topoint interactions and things like that um and",
    "start": "3957559",
    "end": "3964559"
  },
  {
    "text": "and just as a as a final sort of real world analogy I think that we can think of of the asynchrony um is like yeah if",
    "start": "3964559",
    "end": "3972599"
  },
  {
    "text": "you're at an ATM and you you know you want to get cash out uh you're not gonna",
    "start": "3972599",
    "end": "3977760"
  },
  {
    "text": "you're going to sit there and wait until you get your money you're not going to like all right put my card in I'll walk away you know go and some like else",
    "start": "3977760",
    "end": "3984400"
  },
  {
    "text": "comes by and grabs your your money that's ridiculous however when you place an order at Starbucks at a",
    "start": "3984400",
    "end": "3990160"
  },
  {
    "text": "restaurant you place your order now it's going through this whole pipeline of things you go sit down that's an",
    "start": "3990160",
    "end": "3996799"
  },
  {
    "text": "asynchronous flow like there's other maybe synchronous behind the- scene interactions again that's it's a choice",
    "start": "3996799",
    "end": "4003119"
  },
  {
    "text": "it's a choice of how these components fundamentally talk to one another depending on what you want to achieve if",
    "start": "4003119",
    "end": "4008440"
  },
  {
    "text": "you can keep just pushing things down into a queue that then get picked off asynchronously great that's just like",
    "start": "4008440",
    "end": "4014520"
  },
  {
    "text": "you have you know when you're on the line cooking line it's like you you're putting this ticket next to the next",
    "start": "4014520",
    "end": "4020319"
  },
  {
    "text": "station and you're preparing your plate whatever it may be and it's like I've done my work now I'm now I push it on to",
    "start": "4020319",
    "end": "4027520"
  },
  {
    "text": "the next queue kind of thing so you can you can imagine sort of all these real world scenarios where this asynchrony",
    "start": "4027520",
    "end": "4034039"
  },
  {
    "text": "comes into place whereas but there's still like order to that pipeline for example you're not going to do you know",
    "start": "4034039",
    "end": "4039480"
  },
  {
    "text": "the final like final placement of a you know little micro Greens on the on the",
    "start": "4039480",
    "end": "4044799"
  },
  {
    "text": "plate first before you actually put the slop on so it's it's one of those things",
    "start": "4044799",
    "end": "4049839"
  },
  {
    "text": "where you still have can have order you can still have synchrony you can have asynchrony that's why it's like yeah how",
    "start": "4049839",
    "end": "4057279"
  },
  {
    "text": "how would you choose to model it and and the thing with all the Nats Primitives that it provides is like you you do",
    "start": "4057279",
    "end": "4063400"
  },
  {
    "text": "actually have Choice rather than saying well I guess everything is synchronous HTTP and I'm or point to point and I'm",
    "start": "4063400",
    "end": "4069920"
  },
  {
    "text": "like that's what I have to work with that's a fantastic example Starbucks example specifically yeah go ahead",
    "start": "4069920",
    "end": "4077400"
  },
  {
    "text": "David no sorry I think there's there's a little bit of latency OB in the UK soone like you know the terrible Island out in",
    "start": "4077400",
    "end": "4084240"
  },
  {
    "text": "the middle of nowhere sorry Lane um you're good I'm I'm kind of excited actually I'm thoughts bubbling away um",
    "start": "4084240",
    "end": "4091000"
  },
  {
    "text": "there's there's often confusion in distributed system design between and I'm going to use these terms very very",
    "start": "4091000",
    "end": "4097400"
  },
  {
    "text": "carefully between control plane and data plane so when you build something that",
    "start": "4097400",
    "end": "4103120"
  },
  {
    "text": "you know you've got an imper ative list of stuff that needs to be done your you know ever expanding if Els list of you",
    "start": "4103120",
    "end": "4108719"
  },
  {
    "text": "know tasks um you want those tasks to run as fast as absolutely possible so even though we decouple time",
    "start": "4108719",
    "end": "4115560"
  },
  {
    "text": "asynchronously let's say in the email ex you know the email example it's a really good example we're not kind of we're not",
    "start": "4115560",
    "end": "4121719"
  },
  {
    "text": "saying it will eventually get there because even though you've broken the system fundamentally at how it how it",
    "start": "4121719",
    "end": "4127238"
  },
  {
    "text": "communicates it's now a network call and not impath over a you know PCI b or whatever you will probably not notice",
    "start": "4127239",
    "end": "4134199"
  },
  {
    "text": "any time delays we're not kind of saying it's no longer important ah it's okay get there tomorrow the chances are it",
    "start": "4134199",
    "end": "4139679"
  },
  {
    "text": "will still arrive whether you're running the monolith or the you know modular monolith or microservices architecture so your data plane is still intact but",
    "start": "4139679",
    "end": "4146120"
  },
  {
    "text": "it's now network based and not chip based so there's that and any slower than it would have been really exactly",
    "start": "4146120",
    "end": "4152920"
  },
  {
    "text": "yes it's conceptually different but the way it actually manifests itself in reality is you've got a follower you've",
    "start": "4152920",
    "end": "4158159"
  },
  {
    "text": "got an email so that that's kind of I think that that distinction is always worth mentioning but then you've got the",
    "start": "4158159",
    "end": "4163440"
  },
  {
    "text": "kind of control plane aspect which is where you know what if actually we have a stream of data being populated in one",
    "start": "4163440",
    "end": "4169520"
  },
  {
    "text": "region and we want it to be replicated into another we have an eventually consistent copy across the the raft",
    "start": "4169520",
    "end": "4177120"
  },
  {
    "text": "Network um and but that's not necessarily going to impact that that flow of you you have a follow in an",
    "start": "4177120",
    "end": "4183199"
  },
  {
    "text": "email it might be you're doing some analytics somewhere else or you're making a backup so it's relevant to what aspect and what view you have of the",
    "start": "4183199",
    "end": "4189640"
  },
  {
    "text": "design at that moment in time it's not like you know well just going and throw it on a queue and don't worry about it it's not that and and you know what I",
    "start": "4189640",
    "end": "4195320"
  },
  {
    "text": "said earli one about the Google thing with a boomerang and it's going to come back I think this is a moment it comes back so let's say you have a follower",
    "start": "4195320",
    "end": "4201280"
  },
  {
    "text": "and you go oh I want to send an email what you might do is you might set a timer and you might go right if I don't",
    "start": "4201280",
    "end": "4206480"
  },
  {
    "text": "get a response from my email system in three minutes to say the email has either been sent or there's an error",
    "start": "4206480",
    "end": "4211640"
  },
  {
    "text": "code I'm now going to email the administrator and say ah there's a problem the email didn't go out or in",
    "start": "4211640",
    "end": "4217040"
  },
  {
    "text": "Google's case I'm going to set a timer for the worst answer possible you know the the the first answer not the one",
    "start": "4217040",
    "end": "4222800"
  },
  {
    "text": "that takes a few Hops and you know a few recursions to get the good answer where it says you know what nothing else came back the penguin it's a bag of something",
    "start": "4222800",
    "end": "4230840"
  },
  {
    "text": "alive terrible answer but you've got an answer and that's all of a sudden you start having to think about that to",
    "start": "4230840",
    "end": "4236400"
  },
  {
    "text": "prevent those issues where well the email the email might never get there well that's just distributed systems no",
    "start": "4236400",
    "end": "4241640"
  },
  {
    "text": "it's just bad design so sorry Lane I was kind of like jumping all over there but um like bursting with yeah useless",
    "start": "4241640",
    "end": "4248199"
  },
  {
    "text": "rhetoric no that's a great that's a really good point it doesn't really slow down the like and I think I Ed the wrong",
    "start": "4248199",
    "end": "4255760"
  },
  {
    "text": "the wrong word it's it's not that it slows anything down but in my mind it's like it could be if it wanted to like",
    "start": "4255760",
    "end": "4263640"
  },
  {
    "text": "like if it needed to be like so for example um when I upload a video to YouTube I I don't know if this is",
    "start": "4263640",
    "end": "4270000"
  },
  {
    "text": "actually the case but I know that you could build it this way I use some sort of HTTP um method some sort of",
    "start": "4270000",
    "end": "4276000"
  },
  {
    "text": "synchronous method to like start a video upload and the video gets uploaded but",
    "start": "4276000",
    "end": "4281880"
  },
  {
    "text": "then some like background job starts where it processes that video and it like compresses it right it optimizes it",
    "start": "4281880",
    "end": "4288239"
  },
  {
    "text": "for all the different ways that it can serve that video to customers and all of a sudden I'm not like I don't need to",
    "start": "4288239",
    "end": "4294480"
  },
  {
    "text": "keep my browser open for that anymore like that's happening in Google's back end and eventually when it's done",
    "start": "4294480",
    "end": "4299760"
  },
  {
    "text": "processing ping like I get an email right um so like that that's an instance where it does happen to take a long time",
    "start": "4299760",
    "end": "4306880"
  },
  {
    "text": "or in your example of like someone following me and then me instantly getting an email like you said both of",
    "start": "4306880",
    "end": "4312239"
  },
  {
    "text": "those use cases are supported right by like the pub architecture it's not the pub makes it slower but like now I have",
    "start": "4312239",
    "end": "4319000"
  },
  {
    "text": "that ability whereas if I had a synchronous system I would kind of have to just like sit there and wait and my",
    "start": "4319000",
    "end": "4324719"
  },
  {
    "text": "HTTP request probably times out before whatever background job uh that's happening actually actually finishes",
    "start": "4324719",
    "end": "4330600"
  },
  {
    "text": "right yeah sure yeah and and yeah man we could we could go on about this for another 10 episodes to be honest yes in",
    "start": "4330600",
    "end": "4336320"
  },
  {
    "text": "your YouTube video where you chunk it up your browser might have the job you might see a notification you know don't",
    "start": "4336320",
    "end": "4341560"
  },
  {
    "text": "close this browser tab cuz what it's doing it's chunking uploading but beyond that point when when there's like maybe a hash exchange you know he says Ah okay",
    "start": "4341560",
    "end": "4348280"
  },
  {
    "text": "yeah I've got it you can now disconnect and then it then it's on its system it's in a job queue it might be you know some version of what we've been talking about",
    "start": "4348280",
    "end": "4354560"
  },
  {
    "text": "you know there's there's a worker queue pulling chunks reassembling them compressing them rendering you know expanding and then putting them onto",
    "start": "4354560",
    "end": "4360199"
  },
  {
    "text": "their CDN yeah then absolutely then we've got this lovely you know time asynchronous split but there's still a",
    "start": "4360199",
    "end": "4365679"
  },
  {
    "text": "Handover of responsibility from one syst to another even though the paradigm's you know kind of the same all the way",
    "start": "4365679",
    "end": "4370880"
  },
  {
    "text": "through yeah there's two very important question questions that I want to get to before we we end and I know we're like",
    "start": "4370880",
    "end": "4376960"
  },
  {
    "text": "we're almost 80 minutes into this thing uh this has been a great episode um",
    "start": "4376960",
    "end": "4382280"
  },
  {
    "text": "question number one respectively and we can start with Byron because we we just heard from",
    "start": "4382280",
    "end": "4387880"
  },
  {
    "text": "David what is your most unpopular opinion when it comes to like backend",
    "start": "4387880",
    "end": "4393800"
  },
  {
    "text": "architectures and pubsub and microservices and that sort of thing unpopular engineering",
    "start": "4393800",
    "end": "4400280"
  },
  {
    "text": "opinion oh boy I have I have two bangers I think um the one the one is partially",
    "start": "4400400",
    "end": "4406800"
  },
  {
    "text": "what we're what we've been sort of talking to and this is again like h2p exists and it was originally created for",
    "start": "4406800",
    "end": "4414440"
  },
  {
    "text": "the web that was what it was designed for and people have picked that up and",
    "start": "4414440",
    "end": "4419960"
  },
  {
    "text": "said let me build a distributed system using it as the as the fundamental protocol and I don't fault people for",
    "start": "4419960",
    "end": "4427080"
  },
  {
    "text": "doing it because it's familiar it's what everybody learns in boot camps you know all of the web any kind of web",
    "start": "4427080",
    "end": "4432600"
  },
  {
    "text": "development you're going to get introduced to this you're not going to be introduced to all of these other you",
    "start": "4432600",
    "end": "4437719"
  },
  {
    "text": "know pubs up Technologies and such so I don't fault anyone for it but my unpopular opinion in that respect is",
    "start": "4437719",
    "end": "4443719"
  },
  {
    "text": "that I think it's a terrible idea uh to use HTTP as long as you you know learn",
    "start": "4443719",
    "end": "4450040"
  },
  {
    "text": "something and that'ss I'm biased but I've also been using Nats for seven years and I've done plenty of you know",
    "start": "4450040",
    "end": "4456159"
  },
  {
    "text": "web application development and distributed systems and using Cloud providers and all sorts of things I",
    "start": "4456159",
    "end": "4461320"
  },
  {
    "text": "think Nats is a very very sensible starting point that people should",
    "start": "4461320",
    "end": "4466639"
  },
  {
    "text": "genuinely consider as an alternative um an alternative starting point my second",
    "start": "4466639",
    "end": "4472040"
  },
  {
    "text": "real quick unpopular opinion completely unrelated to this because we didn't talk about it is",
    "start": "4472040",
    "end": "4479520"
  },
  {
    "text": "um and if if listeners don't don't know or Watchers don't know about event sourcing and um",
    "start": "4479520",
    "end": "4486360"
  },
  {
    "text": "cqrs command queries responsibility segregation and domain driven design",
    "start": "4486360",
    "end": "4492239"
  },
  {
    "text": "things like that there there's a whole bunch of these words that once you learn them and you adopt them and really",
    "start": "4492239",
    "end": "4498120"
  },
  {
    "text": "understand them I think it's a fundamentally better way of thinking",
    "start": "4498120",
    "end": "4503239"
  },
  {
    "text": "about a problem space breaking it down and using you know proper domain",
    "start": "4503239",
    "end": "4508840"
  },
  {
    "text": "language rather than just saying everything's a CR app and you know it's just I'm going to use my internal",
    "start": "4508840",
    "end": "4514280"
  },
  {
    "text": "terminology and I'm not it's not going to be the terminology of the business or the use case that I'm actually um uh",
    "start": "4514280",
    "end": "4521199"
  },
  {
    "text": "solving for and I think think this notion of event sourcing as a as a quick",
    "start": "4521199",
    "end": "4526760"
  },
  {
    "text": "20 second thing for people who don't know it's it it is fundamentally a different persistence model than you",
    "start": "4526760",
    "end": "4533719"
  },
  {
    "text": "know an update in place database or like I have a record and I'm changing a column value you know and yeah at any",
    "start": "4533719",
    "end": "4541320"
  },
  {
    "text": "given point in time I only have the current version or current snapshot of what that state was you don't actually",
    "start": "4541320",
    "end": "4546679"
  },
  {
    "text": "have any of the historical stuff you don't even know how that state got to where where it was and the reality with",
    "start": "4546679",
    "end": "4553960"
  },
  {
    "text": "event sourcing is really the acknowledgement that events happen whether you choose to acknowledge them",
    "start": "4553960",
    "end": "4559480"
  },
  {
    "text": "or not in your system whether you choose to store them and and you know throw",
    "start": "4559480",
    "end": "4565080"
  },
  {
    "text": "them away like that that's that's a choice but events are happening whether you like it or not and it's just like",
    "start": "4565080",
    "end": "4570560"
  },
  {
    "text": "you should acknowledge them because then if you have a log of events you can actually see how the state ultimately",
    "start": "4570560",
    "end": "4576920"
  },
  {
    "text": "you know resulted at the end rather than going back in your database table and saying how did that bug happen I don't I",
    "start": "4576920",
    "end": "4583920"
  },
  {
    "text": "don't know what led up to that and that happens all the time and it's like but if you had you know the log of events",
    "start": "4583920",
    "end": "4589440"
  },
  {
    "text": "and then you're Computing the state relative to that you can still use a database and materialize it and to allow",
    "start": "4589440",
    "end": "4594760"
  },
  {
    "text": "for SQL queries but you know if you don't have that log of events leading up",
    "start": "4594760",
    "end": "4599920"
  },
  {
    "text": "to it you're you're kind of in the dark so I think it helps with better design and understanding the domain well",
    "start": "4599920",
    "end": "4606199"
  },
  {
    "text": "because you have to use the language you have to think about what an event means you have to think about a command or a query and what that means and you're",
    "start": "4606199",
    "end": "4613159"
  },
  {
    "text": "choice of you know how you want to materialize things query things uh that's still up up up to choice you can",
    "start": "4613159",
    "end": "4620639"
  },
  {
    "text": "still use databases you can use you can use whatever you want Dynamo and um but so that's one of those unpopular",
    "start": "4620639",
    "end": "4626960"
  },
  {
    "text": "op opinions because I think it's it can get people can get really heated about",
    "start": "4626960",
    "end": "4632040"
  },
  {
    "text": "it and they're like H it's overly complicated it's it's just like well you know experience it it takes it takes",
    "start": "4632040",
    "end": "4639080"
  },
  {
    "text": "time to to learn and discipline to adopt these these methods and to learn them",
    "start": "4639080",
    "end": "4644840"
  },
  {
    "text": "for sure just like anything else but like if you're brand new to programming you didn't know what the heck of crud app was you don't know what HTP was you",
    "start": "4644840",
    "end": "4650960"
  },
  {
    "text": "don't know all these re like JavaScript Frameworks it's no different it's just a different Suite of methods and",
    "start": "4650960",
    "end": "4657600"
  },
  {
    "text": "technologies that you have to learn but it's uh so anyway I you know you have to",
    "start": "4657600",
    "end": "4664159"
  },
  {
    "text": "be pragmatic with things but I think as a starting point like that's generally my go-to because it helps me think about",
    "start": "4664159",
    "end": "4670239"
  },
  {
    "text": "the problem better um right so that's maybe un that's great HTTP is bad event",
    "start": "4670239",
    "end": "4677840"
  },
  {
    "text": "sourcing is good we'll have to do a follow-up episode later on on event sourcing uh so we can actually dive into",
    "start": "4677840",
    "end": "4683880"
  },
  {
    "text": "it but sure cool David what are your uh what's your unpopular",
    "start": "4683880",
    "end": "4689360"
  },
  {
    "text": "opinion just one I'm English I've got all the popular opinions I'm like the master chief collector of unpopular",
    "start": "4689360",
    "end": "4696120"
  },
  {
    "text": "opinions um no my I've got one big gripe in life um and it's just take a step",
    "start": "4696120",
    "end": "4701600"
  },
  {
    "text": "back sorry putting a positive spin the gripe people who don't take a step back",
    "start": "4701600",
    "end": "4706719"
  },
  {
    "text": "and breathe and think about what it is that they're trying to do so they'll just kind of start writing code and go oh just ship it yeah but it kind of goes",
    "start": "4706719",
    "end": "4714199"
  },
  {
    "text": "back to what I was saying earlier on like I will centrify or Cent a design",
    "start": "4714199",
    "end": "4719679"
  },
  {
    "text": "around well how do I make sure this thing is resilient to a little bit of failure how can I just scale it just",
    "start": "4719679",
    "end": "4726440"
  },
  {
    "text": "above you know one user if I start there and then you know next week I take a copy of it and shove it on a different",
    "start": "4726440",
    "end": "4731800"
  },
  {
    "text": "VM and it works happy days or sh it into a Lambda or you know whatever um my biggest gripe is those that rush in",
    "start": "4731800",
    "end": "4738719"
  },
  {
    "text": "design then ask all the questions based on there just gonna say crappy design and blame you know something else",
    "start": "4738719",
    "end": "4745520"
  },
  {
    "text": "because of naivity whatever yeah so that's my big thing I see too much of it",
    "start": "4745520",
    "end": "4750639"
  },
  {
    "text": "and it's not it's no finger pointing either it's just everywhere that that's the you know you see justifications for a bad decision he's like well you can",
    "start": "4750639",
    "end": "4756719"
  },
  {
    "text": "just say that was a bad decision let's go back and and rethink that yeah just take a breather have a think",
    "start": "4756719",
    "end": "4763960"
  },
  {
    "text": "have have a think go for a run yeah think about it what are you trying to",
    "start": "4763960",
    "end": "4769080"
  },
  {
    "text": "achieve do you know all the answers to what your expectations are like you know I I build things on my own a lot and um",
    "start": "4769080",
    "end": "4775760"
  },
  {
    "text": "I have to sit down with a whiteboard and go what am I building here what what's this for am I tickling just a need to",
    "start": "4775760",
    "end": "4780920"
  },
  {
    "text": "build something or am I actually serving a purpose and what does that purpose look like is it important how important",
    "start": "4780920",
    "end": "4786480"
  },
  {
    "text": "and once you get to truth then you know suddenly you find your design could be a little bit simpler or you know whatever",
    "start": "4786480",
    "end": "4792040"
  },
  {
    "text": "but yeah take a breather step back think I like that a lot and I I",
    "start": "4792040",
    "end": "4797800"
  },
  {
    "text": "especially like it in the realm of rewrites so like you've got some messy",
    "start": "4797800",
    "end": "4803120"
  },
  {
    "text": "code base and I've been a part of several rewrites where I think if we had taken just like we had a working system",
    "start": "4803120",
    "end": "4809400"
  },
  {
    "text": "and we knew it was going to bump into or it was bumping into some like either scalability limits or architectural limits it's like we don't need to",
    "start": "4809400",
    "end": "4816600"
  },
  {
    "text": "rewrite it today like let's let's figure out let's figure out what are the problems are take a second like re",
    "start": "4816600",
    "end": "4822920"
  },
  {
    "text": "writing or rearch or refactoring like those are big jobs sometimes and kicking off a four-month project without at",
    "start": "4822920",
    "end": "4828960"
  },
  {
    "text": "least taking a day to think about it I completely agree that's a great that's a great one what about you Lane come on",
    "start": "4828960",
    "end": "4835120"
  },
  {
    "text": "fire as one you've got to have one or two gosh nobody's ever held up the mirror on the",
    "start": "4835120",
    "end": "4842880"
  },
  {
    "text": "show oh man at at the moment I would say oh man is it going to be is it going",
    "start": "4842880",
    "end": "4849920"
  },
  {
    "text": "to be unpopular sorry let give me just a second to ga rather an unpopular one the listeners have heard a lot of my popular",
    "start": "4849920",
    "end": "4857880"
  },
  {
    "text": "opinions in the go Community I do think I have an unpopular opinion in the go Community my biggest my second biggest",
    "start": "4857880",
    "end": "4864040"
  },
  {
    "text": "gripe with go my first biggest gripe with go is the lack of enum types I wish",
    "start": "4864040",
    "end": "4869239"
  },
  {
    "text": "we had like some types Union types my second biggest gripe with go at the",
    "start": "4869239",
    "end": "4874800"
  },
  {
    "text": "moment is the context package um request context the standard libraries context um it is used to store",
    "start": "4874800",
    "end": "4883480"
  },
  {
    "text": "Dynamic values and that kills the benefits of static typing and that that",
    "start": "4883480",
    "end": "4890000"
  },
  {
    "text": "drives me absolutely Bonkers I don't have like a solution to this I don't know how we would fix it but my un",
    "start": "4890000",
    "end": "4895719"
  },
  {
    "text": "popular opinion is that the context package is good for timeouts and sucks at basically everything else um there it",
    "start": "4895719",
    "end": "4902880"
  },
  {
    "text": "is I like that yeah that's that's funny the the the first time that I learned",
    "start": "4902880",
    "end": "4909199"
  },
  {
    "text": "and I I've I've been a go user pre 1.0 but when the context package which I",
    "start": "4909199",
    "end": "4914360"
  },
  {
    "text": "know was later in life uh was introduced I never personally once used the Value",
    "start": "4914360",
    "end": "4921159"
  },
  {
    "text": "method to store any data because it never made sense to me it's like be",
    "start": "4921159",
    "end": "4926320"
  },
  {
    "text": "explicit with passing data you know prop and I know that's the whole point it's like propagate this context it's like",
    "start": "4926320",
    "end": "4932520"
  },
  {
    "text": "you could you could really abuse that and just like hide all this stuff you know you can make a whole struct value",
    "start": "4932520",
    "end": "4939320"
  },
  {
    "text": "and you just have all these fields and like I'm populating along this call stack and then it's like you have no you",
    "start": "4939320",
    "end": "4945159"
  },
  {
    "text": "have no visibility into that it's very weird I I just don't I don't I never understood you know the real true",
    "start": "4945159",
    "end": "4951840"
  },
  {
    "text": "motivation of it like I understood the reason but like was this not a like like",
    "start": "4951840",
    "end": "4957120"
  },
  {
    "text": "David says step back was this a good idea like let's let's see I think the timeout and pro like all that like yeah",
    "start": "4957120",
    "end": "4964040"
  },
  {
    "text": "it's like if you're I guess the the the intuition is you know if you're propagating a timeout or propagating a",
    "start": "4964040",
    "end": "4970080"
  },
  {
    "text": "deadline why can't we just propagate other Val values that are just user provided maybe that was as simple as it",
    "start": "4970080",
    "end": "4976480"
  },
  {
    "text": "is I don't know I think there are cases where it is I'll stop yeah I need to do",
    "start": "4976480",
    "end": "4982679"
  },
  {
    "text": "another episode on the context package uh as well because it drives me nuts it's used for like middleware right to",
    "start": "4982679",
    "end": "4989199"
  },
  {
    "text": "like add values to like handlers but I I I try to avoid it like the plague at least for that use case I I do use it",
    "start": "4989199",
    "end": "4995639"
  },
  {
    "text": "for timeouts of course I'm not a crazy person um cool thank you guys so much for coming on before we end I want you",
    "start": "4995639",
    "end": "5002760"
  },
  {
    "text": "to each tell the audience where you can find your stuff online where you can",
    "start": "5002760",
    "end": "5008239"
  },
  {
    "text": "find Nats Cadia like just just plug all the stuff that you want um my audience",
    "start": "5008239",
    "end": "5013560"
  },
  {
    "text": "of kind of you know just starting out backend developers um to be able to find resources about what you guys are",
    "start": "5013560",
    "end": "5019159"
  },
  {
    "text": "working on sure um saw the hand so yeah I'm I do",
    "start": "5019159",
    "end": "5027600"
  },
  {
    "text": "have I have not blogged whatsoever recently but I do have a website uh just Byron ru.com um I have some existing",
    "start": "5027600",
    "end": "5035800"
  },
  {
    "text": "actually transferred a lot when I joined CAD I was I started the Nats newsletter um on my blog before I joined and then I",
    "start": "5035800",
    "end": "5042600"
  },
  {
    "text": "transferred all those assets over to the Cadia uh we website and I've been maintaining that ever since I forget",
    "start": "5042600",
    "end": "5049320"
  },
  {
    "text": "we're up to quite quite a few year and a half two years of worth of newsletters",
    "start": "5049320",
    "end": "5054800"
  },
  {
    "text": "for gats um so that's a really good resource for people um and then I'm on X",
    "start": "5054800",
    "end": "5060199"
  },
  {
    "text": "Twitter whatever um the handle is um the this is it comes across terrible in",
    "start": "5060199",
    "end": "5068120"
  },
  {
    "text": "audio but the devil but it's the developer so it's d v l oh nice yeah so",
    "start": "5068120",
    "end": "5075400"
  },
  {
    "text": "I got that handle very early early on yeah so I'm on there and Linkedin as",
    "start": "5075400",
    "end": "5080719"
  },
  {
    "text": "well um but yeah we have nats.io is the website and cad.com or is that and then",
    "start": "5080719",
    "end": "5087600"
  },
  {
    "text": "I'll kick it over to David now worries I can hit my wife sh me for dinner so that's well timed um",
    "start": "5087600",
    "end": "5094320"
  },
  {
    "text": "yeah so I'm on a oh God X Twitter if I say he's zitter it just sounds like I'm",
    "start": "5094320",
    "end": "5099440"
  },
  {
    "text": "swearing um at you know I forgot what I am what am I at dave. deev D- a D O T DV",
    "start": "5099440",
    "end": "5108040"
  },
  {
    "text": "um I've also got the Dave dodev uh there's a Blog up there um me and Barron",
    "start": "5108040",
    "end": "5113080"
  },
  {
    "text": "host as well the Nats FM podcast so you can go to Just ns. FM and catch me and",
    "start": "5113080",
    "end": "5118480"
  },
  {
    "text": "him rambling about more of this kind of thing as well uh I think Barron you could else off you've got the natsby",
    "start": "5118480",
    "end": "5123800"
  },
  {
    "text": "example.com site which is fantastic for getting to grips plenty of go examples on there and you can just take code",
    "start": "5123800",
    "end": "5130080"
  },
  {
    "text": "examples and run with a lot of the stuff that we've been talking about here and for for the documentation just head over to the N site and you'll find lots of",
    "start": "5130080",
    "end": "5136760"
  },
  {
    "text": "stuff there as well so yeah thanks for having us this has been cool yeah no thank you guys so much for coming on I",
    "start": "5136760",
    "end": "5142520"
  },
  {
    "text": "will put links uh to all those things down in the description below so for anyone who is having a hard time typing",
    "start": "5142520",
    "end": "5148159"
  },
  {
    "text": "domain names out of audio um it'll all be down where you can click on it thanks again guys I'll see you see you later",
    "start": "5148159",
    "end": "5154280"
  },
  {
    "text": "cool thanks so [Music]",
    "start": "5154280",
    "end": "5164760"
  },
  {
    "text": "much",
    "start": "5164760",
    "end": "5167760"
  }
]