[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "maybe what you have a problem with is like a bad abstraction it's leaky yeah just [ __ ] ship it the front end",
    "start": "80",
    "end": "5879"
  },
  {
    "text": "should be driving everything in the back [Music]",
    "start": "5879",
    "end": "12460"
  },
  {
    "text": "end I've got a special one for you guys today today backend banter goes to war",
    "start": "13799",
    "end": "18800"
  },
  {
    "text": "we're going to war with frontend first for obvious reasons uh the name alone uh",
    "start": "18800",
    "end": "25160"
  },
  {
    "text": "of the frontend first podcast just cannot stand but I'm here with Sam celop today we're actually going to be",
    "start": "25160",
    "end": "30720"
  },
  {
    "text": "crossposting this episode to both feeds so you'll see this if you're a listener back in Baner obviously you'll see this episode and then if you're a listener to",
    "start": "30720",
    "end": "37559"
  },
  {
    "text": "front end first uh you you'll see this episode in your feed as well um I'm here with Sam Sam is a I mean I don't want to",
    "start": "37559",
    "end": "44680"
  },
  {
    "text": "reduce you to a front-end developer but it it certainly sounds like that's where your where you're focus at these days do",
    "start": "44680",
    "end": "49920"
  },
  {
    "text": "you want to introduce yourself I wish I would have known you had this podcast when we met in Big Sky Montana because",
    "start": "49920",
    "end": "55480"
  },
  {
    "start": "51000",
    "end": "132000"
  },
  {
    "text": "we could have just thrown down there and just settled this once and for all you know we could have physically fought",
    "start": "55480",
    "end": "61120"
  },
  {
    "text": "although yes we're both like over 6 feet so when we hit the ground it like it hurts it hurts true man whenever I play",
    "start": "61120",
    "end": "68520"
  },
  {
    "text": "basketball and I fall people are just always stop and look they're like it happens in slow motion cuz it's just",
    "start": "68520",
    "end": "74479"
  },
  {
    "text": "like a tree falling down but um yeah when you're kid you're close to the ground it's like whatever",
    "start": "74479",
    "end": "81240"
  },
  {
    "text": "but when you're 6 feet tall it's like yeah the world's not made for us you know we we have it hard being just tall",
    "start": "81240",
    "end": "88200"
  },
  {
    "text": "people um we uh so we met in Montana Big Sky",
    "start": "88200",
    "end": "93320"
  },
  {
    "text": "devcom I'm Sam sakov and I was given a talk about kind of backend Frameworks",
    "start": "93320",
    "end": "98720"
  },
  {
    "text": "and front-end Frameworks and um we had some good conversations there so yeah we figured it'd be fun to just get on and",
    "start": "98720",
    "end": "105560"
  },
  {
    "text": "talk a little bit about kind of our respective worlds so that's kind of the",
    "start": "105560",
    "end": "110640"
  },
  {
    "text": "idea for this podcast absolutely one of the most interesting conversations I think we had was actually when it was",
    "start": "110640",
    "end": "116719"
  },
  {
    "text": "like me you and Prime you and Prime were a little bit buzzed uh at the",
    "start": "116719",
    "end": "124560"
  },
  {
    "text": "Airbnb never never had a sip but no we were talking to the Airbnb about this idea of kind of what what is the",
    "start": "124560",
    "end": "133480"
  },
  {
    "start": "132000",
    "end": "397000"
  },
  {
    "text": "responsibility of front-end framework versus a backend framework or or as I",
    "start": "133480",
    "end": "138920"
  },
  {
    "text": "would actually probably call it more like a full stack framework like Ruby on Rails and then the very next day of",
    "start": "138920",
    "end": "144959"
  },
  {
    "text": "course you gave your talk um by the way could you could you just give everyone like a quick maybe",
    "start": "144959",
    "end": "150400"
  },
  {
    "text": "three or four bullet points on like what your talk at Big Sky Devcon was was about yeah let's get into that in a",
    "start": "150400",
    "end": "156319"
  },
  {
    "text": "second but I I actually think this conversation you brought up is is a good kicking off kind of jumping off point",
    "start": "156319",
    "end": "161599"
  },
  {
    "text": "because we were talking about abstractions and Prime was telling us that lately he has been talking to his",
    "start": "161599",
    "end": "168280"
  },
  {
    "text": "audience on stream about the importance of kind of learning the layer below the tools you're using and it's easy if you",
    "start": "168280",
    "end": "176519"
  },
  {
    "text": "stay at the abstraction level you're at to get conf confused and not understand how things work and people can be scared",
    "start": "176519",
    "end": "183400"
  },
  {
    "text": "to go down a layer but if you just do that his argument was kind of like",
    "start": "183400",
    "end": "189840"
  },
  {
    "text": "people should just do that because once you learn kind of how the sausage is made then you'll be way more productive",
    "start": "189840",
    "end": "195840"
  },
  {
    "text": "you'll understand when things go wrong and it's like really important and I was kind of Playing devil's advocate and",
    "start": "195840",
    "end": "202000"
  },
  {
    "text": "saying like that's true but it's only true to some level you don't want to keep going down and maybe what you have",
    "start": "202000",
    "end": "210000"
  },
  {
    "text": "problem with is like a bad abstraction it's leaky and if you're using a bad abstraction then you you do find",
    "start": "210000",
    "end": "216760"
  },
  {
    "text": "yourself needing to go a level down more often than not and at that point it's like is the abstraction even helping you",
    "start": "216760",
    "end": "223640"
  },
  {
    "text": "out so that's kind of what our conversation was about and I think it's relevant to what we're talking about today because a lot of what's the",
    "start": "223640",
    "end": "230480"
  },
  {
    "text": "front-end folks have done in the last 10 years is try to abstract different parts",
    "start": "230480",
    "end": "236159"
  },
  {
    "text": "of you know building rich uis on the web and a lot of times those abstractions are very leaky and there's a lot of",
    "start": "236159",
    "end": "244079"
  },
  {
    "text": "incidental complexity that comes along with them you know the classic example of like we want an Spa to abstract away",
    "start": "244079",
    "end": "250720"
  },
  {
    "text": "like Dom apis and just give us reactive updates in our UI but now it's like you",
    "start": "250720",
    "end": "255959"
  },
  {
    "text": "have to still think about uh the API layer getting the data back and forth and then you make some sort of API",
    "start": "255959",
    "end": "262680"
  },
  {
    "text": "convention that's trying to abstract that away but the reality is as anyone who's done this knows you spend a lot of",
    "start": "262680",
    "end": "269800"
  },
  {
    "text": "of time getting that abstraction layer you know going down a layer and figuring",
    "start": "269800",
    "end": "274880"
  },
  {
    "text": "out how to get the data from the back end to the front end you're doing a lot of wiring at a lower level whereas the",
    "start": "274880",
    "end": "280560"
  },
  {
    "text": "whole point of this Paradigm was to be operating at a higher level so yeah that's kind of that I thought I thought",
    "start": "280560",
    "end": "286400"
  },
  {
    "text": "that was interesting and kind of relevant to what we're talking about to give everyone a little bit of context I basically just bued into yours and",
    "start": "286400",
    "end": "292919"
  },
  {
    "text": "Prime's conversation when we were in Montana because you guys were talking about this idea of abstraction and I've heard it I've heard it both ways I've",
    "start": "292919",
    "end": "298759"
  },
  {
    "text": "heard things like you know we just need to ship we just need to ship we just need to like build good product and we",
    "start": "298759",
    "end": "304280"
  },
  {
    "text": "need to do it quickly so we're going to stay at our current level of abstraction versus like this idea of like kind of going down a level or two deeper so that",
    "start": "304280",
    "end": "310240"
  },
  {
    "text": "you can have a better understanding and my take disappointingly is is a little bit more nuanced it's it's I I it's in",
    "start": "310240",
    "end": "317919"
  },
  {
    "text": "the middle and it's based on like what your goals are so this is why Twitter is can be so frustrating to me is like I",
    "start": "317919",
    "end": "324720"
  },
  {
    "text": "kind of am in two different Twitter worlds I've got like the dev Twitter world where the people in that World",
    "start": "324720",
    "end": "330000"
  },
  {
    "text": "their goal is to get their first job in Tech they're trying to become great developers so they can have a career as",
    "start": "330000",
    "end": "336319"
  },
  {
    "text": "a developer and who knows they might go on to like start businesses or do a startup or something but like their immediate goal is just like I want to be",
    "start": "336319",
    "end": "342199"
  },
  {
    "text": "a great developer and to those people I say I think you should go a level deeper",
    "start": "342199",
    "end": "347440"
  },
  {
    "text": "I think you should take a chance on learning a bit more and becoming just a more well-rounded more fundamental first",
    "start": "347440",
    "end": "353960"
  },
  {
    "text": "developer and then there's this other world that I also live in that's like I'm an indie hacker I'm starting a",
    "start": "353960",
    "end": "359280"
  },
  {
    "text": "startup I'm an entrepreneur that like I know a little bit about code maybe I got a CS degree but like I don't want to go",
    "start": "359280",
    "end": "365120"
  },
  {
    "text": "work in Netflix right I don't want to go work at another company like I'm starting my thing and to those people",
    "start": "365120",
    "end": "371360"
  },
  {
    "text": "I'm more on this other side of like yeah just [ __ ] ship it right like we're trying to build something here and I",
    "start": "371360",
    "end": "378319"
  },
  {
    "text": "know that's a frustrating answer because it's like ah I agree with both of you um but that's that's kind of the way I look",
    "start": "378319",
    "end": "383479"
  },
  {
    "text": "at it it depends a lot on your goals and because I work with a lot of people that are you know learning and trying to",
    "start": "383479",
    "end": "389080"
  },
  {
    "text": "become a career developer that that is why I tend to talk more about this idea of",
    "start": "389080",
    "end": "394160"
  },
  {
    "text": "going a level deeper in you know down one layer abstraction yeah I think that's a good seg way to talk about my",
    "start": "394160",
    "end": "399800"
  },
  {
    "start": "397000",
    "end": "651000"
  },
  {
    "text": "talk a little bit um so you know I have a podcast called frontend first I run a",
    "start": "399800",
    "end": "405120"
  },
  {
    "text": "website called build guui so I'm I consider myself a front-end developer because that's where I spend most of my",
    "start": "405120",
    "end": "411440"
  },
  {
    "text": "time and attention but I've been a full stack developer for 10 years I've done a lot I started with laravel or not",
    "start": "411440",
    "end": "417960"
  },
  {
    "text": "laravel Symphony uh which is PHP web framework that was my first web framework and then I did a bunch of",
    "start": "417960",
    "end": "424039"
  },
  {
    "text": "rails and I kind of found myself getting nudged towards the front end and just",
    "start": "424039",
    "end": "429680"
  },
  {
    "text": "loved that part of building um and so I",
    "start": "429680",
    "end": "434919"
  },
  {
    "text": "eventually moved to Backbone back in the day and then Ember is really where I kind of cut my teeth on learning like",
    "start": "434919",
    "end": "441080"
  },
  {
    "text": "stateful UI development and these days I do react so um I like front-end",
    "start": "441080",
    "end": "447680"
  },
  {
    "text": "development that's where I like to spend my my time but I still like being able to ship complete apps so I've spent a",
    "start": "447680",
    "end": "454240"
  },
  {
    "text": "lot of time in both communities and you know a lot of this backend versus front-end stuff has been",
    "start": "454240",
    "end": "460120"
  },
  {
    "text": "going around and kind of to your point I think a lot of what the reason people",
    "start": "460120",
    "end": "465240"
  },
  {
    "text": "were talking past each other online not only just because Twitter encourages this kind of dialogue and it is",
    "start": "465240",
    "end": "472400"
  },
  {
    "text": "difficult you know I think I think it's easier to understand all these things when you're talking in person but",
    "start": "472400",
    "end": "479639"
  },
  {
    "text": "there was this debate that's been kind of going around for about a month or two there's just been some overlap with the",
    "start": "479639",
    "end": "484879"
  },
  {
    "text": "JavaScript and the backend communities and um the debate was basically like",
    "start": "484879",
    "end": "490400"
  },
  {
    "text": "whether it even makes sense like whether this is one way to fra frame it which is like has all this work that us front-end",
    "start": "490400",
    "end": "496879"
  },
  {
    "text": "folks have been doing in these front-end Frameworks are we Reinventing the wheel why are we spending time trying to like",
    "start": "496879",
    "end": "503840"
  },
  {
    "text": "recreate things that are already exist should somebody even learn um something",
    "start": "503840",
    "end": "509199"
  },
  {
    "text": "like react if they want to build an like a web application because for a web",
    "start": "509199",
    "end": "514240"
  },
  {
    "text": "application to work you have to learn the backend stuff what does it even mean to call Something Like Remix or next a",
    "start": "514240",
    "end": "520880"
  },
  {
    "text": "full stack framework when it doesn't have a lot of the things that come out of the box and something like rails or laravel so that was kind of um going",
    "start": "520880",
    "end": "528440"
  },
  {
    "text": "into my talk the context and really all I wanted to do was you know Ryan's talk",
    "start": "528440",
    "end": "534560"
  },
  {
    "text": "did a good job of like trying to argue and show why re what react is doing is",
    "start": "534560",
    "end": "539959"
  },
  {
    "text": "not just Reinventing the wheel it's not just like VC funding and US twiddling our thumbs and and basically like we",
    "start": "539959",
    "end": "546880"
  },
  {
    "text": "like JavaScript so we're just going to do it again but like in JavaScript do it this time in JavaScript yeah yeah",
    "start": "546880",
    "end": "553120"
  },
  {
    "text": "exactly so there's definitely something very interesting to um you know the stuff that's come out in the last few",
    "start": "553120",
    "end": "559320"
  },
  {
    "text": "years in react that I think everyone can like regardless if you're never going to write JavaScript in your life there's there's a an interesting idea there just",
    "start": "559320",
    "end": "567040"
  },
  {
    "text": "like there's an interest interesting idea with things like live view um from the Phoenix Community you know for my",
    "start": "567040",
    "end": "573360"
  },
  {
    "text": "listeners like they're going to be they're going to be very confused about a lot of this stuff because they're they're very backends Focus right",
    "start": "573360",
    "end": "579560"
  },
  {
    "text": "building like Json apis in go and stuff like that so um and I want you to correct me if I'm wrong my understanding",
    "start": "579560",
    "end": "585560"
  },
  {
    "text": "of this let's specifically talk about your talk um is you've got Frameworks",
    "start": "585560",
    "end": "592200"
  },
  {
    "text": "like larl and rails and they're what we are calling full stack Frameworks and by",
    "start": "592200",
    "end": "599560"
  },
  {
    "text": "default out of the box a frontend developer might call them a backend framework because the rendering Again by",
    "start": "599560",
    "end": "605640"
  },
  {
    "text": "default at least happens on the server so like rails laravel they're they're generating HTML CSS JavaScript server",
    "start": "605640",
    "end": "613200"
  },
  {
    "text": "side and then shipping it to the client and so you get these full round trips um whenever you like navigate Pages or or",
    "start": "613200",
    "end": "619160"
  },
  {
    "text": "take actions and then in the JavaScript Community for the last you know 10 years or so JavaScript developers on the",
    "start": "619160",
    "end": "625000"
  },
  {
    "text": "frontend have been building single page applications which is like everything happens client side right so like we're just shipping a",
    "start": "625000",
    "end": "631760"
  },
  {
    "text": "bunch of JavaScript to the client to the web browser and it's going to make API calls to a back end and kind of dynamically do everything on the front",
    "start": "631760",
    "end": "637839"
  },
  {
    "text": "end and now that JavaScript the JavaScript Community I should say is interested in serers side rendering for",
    "start": "637839",
    "end": "643720"
  },
  {
    "text": "a bunch of reasons performance SEO whatever that's what next and remix are are kind of doing and",
    "start": "643720",
    "end": "650519"
  },
  {
    "text": "N the argument is basically like well whoopy [ __ ] do like Ruby on Rails",
    "start": "650519",
    "end": "656760"
  },
  {
    "start": "651000",
    "end": "1150000"
  },
  {
    "text": "laravel they've been doing this for like 15 20 years whatever however long they've been along I'm not actually sure",
    "start": "656760",
    "end": "662320"
  },
  {
    "text": "but like this is nothing new so what what I'm understanding from like your talk and then of course from Ryan Florence's talk is like okay no there",
    "start": "662320",
    "end": "669240"
  },
  {
    "text": "actually is something different here with what javascript's doing what's the different thing so we can talk about",
    "start": "669240",
    "end": "675959"
  },
  {
    "text": "that I'm trying to think there's like a lot I have reacting to what you just said so the the first thing I want to",
    "start": "675959",
    "end": "681519"
  },
  {
    "text": "say is um react has had serers side rendering and this is a little confusing",
    "start": "681519",
    "end": "687399"
  },
  {
    "text": "but react has had serers side rendering for like eight years when next first came out which was like in",
    "start": "687399",
    "end": "693760"
  },
  {
    "text": "2015 that was one of the big um benefits that was probably the main reason people",
    "start": "693760",
    "end": "699279"
  },
  {
    "text": "started using Nex to begin with is because it was an easy setup for serers",
    "start": "699279",
    "end": "704360"
  },
  {
    "text": "side rendering you know it's more like you could think of it you can pre-render",
    "start": "704360",
    "end": "710160"
  },
  {
    "text": "something if you're still going to ship that spa and you're not going to have a server processing request at request",
    "start": "710160",
    "end": "715279"
  },
  {
    "text": "time but you could pre-render content but you could also set up a server that did the same thing that rails or laravel",
    "start": "715279",
    "end": "722240"
  },
  {
    "text": "does and it returns HTML at the time of the request but then it also you know",
    "start": "722240",
    "end": "730560"
  },
  {
    "text": "kicks in on the client after the first render so that subsequent navigations are happening on the client and that",
    "start": "730560",
    "end": "737600"
  },
  {
    "text": "gives you some benefits like it's more Snappy like you can render things faster or whatever so server side rendering is",
    "start": "737600",
    "end": "744519"
  },
  {
    "text": "something that has been around the thing that's new in the last year or two is server components which are different",
    "start": "744519",
    "end": "752760"
  },
  {
    "text": "than serers side rendering um so we can talk about those in just one second I",
    "start": "752760",
    "end": "758480"
  },
  {
    "text": "think the next thing I want to say is yes it's true that rails and larel",
    "start": "758480",
    "end": "764399"
  },
  {
    "text": "have had you know the ability to generate HTML CSS and JavaScript and",
    "start": "764399",
    "end": "771040"
  },
  {
    "text": "respond with that but uh you know I was listening to rails World from last year",
    "start": "771040",
    "end": "776800"
  },
  {
    "text": "uh podcasts because they just had like a a 20th anniversary or something of of of rails and it was a really cool",
    "start": "776800",
    "end": "783279"
  },
  {
    "text": "conference and I watched a lot of the talks I mean dhh is like one of my main programming kind of you know uh mentors",
    "start": "783279",
    "end": "790199"
  },
  {
    "text": "I guess I learned a lot from him um yeah you know and and a lot of yeah it's I",
    "start": "790199",
    "end": "796920"
  },
  {
    "text": "learned a ton from him and so I still follow his work and I follow the rails work even though I'm not using it as much these days and in this",
    "start": "796920",
    "end": "803519"
  },
  {
    "text": "podcast it was interesting because there was you know folks who were kind of DieHard rails fans they've been using",
    "start": "803519",
    "end": "808920"
  },
  {
    "text": "rail for 15 years and they were like talking about stimulus and turbo and the",
    "start": "808920",
    "end": "815880"
  },
  {
    "text": "different things that backend first Frameworks let's call them have added to like add more",
    "start": "815880",
    "end": "821560"
  },
  {
    "text": "interactivity on the front end and they say the amount of back flips I still do to get react in my rails app just so I",
    "start": "821560",
    "end": "828399"
  },
  {
    "text": "can install like a drop down or a modal right is crazy but they still do it so",
    "start": "828399",
    "end": "834279"
  },
  {
    "text": "that's the first point I would make to to your to the kind of perspective that like have we've already been able to do",
    "start": "834279",
    "end": "839480"
  },
  {
    "text": "this have do this I think there is something unique about react or you know pick your favorite frontend library that",
    "start": "839480",
    "end": "846079"
  },
  {
    "text": "has cracked this code of like composable sharable UI bits there's a model there",
    "start": "846079",
    "end": "852759"
  },
  {
    "text": "that has led to an ecosystem that makes back-end developers quote unquote do back flips to get react into their rails",
    "start": "852759",
    "end": "859759"
  },
  {
    "text": "app right and yes you have folks like dhh who who don't really like that because they don't like the complexity",
    "start": "859759",
    "end": "865720"
  },
  {
    "text": "to get there but there's something I think undeniable that even someone who has never done a front-end framework",
    "start": "865720",
    "end": "871680"
  },
  {
    "text": "like a next or remix knows that you get when you bring these kind of front-end Tools in libraries into your app so",
    "start": "871680",
    "end": "879639"
  },
  {
    "text": "that's kind of setting the stage and I think that's just that that alone is enough to say it's something there's",
    "start": "879639",
    "end": "884920"
  },
  {
    "text": "something different here there's a reason why those libraries in react are",
    "start": "884920",
    "end": "890959"
  },
  {
    "text": "higher quality work better easier to customize you don't get locked into",
    "start": "890959",
    "end": "896000"
  },
  {
    "text": "something like you know maybe bootstrap back in the day where it's really hard to change and customize people pick and",
    "start": "896000",
    "end": "901440"
  },
  {
    "text": "pull all these different components and hooks from react and it makes them you know raise the ceiling of their UI which",
    "start": "901440",
    "end": "908199"
  },
  {
    "text": "is kind of what my talk was about um so that's kind of the first part and then",
    "start": "908199",
    "end": "913519"
  },
  {
    "text": "we can go into the to the the the thing that was really Ryan's point which is kind of like what is different about the",
    "start": "913519",
    "end": "919120"
  },
  {
    "text": "server components um but that that's the first thing that I would say is just",
    "start": "919120",
    "end": "924920"
  },
  {
    "text": "like yeah that's kind of how I think about it you know so just to to repeat that back to you to make sure I",
    "start": "924920",
    "end": "931440"
  },
  {
    "text": "understand so the idea is that yes Ruby and rails Lille Jango pick your pick",
    "start": "931440",
    "end": "938759"
  },
  {
    "text": "your like you know tene kind of backend First full stack framework they've been",
    "start": "938759",
    "end": "944120"
  },
  {
    "text": "shipping a lot of stuff that's like in your words backend first right like you",
    "start": "944120",
    "end": "949880"
  },
  {
    "text": "know they've got an omm out of the box you can interact with your database they' got things for like background jobs and workers but the experience on",
    "start": "949880",
    "end": "957920"
  },
  {
    "text": "the client once gets there is subpar and that's why people are shoving react into",
    "start": "957920",
    "end": "963800"
  },
  {
    "text": "their into their full stack apps exactly and and then there's different ways that people cross that boundary but that's",
    "start": "963800",
    "end": "970959"
  },
  {
    "text": "exactly what my talk was about so my talk was called high floor high ceiling and the argument was these mature",
    "start": "970959",
    "end": "976600"
  },
  {
    "text": "backend first Frameworks have a high floor and a low ceiling the high floor is because their batteries included and",
    "start": "976600",
    "end": "983519"
  },
  {
    "text": "if you look at the larel docs on how to write a test for a background job or",
    "start": "983519",
    "end": "989279"
  },
  {
    "text": "Cron job that sends an email you're using all first-party Layel components and nothing like that exists in the",
    "start": "989279",
    "end": "995240"
  },
  {
    "text": "front end so if you start with a rail rails or level you're starting on the 10th floor building your app you don't",
    "start": "995240",
    "end": "1000839"
  },
  {
    "text": "have to pick and pull all these components together but the ceiling out of the box is going to be limited to",
    "start": "1000839",
    "end": "1006040"
  },
  {
    "text": "what HTML does or what JavaScript can do or you know things like HTM X or you add",
    "start": "1006040",
    "end": "1013480"
  },
  {
    "text": "live wire or all these other Frameworks that are meant to work in a back and first environment um those raise the",
    "start": "1013480",
    "end": "1020480"
  },
  {
    "text": "ceiling that's kind of what those backend Frameworks have been trying to do turbo as well you know turbo is like",
    "start": "1020480",
    "end": "1026880"
  },
  {
    "text": "a way for a rails app to do drag and drop without having to like leave kind",
    "start": "1026880",
    "end": "1032038"
  },
  {
    "text": "of the Rails world and go into react so they that's like the high floor low",
    "start": "1032039",
    "end": "1037240"
  },
  {
    "text": "ceiling and then those of us you know I kind of didn't tell the story but in the beginning of my talk I say like how did",
    "start": "1037240",
    "end": "1043319"
  },
  {
    "text": "I go from larel and rails to like you know backbone and Ember well I was working on this dashboard and I wanted I",
    "start": "1043319",
    "end": "1049840"
  },
  {
    "text": "had this like D3 chart and I wanted to hover a slice of the pie and animate all",
    "start": "1049840",
    "end": "1055520"
  },
  {
    "text": "the the visualizations and like I was in PHP PHP doesn't have anything for that so I",
    "start": "1055520",
    "end": "1061120"
  },
  {
    "text": "started looking at Ember and stuff like that tools that were made for this for UI and that's kind of where I got",
    "start": "1061120",
    "end": "1067120"
  },
  {
    "text": "because I wanted a higher ceiling I hit the ceiling of what I could do out of the box with something like Symphony and",
    "start": "1067120",
    "end": "1073280"
  },
  {
    "text": "I wanted that higher ceiling but those of us who are using like front end first",
    "start": "1073280",
    "end": "1079120"
  },
  {
    "text": "Frameworks we have that high ceiling because we're kind of living in the browser in the client but the back end",
    "start": "1079120",
    "end": "1086039"
  },
  {
    "text": "the floor dropped out from underneath us and you know that's now what we're working on adding things to so we're so",
    "start": "1086039",
    "end": "1094280"
  },
  {
    "text": "remix and next and all of these things that can raise the floor and we both want the same thing we all want a high",
    "start": "1094280",
    "end": "1100559"
  },
  {
    "text": "floor to start out building an app on the 10th floor and a high ceiling so that if it's good for our product to add",
    "start": "1100559",
    "end": "1107559"
  },
  {
    "text": "drag and drop we can do it easily we don't have to you know make a big architectural change to get data into",
    "start": "1107559",
    "end": "1114320"
  },
  {
    "text": "the client to enable these rich interactions so do you want I know you're not like a well I'm",
    "start": "1114320",
    "end": "1121960"
  },
  {
    "text": "pretty sure you're not a framework author right no no you're a user of of next and and remix and stuff um so is",
    "start": "1121960",
    "end": "1129400"
  },
  {
    "text": "what you want for these let's say front-end First full",
    "start": "1129400",
    "end": "1134880"
  },
  {
    "text": "stack Frameworks like next like next where the the experience is mostly been on making really great client uh",
    "start": "1134880",
    "end": "1141480"
  },
  {
    "text": "interactions with like serers side rendering but there's been less of a a backend Focus less of a background jobs",
    "start": "1141480",
    "end": "1147799"
  },
  {
    "text": "less of a database you know om experience is do you want them to to",
    "start": "1147799",
    "end": "1152960"
  },
  {
    "start": "1150000",
    "end": "1444000"
  },
  {
    "text": "push more features and more out of the box stuff for that kind of backend work",
    "start": "1152960",
    "end": "1159039"
  },
  {
    "text": "again or's background jobs that that kind of stuff yes the goal of my talk",
    "start": "1159039",
    "end": "1164280"
  },
  {
    "text": "was not to say like everyone should be using react now that we have server components or or everyone should be",
    "start": "1164280",
    "end": "1169360"
  },
  {
    "text": "using rails now that it has turbo or anything because all these Frameworks people use tools for lots of reasons and",
    "start": "1169360",
    "end": "1174840"
  },
  {
    "text": "they're all going to keep pushing on the boundaries of their current tools their current stack the backend Frameworks are",
    "start": "1174840",
    "end": "1181320"
  },
  {
    "text": "going to keep trying to raise a ceiling the front end people are going to raise a floor so I was trying in my talk to",
    "start": "1181320",
    "end": "1186400"
  },
  {
    "text": "highlight what I think the strengths of both communities are and what they could learn from each other so yes I think the",
    "start": "1186400",
    "end": "1192120"
  },
  {
    "text": "front-end Community can learn about cohesion from the backend Community because a lot of folks who have been doing front-end stuff have never seen",
    "start": "1192120",
    "end": "1198760"
  },
  {
    "text": "what it's like to create a model in active record in a rails app be able to",
    "start": "1198760",
    "end": "1203799"
  },
  {
    "text": "send an email and then just do it after the request um you respond with a request because you have a background",
    "start": "1203799",
    "end": "1210440"
  },
  {
    "text": "job system built in to be able to write a full stack test that tests the database to be able to set up a Cron job",
    "start": "1210440",
    "end": "1217120"
  },
  {
    "text": "um all of the stuff that is there's a cohesion and there's there there's a",
    "start": "1217120",
    "end": "1223720"
  },
  {
    "text": "certain level of expressiveness in the apis that you only get if the backend",
    "start": "1223720",
    "end": "1228760"
  },
  {
    "text": "framework author kind of puts a stake in the ground and says if you're making a rails app here's how you model your data",
    "start": "1228760",
    "end": "1234799"
  },
  {
    "text": "like you're going to use a relational database you're going to have foreign keys and the name is going to be you",
    "start": "1234799",
    "end": "1239960"
  },
  {
    "text": "know user undor ID lowercase like you have to just make a decision about that",
    "start": "1239960",
    "end": "1245440"
  },
  {
    "text": "and what that enables is this Rich cohesive apis for all the different",
    "start": "1245440",
    "end": "1250520"
  },
  {
    "text": "parts and the status quo in frontend land is just not that people pull",
    "start": "1250520",
    "end": "1255720"
  },
  {
    "text": "together services and there's a lot of bugs and time spent wiring them up",
    "start": "1255720",
    "end": "1261200"
  },
  {
    "text": "because your your CMS or database provider doesn't know about your background job how you write test for",
    "start": "1261200",
    "end": "1267039"
  },
  {
    "text": "all that stuff so I think the front-end Community can learn about this cohesion from the backend communities and I wish",
    "start": "1267039",
    "end": "1272919"
  },
  {
    "text": "I would like to see front-end Frameworks be more become more opinionated you know",
    "start": "1272919",
    "end": "1278400"
  },
  {
    "text": "when D when when dhh started rails like web Frameworks weren't really a thing and people think like oh it's just the",
    "start": "1278400",
    "end": "1284840"
  },
  {
    "text": "difference between backend and front end if you look at DHHS early talks he was on like a crusade for multiple years",
    "start": "1284840",
    "end": "1292360"
  },
  {
    "text": "just to convince DB database administrators like what you name your foreign key columns doesn't matter he",
    "start": "1292360",
    "end": "1298480"
  },
  {
    "text": "was like you know we're not snowflakes we all like to think we are but this is like the convention over configuration",
    "start": "1298480",
    "end": "1304440"
  },
  {
    "text": "thing and this is like the definition of bike shedding you're arguing about what color to paint the bike Shedd and doesn't matter it doesn't matter yeah so",
    "start": "1304440",
    "end": "1310960"
  },
  {
    "text": "he had to argue that you know for a long time and he was like you know rails is",
    "start": "1310960",
    "end": "1316600"
  },
  {
    "text": "Omas it's like my decision and you know I'm going to listen to people but like if you don't want to do",
    "start": "1316600",
    "end": "1322840"
  },
  {
    "text": "it it's not for you but that let that floor raise so high whereas again in in",
    "start": "1322840",
    "end": "1328840"
  },
  {
    "text": "front end in front end land right now the framework authors are just kind of like oh you can use cloud FL you can use",
    "start": "1328840",
    "end": "1334240"
  },
  {
    "text": "this you can put it on [ __ ] you can put it here you can use this service you can use clerk for o you can use o zero so",
    "start": "1334240",
    "end": "1340880"
  },
  {
    "text": "when you have that maximum flexibility that's kind of the price you pay okay I got to jump in here",
    "start": "1340880",
    "end": "1346440"
  },
  {
    "text": "because to a lot of people listening to this they might think especially from the frontend first uh podcast Community",
    "start": "1346440",
    "end": "1353440"
  },
  {
    "text": "ah Lane's a backend developer like he's on the side of rails and Jango uh",
    "start": "1353440",
    "end": "1358480"
  },
  {
    "text": "famously I am not um I'm a huge fan of dhh as well I've read 37 signals the the",
    "start": "1358480",
    "end": "1365440"
  },
  {
    "text": "like famous I guess you could call it a blog post it's more like an interactive website at this point but um great stuff",
    "start": "1365440",
    "end": "1371080"
  },
  {
    "text": "and dhh has been around for a long time and he's he's incredible the problem that I had have",
    "start": "1371080",
    "end": "1378159"
  },
  {
    "text": "had with rails and jeno over the years is that I've worked at companies that have processed pretty big amounts of",
    "start": "1378159",
    "end": "1384880"
  },
  {
    "text": "data at least by like rails standards um and it's not that like there",
    "start": "1384880",
    "end": "1392279"
  },
  {
    "text": "certainly is a component of like we were using rails wrong so I want to like put that out there as a caveat",
    "start": "1392279",
    "end": "1399120"
  },
  {
    "text": "but it does encourage you to do some things and go down some paths that that are that can be hard at scale um for",
    "start": "1399120",
    "end": "1406600"
  },
  {
    "text": "example we we ended up with this really thing where we had a full rails app in like this distributed you know",
    "start": "1406600",
    "end": "1413400"
  },
  {
    "text": "microservices system that was just doing like just doing background jobs and it",
    "start": "1413400",
    "end": "1419360"
  },
  {
    "text": "was so weird because it was like I could write this thing in go yeah and it's 15",
    "start": "1419360",
    "end": "1424559"
  },
  {
    "text": "lines of code but no I have to like do all of this stuff and ship Ruby to the server and set up Docker like all this",
    "start": "1424559",
    "end": "1431080"
  },
  {
    "text": "extra stuff just to get this background job running and just so it can go literally 50 times slower than it would",
    "start": "1431080",
    "end": "1437120"
  },
  {
    "text": "be if it was just a tiny little go app written in again like 20 or 30 lines so this brings me to my point which",
    "start": "1437120",
    "end": "1443600"
  },
  {
    "text": "is I get this idea of like a full stack let's just assume JavaScript for a minute a full stack JavaScript framework",
    "start": "1443600",
    "end": "1450960"
  },
  {
    "start": "1444000",
    "end": "1829000"
  },
  {
    "text": "that has you know amazing client side interactions has SSR has an OM let's just assume we get to this place where",
    "start": "1450960",
    "end": "1456919"
  },
  {
    "text": "it has all these features my concern is exactly what you said like that to get there you have to",
    "start": "1456919",
    "end": "1463600"
  },
  {
    "text": "have really strong opinions about a lot of things and the funny thing is I",
    "start": "1463600",
    "end": "1469279"
  },
  {
    "text": "actually am very much on the like in the camp of I love strong opinions in the",
    "start": "1469279",
    "end": "1474480"
  },
  {
    "text": "technology I use like I'm a go developer I love the fact that it ships with a standard formatter like right I I don't",
    "start": "1474480",
    "end": "1481000"
  },
  {
    "text": "use too many uh configurations in my editor I try to keep the defaults um for Simplicity sake but I like I like those",
    "start": "1481000",
    "end": "1490159"
  },
  {
    "text": "opinions at what I would call a library level yeah rather than a framework level",
    "start": "1490159",
    "end": "1495600"
  },
  {
    "text": "such that I can like compose the libraries that I need and they're all independent they're all like independent",
    "start": "1495600",
    "end": "1500799"
  },
  {
    "text": "and opinionated in their own right but like it's like my app is a snowflake but",
    "start": "1500799",
    "end": "1506919"
  },
  {
    "text": "my individual use cases aren't and and so it's almost like I just want to push those opinions down a level does that",
    "start": "1506919",
    "end": "1513520"
  },
  {
    "text": "does that make any sense it does make sense and it kind of goes to the other half of my talk which was so if I think",
    "start": "1513520",
    "end": "1520679"
  },
  {
    "text": "it's really a pendulum that we're talking about um there there is a tradeoff between something like cohesion",
    "start": "1520679",
    "end": "1528080"
  },
  {
    "text": "and and something like flexibility right there there's a tension there if you make something more cohesive you",
    "start": "1528080",
    "end": "1533760"
  },
  {
    "text": "restrict its public interface you know it's less flexible but it's easier to use and it's easier to use if you don't",
    "start": "1533760",
    "end": "1540480"
  },
  {
    "text": "for you for you not to have to understand everything that's going on which is a great thing a lot of times",
    "start": "1540480",
    "end": "1546240"
  },
  {
    "text": "especially like when I was starting out I could build so much with rails without really understanding all the pieces and",
    "start": "1546240",
    "end": "1552799"
  },
  {
    "text": "you know dhh talks about this a lot too he talks about conceptual compression and that's kind of his goal with",
    "start": "1552799",
    "end": "1558919"
  },
  {
    "text": "rails so I think the front end folks can learn from that but the other half of my",
    "start": "1558919",
    "end": "1564080"
  },
  {
    "text": "talk is basically exactly what you said which is what can the backend folks learn from the success of libraries in",
    "start": "1564080",
    "end": "1569399"
  },
  {
    "text": "the front end like react and it was basically this idea of composition I think composition has been a core value",
    "start": "1569399",
    "end": "1577440"
  },
  {
    "text": "of react since the beginning and I think it's pretty like I think it's pretty uncontroversial to say react has had",
    "start": "1577440",
    "end": "1584399"
  },
  {
    "text": "like the most influence among the front-end Frameworks and and that composition is",
    "start": "1584399",
    "end": "1590320"
  },
  {
    "text": "what has enabled this this ecosystem of components that are so good so easy to",
    "start": "1590320",
    "end": "1596720"
  },
  {
    "text": "use so powerful that even a rails developer of 15 or 20 years is going to",
    "start": "1596720",
    "end": "1601799"
  },
  {
    "text": "do back flips to get them into their serers side app right so I think if",
    "start": "1601799",
    "end": "1606960"
  },
  {
    "text": "that's kind of what my talk the second part of my talk was about if you look at kind of the no spooky action at a",
    "start": "1606960",
    "end": "1613679"
  },
  {
    "text": "distance kind of the locality of behavior even like the lexical scope that was kind of a more Nuance point but",
    "start": "1613679",
    "end": "1620080"
  },
  {
    "text": "really this idea of composition that is something that's really powerful it enables scalability",
    "start": "1620080",
    "end": "1626679"
  },
  {
    "text": "swapping out Parts when you need it and yes there's been plenty of people who have hit the ceiling of like performance",
    "start": "1626679",
    "end": "1632760"
  },
  {
    "text": "and scalability and something like a rails app and I think that there's no reason something like rails could",
    "start": "1632760",
    "end": "1639320"
  },
  {
    "text": "Embrace some of those patterns still provide you a cohesive experience out of the box but use this idea of like",
    "start": "1639320",
    "end": "1647720"
  },
  {
    "text": "instead of for just as a as a concrete example like I'm working on a rails app right now actually in a Consulting",
    "start": "1647720",
    "end": "1652960"
  },
  {
    "text": "project and the whole file based approach with autoloading that was like",
    "start": "1652960",
    "end": "1658640"
  },
  {
    "text": "a solution to a problem a long time ago but being able to just open a page in a",
    "start": "1658640",
    "end": "1664240"
  },
  {
    "text": "next app and see everything that that page depends on by following the import graph I think is that is something that",
    "start": "1664240",
    "end": "1671039"
  },
  {
    "text": "even backend developers love about working in react that is all in one file you can have a second class or module or",
    "start": "1671039",
    "end": "1677399"
  },
  {
    "text": "function in a file you don't have to break it up until you need to it's not the same in these in traditional backend",
    "start": "1677399",
    "end": "1683240"
  },
  {
    "text": "Frameworks like rails so um that's more of like a code maintainability thing in terms of",
    "start": "1683240",
    "end": "1689880"
  },
  {
    "text": "scalability as opposed to Performance but I think the idea is the same so anyways to kind of to just kind of answer your point I think there's",
    "start": "1689880",
    "end": "1696080"
  },
  {
    "text": "tension here between cohesion and composition or flexibility and you definitely have to",
    "start": "1696080",
    "end": "1702559"
  },
  {
    "text": "use the right tool for the job maybe dhh would argue you shouldn't make a rails app to to have run a background job like",
    "start": "1702559",
    "end": "1708159"
  },
  {
    "text": "a rails app is for like a web application that like a user using in that on us that one's on us so that's an",
    "start": "1708159",
    "end": "1714760"
  },
  {
    "text": "argument but uh in either case I I think that's kind of yeah I think I think",
    "start": "1714760",
    "end": "1720320"
  },
  {
    "text": "there's room for both and um yeah it's it's it's ultimately yeah it's not a",
    "start": "1720320",
    "end": "1725399"
  },
  {
    "text": "back it's it's it's not a it's not a a back and forth with no progress I think we're all getting better at bending that",
    "start": "1725399",
    "end": "1732320"
  },
  {
    "text": "curve you know yeah it was definitely just to give a little bit of History like it was definitely uh",
    "start": "1732320",
    "end": "1738600"
  },
  {
    "text": "when your only tool is a hammer everything looks like a nail sort of situation like we had a bunch of only",
    "start": "1738600",
    "end": "1744360"
  },
  {
    "text": "Ruby devs and so it's was like H how do we do code we do code with rails rails",
    "start": "1744360",
    "end": "1749399"
  },
  {
    "text": "new yeah and we're gonna go look up like every possible way to do this in rails",
    "start": "1749399",
    "end": "1755840"
  },
  {
    "text": "it's like where you've got the auto prefix on your Google search like in Ruby on Rails yeah how tox thing right",
    "start": "1755840",
    "end": "1763240"
  },
  {
    "text": "um so yeah that that that was definitely on us I think like bootstrap versus",
    "start": "1763240",
    "end": "1768480"
  },
  {
    "text": "Tailwind is like a good example of of of this idea that's that's in my head which is like you know it would be a shame I",
    "start": "1768480",
    "end": "1776279"
  },
  {
    "text": "think if like a big framework a big meta framework like next was like we're shipping bootstrap right and you just",
    "start": "1776279",
    "end": "1783880"
  },
  {
    "text": "get bootstrap right it has opinions about your like about what your UI will",
    "start": "1783880",
    "end": "1788960"
  },
  {
    "text": "look like rather than just how you build your UI whereas like why I I think why Tailwind has gotten so much traction and",
    "start": "1788960",
    "end": "1795399"
  },
  {
    "text": "like we use Tailwind to boot Dev even though you look at it and there's there's no way looking at boev that you'd be like oh this uses Tailwind it's",
    "start": "1795399",
    "end": "1802519"
  },
  {
    "text": "just yeah MH style whatever you want with Tailwind it just has opinions about",
    "start": "1802519",
    "end": "1807640"
  },
  {
    "text": "like how you're going to do it right um and I'm a big fan of that I'm a big fan of like grabbing composable bits that",
    "start": "1807640",
    "end": "1815679"
  },
  {
    "text": "have tons of opinions and using them the right way right again we we use go um we",
    "start": "1815679",
    "end": "1821279"
  },
  {
    "text": "use its Auto forat we use it like built-in formatter um let me pit you",
    "start": "1821279",
    "end": "1826399"
  },
  {
    "text": "this idea of interfaces so my take is that I I would like my Frameworks and my",
    "start": "1826399",
    "end": "1831519"
  },
  {
    "start": "1829000",
    "end": "2226000"
  },
  {
    "text": "libraries and my languages to ship more standardized interfaces and less and and and care a",
    "start": "1831519",
    "end": "1839320"
  },
  {
    "text": "little bit less about the implementations um I I believe this is how rails does like mailers uh if I",
    "start": "1839320",
    "end": "1845559"
  },
  {
    "text": "understood our conversation in Montana correctly like they'll ship an interface this is what you need to send an email",
    "start": "1845559",
    "end": "1851679"
  },
  {
    "text": "it's like you need to provide a subject and a you know a two email and a body and whatever but like you that",
    "start": "1851679",
    "end": "1858360"
  },
  {
    "text": "implementation can be Amazon SCS it can be send grid and like that to me is very",
    "start": "1858360",
    "end": "1863760"
  },
  {
    "text": "valuable yes it is very valuable because again when if you listen to like the",
    "start": "1863760",
    "end": "1869240"
  },
  {
    "text": "Zeitgeist on Twitter and you create a new Next app and you ask how do I send",
    "start": "1869240",
    "end": "1874880"
  },
  {
    "text": "an email you get oh you can use anything and there's services that make it easy",
    "start": "1874880",
    "end": "1881000"
  },
  {
    "text": "and how do you do Au sure you can drop in like a clerk and it's going to give you a nice component but like it's the",
    "start": "1881000",
    "end": "1887639"
  },
  {
    "text": "it's the stuff between the components it's it's all of the pieces in between that where where the hidden complexity",
    "start": "1887639",
    "end": "1895159"
  },
  {
    "text": "lies right and and even with things like latency where you have service a over",
    "start": "1895159",
    "end": "1900639"
  },
  {
    "text": "here and B over here and there's no one thinking about using this service with",
    "start": "1900639",
    "end": "1905760"
  },
  {
    "text": "that service right and there's a lot of complexity there so I think rails",
    "start": "1905760",
    "end": "1910840"
  },
  {
    "text": "probably compared to when you use it last has gotten a lot better at this and then definitely Frameworks like Lille",
    "start": "1910840",
    "end": "1916799"
  },
  {
    "text": "where they have something like what you're saying an action mailer and you know it has like a connect and a send",
    "start": "1916799",
    "end": "1923159"
  },
  {
    "text": "and all all these these interfaces and no one sends emails from their own rail server because sending emails today",
    "start": "1923159",
    "end": "1929760"
  },
  {
    "text": "would be like it's possible but it's you know most people would use whatever Google AWS convert kit and there there's",
    "start": "1929760",
    "end": "1938120"
  },
  {
    "text": "adapters it's like an adapter pattern but you can still test the things and in",
    "start": "1938120",
    "end": "1944720"
  },
  {
    "text": "test mode you use like the test mailer and and it opens up your HTML email in",
    "start": "1944720",
    "end": "1951399"
  },
  {
    "text": "the browser and you can see it and you can assert against it again this and this is done for everyone so every rails",
    "start": "1951399",
    "end": "1958279"
  },
  {
    "text": "app that sends emails has tests that look the same regardless if you're using uh SCS to send your actual emails and",
    "start": "1958279",
    "end": "1965279"
  },
  {
    "text": "production yeah and this is true at like every layer and there's a lot of layers you know and um active record is the",
    "start": "1965279",
    "end": "1972880"
  },
  {
    "text": "same way it's an OM but you can swap it out with different databases but the",
    "start": "1972880",
    "end": "1978440"
  },
  {
    "text": "interface is the same and so if I can do user find one and get a user object I",
    "start": "1978440",
    "end": "1986000"
  },
  {
    "text": "don't know if I'm going to postgress or MySQL or even like [ __ ] but um you know",
    "start": "1986000",
    "end": "1991399"
  },
  {
    "text": "my job and my mailer and my UI all know how to find a user for a for an ID and",
    "start": "1991399",
    "end": "1997120"
  },
  {
    "text": "it's just you know it yeah I think I think that's that's a good way to",
    "start": "1997120",
    "end": "2002399"
  },
  {
    "text": "approach this so that's the one where to me at least and this is this is mostly a",
    "start": "2002399",
    "end": "2008240"
  },
  {
    "text": "personal preference thing that one's just up like one level too high for me so in in go for example the standard",
    "start": "2008240",
    "end": "2014399"
  },
  {
    "text": "Library ships um there's a like database SQL package and it ships a standard interface for a SQL database um it's",
    "start": "2014399",
    "end": "2021320"
  },
  {
    "text": "pretty lowlevel it basically just handles like connection pooling and like escaping of variables there's like a",
    "start": "2021320",
    "end": "2027600"
  },
  {
    "text": "couple like pretty lowlevel things but it assumes like SQL is the interface so",
    "start": "2027600",
    "end": "2032639"
  },
  {
    "text": "like you're sending you know SQL strings essentially or you're building SQL strings and like every om in go that's",
    "start": "2032639",
    "end": "2039919"
  },
  {
    "text": "relatively popular I guess technically the one I use actually isn't an omm it's more like a a query Builder",
    "start": "2039919",
    "end": "2046880"
  },
  {
    "text": "um Builder we actually write the query in SQL and then it compiles to like go bindings interes um but like I like",
    "start": "2046880",
    "end": "2055480"
  },
  {
    "text": "that again this is just a like I would just push that one down one level and that's really like a that's like an",
    "start": "2055480",
    "end": "2061118"
  },
  {
    "text": "interface preference but I think that the higher level the higher level Point here is like how can you write a text",
    "start": "2061119",
    "end": "2067760"
  },
  {
    "text": "test that you know seeds your data layer with some data and someone signs up and",
    "start": "2067760",
    "end": "2074679"
  },
  {
    "text": "you verify that their you know that user was created and then an email was sent",
    "start": "2074679",
    "end": "2079760"
  },
  {
    "text": "that says hi their first name I think that's like a good example of like the kind of thing that you should be able to",
    "start": "2079760",
    "end": "2085560"
  },
  {
    "text": "do when you're building an app and the kind of thing that Frameworks like larel and rails have thought a lot about and",
    "start": "2085560",
    "end": "2091280"
  },
  {
    "text": "the kind of thing that just gets brushed aside or swept under the rug when you're piecing together your own pieces because",
    "start": "2091280",
    "end": "2097400"
  },
  {
    "text": "it's hard to get all of those pieces working like that and testing is just one benefit um regardless of how you",
    "start": "2097400",
    "end": "2103720"
  },
  {
    "text": "feel about testing I just think that you should be able to do that kind of thing and and you know that's an example of",
    "start": "2103720",
    "end": "2109200"
  },
  {
    "text": "the things that enables yeah and I I should be fair here in the sense that like I just mixed a language and a",
    "start": "2109200",
    "end": "2115240"
  },
  {
    "text": "framework right I was talking about go standard library and to be fair very few go developers",
    "start": "2115240",
    "end": "2121200"
  },
  {
    "text": "use if like framework or meta framework like Django or rails but like it it is",
    "start": "2121200",
    "end": "2127200"
  },
  {
    "text": "to be expected that rails or larel is going to have more opinions than a language right because it would' be more",
    "start": "2127200",
    "end": "2132800"
  },
  {
    "text": "like comparing go to Ruby which in that case go has way more opinions than Ruby",
    "start": "2132800",
    "end": "2138040"
  },
  {
    "text": "has about how you should ship apps but it's still relevant because it's kind of like if you're a go developer and you",
    "start": "2138040",
    "end": "2143400"
  },
  {
    "text": "need to access data how you're going to do it and so that's kind of what you're saying you know I think I think uh Elixir and Phoenix is is another good",
    "start": "2143400",
    "end": "2149920"
  },
  {
    "text": "one I think Jose theim he came from the rails community and he made Phoenix which is a framework for Elixir and I",
    "start": "2149920",
    "end": "2156000"
  },
  {
    "text": "think their data layer is more more like strs it's less like Rich objects you know um it's not like the active model",
    "start": "2156000",
    "end": "2163440"
  },
  {
    "text": "pattern but again that's more of like a preference kind of and there's some pros and cons to that but it's more about",
    "start": "2163440",
    "end": "2169520"
  },
  {
    "text": "thinking about how all the pieces work together um so yeah I think that's that",
    "start": "2169520",
    "end": "2174560"
  },
  {
    "text": "cohesion bit that was what I'm trying to what I was trying to communicate and the talk about cohesion and how it's worth",
    "start": "2174560",
    "end": "2181359"
  },
  {
    "text": "addressing and we're thinking about because because we in the front Community we love to talk about",
    "start": "2181359",
    "end": "2186880"
  },
  {
    "text": "composition flexibility and you picking your own pieces but we don't acknowledge",
    "start": "2186880",
    "end": "2192119"
  },
  {
    "text": "that there is a cost there is a cost of flexibility and um that cost is that",
    "start": "2192119",
    "end": "2197680"
  },
  {
    "text": "it's harder to use and um you lose some cohesion and there's things you don't think about there's more bugs that are",
    "start": "2197680",
    "end": "2202960"
  },
  {
    "text": "introduced so that's kind of that was really the idea there you have to make choices and sometimes you make bad",
    "start": "2202960",
    "end": "2208040"
  },
  {
    "text": "choices yes exactly something else you may me think said made me think you know",
    "start": "2208040",
    "end": "2213760"
  },
  {
    "text": "why is my podcast called frontend first actually there's there's kind of a story",
    "start": "2213760",
    "end": "2218800"
  },
  {
    "text": "here well we used to be called like the Ember map podcast because we were teaching Ember but when we thought about",
    "start": "2218800",
    "end": "2224319"
  },
  {
    "text": "what was really important to us and this kind of goes along with my",
    "start": "2224319",
    "end": "2229440"
  },
  {
    "start": "2226000",
    "end": "2352000"
  },
  {
    "text": "journey I guess from like focusing more on the front end even though I started in the backend is that frontend first is",
    "start": "2229440",
    "end": "2237240"
  },
  {
    "text": "less about it's it's it's not about being a frontend developer front end",
    "start": "2237240",
    "end": "2242359"
  },
  {
    "text": "first the idea there is that when you're building anything the motivation the the",
    "start": "2242359",
    "end": "2248040"
  },
  {
    "text": "the the motivation for what you're building should be derived from a feature a user value a product benefit",
    "start": "2248040",
    "end": "2257440"
  },
  {
    "text": "yeah and this was one thing that I actually really loved when I moved two front-end Frameworks because like you",
    "start": "2257440",
    "end": "2263160"
  },
  {
    "text": "said they didn't ship with a bootstrap or anything that was opinionated you're really starting from okay what does the",
    "start": "2263160",
    "end": "2270240"
  },
  {
    "text": "product need to do and I'm going to build a front end and try it out and then everything that",
    "start": "2270240",
    "end": "2278319"
  },
  {
    "text": "goes back is kind of going to derive from the front end feature I'm building whereas at least back in the day if you",
    "start": "2278319",
    "end": "2283800"
  },
  {
    "text": "started a rails app and you were making like a Blog you might scaffold a Blog uh",
    "start": "2283800",
    "end": "2289440"
  },
  {
    "text": "resource and it's going to give you like blog index URL and a Blog new URL and a",
    "start": "2289440",
    "end": "2296079"
  },
  {
    "text": "Blog ID edit URL that's already like putting opinions into your into your UI",
    "start": "2296079",
    "end": "2303079"
  },
  {
    "text": "which may or may not be good for your app or your users but as UI got more rich on the web it's like I don't want",
    "start": "2303079",
    "end": "2310280"
  },
  {
    "text": "my data my database modeling shouldn't be leaking into my front end like the",
    "start": "2310280",
    "end": "2315480"
  },
  {
    "text": "front end should be driving everything in the back end and of course I'm going to use like good database modeling",
    "start": "2315480",
    "end": "2321160"
  },
  {
    "text": "techniques to make sure my data is normalized and fast and everything but at the end of the day the way the UI",
    "start": "2321160",
    "end": "2327240"
  },
  {
    "text": "looks shouldn't be driven by the database model it should be driven by the the feature and the benefit and if I",
    "start": "2327240",
    "end": "2332839"
  },
  {
    "text": "want to make a new post and have it show up in a modal because when you create a new contact on your phone that's like the nice way to that's like what is best",
    "start": "2332839",
    "end": "2339160"
  },
  {
    "text": "for the user that should be independent of of the backend technology so that's that's another that's another aspect of",
    "start": "2339160",
    "end": "2345599"
  },
  {
    "text": "the front end first thing that's that's a really good point I I really liked",
    "start": "2345599",
    "end": "2350760"
  },
  {
    "text": "that that bit sometimes I say that like your types should flow from the database",
    "start": "2350760",
    "end": "2357440"
  },
  {
    "start": "2352000",
    "end": "2813000"
  },
  {
    "text": "to the front end but I think this is such an important caveat that doesn't mean that",
    "start": "2357440",
    "end": "2363079"
  },
  {
    "text": "your product decisions should right exactly it's cuz like it is so nice this",
    "start": "2363079",
    "end": "2368839"
  },
  {
    "text": "is why like you know typescripts really popular right now and and like a frustrating thing for our app is that we've got go on the back end typescript",
    "start": "2368839",
    "end": "2374680"
  },
  {
    "text": "on the front end so if we want like our types to flow we have to do a conversion step like from our go types to our",
    "start": "2374680",
    "end": "2380640"
  },
  {
    "text": "typescript types so that everything can come down to the front end and like we trust that a field is going to exist in",
    "start": "2380640",
    "end": "2386240"
  },
  {
    "text": "the type that we expect in the browser um all the way back to like our data model in the in the database but there's",
    "start": "2386240",
    "end": "2392359"
  },
  {
    "text": "an interface there and we make decisions all the time like fairly manual decisions to like okay this endpoint",
    "start": "2392359",
    "end": "2398040"
  },
  {
    "text": "like yeah it accesses like four different data models but the data it returns is going to be like some custom",
    "start": "2398040",
    "end": "2404839"
  },
  {
    "text": "mashup of that data right um it's going to be like these three fields from this one these four fields from this one and",
    "start": "2404839",
    "end": "2411240"
  },
  {
    "text": "it's just because this is a very product driven endpoint that does a very specific thing and it's not like I don't",
    "start": "2411240",
    "end": "2418440"
  },
  {
    "text": "know it's it's the opposite of this would be like a very",
    "start": "2418440",
    "end": "2423480"
  },
  {
    "text": "opinionated like restful and I I do scare quotes there on purpose like restful API where just everything is",
    "start": "2423480",
    "end": "2430400"
  },
  {
    "text": "exactly one crud operation on one resource and that feels nice as a developer it",
    "start": "2430400",
    "end": "2437839"
  },
  {
    "text": "feels clean but like you said sometimes it makes building a a product driven UI",
    "start": "2437839",
    "end": "2444280"
  },
  {
    "text": "hard and subar and and more difficult than it needs to be yes you those two should be absolutely separate 100% and I",
    "start": "2444280",
    "end": "2452160"
  },
  {
    "text": "and I actually think it's just like you can think about it like you know null constraints on a database there is business logic that affects whether a",
    "start": "2452160",
    "end": "2459400"
  },
  {
    "text": "field is has null constraint or not is nullable right um that's something that",
    "start": "2459400",
    "end": "2464880"
  },
  {
    "text": "you want to do at the database level to prevent like impossible States from existing in your app but how you show it",
    "start": "2464880",
    "end": "2472200"
  },
  {
    "text": "in the UI is is just very different but I find a lot of times these technical decisions do bleed into product",
    "start": "2472200",
    "end": "2479560"
  },
  {
    "text": "decisions and so I think that rails for example encouraging like different URLs",
    "start": "2479560",
    "end": "2486720"
  },
  {
    "text": "for every operation that's already way too much for me I don't want to be told anything about you know if I'm going to",
    "start": "2486720",
    "end": "2493359"
  },
  {
    "text": "delete a to-do that I have to go to the edit page first I just want to clear it on the home screen right and I want",
    "start": "2493359",
    "end": "2499960"
  },
  {
    "text": "tools that enable me to do that I actually think that graph ql was is a good way to think about this even if you",
    "start": "2499960",
    "end": "2506440"
  },
  {
    "text": "never used it or regardless of what you think about it the fact is that graph fully embrac",
    "start": "2506440",
    "end": "2513280"
  },
  {
    "text": "this kind of frontend first thinking and mindset because it was designed to to let the front end query exactly what it",
    "start": "2513280",
    "end": "2520000"
  },
  {
    "text": "needed from the back end for the purpose of a page or a screen or an interaction",
    "start": "2520000",
    "end": "2525640"
  },
  {
    "text": "and um there were some really cool libraries actually Ken wheeler worked on one called URL and um it could pull data",
    "start": "2525640",
    "end": "2533520"
  },
  {
    "text": "from different graphql endpoints so to your example like you're making four different tables and you're aggregating",
    "start": "2533520",
    "end": "2538599"
  },
  {
    "text": "them and uh but it carried type information so that's an example where the front end is determining the query",
    "start": "2538599",
    "end": "2545839"
  },
  {
    "text": "it's saying I need you know the tweets with just the body and the like count but I don't need anything else and I",
    "start": "2545839",
    "end": "2551440"
  },
  {
    "text": "also want like the followers of these people so I'm going to do a join all the type information is going to flow from",
    "start": "2551440",
    "end": "2557160"
  },
  {
    "text": "the back end to the front end let's say but um it's not it's not making it's not",
    "start": "2557160",
    "end": "2563240"
  },
  {
    "text": "uh what's the word I'm looking for it's not like nudging you to build a certain UI you know just because the types are",
    "start": "2563240",
    "end": "2569720"
  },
  {
    "text": "coming from that it's a graphql is let is being driven by the product by the front end by the by the user flow that",
    "start": "2569720",
    "end": "2575800"
  },
  {
    "text": "you're building so I think all tools should do that regardless um but I really think that the front-end folks",
    "start": "2575800",
    "end": "2582040"
  },
  {
    "text": "the front end Frameworks have nailed this and the flexibility of the UI of creating new pages and components of",
    "start": "2582040",
    "end": "2588960"
  },
  {
    "text": "being able to add you know different functions and handlers and endpoints kind of wherever you need them does help",
    "start": "2588960",
    "end": "2596319"
  },
  {
    "text": "give you more of a blank canvas and and and is more product focused it's it's more like grounded in the product um and",
    "start": "2596319",
    "end": "2604040"
  },
  {
    "text": "I think that's something that they've done well as well just especially for some my listeners that might not be familiar with graphql um at least as it",
    "start": "2604040",
    "end": "2611520"
  },
  {
    "text": "pertains to this discussion one of the interesting things about graphql is that you as a front-end",
    "start": "2611520",
    "end": "2617040"
  },
  {
    "text": "developer you're not you're not like going and looking up docs for an API and",
    "start": "2617040",
    "end": "2622960"
  },
  {
    "text": "like seeing what's available to you it's it's a much more flexible Paradigm where in fact the the API out of the box is",
    "start": "2622960",
    "end": "2630079"
  },
  {
    "text": "self-documenting so you can like make queries against it to see what's available to you and in your queries you",
    "start": "2630079",
    "end": "2636680"
  },
  {
    "text": "tell the API what you want kind of like you do a sequel right like you specify the",
    "start": "2636680",
    "end": "2641760"
  },
  {
    "text": "fields that you want returned back to you and I think I'm not going to say there's no use cases for it the Big",
    "start": "2641760",
    "end": "2647319"
  },
  {
    "text": "Challenge I ran into with it was that it does open you up to all this flexibility but it also",
    "start": "2647319",
    "end": "2654920"
  },
  {
    "text": "pushes I would argue in some ways it's a leaky abstraction in the sense that it pushes a lot of performance stuff down",
    "start": "2654920",
    "end": "2660680"
  },
  {
    "text": "to like front end decisions in the sense of like you try to do a big aggregation",
    "start": "2660680",
    "end": "2665760"
  },
  {
    "text": "of grabbing a bunch of stuff and it's not necessarily obvious to you as a front end developer that that's going to",
    "start": "2665760",
    "end": "2671240"
  },
  {
    "text": "do like a crazy amount of joins on the back end micr services and then like",
    "start": "2671240",
    "end": "2676280"
  },
  {
    "text": "yeah n plus one as well like and it's like why is this taking 12 seconds to return totally and so then you have to",
    "start": "2676280",
    "end": "2682280"
  },
  {
    "text": "like jump into the back end anyway and start to debug uh performance but the idea this idea of like giving front end",
    "start": "2682280",
    "end": "2687839"
  },
  {
    "text": "developers a more flexible exactly way of of accessing data from the back end I think is is is at least the right flow",
    "start": "2687839",
    "end": "2695640"
  },
  {
    "text": "to think about I agree with you and and it's always going to be the case that the actual Tech you're using in the back",
    "start": "2695640",
    "end": "2700880"
  },
  {
    "text": "end will influence like the front end code a little bit obviously like even if you're using rest or whatever but um yes",
    "start": "2700880",
    "end": "2708079"
  },
  {
    "text": "graphql can leak a little bit in the sense that you have to you have to know in the same way that like you said SQL",
    "start": "2708079",
    "end": "2713720"
  },
  {
    "text": "can leak I mean you could write crazy SQL queries and someone who knows SQL",
    "start": "2713720",
    "end": "2719000"
  },
  {
    "text": "would just be able to say no you should do a join you shouldn't do selects in a loop you should add an index so yes",
    "start": "2719000",
    "end": "2724960"
  },
  {
    "text": "there's times where you have to dive down a layer but um yeah the idea is is I think the right one I don't know how",
    "start": "2724960",
    "end": "2731040"
  },
  {
    "text": "much time you have left but we can talk about server components a little bit if we want to wrap up with that yeah let's do I I just had um one more thing to say",
    "start": "2731040",
    "end": "2737960"
  },
  {
    "text": "on that uh which was that about graphql just because it's a funny experience I had when you interact with a restful is",
    "start": "2737960",
    "end": "2745599"
  },
  {
    "text": "API like for example stripe you usually have a rate limit like you can only make so many requests and that's generally",
    "start": "2745599",
    "end": "2751599"
  },
  {
    "text": "really easy to reason about as the client you can be like okay I'll only make 10 requests per second you put some rate limiter on it whatever",
    "start": "2751599",
    "end": "2757680"
  },
  {
    "text": "um when I was interacting with the Facebook Graph API which is backed by graphql they build you based on CPU on",
    "start": "2757680",
    "end": "2765319"
  },
  {
    "text": "their servers so you have to like read the headers and be like oh that that API",
    "start": "2765319",
    "end": "2771319"
  },
  {
    "text": "request I just made used like you know however much CPU time and I only have this much time left and so again like",
    "start": "2771319",
    "end": "2778040"
  },
  {
    "text": "it's just pushing this idea back on the client of like you can do whatever you want you can join all those users and",
    "start": "2778040",
    "end": "2784119"
  },
  {
    "text": "all those posts together and get back that data but like my take five seconds and it might really limmit like how many",
    "start": "2784119",
    "end": "2790000"
  },
  {
    "text": "requests you're able to make um very interesting I I I never knew that but that makes sense because um yeah because",
    "start": "2790000",
    "end": "2796720"
  },
  {
    "text": "you can aggregate a bunch of queries into one like graphql supports like putting a ton of stuff in a single query",
    "start": "2796720",
    "end": "2802160"
  },
  {
    "text": "if that's what you need then they're like well people are going to send us expensive queries so yeah we need to",
    "start": "2802160",
    "end": "2807520"
  },
  {
    "text": "look at how expensive it is and charge them based on that exactly okay cool let's uh let's uh hop into the the RSC",
    "start": "2807520",
    "end": "2813559"
  },
  {
    "start": "2813000",
    "end": "3529000"
  },
  {
    "text": "stuff yeah so this really is just like I I would say for your listeners um even",
    "start": "2813559",
    "end": "2818920"
  },
  {
    "text": "if you're not at all care about what's happening in react land there is an idea",
    "start": "2818920",
    "end": "2824079"
  },
  {
    "text": "here just like with the graph kale discussion that is worth looking at because I think this idea will will like",
    "start": "2824079",
    "end": "2830000"
  },
  {
    "text": "infect other communities and it's a really interesting idea so if if you like what I'm about to say I would",
    "start": "2830000",
    "end": "2835920"
  },
  {
    "text": "encourage you to W watch Ryan's talk mind the gap from the conference because he does a really good job explaining it but basically so we kind of talked at",
    "start": "2835920",
    "end": "2843000"
  },
  {
    "text": "the beginning how like servers side rendering of HTML uh has been in react for a while and server components which",
    "start": "2843000",
    "end": "2850960"
  },
  {
    "text": "are you know it's kind of hard the naming is tough but server components are something different they are a new",
    "start": "2850960",
    "end": "2857280"
  },
  {
    "text": "feature coming to react 19 and ultimately what they're trying to",
    "start": "2857280",
    "end": "2864119"
  },
  {
    "text": "solve is similar to the graphql thing they actually came out of relay relay",
    "start": "2864119",
    "end": "2870720"
  },
  {
    "text": "was this idea of using graphql collocated within your react components",
    "start": "2870720",
    "end": "2876319"
  },
  {
    "text": "and then there was this build time step that would say ah the notifications count needed the notifications for the",
    "start": "2876319",
    "end": "2882720"
  },
  {
    "text": "current user and this messages component needed you know the late latest five",
    "start": "2882720",
    "end": "2888800"
  },
  {
    "text": "messages and the people and the authors of those things we could take those static queries and put them together and",
    "start": "2888800",
    "end": "2896040"
  },
  {
    "text": "um make the request on your behalf that's how relay Works which is a library that you know Facebook uses but",
    "start": "2896040",
    "end": "2902400"
  },
  {
    "text": "never really gained widespread adoption okay but",
    "start": "2902400",
    "end": "2907559"
  },
  {
    "text": "at the end of the day if you just step back whether you're the rails guy who's bringing in a drop down right or to a",
    "start": "2907559",
    "end": "2915839"
  },
  {
    "text": "rails app or you're a react guy and you're bringing in a database through",
    "start": "2915839",
    "end": "2921480"
  },
  {
    "text": "some node server like the hard thing is like moving the data back and forth",
    "start": "2921480",
    "end": "2926880"
  },
  {
    "text": "because when you add Rich UI stuff you're adding State on the client so you",
    "start": "2926880",
    "end": "2932079"
  },
  {
    "text": "have stateful UI you have a drop down that opens and closes uh",
    "start": "2932079",
    "end": "2937480"
  },
  {
    "text": "you have a table that you can sort but the table's data comes from a database",
    "start": "2937480",
    "end": "2942880"
  },
  {
    "text": "right and uh you can Resort it using the URL so that you keep the Sorting Logic",
    "start": "2942880",
    "end": "2948079"
  },
  {
    "text": "on the server but a lot of people again do back flips to bring in react because they want a fast sort or they want",
    "start": "2948079",
    "end": "2954760"
  },
  {
    "text": "something instant all sorts of UI interactions that they want to be instant happen on the",
    "start": "2954760",
    "end": "2959880"
  },
  {
    "text": "client so this like idea of like shuffling State back and forth and data back and forth is really where so much",
    "start": "2959880",
    "end": "2967160"
  },
  {
    "text": "of the complexity lives today regardless of which stack you're using and um this is really the problem",
    "start": "2967160",
    "end": "2974880"
  },
  {
    "text": "that server components were designed to solve server components run on the server but they only run on the server",
    "start": "2974880",
    "end": "2981319"
  },
  {
    "text": "so this is different from the serers side rendering where we would pre-render HTML but then once your app kicks in it",
    "start": "2981319",
    "end": "2988520"
  },
  {
    "text": "kind of takes over on the client and we start doing like client navigation and client rendering this is more like a",
    "start": "2988520",
    "end": "2994359"
  },
  {
    "text": "rails controller like it only runs on the server ever and returns never",
    "start": "2994359",
    "end": "2999520"
  },
  {
    "text": "runs again on the client it never runs again on the client okay and what's",
    "start": "2999520",
    "end": "3004880"
  },
  {
    "text": "fascinating about this is that exactly the reason you",
    "start": "3004880",
    "end": "3009920"
  },
  {
    "text": "would use something like a rails controller which can coordinate takes in a request it can access data from the",
    "start": "3009920",
    "end": "3017200"
  },
  {
    "text": "data layer and it can return a response and it is in a secure server",
    "start": "3017200",
    "end": "3023680"
  },
  {
    "text": "it's in your server so it has direct access to the database it has all of your API secrets in the",
    "start": "3023680",
    "end": "3029240"
  },
  {
    "text": "environment because it lives and only ever runs on the server that's what a server component is but it's that",
    "start": "3029240",
    "end": "3036520"
  },
  {
    "text": "packaged in the same component interface that a react component is so it's literally like an HTML tag it's angle",
    "start": "3036520",
    "end": "3043880"
  },
  {
    "text": "bracket invocation name of component and then prop passing but conceptually you're",
    "start": "3043880",
    "end": "3050520"
  },
  {
    "text": "running like a controller in a rails app right so like it feels the same as a",
    "start": "3050520",
    "end": "3055799"
  },
  {
    "text": "developer it feels like playing with Legos because like yes it feels like like just dropping in a component which",
    "start": "3055799",
    "end": "3062119"
  },
  {
    "text": "is really easy to think about and this is where it gets interesting it composes",
    "start": "3062119",
    "end": "3068599"
  },
  {
    "text": "in the same way that react components compose so um it's pretty fascinating so",
    "start": "3068599",
    "end": "3076640"
  },
  {
    "text": "you say why would I want if I'm rendering a users's table and in rails I",
    "start": "3076640",
    "end": "3081880"
  },
  {
    "text": "would make a request to like slash users table and the controller gets the request it fetches latest 100 users from",
    "start": "3081880",
    "end": "3087599"
  },
  {
    "text": "the database and then it returns HTML with the table and all the response you can think about that as",
    "start": "3087599",
    "end": "3094040"
  },
  {
    "text": "rendering a user table right so why would I want to render a users's table",
    "start": "3094040",
    "end": "3100720"
  },
  {
    "text": "as a component instead well components compose and it",
    "start": "3100720",
    "end": "3105839"
  },
  {
    "text": "turns out that you can compose server and client components together so I can",
    "start": "3105839",
    "end": "3111440"
  },
  {
    "text": "actually put a modal component that's a good old client side react component",
    "start": "3111440",
    "end": "3117839"
  },
  {
    "text": "that opens up a modal and it uses animation and it's it is running in the client but inside of it as it's children",
    "start": "3117839",
    "end": "3124400"
  },
  {
    "text": "I can drop a users's table and that users's table is doing the same",
    "start": "3124400",
    "end": "3130760"
  },
  {
    "text": "thing in the first pass and it outputs an HTML table of users and only the",
    "start": "3130760",
    "end": "3136359"
  },
  {
    "text": "result gets sent to the front end but it gets slotted in the modal and so it's",
    "start": "3136359",
    "end": "3142400"
  },
  {
    "text": "kind of this new there's a is it like hiding in the JavaScript somewhere or hiding in like a shadow Dom or something",
    "start": "3142400",
    "end": "3148559"
  },
  {
    "text": "it's it's an no it no so it gets there's there's a serialization format called an",
    "start": "3148559",
    "end": "3153960"
  },
  {
    "text": "RSC payload and it is effectively a serialized version of like that HTML",
    "start": "3153960",
    "end": "3160160"
  },
  {
    "text": "that that table generated so sitting in like JavaScript memory serialized",
    "start": "3160160",
    "end": "3165319"
  },
  {
    "text": "waiting to be rendered the client can request it if it does a render",
    "start": "3165319",
    "end": "3170359"
  },
  {
    "text": "pass right so let's say I navigate let's say I navigate and then I render a modal",
    "start": "3170359",
    "end": "3175920"
  },
  {
    "text": "and the modal is like normal client side JavaScript that's been loaded on the browser and is running in the client",
    "start": "3175920",
    "end": "3183079"
  },
  {
    "text": "side yeah you know JavaScript thread and it animates up the modal but it's",
    "start": "3183079",
    "end": "3188359"
  },
  {
    "text": "children ran before so yes it could be like hidden in it's like hidden in let's",
    "start": "3188359",
    "end": "3194720"
  },
  {
    "text": "let's just say the payload is like yeah I guess this would be so it's like already fetched but it's like sitting in",
    "start": "3194720",
    "end": "3199880"
  },
  {
    "text": "memory somewhere exactly right now it works on like a per route basis so yes it's just like in it's like prefetched",
    "start": "3199880",
    "end": "3206000"
  },
  {
    "text": "in yes but it's interesting because it's just the result of rendering the table",
    "start": "3206000",
    "end": "3211720"
  },
  {
    "text": "which means that now this users table it looks it looks way cleaner than than",
    "start": "3211720",
    "end": "3218599"
  },
  {
    "text": "these Frameworks did before because the actual server component is like an async function and you can await database.",
    "start": "3218599",
    "end": "3225359"
  },
  {
    "text": "Fetch and then you know you can like return a table and you don't have to",
    "start": "3225359",
    "end": "3230400"
  },
  {
    "text": "like use effects it's not rendering ever it's just the good old request response cycle and it looks and feels like any",
    "start": "3230400",
    "end": "3237280"
  },
  {
    "text": "any server request Handler from any serers side framework but it composes with the re re of react tree and um",
    "start": "3237280",
    "end": "3245640"
  },
  {
    "text": "Ryan's talk is basically about this and how what's cool about this is",
    "start": "3245640",
    "end": "3251040"
  },
  {
    "text": "that it really is a new way to think about getting rid of the network in the",
    "start": "3251040",
    "end": "3258240"
  },
  {
    "text": "sense that I could just return that server tree or that that that user table",
    "start": "3258240",
    "end": "3264040"
  },
  {
    "text": "which is a server component and it renders like a ERT HTML right y but",
    "start": "3264040",
    "end": "3270680"
  },
  {
    "text": "let's say I have those users and it was a prop that I fetch from the database I can actually swap the users table with a",
    "start": "3270680",
    "end": "3276720"
  },
  {
    "text": "a sortable users table and just pass the prop and have that table render it but because that table has the Ed client",
    "start": "3276720",
    "end": "3284480"
  },
  {
    "text": "directive right and it has react State and it lets you toggle it all of a sudden like that data in that RSC format",
    "start": "3284480",
    "end": "3293160"
  },
  {
    "text": "is getting passed but it feels like passing props and it feels like working on one app that's kind of the goal of",
    "start": "3293160",
    "end": "3300119"
  },
  {
    "text": "this right and if you think about it it's the goal of all of these abstractions like you want to feel like you're building one app and just because",
    "start": "3300119",
    "end": "3306200"
  },
  {
    "text": "I have to you know make the tech switch like HTM X is a great example of that it",
    "start": "3306200",
    "end": "3311799"
  },
  {
    "text": "doesn't feel like I'm building like a client app and a server app it's just like one app but this is really kind of",
    "start": "3311799",
    "end": "3317200"
  },
  {
    "text": "Tak it to the next level and it really Embraces the power of composition in react so um yeah pretty fascinating",
    "start": "3317200",
    "end": "3323839"
  },
  {
    "text": "stuff I need to dig a little bit more into RSC so we use kned as like our backend for front end abev um which I'm",
    "start": "3323839",
    "end": "3330480"
  },
  {
    "text": "like brand new to I've done a bunch of view in the past but this is like my first time using a meta framework and it has a bunch of ways to do you know",
    "start": "3330480",
    "end": "3336480"
  },
  {
    "text": "server side rendering and like or do it on the client but I know it's fairly different than what RFC are doing so I",
    "start": "3336480",
    "end": "3343520"
  },
  {
    "text": "need to give it um another look and by the way for everyone listening when we keep saying Ryan we're talking about",
    "start": "3343520",
    "end": "3349559"
  },
  {
    "text": "Ryan Florence yes he's the remix guyy who I have not yet had on the Pod so if",
    "start": "3349559",
    "end": "3354760"
  },
  {
    "text": "you know him bother him and tell him I'm sure he'd love to come on I'm sure he'd love to come on the Pod Ryan's not only",
    "start": "3354760",
    "end": "3361039"
  },
  {
    "text": "the author of remix he's one of the most important people in the react community and the frontend community for the last 10 years I mean a lot of his work his",
    "start": "3361039",
    "end": "3368480"
  },
  {
    "text": "open source work has influenced a lot of the apis that came to react he had this thing that was like component component",
    "start": "3368480",
    "end": "3375319"
  },
  {
    "text": "um which was like a pretty big in I mean a lot of it was inspiration for even things like hooks it influenced the",
    "start": "3375319",
    "end": "3382559"
  },
  {
    "text": "design of a lot of the things that came to react because he was solving these problems for his himself and you know",
    "start": "3382559",
    "end": "3389039"
  },
  {
    "text": "anyways remix is his framework and it added a lot of features around",
    "start": "3389039",
    "end": "3396520"
  },
  {
    "text": "things like forms and action handling which react now has and and react has",
    "start": "3396520",
    "end": "3401559"
  },
  {
    "text": "pulled from a lot of influences but I think re remix did a great job like showing an actual proof of concept like",
    "start": "3401559",
    "end": "3408119"
  },
  {
    "text": "working version of all of this in a react app and um you know part of the reason",
    "start": "3408119",
    "end": "3415480"
  },
  {
    "text": "I'm so excited about server components is that I think we will be",
    "start": "3415480",
    "end": "3420880"
  },
  {
    "text": "able to get more cohesion in our front-end Frameworks because now something like a a database could ship a",
    "start": "3420880",
    "end": "3428480"
  },
  {
    "text": "component that lets you like have that declarative query but it's part of the component and it composes and you don't",
    "start": "3428480",
    "end": "3434119"
  },
  {
    "text": "have you know you can make a form that's something like what rails gives you where it knows the users where they're",
    "start": "3434119",
    "end": "3439480"
  },
  {
    "text": "coming from because it can read the validations and like the null constraints and the server side types",
    "start": "3439480",
    "end": "3445559"
  },
  {
    "text": "this is the other thing thing you will really love about this if you play Mega demo app with react server components",
    "start": "3445559",
    "end": "3450599"
  },
  {
    "text": "the types are just you're only ever in the server so you have typescript set up",
    "start": "3450599",
    "end": "3455960"
  },
  {
    "text": "you have something like Prisma or drizzle or whatever that's returning a type data structure and typescript and",
    "start": "3455960",
    "end": "3461760"
  },
  {
    "text": "then you render your UI and the types are just you're only in the server",
    "start": "3461760",
    "end": "3466880"
  },
  {
    "text": "that's finep and then you pass the props and then the types pass through props just like they pass through props and",
    "start": "3466880",
    "end": "3472640"
  },
  {
    "text": "react components so that is an amazing like magical moment for sure but I think",
    "start": "3472640",
    "end": "3477839"
  },
  {
    "text": "it will be really interesting to see yeah form libraries that are server components um or use a mix of server and",
    "start": "3477839",
    "end": "3485520"
  },
  {
    "text": "client components but the server components can like dynamically read the schema and the types of your data and",
    "start": "3485520",
    "end": "3491480"
  },
  {
    "text": "show you validation errors again without you having to set all that stuff up because of that cohesion so I'll be",
    "start": "3491480",
    "end": "3497559"
  },
  {
    "text": "really interested to see the kind of abstractions that come out and react in the next 5 to 10 years because server",
    "start": "3497559",
    "end": "3503599"
  },
  {
    "text": "components are pretty they're pretty thought-provoking and and fascinating I need to do some more research but thank",
    "start": "3503599",
    "end": "3510240"
  },
  {
    "text": "you for coming on and doing a little bit of an eli5 I I appreciate it no problem",
    "start": "3510240",
    "end": "3515839"
  },
  {
    "text": "man for for everyone that's listening by the way um yeah yeah uh for everyone that's listening um if you're listening",
    "start": "3515839",
    "end": "3523720"
  },
  {
    "text": "on frontend first you might like backend banter it's another podcast if you're listening to backend banter you might",
    "start": "3523720",
    "end": "3529839"
  },
  {
    "start": "3529000",
    "end": "3565000"
  },
  {
    "text": "like front end first go check it out uh Sam is there anything else that you want to plug you know your Twitter your",
    "start": "3529839",
    "end": "3535039"
  },
  {
    "text": "YouTube anything like that for everybody to go check out yeah Twitter's probably a good place to keep up with me I I I",
    "start": "3535039",
    "end": "3540400"
  },
  {
    "text": "have a YouTube channel I haven't made a video in a bit because I had like three conference talks this year so I was just taking a little break but I'd like to",
    "start": "3540400",
    "end": "3547000"
  },
  {
    "text": "get back into that soon so uh yeah feel free to hit me up on Twitter if you have any questions and um yeah that's it man",
    "start": "3547000",
    "end": "3553280"
  },
  {
    "text": "thanks for having me that was a lot of fun dude yeah thanks Sam we'll talk to you later all right bye",
    "start": "3553280",
    "end": "3559838"
  },
  {
    "text": "[Music]",
    "start": "3560280",
    "end": "3566320"
  }
]