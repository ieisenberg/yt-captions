[
  {
    "text": "shipping to production for Oak Animal mean people are using your code and shipping to production for Haskell means",
    "start": "0",
    "end": "5640"
  },
  {
    "text": "you publish an academic paper all the Haskell people are just like oh my goodness side effects don't you just",
    "start": "5640",
    "end": "11460"
  },
  {
    "text": "want your computer to be a big black box that heats up why would it need to change anything in the world",
    "start": "11460",
    "end": "18080"
  },
  {
    "text": "[Music]",
    "start": "25940",
    "end": "39420"
  },
  {
    "text": "TJ great to have you with us why don't you take just a second and explain to me",
    "start": "39420",
    "end": "45000"
  },
  {
    "text": "like why you're such a big deal I see you everywhere the primogen's obsessed",
    "start": "45000",
    "end": "50100"
  },
  {
    "text": "with you tell us a bit about yourself sure at the risk I guess of sounding",
    "start": "50100",
    "end": "55320"
  },
  {
    "text": "quite presumptuous I'll explain why I'm a big deal that's not normally how I would phrase it but I'll I'll roll with",
    "start": "55320",
    "end": "61199"
  },
  {
    "text": "it yeah so I've been in open source for a while working on neovim primarily I've",
    "start": "61199",
    "end": "67080"
  },
  {
    "text": "written a lot of stuff for neovim both in core and in the plug-in landscape I",
    "start": "67080",
    "end": "72780"
  },
  {
    "text": "was one of the first people probably the first person to push for LSP inside of neovim you can go dig up some old issues",
    "start": "72780",
    "end": "79439"
  },
  {
    "text": "about that and I wrote our first version of the implementation which eventually was like went through a few iterations",
    "start": "79439",
    "end": "85439"
  },
  {
    "text": "and got merged and then did a lot of work after the merge to make it so that people can use it and",
    "start": "85439",
    "end": "92700"
  },
  {
    "text": "enjoy it I also spent a lot of time doing Lua integration so if you like some of the Lua stuff there I spent a",
    "start": "92700",
    "end": "98700"
  },
  {
    "text": "lot of time trying to polish some edges there to make it enjoyable to use and then I'm also the primary author of",
    "start": "98700",
    "end": "104820"
  },
  {
    "text": "telescope and Bim which is a pretty popular fuzzy finder and a lot of the stuff that we've done for neova man for",
    "start": "104820",
    "end": "110939"
  },
  {
    "text": "telescope we've done on my twitch stream which has been really fun so I'm also somewhat of a notorious memer on Twitter",
    "start": "110939",
    "end": "117380"
  },
  {
    "text": "which maybe that's the other place that people encounter me I just like to have fun and hang out with my friends there",
    "start": "117380",
    "end": "123780"
  },
  {
    "text": "yeah awesome yeah that's how I ran into you okay so you just used a lot of words that my guess is a lot of our listeners",
    "start": "123780",
    "end": "130979"
  },
  {
    "text": "won't be familiar with listeners to back in banter we are figuring out this back-end thing getting our first back-end job so let's start with neovim",
    "start": "130979",
    "end": "138180"
  },
  {
    "text": "I am a terrible typist so I've actually never been cool enough to use Vim I've",
    "start": "138180",
    "end": "143940"
  },
  {
    "text": "tried like 10 times can you explain to us what Vim is and what neovim is sure",
    "start": "143940",
    "end": "149099"
  },
  {
    "text": "Vim is a pretty old editor that attacks editor that has evolved and gotten a lot of really cool ideas and features over",
    "start": "149099",
    "end": "156300"
  },
  {
    "text": "many years and it evolved out of some really like difficult ways of editing",
    "start": "156300",
    "end": "162780"
  },
  {
    "text": "code you used to not be able to view the text file that you're editing you used to have to read the line and then",
    "start": "162780",
    "end": "168660"
  },
  {
    "text": "overwrite a line or things like that like that's Ed and things before VI and so over time Vim came along and it",
    "start": "168660",
    "end": "176340"
  },
  {
    "text": "introduced a lot of really cool Concepts and ideas into this generally it's well known for being a modal editor uh that's",
    "start": "176340",
    "end": "183720"
  },
  {
    "text": "like where the meme you can't quit you don't know how to quit the reason that is is because unlike most like programs",
    "start": "183720",
    "end": "190260"
  },
  {
    "text": "or editing experiences when you type letters it doesn't just send those letters right away it has different",
    "start": "190260",
    "end": "195540"
  },
  {
    "text": "modes so the mode that you're normally in is called normal mode and so when you type something like j or k you go up or",
    "start": "195540",
    "end": "202739"
  },
  {
    "text": "down instead of j or k appearing in front of you so that's pretty confusing at first to people but you get into the",
    "start": "202739",
    "end": "209400"
  },
  {
    "text": "the mindset of it after a while and you can come to appreciate it and I think Vim was probably the one that really",
    "start": "209400",
    "end": "215280"
  },
  {
    "text": "popularized that editing Style there's a lot of benefits to it like that I like primarily the thing is you",
    "start": "215280",
    "end": "222780"
  },
  {
    "text": "have a lot more buttons and keyboard shortcuts that you can add to your workflow without having to do 80",
    "start": "222780",
    "end": "228659"
  },
  {
    "text": "different control combinations sorry emacs users out there but so then neovim",
    "start": "228659",
    "end": "235140"
  },
  {
    "text": "is a fork of Vim so it's not a rewrite or anything like that it's a real Fork we share a lot of the same code and",
    "start": "235140",
    "end": "240659"
  },
  {
    "text": "still to this day contribute patches back and forth between the two projects but neovim was focused more on",
    "start": "240659",
    "end": "248580"
  },
  {
    "text": "extensibility than Vim at least at the start that's somewhat maybe changed in vim's perspective primarily because",
    "start": "248580",
    "end": "255180"
  },
  {
    "text": "computers have changed a lot so it's now just like more possible to still have I think the kinds of things that people",
    "start": "255180",
    "end": "262019"
  },
  {
    "text": "expect from them like instantaneous feedback when you're typing all this other stuff that you couldn't do while",
    "start": "262019",
    "end": "268860"
  },
  {
    "text": "running like thousands or millions of instructions before yeah that used to",
    "start": "268860",
    "end": "273900"
  },
  {
    "text": "not be the case so there's some trade-offs I think that Bram has changed",
    "start": "273900",
    "end": "279180"
  },
  {
    "text": "his goal for Vim in some ways but regardless Neil them's goal has been on extensibility so neovim added things",
    "start": "279180",
    "end": "285300"
  },
  {
    "text": "like a way to control neovium via Leica remote protocol it has ways to asynchronously run plugins and most",
    "start": "285300",
    "end": "293160"
  },
  {
    "text": "notably for a lot of people it added Lua scripting as a primary way of integrating with the editor a lot of",
    "start": "293160",
    "end": "300240"
  },
  {
    "text": "those features exist in various different ways inside of him or exist now but that's like the main you could",
    "start": "300240",
    "end": "306660"
  },
  {
    "text": "say some main differences like for example an easy one is neofam ships with LSP support So for those who don't know",
    "start": "306660",
    "end": "312300"
  },
  {
    "text": "LSP is a protocol originally designed by Microsoft for vs and it uh",
    "start": "312300",
    "end": "319560"
  },
  {
    "text": "and uh it uh it's basically like a way to solve or at least minimize the",
    "start": "319560",
    "end": "325680"
  },
  {
    "text": "difficulties of adding language support to lots of different editors so neovim supports this protocol which allows you",
    "start": "325680",
    "end": "332280"
  },
  {
    "text": "to do things like go to definition find references rename autocomplete all those sorts of things at the same level as",
    "start": "332280",
    "end": "339539"
  },
  {
    "text": "what you'd get in some other editors so that comes by default with neovim and it's designed to be very extensible and",
    "start": "339539",
    "end": "346860"
  },
  {
    "text": "changeable and overrideable by the user yeah the LSP",
    "start": "346860",
    "end": "351960"
  },
  {
    "text": "protocol in general seems amazing to me I it's correct if I'm wrong the idea is basically you can write your plugin for",
    "start": "351960",
    "end": "357960"
  },
  {
    "text": "your language or ecosystem once and as long as you're following this LSP this language server protocol right yeah then",
    "start": "357960",
    "end": "364979"
  },
  {
    "text": "like any editor that supports the LSP can use your plugin yeah basically like instead of call like",
    "start": "364979",
    "end": "371880"
  },
  {
    "text": "instead of calling it a plug-in I'd just call it a server like you write a server and that server speaks LSP right and so",
    "start": "371880",
    "end": "378479"
  },
  {
    "text": "then editors that also know how to speak it then you get support for that language it's slightly more complicated",
    "start": "378479",
    "end": "384900"
  },
  {
    "text": "than that because there's lots of edge cases but you can get your like 80 20. like you can get 80 of the way there like really quickly in all the editors",
    "start": "384900",
    "end": "391680"
  },
  {
    "text": "without having to do that a bunch of extra things yep tell me a bit about like how your career has progressed did",
    "start": "391680",
    "end": "398400"
  },
  {
    "text": "you have full-time programming jobs and then you did open source do you still have a full-time programming job like",
    "start": "398400",
    "end": "403500"
  },
  {
    "text": "how has open source fit in with like your career as a developer yeah so I do have a full-time",
    "start": "403500",
    "end": "410699"
  },
  {
    "text": "programming job I work for a company called sourcecraft we we happen to be an open source company so like you can go",
    "start": "410699",
    "end": "416220"
  },
  {
    "text": "look at my code there or like the code that other people are working on at the company but I didn't always work in open source",
    "start": "416220",
    "end": "422340"
  },
  {
    "text": "I pretty much just stumbled into some stuff with open source at first I wanted to change",
    "start": "422340",
    "end": "427680"
  },
  {
    "text": "something inside of neovim when I was in college and I didn't have I literally",
    "start": "427680",
    "end": "432900"
  },
  {
    "text": "didn't know what I was doing I just was like copy pasting random stuff to get the code onto my computer and then some",
    "start": "432900",
    "end": "439560"
  },
  {
    "text": "really nice people helped me in my PR and then we got it merged and I thought that was really cool it just wrote some",
    "start": "439560",
    "end": "444960"
  },
  {
    "text": "code to change something that I use every day I like this I I could do I could see doing this again and so then I",
    "start": "444960",
    "end": "450900"
  },
  {
    "text": "did and then over time particularly like relating to the LSP stuff I was trying",
    "start": "450900",
    "end": "456960"
  },
  {
    "text": "to push that to be inside of neovim directly because I really believed and still believed",
    "start": "456960",
    "end": "464280"
  },
  {
    "text": "that's a huge win for the editor and there's a lot of Mind share and a lot of standardization you can do by putting",
    "start": "464280",
    "end": "471060"
  },
  {
    "text": "that into core that just don't that doesn't exist if you have to put it into a separate plugin",
    "start": "471060",
    "end": "477000"
  },
  {
    "text": "so yeah so then I was working on that a lot and then I was helping some other people with projects and basically someone on",
    "start": "477000",
    "end": "483539"
  },
  {
    "text": "the project asked me hey do you want to be a core maintainer like you're doing a lot of stuff here you would you like to",
    "start": "483539",
    "end": "489599"
  },
  {
    "text": "do that it would be helpful if you could do that and review other people's PR sometimes and merge them when they make",
    "start": "489599",
    "end": "495060"
  },
  {
    "text": "sense so yeah that's how I got on the neovim gore I tell people a lot like people that are just getting into",
    "start": "495060",
    "end": "501120"
  },
  {
    "text": "programming particularly the self-taught route that projects and open source are a great way to make a splash get known",
    "start": "501120",
    "end": "508800"
  },
  {
    "text": "for writing good code right like at the end of the day like I was a hiring manager I ran a team of go Developers",
    "start": "508800",
    "end": "514620"
  },
  {
    "text": "for a while and at the end of the day like when I'm hiring someone my job is to cut through the noise and find the",
    "start": "514620",
    "end": "520140"
  },
  {
    "text": "signal do you know how to write code that will solve the problems my company has and I've always felt like projects",
    "start": "520140",
    "end": "526140"
  },
  {
    "text": "and open source are a great way to provide all of this signal up front before the Eve like the interview even",
    "start": "526140",
    "end": "531420"
  },
  {
    "text": "happens has that been your experience has your open source stuff helped in your career getting jobs interviews or",
    "start": "531420",
    "end": "538680"
  },
  {
    "text": "just in the interview yeah I think there's a two-fold way that you get helped by doing open source",
    "start": "538680",
    "end": "544380"
  },
  {
    "text": "stuff the first one is I think when you actually build something you accelerate you're learning a lot so bio like",
    "start": "544380",
    "end": "550860"
  },
  {
    "text": "actually doing you you learn a lot more than just by reading or taking a class or whatever not that those things often",
    "start": "550860",
    "end": "557220"
  },
  {
    "text": "provide you like the Baseline that you need to be effective at building but then like eventually you need to move on",
    "start": "557220",
    "end": "562920"
  },
  {
    "text": "to building things and then so that's like the one side is you do learn a lot of new things and",
    "start": "562920",
    "end": "568800"
  },
  {
    "text": "then the other side is it does open up connections and like it's a way in a lot of ways it's a much easier thing to put",
    "start": "568800",
    "end": "575040"
  },
  {
    "text": "on your resume because you can point to something that someone can go look at instead of just like saying I worked at",
    "start": "575040",
    "end": "581880"
  },
  {
    "text": "Corporation X for three years I was managing several projects that shipped and delivered onto annual and everyone's",
    "start": "581880",
    "end": "587760"
  },
  {
    "text": "okay but I don't know what any of those things do or look like or whether they're still running all I have is your",
    "start": "587760",
    "end": "594420"
  },
  {
    "text": "side of the store so if instead it's like someone is out there using your stuff that you make that's a big signal to say",
    "start": "594420",
    "end": "601860"
  },
  {
    "text": "that you're able to ship code that people find useful which ultimately like unless you're writing Haskell you that's",
    "start": "601860",
    "end": "608519"
  },
  {
    "text": "like a goal of the company I think okay so you mentioned Haskell explain",
    "start": "608519",
    "end": "614540"
  },
  {
    "text": "what is a camel I I brought you onto the podcast partly to talk about functional",
    "start": "614540",
    "end": "619560"
  },
  {
    "text": "program can you explain your comment yeah so the big meme that I've been doing lately on on Twitter to people",
    "start": "619560",
    "end": "626100"
  },
  {
    "text": "because I've started really liking oh camel and people often ask why why oh camel over something like Haskell for",
    "start": "626100",
    "end": "633120"
  },
  {
    "text": "those who aren't aware they're both similar in a lot of both like deep and superficial ways they're very similar",
    "start": "633120",
    "end": "640140"
  },
  {
    "text": "but the joke often times that I like to do that someone told me on Twitter was like shipping to production for ocam",
    "start": "640140",
    "end": "646560"
  },
  {
    "text": "will mean people are using your code and shipping to production for Haskell means you publish an academic paper and",
    "start": "646560",
    "end": "652560"
  },
  {
    "text": "there's like a good nature joke that a lot of times Haskell's very focused on being an academic language which is like",
    "start": "652560",
    "end": "658440"
  },
  {
    "text": "very useful in people I think underestimate how many things and features and language ideas",
    "start": "658440",
    "end": "666060"
  },
  {
    "text": "were inspired by Haskell so those are like huge wins to the programming Community as a whole not just people",
    "start": "666060",
    "end": "672240"
  },
  {
    "text": "writing Haskell like people get inspired and they say oh that thing in Haskell is really cool I want that in my language",
    "start": "672240",
    "end": "677459"
  },
  {
    "text": "too or I want we need to figure out how we can take this idea and do it but but so regardless there's like this feeling",
    "start": "677459",
    "end": "683820"
  },
  {
    "text": "oftentimes that hassles a very academic language as opposed to oh camel feels very much an industrial version of",
    "start": "683820",
    "end": "690480"
  },
  {
    "text": "Haskell so just as a very simple example is Haskell is a pure language which",
    "start": "690480",
    "end": "696000"
  },
  {
    "text": "means you have to declare when something has a side effect pretty much like side effects being oh you print a standard",
    "start": "696000",
    "end": "701339"
  },
  {
    "text": "out or write to a file or things like that I'm not a Haskell expert so I'm sure there's some language extension",
    "start": "701339",
    "end": "706440"
  },
  {
    "text": "that changes that or whatever I don't know but in okay well you it's not a like a hundred percent pure language as",
    "start": "706440",
    "end": "713820"
  },
  {
    "text": "in you can just write to standard out anytime you want so those kinds of things that are like they're trade-offs",
    "start": "713820",
    "end": "720000"
  },
  {
    "text": "right in that you can have a skate patch is which I personally like because sometimes you just wanna",
    "start": "720000",
    "end": "725880"
  },
  {
    "text": "get something done and move to the next phase especially if you're exploring or you're going to delete this later or you",
    "start": "725880",
    "end": "732420"
  },
  {
    "text": "just want to like debug something you might want those sort of Escape hatches or imperative things or writing",
    "start": "732420",
    "end": "739620"
  },
  {
    "text": "something of mutability but those are often they're not the default path when you're in Oak Animal so it still feels",
    "start": "739620",
    "end": "746160"
  },
  {
    "text": "different than you can write pure code in C right or something like it would be what someone you know could say or whatever",
    "start": "746160",
    "end": "752279"
  },
  {
    "text": "but C doesn't lend itself it doesn't make those things the easy and default",
    "start": "752279",
    "end": "757620"
  },
  {
    "text": "thing where it's like for okay well it still feels like the default thing is to write pure functions and to use",
    "start": "757620",
    "end": "763019"
  },
  {
    "text": "immutability and stuff so there's that's like kind of an example of a difference between Haskell and O camel that I I",
    "start": "763019",
    "end": "768839"
  },
  {
    "text": "tend to prefer for a lot of projects the like oh camel side",
    "start": "768839",
    "end": "774540"
  },
  {
    "text": "yeah that sounds super interesting to me I learned a lot about functional programming in school and over time",
    "start": "774540",
    "end": "780060"
  },
  {
    "text": "working on the back end primarily with data like you could almost most of my career is actually mostly as a data",
    "start": "780060",
    "end": "785700"
  },
  {
    "text": "engineer I'm taking data from some place I'm doing some sort of transformation on it and putting it somewhere else that",
    "start": "785700",
    "end": "791160"
  },
  {
    "text": "sounds like a function yeah it sounds exactly like a function right for those who are listening and are not familiar with this kind of Purity thing that we",
    "start": "791160",
    "end": "797339"
  },
  {
    "text": "were talking about I'm going to do my best to Define it correct me if I'm wrong so a pure function is a function",
    "start": "797339",
    "end": "803220"
  },
  {
    "text": "that has some set number of inputs and produces some output and it does that deterministically every time and it",
    "start": "803220",
    "end": "808680"
  },
  {
    "text": "doesn't affect like other parts of the program it doesn't pull in variables from like Global State make changes to",
    "start": "808680",
    "end": "815100"
  },
  {
    "text": "them like all the changes that it produces are effectively returned as the",
    "start": "815100",
    "end": "820440"
  },
  {
    "text": "functions results yeah I I don't I wouldn't say deterministically because like",
    "start": "820440",
    "end": "826320"
  },
  {
    "text": "all like side effects are also deterministic but because the lighting is standard out is deterministic in the",
    "start": "826320",
    "end": "832860"
  },
  {
    "text": "same way I I but so you could say that it doesn't change any state would be",
    "start": "832860",
    "end": "838079"
  },
  {
    "text": "fine or that all given the same set of inputs it will always return the same set of outputs it's like a pretty easy",
    "start": "838079",
    "end": "844560"
  },
  {
    "text": "way to think about purity so like determinism is a requirement but it like impure things can be",
    "start": "844560",
    "end": "851700"
  },
  {
    "text": "deterministic too yes like print it's like pretty sure it's possible that your",
    "start": "851700",
    "end": "858180"
  },
  {
    "text": "system runs out of memory and like in the state but like less of those kinds of things which also like technically",
    "start": "858180",
    "end": "864779"
  },
  {
    "text": "can happen in a pure program as well right if in the middle of it you have to",
    "start": "864779",
    "end": "869940"
  },
  {
    "text": "allocate on the Heap but you out of memory okay sure but those are not when we're talking about it we're not really",
    "start": "869940",
    "end": "876180"
  },
  {
    "text": "talking about that kind of thing so the nice thing about pure functions is like for one they're really easy to",
    "start": "876180",
    "end": "882959"
  },
  {
    "text": "debug right like you can write a little unit test for your pure function you don't have to like dependency inject and all this crazy stuff to get it working",
    "start": "882959",
    "end": "889199"
  },
  {
    "text": "it's like really simple in immutability actually dependency instructions easier for Pure functions because if what you",
    "start": "889199",
    "end": "896100"
  },
  {
    "text": "have is you want to write something to the database then you take like the store as one of the arguments and then",
    "start": "896100",
    "end": "902940"
  },
  {
    "text": "so there's no implicit like Global database that you're connecting to you know that you're going to write to the",
    "start": "902940",
    "end": "909060"
  },
  {
    "text": "database because the database has to get passed in as an argument so not only is it like so it's possible to write to it",
    "start": "909060",
    "end": "915240"
  },
  {
    "text": "in a functional style but those things like get passed in so you can actually do like dependency injection a lot",
    "start": "915240",
    "end": "921660"
  },
  {
    "text": "easier if you're into that kind of thing cool and then the other big one on my",
    "start": "921660",
    "end": "927420"
  },
  {
    "text": "mind at least when I think about functional programming is like this idea of immutability right like we're creating constant variables we're",
    "start": "927420",
    "end": "933360"
  },
  {
    "text": "creating constants and then we're not changing them later which again can be really nice because you don't have to",
    "start": "933360",
    "end": "938459"
  },
  {
    "text": "worry about things like different threads updating the same variable at the same time overwriting memory but my",
    "start": "938459",
    "end": "943980"
  },
  {
    "text": "perception from afar has always been like okay we have these like core tenants of functional programming and my perception",
    "start": "943980",
    "end": "949740"
  },
  {
    "text": "has always been I'm going to like do as much of that stuff as I reasonably can in the language I'm working in which",
    "start": "949740",
    "end": "954899"
  },
  {
    "text": "usually happens to be go and that tends to produce better code but yeah I've",
    "start": "954899",
    "end": "960779"
  },
  {
    "text": "played mostly with Haskell it just gets in the it doesn't let me print easily like like Discord stuff so so if I'm",
    "start": "960779",
    "end": "967440"
  },
  {
    "text": "understanding correctly oh camel gives you or makes it the default to do the",
    "start": "967440",
    "end": "973320"
  },
  {
    "text": "pure stuff but the Escape patch is easier to access is that yeah and I",
    "start": "973320",
    "end": "978360"
  },
  {
    "text": "think so like for example in ocam well you can make structs and they're by default like destruct itself and all of",
    "start": "978360",
    "end": "985980"
  },
  {
    "text": "its fields are immutable you can't possibly change them but it you can Mark",
    "start": "985980",
    "end": "991440"
  },
  {
    "text": "certain fields for example as mutable Fields so this is really nice for example if you have a struct like a user",
    "start": "991440",
    "end": "997980"
  },
  {
    "text": "struct and you want to update the phone number so you probably would just create a new user but like like regardless",
    "start": "997980",
    "end": "1004040"
  },
  {
    "text": "right so like the user ID you can Mark is not mutable there's no way to",
    "start": "1004040",
    "end": "1009139"
  },
  {
    "text": "possibly change that user ID right but you can Mark phone number as like a mutable field and you can update the",
    "start": "1009139",
    "end": "1015740"
  },
  {
    "text": "phone number and that's perfectly like acceptable so that's like an example of Escape an escape hatch right where you",
    "start": "1015740",
    "end": "1022100"
  },
  {
    "text": "can say like in general by default when I just write a struct every single field is immutable you can't say that and go",
    "start": "1022100",
    "end": "1028459"
  },
  {
    "text": "right if you want the field to be accessible outside of your current package then it's public right okay and",
    "start": "1028459",
    "end": "1035959"
  },
  {
    "text": "then it's not super clear sometimes when you're passing something around and go if you've passed it by reference or by",
    "start": "1035959",
    "end": "1041418"
  },
  {
    "text": "value right so then all of a sudden you thought you updated something and some like receiver oh but I forgot to change",
    "start": "1041419",
    "end": "1047240"
  },
  {
    "text": "the receiver to take it by reference so now I updated it in here and it didn't actually change anything and then oh like and then right now you're like",
    "start": "1047240",
    "end": "1053419"
  },
  {
    "text": "trying to figure out why your updates aren't syncing between your go like structs and then you're sad right but",
    "start": "1053419",
    "end": "1059240"
  },
  {
    "text": "like you know camel you can't have that problem like you just either return a new one which is good or you can Mark",
    "start": "1059240",
    "end": "1065299"
  },
  {
    "text": "certain Fields as mutable and then you can change those that's a really powerful construct at the language level",
    "start": "1065299",
    "end": "1070700"
  },
  {
    "text": "and like by default and the other cool thing is you can look at the type and you can just tell what things can change you don't have to go see what functions",
    "start": "1070700",
    "end": "1077600"
  },
  {
    "text": "are available to you just go look at the structure and say oh well phone number's mutable but the other ones aren't cool",
    "start": "1077600",
    "end": "1082640"
  },
  {
    "text": "now I know or none of them are mutable like sweet none of them are none of them can change out from under me as soon as I know one then I or as soon as I know",
    "start": "1082640",
    "end": "1089539"
  },
  {
    "text": "this value it can't change which is really like very helpful the thing that I like a lot about",
    "start": "1089539",
    "end": "1095000"
  },
  {
    "text": "these Concepts is it makes it much simpler to reason about as well so like",
    "start": "1095000",
    "end": "1100100"
  },
  {
    "text": "when you're dealing with you if you have like a like a list or a slice that gets",
    "start": "1100100",
    "end": "1106220"
  },
  {
    "text": "passed in go right you don't know if the caller is going to change your list that kind of sucks you have to go read all",
    "start": "1106220",
    "end": "1113120"
  },
  {
    "text": "the code you know what I mean I just got finished writing like an exercise in our learn go course that's like okay here's",
    "start": "1113120",
    "end": "1119299"
  },
  {
    "text": "this append function you need to use it in this way all the time because if you use it this other way like bad things",
    "start": "1119299",
    "end": "1125419"
  },
  {
    "text": "are going to happen so just never do it but like the language doesn't enforce that right you could you can do it the",
    "start": "1125419",
    "end": "1130460"
  },
  {
    "text": "dumb way and there's no way like the type level to tell yourself whether that's going to happen or not so like in",
    "start": "1130460",
    "end": "1137360"
  },
  {
    "text": "Rust it's pretty nice that you can know whether something that's getting past the function can be mutated or not do",
    "start": "1137360",
    "end": "1143419"
  },
  {
    "text": "you pass a mutable reference to it or do you not pass a mutual reference or do you pass it completely and by value those are all like must do type level",
    "start": "1143419",
    "end": "1151820"
  },
  {
    "text": "things not convention not read the function name and hope that it's not lying to you the compiler tells you for",
    "start": "1151820",
    "end": "1159320"
  },
  {
    "text": "sure whether those things are right or wrong now that adds some overhead that's more learning there's some other there's some",
    "start": "1159320",
    "end": "1165679"
  },
  {
    "text": "other trade-offs that exist between that strategy and like in go I recognize that",
    "start": "1165679",
    "end": "1170780"
  },
  {
    "text": "but it's so much easier to reason about when you know for sure and you look at a struct oh I can't change these fields",
    "start": "1170780",
    "end": "1178100"
  },
  {
    "text": "that's really good feeling or you can't change this list that I passed in it can't be changed and compilers also like",
    "start": "1178100",
    "end": "1184520"
  },
  {
    "text": "that knowledge too yeah can make it more efficient I so I feel like there's this gradient out in",
    "start": "1184520",
    "end": "1190700"
  },
  {
    "text": "the programming language World okay you have like really strict languages that like don't allow you to do frankly dumb",
    "start": "1190700",
    "end": "1196580"
  },
  {
    "text": "things and you have languages like JavaScript that just allow you to do any old thing yeah and so as a go developer",
    "start": "1196580",
    "end": "1201679"
  },
  {
    "text": "I get to dunk on JavaScript a lot but now like I invite you on the podcast and I get to get dunked on okay and all the",
    "start": "1201679",
    "end": "1207200"
  },
  {
    "text": "Haskell people are just like oh my goodness side effects don't you just want your computer to be a big black box",
    "start": "1207200",
    "end": "1212419"
  },
  {
    "text": "that heats up why would it need to change anything in the world that's so we're all getting dunked on in a big",
    "start": "1212419",
    "end": "1217760"
  },
  {
    "text": "circle and then the JavaScript guys are getting they're dunking on the PHP guys but then they're all laughing at us",
    "start": "1217760",
    "end": "1223100"
  },
  {
    "text": "because they're driving Lambos exactly because it turns out we can make money writing terrible programming",
    "start": "1223100",
    "end": "1229280"
  },
  {
    "text": "languages yes yeah it's true it turns out people don't really care they want the their problem solved",
    "start": "1229280",
    "end": "1236020"
  },
  {
    "text": "yeah yeah exactly okay I think like when",
    "start": "1236020",
    "end": "1241580"
  },
  {
    "text": "I was in college it was explained to me by a professor like I write C plus plus because it gives me so much power I can",
    "start": "1241580",
    "end": "1248900"
  },
  {
    "text": "do anything and so when I was in school I thought oh okay the best developers use tools that just allow any old thing",
    "start": "1248900",
    "end": "1255620"
  },
  {
    "text": "because they're so good that they can write safe fast performance clever code",
    "start": "1255620",
    "end": "1261559"
  },
  {
    "text": "like my thinking on this has completely flipped it's no in in production I want",
    "start": "1261559",
    "end": "1266840"
  },
  {
    "text": "tooling that actually restricts me as much as possible from doing really dumb stuff the example I use in go is like",
    "start": "1266840",
    "end": "1273740"
  },
  {
    "text": "error handling so one of my pet peeves when I'm working on JavaScript code is I don't know if this function throws or",
    "start": "1273740",
    "end": "1279380"
  },
  {
    "text": "not like how do I know from the function signature if I need to wrap this in a try catch if this is a safe function to",
    "start": "1279380",
    "end": "1284840"
  },
  {
    "text": "call whereas in go even though it's not like I actually do really like the way rust handles errors at least go makes me",
    "start": "1284840",
    "end": "1290419"
  },
  {
    "text": "think about every single error and it's verbose and it's annoying but like I know that I've handled all of my errors",
    "start": "1290419",
    "end": "1296900"
  },
  {
    "text": "whereas in in JavaScript that's not the case how does this work in oh camel land",
    "start": "1296900",
    "end": "1302179"
  },
  {
    "text": "do you get that same feeling of when my code compiles I'm reasonably sure that I know where the faulty stuff is",
    "start": "1302179",
    "end": "1310400"
  },
  {
    "text": "yeah so there's in you know camel it has exceptions but most people write code that doesn't use exceptions so like in",
    "start": "1310400",
    "end": "1317780"
  },
  {
    "text": "general okay mole uses actually I should say rust uses the style that ocamel has",
    "start": "1317780",
    "end": "1324020"
  },
  {
    "text": "because rust was first you know okay so so there's a lot of inspiration in the",
    "start": "1324020",
    "end": "1329179"
  },
  {
    "text": "rust World from oh camel like in general you would write code that returns results or options in ocamel which",
    "start": "1329179",
    "end": "1336860"
  },
  {
    "text": "pretty much just means that instead of returning a value you return something that holds a value or an error and then",
    "start": "1336860",
    "end": "1343400"
  },
  {
    "text": "to continue operating like on stuff you need to handle both cases so you would",
    "start": "1343400",
    "end": "1349220"
  },
  {
    "text": "you could use a match statement and you can use pattern matching and all that good stuff you know camel very similar",
    "start": "1349220",
    "end": "1354679"
  },
  {
    "text": "if you've seen it in rust or some other languages as well that you",
    "start": "1354679",
    "end": "1359780"
  },
  {
    "text": "can do that so in general most people don't write code in ocamel that uses",
    "start": "1359780",
    "end": "1365240"
  },
  {
    "text": "exceptions because it's not very like functional style but it is nice that for",
    "start": "1365240",
    "end": "1371539"
  },
  {
    "text": "things that basically once again this is like an escape hatch thing it's nice for something that like is very exceptional",
    "start": "1371539",
    "end": "1378380"
  },
  {
    "text": "that could happen where you could just raise an exception and basically crash out of that thing or out of that thread",
    "start": "1378380",
    "end": "1384620"
  },
  {
    "text": "or whatever it's going to be and then that's okay and you don't have to manage all the additional like results and",
    "start": "1384620",
    "end": "1391100"
  },
  {
    "text": "options in all the other places where it's oh I see that we're not going to have enough memory or timed out in this really weird way or something we'll",
    "start": "1391100",
    "end": "1397460"
  },
  {
    "text": "raise an exception because it's actually exceptional not just like it failed",
    "start": "1397460",
    "end": "1402559"
  },
  {
    "text": "right because it's pretty dumb when you know that a function can fail pretty often for example like reading a user",
    "start": "1402559",
    "end": "1408980"
  },
  {
    "text": "from a database when you're given an ID yeah it could be nothing",
    "start": "1408980",
    "end": "1414559"
  },
  {
    "text": "right like yeah that's not an exception you know what I",
    "start": "1414559",
    "end": "1419840"
  },
  {
    "text": "mean that's just yeah there's two possibilities and it's pretty likely if you just send me a random ID that we're",
    "start": "1419840",
    "end": "1425179"
  },
  {
    "text": "not going to have this ID so then in that case you would return an option right and so then there might be some",
    "start": "1425179",
    "end": "1430400"
  },
  {
    "text": "user or none and then okay we'll force you to handle that case like both cases",
    "start": "1430400",
    "end": "1435799"
  },
  {
    "text": "yeah yeah that makes sense when would you not is there a case where",
    "start": "1435799",
    "end": "1441919"
  },
  {
    "text": "you would not use ocamel I know you're really liking it right now like what are the trade-offs in the real world where do I write oh camel code",
    "start": "1441919",
    "end": "1449059"
  },
  {
    "text": "yeah I'm still like exploring that myself to figure out where I think like the best places to use okmulr it's quite",
    "start": "1449059",
    "end": "1455480"
  },
  {
    "text": "interesting because there's a lot of projects in the O camel space right now that let you do really cool stuff so one",
    "start": "1455480",
    "end": "1461840"
  },
  {
    "text": "that I was just playing with last week's called melanch which is like the spice from Dune but it's also mixture in",
    "start": "1461840",
    "end": "1467900"
  },
  {
    "text": "French so the build tool for ocam was called Dune so if you see like random Dune references that's why I mean it's I",
    "start": "1467900",
    "end": "1475280"
  },
  {
    "text": "think it's called Dune because oh camels like camels right so they're walking in like in Dunes but regardless but people",
    "start": "1475280",
    "end": "1482299"
  },
  {
    "text": "are like I really like the book uh which I do too this great book or series stuff and I've already read the first one",
    "start": "1482299",
    "end": "1487760"
  },
  {
    "text": "sorry I know I'm gonna get yelled at now so it's a series there's more than one you're just a filthy casual I'm aware",
    "start": "1487760",
    "end": "1492860"
  },
  {
    "text": "okay everyone go DM DJ yeah exactly DM's open go complain about it I also liked",
    "start": "1492860",
    "end": "1499159"
  },
  {
    "text": "the movie so there you go I'm a filthy Normie I get it but foreign",
    "start": "1499159",
    "end": "1505700"
  },
  {
    "text": "but there's this project called melange which lets you write o camel code and it gets compiled to JavaScript so you can",
    "start": "1505700",
    "end": "1510980"
  },
  {
    "text": "like literally just write o camel and then you could put that into a JavaScript project like it'll just it'll",
    "start": "1510980",
    "end": "1517820"
  },
  {
    "text": "go there there's also other projects like I think they're called reason ML and rescript which let you like write o",
    "start": "1517820",
    "end": "1524120"
  },
  {
    "text": "camel syntax and then it gets compiled to JavaScript as well um so there's like some interesting",
    "start": "1524120",
    "end": "1530480"
  },
  {
    "text": "stuff going on where people are writing ocamel or okay we'll ask code for even",
    "start": "1530480",
    "end": "1535940"
  },
  {
    "text": "front-end stuff that I think is like going to be really interesting to see where some of that goes in the next few",
    "start": "1535940",
    "end": "1542720"
  },
  {
    "text": "years because I like the type system for okmul I don't like the type system for typescript like",
    "start": "1542720",
    "end": "1548000"
  },
  {
    "text": "I think typescripts typescript or like type system is like really weird and you can lie a lot and you can cheat and",
    "start": "1548000",
    "end": "1554659"
  },
  {
    "text": "people write code that relies on exceptions or relies on other things and so then you don't know I'm not a huge",
    "start": "1554659",
    "end": "1561020"
  },
  {
    "text": "like fan of it I feel often I don't know if things are going to work or not whereas when I yeah no Gamel and it",
    "start": "1561020",
    "end": "1566419"
  },
  {
    "text": "compiles I think oh I'm pretty sure it's gonna work my feeling about typescript is like I like it better than JavaScript",
    "start": "1566419",
    "end": "1572600"
  },
  {
    "text": "but I really hope it's not the future yeah yeah it is it has inherently bundled all the garbage that I hate",
    "start": "1572600",
    "end": "1579080"
  },
  {
    "text": "about JavaScript into the language like by nature of being a person yeah the trade-off was that they wanted it to be",
    "start": "1579080",
    "end": "1584419"
  },
  {
    "text": "JavaScript right which is like a pretty good idea like from their perspective even if I don't enjoy writing it all the",
    "start": "1584419",
    "end": "1591020"
  },
  {
    "text": "time but yeah so there's some stuff that's pretty interesting in that space like for o camel where you could write",
    "start": "1591020",
    "end": "1596179"
  },
  {
    "text": "basically like full stack o camel and your front end is also okay I'm all in your sharing type system and types and",
    "start": "1596179",
    "end": "1602720"
  },
  {
    "text": "all this other stuff that's a really cool camels everywhere yeah can't just camels on camels camels all the way down",
    "start": "1602720",
    "end": "1609200"
  },
  {
    "text": "but that Stack's gonna be a lot slower to develop in today just because of the",
    "start": "1609200",
    "end": "1614659"
  },
  {
    "text": "inertia and the tooling and a bunch of other stuff in like the JavaScript space like you can just log on to nextjs and",
    "start": "1614659",
    "end": "1621799"
  },
  {
    "text": "just have a website up in five seconds and install 30 npm packages that do all",
    "start": "1621799",
    "end": "1627020"
  },
  {
    "text": "these random things for you and then sure that's maybe not the your end product but maybe that gets you your",
    "start": "1627020",
    "end": "1633440"
  },
  {
    "text": "first thousand customers and I'm like still over here how would I use a database most effectively no cable so I",
    "start": "1633440",
    "end": "1638960"
  },
  {
    "text": "think there's some trade-offs there but in terms of things that people do use ocamel for a lot is really good for",
    "start": "1638960",
    "end": "1645620"
  },
  {
    "text": "writing other languages which is funny so there's a lot of languages that at least had their first implementation in O",
    "start": "1645620",
    "end": "1652640"
  },
  {
    "text": "camel it's really good at writing parsers and other tooling that like needs to handle a lot of cases but also",
    "start": "1652640",
    "end": "1658760"
  },
  {
    "text": "maybe plugins yeah what so neovim plugins right yeah there is a way to",
    "start": "1658760",
    "end": "1664159"
  },
  {
    "text": "write neovin plugins with it and I might explore some more of that later too but so basically there's it's a general",
    "start": "1664159",
    "end": "1669860"
  },
  {
    "text": "purpose programming language so anything that you could write like a back end for you could do that and there are people who are writing whole companies like in",
    "start": "1669860",
    "end": "1677000"
  },
  {
    "text": "ocamel there's also Lots some really like very popular projects like semcraft if you've ever heard of semcraft which",
    "start": "1677000",
    "end": "1684140"
  },
  {
    "text": "is like basically a way that you can search for vulnerabilities in code oh um",
    "start": "1684140",
    "end": "1689679"
  },
  {
    "text": "like yeah plus grip okay I think it's semantic prescript but yeah oh okay I",
    "start": "1689679",
    "end": "1695659"
  },
  {
    "text": "guess that I don't remember offhand so don't quote me on that there's other tools like Combi is a really cool tool",
    "start": "1695659",
    "end": "1701299"
  },
  {
    "text": "that lets you do syntactic grep so it's like a way that and like search and replace so really powerful tool for",
    "start": "1701299",
    "end": "1708020"
  },
  {
    "text": "doing that that's written in okay well so there's lots of things there's like a huge range of what you could write it in",
    "start": "1708020",
    "end": "1713299"
  },
  {
    "text": "I'm not 100 necessarily sold on you should put your whole company on this",
    "start": "1713299",
    "end": "1718760"
  },
  {
    "text": "unless you know you're not gonna do it or be motivated to do it because you're frustrated by",
    "start": "1718760",
    "end": "1724760"
  },
  {
    "text": "problems and other things so I like I'm not super interested in launching a product in like typescript JavaScript",
    "start": "1724760",
    "end": "1731900"
  },
  {
    "text": "land because like I don't have any fun with it so I know I'm just gonna stop which maybe that's dumb like maybe I'm",
    "start": "1731900",
    "end": "1737419"
  },
  {
    "text": "leaving money on the table for myself certainly because like I'd certainly could launch something but I'm not going",
    "start": "1737419",
    "end": "1743900"
  },
  {
    "text": "to finish it because I have other things in my life that I enjoy more like yeah honestly in my experience it like it",
    "start": "1743900",
    "end": "1750740"
  },
  {
    "text": "takes a long time to get any products like up and running and working and make making revenue and if you're not having",
    "start": "1750740",
    "end": "1756380"
  },
  {
    "text": "fun like that is actually a pretty huge failure case people don't really like",
    "start": "1756380",
    "end": "1761480"
  },
  {
    "text": "often want to Grapple I think with The Human Side of these problems in the fact that like you said if it's going to be a",
    "start": "1761480",
    "end": "1768080"
  },
  {
    "text": "year and a half of you hacking by yourself at nights or on the weekend occasionally or when you've got a spare",
    "start": "1768080",
    "end": "1773779"
  },
  {
    "text": "hour uh if you're not having fun you're not gonna last a year and a half it's just not really realistic so I'm not",
    "start": "1773779",
    "end": "1781640"
  },
  {
    "text": "sure I'm still exploring it I like Pokemon is definitely like a general purpose language you can write people",
    "start": "1781640",
    "end": "1787279"
  },
  {
    "text": "have written a huge range of things for it people even you can even write Hardware in ocamel like it has a way",
    "start": "1787279",
    "end": "1793039"
  },
  {
    "text": "that you can output vhdl or verilog so like you can go all the way from writing custom stuff for your fpga to like a",
    "start": "1793039",
    "end": "1799220"
  },
  {
    "text": "react front end you can do all of that and okay I'm all okay that's pretty cool all right so now we're getting to the",
    "start": "1799220",
    "end": "1804740"
  },
  {
    "text": "part in this podcast where my secret motivations are revealed and I actually brought you on so I get some free",
    "start": "1804740",
    "end": "1810740"
  },
  {
    "text": "Consulting in regards to ocamel okay so I'm a huge fan of the let me back up",
    "start": "1810740",
    "end": "1816320"
  },
  {
    "text": "boot Dev is a place to learn back in development and our approach is you have to actually work hard and this is going to take a while as opposed to this is an",
    "start": "1816320",
    "end": "1822919"
  },
  {
    "text": "eight week thing and you're gonna be making 100K next year I'm really interested in it isn't everybody I thought it was in a whole year don't you",
    "start": "1822919",
    "end": "1829100"
  },
  {
    "text": "mean six months you know you guys are getting paid yeah right exactly yeah so like this is gonna take a while",
    "start": "1829100",
    "end": "1835279"
  },
  {
    "text": "though since we talked about open source yes okay I'm sorry to hit you where it hurts yeah",
    "start": "1835279",
    "end": "1841159"
  },
  {
    "text": "so this is gonna take a while and I'm interested in like actually producing really good developers like at the end of this learning path and so while I",
    "start": "1841159",
    "end": "1848299"
  },
  {
    "text": "fully recognize that you don't need to be an expert functional programmer to get a job as a back-end developer it'll",
    "start": "1848299",
    "end": "1854360"
  },
  {
    "text": "actually be a lot easier if you do understand this stuff and I think you'll stand out a lot um I want to redo my functional",
    "start": "1854360",
    "end": "1860120"
  },
  {
    "text": "programming course and you just mentioned like the most interesting thing to me which is that there's this",
    "start": "1860120",
    "end": "1866000"
  },
  {
    "text": "thing called melange and I can compile o camel to JavaScript so the way boot Dev works is like all these languages that",
    "start": "1866000",
    "end": "1872179"
  },
  {
    "text": "you write on the platform it's an interactive coding thing I run them on the front end so I either compile them to webassembly or JavaScript depending",
    "start": "1872179",
    "end": "1879200"
  },
  {
    "text": "on the language is ocamela good choice for my functional programming course I think it's pretty nice the one thing",
    "start": "1879200",
    "end": "1884720"
  },
  {
    "text": "that's cool about it is like because it has a mix of like pure functional",
    "start": "1884720",
    "end": "1889760"
  },
  {
    "text": "aspects as well as like you can write imperative code it can be nice to write I think like a side by side because you",
    "start": "1889760",
    "end": "1896299"
  },
  {
    "text": "could like literally write it in the way where you use a for Loop and then you're like that's how you would do it in a for Loop how would we do it with a recursive",
    "start": "1896299",
    "end": "1902960"
  },
  {
    "text": "function and pass yeah okay like how would we do those two things like how do we make list.map right let's write it",
    "start": "1902960",
    "end": "1909679"
  },
  {
    "text": "the first one is you make a list and then you keep appending to the list as",
    "start": "1909679",
    "end": "1914720"
  },
  {
    "text": "you're iterating through and you're calling F on each function and then you're return the list like that's cool",
    "start": "1914720",
    "end": "1919820"
  },
  {
    "text": "okay now do it recursively where you match against the head of the list and you call F and then you and then you",
    "start": "1919820",
    "end": "1925880"
  },
  {
    "text": "like talk about tail recursion and how the compiler knows how to turn these into the same thing but now you're it's",
    "start": "1925880",
    "end": "1931100"
  },
  {
    "text": "like that's the functional style right you can you can play with that last time I checked I I think yeah like you can",
    "start": "1931100",
    "end": "1937700"
  },
  {
    "text": "actually go on okmul.org play right now and you can run o camel code",
    "start": "1937700",
    "end": "1944380"
  },
  {
    "text": "I don't know exactly how they're doing that but like they they have it you can write it you can can be done can be done",
    "start": "1945279",
    "end": "1952340"
  },
  {
    "text": "is being done currently yeah so that's really cool I think so I think that lends itself well to that",
    "start": "1952340",
    "end": "1958520"
  },
  {
    "text": "style of you want to learn it but and you're familiar with more like imperative traditional backend languages",
    "start": "1958520",
    "end": "1965659"
  },
  {
    "text": "you want to compare them you can actually just write both versions in ocamel and then you can also start to in",
    "start": "1965659",
    "end": "1971179"
  },
  {
    "text": "my mind see the Elegance of the functional style right where you like are just",
    "start": "1971179",
    "end": "1977179"
  },
  {
    "text": "constructing these things with immutability and you're just passing around functions and all your inputs and",
    "start": "1977179",
    "end": "1982880"
  },
  {
    "text": "outputs and you create these structs and Okemo also has some really powerful things with modules that are really like",
    "start": "1982880",
    "end": "1988820"
  },
  {
    "text": "elegant I think and very cool it's one of its like primary features so yeah so",
    "start": "1988820",
    "end": "1993860"
  },
  {
    "text": "I think like all that stuff is very cool and could be done like quite iterative iteratively in the browser yeah I love",
    "start": "1993860",
    "end": "2001000"
  },
  {
    "text": "it okay one last question is ocamel as an ecosystem like growing does it have",
    "start": "2001000",
    "end": "2007600"
  },
  {
    "text": "a bright future yeah so I think so I'm still new in it so like for me I find",
    "start": "2007600",
    "end": "2013059"
  },
  {
    "text": "out new things all the time but there's some really big companies that use ocamel meta uses okamo for a ton of",
    "start": "2013059",
    "end": "2019179"
  },
  {
    "text": "stuff and like for things that they're not gonna drop anytime soon would be my guess like a lot of their like python",
    "start": "2019179",
    "end": "2025360"
  },
  {
    "text": "tooling not matter ideas higher that's going to be shut down next month is it no Google stadia okay yeah but the meta",
    "start": "2025360",
    "end": "2034360"
  },
  {
    "text": "they've got pyre I think is theirs and that's a lot of it's written in ocamel or they've got like hacks which is their",
    "start": "2034360",
    "end": "2040179"
  },
  {
    "text": "like language that compiles to a bunch of other languages or something like that that's also written in no camel so",
    "start": "2040179",
    "end": "2045519"
  },
  {
    "text": "okay there's at least one huge company yeah it's been like many millions and millions of developer out like dollars",
    "start": "2045519",
    "end": "2052179"
  },
  {
    "text": "on that there's also like Jane Street which is a really like large Financial",
    "start": "2052179",
    "end": "2057339"
  },
  {
    "text": "firm that does all of their stuff in Oak Animal and they help push the language forward okay well just released okay",
    "start": "2057339",
    "end": "2062560"
  },
  {
    "text": "well 5.0 which has this really powerful idea of effects which they're called",
    "start": "2062560",
    "end": "2068080"
  },
  {
    "text": "algebraic effects I think is the right way to talk about it but it's like a generic way this is going to be super",
    "start": "2068080",
    "end": "2074740"
  },
  {
    "text": "simplified like a generic way of building into the language the kind of thing that you would do to write async",
    "start": "2074740",
    "end": "2081398"
  },
  {
    "text": "await or try catch or so it's like a larger more generic version",
    "start": "2081399",
    "end": "2087760"
  },
  {
    "text": "of those things and now that's built into the language so you can write your own effects which is really cool and you",
    "start": "2087760",
    "end": "2093220"
  },
  {
    "text": "can like resume yourself so it allows for really powerful code and it's super high performance like multi-core stuff",
    "start": "2093220",
    "end": "2098740"
  },
  {
    "text": "and because the type system it's really powerful and has all this immutability and things like that you can prevent a",
    "start": "2098740",
    "end": "2104080"
  },
  {
    "text": "lot of data races or not have to do as many so that like just happened not that long ago so that's a really big thing",
    "start": "2104080",
    "end": "2110079"
  },
  {
    "text": "and it's been in the works for a while I've also seen some really interesting stuff that's just like in",
    "start": "2110079",
    "end": "2116440"
  },
  {
    "text": "the works so like people are developing new features still for the language like these concepts of linear types or like",
    "start": "2116440",
    "end": "2122740"
  },
  {
    "text": "Global and local types which is it'll look very similar to some of the things that you see in Rust where you assign",
    "start": "2122740",
    "end": "2128680"
  },
  {
    "text": "ownership to something okay would let you basically so okay most garbage collected we didn't mention that but so",
    "start": "2128680",
    "end": "2135040"
  },
  {
    "text": "you don't have to manage your memory but sometimes you would like to tell the garbage collector like reuse this memory",
    "start": "2135040",
    "end": "2141579"
  },
  {
    "text": "for this thing right I'm going to call list.map but instead of creating a new list like just literally override the",
    "start": "2141579",
    "end": "2148119"
  },
  {
    "text": "old list because I'm going to consume that previous list and it's no longer going to be there so don't allocate",
    "start": "2148119",
    "end": "2153640"
  },
  {
    "text": "another list of memory just like reuse it but you could do that with the type system and it doesn't the garbage collector eventually like the allocator",
    "start": "2153640",
    "end": "2160960"
  },
  {
    "text": "eventually can become sophisticated enough to handle those things that was something that I just saw recently that",
    "start": "2160960",
    "end": "2166480"
  },
  {
    "text": "has me pretty excited for writing like really performant o camel for the parts that you need to that's one of the",
    "start": "2166480",
    "end": "2172780"
  },
  {
    "text": "things that's difficult like about rust and sometimes it feels like man I don't really want to have to think",
    "start": "2172780",
    "end": "2178119"
  },
  {
    "text": "about memory for this huge chunk of the program like this huge chunk of the program it just doesn't matter just act",
    "start": "2178119",
    "end": "2183520"
  },
  {
    "text": "like a garbage collector please just like copy it it doesn't it just is fine it's not the like critical path or like",
    "start": "2183520",
    "end": "2190900"
  },
  {
    "text": "I'll come back to it after we actually figure everything out like I don't even know if I have the right structure yet",
    "start": "2190900",
    "end": "2197200"
  },
  {
    "text": "and I have to go add lifetimes everywhere and you're like oh my goodness I have to go do this and so then that's like annoying whereas it",
    "start": "2197200",
    "end": "2203079"
  },
  {
    "text": "would be like nice and you'd be I feel like be able to move more quickly for some of these things if you could just",
    "start": "2203079",
    "end": "2208119"
  },
  {
    "text": "have effectively like I think there's a huge space open for rust with garbage collection as like a language which in",
    "start": "2208119",
    "end": "2215140"
  },
  {
    "text": "some ways is like what okay more has although okay more has like a lot of historical things blah blah so maybe",
    "start": "2215140",
    "end": "2220599"
  },
  {
    "text": "it's not that language that's fine I like it but so all that to being said like I think there's a lot of interesting stuff going on in the O",
    "start": "2220599",
    "end": "2226780"
  },
  {
    "text": "camel world with like real companies using no cable and there's like also",
    "start": "2226780",
    "end": "2232060"
  },
  {
    "text": "some companies that you'll run into like ahrefs or a few other ones that I've seen um that are like Full O camel",
    "start": "2232060",
    "end": "2238060"
  },
  {
    "text": "Stacks where they're shipping I was listening to a podcast from their owner talking about a camel like now that I remember yeah yeah yeah so there's a lot",
    "start": "2238060",
    "end": "2245619"
  },
  {
    "text": "of people interested in the space I don't know like I said I don't know what's gonna happen with okay I don't",
    "start": "2245619",
    "end": "2251260"
  },
  {
    "text": "know what I'll do with o camel in six months or a year I'm just finding a lot of the concepts like very helpful and",
    "start": "2251260",
    "end": "2257680"
  },
  {
    "text": "interesting and I've learned a lot of new ways of thinking about programming by learning okay well so that makes it",
    "start": "2257680",
    "end": "2264640"
  },
  {
    "text": "fun enough for me to keep on doing it amazing I'm gonna be spending the next couple months at least looking at",
    "start": "2264640",
    "end": "2271480"
  },
  {
    "text": "looking at Oak Animal a lot more seriously than I was nice so that's pretty cool tell everyone where they can find you",
    "start": "2271480",
    "end": "2277599"
  },
  {
    "text": "you're a streamer we haven't even talked about it you're a YouTuber you do code in front of people plug your stuff yeah",
    "start": "2277599",
    "end": "2283420"
  },
  {
    "text": "I'm uh thdv so t-e-e-j underscore DV unlike all the major social media places",
    "start": "2283420",
    "end": "2290079"
  },
  {
    "text": "only social media place I'm not that is on GitHub or mtj DeVries because GitHub",
    "start": "2290079",
    "end": "2295180"
  },
  {
    "text": "is social media and yeah so you can find me there I live stream a lot on Twitch",
    "start": "2295180",
    "end": "2300400"
  },
  {
    "text": "we do coding stuff on Twitch all the time I'm usually like building something we don't do a lot of not building stuff",
    "start": "2300400",
    "end": "2307180"
  },
  {
    "text": "on Twitch which is pretty fun and yeah I also publish YouTube videos mostly about",
    "start": "2307180",
    "end": "2312579"
  },
  {
    "text": "neovm maybe some stuff about okmul coming up we'll see but I just publish whatever I feel like on YouTube that's",
    "start": "2312579",
    "end": "2319599"
  },
  {
    "text": "the best way to do it yeah go check out TJ's uh YouTube Twitter check out oh camel and neovim thanks so much for",
    "start": "2319599",
    "end": "2326440"
  },
  {
    "text": "coming on the show man yeah my pleasure thanks for having me",
    "start": "2326440",
    "end": "2330839"
  }
]