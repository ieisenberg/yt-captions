[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "you're never going to be a great program I think unless you can communicate your intent to the rest of a team and I think not enough emphasis is placed on just",
    "start": "0",
    "end": "7200"
  },
  {
    "text": "writing as a skill in the programming World individual productivity Rose through the roof we're going to have the same thing happen to us and that's that",
    "start": "7200",
    "end": "13639"
  },
  {
    "text": "is going to mean fewer jobs you know that's that's just how that [Music]",
    "start": "13639",
    "end": "22039"
  },
  {
    "text": "works how do I pronounce your last name by the way great question so it's pook",
    "start": "22039",
    "end": "27199"
  },
  {
    "text": "and technically there's no like American equivalent for the a sound so it's pocock I guess you would have to say po",
    "start": "27199",
    "end": "34200"
  },
  {
    "text": "okay yeah but that's it po I have to be like a little careful how you say it or kind of well no I mean it's right there",
    "start": "34200",
    "end": "40200"
  },
  {
    "text": "in the name you know what I mean like it's no getting around it it's just in there it's built in well",
    "start": "40200",
    "end": "46800"
  },
  {
    "text": "I wanted to make sure I didn't pronounce it that way if it was pronounced a different way yeah yeah yeah yeah I",
    "start": "46800",
    "end": "52760"
  },
  {
    "text": "guess so I guess you could not emphasize it I suppose it's it's a question of emphasis it's pocok not pook I I was",
    "start": "52760",
    "end": "60680"
  },
  {
    "text": "going to say it would be it would be more convenient if English had the accent uh you know the accents like",
    "start": "60680",
    "end": "66040"
  },
  {
    "text": "Spanish so that it would be more clear that it's pocok yes okay speaking of which yeah you do like voice and",
    "start": "66040",
    "end": "73159"
  },
  {
    "text": "linguistic stuff or you did right yeah so I was a singing teacher for and voice",
    "start": "73159",
    "end": "79520"
  },
  {
    "start": "75000",
    "end": "195000"
  },
  {
    "text": "teacher accent coach for six years before I became a Dev um this was basically my career coming out of",
    "start": "79520",
    "end": "84600"
  },
  {
    "text": "University I did like a University degree in drama and yeah I was a singing teacher in London and Guilford in the",
    "start": "84600",
    "end": "91720"
  },
  {
    "text": "south of England uh for six years and I loved it but I hated living in London",
    "start": "91720",
    "end": "97040"
  },
  {
    "text": "and so I wanted to get out and that's how I became a Dev was basically retraining myself to become a Dev",
    "start": "97040",
    "end": "103759"
  },
  {
    "text": "because you can do that from anywhere and so I wanted to come back live in the countryside which is where I am now and",
    "start": "103759",
    "end": "109040"
  },
  {
    "text": "yeah that's how it happened we have a lot in common um before I jump into that I just want to like preface this by",
    "start": "109040",
    "end": "115200"
  },
  {
    "text": "telling everyone yes we are going to talk about typescript we're going to talk about typescript till B A typescript but for a second I just I",
    "start": "115200",
    "end": "122320"
  },
  {
    "text": "just got to talk about a couple things we have in common uh so you want to move",
    "start": "122320",
    "end": "127880"
  },
  {
    "text": "out of you wanted to move out of London to go live in the country I am finally realizing that dream I mean Salt Lake",
    "start": "127880",
    "end": "133120"
  },
  {
    "text": "City is not as big as London but I am in three weeks moving back to my hometown",
    "start": "133120",
    "end": "138599"
  },
  {
    "text": "just kind of a rural area in southern Utah uh finally able to like work fully",
    "start": "138599",
    "end": "144680"
  },
  {
    "text": "remote and make that happen I've been in Salt Lake for like seven or eight years so I've been to Salt Lake actually I've only been to two places in the US I went",
    "start": "144680",
    "end": "151400"
  },
  {
    "text": "to the New York when I was like 14 and I went to Salt Lake City in 2022 and I was like America has changed a lot you know",
    "start": "151400",
    "end": "158080"
  },
  {
    "text": "like since I was last year like yeah Salt Lake's nice I love I love comparing it to New York City well I mean like I'd",
    "start": "158080",
    "end": "165440"
  },
  {
    "text": "only been to America twice you know like once it was New York and the second time it was Salt Lake and I thought I was to",
    "start": "165440",
    "end": "170920"
  },
  {
    "text": "say it it hasn't changed those those two cities just couldn't be more different yeah yeah I went to a really nice burger",
    "start": "170920",
    "end": "177440"
  },
  {
    "text": "place while I was there you got the beautiful mountains well that's wonderful you're getting out of the big city moving out into Countryside I",
    "start": "177440",
    "end": "184000"
  },
  {
    "text": "couldn't be more proud it's it's a wonderful thing to do okay I promised we'll talk about typescripts let's talk",
    "start": "184000",
    "end": "190599"
  },
  {
    "text": "a little bit about typescript actually I do have one more one more kind of weird transition which is you mentioned that",
    "start": "190599",
    "end": "196080"
  },
  {
    "start": "195000",
    "end": "242000"
  },
  {
    "text": "you um kind know were a voice coach obviously have a background in English and language I think it's very well",
    "start": "196080",
    "end": "203440"
  },
  {
    "text": "accepted that programmers typically come from like a math background right because computer",
    "start": "203440",
    "end": "208920"
  },
  {
    "text": "science is very math heavy um I don't know if you noticed that I used maths I believe that's the correct term in",
    "start": "208920",
    "end": "214040"
  },
  {
    "text": "England um very maths heavy and I think very often we we Overlook",
    "start": "214040",
    "end": "221879"
  },
  {
    "text": "how kind of communication and language heavy programming really is and I would argue especially at like the application",
    "start": "221879",
    "end": "228640"
  },
  {
    "text": "Level where maybe you're not solving as hard of like math problems day-to-day and it's more about communicating in a",
    "start": "228640",
    "end": "235159"
  },
  {
    "text": "team and communicating with the machine what are your thoughts on that like if you had to cribe like a percentage of",
    "start": "235159",
    "end": "241720"
  },
  {
    "text": "like what makes a good programmer like what what percent math what percent like",
    "start": "241720",
    "end": "247480"
  },
  {
    "start": "242000",
    "end": "406000"
  },
  {
    "text": "communication skills I mean whenever you're programming you're trying to communicate intent right either you're",
    "start": "247480",
    "end": "253319"
  },
  {
    "text": "communicating intent to a uh a computer right trying to tell them what you're",
    "start": "253319",
    "end": "259120"
  },
  {
    "text": "doing and in that case you need to speak the language of the computer right you need to speak in math you need to figure",
    "start": "259120",
    "end": "264440"
  },
  {
    "text": "out exactly what is the right way to allocate memory and figure out all this lowlevel stuff and people who are really",
    "start": "264440",
    "end": "270160"
  },
  {
    "text": "good at that are I would say good programmers but the really great programmers I think are the ones who can",
    "start": "270160",
    "end": "276800"
  },
  {
    "text": "do all of that and do all of that you know you can get really really really really good at that but you're never",
    "start": "276800",
    "end": "282840"
  },
  {
    "text": "going to be a great program I think unless you can communicate your intent to the rest of the team because obviously the work that you do",
    "start": "282840",
    "end": "289320"
  },
  {
    "text": "communicating to the computer it's kind of um it's almost like you're communing",
    "start": "289320",
    "end": "295280"
  },
  {
    "text": "with the spirit world right like you're you're just no one can access that Bond you have between you and how you",
    "start": "295280",
    "end": "301039"
  },
  {
    "text": "understand your code and the only way that people can get access through that or to that is through your words right",
    "start": "301039",
    "end": "307840"
  },
  {
    "text": "through the way that you talk and the really good communicators or the really good programmers are great communicators",
    "start": "307840",
    "end": "313479"
  },
  {
    "text": "and especially in writing so that means I've tried to be more disciplined with myself in this um recently is",
    "start": "313479",
    "end": "320680"
  },
  {
    "text": "basically every time you every time you write a PR you basically got to write an essay you know what I mean you got to",
    "start": "320680",
    "end": "326000"
  },
  {
    "text": "you got to explain everything about like what motivated the changes you've got to",
    "start": "326000",
    "end": "331360"
  },
  {
    "text": "make it uh concise and really really good programmers especially I think work",
    "start": "331360",
    "end": "336600"
  },
  {
    "text": "those working on Library code working in contexts where you have to communicate your intention more broadly to a wider",
    "start": "336600",
    "end": "343240"
  },
  {
    "text": "audience they tend to be better communicators because I think we've seen a lot of times in the open source",
    "start": "343240",
    "end": "349680"
  },
  {
    "text": "community in the open source Community if you're not that great a communicator your ideas tend to get",
    "start": "349680",
    "end": "356160"
  },
  {
    "text": "misinterpreted and your library can uh",
    "start": "356160",
    "end": "361199"
  },
  {
    "text": "not be so popular as a as a result or people can start drifting away from your library as a result so I think actually",
    "start": "361199",
    "end": "368240"
  },
  {
    "text": "this this idea of communication it doesn't necessarily have to be face-to-face communication but just written communication the ability to um",
    "start": "368240",
    "end": "375000"
  },
  {
    "text": "empathize with what people are saying thinking about your product and your code is so so important and the more you",
    "start": "375000",
    "end": "382919"
  },
  {
    "text": "can communicate the more that feeds into the rest of your company the easier your code is to consume by others and the",
    "start": "382919",
    "end": "389240"
  },
  {
    "text": "less the bus Factor becomes a factor right because people can just jump into your code the bus Factor being if you",
    "start": "389240",
    "end": "395560"
  },
  {
    "text": "get hit by a bus who's going to be able to take your place right and if you're able to communicate really well that's",
    "start": "395560",
    "end": "403080"
  },
  {
    "text": "the thing I think that separates the good engineer from the great engineer do you think it's fair to say that for like",
    "start": "403080",
    "end": "408440"
  },
  {
    "start": "406000",
    "end": "535000"
  },
  {
    "text": "a domain of problems that you're working on the math skills that you need are maybe more binary in the sense that you",
    "start": "408440",
    "end": "416759"
  },
  {
    "text": "kind of have them or you don't have them if you don't have them probably need to go go get them whereas like the",
    "start": "416759",
    "end": "423000"
  },
  {
    "text": "communication skills that that take you from this like much more gray area of like good to Great is kind of a a softer",
    "start": "423000",
    "end": "429039"
  },
  {
    "text": "thing that develops over time yeah this this concept of like soft skills you know I think how do you become a good writer",
    "start": "429039",
    "end": "436960"
  },
  {
    "text": "how do you become a good communicator it's like it's hard because you need to",
    "start": "436960",
    "end": "442440"
  },
  {
    "text": "I think be keyed into other people and be able to tune in to other people predict what they're",
    "start": "442440",
    "end": "448759"
  },
  {
    "text": "going to be thinking thinking about your uh what you're writing and what you're trying to communicate that's",
    "start": "448759",
    "end": "454759"
  },
  {
    "text": "often a thing I have to think about a lot when I'm making training materials as well is like what state of mind are",
    "start": "454759",
    "end": "461000"
  },
  {
    "text": "are my students in and that's something that I think you",
    "start": "461000",
    "end": "468520"
  },
  {
    "text": "have to learn by basically brute forcing it's kind of the same as in programming I mean I guess in programming in math",
    "start": "468520",
    "end": "476159"
  },
  {
    "text": "you can look up the answer there is usually an answer to a certain question that you're trying to ask and so if",
    "start": "476159",
    "end": "482560"
  },
  {
    "text": "anything that knowledge is I think more attainable you can like if you have like",
    "start": "482560",
    "end": "487680"
  },
  {
    "text": "a a math background you probably have a few more U mental models for helping you",
    "start": "487680",
    "end": "492879"
  },
  {
    "text": "deal with complexity and complex algorithms and that kind of thing that someone who comes from a drama background like I do has you know um but",
    "start": "492879",
    "end": "500560"
  },
  {
    "text": "I found that that knowledge was a lot easier to come by and figure out and work together peac meal than actually",
    "start": "500560",
    "end": "507159"
  },
  {
    "text": "communicating with people communicating I think is the harder get and I think",
    "start": "507159",
    "end": "512320"
  },
  {
    "text": "also undervalued I agree I think I think we don't talk about it enough and I",
    "start": "512320",
    "end": "517919"
  },
  {
    "text": "think not enough emphasis is placed on just writing as a skill uh in the programming World granted I will point",
    "start": "517919",
    "end": "524360"
  },
  {
    "text": "out a distinction I think that you mentioned like you know being able to write a really great essay about your PR",
    "start": "524360",
    "end": "529720"
  },
  {
    "text": "as a valuable skill and I tend to agree especially in open source and on large teams and within big corporations I'm a",
    "start": "529720",
    "end": "536080"
  },
  {
    "start": "535000",
    "end": "598000"
  },
  {
    "text": "big fan of the Indie hacker project push straight to main commit message more",
    "start": "536080",
    "end": "541640"
  },
  {
    "text": "changes huge fan of that uh yeah you know nothing wrong with that absolutely",
    "start": "541640",
    "end": "547839"
  },
  {
    "text": "I I've worked in that context like quite a lot actually for most of my career before I quit and became an educator I",
    "start": "547839",
    "end": "554320"
  },
  {
    "text": "was in the startup phase but I I I guess because I've been in that phase for",
    "start": "554320",
    "end": "559680"
  },
  {
    "text": "quite a long time I know working at companies in that growth phase I really",
    "start": "559680",
    "end": "564839"
  },
  {
    "text": "want to be part of a like a team that's running on a 20-year code base I've got the sort of grass is greener on the",
    "start": "564839",
    "end": "570680"
  },
  {
    "text": "other side thing where I I just want to be maintaining something and I I think a",
    "start": "570680",
    "end": "577200"
  },
  {
    "text": "lot of people feel like this when they're working in programming is they just want to feel like a professional you know they want to do what the",
    "start": "577200",
    "end": "582560"
  },
  {
    "text": "professionals do and that's still where my head is at like and that's that's what I've been trying to work on for",
    "start": "582560",
    "end": "588720"
  },
  {
    "text": "myself and for my for my own programming actually is just like trying to write better trying to reason better and yeah",
    "start": "588720",
    "end": "595839"
  },
  {
    "text": "as promised it's time to talk about okay so you've been doing o camel for 20 years",
    "start": "595839",
    "end": "601360"
  },
  {
    "start": "598000",
    "end": "660000"
  },
  {
    "text": "tell us a little bit about o camel I know bloody nothing about o camel I have to say nothing I'm like I'm a proper",
    "start": "601360",
    "end": "607279"
  },
  {
    "text": "like types scrip one trick I really am I really am there's a running joke that",
    "start": "607279",
    "end": "613079"
  },
  {
    "text": "this podcast way over represents o",
    "start": "613079",
    "end": "618120"
  },
  {
    "text": "camel because we've had like I don't know how many guests more than five more",
    "start": "618120",
    "end": "623920"
  },
  {
    "text": "than I can count on one hand come on to talk about o camel so I just had to throw that in there for him but yeah",
    "start": "623920",
    "end": "629079"
  },
  {
    "text": "let's let's talk a little bit about typescript then you know that thing that no one uses in production yeah that tiny",
    "start": "629079",
    "end": "636200"
  },
  {
    "text": "little niche language that they came up with at this teeny company and just",
    "start": "636200",
    "end": "641279"
  },
  {
    "text": "failed on arrival now that we've done five o camel episodes I feel like it's probably about time to at least give",
    "start": "641279",
    "end": "648000"
  },
  {
    "text": "typescript the time of day cool okay so I got I got some questions lined up for you about",
    "start": "648000",
    "end": "654200"
  },
  {
    "text": "typescript um let's start with the high level so my first question is is in in a",
    "start": "654200",
    "end": "659519"
  },
  {
    "text": "non non-sarcastic way have we reached Peak typescript or is the world going to",
    "start": "659519",
    "end": "665519"
  },
  {
    "start": "660000",
    "end": "861000"
  },
  {
    "text": "get eaten by typescript I I still don't know the answer to this question I want to get your take so I guess your",
    "start": "665519",
    "end": "672399"
  },
  {
    "text": "question is what is typescripts future what will we be doing in 10 years tabs",
    "start": "672399",
    "end": "677519"
  },
  {
    "text": "script's been around for 11 years will we still be writing tab script in the same way in uh 20134 let's say and I",
    "start": "677519",
    "end": "686279"
  },
  {
    "text": "guess what we're assuming there is we're assuming that JavaScript is still going to be around because typescript now more than ever is like cleaving so close to",
    "start": "686279",
    "end": "694160"
  },
  {
    "text": "JavaScript like they almost can't be pulled apart typescript never adds any more runtime features that JavaScript",
    "start": "694160",
    "end": "701200"
  },
  {
    "text": "doesn't have it used to but couldn't bun like I I I remember all I all I read was",
    "start": "701200",
    "end": "706880"
  },
  {
    "text": "a headline but can bun just like run typescripts like without having to do a pre-compile step maybe that's a thing I",
    "start": "706880",
    "end": "713440"
  },
  {
    "text": "don't know so I think bun what it does is it basically strips out the types before it runs the JavaScript that",
    "start": "713440",
    "end": "719240"
  },
  {
    "text": "that's what it's doing does I think a little bit of source mapping but it uses something like s swc which is a bundler",
    "start": "719240",
    "end": "724600"
  },
  {
    "text": "essentially or a transpiler to just remove the types and then just do that so it's not doing anything clever with",
    "start": "724600",
    "end": "730240"
  },
  {
    "text": "the types it is still just running JavaScript and doing some extra module resolution to make sure that it points",
    "start": "730240",
    "end": "736240"
  },
  {
    "text": "at TS files instead of JS files for imports I think that's what bun does that's what Dino does uh node is",
    "start": "736240",
    "end": "742839"
  },
  {
    "text": "debating adding typescript support as well under a flag and that I think is what they will do as well",
    "start": "742839",
    "end": "749360"
  },
  {
    "text": "now your future your question there was about like the future of typescripts and the future of that kind of thing I like",
    "start": "749360",
    "end": "758040"
  },
  {
    "text": "there are possible Futures where I don't know we get some sort of runtime that will'll be able to take the types that",
    "start": "758040",
    "end": "764839"
  },
  {
    "text": "typescript has and use them to influence the runtime you know to basically speed",
    "start": "764839",
    "end": "770199"
  },
  {
    "text": "up JavaScript let's say to be able to feed that information into a V8 equivalent and basically say okay we",
    "start": "770199",
    "end": "777320"
  },
  {
    "text": "know this is a string and so allocate specifically as a string or blah blah blah blah blah do just in time compiler might be able",
    "start": "777320",
    "end": "784680"
  },
  {
    "text": "to get faster with type information that is a possible future but I don't think it's possible basically I don't think",
    "start": "784680",
    "end": "791320"
  },
  {
    "text": "that's something that's going to happen possible but un you think it's very unlikely I don't think it's going to happen really I mean it could happen it",
    "start": "791320",
    "end": "798000"
  },
  {
    "text": "could happen but I don't think that's the future so I think the future of tcri is that it will eventually be merged",
    "start": "798000",
    "end": "804720"
  },
  {
    "text": "into JavaScript in some form and so instead of I think in 10 years time instead of writing TS files we're going",
    "start": "804720",
    "end": "812199"
  },
  {
    "text": "to be only writing JS files but we're going to be adding typescript types to",
    "start": "812199",
    "end": "817720"
  },
  {
    "text": "them typescript will still exist I think and it will basically just be a type checker for JavaScript files so I think",
    "start": "817720",
    "end": "825920"
  },
  {
    "text": "that's future of typescript is a advanced linter yeah basically yes it's",
    "start": "825920",
    "end": "832040"
  },
  {
    "text": "going to be the type checker for JavaScript files that's effectively the route that Python's",
    "start": "832040",
    "end": "838199"
  },
  {
    "text": "taking right by adding Ty like slowly adding more and more Ty hinting to the language I don't know anything about any",
    "start": "838199",
    "end": "843920"
  },
  {
    "text": "other language I really am totally ignorance about developments in other languages I know that you know I think",
    "start": "843920",
    "end": "850639"
  },
  {
    "text": "python has some sort of type hint stuff I know that Ruby has a little bit of that as well but honestly I'm such a",
    "start": "850639",
    "end": "857199"
  },
  {
    "text": "monomaniac when it comes to languages I really am just a JavaScript dude fair enough yeah my understanding of python",
    "start": "857199",
    "end": "863279"
  },
  {
    "start": "861000",
    "end": "1236000"
  },
  {
    "text": "Ty hinting which to be fair most of the Python I did was before typ hinting was popular or I should say even existed and",
    "start": "863279",
    "end": "869519"
  },
  {
    "text": "now is becoming more popular is that it basically just ignore like The Interpreter basically just ignores the",
    "start": "869519",
    "end": "875160"
  },
  {
    "text": "types completely but editors pick up on the types and can give you like the nice intelligence um kind of featur there's a",
    "start": "875160",
    "end": "882120"
  },
  {
    "text": "there's a proposal uh coming into JavaScript potentially that has been in the works for a while that would do",
    "start": "882120",
    "end": "888120"
  },
  {
    "text": "exactly the same thing that basically it would just ignore certain spots in like",
    "start": "888120",
    "end": "893440"
  },
  {
    "text": "the uh so let's say after a variable name for instance it would just let you add something in there and it would",
    "start": "893440",
    "end": "899040"
  },
  {
    "text": "treat it as a comment so it types as comments as the proposal okay I'm familiar with something this isn't is",
    "start": "899040",
    "end": "905040"
  },
  {
    "text": "this the JS doc stuff or is that completely separate JS dox is like you basically add comments like literal",
    "start": "905040",
    "end": "910680"
  },
  {
    "text": "JavaScript comments into your JavaScript code typescripts is actually smart enough to understand them but the",
    "start": "910680",
    "end": "917959"
  },
  {
    "text": "difference is that the Syntax for JS Doc is what it's called Uh adding type",
    "start": "917959",
    "end": "923120"
  },
  {
    "text": "annotations there is really fose like you got to add an entire comments you've got to say you know this parameter is this blah blah blah blah blah it's 100",
    "start": "923120",
    "end": "929399"
  },
  {
    "text": "characters where typescript does it in uh seven or something you know and so actually having I would call that like a",
    "start": "929399",
    "end": "935319"
  },
  {
    "text": "second class solution whereas this would be like a first class solution you know actual annotations on the variables like",
    "start": "935319",
    "end": "941560"
  },
  {
    "text": "you're used to doing In typescript First Class syntax and JavaScript would ignore it but tcri will be able to pick it up",
    "start": "941560",
    "end": "947319"
  },
  {
    "text": "and give you hints about four years ago um some really smart people that I knew",
    "start": "947319",
    "end": "952360"
  },
  {
    "text": "and looked up to um were very much in favor of the JS do thing over the typescript thing and it just never sat",
    "start": "952360",
    "end": "960160"
  },
  {
    "text": "well with me because one of my and I don't",
    "start": "960160",
    "end": "965440"
  },
  {
    "text": "understand all of the underlying details as to why these decisions were made so I don't want to come across as like I know",
    "start": "965440",
    "end": "971120"
  },
  {
    "text": "better and this shouldn't have happened but like one thing that's always bothered me about go is that we have",
    "start": "971120",
    "end": "976560"
  },
  {
    "text": "comments that effectively are executable like there's there's kind of these you",
    "start": "976560",
    "end": "982079"
  },
  {
    "text": "know meta tags that you can do in uh in comments to like you know generate code",
    "start": "982079",
    "end": "987279"
  },
  {
    "text": "or embed binaries Within your code and that's always bothered me like it's like these special comments like special",
    "start": "987279",
    "end": "993480"
  },
  {
    "text": "comments that actually do things versus just you know comments that don't do anything it's like the first thing we teach programmers is comments don't do",
    "start": "993480",
    "end": "999480"
  },
  {
    "text": "anything and so that always bothered me about JS it's like there are comments that you know need to be syntactically",
    "start": "999480",
    "end": "1005279"
  },
  {
    "text": "correct in order to be effective and um so that's why I've always been you know",
    "start": "1005279",
    "end": "1010360"
  },
  {
    "text": "if I'm doing types I'd rather kind of have it built into the language syntax again second class versus first class",
    "start": "1010360",
    "end": "1016240"
  },
  {
    "text": "like and there are there are some very subtle things that you can't do in JS do that you can do in typescripts like",
    "start": "1016240",
    "end": "1021880"
  },
  {
    "text": "non-null assertions for instance adding like an exclamation point to the end of a uh variable or like reference or",
    "start": "1021880",
    "end": "1028720"
  },
  {
    "text": "something in typescript means that it's like you cut null or undefined out of it there's no equivalent in JS doc you can",
    "start": "1028720",
    "end": "1034600"
  },
  {
    "text": "pass type arguments directly to functions in typescript there's not really an equivalent in JS do um lot",
    "start": "1034600",
    "end": "1041079"
  },
  {
    "text": "some people love it like um spelt kicked up a huge fuss a few years ago when they I think not actually deliberately you",
    "start": "1041079",
    "end": "1047558"
  },
  {
    "text": "people kicked up the fuss for them often happens uh when they moved over to JS",
    "start": "1047559",
    "end": "1053160"
  },
  {
    "text": "doc instead of typescript big big repo getting rid of typescript quote unquote and moving to JS do in fact what they",
    "start": "1053160",
    "end": "1060120"
  },
  {
    "text": "did was yeah they moved the syntax over to JS do but they're still using typescript to do their type checking and",
    "start": "1060120",
    "end": "1065559"
  },
  {
    "text": "things like that so like the fure they're using the typescript tooling",
    "start": "1065559",
    "end": "1071480"
  },
  {
    "text": "right the typescript compiler exactly yeah they're using the typescript compiler they're using the typescript",
    "start": "1071480",
    "end": "1076640"
  },
  {
    "text": "server in vs code uh to get exactly the the same behavior as they had with typescripts just different syntax so I",
    "start": "1076640",
    "end": "1082840"
  },
  {
    "text": "think that's the experience we're going to have in the future it's just so JS do is the future oddly or the behavior of",
    "start": "1082840",
    "end": "1089760"
  },
  {
    "text": "JS do but with typescript syntax yeah instead of stripping comments we're going to",
    "start": "1089760",
    "end": "1094960"
  },
  {
    "text": "strip code we're going to ignore com ignore bits of code that are treated as",
    "start": "1094960",
    "end": "1101360"
  },
  {
    "text": "comments basically yeah yeah I think I I would love to see that brought in yeah that that would I think that would be my",
    "start": "1101360",
    "end": "1107480"
  },
  {
    "text": "preferred way I mean as long as it remains an interpreted or",
    "start": "1107480",
    "end": "1112600"
  },
  {
    "text": "just in time compiled language like something that we're not building like you know a machine code executable binary from so there's no like absolute",
    "start": "1112600",
    "end": "1120120"
  },
  {
    "text": "need for a compile step it makes a lot of sense to me to just try to inline all the tooling and then you don't have a",
    "start": "1120120",
    "end": "1126600"
  },
  {
    "text": "build step um and then we don't have to argue about that anymore but it's odd because it because it's really going to",
    "start": "1126600",
    "end": "1132760"
  },
  {
    "text": "only going to benefit I think front-end applications like front end applications will always need to bundle no matter",
    "start": "1132760",
    "end": "1138320"
  },
  {
    "text": "what happens they will always always need to bundle unless there is something um up like something changes about the",
    "start": "1138320",
    "end": "1144799"
  },
  {
    "text": "web platform that makes it uh less hostile to like module scripts basically",
    "start": "1144799",
    "end": "1149840"
  },
  {
    "text": "I mean I think with big like web apps for sure but it would be pretty cool to just be able to like add typescript",
    "start": "1149840",
    "end": "1157080"
  },
  {
    "text": "Snippets to like more static type sites um and content sites and and you know those sites don't necessarily need to",
    "start": "1157080",
    "end": "1163440"
  },
  {
    "text": "bundle yeah I guess so I mean it's you just get such a better de developer",
    "start": "1163440",
    "end": "1168720"
  },
  {
    "text": "experience when you bundle like you get to Minify you get to use react let's say or view or spelt or whatever you get",
    "start": "1168720",
    "end": "1175080"
  },
  {
    "text": "your front end Frameworks working um your development experience is fast",
    "start": "1175080",
    "end": "1180640"
  },
  {
    "text": "which it of sometimes isn't if you're doing the kind of dhh no bundling thing which is option to uh bundling is just",
    "start": "1180640",
    "end": "1187880"
  },
  {
    "text": "great I mean I don't see it moving away from Front End anytime soon yeah I mean like I said for web apps like the boot",
    "start": "1187880",
    "end": "1194200"
  },
  {
    "text": "Dev web app it's like there's no way we're escaping bundling anytime soon I don't see that's even a possibility um",
    "start": "1194200",
    "end": "1200919"
  },
  {
    "text": "but like on our blog it's a static site and we have like maybe five custom",
    "start": "1200919",
    "end": "1207600"
  },
  {
    "text": "scripts uh that are just like you know JavaScript tags and I mean it's not the",
    "start": "1207600",
    "end": "1213520"
  },
  {
    "text": "end of the world but like if I could have added like a TS annotation there and gotten typ hinting in my editor like",
    "start": "1213520",
    "end": "1218760"
  },
  {
    "text": "I definitely would have yeah and that feels like a kind of silent majority thing tens of seconds in exactly you",
    "start": "1218760",
    "end": "1224840"
  },
  {
    "text": "know debugging in the editor so exactly you wouldn't have to run that Dev script how how good would that be",
    "start": "1224840",
    "end": "1231799"
  },
  {
    "text": "absolutely okay um you mentioned undefined and null this was a question I also had on my list do you ever use null",
    "start": "1231799",
    "end": "1238880"
  },
  {
    "start": "1236000",
    "end": "1502000"
  },
  {
    "text": "in typescript or do you try to stick to undefined oh great question I mean I",
    "start": "1238880",
    "end": "1244159"
  },
  {
    "text": "similar to other people I wish null didn't exist I don't really see the point of it often people have this kind",
    "start": "1244159",
    "end": "1249360"
  },
  {
    "text": "of like semantic difference like they they see a null and it communicates something differently from when they see",
    "start": "1249360",
    "end": "1255280"
  },
  {
    "text": "an undefined I I don't care I don't no I I don't it's just I don't get that at",
    "start": "1255280",
    "end": "1260919"
  },
  {
    "text": "all like yeah it has some difference I guess uh inside a when you're receiving",
    "start": "1260919",
    "end": "1267799"
  },
  {
    "text": "Fields through Jason or something I suppose like a field exists or doesn't exist like key is gone versus maps to no",
    "start": "1267799",
    "end": "1275159"
  },
  {
    "text": "I hate that I just hate that distinction what's the point it's either there or not there guys like you know what are we",
    "start": "1275159",
    "end": "1280520"
  },
  {
    "text": "doing we and expecting null to have a different everyone has a slightly",
    "start": "1280520",
    "end": "1286200"
  },
  {
    "text": "different interpretation about that rule as well I wish null didn't exist obviously type of null being an object",
    "start": "1286200",
    "end": "1292279"
  },
  {
    "text": "as well it's just rubbing salt in the open wound and yeah and it's nice",
    "start": "1292279",
    "end": "1298799"
  },
  {
    "text": "typescript now it didn't always used to treats null and undefined differently so null is not assignable to undefined and",
    "start": "1298799",
    "end": "1305320"
  },
  {
    "text": "the opposite is true too so you get to have a bit of safety there but in general I just treat them as essentially",
    "start": "1305320",
    "end": "1312679"
  },
  {
    "text": "indistinguishable I don't tend to use one over the other and in fact I just tend not to use null at all really it's",
    "start": "1312679",
    "end": "1318279"
  },
  {
    "text": "so annoying when you have a type signature that returns string null or undefined and now you have to deal with",
    "start": "1318279",
    "end": "1323799"
  },
  {
    "text": "all three and I I actually recently found this out I'm sure you knew this but the mic like Microsoft has like",
    "start": "1323799",
    "end": "1330480"
  },
  {
    "text": "official typescripts like recommendations and one of them is don't use null like just use undefined all the",
    "start": "1330480",
    "end": "1335840"
  },
  {
    "text": "time I didn't know that actually I'd love to find out where that is I'd love to know where that is it it's funny because so I've done a decent amount of",
    "start": "1335840",
    "end": "1342120"
  },
  {
    "text": "typescript over the last few years but my whole career has been as a as a backend developer writing go and so like",
    "start": "1342120",
    "end": "1347760"
  },
  {
    "text": "all the JavaScript typescript I've done have has just been for myself on side projects boot Dev included and so and I",
    "start": "1347760",
    "end": "1354440"
  },
  {
    "text": "never took an incredible uh incredible course like total typescript so I'm doing whatever the hell I want right and",
    "start": "1354440",
    "end": "1361480"
  },
  {
    "text": "recently we had uh Sarah a bad cop uh for any twitch listeners joined the team",
    "start": "1361480",
    "end": "1366760"
  },
  {
    "text": "and she was like what the hell like are all these nulls in the code base like why are you doing null and I'm like well",
    "start": "1366760",
    "end": "1372200"
  },
  {
    "text": "in my mind null and undefined are basically the same thing yeah and guess what null has four letters in it and",
    "start": "1372200",
    "end": "1378720"
  },
  {
    "text": "undefined has [ __ ] if I know how many letters in it a lot more it's got the",
    "start": "1378720",
    "end": "1383880"
  },
  {
    "text": "same number of letters when AI is writing your car day like that that that that used to come that used to be more",
    "start": "1383880",
    "end": "1389159"
  },
  {
    "text": "relevant than it is now damn and we w we like boot Dev didn't start on typescript either it started is just plain",
    "start": "1389159",
    "end": "1395240"
  },
  {
    "text": "JavaScript so I was just using null all the time and she was like no no no like undefine is better and I was like why",
    "start": "1395240",
    "end": "1402760"
  },
  {
    "text": "and she basically gave me kind of the explanation that you're giving it's like it's like it's more undefined yeah and I",
    "start": "1402760",
    "end": "1409799"
  },
  {
    "text": "went and found that that Microsoft doc that was like just don't use n and I was like all right I'm on board and we just like refactored out all the NES yeah I",
    "start": "1409799",
    "end": "1416080"
  },
  {
    "text": "guess I mean I have a similar attitude to it to like enums which is I'm not going to kick it out of my code base if",
    "start": "1416080",
    "end": "1421760"
  },
  {
    "text": "it's in there it's in there you know what I mean if I accidentally sort of say uh this returns string or null it's",
    "start": "1421760",
    "end": "1426919"
  },
  {
    "text": "fine but uh yeah on my best days I'm not adding null to my code base as much as",
    "start": "1426919",
    "end": "1432279"
  },
  {
    "text": "possible and you're right the kind of thing or null or undefined is just horrible because you do end up just",
    "start": "1432279",
    "end": "1437360"
  },
  {
    "text": "having to just deal with both of them but I do stand behind the one thing that null has going for it is that it's four",
    "start": "1437360",
    "end": "1443240"
  },
  {
    "text": "characters in instead of 17 I don't know who can count that high however many",
    "start": "1443240",
    "end": "1448840"
  },
  {
    "text": "undefined has trying to work out can you Alias like undefined to you or something globally across your whole code base you",
    "start": "1448840",
    "end": "1454559"
  },
  {
    "text": "probably could could you that' be nice yeah just a very long word for a keyword you know undefined I like my keywords to",
    "start": "1454559",
    "end": "1462000"
  },
  {
    "text": "be long actually I wish all keywords were like 10 letters or something just make them really stand out that's the",
    "start": "1462000",
    "end": "1467840"
  },
  {
    "text": "thing that I weirdly like love so much about rust even though I don't really write rust is in JavaScript you have",
    "start": "1467840",
    "end": "1474080"
  },
  {
    "text": "function or in typescript you have function as the keyword and then in go you Funk and in Rust they're just like",
    "start": "1474080",
    "end": "1479320"
  },
  {
    "text": "[ __ ] it FN I'm waiting for the language that just uses F and then exactly I'm in",
    "start": "1479320",
    "end": "1486039"
  },
  {
    "text": "great you're in that's your dream language just literally write minified code that's the dream I mean yeah like",
    "start": "1486039",
    "end": "1493679"
  },
  {
    "text": "for those for slow typers like me we we do appreciate it okay um",
    "start": "1493679",
    "end": "1499000"
  },
  {
    "text": "moving on to more typescripts typescript goody questions let's talk a little bit about interfaces versus type aliases uh",
    "start": "1499000",
    "end": "1506240"
  },
  {
    "start": "1502000",
    "end": "1955000"
  },
  {
    "text": "or the type keyword because this is another one that like especially early on when I started doing typescript I",
    "start": "1506240",
    "end": "1511919"
  },
  {
    "text": "just did whatever the hell I want um most of the time I'm just trying to specify that like this object literal has these certain Fields um but I know",
    "start": "1511919",
    "end": "1519000"
  },
  {
    "text": "there are differences and so do you have like number one a rule of thumb and then",
    "start": "1519000",
    "end": "1524039"
  },
  {
    "text": "two maybe you can go into a little bit of the Nuance between you know the differences between yeah like like this",
    "start": "1524039",
    "end": "1529120"
  },
  {
    "text": "is a awkward question isn't it because it's you're basically asking when I Define an object type of some type that",
    "start": "1529120",
    "end": "1535360"
  },
  {
    "text": "I want to reuse throughout my codebase in a front end framework that might be like you know props or something or you",
    "start": "1535360",
    "end": "1540840"
  },
  {
    "text": "know the the uh properties that your whatever API receives or something what",
    "start": "1540840",
    "end": "1547600"
  },
  {
    "text": "do you use what do you default to do you always use type for your objects or do you always use interface now the",
    "start": "1547600",
    "end": "1553480"
  },
  {
    "text": "difference is are objects or types rather can be unions you know you can",
    "start": "1553480",
    "end": "1558640"
  },
  {
    "text": "have this object or this object types can be literally any type in typ go functions they can be you know whatever",
    "start": "1558640",
    "end": "1564799"
  },
  {
    "text": "uh strings and numbers all that sort of thing and so in general having types is like yeah sure I can express anything",
    "start": "1564799",
    "end": "1570360"
  },
  {
    "text": "with this it's cool it's a Swiss army knife do you have Swiss Army knives in the in the US um I'm I've never owned",
    "start": "1570360",
    "end": "1577399"
  },
  {
    "text": "one but I the term is used you know what they are okay we're familiar yeah that's good sorry I we prefer guns but stop",
    "start": "1577399",
    "end": "1584640"
  },
  {
    "text": "dropping in those europeanism yeah uh I don't know what the Swiss knife of of gun would be uh anyway I don't know I",
    "start": "1584640",
    "end": "1592480"
  },
  {
    "text": "don't know either so yeah you've got this like types can be used for anything interfaces can only be used for objects",
    "start": "1592480",
    "end": "1598279"
  },
  {
    "text": "and very occasionally functions now this means that interfaces I think",
    "start": "1598279",
    "end": "1605159"
  },
  {
    "text": "are better at expressing objects than types are this is I think quite a new",
    "start": "1605159",
    "end": "1612720"
  },
  {
    "text": "thought that I've had and the reason for that is that let's say you want to combine two objects together and they're",
    "start": "1612720",
    "end": "1619559"
  },
  {
    "text": "both types let's say you have um I don't know a user um objects and then like a",
    "start": "1619559",
    "end": "1626200"
  },
  {
    "text": "admin roles object and you want to smush them together and so you've got the the ID and name coming from the user object",
    "start": "1626200",
    "end": "1632039"
  },
  {
    "text": "and you've got the roles coming from the roles object right if we imagine something something like that smush them",
    "start": "1632039",
    "end": "1637360"
  },
  {
    "text": "together and you get like an admin user or something now you can do that with types with types you would use uh an",
    "start": "1637360",
    "end": "1642880"
  },
  {
    "text": "intersection where you take the ersan key and you basically just say this and this and they smush together and create",
    "start": "1642880",
    "end": "1649240"
  },
  {
    "text": "a nice object and you can do that too with interfaces but you would have to use interface extends so you would say",
    "start": "1649240",
    "end": "1656600"
  },
  {
    "text": "okay my admin user extends user but it adds some extra properties okay now in",
    "start": "1656600",
    "end": "1663159"
  },
  {
    "text": "typescript it's actually much more efficient and safer to use interface",
    "start": "1663159",
    "end": "1668760"
  },
  {
    "text": "extends than it is for combining those types because interface extends it's",
    "start": "1668760",
    "end": "1673919"
  },
  {
    "text": "actually going to give you some guarantees when you're smushing those two objects together and there's like an order if you think about it so you've",
    "start": "1673919",
    "end": "1680360"
  },
  {
    "text": "got the base object and then you've got the thing that you're smushing into it you know like there's some inheritance",
    "start": "1680360",
    "end": "1686360"
  },
  {
    "text": "going on there and the thing that's being smoed in it has to correlate with the Bas so you can't for instance if you",
    "start": "1686360",
    "end": "1692960"
  },
  {
    "text": "have ID string in the base you then can't smush in ID number uh using interface extends does that make sense",
    "start": "1692960",
    "end": "1700320"
  },
  {
    "text": "but you can do that by can do that in types and in types what you'll get is it",
    "start": "1700320",
    "end": "1706679"
  },
  {
    "text": "will go okay you're combining ID string and ID number okay smush those together it lets you do it no error whatsoever",
    "start": "1706679",
    "end": "1713320"
  },
  {
    "text": "but then what type is ID it's not going to be string number it's not string or number right because if it was a union",
    "start": "1713320",
    "end": "1719320"
  },
  {
    "text": "that scary it's not going to be string or number it's actually going to be string and",
    "start": "1719320",
    "end": "1726080"
  },
  {
    "text": "number which is impossible and so it resolves to a type of never that ID is",
    "start": "1726760",
    "end": "1733000"
  },
  {
    "text": "never going to be defined so just silent become silently becomes never silently becomes never yeah okay like at least",
    "start": "1733000",
    "end": "1740320"
  },
  {
    "text": "typescripts a little more sane than Javas cuz like I would expect it to basically break the the unfortunate",
    "start": "1740320",
    "end": "1747080"
  },
  {
    "text": "thing is that it it breaks in an unusable way versus like an erroneous way yeah it breaks in a way I mean",
    "start": "1747080",
    "end": "1754640"
  },
  {
    "text": "nothing is assignable to never so you will eventually like somewhere down the chain when you use this type you will",
    "start": "1754640",
    "end": "1760159"
  },
  {
    "text": "get a weird error right and and you'll go what the hell is that doing there and you'll go back through the chain but often that chain is quite complex if",
    "start": "1760159",
    "end": "1766519"
  },
  {
    "text": "especially if you've got some deep into actions whereas with an interface you get that error right at the top you know",
    "start": "1766519",
    "end": "1772559"
  },
  {
    "text": "nice okay immediately when you assign it it's not going to let you do it but interfaces also have some weirdnesses as",
    "start": "1772559",
    "end": "1779200"
  },
  {
    "text": "well if you have an interface two interfaces in the same file with the same name let's say you know and this this",
    "start": "1779200",
    "end": "1787080"
  },
  {
    "text": "can sometimes happen it's happened to be before when I've got like a 2,000 line file I've got like shape defined at the",
    "start": "1787080",
    "end": "1792320"
  },
  {
    "text": "top and then shape defined at the bottom if you've got those defined as two types then you'll get an error saying",
    "start": "1792320",
    "end": "1798039"
  },
  {
    "text": "duplicate identifier because you can't have two types with the same name but two interfaces with the same name",
    "start": "1798039",
    "end": "1804919"
  },
  {
    "text": "silently merge no I didn't know that either yeah the decoration scary as [ __ ] all right",
    "start": "1804919",
    "end": "1811840"
  },
  {
    "text": "it's scary as yeah it's not great this only happens when they're in the same scope so when they're in the same module scope so like if you have two interfaces",
    "start": "1811840",
    "end": "1818600"
  },
  {
    "text": "across your code base unless they're in the global scope which they can accidentally be sometimes they won't",
    "start": "1818600",
    "end": "1823960"
  },
  {
    "text": "merge but yeah two interfaces will cation merge together and you'll end up",
    "start": "1823960",
    "end": "1830480"
  },
  {
    "text": "with um not a fun time so both of them have weird pros and cons right like I",
    "start": "1830480",
    "end": "1838000"
  },
  {
    "text": "think as long as you're being sensible with your interfaces interfaces are the better way to go and when you're doing",
    "start": "1838000",
    "end": "1844760"
  },
  {
    "text": "this kind of like merging thing interface extends always beats intersections not only because it's",
    "start": "1844760",
    "end": "1851080"
  },
  {
    "text": "safer it's actually typescripts compiler can interpret that faster because it has",
    "start": "1851080",
    "end": "1856440"
  },
  {
    "text": "more guarantees to it the other one it has to I'm not IED cases or something I",
    "start": "1856440",
    "end": "1862399"
  },
  {
    "text": "find it really hard to explain the difference in speed but basically in typescripts docs it recommends you use this interface extends over",
    "start": "1862399",
    "end": "1869919"
  },
  {
    "text": "intersections but then you also have this weird behavior of the Declaration merging of two interfaces with the same",
    "start": "1869919",
    "end": "1875720"
  },
  {
    "text": "name so I tend to these days I used to",
    "start": "1875720",
    "end": "1881760"
  },
  {
    "text": "recommend types until you need a feature of interfaces but now I actually do the reverse use interfaces still you need",
    "start": "1881760",
    "end": "1888799"
  },
  {
    "text": "until you need a feature of types that's that's where head at there there are other weird differences as well but",
    "start": "1888799",
    "end": "1894399"
  },
  {
    "text": "slightly too technical I think to explain now and that I do have a a lengthy blog post about this as well",
    "start": "1894399",
    "end": "1900240"
  },
  {
    "text": "which you can find on total typescripts good I've defaulted to the corre is thing then oh good um we've we've mostly",
    "start": "1900240",
    "end": "1906919"
  },
  {
    "text": "been using interfaces and occasionally thrown a type in there and I have not",
    "start": "1906919",
    "end": "1912279"
  },
  {
    "text": "yet luckily run into this weird merging Behavior but it's it's good to know that",
    "start": "1912279",
    "end": "1917320"
  },
  {
    "text": "that is a d it's pretty gnarly and I think as well the real difference is not",
    "start": "1917320",
    "end": "1922639"
  },
  {
    "text": "between type and interface I think they're basically interchangeable you can use whatever you want but intersections so smushing two types with",
    "start": "1922639",
    "end": "1929679"
  },
  {
    "text": "types and interface extends that's the real difference and you should always",
    "start": "1929679",
    "end": "1935000"
  },
  {
    "text": "use interface extends I want to talk about this is more of like a gray area topic I don't know if you've ever heard",
    "start": "1935000",
    "end": "1940200"
  },
  {
    "text": "the primagen use the term type masturbation but it's basically this idea that we can it yeah yeah",
    "start": "1940200",
    "end": "1948519"
  },
  {
    "text": "you you're you're playing with your types you're you know there's there's a lot of types that you could make and you",
    "start": "1948519",
    "end": "1953919"
  },
  {
    "text": "spend a lot of time making them I wonder if you have any like rules of thumb for how intense you get with your types and",
    "start": "1953919",
    "end": "1959159"
  },
  {
    "start": "1955000",
    "end": "2234000"
  },
  {
    "text": "let me give like a very basic example so often times you could type something as",
    "start": "1959159",
    "end": "1965080"
  },
  {
    "text": "any this would be like the laziest thing you could do right like ah just any and",
    "start": "1965080",
    "end": "1970159"
  },
  {
    "text": "we'll just like pass some stuff in whatever you could like scope that down to a string great now you have a lot",
    "start": "1970159",
    "end": "1975480"
  },
  {
    "text": "more safety um or you know you could type that down to like one of four specific string values right you know",
    "start": "1975480",
    "end": "1982519"
  },
  {
    "text": "there's only these four string values that are valid um you could treat it kind of I mean it could be an enom it",
    "start": "1982519",
    "end": "1988000"
  },
  {
    "text": "could also be like a type Union um like you get more more specific and then you can also do crazy things with like you",
    "start": "1988000",
    "end": "1994919"
  },
  {
    "text": "know you could Define two separate interfaces and just like you know you've got some redundancy there or like you",
    "start": "1994919",
    "end": "2001440"
  },
  {
    "text": "mentioned you can do some like crazier stuff with extends and start merging all the types together and having them kind of inherit properties from each other",
    "start": "2001440",
    "end": "2008399"
  },
  {
    "text": "um I I admit there I'm a little grug brained a lot of times I'll just like interface one interface two interface",
    "start": "2008399",
    "end": "2015360"
  },
  {
    "text": "three there's like three overlapping Fields but like I'm too lazy to do all the stuff um how do you think about this",
    "start": "2015360",
    "end": "2021000"
  },
  {
    "text": "like how much time do you spend getting just the right types it's a great question and I've got an entire chapter",
    "start": "2021000",
    "end": "2028080"
  },
  {
    "text": "about this in my book as well actually which is a free book online total typ script Essentials um I like to think of",
    "start": "2028080",
    "end": "2034240"
  },
  {
    "text": "it as the the I'm going to take that interface example there where you've got like three overlapping interfaces um",
    "start": "2034240",
    "end": "2041840"
  },
  {
    "text": "that could let's imagine that you wanted to like if you are like doing type masturbation let's say you would maybe",
    "start": "2041840",
    "end": "2049280"
  },
  {
    "text": "take all of those and like uh find a single source of Truth or maybe like a source of truth that then inherits",
    "start": "2049280",
    "end": "2055040"
  },
  {
    "text": "another source of Truth and another source of Truth so that you can find one like change one type in the base and",
    "start": "2055040",
    "end": "2060919"
  },
  {
    "text": "then it sort of uh inherits through to all of them I would call that um basically types derived from other types",
    "start": "2060919",
    "end": "2067919"
  },
  {
    "text": "so like deriving types I would say so you have one type in the source and then other types are derived from that and",
    "start": "2067919",
    "end": "2074280"
  },
  {
    "text": "you can get really crazy with this which is you can you can basically have like your source of Truth doesn't has doesn't",
    "start": "2074280",
    "end": "2081040"
  },
  {
    "text": "have to be a type as well it can be a value that you then extract maybe the keys of that from use that to type",
    "start": "2081040",
    "end": "2087240"
  },
  {
    "text": "something else use that blah blah blah blah blah blah blah and just get these crazy chains of types especially through",
    "start": "2087240",
    "end": "2093240"
  },
  {
    "text": "your application code this is very possible but then if you think about the",
    "start": "2093240",
    "end": "2098920"
  },
  {
    "text": "opposite to that what's the opposite you've got deriving on one side where you create this sort of coupling between all of your types or you can decouple",
    "start": "2098920",
    "end": "2105920"
  },
  {
    "text": "your types you can just have different interfaces for different um concerns and",
    "start": "2105920",
    "end": "2111200"
  },
  {
    "text": "just basically go smash smash smash smash smash and the discussion here I think is",
    "start": "2111200",
    "end": "2117839"
  },
  {
    "text": "really really important and it's important when you're thinking about it because decoupling it has upsides and",
    "start": "2117839",
    "end": "2125320"
  },
  {
    "text": "downsides if you have let's say I'm going to use a front- end example where",
    "start": "2125320",
    "end": "2130720"
  },
  {
    "text": "let's say you have a a navbar right and that Navar displays a little user Avatar",
    "start": "2130720",
    "end": "2136800"
  },
  {
    "text": "thing and so you need to some properties of that user uh need to be put into the",
    "start": "2136800",
    "end": "2143079"
  },
  {
    "text": "navbar and let's say you just go well I need a user right so why don't I just",
    "start": "2143079",
    "end": "2148440"
  },
  {
    "text": "grab the user uh type that I've got from let's say my database you know that I know what it is I've got it already",
    "start": "2148440",
    "end": "2154560"
  },
  {
    "text": "defined I'll just use that and so you just PL plop the whole user in there and so you might get some sort of random",
    "start": "2154560",
    "end": "2160560"
  },
  {
    "text": "excess properties and stuff but you're using quite a lot of the user anyway so it feels normal well now that type and",
    "start": "2160560",
    "end": "2167800"
  },
  {
    "text": "that component as well that navbar is coupled to your user in your database",
    "start": "2167800",
    "end": "2172839"
  },
  {
    "text": "you know what I mean just by a type being put in slightly the wrong spot and so there I think it makes much more",
    "start": "2172839",
    "end": "2178880"
  },
  {
    "text": "sense to decouple it right to have the navbar own its own properties own the",
    "start": "2178880",
    "end": "2184359"
  },
  {
    "text": "thing that need to get passed into it and then have that user be to different to have them not linked in any way and",
    "start": "2184359",
    "end": "2190760"
  },
  {
    "text": "so I think that's the decision it's very very possible though to take this too",
    "start": "2190760",
    "end": "2196280"
  },
  {
    "text": "far and end up making your app really hard to maintain because you need to change one thing in one place and then",
    "start": "2196280",
    "end": "2202240"
  },
  {
    "text": "Ripple out and do tons and tons of changes it can feel extremely powerful to have your types linked to basically",
    "start": "2202240",
    "end": "2209200"
  },
  {
    "text": "have a single source of Truth or multiple sources of truth that sort of all flow into each other and that can",
    "start": "2209200",
    "end": "2214800"
  },
  {
    "text": "feel great and can feel like a massive Improvement to a so that I think is the decision is",
    "start": "2214800",
    "end": "2221160"
  },
  {
    "text": "deriving types versus decoupling your types and that is someone like that I",
    "start": "2221160",
    "end": "2226920"
  },
  {
    "text": "think that is key to being a productive T group developer so there's almost two separate discussions here in my mind one",
    "start": "2226920",
    "end": "2233119"
  },
  {
    "text": "is like how do you build nice encapsulated components that don't have like weird external dependencies right",
    "start": "2233119",
    "end": "2239599"
  },
  {
    "start": "2234000",
    "end": "2623000"
  },
  {
    "text": "like it's weird for a Navar to depend on a database model when it probably just needs to accept a you know profile",
    "start": "2239599",
    "end": "2248000"
  },
  {
    "text": "picture and profile name or something like that yeah I almost sometimes like to think of it as like if I were to publish this on npm would I have it",
    "start": "2248000",
    "end": "2254400"
  },
  {
    "text": "accept like my database model as props with like all these fields it doesn't",
    "start": "2254400",
    "end": "2259839"
  },
  {
    "text": "need like no I'd probably like you know give it some some specific things that needs name them in maybe a more generic",
    "start": "2259839",
    "end": "2265319"
  },
  {
    "text": "way that sort of thing um key word being portability there as well right like how portable is this components how portable",
    "start": "2265319",
    "end": "2271240"
  },
  {
    "text": "is this function yeah if we grab the data now from an API instead of directly from our database are we going to have",
    "start": "2271240",
    "end": "2276480"
  },
  {
    "text": "to do some weird changes right um yeah so fully with you there a",
    "start": "2276480",
    "end": "2281720"
  },
  {
    "text": "kind of related question I have is this idea of okay we can have the kind of",
    "start": "2281720",
    "end": "2287599"
  },
  {
    "text": "derived types this this nice flowy type diagram that we talked about or we can have kind of the grug brain like I'm",
    "start": "2287599",
    "end": "2292920"
  },
  {
    "text": "just going to Define this interface five times and on the one hand the way I'm",
    "start": "2292920",
    "end": "2298160"
  },
  {
    "text": "thinking about it and I want you to correct me if I'm wrong basically is that by doing the derived type things in",
    "start": "2298160",
    "end": "2303280"
  },
  {
    "text": "a lot of ways it's better for the type author because like I only have to change in one place right like all the",
    "start": "2303280",
    "end": "2309920"
  },
  {
    "text": "types nicely flow I won't have any like weird duplicate uh issues if I need to change one field I won have to change it",
    "start": "2309920",
    "end": "2315800"
  },
  {
    "text": "in four places I can just change it into one place and it'll derive everything else but and maybe this is a skill issue",
    "start": "2315800",
    "end": "2321599"
  },
  {
    "text": "on my part sometimes I've used heavily derived types and as a user of the type",
    "start": "2321599",
    "end": "2328880"
  },
  {
    "text": "it is such a pain in the ass to figure out like what I need because I'm like okay go to definition of type and it's",
    "start": "2328880",
    "end": "2334520"
  },
  {
    "text": "just like oh it's this type and that type I go to that type oh it's this one and that one oh it's this one or that",
    "start": "2334520",
    "end": "2340160"
  },
  {
    "text": "one or that one and I'm spending like way longer trying to figure out what's actually in the damn thing and it's like",
    "start": "2340160",
    "end": "2347200"
  },
  {
    "text": "the whole purpose of types was to make was to make everything easy on us and",
    "start": "2347200",
    "end": "2352319"
  },
  {
    "text": "again maybe that's a skill issue maybe there's just some tooling that I'm unaware of that would make this whole thing easier for me but I feel like in",
    "start": "2352319",
    "end": "2357400"
  },
  {
    "text": "some ways kind of just having you know almost more more more simple more",
    "start": "2357400",
    "end": "2362640"
  },
  {
    "text": "concrete types even if there is some redundancy could be easier on the user of that type It's tricky because there's",
    "start": "2362640",
    "end": "2368839"
  },
  {
    "text": "a balance right like when you're debugging that stuff it can be a massive",
    "start": "2368839",
    "end": "2374960"
  },
  {
    "text": "pain you know as you've described and if the types are not you know set up correctly as well like it sounds like",
    "start": "2374960",
    "end": "2380560"
  },
  {
    "text": "you're using a lot of sort of smushing there like with type this and that I guess with in I'm also thinking of like",
    "start": "2380560",
    "end": "2386760"
  },
  {
    "text": "Library code that I'm that I'm importing right and it's it's like it has it's got some hairy type deriving going on yeah I",
    "start": "2386760",
    "end": "2394079"
  },
  {
    "text": "mean I was chatting to I think Auto the rocks about this who's who used to work",
    "start": "2394079",
    "end": "2399319"
  },
  {
    "text": "on the transcript team and um was key in implementing it in spelt and I basically",
    "start": "2399319",
    "end": "2404560"
  },
  {
    "text": "asked him like you know why are especially generic functions and",
    "start": "2404560",
    "end": "2410760"
  },
  {
    "text": "like generic types and that sort of the sort of really complex typescript stuff what would typescript look like if it",
    "start": "2410760",
    "end": "2416280"
  },
  {
    "text": "didn't have that you would basically need to do like everything would be decoupled right it basically just be",
    "start": "2416280",
    "end": "2422280"
  },
  {
    "text": "like grug Style just sort of Smashing out your types and sort of having to manually uh type like that I think",
    "start": "2422280",
    "end": "2428720"
  },
  {
    "text": "though that there is an expectation from users nowadays whether that and users being let's say",
    "start": "2428720",
    "end": "2435440"
  },
  {
    "text": "you have an open source Library you're writing your code and or it could be",
    "start": "2435440",
    "end": "2440680"
  },
  {
    "text": "other people on your team maybe less experienced people on your team who are also like consuming the types that you've written consuming the code that",
    "start": "2440680",
    "end": "2446800"
  },
  {
    "text": "you've written I think there's an expectation from users now that some stuff should just work right if I am",
    "start": "2446800",
    "end": "2453359"
  },
  {
    "text": "using use Query and react query or something or I'm using a Zod scheme or something it should understand what my",
    "start": "2453359",
    "end": "2459640"
  },
  {
    "text": "inputs were and properly transform my outputs on the type level and I think when you get that right when",
    "start": "2459640",
    "end": "2466800"
  },
  {
    "text": "you're able to build an API that does that properly it feels amazing but then the debugging experience you're right I",
    "start": "2466800",
    "end": "2473280"
  },
  {
    "text": "think there's still work that the tou script team can do to figure that out but I don't think the solution is just",
    "start": "2473280",
    "end": "2479400"
  },
  {
    "text": "to like is to decouple everything you know like is to go back to it's to",
    "start": "2479400",
    "end": "2484760"
  },
  {
    "text": "essentially remove the smart type stuff from the language like there's got to be some sort of middle ground and again this idea I",
    "start": "2484760",
    "end": "2491800"
  },
  {
    "text": "fully agree like removing it from the language is is would be crazy I'm just curious like if you always go as far as",
    "start": "2491800",
    "end": "2500319"
  },
  {
    "text": "you can when writing your own types or if you do sometimes kind of ah this is good enough for now a great example of",
    "start": "2500319",
    "end": "2506960"
  },
  {
    "text": "that is like I get asked this actually quite a lot is can you create a type for a hex code right a type for a hex code",
    "start": "2506960",
    "end": "2514400"
  },
  {
    "text": "like a a valid hex code string yeah like a Rex almost yeah basically yeah and I",
    "start": "2514400",
    "end": "2521720"
  },
  {
    "text": "think it is technically possible you know like you could say it just create a massive Union type between all the",
    "start": "2521720",
    "end": "2527400"
  },
  {
    "text": "possible regex like all the possible Cod possible if it's a finite set I guess I",
    "start": "2527400",
    "end": "2532440"
  },
  {
    "text": "guess I mean time grp does have some built-in um like boundaries like uh your",
    "start": "2532440",
    "end": "2538200"
  },
  {
    "text": "union time can only be like 100,000 members long or something otherwise it just",
    "start": "2538200",
    "end": "2543440"
  },
  {
    "text": "breaks but I get asked I get asked that question a lot and just say just use a string type it doesn't matter just use a",
    "start": "2543440",
    "end": "2550119"
  },
  {
    "text": "string type you know or uh create an integer type for me you know like yeah just use a number you know so there's",
    "start": "2550119",
    "end": "2557920"
  },
  {
    "text": "absolutely like limits on what you should do and I think that concept of decoupling is really important but also",
    "start": "2557920",
    "end": "2564960"
  },
  {
    "text": "how much more value is a hex code Type adding to your codebase is that going to",
    "start": "2564960",
    "end": "2570480"
  },
  {
    "text": "help you sleep better at night instead of just having a string type just name it hex just like yeah put it in the",
    "start": "2570480",
    "end": "2576200"
  },
  {
    "text": "variable name except it figure out cool okay I'm with you there I like",
    "start": "2576200",
    "end": "2583240"
  },
  {
    "text": "that and by the way I'm not advocating for this kind of grug style you know copying",
    "start": "2583240",
    "end": "2589240"
  },
  {
    "text": "of interfaces the reason I bring it up is in go it's all we have um we don't",
    "start": "2589240",
    "end": "2595599"
  },
  {
    "text": "have fancy things in go uh we're famous for not having fancy things in fact uh we're very much rocks and sticks",
    "start": "2595599",
    "end": "2601760"
  },
  {
    "text": "programmers sometimes and um we can inherit Fields kind of it's not inheritance it's uh we call it embedding",
    "start": "2601760",
    "end": "2609440"
  },
  {
    "text": "we can embed fields from one struct into another struct uh but very often we're doing very grish style things that have",
    "start": "2609440",
    "end": "2616599"
  },
  {
    "text": "more elegant Solutions in a language like typescript so yeah and I guess like a lot of that I",
    "start": "2616599",
    "end": "2624079"
  },
  {
    "start": "2623000",
    "end": "2775000"
  },
  {
    "text": "think is pretty easy for AI to understand as well you know like AI doesn't need to do any introspection it's just literally there it's exposed",
    "start": "2624079",
    "end": "2631760"
  },
  {
    "text": "and that I think yeah I mean maybe there's something T script can learn from there but it's funny you bring that",
    "start": "2631760",
    "end": "2638720"
  },
  {
    "text": "up I just had a podcast 10 episodes back with uh Natalie pestunovich",
    "start": "2638720",
    "end": "2644119"
  },
  {
    "text": "um about this topic she's she's done a lot of AI research recently and is a go programmer and basically her her",
    "start": "2644119",
    "end": "2651359"
  },
  {
    "text": "assertion is go is the best programming language uh if you're using AI tooling because it gets it right like way with",
    "start": "2651359",
    "end": "2659440"
  },
  {
    "text": "with with much higher frequency than any langu like especially JavaScript because there's a billion different ways to",
    "start": "2659440",
    "end": "2664800"
  },
  {
    "text": "write javascripts and in go there's like one kind of way to do it and yeah it's kind of like rocks and sticks but that",
    "start": "2664800",
    "end": "2671559"
  },
  {
    "text": "doesn't matter too much to the computer so it is it is interesting how there's almost this new metric for I",
    "start": "2671559",
    "end": "2678760"
  },
  {
    "text": "think how we will grade programming languages in the future this new metric that's it's not you know readability or",
    "start": "2678760",
    "end": "2685040"
  },
  {
    "text": "Elegance or expressivity it's this other thing that's like how easy is it for the machine to write this code you know",
    "start": "2685040",
    "end": "2691480"
  },
  {
    "text": "absolutely I think typescript definitely outscores JavaScript on that um on that metric as well just because there's so",
    "start": "2691480",
    "end": "2697480"
  },
  {
    "text": "much more metadata about the codee that's being written you know it's just so much more it's so much more explicit",
    "start": "2697480",
    "end": "2703599"
  },
  {
    "text": "so yeah it's it's weird that feature I'm still I'm still not quite adjusted to the idea that machines are GNA",
    "start": "2703599",
    "end": "2709400"
  },
  {
    "text": "inevitably take all our jobs I still I'm holding I mean I don't think they will",
    "start": "2709400",
    "end": "2714480"
  },
  {
    "text": "but I do think that it's like another metric of developer experience is like",
    "start": "2714480",
    "end": "2719960"
  },
  {
    "text": "how often does my like co-pilot tool get it right versus get it wrong where I'm",
    "start": "2719960",
    "end": "2726119"
  },
  {
    "text": "at on the AI disc not that we need to launch into a fully separate thing but it's looking to me that that we're just",
    "start": "2726119",
    "end": "2733240"
  },
  {
    "text": "going to have you know much better tooling every year kind of like we always have and the technical skills",
    "start": "2733240",
    "end": "2740040"
  },
  {
    "text": "that you'll need to operate that tooling will still exist um the foundational",
    "start": "2740040",
    "end": "2745559"
  },
  {
    "text": "knowledge in order to be able to use those tools will still be very similar right you still need to be able to read",
    "start": "2745559",
    "end": "2751400"
  },
  {
    "text": "and understand code and stuff but maybe the day-to-day monotony of typing it",
    "start": "2751400",
    "end": "2756480"
  },
  {
    "text": "yourself will be a little less hard I don't know yeah it's like a Second Industrial Revolution right in the first",
    "start": "2756480",
    "end": "2763119"
  },
  {
    "text": "one uh individual people got a lot better at producing Goods you know and producing more Goods individual",
    "start": "2763119",
    "end": "2769160"
  },
  {
    "text": "productivity Rose through the roof we're gonna have the same thing happen to us and that's that is going to mean fewer jobs you know that's that's just how",
    "start": "2769160",
    "end": "2774880"
  },
  {
    "text": "that works I think well I think it'll mean fewer jobs of the jobs we have now I think it'll definitely mean different",
    "start": "2774880",
    "end": "2780440"
  },
  {
    "start": "2775000",
    "end": "3120000"
  },
  {
    "text": "jobs though like a lot of new different jobs yes but fewer jobs I think overall",
    "start": "2780440",
    "end": "2787720"
  },
  {
    "text": "I think you think fewer jobs overall okay now we got to stop and talk about this I mean isn't that obvious I mean",
    "start": "2787720",
    "end": "2793400"
  },
  {
    "text": "like that's well it didn't happen with the Industrial Revolution right it's not like we have less jobs we just have",
    "start": "2793400",
    "end": "2800520"
  },
  {
    "text": "different jobs so yes but I mean individ",
    "start": "2800520",
    "end": "2805800"
  },
  {
    "text": "like that there are absolutely fewer jobs like if you were it takes a lot",
    "start": "2805800",
    "end": "2812720"
  },
  {
    "text": "more people to till the land uh with plows than it does uh to have a steam",
    "start": "2812720",
    "end": "2818559"
  },
  {
    "text": "donkey you know or something like that to have an industrial thing do the thing so there is like there is only not that",
    "start": "2818559",
    "end": "2826400"
  },
  {
    "text": "many people in the world need websites you know some people need websites so there is a um an amount",
    "start": "2826400",
    "end": "2834119"
  },
  {
    "text": "of like it's not like we have enough work out there for every single person in the world to be employed as a web",
    "start": "2834119",
    "end": "2840000"
  },
  {
    "text": "developer so once that need is met then I think the value in the web development",
    "start": "2840000",
    "end": "2846400"
  },
  {
    "text": "industry will go down you know so people will be paid less I think to work as web developers and fewer web developers will",
    "start": "2846400",
    "end": "2852760"
  },
  {
    "text": "be needed because an individual web developer can contribute more and so there will be fewer jobs in the web",
    "start": "2852760",
    "end": "2858839"
  },
  {
    "text": "development industry yeah yeah I definitely agree with that I'm talking more on like a jobs because I mean boot",
    "start": "2858839",
    "end": "2866440"
  },
  {
    "text": "Dev isn't just about web development right we do a lot of like just more generic like computer science and",
    "start": "2866440",
    "end": "2872280"
  },
  {
    "text": "programming stuff and so if the if the take is a eventually we will have far",
    "start": "2872280",
    "end": "2877839"
  },
  {
    "text": "fewer web development jobs because we can automate so much of that away which is also kind of interesting because in a",
    "start": "2877839",
    "end": "2883200"
  },
  {
    "text": "lot of ways like WordPress and Shopify and stuff kind of quote unquote took a lot of web Developer jobs but the",
    "start": "2883200",
    "end": "2889040"
  },
  {
    "text": "internet has just grown at such a wild Pace that we still haven't been able to keep up but like on like a longtime",
    "start": "2889040",
    "end": "2895160"
  },
  {
    "text": "Horizon I just outright agree with you like there's going to be you know individual productivity Rises we don't",
    "start": "2895160",
    "end": "2900319"
  },
  {
    "text": "need that many websites but the idea of engineering software to solve human",
    "start": "2900319",
    "end": "2906400"
  },
  {
    "text": "problems I can't imagine that that as an industry",
    "start": "2906400",
    "end": "2911760"
  },
  {
    "text": "like I can't imagine that we don't create a ton of jobs just working on different problems where we still have",
    "start": "2911760",
    "end": "2918119"
  },
  {
    "text": "to solve softwar related engineering problems whether you're actually Hands-On keyboard right or you're Tony",
    "start": "2918119",
    "end": "2925559"
  },
  {
    "text": "starking it with some weird I don't know hologram [ __ ] like however we're accomplishing those things I have a very",
    "start": "2925559",
    "end": "2931280"
  },
  {
    "text": "hard time believing that the total amount of jobs goes down because",
    "start": "2931280",
    "end": "2937400"
  },
  {
    "text": "if we're defining the number of jobs in absolute terms then there's more jobs",
    "start": "2937400",
    "end": "2943520"
  },
  {
    "text": "now than there were pre-industrial Revolution almost just because there's",
    "start": "2943520",
    "end": "2948559"
  },
  {
    "text": "more people right like populations grown but if it's like relative terms of like job openings versus how many jobs are",
    "start": "2948559",
    "end": "2954920"
  },
  {
    "text": "filled then I think it's been really cyclical almost just like with the economy I don't know I think you're just",
    "start": "2954920",
    "end": "2960480"
  },
  {
    "text": "going to have yeah I I it feels to me like just a a nailed on fact that is",
    "start": "2960480",
    "end": "2966720"
  },
  {
    "text": "individual productivity Rises you just need fewer people you know to do the same amount of work I guess what your",
    "start": "2966720",
    "end": "2973000"
  },
  {
    "text": "argument is that more work will become available and we'll have this sort of endless pool of uh stuff we can build",
    "start": "2973000",
    "end": "2978720"
  },
  {
    "text": "and things we can do but it just doesn't feel that makes sense I think yeah your",
    "start": "2978720",
    "end": "2983880"
  },
  {
    "text": "first statement to me sounds very Zero Sum um about the world which is almost a",
    "start": "2983880",
    "end": "2991040"
  },
  {
    "text": "philosophical SL like macroeconomic Viewpoint that maybe we disagree on I tend to be very positive Su about like",
    "start": "2991040",
    "end": "2998160"
  },
  {
    "text": "what humans want to work on and so I like to think that you know if we kind",
    "start": "2998160",
    "end": "3003520"
  },
  {
    "text": "of solve a problem right like we don't need to be tilling the field with plows",
    "start": "3003520",
    "end": "3009119"
  },
  {
    "text": "um all day that we'll move on to work on things that aren't necessarily you know",
    "start": "3009119",
    "end": "3015359"
  },
  {
    "text": "necessary for survival but like make our lives measurably better and and there",
    "start": "3015359",
    "end": "3020680"
  },
  {
    "text": "will always be people starting initiatives to do that sort of thing and thus creating jobs so that's my hope at",
    "start": "3020680",
    "end": "3026880"
  },
  {
    "text": "least I mean we could always have some sort of societal collapse where no one wants to do [ __ ] and then like there's no jobs because we don't want to",
    "start": "3026880",
    "end": "3032480"
  },
  {
    "text": "progress but my hope is that the world continues to be this kind of positive sum experience where as we solve",
    "start": "3032480",
    "end": "3038079"
  },
  {
    "text": "problems we find more problems to solve but like they're not as dire right it's",
    "start": "3038079",
    "end": "3043200"
  },
  {
    "text": "not always solving like food and housing maybe we can solve those problems but it's like other problems health problems",
    "start": "3043200",
    "end": "3050400"
  },
  {
    "text": "right curing cancer uh finding things to do all day that isn't scrolling on Tik",
    "start": "3050400",
    "end": "3056160"
  },
  {
    "text": "Tok uh maybe there's other problems we can solve I think I see your point I think I",
    "start": "3056160",
    "end": "3061240"
  },
  {
    "text": "I see what you mean like we we're we're deep in the we now in terms of philosophy AI Outlook and uh yeah I",
    "start": "3061240",
    "end": "3069280"
  },
  {
    "text": "think how can I put a bow on this I think if web development skills uh",
    "start": "3069280",
    "end": "3078359"
  },
  {
    "text": "become less valuable I think in the marketplace then it's going to be cheaper for people to pursue that sort",
    "start": "3078359",
    "end": "3084200"
  },
  {
    "text": "of initiative you know it's going to be I think less risk for VCS to just fund a cool project you know because web",
    "start": "3084200",
    "end": "3090640"
  },
  {
    "text": "development is going to like I think web dev is pretty easy to get into right now you know like it's there's tons of free",
    "start": "3090640",
    "end": "3096319"
  },
  {
    "text": "resources AI is making things so much easier and people can be productive pretty quickly yeah I can see that",
    "start": "3096319",
    "end": "3102960"
  },
  {
    "text": "feuture cool I enjoyed that I thought that was kind of a fun aside that was",
    "start": "3102960",
    "end": "3108319"
  },
  {
    "text": "cool cool I've got let's see I've got one last typescript related question I",
    "start": "3108319",
    "end": "3113880"
  },
  {
    "text": "think um this one is classes and it's it's also kind of a JavaScript",
    "start": "3113880",
    "end": "3119040"
  },
  {
    "text": "typescript question how often do you use classes um are you a functional bro or do you enjoy your objects and classes I",
    "start": "3119040",
    "end": "3127119"
  },
  {
    "start": "3120000",
    "end": "3269000"
  },
  {
    "text": "should say classes specifically uh give me your take I really like classes I really like them I think it's because",
    "start": "3127119",
    "end": "3133480"
  },
  {
    "text": "they're just objects really like objects with a little bit of uh extra stuff in them in terms of how JavaScript treats",
    "start": "3133480",
    "end": "3139319"
  },
  {
    "text": "them I really like them I think it's a nice way to organize code I I tend to",
    "start": "3139319",
    "end": "3145200"
  },
  {
    "text": "more on the sort of functional side I think just because I was a react developer for so long and functions and",
    "start": "3145200",
    "end": "3151240"
  },
  {
    "text": "obviously react used to be classes but I really got into it and enjoyed it when it was became functional components and",
    "start": "3151240",
    "end": "3156760"
  },
  {
    "text": "all that sort of stuff I really liked it and um I think I my heart flutters when I see",
    "start": "3156760",
    "end": "3164520"
  },
  {
    "text": "like a pipe function or a compose function you know that that feels to me like the right attitude getting your",
    "start": "3164520",
    "end": "3170200"
  },
  {
    "text": "functions completely separate from each other separating concerns as much as you can making your code easy to code split",
    "start": "3170200",
    "end": "3176040"
  },
  {
    "text": "and I I I tend to dislike the sort of Blobby kind of classes with methods on that inherit from other classes that",
    "start": "3176040",
    "end": "3182319"
  },
  {
    "text": "sort of thing but I I don't think there's any reason to dislike classes especially in typescripts where the",
    "start": "3182319",
    "end": "3187440"
  },
  {
    "text": "experience is really really nice because classes were like in typescripts first",
    "start": "3187440",
    "end": "3192760"
  },
  {
    "text": "version you know like they shipped with classes the experience of using classes in tcri is great it's really really good",
    "start": "3192760",
    "end": "3199319"
  },
  {
    "text": "like they they have a lot of guarantees that um if they were perhaps shipped later they might not have like it",
    "start": "3199319",
    "end": "3205839"
  },
  {
    "text": "guarantees that your initial um properties are assigned in the",
    "start": "3205839",
    "end": "3211200"
  },
  {
    "text": "Constructor um make sure that you're overriding methods in the right way it's really nice it makes sense that it would be a",
    "start": "3211200",
    "end": "3218280"
  },
  {
    "text": "good experience isn't the creator of C also creator of typescript or yes",
    "start": "3218280",
    "end": "3224680"
  },
  {
    "text": "involved he's uh and is hburg or hburg I think he yeah was brought in like uh in",
    "start": "3224680",
    "end": "3231960"
  },
  {
    "text": "probably Ty scripts like first month or something or second month to uh to head it up yeah and because of that there's",
    "start": "3231960",
    "end": "3238799"
  },
  {
    "text": "this sort of weird idea that typescript is like that's been around for a long time that typescript is somehow more",
    "start": "3238799",
    "end": "3244400"
  },
  {
    "text": "objectoriented than JavaScript you know like and it's just not true like typescript is is you know got these",
    "start": "3244400",
    "end": "3251359"
  },
  {
    "text": "amazing sort of generic functions things like that and yeah so I I don't buy that at all",
    "start": "3251359",
    "end": "3258680"
  },
  {
    "text": "but yeah classes and typescripts are really good as they are in JavaScript so pretty good too cool awesome thanks for",
    "start": "3258680",
    "end": "3264640"
  },
  {
    "text": "uh thanks for coming on and talking about all sorts of things especially types let everybody know where they can",
    "start": "3264640",
    "end": "3270559"
  },
  {
    "start": "3269000",
    "end": "3351000"
  },
  {
    "text": "find you and your projects so uh I'm on total s.com basically that's like the",
    "start": "3270559",
    "end": "3276119"
  },
  {
    "text": "home of everything I do there's a bunch of free resources on there oh my God there's like articles there's tips",
    "start": "3276119",
    "end": "3282000"
  },
  {
    "text": "there's free tutorials I wrote I've been since about last August I've been writing a book as well that is freely",
    "start": "3282000",
    "end": "3288760"
  },
  {
    "text": "available on there that got post on I think two weeks ago and that's also where all my paid courses are so I",
    "start": "3288760",
    "end": "3294680"
  },
  {
    "text": "released this course basically based on the book that's uh like a lot cheaper than anything I've done before and it's",
    "start": "3294680",
    "end": "3301839"
  },
  {
    "text": "basically designed to take you from beginner to intermediate so that's the pro Essentials course and the book is",
    "start": "3301839",
    "end": "3308040"
  },
  {
    "text": "called uh Essentials or total transcript Essentials and yeah I'm super ke for more feedback on the book uh tons of",
    "start": "3308040",
    "end": "3314880"
  },
  {
    "text": "people have been reading it and sending me messages and stuff which is really gratifying because writing a book is",
    "start": "3314880",
    "end": "3320599"
  },
  {
    "text": "hard really hard and like a a whole lot harder than recording a video course or coming on a podcast things like that",
    "start": "3320599",
    "end": "3326960"
  },
  {
    "text": "like it is a it is extremely difficult and I'm so happy that it's done and out there it's it's just great so total",
    "start": "3326960",
    "end": "3334079"
  },
  {
    "text": "tpt.com is where you'll find all my stuff awesome thanks so much for coming on Matt total typescript tocom go check",
    "start": "3334079",
    "end": "3339960"
  },
  {
    "text": "it out we'll talk to you later thanks l [Music]",
    "start": "3339960",
    "end": "3350839"
  }
]