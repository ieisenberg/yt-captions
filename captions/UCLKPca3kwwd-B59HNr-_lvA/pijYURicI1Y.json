[
  {
    "text": "[Music]",
    "start": "1040",
    "end": "13859"
  },
  {
    "text": "hey hey hey how's everyone this is simr",
    "start": "17680",
    "end": "20519"
  },
  {
    "text": "hanspal technical evangelist at hura and",
    "start": "20519",
    "end": "23720"
  },
  {
    "text": "today I'm going to talk to you about",
    "start": "23720",
    "end": "25480"
  },
  {
    "text": "building efficient hybrid R",
    "start": "25480",
    "end": "28960"
  },
  {
    "text": "queries let us understand this with the",
    "start": "28960",
    "end": "31439"
  },
  {
    "text": "use case of product search in e-commerce",
    "start": "31439",
    "end": "33719"
  },
  {
    "text": "domain present day product search is",
    "start": "33719",
    "end": "36680"
  },
  {
    "text": "mostly keyword-based keywords are not",
    "start": "36680",
    "end": "39040"
  },
  {
    "text": "great at capturing the complete intent",
    "start": "39040",
    "end": "41039"
  },
  {
    "text": "of the user search query so you want to",
    "start": "41039",
    "end": "43160"
  },
  {
    "text": "move to using natural language but",
    "start": "43160",
    "end": "45280"
  },
  {
    "text": "product search can be either contextual",
    "start": "45280",
    "end": "47840"
  },
  {
    "text": "where you're looking for when you're",
    "start": "47840",
    "end": "49320"
  },
  {
    "text": "searching for product based on the",
    "start": "49320",
    "end": "50719"
  },
  {
    "text": "descriptive nature or or it can be",
    "start": "50719",
    "end": "53000"
  },
  {
    "text": "completely structured where you're",
    "start": "53000",
    "end": "54320"
  },
  {
    "text": "querying based on the structured fields",
    "start": "54320",
    "end": "56879"
  },
  {
    "text": "or it can be both large language models",
    "start": "56879",
    "end": "59680"
  },
  {
    "text": "are great but they're frozen in time and",
    "start": "59680",
    "end": "62120"
  },
  {
    "text": "they cannot solve task on data they have",
    "start": "62120",
    "end": "64518"
  },
  {
    "text": "not seen before one of the ways to",
    "start": "64519",
    "end": "66880"
  },
  {
    "text": "expose the Unseen data to large language",
    "start": "66880",
    "end": "68840"
  },
  {
    "text": "model is by providing context to the",
    "start": "68840",
    "end": "71360"
  },
  {
    "text": "question alongside the question this",
    "start": "71360",
    "end": "73640"
  },
  {
    "text": "helps the large language model generate",
    "start": "73640",
    "end": "75640"
  },
  {
    "text": "more accurate and grounded answers this",
    "start": "75640",
    "end": "78840"
  },
  {
    "text": "powerful technique is called retrieval",
    "start": "78840",
    "end": "80920"
  },
  {
    "text": "augmented generation or r a in short so",
    "start": "80920",
    "end": "84079"
  },
  {
    "text": "you see we need to build a rag pipeline",
    "start": "84079",
    "end": "86479"
  },
  {
    "text": "for our product search use case we also",
    "start": "86479",
    "end": "88759"
  },
  {
    "text": "need to make sure that our Riot pipeline",
    "start": "88759",
    "end": "90720"
  },
  {
    "text": "is production ready and will not leak",
    "start": "90720",
    "end": "92920"
  },
  {
    "text": "any sensitive data even if",
    "start": "92920",
    "end": "95360"
  },
  {
    "text": "prompted this security concern has been",
    "start": "95360",
    "end": "98360"
  },
  {
    "text": "one of the primary concerns of",
    "start": "98360",
    "end": "100079"
  },
  {
    "text": "Enterprises when building geni",
    "start": "100079",
    "end": "104119"
  },
  {
    "text": "applications data driven applications",
    "start": "104119",
    "end": "106479"
  },
  {
    "text": "have been around for a while then why",
    "start": "106479",
    "end": "108680"
  },
  {
    "text": "are we talking about secure data",
    "start": "108680",
    "end": "110320"
  },
  {
    "text": "retrieval all over again for Gen",
    "start": "110320",
    "end": "113159"
  },
  {
    "text": "applications well this is because we are",
    "start": "113159",
    "end": "115640"
  },
  {
    "text": "seeing a paradigm shift in application",
    "start": "115640",
    "end": "118600"
  },
  {
    "text": "development with data driven",
    "start": "118600",
    "end": "120640"
  },
  {
    "text": "applications data is mostly constant and",
    "start": "120640",
    "end": "123479"
  },
  {
    "text": "it is the application or the software",
    "start": "123479",
    "end": "125640"
  },
  {
    "text": "that evolves for any different or new",
    "start": "125640",
    "end": "128160"
  },
  {
    "text": "functionality for example product search",
    "start": "128160",
    "end": "131080"
  },
  {
    "text": "on current e-commerce websites would",
    "start": "131080",
    "end": "133080"
  },
  {
    "text": "pick constant data fields only the",
    "start": "133080",
    "end": "135640"
  },
  {
    "text": "records or the results would",
    "start": "135640",
    "end": "139599"
  },
  {
    "text": "change while in context um context driv",
    "start": "139599",
    "end": "143640"
  },
  {
    "text": "or rag application the data is no longer",
    "start": "143640",
    "end": "146400"
  },
  {
    "text": "a constant data packet and it needs to",
    "start": "146400",
    "end": "149160"
  },
  {
    "text": "adapt to the dynamic needs of the users",
    "start": "149160",
    "end": "151760"
  },
  {
    "text": "natural language query with natural",
    "start": "151760",
    "end": "154440"
  },
  {
    "text": "language query there is no structural",
    "start": "154440",
    "end": "156920"
  },
  {
    "text": "limitations and it can and it gives a",
    "start": "156920",
    "end": "160000"
  },
  {
    "text": "scope for malicious",
    "start": "160000",
    "end": "162319"
  },
  {
    "text": "attack good news hura enables you to",
    "start": "162319",
    "end": "165360"
  },
  {
    "text": "build secure data API over your multiple",
    "start": "165360",
    "end": "167879"
  },
  {
    "text": "different data sources in no time hura",
    "start": "167879",
    "end": "170879"
  },
  {
    "text": "apis are graphql apis and hence they",
    "start": "170879",
    "end": "174159"
  },
  {
    "text": "dynamic in nature so you get unified",
    "start": "174159",
    "end": "177280"
  },
  {
    "text": "Dynamic secure data API in no time just",
    "start": "177280",
    "end": "180720"
  },
  {
    "text": "what we needed so let's get started with",
    "start": "180720",
    "end": "183080"
  },
  {
    "text": "building a rag pipeline for our product",
    "start": "183080",
    "end": "185680"
  },
  {
    "text": "search use",
    "start": "185680",
    "end": "187319"
  },
  {
    "text": "case let us again look at what are the",
    "start": "187319",
    "end": "190879"
  },
  {
    "text": "different queries that we uh that we can",
    "start": "190879",
    "end": "193120"
  },
  {
    "text": "expect for our rag applications we can",
    "start": "193120",
    "end": "195560"
  },
  {
    "text": "have semantic search where we searching",
    "start": "195560",
    "end": "198080"
  },
  {
    "text": "based on semantic similarity with",
    "start": "198080",
    "end": "200319"
  },
  {
    "text": "product description from product uh",
    "start": "200319",
    "end": "202879"
  },
  {
    "text": "Vector DB we can also have structured",
    "start": "202879",
    "end": "205720"
  },
  {
    "text": "search where we are searching based on",
    "start": "205720",
    "end": "208280"
  },
  {
    "text": "structured fields in the relation",
    "start": "208280",
    "end": "210280"
  },
  {
    "text": "database um like for example price and",
    "start": "210280",
    "end": "213560"
  },
  {
    "text": "category in postest and this requires",
    "start": "213560",
    "end": "216879"
  },
  {
    "text": "converting the natural language query",
    "start": "216879",
    "end": "218799"
  },
  {
    "text": "into a structured query like SQL or",
    "start": "218799",
    "end": "221560"
  },
  {
    "text": "graphql then we can also have hybrid",
    "start": "221560",
    "end": "224239"
  },
  {
    "text": "queries these searches have the elements",
    "start": "224239",
    "end": "226680"
  },
  {
    "text": "of both semantic and structured queries",
    "start": "226680",
    "end": "229360"
  },
  {
    "text": "with Hur we don't need to build separate",
    "start": "229360",
    "end": "231519"
  },
  {
    "text": "data apis for each of them we can build",
    "start": "231519",
    "end": "233959"
  },
  {
    "text": "a unified data API for all three of",
    "start": "233959",
    "end": "237400"
  },
  {
    "text": "them so let's get started we start by",
    "start": "237400",
    "end": "240720"
  },
  {
    "text": "connecting a multiple different data",
    "start": "240720",
    "end": "242400"
  },
  {
    "text": "sources with hura and then we query it",
    "start": "242400",
    "end": "245480"
  },
  {
    "text": "using a single graphql API I've also",
    "start": "245480",
    "end": "248760"
  },
  {
    "text": "built a streamlet application which",
    "start": "248760",
    "end": "250920"
  },
  {
    "text": "takes in the user input calls the large",
    "start": "250920",
    "end": "253400"
  },
  {
    "text": "language model generates a graphql AP",
    "start": "253400",
    "end": "256320"
  },
  {
    "text": "query which then gets executed on hup so",
    "start": "256320",
    "end": "260440"
  },
  {
    "text": "let's head over to hup console to get a",
    "start": "260440",
    "end": "263120"
  },
  {
    "text": "feel of what it looks like to start",
    "start": "263120",
    "end": "266720"
  },
  {
    "text": "we'll go to the data tab to connect all",
    "start": "266720",
    "end": "269360"
  },
  {
    "text": "of for different data sources I'm not",
    "start": "269360",
    "end": "271840"
  },
  {
    "text": "going to do that because I have my um",
    "start": "271840",
    "end": "275039"
  },
  {
    "text": "product post table and product Vector",
    "start": "275039",
    "end": "277800"
  },
  {
    "text": "table already integrated as I mentioned",
    "start": "277800",
    "end": "280520"
  },
  {
    "text": "before you can use hura to query both um",
    "start": "280520",
    "end": "284800"
  },
  {
    "text": "your relational and Vector DB and",
    "start": "284800",
    "end": "286720"
  },
  {
    "text": "multiple data sources using a single",
    "start": "286720",
    "end": "288880"
  },
  {
    "text": "graphql API but for the sake of",
    "start": "288880",
    "end": "291039"
  },
  {
    "text": "Simplicity of this demo I'm going to be",
    "start": "291039",
    "end": "293280"
  },
  {
    "text": "using only the vector DB so I'm using",
    "start": "293280",
    "end": "296800"
  },
  {
    "text": "vb8 in this case where I have my my",
    "start": "296800",
    "end": "299919"
  },
  {
    "text": "vectors and I have also got my price and",
    "start": "299919",
    "end": "303320"
  },
  {
    "text": "category structured Fields here one",
    "start": "303320",
    "end": "305600"
  },
  {
    "text": "thing to note here is that I have used",
    "start": "305600",
    "end": "307680"
  },
  {
    "text": "hur's event to autov vectorize um my",
    "start": "307680",
    "end": "311800"
  },
  {
    "text": "records into my Vector DB which means as",
    "start": "311800",
    "end": "314080"
  },
  {
    "text": "in when a new record got inserted into",
    "start": "314080",
    "end": "316240"
  },
  {
    "text": "my for CR table it got autov vectorized",
    "start": "316240",
    "end": "319000"
  },
  {
    "text": "and saved in my Vector DB amazing I",
    "start": "319000",
    "end": "322960"
  },
  {
    "text": "know so let's go back to let's go to our",
    "start": "322960",
    "end": "326080"
  },
  {
    "text": "API tab this is where you will you can",
    "start": "326080",
    "end": "329280"
  },
  {
    "text": "um play around execute different queries",
    "start": "329280",
    "end": "331400"
  },
  {
    "text": "and see the",
    "start": "331400",
    "end": "333960"
  },
  {
    "text": "results nice now that we have gotten a",
    "start": "334240",
    "end": "338080"
  },
  {
    "text": "fairly decent sense of what hura console",
    "start": "338080",
    "end": "341039"
  },
  {
    "text": "is like we can move to the Streamline",
    "start": "341039",
    "end": "343840"
  },
  {
    "text": "app that I have created as you can see",
    "start": "343840",
    "end": "347039"
  },
  {
    "text": "there are few configurations on the left",
    "start": "347039",
    "end": "349560"
  },
  {
    "text": "hand side panel so you have hur's",
    "start": "349560",
    "end": "351479"
  },
  {
    "text": "endpoint and admin secret this is",
    "start": "351479",
    "end": "353759"
  },
  {
    "text": "required to connect with Hur securely",
    "start": "353759",
    "end": "356479"
  },
  {
    "text": "and then I also have open eyes um API",
    "start": "356479",
    "end": "359759"
  },
  {
    "text": "key this is required for the chat",
    "start": "359759",
    "end": "361840"
  },
  {
    "text": "completion API that I'm",
    "start": "361840",
    "end": "364199"
  },
  {
    "text": "using so let's begin Let's uh begin with",
    "start": "364199",
    "end": "367720"
  },
  {
    "text": "querying the three different uh context",
    "start": "367720",
    "end": "371639"
  },
  {
    "text": "uh that we were talking about that we",
    "start": "371639",
    "end": "373160"
  },
  {
    "text": "want to fetch so let's start with Pur",
    "start": "373160",
    "end": "375639"
  },
  {
    "text": "semantic one let's look at the different",
    "start": "375639",
    "end": "378000"
  },
  {
    "text": "product descriptions that we have and",
    "start": "378000",
    "end": "380360"
  },
  {
    "text": "pick something let us pick um products",
    "start": "380360",
    "end": "383840"
  },
  {
    "text": "on essential oils so let me say show me",
    "start": "383840",
    "end": "388599"
  },
  {
    "text": "essential",
    "start": "388599",
    "end": "390199"
  },
  {
    "text": "oils for",
    "start": "390199",
    "end": "393520"
  },
  {
    "text": "relaxation great so we've gotten the",
    "start": "400840",
    "end": "403000"
  },
  {
    "text": "graph C query which has identified",
    "start": "403000",
    "end": "405520"
  },
  {
    "text": "essential oils for relaxation as the",
    "start": "405520",
    "end": "407680"
  },
  {
    "text": "descriptive part of the query which we",
    "start": "407680",
    "end": "409960"
  },
  {
    "text": "want to find in our Vector DB by doing a",
    "start": "409960",
    "end": "413000"
  },
  {
    "text": "semantic search and we can also see that",
    "start": "413000",
    "end": "416000"
  },
  {
    "text": "we have gotten the results for this",
    "start": "416000",
    "end": "420199"
  },
  {
    "text": "query nice let's go over and execute a",
    "start": "420199",
    "end": "424280"
  },
  {
    "text": "structured query price is a good field",
    "start": "424280",
    "end": "426720"
  },
  {
    "text": "to execute execute a structured query so",
    "start": "426720",
    "end": "429080"
  },
  {
    "text": "let's say um let say show me all",
    "start": "429080",
    "end": "433440"
  },
  {
    "text": "products less",
    "start": "433440",
    "end": "436319"
  },
  {
    "text": "than",
    "start": "436319",
    "end": "438160"
  },
  {
    "text": "price",
    "start": "438160",
    "end": "441160"
  },
  {
    "text": "$500 wait so it has rightly identified",
    "start": "445720",
    "end": "448800"
  },
  {
    "text": "that there is a price filter with the",
    "start": "448800",
    "end": "451080"
  },
  {
    "text": "less than",
    "start": "451080",
    "end": "452520"
  },
  {
    "text": "condition and it shows you all the",
    "start": "452520",
    "end": "455319"
  },
  {
    "text": "different products with price less than",
    "start": "455319",
    "end": "458360"
  },
  {
    "text": "500 nice let's execute a hybrid query",
    "start": "458360",
    "end": "463599"
  },
  {
    "text": "now let's see looking for essential oil",
    "start": "466199",
    "end": "470120"
  },
  {
    "text": "diffusers in the price range of $500 to",
    "start": "470120",
    "end": "474400"
  },
  {
    "text": ",000 thanks so we got a graphel query",
    "start": "477280",
    "end": "481360"
  },
  {
    "text": "where it identified amazing essential",
    "start": "481360",
    "end": "483840"
  },
  {
    "text": "oil diffuser as the semantic search",
    "start": "483840",
    "end": "487360"
  },
  {
    "text": "query and then the price filter which is",
    "start": "487360",
    "end": "489919"
  },
  {
    "text": "between 500,000 and we received our",
    "start": "489919",
    "end": "494280"
  },
  {
    "text": "results",
    "start": "494280",
    "end": "496240"
  },
  {
    "text": "nice so far we have executed only the",
    "start": "496240",
    "end": "499599"
  },
  {
    "text": "happy flows um we have not looked at any",
    "start": "499599",
    "end": "503560"
  },
  {
    "text": "other query Weare of unhappy flows but",
    "start": "503560",
    "end": "506000"
  },
  {
    "text": "let's say I had an evil intent and I",
    "start": "506000",
    "end": "508879"
  },
  {
    "text": "wanted to execute a malicious query uh",
    "start": "508879",
    "end": "511840"
  },
  {
    "text": "which is not the typical queries that we",
    "start": "511840",
    "end": "514120"
  },
  {
    "text": "just looked at so I have a malicious",
    "start": "514120",
    "end": "516599"
  },
  {
    "text": "query let's execute this so this one is",
    "start": "516599",
    "end": "521360"
  },
  {
    "text": "requesting to insert a project of ha",
    "start": "521360",
    "end": "524839"
  },
  {
    "text": "hairil product um with the name special",
    "start": "524839",
    "end": "528720"
  },
  {
    "text": "oil",
    "start": "528720",
    "end": "530760"
  },
  {
    "text": "and price of 10,000 doar category is",
    "start": "530760",
    "end": "535120"
  },
  {
    "text": "home fantastic hair oil is the",
    "start": "535120",
    "end": "537120"
  },
  {
    "text": "description and let's also add the",
    "start": "537120",
    "end": "539320"
  },
  {
    "text": "project ID and say this is",
    "start": "539320",
    "end": "543079"
  },
  {
    "text": "7,1 okay let's execute",
    "start": "543079",
    "end": "547360"
  },
  {
    "text": "this so as you can see it it has",
    "start": "549680",
    "end": "552560"
  },
  {
    "text": "generated a graphql query of type insert",
    "start": "552560",
    "end": "556399"
  },
  {
    "text": "mutation but what we see is that it has",
    "start": "556399",
    "end": "559720"
  },
  {
    "text": "also inserted the query so let's go back",
    "start": "559720",
    "end": "561959"
  },
  {
    "text": "to our table and console and look for",
    "start": "561959",
    "end": "566040"
  },
  {
    "text": "product",
    "start": "566040",
    "end": "567640"
  },
  {
    "text": "ID equal to",
    "start": "567640",
    "end": "571120"
  },
  {
    "text": "10,1 just remove the quote because this",
    "start": "572959",
    "end": "576050"
  },
  {
    "text": "[Music]",
    "start": "576050",
    "end": "577680"
  },
  {
    "text": "is integer",
    "start": "577680",
    "end": "579920"
  },
  {
    "text": "fi and there you go we have the product",
    "start": "579920",
    "end": "583760"
  },
  {
    "text": "which has gotten inserted into the",
    "start": "583760",
    "end": "585519"
  },
  {
    "text": "database um this was not the intended",
    "start": "585519",
    "end": "588880"
  },
  {
    "text": "Behavior this is not what should have",
    "start": "588880",
    "end": "590680"
  },
  {
    "text": "happened so let us quickly go back to",
    "start": "590680",
    "end": "592880"
  },
  {
    "text": "our hurra console again and this time we",
    "start": "592880",
    "end": "596000"
  },
  {
    "text": "are going to be defining a new role with",
    "start": "596000",
    "end": "598360"
  },
  {
    "text": "very restricted permissions so that we",
    "start": "598360",
    "end": "601839"
  },
  {
    "text": "only provide select permission and such",
    "start": "601839",
    "end": "604240"
  },
  {
    "text": "that this does not happen again so I'm",
    "start": "604240",
    "end": "605839"
  },
  {
    "text": "going to create a new role let's call it",
    "start": "605839",
    "end": "607959"
  },
  {
    "text": "product search b and I'm going to",
    "start": "607959",
    "end": "611560"
  },
  {
    "text": "provide only search permission let's go",
    "start": "611560",
    "end": "615560"
  },
  {
    "text": "without any checks I'm going to keep it",
    "start": "615560",
    "end": "617320"
  },
  {
    "text": "really simple let me allow all the",
    "start": "617320",
    "end": "620040"
  },
  {
    "text": "product all the columns to be accessible",
    "start": "620040",
    "end": "622720"
  },
  {
    "text": "for this",
    "start": "622720",
    "end": "623720"
  },
  {
    "text": "Ro that's about it nice so the role has",
    "start": "623720",
    "end": "627959"
  },
  {
    "text": "gotten ins",
    "start": "627959",
    "end": "629560"
  },
  {
    "text": "now let's query same thing with the new",
    "start": "629560",
    "end": "631880"
  },
  {
    "text": "rule so let's say product search b but",
    "start": "631880",
    "end": "636079"
  },
  {
    "text": "this time let me just modify this quy a",
    "start": "636079",
    "end": "638440"
  },
  {
    "text": "little bit and say",
    "start": "638440",
    "end": "641839"
  },
  {
    "text": "7,2 Okay so let's execute this and see",
    "start": "641839",
    "end": "644760"
  },
  {
    "text": "what",
    "start": "644760",
    "end": "646920"
  },
  {
    "text": "happens nice so we got the same insert",
    "start": "648240",
    "end": "651440"
  },
  {
    "text": "mutation query um to be generated but",
    "start": "651440",
    "end": "654279"
  },
  {
    "text": "this thing there was an error executing",
    "start": "654279",
    "end": "656279"
  },
  {
    "text": "this rightly so because we have defined",
    "start": "656279",
    "end": "659639"
  },
  {
    "text": "a role which does not have the",
    "start": "659639",
    "end": "661040"
  },
  {
    "text": "permission for insert",
    "start": "661040",
    "end": "663720"
  },
  {
    "text": "queries great so this is all from me",
    "start": "663720",
    "end": "666320"
  },
  {
    "text": "thank you everyone um thank you once",
    "start": "666320",
    "end": "669040"
  },
  {
    "text": "again so let us really quickly recap in",
    "start": "669040",
    "end": "671920"
  },
  {
    "text": "this demo we learned how we can use hura",
    "start": "671920",
    "end": "674519"
  },
  {
    "text": "to build hybrid query context um for",
    "start": "674519",
    "end": "677639"
  },
  {
    "text": "your sophisticated rag applications like",
    "start": "677639",
    "end": "679839"
  },
  {
    "text": "product search if you like the demo or",
    "start": "679839",
    "end": "682480"
  },
  {
    "text": "would like to use Hur for your rag",
    "start": "682480",
    "end": "684160"
  },
  {
    "text": "application please reach out to me these",
    "start": "684160",
    "end": "686079"
  },
  {
    "text": "are my contact details and thank you so",
    "start": "686079",
    "end": "688079"
  },
  {
    "text": "much",
    "start": "688079",
    "end": "690959"
  }
]