[
  {
    "text": "[Music]",
    "start": "350",
    "end": "13920"
  },
  {
    "text": "so thank you everyone we have uh a very full room today um so we'll get started",
    "start": "13920",
    "end": "21320"
  },
  {
    "text": "with the repo here in a second there is a QR code here and then in a couple other slides that all link to the same",
    "start": "21320",
    "end": "26480"
  },
  {
    "text": "place we'll be using a uh python notebook um we'll be doing graph rag",
    "start": "26480",
    "end": "31920"
  },
  {
    "text": "with some real data using Neo forj so it'll be myself um I'm Zach and then we have Andreas or ABK in the back who will",
    "start": "31920",
    "end": "39559"
  },
  {
    "text": "be helping and then we have Michael hunger um somewhere else in the room who can help um answer questions um and and",
    "start": "39559",
    "end": "49239"
  },
  {
    "text": "toage as well hello toage um back there in the base who can help answer questions as well as we go through um so",
    "start": "49239",
    "end": "57640"
  },
  {
    "text": "um this is an interactive section session we have only two hours so we're asking to save the big questions to the",
    "start": "57640",
    "end": "63879"
  },
  {
    "text": "end but basically we'll be popping back and forth between the slides um and then between Hands-On work inside of a",
    "start": "63879",
    "end": "69960"
  },
  {
    "text": "notebook um so if you do get stuck with anything raise your hand um we'll come over and try to help you through and try",
    "start": "69960",
    "end": "75759"
  },
  {
    "text": "to stick to our schedule as well with around 10 to 15 minutes um per each section and there's about five sections",
    "start": "75759",
    "end": "81880"
  },
  {
    "text": "for us to walk through so before we start there's two things we want to do",
    "start": "81880",
    "end": "87079"
  },
  {
    "text": "if you haven't done them already the first thing is we want to want to create a blank neop forj graph data science",
    "start": "87079",
    "end": "94000"
  },
  {
    "text": "sandbox this is going to be at sandbox. nefor j.com so basically what you're",
    "start": "94000",
    "end": "99360"
  },
  {
    "text": "going to do if I go ahead and click this link um you might have to create an account really quickly on this page um",
    "start": "99360",
    "end": "106200"
  },
  {
    "text": "and then you're going to click for data science here and then it's going to be this if you can see um this blank graph data science",
    "start": "106200",
    "end": "114680"
  },
  {
    "text": "thing here so you're going to click on that blank sandbox graph data science um",
    "start": "114680",
    "end": "120399"
  },
  {
    "text": "and then you're that will create an instance for you um and it should come up with username and password that",
    "start": "120399",
    "end": "126560"
  },
  {
    "text": "you're going to use inside of the notebook so this will be the database that we'll use throughout the course um the next thing that you're",
    "start": "126560",
    "end": "133599"
  },
  {
    "text": "going to do is go to the notebook um so the notebook is going to be in this link",
    "start": "133599",
    "end": "138879"
  },
  {
    "text": "um and also by the way this QR code so I'll go back to that in just a second if you missed it um but before that I just",
    "start": "138879",
    "end": "145440"
  },
  {
    "text": "want to show you this GitHub repository um and it's gen work shop is The",
    "start": "145440",
    "end": "150720"
  },
  {
    "text": "Notebook so what you're going to want to do is you're going to want to go to this notebook and then you're going to want",
    "start": "150720",
    "end": "156239"
  },
  {
    "text": "to click opening collab um this will require a Google account if you don't",
    "start": "156239",
    "end": "161640"
  },
  {
    "text": "have a Google account um you can use VSS code or you can run it locally that's",
    "start": "161640",
    "end": "166800"
  },
  {
    "text": "fine um but then when you go in if you are using Google collab um the internet's a little bit slow so it might",
    "start": "166800",
    "end": "173200"
  },
  {
    "text": "take a while um for it to load here um hopefully once everyone's get settled it will go a little bit faster um but",
    "start": "173200",
    "end": "180080"
  },
  {
    "text": "basically what will happen is you just want to go to the top menu um and you're basically going to go like file um and",
    "start": "180080",
    "end": "186959"
  },
  {
    "text": "you're going to save a copy and drive um just so that you have the ability to edit",
    "start": "186959",
    "end": "192599"
  },
  {
    "text": "it um so you go file and then you say save a copy and drive and then it will",
    "start": "192599",
    "end": "197680"
  },
  {
    "text": "create another copy for you so I'm going to go back to the slide",
    "start": "197680",
    "end": "203040"
  },
  {
    "text": "and I'll um give everyone um a little while to get that all set up um actually",
    "start": "203040",
    "end": "209840"
  },
  {
    "text": "too while we're waiting on that 15 people can still sit in the front if you don't want to stand in the",
    "start": "209840",
    "end": "215920"
  },
  {
    "text": "back so feel free yes um it might be a good idea for you",
    "start": "215920",
    "end": "221599"
  },
  {
    "text": "to start running the notebook cells so um especially the first cell the PIP",
    "start": "221599",
    "end": "226879"
  },
  {
    "text": "install um just cuz that might take a little while um if when you just start that might it's probably the longest",
    "start": "226879",
    "end": "233120"
  },
  {
    "text": "running cell in the whole notebook is just loading all the requirements for today um so to say again",
    "start": "233120",
    "end": "240400"
  },
  {
    "text": "create your sandbox uh blank sandbox at um blank sandbox uh GDs graph data",
    "start": "240400",
    "end": "249439"
  },
  {
    "text": "science and then you're going to open that notebook create a copy of it or have it locally and then start running",
    "start": "249439",
    "end": "256320"
  },
  {
    "text": "that uh pip install uh cell right here",
    "start": "256320",
    "end": "262199"
  },
  {
    "text": "I did the blank sandbox instead of the blank data science sandbox that one will",
    "start": "272000",
    "end": "279199"
  },
  {
    "text": "maybe work but what I'd recommend doing is just terminating that instance so if you go to the um if you go to the screen",
    "start": "279199",
    "end": "287240"
  },
  {
    "text": "once it's there just uh press terminate there's like a garbage can icon and then go and create a graph uh data science",
    "start": "287240",
    "end": "294120"
  },
  {
    "text": "sandbox yeah blank it's blank sandbox dgraph data science is the one we want",
    "start": "294120",
    "end": "301639"
  },
  {
    "text": "so the main difference is actually that the graph data science sent box has a little bit more of memory so as you're",
    "start": "302320",
    "end": "308400"
  },
  {
    "text": "doing some more involved operations it's just faster to complete so regular blank one should still work",
    "start": "308400",
    "end": "314600"
  },
  {
    "text": "but it will take longer so the graph data sence one will just be faster so it runs with a little bit more memory",
    "start": "314600",
    "end": "322199"
  },
  {
    "text": "yes yeah I know it's we need to work on that it's a little bit",
    "start": "322400",
    "end": "327720"
  },
  {
    "text": "tricky all righty so um I'll leave this here is there can I",
    "start": "327720",
    "end": "333600"
  },
  {
    "text": "get a show off hands of how many people have the notebook set up okay so we're pretty",
    "start": "333600",
    "end": "341000"
  },
  {
    "text": "good um is there is there anyone who still needs to stay on this PR",
    "start": "341000",
    "end": "348319"
  },
  {
    "text": "code no okay we'll go ahead and move on um so I'm going to do like my general",
    "start": "349000",
    "end": "355199"
  },
  {
    "text": "Spiel that I normally do I think for a lot of us this is going to be review um we're we're going to be talking a lot",
    "start": "355199",
    "end": "360600"
  },
  {
    "text": "about retrieval augmented generation today um and for those who are you know unfamiliar right retrieval augmented",
    "start": "360600",
    "end": "366960"
  },
  {
    "text": "generation is just when you have this step in the middle when you're communicating with a large language model where instead of sort of like in a",
    "start": "366960",
    "end": "374280"
  },
  {
    "text": "chat GPT like way where you're just sending a a question and getting a response back um you're going to have",
    "start": "374280",
    "end": "380800"
  },
  {
    "text": "that uh llm application go and pull relevant data through some query um that",
    "start": "380800",
    "end": "386080"
  },
  {
    "text": "it can then use to reduce hallucinations provide more domain speciic specific context um enable better traceability",
    "start": "386080",
    "end": "393280"
  },
  {
    "text": "Etc and when we talk about graph powered retrieval augmented generation or we'll use the word graph rag kind of",
    "start": "393280",
    "end": "400520"
  },
  {
    "text": "throughout this course um is we're talking about the combination of three things that we're going to look at today",
    "start": "400520",
    "end": "406000"
  },
  {
    "text": "so that's going to be Vector search which I'm sure a lot of you are already fair Fairly familiar with knowledge",
    "start": "406000",
    "end": "412000"
  },
  {
    "text": "graph traversals which is going to be traversing over structur data in addition to the vector search and then",
    "start": "412000",
    "end": "418080"
  },
  {
    "text": "we're going to do some cool things with gra data science so we're actually going to create a new type of embedding a graph embedding and we're going to use",
    "start": "418080",
    "end": "424360"
  },
  {
    "text": "that that Vector to do some very interesting things for recommendations with structured",
    "start": "424360",
    "end": "430560"
  },
  {
    "text": "data um and today so um everyone does chatbots which chap outs are wonderful I",
    "start": "430560",
    "end": "436759"
  },
  {
    "text": "wanted to do something a little bit different today um so we're actually going to do an example of using a large",
    "start": "436759",
    "end": "442440"
  },
  {
    "text": "language model to construct an email um sort of like a recommendation recommendation type of email um and and",
    "start": "442440",
    "end": "449599"
  },
  {
    "text": "this is going to be for clothing so imagine um someone's looking for something like a halter neck toop right",
    "start": "449599",
    "end": "456160"
  },
  {
    "text": "how do you choose what to buy well you need a list of things that are available in your online store you need to match",
    "start": "456160",
    "end": "462759"
  },
  {
    "text": "that specifically for that specific customer right which different customers might have different preferences um and",
    "start": "462759",
    "end": "469440"
  },
  {
    "text": "then you might want to have other recommendations to pair with that item like maybe a pair of pants um or a hat",
    "start": "469440",
    "end": "476280"
  },
  {
    "text": "or other accessories and things of that nature um and so what we're going to do today",
    "start": "476280",
    "end": "482039"
  },
  {
    "text": "is sort of build an AI fashion assistance so to speak to help scale this um so we're going to use real world",
    "start": "482039",
    "end": "488440"
  },
  {
    "text": "data from uh kagle competition from H&M um and we're going to do some search and retrieval we're going to add some",
    "start": "488440",
    "end": "494759"
  },
  {
    "text": "context for personalization a small recommendation engine and we're going to wrap that into sort of an llm chain",
    "start": "494759",
    "end": "500479"
  },
  {
    "text": "inside of Lang chain to show you how to generate that response um and the idea behind this",
    "start": "500479",
    "end": "506360"
  },
  {
    "text": "right is again we're combining sort of this knowledge graph which Prov this context and this enrichment with the",
    "start": "506360",
    "end": "512039"
  },
  {
    "text": "large language model giving that reasoning and that creativity and sort of the we're giving some Liberty to the",
    "start": "512039",
    "end": "518000"
  },
  {
    "text": "large language model to kind of take what's in the knowledge graph based on the customer's purchase behavior and",
    "start": "518000",
    "end": "523560"
  },
  {
    "text": "other textual data and vectors um and and kind of say use your creativity to",
    "start": "523560",
    "end": "528880"
  },
  {
    "text": "put something together for this customer basically um and while we're doing sort of a fashion recommendation thing here",
    "start": "528880",
    "end": "535920"
  },
  {
    "text": "this same process could work for different types of support agents um um or or a lot of different types of internal search and customer experience",
    "start": "535920",
    "end": "542680"
  },
  {
    "text": "use cases um and this is what we're going to build today um Shing the deck what's",
    "start": "542680",
    "end": "549160"
  },
  {
    "text": "that Shing the deck deck is in the GitHub repo I need to it's not the most it's not exactly the one that I have",
    "start": "549160",
    "end": "555160"
  },
  {
    "text": "here but I'll I'll update it tonight PDF PDF the workshop SL PD a p the the PDF",
    "start": "555160",
    "end": "562560"
  },
  {
    "text": "of the workshop slides is in the repo yep yep yep um so this is what we're going to",
    "start": "562560",
    "end": "568240"
  },
  {
    "text": "build today it's a little grad app um where basically we're going to enter in some customer information their ID a",
    "start": "568240",
    "end": "574800"
  },
  {
    "text": "time of year um and some of the things they're interested in and we're going to generate an email that provides uh",
    "start": "574800",
    "end": "580600"
  },
  {
    "text": "various recommendations to that customer um so imagine you're trying to create targeted marketing content or whatever",
    "start": "580600",
    "end": "586760"
  },
  {
    "text": "it may be this is sort of an example of how to do that um and these are the specific Technologies we'll be using um",
    "start": "586760",
    "end": "593800"
  },
  {
    "text": "so we're going to use open AI for the language model we could of course substitute that out um with Vex AI or",
    "start": "593800",
    "end": "600120"
  },
  {
    "text": "gemini or or whatever we wanted to there um we have Lang chain that we're using to orchestrate everything so that's",
    "start": "600120",
    "end": "606079"
  },
  {
    "text": "going to be creating the vector stores and also the large language model chain um we're using collab obviously and then",
    "start": "606079",
    "end": "612079"
  },
  {
    "text": "gradio just to kind of show you an example of a very simple UI that you can put on top of that um just for",
    "start": "612079",
    "end": "618560"
  },
  {
    "text": "demonstration purposes um and this is going to be how we're splitting the course up um so",
    "start": "618560",
    "end": "625519"
  },
  {
    "text": "basically there's this journey that we're going to follow we're going to start with building our graph that's",
    "start": "625519",
    "end": "631000"
  },
  {
    "text": "going to be built inside of that sandbox instance that you just made um after that we're going to be showing you how",
    "start": "631000",
    "end": "636839"
  },
  {
    "text": "to do some very simple Vector search then we're going to um explore",
    "start": "636839",
    "end": "642120"
  },
  {
    "text": "how to integrate Knowledge Graph traversal patterns into that to better personalize the retrieval data so not",
    "start": "642120",
    "end": "648680"
  },
  {
    "text": "just based on um sort of text similarity but also on um similarity based on co-",
    "start": "648680",
    "end": "654800"
  },
  {
    "text": "purchasing behavior um and then when we get to recommendations we're actually going to use an unsupervised machine",
    "start": "654800",
    "end": "660279"
  },
  {
    "text": "learning model to generate graph embeddings um and we're going to use um K nearest neighbor there to locate other",
    "start": "660279",
    "end": "667279"
  },
  {
    "text": "recommendations that we can make inside of the graph and then we're going to put that all together inside of um an llm",
    "start": "667279",
    "end": "673279"
  },
  {
    "text": "chain to show you how you can use that to create a better more curated response with the language",
    "start": "673279",
    "end": "679760"
  },
  {
    "text": "model all righty so that was a lot um I'll go ahead and get started with graph",
    "start": "679760",
    "end": "686440"
  },
  {
    "text": "building um again the way this will work is I'll spend a little bit of time in slides just talking about what we're",
    "start": "686440",
    "end": "692760"
  },
  {
    "text": "going to do then we're going to hop over to the notebook and we we're going to run through those cells you you might",
    "start": "692760",
    "end": "699040"
  },
  {
    "text": "already be running through those cells um because I know a lot of us we um it's going to be pretty easy to just sort of",
    "start": "699040",
    "end": "705079"
  },
  {
    "text": "Click through um there's not actually a lot of Hands-On coding you need to do um but we're going to walk through that",
    "start": "705079",
    "end": "711320"
  },
  {
    "text": "anyway so um this is the data model that we're going to use a reminder right that",
    "start": "711320",
    "end": "717079"
  },
  {
    "text": "we're working inside of a graph database um which means that everything that we're working with is natively",
    "start": "717079",
    "end": "723519"
  },
  {
    "text": "represented as nodes and relationships inside of a graph so we have these entities um we have customers and",
    "start": "723519",
    "end": "729959"
  },
  {
    "text": "articles and then products so basically what this graph is telling us is um a sample of customers that exists um",
    "start": "729959",
    "end": "737320"
  },
  {
    "text": "different purchases that they made of articles of clothing so think of these like the halter Toops the jeans the",
    "start": "737320",
    "end": "742959"
  },
  {
    "text": "boots you know all the accessories a variant of um so an AR is a variant of a",
    "start": "742959",
    "end": "750279"
  },
  {
    "text": "product in the sense that you can have a certain style of jeans but they can be you know have different color patterns",
    "start": "750279",
    "end": "756079"
  },
  {
    "text": "different sizes Etc so the product is sort of like the product and then the article is like the variant of that",
    "start": "756079",
    "end": "762480"
  },
  {
    "text": "product um we also have um each department that the article is sold in",
    "start": "762480",
    "end": "768199"
  },
  {
    "text": "um we're not going to use that department node very much though um in this specific",
    "start": "768199",
    "end": "774120"
  },
  {
    "text": "Workshop um and of course all of these things can have um properties associated",
    "start": "774120",
    "end": "779720"
  },
  {
    "text": "with them so we have for example the customer ID to uniquely identify a customer for articles we have product we",
    "start": "779720",
    "end": "786920"
  },
  {
    "text": "have color and different um design patterns and then for the product we have sort of the description of the product the Garment group that is in the",
    "start": "786920",
    "end": "794040"
  },
  {
    "text": "type of the product and the name of the product Etc um so again um I think we've we've",
    "start": "794040",
    "end": "801680"
  },
  {
    "text": "all done this step hopefully by now uh so I will go ahead and um and enter into",
    "start": "801680",
    "end": "809600"
  },
  {
    "text": "our notebook so hopefully everyone can see this um this was the first cell that we",
    "start": "809600",
    "end": "816760"
  },
  {
    "text": "wanted to run before just because it takes a while if you haven't run the uh first cell for pip install please go",
    "start": "816760",
    "end": "822279"
  },
  {
    "text": "ahead and do that now once you've run that um go ahead and",
    "start": "822279",
    "end": "827360"
  },
  {
    "text": "just kind of keep going down here run the um import um this just gets us all the",
    "start": "827360",
    "end": "832519"
  },
  {
    "text": "libraries we need and now here's the part where we're going to have to um",
    "start": "832519",
    "end": "837759"
  },
  {
    "text": "inject some things here so when you made that sandbox instance I'll actually go",
    "start": "837759",
    "end": "843360"
  },
  {
    "text": "to my I have to log out and go to a different account",
    "start": "843360",
    "end": "848839"
  },
  {
    "text": "here um you should get connection",
    "start": "849560",
    "end": "853880"
  },
  {
    "text": "details so if I go and I just click this and I go to connection detail so please don't use mine so that we're not",
    "start": "859279",
    "end": "865399"
  },
  {
    "text": "fighting on the same database um but copy copy the bolt URL here um and",
    "start": "865399",
    "end": "872240"
  },
  {
    "text": "you're going to go back into your uh Workshop code and you're going to put that here for your newj URI is going to",
    "start": "872240",
    "end": "877839"
  },
  {
    "text": "be that bolt connection the password as well is going to be um is going to be",
    "start": "877839",
    "end": "884240"
  },
  {
    "text": "this one right here the password and then you're going to keep the username as near for J so you don't have to",
    "start": "884240",
    "end": "890519"
  },
  {
    "text": "change either of these two we're going to keep the llm as gp4 o um and then for",
    "start": "890519",
    "end": "897800"
  },
  {
    "text": "the open AI key um if you have your own please please do use that if you don't",
    "start": "897800",
    "end": "902839"
  },
  {
    "text": "um if you click on this link uh it'll take you to a workshop key that will keep live for a little bit",
    "start": "902839",
    "end": "908920"
  },
  {
    "text": "that you can use um to run through the workshop and so basically you're just going to copy it in kind of like I've",
    "start": "908920",
    "end": "914800"
  },
  {
    "text": "done here um and you're going to give that a run and then this next cell is just if you wanted to do it the proper",
    "start": "914800",
    "end": "920880"
  },
  {
    "text": "way and have a separate environments file um which you can skip or you can do that if you want",
    "start": "920880",
    "end": "926560"
  },
  {
    "text": "um uh but that uh is not NE necessary so once you've run that we get down to",
    "start": "926560",
    "end": "933040"
  },
  {
    "text": "the knowledge graph building section and we've already talked about the graph we're going to import and basically what",
    "start": "933040",
    "end": "938399"
  },
  {
    "text": "you're going to do is you're going to connect to Neo forj um so this is our",
    "start": "938399",
    "end": "943639"
  },
  {
    "text": "graph data science client we have multiple different drivers and um different wrappers around those drivers",
    "start": "943639",
    "end": "949720"
  },
  {
    "text": "to connect to the database I'm using graph data science for this just to simplify things it's um basically you're",
    "start": "949720",
    "end": "955639"
  },
  {
    "text": "just going to hand it the URI the username and the password um and that'll get you connected and there's some",
    "start": "955639",
    "end": "960800"
  },
  {
    "text": "warnings there that we're going to get rid of um and then if you can run this cell successfully right after it this",
    "start": "960800",
    "end": "967560"
  },
  {
    "text": "GDs debug um that means you're connected and you're good to go so you're connected to a blank",
    "start": "967560",
    "end": "974560"
  },
  {
    "text": "database once that is run um there's one cell here that I have for pretty much",
    "start": "974880",
    "end": "980199"
  },
  {
    "text": "loading 90% of the data so you're going to go ahead and run this um what this is",
    "start": "980199",
    "end": "986079"
  },
  {
    "text": "doing is I've gone ahead and there's another notebook inside of this repository that's prepared these csvs so",
    "start": "986079",
    "end": "992519"
  },
  {
    "text": "there's uh five csvs here um there's Department product article uh customer",
    "start": "992519",
    "end": "999360"
  },
  {
    "text": "and transaction um and so most of these are self-explanatory the department is the department node the product is the",
    "start": "999360",
    "end": "1005600"
  },
  {
    "text": "product node article is the article node Etc customer the the customer node and then transactions are all the purchase",
    "start": "1005600",
    "end": "1012040"
  },
  {
    "text": "transactions between customers and articles um so the if you were to dig into this CL code and because we only",
    "start": "1012040",
    "end": "1018639"
  },
  {
    "text": "have 2 hours I mean we can spend all our time talking about this but I decided uh not to so we can we can get to more of",
    "start": "1018639",
    "end": "1024079"
  },
  {
    "text": "the vector stuff um this is going to create uniqueness constraints which are",
    "start": "1024079",
    "end": "1029160"
  },
  {
    "text": "going to be useful for querying later um in NE forj so it's just a a general best practice um and then if I go there's",
    "start": "1029160",
    "end": "1036400"
  },
  {
    "text": "basically two functions here one for loading the nodes and the next for the relationships um if you were doing this",
    "start": "1036400",
    "end": "1042880"
  },
  {
    "text": "sort of in a non-automated setting um this is kind of what the cipher looks",
    "start": "1042880",
    "end": "1048079"
  },
  {
    "text": "like so just like like um so just like in SQL how you or for",
    "start": "1048079",
    "end": "1056679"
  },
  {
    "text": "rdbms you have SQL for graphs um and for Neo forj specifically you have Cipher so",
    "start": "1056679",
    "end": "1062679"
  },
  {
    "text": "what this code is doing that I have above is basically for loading the different nodes it's generating this",
    "start": "1062679",
    "end": "1068440"
  },
  {
    "text": "Cipher so you see it says use this Cipher query unwind merge set so that's",
    "start": "1068440",
    "end": "1073520"
  },
  {
    "text": "the actual code behind the scenes right the cipher code that's being run to load this data um so if you are interested in",
    "start": "1073520",
    "end": "1080480"
  },
  {
    "text": "how to load more data into newor for J you can take a look at that um and we have other graph Academy resources as",
    "start": "1080480",
    "end": "1086360"
  },
  {
    "text": "well if if you wanted to dig into that piece um in more detail around just how to model data and how to load data into",
    "start": "1086360",
    "end": "1092559"
  },
  {
    "text": "a graph um and then we'll stop there and I think",
    "start": "1092559",
    "end": "1101760"
  },
  {
    "text": "we're at 15 minutes now so we can probably do um I'd say 5 to 10 10 minutes and we",
    "start": "1101760",
    "end": "1109640"
  },
  {
    "text": "can wait for people to catch up as a quick show of hands how many people have made it through the",
    "start": "1109640",
    "end": "1116919"
  },
  {
    "text": "loading awesome okay that's really good um and then Michael and toage",
    "start": "1116919",
    "end": "1125000"
  },
  {
    "text": "Lo the CSV f is the to if it loaded somewhere oh so you have yeah if you go",
    "start": "1141400",
    "end": "1148880"
  },
  {
    "text": "to this tab here should so instead of this",
    "start": "1148880",
    "end": "1154960"
  },
  {
    "text": "um so there any you've got the credentials as well okay so instead of",
    "start": "1161799",
    "end": "1167120"
  },
  {
    "text": "uh single sign password add the password over",
    "start": "1167120",
    "end": "1173559"
  },
  {
    "text": "[Music] there so this is like the built-in",
    "start": "1176550",
    "end": "1182679"
  },
  {
    "text": "Central query kind of assuming it connects so one thing it's convenient is if you click on this",
    "start": "1182679",
    "end": "1189640"
  },
  {
    "text": "database icon there it should end up looking for",
    "start": "1189640",
    "end": "1198600"
  },
  {
    "text": "looks like it might be blank still or just slow okay so end up updating so for",
    "start": "1200600",
    "end": "1206559"
  },
  {
    "text": "every node that has a label it'll show the labels that exist relationship types the props you click on any of those",
    "start": "1206559",
    "end": "1212600"
  },
  {
    "text": "actually go the top click on anything basically run a query this is a side for match queries it'll match for records",
    "start": "1212600",
    "end": "1219320"
  },
  {
    "text": "They have a label article and return 25 cool",
    "start": "1219320",
    "end": "1227880"
  },
  {
    "text": "so",
    "start": "1229200",
    "end": "1232200"
  },
  {
    "text": "two",
    "start": "1267159",
    "end": "1270159"
  },
  {
    "text": "you",
    "start": "1296679",
    "end": "1299679"
  },
  {
    "text": "EX",
    "start": "1344840",
    "end": "1347840"
  },
  {
    "text": "mod",
    "start": "1363480",
    "end": "1366480"
  },
  {
    "text": "wanted to use",
    "start": "1378600",
    "end": "1381960"
  },
  {
    "text": "my",
    "start": "1430039",
    "end": "1433039"
  },
  {
    "text": "comb",
    "start": "1439679",
    "end": "1442679"
  },
  {
    "text": "does anybody else need some help that I can tell toage to help",
    "start": "1471960",
    "end": "1478000"
  },
  {
    "text": "with everyone's good so there might still be some people",
    "start": "1478480",
    "end": "1484440"
  },
  {
    "text": "having network connectivity issues we've seen a couple different variations on that we'll try to help figure those out",
    "start": "1484440",
    "end": "1489520"
  },
  {
    "text": "and get that sorted um I think we can maybe okay y",
    "start": "1489520",
    "end": "1494840"
  },
  {
    "text": "[Music] awesome um we",
    "start": "1494840",
    "end": "1501360"
  },
  {
    "text": "justy unplug and",
    "start": "1501360",
    "end": "1504799"
  },
  {
    "text": "replug oh it's crowd it's the",
    "start": "1509799",
    "end": "1514679"
  },
  {
    "text": "stupid by the way I have to say you're all pretty good for such a big room everyone being on top of things I'm",
    "start": "1516600",
    "end": "1522440"
  },
  {
    "text": "really impressed so well done everyone it's a software they installed on that yes fun uh security software on my",
    "start": "1522440",
    "end": "1530440"
  },
  {
    "text": "laptop preventing me from connecting USB devices so hopefully it's there if it",
    "start": "1530440",
    "end": "1535760"
  },
  {
    "text": "disappears again let me know um one thing that I wanted to point out someone had a good question about uh what we",
    "start": "1535760",
    "end": "1542120"
  },
  {
    "text": "were loading um so there is uh there's a couple things that we do kind of at the end of this block one of them is I'm",
    "start": "1542120",
    "end": "1549240"
  },
  {
    "text": "going to create a fake sort of dummy URL um because it wasn't included in the data so we'll use that to help the llm",
    "start": "1549240",
    "end": "1555440"
  },
  {
    "text": "will basically provide a link to the product which won't be a real link but you can imagine substituting a real link",
    "start": "1555440",
    "end": "1561080"
  },
  {
    "text": "into the database so we're just creating a new URL property for that and then this thing here is creating it's",
    "start": "1561080",
    "end": "1567360"
  },
  {
    "text": "basically taking other properties that were in the database so when we looked at the product um and we'll see what",
    "start": "1567360",
    "end": "1572600"
  },
  {
    "text": "these fields actually look like in a second but um there's a product name a type a group a description all this",
    "start": "1572600",
    "end": "1578559"
  },
  {
    "text": "stuff and this statement here is just creating a new text property to kind of Squish all of that together in one place",
    "start": "1578559",
    "end": "1585399"
  },
  {
    "text": "and we're going to use that um for our upcoming vector so we're going to index that so that's why we're creating this",
    "start": "1585399",
    "end": "1590520"
  },
  {
    "text": "one text property um so just wanted to mention that really quickly before we move on to our text",
    "start": "1590520",
    "end": "1599840"
  },
  {
    "text": "section um so now we're gon to we're going to start talking about Vector search and we're going to do some",
    "start": "1601279",
    "end": "1606880"
  },
  {
    "text": "initial uh search and retrieval so when we think about what embeddings are and I'm assuming a lot of",
    "start": "1606880",
    "end": "1613600"
  },
  {
    "text": "people in this room are already uh quite familiar right but in embedding is",
    "start": "1613600",
    "end": "1618960"
  },
  {
    "text": "basically a type of data compression that takes some messy data like text images or audio and it puts it into a",
    "start": "1618960",
    "end": "1625760"
  },
  {
    "text": "compact format that's machine learning friendly right um and so these are going to be most often numeric vectors or",
    "start": "1625760",
    "end": "1632720"
  },
  {
    "text": "arrays with hundreds or thousands of elements um and they preserve information such as similar items have",
    "start": "1632720",
    "end": "1638600"
  },
  {
    "text": "proportionately similar embedding vectors and this similarity is going to be measured mathematically using",
    "start": "1638600",
    "end": "1644080"
  },
  {
    "text": "something like cosine or ukian or Etc um and another thing that I want to mention",
    "start": "1644080",
    "end": "1649520"
  },
  {
    "text": "is we will and maybe I'll save it a little bit for the M but just like you can um embed audio text and videos uh",
    "start": "1649520",
    "end": "1656320"
  },
  {
    "text": "you can also embed graph structures um and so when you have co- purchase relationships in a graph or you're",
    "start": "1656320",
    "end": "1661640"
  },
  {
    "text": "trying to do entity linking in a graph or anything like that that can become very valuable for then using Downstream",
    "start": "1661640",
    "end": "1668200"
  },
  {
    "text": "um in Vector search",
    "start": "1668200",
    "end": "1672880"
  },
  {
    "text": "um yes yep we will walk through that um so",
    "start": "1673399",
    "end": "1679399"
  },
  {
    "text": "similarity um for something like a text embedding is referring to semantic similarity so the meaning behind a text",
    "start": "1679399",
    "end": "1685000"
  },
  {
    "text": "sequence for a graph embedding right similarity can mean similar in position or structure inside of a graph and that",
    "start": "1685000",
    "end": "1690559"
  },
  {
    "text": "can have semantic meaning too um and right now what we'll be using",
    "start": "1690559",
    "end": "1695799"
  },
  {
    "text": "Vector search for is just on text embeddings and later when we get to recommendations is when we're going to",
    "start": "1695799",
    "end": "1701120"
  },
  {
    "text": "use graph embeddings and specifically node embeddings um that we're going to use there inside a vector search",
    "start": "1701120",
    "end": "1708600"
  },
  {
    "text": "um so talking a little bit about just what's inside of Neo forj so Neo forj has multiple indices um and you can use",
    "start": "1708600",
    "end": "1715919"
  },
  {
    "text": "these in combination um with each other so we have things like range indices which is just a general um kind of index",
    "start": "1715919",
    "end": "1722440"
  },
  {
    "text": "that can do um you know range comparisons INE equality comparisons on numbers and dates and things like that",
    "start": "1722440",
    "end": "1729080"
  },
  {
    "text": "um Point indices which are geospatial or I guess Point space indices right um",
    "start": "1729080",
    "end": "1735279"
  },
  {
    "text": "text indices and full text indices so we have a full text index um that's backed by Lucine for example that is",
    "start": "1735279",
    "end": "1741279"
  },
  {
    "text": "tokenization and analyzers um and today what we're going to be focusing on primarily um our Vector indices and our",
    "start": "1741279",
    "end": "1748519"
  },
  {
    "text": "Vector index uses um hnsw hierarchical navigable small world yes there we go",
    "start": "1748519",
    "end": "1755880"
  },
  {
    "text": "for approximate nearest neighbor search um and so a lot of this might be",
    "start": "1755880",
    "end": "1761799"
  },
  {
    "text": "review for the folks in this room um right but the idea behind this is that if we have some product some text about",
    "start": "1761799",
    "end": "1768640"
  },
  {
    "text": "a product um and let's say a search prompt on the right here um for a halter",
    "start": "1768640",
    "end": "1774360"
  },
  {
    "text": "neck toop we can start to identify things that might be more similar to that um using that embedding Vector",
    "start": "1774360",
    "end": "1781799"
  },
  {
    "text": "right and sort of the semantic similarity inside of that space um and right and that can that",
    "start": "1781799",
    "end": "1788840"
  },
  {
    "text": "semantic similarity can be measured by either in ukan distance right or cosine",
    "start": "1788840",
    "end": "1794159"
  },
  {
    "text": "distance um and like I said before we're using hnsw um to perform approximate",
    "start": "1794159",
    "end": "1799399"
  },
  {
    "text": "nearest neighbor search or we will be here in just a second um so we're going to start um you",
    "start": "1799399",
    "end": "1806480"
  },
  {
    "text": "know let me just go ahead and jump into the notebooks I think it'll be easier um to do live so",
    "start": "1806480",
    "end": "1814600"
  },
  {
    "text": "uh yes so um right when we're done with the vector indexing um I will go into",
    "start": "1823480",
    "end": "1830360"
  },
  {
    "text": "browser which is one of our tools for visualization um and we can take a look at that but basically um if you go into",
    "start": "1830360",
    "end": "1838360"
  },
  {
    "text": "uh this page here I can go to open um and then it will take me basically into",
    "start": "1838360",
    "end": "1844120"
  },
  {
    "text": "the browser tool this is going to take a while because of the internet lag um and we can visualize in there um if you if",
    "start": "1844120",
    "end": "1850640"
  },
  {
    "text": "you're willing to bear with me um in creating a vector index first because I want to just go over that very quickly",
    "start": "1850640",
    "end": "1856639"
  },
  {
    "text": "um and then we can go into the visualization portion um but yes we will very soon be",
    "start": "1856639",
    "end": "1863720"
  },
  {
    "text": "uh visualizing the data um what I wanted to do first though was just kind of get it um get our index set up and just show",
    "start": "1863720",
    "end": "1871120"
  },
  {
    "text": "you how to do some searching um so basically what we're",
    "start": "1871120",
    "end": "1878039"
  },
  {
    "text": "going to do with our data we're specifically going to match the product node so if you remember we have that um",
    "start": "1878039",
    "end": "1883960"
  },
  {
    "text": "product node which is a variant of an article um and the way that this is going to",
    "start": "1883960",
    "end": "1889320"
  },
  {
    "text": "work um You can call embedding models externally too uh but what we're going to do here is uh basically match the",
    "start": "1889320",
    "end": "1896600"
  },
  {
    "text": "product where it has a detailed description so basically some of these products don't have complete information so we're just going to take the ones",
    "start": "1896600",
    "end": "1902480"
  },
  {
    "text": "that have complete information um and then all this thing is doing is it's using this code gen",
    "start": "1902480",
    "end": "1909519"
  },
  {
    "text": "vector and code batch um to on the server side create embeddings and then",
    "start": "1909519",
    "end": "1916399"
  },
  {
    "text": "set that embedding property on a property called text embedding um we're using open AI for",
    "start": "1916399",
    "end": "1922519"
  },
  {
    "text": "this there's a few other models that we can use here um or a few other API providers rather um by default this is",
    "start": "1922519",
    "end": "1929360"
  },
  {
    "text": "using text embedding um add or Ada um",
    "start": "1929360",
    "end": "1934600"
  },
  {
    "text": "but you could also use vertex AI here um as well as as your open AI or um AWS",
    "start": "1934600",
    "end": "1941000"
  },
  {
    "text": "bedrock and then you can also just generate your own embed embeddings externally um and adjust them for any",
    "start": "1941000",
    "end": "1946559"
  },
  {
    "text": "other type of model so if you go ahead and give this a run it will start creating your",
    "start": "1946559",
    "end": "1953639"
  },
  {
    "text": "embeddings um and then the cell after that is going to create your vector index so this isn't creating an an index",
    "start": "1953639",
    "end": "1960799"
  },
  {
    "text": "all this is doing is basically populating in batch a text embedding property um and then after you create",
    "start": "1960799",
    "end": "1967880"
  },
  {
    "text": "that this cell down here if you run that is going to create your um your vector",
    "start": "1967880",
    "end": "1975200"
  },
  {
    "text": "index we're going to set it ahead of time to use cosine as a similarity function um and then you're just this",
    "start": "1975200",
    "end": "1982039"
  },
  {
    "text": "next call is just to wait for it to come online since once you set it it just takes a little bit of while for it to",
    "start": "1982039",
    "end": "1987159"
  },
  {
    "text": "index all the data and become available for",
    "start": "1987159",
    "end": "1991240"
  },
  {
    "text": "querying yes can you can you just clarify the difference between generating the embedding which is the",
    "start": "1992960",
    "end": "1998960"
  },
  {
    "text": "semantic of the text right versus creating the vector index what's that",
    "start": "1998960",
    "end": "2004960"
  },
  {
    "text": "right so when you're when you're doing the uh embedding Generation all you're doing is you're",
    "start": "2004960",
    "end": "2011360"
  },
  {
    "text": "taking this text field that I talked about earlier you're sending it to open",
    "start": "2011360",
    "end": "2016440"
  },
  {
    "text": "AI to say hey embed this you take that back and then you set that as a property",
    "start": "2016440",
    "end": "2021840"
  },
  {
    "text": "so all this cell is doing is basically making these uh Vector array properties",
    "start": "2021840",
    "end": "2027279"
  },
  {
    "text": "inside of the node and then the vector index actually sets the index to make that searchable",
    "start": "2027279",
    "end": "2034440"
  },
  {
    "text": "um once youve once you've gotten that done we can do a couple examples of search um and again this is this is sort",
    "start": "2041880",
    "end": "2049240"
  },
  {
    "text": "of just using Cipher here and you can do this externally as well um but in this cell I'm taking a search prompt that is",
    "start": "2049240",
    "end": "2056118"
  },
  {
    "text": "very simple just denim genes um and then I'm passing it to this function which is running Cipher all this is doing",
    "start": "2056119",
    "end": "2063079"
  },
  {
    "text": "actually is just encoding so basically it's just creating the query vector right so if I were to just encode denim",
    "start": "2063079",
    "end": "2070520"
  },
  {
    "text": "genes this is the query Vector that that creates um and then if you take that",
    "start": "2070520",
    "end": "2077158"
  },
  {
    "text": "query and you go to the next uh cell here what this will do is it will do",
    "start": "2077159",
    "end": "2082520"
  },
  {
    "text": "that same encoding so this is the first part of the query that we just ran which is creates a query Vector um and then",
    "start": "2082520",
    "end": "2088800"
  },
  {
    "text": "inside of Cipher I say call database index Vector query nodes um and I say",
    "start": "2088800",
    "end": "2093878"
  },
  {
    "text": "hit this index that we just created give me the top 10 with that query vector and",
    "start": "2093879",
    "end": "2099200"
  },
  {
    "text": "yield the node as um product and the score um and then give me some Fields",
    "start": "2099200",
    "end": "2104280"
  },
  {
    "text": "like the product text and the product code Etc and so when you run that it should hopefully give you some results that",
    "start": "2104280",
    "end": "2110400"
  },
  {
    "text": "look something like this and this is returning different products so you see all of these are uh denim genes or denim",
    "start": "2110400",
    "end": "2117079"
  },
  {
    "text": "products um or they should at least be genes and or denim right I think all genes are technically denim maybe not um",
    "start": "2117079",
    "end": "2125680"
  },
  {
    "text": "but you see here we have the product description um and the product text that it brought",
    "start": "2125680",
    "end": "2130920"
  },
  {
    "text": "back so you can see all the descriptions and that's basic Vector search inside of NE for",
    "start": "2130920",
    "end": "2137880"
  },
  {
    "text": "J um yeah",
    "start": "2141960",
    "end": "2146960"
  },
  {
    "text": "yes do we build it on every node well we build the index and then every node has a property so it's built on top of all",
    "start": "2169480",
    "end": "2176800"
  },
  {
    "text": "those properties right um maybe I don't understand it's",
    "start": "2176800",
    "end": "2184599"
  },
  {
    "text": "one index right yes yeah this so our graph",
    "start": "2184599",
    "end": "2190560"
  },
  {
    "text": "representation is not the hnsw graph",
    "start": "2190560",
    "end": "2195640"
  },
  {
    "text": "representation wouldn't it be one hnsw for every",
    "start": "2208720",
    "end": "2213640"
  },
  {
    "text": "indexing IND we are using a Lucine index on the back end yeah yeah this is a",
    "start": "2216040",
    "end": "2222119"
  },
  {
    "text": "Lucine",
    "start": "2222119",
    "end": "2224559"
  },
  {
    "text": "implementation",
    "start": "2228520",
    "end": "2231520"
  },
  {
    "text": "yes yeah if you do I have um they match the",
    "start": "2234599",
    "end": "2240880"
  },
  {
    "text": "size yes well yes if you if you already have embedding so I commented this out",
    "start": "2240880",
    "end": "2246960"
  },
  {
    "text": "um I haven't haven't run this block for a while but basically you this is just showing you how you can create like you",
    "start": "2246960",
    "end": "2253960"
  },
  {
    "text": "know use open AI embeddings here I'm using Lang chain in particular but this is a workflow where you have embeddings",
    "start": "2253960",
    "end": "2260240"
  },
  {
    "text": "external right and then you can import them into new forj um",
    "start": "2260240",
    "end": "2267599"
  },
  {
    "text": "um so there's multiple different ways to do it um if you have your vector index inside of Neo forj that can make certain",
    "start": "2281760",
    "end": "2288040"
  },
  {
    "text": "things more efficient um but there's certain situations for scale where using",
    "start": "2288040",
    "end": "2293640"
  },
  {
    "text": "something like Lane chain or another orchestration framework for example um you can query your vector data inside of",
    "start": "2293640",
    "end": "2299839"
  },
  {
    "text": "your chosen Vector database and then do your graph traversal stuff in near for J right",
    "start": "2299839",
    "end": "2307440"
  },
  {
    "text": "yes we're going to get to that in a second it's why do you need a graph",
    "start": "2313760",
    "end": "2320480"
  },
  {
    "text": "database if you're um if you're already using Vector search and so what we're going to explore today is there's a",
    "start": "2320480",
    "end": "2325800"
  },
  {
    "text": "couple different things one of them is using structured data or data that's been structured inside the graph to",
    "start": "2325800",
    "end": "2331800"
  },
  {
    "text": "better sort of personalize or make the responses more relevant for a large language model um for search and then",
    "start": "2331800",
    "end": "2338040"
  },
  {
    "text": "we're also going to do some things with graph embeddings which is a different type of embedding that we can create um",
    "start": "2338040",
    "end": "2343480"
  },
  {
    "text": "inside of this",
    "start": "2343480",
    "end": "2346079"
  },
  {
    "text": "database yes we do that here there's an example of that we'll do K&N and we'll show you to draw relationships for that",
    "start": "2362480",
    "end": "2370720"
  },
  {
    "text": "yes um well so it's a good question and we should we should definitely have a longer conversation afterward but the",
    "start": "2378319",
    "end": "2384800"
  },
  {
    "text": "advantage there's a few different advantages um we have um index free adjacency and we have very performant",
    "start": "2384800",
    "end": "2390520"
  },
  {
    "text": "like multihop patterns so you'll see some of the patterns in here are very complicated and it's easier to do inside",
    "start": "2390520",
    "end": "2396480"
  },
  {
    "text": "of a graph first for just writing the code to do it but then also the performance on it will be better um and",
    "start": "2396480",
    "end": "2402960"
  },
  {
    "text": "so there's and there's a very flexible schema so it's very robust in terms of being able to change and pivot things",
    "start": "2402960",
    "end": "2408480"
  },
  {
    "text": "around very quickly",
    "start": "2408480",
    "end": "2412520"
  },
  {
    "text": "yep not yet um not",
    "start": "2414440",
    "end": "2420000"
  },
  {
    "text": "yet all righty so I'm gonna I'm going to move on a little bit here um this next",
    "start": "2423680",
    "end": "2429880"
  },
  {
    "text": "part of the vector search portion I'm going to just integrate Lang chain into the",
    "start": "2429880",
    "end": "2434920"
  },
  {
    "text": "mix um so basically the reason I'm going to start using Lan chain here is because when we get to the llm portion it'll",
    "start": "2434920",
    "end": "2442119"
  },
  {
    "text": "just be a natural fit where we'll create a chain for this um but all we're doing",
    "start": "2442119",
    "end": "2447280"
  },
  {
    "text": "here is we're going to create a vector store using Neo forj Vector so this is part of the um Lang chain Vector Stores",
    "start": "2447280",
    "end": "2455520"
  },
  {
    "text": "um again in stancy create um an open AI embedding model we're just going to use the default with 1536 as the default",
    "start": "2455520",
    "end": "2463280"
  },
  {
    "text": "size and then you see we can create a lane chain Vector store from index um",
    "start": "2463280",
    "end": "2468319"
  },
  {
    "text": "with that embedding model and our same credentials and the index name that we created earlier um and when we do that",
    "start": "2468319",
    "end": "2475560"
  },
  {
    "text": "basically what this will allow us to do uh is start running from our search prompt which is denm genes we're going",
    "start": "2475560",
    "end": "2482119"
  },
  {
    "text": "to be able to run the results through um this Vector store here so this is what we're going to be using throughout the",
    "start": "2482119",
    "end": "2487440"
  },
  {
    "text": "rest of the notebook um instead of just using our Cipher or query language directly um we're going to be using Lang",
    "start": "2487440",
    "end": "2493920"
  },
  {
    "text": "chain which gets this done under the hood for us um so that's that and you can see it",
    "start": "2493920",
    "end": "2499079"
  },
  {
    "text": "brings back the different documents with the product descriptions and the representative URL and all the",
    "start": "2499079",
    "end": "2504680"
  },
  {
    "text": "metadata um and if you want it to be in a pretty data frame so it's easier to see um you can run that to kind of get",
    "start": "2504680",
    "end": "2511839"
  },
  {
    "text": "the to get the view we had before and this should match what we were doing earlier",
    "start": "2511839",
    "end": "2518680"
  },
  {
    "text": "um and of course you can try yourself with your own prompt um so if you were to type",
    "start": "2519560",
    "end": "2525160"
  },
  {
    "text": "in something else here you can see it'll bring back right",
    "start": "2525160",
    "end": "2530599"
  },
  {
    "text": "a result that's relevant to that so I typed in oversized sweaters and it will bring back um different oversized",
    "start": "2530599",
    "end": "2538440"
  },
  {
    "text": "sweaters all righty so um how many people were able to get through the vector search section if you just raise",
    "start": "2543280",
    "end": "2549960"
  },
  {
    "text": "your hands okay good very fast class okay anyone having trouble struggling",
    "start": "2549960",
    "end": "2557319"
  },
  {
    "text": "need help one person over",
    "start": "2557319",
    "end": "2564558"
  },
  {
    "text": "there all righty",
    "start": "2571079",
    "end": "2575240"
  },
  {
    "text": "I ask yep how do you determine how many",
    "start": "2597720",
    "end": "2604760"
  },
  {
    "text": "indices do you need",
    "start": "2604760",
    "end": "2609119"
  },
  {
    "text": "so right now you I might not fully understand your question um when you",
    "start": "2615000",
    "end": "2620640"
  },
  {
    "text": "create you basically instantiate an index for one or a set of properties that can be on a node or it can be on a",
    "start": "2620640",
    "end": "2627000"
  },
  {
    "text": "relationship right so if I make one index to cover you know the property of text that's one index I can create",
    "start": "2627000",
    "end": "2633160"
  },
  {
    "text": "another index to cover like a product description or another name or something right if I wanted to um but that's",
    "start": "2633160",
    "end": "2639960"
  },
  {
    "text": "there's nothing that would you know so it would be like it's one index at a time right does that is that getting",
    "start": "2639960",
    "end": "2645559"
  },
  {
    "text": "towards you is that totally",
    "start": "2645559",
    "end": "2648559"
  },
  {
    "text": "offc right right",
    "start": "2653480",
    "end": "2658640"
  },
  {
    "text": "comp on your I'm just curious what do you do on your side so it doesn't puke",
    "start": "2660200",
    "end": "2665240"
  },
  {
    "text": "that's 50 g right are you automo it there are there are ways to uh",
    "start": "2665240",
    "end": "2673920"
  },
  {
    "text": "Federate the database like you could you could create different shards based off of metadata values um but we're that's",
    "start": "2673920",
    "end": "2682319"
  },
  {
    "text": "stuff that we're like currently building on and experimenting with um and for very very large like if you if you truly",
    "start": "2682319",
    "end": "2689680"
  },
  {
    "text": "had like tens of billions of documents um you can also integrate with your vector store of choice right and then",
    "start": "2689680",
    "end": "2695480"
  },
  {
    "text": "just basically you substitute out the vector retrieval call um with for that",
    "start": "2695480",
    "end": "2700880"
  },
  {
    "text": "Vector database and then you can use Neo forj for doing a lot of the graph traversals but it's one of those things",
    "start": "2700880",
    "end": "2705920"
  },
  {
    "text": "where we're continually improving so um we're coming out with new features to handle that sort of",
    "start": "2705920",
    "end": "2713240"
  },
  {
    "text": "stuff all righty so let's start with semantic search with graph patterns um",
    "start": "2717640",
    "end": "2724079"
  },
  {
    "text": "so this is going to be uh basically building on top of vector search where",
    "start": "2724079",
    "end": "2729119"
  },
  {
    "text": "we start to work with structured data so when we think about NE forj and semantic",
    "start": "2729119",
    "end": "2734280"
  },
  {
    "text": "search there's sort of multiple layers uh so the first part is Vector similarity search which we just went",
    "start": "2734280",
    "end": "2740079"
  },
  {
    "text": "over which is just finding relevant documents um after that there's graph pattern matching which is basically",
    "start": "2740079",
    "end": "2746000"
  },
  {
    "text": "saying hey can I find entities Associated to these documents and the sort of patterns in that connective data",
    "start": "2746000",
    "end": "2753000"
  },
  {
    "text": "um and then we have the more data science and machine learning part on top of it where we can improve search",
    "start": "2753000",
    "end": "2758440"
  },
  {
    "text": "relevance and do other things by running graph algorithms like embeddings right",
    "start": "2758440",
    "end": "2763559"
  },
  {
    "text": "um so when we think about semantic search patterns with graph um there's connections that we have um based on",
    "start": "2763559",
    "end": "2769559"
  },
  {
    "text": "purchase Behavior so basically given that you have one person who purchases relatively the same things as another",
    "start": "2769559",
    "end": "2776359"
  },
  {
    "text": "person in this graph you can start to make inferences about what they might want to purchase next right so this is",
    "start": "2776359",
    "end": "2782280"
  },
  {
    "text": "sort of like if you've ever dealt with collaborative filtering or sort of those types of patterns this is a very common",
    "start": "2782280",
    "end": "2787920"
  },
  {
    "text": "recommendation pattern that we can do with structured data um and when we go back to the graph",
    "start": "2787920",
    "end": "2794880"
  },
  {
    "text": "we'll start exploring the data set now in a little bit more detail with visualizations so what I want you to",
    "start": "2794880",
    "end": "2803119"
  },
  {
    "text": "do and I don't have these calls saved but I'll go ahead and copy them over",
    "start": "2803119",
    "end": "2810480"
  },
  {
    "text": "um basically you're going to go back to your browsing window um and you're going to open your",
    "start": "2810920",
    "end": "2816960"
  },
  {
    "text": "your uh blank instance so I'm going to click",
    "start": "2816960",
    "end": "2821640"
  },
  {
    "text": "open and hopefully that'll work and if not I might actually start",
    "start": "2823119",
    "end": "2828800"
  },
  {
    "text": "uh hotspotting",
    "start": "2828800",
    "end": "2832599"
  },
  {
    "text": "myself",
    "start": "2834599",
    "end": "2837599"
  },
  {
    "text": "yeah it took me like a minute to refesh",
    "start": "2844559",
    "end": "2848839"
  },
  {
    "text": "yeah me",
    "start": "2850200",
    "end": "2854200"
  },
  {
    "text": "all righty yeah I'm hotspotting all right",
    "start": "2892960",
    "end": "2899480"
  },
  {
    "text": "thanks I'm on the I think I'm on the Wi-Fi all righty so basically what I did",
    "start": "2899480",
    "end": "2906160"
  },
  {
    "text": "is I just entered into something called browser from our sandbox so again you just go here or I guess I'm I'm back to",
    "start": "2906160",
    "end": "2913160"
  },
  {
    "text": "this window now you go here and you press open and then you can either do the SSO sign on or you can use your",
    "start": "2913160",
    "end": "2918200"
  },
  {
    "text": "username and password and so once I'm here I'm going to copy if you go back to",
    "start": "2918200",
    "end": "2923400"
  },
  {
    "text": "the notebook you can copy these calls this is just Cipher that you can put in to help visualize uh the data that we've",
    "start": "2923400",
    "end": "2930280"
  },
  {
    "text": "ingested so this will give me my schema right um You won't have this relationship yet but what you should",
    "start": "2930280",
    "end": "2936520"
  },
  {
    "text": "have is these four nodes um which me get rid of this window um will give you an",
    "start": "2936520",
    "end": "2943000"
  },
  {
    "text": "idea of your data model that should reflect what we have in that picture inside of the notebook we have our articles our products our departments um",
    "start": "2943000",
    "end": "2950079"
  },
  {
    "text": "and our customers excuse me um and then if we go",
    "start": "2950079",
    "end": "2957119"
  },
  {
    "text": "back to our notebook I'm going to pull a sample of that data just so you can see the graph so this Cipher statement here um",
    "start": "2957119",
    "end": "2965240"
  },
  {
    "text": "is just saying hey get me all the products match all of the articles that are variance of those products um and",
    "start": "2965240",
    "end": "2971920"
  },
  {
    "text": "then all the customers that purchase those articles and I'm just going to return all of that and I'm going to limit it to 150",
    "start": "2971920",
    "end": "2978760"
  },
  {
    "text": "results um and so if I do that what's going to happen and again the Wi-Fi is is kind of hurting me right",
    "start": "2978760",
    "end": "2985119"
  },
  {
    "text": "now um I'll get this pretty graph so this is a sample of the data that we loaded so customers are in orange",
    "start": "2985119",
    "end": "2992559"
  },
  {
    "text": "articles are in blue and products are in Red so what you'll start to see is we have these customers some of them make",
    "start": "2992559",
    "end": "2998880"
  },
  {
    "text": "multiple purchases so here's a customer making multiple",
    "start": "2998880",
    "end": "3004119"
  },
  {
    "text": "purchases make that a little bit bigger so you can see when I go to purchase it should have a transaction date a price",
    "start": "3004119",
    "end": "3010079"
  },
  {
    "text": "all that sort of stuff here's my customer with the customer ID and some metadata about the customer and then",
    "start": "3010079",
    "end": "3015839"
  },
  {
    "text": "here's my article and my article is a variant of a product so what we've done",
    "start": "3015839",
    "end": "3022280"
  },
  {
    "text": "so far um is if you go down here we've created right this text field for every",
    "start": "3022280",
    "end": "3027319"
  },
  {
    "text": "product um that's what the text description looks like and then we've created this text embedding this is our",
    "start": "3027319",
    "end": "3032480"
  },
  {
    "text": "open embedding that we have here and if we zoom out the graph structure that I",
    "start": "3032480",
    "end": "3038359"
  },
  {
    "text": "was talking about before in slides we start to see that so you start to see that you have these customers that are",
    "start": "3038359",
    "end": "3043400"
  },
  {
    "text": "co-purchasing things right at different times and so we can start leveraging that graph structure and we can use that",
    "start": "3043400",
    "end": "3049640"
  },
  {
    "text": "graph structure to start informing our search and our llm how to return better responses so for example",
    "start": "3049640",
    "end": "3057440"
  },
  {
    "text": "um what I'm going to do is I'm going to feed it a specific customer ID so all this does is it basically caches this",
    "start": "3057440",
    "end": "3064599"
  },
  {
    "text": "parameter for this specific customer ID so I can um use that in later query call so I'm going to go ahead and put that",
    "start": "3064599",
    "end": "3072760"
  },
  {
    "text": "in and then I am going to uh take this query here and basically",
    "start": "3073040",
    "end": "3079599"
  },
  {
    "text": "what this query is just going to do is tell me the history of this specific customer their purchase history so I'm",
    "start": "3079599",
    "end": "3086319"
  },
  {
    "text": "going to go back here and I'm going to say hey get me the customer with that ID and then get me all the things that they",
    "start": "3086319",
    "end": "3092440"
  },
  {
    "text": "purchased and then all of the product categories that those were in basically and just return some metadata about that",
    "start": "3092440",
    "end": "3099640"
  },
  {
    "text": "so I'm going to go ahead and give that a run and it will tell me this person purchase the specific product names",
    "start": "3099640",
    "end": "3104680"
  },
  {
    "text": "right here um the product type that they belong to Etc um and the description of those",
    "start": "3104680",
    "end": "3111200"
  },
  {
    "text": "products um and then the cool part about graph um is I can basically start taking",
    "start": "3111200",
    "end": "3117720"
  },
  {
    "text": "uh I can pull the latest purchase history and then I can start making recommendations off of that latest",
    "start": "3117720",
    "end": "3123000"
  },
  {
    "text": "purchase history so there's lots of more complicated and fancy ways to do this um but the basic idea here right is that if",
    "start": "3123000",
    "end": "3130160"
  },
  {
    "text": "I go with um this I can pull the latest purchases so similar to what we did before just say hey take this customer",
    "start": "3130160",
    "end": "3136640"
  },
  {
    "text": "get everything they purchased get sort of the max date as the latest purchases and then I'm going to do this long query",
    "start": "3136640",
    "end": "3143520"
  },
  {
    "text": "here and basically what this long match statement is saying is say hey take this",
    "start": "3143520",
    "end": "3149000"
  },
  {
    "text": "customer take their latest purchases right look at other customers that",
    "start": "3149000",
    "end": "3155240"
  },
  {
    "text": "purchase the same thing and then look at what they purchased right that's what it's saying so it's like right if ABK if",
    "start": "3155240",
    "end": "3162119"
  },
  {
    "text": "I buy the same things as ABK does I can say right which okay thumbs up right",
    "start": "3162119",
    "end": "3167920"
  },
  {
    "text": "okay and then I can basically say well um for me look at what ABK has purchased and a few other people that have similar",
    "start": "3167920",
    "end": "3174200"
  },
  {
    "text": "purchasing behaviors and is there anything there that I haven't bought yet that's basically what this query is doing so when you run this query um what",
    "start": "3174200",
    "end": "3182200"
  },
  {
    "text": "you'll see is you'll start to get these different sweaters and everything and this will change for every customer and",
    "start": "3182200",
    "end": "3187640"
  },
  {
    "text": "so the idea here is that this structured data that can feed us this this these",
    "start": "3187640",
    "end": "3192880"
  },
  {
    "text": "you see here they have these common purchase scores this is basically scoring the amount of times that you had",
    "start": "3192880",
    "end": "3198880"
  },
  {
    "text": "um that you had common purchases between uh customers and then like sort of the next thing that they buy so for example",
    "start": "3198880",
    "end": "3206280"
  },
  {
    "text": "um eight other there's been eight other common purchases between people that have bought this and between something",
    "start": "3206280",
    "end": "3211799"
  },
  {
    "text": "that this particular customer has bought and so these top um go ahead uh you can imagine this as",
    "start": "3211799",
    "end": "3219480"
  },
  {
    "text": "your peer group right so the people that are like you they buy the same stuff or interested in the same stuff so that's your peer group you just look what what",
    "start": "3219480",
    "end": "3226200"
  },
  {
    "text": "else has your peer group bought that you haven't bought yet right so that's kind of what it's behind that as",
    "start": "3226200",
    "end": "3231520"
  },
  {
    "text": "collaborative foring and these are the top ring things in the peer grp so this specific sweater this",
    "start": "3231520",
    "end": "3238599"
  },
  {
    "text": "t-shirt slly again Pur SC language yep um and let me",
    "start": "3238599",
    "end": "3246280"
  },
  {
    "text": "look at it again just to make sure I have it right here um so we're basically",
    "start": "3246280",
    "end": "3252200"
  },
  {
    "text": "counting the number of paths between the number of co-purchase paths so basically",
    "start": "3252200",
    "end": "3259760"
  },
  {
    "text": "this customer when we go out and look at what other people have bought in that peer group basically how many times has",
    "start": "3259760",
    "end": "3265359"
  },
  {
    "text": "that item been bought in that that peer group does that make sense",
    "start": "3265359",
    "end": "3270640"
  },
  {
    "text": "okay yes yes exactly",
    "start": "3270640",
    "end": "3277280"
  },
  {
    "text": "yep is that clear for everyone how do it sorry how does it know group peer group being that it's",
    "start": "3277280",
    "end": "3285839"
  },
  {
    "text": "sort of the local graph structure so what I'm doing right is I'm basically",
    "start": "3285839",
    "end": "3292240"
  },
  {
    "text": "um if I look at if I look at this graph",
    "start": "3292240",
    "end": "3297359"
  },
  {
    "text": "I'm basically going like I'm starting at a specific customer then I'm looking at the article and then I'm looking at",
    "start": "3297359",
    "end": "3303440"
  },
  {
    "text": "everyone that bought this and then I'm going out one more hop right to see everything they bought and then I'm",
    "start": "3303440",
    "end": "3308559"
  },
  {
    "text": "going to count up how many times those purchases appear and the more purchases there are the more likely it is right",
    "start": "3308559",
    "end": "3315119"
  },
  {
    "text": "that that individual customer um is likely to like that product just based on the common purchase behaviors in the",
    "start": "3315119",
    "end": "3321160"
  },
  {
    "text": "graph does that make sense uh so in this case then theer",
    "start": "3321160",
    "end": "3326280"
  },
  {
    "text": "customer that you were just pointing at um the well yeah before you scrolled",
    "start": "3326280",
    "end": "3332480"
  },
  {
    "text": "away oh sorry I'm just I want to make sure I understand the graph so you picked that one random customer and you",
    "start": "3332480",
    "end": "3338039"
  },
  {
    "text": "said you go one pop away from uh so yeah so assuming that person",
    "start": "3338039",
    "end": "3345000"
  },
  {
    "text": "then the that blue product um I guess so that's the one they bought and then the one to your left I",
    "start": "3345000",
    "end": "3352319"
  },
  {
    "text": "suppose uh that would or I guess right whatever the the closest Blue Dot that's",
    "start": "3352319",
    "end": "3358160"
  },
  {
    "text": "another product yep because there are links between uh oh my goodness yes there's",
    "start": "3358160",
    "end": "3364400"
  },
  {
    "text": "lots of products right so it's basically going bought this this person bought",
    "start": "3364400",
    "end": "3369520"
  },
  {
    "text": "that and then for all of see and there's a lot of interconnected relationships too and then it and then yes for all of",
    "start": "3369520",
    "end": "3375559"
  },
  {
    "text": "that and then go out one more purchase relationship um so you're basically going out and then you're saying okay",
    "start": "3375559",
    "end": "3381160"
  },
  {
    "text": "how many times do these other blue nodes show up right um and the more that they",
    "start": "3381160",
    "end": "3386400"
  },
  {
    "text": "show up inside of that graph the more shared purchasing Behavior you have yeah",
    "start": "3386400",
    "end": "3391599"
  },
  {
    "text": "so it's basically just counting that um could write theery to go out you",
    "start": "3391599",
    "end": "3398000"
  },
  {
    "text": "could and and part of the machine learning piece does that um automatically so but",
    "start": "3398000",
    "end": "3405079"
  },
  {
    "text": "yes ask a question about time window so here you considering like you know",
    "start": "3405079",
    "end": "3412280"
  },
  {
    "text": "the person no matter if it's one months or one year that's one transaction",
    "start": "3412280",
    "end": "3417440"
  },
  {
    "text": "versus if I'm considering window one versus one year versus one way is there",
    "start": "3417440",
    "end": "3423839"
  },
  {
    "text": "way like yeah yeah so you notice um let me get out of this",
    "start": "3423839",
    "end": "3429760"
  },
  {
    "text": "view um if I go up to uh the query that I just made here and maybe I went",
    "start": "3429760",
    "end": "3435119"
  },
  {
    "text": "through this a little bit too fast um but you should see um in here I'm saying I'm just going",
    "start": "3435119",
    "end": "3441960"
  },
  {
    "text": "on Max date but you could filter the date to say like uh tat which is the purchase date variable you could say do",
    "start": "3441960",
    "end": "3448680"
  },
  {
    "text": "that for only the last week or only the last two weeks or whatever filter was relevant for",
    "start": "3448680",
    "end": "3455480"
  },
  {
    "text": "that um and so that's basically the idea that we're going to use um to provide",
    "start": "3458119",
    "end": "3463960"
  },
  {
    "text": "additional um we're actually going to do a graph post filtering pattern with Vector",
    "start": "3463960",
    "end": "3469039"
  },
  {
    "text": "search um so what we're going to do is if you if you come back to the notebook um and you go down and run so",
    "start": "3469039",
    "end": "3475839"
  },
  {
    "text": "this is here's the query right so basically what we're doing is we're going to instantiate another Vector",
    "start": "3475839",
    "end": "3482559"
  },
  {
    "text": "store um except here what we're going to do is we're going to say we're going to put a retrieval query at the end so what",
    "start": "3482559",
    "end": "3489440"
  },
  {
    "text": "this is going to do is it's going to do Vector search like before but then after it does the vector search it's going to",
    "start": "3489440",
    "end": "3494920"
  },
  {
    "text": "try to match for that customer it's going to create that uh sort of peer group that local graph and then it's",
    "start": "3494920",
    "end": "3502079"
  },
  {
    "text": "going to score well how many times is that product show up so this this matches maybe almost backwards making it",
    "start": "3502079",
    "end": "3508599"
  },
  {
    "text": "probably a little bit hard to read right but it's the same query that we have before where we take the customer ID and",
    "start": "3508599",
    "end": "3514480"
  },
  {
    "text": "then we go sort of one or I guess two hops but really we're saying okay get me",
    "start": "3514480",
    "end": "3519640"
  },
  {
    "text": "that peer group where we go to the article we look at all the purchases um the common purchases between customers",
    "start": "3519640",
    "end": "3526039"
  },
  {
    "text": "and then we compute that same score and there's some multiplication here that I do basically to combine the vector sarch",
    "start": "3526039",
    "end": "3532680"
  },
  {
    "text": "score with the um what we're calling the purchase or the co- purchase score here um but basically what this does is it",
    "start": "3532680",
    "end": "3539760"
  },
  {
    "text": "now allows me to pass a customer ID into the search result um and then when I",
    "start": "3539760",
    "end": "3546400"
  },
  {
    "text": "when I do similarity search with that um it will start sorting things by um",
    "start": "3546400",
    "end": "3553200"
  },
  {
    "text": "basically this this purchase score so now instead of getting because denim genes is like this really generic thing",
    "start": "3553200",
    "end": "3559640"
  },
  {
    "text": "right so different customers and we'll see when we run the app later if you plug in different uh customer IDs",
    "start": "3559640",
    "end": "3566559"
  },
  {
    "text": "this result is going to be different it's personalized now to this customer so basically with Vector search we're",
    "start": "3566559",
    "end": "3572160"
  },
  {
    "text": "now using this post filtering pattern in the graph um and we can also do a pre-filtering pattern but we're using a",
    "start": "3572160",
    "end": "3578559"
  },
  {
    "text": "filtering pattern right to now rescore these things so now okay we're just returning for example these different",
    "start": "3578559",
    "end": "3585119"
  },
  {
    "text": "denim items which are much more relevant for this specific",
    "start": "3585119",
    "end": "3590400"
  },
  {
    "text": "customer yes can you explain the difference between sear score purchase score yes um let me see what I did here",
    "start": "3592359",
    "end": "3600359"
  },
  {
    "text": "so search score is basically just the vector score that came back from the cosine similarity so when you're doing",
    "start": "3600359",
    "end": "3606640"
  },
  {
    "text": "similarity between two vectors right for the text description that's going to be your search score um purchase score is",
    "start": "3606640",
    "end": "3613599"
  },
  {
    "text": "going to be what we were showing before which is showing the popularity inside of the peer group um and then I'm just",
    "start": "3613599",
    "end": "3619119"
  },
  {
    "text": "multiplying them together to create a combined score here but there's different ways that you can do that",
    "start": "3619119",
    "end": "3626400"
  },
  {
    "text": "yes so if you look down here um these results are now ranked differently and it's actually different from the query",
    "start": "3630760",
    "end": "3636760"
  },
  {
    "text": "ran before so we ran the same search prompt with denim genes um but here you can see we get like Rachel H HW denim we",
    "start": "3636760",
    "end": "3643880"
  },
  {
    "text": "get Jade HW Dam skinny and all this sort of stuff if you look at what we ran",
    "start": "3643880",
    "end": "3649200"
  },
  {
    "text": "before um if I were to scroll up to the top here um this one um you you'll see that",
    "start": "3649200",
    "end": "3658319"
  },
  {
    "text": "these are different and actually this is the wrong one but this is the right one here um you'll see that these are",
    "start": "3658319",
    "end": "3663599"
  },
  {
    "text": "actually different um these are different it's a different ordering there's some similarities here like this",
    "start": "3663599",
    "end": "3669280"
  },
  {
    "text": "is number three where it was number one below um but the idea is that you're sort of reranking this right now that",
    "start": "3669280",
    "end": "3675920"
  },
  {
    "text": "you're personalizing it to this specific customer and this gets really powerful as you get more and more um structured",
    "start": "3675920",
    "end": "3683039"
  },
  {
    "text": "co- purchasing data right yes a bunch of purchase score",
    "start": "3683039",
    "end": "3688119"
  },
  {
    "text": "zero because there's going to be if you it's an optional match so if you",
    "start": "3688119",
    "end": "3694920"
  },
  {
    "text": "notice the the sort of literal reason is that um this is an optional match um but",
    "start": "3694920",
    "end": "3701319"
  },
  {
    "text": "the other reason too is that there could be a situation where they're searching for something that isn't bought in their",
    "start": "3701319",
    "end": "3707720"
  },
  {
    "text": "peer group yet um so this is just organized so that even if you didn't catch anything in the graph structure",
    "start": "3707720",
    "end": "3714000"
  },
  {
    "text": "you would still have a way to return results based on the vector scoring",
    "start": "3714000",
    "end": "3721559"
  },
  {
    "text": "yeah so the basic idea is",
    "start": "3728720",
    "end": "3732960"
  },
  {
    "text": "like and number of",
    "start": "3737039",
    "end": "3741839"
  },
  {
    "text": "people yes and it will and we'll try to see if there if anyone else has bought anything of that nature right and if",
    "start": "3743760",
    "end": "3750079"
  },
  {
    "text": "they have then it will it will help reorder the ranking yeah um and you",
    "start": "3750079",
    "end": "3755119"
  },
  {
    "text": "could do it the other way around too where basically and we have another app and I might take it to our um Booth",
    "start": "3755119",
    "end": "3760760"
  },
  {
    "text": "where you could do the graph traversal first right so like if you if you had a",
    "start": "3760760",
    "end": "3766000"
  },
  {
    "text": "scale problem that was you know very large one of one of the ways we can scale is through um basically hey I",
    "start": "3766000",
    "end": "3772000"
  },
  {
    "text": "would do the graph search first um and then after that I can do the the vector search",
    "start": "3772000",
    "end": "3779599"
  },
  {
    "text": "questions otherwise people don't oh people can't hear um so the qu the question was um why can't you use like",
    "start": "3806000",
    "end": "3812640"
  },
  {
    "text": "an external batch recommendation um so you potentially could what you're getting here is",
    "start": "3812640",
    "end": "3818720"
  },
  {
    "text": "basically as this data is updated in real time in a transactional store right",
    "start": "3818720",
    "end": "3823839"
  },
  {
    "text": "you're going to be able to requiry it um so you're getting everything kind of in real time right so if you're doing Rag",
    "start": "3823839",
    "end": "3830720"
  },
  {
    "text": "and you want answers to be you know adjusted for what people had just purchased right this would be a way to",
    "start": "3830720",
    "end": "3836240"
  },
  {
    "text": "accomplish that inside of a graph database um and then there's a lot of flexibility you can change the way this",
    "start": "3836240",
    "end": "3842039"
  },
  {
    "text": "query is you know you can shorten the time period you could um create a different type of traversal to go more",
    "start": "3842039",
    "end": "3848119"
  },
  {
    "text": "than one hop out Etc and there's okay okay sorry I'm hang hiding",
    "start": "3848119",
    "end": "3856480"
  },
  {
    "text": "in the corner over here um I was wondering if you could speak more about combining the scores it seems like um",
    "start": "3856480",
    "end": "3863520"
  },
  {
    "text": "just multiplying them together is a good way to get started but is there a better Theory there or seems like something",
    "start": "3863520",
    "end": "3869400"
  },
  {
    "text": "that have pitfalls you know to just multiply the two scores together you don't know are they normalized what's",
    "start": "3869400",
    "end": "3875640"
  },
  {
    "text": "the distribution between them like how are you going to achieve the results that's true um yeah so again this is",
    "start": "3875640",
    "end": "3881880"
  },
  {
    "text": "just an example to get you started um I suppose like you could maintain a rank",
    "start": "3881880",
    "end": "3887839"
  },
  {
    "text": "ordering where you say hey Rank by um like the search Score first and then",
    "start": "3887839",
    "end": "3893559"
  },
  {
    "text": "ranked by the vector score which would be kind of independent of scale um but yeah there's there's a few",
    "start": "3893559",
    "end": "3900720"
  },
  {
    "text": "different ways you can do it this was just a quick way for me to put it together and I could probably do it better um but yes and you know with",
    "start": "3900720",
    "end": "3909000"
  },
  {
    "text": "these systems it's always good to have labeled data and sort of figure out how you can fine-tune things so like you",
    "start": "3909000",
    "end": "3915000"
  },
  {
    "text": "know in a production system you would have recommendations and whether or not those recommendations were successful",
    "start": "3915000",
    "end": "3920400"
  },
  {
    "text": "and then you can try different methodologies and see which ones get the best historic score to",
    "start": "3920400",
    "end": "3927520"
  },
  {
    "text": "thank you yes please uh maybe a followup right if I thought if I had this problem",
    "start": "3931640",
    "end": "3938000"
  },
  {
    "text": "in front the first time I would probably gone filtering so filtering on the graph",
    "start": "3938000",
    "end": "3943839"
  },
  {
    "text": "relations and then filtering on uh fixed threshold on the semantic matching can",
    "start": "3943839",
    "end": "3951440"
  },
  {
    "text": "you speak to how you would think about doing it my way uh versus Computing scores like this and",
    "start": "3951440",
    "end": "3958480"
  },
  {
    "text": "multiplying them so you're saying um filtering so basically you would do the",
    "start": "3958480",
    "end": "3963680"
  },
  {
    "text": "graph pattern first yeah would restrict the to only",
    "start": "3963680",
    "end": "3968760"
  },
  {
    "text": "the sub that matches these PN [Music]",
    "start": "3968760",
    "end": "3977129"
  },
  {
    "text": "yes yep those yeah you could you could do it",
    "start": "3978160",
    "end": "3983520"
  },
  {
    "text": "that way um and in fact we have a demo of exactly I think something very close to what you're describing um the issue",
    "start": "3983520",
    "end": "3991200"
  },
  {
    "text": "is for this course like if there's a chance that whatever you put inside of the graph inside of that local graph",
    "start": "3991200",
    "end": "3997440"
  },
  {
    "text": "could have a cold start problem right where it might not very well match the vector search um so it is a way of doing",
    "start": "3997440",
    "end": "4004960"
  },
  {
    "text": "it it just might end up that you're you could be over restricting right to a local area of the graph that might not",
    "start": "4004960",
    "end": "4010920"
  },
  {
    "text": "have in this case good denim genes for example um but you could do it that way uh you could also do a filtering where",
    "start": "4010920",
    "end": "4018240"
  },
  {
    "text": "like you said for example give me um I guess you could do Vector search filtering first um and then filter down",
    "start": "4018240",
    "end": "4025279"
  },
  {
    "text": "to the graph and then if there was nothing in the graph default to the vector search right results in the scores there so you could do it that way",
    "start": "4025279",
    "end": "4033559"
  },
  {
    "text": "too score um I think multiplying into one score is a good way to it's just a",
    "start": "4038920",
    "end": "4044680"
  },
  {
    "text": "way for me to get started um and some of it will depend on the scale of your graph right so if you the more um sort",
    "start": "4044680",
    "end": "4051880"
  },
  {
    "text": "of purchase transactions you have the more well connected the graph is going to be and the better you're going to be",
    "start": "4051880",
    "end": "4057480"
  },
  {
    "text": "able to you know sort of match things almost like with a pre-filtering pattern where you just restrict to that area of",
    "start": "4057480",
    "end": "4063039"
  },
  {
    "text": "the graph first when it's a little bit more sparse then um you're going to probably not have that same reliability",
    "start": "4063039",
    "end": "4069760"
  },
  {
    "text": "and you're going to need to either do an optional match or some post filtering pattern where um you make sure not to",
    "start": "4069760",
    "end": "4075240"
  },
  {
    "text": "not to over filter things y okay um just two real quick I I",
    "start": "4075240",
    "end": "4082240"
  },
  {
    "text": "wasn't going to ask you about scoring but since there's been a couple um normalization the typical way to do it",
    "start": "4082240",
    "end": "4087599"
  },
  {
    "text": "is reciprocal rank Fusion is that available here",
    "start": "4087599",
    "end": "4092720"
  },
  {
    "text": "um not not that specific one no we have some normalization um we have it's the",
    "start": "4092720",
    "end": "4099400"
  },
  {
    "text": "graph data science Library there are some normalization functions but they're not going to normalize things at time in",
    "start": "4099400",
    "end": "4106040"
  },
  {
    "text": "the way you're thinking okay yeah yeah that's the most popular way okay and then the other one is just um and if if",
    "start": "4106040",
    "end": "4111960"
  },
  {
    "text": "I'm getting ahead of myself just tell me and I'll be quiet but everything we've done so far it seems like creating the",
    "start": "4111960",
    "end": "4118199"
  },
  {
    "text": "peer group you can do that with a graph database right and infer relationships but what part of this is",
    "start": "4118199",
    "end": "4125318"
  },
  {
    "text": "actually the knowledge graph part of it which is infer unknown relationships based on unsupervised understandings",
    "start": "4125319",
    "end": "4132480"
  },
  {
    "text": "have we got to that so we'll get to some of that in a little bit um yes so I will we'll get through we'll get through to",
    "start": "4132480",
    "end": "4138838"
  },
  {
    "text": "that by the way there are also some Empty Chairs here if someone wants to sit down um",
    "start": "4138839",
    "end": "4146920"
  },
  {
    "text": "s any other questions otherwise we probably need to",
    "start": "4146920",
    "end": "4152318"
  },
  {
    "text": "progress by the way we also have a really big Booth with really comfy chairs over there uh so you can always",
    "start": "4152319",
    "end": "4158199"
  },
  {
    "text": "come the next two days and ask Zack and Andreas and toas and me many more",
    "start": "4158199",
    "end": "4164278"
  },
  {
    "text": "questions right so and we have swag at a",
    "start": "4164279",
    "end": "4170560"
  },
  {
    "text": "so awesome thank you Michael Al righty um so now we're going",
    "start": "4172400",
    "end": "4179600"
  },
  {
    "text": "to start um augmenting semantic search with Knowledge Graph inference so this will get a little bit into what you were",
    "start": "4179600",
    "end": "4184798"
  },
  {
    "text": "talking about um there's a lot more so I didn't like we have a whole Knowledge Graph Builder where we build",
    "start": "4184799",
    "end": "4191000"
  },
  {
    "text": "relationships from unstructured data that we're not doing in this course but we do have it at our booth",
    "start": "4191000",
    "end": "4197320"
  },
  {
    "text": "um so basically this is where we're going to",
    "start": "4197320",
    "end": "4202400"
  },
  {
    "text": "start using the graph data science portion of Neo forj",
    "start": "4202400",
    "end": "4208880"
  },
  {
    "text": "so um we have this thing called graph data science um inside of our product uh",
    "start": "4208880",
    "end": "4214679"
  },
  {
    "text": "and basically what it does is it offers various graph algorithms to you and this",
    "start": "4214679",
    "end": "4219719"
  },
  {
    "text": "special workspace and data representation so you can effectively create a projection of part of your",
    "start": "4219719",
    "end": "4225080"
  },
  {
    "text": "graph graph um in sort of this sparse Matrix representation and that allows you to run a lot of algorithms very",
    "start": "4225080",
    "end": "4231320"
  },
  {
    "text": "efficiently so things like pathf finding centrality Community detection um",
    "start": "4231320",
    "end": "4236480"
  },
  {
    "text": "different machine learning algorithms and of course embeddings in K&N similarity which is what we're going to talk about here um with a lot of focus",
    "start": "4236480",
    "end": "4244480"
  },
  {
    "text": "on this graph embedding piece um this is a this is a customer",
    "start": "4244480",
    "end": "4250600"
  },
  {
    "text": "who created a very nice uh sort of periodic table of all of our algorithms for reference",
    "start": "4250600",
    "end": "4255760"
  },
  {
    "text": "um but there's a lot of different areas right so there's a lot of things that we aren't going to get to talk about here",
    "start": "4255760",
    "end": "4261080"
  },
  {
    "text": "so things like Community detection pathf finding centrality um topological link prediction and um directed directed a",
    "start": "4261080",
    "end": "4269400"
  },
  {
    "text": "cyclical graph algorithms um but we are going to talk about similarity and embeddings so basically a node embedding",
    "start": "4269400",
    "end": "4277719"
  },
  {
    "text": "um works just like any other embedding except it's for a graph where the things you're embedding are nodes in a graph so",
    "start": "4277719",
    "end": "4284840"
  },
  {
    "text": "this is is a picture of a very small graph I think it's Zach's karate club is",
    "start": "4284840",
    "end": "4290080"
  },
  {
    "text": "the name of the graph and it's basically the relationships between uh different people in a karate club um but the idea",
    "start": "4290080",
    "end": "4296760"
  },
  {
    "text": "is that I can uh take this graph and I can turn it into a set of vectors and in this case it's a 2d Vector which is a 2d",
    "start": "4296760",
    "end": "4304120"
  },
  {
    "text": "representation we're going to create longer vectors for the notebook um but the idea here right is that the yellow",
    "start": "4304120",
    "end": "4311199"
  },
  {
    "text": "nodes that are similar in the graph in the sense that they're really close in the graph um are going to be really",
    "start": "4311199",
    "end": "4316679"
  },
  {
    "text": "close in the embedding space and the orange noes and the green noes and the blue noes Etc so that's the idea of what we're doing we're basically edding what",
    "start": "4316679",
    "end": "4324120"
  },
  {
    "text": "we call homop which is basically this fancy term for like the locality inside of the graph",
    "start": "4324120",
    "end": "4330440"
  },
  {
    "text": "structure and once we do that embedding what we're going to be able to do is start inferring relationships so someone",
    "start": "4330440",
    "end": "4336719"
  },
  {
    "text": "mentioned um being able to do sort of inference beforehand so calculations are",
    "start": "4336719",
    "end": "4342080"
  },
  {
    "text": "available at query time um and we're going to use K nearest neighbor for this so basically this is this is happening",
    "start": "4342080",
    "end": "4349280"
  },
  {
    "text": "outside of an index uh what we're going to be doing is creating graphin Bings um",
    "start": "4349280",
    "end": "4354639"
  },
  {
    "text": "specifically on the Articles um and then we're going to be inferring these K nearest neighbors between them based on",
    "start": "4354639",
    "end": "4360800"
  },
  {
    "text": "um K&N which is this semi-supervised or unsupervised algorithm um and you can do this for a lot of different things we",
    "start": "4360800",
    "end": "4367000"
  },
  {
    "text": "are going to use co- purchase relationships for this and kind of scale that process for multiple hops um but",
    "start": "4367000",
    "end": "4372679"
  },
  {
    "text": "you could do this for other forms of Link prediction um for example things like entity resolution or if you're trying to",
    "start": "4372679",
    "end": "4379000"
  },
  {
    "text": "resolve you know maybe you have people and locations in the same graph and you're trying to resolve whether or not a person is in a specific location um",
    "start": "4379000",
    "end": "4386440"
  },
  {
    "text": "you can use these sorts of models to start um making those Knowledge Graph um",
    "start": "4386440",
    "end": "4391880"
  },
  {
    "text": "analytics and and drawing those relationships um so let's dive into the",
    "start": "4391880",
    "end": "4397639"
  },
  {
    "text": "notebook to see how that works question yes you mentioned you're embedding the nodes are we essentially",
    "start": "4397639",
    "end": "4403639"
  },
  {
    "text": "throwing away the edges we're not embeding the edges um so we're doing a node embedding",
    "start": "4403639",
    "end": "4412239"
  },
  {
    "text": "which is specifically focused on nodes we could do different types of Knowledge Graph embeddings which embed like the",
    "start": "4412239",
    "end": "4418239"
  },
  {
    "text": "edge and like right it embeds the what is it the the head and the edge to the tail right so there are those types of",
    "start": "4418239",
    "end": "4425639"
  },
  {
    "text": "embeddings um and there's different types of subgraph embeddings uh for today we are the relationships are used",
    "start": "4425639",
    "end": "4431760"
  },
  {
    "text": "to understand where nodes fit inside of that Vector space right um in terms of clustering of in this case what's going",
    "start": "4431760",
    "end": "4437960"
  },
  {
    "text": "to be co- purchase Behavior so we're not throwing them away they're going to be used um but we and we'll use the yeah",
    "start": "4437960",
    "end": "4445520"
  },
  {
    "text": "you'll see as we go along we'll continue to use the relationships um so basically what we're",
    "start": "4445520",
    "end": "4452239"
  },
  {
    "text": "going to do here um is we're going to create a customers also like relationship so basically um this cell",
    "start": "4452239",
    "end": "4460639"
  },
  {
    "text": "so it's going to be the first cell after you get to augmented semantic search with Knowledge Graph and L and if you",
    "start": "4460639",
    "end": "4466840"
  },
  {
    "text": "run that cell it's going to run our GDs algorithms so um I have some utilities",
    "start": "4466840",
    "end": "4473880"
  },
  {
    "text": "to kind of help clear clean things up um and then basically we're going to create something called a graph projection and",
    "start": "4473880",
    "end": "4481320"
  },
  {
    "text": "we don't have a whole ton of time to go into detail on these in a two-hour course but the basic idea right is that",
    "start": "4481320",
    "end": "4487400"
  },
  {
    "text": "I'm going to look for these um common co- purchase relationships between articles and customers um and then I'm",
    "start": "4487400",
    "end": "4494800"
  },
  {
    "text": "going going to project that as a co-purchase relationship to an inmemory",
    "start": "4494800",
    "end": "4500000"
  },
  {
    "text": "graph so I'm creating basically this graph that contains articles and then awaited co-p purchase relationship",
    "start": "4500000",
    "end": "4506360"
  },
  {
    "text": "between them after that I'm going to run our uh not embedding model so we have",
    "start": "4506360",
    "end": "4513639"
  },
  {
    "text": "supervised models um that we can use but in this case I'm going to use something called Fast RP um which stands for fast",
    "start": "4513639",
    "end": "4520719"
  },
  {
    "text": "random projection and basically what this is is a graph embedding um that is",
    "start": "4520719",
    "end": "4525960"
  },
  {
    "text": "going to use um a lot of sort of this matrix multiplication um with sort of this",
    "start": "4525960",
    "end": "4532000"
  },
  {
    "text": "sparse random Matrix so the math behind it basically allows it to calculate and embedding really quickly without",
    "start": "4532000",
    "end": "4537880"
  },
  {
    "text": "necessarily needing a neural network um I'm going to make these embeddings 120",
    "start": "4537880",
    "end": "4543040"
  },
  {
    "text": "Dimensions I'm going to specify certain things like an iteration weight that will tell me how many hops to go out",
    "start": "4543040",
    "end": "4548960"
  },
  {
    "text": "when looking for um other similar nodes um and then once I once I create",
    "start": "4548960",
    "end": "4554600"
  },
  {
    "text": "that embedding um I'm going to write GDs andn WR so basically what this is going",
    "start": "4554600",
    "end": "4559639"
  },
  {
    "text": "to do is it's going to find nodes with similar um embeddings um and it's going to write a customer also likes",
    "start": "4559639",
    "end": "4565960"
  },
  {
    "text": "relationship between those noes um and then there's some sampling procedures",
    "start": "4565960",
    "end": "4571400"
  },
  {
    "text": "that I can use inside of KNN to make it run faster which I'm doing here um and",
    "start": "4571400",
    "end": "4576639"
  },
  {
    "text": "then once I have that I can write my both my embeddings back to the graph um and in K&N I just wrote the",
    "start": "4576639",
    "end": "4583239"
  },
  {
    "text": "relationships back so now we have these customer also like relationships between articles inside of the",
    "start": "4583239",
    "end": "4589440"
  },
  {
    "text": "graph um and I get some stats when that's run telling me about whether or not it converge the number of new",
    "start": "4589440",
    "end": "4595800"
  },
  {
    "text": "relationships written which is going to be generally a lot because it's doing this quadratic uh comparison um and each relationship is",
    "start": "4595800",
    "end": "4603159"
  },
  {
    "text": "scored um I had a similarity cut off at I think 75 um and this was using cosine",
    "start": "4603159",
    "end": "4608639"
  },
  {
    "text": "similarity um so um it would be negative - 1: one I think uh that it was",
    "start": "4608639",
    "end": "4616040"
  },
  {
    "text": "using um and we can visualize note embeddings as well and that's",
    "start": "4616040",
    "end": "4621280"
  },
  {
    "text": "interesting to do in the sense that it will tell me uh clusters of purchase Behavior so these uh cells that I have",
    "start": "4621280",
    "end": "4627840"
  },
  {
    "text": "here I've I've commented out because they take a while to run um but basically this should still be able to",
    "start": "4627840",
    "end": "4634760"
  },
  {
    "text": "be rendered here this Visual and basically what this visual will show you",
    "start": "4634760",
    "end": "4640000"
  },
  {
    "text": "as you see we get these clusters and basically what I did is I took those 128 dimensional embeddings",
    "start": "4640000",
    "end": "4645520"
  },
  {
    "text": "and I use a tney which is just um a way to condense that down to a smaller space and I condense it down to a 2d space um",
    "start": "4645520",
    "end": "4652960"
  },
  {
    "text": "and basically what you'll see is you'll get these clusters of commonly purchased things and so this is sort of doing the",
    "start": "4652960",
    "end": "4659760"
  },
  {
    "text": "multi-hop thing that you were referring to earlier where now it's starting to look at okay well these different",
    "start": "4659760",
    "end": "4665960"
  },
  {
    "text": "clusters right these clusters represent items that are often co-p purchased",
    "start": "4665960",
    "end": "4671040"
  },
  {
    "text": "together baskets baskets yeah um and yes baskets in a sort of sense right now",
    "start": "4671040",
    "end": "4676600"
  },
  {
    "text": "it's just co- purchasing but you could organize into orders inside of the graph and you could do co- purchasing baskets",
    "start": "4676600",
    "end": "4681960"
  },
  {
    "text": "as well um and so with that information we can start to sort of scale how we power",
    "start": "4681960",
    "end": "4688360"
  },
  {
    "text": "just plain recommendation um so I can create a new uh query here where basically instead of",
    "start": "4688360",
    "end": "4695679"
  },
  {
    "text": "going to the vector database I can just say okay well match the customers get me everything they purchase as the Articles",
    "start": "4695679",
    "end": "4702840"
  },
  {
    "text": "um get me what else customers also like to buy and get me the product behind that so it's similar to what we did",
    "start": "4702840",
    "end": "4708960"
  },
  {
    "text": "before um except it's scaling it to sort of a to a multihop pattern and you can",
    "start": "4708960",
    "end": "4714840"
  },
  {
    "text": "substitute other machine learning models in here if you wanted to too so if you had um for example a supervised model",
    "start": "4714840",
    "end": "4720560"
  },
  {
    "text": "that you wanted to use for recommendation um that could be substituted in here to make these inferences and then you all of a sudden",
    "start": "4720560",
    "end": "4726880"
  },
  {
    "text": "have these customer also purchase relationships um you could also create a vector index for that graph embedding um",
    "start": "4726880",
    "end": "4733239"
  },
  {
    "text": "which we're not doing here we've sort of done the KNN beforehand right and we've written the relationships to the graph",
    "start": "4733239",
    "end": "4739120"
  },
  {
    "text": "um and that allows me to do this customer also liked relationship that I can draw in the query um and that gives",
    "start": "4739120",
    "end": "4745400"
  },
  {
    "text": "me a set of recommendations again not necessarily based off of a search pattern um but just based off of what",
    "start": "4745400",
    "end": "4751719"
  },
  {
    "text": "the customer had purchased before um and to your point earlier we could create time date and date cut offs and things",
    "start": "4751719",
    "end": "4757679"
  },
  {
    "text": "like that um so this is basically just a way to kind of scale things with the machine",
    "start": "4757679",
    "end": "4763199"
  },
  {
    "text": "learning model and leverage graph embeddings so that was it for the uh the",
    "start": "4763199",
    "end": "4769560"
  },
  {
    "text": "graph embedding and sort of the graph machine learning section and again um",
    "start": "4769560",
    "end": "4775679"
  },
  {
    "text": "you can use a lot of different types of machine learning models here to basically infer these relationships um",
    "start": "4775679",
    "end": "4780880"
  },
  {
    "text": "some of which exists like inside of our platform through graph data science and others that you can bring in",
    "start": "4780880",
    "end": "4786280"
  },
  {
    "text": "externally um we're at 448 so we have um what 45 minutes left a little",
    "start": "4786280",
    "end": "4793040"
  },
  {
    "text": "under and we hav't Tak a break yet um wondering if we should power",
    "start": "4793040",
    "end": "4800600"
  },
  {
    "text": "through okay",
    "start": "4804320",
    "end": "4808760"
  },
  {
    "text": "yes",
    "start": "4809719",
    "end": "4812719"
  },
  {
    "text": "yep so right now you do yes have to recalculate the graph embedding um",
    "start": "4815760",
    "end": "4822600"
  },
  {
    "text": "ideally right if you like over time if customers have been in there for a while that graph edding like",
    "start": "4822600",
    "end": "4829199"
  },
  {
    "text": "will it'll slow down how much it changes um we are working on things for the future that might make that easier um in",
    "start": "4829199",
    "end": "4835719"
  },
  {
    "text": "terms of getting things in real time um but right now for calculating graph embeddings it is something where you",
    "start": "4835719",
    "end": "4841239"
  },
  {
    "text": "have to recalculate it for the graph thankfully though um with something like Fast RP that'll work I mean we've I've",
    "start": "4841239",
    "end": "4848360"
  },
  {
    "text": "seen it work on graphs with billions of nodes and relationships and it can calculate in like half an hour um um but",
    "start": "4848360",
    "end": "4855360"
  },
  {
    "text": "yes right now you do have to recalculate",
    "start": "4855360",
    "end": "4859280"
  },
  {
    "text": "it um you could use other methods to like averaging the neighborhood as well",
    "start": "4863360",
    "end": "4868560"
  },
  {
    "text": "for sort of like intermediate embeddings as well so like um if you didn't want to recalculate it right away you could take",
    "start": "4868560",
    "end": "4874360"
  },
  {
    "text": "like the average of the neighborhood and use that as like a standin",
    "start": "4874360",
    "end": "4879719"
  },
  {
    "text": "embedding all righty what's",
    "start": "4883159",
    "end": "4890400"
  },
  {
    "text": "that",
    "start": "4890520",
    "end": "4893520"
  },
  {
    "text": "is yes um oh yeah go for it I think",
    "start": "4898199",
    "end": "4907400"
  },
  {
    "text": "um you you had a question about dimensionality sorry about the",
    "start": "4907400",
    "end": "4912920"
  },
  {
    "text": "dimension is there an upper limit to the dimension I think you had now 128 which",
    "start": "4912920",
    "end": "4918280"
  },
  {
    "text": "is quite small there yeah there's no upper limit to Dimension um right now inside of this graph we only have let me",
    "start": "4918280",
    "end": "4924880"
  },
  {
    "text": "see how many customers we have",
    "start": "4924880",
    "end": "4930000"
  },
  {
    "text": "um so this graph only has a thousand customers right there's been other examples um and demos that we have where",
    "start": "4936639",
    "end": "4943280"
  },
  {
    "text": "it's like millions or tens of millions of customers right so the more transactions you have the more customers",
    "start": "4943280",
    "end": "4948480"
  },
  {
    "text": "and articles you have the higher that Dimension needs to be right for demo purposes right now and we're working off",
    "start": "4948480",
    "end": "4954199"
  },
  {
    "text": "of sandbox instances I kept it pretty small um but you can expand this to 256",
    "start": "4954199",
    "end": "4959360"
  },
  {
    "text": "or keep going up in orders of two um I found that these generally don't need to be as big as like the text embeddings",
    "start": "4959360",
    "end": "4966719"
  },
  {
    "text": "that you get from open AI because it's a smaller space right when you even if you have billions of nodes in your graph",
    "start": "4966719",
    "end": "4973080"
  },
  {
    "text": "it's still a smaller space than the entire human language right so you so",
    "start": "4973080",
    "end": "4978480"
  },
  {
    "text": "they tend to be on the tend to be smaller but they can go up and there's no upper limit that we that we",
    "start": "4978480",
    "end": "4984000"
  },
  {
    "text": "inherently have inside of the product no and what is the biggest use case you have at the moment deployed for",
    "start": "4984000",
    "end": "4990920"
  },
  {
    "text": "embeddings uh graph embeddings yes um I'd say um entity",
    "start": "4990920",
    "end": "4996840"
  },
  {
    "text": "resolution um different forms of classification like for fraud detection um and then also for um recommendation",
    "start": "4996840",
    "end": "5004239"
  },
  {
    "text": "and things like customer segmentation where you want to like create clusters um based on you know Behavior other data",
    "start": "5004239",
    "end": "5010560"
  },
  {
    "text": "inside of the graph",
    "start": "5010560",
    "end": "5014920"
  },
  {
    "text": "okay um is it possible to semantically retrieve the information about the graph",
    "start": "5023719",
    "end": "5029440"
  },
  {
    "text": "structure itself so let's say that you have 10 different types of pants but you",
    "start": "5029440",
    "end": "5034880"
  },
  {
    "text": "want to ask a question how many types of pens do you have which is like it's not",
    "start": "5034880",
    "end": "5040800"
  },
  {
    "text": "in the data itself specifically it's kind of metadata about",
    "start": "5040800",
    "end": "5046480"
  },
  {
    "text": "it yes so um very good question so there's different types of retrieval",
    "start": "5046480",
    "end": "5052040"
  },
  {
    "text": "patterns that are better at those sorts of queries so we have something called text to Cipher um we have it it's sort",
    "start": "5052040",
    "end": "5057840"
  },
  {
    "text": "it's a pattern right where you can actually get the llm to generate like the a cipher query to query the data and",
    "start": "5057840",
    "end": "5065679"
  },
  {
    "text": "those tend to work well for aggregation so like if you were building out a more mature system you can have um like a",
    "start": "5065679",
    "end": "5072120"
  },
  {
    "text": "semantic layer with different tools and so if you knew that you had more of like an aggregation question about types of",
    "start": "5072120",
    "end": "5078760"
  },
  {
    "text": "things um then you can send it to that tool which can do like a a text a cipher or another um sort of um a cipher",
    "start": "5078760",
    "end": "5086520"
  },
  {
    "text": "snippet that was like pre-generated or template that was pregenerated does that make sense yeah uh have you tried using",
    "start": "5086520",
    "end": "5093159"
  },
  {
    "text": "that with like function calling so you don't have to like specifically know in advance that you'd like to use it but",
    "start": "5093159",
    "end": "5098719"
  },
  {
    "text": "rather like that is something that Michael if he's still here has done some",
    "start": "5098719",
    "end": "5104320"
  },
  {
    "text": "work on for function calling yeah",
    "start": "5104320",
    "end": "5112000"
  },
  {
    "text": "so uh yes in general um you can make many of these graph operations available",
    "start": "5112360",
    "end": "5117840"
  },
  {
    "text": "as as functions tun LM and then basically uh depends on the selectivity",
    "start": "5117840",
    "end": "5124600"
  },
  {
    "text": "of how you describe the the function uh and what you pass in uh to make this available right so you can do uh this",
    "start": "5124600",
    "end": "5130960"
  },
  {
    "text": "kind of uh embedding work but also other graph queries can be made available as functions to and then it just selects",
    "start": "5130960",
    "end": "5137960"
  },
  {
    "text": "them so for instance get a neighborhood of a note or find the shortest path between two nodes or find similar uh",
    "start": "5137960",
    "end": "5144520"
  },
  {
    "text": "noes to this noes using uh graph embeddings or whatever and then you have these kind of some generic functions",
    "start": "5144520",
    "end": "5150920"
  },
  {
    "text": "that you offer to the llm and then you have could have also specific functions that are basically built by an subject",
    "start": "5150920",
    "end": "5157760"
  },
  {
    "text": "subject matter expert that uh for instance for legal domain or for an fintech domain where you have specific",
    "start": "5157760",
    "end": "5164480"
  },
  {
    "text": "graph queries that are really specific to that domain and then add them as functions as well so you can have you",
    "start": "5164480",
    "end": "5169920"
  },
  {
    "text": "know five1 functions available and then the llm Pix ones that are necessary to answer the questions as such but it",
    "start": "5169920",
    "end": "5176679"
  },
  {
    "text": "should work with all the llm models that support function callings and such",
    "start": "5176679",
    "end": "5184520"
  },
  {
    "text": "yes you have more questions you can always come",
    "start": "5189560",
    "end": "5196639"
  },
  {
    "text": "yes um so I was just trying to gain a little more intuition about the idea of graph embeddings I'm pretty new to",
    "start": "5196840",
    "end": "5203199"
  },
  {
    "text": "graphs in general it seems to me like the whole motivation for using embeddings it's really taken off in the",
    "start": "5203199",
    "end": "5208880"
  },
  {
    "text": "last four years or so and it's be because you've got Transformers you've got unsupervised pre-training where you",
    "start": "5208880",
    "end": "5215080"
  },
  {
    "text": "can leverage all of you know the text on the Internet or all of the images on the",
    "start": "5215080",
    "end": "5220280"
  },
  {
    "text": "internet and whatnot and train these embedding models that are just general purpose Foundation models and this is",
    "start": "5220280",
    "end": "5227400"
  },
  {
    "text": "very different from that because you're just completely training your embeddings or if it even is training from scratch",
    "start": "5227400",
    "end": "5233360"
  },
  {
    "text": "I'm wondering if there's like a deeper intuition to why you'd be using embeddings for",
    "start": "5233360",
    "end": "5238840"
  },
  {
    "text": "this instead of it almost seems like there's a lot of more like traditional machine learning techniques that you could be using",
    "start": "5238840",
    "end": "5245040"
  },
  {
    "text": "um I I just don't know what the stateof the art is and I'm curious what the intuition is for using embeddings for",
    "start": "5245040",
    "end": "5250800"
  },
  {
    "text": "this yeah I mean so embeddings here basically is helping you um kind of",
    "start": "5250800",
    "end": "5256800"
  },
  {
    "text": "scale these other graph traversals right to go because when we do that embedding",
    "start": "5256800",
    "end": "5262000"
  },
  {
    "text": "what we're basically doing is we're taking a graph traversal that's similar to the one we went over and going multiple hops right so you're sort of",
    "start": "5262000",
    "end": "5269119"
  },
  {
    "text": "taking the structure of the graph and you're scaling your ability to search for related things inside of the graph",
    "start": "5269119",
    "end": "5275320"
  },
  {
    "text": "without having to do a cipher query every single time um so it's basically and it it can help you also infer",
    "start": "5275320",
    "end": "5281960"
  },
  {
    "text": "information that you didn't know before so like in this example right we're we're making these relationships on",
    "start": "5281960",
    "end": "5287880"
  },
  {
    "text": "customer also liked um we could also do things like say hey like if we had like",
    "start": "5287880",
    "end": "5293040"
  },
  {
    "text": "an identity graph of people and different identifiers and and transactions we could start resolving",
    "start": "5293040",
    "end": "5298199"
  },
  {
    "text": "people in the same household for example using embeddings um so even though it is",
    "start": "5298199",
    "end": "5303320"
  },
  {
    "text": "kind of local to your graph um your the idea behind embeddings is that you're",
    "start": "5303320",
    "end": "5308480"
  },
  {
    "text": "able to infer relationships between things inside of your graph that you know would be very hard to do without",
    "start": "5308480",
    "end": "5314679"
  },
  {
    "text": "some sort of machine learning or just traditional methods if that makes sense a little bit",
    "start": "5314679",
    "end": "5322400"
  },
  {
    "text": "yeah yeah because you're you're basically using um depending on the depending on the graph embedding you're",
    "start": "5322400",
    "end": "5328920"
  },
  {
    "text": "using um you're basically taking the structure of the relationships and that topology and you're using as features",
    "start": "5328920",
    "end": "5335280"
  },
  {
    "text": "right to power what something should look like in a representative space um and then you can then use those to",
    "start": "5335280",
    "end": "5340960"
  },
  {
    "text": "basically predict where link should exist inside of the graph yeah okay that makes sense y",
    "start": "5340960",
    "end": "5347239"
  },
  {
    "text": "hopefully I don't know if it really did but I mean it's that",
    "start": "5347239",
    "end": "5356119"
  },
  {
    "text": "you're you're providing this sort of intermediate representation where you can do more general purpose things with",
    "start": "5356119",
    "end": "5363000"
  },
  {
    "text": "it yes is that good paraphrasing yes I think so okay understood",
    "start": "5363000",
    "end": "5369400"
  },
  {
    "text": "something all righty awesome so this is going to be the final step for tonight",
    "start": "5369400",
    "end": "5374920"
  },
  {
    "text": "and then uh we'll see maybe we'll even be able to get out a little bit early and get to uh the",
    "start": "5374920",
    "end": "5380239"
  },
  {
    "text": "reception so we're now going to take what we have and we're going to start using a large language model um so we're",
    "start": "5380239",
    "end": "5387679"
  },
  {
    "text": "basically going to use the retrievers that we were just working on and we're going to take them um into this prompt",
    "start": "5387679",
    "end": "5393199"
  },
  {
    "text": "and we're going to have a l language model generate an email for us um so this might be a little bit hard to see",
    "start": "5393199",
    "end": "5398560"
  },
  {
    "text": "but it's also in the notebook um for when we go there um this is the prompt that we're going to use we're going to",
    "start": "5398560",
    "end": "5403639"
  },
  {
    "text": "instruct an llm we're going to give it a name we're going to say it works for a certain company and we're going to tell it to write an engaging email to a",
    "start": "5403639",
    "end": "5410320"
  },
  {
    "text": "customer um to promote and summarize products relevant to them given one the current season and time of year and two",
    "start": "5410320",
    "end": "5418080"
  },
  {
    "text": "recent searches and interest which is going to be our search prompt um and so all of sort of the red things are where",
    "start": "5418080",
    "end": "5423440"
  },
  {
    "text": "we're going to inject things inside of the prompt and then then the rag part comes in so we're going to tell it hey",
    "start": "5423440",
    "end": "5429040"
  },
  {
    "text": "please only use um the below relevant products so there's going to be what",
    "start": "5429040",
    "end": "5434440"
  },
  {
    "text": "we're calling search products and recommendation products which search products is going to be based on a",
    "start": "5434440",
    "end": "5439800"
  },
  {
    "text": "vector search combined with a graph reversal so that will give us something that matches the customer interest the",
    "start": "5439800",
    "end": "5444880"
  },
  {
    "text": "recommendation products are going to leverage our graph and beddings to give us additional recommendations that we",
    "start": "5444880",
    "end": "5450159"
  },
  {
    "text": "can add to that so there's going to be sort of two lists that it gets um and there's some other instruction there to",
    "start": "5450159",
    "end": "5456040"
  },
  {
    "text": "tell it to only pick um a certain number from those things and kind of be creative with that and make sure it",
    "start": "5456040",
    "end": "5461440"
  },
  {
    "text": "aligns to the current season in time of year um and this is kind of what it looks like I'll just go to the end of",
    "start": "5461440",
    "end": "5467440"
  },
  {
    "text": "this thing so um if you were to think about the chain that we're going to put together um we're going to come in with",
    "start": "5467440",
    "end": "5474840"
  },
  {
    "text": "basically four things that search prompt the customer ID the customer name and the time of year the search prompt is",
    "start": "5474840",
    "end": "5481639"
  },
  {
    "text": "going to go with the customer ID for the personal ID search which is going to be that um sort of pure group pattern the",
    "start": "5481639",
    "end": "5488920"
  },
  {
    "text": "customer ID is going to go directly to get recommendations B based off of graph embeddings and then these four things",
    "start": "5488920",
    "end": "5495560"
  },
  {
    "text": "here the the products that were recommended here and the customer name and the time of VI are going to go into the prompt to then generate an answer um",
    "start": "5495560",
    "end": "5503560"
  },
  {
    "text": "so we're doing basically two retrievers here um one for recommendations um and then another for",
    "start": "5503560",
    "end": "5509679"
  },
  {
    "text": "basically search results you can think of it that way all righty so let's go and dive into the",
    "start": "5509679",
    "end": "5517560"
  },
  {
    "text": "notebook so um we're going to use Lane chain for",
    "start": "5517560",
    "end": "5524440"
  },
  {
    "text": "this um we're going to instantiate the llm that's going to be based off of GPT for Omni which we have",
    "start": "5524440",
    "end": "5531199"
  },
  {
    "text": "here uh and then we are going to recreate um two retrievers so the first",
    "start": "5531199",
    "end": "5536760"
  },
  {
    "text": "retriever here is going to be for the personalized search this is going to use the uh text embeddings and then it's",
    "start": "5536760",
    "end": "5543440"
  },
  {
    "text": "going to do this sort of post filtering pattern with that um combined score where we do this optional match to look",
    "start": "5543440",
    "end": "5549960"
  },
  {
    "text": "at the pure group to kind of filter those results um we're going to create another function here based off of that",
    "start": "5549960",
    "end": "5556119"
  },
  {
    "text": "I'll zoom into this a little bit more um where basically we are going to take the",
    "start": "5556119",
    "end": "5563520"
  },
  {
    "text": "um this function is just so we can pass a customer ID parameter in um so this is",
    "start": "5563520",
    "end": "5568600"
  },
  {
    "text": "the kg personalized search function which is going to use this retrieval pattern and then we have a kg",
    "start": "5568600",
    "end": "5573920"
  },
  {
    "text": "recommendations function which is going to use that customer also liked uh relationship um that's going to just",
    "start": "5573920",
    "end": "5580560"
  },
  {
    "text": "basically go off of customer history um and then both of these will sort of join it'll do some formatting for the",
    "start": "5580560",
    "end": "5587239"
  },
  {
    "text": "documents um and return them um for injection into the prompt um here's the prompt itself so",
    "start": "5587239",
    "end": "5594119"
  },
  {
    "text": "this is just the prompt we look at in the slide before um it mentions you know customer name time of year and then it",
    "start": "5594119",
    "end": "5600360"
  },
  {
    "text": "has the relevant products where you put in the um the search products um and",
    "start": "5600360",
    "end": "5606000"
  },
  {
    "text": "then other recommendations generated from the graph embedding and then when you create the",
    "start": "5606000",
    "end": "5612600"
  },
  {
    "text": "chain so you can see here on this chain um we have four inputs right so the",
    "start": "5612600",
    "end": "5618520"
  },
  {
    "text": "search products which again comes from the personalized search pattern the recommendation products which comes from",
    "start": "5618520",
    "end": "5624000"
  },
  {
    "text": "the recommendation pattern so there's these two retrievers that are supplying each of these respectively the customer",
    "start": "5624000",
    "end": "5629800"
  },
  {
    "text": "name and the time of year and the uh customer interests as well so I guess all five of these things right get",
    "start": "5629800",
    "end": "5636679"
  },
  {
    "text": "passed and injected into that prompt go to the llm this is all uh Lang chain",
    "start": "5636679",
    "end": "5641800"
  },
  {
    "text": "expression language so this is kind of a lang chain thing where we have this pipe operator that's just basically taking",
    "start": "5641800",
    "end": "5647400"
  },
  {
    "text": "this dictionary of things and then passing it to be interjected into the prompt calls the llm in this case GPT 40",
    "start": "5647400",
    "end": "5654920"
  },
  {
    "text": "and then just gets outputed and so if we uh look at what it looks like when we invoke that chain",
    "start": "5654920",
    "end": "5661560"
  },
  {
    "text": "again using our search prompt which is denim genes our customer ID and then I gave it a customer name um and a time of year and",
    "start": "5661560",
    "end": "5669719"
  },
  {
    "text": "the customer name is probably something that could be stored in a database too is that this data was anonymized so we",
    "start": "5669719",
    "end": "5675760"
  },
  {
    "text": "don't have that um we don't have that in the in the database itself um but anyway",
    "start": "5675760",
    "end": "5681600"
  },
  {
    "text": "what this will do you see it'll give me um its responses it'll make a subject header for the email hi Alex I hope this",
    "start": "5681600",
    "end": "5688119"
  },
  {
    "text": "email finds you well and enjoy the start of the summer as the days get warmer it's a perfect time to refresh your wardrobe",
    "start": "5688119",
    "end": "5694440"
  },
  {
    "text": "um and then it will give you the denim Gene so these are the items that came from the search that was personalized to",
    "start": "5694440",
    "end": "5700320"
  },
  {
    "text": "this user um and you see we get um a set of five uh Gene products here some are",
    "start": "5700320",
    "end": "5706480"
  },
  {
    "text": "Essentials to pair with your Denim and then this is where it uses the graph embeddings to provide those other",
    "start": "5706480",
    "end": "5712159"
  },
  {
    "text": "recommendations down here so it's basically right using a combination of this Vector search to pull things back",
    "start": "5712159",
    "end": "5719480"
  },
  {
    "text": "personalizing it so that it becomes um specific to just this user and then adding additional",
    "start": "5719480",
    "end": "5725600"
  },
  {
    "text": "recommendations to that as well and of course you can change the prompt to be just the recommendations portion if you",
    "start": "5725600",
    "end": "5731239"
  },
  {
    "text": "wanted to or just the search portion or you know whatever whatever was appropriate um for the application at",
    "start": "5731239",
    "end": "5737320"
  },
  {
    "text": "hand um and um if we just looked at so basically this cell if I run it all this",
    "start": "5737320",
    "end": "5744520"
  },
  {
    "text": "next cell will do is show you the um the prompt the full prompt that was set to",
    "start": "5744520",
    "end": "5750239"
  },
  {
    "text": "the language model so if we look at this um this is basically showing you if I were to scroll all the way to the top it",
    "start": "5750239",
    "end": "5756280"
  },
  {
    "text": "provides quite a few products um you can see here this is the data that it retrieved and formatted from the",
    "start": "5756280",
    "end": "5761320"
  },
  {
    "text": "database for the relevant products all the different garments that it selected um and then if I were to go",
    "start": "5761320",
    "end": "5768199"
  },
  {
    "text": "down more it would eventually bring me down to the recommendation products which I think it already did here so if",
    "start": "5768199",
    "end": "5774360"
  },
  {
    "text": "I go up further um yes relevant products",
    "start": "5774360",
    "end": "5781280"
  },
  {
    "text": "um and then it should give me about 10 of those and then other recommendations from the graph embeddings that go along with that going down here and then it",
    "start": "5781280",
    "end": "5789040"
  },
  {
    "text": "basically chose from those products to generate that uh given",
    "start": "5789040",
    "end": "5794118"
  },
  {
    "text": "[Music]",
    "start": "5795970",
    "end": "5799129"
  },
  {
    "text": "response yes yeah if you look at the way those queries were written um in the in",
    "start": "5802159",
    "end": "5807239"
  },
  {
    "text": "the cells before I think the first one um for the search responses I limited",
    "start": "5807239",
    "end": "5812320"
  },
  {
    "text": "them to 10 and then for the recommendations I'm actually passing a 100 so I'm passing quite a few um but",
    "start": "5812320",
    "end": "5818440"
  },
  {
    "text": "yeah eventually if you provide enough of them you will hit a context window",
    "start": "5818440",
    "end": "5823520"
  },
  {
    "text": "issue um and then so basically once we have that we can run a short demo app so",
    "start": "5823520",
    "end": "5829440"
  },
  {
    "text": "in this case we're using gradio um this is just some examples um",
    "start": "5829440",
    "end": "5834719"
  },
  {
    "text": "preset examples for that we can use in the application um and this is running the",
    "start": "5834719",
    "end": "5840199"
  },
  {
    "text": "application so I'll go ahead and give it a run and if you have it in your note it should just give you a link that you can",
    "start": "5840199",
    "end": "5845239"
  },
  {
    "text": "go to and basically let me make this bigger so it's seeable so here's just a UI of",
    "start": "5845239",
    "end": "5853440"
  },
  {
    "text": "what we had before right so this is the example that we ran earlier so if I say submit um for this specific user um it",
    "start": "5853440",
    "end": "5862440"
  },
  {
    "text": "should pull back hopefully in the next 20 seconds or so cuz the internet's slow normally it's around 10 to 15",
    "start": "5862440",
    "end": "5868639"
  },
  {
    "text": "seconds um yep and this will pull back the email response",
    "start": "5868639",
    "end": "5873960"
  },
  {
    "text": "and the interesting thing about this is if I took you see this customer ID is like da a AE if I select a different",
    "start": "5873960",
    "end": "5880840"
  },
  {
    "text": "customer ID but the same prompt so say it's this person so I click that and then yes",
    "start": "5880840",
    "end": "5889480"
  },
  {
    "text": "let's change this other customer this answer should um be different and if it",
    "start": "5889480",
    "end": "5894599"
  },
  {
    "text": "isn't different it's because they have a very similar um peer group and a very similar um piece in the graph but if you",
    "start": "5894599",
    "end": "5901679"
  },
  {
    "text": "see HW denim and skinny jeans and then this you'll see they get a bunch of",
    "start": "5901679",
    "end": "5907000"
  },
  {
    "text": "different recommendations and search patterns so the idea here right is even though these two um individuals had the",
    "start": "5907000",
    "end": "5913599"
  },
  {
    "text": "same interest based on their purchase behavior in the graph were're able to give them very different recommendations",
    "start": "5913599",
    "end": "5919800"
  },
  {
    "text": "because they exist in very different parts of the graph and have different interests based on their purchase",
    "start": "5919800",
    "end": "5924880"
  },
  {
    "text": "history and you can play around with this like if I you'll see it'll give me some summer things here if I change this",
    "start": "5924880",
    "end": "5931560"
  },
  {
    "text": "to like February right this is nothing to do with graph this is purely an an llm thing at this",
    "start": "5931560",
    "end": "5938360"
  },
  {
    "text": "point and I submit it um it should the email should change to Winter and then it should give you um instead of Summer",
    "start": "5938360",
    "end": "5945639"
  },
  {
    "text": "must haves it should give you um something about winter and it should be able to select um different products down here",
    "start": "5945639",
    "end": "5953080"
  },
  {
    "text": "that should um hopefully if the llm is doing its job correctly um go for more winter related items like sweaters that",
    "start": "5953080",
    "end": "5959080"
  },
  {
    "text": "you see here um so that's the that's the full app um that kind of leverages all the",
    "start": "5959080",
    "end": "5966520"
  },
  {
    "text": "things that we just went over cool thank you so much everyone this was thank you so much",
    "start": "5966520",
    "end": "5975119"
  },
  {
    "text": "[Music]",
    "start": "5975970",
    "end": "5992920"
  }
]