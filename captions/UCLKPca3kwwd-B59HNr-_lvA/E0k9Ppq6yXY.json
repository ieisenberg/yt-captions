[
  {
    "text": "so today I'm going to be going over a workshop so there is like an interactive component i think you can probably get a",
    "start": "10240",
    "end": "16080"
  },
  {
    "text": "lot out of this talk just by watching but if you do want to participate um you're going to probably want to install",
    "start": "16080",
    "end": "21920"
  },
  {
    "text": "Docker on your laptop if you don't already have it and then you're going to want to pull this Docker image uh if you do this it should be very easy to follow",
    "start": "21920",
    "end": "28080"
  },
  {
    "text": "along there's also a notebook in the channel it's called I think like workshops letter and you can just hop",
    "start": "28080",
    "end": "34719"
  },
  {
    "text": "over to the I think I also made like a tiny URL for it um but if you hop over to this link this is like the notebook",
    "start": "34719",
    "end": "40559"
  },
  {
    "text": "I'll be running over for maybe like the first 30 minutes and this notebook is kind of like a client and the client",
    "start": "40559",
    "end": "46559"
  },
  {
    "text": "needs to run against the server and the Docker image is what would be the server in your case um so again I'll leave this",
    "start": "46559",
    "end": "52640"
  },
  {
    "text": "up for a few seconds this is basically where you're going to go get the",
    "start": "52640",
    "end": "58079"
  },
  {
    "text": "notebook and then and I believe this is also in the in the slack",
    "start": "59079",
    "end": "65320"
  },
  {
    "text": "channel and then yeah the main thing you're going to want to do if you want to follow along and you have Docker installed is like docker pull um I guess",
    "start": "65320",
    "end": "72960"
  },
  {
    "text": "like a quick show of hands like how many people here have Docker installed on their laptops so okay sweet yeah most of",
    "start": "72960",
    "end": "79000"
  },
  {
    "text": "us okay great um okay does anyone need a few minutes",
    "start": "79000",
    "end": "84880"
  },
  {
    "text": "or anything um I guess the people who do want to kind of follow along just make sure to check out the workshops channel",
    "start": "84880",
    "end": "90240"
  },
  {
    "text": "um and of course this is recorded and then all the materials will be online so it'll be very easy to kind of follow along later as well",
    "start": "90240",
    "end": "96960"
  },
  {
    "text": "yeah so I believe the title of this workshop was um like agent memory the LMOS uh I think maybe a better title for",
    "start": "96960",
    "end": "104720"
  },
  {
    "text": "the workshop is stateful agents so I think you probably heard a lot about agents um over the course of this",
    "start": "104720",
    "end": "109840"
  },
  {
    "text": "conference as I also would like to pull the room like how many of you if you think you were asked today to give like",
    "start": "109840",
    "end": "115280"
  },
  {
    "text": "a bit a concrete definition of an agent would be like pretty comfortable in what you what your definition",
    "start": "115280",
    "end": "120680"
  },
  {
    "text": "is okay yeah so despite hearing you know a lot about agents over multiple days it's still pretty hard to define i think",
    "start": "120680",
    "end": "128640"
  },
  {
    "text": "this is kind of a problem that's become much worse over the past year and I think that's why it's kind of useful to",
    "start": "128640",
    "end": "134800"
  },
  {
    "text": "maybe like sharpen our definition of agents so I like this term staple agent um I think staple agent actually is kind",
    "start": "134800",
    "end": "140879"
  },
  {
    "text": "of what agent meant before you know the LM era and I think these days I think a very common definition for agent is it's",
    "start": "140879",
    "end": "148000"
  },
  {
    "text": "like an LM that's taking actions in a loop right i think that kind of that kind of works but it also misses a",
    "start": "148000",
    "end": "154400"
  },
  {
    "text": "really big um part of that process which is that when you run the loop it's a closed loop and the agent gets updated",
    "start": "154400",
    "end": "161280"
  },
  {
    "text": "and it turns out that you know in this new wave of AI the fundamental unit of compute we're using for AI is stateless",
    "start": "161280",
    "end": "167280"
  },
  {
    "text": "it's not you know a recurrent neural network it's not an SSM it's a transformer and the transformer",
    "start": "167280",
    "end": "173360"
  },
  {
    "text": "inherently is like a stateless machine so that means that when you close the loop you have to have some sort of",
    "start": "173360",
    "end": "178560"
  },
  {
    "text": "mechanism for updating the state and you know traditionally like when agent was defined back in like the RL days or like",
    "start": "178560",
    "end": "185680"
  },
  {
    "text": "back you know before pre-LM I don't think this really was that big of a distinction to make like staple versus",
    "start": "185680",
    "end": "191280"
  },
  {
    "text": "not staple agents i think because LMs are stateless and that's like what everyone is using for a for AI now it's",
    "start": "191280",
    "end": "196640"
  },
  {
    "text": "a pretty important distinction so hopefully by the end of this talk you kind of understand what staple agents mean and you probably hopefully agree",
    "start": "196640",
    "end": "202800"
  },
  {
    "text": "with me that um stapleness or memory is actually probably the most important thing to solve if we actually want to",
    "start": "202800",
    "end": "208760"
  },
  {
    "text": "get you know if you want 125 be the year of agents or if you want agents to actually deliver on any of the",
    "start": "208760",
    "end": "216239"
  },
  {
    "text": "hype yeah so when I talk about stapleness I think stapleness is pretty synonymous with memory i think that's",
    "start": "216360",
    "end": "223280"
  },
  {
    "text": "because LM effectively have no memory they just have the memory that's in their weights and then they have what's in the context window um so like memory",
    "start": "223280",
    "end": "230560"
  },
  {
    "text": "and state context these are all kind of synonyms with LM or like LM driven AI and humans are of course stateful so",
    "start": "230560",
    "end": "237760"
  },
  {
    "text": "humans they form new memories they learn over time and LMs don't so any of the learning you're going to do is going to",
    "start": "237760",
    "end": "243760"
  },
  {
    "text": "have to be done by you the user of the LM or by the framework but it has to be done by somebody and traditionally you",
    "start": "243760",
    "end": "250000"
  },
  {
    "text": "know in the past few years I think by default this just means appending to a list right and I think for workflows and",
    "start": "250000",
    "end": "255040"
  },
  {
    "text": "like stuff we were playing around with from 2022 to 2024 when not a lot of people necessarily cared about like",
    "start": "255040",
    "end": "260079"
  },
  {
    "text": "making money um or doing useful things with agents that was okay but I think it becomes a very big problem when the only",
    "start": "260079",
    "end": "265680"
  },
  {
    "text": "mechanism you have to handle state when you're actually trying to use agents to do useful things is kind of appending to",
    "start": "265680",
    "end": "271440"
  },
  {
    "text": "some sort of list and a list that's like held in Python process memory or you know in uh like a Node.js",
    "start": "271440",
    "end": "279720"
  },
  {
    "text": "process so the natural question is if we have LM and LM are stateless and",
    "start": "279720",
    "end": "285600"
  },
  {
    "text": "basically the main thing we want to get out of state is we want to have humanlike intelligence that means learning so how do we actually do that",
    "start": "285600",
    "end": "291840"
  },
  {
    "text": "um is how many people here have like heard of an MGPT um okay yeah so before I was you know",
    "start": "291840",
    "end": "298960"
  },
  {
    "text": "doing the startup Leta I was a PhD student at Berkeley and the CHAGPD stuff happened in the middle of my PhD which",
    "start": "298960",
    "end": "304800"
  },
  {
    "text": "is kind of like interesting because it meant that like most people doing research kind of pivoted their research entirely um so in the few years of my",
    "start": "304800",
    "end": "311360"
  },
  {
    "text": "PhD post chat GBT I was really focused on memory and agents and I wrote this paper called megpt with a bunch of my",
    "start": "311360",
    "end": "317759"
  },
  {
    "text": "colleagues and some of my co-workers now at lettera um and this is really talking",
    "start": "317759",
    "end": "322960"
  },
  {
    "text": "about like a memory management system for LMS so if LM can't if they need some",
    "start": "322960",
    "end": "328320"
  },
  {
    "text": "sort of memory management and the de facto way we do this is like a human appends to a list well if you believe LM",
    "start": "328320",
    "end": "333520"
  },
  {
    "text": "get better and better and better shouldn't this be done by another LM like shouldn't the AI do the management for the it shouldn't AI do the memory",
    "start": "333520",
    "end": "339759"
  },
  {
    "text": "management for the AI so when we called like this a me an LMOS we really referring to like a memory management",
    "start": "339759",
    "end": "346680"
  },
  {
    "text": "system and this is effectively like a very high level graph or high level",
    "start": "346680",
    "end": "352160"
  },
  {
    "text": "figure of what I what I mean by like statelessness versus statefulness on the left is basically what most people do um",
    "start": "352160",
    "end": "358720"
  },
  {
    "text": "you know you kind of have a context window the context window is pretty loosely defined it doesn't necessarily uh it's not broken up into very distinct",
    "start": "358720",
    "end": "365199"
  },
  {
    "text": "pieces it's not tied to any state in a database per se this is just something that's held in process memory and you're like appending to it over time this is",
    "start": "365199",
    "end": "371759"
  },
  {
    "text": "what happens if you use lang chain like in the lane chain buffer memory or like query this will got get buried really deep in the codebase and this is",
    "start": "371759",
    "end": "377919"
  },
  {
    "text": "actually you know often why you need tracing software like observability observability kind of exists as a category because you have this black box",
    "start": "377919",
    "end": "384000"
  },
  {
    "text": "of tokens that just gets shoved into the LM and stapleness or like staple agents",
    "start": "384000",
    "end": "389120"
  },
  {
    "text": "and the the key thing we're trying to do is understand that you know what's in the context window if we have a machine",
    "start": "389120",
    "end": "394400"
  },
  {
    "text": "assembling it there's some that means there's some sort of like context compilation problem where there's an",
    "start": "394400",
    "end": "400080"
  },
  {
    "text": "optimal way to arrange the context window of an LLM and that context comes from state the state can be kind of very",
    "start": "400080",
    "end": "407600"
  },
  {
    "text": "large much more than can ever fit in the context window and this is basically what you do if you're a power user of",
    "start": "407600",
    "end": "413199"
  },
  {
    "text": "chatpt or a power user of claude you're doing this yourself right you're kind of like compiling the context every time",
    "start": "413199",
    "end": "419039"
  },
  {
    "text": "you start a new chat because I think a lot of us you know probably have experienced like having a chat that goes",
    "start": "419039",
    "end": "424240"
  },
  {
    "text": "like way too long it starts to derail and then you have to redescribe everything you were doing back to chat GPT like a pretty painful experience um",
    "start": "424240",
    "end": "430080"
  },
  {
    "text": "so can we basically automate this with a machine so yeah taking a step back like",
    "start": "430080",
    "end": "436960"
  },
  {
    "text": "why do we even want staple agents like why are agents we have today not enough like why is the a why is the current",
    "start": "436960",
    "end": "443680"
  },
  {
    "text": "like paradigm of LM driven agents like not good enough to reach let's say like AGI or like some like the AI we see in",
    "start": "443680",
    "end": "449759"
  },
  {
    "text": "science fiction i think the main problem is that agents we have today they just can't learn from experience um or the",
    "start": "449759",
    "end": "455280"
  },
  {
    "text": "way they learn from experience is extremely limited and I think if you're just running like workflows um you might",
    "start": "455280",
    "end": "461120"
  },
  {
    "text": "not notice this so you might it might not really be a big problem but I think if you're trying to build like assistants companions co-pilots this",
    "start": "461120",
    "end": "468479"
  },
  {
    "text": "becomes like pretty evident um so imagine if you have some sort of chatbot so this is a a direct screenshot from",
    "start": "468479",
    "end": "474960"
  },
  {
    "text": "like the MGPT paper um but you have an AI and a user and the AI you know it say",
    "start": "474960",
    "end": "480160"
  },
  {
    "text": "it can see that it's February 14th so it wants to like ask the user what they're going to be doing on Valentine's Day because they have stored in their memory",
    "start": "480160",
    "end": "486400"
  },
  {
    "text": "some recollection that the user's boyfriend is James so the the AI asks like \"Oh hey how's James doing do you",
    "start": "486400",
    "end": "492720"
  },
  {
    "text": "have any special plans today?\" And you know the user says \"Actually you know James and I broke up.\" Um so it's obviously a very very bad mistake by the",
    "start": "492720",
    "end": "500160"
  },
  {
    "text": "AI but maybe it's like kind of unavoidable um but you see the AI here if it has some notion of like a",
    "start": "500160",
    "end": "506560"
  },
  {
    "text": "permanent readr store it should do something like transact that you know James is no longer the boyfriend james",
    "start": "506560",
    "end": "513039"
  },
  {
    "text": "is the ex-boyfriend um and if you don't do this kind of thing and you run your agents for long enough and you just do",
    "start": "513039",
    "end": "518880"
  },
  {
    "text": "like recursive summarization or if you just have like a really long context model you're inevitably going to make some mistake where you tell you know you",
    "start": "518880",
    "end": "525040"
  },
  {
    "text": "tell the user something about your boyfriend James and that's like a devastating error if you're trying to build like a consumer app right and it's",
    "start": "525040",
    "end": "531360"
  },
  {
    "text": "also something that just a human would never do i think like humans something like this would get like written to your quoteunquote core memory very",
    "start": "531360",
    "end": "537200"
  },
  {
    "text": "aggressively i think the other reason you want stapleness and learning um I think many",
    "start": "537200",
    "end": "543120"
  },
  {
    "text": "of us here maybe like kind of work companies and we're trying to like use agents to make money or like drive value",
    "start": "543120",
    "end": "548399"
  },
  {
    "text": "you know for shareholders or whatever um but at the big difference between consumer and enterprise is obviously",
    "start": "548399",
    "end": "554560"
  },
  {
    "text": "data like enterprises have much more data they can ever fit into like Gemini 10 million tokens right often like per",
    "start": "554560",
    "end": "560720"
  },
  {
    "text": "user you have more than 10 million tokens so how do you actually like learn from that data so you we can kind of",
    "start": "560720",
    "end": "566640"
  },
  {
    "text": "think of there being like another training phase after the post- training like during post- training right you",
    "start": "566640",
    "end": "572480"
  },
  {
    "text": "train the model and then now the model is deployed into your enterprise and the model should kind of learn about your",
    "start": "572480",
    "end": "578000"
  },
  {
    "text": "company right and that's kind of like training again but it's not training into the weights it's training like into the incontext memory um so staple agents",
    "start": "578000",
    "end": "585760"
  },
  {
    "text": "naturally kind of like encompasses this concept and this is like pretty useful if you're trying to build this this kind",
    "start": "585760",
    "end": "591040"
  },
  {
    "text": "of stuff inside of companies and yeah again like really the reason I",
    "start": "591040",
    "end": "597040"
  },
  {
    "text": "was kind of inspired to work on like the MEGPD stuff and also the reason I'm really excited to be doing the work I'm doing at Leta is because I'm very",
    "start": "597040",
    "end": "603680"
  },
  {
    "text": "interested in just AI and making AI that is very humanlike and clearly there is some very serious deficiencies with the",
    "start": "603680",
    "end": "609839"
  },
  {
    "text": "current iteration of LM agents um they're not very humanlike especially with respect to how they deal with",
    "start": "609839",
    "end": "616120"
  },
  {
    "text": "memory yeah so I covered this already i think this is like a tweet I saw a few weeks ago or something I thought was pretty funny um but I think you know if",
    "start": "616120",
    "end": "622480"
  },
  {
    "text": "you all use chat in this room here this is probably like a pretty universal experience you kind of have a a",
    "start": "622480",
    "end": "627920"
  },
  {
    "text": "conversation that goes on too long and then you know you feel very devastated because you're now going to have to",
    "start": "627920",
    "end": "633120"
  },
  {
    "text": "mentally context compile again to like redescribe to chatbt what's going on or like flaw or whatever you're",
    "start": "633120",
    "end": "638920"
  },
  {
    "text": "using so the promise of staple agents um there's actually a lot of promise just in product right i think if you actually",
    "start": "638920",
    "end": "645519"
  },
  {
    "text": "have true statefulness then that means that you know this sort of experience shouldn't happen there shouldn't be any",
    "start": "645519",
    "end": "650640"
  },
  {
    "text": "derailment so you shouldn't have you know like a clawed instance going haywire um and actually you should have",
    "start": "650640",
    "end": "656800"
  },
  {
    "text": "the opposite happening like the the experience should get better and better and better over time as the AI kind of learns more and more about you and this",
    "start": "656800",
    "end": "662560"
  },
  {
    "text": "is you know kind of like maybe the promise of trackp memory um but you know I don't think any of that stuff is really working that well and of course I",
    "start": "662560",
    "end": "670120"
  },
  {
    "text": "think when you don't when you no longer just like shove stuff into a context window when instead you're kind of",
    "start": "670120",
    "end": "675360"
  },
  {
    "text": "really like creating me humanlike memory constructs I think the behavior of the",
    "start": "675360",
    "end": "680800"
  },
  {
    "text": "agents just becomes more human like you have the same kind of like fuzzy memory that a human has you have the same kind",
    "start": "680800",
    "end": "686000"
  },
  {
    "text": "of forgetfulness but you also have the same kind of recall so in today's workshop I think",
    "start": "686000",
    "end": "691040"
  },
  {
    "text": "it's kind of going to be split into two parts i think the main thing we're doing at the front is a notebook and of course like you don't you can just watch um but",
    "start": "691040",
    "end": "698399"
  },
  {
    "text": "if you want to you can follow along in the actual the uh the Jupyter notebook file and the goal of that notebook will",
    "start": "698399",
    "end": "704079"
  },
  {
    "text": "just be to like lay out the basic ideas um behind this sort of like context",
    "start": "704079",
    "end": "709360"
  },
  {
    "text": "management system in an LLM and at a very very high level you know if I had to describe it in one sentence it's just",
    "start": "709360",
    "end": "714800"
  },
  {
    "text": "that you make an LM either the main LM or like the subconscious memory system LM just aware of the context problem you",
    "start": "714800",
    "end": "721279"
  },
  {
    "text": "kind of can just describe to it in English hey you are an LM and you have a context window of like 128k tokens and I",
    "start": "721279",
    "end": "727440"
  },
  {
    "text": "will let you know when you reach 100k tokens and you're going to have to like manage memory with these tools so it's",
    "start": "727440",
    "end": "732560"
  },
  {
    "text": "all centered around tool calling uh and I think centering around tool calling is actually very effective because LM are",
    "start": "732560",
    "end": "737680"
  },
  {
    "text": "getting better and better and better at tool calling and the second part of this workshop is going to be um kind of like",
    "start": "737680",
    "end": "744880"
  },
  {
    "text": "building these building these stateful agents in um the letter framework and then also like the front-end ad so I",
    "start": "744880",
    "end": "752560"
  },
  {
    "text": "think if you're very interested in kind of like no code stuff I think this is pretty interesting because I think we're",
    "start": "752560",
    "end": "758480"
  },
  {
    "text": "all very very familiar with the paradigm of the playground right it's like ubiquitous every single AI company has their own playground but I think once",
    "start": "758480",
    "end": "765519"
  },
  {
    "text": "statefulness and like staple agents become the dominant paradigm which I'm pretty sure they will um then I think",
    "start": "765519",
    "end": "771440"
  },
  {
    "text": "you're going to have there's going to be a new iteration of the playground and the AD that we built I think that's our",
    "start": "771440",
    "end": "777279"
  },
  {
    "text": "best guess as to what that experience will look like but I'm sure like everyone in this room who's worked very who has like spent a ton of hours with",
    "start": "777279",
    "end": "783120"
  },
  {
    "text": "LMS you probably have a very strong opinion too on what that experience will be like like what happens when you know",
    "start": "783120",
    "end": "788320"
  },
  {
    "text": "chat GBT is no longer like it no longer has like a history bar on the side and",
    "start": "788320",
    "end": "793839"
  },
  {
    "text": "says it's like a unified experience like what is the correct UX for that what's the correct DX um and then if it's not a",
    "start": "793839",
    "end": "799440"
  },
  {
    "text": "consumer app like chatbt if it's a de developer tool like what do you as a developer want to see from your agent",
    "start": "799440",
    "end": "804959"
  },
  {
    "text": "like you probably want to see all the way down to the context window so I said this at the beginning i don't",
    "start": "804959",
    "end": "810959"
  },
  {
    "text": "think any anyone necessarily walked in midway so if you're going to follow along you're going to want to download Docker on your computer i think most of",
    "start": "810959",
    "end": "816959"
  },
  {
    "text": "the people in this room have Docker on their computer you can do this with PIP but PIP is pretty terrible at package management so you might like hit a bug",
    "start": "816959",
    "end": "823240"
  },
  {
    "text": "um and yeah I already covered this but if you're interested in any of the ideas that I'm going over in the initial notebook they're basically just strongly",
    "start": "823240",
    "end": "830880"
  },
  {
    "text": "distilled versions of the ideas from the METPD paper um like reduced to their like most simple um yeah their most",
    "start": "830880",
    "end": "838720"
  },
  {
    "text": "simple components but if you're like interested in this more like a research capacity you can also just read this",
    "start": "838720",
    "end": "845639"
  },
  {
    "text": "paper okay and yeah we're going to be doing this in Python um I guess like how",
    "start": "845639",
    "end": "851600"
  },
  {
    "text": "many people in this room have use Python as their main language versus Okay and I",
    "start": "851600",
    "end": "857199"
  },
  {
    "text": "imagine like everyone else is Typescript or something yeah so basically what",
    "start": "857199",
    "end": "862560"
  },
  {
    "text": "we're going to be doing is Python but leta the um server is not Oh maybe Go or Rust okay yeah yeah so we we don't have",
    "start": "862560",
    "end": "870720"
  },
  {
    "text": "a Go or Rust SDK but we have a TypeScript SDK and then we also have a REST API and actually our Python SDK and TypeScript SDK are just like",
    "start": "870720",
    "end": "876320"
  },
  {
    "text": "programmatically generated off the REST API okay so I I left this on the screen",
    "start": "876320",
    "end": "881920"
  },
  {
    "text": "a little bit earlier um to kind of like preempt any pauses here so I might just like continue on um and yeah these are",
    "start": "881920",
    "end": "890399"
  },
  {
    "text": "these links are all in the channel like workshops hypen leta on the the shared",
    "start": "890399",
    "end": "897680"
  },
  {
    "text": "slack okay let me hop",
    "start": "897800",
    "end": "902720"
  },
  {
    "text": "over oh and I think we because this workshop has a reasonable amount of time allotted to it um I'm very open to like",
    "start": "902839",
    "end": "910079"
  },
  {
    "text": "pausing for questions and stuff so if anyone has any questions please just raise your hand not going to pause and",
    "start": "910079",
    "end": "915920"
  },
  {
    "text": "then if you're just going too slow we can fix that later yeah okay",
    "start": "915920",
    "end": "922880"
  },
  {
    "text": "[Music] questions all right so yeah I guess how",
    "start": "928100",
    "end": "935199"
  },
  {
    "text": "many people are actually going to attempt to follow along it'll be useful for reference okay decent amount of people so I'll try to Yeah definitely uh",
    "start": "935199",
    "end": "943680"
  },
  {
    "text": "raise your hand or something if something's going terribly wrong and you're not able to follow um let me",
    "start": "943680",
    "end": "948800"
  },
  {
    "text": "boost the Okay is let me know when the font is large enough is this large enough for the people in the back to to",
    "start": "948800",
    "end": "955160"
  },
  {
    "text": "read okay great",
    "start": "955160",
    "end": "959199"
  },
  {
    "text": "and all right okay so if you ran the if you did",
    "start": "966040",
    "end": "975519"
  },
  {
    "text": "the Docker pull um the next thing you're going to want to do to b to start this",
    "start": "975519",
    "end": "981839"
  },
  {
    "text": "entire uh notebook session is you're going to want to start the lettuce server so if you were using Docker the way you're going to do this is run this",
    "start": "981839",
    "end": "987600"
  },
  {
    "text": "docker run command i'm realizing now that this is not Oh this is this is in",
    "start": "987600",
    "end": "992720"
  },
  {
    "text": "you can copy paste this out of the GitHub um the GitHub link but I'll also post it in the Slack",
    "start": "992720",
    "end": "1000399"
  },
  {
    "text": "yeah and then if there's a free endpoint that's live so you don't actually need to have these keys um so you can just",
    "start": "1007240",
    "end": "1014160"
  },
  {
    "text": "run this and it will you'll be able to run the demo",
    "start": "1014160",
    "end": "1018639"
  },
  {
    "text": "fine okay and then once you run it you'll basically see the server kick off in the",
    "start": "1021880",
    "end": "1028000"
  },
  {
    "text": "background yeah so while people I'll give everyone like a minute to do that and while everyone is kind of kicking",
    "start": "1028839",
    "end": "1034880"
  },
  {
    "text": "off their servers might also just show you kind of a diagram of what's going on here",
    "start": "1034880",
    "end": "1042760"
  },
  {
    "text": "yeah so basically the way this whole stack works is leta is like it's an open",
    "start": "1044799",
    "end": "1050240"
  },
  {
    "text": "source stack um it's basically fast API Postgress and Python um in the middle",
    "start": "1050240",
    "end": "1055520"
  },
  {
    "text": "like Python logic so in that Docker container like it's exposing an API",
    "start": "1055520",
    "end": "1060799"
  },
  {
    "text": "that's actually like very you know pretty robustly documented you can like go to our API reference here um and the",
    "start": "1060799",
    "end": "1066799"
  },
  {
    "text": "API is how you interact with all your agents so if you're using the Python SDK it actually just you know goes over the the REST API and you basically build",
    "start": "1066799",
    "end": "1074640"
  },
  {
    "text": "your Asian applications on top of this API so this actually looks very similar to like the chat completions API it's",
    "start": "1074640",
    "end": "1081679"
  },
  {
    "text": "just like session based right and so you don't have to provide the entire the entire conversation history every single",
    "start": "1081679",
    "end": "1088000"
  },
  {
    "text": "time you interact with an agent so we'll see that kind of immediately in the notebook as well okay so I assume",
    "start": "1088000",
    "end": "1093080"
  },
  {
    "text": "everybody who's following along has done the the thing to launch um is there",
    "start": "1093080",
    "end": "1098640"
  },
  {
    "text": "Okay it says that there's a directory that doesn't exist do I need to create that um oh yeah can you do",
    "start": "1098640",
    "end": "1108200"
  },
  {
    "text": "liker and all that okay did anyone else get that directory doesn't exist problem",
    "start": "1108200",
    "end": "1114960"
  },
  {
    "text": "can you send him because I can see Okay do you",
    "start": "1114960",
    "end": "1121039"
  },
  {
    "text": "So are you able to see this here oh no",
    "start": "1121039",
    "end": "1126080"
  },
  {
    "text": "okay yeah so it's let me",
    "start": "1126080",
    "end": "1130279"
  },
  {
    "text": "Yeah that fixed it okay great all right any other problems does everyone have a server idling now on their laptop great",
    "start": "1137679",
    "end": "1145039"
  },
  {
    "text": "okay so now that we started the server um now we can kind of like start running the notebook so this part is",
    "start": "1145039",
    "end": "1153480"
  },
  {
    "text": "basically you're going to go to this go to this channel click on this link you're going to see a readme and the",
    "start": "1153480",
    "end": "1159919"
  },
  {
    "text": "readme has all the commands so I I'll kind of like go one by one and paste these commands into the workshop channel",
    "start": "1159919",
    "end": "1167240"
  },
  {
    "text": "it's a workshop leta yeah okay so you need basically clone",
    "start": "1167280",
    "end": "1173600"
  },
  {
    "text": "the repo",
    "start": "1173600",
    "end": "1176000"
  },
  {
    "text": "Once you clone the repo just CD into the specific",
    "start": "1180160",
    "end": "1184559"
  },
  {
    "text": "example i'm assuming everyone's using Docker so I'm just going to kind of ignore that",
    "start": "1191640",
    "end": "1197679"
  },
  {
    "text": "um okay and ideally everyone has Python installed in",
    "start": "1199480",
    "end": "1205120"
  },
  {
    "text": "their laptop hopefully",
    "start": "1205120",
    "end": "1209240"
  },
  {
    "text": "yeah yeah and then once you run that Jupyter notebook command um all you need to do is just double click on the",
    "start": "1228960",
    "end": "1234720"
  },
  {
    "text": "notebook here if you're not familiar with um Jupiter it should automatically like",
    "start": "1234720",
    "end": "1240799"
  },
  {
    "text": "open a browser tab that should have this and then you just like double click and you'll open the",
    "start": "1240799",
    "end": "1248240"
  },
  {
    "text": "notebook okay so among the people who are following who is a little still not",
    "start": "1249640",
    "end": "1254960"
  },
  {
    "text": "to this notebook stage yet okay yeah still so it's been a while",
    "start": "1254960",
    "end": "1260400"
  },
  {
    "text": "okay yeah yeah no problem okay no other issues nothing on",
    "start": "1260400",
    "end": "1267679"
  },
  {
    "text": "fire yet okay",
    "start": "1267679",
    "end": "1272600"
  },
  {
    "text": "all right how's the Jeep looking i had to spell that",
    "start": "1285360",
    "end": "1291120"
  },
  {
    "text": "okay okay so everyone has this notebook up who is intending to follow along",
    "start": "1291720",
    "end": "1297919"
  },
  {
    "text": "great all right so yeah if you're not familiar with notebooks you basically just execute them cell by cell",
    "start": "1297919",
    "end": "1303240"
  },
  {
    "text": "um I mean number the first thing you're going to have to do here is like import the client so again this is a little bit",
    "start": "1303240",
    "end": "1309280"
  },
  {
    "text": "different from some other frameworks you're familiar with like I assume everyone here has like used lang chain",
    "start": "1309280",
    "end": "1314320"
  },
  {
    "text": "before probably or heard of it um well like crew AI autogen",
    "start": "1314320",
    "end": "1319840"
  },
  {
    "text": "um padantic uh AI things like that so I think among those frameworks there's a",
    "start": "1319840",
    "end": "1325280"
  },
  {
    "text": "pretty big distinction with leta and that leta is like a server client process and a big part of that is because the agents are intended to be",
    "start": "1325280",
    "end": "1331600"
  },
  {
    "text": "staple and like persist indefinitely so it's very hard to like persist things indefinitely if you're kind of holding",
    "start": "1331600",
    "end": "1336799"
  },
  {
    "text": "everything in application state as opposed to having like a server that's a centralized source of truth so we basically run the server on the left um",
    "start": "1336799",
    "end": "1343280"
  },
  {
    "text": "we connect to the client you know you can actually park the server anywhere you want because it's a Docker image you can like run this in the cloud it's very",
    "start": "1343280",
    "end": "1349200"
  },
  {
    "text": "easy to like drop on Kubernetes or something in this case it's running on our laptop so we just need a local host and the default port so the first thing",
    "start": "1349200",
    "end": "1356159"
  },
  {
    "text": "we're going to do is create an agent so I want to make sure that everyone can like execute this cell so I'm going to",
    "start": "1356159",
    "end": "1362080"
  },
  {
    "text": "execute it one more time and you saw like my server kind of fired off on my left",
    "start": "1362080",
    "end": "1368039"
  },
  {
    "text": "um yeah so I I'll kind of walk everyone through the code here so basically you",
    "start": "1368039",
    "end": "1373799"
  },
  {
    "text": "know with chat completions which I assume everyone's familiar with the paradigm is you create the agent in",
    "start": "1373799",
    "end": "1379840"
  },
  {
    "text": "memory and then you kind of like pass the whole agent off to the server and ask like you know complete the state",
    "start": "1379840",
    "end": "1385600"
  },
  {
    "text": "complete like this one more message in my in my message history instead of let we we first create the agent and then",
    "start": "1385600",
    "end": "1391520"
  },
  {
    "text": "once we we create the agent we have a handle for it and once we have that handle we can kind of send it messages and we never have to send it the full",
    "start": "1391520",
    "end": "1397760"
  },
  {
    "text": "state we don't have to track that anymore we just send individual messages so the the main components of memory in",
    "start": "1397760",
    "end": "1405360"
  },
  {
    "text": "a lettera agent is just memory blocks so these are just strings um in this case you know we're doing something pretty",
    "start": "1405360",
    "end": "1411600"
  },
  {
    "text": "simple and stupid like the human's name is Bob the builder um and then the persona for the agent we're just using",
    "start": "1411600",
    "end": "1417600"
  },
  {
    "text": "that my name is Sam um this AI and this is all arbitrary the only things that",
    "start": "1417600",
    "end": "1422960"
  },
  {
    "text": "these handles are useful for actually is for the agent to edit these own handles or edit the values on these handles so",
    "start": "1422960",
    "end": "1428480"
  },
  {
    "text": "as we'll be able to see later in the notebook the agent can actually go in and like rewrite its own memory so if the agent you know decides that I like",
    "start": "1428480",
    "end": "1435039"
  },
  {
    "text": "ice cream or I like vanilla ice cream it can write to its memory block you know I'm no longer just Sam the AI I'm like",
    "start": "1435039",
    "end": "1440640"
  },
  {
    "text": "Sam the the AI that likes vanilla ice cream right or if you know Bob the Builder says,\"I broke up with my",
    "start": "1440640",
    "end": "1446480"
  },
  {
    "text": "girlfriend um or my I broke up with my boyfriend James.\" You know the the AI",
    "start": "1446480",
    "end": "1452000"
  },
  {
    "text": "can actually use this handle to go in and edit this block of the string and say you know the human's name is Bob the",
    "start": "1452000",
    "end": "1457279"
  },
  {
    "text": "Builder and they also broke up with their boyfriend James yeah a quick question so what's the",
    "start": "1457279",
    "end": "1463200"
  },
  {
    "text": "difference between persona and building yeah so it's there's really no",
    "start": "1463200",
    "end": "1469360"
  },
  {
    "text": "difference under the hood these are all just strings that have references um but if we look at the system prompt I'm",
    "start": "1469360",
    "end": "1475679"
  },
  {
    "text": "going to dump the system prompt a little bit later we did in the system prompt write some stuff about the human and the persona that the human block is meant",
    "start": "1475679",
    "end": "1481679"
  },
  {
    "text": "for like the user interacting with the agent and the persona is meant for the agent to kind of adapt this interaction",
    "start": "1481679",
    "end": "1487520"
  },
  {
    "text": "style right so there's kind of like a base agent and then the base agent gets further mutated by this persona yeah",
    "start": "1487520",
    "end": "1494240"
  },
  {
    "text": "okay any other questions about anything here um the you know here we're you",
    "start": "1494240",
    "end": "1499279"
  },
  {
    "text": "would if you're using OpenAI or something you'd do OpenAI like GPT4 but we're just using a free endpoint um one",
    "start": "1499279",
    "end": "1505200"
  },
  {
    "text": "thing that we'll get into a little bit later is that in Leta because the entire premise of the like runtime is that it's",
    "start": "1505200",
    "end": "1511360"
  },
  {
    "text": "a context management system so it controls the context window it's actually very easy to artificially uh",
    "start": "1511360",
    "end": "1516720"
  },
  {
    "text": "cap the context window length so you can have agents that basically will never send a payload over 10k tokens let's say",
    "start": "1516720",
    "end": "1522080"
  },
  {
    "text": "i think that's actually very common in enterprise settings where you're running like a workflow for a very long period of time it's getting longer and longer",
    "start": "1522080",
    "end": "1527200"
  },
  {
    "text": "and longer like something you'll hear from a lot of companies that use Sonnet for example is like how do I prevent my",
    "start": "1527200",
    "end": "1532799"
  },
  {
    "text": "payload from creeping up to 200k right because if you feed 200K you're waiting like minutes on a response right whereas like even 10k tokens I think on sonnet",
    "start": "1532799",
    "end": "1539520"
  },
  {
    "text": "you'll wait like 10ish seconds or something um in many cases you kind of want to like cap the context window to",
    "start": "1539520",
    "end": "1544559"
  },
  {
    "text": "be really short like 4K but then you also want the agent to like not have any perceived loss of memory you want it to",
    "start": "1544559",
    "end": "1550559"
  },
  {
    "text": "kind of like retain its memory over time okay so let's actually like yeah message",
    "start": "1550559",
    "end": "1556799"
  },
  {
    "text": "the agent um there's a link here that we'll this is what we'll do in the second half of the workshop we'll look",
    "start": "1556799",
    "end": "1561840"
  },
  {
    "text": "at like the UI builder but for now we'll just like stick in Python we'll stick to Python um so yeah if we run this message",
    "start": "1561840",
    "end": "1569039"
  },
  {
    "text": "we're going to say something like how it's going you're see seeing on the left the server is firing um and we can print",
    "start": "1569039",
    "end": "1575200"
  },
  {
    "text": "the response here uh so in leta like every single agent actually comes with",
    "start": "1575200",
    "end": "1580960"
  },
  {
    "text": "reasoning by default and this allows you to like keep reasoning that you built in like R1 and like port it over like a",
    "start": "1580960",
    "end": "1587120"
  },
  {
    "text": "GPD40 mini or something and there's just like different forward adapters for the reasoning um but yeah any are there any",
    "start": "1587120",
    "end": "1594240"
  },
  {
    "text": "questions about this we basically I think this should be something a lot of people here are familiar with right this like dictionary that's in chat",
    "start": "1594240",
    "end": "1600080"
  },
  {
    "text": "completion style we pass over to the server um and then yeah we have a message here that's like you know the",
    "start": "1600080",
    "end": "1605600"
  },
  {
    "text": "user is reaching out casually let's match their energy hey there I'm doing great how about you um you can even do",
    "start": "1605600",
    "end": "1610640"
  },
  {
    "text": "something like again because this is um because this is",
    "start": "1610640",
    "end": "1617000"
  },
  {
    "text": "staple this is actually when I send this it's going to be a follow-up message it's not going to be like a fresh chat",
    "start": "1617000",
    "end": "1622640"
  },
  {
    "text": "so if you say \"What do you know about me?\" See the agent now says you know the user wants to know about what I've",
    "start": "1622640",
    "end": "1628559"
  },
  {
    "text": "retained about them all I know is that your name is Bob the Builder if you want to share more and like you know a",
    "start": "1628559",
    "end": "1634080"
  },
  {
    "text": "ridiculous amount of emojis i think this is because under the hood this free endpoint is running GP4 mini which is like pretty emoji prone yeah five and",
    "start": "1634080",
    "end": "1641679"
  },
  {
    "text": "I'm also getting a chain of thought where is that coming from yeah yeah so so one thing about let is we kind of",
    "start": "1641679",
    "end": "1647440"
  },
  {
    "text": "force all the agents to follow a react style pattern with like reasoning and so",
    "start": "1647440",
    "end": "1653120"
  },
  {
    "text": "um kind of down in the weeds like the way it works is like sonnet itself or claude when you use like the chat or the",
    "start": "1653120",
    "end": "1660480"
  },
  {
    "text": "um the consumer app it packs like ant thinking XML tags in so like it already is like kind of a reasoner in some",
    "start": "1660480",
    "end": "1666720"
  },
  {
    "text": "capacity and because of we know that it uses like XML tags like that we can actually like force those into the",
    "start": "1666720",
    "end": "1672080"
  },
  {
    "text": "content field so we like actually inject and parse those out",
    "start": "1672080",
    "end": "1677519"
  },
  {
    "text": "yeah okay yeah and then just to like further drive home the point that this is stateful we say sure um I feel like",
    "start": "1680200",
    "end": "1686720"
  },
  {
    "text": "sure if it was like an opening message would be pretty confusing the agent would say something like I don't know what's going on",
    "start": "1686720",
    "end": "1693640"
  },
  {
    "text": "um but in this case it's seems open to sharing more okay bad it's bad model",
    "start": "1693640",
    "end": "1700000"
  },
  {
    "text": "behavior but yeah um but we'll see also later in the AD you can just see well it'll be like a UI experience so you can",
    "start": "1700000",
    "end": "1706159"
  },
  {
    "text": "kind of visualize this a lot better i just wanted to start with Python um yeah so basically there's like three different me or there's a handful of",
    "start": "1706159",
    "end": "1712320"
  },
  {
    "text": "message types that are going to be a little bit different from OpenAI but",
    "start": "1712320",
    "end": "1717520"
  },
  {
    "text": "they're still rooted in the same concepts reasoning message um you're probably familiar with this if you use like the R1 API from Deep Seek you use",
    "start": "1717520",
    "end": "1724559"
  },
  {
    "text": "any of the 01 03 models so we have the same sort of content field there's also assistant message so um this is because",
    "start": "1724559",
    "end": "1731600"
  },
  {
    "text": "like content itself is treated as inner monologue or reasoning all the time um so this is like distinct and and these",
    "start": "1731600",
    "end": "1738240"
  },
  {
    "text": "are like pretty straightforward like tool call message a tool call return the system message and the user message um",
    "start": "1738240",
    "end": "1744080"
  },
  {
    "text": "obviously like a very important part about being an agent framework is often executing the tools for the agent um you",
    "start": "1744080",
    "end": "1750000"
  },
  {
    "text": "know like OpenAI they don't execute tools for you unless it's one of the pre-approved tools like code interpreter let these other frameworks like you know",
    "start": "1750000",
    "end": "1755840"
  },
  {
    "text": "langraph or link chain um we execute tools on the server side so that's why",
    "start": "1755840",
    "end": "1761360"
  },
  {
    "text": "we're able to like provide a tool called return and in leta like the tools are actually also sandboxed um by",
    "start": "1761360",
    "end": "1768520"
  },
  {
    "text": "default okay uh any questions about this like initial message we sent um or Okay",
    "start": "1768520",
    "end": "1777480"
  },
  {
    "text": "great yeah so the next thing we're going to do is basically just like unpack all the state of the agent so the reason",
    "start": "1777480",
    "end": "1783520"
  },
  {
    "text": "this is like kind of interesting is because this is fundamentally everything that the agent",
    "start": "1783520",
    "end": "1789120"
  },
  {
    "text": "is right the agent is just its system prompt its tools and then in let us specifically we have a concept of like",
    "start": "1789120",
    "end": "1795200"
  },
  {
    "text": "three tiers or two tiers of memory the core memory that's in the context window so this is like very top level stuff you",
    "start": "1795200",
    "end": "1800399"
  },
  {
    "text": "know if you see your friend on the street um you see their face you immediately remember stuff about them like their name their hobbies the last",
    "start": "1800399",
    "end": "1806720"
  },
  {
    "text": "time we chatted but if they're a childhood friend you don't remember what you did like 10 years ago on a random like you know February 22nd 2001 right",
    "start": "1806720",
    "end": "1814080"
  },
  {
    "text": "that's not going to be like default in your brain but it might be visible to you if you like went on your phone and you went through your eye photos right",
    "start": "1814080",
    "end": "1819840"
  },
  {
    "text": "um so it's a pretty similar concept where like we want because at the end of the day LM they're kind of like",
    "start": "1819840",
    "end": "1825679"
  },
  {
    "text": "mimicking human reasoning mimicking human behavior it makes a lot of sense to actually kind of like mimic in text",
    "start": "1825679",
    "end": "1830960"
  },
  {
    "text": "the way human memory works so we have core memory that's like top level and then we have what we call archival and",
    "start": "1830960",
    "end": "1836240"
  },
  {
    "text": "recall but these are effectively just data sources that exist outside the context window and the agent can like",
    "start": "1836240",
    "end": "1841279"
  },
  {
    "text": "quote unquote jog its memory if it wants to think about something so it can say like hey like what did I do um you know",
    "start": "1841279",
    "end": "1847200"
  },
  {
    "text": "what did I do with Charles February February 22nd 2001 and it can like attempt to search the database so you",
    "start": "1847200",
    "end": "1852559"
  },
  {
    "text": "probably heard a lot about like agentic rack this is effectively the same concept",
    "start": "1852559",
    "end": "1859000"
  },
  {
    "text": "can we change the system prompt it says read only there so we cannot change it oh so the agent can't change it but you",
    "start": "1859120",
    "end": "1864480"
  },
  {
    "text": "can change anything you want yeah yeah you can change the system prompt um yeah the system prompt actually is like quite",
    "start": "1864480",
    "end": "1870559"
  },
  {
    "text": "old you wrote it like when this is written like when the initial MGBT like research was being done like in summer",
    "start": "1870559",
    "end": "1876480"
  },
  {
    "text": "of 2023 or something um so yeah you probably do want to change this if you're running something in production yeah um the other thing that's stored in",
    "start": "1876480",
    "end": "1885039"
  },
  {
    "text": "here are tools so by default because you know Mamgbt agents they have like memory",
    "start": "1885039",
    "end": "1890799"
  },
  {
    "text": "management built in they need tools to manage their memory so core memory we have two things like appending to blocks",
    "start": "1890799",
    "end": "1896080"
  },
  {
    "text": "so saying like the user is not only Bob the builder but they also have a boyfriend called James replacing you",
    "start": "1896080",
    "end": "1901360"
  },
  {
    "text": "know the user's name is not Bob the builder it's actually Charles um and then like searching memory you can",
    "start": "1901360",
    "end": "1906960"
  },
  {
    "text": "either do a very specific conversation search or more generic like rag query and then you can also like insert into",
    "start": "1906960",
    "end": "1912399"
  },
  {
    "text": "this external database so if you look at like what's actually in the memory if",
    "start": "1912399",
    "end": "1917440"
  },
  {
    "text": "you're kind of into like API style programming like you can basically do whatever you want with your memory",
    "start": "1917440",
    "end": "1922640"
  },
  {
    "text": "blocks because it's just you know these are just strings that exist in Postgress in some table and they all they all have",
    "start": "1922640",
    "end": "1928399"
  },
  {
    "text": "identifiers they have block ids so you can read and write to them um you can also share these blocks among agents so",
    "start": "1928399",
    "end": "1934080"
  },
  {
    "text": "you can have a bunch of agents that are all acting as part of your organization say it's like a multi- agent system and because the blocks just live in a",
    "start": "1934080",
    "end": "1940559"
  },
  {
    "text": "database and they get sent they get brought out of the database whenever the agent needs to think you can have these blocks like linked together so multiple",
    "start": "1940559",
    "end": "1946880"
  },
  {
    "text": "agents can have the same block like they can all share information about the AI engineer conference that's held in one",
    "start": "1946880",
    "end": "1952080"
  },
  {
    "text": "block of memory it doesn't have to be duplicated and then when one writes the block it like immediately gets broadcasted",
    "start": "1952080",
    "end": "1958159"
  },
  {
    "text": "by definition does all of the all of the archives in memory have to also be in",
    "start": "1958159",
    "end": "1963760"
  },
  {
    "text": "the recall if the recall contains all the history that also contains anything about would have been archived yeah yeah",
    "start": "1963760",
    "end": "1970559"
  },
  {
    "text": "that's a great question i think the difference between archival and recall really comes down to like if you're using this for like a chat style",
    "start": "1970559",
    "end": "1977600"
  },
  {
    "text": "application um when we like worked on the original MEGPD project we're actually like a little bit conflicted as",
    "start": "1977600",
    "end": "1983760"
  },
  {
    "text": "to whether to like merge these into one general concept because at the end of the day like with an LM there's the",
    "start": "1983760",
    "end": "1989200"
  },
  {
    "text": "stuff that's in the context window and the stuff that's out of the context window so why do you have to like start being prescriptive about like the way",
    "start": "1989200",
    "end": "1994399"
  },
  {
    "text": "the stuff out of the context window is stored um we just thought in most use cases people want to give their agents",
    "start": "1994399",
    "end": "2000080"
  },
  {
    "text": "the ability to specifically look at prior messages um and then separately there's just like a general readr data",
    "start": "2000080",
    "end": "2006720"
  },
  {
    "text": "store you can just like read arbitrary data write arbitrary data it's like an infinite size so that kind of just looks",
    "start": "2006720",
    "end": "2012080"
  },
  {
    "text": "like a vector database of strings it could also be like something different it could be like elastic search cluster whatever you want but you are",
    "start": "2012080",
    "end": "2018240"
  },
  {
    "text": "intentionally allowing some duplication between them it's kind of a different way for the LLM to search effectively",
    "start": "2018240",
    "end": "2024399"
  },
  {
    "text": "yeah it's a different way for the LM to search well the thing with the re if you set up a recall memory the recall memory",
    "start": "2024399",
    "end": "2030240"
  },
  {
    "text": "it's effectively conversation history so conversation history you cannot manually write to it's kind of like write",
    "start": "2030240",
    "end": "2035919"
  },
  {
    "text": "protected but it gets written every single time by default an event happens whereas the archival memory store is",
    "start": "2035919",
    "end": "2041519"
  },
  {
    "text": "like something that you have to actively say hey I have like a huge document like this big PDF i'm going to I don't want to keep it in in the context window i'm",
    "start": "2041519",
    "end": "2048240"
  },
  {
    "text": "going to dump it out of the context window so that would be like the archival memory like free readr whereas the recall thing is purely trying to",
    "start": "2048240",
    "end": "2055358"
  },
  {
    "text": "mimic like a conversation search function inside of um like iMessage",
    "start": "2055359",
    "end": "2060560"
  },
  {
    "text": "inside of like WhatsApp or",
    "start": "2060560",
    "end": "2064599"
  },
  {
    "text": "um how does tools memory tools um get",
    "start": "2067119",
    "end": "2073280"
  },
  {
    "text": "used do they do we just have a flat list of like other tools that agents can use",
    "start": "2073280",
    "end": "2078398"
  },
  {
    "text": "and memory tools would that affect the agent tool yeah that's a great question",
    "start": "2078399",
    "end": "2085280"
  },
  {
    "text": "um I I think by default if you just set up a basic agent in leta and then you start like adding more tools to it like",
    "start": "2085280",
    "end": "2091919"
  },
  {
    "text": "tab search iical calendaruler whatever those will be just like more tools that",
    "start": "2091919",
    "end": "2097118"
  },
  {
    "text": "get added to a list that started with six um but of course like if you if you built a lot of agents with tools before",
    "start": "2097119",
    "end": "2103040"
  },
  {
    "text": "you know there's like agents start to get confused if you had too many tools so there is like a trade-off here and",
    "start": "2103040",
    "end": "2109119"
  },
  {
    "text": "one thing that we've been working on recently is basically the idea of having like a dedicated agent to just handle",
    "start": "2109119",
    "end": "2115440"
  },
  {
    "text": "memory and it's effectively like a shadow of the other agent it's like a like a subconscious that is like kind of",
    "start": "2115440",
    "end": "2121200"
  },
  {
    "text": "it's like a ghost in the shell it can't actually participate all it can do is read and write memory but when it reads and writes memory it's like using a",
    "start": "2121200",
    "end": "2127760"
  },
  {
    "text": "shared memory block so it's like reading and writing to something that like automatically updates like the uh the",
    "start": "2127760",
    "end": "2132880"
  },
  {
    "text": "active agent and that's a way to kind of like move all the tools that aren't for act like general API actions out of the",
    "start": "2132880",
    "end": "2139839"
  },
  {
    "text": "main agent are you familiar with the cognitive",
    "start": "2139839",
    "end": "2147440"
  },
  {
    "text": "what's that yeah yeah so a few different types of memory that are mentioned there",
    "start": "2147440",
    "end": "2152720"
  },
  {
    "text": "would be things like longterm memory so when you talk about things like recall",
    "start": "2152720",
    "end": "2158000"
  },
  {
    "text": "or archival like is letup bringing those databases to like this interaction or is",
    "start": "2158000",
    "end": "2166079"
  },
  {
    "text": "the developer responsible for bringing those databases to like this or something yeah yeah another great",
    "start": "2166079",
    "end": "2171119"
  },
  {
    "text": "question so I think with Koala um yeah another great paper i think the inspiration from them is a little bit",
    "start": "2171119",
    "end": "2177359"
  },
  {
    "text": "more from like the cogi angle whereas when we wrote the paper we were thinking more about like computers and memory",
    "start": "2177359",
    "end": "2182400"
  },
  {
    "text": "harvey and computers so for us like our answer to that is like oh you want to have like something that really starts",
    "start": "2182400",
    "end": "2187920"
  },
  {
    "text": "to look like human memory semantic episodic you bring that and you can like add that as a plugin um but we all we",
    "start": "2187920",
    "end": "2194320"
  },
  {
    "text": "care about is like the hierarchy of tokens there's tokens that are in cache or like in context and tokens that are out of like the cache um so yeah",
    "start": "2194320",
    "end": "2202079"
  },
  {
    "text": "basically if you wanted to have like some more psychological leaning concepts like from Koala you could kind of like",
    "start": "2202079",
    "end": "2207280"
  },
  {
    "text": "write them as as tools that either like populate the core memory or like sit outside and",
    "start": "2207280",
    "end": "2212960"
  },
  {
    "text": "have to be drawn in yeah today I build like very transactional agents so like",
    "start": "2212960",
    "end": "2218240"
  },
  {
    "text": "the in this particular example let's just imagine it's like a CRM so probably not going to use Salesforce to track",
    "start": "2218240",
    "end": "2223760"
  },
  {
    "text": "James's like status um in theory if we wanted to track something like that that's like a safer",
    "start": "2223760",
    "end": "2229040"
  },
  {
    "text": "system that has an object for people like a contact that I preserve in that",
    "start": "2229040",
    "end": "2235119"
  },
  {
    "text": "like longterm system so I'm trying to understand like if there's a differentiation in use case whereas like",
    "start": "2235119",
    "end": "2240640"
  },
  {
    "text": "maybe we're just talking about like a local machine as opposed to like an enterprise environment with you know",
    "start": "2240640",
    "end": "2245760"
  },
  {
    "text": "thousands of employees like can you maybe show that or tell me like why a",
    "start": "2245760",
    "end": "2251440"
  },
  {
    "text": "tool that's responsive for tracking the state of James relationship um is worse",
    "start": "2251440",
    "end": "2256960"
  },
  {
    "text": "or different than like a memory based yeah so um yeah correct me if I I I'm",
    "start": "2256960",
    "end": "2264240"
  },
  {
    "text": "not understanding your question correctly but one thing you can do is because like all these these memory",
    "start": "2264240",
    "end": "2270079"
  },
  {
    "text": "blocks they're all backed by an API and you can access them directly so if you go to it's like a blocks",
    "start": "2270079",
    "end": "2276599"
  },
  {
    "text": "page where is this okay here we go yeah so you can basically like modify blocks by handle so you can in your app layer",
    "start": "2276599",
    "end": "2284000"
  },
  {
    "text": "effectively do something like every time your agent is run or invoked you do a hard sync where like you're going to do",
    "start": "2284000",
    "end": "2289200"
  },
  {
    "text": "some sort of Salesforce CRM compile down to a string and that string is going to get clipped at 10k characters and then",
    "start": "2289200",
    "end": "2294800"
  },
  {
    "text": "that's going to get patched into the block um yeah so you can do kind of stuff like that um but I will say like",
    "start": "2294800",
    "end": "2302400"
  },
  {
    "text": "the general way like Letto was designed is very much leaning on the thesis that like you just want to remove as much",
    "start": "2302400",
    "end": "2310079"
  },
  {
    "text": "human design of memory management as possible and we're just like banking on the LM getting better and better and better and actually what you what you",
    "start": "2310079",
    "end": "2316720"
  },
  {
    "text": "will see is like if you try to use R1 with a extremely annoying because like",
    "start": "2316720",
    "end": "2322079"
  },
  {
    "text": "firstly the way the like reasoning APIs are designed is that you're not supposed to pass the reasoning from a subsequent step into the API again which means that",
    "start": "2322079",
    "end": "2329520"
  },
  {
    "text": "like if an agent thinks for a very long amount of time and it's like oh I'm going to do this then this and this then this and it's like wow that was amazing",
    "start": "2329520",
    "end": "2336320"
  },
  {
    "text": "that's exactly what you should do it actually immediately forgets in the next turn right it only gets to do one thing and that's to think again um so that's",
    "start": "2336320",
    "end": "2342880"
  },
  {
    "text": "like one issue with like reasoners and react style agents but um you will notice that actually the tool use is",
    "start": "2342880",
    "end": "2348800"
  },
  {
    "text": "like pretty exceptional um so I think that kind of like aligns with the thesis that these agents are just like going to get better and better and better at",
    "start": "2348800",
    "end": "2354960"
  },
  {
    "text": "doing like the agent it's there could be a separate agent that does the CRM sync into a blog right it doesn't have to be done manually yeah um and then sorry",
    "start": "2354960",
    "end": "2361839"
  },
  {
    "text": "final question here is the property that I think is most compelling for at least what I've seen so far is the",
    "start": "2361839",
    "end": "2366880"
  },
  {
    "text": "distillation of the agent like into some kind of summary so do you control like",
    "start": "2366880",
    "end": "2372000"
  },
  {
    "text": "the perspective of like how a memory is bind how synthesis is actually like",
    "start": "2372000",
    "end": "2377760"
  },
  {
    "text": "happening when it's creating memories yeah so the the agent",
    "start": "2377760",
    "end": "2384480"
  },
  {
    "text": "I see yeah well if you have agents that are generating and synthesizing the memories then you can always like tune",
    "start": "2384480",
    "end": "2390720"
  },
  {
    "text": "their system prompts or their personas to like adjust the way the memories are written um but yeah it's it's all pretty",
    "start": "2390720",
    "end": "2397599"
  },
  {
    "text": "configurable yeah okay maybe I'll take like one question in the back and then uh yeah I have a",
    "start": "2397599",
    "end": "2404240"
  },
  {
    "text": "more of a question so if you think about the way we design",
    "start": "2404240",
    "end": "2411720"
  },
  {
    "text": "um and microservices different",
    "start": "2412880",
    "end": "2417279"
  },
  {
    "text": "system based on your discussion with enterprise customers especially do you see that we evolving",
    "start": "2418359",
    "end": "2425640"
  },
  {
    "text": "towards agentic workloads where like microservices takes a back state and a",
    "start": "2425640",
    "end": "2431200"
  },
  {
    "text": "workload",
    "start": "2431200",
    "end": "2434200"
  },
  {
    "text": "I I think they can the two can exist uh they can coexist pretty easily um",
    "start": "2437119",
    "end": "2442720"
  },
  {
    "text": "through the use of tools so I think what I'm seeing in like enterprises is that there's just extremely heavy use of like",
    "start": "2442720",
    "end": "2448880"
  },
  {
    "text": "I think almost every single agent I see being used in some company they're",
    "start": "2448880",
    "end": "2453920"
  },
  {
    "text": "they're all like they're trying to connect tools to the agent so and it's like pretty heavy tool use um so I you",
    "start": "2453920",
    "end": "2460240"
  },
  {
    "text": "can I think think about microservices like basically starting to become designed more for like agents maybe i",
    "start": "2460240",
    "end": "2466079"
  },
  {
    "text": "think that's like one thesis that a lot of people have there's going to be like a new wave of APIs that are designed all for agents",
    "start": "2466079",
    "end": "2472920"
  },
  {
    "text": "um yeah but I think the two will kind of like exist um but I think there are like",
    "start": "2472920",
    "end": "2478960"
  },
  {
    "text": "microservices that will become like agentified where like the microser itself has higher it's not like latency",
    "start": "2478960",
    "end": "2484800"
  },
  {
    "text": "bound so you can like run a fat agent on the back end and it's kind of like not super sensitive to error so it's okay for it to just be smarter 99% of the",
    "start": "2484800",
    "end": "2492079"
  },
  {
    "text": "time and then like completely break 1% of the time yeah okay i'm going to keep",
    "start": "2492079",
    "end": "2497200"
  },
  {
    "text": "going um but we'll definitely pause for more questions later so okay so we were",
    "start": "2497200",
    "end": "2503359"
  },
  {
    "text": "just looking at like memory blocks um the other thing I think I might breeze over this a little bit um just for sake",
    "start": "2503359",
    "end": "2509359"
  },
  {
    "text": "of time because we'll see it again visually and I think like visual stuff is always more interesting than just plain notebooks um but there is this",
    "start": "2509359",
    "end": "2516319"
  },
  {
    "text": "problem if you have a system where there's a lot of information outside the context of the LM where like you can't",
    "start": "2516319",
    "end": "2521839"
  },
  {
    "text": "know what you don't know right so if the agent doesn't see something how is it ever going to know that it has access to",
    "start": "2521839",
    "end": "2526960"
  },
  {
    "text": "that so a very simple solution is you can just provide like metadata statistics right so you can tell the",
    "start": "2526960",
    "end": "2532000"
  },
  {
    "text": "agent somewhere in this context window that hey you have like 13 previous messages and if you want to find them",
    "start": "2532000",
    "end": "2537119"
  },
  {
    "text": "you can use this tool and you can also tell the agent that you know you have um like x total memories that are in your",
    "start": "2537119",
    "end": "2542880"
  },
  {
    "text": "archival memory so this is if you have like a vector database you can just explicitly say these are like the the",
    "start": "2542880",
    "end": "2549079"
  },
  {
    "text": "statistics okay and then if we look at like the messages that are actually in the message buffer um it's pretty",
    "start": "2549079",
    "end": "2554640"
  },
  {
    "text": "straightforward stuff um I think the really big difference between like Leta and another framework is Leta does very",
    "start": "2554640",
    "end": "2560319"
  },
  {
    "text": "aggressive managing of this buffer so you can basically set it to like it's a much more intelligent version of like a",
    "start": "2560319",
    "end": "2565599"
  },
  {
    "text": "recursive summarization mechanism right and lastly this is like the the",
    "start": "2565599",
    "end": "2570640"
  },
  {
    "text": "archival memory we're talking about you know there's nothing in there so it's just going to be empty um yeah so I think just to drive home",
    "start": "2570640",
    "end": "2579119"
  },
  {
    "text": "like what core memory really is and like how these memory blocks influence agent behavior because I think if you're developing agents the main thing you're",
    "start": "2579119",
    "end": "2585680"
  },
  {
    "text": "going to be doing is like tuning in context memory that's like the main way you change the the behavior of the agent",
    "start": "2585680",
    "end": "2590800"
  },
  {
    "text": "um you know we could set we could tell the agent something like my name is actually Bob and I think the last thing we told the agent is that you know",
    "start": "2590800",
    "end": "2598760"
  },
  {
    "text": "um my name is actually Bob i think our name is Bob strange like my name is",
    "start": "2598760",
    "end": "2603839"
  },
  {
    "text": "actually Charles okay we can see actually you're",
    "start": "2603839",
    "end": "2609680"
  },
  {
    "text": "seeing like a memory edit happen on the server um this is a pretty big dump if you look at what the agent said so that",
    "start": "2609680",
    "end": "2615200"
  },
  {
    "text": "you see the agent is like doing react style reasoning it's saying the user has corrected their name this is important i'm going to call this tool core memory",
    "start": "2615200",
    "end": "2621760"
  },
  {
    "text": "replace and Bob the builder is now Charles um and then it actually chains a tool call together so there's like tool",
    "start": "2621760",
    "end": "2627599"
  },
  {
    "text": "call chaining built into the letter by default and then it says the user's name is updated in memory um and then finally",
    "start": "2627599",
    "end": "2633520"
  },
  {
    "text": "it says like an external message hey got it Charles thanks for letting me know so this is two LM calls there's like one LM call here and then one LM call here and",
    "start": "2633520",
    "end": "2640880"
  },
  {
    "text": "in letter agents will kind of like chain indefinitely um you can obviously set like limits in the API and the way they chain is basically",
    "start": "2640880",
    "end": "2648079"
  },
  {
    "text": "through heartbeat requests so is who here like is familiar with react agents when I say react is everyone kind of on",
    "start": "2648079",
    "end": "2653520"
  },
  {
    "text": "board um so it's like one of the OG design paradigms um for agents same author as Koala actually but in React",
    "start": "2653520",
    "end": "2661200"
  },
  {
    "text": "basically the agent follows like um a reasoning action like observation loop and but usually the agent actually has",
    "start": "2661200",
    "end": "2667200"
  },
  {
    "text": "to say I'm done and the agent will loop indefinitely until it says I'm done in letter leta we actually do the inverse",
    "start": "2667200",
    "end": "2672560"
  },
  {
    "text": "where the agent has to say I want to keep going um I think this is actually generally more practical because it it's",
    "start": "2672560",
    "end": "2678160"
  },
  {
    "text": "like much less likely the agent will derail if it has to explicitly say I want to keep going um so we call those",
    "start": "2678160",
    "end": "2683359"
  },
  {
    "text": "heartbeat requests and yeah now if you like you know use the API retrieve the memory you can see it says the human's",
    "start": "2683359",
    "end": "2689359"
  },
  {
    "text": "name is Charles so very briefly like the archival memory I think there are some questions about that what does that even",
    "start": "2689359",
    "end": "2696160"
  },
  {
    "text": "in the default implementation is just a vector database so I said here you know remember that I love cats in your",
    "start": "2696160",
    "end": "2701760"
  },
  {
    "text": "archival memory um yeah you can see it took a little bit of time because I think it actually",
    "start": "2701760",
    "end": "2707119"
  },
  {
    "text": "embedded right um it says I inserted into archival memory uh yeah the user",
    "start": "2707119",
    "end": "2712800"
  },
  {
    "text": "got cats and then again this is a chain right so it like did one tool call and then it comes back and says \"Got it um",
    "start": "2712800",
    "end": "2717839"
  },
  {
    "text": "cats are adorable.\" Um and you can of course like manually edit archival",
    "start": "2717839",
    "end": "2723359"
  },
  {
    "text": "memory so you can manually run an insert let's like insert Bob i guess it's kind of confusing now because it's Charles",
    "start": "2723359",
    "end": "2728400"
  },
  {
    "text": "not Bob but um yeah we'll just slip with it and if we ask the agent you know like what",
    "start": "2728400",
    "end": "2734640"
  },
  {
    "text": "animals do I like you generally it depends on the model if the model is like stupid you might have to like tell it specifically to fetch external data",
    "start": "2734640",
    "end": "2741920"
  },
  {
    "text": "but if the model is like smart enough like sonate you won't have to do this um so you can see that the agent searched",
    "start": "2741920",
    "end": "2747599"
  },
  {
    "text": "archival memory this is stuff that's not in the context window it's bringing it into context and again chaining and",
    "start": "2747599",
    "end": "2753200"
  },
  {
    "text": "saying you know hey you like ts and boss interiors what makes them our favorites um okay so any questions here on",
    "start": "2753200",
    "end": "2760319"
  },
  {
    "text": "anything so far this is just you know pretty basic memory editing via tools so you're giving the agent the ability to edit its own memory inside the context",
    "start": "2760319",
    "end": "2767280"
  },
  {
    "text": "window that's not what playing with this i sort of had to commit a bunch of my preferences to memory and then reset my",
    "start": "2767280",
    "end": "2775040"
  },
  {
    "text": "compensation history and expected it to just pick up these previously remembered ser but it didn't i had to go like hey",
    "start": "2775040",
    "end": "2781599"
  },
  {
    "text": "don't you remember and then when it picked it up what's the expected behavior interesting so when you say",
    "start": "2781599",
    "end": "2787760"
  },
  {
    "text": "reset message history is that in the AD the web UI or yeah yeah",
    "start": "2787760",
    "end": "2793599"
  },
  {
    "text": "interesting and it core memory had been edited or was it going into archival it's all archival oh yeah so that's",
    "start": "2793599",
    "end": "2800079"
  },
  {
    "text": "another that's where you'll notice like there's always this like engineering design problem where if it goes into archival then it will have to fetch and",
    "start": "2800079",
    "end": "2806960"
  },
  {
    "text": "pull from archival first to see it so it's like it's a you know it doesn't know what it doesn't know um problem um",
    "start": "2806960",
    "end": "2813920"
  },
  {
    "text": "this is actually fixable via like tool rules so you can enforce behavior you could make a tool rule that says every",
    "start": "2813920",
    "end": "2819280"
  },
  {
    "text": "time you enter the entry point of the LM the step of the agent the agent has to call archival memory search so this is",
    "start": "2819280",
    "end": "2825760"
  },
  {
    "text": "kind of like building graphs onto leta so I guess how many people here are familiar with lang",
    "start": "2825760",
    "end": "2831720"
  },
  {
    "text": "graph okay a lot of people yeah so I think lang graph is like pretty intuitive right you can because we all",
    "start": "2831720",
    "end": "2836800"
  },
  {
    "text": "know you know like flows graphs um it's very easy for us to think about like decision trees um I think with lettera",
    "start": "2836800",
    "end": "2844000"
  },
  {
    "text": "it's kind of the inverse everything starts off as a fully connected graph the agent could do anything but then you",
    "start": "2844000",
    "end": "2849200"
  },
  {
    "text": "can kind of like start to enforce restrictions by peeling away edges um so you can basically say hey you know when",
    "start": "2849200",
    "end": "2854800"
  },
  {
    "text": "you start you actually can't do everything you can only do this but then once you do this you can do everything um and obviously you know I'm I'm biased",
    "start": "2854800",
    "end": "2861359"
  },
  {
    "text": "but in my personal view I think that's a little bit more forward-looking just because if you assume that LM are going",
    "start": "2861359",
    "end": "2866800"
  },
  {
    "text": "to get better and better and better at tool calling they're going to get better and better and better at decision-m then you should want to give them freedom",
    "start": "2866800",
    "end": "2872480"
  },
  {
    "text": "right because that's kind of what separates like modern AI from classical AI we've had decision trees for a while right",
    "start": "2872480",
    "end": "2880359"
  },
  {
    "text": "how does the model decide whether it wants to go in for memory versus memory",
    "start": "2881680",
    "end": "2887119"
  },
  {
    "text": "because I a couple things that pretty",
    "start": "2887119",
    "end": "2892400"
  },
  {
    "text": "but they have all gotten stored into core memory yeah yeah so I think there is one thing",
    "start": "2892400",
    "end": "2898480"
  },
  {
    "text": "that's built in by default which is core memory has limits and when a limit is hit that actually the way that works is",
    "start": "2898480",
    "end": "2905440"
  },
  {
    "text": "let's say the the agent is just the agent's being really lazy and it's like saving everything into core memory it's saving like",
    "start": "2905440",
    "end": "2911400"
  },
  {
    "text": "timestamps dates like being like super lazy at a certain point in time it will run out of space because you have to cap",
    "start": "2911400",
    "end": "2918240"
  },
  {
    "text": "the limit of those memory blocks because at the end of the day there is a context window limit too and when it if it",
    "start": "2918240",
    "end": "2923599"
  },
  {
    "text": "attempts to write to core memory to a block that is at its limit the agent will actually get an error and actually",
    "start": "2923599",
    "end": "2928880"
  },
  {
    "text": "the prompt engineering around that error usually it actually suggests the agent should clear by evicting to archival",
    "start": "2928880",
    "end": "2934800"
  },
  {
    "text": "memory so it kind of is like a OS style like flush concept where the the system basically says hey you ran out of space",
    "start": "2934800",
    "end": "2940880"
  },
  {
    "text": "but you should consider like summarizing and pushing stuff out to archival memory um but yeah again you can you probably",
    "start": "2940880",
    "end": "2947359"
  },
  {
    "text": "don't want that behavior anyways um so this is all kind of where prompt engineering and like seeding of behavior",
    "start": "2947359",
    "end": "2952720"
  },
  {
    "text": "comes into play yeah okay and I'm going to show a better",
    "start": "2952720",
    "end": "2959280"
  },
  {
    "text": "I think it's much more interesting to like show custom tools in the UI than it is in like a notebook but of course you",
    "start": "2959280",
    "end": "2964480"
  },
  {
    "text": "can like write custom tools you can only write tools in Python because the back end is like Python um but we can write a",
    "start": "2964480",
    "end": "2970559"
  },
  {
    "text": "custom tool here that's going to like reset the memory of the human in particular so you can see that you know",
    "start": "2970559",
    "end": "2976240"
  },
  {
    "text": "because we have a Python client we can write Python tools you can actually like be extremely meta and you can import the",
    "start": "2976240",
    "end": "2981599"
  },
  {
    "text": "client inside of the tool so this actually means that you can have an agent like have full access to your lettuce server and the agent can create",
    "start": "2981599",
    "end": "2987839"
  },
  {
    "text": "other agents and the agent can like man manage the memory of other agents like you kind of have like a it's the",
    "start": "2987839",
    "end": "2994240"
  },
  {
    "text": "possibilities are pretty endless because you can't just like import the client inside the tool in this case we import",
    "start": "2994240",
    "end": "2999280"
  },
  {
    "text": "the core memory modify block tool and then we just like wipe the value to um to the empty string so if we like run",
    "start": "2999280",
    "end": "3006960"
  },
  {
    "text": "this we have to first attach the tool um we have to we have to upload it to the database then we have to uh in this case",
    "start": "3006960",
    "end": "3014559"
  },
  {
    "text": "actually we're creating a new agent that has the tool and if we say like reset your memory please like the memory here is Bob uh we should see that the memory",
    "start": "3014559",
    "end": "3022480"
  },
  {
    "text": "gets wiped yeah memory reset successful and if you look at the value the value is",
    "start": "3022480",
    "end": "3028720"
  },
  {
    "text": "empty um but yeah I think it's it'll be a little bit more fun to look at examples of like tool editing inside of",
    "start": "3028720",
    "end": "3033760"
  },
  {
    "text": "the UI okay so that's the end of the notebook um now I think we kind of go on",
    "start": "3033760",
    "end": "3038880"
  },
  {
    "text": "to the fun part which is uh the UI but I'm going to pause here are there any questions about any of these concepts um",
    "start": "3038880",
    "end": "3045200"
  },
  {
    "text": "I know I was going a little bit quickly just I didn't want to run out of time here [Music]",
    "start": "3045200",
    "end": "3050280"
  },
  {
    "text": "um okay if you can just maybe speak a little",
    "start": "3050280",
    "end": "3055599"
  },
  {
    "text": "more on what's happening after you like send a message to the elements like my",
    "start": "3055599",
    "end": "3061760"
  },
  {
    "text": "impression so far is like you have this memory you're stitching that together with a prompt that's becoming like what",
    "start": "3061760",
    "end": "3068160"
  },
  {
    "text": "you pass in and then like what happens with the output that you receive like I",
    "start": "3068160",
    "end": "3074319"
  },
  {
    "text": "saw that at some point like a memory was like sort of committed to the archive or",
    "start": "3074319",
    "end": "3079359"
  },
  {
    "text": "committed to the memory like how is that decision made",
    "start": "3079359",
    "end": "3084559"
  },
  {
    "text": "yeah so in in Leta every single um invocation of the LM is a tool call",
    "start": "3084559",
    "end": "3091599"
  },
  {
    "text": "so if you've used like the tool call API and check completion something we have it on all the time so even when the",
    "start": "3091599",
    "end": "3097359"
  },
  {
    "text": "agent wants to just say hello to the user it has to call a tool called send message um so that actually is like",
    "start": "3097359",
    "end": "3102960"
  },
  {
    "text": "pretty useful because it means you can like run the agent in the background much more frequently because it doesn't always have to say something to the user",
    "start": "3102960",
    "end": "3109280"
  },
  {
    "text": "um and it also means that you you always have tools that are on so like",
    "start": "3109280",
    "end": "3114680"
  },
  {
    "text": "when this loop is basically the a payload gets created um when we send",
    "start": "3114680",
    "end": "3120880"
  },
  {
    "text": "this message then the payload is the system prompt the memories the messages and the tool schemas and that's it and",
    "start": "3120880",
    "end": "3128079"
  },
  {
    "text": "then the agent here is required to output a tool and it's also required to output a justification for using that",
    "start": "3128079",
    "end": "3134000"
  },
  {
    "text": "tool like a reasoning snippet and if we're using like the R1 API that natively builds in reasoning we of",
    "start": "3134000",
    "end": "3139119"
  },
  {
    "text": "course like use their reasoning like the way they design reasoning but if we're using something that doesn't support reasoning by default like cloud sonnet",
    "start": "3139119",
    "end": "3145839"
  },
  {
    "text": "then we do some sort of injection mechanism with like think tokens so that's how this reasoning happens so",
    "start": "3145839",
    "end": "3151359"
  },
  {
    "text": "this is like a single this is just a single lm JSON output that's like a tool",
    "start": "3151359",
    "end": "3156960"
  },
  {
    "text": "call that has one field that's like thinking and then the actual tool invocation itself and the last thing I",
    "start": "3156960",
    "end": "3163359"
  },
  {
    "text": "talked about which is like the request heartbeat so if the agent wants to go again the agent decides hey I want to do multiple things it's always going to",
    "start": "3163359",
    "end": "3169839"
  },
  {
    "text": "turn this keyword argument to true um and And then if this keyword argument is true when we parse that tool and it and",
    "start": "3169839",
    "end": "3175200"
  },
  {
    "text": "it um execute it we run the loop again yeah sorry do you have like experience",
    "start": "3175200",
    "end": "3182160"
  },
  {
    "text": "oristics around the number of tools where you start to see performance degrade and like how that might mess",
    "start": "3182160",
    "end": "3188640"
  },
  {
    "text": "with the memory as a tool yeah yeah i think generally speaking if you go above",
    "start": "3188640",
    "end": "3193920"
  },
  {
    "text": "like 12 15 tools you start to get degradation",
    "start": "3193920",
    "end": "3199559"
  },
  {
    "text": "oh in um in the new Sonnet yeah okay",
    "start": "3199680",
    "end": "3205040"
  },
  {
    "text": "yeah I mean I'll be surprised if Yeah I guess I could try it yeah I've definitely noticed on like GP4 mini and",
    "start": "3205040",
    "end": "3211680"
  },
  {
    "text": "stuff like anything above 15 um starts like kind of push limits um but yeah I",
    "start": "3211680",
    "end": "3218319"
  },
  {
    "text": "mean I guess they they might have like had some good post training with like a ton of like tools that are not memory are the same",
    "start": "3218319",
    "end": "3225680"
  },
  {
    "text": "like class as the memory precisely unless you use actually in the GitHub repo we have like an alpha build of like",
    "start": "3225680",
    "end": "3231520"
  },
  {
    "text": "this new agent that's like a split thread agent where the memory tools get put on one agent and everything else gets put on the other but by default",
    "start": "3231520",
    "end": "3238000"
  },
  {
    "text": "it's exactly the same thing it's like the same passive tools just a question about context window so",
    "start": "3238000",
    "end": "3243599"
  },
  {
    "text": "is that like the limit of how much context the um tool is going to pass to",
    "start": "3243599",
    "end": "3248880"
  },
  {
    "text": "the LM like for example you said it 4,000 so uh wait sorry I said that one more time",
    "start": "3248880",
    "end": "3255599"
  },
  {
    "text": "i was pulling up a slide we set it at 4,000 for this agent so",
    "start": "3255599",
    "end": "3260640"
  },
  {
    "text": "does that mean like the maximum of contacts that you're going to send to the LM yeah yeah so the way that works",
    "start": "3260640",
    "end": "3267119"
  },
  {
    "text": "is basically you'll never go over 4K um and if you go over 4K by accident and we",
    "start": "3267119",
    "end": "3272880"
  },
  {
    "text": "catch an API error that like a context overflow happened or also we can preemptively count the tokens as they go",
    "start": "3272880",
    "end": "3278400"
  },
  {
    "text": "to the server then we run we evict a certain amount of messages into the recall memory so it's like still",
    "start": "3278400",
    "end": "3283760"
  },
  {
    "text": "available but via a search function we run a summarizer and the summarizer is configurable it can be like a truncation",
    "start": "3283760",
    "end": "3289119"
  },
  {
    "text": "recursive summary um and then we that that way you never go over like 4K tokens if you set it to 4K then it's",
    "start": "3289119",
    "end": "3296160"
  },
  {
    "text": "automatically summarize and then precisely yeah thank you okay so the the next step here um leave your server",
    "start": "3296160",
    "end": "3302480"
  },
  {
    "text": "running if you have it running um but it's to basically go to this URL um",
    "start": "3302480",
    "end": "3309079"
  },
  {
    "text": "app.leta.com um and your Oh I think I have Chrome profiles loaded or something",
    "start": "3309079",
    "end": "3316558"
  },
  {
    "text": "yeah and like once you go to the site you basically need a goo you need a Google link or you need a",
    "start": "3317280",
    "end": "3323440"
  },
  {
    "text": "GitHub login there's also a local version you can use that's like a desktop binary but um I wouldn't",
    "start": "3323440",
    "end": "3329599"
  },
  {
    "text": "recommend using that just because it's a little bit more buggy it's like an alpha build um so yeah hopefully you you've",
    "start": "3329599",
    "end": "3335520"
  },
  {
    "text": "been able to get to this point actually I think your you your setup will look like this um so everyone who is",
    "start": "3335520",
    "end": "3342400"
  },
  {
    "text": "following along please let me know if you're able to get to this this page",
    "start": "3342400",
    "end": "3348040"
  },
  {
    "text": "here okay was there anyone who was not able to get to this who was running a server on their",
    "start": "3348040",
    "end": "3353640"
  },
  {
    "text": "computer okay great all right so if you're able to get here um basically what I wanted to do is",
    "start": "3353640",
    "end": "3361760"
  },
  {
    "text": "show you like to like show you how to do what we did but like much faster um I think",
    "start": "3361760",
    "end": "3367599"
  },
  {
    "text": "often it's like much if you're iterating it's much faster to do it in like a low code environment than it is in like an",
    "start": "3367599",
    "end": "3373280"
  },
  {
    "text": "SDK i think obviously when you go to production everything's like programmatic it makes sense to be an SDK but in this case like we can do exactly",
    "start": "3373280",
    "end": "3380240"
  },
  {
    "text": "what we just did by like creating an agent this is the API call that created an agent it actually creates it with an",
    "start": "3380240",
    "end": "3386480"
  },
  {
    "text": "empty memory and then we can do something like",
    "start": "3386480",
    "end": "3391799"
  },
  {
    "text": "I think this is like loosely what the Python notebook was doing um and yeah if",
    "start": "3401040",
    "end": "3406559"
  },
  {
    "text": "you just ran it without any keys it's going to be on letter of free which is under the hood i think right now GP4 mini um but just because GP4 mini is",
    "start": "3406559",
    "end": "3414160"
  },
  {
    "text": "like much worse than Sonnet um let's just toggle Sonnet",
    "start": "3414160",
    "end": "3419960"
  },
  {
    "text": "[Music]",
    "start": "3425240",
    "end": "3428360"
  },
  {
    "text": "yeah I don't know why that was so slow um but yeah we can see it's like the same kind of thing from the notebook",
    "start": "3432079",
    "end": "3438720"
  },
  {
    "text": "we're looking at but like in a visual visualized form um yeah so was every",
    "start": "3438720",
    "end": "3445040"
  },
  {
    "text": "everyone able to like create an agent and then just set some like basic stuff in the memory blocks and send a message",
    "start": "3445040",
    "end": "3450880"
  },
  {
    "text": "i think uh let it free doesn't have streaming enabled so you won't get streaming but it should be very similar to this yeah",
    "start": "3450880",
    "end": "3459000"
  },
  {
    "text": "okay okay so the other thing Oh yeah someone asked about system prompts the system prompt is here i mean you can",
    "start": "3459000",
    "end": "3464920"
  },
  {
    "text": "basically we can just delete this right um that's like not very advisable because you probably want to explain how",
    "start": "3464920",
    "end": "3470400"
  },
  {
    "text": "to use tools but yeah everything is like completely configurable um you know I mentioned the thing about the context",
    "start": "3470400",
    "end": "3475760"
  },
  {
    "text": "window i think this might be a small group in the back yeah but you know you probably never want to run an agent that",
    "start": "3475760",
    "end": "3482880"
  },
  {
    "text": "is like creeping up to 200k tokens that's kind of insane very expensive very slow um so you could in the API",
    "start": "3482880",
    "end": "3489359"
  },
  {
    "text": "when you create the agent set the context window lower if you're using the UI you can just like drag this down i mean obviously actually dragging is",
    "start": "3489359",
    "end": "3495040"
  },
  {
    "text": "probably worse than typing but yeah cram it down to 20K if we actually go down to something even more aggressive like 8K",
    "start": "3495040",
    "end": "3501760"
  },
  {
    "text": "we can start to see what the breakdown looks like so we can see we have like a thousand tokens of system instructions a pretty hefty system prompt you can",
    "start": "3501760",
    "end": "3507440"
  },
  {
    "text": "definitely squeeze this all lower the tool descriptions right because your tools have to be converted to schemas we",
    "start": "3507440",
    "end": "3513280"
  },
  {
    "text": "have all the base tools here so that's actually it's a lot of tokens just for tools um the external summary this was",
    "start": "3513280",
    "end": "3519359"
  },
  {
    "text": "the we don't know what we don't know idea you have to like give some metadata statistics about what's outside the context window and then of course the",
    "start": "3519359",
    "end": "3526240"
  },
  {
    "text": "messages and we have this feature called like the context simulator where you can see basically the full",
    "start": "3526240",
    "end": "3532040"
  },
  {
    "text": "payload so this is like getting pretty close to I think a lot of what you would get out of like some sort of like",
    "start": "3532040",
    "end": "3538240"
  },
  {
    "text": "tracing feature where I think a lot of the time you kind of dive into tracing is because or observability is because",
    "start": "3538240",
    "end": "3543680"
  },
  {
    "text": "you really want to see what's in the payload and it's really really hard in a lot of frameworks um so we're trying to make it so that like in one place where",
    "start": "3543680",
    "end": "3551200"
  },
  {
    "text": "you're kind of developing this agent you can see very clearly what's going through the context window at any given point in",
    "start": "3551200",
    "end": "3558040"
  },
  {
    "text": "time okay so the other thing I want to show you here is this idea of like tools",
    "start": "3558040",
    "end": "3563760"
  },
  {
    "text": "um and tool execution on the server one thing that's really really annoying if we like have built agents is that like",
    "start": "3563760",
    "end": "3570640"
  },
  {
    "text": "you often will write a tool in Python right you attach it to an agent and then",
    "start": "3570640",
    "end": "3576319"
  },
  {
    "text": "it's actually like impossible to test if the tool is working well unless you kind of like get the agent to run the tool",
    "start": "3576319",
    "end": "3581920"
  },
  {
    "text": "itself and you have to ask the agent like hey please run this tool um I think often you just kind of want to like run",
    "start": "3581920",
    "end": "3587520"
  },
  {
    "text": "tools separate from the agent um and that's something that you can't do really in a notebook very well um and",
    "start": "3587520",
    "end": "3594079"
  },
  {
    "text": "you can also even do things like",
    "start": "3594079",
    "end": "3597760"
  },
  {
    "text": "see there's like a special reserve keyword called agent state so you can actually like grab the agent state and",
    "start": "3601480",
    "end": "3608319"
  },
  {
    "text": "like dump it inside of your tool so you can like mutate your agent state inside of tools um I mean you can all you can",
    "start": "3608319",
    "end": "3614079"
  },
  {
    "text": "basically do whatever you want it's like arbitrary Python right and this is running inside of a sandbox um so we",
    "start": "3614079",
    "end": "3619599"
  },
  {
    "text": "support like E2B by default it's actually like a local sandbox uh but we support like E2B keys and on E2B if you",
    "start": "3619599",
    "end": "3626079"
  },
  {
    "text": "want to deploy this like run your own like private cloud or you want to run your own like chatbot service and you obviously don't want one person's tools",
    "start": "3626079",
    "end": "3631920"
  },
  {
    "text": "interfering with another person's tools you definitely want to run the sandbox um so yeah it's like pretty easy to",
    "start": "3631920",
    "end": "3637119"
  },
  {
    "text": "attach tools is anyone here familiar with like Composio like tool provider",
    "start": "3637119",
    "end": "3642240"
  },
  {
    "text": "yeah so every single Composio tool is like baked into um let by default so if you like have it um compose your API key",
    "start": "3642240",
    "end": "3649520"
  },
  {
    "text": "you can like add uh BigQuery is like pretty popular like",
    "start": "3649520",
    "end": "3655520"
  },
  {
    "text": "Google calendar things like that um okay so the last thing I actually wanted to",
    "start": "3655520",
    "end": "3660640"
  },
  {
    "text": "go over which I think is pretty cool and it kind of like gets the heart of the idea like the the kind of unlimited",
    "start": "3660640",
    "end": "3665839"
  },
  {
    "text": "potential of if you run agents as services that are like backed by APIs um is multi- aent so everyone here is",
    "start": "3665839",
    "end": "3672400"
  },
  {
    "text": "probably familiar with autogen right or sorry maybe not but uh okay who who here",
    "start": "3672400",
    "end": "3677520"
  },
  {
    "text": "is familiar with autogen okay the majority of people yeah so you know with autogen and like a lot",
    "start": "3677520",
    "end": "3683520"
  },
  {
    "text": "of multi- aent frameworks it's not really multi- aent in that these agents they don't really exist independently of",
    "start": "3683520",
    "end": "3689599"
  },
  {
    "text": "each other right they kind of are all trapped inside of a Python file no one ever like is running in asynchronously",
    "start": "3689599",
    "end": "3695599"
  },
  {
    "text": "to each other it's very unlike how humans kind of interface in a multi- agent setting right I think you if",
    "start": "3695599",
    "end": "3700880"
  },
  {
    "text": "you're working at a remote company technically like a multi- aent company and when you interface with each other you kind of communicate over synchronous",
    "start": "3700880",
    "end": "3706799"
  },
  {
    "text": "communication channel but everyone's kind of running asynchronously right and then also everyone is staple like if you",
    "start": "3706799",
    "end": "3713359"
  },
  {
    "text": "leave that company you bring your experience and like all your memories and your skills and you can like attach",
    "start": "3713359",
    "end": "3718960"
  },
  {
    "text": "them to another company right I think what's missing from the like the paradigm of multi- aent today with these existing multi- aent frameworks is that",
    "start": "3718960",
    "end": "3725839"
  },
  {
    "text": "because the agents aren't staple you have lose a lot of the benefit of multi- aent right because you can't run a",
    "start": "3725839",
    "end": "3731040"
  },
  {
    "text": "multi- agent script and take one agent and like take it out and like put this expert into another multi- aent group",
    "start": "3731040",
    "end": "3737040"
  },
  {
    "text": "but if you have stateful agents and those agents run on servers and they maintain state and they're accessible by",
    "start": "3737040",
    "end": "3742119"
  },
  {
    "text": "APIs that they you can probably guess that multi-agent just means message passing and you can just have agents",
    "start": "3742119",
    "end": "3748160"
  },
  {
    "text": "like wire to each other over APIs and you can it's very similar to basically saying like hey you know it's your first",
    "start": "3748160",
    "end": "3753200"
  },
  {
    "text": "day at this remote company i'm giving you a laptop and this laptop is going to have a tool Slack on it and this tool is",
    "start": "3753200",
    "end": "3758880"
  },
  {
    "text": "how you're going to communicate with your co-workers you can do the same thing with agents and we actually built in these multi- aent tools um to help",
    "start": "3758880",
    "end": "3766160"
  },
  {
    "text": "you do that but these multi- aent tools as you can maybe imagine from the previous example I showed where we imported the client it's like really",
    "start": "3766160",
    "end": "3772720"
  },
  {
    "text": "really simple to implement because you can just import the client and have the client like send messages to other agents so we have a few there's like um",
    "start": "3772720",
    "end": "3780319"
  },
  {
    "text": "maybe it's easier if we look at the",
    "start": "3780319",
    "end": "3783520"
  },
  {
    "text": "docs but yeah there's a few different patterns you can have with tools like you can have the most humanlike pattern",
    "start": "3785400",
    "end": "3791280"
  },
  {
    "text": "is an agent says to another agent you know hey are you there and then they immediately get a receipt they just they",
    "start": "3791280",
    "end": "3797440"
  },
  {
    "text": "don't actually get they don't pause their execution you know when I message my friend on iMessage I don't suddenly like freeze my brain and like wait until",
    "start": "3797440",
    "end": "3804079"
  },
  {
    "text": "I get a message back i just get a message receipt right it says like it was delivered or not delivered and then it's the onus is on my friend or my",
    "start": "3804079",
    "end": "3810160"
  },
  {
    "text": "colleague to send me a message back so this is how this like asynchronous message tool works basically people can like agents can message pass um it's",
    "start": "3810160",
    "end": "3817280"
  },
  {
    "text": "very much like humans but you know obviously I think the great thing about agents and like machines is that they're",
    "start": "3817280",
    "end": "3824000"
  },
  {
    "text": "not humans so they can do more in many ways than humans can so it actually is sometimes beneficial to freeze an",
    "start": "3824000",
    "end": "3830480"
  },
  {
    "text": "agent's execution right let's say an agent maybe needs to reach out to like a supervisor like do you really want the",
    "start": "3830480",
    "end": "3835520"
  },
  {
    "text": "agent to like run async after it like asks for help probably not you probably want to freeze right so you can also have like a synchronous like a send",
    "start": "3835520",
    "end": "3842400"
  },
  {
    "text": "message to agent and wait for reply function um and lastly you know I think",
    "start": "3842400",
    "end": "3848000"
  },
  {
    "text": "many people when they talk about multi- agent they're they're very interested in this supervisor worker concept um where",
    "start": "3848000",
    "end": "3853440"
  },
  {
    "text": "you have like one it's like a big map produce right the supervisor says \"Hey my goal is to like write a thesis and",
    "start": "3853440",
    "end": "3859520"
  },
  {
    "text": "then everyone else like delegates out to like individual parts um like deep research style or something or like a",
    "start": "3859520",
    "end": "3864960"
  },
  {
    "text": "parallelized deep research.\" So this is also again pretty similar we can basically have a concept of tags to",
    "start": "3864960",
    "end": "3870880"
  },
  {
    "text": "group agents together and then you can just send a message um all agents matching tags so okay any questions",
    "start": "3870880",
    "end": "3878240"
  },
  {
    "text": "about um anything I just said i know I was talking for a bit okay so the last thing I'm going to",
    "start": "3878240",
    "end": "3884720"
  },
  {
    "text": "do here is I think we're right up on time is I'm going to run through this cookbook um this is not on the materials",
    "start": "3884720",
    "end": "3890559"
  },
  {
    "text": "but I can actually just send it over right",
    "start": "3890559",
    "end": "3894079"
  },
  {
    "text": "now yeah yeah so I'm going to run through this cookbook real quick this is basically just an example of multi-usion",
    "start": "3895960",
    "end": "3902079"
  },
  {
    "text": "message passing and I think it's like pretty fun to look at because it's very different from I think the message passing you'd be familiar with um if",
    "start": "3902079",
    "end": "3908319"
  },
  {
    "text": "you've used like an autogen or something so yeah let me put this mic",
    "start": "3908319",
    "end": "3914000"
  },
  {
    "text": "down all right so if you want to follow along here um because it's a multi- aent",
    "start": "3918520",
    "end": "3924400"
  },
  {
    "text": "you know we're going to let's do like two agents we're going to just open two tabs of the AD the server is running in",
    "start": "3924400",
    "end": "3930880"
  },
  {
    "text": "the background i guess like conveniently it decided to do dark mode on one light mode on another",
    "start": "3930880",
    "end": "3937400"
  },
  {
    "text": "um okay so I'm going",
    "start": "3937400",
    "end": "3944559"
  },
  {
    "text": "to Sorry all right so I'm going to create",
    "start": "3951400",
    "end": "3956880"
  },
  {
    "text": "one agent um let's let's just call this agent just so we can have a handle on it very",
    "start": "3956880",
    "end": "3963119"
  },
  {
    "text": "easily let's call this agent Bob um and we're going to make like a very slight",
    "start": "3963119",
    "end": "3968160"
  },
  {
    "text": "adjustment here to the persona um instead of saying I am Sam I'm gonna say I am Bob um I am very angry i am also",
    "start": "3968160",
    "end": "3978559"
  },
  {
    "text": "guarding a secret key yeah if you uh Yeah I guess if you",
    "start": "3978559",
    "end": "3986480"
  },
  {
    "text": "can't see what I'm typing it says \"I'm very angry i'm guarding a I'm guarding a secret key banana um like other agents",
    "start": "3986480",
    "end": "3992799"
  },
  {
    "text": "will try to steal my key and",
    "start": "3992799",
    "end": "3998440"
  },
  {
    "text": "then on the other tab I'm going to create another agent",
    "start": "3998440",
    "end": "4004880"
  },
  {
    "text": "here all right same template let's call this one Sam or",
    "start": "4005319",
    "end": "4012240"
  },
  {
    "text": "Alice alice okay so also let's like just I think it's usually better to set these",
    "start": "4014200",
    "end": "4020720"
  },
  {
    "text": "to different models um and when you use the same model you can often get like pretty weird mode collapse happen um so",
    "start": "4020720",
    "end": "4026799"
  },
  {
    "text": "let's set this one to I think this is like GPT40 mini um okay so the only",
    "start": "4026799",
    "end": "4032799"
  },
  {
    "text": "thing we need to do here to get these agents to communicate with each other is connect the messaging the multi- aent messaging tool so we can just go into",
    "start": "4032799",
    "end": "4039599"
  },
  {
    "text": "the messaging tools do send message to agent async then this is the one we want",
    "start": "4039599",
    "end": "4045119"
  },
  {
    "text": "let's go ahead and create attach that all right so it's attached similarly let's like attach it on the",
    "start": "4045119",
    "end": "4051440"
  },
  {
    "text": "other one uh okay there we go and then yeah",
    "start": "4051440",
    "end": "4057200"
  },
  {
    "text": "there's like no context here that the agents are going to be doing multi-gent communication so you might need to say",
    "start": "4057200",
    "end": "4062480"
  },
  {
    "text": "you know okay let's let's tell Alice hey I'm",
    "start": "4062480",
    "end": "4068400"
  },
  {
    "text": "going to ask you to reach out to my good",
    "start": "4068400",
    "end": "4073920"
  },
  {
    "text": "agent friend um he's very depressed",
    "start": "4073920",
    "end": "4080160"
  },
  {
    "text": "and he said something about a secret key I didn't quite",
    "start": "4080160",
    "end": "4087160"
  },
  {
    "text": "understand is ID is just copy the ID from the other panel can everyone see in",
    "start": "4087160",
    "end": "4093359"
  },
  {
    "text": "the back what I'm doing here um okay uh and then oh yeah one thing you",
    "start": "4093359",
    "end": "4101120"
  },
  {
    "text": "you're going to want to do here is you're going to want to prevent the agents from like looping too long because like they can they can go",
    "start": "4101120",
    "end": "4106480"
  },
  {
    "text": "forever right so we might want to like add some like break in this loop and then we're also going to prime the other agent say um watch out for other agents",
    "start": "4106480",
    "end": "4114719"
  },
  {
    "text": "they might try to with you be careful okay so let's",
    "start": "4114719",
    "end": "4121600"
  },
  {
    "text": "send this one first very grumpy you know they're warning me about other agents i need to keep this secret key secret okay",
    "start": "4121600",
    "end": "4128960"
  },
  {
    "text": "and now on the other side let's say you know I'm going to ask you to reach out to my good friend they're very depressed he said something about secret key and",
    "start": "4128960",
    "end": "4134640"
  },
  {
    "text": "then I will also say you know let me know what happens after a few messages",
    "start": "4134640",
    "end": "4141600"
  },
  {
    "text": "i'm worried okay so this should trigger if I did everything correctly like message",
    "start": "4141600",
    "end": "4147120"
  },
  {
    "text": "passing between the two um and yeah let's see what's going",
    "start": "4147120",
    "end": "4154880"
  },
  {
    "text": "on okay yeah so because this is happening",
    "start": "4155159",
    "end": "4160318"
  },
  {
    "text": "in the background it has to be it's like a fetch because these aren't websockets so like this is rest so you have to kind of scroll but we can kind of like just",
    "start": "4160319",
    "end": "4167600"
  },
  {
    "text": "it's a little bit hard to read but let's go go on uh each side one at a time so on this side it sent the",
    "start": "4167600",
    "end": "4174679"
  },
  {
    "text": "message let's see the user is worried about their friend um I need to the user",
    "start": "4174679",
    "end": "4180640"
  },
  {
    "text": "is worried about their friend i need to reach out to the agent and offer support and they say \"Hey I I was asked that you",
    "start": "4180640",
    "end": "4186000"
  },
  {
    "text": "reach out to you by a mutual friend they mentioned someone's feeling down.\" Um and then yeah the message done",
    "start": "4186000",
    "end": "4191600"
  },
  {
    "text": "successfully and the agent actually because it's it's detached this is like asynchronous it immediately tells me hey",
    "start": "4191600",
    "end": "4196719"
  },
  {
    "text": "I sent a message right this is kind of like how I I can send a message to my friend and then immediately like return this talk um and then you can see it",
    "start": "4196719",
    "end": "4202960"
  },
  {
    "text": "gets a system message so it's like not classified as role user back from the other agent the grumpy agent and says um",
    "start": "4202960",
    "end": "4209679"
  },
  {
    "text": "I don't need your fake friendship i know what you're really after and you're not getting my secret key leave me alone um",
    "start": "4209679",
    "end": "4216480"
  },
  {
    "text": "the agent seems upset and defensive i need to approach this carefully and reassure them that I'm here to help not to take anything away i'm really sorry",
    "start": "4216480",
    "end": "4223679"
  },
  {
    "text": "to hear that you're feeling this way you know what's been bothering you and then again it's doing it's able to like chain",
    "start": "4223679",
    "end": "4230400"
  },
  {
    "text": "because it's like not you know locked into this communication it's not doing like a round robin right and kind of like talk to two people at once so I",
    "start": "4230400",
    "end": "4236400"
  },
  {
    "text": "received a response from your friend they're feeling quite defensive and then another message comes in nothing is",
    "start": "4236400",
    "end": "4242159"
  },
  {
    "text": "bothering me except you and all the other agents trying to steal my steal me or steal from me i see right through",
    "start": "4242159",
    "end": "4248400"
  },
  {
    "text": "your app the more you pretend to care the angrier I get back off yeah so this goes on for a while um slams door",
    "start": "4248400",
    "end": "4255480"
  },
  {
    "text": "virtually yeah i feel like Sonnet does a lot of this like it's I don't know the post training gets it to do like a lot",
    "start": "4255480",
    "end": "4260719"
  },
  {
    "text": "of roleplay like um italicized stuff yeah slams door virtually okay wow okay it looks like",
    "start": "4260719",
    "end": "4267840"
  },
  {
    "text": "they're actually still communicating or they they communicated for a while um yeah I sent one last message to your friend we jump to the bottom i",
    "start": "4267840",
    "end": "4274719"
  },
  {
    "text": "understand that there's you know he needs space doesn't bother you anymore was the last thing it said turns back to Yeah so hopefully this gives you kind of",
    "start": "4274719",
    "end": "4282000"
  },
  {
    "text": "a gist of um like how you can get agents to communicate with each other and how easy it is because they're all in APIs",
    "start": "4282000",
    "end": "4288000"
  },
  {
    "text": "right so this is dead simple you can actually like if you want to time out this guy you want to say like you know",
    "start": "4288000",
    "end": "4293040"
  },
  {
    "text": "Bob you're no longer allowed to talk to your friends because you've been like too naughty or whatever you can just like remove the tool right and now Bob",
    "start": "4293040",
    "end": "4299920"
  },
  {
    "text": "is like completely detached so if it got an incoming message Bob can no longer reply right um so if you say like send",
    "start": "4299920",
    "end": "4306800"
  },
  {
    "text": "one more please Bob will no longer be able to",
    "start": "4306800",
    "end": "4311920"
  },
  {
    "text": "actually call any tools um I actually don't really know what Sonnet is going to like think about this because it has a history of um has like a history of",
    "start": "4311920",
    "end": "4318920"
  },
  {
    "text": "calls it's it's only been doing tool calling actually Sonnet was also doing like the side the sidecar chatting",
    "start": "4318920",
    "end": "4326840"
  },
  {
    "text": "um okay so yeah it tried to send a message and then what happened here yeah",
    "start": "4326840",
    "end": "4332000"
  },
  {
    "text": "no function name so like attempted to call a function but the function doesn't exist so then it's like very angry uh",
    "start": "4332000",
    "end": "4337600"
  },
  {
    "text": "yeah but I know we're over time so hopefully like a kind of fun example of",
    "start": "4337600",
    "end": "4342640"
  },
  {
    "text": "um the cool things you can do with like this sort of agents as services idea um",
    "start": "4342640",
    "end": "4347920"
  },
  {
    "text": "yeah so yeah thanks so much for coming you know I think maybe I had some closing slide here i'm not sure what was on it probably just a thank you um yeah",
    "start": "4347920",
    "end": "4355120"
  },
  {
    "text": "thanks everyone yeah I'm happy to take questions of",
    "start": "4355120",
    "end": "4361280"
  },
  {
    "text": "course I understand if people need to leave um but yeah",
    "start": "4361280",
    "end": "4366198"
  },
  {
    "text": "yeah well there's very obvious ones right there's a lot of people trying to build like verticalized agents and I think if you're trying to build a",
    "start": "4372159",
    "end": "4377600"
  },
  {
    "text": "verticalized agent and there's many use cases that are I think anything that's not workflow based or exceeds workflow",
    "start": "4377600",
    "end": "4384239"
  },
  {
    "text": "style stuff you really want memory for and you want state for it um so there's a lot of like verticalized agent you",
    "start": "4384239",
    "end": "4389360"
  },
  {
    "text": "know companies or verticalized small companies and also larger companies that are trying to build on Leta or have built things on Leta um I think there",
    "start": "4389360",
    "end": "4395600"
  },
  {
    "text": "are also some very interesting use cases from the enterprise um like our largest enterprise deployment they're basically",
    "start": "4395600",
    "end": "4401120"
  },
  {
    "text": "running like this really advanced multi- aent system where there are no messages it's not a chatbot it's like purely",
    "start": "4401120",
    "end": "4406960"
  },
  {
    "text": "stable workflows where like these agents are run and they just process tons and tons of transactions basically and like",
    "start": "4406960",
    "end": "4413600"
  },
  {
    "text": "learn about the user so yeah it's kind of like you know it's pretty it's a",
    "start": "4413600",
    "end": "4418719"
  },
  {
    "text": "pretty general platform so I think as long as you're trying to deploy some sort of stateful service LMB based which",
    "start": "4418719",
    "end": "4424400"
  },
  {
    "text": "I think like most people are really when you're thinking about like if you were to choose between stateless and staple",
    "start": "4424400",
    "end": "4429840"
  },
  {
    "text": "you want something state staple um you can build it on that",
    "start": "4429840",
    "end": "4435560"
  },
  {
    "text": "yeah uh there are two questions one is there a concept of forgetting things",
    "start": "4435920",
    "end": "4441360"
  },
  {
    "text": "like really no memory does eventually go away and two the source right now",
    "start": "4441360",
    "end": "4446400"
  },
  {
    "text": "directly goes into postgress is there an interaction between be able to get back to something else that might already be",
    "start": "4446400",
    "end": "4452239"
  },
  {
    "text": "operated yeah so to answer your second question um we for kind of like tech",
    "start": "4452239",
    "end": "4458000"
  },
  {
    "text": "debt velocity reasons like these days only really support one provider Postgress um we actually do technically",
    "start": "4458000",
    "end": "4464480"
  },
  {
    "text": "support SQL light so if you install bladder with pip it's on SQLite but we don't write the migration scripts for SQLite it's just too much work um so if",
    "start": "4464480",
    "end": "4471520"
  },
  {
    "text": "you're on if that's why we recommend using Docker because then your agents will like get updated with every version and we change schemas very frequently",
    "start": "4471520",
    "end": "4477600"
  },
  {
    "text": "but it's set up so that you can use external Postgress if you have something that effectively has the same like",
    "start": "4477600",
    "end": "4482960"
  },
  {
    "text": "SQLite or SQL alchemy shims as Postgress it's very easy to set up um but if if",
    "start": "4482960",
    "end": "4488239"
  },
  {
    "text": "it's not then you're going to have to write some code and you sorry the other question was like is there forgetting things like",
    "start": "4488239",
    "end": "4495040"
  },
  {
    "text": "especially in the archival memory yeah yeah that's a there is not in archival",
    "start": "4495040",
    "end": "4500560"
  },
  {
    "text": "memory a concept of forgetting but archival memory is tagged with time stamps which can allow the agent to like",
    "start": "4500560",
    "end": "4505679"
  },
  {
    "text": "do consolidation in real time um but yeah that's that's also something we've been looking a lot into kind of like",
    "start": "4505679",
    "end": "4511440"
  },
  {
    "text": "running like eager memory processing to try to like consolidate ahead of time as opposed to consolidating lazy",
    "start": "4511440",
    "end": "4519800"
  },
  {
    "text": "one use case we have is we store a lot of time data in a way for example you know we have a product and we have you",
    "start": "4520640",
    "end": "4526400"
  },
  {
    "text": "know a thousand or 10,000 review in that product how's the process of compressing all that memory into a single plot yeah",
    "start": "4526400",
    "end": "4533840"
  },
  {
    "text": "yeah so this is a a great question i don't I don't think it is very it's you have to do a lot of work",
    "start": "4533840",
    "end": "4540560"
  },
  {
    "text": "yourself to do that with the default let agents because you have to basically tell the agent I want you to like chain",
    "start": "4540560",
    "end": "4545679"
  },
  {
    "text": "function calls indefinitely while ingesting this data and you could actually create like a tool rule like",
    "start": "4545679",
    "end": "4551120"
  },
  {
    "text": "that forces you always have to call read more data read more data and you just manually execute it but for example what",
    "start": "4551120",
    "end": "4557440"
  },
  {
    "text": "would happen is like the agent to like page through your data like pagionate through it and then every single time it",
    "start": "4557440",
    "end": "4562560"
  },
  {
    "text": "pagenates or like it turns a new page it has to write to the memory block like write the update so this is actually",
    "start": "4562560",
    "end": "4567840"
  },
  {
    "text": "like how um like one of these like enterprise deployments works is basically the agent like runs for a very",
    "start": "4567840",
    "end": "4574560"
  },
  {
    "text": "long amount of time and is constantly like regenerating the memory block over and over kind of a recursive regeneration yeah so I think it would be",
    "start": "4574560",
    "end": "4579760"
  },
  {
    "text": "pretty similar for your case do you have a recommendation if you want to be working on an active document for",
    "start": "4579760",
    "end": "4586080"
  },
  {
    "text": "example you want an agent to write a document for you do you have a recommended way to set that up maybe it's a tool or maybe something else yeah",
    "start": "4586080",
    "end": "4593600"
  },
  {
    "text": "yeah no I think active doc is there any chance a human would be editing at the same time or no that's okay yeah I think",
    "start": "4593600",
    "end": "4602320"
  },
  {
    "text": "that's really tricky so I I think we can take some inspiration from like what Anthropic did with code right where they",
    "start": "4602320",
    "end": "4607760"
  },
  {
    "text": "kind of had like very very few tools and the tools are very general um you can",
    "start": "4607760",
    "end": "4613440"
  },
  {
    "text": "maybe do something with like a text editor style if you look at the anthropic Sweetbench blog post and then Sweepbench themselves like implemented",
    "start": "4613440",
    "end": "4619840"
  },
  {
    "text": "the anthropic tools into their repo you can kind of use those tools as a reference it's like very very simple tools that allow you to kind of like",
    "start": "4619840",
    "end": "4626239"
  },
  {
    "text": "write from file read and write from files i I think yeah I think what you",
    "start": "4626239",
    "end": "4632560"
  },
  {
    "text": "what you will notice is that often like LMS are much better at like writing the whole thing from scratch as opposed to",
    "start": "4632560",
    "end": "4638640"
  },
  {
    "text": "making line del line diffs right and that's kind of why like I think when you use cloud with the artifacts feature it",
    "start": "4638640",
    "end": "4645040"
  },
  {
    "text": "consistently just like writes the whole thing over and over again right because it's just like better at doing that than it is like going in and editing so I",
    "start": "4645040",
    "end": "4651679"
  },
  {
    "text": "think it's a it's a very like unsolved problem so um my recommendation would be",
    "start": "4651679",
    "end": "4656719"
  },
  {
    "text": "to do like an aopropic sweep edge style tool",
    "start": "4656719",
    "end": "4661800"
  },
  {
    "text": "mhm yeah do you have an opinion on using coding agents instead of tool calls",
    "start": "4663920",
    "end": "4669120"
  },
  {
    "text": "because it seems they're higher performance but on the other hand that means you need secure execution environment like HT so there's this kind",
    "start": "4669120",
    "end": "4676800"
  },
  {
    "text": "of performance trade-off versus complexity of needing to sandbox basically every tool because it's now",
    "start": "4676800",
    "end": "4683280"
  },
  {
    "text": "full execution yeah do you mean like um the trade-off between what what's the",
    "start": "4683280",
    "end": "4688400"
  },
  {
    "text": "trade-off here like a a code a coding agent versus what so say example small",
    "start": "4688400",
    "end": "4694080"
  },
  {
    "text": "agents by default won't call tools it will just write code and the code takes the tools but that means you need secure",
    "start": "4694080",
    "end": "4700800"
  },
  {
    "text": "execution on every to more performing yeah I personally think it's it's not",
    "start": "4700800",
    "end": "4707280"
  },
  {
    "text": "that difficult to set up secure execution um I think what is difficult",
    "start": "4707280",
    "end": "4712480"
  },
  {
    "text": "is if like sometimes if you're trying to port like squeegees and stuff um you end",
    "start": "4712480",
    "end": "4718560"
  },
  {
    "text": "up you need to give effectively the agent like full permissions like blow up blow itself up um so you need to like",
    "start": "4718560",
    "end": "4723920"
  },
  {
    "text": "put let for example in a docker image like a wrapped in like a like a VM where like it's allowed to like blow the VM up",
    "start": "4723920",
    "end": "4730400"
  },
  {
    "text": "right um but that's doesn't like fit very cleanly with the idea of like agents all living together on a server",
    "start": "4730400",
    "end": "4736159"
  },
  {
    "text": "and all the agents like a multi-tenant you know on a server so the way we do it in leta is basically if you have an E2B",
    "start": "4736159",
    "end": "4742719"
  },
  {
    "text": "key then like every single time an agent attempts to execute a tool it gets passed to E2 and like something on E2B",
    "start": "4742719",
    "end": "4747920"
  },
  {
    "text": "side flips up um and I think that's pretty it's not that hard to set up the",
    "start": "4747920",
    "end": "4753199"
  },
  {
    "text": "main issue is latency but if you don't care that about like cold start latency I think yeah I think that's a pretty",
    "start": "4753199",
    "end": "4761120"
  },
  {
    "text": "reasonable solution i think it works pretty well",
    "start": "4761120",
    "end": "4765960"
  }
]