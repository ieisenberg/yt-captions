[
  {
    "text": "all right here we go we got deaf",
    "start": "0",
    "end": "2300"
  },
  {
    "text": "modulemonkey.lex or do it's a little",
    "start": "2300",
    "end": "4620"
  },
  {
    "text": "document up here",
    "start": "4620",
    "end": "7200"
  },
  {
    "text": "what the heck you don't even know about",
    "start": "7200",
    "end": "9240"
  },
  {
    "text": "this stop no he's writing comments",
    "start": "9240",
    "end": "12120"
  },
  {
    "text": "that's cheating oh yeah yeah we like to",
    "start": "12120",
    "end": "14700"
  },
  {
    "text": "just be tossed into code like closure",
    "start": "14700",
    "end": "16619"
  },
  {
    "text": "where we have to manhandle ourselves out",
    "start": "16619",
    "end": "18960"
  },
  {
    "text": "of it",
    "start": "18960",
    "end": "21180"
  },
  {
    "text": "all right all right so specifying the",
    "start": "21180",
    "end": "23160"
  },
  {
    "text": "types uh is optional but not only does",
    "start": "23160",
    "end": "25980"
  },
  {
    "text": "it help document the code like this",
    "start": "25980",
    "end": "27779"
  },
  {
    "text": "comment uh it helps make the LSP better",
    "start": "27779",
    "end": "30060"
  },
  {
    "text": "and improves accuracy of static analysis",
    "start": "30060",
    "end": "31740"
  },
  {
    "text": "tools like dialysis types though fake",
    "start": "31740",
    "end": "34980"
  },
  {
    "text": "types because you can put whatever you",
    "start": "34980",
    "end": "36420"
  },
  {
    "text": "want there okay so they do well I don't",
    "start": "36420",
    "end": "39719"
  },
  {
    "text": "know what just happened there okay",
    "start": "39719",
    "end": "41420"
  },
  {
    "text": "oh oh it's good yeah",
    "start": "41420",
    "end": "45320"
  },
  {
    "text": "a little scuffed all right def guard P",
    "start": "45320",
    "end": "48780"
  },
  {
    "text": "death guard P wait can we go back up",
    "start": "48780",
    "end": "51120"
  },
  {
    "text": "though what is this string.t like is",
    "start": "51120",
    "end": "52980"
  },
  {
    "text": "that just magic is that like actually",
    "start": "52980",
    "end": "54780"
  },
  {
    "text": "for types does that do anything besides",
    "start": "54780",
    "end": "56879"
  },
  {
    "text": "what like what like online you know like",
    "start": "56879",
    "end": "59280"
  },
  {
    "text": "30 something 37 or so",
    "start": "59280",
    "end": "62280"
  },
  {
    "text": "like uh this one like these yeah 40 yeah",
    "start": "62280",
    "end": "65518"
  },
  {
    "text": "these bottom three is that just a type",
    "start": "65519",
    "end": "67200"
  },
  {
    "text": "hint shy Rye I think it is a type hint",
    "start": "67200",
    "end": "71820"
  },
  {
    "text": "okay it's just a type hint yeah it's",
    "start": "71820",
    "end": "74880"
  },
  {
    "text": "like if that's tight pants okay so it",
    "start": "74880",
    "end": "77220"
  },
  {
    "text": "doesn't do anything besides hint this",
    "start": "77220",
    "end": "79560"
  },
  {
    "text": "should be a string okay that's all I was",
    "start": "79560",
    "end": "81180"
  },
  {
    "text": "wondering string is the the string type",
    "start": "81180",
    "end": "84060"
  },
  {
    "text": "yeah",
    "start": "84060",
    "end": "85140"
  },
  {
    "text": "okay we may be misunderstanding this",
    "start": "85140",
    "end": "87479"
  },
  {
    "text": "okay so we got a guard P which is a",
    "start": "87479",
    "end": "89759"
  },
  {
    "text": "white string which is",
    "start": "89759",
    "end": "91740"
  },
  {
    "text": "if C exists in any of these right so if",
    "start": "91740",
    "end": "94619"
  },
  {
    "text": "C is any of these you forgot a",
    "start": "94619",
    "end": "96840"
  },
  {
    "text": "registered nurse okay you can't be",
    "start": "96840",
    "end": "99780"
  },
  {
    "text": "forgetting registered nurses you know",
    "start": "99780",
    "end": "101220"
  },
  {
    "text": "it's big time that's actually I remember",
    "start": "101220",
    "end": "102479"
  },
  {
    "text": "it slash r slash n and not the other way",
    "start": "102479",
    "end": "104340"
  },
  {
    "text": "around as registered nurse much like",
    "start": "104340",
    "end": "106020"
  },
  {
    "text": "your jvm thing yeah not a nurse register",
    "start": "106020",
    "end": "107939"
  },
  {
    "text": "no one that doesn't make any sense all",
    "start": "107939",
    "end": "110159"
  },
  {
    "text": "right so we got is is letter if C is",
    "start": "110159",
    "end": "112740"
  },
  {
    "text": "somewhere between a to z or a to z or",
    "start": "112740",
    "end": "115500"
  },
  {
    "text": "underscore okay or is digit nice all",
    "start": "115500",
    "end": "117479"
  },
  {
    "text": "right",
    "start": "117479",
    "end": "118939"
  },
  {
    "text": "oh my goodness is this a markdown just",
    "start": "118939",
    "end": "122040"
  },
  {
    "text": "right in the middle",
    "start": "122040",
    "end": "123659"
  },
  {
    "text": "got a little mark down right in the",
    "start": "123659",
    "end": "125100"
  },
  {
    "text": "middle of this okay someone's really",
    "start": "125100",
    "end": "127259"
  },
  {
    "text": "thinking highly after themselves okay",
    "start": "127259",
    "end": "129239"
  },
  {
    "text": "yeah okay shy what is this Enterprise",
    "start": "129239",
    "end": "132000"
  },
  {
    "text": "Elixir all right",
    "start": "132000",
    "end": "134280"
  },
  {
    "text": "so we have a spec a net string token",
    "start": "134280",
    "end": "138120"
  },
  {
    "text": "type hint basically when is binary input",
    "start": "138120",
    "end": "141720"
  },
  {
    "text": "do Lex this okay I don't know what spec",
    "start": "141720",
    "end": "144660"
  },
  {
    "text": "means do you know what spec means expect",
    "start": "144660",
    "end": "146700"
  },
  {
    "text": "that's that's the type in",
    "start": "146700",
    "end": "148920"
  },
  {
    "text": "oh it's a type hint oh he's telling you",
    "start": "148920",
    "end": "151860"
  },
  {
    "text": "what's what is gonna happen oh it's the",
    "start": "151860",
    "end": "154260"
  },
  {
    "text": "specification for the function",
    "start": "154260",
    "end": "157700"
  },
  {
    "text": "okay this is Enterprise and then it's",
    "start": "159480",
    "end": "161519"
  },
  {
    "text": "got the same it's got the same",
    "start": "161519",
    "end": "163260"
  },
  {
    "text": "shenanigans",
    "start": "163260",
    "end": "165120"
  },
  {
    "text": "ROM Airline again where it look like",
    "start": "165120",
    "end": "167280"
  },
  {
    "text": "we're div well no we just defined in it",
    "start": "167280",
    "end": "169800"
  },
  {
    "text": "what happens if is binary isn't true I'm",
    "start": "169800",
    "end": "172620"
  },
  {
    "text": "like 11.",
    "start": "172620",
    "end": "175400"
  },
  {
    "text": "um you know what I'm saying like what",
    "start": "175500",
    "end": "176940"
  },
  {
    "text": "about what if it's not true then what",
    "start": "176940",
    "end": "178739"
  },
  {
    "text": "happens yeah there is no other not true",
    "start": "178739",
    "end": "181319"
  },
  {
    "text": "it must it's a match error okay",
    "start": "181319",
    "end": "185160"
  },
  {
    "text": "there we go okay so I I really gotta",
    "start": "185160",
    "end": "187260"
  },
  {
    "text": "know what the heck is this do you know",
    "start": "187260",
    "end": "188700"
  },
  {
    "text": "what that is",
    "start": "188700",
    "end": "191060"
  },
  {
    "text": "I don't know what are you making fun of",
    "start": "191519",
    "end": "193260"
  },
  {
    "text": "closure earlier for parentheses but",
    "start": "193260",
    "end": "194879"
  },
  {
    "text": "somebody's just putting less than less",
    "start": "194879",
    "end": "196140"
  },
  {
    "text": "than greater than greater than",
    "start": "196140",
    "end": "199260"
  },
  {
    "text": "what the hell does that even mean uh",
    "start": "199260",
    "end": "201959"
  },
  {
    "text": "binary string empty binary",
    "start": "201959",
    "end": "205280"
  },
  {
    "text": "oh this is an empty binary string oh",
    "start": "205280",
    "end": "209280"
  },
  {
    "text": "this is just an empty string it's just",
    "start": "209280",
    "end": "210900"
  },
  {
    "text": "an endophile",
    "start": "210900",
    "end": "212280"
  },
  {
    "text": "okay sure now he's writing his cases",
    "start": "212280",
    "end": "214680"
  },
  {
    "text": "okay so this is this is this is okay so",
    "start": "214680",
    "end": "217080"
  },
  {
    "text": "P must stand for something important def",
    "start": "217080",
    "end": "219900"
  },
  {
    "text": "P must be like you could maybe yeah okay",
    "start": "219900",
    "end": "224220"
  },
  {
    "text": "I like it okay so we have uh ignore so",
    "start": "224220",
    "end": "226980"
  },
  {
    "text": "we have C",
    "start": "226980",
    "end": "228299"
  },
  {
    "text": "which isn't my guess is a little eight",
    "start": "228299",
    "end": "231120"
  },
  {
    "text": "biter right",
    "start": "231120",
    "end": "232799"
  },
  {
    "text": "or eight I guess a little eight bit",
    "start": "232799",
    "end": "234360"
  },
  {
    "text": "thing so it's like utf-8 got it rest of",
    "start": "234360",
    "end": "236580"
  },
  {
    "text": "binary okay okay tokens",
    "start": "236580",
    "end": "239700"
  },
  {
    "text": "uh when C is white space do this",
    "start": "239700",
    "end": "243120"
  },
  {
    "text": "so just keep doing it when it's white",
    "start": "243120",
    "end": "244920"
  },
  {
    "text": "space okay okay got it input tokens",
    "start": "244920",
    "end": "248120"
  },
  {
    "text": "tokenize input",
    "start": "248120",
    "end": "251640"
  },
  {
    "text": "yep makes sense then we're pre-pending",
    "start": "251640",
    "end": "253799"
  },
  {
    "text": "to a list is that what we're doing right",
    "start": "253799",
    "end": "255000"
  },
  {
    "text": "here this is the last this is the list",
    "start": "255000",
    "end": "257479"
  },
  {
    "text": "is that how you read that why do you",
    "start": "257479",
    "end": "260100"
  },
  {
    "text": "prepare it",
    "start": "260100",
    "end": "261600"
  },
  {
    "text": "that's usually faster in these lengths",
    "start": "261600",
    "end": "263580"
  },
  {
    "text": "and then at the end you would reverse it",
    "start": "263580",
    "end": "264900"
  },
  {
    "text": "like as their linked list usually",
    "start": "264900",
    "end": "268199"
  },
  {
    "text": "oh interesting okay so here we go so we",
    "start": "268199",
    "end": "271500"
  },
  {
    "text": "have these we have this little tokenized",
    "start": "271500",
    "end": "273060"
  },
  {
    "text": "thing going on here so if it's go back",
    "start": "273060",
    "end": "276120"
  },
  {
    "text": "to the top when it had the um yep look",
    "start": "276120",
    "end": "279300"
  },
  {
    "text": "at that online Maybe 79.",
    "start": "279300",
    "end": "283740"
  },
  {
    "text": "there you go nice okay so that's your",
    "start": "286139",
    "end": "287639"
  },
  {
    "text": "case because it's a linked list so no",
    "start": "287639",
    "end": "289139"
  },
  {
    "text": "faster okay okay okay no copies nothing",
    "start": "289139",
    "end": "292020"
  },
  {
    "text": "you just do the whole way and then you",
    "start": "292020",
    "end": "293580"
  },
  {
    "text": "reverse it at the end it's pretty",
    "start": "293580",
    "end": "294840"
  },
  {
    "text": "classic style okay they do the same",
    "start": "294840",
    "end": "297120"
  },
  {
    "text": "thing in okmul so here's the tokenizer",
    "start": "297120",
    "end": "299220"
  },
  {
    "text": "and here's the different okay so this is",
    "start": "299220",
    "end": "301020"
  },
  {
    "text": "like pattern matching function building",
    "start": "301020",
    "end": "302639"
  },
  {
    "text": "Okay cool so you can do your little",
    "start": "302639",
    "end": "304680"
  },
  {
    "text": "doubly up here and be like equal not",
    "start": "304680",
    "end": "306479"
  },
  {
    "text": "equal oh this is actually really",
    "start": "306479",
    "end": "308040"
  },
  {
    "text": "convenient",
    "start": "308040",
    "end": "309120"
  },
  {
    "text": "yep",
    "start": "309120",
    "end": "310919"
  },
  {
    "text": "interesting so there must be some sort",
    "start": "310919",
    "end": "312660"
  },
  {
    "text": "of loop somewhere that says to like keep",
    "start": "312660",
    "end": "314400"
  },
  {
    "text": "Lexing",
    "start": "314400",
    "end": "315720"
  },
  {
    "text": "yeah that's they're all calling Lex at",
    "start": "315720",
    "end": "317699"
  },
  {
    "text": "the end are they where",
    "start": "317699",
    "end": "320040"
  },
  {
    "text": "well this one's tokenized this isn't Lex",
    "start": "320040",
    "end": "321960"
  },
  {
    "text": "so Lex is going to call tokenize and",
    "start": "321960",
    "end": "324180"
  },
  {
    "text": "then Lex will call itself again",
    "start": "324180",
    "end": "325740"
  },
  {
    "text": "okay okay then we do a little read",
    "start": "325740",
    "end": "327300"
  },
  {
    "text": "identify read number okay I see this so",
    "start": "327300",
    "end": "329280"
  },
  {
    "text": "read identity did we do the look aheads",
    "start": "329280",
    "end": "332100"
  },
  {
    "text": "what about like",
    "start": "332100",
    "end": "335180"
  },
  {
    "text": "like greater than or equal to or no do",
    "start": "335400",
    "end": "337139"
  },
  {
    "text": "we have that or no yeah yeah those were",
    "start": "337139",
    "end": "338820"
  },
  {
    "text": "the appear pattern matched oh not here",
    "start": "338820",
    "end": "340440"
  },
  {
    "text": "okay yeah I just missed them sweet okay",
    "start": "340440",
    "end": "341940"
  },
  {
    "text": "very cool they just apparently they're",
    "start": "341940",
    "end": "344639"
  },
  {
    "text": "missing greater than or less than and",
    "start": "344639",
    "end": "346440"
  },
  {
    "text": "equal to they're missing those two cases",
    "start": "346440",
    "end": "347940"
  },
  {
    "text": "but you got that right here sorry shy",
    "start": "347940",
    "end": "352039"
  },
  {
    "text": "okay so here's the read identifier which",
    "start": "353300",
    "end": "355979"
  },
  {
    "text": "we're gonna do a i o i o data to Binary",
    "start": "355979",
    "end": "358500"
  },
  {
    "text": "accumulator",
    "start": "358500",
    "end": "360479"
  },
  {
    "text": "some sort of pipe",
    "start": "360479",
    "end": "362940"
  },
  {
    "text": "thingy tokenize word rest I don't I",
    "start": "362940",
    "end": "365820"
  },
  {
    "text": "don't know what that means",
    "start": "365820",
    "end": "367259"
  },
  {
    "text": "so that's gonna say okay you just",
    "start": "367259",
    "end": "369479"
  },
  {
    "text": "smushed together a bunch of bites turn",
    "start": "369479",
    "end": "371100"
  },
  {
    "text": "that into a string for me and throw that",
    "start": "371100",
    "end": "372780"
  },
  {
    "text": "into tokenized word like it's gonna pipe",
    "start": "372780",
    "end": "374940"
  },
  {
    "text": "that to tokenize the word I don't know",
    "start": "374940",
    "end": "376740"
  },
  {
    "text": "where that where that function is and",
    "start": "376740",
    "end": "378360"
  },
  {
    "text": "then it's gonna return also the rest of",
    "start": "378360",
    "end": "380400"
  },
  {
    "text": "the things to do like everything looks",
    "start": "380400",
    "end": "382199"
  },
  {
    "text": "like it's returning the thing on the",
    "start": "382199",
    "end": "385139"
  },
  {
    "text": "left",
    "start": "385139",
    "end": "386340"
  },
  {
    "text": "and then the of the Tuple kind of thing",
    "start": "386340",
    "end": "388560"
  },
  {
    "text": "or the I think it's called a record",
    "start": "388560",
    "end": "390120"
  },
  {
    "text": "maybe in uh in Elixir or maybe not I",
    "start": "390120",
    "end": "392580"
  },
  {
    "text": "don't know and then it's also the rest",
    "start": "392580",
    "end": "394080"
  },
  {
    "text": "of the things left to parse so it's like",
    "start": "394080",
    "end": "395580"
  },
  {
    "text": "returning you can think of it as like a",
    "start": "395580",
    "end": "397380"
  },
  {
    "text": "tuple though I think okay and then you",
    "start": "397380",
    "end": "399660"
  },
  {
    "text": "got let's Okay so this one we got a",
    "start": "399660",
    "end": "401340"
  },
  {
    "text": "little guard claws right so this would",
    "start": "401340",
    "end": "402660"
  },
  {
    "text": "be a a guard Clause right here so you",
    "start": "402660",
    "end": "405600"
  },
  {
    "text": "can read identifier only when the",
    "start": "405600",
    "end": "407400"
  },
  {
    "text": "character is this and so we're gonna",
    "start": "407400",
    "end": "408960"
  },
  {
    "text": "keep on reading identifier over and over",
    "start": "408960",
    "end": "410940"
  },
  {
    "text": "again",
    "start": "410940",
    "end": "412020"
  },
  {
    "text": "yep and we're accumulating that into",
    "start": "412020",
    "end": "414360"
  },
  {
    "text": "like into a list okay why does he do the",
    "start": "414360",
    "end": "416819"
  },
  {
    "text": "little lower",
    "start": "416819",
    "end": "419060"
  },
  {
    "text": "maybe tokenized word does",
    "start": "419100",
    "end": "422160"
  },
  {
    "text": "I don't know okay",
    "start": "422160",
    "end": "424979"
  },
  {
    "text": "tokenized word does this thing so here's",
    "start": "424979",
    "end": "426900"
  },
  {
    "text": "all the different ones for tokenized",
    "start": "426900",
    "end": "428100"
  },
  {
    "text": "word so it either turns it into a prior",
    "start": "428100",
    "end": "429960"
  },
  {
    "text": "it turns it into a named one or a uh",
    "start": "429960",
    "end": "433319"
  },
  {
    "text": "identifier okay yep all right so where",
    "start": "433319",
    "end": "436680"
  },
  {
    "text": "is the looping oh I must have missed the",
    "start": "436680",
    "end": "439020"
  },
  {
    "text": "loop",
    "start": "439020",
    "end": "439919"
  },
  {
    "text": "so um they're just gonna keep calling",
    "start": "439919",
    "end": "442800"
  },
  {
    "text": "Lex on itself until it's base cases when",
    "start": "442800",
    "end": "446099"
  },
  {
    "text": "there's nothing left this would be the",
    "start": "446099",
    "end": "447599"
  },
  {
    "text": "base game okay so this is the base case",
    "start": "447599",
    "end": "449400"
  },
  {
    "text": "this is the white space move ahead case",
    "start": "449400",
    "end": "452160"
  },
  {
    "text": "and this is the tokenized that's one",
    "start": "452160",
    "end": "455160"
  },
  {
    "text": "item right call token guys get the one",
    "start": "455160",
    "end": "457020"
  },
  {
    "text": "token out and then recall lacks with",
    "start": "457020",
    "end": "459060"
  },
  {
    "text": "this new list",
    "start": "459060",
    "end": "460080"
  },
  {
    "text": "right and so like that Lex will",
    "start": "460080",
    "end": "462240"
  },
  {
    "text": "automatically call ignoring white space",
    "start": "462240",
    "end": "464039"
  },
  {
    "text": "right so like because it's just calling",
    "start": "464039",
    "end": "465840"
  },
  {
    "text": "Lex and that case is higher up on the",
    "start": "465840",
    "end": "467940"
  },
  {
    "text": "list of matches that's where I was",
    "start": "467940",
    "end": "469560"
  },
  {
    "text": "looking for the yeah that's the loop I",
    "start": "469560",
    "end": "470880"
  },
  {
    "text": "was looking for I didn't see this Loop",
    "start": "470880",
    "end": "472020"
  },
  {
    "text": "okay there it is oh that makes sense",
    "start": "472020",
    "end": "475259"
  },
  {
    "text": "huh yeah I like it",
    "start": "475259",
    "end": "477599"
  },
  {
    "text": "I prefer personally I think I like",
    "start": "477599",
    "end": "480660"
  },
  {
    "text": "um writing the pattern matching like",
    "start": "480660",
    "end": "482819"
  },
  {
    "text": "inside of the function",
    "start": "482819",
    "end": "484620"
  },
  {
    "text": "why because I just think like you end up",
    "start": "484620",
    "end": "488880"
  },
  {
    "text": "writing like some of the same thing I",
    "start": "488880",
    "end": "491400"
  },
  {
    "text": "don't I don't have a strong opinion on",
    "start": "491400",
    "end": "492780"
  },
  {
    "text": "it right now it's mostly the languages",
    "start": "492780",
    "end": "494400"
  },
  {
    "text": "that I do it like that's what I use",
    "start": "494400",
    "end": "496500"
  },
  {
    "text": "right so like you know camel we have",
    "start": "496500",
    "end": "499020"
  },
  {
    "text": "pattern matching you can do all the",
    "start": "499020",
    "end": "500759"
  },
  {
    "text": "pattern matching that you see in this",
    "start": "500759",
    "end": "502199"
  },
  {
    "text": "file right but then there's only like",
    "start": "502199",
    "end": "504419"
  },
  {
    "text": "one entry point",
    "start": "504419",
    "end": "507000"
  },
  {
    "text": "so it's kind of nice right that like",
    "start": "507000",
    "end": "509340"
  },
  {
    "text": "you can see what Lex looks like and you",
    "start": "509340",
    "end": "511800"
  },
  {
    "text": "just read it instead of like what if",
    "start": "511800",
    "end": "513479"
  },
  {
    "text": "there's another def P lacks like later",
    "start": "513479",
    "end": "515099"
  },
  {
    "text": "in this file I don't know is that an",
    "start": "515099",
    "end": "516659"
  },
  {
    "text": "option yeah you know so it's like and of",
    "start": "516659",
    "end": "519419"
  },
  {
    "text": "course you know I like static types that",
    "start": "519419",
    "end": "522539"
  },
  {
    "text": "are actually part of the language so",
    "start": "522539",
    "end": "526880"
  },
  {
    "text": "your argument because as this function",
    "start": "531800",
    "end": "534180"
  },
  {
    "text": "gets sufficiently longer you lose the",
    "start": "534180",
    "end": "536580"
  },
  {
    "text": "context of the other ones that are",
    "start": "536580",
    "end": "538019"
  },
  {
    "text": "potentially available maybe there's like",
    "start": "538019",
    "end": "539519"
  },
  {
    "text": "a cool like I don't have an LSP",
    "start": "539519",
    "end": "541200"
  },
  {
    "text": "apparently running but it'd be cool to",
    "start": "541200",
    "end": "542580"
  },
  {
    "text": "be able to just be like what are the",
    "start": "542580",
    "end": "544080"
  },
  {
    "text": "different definitions if there's like a",
    "start": "544080",
    "end": "545519"
  },
  {
    "text": "definition hover",
    "start": "545519",
    "end": "546839"
  },
  {
    "text": "I don't know that'd be neat because then",
    "start": "546839",
    "end": "548820"
  },
  {
    "text": "I get that a little bit more okay like I",
    "start": "548820",
    "end": "551160"
  },
  {
    "text": "some of it's cool because like I think",
    "start": "551160",
    "end": "553200"
  },
  {
    "text": "it looks cool with the tokenized cases",
    "start": "553200",
    "end": "555120"
  },
  {
    "text": "below like I think that that's nice you",
    "start": "555120",
    "end": "557040"
  },
  {
    "text": "know what I mean like yeah that looks",
    "start": "557040",
    "end": "559320"
  },
  {
    "text": "cool yeah",
    "start": "559320",
    "end": "561480"
  },
  {
    "text": "um",
    "start": "561480",
    "end": "562260"
  },
  {
    "text": "I just like the other version of",
    "start": "562260",
    "end": "564060"
  },
  {
    "text": "matching but",
    "start": "564060",
    "end": "565560"
  },
  {
    "text": "but that's I'm that also is colored by",
    "start": "565560",
    "end": "568019"
  },
  {
    "text": "my you know personal like experience",
    "start": "568019",
    "end": "570060"
  },
  {
    "text": "that I haven't written any Elixir",
    "start": "570060",
    "end": "572040"
  },
  {
    "text": "seriously",
    "start": "572040",
    "end": "573360"
  },
  {
    "text": "yeah I have not written any functional",
    "start": "573360",
    "end": "575820"
  },
  {
    "text": "anything seriously so it all looks like",
    "start": "575820",
    "end": "579240"
  },
  {
    "text": "[ __ ] to me all right anyways this is",
    "start": "579240",
    "end": "581100"
  },
  {
    "text": "beautiful thank you very much for the",
    "start": "581100",
    "end": "582660"
  },
  {
    "text": "Elixir walkthrough you can match on case",
    "start": "582660",
    "end": "584880"
  },
  {
    "text": "instead of function heads yes yep yeah",
    "start": "584880",
    "end": "586920"
  },
  {
    "text": "yeah I saw you say that try",
    "start": "586920",
    "end": "588420"
  },
  {
    "text": "so there is is there a NYX",
    "start": "588420",
    "end": "590040"
  },
  {
    "text": "implementation I believe there is",
    "start": "590040",
    "end": "592260"
  },
  {
    "text": "which is awesome we could look at gleam",
    "start": "592260",
    "end": "594360"
  },
  {
    "text": "if someone did one I don't know if",
    "start": "594360",
    "end": "595620"
  },
  {
    "text": "anyone did one but that also runs on uh",
    "start": "595620",
    "end": "598200"
  },
  {
    "text": "the same the same thing see look Freckle",
    "start": "598200",
    "end": "600660"
  },
  {
    "text": "science knows okay she's out here like",
    "start": "600660",
    "end": "602700"
  },
  {
    "text": "it is [ __ ] okay and she's a",
    "start": "602700",
    "end": "604800"
  },
  {
    "text": "scientist I'm not I'm just a computer",
    "start": "604800",
    "end": "606600"
  },
  {
    "text": "scientist which is a scientist that does",
    "start": "606600",
    "end": "608519"
  },
  {
    "text": "nothing in the real world",
    "start": "608519",
    "end": "610620"
  },
  {
    "text": "yeah or science",
    "start": "610620",
    "end": "612660"
  },
  {
    "text": "right in fact they're just Haskell",
    "start": "612660",
    "end": "614399"
  },
  {
    "text": "developers yeah that's the only real",
    "start": "614399",
    "end": "616440"
  },
  {
    "text": "scientist among us but real talk",
    "start": "616440",
    "end": "617940"
  },
  {
    "text": "computer science is the only science",
    "start": "617940",
    "end": "620279"
  },
  {
    "text": "branch",
    "start": "620279",
    "end": "622920"
  },
  {
    "text": "that allows you to make no hypotheses",
    "start": "622920",
    "end": "626160"
  },
  {
    "text": "and test them you just run purely by",
    "start": "626160",
    "end": "628080"
  },
  {
    "text": "what you like",
    "start": "628080",
    "end": "630560"
  },
  {
    "text": "I'm sure it's beautiful for whoever",
    "start": "633300",
    "end": "634620"
  },
  {
    "text": "wrote it no you don't have to don't",
    "start": "634620",
    "end": "635940"
  },
  {
    "text": "don't feel bad you can dunk on Ryan",
    "start": "635940",
    "end": "638760"
  },
  {
    "text": "all right there we go",
    "start": "638760",
    "end": "641360"
  }
]