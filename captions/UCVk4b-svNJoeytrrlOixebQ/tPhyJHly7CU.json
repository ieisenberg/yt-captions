[
  {
    "text": "squeal X versus squill C let's look at squill C first um check out our interactive example to see it in action",
    "start": "1000",
    "end": "7040"
  },
  {
    "text": "introduct blog post for the motivation behind squ C we have some documentation installation all that kind of stuff",
    "start": "7040",
    "end": "12160"
  },
  {
    "text": "let's check out the let's check out this thing okay okay what do we got here I can't even I can't I can't possibly read",
    "start": "12160",
    "end": "17439"
  },
  {
    "text": "that all right so let's see name select one from authors where ID equals 1 limit",
    "start": "17439",
    "end": "23199"
  },
  {
    "text": "to one select a star from authors order by name uh insert to authors name bio one",
    "start": "23199",
    "end": "29720"
  },
  {
    "text": "and two returning uh returning the results is what I assume that returns uh delete from authors where ID equals that",
    "start": "29720",
    "end": "36360"
  },
  {
    "text": "okay cool neat neat neat create authors okay this is pretty",
    "start": "36360",
    "end": "42079"
  },
  {
    "text": "much this one right it's pretty much that thing right there huh oh returns ID okay cool uh let's see create create",
    "start": "42079",
    "end": "49120"
  },
  {
    "text": "authors pram okay we got name and bio a null string okay a string and a null",
    "start": "49120",
    "end": "54840"
  },
  {
    "text": "string create author okay let's look at this this is this is where it all comes into play here all right create author",
    "start": "54840",
    "end": "59920"
  },
  {
    "text": "authors hey can I scroll here I got can I just can I like just take",
    "start": "59920",
    "end": "65119"
  },
  {
    "text": "this um Vim APM let's just let's just take this thing and let's see what we",
    "start": "65119",
    "end": "71000"
  },
  {
    "text": "here uh we'll just go like this",
    "start": "71000",
    "end": "75080"
  },
  {
    "text": "DB all right what do we got here welcome to Costco I love you",
    "start": "77280",
    "end": "84520"
  },
  {
    "text": "appreciate that thank you oxy thank you oxy thank you oxy all right what do we",
    "start": "84520",
    "end": "89600"
  },
  {
    "text": "got okay so we got our little struct here we're going to create author it's off of a query it has a context in the",
    "start": "89600",
    "end": "94720"
  },
  {
    "text": "create author's prams and it returns back out an author or an error create row context we do all this thing right",
    "start": "94720",
    "end": "100320"
  },
  {
    "text": "here and this must be just something it must just know how to do",
    "start": "100320",
    "end": "105799"
  },
  {
    "text": "this okay so we got a little row context we got an author we scan the row in and we uh call it a",
    "start": "105799",
    "end": "111600"
  },
  {
    "text": "deal how does that work what is going on here I don't quite understand this code",
    "start": "111600",
    "end": "120680"
  },
  {
    "text": "is it searching it looks like I thought it was creating author so I'm just curious why it it went this",
    "start": "120680",
    "end": "127000"
  },
  {
    "text": "direction oh oh there it is okay that's that's the",
    "start": "127000",
    "end": "134400"
  },
  {
    "text": "thing okay so literally creat new author it creates an author puts one and two here okay I see what happens here I see",
    "start": "134400",
    "end": "140080"
  },
  {
    "text": "I see I see I see then we then then the return results yeah then we get the return results which is the row that comes back out and bada bing bada boom",
    "start": "140080",
    "end": "146400"
  },
  {
    "text": "and now we got ourselves an author okay delete author cool delete author we just do this little exec context B bam okay",
    "start": "146400",
    "end": "153640"
  },
  {
    "text": "get author all right all these things look pretty straightforward list authors uh",
    "start": "153640",
    "end": "159519"
  },
  {
    "text": "list authors let's see context author we get the query we just pass in",
    "start": "159519",
    "end": "165080"
  },
  {
    "text": "the context plus the query long as there's no errors then we just go here and we do uh defer row close we get the",
    "start": "165080",
    "end": "170720"
  },
  {
    "text": "authors and we just scan them in one at a time I feel like squeal X was more convenient looking than this let's look",
    "start": "170720",
    "end": "176640"
  },
  {
    "text": "at squeal X for a second uh look at that raw squeal so good yeah yeah I feel like sque X was a bit more convenient you",
    "start": "176640",
    "end": "182200"
  },
  {
    "text": "were able to tie strs to your query so it would just kind of like magical happen oh do they have any nice usage",
    "start": "182200",
    "end": "189159"
  },
  {
    "text": "okay I guess here here's a nice little usage let me just throw this in to a file so I can see it happen I don't know I like I like looking at it from my",
    "start": "189159",
    "end": "196319"
  },
  {
    "text": "editor it just makes me feel better you know what I mean all right what do we got here uh go",
    "start": "196319",
    "end": "205879"
  },
  {
    "text": "mod tidy there we go all right so what do we got we got a",
    "start": "205879",
    "end": "211760"
  },
  {
    "text": "person struct and has a DB so here we go so we got a table person and place and",
    "start": "211760",
    "end": "217200"
  },
  {
    "text": "we got a struct person and place and we have a DB first name and last name okay main function we're going to connect to",
    "start": "217200",
    "end": "223519"
  },
  {
    "text": "postre post we must have the schema okay what is the schema the schema is this",
    "start": "223519",
    "end": "229400"
  },
  {
    "text": "thing okay so must have the schema okay fantastic I think we get this I think we get this hey always",
    "start": "229400",
    "end": "235400"
  },
  {
    "text": "better experience reading code and your own editor always a better experience sque x a ren DJ yeah sque X is nice but",
    "start": "235400",
    "end": "241599"
  },
  {
    "text": "as a longtime squeal X User I'm very excited about what squeal C might offer me squeal C looks like it's it's just",
    "start": "241599",
    "end": "247280"
  },
  {
    "text": "like a little bit more um definitely allows for what appears to be more like raw",
    "start": "247280",
    "end": "253519"
  },
  {
    "text": "control but it it looks like it's squeal C is like slightly squeal C looks like",
    "start": "253519",
    "end": "258600"
  },
  {
    "text": "it's just like a slight iteration on top of uh uh the database squeal that's already offered by go because a lot of",
    "start": "258600",
    "end": "265720"
  },
  {
    "text": "this looks really familiar right like row scanning I haven't used much of the Native package with go I've used very little go to begin with and so this does",
    "start": "265720",
    "end": "272720"
  },
  {
    "text": "look similares I would say why would you squeal X or C I don't know insert users",
    "start": "272720",
    "end": "279600"
  },
  {
    "text": "into username is admin values Beast Cod One update pay paycheck set account equals Beast CCO where account equals",
    "start": "279600",
    "end": "285039"
  },
  {
    "text": "the primeag damn PCO uh when rust I'm I'm on a rust",
    "start": "285039",
    "end": "291759"
  },
  {
    "text": "break I'm on a rust break right now I only do Rust when I have to okay",
    "start": "291759",
    "end": "297400"
  },
  {
    "text": "let's see so we're going to do a bunch of inserts and and we're going to do commit okay we got a nice little transaction here nice little transaction",
    "start": "297400",
    "end": "304080"
  },
  {
    "text": "okay fantastic we didn't check the result of the of the transaction but nice okay that seems really convenient",
    "start": "304080",
    "end": "309720"
  },
  {
    "text": "seems really nice really easy to use all right so we have a query of persons and we just go DB select people select from",
    "start": "309720",
    "end": "316919"
  },
  {
    "text": "this one and Bam see okay so that's I mean this does look more convenient can we agree on that this is practically an",
    "start": "316919",
    "end": "324240"
  },
  {
    "text": "OM but it's not not at all like let's look at the sque C version",
    "start": "324240",
    "end": "331080"
  },
  {
    "text": "right so here would be like identical code for the squeal C is this one right it's just looking",
    "start": "331080",
    "end": "338120"
  },
  {
    "text": "it's just creating literally it's just listing authors and so it's going to go through here it's going to do all of",
    "start": "338120",
    "end": "343919"
  },
  {
    "text": "this stuff to get to the same thing I mean I do like I do like the looks of squeal C right off the rip or squeal X squeal X off the rip now",
    "start": "343919",
    "end": "352680"
  },
  {
    "text": "there could be some things that I don't like about it welcome to Costco I love you Jack White thank you very much I",
    "start": "352680",
    "end": "359120"
  },
  {
    "text": "appreciate return nil eror yeah yeah I don't like sill C iterating through results yeah it looks like squil C can't do uh Dynamic queries what do you mean",
    "start": "359120",
    "end": "365960"
  },
  {
    "text": "Dynamic queries wait you can see through his hair yeah yeah I don't think less of me",
    "start": "365960",
    "end": "371120"
  },
  {
    "text": "but I'm watching the DG in YouTube today not twitch sent for my phone",
    "start": "371120",
    "end": "377160"
  },
  {
    "text": "nice you said by name right Jack White you're",
    "start": "377759",
    "end": "382840"
  },
  {
    "text": "welcome the only issue with squ X is it was updated over two years ago that concerns me a little why",
    "start": "382840",
    "end": "391400"
  },
  {
    "text": "why should this ever concern and I'm not meaning this in some sort of challenging way why would that concern you thank you",
    "start": "391800",
    "end": "397000"
  },
  {
    "text": "zamon I appreciate",
    "start": "397000",
    "end": "400240"
  },
  {
    "text": "that so to me that it's it's I I I've tried JQ as you showed us uh before",
    "start": "402919",
    "end": "408160"
  },
  {
    "text": "thanks and no problem potential not unresolved issues or not resolved issues what happen if it's",
    "start": "408160",
    "end": "413880"
  },
  {
    "text": "just done",
    "start": "413880",
    "end": "420879"
  },
  {
    "text": "doesn't concern me yeah go doesn't change much go is has a go has a strong Lindy",
    "start": "420879",
    "end": "427080"
  },
  {
    "text": "effect software never done yeah of course it can be done in fact software should you should",
    "start": "427080",
    "end": "433560"
  },
  {
    "text": "try to make things done as much as you can does it have to be squeal yeah I'm",
    "start": "433560",
    "end": "439599"
  },
  {
    "text": "going to use squeal I'm G to use squeal light I'm GNA use turo and I'm G to use probably squeal X to do it I just want",
    "start": "439599",
    "end": "445599"
  },
  {
    "text": "to do that I love when packages barely change if any yeah same here I I I'm much more into to the I've I've begun to",
    "start": "445599",
    "end": "451800"
  },
  {
    "text": "appreciate the Lindy effect a lot more on certain things because then you just you don't have to constantly be updating",
    "start": "451800",
    "end": "457800"
  },
  {
    "text": "your brain to the latest to everything okay so this is really convenient I like this this is kind of what I want because this is like very rust style in some",
    "start": "457800",
    "end": "464440"
  },
  {
    "text": "sense and what I mean by that is that is there no error that comes out of here oh I don't get any autocomplete right now",
    "start": "464440",
    "end": "470639"
  },
  {
    "text": "uh yeah there's no error check okay so I was right on that one but either way when I look at",
    "start": "470639",
    "end": "476599"
  },
  {
    "text": "this it it it gives it definitely gives me some some more rust Vibes print we get those things out",
    "start": "476599",
    "end": "483560"
  },
  {
    "text": "prints out those things we can grab a singular person right",
    "start": "483560",
    "end": "488440"
  },
  {
    "text": "here okay I like that I assume this cleans right so I assume squeal X when you do this it's all database safe right",
    "start": "489919",
    "end": "497360"
  },
  {
    "text": "are these things all data doesn't return any errors it does it does you can see the error check right here and you can see the warning on this line right uh",
    "start": "497360",
    "end": "504520"
  },
  {
    "text": "the error return value right can I just do that yeah there you",
    "start": "504520",
    "end": "510240"
  },
  {
    "text": "go it's gone get out of here I I ignore you thanks",
    "start": "510240",
    "end": "516039"
  },
  {
    "text": "Jimmy all right so we can do a little error check right here we do have an error check and",
    "start": "516519",
    "end": "523240"
  },
  {
    "text": "it doesn't do anything uh let's see what's this one uh if you let's see if you have null fields and use select star you must use squeal null star in your",
    "start": "523240",
    "end": "531040"
  },
  {
    "text": "struct okay let's see what that means okay so this is a this is a null string it also has the null string they",
    "start": "531040",
    "end": "537279"
  },
  {
    "text": "could be null I assume that's nil in this case I thought this said hookers down",
    "start": "537279",
    "end": "543640"
  },
  {
    "text": "here USA sing sing and hookers uh but it's not it's not hookers",
    "start": "543640",
    "end": "548959"
  },
  {
    "text": "okay and that's because you can have are there null values",
    "start": "548959",
    "end": "554360"
  },
  {
    "text": "here do any of these have null values they all look like they have places oh no they don't they just have",
    "start": "554360",
    "end": "560880"
  },
  {
    "text": "country these aren't cities oh nice okay so City actually is a null city is a uh a text null okay",
    "start": "560880",
    "end": "570120"
  },
  {
    "text": "okay and this thing is a null string okay cool I don't know I I mean what I just",
    "start": "570120",
    "end": "575680"
  },
  {
    "text": "just looking at these I like this Loop through rows and",
    "start": "575680",
    "end": "581040"
  },
  {
    "text": "only select one struct okay so I can do a query X grab all these rows and I can",
    "start": "581040",
    "end": "586600"
  },
  {
    "text": "do a struct scan that's cool can we can we agree that's cool can we",
    "start": "586600",
    "end": "593000"
  },
  {
    "text": "agree like that's that's cool right here that's cool let's make our own squeal",
    "start": "593000",
    "end": "598440"
  },
  {
    "text": "then no no we're not going to do black jacket hookers no we're not going to do it uh I I do like struck scan this is",
    "start": "598440",
    "end": "604519"
  },
  {
    "text": "awesome this is really really awesome and then you can just print out everything that's this is to me this is",
    "start": "604519",
    "end": "610360"
  },
  {
    "text": "super duper I like that a lot I like that a",
    "start": "610360",
    "end": "615040"
  },
  {
    "text": "lot named queries using a name as a bind bar automatic bind bar support which",
    "start": "616480",
    "end": "621720"
  },
  {
    "text": "takes into account the DB type based on the driver name in squeal uh openconnect into person let's see insert into person",
    "start": "621720",
    "end": "629480"
  },
  {
    "text": "first and last name email values first last uh name interface first last oh",
    "start": "629480",
    "end": "638800"
  },
  {
    "text": "cool okay okay okay I could like that I could like",
    "start": "639399",
    "end": "647000"
  },
  {
    "text": "that this is convenient that's convenient that's nice little string",
    "start": "647000",
    "end": "652440"
  },
  {
    "text": "interpolation right there there's definitely things I like about that because this kind of like",
    "start": "652440",
    "end": "658399"
  },
  {
    "text": "alleviates a whole slew of problems I wonder if does it just simply have to have properties first last and email",
    "start": "658399",
    "end": "664560"
  },
  {
    "text": "does it have to be I wonder what goes in here name exact dude why Mario why I cannot look up anything named",
    "start": "664560",
    "end": "671560"
  },
  {
    "text": "query where first name equals first name and then let's see named queries can also use strs uh their bind names follow",
    "start": "671560",
    "end": "679040"
  },
  {
    "text": "the same rules as in DB mapping so struct fields are lowercase and the DB tag is taken into consideration oh my",
    "start": "679040",
    "end": "685880"
  },
  {
    "text": "goodness no way so that means the person thing it takes first underscore name",
    "start": "685880",
    "end": "692079"
  },
  {
    "text": "right it does first underscore name and where what do we do down",
    "start": "692079",
    "end": "697320"
  },
  {
    "text": "here look at that right there that's let's go let's",
    "start": "697320",
    "end": "703760"
  },
  {
    "text": "go that's cool that's cool I would say that's a w because it's",
    "start": "703760",
    "end": "711320"
  },
  {
    "text": "it's it's not it's not binding to a specific struct it's binding to a name on a struct so you can have you don't",
    "start": "711320",
    "end": "718000"
  },
  {
    "text": "have to have you don't have to like craft these things one at a time you just need you know like if you have a",
    "start": "718000",
    "end": "723240"
  },
  {
    "text": "similar name on all of them I like that I like anything that do Prime I should I learn go or stick to no. JS you should",
    "start": "723240",
    "end": "728600"
  },
  {
    "text": "learn what you want to do dog let's go let's rust yeah this is",
    "start": "728600",
    "end": "733680"
  },
  {
    "text": "true one sounds much more positive okay so this is super duper cool I like this a lot I like this a lot I really do love",
    "start": "733680",
    "end": "743920"
  },
  {
    "text": "this notion right here where you can name fields like that that's that's super cool it's like like when I see",
    "start": "743920",
    "end": "749519"
  },
  {
    "text": "this this is like 3/4 of the power of rust",
    "start": "749519",
    "end": "754440"
  },
  {
    "text": "macros and I didn't have to get a a doctorate in proc macros to be able to write it you know like right now for me",
    "start": "755560",
    "end": "762000"
  },
  {
    "text": "to be able to write that in Rust would take probably an excessively long time",
    "start": "762000",
    "end": "767160"
  },
  {
    "text": "instead it's pretty straightforward why go feel so good dude I know there's a lot of things I like about go there's a lot of good things about go there's",
    "start": "767160",
    "end": "773199"
  },
  {
    "text": "there's always shitty things about it like don't get me wrong I'm not I'm not getting high off my own Supply here all right batch inserts so we can create a",
    "start": "773199",
    "end": "779680"
  },
  {
    "text": "person array and we can do insert into person first name last name email with these",
    "start": "779680",
    "end": "784760"
  },
  {
    "text": "ones oh",
    "start": "784760",
    "end": "787880"
  },
  {
    "text": "interesting okay",
    "start": "791480",
    "end": "797399"
  },
  {
    "text": "okay values so that repeats itself",
    "start": "800920",
    "end": "806480"
  },
  {
    "text": "huh huh what is a real no go with go uh",
    "start": "806480",
    "end": "811680"
  },
  {
    "text": "I really don't like nil I've never been a fan of nil um null nil like any any language with those two things I find",
    "start": "811680",
    "end": "818160"
  },
  {
    "text": "they just they just tend to be a bit more disastrous uh just it's just easier to oopsy da Oopsy Daisy yourself it just is",
    "start": "818160",
    "end": "826320"
  },
  {
    "text": "why I you know because you don't you can't know every place a null could potentially you know squeeze itself in so it's a little bit nicer to kind of",
    "start": "826320",
    "end": "832560"
  },
  {
    "text": "just avoid it you know so I like options I really am a big fan of option types all right person map we have a little",
    "start": "832560",
    "end": "838240"
  },
  {
    "text": "person map first name last name email and we can do the exact same thing with",
    "start": "838240",
    "end": "843600"
  },
  {
    "text": "just like an interface o oh I like that I like that that these two things",
    "start": "843600",
    "end": "851399"
  },
  {
    "text": "can happen like this I like this I like I like that",
    "start": "851399",
    "end": "858519"
  },
  {
    "text": "which langu Russ uses it uh I I believe Haskell does o camel",
    "start": "858519",
    "end": "864560"
  },
  {
    "text": "does that's a lot of strings to mistype that's a lot of strings to mistype that's why you can also use this thing",
    "start": "867680",
    "end": "874000"
  },
  {
    "text": "right that's why you can use a struct and you just have the struct to do that but if you if you have an interface you",
    "start": "874000",
    "end": "880480"
  },
  {
    "text": "don't have to go from an interface you don't have to go from a map to the struct to the",
    "start": "880480",
    "end": "885880"
  },
  {
    "text": "insert if it's named that way so I don't know that's cool I I'm liking it uh try hiding offensive language in the twitch",
    "start": "885880",
    "end": "892480"
  },
  {
    "text": "settings but I can still see your hair yeah yeah",
    "start": "892480",
    "end": "900680"
  },
  {
    "text": "yeah okay so right now I'm leaning heavily towards uh sque X right now I",
    "start": "901519",
    "end": "907720"
  },
  {
    "text": "feel like squeal X is it what about you YouTube how do you feel about squeal",
    "start": "907720",
    "end": "912680"
  },
  {
    "text": "x what what I guess what are some reasons what are like just by the looks of it I'm not compelled to use squeal C",
    "start": "913320",
    "end": "920399"
  },
  {
    "text": "so I guess my question is why why would you use squeal C over squeal",
    "start": "920399",
    "end": "927600"
  },
  {
    "text": "X I don't know if I skill issue myself uh y'all have a 3X slowdown using gorm I",
    "start": "927600",
    "end": "934759"
  },
  {
    "text": "always reach for sque x and stick to it for everything",
    "start": "934759",
    "end": "939480"
  },
  {
    "text": "okay X is greater than C I mean technical definitions you're absolutely right what's the difference between them",
    "start": "940199",
    "end": "945920"
  },
  {
    "text": "well let's find out okay so ask any go developer and they'll tell you how painful it is to write programs uh that talk to the squeal databases uh go feels",
    "start": "945920",
    "end": "953279"
  },
  {
    "text": "like it isn't even half as productive compared to working with toolkits like sill Alchemy diesel hibernate active record the the existing Tools in go",
    "start": "953279",
    "end": "959959"
  },
  {
    "text": "ecosystem Force application developers to handw write mapping functions or litter their code with unsafe empty",
    "start": "959959",
    "end": "965639"
  },
  {
    "text": "interfaces Okay squill C I've been feeling the pain for years so six months ago I started developing a solution",
    "start": "965639",
    "end": "971600"
  },
  {
    "text": "today I'm excited to announce the result of that work squill c a new tool that makes working with squeal and go a joy",
    "start": "971600",
    "end": "977360"
  },
  {
    "text": "it dramatically improves the developer experience of working with relational databases without sa sacrificing type",
    "start": "977360",
    "end": "982639"
  },
  {
    "text": "safety or runtime performance it does not use struck tags handwritten mapper functions unnecessary reflection or add",
    "start": "982639",
    "end": "988920"
  },
  {
    "text": "any new dependencies to your code in fact it even provides correctness and safety guarantees that no other squeal",
    "start": "988920",
    "end": "994920"
  },
  {
    "text": "toolkit in go ecosystem can match okay so it's I assume it does not use struct",
    "start": "994920",
    "end": "1001360"
  },
  {
    "text": "tags meaning that it's it's not um it's it's like saying squeal X is not",
    "start": "1001360",
    "end": "1008040"
  },
  {
    "text": "it okay okay let's let's try to figure out what why why would someone want to use that because the squeal X looks",
    "start": "1009759",
    "end": "1015480"
  },
  {
    "text": "really convenient right that struct one all that but worse API yeah it feels",
    "start": "1015480",
    "end": "1020560"
  },
  {
    "text": "like I mean just the I know I know I radius it's it's just right now I'm in the learning phase I we're we're just",
    "start": "1020560",
    "end": "1026199"
  },
  {
    "text": "deep in a little phase right now I hate struct tags do you hate struck tags",
    "start": "1026199",
    "end": "1032918"
  },
  {
    "text": "why why why do you hate struck",
    "start": "1036600",
    "end": "1041038"
  },
  {
    "text": "tags I don't hate it though yeah strs are great no strs tags Str tags are cool",
    "start": "1043000",
    "end": "1049039"
  },
  {
    "text": "but Annoying to do co-pilot makes it easy though okay I like Str tags and honestly uh the",
    "start": "1049039",
    "end": "1055559"
  },
  {
    "text": "reflection overhead of them not issue yeah I'd be curious if that's like if your issue is Reflection from a struct",
    "start": "1055559",
    "end": "1061840"
  },
  {
    "text": "tag it feels really odd uh I'm not even sure if it is considered quote unquote reflection either hey D devs thank you I",
    "start": "1061840",
    "end": "1069000"
  },
  {
    "text": "recently went with raw's squeal database but squeal X is compelling uh only was worried with the unresolved issues",
    "start": "1069000",
    "end": "1075039"
  },
  {
    "text": "somebody tell uh tells but somebody tells in issue isues they want to take",
    "start": "1075039",
    "end": "1080080"
  },
  {
    "text": "over and has already deal let's see and already has some deal with the author in the end I might switch over to sill X it",
    "start": "1080080",
    "end": "1085720"
  },
  {
    "text": "would save a lot of typing yeah I mean that's why that's why I like him right now it's",
    "start": "1085720",
    "end": "1091679"
  },
  {
    "text": "reflection 100% but the overhead is usually good enough 95% of the time yeah I mean anything I'm doing is going to be",
    "start": "1091679",
    "end": "1097120"
  },
  {
    "text": "pretty mild and so I just I assume a bit of convenience when typing",
    "start": "1097120",
    "end": "1102760"
  },
  {
    "text": "to me what it see what what the difference between squeal X and squeal C is is it I mean just even just reading this is that there's definitely a",
    "start": "1102760",
    "end": "1109799"
  },
  {
    "text": "performance angle to it and a bit more control angle to it and then I think the other one which is this uh what's it",
    "start": "1109799",
    "end": "1118200"
  },
  {
    "text": "called the the sacrificing type safety so meaning that you can do this like this is kind of pretty unsafe right here",
    "start": "1118200",
    "end": "1125840"
  },
  {
    "text": "in the sense that it's just like this is just you're just raw dogging in a just a just an interface and you better hope",
    "start": "1125840",
    "end": "1132400"
  },
  {
    "text": "that these names match these names and really even this one first name right here you better hope that these Nam",
    "start": "1132400",
    "end": "1138320"
  },
  {
    "text": "names match these names right there's no it doesn't look like there's any sort of guarantee in here saying that you've",
    "start": "1138320",
    "end": "1143760"
  },
  {
    "text": "done everything right and so I think that's what they mean by type safety which which fair I mean that's a fair",
    "start": "1143760",
    "end": "1149840"
  },
  {
    "text": "statement uh is it like a huge source of bugs I don't think that's like a really strong or compelling case to say it's a",
    "start": "1149840",
    "end": "1156039"
  },
  {
    "text": "big source of bugs in the sense especially if you're using something that you can easily test",
    "start": "1156039",
    "end": "1161120"
  },
  {
    "text": "um yeah I know exactly dude messing that up is just so hard it's because it's such a small portion of your code that's",
    "start": "1161120",
    "end": "1168480"
  },
  {
    "text": "the smallest portion of your code is that usually whenever I'm doing something my problem is never in the the",
    "start": "1168480",
    "end": "1174440"
  },
  {
    "text": "getter Setter part right it's always in the hard Parts all",
    "start": "1174440",
    "end": "1180919"
  },
  {
    "text": "right all right so let's see all right sque X accomplishes all this by taking fundamentally different approach compiling squeal into fully typesafe",
    "start": "1180919",
    "end": "1187320"
  },
  {
    "text": "idiomatic go code okay so it can take create table authors name get one oh",
    "start": "1187320",
    "end": "1196320"
  },
  {
    "text": "oh oh I'm so St stupid oh I am so stupid",
    "start": "1196320",
    "end": "1201840"
  },
  {
    "text": "oh my goodness I see it I understand it oh my",
    "start": "1201840",
    "end": "1208440"
  },
  {
    "text": "goodness boys boys",
    "start": "1208440",
    "end": "1213600"
  },
  {
    "text": "this it takes this code and it generated this",
    "start": "1213600",
    "end": "1220640"
  },
  {
    "text": "file [Music]",
    "start": "1227159",
    "end": "1233240"
  },
  {
    "text": "oh okay okay so that is kind of a cool I mean code",
    "start": "1233240",
    "end": "1239480"
  },
  {
    "text": "gen each comment is a statement yes each comment is a statement okay so I missed that I completely missed",
    "start": "1239480",
    "end": "1247919"
  },
  {
    "text": "that does this generate connect to the DB and translate select star uh hey Ben Holmes man Ben Holmes you've raided me",
    "start": "1254320",
    "end": "1260320"
  },
  {
    "text": "all the time how you doing Ben Holmes how's that",
    "start": "1260320",
    "end": "1264519"
  },
  {
    "text": "whiteboard H which one do I like better that's I mean these are very separate questions let's keep on reading this one",
    "start": "1269600",
    "end": "1275720"
  },
  {
    "text": "because this is very interesting because generates the this generates the",
    "start": "1275720",
    "end": "1282520"
  },
  {
    "text": "following code author struct get author",
    "start": "1282520",
    "end": "1289000"
  },
  {
    "text": "oh I kind of like this I I I kind of almost feel like I I like squeal SE I",
    "start": "1289000",
    "end": "1294080"
  },
  {
    "text": "almost like squeal SE a little bit better the only thing I don't see on here is how does it like what does it do",
    "start": "1294080",
    "end": "1299600"
  },
  {
    "text": "with these table statements and all that we recently went away from gorm to sque se it's really a great feeling yeah",
    "start": "1299600",
    "end": "1306200"
  },
  {
    "text": "I've heard nothing but bad no one I've never heard someone say great things about",
    "start": "1306200",
    "end": "1312399"
  },
  {
    "text": "gorm curious about joints oo that's a that's a that's a good point I'm curious about joints I never even thought about",
    "start": "1313039",
    "end": "1319240"
  },
  {
    "text": "that I haven't even got to that point of just looking at it I'm just liking what I'm seeing right now whereas when you're just when you're when you're hand when",
    "start": "1319240",
    "end": "1325520"
  },
  {
    "text": "you're raw doging the uh the queries via squeal X that seems a little bit",
    "start": "1325520",
    "end": "1333000"
  },
  {
    "text": "easier it looks like squeal X is a rapper that uses some reflection type strategies whereas squeal C is a",
    "start": "1334360",
    "end": "1342200"
  },
  {
    "text": "compiler yeah yeah so that's see handy for DB migrations that that's something that I was curious about because I'm",
    "start": "1342919",
    "end": "1348720"
  },
  {
    "text": "going to try to take a pretty radical approach to this the program we're writing I'm going to be doing a database per user using the platform API provided",
    "start": "1348720",
    "end": "1357559"
  },
  {
    "text": "by turo and I was going to give it a rip to see how does this all work",
    "start": "1357559",
    "end": "1364360"
  },
  {
    "text": "out right and then actually seeing can I use this and all",
    "start": "1364559",
    "end": "1369600"
  },
  {
    "text": "that squill c can read DB migrations to generate code okay interesting I want to",
    "start": "1369600",
    "end": "1375240"
  },
  {
    "text": "see that I want to see how that works uh for yearsof Engineers have been generating sill queries from annotating",
    "start": "1375240",
    "end": "1380279"
  },
  {
    "text": "objects and programming languages and this is like half good I understand the Allure of wanting to do this can we all",
    "start": "1380279",
    "end": "1387320"
  },
  {
    "text": "agree that the Allure of this makes sense but then it also at some point",
    "start": "1387320",
    "end": "1392520"
  },
  {
    "text": "sucks because it's you can't quite express everything you would and squeal in a struct and you and the other way",
    "start": "1392520",
    "end": "1399159"
  },
  {
    "text": "also doesn't work you know Goose plus uh squeal C equals boot. is that it squeal",
    "start": "1399159",
    "end": "1404840"
  },
  {
    "text": "uh squeal is already a structur typed language we should be generating correct types safe code in every programming",
    "start": "1404840",
    "end": "1410200"
  },
  {
    "text": "language from the source of Truth squeal itself I agree with the statement the statement's pretty",
    "start": "1410200",
    "end": "1416400"
  },
  {
    "text": "good problems using squeal uh from go today working with relational database in any programming language is",
    "start": "1416400",
    "end": "1421799"
  },
  {
    "text": "challenging go in particular is especially painful even with existing packages and tools writing and maintaining queries and go applications",
    "start": "1421799",
    "end": "1427320"
  },
  {
    "text": "is a chore low-level standard Library Go's standard Library offers this database squeal package for interacting",
    "start": "1427320",
    "end": "1432960"
  },
  {
    "text": "with relational databases but most applications outgrow the database squeal package and reach for a full fledged omm",
    "start": "1432960",
    "end": "1438919"
  },
  {
    "text": "or a higher level Library abstraction why using uh database School package is straightforward write a query pass in",
    "start": "1438919",
    "end": "1445360"
  },
  {
    "text": "the necessary arguments scan the results back into the field programmers are responsible for uh explicitly specifying",
    "start": "1445360",
    "end": "1450559"
  },
  {
    "text": "the mapping between squeal field and its value in the program for both inputs and outputs okay",
    "start": "1450559",
    "end": "1456640"
  },
  {
    "text": "fair once an application has more than a few queries maintaining these mappings is cumbersome and severely impacts",
    "start": "1456640",
    "end": "1462320"
  },
  {
    "text": "programming productivity yeah I guess if they change frequently I could see that as a pretty",
    "start": "1462320",
    "end": "1467840"
  },
  {
    "text": "valid argument I don't think mine are going to like what we're building again the Vim motions I don't think it's going to be doing much we're not doing much",
    "start": "1467840",
    "end": "1473760"
  },
  {
    "text": "changing so I don't think this is going to be really my",
    "start": "1473760",
    "end": "1478360"
  },
  {
    "text": "problem let's see worse it's trivial to make a mistake let's see to make mistakes that are not caught until runtime if you switch the order of",
    "start": "1481880",
    "end": "1488600"
  },
  {
    "text": "parameters in your query the parameter mapping must be updated if a column is added to the table all queries must be",
    "start": "1488600",
    "end": "1494200"
  },
  {
    "text": "updated to return that value okay yeah yeah uh if the squeal type in the let's",
    "start": "1494200",
    "end": "1499240"
  },
  {
    "text": "see if the type in the squeal does not match the type in your code failure will not occur until the queries ex uh or",
    "start": "1499240",
    "end": "1504640"
  },
  {
    "text": "until query execution time yeah that's a good point there is this loose there is this unfortunately it is kind of it's an",
    "start": "1504640",
    "end": "1510720"
  },
  {
    "text": "implicit dependency that you you can't quite type out okay uh higher level uh libraries",
    "start": "1510720",
    "end": "1517600"
  },
  {
    "text": "the go Community has produced higher level libraries squeal X and orm's gorm to solve the issues however higher level",
    "start": "1517600",
    "end": "1523080"
  },
  {
    "text": "libraries still require manual mapping via query text and struct tags that if correct will only fail at",
    "start": "1523080",
    "end": "1530440"
  },
  {
    "text": "runtime okay so I I mean I I really do like this okay okay it feels like squeal",
    "start": "1530440",
    "end": "1535840"
  },
  {
    "text": "X like when I now that I kind of now that I'm reading the the the back and forth on this it feels like sque",
    "start": "1535840",
    "end": "1543399"
  },
  {
    "text": "X definitely has a lot of value in smaller",
    "start": "1543399",
    "end": "1550159"
  },
  {
    "text": "applications things that are kind of more straightforward simple you know if you're if you're building a pretty",
    "start": "1550159",
    "end": "1555720"
  },
  {
    "text": "simple thing squeal X seems like it's a pretty pretty convenient reach but it sounds like sque C is like",
    "start": "1555720",
    "end": "1563559"
  },
  {
    "text": "it it has more ability to grow maybe just start with the standard",
    "start": "1563559",
    "end": "1568640"
  },
  {
    "text": "Library I I don't want to start with the standard Library I've played around a little bit with it it's very very cumbersome to use the standard Library",
    "start": "1568640",
    "end": "1574320"
  },
  {
    "text": "literally if I was using the standard Library I would generate this exact same code right because this is what it's",
    "start": "1574320",
    "end": "1579679"
  },
  {
    "text": "doing right here right sque C is literally just generating it for me and",
    "start": "1579679",
    "end": "1585440"
  },
  {
    "text": "I don't really want to generate at all no one should start with the standard lib it's hell there's a lot of really",
    "start": "1585440",
    "end": "1592000"
  },
  {
    "text": "good stuff I've already I've already written a few queries in the old goang and this is literally what I would have written and so it's like if it will just",
    "start": "1592000",
    "end": "1598520"
  },
  {
    "text": "write this for me and I still get all the benefits of just using the low-level library but I can just kind of specify",
    "start": "1598520",
    "end": "1605200"
  },
  {
    "text": "it in more of a structured way that looks like squeal like this I like this this is a really cool approach to uh to",
    "start": "1605200",
    "end": "1612640"
  },
  {
    "text": "doing this OMS do away with much the manual",
    "start": "1612640",
    "end": "1617760"
  },
  {
    "text": "mapping but require you to write your queries now in a pseudo squeal DSL that's the exact reason why I hate",
    "start": "1617760",
    "end": "1624240"
  },
  {
    "text": "orm exclusively uh my yoga ball broke my yoga my yoga ball broke I'm get I'm GNA",
    "start": "1624240",
    "end": "1629799"
  },
  {
    "text": "get a new one I don't I just don't know why I'm dragging my feet on that one the stand uh lib is a bit clunky to use if",
    "start": "1629799",
    "end": "1634960"
  },
  {
    "text": "not terrible there's a lot of good things in the standard lib though right like uh I think their I think their templating is like pretty great for most",
    "start": "1634960",
    "end": "1641720"
  },
  {
    "text": "things their templating is extremely I love you hey I love you",
    "start": "1641720",
    "end": "1647120"
  },
  {
    "text": "right it's just like that's extremely simple to use uh their strings API is actually pretty good Amber thank you I",
    "start": "1647120",
    "end": "1653480"
  },
  {
    "text": "was banned from your Discord for reacting to your announcements post oh really uh please unban uh got to go",
    "start": "1653480",
    "end": "1659640"
  },
  {
    "text": "sorry dm'd on Discord how did you get your yoga ball to break I don't know it was old it was like 15 years",
    "start": "1659640",
    "end": "1666399"
  },
  {
    "text": "old squeal C is good uh I like templates but DB is CL is chunky yeah yeah yeah",
    "start": "1666399",
    "end": "1673519"
  },
  {
    "text": "yeah the DB is definitely the the the chunky one is definitely the most the most okay",
    "start": "1673519",
    "end": "1679880"
  },
  {
    "text": "with either approach it is still trivial to make errors that the compiler can't check as a go programmer have you ever",
    "start": "1679880",
    "end": "1684919"
  },
  {
    "text": "mixed up the order of arguments when invoking a query that didn't match yes I mean I've done this just in PHP I've",
    "start": "1684919",
    "end": "1690240"
  },
  {
    "text": "done this in every I've done this every single time I've used a language to interact with uh squeal update the name of a column in one query but not another",
    "start": "1690240",
    "end": "1697360"
  },
  {
    "text": "mistyped the name of a column in a query change the number of arguments in a query but forgot to pass the additional",
    "start": "1697360",
    "end": "1703840"
  },
  {
    "text": "values change the type of column but forgot to change the type in your code all of these errors are impossible squeal C okay how do you sque C in three",
    "start": "1703840",
    "end": "1712360"
  },
  {
    "text": "steps you write your squeal queries you run squill seed to generate the go code that presents type safe interfaces those",
    "start": "1712360",
    "end": "1718640"
  },
  {
    "text": "queries you write your application call code that calls the method squill seed",
    "start": "1718640",
    "end": "1724480"
  },
  {
    "text": "generates I wonder if I wonder how this is going to feel like is this going to be kind of like Temple this is by the way this is one of",
    "start": "1727480",
    "end": "1734600"
  },
  {
    "text": "the great reasons to love go can I just can I can can I can I jump in here for a quick second and tell you one of the",
    "start": "1734600",
    "end": "1739799"
  },
  {
    "text": "reasons to love go is that with rust you use macros to effectively accomplish a",
    "start": "1739799",
    "end": "1745080"
  },
  {
    "text": "lot of this kind of stuff right so you do Cod generation at time and it's really really good because it can be all type safe amazing stuff if you've ever",
    "start": "1745080",
    "end": "1750720"
  },
  {
    "text": "used um if you've ever used go or rust's uh like a V view Macro for uh leptos",
    "start": "1750720",
    "end": "1757519"
  },
  {
    "text": "it's very fantastic it's it's jsx but in Rust it's amazing but I do want to throw",
    "start": "1757519",
    "end": "1764080"
  },
  {
    "text": "something out there that I think is kind of neat with is that whenever you use these macros in",
    "start": "1764080",
    "end": "1770640"
  },
  {
    "text": "Rust and stuff it's really really slow it it slows everything down and compiling in Rust just becomes more and",
    "start": "1770640",
    "end": "1775919"
  },
  {
    "text": "more emotionally painful whereas go is so fast to compile that Temple is a",
    "start": "1775919",
    "end": "1782000"
  },
  {
    "text": "completely novel syntax that gives you effectively jsx control with just strings like with with actual types and",
    "start": "1782000",
    "end": "1789279"
  },
  {
    "text": "then you can only pass in values of strings they don't allow you you have to do all the conversion yourself but either way it allows for all of",
    "start": "1789279",
    "end": "1796320"
  },
  {
    "text": "that and it compiles it on the Fly and it's so fast at",
    "start": "1796320",
    "end": "1802360"
  },
  {
    "text": "compiling that you don't even notice that it's like running right like",
    "start": "1802360",
    "end": "1808480"
  },
  {
    "text": "you like I cannot I I have pretty quick fingers here and I like I can't swap",
    "start": "1808480",
    "end": "1813960"
  },
  {
    "text": "back and forth between the program running and go compiling so there's something that's",
    "start": "1813960",
    "end": "1819919"
  },
  {
    "text": "kind of cool about that and that's what s c obviously takes advantage of is that go is just so fast it just like it can",
    "start": "1819919",
    "end": "1826760"
  },
  {
    "text": "just do this how do you compare it to Zig compile time I don't know I've never I I haven't",
    "start": "1826760",
    "end": "1832279"
  },
  {
    "text": "played with Zig enough to really know that gok power feels like an interpreter",
    "start": "1832279",
    "end": "1837840"
  },
  {
    "text": "yeah okay so may I'm actually starting to lean over towards the squeal seide just because it has more fine grain",
    "start": "1837840",
    "end": "1844240"
  },
  {
    "text": "control and I think I'll like the type safety more I think squ X is really convenient looking but I I do understand",
    "start": "1844240",
    "end": "1850240"
  },
  {
    "text": "the type safety I might go with squeal X just to feel it out I'm not sure let's",
    "start": "1850240",
    "end": "1855440"
  },
  {
    "text": "see uh seriously uh it's just that easy you don't have to write boilerplate sque uh quering code",
    "start": "1855440",
    "end": "1861120"
  },
  {
    "text": "ever again squeal generates fully type safe idiomatic go code from your query squeal C also prevents an entire class",
    "start": "1861120",
    "end": "1866360"
  },
  {
    "text": "of common errors in sque code during code generation sque C parses all of your queries and ddl statements create",
    "start": "1866360",
    "end": "1872080"
  },
  {
    "text": "table so that it knows the names and types of every column in your tables and ex let's see and every expression in",
    "start": "1872080",
    "end": "1877600"
  },
  {
    "text": "your queries if any of them do not match squ SE will fail to compile your queries catching would let's see Catching would",
    "start": "1877600",
    "end": "1883480"
  },
  {
    "text": "be runtime errors before they happen",
    "start": "1883480",
    "end": "1889159"
  },
  {
    "text": "okay how does sque c work with Dynamic wear Clauses that's a good question I mean there's a lot that I have like",
    "start": "1893960",
    "end": "1899679"
  },
  {
    "text": "joins and stuff I still don't I don't understand how any of this works beyond that but the dynamic wear is kind of",
    "start": "1899679",
    "end": "1905559"
  },
  {
    "text": "interesting so I've heard a lot of back and forth on Dynamic wear and one thing that people really love about frontend",
    "start": "1905559",
    "end": "1910679"
  },
  {
    "text": "Masters if you just saw I don't know if you saw this tweet about frontend Masters um let's see front end Masters",
    "start": "1910679",
    "end": "1919158"
  },
  {
    "text": "um uh right here people are like how did you make this thing so fast one of the",
    "start": "1923480",
    "end": "1928720"
  },
  {
    "text": "things they also do with their database is they kind of write like a a front to it so that you they they effectively",
    "start": "1928720",
    "end": "1935600"
  },
  {
    "text": "handroll their own omm so that there is no such thing as a dynamic wear effectively it's just like here are the",
    "start": "1935600",
    "end": "1942519"
  },
  {
    "text": "only possible things you can do and these are the only ones we're going to let you do because that it just",
    "start": "1942519",
    "end": "1948880"
  },
  {
    "text": "it it avoids the entire problem of people starting to throw in",
    "start": "1948880",
    "end": "1954600"
  },
  {
    "text": "new queries that make everything super slow instead it's just like this is this is your only options thank you",
    "start": "1954600",
    "end": "1960799"
  },
  {
    "text": "aggression very aggressive in Ember appreciate that again uh DCT devs let's go keeping it tidy keeping it tidy the",
    "start": "1960799",
    "end": "1967399"
  },
  {
    "text": "balen yeah I'm balding I'm balding so hard you can see through my head what you are saying now is back end",
    "start": "1967399",
    "end": "1976240"
  },
  {
    "text": "for front end I I don't know if I'm saying that anyways I don't know about",
    "start": "1976240",
    "end": "1981760"
  },
  {
    "text": "all that stuff okay a guided tour of uh sill SE that all sounds great but what does it look like in practice you can",
    "start": "1981760",
    "end": "1987159"
  },
  {
    "text": "download install you let's see download the latest version of selc and add it to your path you'll also want go 1.3",
    "start": "1987159",
    "end": "1992720"
  },
  {
    "text": "installed on your system I assume I can do newer at this point uh than you very much darket I love you BFFs back back",
    "start": "1992720",
    "end": "2000639"
  },
  {
    "text": "backends for front ends I prefer best friends forever thank you darknet 39 bucks uh is a lot to us",
    "start": "2000639",
    "end": "2008320"
  },
  {
    "text": "Brazilians 3.99 feelings in the good feelings it's a uh it's tough for front",
    "start": "2008320",
    "end": "2014679"
  },
  {
    "text": "and Masters yeah I I understand that cockp porn thank you for the gifted sub let's go all right uh s c uses the",
    "start": "2014679",
    "end": "2020720"
  },
  {
    "text": "configuration file at the root of your project store oh my goodness dark okay guys we're over here just trying to just",
    "start": "2020720",
    "end": "2026840"
  },
  {
    "text": "enjoy ourselves what is going on here I appreciate that appreciate that dark net",
    "start": "2026840",
    "end": "2032440"
  },
  {
    "text": "yeah there's a guy in here named cockporn okay I'm not just saying phrases out of nowhere welcome toost a normal man I didn't name myself cockporn",
    "start": "2032440",
    "end": "2039880"
  },
  {
    "text": "thank you synth appreciate that huh huh how's the no coffee going going pretty good we use yaml now uh for squeal",
    "start": "2039880",
    "end": "2047560"
  },
  {
    "text": "C I'm not sure what that means oh they use oh they use yaml now",
    "start": "2047560",
    "end": "2053118"
  },
  {
    "text": "okay so the configuration file has changed why yaml I don't really like yaml either to tell you the truth I",
    "start": "2053119",
    "end": "2059960"
  },
  {
    "text": "think I'd rather probably use Json than yaml I effing hate yaml",
    "start": "2059960",
    "end": "2067440"
  },
  {
    "text": "pretty much every language supports Jason yaml sucks pickle is the new thing toml toml",
    "start": "2067440",
    "end": "2074320"
  },
  {
    "text": "can suck it uh anyways okay so we have this so we have a squil c Json so you have to create a squil c yamel now squil",
    "start": "2074320",
    "end": "2080480"
  },
  {
    "text": "c will generate a go package for each entry in the package list each entry has four required properties schema uh the",
    "start": "2080480",
    "end": "2086480"
  },
  {
    "text": "path to the SQL file that defines the databases also the directory of squeal files queries path to the squeal file",
    "start": "2086480",
    "end": "2092679"
  },
  {
    "text": "with applic or application queries can also be the directory of squeal files okay okay cool name the package name uh",
    "start": "2092679",
    "end": "2099960"
  },
  {
    "text": "to use for generated code defaults to path base name okay and path the output",
    "start": "2099960",
    "end": "2105200"
  },
  {
    "text": "directory for the code okay okay so you don't even need to provide main okay",
    "start": "2105200",
    "end": "2110880"
  },
  {
    "text": "cool uh write the ddl uh let's build an application for tracking authors small application single tile so we're going",
    "start": "2110880",
    "end": "2116720"
  },
  {
    "text": "to create the authors this is the schema okay this is schema squeal okay I how does it handle different uh types of",
    "start": "2116720",
    "end": "2123000"
  },
  {
    "text": "squeal right like does this work with squeal light you know cuz I know there's slight there's ever so slight variations",
    "start": "2123000",
    "end": "2129400"
  },
  {
    "text": "with some of these toml is the goat toml still",
    "start": "2129400",
    "end": "2134560"
  },
  {
    "text": "sucks it does nice nice nice okay your uh application needs a few queries to",
    "start": "2134560",
    "end": "2139920"
  },
  {
    "text": "create insert and update and delete author records queries are annotated with small comment uh that includes a go",
    "start": "2139920",
    "end": "2145640"
  },
  {
    "text": "method name and squeal function to use okay okay so it's the name and it's a",
    "start": "2145640",
    "end": "2151079"
  },
  {
    "text": "one let's see hold on the queries are annotated with a small comment that includes a go method name and a database",
    "start": "2151079",
    "end": "2158000"
  },
  {
    "text": "scill function okay so get authors the name of the method it returns one list authors returns many create authors a",
    "start": "2158000",
    "end": "2165200"
  },
  {
    "text": "one delete author is just an execution okay okay",
    "start": "2165200",
    "end": "2170880"
  },
  {
    "text": "okay okay okay I like it I'm liking it uh generate",
    "start": "2170880",
    "end": "2178160"
  },
  {
    "text": "code uh with just the information stored in these uh two sque files a squeal C can now generate databases uh database",
    "start": "2178160",
    "end": "2183920"
  },
  {
    "text": "access methods for your application make sure that you're in sque C tour directory and run the following command",
    "start": "2183920",
    "end": "2189200"
  },
  {
    "text": "we'll we'll look at this here short in a moment uh this will generate these things okay uh we let's see dbo defines",
    "start": "2189200",
    "end": "2196240"
  },
  {
    "text": "the shared interface for using squeal DB and squeal transactions to execute the queries okay so we get all this",
    "start": "2196240",
    "end": "2203040"
  },
  {
    "text": "beautiful stuff right here dbo has the import it has the dbts",
    "start": "2203040",
    "end": "2208319"
  },
  {
    "text": "which has the execute prepare query all this new dbx queries queries queries queries with transactions okay I don't",
    "start": "2208319",
    "end": "2214520"
  },
  {
    "text": "know what any of this stuff is but fantastic welcome I don't know what it is regular Jake let's go thank you",
    "start": "2214520",
    "end": "2220359"
  },
  {
    "text": "regular Jake why is audio low I don't know what you mean by Audio low I don't think audio is that low is audio low is",
    "start": "2220359",
    "end": "2226640"
  },
  {
    "text": "the audio low is it is it is the audio",
    "start": "2226640",
    "end": "2234119"
  },
  {
    "text": "low audio is fine yeah kind audio good audio is Goof",
    "start": "2235119",
    "end": "2243480"
  },
  {
    "text": "audio is goofing all right models go contains the strs associated with the database tables in this example this uh",
    "start": "2243480",
    "end": "2248920"
  },
  {
    "text": "it contains a single struct author okay uh query squeal go query squeal go",
    "start": "2248920",
    "end": "2254760"
  },
  {
    "text": "contains the data access methods uh we defined in the uh query squeal it's a bit for both but the code uh but this is",
    "start": "2254760",
    "end": "2260920"
  },
  {
    "text": "the code you would have written yourself yes okay so this is all fine we don't need to look at this we've already looked at all this uh star star",
    "start": "2260920",
    "end": "2267800"
  },
  {
    "text": "expansion uh were you surprised to see select star/ returning uh star in squeal",
    "start": "2267800",
    "end": "2272920"
  },
  {
    "text": "X or in the query squeal squeal C replaces star references with the correct columns when generating the code",
    "start": "2272920",
    "end": "2278079"
  },
  {
    "text": "take a second uh look at the create I did see that I did see that on the return statement on uh what's it called",
    "start": "2278079",
    "end": "2285000"
  },
  {
    "text": "where's the one this one right here I did see that I remember seeing that going oh that was kind of cool that it",
    "start": "2285000",
    "end": "2290079"
  },
  {
    "text": "it knew that there's also an ID associated with this table okay I like",
    "start": "2290079",
    "end": "2295119"
  },
  {
    "text": "that it can't infer type sometimes wait what are we talking about what can't infer type sometimes I just",
    "start": "2295119",
    "end": "2302160"
  },
  {
    "text": "RZ you just you just have RZ I don't have any RZ man raise your application",
    "start": "2302160",
    "end": "2307200"
  },
  {
    "text": "code okay we do a little query we do a little little query right here we insert authors we create author with the create",
    "start": "2307200",
    "end": "2314560"
  },
  {
    "text": "author pams okay I I don't mind this at all null string string valid true no",
    "start": "2314560",
    "end": "2320480"
  },
  {
    "text": "error we list the authors we get the authors oh this is beautiful code by the way this is beautiful code delete author",
    "start": "2320480",
    "end": "2326280"
  },
  {
    "text": "okay this is beautiful code okay I'm liking this a lot all the code above can be found in the squeal SE tour",
    "start": "2326280",
    "end": "2331480"
  },
  {
    "text": "repository a larger more complicated example can be found uh in on Deck package in the sque uh see repository do",
    "start": "2331480",
    "end": "2338280"
  },
  {
    "text": "they have anything let's see hold does it have anything about migrations welcome to Costco bit",
    "start": "2338280",
    "end": "2343920"
  },
  {
    "text": "appreciate that Bish moving you're beautiful you're beautiful you got tons of Riz I got that Riz all over the place thank you Bish moving I'm curious about",
    "start": "2343920",
    "end": "2350480"
  },
  {
    "text": "uh migrations no migrations there's no migrations no migrations okay okay so it",
    "start": "2350480",
    "end": "2358040"
  },
  {
    "text": "doesn't I think other tools for migrations okay so they're probably exist other it does in the docks okay well now I'm getting two conflicting",
    "start": "2358040",
    "end": "2363800"
  },
  {
    "text": "thing Goose for migrations okay Goose for migrations plus one for goose",
    "start": "2363800",
    "end": "2370119"
  },
  {
    "text": "okay squeal X handles migrations oh interesting squeal X handles migration damage Goose what I know these names",
    "start": "2370119",
    "end": "2376960"
  },
  {
    "text": "these names are very upsetting okay so Goose would be the one I want to check out for migration so the day I need to do a migration is the day we use",
    "start": "2376960",
    "end": "2385760"
  },
  {
    "text": "Goose okay talk to me Goose talk to me Goose",
    "start": "2388160",
    "end": "2394560"
  },
  {
    "text": "okay so this is kind of exciting I like where this is going I like what I'm seeing I think what I'm going to do",
    "start": "2394560",
    "end": "2402640"
  },
  {
    "text": "now I think the next thing I got to do is I got to build out a bunch of I got to build out a bunch of stuff if I'm",
    "start": "2402839",
    "end": "2407880"
  },
  {
    "text": "going to do this right because the next thing I have to do is that now that I kind of I think I'm just",
    "start": "2407880",
    "end": "2412960"
  },
  {
    "text": "going to choose squeal C I like the idea of type safe and just generating and just catching all those dumb errors you",
    "start": "2412960",
    "end": "2418520"
  },
  {
    "text": "know it's easier to deal with him you know five minutes of extra setup and all that is 10 times better than everything",
    "start": "2418520",
    "end": "2424920"
  },
  {
    "text": "else and so where we're kind of at with this project is that I I like bubble tea I like wish we got them working well so",
    "start": "2424920",
    "end": "2432480"
  },
  {
    "text": "fantastic I need to be able to do a squeal SE transaction I need to be able to take effectively I need to be able to",
    "start": "2432480",
    "end": "2438800"
  },
  {
    "text": "take um any incoming request create a new database for that user and then to start filling in things",
    "start": "2438800",
    "end": "2445079"
  },
  {
    "text": "so selc can uh integrate uh with your migration uh tool like Atlas or Goose",
    "start": "2445079",
    "end": "2452680"
  },
  {
    "text": "okay I want to see how squeal uh C works with transactions",
    "start": "2452680",
    "end": "2458318"
  },
  {
    "text": "good call is there I feel like everyone's saying squill C looks pretty",
    "start": "2458480",
    "end": "2463560"
  },
  {
    "text": "nice okay uh but uh but it's close sill SE",
    "start": "2463560",
    "end": "2469400"
  },
  {
    "text": "parses the quer using the same parser as your squ uh your postgres database first pass I hope I don't have I don't have to",
    "start": "2469400",
    "end": "2475839"
  },
  {
    "text": "use postgress right this is only possible thanks to the amazing work of Luca fiddle on the a PG query go if you",
    "start": "2475839",
    "end": "2481760"
  },
  {
    "text": "need diagnosing post uh postc squeal performance issue his service PG analy it may be exactly what you need okay",
    "start": "2481760",
    "end": "2487960"
  },
  {
    "text": "what's next um okay this is really cool this is obviously a while ago so this",
    "start": "2487960",
    "end": "2493839"
  },
  {
    "text": "announcement is obviously pretty far out of date because it sounds like it's already using different stuff not sure",
    "start": "2493839",
    "end": "2500240"
  },
  {
    "text": "if squeal C is fully compatible with lib squeal uh oh why",
    "start": "2500240",
    "end": "2508760"
  },
  {
    "text": "not uh I feel like as a side quest you need to uh to buy some bubble tea from from wish yeah so if it's not if it's",
    "start": "2511920",
    "end": "2517960"
  },
  {
    "text": "not fully compatible with sill C then we're we got ourselves a bit of an issue so I guess that's something I I'll",
    "start": "2517960",
    "end": "2524440"
  },
  {
    "text": "have to we'll have to look into using",
    "start": "2524440",
    "end": "2530040"
  },
  {
    "text": "transactions records serial uh primary key let's go uh get record One update",
    "start": "2530040",
    "end": "2535520"
  },
  {
    "text": "record exec generate this stuff okay it does all the generations we've already seen that it does this stuff a bump",
    "start": "2535520",
    "end": "2542280"
  },
  {
    "text": "counter it does a begin defer roll",
    "start": "2542280",
    "end": "2547960"
  },
  {
    "text": "back uh queries with transactions get records update records return commit I'm",
    "start": "2547960",
    "end": "2554960"
  },
  {
    "text": "a little bit confused on how this defer works with the roll back and commit does it does the commit the",
    "start": "2554960",
    "end": "2562400"
  },
  {
    "text": "commits obviously whether or not it got an error does it always roll back 100% of the",
    "start": "2562400",
    "end": "2568720"
  },
  {
    "text": "time squeal light and lip squeal are the same API like cockroach with postre uh",
    "start": "2569760",
    "end": "2575119"
  },
  {
    "text": "I'm not sure if I I I thought they're like one to one the same they're like they're effectively the same uh it's a",
    "start": "2575119",
    "end": "2582040"
  },
  {
    "text": "NOP is commit was successful",
    "start": "2582040",
    "end": "2587319"
  },
  {
    "text": "okay no because it checks the objects oh okay okay so it does check all that okay",
    "start": "2587319",
    "end": "2592760"
  },
  {
    "text": "okay well neat neat all right so I guess we just got to",
    "start": "2592760",
    "end": "2598640"
  },
  {
    "text": "make our choice and we got to go with one of them and we got us just start building stuff uh have you looked at the yes I",
    "start": "2598640",
    "end": "2608440"
  },
  {
    "text": "have this is what we'll be using right we'll be using that to open it up but",
    "start": "2608640",
    "end": "2614280"
  },
  {
    "text": "then we get a DB right so I assume that's can I integrate",
    "start": "2614280",
    "end": "2619599"
  },
  {
    "text": "I mean I guess the real question is can I integrate this with squal",
    "start": "2619599",
    "end": "2625319"
  },
  {
    "text": "C I think you should probably watch eight to 10 more tutorial videos before actually writing code best way to learn",
    "start": "2625480",
    "end": "2632200"
  },
  {
    "text": "you think so I'm doing two or so stuff again yeah we're starting right now TJ I'm just",
    "start": "2632200",
    "end": "2638359"
  },
  {
    "text": "reading through the stuff TJ yeah TJ Get",
    "start": "2638359",
    "end": "2643599"
  },
  {
    "text": "Wrecked Get Wrecked I do like this right here welcome to CR hey thank you Pizza",
    "start": "2643599",
    "end": "2651520"
  },
  {
    "text": "how you doing agreed more more tutorials I do like this this is one thing that I'm very excited about with sque uh with",
    "start": "2651520",
    "end": "2657720"
  },
  {
    "text": "uh lib squeal is the fact that this exists right here right is that you do your turo one or you do to a file",
    "start": "2657720",
    "end": "2666960"
  },
  {
    "text": "and for me this is like this is such a compelling case this is such a compelling case for me cuz then you can",
    "start": "2666960",
    "end": "2673240"
  },
  {
    "text": "actually write more fully-fledged tests to actually validate",
    "start": "2673240",
    "end": "2678960"
  },
  {
    "text": "something like happens you know what I",
    "start": "2678960",
    "end": "2683640"
  },
  {
    "text": "mean uh reading is for losers yeah very nice okay so this is good all",
    "start": "2684720",
    "end": "2690559"
  },
  {
    "text": "right file based DB testing is stons dude it is stons what's too uh is that",
    "start": "2690559",
    "end": "2695800"
  },
  {
    "text": "the uh that thing you will make you come to Brazil yes so turo if you don't know what too. tech is uh if you want a nice",
    "start": "2695800",
    "end": "2702359"
  },
  {
    "text": "sweet sweet thing go to Prime Brazil right and they're going to fly me to Brazil but they they effectively are an",
    "start": "2702359",
    "end": "2708440"
  },
  {
    "text": "edge based database right that's how you can think of them is that they provide a way for",
    "start": "2708440",
    "end": "2714240"
  },
  {
    "text": "you to use squeal light across the world and they have they have really really",
    "start": "2714240",
    "end": "2720079"
  },
  {
    "text": "cheap plans as it is and so pretty fantastic so I I'm",
    "start": "2720079",
    "end": "2725559"
  },
  {
    "text": "going to give a rip and see if I can create a 50,000 database squeal light",
    "start": "2725559",
    "end": "2732240"
  },
  {
    "text": "experience choose squeal X nerd I think I'm G to choose squeal",
    "start": "2732920",
    "end": "2739200"
  },
  {
    "text": "C though squeal X does sound really good I don't know what what do you guys think let's let's let's see what you guys",
    "start": "2739200",
    "end": "2745280"
  },
  {
    "text": "think because they I can see why I like the idea of squeal X cuz sque X is just going to be simpler",
    "start": "2745280",
    "end": "2751680"
  },
  {
    "text": "I just literally just raw dog the thing right just I just literally just you you just raw dog the dang thing and that's",
    "start": "2751680",
    "end": "2757760"
  },
  {
    "text": "that uh squeal squeal X versus squeal C",
    "start": "2757760",
    "end": "2764319"
  },
  {
    "text": "right welcome to Costco I love you now the real question you got to answer yourself is will I pick the opposite of",
    "start": "2764319",
    "end": "2770839"
  },
  {
    "text": "what you guys picked just to spite you or not I think that's going to",
    "start": "2770839",
    "end": "2775800"
  },
  {
    "text": "be very interesting you wrote this uh at some point I could read that I'm not",
    "start": "2776559",
    "end": "2782839"
  },
  {
    "text": "really in the uh the old migration land oops writing it in no cam yeah right so which one are we going to go with squeal",
    "start": "2782839",
    "end": "2788000"
  },
  {
    "text": "X or squeal C skill C issue yeah if that case the vote doesn't matter that's",
    "start": "2788000",
    "end": "2796318"
  },
  {
    "text": "right got to play Both Sides School SE neither uh c queel x",
    "start": "2796760",
    "end": "2803079"
  },
  {
    "text": "gonna give it to you damn go is talking C is before X after all all right I'm gonna go P I'll be",
    "start": "2803079",
    "end": "2808599"
  },
  {
    "text": "right back but I like I'm not surprised by this hey thank you welcome to Costco",
    "start": "2808599",
    "end": "2813720"
  },
  {
    "text": "I love you",
    "start": "2813720",
    "end": "2817800"
  },
  {
    "text": "he",
    "start": "2844720",
    "end": "2847720"
  },
  {
    "text": "for",
    "start": "2874720",
    "end": "2877720"
  },
  {
    "text": "all right hey hey Simo grip thank you and uh Seth seel appreciate that all",
    "start": "2883559",
    "end": "2890800"
  },
  {
    "text": "right so looks like people mostly want squeal C when will the blue go",
    "start": "2890800",
    "end": "2897920"
  },
  {
    "text": "away about two weeks probably probably about two",
    "start": "2897920",
    "end": "2904079"
  },
  {
    "text": "weeks Okay squil C can't do Oracle it seems",
    "start": "2904640",
    "end": "2909760"
  },
  {
    "text": "okay well Dodge the bullet on that one start with squeal X it's simpler yeah",
    "start": "2909760",
    "end": "2915359"
  },
  {
    "text": "see I kind of feel see that's squeal C 69 was so close I know",
    "start": "2915359",
    "end": "2921200"
  },
  {
    "text": "squeal X is way [Music] better see everybody has uh what if we",
    "start": "2921200",
    "end": "2927960"
  },
  {
    "text": "do 2K and again in two weeks I'm not I'm not going to do I'm not I'm not making that bet again okay",
    "start": "2927960",
    "end": "2936280"
  },
  {
    "text": "SW x no activity for the last three years I know everyone keeps saying that okay guys stop it stop stop stop stop",
    "start": "2936280",
    "end": "2943040"
  },
  {
    "text": "stop stop that's not squeal X is dead simple but I haven't tried sque c yeah",
    "start": "2943040",
    "end": "2948319"
  },
  {
    "text": "sque okay so I guess we're going to have to what what",
    "start": "2948319",
    "end": "2953720"
  },
  {
    "text": "are my thoughts on web 3 um it's it's a hyper inefficient technology I mean it's interesting but it's hyper",
    "start": "2953720",
    "end": "2959680"
  },
  {
    "text": "inefficient that's my general thoughts on it uh the reality is I know it's supposed",
    "start": "2959680",
    "end": "2966640"
  },
  {
    "text": "to be distributed it's supposed to be all these kind of things but at the end of the day for you like even just take ethereum to set up like a GU node and",
    "start": "2966640",
    "end": "2972920"
  },
  {
    "text": "all that kind of stuff there's few people that are actually doing it it's it's as it's as it's",
    "start": "2972920",
    "end": "2980359"
  },
  {
    "text": "more it's like less free market than anything else if that makes",
    "start": "2980359",
    "end": "2986359"
  },
  {
    "text": "sense uh the last I appreciate that uh and Vic fault",
    "start": "2986359",
    "end": "2992359"
  },
  {
    "text": "appreciate that let's go there you go so that's my true opinion on just web 3 in general like not not nfts and all that",
    "start": "2992359",
    "end": "2998559"
  },
  {
    "text": "do both squeal X and sque c and see which one is better I think I might have to do",
    "start": "2998559",
    "end": "3003920"
  },
  {
    "text": "that uh web 3 is a cool technology used for pointless things well it's it's a it's a",
    "start": "3003920",
    "end": "3009440"
  },
  {
    "text": "novel technology but it's it's also just like hyper",
    "start": "3009440",
    "end": "3014720"
  },
  {
    "text": "inefficient right even the most let's say I'm using sque X and prod is basically useful for mapping a struct",
    "start": "3014720",
    "end": "3020960"
  },
  {
    "text": "Fields see I like I mean I do like the Simplicity of it uh",
    "start": "3020960",
    "end": "3027440"
  },
  {
    "text": "let's see do which one do I want to commit to because I the reason why I'm thinking about this is that I'm thinking about uh like uh because I need to set",
    "start": "3029200",
    "end": "3035359"
  },
  {
    "text": "up air and so if I'm going to set up air well then I got this whole problem where",
    "start": "3035359",
    "end": "3040440"
  },
  {
    "text": "if I'm setting up air just like Temple when you use Temple you have the same problem you you use air to build but",
    "start": "3040440",
    "end": "3045799"
  },
  {
    "text": "then you have to have these like pre-build steps and I don't remember blockchain is the shittiest",
    "start": "3045799",
    "end": "3051319"
  },
  {
    "text": "technology it is it's truly astounding how bad it actually is like performance- wise and what it takes to accomplish",
    "start": "3051319",
    "end": "3057200"
  },
  {
    "text": "anything it's truly incredible type safety versus Simplicity I'm just kind",
    "start": "3057200",
    "end": "3062599"
  },
  {
    "text": "of think I'm just I'm just going to take a moment I'm just letting myself stew for a second in what I've seen you know",
    "start": "3062599",
    "end": "3067640"
  },
  {
    "text": "what I mean let's let's see uh your hair is invisible I know with temple we have",
    "start": "3067640",
    "end": "3073000"
  },
  {
    "text": "two separate processes going I can give uh I can uh let's see I can give you the make and Discord well I'm going to just",
    "start": "3073000",
    "end": "3078520"
  },
  {
    "text": "be using air air all right so I guess what should I use now let's go to air",
    "start": "3078520",
    "end": "3084200"
  },
  {
    "text": "air a goang and let's get that set up I'm using air yeah Air's great go",
    "start": "3084200",
    "end": "3090880"
  },
  {
    "text": "generate amazing feature air air air",
    "start": "3090880",
    "end": "3096000"
  },
  {
    "text": "motivation yeah blah blah all right so we go install it you go get it air at the latest it's fantastic do a Docker",
    "start": "3096000",
    "end": "3103119"
  },
  {
    "text": "blah blah no one cares about any of those things path to your project and you got to do a little air C toml okay air in it uh you can initialize air with",
    "start": "3103119",
    "end": "3110000"
  },
  {
    "text": "this one okay let's do a little air AIT I haven't I haven't done a little air a knit yet I'm kind of just stalling for a",
    "start": "3110000",
    "end": "3116119"
  },
  {
    "text": "second as I'm just thinking about it does that make",
    "start": "3116119",
    "end": "3120240"
  },
  {
    "text": "sense all right so what do we got here we got our root we got our testator we got the temporary that's where our Bin's",
    "start": "3126880",
    "end": "3132599"
  },
  {
    "text": "going to be um I'll just ignore that right",
    "start": "3132599",
    "end": "3140400"
  },
  {
    "text": "now ah I can't find files that are in visible I can't find files that are",
    "start": "3142280",
    "end": "3147319"
  },
  {
    "text": "visible TJ help um uh a time-saving make file for your",
    "start": "3147319",
    "end": "3152760"
  },
  {
    "text": "go projects okay okay interesting let's let's see this let's check out this guy quick tip time saving make fail for your",
    "start": "3152760",
    "end": "3159280"
  },
  {
    "text": "go projects Okay blah blah I just want to see what it has to say",
    "start": "3159280",
    "end": "3164559"
  },
  {
    "text": "uh okay I like I mean I like all these",
    "start": "3173760",
    "end": "3178520"
  },
  {
    "text": "things I don't know what I don't I don't know what these are I I don't know what those two do oh",
    "start": "3179599",
    "end": "3186079"
  },
  {
    "text": "race condition stuff okay cool so there's like a lot of pretty cool stuff right here uh there's an air stuff okay nice",
    "start": "3186079",
    "end": "3195119"
  },
  {
    "text": "nice go run air nice go oh I didn't know you could do this oh that's pretty cool I didn't know",
    "start": "3199079",
    "end": "3207880"
  },
  {
    "text": "you could do this with go you can just go run at a certain",
    "start": "3207880",
    "end": "3212960"
  },
  {
    "text": "version and it just like it just runs the thing Russ needs a deadlock detector",
    "start": "3212960",
    "end": "3218599"
  },
  {
    "text": "it's that's cool and mky outdid himself go blueprint",
    "start": "3218599",
    "end": "3223720"
  },
  {
    "text": "is pretty sweet I don't know go Blue go blueprint all right this is a pretty",
    "start": "3223720",
    "end": "3230200"
  },
  {
    "text": "great make file we do a little build and all this",
    "start": "3230200",
    "end": "3235640"
  },
  {
    "text": "kind of stuff okay so this is a pretty good little this is a pretty good little make file I like this Alber to De",
    "start": "3235640",
    "end": "3240960"
  },
  {
    "text": "appreciate that go to is yeah go go is pretty great Alex is great okay so this",
    "start": "3240960",
    "end": "3246799"
  },
  {
    "text": "is literally the entirety of the make",
    "start": "3246799",
    "end": "3250280"
  },
  {
    "text": "file interesting all right let's just let's let's let's see what we got here let's",
    "start": "3254200",
    "end": "3259640"
  },
  {
    "text": "see what we got here let's let's see what we got here",
    "start": "3259640",
    "end": "3266640"
  },
  {
    "text": "uh let's see okay before I go I",
    "start": "3266640",
    "end": "3271000"
  },
  {
    "text": "think before I go I got to say this hey the name is the prime gen oh this is done with this section of the video I'm",
    "start": "3275319",
    "end": "3282000"
  },
  {
    "text": "going to choose I'm going to choose I'm going to choose squeel",
    "start": "3282000",
    "end": "3290599"
  },
  {
    "text": "X for convenience",
    "start": "3290599",
    "end": "3295799"
  },
  {
    "text": "I'm I'm G to choose sque X and then we'll go you son of a [ __ ] and then W sex for",
    "start": "3295799",
    "end": "3305280"
  },
  {
    "text": "short yep uh I knew it good call and then I'll probably do squealy and try them both out for a",
    "start": "3305280",
    "end": "3312240"
  },
  {
    "text": "second and see kind of how they feel you know what I mean you bastard I",
    "start": "3312240",
    "end": "3317599"
  },
  {
    "text": "know you're welcome all right bye",
    "start": "3317599",
    "end": "3324558"
  }
]