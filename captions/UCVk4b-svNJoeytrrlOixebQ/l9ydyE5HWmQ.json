[
  {
    "text": "as far as I can understand it pretty",
    "start": "359",
    "end": "1480"
  },
  {
    "text": "much tries to memorize everything it can",
    "start": "1480",
    "end": "3199"
  },
  {
    "text": "oh interesting is memorization like",
    "start": "3199",
    "end": "4839"
  },
  {
    "text": "storing results yeah for those that",
    "start": "4839",
    "end": "6160"
  },
  {
    "text": "don't know what memorization is or as",
    "start": "6160",
    "end": "8000"
  },
  {
    "text": "some people will call it memoization",
    "start": "8000",
    "end": "9800"
  },
  {
    "text": "mimo uh it's actually pretty",
    "start": "9800",
    "end": "11719"
  },
  {
    "text": "straightforward the simplest version of",
    "start": "11719",
    "end": "13960"
  },
  {
    "text": "this is imagine you have a function f",
    "start": "13960",
    "end": "16720"
  },
  {
    "text": "ofx uh produces y right so here's a very",
    "start": "16720",
    "end": "20359"
  },
  {
    "text": "simple version of it let's just say we",
    "start": "20359",
    "end": "22480"
  },
  {
    "text": "pass in x0 and x0 does some compute and",
    "start": "22480",
    "end": "26080"
  },
  {
    "text": "then produces y well if I repass in and",
    "start": "26080",
    "end": "28800"
  },
  {
    "text": "it produces say y0 if I repass in x0",
    "start": "28800",
    "end": "32439"
  },
  {
    "text": "well it already knows the answer right",
    "start": "32439",
    "end": "34200"
  },
  {
    "text": "so if it's a pure function in other",
    "start": "34200",
    "end": "36040"
  },
  {
    "text": "words it's a function that doesn't have",
    "start": "36040",
    "end": "37440"
  },
  {
    "text": "any Reliance on any other input other",
    "start": "37440",
    "end": "40360"
  },
  {
    "text": "than the arguments that are passed into",
    "start": "40360",
    "end": "41960"
  },
  {
    "text": "it then theoretically you should be able",
    "start": "41960",
    "end": "44840"
  },
  {
    "text": "to pass an x0 and you should be able to",
    "start": "44840",
    "end": "47239"
  },
  {
    "text": "get the exact same y z out every single",
    "start": "47239",
    "end": "50199"
  },
  {
    "text": "time so you could imagine that what you",
    "start": "50199",
    "end": "52280"
  },
  {
    "text": "could have the simplest version would be",
    "start": "52280",
    "end": "54320"
  },
  {
    "text": "um uh the following here let's just uh",
    "start": "54320",
    "end": "57039"
  },
  {
    "text": "test.ts even though I don't have TS uh",
    "start": "57039",
    "end": "59640"
  },
  {
    "text": "let's just pretend this uh uh function W",
    "start": "59640",
    "end": "62000"
  },
  {
    "text": "that's that's go memo and this is a",
    "start": "62000",
    "end": "64518"
  },
  {
    "text": "function right and you could return a",
    "start": "64519",
    "end": "66680"
  },
  {
    "text": "function any I think there we go I think",
    "start": "66680",
    "end": "69080"
  },
  {
    "text": "I think that's what it's supposed to be",
    "start": "69080",
    "end": "70600"
  },
  {
    "text": "something along those lines right uh",
    "start": "70600",
    "end": "72720"
  },
  {
    "text": "it's it's been a little bit I don't even",
    "start": "72720",
    "end": "74400"
  },
  {
    "text": "I don't even have node installed so I",
    "start": "74400",
    "end": "75640"
  },
  {
    "text": "get no compiler warnings but you can",
    "start": "75640",
    "end": "77119"
  },
  {
    "text": "imagine it takes in all these things and",
    "start": "77119",
    "end": "79119"
  },
  {
    "text": "what you could do is you could go you",
    "start": "79119",
    "end": "81040"
  },
  {
    "text": "know uh preve for whatever reason uh",
    "start": "81040",
    "end": "83799"
  },
  {
    "text": "preve equals uh uh n nil uh and actually",
    "start": "83799",
    "end": "89040"
  },
  {
    "text": "let's go like this let's just make it",
    "start": "89040",
    "end": "90360"
  },
  {
    "text": "easier let's just call this thing uh X",
    "start": "90360",
    "end": "92399"
  },
  {
    "text": "which is an",
    "start": "92399",
    "end": "94399"
  },
  {
    "text": "any uh x uh X in which is an any and if",
    "start": "94399",
    "end": "99360"
  },
  {
    "text": "uh x equals X in or if",
    "start": "99360",
    "end": "103240"
  },
  {
    "text": "preve equals X in then return",
    "start": "103240",
    "end": "106840"
  },
  {
    "text": "uh you know return out you could imagine",
    "start": "106840",
    "end": "109880"
  },
  {
    "text": "that else we would do something where",
    "start": "109880",
    "end": "111439"
  },
  {
    "text": "we'd have to go like FX in equals",
    "start": "111439",
    "end": "115159"
  },
  {
    "text": "preve and then there we go there's our",
    "start": "115159",
    "end": "117320"
  },
  {
    "text": "previous one or our previous would be uh",
    "start": "117320",
    "end": "119960"
  },
  {
    "text": "X in uh our out would equal function X",
    "start": "119960",
    "end": "125439"
  },
  {
    "text": "in right there we go and then we would",
    "start": "125439",
    "end": "127640"
  },
  {
    "text": "just simply return out so now we have",
    "start": "127640",
    "end": "130000"
  },
  {
    "text": "this beautiful little thing and so there",
    "start": "130000",
    "end": "132480"
  },
  {
    "text": "you go that's like the world's simplest",
    "start": "132480",
    "end": "133720"
  },
  {
    "text": "memorization right there I know it's",
    "start": "133720",
    "end": "135720"
  },
  {
    "text": "just like you're just you're just",
    "start": "135720",
    "end": "137160"
  },
  {
    "text": "cashing the previous result and if the",
    "start": "137160",
    "end": "138760"
  },
  {
    "text": "previous one happens to equal the new",
    "start": "138760",
    "end": "140120"
  },
  {
    "text": "one coming in then there you go bada",
    "start": "140120",
    "end": "141840"
  },
  {
    "text": "bing bada boom right it's very very",
    "start": "141840",
    "end": "143879"
  },
  {
    "text": "simple so those so it's just caching",
    "start": "143879",
    "end": "145440"
  },
  {
    "text": "you're just caching the previous call",
    "start": "145440",
    "end": "146959"
  },
  {
    "text": "sorry I I don't have node installed I",
    "start": "146959",
    "end": "148640"
  },
  {
    "text": "probably should have just done this and",
    "start": "148640",
    "end": "149599"
  },
  {
    "text": "go",
    "start": "149599",
    "end": "150400"
  },
  {
    "text": "uh but there you go you get the idea so",
    "start": "150400",
    "end": "152080"
  },
  {
    "text": "that's memorization in its simplest form",
    "start": "152080",
    "end": "154239"
  },
  {
    "text": "so the idea the idea effectively is is",
    "start": "154239",
    "end": "156560"
  },
  {
    "text": "that if this function is a sufficiently",
    "start": "156560",
    "end": "158160"
  },
  {
    "text": "fun uh complex function right uh complex",
    "start": "158160",
    "end": "161239"
  },
  {
    "text": "uh function right which takes in you",
    "start": "161239",
    "end": "163640"
  },
  {
    "text": "know you know four uh I equals zero I",
    "start": "163640",
    "end": "166680"
  },
  {
    "text": "has to be less than you know a bunch",
    "start": "166680",
    "end": "168959"
  },
  {
    "text": "right you could imagine oh my goodness",
    "start": "168959",
    "end": "171239"
  },
  {
    "text": "mixing these languages is hard you could",
    "start": "171239",
    "end": "173040"
  },
  {
    "text": "imagine you have to do a bunch of stuff",
    "start": "173040",
    "end": "174519"
  },
  {
    "text": "and then you return some you know some",
    "start": "174519",
    "end": "176599"
  },
  {
    "text": "value out you'd probably want to not do",
    "start": "176599",
    "end": "178959"
  },
  {
    "text": "that all the time",
    "start": "178959",
    "end": "181840"
  }
]